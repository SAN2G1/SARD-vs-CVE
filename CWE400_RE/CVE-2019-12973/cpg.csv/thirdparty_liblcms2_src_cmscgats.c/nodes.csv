command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	701739	File	data/converged/CVE-2019-12973_openjpeg/thirdparty_liblcms2_src_cmscgats.c								
ANR	701740	ClassDef	<unnamed>	49:8:1916:2411							
ANR	701741	DeclStmt									
ANR	701742	Decl									SYMBOL
ANR	701743	ClassDef	<unnamed>	75:8:2449:2590							
ANR	701744	DeclStmt									
ANR	701745	Decl									WRITEMODE
ANR	701746	ClassDef	_KeyVal	86:8:2634:3066							
ANR	701747	DeclStmt									
ANR	701748	Decl							struct _KeyVal	struct _KeyVal *	Next
ANR	701749	DeclStmt									
ANR	701750	Decl							char	char *	Keyword
ANR	701751	DeclStmt									
ANR	701752	Decl							struct _KeyVal	struct _KeyVal *	NextSubkey
ANR	701753	DeclStmt									
ANR	701754	Decl							char	char *	Subkey
ANR	701755	DeclStmt									
ANR	701756	Decl							char	char *	Value
ANR	701757	DeclStmt									
ANR	701758	Decl							WRITEMODE	WRITEMODE	WriteAs
ANR	701759	DeclStmt									
ANR	701760	Decl							_KeyVal	_KeyVal	KEYVALUE
ANR	701761	ClassDef	_OwnedMem	99:8:3124:3248							
ANR	701762	DeclStmt									
ANR	701763	Decl							struct _OwnedMem	struct _OwnedMem *	Next
ANR	701764	DeclStmt									
ANR	701765	Decl							void	void *	Ptr
ANR	701766	DeclStmt									
ANR	701767	Decl							_OwnedMem	_OwnedMem	OWNEDMEM
ANR	701768	ClassDef	_SubAllocator	107:8:3275:3417							
ANR	701769	DeclStmt									
ANR	701770	Decl							cmsUInt8Number	cmsUInt8Number *	Block
ANR	701771	DeclStmt									
ANR	701772	Decl							cmsUInt32Number	cmsUInt32Number	BlockSize
ANR	701773	DeclStmt									
ANR	701774	Decl							cmsUInt32Number	cmsUInt32Number	Used
ANR	701775	DeclStmt									
ANR	701776	Decl							_SubAllocator	_SubAllocator	SUBALLOCATOR
ANR	701777	ClassDef	_Table	116:8:3496:3941							
ANR	701778	DeclStmt									
ANR	701779	Decl							char	char [ MAXSTR ]	SheetType
ANR	701780	DeclStmt									
ANR	701781	Decl							int	int	nSamples
ANR	701782	Decl							int	int	nPatches
ANR	701783	DeclStmt									
ANR	701784	Decl							int	int	SampleID
ANR	701785	DeclStmt									
ANR	701786	Decl							KEYVALUE	KEYVALUE *	HeaderList
ANR	701787	DeclStmt									
ANR	701788	Decl							char	char * *	DataFormat
ANR	701789	DeclStmt									
ANR	701790	Decl							char	char * *	Data
ANR	701791	DeclStmt									
ANR	701792	Decl							_Table	_Table	TABLE
ANR	701793	ClassDef	_FileContext	131:8:3980:4195							
ANR	701794	DeclStmt									
ANR	701795	Decl							char	char [ cmsMAX_PATH ]	FileName
ANR	701796	DeclStmt									
ANR	701797	Decl							FILE	FILE *	Stream
ANR	701798	DeclStmt									
ANR	701799	Decl							_FileContext	_FileContext	FILECTX
ANR	701800	ClassDef	<unnamed>	137:8:4269:5804							
ANR	701801	DeclStmt									
ANR	701802	Decl							cmsUInt32Number	cmsUInt32Number	TablesCount
ANR	701803	DeclStmt									
ANR	701804	Decl							cmsUInt32Number	cmsUInt32Number	nTable
ANR	701805	DeclStmt									
ANR	701806	Decl							TABLE	TABLE [ MAXTABLES ]	Tab
ANR	701807	DeclStmt									
ANR	701808	Decl							OWNEDMEM	OWNEDMEM *	MemorySink
ANR	701809	DeclStmt									
ANR	701810	Decl							SUBALLOCATOR	SUBALLOCATOR	Allocator
ANR	701811	DeclStmt									
ANR	701812	Decl							SYMBOL	SYMBOL	sy
ANR	701813	DeclStmt									
ANR	701814	Decl							int	int	ch
ANR	701815	DeclStmt									
ANR	701816	Decl							int	int	inum
ANR	701817	DeclStmt									
ANR	701818	Decl							cmsFloat64Number	cmsFloat64Number	dnum
ANR	701819	DeclStmt									
ANR	701820	Decl							char	char [ MAXID ]	id
ANR	701821	DeclStmt									
ANR	701822	Decl							char	char [ MAXSTR ]	str
ANR	701823	DeclStmt									
ANR	701824	Decl							KEYVALUE	KEYVALUE *	ValidKeywords
ANR	701825	DeclStmt									
ANR	701826	Decl							KEYVALUE	KEYVALUE *	ValidSampleID
ANR	701827	DeclStmt									
ANR	701828	Decl							char	char *	Source
ANR	701829	DeclStmt									
ANR	701830	Decl							int	int	lineno
ANR	701831	DeclStmt									
ANR	701832	Decl							FILECTX	FILECTX * [ MAXINCLUDE ]	FileStack
ANR	701833	DeclStmt									
ANR	701834	Decl							int	int	IncludeSP
ANR	701835	DeclStmt									
ANR	701836	Decl							char	char *	MemoryBlock
ANR	701837	DeclStmt									
ANR	701838	Decl							char	char [ MAXID ]	DoubleFormatter
ANR	701839	DeclStmt									
ANR	701840	Decl							cmsContext	cmsContext	ContextID
ANR	701841	DeclStmt									
ANR	701842	Decl									cmsIT8
ANR	701843	ClassDef	<unnamed>	178:8:5850:6086							
ANR	701844	DeclStmt									
ANR	701845	Decl							FILE	FILE *	stream
ANR	701846	DeclStmt									
ANR	701847	Decl							cmsUInt8Number	cmsUInt8Number *	Base
ANR	701848	DeclStmt									
ANR	701849	Decl							cmsUInt8Number	cmsUInt8Number *	Ptr
ANR	701850	DeclStmt									
ANR	701851	Decl							cmsUInt32Number	cmsUInt32Number	Used
ANR	701852	DeclStmt									
ANR	701853	Decl							cmsUInt32Number	cmsUInt32Number	Max
ANR	701854	DeclStmt									
ANR	701855	Decl									SAVESTREAM
ANR	701856	ClassDef	<unnamed>	194:8:6195:6261							
ANR	701857	DeclStmt									
ANR	701858	Decl							const char	const char *	id
ANR	701859	DeclStmt									
ANR	701860	Decl							SYMBOL	SYMBOL	sy
ANR	701861	DeclStmt									
ANR	701862	Decl									KEYWORD
ANR	701863	DeclStmt									
ANR	701864	Decl							const KEYWORD	const KEYWORD [ ]	TabKeys
ANR	701865	ClassDef	<unnamed>	220:8:6927:7055							
ANR	701866	DeclStmt									
ANR	701867	Decl							const char	const char *	id
ANR	701868	DeclStmt									
ANR	701869	Decl							WRITEMODE	WRITEMODE	as
ANR	701870	DeclStmt									
ANR	701871	Decl									PROPERTY
ANR	701872	DeclStmt									
ANR	701873	Decl							PROPERTY	PROPERTY [ ]	PredefinedProperties
ANR	701874	DeclStmt									
ANR	701875	Decl							const char	const char * [ ]	PredefinedSampleID
ANR	701876	DeclStmt									
ANR	701877	Decl							void	"void * ( cmsIT8 * it8 , cmsUInt32Number size )"	AllocChunk
ANR	701878	Function	isseparator	358:0:16231:16307							
ANR	701879	FunctionDef	isseparator (int c)		701878	0					
ANR	701880	CompoundStatement		360:0:16265:16307	701878	0					
ANR	701881	ReturnStatement	return ( c == ' ' ) || ( c == '\\t' ) ;	361:4:16271:16304	701878	0	True				
ANR	701882	OrExpression	( c == ' ' ) || ( c == '\\t' )		701878	0		||			
ANR	701883	EqualityExpression	c == ' '		701878	0		==			
ANR	701884	Identifier	c		701878	0					
ANR	701885	PrimaryExpression	' '		701878	1					
ANR	701886	EqualityExpression	c == '\\t'		701878	1		==			
ANR	701887	Identifier	c		701878	0					
ANR	701888	PrimaryExpression	'\\t'		701878	1					
ANR	701889	ReturnType	static cmsBool		701878	1					
ANR	701890	Identifier	isseparator		701878	2					
ANR	701891	ParameterList	int c		701878	3					
ANR	701892	Parameter	int c	359:20:16258:16262	701878	0	True				
ANR	701893	ParameterType	int		701878	0					
ANR	701894	Identifier	c		701878	1					
ANR	701895	CFGEntryNode	ENTRY		701878		True				
ANR	701896	CFGExitNode	EXIT		701878		True				
ANR	701897	Symbol	c		701878						
ANR	701898	Function	ismiddle	365:0:16358:16488							
ANR	701899	FunctionDef	ismiddle (int c)		701898	0					
ANR	701900	CompoundStatement		367:0:16389:16488	701898	0					
ANR	701901	ReturnStatement	"return ( ! isseparator ( c ) && ( c != '#' ) && ( c != '\\""' ) && ( c != '\\'' ) && ( c > 32 ) && ( c < 127 ) ) ;"	368:3:16394:16486	701898	0	True				
ANR	701902	AndExpression	"! isseparator ( c ) && ( c != '#' ) && ( c != '\\""' ) && ( c != '\\'' ) && ( c > 32 ) && ( c < 127 )"		701898	0		&&			
ANR	701903	UnaryOperationExpression	! isseparator ( c )		701898	0					
ANR	701904	UnaryOperator	!		701898	0					
ANR	701905	CallExpression	isseparator ( c )		701898	1					
ANR	701906	Callee	isseparator		701898	0					
ANR	701907	Identifier	isseparator		701898	0					
ANR	701908	ArgumentList	c		701898	1					
ANR	701909	Argument	c		701898	0					
ANR	701910	Identifier	c		701898	0					
ANR	701911	AndExpression	"( c != '#' ) && ( c != '\\""' ) && ( c != '\\'' ) && ( c > 32 ) && ( c < 127 )"		701898	1		&&			
ANR	701912	EqualityExpression	c != '#'		701898	0		!=			
ANR	701913	Identifier	c		701898	0					
ANR	701914	PrimaryExpression	'#'		701898	1					
ANR	701915	AndExpression	"( c != '\\""' ) && ( c != '\\'' ) && ( c > 32 ) && ( c < 127 )"		701898	1		&&			
ANR	701916	EqualityExpression	"c != '\\""'"		701898	0		!=			
ANR	701917	Identifier	c		701898	0					
ANR	701918	PrimaryExpression	"'\\""'"		701898	1					
ANR	701919	AndExpression	( c != '\\'' ) && ( c > 32 ) && ( c < 127 )		701898	1		&&			
ANR	701920	EqualityExpression	c != '\\''		701898	0		!=			
ANR	701921	Identifier	c		701898	0					
ANR	701922	PrimaryExpression	'\\''		701898	1					
ANR	701923	AndExpression	( c > 32 ) && ( c < 127 )		701898	1		&&			
ANR	701924	RelationalExpression	c > 32		701898	0		>			
ANR	701925	Identifier	c		701898	0					
ANR	701926	PrimaryExpression	32		701898	1					
ANR	701927	RelationalExpression	c < 127		701898	1		<			
ANR	701928	Identifier	c		701898	0					
ANR	701929	PrimaryExpression	127		701898	1					
ANR	701930	ReturnType	static cmsBool		701898	1					
ANR	701931	Identifier	ismiddle		701898	2					
ANR	701932	ParameterList	int c		701898	3					
ANR	701933	Parameter	int c	366:17:16382:16386	701898	0	True				
ANR	701934	ParameterType	int		701898	0					
ANR	701935	Identifier	c		701898	1					
ANR	701936	CFGEntryNode	ENTRY		701898		True				
ANR	701937	CFGExitNode	EXIT		701898		True				
ANR	701938	Symbol	c		701898						
ANR	701939	Symbol	isseparator		701898						
ANR	701940	Function	isidchar	372:0:16548:16618							
ANR	701941	FunctionDef	isidchar (int c)		701940	0					
ANR	701942	CompoundStatement		374:0:16579:16618	701940	0					
ANR	701943	ReturnStatement	return isalnum ( c ) || ismiddle ( c ) ;	375:3:16584:16616	701940	0	True				
ANR	701944	OrExpression	isalnum ( c ) || ismiddle ( c )		701940	0		||			
ANR	701945	CallExpression	isalnum ( c )		701940	0					
ANR	701946	Callee	isalnum		701940	0					
ANR	701947	Identifier	isalnum		701940	0					
ANR	701948	ArgumentList	c		701940	1					
ANR	701949	Argument	c		701940	0					
ANR	701950	Identifier	c		701940	0					
ANR	701951	CallExpression	ismiddle ( c )		701940	1					
ANR	701952	Callee	ismiddle		701940	0					
ANR	701953	Identifier	ismiddle		701940	0					
ANR	701954	ArgumentList	c		701940	1					
ANR	701955	Argument	c		701940	0					
ANR	701956	Identifier	c		701940	0					
ANR	701957	ReturnType	static cmsBool		701940	1					
ANR	701958	Identifier	isidchar		701940	2					
ANR	701959	ParameterList	int c		701940	3					
ANR	701960	Parameter	int c	373:17:16572:16576	701940	0	True				
ANR	701961	ParameterType	int		701940	0					
ANR	701962	Identifier	c		701940	1					
ANR	701963	CFGEntryNode	ENTRY		701940		True				
ANR	701964	CFGExitNode	EXIT		701940		True				
ANR	701965	Symbol	ismiddle		701940						
ANR	701966	Symbol	c		701940						
ANR	701967	Symbol	isalnum		701940						
ANR	701968	Function	isfirstidchar	379:0:16677:16755							
ANR	701969	FunctionDef	isfirstidchar (int c)		701968	0					
ANR	701970	CompoundStatement		381:0:16713:16755	701968	0					
ANR	701971	ReturnStatement	return ! isdigit ( c ) && ismiddle ( c ) ;	382:5:16720:16753	701968	0	True				
ANR	701972	AndExpression	! isdigit ( c ) && ismiddle ( c )		701968	0		&&			
ANR	701973	UnaryOperationExpression	! isdigit ( c )		701968	0					
ANR	701974	UnaryOperator	!		701968	0					
ANR	701975	CallExpression	isdigit ( c )		701968	1					
ANR	701976	Callee	isdigit		701968	0					
ANR	701977	Identifier	isdigit		701968	0					
ANR	701978	ArgumentList	c		701968	1					
ANR	701979	Argument	c		701968	0					
ANR	701980	Identifier	c		701968	0					
ANR	701981	CallExpression	ismiddle ( c )		701968	1					
ANR	701982	Callee	ismiddle		701968	0					
ANR	701983	Identifier	ismiddle		701968	0					
ANR	701984	ArgumentList	c		701968	1					
ANR	701985	Argument	c		701968	0					
ANR	701986	Identifier	c		701968	0					
ANR	701987	ReturnType	static cmsBool		701968	1					
ANR	701988	Identifier	isfirstidchar		701968	2					
ANR	701989	ParameterList	int c		701968	3					
ANR	701990	Parameter	int c	380:22:16706:16710	701968	0	True				
ANR	701991	ParameterType	int		701968	0					
ANR	701992	Identifier	c		701968	1					
ANR	701993	CFGEntryNode	ENTRY		701968		True				
ANR	701994	CFGExitNode	EXIT		701968		True				
ANR	701995	Symbol	ismiddle		701968						
ANR	701996	Symbol	c		701968						
ANR	701997	Symbol	isdigit		701968						
ANR	701998	Function	isabsolutepath	386:0:16821:17230							
ANR	701999	FunctionDef	isabsolutepath (const char * path)		701998	0					
ANR	702000	CompoundStatement		388:0:16869:17230	701998	0					
ANR	702001	IdentifierDeclStatement	char ThreeChars [ 4 ] ;	389:4:16875:16893	701998	0	True				
ANR	702002	IdentifierDecl	ThreeChars [ 4 ]		701998	0					
ANR	702003	IdentifierDeclType	char [ 4 ]		701998	0					
ANR	702004	Identifier	ThreeChars		701998	1					
ANR	702005	PrimaryExpression	4		701998	2					
ANR	702006	IfStatement	if ( path == NULL )		701998	1					
ANR	702007	Condition	path == NULL	391:7:16903:16914	701998	0	True				
ANR	702008	EqualityExpression	path == NULL		701998	0		==			
ANR	702009	Identifier	path		701998	0					
ANR	702010	Identifier	NULL		701998	1					
ANR	702011	ReturnStatement	return FALSE ;	392:8:16925:16937	701998	1	True				
ANR	702012	Identifier	FALSE		701998	0					
ANR	702013	IfStatement	if ( path [ 0 ] == 0 )		701998	2					
ANR	702014	Condition	path [ 0 ] == 0	393:8:16947:16958	701998	0	True				
ANR	702015	EqualityExpression	path [ 0 ] == 0		701998	0		==			
ANR	702016	ArrayIndexing	path [ 0 ]		701998	0					
ANR	702017	Identifier	path		701998	0					
ANR	702018	PrimaryExpression	0		701998	1					
ANR	702019	PrimaryExpression	0		701998	1					
ANR	702020	ReturnStatement	return FALSE ;	394:8:16969:16981	701998	1	True				
ANR	702021	Identifier	FALSE		701998	0					
ANR	702022	ExpressionStatement	"strncpy ( ThreeChars , path , 3 )"	396:4:16988:17016	701998	3	True				
ANR	702023	CallExpression	"strncpy ( ThreeChars , path , 3 )"		701998	0					
ANR	702024	Callee	strncpy		701998	0					
ANR	702025	Identifier	strncpy		701998	0					
ANR	702026	ArgumentList	ThreeChars		701998	1					
ANR	702027	Argument	ThreeChars		701998	0					
ANR	702028	Identifier	ThreeChars		701998	0					
ANR	702029	Argument	path		701998	1					
ANR	702030	Identifier	path		701998	0					
ANR	702031	Argument	3		701998	2					
ANR	702032	PrimaryExpression	3		701998	0					
ANR	702033	ExpressionStatement	ThreeChars [ 3 ] = 0	397:4:17022:17039	701998	4	True				
ANR	702034	AssignmentExpression	ThreeChars [ 3 ] = 0		701998	0		=			
ANR	702035	ArrayIndexing	ThreeChars [ 3 ]		701998	0					
ANR	702036	Identifier	ThreeChars		701998	0					
ANR	702037	PrimaryExpression	3		701998	1					
ANR	702038	PrimaryExpression	0		701998	1					
ANR	702039	IfStatement	if ( ThreeChars [ 0 ] == DIR_CHAR )		701998	5					
ANR	702040	Condition	ThreeChars [ 0 ] == DIR_CHAR	399:7:17049:17073	701998	0	True				
ANR	702041	EqualityExpression	ThreeChars [ 0 ] == DIR_CHAR		701998	0		==			
ANR	702042	ArrayIndexing	ThreeChars [ 0 ]		701998	0					
ANR	702043	Identifier	ThreeChars		701998	0					
ANR	702044	PrimaryExpression	0		701998	1					
ANR	702045	Identifier	DIR_CHAR		701998	1					
ANR	702046	ReturnStatement	return TRUE ;	400:8:17084:17095	701998	1	True				
ANR	702047	Identifier	TRUE		701998	0					
ANR	702048	IfStatement	if ( isalpha ( ( int ) ThreeChars [ 0 ] ) && ThreeChars [ 1 ] == ':' )		701998	6					
ANR	702049	Condition	isalpha ( ( int ) ThreeChars [ 0 ] ) && ThreeChars [ 1 ] == ':'	403:8:17130:17181	701998	0	True				
ANR	702050	AndExpression	isalpha ( ( int ) ThreeChars [ 0 ] ) && ThreeChars [ 1 ] == ':'		701998	0		&&			
ANR	702051	CallExpression	isalpha ( ( int ) ThreeChars [ 0 ] )		701998	0					
ANR	702052	Callee	isalpha		701998	0					
ANR	702053	Identifier	isalpha		701998	0					
ANR	702054	ArgumentList	( int ) ThreeChars [ 0 ]		701998	1					
ANR	702055	Argument	( int ) ThreeChars [ 0 ]		701998	0					
ANR	702056	CastExpression	( int ) ThreeChars [ 0 ]		701998	0					
ANR	702057	CastTarget	int		701998	0					
ANR	702058	ArrayIndexing	ThreeChars [ 0 ]		701998	1					
ANR	702059	Identifier	ThreeChars		701998	0					
ANR	702060	PrimaryExpression	0		701998	1					
ANR	702061	EqualityExpression	ThreeChars [ 1 ] == ':'		701998	1		==			
ANR	702062	ArrayIndexing	ThreeChars [ 1 ]		701998	0					
ANR	702063	Identifier	ThreeChars		701998	0					
ANR	702064	PrimaryExpression	1		701998	1					
ANR	702065	PrimaryExpression	':'		701998	1					
ANR	702066	ReturnStatement	return TRUE ;	404:8:17192:17203	701998	1	True				
ANR	702067	Identifier	TRUE		701998	0					
ANR	702068	ReturnStatement	return FALSE ;	406:4:17216:17228	701998	7	True				
ANR	702069	Identifier	FALSE		701998	0					
ANR	702070	ReturnType	static cmsBool		701998	1					
ANR	702071	Identifier	isabsolutepath		701998	2					
ANR	702072	ParameterList	const char * path		701998	3					
ANR	702073	Parameter	const char * path	387:23:16851:16866	701998	0	True				
ANR	702074	ParameterType	const char *		701998	0					
ANR	702075	Identifier	path		701998	1					
ANR	702076	CFGEntryNode	ENTRY		701998		True				
ANR	702077	CFGExitNode	EXIT		701998		True				
ANR	702078	Symbol	path		701998						
ANR	702079	Symbol	isalpha		701998						
ANR	702080	Symbol	* ThreeChars		701998						
ANR	702081	Symbol	NULL		701998						
ANR	702082	Symbol	ThreeChars		701998						
ANR	702083	Symbol	DIR_CHAR		701998						
ANR	702084	Symbol	* path		701998						
ANR	702085	Symbol	TRUE		701998						
ANR	702086	Symbol	FALSE		701998						
ANR	702087	Function	BuildAbsolutePath	412:0:17365:18096							
ANR	702088	FunctionDef	"BuildAbsolutePath (const char * relPath , const char * basePath , char * buffer , cmsUInt32Number MaxLen)"		702087	0					
ANR	702089	CompoundStatement		414:0:17479:18096	702087	0					
ANR	702090	IdentifierDeclStatement	char * tail ;	415:4:17485:17495	702087	0	True				
ANR	702091	IdentifierDecl	* tail		702087	0					
ANR	702092	IdentifierDeclType	char *		702087	0					
ANR	702093	Identifier	tail		702087	1					
ANR	702094	IdentifierDeclStatement	cmsUInt32Number len ;	416:4:17501:17520	702087	1	True				
ANR	702095	IdentifierDecl	len		702087	0					
ANR	702096	IdentifierDeclType	cmsUInt32Number		702087	0					
ANR	702097	Identifier	len		702087	1					
ANR	702098	IfStatement	if ( isabsolutepath ( relPath ) )		702087	2					
ANR	702099	Condition	isabsolutepath ( relPath )	419:8:17556:17578	702087	0	True				
ANR	702100	CallExpression	isabsolutepath ( relPath )		702087	0					
ANR	702101	Callee	isabsolutepath		702087	0					
ANR	702102	Identifier	isabsolutepath		702087	0					
ANR	702103	ArgumentList	relPath		702087	1					
ANR	702104	Argument	relPath		702087	0					
ANR	702105	Identifier	relPath		702087	0					
ANR	702106	CompoundStatement		6:33:101:101	702087	1					
ANR	702107	ExpressionStatement	"strncpy ( buffer , relPath , MaxLen )"	421:8:17592:17624	702087	0	True				
ANR	702108	CallExpression	"strncpy ( buffer , relPath , MaxLen )"		702087	0					
ANR	702109	Callee	strncpy		702087	0					
ANR	702110	Identifier	strncpy		702087	0					
ANR	702111	ArgumentList	buffer		702087	1					
ANR	702112	Argument	buffer		702087	0					
ANR	702113	Identifier	buffer		702087	0					
ANR	702114	Argument	relPath		702087	1					
ANR	702115	Identifier	relPath		702087	0					
ANR	702116	Argument	MaxLen		702087	2					
ANR	702117	Identifier	MaxLen		702087	0					
ANR	702118	ExpressionStatement	buffer [ MaxLen - 1 ] = 0	422:8:17634:17654	702087	1	True				
ANR	702119	AssignmentExpression	buffer [ MaxLen - 1 ] = 0		702087	0		=			
ANR	702120	ArrayIndexing	buffer [ MaxLen - 1 ]		702087	0					
ANR	702121	Identifier	buffer		702087	0					
ANR	702122	AdditiveExpression	MaxLen - 1		702087	1		-			
ANR	702123	Identifier	MaxLen		702087	0					
ANR	702124	PrimaryExpression	1		702087	1					
ANR	702125	PrimaryExpression	0		702087	1					
ANR	702126	ReturnStatement	return TRUE ;	423:8:17664:17675	702087	2	True				
ANR	702127	Identifier	TRUE		702087	0					
ANR	702128	ExpressionStatement	"strncpy ( buffer , basePath , MaxLen )"	427:4:17715:17748	702087	3	True				
ANR	702129	CallExpression	"strncpy ( buffer , basePath , MaxLen )"		702087	0					
ANR	702130	Callee	strncpy		702087	0					
ANR	702131	Identifier	strncpy		702087	0					
ANR	702132	ArgumentList	buffer		702087	1					
ANR	702133	Argument	buffer		702087	0					
ANR	702134	Identifier	buffer		702087	0					
ANR	702135	Argument	basePath		702087	1					
ANR	702136	Identifier	basePath		702087	0					
ANR	702137	Argument	MaxLen		702087	2					
ANR	702138	Identifier	MaxLen		702087	0					
ANR	702139	ExpressionStatement	buffer [ MaxLen - 1 ] = 0	428:4:17754:17774	702087	4	True				
ANR	702140	AssignmentExpression	buffer [ MaxLen - 1 ] = 0		702087	0		=			
ANR	702141	ArrayIndexing	buffer [ MaxLen - 1 ]		702087	0					
ANR	702142	Identifier	buffer		702087	0					
ANR	702143	AdditiveExpression	MaxLen - 1		702087	1		-			
ANR	702144	Identifier	MaxLen		702087	0					
ANR	702145	PrimaryExpression	1		702087	1					
ANR	702146	PrimaryExpression	0		702087	1					
ANR	702147	ExpressionStatement	"tail = strrchr ( buffer , DIR_CHAR )"	430:4:17781:17813	702087	5	True				
ANR	702148	AssignmentExpression	"tail = strrchr ( buffer , DIR_CHAR )"		702087	0		=			
ANR	702149	Identifier	tail		702087	0					
ANR	702150	CallExpression	"strrchr ( buffer , DIR_CHAR )"		702087	1					
ANR	702151	Callee	strrchr		702087	0					
ANR	702152	Identifier	strrchr		702087	0					
ANR	702153	ArgumentList	buffer		702087	1					
ANR	702154	Argument	buffer		702087	0					
ANR	702155	Identifier	buffer		702087	0					
ANR	702156	Argument	DIR_CHAR		702087	1					
ANR	702157	Identifier	DIR_CHAR		702087	0					
ANR	702158	IfStatement	if ( tail == NULL )		702087	6					
ANR	702159	Condition	tail == NULL	431:8:17823:17834	702087	0	True				
ANR	702160	EqualityExpression	tail == NULL		702087	0		==			
ANR	702161	Identifier	tail		702087	0					
ANR	702162	Identifier	NULL		702087	1					
ANR	702163	ReturnStatement	return FALSE ;	431:22:17837:17849	702087	1	True				
ANR	702164	Identifier	FALSE		702087	0					
ANR	702165	ExpressionStatement	len = ( cmsUInt32Number ) ( tail - buffer )	433:4:17902:17941	702087	7	True				
ANR	702166	AssignmentExpression	len = ( cmsUInt32Number ) ( tail - buffer )		702087	0		=			
ANR	702167	Identifier	len		702087	0					
ANR	702168	CastExpression	( cmsUInt32Number ) ( tail - buffer )		702087	1					
ANR	702169	CastTarget	cmsUInt32Number		702087	0					
ANR	702170	AdditiveExpression	tail - buffer		702087	1		-			
ANR	702171	Identifier	tail		702087	0					
ANR	702172	Identifier	buffer		702087	1					
ANR	702173	IfStatement	if ( len >= MaxLen )		702087	8					
ANR	702174	Condition	len >= MaxLen	434:8:17951:17963	702087	0	True				
ANR	702175	RelationalExpression	len >= MaxLen		702087	0		>=			
ANR	702176	Identifier	len		702087	0					
ANR	702177	Identifier	MaxLen		702087	1					
ANR	702178	ReturnStatement	return FALSE ;	434:23:17966:17978	702087	1	True				
ANR	702179	Identifier	FALSE		702087	0					
ANR	702180	ExpressionStatement	"strncpy ( tail + 1 , relPath , MaxLen - len )"	437:4:18036:18076	702087	9	True				
ANR	702181	CallExpression	"strncpy ( tail + 1 , relPath , MaxLen - len )"		702087	0					
ANR	702182	Callee	strncpy		702087	0					
ANR	702183	Identifier	strncpy		702087	0					
ANR	702184	ArgumentList	tail + 1		702087	1					
ANR	702185	Argument	tail + 1		702087	0					
ANR	702186	AdditiveExpression	tail + 1		702087	0		+			
ANR	702187	Identifier	tail		702087	0					
ANR	702188	PrimaryExpression	1		702087	1					
ANR	702189	Argument	relPath		702087	1					
ANR	702190	Identifier	relPath		702087	0					
ANR	702191	Argument	MaxLen - len		702087	2					
ANR	702192	AdditiveExpression	MaxLen - len		702087	0		-			
ANR	702193	Identifier	MaxLen		702087	0					
ANR	702194	Identifier	len		702087	1					
ANR	702195	ReturnStatement	return TRUE ;	439:4:18083:18094	702087	10	True				
ANR	702196	Identifier	TRUE		702087	0					
ANR	702197	ReturnType	static cmsBool		702087	1					
ANR	702198	Identifier	BuildAbsolutePath		702087	2					
ANR	702199	ParameterList	"const char * relPath , const char * basePath , char * buffer , cmsUInt32Number MaxLen"		702087	3					
ANR	702200	Parameter	const char * relPath	413:26:17398:17416	702087	0	True				
ANR	702201	ParameterType	const char *		702087	0					
ANR	702202	Identifier	relPath		702087	1					
ANR	702203	Parameter	const char * basePath	413:47:17419:17438	702087	1	True				
ANR	702204	ParameterType	const char *		702087	0					
ANR	702205	Identifier	basePath		702087	1					
ANR	702206	Parameter	char * buffer	413:69:17441:17452	702087	2	True				
ANR	702207	ParameterType	char *		702087	0					
ANR	702208	Identifier	buffer		702087	1					
ANR	702209	Parameter	cmsUInt32Number MaxLen	413:83:17455:17476	702087	3	True				
ANR	702210	ParameterType	cmsUInt32Number		702087	0					
ANR	702211	Identifier	MaxLen		702087	1					
ANR	702212	CFGEntryNode	ENTRY		702087		True				
ANR	702213	CFGExitNode	EXIT		702087		True				
ANR	702214	Symbol	isabsolutepath		702087						
ANR	702215	Symbol	MaxLen		702087						
ANR	702216	Symbol	* buffer		702087						
ANR	702217	Symbol	NULL		702087						
ANR	702218	Symbol	tail		702087						
ANR	702219	Symbol	relPath		702087						
ANR	702220	Symbol	TRUE		702087						
ANR	702221	Symbol	* MaxLen		702087						
ANR	702222	Symbol	basePath		702087						
ANR	702223	Symbol	len		702087						
ANR	702224	Symbol	strrchr		702087						
ANR	702225	Symbol	DIR_CHAR		702087						
ANR	702226	Symbol	FALSE		702087						
ANR	702227	Symbol	buffer		702087						
ANR	702228	Function	NoMeta	444:0:18144:18291							
ANR	702229	FunctionDef	NoMeta (const char * str)		702228	0					
ANR	702230	CompoundStatement		446:0:18187:18291	702228	0					
ANR	702231	IfStatement	"if ( strchr ( str , '%' ) != NULL )"		702228	0					
ANR	702232	Condition	"strchr ( str , '%' ) != NULL"	447:8:18197:18220	702228	0	True				
ANR	702233	EqualityExpression	"strchr ( str , '%' ) != NULL"		702228	0		!=			
ANR	702234	CallExpression	"strchr ( str , '%' )"		702228	0					
ANR	702235	Callee	strchr		702228	0					
ANR	702236	Identifier	strchr		702228	0					
ANR	702237	ArgumentList	str		702228	1					
ANR	702238	Argument	str		702228	0					
ANR	702239	Identifier	str		702228	0					
ANR	702240	Argument	'%'		702228	1					
ANR	702241	PrimaryExpression	'%'		702228	0					
ANR	702242	Identifier	NULL		702228	1					
ANR	702243	ReturnStatement	"return ""**** CORRUPTED FORMAT STRING ***"" ;"	448:8:18231:18272	702228	1	True				
ANR	702244	PrimaryExpression	"""**** CORRUPTED FORMAT STRING ***"""		702228	0					
ANR	702245	ReturnStatement	return str ;	450:4:18279:18289	702228	1	True				
ANR	702246	Identifier	str		702228	0					
ANR	702247	ReturnType	static const char *		702228	1					
ANR	702248	Identifier	NoMeta		702228	2					
ANR	702249	ParameterList	const char * str		702228	3					
ANR	702250	Parameter	const char * str	445:19:18170:18184	702228	0	True				
ANR	702251	ParameterType	const char *		702228	0					
ANR	702252	Identifier	str		702228	1					
ANR	702253	CFGEntryNode	ENTRY		702228		True				
ANR	702254	CFGExitNode	EXIT		702228		True				
ANR	702255	Symbol	str		702228						
ANR	702256	Symbol	NULL		702228						
ANR	702257	Symbol	strchr		702228						
ANR	702258	Function	SynError	454:0:18310:18787							
ANR	702259	FunctionDef	"SynError (cmsIT8 * it8 , const char * Txt)"		702258	0					
ANR	702260	CompoundStatement		456:0:18369:18787	702258	0					
ANR	702261	IdentifierDeclStatement	"char Buffer [ 256 ] , ErrMsg [ 1024 ] ;"	457:4:18375:18405	702258	0	True				
ANR	702262	IdentifierDecl	Buffer [ 256 ]		702258	0					
ANR	702263	IdentifierDeclType	char [ 256 ]		702258	0					
ANR	702264	Identifier	Buffer		702258	1					
ANR	702265	PrimaryExpression	256		702258	2					
ANR	702266	IdentifierDecl	ErrMsg [ 1024 ]		702258	1					
ANR	702267	IdentifierDeclType	char [ 1024 ]		702258	0					
ANR	702268	Identifier	ErrMsg		702258	1					
ANR	702269	PrimaryExpression	1024		702258	2					
ANR	702270	IdentifierDeclStatement	va_list args ;	458:4:18411:18423	702258	1	True				
ANR	702271	IdentifierDecl	args		702258	0					
ANR	702272	IdentifierDeclType	va_list		702258	0					
ANR	702273	Identifier	args		702258	1					
ANR	702274	ExpressionStatement	"va_start ( args , Txt )"	460:4:18430:18449	702258	2	True				
ANR	702275	CallExpression	"va_start ( args , Txt )"		702258	0					
ANR	702276	Callee	va_start		702258	0					
ANR	702277	Identifier	va_start		702258	0					
ANR	702278	ArgumentList	args		702258	1					
ANR	702279	Argument	args		702258	0					
ANR	702280	Identifier	args		702258	0					
ANR	702281	Argument	Txt		702258	1					
ANR	702282	Identifier	Txt		702258	0					
ANR	702283	ExpressionStatement	"vsnprintf ( Buffer , 255 , Txt , args )"	461:4:18455:18488	702258	3	True				
ANR	702284	CallExpression	"vsnprintf ( Buffer , 255 , Txt , args )"		702258	0					
ANR	702285	Callee	vsnprintf		702258	0					
ANR	702286	Identifier	vsnprintf		702258	0					
ANR	702287	ArgumentList	Buffer		702258	1					
ANR	702288	Argument	Buffer		702258	0					
ANR	702289	Identifier	Buffer		702258	0					
ANR	702290	Argument	255		702258	1					
ANR	702291	PrimaryExpression	255		702258	0					
ANR	702292	Argument	Txt		702258	2					
ANR	702293	Identifier	Txt		702258	0					
ANR	702294	Argument	args		702258	3					
ANR	702295	Identifier	args		702258	0					
ANR	702296	ExpressionStatement	Buffer [ 255 ] = 0	462:4:18494:18509	702258	4	True				
ANR	702297	AssignmentExpression	Buffer [ 255 ] = 0		702258	0		=			
ANR	702298	ArrayIndexing	Buffer [ 255 ]		702258	0					
ANR	702299	Identifier	Buffer		702258	0					
ANR	702300	PrimaryExpression	255		702258	1					
ANR	702301	PrimaryExpression	0		702258	1					
ANR	702302	ExpressionStatement	va_end ( args )	463:4:18515:18527	702258	5	True				
ANR	702303	CallExpression	va_end ( args )		702258	0					
ANR	702304	Callee	va_end		702258	0					
ANR	702305	Identifier	va_end		702258	0					
ANR	702306	ArgumentList	args		702258	1					
ANR	702307	Argument	args		702258	0					
ANR	702308	Identifier	args		702258	0					
ANR	702309	ExpressionStatement	"snprintf ( ErrMsg , 1023 , ""%s: Line %d, %s"" , it8 -> FileStack [ it8 -> IncludeSP ] -> FileName , it8 -> lineno , Buffer )"	465:4:18534:18639	702258	6	True				
ANR	702310	CallExpression	"snprintf ( ErrMsg , 1023 , ""%s: Line %d, %s"" , it8 -> FileStack [ it8 -> IncludeSP ] -> FileName , it8 -> lineno , Buffer )"		702258	0					
ANR	702311	Callee	snprintf		702258	0					
ANR	702312	Identifier	snprintf		702258	0					
ANR	702313	ArgumentList	ErrMsg		702258	1					
ANR	702314	Argument	ErrMsg		702258	0					
ANR	702315	Identifier	ErrMsg		702258	0					
ANR	702316	Argument	1023		702258	1					
ANR	702317	PrimaryExpression	1023		702258	0					
ANR	702318	Argument	"""%s: Line %d, %s"""		702258	2					
ANR	702319	PrimaryExpression	"""%s: Line %d, %s"""		702258	0					
ANR	702320	Argument	it8 -> FileStack [ it8 -> IncludeSP ] -> FileName		702258	3					
ANR	702321	PtrMemberAccess	it8 -> FileStack [ it8 -> IncludeSP ] -> FileName		702258	0					
ANR	702322	ArrayIndexing	it8 -> FileStack [ it8 -> IncludeSP ]		702258	0					
ANR	702323	PtrMemberAccess	it8 -> FileStack		702258	0					
ANR	702324	Identifier	it8		702258	0					
ANR	702325	Identifier	FileStack		702258	1					
ANR	702326	PtrMemberAccess	it8 -> IncludeSP		702258	1					
ANR	702327	Identifier	it8		702258	0					
ANR	702328	Identifier	IncludeSP		702258	1					
ANR	702329	Identifier	FileName		702258	1					
ANR	702330	Argument	it8 -> lineno		702258	4					
ANR	702331	PtrMemberAccess	it8 -> lineno		702258	0					
ANR	702332	Identifier	it8		702258	0					
ANR	702333	Identifier	lineno		702258	1					
ANR	702334	Argument	Buffer		702258	5					
ANR	702335	Identifier	Buffer		702258	0					
ANR	702336	ExpressionStatement	ErrMsg [ 1023 ] = 0	466:4:18645:18661	702258	7	True				
ANR	702337	AssignmentExpression	ErrMsg [ 1023 ] = 0		702258	0		=			
ANR	702338	ArrayIndexing	ErrMsg [ 1023 ]		702258	0					
ANR	702339	Identifier	ErrMsg		702258	0					
ANR	702340	PrimaryExpression	1023		702258	1					
ANR	702341	PrimaryExpression	0		702258	1					
ANR	702342	ExpressionStatement	it8 -> sy = SSYNERROR	467:4:18667:18686	702258	8	True				
ANR	702343	AssignmentExpression	it8 -> sy = SSYNERROR		702258	0		=			
ANR	702344	PtrMemberAccess	it8 -> sy		702258	0					
ANR	702345	Identifier	it8		702258	0					
ANR	702346	Identifier	sy		702258	1					
ANR	702347	Identifier	SSYNERROR		702258	1					
ANR	702348	ExpressionStatement	"cmsSignalError ( it8 -> ContextID , cmsERROR_CORRUPTION_DETECTED , ""%s"" , ErrMsg )"	468:4:18692:18767	702258	9	True				
ANR	702349	CallExpression	"cmsSignalError ( it8 -> ContextID , cmsERROR_CORRUPTION_DETECTED , ""%s"" , ErrMsg )"		702258	0					
ANR	702350	Callee	cmsSignalError		702258	0					
ANR	702351	Identifier	cmsSignalError		702258	0					
ANR	702352	ArgumentList	it8 -> ContextID		702258	1					
ANR	702353	Argument	it8 -> ContextID		702258	0					
ANR	702354	PtrMemberAccess	it8 -> ContextID		702258	0					
ANR	702355	Identifier	it8		702258	0					
ANR	702356	Identifier	ContextID		702258	1					
ANR	702357	Argument	cmsERROR_CORRUPTION_DETECTED		702258	1					
ANR	702358	Identifier	cmsERROR_CORRUPTION_DETECTED		702258	0					
ANR	702359	Argument	"""%s"""		702258	2					
ANR	702360	PrimaryExpression	"""%s"""		702258	0					
ANR	702361	Argument	ErrMsg		702258	3					
ANR	702362	Identifier	ErrMsg		702258	0					
ANR	702363	ReturnStatement	return FALSE ;	469:4:18773:18785	702258	10	True				
ANR	702364	Identifier	FALSE		702258	0					
ANR	702365	ReturnType	static cmsBool		702258	1					
ANR	702366	Identifier	SynError		702258	2					
ANR	702367	ParameterList	"cmsIT8 * it8 , const char * Txt"		702258	3					
ANR	702368	Parameter	cmsIT8 * it8	455:17:18334:18344	702258	0	True				
ANR	702369	ParameterType	cmsIT8 *		702258	0					
ANR	702370	Identifier	it8		702258	1					
ANR	702371	Parameter	const char * Txt	455:30:18347:18361	702258	1	True				
ANR	702372	ParameterType	const char *		702258	0					
ANR	702373	Identifier	Txt		702258	1					
ANR	702374	CFGEntryNode	ENTRY		702258		True				
ANR	702375	CFGExitNode	EXIT		702258		True				
ANR	702376	Symbol	Buffer		702258						
ANR	702377	Symbol	it8 -> IncludeSP		702258						
ANR	702378	Symbol	* ErrMsg		702258						
ANR	702379	Symbol	* * it8		702258						
ANR	702380	Symbol	it8 -> lineno		702258						
ANR	702381	Symbol	ErrMsg		702258						
ANR	702382	Symbol	* it8		702258						
ANR	702383	Symbol	* it8 -> FileStack		702258						
ANR	702384	Symbol	it8 -> sy		702258						
ANR	702385	Symbol	* it8 -> IncludeSP		702258						
ANR	702386	Symbol	* * * it8		702258						
ANR	702387	Symbol	it8		702258						
ANR	702388	Symbol	it8 -> ContextID		702258						
ANR	702389	Symbol	* Buffer		702258						
ANR	702390	Symbol	args		702258						
ANR	702391	Symbol	Txt		702258						
ANR	702392	Symbol	it8 -> FileStack		702258						
ANR	702393	Symbol	* * it8 -> FileStack		702258						
ANR	702394	Symbol	it8 -> FileStack [ it8 -> IncludeSP ] -> FileName		702258						
ANR	702395	Symbol	* * it8 -> IncludeSP		702258						
ANR	702396	Symbol	FALSE		702258						
ANR	702397	Symbol	SSYNERROR		702258						
ANR	702398	Symbol	cmsERROR_CORRUPTION_DETECTED		702258						
ANR	702399	Function	Check	473:0:18860:19025							
ANR	702400	FunctionDef	"Check (cmsIT8 * it8 , SYMBOL sy , const char * Err)"		702399	0					
ANR	702401	CompoundStatement		475:0:18922:19025	702399	0					
ANR	702402	IfStatement	if ( it8 -> sy != sy )		702399	0					
ANR	702403	Condition	it8 -> sy != sy	476:12:18936:18950	702399	0	True				
ANR	702404	EqualityExpression	it8 -> sy != sy		702399	0		!=			
ANR	702405	PtrMemberAccess	it8 -> sy		702399	0					
ANR	702406	Identifier	it8		702399	0					
ANR	702407	Identifier	sy		702399	1					
ANR	702408	Identifier	sy		702399	1					
ANR	702409	ReturnStatement	"return SynError ( it8 , NoMeta ( Err ) ) ;"	477:16:18969:19002	702399	1	True				
ANR	702410	CallExpression	"SynError ( it8 , NoMeta ( Err ) )"		702399	0					
ANR	702411	Callee	SynError		702399	0					
ANR	702412	Identifier	SynError		702399	0					
ANR	702413	ArgumentList	it8		702399	1					
ANR	702414	Argument	it8		702399	0					
ANR	702415	Identifier	it8		702399	0					
ANR	702416	Argument	NoMeta ( Err )		702399	1					
ANR	702417	CallExpression	NoMeta ( Err )		702399	0					
ANR	702418	Callee	NoMeta		702399	0					
ANR	702419	Identifier	NoMeta		702399	0					
ANR	702420	ArgumentList	Err		702399	1					
ANR	702421	Argument	Err		702399	0					
ANR	702422	Identifier	Err		702399	0					
ANR	702423	ReturnStatement	return TRUE ;	478:8:19012:19023	702399	1	True				
ANR	702424	Identifier	TRUE		702399	0					
ANR	702425	ReturnType	static cmsBool		702399	1					
ANR	702426	Identifier	Check		702399	2					
ANR	702427	ParameterList	"cmsIT8 * it8 , SYMBOL sy , const char * Err"		702399	3					
ANR	702428	Parameter	cmsIT8 * it8	474:14:18881:18891	702399	0	True				
ANR	702429	ParameterType	cmsIT8 *		702399	0					
ANR	702430	Identifier	it8		702399	1					
ANR	702431	Parameter	SYMBOL sy	474:27:18894:18902	702399	1	True				
ANR	702432	ParameterType	SYMBOL		702399	0					
ANR	702433	Identifier	sy		702399	1					
ANR	702434	Parameter	const char * Err	474:38:18905:18919	702399	2	True				
ANR	702435	ParameterType	const char *		702399	0					
ANR	702436	Identifier	Err		702399	1					
ANR	702437	CFGEntryNode	ENTRY		702399		True				
ANR	702438	CFGExitNode	EXIT		702399		True				
ANR	702439	Symbol	Err		702399						
ANR	702440	Symbol	sy		702399						
ANR	702441	Symbol	* it8		702399						
ANR	702442	Symbol	TRUE		702399						
ANR	702443	Symbol	it8 -> sy		702399						
ANR	702444	Symbol	SynError		702399						
ANR	702445	Symbol	it8		702399						
ANR	702446	Symbol	NoMeta		702399						
ANR	702447	Function	NextCh	482:0:19063:19640							
ANR	702448	FunctionDef	NextCh (cmsIT8 * it8)		702447	0					
ANR	702449	CompoundStatement		484:0:19095:19640	702447	0					
ANR	702450	IfStatement	if ( it8 -> FileStack [ it8 -> IncludeSP ] -> Stream )		702447	0					
ANR	702451	Condition	it8 -> FileStack [ it8 -> IncludeSP ] -> Stream	485:8:19105:19145	702447	0	True				
ANR	702452	PtrMemberAccess	it8 -> FileStack [ it8 -> IncludeSP ] -> Stream		702447	0					
ANR	702453	ArrayIndexing	it8 -> FileStack [ it8 -> IncludeSP ]		702447	0					
ANR	702454	PtrMemberAccess	it8 -> FileStack		702447	0					
ANR	702455	Identifier	it8		702447	0					
ANR	702456	Identifier	FileStack		702447	1					
ANR	702457	PtrMemberAccess	it8 -> IncludeSP		702447	1					
ANR	702458	Identifier	it8		702447	0					
ANR	702459	Identifier	IncludeSP		702447	1					
ANR	702460	Identifier	Stream		702447	1					
ANR	702461	CompoundStatement		2:51:52:52	702447	1					
ANR	702462	ExpressionStatement	it8 -> ch = fgetc ( it8 -> FileStack [ it8 -> IncludeSP ] -> Stream )	487:8:19159:19217	702447	0	True				
ANR	702463	AssignmentExpression	it8 -> ch = fgetc ( it8 -> FileStack [ it8 -> IncludeSP ] -> Stream )		702447	0		=			
ANR	702464	PtrMemberAccess	it8 -> ch		702447	0					
ANR	702465	Identifier	it8		702447	0					
ANR	702466	Identifier	ch		702447	1					
ANR	702467	CallExpression	fgetc ( it8 -> FileStack [ it8 -> IncludeSP ] -> Stream )		702447	1					
ANR	702468	Callee	fgetc		702447	0					
ANR	702469	Identifier	fgetc		702447	0					
ANR	702470	ArgumentList	it8 -> FileStack [ it8 -> IncludeSP ] -> Stream		702447	1					
ANR	702471	Argument	it8 -> FileStack [ it8 -> IncludeSP ] -> Stream		702447	0					
ANR	702472	PtrMemberAccess	it8 -> FileStack [ it8 -> IncludeSP ] -> Stream		702447	0					
ANR	702473	ArrayIndexing	it8 -> FileStack [ it8 -> IncludeSP ]		702447	0					
ANR	702474	PtrMemberAccess	it8 -> FileStack		702447	0					
ANR	702475	Identifier	it8		702447	0					
ANR	702476	Identifier	FileStack		702447	1					
ANR	702477	PtrMemberAccess	it8 -> IncludeSP		702447	1					
ANR	702478	Identifier	it8		702447	0					
ANR	702479	Identifier	IncludeSP		702447	1					
ANR	702480	Identifier	Stream		702447	1					
ANR	702481	IfStatement	if ( feof ( it8 -> FileStack [ it8 -> IncludeSP ] -> Stream ) )		702447	1					
ANR	702482	Condition	feof ( it8 -> FileStack [ it8 -> IncludeSP ] -> Stream )	489:12:19232:19278	702447	0	True				
ANR	702483	CallExpression	feof ( it8 -> FileStack [ it8 -> IncludeSP ] -> Stream )		702447	0					
ANR	702484	Callee	feof		702447	0					
ANR	702485	Identifier	feof		702447	0					
ANR	702486	ArgumentList	it8 -> FileStack [ it8 -> IncludeSP ] -> Stream		702447	1					
ANR	702487	Argument	it8 -> FileStack [ it8 -> IncludeSP ] -> Stream		702447	0					
ANR	702488	PtrMemberAccess	it8 -> FileStack [ it8 -> IncludeSP ] -> Stream		702447	0					
ANR	702489	ArrayIndexing	it8 -> FileStack [ it8 -> IncludeSP ]		702447	0					
ANR	702490	PtrMemberAccess	it8 -> FileStack		702447	0					
ANR	702491	Identifier	it8		702447	0					
ANR	702492	Identifier	FileStack		702447	1					
ANR	702493	PtrMemberAccess	it8 -> IncludeSP		702447	1					
ANR	702494	Identifier	it8		702447	0					
ANR	702495	Identifier	IncludeSP		702447	1					
ANR	702496	Identifier	Stream		702447	1					
ANR	702497	CompoundStatement		6:62:186:186	702447	1					
ANR	702498	IfStatement	if ( it8 -> IncludeSP > 0 )		702447	0					
ANR	702499	Condition	it8 -> IncludeSP > 0	491:16:19301:19319	702447	0	True				
ANR	702500	RelationalExpression	it8 -> IncludeSP > 0		702447	0		>			
ANR	702501	PtrMemberAccess	it8 -> IncludeSP		702447	0					
ANR	702502	Identifier	it8		702447	0					
ANR	702503	Identifier	IncludeSP		702447	1					
ANR	702504	PrimaryExpression	0		702447	1					
ANR	702505	CompoundStatement		8:37:226:226	702447	1					
ANR	702506	ExpressionStatement	fclose ( it8 -> FileStack [ it8 -> IncludeSP -- ] -> Stream )	493:16:19341:19390	702447	0	True				
ANR	702507	CallExpression	fclose ( it8 -> FileStack [ it8 -> IncludeSP -- ] -> Stream )		702447	0					
ANR	702508	Callee	fclose		702447	0					
ANR	702509	Identifier	fclose		702447	0					
ANR	702510	ArgumentList	it8 -> FileStack [ it8 -> IncludeSP -- ] -> Stream		702447	1					
ANR	702511	Argument	it8 -> FileStack [ it8 -> IncludeSP -- ] -> Stream		702447	0					
ANR	702512	PtrMemberAccess	it8 -> FileStack [ it8 -> IncludeSP -- ] -> Stream		702447	0					
ANR	702513	ArrayIndexing	it8 -> FileStack [ it8 -> IncludeSP -- ]		702447	0					
ANR	702514	PtrMemberAccess	it8 -> FileStack		702447	0					
ANR	702515	Identifier	it8		702447	0					
ANR	702516	Identifier	FileStack		702447	1					
ANR	702517	PostIncDecOperationExpression	it8 -> IncludeSP --		702447	1					
ANR	702518	PtrMemberAccess	it8 -> IncludeSP		702447	0					
ANR	702519	Identifier	it8		702447	0					
ANR	702520	Identifier	IncludeSP		702447	1					
ANR	702521	IncDec	--		702447	1					
ANR	702522	Identifier	Stream		702447	1					
ANR	702523	ExpressionStatement	it8 -> ch = ' '	494:16:19408:19423	702447	1	True				
ANR	702524	AssignmentExpression	it8 -> ch = ' '		702447	0		=			
ANR	702525	PtrMemberAccess	it8 -> ch		702447	0					
ANR	702526	Identifier	it8		702447	0					
ANR	702527	Identifier	ch		702447	1					
ANR	702528	PrimaryExpression	' '		702447	1					
ANR	702529	ElseStatement	else		702447	0					
ANR	702530	ExpressionStatement	it8 -> ch = 0	497:16:19516:19528	702447	0	True				
ANR	702531	AssignmentExpression	it8 -> ch = 0		702447	0		=			
ANR	702532	PtrMemberAccess	it8 -> ch		702447	0					
ANR	702533	Identifier	it8		702447	0					
ANR	702534	Identifier	ch		702447	1					
ANR	702535	PrimaryExpression	0		702447	1					
ANR	702536	ElseStatement	else		702447	0					
ANR	702537	CompoundStatement		17:9:468:468	702447	0					
ANR	702538	ExpressionStatement	it8 -> ch = * it8 -> Source	501:8:19574:19596	702447	0	True				
ANR	702539	AssignmentExpression	it8 -> ch = * it8 -> Source		702447	0		=			
ANR	702540	PtrMemberAccess	it8 -> ch		702447	0					
ANR	702541	Identifier	it8		702447	0					
ANR	702542	Identifier	ch		702447	1					
ANR	702543	UnaryOperationExpression	* it8 -> Source		702447	1					
ANR	702544	UnaryOperator	*		702447	0					
ANR	702545	PtrMemberAccess	it8 -> Source		702447	1					
ANR	702546	Identifier	it8		702447	0					
ANR	702547	Identifier	Source		702447	1					
ANR	702548	IfStatement	if ( it8 -> ch )		702447	1					
ANR	702549	Condition	it8 -> ch	502:12:19610:19616	702447	0	True				
ANR	702550	PtrMemberAccess	it8 -> ch		702447	0					
ANR	702551	Identifier	it8		702447	0					
ANR	702552	Identifier	ch		702447	1					
ANR	702553	ExpressionStatement	it8 -> Source ++	502:21:19619:19632	702447	1	True				
ANR	702554	PostIncDecOperationExpression	it8 -> Source ++		702447	0					
ANR	702555	PtrMemberAccess	it8 -> Source		702447	0					
ANR	702556	Identifier	it8		702447	0					
ANR	702557	Identifier	Source		702447	1					
ANR	702558	IncDec	++		702447	1					
ANR	702559	ReturnType	static void		702447	1					
ANR	702560	Identifier	NextCh		702447	2					
ANR	702561	ParameterList	cmsIT8 * it8		702447	3					
ANR	702562	Parameter	cmsIT8 * it8	483:12:19082:19092	702447	0	True				
ANR	702563	ParameterType	cmsIT8 *		702447	0					
ANR	702564	Identifier	it8		702447	1					
ANR	702565	CFGEntryNode	ENTRY		702447		True				
ANR	702566	CFGExitNode	EXIT		702447		True				
ANR	702567	Symbol	it8 -> IncludeSP		702447						
ANR	702568	Symbol	* * it8		702447						
ANR	702569	Symbol	* it8		702447						
ANR	702570	Symbol	* it8 -> FileStack		702447						
ANR	702571	Symbol	it8 -> ch		702447						
ANR	702572	Symbol	it8 -> Source		702447						
ANR	702573	Symbol	* * * it8		702447						
ANR	702574	Symbol	* it8 -> IncludeSP		702447						
ANR	702575	Symbol	it8		702447						
ANR	702576	Symbol	* * it8 -> FileStack		702447						
ANR	702577	Symbol	it8 -> FileStack		702447						
ANR	702578	Symbol	it8 -> FileStack [ it8 -> IncludeSP -- ] -> Stream		702447						
ANR	702579	Symbol	* it8 -> Source		702447						
ANR	702580	Symbol	* * it8 -> IncludeSP		702447						
ANR	702581	Symbol	feof		702447						
ANR	702582	Symbol	it8 -> FileStack [ it8 -> IncludeSP ] -> Stream		702447						
ANR	702583	Symbol	fgetc		702447						
ANR	702584	Function	BinSrchKey	508:0:19727:20051							
ANR	702585	FunctionDef	BinSrchKey (const char * id)		702584	0					
ANR	702586	CompoundStatement		510:0:19768:20051	702584	0					
ANR	702587	IdentifierDeclStatement	int l = 1 ;	511:4:19774:19783	702584	0	True				
ANR	702588	IdentifierDecl	l = 1		702584	0					
ANR	702589	IdentifierDeclType	int		702584	0					
ANR	702590	Identifier	l		702584	1					
ANR	702591	AssignmentExpression	l = 1		702584	2		=			
ANR	702592	Identifier	l		702584	0					
ANR	702593	PrimaryExpression	1		702584	1					
ANR	702594	IdentifierDeclStatement	int r = NUMKEYS ;	512:4:19789:19804	702584	1	True				
ANR	702595	IdentifierDecl	r = NUMKEYS		702584	0					
ANR	702596	IdentifierDeclType	int		702584	0					
ANR	702597	Identifier	r		702584	1					
ANR	702598	AssignmentExpression	r = NUMKEYS		702584	2		=			
ANR	702599	Identifier	NUMKEYS		702584	0					
ANR	702600	Identifier	NUMKEYS		702584	1					
ANR	702601	IdentifierDeclStatement	"int x , res ;"	513:4:19810:19820	702584	2	True				
ANR	702602	IdentifierDecl	x		702584	0					
ANR	702603	IdentifierDeclType	int		702584	0					
ANR	702604	Identifier	x		702584	1					
ANR	702605	IdentifierDecl	res		702584	1					
ANR	702606	IdentifierDeclType	int		702584	0					
ANR	702607	Identifier	res		702584	1					
ANR	702608	WhileStatement	while ( r >= l )		702584	3					
ANR	702609	Condition	r >= l	515:11:19834:19839	702584	0	True				
ANR	702610	RelationalExpression	r >= l		702584	0		>=			
ANR	702611	Identifier	r		702584	0					
ANR	702612	Identifier	l		702584	1					
ANR	702613	CompoundStatement		7:4:77:77	702584	1					
ANR	702614	ExpressionStatement	x = ( l + r ) / 2	517:8:19856:19867	702584	0	True				
ANR	702615	AssignmentExpression	x = ( l + r ) / 2		702584	0		=			
ANR	702616	Identifier	x		702584	0					
ANR	702617	MultiplicativeExpression	( l + r ) / 2		702584	1		/			
ANR	702618	AdditiveExpression	l + r		702584	0		+			
ANR	702619	Identifier	l		702584	0					
ANR	702620	Identifier	r		702584	1					
ANR	702621	PrimaryExpression	2		702584	1					
ANR	702622	ExpressionStatement	"res = cmsstrcasecmp ( id , TabKeys [ x - 1 ] . id )"	518:8:19877:19917	702584	1	True				
ANR	702623	AssignmentExpression	"res = cmsstrcasecmp ( id , TabKeys [ x - 1 ] . id )"		702584	0		=			
ANR	702624	Identifier	res		702584	0					
ANR	702625	CallExpression	"cmsstrcasecmp ( id , TabKeys [ x - 1 ] . id )"		702584	1					
ANR	702626	Callee	cmsstrcasecmp		702584	0					
ANR	702627	Identifier	cmsstrcasecmp		702584	0					
ANR	702628	ArgumentList	id		702584	1					
ANR	702629	Argument	id		702584	0					
ANR	702630	Identifier	id		702584	0					
ANR	702631	Argument	TabKeys [ x - 1 ] . id		702584	1					
ANR	702632	MemberAccess	TabKeys [ x - 1 ] . id		702584	0					
ANR	702633	ArrayIndexing	TabKeys [ x - 1 ]		702584	0					
ANR	702634	Identifier	TabKeys		702584	0					
ANR	702635	AdditiveExpression	x - 1		702584	1		-			
ANR	702636	Identifier	x		702584	0					
ANR	702637	PrimaryExpression	1		702584	1					
ANR	702638	Identifier	id		702584	1					
ANR	702639	IfStatement	if ( res == 0 )		702584	2					
ANR	702640	Condition	res == 0	519:12:19931:19938	702584	0	True				
ANR	702641	EqualityExpression	res == 0		702584	0		==			
ANR	702642	Identifier	res		702584	0					
ANR	702643	PrimaryExpression	0		702584	1					
ANR	702644	ReturnStatement	return TabKeys [ x - 1 ] . sy ;	519:22:19941:19963	702584	1	True				
ANR	702645	MemberAccess	TabKeys [ x - 1 ] . sy		702584	0					
ANR	702646	ArrayIndexing	TabKeys [ x - 1 ]		702584	0					
ANR	702647	Identifier	TabKeys		702584	0					
ANR	702648	AdditiveExpression	x - 1		702584	1		-			
ANR	702649	Identifier	x		702584	0					
ANR	702650	PrimaryExpression	1		702584	1					
ANR	702651	Identifier	sy		702584	1					
ANR	702652	IfStatement	if ( res < 0 )		702584	3					
ANR	702653	Condition	res < 0	520:12:19977:19983	702584	0	True				
ANR	702654	RelationalExpression	res < 0		702584	0		<			
ANR	702655	Identifier	res		702584	0					
ANR	702656	PrimaryExpression	0		702584	1					
ANR	702657	ExpressionStatement	r = x - 1	520:21:19986:19995	702584	1	True				
ANR	702658	AssignmentExpression	r = x - 1		702584	0		=			
ANR	702659	Identifier	r		702584	0					
ANR	702660	AdditiveExpression	x - 1		702584	1		-			
ANR	702661	Identifier	x		702584	0					
ANR	702662	PrimaryExpression	1		702584	1					
ANR	702663	ElseStatement	else		702584	0					
ANR	702664	ExpressionStatement	l = x + 1	521:13:20010:20019	702584	0	True				
ANR	702665	AssignmentExpression	l = x + 1		702584	0		=			
ANR	702666	Identifier	l		702584	0					
ANR	702667	AdditiveExpression	x + 1		702584	1		+			
ANR	702668	Identifier	x		702584	0					
ANR	702669	PrimaryExpression	1		702584	1					
ANR	702670	ReturnStatement	return SUNDEFINED ;	524:4:20032:20049	702584	4	True				
ANR	702671	Identifier	SUNDEFINED		702584	0					
ANR	702672	ReturnType	static SYMBOL		702584	1					
ANR	702673	Identifier	BinSrchKey		702584	2					
ANR	702674	ParameterList	const char * id		702584	3					
ANR	702675	Parameter	const char * id	509:18:19752:19765	702584	0	True				
ANR	702676	ParameterType	const char *		702584	0					
ANR	702677	Identifier	id		702584	1					
ANR	702678	CFGEntryNode	ENTRY		702584		True				
ANR	702679	CFGExitNode	EXIT		702584		True				
ANR	702680	Symbol	res		702584						
ANR	702681	Symbol	TabKeys [ x - 1 ] . id		702584						
ANR	702682	Symbol	* x		702584						
ANR	702683	Symbol	NUMKEYS		702584						
ANR	702684	Symbol	* TabKeys		702584						
ANR	702685	Symbol	cmsstrcasecmp		702584						
ANR	702686	Symbol	l		702584						
ANR	702687	Symbol	r		702584						
ANR	702688	Symbol	TabKeys		702584						
ANR	702689	Symbol	TabKeys [ x - 1 ] . sy		702584						
ANR	702690	Symbol	x		702584						
ANR	702691	Symbol	SUNDEFINED		702584						
ANR	702692	Symbol	id		702584						
ANR	702693	Function	xpow10	529:0:20064:20146							
ANR	702694	FunctionDef	xpow10 (int n)		702693	0					
ANR	702695	CompoundStatement		531:0:20102:20146	702693	0					
ANR	702696	ReturnStatement	"return pow ( 10 , ( cmsFloat64Number ) n ) ;"	532:4:20108:20144	702693	0	True				
ANR	702697	CallExpression	"pow ( 10 , ( cmsFloat64Number ) n )"		702693	0					
ANR	702698	Callee	pow		702693	0					
ANR	702699	Identifier	pow		702693	0					
ANR	702700	ArgumentList	10		702693	1					
ANR	702701	Argument	10		702693	0					
ANR	702702	PrimaryExpression	10		702693	0					
ANR	702703	Argument	( cmsFloat64Number ) n		702693	1					
ANR	702704	CastExpression	( cmsFloat64Number ) n		702693	0					
ANR	702705	CastTarget	cmsFloat64Number		702693	0					
ANR	702706	Identifier	n		702693	1					
ANR	702707	ReturnType	static cmsFloat64Number		702693	1					
ANR	702708	Identifier	xpow10		702693	2					
ANR	702709	ParameterList	int n		702693	3					
ANR	702710	Parameter	int n	530:24:20095:20099	702693	0	True				
ANR	702711	ParameterType	int		702693	0					
ANR	702712	Identifier	n		702693	1					
ANR	702713	CFGEntryNode	ENTRY		702693		True				
ANR	702714	CFGExitNode	EXIT		702693		True				
ANR	702715	Symbol	pow		702693						
ANR	702716	Symbol	n		702693						
ANR	702717	Function	ReadReal	537:0:20211:21456							
ANR	702718	FunctionDef	"ReadReal (cmsIT8 * it8 , int inum)"		702717	0					
ANR	702719	CompoundStatement		539:0:20255:21456	702717	0					
ANR	702720	ExpressionStatement	it8 -> dnum = ( cmsFloat64Number ) inum	540:4:20261:20296	702717	0	True				
ANR	702721	AssignmentExpression	it8 -> dnum = ( cmsFloat64Number ) inum		702717	0		=			
ANR	702722	PtrMemberAccess	it8 -> dnum		702717	0					
ANR	702723	Identifier	it8		702717	0					
ANR	702724	Identifier	dnum		702717	1					
ANR	702725	CastExpression	( cmsFloat64Number ) inum		702717	1					
ANR	702726	CastTarget	cmsFloat64Number		702717	0					
ANR	702727	Identifier	inum		702717	1					
ANR	702728	WhileStatement	while ( isdigit ( it8 -> ch ) )		702717	1					
ANR	702729	Condition	isdigit ( it8 -> ch )	542:11:20310:20325	702717	0	True				
ANR	702730	CallExpression	isdigit ( it8 -> ch )		702717	0					
ANR	702731	Callee	isdigit		702717	0					
ANR	702732	Identifier	isdigit		702717	0					
ANR	702733	ArgumentList	it8 -> ch		702717	1					
ANR	702734	Argument	it8 -> ch		702717	0					
ANR	702735	PtrMemberAccess	it8 -> ch		702717	0					
ANR	702736	Identifier	it8		702717	0					
ANR	702737	Identifier	ch		702717	1					
ANR	702738	CompoundStatement		4:29:72:72	702717	1					
ANR	702739	ExpressionStatement	it8 -> dnum = it8 -> dnum * 10.0 + ( it8 -> ch - '0' )	544:8:20339:20385	702717	0	True				
ANR	702740	AssignmentExpression	it8 -> dnum = it8 -> dnum * 10.0 + ( it8 -> ch - '0' )		702717	0		=			
ANR	702741	PtrMemberAccess	it8 -> dnum		702717	0					
ANR	702742	Identifier	it8		702717	0					
ANR	702743	Identifier	dnum		702717	1					
ANR	702744	AdditiveExpression	it8 -> dnum * 10.0 + ( it8 -> ch - '0' )		702717	1		+			
ANR	702745	MultiplicativeExpression	it8 -> dnum * 10.0		702717	0		*			
ANR	702746	PtrMemberAccess	it8 -> dnum		702717	0					
ANR	702747	Identifier	it8		702717	0					
ANR	702748	Identifier	dnum		702717	1					
ANR	702749	PrimaryExpression	10.0		702717	1					
ANR	702750	AdditiveExpression	it8 -> ch - '0'		702717	1		-			
ANR	702751	PtrMemberAccess	it8 -> ch		702717	0					
ANR	702752	Identifier	it8		702717	0					
ANR	702753	Identifier	ch		702717	1					
ANR	702754	PrimaryExpression	'0'		702717	1					
ANR	702755	ExpressionStatement	NextCh ( it8 )	545:8:20395:20406	702717	1	True				
ANR	702756	CallExpression	NextCh ( it8 )		702717	0					
ANR	702757	Callee	NextCh		702717	0					
ANR	702758	Identifier	NextCh		702717	0					
ANR	702759	ArgumentList	it8		702717	1					
ANR	702760	Argument	it8		702717	0					
ANR	702761	Identifier	it8		702717	0					
ANR	702762	IfStatement	if ( it8 -> ch == '.' )		702717	2					
ANR	702763	Condition	it8 -> ch == '.'	548:8:20423:20436	702717	0	True				
ANR	702764	EqualityExpression	it8 -> ch == '.'		702717	0		==			
ANR	702765	PtrMemberAccess	it8 -> ch		702717	0					
ANR	702766	Identifier	it8		702717	0					
ANR	702767	Identifier	ch		702717	1					
ANR	702768	PrimaryExpression	'.'		702717	1					
ANR	702769	CompoundStatement		13:8:272:284	702717	1					
ANR	702770	IdentifierDeclStatement	cmsFloat64Number frac = 0.0 ;	550:8:20474:20501	702717	0	True				
ANR	702771	IdentifierDecl	frac = 0.0		702717	0					
ANR	702772	IdentifierDeclType	cmsFloat64Number		702717	0					
ANR	702773	Identifier	frac		702717	1					
ANR	702774	AssignmentExpression	frac = 0.0		702717	2		=			
ANR	702775	Identifier	frac		702717	0					
ANR	702776	PrimaryExpression	0.0		702717	1					
ANR	702777	IdentifierDeclStatement	int prec = 0 ;	551:8:20528:20540	702717	1	True				
ANR	702778	IdentifierDecl	prec = 0		702717	0					
ANR	702779	IdentifierDeclType	int		702717	0					
ANR	702780	Identifier	prec		702717	1					
ANR	702781	AssignmentExpression	prec = 0		702717	2		=			
ANR	702782	Identifier	prec		702717	0					
ANR	702783	PrimaryExpression	0		702717	1					
ANR	702784	ExpressionStatement	NextCh ( it8 )	553:8:20584:20595	702717	2	True				
ANR	702785	CallExpression	NextCh ( it8 )		702717	0					
ANR	702786	Callee	NextCh		702717	0					
ANR	702787	Identifier	NextCh		702717	0					
ANR	702788	ArgumentList	it8		702717	1					
ANR	702789	Argument	it8		702717	0					
ANR	702790	Identifier	it8		702717	0					
ANR	702791	WhileStatement	while ( isdigit ( it8 -> ch ) )		702717	3					
ANR	702792	Condition	isdigit ( it8 -> ch )	555:15:20646:20661	702717	0	True				
ANR	702793	CallExpression	isdigit ( it8 -> ch )		702717	0					
ANR	702794	Callee	isdigit		702717	0					
ANR	702795	Identifier	isdigit		702717	0					
ANR	702796	ArgumentList	it8 -> ch		702717	1					
ANR	702797	Argument	it8 -> ch		702717	0					
ANR	702798	PtrMemberAccess	it8 -> ch		702717	0					
ANR	702799	Identifier	it8		702717	0					
ANR	702800	Identifier	ch		702717	1					
ANR	702801	CompoundStatement		17:33:408:408	702717	1					
ANR	702802	ExpressionStatement	frac = frac * 10.0 + ( it8 -> ch - '0' )	557:12:20679:20715	702717	0	True				
ANR	702803	AssignmentExpression	frac = frac * 10.0 + ( it8 -> ch - '0' )		702717	0		=			
ANR	702804	Identifier	frac		702717	0					
ANR	702805	AdditiveExpression	frac * 10.0 + ( it8 -> ch - '0' )		702717	1		+			
ANR	702806	MultiplicativeExpression	frac * 10.0		702717	0		*			
ANR	702807	Identifier	frac		702717	0					
ANR	702808	PrimaryExpression	10.0		702717	1					
ANR	702809	AdditiveExpression	it8 -> ch - '0'		702717	1		-			
ANR	702810	PtrMemberAccess	it8 -> ch		702717	0					
ANR	702811	Identifier	it8		702717	0					
ANR	702812	Identifier	ch		702717	1					
ANR	702813	PrimaryExpression	'0'		702717	1					
ANR	702814	ExpressionStatement	prec ++	558:12:20729:20735	702717	1	True				
ANR	702815	PostIncDecOperationExpression	prec ++		702717	0					
ANR	702816	Identifier	prec		702717	0					
ANR	702817	IncDec	++		702717	1					
ANR	702818	ExpressionStatement	NextCh ( it8 )	559:12:20749:20760	702717	2	True				
ANR	702819	CallExpression	NextCh ( it8 )		702717	0					
ANR	702820	Callee	NextCh		702717	0					
ANR	702821	Identifier	NextCh		702717	0					
ANR	702822	ArgumentList	it8		702717	1					
ANR	702823	Argument	it8		702717	0					
ANR	702824	Identifier	it8		702717	0					
ANR	702825	ExpressionStatement	it8 -> dnum = it8 -> dnum + ( frac / xpow10 ( prec ) )	562:8:20781:20826	702717	4	True				
ANR	702826	AssignmentExpression	it8 -> dnum = it8 -> dnum + ( frac / xpow10 ( prec ) )		702717	0		=			
ANR	702827	PtrMemberAccess	it8 -> dnum		702717	0					
ANR	702828	Identifier	it8		702717	0					
ANR	702829	Identifier	dnum		702717	1					
ANR	702830	AdditiveExpression	it8 -> dnum + ( frac / xpow10 ( prec ) )		702717	1		+			
ANR	702831	PtrMemberAccess	it8 -> dnum		702717	0					
ANR	702832	Identifier	it8		702717	0					
ANR	702833	Identifier	dnum		702717	1					
ANR	702834	MultiplicativeExpression	frac / xpow10 ( prec )		702717	1		/			
ANR	702835	Identifier	frac		702717	0					
ANR	702836	CallExpression	xpow10 ( prec )		702717	1					
ANR	702837	Callee	xpow10		702717	0					
ANR	702838	Identifier	xpow10		702717	0					
ANR	702839	ArgumentList	prec		702717	1					
ANR	702840	Argument	prec		702717	0					
ANR	702841	Identifier	prec		702717	0					
ANR	702842	IfStatement	if ( toupper ( it8 -> ch ) == 'E' )		702717	3					
ANR	702843	Condition	toupper ( it8 -> ch ) == 'E'	566:8:20878:20900	702717	0	True				
ANR	702844	EqualityExpression	toupper ( it8 -> ch ) == 'E'		702717	0		==			
ANR	702845	CallExpression	toupper ( it8 -> ch )		702717	0					
ANR	702846	Callee	toupper		702717	0					
ANR	702847	Identifier	toupper		702717	0					
ANR	702848	ArgumentList	it8 -> ch		702717	1					
ANR	702849	Argument	it8 -> ch		702717	0					
ANR	702850	PtrMemberAccess	it8 -> ch		702717	0					
ANR	702851	Identifier	it8		702717	0					
ANR	702852	Identifier	ch		702717	1					
ANR	702853	PrimaryExpression	'E'		702717	1					
ANR	702854	CompoundStatement		31:8:673:680	702717	1					
ANR	702855	IdentifierDeclStatement	int e ;	568:8:20914:20919	702717	0	True				
ANR	702856	IdentifierDecl	e		702717	0					
ANR	702857	IdentifierDeclType	int		702717	0					
ANR	702858	Identifier	e		702717	1					
ANR	702859	IdentifierDeclStatement	int sgn ;	569:8:20929:20936	702717	1	True				
ANR	702860	IdentifierDecl	sgn		702717	0					
ANR	702861	IdentifierDeclType	int		702717	0					
ANR	702862	Identifier	sgn		702717	1					
ANR	702863	ExpressionStatement	NextCh ( it8 )	571:8:20947:20958	702717	2	True				
ANR	702864	CallExpression	NextCh ( it8 )		702717	0					
ANR	702865	Callee	NextCh		702717	0					
ANR	702866	Identifier	NextCh		702717	0					
ANR	702867	ArgumentList	it8		702717	1					
ANR	702868	Argument	it8		702717	0					
ANR	702869	Identifier	it8		702717	0					
ANR	702870	ExpressionStatement	sgn = 1	571:21:20960:20967	702717	3	True				
ANR	702871	AssignmentExpression	sgn = 1		702717	0		=			
ANR	702872	Identifier	sgn		702717	0					
ANR	702873	PrimaryExpression	1		702717	1					
ANR	702874	IfStatement	if ( it8 -> ch == '-' )		702717	4					
ANR	702875	Condition	it8 -> ch == '-'	573:12:20982:20995	702717	0	True				
ANR	702876	EqualityExpression	it8 -> ch == '-'		702717	0		==			
ANR	702877	PtrMemberAccess	it8 -> ch		702717	0					
ANR	702878	Identifier	it8		702717	0					
ANR	702879	Identifier	ch		702717	1					
ANR	702880	PrimaryExpression	'-'		702717	1					
ANR	702881	CompoundStatement		35:28:742:742	702717	1					
ANR	702882	ExpressionStatement	sgn = - 1	575:12:21013:21021	702717	0	True				
ANR	702883	AssignmentExpression	sgn = - 1		702717	0		=			
ANR	702884	Identifier	sgn		702717	0					
ANR	702885	UnaryOperationExpression	- 1		702717	1					
ANR	702886	UnaryOperator	-		702717	0					
ANR	702887	PrimaryExpression	1		702717	1					
ANR	702888	ExpressionStatement	NextCh ( it8 )	575:22:21023:21034	702717	1	True				
ANR	702889	CallExpression	NextCh ( it8 )		702717	0					
ANR	702890	Callee	NextCh		702717	0					
ANR	702891	Identifier	NextCh		702717	0					
ANR	702892	ArgumentList	it8		702717	1					
ANR	702893	Argument	it8		702717	0					
ANR	702894	Identifier	it8		702717	0					
ANR	702895	ElseStatement	else		702717	0					
ANR	702896	IfStatement	if ( it8 -> ch == '+' )		702717	0					
ANR	702897	Condition	it8 -> ch == '+'	578:16:21075:21088	702717	0	True				
ANR	702898	EqualityExpression	it8 -> ch == '+'		702717	0		==			
ANR	702899	PtrMemberAccess	it8 -> ch		702717	0					
ANR	702900	Identifier	it8		702717	0					
ANR	702901	Identifier	ch		702717	1					
ANR	702902	PrimaryExpression	'+'		702717	1					
ANR	702903	CompoundStatement		40:32:835:835	702717	1					
ANR	702904	ExpressionStatement	sgn = + 1	580:16:21110:21118	702717	0	True				
ANR	702905	AssignmentExpression	sgn = + 1		702717	0		=			
ANR	702906	Identifier	sgn		702717	0					
ANR	702907	UnaryOperationExpression	+ 1		702717	1					
ANR	702908	UnaryOperator	+		702717	0					
ANR	702909	PrimaryExpression	1		702717	1					
ANR	702910	ExpressionStatement	NextCh ( it8 )	581:16:21136:21147	702717	1	True				
ANR	702911	CallExpression	NextCh ( it8 )		702717	0					
ANR	702912	Callee	NextCh		702717	0					
ANR	702913	Identifier	NextCh		702717	0					
ANR	702914	ArgumentList	it8		702717	1					
ANR	702915	Argument	it8		702717	0					
ANR	702916	Identifier	it8		702717	0					
ANR	702917	ExpressionStatement	e = 0	584:12:21176:21181	702717	5	True				
ANR	702918	AssignmentExpression	e = 0		702717	0		=			
ANR	702919	Identifier	e		702717	0					
ANR	702920	PrimaryExpression	0		702717	1					
ANR	702921	WhileStatement	while ( isdigit ( it8 -> ch ) )		702717	6					
ANR	702922	Condition	isdigit ( it8 -> ch )	585:19:21202:21217	702717	0	True				
ANR	702923	CallExpression	isdigit ( it8 -> ch )		702717	0					
ANR	702924	Callee	isdigit		702717	0					
ANR	702925	Identifier	isdigit		702717	0					
ANR	702926	ArgumentList	it8 -> ch		702717	1					
ANR	702927	Argument	it8 -> ch		702717	0					
ANR	702928	PtrMemberAccess	it8 -> ch		702717	0					
ANR	702929	Identifier	it8		702717	0					
ANR	702930	Identifier	ch		702717	1					
ANR	702931	CompoundStatement		47:37:964:964	702717	1					
ANR	702932	IfStatement	if ( ( cmsFloat64Number ) e * 10L < INT_MAX )		702717	0					
ANR	702933	Condition	( cmsFloat64Number ) e * 10L < INT_MAX	587:20:21243:21278	702717	0	True				
ANR	702934	RelationalExpression	( cmsFloat64Number ) e * 10L < INT_MAX		702717	0		<			
ANR	702935	MultiplicativeExpression	( cmsFloat64Number ) e * 10L		702717	0		*			
ANR	702936	CastExpression	( cmsFloat64Number ) e		702717	0					
ANR	702937	CastTarget	cmsFloat64Number		702717	0					
ANR	702938	Identifier	e		702717	1					
ANR	702939	PrimaryExpression	10L		702717	1					
ANR	702940	Identifier	INT_MAX		702717	1					
ANR	702941	ExpressionStatement	e = e * 10 + ( it8 -> ch - '0' )	588:20:21301:21329	702717	1	True				
ANR	702942	AssignmentExpression	e = e * 10 + ( it8 -> ch - '0' )		702717	0		=			
ANR	702943	Identifier	e		702717	0					
ANR	702944	AdditiveExpression	e * 10 + ( it8 -> ch - '0' )		702717	1		+			
ANR	702945	MultiplicativeExpression	e * 10		702717	0		*			
ANR	702946	Identifier	e		702717	0					
ANR	702947	PrimaryExpression	10		702717	1					
ANR	702948	AdditiveExpression	it8 -> ch - '0'		702717	1		-			
ANR	702949	PtrMemberAccess	it8 -> ch		702717	0					
ANR	702950	Identifier	it8		702717	0					
ANR	702951	Identifier	ch		702717	1					
ANR	702952	PrimaryExpression	'0'		702717	1					
ANR	702953	ExpressionStatement	NextCh ( it8 )	590:16:21348:21359	702717	1	True				
ANR	702954	CallExpression	NextCh ( it8 )		702717	0					
ANR	702955	Callee	NextCh		702717	0					
ANR	702956	Identifier	NextCh		702717	0					
ANR	702957	ArgumentList	it8		702717	1					
ANR	702958	Argument	it8		702717	0					
ANR	702959	Identifier	it8		702717	0					
ANR	702960	ExpressionStatement	e = sgn * e	593:12:21388:21397	702717	7	True				
ANR	702961	AssignmentExpression	e = sgn * e		702717	0		=			
ANR	702962	Identifier	e		702717	0					
ANR	702963	MultiplicativeExpression	sgn * e		702717	1		*			
ANR	702964	Identifier	sgn		702717	0					
ANR	702965	Identifier	e		702717	1					
ANR	702966	ExpressionStatement	it8 -> dnum = it8 -> dnum * xpow10 ( e )	594:12:21411:21448	702717	8	True				
ANR	702967	AssignmentExpression	it8 -> dnum = it8 -> dnum * xpow10 ( e )		702717	0		=			
ANR	702968	PtrMemberAccess	it8 -> dnum		702717	0					
ANR	702969	Identifier	it8		702717	0					
ANR	702970	Identifier	dnum		702717	1					
ANR	702971	MultiplicativeExpression	it8 -> dnum * xpow10 ( e )		702717	1		*			
ANR	702972	PtrMemberAccess	it8 -> dnum		702717	0					
ANR	702973	Identifier	it8		702717	0					
ANR	702974	Identifier	dnum		702717	1					
ANR	702975	CallExpression	xpow10 ( e )		702717	1					
ANR	702976	Callee	xpow10		702717	0					
ANR	702977	Identifier	xpow10		702717	0					
ANR	702978	ArgumentList	e		702717	1					
ANR	702979	Argument	e		702717	0					
ANR	702980	Identifier	e		702717	0					
ANR	702981	ReturnType	static void		702717	1					
ANR	702982	Identifier	ReadReal		702717	2					
ANR	702983	ParameterList	"cmsIT8 * it8 , int inum"		702717	3					
ANR	702984	Parameter	cmsIT8 * it8	538:14:20232:20242	702717	0	True				
ANR	702985	ParameterType	cmsIT8 *		702717	0					
ANR	702986	Identifier	it8		702717	1					
ANR	702987	Parameter	int inum	538:27:20245:20252	702717	1	True				
ANR	702988	ParameterType	int		702717	0					
ANR	702989	Identifier	inum		702717	1					
ANR	702990	CFGEntryNode	ENTRY		702717		True				
ANR	702991	CFGExitNode	EXIT		702717		True				
ANR	702992	Symbol	toupper		702717						
ANR	702993	Symbol	e		702717						
ANR	702994	Symbol	* it8		702717						
ANR	702995	Symbol	it8 -> ch		702717						
ANR	702996	Symbol	it8		702717						
ANR	702997	Symbol	inum		702717						
ANR	702998	Symbol	prec		702717						
ANR	702999	Symbol	it8 -> dnum		702717						
ANR	703000	Symbol	INT_MAX		702717						
ANR	703001	Symbol	xpow10		702717						
ANR	703002	Symbol	sgn		702717						
ANR	703003	Symbol	isdigit		702717						
ANR	703004	Symbol	frac		702717						
ANR	703005	Function	ParseFloatNumber	601:0:21615:23143							
ANR	703006	FunctionDef	ParseFloatNumber (const char * Buffer)		703005	0					
ANR	703007	CompoundStatement		603:0:21676:23143	703005	0					
ANR	703008	IdentifierDeclStatement	cmsFloat64Number dnum = 0.0 ;	604:4:21682:21709	703005	0	True				
ANR	703009	IdentifierDecl	dnum = 0.0		703005	0					
ANR	703010	IdentifierDeclType	cmsFloat64Number		703005	0					
ANR	703011	Identifier	dnum		703005	1					
ANR	703012	AssignmentExpression	dnum = 0.0		703005	2		=			
ANR	703013	Identifier	dnum		703005	0					
ANR	703014	PrimaryExpression	0.0		703005	1					
ANR	703015	IdentifierDeclStatement	int sign = 1 ;	605:4:21715:21727	703005	1	True				
ANR	703016	IdentifierDecl	sign = 1		703005	0					
ANR	703017	IdentifierDeclType	int		703005	0					
ANR	703018	Identifier	sign		703005	1					
ANR	703019	AssignmentExpression	sign = 1		703005	2		=			
ANR	703020	Identifier	sign		703005	0					
ANR	703021	PrimaryExpression	1		703005	1					
ANR	703022	IfStatement	if ( Buffer == NULL )		703005	2					
ANR	703023	Condition	Buffer == NULL	608:8:21755:21768	703005	0	True				
ANR	703024	EqualityExpression	Buffer == NULL		703005	0		==			
ANR	703025	Identifier	Buffer		703005	0					
ANR	703026	Identifier	NULL		703005	1					
ANR	703027	ReturnStatement	return 0.0 ;	608:24:21771:21781	703005	1	True				
ANR	703028	PrimaryExpression	0.0		703005	0					
ANR	703029	IfStatement	if ( * Buffer == '-' || * Buffer == '+' )		703005	3					
ANR	703030	Condition	* Buffer == '-' || * Buffer == '+'	610:8:21792:21823	703005	0	True				
ANR	703031	OrExpression	* Buffer == '-' || * Buffer == '+'		703005	0		||			
ANR	703032	EqualityExpression	* Buffer == '-'		703005	0		==			
ANR	703033	UnaryOperationExpression	* Buffer		703005	0					
ANR	703034	UnaryOperator	*		703005	0					
ANR	703035	Identifier	Buffer		703005	1					
ANR	703036	PrimaryExpression	'-'		703005	1					
ANR	703037	EqualityExpression	* Buffer == '+'		703005	1		==			
ANR	703038	UnaryOperationExpression	* Buffer		703005	0					
ANR	703039	UnaryOperator	*		703005	0					
ANR	703040	Identifier	Buffer		703005	1					
ANR	703041	PrimaryExpression	'+'		703005	1					
ANR	703042	CompoundStatement		8:42:149:149	703005	1					
ANR	703043	ExpressionStatement	sign = ( * Buffer == '-' ) ? - 1 : 1	612:9:21838:21870	703005	0	True				
ANR	703044	AssignmentExpression	sign = ( * Buffer == '-' ) ? - 1 : 1		703005	0		=			
ANR	703045	Identifier	sign		703005	0					
ANR	703046	ConditionalExpression	( * Buffer == '-' ) ? - 1 : 1		703005	1					
ANR	703047	Condition	* Buffer == '-'		703005	0					
ANR	703048	EqualityExpression	* Buffer == '-'		703005	0		==			
ANR	703049	UnaryOperationExpression	* Buffer		703005	0					
ANR	703050	UnaryOperator	*		703005	0					
ANR	703051	Identifier	Buffer		703005	1					
ANR	703052	PrimaryExpression	'-'		703005	1					
ANR	703053	UnaryOperationExpression	- 1		703005	1					
ANR	703054	UnaryOperator	-		703005	0					
ANR	703055	PrimaryExpression	1		703005	1					
ANR	703056	PrimaryExpression	1		703005	2					
ANR	703057	ExpressionStatement	Buffer ++	613:9:21881:21889	703005	1	True				
ANR	703058	PostIncDecOperationExpression	Buffer ++		703005	0					
ANR	703059	Identifier	Buffer		703005	0					
ANR	703060	IncDec	++		703005	1					
ANR	703061	WhileStatement	while ( * Buffer && isdigit ( ( int ) * Buffer ) )		703005	4					
ANR	703062	Condition	* Buffer && isdigit ( ( int ) * Buffer )	617:11:21910:21942	703005	0	True				
ANR	703063	AndExpression	* Buffer && isdigit ( ( int ) * Buffer )		703005	0		&&			
ANR	703064	UnaryOperationExpression	* Buffer		703005	0					
ANR	703065	UnaryOperator	*		703005	0					
ANR	703066	Identifier	Buffer		703005	1					
ANR	703067	CallExpression	isdigit ( ( int ) * Buffer )		703005	1					
ANR	703068	Callee	isdigit		703005	0					
ANR	703069	Identifier	isdigit		703005	0					
ANR	703070	ArgumentList	( int ) * Buffer		703005	1					
ANR	703071	Argument	( int ) * Buffer		703005	0					
ANR	703072	CastExpression	( int ) * Buffer		703005	0					
ANR	703073	CastTarget	int		703005	0					
ANR	703074	UnaryOperationExpression	* Buffer		703005	1					
ANR	703075	UnaryOperator	*		703005	0					
ANR	703076	Identifier	Buffer		703005	1					
ANR	703077	CompoundStatement		15:46:268:268	703005	1					
ANR	703078	ExpressionStatement	dnum = dnum * 10.0 + ( * Buffer - '0' )	619:8:21956:21992	703005	0	True				
ANR	703079	AssignmentExpression	dnum = dnum * 10.0 + ( * Buffer - '0' )		703005	0		=			
ANR	703080	Identifier	dnum		703005	0					
ANR	703081	AdditiveExpression	dnum * 10.0 + ( * Buffer - '0' )		703005	1		+			
ANR	703082	MultiplicativeExpression	dnum * 10.0		703005	0		*			
ANR	703083	Identifier	dnum		703005	0					
ANR	703084	PrimaryExpression	10.0		703005	1					
ANR	703085	AdditiveExpression	* Buffer - '0'		703005	1		-			
ANR	703086	UnaryOperationExpression	* Buffer		703005	0					
ANR	703087	UnaryOperator	*		703005	0					
ANR	703088	Identifier	Buffer		703005	1					
ANR	703089	PrimaryExpression	'0'		703005	1					
ANR	703090	IfStatement	if ( * Buffer )		703005	1					
ANR	703091	Condition	* Buffer	620:12:22006:22012	703005	0	True				
ANR	703092	UnaryOperationExpression	* Buffer		703005	0					
ANR	703093	UnaryOperator	*		703005	0					
ANR	703094	Identifier	Buffer		703005	1					
ANR	703095	ExpressionStatement	Buffer ++	620:21:22015:22023	703005	1	True				
ANR	703096	PostIncDecOperationExpression	Buffer ++		703005	0					
ANR	703097	Identifier	Buffer		703005	0					
ANR	703098	IncDec	++		703005	1					
ANR	703099	IfStatement	if ( * Buffer == '.' )		703005	5					
ANR	703100	Condition	* Buffer == '.'	623:8:22040:22053	703005	0	True				
ANR	703101	EqualityExpression	* Buffer == '.'		703005	0		==			
ANR	703102	UnaryOperationExpression	* Buffer		703005	0					
ANR	703103	UnaryOperator	*		703005	0					
ANR	703104	Identifier	Buffer		703005	1					
ANR	703105	PrimaryExpression	'.'		703005	1					
ANR	703106	CompoundStatement		24:8:444:456	703005	1					
ANR	703107	IdentifierDeclStatement	cmsFloat64Number frac = 0.0 ;	625:8:22067:22094	703005	0	True				
ANR	703108	IdentifierDecl	frac = 0.0		703005	0					
ANR	703109	IdentifierDeclType	cmsFloat64Number		703005	0					
ANR	703110	Identifier	frac		703005	1					
ANR	703111	AssignmentExpression	frac = 0.0		703005	2		=			
ANR	703112	Identifier	frac		703005	0					
ANR	703113	PrimaryExpression	0.0		703005	1					
ANR	703114	IdentifierDeclStatement	int prec = 0 ;	626:8:22121:22133	703005	1	True				
ANR	703115	IdentifierDecl	prec = 0		703005	0					
ANR	703116	IdentifierDeclType	int		703005	0					
ANR	703117	Identifier	prec		703005	1					
ANR	703118	AssignmentExpression	prec = 0		703005	2		=			
ANR	703119	Identifier	prec		703005	0					
ANR	703120	PrimaryExpression	0		703005	1					
ANR	703121	IfStatement	if ( * Buffer )		703005	2					
ANR	703122	Condition	* Buffer	628:12:22182:22188	703005	0	True				
ANR	703123	UnaryOperationExpression	* Buffer		703005	0					
ANR	703124	UnaryOperator	*		703005	0					
ANR	703125	Identifier	Buffer		703005	1					
ANR	703126	ExpressionStatement	Buffer ++	628:21:22191:22199	703005	1	True				
ANR	703127	PostIncDecOperationExpression	Buffer ++		703005	0					
ANR	703128	Identifier	Buffer		703005	0					
ANR	703129	IncDec	++		703005	1					
ANR	703130	WhileStatement	while ( * Buffer && isdigit ( ( int ) * Buffer ) )		703005	3					
ANR	703131	Condition	* Buffer && isdigit ( ( int ) * Buffer )	630:15:22217:22249	703005	0	True				
ANR	703132	AndExpression	* Buffer && isdigit ( ( int ) * Buffer )		703005	0		&&			
ANR	703133	UnaryOperationExpression	* Buffer		703005	0					
ANR	703134	UnaryOperator	*		703005	0					
ANR	703135	Identifier	Buffer		703005	1					
ANR	703136	CallExpression	isdigit ( ( int ) * Buffer )		703005	1					
ANR	703137	Callee	isdigit		703005	0					
ANR	703138	Identifier	isdigit		703005	0					
ANR	703139	ArgumentList	( int ) * Buffer		703005	1					
ANR	703140	Argument	( int ) * Buffer		703005	0					
ANR	703141	CastExpression	( int ) * Buffer		703005	0					
ANR	703142	CastTarget	int		703005	0					
ANR	703143	UnaryOperationExpression	* Buffer		703005	1					
ANR	703144	UnaryOperator	*		703005	0					
ANR	703145	Identifier	Buffer		703005	1					
ANR	703146	CompoundStatement		28:50:575:575	703005	1					
ANR	703147	ExpressionStatement	frac = frac * 10.0 + ( * Buffer - '0' )	632:12:22267:22303	703005	0	True				
ANR	703148	AssignmentExpression	frac = frac * 10.0 + ( * Buffer - '0' )		703005	0		=			
ANR	703149	Identifier	frac		703005	0					
ANR	703150	AdditiveExpression	frac * 10.0 + ( * Buffer - '0' )		703005	1		+			
ANR	703151	MultiplicativeExpression	frac * 10.0		703005	0		*			
ANR	703152	Identifier	frac		703005	0					
ANR	703153	PrimaryExpression	10.0		703005	1					
ANR	703154	AdditiveExpression	* Buffer - '0'		703005	1		-			
ANR	703155	UnaryOperationExpression	* Buffer		703005	0					
ANR	703156	UnaryOperator	*		703005	0					
ANR	703157	Identifier	Buffer		703005	1					
ANR	703158	PrimaryExpression	'0'		703005	1					
ANR	703159	ExpressionStatement	prec ++	633:12:22317:22323	703005	1	True				
ANR	703160	PostIncDecOperationExpression	prec ++		703005	0					
ANR	703161	Identifier	prec		703005	0					
ANR	703162	IncDec	++		703005	1					
ANR	703163	IfStatement	if ( * Buffer )		703005	2					
ANR	703164	Condition	* Buffer	634:16:22341:22347	703005	0	True				
ANR	703165	UnaryOperationExpression	* Buffer		703005	0					
ANR	703166	UnaryOperator	*		703005	0					
ANR	703167	Identifier	Buffer		703005	1					
ANR	703168	ExpressionStatement	Buffer ++	634:25:22350:22358	703005	1	True				
ANR	703169	PostIncDecOperationExpression	Buffer ++		703005	0					
ANR	703170	Identifier	Buffer		703005	0					
ANR	703171	IncDec	++		703005	1					
ANR	703172	ExpressionStatement	dnum = dnum + ( frac / xpow10 ( prec ) )	637:8:22379:22414	703005	4	True				
ANR	703173	AssignmentExpression	dnum = dnum + ( frac / xpow10 ( prec ) )		703005	0		=			
ANR	703174	Identifier	dnum		703005	0					
ANR	703175	AdditiveExpression	dnum + ( frac / xpow10 ( prec ) )		703005	1		+			
ANR	703176	Identifier	dnum		703005	0					
ANR	703177	MultiplicativeExpression	frac / xpow10 ( prec )		703005	1		/			
ANR	703178	Identifier	frac		703005	0					
ANR	703179	CallExpression	xpow10 ( prec )		703005	1					
ANR	703180	Callee	xpow10		703005	0					
ANR	703181	Identifier	xpow10		703005	0					
ANR	703182	ArgumentList	prec		703005	1					
ANR	703183	Argument	prec		703005	0					
ANR	703184	Identifier	prec		703005	0					
ANR	703185	IfStatement	if ( * Buffer && toupper ( * Buffer ) == 'E' )		703005	6					
ANR	703186	Condition	* Buffer && toupper ( * Buffer ) == 'E'	641:8:22466:22499	703005	0	True				
ANR	703187	AndExpression	* Buffer && toupper ( * Buffer ) == 'E'		703005	0		&&			
ANR	703188	UnaryOperationExpression	* Buffer		703005	0					
ANR	703189	UnaryOperator	*		703005	0					
ANR	703190	Identifier	Buffer		703005	1					
ANR	703191	EqualityExpression	toupper ( * Buffer ) == 'E'		703005	1		==			
ANR	703192	CallExpression	toupper ( * Buffer )		703005	0					
ANR	703193	Callee	toupper		703005	0					
ANR	703194	Identifier	toupper		703005	0					
ANR	703195	ArgumentList	* Buffer		703005	1					
ANR	703196	Argument	* Buffer		703005	0					
ANR	703197	UnaryOperationExpression	* Buffer		703005	0					
ANR	703198	UnaryOperator	*		703005	0					
ANR	703199	Identifier	Buffer		703005	1					
ANR	703200	PrimaryExpression	'E'		703005	1					
ANR	703201	CompoundStatement		42:8:851:858	703005	1					
ANR	703202	IdentifierDeclStatement	int e ;	643:8:22513:22518	703005	0	True				
ANR	703203	IdentifierDecl	e		703005	0					
ANR	703204	IdentifierDeclType	int		703005	0					
ANR	703205	Identifier	e		703005	1					
ANR	703206	IdentifierDeclStatement	int sgn ;	644:8:22528:22535	703005	1	True				
ANR	703207	IdentifierDecl	sgn		703005	0					
ANR	703208	IdentifierDeclType	int		703005	0					
ANR	703209	Identifier	sgn		703005	1					
ANR	703210	IfStatement	if ( * Buffer )		703005	2					
ANR	703211	Condition	* Buffer	646:12:22550:22556	703005	0	True				
ANR	703212	UnaryOperationExpression	* Buffer		703005	0					
ANR	703213	UnaryOperator	*		703005	0					
ANR	703214	Identifier	Buffer		703005	1					
ANR	703215	ExpressionStatement	Buffer ++	646:21:22559:22567	703005	1	True				
ANR	703216	PostIncDecOperationExpression	Buffer ++		703005	0					
ANR	703217	Identifier	Buffer		703005	0					
ANR	703218	IncDec	++		703005	1					
ANR	703219	ExpressionStatement	sgn = 1	647:8:22577:22584	703005	3	True				
ANR	703220	AssignmentExpression	sgn = 1		703005	0		=			
ANR	703221	Identifier	sgn		703005	0					
ANR	703222	PrimaryExpression	1		703005	1					
ANR	703223	IfStatement	if ( * Buffer == '-' )		703005	4					
ANR	703224	Condition	* Buffer == '-'	649:12:22599:22612	703005	0	True				
ANR	703225	EqualityExpression	* Buffer == '-'		703005	0		==			
ANR	703226	UnaryOperationExpression	* Buffer		703005	0					
ANR	703227	UnaryOperator	*		703005	0					
ANR	703228	Identifier	Buffer		703005	1					
ANR	703229	PrimaryExpression	'-'		703005	1					
ANR	703230	CompoundStatement		47:28:938:938	703005	1					
ANR	703231	ExpressionStatement	sgn = - 1	651:12:22630:22638	703005	0	True				
ANR	703232	AssignmentExpression	sgn = - 1		703005	0		=			
ANR	703233	Identifier	sgn		703005	0					
ANR	703234	UnaryOperationExpression	- 1		703005	1					
ANR	703235	UnaryOperator	-		703005	0					
ANR	703236	PrimaryExpression	1		703005	1					
ANR	703237	IfStatement	if ( * Buffer )		703005	1					
ANR	703238	Condition	* Buffer	652:16:22656:22662	703005	0	True				
ANR	703239	UnaryOperationExpression	* Buffer		703005	0					
ANR	703240	UnaryOperator	*		703005	0					
ANR	703241	Identifier	Buffer		703005	1					
ANR	703242	ExpressionStatement	Buffer ++	652:25:22665:22673	703005	1	True				
ANR	703243	PostIncDecOperationExpression	Buffer ++		703005	0					
ANR	703244	Identifier	Buffer		703005	0					
ANR	703245	IncDec	++		703005	1					
ANR	703246	ElseStatement	else		703005	0					
ANR	703247	IfStatement	if ( * Buffer == '+' )		703005	0					
ANR	703248	Condition	* Buffer == '+'	655:16:22714:22727	703005	0	True				
ANR	703249	EqualityExpression	* Buffer == '+'		703005	0		==			
ANR	703250	UnaryOperationExpression	* Buffer		703005	0					
ANR	703251	UnaryOperator	*		703005	0					
ANR	703252	Identifier	Buffer		703005	1					
ANR	703253	PrimaryExpression	'+'		703005	1					
ANR	703254	CompoundStatement		53:32:1053:1053	703005	1					
ANR	703255	ExpressionStatement	sgn = + 1	657:16:22749:22757	703005	0	True				
ANR	703256	AssignmentExpression	sgn = + 1		703005	0		=			
ANR	703257	Identifier	sgn		703005	0					
ANR	703258	UnaryOperationExpression	+ 1		703005	1					
ANR	703259	UnaryOperator	+		703005	0					
ANR	703260	PrimaryExpression	1		703005	1					
ANR	703261	IfStatement	if ( * Buffer )		703005	1					
ANR	703262	Condition	* Buffer	658:20:22779:22785	703005	0	True				
ANR	703263	UnaryOperationExpression	* Buffer		703005	0					
ANR	703264	UnaryOperator	*		703005	0					
ANR	703265	Identifier	Buffer		703005	1					
ANR	703266	ExpressionStatement	Buffer ++	658:29:22788:22796	703005	1	True				
ANR	703267	PostIncDecOperationExpression	Buffer ++		703005	0					
ANR	703268	Identifier	Buffer		703005	0					
ANR	703269	IncDec	++		703005	1					
ANR	703270	ExpressionStatement	e = 0	661:12:22825:22830	703005	5	True				
ANR	703271	AssignmentExpression	e = 0		703005	0		=			
ANR	703272	Identifier	e		703005	0					
ANR	703273	PrimaryExpression	0		703005	1					
ANR	703274	WhileStatement	while ( * Buffer && isdigit ( ( int ) * Buffer ) )		703005	6					
ANR	703275	Condition	* Buffer && isdigit ( ( int ) * Buffer )	662:19:22851:22883	703005	0	True				
ANR	703276	AndExpression	* Buffer && isdigit ( ( int ) * Buffer )		703005	0		&&			
ANR	703277	UnaryOperationExpression	* Buffer		703005	0					
ANR	703278	UnaryOperator	*		703005	0					
ANR	703279	Identifier	Buffer		703005	1					
ANR	703280	CallExpression	isdigit ( ( int ) * Buffer )		703005	1					
ANR	703281	Callee	isdigit		703005	0					
ANR	703282	Identifier	isdigit		703005	0					
ANR	703283	ArgumentList	( int ) * Buffer		703005	1					
ANR	703284	Argument	( int ) * Buffer		703005	0					
ANR	703285	CastExpression	( int ) * Buffer		703005	0					
ANR	703286	CastTarget	int		703005	0					
ANR	703287	UnaryOperationExpression	* Buffer		703005	1					
ANR	703288	UnaryOperator	*		703005	0					
ANR	703289	Identifier	Buffer		703005	1					
ANR	703290	CompoundStatement		60:54:1209:1209	703005	1					
ANR	703291	IfStatement	if ( ( cmsFloat64Number ) e * 10L < INT_MAX )		703005	0					
ANR	703292	Condition	( cmsFloat64Number ) e * 10L < INT_MAX	664:20:22909:22944	703005	0	True				
ANR	703293	RelationalExpression	( cmsFloat64Number ) e * 10L < INT_MAX		703005	0		<			
ANR	703294	MultiplicativeExpression	( cmsFloat64Number ) e * 10L		703005	0		*			
ANR	703295	CastExpression	( cmsFloat64Number ) e		703005	0					
ANR	703296	CastTarget	cmsFloat64Number		703005	0					
ANR	703297	Identifier	e		703005	1					
ANR	703298	PrimaryExpression	10L		703005	1					
ANR	703299	Identifier	INT_MAX		703005	1					
ANR	703300	ExpressionStatement	e = e * 10 + ( * Buffer - '0' )	665:20:22967:22995	703005	1	True				
ANR	703301	AssignmentExpression	e = e * 10 + ( * Buffer - '0' )		703005	0		=			
ANR	703302	Identifier	e		703005	0					
ANR	703303	AdditiveExpression	e * 10 + ( * Buffer - '0' )		703005	1		+			
ANR	703304	MultiplicativeExpression	e * 10		703005	0		*			
ANR	703305	Identifier	e		703005	0					
ANR	703306	PrimaryExpression	10		703005	1					
ANR	703307	AdditiveExpression	* Buffer - '0'		703005	1		-			
ANR	703308	UnaryOperationExpression	* Buffer		703005	0					
ANR	703309	UnaryOperator	*		703005	0					
ANR	703310	Identifier	Buffer		703005	1					
ANR	703311	PrimaryExpression	'0'		703005	1					
ANR	703312	IfStatement	if ( * Buffer )		703005	1					
ANR	703313	Condition	* Buffer	667:20:23018:23024	703005	0	True				
ANR	703314	UnaryOperationExpression	* Buffer		703005	0					
ANR	703315	UnaryOperator	*		703005	0					
ANR	703316	Identifier	Buffer		703005	1					
ANR	703317	ExpressionStatement	Buffer ++	667:29:23027:23035	703005	1	True				
ANR	703318	PostIncDecOperationExpression	Buffer ++		703005	0					
ANR	703319	Identifier	Buffer		703005	0					
ANR	703320	IncDec	++		703005	1					
ANR	703321	ExpressionStatement	e = sgn * e	670:12:23064:23073	703005	7	True				
ANR	703322	AssignmentExpression	e = sgn * e		703005	0		=			
ANR	703323	Identifier	e		703005	0					
ANR	703324	MultiplicativeExpression	sgn * e		703005	1		*			
ANR	703325	Identifier	sgn		703005	0					
ANR	703326	Identifier	e		703005	1					
ANR	703327	ExpressionStatement	dnum = dnum * xpow10 ( e )	671:12:23087:23110	703005	8	True				
ANR	703328	AssignmentExpression	dnum = dnum * xpow10 ( e )		703005	0		=			
ANR	703329	Identifier	dnum		703005	0					
ANR	703330	MultiplicativeExpression	dnum * xpow10 ( e )		703005	1		*			
ANR	703331	Identifier	dnum		703005	0					
ANR	703332	CallExpression	xpow10 ( e )		703005	1					
ANR	703333	Callee	xpow10		703005	0					
ANR	703334	Identifier	xpow10		703005	0					
ANR	703335	ArgumentList	e		703005	1					
ANR	703336	Argument	e		703005	0					
ANR	703337	Identifier	e		703005	0					
ANR	703338	ReturnStatement	return sign * dnum ;	674:4:23123:23141	703005	7	True				
ANR	703339	MultiplicativeExpression	sign * dnum		703005	0		*			
ANR	703340	Identifier	sign		703005	0					
ANR	703341	Identifier	dnum		703005	1					
ANR	703342	ReturnType	static cmsFloat64Number		703005	1					
ANR	703343	Identifier	ParseFloatNumber		703005	2					
ANR	703344	ParameterList	const char * Buffer		703005	3					
ANR	703345	Parameter	const char * Buffer	602:34:21656:21673	703005	0	True				
ANR	703346	ParameterType	const char *		703005	0					
ANR	703347	Identifier	Buffer		703005	1					
ANR	703348	CFGEntryNode	ENTRY		703005		True				
ANR	703349	CFGExitNode	EXIT		703005		True				
ANR	703350	Symbol	Buffer		703005						
ANR	703351	Symbol	NULL		703005						
ANR	703352	Symbol	toupper		703005						
ANR	703353	Symbol	e		703005						
ANR	703354	Symbol	sign		703005						
ANR	703355	Symbol	dnum		703005						
ANR	703356	Symbol	* Buffer		703005						
ANR	703357	Symbol	prec		703005						
ANR	703358	Symbol	INT_MAX		703005						
ANR	703359	Symbol	xpow10		703005						
ANR	703360	Symbol	sgn		703005						
ANR	703361	Symbol	isdigit		703005						
ANR	703362	Symbol	frac		703005						
ANR	703363	Function	InSymbol	679:0:23168:30195							
ANR	703364	FunctionDef	InSymbol (cmsIT8 * it8)		703363	0					
ANR	703365	CompoundStatement		681:0:23202:30195	703363	0					
ANR	703366	Statement	register	682:4:23208:23215	703363	0	True				
ANR	703367	IdentifierDeclStatement	char * idptr ;	682:13:23217:23228	703363	1	True				
ANR	703368	IdentifierDecl	* idptr		703363	0					
ANR	703369	IdentifierDeclType	char *		703363	0					
ANR	703370	Identifier	idptr		703363	1					
ANR	703371	Statement	register	683:4:23234:23241	703363	2	True				
ANR	703372	IdentifierDeclStatement	int k ;	683:13:23243:23248	703363	3	True				
ANR	703373	IdentifierDecl	k		703363	0					
ANR	703374	IdentifierDeclType	int		703363	0					
ANR	703375	Identifier	k		703363	1					
ANR	703376	IdentifierDeclStatement	SYMBOL key ;	684:4:23254:23264	703363	4	True				
ANR	703377	IdentifierDecl	key		703363	0					
ANR	703378	IdentifierDeclType	SYMBOL		703363	0					
ANR	703379	Identifier	key		703363	1					
ANR	703380	IdentifierDeclStatement	int sng ;	685:4:23270:23277	703363	5	True				
ANR	703381	IdentifierDecl	sng		703363	0					
ANR	703382	IdentifierDeclType	int		703363	0					
ANR	703383	Identifier	sng		703363	1					
ANR	703384	DoStatement	do		703363	6					
ANR	703385	CompoundStatement		7:7:88:88	703363	0					
ANR	703386	WhileStatement	while ( isseparator ( it8 -> ch ) )		703363	0					
ANR	703387	Condition	isseparator ( it8 -> ch )	689:15:23309:23328	703363	0	True				
ANR	703388	CallExpression	isseparator ( it8 -> ch )		703363	0					
ANR	703389	Callee	isseparator		703363	0					
ANR	703390	Identifier	isseparator		703363	0					
ANR	703391	ArgumentList	it8 -> ch		703363	1					
ANR	703392	Argument	it8 -> ch		703363	0					
ANR	703393	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703394	Identifier	it8		703363	0					
ANR	703395	Identifier	ch		703363	1					
ANR	703396	ExpressionStatement	NextCh ( it8 )	690:12:23343:23354	703363	1	True				
ANR	703397	CallExpression	NextCh ( it8 )		703363	0					
ANR	703398	Callee	NextCh		703363	0					
ANR	703399	Identifier	NextCh		703363	0					
ANR	703400	ArgumentList	it8		703363	1					
ANR	703401	Argument	it8		703363	0					
ANR	703402	Identifier	it8		703363	0					
ANR	703403	IfStatement	if ( isfirstidchar ( it8 -> ch ) )		703363	1					
ANR	703404	Condition	isfirstidchar ( it8 -> ch )	692:12:23369:23390	703363	0	True				
ANR	703405	CallExpression	isfirstidchar ( it8 -> ch )		703363	0					
ANR	703406	Callee	isfirstidchar		703363	0					
ANR	703407	Identifier	isfirstidchar		703363	0					
ANR	703408	ArgumentList	it8 -> ch		703363	1					
ANR	703409	Argument	it8 -> ch		703363	0					
ANR	703410	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703411	Identifier	it8		703363	0					
ANR	703412	Identifier	ch		703363	1					
ANR	703413	CompoundStatement		12:36:190:190	703363	1					
ANR	703414	ExpressionStatement	k = 0	694:12:23431:23436	703363	0	True				
ANR	703415	AssignmentExpression	k = 0		703363	0		=			
ANR	703416	Identifier	k		703363	0					
ANR	703417	PrimaryExpression	0		703363	1					
ANR	703418	ExpressionStatement	idptr = it8 -> id	695:12:23450:23465	703363	1	True				
ANR	703419	AssignmentExpression	idptr = it8 -> id		703363	0		=			
ANR	703420	Identifier	idptr		703363	0					
ANR	703421	PtrMemberAccess	it8 -> id		703363	1					
ANR	703422	Identifier	it8		703363	0					
ANR	703423	Identifier	id		703363	1					
ANR	703424	DoStatement	do		703363	2					
ANR	703425	CompoundStatement		17:15:280:280	703363	0					
ANR	703426	IfStatement	if ( ++ k < MAXID )		703363	0					
ANR	703427	Condition	++ k < MAXID	699:20:23506:23516	703363	0	True				
ANR	703428	RelationalExpression	++ k < MAXID		703363	0		<			
ANR	703429	UnaryExpression	++ k		703363	0					
ANR	703430	IncDec	++		703363	0					
ANR	703431	Identifier	k		703363	1					
ANR	703432	Identifier	MAXID		703363	1					
ANR	703433	ExpressionStatement	* idptr ++ = ( char ) it8 -> ch	699:33:23519:23544	703363	1	True				
ANR	703434	AssignmentExpression	* idptr ++ = ( char ) it8 -> ch		703363	0		=			
ANR	703435	UnaryOperationExpression	* idptr ++		703363	0					
ANR	703436	UnaryOperator	*		703363	0					
ANR	703437	PostIncDecOperationExpression	idptr ++		703363	1					
ANR	703438	Identifier	idptr		703363	0					
ANR	703439	IncDec	++		703363	1					
ANR	703440	CastExpression	( char ) it8 -> ch		703363	1					
ANR	703441	CastTarget	char		703363	0					
ANR	703442	PtrMemberAccess	it8 -> ch		703363	1					
ANR	703443	Identifier	it8		703363	0					
ANR	703444	Identifier	ch		703363	1					
ANR	703445	ExpressionStatement	NextCh ( it8 )	701:16:23563:23574	703363	1	True				
ANR	703446	CallExpression	NextCh ( it8 )		703363	0					
ANR	703447	Callee	NextCh		703363	0					
ANR	703448	Identifier	NextCh		703363	0					
ANR	703449	ArgumentList	it8		703363	1					
ANR	703450	Argument	it8		703363	0					
ANR	703451	Identifier	it8		703363	0					
ANR	703452	Condition	isidchar ( it8 -> ch )	703:21:23598:23614	703363	1	True				
ANR	703453	CallExpression	isidchar ( it8 -> ch )		703363	0					
ANR	703454	Callee	isidchar		703363	0					
ANR	703455	Identifier	isidchar		703363	0					
ANR	703456	ArgumentList	it8 -> ch		703363	1					
ANR	703457	Argument	it8 -> ch		703363	0					
ANR	703458	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703459	Identifier	it8		703363	0					
ANR	703460	Identifier	ch		703363	1					
ANR	703461	ExpressionStatement	* idptr = '\\0'	705:12:23631:23644	703363	3	True				
ANR	703462	AssignmentExpression	* idptr = '\\0'		703363	0		=			
ANR	703463	UnaryOperationExpression	* idptr		703363	0					
ANR	703464	UnaryOperator	*		703363	0					
ANR	703465	Identifier	idptr		703363	1					
ANR	703466	PrimaryExpression	'\\0'		703363	1					
ANR	703467	ExpressionStatement	key = BinSrchKey ( it8 -> id )	708:12:23660:23685	703363	4	True				
ANR	703468	AssignmentExpression	key = BinSrchKey ( it8 -> id )		703363	0		=			
ANR	703469	Identifier	key		703363	0					
ANR	703470	CallExpression	BinSrchKey ( it8 -> id )		703363	1					
ANR	703471	Callee	BinSrchKey		703363	0					
ANR	703472	Identifier	BinSrchKey		703363	0					
ANR	703473	ArgumentList	it8 -> id		703363	1					
ANR	703474	Argument	it8 -> id		703363	0					
ANR	703475	PtrMemberAccess	it8 -> id		703363	0					
ANR	703476	Identifier	it8		703363	0					
ANR	703477	Identifier	id		703363	1					
ANR	703478	IfStatement	if ( key == SUNDEFINED )		703363	5					
ANR	703479	Condition	key == SUNDEFINED	709:16:23703:23719	703363	0	True				
ANR	703480	EqualityExpression	key == SUNDEFINED		703363	0		==			
ANR	703481	Identifier	key		703363	0					
ANR	703482	Identifier	SUNDEFINED		703363	1					
ANR	703483	ExpressionStatement	it8 -> sy = SIDENT	709:35:23722:23738	703363	1	True				
ANR	703484	AssignmentExpression	it8 -> sy = SIDENT		703363	0		=			
ANR	703485	PtrMemberAccess	it8 -> sy		703363	0					
ANR	703486	Identifier	it8		703363	0					
ANR	703487	Identifier	sy		703363	1					
ANR	703488	Identifier	SIDENT		703363	1					
ANR	703489	ElseStatement	else		703363	0					
ANR	703490	ExpressionStatement	it8 -> sy = key	710:17:23757:23770	703363	0	True				
ANR	703491	AssignmentExpression	it8 -> sy = key		703363	0		=			
ANR	703492	PtrMemberAccess	it8 -> sy		703363	0					
ANR	703493	Identifier	it8		703363	0					
ANR	703494	Identifier	sy		703363	1					
ANR	703495	Identifier	key		703363	1					
ANR	703496	ElseStatement	else		703363	0					
ANR	703497	IfStatement	if ( isdigit ( it8 -> ch ) || it8 -> ch == '.' || it8 -> ch == '-' || it8 -> ch == '+' )		703363	0					
ANR	703498	Condition	isdigit ( it8 -> ch ) || it8 -> ch == '.' || it8 -> ch == '-' || it8 -> ch == '+'	714:16:23852:23921	703363	0	True				
ANR	703499	OrExpression	isdigit ( it8 -> ch ) || it8 -> ch == '.' || it8 -> ch == '-' || it8 -> ch == '+'		703363	0		||			
ANR	703500	CallExpression	isdigit ( it8 -> ch )		703363	0					
ANR	703501	Callee	isdigit		703363	0					
ANR	703502	Identifier	isdigit		703363	0					
ANR	703503	ArgumentList	it8 -> ch		703363	1					
ANR	703504	Argument	it8 -> ch		703363	0					
ANR	703505	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703506	Identifier	it8		703363	0					
ANR	703507	Identifier	ch		703363	1					
ANR	703508	OrExpression	it8 -> ch == '.' || it8 -> ch == '-' || it8 -> ch == '+'		703363	1		||			
ANR	703509	EqualityExpression	it8 -> ch == '.'		703363	0		==			
ANR	703510	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703511	Identifier	it8		703363	0					
ANR	703512	Identifier	ch		703363	1					
ANR	703513	PrimaryExpression	'.'		703363	1					
ANR	703514	OrExpression	it8 -> ch == '-' || it8 -> ch == '+'		703363	1		||			
ANR	703515	EqualityExpression	it8 -> ch == '-'		703363	0		==			
ANR	703516	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703517	Identifier	it8		703363	0					
ANR	703518	Identifier	ch		703363	1					
ANR	703519	PrimaryExpression	'-'		703363	1					
ANR	703520	EqualityExpression	it8 -> ch == '+'		703363	1		==			
ANR	703521	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703522	Identifier	it8		703363	0					
ANR	703523	Identifier	ch		703363	1					
ANR	703524	PrimaryExpression	'+'		703363	1					
ANR	703525	CompoundStatement		36:16:751:763	703363	1					
ANR	703526	IdentifierDeclStatement	int sign = 1 ;	716:16:23954:23966	703363	0	True				
ANR	703527	IdentifierDecl	sign = 1		703363	0					
ANR	703528	IdentifierDeclType	int		703363	0					
ANR	703529	Identifier	sign		703363	1					
ANR	703530	AssignmentExpression	sign = 1		703363	2		=			
ANR	703531	Identifier	sign		703363	0					
ANR	703532	PrimaryExpression	1		703363	1					
ANR	703533	IfStatement	if ( it8 -> ch == '-' )		703363	1					
ANR	703534	Condition	it8 -> ch == '-'	718:20:23989:24002	703363	0	True				
ANR	703535	EqualityExpression	it8 -> ch == '-'		703363	0		==			
ANR	703536	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703537	Identifier	it8		703363	0					
ANR	703538	Identifier	ch		703363	1					
ANR	703539	PrimaryExpression	'-'		703363	1					
ANR	703540	CompoundStatement		38:36:802:802	703363	1					
ANR	703541	ExpressionStatement	sign = - 1	719:20:24027:24036	703363	0	True				
ANR	703542	AssignmentExpression	sign = - 1		703363	0		=			
ANR	703543	Identifier	sign		703363	0					
ANR	703544	UnaryOperationExpression	- 1		703363	1					
ANR	703545	UnaryOperator	-		703363	0					
ANR	703546	PrimaryExpression	1		703363	1					
ANR	703547	ExpressionStatement	NextCh ( it8 )	720:20:24058:24069	703363	1	True				
ANR	703548	CallExpression	NextCh ( it8 )		703363	0					
ANR	703549	Callee	NextCh		703363	0					
ANR	703550	Identifier	NextCh		703363	0					
ANR	703551	ArgumentList	it8		703363	1					
ANR	703552	Argument	it8		703363	0					
ANR	703553	Identifier	it8		703363	0					
ANR	703554	ExpressionStatement	it8 -> inum = 0	723:16:24106:24119	703363	2	True				
ANR	703555	AssignmentExpression	it8 -> inum = 0		703363	0		=			
ANR	703556	PtrMemberAccess	it8 -> inum		703363	0					
ANR	703557	Identifier	it8		703363	0					
ANR	703558	Identifier	inum		703363	1					
ANR	703559	PrimaryExpression	0		703363	1					
ANR	703560	ExpressionStatement	it8 -> sy = SINUM	724:16:24137:24154	703363	3	True				
ANR	703561	AssignmentExpression	it8 -> sy = SINUM		703363	0		=			
ANR	703562	PtrMemberAccess	it8 -> sy		703363	0					
ANR	703563	Identifier	it8		703363	0					
ANR	703564	Identifier	sy		703363	1					
ANR	703565	Identifier	SINUM		703363	1					
ANR	703566	IfStatement	if ( it8 -> ch == '0' )		703363	4					
ANR	703567	Condition	it8 -> ch == '0'	726:20:24177:24190	703363	0	True				
ANR	703568	EqualityExpression	it8 -> ch == '0'		703363	0		==			
ANR	703569	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703570	Identifier	it8		703363	0					
ANR	703571	Identifier	ch		703363	1					
ANR	703572	PrimaryExpression	'0'		703363	1					
ANR	703573	CompoundStatement		46:36:990:990	703363	1					
ANR	703574	ExpressionStatement	NextCh ( it8 )	728:20:24261:24272	703363	0	True				
ANR	703575	CallExpression	NextCh ( it8 )		703363	0					
ANR	703576	Callee	NextCh		703363	0					
ANR	703577	Identifier	NextCh		703363	0					
ANR	703578	ArgumentList	it8		703363	1					
ANR	703579	Argument	it8		703363	0					
ANR	703580	Identifier	it8		703363	0					
ANR	703581	IfStatement	if ( toupper ( it8 -> ch ) == 'X' )		703363	1					
ANR	703582	Condition	toupper ( it8 -> ch ) == 'X'	729:24:24298:24320	703363	0	True				
ANR	703583	EqualityExpression	toupper ( it8 -> ch ) == 'X'		703363	0		==			
ANR	703584	CallExpression	toupper ( it8 -> ch )		703363	0					
ANR	703585	Callee	toupper		703363	0					
ANR	703586	Identifier	toupper		703363	0					
ANR	703587	ArgumentList	it8 -> ch		703363	1					
ANR	703588	Argument	it8 -> ch		703363	0					
ANR	703589	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703590	Identifier	it8		703363	0					
ANR	703591	Identifier	ch		703363	1					
ANR	703592	PrimaryExpression	'X'		703363	1					
ANR	703593	CompoundStatement		51:24:1147:1152	703363	1					
ANR	703594	IdentifierDeclStatement	int j ;	731:24:24350:24355	703363	0	True				
ANR	703595	IdentifierDecl	j		703363	0					
ANR	703596	IdentifierDeclType	int		703363	0					
ANR	703597	Identifier	j		703363	1					
ANR	703598	ExpressionStatement	NextCh ( it8 )	733:24:24382:24393	703363	1	True				
ANR	703599	CallExpression	NextCh ( it8 )		703363	0					
ANR	703600	Callee	NextCh		703363	0					
ANR	703601	Identifier	NextCh		703363	0					
ANR	703602	ArgumentList	it8		703363	1					
ANR	703603	Argument	it8		703363	0					
ANR	703604	Identifier	it8		703363	0					
ANR	703605	WhileStatement	while ( isxdigit ( it8 -> ch ) )		703363	2					
ANR	703606	Condition	isxdigit ( it8 -> ch )	734:31:24426:24442	703363	0	True				
ANR	703607	CallExpression	isxdigit ( it8 -> ch )		703363	0					
ANR	703608	Callee	isxdigit		703363	0					
ANR	703609	Identifier	isxdigit		703363	0					
ANR	703610	ArgumentList	it8 -> ch		703363	1					
ANR	703611	Argument	it8 -> ch		703363	0					
ANR	703612	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703613	Identifier	it8		703363	0					
ANR	703614	Identifier	ch		703363	1					
ANR	703615	CompoundStatement		55:24:1266:1266	703363	1					
ANR	703616	ExpressionStatement	it8 -> ch = toupper ( it8 -> ch )	736:28:24499:24525	703363	0	True				
ANR	703617	AssignmentExpression	it8 -> ch = toupper ( it8 -> ch )		703363	0		=			
ANR	703618	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703619	Identifier	it8		703363	0					
ANR	703620	Identifier	ch		703363	1					
ANR	703621	CallExpression	toupper ( it8 -> ch )		703363	1					
ANR	703622	Callee	toupper		703363	0					
ANR	703623	Identifier	toupper		703363	0					
ANR	703624	ArgumentList	it8 -> ch		703363	1					
ANR	703625	Argument	it8 -> ch		703363	0					
ANR	703626	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703627	Identifier	it8		703363	0					
ANR	703628	Identifier	ch		703363	1					
ANR	703629	IfStatement	if ( it8 -> ch >= 'A' && it8 -> ch <= 'F' )		703363	1					
ANR	703630	Condition	it8 -> ch >= 'A' && it8 -> ch <= 'F'	737:32:24559:24590	703363	0	True				
ANR	703631	AndExpression	it8 -> ch >= 'A' && it8 -> ch <= 'F'		703363	0		&&			
ANR	703632	RelationalExpression	it8 -> ch >= 'A'		703363	0		>=			
ANR	703633	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703634	Identifier	it8		703363	0					
ANR	703635	Identifier	ch		703363	1					
ANR	703636	PrimaryExpression	'A'		703363	1					
ANR	703637	RelationalExpression	it8 -> ch <= 'F'		703363	1		<=			
ANR	703638	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703639	Identifier	it8		703363	0					
ANR	703640	Identifier	ch		703363	1					
ANR	703641	PrimaryExpression	'F'		703363	1					
ANR	703642	ExpressionStatement	j = it8 -> ch - 'A' + 10	737:67:24594:24613	703363	1	True				
ANR	703643	AssignmentExpression	j = it8 -> ch - 'A' + 10		703363	0		=			
ANR	703644	Identifier	j		703363	0					
ANR	703645	AdditiveExpression	it8 -> ch - 'A' + 10		703363	1		-			
ANR	703646	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703647	Identifier	it8		703363	0					
ANR	703648	Identifier	ch		703363	1					
ANR	703649	AdditiveExpression	'A' + 10		703363	1		+			
ANR	703650	PrimaryExpression	'A'		703363	0					
ANR	703651	PrimaryExpression	10		703363	1					
ANR	703652	ElseStatement	else		703363	0					
ANR	703653	ExpressionStatement	j = it8 -> ch - '0'	738:33:24648:24665	703363	0	True				
ANR	703654	AssignmentExpression	j = it8 -> ch - '0'		703363	0		=			
ANR	703655	Identifier	j		703363	0					
ANR	703656	AdditiveExpression	it8 -> ch - '0'		703363	1		-			
ANR	703657	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703658	Identifier	it8		703363	0					
ANR	703659	Identifier	ch		703363	1					
ANR	703660	PrimaryExpression	'0'		703363	1					
ANR	703661	IfStatement	if ( ( long ) it8 -> inum * 16L > ( long ) INT_MAX )		703363	2					
ANR	703662	Condition	( long ) it8 -> inum * 16L > ( long ) INT_MAX	740:32:24700:24738	703363	0	True				
ANR	703663	RelationalExpression	( long ) it8 -> inum * 16L > ( long ) INT_MAX		703363	0		>			
ANR	703664	MultiplicativeExpression	( long ) it8 -> inum * 16L		703363	0		*			
ANR	703665	CastExpression	( long ) it8 -> inum		703363	0					
ANR	703666	CastTarget	long		703363	0					
ANR	703667	PtrMemberAccess	it8 -> inum		703363	1					
ANR	703668	Identifier	it8		703363	0					
ANR	703669	Identifier	inum		703363	1					
ANR	703670	PrimaryExpression	16L		703363	1					
ANR	703671	CastExpression	( long ) INT_MAX		703363	1					
ANR	703672	CastTarget	long		703363	0					
ANR	703673	Identifier	INT_MAX		703363	1					
ANR	703674	CompoundStatement		61:28:1566:1566	703363	1					
ANR	703675	ExpressionStatement	"SynError ( it8 , ""Invalid hexadecimal number"" )"	742:32:24803:24846	703363	0	True				
ANR	703676	CallExpression	"SynError ( it8 , ""Invalid hexadecimal number"" )"		703363	0					
ANR	703677	Callee	SynError		703363	0					
ANR	703678	Identifier	SynError		703363	0					
ANR	703679	ArgumentList	it8		703363	1					
ANR	703680	Argument	it8		703363	0					
ANR	703681	Identifier	it8		703363	0					
ANR	703682	Argument	"""Invalid hexadecimal number"""		703363	1					
ANR	703683	PrimaryExpression	"""Invalid hexadecimal number"""		703363	0					
ANR	703684	ReturnStatement	return ;	743:32:24880:24886	703363	1	True				
ANR	703685	ExpressionStatement	it8 -> inum = it8 -> inum * 16 + j	746:28:24947:24977	703363	3	True				
ANR	703686	AssignmentExpression	it8 -> inum = it8 -> inum * 16 + j		703363	0		=			
ANR	703687	PtrMemberAccess	it8 -> inum		703363	0					
ANR	703688	Identifier	it8		703363	0					
ANR	703689	Identifier	inum		703363	1					
ANR	703690	AdditiveExpression	it8 -> inum * 16 + j		703363	1		+			
ANR	703691	MultiplicativeExpression	it8 -> inum * 16		703363	0		*			
ANR	703692	PtrMemberAccess	it8 -> inum		703363	0					
ANR	703693	Identifier	it8		703363	0					
ANR	703694	Identifier	inum		703363	1					
ANR	703695	PrimaryExpression	16		703363	1					
ANR	703696	Identifier	j		703363	1					
ANR	703697	ExpressionStatement	NextCh ( it8 )	747:28:25007:25018	703363	4	True				
ANR	703698	CallExpression	NextCh ( it8 )		703363	0					
ANR	703699	Callee	NextCh		703363	0					
ANR	703700	Identifier	NextCh		703363	0					
ANR	703701	ArgumentList	it8		703363	1					
ANR	703702	Argument	it8		703363	0					
ANR	703703	Identifier	it8		703363	0					
ANR	703704	ReturnStatement	return ;	749:24:25070:25076	703363	3	True				
ANR	703705	IfStatement	if ( toupper ( it8 -> ch ) == 'B' )		703363	2					
ANR	703706	Condition	toupper ( it8 -> ch ) == 'B'	752:24:25125:25147	703363	0	True				
ANR	703707	EqualityExpression	toupper ( it8 -> ch ) == 'B'		703363	0		==			
ANR	703708	CallExpression	toupper ( it8 -> ch )		703363	0					
ANR	703709	Callee	toupper		703363	0					
ANR	703710	Identifier	toupper		703363	0					
ANR	703711	ArgumentList	it8 -> ch		703363	1					
ANR	703712	Argument	it8 -> ch		703363	0					
ANR	703713	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703714	Identifier	it8		703363	0					
ANR	703715	Identifier	ch		703363	1					
ANR	703716	PrimaryExpression	'B'		703363	1					
ANR	703717	CompoundStatement		74:24:1985:1990	703363	1					
ANR	703718	IdentifierDeclStatement	int j ;	754:24:25188:25193	703363	0	True				
ANR	703719	IdentifierDecl	j		703363	0					
ANR	703720	IdentifierDeclType	int		703363	0					
ANR	703721	Identifier	j		703363	1					
ANR	703722	ExpressionStatement	NextCh ( it8 )	756:24:25220:25231	703363	1	True				
ANR	703723	CallExpression	NextCh ( it8 )		703363	0					
ANR	703724	Callee	NextCh		703363	0					
ANR	703725	Identifier	NextCh		703363	0					
ANR	703726	ArgumentList	it8		703363	1					
ANR	703727	Argument	it8		703363	0					
ANR	703728	Identifier	it8		703363	0					
ANR	703729	WhileStatement	while ( it8 -> ch == '0' || it8 -> ch == '1' )		703363	2					
ANR	703730	Condition	it8 -> ch == '0' || it8 -> ch == '1'	757:31:25264:25295	703363	0	True				
ANR	703731	OrExpression	it8 -> ch == '0' || it8 -> ch == '1'		703363	0		||			
ANR	703732	EqualityExpression	it8 -> ch == '0'		703363	0		==			
ANR	703733	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703734	Identifier	it8		703363	0					
ANR	703735	Identifier	ch		703363	1					
ANR	703736	PrimaryExpression	'0'		703363	1					
ANR	703737	EqualityExpression	it8 -> ch == '1'		703363	1		==			
ANR	703738	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703739	Identifier	it8		703363	0					
ANR	703740	Identifier	ch		703363	1					
ANR	703741	PrimaryExpression	'1'		703363	1					
ANR	703742	CompoundStatement		78:24:2119:2119	703363	1					
ANR	703743	ExpressionStatement	j = it8 -> ch - '0'	759:28:25352:25369	703363	0	True				
ANR	703744	AssignmentExpression	j = it8 -> ch - '0'		703363	0		=			
ANR	703745	Identifier	j		703363	0					
ANR	703746	AdditiveExpression	it8 -> ch - '0'		703363	1		-			
ANR	703747	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703748	Identifier	it8		703363	0					
ANR	703749	Identifier	ch		703363	1					
ANR	703750	PrimaryExpression	'0'		703363	1					
ANR	703751	IfStatement	if ( ( long ) it8 -> inum * 2L > ( long ) INT_MAX )		703363	1					
ANR	703752	Condition	( long ) it8 -> inum * 2L > ( long ) INT_MAX	761:32:25404:25441	703363	0	True				
ANR	703753	RelationalExpression	( long ) it8 -> inum * 2L > ( long ) INT_MAX		703363	0		>			
ANR	703754	MultiplicativeExpression	( long ) it8 -> inum * 2L		703363	0		*			
ANR	703755	CastExpression	( long ) it8 -> inum		703363	0					
ANR	703756	CastTarget	long		703363	0					
ANR	703757	PtrMemberAccess	it8 -> inum		703363	1					
ANR	703758	Identifier	it8		703363	0					
ANR	703759	Identifier	inum		703363	1					
ANR	703760	PrimaryExpression	2L		703363	1					
ANR	703761	CastExpression	( long ) INT_MAX		703363	1					
ANR	703762	CastTarget	long		703363	0					
ANR	703763	Identifier	INT_MAX		703363	1					
ANR	703764	CompoundStatement		82:28:2269:2269	703363	1					
ANR	703765	ExpressionStatement	"SynError ( it8 , ""Invalid binary number"" )"	763:32:25506:25544	703363	0	True				
ANR	703766	CallExpression	"SynError ( it8 , ""Invalid binary number"" )"		703363	0					
ANR	703767	Callee	SynError		703363	0					
ANR	703768	Identifier	SynError		703363	0					
ANR	703769	ArgumentList	it8		703363	1					
ANR	703770	Argument	it8		703363	0					
ANR	703771	Identifier	it8		703363	0					
ANR	703772	Argument	"""Invalid binary number"""		703363	1					
ANR	703773	PrimaryExpression	"""Invalid binary number"""		703363	0					
ANR	703774	ReturnStatement	return ;	764:32:25578:25584	703363	1	True				
ANR	703775	ExpressionStatement	it8 -> inum = it8 -> inum * 2 + j	767:28:25645:25674	703363	2	True				
ANR	703776	AssignmentExpression	it8 -> inum = it8 -> inum * 2 + j		703363	0		=			
ANR	703777	PtrMemberAccess	it8 -> inum		703363	0					
ANR	703778	Identifier	it8		703363	0					
ANR	703779	Identifier	inum		703363	1					
ANR	703780	AdditiveExpression	it8 -> inum * 2 + j		703363	1		+			
ANR	703781	MultiplicativeExpression	it8 -> inum * 2		703363	0		*			
ANR	703782	PtrMemberAccess	it8 -> inum		703363	0					
ANR	703783	Identifier	it8		703363	0					
ANR	703784	Identifier	inum		703363	1					
ANR	703785	PrimaryExpression	2		703363	1					
ANR	703786	Identifier	j		703363	1					
ANR	703787	ExpressionStatement	NextCh ( it8 )	768:28:25704:25715	703363	3	True				
ANR	703788	CallExpression	NextCh ( it8 )		703363	0					
ANR	703789	Callee	NextCh		703363	0					
ANR	703790	Identifier	NextCh		703363	0					
ANR	703791	ArgumentList	it8		703363	1					
ANR	703792	Argument	it8		703363	0					
ANR	703793	Identifier	it8		703363	0					
ANR	703794	ReturnStatement	return ;	770:24:25767:25773	703363	3	True				
ANR	703795	WhileStatement	while ( isdigit ( it8 -> ch ) )		703363	5					
ANR	703796	Condition	isdigit ( it8 -> ch )	775:23:25840:25855	703363	0	True				
ANR	703797	CallExpression	isdigit ( it8 -> ch )		703363	0					
ANR	703798	Callee	isdigit		703363	0					
ANR	703799	Identifier	isdigit		703363	0					
ANR	703800	ArgumentList	it8 -> ch		703363	1					
ANR	703801	Argument	it8 -> ch		703363	0					
ANR	703802	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703803	Identifier	it8		703363	0					
ANR	703804	Identifier	ch		703363	1					
ANR	703805	CompoundStatement		95:41:2655:2655	703363	1					
ANR	703806	IfStatement	if ( ( long ) it8 -> inum * 10L > ( long ) INT_MAX )		703363	0					
ANR	703807	Condition	( long ) it8 -> inum * 10L > ( long ) INT_MAX	777:24:25885:25923	703363	0	True				
ANR	703808	RelationalExpression	( long ) it8 -> inum * 10L > ( long ) INT_MAX		703363	0		>			
ANR	703809	MultiplicativeExpression	( long ) it8 -> inum * 10L		703363	0		*			
ANR	703810	CastExpression	( long ) it8 -> inum		703363	0					
ANR	703811	CastTarget	long		703363	0					
ANR	703812	PtrMemberAccess	it8 -> inum		703363	1					
ANR	703813	Identifier	it8		703363	0					
ANR	703814	Identifier	inum		703363	1					
ANR	703815	PrimaryExpression	10L		703363	1					
ANR	703816	CastExpression	( long ) INT_MAX		703363	1					
ANR	703817	CastTarget	long		703363	0					
ANR	703818	Identifier	INT_MAX		703363	1					
ANR	703819	CompoundStatement		97:65:2723:2723	703363	1					
ANR	703820	ExpressionStatement	"ReadReal ( it8 , it8 -> inum )"	778:24:25952:25976	703363	0	True				
ANR	703821	CallExpression	"ReadReal ( it8 , it8 -> inum )"		703363	0					
ANR	703822	Callee	ReadReal		703363	0					
ANR	703823	Identifier	ReadReal		703363	0					
ANR	703824	ArgumentList	it8		703363	1					
ANR	703825	Argument	it8		703363	0					
ANR	703826	Identifier	it8		703363	0					
ANR	703827	Argument	it8 -> inum		703363	1					
ANR	703828	PtrMemberAccess	it8 -> inum		703363	0					
ANR	703829	Identifier	it8		703363	0					
ANR	703830	Identifier	inum		703363	1					
ANR	703831	ExpressionStatement	it8 -> sy = SDNUM	779:24:26002:26017	703363	1	True				
ANR	703832	AssignmentExpression	it8 -> sy = SDNUM		703363	0		=			
ANR	703833	PtrMemberAccess	it8 -> sy		703363	0					
ANR	703834	Identifier	it8		703363	0					
ANR	703835	Identifier	sy		703363	1					
ANR	703836	Identifier	SDNUM		703363	1					
ANR	703837	ExpressionStatement	it8 -> dnum *= sign	780:24:26043:26060	703363	2	True				
ANR	703838	AssignmentExpression	it8 -> dnum *= sign		703363	0		*=			
ANR	703839	PtrMemberAccess	it8 -> dnum		703363	0					
ANR	703840	Identifier	it8		703363	0					
ANR	703841	Identifier	dnum		703363	1					
ANR	703842	Identifier	sign		703363	1					
ANR	703843	ReturnStatement	return ;	781:24:26086:26092	703363	3	True				
ANR	703844	ExpressionStatement	it8 -> inum = it8 -> inum * 10 + ( it8 -> ch - '0' )	784:20:26137:26181	703363	1	True				
ANR	703845	AssignmentExpression	it8 -> inum = it8 -> inum * 10 + ( it8 -> ch - '0' )		703363	0		=			
ANR	703846	PtrMemberAccess	it8 -> inum		703363	0					
ANR	703847	Identifier	it8		703363	0					
ANR	703848	Identifier	inum		703363	1					
ANR	703849	AdditiveExpression	it8 -> inum * 10 + ( it8 -> ch - '0' )		703363	1		+			
ANR	703850	MultiplicativeExpression	it8 -> inum * 10		703363	0		*			
ANR	703851	PtrMemberAccess	it8 -> inum		703363	0					
ANR	703852	Identifier	it8		703363	0					
ANR	703853	Identifier	inum		703363	1					
ANR	703854	PrimaryExpression	10		703363	1					
ANR	703855	AdditiveExpression	it8 -> ch - '0'		703363	1		-			
ANR	703856	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703857	Identifier	it8		703363	0					
ANR	703858	Identifier	ch		703363	1					
ANR	703859	PrimaryExpression	'0'		703363	1					
ANR	703860	ExpressionStatement	NextCh ( it8 )	785:20:26203:26214	703363	2	True				
ANR	703861	CallExpression	NextCh ( it8 )		703363	0					
ANR	703862	Callee	NextCh		703363	0					
ANR	703863	Identifier	NextCh		703363	0					
ANR	703864	ArgumentList	it8		703363	1					
ANR	703865	Argument	it8		703363	0					
ANR	703866	Identifier	it8		703363	0					
ANR	703867	IfStatement	if ( it8 -> ch == '.' )		703363	6					
ANR	703868	Condition	it8 -> ch == '.'	788:20:26255:26268	703363	0	True				
ANR	703869	EqualityExpression	it8 -> ch == '.'		703363	0		==			
ANR	703870	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703871	Identifier	it8		703363	0					
ANR	703872	Identifier	ch		703363	1					
ANR	703873	PrimaryExpression	'.'		703363	1					
ANR	703874	CompoundStatement		108:36:3068:3068	703363	1					
ANR	703875	ExpressionStatement	"ReadReal ( it8 , it8 -> inum )"	790:20:26294:26318	703363	0	True				
ANR	703876	CallExpression	"ReadReal ( it8 , it8 -> inum )"		703363	0					
ANR	703877	Callee	ReadReal		703363	0					
ANR	703878	Identifier	ReadReal		703363	0					
ANR	703879	ArgumentList	it8		703363	1					
ANR	703880	Argument	it8		703363	0					
ANR	703881	Identifier	it8		703363	0					
ANR	703882	Argument	it8 -> inum		703363	1					
ANR	703883	PtrMemberAccess	it8 -> inum		703363	0					
ANR	703884	Identifier	it8		703363	0					
ANR	703885	Identifier	inum		703363	1					
ANR	703886	ExpressionStatement	it8 -> sy = SDNUM	791:20:26340:26355	703363	1	True				
ANR	703887	AssignmentExpression	it8 -> sy = SDNUM		703363	0		=			
ANR	703888	PtrMemberAccess	it8 -> sy		703363	0					
ANR	703889	Identifier	it8		703363	0					
ANR	703890	Identifier	sy		703363	1					
ANR	703891	Identifier	SDNUM		703363	1					
ANR	703892	ExpressionStatement	it8 -> dnum *= sign	792:20:26377:26394	703363	2	True				
ANR	703893	AssignmentExpression	it8 -> dnum *= sign		703363	0		*=			
ANR	703894	PtrMemberAccess	it8 -> dnum		703363	0					
ANR	703895	Identifier	it8		703363	0					
ANR	703896	Identifier	dnum		703363	1					
ANR	703897	Identifier	sign		703363	1					
ANR	703898	ReturnStatement	return ;	793:20:26416:26422	703363	3	True				
ANR	703899	ExpressionStatement	it8 -> inum *= sign	796:16:26459:26478	703363	7	True				
ANR	703900	AssignmentExpression	it8 -> inum *= sign		703363	0		*=			
ANR	703901	PtrMemberAccess	it8 -> inum		703363	0					
ANR	703902	Identifier	it8		703363	0					
ANR	703903	Identifier	inum		703363	1					
ANR	703904	Identifier	sign		703363	1					
ANR	703905	IfStatement	if ( isidchar ( it8 -> ch ) )		703363	8					
ANR	703906	Condition	isidchar ( it8 -> ch )	800:20:26588:26605	703363	0	True				
ANR	703907	CallExpression	isidchar ( it8 -> ch )		703363	0					
ANR	703908	Callee	isidchar		703363	0					
ANR	703909	Identifier	isidchar		703363	0					
ANR	703910	ArgumentList	it8 -> ch		703363	1					
ANR	703911	Argument	it8 -> ch		703363	0					
ANR	703912	PtrMemberAccess	it8 -> ch		703363	0					
ANR	703913	Identifier	it8		703363	0					
ANR	703914	Identifier	ch		703363	1					
ANR	703915	CompoundStatement		120:40:3405:3405	703363	1					
ANR	703916	IfStatement	if ( it8 -> sy == SINUM )		703363	0					
ANR	703917	Condition	it8 -> sy == SINUM	802:24:26635:26651	703363	0	True				
ANR	703918	EqualityExpression	it8 -> sy == SINUM		703363	0		==			
ANR	703919	PtrMemberAccess	it8 -> sy		703363	0					
ANR	703920	Identifier	it8		703363	0					
ANR	703921	Identifier	sy		703363	1					
ANR	703922	Identifier	SINUM		703363	1					
ANR	703923	CompoundStatement		122:43:3451:3451	703363	1					
ANR	703924	ExpressionStatement	"snprintf ( it8 -> id , 127 , ""%d"" , it8 -> inum )"	804:24:26681:26720	703363	0	True				
ANR	703925	CallExpression	"snprintf ( it8 -> id , 127 , ""%d"" , it8 -> inum )"		703363	0					
ANR	703926	Callee	snprintf		703363	0					
ANR	703927	Identifier	snprintf		703363	0					
ANR	703928	ArgumentList	it8 -> id		703363	1					
ANR	703929	Argument	it8 -> id		703363	0					
ANR	703930	PtrMemberAccess	it8 -> id		703363	0					
ANR	703931	Identifier	it8		703363	0					
ANR	703932	Identifier	id		703363	1					
ANR	703933	Argument	127		703363	1					
ANR	703934	PrimaryExpression	127		703363	0					
ANR	703935	Argument	"""%d"""		703363	2					
ANR	703936	PrimaryExpression	"""%d"""		703363	0					
ANR	703937	Argument	it8 -> inum		703363	3					
ANR	703938	PtrMemberAccess	it8 -> inum		703363	0					
ANR	703939	Identifier	it8		703363	0					
ANR	703940	Identifier	inum		703363	1					
ANR	703941	ElseStatement	else		703363	0					
ANR	703942	CompoundStatement		126:25:3566:3566	703363	0					
ANR	703943	ExpressionStatement	"snprintf ( it8 -> id , 127 , it8 -> DoubleFormatter , it8 -> dnum )"	808:24:26796:26852	703363	0	True				
ANR	703944	CallExpression	"snprintf ( it8 -> id , 127 , it8 -> DoubleFormatter , it8 -> dnum )"		703363	0					
ANR	703945	Callee	snprintf		703363	0					
ANR	703946	Identifier	snprintf		703363	0					
ANR	703947	ArgumentList	it8 -> id		703363	1					
ANR	703948	Argument	it8 -> id		703363	0					
ANR	703949	PtrMemberAccess	it8 -> id		703363	0					
ANR	703950	Identifier	it8		703363	0					
ANR	703951	Identifier	id		703363	1					
ANR	703952	Argument	127		703363	1					
ANR	703953	PrimaryExpression	127		703363	0					
ANR	703954	Argument	it8 -> DoubleFormatter		703363	2					
ANR	703955	PtrMemberAccess	it8 -> DoubleFormatter		703363	0					
ANR	703956	Identifier	it8		703363	0					
ANR	703957	Identifier	DoubleFormatter		703363	1					
ANR	703958	Argument	it8 -> dnum		703363	3					
ANR	703959	PtrMemberAccess	it8 -> dnum		703363	0					
ANR	703960	Identifier	it8		703363	0					
ANR	703961	Identifier	dnum		703363	1					
ANR	703962	ExpressionStatement	k = ( int ) strlen ( it8 -> id )	811:20:26897:26923	703363	1	True				
ANR	703963	AssignmentExpression	k = ( int ) strlen ( it8 -> id )		703363	0		=			
ANR	703964	Identifier	k		703363	0					
ANR	703965	CastExpression	( int ) strlen ( it8 -> id )		703363	1					
ANR	703966	CastTarget	int		703363	0					
ANR	703967	CallExpression	strlen ( it8 -> id )		703363	1					
ANR	703968	Callee	strlen		703363	0					
ANR	703969	Identifier	strlen		703363	0					
ANR	703970	ArgumentList	it8 -> id		703363	1					
ANR	703971	Argument	it8 -> id		703363	0					
ANR	703972	PtrMemberAccess	it8 -> id		703363	0					
ANR	703973	Identifier	it8		703363	0					
ANR	703974	Identifier	id		703363	1					
ANR	703975	ExpressionStatement	idptr = it8 -> id + k	812:20:26945:26965	703363	2	True				
ANR	703976	AssignmentExpression	idptr = it8 -> id + k		703363	0		=			
ANR	703977	Identifier	idptr		703363	0					
ANR	703978	AdditiveExpression	it8 -> id + k		703363	1		+			
ANR	703979	PtrMemberAccess	it8 -> id		703363	0					
ANR	703980	Identifier	it8		703363	0					
ANR	703981	Identifier	id		703363	1					
ANR	703982	Identifier	k		703363	1					
ANR	703983	DoStatement	do		703363	3					
ANR	703984	CompoundStatement		133:23:3787:3787	703363	0					
ANR	703985	IfStatement	if ( ++ k < MAXID )		703363	0					
ANR	703986	Condition	++ k < MAXID	815:28:27021:27031	703363	0	True				
ANR	703987	RelationalExpression	++ k < MAXID		703363	0		<			
ANR	703988	UnaryExpression	++ k		703363	0					
ANR	703989	IncDec	++		703363	0					
ANR	703990	Identifier	k		703363	1					
ANR	703991	Identifier	MAXID		703363	1					
ANR	703992	ExpressionStatement	* idptr ++ = ( char ) it8 -> ch	815:41:27034:27059	703363	1	True				
ANR	703993	AssignmentExpression	* idptr ++ = ( char ) it8 -> ch		703363	0		=			
ANR	703994	UnaryOperationExpression	* idptr ++		703363	0					
ANR	703995	UnaryOperator	*		703363	0					
ANR	703996	PostIncDecOperationExpression	idptr ++		703363	1					
ANR	703997	Identifier	idptr		703363	0					
ANR	703998	IncDec	++		703363	1					
ANR	703999	CastExpression	( char ) it8 -> ch		703363	1					
ANR	704000	CastTarget	char		703363	0					
ANR	704001	PtrMemberAccess	it8 -> ch		703363	1					
ANR	704002	Identifier	it8		703363	0					
ANR	704003	Identifier	ch		703363	1					
ANR	704004	ExpressionStatement	NextCh ( it8 )	817:24:27086:27097	703363	1	True				
ANR	704005	CallExpression	NextCh ( it8 )		703363	0					
ANR	704006	Callee	NextCh		703363	0					
ANR	704007	Identifier	NextCh		703363	0					
ANR	704008	ArgumentList	it8		703363	1					
ANR	704009	Argument	it8		703363	0					
ANR	704010	Identifier	it8		703363	0					
ANR	704011	Condition	isidchar ( it8 -> ch )	819:29:27129:27145	703363	1	True				
ANR	704012	CallExpression	isidchar ( it8 -> ch )		703363	0					
ANR	704013	Callee	isidchar		703363	0					
ANR	704014	Identifier	isidchar		703363	0					
ANR	704015	ArgumentList	it8 -> ch		703363	1					
ANR	704016	Argument	it8 -> ch		703363	0					
ANR	704017	PtrMemberAccess	it8 -> ch		703363	0					
ANR	704018	Identifier	it8		703363	0					
ANR	704019	Identifier	ch		703363	1					
ANR	704020	ExpressionStatement	* idptr = '\\0'	821:20:27170:27183	703363	4	True				
ANR	704021	AssignmentExpression	* idptr = '\\0'		703363	0		=			
ANR	704022	UnaryOperationExpression	* idptr		703363	0					
ANR	704023	UnaryOperator	*		703363	0					
ANR	704024	Identifier	idptr		703363	1					
ANR	704025	PrimaryExpression	'\\0'		703363	1					
ANR	704026	ExpressionStatement	it8 -> sy = SIDENT	822:20:27205:27221	703363	5	True				
ANR	704027	AssignmentExpression	it8 -> sy = SIDENT		703363	0		=			
ANR	704028	PtrMemberAccess	it8 -> sy		703363	0					
ANR	704029	Identifier	it8		703363	0					
ANR	704030	Identifier	sy		703363	1					
ANR	704031	Identifier	SIDENT		703363	1					
ANR	704032	ReturnStatement	return ;	824:16:27257:27263	703363	9	True				
ANR	704033	ElseStatement	else		703363	0					
ANR	704034	SwitchStatement	switch ( ( int ) it8 -> ch )		703363	0					
ANR	704035	Condition	( int ) it8 -> ch	828:24:27321:27333	703363	0	True				
ANR	704036	CastExpression	( int ) it8 -> ch		703363	0					
ANR	704037	CastTarget	int		703363	0					
ANR	704038	PtrMemberAccess	it8 -> ch		703363	1					
ANR	704039	Identifier	it8		703363	0					
ANR	704040	Identifier	ch		703363	1					
ANR	704041	CompoundStatement		148:39:4133:4133	703363	1					
ANR	704042	Label	case x1a :	831:8:27382:27393	703363	0	True				
ANR	704043	Identifier	x1a		703363	0					
ANR	704044	ExpressionStatement	NextCh ( it8 )	832:12:27407:27418	703363	1	True				
ANR	704045	CallExpression	NextCh ( it8 )		703363	0					
ANR	704046	Callee	NextCh		703363	0					
ANR	704047	Identifier	NextCh		703363	0					
ANR	704048	ArgumentList	it8		703363	1					
ANR	704049	Argument	it8		703363	0					
ANR	704050	Identifier	it8		703363	0					
ANR	704051	BreakStatement	break ;	833:12:27432:27437	703363	2	True				
ANR	704052	Label	case 0 :	836:8:27478:27484	703363	3	True				
ANR	704053	Statement	case	837:8:27494:27497	703363	4	True				
ANR	704054	Statement	-	837:13:27499:27499	703363	5	True				
ANR	704055	Label	1 :	837:14:27500:27501	703363	6	True				
ANR	704056	ExpressionStatement	it8 -> sy = SEOF	838:12:27515:27529	703363	7	True				
ANR	704057	AssignmentExpression	it8 -> sy = SEOF		703363	0		=			
ANR	704058	PtrMemberAccess	it8 -> sy		703363	0					
ANR	704059	Identifier	it8		703363	0					
ANR	704060	Identifier	sy		703363	1					
ANR	704061	Identifier	SEOF		703363	1					
ANR	704062	BreakStatement	break ;	839:12:27543:27548	703363	8	True				
ANR	704063	Label	case '\\r' :	843:8:27581:27590	703363	9	True				
ANR	704064	ExpressionStatement	NextCh ( it8 )	844:12:27604:27615	703363	10	True				
ANR	704065	CallExpression	NextCh ( it8 )		703363	0					
ANR	704066	Callee	NextCh		703363	0					
ANR	704067	Identifier	NextCh		703363	0					
ANR	704068	ArgumentList	it8		703363	1					
ANR	704069	Argument	it8		703363	0					
ANR	704070	Identifier	it8		703363	0					
ANR	704071	IfStatement	if ( it8 -> ch == '\\n' )		703363	11					
ANR	704072	Condition	it8 -> ch == '\\n'	845:16:27633:27648	703363	0	True				
ANR	704073	EqualityExpression	it8 -> ch == '\\n'		703363	0		==			
ANR	704074	PtrMemberAccess	it8 -> ch		703363	0					
ANR	704075	Identifier	it8		703363	0					
ANR	704076	Identifier	ch		703363	1					
ANR	704077	PrimaryExpression	'\\n'		703363	1					
ANR	704078	ExpressionStatement	NextCh ( it8 )	846:16:27668:27679	703363	1	True				
ANR	704079	CallExpression	NextCh ( it8 )		703363	0					
ANR	704080	Callee	NextCh		703363	0					
ANR	704081	Identifier	NextCh		703363	0					
ANR	704082	ArgumentList	it8		703363	1					
ANR	704083	Argument	it8		703363	0					
ANR	704084	Identifier	it8		703363	0					
ANR	704085	ExpressionStatement	it8 -> sy = SEOLN	847:12:27693:27708	703363	12	True				
ANR	704086	AssignmentExpression	it8 -> sy = SEOLN		703363	0		=			
ANR	704087	PtrMemberAccess	it8 -> sy		703363	0					
ANR	704088	Identifier	it8		703363	0					
ANR	704089	Identifier	sy		703363	1					
ANR	704090	Identifier	SEOLN		703363	1					
ANR	704091	ExpressionStatement	it8 -> lineno ++	848:12:27722:27735	703363	13	True				
ANR	704092	PostIncDecOperationExpression	it8 -> lineno ++		703363	0					
ANR	704093	PtrMemberAccess	it8 -> lineno		703363	0					
ANR	704094	Identifier	it8		703363	0					
ANR	704095	Identifier	lineno		703363	1					
ANR	704096	IncDec	++		703363	1					
ANR	704097	BreakStatement	break ;	849:12:27749:27754	703363	14	True				
ANR	704098	Label	case '\\n' :	851:8:27765:27774	703363	15	True				
ANR	704099	ExpressionStatement	NextCh ( it8 )	852:12:27788:27799	703363	16	True				
ANR	704100	CallExpression	NextCh ( it8 )		703363	0					
ANR	704101	Callee	NextCh		703363	0					
ANR	704102	Identifier	NextCh		703363	0					
ANR	704103	ArgumentList	it8		703363	1					
ANR	704104	Argument	it8		703363	0					
ANR	704105	Identifier	it8		703363	0					
ANR	704106	ExpressionStatement	it8 -> sy = SEOLN	853:12:27813:27828	703363	17	True				
ANR	704107	AssignmentExpression	it8 -> sy = SEOLN		703363	0		=			
ANR	704108	PtrMemberAccess	it8 -> sy		703363	0					
ANR	704109	Identifier	it8		703363	0					
ANR	704110	Identifier	sy		703363	1					
ANR	704111	Identifier	SEOLN		703363	1					
ANR	704112	ExpressionStatement	it8 -> lineno ++	854:12:27842:27855	703363	18	True				
ANR	704113	PostIncDecOperationExpression	it8 -> lineno ++		703363	0					
ANR	704114	PtrMemberAccess	it8 -> lineno		703363	0					
ANR	704115	Identifier	it8		703363	0					
ANR	704116	Identifier	lineno		703363	1					
ANR	704117	IncDec	++		703363	1					
ANR	704118	BreakStatement	break ;	855:12:27869:27874	703363	19	True				
ANR	704119	Label	case '#' :	858:8:27904:27912	703363	20	True				
ANR	704120	ExpressionStatement	NextCh ( it8 )	859:12:27926:27937	703363	21	True				
ANR	704121	CallExpression	NextCh ( it8 )		703363	0					
ANR	704122	Callee	NextCh		703363	0					
ANR	704123	Identifier	NextCh		703363	0					
ANR	704124	ArgumentList	it8		703363	1					
ANR	704125	Argument	it8		703363	0					
ANR	704126	Identifier	it8		703363	0					
ANR	704127	WhileStatement	while ( it8 -> ch && it8 -> ch != '\\n' && it8 -> ch != '\\r' )		703363	22					
ANR	704128	Condition	it8 -> ch && it8 -> ch != '\\n' && it8 -> ch != '\\r'	860:19:27958:28002	703363	0	True				
ANR	704129	AndExpression	it8 -> ch && it8 -> ch != '\\n' && it8 -> ch != '\\r'		703363	0		&&			
ANR	704130	PtrMemberAccess	it8 -> ch		703363	0					
ANR	704131	Identifier	it8		703363	0					
ANR	704132	Identifier	ch		703363	1					
ANR	704133	AndExpression	it8 -> ch != '\\n' && it8 -> ch != '\\r'		703363	1		&&			
ANR	704134	EqualityExpression	it8 -> ch != '\\n'		703363	0		!=			
ANR	704135	PtrMemberAccess	it8 -> ch		703363	0					
ANR	704136	Identifier	it8		703363	0					
ANR	704137	Identifier	ch		703363	1					
ANR	704138	PrimaryExpression	'\\n'		703363	1					
ANR	704139	EqualityExpression	it8 -> ch != '\\r'		703363	1		!=			
ANR	704140	PtrMemberAccess	it8 -> ch		703363	0					
ANR	704141	Identifier	it8		703363	0					
ANR	704142	Identifier	ch		703363	1					
ANR	704143	PrimaryExpression	'\\r'		703363	1					
ANR	704144	ExpressionStatement	NextCh ( it8 )	861:16:28021:28032	703363	1	True				
ANR	704145	CallExpression	NextCh ( it8 )		703363	0					
ANR	704146	Callee	NextCh		703363	0					
ANR	704147	Identifier	NextCh		703363	0					
ANR	704148	ArgumentList	it8		703363	1					
ANR	704149	Argument	it8		703363	0					
ANR	704150	Identifier	it8		703363	0					
ANR	704151	ExpressionStatement	it8 -> sy = SCOMMENT	863:12:28047:28065	703363	23	True				
ANR	704152	AssignmentExpression	it8 -> sy = SCOMMENT		703363	0		=			
ANR	704153	PtrMemberAccess	it8 -> sy		703363	0					
ANR	704154	Identifier	it8		703363	0					
ANR	704155	Identifier	sy		703363	1					
ANR	704156	Identifier	SCOMMENT		703363	1					
ANR	704157	BreakStatement	break ;	864:12:28079:28084	703363	24	True				
ANR	704158	Label	case '\\'' :	867:8:28114:28123	703363	25	True				
ANR	704159	Label	"case '\\""' :"	868:8:28133:28142	703363	26	True				
ANR	704160	ExpressionStatement	idptr = it8 -> str	869:12:28156:28172	703363	27	True				
ANR	704161	AssignmentExpression	idptr = it8 -> str		703363	0		=			
ANR	704162	Identifier	idptr		703363	0					
ANR	704163	PtrMemberAccess	it8 -> str		703363	1					
ANR	704164	Identifier	it8		703363	0					
ANR	704165	Identifier	str		703363	1					
ANR	704166	ExpressionStatement	sng = it8 -> ch	870:12:28186:28199	703363	28	True				
ANR	704167	AssignmentExpression	sng = it8 -> ch		703363	0		=			
ANR	704168	Identifier	sng		703363	0					
ANR	704169	PtrMemberAccess	it8 -> ch		703363	1					
ANR	704170	Identifier	it8		703363	0					
ANR	704171	Identifier	ch		703363	1					
ANR	704172	ExpressionStatement	k = 0	871:12:28213:28218	703363	29	True				
ANR	704173	AssignmentExpression	k = 0		703363	0		=			
ANR	704174	Identifier	k		703363	0					
ANR	704175	PrimaryExpression	0		703363	1					
ANR	704176	ExpressionStatement	NextCh ( it8 )	872:12:28232:28243	703363	30	True				
ANR	704177	CallExpression	NextCh ( it8 )		703363	0					
ANR	704178	Callee	NextCh		703363	0					
ANR	704179	Identifier	NextCh		703363	0					
ANR	704180	ArgumentList	it8		703363	1					
ANR	704181	Argument	it8		703363	0					
ANR	704182	Identifier	it8		703363	0					
ANR	704183	WhileStatement	while ( k < MAXSTR && it8 -> ch != sng )		703363	31					
ANR	704184	Condition	k < MAXSTR && it8 -> ch != sng	874:19:28265:28292	703363	0	True				
ANR	704185	AndExpression	k < MAXSTR && it8 -> ch != sng		703363	0		&&			
ANR	704186	RelationalExpression	k < MAXSTR		703363	0		<			
ANR	704187	Identifier	k		703363	0					
ANR	704188	Identifier	MAXSTR		703363	1					
ANR	704189	EqualityExpression	it8 -> ch != sng		703363	1		!=			
ANR	704190	PtrMemberAccess	it8 -> ch		703363	0					
ANR	704191	Identifier	it8		703363	0					
ANR	704192	Identifier	ch		703363	1					
ANR	704193	Identifier	sng		703363	1					
ANR	704194	CompoundStatement		194:49:5092:5092	703363	1					
ANR	704195	IfStatement	if ( it8 -> ch == '\\n' || it8 -> ch == '\\r' )		703363	0					
ANR	704196	Condition	it8 -> ch == '\\n' || it8 -> ch == '\\r'	876:20:28318:28350	703363	0	True				
ANR	704197	OrExpression	it8 -> ch == '\\n' || it8 -> ch == '\\r'		703363	0		||			
ANR	704198	EqualityExpression	it8 -> ch == '\\n'		703363	0		==			
ANR	704199	PtrMemberAccess	it8 -> ch		703363	0					
ANR	704200	Identifier	it8		703363	0					
ANR	704201	Identifier	ch		703363	1					
ANR	704202	PrimaryExpression	'\\n'		703363	1					
ANR	704203	EqualityExpression	it8 -> ch == '\\r'		703363	1		==			
ANR	704204	PtrMemberAccess	it8 -> ch		703363	0					
ANR	704205	Identifier	it8		703363	0					
ANR	704206	Identifier	ch		703363	1					
ANR	704207	PrimaryExpression	'\\r'		703363	1					
ANR	704208	ExpressionStatement	k = MAXSTR + 1	876:55:28353:28365	703363	1	True				
ANR	704209	AssignmentExpression	k = MAXSTR + 1		703363	0		=			
ANR	704210	Identifier	k		703363	0					
ANR	704211	AdditiveExpression	MAXSTR + 1		703363	1		+			
ANR	704212	Identifier	MAXSTR		703363	0					
ANR	704213	PrimaryExpression	1		703363	1					
ANR	704214	ElseStatement	else		703363	0					
ANR	704215	CompoundStatement		197:21:5185:5185	703363	0					
ANR	704216	ExpressionStatement	* idptr ++ = ( char ) it8 -> ch	878:20:28410:28435	703363	0	True				
ANR	704217	AssignmentExpression	* idptr ++ = ( char ) it8 -> ch		703363	0		=			
ANR	704218	UnaryOperationExpression	* idptr ++		703363	0					
ANR	704219	UnaryOperator	*		703363	0					
ANR	704220	PostIncDecOperationExpression	idptr ++		703363	1					
ANR	704221	Identifier	idptr		703363	0					
ANR	704222	IncDec	++		703363	1					
ANR	704223	CastExpression	( char ) it8 -> ch		703363	1					
ANR	704224	CastTarget	char		703363	0					
ANR	704225	PtrMemberAccess	it8 -> ch		703363	1					
ANR	704226	Identifier	it8		703363	0					
ANR	704227	Identifier	ch		703363	1					
ANR	704228	ExpressionStatement	NextCh ( it8 )	879:20:28457:28468	703363	1	True				
ANR	704229	CallExpression	NextCh ( it8 )		703363	0					
ANR	704230	Callee	NextCh		703363	0					
ANR	704231	Identifier	NextCh		703363	0					
ANR	704232	ArgumentList	it8		703363	1					
ANR	704233	Argument	it8		703363	0					
ANR	704234	Identifier	it8		703363	0					
ANR	704235	ExpressionStatement	k ++	880:20:28490:28493	703363	2	True				
ANR	704236	PostIncDecOperationExpression	k ++		703363	0					
ANR	704237	Identifier	k		703363	0					
ANR	704238	IncDec	++		703363	1					
ANR	704239	ExpressionStatement	it8 -> sy = SSTRING	884:12:28540:28557	703363	32	True				
ANR	704240	AssignmentExpression	it8 -> sy = SSTRING		703363	0		=			
ANR	704241	PtrMemberAccess	it8 -> sy		703363	0					
ANR	704242	Identifier	it8		703363	0					
ANR	704243	Identifier	sy		703363	1					
ANR	704244	Identifier	SSTRING		703363	1					
ANR	704245	ExpressionStatement	* idptr = '\\0'	885:12:28571:28584	703363	33	True				
ANR	704246	AssignmentExpression	* idptr = '\\0'		703363	0		=			
ANR	704247	UnaryOperationExpression	* idptr		703363	0					
ANR	704248	UnaryOperator	*		703363	0					
ANR	704249	Identifier	idptr		703363	1					
ANR	704250	PrimaryExpression	'\\0'		703363	1					
ANR	704251	ExpressionStatement	NextCh ( it8 )	886:12:28598:28609	703363	34	True				
ANR	704252	CallExpression	NextCh ( it8 )		703363	0					
ANR	704253	Callee	NextCh		703363	0					
ANR	704254	Identifier	NextCh		703363	0					
ANR	704255	ArgumentList	it8		703363	1					
ANR	704256	Argument	it8		703363	0					
ANR	704257	Identifier	it8		703363	0					
ANR	704258	BreakStatement	break ;	887:12:28623:28628	703363	35	True				
ANR	704259	Label	default :	890:8:28640:28647	703363	36	True				
ANR	704260	Identifier	default		703363	0					
ANR	704261	ExpressionStatement	"SynError ( it8 , ""Unrecognized character: 0x%x"" , it8 -> ch )"	891:12:28661:28716	703363	37	True				
ANR	704262	CallExpression	"SynError ( it8 , ""Unrecognized character: 0x%x"" , it8 -> ch )"		703363	0					
ANR	704263	Callee	SynError		703363	0					
ANR	704264	Identifier	SynError		703363	0					
ANR	704265	ArgumentList	it8		703363	1					
ANR	704266	Argument	it8		703363	0					
ANR	704267	Identifier	it8		703363	0					
ANR	704268	Argument	"""Unrecognized character: 0x%x"""		703363	1					
ANR	704269	PrimaryExpression	"""Unrecognized character: 0x%x"""		703363	0					
ANR	704270	Argument	it8 -> ch		703363	2					
ANR	704271	PtrMemberAccess	it8 -> ch		703363	0					
ANR	704272	Identifier	it8		703363	0					
ANR	704273	Identifier	ch		703363	1					
ANR	704274	ReturnStatement	return ;	892:12:28730:28736	703363	38	True				
ANR	704275	Condition	it8 -> sy == SCOMMENT	895:13:28766:28784	703363	1	True				
ANR	704276	EqualityExpression	it8 -> sy == SCOMMENT		703363	0		==			
ANR	704277	PtrMemberAccess	it8 -> sy		703363	0					
ANR	704278	Identifier	it8		703363	0					
ANR	704279	Identifier	sy		703363	1					
ANR	704280	Identifier	SCOMMENT		703363	1					
ANR	704281	IfStatement	if ( it8 -> sy == SINCLUDE )		703363	7					
ANR	704282	Condition	it8 -> sy == SINCLUDE	899:8:28838:28858	703363	0	True				
ANR	704283	EqualityExpression	it8 -> sy == SINCLUDE		703363	0		==			
ANR	704284	PtrMemberAccess	it8 -> sy		703363	0					
ANR	704285	Identifier	it8		703363	0					
ANR	704286	Identifier	sy		703363	1					
ANR	704287	Identifier	SINCLUDE		703363	1					
ANR	704288	CompoundStatement		221:16:5677:5694	703363	1					
ANR	704289	IdentifierDeclStatement	FILECTX * FileNest ;	901:16:28880:28897	703363	0	True				
ANR	704290	IdentifierDecl	* FileNest		703363	0					
ANR	704291	IdentifierDeclType	FILECTX *		703363	0					
ANR	704292	Identifier	FileNest		703363	1					
ANR	704293	IfStatement	if ( it8 -> IncludeSP >= ( MAXINCLUDE - 1 ) )		703363	1					
ANR	704294	Condition	it8 -> IncludeSP >= ( MAXINCLUDE - 1 )	903:19:28919:28952	703363	0	True				
ANR	704295	RelationalExpression	it8 -> IncludeSP >= ( MAXINCLUDE - 1 )		703363	0		>=			
ANR	704296	PtrMemberAccess	it8 -> IncludeSP		703363	0					
ANR	704297	Identifier	it8		703363	0					
ANR	704298	Identifier	IncludeSP		703363	1					
ANR	704299	AdditiveExpression	MAXINCLUDE - 1		703363	1		-			
ANR	704300	Identifier	MAXINCLUDE		703363	0					
ANR	704301	PrimaryExpression	1		703363	1					
ANR	704302	CompoundStatement		223:55:5752:5752	703363	1					
ANR	704303	ExpressionStatement	"SynError ( it8 , ""Too many recursion levels"" )"	905:20:28978:29020	703363	0	True				
ANR	704304	CallExpression	"SynError ( it8 , ""Too many recursion levels"" )"		703363	0					
ANR	704305	Callee	SynError		703363	0					
ANR	704306	Identifier	SynError		703363	0					
ANR	704307	ArgumentList	it8		703363	1					
ANR	704308	Argument	it8		703363	0					
ANR	704309	Identifier	it8		703363	0					
ANR	704310	Argument	"""Too many recursion levels"""		703363	1					
ANR	704311	PrimaryExpression	"""Too many recursion levels"""		703363	0					
ANR	704312	ReturnStatement	return ;	906:20:29042:29048	703363	1	True				
ANR	704313	ExpressionStatement	InSymbol ( it8 )	909:16:29085:29098	703363	2	True				
ANR	704314	CallExpression	InSymbol ( it8 )		703363	0					
ANR	704315	Callee	InSymbol		703363	0					
ANR	704316	Identifier	InSymbol		703363	0					
ANR	704317	ArgumentList	it8		703363	1					
ANR	704318	Argument	it8		703363	0					
ANR	704319	Identifier	it8		703363	0					
ANR	704320	IfStatement	"if ( ! Check ( it8 , SSTRING , ""Filename expected"" ) )"		703363	3					
ANR	704321	Condition	"! Check ( it8 , SSTRING , ""Filename expected"" )"	910:20:29120:29160	703363	0	True				
ANR	704322	UnaryOperationExpression	"! Check ( it8 , SSTRING , ""Filename expected"" )"		703363	0					
ANR	704323	UnaryOperator	!		703363	0					
ANR	704324	CallExpression	"Check ( it8 , SSTRING , ""Filename expected"" )"		703363	1					
ANR	704325	Callee	Check		703363	0					
ANR	704326	Identifier	Check		703363	0					
ANR	704327	ArgumentList	it8		703363	1					
ANR	704328	Argument	it8		703363	0					
ANR	704329	Identifier	it8		703363	0					
ANR	704330	Argument	SSTRING		703363	1					
ANR	704331	Identifier	SSTRING		703363	0					
ANR	704332	Argument	"""Filename expected"""		703363	2					
ANR	704333	PrimaryExpression	"""Filename expected"""		703363	0					
ANR	704334	ReturnStatement	return ;	910:63:29163:29169	703363	1	True				
ANR	704335	ExpressionStatement	FileNest = it8 -> FileStack [ it8 -> IncludeSP + 1 ]	912:16:29188:29237	703363	4	True				
ANR	704336	AssignmentExpression	FileNest = it8 -> FileStack [ it8 -> IncludeSP + 1 ]		703363	0		=			
ANR	704337	Identifier	FileNest		703363	0					
ANR	704338	ArrayIndexing	it8 -> FileStack [ it8 -> IncludeSP + 1 ]		703363	1					
ANR	704339	PtrMemberAccess	it8 -> FileStack		703363	0					
ANR	704340	Identifier	it8		703363	0					
ANR	704341	Identifier	FileStack		703363	1					
ANR	704342	AdditiveExpression	it8 -> IncludeSP + 1		703363	1		+			
ANR	704343	PtrMemberAccess	it8 -> IncludeSP		703363	0					
ANR	704344	Identifier	it8		703363	0					
ANR	704345	Identifier	IncludeSP		703363	1					
ANR	704346	PrimaryExpression	1		703363	1					
ANR	704347	IfStatement	if ( FileNest == NULL )		703363	5					
ANR	704348	Condition	FileNest == NULL	913:19:29258:29273	703363	0	True				
ANR	704349	EqualityExpression	FileNest == NULL		703363	0		==			
ANR	704350	Identifier	FileNest		703363	0					
ANR	704351	Identifier	NULL		703363	1					
ANR	704352	CompoundStatement		233:37:6073:6073	703363	1					
ANR	704353	ExpressionStatement	"FileNest = it8 -> FileStack [ it8 -> IncludeSP + 1 ] = ( FILECTX * ) AllocChunk ( it8 , sizeof ( FILECTX ) )"	915:20:29299:29392	703363	0	True				
ANR	704354	AssignmentExpression	"FileNest = it8 -> FileStack [ it8 -> IncludeSP + 1 ] = ( FILECTX * ) AllocChunk ( it8 , sizeof ( FILECTX ) )"		703363	0		=			
ANR	704355	Identifier	FileNest		703363	0					
ANR	704356	AssignmentExpression	"it8 -> FileStack [ it8 -> IncludeSP + 1 ] = ( FILECTX * ) AllocChunk ( it8 , sizeof ( FILECTX ) )"		703363	1		=			
ANR	704357	ArrayIndexing	it8 -> FileStack [ it8 -> IncludeSP + 1 ]		703363	0					
ANR	704358	PtrMemberAccess	it8 -> FileStack		703363	0					
ANR	704359	Identifier	it8		703363	0					
ANR	704360	Identifier	FileStack		703363	1					
ANR	704361	AdditiveExpression	it8 -> IncludeSP + 1		703363	1		+			
ANR	704362	PtrMemberAccess	it8 -> IncludeSP		703363	0					
ANR	704363	Identifier	it8		703363	0					
ANR	704364	Identifier	IncludeSP		703363	1					
ANR	704365	PrimaryExpression	1		703363	1					
ANR	704366	CastExpression	"( FILECTX * ) AllocChunk ( it8 , sizeof ( FILECTX ) )"		703363	1					
ANR	704367	CastTarget	FILECTX *		703363	0					
ANR	704368	CallExpression	"AllocChunk ( it8 , sizeof ( FILECTX ) )"		703363	1					
ANR	704369	Callee	AllocChunk		703363	0					
ANR	704370	Identifier	AllocChunk		703363	0					
ANR	704371	ArgumentList	it8		703363	1					
ANR	704372	Argument	it8		703363	0					
ANR	704373	Identifier	it8		703363	0					
ANR	704374	Argument	sizeof ( FILECTX )		703363	1					
ANR	704375	SizeofExpression	sizeof ( FILECTX )		703363	0					
ANR	704376	Sizeof	sizeof		703363	0					
ANR	704377	SizeofOperand	FILECTX		703363	1					
ANR	704378	IfStatement	"if ( BuildAbsolutePath ( it8 -> str , it8 -> FileStack [ it8 -> IncludeSP ] -> FileName , FileNest -> FileName , cmsMAX_PATH - 1 ) == FALSE )"		703363	6					
ANR	704379	Condition	"BuildAbsolutePath ( it8 -> str , it8 -> FileStack [ it8 -> IncludeSP ] -> FileName , FileNest -> FileName , cmsMAX_PATH - 1 ) == FALSE"	920:20:29546:29734	703363	0	True				
ANR	704380	EqualityExpression	"BuildAbsolutePath ( it8 -> str , it8 -> FileStack [ it8 -> IncludeSP ] -> FileName , FileNest -> FileName , cmsMAX_PATH - 1 ) == FALSE"		703363	0		==			
ANR	704381	CallExpression	"BuildAbsolutePath ( it8 -> str , it8 -> FileStack [ it8 -> IncludeSP ] -> FileName , FileNest -> FileName , cmsMAX_PATH - 1 )"		703363	0					
ANR	704382	Callee	BuildAbsolutePath		703363	0					
ANR	704383	Identifier	BuildAbsolutePath		703363	0					
ANR	704384	ArgumentList	it8 -> str		703363	1					
ANR	704385	Argument	it8 -> str		703363	0					
ANR	704386	PtrMemberAccess	it8 -> str		703363	0					
ANR	704387	Identifier	it8		703363	0					
ANR	704388	Identifier	str		703363	1					
ANR	704389	Argument	it8 -> FileStack [ it8 -> IncludeSP ] -> FileName		703363	1					
ANR	704390	PtrMemberAccess	it8 -> FileStack [ it8 -> IncludeSP ] -> FileName		703363	0					
ANR	704391	ArrayIndexing	it8 -> FileStack [ it8 -> IncludeSP ]		703363	0					
ANR	704392	PtrMemberAccess	it8 -> FileStack		703363	0					
ANR	704393	Identifier	it8		703363	0					
ANR	704394	Identifier	FileStack		703363	1					
ANR	704395	PtrMemberAccess	it8 -> IncludeSP		703363	1					
ANR	704396	Identifier	it8		703363	0					
ANR	704397	Identifier	IncludeSP		703363	1					
ANR	704398	Identifier	FileName		703363	1					
ANR	704399	Argument	FileNest -> FileName		703363	2					
ANR	704400	PtrMemberAccess	FileNest -> FileName		703363	0					
ANR	704401	Identifier	FileNest		703363	0					
ANR	704402	Identifier	FileName		703363	1					
ANR	704403	Argument	cmsMAX_PATH - 1		703363	3					
ANR	704404	AdditiveExpression	cmsMAX_PATH - 1		703363	0		-			
ANR	704405	Identifier	cmsMAX_PATH		703363	0					
ANR	704406	PrimaryExpression	1		703363	1					
ANR	704407	Identifier	FALSE		703363	1					
ANR	704408	CompoundStatement		242:83:6534:6534	703363	1					
ANR	704409	ExpressionStatement	"SynError ( it8 , ""File path too long"" )"	923:20:29759:29794	703363	0	True				
ANR	704410	CallExpression	"SynError ( it8 , ""File path too long"" )"		703363	0					
ANR	704411	Callee	SynError		703363	0					
ANR	704412	Identifier	SynError		703363	0					
ANR	704413	ArgumentList	it8		703363	1					
ANR	704414	Argument	it8		703363	0					
ANR	704415	Identifier	it8		703363	0					
ANR	704416	Argument	"""File path too long"""		703363	1					
ANR	704417	PrimaryExpression	"""File path too long"""		703363	0					
ANR	704418	ReturnStatement	return ;	924:20:29816:29822	703363	1	True				
ANR	704419	ExpressionStatement	"FileNest -> Stream = fopen ( FileNest -> FileName , ""rt"" )"	927:16:29859:29909	703363	7	True				
ANR	704420	AssignmentExpression	"FileNest -> Stream = fopen ( FileNest -> FileName , ""rt"" )"		703363	0		=			
ANR	704421	PtrMemberAccess	FileNest -> Stream		703363	0					
ANR	704422	Identifier	FileNest		703363	0					
ANR	704423	Identifier	Stream		703363	1					
ANR	704424	CallExpression	"fopen ( FileNest -> FileName , ""rt"" )"		703363	1					
ANR	704425	Callee	fopen		703363	0					
ANR	704426	Identifier	fopen		703363	0					
ANR	704427	ArgumentList	FileNest -> FileName		703363	1					
ANR	704428	Argument	FileNest -> FileName		703363	0					
ANR	704429	PtrMemberAccess	FileNest -> FileName		703363	0					
ANR	704430	Identifier	FileNest		703363	0					
ANR	704431	Identifier	FileName		703363	1					
ANR	704432	Argument	"""rt"""		703363	1					
ANR	704433	PrimaryExpression	"""rt"""		703363	0					
ANR	704434	IfStatement	if ( FileNest -> Stream == NULL )		703363	8					
ANR	704435	Condition	FileNest -> Stream == NULL	928:20:29931:29954	703363	0	True				
ANR	704436	EqualityExpression	FileNest -> Stream == NULL		703363	0		==			
ANR	704437	PtrMemberAccess	FileNest -> Stream		703363	0					
ANR	704438	Identifier	FileNest		703363	0					
ANR	704439	Identifier	Stream		703363	1					
ANR	704440	Identifier	NULL		703363	1					
ANR	704441	CompoundStatement		248:46:6754:6754	703363	1					
ANR	704442	ExpressionStatement	"SynError ( it8 , ""File %s not found"" , FileNest -> FileName )"	930:24:29984:30038	703363	0	True				
ANR	704443	CallExpression	"SynError ( it8 , ""File %s not found"" , FileNest -> FileName )"		703363	0					
ANR	704444	Callee	SynError		703363	0					
ANR	704445	Identifier	SynError		703363	0					
ANR	704446	ArgumentList	it8		703363	1					
ANR	704447	Argument	it8		703363	0					
ANR	704448	Identifier	it8		703363	0					
ANR	704449	Argument	"""File %s not found"""		703363	1					
ANR	704450	PrimaryExpression	"""File %s not found"""		703363	0					
ANR	704451	Argument	FileNest -> FileName		703363	2					
ANR	704452	PtrMemberAccess	FileNest -> FileName		703363	0					
ANR	704453	Identifier	FileNest		703363	0					
ANR	704454	Identifier	FileName		703363	1					
ANR	704455	ReturnStatement	return ;	931:24:30064:30070	703363	1	True				
ANR	704456	ExpressionStatement	it8 -> IncludeSP ++	933:16:30106:30122	703363	9	True				
ANR	704457	PostIncDecOperationExpression	it8 -> IncludeSP ++		703363	0					
ANR	704458	PtrMemberAccess	it8 -> IncludeSP		703363	0					
ANR	704459	Identifier	it8		703363	0					
ANR	704460	Identifier	IncludeSP		703363	1					
ANR	704461	IncDec	++		703363	1					
ANR	704462	ExpressionStatement	it8 -> ch = ' '	935:16:30141:30155	703363	10	True				
ANR	704463	AssignmentExpression	it8 -> ch = ' '		703363	0		=			
ANR	704464	PtrMemberAccess	it8 -> ch		703363	0					
ANR	704465	Identifier	it8		703363	0					
ANR	704466	Identifier	ch		703363	1					
ANR	704467	PrimaryExpression	' '		703363	1					
ANR	704468	ExpressionStatement	InSymbol ( it8 )	936:16:30173:30186	703363	11	True				
ANR	704469	CallExpression	InSymbol ( it8 )		703363	0					
ANR	704470	Callee	InSymbol		703363	0					
ANR	704471	Identifier	InSymbol		703363	0					
ANR	704472	ArgumentList	it8		703363	1					
ANR	704473	Argument	it8		703363	0					
ANR	704474	Identifier	it8		703363	0					
ANR	704475	ReturnType	static void		703363	1					
ANR	704476	Identifier	InSymbol		703363	2					
ANR	704477	ParameterList	cmsIT8 * it8		703363	3					
ANR	704478	Parameter	cmsIT8 * it8	680:14:23189:23199	703363	0	True				
ANR	704479	ParameterType	cmsIT8 *		703363	0					
ANR	704480	Identifier	it8		703363	1					
ANR	704481	CFGEntryNode	ENTRY		703363		True				
ANR	704482	CFGExitNode	EXIT		703363		True				
ANR	704483	Symbol	it8 -> lineno		703363						
ANR	704484	Symbol	MAXID		703363						
ANR	704485	Symbol	idptr		703363						
ANR	704486	Symbol	sign		703363						
ANR	704487	Symbol	Check		703363						
ANR	704488	Symbol	SEOF		703363						
ANR	704489	Symbol	strlen		703363						
ANR	704490	Symbol	FileNest		703363						
ANR	704491	Symbol	* * it8 -> FileStack		703363						
ANR	704492	Symbol	it8 -> dnum		703363						
ANR	704493	Symbol	SIDENT		703363						
ANR	704494	Symbol	isdigit		703363						
ANR	704495	Symbol	isxdigit		703363						
ANR	704496	Symbol	it8 -> IncludeSP		703363						
ANR	704497	Symbol	NULL		703363						
ANR	704498	Symbol	cmsMAX_PATH		703363						
ANR	704499	Symbol	* it8		703363						
ANR	704500	Symbol	SSTRING		703363						
ANR	704501	Symbol	* idptr		703363						
ANR	704502	Symbol	* * * it8		703363						
ANR	704503	Symbol	isfirstidchar		703363						
ANR	704504	Symbol	it8 -> inum		703363						
ANR	704505	Symbol	it8 -> FileStack		703363						
ANR	704506	Symbol	it8 -> FileStack [ it8 -> IncludeSP ] -> FileName		703363						
ANR	704507	Symbol	MAXINCLUDE		703363						
ANR	704508	Symbol	SUNDEFINED		703363						
ANR	704509	Symbol	it8 -> str		703363						
ANR	704510	Symbol	isidchar		703363						
ANR	704511	Symbol	FileNest -> FileName		703363						
ANR	704512	Symbol	* * it8		703363						
ANR	704513	Symbol	SINCLUDE		703363						
ANR	704514	Symbol	SDNUM		703363						
ANR	704515	Symbol	BinSrchKey		703363						
ANR	704516	Symbol	* it8 -> FileStack		703363						
ANR	704517	Symbol	SEOLN		703363						
ANR	704518	Symbol	BuildAbsolutePath		703363						
ANR	704519	Symbol	* FileNest		703363						
ANR	704520	Symbol	INT_MAX		703363						
ANR	704521	Symbol	* * it8 -> IncludeSP		703363						
ANR	704522	Symbol	key		703363						
ANR	704523	Symbol	it8 -> id		703363						
ANR	704524	Symbol	fopen		703363						
ANR	704525	Symbol	SINUM		703363						
ANR	704526	Symbol	toupper		703363						
ANR	704527	Symbol	it8 -> ch		703363						
ANR	704528	Symbol	it8 -> sy		703363						
ANR	704529	Symbol	j		703363						
ANR	704530	Symbol	it8 -> DoubleFormatter		703363						
ANR	704531	Symbol	k		703363						
ANR	704532	Symbol	* it8 -> IncludeSP		703363						
ANR	704533	Symbol	it8		703363						
ANR	704534	Symbol	sng		703363						
ANR	704535	Symbol	isseparator		703363						
ANR	704536	Symbol	MAXSTR		703363						
ANR	704537	Symbol	AllocChunk		703363						
ANR	704538	Symbol	* idptr ++		703363						
ANR	704539	Symbol	FALSE		703363						
ANR	704540	Symbol	FileNest -> Stream		703363						
ANR	704541	Symbol	SCOMMENT		703363						
ANR	704542	Function	CheckEOLN	942:0:30230:30434							
ANR	704543	FunctionDef	CheckEOLN (cmsIT8 * it8)		704542	0					
ANR	704544	CompoundStatement		944:0:30268:30434	704542	0					
ANR	704545	IfStatement	"if ( ! Check ( it8 , SEOLN , ""Expected separator"" ) )"		704542	0					
ANR	704546	Condition	"! Check ( it8 , SEOLN , ""Expected separator"" )"	945:12:30282:30321	704542	0	True				
ANR	704547	UnaryOperationExpression	"! Check ( it8 , SEOLN , ""Expected separator"" )"		704542	0					
ANR	704548	UnaryOperator	!		704542	0					
ANR	704549	CallExpression	"Check ( it8 , SEOLN , ""Expected separator"" )"		704542	1					
ANR	704550	Callee	Check		704542	0					
ANR	704551	Identifier	Check		704542	0					
ANR	704552	ArgumentList	it8		704542	1					
ANR	704553	Argument	it8		704542	0					
ANR	704554	Identifier	it8		704542	0					
ANR	704555	Argument	SEOLN		704542	1					
ANR	704556	Identifier	SEOLN		704542	0					
ANR	704557	Argument	"""Expected separator"""		704542	2					
ANR	704558	PrimaryExpression	"""Expected separator"""		704542	0					
ANR	704559	ReturnStatement	return FALSE ;	945:54:30324:30336	704542	1	True				
ANR	704560	Identifier	FALSE		704542	0					
ANR	704561	WhileStatement	while ( it8 -> sy == SEOLN )		704542	1					
ANR	704562	Condition	it8 -> sy == SEOLN	946:15:30353:30370	704542	0	True				
ANR	704563	EqualityExpression	it8 -> sy == SEOLN		704542	0		==			
ANR	704564	PtrMemberAccess	it8 -> sy		704542	0					
ANR	704565	Identifier	it8		704542	0					
ANR	704566	Identifier	sy		704542	1					
ANR	704567	Identifier	SEOLN		704542	1					
ANR	704568	ExpressionStatement	InSymbol ( it8 )	947:24:30397:30410	704542	1	True				
ANR	704569	CallExpression	InSymbol ( it8 )		704542	0					
ANR	704570	Callee	InSymbol		704542	0					
ANR	704571	Identifier	InSymbol		704542	0					
ANR	704572	ArgumentList	it8		704542	1					
ANR	704573	Argument	it8		704542	0					
ANR	704574	Identifier	it8		704542	0					
ANR	704575	ReturnStatement	return TRUE ;	948:8:30420:30431	704542	2	True				
ANR	704576	Identifier	TRUE		704542	0					
ANR	704577	ReturnType	static cmsBool		704542	1					
ANR	704578	Identifier	CheckEOLN		704542	2					
ANR	704579	ParameterList	cmsIT8 * it8		704542	3					
ANR	704580	Parameter	cmsIT8 * it8	943:18:30255:30265	704542	0	True				
ANR	704581	ParameterType	cmsIT8 *		704542	0					
ANR	704582	Identifier	it8		704542	1					
ANR	704583	CFGEntryNode	ENTRY		704542		True				
ANR	704584	CFGExitNode	EXIT		704542		True				
ANR	704585	Symbol	Check		704542						
ANR	704586	Symbol	* it8		704542						
ANR	704587	Symbol	TRUE		704542						
ANR	704588	Symbol	FALSE		704542						
ANR	704589	Symbol	it8 -> sy		704542						
ANR	704590	Symbol	it8		704542						
ANR	704591	Symbol	SEOLN		704542						
ANR	704592	Function	Skip	954:0:30455:30583							
ANR	704593	FunctionDef	"Skip (cmsIT8 * it8 , SYMBOL sy)"		704592	0					
ANR	704594	CompoundStatement		956:0:30496:30583	704592	0					
ANR	704595	IfStatement	if ( it8 -> sy == sy && it8 -> sy != SEOF )		704592	0					
ANR	704596	Condition	it8 -> sy == sy && it8 -> sy != SEOF	957:12:30510:30541	704592	0	True				
ANR	704597	AndExpression	it8 -> sy == sy && it8 -> sy != SEOF		704592	0		&&			
ANR	704598	EqualityExpression	it8 -> sy == sy		704592	0		==			
ANR	704599	PtrMemberAccess	it8 -> sy		704592	0					
ANR	704600	Identifier	it8		704592	0					
ANR	704601	Identifier	sy		704592	1					
ANR	704602	Identifier	sy		704592	1					
ANR	704603	EqualityExpression	it8 -> sy != SEOF		704592	1		!=			
ANR	704604	PtrMemberAccess	it8 -> sy		704592	0					
ANR	704605	Identifier	it8		704592	0					
ANR	704606	Identifier	sy		704592	1					
ANR	704607	Identifier	SEOF		704592	1					
ANR	704608	ExpressionStatement	InSymbol ( it8 )	958:24:30568:30581	704592	1	True				
ANR	704609	CallExpression	InSymbol ( it8 )		704592	0					
ANR	704610	Callee	InSymbol		704592	0					
ANR	704611	Identifier	InSymbol		704592	0					
ANR	704612	ArgumentList	it8		704592	1					
ANR	704613	Argument	it8		704592	0					
ANR	704614	Identifier	it8		704592	0					
ANR	704615	ReturnType	static void		704592	1					
ANR	704616	Identifier	Skip		704592	2					
ANR	704617	ParameterList	"cmsIT8 * it8 , SYMBOL sy"		704592	3					
ANR	704618	Parameter	cmsIT8 * it8	955:10:30472:30482	704592	0	True				
ANR	704619	ParameterType	cmsIT8 *		704592	0					
ANR	704620	Identifier	it8		704592	1					
ANR	704621	Parameter	SYMBOL sy	955:23:30485:30493	704592	1	True				
ANR	704622	ParameterType	SYMBOL		704592	0					
ANR	704623	Identifier	sy		704592	1					
ANR	704624	CFGEntryNode	ENTRY		704592		True				
ANR	704625	CFGExitNode	EXIT		704592		True				
ANR	704626	Symbol	sy		704592						
ANR	704627	Symbol	* it8		704592						
ANR	704628	Symbol	it8 -> sy		704592						
ANR	704629	Symbol	it8		704592						
ANR	704630	Symbol	SEOF		704592						
ANR	704631	Function	SkipEOLN	963:0:30609:30710							
ANR	704632	FunctionDef	SkipEOLN (cmsIT8 * it8)		704631	0					
ANR	704633	CompoundStatement		965:0:30643:30710	704631	0					
ANR	704634	WhileStatement	while ( it8 -> sy == SEOLN )		704631	0					
ANR	704635	Condition	it8 -> sy == SEOLN	966:11:30656:30671	704631	0	True				
ANR	704636	EqualityExpression	it8 -> sy == SEOLN		704631	0		==			
ANR	704637	PtrMemberAccess	it8 -> sy		704631	0					
ANR	704638	Identifier	it8		704631	0					
ANR	704639	Identifier	sy		704631	1					
ANR	704640	Identifier	SEOLN		704631	1					
ANR	704641	CompoundStatement		2:29:30:30	704631	1					
ANR	704642	ExpressionStatement	InSymbol ( it8 )	967:13:30689:30702	704631	0	True				
ANR	704643	CallExpression	InSymbol ( it8 )		704631	0					
ANR	704644	Callee	InSymbol		704631	0					
ANR	704645	Identifier	InSymbol		704631	0					
ANR	704646	ArgumentList	it8		704631	1					
ANR	704647	Argument	it8		704631	0					
ANR	704648	Identifier	it8		704631	0					
ANR	704649	ReturnType	static void		704631	1					
ANR	704650	Identifier	SkipEOLN		704631	2					
ANR	704651	ParameterList	cmsIT8 * it8		704631	3					
ANR	704652	Parameter	cmsIT8 * it8	964:14:30630:30640	704631	0	True				
ANR	704653	ParameterType	cmsIT8 *		704631	0					
ANR	704654	Identifier	it8		704631	1					
ANR	704655	CFGEntryNode	ENTRY		704631		True				
ANR	704656	CFGExitNode	EXIT		704631		True				
ANR	704657	Symbol	* it8		704631						
ANR	704658	Symbol	it8 -> sy		704631						
ANR	704659	Symbol	it8		704631						
ANR	704660	Symbol	SEOLN		704631						
ANR	704661	Function	GetVal	973:0:30756:31445							
ANR	704662	FunctionDef	"GetVal (cmsIT8 * it8 , char * Buffer , cmsUInt32Number max , const char * ErrorTitle)"		704661	0					
ANR	704663	CompoundStatement		975:0:30850:31445	704661	0					
ANR	704664	SwitchStatement	switch ( it8 -> sy )		704661	0					
ANR	704665	Condition	it8 -> sy	976:12:30864:30870	704661	0	True				
ANR	704666	PtrMemberAccess	it8 -> sy		704661	0					
ANR	704667	Identifier	it8		704661	0					
ANR	704668	Identifier	sy		704661	1					
ANR	704669	CompoundStatement		2:21:22:22	704661	1					
ANR	704670	Label	case SEOLN :	978:4:30880:30890	704661	0	True				
ANR	704671	Identifier	SEOLN		704661	0					
ANR	704672	ExpressionStatement	Buffer [ 0 ] = 0	979:18:30927:30938	704661	1	True				
ANR	704673	AssignmentExpression	Buffer [ 0 ] = 0		704661	0		=			
ANR	704674	ArrayIndexing	Buffer [ 0 ]		704661	0					
ANR	704675	Identifier	Buffer		704661	0					
ANR	704676	PrimaryExpression	0		704661	1					
ANR	704677	PrimaryExpression	0		704661	1					
ANR	704678	BreakStatement	break ;	980:18:30958:30963	704661	2	True				
ANR	704679	Label	case SIDENT :	981:4:30969:30980	704661	3	True				
ANR	704680	Identifier	SIDENT		704661	0					
ANR	704681	ExpressionStatement	"strncpy ( Buffer , it8 -> id , max )"	981:18:30983:31012	704661	4	True				
ANR	704682	CallExpression	"strncpy ( Buffer , it8 -> id , max )"		704661	0					
ANR	704683	Callee	strncpy		704661	0					
ANR	704684	Identifier	strncpy		704661	0					
ANR	704685	ArgumentList	Buffer		704661	1					
ANR	704686	Argument	Buffer		704661	0					
ANR	704687	Identifier	Buffer		704661	0					
ANR	704688	Argument	it8 -> id		704661	1					
ANR	704689	PtrMemberAccess	it8 -> id		704661	0					
ANR	704690	Identifier	it8		704661	0					
ANR	704691	Identifier	id		704661	1					
ANR	704692	Argument	max		704661	2					
ANR	704693	Identifier	max		704661	0					
ANR	704694	ExpressionStatement	Buffer [ max - 1 ] = 0	982:18:31032:31047	704661	5	True				
ANR	704695	AssignmentExpression	Buffer [ max - 1 ] = 0		704661	0		=			
ANR	704696	ArrayIndexing	Buffer [ max - 1 ]		704661	0					
ANR	704697	Identifier	Buffer		704661	0					
ANR	704698	AdditiveExpression	max - 1		704661	1		-			
ANR	704699	Identifier	max		704661	0					
ANR	704700	PrimaryExpression	1		704661	1					
ANR	704701	PrimaryExpression	0		704661	1					
ANR	704702	BreakStatement	break ;	983:18:31067:31072	704661	6	True				
ANR	704703	Label	case SINUM :	984:4:31078:31088	704661	7	True				
ANR	704704	Identifier	SINUM		704661	0					
ANR	704705	ExpressionStatement	"snprintf ( Buffer , max , ""%d"" , it8 -> inum )"	984:18:31092:31132	704661	8	True				
ANR	704706	CallExpression	"snprintf ( Buffer , max , ""%d"" , it8 -> inum )"		704661	0					
ANR	704707	Callee	snprintf		704661	0					
ANR	704708	Identifier	snprintf		704661	0					
ANR	704709	ArgumentList	Buffer		704661	1					
ANR	704710	Argument	Buffer		704661	0					
ANR	704711	Identifier	Buffer		704661	0					
ANR	704712	Argument	max		704661	1					
ANR	704713	Identifier	max		704661	0					
ANR	704714	Argument	"""%d"""		704661	2					
ANR	704715	PrimaryExpression	"""%d"""		704661	0					
ANR	704716	Argument	it8 -> inum		704661	3					
ANR	704717	PtrMemberAccess	it8 -> inum		704661	0					
ANR	704718	Identifier	it8		704661	0					
ANR	704719	Identifier	inum		704661	1					
ANR	704720	BreakStatement	break ;	984:60:31134:31139	704661	9	True				
ANR	704721	Label	case SDNUM :	985:4:31145:31155	704661	10	True				
ANR	704722	Identifier	SDNUM		704661	0					
ANR	704723	ExpressionStatement	"snprintf ( Buffer , max , it8 -> DoubleFormatter , it8 -> dnum )"	985:18:31159:31215	704661	11	True				
ANR	704724	CallExpression	"snprintf ( Buffer , max , it8 -> DoubleFormatter , it8 -> dnum )"		704661	0					
ANR	704725	Callee	snprintf		704661	0					
ANR	704726	Identifier	snprintf		704661	0					
ANR	704727	ArgumentList	Buffer		704661	1					
ANR	704728	Argument	Buffer		704661	0					
ANR	704729	Identifier	Buffer		704661	0					
ANR	704730	Argument	max		704661	1					
ANR	704731	Identifier	max		704661	0					
ANR	704732	Argument	it8 -> DoubleFormatter		704661	2					
ANR	704733	PtrMemberAccess	it8 -> DoubleFormatter		704661	0					
ANR	704734	Identifier	it8		704661	0					
ANR	704735	Identifier	DoubleFormatter		704661	1					
ANR	704736	Argument	it8 -> dnum		704661	3					
ANR	704737	PtrMemberAccess	it8 -> dnum		704661	0					
ANR	704738	Identifier	it8		704661	0					
ANR	704739	Identifier	dnum		704661	1					
ANR	704740	BreakStatement	break ;	985:76:31217:31222	704661	12	True				
ANR	704741	Label	case SSTRING :	986:4:31228:31240	704661	13	True				
ANR	704742	Identifier	SSTRING		704661	0					
ANR	704743	ExpressionStatement	"strncpy ( Buffer , it8 -> str , max )"	986:18:31242:31272	704661	14	True				
ANR	704744	CallExpression	"strncpy ( Buffer , it8 -> str , max )"		704661	0					
ANR	704745	Callee	strncpy		704661	0					
ANR	704746	Identifier	strncpy		704661	0					
ANR	704747	ArgumentList	Buffer		704661	1					
ANR	704748	Argument	Buffer		704661	0					
ANR	704749	Identifier	Buffer		704661	0					
ANR	704750	Argument	it8 -> str		704661	1					
ANR	704751	PtrMemberAccess	it8 -> str		704661	0					
ANR	704752	Identifier	it8		704661	0					
ANR	704753	Identifier	str		704661	1					
ANR	704754	Argument	max		704661	2					
ANR	704755	Identifier	max		704661	0					
ANR	704756	ExpressionStatement	Buffer [ max - 1 ] = 0	987:18:31292:31309	704661	15	True				
ANR	704757	AssignmentExpression	Buffer [ max - 1 ] = 0		704661	0		=			
ANR	704758	ArrayIndexing	Buffer [ max - 1 ]		704661	0					
ANR	704759	Identifier	Buffer		704661	0					
ANR	704760	AdditiveExpression	max - 1		704661	1		-			
ANR	704761	Identifier	max		704661	0					
ANR	704762	PrimaryExpression	1		704661	1					
ANR	704763	PrimaryExpression	0		704661	1					
ANR	704764	BreakStatement	break ;	988:18:31329:31334	704661	16	True				
ANR	704765	Label	default :	991:4:31342:31349	704661	17	True				
ANR	704766	Identifier	default		704661	0					
ANR	704767	ReturnStatement	"return SynError ( it8 , ""%s"" , ErrorTitle ) ;"	992:9:31360:31398	704661	18	True				
ANR	704768	CallExpression	"SynError ( it8 , ""%s"" , ErrorTitle )"		704661	0					
ANR	704769	Callee	SynError		704661	0					
ANR	704770	Identifier	SynError		704661	0					
ANR	704771	ArgumentList	it8		704661	1					
ANR	704772	Argument	it8		704661	0					
ANR	704773	Identifier	it8		704661	0					
ANR	704774	Argument	"""%s"""		704661	1					
ANR	704775	PrimaryExpression	"""%s"""		704661	0					
ANR	704776	Argument	ErrorTitle		704661	2					
ANR	704777	Identifier	ErrorTitle		704661	0					
ANR	704778	ExpressionStatement	Buffer [ max ] = 0	995:4:31411:31426	704661	1	True				
ANR	704779	AssignmentExpression	Buffer [ max ] = 0		704661	0		=			
ANR	704780	ArrayIndexing	Buffer [ max ]		704661	0					
ANR	704781	Identifier	Buffer		704661	0					
ANR	704782	Identifier	max		704661	1					
ANR	704783	PrimaryExpression	0		704661	1					
ANR	704784	ReturnStatement	return TRUE ;	996:4:31432:31443	704661	2	True				
ANR	704785	Identifier	TRUE		704661	0					
ANR	704786	ReturnType	static cmsBool		704661	1					
ANR	704787	Identifier	GetVal		704661	2					
ANR	704788	ParameterList	"cmsIT8 * it8 , char * Buffer , cmsUInt32Number max , const char * ErrorTitle"		704661	3					
ANR	704789	Parameter	cmsIT8 * it8	974:15:30778:30788	704661	0	True				
ANR	704790	ParameterType	cmsIT8 *		704661	0					
ANR	704791	Identifier	it8		704661	1					
ANR	704792	Parameter	char * Buffer	974:28:30791:30802	704661	1	True				
ANR	704793	ParameterType	char *		704661	0					
ANR	704794	Identifier	Buffer		704661	1					
ANR	704795	Parameter	cmsUInt32Number max	974:42:30805:30823	704661	2	True				
ANR	704796	ParameterType	cmsUInt32Number		704661	0					
ANR	704797	Identifier	max		704661	1					
ANR	704798	Parameter	const char * ErrorTitle	974:63:30826:30847	704661	3	True				
ANR	704799	ParameterType	const char *		704661	0					
ANR	704800	Identifier	ErrorTitle		704661	1					
ANR	704801	CFGEntryNode	ENTRY		704661		True				
ANR	704802	CFGExitNode	EXIT		704661		True				
ANR	704803	Symbol	Buffer		704661						
ANR	704804	Symbol	max		704661						
ANR	704805	Symbol	ErrorTitle		704661						
ANR	704806	Symbol	* it8		704661						
ANR	704807	Symbol	TRUE		704661						
ANR	704808	Symbol	it8 -> sy		704661						
ANR	704809	Symbol	it8 -> DoubleFormatter		704661						
ANR	704810	Symbol	SynError		704661						
ANR	704811	Symbol	it8		704661						
ANR	704812	Symbol	* max		704661						
ANR	704813	Symbol	* Buffer		704661						
ANR	704814	Symbol	it8 -> inum		704661						
ANR	704815	Symbol	it8 -> dnum		704661						
ANR	704816	Symbol	it8 -> str		704661						
ANR	704817	Symbol	it8 -> id		704661						
ANR	704818	Function	GetTable	1001:0:31517:31744							
ANR	704819	FunctionDef	GetTable (cmsIT8 * it8)		704818	0					
ANR	704820	CompoundStatement		1003:0:31553:31744	704818	0					
ANR	704821	IfStatement	if ( ( it8 -> nTable >= it8 -> TablesCount ) )		704818	0					
ANR	704822	Condition	it8 -> nTable >= it8 -> TablesCount	1004:7:31562:31597	704818	0	True				
ANR	704823	RelationalExpression	it8 -> nTable >= it8 -> TablesCount		704818	0		>=			
ANR	704824	PtrMemberAccess	it8 -> nTable		704818	0					
ANR	704825	Identifier	it8		704818	0					
ANR	704826	Identifier	nTable		704818	1					
ANR	704827	PtrMemberAccess	it8 -> TablesCount		704818	1					
ANR	704828	Identifier	it8		704818	0					
ANR	704829	Identifier	TablesCount		704818	1					
ANR	704830	CompoundStatement		2:45:46:46	704818	1					
ANR	704831	ExpressionStatement	"SynError ( it8 , ""Table %d out of sequence"" , it8 -> nTable )"	1006:11:31614:31670	704818	0	True				
ANR	704832	CallExpression	"SynError ( it8 , ""Table %d out of sequence"" , it8 -> nTable )"		704818	0					
ANR	704833	Callee	SynError		704818	0					
ANR	704834	Identifier	SynError		704818	0					
ANR	704835	ArgumentList	it8		704818	1					
ANR	704836	Argument	it8		704818	0					
ANR	704837	Identifier	it8		704818	0					
ANR	704838	Argument	"""Table %d out of sequence"""		704818	1					
ANR	704839	PrimaryExpression	"""Table %d out of sequence"""		704818	0					
ANR	704840	Argument	it8 -> nTable		704818	2					
ANR	704841	PtrMemberAccess	it8 -> nTable		704818	0					
ANR	704842	Identifier	it8		704818	0					
ANR	704843	Identifier	nTable		704818	1					
ANR	704844	ReturnStatement	return it8 -> Tab ;	1007:11:31683:31700	704818	1	True				
ANR	704845	PtrMemberAccess	it8 -> Tab		704818	0					
ANR	704846	Identifier	it8		704818	0					
ANR	704847	Identifier	Tab		704818	1					
ANR	704848	ReturnStatement	return it8 -> Tab + it8 -> nTable ;	1010:3:31711:31742	704818	1	True				
ANR	704849	AdditiveExpression	it8 -> Tab + it8 -> nTable		704818	0		+			
ANR	704850	PtrMemberAccess	it8 -> Tab		704818	0					
ANR	704851	Identifier	it8		704818	0					
ANR	704852	Identifier	Tab		704818	1					
ANR	704853	PtrMemberAccess	it8 -> nTable		704818	1					
ANR	704854	Identifier	it8		704818	0					
ANR	704855	Identifier	nTable		704818	1					
ANR	704856	ReturnType	static TABLE *		704818	1					
ANR	704857	Identifier	GetTable		704818	2					
ANR	704858	ParameterList	cmsIT8 * it8		704818	3					
ANR	704859	Parameter	cmsIT8 * it8	1002:16:31540:31550	704818	0	True				
ANR	704860	ParameterType	cmsIT8 *		704818	0					
ANR	704861	Identifier	it8		704818	1					
ANR	704862	CFGEntryNode	ENTRY		704818		True				
ANR	704863	CFGExitNode	EXIT		704818		True				
ANR	704864	Symbol	it8 -> nTable		704818						
ANR	704865	Symbol	it8 -> Tab		704818						
ANR	704866	Symbol	* it8		704818						
ANR	704867	Symbol	it8 -> TablesCount		704818						
ANR	704868	Symbol	it8		704818						
ANR	704869	Function	cmsIT8Free	1017:0:31868:32369							
ANR	704870	FunctionDef	cmsIT8Free (cmsHANDLE hIT8)		704869	0					
ANR	704871	CompoundStatement		1018:0:31910:32369	704869	0					
ANR	704872	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	1019:3:31915:31943	704869	0	True				
ANR	704873	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		704869	0					
ANR	704874	IdentifierDeclType	cmsIT8 *		704869	0					
ANR	704875	Identifier	it8		704869	1					
ANR	704876	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		704869	2		=			
ANR	704877	Identifier	it8		704869	0					
ANR	704878	CastExpression	( cmsIT8 * ) hIT8		704869	1					
ANR	704879	CastTarget	cmsIT8 *		704869	0					
ANR	704880	Identifier	hIT8		704869	1					
ANR	704881	IfStatement	if ( it8 == NULL )		704869	1					
ANR	704882	Condition	it8 == NULL	1021:8:31954:31964	704869	0	True				
ANR	704883	EqualityExpression	it8 == NULL		704869	0		==			
ANR	704884	Identifier	it8		704869	0					
ANR	704885	Identifier	NULL		704869	1					
ANR	704886	ReturnStatement	return ;	1022:8:31975:31981	704869	1	True				
ANR	704887	IfStatement	if ( it8 -> MemorySink )		704869	2					
ANR	704888	Condition	it8 -> MemorySink	1024:8:31992:32006	704869	0	True				
ANR	704889	PtrMemberAccess	it8 -> MemorySink		704869	0					
ANR	704890	Identifier	it8		704869	0					
ANR	704891	Identifier	MemorySink		704869	1					
ANR	704892	CompoundStatement		10:8:130:141	704869	1					
ANR	704893	IdentifierDeclStatement	OWNEDMEM * p ;	1026:8:32020:32031	704869	0	True				
ANR	704894	IdentifierDecl	* p		704869	0					
ANR	704895	IdentifierDeclType	OWNEDMEM *		704869	0					
ANR	704896	Identifier	p		704869	1					
ANR	704897	IdentifierDeclStatement	OWNEDMEM * n ;	1027:8:32041:32052	704869	1	True				
ANR	704898	IdentifierDecl	* n		704869	0					
ANR	704899	IdentifierDeclType	OWNEDMEM *		704869	0					
ANR	704900	Identifier	n		704869	1					
ANR	704901	ForStatement	for ( p = it8 -> MemorySink ; p != NULL ; p = n )		704869	2					
ANR	704902	ForInit	p = it8 -> MemorySink ;	1029:13:32068:32087	704869	0	True				
ANR	704903	AssignmentExpression	p = it8 -> MemorySink		704869	0		=			
ANR	704904	Identifier	p		704869	0					
ANR	704905	PtrMemberAccess	it8 -> MemorySink		704869	1					
ANR	704906	Identifier	it8		704869	0					
ANR	704907	Identifier	MemorySink		704869	1					
ANR	704908	Condition	p != NULL	1029:34:32089:32097	704869	1	True				
ANR	704909	EqualityExpression	p != NULL		704869	0		!=			
ANR	704910	Identifier	p		704869	0					
ANR	704911	Identifier	NULL		704869	1					
ANR	704912	AssignmentExpression	p = n	1029:45:32100:32104	704869	2	True	=			
ANR	704913	Identifier	p		704869	0					
ANR	704914	Identifier	n		704869	1					
ANR	704915	CompoundStatement		12:52:196:196	704869	3					
ANR	704916	ExpressionStatement	n = p -> Next	1031:12:32122:32133	704869	0	True				
ANR	704917	AssignmentExpression	n = p -> Next		704869	0		=			
ANR	704918	Identifier	n		704869	0					
ANR	704919	PtrMemberAccess	p -> Next		704869	1					
ANR	704920	Identifier	p		704869	0					
ANR	704921	Identifier	Next		704869	1					
ANR	704922	IfStatement	if ( p -> Ptr )		704869	1					
ANR	704923	Condition	p -> Ptr	1032:16:32151:32156	704869	0	True				
ANR	704924	PtrMemberAccess	p -> Ptr		704869	0					
ANR	704925	Identifier	p		704869	0					
ANR	704926	Identifier	Ptr		704869	1					
ANR	704927	ExpressionStatement	"_cmsFree ( it8 -> ContextID , p -> Ptr )"	1032:24:32159:32192	704869	1	True				
ANR	704928	CallExpression	"_cmsFree ( it8 -> ContextID , p -> Ptr )"		704869	0					
ANR	704929	Callee	_cmsFree		704869	0					
ANR	704930	Identifier	_cmsFree		704869	0					
ANR	704931	ArgumentList	it8 -> ContextID		704869	1					
ANR	704932	Argument	it8 -> ContextID		704869	0					
ANR	704933	PtrMemberAccess	it8 -> ContextID		704869	0					
ANR	704934	Identifier	it8		704869	0					
ANR	704935	Identifier	ContextID		704869	1					
ANR	704936	Argument	p -> Ptr		704869	1					
ANR	704937	PtrMemberAccess	p -> Ptr		704869	0					
ANR	704938	Identifier	p		704869	0					
ANR	704939	Identifier	Ptr		704869	1					
ANR	704940	ExpressionStatement	"_cmsFree ( it8 -> ContextID , p )"	1033:12:32206:32234	704869	2	True				
ANR	704941	CallExpression	"_cmsFree ( it8 -> ContextID , p )"		704869	0					
ANR	704942	Callee	_cmsFree		704869	0					
ANR	704943	Identifier	_cmsFree		704869	0					
ANR	704944	ArgumentList	it8 -> ContextID		704869	1					
ANR	704945	Argument	it8 -> ContextID		704869	0					
ANR	704946	PtrMemberAccess	it8 -> ContextID		704869	0					
ANR	704947	Identifier	it8		704869	0					
ANR	704948	Identifier	ContextID		704869	1					
ANR	704949	Argument	p		704869	1					
ANR	704950	Identifier	p		704869	0					
ANR	704951	IfStatement	if ( it8 -> MemoryBlock )		704869	3					
ANR	704952	Condition	it8 -> MemoryBlock	1037:8:32261:32276	704869	0	True				
ANR	704953	PtrMemberAccess	it8 -> MemoryBlock		704869	0					
ANR	704954	Identifier	it8		704869	0					
ANR	704955	Identifier	MemoryBlock		704869	1					
ANR	704956	ExpressionStatement	"_cmsFree ( it8 -> ContextID , it8 -> MemoryBlock )"	1038:8:32287:32330	704869	1	True				
ANR	704957	CallExpression	"_cmsFree ( it8 -> ContextID , it8 -> MemoryBlock )"		704869	0					
ANR	704958	Callee	_cmsFree		704869	0					
ANR	704959	Identifier	_cmsFree		704869	0					
ANR	704960	ArgumentList	it8 -> ContextID		704869	1					
ANR	704961	Argument	it8 -> ContextID		704869	0					
ANR	704962	PtrMemberAccess	it8 -> ContextID		704869	0					
ANR	704963	Identifier	it8		704869	0					
ANR	704964	Identifier	ContextID		704869	1					
ANR	704965	Argument	it8 -> MemoryBlock		704869	1					
ANR	704966	PtrMemberAccess	it8 -> MemoryBlock		704869	0					
ANR	704967	Identifier	it8		704869	0					
ANR	704968	Identifier	MemoryBlock		704869	1					
ANR	704969	ExpressionStatement	"_cmsFree ( it8 -> ContextID , it8 )"	1040:4:32337:32367	704869	4	True				
ANR	704970	CallExpression	"_cmsFree ( it8 -> ContextID , it8 )"		704869	0					
ANR	704971	Callee	_cmsFree		704869	0					
ANR	704972	Identifier	_cmsFree		704869	0					
ANR	704973	ArgumentList	it8 -> ContextID		704869	1					
ANR	704974	Argument	it8 -> ContextID		704869	0					
ANR	704975	PtrMemberAccess	it8 -> ContextID		704869	0					
ANR	704976	Identifier	it8		704869	0					
ANR	704977	Identifier	ContextID		704869	1					
ANR	704978	Argument	it8		704869	1					
ANR	704979	Identifier	it8		704869	0					
ANR	704980	ReturnType	void CMSEXPORT		704869	1					
ANR	704981	Identifier	cmsIT8Free		704869	2					
ANR	704982	ParameterList	cmsHANDLE hIT8		704869	3					
ANR	704983	Parameter	cmsHANDLE hIT8	1017:26:31894:31907	704869	0	True				
ANR	704984	ParameterType	cmsHANDLE		704869	0					
ANR	704985	Identifier	hIT8		704869	1					
ANR	704986	CFGEntryNode	ENTRY		704869		True				
ANR	704987	CFGExitNode	EXIT		704869		True				
ANR	704988	Symbol	p		704869						
ANR	704989	Symbol	p -> Next		704869						
ANR	704990	Symbol	p -> Ptr		704869						
ANR	704991	Symbol	NULL		704869						
ANR	704992	Symbol	hIT8		704869						
ANR	704993	Symbol	it8 -> MemorySink		704869						
ANR	704994	Symbol	* it8		704869						
ANR	704995	Symbol	* p		704869						
ANR	704996	Symbol	it8		704869						
ANR	704997	Symbol	it8 -> ContextID		704869						
ANR	704998	Symbol	n		704869						
ANR	704999	Symbol	it8 -> MemoryBlock		704869						
ANR	705000	Function	AllocBigBlock	1045:0:32420:32908							
ANR	705001	FunctionDef	"AllocBigBlock (cmsIT8 * it8 , cmsUInt32Number size)"		705000	0					
ANR	705002	CompoundStatement		1047:0:32482:32908	705000	0					
ANR	705003	IdentifierDeclStatement	OWNEDMEM * ptr1 ;	1048:4:32488:32502	705000	0	True				
ANR	705004	IdentifierDecl	* ptr1		705000	0					
ANR	705005	IdentifierDeclType	OWNEDMEM *		705000	0					
ANR	705006	Identifier	ptr1		705000	1					
ANR	705007	IdentifierDeclStatement	"void * ptr = _cmsMallocZero ( it8 -> ContextID , size ) ;"	1049:4:32508:32556	705000	1	True				
ANR	705008	IdentifierDecl	"* ptr = _cmsMallocZero ( it8 -> ContextID , size )"		705000	0					
ANR	705009	IdentifierDeclType	void *		705000	0					
ANR	705010	Identifier	ptr		705000	1					
ANR	705011	AssignmentExpression	"* ptr = _cmsMallocZero ( it8 -> ContextID , size )"		705000	2		=			
ANR	705012	Identifier	ptr		705000	0					
ANR	705013	CallExpression	"_cmsMallocZero ( it8 -> ContextID , size )"		705000	1					
ANR	705014	Callee	_cmsMallocZero		705000	0					
ANR	705015	Identifier	_cmsMallocZero		705000	0					
ANR	705016	ArgumentList	it8 -> ContextID		705000	1					
ANR	705017	Argument	it8 -> ContextID		705000	0					
ANR	705018	PtrMemberAccess	it8 -> ContextID		705000	0					
ANR	705019	Identifier	it8		705000	0					
ANR	705020	Identifier	ContextID		705000	1					
ANR	705021	Argument	size		705000	1					
ANR	705022	Identifier	size		705000	0					
ANR	705023	IfStatement	if ( ptr != NULL )		705000	2					
ANR	705024	Condition	ptr != NULL	1051:8:32567:32577	705000	0	True				
ANR	705025	EqualityExpression	ptr != NULL		705000	0		!=			
ANR	705026	Identifier	ptr		705000	0					
ANR	705027	Identifier	NULL		705000	1					
ANR	705028	CompoundStatement		5:21:97:97	705000	1					
ANR	705029	ExpressionStatement	"ptr1 = ( OWNEDMEM * ) _cmsMallocZero ( it8 -> ContextID , sizeof ( OWNEDMEM ) )"	1053:8:32591:32659	705000	0	True				
ANR	705030	AssignmentExpression	"ptr1 = ( OWNEDMEM * ) _cmsMallocZero ( it8 -> ContextID , sizeof ( OWNEDMEM ) )"		705000	0		=			
ANR	705031	Identifier	ptr1		705000	0					
ANR	705032	CastExpression	"( OWNEDMEM * ) _cmsMallocZero ( it8 -> ContextID , sizeof ( OWNEDMEM ) )"		705000	1					
ANR	705033	CastTarget	OWNEDMEM *		705000	0					
ANR	705034	CallExpression	"_cmsMallocZero ( it8 -> ContextID , sizeof ( OWNEDMEM ) )"		705000	1					
ANR	705035	Callee	_cmsMallocZero		705000	0					
ANR	705036	Identifier	_cmsMallocZero		705000	0					
ANR	705037	ArgumentList	it8 -> ContextID		705000	1					
ANR	705038	Argument	it8 -> ContextID		705000	0					
ANR	705039	PtrMemberAccess	it8 -> ContextID		705000	0					
ANR	705040	Identifier	it8		705000	0					
ANR	705041	Identifier	ContextID		705000	1					
ANR	705042	Argument	sizeof ( OWNEDMEM )		705000	1					
ANR	705043	SizeofExpression	sizeof ( OWNEDMEM )		705000	0					
ANR	705044	Sizeof	sizeof		705000	0					
ANR	705045	SizeofOperand	OWNEDMEM		705000	1					
ANR	705046	IfStatement	if ( ptr1 == NULL )		705000	1					
ANR	705047	Condition	ptr1 == NULL	1055:12:32674:32685	705000	0	True				
ANR	705048	EqualityExpression	ptr1 == NULL		705000	0		==			
ANR	705049	Identifier	ptr1		705000	0					
ANR	705050	Identifier	NULL		705000	1					
ANR	705051	CompoundStatement		9:26:205:205	705000	1					
ANR	705052	ExpressionStatement	"_cmsFree ( it8 -> ContextID , ptr )"	1057:12:32703:32733	705000	0	True				
ANR	705053	CallExpression	"_cmsFree ( it8 -> ContextID , ptr )"		705000	0					
ANR	705054	Callee	_cmsFree		705000	0					
ANR	705055	Identifier	_cmsFree		705000	0					
ANR	705056	ArgumentList	it8 -> ContextID		705000	1					
ANR	705057	Argument	it8 -> ContextID		705000	0					
ANR	705058	PtrMemberAccess	it8 -> ContextID		705000	0					
ANR	705059	Identifier	it8		705000	0					
ANR	705060	Identifier	ContextID		705000	1					
ANR	705061	Argument	ptr		705000	1					
ANR	705062	Identifier	ptr		705000	0					
ANR	705063	ReturnStatement	return NULL ;	1058:12:32747:32758	705000	1	True				
ANR	705064	Identifier	NULL		705000	0					
ANR	705065	ExpressionStatement	ptr1 -> Ptr = ptr	1061:8:32779:32802	705000	2	True				
ANR	705066	AssignmentExpression	ptr1 -> Ptr = ptr		705000	0		=			
ANR	705067	PtrMemberAccess	ptr1 -> Ptr		705000	0					
ANR	705068	Identifier	ptr1		705000	0					
ANR	705069	Identifier	Ptr		705000	1					
ANR	705070	Identifier	ptr		705000	1					
ANR	705071	ExpressionStatement	ptr1 -> Next = it8 -> MemorySink	1062:8:32812:32849	705000	3	True				
ANR	705072	AssignmentExpression	ptr1 -> Next = it8 -> MemorySink		705000	0		=			
ANR	705073	PtrMemberAccess	ptr1 -> Next		705000	0					
ANR	705074	Identifier	ptr1		705000	0					
ANR	705075	Identifier	Next		705000	1					
ANR	705076	PtrMemberAccess	it8 -> MemorySink		705000	1					
ANR	705077	Identifier	it8		705000	0					
ANR	705078	Identifier	MemorySink		705000	1					
ANR	705079	ExpressionStatement	it8 -> MemorySink = ptr1	1063:8:32859:32883	705000	4	True				
ANR	705080	AssignmentExpression	it8 -> MemorySink = ptr1		705000	0		=			
ANR	705081	PtrMemberAccess	it8 -> MemorySink		705000	0					
ANR	705082	Identifier	it8		705000	0					
ANR	705083	Identifier	MemorySink		705000	1					
ANR	705084	Identifier	ptr1		705000	1					
ANR	705085	ReturnStatement	return ptr ;	1066:4:32896:32906	705000	3	True				
ANR	705086	Identifier	ptr		705000	0					
ANR	705087	ReturnType	static void *		705000	1					
ANR	705088	Identifier	AllocBigBlock		705000	2					
ANR	705089	ParameterList	"cmsIT8 * it8 , cmsUInt32Number size"		705000	3					
ANR	705090	Parameter	cmsIT8 * it8	1046:20:32447:32457	705000	0	True				
ANR	705091	ParameterType	cmsIT8 *		705000	0					
ANR	705092	Identifier	it8		705000	1					
ANR	705093	Parameter	cmsUInt32Number size	1046:33:32460:32479	705000	1	True				
ANR	705094	ParameterType	cmsUInt32Number		705000	0					
ANR	705095	Identifier	size		705000	1					
ANR	705096	CFGEntryNode	ENTRY		705000		True				
ANR	705097	CFGExitNode	EXIT		705000		True				
ANR	705098	Symbol	NULL		705000						
ANR	705099	Symbol	size		705000						
ANR	705100	Symbol	it8 -> MemorySink		705000						
ANR	705101	Symbol	ptr1		705000						
ANR	705102	Symbol	* it8		705000						
ANR	705103	Symbol	* ptr1		705000						
ANR	705104	Symbol	it8		705000						
ANR	705105	Symbol	ptr1 -> Next		705000						
ANR	705106	Symbol	it8 -> ContextID		705000						
ANR	705107	Symbol	ptr		705000						
ANR	705108	Symbol	_cmsMallocZero		705000						
ANR	705109	Symbol	ptr1 -> Ptr		705000						
ANR	705110	Function	AllocChunk	1071:0:32929:33663							
ANR	705111	FunctionDef	"AllocChunk (cmsIT8 * it8 , cmsUInt32Number size)"		705110	0					
ANR	705112	CompoundStatement		1073:0:32988:33663	705110	0					
ANR	705113	IdentifierDeclStatement	cmsUInt32Number Free = it8 -> Allocator . BlockSize - it8 -> Allocator . Used ;	1074:4:32994:33065	705110	0	True				
ANR	705114	IdentifierDecl	Free = it8 -> Allocator . BlockSize - it8 -> Allocator . Used		705110	0					
ANR	705115	IdentifierDeclType	cmsUInt32Number		705110	0					
ANR	705116	Identifier	Free		705110	1					
ANR	705117	AssignmentExpression	Free = it8 -> Allocator . BlockSize - it8 -> Allocator . Used		705110	2		=			
ANR	705118	Identifier	Free		705110	0					
ANR	705119	AdditiveExpression	it8 -> Allocator . BlockSize - it8 -> Allocator . Used		705110	1		-			
ANR	705120	MemberAccess	it8 -> Allocator . BlockSize		705110	0					
ANR	705121	PtrMemberAccess	it8 -> Allocator		705110	0					
ANR	705122	Identifier	it8		705110	0					
ANR	705123	Identifier	Allocator		705110	1					
ANR	705124	Identifier	BlockSize		705110	1					
ANR	705125	MemberAccess	it8 -> Allocator . Used		705110	1					
ANR	705126	PtrMemberAccess	it8 -> Allocator		705110	0					
ANR	705127	Identifier	it8		705110	0					
ANR	705128	Identifier	Allocator		705110	1					
ANR	705129	Identifier	Used		705110	1					
ANR	705130	IdentifierDeclStatement	cmsUInt8Number * ptr ;	1075:4:33071:33090	705110	1	True				
ANR	705131	IdentifierDecl	* ptr		705110	0					
ANR	705132	IdentifierDeclType	cmsUInt8Number *		705110	0					
ANR	705133	Identifier	ptr		705110	1					
ANR	705134	ExpressionStatement	size = _cmsALIGNMEM ( size )	1077:4:33097:33122	705110	2	True				
ANR	705135	AssignmentExpression	size = _cmsALIGNMEM ( size )		705110	0		=			
ANR	705136	Identifier	size		705110	0					
ANR	705137	CallExpression	_cmsALIGNMEM ( size )		705110	1					
ANR	705138	Callee	_cmsALIGNMEM		705110	0					
ANR	705139	Identifier	_cmsALIGNMEM		705110	0					
ANR	705140	ArgumentList	size		705110	1					
ANR	705141	Argument	size		705110	0					
ANR	705142	Identifier	size		705110	0					
ANR	705143	IfStatement	if ( size > Free )		705110	3					
ANR	705144	Condition	size > Free	1079:8:33133:33143	705110	0	True				
ANR	705145	RelationalExpression	size > Free		705110	0		>			
ANR	705146	Identifier	size		705110	0					
ANR	705147	Identifier	Free		705110	1					
ANR	705148	CompoundStatement		7:21:157:157	705110	1					
ANR	705149	IfStatement	if ( it8 -> Allocator . BlockSize == 0 )		705110	0					
ANR	705150	Condition	it8 -> Allocator . BlockSize == 0	1081:12:33161:33191	705110	0	True				
ANR	705151	EqualityExpression	it8 -> Allocator . BlockSize == 0		705110	0		==			
ANR	705152	MemberAccess	it8 -> Allocator . BlockSize		705110	0					
ANR	705153	PtrMemberAccess	it8 -> Allocator		705110	0					
ANR	705154	Identifier	it8		705110	0					
ANR	705155	Identifier	Allocator		705110	1					
ANR	705156	Identifier	BlockSize		705110	1					
ANR	705157	PrimaryExpression	0		705110	1					
ANR	705158	ExpressionStatement	it8 -> Allocator . BlockSize = 20 * 1024	1083:16:33211:33247	705110	1	True				
ANR	705159	AssignmentExpression	it8 -> Allocator . BlockSize = 20 * 1024		705110	0		=			
ANR	705160	MemberAccess	it8 -> Allocator . BlockSize		705110	0					
ANR	705161	PtrMemberAccess	it8 -> Allocator		705110	0					
ANR	705162	Identifier	it8		705110	0					
ANR	705163	Identifier	Allocator		705110	1					
ANR	705164	Identifier	BlockSize		705110	1					
ANR	705165	MultiplicativeExpression	20 * 1024		705110	1		*			
ANR	705166	PrimaryExpression	20		705110	0					
ANR	705167	PrimaryExpression	1024		705110	1					
ANR	705168	ElseStatement	else		705110	0					
ANR	705169	ExpressionStatement	it8 -> Allocator . BlockSize *= 2	1085:16:33278:33308	705110	0	True				
ANR	705170	AssignmentExpression	it8 -> Allocator . BlockSize *= 2		705110	0		*=			
ANR	705171	MemberAccess	it8 -> Allocator . BlockSize		705110	0					
ANR	705172	PtrMemberAccess	it8 -> Allocator		705110	0					
ANR	705173	Identifier	it8		705110	0					
ANR	705174	Identifier	Allocator		705110	1					
ANR	705175	Identifier	BlockSize		705110	1					
ANR	705176	PrimaryExpression	2		705110	1					
ANR	705177	IfStatement	if ( it8 -> Allocator . BlockSize < size )		705110	1					
ANR	705178	Condition	it8 -> Allocator . BlockSize < size	1087:12:33323:33354	705110	0	True				
ANR	705179	RelationalExpression	it8 -> Allocator . BlockSize < size		705110	0		<			
ANR	705180	MemberAccess	it8 -> Allocator . BlockSize		705110	0					
ANR	705181	PtrMemberAccess	it8 -> Allocator		705110	0					
ANR	705182	Identifier	it8		705110	0					
ANR	705183	Identifier	Allocator		705110	1					
ANR	705184	Identifier	BlockSize		705110	1					
ANR	705185	Identifier	size		705110	1					
ANR	705186	ExpressionStatement	it8 -> Allocator . BlockSize = size	1088:16:33373:33405	705110	1	True				
ANR	705187	AssignmentExpression	it8 -> Allocator . BlockSize = size		705110	0		=			
ANR	705188	MemberAccess	it8 -> Allocator . BlockSize		705110	0					
ANR	705189	PtrMemberAccess	it8 -> Allocator		705110	0					
ANR	705190	Identifier	it8		705110	0					
ANR	705191	Identifier	Allocator		705110	1					
ANR	705192	Identifier	BlockSize		705110	1					
ANR	705193	Identifier	size		705110	1					
ANR	705194	ExpressionStatement	it8 -> Allocator . Used = 0	1090:8:33416:33440	705110	2	True				
ANR	705195	AssignmentExpression	it8 -> Allocator . Used = 0		705110	0		=			
ANR	705196	MemberAccess	it8 -> Allocator . Used		705110	0					
ANR	705197	PtrMemberAccess	it8 -> Allocator		705110	0					
ANR	705198	Identifier	it8		705110	0					
ANR	705199	Identifier	Allocator		705110	1					
ANR	705200	Identifier	Used		705110	1					
ANR	705201	PrimaryExpression	0		705110	1					
ANR	705202	ExpressionStatement	"it8 -> Allocator . Block = ( cmsUInt8Number * ) AllocBigBlock ( it8 , it8 -> Allocator . BlockSize )"	1091:8:33450:33538	705110	3	True				
ANR	705203	AssignmentExpression	"it8 -> Allocator . Block = ( cmsUInt8Number * ) AllocBigBlock ( it8 , it8 -> Allocator . BlockSize )"		705110	0		=			
ANR	705204	MemberAccess	it8 -> Allocator . Block		705110	0					
ANR	705205	PtrMemberAccess	it8 -> Allocator		705110	0					
ANR	705206	Identifier	it8		705110	0					
ANR	705207	Identifier	Allocator		705110	1					
ANR	705208	Identifier	Block		705110	1					
ANR	705209	CastExpression	"( cmsUInt8Number * ) AllocBigBlock ( it8 , it8 -> Allocator . BlockSize )"		705110	1					
ANR	705210	CastTarget	cmsUInt8Number *		705110	0					
ANR	705211	CallExpression	"AllocBigBlock ( it8 , it8 -> Allocator . BlockSize )"		705110	1					
ANR	705212	Callee	AllocBigBlock		705110	0					
ANR	705213	Identifier	AllocBigBlock		705110	0					
ANR	705214	ArgumentList	it8		705110	1					
ANR	705215	Argument	it8		705110	0					
ANR	705216	Identifier	it8		705110	0					
ANR	705217	Argument	it8 -> Allocator . BlockSize		705110	1					
ANR	705218	MemberAccess	it8 -> Allocator . BlockSize		705110	0					
ANR	705219	PtrMemberAccess	it8 -> Allocator		705110	0					
ANR	705220	Identifier	it8		705110	0					
ANR	705221	Identifier	Allocator		705110	1					
ANR	705222	Identifier	BlockSize		705110	1					
ANR	705223	ExpressionStatement	ptr = it8 -> Allocator . Block + it8 -> Allocator . Used	1094:4:33551:33601	705110	4	True				
ANR	705224	AssignmentExpression	ptr = it8 -> Allocator . Block + it8 -> Allocator . Used		705110	0		=			
ANR	705225	Identifier	ptr		705110	0					
ANR	705226	AdditiveExpression	it8 -> Allocator . Block + it8 -> Allocator . Used		705110	1		+			
ANR	705227	MemberAccess	it8 -> Allocator . Block		705110	0					
ANR	705228	PtrMemberAccess	it8 -> Allocator		705110	0					
ANR	705229	Identifier	it8		705110	0					
ANR	705230	Identifier	Allocator		705110	1					
ANR	705231	Identifier	Block		705110	1					
ANR	705232	MemberAccess	it8 -> Allocator . Used		705110	1					
ANR	705233	PtrMemberAccess	it8 -> Allocator		705110	0					
ANR	705234	Identifier	it8		705110	0					
ANR	705235	Identifier	Allocator		705110	1					
ANR	705236	Identifier	Used		705110	1					
ANR	705237	ExpressionStatement	it8 -> Allocator . Used += size	1095:4:33607:33635	705110	5	True				
ANR	705238	AssignmentExpression	it8 -> Allocator . Used += size		705110	0		+=			
ANR	705239	MemberAccess	it8 -> Allocator . Used		705110	0					
ANR	705240	PtrMemberAccess	it8 -> Allocator		705110	0					
ANR	705241	Identifier	it8		705110	0					
ANR	705242	Identifier	Allocator		705110	1					
ANR	705243	Identifier	Used		705110	1					
ANR	705244	Identifier	size		705110	1					
ANR	705245	ReturnStatement	return ( void * ) ptr ;	1097:4:33642:33660	705110	6	True				
ANR	705246	CastExpression	( void * ) ptr		705110	0					
ANR	705247	CastTarget	void *		705110	0					
ANR	705248	Identifier	ptr		705110	1					
ANR	705249	ReturnType	static void *		705110	1					
ANR	705250	Identifier	AllocChunk		705110	2					
ANR	705251	ParameterList	"cmsIT8 * it8 , cmsUInt32Number size"		705110	3					
ANR	705252	Parameter	cmsIT8 * it8	1072:17:32953:32963	705110	0	True				
ANR	705253	ParameterType	cmsIT8 *		705110	0					
ANR	705254	Identifier	it8		705110	1					
ANR	705255	Parameter	cmsUInt32Number size	1072:30:32966:32985	705110	1	True				
ANR	705256	ParameterType	cmsUInt32Number		705110	0					
ANR	705257	Identifier	size		705110	1					
ANR	705258	CFGEntryNode	ENTRY		705110		True				
ANR	705259	CFGExitNode	EXIT		705110		True				
ANR	705260	Symbol	size		705110						
ANR	705261	Symbol	it8 -> Allocator		705110						
ANR	705262	Symbol	it8 -> Allocator . Used		705110						
ANR	705263	Symbol	it8 -> Allocator . BlockSize		705110						
ANR	705264	Symbol	AllocBigBlock		705110						
ANR	705265	Symbol	* it8		705110						
ANR	705266	Symbol	it8		705110						
ANR	705267	Symbol	Free		705110						
ANR	705268	Symbol	it8 -> Allocator . Block		705110						
ANR	705269	Symbol	ptr		705110						
ANR	705270	Symbol	_cmsALIGNMEM		705110						
ANR	705271	Function	AllocString	1103:0:33689:33923							
ANR	705272	FunctionDef	"AllocString (cmsIT8 * it8 , const char * str)"		705271	0					
ANR	705273	CompoundStatement		1105:0:33744:33923	705271	0					
ANR	705274	IdentifierDeclStatement	cmsUInt32Number Size = ( cmsUInt32Number ) strlen ( str ) + 1 ;	1106:4:33750:33804	705271	0	True				
ANR	705275	IdentifierDecl	Size = ( cmsUInt32Number ) strlen ( str ) + 1		705271	0					
ANR	705276	IdentifierDeclType	cmsUInt32Number		705271	0					
ANR	705277	Identifier	Size		705271	1					
ANR	705278	AssignmentExpression	Size = ( cmsUInt32Number ) strlen ( str ) + 1		705271	2		=			
ANR	705279	Identifier	Size		705271	0					
ANR	705280	AdditiveExpression	( cmsUInt32Number ) strlen ( str ) + 1		705271	1		+			
ANR	705281	CastExpression	( cmsUInt32Number ) strlen ( str )		705271	0					
ANR	705282	CastTarget	cmsUInt32Number		705271	0					
ANR	705283	CallExpression	strlen ( str )		705271	1					
ANR	705284	Callee	strlen		705271	0					
ANR	705285	Identifier	strlen		705271	0					
ANR	705286	ArgumentList	str		705271	1					
ANR	705287	Argument	str		705271	0					
ANR	705288	Identifier	str		705271	0					
ANR	705289	PrimaryExpression	1		705271	1					
ANR	705290	IdentifierDeclStatement	char * ptr ;	1107:4:33810:33819	705271	1	True				
ANR	705291	IdentifierDecl	* ptr		705271	0					
ANR	705292	IdentifierDeclType	char *		705271	0					
ANR	705293	Identifier	ptr		705271	1					
ANR	705294	ExpressionStatement	"ptr = ( char * ) AllocChunk ( it8 , Size )"	1110:4:33827:33863	705271	2	True				
ANR	705295	AssignmentExpression	"ptr = ( char * ) AllocChunk ( it8 , Size )"		705271	0		=			
ANR	705296	Identifier	ptr		705271	0					
ANR	705297	CastExpression	"( char * ) AllocChunk ( it8 , Size )"		705271	1					
ANR	705298	CastTarget	char *		705271	0					
ANR	705299	CallExpression	"AllocChunk ( it8 , Size )"		705271	1					
ANR	705300	Callee	AllocChunk		705271	0					
ANR	705301	Identifier	AllocChunk		705271	0					
ANR	705302	ArgumentList	it8		705271	1					
ANR	705303	Argument	it8		705271	0					
ANR	705304	Identifier	it8		705271	0					
ANR	705305	Argument	Size		705271	1					
ANR	705306	Identifier	Size		705271	0					
ANR	705307	IfStatement	if ( ptr )		705271	3					
ANR	705308	Condition	ptr	1111:8:33873:33875	705271	0	True				
ANR	705309	Identifier	ptr		705271	0					
ANR	705310	ExpressionStatement	"strncpy ( ptr , str , Size - 1 )"	1111:13:33878:33904	705271	1	True				
ANR	705311	CallExpression	"strncpy ( ptr , str , Size - 1 )"		705271	0					
ANR	705312	Callee	strncpy		705271	0					
ANR	705313	Identifier	strncpy		705271	0					
ANR	705314	ArgumentList	ptr		705271	1					
ANR	705315	Argument	ptr		705271	0					
ANR	705316	Identifier	ptr		705271	0					
ANR	705317	Argument	str		705271	1					
ANR	705318	Identifier	str		705271	0					
ANR	705319	Argument	Size - 1		705271	2					
ANR	705320	AdditiveExpression	Size - 1		705271	0		-			
ANR	705321	Identifier	Size		705271	0					
ANR	705322	PrimaryExpression	1		705271	1					
ANR	705323	ReturnStatement	return ptr ;	1113:4:33911:33921	705271	4	True				
ANR	705324	Identifier	ptr		705271	0					
ANR	705325	ReturnType	static char *		705271	1					
ANR	705326	Identifier	AllocString		705271	2					
ANR	705327	ParameterList	"cmsIT8 * it8 , const char * str"		705271	3					
ANR	705328	Parameter	cmsIT8 * it8	1104:18:33714:33724	705271	0	True				
ANR	705329	ParameterType	cmsIT8 *		705271	0					
ANR	705330	Identifier	it8		705271	1					
ANR	705331	Parameter	const char * str	1104:31:33727:33741	705271	1	True				
ANR	705332	ParameterType	const char *		705271	0					
ANR	705333	Identifier	str		705271	1					
ANR	705334	CFGEntryNode	ENTRY		705271		True				
ANR	705335	CFGExitNode	EXIT		705271		True				
ANR	705336	Symbol	str		705271						
ANR	705337	Symbol	AllocChunk		705271						
ANR	705338	Symbol	strlen		705271						
ANR	705339	Symbol	Size		705271						
ANR	705340	Symbol	it8		705271						
ANR	705341	Symbol	ptr		705271						
ANR	705342	Function	IsAvailableOnList	1118:0:33959:34625							
ANR	705343	FunctionDef	"IsAvailableOnList (KEYVALUE * p , const char * Key , const char * Subkey , KEYVALUE * * LastPtr)"		705342	0					
ANR	705344	CompoundStatement		1120:0:34062:34625	705342	0					
ANR	705345	IfStatement	if ( LastPtr )		705342	0					
ANR	705346	Condition	LastPtr	1121:8:34072:34078	705342	0	True				
ANR	705347	Identifier	LastPtr		705342	0					
ANR	705348	ExpressionStatement	* LastPtr = p	1121:17:34081:34093	705342	1	True				
ANR	705349	AssignmentExpression	* LastPtr = p		705342	0		=			
ANR	705350	UnaryOperationExpression	* LastPtr		705342	0					
ANR	705351	UnaryOperator	*		705342	0					
ANR	705352	Identifier	LastPtr		705342	1					
ANR	705353	Identifier	p		705342	1					
ANR	705354	ForStatement	for ( ; p != NULL ; p = p -> Next )		705342	1					
ANR	705355	Condition	p != NULL	1123:12:34108:34116	705342	0	True				
ANR	705356	EqualityExpression	p != NULL		705342	0		!=			
ANR	705357	Identifier	p		705342	0					
ANR	705358	Identifier	NULL		705342	1					
ANR	705359	AssignmentExpression	p = p -> Next	1123:23:34119:34129	705342	1	True	=			
ANR	705360	Identifier	p		705342	0					
ANR	705361	PtrMemberAccess	p -> Next		705342	1					
ANR	705362	Identifier	p		705342	0					
ANR	705363	Identifier	Next		705342	1					
ANR	705364	CompoundStatement		4:36:69:69	705342	2					
ANR	705365	IfStatement	if ( LastPtr )		705342	0					
ANR	705366	Condition	LastPtr	1125:12:34147:34153	705342	0	True				
ANR	705367	Identifier	LastPtr		705342	0					
ANR	705368	ExpressionStatement	* LastPtr = p	1125:21:34156:34168	705342	1	True				
ANR	705369	AssignmentExpression	* LastPtr = p		705342	0		=			
ANR	705370	UnaryOperationExpression	* LastPtr		705342	0					
ANR	705371	UnaryOperator	*		705342	0					
ANR	705372	Identifier	LastPtr		705342	1					
ANR	705373	Identifier	p		705342	1					
ANR	705374	IfStatement	if ( * Key != '#' )		705342	1					
ANR	705375	Condition	* Key != '#'	1127:12:34183:34193	705342	0	True				
ANR	705376	EqualityExpression	* Key != '#'		705342	0		!=			
ANR	705377	UnaryOperationExpression	* Key		705342	0					
ANR	705378	UnaryOperator	*		705342	0					
ANR	705379	Identifier	Key		705342	1					
ANR	705380	PrimaryExpression	'#'		705342	1					
ANR	705381	CompoundStatement		8:25:133:133	705342	1					
ANR	705382	IfStatement	"if ( cmsstrcasecmp ( Key , p -> Keyword ) == 0 )"		705342	0					
ANR	705383	Condition	"cmsstrcasecmp ( Key , p -> Keyword ) == 0"	1129:16:34239:34273	705342	0	True				
ANR	705384	EqualityExpression	"cmsstrcasecmp ( Key , p -> Keyword ) == 0"		705342	0		==			
ANR	705385	CallExpression	"cmsstrcasecmp ( Key , p -> Keyword )"		705342	0					
ANR	705386	Callee	cmsstrcasecmp		705342	0					
ANR	705387	Identifier	cmsstrcasecmp		705342	0					
ANR	705388	ArgumentList	Key		705342	1					
ANR	705389	Argument	Key		705342	0					
ANR	705390	Identifier	Key		705342	0					
ANR	705391	Argument	p -> Keyword		705342	1					
ANR	705392	PtrMemberAccess	p -> Keyword		705342	0					
ANR	705393	Identifier	p		705342	0					
ANR	705394	Identifier	Keyword		705342	1					
ANR	705395	PrimaryExpression	0		705342	1					
ANR	705396	BreakStatement	break ;	1130:16:34292:34297	705342	1	True				
ANR	705397	IfStatement	if ( p == NULL )		705342	2					
ANR	705398	Condition	p == NULL	1134:8:34324:34332	705342	0	True				
ANR	705399	EqualityExpression	p == NULL		705342	0		==			
ANR	705400	Identifier	p		705342	0					
ANR	705401	Identifier	NULL		705342	1					
ANR	705402	ReturnStatement	return FALSE ;	1135:8:34343:34355	705342	1	True				
ANR	705403	Identifier	FALSE		705342	0					
ANR	705404	IfStatement	if ( Subkey == 0 )		705342	3					
ANR	705405	Condition	Subkey == 0	1137:8:34366:34376	705342	0	True				
ANR	705406	EqualityExpression	Subkey == 0		705342	0		==			
ANR	705407	Identifier	Subkey		705342	0					
ANR	705408	PrimaryExpression	0		705342	1					
ANR	705409	ReturnStatement	return TRUE ;	1138:8:34387:34398	705342	1	True				
ANR	705410	Identifier	TRUE		705342	0					
ANR	705411	ForStatement	for ( ; p != NULL ; p = p -> NextSubkey )		705342	4					
ANR	705412	Condition	p != NULL	1140:11:34412:34420	705342	0	True				
ANR	705413	EqualityExpression	p != NULL		705342	0		!=			
ANR	705414	Identifier	p		705342	0					
ANR	705415	Identifier	NULL		705342	1					
ANR	705416	AssignmentExpression	p = p -> NextSubkey	1140:22:34423:34439	705342	1	True	=			
ANR	705417	Identifier	p		705342	0					
ANR	705418	PtrMemberAccess	p -> NextSubkey		705342	1					
ANR	705419	Identifier	p		705342	0					
ANR	705420	Identifier	NextSubkey		705342	1					
ANR	705421	CompoundStatement		21:41:379:379	705342	2					
ANR	705422	IfStatement	if ( p -> Subkey == NULL )		705342	0					
ANR	705423	Condition	p -> Subkey == NULL	1142:12:34457:34474	705342	0	True				
ANR	705424	EqualityExpression	p -> Subkey == NULL		705342	0		==			
ANR	705425	PtrMemberAccess	p -> Subkey		705342	0					
ANR	705426	Identifier	p		705342	0					
ANR	705427	Identifier	Subkey		705342	1					
ANR	705428	Identifier	NULL		705342	1					
ANR	705429	ContinueStatement	continue ;	1142:32:34477:34485	705342	1	True				
ANR	705430	IfStatement	if ( LastPtr )		705342	1					
ANR	705431	Condition	LastPtr	1144:12:34500:34506	705342	0	True				
ANR	705432	Identifier	LastPtr		705342	0					
ANR	705433	ExpressionStatement	* LastPtr = p	1144:21:34509:34521	705342	1	True				
ANR	705434	AssignmentExpression	* LastPtr = p		705342	0		=			
ANR	705435	UnaryOperationExpression	* LastPtr		705342	0					
ANR	705436	UnaryOperator	*		705342	0					
ANR	705437	Identifier	LastPtr		705342	1					
ANR	705438	Identifier	p		705342	1					
ANR	705439	IfStatement	"if ( cmsstrcasecmp ( Subkey , p -> Subkey ) == 0 )"		705342	2					
ANR	705440	Condition	"cmsstrcasecmp ( Subkey , p -> Subkey ) == 0"	1146:12:34536:34572	705342	0	True				
ANR	705441	EqualityExpression	"cmsstrcasecmp ( Subkey , p -> Subkey ) == 0"		705342	0		==			
ANR	705442	CallExpression	"cmsstrcasecmp ( Subkey , p -> Subkey )"		705342	0					
ANR	705443	Callee	cmsstrcasecmp		705342	0					
ANR	705444	Identifier	cmsstrcasecmp		705342	0					
ANR	705445	ArgumentList	Subkey		705342	1					
ANR	705446	Argument	Subkey		705342	0					
ANR	705447	Identifier	Subkey		705342	0					
ANR	705448	Argument	p -> Subkey		705342	1					
ANR	705449	PtrMemberAccess	p -> Subkey		705342	0					
ANR	705450	Identifier	p		705342	0					
ANR	705451	Identifier	Subkey		705342	1					
ANR	705452	PrimaryExpression	0		705342	1					
ANR	705453	ReturnStatement	return TRUE ;	1147:12:34587:34598	705342	1	True				
ANR	705454	Identifier	TRUE		705342	0					
ANR	705455	ReturnStatement	return FALSE ;	1150:4:34611:34623	705342	5	True				
ANR	705456	Identifier	FALSE		705342	0					
ANR	705457	ReturnType	static cmsBool		705342	1					
ANR	705458	Identifier	IsAvailableOnList		705342	2					
ANR	705459	ParameterList	"KEYVALUE * p , const char * Key , const char * Subkey , KEYVALUE * * LastPtr"		705342	3					
ANR	705460	Parameter	KEYVALUE * p	1119:26:33992:34002	705342	0	True				
ANR	705461	ParameterType	KEYVALUE *		705342	0					
ANR	705462	Identifier	p		705342	1					
ANR	705463	Parameter	const char * Key	1119:39:34005:34019	705342	1	True				
ANR	705464	ParameterType	const char *		705342	0					
ANR	705465	Identifier	Key		705342	1					
ANR	705466	Parameter	const char * Subkey	1119:56:34022:34039	705342	2	True				
ANR	705467	ParameterType	const char *		705342	0					
ANR	705468	Identifier	Subkey		705342	1					
ANR	705469	Parameter	KEYVALUE * * LastPtr	1119:76:34042:34059	705342	3	True				
ANR	705470	ParameterType	KEYVALUE * *		705342	0					
ANR	705471	Identifier	LastPtr		705342	1					
ANR	705472	CFGEntryNode	ENTRY		705342		True				
ANR	705473	CFGExitNode	EXIT		705342		True				
ANR	705474	Symbol	NULL		705342						
ANR	705475	Symbol	* LastPtr		705342						
ANR	705476	Symbol	TRUE		705342						
ANR	705477	Symbol	cmsstrcasecmp		705342						
ANR	705478	Symbol	p -> Subkey		705342						
ANR	705479	Symbol	p -> NextSubkey		705342						
ANR	705480	Symbol	p		705342						
ANR	705481	Symbol	p -> Next		705342						
ANR	705482	Symbol	LastPtr		705342						
ANR	705483	Symbol	* Key		705342						
ANR	705484	Symbol	p -> Keyword		705342						
ANR	705485	Symbol	* p		705342						
ANR	705486	Symbol	FALSE		705342						
ANR	705487	Symbol	Key		705342						
ANR	705488	Symbol	Subkey		705342						
ANR	705489	Function	AddToList	1156:0:34667:36288							
ANR	705490	FunctionDef	"AddToList (cmsIT8 * it8 , KEYVALUE * * Head , const char * Key , const char * Subkey , const char * xValue , WRITEMODE WriteAs)"		705489	0					
ANR	705491	CompoundStatement		1158:0:34800:36288	705489	0					
ANR	705492	IdentifierDeclStatement	KEYVALUE * p ;	1159:4:34806:34817	705489	0	True				
ANR	705493	IdentifierDecl	* p		705489	0					
ANR	705494	IdentifierDeclType	KEYVALUE *		705489	0					
ANR	705495	Identifier	p		705489	1					
ANR	705496	IdentifierDeclStatement	KEYVALUE * last ;	1160:4:34823:34837	705489	1	True				
ANR	705497	IdentifierDecl	* last		705489	0					
ANR	705498	IdentifierDeclType	KEYVALUE *		705489	0					
ANR	705499	Identifier	last		705489	1					
ANR	705500	IfStatement	"if ( IsAvailableOnList ( * Head , Key , Subkey , & p ) )"		705489	2					
ANR	705501	Condition	"IsAvailableOnList ( * Head , Key , Subkey , & p )"	1165:8:34894:34934	705489	0	True				
ANR	705502	CallExpression	"IsAvailableOnList ( * Head , Key , Subkey , & p )"		705489	0					
ANR	705503	Callee	IsAvailableOnList		705489	0					
ANR	705504	Identifier	IsAvailableOnList		705489	0					
ANR	705505	ArgumentList	* Head		705489	1					
ANR	705506	Argument	* Head		705489	0					
ANR	705507	UnaryOperationExpression	* Head		705489	0					
ANR	705508	UnaryOperator	*		705489	0					
ANR	705509	Identifier	Head		705489	1					
ANR	705510	Argument	Key		705489	1					
ANR	705511	Identifier	Key		705489	0					
ANR	705512	Argument	Subkey		705489	2					
ANR	705513	Identifier	Subkey		705489	0					
ANR	705514	Argument	& p		705489	3					
ANR	705515	UnaryOperationExpression	& p		705489	0					
ANR	705516	UnaryOperator	&		705489	0					
ANR	705517	Identifier	p		705489	1					
ANR	705518	CompoundStatement		8:51:136:136	705489	1					
ANR	705519	ElseStatement	else		705489	0					
ANR	705520	CompoundStatement		14:9:267:267	705489	0					
ANR	705521	ExpressionStatement	last = p	1173:8:35079:35087	705489	0	True				
ANR	705522	AssignmentExpression	last = p		705489	0		=			
ANR	705523	Identifier	last		705489	0					
ANR	705524	Identifier	p		705489	1					
ANR	705525	ExpressionStatement	"p = ( KEYVALUE * ) AllocChunk ( it8 , sizeof ( KEYVALUE ) )"	1176:8:35132:35181	705489	1	True				
ANR	705526	AssignmentExpression	"p = ( KEYVALUE * ) AllocChunk ( it8 , sizeof ( KEYVALUE ) )"		705489	0		=			
ANR	705527	Identifier	p		705489	0					
ANR	705528	CastExpression	"( KEYVALUE * ) AllocChunk ( it8 , sizeof ( KEYVALUE ) )"		705489	1					
ANR	705529	CastTarget	KEYVALUE *		705489	0					
ANR	705530	CallExpression	"AllocChunk ( it8 , sizeof ( KEYVALUE ) )"		705489	1					
ANR	705531	Callee	AllocChunk		705489	0					
ANR	705532	Identifier	AllocChunk		705489	0					
ANR	705533	ArgumentList	it8		705489	1					
ANR	705534	Argument	it8		705489	0					
ANR	705535	Identifier	it8		705489	0					
ANR	705536	Argument	sizeof ( KEYVALUE )		705489	1					
ANR	705537	SizeofExpression	sizeof ( KEYVALUE )		705489	0					
ANR	705538	Sizeof	sizeof		705489	0					
ANR	705539	SizeofOperand	KEYVALUE		705489	1					
ANR	705540	IfStatement	if ( p == NULL )		705489	2					
ANR	705541	Condition	p == NULL	1177:12:35195:35203	705489	0	True				
ANR	705542	EqualityExpression	p == NULL		705489	0		==			
ANR	705543	Identifier	p		705489	0					
ANR	705544	Identifier	NULL		705489	1					
ANR	705545	CompoundStatement		21:8:413:413	705489	1					
ANR	705546	ExpressionStatement	"SynError ( it8 , ""AddToList: out of memory"" )"	1179:12:35228:35269	705489	0	True				
ANR	705547	CallExpression	"SynError ( it8 , ""AddToList: out of memory"" )"		705489	0					
ANR	705548	Callee	SynError		705489	0					
ANR	705549	Identifier	SynError		705489	0					
ANR	705550	ArgumentList	it8		705489	1					
ANR	705551	Argument	it8		705489	0					
ANR	705552	Identifier	it8		705489	0					
ANR	705553	Argument	"""AddToList: out of memory"""		705489	1					
ANR	705554	PrimaryExpression	"""AddToList: out of memory"""		705489	0					
ANR	705555	ReturnStatement	return NULL ;	1180:12:35283:35294	705489	1	True				
ANR	705556	Identifier	NULL		705489	0					
ANR	705557	ExpressionStatement	"p -> Keyword = AllocString ( it8 , Key )"	1184:8:35347:35381	705489	3	True				
ANR	705558	AssignmentExpression	"p -> Keyword = AllocString ( it8 , Key )"		705489	0		=			
ANR	705559	PtrMemberAccess	p -> Keyword		705489	0					
ANR	705560	Identifier	p		705489	0					
ANR	705561	Identifier	Keyword		705489	1					
ANR	705562	CallExpression	"AllocString ( it8 , Key )"		705489	1					
ANR	705563	Callee	AllocString		705489	0					
ANR	705564	Identifier	AllocString		705489	0					
ANR	705565	ArgumentList	it8		705489	1					
ANR	705566	Argument	it8		705489	0					
ANR	705567	Identifier	it8		705489	0					
ANR	705568	Argument	Key		705489	1					
ANR	705569	Identifier	Key		705489	0					
ANR	705570	ExpressionStatement	"p -> Subkey = ( Subkey == NULL ) ? NULL : AllocString ( it8 , Subkey )"	1185:8:35391:35453	705489	4	True				
ANR	705571	AssignmentExpression	"p -> Subkey = ( Subkey == NULL ) ? NULL : AllocString ( it8 , Subkey )"		705489	0		=			
ANR	705572	PtrMemberAccess	p -> Subkey		705489	0					
ANR	705573	Identifier	p		705489	0					
ANR	705574	Identifier	Subkey		705489	1					
ANR	705575	ConditionalExpression	"( Subkey == NULL ) ? NULL : AllocString ( it8 , Subkey )"		705489	1					
ANR	705576	Condition	Subkey == NULL		705489	0					
ANR	705577	EqualityExpression	Subkey == NULL		705489	0		==			
ANR	705578	Identifier	Subkey		705489	0					
ANR	705579	Identifier	NULL		705489	1					
ANR	705580	Identifier	NULL		705489	1					
ANR	705581	CallExpression	"AllocString ( it8 , Subkey )"		705489	2					
ANR	705582	Callee	AllocString		705489	0					
ANR	705583	Identifier	AllocString		705489	0					
ANR	705584	ArgumentList	it8		705489	1					
ANR	705585	Argument	it8		705489	0					
ANR	705586	Identifier	it8		705489	0					
ANR	705587	Argument	Subkey		705489	1					
ANR	705588	Identifier	Subkey		705489	0					
ANR	705589	IfStatement	if ( * Head == NULL )		705489	5					
ANR	705590	Condition	* Head == NULL	1188:12:35510:35522	705489	0	True				
ANR	705591	EqualityExpression	* Head == NULL		705489	0		==			
ANR	705592	UnaryOperationExpression	* Head		705489	0					
ANR	705593	UnaryOperator	*		705489	0					
ANR	705594	Identifier	Head		705489	1					
ANR	705595	Identifier	NULL		705489	1					
ANR	705596	CompoundStatement		31:27:724:724	705489	1					
ANR	705597	ExpressionStatement	* Head = p	1189:12:35539:35548	705489	0	True				
ANR	705598	AssignmentExpression	* Head = p		705489	0		=			
ANR	705599	UnaryOperationExpression	* Head		705489	0					
ANR	705600	UnaryOperator	*		705489	0					
ANR	705601	Identifier	Head		705489	1					
ANR	705602	Identifier	p		705489	1					
ANR	705603	ElseStatement	else		705489	0					
ANR	705604	CompoundStatement		35:8:780:780	705489	0					
ANR	705605	IfStatement	if ( Subkey != NULL && last != NULL )		705489	0					
ANR	705606	Condition	Subkey != NULL && last != NULL	1193:16:35599:35628	705489	0	True				
ANR	705607	AndExpression	Subkey != NULL && last != NULL		705489	0		&&			
ANR	705608	EqualityExpression	Subkey != NULL		705489	0		!=			
ANR	705609	Identifier	Subkey		705489	0					
ANR	705610	Identifier	NULL		705489	1					
ANR	705611	EqualityExpression	last != NULL		705489	1		!=			
ANR	705612	Identifier	last		705489	0					
ANR	705613	Identifier	NULL		705489	1					
ANR	705614	CompoundStatement		36:48:830:830	705489	1					
ANR	705615	ExpressionStatement	last -> NextSubkey = p	1195:16:35650:35670	705489	0	True				
ANR	705616	AssignmentExpression	last -> NextSubkey = p		705489	0		=			
ANR	705617	PtrMemberAccess	last -> NextSubkey		705489	0					
ANR	705618	Identifier	last		705489	0					
ANR	705619	Identifier	NextSubkey		705489	1					
ANR	705620	Identifier	p		705489	1					
ANR	705621	WhileStatement	while ( last -> Next != NULL )		705489	1					
ANR	705622	Condition	last -> Next != NULL	1200:23:35922:35939	705489	0	True				
ANR	705623	EqualityExpression	last -> Next != NULL		705489	0		!=			
ANR	705624	PtrMemberAccess	last -> Next		705489	0					
ANR	705625	Identifier	last		705489	0					
ANR	705626	Identifier	Next		705489	1					
ANR	705627	Identifier	NULL		705489	1					
ANR	705628	ExpressionStatement	last = last -> Next	1201:25:35967:35984	705489	1	True				
ANR	705629	AssignmentExpression	last = last -> Next		705489	0		=			
ANR	705630	Identifier	last		705489	0					
ANR	705631	PtrMemberAccess	last -> Next		705489	1					
ANR	705632	Identifier	last		705489	0					
ANR	705633	Identifier	Next		705489	1					
ANR	705634	IfStatement	if ( last != NULL )		705489	1					
ANR	705635	Condition	last != NULL	1204:16:36017:36028	705489	0	True				
ANR	705636	EqualityExpression	last != NULL		705489	0		!=			
ANR	705637	Identifier	last		705489	0					
ANR	705638	Identifier	NULL		705489	1					
ANR	705639	ExpressionStatement	last -> Next = p	1204:30:36031:36045	705489	1	True				
ANR	705640	AssignmentExpression	last -> Next = p		705489	0		=			
ANR	705641	PtrMemberAccess	last -> Next		705489	0					
ANR	705642	Identifier	last		705489	0					
ANR	705643	Identifier	Next		705489	1					
ANR	705644	Identifier	p		705489	1					
ANR	705645	ExpressionStatement	p -> Next = NULL	1207:8:36066:36083	705489	6	True				
ANR	705646	AssignmentExpression	p -> Next = NULL		705489	0		=			
ANR	705647	PtrMemberAccess	p -> Next		705489	0					
ANR	705648	Identifier	p		705489	0					
ANR	705649	Identifier	Next		705489	1					
ANR	705650	Identifier	NULL		705489	1					
ANR	705651	ExpressionStatement	p -> NextSubkey = NULL	1208:8:36093:36113	705489	7	True				
ANR	705652	AssignmentExpression	p -> NextSubkey = NULL		705489	0		=			
ANR	705653	PtrMemberAccess	p -> NextSubkey		705489	0					
ANR	705654	Identifier	p		705489	0					
ANR	705655	Identifier	NextSubkey		705489	1					
ANR	705656	Identifier	NULL		705489	1					
ANR	705657	ExpressionStatement	p -> WriteAs = WriteAs	1211:4:36126:36146	705489	3	True				
ANR	705658	AssignmentExpression	p -> WriteAs = WriteAs		705489	0		=			
ANR	705659	PtrMemberAccess	p -> WriteAs		705489	0					
ANR	705660	Identifier	p		705489	0					
ANR	705661	Identifier	WriteAs		705489	1					
ANR	705662	Identifier	WriteAs		705489	1					
ANR	705663	IfStatement	if ( xValue != NULL )		705489	4					
ANR	705664	Condition	xValue != NULL	1213:8:36157:36170	705489	0	True				
ANR	705665	EqualityExpression	xValue != NULL		705489	0		!=			
ANR	705666	Identifier	xValue		705489	0					
ANR	705667	Identifier	NULL		705489	1					
ANR	705668	CompoundStatement		56:24:1372:1372	705489	1					
ANR	705669	ExpressionStatement	"p -> Value = AllocString ( it8 , xValue )"	1215:8:36184:36221	705489	0	True				
ANR	705670	AssignmentExpression	"p -> Value = AllocString ( it8 , xValue )"		705489	0		=			
ANR	705671	PtrMemberAccess	p -> Value		705489	0					
ANR	705672	Identifier	p		705489	0					
ANR	705673	Identifier	Value		705489	1					
ANR	705674	CallExpression	"AllocString ( it8 , xValue )"		705489	1					
ANR	705675	Callee	AllocString		705489	0					
ANR	705676	Identifier	AllocString		705489	0					
ANR	705677	ArgumentList	it8		705489	1					
ANR	705678	Argument	it8		705489	0					
ANR	705679	Identifier	it8		705489	0					
ANR	705680	Argument	xValue		705489	1					
ANR	705681	Identifier	xValue		705489	0					
ANR	705682	ElseStatement	else		705489	0					
ANR	705683	CompoundStatement		60:9:1437:1437	705489	0					
ANR	705684	ExpressionStatement	p -> Value = NULL	1218:8:36248:36265	705489	0	True				
ANR	705685	AssignmentExpression	p -> Value = NULL		705489	0		=			
ANR	705686	PtrMemberAccess	p -> Value		705489	0					
ANR	705687	Identifier	p		705489	0					
ANR	705688	Identifier	Value		705489	1					
ANR	705689	Identifier	NULL		705489	1					
ANR	705690	ReturnStatement	return p ;	1221:4:36278:36286	705489	5	True				
ANR	705691	Identifier	p		705489	0					
ANR	705692	ReturnType	static KEYVALUE *		705489	1					
ANR	705693	Identifier	AddToList		705489	2					
ANR	705694	ParameterList	"cmsIT8 * it8 , KEYVALUE * * Head , const char * Key , const char * Subkey , const char * xValue , WRITEMODE WriteAs"		705489	3					
ANR	705695	Parameter	cmsIT8 * it8	1157:20:34694:34704	705489	0	True				
ANR	705696	ParameterType	cmsIT8 *		705489	0					
ANR	705697	Identifier	it8		705489	1					
ANR	705698	Parameter	KEYVALUE * * Head	1157:33:34707:34721	705489	1	True				
ANR	705699	ParameterType	KEYVALUE * *		705489	0					
ANR	705700	Identifier	Head		705489	1					
ANR	705701	Parameter	const char * Key	1157:50:34724:34738	705489	2	True				
ANR	705702	ParameterType	const char *		705489	0					
ANR	705703	Identifier	Key		705489	1					
ANR	705704	Parameter	const char * Subkey	1157:67:34741:34758	705489	3	True				
ANR	705705	ParameterType	const char *		705489	0					
ANR	705706	Identifier	Subkey		705489	1					
ANR	705707	Parameter	const char * xValue	1157:87:34761:34778	705489	4	True				
ANR	705708	ParameterType	const char *		705489	0					
ANR	705709	Identifier	xValue		705489	1					
ANR	705710	Parameter	WRITEMODE WriteAs	1157:107:34781:34797	705489	5	True				
ANR	705711	ParameterType	WRITEMODE		705489	0					
ANR	705712	Identifier	WriteAs		705489	1					
ANR	705713	CFGEntryNode	ENTRY		705489		True				
ANR	705714	CFGExitNode	EXIT		705489		True				
ANR	705715	Symbol	Head		705489						
ANR	705716	Symbol	NULL		705489						
ANR	705717	Symbol	last		705489						
ANR	705718	Symbol	* Head		705489						
ANR	705719	Symbol	p -> WriteAs		705489						
ANR	705720	Symbol	p -> Subkey		705489						
ANR	705721	Symbol	it8		705489						
ANR	705722	Symbol	p -> NextSubkey		705489						
ANR	705723	Symbol	* last		705489						
ANR	705724	Symbol	last -> NextSubkey		705489						
ANR	705725	Symbol	p		705489						
ANR	705726	Symbol	AllocChunk		705489						
ANR	705727	Symbol	p -> Next		705489						
ANR	705728	Symbol	last -> Next		705489						
ANR	705729	Symbol	WriteAs		705489						
ANR	705730	Symbol	xValue		705489						
ANR	705731	Symbol	& p		705489						
ANR	705732	Symbol	AllocString		705489						
ANR	705733	Symbol	p -> Keyword		705489						
ANR	705734	Symbol	p -> Value		705489						
ANR	705735	Symbol	* p		705489						
ANR	705736	Symbol	IsAvailableOnList		705489						
ANR	705737	Symbol	Key		705489						
ANR	705738	Symbol	Subkey		705489						
ANR	705739	Function	AddAvailableProperty	1224:0:36291:36444							
ANR	705740	FunctionDef	"AddAvailableProperty (cmsIT8 * it8 , const char * Key , WRITEMODE as)"		705739	0					
ANR	705741	CompoundStatement		1226:0:36373:36444	705739	0					
ANR	705742	ReturnStatement	"return AddToList ( it8 , & it8 -> ValidKeywords , Key , NULL , NULL , as ) ;"	1227:4:36379:36442	705739	0	True				
ANR	705743	CallExpression	"AddToList ( it8 , & it8 -> ValidKeywords , Key , NULL , NULL , as )"		705739	0					
ANR	705744	Callee	AddToList		705739	0					
ANR	705745	Identifier	AddToList		705739	0					
ANR	705746	ArgumentList	it8		705739	1					
ANR	705747	Argument	it8		705739	0					
ANR	705748	Identifier	it8		705739	0					
ANR	705749	Argument	& it8 -> ValidKeywords		705739	1					
ANR	705750	UnaryOperationExpression	& it8 -> ValidKeywords		705739	0					
ANR	705751	UnaryOperator	&		705739	0					
ANR	705752	PtrMemberAccess	it8 -> ValidKeywords		705739	1					
ANR	705753	Identifier	it8		705739	0					
ANR	705754	Identifier	ValidKeywords		705739	1					
ANR	705755	Argument	Key		705739	2					
ANR	705756	Identifier	Key		705739	0					
ANR	705757	Argument	NULL		705739	3					
ANR	705758	Identifier	NULL		705739	0					
ANR	705759	Argument	NULL		705739	4					
ANR	705760	Identifier	NULL		705739	0					
ANR	705761	Argument	as		705739	5					
ANR	705762	Identifier	as		705739	0					
ANR	705763	ReturnType	static KEYVALUE *		705739	1					
ANR	705764	Identifier	AddAvailableProperty		705739	2					
ANR	705765	ParameterList	"cmsIT8 * it8 , const char * Key , WRITEMODE as"		705739	3					
ANR	705766	Parameter	cmsIT8 * it8	1225:31:36329:36339	705739	0	True				
ANR	705767	ParameterType	cmsIT8 *		705739	0					
ANR	705768	Identifier	it8		705739	1					
ANR	705769	Parameter	const char * Key	1225:44:36342:36356	705739	1	True				
ANR	705770	ParameterType	const char *		705739	0					
ANR	705771	Identifier	Key		705739	1					
ANR	705772	Parameter	WRITEMODE as	1225:61:36359:36370	705739	2	True				
ANR	705773	ParameterType	WRITEMODE		705739	0					
ANR	705774	Identifier	as		705739	1					
ANR	705775	CFGEntryNode	ENTRY		705739		True				
ANR	705776	CFGExitNode	EXIT		705739		True				
ANR	705777	Symbol	as		705739						
ANR	705778	Symbol	& it8 -> ValidKeywords		705739						
ANR	705779	Symbol	NULL		705739						
ANR	705780	Symbol	AddToList		705739						
ANR	705781	Symbol	it8		705739						
ANR	705782	Symbol	Key		705739						
ANR	705783	Function	AddAvailableSampleID	1231:0:36448:36599							
ANR	705784	FunctionDef	"AddAvailableSampleID (cmsIT8 * it8 , const char * Key)"		705783	0					
ANR	705785	CompoundStatement		1233:0:36516:36599	705783	0					
ANR	705786	ReturnStatement	"return AddToList ( it8 , & it8 -> ValidSampleID , Key , NULL , NULL , WRITE_UNCOOKED ) ;"	1234:4:36522:36597	705783	0	True				
ANR	705787	CallExpression	"AddToList ( it8 , & it8 -> ValidSampleID , Key , NULL , NULL , WRITE_UNCOOKED )"		705783	0					
ANR	705788	Callee	AddToList		705783	0					
ANR	705789	Identifier	AddToList		705783	0					
ANR	705790	ArgumentList	it8		705783	1					
ANR	705791	Argument	it8		705783	0					
ANR	705792	Identifier	it8		705783	0					
ANR	705793	Argument	& it8 -> ValidSampleID		705783	1					
ANR	705794	UnaryOperationExpression	& it8 -> ValidSampleID		705783	0					
ANR	705795	UnaryOperator	&		705783	0					
ANR	705796	PtrMemberAccess	it8 -> ValidSampleID		705783	1					
ANR	705797	Identifier	it8		705783	0					
ANR	705798	Identifier	ValidSampleID		705783	1					
ANR	705799	Argument	Key		705783	2					
ANR	705800	Identifier	Key		705783	0					
ANR	705801	Argument	NULL		705783	3					
ANR	705802	Identifier	NULL		705783	0					
ANR	705803	Argument	NULL		705783	4					
ANR	705804	Identifier	NULL		705783	0					
ANR	705805	Argument	WRITE_UNCOOKED		705783	5					
ANR	705806	Identifier	WRITE_UNCOOKED		705783	0					
ANR	705807	ReturnType	static KEYVALUE *		705783	1					
ANR	705808	Identifier	AddAvailableSampleID		705783	2					
ANR	705809	ParameterList	"cmsIT8 * it8 , const char * Key"		705783	3					
ANR	705810	Parameter	cmsIT8 * it8	1232:31:36486:36496	705783	0	True				
ANR	705811	ParameterType	cmsIT8 *		705783	0					
ANR	705812	Identifier	it8		705783	1					
ANR	705813	Parameter	const char * Key	1232:44:36499:36513	705783	1	True				
ANR	705814	ParameterType	const char *		705783	0					
ANR	705815	Identifier	Key		705783	1					
ANR	705816	CFGEntryNode	ENTRY		705783		True				
ANR	705817	CFGExitNode	EXIT		705783		True				
ANR	705818	Symbol	NULL		705783						
ANR	705819	Symbol	AddToList		705783						
ANR	705820	Symbol	& it8 -> ValidSampleID		705783						
ANR	705821	Symbol	WRITE_UNCOOKED		705783						
ANR	705822	Symbol	it8		705783						
ANR	705823	Symbol	Key		705783						
ANR	705824	Function	AllocTable	1238:0:36603:36800							
ANR	705825	FunctionDef	AllocTable (cmsIT8 * it8)		705824	0					
ANR	705826	CompoundStatement		1240:0:36639:36800	705824	0					
ANR	705827	IdentifierDeclStatement	TABLE * t ;	1241:4:36645:36653	705824	0	True				
ANR	705828	IdentifierDecl	* t		705824	0					
ANR	705829	IdentifierDeclType	TABLE *		705824	0					
ANR	705830	Identifier	t		705824	1					
ANR	705831	ExpressionStatement	t = it8 -> Tab + it8 -> TablesCount	1243:4:36660:36693	705824	1	True				
ANR	705832	AssignmentExpression	t = it8 -> Tab + it8 -> TablesCount		705824	0		=			
ANR	705833	Identifier	t		705824	0					
ANR	705834	AdditiveExpression	it8 -> Tab + it8 -> TablesCount		705824	1		+			
ANR	705835	PtrMemberAccess	it8 -> Tab		705824	0					
ANR	705836	Identifier	it8		705824	0					
ANR	705837	Identifier	Tab		705824	1					
ANR	705838	PtrMemberAccess	it8 -> TablesCount		705824	1					
ANR	705839	Identifier	it8		705824	0					
ANR	705840	Identifier	TablesCount		705824	1					
ANR	705841	ExpressionStatement	t -> HeaderList = NULL	1245:4:36700:36720	705824	2	True				
ANR	705842	AssignmentExpression	t -> HeaderList = NULL		705824	0		=			
ANR	705843	PtrMemberAccess	t -> HeaderList		705824	0					
ANR	705844	Identifier	t		705824	0					
ANR	705845	Identifier	HeaderList		705824	1					
ANR	705846	Identifier	NULL		705824	1					
ANR	705847	ExpressionStatement	t -> DataFormat = NULL	1246:4:36726:36746	705824	3	True				
ANR	705848	AssignmentExpression	t -> DataFormat = NULL		705824	0		=			
ANR	705849	PtrMemberAccess	t -> DataFormat		705824	0					
ANR	705850	Identifier	t		705824	0					
ANR	705851	Identifier	DataFormat		705824	1					
ANR	705852	Identifier	NULL		705824	1					
ANR	705853	ExpressionStatement	t -> Data = NULL	1247:4:36752:36772	705824	4	True				
ANR	705854	AssignmentExpression	t -> Data = NULL		705824	0		=			
ANR	705855	PtrMemberAccess	t -> Data		705824	0					
ANR	705856	Identifier	t		705824	0					
ANR	705857	Identifier	Data		705824	1					
ANR	705858	Identifier	NULL		705824	1					
ANR	705859	ExpressionStatement	it8 -> TablesCount ++	1249:4:36779:36798	705824	5	True				
ANR	705860	PostIncDecOperationExpression	it8 -> TablesCount ++		705824	0					
ANR	705861	PtrMemberAccess	it8 -> TablesCount		705824	0					
ANR	705862	Identifier	it8		705824	0					
ANR	705863	Identifier	TablesCount		705824	1					
ANR	705864	IncDec	++		705824	1					
ANR	705865	ReturnType	static void		705824	1					
ANR	705866	Identifier	AllocTable		705824	2					
ANR	705867	ParameterList	cmsIT8 * it8		705824	3					
ANR	705868	Parameter	cmsIT8 * it8	1239:16:36626:36636	705824	0	True				
ANR	705869	ParameterType	cmsIT8 *		705824	0					
ANR	705870	Identifier	it8		705824	1					
ANR	705871	CFGEntryNode	ENTRY		705824		True				
ANR	705872	CFGExitNode	EXIT		705824		True				
ANR	705873	Symbol	NULL		705824						
ANR	705874	Symbol	t		705824						
ANR	705875	Symbol	it8 -> Tab		705824						
ANR	705876	Symbol	t -> DataFormat		705824						
ANR	705877	Symbol	* it8		705824						
ANR	705878	Symbol	t -> HeaderList		705824						
ANR	705879	Symbol	it8 -> TablesCount		705824						
ANR	705880	Symbol	it8		705824						
ANR	705881	Symbol	t -> Data		705824						
ANR	705882	Symbol	* t		705824						
ANR	705883	Function	cmsIT8SetTable	1253:0:36804:37240							
ANR	705884	FunctionDef	"cmsIT8SetTable (cmsHANDLE IT8 , cmsUInt32Number nTable)"		705883	0					
ANR	705885	CompoundStatement		1254:0:36884:37240	705883	0					
ANR	705886	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) IT8 ;	1255:5:36891:36918	705883	0	True				
ANR	705887	IdentifierDecl	* it8 = ( cmsIT8 * ) IT8		705883	0					
ANR	705888	IdentifierDeclType	cmsIT8 *		705883	0					
ANR	705889	Identifier	it8		705883	1					
ANR	705890	AssignmentExpression	* it8 = ( cmsIT8 * ) IT8		705883	2		=			
ANR	705891	Identifier	it8		705883	0					
ANR	705892	CastExpression	( cmsIT8 * ) IT8		705883	1					
ANR	705893	CastTarget	cmsIT8 *		705883	0					
ANR	705894	Identifier	IT8		705883	1					
ANR	705895	IfStatement	if ( nTable >= it8 -> TablesCount )		705883	1					
ANR	705896	Condition	nTable >= it8 -> TablesCount	1257:9:36930:36956	705883	0	True				
ANR	705897	RelationalExpression	nTable >= it8 -> TablesCount		705883	0		>=			
ANR	705898	Identifier	nTable		705883	0					
ANR	705899	PtrMemberAccess	it8 -> TablesCount		705883	1					
ANR	705900	Identifier	it8		705883	0					
ANR	705901	Identifier	TablesCount		705883	1					
ANR	705902	CompoundStatement		4:38:74:74	705883	1					
ANR	705903	IfStatement	if ( nTable == it8 -> TablesCount )		705883	0					
ANR	705904	Condition	nTable == it8 -> TablesCount	1259:13:36975:37001	705883	0	True				
ANR	705905	EqualityExpression	nTable == it8 -> TablesCount		705883	0		==			
ANR	705906	Identifier	nTable		705883	0					
ANR	705907	PtrMemberAccess	it8 -> TablesCount		705883	1					
ANR	705908	Identifier	it8		705883	0					
ANR	705909	Identifier	TablesCount		705883	1					
ANR	705910	CompoundStatement		6:42:119:119	705883	1					
ANR	705911	ExpressionStatement	AllocTable ( it8 )	1261:13:37020:37035	705883	0	True				
ANR	705912	CallExpression	AllocTable ( it8 )		705883	0					
ANR	705913	Callee	AllocTable		705883	0					
ANR	705914	Identifier	AllocTable		705883	0					
ANR	705915	ArgumentList	it8		705883	1					
ANR	705916	Argument	it8		705883	0					
ANR	705917	Identifier	it8		705883	0					
ANR	705918	ElseStatement	else		705883	0					
ANR	705919	CompoundStatement		10:14:177:177	705883	0					
ANR	705920	ExpressionStatement	"SynError ( it8 , ""Table %d is out of sequence"" , nTable )"	1264:13:37077:37129	705883	0	True				
ANR	705921	CallExpression	"SynError ( it8 , ""Table %d is out of sequence"" , nTable )"		705883	0					
ANR	705922	Callee	SynError		705883	0					
ANR	705923	Identifier	SynError		705883	0					
ANR	705924	ArgumentList	it8		705883	1					
ANR	705925	Argument	it8		705883	0					
ANR	705926	Identifier	it8		705883	0					
ANR	705927	Argument	"""Table %d is out of sequence"""		705883	1					
ANR	705928	PrimaryExpression	"""Table %d is out of sequence"""		705883	0					
ANR	705929	Argument	nTable		705883	2					
ANR	705930	Identifier	nTable		705883	0					
ANR	705931	ReturnStatement	return - 1 ;	1265:13:37144:37153	705883	1	True				
ANR	705932	UnaryOperationExpression	- 1		705883	0					
ANR	705933	UnaryOperator	-		705883	0					
ANR	705934	PrimaryExpression	1		705883	1					
ANR	705935	ExpressionStatement	it8 -> nTable = nTable	1269:5:37179:37200	705883	2	True				
ANR	705936	AssignmentExpression	it8 -> nTable = nTable		705883	0		=			
ANR	705937	PtrMemberAccess	it8 -> nTable		705883	0					
ANR	705938	Identifier	it8		705883	0					
ANR	705939	Identifier	nTable		705883	1					
ANR	705940	Identifier	nTable		705883	1					
ANR	705941	ReturnStatement	return ( cmsInt32Number ) nTable ;	1271:5:37208:37238	705883	3	True				
ANR	705942	CastExpression	( cmsInt32Number ) nTable		705883	0					
ANR	705943	CastTarget	cmsInt32Number		705883	0					
ANR	705944	Identifier	nTable		705883	1					
ANR	705945	ReturnType	cmsInt32Number CMSEXPORT		705883	1					
ANR	705946	Identifier	cmsIT8SetTable		705883	2					
ANR	705947	ParameterList	"cmsHANDLE IT8 , cmsUInt32Number nTable"		705883	3					
ANR	705948	Parameter	cmsHANDLE IT8	1253:40:36844:36857	705883	0	True				
ANR	705949	ParameterType	cmsHANDLE		705883	0					
ANR	705950	Identifier	IT8		705883	1					
ANR	705951	Parameter	cmsUInt32Number nTable	1253:56:36860:36881	705883	1	True				
ANR	705952	ParameterType	cmsUInt32Number		705883	0					
ANR	705953	Identifier	nTable		705883	1					
ANR	705954	CFGEntryNode	ENTRY		705883		True				
ANR	705955	CFGExitNode	EXIT		705883		True				
ANR	705956	Symbol	it8 -> nTable		705883						
ANR	705957	Symbol	nTable		705883						
ANR	705958	Symbol	* it8		705883						
ANR	705959	Symbol	it8 -> TablesCount		705883						
ANR	705960	Symbol	IT8		705883						
ANR	705961	Symbol	it8		705883						
ANR	705962	Function	cmsIT8Alloc	1277:0:37272:38434							
ANR	705963	FunctionDef	cmsIT8Alloc (cmsContext ContextID)		705962	0					
ANR	705964	CompoundStatement		1278:0:37327:38434	705962	0					
ANR	705965	IdentifierDeclStatement	cmsIT8 * it8 ;	1279:4:37333:37344	705962	0	True				
ANR	705966	IdentifierDecl	* it8		705962	0					
ANR	705967	IdentifierDeclType	cmsIT8 *		705962	0					
ANR	705968	Identifier	it8		705962	1					
ANR	705969	IdentifierDeclStatement	cmsUInt32Number i ;	1280:4:37350:37367	705962	1	True				
ANR	705970	IdentifierDecl	i		705962	0					
ANR	705971	IdentifierDeclType	cmsUInt32Number		705962	0					
ANR	705972	Identifier	i		705962	1					
ANR	705973	ExpressionStatement	"it8 = ( cmsIT8 * ) _cmsMallocZero ( ContextID , sizeof ( cmsIT8 ) )"	1282:4:37374:37431	705962	2	True				
ANR	705974	AssignmentExpression	"it8 = ( cmsIT8 * ) _cmsMallocZero ( ContextID , sizeof ( cmsIT8 ) )"		705962	0		=			
ANR	705975	Identifier	it8		705962	0					
ANR	705976	CastExpression	"( cmsIT8 * ) _cmsMallocZero ( ContextID , sizeof ( cmsIT8 ) )"		705962	1					
ANR	705977	CastTarget	cmsIT8 *		705962	0					
ANR	705978	CallExpression	"_cmsMallocZero ( ContextID , sizeof ( cmsIT8 ) )"		705962	1					
ANR	705979	Callee	_cmsMallocZero		705962	0					
ANR	705980	Identifier	_cmsMallocZero		705962	0					
ANR	705981	ArgumentList	ContextID		705962	1					
ANR	705982	Argument	ContextID		705962	0					
ANR	705983	Identifier	ContextID		705962	0					
ANR	705984	Argument	sizeof ( cmsIT8 )		705962	1					
ANR	705985	SizeofExpression	sizeof ( cmsIT8 )		705962	0					
ANR	705986	Sizeof	sizeof		705962	0					
ANR	705987	SizeofOperand	cmsIT8		705962	1					
ANR	705988	IfStatement	if ( it8 == NULL )		705962	3					
ANR	705989	Condition	it8 == NULL	1283:8:37441:37451	705962	0	True				
ANR	705990	EqualityExpression	it8 == NULL		705962	0		==			
ANR	705991	Identifier	it8		705962	0					
ANR	705992	Identifier	NULL		705962	1					
ANR	705993	ReturnStatement	return NULL ;	1283:21:37454:37465	705962	1	True				
ANR	705994	Identifier	NULL		705962	0					
ANR	705995	ExpressionStatement	AllocTable ( it8 )	1285:4:37472:37487	705962	4	True				
ANR	705996	CallExpression	AllocTable ( it8 )		705962	0					
ANR	705997	Callee	AllocTable		705962	0					
ANR	705998	Identifier	AllocTable		705962	0					
ANR	705999	ArgumentList	it8		705962	1					
ANR	706000	Argument	it8		705962	0					
ANR	706001	Identifier	it8		705962	0					
ANR	706002	ExpressionStatement	it8 -> MemoryBlock = NULL	1287:4:37494:37517	705962	5	True				
ANR	706003	AssignmentExpression	it8 -> MemoryBlock = NULL		705962	0		=			
ANR	706004	PtrMemberAccess	it8 -> MemoryBlock		705962	0					
ANR	706005	Identifier	it8		705962	0					
ANR	706006	Identifier	MemoryBlock		705962	1					
ANR	706007	Identifier	NULL		705962	1					
ANR	706008	ExpressionStatement	it8 -> MemorySink = NULL	1288:4:37523:37546	705962	6	True				
ANR	706009	AssignmentExpression	it8 -> MemorySink = NULL		705962	0		=			
ANR	706010	PtrMemberAccess	it8 -> MemorySink		705962	0					
ANR	706011	Identifier	it8		705962	0					
ANR	706012	Identifier	MemorySink		705962	1					
ANR	706013	Identifier	NULL		705962	1					
ANR	706014	ExpressionStatement	it8 -> nTable = 0	1290:4:37553:37569	705962	7	True				
ANR	706015	AssignmentExpression	it8 -> nTable = 0		705962	0		=			
ANR	706016	PtrMemberAccess	it8 -> nTable		705962	0					
ANR	706017	Identifier	it8		705962	0					
ANR	706018	Identifier	nTable		705962	1					
ANR	706019	PrimaryExpression	0		705962	1					
ANR	706020	ExpressionStatement	it8 -> ContextID = ContextID	1292:4:37576:37602	705962	8	True				
ANR	706021	AssignmentExpression	it8 -> ContextID = ContextID		705962	0		=			
ANR	706022	PtrMemberAccess	it8 -> ContextID		705962	0					
ANR	706023	Identifier	it8		705962	0					
ANR	706024	Identifier	ContextID		705962	1					
ANR	706025	Identifier	ContextID		705962	1					
ANR	706026	ExpressionStatement	it8 -> Allocator . Used = 0	1293:4:37608:37631	705962	9	True				
ANR	706027	AssignmentExpression	it8 -> Allocator . Used = 0		705962	0		=			
ANR	706028	MemberAccess	it8 -> Allocator . Used		705962	0					
ANR	706029	PtrMemberAccess	it8 -> Allocator		705962	0					
ANR	706030	Identifier	it8		705962	0					
ANR	706031	Identifier	Allocator		705962	1					
ANR	706032	Identifier	Used		705962	1					
ANR	706033	PrimaryExpression	0		705962	1					
ANR	706034	ExpressionStatement	it8 -> Allocator . Block = NULL	1294:4:37637:37664	705962	10	True				
ANR	706035	AssignmentExpression	it8 -> Allocator . Block = NULL		705962	0		=			
ANR	706036	MemberAccess	it8 -> Allocator . Block		705962	0					
ANR	706037	PtrMemberAccess	it8 -> Allocator		705962	0					
ANR	706038	Identifier	it8		705962	0					
ANR	706039	Identifier	Allocator		705962	1					
ANR	706040	Identifier	Block		705962	1					
ANR	706041	Identifier	NULL		705962	1					
ANR	706042	ExpressionStatement	it8 -> Allocator . BlockSize = 0	1295:4:37670:37698	705962	11	True				
ANR	706043	AssignmentExpression	it8 -> Allocator . BlockSize = 0		705962	0		=			
ANR	706044	MemberAccess	it8 -> Allocator . BlockSize		705962	0					
ANR	706045	PtrMemberAccess	it8 -> Allocator		705962	0					
ANR	706046	Identifier	it8		705962	0					
ANR	706047	Identifier	Allocator		705962	1					
ANR	706048	Identifier	BlockSize		705962	1					
ANR	706049	PrimaryExpression	0		705962	1					
ANR	706050	ExpressionStatement	it8 -> ValidKeywords = NULL	1297:4:37705:37730	705962	12	True				
ANR	706051	AssignmentExpression	it8 -> ValidKeywords = NULL		705962	0		=			
ANR	706052	PtrMemberAccess	it8 -> ValidKeywords		705962	0					
ANR	706053	Identifier	it8		705962	0					
ANR	706054	Identifier	ValidKeywords		705962	1					
ANR	706055	Identifier	NULL		705962	1					
ANR	706056	ExpressionStatement	it8 -> ValidSampleID = NULL	1298:4:37736:37761	705962	13	True				
ANR	706057	AssignmentExpression	it8 -> ValidSampleID = NULL		705962	0		=			
ANR	706058	PtrMemberAccess	it8 -> ValidSampleID		705962	0					
ANR	706059	Identifier	it8		705962	0					
ANR	706060	Identifier	ValidSampleID		705962	1					
ANR	706061	Identifier	NULL		705962	1					
ANR	706062	ExpressionStatement	it8 -> sy = SUNDEFINED	1300:4:37768:37790	705962	14	True				
ANR	706063	AssignmentExpression	it8 -> sy = SUNDEFINED		705962	0		=			
ANR	706064	PtrMemberAccess	it8 -> sy		705962	0					
ANR	706065	Identifier	it8		705962	0					
ANR	706066	Identifier	sy		705962	1					
ANR	706067	Identifier	SUNDEFINED		705962	1					
ANR	706068	ExpressionStatement	it8 -> ch = ' '	1301:4:37796:37811	705962	15	True				
ANR	706069	AssignmentExpression	it8 -> ch = ' '		705962	0		=			
ANR	706070	PtrMemberAccess	it8 -> ch		705962	0					
ANR	706071	Identifier	it8		705962	0					
ANR	706072	Identifier	ch		705962	1					
ANR	706073	PrimaryExpression	' '		705962	1					
ANR	706074	ExpressionStatement	it8 -> Source = NULL	1302:4:37817:37837	705962	16	True				
ANR	706075	AssignmentExpression	it8 -> Source = NULL		705962	0		=			
ANR	706076	PtrMemberAccess	it8 -> Source		705962	0					
ANR	706077	Identifier	it8		705962	0					
ANR	706078	Identifier	Source		705962	1					
ANR	706079	Identifier	NULL		705962	1					
ANR	706080	ExpressionStatement	it8 -> inum = 0	1303:4:37843:37858	705962	17	True				
ANR	706081	AssignmentExpression	it8 -> inum = 0		705962	0		=			
ANR	706082	PtrMemberAccess	it8 -> inum		705962	0					
ANR	706083	Identifier	it8		705962	0					
ANR	706084	Identifier	inum		705962	1					
ANR	706085	PrimaryExpression	0		705962	1					
ANR	706086	ExpressionStatement	it8 -> dnum = 0.0	1304:4:37864:37881	705962	18	True				
ANR	706087	AssignmentExpression	it8 -> dnum = 0.0		705962	0		=			
ANR	706088	PtrMemberAccess	it8 -> dnum		705962	0					
ANR	706089	Identifier	it8		705962	0					
ANR	706090	Identifier	dnum		705962	1					
ANR	706091	PrimaryExpression	0.0		705962	1					
ANR	706092	ExpressionStatement	"it8 -> FileStack [ 0 ] = ( FILECTX * ) AllocChunk ( it8 , sizeof ( FILECTX ) )"	1306:4:37888:37950	705962	19	True				
ANR	706093	AssignmentExpression	"it8 -> FileStack [ 0 ] = ( FILECTX * ) AllocChunk ( it8 , sizeof ( FILECTX ) )"		705962	0		=			
ANR	706094	ArrayIndexing	it8 -> FileStack [ 0 ]		705962	0					
ANR	706095	PtrMemberAccess	it8 -> FileStack		705962	0					
ANR	706096	Identifier	it8		705962	0					
ANR	706097	Identifier	FileStack		705962	1					
ANR	706098	PrimaryExpression	0		705962	1					
ANR	706099	CastExpression	"( FILECTX * ) AllocChunk ( it8 , sizeof ( FILECTX ) )"		705962	1					
ANR	706100	CastTarget	FILECTX *		705962	0					
ANR	706101	CallExpression	"AllocChunk ( it8 , sizeof ( FILECTX ) )"		705962	1					
ANR	706102	Callee	AllocChunk		705962	0					
ANR	706103	Identifier	AllocChunk		705962	0					
ANR	706104	ArgumentList	it8		705962	1					
ANR	706105	Argument	it8		705962	0					
ANR	706106	Identifier	it8		705962	0					
ANR	706107	Argument	sizeof ( FILECTX )		705962	1					
ANR	706108	SizeofExpression	sizeof ( FILECTX )		705962	0					
ANR	706109	Sizeof	sizeof		705962	0					
ANR	706110	SizeofOperand	FILECTX		705962	1					
ANR	706111	ExpressionStatement	it8 -> IncludeSP = 0	1307:4:37956:37976	705962	20	True				
ANR	706112	AssignmentExpression	it8 -> IncludeSP = 0		705962	0		=			
ANR	706113	PtrMemberAccess	it8 -> IncludeSP		705962	0					
ANR	706114	Identifier	it8		705962	0					
ANR	706115	Identifier	IncludeSP		705962	1					
ANR	706116	PrimaryExpression	0		705962	1					
ANR	706117	ExpressionStatement	it8 -> lineno = 1	1308:4:37982:37999	705962	21	True				
ANR	706118	AssignmentExpression	it8 -> lineno = 1		705962	0		=			
ANR	706119	PtrMemberAccess	it8 -> lineno		705962	0					
ANR	706120	Identifier	it8		705962	0					
ANR	706121	Identifier	lineno		705962	1					
ANR	706122	PrimaryExpression	1		705962	1					
ANR	706123	ExpressionStatement	"strcpy ( it8 -> DoubleFormatter , DEFAULT_DBL_FORMAT )"	1310:4:38006:38054	705962	22	True				
ANR	706124	CallExpression	"strcpy ( it8 -> DoubleFormatter , DEFAULT_DBL_FORMAT )"		705962	0					
ANR	706125	Callee	strcpy		705962	0					
ANR	706126	Identifier	strcpy		705962	0					
ANR	706127	ArgumentList	it8 -> DoubleFormatter		705962	1					
ANR	706128	Argument	it8 -> DoubleFormatter		705962	0					
ANR	706129	PtrMemberAccess	it8 -> DoubleFormatter		705962	0					
ANR	706130	Identifier	it8		705962	0					
ANR	706131	Identifier	DoubleFormatter		705962	1					
ANR	706132	Argument	DEFAULT_DBL_FORMAT		705962	1					
ANR	706133	Identifier	DEFAULT_DBL_FORMAT		705962	0					
ANR	706134	ExpressionStatement	"cmsIT8SetSheetType ( ( cmsHANDLE ) it8 , ""CGATS.17"" )"	1311:4:38060:38107	705962	23	True				
ANR	706135	CallExpression	"cmsIT8SetSheetType ( ( cmsHANDLE ) it8 , ""CGATS.17"" )"		705962	0					
ANR	706136	Callee	cmsIT8SetSheetType		705962	0					
ANR	706137	Identifier	cmsIT8SetSheetType		705962	0					
ANR	706138	ArgumentList	( cmsHANDLE ) it8		705962	1					
ANR	706139	Argument	( cmsHANDLE ) it8		705962	0					
ANR	706140	CastExpression	( cmsHANDLE ) it8		705962	0					
ANR	706141	CastTarget	cmsHANDLE		705962	0					
ANR	706142	Identifier	it8		705962	1					
ANR	706143	Argument	"""CGATS.17"""		705962	1					
ANR	706144	PrimaryExpression	"""CGATS.17"""		705962	0					
ANR	706145	ForStatement	for ( i = 0 ; i < NUMPREDEFINEDPROPS ; i ++ )		705962	24					
ANR	706146	ForInit	i = 0 ;	1315:9:38167:38170	705962	0	True				
ANR	706147	AssignmentExpression	i = 0		705962	0		=			
ANR	706148	Identifier	i		705962	0					
ANR	706149	PrimaryExpression	0		705962	1					
ANR	706150	Condition	i < NUMPREDEFINEDPROPS	1315:14:38172:38193	705962	1	True				
ANR	706151	RelationalExpression	i < NUMPREDEFINEDPROPS		705962	0		<			
ANR	706152	Identifier	i		705962	0					
ANR	706153	Identifier	NUMPREDEFINEDPROPS		705962	1					
ANR	706154	PostIncDecOperationExpression	i ++	1315:38:38196:38198	705962	2	True				
ANR	706155	Identifier	i		705962	0					
ANR	706156	IncDec	++		705962	1					
ANR	706157	ExpressionStatement	"AddAvailableProperty ( it8 , PredefinedProperties [ i ] . id , PredefinedProperties [ i ] . as )"	1316:12:38213:38294	705962	3	True				
ANR	706158	CallExpression	"AddAvailableProperty ( it8 , PredefinedProperties [ i ] . id , PredefinedProperties [ i ] . as )"		705962	0					
ANR	706159	Callee	AddAvailableProperty		705962	0					
ANR	706160	Identifier	AddAvailableProperty		705962	0					
ANR	706161	ArgumentList	it8		705962	1					
ANR	706162	Argument	it8		705962	0					
ANR	706163	Identifier	it8		705962	0					
ANR	706164	Argument	PredefinedProperties [ i ] . id		705962	1					
ANR	706165	MemberAccess	PredefinedProperties [ i ] . id		705962	0					
ANR	706166	ArrayIndexing	PredefinedProperties [ i ]		705962	0					
ANR	706167	Identifier	PredefinedProperties		705962	0					
ANR	706168	Identifier	i		705962	1					
ANR	706169	Identifier	id		705962	1					
ANR	706170	Argument	PredefinedProperties [ i ] . as		705962	2					
ANR	706171	MemberAccess	PredefinedProperties [ i ] . as		705962	0					
ANR	706172	ArrayIndexing	PredefinedProperties [ i ]		705962	0					
ANR	706173	Identifier	PredefinedProperties		705962	0					
ANR	706174	Identifier	i		705962	1					
ANR	706175	Identifier	as		705962	1					
ANR	706176	ForStatement	for ( i = 0 ; i < NUMPREDEFINEDSAMPLEID ; i ++ )		705962	25					
ANR	706177	ForInit	i = 0 ;	1318:9:38306:38309	705962	0	True				
ANR	706178	AssignmentExpression	i = 0		705962	0		=			
ANR	706179	Identifier	i		705962	0					
ANR	706180	PrimaryExpression	0		705962	1					
ANR	706181	Condition	i < NUMPREDEFINEDSAMPLEID	1318:14:38311:38335	705962	1	True				
ANR	706182	RelationalExpression	i < NUMPREDEFINEDSAMPLEID		705962	0		<			
ANR	706183	Identifier	i		705962	0					
ANR	706184	Identifier	NUMPREDEFINEDSAMPLEID		705962	1					
ANR	706185	PostIncDecOperationExpression	i ++	1318:41:38338:38340	705962	2	True				
ANR	706186	Identifier	i		705962	0					
ANR	706187	IncDec	++		705962	1					
ANR	706188	ExpressionStatement	"AddAvailableSampleID ( it8 , PredefinedSampleID [ i ] )"	1319:12:38355:38403	705962	3	True				
ANR	706189	CallExpression	"AddAvailableSampleID ( it8 , PredefinedSampleID [ i ] )"		705962	0					
ANR	706190	Callee	AddAvailableSampleID		705962	0					
ANR	706191	Identifier	AddAvailableSampleID		705962	0					
ANR	706192	ArgumentList	it8		705962	1					
ANR	706193	Argument	it8		705962	0					
ANR	706194	Identifier	it8		705962	0					
ANR	706195	Argument	PredefinedSampleID [ i ]		705962	1					
ANR	706196	ArrayIndexing	PredefinedSampleID [ i ]		705962	0					
ANR	706197	Identifier	PredefinedSampleID		705962	0					
ANR	706198	Identifier	i		705962	1					
ANR	706199	ReturnStatement	return ( cmsHANDLE ) it8 ;	1322:3:38410:38432	705962	26	True				
ANR	706200	CastExpression	( cmsHANDLE ) it8		705962	0					
ANR	706201	CastTarget	cmsHANDLE		705962	0					
ANR	706202	Identifier	it8		705962	1					
ANR	706203	ReturnType	cmsHANDLE CMSEXPORT		705962	1					
ANR	706204	Identifier	cmsIT8Alloc		705962	2					
ANR	706205	ParameterList	cmsContext ContextID		705962	3					
ANR	706206	Parameter	cmsContext ContextID	1277:33:37305:37324	705962	0	True				
ANR	706207	ParameterType	cmsContext		705962	0					
ANR	706208	Identifier	ContextID		705962	1					
ANR	706209	CFGEntryNode	ENTRY		705962		True				
ANR	706210	CFGExitNode	EXIT		705962		True				
ANR	706211	Symbol	* * it8		705962						
ANR	706212	Symbol	it8 -> lineno		705962						
ANR	706213	Symbol	* it8 -> FileStack		705962						
ANR	706214	Symbol	PredefinedProperties [ i ] . as		705962						
ANR	706215	Symbol	it8 -> nTable		705962						
ANR	706216	Symbol	DEFAULT_DBL_FORMAT		705962						
ANR	706217	Symbol	it8 -> Allocator . BlockSize		705962						
ANR	706218	Symbol	it8 -> dnum		705962						
ANR	706219	Symbol	ContextID		705962						
ANR	706220	Symbol	* PredefinedProperties		705962						
ANR	706221	Symbol	it8 -> Allocator . Block		705962						
ANR	706222	Symbol	PredefinedProperties		705962						
ANR	706223	Symbol	_cmsMallocZero		705962						
ANR	706224	Symbol	it8 -> IncludeSP		705962						
ANR	706225	Symbol	NULL		705962						
ANR	706226	Symbol	it8 -> ValidKeywords		705962						
ANR	706227	Symbol	it8 -> Allocator . Used		705962						
ANR	706228	Symbol	it8 -> ValidSampleID		705962						
ANR	706229	Symbol	* it8		705962						
ANR	706230	Symbol	i		705962						
ANR	706231	Symbol	it8 -> ch		705962						
ANR	706232	Symbol	it8 -> Source		705962						
ANR	706233	Symbol	it8 -> sy		705962						
ANR	706234	Symbol	it8 -> DoubleFormatter		705962						
ANR	706235	Symbol	it8		705962						
ANR	706236	Symbol	it8 -> ContextID		705962						
ANR	706237	Symbol	PredefinedSampleID		705962						
ANR	706238	Symbol	AllocChunk		705962						
ANR	706239	Symbol	NUMPREDEFINEDSAMPLEID		705962						
ANR	706240	Symbol	it8 -> inum		705962						
ANR	706241	Symbol	* i		705962						
ANR	706242	Symbol	it8 -> Allocator		705962						
ANR	706243	Symbol	it8 -> FileStack		705962						
ANR	706244	Symbol	it8 -> MemorySink		705962						
ANR	706245	Symbol	PredefinedProperties [ i ] . id		705962						
ANR	706246	Symbol	NUMPREDEFINEDPROPS		705962						
ANR	706247	Symbol	SUNDEFINED		705962						
ANR	706248	Symbol	* PredefinedSampleID		705962						
ANR	706249	Symbol	it8 -> MemoryBlock		705962						
ANR	706250	Function	cmsIT8GetSheetType	1326:12:38450:38549							
ANR	706251	FunctionDef	cmsIT8GetSheetType (cmsHANDLE hIT8)		706250	0					
ANR	706252	CompoundStatement		1327:0:38495:38549	706250	0					
ANR	706253	ReturnStatement	return GetTable ( ( cmsIT8 * ) hIT8 ) -> SheetType ;	1328:8:38505:38547	706250	0	True				
ANR	706254	PtrMemberAccess	GetTable ( ( cmsIT8 * ) hIT8 ) -> SheetType		706250	0					
ANR	706255	CallExpression	GetTable ( ( cmsIT8 * ) hIT8 )		706250	0					
ANR	706256	Callee	GetTable		706250	0					
ANR	706257	Identifier	GetTable		706250	0					
ANR	706258	ArgumentList	( cmsIT8 * ) hIT8		706250	1					
ANR	706259	Argument	( cmsIT8 * ) hIT8		706250	0					
ANR	706260	CastExpression	( cmsIT8 * ) hIT8		706250	0					
ANR	706261	CastTarget	cmsIT8 *		706250	0					
ANR	706262	Identifier	hIT8		706250	1					
ANR	706263	Identifier	SheetType		706250	1					
ANR	706264	ReturnType	CMSEXPORT		706250	1					
ANR	706265	Identifier	cmsIT8GetSheetType		706250	2					
ANR	706266	ParameterList	cmsHANDLE hIT8		706250	3					
ANR	706267	Parameter	cmsHANDLE hIT8	1326:41:38479:38492	706250	0	True				
ANR	706268	ParameterType	cmsHANDLE		706250	0					
ANR	706269	Identifier	hIT8		706250	1					
ANR	706270	CFGEntryNode	ENTRY		706250		True				
ANR	706271	CFGExitNode	EXIT		706250		True				
ANR	706272	Symbol	GetTable		706250						
ANR	706273	Symbol	hIT8		706250						
ANR	706274	Symbol	GetTable ( ( cmsIT8 * ) hIT8 ) -> SheetType		706250						
ANR	706275	Symbol	* GetTable		706250						
ANR	706276	Function	cmsIT8SetSheetType	1331:0:38552:38777							
ANR	706277	FunctionDef	"cmsIT8SetSheetType (cmsHANDLE hIT8 , const char * Type)"		706276	0					
ANR	706278	CompoundStatement		1332:0:38623:38777	706276	0					
ANR	706279	IdentifierDeclStatement	TABLE * t = GetTable ( ( cmsIT8 * ) hIT8 ) ;	1333:8:38633:38668	706276	0	True				
ANR	706280	IdentifierDecl	* t = GetTable ( ( cmsIT8 * ) hIT8 )		706276	0					
ANR	706281	IdentifierDeclType	TABLE *		706276	0					
ANR	706282	Identifier	t		706276	1					
ANR	706283	AssignmentExpression	* t = GetTable ( ( cmsIT8 * ) hIT8 )		706276	2		=			
ANR	706284	Identifier	t		706276	0					
ANR	706285	CallExpression	GetTable ( ( cmsIT8 * ) hIT8 )		706276	1					
ANR	706286	Callee	GetTable		706276	0					
ANR	706287	Identifier	GetTable		706276	0					
ANR	706288	ArgumentList	( cmsIT8 * ) hIT8		706276	1					
ANR	706289	Argument	( cmsIT8 * ) hIT8		706276	0					
ANR	706290	CastExpression	( cmsIT8 * ) hIT8		706276	0					
ANR	706291	CastTarget	cmsIT8 *		706276	0					
ANR	706292	Identifier	hIT8		706276	1					
ANR	706293	ExpressionStatement	"strncpy ( t -> SheetType , Type , MAXSTR - 1 )"	1335:8:38679:38717	706276	1	True				
ANR	706294	CallExpression	"strncpy ( t -> SheetType , Type , MAXSTR - 1 )"		706276	0					
ANR	706295	Callee	strncpy		706276	0					
ANR	706296	Identifier	strncpy		706276	0					
ANR	706297	ArgumentList	t -> SheetType		706276	1					
ANR	706298	Argument	t -> SheetType		706276	0					
ANR	706299	PtrMemberAccess	t -> SheetType		706276	0					
ANR	706300	Identifier	t		706276	0					
ANR	706301	Identifier	SheetType		706276	1					
ANR	706302	Argument	Type		706276	1					
ANR	706303	Identifier	Type		706276	0					
ANR	706304	Argument	MAXSTR - 1		706276	2					
ANR	706305	AdditiveExpression	MAXSTR - 1		706276	0		-			
ANR	706306	Identifier	MAXSTR		706276	0					
ANR	706307	PrimaryExpression	1		706276	1					
ANR	706308	ExpressionStatement	t -> SheetType [ MAXSTR - 1 ] = 0	1336:8:38727:38754	706276	2	True				
ANR	706309	AssignmentExpression	t -> SheetType [ MAXSTR - 1 ] = 0		706276	0		=			
ANR	706310	ArrayIndexing	t -> SheetType [ MAXSTR - 1 ]		706276	0					
ANR	706311	PtrMemberAccess	t -> SheetType		706276	0					
ANR	706312	Identifier	t		706276	0					
ANR	706313	Identifier	SheetType		706276	1					
ANR	706314	AdditiveExpression	MAXSTR - 1		706276	1		-			
ANR	706315	Identifier	MAXSTR		706276	0					
ANR	706316	PrimaryExpression	1		706276	1					
ANR	706317	PrimaryExpression	0		706276	1					
ANR	706318	ReturnStatement	return TRUE ;	1337:8:38764:38775	706276	3	True				
ANR	706319	Identifier	TRUE		706276	0					
ANR	706320	ReturnType	cmsBool CMSEXPORT		706276	1					
ANR	706321	Identifier	cmsIT8SetSheetType		706276	2					
ANR	706322	ParameterList	"cmsHANDLE hIT8 , const char * Type"		706276	3					
ANR	706323	Parameter	cmsHANDLE hIT8	1331:37:38589:38602	706276	0	True				
ANR	706324	ParameterType	cmsHANDLE		706276	0					
ANR	706325	Identifier	hIT8		706276	1					
ANR	706326	Parameter	const char * Type	1331:53:38605:38620	706276	1	True				
ANR	706327	ParameterType	const char *		706276	0					
ANR	706328	Identifier	Type		706276	1					
ANR	706329	CFGEntryNode	ENTRY		706276		True				
ANR	706330	CFGExitNode	EXIT		706276		True				
ANR	706331	Symbol	GetTable		706276						
ANR	706332	Symbol	Type		706276						
ANR	706333	Symbol	t		706276						
ANR	706334	Symbol	hIT8		706276						
ANR	706335	Symbol	* * t		706276						
ANR	706336	Symbol	* t -> SheetType		706276						
ANR	706337	Symbol	* MAXSTR		706276						
ANR	706338	Symbol	t -> SheetType		706276						
ANR	706339	Symbol	TRUE		706276						
ANR	706340	Symbol	* t		706276						
ANR	706341	Symbol	MAXSTR		706276						
ANR	706342	Function	cmsIT8SetComment	1340:0:38780:39039							
ANR	706343	FunctionDef	"cmsIT8SetComment (cmsHANDLE hIT8 , const char * Val)"		706342	0					
ANR	706344	CompoundStatement		1341:0:38848:39039	706342	0					
ANR	706345	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	1342:4:38854:38882	706342	0	True				
ANR	706346	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		706342	0					
ANR	706347	IdentifierDeclType	cmsIT8 *		706342	0					
ANR	706348	Identifier	it8		706342	1					
ANR	706349	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		706342	2		=			
ANR	706350	Identifier	it8		706342	0					
ANR	706351	CastExpression	( cmsIT8 * ) hIT8		706342	1					
ANR	706352	CastTarget	cmsIT8 *		706342	0					
ANR	706353	Identifier	hIT8		706342	1					
ANR	706354	IfStatement	if ( ! Val )		706342	1					
ANR	706355	Condition	! Val	1344:8:38893:38896	706342	0	True				
ANR	706356	UnaryOperationExpression	! Val		706342	0					
ANR	706357	UnaryOperator	!		706342	0					
ANR	706358	Identifier	Val		706342	1					
ANR	706359	ReturnStatement	return FALSE ;	1344:14:38899:38911	706342	1	True				
ANR	706360	Identifier	FALSE		706342	0					
ANR	706361	IfStatement	if ( ! * Val )		706342	2					
ANR	706362	Condition	! * Val	1345:8:38921:38925	706342	0	True				
ANR	706363	UnaryOperationExpression	! * Val		706342	0					
ANR	706364	UnaryOperator	!		706342	0					
ANR	706365	UnaryOperationExpression	* Val		706342	1					
ANR	706366	UnaryOperator	*		706342	0					
ANR	706367	Identifier	Val		706342	1					
ANR	706368	ReturnStatement	return FALSE ;	1345:15:38928:38940	706342	1	True				
ANR	706369	Identifier	FALSE		706342	0					
ANR	706370	ReturnStatement	"return AddToList ( it8 , & GetTable ( it8 ) -> HeaderList , ""# "" , NULL , Val , WRITE_UNCOOKED ) != NULL ;"	1347:4:38947:39037	706342	3	True				
ANR	706371	EqualityExpression	"AddToList ( it8 , & GetTable ( it8 ) -> HeaderList , ""# "" , NULL , Val , WRITE_UNCOOKED ) != NULL"		706342	0		!=			
ANR	706372	CallExpression	"AddToList ( it8 , & GetTable ( it8 ) -> HeaderList , ""# "" , NULL , Val , WRITE_UNCOOKED )"		706342	0					
ANR	706373	Callee	AddToList		706342	0					
ANR	706374	Identifier	AddToList		706342	0					
ANR	706375	ArgumentList	it8		706342	1					
ANR	706376	Argument	it8		706342	0					
ANR	706377	Identifier	it8		706342	0					
ANR	706378	Argument	& GetTable ( it8 ) -> HeaderList		706342	1					
ANR	706379	UnaryOperationExpression	& GetTable ( it8 ) -> HeaderList		706342	0					
ANR	706380	UnaryOperator	&		706342	0					
ANR	706381	PtrMemberAccess	GetTable ( it8 ) -> HeaderList		706342	1					
ANR	706382	CallExpression	GetTable ( it8 )		706342	0					
ANR	706383	Callee	GetTable		706342	0					
ANR	706384	Identifier	GetTable		706342	0					
ANR	706385	ArgumentList	it8		706342	1					
ANR	706386	Argument	it8		706342	0					
ANR	706387	Identifier	it8		706342	0					
ANR	706388	Identifier	HeaderList		706342	1					
ANR	706389	Argument	"""# """		706342	2					
ANR	706390	PrimaryExpression	"""# """		706342	0					
ANR	706391	Argument	NULL		706342	3					
ANR	706392	Identifier	NULL		706342	0					
ANR	706393	Argument	Val		706342	4					
ANR	706394	Identifier	Val		706342	0					
ANR	706395	Argument	WRITE_UNCOOKED		706342	5					
ANR	706396	Identifier	WRITE_UNCOOKED		706342	0					
ANR	706397	Identifier	NULL		706342	1					
ANR	706398	ReturnType	cmsBool CMSEXPORT		706342	1					
ANR	706399	Identifier	cmsIT8SetComment		706342	2					
ANR	706400	ParameterList	"cmsHANDLE hIT8 , const char * Val"		706342	3					
ANR	706401	Parameter	cmsHANDLE hIT8	1340:35:38815:38828	706342	0	True				
ANR	706402	ParameterType	cmsHANDLE		706342	0					
ANR	706403	Identifier	hIT8		706342	1					
ANR	706404	Parameter	const char * Val	1340:51:38831:38845	706342	1	True				
ANR	706405	ParameterType	const char *		706342	0					
ANR	706406	Identifier	Val		706342	1					
ANR	706407	CFGEntryNode	ENTRY		706342		True				
ANR	706408	CFGExitNode	EXIT		706342		True				
ANR	706409	Symbol	Val		706342						
ANR	706410	Symbol	GetTable		706342						
ANR	706411	Symbol	NULL		706342						
ANR	706412	Symbol	* Val		706342						
ANR	706413	Symbol	hIT8		706342						
ANR	706414	Symbol	AddToList		706342						
ANR	706415	Symbol	WRITE_UNCOOKED		706342						
ANR	706416	Symbol	& GetTable ( it8 ) -> HeaderList		706342						
ANR	706417	Symbol	FALSE		706342						
ANR	706418	Symbol	it8		706342						
ANR	706419	Function	cmsIT8SetPropertyStr	1351:0:39061:39341							
ANR	706420	FunctionDef	"cmsIT8SetPropertyStr (cmsHANDLE hIT8 , const char * Key , const char * Val)"		706419	0					
ANR	706421	CompoundStatement		1352:0:39150:39341	706419	0					
ANR	706422	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	1353:4:39156:39184	706419	0	True				
ANR	706423	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		706419	0					
ANR	706424	IdentifierDeclType	cmsIT8 *		706419	0					
ANR	706425	Identifier	it8		706419	1					
ANR	706426	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		706419	2		=			
ANR	706427	Identifier	it8		706419	0					
ANR	706428	CastExpression	( cmsIT8 * ) hIT8		706419	1					
ANR	706429	CastTarget	cmsIT8 *		706419	0					
ANR	706430	Identifier	hIT8		706419	1					
ANR	706431	IfStatement	if ( ! Val )		706419	1					
ANR	706432	Condition	! Val	1355:8:39195:39198	706419	0	True				
ANR	706433	UnaryOperationExpression	! Val		706419	0					
ANR	706434	UnaryOperator	!		706419	0					
ANR	706435	Identifier	Val		706419	1					
ANR	706436	ReturnStatement	return FALSE ;	1355:14:39201:39213	706419	1	True				
ANR	706437	Identifier	FALSE		706419	0					
ANR	706438	IfStatement	if ( ! * Val )		706419	2					
ANR	706439	Condition	! * Val	1356:8:39223:39227	706419	0	True				
ANR	706440	UnaryOperationExpression	! * Val		706419	0					
ANR	706441	UnaryOperator	!		706419	0					
ANR	706442	UnaryOperationExpression	* Val		706419	1					
ANR	706443	UnaryOperator	*		706419	0					
ANR	706444	Identifier	Val		706419	1					
ANR	706445	ReturnStatement	return FALSE ;	1356:15:39230:39242	706419	1	True				
ANR	706446	Identifier	FALSE		706419	0					
ANR	706447	ReturnStatement	"return AddToList ( it8 , & GetTable ( it8 ) -> HeaderList , Key , NULL , Val , WRITE_STRINGIFY ) != NULL ;"	1358:4:39249:39339	706419	3	True				
ANR	706448	EqualityExpression	"AddToList ( it8 , & GetTable ( it8 ) -> HeaderList , Key , NULL , Val , WRITE_STRINGIFY ) != NULL"		706419	0		!=			
ANR	706449	CallExpression	"AddToList ( it8 , & GetTable ( it8 ) -> HeaderList , Key , NULL , Val , WRITE_STRINGIFY )"		706419	0					
ANR	706450	Callee	AddToList		706419	0					
ANR	706451	Identifier	AddToList		706419	0					
ANR	706452	ArgumentList	it8		706419	1					
ANR	706453	Argument	it8		706419	0					
ANR	706454	Identifier	it8		706419	0					
ANR	706455	Argument	& GetTable ( it8 ) -> HeaderList		706419	1					
ANR	706456	UnaryOperationExpression	& GetTable ( it8 ) -> HeaderList		706419	0					
ANR	706457	UnaryOperator	&		706419	0					
ANR	706458	PtrMemberAccess	GetTable ( it8 ) -> HeaderList		706419	1					
ANR	706459	CallExpression	GetTable ( it8 )		706419	0					
ANR	706460	Callee	GetTable		706419	0					
ANR	706461	Identifier	GetTable		706419	0					
ANR	706462	ArgumentList	it8		706419	1					
ANR	706463	Argument	it8		706419	0					
ANR	706464	Identifier	it8		706419	0					
ANR	706465	Identifier	HeaderList		706419	1					
ANR	706466	Argument	Key		706419	2					
ANR	706467	Identifier	Key		706419	0					
ANR	706468	Argument	NULL		706419	3					
ANR	706469	Identifier	NULL		706419	0					
ANR	706470	Argument	Val		706419	4					
ANR	706471	Identifier	Val		706419	0					
ANR	706472	Argument	WRITE_STRINGIFY		706419	5					
ANR	706473	Identifier	WRITE_STRINGIFY		706419	0					
ANR	706474	Identifier	NULL		706419	1					
ANR	706475	ReturnType	cmsBool CMSEXPORT		706419	1					
ANR	706476	Identifier	cmsIT8SetPropertyStr		706419	2					
ANR	706477	ParameterList	"cmsHANDLE hIT8 , const char * Key , const char * Val"		706419	3					
ANR	706478	Parameter	cmsHANDLE hIT8	1351:39:39100:39113	706419	0	True				
ANR	706479	ParameterType	cmsHANDLE		706419	0					
ANR	706480	Identifier	hIT8		706419	1					
ANR	706481	Parameter	const char * Key	1351:55:39116:39130	706419	1	True				
ANR	706482	ParameterType	const char *		706419	0					
ANR	706483	Identifier	Key		706419	1					
ANR	706484	Parameter	const char * Val	1351:72:39133:39147	706419	2	True				
ANR	706485	ParameterType	const char *		706419	0					
ANR	706486	Identifier	Val		706419	1					
ANR	706487	CFGEntryNode	ENTRY		706419		True				
ANR	706488	CFGExitNode	EXIT		706419		True				
ANR	706489	Symbol	Val		706419						
ANR	706490	Symbol	GetTable		706419						
ANR	706491	Symbol	NULL		706419						
ANR	706492	Symbol	* Val		706419						
ANR	706493	Symbol	hIT8		706419						
ANR	706494	Symbol	AddToList		706419						
ANR	706495	Symbol	& GetTable ( it8 ) -> HeaderList		706419						
ANR	706496	Symbol	FALSE		706419						
ANR	706497	Symbol	it8		706419						
ANR	706498	Symbol	WRITE_STRINGIFY		706419						
ANR	706499	Symbol	Key		706419						
ANR	706500	Function	cmsIT8SetPropertyDbl	1361:0:39344:39656							
ANR	706501	FunctionDef	"cmsIT8SetPropertyDbl (cmsHANDLE hIT8 , const char * cProp , cmsFloat64Number Val)"		706500	0					
ANR	706502	CompoundStatement		1362:0:39440:39656	706500	0					
ANR	706503	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	1363:4:39446:39474	706500	0	True				
ANR	706504	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		706500	0					
ANR	706505	IdentifierDeclType	cmsIT8 *		706500	0					
ANR	706506	Identifier	it8		706500	1					
ANR	706507	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		706500	2		=			
ANR	706508	Identifier	it8		706500	0					
ANR	706509	CastExpression	( cmsIT8 * ) hIT8		706500	1					
ANR	706510	CastTarget	cmsIT8 *		706500	0					
ANR	706511	Identifier	hIT8		706500	1					
ANR	706512	IdentifierDeclStatement	char Buffer [ 1024 ] ;	1364:4:39480:39497	706500	1	True				
ANR	706513	IdentifierDecl	Buffer [ 1024 ]		706500	0					
ANR	706514	IdentifierDeclType	char [ 1024 ]		706500	0					
ANR	706515	Identifier	Buffer		706500	1					
ANR	706516	PrimaryExpression	1024		706500	2					
ANR	706517	ExpressionStatement	"snprintf ( Buffer , 1023 , it8 -> DoubleFormatter , Val )"	1366:4:39504:39553	706500	2	True				
ANR	706518	CallExpression	"snprintf ( Buffer , 1023 , it8 -> DoubleFormatter , Val )"		706500	0					
ANR	706519	Callee	snprintf		706500	0					
ANR	706520	Identifier	snprintf		706500	0					
ANR	706521	ArgumentList	Buffer		706500	1					
ANR	706522	Argument	Buffer		706500	0					
ANR	706523	Identifier	Buffer		706500	0					
ANR	706524	Argument	1023		706500	1					
ANR	706525	PrimaryExpression	1023		706500	0					
ANR	706526	Argument	it8 -> DoubleFormatter		706500	2					
ANR	706527	PtrMemberAccess	it8 -> DoubleFormatter		706500	0					
ANR	706528	Identifier	it8		706500	0					
ANR	706529	Identifier	DoubleFormatter		706500	1					
ANR	706530	Argument	Val		706500	3					
ANR	706531	Identifier	Val		706500	0					
ANR	706532	ReturnStatement	"return AddToList ( it8 , & GetTable ( it8 ) -> HeaderList , cProp , NULL , Buffer , WRITE_UNCOOKED ) != NULL ;"	1368:4:39560:39654	706500	3	True				
ANR	706533	EqualityExpression	"AddToList ( it8 , & GetTable ( it8 ) -> HeaderList , cProp , NULL , Buffer , WRITE_UNCOOKED ) != NULL"		706500	0		!=			
ANR	706534	CallExpression	"AddToList ( it8 , & GetTable ( it8 ) -> HeaderList , cProp , NULL , Buffer , WRITE_UNCOOKED )"		706500	0					
ANR	706535	Callee	AddToList		706500	0					
ANR	706536	Identifier	AddToList		706500	0					
ANR	706537	ArgumentList	it8		706500	1					
ANR	706538	Argument	it8		706500	0					
ANR	706539	Identifier	it8		706500	0					
ANR	706540	Argument	& GetTable ( it8 ) -> HeaderList		706500	1					
ANR	706541	UnaryOperationExpression	& GetTable ( it8 ) -> HeaderList		706500	0					
ANR	706542	UnaryOperator	&		706500	0					
ANR	706543	PtrMemberAccess	GetTable ( it8 ) -> HeaderList		706500	1					
ANR	706544	CallExpression	GetTable ( it8 )		706500	0					
ANR	706545	Callee	GetTable		706500	0					
ANR	706546	Identifier	GetTable		706500	0					
ANR	706547	ArgumentList	it8		706500	1					
ANR	706548	Argument	it8		706500	0					
ANR	706549	Identifier	it8		706500	0					
ANR	706550	Identifier	HeaderList		706500	1					
ANR	706551	Argument	cProp		706500	2					
ANR	706552	Identifier	cProp		706500	0					
ANR	706553	Argument	NULL		706500	3					
ANR	706554	Identifier	NULL		706500	0					
ANR	706555	Argument	Buffer		706500	4					
ANR	706556	Identifier	Buffer		706500	0					
ANR	706557	Argument	WRITE_UNCOOKED		706500	5					
ANR	706558	Identifier	WRITE_UNCOOKED		706500	0					
ANR	706559	Identifier	NULL		706500	1					
ANR	706560	ReturnType	cmsBool CMSEXPORT		706500	1					
ANR	706561	Identifier	cmsIT8SetPropertyDbl		706500	2					
ANR	706562	ParameterList	"cmsHANDLE hIT8 , const char * cProp , cmsFloat64Number Val"		706500	3					
ANR	706563	Parameter	cmsHANDLE hIT8	1361:39:39383:39396	706500	0	True				
ANR	706564	ParameterType	cmsHANDLE		706500	0					
ANR	706565	Identifier	hIT8		706500	1					
ANR	706566	Parameter	const char * cProp	1361:55:39399:39415	706500	1	True				
ANR	706567	ParameterType	const char *		706500	0					
ANR	706568	Identifier	cProp		706500	1					
ANR	706569	Parameter	cmsFloat64Number Val	1361:74:39418:39437	706500	2	True				
ANR	706570	ParameterType	cmsFloat64Number		706500	0					
ANR	706571	Identifier	Val		706500	1					
ANR	706572	CFGEntryNode	ENTRY		706500		True				
ANR	706573	CFGExitNode	EXIT		706500		True				
ANR	706574	Symbol	Val		706500						
ANR	706575	Symbol	Buffer		706500						
ANR	706576	Symbol	GetTable		706500						
ANR	706577	Symbol	NULL		706500						
ANR	706578	Symbol	hIT8		706500						
ANR	706579	Symbol	AddToList		706500						
ANR	706580	Symbol	* it8		706500						
ANR	706581	Symbol	WRITE_UNCOOKED		706500						
ANR	706582	Symbol	& GetTable ( it8 ) -> HeaderList		706500						
ANR	706583	Symbol	it8 -> DoubleFormatter		706500						
ANR	706584	Symbol	it8		706500						
ANR	706585	Symbol	cProp		706500						
ANR	706586	Function	cmsIT8SetPropertyHex	1371:0:39659:39957							
ANR	706587	FunctionDef	"cmsIT8SetPropertyHex (cmsHANDLE hIT8 , const char * cProp , cmsUInt32Number Val)"		706586	0					
ANR	706588	CompoundStatement		1372:0:39754:39957	706586	0					
ANR	706589	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	1373:4:39760:39788	706586	0	True				
ANR	706590	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		706586	0					
ANR	706591	IdentifierDeclType	cmsIT8 *		706586	0					
ANR	706592	Identifier	it8		706586	1					
ANR	706593	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		706586	2		=			
ANR	706594	Identifier	it8		706586	0					
ANR	706595	CastExpression	( cmsIT8 * ) hIT8		706586	1					
ANR	706596	CastTarget	cmsIT8 *		706586	0					
ANR	706597	Identifier	hIT8		706586	1					
ANR	706598	IdentifierDeclStatement	char Buffer [ 1024 ] ;	1374:4:39794:39811	706586	1	True				
ANR	706599	IdentifierDecl	Buffer [ 1024 ]		706586	0					
ANR	706600	IdentifierDeclType	char [ 1024 ]		706586	0					
ANR	706601	Identifier	Buffer		706586	1					
ANR	706602	PrimaryExpression	1024		706586	2					
ANR	706603	ExpressionStatement	"snprintf ( Buffer , 1023 , ""%u"" , Val )"	1376:4:39818:39851	706586	2	True				
ANR	706604	CallExpression	"snprintf ( Buffer , 1023 , ""%u"" , Val )"		706586	0					
ANR	706605	Callee	snprintf		706586	0					
ANR	706606	Identifier	snprintf		706586	0					
ANR	706607	ArgumentList	Buffer		706586	1					
ANR	706608	Argument	Buffer		706586	0					
ANR	706609	Identifier	Buffer		706586	0					
ANR	706610	Argument	1023		706586	1					
ANR	706611	PrimaryExpression	1023		706586	0					
ANR	706612	Argument	"""%u"""		706586	2					
ANR	706613	PrimaryExpression	"""%u"""		706586	0					
ANR	706614	Argument	Val		706586	3					
ANR	706615	Identifier	Val		706586	0					
ANR	706616	ReturnStatement	"return AddToList ( it8 , & GetTable ( it8 ) -> HeaderList , cProp , NULL , Buffer , WRITE_HEXADECIMAL ) != NULL ;"	1378:4:39858:39955	706586	3	True				
ANR	706617	EqualityExpression	"AddToList ( it8 , & GetTable ( it8 ) -> HeaderList , cProp , NULL , Buffer , WRITE_HEXADECIMAL ) != NULL"		706586	0		!=			
ANR	706618	CallExpression	"AddToList ( it8 , & GetTable ( it8 ) -> HeaderList , cProp , NULL , Buffer , WRITE_HEXADECIMAL )"		706586	0					
ANR	706619	Callee	AddToList		706586	0					
ANR	706620	Identifier	AddToList		706586	0					
ANR	706621	ArgumentList	it8		706586	1					
ANR	706622	Argument	it8		706586	0					
ANR	706623	Identifier	it8		706586	0					
ANR	706624	Argument	& GetTable ( it8 ) -> HeaderList		706586	1					
ANR	706625	UnaryOperationExpression	& GetTable ( it8 ) -> HeaderList		706586	0					
ANR	706626	UnaryOperator	&		706586	0					
ANR	706627	PtrMemberAccess	GetTable ( it8 ) -> HeaderList		706586	1					
ANR	706628	CallExpression	GetTable ( it8 )		706586	0					
ANR	706629	Callee	GetTable		706586	0					
ANR	706630	Identifier	GetTable		706586	0					
ANR	706631	ArgumentList	it8		706586	1					
ANR	706632	Argument	it8		706586	0					
ANR	706633	Identifier	it8		706586	0					
ANR	706634	Identifier	HeaderList		706586	1					
ANR	706635	Argument	cProp		706586	2					
ANR	706636	Identifier	cProp		706586	0					
ANR	706637	Argument	NULL		706586	3					
ANR	706638	Identifier	NULL		706586	0					
ANR	706639	Argument	Buffer		706586	4					
ANR	706640	Identifier	Buffer		706586	0					
ANR	706641	Argument	WRITE_HEXADECIMAL		706586	5					
ANR	706642	Identifier	WRITE_HEXADECIMAL		706586	0					
ANR	706643	Identifier	NULL		706586	1					
ANR	706644	ReturnType	cmsBool CMSEXPORT		706586	1					
ANR	706645	Identifier	cmsIT8SetPropertyHex		706586	2					
ANR	706646	ParameterList	"cmsHANDLE hIT8 , const char * cProp , cmsUInt32Number Val"		706586	3					
ANR	706647	Parameter	cmsHANDLE hIT8	1371:39:39698:39711	706586	0	True				
ANR	706648	ParameterType	cmsHANDLE		706586	0					
ANR	706649	Identifier	hIT8		706586	1					
ANR	706650	Parameter	const char * cProp	1371:55:39714:39730	706586	1	True				
ANR	706651	ParameterType	const char *		706586	0					
ANR	706652	Identifier	cProp		706586	1					
ANR	706653	Parameter	cmsUInt32Number Val	1371:74:39733:39751	706586	2	True				
ANR	706654	ParameterType	cmsUInt32Number		706586	0					
ANR	706655	Identifier	Val		706586	1					
ANR	706656	CFGEntryNode	ENTRY		706586		True				
ANR	706657	CFGExitNode	EXIT		706586		True				
ANR	706658	Symbol	Val		706586						
ANR	706659	Symbol	Buffer		706586						
ANR	706660	Symbol	GetTable		706586						
ANR	706661	Symbol	NULL		706586						
ANR	706662	Symbol	hIT8		706586						
ANR	706663	Symbol	AddToList		706586						
ANR	706664	Symbol	& GetTable ( it8 ) -> HeaderList		706586						
ANR	706665	Symbol	WRITE_HEXADECIMAL		706586						
ANR	706666	Symbol	it8		706586						
ANR	706667	Symbol	cProp		706586						
ANR	706668	Function	cmsIT8SetPropertyUncooked	1381:0:39960:40192							
ANR	706669	FunctionDef	"cmsIT8SetPropertyUncooked (cmsHANDLE hIT8 , const char * Key , const char * Buffer)"		706668	0					
ANR	706670	CompoundStatement		1382:0:40057:40192	706668	0					
ANR	706671	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	1383:4:40063:40091	706668	0	True				
ANR	706672	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		706668	0					
ANR	706673	IdentifierDeclType	cmsIT8 *		706668	0					
ANR	706674	Identifier	it8		706668	1					
ANR	706675	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		706668	2		=			
ANR	706676	Identifier	it8		706668	0					
ANR	706677	CastExpression	( cmsIT8 * ) hIT8		706668	1					
ANR	706678	CastTarget	cmsIT8 *		706668	0					
ANR	706679	Identifier	hIT8		706668	1					
ANR	706680	ReturnStatement	"return AddToList ( it8 , & GetTable ( it8 ) -> HeaderList , Key , NULL , Buffer , WRITE_UNCOOKED ) != NULL ;"	1385:4:40098:40190	706668	1	True				
ANR	706681	EqualityExpression	"AddToList ( it8 , & GetTable ( it8 ) -> HeaderList , Key , NULL , Buffer , WRITE_UNCOOKED ) != NULL"		706668	0		!=			
ANR	706682	CallExpression	"AddToList ( it8 , & GetTable ( it8 ) -> HeaderList , Key , NULL , Buffer , WRITE_UNCOOKED )"		706668	0					
ANR	706683	Callee	AddToList		706668	0					
ANR	706684	Identifier	AddToList		706668	0					
ANR	706685	ArgumentList	it8		706668	1					
ANR	706686	Argument	it8		706668	0					
ANR	706687	Identifier	it8		706668	0					
ANR	706688	Argument	& GetTable ( it8 ) -> HeaderList		706668	1					
ANR	706689	UnaryOperationExpression	& GetTable ( it8 ) -> HeaderList		706668	0					
ANR	706690	UnaryOperator	&		706668	0					
ANR	706691	PtrMemberAccess	GetTable ( it8 ) -> HeaderList		706668	1					
ANR	706692	CallExpression	GetTable ( it8 )		706668	0					
ANR	706693	Callee	GetTable		706668	0					
ANR	706694	Identifier	GetTable		706668	0					
ANR	706695	ArgumentList	it8		706668	1					
ANR	706696	Argument	it8		706668	0					
ANR	706697	Identifier	it8		706668	0					
ANR	706698	Identifier	HeaderList		706668	1					
ANR	706699	Argument	Key		706668	2					
ANR	706700	Identifier	Key		706668	0					
ANR	706701	Argument	NULL		706668	3					
ANR	706702	Identifier	NULL		706668	0					
ANR	706703	Argument	Buffer		706668	4					
ANR	706704	Identifier	Buffer		706668	0					
ANR	706705	Argument	WRITE_UNCOOKED		706668	5					
ANR	706706	Identifier	WRITE_UNCOOKED		706668	0					
ANR	706707	Identifier	NULL		706668	1					
ANR	706708	ReturnType	cmsBool CMSEXPORT		706668	1					
ANR	706709	Identifier	cmsIT8SetPropertyUncooked		706668	2					
ANR	706710	ParameterList	"cmsHANDLE hIT8 , const char * Key , const char * Buffer"		706668	3					
ANR	706711	Parameter	cmsHANDLE hIT8	1381:44:40004:40017	706668	0	True				
ANR	706712	ParameterType	cmsHANDLE		706668	0					
ANR	706713	Identifier	hIT8		706668	1					
ANR	706714	Parameter	const char * Key	1381:60:40020:40034	706668	1	True				
ANR	706715	ParameterType	const char *		706668	0					
ANR	706716	Identifier	Key		706668	1					
ANR	706717	Parameter	const char * Buffer	1381:77:40037:40054	706668	2	True				
ANR	706718	ParameterType	const char *		706668	0					
ANR	706719	Identifier	Buffer		706668	1					
ANR	706720	CFGEntryNode	ENTRY		706668		True				
ANR	706721	CFGExitNode	EXIT		706668		True				
ANR	706722	Symbol	Buffer		706668						
ANR	706723	Symbol	GetTable		706668						
ANR	706724	Symbol	NULL		706668						
ANR	706725	Symbol	hIT8		706668						
ANR	706726	Symbol	AddToList		706668						
ANR	706727	Symbol	WRITE_UNCOOKED		706668						
ANR	706728	Symbol	& GetTable ( it8 ) -> HeaderList		706668						
ANR	706729	Symbol	it8		706668						
ANR	706730	Symbol	Key		706668						
ANR	706731	Function	cmsIT8SetPropertyMulti	1388:0:40195:40442							
ANR	706732	FunctionDef	"cmsIT8SetPropertyMulti (cmsHANDLE hIT8 , const char * Key , const char * SubKey , const char * Buffer)"		706731	0					
ANR	706733	CompoundStatement		1389:0:40309:40442	706731	0					
ANR	706734	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	1390:4:40315:40343	706731	0	True				
ANR	706735	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		706731	0					
ANR	706736	IdentifierDeclType	cmsIT8 *		706731	0					
ANR	706737	Identifier	it8		706731	1					
ANR	706738	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		706731	2		=			
ANR	706739	Identifier	it8		706731	0					
ANR	706740	CastExpression	( cmsIT8 * ) hIT8		706731	1					
ANR	706741	CastTarget	cmsIT8 *		706731	0					
ANR	706742	Identifier	hIT8		706731	1					
ANR	706743	ReturnStatement	"return AddToList ( it8 , & GetTable ( it8 ) -> HeaderList , Key , SubKey , Buffer , WRITE_PAIR ) != NULL ;"	1392:4:40350:40440	706731	1	True				
ANR	706744	EqualityExpression	"AddToList ( it8 , & GetTable ( it8 ) -> HeaderList , Key , SubKey , Buffer , WRITE_PAIR ) != NULL"		706731	0		!=			
ANR	706745	CallExpression	"AddToList ( it8 , & GetTable ( it8 ) -> HeaderList , Key , SubKey , Buffer , WRITE_PAIR )"		706731	0					
ANR	706746	Callee	AddToList		706731	0					
ANR	706747	Identifier	AddToList		706731	0					
ANR	706748	ArgumentList	it8		706731	1					
ANR	706749	Argument	it8		706731	0					
ANR	706750	Identifier	it8		706731	0					
ANR	706751	Argument	& GetTable ( it8 ) -> HeaderList		706731	1					
ANR	706752	UnaryOperationExpression	& GetTable ( it8 ) -> HeaderList		706731	0					
ANR	706753	UnaryOperator	&		706731	0					
ANR	706754	PtrMemberAccess	GetTable ( it8 ) -> HeaderList		706731	1					
ANR	706755	CallExpression	GetTable ( it8 )		706731	0					
ANR	706756	Callee	GetTable		706731	0					
ANR	706757	Identifier	GetTable		706731	0					
ANR	706758	ArgumentList	it8		706731	1					
ANR	706759	Argument	it8		706731	0					
ANR	706760	Identifier	it8		706731	0					
ANR	706761	Identifier	HeaderList		706731	1					
ANR	706762	Argument	Key		706731	2					
ANR	706763	Identifier	Key		706731	0					
ANR	706764	Argument	SubKey		706731	3					
ANR	706765	Identifier	SubKey		706731	0					
ANR	706766	Argument	Buffer		706731	4					
ANR	706767	Identifier	Buffer		706731	0					
ANR	706768	Argument	WRITE_PAIR		706731	5					
ANR	706769	Identifier	WRITE_PAIR		706731	0					
ANR	706770	Identifier	NULL		706731	1					
ANR	706771	ReturnType	cmsBool CMSEXPORT		706731	1					
ANR	706772	Identifier	cmsIT8SetPropertyMulti		706731	2					
ANR	706773	ParameterList	"cmsHANDLE hIT8 , const char * Key , const char * SubKey , const char * Buffer"		706731	3					
ANR	706774	Parameter	cmsHANDLE hIT8	1388:41:40236:40249	706731	0	True				
ANR	706775	ParameterType	cmsHANDLE		706731	0					
ANR	706776	Identifier	hIT8		706731	1					
ANR	706777	Parameter	const char * Key	1388:57:40252:40266	706731	1	True				
ANR	706778	ParameterType	const char *		706731	0					
ANR	706779	Identifier	Key		706731	1					
ANR	706780	Parameter	const char * SubKey	1388:74:40269:40286	706731	2	True				
ANR	706781	ParameterType	const char *		706731	0					
ANR	706782	Identifier	SubKey		706731	1					
ANR	706783	Parameter	const char * Buffer	1388:94:40289:40306	706731	3	True				
ANR	706784	ParameterType	const char *		706731	0					
ANR	706785	Identifier	Buffer		706731	1					
ANR	706786	CFGEntryNode	ENTRY		706731		True				
ANR	706787	CFGExitNode	EXIT		706731		True				
ANR	706788	Symbol	Buffer		706731						
ANR	706789	Symbol	GetTable		706731						
ANR	706790	Symbol	NULL		706731						
ANR	706791	Symbol	hIT8		706731						
ANR	706792	Symbol	AddToList		706731						
ANR	706793	Symbol	& GetTable ( it8 ) -> HeaderList		706731						
ANR	706794	Symbol	WRITE_PAIR		706731						
ANR	706795	Symbol	it8		706731						
ANR	706796	Symbol	Key		706731						
ANR	706797	Symbol	SubKey		706731						
ANR	706798	Function	cmsIT8GetProperty	1396:12:40476:40718							
ANR	706799	FunctionDef	"cmsIT8GetProperty (cmsHANDLE hIT8 , const char * Key)"		706798	0					
ANR	706800	CompoundStatement		1397:0:40537:40718	706798	0					
ANR	706801	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	1398:4:40543:40571	706798	0	True				
ANR	706802	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		706798	0					
ANR	706803	IdentifierDeclType	cmsIT8 *		706798	0					
ANR	706804	Identifier	it8		706798	1					
ANR	706805	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		706798	2		=			
ANR	706806	Identifier	it8		706798	0					
ANR	706807	CastExpression	( cmsIT8 * ) hIT8		706798	1					
ANR	706808	CastTarget	cmsIT8 *		706798	0					
ANR	706809	Identifier	hIT8		706798	1					
ANR	706810	IdentifierDeclStatement	KEYVALUE * p ;	1399:4:40577:40588	706798	1	True				
ANR	706811	IdentifierDecl	* p		706798	0					
ANR	706812	IdentifierDeclType	KEYVALUE *		706798	0					
ANR	706813	Identifier	p		706798	1					
ANR	706814	IfStatement	"if ( IsAvailableOnList ( GetTable ( it8 ) -> HeaderList , Key , NULL , & p ) )"		706798	2					
ANR	706815	Condition	"IsAvailableOnList ( GetTable ( it8 ) -> HeaderList , Key , NULL , & p )"	1401:8:40599:40659	706798	0	True				
ANR	706816	CallExpression	"IsAvailableOnList ( GetTable ( it8 ) -> HeaderList , Key , NULL , & p )"		706798	0					
ANR	706817	Callee	IsAvailableOnList		706798	0					
ANR	706818	Identifier	IsAvailableOnList		706798	0					
ANR	706819	ArgumentList	GetTable ( it8 ) -> HeaderList		706798	1					
ANR	706820	Argument	GetTable ( it8 ) -> HeaderList		706798	0					
ANR	706821	PtrMemberAccess	GetTable ( it8 ) -> HeaderList		706798	0					
ANR	706822	CallExpression	GetTable ( it8 )		706798	0					
ANR	706823	Callee	GetTable		706798	0					
ANR	706824	Identifier	GetTable		706798	0					
ANR	706825	ArgumentList	it8		706798	1					
ANR	706826	Argument	it8		706798	0					
ANR	706827	Identifier	it8		706798	0					
ANR	706828	Identifier	HeaderList		706798	1					
ANR	706829	Argument	Key		706798	1					
ANR	706830	Identifier	Key		706798	0					
ANR	706831	Argument	NULL		706798	2					
ANR	706832	Identifier	NULL		706798	0					
ANR	706833	Argument	& p		706798	3					
ANR	706834	UnaryOperationExpression	& p		706798	0					
ANR	706835	UnaryOperator	&		706798	0					
ANR	706836	Identifier	p		706798	1					
ANR	706837	CompoundStatement		6:4:128:128	706798	1					
ANR	706838	ReturnStatement	return p -> Value ;	1403:8:40676:40693	706798	0	True				
ANR	706839	PtrMemberAccess	p -> Value		706798	0					
ANR	706840	Identifier	p		706798	0					
ANR	706841	Identifier	Value		706798	1					
ANR	706842	ReturnStatement	return NULL ;	1405:4:40705:40716	706798	3	True				
ANR	706843	Identifier	NULL		706798	0					
ANR	706844	ReturnType	CMSEXPORT		706798	1					
ANR	706845	Identifier	cmsIT8GetProperty		706798	2					
ANR	706846	ParameterList	"cmsHANDLE hIT8 , const char * Key"		706798	3					
ANR	706847	Parameter	cmsHANDLE hIT8	1396:40:40504:40517	706798	0	True				
ANR	706848	ParameterType	cmsHANDLE		706798	0					
ANR	706849	Identifier	hIT8		706798	1					
ANR	706850	Parameter	const char * Key	1396:56:40520:40534	706798	1	True				
ANR	706851	ParameterType	const char *		706798	0					
ANR	706852	Identifier	Key		706798	1					
ANR	706853	CFGEntryNode	ENTRY		706798		True				
ANR	706854	CFGExitNode	EXIT		706798		True				
ANR	706855	Symbol	p		706798						
ANR	706856	Symbol	GetTable		706798						
ANR	706857	Symbol	GetTable ( it8 ) -> HeaderList		706798						
ANR	706858	Symbol	NULL		706798						
ANR	706859	Symbol	hIT8		706798						
ANR	706860	Symbol	& p		706798						
ANR	706861	Symbol	p -> Value		706798						
ANR	706862	Symbol	* p		706798						
ANR	706863	Symbol	it8		706798						
ANR	706864	Symbol	* GetTable		706798						
ANR	706865	Symbol	IsAvailableOnList		706798						
ANR	706866	Symbol	Key		706798						
ANR	706867	Function	cmsIT8GetPropertyDbl	1409:0:40722:40924							
ANR	706868	FunctionDef	"cmsIT8GetPropertyDbl (cmsHANDLE hIT8 , const char * cProp)"		706867	0					
ANR	706869	CompoundStatement		1410:0:40805:40924	706867	0					
ANR	706870	IdentifierDeclStatement	"const char * v = cmsIT8GetProperty ( hIT8 , cProp ) ;"	1411:4:40811:40857	706867	0	True				
ANR	706871	IdentifierDecl	"* v = cmsIT8GetProperty ( hIT8 , cProp )"		706867	0					
ANR	706872	IdentifierDeclType	const char *		706867	0					
ANR	706873	Identifier	v		706867	1					
ANR	706874	AssignmentExpression	"* v = cmsIT8GetProperty ( hIT8 , cProp )"		706867	2		=			
ANR	706875	Identifier	v		706867	0					
ANR	706876	CallExpression	"cmsIT8GetProperty ( hIT8 , cProp )"		706867	1					
ANR	706877	Callee	cmsIT8GetProperty		706867	0					
ANR	706878	Identifier	cmsIT8GetProperty		706867	0					
ANR	706879	ArgumentList	hIT8		706867	1					
ANR	706880	Argument	hIT8		706867	0					
ANR	706881	Identifier	hIT8		706867	0					
ANR	706882	Argument	cProp		706867	1					
ANR	706883	Identifier	cProp		706867	0					
ANR	706884	IfStatement	if ( v == NULL )		706867	1					
ANR	706885	Condition	v == NULL	1413:8:40868:40876	706867	0	True				
ANR	706886	EqualityExpression	v == NULL		706867	0		==			
ANR	706887	Identifier	v		706867	0					
ANR	706888	Identifier	NULL		706867	1					
ANR	706889	ReturnStatement	return 0.0 ;	1413:19:40879:40889	706867	1	True				
ANR	706890	PrimaryExpression	0.0		706867	0					
ANR	706891	ReturnStatement	return ParseFloatNumber ( v ) ;	1415:4:40896:40922	706867	2	True				
ANR	706892	CallExpression	ParseFloatNumber ( v )		706867	0					
ANR	706893	Callee	ParseFloatNumber		706867	0					
ANR	706894	Identifier	ParseFloatNumber		706867	0					
ANR	706895	ArgumentList	v		706867	1					
ANR	706896	Argument	v		706867	0					
ANR	706897	Identifier	v		706867	0					
ANR	706898	ReturnType	cmsFloat64Number CMSEXPORT		706867	1					
ANR	706899	Identifier	cmsIT8GetPropertyDbl		706867	2					
ANR	706900	ParameterList	"cmsHANDLE hIT8 , const char * cProp"		706867	3					
ANR	706901	Parameter	cmsHANDLE hIT8	1409:48:40770:40783	706867	0	True				
ANR	706902	ParameterType	cmsHANDLE		706867	0					
ANR	706903	Identifier	hIT8		706867	1					
ANR	706904	Parameter	const char * cProp	1409:64:40786:40802	706867	1	True				
ANR	706905	ParameterType	const char *		706867	0					
ANR	706906	Identifier	cProp		706867	1					
ANR	706907	CFGEntryNode	ENTRY		706867		True				
ANR	706908	CFGExitNode	EXIT		706867		True				
ANR	706909	Symbol	cmsIT8GetProperty		706867						
ANR	706910	Symbol	NULL		706867						
ANR	706911	Symbol	ParseFloatNumber		706867						
ANR	706912	Symbol	hIT8		706867						
ANR	706913	Symbol	v		706867						
ANR	706914	Symbol	cProp		706867						
ANR	706915	Function	cmsIT8GetPropertyMulti	1418:12:40939:41204							
ANR	706916	FunctionDef	"cmsIT8GetPropertyMulti (cmsHANDLE hIT8 , const char * Key , const char * SubKey)"		706915	0					
ANR	706917	CompoundStatement		1419:0:41025:41204	706915	0					
ANR	706918	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	1420:4:41031:41059	706915	0	True				
ANR	706919	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		706915	0					
ANR	706920	IdentifierDeclType	cmsIT8 *		706915	0					
ANR	706921	Identifier	it8		706915	1					
ANR	706922	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		706915	2		=			
ANR	706923	Identifier	it8		706915	0					
ANR	706924	CastExpression	( cmsIT8 * ) hIT8		706915	1					
ANR	706925	CastTarget	cmsIT8 *		706915	0					
ANR	706926	Identifier	hIT8		706915	1					
ANR	706927	IdentifierDeclStatement	KEYVALUE * p ;	1421:4:41065:41076	706915	1	True				
ANR	706928	IdentifierDecl	* p		706915	0					
ANR	706929	IdentifierDeclType	KEYVALUE *		706915	0					
ANR	706930	Identifier	p		706915	1					
ANR	706931	IfStatement	"if ( IsAvailableOnList ( GetTable ( it8 ) -> HeaderList , Key , SubKey , & p ) )"		706915	2					
ANR	706932	Condition	"IsAvailableOnList ( GetTable ( it8 ) -> HeaderList , Key , SubKey , & p )"	1423:8:41087:41149	706915	0	True				
ANR	706933	CallExpression	"IsAvailableOnList ( GetTable ( it8 ) -> HeaderList , Key , SubKey , & p )"		706915	0					
ANR	706934	Callee	IsAvailableOnList		706915	0					
ANR	706935	Identifier	IsAvailableOnList		706915	0					
ANR	706936	ArgumentList	GetTable ( it8 ) -> HeaderList		706915	1					
ANR	706937	Argument	GetTable ( it8 ) -> HeaderList		706915	0					
ANR	706938	PtrMemberAccess	GetTable ( it8 ) -> HeaderList		706915	0					
ANR	706939	CallExpression	GetTable ( it8 )		706915	0					
ANR	706940	Callee	GetTable		706915	0					
ANR	706941	Identifier	GetTable		706915	0					
ANR	706942	ArgumentList	it8		706915	1					
ANR	706943	Argument	it8		706915	0					
ANR	706944	Identifier	it8		706915	0					
ANR	706945	Identifier	HeaderList		706915	1					
ANR	706946	Argument	Key		706915	1					
ANR	706947	Identifier	Key		706915	0					
ANR	706948	Argument	SubKey		706915	2					
ANR	706949	Identifier	SubKey		706915	0					
ANR	706950	Argument	& p		706915	3					
ANR	706951	UnaryOperationExpression	& p		706915	0					
ANR	706952	UnaryOperator	&		706915	0					
ANR	706953	Identifier	p		706915	1					
ANR	706954	CompoundStatement		5:73:126:126	706915	1					
ANR	706955	ReturnStatement	return p -> Value ;	1424:8:41162:41179	706915	0	True				
ANR	706956	PtrMemberAccess	p -> Value		706915	0					
ANR	706957	Identifier	p		706915	0					
ANR	706958	Identifier	Value		706915	1					
ANR	706959	ReturnStatement	return NULL ;	1426:4:41191:41202	706915	3	True				
ANR	706960	Identifier	NULL		706915	0					
ANR	706961	ReturnType	CMSEXPORT		706915	1					
ANR	706962	Identifier	cmsIT8GetPropertyMulti		706915	2					
ANR	706963	ParameterList	"cmsHANDLE hIT8 , const char * Key , const char * SubKey"		706915	3					
ANR	706964	Parameter	cmsHANDLE hIT8	1418:45:40972:40985	706915	0	True				
ANR	706965	ParameterType	cmsHANDLE		706915	0					
ANR	706966	Identifier	hIT8		706915	1					
ANR	706967	Parameter	const char * Key	1418:61:40988:41002	706915	1	True				
ANR	706968	ParameterType	const char *		706915	0					
ANR	706969	Identifier	Key		706915	1					
ANR	706970	Parameter	const char * SubKey	1418:78:41005:41022	706915	2	True				
ANR	706971	ParameterType	const char *		706915	0					
ANR	706972	Identifier	SubKey		706915	1					
ANR	706973	CFGEntryNode	ENTRY		706915		True				
ANR	706974	CFGExitNode	EXIT		706915		True				
ANR	706975	Symbol	GetTable ( it8 ) -> HeaderList		706915						
ANR	706976	Symbol	NULL		706915						
ANR	706977	Symbol	it8		706915						
ANR	706978	Symbol	* GetTable		706915						
ANR	706979	Symbol	p		706915						
ANR	706980	Symbol	GetTable		706915						
ANR	706981	Symbol	hIT8		706915						
ANR	706982	Symbol	& p		706915						
ANR	706983	Symbol	p -> Value		706915						
ANR	706984	Symbol	* p		706915						
ANR	706985	Symbol	IsAvailableOnList		706915						
ANR	706986	Symbol	Key		706915						
ANR	706987	Symbol	SubKey		706915						
ANR	706988	Function	AllocateDataFormat	1432:0:41287:41864							
ANR	706989	FunctionDef	AllocateDataFormat (cmsIT8 * it8)		706988	0					
ANR	706990	CompoundStatement		1434:0:41331:41864	706988	0					
ANR	706991	IdentifierDeclStatement	TABLE * t = GetTable ( it8 ) ;	1435:4:41337:41361	706988	0	True				
ANR	706992	IdentifierDecl	* t = GetTable ( it8 )		706988	0					
ANR	706993	IdentifierDeclType	TABLE *		706988	0					
ANR	706994	Identifier	t		706988	1					
ANR	706995	AssignmentExpression	* t = GetTable ( it8 )		706988	2		=			
ANR	706996	Identifier	t		706988	0					
ANR	706997	CallExpression	GetTable ( it8 )		706988	1					
ANR	706998	Callee	GetTable		706988	0					
ANR	706999	Identifier	GetTable		706988	0					
ANR	707000	ArgumentList	it8		706988	1					
ANR	707001	Argument	it8		706988	0					
ANR	707002	Identifier	it8		706988	0					
ANR	707003	IfStatement	if ( t -> DataFormat )		706988	1					
ANR	707004	Condition	t -> DataFormat	1437:8:41372:41386	706988	0	True				
ANR	707005	PtrMemberAccess	t -> DataFormat		706988	0					
ANR	707006	Identifier	t		706988	0					
ANR	707007	Identifier	DataFormat		706988	1					
ANR	707008	ReturnStatement	return ;	1437:25:41389:41395	706988	1	True				
ANR	707009	ExpressionStatement	"t -> nSamples = ( int ) cmsIT8GetPropertyDbl ( it8 , ""NUMBER_OF_FIELDS"" )"	1439:4:41426:41494	706988	2	True				
ANR	707010	AssignmentExpression	"t -> nSamples = ( int ) cmsIT8GetPropertyDbl ( it8 , ""NUMBER_OF_FIELDS"" )"		706988	0		=			
ANR	707011	PtrMemberAccess	t -> nSamples		706988	0					
ANR	707012	Identifier	t		706988	0					
ANR	707013	Identifier	nSamples		706988	1					
ANR	707014	CastExpression	"( int ) cmsIT8GetPropertyDbl ( it8 , ""NUMBER_OF_FIELDS"" )"		706988	1					
ANR	707015	CastTarget	int		706988	0					
ANR	707016	CallExpression	"cmsIT8GetPropertyDbl ( it8 , ""NUMBER_OF_FIELDS"" )"		706988	1					
ANR	707017	Callee	cmsIT8GetPropertyDbl		706988	0					
ANR	707018	Identifier	cmsIT8GetPropertyDbl		706988	0					
ANR	707019	ArgumentList	it8		706988	1					
ANR	707020	Argument	it8		706988	0					
ANR	707021	Identifier	it8		706988	0					
ANR	707022	Argument	"""NUMBER_OF_FIELDS"""		706988	1					
ANR	707023	PrimaryExpression	"""NUMBER_OF_FIELDS"""		706988	0					
ANR	707024	IfStatement	if ( t -> nSamples <= 0 )		706988	3					
ANR	707025	Condition	t -> nSamples <= 0	1441:8:41505:41522	706988	0	True				
ANR	707026	RelationalExpression	t -> nSamples <= 0		706988	0		<=			
ANR	707027	PtrMemberAccess	t -> nSamples		706988	0					
ANR	707028	Identifier	t		706988	0					
ANR	707029	Identifier	nSamples		706988	1					
ANR	707030	PrimaryExpression	0		706988	1					
ANR	707031	CompoundStatement		8:28:193:193	706988	1					
ANR	707032	ExpressionStatement	"SynError ( it8 , ""AllocateDataFormat: Unknown NUMBER_OF_FIELDS"" )"	1443:8:41536:41597	706988	0	True				
ANR	707033	CallExpression	"SynError ( it8 , ""AllocateDataFormat: Unknown NUMBER_OF_FIELDS"" )"		706988	0					
ANR	707034	Callee	SynError		706988	0					
ANR	707035	Identifier	SynError		706988	0					
ANR	707036	ArgumentList	it8		706988	1					
ANR	707037	Argument	it8		706988	0					
ANR	707038	Identifier	it8		706988	0					
ANR	707039	Argument	"""AllocateDataFormat: Unknown NUMBER_OF_FIELDS"""		706988	1					
ANR	707040	PrimaryExpression	"""AllocateDataFormat: Unknown NUMBER_OF_FIELDS"""		706988	0					
ANR	707041	ExpressionStatement	t -> nSamples = 10	1444:8:41607:41625	706988	1	True				
ANR	707042	AssignmentExpression	t -> nSamples = 10		706988	0		=			
ANR	707043	PtrMemberAccess	t -> nSamples		706988	0					
ANR	707044	Identifier	t		706988	0					
ANR	707045	Identifier	nSamples		706988	1					
ANR	707046	PrimaryExpression	10		706988	1					
ANR	707047	ExpressionStatement	"t -> DataFormat = ( char * * ) AllocChunk ( it8 , ( ( cmsUInt32Number ) t -> nSamples + 1 ) * sizeof ( char * ) )"	1447:4:41642:41739	706988	4	True				
ANR	707048	AssignmentExpression	"t -> DataFormat = ( char * * ) AllocChunk ( it8 , ( ( cmsUInt32Number ) t -> nSamples + 1 ) * sizeof ( char * ) )"		706988	0		=			
ANR	707049	PtrMemberAccess	t -> DataFormat		706988	0					
ANR	707050	Identifier	t		706988	0					
ANR	707051	Identifier	DataFormat		706988	1					
ANR	707052	CastExpression	"( char * * ) AllocChunk ( it8 , ( ( cmsUInt32Number ) t -> nSamples + 1 ) * sizeof ( char * ) )"		706988	1					
ANR	707053	CastTarget	char * *		706988	0					
ANR	707054	CallExpression	"AllocChunk ( it8 , ( ( cmsUInt32Number ) t -> nSamples + 1 ) * sizeof ( char * ) )"		706988	1					
ANR	707055	Callee	AllocChunk		706988	0					
ANR	707056	Identifier	AllocChunk		706988	0					
ANR	707057	ArgumentList	it8		706988	1					
ANR	707058	Argument	it8		706988	0					
ANR	707059	Identifier	it8		706988	0					
ANR	707060	Argument	( ( cmsUInt32Number ) t -> nSamples + 1 ) * sizeof ( char * )		706988	1					
ANR	707061	MultiplicativeExpression	( ( cmsUInt32Number ) t -> nSamples + 1 ) * sizeof ( char * )		706988	0		*			
ANR	707062	AdditiveExpression	( cmsUInt32Number ) t -> nSamples + 1		706988	0		+			
ANR	707063	CastExpression	( cmsUInt32Number ) t -> nSamples		706988	0					
ANR	707064	CastTarget	cmsUInt32Number		706988	0					
ANR	707065	PtrMemberAccess	t -> nSamples		706988	1					
ANR	707066	Identifier	t		706988	0					
ANR	707067	Identifier	nSamples		706988	1					
ANR	707068	PrimaryExpression	1		706988	1					
ANR	707069	SizeofExpression	sizeof ( char * )		706988	1					
ANR	707070	Sizeof	sizeof		706988	0					
ANR	707071	SizeofOperand	char *		706988	1					
ANR	707072	IfStatement	if ( t -> DataFormat == NULL )		706988	5					
ANR	707073	Condition	t -> DataFormat == NULL	1448:8:41749:41769	706988	0	True				
ANR	707074	EqualityExpression	t -> DataFormat == NULL		706988	0		==			
ANR	707075	PtrMemberAccess	t -> DataFormat		706988	0					
ANR	707076	Identifier	t		706988	0					
ANR	707077	Identifier	DataFormat		706988	1					
ANR	707078	Identifier	NULL		706988	1					
ANR	707079	CompoundStatement		15:31:440:440	706988	1					
ANR	707080	ExpressionStatement	"SynError ( it8 , ""AllocateDataFormat: Unable to allocate dataFormat array"" )"	1450:8:41783:41855	706988	0	True				
ANR	707081	CallExpression	"SynError ( it8 , ""AllocateDataFormat: Unable to allocate dataFormat array"" )"		706988	0					
ANR	707082	Callee	SynError		706988	0					
ANR	707083	Identifier	SynError		706988	0					
ANR	707084	ArgumentList	it8		706988	1					
ANR	707085	Argument	it8		706988	0					
ANR	707086	Identifier	it8		706988	0					
ANR	707087	Argument	"""AllocateDataFormat: Unable to allocate dataFormat array"""		706988	1					
ANR	707088	PrimaryExpression	"""AllocateDataFormat: Unable to allocate dataFormat array"""		706988	0					
ANR	707089	ReturnType	static void		706988	1					
ANR	707090	Identifier	AllocateDataFormat		706988	2					
ANR	707091	ParameterList	cmsIT8 * it8		706988	3					
ANR	707092	Parameter	cmsIT8 * it8	1433:24:41318:41328	706988	0	True				
ANR	707093	ParameterType	cmsIT8 *		706988	0					
ANR	707094	Identifier	it8		706988	1					
ANR	707095	CFGEntryNode	ENTRY		706988		True				
ANR	707096	CFGExitNode	EXIT		706988		True				
ANR	707097	Symbol	GetTable		706988						
ANR	707098	Symbol	AllocChunk		706988						
ANR	707099	Symbol	t -> nSamples		706988						
ANR	707100	Symbol	NULL		706988						
ANR	707101	Symbol	t		706988						
ANR	707102	Symbol	t -> DataFormat		706988						
ANR	707103	Symbol	cmsIT8GetPropertyDbl		706988						
ANR	707104	Symbol	it8		706988						
ANR	707105	Symbol	* t		706988						
ANR	707106	Function	GetDataFormat	1455:0:41867:42027							
ANR	707107	FunctionDef	"GetDataFormat (cmsIT8 * it8 , int n)"		707106	0					
ANR	707108	CompoundStatement		1457:0:41920:42027	707106	0					
ANR	707109	IdentifierDeclStatement	TABLE * t = GetTable ( it8 ) ;	1458:4:41926:41950	707106	0	True				
ANR	707110	IdentifierDecl	* t = GetTable ( it8 )		707106	0					
ANR	707111	IdentifierDeclType	TABLE *		707106	0					
ANR	707112	Identifier	t		707106	1					
ANR	707113	AssignmentExpression	* t = GetTable ( it8 )		707106	2		=			
ANR	707114	Identifier	t		707106	0					
ANR	707115	CallExpression	GetTable ( it8 )		707106	1					
ANR	707116	Callee	GetTable		707106	0					
ANR	707117	Identifier	GetTable		707106	0					
ANR	707118	ArgumentList	it8		707106	1					
ANR	707119	Argument	it8		707106	0					
ANR	707120	Identifier	it8		707106	0					
ANR	707121	IfStatement	if ( t -> DataFormat )		707106	1					
ANR	707122	Condition	t -> DataFormat	1460:8:41961:41973	707106	0	True				
ANR	707123	PtrMemberAccess	t -> DataFormat		707106	0					
ANR	707124	Identifier	t		707106	0					
ANR	707125	Identifier	DataFormat		707106	1					
ANR	707126	ReturnStatement	return t -> DataFormat [ n ] ;	1461:8:41984:42007	707106	1	True				
ANR	707127	ArrayIndexing	t -> DataFormat [ n ]		707106	0					
ANR	707128	PtrMemberAccess	t -> DataFormat		707106	0					
ANR	707129	Identifier	t		707106	0					
ANR	707130	Identifier	DataFormat		707106	1					
ANR	707131	Identifier	n		707106	1					
ANR	707132	ReturnStatement	return NULL ;	1463:4:42014:42025	707106	2	True				
ANR	707133	Identifier	NULL		707106	0					
ANR	707134	ReturnType	static const char *		707106	1					
ANR	707135	Identifier	GetDataFormat		707106	2					
ANR	707136	ParameterList	"cmsIT8 * it8 , int n"		707106	3					
ANR	707137	Parameter	cmsIT8 * it8	1456:26:41900:41910	707106	0	True				
ANR	707138	ParameterType	cmsIT8 *		707106	0					
ANR	707139	Identifier	it8		707106	1					
ANR	707140	Parameter	int n	1456:39:41913:41917	707106	1	True				
ANR	707141	ParameterType	int		707106	0					
ANR	707142	Identifier	n		707106	1					
ANR	707143	CFGEntryNode	ENTRY		707106		True				
ANR	707144	CFGExitNode	EXIT		707106		True				
ANR	707145	Symbol	GetTable		707106						
ANR	707146	Symbol	* t -> DataFormat		707106						
ANR	707147	Symbol	NULL		707106						
ANR	707148	Symbol	t		707106						
ANR	707149	Symbol	t -> DataFormat		707106						
ANR	707150	Symbol	* * t		707106						
ANR	707151	Symbol	* n		707106						
ANR	707152	Symbol	it8		707106						
ANR	707153	Symbol	n		707106						
ANR	707154	Symbol	* t		707106						
ANR	707155	Function	SetDataFormat	1466:0:42030:42409							
ANR	707156	FunctionDef	"SetDataFormat (cmsIT8 * it8 , int n , const char * label)"		707155	0					
ANR	707157	CompoundStatement		1468:0:42098:42409	707155	0					
ANR	707158	IdentifierDeclStatement	TABLE * t = GetTable ( it8 ) ;	1469:4:42104:42128	707155	0	True				
ANR	707159	IdentifierDecl	* t = GetTable ( it8 )		707155	0					
ANR	707160	IdentifierDeclType	TABLE *		707155	0					
ANR	707161	Identifier	t		707155	1					
ANR	707162	AssignmentExpression	* t = GetTable ( it8 )		707155	2		=			
ANR	707163	Identifier	t		707155	0					
ANR	707164	CallExpression	GetTable ( it8 )		707155	1					
ANR	707165	Callee	GetTable		707155	0					
ANR	707166	Identifier	GetTable		707155	0					
ANR	707167	ArgumentList	it8		707155	1					
ANR	707168	Argument	it8		707155	0					
ANR	707169	Identifier	it8		707155	0					
ANR	707170	IfStatement	if ( ! t -> DataFormat )		707155	1					
ANR	707171	Condition	! t -> DataFormat	1471:8:42139:42152	707155	0	True				
ANR	707172	UnaryOperationExpression	! t -> DataFormat		707155	0					
ANR	707173	UnaryOperator	!		707155	0					
ANR	707174	PtrMemberAccess	t -> DataFormat		707155	1					
ANR	707175	Identifier	t		707155	0					
ANR	707176	Identifier	DataFormat		707155	1					
ANR	707177	ExpressionStatement	AllocateDataFormat ( it8 )	1472:8:42163:42186	707155	1	True				
ANR	707178	CallExpression	AllocateDataFormat ( it8 )		707155	0					
ANR	707179	Callee	AllocateDataFormat		707155	0					
ANR	707180	Identifier	AllocateDataFormat		707155	0					
ANR	707181	ArgumentList	it8		707155	1					
ANR	707182	Argument	it8		707155	0					
ANR	707183	Identifier	it8		707155	0					
ANR	707184	IfStatement	if ( n > t -> nSamples )		707155	2					
ANR	707185	Condition	n > t -> nSamples	1474:8:42197:42213	707155	0	True				
ANR	707186	RelationalExpression	n > t -> nSamples		707155	0		>			
ANR	707187	Identifier	n		707155	0					
ANR	707188	PtrMemberAccess	t -> nSamples		707155	1					
ANR	707189	Identifier	t		707155	0					
ANR	707190	Identifier	nSamples		707155	1					
ANR	707191	CompoundStatement		7:27:117:117	707155	1					
ANR	707192	ExpressionStatement	"SynError ( it8 , ""More than NUMBER_OF_FIELDS fields."" )"	1475:8:42226:42277	707155	0	True				
ANR	707193	CallExpression	"SynError ( it8 , ""More than NUMBER_OF_FIELDS fields."" )"		707155	0					
ANR	707194	Callee	SynError		707155	0					
ANR	707195	Identifier	SynError		707155	0					
ANR	707196	ArgumentList	it8		707155	1					
ANR	707197	Argument	it8		707155	0					
ANR	707198	Identifier	it8		707155	0					
ANR	707199	Argument	"""More than NUMBER_OF_FIELDS fields."""		707155	1					
ANR	707200	PrimaryExpression	"""More than NUMBER_OF_FIELDS fields."""		707155	0					
ANR	707201	ReturnStatement	return FALSE ;	1476:8:42287:42299	707155	1	True				
ANR	707202	Identifier	FALSE		707155	0					
ANR	707203	IfStatement	if ( t -> DataFormat )		707155	3					
ANR	707204	Condition	t -> DataFormat	1479:8:42316:42328	707155	0	True				
ANR	707205	PtrMemberAccess	t -> DataFormat		707155	0					
ANR	707206	Identifier	t		707155	0					
ANR	707207	Identifier	DataFormat		707155	1					
ANR	707208	CompoundStatement		12:23:232:232	707155	1					
ANR	707209	ExpressionStatement	"t -> DataFormat [ n ] = AllocString ( it8 , label )"	1480:8:42341:42383	707155	0	True				
ANR	707210	AssignmentExpression	"t -> DataFormat [ n ] = AllocString ( it8 , label )"		707155	0		=			
ANR	707211	ArrayIndexing	t -> DataFormat [ n ]		707155	0					
ANR	707212	PtrMemberAccess	t -> DataFormat		707155	0					
ANR	707213	Identifier	t		707155	0					
ANR	707214	Identifier	DataFormat		707155	1					
ANR	707215	Identifier	n		707155	1					
ANR	707216	CallExpression	"AllocString ( it8 , label )"		707155	1					
ANR	707217	Callee	AllocString		707155	0					
ANR	707218	Identifier	AllocString		707155	0					
ANR	707219	ArgumentList	it8		707155	1					
ANR	707220	Argument	it8		707155	0					
ANR	707221	Identifier	it8		707155	0					
ANR	707222	Argument	label		707155	1					
ANR	707223	Identifier	label		707155	0					
ANR	707224	ReturnStatement	return TRUE ;	1483:4:42396:42407	707155	4	True				
ANR	707225	Identifier	TRUE		707155	0					
ANR	707226	ReturnType	static cmsBool		707155	1					
ANR	707227	Identifier	SetDataFormat		707155	2					
ANR	707228	ParameterList	"cmsIT8 * it8 , int n , const char * label"		707155	3					
ANR	707229	Parameter	cmsIT8 * it8	1467:22:42059:42069	707155	0	True				
ANR	707230	ParameterType	cmsIT8 *		707155	0					
ANR	707231	Identifier	it8		707155	1					
ANR	707232	Parameter	int n	1467:35:42072:42076	707155	1	True				
ANR	707233	ParameterType	int		707155	0					
ANR	707234	Identifier	n		707155	1					
ANR	707235	Parameter	const char * label	1467:42:42079:42095	707155	2	True				
ANR	707236	ParameterType	const char *		707155	0					
ANR	707237	Identifier	label		707155	1					
ANR	707238	CFGEntryNode	ENTRY		707155		True				
ANR	707239	CFGExitNode	EXIT		707155		True				
ANR	707240	Symbol	t -> nSamples		707155						
ANR	707241	Symbol	t -> DataFormat		707155						
ANR	707242	Symbol	TRUE		707155						
ANR	707243	Symbol	label		707155						
ANR	707244	Symbol	it8		707155						
ANR	707245	Symbol	n		707155						
ANR	707246	Symbol	GetTable		707155						
ANR	707247	Symbol	* t -> DataFormat		707155						
ANR	707248	Symbol	t		707155						
ANR	707249	Symbol	* * t		707155						
ANR	707250	Symbol	AllocString		707155						
ANR	707251	Symbol	* n		707155						
ANR	707252	Symbol	FALSE		707155						
ANR	707253	Symbol	* t		707155						
ANR	707254	Function	cmsIT8SetDataFormat	1487:0:42413:42575							
ANR	707255	FunctionDef	"cmsIT8SetDataFormat (cmsHANDLE h , int n , const char * Sample)"		707254	0					
ANR	707256	CompoundStatement		1488:0:42492:42575	707254	0					
ANR	707257	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) h ;	1489:8:42502:42527	707254	0	True				
ANR	707258	IdentifierDecl	* it8 = ( cmsIT8 * ) h		707254	0					
ANR	707259	IdentifierDeclType	cmsIT8 *		707254	0					
ANR	707260	Identifier	it8		707254	1					
ANR	707261	AssignmentExpression	* it8 = ( cmsIT8 * ) h		707254	2		=			
ANR	707262	Identifier	it8		707254	0					
ANR	707263	CastExpression	( cmsIT8 * ) h		707254	1					
ANR	707264	CastTarget	cmsIT8 *		707254	0					
ANR	707265	Identifier	h		707254	1					
ANR	707266	ReturnStatement	"return SetDataFormat ( it8 , n , Sample ) ;"	1490:8:42537:42573	707254	1	True				
ANR	707267	CallExpression	"SetDataFormat ( it8 , n , Sample )"		707254	0					
ANR	707268	Callee	SetDataFormat		707254	0					
ANR	707269	Identifier	SetDataFormat		707254	0					
ANR	707270	ArgumentList	it8		707254	1					
ANR	707271	Argument	it8		707254	0					
ANR	707272	Identifier	it8		707254	0					
ANR	707273	Argument	n		707254	1					
ANR	707274	Identifier	n		707254	0					
ANR	707275	Argument	Sample		707254	2					
ANR	707276	Identifier	Sample		707254	0					
ANR	707277	ReturnType	cmsBool CMSEXPORT		707254	1					
ANR	707278	Identifier	cmsIT8SetDataFormat		707254	2					
ANR	707279	ParameterList	"cmsHANDLE h , int n , const char * Sample"		707254	3					
ANR	707280	Parameter	cmsHANDLE h	1487:38:42451:42462	707254	0	True				
ANR	707281	ParameterType	cmsHANDLE		707254	0					
ANR	707282	Identifier	h		707254	1					
ANR	707283	Parameter	int n	1487:52:42465:42469	707254	1	True				
ANR	707284	ParameterType	int		707254	0					
ANR	707285	Identifier	n		707254	1					
ANR	707286	Parameter	const char * Sample	1487:59:42472:42489	707254	2	True				
ANR	707287	ParameterType	const char *		707254	0					
ANR	707288	Identifier	Sample		707254	1					
ANR	707289	CFGEntryNode	ENTRY		707254		True				
ANR	707290	CFGExitNode	EXIT		707254		True				
ANR	707291	Symbol	Sample		707254						
ANR	707292	Symbol	h		707254						
ANR	707293	Symbol	it8		707254						
ANR	707294	Symbol	n		707254						
ANR	707295	Symbol	SetDataFormat		707254						
ANR	707296	Function	AllocateDataSet	1493:0:42578:43085							
ANR	707297	FunctionDef	AllocateDataSet (cmsIT8 * it8)		707296	0					
ANR	707298	CompoundStatement		1495:0:42619:43085	707296	0					
ANR	707299	IdentifierDeclStatement	TABLE * t = GetTable ( it8 ) ;	1496:4:42625:42649	707296	0	True				
ANR	707300	IdentifierDecl	* t = GetTable ( it8 )		707296	0					
ANR	707301	IdentifierDeclType	TABLE *		707296	0					
ANR	707302	Identifier	t		707296	1					
ANR	707303	AssignmentExpression	* t = GetTable ( it8 )		707296	2		=			
ANR	707304	Identifier	t		707296	0					
ANR	707305	CallExpression	GetTable ( it8 )		707296	1					
ANR	707306	Callee	GetTable		707296	0					
ANR	707307	Identifier	GetTable		707296	0					
ANR	707308	ArgumentList	it8		707296	1					
ANR	707309	Argument	it8		707296	0					
ANR	707310	Identifier	it8		707296	0					
ANR	707311	IfStatement	if ( t -> Data )		707296	1					
ANR	707312	Condition	t -> Data	1498:8:42660:42668	707296	0	True				
ANR	707313	PtrMemberAccess	t -> Data		707296	0					
ANR	707314	Identifier	t		707296	0					
ANR	707315	Identifier	Data		707296	1					
ANR	707316	ReturnStatement	return ;	1498:19:42671:42677	707296	1	True				
ANR	707317	ExpressionStatement	"t -> nSamples = atoi ( cmsIT8GetProperty ( it8 , ""NUMBER_OF_FIELDS"" ) )"	1500:4:42708:42773	707296	2	True				
ANR	707318	AssignmentExpression	"t -> nSamples = atoi ( cmsIT8GetProperty ( it8 , ""NUMBER_OF_FIELDS"" ) )"		707296	0		=			
ANR	707319	PtrMemberAccess	t -> nSamples		707296	0					
ANR	707320	Identifier	t		707296	0					
ANR	707321	Identifier	nSamples		707296	1					
ANR	707322	CallExpression	"atoi ( cmsIT8GetProperty ( it8 , ""NUMBER_OF_FIELDS"" ) )"		707296	1					
ANR	707323	Callee	atoi		707296	0					
ANR	707324	Identifier	atoi		707296	0					
ANR	707325	ArgumentList	"cmsIT8GetProperty ( it8 , ""NUMBER_OF_FIELDS"" )"		707296	1					
ANR	707326	Argument	"cmsIT8GetProperty ( it8 , ""NUMBER_OF_FIELDS"" )"		707296	0					
ANR	707327	CallExpression	"cmsIT8GetProperty ( it8 , ""NUMBER_OF_FIELDS"" )"		707296	0					
ANR	707328	Callee	cmsIT8GetProperty		707296	0					
ANR	707329	Identifier	cmsIT8GetProperty		707296	0					
ANR	707330	ArgumentList	it8		707296	1					
ANR	707331	Argument	it8		707296	0					
ANR	707332	Identifier	it8		707296	0					
ANR	707333	Argument	"""NUMBER_OF_FIELDS"""		707296	1					
ANR	707334	PrimaryExpression	"""NUMBER_OF_FIELDS"""		707296	0					
ANR	707335	ExpressionStatement	"t -> nPatches = atoi ( cmsIT8GetProperty ( it8 , ""NUMBER_OF_SETS"" ) )"	1501:4:42779:42842	707296	3	True				
ANR	707336	AssignmentExpression	"t -> nPatches = atoi ( cmsIT8GetProperty ( it8 , ""NUMBER_OF_SETS"" ) )"		707296	0		=			
ANR	707337	PtrMemberAccess	t -> nPatches		707296	0					
ANR	707338	Identifier	t		707296	0					
ANR	707339	Identifier	nPatches		707296	1					
ANR	707340	CallExpression	"atoi ( cmsIT8GetProperty ( it8 , ""NUMBER_OF_SETS"" ) )"		707296	1					
ANR	707341	Callee	atoi		707296	0					
ANR	707342	Identifier	atoi		707296	0					
ANR	707343	ArgumentList	"cmsIT8GetProperty ( it8 , ""NUMBER_OF_SETS"" )"		707296	1					
ANR	707344	Argument	"cmsIT8GetProperty ( it8 , ""NUMBER_OF_SETS"" )"		707296	0					
ANR	707345	CallExpression	"cmsIT8GetProperty ( it8 , ""NUMBER_OF_SETS"" )"		707296	0					
ANR	707346	Callee	cmsIT8GetProperty		707296	0					
ANR	707347	Identifier	cmsIT8GetProperty		707296	0					
ANR	707348	ArgumentList	it8		707296	1					
ANR	707349	Argument	it8		707296	0					
ANR	707350	Identifier	it8		707296	0					
ANR	707351	Argument	"""NUMBER_OF_SETS"""		707296	1					
ANR	707352	PrimaryExpression	"""NUMBER_OF_SETS"""		707296	0					
ANR	707353	ExpressionStatement	"t -> Data = ( char * * ) AllocChunk ( it8 , ( ( cmsUInt32Number ) t -> nSamples + 1 ) * ( ( cmsUInt32Number ) t -> nPatches + 1 ) * sizeof ( char * ) )"	1503:4:42849:42975	707296	4	True				
ANR	707354	AssignmentExpression	"t -> Data = ( char * * ) AllocChunk ( it8 , ( ( cmsUInt32Number ) t -> nSamples + 1 ) * ( ( cmsUInt32Number ) t -> nPatches + 1 ) * sizeof ( char * ) )"		707296	0		=			
ANR	707355	PtrMemberAccess	t -> Data		707296	0					
ANR	707356	Identifier	t		707296	0					
ANR	707357	Identifier	Data		707296	1					
ANR	707358	CastExpression	"( char * * ) AllocChunk ( it8 , ( ( cmsUInt32Number ) t -> nSamples + 1 ) * ( ( cmsUInt32Number ) t -> nPatches + 1 ) * sizeof ( char * ) )"		707296	1					
ANR	707359	CastTarget	char * *		707296	0					
ANR	707360	CallExpression	"AllocChunk ( it8 , ( ( cmsUInt32Number ) t -> nSamples + 1 ) * ( ( cmsUInt32Number ) t -> nPatches + 1 ) * sizeof ( char * ) )"		707296	1					
ANR	707361	Callee	AllocChunk		707296	0					
ANR	707362	Identifier	AllocChunk		707296	0					
ANR	707363	ArgumentList	it8		707296	1					
ANR	707364	Argument	it8		707296	0					
ANR	707365	Identifier	it8		707296	0					
ANR	707366	Argument	( ( cmsUInt32Number ) t -> nSamples + 1 ) * ( ( cmsUInt32Number ) t -> nPatches + 1 ) * sizeof ( char * )		707296	1					
ANR	707367	MultiplicativeExpression	( ( cmsUInt32Number ) t -> nSamples + 1 ) * ( ( cmsUInt32Number ) t -> nPatches + 1 ) * sizeof ( char * )		707296	0		*			
ANR	707368	AdditiveExpression	( cmsUInt32Number ) t -> nSamples + 1		707296	0		+			
ANR	707369	CastExpression	( cmsUInt32Number ) t -> nSamples		707296	0					
ANR	707370	CastTarget	cmsUInt32Number		707296	0					
ANR	707371	PtrMemberAccess	t -> nSamples		707296	1					
ANR	707372	Identifier	t		707296	0					
ANR	707373	Identifier	nSamples		707296	1					
ANR	707374	PrimaryExpression	1		707296	1					
ANR	707375	MultiplicativeExpression	( ( cmsUInt32Number ) t -> nPatches + 1 ) * sizeof ( char * )		707296	1		*			
ANR	707376	AdditiveExpression	( cmsUInt32Number ) t -> nPatches + 1		707296	0		+			
ANR	707377	CastExpression	( cmsUInt32Number ) t -> nPatches		707296	0					
ANR	707378	CastTarget	cmsUInt32Number		707296	0					
ANR	707379	PtrMemberAccess	t -> nPatches		707296	1					
ANR	707380	Identifier	t		707296	0					
ANR	707381	Identifier	nPatches		707296	1					
ANR	707382	PrimaryExpression	1		707296	1					
ANR	707383	SizeofExpression	sizeof ( char * )		707296	1					
ANR	707384	Sizeof	sizeof		707296	0					
ANR	707385	SizeofOperand	char *		707296	1					
ANR	707386	IfStatement	if ( t -> Data == NULL )		707296	5					
ANR	707387	Condition	t -> Data == NULL	1504:8:42985:42999	707296	0	True				
ANR	707388	EqualityExpression	t -> Data == NULL		707296	0		==			
ANR	707389	PtrMemberAccess	t -> Data		707296	0					
ANR	707390	Identifier	t		707296	0					
ANR	707391	Identifier	Data		707296	1					
ANR	707392	Identifier	NULL		707296	1					
ANR	707393	CompoundStatement		10:25:382:382	707296	1					
ANR	707394	ExpressionStatement	"SynError ( it8 , ""AllocateDataSet: Unable to allocate data array"" )"	1506:8:43013:43076	707296	0	True				
ANR	707395	CallExpression	"SynError ( it8 , ""AllocateDataSet: Unable to allocate data array"" )"		707296	0					
ANR	707396	Callee	SynError		707296	0					
ANR	707397	Identifier	SynError		707296	0					
ANR	707398	ArgumentList	it8		707296	1					
ANR	707399	Argument	it8		707296	0					
ANR	707400	Identifier	it8		707296	0					
ANR	707401	Argument	"""AllocateDataSet: Unable to allocate data array"""		707296	1					
ANR	707402	PrimaryExpression	"""AllocateDataSet: Unable to allocate data array"""		707296	0					
ANR	707403	ReturnType	static void		707296	1					
ANR	707404	Identifier	AllocateDataSet		707296	2					
ANR	707405	ParameterList	cmsIT8 * it8		707296	3					
ANR	707406	Parameter	cmsIT8 * it8	1494:21:42606:42616	707296	0	True				
ANR	707407	ParameterType	cmsIT8 *		707296	0					
ANR	707408	Identifier	it8		707296	1					
ANR	707409	CFGEntryNode	ENTRY		707296		True				
ANR	707410	CFGExitNode	EXIT		707296		True				
ANR	707411	Symbol	GetTable		707296						
ANR	707412	Symbol	atoi		707296						
ANR	707413	Symbol	cmsIT8GetProperty		707296						
ANR	707414	Symbol	AllocChunk		707296						
ANR	707415	Symbol	t -> nSamples		707296						
ANR	707416	Symbol	t -> nPatches		707296						
ANR	707417	Symbol	NULL		707296						
ANR	707418	Symbol	t		707296						
ANR	707419	Symbol	it8		707296						
ANR	707420	Symbol	t -> Data		707296						
ANR	707421	Symbol	* t		707296						
ANR	707422	Function	GetData	1511:0:43088:43399							
ANR	707423	FunctionDef	"GetData (cmsIT8 * it8 , int nSet , int nField)"		707422	0					
ANR	707424	CompoundStatement		1513:0:43144:43399	707422	0					
ANR	707425	IdentifierDeclStatement	TABLE * t = GetTable ( it8 ) ;	1514:4:43150:43174	707422	0	True				
ANR	707426	IdentifierDecl	* t = GetTable ( it8 )		707422	0					
ANR	707427	IdentifierDeclType	TABLE *		707422	0					
ANR	707428	Identifier	t		707422	1					
ANR	707429	AssignmentExpression	* t = GetTable ( it8 )		707422	2		=			
ANR	707430	Identifier	t		707422	0					
ANR	707431	CallExpression	GetTable ( it8 )		707422	1					
ANR	707432	Callee	GetTable		707422	0					
ANR	707433	Identifier	GetTable		707422	0					
ANR	707434	ArgumentList	it8		707422	1					
ANR	707435	Argument	it8		707422	0					
ANR	707436	Identifier	it8		707422	0					
ANR	707437	IdentifierDeclStatement	int nSamples = t -> nSamples ;	1515:4:43180:43211	707422	1	True				
ANR	707438	IdentifierDecl	nSamples = t -> nSamples		707422	0					
ANR	707439	IdentifierDeclType	int		707422	0					
ANR	707440	Identifier	nSamples		707422	1					
ANR	707441	AssignmentExpression	nSamples = t -> nSamples		707422	2		=			
ANR	707442	Identifier	nSamples		707422	0					
ANR	707443	PtrMemberAccess	t -> nSamples		707422	1					
ANR	707444	Identifier	t		707422	0					
ANR	707445	Identifier	nSamples		707422	1					
ANR	707446	IdentifierDeclStatement	int nPatches = t -> nPatches ;	1516:4:43217:43248	707422	2	True				
ANR	707447	IdentifierDecl	nPatches = t -> nPatches		707422	0					
ANR	707448	IdentifierDeclType	int		707422	0					
ANR	707449	Identifier	nPatches		707422	1					
ANR	707450	AssignmentExpression	nPatches = t -> nPatches		707422	2		=			
ANR	707451	Identifier	nPatches		707422	0					
ANR	707452	PtrMemberAccess	t -> nPatches		707422	1					
ANR	707453	Identifier	t		707422	0					
ANR	707454	Identifier	nPatches		707422	1					
ANR	707455	IfStatement	if ( nSet >= nPatches || nField >= nSamples )		707422	3					
ANR	707456	Condition	nSet >= nPatches || nField >= nSamples	1518:8:43259:43296	707422	0	True				
ANR	707457	OrExpression	nSet >= nPatches || nField >= nSamples		707422	0		||			
ANR	707458	RelationalExpression	nSet >= nPatches		707422	0		>=			
ANR	707459	Identifier	nSet		707422	0					
ANR	707460	Identifier	nPatches		707422	1					
ANR	707461	RelationalExpression	nField >= nSamples		707422	1		>=			
ANR	707462	Identifier	nField		707422	0					
ANR	707463	Identifier	nSamples		707422	1					
ANR	707464	ReturnStatement	return NULL ;	1519:8:43307:43318	707422	1	True				
ANR	707465	Identifier	NULL		707422	0					
ANR	707466	IfStatement	if ( ! t -> Data )		707422	4					
ANR	707467	Condition	! t -> Data	1521:8:43329:43336	707422	0	True				
ANR	707468	UnaryOperationExpression	! t -> Data		707422	0					
ANR	707469	UnaryOperator	!		707422	0					
ANR	707470	PtrMemberAccess	t -> Data		707422	1					
ANR	707471	Identifier	t		707422	0					
ANR	707472	Identifier	Data		707422	1					
ANR	707473	ReturnStatement	return NULL ;	1521:18:43339:43350	707422	1	True				
ANR	707474	Identifier	NULL		707422	0					
ANR	707475	ReturnStatement	return t -> Data [ nSet * nSamples + nField ] ;	1522:4:43356:43397	707422	5	True				
ANR	707476	ArrayIndexing	t -> Data [ nSet * nSamples + nField ]		707422	0					
ANR	707477	PtrMemberAccess	t -> Data		707422	0					
ANR	707478	Identifier	t		707422	0					
ANR	707479	Identifier	Data		707422	1					
ANR	707480	AdditiveExpression	nSet * nSamples + nField		707422	1		+			
ANR	707481	MultiplicativeExpression	nSet * nSamples		707422	0		*			
ANR	707482	Identifier	nSet		707422	0					
ANR	707483	Identifier	nSamples		707422	1					
ANR	707484	Identifier	nField		707422	1					
ANR	707485	ReturnType	static char *		707422	1					
ANR	707486	Identifier	GetData		707422	2					
ANR	707487	ParameterList	"cmsIT8 * it8 , int nSet , int nField"		707422	3					
ANR	707488	Parameter	cmsIT8 * it8	1512:14:43109:43119	707422	0	True				
ANR	707489	ParameterType	cmsIT8 *		707422	0					
ANR	707490	Identifier	it8		707422	1					
ANR	707491	Parameter	int nSet	1512:27:43122:43129	707422	1	True				
ANR	707492	ParameterType	int		707422	0					
ANR	707493	Identifier	nSet		707422	1					
ANR	707494	Parameter	int nField	1512:37:43132:43141	707422	2	True				
ANR	707495	ParameterType	int		707422	0					
ANR	707496	Identifier	nField		707422	1					
ANR	707497	CFGEntryNode	ENTRY		707422		True				
ANR	707498	CFGExitNode	EXIT		707422		True				
ANR	707499	Symbol	t -> nSamples		707422						
ANR	707500	Symbol	t -> nPatches		707422						
ANR	707501	Symbol	nPatches		707422						
ANR	707502	Symbol	NULL		707422						
ANR	707503	Symbol	nSet		707422						
ANR	707504	Symbol	* nSamples		707422						
ANR	707505	Symbol	* nSet		707422						
ANR	707506	Symbol	it8		707422						
ANR	707507	Symbol	nField		707422						
ANR	707508	Symbol	GetTable		707422						
ANR	707509	Symbol	t		707422						
ANR	707510	Symbol	* t -> Data		707422						
ANR	707511	Symbol	* * t		707422						
ANR	707512	Symbol	nSamples		707422						
ANR	707513	Symbol	* nField		707422						
ANR	707514	Symbol	t -> Data		707422						
ANR	707515	Symbol	* t		707422						
ANR	707516	Function	SetData	1525:0:43402:43991							
ANR	707517	FunctionDef	"SetData (cmsIT8 * it8 , int nSet , int nField , const char * Val)"		707516	0					
ANR	707518	CompoundStatement		1527:0:43477:43991	707516	0					
ANR	707519	IdentifierDeclStatement	TABLE * t = GetTable ( it8 ) ;	1528:4:43483:43507	707516	0	True				
ANR	707520	IdentifierDecl	* t = GetTable ( it8 )		707516	0					
ANR	707521	IdentifierDeclType	TABLE *		707516	0					
ANR	707522	Identifier	t		707516	1					
ANR	707523	AssignmentExpression	* t = GetTable ( it8 )		707516	2		=			
ANR	707524	Identifier	t		707516	0					
ANR	707525	CallExpression	GetTable ( it8 )		707516	1					
ANR	707526	Callee	GetTable		707516	0					
ANR	707527	Identifier	GetTable		707516	0					
ANR	707528	ArgumentList	it8		707516	1					
ANR	707529	Argument	it8		707516	0					
ANR	707530	Identifier	it8		707516	0					
ANR	707531	IfStatement	if ( ! t -> Data )		707516	1					
ANR	707532	Condition	! t -> Data	1530:8:43518:43525	707516	0	True				
ANR	707533	UnaryOperationExpression	! t -> Data		707516	0					
ANR	707534	UnaryOperator	!		707516	0					
ANR	707535	PtrMemberAccess	t -> Data		707516	1					
ANR	707536	Identifier	t		707516	0					
ANR	707537	Identifier	Data		707516	1					
ANR	707538	ExpressionStatement	AllocateDataSet ( it8 )	1531:8:43536:43556	707516	1	True				
ANR	707539	CallExpression	AllocateDataSet ( it8 )		707516	0					
ANR	707540	Callee	AllocateDataSet		707516	0					
ANR	707541	Identifier	AllocateDataSet		707516	0					
ANR	707542	ArgumentList	it8		707516	1					
ANR	707543	Argument	it8		707516	0					
ANR	707544	Identifier	it8		707516	0					
ANR	707545	IfStatement	if ( ! t -> Data )		707516	2					
ANR	707546	Condition	! t -> Data	1533:8:43567:43574	707516	0	True				
ANR	707547	UnaryOperationExpression	! t -> Data		707516	0					
ANR	707548	UnaryOperator	!		707516	0					
ANR	707549	PtrMemberAccess	t -> Data		707516	1					
ANR	707550	Identifier	t		707516	0					
ANR	707551	Identifier	Data		707516	1					
ANR	707552	ReturnStatement	return FALSE ;	1533:18:43577:43589	707516	1	True				
ANR	707553	Identifier	FALSE		707516	0					
ANR	707554	IfStatement	if ( nSet > t -> nPatches || nSet < 0 )		707516	3					
ANR	707555	Condition	nSet > t -> nPatches || nSet < 0	1535:8:43600:43631	707516	0	True				
ANR	707556	OrExpression	nSet > t -> nPatches || nSet < 0		707516	0		||			
ANR	707557	RelationalExpression	nSet > t -> nPatches		707516	0		>			
ANR	707558	Identifier	nSet		707516	0					
ANR	707559	PtrMemberAccess	t -> nPatches		707516	1					
ANR	707560	Identifier	t		707516	0					
ANR	707561	Identifier	nPatches		707516	1					
ANR	707562	RelationalExpression	nSet < 0		707516	1		<			
ANR	707563	Identifier	nSet		707516	0					
ANR	707564	PrimaryExpression	0		707516	1					
ANR	707565	CompoundStatement		9:42:156:156	707516	1					
ANR	707566	ReturnStatement	"return SynError ( it8 , ""Patch %d out of range, there are %d patches"" , nSet , t -> nPatches ) ;"	1537:12:43649:43737	707516	0	True				
ANR	707567	CallExpression	"SynError ( it8 , ""Patch %d out of range, there are %d patches"" , nSet , t -> nPatches )"		707516	0					
ANR	707568	Callee	SynError		707516	0					
ANR	707569	Identifier	SynError		707516	0					
ANR	707570	ArgumentList	it8		707516	1					
ANR	707571	Argument	it8		707516	0					
ANR	707572	Identifier	it8		707516	0					
ANR	707573	Argument	"""Patch %d out of range, there are %d patches"""		707516	1					
ANR	707574	PrimaryExpression	"""Patch %d out of range, there are %d patches"""		707516	0					
ANR	707575	Argument	nSet		707516	2					
ANR	707576	Identifier	nSet		707516	0					
ANR	707577	Argument	t -> nPatches		707516	3					
ANR	707578	PtrMemberAccess	t -> nPatches		707516	0					
ANR	707579	Identifier	t		707516	0					
ANR	707580	Identifier	nPatches		707516	1					
ANR	707581	IfStatement	if ( nField > t -> nSamples || nField < 0 )		707516	4					
ANR	707582	Condition	nField > t -> nSamples || nField < 0	1540:8:43754:43788	707516	0	True				
ANR	707583	OrExpression	nField > t -> nSamples || nField < 0		707516	0		||			
ANR	707584	RelationalExpression	nField > t -> nSamples		707516	0		>			
ANR	707585	Identifier	nField		707516	0					
ANR	707586	PtrMemberAccess	t -> nSamples		707516	1					
ANR	707587	Identifier	t		707516	0					
ANR	707588	Identifier	nSamples		707516	1					
ANR	707589	RelationalExpression	nField < 0		707516	1		<			
ANR	707590	Identifier	nField		707516	0					
ANR	707591	PrimaryExpression	0		707516	1					
ANR	707592	CompoundStatement		14:45:313:313	707516	1					
ANR	707593	ReturnStatement	"return SynError ( it8 , ""Sample %d out of range, there are %d samples"" , nField , t -> nSamples ) ;"	1541:12:43805:43895	707516	0	True				
ANR	707594	CallExpression	"SynError ( it8 , ""Sample %d out of range, there are %d samples"" , nField , t -> nSamples )"		707516	0					
ANR	707595	Callee	SynError		707516	0					
ANR	707596	Identifier	SynError		707516	0					
ANR	707597	ArgumentList	it8		707516	1					
ANR	707598	Argument	it8		707516	0					
ANR	707599	Identifier	it8		707516	0					
ANR	707600	Argument	"""Sample %d out of range, there are %d samples"""		707516	1					
ANR	707601	PrimaryExpression	"""Sample %d out of range, there are %d samples"""		707516	0					
ANR	707602	Argument	nField		707516	2					
ANR	707603	Identifier	nField		707516	0					
ANR	707604	Argument	t -> nSamples		707516	3					
ANR	707605	PtrMemberAccess	t -> nSamples		707516	0					
ANR	707606	Identifier	t		707516	0					
ANR	707607	Identifier	nSamples		707516	1					
ANR	707608	ExpressionStatement	"t -> Data [ nSet * t -> nSamples + nField ] = AllocString ( it8 , Val )"	1545:4:43909:43972	707516	5	True				
ANR	707609	AssignmentExpression	"t -> Data [ nSet * t -> nSamples + nField ] = AllocString ( it8 , Val )"		707516	0		=			
ANR	707610	ArrayIndexing	t -> Data [ nSet * t -> nSamples + nField ]		707516	0					
ANR	707611	PtrMemberAccess	t -> Data		707516	0					
ANR	707612	Identifier	t		707516	0					
ANR	707613	Identifier	Data		707516	1					
ANR	707614	AdditiveExpression	nSet * t -> nSamples + nField		707516	1		+			
ANR	707615	MultiplicativeExpression	nSet * t -> nSamples		707516	0		*			
ANR	707616	Identifier	nSet		707516	0					
ANR	707617	PtrMemberAccess	t -> nSamples		707516	1					
ANR	707618	Identifier	t		707516	0					
ANR	707619	Identifier	nSamples		707516	1					
ANR	707620	Identifier	nField		707516	1					
ANR	707621	CallExpression	"AllocString ( it8 , Val )"		707516	1					
ANR	707622	Callee	AllocString		707516	0					
ANR	707623	Identifier	AllocString		707516	0					
ANR	707624	ArgumentList	it8		707516	1					
ANR	707625	Argument	it8		707516	0					
ANR	707626	Identifier	it8		707516	0					
ANR	707627	Argument	Val		707516	1					
ANR	707628	Identifier	Val		707516	0					
ANR	707629	ReturnStatement	return TRUE ;	1546:4:43978:43989	707516	6	True				
ANR	707630	Identifier	TRUE		707516	0					
ANR	707631	ReturnType	static cmsBool		707516	1					
ANR	707632	Identifier	SetData		707516	2					
ANR	707633	ParameterList	"cmsIT8 * it8 , int nSet , int nField , const char * Val"		707516	3					
ANR	707634	Parameter	cmsIT8 * it8	1526:16:43425:43435	707516	0	True				
ANR	707635	ParameterType	cmsIT8 *		707516	0					
ANR	707636	Identifier	it8		707516	1					
ANR	707637	Parameter	int nSet	1526:29:43438:43445	707516	1	True				
ANR	707638	ParameterType	int		707516	0					
ANR	707639	Identifier	nSet		707516	1					
ANR	707640	Parameter	int nField	1526:39:43448:43457	707516	2	True				
ANR	707641	ParameterType	int		707516	0					
ANR	707642	Identifier	nField		707516	1					
ANR	707643	Parameter	const char * Val	1526:51:43460:43474	707516	3	True				
ANR	707644	ParameterType	const char *		707516	0					
ANR	707645	Identifier	Val		707516	1					
ANR	707646	CFGEntryNode	ENTRY		707516		True				
ANR	707647	CFGExitNode	EXIT		707516		True				
ANR	707648	Symbol	Val		707516						
ANR	707649	Symbol	t -> nSamples		707516						
ANR	707650	Symbol	t -> nPatches		707516						
ANR	707651	Symbol	nSet		707516						
ANR	707652	Symbol	TRUE		707516						
ANR	707653	Symbol	SynError		707516						
ANR	707654	Symbol	* nSet		707516						
ANR	707655	Symbol	it8		707516						
ANR	707656	Symbol	nField		707516						
ANR	707657	Symbol	GetTable		707516						
ANR	707658	Symbol	* t -> nSamples		707516						
ANR	707659	Symbol	t		707516						
ANR	707660	Symbol	* t -> Data		707516						
ANR	707661	Symbol	AllocString		707516						
ANR	707662	Symbol	* * t		707516						
ANR	707663	Symbol	FALSE		707516						
ANR	707664	Symbol	* nField		707516						
ANR	707665	Symbol	t -> Data		707516						
ANR	707666	Symbol	* t		707516						
ANR	707667	Function	WriteStr	1554:0:44100:44900							
ANR	707668	FunctionDef	"WriteStr (SAVESTREAM * f , const char * str)"		707667	0					
ANR	707669	CompoundStatement		1556:0:44153:44900	707667	0					
ANR	707670	IdentifierDeclStatement	cmsUInt32Number len ;	1557:4:44159:44178	707667	0	True				
ANR	707671	IdentifierDecl	len		707667	0					
ANR	707672	IdentifierDeclType	cmsUInt32Number		707667	0					
ANR	707673	Identifier	len		707667	1					
ANR	707674	IfStatement	if ( str == NULL )		707667	1					
ANR	707675	Condition	str == NULL	1559:8:44189:44199	707667	0	True				
ANR	707676	EqualityExpression	str == NULL		707667	0		==			
ANR	707677	Identifier	str		707667	0					
ANR	707678	Identifier	NULL		707667	1					
ANR	707679	ExpressionStatement	"str = "" """	1560:8:44210:44219	707667	1	True				
ANR	707680	AssignmentExpression	"str = "" """		707667	0		=			
ANR	707681	Identifier	str		707667	0					
ANR	707682	PrimaryExpression	""" """		707667	1					
ANR	707683	ExpressionStatement	len = ( cmsUInt32Number ) strlen ( str )	1563:4:44249:44284	707667	2	True				
ANR	707684	AssignmentExpression	len = ( cmsUInt32Number ) strlen ( str )		707667	0		=			
ANR	707685	Identifier	len		707667	0					
ANR	707686	CastExpression	( cmsUInt32Number ) strlen ( str )		707667	1					
ANR	707687	CastTarget	cmsUInt32Number		707667	0					
ANR	707688	CallExpression	strlen ( str )		707667	1					
ANR	707689	Callee	strlen		707667	0					
ANR	707690	Identifier	strlen		707667	0					
ANR	707691	ArgumentList	str		707667	1					
ANR	707692	Argument	str		707667	0					
ANR	707693	Identifier	str		707667	0					
ANR	707694	ExpressionStatement	f -> Used += len	1564:4:44290:44305	707667	3	True				
ANR	707695	AssignmentExpression	f -> Used += len		707667	0		+=			
ANR	707696	PtrMemberAccess	f -> Used		707667	0					
ANR	707697	Identifier	f		707667	0					
ANR	707698	Identifier	Used		707667	1					
ANR	707699	Identifier	len		707667	1					
ANR	707700	IfStatement	if ( f -> stream )		707667	4					
ANR	707701	Condition	f -> stream	1567:8:44317:44326	707667	0	True				
ANR	707702	PtrMemberAccess	f -> stream		707667	0					
ANR	707703	Identifier	f		707667	0					
ANR	707704	Identifier	stream		707667	1					
ANR	707705	CompoundStatement		12:20:175:175	707667	1					
ANR	707706	IfStatement	"if ( fwrite ( str , 1 , len , f -> stream ) != len )"		707667	0					
ANR	707707	Condition	"fwrite ( str , 1 , len , f -> stream ) != len"	1569:12:44378:44414	707667	0	True				
ANR	707708	EqualityExpression	"fwrite ( str , 1 , len , f -> stream ) != len"		707667	0		!=			
ANR	707709	CallExpression	"fwrite ( str , 1 , len , f -> stream )"		707667	0					
ANR	707710	Callee	fwrite		707667	0					
ANR	707711	Identifier	fwrite		707667	0					
ANR	707712	ArgumentList	str		707667	1					
ANR	707713	Argument	str		707667	0					
ANR	707714	Identifier	str		707667	0					
ANR	707715	Argument	1		707667	1					
ANR	707716	PrimaryExpression	1		707667	0					
ANR	707717	Argument	len		707667	2					
ANR	707718	Identifier	len		707667	0					
ANR	707719	Argument	f -> stream		707667	3					
ANR	707720	PtrMemberAccess	f -> stream		707667	0					
ANR	707721	Identifier	f		707667	0					
ANR	707722	Identifier	stream		707667	1					
ANR	707723	Identifier	len		707667	1					
ANR	707724	CompoundStatement		14:51:263:263	707667	1					
ANR	707725	ExpressionStatement	"cmsSignalError ( 0 , cmsERROR_WRITE , ""Write to file error in CGATS parser"" )"	1570:12:44431:44503	707667	0	True				
ANR	707726	CallExpression	"cmsSignalError ( 0 , cmsERROR_WRITE , ""Write to file error in CGATS parser"" )"		707667	0					
ANR	707727	Callee	cmsSignalError		707667	0					
ANR	707728	Identifier	cmsSignalError		707667	0					
ANR	707729	ArgumentList	0		707667	1					
ANR	707730	Argument	0		707667	0					
ANR	707731	PrimaryExpression	0		707667	0					
ANR	707732	Argument	cmsERROR_WRITE		707667	1					
ANR	707733	Identifier	cmsERROR_WRITE		707667	0					
ANR	707734	Argument	"""Write to file error in CGATS parser"""		707667	2					
ANR	707735	PrimaryExpression	"""Write to file error in CGATS parser"""		707667	0					
ANR	707736	ReturnStatement	return ;	1571:12:44517:44523	707667	1	True				
ANR	707737	ElseStatement	else		707667	0					
ANR	707738	CompoundStatement		20:9:397:397	707667	0					
ANR	707739	IfStatement	if ( f -> Base )		707667	0					
ANR	707740	Condition	f -> Base	1577:12:44592:44599	707667	0	True				
ANR	707741	PtrMemberAccess	f -> Base		707667	0					
ANR	707742	Identifier	f		707667	0					
ANR	707743	Identifier	Base		707667	1					
ANR	707744	CompoundStatement		22:22:448:448	707667	1					
ANR	707745	IfStatement	if ( f -> Used > f -> Max )		707667	0					
ANR	707746	Condition	f -> Used > f -> Max	1579:16:44656:44673	707667	0	True				
ANR	707747	RelationalExpression	f -> Used > f -> Max		707667	0		>			
ANR	707748	PtrMemberAccess	f -> Used		707667	0					
ANR	707749	Identifier	f		707667	0					
ANR	707750	Identifier	Used		707667	1					
ANR	707751	PtrMemberAccess	f -> Max		707667	1					
ANR	707752	Identifier	f		707667	0					
ANR	707753	Identifier	Max		707667	1					
ANR	707754	CompoundStatement		24:36:522:522	707667	1					
ANR	707755	ExpressionStatement	"cmsSignalError ( 0 , cmsERROR_WRITE , ""Write to memory overflows in CGATS parser"" )"	1581:17:44696:44774	707667	0	True				
ANR	707756	CallExpression	"cmsSignalError ( 0 , cmsERROR_WRITE , ""Write to memory overflows in CGATS parser"" )"		707667	0					
ANR	707757	Callee	cmsSignalError		707667	0					
ANR	707758	Identifier	cmsSignalError		707667	0					
ANR	707759	ArgumentList	0		707667	1					
ANR	707760	Argument	0		707667	0					
ANR	707761	PrimaryExpression	0		707667	0					
ANR	707762	Argument	cmsERROR_WRITE		707667	1					
ANR	707763	Identifier	cmsERROR_WRITE		707667	0					
ANR	707764	Argument	"""Write to memory overflows in CGATS parser"""		707667	2					
ANR	707765	PrimaryExpression	"""Write to memory overflows in CGATS parser"""		707667	0					
ANR	707766	ReturnStatement	return ;	1582:17:44793:44799	707667	1	True				
ANR	707767	ExpressionStatement	"memmove ( f -> Ptr , str , len )"	1585:12:44828:44854	707667	1	True				
ANR	707768	CallExpression	"memmove ( f -> Ptr , str , len )"		707667	0					
ANR	707769	Callee	memmove		707667	0					
ANR	707770	Identifier	memmove		707667	0					
ANR	707771	ArgumentList	f -> Ptr		707667	1					
ANR	707772	Argument	f -> Ptr		707667	0					
ANR	707773	PtrMemberAccess	f -> Ptr		707667	0					
ANR	707774	Identifier	f		707667	0					
ANR	707775	Identifier	Ptr		707667	1					
ANR	707776	Argument	str		707667	1					
ANR	707777	Identifier	str		707667	0					
ANR	707778	Argument	len		707667	2					
ANR	707779	Identifier	len		707667	0					
ANR	707780	ExpressionStatement	f -> Ptr += len	1586:12:44868:44881	707667	2	True				
ANR	707781	AssignmentExpression	f -> Ptr += len		707667	0		+=			
ANR	707782	PtrMemberAccess	f -> Ptr		707667	0					
ANR	707783	Identifier	f		707667	0					
ANR	707784	Identifier	Ptr		707667	1					
ANR	707785	Identifier	len		707667	1					
ANR	707786	ReturnType	static void		707667	1					
ANR	707787	Identifier	WriteStr		707667	2					
ANR	707788	ParameterList	"SAVESTREAM * f , const char * str"		707667	3					
ANR	707789	Parameter	SAVESTREAM * f	1555:14:44121:44133	707667	0	True				
ANR	707790	ParameterType	SAVESTREAM *		707667	0					
ANR	707791	Identifier	f		707667	1					
ANR	707792	Parameter	const char * str	1555:29:44136:44150	707667	1	True				
ANR	707793	ParameterType	const char *		707667	0					
ANR	707794	Identifier	str		707667	1					
ANR	707795	CFGEntryNode	ENTRY		707667		True				
ANR	707796	CFGExitNode	EXIT		707667		True				
ANR	707797	Symbol	NULL		707667						
ANR	707798	Symbol	cmsERROR_WRITE		707667						
ANR	707799	Symbol	f		707667						
ANR	707800	Symbol	f -> Used		707667						
ANR	707801	Symbol	fwrite		707667						
ANR	707802	Symbol	f -> Max		707667						
ANR	707803	Symbol	f -> stream		707667						
ANR	707804	Symbol	str		707667						
ANR	707805	Symbol	* f		707667						
ANR	707806	Symbol	strlen		707667						
ANR	707807	Symbol	len		707667						
ANR	707808	Symbol	f -> Base		707667						
ANR	707809	Symbol	f -> Ptr		707667						
ANR	707810	Function	Writef	1595:0:44924:45155							
ANR	707811	FunctionDef	"Writef (SAVESTREAM * f , const char * frm)"		707810	0					
ANR	707812	CompoundStatement		1597:0:44980:45155	707810	0					
ANR	707813	IdentifierDeclStatement	char Buffer [ 4096 ] ;	1598:4:44986:45003	707810	0	True				
ANR	707814	IdentifierDecl	Buffer [ 4096 ]		707810	0					
ANR	707815	IdentifierDeclType	char [ 4096 ]		707810	0					
ANR	707816	Identifier	Buffer		707810	1					
ANR	707817	PrimaryExpression	4096		707810	2					
ANR	707818	IdentifierDeclStatement	va_list args ;	1599:4:45009:45021	707810	1	True				
ANR	707819	IdentifierDecl	args		707810	0					
ANR	707820	IdentifierDeclType	va_list		707810	0					
ANR	707821	Identifier	args		707810	1					
ANR	707822	ExpressionStatement	"va_start ( args , frm )"	1601:4:45028:45047	707810	2	True				
ANR	707823	CallExpression	"va_start ( args , frm )"		707810	0					
ANR	707824	Callee	va_start		707810	0					
ANR	707825	Identifier	va_start		707810	0					
ANR	707826	ArgumentList	args		707810	1					
ANR	707827	Argument	args		707810	0					
ANR	707828	Identifier	args		707810	0					
ANR	707829	Argument	frm		707810	1					
ANR	707830	Identifier	frm		707810	0					
ANR	707831	ExpressionStatement	"vsnprintf ( Buffer , 4095 , frm , args )"	1602:4:45053:45087	707810	3	True				
ANR	707832	CallExpression	"vsnprintf ( Buffer , 4095 , frm , args )"		707810	0					
ANR	707833	Callee	vsnprintf		707810	0					
ANR	707834	Identifier	vsnprintf		707810	0					
ANR	707835	ArgumentList	Buffer		707810	1					
ANR	707836	Argument	Buffer		707810	0					
ANR	707837	Identifier	Buffer		707810	0					
ANR	707838	Argument	4095		707810	1					
ANR	707839	PrimaryExpression	4095		707810	0					
ANR	707840	Argument	frm		707810	2					
ANR	707841	Identifier	frm		707810	0					
ANR	707842	Argument	args		707810	3					
ANR	707843	Identifier	args		707810	0					
ANR	707844	ExpressionStatement	Buffer [ 4095 ] = 0	1603:4:45093:45109	707810	4	True				
ANR	707845	AssignmentExpression	Buffer [ 4095 ] = 0		707810	0		=			
ANR	707846	ArrayIndexing	Buffer [ 4095 ]		707810	0					
ANR	707847	Identifier	Buffer		707810	0					
ANR	707848	PrimaryExpression	4095		707810	1					
ANR	707849	PrimaryExpression	0		707810	1					
ANR	707850	ExpressionStatement	"WriteStr ( f , Buffer )"	1604:4:45115:45134	707810	5	True				
ANR	707851	CallExpression	"WriteStr ( f , Buffer )"		707810	0					
ANR	707852	Callee	WriteStr		707810	0					
ANR	707853	Identifier	WriteStr		707810	0					
ANR	707854	ArgumentList	f		707810	1					
ANR	707855	Argument	f		707810	0					
ANR	707856	Identifier	f		707810	0					
ANR	707857	Argument	Buffer		707810	1					
ANR	707858	Identifier	Buffer		707810	0					
ANR	707859	ExpressionStatement	va_end ( args )	1605:4:45140:45152	707810	6	True				
ANR	707860	CallExpression	va_end ( args )		707810	0					
ANR	707861	Callee	va_end		707810	0					
ANR	707862	Identifier	va_end		707810	0					
ANR	707863	ArgumentList	args		707810	1					
ANR	707864	Argument	args		707810	0					
ANR	707865	Identifier	args		707810	0					
ANR	707866	ReturnType	static void		707810	1					
ANR	707867	Identifier	Writef		707810	2					
ANR	707868	ParameterList	"SAVESTREAM * f , const char * frm"		707810	3					
ANR	707869	Parameter	SAVESTREAM * f	1596:12:44943:44955	707810	0	True				
ANR	707870	ParameterType	SAVESTREAM *		707810	0					
ANR	707871	Identifier	f		707810	1					
ANR	707872	Parameter	const char * frm	1596:27:44958:44972	707810	1	True				
ANR	707873	ParameterType	const char *		707810	0					
ANR	707874	Identifier	frm		707810	1					
ANR	707875	CFGEntryNode	ENTRY		707810		True				
ANR	707876	CFGExitNode	EXIT		707810		True				
ANR	707877	Symbol	frm		707810						
ANR	707878	Symbol	Buffer		707810						
ANR	707879	Symbol	args		707810						
ANR	707880	Symbol	f		707810						
ANR	707881	Symbol	* Buffer		707810						
ANR	707882	Function	WriteHeader	1610:0:45180:46939							
ANR	707883	FunctionDef	"WriteHeader (cmsIT8 * it8 , SAVESTREAM * fp)"		707882	0					
ANR	707884	CompoundStatement		1612:0:45233:46939	707882	0					
ANR	707885	IdentifierDeclStatement	KEYVALUE * p ;	1613:4:45239:45250	707882	0	True				
ANR	707886	IdentifierDecl	* p		707882	0					
ANR	707887	IdentifierDeclType	KEYVALUE *		707882	0					
ANR	707888	Identifier	p		707882	1					
ANR	707889	IdentifierDeclStatement	TABLE * t = GetTable ( it8 ) ;	1614:4:45256:45280	707882	1	True				
ANR	707890	IdentifierDecl	* t = GetTable ( it8 )		707882	0					
ANR	707891	IdentifierDeclType	TABLE *		707882	0					
ANR	707892	Identifier	t		707882	1					
ANR	707893	AssignmentExpression	* t = GetTable ( it8 )		707882	2		=			
ANR	707894	Identifier	t		707882	0					
ANR	707895	CallExpression	GetTable ( it8 )		707882	1					
ANR	707896	Callee	GetTable		707882	0					
ANR	707897	Identifier	GetTable		707882	0					
ANR	707898	ArgumentList	it8		707882	1					
ANR	707899	Argument	it8		707882	0					
ANR	707900	Identifier	it8		707882	0					
ANR	707901	ExpressionStatement	"WriteStr ( fp , t -> SheetType )"	1617:4:45310:45336	707882	2	True				
ANR	707902	CallExpression	"WriteStr ( fp , t -> SheetType )"		707882	0					
ANR	707903	Callee	WriteStr		707882	0					
ANR	707904	Identifier	WriteStr		707882	0					
ANR	707905	ArgumentList	fp		707882	1					
ANR	707906	Argument	fp		707882	0					
ANR	707907	Identifier	fp		707882	0					
ANR	707908	Argument	t -> SheetType		707882	1					
ANR	707909	PtrMemberAccess	t -> SheetType		707882	0					
ANR	707910	Identifier	t		707882	0					
ANR	707911	Identifier	SheetType		707882	1					
ANR	707912	ExpressionStatement	"WriteStr ( fp , ""\\n"" )"	1618:4:45342:45360	707882	3	True				
ANR	707913	CallExpression	"WriteStr ( fp , ""\\n"" )"		707882	0					
ANR	707914	Callee	WriteStr		707882	0					
ANR	707915	Identifier	WriteStr		707882	0					
ANR	707916	ArgumentList	fp		707882	1					
ANR	707917	Argument	fp		707882	0					
ANR	707918	Identifier	fp		707882	0					
ANR	707919	Argument	"""\\n"""		707882	1					
ANR	707920	PrimaryExpression	"""\\n"""		707882	0					
ANR	707921	ForStatement	for ( p = t -> HeaderList ; ( p != NULL ) ; p = p -> Next )		707882	4					
ANR	707922	ForInit	p = t -> HeaderList ;	1620:9:45372:45389	707882	0	True				
ANR	707923	AssignmentExpression	p = t -> HeaderList		707882	0		=			
ANR	707924	Identifier	p		707882	0					
ANR	707925	PtrMemberAccess	t -> HeaderList		707882	1					
ANR	707926	Identifier	t		707882	0					
ANR	707927	Identifier	HeaderList		707882	1					
ANR	707928	Condition	p != NULL	1620:28:45391:45401	707882	1	True				
ANR	707929	EqualityExpression	p != NULL		707882	0		!=			
ANR	707930	Identifier	p		707882	0					
ANR	707931	Identifier	NULL		707882	1					
ANR	707932	AssignmentExpression	p = p -> Next	1620:41:45404:45414	707882	2	True	=			
ANR	707933	Identifier	p		707882	0					
ANR	707934	PtrMemberAccess	p -> Next		707882	1					
ANR	707935	Identifier	p		707882	0					
ANR	707936	Identifier	Next		707882	1					
ANR	707937	CompoundStatement		10:4:187:187	707882	3					
ANR	707938	IfStatement	if ( * p -> Keyword == '#' )		707882	0					
ANR	707939	Condition	* p -> Keyword == '#'	1622:12:45435:45453	707882	0	True				
ANR	707940	EqualityExpression	* p -> Keyword == '#'		707882	0		==			
ANR	707941	UnaryOperationExpression	* p -> Keyword		707882	0					
ANR	707942	UnaryOperator	*		707882	0					
ANR	707943	PtrMemberAccess	p -> Keyword		707882	1					
ANR	707944	Identifier	p		707882	0					
ANR	707945	Identifier	Keyword		707882	1					
ANR	707946	PrimaryExpression	'#'		707882	1					
ANR	707947	CompoundStatement		13:12:237:245	707882	1					
ANR	707948	IdentifierDeclStatement	char * Pt ;	1624:12:45471:45479	707882	0	True				
ANR	707949	IdentifierDecl	* Pt		707882	0					
ANR	707950	IdentifierDeclType	char *		707882	0					
ANR	707951	Identifier	Pt		707882	1					
ANR	707952	ExpressionStatement	"WriteStr ( fp , ""#\\n# "" )"	1626:12:45494:45515	707882	1	True				
ANR	707953	CallExpression	"WriteStr ( fp , ""#\\n# "" )"		707882	0					
ANR	707954	Callee	WriteStr		707882	0					
ANR	707955	Identifier	WriteStr		707882	0					
ANR	707956	ArgumentList	fp		707882	1					
ANR	707957	Argument	fp		707882	0					
ANR	707958	Identifier	fp		707882	0					
ANR	707959	Argument	"""#\\n# """		707882	1					
ANR	707960	PrimaryExpression	"""#\\n# """		707882	0					
ANR	707961	ForStatement	for ( Pt = p -> Value ; * Pt ; Pt ++ )		707882	2					
ANR	707962	ForInit	Pt = p -> Value ;	1627:17:45534:45548	707882	0	True				
ANR	707963	AssignmentExpression	Pt = p -> Value		707882	0		=			
ANR	707964	Identifier	Pt		707882	0					
ANR	707965	PtrMemberAccess	p -> Value		707882	1					
ANR	707966	Identifier	p		707882	0					
ANR	707967	Identifier	Value		707882	1					
ANR	707968	Condition	* Pt	1627:33:45550:45552	707882	1	True				
ANR	707969	UnaryOperationExpression	* Pt		707882	0					
ANR	707970	UnaryOperator	*		707882	0					
ANR	707971	Identifier	Pt		707882	1					
ANR	707972	PostIncDecOperationExpression	Pt ++	1627:38:45555:45558	707882	2	True				
ANR	707973	Identifier	Pt		707882	0					
ANR	707974	IncDec	++		707882	1					
ANR	707975	CompoundStatement		16:44:327:327	707882	3					
ANR	707976	ExpressionStatement	"Writef ( fp , ""%c"" , * Pt )"	1630:16:45581:45602	707882	0	True				
ANR	707977	CallExpression	"Writef ( fp , ""%c"" , * Pt )"		707882	0					
ANR	707978	Callee	Writef		707882	0					
ANR	707979	Identifier	Writef		707882	0					
ANR	707980	ArgumentList	fp		707882	1					
ANR	707981	Argument	fp		707882	0					
ANR	707982	Identifier	fp		707882	0					
ANR	707983	Argument	"""%c"""		707882	1					
ANR	707984	PrimaryExpression	"""%c"""		707882	0					
ANR	707985	Argument	* Pt		707882	2					
ANR	707986	UnaryOperationExpression	* Pt		707882	0					
ANR	707987	UnaryOperator	*		707882	0					
ANR	707988	Identifier	Pt		707882	1					
ANR	707989	IfStatement	if ( * Pt == '\\n' )		707882	1					
ANR	707990	Condition	* Pt == '\\n'	1632:20:45625:45635	707882	0	True				
ANR	707991	EqualityExpression	* Pt == '\\n'		707882	0		==			
ANR	707992	UnaryOperationExpression	* Pt		707882	0					
ANR	707993	UnaryOperator	*		707882	0					
ANR	707994	Identifier	Pt		707882	1					
ANR	707995	PrimaryExpression	'\\n'		707882	1					
ANR	707996	CompoundStatement		21:33:404:404	707882	1					
ANR	707997	ExpressionStatement	"WriteStr ( fp , ""# "" )"	1633:20:45660:45678	707882	0	True				
ANR	707998	CallExpression	"WriteStr ( fp , ""# "" )"		707882	0					
ANR	707999	Callee	WriteStr		707882	0					
ANR	708000	Identifier	WriteStr		707882	0					
ANR	708001	ArgumentList	fp		707882	1					
ANR	708002	Argument	fp		707882	0					
ANR	708003	Identifier	fp		707882	0					
ANR	708004	Argument	"""# """		707882	1					
ANR	708005	PrimaryExpression	"""# """		707882	0					
ANR	708006	ExpressionStatement	"WriteStr ( fp , ""\\n#\\n"" )"	1637:12:45725:45746	707882	3	True				
ANR	708007	CallExpression	"WriteStr ( fp , ""\\n#\\n"" )"		707882	0					
ANR	708008	Callee	WriteStr		707882	0					
ANR	708009	Identifier	WriteStr		707882	0					
ANR	708010	ArgumentList	fp		707882	1					
ANR	708011	Argument	fp		707882	0					
ANR	708012	Identifier	fp		707882	0					
ANR	708013	Argument	"""\\n#\\n"""		707882	1					
ANR	708014	PrimaryExpression	"""\\n#\\n"""		707882	0					
ANR	708015	ContinueStatement	continue ;	1638:12:45760:45768	707882	4	True				
ANR	708016	IfStatement	"if ( ! IsAvailableOnList ( it8 -> ValidKeywords , p -> Keyword , NULL , NULL ) )"		707882	1					
ANR	708017	Condition	"! IsAvailableOnList ( it8 -> ValidKeywords , p -> Keyword , NULL , NULL )"	1642:12:45794:45856	707882	0	True				
ANR	708018	UnaryOperationExpression	"! IsAvailableOnList ( it8 -> ValidKeywords , p -> Keyword , NULL , NULL )"		707882	0					
ANR	708019	UnaryOperator	!		707882	0					
ANR	708020	CallExpression	"IsAvailableOnList ( it8 -> ValidKeywords , p -> Keyword , NULL , NULL )"		707882	1					
ANR	708021	Callee	IsAvailableOnList		707882	0					
ANR	708022	Identifier	IsAvailableOnList		707882	0					
ANR	708023	ArgumentList	it8 -> ValidKeywords		707882	1					
ANR	708024	Argument	it8 -> ValidKeywords		707882	0					
ANR	708025	PtrMemberAccess	it8 -> ValidKeywords		707882	0					
ANR	708026	Identifier	it8		707882	0					
ANR	708027	Identifier	ValidKeywords		707882	1					
ANR	708028	Argument	p -> Keyword		707882	1					
ANR	708029	PtrMemberAccess	p -> Keyword		707882	0					
ANR	708030	Identifier	p		707882	0					
ANR	708031	Identifier	Keyword		707882	1					
ANR	708032	Argument	NULL		707882	2					
ANR	708033	Identifier	NULL		707882	0					
ANR	708034	Argument	NULL		707882	3					
ANR	708035	Identifier	NULL		707882	0					
ANR	708036	CompoundStatement		31:77:625:625	707882	1					
ANR	708037	ExpressionStatement	"WriteStr ( fp , ""KEYWORD\\t\\"""" )"	1645:12:45898:45925	707882	0	True				
ANR	708038	CallExpression	"WriteStr ( fp , ""KEYWORD\\t\\"""" )"		707882	0					
ANR	708039	Callee	WriteStr		707882	0					
ANR	708040	Identifier	WriteStr		707882	0					
ANR	708041	ArgumentList	fp		707882	1					
ANR	708042	Argument	fp		707882	0					
ANR	708043	Identifier	fp		707882	0					
ANR	708044	Argument	"""KEYWORD\\t\\"""""		707882	1					
ANR	708045	PrimaryExpression	"""KEYWORD\\t\\"""""		707882	0					
ANR	708046	ExpressionStatement	"WriteStr ( fp , p -> Keyword )"	1646:12:45939:45963	707882	1	True				
ANR	708047	CallExpression	"WriteStr ( fp , p -> Keyword )"		707882	0					
ANR	708048	Callee	WriteStr		707882	0					
ANR	708049	Identifier	WriteStr		707882	0					
ANR	708050	ArgumentList	fp		707882	1					
ANR	708051	Argument	fp		707882	0					
ANR	708052	Identifier	fp		707882	0					
ANR	708053	Argument	p -> Keyword		707882	1					
ANR	708054	PtrMemberAccess	p -> Keyword		707882	0					
ANR	708055	Identifier	p		707882	0					
ANR	708056	Identifier	Keyword		707882	1					
ANR	708057	ExpressionStatement	"WriteStr ( fp , ""\\""\\n"" )"	1647:12:45977:45997	707882	2	True				
ANR	708058	CallExpression	"WriteStr ( fp , ""\\""\\n"" )"		707882	0					
ANR	708059	Callee	WriteStr		707882	0					
ANR	708060	Identifier	WriteStr		707882	0					
ANR	708061	ArgumentList	fp		707882	1					
ANR	708062	Argument	fp		707882	0					
ANR	708063	Identifier	fp		707882	0					
ANR	708064	Argument	"""\\""\\n"""		707882	1					
ANR	708065	PrimaryExpression	"""\\""\\n"""		707882	0					
ANR	708066	ExpressionStatement	"AddAvailableProperty ( it8 , p -> Keyword , WRITE_UNCOOKED )"	1650:12:46019:46072	707882	3	True				
ANR	708067	CallExpression	"AddAvailableProperty ( it8 , p -> Keyword , WRITE_UNCOOKED )"		707882	0					
ANR	708068	Callee	AddAvailableProperty		707882	0					
ANR	708069	Identifier	AddAvailableProperty		707882	0					
ANR	708070	ArgumentList	it8		707882	1					
ANR	708071	Argument	it8		707882	0					
ANR	708072	Identifier	it8		707882	0					
ANR	708073	Argument	p -> Keyword		707882	1					
ANR	708074	PtrMemberAccess	p -> Keyword		707882	0					
ANR	708075	Identifier	p		707882	0					
ANR	708076	Identifier	Keyword		707882	1					
ANR	708077	Argument	WRITE_UNCOOKED		707882	2					
ANR	708078	Identifier	WRITE_UNCOOKED		707882	0					
ANR	708079	ExpressionStatement	"WriteStr ( fp , p -> Keyword )"	1653:8:46093:46117	707882	2	True				
ANR	708080	CallExpression	"WriteStr ( fp , p -> Keyword )"		707882	0					
ANR	708081	Callee	WriteStr		707882	0					
ANR	708082	Identifier	WriteStr		707882	0					
ANR	708083	ArgumentList	fp		707882	1					
ANR	708084	Argument	fp		707882	0					
ANR	708085	Identifier	fp		707882	0					
ANR	708086	Argument	p -> Keyword		707882	1					
ANR	708087	PtrMemberAccess	p -> Keyword		707882	0					
ANR	708088	Identifier	p		707882	0					
ANR	708089	Identifier	Keyword		707882	1					
ANR	708090	IfStatement	if ( p -> Value )		707882	3					
ANR	708091	Condition	p -> Value	1654:12:46131:46138	707882	0	True				
ANR	708092	PtrMemberAccess	p -> Value		707882	0					
ANR	708093	Identifier	p		707882	0					
ANR	708094	Identifier	Value		707882	1					
ANR	708095	CompoundStatement		43:22:907:907	707882	1					
ANR	708096	SwitchStatement	switch ( p -> WriteAs )		707882	0					
ANR	708097	Condition	p -> WriteAs	1656:20:46164:46174	707882	0	True				
ANR	708098	PtrMemberAccess	p -> WriteAs		707882	0					
ANR	708099	Identifier	p		707882	0					
ANR	708100	Identifier	WriteAs		707882	1					
ANR	708101	CompoundStatement		45:33:943:943	707882	1					
ANR	708102	Label	case WRITE_UNCOOKED :	1658:12:46192:46211	707882	0	True				
ANR	708103	Identifier	WRITE_UNCOOKED		707882	0					
ANR	708104	ExpressionStatement	"Writef ( fp , ""\\t%s"" , p -> Value )"	1659:20:46233:46262	707882	1	True				
ANR	708105	CallExpression	"Writef ( fp , ""\\t%s"" , p -> Value )"		707882	0					
ANR	708106	Callee	Writef		707882	0					
ANR	708107	Identifier	Writef		707882	0					
ANR	708108	ArgumentList	fp		707882	1					
ANR	708109	Argument	fp		707882	0					
ANR	708110	Identifier	fp		707882	0					
ANR	708111	Argument	"""\\t%s"""		707882	1					
ANR	708112	PrimaryExpression	"""\\t%s"""		707882	0					
ANR	708113	Argument	p -> Value		707882	2					
ANR	708114	PtrMemberAccess	p -> Value		707882	0					
ANR	708115	Identifier	p		707882	0					
ANR	708116	Identifier	Value		707882	1					
ANR	708117	BreakStatement	break ;	1660:20:46284:46289	707882	2	True				
ANR	708118	Label	case WRITE_STRINGIFY :	1662:12:46304:46324	707882	3	True				
ANR	708119	Identifier	WRITE_STRINGIFY		707882	0					
ANR	708120	ExpressionStatement	"Writef ( fp , ""\\t\\""%s\\"""" , p -> Value )"	1663:20:46346:46379	707882	4	True				
ANR	708121	CallExpression	"Writef ( fp , ""\\t\\""%s\\"""" , p -> Value )"		707882	0					
ANR	708122	Callee	Writef		707882	0					
ANR	708123	Identifier	Writef		707882	0					
ANR	708124	ArgumentList	fp		707882	1					
ANR	708125	Argument	fp		707882	0					
ANR	708126	Identifier	fp		707882	0					
ANR	708127	Argument	"""\\t\\""%s\\"""""		707882	1					
ANR	708128	PrimaryExpression	"""\\t\\""%s\\"""""		707882	0					
ANR	708129	Argument	p -> Value		707882	2					
ANR	708130	PtrMemberAccess	p -> Value		707882	0					
ANR	708131	Identifier	p		707882	0					
ANR	708132	Identifier	Value		707882	1					
ANR	708133	BreakStatement	break ;	1664:20:46401:46406	707882	5	True				
ANR	708134	Label	case WRITE_HEXADECIMAL :	1666:12:46421:46443	707882	6	True				
ANR	708135	Identifier	WRITE_HEXADECIMAL		707882	0					
ANR	708136	ExpressionStatement	"Writef ( fp , ""\\t0x%X"" , atoi ( p -> Value ) )"	1667:20:46465:46502	707882	7	True				
ANR	708137	CallExpression	"Writef ( fp , ""\\t0x%X"" , atoi ( p -> Value ) )"		707882	0					
ANR	708138	Callee	Writef		707882	0					
ANR	708139	Identifier	Writef		707882	0					
ANR	708140	ArgumentList	fp		707882	1					
ANR	708141	Argument	fp		707882	0					
ANR	708142	Identifier	fp		707882	0					
ANR	708143	Argument	"""\\t0x%X"""		707882	1					
ANR	708144	PrimaryExpression	"""\\t0x%X"""		707882	0					
ANR	708145	Argument	atoi ( p -> Value )		707882	2					
ANR	708146	CallExpression	atoi ( p -> Value )		707882	0					
ANR	708147	Callee	atoi		707882	0					
ANR	708148	Identifier	atoi		707882	0					
ANR	708149	ArgumentList	p -> Value		707882	1					
ANR	708150	Argument	p -> Value		707882	0					
ANR	708151	PtrMemberAccess	p -> Value		707882	0					
ANR	708152	Identifier	p		707882	0					
ANR	708153	Identifier	Value		707882	1					
ANR	708154	BreakStatement	break ;	1668:20:46524:46529	707882	8	True				
ANR	708155	Label	case WRITE_BINARY :	1670:12:46544:46561	707882	9	True				
ANR	708156	Identifier	WRITE_BINARY		707882	0					
ANR	708157	ExpressionStatement	"Writef ( fp , ""\\t0x%B"" , atoi ( p -> Value ) )"	1671:20:46583:46620	707882	10	True				
ANR	708158	CallExpression	"Writef ( fp , ""\\t0x%B"" , atoi ( p -> Value ) )"		707882	0					
ANR	708159	Callee	Writef		707882	0					
ANR	708160	Identifier	Writef		707882	0					
ANR	708161	ArgumentList	fp		707882	1					
ANR	708162	Argument	fp		707882	0					
ANR	708163	Identifier	fp		707882	0					
ANR	708164	Argument	"""\\t0x%B"""		707882	1					
ANR	708165	PrimaryExpression	"""\\t0x%B"""		707882	0					
ANR	708166	Argument	atoi ( p -> Value )		707882	2					
ANR	708167	CallExpression	atoi ( p -> Value )		707882	0					
ANR	708168	Callee	atoi		707882	0					
ANR	708169	Identifier	atoi		707882	0					
ANR	708170	ArgumentList	p -> Value		707882	1					
ANR	708171	Argument	p -> Value		707882	0					
ANR	708172	PtrMemberAccess	p -> Value		707882	0					
ANR	708173	Identifier	p		707882	0					
ANR	708174	Identifier	Value		707882	1					
ANR	708175	BreakStatement	break ;	1672:20:46642:46647	707882	11	True				
ANR	708176	Label	case WRITE_PAIR :	1674:12:46662:46677	707882	12	True				
ANR	708177	Identifier	WRITE_PAIR		707882	0					
ANR	708178	ExpressionStatement	"Writef ( fp , ""\\t\\""%s,%s\\"""" , p -> Subkey , p -> Value )"	1675:20:46699:46745	707882	13	True				
ANR	708179	CallExpression	"Writef ( fp , ""\\t\\""%s,%s\\"""" , p -> Subkey , p -> Value )"		707882	0					
ANR	708180	Callee	Writef		707882	0					
ANR	708181	Identifier	Writef		707882	0					
ANR	708182	ArgumentList	fp		707882	1					
ANR	708183	Argument	fp		707882	0					
ANR	708184	Identifier	fp		707882	0					
ANR	708185	Argument	"""\\t\\""%s,%s\\"""""		707882	1					
ANR	708186	PrimaryExpression	"""\\t\\""%s,%s\\"""""		707882	0					
ANR	708187	Argument	p -> Subkey		707882	2					
ANR	708188	PtrMemberAccess	p -> Subkey		707882	0					
ANR	708189	Identifier	p		707882	0					
ANR	708190	Identifier	Subkey		707882	1					
ANR	708191	Argument	p -> Value		707882	3					
ANR	708192	PtrMemberAccess	p -> Value		707882	0					
ANR	708193	Identifier	p		707882	0					
ANR	708194	Identifier	Value		707882	1					
ANR	708195	BreakStatement	break ;	1676:20:46767:46772	707882	14	True				
ANR	708196	Label	default :	1678:12:46787:46794	707882	15	True				
ANR	708197	Identifier	default		707882	0					
ANR	708198	ExpressionStatement	"SynError ( it8 , ""Unknown write mode %d"" , p -> WriteAs )"	1678:21:46796:46847	707882	16	True				
ANR	708199	CallExpression	"SynError ( it8 , ""Unknown write mode %d"" , p -> WriteAs )"		707882	0					
ANR	708200	Callee	SynError		707882	0					
ANR	708201	Identifier	SynError		707882	0					
ANR	708202	ArgumentList	it8		707882	1					
ANR	708203	Argument	it8		707882	0					
ANR	708204	Identifier	it8		707882	0					
ANR	708205	Argument	"""Unknown write mode %d"""		707882	1					
ANR	708206	PrimaryExpression	"""Unknown write mode %d"""		707882	0					
ANR	708207	Argument	p -> WriteAs		707882	2					
ANR	708208	PtrMemberAccess	p -> WriteAs		707882	0					
ANR	708209	Identifier	p		707882	0					
ANR	708210	Identifier	WriteAs		707882	1					
ANR	708211	ReturnStatement	return ;	1679:21:46870:46876	707882	17	True				
ANR	708212	ExpressionStatement	"WriteStr ( fp , ""\\n"" )"	1683:8:46911:46930	707882	4	True				
ANR	708213	CallExpression	"WriteStr ( fp , ""\\n"" )"		707882	0					
ANR	708214	Callee	WriteStr		707882	0					
ANR	708215	Identifier	WriteStr		707882	0					
ANR	708216	ArgumentList	fp		707882	1					
ANR	708217	Argument	fp		707882	0					
ANR	708218	Identifier	fp		707882	0					
ANR	708219	Argument	"""\\n"""		707882	1					
ANR	708220	PrimaryExpression	"""\\n"""		707882	0					
ANR	708221	ReturnType	static void		707882	1					
ANR	708222	Identifier	WriteHeader		707882	2					
ANR	708223	ParameterList	"cmsIT8 * it8 , SAVESTREAM * fp"		707882	3					
ANR	708224	Parameter	cmsIT8 * it8	1611:17:45204:45214	707882	0	True				
ANR	708225	ParameterType	cmsIT8 *		707882	0					
ANR	708226	Identifier	it8		707882	1					
ANR	708227	Parameter	SAVESTREAM * fp	1611:30:45217:45230	707882	1	True				
ANR	708228	ParameterType	SAVESTREAM *		707882	0					
ANR	708229	Identifier	fp		707882	1					
ANR	708230	CFGEntryNode	ENTRY		707882		True				
ANR	708231	CFGExitNode	EXIT		707882		True				
ANR	708232	Symbol	atoi		707882						
ANR	708233	Symbol	* p -> Keyword		707882						
ANR	708234	Symbol	NULL		707882						
ANR	708235	Symbol	Pt		707882						
ANR	708236	Symbol	it8 -> ValidKeywords		707882						
ANR	708237	Symbol	p -> WriteAs		707882						
ANR	708238	Symbol	* it8		707882						
ANR	708239	Symbol	* Pt		707882						
ANR	708240	Symbol	fp		707882						
ANR	708241	Symbol	p -> Subkey		707882						
ANR	708242	Symbol	it8		707882						
ANR	708243	Symbol	p		707882						
ANR	708244	Symbol	GetTable		707882						
ANR	708245	Symbol	p -> Next		707882						
ANR	708246	Symbol	t		707882						
ANR	708247	Symbol	p -> Keyword		707882						
ANR	708248	Symbol	t -> HeaderList		707882						
ANR	708249	Symbol	WRITE_UNCOOKED		707882						
ANR	708250	Symbol	t -> SheetType		707882						
ANR	708251	Symbol	p -> Value		707882						
ANR	708252	Symbol	* p		707882						
ANR	708253	Symbol	* * p		707882						
ANR	708254	Symbol	IsAvailableOnList		707882						
ANR	708255	Symbol	* t		707882						
ANR	708256	Function	WriteDataFormat	1690:0:46969:47462							
ANR	708257	FunctionDef	"WriteDataFormat (SAVESTREAM * fp , cmsIT8 * it8)"		708256	0					
ANR	708258	CompoundStatement		1692:0:47026:47462	708256	0					
ANR	708259	IdentifierDeclStatement	"int i , nSamples ;"	1693:4:47032:47047	708256	0	True				
ANR	708260	IdentifierDecl	i		708256	0					
ANR	708261	IdentifierDeclType	int		708256	0					
ANR	708262	Identifier	i		708256	1					
ANR	708263	IdentifierDecl	nSamples		708256	1					
ANR	708264	IdentifierDeclType	int		708256	0					
ANR	708265	Identifier	nSamples		708256	1					
ANR	708266	IdentifierDeclStatement	TABLE * t = GetTable ( it8 ) ;	1694:4:47053:47077	708256	1	True				
ANR	708267	IdentifierDecl	* t = GetTable ( it8 )		708256	0					
ANR	708268	IdentifierDeclType	TABLE *		708256	0					
ANR	708269	Identifier	t		708256	1					
ANR	708270	AssignmentExpression	* t = GetTable ( it8 )		708256	2		=			
ANR	708271	Identifier	t		708256	0					
ANR	708272	CallExpression	GetTable ( it8 )		708256	1					
ANR	708273	Callee	GetTable		708256	0					
ANR	708274	Identifier	GetTable		708256	0					
ANR	708275	ArgumentList	it8		708256	1					
ANR	708276	Argument	it8		708256	0					
ANR	708277	Identifier	it8		708256	0					
ANR	708278	IfStatement	if ( ! t -> DataFormat )		708256	2					
ANR	708279	Condition	! t -> DataFormat	1696:8:47088:47103	708256	0	True				
ANR	708280	UnaryOperationExpression	! t -> DataFormat		708256	0					
ANR	708281	UnaryOperator	!		708256	0					
ANR	708282	PtrMemberAccess	t -> DataFormat		708256	1					
ANR	708283	Identifier	t		708256	0					
ANR	708284	Identifier	DataFormat		708256	1					
ANR	708285	ReturnStatement	return ;	1696:26:47106:47112	708256	1	True				
ANR	708286	ExpressionStatement	"WriteStr ( fp , ""BEGIN_DATA_FORMAT\\n"" )"	1698:7:47122:47157	708256	3	True				
ANR	708287	CallExpression	"WriteStr ( fp , ""BEGIN_DATA_FORMAT\\n"" )"		708256	0					
ANR	708288	Callee	WriteStr		708256	0					
ANR	708289	Identifier	WriteStr		708256	0					
ANR	708290	ArgumentList	fp		708256	1					
ANR	708291	Argument	fp		708256	0					
ANR	708292	Identifier	fp		708256	0					
ANR	708293	Argument	"""BEGIN_DATA_FORMAT\\n"""		708256	1					
ANR	708294	PrimaryExpression	"""BEGIN_DATA_FORMAT\\n"""		708256	0					
ANR	708295	ExpressionStatement	"WriteStr ( fp , "" "" )"	1699:7:47166:47183	708256	4	True				
ANR	708296	CallExpression	"WriteStr ( fp , "" "" )"		708256	0					
ANR	708297	Callee	WriteStr		708256	0					
ANR	708298	Identifier	WriteStr		708256	0					
ANR	708299	ArgumentList	fp		708256	1					
ANR	708300	Argument	fp		708256	0					
ANR	708301	Identifier	fp		708256	0					
ANR	708302	Argument	""" """		708256	1					
ANR	708303	PrimaryExpression	""" """		708256	0					
ANR	708304	ExpressionStatement	"nSamples = atoi ( cmsIT8GetProperty ( it8 , ""NUMBER_OF_FIELDS"" ) )"	1700:7:47192:47251	708256	5	True				
ANR	708305	AssignmentExpression	"nSamples = atoi ( cmsIT8GetProperty ( it8 , ""NUMBER_OF_FIELDS"" ) )"		708256	0		=			
ANR	708306	Identifier	nSamples		708256	0					
ANR	708307	CallExpression	"atoi ( cmsIT8GetProperty ( it8 , ""NUMBER_OF_FIELDS"" ) )"		708256	1					
ANR	708308	Callee	atoi		708256	0					
ANR	708309	Identifier	atoi		708256	0					
ANR	708310	ArgumentList	"cmsIT8GetProperty ( it8 , ""NUMBER_OF_FIELDS"" )"		708256	1					
ANR	708311	Argument	"cmsIT8GetProperty ( it8 , ""NUMBER_OF_FIELDS"" )"		708256	0					
ANR	708312	CallExpression	"cmsIT8GetProperty ( it8 , ""NUMBER_OF_FIELDS"" )"		708256	0					
ANR	708313	Callee	cmsIT8GetProperty		708256	0					
ANR	708314	Identifier	cmsIT8GetProperty		708256	0					
ANR	708315	ArgumentList	it8		708256	1					
ANR	708316	Argument	it8		708256	0					
ANR	708317	Identifier	it8		708256	0					
ANR	708318	Argument	"""NUMBER_OF_FIELDS"""		708256	1					
ANR	708319	PrimaryExpression	"""NUMBER_OF_FIELDS"""		708256	0					
ANR	708320	ForStatement	for ( i = 0 ; i < nSamples ; i ++ )		708256	6					
ANR	708321	ForInit	i = 0 ;	1702:12:47266:47271	708256	0	True				
ANR	708322	AssignmentExpression	i = 0		708256	0		=			
ANR	708323	Identifier	i		708256	0					
ANR	708324	PrimaryExpression	0		708256	1					
ANR	708325	Condition	i < nSamples	1702:19:47273:47284	708256	1	True				
ANR	708326	RelationalExpression	i < nSamples		708256	0		<			
ANR	708327	Identifier	i		708256	0					
ANR	708328	Identifier	nSamples		708256	1					
ANR	708329	PostIncDecOperationExpression	i ++	1702:33:47287:47289	708256	2	True				
ANR	708330	Identifier	i		708256	0					
ANR	708331	IncDec	++		708256	1					
ANR	708332	CompoundStatement		11:38:265:265	708256	3					
ANR	708333	ExpressionStatement	"WriteStr ( fp , t -> DataFormat [ i ] )"	1704:14:47309:47339	708256	0	True				
ANR	708334	CallExpression	"WriteStr ( fp , t -> DataFormat [ i ] )"		708256	0					
ANR	708335	Callee	WriteStr		708256	0					
ANR	708336	Identifier	WriteStr		708256	0					
ANR	708337	ArgumentList	fp		708256	1					
ANR	708338	Argument	fp		708256	0					
ANR	708339	Identifier	fp		708256	0					
ANR	708340	Argument	t -> DataFormat [ i ]		708256	1					
ANR	708341	ArrayIndexing	t -> DataFormat [ i ]		708256	0					
ANR	708342	PtrMemberAccess	t -> DataFormat		708256	0					
ANR	708343	Identifier	t		708256	0					
ANR	708344	Identifier	DataFormat		708256	1					
ANR	708345	Identifier	i		708256	1					
ANR	708346	ExpressionStatement	"WriteStr ( fp , ( ( i == ( nSamples - 1 ) ) ? ""\\n"" : ""\\t"" ) )"	1705:14:47355:47404	708256	1	True				
ANR	708347	CallExpression	"WriteStr ( fp , ( ( i == ( nSamples - 1 ) ) ? ""\\n"" : ""\\t"" ) )"		708256	0					
ANR	708348	Callee	WriteStr		708256	0					
ANR	708349	Identifier	WriteStr		708256	0					
ANR	708350	ArgumentList	fp		708256	1					
ANR	708351	Argument	fp		708256	0					
ANR	708352	Identifier	fp		708256	0					
ANR	708353	Argument	"( i == ( nSamples - 1 ) ) ? ""\\n"" : ""\\t"""		708256	1					
ANR	708354	ConditionalExpression	"( i == ( nSamples - 1 ) ) ? ""\\n"" : ""\\t"""		708256	0					
ANR	708355	Condition	i == ( nSamples - 1 )		708256	0					
ANR	708356	EqualityExpression	i == ( nSamples - 1 )		708256	0		==			
ANR	708357	Identifier	i		708256	0					
ANR	708358	AdditiveExpression	nSamples - 1		708256	1		-			
ANR	708359	Identifier	nSamples		708256	0					
ANR	708360	PrimaryExpression	1		708256	1					
ANR	708361	PrimaryExpression	"""\\n"""		708256	1					
ANR	708362	PrimaryExpression	"""\\t"""		708256	2					
ANR	708363	ExpressionStatement	"WriteStr ( fp , ""END_DATA_FORMAT\\n"" )"	1708:7:47426:47460	708256	7	True				
ANR	708364	CallExpression	"WriteStr ( fp , ""END_DATA_FORMAT\\n"" )"		708256	0					
ANR	708365	Callee	WriteStr		708256	0					
ANR	708366	Identifier	WriteStr		708256	0					
ANR	708367	ArgumentList	fp		708256	1					
ANR	708368	Argument	fp		708256	0					
ANR	708369	Identifier	fp		708256	0					
ANR	708370	Argument	"""END_DATA_FORMAT\\n"""		708256	1					
ANR	708371	PrimaryExpression	"""END_DATA_FORMAT\\n"""		708256	0					
ANR	708372	ReturnType	static void		708256	1					
ANR	708373	Identifier	WriteDataFormat		708256	2					
ANR	708374	ParameterList	"SAVESTREAM * fp , cmsIT8 * it8"		708256	3					
ANR	708375	Parameter	SAVESTREAM * fp	1691:21:46997:47010	708256	0	True				
ANR	708376	ParameterType	SAVESTREAM *		708256	0					
ANR	708377	Identifier	fp		708256	1					
ANR	708378	Parameter	cmsIT8 * it8	1691:37:47013:47023	708256	1	True				
ANR	708379	ParameterType	cmsIT8 *		708256	0					
ANR	708380	Identifier	it8		708256	1					
ANR	708381	CFGEntryNode	ENTRY		708256		True				
ANR	708382	CFGExitNode	EXIT		708256		True				
ANR	708383	Symbol	atoi		708256						
ANR	708384	Symbol	cmsIT8GetProperty		708256						
ANR	708385	Symbol	t -> DataFormat		708256						
ANR	708386	Symbol	i		708256						
ANR	708387	Symbol	fp		708256						
ANR	708388	Symbol	it8		708256						
ANR	708389	Symbol	GetTable		708256						
ANR	708390	Symbol	* t -> DataFormat		708256						
ANR	708391	Symbol	* i		708256						
ANR	708392	Symbol	t		708256						
ANR	708393	Symbol	* * t		708256						
ANR	708394	Symbol	nSamples		708256						
ANR	708395	Symbol	* t		708256						
ANR	708396	Function	WriteData	1713:0:47487:48557							
ANR	708397	FunctionDef	"WriteData (SAVESTREAM * fp , cmsIT8 * it8)"		708396	0					
ANR	708398	CompoundStatement		1715:0:47538:48557	708396	0					
ANR	708399	IdentifierDeclStatement	"int i , j ;"	1716:7:47547:47556	708396	0	True				
ANR	708400	IdentifierDecl	i		708396	0					
ANR	708401	IdentifierDeclType	int		708396	0					
ANR	708402	Identifier	i		708396	1					
ANR	708403	IdentifierDecl	j		708396	1					
ANR	708404	IdentifierDeclType	int		708396	0					
ANR	708405	Identifier	j		708396	1					
ANR	708406	IdentifierDeclStatement	TABLE * t = GetTable ( it8 ) ;	1717:7:47565:47589	708396	1	True				
ANR	708407	IdentifierDecl	* t = GetTable ( it8 )		708396	0					
ANR	708408	IdentifierDeclType	TABLE *		708396	0					
ANR	708409	Identifier	t		708396	1					
ANR	708410	AssignmentExpression	* t = GetTable ( it8 )		708396	2		=			
ANR	708411	Identifier	t		708396	0					
ANR	708412	CallExpression	GetTable ( it8 )		708396	1					
ANR	708413	Callee	GetTable		708396	0					
ANR	708414	Identifier	GetTable		708396	0					
ANR	708415	ArgumentList	it8		708396	1					
ANR	708416	Argument	it8		708396	0					
ANR	708417	Identifier	it8		708396	0					
ANR	708418	IfStatement	if ( ! t -> Data )		708396	2					
ANR	708419	Condition	! t -> Data	1719:11:47603:47610	708396	0	True				
ANR	708420	UnaryOperationExpression	! t -> Data		708396	0					
ANR	708421	UnaryOperator	!		708396	0					
ANR	708422	PtrMemberAccess	t -> Data		708396	1					
ANR	708423	Identifier	t		708396	0					
ANR	708424	Identifier	Data		708396	1					
ANR	708425	ReturnStatement	return ;	1719:21:47613:47619	708396	1	True				
ANR	708426	ExpressionStatement	"WriteStr ( fp , ""BEGIN_DATA\\n"" )"	1721:7:47629:47658	708396	3	True				
ANR	708427	CallExpression	"WriteStr ( fp , ""BEGIN_DATA\\n"" )"		708396	0					
ANR	708428	Callee	WriteStr		708396	0					
ANR	708429	Identifier	WriteStr		708396	0					
ANR	708430	ArgumentList	fp		708396	1					
ANR	708431	Argument	fp		708396	0					
ANR	708432	Identifier	fp		708396	0					
ANR	708433	Argument	"""BEGIN_DATA\\n"""		708396	1					
ANR	708434	PrimaryExpression	"""BEGIN_DATA\\n"""		708396	0					
ANR	708435	ExpressionStatement	"t -> nPatches = atoi ( cmsIT8GetProperty ( it8 , ""NUMBER_OF_SETS"" ) )"	1723:7:47668:47728	708396	4	True				
ANR	708436	AssignmentExpression	"t -> nPatches = atoi ( cmsIT8GetProperty ( it8 , ""NUMBER_OF_SETS"" ) )"		708396	0		=			
ANR	708437	PtrMemberAccess	t -> nPatches		708396	0					
ANR	708438	Identifier	t		708396	0					
ANR	708439	Identifier	nPatches		708396	1					
ANR	708440	CallExpression	"atoi ( cmsIT8GetProperty ( it8 , ""NUMBER_OF_SETS"" ) )"		708396	1					
ANR	708441	Callee	atoi		708396	0					
ANR	708442	Identifier	atoi		708396	0					
ANR	708443	ArgumentList	"cmsIT8GetProperty ( it8 , ""NUMBER_OF_SETS"" )"		708396	1					
ANR	708444	Argument	"cmsIT8GetProperty ( it8 , ""NUMBER_OF_SETS"" )"		708396	0					
ANR	708445	CallExpression	"cmsIT8GetProperty ( it8 , ""NUMBER_OF_SETS"" )"		708396	0					
ANR	708446	Callee	cmsIT8GetProperty		708396	0					
ANR	708447	Identifier	cmsIT8GetProperty		708396	0					
ANR	708448	ArgumentList	it8		708396	1					
ANR	708449	Argument	it8		708396	0					
ANR	708450	Identifier	it8		708396	0					
ANR	708451	Argument	"""NUMBER_OF_SETS"""		708396	1					
ANR	708452	PrimaryExpression	"""NUMBER_OF_SETS"""		708396	0					
ANR	708453	ForStatement	for ( i = 0 ; i < t -> nPatches ; i ++ )		708396	5					
ANR	708454	ForInit	i = 0 ;	1725:12:47743:47748	708396	0	True				
ANR	708455	AssignmentExpression	i = 0		708396	0		=			
ANR	708456	Identifier	i		708396	0					
ANR	708457	PrimaryExpression	0		708396	1					
ANR	708458	Condition	i < t -> nPatches	1725:19:47750:47765	708396	1	True				
ANR	708459	RelationalExpression	i < t -> nPatches		708396	0		<			
ANR	708460	Identifier	i		708396	0					
ANR	708461	PtrMemberAccess	t -> nPatches		708396	1					
ANR	708462	Identifier	t		708396	0					
ANR	708463	Identifier	nPatches		708396	1					
ANR	708464	PostIncDecOperationExpression	i ++	1725:37:47768:47770	708396	2	True				
ANR	708465	Identifier	i		708396	0					
ANR	708466	IncDec	++		708396	1					
ANR	708467	CompoundStatement		11:42:234:234	708396	3					
ANR	708468	ExpressionStatement	"WriteStr ( fp , "" "" )"	1727:14:47790:47807	708396	0	True				
ANR	708469	CallExpression	"WriteStr ( fp , "" "" )"		708396	0					
ANR	708470	Callee	WriteStr		708396	0					
ANR	708471	Identifier	WriteStr		708396	0					
ANR	708472	ArgumentList	fp		708396	1					
ANR	708473	Argument	fp		708396	0					
ANR	708474	Identifier	fp		708396	0					
ANR	708475	Argument	""" """		708396	1					
ANR	708476	PrimaryExpression	""" """		708396	0					
ANR	708477	ForStatement	for ( j = 0 ; j < t -> nSamples ; j ++ )		708396	1					
ANR	708478	ForInit	j = 0 ;	1729:19:47829:47834	708396	0	True				
ANR	708479	AssignmentExpression	j = 0		708396	0		=			
ANR	708480	Identifier	j		708396	0					
ANR	708481	PrimaryExpression	0		708396	1					
ANR	708482	Condition	j < t -> nSamples	1729:26:47836:47850	708396	1	True				
ANR	708483	RelationalExpression	j < t -> nSamples		708396	0		<			
ANR	708484	Identifier	j		708396	0					
ANR	708485	PtrMemberAccess	t -> nSamples		708396	1					
ANR	708486	Identifier	t		708396	0					
ANR	708487	Identifier	nSamples		708396	1					
ANR	708488	PostIncDecOperationExpression	j ++	1729:43:47853:47855	708396	2	True				
ANR	708489	Identifier	j		708396	0					
ANR	708490	IncDec	++		708396	1					
ANR	708491	CompoundStatement		17:21:343:379	708396	3					
ANR	708492	IdentifierDeclStatement	char * ptr = t -> Data [ i * t -> nSamples + j ] ;	1731:21:47882:47918	708396	0	True				
ANR	708493	IdentifierDecl	* ptr = t -> Data [ i * t -> nSamples + j ]		708396	0					
ANR	708494	IdentifierDeclType	char *		708396	0					
ANR	708495	Identifier	ptr		708396	1					
ANR	708496	AssignmentExpression	* ptr = t -> Data [ i * t -> nSamples + j ]		708396	2		=			
ANR	708497	Identifier	ptr		708396	0					
ANR	708498	ArrayIndexing	t -> Data [ i * t -> nSamples + j ]		708396	1					
ANR	708499	PtrMemberAccess	t -> Data		708396	0					
ANR	708500	Identifier	t		708396	0					
ANR	708501	Identifier	Data		708396	1					
ANR	708502	AdditiveExpression	i * t -> nSamples + j		708396	1		+			
ANR	708503	MultiplicativeExpression	i * t -> nSamples		708396	0		*			
ANR	708504	Identifier	i		708396	0					
ANR	708505	PtrMemberAccess	t -> nSamples		708396	1					
ANR	708506	Identifier	t		708396	0					
ANR	708507	Identifier	nSamples		708396	1					
ANR	708508	Identifier	j		708396	1					
ANR	708509	IfStatement	if ( ptr == NULL )		708396	1					
ANR	708510	Condition	ptr == NULL	1733:25:47946:47956	708396	0	True				
ANR	708511	EqualityExpression	ptr == NULL		708396	0		==			
ANR	708512	Identifier	ptr		708396	0					
ANR	708513	Identifier	NULL		708396	1					
ANR	708514	ExpressionStatement	"WriteStr ( fp , ""\\""\\"""" )"	1733:38:47959:47979	708396	1	True				
ANR	708515	CallExpression	"WriteStr ( fp , ""\\""\\"""" )"		708396	0					
ANR	708516	Callee	WriteStr		708396	0					
ANR	708517	Identifier	WriteStr		708396	0					
ANR	708518	ArgumentList	fp		708396	1					
ANR	708519	Argument	fp		708396	0					
ANR	708520	Identifier	fp		708396	0					
ANR	708521	Argument	"""\\""\\"""""		708396	1					
ANR	708522	PrimaryExpression	"""\\""\\"""""		708396	0					
ANR	708523	ElseStatement	else		708396	0					
ANR	708524	CompoundStatement		20:26:468:468	708396	0					
ANR	708525	IfStatement	"if ( strchr ( ptr , ' ' ) != NULL )"		708396	0					
ANR	708526	Condition	"strchr ( ptr , ' ' ) != NULL"	1737:29:48118:48141	708396	0	True				
ANR	708527	EqualityExpression	"strchr ( ptr , ' ' ) != NULL"		708396	0		!=			
ANR	708528	CallExpression	"strchr ( ptr , ' ' )"		708396	0					
ANR	708529	Callee	strchr		708396	0					
ANR	708530	Identifier	strchr		708396	0					
ANR	708531	ArgumentList	ptr		708396	1					
ANR	708532	Argument	ptr		708396	0					
ANR	708533	Identifier	ptr		708396	0					
ANR	708534	Argument	' '		708396	1					
ANR	708535	PrimaryExpression	' '		708396	0					
ANR	708536	Identifier	NULL		708396	1					
ANR	708537	CompoundStatement		23:55:605:605	708396	1					
ANR	708538	ExpressionStatement	"WriteStr ( fp , ""\\"""" )"	1739:29:48176:48194	708396	0	True				
ANR	708539	CallExpression	"WriteStr ( fp , ""\\"""" )"		708396	0					
ANR	708540	Callee	WriteStr		708396	0					
ANR	708541	Identifier	WriteStr		708396	0					
ANR	708542	ArgumentList	fp		708396	1					
ANR	708543	Argument	fp		708396	0					
ANR	708544	Identifier	fp		708396	0					
ANR	708545	Argument	"""\\"""""		708396	1					
ANR	708546	PrimaryExpression	"""\\"""""		708396	0					
ANR	708547	ExpressionStatement	"WriteStr ( fp , ptr )"	1740:29:48225:48242	708396	1	True				
ANR	708548	CallExpression	"WriteStr ( fp , ptr )"		708396	0					
ANR	708549	Callee	WriteStr		708396	0					
ANR	708550	Identifier	WriteStr		708396	0					
ANR	708551	ArgumentList	fp		708396	1					
ANR	708552	Argument	fp		708396	0					
ANR	708553	Identifier	fp		708396	0					
ANR	708554	Argument	ptr		708396	1					
ANR	708555	Identifier	ptr		708396	0					
ANR	708556	ExpressionStatement	"WriteStr ( fp , ""\\"""" )"	1741:29:48273:48291	708396	2	True				
ANR	708557	CallExpression	"WriteStr ( fp , ""\\"""" )"		708396	0					
ANR	708558	Callee	WriteStr		708396	0					
ANR	708559	Identifier	WriteStr		708396	0					
ANR	708560	ArgumentList	fp		708396	1					
ANR	708561	Argument	fp		708396	0					
ANR	708562	Identifier	fp		708396	0					
ANR	708563	Argument	"""\\"""""		708396	1					
ANR	708564	PrimaryExpression	"""\\"""""		708396	0					
ANR	708565	ElseStatement	else		708396	0					
ANR	708566	ExpressionStatement	"WriteStr ( fp , ptr )"	1744:28:48378:48395	708396	0	True				
ANR	708567	CallExpression	"WriteStr ( fp , ptr )"		708396	0					
ANR	708568	Callee	WriteStr		708396	0					
ANR	708569	Identifier	WriteStr		708396	0					
ANR	708570	ArgumentList	fp		708396	1					
ANR	708571	Argument	fp		708396	0					
ANR	708572	Identifier	fp		708396	0					
ANR	708573	Argument	ptr		708396	1					
ANR	708574	Identifier	ptr		708396	0					
ANR	708575	ExpressionStatement	"WriteStr ( fp , ( ( j == ( t -> nSamples - 1 ) ) ? ""\\n"" : ""\\t"" ) )"	1747:21:48442:48494	708396	2	True				
ANR	708576	CallExpression	"WriteStr ( fp , ( ( j == ( t -> nSamples - 1 ) ) ? ""\\n"" : ""\\t"" ) )"		708396	0					
ANR	708577	Callee	WriteStr		708396	0					
ANR	708578	Identifier	WriteStr		708396	0					
ANR	708579	ArgumentList	fp		708396	1					
ANR	708580	Argument	fp		708396	0					
ANR	708581	Identifier	fp		708396	0					
ANR	708582	Argument	"( j == ( t -> nSamples - 1 ) ) ? ""\\n"" : ""\\t"""		708396	1					
ANR	708583	ConditionalExpression	"( j == ( t -> nSamples - 1 ) ) ? ""\\n"" : ""\\t"""		708396	0					
ANR	708584	Condition	j == ( t -> nSamples - 1 )		708396	0					
ANR	708585	EqualityExpression	j == ( t -> nSamples - 1 )		708396	0		==			
ANR	708586	Identifier	j		708396	0					
ANR	708587	AdditiveExpression	t -> nSamples - 1		708396	1		-			
ANR	708588	PtrMemberAccess	t -> nSamples		708396	0					
ANR	708589	Identifier	t		708396	0					
ANR	708590	Identifier	nSamples		708396	1					
ANR	708591	PrimaryExpression	1		708396	1					
ANR	708592	PrimaryExpression	"""\\n"""		708396	1					
ANR	708593	PrimaryExpression	"""\\t"""		708396	2					
ANR	708594	ExpressionStatement	"WriteStr ( fp , ""END_DATA\\n"" )"	1750:7:48528:48555	708396	6	True				
ANR	708595	CallExpression	"WriteStr ( fp , ""END_DATA\\n"" )"		708396	0					
ANR	708596	Callee	WriteStr		708396	0					
ANR	708597	Identifier	WriteStr		708396	0					
ANR	708598	ArgumentList	fp		708396	1					
ANR	708599	Argument	fp		708396	0					
ANR	708600	Identifier	fp		708396	0					
ANR	708601	Argument	"""END_DATA\\n"""		708396	1					
ANR	708602	PrimaryExpression	"""END_DATA\\n"""		708396	0					
ANR	708603	ReturnType	static void		708396	1					
ANR	708604	Identifier	WriteData		708396	2					
ANR	708605	ParameterList	"SAVESTREAM * fp , cmsIT8 * it8"		708396	3					
ANR	708606	Parameter	SAVESTREAM * fp	1714:15:47509:47522	708396	0	True				
ANR	708607	ParameterType	SAVESTREAM *		708396	0					
ANR	708608	Identifier	fp		708396	1					
ANR	708609	Parameter	cmsIT8 * it8	1714:31:47525:47535	708396	1	True				
ANR	708610	ParameterType	cmsIT8 *		708396	0					
ANR	708611	Identifier	it8		708396	1					
ANR	708612	CFGEntryNode	ENTRY		708396		True				
ANR	708613	CFGExitNode	EXIT		708396		True				
ANR	708614	Symbol	atoi		708396						
ANR	708615	Symbol	cmsIT8GetProperty		708396						
ANR	708616	Symbol	t -> nSamples		708396						
ANR	708617	Symbol	t -> nPatches		708396						
ANR	708618	Symbol	NULL		708396						
ANR	708619	Symbol	i		708396						
ANR	708620	Symbol	strchr		708396						
ANR	708621	Symbol	fp		708396						
ANR	708622	Symbol	j		708396						
ANR	708623	Symbol	it8		708396						
ANR	708624	Symbol	ptr		708396						
ANR	708625	Symbol	GetTable		708396						
ANR	708626	Symbol	* t -> nSamples		708396						
ANR	708627	Symbol	* i		708396						
ANR	708628	Symbol	t		708396						
ANR	708629	Symbol	* t -> Data		708396						
ANR	708630	Symbol	* j		708396						
ANR	708631	Symbol	* * t		708396						
ANR	708632	Symbol	t -> Data		708396						
ANR	708633	Symbol	* t		708396						
ANR	708634	Function	cmsIT8SaveToFile	1756:0:48582:49103							
ANR	708635	FunctionDef	"cmsIT8SaveToFile (cmsHANDLE hIT8 , const char * cFileName)"		708634	0					
ANR	708636	CompoundStatement		1757:0:48656:49103	708634	0					
ANR	708637	IdentifierDeclStatement	SAVESTREAM sd ;	1758:4:48662:48675	708634	0	True				
ANR	708638	IdentifierDecl	sd		708634	0					
ANR	708639	IdentifierDeclType	SAVESTREAM		708634	0					
ANR	708640	Identifier	sd		708634	1					
ANR	708641	IdentifierDeclStatement	cmsUInt32Number i ;	1759:4:48681:48698	708634	1	True				
ANR	708642	IdentifierDecl	i		708634	0					
ANR	708643	IdentifierDeclType	cmsUInt32Number		708634	0					
ANR	708644	Identifier	i		708634	1					
ANR	708645	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	1760:4:48704:48732	708634	2	True				
ANR	708646	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		708634	0					
ANR	708647	IdentifierDeclType	cmsIT8 *		708634	0					
ANR	708648	Identifier	it8		708634	1					
ANR	708649	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		708634	2		=			
ANR	708650	Identifier	it8		708634	0					
ANR	708651	CastExpression	( cmsIT8 * ) hIT8		708634	1					
ANR	708652	CastTarget	cmsIT8 *		708634	0					
ANR	708653	Identifier	hIT8		708634	1					
ANR	708654	ExpressionStatement	"memset ( & sd , 0 , sizeof ( sd ) )"	1762:4:48739:48765	708634	3	True				
ANR	708655	CallExpression	"memset ( & sd , 0 , sizeof ( sd ) )"		708634	0					
ANR	708656	Callee	memset		708634	0					
ANR	708657	Identifier	memset		708634	0					
ANR	708658	ArgumentList	& sd		708634	1					
ANR	708659	Argument	& sd		708634	0					
ANR	708660	UnaryOperationExpression	& sd		708634	0					
ANR	708661	UnaryOperator	&		708634	0					
ANR	708662	Identifier	sd		708634	1					
ANR	708663	Argument	0		708634	1					
ANR	708664	PrimaryExpression	0		708634	0					
ANR	708665	Argument	sizeof ( sd )		708634	2					
ANR	708666	SizeofExpression	sizeof ( sd )		708634	0					
ANR	708667	Sizeof	sizeof		708634	0					
ANR	708668	SizeofOperand	sd		708634	1					
ANR	708669	ExpressionStatement	"sd . stream = fopen ( cFileName , ""wt"" )"	1764:4:48772:48806	708634	4	True				
ANR	708670	AssignmentExpression	"sd . stream = fopen ( cFileName , ""wt"" )"		708634	0		=			
ANR	708671	MemberAccess	sd . stream		708634	0					
ANR	708672	Identifier	sd		708634	0					
ANR	708673	Identifier	stream		708634	1					
ANR	708674	CallExpression	"fopen ( cFileName , ""wt"" )"		708634	1					
ANR	708675	Callee	fopen		708634	0					
ANR	708676	Identifier	fopen		708634	0					
ANR	708677	ArgumentList	cFileName		708634	1					
ANR	708678	Argument	cFileName		708634	0					
ANR	708679	Identifier	cFileName		708634	0					
ANR	708680	Argument	"""wt"""		708634	1					
ANR	708681	PrimaryExpression	"""wt"""		708634	0					
ANR	708682	IfStatement	if ( ! sd . stream )		708634	5					
ANR	708683	Condition	! sd . stream	1765:8:48816:48825	708634	0	True				
ANR	708684	UnaryOperationExpression	! sd . stream		708634	0					
ANR	708685	UnaryOperator	!		708634	0					
ANR	708686	MemberAccess	sd . stream		708634	1					
ANR	708687	Identifier	sd		708634	0					
ANR	708688	Identifier	stream		708634	1					
ANR	708689	ReturnStatement	return FALSE ;	1765:20:48828:48840	708634	1	True				
ANR	708690	Identifier	FALSE		708634	0					
ANR	708691	ForStatement	for ( i = 0 ; i < it8 -> TablesCount ; i ++ )		708634	6					
ANR	708692	ForInit	i = 0 ;	1767:9:48852:48855	708634	0	True				
ANR	708693	AssignmentExpression	i = 0		708634	0		=			
ANR	708694	Identifier	i		708634	0					
ANR	708695	PrimaryExpression	0		708634	1					
ANR	708696	Condition	i < it8 -> TablesCount	1767:14:48857:48877	708634	1	True				
ANR	708697	RelationalExpression	i < it8 -> TablesCount		708634	0		<			
ANR	708698	Identifier	i		708634	0					
ANR	708699	PtrMemberAccess	it8 -> TablesCount		708634	1					
ANR	708700	Identifier	it8		708634	0					
ANR	708701	Identifier	TablesCount		708634	1					
ANR	708702	PostIncDecOperationExpression	i ++	1767:37:48880:48882	708634	2	True				
ANR	708703	Identifier	i		708634	0					
ANR	708704	IncDec	++		708634	1					
ANR	708705	CompoundStatement		11:42:228:228	708634	3					
ANR	708706	ExpressionStatement	"cmsIT8SetTable ( hIT8 , i )"	1769:12:48900:48923	708634	0	True				
ANR	708707	CallExpression	"cmsIT8SetTable ( hIT8 , i )"		708634	0					
ANR	708708	Callee	cmsIT8SetTable		708634	0					
ANR	708709	Identifier	cmsIT8SetTable		708634	0					
ANR	708710	ArgumentList	hIT8		708634	1					
ANR	708711	Argument	hIT8		708634	0					
ANR	708712	Identifier	hIT8		708634	0					
ANR	708713	Argument	i		708634	1					
ANR	708714	Identifier	i		708634	0					
ANR	708715	ExpressionStatement	"WriteHeader ( it8 , & sd )"	1770:12:48937:48958	708634	1	True				
ANR	708716	CallExpression	"WriteHeader ( it8 , & sd )"		708634	0					
ANR	708717	Callee	WriteHeader		708634	0					
ANR	708718	Identifier	WriteHeader		708634	0					
ANR	708719	ArgumentList	it8		708634	1					
ANR	708720	Argument	it8		708634	0					
ANR	708721	Identifier	it8		708634	0					
ANR	708722	Argument	& sd		708634	1					
ANR	708723	UnaryOperationExpression	& sd		708634	0					
ANR	708724	UnaryOperator	&		708634	0					
ANR	708725	Identifier	sd		708634	1					
ANR	708726	ExpressionStatement	"WriteDataFormat ( & sd , it8 )"	1771:12:48972:48997	708634	2	True				
ANR	708727	CallExpression	"WriteDataFormat ( & sd , it8 )"		708634	0					
ANR	708728	Callee	WriteDataFormat		708634	0					
ANR	708729	Identifier	WriteDataFormat		708634	0					
ANR	708730	ArgumentList	& sd		708634	1					
ANR	708731	Argument	& sd		708634	0					
ANR	708732	UnaryOperationExpression	& sd		708634	0					
ANR	708733	UnaryOperator	&		708634	0					
ANR	708734	Identifier	sd		708634	1					
ANR	708735	Argument	it8		708634	1					
ANR	708736	Identifier	it8		708634	0					
ANR	708737	ExpressionStatement	"WriteData ( & sd , it8 )"	1772:12:49011:49030	708634	3	True				
ANR	708738	CallExpression	"WriteData ( & sd , it8 )"		708634	0					
ANR	708739	Callee	WriteData		708634	0					
ANR	708740	Identifier	WriteData		708634	0					
ANR	708741	ArgumentList	& sd		708634	1					
ANR	708742	Argument	& sd		708634	0					
ANR	708743	UnaryOperationExpression	& sd		708634	0					
ANR	708744	UnaryOperator	&		708634	0					
ANR	708745	Identifier	sd		708634	1					
ANR	708746	Argument	it8		708634	1					
ANR	708747	Identifier	it8		708634	0					
ANR	708748	IfStatement	if ( fclose ( sd . stream ) != 0 )		708634	7					
ANR	708749	Condition	fclose ( sd . stream ) != 0	1775:8:49047:49068	708634	0	True				
ANR	708750	EqualityExpression	fclose ( sd . stream ) != 0		708634	0		!=			
ANR	708751	CallExpression	fclose ( sd . stream )		708634	0					
ANR	708752	Callee	fclose		708634	0					
ANR	708753	Identifier	fclose		708634	0					
ANR	708754	ArgumentList	sd . stream		708634	1					
ANR	708755	Argument	sd . stream		708634	0					
ANR	708756	MemberAccess	sd . stream		708634	0					
ANR	708757	Identifier	sd		708634	0					
ANR	708758	Identifier	stream		708634	1					
ANR	708759	PrimaryExpression	0		708634	1					
ANR	708760	ReturnStatement	return FALSE ;	1775:32:49071:49083	708634	1	True				
ANR	708761	Identifier	FALSE		708634	0					
ANR	708762	ReturnStatement	return TRUE ;	1777:4:49090:49101	708634	8	True				
ANR	708763	Identifier	TRUE		708634	0					
ANR	708764	ReturnType	cmsBool CMSEXPORT		708634	1					
ANR	708765	Identifier	cmsIT8SaveToFile		708634	2					
ANR	708766	ParameterList	"cmsHANDLE hIT8 , const char * cFileName"		708634	3					
ANR	708767	Parameter	cmsHANDLE hIT8	1756:35:48617:48630	708634	0	True				
ANR	708768	ParameterType	cmsHANDLE		708634	0					
ANR	708769	Identifier	hIT8		708634	1					
ANR	708770	Parameter	const char * cFileName	1756:51:48633:48653	708634	1	True				
ANR	708771	ParameterType	const char *		708634	0					
ANR	708772	Identifier	cFileName		708634	1					
ANR	708773	CFGEntryNode	ENTRY		708634		True				
ANR	708774	CFGExitNode	EXIT		708634		True				
ANR	708775	Symbol	fopen		708634						
ANR	708776	Symbol	fclose		708634						
ANR	708777	Symbol	* it8		708634						
ANR	708778	Symbol	i		708634						
ANR	708779	Symbol	TRUE		708634						
ANR	708780	Symbol	it8		708634						
ANR	708781	Symbol	sd . stream		708634						
ANR	708782	Symbol	sd		708634						
ANR	708783	Symbol	hIT8		708634						
ANR	708784	Symbol	it8 -> TablesCount		708634						
ANR	708785	Symbol	& sd		708634						
ANR	708786	Symbol	FALSE		708634						
ANR	708787	Symbol	cFileName		708634						
ANR	708788	Function	cmsIT8SaveToMem	1782:0:49126:49902							
ANR	708789	FunctionDef	"cmsIT8SaveToMem (cmsHANDLE hIT8 , void * MemPtr , cmsUInt32Number * BytesNeeded)"		708788	0					
ANR	708790	CompoundStatement		1783:0:49220:49902	708788	0					
ANR	708791	IdentifierDeclStatement	SAVESTREAM sd ;	1784:4:49226:49239	708788	0	True				
ANR	708792	IdentifierDecl	sd		708788	0					
ANR	708793	IdentifierDeclType	SAVESTREAM		708788	0					
ANR	708794	Identifier	sd		708788	1					
ANR	708795	IdentifierDeclStatement	cmsUInt32Number i ;	1785:4:49245:49262	708788	1	True				
ANR	708796	IdentifierDecl	i		708788	0					
ANR	708797	IdentifierDeclType	cmsUInt32Number		708788	0					
ANR	708798	Identifier	i		708788	1					
ANR	708799	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	1786:4:49268:49296	708788	2	True				
ANR	708800	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		708788	0					
ANR	708801	IdentifierDeclType	cmsIT8 *		708788	0					
ANR	708802	Identifier	it8		708788	1					
ANR	708803	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		708788	2		=			
ANR	708804	Identifier	it8		708788	0					
ANR	708805	CastExpression	( cmsIT8 * ) hIT8		708788	1					
ANR	708806	CastTarget	cmsIT8 *		708788	0					
ANR	708807	Identifier	hIT8		708788	1					
ANR	708808	ExpressionStatement	"memset ( & sd , 0 , sizeof ( sd ) )"	1788:4:49303:49329	708788	3	True				
ANR	708809	CallExpression	"memset ( & sd , 0 , sizeof ( sd ) )"		708788	0					
ANR	708810	Callee	memset		708788	0					
ANR	708811	Identifier	memset		708788	0					
ANR	708812	ArgumentList	& sd		708788	1					
ANR	708813	Argument	& sd		708788	0					
ANR	708814	UnaryOperationExpression	& sd		708788	0					
ANR	708815	UnaryOperator	&		708788	0					
ANR	708816	Identifier	sd		708788	1					
ANR	708817	Argument	0		708788	1					
ANR	708818	PrimaryExpression	0		708788	0					
ANR	708819	Argument	sizeof ( sd )		708788	2					
ANR	708820	SizeofExpression	sizeof ( sd )		708788	0					
ANR	708821	Sizeof	sizeof		708788	0					
ANR	708822	SizeofOperand	sd		708788	1					
ANR	708823	ExpressionStatement	sd . stream = NULL	1790:4:49336:49352	708788	4	True				
ANR	708824	AssignmentExpression	sd . stream = NULL		708788	0		=			
ANR	708825	MemberAccess	sd . stream		708788	0					
ANR	708826	Identifier	sd		708788	0					
ANR	708827	Identifier	stream		708788	1					
ANR	708828	Identifier	NULL		708788	1					
ANR	708829	ExpressionStatement	sd . Base = ( cmsUInt8Number * ) MemPtr	1791:4:49358:49395	708788	5	True				
ANR	708830	AssignmentExpression	sd . Base = ( cmsUInt8Number * ) MemPtr		708788	0		=			
ANR	708831	MemberAccess	sd . Base		708788	0					
ANR	708832	Identifier	sd		708788	0					
ANR	708833	Identifier	Base		708788	1					
ANR	708834	CastExpression	( cmsUInt8Number * ) MemPtr		708788	1					
ANR	708835	CastTarget	cmsUInt8Number *		708788	0					
ANR	708836	Identifier	MemPtr		708788	1					
ANR	708837	ExpressionStatement	sd . Ptr = sd . Base	1792:4:49401:49420	708788	6	True				
ANR	708838	AssignmentExpression	sd . Ptr = sd . Base		708788	0		=			
ANR	708839	MemberAccess	sd . Ptr		708788	0					
ANR	708840	Identifier	sd		708788	0					
ANR	708841	Identifier	Ptr		708788	1					
ANR	708842	MemberAccess	sd . Base		708788	1					
ANR	708843	Identifier	sd		708788	0					
ANR	708844	Identifier	Base		708788	1					
ANR	708845	ExpressionStatement	sd . Used = 0	1794:4:49427:49438	708788	7	True				
ANR	708846	AssignmentExpression	sd . Used = 0		708788	0		=			
ANR	708847	MemberAccess	sd . Used		708788	0					
ANR	708848	Identifier	sd		708788	0					
ANR	708849	Identifier	Used		708788	1					
ANR	708850	PrimaryExpression	0		708788	1					
ANR	708851	IfStatement	if ( sd . Base )		708788	8					
ANR	708852	Condition	sd . Base	1796:8:49449:49455	708788	0	True				
ANR	708853	MemberAccess	sd . Base		708788	0					
ANR	708854	Identifier	sd		708788	0					
ANR	708855	Identifier	Base		708788	1					
ANR	708856	ExpressionStatement	sd . Max = * BytesNeeded	1797:8:49466:49488	708788	1	True				
ANR	708857	AssignmentExpression	sd . Max = * BytesNeeded		708788	0		=			
ANR	708858	MemberAccess	sd . Max		708788	0					
ANR	708859	Identifier	sd		708788	0					
ANR	708860	Identifier	Max		708788	1					
ANR	708861	UnaryOperationExpression	* BytesNeeded		708788	1					
ANR	708862	UnaryOperator	*		708788	0					
ANR	708863	Identifier	BytesNeeded		708788	1					
ANR	708864	ElseStatement	else		708788	0					
ANR	708865	ExpressionStatement	sd . Max = 0	1799:8:49531:49542	708788	0	True				
ANR	708866	AssignmentExpression	sd . Max = 0		708788	0		=			
ANR	708867	MemberAccess	sd . Max		708788	0					
ANR	708868	Identifier	sd		708788	0					
ANR	708869	Identifier	Max		708788	1					
ANR	708870	PrimaryExpression	0		708788	1					
ANR	708871	ForStatement	for ( i = 0 ; i < it8 -> TablesCount ; i ++ )		708788	9					
ANR	708872	ForInit	i = 0 ;	1801:9:49603:49606	708788	0	True				
ANR	708873	AssignmentExpression	i = 0		708788	0		=			
ANR	708874	Identifier	i		708788	0					
ANR	708875	PrimaryExpression	0		708788	1					
ANR	708876	Condition	i < it8 -> TablesCount	1801:14:49608:49628	708788	1	True				
ANR	708877	RelationalExpression	i < it8 -> TablesCount		708788	0		<			
ANR	708878	Identifier	i		708788	0					
ANR	708879	PtrMemberAccess	it8 -> TablesCount		708788	1					
ANR	708880	Identifier	it8		708788	0					
ANR	708881	Identifier	TablesCount		708788	1					
ANR	708882	PostIncDecOperationExpression	i ++	1801:37:49631:49633	708788	2	True				
ANR	708883	Identifier	i		708788	0					
ANR	708884	IncDec	++		708788	1					
ANR	708885	CompoundStatement		19:42:415:415	708788	3					
ANR	708886	ExpressionStatement	"cmsIT8SetTable ( hIT8 , i )"	1803:8:49647:49670	708788	0	True				
ANR	708887	CallExpression	"cmsIT8SetTable ( hIT8 , i )"		708788	0					
ANR	708888	Callee	cmsIT8SetTable		708788	0					
ANR	708889	Identifier	cmsIT8SetTable		708788	0					
ANR	708890	ArgumentList	hIT8		708788	1					
ANR	708891	Argument	hIT8		708788	0					
ANR	708892	Identifier	hIT8		708788	0					
ANR	708893	Argument	i		708788	1					
ANR	708894	Identifier	i		708788	0					
ANR	708895	ExpressionStatement	"WriteHeader ( it8 , & sd )"	1804:8:49680:49701	708788	1	True				
ANR	708896	CallExpression	"WriteHeader ( it8 , & sd )"		708788	0					
ANR	708897	Callee	WriteHeader		708788	0					
ANR	708898	Identifier	WriteHeader		708788	0					
ANR	708899	ArgumentList	it8		708788	1					
ANR	708900	Argument	it8		708788	0					
ANR	708901	Identifier	it8		708788	0					
ANR	708902	Argument	& sd		708788	1					
ANR	708903	UnaryOperationExpression	& sd		708788	0					
ANR	708904	UnaryOperator	&		708788	0					
ANR	708905	Identifier	sd		708788	1					
ANR	708906	ExpressionStatement	"WriteDataFormat ( & sd , it8 )"	1805:8:49711:49736	708788	2	True				
ANR	708907	CallExpression	"WriteDataFormat ( & sd , it8 )"		708788	0					
ANR	708908	Callee	WriteDataFormat		708788	0					
ANR	708909	Identifier	WriteDataFormat		708788	0					
ANR	708910	ArgumentList	& sd		708788	1					
ANR	708911	Argument	& sd		708788	0					
ANR	708912	UnaryOperationExpression	& sd		708788	0					
ANR	708913	UnaryOperator	&		708788	0					
ANR	708914	Identifier	sd		708788	1					
ANR	708915	Argument	it8		708788	1					
ANR	708916	Identifier	it8		708788	0					
ANR	708917	ExpressionStatement	"WriteData ( & sd , it8 )"	1806:8:49746:49765	708788	3	True				
ANR	708918	CallExpression	"WriteData ( & sd , it8 )"		708788	0					
ANR	708919	Callee	WriteData		708788	0					
ANR	708920	Identifier	WriteData		708788	0					
ANR	708921	ArgumentList	& sd		708788	1					
ANR	708922	Argument	& sd		708788	0					
ANR	708923	UnaryOperationExpression	& sd		708788	0					
ANR	708924	UnaryOperator	&		708788	0					
ANR	708925	Identifier	sd		708788	1					
ANR	708926	Argument	it8		708788	1					
ANR	708927	Identifier	it8		708788	0					
ANR	708928	ExpressionStatement	sd . Used ++	1809:4:49778:49787	708788	10	True				
ANR	708929	PostIncDecOperationExpression	sd . Used ++		708788	0					
ANR	708930	MemberAccess	sd . Used		708788	0					
ANR	708931	Identifier	sd		708788	0					
ANR	708932	Identifier	Used		708788	1					
ANR	708933	IncDec	++		708788	1					
ANR	708934	IfStatement	if ( sd . Base )		708788	11					
ANR	708935	Condition	sd . Base	1811:8:49825:49831	708788	0	True				
ANR	708936	MemberAccess	sd . Base		708788	0					
ANR	708937	Identifier	sd		708788	0					
ANR	708938	Identifier	Base		708788	1					
ANR	708939	ExpressionStatement	* sd . Ptr = 0	1812:8:49842:49853	708788	1	True				
ANR	708940	AssignmentExpression	* sd . Ptr = 0		708788	0		=			
ANR	708941	UnaryOperationExpression	* sd . Ptr		708788	0					
ANR	708942	UnaryOperator	*		708788	0					
ANR	708943	MemberAccess	sd . Ptr		708788	1					
ANR	708944	Identifier	sd		708788	0					
ANR	708945	Identifier	Ptr		708788	1					
ANR	708946	PrimaryExpression	0		708788	1					
ANR	708947	ExpressionStatement	* BytesNeeded = sd . Used	1814:4:49860:49882	708788	12	True				
ANR	708948	AssignmentExpression	* BytesNeeded = sd . Used		708788	0		=			
ANR	708949	UnaryOperationExpression	* BytesNeeded		708788	0					
ANR	708950	UnaryOperator	*		708788	0					
ANR	708951	Identifier	BytesNeeded		708788	1					
ANR	708952	MemberAccess	sd . Used		708788	1					
ANR	708953	Identifier	sd		708788	0					
ANR	708954	Identifier	Used		708788	1					
ANR	708955	ReturnStatement	return TRUE ;	1816:4:49889:49900	708788	13	True				
ANR	708956	Identifier	TRUE		708788	0					
ANR	708957	ReturnType	cmsBool CMSEXPORT		708788	1					
ANR	708958	Identifier	cmsIT8SaveToMem		708788	2					
ANR	708959	ParameterList	"cmsHANDLE hIT8 , void * MemPtr , cmsUInt32Number * BytesNeeded"		708788	3					
ANR	708960	Parameter	cmsHANDLE hIT8	1782:34:49160:49173	708788	0	True				
ANR	708961	ParameterType	cmsHANDLE		708788	0					
ANR	708962	Identifier	hIT8		708788	1					
ANR	708963	Parameter	void * MemPtr	1782:50:49176:49187	708788	1	True				
ANR	708964	ParameterType	void *		708788	0					
ANR	708965	Identifier	MemPtr		708788	1					
ANR	708966	Parameter	cmsUInt32Number * BytesNeeded	1782:64:49190:49217	708788	2	True				
ANR	708967	ParameterType	cmsUInt32Number *		708788	0					
ANR	708968	Identifier	BytesNeeded		708788	1					
ANR	708969	CFGEntryNode	ENTRY		708788		True				
ANR	708970	CFGExitNode	EXIT		708788		True				
ANR	708971	Symbol	* sd . Ptr		708788						
ANR	708972	Symbol	NULL		708788						
ANR	708973	Symbol	sd . Ptr		708788						
ANR	708974	Symbol	* it8		708788						
ANR	708975	Symbol	i		708788						
ANR	708976	Symbol	TRUE		708788						
ANR	708977	Symbol	BytesNeeded		708788						
ANR	708978	Symbol	sd . Max		708788						
ANR	708979	Symbol	it8		708788						
ANR	708980	Symbol	sd . stream		708788						
ANR	708981	Symbol	sd . Base		708788						
ANR	708982	Symbol	sd		708788						
ANR	708983	Symbol	* BytesNeeded		708788						
ANR	708984	Symbol	* sd		708788						
ANR	708985	Symbol	hIT8		708788						
ANR	708986	Symbol	it8 -> TablesCount		708788						
ANR	708987	Symbol	& sd		708788						
ANR	708988	Symbol	sd . Used		708788						
ANR	708989	Symbol	MemPtr		708788						
ANR	708990	Function	DataFormatSection	1822:0:49994:50817							
ANR	708991	FunctionDef	DataFormatSection (cmsIT8 * it8)		708990	0					
ANR	708992	CompoundStatement		1824:0:50040:50817	708990	0					
ANR	708993	IdentifierDeclStatement	int iField = 0 ;	1825:4:50046:50060	708990	0	True				
ANR	708994	IdentifierDecl	iField = 0		708990	0					
ANR	708995	IdentifierDeclType	int		708990	0					
ANR	708996	Identifier	iField		708990	1					
ANR	708997	AssignmentExpression	iField = 0		708990	2		=			
ANR	708998	Identifier	iField		708990	0					
ANR	708999	PrimaryExpression	0		708990	1					
ANR	709000	IdentifierDeclStatement	TABLE * t = GetTable ( it8 ) ;	1826:4:50066:50090	708990	1	True				
ANR	709001	IdentifierDecl	* t = GetTable ( it8 )		708990	0					
ANR	709002	IdentifierDeclType	TABLE *		708990	0					
ANR	709003	Identifier	t		708990	1					
ANR	709004	AssignmentExpression	* t = GetTable ( it8 )		708990	2		=			
ANR	709005	Identifier	t		708990	0					
ANR	709006	CallExpression	GetTable ( it8 )		708990	1					
ANR	709007	Callee	GetTable		708990	0					
ANR	709008	Identifier	GetTable		708990	0					
ANR	709009	ArgumentList	it8		708990	1					
ANR	709010	Argument	it8		708990	0					
ANR	709011	Identifier	it8		708990	0					
ANR	709012	ExpressionStatement	InSymbol ( it8 )	1828:4:50097:50110	708990	2	True				
ANR	709013	CallExpression	InSymbol ( it8 )		708990	0					
ANR	709014	Callee	InSymbol		708990	0					
ANR	709015	Identifier	InSymbol		708990	0					
ANR	709016	ArgumentList	it8		708990	1					
ANR	709017	Argument	it8		708990	0					
ANR	709018	Identifier	it8		708990	0					
ANR	709019	ExpressionStatement	CheckEOLN ( it8 )	1829:4:50146:50160	708990	3	True				
ANR	709020	CallExpression	CheckEOLN ( it8 )		708990	0					
ANR	709021	Callee	CheckEOLN		708990	0					
ANR	709022	Identifier	CheckEOLN		708990	0					
ANR	709023	ArgumentList	it8		708990	1					
ANR	709024	Argument	it8		708990	0					
ANR	709025	Identifier	it8		708990	0					
ANR	709026	WhileStatement	while ( it8 -> sy != SEND_DATA_FORMAT && it8 -> sy != SEOLN && it8 -> sy != SEOF && it8 -> sy != SSYNERROR )		708990	4					
ANR	709027	Condition	it8 -> sy != SEND_DATA_FORMAT && it8 -> sy != SEOLN && it8 -> sy != SEOF && it8 -> sy != SSYNERROR	1831:11:50174:50287	708990	0	True				
ANR	709028	AndExpression	it8 -> sy != SEND_DATA_FORMAT && it8 -> sy != SEOLN && it8 -> sy != SEOF && it8 -> sy != SSYNERROR		708990	0		&&			
ANR	709029	EqualityExpression	it8 -> sy != SEND_DATA_FORMAT		708990	0		!=			
ANR	709030	PtrMemberAccess	it8 -> sy		708990	0					
ANR	709031	Identifier	it8		708990	0					
ANR	709032	Identifier	sy		708990	1					
ANR	709033	Identifier	SEND_DATA_FORMAT		708990	1					
ANR	709034	AndExpression	it8 -> sy != SEOLN && it8 -> sy != SEOF && it8 -> sy != SSYNERROR		708990	1		&&			
ANR	709035	EqualityExpression	it8 -> sy != SEOLN		708990	0		!=			
ANR	709036	PtrMemberAccess	it8 -> sy		708990	0					
ANR	709037	Identifier	it8		708990	0					
ANR	709038	Identifier	sy		708990	1					
ANR	709039	Identifier	SEOLN		708990	1					
ANR	709040	AndExpression	it8 -> sy != SEOF && it8 -> sy != SSYNERROR		708990	1		&&			
ANR	709041	EqualityExpression	it8 -> sy != SEOF		708990	0		!=			
ANR	709042	PtrMemberAccess	it8 -> sy		708990	0					
ANR	709043	Identifier	it8		708990	0					
ANR	709044	Identifier	sy		708990	1					
ANR	709045	Identifier	SEOF		708990	1					
ANR	709046	EqualityExpression	it8 -> sy != SSYNERROR		708990	1		!=			
ANR	709047	PtrMemberAccess	it8 -> sy		708990	0					
ANR	709048	Identifier	it8		708990	0					
ANR	709049	Identifier	sy		708990	1					
ANR	709050	Identifier	SSYNERROR		708990	1					
ANR	709051	CompoundStatement		11:31:250:250	708990	1					
ANR	709052	IfStatement	if ( it8 -> sy != SIDENT )		708990	0					
ANR	709053	Condition	it8 -> sy != SIDENT	1836:16:50310:50326	708990	0	True				
ANR	709054	EqualityExpression	it8 -> sy != SIDENT		708990	0		!=			
ANR	709055	PtrMemberAccess	it8 -> sy		708990	0					
ANR	709056	Identifier	it8		708990	0					
ANR	709057	Identifier	sy		708990	1					
ANR	709058	Identifier	SIDENT		708990	1					
ANR	709059	CompoundStatement		13:35:288:288	708990	1					
ANR	709060	ReturnStatement	"return SynError ( it8 , ""Sample type expected"" ) ;"	1838:16:50348:50392	708990	0	True				
ANR	709061	CallExpression	"SynError ( it8 , ""Sample type expected"" )"		708990	0					
ANR	709062	Callee	SynError		708990	0					
ANR	709063	Identifier	SynError		708990	0					
ANR	709064	ArgumentList	it8		708990	1					
ANR	709065	Argument	it8		708990	0					
ANR	709066	Identifier	it8		708990	0					
ANR	709067	Argument	"""Sample type expected"""		708990	1					
ANR	709068	PrimaryExpression	"""Sample type expected"""		708990	0					
ANR	709069	IfStatement	"if ( ! SetDataFormat ( it8 , iField , it8 -> id ) )"		708990	1					
ANR	709070	Condition	"! SetDataFormat ( it8 , iField , it8 -> id )"	1841:16:50425:50460	708990	0	True				
ANR	709071	UnaryOperationExpression	"! SetDataFormat ( it8 , iField , it8 -> id )"		708990	0					
ANR	709072	UnaryOperator	!		708990	0					
ANR	709073	CallExpression	"SetDataFormat ( it8 , iField , it8 -> id )"		708990	1					
ANR	709074	Callee	SetDataFormat		708990	0					
ANR	709075	Identifier	SetDataFormat		708990	0					
ANR	709076	ArgumentList	it8		708990	1					
ANR	709077	Argument	it8		708990	0					
ANR	709078	Identifier	it8		708990	0					
ANR	709079	Argument	iField		708990	1					
ANR	709080	Identifier	iField		708990	0					
ANR	709081	Argument	it8 -> id		708990	2					
ANR	709082	PtrMemberAccess	it8 -> id		708990	0					
ANR	709083	Identifier	it8		708990	0					
ANR	709084	Identifier	id		708990	1					
ANR	709085	ReturnStatement	return FALSE ;	1841:54:50463:50475	708990	1	True				
ANR	709086	Identifier	FALSE		708990	0					
ANR	709087	ExpressionStatement	iField ++	1842:12:50489:50497	708990	2	True				
ANR	709088	PostIncDecOperationExpression	iField ++		708990	0					
ANR	709089	Identifier	iField		708990	0					
ANR	709090	IncDec	++		708990	1					
ANR	709091	ExpressionStatement	InSymbol ( it8 )	1844:12:50512:50525	708990	3	True				
ANR	709092	CallExpression	InSymbol ( it8 )		708990	0					
ANR	709093	Callee	InSymbol		708990	0					
ANR	709094	Identifier	InSymbol		708990	0					
ANR	709095	ArgumentList	it8		708990	1					
ANR	709096	Argument	it8		708990	0					
ANR	709097	Identifier	it8		708990	0					
ANR	709098	ExpressionStatement	SkipEOLN ( it8 )	1845:12:50539:50552	708990	4	True				
ANR	709099	CallExpression	SkipEOLN ( it8 )		708990	0					
ANR	709100	Callee	SkipEOLN		708990	0					
ANR	709101	Identifier	SkipEOLN		708990	0					
ANR	709102	ArgumentList	it8		708990	1					
ANR	709103	Argument	it8		708990	0					
ANR	709104	Identifier	it8		708990	0					
ANR	709105	ExpressionStatement	SkipEOLN ( it8 )	1848:7:50571:50584	708990	5	True				
ANR	709106	CallExpression	SkipEOLN ( it8 )		708990	0					
ANR	709107	Callee	SkipEOLN		708990	0					
ANR	709108	Identifier	SkipEOLN		708990	0					
ANR	709109	ArgumentList	it8		708990	1					
ANR	709110	Argument	it8		708990	0					
ANR	709111	Identifier	it8		708990	0					
ANR	709112	ExpressionStatement	"Skip ( it8 , SEND_DATA_FORMAT )"	1849:7:50593:50620	708990	6	True				
ANR	709113	CallExpression	"Skip ( it8 , SEND_DATA_FORMAT )"		708990	0					
ANR	709114	Callee	Skip		708990	0					
ANR	709115	Identifier	Skip		708990	0					
ANR	709116	ArgumentList	it8		708990	1					
ANR	709117	Argument	it8		708990	0					
ANR	709118	Identifier	it8		708990	0					
ANR	709119	Argument	SEND_DATA_FORMAT		708990	1					
ANR	709120	Identifier	SEND_DATA_FORMAT		708990	0					
ANR	709121	ExpressionStatement	SkipEOLN ( it8 )	1850:7:50629:50642	708990	7	True				
ANR	709122	CallExpression	SkipEOLN ( it8 )		708990	0					
ANR	709123	Callee	SkipEOLN		708990	0					
ANR	709124	Identifier	SkipEOLN		708990	0					
ANR	709125	ArgumentList	it8		708990	1					
ANR	709126	Argument	it8		708990	0					
ANR	709127	Identifier	it8		708990	0					
ANR	709128	IfStatement	if ( iField != t -> nSamples )		708990	8					
ANR	709129	Condition	iField != t -> nSamples	1852:11:50656:50677	708990	0	True				
ANR	709130	EqualityExpression	iField != t -> nSamples		708990	0		!=			
ANR	709131	Identifier	iField		708990	0					
ANR	709132	PtrMemberAccess	t -> nSamples		708990	1					
ANR	709133	Identifier	t		708990	0					
ANR	709134	Identifier	nSamples		708990	1					
ANR	709135	CompoundStatement		29:35:639:639	708990	1					
ANR	709136	ExpressionStatement	"SynError ( it8 , ""Count mismatch. NUMBER_OF_FIELDS was %d, found %d\\n"" , t -> nSamples , iField )"	1853:11:50693:50783	708990	0	True				
ANR	709137	CallExpression	"SynError ( it8 , ""Count mismatch. NUMBER_OF_FIELDS was %d, found %d\\n"" , t -> nSamples , iField )"		708990	0					
ANR	709138	Callee	SynError		708990	0					
ANR	709139	Identifier	SynError		708990	0					
ANR	709140	ArgumentList	it8		708990	1					
ANR	709141	Argument	it8		708990	0					
ANR	709142	Identifier	it8		708990	0					
ANR	709143	Argument	"""Count mismatch. NUMBER_OF_FIELDS was %d, found %d\\n"""		708990	1					
ANR	709144	PrimaryExpression	"""Count mismatch. NUMBER_OF_FIELDS was %d, found %d\\n"""		708990	0					
ANR	709145	Argument	t -> nSamples		708990	2					
ANR	709146	PtrMemberAccess	t -> nSamples		708990	0					
ANR	709147	Identifier	t		708990	0					
ANR	709148	Identifier	nSamples		708990	1					
ANR	709149	Argument	iField		708990	3					
ANR	709150	Identifier	iField		708990	0					
ANR	709151	ReturnStatement	return TRUE ;	1858:7:50804:50815	708990	9	True				
ANR	709152	Identifier	TRUE		708990	0					
ANR	709153	ReturnType	static cmsBool		708990	1					
ANR	709154	Identifier	DataFormatSection		708990	2					
ANR	709155	ParameterList	cmsIT8 * it8		708990	3					
ANR	709156	Parameter	cmsIT8 * it8	1823:26:50027:50037	708990	0	True				
ANR	709157	ParameterType	cmsIT8 *		708990	0					
ANR	709158	Identifier	it8		708990	1					
ANR	709159	CFGEntryNode	ENTRY		708990		True				
ANR	709160	CFGExitNode	EXIT		708990		True				
ANR	709161	Symbol	t -> nSamples		708990						
ANR	709162	Symbol	* it8		708990						
ANR	709163	Symbol	iField		708990						
ANR	709164	Symbol	TRUE		708990						
ANR	709165	Symbol	it8 -> sy		708990						
ANR	709166	Symbol	SynError		708990						
ANR	709167	Symbol	it8		708990						
ANR	709168	Symbol	SEOLN		708990						
ANR	709169	Symbol	SEOF		708990						
ANR	709170	Symbol	SetDataFormat		708990						
ANR	709171	Symbol	GetTable		708990						
ANR	709172	Symbol	SEND_DATA_FORMAT		708990						
ANR	709173	Symbol	t		708990						
ANR	709174	Symbol	FALSE		708990						
ANR	709175	Symbol	SSYNERROR		708990						
ANR	709176	Symbol	SIDENT		708990						
ANR	709177	Symbol	* t		708990						
ANR	709178	Symbol	it8 -> id		708990						
ANR	709179	Function	DataSection	1863:0:50822:51815							
ANR	709180	FunctionDef	DataSection (cmsIT8 * it8)		709179	0					
ANR	709181	CompoundStatement		1865:0:50863:51815	709179	0					
ANR	709182	IdentifierDeclStatement	int iField = 0 ;	1866:4:50869:50884	709179	0	True				
ANR	709183	IdentifierDecl	iField = 0		709179	0					
ANR	709184	IdentifierDeclType	int		709179	0					
ANR	709185	Identifier	iField		709179	1					
ANR	709186	AssignmentExpression	iField = 0		709179	2		=			
ANR	709187	Identifier	iField		709179	0					
ANR	709188	PrimaryExpression	0		709179	1					
ANR	709189	IdentifierDeclStatement	int iSet = 0 ;	1867:4:50890:50905	709179	1	True				
ANR	709190	IdentifierDecl	iSet = 0		709179	0					
ANR	709191	IdentifierDeclType	int		709179	0					
ANR	709192	Identifier	iSet		709179	1					
ANR	709193	AssignmentExpression	iSet = 0		709179	2		=			
ANR	709194	Identifier	iSet		709179	0					
ANR	709195	PrimaryExpression	0		709179	1					
ANR	709196	IdentifierDeclStatement	char Buffer [ 256 ] ;	1868:4:50911:50927	709179	2	True				
ANR	709197	IdentifierDecl	Buffer [ 256 ]		709179	0					
ANR	709198	IdentifierDeclType	char [ 256 ]		709179	0					
ANR	709199	Identifier	Buffer		709179	1					
ANR	709200	PrimaryExpression	256		709179	2					
ANR	709201	IdentifierDeclStatement	TABLE * t = GetTable ( it8 ) ;	1869:4:50933:50957	709179	3	True				
ANR	709202	IdentifierDecl	* t = GetTable ( it8 )		709179	0					
ANR	709203	IdentifierDeclType	TABLE *		709179	0					
ANR	709204	Identifier	t		709179	1					
ANR	709205	AssignmentExpression	* t = GetTable ( it8 )		709179	2		=			
ANR	709206	Identifier	t		709179	0					
ANR	709207	CallExpression	GetTable ( it8 )		709179	1					
ANR	709208	Callee	GetTable		709179	0					
ANR	709209	Identifier	GetTable		709179	0					
ANR	709210	ArgumentList	it8		709179	1					
ANR	709211	Argument	it8		709179	0					
ANR	709212	Identifier	it8		709179	0					
ANR	709213	ExpressionStatement	InSymbol ( it8 )	1871:4:50964:50977	709179	4	True				
ANR	709214	CallExpression	InSymbol ( it8 )		709179	0					
ANR	709215	Callee	InSymbol		709179	0					
ANR	709216	Identifier	InSymbol		709179	0					
ANR	709217	ArgumentList	it8		709179	1					
ANR	709218	Argument	it8		709179	0					
ANR	709219	Identifier	it8		709179	0					
ANR	709220	ExpressionStatement	CheckEOLN ( it8 )	1872:4:51006:51020	709179	5	True				
ANR	709221	CallExpression	CheckEOLN ( it8 )		709179	0					
ANR	709222	Callee	CheckEOLN		709179	0					
ANR	709223	Identifier	CheckEOLN		709179	0					
ANR	709224	ArgumentList	it8		709179	1					
ANR	709225	Argument	it8		709179	0					
ANR	709226	Identifier	it8		709179	0					
ANR	709227	IfStatement	if ( ! t -> Data )		709179	6					
ANR	709228	Condition	! t -> Data	1874:8:51031:51038	709179	0	True				
ANR	709229	UnaryOperationExpression	! t -> Data		709179	0					
ANR	709230	UnaryOperator	!		709179	0					
ANR	709231	PtrMemberAccess	t -> Data		709179	1					
ANR	709232	Identifier	t		709179	0					
ANR	709233	Identifier	Data		709179	1					
ANR	709234	ExpressionStatement	AllocateDataSet ( it8 )	1875:8:51049:51069	709179	1	True				
ANR	709235	CallExpression	AllocateDataSet ( it8 )		709179	0					
ANR	709236	Callee	AllocateDataSet		709179	0					
ANR	709237	Identifier	AllocateDataSet		709179	0					
ANR	709238	ArgumentList	it8		709179	1					
ANR	709239	Argument	it8		709179	0					
ANR	709240	Identifier	it8		709179	0					
ANR	709241	WhileStatement	while ( it8 -> sy != SEND_DATA && it8 -> sy != SEOF )		709179	7					
ANR	709242	Condition	it8 -> sy != SEND_DATA && it8 -> sy != SEOF	1877:11:51083:51121	709179	0	True				
ANR	709243	AndExpression	it8 -> sy != SEND_DATA && it8 -> sy != SEOF		709179	0		&&			
ANR	709244	EqualityExpression	it8 -> sy != SEND_DATA		709179	0		!=			
ANR	709245	PtrMemberAccess	it8 -> sy		709179	0					
ANR	709246	Identifier	it8		709179	0					
ANR	709247	Identifier	sy		709179	1					
ANR	709248	Identifier	SEND_DATA		709179	1					
ANR	709249	EqualityExpression	it8 -> sy != SEOF		709179	1		!=			
ANR	709250	PtrMemberAccess	it8 -> sy		709179	0					
ANR	709251	Identifier	it8		709179	0					
ANR	709252	Identifier	sy		709179	1					
ANR	709253	Identifier	SEOF		709179	1					
ANR	709254	CompoundStatement		14:4:264:264	709179	1					
ANR	709255	IfStatement	if ( iField >= t -> nSamples )		709179	0					
ANR	709256	Condition	iField >= t -> nSamples	1879:12:51142:51164	709179	0	True				
ANR	709257	RelationalExpression	iField >= t -> nSamples		709179	0		>=			
ANR	709258	Identifier	iField		709179	0					
ANR	709259	PtrMemberAccess	t -> nSamples		709179	1					
ANR	709260	Identifier	t		709179	0					
ANR	709261	Identifier	nSamples		709179	1					
ANR	709262	CompoundStatement		15:37:303:303	709179	1					
ANR	709263	ExpressionStatement	iField = 0	1880:12:51181:51191	709179	0	True				
ANR	709264	AssignmentExpression	iField = 0		709179	0		=			
ANR	709265	Identifier	iField		709179	0					
ANR	709266	PrimaryExpression	0		709179	1					
ANR	709267	ExpressionStatement	iSet ++	1881:12:51205:51211	709179	1	True				
ANR	709268	PostIncDecOperationExpression	iSet ++		709179	0					
ANR	709269	Identifier	iSet		709179	0					
ANR	709270	IncDec	++		709179	1					
ANR	709271	IfStatement	if ( it8 -> sy != SEND_DATA && it8 -> sy != SEOF )		709179	1					
ANR	709272	Condition	it8 -> sy != SEND_DATA && it8 -> sy != SEOF	1885:12:51237:51275	709179	0	True				
ANR	709273	AndExpression	it8 -> sy != SEND_DATA && it8 -> sy != SEOF		709179	0		&&			
ANR	709274	EqualityExpression	it8 -> sy != SEND_DATA		709179	0		!=			
ANR	709275	PtrMemberAccess	it8 -> sy		709179	0					
ANR	709276	Identifier	it8		709179	0					
ANR	709277	Identifier	sy		709179	1					
ANR	709278	Identifier	SEND_DATA		709179	1					
ANR	709279	EqualityExpression	it8 -> sy != SEOF		709179	1		!=			
ANR	709280	PtrMemberAccess	it8 -> sy		709179	0					
ANR	709281	Identifier	it8		709179	0					
ANR	709282	Identifier	sy		709179	1					
ANR	709283	Identifier	SEOF		709179	1					
ANR	709284	CompoundStatement		21:53:414:414	709179	1					
ANR	709285	IfStatement	"if ( ! GetVal ( it8 , Buffer , 255 , ""Sample data expected"" ) )"		709179	0					
ANR	709286	Condition	"! GetVal ( it8 , Buffer , 255 , ""Sample data expected"" )"	1887:16:51297:51345	709179	0	True				
ANR	709287	UnaryOperationExpression	"! GetVal ( it8 , Buffer , 255 , ""Sample data expected"" )"		709179	0					
ANR	709288	UnaryOperator	!		709179	0					
ANR	709289	CallExpression	"GetVal ( it8 , Buffer , 255 , ""Sample data expected"" )"		709179	1					
ANR	709290	Callee	GetVal		709179	0					
ANR	709291	Identifier	GetVal		709179	0					
ANR	709292	ArgumentList	it8		709179	1					
ANR	709293	Argument	it8		709179	0					
ANR	709294	Identifier	it8		709179	0					
ANR	709295	Argument	Buffer		709179	1					
ANR	709296	Identifier	Buffer		709179	0					
ANR	709297	Argument	255		709179	2					
ANR	709298	PrimaryExpression	255		709179	0					
ANR	709299	Argument	"""Sample data expected"""		709179	3					
ANR	709300	PrimaryExpression	"""Sample data expected"""		709179	0					
ANR	709301	ReturnStatement	return FALSE ;	1888:16:51364:51376	709179	1	True				
ANR	709302	Identifier	FALSE		709179	0					
ANR	709303	IfStatement	"if ( ! SetData ( it8 , iSet , iField , Buffer ) )"		709179	1					
ANR	709304	Condition	"! SetData ( it8 , iSet , iField , Buffer )"	1890:16:51395:51429	709179	0	True				
ANR	709305	UnaryOperationExpression	"! SetData ( it8 , iSet , iField , Buffer )"		709179	0					
ANR	709306	UnaryOperator	!		709179	0					
ANR	709307	CallExpression	"SetData ( it8 , iSet , iField , Buffer )"		709179	1					
ANR	709308	Callee	SetData		709179	0					
ANR	709309	Identifier	SetData		709179	0					
ANR	709310	ArgumentList	it8		709179	1					
ANR	709311	Argument	it8		709179	0					
ANR	709312	Identifier	it8		709179	0					
ANR	709313	Argument	iSet		709179	1					
ANR	709314	Identifier	iSet		709179	0					
ANR	709315	Argument	iField		709179	2					
ANR	709316	Identifier	iField		709179	0					
ANR	709317	Argument	Buffer		709179	3					
ANR	709318	Identifier	Buffer		709179	0					
ANR	709319	ReturnStatement	return FALSE ;	1891:16:51448:51460	709179	1	True				
ANR	709320	Identifier	FALSE		709179	0					
ANR	709321	ExpressionStatement	iField ++	1893:12:51475:51483	709179	2	True				
ANR	709322	PostIncDecOperationExpression	iField ++		709179	0					
ANR	709323	Identifier	iField		709179	0					
ANR	709324	IncDec	++		709179	1					
ANR	709325	ExpressionStatement	InSymbol ( it8 )	1895:12:51498:51511	709179	3	True				
ANR	709326	CallExpression	InSymbol ( it8 )		709179	0					
ANR	709327	Callee	InSymbol		709179	0					
ANR	709328	Identifier	InSymbol		709179	0					
ANR	709329	ArgumentList	it8		709179	1					
ANR	709330	Argument	it8		709179	0					
ANR	709331	Identifier	it8		709179	0					
ANR	709332	ExpressionStatement	SkipEOLN ( it8 )	1896:12:51525:51538	709179	4	True				
ANR	709333	CallExpression	SkipEOLN ( it8 )		709179	0					
ANR	709334	Callee	SkipEOLN		709179	0					
ANR	709335	Identifier	SkipEOLN		709179	0					
ANR	709336	ArgumentList	it8		709179	1					
ANR	709337	Argument	it8		709179	0					
ANR	709338	Identifier	it8		709179	0					
ANR	709339	ExpressionStatement	SkipEOLN ( it8 )	1900:4:51561:51574	709179	8	True				
ANR	709340	CallExpression	SkipEOLN ( it8 )		709179	0					
ANR	709341	Callee	SkipEOLN		709179	0					
ANR	709342	Identifier	SkipEOLN		709179	0					
ANR	709343	ArgumentList	it8		709179	1					
ANR	709344	Argument	it8		709179	0					
ANR	709345	Identifier	it8		709179	0					
ANR	709346	ExpressionStatement	"Skip ( it8 , SEND_DATA )"	1901:4:51580:51600	709179	9	True				
ANR	709347	CallExpression	"Skip ( it8 , SEND_DATA )"		709179	0					
ANR	709348	Callee	Skip		709179	0					
ANR	709349	Identifier	Skip		709179	0					
ANR	709350	ArgumentList	it8		709179	1					
ANR	709351	Argument	it8		709179	0					
ANR	709352	Identifier	it8		709179	0					
ANR	709353	Argument	SEND_DATA		709179	1					
ANR	709354	Identifier	SEND_DATA		709179	0					
ANR	709355	ExpressionStatement	SkipEOLN ( it8 )	1902:4:51606:51619	709179	10	True				
ANR	709356	CallExpression	SkipEOLN ( it8 )		709179	0					
ANR	709357	Callee	SkipEOLN		709179	0					
ANR	709358	Identifier	SkipEOLN		709179	0					
ANR	709359	ArgumentList	it8		709179	1					
ANR	709360	Argument	it8		709179	0					
ANR	709361	Identifier	it8		709179	0					
ANR	709362	IfStatement	if ( ( iSet + 1 ) != t -> nPatches )		709179	11					
ANR	709363	Condition	( iSet + 1 ) != t -> nPatches	1906:8:51665:51689	709179	0	True				
ANR	709364	EqualityExpression	( iSet + 1 ) != t -> nPatches		709179	0		!=			
ANR	709365	AdditiveExpression	iSet + 1		709179	0		+			
ANR	709366	Identifier	iSet		709179	0					
ANR	709367	PrimaryExpression	1		709179	1					
ANR	709368	PtrMemberAccess	t -> nPatches		709179	1					
ANR	709369	Identifier	t		709179	0					
ANR	709370	Identifier	nPatches		709179	1					
ANR	709371	ReturnStatement	"return SynError ( it8 , ""Count mismatch. NUMBER_OF_SETS was %d, found %d\\n"" , t -> nPatches , iSet + 1 ) ;"	1907:8:51700:51795	709179	1	True				
ANR	709372	CallExpression	"SynError ( it8 , ""Count mismatch. NUMBER_OF_SETS was %d, found %d\\n"" , t -> nPatches , iSet + 1 )"		709179	0					
ANR	709373	Callee	SynError		709179	0					
ANR	709374	Identifier	SynError		709179	0					
ANR	709375	ArgumentList	it8		709179	1					
ANR	709376	Argument	it8		709179	0					
ANR	709377	Identifier	it8		709179	0					
ANR	709378	Argument	"""Count mismatch. NUMBER_OF_SETS was %d, found %d\\n"""		709179	1					
ANR	709379	PrimaryExpression	"""Count mismatch. NUMBER_OF_SETS was %d, found %d\\n"""		709179	0					
ANR	709380	Argument	t -> nPatches		709179	2					
ANR	709381	PtrMemberAccess	t -> nPatches		709179	0					
ANR	709382	Identifier	t		709179	0					
ANR	709383	Identifier	nPatches		709179	1					
ANR	709384	Argument	iSet + 1		709179	3					
ANR	709385	AdditiveExpression	iSet + 1		709179	0		+			
ANR	709386	Identifier	iSet		709179	0					
ANR	709387	PrimaryExpression	1		709179	1					
ANR	709388	ReturnStatement	return TRUE ;	1909:4:51802:51813	709179	12	True				
ANR	709389	Identifier	TRUE		709179	0					
ANR	709390	ReturnType	static cmsBool		709179	1					
ANR	709391	Identifier	DataSection		709179	2					
ANR	709392	ParameterList	cmsIT8 * it8		709179	3					
ANR	709393	Parameter	cmsIT8 * it8	1864:21:50850:50860	709179	0	True				
ANR	709394	ParameterType	cmsIT8 *		709179	0					
ANR	709395	Identifier	it8		709179	1					
ANR	709396	CFGEntryNode	ENTRY		709179		True				
ANR	709397	CFGExitNode	EXIT		709179		True				
ANR	709398	Symbol	Buffer		709179						
ANR	709399	Symbol	t -> nSamples		709179						
ANR	709400	Symbol	t -> nPatches		709179						
ANR	709401	Symbol	GetVal		709179						
ANR	709402	Symbol	* it8		709179						
ANR	709403	Symbol	iField		709179						
ANR	709404	Symbol	iSet		709179						
ANR	709405	Symbol	TRUE		709179						
ANR	709406	Symbol	SEND_DATA		709179						
ANR	709407	Symbol	it8 -> sy		709179						
ANR	709408	Symbol	SynError		709179						
ANR	709409	Symbol	it8		709179						
ANR	709410	Symbol	SetData		709179						
ANR	709411	Symbol	SEOF		709179						
ANR	709412	Symbol	GetTable		709179						
ANR	709413	Symbol	t		709179						
ANR	709414	Symbol	FALSE		709179						
ANR	709415	Symbol	t -> Data		709179						
ANR	709416	Symbol	* t		709179						
ANR	709417	Function	HeaderSection	1915:0:51821:55550							
ANR	709418	FunctionDef	HeaderSection (cmsIT8 * it8)		709417	0					
ANR	709419	CompoundStatement		1917:0:51863:55550	709417	0					
ANR	709420	IdentifierDeclStatement	char VarName [ MAXID ] ;	1918:4:51869:51888	709417	0	True				
ANR	709421	IdentifierDecl	VarName [ MAXID ]		709417	0					
ANR	709422	IdentifierDeclType	char [ MAXID ]		709417	0					
ANR	709423	Identifier	VarName		709417	1					
ANR	709424	Identifier	MAXID		709417	2					
ANR	709425	IdentifierDeclStatement	char Buffer [ MAXSTR ] ;	1919:4:51894:51913	709417	1	True				
ANR	709426	IdentifierDecl	Buffer [ MAXSTR ]		709417	0					
ANR	709427	IdentifierDeclType	char [ MAXSTR ]		709417	0					
ANR	709428	Identifier	Buffer		709417	1					
ANR	709429	Identifier	MAXSTR		709417	2					
ANR	709430	IdentifierDeclStatement	KEYVALUE * Key ;	1920:4:51919:51932	709417	2	True				
ANR	709431	IdentifierDecl	* Key		709417	0					
ANR	709432	IdentifierDeclType	KEYVALUE *		709417	0					
ANR	709433	Identifier	Key		709417	1					
ANR	709434	WhileStatement	while ( it8 -> sy != SEOF && it8 -> sy != SSYNERROR && it8 -> sy != SBEGIN_DATA_FORMAT && it8 -> sy != SBEGIN_DATA )		709417	3					
ANR	709435	Condition	it8 -> sy != SEOF && it8 -> sy != SSYNERROR && it8 -> sy != SBEGIN_DATA_FORMAT && it8 -> sy != SBEGIN_DATA	1922:15:51950:52092	709417	0	True				
ANR	709436	AndExpression	it8 -> sy != SEOF && it8 -> sy != SSYNERROR && it8 -> sy != SBEGIN_DATA_FORMAT && it8 -> sy != SBEGIN_DATA		709417	0		&&			
ANR	709437	EqualityExpression	it8 -> sy != SEOF		709417	0		!=			
ANR	709438	PtrMemberAccess	it8 -> sy		709417	0					
ANR	709439	Identifier	it8		709417	0					
ANR	709440	Identifier	sy		709417	1					
ANR	709441	Identifier	SEOF		709417	1					
ANR	709442	AndExpression	it8 -> sy != SSYNERROR && it8 -> sy != SBEGIN_DATA_FORMAT && it8 -> sy != SBEGIN_DATA		709417	1		&&			
ANR	709443	EqualityExpression	it8 -> sy != SSYNERROR		709417	0		!=			
ANR	709444	PtrMemberAccess	it8 -> sy		709417	0					
ANR	709445	Identifier	it8		709417	0					
ANR	709446	Identifier	sy		709417	1					
ANR	709447	Identifier	SSYNERROR		709417	1					
ANR	709448	AndExpression	it8 -> sy != SBEGIN_DATA_FORMAT && it8 -> sy != SBEGIN_DATA		709417	1		&&			
ANR	709449	EqualityExpression	it8 -> sy != SBEGIN_DATA_FORMAT		709417	0		!=			
ANR	709450	PtrMemberAccess	it8 -> sy		709417	0					
ANR	709451	Identifier	it8		709417	0					
ANR	709452	Identifier	sy		709417	1					
ANR	709453	Identifier	SBEGIN_DATA_FORMAT		709417	1					
ANR	709454	EqualityExpression	it8 -> sy != SBEGIN_DATA		709417	1		!=			
ANR	709455	PtrMemberAccess	it8 -> sy		709417	0					
ANR	709456	Identifier	it8		709417	0					
ANR	709457	Identifier	sy		709417	1					
ANR	709458	Identifier	SBEGIN_DATA		709417	1					
ANR	709459	CompoundStatement		9:39:231:231	709417	1					
ANR	709460	SwitchStatement	switch ( it8 -> sy )		709417	0					
ANR	709461	Condition	it8 -> sy	1928:16:52115:52123	709417	0	True				
ANR	709462	PtrMemberAccess	it8 -> sy		709417	0					
ANR	709463	Identifier	it8		709417	0					
ANR	709464	Identifier	sy		709417	1					
ANR	709465	CompoundStatement		12:27:262:262	709417	1					
ANR	709466	Label	case SKEYWORD :	1930:8:52137:52150	709417	0	True				
ANR	709467	Identifier	SKEYWORD		709417	0					
ANR	709468	ExpressionStatement	InSymbol ( it8 )	1931:16:52168:52181	709417	1	True				
ANR	709469	CallExpression	InSymbol ( it8 )		709417	0					
ANR	709470	Callee	InSymbol		709417	0					
ANR	709471	Identifier	InSymbol		709417	0					
ANR	709472	ArgumentList	it8		709417	1					
ANR	709473	Argument	it8		709417	0					
ANR	709474	Identifier	it8		709417	0					
ANR	709475	IfStatement	"if ( ! GetVal ( it8 , Buffer , MAXSTR - 1 , ""Keyword expected"" ) )"		709417	2					
ANR	709476	Condition	"! GetVal ( it8 , Buffer , MAXSTR - 1 , ""Keyword expected"" )"	1932:20:52203:52252	709417	0	True				
ANR	709477	UnaryOperationExpression	"! GetVal ( it8 , Buffer , MAXSTR - 1 , ""Keyword expected"" )"		709417	0					
ANR	709478	UnaryOperator	!		709417	0					
ANR	709479	CallExpression	"GetVal ( it8 , Buffer , MAXSTR - 1 , ""Keyword expected"" )"		709417	1					
ANR	709480	Callee	GetVal		709417	0					
ANR	709481	Identifier	GetVal		709417	0					
ANR	709482	ArgumentList	it8		709417	1					
ANR	709483	Argument	it8		709417	0					
ANR	709484	Identifier	it8		709417	0					
ANR	709485	Argument	Buffer		709417	1					
ANR	709486	Identifier	Buffer		709417	0					
ANR	709487	Argument	MAXSTR - 1		709417	2					
ANR	709488	AdditiveExpression	MAXSTR - 1		709417	0		-			
ANR	709489	Identifier	MAXSTR		709417	0					
ANR	709490	PrimaryExpression	1		709417	1					
ANR	709491	Argument	"""Keyword expected"""		709417	3					
ANR	709492	PrimaryExpression	"""Keyword expected"""		709417	0					
ANR	709493	ReturnStatement	return FALSE ;	1932:72:52255:52267	709417	1	True				
ANR	709494	Identifier	FALSE		709417	0					
ANR	709495	IfStatement	"if ( ! AddAvailableProperty ( it8 , Buffer , WRITE_UNCOOKED ) )"		709417	3					
ANR	709496	Condition	"! AddAvailableProperty ( it8 , Buffer , WRITE_UNCOOKED )"	1933:20:52289:52338	709417	0	True				
ANR	709497	UnaryOperationExpression	"! AddAvailableProperty ( it8 , Buffer , WRITE_UNCOOKED )"		709417	0					
ANR	709498	UnaryOperator	!		709417	0					
ANR	709499	CallExpression	"AddAvailableProperty ( it8 , Buffer , WRITE_UNCOOKED )"		709417	1					
ANR	709500	Callee	AddAvailableProperty		709417	0					
ANR	709501	Identifier	AddAvailableProperty		709417	0					
ANR	709502	ArgumentList	it8		709417	1					
ANR	709503	Argument	it8		709417	0					
ANR	709504	Identifier	it8		709417	0					
ANR	709505	Argument	Buffer		709417	1					
ANR	709506	Identifier	Buffer		709417	0					
ANR	709507	Argument	WRITE_UNCOOKED		709417	2					
ANR	709508	Identifier	WRITE_UNCOOKED		709417	0					
ANR	709509	ReturnStatement	return FALSE ;	1933:72:52341:52353	709417	1	True				
ANR	709510	Identifier	FALSE		709417	0					
ANR	709511	ExpressionStatement	InSymbol ( it8 )	1934:16:52371:52384	709417	4	True				
ANR	709512	CallExpression	InSymbol ( it8 )		709417	0					
ANR	709513	Callee	InSymbol		709417	0					
ANR	709514	Identifier	InSymbol		709417	0					
ANR	709515	ArgumentList	it8		709417	1					
ANR	709516	Argument	it8		709417	0					
ANR	709517	Identifier	it8		709417	0					
ANR	709518	BreakStatement	break ;	1935:16:52402:52407	709417	5	True				
ANR	709519	Label	case SDATA_FORMAT_ID :	1938:8:52419:52439	709417	6	True				
ANR	709520	Identifier	SDATA_FORMAT_ID		709417	0					
ANR	709521	ExpressionStatement	InSymbol ( it8 )	1939:16:52457:52470	709417	7	True				
ANR	709522	CallExpression	InSymbol ( it8 )		709417	0					
ANR	709523	Callee	InSymbol		709417	0					
ANR	709524	Identifier	InSymbol		709417	0					
ANR	709525	ArgumentList	it8		709417	1					
ANR	709526	Argument	it8		709417	0					
ANR	709527	Identifier	it8		709417	0					
ANR	709528	IfStatement	"if ( ! GetVal ( it8 , Buffer , MAXSTR - 1 , ""Keyword expected"" ) )"		709417	8					
ANR	709529	Condition	"! GetVal ( it8 , Buffer , MAXSTR - 1 , ""Keyword expected"" )"	1940:20:52492:52541	709417	0	True				
ANR	709530	UnaryOperationExpression	"! GetVal ( it8 , Buffer , MAXSTR - 1 , ""Keyword expected"" )"		709417	0					
ANR	709531	UnaryOperator	!		709417	0					
ANR	709532	CallExpression	"GetVal ( it8 , Buffer , MAXSTR - 1 , ""Keyword expected"" )"		709417	1					
ANR	709533	Callee	GetVal		709417	0					
ANR	709534	Identifier	GetVal		709417	0					
ANR	709535	ArgumentList	it8		709417	1					
ANR	709536	Argument	it8		709417	0					
ANR	709537	Identifier	it8		709417	0					
ANR	709538	Argument	Buffer		709417	1					
ANR	709539	Identifier	Buffer		709417	0					
ANR	709540	Argument	MAXSTR - 1		709417	2					
ANR	709541	AdditiveExpression	MAXSTR - 1		709417	0		-			
ANR	709542	Identifier	MAXSTR		709417	0					
ANR	709543	PrimaryExpression	1		709417	1					
ANR	709544	Argument	"""Keyword expected"""		709417	3					
ANR	709545	PrimaryExpression	"""Keyword expected"""		709417	0					
ANR	709546	ReturnStatement	return FALSE ;	1940:72:52544:52556	709417	1	True				
ANR	709547	Identifier	FALSE		709417	0					
ANR	709548	IfStatement	"if ( ! AddAvailableSampleID ( it8 , Buffer ) )"		709417	9					
ANR	709549	Condition	"! AddAvailableSampleID ( it8 , Buffer )"	1941:20:52578:52611	709417	0	True				
ANR	709550	UnaryOperationExpression	"! AddAvailableSampleID ( it8 , Buffer )"		709417	0					
ANR	709551	UnaryOperator	!		709417	0					
ANR	709552	CallExpression	"AddAvailableSampleID ( it8 , Buffer )"		709417	1					
ANR	709553	Callee	AddAvailableSampleID		709417	0					
ANR	709554	Identifier	AddAvailableSampleID		709417	0					
ANR	709555	ArgumentList	it8		709417	1					
ANR	709556	Argument	it8		709417	0					
ANR	709557	Identifier	it8		709417	0					
ANR	709558	Argument	Buffer		709417	1					
ANR	709559	Identifier	Buffer		709417	0					
ANR	709560	ReturnStatement	return FALSE ;	1941:56:52614:52626	709417	1	True				
ANR	709561	Identifier	FALSE		709417	0					
ANR	709562	ExpressionStatement	InSymbol ( it8 )	1942:16:52644:52657	709417	10	True				
ANR	709563	CallExpression	InSymbol ( it8 )		709417	0					
ANR	709564	Callee	InSymbol		709417	0					
ANR	709565	Identifier	InSymbol		709417	0					
ANR	709566	ArgumentList	it8		709417	1					
ANR	709567	Argument	it8		709417	0					
ANR	709568	Identifier	it8		709417	0					
ANR	709569	BreakStatement	break ;	1943:16:52675:52680	709417	11	True				
ANR	709570	Label	case SIDENT :	1946:8:52692:52703	709417	12	True				
ANR	709571	Identifier	SIDENT		709417	0					
ANR	709572	ExpressionStatement	"strncpy ( VarName , it8 -> id , MAXID - 1 )"	1947:16:52721:52755	709417	13	True				
ANR	709573	CallExpression	"strncpy ( VarName , it8 -> id , MAXID - 1 )"		709417	0					
ANR	709574	Callee	strncpy		709417	0					
ANR	709575	Identifier	strncpy		709417	0					
ANR	709576	ArgumentList	VarName		709417	1					
ANR	709577	Argument	VarName		709417	0					
ANR	709578	Identifier	VarName		709417	0					
ANR	709579	Argument	it8 -> id		709417	1					
ANR	709580	PtrMemberAccess	it8 -> id		709417	0					
ANR	709581	Identifier	it8		709417	0					
ANR	709582	Identifier	id		709417	1					
ANR	709583	Argument	MAXID - 1		709417	2					
ANR	709584	AdditiveExpression	MAXID - 1		709417	0		-			
ANR	709585	Identifier	MAXID		709417	0					
ANR	709586	PrimaryExpression	1		709417	1					
ANR	709587	ExpressionStatement	VarName [ MAXID - 1 ] = 0	1948:16:52773:52793	709417	14	True				
ANR	709588	AssignmentExpression	VarName [ MAXID - 1 ] = 0		709417	0		=			
ANR	709589	ArrayIndexing	VarName [ MAXID - 1 ]		709417	0					
ANR	709590	Identifier	VarName		709417	0					
ANR	709591	AdditiveExpression	MAXID - 1		709417	1		-			
ANR	709592	Identifier	MAXID		709417	0					
ANR	709593	PrimaryExpression	1		709417	1					
ANR	709594	PrimaryExpression	0		709417	1					
ANR	709595	IfStatement	"if ( ! IsAvailableOnList ( it8 -> ValidKeywords , VarName , NULL , & Key ) )"		709417	15					
ANR	709596	Condition	"! IsAvailableOnList ( it8 -> ValidKeywords , VarName , NULL , & Key )"	1950:20:52816:52875	709417	0	True				
ANR	709597	UnaryOperationExpression	"! IsAvailableOnList ( it8 -> ValidKeywords , VarName , NULL , & Key )"		709417	0					
ANR	709598	UnaryOperator	!		709417	0					
ANR	709599	CallExpression	"IsAvailableOnList ( it8 -> ValidKeywords , VarName , NULL , & Key )"		709417	1					
ANR	709600	Callee	IsAvailableOnList		709417	0					
ANR	709601	Identifier	IsAvailableOnList		709417	0					
ANR	709602	ArgumentList	it8 -> ValidKeywords		709417	1					
ANR	709603	Argument	it8 -> ValidKeywords		709417	0					
ANR	709604	PtrMemberAccess	it8 -> ValidKeywords		709417	0					
ANR	709605	Identifier	it8		709417	0					
ANR	709606	Identifier	ValidKeywords		709417	1					
ANR	709607	Argument	VarName		709417	1					
ANR	709608	Identifier	VarName		709417	0					
ANR	709609	Argument	NULL		709417	2					
ANR	709610	Identifier	NULL		709417	0					
ANR	709611	Argument	& Key		709417	3					
ANR	709612	UnaryOperationExpression	& Key		709417	0					
ANR	709613	UnaryOperator	&		709417	0					
ANR	709614	Identifier	Key		709417	1					
ANR	709615	CompoundStatement		34:82:1014:1014	709417	1					
ANR	709616	ReturnStatement	"return SynError ( it8 , ""Undefined keyword '%s'"" , VarName ) ;"	1953:17:52922:52977	709417	0	True				
ANR	709617	CallExpression	"SynError ( it8 , ""Undefined keyword '%s'"" , VarName )"		709417	0					
ANR	709618	Callee	SynError		709417	0					
ANR	709619	Identifier	SynError		709417	0					
ANR	709620	ArgumentList	it8		709417	1					
ANR	709621	Argument	it8		709417	0					
ANR	709622	Identifier	it8		709417	0					
ANR	709623	Argument	"""Undefined keyword '%s'"""		709417	1					
ANR	709624	PrimaryExpression	"""Undefined keyword '%s'"""		709417	0					
ANR	709625	Argument	VarName		709417	2					
ANR	709626	Identifier	VarName		709417	0					
ANR	709627	ExpressionStatement	InSymbol ( it8 )	1960:16:53156:53169	709417	16	True				
ANR	709628	CallExpression	InSymbol ( it8 )		709417	0					
ANR	709629	Callee	InSymbol		709417	0					
ANR	709630	Identifier	InSymbol		709417	0					
ANR	709631	ArgumentList	it8		709417	1					
ANR	709632	Argument	it8		709417	0					
ANR	709633	Identifier	it8		709417	0					
ANR	709634	IfStatement	"if ( ! GetVal ( it8 , Buffer , MAXSTR - 1 , ""Property data expected"" ) )"		709417	17					
ANR	709635	Condition	"! GetVal ( it8 , Buffer , MAXSTR - 1 , ""Property data expected"" )"	1961:20:53191:53246	709417	0	True				
ANR	709636	UnaryOperationExpression	"! GetVal ( it8 , Buffer , MAXSTR - 1 , ""Property data expected"" )"		709417	0					
ANR	709637	UnaryOperator	!		709417	0					
ANR	709638	CallExpression	"GetVal ( it8 , Buffer , MAXSTR - 1 , ""Property data expected"" )"		709417	1					
ANR	709639	Callee	GetVal		709417	0					
ANR	709640	Identifier	GetVal		709417	0					
ANR	709641	ArgumentList	it8		709417	1					
ANR	709642	Argument	it8		709417	0					
ANR	709643	Identifier	it8		709417	0					
ANR	709644	Argument	Buffer		709417	1					
ANR	709645	Identifier	Buffer		709417	0					
ANR	709646	Argument	MAXSTR - 1		709417	2					
ANR	709647	AdditiveExpression	MAXSTR - 1		709417	0		-			
ANR	709648	Identifier	MAXSTR		709417	0					
ANR	709649	PrimaryExpression	1		709417	1					
ANR	709650	Argument	"""Property data expected"""		709417	3					
ANR	709651	PrimaryExpression	"""Property data expected"""		709417	0					
ANR	709652	ReturnStatement	return FALSE ;	1961:78:53249:53261	709417	1	True				
ANR	709653	Identifier	FALSE		709417	0					
ANR	709654	IfStatement	if ( Key -> WriteAs != WRITE_PAIR )		709417	18					
ANR	709655	Condition	Key -> WriteAs != WRITE_PAIR	1963:19:53283:53308	709417	0	True				
ANR	709656	EqualityExpression	Key -> WriteAs != WRITE_PAIR		709417	0		!=			
ANR	709657	PtrMemberAccess	Key -> WriteAs		709417	0					
ANR	709658	Identifier	Key		709417	0					
ANR	709659	Identifier	WriteAs		709417	1					
ANR	709660	Identifier	WRITE_PAIR		709417	1					
ANR	709661	CompoundStatement		47:47:1447:1447	709417	1					
ANR	709662	ExpressionStatement	"AddToList ( it8 , & GetTable ( it8 ) -> HeaderList , VarName , NULL , Buffer , ( it8 -> sy == SSTRING ) ? WRITE_STRINGIFY : WRITE_UNCOOKED )"	1964:20:53333:53487	709417	0	True				
ANR	709663	CallExpression	"AddToList ( it8 , & GetTable ( it8 ) -> HeaderList , VarName , NULL , Buffer , ( it8 -> sy == SSTRING ) ? WRITE_STRINGIFY : WRITE_UNCOOKED )"		709417	0					
ANR	709664	Callee	AddToList		709417	0					
ANR	709665	Identifier	AddToList		709417	0					
ANR	709666	ArgumentList	it8		709417	1					
ANR	709667	Argument	it8		709417	0					
ANR	709668	Identifier	it8		709417	0					
ANR	709669	Argument	& GetTable ( it8 ) -> HeaderList		709417	1					
ANR	709670	UnaryOperationExpression	& GetTable ( it8 ) -> HeaderList		709417	0					
ANR	709671	UnaryOperator	&		709417	0					
ANR	709672	PtrMemberAccess	GetTable ( it8 ) -> HeaderList		709417	1					
ANR	709673	CallExpression	GetTable ( it8 )		709417	0					
ANR	709674	Callee	GetTable		709417	0					
ANR	709675	Identifier	GetTable		709417	0					
ANR	709676	ArgumentList	it8		709417	1					
ANR	709677	Argument	it8		709417	0					
ANR	709678	Identifier	it8		709417	0					
ANR	709679	Identifier	HeaderList		709417	1					
ANR	709680	Argument	VarName		709417	2					
ANR	709681	Identifier	VarName		709417	0					
ANR	709682	Argument	NULL		709417	3					
ANR	709683	Identifier	NULL		709417	0					
ANR	709684	Argument	Buffer		709417	4					
ANR	709685	Identifier	Buffer		709417	0					
ANR	709686	Argument	( it8 -> sy == SSTRING ) ? WRITE_STRINGIFY : WRITE_UNCOOKED		709417	5					
ANR	709687	ConditionalExpression	( it8 -> sy == SSTRING ) ? WRITE_STRINGIFY : WRITE_UNCOOKED		709417	0					
ANR	709688	Condition	it8 -> sy == SSTRING		709417	0					
ANR	709689	EqualityExpression	it8 -> sy == SSTRING		709417	0		==			
ANR	709690	PtrMemberAccess	it8 -> sy		709417	0					
ANR	709691	Identifier	it8		709417	0					
ANR	709692	Identifier	sy		709417	1					
ANR	709693	Identifier	SSTRING		709417	1					
ANR	709694	Identifier	WRITE_STRINGIFY		709417	1					
ANR	709695	Identifier	WRITE_UNCOOKED		709417	2					
ANR	709696	ElseStatement	else		709417	0					
ANR	709697	CompoundStatement		53:20:1726:1739	709417	0					
ANR	709698	IdentifierDeclStatement	const char * Subkey ;	1968:20:53550:53568	709417	0	True				
ANR	709699	IdentifierDecl	* Subkey		709417	0					
ANR	709700	IdentifierDeclType	const char *		709417	0					
ANR	709701	Identifier	Subkey		709417	1					
ANR	709702	IdentifierDeclStatement	char * Nextkey ;	1969:20:53590:53603	709417	1	True				
ANR	709703	IdentifierDecl	* Nextkey		709417	0					
ANR	709704	IdentifierDeclType	char *		709417	0					
ANR	709705	Identifier	Nextkey		709417	1					
ANR	709706	IfStatement	if ( it8 -> sy != SSTRING )		709417	2					
ANR	709707	Condition	it8 -> sy != SSTRING	1970:24:53629:53646	709417	0	True				
ANR	709708	EqualityExpression	it8 -> sy != SSTRING		709417	0		!=			
ANR	709709	PtrMemberAccess	it8 -> sy		709417	0					
ANR	709710	Identifier	it8		709417	0					
ANR	709711	Identifier	sy		709417	1					
ANR	709712	Identifier	SSTRING		709417	1					
ANR	709713	ReturnStatement	"return SynError ( it8 , ""Invalid value '%s' for property '%s'."" , Buffer , VarName ) ;"	1971:24:53673:53751	709417	1	True				
ANR	709714	CallExpression	"SynError ( it8 , ""Invalid value '%s' for property '%s'."" , Buffer , VarName )"		709417	0					
ANR	709715	Callee	SynError		709417	0					
ANR	709716	Identifier	SynError		709417	0					
ANR	709717	ArgumentList	it8		709417	1					
ANR	709718	Argument	it8		709417	0					
ANR	709719	Identifier	it8		709417	0					
ANR	709720	Argument	"""Invalid value '%s' for property '%s'."""		709417	1					
ANR	709721	PrimaryExpression	"""Invalid value '%s' for property '%s'."""		709417	0					
ANR	709722	Argument	Buffer		709417	2					
ANR	709723	Identifier	Buffer		709417	0					
ANR	709724	Argument	VarName		709417	3					
ANR	709725	Identifier	VarName		709417	0					
ANR	709726	ForStatement	for ( Subkey = Buffer ; Subkey != NULL ; Subkey = Nextkey )		709417	3					
ANR	709727	ForInit	Subkey = Buffer ;	1974:25:53879:53894	709417	0	True				
ANR	709728	AssignmentExpression	Subkey = Buffer		709417	0		=			
ANR	709729	Identifier	Subkey		709417	0					
ANR	709730	Identifier	Buffer		709417	1					
ANR	709731	Condition	Subkey != NULL	1974:42:53896:53909	709417	1	True				
ANR	709732	EqualityExpression	Subkey != NULL		709417	0		!=			
ANR	709733	Identifier	Subkey		709417	0					
ANR	709734	Identifier	NULL		709417	1					
ANR	709735	AssignmentExpression	Subkey = Nextkey	1974:58:53912:53927	709417	2	True	=			
ANR	709736	Identifier	Subkey		709417	0					
ANR	709737	Identifier	Nextkey		709417	1					
ANR	709738	CompoundStatement		60:24:2112:2130	709417	3					
ANR	709739	IdentifierDeclStatement	"char * Value , * temp ;"	1976:24:53976:53994	709417	0	True				
ANR	709740	IdentifierDecl	* Value		709417	0					
ANR	709741	IdentifierDeclType	char *		709417	0					
ANR	709742	Identifier	Value		709417	1					
ANR	709743	IdentifierDecl	* temp		709417	1					
ANR	709744	IdentifierDeclType	char *		709417	0					
ANR	709745	Identifier	temp		709417	1					
ANR	709746	ExpressionStatement	"Nextkey = ( char * ) strchr ( Subkey , ';' )"	1979:24:54078:54115	709417	1	True				
ANR	709747	AssignmentExpression	"Nextkey = ( char * ) strchr ( Subkey , ';' )"		709417	0		=			
ANR	709748	Identifier	Nextkey		709417	0					
ANR	709749	CastExpression	"( char * ) strchr ( Subkey , ';' )"		709417	1					
ANR	709750	CastTarget	char *		709417	0					
ANR	709751	CallExpression	"strchr ( Subkey , ';' )"		709417	1					
ANR	709752	Callee	strchr		709417	0					
ANR	709753	Identifier	strchr		709417	0					
ANR	709754	ArgumentList	Subkey		709417	1					
ANR	709755	Argument	Subkey		709417	0					
ANR	709756	Identifier	Subkey		709417	0					
ANR	709757	Argument	';'		709417	1					
ANR	709758	PrimaryExpression	';'		709417	0					
ANR	709759	IfStatement	if ( Nextkey )		709417	2					
ANR	709760	Condition	Nextkey	1980:27:54144:54150	709417	0	True				
ANR	709761	Identifier	Nextkey		709417	0					
ANR	709762	ExpressionStatement	* Nextkey ++ = '\\0'	1981:28:54181:54198	709417	1	True				
ANR	709763	AssignmentExpression	* Nextkey ++ = '\\0'		709417	0		=			
ANR	709764	UnaryOperationExpression	* Nextkey ++		709417	0					
ANR	709765	UnaryOperator	*		709417	0					
ANR	709766	PostIncDecOperationExpression	Nextkey ++		709417	1					
ANR	709767	Identifier	Nextkey		709417	0					
ANR	709768	IncDec	++		709417	1					
ANR	709769	PrimaryExpression	'\\0'		709417	1					
ANR	709770	ExpressionStatement	"Value = ( char * ) strrchr ( Subkey , ',' )"	1984:24:54298:54334	709417	3	True				
ANR	709771	AssignmentExpression	"Value = ( char * ) strrchr ( Subkey , ',' )"		709417	0		=			
ANR	709772	Identifier	Value		709417	0					
ANR	709773	CastExpression	"( char * ) strrchr ( Subkey , ',' )"		709417	1					
ANR	709774	CastTarget	char *		709417	0					
ANR	709775	CallExpression	"strrchr ( Subkey , ',' )"		709417	1					
ANR	709776	Callee	strrchr		709417	0					
ANR	709777	Identifier	strrchr		709417	0					
ANR	709778	ArgumentList	Subkey		709417	1					
ANR	709779	Argument	Subkey		709417	0					
ANR	709780	Identifier	Subkey		709417	0					
ANR	709781	Argument	"','"		709417	1					
ANR	709782	PrimaryExpression	"','"		709417	0					
ANR	709783	IfStatement	if ( Value == NULL )		709417	4					
ANR	709784	Condition	Value == NULL	1985:27:54363:54375	709417	0	True				
ANR	709785	EqualityExpression	Value == NULL		709417	0		==			
ANR	709786	Identifier	Value		709417	0					
ANR	709787	Identifier	NULL		709417	1					
ANR	709788	ReturnStatement	"return SynError ( it8 , ""Invalid value for property '%s'."" , VarName ) ;"	1986:28:54406:54471	709417	1	True				
ANR	709789	CallExpression	"SynError ( it8 , ""Invalid value for property '%s'."" , VarName )"		709417	0					
ANR	709790	Callee	SynError		709417	0					
ANR	709791	Identifier	SynError		709417	0					
ANR	709792	ArgumentList	it8		709417	1					
ANR	709793	Argument	it8		709417	0					
ANR	709794	Identifier	it8		709417	0					
ANR	709795	Argument	"""Invalid value for property '%s'."""		709417	1					
ANR	709796	PrimaryExpression	"""Invalid value for property '%s'."""		709417	0					
ANR	709797	Argument	VarName		709417	2					
ANR	709798	Identifier	VarName		709417	0					
ANR	709799	ExpressionStatement	temp = Value ++	1989:24:54580:54594	709417	5	True				
ANR	709800	AssignmentExpression	temp = Value ++		709417	0		=			
ANR	709801	Identifier	temp		709417	0					
ANR	709802	PostIncDecOperationExpression	Value ++		709417	1					
ANR	709803	Identifier	Value		709417	0					
ANR	709804	IncDec	++		709417	1					
ANR	709805	DoStatement	do		709417	6					
ANR	709806	ExpressionStatement	* temp -- = '\\0'	1990:27:54623:54637	709417	0	True				
ANR	709807	AssignmentExpression	* temp -- = '\\0'		709417	0		=			
ANR	709808	UnaryOperationExpression	* temp --		709417	0					
ANR	709809	UnaryOperator	*		709417	0					
ANR	709810	PostIncDecOperationExpression	temp --		709417	1					
ANR	709811	Identifier	temp		709417	0					
ANR	709812	IncDec	--		709417	1					
ANR	709813	PrimaryExpression	'\\0'		709417	1					
ANR	709814	Condition	temp >= Subkey && * temp == ' '	1990:49:54645:54674	709417	1	True				
ANR	709815	AndExpression	temp >= Subkey && * temp == ' '		709417	0		&&			
ANR	709816	RelationalExpression	temp >= Subkey		709417	0		>=			
ANR	709817	Identifier	temp		709417	0					
ANR	709818	Identifier	Subkey		709417	1					
ANR	709819	EqualityExpression	* temp == ' '		709417	1		==			
ANR	709820	UnaryOperationExpression	* temp		709417	0					
ANR	709821	UnaryOperator	*		709417	0					
ANR	709822	Identifier	temp		709417	1					
ANR	709823	PrimaryExpression	' '		709417	1					
ANR	709824	ExpressionStatement	temp = Value + strlen ( Value ) - 1	1993:24:54760:54792	709417	7	True				
ANR	709825	AssignmentExpression	temp = Value + strlen ( Value ) - 1		709417	0		=			
ANR	709826	Identifier	temp		709417	0					
ANR	709827	AdditiveExpression	Value + strlen ( Value ) - 1		709417	1		+			
ANR	709828	Identifier	Value		709417	0					
ANR	709829	AdditiveExpression	strlen ( Value ) - 1		709417	1		-			
ANR	709830	CallExpression	strlen ( Value )		709417	0					
ANR	709831	Callee	strlen		709417	0					
ANR	709832	Identifier	strlen		709417	0					
ANR	709833	ArgumentList	Value		709417	1					
ANR	709834	Argument	Value		709417	0					
ANR	709835	Identifier	Value		709417	0					
ANR	709836	PrimaryExpression	1		709417	1					
ANR	709837	WhileStatement	while ( * temp == ' ' )		709417	8					
ANR	709838	Condition	* temp == ' '	1994:30:54824:54835	709417	0	True				
ANR	709839	EqualityExpression	* temp == ' '		709417	0		==			
ANR	709840	UnaryOperationExpression	* temp		709417	0					
ANR	709841	UnaryOperator	*		709417	0					
ANR	709842	Identifier	temp		709417	1					
ANR	709843	PrimaryExpression	' '		709417	1					
ANR	709844	ExpressionStatement	* temp -- = '\\0'	1994:44:54838:54852	709417	1	True				
ANR	709845	AssignmentExpression	* temp -- = '\\0'		709417	0		=			
ANR	709846	UnaryOperationExpression	* temp --		709417	0					
ANR	709847	UnaryOperator	*		709417	0					
ANR	709848	PostIncDecOperationExpression	temp --		709417	1					
ANR	709849	Identifier	temp		709417	0					
ANR	709850	IncDec	--		709417	1					
ANR	709851	PrimaryExpression	'\\0'		709417	1					
ANR	709852	ExpressionStatement	"Subkey += strspn ( Subkey , "" "" )"	1997:24:54937:54966	709417	9	True				
ANR	709853	AssignmentExpression	"Subkey += strspn ( Subkey , "" "" )"		709417	0		+=			
ANR	709854	Identifier	Subkey		709417	0					
ANR	709855	CallExpression	"strspn ( Subkey , "" "" )"		709417	1					
ANR	709856	Callee	strspn		709417	0					
ANR	709857	Identifier	strspn		709417	0					
ANR	709858	ArgumentList	Subkey		709417	1					
ANR	709859	Argument	Subkey		709417	0					
ANR	709860	Identifier	Subkey		709417	0					
ANR	709861	Argument	""" """		709417	1					
ANR	709862	PrimaryExpression	""" """		709417	0					
ANR	709863	ExpressionStatement	"Value += strspn ( Value , "" "" )"	1998:24:54992:55019	709417	10	True				
ANR	709864	AssignmentExpression	"Value += strspn ( Value , "" "" )"		709417	0		+=			
ANR	709865	Identifier	Value		709417	0					
ANR	709866	CallExpression	"strspn ( Value , "" "" )"		709417	1					
ANR	709867	Callee	strspn		709417	0					
ANR	709868	Identifier	strspn		709417	0					
ANR	709869	ArgumentList	Value		709417	1					
ANR	709870	Argument	Value		709417	0					
ANR	709871	Identifier	Value		709417	0					
ANR	709872	Argument	""" """		709417	1					
ANR	709873	PrimaryExpression	""" """		709417	0					
ANR	709874	IfStatement	if ( Subkey [ 0 ] == 0 || Value [ 0 ] == 0 )		709417	11					
ANR	709875	Condition	Subkey [ 0 ] == 0 || Value [ 0 ] == 0	2000:27:55049:55079	709417	0	True				
ANR	709876	OrExpression	Subkey [ 0 ] == 0 || Value [ 0 ] == 0		709417	0		||			
ANR	709877	EqualityExpression	Subkey [ 0 ] == 0		709417	0		==			
ANR	709878	ArrayIndexing	Subkey [ 0 ]		709417	0					
ANR	709879	Identifier	Subkey		709417	0					
ANR	709880	PrimaryExpression	0		709417	1					
ANR	709881	PrimaryExpression	0		709417	1					
ANR	709882	EqualityExpression	Value [ 0 ] == 0		709417	1		==			
ANR	709883	ArrayIndexing	Value [ 0 ]		709417	0					
ANR	709884	Identifier	Value		709417	0					
ANR	709885	PrimaryExpression	0		709417	1					
ANR	709886	PrimaryExpression	0		709417	1					
ANR	709887	ReturnStatement	"return SynError ( it8 , ""Invalid value for property '%s'."" , VarName ) ;"	2001:28:55110:55175	709417	1	True				
ANR	709888	CallExpression	"SynError ( it8 , ""Invalid value for property '%s'."" , VarName )"		709417	0					
ANR	709889	Callee	SynError		709417	0					
ANR	709890	Identifier	SynError		709417	0					
ANR	709891	ArgumentList	it8		709417	1					
ANR	709892	Argument	it8		709417	0					
ANR	709893	Identifier	it8		709417	0					
ANR	709894	Argument	"""Invalid value for property '%s'."""		709417	1					
ANR	709895	PrimaryExpression	"""Invalid value for property '%s'."""		709417	0					
ANR	709896	Argument	VarName		709417	2					
ANR	709897	Identifier	VarName		709417	0					
ANR	709898	ExpressionStatement	"AddToList ( it8 , & GetTable ( it8 ) -> HeaderList , VarName , Subkey , Value , WRITE_PAIR )"	2002:24:55201:55279	709417	12	True				
ANR	709899	CallExpression	"AddToList ( it8 , & GetTable ( it8 ) -> HeaderList , VarName , Subkey , Value , WRITE_PAIR )"		709417	0					
ANR	709900	Callee	AddToList		709417	0					
ANR	709901	Identifier	AddToList		709417	0					
ANR	709902	ArgumentList	it8		709417	1					
ANR	709903	Argument	it8		709417	0					
ANR	709904	Identifier	it8		709417	0					
ANR	709905	Argument	& GetTable ( it8 ) -> HeaderList		709417	1					
ANR	709906	UnaryOperationExpression	& GetTable ( it8 ) -> HeaderList		709417	0					
ANR	709907	UnaryOperator	&		709417	0					
ANR	709908	PtrMemberAccess	GetTable ( it8 ) -> HeaderList		709417	1					
ANR	709909	CallExpression	GetTable ( it8 )		709417	0					
ANR	709910	Callee	GetTable		709417	0					
ANR	709911	Identifier	GetTable		709417	0					
ANR	709912	ArgumentList	it8		709417	1					
ANR	709913	Argument	it8		709417	0					
ANR	709914	Identifier	it8		709417	0					
ANR	709915	Identifier	HeaderList		709417	1					
ANR	709916	Argument	VarName		709417	2					
ANR	709917	Identifier	VarName		709417	0					
ANR	709918	Argument	Subkey		709417	3					
ANR	709919	Identifier	Subkey		709417	0					
ANR	709920	Argument	Value		709417	4					
ANR	709921	Identifier	Value		709417	0					
ANR	709922	Argument	WRITE_PAIR		709417	5					
ANR	709923	Identifier	WRITE_PAIR		709417	0					
ANR	709924	ExpressionStatement	InSymbol ( it8 )	2006:16:55338:55351	709417	19	True				
ANR	709925	CallExpression	InSymbol ( it8 )		709417	0					
ANR	709926	Callee	InSymbol		709417	0					
ANR	709927	Identifier	InSymbol		709417	0					
ANR	709928	ArgumentList	it8		709417	1					
ANR	709929	Argument	it8		709417	0					
ANR	709930	Identifier	it8		709417	0					
ANR	709931	BreakStatement	break ;	2007:16:55369:55374	709417	20	True				
ANR	709932	Label	case SEOLN :	2010:8:55386:55396	709417	21	True				
ANR	709933	Identifier	SEOLN		709417	0					
ANR	709934	BreakStatement	break ;	2010:20:55398:55403	709417	22	True				
ANR	709935	Label	default :	2012:8:55414:55421	709417	23	True				
ANR	709936	Identifier	default		709417	0					
ANR	709937	ReturnStatement	"return SynError ( it8 , ""expected keyword or identifier"" ) ;"	2013:16:55439:55493	709417	24	True				
ANR	709938	CallExpression	"SynError ( it8 , ""expected keyword or identifier"" )"		709417	0					
ANR	709939	Callee	SynError		709417	0					
ANR	709940	Identifier	SynError		709417	0					
ANR	709941	ArgumentList	it8		709417	1					
ANR	709942	Argument	it8		709417	0					
ANR	709943	Identifier	it8		709417	0					
ANR	709944	Argument	"""expected keyword or identifier"""		709417	1					
ANR	709945	PrimaryExpression	"""expected keyword or identifier"""		709417	0					
ANR	709946	ExpressionStatement	SkipEOLN ( it8 )	2016:4:55510:55523	709417	1	True				
ANR	709947	CallExpression	SkipEOLN ( it8 )		709417	0					
ANR	709948	Callee	SkipEOLN		709417	0					
ANR	709949	Identifier	SkipEOLN		709417	0					
ANR	709950	ArgumentList	it8		709417	1					
ANR	709951	Argument	it8		709417	0					
ANR	709952	Identifier	it8		709417	0					
ANR	709953	ReturnStatement	return TRUE ;	2019:4:55536:55547	709417	4	True				
ANR	709954	Identifier	TRUE		709417	0					
ANR	709955	ReturnType	static cmsBool		709417	1					
ANR	709956	Identifier	HeaderSection		709417	2					
ANR	709957	ParameterList	cmsIT8 * it8		709417	3					
ANR	709958	Parameter	cmsIT8 * it8	1916:22:51850:51860	709417	0	True				
ANR	709959	ParameterType	cmsIT8 *		709417	0					
ANR	709960	Identifier	it8		709417	1					
ANR	709961	CFGEntryNode	ENTRY		709417		True				
ANR	709962	CFGExitNode	EXIT		709417		True				
ANR	709963	Symbol	SBEGIN_DATA_FORMAT		709417						
ANR	709964	Symbol	MAXID		709417						
ANR	709965	Symbol	strchr		709417						
ANR	709966	Symbol	* temp --		709417						
ANR	709967	Symbol	SynError		709417						
ANR	709968	Symbol	* Subkey		709417						
ANR	709969	Symbol	SEOF		709417						
ANR	709970	Symbol	strlen		709417						
ANR	709971	Symbol	* Value		709417						
ANR	709972	Symbol	* Nextkey ++		709417						
ANR	709973	Symbol	* VarName		709417						
ANR	709974	Symbol	* MAXID		709417						
ANR	709975	Symbol	* Key		709417						
ANR	709976	Symbol	& GetTable ( it8 ) -> HeaderList		709417						
ANR	709977	Symbol	WRITE_PAIR		709417						
ANR	709978	Symbol	SSYNERROR		709417						
ANR	709979	Symbol	AddAvailableProperty		709417						
ANR	709980	Symbol	WRITE_STRINGIFY		709417						
ANR	709981	Symbol	IsAvailableOnList		709417						
ANR	709982	Symbol	it8 -> id		709417						
ANR	709983	Symbol	Buffer		709417						
ANR	709984	Symbol	& Key		709417						
ANR	709985	Symbol	temp		709417						
ANR	709986	Symbol	NULL		709417						
ANR	709987	Symbol	it8 -> ValidKeywords		709417						
ANR	709988	Symbol	SBEGIN_DATA		709417						
ANR	709989	Symbol	GetVal		709417						
ANR	709990	Symbol	* it8		709417						
ANR	709991	Symbol	SSTRING		709417						
ANR	709992	Symbol	TRUE		709417						
ANR	709993	Symbol	it8 -> sy		709417						
ANR	709994	Symbol	it8		709417						
ANR	709995	Symbol	* temp		709417						
ANR	709996	Symbol	MAXSTR		709417						
ANR	709997	Symbol	GetTable		709417						
ANR	709998	Symbol	strspn		709417						
ANR	709999	Symbol	strrchr		709417						
ANR	710000	Symbol	WRITE_UNCOOKED		709417						
ANR	710001	Symbol	Value		709417						
ANR	710002	Symbol	AddAvailableSampleID		709417						
ANR	710003	Symbol	FALSE		709417						
ANR	710004	Symbol	VarName		709417						
ANR	710005	Symbol	Key -> WriteAs		709417						
ANR	710006	Symbol	Nextkey		709417						
ANR	710007	Symbol	Key		709417						
ANR	710008	Symbol	Subkey		709417						
ANR	710009	Function	ReadType	2024:0:55554:55894							
ANR	710010	FunctionDef	"ReadType (cmsIT8 * it8 , char * SheetTypePtr)"		710009	0					
ANR	710011	CompoundStatement		2026:0:55608:55894	710009	0					
ANR	710012	WhileStatement	while ( isseparator ( it8 -> ch ) )		710009	0					
ANR	710013	Condition	isseparator ( it8 -> ch )	2029:11:55664:55683	710009	0	True				
ANR	710014	CallExpression	isseparator ( it8 -> ch )		710009	0					
ANR	710015	Callee	isseparator		710009	0					
ANR	710016	Identifier	isseparator		710009	0					
ANR	710017	ArgumentList	it8 -> ch		710009	1					
ANR	710018	Argument	it8 -> ch		710009	0					
ANR	710019	PtrMemberAccess	it8 -> ch		710009	0					
ANR	710020	Identifier	it8		710009	0					
ANR	710021	Identifier	ch		710009	1					
ANR	710022	ExpressionStatement	NextCh ( it8 )	2030:12:55698:55709	710009	1	True				
ANR	710023	CallExpression	NextCh ( it8 )		710009	0					
ANR	710024	Callee	NextCh		710009	0					
ANR	710025	Identifier	NextCh		710009	0					
ANR	710026	ArgumentList	it8		710009	1					
ANR	710027	Argument	it8		710009	0					
ANR	710028	Identifier	it8		710009	0					
ANR	710029	WhileStatement	while ( it8 -> ch != '\\r' && it8 -> ch != '\\n' && it8 -> ch != '\\t' && it8 -> ch != - 1 )		710009	1					
ANR	710030	Condition	it8 -> ch != '\\r' && it8 -> ch != '\\n' && it8 -> ch != '\\t' && it8 -> ch != - 1	2032:11:55723:55795	710009	0	True				
ANR	710031	AndExpression	it8 -> ch != '\\r' && it8 -> ch != '\\n' && it8 -> ch != '\\t' && it8 -> ch != - 1		710009	0		&&			
ANR	710032	EqualityExpression	it8 -> ch != '\\r'		710009	0		!=			
ANR	710033	PtrMemberAccess	it8 -> ch		710009	0					
ANR	710034	Identifier	it8		710009	0					
ANR	710035	Identifier	ch		710009	1					
ANR	710036	PrimaryExpression	'\\r'		710009	1					
ANR	710037	AndExpression	it8 -> ch != '\\n' && it8 -> ch != '\\t' && it8 -> ch != - 1		710009	1		&&			
ANR	710038	EqualityExpression	it8 -> ch != '\\n'		710009	0		!=			
ANR	710039	PtrMemberAccess	it8 -> ch		710009	0					
ANR	710040	Identifier	it8		710009	0					
ANR	710041	Identifier	ch		710009	1					
ANR	710042	PrimaryExpression	'\\n'		710009	1					
ANR	710043	AndExpression	it8 -> ch != '\\t' && it8 -> ch != - 1		710009	1		&&			
ANR	710044	EqualityExpression	it8 -> ch != '\\t'		710009	0		!=			
ANR	710045	PtrMemberAccess	it8 -> ch		710009	0					
ANR	710046	Identifier	it8		710009	0					
ANR	710047	Identifier	ch		710009	1					
ANR	710048	PrimaryExpression	'\\t'		710009	1					
ANR	710049	EqualityExpression	it8 -> ch != - 1		710009	1		!=			
ANR	710050	PtrMemberAccess	it8 -> ch		710009	0					
ANR	710051	Identifier	it8		710009	0					
ANR	710052	Identifier	ch		710009	1					
ANR	710053	UnaryOperationExpression	- 1		710009	1					
ANR	710054	UnaryOperator	-		710009	0					
ANR	710055	PrimaryExpression	1		710009	1					
ANR	710056	CompoundStatement		7:86:189:189	710009	1					
ANR	710057	ExpressionStatement	* SheetTypePtr ++ = ( char ) it8 -> ch	2034:8:55809:55841	710009	0	True				
ANR	710058	AssignmentExpression	* SheetTypePtr ++ = ( char ) it8 -> ch		710009	0		=			
ANR	710059	UnaryOperationExpression	* SheetTypePtr ++		710009	0					
ANR	710060	UnaryOperator	*		710009	0					
ANR	710061	PostIncDecOperationExpression	SheetTypePtr ++		710009	1					
ANR	710062	Identifier	SheetTypePtr		710009	0					
ANR	710063	IncDec	++		710009	1					
ANR	710064	CastExpression	( char ) it8 -> ch		710009	1					
ANR	710065	CastTarget	char		710009	0					
ANR	710066	PtrMemberAccess	it8 -> ch		710009	1					
ANR	710067	Identifier	it8		710009	0					
ANR	710068	Identifier	ch		710009	1					
ANR	710069	ExpressionStatement	NextCh ( it8 )	2035:8:55851:55862	710009	1	True				
ANR	710070	CallExpression	NextCh ( it8 )		710009	0					
ANR	710071	Callee	NextCh		710009	0					
ANR	710072	Identifier	NextCh		710009	0					
ANR	710073	ArgumentList	it8		710009	1					
ANR	710074	Argument	it8		710009	0					
ANR	710075	Identifier	it8		710009	0					
ANR	710076	ExpressionStatement	* SheetTypePtr = 0	2038:4:55875:55892	710009	2	True				
ANR	710077	AssignmentExpression	* SheetTypePtr = 0		710009	0		=			
ANR	710078	UnaryOperationExpression	* SheetTypePtr		710009	0					
ANR	710079	UnaryOperator	*		710009	0					
ANR	710080	Identifier	SheetTypePtr		710009	1					
ANR	710081	PrimaryExpression	0		710009	1					
ANR	710082	ReturnType	static void		710009	1					
ANR	710083	Identifier	ReadType		710009	2					
ANR	710084	ParameterList	"cmsIT8 * it8 , char * SheetTypePtr"		710009	3					
ANR	710085	Parameter	cmsIT8 * it8	2025:14:55575:55585	710009	0	True				
ANR	710086	ParameterType	cmsIT8 *		710009	0					
ANR	710087	Identifier	it8		710009	1					
ANR	710088	Parameter	char * SheetTypePtr	2025:27:55588:55605	710009	1	True				
ANR	710089	ParameterType	char *		710009	0					
ANR	710090	Identifier	SheetTypePtr		710009	1					
ANR	710091	CFGEntryNode	ENTRY		710009		True				
ANR	710092	CFGExitNode	EXIT		710009		True				
ANR	710093	Symbol	* SheetTypePtr ++		710009						
ANR	710094	Symbol	SheetTypePtr		710009						
ANR	710095	Symbol	* it8		710009						
ANR	710096	Symbol	it8 -> ch		710009						
ANR	710097	Symbol	it8		710009						
ANR	710098	Symbol	* SheetTypePtr		710009						
ANR	710099	Symbol	isseparator		710009						
ANR	710100	Function	ParseIT8	2042:0:55898:58490							
ANR	710101	FunctionDef	"ParseIT8 (cmsIT8 * it8 , cmsBool nosheet)"		710100	0					
ANR	710102	CompoundStatement		2044:0:55952:58490	710100	0					
ANR	710103	IdentifierDeclStatement	char * SheetTypePtr = it8 -> Tab [ 0 ] . SheetType ;	2045:4:55958:56001	710100	0	True				
ANR	710104	IdentifierDecl	* SheetTypePtr = it8 -> Tab [ 0 ] . SheetType		710100	0					
ANR	710105	IdentifierDeclType	char *		710100	0					
ANR	710106	Identifier	SheetTypePtr		710100	1					
ANR	710107	AssignmentExpression	* SheetTypePtr = it8 -> Tab [ 0 ] . SheetType		710100	2		=			
ANR	710108	Identifier	SheetTypePtr		710100	0					
ANR	710109	MemberAccess	it8 -> Tab [ 0 ] . SheetType		710100	1					
ANR	710110	ArrayIndexing	it8 -> Tab [ 0 ]		710100	0					
ANR	710111	PtrMemberAccess	it8 -> Tab		710100	0					
ANR	710112	Identifier	it8		710100	0					
ANR	710113	Identifier	Tab		710100	1					
ANR	710114	PrimaryExpression	0		710100	1					
ANR	710115	Identifier	SheetType		710100	1					
ANR	710116	IfStatement	if ( nosheet == 0 )		710100	1					
ANR	710117	Condition	nosheet == 0	2047:8:56012:56023	710100	0	True				
ANR	710118	EqualityExpression	nosheet == 0		710100	0		==			
ANR	710119	Identifier	nosheet		710100	0					
ANR	710120	PrimaryExpression	0		710100	1					
ANR	710121	CompoundStatement		4:22:73:73	710100	1					
ANR	710122	ExpressionStatement	"ReadType ( it8 , SheetTypePtr )"	2048:8:56036:56063	710100	0	True				
ANR	710123	CallExpression	"ReadType ( it8 , SheetTypePtr )"		710100	0					
ANR	710124	Callee	ReadType		710100	0					
ANR	710125	Identifier	ReadType		710100	0					
ANR	710126	ArgumentList	it8		710100	1					
ANR	710127	Argument	it8		710100	0					
ANR	710128	Identifier	it8		710100	0					
ANR	710129	Argument	SheetTypePtr		710100	1					
ANR	710130	Identifier	SheetTypePtr		710100	0					
ANR	710131	ExpressionStatement	InSymbol ( it8 )	2051:4:56076:56089	710100	2	True				
ANR	710132	CallExpression	InSymbol ( it8 )		710100	0					
ANR	710133	Callee	InSymbol		710100	0					
ANR	710134	Identifier	InSymbol		710100	0					
ANR	710135	ArgumentList	it8		710100	1					
ANR	710136	Argument	it8		710100	0					
ANR	710137	Identifier	it8		710100	0					
ANR	710138	ExpressionStatement	SkipEOLN ( it8 )	2053:4:56096:56109	710100	3	True				
ANR	710139	CallExpression	SkipEOLN ( it8 )		710100	0					
ANR	710140	Callee	SkipEOLN		710100	0					
ANR	710141	Identifier	SkipEOLN		710100	0					
ANR	710142	ArgumentList	it8		710100	1					
ANR	710143	Argument	it8		710100	0					
ANR	710144	Identifier	it8		710100	0					
ANR	710145	WhileStatement	while ( it8 -> sy != SEOF && it8 -> sy != SSYNERROR )		710100	4					
ANR	710146	Condition	it8 -> sy != SEOF && it8 -> sy != SSYNERROR	2055:11:56123:56174	710100	0	True				
ANR	710147	AndExpression	it8 -> sy != SEOF && it8 -> sy != SSYNERROR		710100	0		&&			
ANR	710148	EqualityExpression	it8 -> sy != SEOF		710100	0		!=			
ANR	710149	PtrMemberAccess	it8 -> sy		710100	0					
ANR	710150	Identifier	it8		710100	0					
ANR	710151	Identifier	sy		710100	1					
ANR	710152	Identifier	SEOF		710100	1					
ANR	710153	EqualityExpression	it8 -> sy != SSYNERROR		710100	1		!=			
ANR	710154	PtrMemberAccess	it8 -> sy		710100	0					
ANR	710155	Identifier	it8		710100	0					
ANR	710156	Identifier	sy		710100	1					
ANR	710157	Identifier	SSYNERROR		710100	1					
ANR	710158	CompoundStatement		13:34:224:224	710100	1					
ANR	710159	SwitchStatement	switch ( it8 -> sy )		710100	0					
ANR	710160	Condition	it8 -> sy	2058:20:56200:56208	710100	0	True				
ANR	710161	PtrMemberAccess	it8 -> sy		710100	0					
ANR	710162	Identifier	it8		710100	0					
ANR	710163	Identifier	sy		710100	1					
ANR	710164	CompoundStatement		15:31:258:258	710100	1					
ANR	710165	Label	case SBEGIN_DATA_FORMAT :	2060:12:56226:56249	710100	0	True				
ANR	710166	Identifier	SBEGIN_DATA_FORMAT		710100	0					
ANR	710167	IfStatement	if ( ! DataFormatSection ( it8 ) )		710100	1					
ANR	710168	Condition	! DataFormatSection ( it8 )	2061:24:56275:56297	710100	0	True				
ANR	710169	UnaryOperationExpression	! DataFormatSection ( it8 )		710100	0					
ANR	710170	UnaryOperator	!		710100	0					
ANR	710171	CallExpression	DataFormatSection ( it8 )		710100	1					
ANR	710172	Callee	DataFormatSection		710100	0					
ANR	710173	Identifier	DataFormatSection		710100	0					
ANR	710174	ArgumentList	it8		710100	1					
ANR	710175	Argument	it8		710100	0					
ANR	710176	Identifier	it8		710100	0					
ANR	710177	ReturnStatement	return FALSE ;	2061:49:56300:56312	710100	1	True				
ANR	710178	Identifier	FALSE		710100	0					
ANR	710179	BreakStatement	break ;	2062:20:56334:56339	710100	2	True				
ANR	710180	Label	case SBEGIN_DATA :	2064:12:56354:56370	710100	3	True				
ANR	710181	Identifier	SBEGIN_DATA		710100	0					
ANR	710182	IfStatement	if ( ! DataSection ( it8 ) )		710100	4					
ANR	710183	Condition	! DataSection ( it8 )	2066:24:56397:56413	710100	0	True				
ANR	710184	UnaryOperationExpression	! DataSection ( it8 )		710100	0					
ANR	710185	UnaryOperator	!		710100	0					
ANR	710186	CallExpression	DataSection ( it8 )		710100	1					
ANR	710187	Callee	DataSection		710100	0					
ANR	710188	Identifier	DataSection		710100	0					
ANR	710189	ArgumentList	it8		710100	1					
ANR	710190	Argument	it8		710100	0					
ANR	710191	Identifier	it8		710100	0					
ANR	710192	ReturnStatement	return FALSE ;	2066:43:56416:56428	710100	1	True				
ANR	710193	Identifier	FALSE		710100	0					
ANR	710194	IfStatement	if ( it8 -> sy != SEOF )		710100	5					
ANR	710195	Condition	it8 -> sy != SEOF	2068:24:56455:56471	710100	0	True				
ANR	710196	EqualityExpression	it8 -> sy != SEOF		710100	0		!=			
ANR	710197	PtrMemberAccess	it8 -> sy		710100	0					
ANR	710198	Identifier	it8		710100	0					
ANR	710199	Identifier	sy		710100	1					
ANR	710200	Identifier	SEOF		710100	1					
ANR	710201	CompoundStatement		25:43:521:521	710100	1					
ANR	710202	ExpressionStatement	AllocTable ( it8 )	2070:28:56505:56520	710100	0	True				
ANR	710203	CallExpression	AllocTable ( it8 )		710100	0					
ANR	710204	Callee	AllocTable		710100	0					
ANR	710205	Identifier	AllocTable		710100	0					
ANR	710206	ArgumentList	it8		710100	1					
ANR	710207	Argument	it8		710100	0					
ANR	710208	Identifier	it8		710100	0					
ANR	710209	ExpressionStatement	it8 -> nTable = it8 -> TablesCount - 1	2071:28:56550:56586	710100	1	True				
ANR	710210	AssignmentExpression	it8 -> nTable = it8 -> TablesCount - 1		710100	0		=			
ANR	710211	PtrMemberAccess	it8 -> nTable		710100	0					
ANR	710212	Identifier	it8		710100	0					
ANR	710213	Identifier	nTable		710100	1					
ANR	710214	AdditiveExpression	it8 -> TablesCount - 1		710100	1		-			
ANR	710215	PtrMemberAccess	it8 -> TablesCount		710100	0					
ANR	710216	Identifier	it8		710100	0					
ANR	710217	Identifier	TablesCount		710100	1					
ANR	710218	PrimaryExpression	1		710100	1					
ANR	710219	IfStatement	if ( nosheet == 0 )		710100	2					
ANR	710220	Condition	nosheet == 0	2076:32:56849:56860	710100	0	True				
ANR	710221	EqualityExpression	nosheet == 0		710100	0		==			
ANR	710222	Identifier	nosheet		710100	0					
ANR	710223	PrimaryExpression	0		710100	1					
ANR	710224	CompoundStatement		33:46:910:910	710100	1					
ANR	710225	IfStatement	if ( it8 -> sy == SIDENT )		710100	0					
ANR	710226	Condition	it8 -> sy == SIDENT	2078:36:56902:56919	710100	0	True				
ANR	710227	EqualityExpression	it8 -> sy == SIDENT		710100	0		==			
ANR	710228	PtrMemberAccess	it8 -> sy		710100	0					
ANR	710229	Identifier	it8		710100	0					
ANR	710230	Identifier	sy		710100	1					
ANR	710231	Identifier	SIDENT		710100	1					
ANR	710232	CompoundStatement		35:56:969:969	710100	1					
ANR	710233	WhileStatement	while ( isseparator ( it8 -> ch ) )		710100	0					
ANR	710234	Condition	isseparator ( it8 -> ch )	2082:44:57148:57167	710100	0	True				
ANR	710235	CallExpression	isseparator ( it8 -> ch )		710100	0					
ANR	710236	Callee	isseparator		710100	0					
ANR	710237	Identifier	isseparator		710100	0					
ANR	710238	ArgumentList	it8 -> ch		710100	1					
ANR	710239	Argument	it8 -> ch		710100	0					
ANR	710240	PtrMemberAccess	it8 -> ch		710100	0					
ANR	710241	Identifier	it8		710100	0					
ANR	710242	Identifier	ch		710100	1					
ANR	710243	ExpressionStatement	NextCh ( it8 )	2083:41:57211:57222	710100	1	True				
ANR	710244	CallExpression	NextCh ( it8 )		710100	0					
ANR	710245	Callee	NextCh		710100	0					
ANR	710246	Identifier	NextCh		710100	0					
ANR	710247	ArgumentList	it8		710100	1					
ANR	710248	Argument	it8		710100	0					
ANR	710249	Identifier	it8		710100	0					
ANR	710250	IfStatement	if ( it8 -> ch == '\\n' || it8 -> ch == '\\r' )		710100	1					
ANR	710251	Condition	it8 -> ch == '\\n' || it8 -> ch == '\\r'	2086:40:57355:57389	710100	0	True				
ANR	710252	OrExpression	it8 -> ch == '\\n' || it8 -> ch == '\\r'		710100	0		||			
ANR	710253	EqualityExpression	it8 -> ch == '\\n'		710100	0		==			
ANR	710254	PtrMemberAccess	it8 -> ch		710100	0					
ANR	710255	Identifier	it8		710100	0					
ANR	710256	Identifier	ch		710100	1					
ANR	710257	PrimaryExpression	'\\n'		710100	1					
ANR	710258	EqualityExpression	it8 -> ch == '\\r'		710100	1		==			
ANR	710259	PtrMemberAccess	it8 -> ch		710100	0					
ANR	710260	Identifier	it8		710100	0					
ANR	710261	Identifier	ch		710100	1					
ANR	710262	PrimaryExpression	'\\r'		710100	1					
ANR	710263	CompoundStatement		43:77:1439:1439	710100	1					
ANR	710264	ExpressionStatement	"cmsIT8SetSheetType ( it8 , it8 -> id )"	2088:41:57436:57469	710100	0	True				
ANR	710265	CallExpression	"cmsIT8SetSheetType ( it8 , it8 -> id )"		710100	0					
ANR	710266	Callee	cmsIT8SetSheetType		710100	0					
ANR	710267	Identifier	cmsIT8SetSheetType		710100	0					
ANR	710268	ArgumentList	it8		710100	1					
ANR	710269	Argument	it8		710100	0					
ANR	710270	Identifier	it8		710100	0					
ANR	710271	Argument	it8 -> id		710100	1					
ANR	710272	PtrMemberAccess	it8 -> id		710100	0					
ANR	710273	Identifier	it8		710100	0					
ANR	710274	Identifier	id		710100	1					
ANR	710275	ExpressionStatement	InSymbol ( it8 )	2089:41:57512:57525	710100	1	True				
ANR	710276	CallExpression	InSymbol ( it8 )		710100	0					
ANR	710277	Callee	InSymbol		710100	0					
ANR	710278	Identifier	InSymbol		710100	0					
ANR	710279	ArgumentList	it8		710100	1					
ANR	710280	Argument	it8		710100	0					
ANR	710281	Identifier	it8		710100	0					
ANR	710282	ElseStatement	else		710100	0					
ANR	710283	CompoundStatement		49:36:1689:1689	710100	0					
ANR	710284	ExpressionStatement	"cmsIT8SetSheetType ( it8 , """" )"	2094:40:57752:57779	710100	0	True				
ANR	710285	CallExpression	"cmsIT8SetSheetType ( it8 , """" )"		710100	0					
ANR	710286	Callee	cmsIT8SetSheetType		710100	0					
ANR	710287	Identifier	cmsIT8SetSheetType		710100	0					
ANR	710288	ArgumentList	it8		710100	1					
ANR	710289	Argument	it8		710100	0					
ANR	710290	Identifier	it8		710100	0					
ANR	710291	Argument	""""""		710100	1					
ANR	710292	PrimaryExpression	""""""		710100	0					
ANR	710293	ElseStatement	else		710100	0					
ANR	710294	IfStatement	if ( it8 -> sy == SSTRING )		710100	0					
ANR	710295	Condition	it8 -> sy == SSTRING	2099:40:57993:58011	710100	0	True				
ANR	710296	EqualityExpression	it8 -> sy == SSTRING		710100	0		==			
ANR	710297	PtrMemberAccess	it8 -> sy		710100	0					
ANR	710298	Identifier	it8		710100	0					
ANR	710299	Identifier	sy		710100	1					
ANR	710300	Identifier	SSTRING		710100	1					
ANR	710301	CompoundStatement		56:61:2061:2061	710100	1					
ANR	710302	ExpressionStatement	"cmsIT8SetSheetType ( it8 , it8 -> str )"	2100:40:58056:58090	710100	0	True				
ANR	710303	CallExpression	"cmsIT8SetSheetType ( it8 , it8 -> str )"		710100	0					
ANR	710304	Callee	cmsIT8SetSheetType		710100	0					
ANR	710305	Identifier	cmsIT8SetSheetType		710100	0					
ANR	710306	ArgumentList	it8		710100	1					
ANR	710307	Argument	it8		710100	0					
ANR	710308	Identifier	it8		710100	0					
ANR	710309	Argument	it8 -> str		710100	1					
ANR	710310	PtrMemberAccess	it8 -> str		710100	0					
ANR	710311	Identifier	it8		710100	0					
ANR	710312	Identifier	str		710100	1					
ANR	710313	ExpressionStatement	InSymbol ( it8 )	2101:40:58132:58145	710100	1	True				
ANR	710314	CallExpression	InSymbol ( it8 )		710100	0					
ANR	710315	Callee	InSymbol		710100	0					
ANR	710316	Identifier	InSymbol		710100	0					
ANR	710317	ArgumentList	it8		710100	1					
ANR	710318	Argument	it8		710100	0					
ANR	710319	Identifier	it8		710100	0					
ANR	710320	BreakStatement	break ;	2106:20:58257:58262	710100	6	True				
ANR	710321	Label	case SEOLN :	2108:12:58277:58287	710100	7	True				
ANR	710322	Identifier	SEOLN		710100	0					
ANR	710323	ExpressionStatement	SkipEOLN ( it8 )	2109:20:58309:58322	710100	8	True				
ANR	710324	CallExpression	SkipEOLN ( it8 )		710100	0					
ANR	710325	Callee	SkipEOLN		710100	0					
ANR	710326	Identifier	SkipEOLN		710100	0					
ANR	710327	ArgumentList	it8		710100	1					
ANR	710328	Argument	it8		710100	0					
ANR	710329	Identifier	it8		710100	0					
ANR	710330	BreakStatement	break ;	2110:20:58344:58349	710100	9	True				
ANR	710331	Label	default :	2112:12:58364:58371	710100	10	True				
ANR	710332	Identifier	default		710100	0					
ANR	710333	IfStatement	if ( ! HeaderSection ( it8 ) )		710100	11					
ANR	710334	Condition	! HeaderSection ( it8 )	2113:24:58397:58415	710100	0	True				
ANR	710335	UnaryOperationExpression	! HeaderSection ( it8 )		710100	0					
ANR	710336	UnaryOperator	!		710100	0					
ANR	710337	CallExpression	HeaderSection ( it8 )		710100	1					
ANR	710338	Callee	HeaderSection		710100	0					
ANR	710339	Identifier	HeaderSection		710100	0					
ANR	710340	ArgumentList	it8		710100	1					
ANR	710341	Argument	it8		710100	0					
ANR	710342	Identifier	it8		710100	0					
ANR	710343	ReturnStatement	return FALSE ;	2113:45:58418:58430	710100	1	True				
ANR	710344	Identifier	FALSE		710100	0					
ANR	710345	ReturnStatement	return ( it8 -> sy != SSYNERROR ) ;	2118:4:58457:58488	710100	5	True				
ANR	710346	EqualityExpression	it8 -> sy != SSYNERROR		710100	0		!=			
ANR	710347	PtrMemberAccess	it8 -> sy		710100	0					
ANR	710348	Identifier	it8		710100	0					
ANR	710349	Identifier	sy		710100	1					
ANR	710350	Identifier	SSYNERROR		710100	1					
ANR	710351	ReturnType	static cmsBool		710100	1					
ANR	710352	Identifier	ParseIT8		710100	2					
ANR	710353	ParameterList	"cmsIT8 * it8 , cmsBool nosheet"		710100	3					
ANR	710354	Parameter	cmsIT8 * it8	2043:17:55922:55932	710100	0	True				
ANR	710355	ParameterType	cmsIT8 *		710100	0					
ANR	710356	Identifier	it8		710100	1					
ANR	710357	Parameter	cmsBool nosheet	2043:30:55935:55949	710100	1	True				
ANR	710358	ParameterType	cmsBool		710100	0					
ANR	710359	Identifier	nosheet		710100	1					
ANR	710360	CFGEntryNode	ENTRY		710100		True				
ANR	710361	CFGExitNode	EXIT		710100		True				
ANR	710362	Symbol	* * it8		710100						
ANR	710363	Symbol	nosheet		710100						
ANR	710364	Symbol	* it8 -> Tab		710100						
ANR	710365	Symbol	* it8		710100						
ANR	710366	Symbol	it8 -> ch		710100						
ANR	710367	Symbol	SSTRING		710100						
ANR	710368	Symbol	it8 -> sy		710100						
ANR	710369	Symbol	DataFormatSection		710100						
ANR	710370	Symbol	it8		710100						
ANR	710371	Symbol	HeaderSection		710100						
ANR	710372	Symbol	SEOF		710100						
ANR	710373	Symbol	isseparator		710100						
ANR	710374	Symbol	it8 -> nTable		710100						
ANR	710375	Symbol	DataSection		710100						
ANR	710376	Symbol	SheetTypePtr		710100						
ANR	710377	Symbol	it8 -> Tab		710100						
ANR	710378	Symbol	it8 -> TablesCount		710100						
ANR	710379	Symbol	FALSE		710100						
ANR	710380	Symbol	SSYNERROR		710100						
ANR	710381	Symbol	SIDENT		710100						
ANR	710382	Symbol	it8 -> str		710100						
ANR	710383	Symbol	it8 -> Tab [ 0 ] . SheetType		710100						
ANR	710384	Symbol	it8 -> id		710100						
ANR	710385	Function	CookPointers	2125:0:58520:61073							
ANR	710386	FunctionDef	CookPointers (cmsIT8 * it8)		710385	0					
ANR	710387	CompoundStatement		2127:0:58558:61073	710385	0					
ANR	710388	IdentifierDeclStatement	"int idField , i ;"	2128:4:58564:58578	710385	0	True				
ANR	710389	IdentifierDecl	idField		710385	0					
ANR	710390	IdentifierDeclType	int		710385	0					
ANR	710391	Identifier	idField		710385	1					
ANR	710392	IdentifierDecl	i		710385	1					
ANR	710393	IdentifierDeclType	int		710385	0					
ANR	710394	Identifier	i		710385	1					
ANR	710395	IdentifierDeclStatement	char * Fld ;	2129:4:58584:58593	710385	1	True				
ANR	710396	IdentifierDecl	* Fld		710385	0					
ANR	710397	IdentifierDeclType	char *		710385	0					
ANR	710398	Identifier	Fld		710385	1					
ANR	710399	IdentifierDeclStatement	cmsUInt32Number j ;	2130:4:58599:58616	710385	2	True				
ANR	710400	IdentifierDecl	j		710385	0					
ANR	710401	IdentifierDeclType	cmsUInt32Number		710385	0					
ANR	710402	Identifier	j		710385	1					
ANR	710403	IdentifierDeclStatement	cmsUInt32Number nOldTable = it8 -> nTable ;	2131:4:58622:58662	710385	3	True				
ANR	710404	IdentifierDecl	nOldTable = it8 -> nTable		710385	0					
ANR	710405	IdentifierDeclType	cmsUInt32Number		710385	0					
ANR	710406	Identifier	nOldTable		710385	1					
ANR	710407	AssignmentExpression	nOldTable = it8 -> nTable		710385	2		=			
ANR	710408	Identifier	nOldTable		710385	0					
ANR	710409	PtrMemberAccess	it8 -> nTable		710385	1					
ANR	710410	Identifier	it8		710385	0					
ANR	710411	Identifier	nTable		710385	1					
ANR	710412	ForStatement	for ( j = 0 ; j < it8 -> TablesCount ; j ++ )		710385	4					
ANR	710413	ForInit	j = 0 ;	2133:9:58674:58677	710385	0	True				
ANR	710414	AssignmentExpression	j = 0		710385	0		=			
ANR	710415	Identifier	j		710385	0					
ANR	710416	PrimaryExpression	0		710385	1					
ANR	710417	Condition	j < it8 -> TablesCount	2133:14:58679:58699	710385	1	True				
ANR	710418	RelationalExpression	j < it8 -> TablesCount		710385	0		<			
ANR	710419	Identifier	j		710385	0					
ANR	710420	PtrMemberAccess	it8 -> TablesCount		710385	1					
ANR	710421	Identifier	it8		710385	0					
ANR	710422	Identifier	TablesCount		710385	1					
ANR	710423	PostIncDecOperationExpression	j ++	2133:37:58702:58704	710385	2	True				
ANR	710424	Identifier	j		710385	0					
ANR	710425	IncDec	++		710385	1					
ANR	710426	CompoundStatement		9:4:155:179	710385	3					
ANR	710427	IdentifierDeclStatement	TABLE * t = it8 -> Tab + j ;	2135:4:58714:58738	710385	0	True				
ANR	710428	IdentifierDecl	* t = it8 -> Tab + j		710385	0					
ANR	710429	IdentifierDeclType	TABLE *		710385	0					
ANR	710430	Identifier	t		710385	1					
ANR	710431	AssignmentExpression	* t = it8 -> Tab + j		710385	2		=			
ANR	710432	Identifier	t		710385	0					
ANR	710433	AdditiveExpression	it8 -> Tab + j		710385	1		+			
ANR	710434	PtrMemberAccess	it8 -> Tab		710385	0					
ANR	710435	Identifier	it8		710385	0					
ANR	710436	Identifier	Tab		710385	1					
ANR	710437	Identifier	j		710385	1					
ANR	710438	ExpressionStatement	t -> SampleID = 0	2137:4:58745:58762	710385	1	True				
ANR	710439	AssignmentExpression	t -> SampleID = 0		710385	0		=			
ANR	710440	PtrMemberAccess	t -> SampleID		710385	0					
ANR	710441	Identifier	t		710385	0					
ANR	710442	Identifier	SampleID		710385	1					
ANR	710443	PrimaryExpression	0		710385	1					
ANR	710444	ExpressionStatement	it8 -> nTable = j	2138:4:58768:58784	710385	2	True				
ANR	710445	AssignmentExpression	it8 -> nTable = j		710385	0		=			
ANR	710446	PtrMemberAccess	it8 -> nTable		710385	0					
ANR	710447	Identifier	it8		710385	0					
ANR	710448	Identifier	nTable		710385	1					
ANR	710449	Identifier	j		710385	1					
ANR	710450	ForStatement	for ( idField = 0 ; idField < t -> nSamples ; idField ++ )		710385	3					
ANR	710451	ForInit	idField = 0 ;	2140:9:58796:58807	710385	0	True				
ANR	710452	AssignmentExpression	idField = 0		710385	0		=			
ANR	710453	Identifier	idField		710385	0					
ANR	710454	PrimaryExpression	0		710385	1					
ANR	710455	Condition	idField < t -> nSamples	2140:22:58809:58831	710385	1	True				
ANR	710456	RelationalExpression	idField < t -> nSamples		710385	0		<			
ANR	710457	Identifier	idField		710385	0					
ANR	710458	PtrMemberAccess	t -> nSamples		710385	1					
ANR	710459	Identifier	t		710385	0					
ANR	710460	Identifier	nSamples		710385	1					
ANR	710461	PostIncDecOperationExpression	idField ++	2140:47:58834:58842	710385	2	True				
ANR	710462	Identifier	idField		710385	0					
ANR	710463	IncDec	++		710385	1					
ANR	710464	CompoundStatement		15:4:290:290	710385	3					
ANR	710465	IfStatement	if ( t -> DataFormat == NULL )		710385	0					
ANR	710466	Condition	t -> DataFormat == NULL	2142:12:58863:58884	710385	0	True				
ANR	710467	EqualityExpression	t -> DataFormat == NULL		710385	0		==			
ANR	710468	PtrMemberAccess	t -> DataFormat		710385	0					
ANR	710469	Identifier	t		710385	0					
ANR	710470	Identifier	DataFormat		710385	1					
ANR	710471	Identifier	NULL		710385	1					
ANR	710472	CompoundStatement		16:35:327:327	710385	1					
ANR	710473	ExpressionStatement	"SynError ( it8 , ""Undefined DATA_FORMAT"" )"	2143:12:58900:58938	710385	0	True				
ANR	710474	CallExpression	"SynError ( it8 , ""Undefined DATA_FORMAT"" )"		710385	0					
ANR	710475	Callee	SynError		710385	0					
ANR	710476	Identifier	SynError		710385	0					
ANR	710477	ArgumentList	it8		710385	1					
ANR	710478	Argument	it8		710385	0					
ANR	710479	Identifier	it8		710385	0					
ANR	710480	Argument	"""Undefined DATA_FORMAT"""		710385	1					
ANR	710481	PrimaryExpression	"""Undefined DATA_FORMAT"""		710385	0					
ANR	710482	ReturnStatement	return ;	2144:12:58952:58958	710385	1	True				
ANR	710483	ExpressionStatement	Fld = t -> DataFormat [ idField ]	2147:8:58979:59007	710385	1	True				
ANR	710484	AssignmentExpression	Fld = t -> DataFormat [ idField ]		710385	0		=			
ANR	710485	Identifier	Fld		710385	0					
ANR	710486	ArrayIndexing	t -> DataFormat [ idField ]		710385	1					
ANR	710487	PtrMemberAccess	t -> DataFormat		710385	0					
ANR	710488	Identifier	t		710385	0					
ANR	710489	Identifier	DataFormat		710385	1					
ANR	710490	Identifier	idField		710385	1					
ANR	710491	IfStatement	if ( ! Fld )		710385	2					
ANR	710492	Condition	! Fld	2148:12:59021:59024	710385	0	True				
ANR	710493	UnaryOperationExpression	! Fld		710385	0					
ANR	710494	UnaryOperator	!		710385	0					
ANR	710495	Identifier	Fld		710385	1					
ANR	710496	ContinueStatement	continue ;	2148:18:59027:59035	710385	1	True				
ANR	710497	IfStatement	"if ( cmsstrcasecmp ( Fld , ""SAMPLE_ID"" ) == 0 )"		710385	3					
ANR	710498	Condition	"cmsstrcasecmp ( Fld , ""SAMPLE_ID"" ) == 0"	2151:12:59051:59086	710385	0	True				
ANR	710499	EqualityExpression	"cmsstrcasecmp ( Fld , ""SAMPLE_ID"" ) == 0"		710385	0		==			
ANR	710500	CallExpression	"cmsstrcasecmp ( Fld , ""SAMPLE_ID"" )"		710385	0					
ANR	710501	Callee	cmsstrcasecmp		710385	0					
ANR	710502	Identifier	cmsstrcasecmp		710385	0					
ANR	710503	ArgumentList	Fld		710385	1					
ANR	710504	Argument	Fld		710385	0					
ANR	710505	Identifier	Fld		710385	0					
ANR	710506	Argument	"""SAMPLE_ID"""		710385	1					
ANR	710507	PrimaryExpression	"""SAMPLE_ID"""		710385	0					
ANR	710508	PrimaryExpression	0		710385	1					
ANR	710509	CompoundStatement		25:50:530:530	710385	1					
ANR	710510	ExpressionStatement	t -> SampleID = idField	2153:12:59104:59127	710385	0	True				
ANR	710511	AssignmentExpression	t -> SampleID = idField		710385	0		=			
ANR	710512	PtrMemberAccess	t -> SampleID		710385	0					
ANR	710513	Identifier	t		710385	0					
ANR	710514	Identifier	SampleID		710385	1					
ANR	710515	Identifier	idField		710385	1					
ANR	710516	ForStatement	for ( i = 0 ; i < t -> nPatches ; i ++ )		710385	1					
ANR	710517	ForInit	i = 0 ;	2155:17:59147:59150	710385	0	True				
ANR	710518	AssignmentExpression	i = 0		710385	0		=			
ANR	710519	Identifier	i		710385	0					
ANR	710520	PrimaryExpression	0		710385	1					
ANR	710521	Condition	i < t -> nPatches	2155:22:59152:59168	710385	1	True				
ANR	710522	RelationalExpression	i < t -> nPatches		710385	0		<			
ANR	710523	Identifier	i		710385	0					
ANR	710524	PtrMemberAccess	t -> nPatches		710385	1					
ANR	710525	Identifier	t		710385	0					
ANR	710526	Identifier	nPatches		710385	1					
ANR	710527	PostIncDecOperationExpression	i ++	2155:41:59171:59173	710385	2	True				
ANR	710528	Identifier	i		710385	0					
ANR	710529	IncDec	++		710385	1					
ANR	710530	CompoundStatement		31:16:636:673	710385	3					
ANR	710531	IdentifierDeclStatement	"char * Data = GetData ( it8 , i , idField ) ;"	2157:16:59195:59232	710385	0	True				
ANR	710532	IdentifierDecl	"* Data = GetData ( it8 , i , idField )"		710385	0					
ANR	710533	IdentifierDeclType	char *		710385	0					
ANR	710534	Identifier	Data		710385	1					
ANR	710535	AssignmentExpression	"* Data = GetData ( it8 , i , idField )"		710385	2		=			
ANR	710536	Identifier	Data		710385	0					
ANR	710537	CallExpression	"GetData ( it8 , i , idField )"		710385	1					
ANR	710538	Callee	GetData		710385	0					
ANR	710539	Identifier	GetData		710385	0					
ANR	710540	ArgumentList	it8		710385	1					
ANR	710541	Argument	it8		710385	0					
ANR	710542	Identifier	it8		710385	0					
ANR	710543	Argument	i		710385	1					
ANR	710544	Identifier	i		710385	0					
ANR	710545	Argument	idField		710385	2					
ANR	710546	Identifier	idField		710385	0					
ANR	710547	IfStatement	if ( Data )		710385	1					
ANR	710548	Condition	Data	2158:20:59254:59257	710385	0	True				
ANR	710549	Identifier	Data		710385	0					
ANR	710550	CompoundStatement		33:20:723:739	710385	1					
ANR	710551	IdentifierDeclStatement	char Buffer [ 256 ] ;	2159:20:59282:59298	710385	0	True				
ANR	710552	IdentifierDecl	Buffer [ 256 ]		710385	0					
ANR	710553	IdentifierDeclType	char [ 256 ]		710385	0					
ANR	710554	Identifier	Buffer		710385	1					
ANR	710555	PrimaryExpression	256		710385	2					
ANR	710556	ExpressionStatement	"strncpy ( Buffer , Data , 255 )"	2161:20:59321:59347	710385	1	True				
ANR	710557	CallExpression	"strncpy ( Buffer , Data , 255 )"		710385	0					
ANR	710558	Callee	strncpy		710385	0					
ANR	710559	Identifier	strncpy		710385	0					
ANR	710560	ArgumentList	Buffer		710385	1					
ANR	710561	Argument	Buffer		710385	0					
ANR	710562	Identifier	Buffer		710385	0					
ANR	710563	Argument	Data		710385	1					
ANR	710564	Identifier	Data		710385	0					
ANR	710565	Argument	255		710385	2					
ANR	710566	PrimaryExpression	255		710385	0					
ANR	710567	ExpressionStatement	Buffer [ 255 ] = 0	2162:20:59369:59384	710385	2	True				
ANR	710568	AssignmentExpression	Buffer [ 255 ] = 0		710385	0		=			
ANR	710569	ArrayIndexing	Buffer [ 255 ]		710385	0					
ANR	710570	Identifier	Buffer		710385	0					
ANR	710571	PrimaryExpression	255		710385	1					
ANR	710572	PrimaryExpression	0		710385	1					
ANR	710573	IfStatement	if ( strlen ( Buffer ) <= strlen ( Data ) )		710385	3					
ANR	710574	Condition	strlen ( Buffer ) <= strlen ( Data )	2164:24:59411:59440	710385	0	True				
ANR	710575	RelationalExpression	strlen ( Buffer ) <= strlen ( Data )		710385	0		<=			
ANR	710576	CallExpression	strlen ( Buffer )		710385	0					
ANR	710577	Callee	strlen		710385	0					
ANR	710578	Identifier	strlen		710385	0					
ANR	710579	ArgumentList	Buffer		710385	1					
ANR	710580	Argument	Buffer		710385	0					
ANR	710581	Identifier	Buffer		710385	0					
ANR	710582	CallExpression	strlen ( Data )		710385	1					
ANR	710583	Callee	strlen		710385	0					
ANR	710584	Identifier	strlen		710385	0					
ANR	710585	ArgumentList	Data		710385	1					
ANR	710586	Argument	Data		710385	0					
ANR	710587	Identifier	Data		710385	0					
ANR	710588	ExpressionStatement	"strcpy ( Data , Buffer )"	2165:24:59467:59487	710385	1	True				
ANR	710589	CallExpression	"strcpy ( Data , Buffer )"		710385	0					
ANR	710590	Callee	strcpy		710385	0					
ANR	710591	Identifier	strcpy		710385	0					
ANR	710592	ArgumentList	Data		710385	1					
ANR	710593	Argument	Data		710385	0					
ANR	710594	Identifier	Data		710385	0					
ANR	710595	Argument	Buffer		710385	1					
ANR	710596	Identifier	Buffer		710385	0					
ANR	710597	ElseStatement	else		710385	0					
ANR	710598	ExpressionStatement	"SetData ( it8 , i , idField , Buffer )"	2167:24:59538:59570	710385	0	True				
ANR	710599	CallExpression	"SetData ( it8 , i , idField , Buffer )"		710385	0					
ANR	710600	Callee	SetData		710385	0					
ANR	710601	Identifier	SetData		710385	0					
ANR	710602	ArgumentList	it8		710385	1					
ANR	710603	Argument	it8		710385	0					
ANR	710604	Identifier	it8		710385	0					
ANR	710605	Argument	i		710385	1					
ANR	710606	Identifier	i		710385	0					
ANR	710607	Argument	idField		710385	2					
ANR	710608	Identifier	idField		710385	0					
ANR	710609	Argument	Buffer		710385	3					
ANR	710610	Identifier	Buffer		710385	0					
ANR	710611	IfStatement	"if ( ( cmsstrcasecmp ( Fld , ""LABEL"" ) == 0 ) || Fld [ 0 ] == '$' )"		710385	4					
ANR	710612	Condition	"( cmsstrcasecmp ( Fld , ""LABEL"" ) == 0 ) || Fld [ 0 ] == '$'"	2176:12:59704:59754	710385	0	True				
ANR	710613	OrExpression	"( cmsstrcasecmp ( Fld , ""LABEL"" ) == 0 ) || Fld [ 0 ] == '$'"		710385	0		||			
ANR	710614	EqualityExpression	"cmsstrcasecmp ( Fld , ""LABEL"" ) == 0"		710385	0		==			
ANR	710615	CallExpression	"cmsstrcasecmp ( Fld , ""LABEL"" )"		710385	0					
ANR	710616	Callee	cmsstrcasecmp		710385	0					
ANR	710617	Identifier	cmsstrcasecmp		710385	0					
ANR	710618	ArgumentList	Fld		710385	1					
ANR	710619	Argument	Fld		710385	0					
ANR	710620	Identifier	Fld		710385	0					
ANR	710621	Argument	"""LABEL"""		710385	1					
ANR	710622	PrimaryExpression	"""LABEL"""		710385	0					
ANR	710623	PrimaryExpression	0		710385	1					
ANR	710624	EqualityExpression	Fld [ 0 ] == '$'		710385	1		==			
ANR	710625	ArrayIndexing	Fld [ 0 ]		710385	0					
ANR	710626	Identifier	Fld		710385	0					
ANR	710627	PrimaryExpression	0		710385	1					
ANR	710628	PrimaryExpression	'$'		710385	1					
ANR	710629	CompoundStatement		50:66:1199:1199	710385	1					
ANR	710630	ForStatement	for ( i = 0 ; i < t -> nPatches ; i ++ )		710385	0					
ANR	710631	ForInit	i = 0 ;	2179:25:59840:59843	710385	0	True				
ANR	710632	AssignmentExpression	i = 0		710385	0		=			
ANR	710633	Identifier	i		710385	0					
ANR	710634	PrimaryExpression	0		710385	1					
ANR	710635	Condition	i < t -> nPatches	2179:30:59845:59861	710385	1	True				
ANR	710636	RelationalExpression	i < t -> nPatches		710385	0		<			
ANR	710637	Identifier	i		710385	0					
ANR	710638	PtrMemberAccess	t -> nPatches		710385	1					
ANR	710639	Identifier	t		710385	0					
ANR	710640	Identifier	nPatches		710385	1					
ANR	710641	PostIncDecOperationExpression	i ++	2179:49:59864:59866	710385	2	True				
ANR	710642	Identifier	i		710385	0					
ANR	710643	IncDec	++		710385	1					
ANR	710644	CompoundStatement		55:28:1341:1379	710385	3					
ANR	710645	IdentifierDeclStatement	"char * Label = GetData ( it8 , i , idField ) ;"	2181:28:59900:59938	710385	0	True				
ANR	710646	IdentifierDecl	"* Label = GetData ( it8 , i , idField )"		710385	0					
ANR	710647	IdentifierDeclType	char *		710385	0					
ANR	710648	Identifier	Label		710385	1					
ANR	710649	AssignmentExpression	"* Label = GetData ( it8 , i , idField )"		710385	2		=			
ANR	710650	Identifier	Label		710385	0					
ANR	710651	CallExpression	"GetData ( it8 , i , idField )"		710385	1					
ANR	710652	Callee	GetData		710385	0					
ANR	710653	Identifier	GetData		710385	0					
ANR	710654	ArgumentList	it8		710385	1					
ANR	710655	Argument	it8		710385	0					
ANR	710656	Identifier	it8		710385	0					
ANR	710657	Argument	i		710385	1					
ANR	710658	Identifier	i		710385	0					
ANR	710659	Argument	idField		710385	2					
ANR	710660	Identifier	idField		710385	0					
ANR	710661	IfStatement	if ( Label )		710385	1					
ANR	710662	Condition	Label	2183:32:59973:59977	710385	0	True				
ANR	710663	Identifier	Label		710385	0					
ANR	710664	CompoundStatement		59:32:1456:1473	710385	1					
ANR	710665	IdentifierDeclStatement	cmsUInt32Number k ;	2185:32:60015:60032	710385	0	True				
ANR	710666	IdentifierDecl	k		710385	0					
ANR	710667	IdentifierDeclType	cmsUInt32Number		710385	0					
ANR	710668	Identifier	k		710385	1					
ANR	710669	ForStatement	for ( k = 0 ; k < it8 -> TablesCount ; k ++ )		710385	1					
ANR	710670	ForInit	k = 0 ;	2190:37:60206:60209	710385	0	True				
ANR	710671	AssignmentExpression	k = 0		710385	0		=			
ANR	710672	Identifier	k		710385	0					
ANR	710673	PrimaryExpression	0		710385	1					
ANR	710674	Condition	k < it8 -> TablesCount	2190:42:60211:60231	710385	1	True				
ANR	710675	RelationalExpression	k < it8 -> TablesCount		710385	0		<			
ANR	710676	Identifier	k		710385	0					
ANR	710677	PtrMemberAccess	it8 -> TablesCount		710385	1					
ANR	710678	Identifier	it8		710385	0					
ANR	710679	Identifier	TablesCount		710385	1					
ANR	710680	PostIncDecOperationExpression	k ++	2190:65:60234:60236	710385	2	True				
ANR	710681	Identifier	k		710385	0					
ANR	710682	IncDec	++		710385	1					
ANR	710683	CompoundStatement		67:36:1785:1796	710385	3					
ANR	710684	IdentifierDeclStatement	TABLE * Table = it8 -> Tab + k ;	2192:36:60278:60306	710385	0	True				
ANR	710685	IdentifierDecl	* Table = it8 -> Tab + k		710385	0					
ANR	710686	IdentifierDeclType	TABLE *		710385	0					
ANR	710687	Identifier	Table		710385	1					
ANR	710688	AssignmentExpression	* Table = it8 -> Tab + k		710385	2		=			
ANR	710689	Identifier	Table		710385	0					
ANR	710690	AdditiveExpression	it8 -> Tab + k		710385	1		+			
ANR	710691	PtrMemberAccess	it8 -> Tab		710385	0					
ANR	710692	Identifier	it8		710385	0					
ANR	710693	Identifier	Tab		710385	1					
ANR	710694	Identifier	k		710385	1					
ANR	710695	IdentifierDeclStatement	KEYVALUE * p ;	2193:36:60344:60355	710385	1	True				
ANR	710696	IdentifierDecl	* p		710385	0					
ANR	710697	IdentifierDeclType	KEYVALUE *		710385	0					
ANR	710698	Identifier	p		710385	1					
ANR	710699	IfStatement	"if ( IsAvailableOnList ( Table -> HeaderList , Label , NULL , & p ) )"		710385	2					
ANR	710700	Condition	"IsAvailableOnList ( Table -> HeaderList , Label , NULL , & p )"	2195:40:60398:60450	710385	0	True				
ANR	710701	CallExpression	"IsAvailableOnList ( Table -> HeaderList , Label , NULL , & p )"		710385	0					
ANR	710702	Callee	IsAvailableOnList		710385	0					
ANR	710703	Identifier	IsAvailableOnList		710385	0					
ANR	710704	ArgumentList	Table -> HeaderList		710385	1					
ANR	710705	Argument	Table -> HeaderList		710385	0					
ANR	710706	PtrMemberAccess	Table -> HeaderList		710385	0					
ANR	710707	Identifier	Table		710385	0					
ANR	710708	Identifier	HeaderList		710385	1					
ANR	710709	Argument	Label		710385	1					
ANR	710710	Identifier	Label		710385	0					
ANR	710711	Argument	NULL		710385	2					
ANR	710712	Identifier	NULL		710385	0					
ANR	710713	Argument	& p		710385	3					
ANR	710714	UnaryOperationExpression	& p		710385	0					
ANR	710715	UnaryOperator	&		710385	0					
ANR	710716	Identifier	p		710385	1					
ANR	710717	CompoundStatement		75:40:2135:2156	710385	1					
ANR	710718	IdentifierDeclStatement	char Buffer [ 256 ] ;	2198:40:60570:60586	710385	0	True				
ANR	710719	IdentifierDecl	Buffer [ 256 ]		710385	0					
ANR	710720	IdentifierDeclType	char [ 256 ]		710385	0					
ANR	710721	Identifier	Buffer		710385	1					
ANR	710722	PrimaryExpression	256		710385	2					
ANR	710723	IdentifierDeclStatement	char * Type = p -> Value ;	2200:40:60629:60652	710385	1	True				
ANR	710724	IdentifierDecl	* Type = p -> Value		710385	0					
ANR	710725	IdentifierDeclType	char *		710385	0					
ANR	710726	Identifier	Type		710385	1					
ANR	710727	AssignmentExpression	* Type = p -> Value		710385	2		=			
ANR	710728	Identifier	Type		710385	0					
ANR	710729	PtrMemberAccess	p -> Value		710385	1					
ANR	710730	Identifier	p		710385	0					
ANR	710731	Identifier	Value		710385	1					
ANR	710732	IdentifierDeclStatement	int nTable = ( int ) k ;	2201:40:60694:60715	710385	2	True				
ANR	710733	IdentifierDecl	nTable = ( int ) k		710385	0					
ANR	710734	IdentifierDeclType	int		710385	0					
ANR	710735	Identifier	nTable		710385	1					
ANR	710736	AssignmentExpression	nTable = ( int ) k		710385	2		=			
ANR	710737	Identifier	nTable		710385	0					
ANR	710738	CastExpression	( int ) k		710385	1					
ANR	710739	CastTarget	int		710385	0					
ANR	710740	Identifier	k		710385	1					
ANR	710741	ExpressionStatement	"snprintf ( Buffer , 255 , ""%s %d %s"" , Label , nTable , Type )"	2203:40:60758:60813	710385	3	True				
ANR	710742	CallExpression	"snprintf ( Buffer , 255 , ""%s %d %s"" , Label , nTable , Type )"		710385	0					
ANR	710743	Callee	snprintf		710385	0					
ANR	710744	Identifier	snprintf		710385	0					
ANR	710745	ArgumentList	Buffer		710385	1					
ANR	710746	Argument	Buffer		710385	0					
ANR	710747	Identifier	Buffer		710385	0					
ANR	710748	Argument	255		710385	1					
ANR	710749	PrimaryExpression	255		710385	0					
ANR	710750	Argument	"""%s %d %s"""		710385	2					
ANR	710751	PrimaryExpression	"""%s %d %s"""		710385	0					
ANR	710752	Argument	Label		710385	3					
ANR	710753	Identifier	Label		710385	0					
ANR	710754	Argument	nTable		710385	4					
ANR	710755	Identifier	nTable		710385	0					
ANR	710756	Argument	Type		710385	5					
ANR	710757	Identifier	Type		710385	0					
ANR	710758	ExpressionStatement	"SetData ( it8 , i , idField , Buffer )"	2205:40:60856:60888	710385	4	True				
ANR	710759	CallExpression	"SetData ( it8 , i , idField , Buffer )"		710385	0					
ANR	710760	Callee	SetData		710385	0					
ANR	710761	Identifier	SetData		710385	0					
ANR	710762	ArgumentList	it8		710385	1					
ANR	710763	Argument	it8		710385	0					
ANR	710764	Identifier	it8		710385	0					
ANR	710765	Argument	i		710385	1					
ANR	710766	Identifier	i		710385	0					
ANR	710767	Argument	idField		710385	2					
ANR	710768	Identifier	idField		710385	0					
ANR	710769	Argument	Buffer		710385	3					
ANR	710770	Identifier	Buffer		710385	0					
ANR	710771	ExpressionStatement	it8 -> nTable = nOldTable	2220:4:61047:61071	710385	5	True				
ANR	710772	AssignmentExpression	it8 -> nTable = nOldTable		710385	0		=			
ANR	710773	PtrMemberAccess	it8 -> nTable		710385	0					
ANR	710774	Identifier	it8		710385	0					
ANR	710775	Identifier	nTable		710385	1					
ANR	710776	Identifier	nOldTable		710385	1					
ANR	710777	ReturnType	static void		710385	1					
ANR	710778	Identifier	CookPointers		710385	2					
ANR	710779	ParameterList	cmsIT8 * it8		710385	3					
ANR	710780	Parameter	cmsIT8 * it8	2126:18:58545:58555	710385	0	True				
ANR	710781	ParameterType	cmsIT8 *		710385	0					
ANR	710782	Identifier	it8		710385	1					
ANR	710783	CFGEntryNode	ENTRY		710385		True				
ANR	710784	CFGExitNode	EXIT		710385		True				
ANR	710785	Symbol	idField		710385						
ANR	710786	Symbol	nOldTable		710385						
ANR	710787	Symbol	nTable		710385						
ANR	710788	Symbol	t -> DataFormat		710385						
ANR	710789	Symbol	Label		710385						
ANR	710790	Symbol	it8 -> nTable		710385						
ANR	710791	Symbol	strlen		710385						
ANR	710792	Symbol	Table -> HeaderList		710385						
ANR	710793	Symbol	* t -> DataFormat		710385						
ANR	710794	Symbol	* Table		710385						
ANR	710795	Symbol	* * t		710385						
ANR	710796	Symbol	* idField		710385						
ANR	710797	Symbol	* Fld		710385						
ANR	710798	Symbol	p -> Value		710385						
ANR	710799	Symbol	IsAvailableOnList		710385						
ANR	710800	Symbol	Buffer		710385						
ANR	710801	Symbol	t -> nSamples		710385						
ANR	710802	Symbol	t -> nPatches		710385						
ANR	710803	Symbol	NULL		710385						
ANR	710804	Symbol	Table		710385						
ANR	710805	Symbol	* it8		710385						
ANR	710806	Symbol	i		710385						
ANR	710807	Symbol	j		710385						
ANR	710808	Symbol	cmsstrcasecmp		710385						
ANR	710809	Symbol	Data		710385						
ANR	710810	Symbol	k		710385						
ANR	710811	Symbol	it8		710385						
ANR	710812	Symbol	* Buffer		710385						
ANR	710813	Symbol	p		710385						
ANR	710814	Symbol	t -> SampleID		710385						
ANR	710815	Symbol	Type		710385						
ANR	710816	Symbol	t		710385						
ANR	710817	Symbol	GetData		710385						
ANR	710818	Symbol	& p		710385						
ANR	710819	Symbol	it8 -> Tab		710385						
ANR	710820	Symbol	it8 -> TablesCount		710385						
ANR	710821	Symbol	* p		710385						
ANR	710822	Symbol	* t		710385						
ANR	710823	Symbol	Fld		710385						
ANR	710824	Function	IsMyBlock	2226:0:61336:62067							
ANR	710825	FunctionDef	"IsMyBlock (cmsUInt8Number * Buffer , int n)"		710824	0					
ANR	710826	CompoundStatement		2228:0:61388:62067	710824	0					
ANR	710827	IdentifierDeclStatement	"int words = 1 , space = 0 , quot = 0 ;"	2229:4:61394:61428	710824	0	True				
ANR	710828	IdentifierDecl	words = 1		710824	0					
ANR	710829	IdentifierDeclType	int		710824	0					
ANR	710830	Identifier	words		710824	1					
ANR	710831	AssignmentExpression	words = 1		710824	2		=			
ANR	710832	Identifier	words		710824	0					
ANR	710833	PrimaryExpression	1		710824	1					
ANR	710834	IdentifierDecl	space = 0		710824	1					
ANR	710835	IdentifierDeclType	int		710824	0					
ANR	710836	Identifier	space		710824	1					
ANR	710837	AssignmentExpression	space = 0		710824	2		=			
ANR	710838	Identifier	space		710824	0					
ANR	710839	PrimaryExpression	0		710824	1					
ANR	710840	IdentifierDecl	quot = 0		710824	2					
ANR	710841	IdentifierDeclType	int		710824	0					
ANR	710842	Identifier	quot		710824	1					
ANR	710843	AssignmentExpression	quot = 0		710824	2		=			
ANR	710844	Identifier	quot		710824	0					
ANR	710845	PrimaryExpression	0		710824	1					
ANR	710846	IdentifierDeclStatement	int i ;	2230:4:61434:61439	710824	1	True				
ANR	710847	IdentifierDecl	i		710824	0					
ANR	710848	IdentifierDeclType	int		710824	0					
ANR	710849	Identifier	i		710824	1					
ANR	710850	IfStatement	if ( n < 10 )		710824	2					
ANR	710851	Condition	n < 10	2232:8:61450:61455	710824	0	True				
ANR	710852	RelationalExpression	n < 10		710824	0		<			
ANR	710853	Identifier	n		710824	0					
ANR	710854	PrimaryExpression	10		710824	1					
ANR	710855	ReturnStatement	return 0 ;	2232:16:61458:61466	710824	1	True				
ANR	710856	PrimaryExpression	0		710824	0					
ANR	710857	IfStatement	if ( n > 132 )		710824	3					
ANR	710858	Condition	n > 132	2234:8:61492:61498	710824	0	True				
ANR	710859	RelationalExpression	n > 132		710824	0		>			
ANR	710860	Identifier	n		710824	0					
ANR	710861	PrimaryExpression	132		710824	1					
ANR	710862	ExpressionStatement	n = 132	2235:8:61509:61516	710824	1	True				
ANR	710863	AssignmentExpression	n = 132		710824	0		=			
ANR	710864	Identifier	n		710824	0					
ANR	710865	PrimaryExpression	132		710824	1					
ANR	710866	ForStatement	for ( i = 1 ; i < n ; i ++ )		710824	4					
ANR	710867	ForInit	i = 1 ;	2237:9:61528:61533	710824	0	True				
ANR	710868	AssignmentExpression	i = 1		710824	0		=			
ANR	710869	Identifier	i		710824	0					
ANR	710870	PrimaryExpression	1		710824	1					
ANR	710871	Condition	i < n	2237:16:61535:61539	710824	1	True				
ANR	710872	RelationalExpression	i < n		710824	0		<			
ANR	710873	Identifier	i		710824	0					
ANR	710874	Identifier	n		710824	1					
ANR	710875	PostIncDecOperationExpression	i ++	2237:23:61542:61544	710824	2	True				
ANR	710876	Identifier	i		710824	0					
ANR	710877	IncDec	++		710824	1					
ANR	710878	CompoundStatement		10:28:158:158	710824	3					
ANR	710879	SwitchStatement	switch ( Buffer [ i ] )		710824	0					
ANR	710880	Condition	Buffer [ i ]	2239:15:61565:61573	710824	0	True				
ANR	710881	ArrayIndexing	Buffer [ i ]		710824	0					
ANR	710882	Identifier	Buffer		710824	0					
ANR	710883	Identifier	i		710824	1					
ANR	710884	CompoundStatement		13:8:195:195	710824	1					
ANR	710885	Label	case '\\n' :	2241:8:61594:61603	710824	0	True				
ANR	710886	Label	case '\\r' :	2242:8:61613:61622	710824	1	True				
ANR	710887	ReturnStatement	return ( ( quot == 1 ) || ( words > 2 ) ) ? 0 : words ;	2243:12:61636:61683	710824	2	True				
ANR	710888	ConditionalExpression	( ( quot == 1 ) || ( words > 2 ) ) ? 0 : words		710824	0					
ANR	710889	Condition	( quot == 1 ) || ( words > 2 )		710824	0					
ANR	710890	OrExpression	( quot == 1 ) || ( words > 2 )		710824	0		||			
ANR	710891	EqualityExpression	quot == 1		710824	0		==			
ANR	710892	Identifier	quot		710824	0					
ANR	710893	PrimaryExpression	1		710824	1					
ANR	710894	RelationalExpression	words > 2		710824	1		>			
ANR	710895	Identifier	words		710824	0					
ANR	710896	PrimaryExpression	2		710824	1					
ANR	710897	PrimaryExpression	0		710824	1					
ANR	710898	Identifier	words		710824	2					
ANR	710899	Label	case '\\t' :	2244:8:61693:61702	710824	3	True				
ANR	710900	Label	case ' ' :	2245:8:61712:61720	710824	4	True				
ANR	710901	IfStatement	if ( ! quot && ! space )		710824	5					
ANR	710902	Condition	! quot && ! space	2246:15:61737:61751	710824	0	True				
ANR	710903	AndExpression	! quot && ! space		710824	0		&&			
ANR	710904	UnaryOperationExpression	! quot		710824	0					
ANR	710905	UnaryOperator	!		710824	0					
ANR	710906	Identifier	quot		710824	1					
ANR	710907	UnaryOperationExpression	! space		710824	1					
ANR	710908	UnaryOperator	!		710824	0					
ANR	710909	Identifier	space		710824	1					
ANR	710910	ExpressionStatement	space = 1	2247:16:61770:61779	710824	1	True				
ANR	710911	AssignmentExpression	space = 1		710824	0		=			
ANR	710912	Identifier	space		710824	0					
ANR	710913	PrimaryExpression	1		710824	1					
ANR	710914	BreakStatement	break ;	2248:12:61793:61798	710824	6	True				
ANR	710915	Label	"case '\\""' :"	2249:8:61808:61817	710824	7	True				
ANR	710916	ExpressionStatement	quot = ! quot	2250:12:61831:61843	710824	8	True				
ANR	710917	AssignmentExpression	quot = ! quot		710824	0		=			
ANR	710918	Identifier	quot		710824	0					
ANR	710919	UnaryOperationExpression	! quot		710824	1					
ANR	710920	UnaryOperator	!		710824	0					
ANR	710921	Identifier	quot		710824	1					
ANR	710922	BreakStatement	break ;	2251:12:61857:61862	710824	9	True				
ANR	710923	Label	default :	2252:8:61872:61879	710824	10	True				
ANR	710924	Identifier	default		710824	0					
ANR	710925	IfStatement	if ( Buffer [ i ] < 32 )		710824	11					
ANR	710926	Condition	Buffer [ i ] < 32	2253:16:61897:61910	710824	0	True				
ANR	710927	RelationalExpression	Buffer [ i ] < 32		710824	0		<			
ANR	710928	ArrayIndexing	Buffer [ i ]		710824	0					
ANR	710929	Identifier	Buffer		710824	0					
ANR	710930	Identifier	i		710824	1					
ANR	710931	PrimaryExpression	32		710824	1					
ANR	710932	ReturnStatement	return 0 ;	2253:32:61913:61921	710824	1	True				
ANR	710933	PrimaryExpression	0		710824	0					
ANR	710934	IfStatement	if ( Buffer [ i ] > 127 )		710824	12					
ANR	710935	Condition	Buffer [ i ] > 127	2254:16:61939:61953	710824	0	True				
ANR	710936	RelationalExpression	Buffer [ i ] > 127		710824	0		>			
ANR	710937	ArrayIndexing	Buffer [ i ]		710824	0					
ANR	710938	Identifier	Buffer		710824	0					
ANR	710939	Identifier	i		710824	1					
ANR	710940	PrimaryExpression	127		710824	1					
ANR	710941	ReturnStatement	return 0 ;	2254:33:61956:61964	710824	1	True				
ANR	710942	PrimaryExpression	0		710824	0					
ANR	710943	ExpressionStatement	words += space	2255:12:61978:61992	710824	13	True				
ANR	710944	AssignmentExpression	words += space		710824	0		+=			
ANR	710945	Identifier	words		710824	0					
ANR	710946	Identifier	space		710824	1					
ANR	710947	ExpressionStatement	space = 0	2256:12:62006:62015	710824	14	True				
ANR	710948	AssignmentExpression	space = 0		710824	0		=			
ANR	710949	Identifier	space		710824	0					
ANR	710950	PrimaryExpression	0		710824	1					
ANR	710951	BreakStatement	break ;	2257:12:62029:62034	710824	15	True				
ANR	710952	ReturnStatement	return 0 ;	2261:4:62057:62065	710824	5	True				
ANR	710953	PrimaryExpression	0		710824	0					
ANR	710954	ReturnType	static int		710824	1					
ANR	710955	Identifier	IsMyBlock		710824	2					
ANR	710956	ParameterList	"cmsUInt8Number * Buffer , int n"		710824	3					
ANR	710957	Parameter	cmsUInt8Number * Buffer	2227:14:61357:61378	710824	0	True				
ANR	710958	ParameterType	cmsUInt8Number *		710824	0					
ANR	710959	Identifier	Buffer		710824	1					
ANR	710960	Parameter	int n	2227:38:61381:61385	710824	1	True				
ANR	710961	ParameterType	int		710824	0					
ANR	710962	Identifier	n		710824	1					
ANR	710963	CFGEntryNode	ENTRY		710824		True				
ANR	710964	CFGExitNode	EXIT		710824		True				
ANR	710965	Symbol	Buffer		710824						
ANR	710966	Symbol	* i		710824						
ANR	710967	Symbol	words		710824						
ANR	710968	Symbol	i		710824						
ANR	710969	Symbol	quot		710824						
ANR	710970	Symbol	n		710824						
ANR	710971	Symbol	space		710824						
ANR	710972	Symbol	* Buffer		710824						
ANR	710973	Function	IsMyFile	2265:0:62071:62485							
ANR	710974	FunctionDef	IsMyFile (const char * FileName)		710973	0					
ANR	710975	CompoundStatement		2267:0:62117:62485	710973	0					
ANR	710976	IdentifierDeclStatement	FILE * fp ;	2268:3:62122:62130	710973	0	True				
ANR	710977	IdentifierDecl	* fp		710973	0					
ANR	710978	IdentifierDeclType	FILE *		710973	0					
ANR	710979	Identifier	fp		710973	1					
ANR	710980	IdentifierDeclStatement	cmsUInt32Number Size ;	2269:3:62135:62155	710973	1	True				
ANR	710981	IdentifierDecl	Size		710973	0					
ANR	710982	IdentifierDeclType	cmsUInt32Number		710973	0					
ANR	710983	Identifier	Size		710973	1					
ANR	710984	IdentifierDeclStatement	cmsUInt8Number Ptr [ 133 ] ;	2270:3:62160:62183	710973	2	True				
ANR	710985	IdentifierDecl	Ptr [ 133 ]		710973	0					
ANR	710986	IdentifierDeclType	cmsUInt8Number [ 133 ]		710973	0					
ANR	710987	Identifier	Ptr		710973	1					
ANR	710988	PrimaryExpression	133		710973	2					
ANR	710989	ExpressionStatement	"fp = fopen ( FileName , ""rt"" )"	2272:3:62189:62215	710973	3	True				
ANR	710990	AssignmentExpression	"fp = fopen ( FileName , ""rt"" )"		710973	0		=			
ANR	710991	Identifier	fp		710973	0					
ANR	710992	CallExpression	"fopen ( FileName , ""rt"" )"		710973	1					
ANR	710993	Callee	fopen		710973	0					
ANR	710994	Identifier	fopen		710973	0					
ANR	710995	ArgumentList	FileName		710973	1					
ANR	710996	Argument	FileName		710973	0					
ANR	710997	Identifier	FileName		710973	0					
ANR	710998	Argument	"""rt"""		710973	1					
ANR	710999	PrimaryExpression	"""rt"""		710973	0					
ANR	711000	IfStatement	if ( ! fp )		710973	4					
ANR	711001	Condition	! fp	2273:7:62224:62226	710973	0	True				
ANR	711002	UnaryOperationExpression	! fp		710973	0					
ANR	711003	UnaryOperator	!		710973	0					
ANR	711004	Identifier	fp		710973	1					
ANR	711005	CompoundStatement		7:12:111:111	710973	1					
ANR	711006	ExpressionStatement	"cmsSignalError ( 0 , cmsERROR_FILE , ""File '%s' not found"" , FileName )"	2274:7:62238:62303	710973	0	True				
ANR	711007	CallExpression	"cmsSignalError ( 0 , cmsERROR_FILE , ""File '%s' not found"" , FileName )"		710973	0					
ANR	711008	Callee	cmsSignalError		710973	0					
ANR	711009	Identifier	cmsSignalError		710973	0					
ANR	711010	ArgumentList	0		710973	1					
ANR	711011	Argument	0		710973	0					
ANR	711012	PrimaryExpression	0		710973	0					
ANR	711013	Argument	cmsERROR_FILE		710973	1					
ANR	711014	Identifier	cmsERROR_FILE		710973	0					
ANR	711015	Argument	"""File '%s' not found"""		710973	2					
ANR	711016	PrimaryExpression	"""File '%s' not found"""		710973	0					
ANR	711017	Argument	FileName		710973	3					
ANR	711018	Identifier	FileName		710973	0					
ANR	711019	ReturnStatement	return FALSE ;	2275:7:62312:62324	710973	1	True				
ANR	711020	Identifier	FALSE		710973	0					
ANR	711021	ExpressionStatement	"Size = ( cmsUInt32Number ) fread ( Ptr , 1 , 132 , fp )"	2278:3:62335:62382	710973	5	True				
ANR	711022	AssignmentExpression	"Size = ( cmsUInt32Number ) fread ( Ptr , 1 , 132 , fp )"		710973	0		=			
ANR	711023	Identifier	Size		710973	0					
ANR	711024	CastExpression	"( cmsUInt32Number ) fread ( Ptr , 1 , 132 , fp )"		710973	1					
ANR	711025	CastTarget	cmsUInt32Number		710973	0					
ANR	711026	CallExpression	"fread ( Ptr , 1 , 132 , fp )"		710973	1					
ANR	711027	Callee	fread		710973	0					
ANR	711028	Identifier	fread		710973	0					
ANR	711029	ArgumentList	Ptr		710973	1					
ANR	711030	Argument	Ptr		710973	0					
ANR	711031	Identifier	Ptr		710973	0					
ANR	711032	Argument	1		710973	1					
ANR	711033	PrimaryExpression	1		710973	0					
ANR	711034	Argument	132		710973	2					
ANR	711035	PrimaryExpression	132		710973	0					
ANR	711036	Argument	fp		710973	3					
ANR	711037	Identifier	fp		710973	0					
ANR	711038	IfStatement	if ( fclose ( fp ) != 0 )		710973	6					
ANR	711039	Condition	fclose ( fp ) != 0	2280:7:62392:62406	710973	0	True				
ANR	711040	EqualityExpression	fclose ( fp ) != 0		710973	0		!=			
ANR	711041	CallExpression	fclose ( fp )		710973	0					
ANR	711042	Callee	fclose		710973	0					
ANR	711043	Identifier	fclose		710973	0					
ANR	711044	ArgumentList	fp		710973	1					
ANR	711045	Argument	fp		710973	0					
ANR	711046	Identifier	fp		710973	0					
ANR	711047	PrimaryExpression	0		710973	1					
ANR	711048	ReturnStatement	return FALSE ;	2281:7:62416:62428	710973	1	True				
ANR	711049	Identifier	FALSE		710973	0					
ANR	711050	ExpressionStatement	Ptr [ Size ] = '\\0'	2283:3:62434:62450	710973	7	True				
ANR	711051	AssignmentExpression	Ptr [ Size ] = '\\0'		710973	0		=			
ANR	711052	ArrayIndexing	Ptr [ Size ]		710973	0					
ANR	711053	Identifier	Ptr		710973	0					
ANR	711054	Identifier	Size		710973	1					
ANR	711055	PrimaryExpression	'\\0'		710973	1					
ANR	711056	ReturnStatement	"return IsMyBlock ( Ptr , Size ) ;"	2285:3:62456:62483	710973	8	True				
ANR	711057	CallExpression	"IsMyBlock ( Ptr , Size )"		710973	0					
ANR	711058	Callee	IsMyBlock		710973	0					
ANR	711059	Identifier	IsMyBlock		710973	0					
ANR	711060	ArgumentList	Ptr		710973	1					
ANR	711061	Argument	Ptr		710973	0					
ANR	711062	Identifier	Ptr		710973	0					
ANR	711063	Argument	Size		710973	1					
ANR	711064	Identifier	Size		710973	0					
ANR	711065	ReturnType	static cmsBool		710973	1					
ANR	711066	Identifier	IsMyFile		710973	2					
ANR	711067	ParameterList	const char * FileName		710973	3					
ANR	711068	Parameter	const char * FileName	2266:17:62095:62114	710973	0	True				
ANR	711069	ParameterType	const char *		710973	0					
ANR	711070	Identifier	FileName		710973	1					
ANR	711071	CFGEntryNode	ENTRY		710973		True				
ANR	711072	CFGExitNode	EXIT		710973		True				
ANR	711073	Symbol	fopen		710973						
ANR	711074	Symbol	* Size		710973						
ANR	711075	Symbol	Size		710973						
ANR	711076	Symbol	fclose		710973						
ANR	711077	Symbol	FileName		710973						
ANR	711078	Symbol	* Ptr		710973						
ANR	711079	Symbol	fp		710973						
ANR	711080	Symbol	FALSE		710973						
ANR	711081	Symbol	cmsERROR_FILE		710973						
ANR	711082	Symbol	fread		710973						
ANR	711083	Symbol	IsMyBlock		710973						
ANR	711084	Symbol	Ptr		710973						
ANR	711085	Function	cmsIT8LoadFromMem	2291:0:62570:63431							
ANR	711086	FunctionDef	"cmsIT8LoadFromMem (cmsContext ContextID , void * Ptr , cmsUInt32Number len)"		711085	0					
ANR	711087	CompoundStatement		2292:0:62663:63431	711085	0					
ANR	711088	IdentifierDeclStatement	cmsHANDLE hIT8 ;	2293:4:62669:62683	711085	0	True				
ANR	711089	IdentifierDecl	hIT8		711085	0					
ANR	711090	IdentifierDeclType	cmsHANDLE		711085	0					
ANR	711091	Identifier	hIT8		711085	1					
ANR	711092	IdentifierDeclStatement	cmsIT8 * it8 ;	2294:4:62689:62701	711085	1	True				
ANR	711093	IdentifierDecl	* it8		711085	0					
ANR	711094	IdentifierDeclType	cmsIT8 *		711085	0					
ANR	711095	Identifier	it8		711085	1					
ANR	711096	IdentifierDeclStatement	int type ;	2295:4:62707:62715	711085	2	True				
ANR	711097	IdentifierDecl	type		711085	0					
ANR	711098	IdentifierDeclType	int		711085	0					
ANR	711099	Identifier	type		711085	1					
ANR	711100	ExpressionStatement	_cmsAssert ( Ptr != NULL )	2297:4:62722:62745	711085	3	True				
ANR	711101	CallExpression	_cmsAssert ( Ptr != NULL )		711085	0					
ANR	711102	Callee	_cmsAssert		711085	0					
ANR	711103	Identifier	_cmsAssert		711085	0					
ANR	711104	ArgumentList	Ptr != NULL		711085	1					
ANR	711105	Argument	Ptr != NULL		711085	0					
ANR	711106	EqualityExpression	Ptr != NULL		711085	0		!=			
ANR	711107	Identifier	Ptr		711085	0					
ANR	711108	Identifier	NULL		711085	1					
ANR	711109	ExpressionStatement	_cmsAssert ( len != 0 )	2298:4:62751:62771	711085	4	True				
ANR	711110	CallExpression	_cmsAssert ( len != 0 )		711085	0					
ANR	711111	Callee	_cmsAssert		711085	0					
ANR	711112	Identifier	_cmsAssert		711085	0					
ANR	711113	ArgumentList	len != 0		711085	1					
ANR	711114	Argument	len != 0		711085	0					
ANR	711115	EqualityExpression	len != 0		711085	0		!=			
ANR	711116	Identifier	len		711085	0					
ANR	711117	PrimaryExpression	0		711085	1					
ANR	711118	ExpressionStatement	"type = IsMyBlock ( ( cmsUInt8Number * ) Ptr , len )"	2300:4:62778:62821	711085	5	True				
ANR	711119	AssignmentExpression	"type = IsMyBlock ( ( cmsUInt8Number * ) Ptr , len )"		711085	0		=			
ANR	711120	Identifier	type		711085	0					
ANR	711121	CallExpression	"IsMyBlock ( ( cmsUInt8Number * ) Ptr , len )"		711085	1					
ANR	711122	Callee	IsMyBlock		711085	0					
ANR	711123	Identifier	IsMyBlock		711085	0					
ANR	711124	ArgumentList	( cmsUInt8Number * ) Ptr		711085	1					
ANR	711125	Argument	( cmsUInt8Number * ) Ptr		711085	0					
ANR	711126	CastExpression	( cmsUInt8Number * ) Ptr		711085	0					
ANR	711127	CastTarget	cmsUInt8Number *		711085	0					
ANR	711128	Identifier	Ptr		711085	1					
ANR	711129	Argument	len		711085	1					
ANR	711130	Identifier	len		711085	0					
ANR	711131	IfStatement	if ( type == 0 )		711085	6					
ANR	711132	Condition	type == 0	2301:8:62831:62839	711085	0	True				
ANR	711133	EqualityExpression	type == 0		711085	0		==			
ANR	711134	Identifier	type		711085	0					
ANR	711135	PrimaryExpression	0		711085	1					
ANR	711136	ReturnStatement	return NULL ;	2301:19:62842:62853	711085	1	True				
ANR	711137	Identifier	NULL		711085	0					
ANR	711138	ExpressionStatement	hIT8 = cmsIT8Alloc ( ContextID )	2303:4:62860:62889	711085	7	True				
ANR	711139	AssignmentExpression	hIT8 = cmsIT8Alloc ( ContextID )		711085	0		=			
ANR	711140	Identifier	hIT8		711085	0					
ANR	711141	CallExpression	cmsIT8Alloc ( ContextID )		711085	1					
ANR	711142	Callee	cmsIT8Alloc		711085	0					
ANR	711143	Identifier	cmsIT8Alloc		711085	0					
ANR	711144	ArgumentList	ContextID		711085	1					
ANR	711145	Argument	ContextID		711085	0					
ANR	711146	Identifier	ContextID		711085	0					
ANR	711147	IfStatement	if ( ! hIT8 )		711085	8					
ANR	711148	Condition	! hIT8	2304:8:62899:62903	711085	0	True				
ANR	711149	UnaryOperationExpression	! hIT8		711085	0					
ANR	711150	UnaryOperator	!		711085	0					
ANR	711151	Identifier	hIT8		711085	1					
ANR	711152	ReturnStatement	return NULL ;	2304:15:62906:62917	711085	1	True				
ANR	711153	Identifier	NULL		711085	0					
ANR	711154	ExpressionStatement	it8 = ( cmsIT8 * ) hIT8	2306:4:62924:62944	711085	9	True				
ANR	711155	AssignmentExpression	it8 = ( cmsIT8 * ) hIT8		711085	0		=			
ANR	711156	Identifier	it8		711085	0					
ANR	711157	CastExpression	( cmsIT8 * ) hIT8		711085	1					
ANR	711158	CastTarget	cmsIT8 *		711085	0					
ANR	711159	Identifier	hIT8		711085	1					
ANR	711160	ExpressionStatement	"it8 -> MemoryBlock = ( char * ) _cmsMalloc ( ContextID , len + 1 )"	2307:4:62950:63008	711085	10	True				
ANR	711161	AssignmentExpression	"it8 -> MemoryBlock = ( char * ) _cmsMalloc ( ContextID , len + 1 )"		711085	0		=			
ANR	711162	PtrMemberAccess	it8 -> MemoryBlock		711085	0					
ANR	711163	Identifier	it8		711085	0					
ANR	711164	Identifier	MemoryBlock		711085	1					
ANR	711165	CastExpression	"( char * ) _cmsMalloc ( ContextID , len + 1 )"		711085	1					
ANR	711166	CastTarget	char *		711085	0					
ANR	711167	CallExpression	"_cmsMalloc ( ContextID , len + 1 )"		711085	1					
ANR	711168	Callee	_cmsMalloc		711085	0					
ANR	711169	Identifier	_cmsMalloc		711085	0					
ANR	711170	ArgumentList	ContextID		711085	1					
ANR	711171	Argument	ContextID		711085	0					
ANR	711172	Identifier	ContextID		711085	0					
ANR	711173	Argument	len + 1		711085	1					
ANR	711174	AdditiveExpression	len + 1		711085	0		+			
ANR	711175	Identifier	len		711085	0					
ANR	711176	PrimaryExpression	1		711085	1					
ANR	711177	ExpressionStatement	"strncpy ( it8 -> MemoryBlock , ( const char * ) Ptr , len )"	2309:4:63015:63065	711085	11	True				
ANR	711178	CallExpression	"strncpy ( it8 -> MemoryBlock , ( const char * ) Ptr , len )"		711085	0					
ANR	711179	Callee	strncpy		711085	0					
ANR	711180	Identifier	strncpy		711085	0					
ANR	711181	ArgumentList	it8 -> MemoryBlock		711085	1					
ANR	711182	Argument	it8 -> MemoryBlock		711085	0					
ANR	711183	PtrMemberAccess	it8 -> MemoryBlock		711085	0					
ANR	711184	Identifier	it8		711085	0					
ANR	711185	Identifier	MemoryBlock		711085	1					
ANR	711186	Argument	( const char * ) Ptr		711085	1					
ANR	711187	CastExpression	( const char * ) Ptr		711085	0					
ANR	711188	CastTarget	const char *		711085	0					
ANR	711189	Identifier	Ptr		711085	1					
ANR	711190	Argument	len		711085	2					
ANR	711191	Identifier	len		711085	0					
ANR	711192	ExpressionStatement	it8 -> MemoryBlock [ len ] = 0	2310:4:63071:63097	711085	12	True				
ANR	711193	AssignmentExpression	it8 -> MemoryBlock [ len ] = 0		711085	0		=			
ANR	711194	ArrayIndexing	it8 -> MemoryBlock [ len ]		711085	0					
ANR	711195	PtrMemberAccess	it8 -> MemoryBlock		711085	0					
ANR	711196	Identifier	it8		711085	0					
ANR	711197	Identifier	MemoryBlock		711085	1					
ANR	711198	Identifier	len		711085	1					
ANR	711199	PrimaryExpression	0		711085	1					
ANR	711200	ExpressionStatement	"strncpy ( it8 -> FileStack [ 0 ] -> FileName , """" , cmsMAX_PATH - 1 )"	2312:4:63104:63159	711085	13	True				
ANR	711201	CallExpression	"strncpy ( it8 -> FileStack [ 0 ] -> FileName , """" , cmsMAX_PATH - 1 )"		711085	0					
ANR	711202	Callee	strncpy		711085	0					
ANR	711203	Identifier	strncpy		711085	0					
ANR	711204	ArgumentList	it8 -> FileStack [ 0 ] -> FileName		711085	1					
ANR	711205	Argument	it8 -> FileStack [ 0 ] -> FileName		711085	0					
ANR	711206	PtrMemberAccess	it8 -> FileStack [ 0 ] -> FileName		711085	0					
ANR	711207	ArrayIndexing	it8 -> FileStack [ 0 ]		711085	0					
ANR	711208	PtrMemberAccess	it8 -> FileStack		711085	0					
ANR	711209	Identifier	it8		711085	0					
ANR	711210	Identifier	FileStack		711085	1					
ANR	711211	PrimaryExpression	0		711085	1					
ANR	711212	Identifier	FileName		711085	1					
ANR	711213	Argument	""""""		711085	1					
ANR	711214	PrimaryExpression	""""""		711085	0					
ANR	711215	Argument	cmsMAX_PATH - 1		711085	2					
ANR	711216	AdditiveExpression	cmsMAX_PATH - 1		711085	0		-			
ANR	711217	Identifier	cmsMAX_PATH		711085	0					
ANR	711218	PrimaryExpression	1		711085	1					
ANR	711219	ExpressionStatement	it8 -> Source = it8 -> MemoryBlock	2313:4:63165:63198	711085	14	True				
ANR	711220	AssignmentExpression	it8 -> Source = it8 -> MemoryBlock		711085	0		=			
ANR	711221	PtrMemberAccess	it8 -> Source		711085	0					
ANR	711222	Identifier	it8		711085	0					
ANR	711223	Identifier	Source		711085	1					
ANR	711224	PtrMemberAccess	it8 -> MemoryBlock		711085	1					
ANR	711225	Identifier	it8		711085	0					
ANR	711226	Identifier	MemoryBlock		711085	1					
ANR	711227	IfStatement	"if ( ! ParseIT8 ( it8 , type - 1 ) )"		711085	15					
ANR	711228	Condition	"! ParseIT8 ( it8 , type - 1 )"	2315:8:63209:63230	711085	0	True				
ANR	711229	UnaryOperationExpression	"! ParseIT8 ( it8 , type - 1 )"		711085	0					
ANR	711230	UnaryOperator	!		711085	0					
ANR	711231	CallExpression	"ParseIT8 ( it8 , type - 1 )"		711085	1					
ANR	711232	Callee	ParseIT8		711085	0					
ANR	711233	Identifier	ParseIT8		711085	0					
ANR	711234	ArgumentList	it8		711085	1					
ANR	711235	Argument	it8		711085	0					
ANR	711236	Identifier	it8		711085	0					
ANR	711237	Argument	type - 1		711085	1					
ANR	711238	AdditiveExpression	type - 1		711085	0		-			
ANR	711239	Identifier	type		711085	0					
ANR	711240	PrimaryExpression	1		711085	1					
ANR	711241	CompoundStatement		24:32:569:569	711085	1					
ANR	711242	ExpressionStatement	cmsIT8Free ( hIT8 )	2317:8:63244:63260	711085	0	True				
ANR	711243	CallExpression	cmsIT8Free ( hIT8 )		711085	0					
ANR	711244	Callee	cmsIT8Free		711085	0					
ANR	711245	Identifier	cmsIT8Free		711085	0					
ANR	711246	ArgumentList	hIT8		711085	1					
ANR	711247	Argument	hIT8		711085	0					
ANR	711248	Identifier	hIT8		711085	0					
ANR	711249	ReturnStatement	return FALSE ;	2318:8:63270:63282	711085	1	True				
ANR	711250	Identifier	FALSE		711085	0					
ANR	711251	ExpressionStatement	CookPointers ( it8 )	2321:4:63295:63312	711085	16	True				
ANR	711252	CallExpression	CookPointers ( it8 )		711085	0					
ANR	711253	Callee	CookPointers		711085	0					
ANR	711254	Identifier	CookPointers		711085	0					
ANR	711255	ArgumentList	it8		711085	1					
ANR	711256	Argument	it8		711085	0					
ANR	711257	Identifier	it8		711085	0					
ANR	711258	ExpressionStatement	it8 -> nTable = 0	2322:4:63318:63334	711085	17	True				
ANR	711259	AssignmentExpression	it8 -> nTable = 0		711085	0		=			
ANR	711260	PtrMemberAccess	it8 -> nTable		711085	0					
ANR	711261	Identifier	it8		711085	0					
ANR	711262	Identifier	nTable		711085	1					
ANR	711263	PrimaryExpression	0		711085	1					
ANR	711264	ExpressionStatement	"_cmsFree ( ContextID , it8 -> MemoryBlock )"	2324:4:63341:63378	711085	18	True				
ANR	711265	CallExpression	"_cmsFree ( ContextID , it8 -> MemoryBlock )"		711085	0					
ANR	711266	Callee	_cmsFree		711085	0					
ANR	711267	Identifier	_cmsFree		711085	0					
ANR	711268	ArgumentList	ContextID		711085	1					
ANR	711269	Argument	ContextID		711085	0					
ANR	711270	Identifier	ContextID		711085	0					
ANR	711271	Argument	it8 -> MemoryBlock		711085	1					
ANR	711272	PtrMemberAccess	it8 -> MemoryBlock		711085	0					
ANR	711273	Identifier	it8		711085	0					
ANR	711274	Identifier	MemoryBlock		711085	1					
ANR	711275	ExpressionStatement	it8 -> MemoryBlock = NULL	2325:4:63384:63409	711085	19	True				
ANR	711276	AssignmentExpression	it8 -> MemoryBlock = NULL		711085	0		=			
ANR	711277	PtrMemberAccess	it8 -> MemoryBlock		711085	0					
ANR	711278	Identifier	it8		711085	0					
ANR	711279	Identifier	MemoryBlock		711085	1					
ANR	711280	Identifier	NULL		711085	1					
ANR	711281	ReturnStatement	return hIT8 ;	2327:4:63416:63427	711085	20	True				
ANR	711282	Identifier	hIT8		711085	0					
ANR	711283	ReturnType	cmsHANDLE CMSEXPORT		711085	1					
ANR	711284	Identifier	cmsIT8LoadFromMem		711085	2					
ANR	711285	ParameterList	"cmsContext ContextID , void * Ptr , cmsUInt32Number len"		711085	3					
ANR	711286	Parameter	cmsContext ContextID	2291:39:62609:62628	711085	0	True				
ANR	711287	ParameterType	cmsContext		711085	0					
ANR	711288	Identifier	ContextID		711085	1					
ANR	711289	Parameter	void * Ptr	2291:61:62631:62639	711085	1	True				
ANR	711290	ParameterType	void *		711085	0					
ANR	711291	Identifier	Ptr		711085	1					
ANR	711292	Parameter	cmsUInt32Number len	2291:72:62642:62660	711085	2	True				
ANR	711293	ParameterType	cmsUInt32Number		711085	0					
ANR	711294	Identifier	len		711085	1					
ANR	711295	CFGEntryNode	ENTRY		711085		True				
ANR	711296	CFGExitNode	EXIT		711085		True				
ANR	711297	Symbol	* * it8		711085						
ANR	711298	Symbol	* it8 -> FileStack		711085						
ANR	711299	Symbol	type		711085						
ANR	711300	Symbol	* it8 -> MemoryBlock		711085						
ANR	711301	Symbol	Ptr		711085						
ANR	711302	Symbol	it8 -> nTable		711085						
ANR	711303	Symbol	len		711085						
ANR	711304	Symbol	* * it8 -> FileStack		711085						
ANR	711305	Symbol	ContextID		711085						
ANR	711306	Symbol	cmsIT8Alloc		711085						
ANR	711307	Symbol	ParseIT8		711085						
ANR	711308	Symbol	it8 -> FileStack [ 0 ] -> FileName		711085						
ANR	711309	Symbol	_cmsMalloc		711085						
ANR	711310	Symbol	NULL		711085						
ANR	711311	Symbol	cmsMAX_PATH		711085						
ANR	711312	Symbol	* it8		711085						
ANR	711313	Symbol	it8 -> Source		711085						
ANR	711314	Symbol	* * * it8		711085						
ANR	711315	Symbol	it8		711085						
ANR	711316	Symbol	IsMyBlock		711085						
ANR	711317	Symbol	it8 -> FileStack		711085						
ANR	711318	Symbol	hIT8		711085						
ANR	711319	Symbol	FALSE		711085						
ANR	711320	Symbol	it8 -> MemoryBlock		711085						
ANR	711321	Symbol	* len		711085						
ANR	711322	Function	cmsIT8LoadFromFile	2333:0:63435:64376							
ANR	711323	FunctionDef	"cmsIT8LoadFromFile (cmsContext ContextID , const char * cFileName)"		711322	0					
ANR	711324	CompoundStatement		2334:0:63520:64376	711322	0					
ANR	711325	IdentifierDeclStatement	cmsHANDLE hIT8 ;	2336:5:63528:63542	711322	0	True				
ANR	711326	IdentifierDecl	hIT8		711322	0					
ANR	711327	IdentifierDeclType	cmsHANDLE		711322	0					
ANR	711328	Identifier	hIT8		711322	1					
ANR	711329	IdentifierDeclStatement	cmsIT8 * it8 ;	2337:5:63549:63561	711322	1	True				
ANR	711330	IdentifierDecl	* it8		711322	0					
ANR	711331	IdentifierDeclType	cmsIT8 *		711322	0					
ANR	711332	Identifier	it8		711322	1					
ANR	711333	IdentifierDeclStatement	int type ;	2338:5:63568:63576	711322	2	True				
ANR	711334	IdentifierDecl	type		711322	0					
ANR	711335	IdentifierDeclType	int		711322	0					
ANR	711336	Identifier	type		711322	1					
ANR	711337	ExpressionStatement	_cmsAssert ( cFileName != NULL )	2340:5:63584:63613	711322	3	True				
ANR	711338	CallExpression	_cmsAssert ( cFileName != NULL )		711322	0					
ANR	711339	Callee	_cmsAssert		711322	0					
ANR	711340	Identifier	_cmsAssert		711322	0					
ANR	711341	ArgumentList	cFileName != NULL		711322	1					
ANR	711342	Argument	cFileName != NULL		711322	0					
ANR	711343	EqualityExpression	cFileName != NULL		711322	0		!=			
ANR	711344	Identifier	cFileName		711322	0					
ANR	711345	Identifier	NULL		711322	1					
ANR	711346	ExpressionStatement	type = IsMyFile ( cFileName )	2342:5:63621:63647	711322	4	True				
ANR	711347	AssignmentExpression	type = IsMyFile ( cFileName )		711322	0		=			
ANR	711348	Identifier	type		711322	0					
ANR	711349	CallExpression	IsMyFile ( cFileName )		711322	1					
ANR	711350	Callee	IsMyFile		711322	0					
ANR	711351	Identifier	IsMyFile		711322	0					
ANR	711352	ArgumentList	cFileName		711322	1					
ANR	711353	Argument	cFileName		711322	0					
ANR	711354	Identifier	cFileName		711322	0					
ANR	711355	IfStatement	if ( type == 0 )		711322	5					
ANR	711356	Condition	type == 0	2343:9:63658:63666	711322	0	True				
ANR	711357	EqualityExpression	type == 0		711322	0		==			
ANR	711358	Identifier	type		711322	0					
ANR	711359	PrimaryExpression	0		711322	1					
ANR	711360	ReturnStatement	return NULL ;	2343:20:63669:63680	711322	1	True				
ANR	711361	Identifier	NULL		711322	0					
ANR	711362	ExpressionStatement	hIT8 = cmsIT8Alloc ( ContextID )	2345:5:63688:63717	711322	6	True				
ANR	711363	AssignmentExpression	hIT8 = cmsIT8Alloc ( ContextID )		711322	0		=			
ANR	711364	Identifier	hIT8		711322	0					
ANR	711365	CallExpression	cmsIT8Alloc ( ContextID )		711322	1					
ANR	711366	Callee	cmsIT8Alloc		711322	0					
ANR	711367	Identifier	cmsIT8Alloc		711322	0					
ANR	711368	ArgumentList	ContextID		711322	1					
ANR	711369	Argument	ContextID		711322	0					
ANR	711370	Identifier	ContextID		711322	0					
ANR	711371	ExpressionStatement	it8 = ( cmsIT8 * ) hIT8	2346:5:63724:63744	711322	7	True				
ANR	711372	AssignmentExpression	it8 = ( cmsIT8 * ) hIT8		711322	0		=			
ANR	711373	Identifier	it8		711322	0					
ANR	711374	CastExpression	( cmsIT8 * ) hIT8		711322	1					
ANR	711375	CastTarget	cmsIT8 *		711322	0					
ANR	711376	Identifier	hIT8		711322	1					
ANR	711377	IfStatement	if ( ! hIT8 )		711322	8					
ANR	711378	Condition	! hIT8	2347:9:63755:63759	711322	0	True				
ANR	711379	UnaryOperationExpression	! hIT8		711322	0					
ANR	711380	UnaryOperator	!		711322	0					
ANR	711381	Identifier	hIT8		711322	1					
ANR	711382	ReturnStatement	return NULL ;	2347:16:63762:63773	711322	1	True				
ANR	711383	Identifier	NULL		711322	0					
ANR	711384	ExpressionStatement	"it8 -> FileStack [ 0 ] -> Stream = fopen ( cFileName , ""rt"" )"	2350:5:63782:63833	711322	9	True				
ANR	711385	AssignmentExpression	"it8 -> FileStack [ 0 ] -> Stream = fopen ( cFileName , ""rt"" )"		711322	0		=			
ANR	711386	PtrMemberAccess	it8 -> FileStack [ 0 ] -> Stream		711322	0					
ANR	711387	ArrayIndexing	it8 -> FileStack [ 0 ]		711322	0					
ANR	711388	PtrMemberAccess	it8 -> FileStack		711322	0					
ANR	711389	Identifier	it8		711322	0					
ANR	711390	Identifier	FileStack		711322	1					
ANR	711391	PrimaryExpression	0		711322	1					
ANR	711392	Identifier	Stream		711322	1					
ANR	711393	CallExpression	"fopen ( cFileName , ""rt"" )"		711322	1					
ANR	711394	Callee	fopen		711322	0					
ANR	711395	Identifier	fopen		711322	0					
ANR	711396	ArgumentList	cFileName		711322	1					
ANR	711397	Argument	cFileName		711322	0					
ANR	711398	Identifier	cFileName		711322	0					
ANR	711399	Argument	"""rt"""		711322	1					
ANR	711400	PrimaryExpression	"""rt"""		711322	0					
ANR	711401	IfStatement	if ( ! it8 -> FileStack [ 0 ] -> Stream )		711322	10					
ANR	711402	Condition	! it8 -> FileStack [ 0 ] -> Stream	2352:9:63845:63871	711322	0	True				
ANR	711403	UnaryOperationExpression	! it8 -> FileStack [ 0 ] -> Stream		711322	0					
ANR	711404	UnaryOperator	!		711322	0					
ANR	711405	PtrMemberAccess	it8 -> FileStack [ 0 ] -> Stream		711322	1					
ANR	711406	ArrayIndexing	it8 -> FileStack [ 0 ]		711322	0					
ANR	711407	PtrMemberAccess	it8 -> FileStack		711322	0					
ANR	711408	Identifier	it8		711322	0					
ANR	711409	Identifier	FileStack		711322	1					
ANR	711410	PrimaryExpression	0		711322	1					
ANR	711411	Identifier	Stream		711322	1					
ANR	711412	CompoundStatement		19:38:353:353	711322	1					
ANR	711413	ExpressionStatement	cmsIT8Free ( hIT8 )	2353:9:63885:63901	711322	0	True				
ANR	711414	CallExpression	cmsIT8Free ( hIT8 )		711322	0					
ANR	711415	Callee	cmsIT8Free		711322	0					
ANR	711416	Identifier	cmsIT8Free		711322	0					
ANR	711417	ArgumentList	hIT8		711322	1					
ANR	711418	Argument	hIT8		711322	0					
ANR	711419	Identifier	hIT8		711322	0					
ANR	711420	ReturnStatement	return NULL ;	2354:9:63912:63923	711322	1	True				
ANR	711421	Identifier	NULL		711322	0					
ANR	711422	ExpressionStatement	"strncpy ( it8 -> FileStack [ 0 ] -> FileName , cFileName , cmsMAX_PATH - 1 )"	2358:4:63938:64000	711322	11	True				
ANR	711423	CallExpression	"strncpy ( it8 -> FileStack [ 0 ] -> FileName , cFileName , cmsMAX_PATH - 1 )"		711322	0					
ANR	711424	Callee	strncpy		711322	0					
ANR	711425	Identifier	strncpy		711322	0					
ANR	711426	ArgumentList	it8 -> FileStack [ 0 ] -> FileName		711322	1					
ANR	711427	Argument	it8 -> FileStack [ 0 ] -> FileName		711322	0					
ANR	711428	PtrMemberAccess	it8 -> FileStack [ 0 ] -> FileName		711322	0					
ANR	711429	ArrayIndexing	it8 -> FileStack [ 0 ]		711322	0					
ANR	711430	PtrMemberAccess	it8 -> FileStack		711322	0					
ANR	711431	Identifier	it8		711322	0					
ANR	711432	Identifier	FileStack		711322	1					
ANR	711433	PrimaryExpression	0		711322	1					
ANR	711434	Identifier	FileName		711322	1					
ANR	711435	Argument	cFileName		711322	1					
ANR	711436	Identifier	cFileName		711322	0					
ANR	711437	Argument	cmsMAX_PATH - 1		711322	2					
ANR	711438	AdditiveExpression	cmsMAX_PATH - 1		711322	0		-			
ANR	711439	Identifier	cmsMAX_PATH		711322	0					
ANR	711440	PrimaryExpression	1		711322	1					
ANR	711441	ExpressionStatement	it8 -> FileStack [ 0 ] -> FileName [ cmsMAX_PATH - 1 ] = 0	2359:4:64006:64052	711322	12	True				
ANR	711442	AssignmentExpression	it8 -> FileStack [ 0 ] -> FileName [ cmsMAX_PATH - 1 ] = 0		711322	0		=			
ANR	711443	ArrayIndexing	it8 -> FileStack [ 0 ] -> FileName [ cmsMAX_PATH - 1 ]		711322	0					
ANR	711444	PtrMemberAccess	it8 -> FileStack [ 0 ] -> FileName		711322	0					
ANR	711445	ArrayIndexing	it8 -> FileStack [ 0 ]		711322	0					
ANR	711446	PtrMemberAccess	it8 -> FileStack		711322	0					
ANR	711447	Identifier	it8		711322	0					
ANR	711448	Identifier	FileStack		711322	1					
ANR	711449	PrimaryExpression	0		711322	1					
ANR	711450	Identifier	FileName		711322	1					
ANR	711451	AdditiveExpression	cmsMAX_PATH - 1		711322	1		-			
ANR	711452	Identifier	cmsMAX_PATH		711322	0					
ANR	711453	PrimaryExpression	1		711322	1					
ANR	711454	PrimaryExpression	0		711322	1					
ANR	711455	IfStatement	"if ( ! ParseIT8 ( it8 , type - 1 ) )"		711322	13					
ANR	711456	Condition	"! ParseIT8 ( it8 , type - 1 )"	2361:8:64063:64084	711322	0	True				
ANR	711457	UnaryOperationExpression	"! ParseIT8 ( it8 , type - 1 )"		711322	0					
ANR	711458	UnaryOperator	!		711322	0					
ANR	711459	CallExpression	"ParseIT8 ( it8 , type - 1 )"		711322	1					
ANR	711460	Callee	ParseIT8		711322	0					
ANR	711461	Identifier	ParseIT8		711322	0					
ANR	711462	ArgumentList	it8		711322	1					
ANR	711463	Argument	it8		711322	0					
ANR	711464	Identifier	it8		711322	0					
ANR	711465	Argument	type - 1		711322	1					
ANR	711466	AdditiveExpression	type - 1		711322	0		-			
ANR	711467	Identifier	type		711322	0					
ANR	711468	PrimaryExpression	1		711322	1					
ANR	711469	CompoundStatement		28:32:566:566	711322	1					
ANR	711470	ExpressionStatement	fclose ( it8 -> FileStack [ 0 ] -> Stream )	2363:12:64102:64136	711322	0	True				
ANR	711471	CallExpression	fclose ( it8 -> FileStack [ 0 ] -> Stream )		711322	0					
ANR	711472	Callee	fclose		711322	0					
ANR	711473	Identifier	fclose		711322	0					
ANR	711474	ArgumentList	it8 -> FileStack [ 0 ] -> Stream		711322	1					
ANR	711475	Argument	it8 -> FileStack [ 0 ] -> Stream		711322	0					
ANR	711476	PtrMemberAccess	it8 -> FileStack [ 0 ] -> Stream		711322	0					
ANR	711477	ArrayIndexing	it8 -> FileStack [ 0 ]		711322	0					
ANR	711478	PtrMemberAccess	it8 -> FileStack		711322	0					
ANR	711479	Identifier	it8		711322	0					
ANR	711480	Identifier	FileStack		711322	1					
ANR	711481	PrimaryExpression	0		711322	1					
ANR	711482	Identifier	Stream		711322	1					
ANR	711483	ExpressionStatement	cmsIT8Free ( hIT8 )	2364:12:64150:64166	711322	1	True				
ANR	711484	CallExpression	cmsIT8Free ( hIT8 )		711322	0					
ANR	711485	Callee	cmsIT8Free		711322	0					
ANR	711486	Identifier	cmsIT8Free		711322	0					
ANR	711487	ArgumentList	hIT8		711322	1					
ANR	711488	Argument	hIT8		711322	0					
ANR	711489	Identifier	hIT8		711322	0					
ANR	711490	ReturnStatement	return NULL ;	2365:12:64180:64191	711322	2	True				
ANR	711491	Identifier	NULL		711322	0					
ANR	711492	ExpressionStatement	CookPointers ( it8 )	2368:4:64204:64221	711322	14	True				
ANR	711493	CallExpression	CookPointers ( it8 )		711322	0					
ANR	711494	Callee	CookPointers		711322	0					
ANR	711495	Identifier	CookPointers		711322	0					
ANR	711496	ArgumentList	it8		711322	1					
ANR	711497	Argument	it8		711322	0					
ANR	711498	Identifier	it8		711322	0					
ANR	711499	ExpressionStatement	it8 -> nTable = 0	2369:4:64227:64243	711322	15	True				
ANR	711500	AssignmentExpression	it8 -> nTable = 0		711322	0		=			
ANR	711501	PtrMemberAccess	it8 -> nTable		711322	0					
ANR	711502	Identifier	it8		711322	0					
ANR	711503	Identifier	nTable		711322	1					
ANR	711504	PrimaryExpression	0		711322	1					
ANR	711505	IfStatement	if ( fclose ( it8 -> FileStack [ 0 ] -> Stream ) != 0 )		711322	16					
ANR	711506	Condition	fclose ( it8 -> FileStack [ 0 ] -> Stream ) != 0	2371:8:64254:64291	711322	0	True				
ANR	711507	EqualityExpression	fclose ( it8 -> FileStack [ 0 ] -> Stream ) != 0		711322	0		!=			
ANR	711508	CallExpression	fclose ( it8 -> FileStack [ 0 ] -> Stream )		711322	0					
ANR	711509	Callee	fclose		711322	0					
ANR	711510	Identifier	fclose		711322	0					
ANR	711511	ArgumentList	it8 -> FileStack [ 0 ] -> Stream		711322	1					
ANR	711512	Argument	it8 -> FileStack [ 0 ] -> Stream		711322	0					
ANR	711513	PtrMemberAccess	it8 -> FileStack [ 0 ] -> Stream		711322	0					
ANR	711514	ArrayIndexing	it8 -> FileStack [ 0 ]		711322	0					
ANR	711515	PtrMemberAccess	it8 -> FileStack		711322	0					
ANR	711516	Identifier	it8		711322	0					
ANR	711517	Identifier	FileStack		711322	1					
ANR	711518	PrimaryExpression	0		711322	1					
ANR	711519	Identifier	Stream		711322	1					
ANR	711520	PrimaryExpression	0		711322	1					
ANR	711521	CompoundStatement		38:48:773:773	711322	1					
ANR	711522	ExpressionStatement	cmsIT8Free ( hIT8 )	2372:12:64308:64324	711322	0	True				
ANR	711523	CallExpression	cmsIT8Free ( hIT8 )		711322	0					
ANR	711524	Callee	cmsIT8Free		711322	0					
ANR	711525	Identifier	cmsIT8Free		711322	0					
ANR	711526	ArgumentList	hIT8		711322	1					
ANR	711527	Argument	hIT8		711322	0					
ANR	711528	Identifier	hIT8		711322	0					
ANR	711529	ReturnStatement	return NULL ;	2373:12:64338:64349	711322	1	True				
ANR	711530	Identifier	NULL		711322	0					
ANR	711531	ReturnStatement	return hIT8 ;	2376:4:64362:64373	711322	17	True				
ANR	711532	Identifier	hIT8		711322	0					
ANR	711533	ReturnType	cmsHANDLE CMSEXPORT		711322	1					
ANR	711534	Identifier	cmsIT8LoadFromFile		711322	2					
ANR	711535	ParameterList	"cmsContext ContextID , const char * cFileName"		711322	3					
ANR	711536	Parameter	cmsContext ContextID	2333:40:63475:63494	711322	0	True				
ANR	711537	ParameterType	cmsContext		711322	0					
ANR	711538	Identifier	ContextID		711322	1					
ANR	711539	Parameter	const char * cFileName	2333:62:63497:63517	711322	1	True				
ANR	711540	ParameterType	const char *		711322	0					
ANR	711541	Identifier	cFileName		711322	1					
ANR	711542	CFGEntryNode	ENTRY		711322		True				
ANR	711543	CFGExitNode	EXIT		711322		True				
ANR	711544	Symbol	* * it8		711322						
ANR	711545	Symbol	* * * * it8		711322						
ANR	711546	Symbol	* it8 -> FileStack		711322						
ANR	711547	Symbol	it8 -> FileStack [ 0 ] -> Stream		711322						
ANR	711548	Symbol	* * * it8 -> FileStack		711322						
ANR	711549	Symbol	type		711322						
ANR	711550	Symbol	it8 -> nTable		711322						
ANR	711551	Symbol	* * it8 -> FileStack		711322						
ANR	711552	Symbol	ContextID		711322						
ANR	711553	Symbol	cmsIT8Alloc		711322						
ANR	711554	Symbol	ParseIT8		711322						
ANR	711555	Symbol	cFileName		711322						
ANR	711556	Symbol	IsMyFile		711322						
ANR	711557	Symbol	it8 -> FileStack [ 0 ] -> FileName		711322						
ANR	711558	Symbol	fopen		711322						
ANR	711559	Symbol	* it8 -> FileStack [ 0 ] -> FileName		711322						
ANR	711560	Symbol	NULL		711322						
ANR	711561	Symbol	fclose		711322						
ANR	711562	Symbol	cmsMAX_PATH		711322						
ANR	711563	Symbol	* it8		711322						
ANR	711564	Symbol	* * * it8		711322						
ANR	711565	Symbol	it8		711322						
ANR	711566	Symbol	* cmsMAX_PATH		711322						
ANR	711567	Symbol	it8 -> FileStack		711322						
ANR	711568	Symbol	hIT8		711322						
ANR	711569	Function	cmsIT8EnumDataFormat	2380:0:64379:64644							
ANR	711570	FunctionDef	"cmsIT8EnumDataFormat (cmsHANDLE hIT8 , char * * * SampleNames)"		711569	0					
ANR	711571	CompoundStatement		2381:0:64451:64644	711569	0					
ANR	711572	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	2382:4:64457:64485	711569	0	True				
ANR	711573	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		711569	0					
ANR	711574	IdentifierDeclType	cmsIT8 *		711569	0					
ANR	711575	Identifier	it8		711569	1					
ANR	711576	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		711569	2		=			
ANR	711577	Identifier	it8		711569	0					
ANR	711578	CastExpression	( cmsIT8 * ) hIT8		711569	1					
ANR	711579	CastTarget	cmsIT8 *		711569	0					
ANR	711580	Identifier	hIT8		711569	1					
ANR	711581	IdentifierDeclStatement	TABLE * t ;	2383:4:64491:64499	711569	1	True				
ANR	711582	IdentifierDecl	* t		711569	0					
ANR	711583	IdentifierDeclType	TABLE *		711569	0					
ANR	711584	Identifier	t		711569	1					
ANR	711585	ExpressionStatement	_cmsAssert ( hIT8 != NULL )	2385:4:64506:64530	711569	2	True				
ANR	711586	CallExpression	_cmsAssert ( hIT8 != NULL )		711569	0					
ANR	711587	Callee	_cmsAssert		711569	0					
ANR	711588	Identifier	_cmsAssert		711569	0					
ANR	711589	ArgumentList	hIT8 != NULL		711569	1					
ANR	711590	Argument	hIT8 != NULL		711569	0					
ANR	711591	EqualityExpression	hIT8 != NULL		711569	0		!=			
ANR	711592	Identifier	hIT8		711569	0					
ANR	711593	Identifier	NULL		711569	1					
ANR	711594	ExpressionStatement	t = GetTable ( it8 )	2387:4:64537:64554	711569	3	True				
ANR	711595	AssignmentExpression	t = GetTable ( it8 )		711569	0		=			
ANR	711596	Identifier	t		711569	0					
ANR	711597	CallExpression	GetTable ( it8 )		711569	1					
ANR	711598	Callee	GetTable		711569	0					
ANR	711599	Identifier	GetTable		711569	0					
ANR	711600	ArgumentList	it8		711569	1					
ANR	711601	Argument	it8		711569	0					
ANR	711602	Identifier	it8		711569	0					
ANR	711603	IfStatement	if ( SampleNames )		711569	4					
ANR	711604	Condition	SampleNames	2389:8:64565:64575	711569	0	True				
ANR	711605	Identifier	SampleNames		711569	0					
ANR	711606	ExpressionStatement	* SampleNames = t -> DataFormat	2390:8:64586:64616	711569	1	True				
ANR	711607	AssignmentExpression	* SampleNames = t -> DataFormat		711569	0		=			
ANR	711608	UnaryOperationExpression	* SampleNames		711569	0					
ANR	711609	UnaryOperator	*		711569	0					
ANR	711610	Identifier	SampleNames		711569	1					
ANR	711611	PtrMemberAccess	t -> DataFormat		711569	1					
ANR	711612	Identifier	t		711569	0					
ANR	711613	Identifier	DataFormat		711569	1					
ANR	711614	ReturnStatement	return t -> nSamples ;	2391:4:64622:64642	711569	5	True				
ANR	711615	PtrMemberAccess	t -> nSamples		711569	0					
ANR	711616	Identifier	t		711569	0					
ANR	711617	Identifier	nSamples		711569	1					
ANR	711618	ReturnType	int CMSEXPORT		711569	1					
ANR	711619	Identifier	cmsIT8EnumDataFormat		711569	2					
ANR	711620	ParameterList	"cmsHANDLE hIT8 , char * * * SampleNames"		711569	3					
ANR	711621	Parameter	cmsHANDLE hIT8	2380:35:64414:64427	711569	0	True				
ANR	711622	ParameterType	cmsHANDLE		711569	0					
ANR	711623	Identifier	hIT8		711569	1					
ANR	711624	Parameter	char * * * SampleNames	2380:51:64430:64448	711569	1	True				
ANR	711625	ParameterType	char * * *		711569	0					
ANR	711626	Identifier	SampleNames		711569	1					
ANR	711627	CFGEntryNode	ENTRY		711569		True				
ANR	711628	CFGExitNode	EXIT		711569		True				
ANR	711629	Symbol	GetTable		711569						
ANR	711630	Symbol	t -> nSamples		711569						
ANR	711631	Symbol	NULL		711569						
ANR	711632	Symbol	t		711569						
ANR	711633	Symbol	hIT8		711569						
ANR	711634	Symbol	t -> DataFormat		711569						
ANR	711635	Symbol	SampleNames		711569						
ANR	711636	Symbol	it8		711569						
ANR	711637	Symbol	* t		711569						
ANR	711638	Symbol	* SampleNames		711569						
ANR	711639	Function	cmsIT8EnumProperties	2395:0:64648:65263							
ANR	711640	FunctionDef	"cmsIT8EnumProperties (cmsHANDLE hIT8 , char * * * PropertyNames)"		711639	0					
ANR	711641	CompoundStatement		2396:0:64734:65263	711639	0					
ANR	711642	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	2397:4:64740:64768	711639	0	True				
ANR	711643	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		711639	0					
ANR	711644	IdentifierDeclType	cmsIT8 *		711639	0					
ANR	711645	Identifier	it8		711639	1					
ANR	711646	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		711639	2		=			
ANR	711647	Identifier	it8		711639	0					
ANR	711648	CastExpression	( cmsIT8 * ) hIT8		711639	1					
ANR	711649	CastTarget	cmsIT8 *		711639	0					
ANR	711650	Identifier	hIT8		711639	1					
ANR	711651	IdentifierDeclStatement	KEYVALUE * p ;	2398:4:64774:64785	711639	1	True				
ANR	711652	IdentifierDecl	* p		711639	0					
ANR	711653	IdentifierDeclType	KEYVALUE *		711639	0					
ANR	711654	Identifier	p		711639	1					
ANR	711655	IdentifierDeclStatement	cmsUInt32Number n ;	2399:4:64791:64808	711639	2	True				
ANR	711656	IdentifierDecl	n		711639	0					
ANR	711657	IdentifierDeclType	cmsUInt32Number		711639	0					
ANR	711658	Identifier	n		711639	1					
ANR	711659	IdentifierDeclStatement	char * * Props ;	2400:4:64814:64826	711639	3	True				
ANR	711660	IdentifierDecl	* * Props		711639	0					
ANR	711661	IdentifierDeclType	char * *		711639	0					
ANR	711662	Identifier	Props		711639	1					
ANR	711663	IdentifierDeclStatement	TABLE * t ;	2401:4:64832:64840	711639	4	True				
ANR	711664	IdentifierDecl	* t		711639	0					
ANR	711665	IdentifierDeclType	TABLE *		711639	0					
ANR	711666	Identifier	t		711639	1					
ANR	711667	ExpressionStatement	_cmsAssert ( hIT8 != NULL )	2403:4:64847:64871	711639	5	True				
ANR	711668	CallExpression	_cmsAssert ( hIT8 != NULL )		711639	0					
ANR	711669	Callee	_cmsAssert		711639	0					
ANR	711670	Identifier	_cmsAssert		711639	0					
ANR	711671	ArgumentList	hIT8 != NULL		711639	1					
ANR	711672	Argument	hIT8 != NULL		711639	0					
ANR	711673	EqualityExpression	hIT8 != NULL		711639	0		!=			
ANR	711674	Identifier	hIT8		711639	0					
ANR	711675	Identifier	NULL		711639	1					
ANR	711676	ExpressionStatement	t = GetTable ( it8 )	2405:4:64878:64895	711639	6	True				
ANR	711677	AssignmentExpression	t = GetTable ( it8 )		711639	0		=			
ANR	711678	Identifier	t		711639	0					
ANR	711679	CallExpression	GetTable ( it8 )		711639	1					
ANR	711680	Callee	GetTable		711639	0					
ANR	711681	Identifier	GetTable		711639	0					
ANR	711682	ArgumentList	it8		711639	1					
ANR	711683	Argument	it8		711639	0					
ANR	711684	Identifier	it8		711639	0					
ANR	711685	ExpressionStatement	n = 0	2409:4:64936:64941	711639	7	True				
ANR	711686	AssignmentExpression	n = 0		711639	0		=			
ANR	711687	Identifier	n		711639	0					
ANR	711688	PrimaryExpression	0		711639	1					
ANR	711689	ForStatement	for ( p = t -> HeaderList ; p != NULL ; p = p -> Next )		711639	8					
ANR	711690	ForInit	p = t -> HeaderList ;	2410:9:64952:64971	711639	0	True				
ANR	711691	AssignmentExpression	p = t -> HeaderList		711639	0		=			
ANR	711692	Identifier	p		711639	0					
ANR	711693	PtrMemberAccess	t -> HeaderList		711639	1					
ANR	711694	Identifier	t		711639	0					
ANR	711695	Identifier	HeaderList		711639	1					
ANR	711696	Condition	p != NULL	2410:31:64974:64982	711639	1	True				
ANR	711697	EqualityExpression	p != NULL		711639	0		!=			
ANR	711698	Identifier	p		711639	0					
ANR	711699	Identifier	NULL		711639	1					
ANR	711700	AssignmentExpression	p = p -> Next	2410:42:64985:64995	711639	2	True	=			
ANR	711701	Identifier	p		711639	0					
ANR	711702	PtrMemberAccess	p -> Next		711639	1					
ANR	711703	Identifier	p		711639	0					
ANR	711704	Identifier	Next		711639	1					
ANR	711705	CompoundStatement		15:55:263:263	711639	3					
ANR	711706	ExpressionStatement	n ++	2411:8:65008:65011	711639	0	True				
ANR	711707	PostIncDecOperationExpression	n ++		711639	0					
ANR	711708	Identifier	n		711639	0					
ANR	711709	IncDec	++		711639	1					
ANR	711710	ExpressionStatement	"Props = ( char * * ) AllocChunk ( it8 , sizeof ( char * ) * n )"	2415:4:65025:65078	711639	9	True				
ANR	711711	AssignmentExpression	"Props = ( char * * ) AllocChunk ( it8 , sizeof ( char * ) * n )"		711639	0		=			
ANR	711712	Identifier	Props		711639	0					
ANR	711713	CastExpression	"( char * * ) AllocChunk ( it8 , sizeof ( char * ) * n )"		711639	1					
ANR	711714	CastTarget	char * *		711639	0					
ANR	711715	CallExpression	"AllocChunk ( it8 , sizeof ( char * ) * n )"		711639	1					
ANR	711716	Callee	AllocChunk		711639	0					
ANR	711717	Identifier	AllocChunk		711639	0					
ANR	711718	ArgumentList	it8		711639	1					
ANR	711719	Argument	it8		711639	0					
ANR	711720	Identifier	it8		711639	0					
ANR	711721	Argument	sizeof ( char * ) * n		711639	1					
ANR	711722	MultiplicativeExpression	sizeof ( char * ) * n		711639	0		*			
ANR	711723	SizeofExpression	sizeof ( char * )		711639	0					
ANR	711724	Sizeof	sizeof		711639	0					
ANR	711725	SizeofOperand	char *		711639	1					
ANR	711726	Identifier	n		711639	1					
ANR	711727	ExpressionStatement	n = 0	2418:4:65115:65120	711639	10	True				
ANR	711728	AssignmentExpression	n = 0		711639	0		=			
ANR	711729	Identifier	n		711639	0					
ANR	711730	PrimaryExpression	0		711639	1					
ANR	711731	ForStatement	for ( p = t -> HeaderList ; p != NULL ; p = p -> Next )		711639	11					
ANR	711732	ForInit	p = t -> HeaderList ;	2419:9:65131:65150	711639	0	True				
ANR	711733	AssignmentExpression	p = t -> HeaderList		711639	0		=			
ANR	711734	Identifier	p		711639	0					
ANR	711735	PtrMemberAccess	t -> HeaderList		711639	1					
ANR	711736	Identifier	t		711639	0					
ANR	711737	Identifier	HeaderList		711639	1					
ANR	711738	Condition	p != NULL	2419:31:65153:65161	711639	1	True				
ANR	711739	EqualityExpression	p != NULL		711639	0		!=			
ANR	711740	Identifier	p		711639	0					
ANR	711741	Identifier	NULL		711639	1					
ANR	711742	AssignmentExpression	p = p -> Next	2419:42:65164:65174	711639	2	True	=			
ANR	711743	Identifier	p		711639	0					
ANR	711744	PtrMemberAccess	p -> Next		711639	1					
ANR	711745	Identifier	p		711639	0					
ANR	711746	Identifier	Next		711639	1					
ANR	711747	CompoundStatement		24:55:442:442	711639	3					
ANR	711748	ExpressionStatement	Props [ n ++ ] = p -> Keyword	2420:8:65187:65212	711639	0	True				
ANR	711749	AssignmentExpression	Props [ n ++ ] = p -> Keyword		711639	0		=			
ANR	711750	ArrayIndexing	Props [ n ++ ]		711639	0					
ANR	711751	Identifier	Props		711639	0					
ANR	711752	PostIncDecOperationExpression	n ++		711639	1					
ANR	711753	Identifier	n		711639	0					
ANR	711754	IncDec	++		711639	1					
ANR	711755	PtrMemberAccess	p -> Keyword		711639	1					
ANR	711756	Identifier	p		711639	0					
ANR	711757	Identifier	Keyword		711639	1					
ANR	711758	ExpressionStatement	* PropertyNames = Props	2423:4:65225:65247	711639	12	True				
ANR	711759	AssignmentExpression	* PropertyNames = Props		711639	0		=			
ANR	711760	UnaryOperationExpression	* PropertyNames		711639	0					
ANR	711761	UnaryOperator	*		711639	0					
ANR	711762	Identifier	PropertyNames		711639	1					
ANR	711763	Identifier	Props		711639	1					
ANR	711764	ReturnStatement	return n ;	2424:4:65253:65261	711639	13	True				
ANR	711765	Identifier	n		711639	0					
ANR	711766	ReturnType	cmsUInt32Number CMSEXPORT		711639	1					
ANR	711767	Identifier	cmsIT8EnumProperties		711639	2					
ANR	711768	ParameterList	"cmsHANDLE hIT8 , char * * * PropertyNames"		711639	3					
ANR	711769	Parameter	cmsHANDLE hIT8	2395:47:64695:64708	711639	0	True				
ANR	711770	ParameterType	cmsHANDLE		711639	0					
ANR	711771	Identifier	hIT8		711639	1					
ANR	711772	Parameter	char * * * PropertyNames	2395:63:64711:64731	711639	1	True				
ANR	711773	ParameterType	char * * *		711639	0					
ANR	711774	Identifier	PropertyNames		711639	1					
ANR	711775	CFGEntryNode	ENTRY		711639		True				
ANR	711776	CFGExitNode	EXIT		711639		True				
ANR	711777	Symbol	* PropertyNames		711639						
ANR	711778	Symbol	NULL		711639						
ANR	711779	Symbol	* Props		711639						
ANR	711780	Symbol	it8		711639						
ANR	711781	Symbol	Props		711639						
ANR	711782	Symbol	n		711639						
ANR	711783	Symbol	p		711639						
ANR	711784	Symbol	GetTable		711639						
ANR	711785	Symbol	p -> Next		711639						
ANR	711786	Symbol	AllocChunk		711639						
ANR	711787	Symbol	t		711639						
ANR	711788	Symbol	hIT8		711639						
ANR	711789	Symbol	PropertyNames		711639						
ANR	711790	Symbol	p -> Keyword		711639						
ANR	711791	Symbol	t -> HeaderList		711639						
ANR	711792	Symbol	* p		711639						
ANR	711793	Symbol	* t		711639						
ANR	711794	Function	cmsIT8EnumPropertyMulti	2427:0:65266:66121							
ANR	711795	FunctionDef	"cmsIT8EnumPropertyMulti (cmsHANDLE hIT8 , const char * cProp , const char * * * SubpropertyNames)"		711794	0					
ANR	711796	CompoundStatement		2428:0:65383:66121	711794	0					
ANR	711797	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	2429:4:65389:65417	711794	0	True				
ANR	711798	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		711794	0					
ANR	711799	IdentifierDeclType	cmsIT8 *		711794	0					
ANR	711800	Identifier	it8		711794	1					
ANR	711801	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		711794	2		=			
ANR	711802	Identifier	it8		711794	0					
ANR	711803	CastExpression	( cmsIT8 * ) hIT8		711794	1					
ANR	711804	CastTarget	cmsIT8 *		711794	0					
ANR	711805	Identifier	hIT8		711794	1					
ANR	711806	IdentifierDeclStatement	"KEYVALUE * p , * tmp ;"	2430:4:65423:65440	711794	1	True				
ANR	711807	IdentifierDecl	* p		711794	0					
ANR	711808	IdentifierDeclType	KEYVALUE *		711794	0					
ANR	711809	Identifier	p		711794	1					
ANR	711810	IdentifierDecl	* tmp		711794	1					
ANR	711811	IdentifierDeclType	KEYVALUE *		711794	0					
ANR	711812	Identifier	tmp		711794	1					
ANR	711813	IdentifierDeclStatement	cmsUInt32Number n ;	2431:4:65446:65463	711794	2	True				
ANR	711814	IdentifierDecl	n		711794	0					
ANR	711815	IdentifierDeclType	cmsUInt32Number		711794	0					
ANR	711816	Identifier	n		711794	1					
ANR	711817	IdentifierDeclStatement	const char * * Props ;	2432:4:65469:65487	711794	3	True				
ANR	711818	IdentifierDecl	* * Props		711794	0					
ANR	711819	IdentifierDeclType	const char * *		711794	0					
ANR	711820	Identifier	Props		711794	1					
ANR	711821	IdentifierDeclStatement	TABLE * t ;	2433:4:65493:65501	711794	4	True				
ANR	711822	IdentifierDecl	* t		711794	0					
ANR	711823	IdentifierDeclType	TABLE *		711794	0					
ANR	711824	Identifier	t		711794	1					
ANR	711825	ExpressionStatement	_cmsAssert ( hIT8 != NULL )	2435:4:65508:65532	711794	5	True				
ANR	711826	CallExpression	_cmsAssert ( hIT8 != NULL )		711794	0					
ANR	711827	Callee	_cmsAssert		711794	0					
ANR	711828	Identifier	_cmsAssert		711794	0					
ANR	711829	ArgumentList	hIT8 != NULL		711794	1					
ANR	711830	Argument	hIT8 != NULL		711794	0					
ANR	711831	EqualityExpression	hIT8 != NULL		711794	0		!=			
ANR	711832	Identifier	hIT8		711794	0					
ANR	711833	Identifier	NULL		711794	1					
ANR	711834	ExpressionStatement	t = GetTable ( it8 )	2438:4:65540:65557	711794	6	True				
ANR	711835	AssignmentExpression	t = GetTable ( it8 )		711794	0		=			
ANR	711836	Identifier	t		711794	0					
ANR	711837	CallExpression	GetTable ( it8 )		711794	1					
ANR	711838	Callee	GetTable		711794	0					
ANR	711839	Identifier	GetTable		711794	0					
ANR	711840	ArgumentList	it8		711794	1					
ANR	711841	Argument	it8		711794	0					
ANR	711842	Identifier	it8		711794	0					
ANR	711843	IfStatement	"if ( ! IsAvailableOnList ( t -> HeaderList , cProp , NULL , & p ) )"		711794	7					
ANR	711844	Condition	"! IsAvailableOnList ( t -> HeaderList , cProp , NULL , & p )"	2440:7:65567:65616	711794	0	True				
ANR	711845	UnaryOperationExpression	"! IsAvailableOnList ( t -> HeaderList , cProp , NULL , & p )"		711794	0					
ANR	711846	UnaryOperator	!		711794	0					
ANR	711847	CallExpression	"IsAvailableOnList ( t -> HeaderList , cProp , NULL , & p )"		711794	1					
ANR	711848	Callee	IsAvailableOnList		711794	0					
ANR	711849	Identifier	IsAvailableOnList		711794	0					
ANR	711850	ArgumentList	t -> HeaderList		711794	1					
ANR	711851	Argument	t -> HeaderList		711794	0					
ANR	711852	PtrMemberAccess	t -> HeaderList		711794	0					
ANR	711853	Identifier	t		711794	0					
ANR	711854	Identifier	HeaderList		711794	1					
ANR	711855	Argument	cProp		711794	1					
ANR	711856	Identifier	cProp		711794	0					
ANR	711857	Argument	NULL		711794	2					
ANR	711858	Identifier	NULL		711794	0					
ANR	711859	Argument	& p		711794	3					
ANR	711860	UnaryOperationExpression	& p		711794	0					
ANR	711861	UnaryOperator	&		711794	0					
ANR	711862	Identifier	p		711794	1					
ANR	711863	CompoundStatement		13:59:235:235	711794	1					
ANR	711864	ExpressionStatement	* SubpropertyNames = 0	2441:8:65629:65650	711794	0	True				
ANR	711865	AssignmentExpression	* SubpropertyNames = 0		711794	0		=			
ANR	711866	UnaryOperationExpression	* SubpropertyNames		711794	0					
ANR	711867	UnaryOperator	*		711794	0					
ANR	711868	Identifier	SubpropertyNames		711794	1					
ANR	711869	PrimaryExpression	0		711794	1					
ANR	711870	ReturnStatement	return 0 ;	2442:8:65660:65668	711794	1	True				
ANR	711871	PrimaryExpression	0		711794	0					
ANR	711872	ExpressionStatement	n = 0	2447:4:65715:65720	711794	8	True				
ANR	711873	AssignmentExpression	n = 0		711794	0		=			
ANR	711874	Identifier	n		711794	0					
ANR	711875	PrimaryExpression	0		711794	1					
ANR	711876	ForStatement	for ( tmp = p ; tmp != NULL ; tmp = tmp -> NextSubkey )		711794	9					
ANR	711877	ForInit	tmp = p ;	2448:9:65731:65738	711794	0	True				
ANR	711878	AssignmentExpression	tmp = p		711794	0		=			
ANR	711879	Identifier	tmp		711794	0					
ANR	711880	Identifier	p		711794	1					
ANR	711881	Condition	tmp != NULL	2448:19:65741:65751	711794	1	True				
ANR	711882	EqualityExpression	tmp != NULL		711794	0		!=			
ANR	711883	Identifier	tmp		711794	0					
ANR	711884	Identifier	NULL		711794	1					
ANR	711885	AssignmentExpression	tmp = tmp -> NextSubkey	2448:32:65754:65774	711794	2	True	=			
ANR	711886	Identifier	tmp		711794	0					
ANR	711887	PtrMemberAccess	tmp -> NextSubkey		711794	1					
ANR	711888	Identifier	tmp		711794	0					
ANR	711889	Identifier	NextSubkey		711794	1					
ANR	711890	CompoundStatement		21:55:393:393	711794	3					
ANR	711891	IfStatement	if ( tmp -> Subkey != NULL )		711794	0					
ANR	711892	Condition	tmp -> Subkey != NULL	2449:11:65790:65808	711794	0	True				
ANR	711893	EqualityExpression	tmp -> Subkey != NULL		711794	0		!=			
ANR	711894	PtrMemberAccess	tmp -> Subkey		711794	0					
ANR	711895	Identifier	tmp		711794	0					
ANR	711896	Identifier	Subkey		711794	1					
ANR	711897	Identifier	NULL		711794	1					
ANR	711898	ExpressionStatement	n ++	2450:12:65823:65826	711794	1	True				
ANR	711899	PostIncDecOperationExpression	n ++		711794	0					
ANR	711900	Identifier	n		711794	0					
ANR	711901	IncDec	++		711794	1					
ANR	711902	ExpressionStatement	"Props = ( const char * * ) AllocChunk ( it8 , sizeof ( char * ) * n )"	2454:4:65840:65899	711794	10	True				
ANR	711903	AssignmentExpression	"Props = ( const char * * ) AllocChunk ( it8 , sizeof ( char * ) * n )"		711794	0		=			
ANR	711904	Identifier	Props		711794	0					
ANR	711905	CastExpression	"( const char * * ) AllocChunk ( it8 , sizeof ( char * ) * n )"		711794	1					
ANR	711906	CastTarget	const char * *		711794	0					
ANR	711907	CallExpression	"AllocChunk ( it8 , sizeof ( char * ) * n )"		711794	1					
ANR	711908	Callee	AllocChunk		711794	0					
ANR	711909	Identifier	AllocChunk		711794	0					
ANR	711910	ArgumentList	it8		711794	1					
ANR	711911	Argument	it8		711794	0					
ANR	711912	Identifier	it8		711794	0					
ANR	711913	Argument	sizeof ( char * ) * n		711794	1					
ANR	711914	MultiplicativeExpression	sizeof ( char * ) * n		711794	0		*			
ANR	711915	SizeofExpression	sizeof ( char * )		711794	0					
ANR	711916	Sizeof	sizeof		711794	0					
ANR	711917	SizeofOperand	char *		711794	1					
ANR	711918	Identifier	n		711794	1					
ANR	711919	ExpressionStatement	n = 0	2457:4:65936:65941	711794	11	True				
ANR	711920	AssignmentExpression	n = 0		711794	0		=			
ANR	711921	Identifier	n		711794	0					
ANR	711922	PrimaryExpression	0		711794	1					
ANR	711923	ForStatement	for ( tmp = p ; tmp != NULL ; tmp = tmp -> NextSubkey )		711794	12					
ANR	711924	ForInit	tmp = p ;	2458:9:65952:65959	711794	0	True				
ANR	711925	AssignmentExpression	tmp = p		711794	0		=			
ANR	711926	Identifier	tmp		711794	0					
ANR	711927	Identifier	p		711794	1					
ANR	711928	Condition	tmp != NULL	2458:19:65962:65972	711794	1	True				
ANR	711929	EqualityExpression	tmp != NULL		711794	0		!=			
ANR	711930	Identifier	tmp		711794	0					
ANR	711931	Identifier	NULL		711794	1					
ANR	711932	AssignmentExpression	tmp = tmp -> NextSubkey	2458:32:65975:65995	711794	2	True	=			
ANR	711933	Identifier	tmp		711794	0					
ANR	711934	PtrMemberAccess	tmp -> NextSubkey		711794	1					
ANR	711935	Identifier	tmp		711794	0					
ANR	711936	Identifier	NextSubkey		711794	1					
ANR	711937	CompoundStatement		31:55:614:614	711794	3					
ANR	711938	IfStatement	if ( tmp -> Subkey != NULL )		711794	0					
ANR	711939	Condition	tmp -> Subkey != NULL	2459:11:66011:66029	711794	0	True				
ANR	711940	EqualityExpression	tmp -> Subkey != NULL		711794	0		!=			
ANR	711941	PtrMemberAccess	tmp -> Subkey		711794	0					
ANR	711942	Identifier	tmp		711794	0					
ANR	711943	Identifier	Subkey		711794	1					
ANR	711944	Identifier	NULL		711794	1					
ANR	711945	ExpressionStatement	Props [ n ++ ] = p -> Subkey	2460:12:66044:66067	711794	1	True				
ANR	711946	AssignmentExpression	Props [ n ++ ] = p -> Subkey		711794	0		=			
ANR	711947	ArrayIndexing	Props [ n ++ ]		711794	0					
ANR	711948	Identifier	Props		711794	0					
ANR	711949	PostIncDecOperationExpression	n ++		711794	1					
ANR	711950	Identifier	n		711794	0					
ANR	711951	IncDec	++		711794	1					
ANR	711952	PtrMemberAccess	p -> Subkey		711794	1					
ANR	711953	Identifier	p		711794	0					
ANR	711954	Identifier	Subkey		711794	1					
ANR	711955	ExpressionStatement	* SubpropertyNames = Props	2463:4:66080:66105	711794	13	True				
ANR	711956	AssignmentExpression	* SubpropertyNames = Props		711794	0		=			
ANR	711957	UnaryOperationExpression	* SubpropertyNames		711794	0					
ANR	711958	UnaryOperator	*		711794	0					
ANR	711959	Identifier	SubpropertyNames		711794	1					
ANR	711960	Identifier	Props		711794	1					
ANR	711961	ReturnStatement	return n ;	2464:4:66111:66119	711794	14	True				
ANR	711962	Identifier	n		711794	0					
ANR	711963	ReturnType	cmsUInt32Number CMSEXPORT		711794	1					
ANR	711964	Identifier	cmsIT8EnumPropertyMulti		711794	2					
ANR	711965	ParameterList	"cmsHANDLE hIT8 , const char * cProp , const char * * * SubpropertyNames"		711794	3					
ANR	711966	Parameter	cmsHANDLE hIT8	2427:50:65316:65329	711794	0	True				
ANR	711967	ParameterType	cmsHANDLE		711794	0					
ANR	711968	Identifier	hIT8		711794	1					
ANR	711969	Parameter	const char * cProp	2427:66:65332:65348	711794	1	True				
ANR	711970	ParameterType	const char *		711794	0					
ANR	711971	Identifier	cProp		711794	1					
ANR	711972	Parameter	const char * * * SubpropertyNames	2427:85:65351:65380	711794	2	True				
ANR	711973	ParameterType	const char * * *		711794	0					
ANR	711974	Identifier	SubpropertyNames		711794	1					
ANR	711975	CFGEntryNode	ENTRY		711794		True				
ANR	711976	CFGExitNode	EXIT		711794		True				
ANR	711977	Symbol	* SubpropertyNames		711794						
ANR	711978	Symbol	* tmp		711794						
ANR	711979	Symbol	NULL		711794						
ANR	711980	Symbol	* Props		711794						
ANR	711981	Symbol	tmp -> NextSubkey		711794						
ANR	711982	Symbol	p -> Subkey		711794						
ANR	711983	Symbol	SubpropertyNames		711794						
ANR	711984	Symbol	it8		711794						
ANR	711985	Symbol	Props		711794						
ANR	711986	Symbol	n		711794						
ANR	711987	Symbol	p		711794						
ANR	711988	Symbol	GetTable		711794						
ANR	711989	Symbol	AllocChunk		711794						
ANR	711990	Symbol	tmp -> Subkey		711794						
ANR	711991	Symbol	t		711794						
ANR	711992	Symbol	hIT8		711794						
ANR	711993	Symbol	tmp		711794						
ANR	711994	Symbol	& p		711794						
ANR	711995	Symbol	t -> HeaderList		711794						
ANR	711996	Symbol	* p		711794						
ANR	711997	Symbol	IsAvailableOnList		711794						
ANR	711998	Symbol	* t		711794						
ANR	711999	Symbol	cProp		711794						
ANR	712000	Function	LocatePatch	2467:0:66124:66561							
ANR	712001	FunctionDef	"LocatePatch (cmsIT8 * it8 , const char * cPatch)"		712000	0					
ANR	712002	CompoundStatement		2469:0:66180:66561	712000	0					
ANR	712003	IdentifierDeclStatement	int i ;	2470:4:66186:66191	712000	0	True				
ANR	712004	IdentifierDecl	i		712000	0					
ANR	712005	IdentifierDeclType	int		712000	0					
ANR	712006	Identifier	i		712000	1					
ANR	712007	IdentifierDeclStatement	const char * data ;	2471:4:66197:66213	712000	1	True				
ANR	712008	IdentifierDecl	* data		712000	0					
ANR	712009	IdentifierDeclType	const char *		712000	0					
ANR	712010	Identifier	data		712000	1					
ANR	712011	IdentifierDeclStatement	TABLE * t = GetTable ( it8 ) ;	2472:4:66219:66243	712000	2	True				
ANR	712012	IdentifierDecl	* t = GetTable ( it8 )		712000	0					
ANR	712013	IdentifierDeclType	TABLE *		712000	0					
ANR	712014	Identifier	t		712000	1					
ANR	712015	AssignmentExpression	* t = GetTable ( it8 )		712000	2		=			
ANR	712016	Identifier	t		712000	0					
ANR	712017	CallExpression	GetTable ( it8 )		712000	1					
ANR	712018	Callee	GetTable		712000	0					
ANR	712019	Identifier	GetTable		712000	0					
ANR	712020	ArgumentList	it8		712000	1					
ANR	712021	Argument	it8		712000	0					
ANR	712022	Identifier	it8		712000	0					
ANR	712023	ForStatement	for ( i = 0 ; i < t -> nPatches ; i ++ )		712000	3					
ANR	712024	ForInit	i = 0 ;	2474:9:66255:66258	712000	0	True				
ANR	712025	AssignmentExpression	i = 0		712000	0		=			
ANR	712026	Identifier	i		712000	0					
ANR	712027	PrimaryExpression	0		712000	1					
ANR	712028	Condition	i < t -> nPatches	2474:14:66260:66275	712000	1	True				
ANR	712029	RelationalExpression	i < t -> nPatches		712000	0		<			
ANR	712030	Identifier	i		712000	0					
ANR	712031	PtrMemberAccess	t -> nPatches		712000	1					
ANR	712032	Identifier	t		712000	0					
ANR	712033	Identifier	nPatches		712000	1					
ANR	712034	PostIncDecOperationExpression	i ++	2474:32:66278:66280	712000	2	True				
ANR	712035	Identifier	i		712000	0					
ANR	712036	IncDec	++		712000	1					
ANR	712037	CompoundStatement		6:37:102:102	712000	3					
ANR	712038	ExpressionStatement	"data = GetData ( it8 , i , t -> SampleID )"	2476:8:66294:66329	712000	0	True				
ANR	712039	AssignmentExpression	"data = GetData ( it8 , i , t -> SampleID )"		712000	0		=			
ANR	712040	Identifier	data		712000	0					
ANR	712041	CallExpression	"GetData ( it8 , i , t -> SampleID )"		712000	1					
ANR	712042	Callee	GetData		712000	0					
ANR	712043	Identifier	GetData		712000	0					
ANR	712044	ArgumentList	it8		712000	1					
ANR	712045	Argument	it8		712000	0					
ANR	712046	Identifier	it8		712000	0					
ANR	712047	Argument	i		712000	1					
ANR	712048	Identifier	i		712000	0					
ANR	712049	Argument	t -> SampleID		712000	2					
ANR	712050	PtrMemberAccess	t -> SampleID		712000	0					
ANR	712051	Identifier	t		712000	0					
ANR	712052	Identifier	SampleID		712000	1					
ANR	712053	IfStatement	if ( data != NULL )		712000	1					
ANR	712054	Condition	data != NULL	2478:12:66344:66355	712000	0	True				
ANR	712055	EqualityExpression	data != NULL		712000	0		!=			
ANR	712056	Identifier	data		712000	0					
ANR	712057	Identifier	NULL		712000	1					
ANR	712058	CompoundStatement		10:26:177:177	712000	1					
ANR	712059	IfStatement	"if ( cmsstrcasecmp ( data , cPatch ) == 0 )"		712000	0					
ANR	712060	Condition	"cmsstrcasecmp ( data , cPatch ) == 0"	2480:20:66381:66412	712000	0	True				
ANR	712061	EqualityExpression	"cmsstrcasecmp ( data , cPatch ) == 0"		712000	0		==			
ANR	712062	CallExpression	"cmsstrcasecmp ( data , cPatch )"		712000	0					
ANR	712063	Callee	cmsstrcasecmp		712000	0					
ANR	712064	Identifier	cmsstrcasecmp		712000	0					
ANR	712065	ArgumentList	data		712000	1					
ANR	712066	Argument	data		712000	0					
ANR	712067	Identifier	data		712000	0					
ANR	712068	Argument	cPatch		712000	1					
ANR	712069	Identifier	cPatch		712000	0					
ANR	712070	PrimaryExpression	0		712000	1					
ANR	712071	ReturnStatement	return i ;	2481:24:66439:66447	712000	1	True				
ANR	712072	Identifier	i		712000	0					
ANR	712073	ReturnStatement	return - 1 ;	2486:8:66550:66559	712000	4	True				
ANR	712074	UnaryOperationExpression	- 1		712000	0					
ANR	712075	UnaryOperator	-		712000	0					
ANR	712076	PrimaryExpression	1		712000	1					
ANR	712077	ReturnType	static int		712000	1					
ANR	712078	Identifier	LocatePatch		712000	2					
ANR	712079	ParameterList	"cmsIT8 * it8 , const char * cPatch"		712000	3					
ANR	712080	Parameter	cmsIT8 * it8	2468:16:66147:66157	712000	0	True				
ANR	712081	ParameterType	cmsIT8 *		712000	0					
ANR	712082	Identifier	it8		712000	1					
ANR	712083	Parameter	const char * cPatch	2468:29:66160:66177	712000	1	True				
ANR	712084	ParameterType	const char *		712000	0					
ANR	712085	Identifier	cPatch		712000	1					
ANR	712086	CFGEntryNode	ENTRY		712000		True				
ANR	712087	CFGExitNode	EXIT		712000		True				
ANR	712088	Symbol	GetTable		712000						
ANR	712089	Symbol	cPatch		712000						
ANR	712090	Symbol	t -> SampleID		712000						
ANR	712091	Symbol	t -> nPatches		712000						
ANR	712092	Symbol	NULL		712000						
ANR	712093	Symbol	data		712000						
ANR	712094	Symbol	t		712000						
ANR	712095	Symbol	GetData		712000						
ANR	712096	Symbol	i		712000						
ANR	712097	Symbol	cmsstrcasecmp		712000						
ANR	712098	Symbol	it8		712000						
ANR	712099	Symbol	* t		712000						
ANR	712100	Function	LocateEmptyPatch	2490:0:66565:66829							
ANR	712101	FunctionDef	LocateEmptyPatch (cmsIT8 * it8)		712100	0					
ANR	712102	CompoundStatement		2492:0:66606:66829	712100	0					
ANR	712103	IdentifierDeclStatement	int i ;	2493:4:66612:66617	712100	0	True				
ANR	712104	IdentifierDecl	i		712100	0					
ANR	712105	IdentifierDeclType	int		712100	0					
ANR	712106	Identifier	i		712100	1					
ANR	712107	IdentifierDeclStatement	const char * data ;	2494:4:66623:66639	712100	1	True				
ANR	712108	IdentifierDecl	* data		712100	0					
ANR	712109	IdentifierDeclType	const char *		712100	0					
ANR	712110	Identifier	data		712100	1					
ANR	712111	IdentifierDeclStatement	TABLE * t = GetTable ( it8 ) ;	2495:4:66645:66669	712100	2	True				
ANR	712112	IdentifierDecl	* t = GetTable ( it8 )		712100	0					
ANR	712113	IdentifierDeclType	TABLE *		712100	0					
ANR	712114	Identifier	t		712100	1					
ANR	712115	AssignmentExpression	* t = GetTable ( it8 )		712100	2		=			
ANR	712116	Identifier	t		712100	0					
ANR	712117	CallExpression	GetTable ( it8 )		712100	1					
ANR	712118	Callee	GetTable		712100	0					
ANR	712119	Identifier	GetTable		712100	0					
ANR	712120	ArgumentList	it8		712100	1					
ANR	712121	Argument	it8		712100	0					
ANR	712122	Identifier	it8		712100	0					
ANR	712123	ForStatement	for ( i = 0 ; i < t -> nPatches ; i ++ )		712100	3					
ANR	712124	ForInit	i = 0 ;	2497:9:66681:66684	712100	0	True				
ANR	712125	AssignmentExpression	i = 0		712100	0		=			
ANR	712126	Identifier	i		712100	0					
ANR	712127	PrimaryExpression	0		712100	1					
ANR	712128	Condition	i < t -> nPatches	2497:14:66686:66701	712100	1	True				
ANR	712129	RelationalExpression	i < t -> nPatches		712100	0		<			
ANR	712130	Identifier	i		712100	0					
ANR	712131	PtrMemberAccess	t -> nPatches		712100	1					
ANR	712132	Identifier	t		712100	0					
ANR	712133	Identifier	nPatches		712100	1					
ANR	712134	PostIncDecOperationExpression	i ++	2497:32:66704:66706	712100	2	True				
ANR	712135	Identifier	i		712100	0					
ANR	712136	IncDec	++		712100	1					
ANR	712137	CompoundStatement		6:37:102:102	712100	3					
ANR	712138	ExpressionStatement	"data = GetData ( it8 , i , t -> SampleID )"	2499:8:66720:66755	712100	0	True				
ANR	712139	AssignmentExpression	"data = GetData ( it8 , i , t -> SampleID )"		712100	0		=			
ANR	712140	Identifier	data		712100	0					
ANR	712141	CallExpression	"GetData ( it8 , i , t -> SampleID )"		712100	1					
ANR	712142	Callee	GetData		712100	0					
ANR	712143	Identifier	GetData		712100	0					
ANR	712144	ArgumentList	it8		712100	1					
ANR	712145	Argument	it8		712100	0					
ANR	712146	Identifier	it8		712100	0					
ANR	712147	Argument	i		712100	1					
ANR	712148	Identifier	i		712100	0					
ANR	712149	Argument	t -> SampleID		712100	2					
ANR	712150	PtrMemberAccess	t -> SampleID		712100	0					
ANR	712151	Identifier	t		712100	0					
ANR	712152	Identifier	SampleID		712100	1					
ANR	712153	IfStatement	if ( data == NULL )		712100	1					
ANR	712154	Condition	data == NULL	2501:12:66770:66781	712100	0	True				
ANR	712155	EqualityExpression	data == NULL		712100	0		==			
ANR	712156	Identifier	data		712100	0					
ANR	712157	Identifier	NULL		712100	1					
ANR	712158	ReturnStatement	return i ;	2502:12:66796:66804	712100	1	True				
ANR	712159	Identifier	i		712100	0					
ANR	712160	ReturnStatement	return - 1 ;	2506:4:66818:66827	712100	4	True				
ANR	712161	UnaryOperationExpression	- 1		712100	0					
ANR	712162	UnaryOperator	-		712100	0					
ANR	712163	PrimaryExpression	1		712100	1					
ANR	712164	ReturnType	static int		712100	1					
ANR	712165	Identifier	LocateEmptyPatch		712100	2					
ANR	712166	ParameterList	cmsIT8 * it8		712100	3					
ANR	712167	Parameter	cmsIT8 * it8	2491:21:66593:66603	712100	0	True				
ANR	712168	ParameterType	cmsIT8 *		712100	0					
ANR	712169	Identifier	it8		712100	1					
ANR	712170	CFGEntryNode	ENTRY		712100		True				
ANR	712171	CFGExitNode	EXIT		712100		True				
ANR	712172	Symbol	GetTable		712100						
ANR	712173	Symbol	t -> SampleID		712100						
ANR	712174	Symbol	t -> nPatches		712100						
ANR	712175	Symbol	NULL		712100						
ANR	712176	Symbol	data		712100						
ANR	712177	Symbol	t		712100						
ANR	712178	Symbol	GetData		712100						
ANR	712179	Symbol	i		712100						
ANR	712180	Symbol	it8		712100						
ANR	712181	Symbol	* t		712100						
ANR	712182	Function	LocateSample	2509:0:66832:67167							
ANR	712183	FunctionDef	"LocateSample (cmsIT8 * it8 , const char * cSample)"		712182	0					
ANR	712184	CompoundStatement		2511:0:66890:67167	712182	0					
ANR	712185	IdentifierDeclStatement	int i ;	2512:4:66896:66901	712182	0	True				
ANR	712186	IdentifierDecl	i		712182	0					
ANR	712187	IdentifierDeclType	int		712182	0					
ANR	712188	Identifier	i		712182	1					
ANR	712189	IdentifierDeclStatement	const char * fld ;	2513:4:66907:66922	712182	1	True				
ANR	712190	IdentifierDecl	* fld		712182	0					
ANR	712191	IdentifierDeclType	const char *		712182	0					
ANR	712192	Identifier	fld		712182	1					
ANR	712193	IdentifierDeclStatement	TABLE * t = GetTable ( it8 ) ;	2514:4:66928:66952	712182	2	True				
ANR	712194	IdentifierDecl	* t = GetTable ( it8 )		712182	0					
ANR	712195	IdentifierDeclType	TABLE *		712182	0					
ANR	712196	Identifier	t		712182	1					
ANR	712197	AssignmentExpression	* t = GetTable ( it8 )		712182	2		=			
ANR	712198	Identifier	t		712182	0					
ANR	712199	CallExpression	GetTable ( it8 )		712182	1					
ANR	712200	Callee	GetTable		712182	0					
ANR	712201	Identifier	GetTable		712182	0					
ANR	712202	ArgumentList	it8		712182	1					
ANR	712203	Argument	it8		712182	0					
ANR	712204	Identifier	it8		712182	0					
ANR	712205	ForStatement	for ( i = 0 ; i < t -> nSamples ; i ++ )		712182	3					
ANR	712206	ForInit	i = 0 ;	2516:9:66964:66967	712182	0	True				
ANR	712207	AssignmentExpression	i = 0		712182	0		=			
ANR	712208	Identifier	i		712182	0					
ANR	712209	PrimaryExpression	0		712182	1					
ANR	712210	Condition	i < t -> nSamples	2516:14:66969:66983	712182	1	True				
ANR	712211	RelationalExpression	i < t -> nSamples		712182	0		<			
ANR	712212	Identifier	i		712182	0					
ANR	712213	PtrMemberAccess	t -> nSamples		712182	1					
ANR	712214	Identifier	t		712182	0					
ANR	712215	Identifier	nSamples		712182	1					
ANR	712216	PostIncDecOperationExpression	i ++	2516:31:66986:66988	712182	2	True				
ANR	712217	Identifier	i		712182	0					
ANR	712218	IncDec	++		712182	1					
ANR	712219	CompoundStatement		6:36:100:100	712182	3					
ANR	712220	ExpressionStatement	"fld = GetDataFormat ( it8 , i )"	2518:8:67002:67029	712182	0	True				
ANR	712221	AssignmentExpression	"fld = GetDataFormat ( it8 , i )"		712182	0		=			
ANR	712222	Identifier	fld		712182	0					
ANR	712223	CallExpression	"GetDataFormat ( it8 , i )"		712182	1					
ANR	712224	Callee	GetDataFormat		712182	0					
ANR	712225	Identifier	GetDataFormat		712182	0					
ANR	712226	ArgumentList	it8		712182	1					
ANR	712227	Argument	it8		712182	0					
ANR	712228	Identifier	it8		712182	0					
ANR	712229	Argument	i		712182	1					
ANR	712230	Identifier	i		712182	0					
ANR	712231	IfStatement	if ( fld != NULL )		712182	1					
ANR	712232	Condition	fld != NULL	2519:12:67043:67053	712182	0	True				
ANR	712233	EqualityExpression	fld != NULL		712182	0		!=			
ANR	712234	Identifier	fld		712182	0					
ANR	712235	Identifier	NULL		712182	1					
ANR	712236	CompoundStatement		9:25:165:165	712182	1					
ANR	712237	IfStatement	"if ( cmsstrcasecmp ( fld , cSample ) == 0 )"		712182	0					
ANR	712238	Condition	"cmsstrcasecmp ( fld , cSample ) == 0"	2520:16:67074:67105	712182	0	True				
ANR	712239	EqualityExpression	"cmsstrcasecmp ( fld , cSample ) == 0"		712182	0		==			
ANR	712240	CallExpression	"cmsstrcasecmp ( fld , cSample )"		712182	0					
ANR	712241	Callee	cmsstrcasecmp		712182	0					
ANR	712242	Identifier	cmsstrcasecmp		712182	0					
ANR	712243	ArgumentList	fld		712182	1					
ANR	712244	Argument	fld		712182	0					
ANR	712245	Identifier	fld		712182	0					
ANR	712246	Argument	cSample		712182	1					
ANR	712247	Identifier	cSample		712182	0					
ANR	712248	PrimaryExpression	0		712182	1					
ANR	712249	ReturnStatement	return i ;	2521:16:67124:67132	712182	1	True				
ANR	712250	Identifier	i		712182	0					
ANR	712251	ReturnStatement	return - 1 ;	2525:4:67155:67164	712182	4	True				
ANR	712252	UnaryOperationExpression	- 1		712182	0					
ANR	712253	UnaryOperator	-		712182	0					
ANR	712254	PrimaryExpression	1		712182	1					
ANR	712255	ReturnType	static int		712182	1					
ANR	712256	Identifier	LocateSample		712182	2					
ANR	712257	ParameterList	"cmsIT8 * it8 , const char * cSample"		712182	3					
ANR	712258	Parameter	cmsIT8 * it8	2510:17:66856:66866	712182	0	True				
ANR	712259	ParameterType	cmsIT8 *		712182	0					
ANR	712260	Identifier	it8		712182	1					
ANR	712261	Parameter	const char * cSample	2510:30:66869:66887	712182	1	True				
ANR	712262	ParameterType	const char *		712182	0					
ANR	712263	Identifier	cSample		712182	1					
ANR	712264	CFGEntryNode	ENTRY		712182		True				
ANR	712265	CFGExitNode	EXIT		712182		True				
ANR	712266	Symbol	GetTable		712182						
ANR	712267	Symbol	GetDataFormat		712182						
ANR	712268	Symbol	t -> nSamples		712182						
ANR	712269	Symbol	NULL		712182						
ANR	712270	Symbol	t		712182						
ANR	712271	Symbol	cSample		712182						
ANR	712272	Symbol	i		712182						
ANR	712273	Symbol	cmsstrcasecmp		712182						
ANR	712274	Symbol	it8		712182						
ANR	712275	Symbol	* t		712182						
ANR	712276	Symbol	fld		712182						
ANR	712277	Function	cmsIT8FindDataFormat	2530:0:67171:67350							
ANR	712278	FunctionDef	"cmsIT8FindDataFormat (cmsHANDLE hIT8 , const char * cSample)"		712277	0					
ANR	712279	CompoundStatement		2531:0:67243:67350	712277	0					
ANR	712280	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	2532:4:67249:67277	712277	0	True				
ANR	712281	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		712277	0					
ANR	712282	IdentifierDeclType	cmsIT8 *		712277	0					
ANR	712283	Identifier	it8		712277	1					
ANR	712284	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		712277	2		=			
ANR	712285	Identifier	it8		712277	0					
ANR	712286	CastExpression	( cmsIT8 * ) hIT8		712277	1					
ANR	712287	CastTarget	cmsIT8 *		712277	0					
ANR	712288	Identifier	hIT8		712277	1					
ANR	712289	ExpressionStatement	_cmsAssert ( hIT8 != NULL )	2534:4:67284:67308	712277	1	True				
ANR	712290	CallExpression	_cmsAssert ( hIT8 != NULL )		712277	0					
ANR	712291	Callee	_cmsAssert		712277	0					
ANR	712292	Identifier	_cmsAssert		712277	0					
ANR	712293	ArgumentList	hIT8 != NULL		712277	1					
ANR	712294	Argument	hIT8 != NULL		712277	0					
ANR	712295	EqualityExpression	hIT8 != NULL		712277	0		!=			
ANR	712296	Identifier	hIT8		712277	0					
ANR	712297	Identifier	NULL		712277	1					
ANR	712298	ReturnStatement	"return LocateSample ( it8 , cSample ) ;"	2536:4:67315:67348	712277	2	True				
ANR	712299	CallExpression	"LocateSample ( it8 , cSample )"		712277	0					
ANR	712300	Callee	LocateSample		712277	0					
ANR	712301	Identifier	LocateSample		712277	0					
ANR	712302	ArgumentList	it8		712277	1					
ANR	712303	Argument	it8		712277	0					
ANR	712304	Identifier	it8		712277	0					
ANR	712305	Argument	cSample		712277	1					
ANR	712306	Identifier	cSample		712277	0					
ANR	712307	ReturnType	int CMSEXPORT		712277	1					
ANR	712308	Identifier	cmsIT8FindDataFormat		712277	2					
ANR	712309	ParameterList	"cmsHANDLE hIT8 , const char * cSample"		712277	3					
ANR	712310	Parameter	cmsHANDLE hIT8	2530:35:67206:67219	712277	0	True				
ANR	712311	ParameterType	cmsHANDLE		712277	0					
ANR	712312	Identifier	hIT8		712277	1					
ANR	712313	Parameter	const char * cSample	2530:51:67222:67240	712277	1	True				
ANR	712314	ParameterType	const char *		712277	0					
ANR	712315	Identifier	cSample		712277	1					
ANR	712316	CFGEntryNode	ENTRY		712277		True				
ANR	712317	CFGExitNode	EXIT		712277		True				
ANR	712318	Symbol	NULL		712277						
ANR	712319	Symbol	hIT8		712277						
ANR	712320	Symbol	cSample		712277						
ANR	712321	Symbol	LocateSample		712277						
ANR	712322	Symbol	it8		712277						
ANR	712323	Function	cmsIT8GetDataRowCol	2541:12:67367:67534							
ANR	712324	FunctionDef	"cmsIT8GetDataRowCol (cmsHANDLE hIT8 , int row , int col)"		712323	0					
ANR	712325	CompoundStatement		2542:0:67431:67534	712323	0					
ANR	712326	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	2543:4:67437:67465	712323	0	True				
ANR	712327	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		712323	0					
ANR	712328	IdentifierDeclType	cmsIT8 *		712323	0					
ANR	712329	Identifier	it8		712323	1					
ANR	712330	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		712323	2		=			
ANR	712331	Identifier	it8		712323	0					
ANR	712332	CastExpression	( cmsIT8 * ) hIT8		712323	1					
ANR	712333	CastTarget	cmsIT8 *		712323	0					
ANR	712334	Identifier	hIT8		712323	1					
ANR	712335	ExpressionStatement	_cmsAssert ( hIT8 != NULL )	2545:4:67472:67496	712323	1	True				
ANR	712336	CallExpression	_cmsAssert ( hIT8 != NULL )		712323	0					
ANR	712337	Callee	_cmsAssert		712323	0					
ANR	712338	Identifier	_cmsAssert		712323	0					
ANR	712339	ArgumentList	hIT8 != NULL		712323	1					
ANR	712340	Argument	hIT8 != NULL		712323	0					
ANR	712341	EqualityExpression	hIT8 != NULL		712323	0		!=			
ANR	712342	Identifier	hIT8		712323	0					
ANR	712343	Identifier	NULL		712323	1					
ANR	712344	ReturnStatement	"return GetData ( it8 , row , col ) ;"	2547:4:67503:67532	712323	2	True				
ANR	712345	CallExpression	"GetData ( it8 , row , col )"		712323	0					
ANR	712346	Callee	GetData		712323	0					
ANR	712347	Identifier	GetData		712323	0					
ANR	712348	ArgumentList	it8		712323	1					
ANR	712349	Argument	it8		712323	0					
ANR	712350	Identifier	it8		712323	0					
ANR	712351	Argument	row		712323	1					
ANR	712352	Identifier	row		712323	0					
ANR	712353	Argument	col		712323	2					
ANR	712354	Identifier	col		712323	0					
ANR	712355	ReturnType	CMSEXPORT		712323	1					
ANR	712356	Identifier	cmsIT8GetDataRowCol		712323	2					
ANR	712357	ParameterList	"cmsHANDLE hIT8 , int row , int col"		712323	3					
ANR	712358	Parameter	cmsHANDLE hIT8	2541:42:67397:67410	712323	0	True				
ANR	712359	ParameterType	cmsHANDLE		712323	0					
ANR	712360	Identifier	hIT8		712323	1					
ANR	712361	Parameter	int row	2541:58:67413:67419	712323	1	True				
ANR	712362	ParameterType	int		712323	0					
ANR	712363	Identifier	row		712323	1					
ANR	712364	Parameter	int col	2541:67:67422:67428	712323	2	True				
ANR	712365	ParameterType	int		712323	0					
ANR	712366	Identifier	col		712323	1					
ANR	712367	CFGEntryNode	ENTRY		712323		True				
ANR	712368	CFGExitNode	EXIT		712323		True				
ANR	712369	Symbol	col		712323						
ANR	712370	Symbol	NULL		712323						
ANR	712371	Symbol	hIT8		712323						
ANR	712372	Symbol	GetData		712323						
ANR	712373	Symbol	row		712323						
ANR	712374	Symbol	it8		712323						
ANR	712375	Function	cmsIT8GetDataRowColDbl	2551:0:67538:67774							
ANR	712376	FunctionDef	"cmsIT8GetDataRowColDbl (cmsHANDLE hIT8 , int row , int col)"		712375	0					
ANR	712377	CompoundStatement		2552:0:67622:67774	712375	0					
ANR	712378	IdentifierDeclStatement	const char * Buffer ;	2553:4:67628:67646	712375	0	True				
ANR	712379	IdentifierDecl	* Buffer		712375	0					
ANR	712380	IdentifierDeclType	const char *		712375	0					
ANR	712381	Identifier	Buffer		712375	1					
ANR	712382	ExpressionStatement	"Buffer = cmsIT8GetDataRowCol ( hIT8 , row , col )"	2555:4:67653:67697	712375	1	True				
ANR	712383	AssignmentExpression	"Buffer = cmsIT8GetDataRowCol ( hIT8 , row , col )"		712375	0		=			
ANR	712384	Identifier	Buffer		712375	0					
ANR	712385	CallExpression	"cmsIT8GetDataRowCol ( hIT8 , row , col )"		712375	1					
ANR	712386	Callee	cmsIT8GetDataRowCol		712375	0					
ANR	712387	Identifier	cmsIT8GetDataRowCol		712375	0					
ANR	712388	ArgumentList	hIT8		712375	1					
ANR	712389	Argument	hIT8		712375	0					
ANR	712390	Identifier	hIT8		712375	0					
ANR	712391	Argument	row		712375	1					
ANR	712392	Identifier	row		712375	0					
ANR	712393	Argument	col		712375	2					
ANR	712394	Identifier	col		712375	0					
ANR	712395	IfStatement	if ( Buffer == NULL )		712375	2					
ANR	712396	Condition	Buffer == NULL	2557:8:67708:67721	712375	0	True				
ANR	712397	EqualityExpression	Buffer == NULL		712375	0		==			
ANR	712398	Identifier	Buffer		712375	0					
ANR	712399	Identifier	NULL		712375	1					
ANR	712400	ReturnStatement	return 0.0 ;	2557:24:67724:67734	712375	1	True				
ANR	712401	PrimaryExpression	0.0		712375	0					
ANR	712402	ReturnStatement	return ParseFloatNumber ( Buffer ) ;	2559:4:67741:67772	712375	3	True				
ANR	712403	CallExpression	ParseFloatNumber ( Buffer )		712375	0					
ANR	712404	Callee	ParseFloatNumber		712375	0					
ANR	712405	Identifier	ParseFloatNumber		712375	0					
ANR	712406	ArgumentList	Buffer		712375	1					
ANR	712407	Argument	Buffer		712375	0					
ANR	712408	Identifier	Buffer		712375	0					
ANR	712409	ReturnType	cmsFloat64Number CMSEXPORT		712375	1					
ANR	712410	Identifier	cmsIT8GetDataRowColDbl		712375	2					
ANR	712411	ParameterList	"cmsHANDLE hIT8 , int row , int col"		712375	3					
ANR	712412	Parameter	cmsHANDLE hIT8	2551:50:67588:67601	712375	0	True				
ANR	712413	ParameterType	cmsHANDLE		712375	0					
ANR	712414	Identifier	hIT8		712375	1					
ANR	712415	Parameter	int row	2551:66:67604:67610	712375	1	True				
ANR	712416	ParameterType	int		712375	0					
ANR	712417	Identifier	row		712375	1					
ANR	712418	Parameter	int col	2551:75:67613:67619	712375	2	True				
ANR	712419	ParameterType	int		712375	0					
ANR	712420	Identifier	col		712375	1					
ANR	712421	CFGEntryNode	ENTRY		712375		True				
ANR	712422	CFGExitNode	EXIT		712375		True				
ANR	712423	Symbol	Buffer		712375						
ANR	712424	Symbol	col		712375						
ANR	712425	Symbol	NULL		712375						
ANR	712426	Symbol	ParseFloatNumber		712375						
ANR	712427	Symbol	hIT8		712375						
ANR	712428	Symbol	row		712375						
ANR	712429	Symbol	cmsIT8GetDataRowCol		712375						
ANR	712430	Function	cmsIT8SetDataRowCol	2563:0:67778:67975							
ANR	712431	FunctionDef	"cmsIT8SetDataRowCol (cmsHANDLE hIT8 , int row , int col , const char * Val)"		712430	0					
ANR	712432	CompoundStatement		2564:0:67867:67975	712430	0					
ANR	712433	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	2565:4:67873:67901	712430	0	True				
ANR	712434	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		712430	0					
ANR	712435	IdentifierDeclType	cmsIT8 *		712430	0					
ANR	712436	Identifier	it8		712430	1					
ANR	712437	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		712430	2		=			
ANR	712438	Identifier	it8		712430	0					
ANR	712439	CastExpression	( cmsIT8 * ) hIT8		712430	1					
ANR	712440	CastTarget	cmsIT8 *		712430	0					
ANR	712441	Identifier	hIT8		712430	1					
ANR	712442	ExpressionStatement	_cmsAssert ( hIT8 != NULL )	2567:4:67908:67932	712430	1	True				
ANR	712443	CallExpression	_cmsAssert ( hIT8 != NULL )		712430	0					
ANR	712444	Callee	_cmsAssert		712430	0					
ANR	712445	Identifier	_cmsAssert		712430	0					
ANR	712446	ArgumentList	hIT8 != NULL		712430	1					
ANR	712447	Argument	hIT8 != NULL		712430	0					
ANR	712448	EqualityExpression	hIT8 != NULL		712430	0		!=			
ANR	712449	Identifier	hIT8		712430	0					
ANR	712450	Identifier	NULL		712430	1					
ANR	712451	ReturnStatement	"return SetData ( it8 , row , col , Val ) ;"	2569:4:67939:67973	712430	2	True				
ANR	712452	CallExpression	"SetData ( it8 , row , col , Val )"		712430	0					
ANR	712453	Callee	SetData		712430	0					
ANR	712454	Identifier	SetData		712430	0					
ANR	712455	ArgumentList	it8		712430	1					
ANR	712456	Argument	it8		712430	0					
ANR	712457	Identifier	it8		712430	0					
ANR	712458	Argument	row		712430	1					
ANR	712459	Identifier	row		712430	0					
ANR	712460	Argument	col		712430	2					
ANR	712461	Identifier	col		712430	0					
ANR	712462	Argument	Val		712430	3					
ANR	712463	Identifier	Val		712430	0					
ANR	712464	ReturnType	cmsBool CMSEXPORT		712430	1					
ANR	712465	Identifier	cmsIT8SetDataRowCol		712430	2					
ANR	712466	ParameterList	"cmsHANDLE hIT8 , int row , int col , const char * Val"		712430	3					
ANR	712467	Parameter	cmsHANDLE hIT8	2563:38:67816:67829	712430	0	True				
ANR	712468	ParameterType	cmsHANDLE		712430	0					
ANR	712469	Identifier	hIT8		712430	1					
ANR	712470	Parameter	int row	2563:54:67832:67838	712430	1	True				
ANR	712471	ParameterType	int		712430	0					
ANR	712472	Identifier	row		712430	1					
ANR	712473	Parameter	int col	2563:63:67841:67847	712430	2	True				
ANR	712474	ParameterType	int		712430	0					
ANR	712475	Identifier	col		712430	1					
ANR	712476	Parameter	const char * Val	2563:72:67850:67864	712430	3	True				
ANR	712477	ParameterType	const char *		712430	0					
ANR	712478	Identifier	Val		712430	1					
ANR	712479	CFGEntryNode	ENTRY		712430		True				
ANR	712480	CFGExitNode	EXIT		712430		True				
ANR	712481	Symbol	Val		712430						
ANR	712482	Symbol	col		712430						
ANR	712483	Symbol	NULL		712430						
ANR	712484	Symbol	hIT8		712430						
ANR	712485	Symbol	row		712430						
ANR	712486	Symbol	it8		712430						
ANR	712487	Symbol	SetData		712430						
ANR	712488	Function	cmsIT8SetDataRowColDbl	2573:0:67979:68258							
ANR	712489	FunctionDef	"cmsIT8SetDataRowColDbl (cmsHANDLE hIT8 , int row , int col , cmsFloat64Number Val)"		712488	0					
ANR	712490	CompoundStatement		2574:0:68076:68258	712488	0					
ANR	712491	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	2575:4:68082:68110	712488	0	True				
ANR	712492	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		712488	0					
ANR	712493	IdentifierDeclType	cmsIT8 *		712488	0					
ANR	712494	Identifier	it8		712488	1					
ANR	712495	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		712488	2		=			
ANR	712496	Identifier	it8		712488	0					
ANR	712497	CastExpression	( cmsIT8 * ) hIT8		712488	1					
ANR	712498	CastTarget	cmsIT8 *		712488	0					
ANR	712499	Identifier	hIT8		712488	1					
ANR	712500	IdentifierDeclStatement	char Buff [ 256 ] ;	2576:4:68116:68130	712488	1	True				
ANR	712501	IdentifierDecl	Buff [ 256 ]		712488	0					
ANR	712502	IdentifierDeclType	char [ 256 ]		712488	0					
ANR	712503	Identifier	Buff		712488	1					
ANR	712504	PrimaryExpression	256		712488	2					
ANR	712505	ExpressionStatement	_cmsAssert ( hIT8 != NULL )	2578:4:68137:68161	712488	2	True				
ANR	712506	CallExpression	_cmsAssert ( hIT8 != NULL )		712488	0					
ANR	712507	Callee	_cmsAssert		712488	0					
ANR	712508	Identifier	_cmsAssert		712488	0					
ANR	712509	ArgumentList	hIT8 != NULL		712488	1					
ANR	712510	Argument	hIT8 != NULL		712488	0					
ANR	712511	EqualityExpression	hIT8 != NULL		712488	0		!=			
ANR	712512	Identifier	hIT8		712488	0					
ANR	712513	Identifier	NULL		712488	1					
ANR	712514	ExpressionStatement	"snprintf ( Buff , 255 , it8 -> DoubleFormatter , Val )"	2580:4:68168:68214	712488	3	True				
ANR	712515	CallExpression	"snprintf ( Buff , 255 , it8 -> DoubleFormatter , Val )"		712488	0					
ANR	712516	Callee	snprintf		712488	0					
ANR	712517	Identifier	snprintf		712488	0					
ANR	712518	ArgumentList	Buff		712488	1					
ANR	712519	Argument	Buff		712488	0					
ANR	712520	Identifier	Buff		712488	0					
ANR	712521	Argument	255		712488	1					
ANR	712522	PrimaryExpression	255		712488	0					
ANR	712523	Argument	it8 -> DoubleFormatter		712488	2					
ANR	712524	PtrMemberAccess	it8 -> DoubleFormatter		712488	0					
ANR	712525	Identifier	it8		712488	0					
ANR	712526	Identifier	DoubleFormatter		712488	1					
ANR	712527	Argument	Val		712488	3					
ANR	712528	Identifier	Val		712488	0					
ANR	712529	ReturnStatement	"return SetData ( it8 , row , col , Buff ) ;"	2582:4:68221:68256	712488	4	True				
ANR	712530	CallExpression	"SetData ( it8 , row , col , Buff )"		712488	0					
ANR	712531	Callee	SetData		712488	0					
ANR	712532	Identifier	SetData		712488	0					
ANR	712533	ArgumentList	it8		712488	1					
ANR	712534	Argument	it8		712488	0					
ANR	712535	Identifier	it8		712488	0					
ANR	712536	Argument	row		712488	1					
ANR	712537	Identifier	row		712488	0					
ANR	712538	Argument	col		712488	2					
ANR	712539	Identifier	col		712488	0					
ANR	712540	Argument	Buff		712488	3					
ANR	712541	Identifier	Buff		712488	0					
ANR	712542	ReturnType	cmsBool CMSEXPORT		712488	1					
ANR	712543	Identifier	cmsIT8SetDataRowColDbl		712488	2					
ANR	712544	ParameterList	"cmsHANDLE hIT8 , int row , int col , cmsFloat64Number Val"		712488	3					
ANR	712545	Parameter	cmsHANDLE hIT8	2573:41:68020:68033	712488	0	True				
ANR	712546	ParameterType	cmsHANDLE		712488	0					
ANR	712547	Identifier	hIT8		712488	1					
ANR	712548	Parameter	int row	2573:57:68036:68042	712488	1	True				
ANR	712549	ParameterType	int		712488	0					
ANR	712550	Identifier	row		712488	1					
ANR	712551	Parameter	int col	2573:66:68045:68051	712488	2	True				
ANR	712552	ParameterType	int		712488	0					
ANR	712553	Identifier	col		712488	1					
ANR	712554	Parameter	cmsFloat64Number Val	2573:75:68054:68073	712488	3	True				
ANR	712555	ParameterType	cmsFloat64Number		712488	0					
ANR	712556	Identifier	Val		712488	1					
ANR	712557	CFGEntryNode	ENTRY		712488		True				
ANR	712558	CFGExitNode	EXIT		712488		True				
ANR	712559	Symbol	Val		712488						
ANR	712560	Symbol	col		712488						
ANR	712561	Symbol	NULL		712488						
ANR	712562	Symbol	hIT8		712488						
ANR	712563	Symbol	* it8		712488						
ANR	712564	Symbol	it8 -> DoubleFormatter		712488						
ANR	712565	Symbol	row		712488						
ANR	712566	Symbol	it8		712488						
ANR	712567	Symbol	Buff		712488						
ANR	712568	Symbol	SetData		712488						
ANR	712569	Function	cmsIT8GetData	2587:12:68275:68665							
ANR	712570	FunctionDef	"cmsIT8GetData (cmsHANDLE hIT8 , const char * cPatch , const char * cSample)"		712569	0					
ANR	712571	CompoundStatement		2588:0:68356:68665	712569	0					
ANR	712572	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	2589:4:68362:68390	712569	0	True				
ANR	712573	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		712569	0					
ANR	712574	IdentifierDeclType	cmsIT8 *		712569	0					
ANR	712575	Identifier	it8		712569	1					
ANR	712576	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		712569	2		=			
ANR	712577	Identifier	it8		712569	0					
ANR	712578	CastExpression	( cmsIT8 * ) hIT8		712569	1					
ANR	712579	CastTarget	cmsIT8 *		712569	0					
ANR	712580	Identifier	hIT8		712569	1					
ANR	712581	IdentifierDeclStatement	"int iField , iSet ;"	2590:4:68396:68412	712569	1	True				
ANR	712582	IdentifierDecl	iField		712569	0					
ANR	712583	IdentifierDeclType	int		712569	0					
ANR	712584	Identifier	iField		712569	1					
ANR	712585	IdentifierDecl	iSet		712569	1					
ANR	712586	IdentifierDeclType	int		712569	0					
ANR	712587	Identifier	iSet		712569	1					
ANR	712588	ExpressionStatement	_cmsAssert ( hIT8 != NULL )	2592:4:68419:68443	712569	2	True				
ANR	712589	CallExpression	_cmsAssert ( hIT8 != NULL )		712569	0					
ANR	712590	Callee	_cmsAssert		712569	0					
ANR	712591	Identifier	_cmsAssert		712569	0					
ANR	712592	ArgumentList	hIT8 != NULL		712569	1					
ANR	712593	Argument	hIT8 != NULL		712569	0					
ANR	712594	EqualityExpression	hIT8 != NULL		712569	0		!=			
ANR	712595	Identifier	hIT8		712569	0					
ANR	712596	Identifier	NULL		712569	1					
ANR	712597	ExpressionStatement	"iField = LocateSample ( it8 , cSample )"	2594:4:68450:68485	712569	3	True				
ANR	712598	AssignmentExpression	"iField = LocateSample ( it8 , cSample )"		712569	0		=			
ANR	712599	Identifier	iField		712569	0					
ANR	712600	CallExpression	"LocateSample ( it8 , cSample )"		712569	1					
ANR	712601	Callee	LocateSample		712569	0					
ANR	712602	Identifier	LocateSample		712569	0					
ANR	712603	ArgumentList	it8		712569	1					
ANR	712604	Argument	it8		712569	0					
ANR	712605	Identifier	it8		712569	0					
ANR	712606	Argument	cSample		712569	1					
ANR	712607	Identifier	cSample		712569	0					
ANR	712608	IfStatement	if ( iField < 0 )		712569	4					
ANR	712609	Condition	iField < 0	2595:8:68495:68504	712569	0	True				
ANR	712610	RelationalExpression	iField < 0		712569	0		<			
ANR	712611	Identifier	iField		712569	0					
ANR	712612	PrimaryExpression	0		712569	1					
ANR	712613	CompoundStatement		8:20:150:150	712569	1					
ANR	712614	ReturnStatement	return NULL ;	2596:8:68517:68528	712569	0	True				
ANR	712615	Identifier	NULL		712569	0					
ANR	712616	ExpressionStatement	"iSet = LocatePatch ( it8 , cPatch )"	2599:4:68541:68572	712569	5	True				
ANR	712617	AssignmentExpression	"iSet = LocatePatch ( it8 , cPatch )"		712569	0		=			
ANR	712618	Identifier	iSet		712569	0					
ANR	712619	CallExpression	"LocatePatch ( it8 , cPatch )"		712569	1					
ANR	712620	Callee	LocatePatch		712569	0					
ANR	712621	Identifier	LocatePatch		712569	0					
ANR	712622	ArgumentList	it8		712569	1					
ANR	712623	Argument	it8		712569	0					
ANR	712624	Identifier	it8		712569	0					
ANR	712625	Argument	cPatch		712569	1					
ANR	712626	Identifier	cPatch		712569	0					
ANR	712627	IfStatement	if ( iSet < 0 )		712569	6					
ANR	712628	Condition	iSet < 0	2600:8:68582:68589	712569	0	True				
ANR	712629	RelationalExpression	iSet < 0		712569	0		<			
ANR	712630	Identifier	iSet		712569	0					
ANR	712631	PrimaryExpression	0		712569	1					
ANR	712632	CompoundStatement		13:18:235:235	712569	1					
ANR	712633	ReturnStatement	return NULL ;	2601:12:68606:68617	712569	0	True				
ANR	712634	Identifier	NULL		712569	0					
ANR	712635	ReturnStatement	"return GetData ( it8 , iSet , iField ) ;"	2604:4:68630:68663	712569	7	True				
ANR	712636	CallExpression	"GetData ( it8 , iSet , iField )"		712569	0					
ANR	712637	Callee	GetData		712569	0					
ANR	712638	Identifier	GetData		712569	0					
ANR	712639	ArgumentList	it8		712569	1					
ANR	712640	Argument	it8		712569	0					
ANR	712641	Identifier	it8		712569	0					
ANR	712642	Argument	iSet		712569	1					
ANR	712643	Identifier	iSet		712569	0					
ANR	712644	Argument	iField		712569	2					
ANR	712645	Identifier	iField		712569	0					
ANR	712646	ReturnType	CMSEXPORT		712569	1					
ANR	712647	Identifier	cmsIT8GetData		712569	2					
ANR	712648	ParameterList	"cmsHANDLE hIT8 , const char * cPatch , const char * cSample"		712569	3					
ANR	712649	Parameter	cmsHANDLE hIT8	2587:36:68299:68312	712569	0	True				
ANR	712650	ParameterType	cmsHANDLE		712569	0					
ANR	712651	Identifier	hIT8		712569	1					
ANR	712652	Parameter	const char * cPatch	2587:52:68315:68332	712569	1	True				
ANR	712653	ParameterType	const char *		712569	0					
ANR	712654	Identifier	cPatch		712569	1					
ANR	712655	Parameter	const char * cSample	2587:72:68335:68353	712569	2	True				
ANR	712656	ParameterType	const char *		712569	0					
ANR	712657	Identifier	cSample		712569	1					
ANR	712658	CFGEntryNode	ENTRY		712569		True				
ANR	712659	CFGExitNode	EXIT		712569		True				
ANR	712660	Symbol	cPatch		712569						
ANR	712661	Symbol	LocatePatch		712569						
ANR	712662	Symbol	NULL		712569						
ANR	712663	Symbol	hIT8		712569						
ANR	712664	Symbol	GetData		712569						
ANR	712665	Symbol	cSample		712569						
ANR	712666	Symbol	iField		712569						
ANR	712667	Symbol	iSet		712569						
ANR	712668	Symbol	LocateSample		712569						
ANR	712669	Symbol	it8		712569						
ANR	712670	Function	cmsIT8GetDataDbl	2608:0:68669:68885							
ANR	712671	FunctionDef	"cmsIT8GetDataDbl (cmsHANDLE it8 , const char * cPatch , const char * cSample)"		712670	0					
ANR	712672	CompoundStatement		2609:0:68770:68885	712670	0					
ANR	712673	IdentifierDeclStatement	const char * Buffer ;	2610:4:68776:68794	712670	0	True				
ANR	712674	IdentifierDecl	* Buffer		712670	0					
ANR	712675	IdentifierDeclType	const char *		712670	0					
ANR	712676	Identifier	Buffer		712670	1					
ANR	712677	ExpressionStatement	"Buffer = cmsIT8GetData ( it8 , cPatch , cSample )"	2612:4:68801:68845	712670	1	True				
ANR	712678	AssignmentExpression	"Buffer = cmsIT8GetData ( it8 , cPatch , cSample )"		712670	0		=			
ANR	712679	Identifier	Buffer		712670	0					
ANR	712680	CallExpression	"cmsIT8GetData ( it8 , cPatch , cSample )"		712670	1					
ANR	712681	Callee	cmsIT8GetData		712670	0					
ANR	712682	Identifier	cmsIT8GetData		712670	0					
ANR	712683	ArgumentList	it8		712670	1					
ANR	712684	Argument	it8		712670	0					
ANR	712685	Identifier	it8		712670	0					
ANR	712686	Argument	cPatch		712670	1					
ANR	712687	Identifier	cPatch		712670	0					
ANR	712688	Argument	cSample		712670	2					
ANR	712689	Identifier	cSample		712670	0					
ANR	712690	ReturnStatement	return ParseFloatNumber ( Buffer ) ;	2614:4:68852:68883	712670	2	True				
ANR	712691	CallExpression	ParseFloatNumber ( Buffer )		712670	0					
ANR	712692	Callee	ParseFloatNumber		712670	0					
ANR	712693	Identifier	ParseFloatNumber		712670	0					
ANR	712694	ArgumentList	Buffer		712670	1					
ANR	712695	Argument	Buffer		712670	0					
ANR	712696	Identifier	Buffer		712670	0					
ANR	712697	ReturnType	cmsFloat64Number CMSEXPORT		712670	1					
ANR	712698	Identifier	cmsIT8GetDataDbl		712670	2					
ANR	712699	ParameterList	"cmsHANDLE it8 , const char * cPatch , const char * cSample"		712670	3					
ANR	712700	Parameter	cmsHANDLE it8	2608:44:68713:68726	712670	0	True				
ANR	712701	ParameterType	cmsHANDLE		712670	0					
ANR	712702	Identifier	it8		712670	1					
ANR	712703	Parameter	const char * cPatch	2608:60:68729:68746	712670	1	True				
ANR	712704	ParameterType	const char *		712670	0					
ANR	712705	Identifier	cPatch		712670	1					
ANR	712706	Parameter	const char * cSample	2608:80:68749:68767	712670	2	True				
ANR	712707	ParameterType	const char *		712670	0					
ANR	712708	Identifier	cSample		712670	1					
ANR	712709	CFGEntryNode	ENTRY		712670		True				
ANR	712710	CFGExitNode	EXIT		712670		True				
ANR	712711	Symbol	Buffer		712670						
ANR	712712	Symbol	cPatch		712670						
ANR	712713	Symbol	ParseFloatNumber		712670						
ANR	712714	Symbol	cmsIT8GetData		712670						
ANR	712715	Symbol	cSample		712670						
ANR	712716	Symbol	it8		712670						
ANR	712717	Function	cmsIT8SetData	2619:0:68890:69743							
ANR	712718	FunctionDef	"cmsIT8SetData (cmsHANDLE hIT8 , const char * cPatch , const char * cSample , const char * Val)"		712717	0					
ANR	712719	CompoundStatement		2620:0:68996:69743	712717	0					
ANR	712720	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	2621:4:69002:69030	712717	0	True				
ANR	712721	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		712717	0					
ANR	712722	IdentifierDeclType	cmsIT8 *		712717	0					
ANR	712723	Identifier	it8		712717	1					
ANR	712724	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		712717	2		=			
ANR	712725	Identifier	it8		712717	0					
ANR	712726	CastExpression	( cmsIT8 * ) hIT8		712717	1					
ANR	712727	CastTarget	cmsIT8 *		712717	0					
ANR	712728	Identifier	hIT8		712717	1					
ANR	712729	IdentifierDeclStatement	"int iField , iSet ;"	2622:4:69036:69052	712717	1	True				
ANR	712730	IdentifierDecl	iField		712717	0					
ANR	712731	IdentifierDeclType	int		712717	0					
ANR	712732	Identifier	iField		712717	1					
ANR	712733	IdentifierDecl	iSet		712717	1					
ANR	712734	IdentifierDeclType	int		712717	0					
ANR	712735	Identifier	iSet		712717	1					
ANR	712736	IdentifierDeclStatement	TABLE * t ;	2623:4:69058:69066	712717	2	True				
ANR	712737	IdentifierDecl	* t		712717	0					
ANR	712738	IdentifierDeclType	TABLE *		712717	0					
ANR	712739	Identifier	t		712717	1					
ANR	712740	ExpressionStatement	_cmsAssert ( hIT8 != NULL )	2625:4:69073:69097	712717	3	True				
ANR	712741	CallExpression	_cmsAssert ( hIT8 != NULL )		712717	0					
ANR	712742	Callee	_cmsAssert		712717	0					
ANR	712743	Identifier	_cmsAssert		712717	0					
ANR	712744	ArgumentList	hIT8 != NULL		712717	1					
ANR	712745	Argument	hIT8 != NULL		712717	0					
ANR	712746	EqualityExpression	hIT8 != NULL		712717	0		!=			
ANR	712747	Identifier	hIT8		712717	0					
ANR	712748	Identifier	NULL		712717	1					
ANR	712749	ExpressionStatement	t = GetTable ( it8 )	2627:4:69104:69121	712717	4	True				
ANR	712750	AssignmentExpression	t = GetTable ( it8 )		712717	0		=			
ANR	712751	Identifier	t		712717	0					
ANR	712752	CallExpression	GetTable ( it8 )		712717	1					
ANR	712753	Callee	GetTable		712717	0					
ANR	712754	Identifier	GetTable		712717	0					
ANR	712755	ArgumentList	it8		712717	1					
ANR	712756	Argument	it8		712717	0					
ANR	712757	Identifier	it8		712717	0					
ANR	712758	ExpressionStatement	"iField = LocateSample ( it8 , cSample )"	2629:4:69128:69163	712717	5	True				
ANR	712759	AssignmentExpression	"iField = LocateSample ( it8 , cSample )"		712717	0		=			
ANR	712760	Identifier	iField		712717	0					
ANR	712761	CallExpression	"LocateSample ( it8 , cSample )"		712717	1					
ANR	712762	Callee	LocateSample		712717	0					
ANR	712763	Identifier	LocateSample		712717	0					
ANR	712764	ArgumentList	it8		712717	1					
ANR	712765	Argument	it8		712717	0					
ANR	712766	Identifier	it8		712717	0					
ANR	712767	Argument	cSample		712717	1					
ANR	712768	Identifier	cSample		712717	0					
ANR	712769	IfStatement	if ( iField < 0 )		712717	6					
ANR	712770	Condition	iField < 0	2631:8:69174:69183	712717	0	True				
ANR	712771	RelationalExpression	iField < 0		712717	0		<			
ANR	712772	Identifier	iField		712717	0					
ANR	712773	PrimaryExpression	0		712717	1					
ANR	712774	ReturnStatement	return FALSE ;	2632:8:69194:69206	712717	1	True				
ANR	712775	Identifier	FALSE		712717	0					
ANR	712776	IfStatement	if ( t -> nPatches == 0 )		712717	7					
ANR	712777	Condition	t -> nPatches == 0	2634:8:69217:69233	712717	0	True				
ANR	712778	EqualityExpression	t -> nPatches == 0		712717	0		==			
ANR	712779	PtrMemberAccess	t -> nPatches		712717	0					
ANR	712780	Identifier	t		712717	0					
ANR	712781	Identifier	nPatches		712717	1					
ANR	712782	PrimaryExpression	0		712717	1					
ANR	712783	CompoundStatement		15:27:239:239	712717	1					
ANR	712784	ExpressionStatement	AllocateDataFormat ( it8 )	2636:8:69247:69270	712717	0	True				
ANR	712785	CallExpression	AllocateDataFormat ( it8 )		712717	0					
ANR	712786	Callee	AllocateDataFormat		712717	0					
ANR	712787	Identifier	AllocateDataFormat		712717	0					
ANR	712788	ArgumentList	it8		712717	1					
ANR	712789	Argument	it8		712717	0					
ANR	712790	Identifier	it8		712717	0					
ANR	712791	ExpressionStatement	AllocateDataSet ( it8 )	2637:8:69280:69300	712717	1	True				
ANR	712792	CallExpression	AllocateDataSet ( it8 )		712717	0					
ANR	712793	Callee	AllocateDataSet		712717	0					
ANR	712794	Identifier	AllocateDataSet		712717	0					
ANR	712795	ArgumentList	it8		712717	1					
ANR	712796	Argument	it8		712717	0					
ANR	712797	Identifier	it8		712717	0					
ANR	712798	ExpressionStatement	CookPointers ( it8 )	2638:8:69310:69327	712717	2	True				
ANR	712799	CallExpression	CookPointers ( it8 )		712717	0					
ANR	712800	Callee	CookPointers		712717	0					
ANR	712801	Identifier	CookPointers		712717	0					
ANR	712802	ArgumentList	it8		712717	1					
ANR	712803	Argument	it8		712717	0					
ANR	712804	Identifier	it8		712717	0					
ANR	712805	IfStatement	"if ( cmsstrcasecmp ( cSample , ""SAMPLE_ID"" ) == 0 )"		712717	8					
ANR	712806	Condition	"cmsstrcasecmp ( cSample , ""SAMPLE_ID"" ) == 0"	2641:8:69344:69383	712717	0	True				
ANR	712807	EqualityExpression	"cmsstrcasecmp ( cSample , ""SAMPLE_ID"" ) == 0"		712717	0		==			
ANR	712808	CallExpression	"cmsstrcasecmp ( cSample , ""SAMPLE_ID"" )"		712717	0					
ANR	712809	Callee	cmsstrcasecmp		712717	0					
ANR	712810	Identifier	cmsstrcasecmp		712717	0					
ANR	712811	ArgumentList	cSample		712717	1					
ANR	712812	Argument	cSample		712717	0					
ANR	712813	Identifier	cSample		712717	0					
ANR	712814	Argument	"""SAMPLE_ID"""		712717	1					
ANR	712815	PrimaryExpression	"""SAMPLE_ID"""		712717	0					
ANR	712816	PrimaryExpression	0		712717	1					
ANR	712817	CompoundStatement		22:50:389:389	712717	1					
ANR	712818	ExpressionStatement	iSet = LocateEmptyPatch ( it8 )	2643:8:69397:69427	712717	0	True				
ANR	712819	AssignmentExpression	iSet = LocateEmptyPatch ( it8 )		712717	0		=			
ANR	712820	Identifier	iSet		712717	0					
ANR	712821	CallExpression	LocateEmptyPatch ( it8 )		712717	1					
ANR	712822	Callee	LocateEmptyPatch		712717	0					
ANR	712823	Identifier	LocateEmptyPatch		712717	0					
ANR	712824	ArgumentList	it8		712717	1					
ANR	712825	Argument	it8		712717	0					
ANR	712826	Identifier	it8		712717	0					
ANR	712827	IfStatement	if ( iSet < 0 )		712717	1					
ANR	712828	Condition	iSet < 0	2644:12:69441:69448	712717	0	True				
ANR	712829	RelationalExpression	iSet < 0		712717	0		<			
ANR	712830	Identifier	iSet		712717	0					
ANR	712831	PrimaryExpression	0		712717	1					
ANR	712832	CompoundStatement		25:22:454:454	712717	1					
ANR	712833	ReturnStatement	"return SynError ( it8 , ""Couldn't add more patches '%s'\\n"" , cPatch ) ;"	2645:12:69465:69529	712717	0	True				
ANR	712834	CallExpression	"SynError ( it8 , ""Couldn't add more patches '%s'\\n"" , cPatch )"		712717	0					
ANR	712835	Callee	SynError		712717	0					
ANR	712836	Identifier	SynError		712717	0					
ANR	712837	ArgumentList	it8		712717	1					
ANR	712838	Argument	it8		712717	0					
ANR	712839	Identifier	it8		712717	0					
ANR	712840	Argument	"""Couldn't add more patches '%s'\\n"""		712717	1					
ANR	712841	PrimaryExpression	"""Couldn't add more patches '%s'\\n"""		712717	0					
ANR	712842	Argument	cPatch		712717	2					
ANR	712843	Identifier	cPatch		712717	0					
ANR	712844	ExpressionStatement	iField = t -> SampleID	2648:8:69550:69572	712717	2	True				
ANR	712845	AssignmentExpression	iField = t -> SampleID		712717	0		=			
ANR	712846	Identifier	iField		712717	0					
ANR	712847	PtrMemberAccess	t -> SampleID		712717	1					
ANR	712848	Identifier	t		712717	0					
ANR	712849	Identifier	SampleID		712717	1					
ANR	712850	ElseStatement	else		712717	0					
ANR	712851	CompoundStatement		31:9:592:592	712717	0					
ANR	712852	ExpressionStatement	"iSet = LocatePatch ( it8 , cPatch )"	2651:8:69599:69630	712717	0	True				
ANR	712853	AssignmentExpression	"iSet = LocatePatch ( it8 , cPatch )"		712717	0		=			
ANR	712854	Identifier	iSet		712717	0					
ANR	712855	CallExpression	"LocatePatch ( it8 , cPatch )"		712717	1					
ANR	712856	Callee	LocatePatch		712717	0					
ANR	712857	Identifier	LocatePatch		712717	0					
ANR	712858	ArgumentList	it8		712717	1					
ANR	712859	Argument	it8		712717	0					
ANR	712860	Identifier	it8		712717	0					
ANR	712861	Argument	cPatch		712717	1					
ANR	712862	Identifier	cPatch		712717	0					
ANR	712863	IfStatement	if ( iSet < 0 )		712717	1					
ANR	712864	Condition	iSet < 0	2652:12:69644:69651	712717	0	True				
ANR	712865	RelationalExpression	iSet < 0		712717	0		<			
ANR	712866	Identifier	iSet		712717	0					
ANR	712867	PrimaryExpression	0		712717	1					
ANR	712868	CompoundStatement		33:22:657:657	712717	1					
ANR	712869	ReturnStatement	return FALSE ;	2653:12:69668:69680	712717	0	True				
ANR	712870	Identifier	FALSE		712717	0					
ANR	712871	ReturnStatement	"return SetData ( it8 , iSet , iField , Val ) ;"	2657:4:69703:69741	712717	9	True				
ANR	712872	CallExpression	"SetData ( it8 , iSet , iField , Val )"		712717	0					
ANR	712873	Callee	SetData		712717	0					
ANR	712874	Identifier	SetData		712717	0					
ANR	712875	ArgumentList	it8		712717	1					
ANR	712876	Argument	it8		712717	0					
ANR	712877	Identifier	it8		712717	0					
ANR	712878	Argument	iSet		712717	1					
ANR	712879	Identifier	iSet		712717	0					
ANR	712880	Argument	iField		712717	2					
ANR	712881	Identifier	iField		712717	0					
ANR	712882	Argument	Val		712717	3					
ANR	712883	Identifier	Val		712717	0					
ANR	712884	ReturnType	cmsBool CMSEXPORT		712717	1					
ANR	712885	Identifier	cmsIT8SetData		712717	2					
ANR	712886	ParameterList	"cmsHANDLE hIT8 , const char * cPatch , const char * cSample , const char * Val"		712717	3					
ANR	712887	Parameter	cmsHANDLE hIT8	2619:32:68922:68935	712717	0	True				
ANR	712888	ParameterType	cmsHANDLE		712717	0					
ANR	712889	Identifier	hIT8		712717	1					
ANR	712890	Parameter	const char * cPatch	2619:48:68938:68955	712717	1	True				
ANR	712891	ParameterType	const char *		712717	0					
ANR	712892	Identifier	cPatch		712717	1					
ANR	712893	Parameter	const char * cSample	2619:68:68958:68976	712717	2	True				
ANR	712894	ParameterType	const char *		712717	0					
ANR	712895	Identifier	cSample		712717	1					
ANR	712896	Parameter	const char * Val	2619:89:68979:68993	712717	3	True				
ANR	712897	ParameterType	const char *		712717	0					
ANR	712898	Identifier	Val		712717	1					
ANR	712899	CFGEntryNode	ENTRY		712717		True				
ANR	712900	CFGExitNode	EXIT		712717		True				
ANR	712901	Symbol	Val		712717						
ANR	712902	Symbol	cPatch		712717						
ANR	712903	Symbol	t -> nPatches		712717						
ANR	712904	Symbol	NULL		712717						
ANR	712905	Symbol	LocateEmptyPatch		712717						
ANR	712906	Symbol	iField		712717						
ANR	712907	Symbol	iSet		712717						
ANR	712908	Symbol	cmsstrcasecmp		712717						
ANR	712909	Symbol	SynError		712717						
ANR	712910	Symbol	it8		712717						
ANR	712911	Symbol	SetData		712717						
ANR	712912	Symbol	GetTable		712717						
ANR	712913	Symbol	t -> SampleID		712717						
ANR	712914	Symbol	LocatePatch		712717						
ANR	712915	Symbol	t		712717						
ANR	712916	Symbol	hIT8		712717						
ANR	712917	Symbol	cSample		712717						
ANR	712918	Symbol	LocateSample		712717						
ANR	712919	Symbol	FALSE		712717						
ANR	712920	Symbol	* t		712717						
ANR	712921	Function	cmsIT8SetDataDbl	2661:0:69747:70126							
ANR	712922	FunctionDef	"cmsIT8SetDataDbl (cmsHANDLE hIT8 , const char * cPatch , const char * cSample , cmsFloat64Number Val)"		712921	0					
ANR	712923	CompoundStatement		2664:0:69931:70126	712921	0					
ANR	712924	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	2665:4:69937:69965	712921	0	True				
ANR	712925	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		712921	0					
ANR	712926	IdentifierDeclType	cmsIT8 *		712921	0					
ANR	712927	Identifier	it8		712921	1					
ANR	712928	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		712921	2		=			
ANR	712929	Identifier	it8		712921	0					
ANR	712930	CastExpression	( cmsIT8 * ) hIT8		712921	1					
ANR	712931	CastTarget	cmsIT8 *		712921	0					
ANR	712932	Identifier	hIT8		712921	1					
ANR	712933	IdentifierDeclStatement	char Buff [ 256 ] ;	2666:4:69971:69985	712921	1	True				
ANR	712934	IdentifierDecl	Buff [ 256 ]		712921	0					
ANR	712935	IdentifierDeclType	char [ 256 ]		712921	0					
ANR	712936	Identifier	Buff		712921	1					
ANR	712937	PrimaryExpression	256		712921	2					
ANR	712938	ExpressionStatement	_cmsAssert ( hIT8 != NULL )	2668:4:69992:70016	712921	2	True				
ANR	712939	CallExpression	_cmsAssert ( hIT8 != NULL )		712921	0					
ANR	712940	Callee	_cmsAssert		712921	0					
ANR	712941	Identifier	_cmsAssert		712921	0					
ANR	712942	ArgumentList	hIT8 != NULL		712921	1					
ANR	712943	Argument	hIT8 != NULL		712921	0					
ANR	712944	EqualityExpression	hIT8 != NULL		712921	0		!=			
ANR	712945	Identifier	hIT8		712921	0					
ANR	712946	Identifier	NULL		712921	1					
ANR	712947	ExpressionStatement	"snprintf ( Buff , 255 , it8 -> DoubleFormatter , Val )"	2670:4:70023:70069	712921	3	True				
ANR	712948	CallExpression	"snprintf ( Buff , 255 , it8 -> DoubleFormatter , Val )"		712921	0					
ANR	712949	Callee	snprintf		712921	0					
ANR	712950	Identifier	snprintf		712921	0					
ANR	712951	ArgumentList	Buff		712921	1					
ANR	712952	Argument	Buff		712921	0					
ANR	712953	Identifier	Buff		712921	0					
ANR	712954	Argument	255		712921	1					
ANR	712955	PrimaryExpression	255		712921	0					
ANR	712956	Argument	it8 -> DoubleFormatter		712921	2					
ANR	712957	PtrMemberAccess	it8 -> DoubleFormatter		712921	0					
ANR	712958	Identifier	it8		712921	0					
ANR	712959	Identifier	DoubleFormatter		712921	1					
ANR	712960	Argument	Val		712921	3					
ANR	712961	Identifier	Val		712921	0					
ANR	712962	ReturnStatement	"return cmsIT8SetData ( hIT8 , cPatch , cSample , Buff ) ;"	2671:4:70075:70124	712921	4	True				
ANR	712963	CallExpression	"cmsIT8SetData ( hIT8 , cPatch , cSample , Buff )"		712921	0					
ANR	712964	Callee	cmsIT8SetData		712921	0					
ANR	712965	Identifier	cmsIT8SetData		712921	0					
ANR	712966	ArgumentList	hIT8		712921	1					
ANR	712967	Argument	hIT8		712921	0					
ANR	712968	Identifier	hIT8		712921	0					
ANR	712969	Argument	cPatch		712921	1					
ANR	712970	Identifier	cPatch		712921	0					
ANR	712971	Argument	cSample		712921	2					
ANR	712972	Identifier	cSample		712921	0					
ANR	712973	Argument	Buff		712921	3					
ANR	712974	Identifier	Buff		712921	0					
ANR	712975	ReturnType	cmsBool CMSEXPORT		712921	1					
ANR	712976	Identifier	cmsIT8SetDataDbl		712921	2					
ANR	712977	ParameterList	"cmsHANDLE hIT8 , const char * cPatch , const char * cSample , cmsFloat64Number Val"		712921	3					
ANR	712978	Parameter	cmsHANDLE hIT8	2661:35:69782:69795	712921	0	True				
ANR	712979	ParameterType	cmsHANDLE		712921	0					
ANR	712980	Identifier	hIT8		712921	1					
ANR	712981	Parameter	const char * cPatch	2661:51:69798:69815	712921	1	True				
ANR	712982	ParameterType	const char *		712921	0					
ANR	712983	Identifier	cPatch		712921	1					
ANR	712984	Parameter	const char * cSample	2662:35:69853:69871	712921	2	True				
ANR	712985	ParameterType	const char *		712921	0					
ANR	712986	Identifier	cSample		712921	1					
ANR	712987	Parameter	cmsFloat64Number Val	2663:35:69909:69928	712921	3	True				
ANR	712988	ParameterType	cmsFloat64Number		712921	0					
ANR	712989	Identifier	Val		712921	1					
ANR	712990	CFGEntryNode	ENTRY		712921		True				
ANR	712991	CFGExitNode	EXIT		712921		True				
ANR	712992	Symbol	Val		712921						
ANR	712993	Symbol	cPatch		712921						
ANR	712994	Symbol	NULL		712921						
ANR	712995	Symbol	hIT8		712921						
ANR	712996	Symbol	cSample		712921						
ANR	712997	Symbol	* it8		712921						
ANR	712998	Symbol	it8 -> DoubleFormatter		712921						
ANR	712999	Symbol	it8		712921						
ANR	713000	Symbol	Buff		712921						
ANR	713001	Symbol	cmsIT8SetData		712921						
ANR	713002	Function	cmsIT8GetPatchName	2676:12:70179:70559							
ANR	713003	FunctionDef	"cmsIT8GetPatchName (cmsHANDLE hIT8 , int nPatch , char * buffer)"		713002	0					
ANR	713004	CompoundStatement		2677:0:70250:70559	713002	0					
ANR	713005	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	2678:4:70256:70284	713002	0	True				
ANR	713006	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		713002	0					
ANR	713007	IdentifierDeclType	cmsIT8 *		713002	0					
ANR	713008	Identifier	it8		713002	1					
ANR	713009	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		713002	2		=			
ANR	713010	Identifier	it8		713002	0					
ANR	713011	CastExpression	( cmsIT8 * ) hIT8		713002	1					
ANR	713012	CastTarget	cmsIT8 *		713002	0					
ANR	713013	Identifier	hIT8		713002	1					
ANR	713014	IdentifierDeclStatement	TABLE * t ;	2679:4:70290:70298	713002	1	True				
ANR	713015	IdentifierDecl	* t		713002	0					
ANR	713016	IdentifierDeclType	TABLE *		713002	0					
ANR	713017	Identifier	t		713002	1					
ANR	713018	IdentifierDeclStatement	char * Data ;	2680:4:70304:70314	713002	2	True				
ANR	713019	IdentifierDecl	* Data		713002	0					
ANR	713020	IdentifierDeclType	char *		713002	0					
ANR	713021	Identifier	Data		713002	1					
ANR	713022	ExpressionStatement	_cmsAssert ( hIT8 != NULL )	2682:4:70321:70345	713002	3	True				
ANR	713023	CallExpression	_cmsAssert ( hIT8 != NULL )		713002	0					
ANR	713024	Callee	_cmsAssert		713002	0					
ANR	713025	Identifier	_cmsAssert		713002	0					
ANR	713026	ArgumentList	hIT8 != NULL		713002	1					
ANR	713027	Argument	hIT8 != NULL		713002	0					
ANR	713028	EqualityExpression	hIT8 != NULL		713002	0		!=			
ANR	713029	Identifier	hIT8		713002	0					
ANR	713030	Identifier	NULL		713002	1					
ANR	713031	ExpressionStatement	t = GetTable ( it8 )	2684:4:70352:70369	713002	4	True				
ANR	713032	AssignmentExpression	t = GetTable ( it8 )		713002	0		=			
ANR	713033	Identifier	t		713002	0					
ANR	713034	CallExpression	GetTable ( it8 )		713002	1					
ANR	713035	Callee	GetTable		713002	0					
ANR	713036	Identifier	GetTable		713002	0					
ANR	713037	ArgumentList	it8		713002	1					
ANR	713038	Argument	it8		713002	0					
ANR	713039	Identifier	it8		713002	0					
ANR	713040	ExpressionStatement	"Data = GetData ( it8 , nPatch , t -> SampleID )"	2685:4:70375:70415	713002	5	True				
ANR	713041	AssignmentExpression	"Data = GetData ( it8 , nPatch , t -> SampleID )"		713002	0		=			
ANR	713042	Identifier	Data		713002	0					
ANR	713043	CallExpression	"GetData ( it8 , nPatch , t -> SampleID )"		713002	1					
ANR	713044	Callee	GetData		713002	0					
ANR	713045	Identifier	GetData		713002	0					
ANR	713046	ArgumentList	it8		713002	1					
ANR	713047	Argument	it8		713002	0					
ANR	713048	Identifier	it8		713002	0					
ANR	713049	Argument	nPatch		713002	1					
ANR	713050	Identifier	nPatch		713002	0					
ANR	713051	Argument	t -> SampleID		713002	2					
ANR	713052	PtrMemberAccess	t -> SampleID		713002	0					
ANR	713053	Identifier	t		713002	0					
ANR	713054	Identifier	SampleID		713002	1					
ANR	713055	IfStatement	if ( ! Data )		713002	6					
ANR	713056	Condition	! Data	2687:8:70426:70430	713002	0	True				
ANR	713057	UnaryOperationExpression	! Data		713002	0					
ANR	713058	UnaryOperator	!		713002	0					
ANR	713059	Identifier	Data		713002	1					
ANR	713060	ReturnStatement	return NULL ;	2687:15:70433:70444	713002	1	True				
ANR	713061	Identifier	NULL		713002	0					
ANR	713062	IfStatement	if ( ! buffer )		713002	7					
ANR	713063	Condition	! buffer	2688:8:70454:70460	713002	0	True				
ANR	713064	UnaryOperationExpression	! buffer		713002	0					
ANR	713065	UnaryOperator	!		713002	0					
ANR	713066	Identifier	buffer		713002	1					
ANR	713067	ReturnStatement	return Data ;	2688:17:70463:70474	713002	1	True				
ANR	713068	Identifier	Data		713002	0					
ANR	713069	ExpressionStatement	"strncpy ( buffer , Data , MAXSTR - 1 )"	2690:4:70481:70512	713002	8	True				
ANR	713070	CallExpression	"strncpy ( buffer , Data , MAXSTR - 1 )"		713002	0					
ANR	713071	Callee	strncpy		713002	0					
ANR	713072	Identifier	strncpy		713002	0					
ANR	713073	ArgumentList	buffer		713002	1					
ANR	713074	Argument	buffer		713002	0					
ANR	713075	Identifier	buffer		713002	0					
ANR	713076	Argument	Data		713002	1					
ANR	713077	Identifier	Data		713002	0					
ANR	713078	Argument	MAXSTR - 1		713002	2					
ANR	713079	AdditiveExpression	MAXSTR - 1		713002	0		-			
ANR	713080	Identifier	MAXSTR		713002	0					
ANR	713081	PrimaryExpression	1		713002	1					
ANR	713082	ExpressionStatement	buffer [ MAXSTR - 1 ] = 0	2691:4:70518:70538	713002	9	True				
ANR	713083	AssignmentExpression	buffer [ MAXSTR - 1 ] = 0		713002	0		=			
ANR	713084	ArrayIndexing	buffer [ MAXSTR - 1 ]		713002	0					
ANR	713085	Identifier	buffer		713002	0					
ANR	713086	AdditiveExpression	MAXSTR - 1		713002	1		-			
ANR	713087	Identifier	MAXSTR		713002	0					
ANR	713088	PrimaryExpression	1		713002	1					
ANR	713089	PrimaryExpression	0		713002	1					
ANR	713090	ReturnStatement	return buffer ;	2692:4:70544:70557	713002	10	True				
ANR	713091	Identifier	buffer		713002	0					
ANR	713092	ReturnType	CMSEXPORT		713002	1					
ANR	713093	Identifier	cmsIT8GetPatchName		713002	2					
ANR	713094	ParameterList	"cmsHANDLE hIT8 , int nPatch , char * buffer"		713002	3					
ANR	713095	Parameter	cmsHANDLE hIT8	2676:41:70208:70221	713002	0	True				
ANR	713096	ParameterType	cmsHANDLE		713002	0					
ANR	713097	Identifier	hIT8		713002	1					
ANR	713098	Parameter	int nPatch	2676:57:70224:70233	713002	1	True				
ANR	713099	ParameterType	int		713002	0					
ANR	713100	Identifier	nPatch		713002	1					
ANR	713101	Parameter	char * buffer	2676:69:70236:70247	713002	2	True				
ANR	713102	ParameterType	char *		713002	0					
ANR	713103	Identifier	buffer		713002	1					
ANR	713104	CFGEntryNode	ENTRY		713002		True				
ANR	713105	CFGExitNode	EXIT		713002		True				
ANR	713106	Symbol	* buffer		713002						
ANR	713107	Symbol	NULL		713002						
ANR	713108	Symbol	Data		713002						
ANR	713109	Symbol	it8		713002						
ANR	713110	Symbol	MAXSTR		713002						
ANR	713111	Symbol	nPatch		713002						
ANR	713112	Symbol	GetTable		713002						
ANR	713113	Symbol	t -> SampleID		713002						
ANR	713114	Symbol	t		713002						
ANR	713115	Symbol	hIT8		713002						
ANR	713116	Symbol	GetData		713002						
ANR	713117	Symbol	* MAXSTR		713002						
ANR	713118	Symbol	buffer		713002						
ANR	713119	Symbol	* t		713002						
ANR	713120	Function	cmsIT8GetPatchByName	2695:0:70562:70713							
ANR	713121	FunctionDef	"cmsIT8GetPatchByName (cmsHANDLE hIT8 , const char * cPatch)"		713120	0					
ANR	713122	CompoundStatement		2696:0:70633:70713	713120	0					
ANR	713123	ExpressionStatement	_cmsAssert ( hIT8 != NULL )	2697:4:70639:70663	713120	0	True				
ANR	713124	CallExpression	_cmsAssert ( hIT8 != NULL )		713120	0					
ANR	713125	Callee	_cmsAssert		713120	0					
ANR	713126	Identifier	_cmsAssert		713120	0					
ANR	713127	ArgumentList	hIT8 != NULL		713120	1					
ANR	713128	Argument	hIT8 != NULL		713120	0					
ANR	713129	EqualityExpression	hIT8 != NULL		713120	0		!=			
ANR	713130	Identifier	hIT8		713120	0					
ANR	713131	Identifier	NULL		713120	1					
ANR	713132	ReturnStatement	"return LocatePatch ( ( cmsIT8 * ) hIT8 , cPatch ) ;"	2699:4:70670:70711	713120	1	True				
ANR	713133	CallExpression	"LocatePatch ( ( cmsIT8 * ) hIT8 , cPatch )"		713120	0					
ANR	713134	Callee	LocatePatch		713120	0					
ANR	713135	Identifier	LocatePatch		713120	0					
ANR	713136	ArgumentList	( cmsIT8 * ) hIT8		713120	1					
ANR	713137	Argument	( cmsIT8 * ) hIT8		713120	0					
ANR	713138	CastExpression	( cmsIT8 * ) hIT8		713120	0					
ANR	713139	CastTarget	cmsIT8 *		713120	0					
ANR	713140	Identifier	hIT8		713120	1					
ANR	713141	Argument	cPatch		713120	1					
ANR	713142	Identifier	cPatch		713120	0					
ANR	713143	ReturnType	int CMSEXPORT		713120	1					
ANR	713144	Identifier	cmsIT8GetPatchByName		713120	2					
ANR	713145	ParameterList	"cmsHANDLE hIT8 , const char * cPatch"		713120	3					
ANR	713146	Parameter	cmsHANDLE hIT8	2695:35:70597:70610	713120	0	True				
ANR	713147	ParameterType	cmsHANDLE		713120	0					
ANR	713148	Identifier	hIT8		713120	1					
ANR	713149	Parameter	const char * cPatch	2695:51:70613:70630	713120	1	True				
ANR	713150	ParameterType	const char *		713120	0					
ANR	713151	Identifier	cPatch		713120	1					
ANR	713152	CFGEntryNode	ENTRY		713120		True				
ANR	713153	CFGExitNode	EXIT		713120		True				
ANR	713154	Symbol	cPatch		713120						
ANR	713155	Symbol	LocatePatch		713120						
ANR	713156	Symbol	NULL		713120						
ANR	713157	Symbol	hIT8		713120						
ANR	713158	Function	cmsIT8TableCount	2702:0:70716:70873							
ANR	713159	FunctionDef	cmsIT8TableCount (cmsHANDLE hIT8)		713158	0					
ANR	713160	CompoundStatement		2703:0:70775:70873	713158	0					
ANR	713161	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	2704:4:70781:70809	713158	0	True				
ANR	713162	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		713158	0					
ANR	713163	IdentifierDeclType	cmsIT8 *		713158	0					
ANR	713164	Identifier	it8		713158	1					
ANR	713165	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		713158	2		=			
ANR	713166	Identifier	it8		713158	0					
ANR	713167	CastExpression	( cmsIT8 * ) hIT8		713158	1					
ANR	713168	CastTarget	cmsIT8 *		713158	0					
ANR	713169	Identifier	hIT8		713158	1					
ANR	713170	ExpressionStatement	_cmsAssert ( hIT8 != NULL )	2706:4:70816:70840	713158	1	True				
ANR	713171	CallExpression	_cmsAssert ( hIT8 != NULL )		713158	0					
ANR	713172	Callee	_cmsAssert		713158	0					
ANR	713173	Identifier	_cmsAssert		713158	0					
ANR	713174	ArgumentList	hIT8 != NULL		713158	1					
ANR	713175	Argument	hIT8 != NULL		713158	0					
ANR	713176	EqualityExpression	hIT8 != NULL		713158	0		!=			
ANR	713177	Identifier	hIT8		713158	0					
ANR	713178	Identifier	NULL		713158	1					
ANR	713179	ReturnStatement	return it8 -> TablesCount ;	2708:4:70847:70871	713158	2	True				
ANR	713180	PtrMemberAccess	it8 -> TablesCount		713158	0					
ANR	713181	Identifier	it8		713158	0					
ANR	713182	Identifier	TablesCount		713158	1					
ANR	713183	ReturnType	cmsUInt32Number CMSEXPORT		713158	1					
ANR	713184	Identifier	cmsIT8TableCount		713158	2					
ANR	713185	ParameterList	cmsHANDLE hIT8		713158	3					
ANR	713186	Parameter	cmsHANDLE hIT8	2702:43:70759:70772	713158	0	True				
ANR	713187	ParameterType	cmsHANDLE		713158	0					
ANR	713188	Identifier	hIT8		713158	1					
ANR	713189	CFGEntryNode	ENTRY		713158		True				
ANR	713190	CFGExitNode	EXIT		713158		True				
ANR	713191	Symbol	NULL		713158						
ANR	713192	Symbol	hIT8		713158						
ANR	713193	Symbol	* it8		713158						
ANR	713194	Symbol	it8 -> TablesCount		713158						
ANR	713195	Symbol	it8		713158						
ANR	713196	Function	cmsIT8SetTableByLabel	2714:0:70939:71687							
ANR	713197	FunctionDef	"cmsIT8SetTableByLabel (cmsHANDLE hIT8 , const char * cSet , const char * cField , const char * ExpectedType)"		713196	0					
ANR	713198	CompoundStatement		2715:0:71055:71687	713196	0					
ANR	713199	IdentifierDeclStatement	const char * cLabelFld ;	2716:4:71061:71082	713196	0	True				
ANR	713200	IdentifierDecl	* cLabelFld		713196	0					
ANR	713201	IdentifierDeclType	const char *		713196	0					
ANR	713202	Identifier	cLabelFld		713196	1					
ANR	713203	IdentifierDeclStatement	"char Type [ 256 ] , Label [ 256 ] ;"	2717:4:71088:71114	713196	1	True				
ANR	713204	IdentifierDecl	Type [ 256 ]		713196	0					
ANR	713205	IdentifierDeclType	char [ 256 ]		713196	0					
ANR	713206	Identifier	Type		713196	1					
ANR	713207	PrimaryExpression	256		713196	2					
ANR	713208	IdentifierDecl	Label [ 256 ]		713196	1					
ANR	713209	IdentifierDeclType	char [ 256 ]		713196	0					
ANR	713210	Identifier	Label		713196	1					
ANR	713211	PrimaryExpression	256		713196	2					
ANR	713212	IdentifierDeclStatement	int nTable ;	2718:4:71120:71130	713196	2	True				
ANR	713213	IdentifierDecl	nTable		713196	0					
ANR	713214	IdentifierDeclType	int		713196	0					
ANR	713215	Identifier	nTable		713196	1					
ANR	713216	ExpressionStatement	_cmsAssert ( hIT8 != NULL )	2720:4:71137:71161	713196	3	True				
ANR	713217	CallExpression	_cmsAssert ( hIT8 != NULL )		713196	0					
ANR	713218	Callee	_cmsAssert		713196	0					
ANR	713219	Identifier	_cmsAssert		713196	0					
ANR	713220	ArgumentList	hIT8 != NULL		713196	1					
ANR	713221	Argument	hIT8 != NULL		713196	0					
ANR	713222	EqualityExpression	hIT8 != NULL		713196	0		!=			
ANR	713223	Identifier	hIT8		713196	0					
ANR	713224	Identifier	NULL		713196	1					
ANR	713225	IfStatement	if ( cField != NULL && * cField == 0 )		713196	4					
ANR	713226	Condition	cField != NULL && * cField == 0	2722:8:71172:71201	713196	0	True				
ANR	713227	AndExpression	cField != NULL && * cField == 0		713196	0		&&			
ANR	713228	EqualityExpression	cField != NULL		713196	0		!=			
ANR	713229	Identifier	cField		713196	0					
ANR	713230	Identifier	NULL		713196	1					
ANR	713231	EqualityExpression	* cField == 0		713196	1		==			
ANR	713232	UnaryOperationExpression	* cField		713196	0					
ANR	713233	UnaryOperator	*		713196	0					
ANR	713234	Identifier	cField		713196	1					
ANR	713235	PrimaryExpression	0		713196	1					
ANR	713236	ExpressionStatement	"cField = ""LABEL"""	2723:12:71216:71232	713196	1	True				
ANR	713237	AssignmentExpression	"cField = ""LABEL"""		713196	0		=			
ANR	713238	Identifier	cField		713196	0					
ANR	713239	PrimaryExpression	"""LABEL"""		713196	1					
ANR	713240	IfStatement	if ( cField == NULL )		713196	5					
ANR	713241	Condition	cField == NULL	2725:8:71243:71256	713196	0	True				
ANR	713242	EqualityExpression	cField == NULL		713196	0		==			
ANR	713243	Identifier	cField		713196	0					
ANR	713244	Identifier	NULL		713196	1					
ANR	713245	ExpressionStatement	"cField = ""LABEL"""	2726:12:71271:71287	713196	1	True				
ANR	713246	AssignmentExpression	"cField = ""LABEL"""		713196	0		=			
ANR	713247	Identifier	cField		713196	0					
ANR	713248	PrimaryExpression	"""LABEL"""		713196	1					
ANR	713249	ExpressionStatement	"cLabelFld = cmsIT8GetData ( hIT8 , cSet , cField )"	2728:4:71294:71339	713196	6	True				
ANR	713250	AssignmentExpression	"cLabelFld = cmsIT8GetData ( hIT8 , cSet , cField )"		713196	0		=			
ANR	713251	Identifier	cLabelFld		713196	0					
ANR	713252	CallExpression	"cmsIT8GetData ( hIT8 , cSet , cField )"		713196	1					
ANR	713253	Callee	cmsIT8GetData		713196	0					
ANR	713254	Identifier	cmsIT8GetData		713196	0					
ANR	713255	ArgumentList	hIT8		713196	1					
ANR	713256	Argument	hIT8		713196	0					
ANR	713257	Identifier	hIT8		713196	0					
ANR	713258	Argument	cSet		713196	1					
ANR	713259	Identifier	cSet		713196	0					
ANR	713260	Argument	cField		713196	2					
ANR	713261	Identifier	cField		713196	0					
ANR	713262	IfStatement	if ( ! cLabelFld )		713196	7					
ANR	713263	Condition	! cLabelFld	2729:8:71349:71358	713196	0	True				
ANR	713264	UnaryOperationExpression	! cLabelFld		713196	0					
ANR	713265	UnaryOperator	!		713196	0					
ANR	713266	Identifier	cLabelFld		713196	1					
ANR	713267	ReturnStatement	return - 1 ;	2729:20:71361:71370	713196	1	True				
ANR	713268	UnaryOperationExpression	- 1		713196	0					
ANR	713269	UnaryOperator	-		713196	0					
ANR	713270	PrimaryExpression	1		713196	1					
ANR	713271	IfStatement	"if ( sscanf ( cLabelFld , ""%255s %d %255s"" , Label , & nTable , Type ) != 3 )"		713196	8					
ANR	713272	Condition	"sscanf ( cLabelFld , ""%255s %d %255s"" , Label , & nTable , Type ) != 3"	2731:8:71381:71442	713196	0	True				
ANR	713273	EqualityExpression	"sscanf ( cLabelFld , ""%255s %d %255s"" , Label , & nTable , Type ) != 3"		713196	0		!=			
ANR	713274	CallExpression	"sscanf ( cLabelFld , ""%255s %d %255s"" , Label , & nTable , Type )"		713196	0					
ANR	713275	Callee	sscanf		713196	0					
ANR	713276	Identifier	sscanf		713196	0					
ANR	713277	ArgumentList	cLabelFld		713196	1					
ANR	713278	Argument	cLabelFld		713196	0					
ANR	713279	Identifier	cLabelFld		713196	0					
ANR	713280	Argument	"""%255s %d %255s"""		713196	1					
ANR	713281	PrimaryExpression	"""%255s %d %255s"""		713196	0					
ANR	713282	Argument	Label		713196	2					
ANR	713283	Identifier	Label		713196	0					
ANR	713284	Argument	& nTable		713196	3					
ANR	713285	UnaryOperationExpression	& nTable		713196	0					
ANR	713286	UnaryOperator	&		713196	0					
ANR	713287	Identifier	nTable		713196	1					
ANR	713288	Argument	Type		713196	4					
ANR	713289	Identifier	Type		713196	0					
ANR	713290	PrimaryExpression	3		713196	1					
ANR	713291	ReturnStatement	return - 1 ;	2732:12:71457:71466	713196	1	True				
ANR	713292	UnaryOperationExpression	- 1		713196	0					
ANR	713293	UnaryOperator	-		713196	0					
ANR	713294	PrimaryExpression	1		713196	1					
ANR	713295	IfStatement	if ( ExpectedType != NULL && * ExpectedType == 0 )		713196	9					
ANR	713296	Condition	ExpectedType != NULL && * ExpectedType == 0	2734:8:71477:71518	713196	0	True				
ANR	713297	AndExpression	ExpectedType != NULL && * ExpectedType == 0		713196	0		&&			
ANR	713298	EqualityExpression	ExpectedType != NULL		713196	0		!=			
ANR	713299	Identifier	ExpectedType		713196	0					
ANR	713300	Identifier	NULL		713196	1					
ANR	713301	EqualityExpression	* ExpectedType == 0		713196	1		==			
ANR	713302	UnaryOperationExpression	* ExpectedType		713196	0					
ANR	713303	UnaryOperator	*		713196	0					
ANR	713304	Identifier	ExpectedType		713196	1					
ANR	713305	PrimaryExpression	0		713196	1					
ANR	713306	ExpressionStatement	ExpectedType = NULL	2735:8:71529:71548	713196	1	True				
ANR	713307	AssignmentExpression	ExpectedType = NULL		713196	0		=			
ANR	713308	Identifier	ExpectedType		713196	0					
ANR	713309	Identifier	NULL		713196	1					
ANR	713310	IfStatement	if ( ExpectedType )		713196	10					
ANR	713311	Condition	ExpectedType	2737:8:71559:71570	713196	0	True				
ANR	713312	Identifier	ExpectedType		713196	0					
ANR	713313	CompoundStatement		23:22:517:517	713196	1					
ANR	713314	IfStatement	"if ( cmsstrcasecmp ( Type , ExpectedType ) != 0 )"		713196	0					
ANR	713315	Condition	"cmsstrcasecmp ( Type , ExpectedType ) != 0"	2739:12:71588:71625	713196	0	True				
ANR	713316	EqualityExpression	"cmsstrcasecmp ( Type , ExpectedType ) != 0"		713196	0		!=			
ANR	713317	CallExpression	"cmsstrcasecmp ( Type , ExpectedType )"		713196	0					
ANR	713318	Callee	cmsstrcasecmp		713196	0					
ANR	713319	Identifier	cmsstrcasecmp		713196	0					
ANR	713320	ArgumentList	Type		713196	1					
ANR	713321	Argument	Type		713196	0					
ANR	713322	Identifier	Type		713196	0					
ANR	713323	Argument	ExpectedType		713196	1					
ANR	713324	Identifier	ExpectedType		713196	0					
ANR	713325	PrimaryExpression	0		713196	1					
ANR	713326	ReturnStatement	return - 1 ;	2739:52:71628:71637	713196	1	True				
ANR	713327	UnaryOperationExpression	- 1		713196	0					
ANR	713328	UnaryOperator	-		713196	0					
ANR	713329	PrimaryExpression	1		713196	1					
ANR	713330	ReturnStatement	"return cmsIT8SetTable ( hIT8 , nTable ) ;"	2742:4:71650:71685	713196	11	True				
ANR	713331	CallExpression	"cmsIT8SetTable ( hIT8 , nTable )"		713196	0					
ANR	713332	Callee	cmsIT8SetTable		713196	0					
ANR	713333	Identifier	cmsIT8SetTable		713196	0					
ANR	713334	ArgumentList	hIT8		713196	1					
ANR	713335	Argument	hIT8		713196	0					
ANR	713336	Identifier	hIT8		713196	0					
ANR	713337	Argument	nTable		713196	1					
ANR	713338	Identifier	nTable		713196	0					
ANR	713339	ReturnType	int CMSEXPORT		713196	1					
ANR	713340	Identifier	cmsIT8SetTableByLabel		713196	2					
ANR	713341	ParameterList	"cmsHANDLE hIT8 , const char * cSet , const char * cField , const char * ExpectedType"		713196	3					
ANR	713342	Parameter	cmsHANDLE hIT8	2714:36:70975:70988	713196	0	True				
ANR	713343	ParameterType	cmsHANDLE		713196	0					
ANR	713344	Identifier	hIT8		713196	1					
ANR	713345	Parameter	const char * cSet	2714:52:70991:71006	713196	1	True				
ANR	713346	ParameterType	const char *		713196	0					
ANR	713347	Identifier	cSet		713196	1					
ANR	713348	Parameter	const char * cField	2714:70:71009:71026	713196	2	True				
ANR	713349	ParameterType	const char *		713196	0					
ANR	713350	Identifier	cField		713196	1					
ANR	713351	Parameter	const char * ExpectedType	2714:90:71029:71052	713196	3	True				
ANR	713352	ParameterType	const char *		713196	0					
ANR	713353	Identifier	ExpectedType		713196	1					
ANR	713354	CFGEntryNode	ENTRY		713196		True				
ANR	713355	CFGExitNode	EXIT		713196		True				
ANR	713356	Symbol	nTable		713196						
ANR	713357	Symbol	NULL		713196						
ANR	713358	Symbol	cLabelFld		713196						
ANR	713359	Symbol	Label		713196						
ANR	713360	Symbol	cmsstrcasecmp		713196						
ANR	713361	Symbol	cmsIT8SetTable		713196						
ANR	713362	Symbol	cField		713196						
ANR	713363	Symbol	& nTable		713196						
ANR	713364	Symbol	* ExpectedType		713196						
ANR	713365	Symbol	cSet		713196						
ANR	713366	Symbol	ExpectedType		713196						
ANR	713367	Symbol	Type		713196						
ANR	713368	Symbol	hIT8		713196						
ANR	713369	Symbol	cmsIT8GetData		713196						
ANR	713370	Symbol	sscanf		713196						
ANR	713371	Symbol	* cField		713196						
ANR	713372	Function	cmsIT8SetIndexColumn	2746:0:71691:71986							
ANR	713373	FunctionDef	"cmsIT8SetIndexColumn (cmsHANDLE hIT8 , const char * cSample)"		713372	0					
ANR	713374	CompoundStatement		2747:0:71767:71986	713372	0					
ANR	713375	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	2748:4:71773:71801	713372	0	True				
ANR	713376	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		713372	0					
ANR	713377	IdentifierDeclType	cmsIT8 *		713372	0					
ANR	713378	Identifier	it8		713372	1					
ANR	713379	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		713372	2		=			
ANR	713380	Identifier	it8		713372	0					
ANR	713381	CastExpression	( cmsIT8 * ) hIT8		713372	1					
ANR	713382	CastTarget	cmsIT8 *		713372	0					
ANR	713383	Identifier	hIT8		713372	1					
ANR	713384	IdentifierDeclStatement	int pos ;	2749:4:71807:71814	713372	1	True				
ANR	713385	IdentifierDecl	pos		713372	0					
ANR	713386	IdentifierDeclType	int		713372	0					
ANR	713387	Identifier	pos		713372	1					
ANR	713388	ExpressionStatement	_cmsAssert ( hIT8 != NULL )	2751:4:71821:71845	713372	2	True				
ANR	713389	CallExpression	_cmsAssert ( hIT8 != NULL )		713372	0					
ANR	713390	Callee	_cmsAssert		713372	0					
ANR	713391	Identifier	_cmsAssert		713372	0					
ANR	713392	ArgumentList	hIT8 != NULL		713372	1					
ANR	713393	Argument	hIT8 != NULL		713372	0					
ANR	713394	EqualityExpression	hIT8 != NULL		713372	0		!=			
ANR	713395	Identifier	hIT8		713372	0					
ANR	713396	Identifier	NULL		713372	1					
ANR	713397	ExpressionStatement	"pos = LocateSample ( it8 , cSample )"	2753:4:71852:71884	713372	3	True				
ANR	713398	AssignmentExpression	"pos = LocateSample ( it8 , cSample )"		713372	0		=			
ANR	713399	Identifier	pos		713372	0					
ANR	713400	CallExpression	"LocateSample ( it8 , cSample )"		713372	1					
ANR	713401	Callee	LocateSample		713372	0					
ANR	713402	Identifier	LocateSample		713372	0					
ANR	713403	ArgumentList	it8		713372	1					
ANR	713404	Argument	it8		713372	0					
ANR	713405	Identifier	it8		713372	0					
ANR	713406	Argument	cSample		713372	1					
ANR	713407	Identifier	cSample		713372	0					
ANR	713408	IfStatement	if ( pos == - 1 )		713372	4					
ANR	713409	Condition	pos == - 1	2754:7:71893:71901	713372	0	True				
ANR	713410	EqualityExpression	pos == - 1		713372	0		==			
ANR	713411	Identifier	pos		713372	0					
ANR	713412	UnaryOperationExpression	- 1		713372	1					
ANR	713413	UnaryOperator	-		713372	0					
ANR	713414	PrimaryExpression	1		713372	1					
ANR	713415	ReturnStatement	return FALSE ;	2755:8:71912:71924	713372	1	True				
ANR	713416	Identifier	FALSE		713372	0					
ANR	713417	ExpressionStatement	it8 -> Tab [ it8 -> nTable ] . SampleID = pos	2757:4:71931:71967	713372	5	True				
ANR	713418	AssignmentExpression	it8 -> Tab [ it8 -> nTable ] . SampleID = pos		713372	0		=			
ANR	713419	MemberAccess	it8 -> Tab [ it8 -> nTable ] . SampleID		713372	0					
ANR	713420	ArrayIndexing	it8 -> Tab [ it8 -> nTable ]		713372	0					
ANR	713421	PtrMemberAccess	it8 -> Tab		713372	0					
ANR	713422	Identifier	it8		713372	0					
ANR	713423	Identifier	Tab		713372	1					
ANR	713424	PtrMemberAccess	it8 -> nTable		713372	1					
ANR	713425	Identifier	it8		713372	0					
ANR	713426	Identifier	nTable		713372	1					
ANR	713427	Identifier	SampleID		713372	1					
ANR	713428	Identifier	pos		713372	1					
ANR	713429	ReturnStatement	return TRUE ;	2758:4:71973:71984	713372	6	True				
ANR	713430	Identifier	TRUE		713372	0					
ANR	713431	ReturnType	cmsBool CMSEXPORT		713372	1					
ANR	713432	Identifier	cmsIT8SetIndexColumn		713372	2					
ANR	713433	ParameterList	"cmsHANDLE hIT8 , const char * cSample"		713372	3					
ANR	713434	Parameter	cmsHANDLE hIT8	2746:39:71730:71743	713372	0	True				
ANR	713435	ParameterType	cmsHANDLE		713372	0					
ANR	713436	Identifier	hIT8		713372	1					
ANR	713437	Parameter	const char * cSample	2746:55:71746:71764	713372	1	True				
ANR	713438	ParameterType	const char *		713372	0					
ANR	713439	Identifier	cSample		713372	1					
ANR	713440	CFGEntryNode	ENTRY		713372		True				
ANR	713441	CFGExitNode	EXIT		713372		True				
ANR	713442	Symbol	* * it8		713372						
ANR	713443	Symbol	* it8 -> nTable		713372						
ANR	713444	Symbol	NULL		713372						
ANR	713445	Symbol	* it8 -> Tab		713372						
ANR	713446	Symbol	* it8		713372						
ANR	713447	Symbol	TRUE		713372						
ANR	713448	Symbol	it8		713372						
ANR	713449	Symbol	it8 -> nTable		713372						
ANR	713450	Symbol	hIT8		713372						
ANR	713451	Symbol	pos		713372						
ANR	713452	Symbol	it8 -> Tab		713372						
ANR	713453	Symbol	cSample		713372						
ANR	713454	Symbol	LocateSample		713372						
ANR	713455	Symbol	FALSE		713372						
ANR	713456	Symbol	it8 -> Tab [ it8 -> nTable ] . SampleID		713372						
ANR	713457	Function	cmsIT8DefineDblFormat	2762:0:71990:72373							
ANR	713458	FunctionDef	"cmsIT8DefineDblFormat (cmsHANDLE hIT8 , const char * Formatter)"		713457	0					
ANR	713459	CompoundStatement		2763:0:72066:72373	713457	0					
ANR	713460	IdentifierDeclStatement	cmsIT8 * it8 = ( cmsIT8 * ) hIT8 ;	2764:4:72072:72100	713457	0	True				
ANR	713461	IdentifierDecl	* it8 = ( cmsIT8 * ) hIT8		713457	0					
ANR	713462	IdentifierDeclType	cmsIT8 *		713457	0					
ANR	713463	Identifier	it8		713457	1					
ANR	713464	AssignmentExpression	* it8 = ( cmsIT8 * ) hIT8		713457	2		=			
ANR	713465	Identifier	it8		713457	0					
ANR	713466	CastExpression	( cmsIT8 * ) hIT8		713457	1					
ANR	713467	CastTarget	cmsIT8 *		713457	0					
ANR	713468	Identifier	hIT8		713457	1					
ANR	713469	ExpressionStatement	_cmsAssert ( hIT8 != NULL )	2766:4:72107:72131	713457	1	True				
ANR	713470	CallExpression	_cmsAssert ( hIT8 != NULL )		713457	0					
ANR	713471	Callee	_cmsAssert		713457	0					
ANR	713472	Identifier	_cmsAssert		713457	0					
ANR	713473	ArgumentList	hIT8 != NULL		713457	1					
ANR	713474	Argument	hIT8 != NULL		713457	0					
ANR	713475	EqualityExpression	hIT8 != NULL		713457	0		!=			
ANR	713476	Identifier	hIT8		713457	0					
ANR	713477	Identifier	NULL		713457	1					
ANR	713478	IfStatement	if ( Formatter == NULL )		713457	2					
ANR	713479	Condition	Formatter == NULL	2768:8:72142:72158	713457	0	True				
ANR	713480	EqualityExpression	Formatter == NULL		713457	0		==			
ANR	713481	Identifier	Formatter		713457	0					
ANR	713482	Identifier	NULL		713457	1					
ANR	713483	ExpressionStatement	"strcpy ( it8 -> DoubleFormatter , DEFAULT_DBL_FORMAT )"	2769:8:72169:72217	713457	1	True				
ANR	713484	CallExpression	"strcpy ( it8 -> DoubleFormatter , DEFAULT_DBL_FORMAT )"		713457	0					
ANR	713485	Callee	strcpy		713457	0					
ANR	713486	Identifier	strcpy		713457	0					
ANR	713487	ArgumentList	it8 -> DoubleFormatter		713457	1					
ANR	713488	Argument	it8 -> DoubleFormatter		713457	0					
ANR	713489	PtrMemberAccess	it8 -> DoubleFormatter		713457	0					
ANR	713490	Identifier	it8		713457	0					
ANR	713491	Identifier	DoubleFormatter		713457	1					
ANR	713492	Argument	DEFAULT_DBL_FORMAT		713457	1					
ANR	713493	Identifier	DEFAULT_DBL_FORMAT		713457	0					
ANR	713494	ElseStatement	else		713457	0					
ANR	713495	ExpressionStatement	"strncpy ( it8 -> DoubleFormatter , Formatter , sizeof ( it8 -> DoubleFormatter ) )"	2771:8:72236:72306	713457	0	True				
ANR	713496	CallExpression	"strncpy ( it8 -> DoubleFormatter , Formatter , sizeof ( it8 -> DoubleFormatter ) )"		713457	0					
ANR	713497	Callee	strncpy		713457	0					
ANR	713498	Identifier	strncpy		713457	0					
ANR	713499	ArgumentList	it8 -> DoubleFormatter		713457	1					
ANR	713500	Argument	it8 -> DoubleFormatter		713457	0					
ANR	713501	PtrMemberAccess	it8 -> DoubleFormatter		713457	0					
ANR	713502	Identifier	it8		713457	0					
ANR	713503	Identifier	DoubleFormatter		713457	1					
ANR	713504	Argument	Formatter		713457	1					
ANR	713505	Identifier	Formatter		713457	0					
ANR	713506	Argument	sizeof ( it8 -> DoubleFormatter )		713457	2					
ANR	713507	SizeofExpression	sizeof ( it8 -> DoubleFormatter )		713457	0					
ANR	713508	Sizeof	sizeof		713457	0					
ANR	713509	PtrMemberAccess	it8 -> DoubleFormatter		713457	1					
ANR	713510	Identifier	it8		713457	0					
ANR	713511	Identifier	DoubleFormatter		713457	1					
ANR	713512	ExpressionStatement	it8 -> DoubleFormatter [ sizeof ( it8 -> DoubleFormatter ) - 1 ] = 0	2773:4:72313:72371	713457	3	True				
ANR	713513	AssignmentExpression	it8 -> DoubleFormatter [ sizeof ( it8 -> DoubleFormatter ) - 1 ] = 0		713457	0		=			
ANR	713514	ArrayIndexing	it8 -> DoubleFormatter [ sizeof ( it8 -> DoubleFormatter ) - 1 ]		713457	0					
ANR	713515	PtrMemberAccess	it8 -> DoubleFormatter		713457	0					
ANR	713516	Identifier	it8		713457	0					
ANR	713517	Identifier	DoubleFormatter		713457	1					
ANR	713518	AdditiveExpression	sizeof ( it8 -> DoubleFormatter ) - 1		713457	1		-			
ANR	713519	SizeofExpression	sizeof ( it8 -> DoubleFormatter )		713457	0					
ANR	713520	Sizeof	sizeof		713457	0					
ANR	713521	PtrMemberAccess	it8 -> DoubleFormatter		713457	1					
ANR	713522	Identifier	it8		713457	0					
ANR	713523	Identifier	DoubleFormatter		713457	1					
ANR	713524	PrimaryExpression	1		713457	1					
ANR	713525	PrimaryExpression	0		713457	1					
ANR	713526	ReturnType	void CMSEXPORT		713457	1					
ANR	713527	Identifier	cmsIT8DefineDblFormat		713457	2					
ANR	713528	ParameterList	"cmsHANDLE hIT8 , const char * Formatter"		713457	3					
ANR	713529	Parameter	cmsHANDLE hIT8	2762:37:72027:72040	713457	0	True				
ANR	713530	ParameterType	cmsHANDLE		713457	0					
ANR	713531	Identifier	hIT8		713457	1					
ANR	713532	Parameter	const char * Formatter	2762:53:72043:72063	713457	1	True				
ANR	713533	ParameterType	const char *		713457	0					
ANR	713534	Identifier	Formatter		713457	1					
ANR	713535	CFGEntryNode	ENTRY		713457		True				
ANR	713536	CFGExitNode	EXIT		713457		True				
ANR	713537	Symbol	DEFAULT_DBL_FORMAT		713457						
ANR	713538	Symbol	* * it8		713457						
ANR	713539	Symbol	NULL		713457						
ANR	713540	Symbol	hIT8		713457						
ANR	713541	Symbol	Formatter		713457						
ANR	713542	Symbol	* it8		713457						
ANR	713543	Symbol	it8 -> DoubleFormatter		713457						
ANR	713544	Symbol	it8		713457						
ANR	713545	Symbol	* it8 -> DoubleFormatter		713457						
