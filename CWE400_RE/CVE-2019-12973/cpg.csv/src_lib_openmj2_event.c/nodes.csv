command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	504721	File	data/converged/CVE-2019-12973_openjpeg/src_lib_openmj2_event.c								
ANR	504722	Function	i2a	40:0:1875:2058							
ANR	504723	FunctionDef	"i2a (unsigned i , char * a , unsigned r)"		504722	0					
ANR	504724	CompoundStatement		42:0:1925:2058	504722	0					
ANR	504725	IfStatement	if ( i / r > 0 )		504722	0					
ANR	504726	Condition	i / r > 0	43:8:1935:1943	504722	0	True				
ANR	504727	RelationalExpression	i / r > 0		504722	0		>			
ANR	504728	MultiplicativeExpression	i / r		504722	0		/			
ANR	504729	Identifier	i		504722	0					
ANR	504730	Identifier	r		504722	1					
ANR	504731	PrimaryExpression	0		504722	1					
ANR	504732	CompoundStatement		2:19:20:20	504722	1					
ANR	504733	ExpressionStatement	"a = i2a ( i / r , a , r )"	44:8:1956:1976	504722	0	True				
ANR	504734	AssignmentExpression	"a = i2a ( i / r , a , r )"		504722	0		=			
ANR	504735	Identifier	a		504722	0					
ANR	504736	CallExpression	"i2a ( i / r , a , r )"		504722	1					
ANR	504737	Callee	i2a		504722	0					
ANR	504738	Identifier	i2a		504722	0					
ANR	504739	ArgumentList	i / r		504722	1					
ANR	504740	Argument	i / r		504722	0					
ANR	504741	MultiplicativeExpression	i / r		504722	0		/			
ANR	504742	Identifier	i		504722	0					
ANR	504743	Identifier	r		504722	1					
ANR	504744	Argument	a		504722	1					
ANR	504745	Identifier	a		504722	0					
ANR	504746	Argument	r		504722	2					
ANR	504747	Identifier	r		504722	0					
ANR	504748	ExpressionStatement	"* a = ""0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"" [ i % r ]"	46:4:1988:2038	504722	1	True				
ANR	504749	AssignmentExpression	"* a = ""0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"" [ i % r ]"		504722	0		=			
ANR	504750	UnaryOperationExpression	* a		504722	0					
ANR	504751	UnaryOperator	*		504722	0					
ANR	504752	Identifier	a		504722	1					
ANR	504753	ArrayIndexing	"""0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"" [ i % r ]"		504722	1					
ANR	504754	PrimaryExpression	"""0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"""		504722	0					
ANR	504755	MultiplicativeExpression	i % r		504722	1		%			
ANR	504756	Identifier	i		504722	0					
ANR	504757	Identifier	r		504722	1					
ANR	504758	ReturnStatement	return a + 1 ;	47:4:2044:2056	504722	2	True				
ANR	504759	AdditiveExpression	a + 1		504722	0		+			
ANR	504760	Identifier	a		504722	0					
ANR	504761	PrimaryExpression	1		504722	1					
ANR	504762	ReturnType	static char *		504722	1					
ANR	504763	Identifier	i2a		504722	2					
ANR	504764	ParameterList	"unsigned i , char * a , unsigned r"		504722	3					
ANR	504765	Parameter	unsigned i	41:4:1892:1901	504722	0	True				
ANR	504766	ParameterType	unsigned		504722	0					
ANR	504767	Identifier	i		504722	1					
ANR	504768	Parameter	char * a	41:16:1904:1910	504722	1	True				
ANR	504769	ParameterType	char *		504722	0					
ANR	504770	Identifier	a		504722	1					
ANR	504771	Parameter	unsigned r	41:25:1913:1922	504722	2	True				
ANR	504772	ParameterType	unsigned		504722	0					
ANR	504773	Identifier	r		504722	1					
ANR	504774	CFGEntryNode	ENTRY		504722		True				
ANR	504775	CFGExitNode	EXIT		504722		True				
ANR	504776	Symbol	a		504722						
ANR	504777	Symbol	r		504722						
ANR	504778	Symbol	* i		504722						
ANR	504779	Symbol	i		504722						
ANR	504780	Symbol	i2a		504722						
ANR	504781	Symbol	* a		504722						
ANR	504782	Symbol	* r		504722						
ANR	504783	Function	_itoa	58:0:2315:2527							
ANR	504784	FunctionDef	"_itoa (int i , char * a , int r)"		504783	0					
ANR	504785	CompoundStatement		60:0:2358:2527	504783	0					
ANR	504786	ExpressionStatement	r = ( ( r < 2 ) || ( r > 36 ) ) ? 10 : r	61:4:2364:2398	504783	0	True				
ANR	504787	AssignmentExpression	r = ( ( r < 2 ) || ( r > 36 ) ) ? 10 : r		504783	0		=			
ANR	504788	Identifier	r		504783	0					
ANR	504789	ConditionalExpression	( ( r < 2 ) || ( r > 36 ) ) ? 10 : r		504783	1					
ANR	504790	Condition	( r < 2 ) || ( r > 36 )		504783	0					
ANR	504791	OrExpression	( r < 2 ) || ( r > 36 )		504783	0		||			
ANR	504792	RelationalExpression	r < 2		504783	0		<			
ANR	504793	Identifier	r		504783	0					
ANR	504794	PrimaryExpression	2		504783	1					
ANR	504795	RelationalExpression	r > 36		504783	1		>			
ANR	504796	Identifier	r		504783	0					
ANR	504797	PrimaryExpression	36		504783	1					
ANR	504798	PrimaryExpression	10		504783	1					
ANR	504799	Identifier	r		504783	2					
ANR	504800	IfStatement	if ( i < 0 )		504783	1					
ANR	504801	Condition	i < 0	62:8:2408:2412	504783	0	True				
ANR	504802	RelationalExpression	i < 0		504783	0		<			
ANR	504803	Identifier	i		504783	0					
ANR	504804	PrimaryExpression	0		504783	1					
ANR	504805	CompoundStatement		3:15:56:56	504783	1					
ANR	504806	ExpressionStatement	* a = '-'	63:8:2425:2433	504783	0	True				
ANR	504807	AssignmentExpression	* a = '-'		504783	0		=			
ANR	504808	UnaryOperationExpression	* a		504783	0					
ANR	504809	UnaryOperator	*		504783	0					
ANR	504810	Identifier	a		504783	1					
ANR	504811	PrimaryExpression	'-'		504783	1					
ANR	504812	ExpressionStatement	"* i2a ( - i , a + 1 , r ) = 0"	64:8:2443:2465	504783	1	True				
ANR	504813	AssignmentExpression	"* i2a ( - i , a + 1 , r ) = 0"		504783	0		=			
ANR	504814	UnaryOperationExpression	"* i2a ( - i , a + 1 , r )"		504783	0					
ANR	504815	UnaryOperator	*		504783	0					
ANR	504816	CallExpression	"i2a ( - i , a + 1 , r )"		504783	1					
ANR	504817	Callee	i2a		504783	0					
ANR	504818	Identifier	i2a		504783	0					
ANR	504819	ArgumentList	- i		504783	1					
ANR	504820	Argument	- i		504783	0					
ANR	504821	UnaryOperationExpression	- i		504783	0					
ANR	504822	UnaryOperator	-		504783	0					
ANR	504823	Identifier	i		504783	1					
ANR	504824	Argument	a + 1		504783	1					
ANR	504825	AdditiveExpression	a + 1		504783	0		+			
ANR	504826	Identifier	a		504783	0					
ANR	504827	PrimaryExpression	1		504783	1					
ANR	504828	Argument	r		504783	2					
ANR	504829	Identifier	r		504783	0					
ANR	504830	PrimaryExpression	0		504783	1					
ANR	504831	ElseStatement	else		504783	0					
ANR	504832	CompoundStatement		6:11:119:119	504783	0					
ANR	504833	ExpressionStatement	"* i2a ( i , a , r ) = 0"	66:8:2488:2505	504783	0	True				
ANR	504834	AssignmentExpression	"* i2a ( i , a , r ) = 0"		504783	0		=			
ANR	504835	UnaryOperationExpression	"* i2a ( i , a , r )"		504783	0					
ANR	504836	UnaryOperator	*		504783	0					
ANR	504837	CallExpression	"i2a ( i , a , r )"		504783	1					
ANR	504838	Callee	i2a		504783	0					
ANR	504839	Identifier	i2a		504783	0					
ANR	504840	ArgumentList	i		504783	1					
ANR	504841	Argument	i		504783	0					
ANR	504842	Identifier	i		504783	0					
ANR	504843	Argument	a		504783	1					
ANR	504844	Identifier	a		504783	0					
ANR	504845	Argument	r		504783	2					
ANR	504846	Identifier	r		504783	0					
ANR	504847	PrimaryExpression	0		504783	1					
ANR	504848	ReturnStatement	return a ;	68:4:2517:2525	504783	2	True				
ANR	504849	Identifier	a		504783	0					
ANR	504850	ReturnType	static char *		504783	1					
ANR	504851	Identifier	_itoa		504783	2					
ANR	504852	ParameterList	"int i , char * a , int r"		504783	3					
ANR	504853	Parameter	int i	59:6:2335:2339	504783	0	True				
ANR	504854	ParameterType	int		504783	0					
ANR	504855	Identifier	i		504783	1					
ANR	504856	Parameter	char * a	59:13:2342:2348	504783	1	True				
ANR	504857	ParameterType	char *		504783	0					
ANR	504858	Identifier	a		504783	1					
ANR	504859	Parameter	int r	59:22:2351:2355	504783	2	True				
ANR	504860	ParameterType	int		504783	0					
ANR	504861	Identifier	r		504783	1					
ANR	504862	CFGEntryNode	ENTRY		504783		True				
ANR	504863	CFGExitNode	EXIT		504783		True				
ANR	504864	Symbol	a		504783						
ANR	504865	Symbol	r		504783						
ANR	504866	Symbol	i		504783						
ANR	504867	Symbol	i2a		504783						
ANR	504868	Symbol	* a		504783						
ANR	504869	Symbol	"* i2a ( - i , a + 1 , r )"		504783						
ANR	504870	Symbol	"* i2a ( i , a , r )"		504783						
ANR	504871	Symbol	* i2a		504783						
ANR	504872	Function	opj_set_event_mgr	75:17:2654:2956							
ANR	504873	FunctionDef	"opj_set_event_mgr (opj_common_ptr cinfo , opj_event_mgr_t * event_mgr , void * context)"		504872	0					
ANR	504874	CompoundStatement		77:0:2758:2956	504872	0					
ANR	504875	IfStatement	if ( cinfo )		504872	0					
ANR	504876	Condition	cinfo	78:8:2768:2772	504872	0	True				
ANR	504877	Identifier	cinfo		504872	0					
ANR	504878	CompoundStatement		3:8:26:70	504872	1					
ANR	504879	IdentifierDeclStatement	opj_event_mgr_t * previous = cinfo -> event_mgr ;	79:8:2785:2829	504872	0	True				
ANR	504880	IdentifierDecl	* previous = cinfo -> event_mgr		504872	0					
ANR	504881	IdentifierDeclType	opj_event_mgr_t *		504872	0					
ANR	504882	Identifier	previous		504872	1					
ANR	504883	AssignmentExpression	* previous = cinfo -> event_mgr		504872	2		=			
ANR	504884	Identifier	previous		504872	0					
ANR	504885	PtrMemberAccess	cinfo -> event_mgr		504872	1					
ANR	504886	Identifier	cinfo		504872	0					
ANR	504887	Identifier	event_mgr		504872	1					
ANR	504888	ExpressionStatement	cinfo -> event_mgr = event_mgr	80:8:2839:2867	504872	1	True				
ANR	504889	AssignmentExpression	cinfo -> event_mgr = event_mgr		504872	0		=			
ANR	504890	PtrMemberAccess	cinfo -> event_mgr		504872	0					
ANR	504891	Identifier	cinfo		504872	0					
ANR	504892	Identifier	event_mgr		504872	1					
ANR	504893	Identifier	event_mgr		504872	1					
ANR	504894	ExpressionStatement	cinfo -> client_data = context	81:8:2877:2905	504872	2	True				
ANR	504895	AssignmentExpression	cinfo -> client_data = context		504872	0		=			
ANR	504896	PtrMemberAccess	cinfo -> client_data		504872	0					
ANR	504897	Identifier	cinfo		504872	0					
ANR	504898	Identifier	client_data		504872	1					
ANR	504899	Identifier	context		504872	1					
ANR	504900	ReturnStatement	return previous ;	82:8:2915:2930	504872	3	True				
ANR	504901	Identifier	previous		504872	0					
ANR	504902	ReturnStatement	return NULL ;	85:4:2943:2954	504872	1	True				
ANR	504903	Identifier	NULL		504872	0					
ANR	504904	ReturnType	OPJ_CALLCONV		504872	1					
ANR	504905	Identifier	opj_set_event_mgr		504872	2					
ANR	504906	ParameterList	"opj_common_ptr cinfo , opj_event_mgr_t * event_mgr , void * context"		504872	3					
ANR	504907	Parameter	opj_common_ptr cinfo	75:48:2685:2704	504872	0	True				
ANR	504908	ParameterType	opj_common_ptr		504872	0					
ANR	504909	Identifier	cinfo		504872	1					
ANR	504910	Parameter	opj_event_mgr_t * event_mgr	76:8:2715:2740	504872	1	True				
ANR	504911	ParameterType	opj_event_mgr_t *		504872	0					
ANR	504912	Identifier	event_mgr		504872	1					
ANR	504913	Parameter	void * context	76:36:2743:2755	504872	2	True				
ANR	504914	ParameterType	void *		504872	0					
ANR	504915	Identifier	context		504872	1					
ANR	504916	CFGEntryNode	ENTRY		504872		True				
ANR	504917	CFGExitNode	EXIT		504872		True				
ANR	504918	Symbol	cinfo -> client_data		504872						
ANR	504919	Symbol	NULL		504872						
ANR	504920	Symbol	previous		504872						
ANR	504921	Symbol	cinfo		504872						
ANR	504922	Symbol	event_mgr		504872						
ANR	504923	Symbol	context		504872						
ANR	504924	Symbol	cinfo -> event_mgr		504872						
ANR	504925	Symbol	* cinfo		504872						
ANR	504926	Function	opj_event_msg	88:0:2959:4453							
ANR	504927	FunctionDef	"opj_event_msg (opj_common_ptr cinfo , int event_type , const char * fmt)"		504926	0					
ANR	504928	CompoundStatement		90:0:3065:4453	504926	0					
ANR	504929	Statement	define	91:1:3068:3073	504926	0	True				
ANR	504930	Statement	MSG_SIZE	91:8:3075:3082	504926	1	True				
ANR	504931	Statement	512	91:17:3084:3086	504926	2	True				
ANR	504932	IdentifierDeclStatement	opj_msg_callback msg_handler = NULL ;	92:4:3155:3190	504926	3	True				
ANR	504933	IdentifierDecl	msg_handler = NULL		504926	0					
ANR	504934	IdentifierDeclType	opj_msg_callback		504926	0					
ANR	504935	Identifier	msg_handler		504926	1					
ANR	504936	AssignmentExpression	msg_handler = NULL		504926	2		=			
ANR	504937	Identifier	NULL		504926	0					
ANR	504938	Identifier	NULL		504926	1					
ANR	504939	IdentifierDeclStatement	opj_event_mgr_t * event_mgr = cinfo -> event_mgr ;	94:4:3197:3242	504926	4	True				
ANR	504940	IdentifierDecl	* event_mgr = cinfo -> event_mgr		504926	0					
ANR	504941	IdentifierDeclType	opj_event_mgr_t *		504926	0					
ANR	504942	Identifier	event_mgr		504926	1					
ANR	504943	AssignmentExpression	* event_mgr = cinfo -> event_mgr		504926	2		=			
ANR	504944	Identifier	event_mgr		504926	0					
ANR	504945	PtrMemberAccess	cinfo -> event_mgr		504926	1					
ANR	504946	Identifier	cinfo		504926	0					
ANR	504947	Identifier	event_mgr		504926	1					
ANR	504948	IfStatement	if ( event_mgr != NULL )		504926	5					
ANR	504949	Condition	event_mgr != NULL	95:8:3252:3268	504926	0	True				
ANR	504950	EqualityExpression	event_mgr != NULL		504926	0		!=			
ANR	504951	Identifier	event_mgr		504926	0					
ANR	504952	Identifier	NULL		504926	1					
ANR	504953	CompoundStatement		6:27:205:205	504926	1					
ANR	504954	SwitchStatement	switch ( event_type )		504926	0					
ANR	504955	Condition	event_type	96:16:3289:3298	504926	0	True				
ANR	504956	Identifier	event_type		504926	0					
ANR	504957	CompoundStatement		7:28:235:235	504926	1					
ANR	504958	Label	case EVT_ERROR :	97:8:3311:3325	504926	0	True				
ANR	504959	Identifier	EVT_ERROR		504926	0					
ANR	504960	ExpressionStatement	msg_handler = event_mgr -> error_handler	98:12:3339:3377	504926	1	True				
ANR	504961	AssignmentExpression	msg_handler = event_mgr -> error_handler		504926	0		=			
ANR	504962	Identifier	msg_handler		504926	0					
ANR	504963	PtrMemberAccess	event_mgr -> error_handler		504926	1					
ANR	504964	Identifier	event_mgr		504926	0					
ANR	504965	Identifier	error_handler		504926	1					
ANR	504966	BreakStatement	break ;	99:12:3391:3396	504926	2	True				
ANR	504967	Label	case EVT_WARNING :	100:8:3406:3422	504926	3	True				
ANR	504968	Identifier	EVT_WARNING		504926	0					
ANR	504969	ExpressionStatement	msg_handler = event_mgr -> warning_handler	101:12:3436:3476	504926	4	True				
ANR	504970	AssignmentExpression	msg_handler = event_mgr -> warning_handler		504926	0		=			
ANR	504971	Identifier	msg_handler		504926	0					
ANR	504972	PtrMemberAccess	event_mgr -> warning_handler		504926	1					
ANR	504973	Identifier	event_mgr		504926	0					
ANR	504974	Identifier	warning_handler		504926	1					
ANR	504975	BreakStatement	break ;	102:12:3490:3495	504926	5	True				
ANR	504976	Label	case EVT_INFO :	103:8:3505:3518	504926	6	True				
ANR	504977	Identifier	EVT_INFO		504926	0					
ANR	504978	ExpressionStatement	msg_handler = event_mgr -> info_handler	104:12:3532:3569	504926	7	True				
ANR	504979	AssignmentExpression	msg_handler = event_mgr -> info_handler		504926	0		=			
ANR	504980	Identifier	msg_handler		504926	0					
ANR	504981	PtrMemberAccess	event_mgr -> info_handler		504926	1					
ANR	504982	Identifier	event_mgr		504926	0					
ANR	504983	Identifier	info_handler		504926	1					
ANR	504984	BreakStatement	break ;	105:12:3583:3588	504926	8	True				
ANR	504985	Label	default :	106:8:3598:3605	504926	9	True				
ANR	504986	Identifier	default		504926	0					
ANR	504987	BreakStatement	break ;	107:12:3619:3624	504926	10	True				
ANR	504988	IfStatement	if ( msg_handler == NULL )		504926	1					
ANR	504989	Condition	msg_handler == NULL	109:12:3648:3666	504926	0	True				
ANR	504990	EqualityExpression	msg_handler == NULL		504926	0		==			
ANR	504991	Identifier	msg_handler		504926	0					
ANR	504992	Identifier	NULL		504926	1					
ANR	504993	CompoundStatement		20:33:603:603	504926	1					
ANR	504994	ReturnStatement	return OPJ_FALSE ;	110:12:3683:3699	504926	0	True				
ANR	504995	Identifier	OPJ_FALSE		504926	0					
ANR	504996	ElseStatement	else		504926	0					
ANR	504997	CompoundStatement		23:11:656:656	504926	0					
ANR	504998	ReturnStatement	return OPJ_FALSE ;	113:8:3732:3748	504926	0	True				
ANR	504999	Identifier	OPJ_FALSE		504926	0					
ANR	505000	IfStatement	if ( ( fmt != NULL ) && ( event_mgr != NULL ) )		504926	6					
ANR	505001	Condition	( fmt != NULL ) && ( event_mgr != NULL )	116:8:3765:3800	504926	0	True				
ANR	505002	AndExpression	( fmt != NULL ) && ( event_mgr != NULL )		504926	0		&&			
ANR	505003	EqualityExpression	fmt != NULL		504926	0		!=			
ANR	505004	Identifier	fmt		504926	0					
ANR	505005	Identifier	NULL		504926	1					
ANR	505006	EqualityExpression	event_mgr != NULL		504926	1		!=			
ANR	505007	Identifier	event_mgr		504926	0					
ANR	505008	Identifier	NULL		504926	1					
ANR	505009	CompoundStatement		30:8:814:836	504926	1					
ANR	505010	IdentifierDeclStatement	va_list arg ;	117:8:3813:3824	504926	0	True				
ANR	505011	IdentifierDecl	arg		504926	0					
ANR	505012	IdentifierDeclType	va_list		504926	0					
ANR	505013	Identifier	arg		504926	1					
ANR	505014	IdentifierDeclStatement	int str_length ;	118:8:3834:3858	504926	1	True				
ANR	505015	IdentifierDecl	str_length		504926	0					
ANR	505016	IdentifierDeclType	int		504926	0					
ANR	505017	Identifier	str_length		504926	1					
ANR	505018	IdentifierDeclStatement	char message [ MSG_SIZE ] ;	119:8:3880:3902	504926	2	True				
ANR	505019	IdentifierDecl	message [ MSG_SIZE ]		504926	0					
ANR	505020	IdentifierDeclType	char [ MSG_SIZE ]		504926	0					
ANR	505021	Identifier	message		504926	1					
ANR	505022	Identifier	MSG_SIZE		504926	2					
ANR	505023	ExpressionStatement	"va_start ( arg , fmt )"	121:8:3965:3983	504926	3	True				
ANR	505024	CallExpression	"va_start ( arg , fmt )"		504926	0					
ANR	505025	Callee	va_start		504926	0					
ANR	505026	Identifier	va_start		504926	0					
ANR	505027	ArgumentList	arg		504926	1					
ANR	505028	Argument	arg		504926	0					
ANR	505029	Identifier	arg		504926	0					
ANR	505030	Argument	fmt		504926	1					
ANR	505031	Identifier	fmt		504926	0					
ANR	505032	ExpressionStatement	"str_length = vsnprintf ( message , MSG_SIZE , fmt , arg )"	123:8:4063:4114	504926	4	True				
ANR	505033	AssignmentExpression	"str_length = vsnprintf ( message , MSG_SIZE , fmt , arg )"		504926	0		=			
ANR	505034	Identifier	str_length		504926	0					
ANR	505035	CallExpression	"vsnprintf ( message , MSG_SIZE , fmt , arg )"		504926	1					
ANR	505036	Callee	vsnprintf		504926	0					
ANR	505037	Identifier	vsnprintf		504926	0					
ANR	505038	ArgumentList	message		504926	1					
ANR	505039	Argument	message		504926	0					
ANR	505040	Identifier	message		504926	0					
ANR	505041	Argument	MSG_SIZE		504926	1					
ANR	505042	Identifier	MSG_SIZE		504926	0					
ANR	505043	Argument	fmt		504926	2					
ANR	505044	Identifier	fmt		504926	0					
ANR	505045	Argument	arg		504926	3					
ANR	505046	Identifier	arg		504926	0					
ANR	505047	ExpressionStatement	va_end ( arg )	125:8:4191:4202	504926	5	True				
ANR	505048	CallExpression	va_end ( arg )		504926	0					
ANR	505049	Callee	va_end		504926	0					
ANR	505050	Identifier	va_end		504926	0					
ANR	505051	ArgumentList	arg		504926	1					
ANR	505052	Argument	arg		504926	0					
ANR	505053	Identifier	arg		504926	0					
ANR	505054	IfStatement	if ( str_length > - 1 && str_length < MSG_SIZE )		504926	6					
ANR	505055	Condition	str_length > - 1 && str_length < MSG_SIZE	128:12:4270:4309	504926	0	True				
ANR	505056	AndExpression	str_length > - 1 && str_length < MSG_SIZE		504926	0		&&			
ANR	505057	RelationalExpression	str_length > - 1		504926	0		>			
ANR	505058	Identifier	str_length		504926	0					
ANR	505059	UnaryOperationExpression	- 1		504926	1					
ANR	505060	UnaryOperator	-		504926	0					
ANR	505061	PrimaryExpression	1		504926	1					
ANR	505062	RelationalExpression	str_length < MSG_SIZE		504926	1		<			
ANR	505063	Identifier	str_length		504926	0					
ANR	505064	Identifier	MSG_SIZE		504926	1					
ANR	505065	CompoundStatement		39:54:1246:1246	504926	1					
ANR	505066	ExpressionStatement	"msg_handler ( message , cinfo -> client_data )"	129:12:4326:4366	504926	0	True				
ANR	505067	CallExpression	"msg_handler ( message , cinfo -> client_data )"		504926	0					
ANR	505068	Callee	msg_handler		504926	0					
ANR	505069	Identifier	msg_handler		504926	0					
ANR	505070	ArgumentList	message		504926	1					
ANR	505071	Argument	message		504926	0					
ANR	505072	Identifier	message		504926	0					
ANR	505073	Argument	cinfo -> client_data		504926	1					
ANR	505074	PtrMemberAccess	cinfo -> client_data		504926	0					
ANR	505075	Identifier	cinfo		504926	0					
ANR	505076	Identifier	client_data		504926	1					
ANR	505077	ElseStatement	else		504926	0					
ANR	505078	CompoundStatement		41:15:1317:1317	504926	0					
ANR	505079	ReturnStatement	return OPJ_FALSE ;	131:12:4397:4413	504926	0	True				
ANR	505080	Identifier	OPJ_FALSE		504926	0					
ANR	505081	ReturnStatement	return OPJ_TRUE ;	135:4:4436:4451	504926	7	True				
ANR	505082	Identifier	OPJ_TRUE		504926	0					
ANR	505083	ReturnType	opj_bool		504926	1					
ANR	505084	Identifier	opj_event_msg		504926	2					
ANR	505085	ParameterList	"opj_common_ptr cinfo , int event_type , const char * fmt"		504926	3					
ANR	505086	Parameter	opj_common_ptr cinfo	88:23:2982:3001	504926	0	True				
ANR	505087	ParameterType	opj_common_ptr		504926	0					
ANR	505088	Identifier	cinfo		504926	1					
ANR	505089	Parameter	int event_type	88:45:3004:3017	504926	1	True				
ANR	505090	ParameterType	int		504926	0					
ANR	505091	Identifier	event_type		504926	1					
ANR	505092	Parameter	const char * fmt	88:61:3020:3034	504926	2	True				
ANR	505093	ParameterType	const char *		504926	0					
ANR	505094	Identifier	fmt		504926	1					
ANR	505095	CFGEntryNode	ENTRY		504926		True				
ANR	505096	CFGExitNode	EXIT		504926		True				
ANR	505097	Symbol	NULL		504926						
ANR	505098	Symbol	event_mgr -> info_handler		504926						
ANR	505099	Symbol	event_mgr -> warning_handler		504926						
ANR	505100	Symbol	* event_mgr		504926						
ANR	505101	Symbol	fmt		504926						
ANR	505102	Symbol	message		504926						
ANR	505103	Symbol	msg_handler		504926						
ANR	505104	Symbol	str_length		504926						
ANR	505105	Symbol	event_type		504926						
ANR	505106	Symbol	OPJ_FALSE		504926						
ANR	505107	Symbol	cinfo -> client_data		504926						
ANR	505108	Symbol	cinfo		504926						
ANR	505109	Symbol	event_mgr -> error_handler		504926						
ANR	505110	Symbol	MSG_SIZE		504926						
ANR	505111	Symbol	event_mgr		504926						
ANR	505112	Symbol	arg		504926						
ANR	505113	Symbol	cinfo -> event_mgr		504926						
ANR	505114	Symbol	vsnprintf		504926						
ANR	505115	Symbol	OPJ_TRUE		504926						
ANR	505116	Symbol	* cinfo		504926						
