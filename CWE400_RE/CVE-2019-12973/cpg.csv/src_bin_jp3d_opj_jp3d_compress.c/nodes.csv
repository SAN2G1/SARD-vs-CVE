command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	73223	File	data/converged/CVE-2019-12973_openjpeg/src_bin_jp3d_opj_jp3d_compress.c								
ANR	73224	Function	encode_help_display	49:0:2116:9398							
ANR	73225	FunctionDef	encode_help_display ()		73224	0					
ANR	73226	CompoundStatement		50:0:2143:9398	73224	0					
ANR	73227	ExpressionStatement	"fprintf ( stdout , ""List of parameters for the JPEG2000 Part 10 encoder:\\n"" )"	51:4:2149:2222	73224	0	True				
ANR	73228	CallExpression	"fprintf ( stdout , ""List of parameters for the JPEG2000 Part 10 encoder:\\n"" )"		73224	0					
ANR	73229	Callee	fprintf		73224	0					
ANR	73230	Identifier	fprintf		73224	0					
ANR	73231	ArgumentList	stdout		73224	1					
ANR	73232	Argument	stdout		73224	0					
ANR	73233	Identifier	stdout		73224	0					
ANR	73234	Argument	"""List of parameters for the JPEG2000 Part 10 encoder:\\n"""		73224	1					
ANR	73235	PrimaryExpression	"""List of parameters for the JPEG2000 Part 10 encoder:\\n"""		73224	0					
ANR	73236	ExpressionStatement	"fprintf ( stdout , ""------------\\n"" )"	52:4:2228:2261	73224	1	True				
ANR	73237	CallExpression	"fprintf ( stdout , ""------------\\n"" )"		73224	0					
ANR	73238	Callee	fprintf		73224	0					
ANR	73239	Identifier	fprintf		73224	0					
ANR	73240	ArgumentList	stdout		73224	1					
ANR	73241	Argument	stdout		73224	0					
ANR	73242	Identifier	stdout		73224	0					
ANR	73243	Argument	"""------------\\n"""		73224	1					
ANR	73244	PrimaryExpression	"""------------\\n"""		73224	0					
ANR	73245	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	53:4:2267:2288	73224	2	True				
ANR	73246	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73247	Callee	fprintf		73224	0					
ANR	73248	Identifier	fprintf		73224	0					
ANR	73249	ArgumentList	stdout		73224	1					
ANR	73250	Argument	stdout		73224	0					
ANR	73251	Identifier	stdout		73224	0					
ANR	73252	Argument	"""\\n"""		73224	1					
ANR	73253	PrimaryExpression	"""\\n"""		73224	0					
ANR	73254	ExpressionStatement	"fprintf ( stdout , ""Required Parameters (except with -h):\\n"" )"	54:4:2294:2352	73224	3	True				
ANR	73255	CallExpression	"fprintf ( stdout , ""Required Parameters (except with -h):\\n"" )"		73224	0					
ANR	73256	Callee	fprintf		73224	0					
ANR	73257	Identifier	fprintf		73224	0					
ANR	73258	ArgumentList	stdout		73224	1					
ANR	73259	Argument	stdout		73224	0					
ANR	73260	Identifier	stdout		73224	0					
ANR	73261	Argument	"""Required Parameters (except with -h):\\n"""		73224	1					
ANR	73262	PrimaryExpression	"""Required Parameters (except with -h):\\n"""		73224	0					
ANR	73263	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	55:4:2358:2379	73224	4	True				
ANR	73264	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73265	Callee	fprintf		73224	0					
ANR	73266	Identifier	fprintf		73224	0					
ANR	73267	ArgumentList	stdout		73224	1					
ANR	73268	Argument	stdout		73224	0					
ANR	73269	Identifier	stdout		73224	0					
ANR	73270	Argument	"""\\n"""		73224	1					
ANR	73271	PrimaryExpression	"""\\n"""		73224	0					
ANR	73272	ExpressionStatement	"fprintf ( stdout , ""-i           : source file  (-i source.bin or source*.pgx) \\n"" )"	56:4:2385:2477	73224	5	True				
ANR	73273	CallExpression	"fprintf ( stdout , ""-i           : source file  (-i source.bin or source*.pgx) \\n"" )"		73224	0					
ANR	73274	Callee	fprintf		73224	0					
ANR	73275	Identifier	fprintf		73224	0					
ANR	73276	ArgumentList	stdout		73224	1					
ANR	73277	Argument	stdout		73224	0					
ANR	73278	Identifier	stdout		73224	0					
ANR	73279	Argument	"""-i           : source file  (-i source.bin or source*.pgx) \\n"""		73224	1					
ANR	73280	PrimaryExpression	"""-i           : source file  (-i source.bin or source*.pgx) \\n"""		73224	0					
ANR	73281	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	58:4:2483:2504	73224	6	True				
ANR	73282	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73283	Callee	fprintf		73224	0					
ANR	73284	Identifier	fprintf		73224	0					
ANR	73285	ArgumentList	stdout		73224	1					
ANR	73286	Argument	stdout		73224	0					
ANR	73287	Identifier	stdout		73224	0					
ANR	73288	Argument	"""\\n"""		73224	1					
ANR	73289	PrimaryExpression	"""\\n"""		73224	0					
ANR	73290	ExpressionStatement	"fprintf ( stdout , ""-m           : source characteristics file (-m imgfile.img) \\n"" )"	59:4:2510:2603	73224	7	True				
ANR	73291	CallExpression	"fprintf ( stdout , ""-m           : source characteristics file (-m imgfile.img) \\n"" )"		73224	0					
ANR	73292	Callee	fprintf		73224	0					
ANR	73293	Identifier	fprintf		73224	0					
ANR	73294	ArgumentList	stdout		73224	1					
ANR	73295	Argument	stdout		73224	0					
ANR	73296	Identifier	stdout		73224	0					
ANR	73297	Argument	"""-m           : source characteristics file (-m imgfile.img) \\n"""		73224	1					
ANR	73298	PrimaryExpression	"""-m           : source characteristics file (-m imgfile.img) \\n"""		73224	0					
ANR	73299	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	61:4:2609:2630	73224	8	True				
ANR	73300	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73301	Callee	fprintf		73224	0					
ANR	73302	Identifier	fprintf		73224	0					
ANR	73303	ArgumentList	stdout		73224	1					
ANR	73304	Argument	stdout		73224	0					
ANR	73305	Identifier	stdout		73224	0					
ANR	73306	Argument	"""\\n"""		73224	1					
ANR	73307	PrimaryExpression	"""\\n"""		73224	0					
ANR	73308	ExpressionStatement	"fprintf ( stdout , ""-o           : destination file (-o dest.jp3d) \\n"" )"	62:4:2636:2704	73224	9	True				
ANR	73309	CallExpression	"fprintf ( stdout , ""-o           : destination file (-o dest.jp3d) \\n"" )"		73224	0					
ANR	73310	Callee	fprintf		73224	0					
ANR	73311	Identifier	fprintf		73224	0					
ANR	73312	ArgumentList	stdout		73224	1					
ANR	73313	Argument	stdout		73224	0					
ANR	73314	Identifier	stdout		73224	0					
ANR	73315	Argument	"""-o           : destination file (-o dest.jp3d) \\n"""		73224	1					
ANR	73316	PrimaryExpression	"""-o           : destination file (-o dest.jp3d) \\n"""		73224	0					
ANR	73317	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	63:4:2710:2731	73224	10	True				
ANR	73318	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73319	Callee	fprintf		73224	0					
ANR	73320	Identifier	fprintf		73224	0					
ANR	73321	ArgumentList	stdout		73224	1					
ANR	73322	Argument	stdout		73224	0					
ANR	73323	Identifier	stdout		73224	0					
ANR	73324	Argument	"""\\n"""		73224	1					
ANR	73325	PrimaryExpression	"""\\n"""		73224	0					
ANR	73326	ExpressionStatement	"fprintf ( stdout , ""Optional Parameters:\\n"" )"	64:4:2737:2778	73224	11	True				
ANR	73327	CallExpression	"fprintf ( stdout , ""Optional Parameters:\\n"" )"		73224	0					
ANR	73328	Callee	fprintf		73224	0					
ANR	73329	Identifier	fprintf		73224	0					
ANR	73330	ArgumentList	stdout		73224	1					
ANR	73331	Argument	stdout		73224	0					
ANR	73332	Identifier	stdout		73224	0					
ANR	73333	Argument	"""Optional Parameters:\\n"""		73224	1					
ANR	73334	PrimaryExpression	"""Optional Parameters:\\n"""		73224	0					
ANR	73335	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	65:4:2784:2805	73224	12	True				
ANR	73336	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73337	Callee	fprintf		73224	0					
ANR	73338	Identifier	fprintf		73224	0					
ANR	73339	ArgumentList	stdout		73224	1					
ANR	73340	Argument	stdout		73224	0					
ANR	73341	Identifier	stdout		73224	0					
ANR	73342	Argument	"""\\n"""		73224	1					
ANR	73343	PrimaryExpression	"""\\n"""		73224	0					
ANR	73344	ExpressionStatement	"fprintf ( stdout , ""-h           : display the help information \\n "" )"	66:4:2811:2877	73224	13	True				
ANR	73345	CallExpression	"fprintf ( stdout , ""-h           : display the help information \\n "" )"		73224	0					
ANR	73346	Callee	fprintf		73224	0					
ANR	73347	Identifier	fprintf		73224	0					
ANR	73348	ArgumentList	stdout		73224	1					
ANR	73349	Argument	stdout		73224	0					
ANR	73350	Identifier	stdout		73224	0					
ANR	73351	Argument	"""-h           : display the help information \\n """		73224	1					
ANR	73352	PrimaryExpression	"""-h           : display the help information \\n """		73224	0					
ANR	73353	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	67:4:2883:2904	73224	14	True				
ANR	73354	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73355	Callee	fprintf		73224	0					
ANR	73356	Identifier	fprintf		73224	0					
ANR	73357	ArgumentList	stdout		73224	1					
ANR	73358	Argument	stdout		73224	0					
ANR	73359	Identifier	stdout		73224	0					
ANR	73360	Argument	"""\\n"""		73224	1					
ANR	73361	PrimaryExpression	"""\\n"""		73224	0					
ANR	73362	ExpressionStatement	"fprintf ( stdout , ""-n           : number of resolutions (-n 3,3,3) \\n"" )"	68:4:2910:2979	73224	15	True				
ANR	73363	CallExpression	"fprintf ( stdout , ""-n           : number of resolutions (-n 3,3,3) \\n"" )"		73224	0					
ANR	73364	Callee	fprintf		73224	0					
ANR	73365	Identifier	fprintf		73224	0					
ANR	73366	ArgumentList	stdout		73224	1					
ANR	73367	Argument	stdout		73224	0					
ANR	73368	Identifier	stdout		73224	0					
ANR	73369	Argument	"""-n           : number of resolutions (-n 3,3,3) \\n"""		73224	1					
ANR	73370	PrimaryExpression	"""-n           : number of resolutions (-n 3,3,3) \\n"""		73224	0					
ANR	73371	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	69:4:2985:3006	73224	16	True				
ANR	73372	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73373	Callee	fprintf		73224	0					
ANR	73374	Identifier	fprintf		73224	0					
ANR	73375	ArgumentList	stdout		73224	1					
ANR	73376	Argument	stdout		73224	0					
ANR	73377	Identifier	stdout		73224	0					
ANR	73378	Argument	"""\\n"""		73224	1					
ANR	73379	PrimaryExpression	"""\\n"""		73224	0					
ANR	73380	ExpressionStatement	"fprintf ( stdout , ""-I           : use the irreversible transforms: ICT + DWT 9-7 (-I) \\n"" )"	70:4:3012:3112	73224	17	True				
ANR	73381	CallExpression	"fprintf ( stdout , ""-I           : use the irreversible transforms: ICT + DWT 9-7 (-I) \\n"" )"		73224	0					
ANR	73382	Callee	fprintf		73224	0					
ANR	73383	Identifier	fprintf		73224	0					
ANR	73384	ArgumentList	stdout		73224	1					
ANR	73385	Argument	stdout		73224	0					
ANR	73386	Identifier	stdout		73224	0					
ANR	73387	Argument	"""-I           : use the irreversible transforms: ICT + DWT 9-7 (-I) \\n"""		73224	1					
ANR	73388	PrimaryExpression	"""-I           : use the irreversible transforms: ICT + DWT 9-7 (-I) \\n"""		73224	0					
ANR	73389	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	72:4:3118:3139	73224	18	True				
ANR	73390	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73391	Callee	fprintf		73224	0					
ANR	73392	Identifier	fprintf		73224	0					
ANR	73393	ArgumentList	stdout		73224	1					
ANR	73394	Argument	stdout		73224	0					
ANR	73395	Identifier	stdout		73224	0					
ANR	73396	Argument	"""\\n"""		73224	1					
ANR	73397	PrimaryExpression	"""\\n"""		73224	0					
ANR	73398	ExpressionStatement	"fprintf ( stdout , ""-C           : coding algorithm (-C 2EB) [2EB, 3EB] \\n"" )"	73:4:3145:3218	73224	19	True				
ANR	73399	CallExpression	"fprintf ( stdout , ""-C           : coding algorithm (-C 2EB) [2EB, 3EB] \\n"" )"		73224	0					
ANR	73400	Callee	fprintf		73224	0					
ANR	73401	Identifier	fprintf		73224	0					
ANR	73402	ArgumentList	stdout		73224	1					
ANR	73403	Argument	stdout		73224	0					
ANR	73404	Identifier	stdout		73224	0					
ANR	73405	Argument	"""-C           : coding algorithm (-C 2EB) [2EB, 3EB] \\n"""		73224	1					
ANR	73406	PrimaryExpression	"""-C           : coding algorithm (-C 2EB) [2EB, 3EB] \\n"""		73224	0					
ANR	73407	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	74:4:3224:3245	73224	20	True				
ANR	73408	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73409	Callee	fprintf		73224	0					
ANR	73410	Identifier	fprintf		73224	0					
ANR	73411	ArgumentList	stdout		73224	1					
ANR	73412	Argument	stdout		73224	0					
ANR	73413	Identifier	stdout		73224	0					
ANR	73414	Argument	"""\\n"""		73224	1					
ANR	73415	PrimaryExpression	"""\\n"""		73224	0					
ANR	73416	ExpressionStatement	"fprintf ( stdout , ""-r           : different compression ratios for successive layers (-r 20,10,5)\\n "" )"	75:4:3251:3363	73224	21	True				
ANR	73417	CallExpression	"fprintf ( stdout , ""-r           : different compression ratios for successive layers (-r 20,10,5)\\n "" )"		73224	0					
ANR	73418	Callee	fprintf		73224	0					
ANR	73419	Identifier	fprintf		73224	0					
ANR	73420	ArgumentList	stdout		73224	1					
ANR	73421	Argument	stdout		73224	0					
ANR	73422	Identifier	stdout		73224	0					
ANR	73423	Argument	"""-r           : different compression ratios for successive layers (-r 20,10,5)\\n """		73224	1					
ANR	73424	PrimaryExpression	"""-r           : different compression ratios for successive layers (-r 20,10,5)\\n """		73224	0					
ANR	73425	ExpressionStatement	"fprintf ( stdout , ""\\t         - The rate specified for each quality level is the desired compression factor.\\n"" )"	77:4:3369:3490	73224	22	True				
ANR	73426	CallExpression	"fprintf ( stdout , ""\\t         - The rate specified for each quality level is the desired compression factor.\\n"" )"		73224	0					
ANR	73427	Callee	fprintf		73224	0					
ANR	73428	Identifier	fprintf		73224	0					
ANR	73429	ArgumentList	stdout		73224	1					
ANR	73430	Argument	stdout		73224	0					
ANR	73431	Identifier	stdout		73224	0					
ANR	73432	Argument	"""\\t         - The rate specified for each quality level is the desired compression factor.\\n"""		73224	1					
ANR	73433	PrimaryExpression	"""\\t         - The rate specified for each quality level is the desired compression factor.\\n"""		73224	0					
ANR	73434	ExpressionStatement	"fprintf ( stdout , ""\\t         - Rate 1 means lossless compression\\n"" )"	79:4:3496:3562	73224	23	True				
ANR	73435	CallExpression	"fprintf ( stdout , ""\\t         - Rate 1 means lossless compression\\n"" )"		73224	0					
ANR	73436	Callee	fprintf		73224	0					
ANR	73437	Identifier	fprintf		73224	0					
ANR	73438	ArgumentList	stdout		73224	1					
ANR	73439	Argument	stdout		73224	0					
ANR	73440	Identifier	stdout		73224	0					
ANR	73441	Argument	"""\\t         - Rate 1 means lossless compression\\n"""		73224	1					
ANR	73442	PrimaryExpression	"""\\t         - Rate 1 means lossless compression\\n"""		73224	0					
ANR	73443	ExpressionStatement	"fprintf ( stdout , ""               (options -r and -q cannot be used together)\\n "" )"	80:4:3568:3660	73224	24	True				
ANR	73444	CallExpression	"fprintf ( stdout , ""               (options -r and -q cannot be used together)\\n "" )"		73224	0					
ANR	73445	Callee	fprintf		73224	0					
ANR	73446	Identifier	fprintf		73224	0					
ANR	73447	ArgumentList	stdout		73224	1					
ANR	73448	Argument	stdout		73224	0					
ANR	73449	Identifier	stdout		73224	0					
ANR	73450	Argument	"""               (options -r and -q cannot be used together)\\n """		73224	1					
ANR	73451	PrimaryExpression	"""               (options -r and -q cannot be used together)\\n """		73224	0					
ANR	73452	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	82:4:3666:3687	73224	25	True				
ANR	73453	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73454	Callee	fprintf		73224	0					
ANR	73455	Identifier	fprintf		73224	0					
ANR	73456	ArgumentList	stdout		73224	1					
ANR	73457	Argument	stdout		73224	0					
ANR	73458	Identifier	stdout		73224	0					
ANR	73459	Argument	"""\\n"""		73224	1					
ANR	73460	PrimaryExpression	"""\\n"""		73224	0					
ANR	73461	ExpressionStatement	"fprintf ( stdout , ""-q           : different psnr for successive layers (-q 30,40,50) \\n "" )"	83:4:3693:3793	73224	26	True				
ANR	73462	CallExpression	"fprintf ( stdout , ""-q           : different psnr for successive layers (-q 30,40,50) \\n "" )"		73224	0					
ANR	73463	Callee	fprintf		73224	0					
ANR	73464	Identifier	fprintf		73224	0					
ANR	73465	ArgumentList	stdout		73224	1					
ANR	73466	Argument	stdout		73224	0					
ANR	73467	Identifier	stdout		73224	0					
ANR	73468	Argument	"""-q           : different psnr for successive layers (-q 30,40,50) \\n """		73224	1					
ANR	73469	PrimaryExpression	"""-q           : different psnr for successive layers (-q 30,40,50) \\n """		73224	0					
ANR	73470	ExpressionStatement	"fprintf ( stdout , ""               (options -r and -q cannot be used together)\\n "" )"	85:4:3799:3891	73224	27	True				
ANR	73471	CallExpression	"fprintf ( stdout , ""               (options -r and -q cannot be used together)\\n "" )"		73224	0					
ANR	73472	Callee	fprintf		73224	0					
ANR	73473	Identifier	fprintf		73224	0					
ANR	73474	ArgumentList	stdout		73224	1					
ANR	73475	Argument	stdout		73224	0					
ANR	73476	Identifier	stdout		73224	0					
ANR	73477	Argument	"""               (options -r and -q cannot be used together)\\n """		73224	1					
ANR	73478	PrimaryExpression	"""               (options -r and -q cannot be used together)\\n """		73224	0					
ANR	73479	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	87:4:3897:3918	73224	28	True				
ANR	73480	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73481	Callee	fprintf		73224	0					
ANR	73482	Identifier	fprintf		73224	0					
ANR	73483	ArgumentList	stdout		73224	1					
ANR	73484	Argument	stdout		73224	0					
ANR	73485	Identifier	stdout		73224	0					
ANR	73486	Argument	"""\\n"""		73224	1					
ANR	73487	PrimaryExpression	"""\\n"""		73224	0					
ANR	73488	ExpressionStatement	"fprintf ( stdout , ""-b           : size of code block (-b 32,32,32) \\n"" )"	88:4:3924:3993	73224	29	True				
ANR	73489	CallExpression	"fprintf ( stdout , ""-b           : size of code block (-b 32,32,32) \\n"" )"		73224	0					
ANR	73490	Callee	fprintf		73224	0					
ANR	73491	Identifier	fprintf		73224	0					
ANR	73492	ArgumentList	stdout		73224	1					
ANR	73493	Argument	stdout		73224	0					
ANR	73494	Identifier	stdout		73224	0					
ANR	73495	Argument	"""-b           : size of code block (-b 32,32,32) \\n"""		73224	1					
ANR	73496	PrimaryExpression	"""-b           : size of code block (-b 32,32,32) \\n"""		73224	0					
ANR	73497	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	89:4:3999:4020	73224	30	True				
ANR	73498	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73499	Callee	fprintf		73224	0					
ANR	73500	Identifier	fprintf		73224	0					
ANR	73501	ArgumentList	stdout		73224	1					
ANR	73502	Argument	stdout		73224	0					
ANR	73503	Identifier	stdout		73224	0					
ANR	73504	Argument	"""\\n"""		73224	1					
ANR	73505	PrimaryExpression	"""\\n"""		73224	0					
ANR	73506	ExpressionStatement	"fprintf ( stdout , ""-c           : size of precinct (-c 128,128,128) \\n"" )"	90:4:4026:4096	73224	31	True				
ANR	73507	CallExpression	"fprintf ( stdout , ""-c           : size of precinct (-c 128,128,128) \\n"" )"		73224	0					
ANR	73508	Callee	fprintf		73224	0					
ANR	73509	Identifier	fprintf		73224	0					
ANR	73510	ArgumentList	stdout		73224	1					
ANR	73511	Argument	stdout		73224	0					
ANR	73512	Identifier	stdout		73224	0					
ANR	73513	Argument	"""-c           : size of precinct (-c 128,128,128) \\n"""		73224	1					
ANR	73514	PrimaryExpression	"""-c           : size of precinct (-c 128,128,128) \\n"""		73224	0					
ANR	73515	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	91:4:4102:4123	73224	32	True				
ANR	73516	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73517	Callee	fprintf		73224	0					
ANR	73518	Identifier	fprintf		73224	0					
ANR	73519	ArgumentList	stdout		73224	1					
ANR	73520	Argument	stdout		73224	0					
ANR	73521	Identifier	stdout		73224	0					
ANR	73522	Argument	"""\\n"""		73224	1					
ANR	73523	PrimaryExpression	"""\\n"""		73224	0					
ANR	73524	ExpressionStatement	"fprintf ( stdout , ""-t           : size of tile (-t 512,512,512) \\n"" )"	92:4:4129:4195	73224	33	True				
ANR	73525	CallExpression	"fprintf ( stdout , ""-t           : size of tile (-t 512,512,512) \\n"" )"		73224	0					
ANR	73526	Callee	fprintf		73224	0					
ANR	73527	Identifier	fprintf		73224	0					
ANR	73528	ArgumentList	stdout		73224	1					
ANR	73529	Argument	stdout		73224	0					
ANR	73530	Identifier	stdout		73224	0					
ANR	73531	Argument	"""-t           : size of tile (-t 512,512,512) \\n"""		73224	1					
ANR	73532	PrimaryExpression	"""-t           : size of tile (-t 512,512,512) \\n"""		73224	0					
ANR	73533	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	93:4:4201:4222	73224	34	True				
ANR	73534	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73535	Callee	fprintf		73224	0					
ANR	73536	Identifier	fprintf		73224	0					
ANR	73537	ArgumentList	stdout		73224	1					
ANR	73538	Argument	stdout		73224	0					
ANR	73539	Identifier	stdout		73224	0					
ANR	73540	Argument	"""\\n"""		73224	1					
ANR	73541	PrimaryExpression	"""\\n"""		73224	0					
ANR	73542	ExpressionStatement	"fprintf ( stdout , ""-p           : progression order (-p LRCP) [LRCP, RLCP, RPCL, PCRL, CPRL] \\n"" )"	94:4:4228:4335	73224	35	True				
ANR	73543	CallExpression	"fprintf ( stdout , ""-p           : progression order (-p LRCP) [LRCP, RLCP, RPCL, PCRL, CPRL] \\n"" )"		73224	0					
ANR	73544	Callee	fprintf		73224	0					
ANR	73545	Identifier	fprintf		73224	0					
ANR	73546	ArgumentList	stdout		73224	1					
ANR	73547	Argument	stdout		73224	0					
ANR	73548	Identifier	stdout		73224	0					
ANR	73549	Argument	"""-p           : progression order (-p LRCP) [LRCP, RLCP, RPCL, PCRL, CPRL] \\n"""		73224	1					
ANR	73550	PrimaryExpression	"""-p           : progression order (-p LRCP) [LRCP, RLCP, RPCL, PCRL, CPRL] \\n"""		73224	0					
ANR	73551	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	96:4:4341:4362	73224	36	True				
ANR	73552	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73553	Callee	fprintf		73224	0					
ANR	73554	Identifier	fprintf		73224	0					
ANR	73555	ArgumentList	stdout		73224	1					
ANR	73556	Argument	stdout		73224	0					
ANR	73557	Identifier	stdout		73224	0					
ANR	73558	Argument	"""\\n"""		73224	1					
ANR	73559	PrimaryExpression	"""\\n"""		73224	0					
ANR	73560	ExpressionStatement	"fprintf ( stdout , ""-s           : subsampling factor (-s 2,2,2) [-s X,Y,Z] \\n"" )"	97:4:4368:4445	73224	37	True				
ANR	73561	CallExpression	"fprintf ( stdout , ""-s           : subsampling factor (-s 2,2,2) [-s X,Y,Z] \\n"" )"		73224	0					
ANR	73562	Callee	fprintf		73224	0					
ANR	73563	Identifier	fprintf		73224	0					
ANR	73564	ArgumentList	stdout		73224	1					
ANR	73565	Argument	stdout		73224	0					
ANR	73566	Identifier	stdout		73224	0					
ANR	73567	Argument	"""-s           : subsampling factor (-s 2,2,2) [-s X,Y,Z] \\n"""		73224	1					
ANR	73568	PrimaryExpression	"""-s           : subsampling factor (-s 2,2,2) [-s X,Y,Z] \\n"""		73224	0					
ANR	73569	ExpressionStatement	"fprintf ( stdout , ""\\t\\t\\t  - Remark: subsampling bigger than 2 can produce error\\n"" )"	98:4:4451:4530	73224	38	True				
ANR	73570	CallExpression	"fprintf ( stdout , ""\\t\\t\\t  - Remark: subsampling bigger than 2 can produce error\\n"" )"		73224	0					
ANR	73571	Callee	fprintf		73224	0					
ANR	73572	Identifier	fprintf		73224	0					
ANR	73573	ArgumentList	stdout		73224	1					
ANR	73574	Argument	stdout		73224	0					
ANR	73575	Identifier	stdout		73224	0					
ANR	73576	Argument	"""\\t\\t\\t  - Remark: subsampling bigger than 2 can produce error\\n"""		73224	1					
ANR	73577	PrimaryExpression	"""\\t\\t\\t  - Remark: subsampling bigger than 2 can produce error\\n"""		73224	0					
ANR	73578	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	99:4:4536:4557	73224	39	True				
ANR	73579	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73580	Callee	fprintf		73224	0					
ANR	73581	Identifier	fprintf		73224	0					
ANR	73582	ArgumentList	stdout		73224	1					
ANR	73583	Argument	stdout		73224	0					
ANR	73584	Identifier	stdout		73224	0					
ANR	73585	Argument	"""\\n"""		73224	1					
ANR	73586	PrimaryExpression	"""\\n"""		73224	0					
ANR	73587	ExpressionStatement	"fprintf ( stdout , ""-SOP         : write SOP marker before each packet \\n"" )"	100:4:4563:4635	73224	40	True				
ANR	73588	CallExpression	"fprintf ( stdout , ""-SOP         : write SOP marker before each packet \\n"" )"		73224	0					
ANR	73589	Callee	fprintf		73224	0					
ANR	73590	Identifier	fprintf		73224	0					
ANR	73591	ArgumentList	stdout		73224	1					
ANR	73592	Argument	stdout		73224	0					
ANR	73593	Identifier	stdout		73224	0					
ANR	73594	Argument	"""-SOP         : write SOP marker before each packet \\n"""		73224	1					
ANR	73595	PrimaryExpression	"""-SOP         : write SOP marker before each packet \\n"""		73224	0					
ANR	73596	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	101:4:4641:4662	73224	41	True				
ANR	73597	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73598	Callee	fprintf		73224	0					
ANR	73599	Identifier	fprintf		73224	0					
ANR	73600	ArgumentList	stdout		73224	1					
ANR	73601	Argument	stdout		73224	0					
ANR	73602	Identifier	stdout		73224	0					
ANR	73603	Argument	"""\\n"""		73224	1					
ANR	73604	PrimaryExpression	"""\\n"""		73224	0					
ANR	73605	ExpressionStatement	"fprintf ( stdout , ""-EPH         : write EPH marker after each header packet \\n"" )"	102:4:4668:4746	73224	42	True				
ANR	73606	CallExpression	"fprintf ( stdout , ""-EPH         : write EPH marker after each header packet \\n"" )"		73224	0					
ANR	73607	Callee	fprintf		73224	0					
ANR	73608	Identifier	fprintf		73224	0					
ANR	73609	ArgumentList	stdout		73224	1					
ANR	73610	Argument	stdout		73224	0					
ANR	73611	Identifier	stdout		73224	0					
ANR	73612	Argument	"""-EPH         : write EPH marker after each header packet \\n"""		73224	1					
ANR	73613	PrimaryExpression	"""-EPH         : write EPH marker after each header packet \\n"""		73224	0					
ANR	73614	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	103:4:4752:4773	73224	43	True				
ANR	73615	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73616	Callee	fprintf		73224	0					
ANR	73617	Identifier	fprintf		73224	0					
ANR	73618	ArgumentList	stdout		73224	1					
ANR	73619	Argument	stdout		73224	0					
ANR	73620	Identifier	stdout		73224	0					
ANR	73621	Argument	"""\\n"""		73224	1					
ANR	73622	PrimaryExpression	"""\\n"""		73224	0					
ANR	73623	ExpressionStatement	"fprintf ( stdout , ""-M           : code-block style (-M 0) [1=BYPASS(LAZY) 2=RESET 4=RESTART(TERMALL)\\n"" )"	104:4:4779:4893	73224	44	True				
ANR	73624	CallExpression	"fprintf ( stdout , ""-M           : code-block style (-M 0) [1=BYPASS(LAZY) 2=RESET 4=RESTART(TERMALL)\\n"" )"		73224	0					
ANR	73625	Callee	fprintf		73224	0					
ANR	73626	Identifier	fprintf		73224	0					
ANR	73627	ArgumentList	stdout		73224	1					
ANR	73628	Argument	stdout		73224	0					
ANR	73629	Identifier	stdout		73224	0					
ANR	73630	Argument	"""-M           : code-block style (-M 0) [1=BYPASS(LAZY) 2=RESET 4=RESTART(TERMALL)\\n"""		73224	1					
ANR	73631	PrimaryExpression	"""-M           : code-block style (-M 0) [1=BYPASS(LAZY) 2=RESET 4=RESTART(TERMALL)\\n"""		73224	0					
ANR	73632	ExpressionStatement	"fprintf ( stdout , ""                 8=VSC 16=PTERM 32=SEGSYM 64=3DCTXT] \\n"" )"	106:4:4899:4973	73224	45	True				
ANR	73633	CallExpression	"fprintf ( stdout , ""                 8=VSC 16=PTERM 32=SEGSYM 64=3DCTXT] \\n"" )"		73224	0					
ANR	73634	Callee	fprintf		73224	0					
ANR	73635	Identifier	fprintf		73224	0					
ANR	73636	ArgumentList	stdout		73224	1					
ANR	73637	Argument	stdout		73224	0					
ANR	73638	Identifier	stdout		73224	0					
ANR	73639	Argument	"""                 8=VSC 16=PTERM 32=SEGSYM 64=3DCTXT] \\n"""		73224	1					
ANR	73640	PrimaryExpression	"""                 8=VSC 16=PTERM 32=SEGSYM 64=3DCTXT] \\n"""		73224	0					
ANR	73641	ExpressionStatement	"fprintf ( stdout , ""                 Indicate multiple modes by adding their values. \\n"" )"	107:4:4979:5077	73224	46	True				
ANR	73642	CallExpression	"fprintf ( stdout , ""                 Indicate multiple modes by adding their values. \\n"" )"		73224	0					
ANR	73643	Callee	fprintf		73224	0					
ANR	73644	Identifier	fprintf		73224	0					
ANR	73645	ArgumentList	stdout		73224	1					
ANR	73646	Argument	stdout		73224	0					
ANR	73647	Identifier	stdout		73224	0					
ANR	73648	Argument	"""                 Indicate multiple modes by adding their values. \\n"""		73224	1					
ANR	73649	PrimaryExpression	"""                 Indicate multiple modes by adding their values. \\n"""		73224	0					
ANR	73650	ExpressionStatement	"fprintf ( stdout , ""                 ex: RESTART(4) + RESET(2) + SEGMARK(32) = -M 38\\n"" )"	109:4:5083:5180	73224	47	True				
ANR	73651	CallExpression	"fprintf ( stdout , ""                 ex: RESTART(4) + RESET(2) + SEGMARK(32) = -M 38\\n"" )"		73224	0					
ANR	73652	Callee	fprintf		73224	0					
ANR	73653	Identifier	fprintf		73224	0					
ANR	73654	ArgumentList	stdout		73224	1					
ANR	73655	Argument	stdout		73224	0					
ANR	73656	Identifier	stdout		73224	0					
ANR	73657	Argument	"""                 ex: RESTART(4) + RESET(2) + SEGMARK(32) = -M 38\\n"""		73224	1					
ANR	73658	PrimaryExpression	"""                 ex: RESTART(4) + RESET(2) + SEGMARK(32) = -M 38\\n"""		73224	0					
ANR	73659	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	111:4:5186:5207	73224	48	True				
ANR	73660	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73661	Callee	fprintf		73224	0					
ANR	73662	Identifier	fprintf		73224	0					
ANR	73663	ArgumentList	stdout		73224	1					
ANR	73664	Argument	stdout		73224	0					
ANR	73665	Identifier	stdout		73224	0					
ANR	73666	Argument	"""\\n"""		73224	1					
ANR	73667	PrimaryExpression	"""\\n"""		73224	0					
ANR	73668	ExpressionStatement	"fprintf ( stdout , ""-D           : define DC offset (-D 12) \\n"" )"	112:4:5213:5274	73224	49	True				
ANR	73669	CallExpression	"fprintf ( stdout , ""-D           : define DC offset (-D 12) \\n"" )"		73224	0					
ANR	73670	Callee	fprintf		73224	0					
ANR	73671	Identifier	fprintf		73224	0					
ANR	73672	ArgumentList	stdout		73224	1					
ANR	73673	Argument	stdout		73224	0					
ANR	73674	Identifier	stdout		73224	0					
ANR	73675	Argument	"""-D           : define DC offset (-D 12) \\n"""		73224	1					
ANR	73676	PrimaryExpression	"""-D           : define DC offset (-D 12) \\n"""		73224	0					
ANR	73677	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	113:4:5280:5301	73224	50	True				
ANR	73678	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73679	Callee	fprintf		73224	0					
ANR	73680	Identifier	fprintf		73224	0					
ANR	73681	ArgumentList	stdout		73224	1					
ANR	73682	Argument	stdout		73224	0					
ANR	73683	Identifier	stdout		73224	0					
ANR	73684	Argument	"""\\n"""		73224	1					
ANR	73685	PrimaryExpression	"""\\n"""		73224	0					
ANR	73686	ExpressionStatement	"fprintf ( stdout , ""-x           : create an index file *.Idx (-x index_name.Idx) \\n"" )"	114:4:5307:5402	73224	51	True				
ANR	73687	CallExpression	"fprintf ( stdout , ""-x           : create an index file *.Idx (-x index_name.Idx) \\n"" )"		73224	0					
ANR	73688	Callee	fprintf		73224	0					
ANR	73689	Identifier	fprintf		73224	0					
ANR	73690	ArgumentList	stdout		73224	1					
ANR	73691	Argument	stdout		73224	0					
ANR	73692	Identifier	stdout		73224	0					
ANR	73693	Argument	"""-x           : create an index file *.Idx (-x index_name.Idx) \\n"""		73224	1					
ANR	73694	PrimaryExpression	"""-x           : create an index file *.Idx (-x index_name.Idx) \\n"""		73224	0					
ANR	73695	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	116:4:5408:5429	73224	52	True				
ANR	73696	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73697	Callee	fprintf		73224	0					
ANR	73698	Identifier	fprintf		73224	0					
ANR	73699	ArgumentList	stdout		73224	1					
ANR	73700	Argument	stdout		73224	0					
ANR	73701	Identifier	stdout		73224	0					
ANR	73702	Argument	"""\\n"""		73224	1					
ANR	73703	PrimaryExpression	"""\\n"""		73224	0					
ANR	73704	ExpressionStatement	"fprintf ( stdout , ""-ROI         : c=%%d,U=%%d : quantization indices upshifted \\n"" )"	117:4:5435:5528	73224	53	True				
ANR	73705	CallExpression	"fprintf ( stdout , ""-ROI         : c=%%d,U=%%d : quantization indices upshifted \\n"" )"		73224	0					
ANR	73706	Callee	fprintf		73224	0					
ANR	73707	Identifier	fprintf		73224	0					
ANR	73708	ArgumentList	stdout		73224	1					
ANR	73709	Argument	stdout		73224	0					
ANR	73710	Identifier	stdout		73224	0					
ANR	73711	Argument	"""-ROI         : c=%%d,U=%%d : quantization indices upshifted \\n"""		73224	1					
ANR	73712	PrimaryExpression	"""-ROI         : c=%%d,U=%%d : quantization indices upshifted \\n"""		73224	0					
ANR	73713	ExpressionStatement	"fprintf ( stdout , ""               for component c=%%d [%%d = 0,1,2]\\n"" )"	119:4:5534:5603	73224	54	True				
ANR	73714	CallExpression	"fprintf ( stdout , ""               for component c=%%d [%%d = 0,1,2]\\n"" )"		73224	0					
ANR	73715	Callee	fprintf		73224	0					
ANR	73716	Identifier	fprintf		73224	0					
ANR	73717	ArgumentList	stdout		73224	1					
ANR	73718	Argument	stdout		73224	0					
ANR	73719	Identifier	stdout		73224	0					
ANR	73720	Argument	"""               for component c=%%d [%%d = 0,1,2]\\n"""		73224	1					
ANR	73721	PrimaryExpression	"""               for component c=%%d [%%d = 0,1,2]\\n"""		73224	0					
ANR	73722	ExpressionStatement	"fprintf ( stdout , ""               with a value of U=%%d [0 <= %%d <= 37] (i.e. -ROI:c=0,U=25) \\n"" )"	120:4:5609:5717	73224	55	True				
ANR	73723	CallExpression	"fprintf ( stdout , ""               with a value of U=%%d [0 <= %%d <= 37] (i.e. -ROI:c=0,U=25) \\n"" )"		73224	0					
ANR	73724	Callee	fprintf		73224	0					
ANR	73725	Identifier	fprintf		73224	0					
ANR	73726	ArgumentList	stdout		73224	1					
ANR	73727	Argument	stdout		73224	0					
ANR	73728	Identifier	stdout		73224	0					
ANR	73729	Argument	"""               with a value of U=%%d [0 <= %%d <= 37] (i.e. -ROI:c=0,U=25) \\n"""		73224	1					
ANR	73730	PrimaryExpression	"""               with a value of U=%%d [0 <= %%d <= 37] (i.e. -ROI:c=0,U=25) \\n"""		73224	0					
ANR	73731	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	122:4:5723:5744	73224	56	True				
ANR	73732	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73733	Callee	fprintf		73224	0					
ANR	73734	Identifier	fprintf		73224	0					
ANR	73735	ArgumentList	stdout		73224	1					
ANR	73736	Argument	stdout		73224	0					
ANR	73737	Identifier	stdout		73224	0					
ANR	73738	Argument	"""\\n"""		73224	1					
ANR	73739	PrimaryExpression	"""\\n"""		73224	0					
ANR	73740	ExpressionStatement	"fprintf ( stdout , ""-d           : offset of the origin of the volume (-d 150,300,100) \\n"" )"	123:4:5750:5850	73224	57	True				
ANR	73741	CallExpression	"fprintf ( stdout , ""-d           : offset of the origin of the volume (-d 150,300,100) \\n"" )"		73224	0					
ANR	73742	Callee	fprintf		73224	0					
ANR	73743	Identifier	fprintf		73224	0					
ANR	73744	ArgumentList	stdout		73224	1					
ANR	73745	Argument	stdout		73224	0					
ANR	73746	Identifier	stdout		73224	0					
ANR	73747	Argument	"""-d           : offset of the origin of the volume (-d 150,300,100) \\n"""		73224	1					
ANR	73748	PrimaryExpression	"""-d           : offset of the origin of the volume (-d 150,300,100) \\n"""		73224	0					
ANR	73749	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	125:4:5856:5877	73224	58	True				
ANR	73750	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73751	Callee	fprintf		73224	0					
ANR	73752	Identifier	fprintf		73224	0					
ANR	73753	ArgumentList	stdout		73224	1					
ANR	73754	Argument	stdout		73224	0					
ANR	73755	Identifier	stdout		73224	0					
ANR	73756	Argument	"""\\n"""		73224	1					
ANR	73757	PrimaryExpression	"""\\n"""		73224	0					
ANR	73758	ExpressionStatement	"fprintf ( stdout , ""-l           : offset of the origin of the tiles (-l 100,75,25) \\n"" )"	126:4:5883:5980	73224	59	True				
ANR	73759	CallExpression	"fprintf ( stdout , ""-l           : offset of the origin of the tiles (-l 100,75,25) \\n"" )"		73224	0					
ANR	73760	Callee	fprintf		73224	0					
ANR	73761	Identifier	fprintf		73224	0					
ANR	73762	ArgumentList	stdout		73224	1					
ANR	73763	Argument	stdout		73224	0					
ANR	73764	Identifier	stdout		73224	0					
ANR	73765	Argument	"""-l           : offset of the origin of the tiles (-l 100,75,25) \\n"""		73224	1					
ANR	73766	PrimaryExpression	"""-l           : offset of the origin of the tiles (-l 100,75,25) \\n"""		73224	0					
ANR	73767	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	128:4:5986:6007	73224	60	True				
ANR	73768	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73769	Callee	fprintf		73224	0					
ANR	73770	Identifier	fprintf		73224	0					
ANR	73771	ArgumentList	stdout		73224	1					
ANR	73772	Argument	stdout		73224	0					
ANR	73773	Identifier	stdout		73224	0					
ANR	73774	Argument	"""\\n"""		73224	1					
ANR	73775	PrimaryExpression	"""\\n"""		73224	0					
ANR	73776	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	129:4:6013:6034	73224	61	True				
ANR	73777	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73778	Callee	fprintf		73224	0					
ANR	73779	Identifier	fprintf		73224	0					
ANR	73780	ArgumentList	stdout		73224	1					
ANR	73781	Argument	stdout		73224	0					
ANR	73782	Identifier	stdout		73224	0					
ANR	73783	Argument	"""\\n"""		73224	1					
ANR	73784	PrimaryExpression	"""\\n"""		73224	0					
ANR	73785	ExpressionStatement	"fprintf ( stdout , ""DEFAULT CODING:\\n"" )"	130:4:6040:6076	73224	62	True				
ANR	73786	CallExpression	"fprintf ( stdout , ""DEFAULT CODING:\\n"" )"		73224	0					
ANR	73787	Callee	fprintf		73224	0					
ANR	73788	Identifier	fprintf		73224	0					
ANR	73789	ArgumentList	stdout		73224	1					
ANR	73790	Argument	stdout		73224	0					
ANR	73791	Identifier	stdout		73224	0					
ANR	73792	Argument	"""DEFAULT CODING:\\n"""		73224	1					
ANR	73793	PrimaryExpression	"""DEFAULT CODING:\\n"""		73224	0					
ANR	73794	ExpressionStatement	"fprintf ( stdout , ""------------\\n"" )"	131:4:6082:6115	73224	63	True				
ANR	73795	CallExpression	"fprintf ( stdout , ""------------\\n"" )"		73224	0					
ANR	73796	Callee	fprintf		73224	0					
ANR	73797	Identifier	fprintf		73224	0					
ANR	73798	ArgumentList	stdout		73224	1					
ANR	73799	Argument	stdout		73224	0					
ANR	73800	Identifier	stdout		73224	0					
ANR	73801	Argument	"""------------\\n"""		73224	1					
ANR	73802	PrimaryExpression	"""------------\\n"""		73224	0					
ANR	73803	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	132:4:6121:6142	73224	64	True				
ANR	73804	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73805	Callee	fprintf		73224	0					
ANR	73806	Identifier	fprintf		73224	0					
ANR	73807	ArgumentList	stdout		73224	1					
ANR	73808	Argument	stdout		73224	0					
ANR	73809	Identifier	stdout		73224	0					
ANR	73810	Argument	"""\\n"""		73224	1					
ANR	73811	PrimaryExpression	"""\\n"""		73224	0					
ANR	73812	ExpressionStatement	"fprintf ( stdout , "" * Lossless\\n"" )"	133:4:6148:6180	73224	65	True				
ANR	73813	CallExpression	"fprintf ( stdout , "" * Lossless\\n"" )"		73224	0					
ANR	73814	Callee	fprintf		73224	0					
ANR	73815	Identifier	fprintf		73224	0					
ANR	73816	ArgumentList	stdout		73224	1					
ANR	73817	Argument	stdout		73224	0					
ANR	73818	Identifier	stdout		73224	0					
ANR	73819	Argument	""" * Lossless\\n"""		73224	1					
ANR	73820	PrimaryExpression	""" * Lossless\\n"""		73224	0					
ANR	73821	ExpressionStatement	"fprintf ( stdout , "" * 1 tile\\n"" )"	134:4:6186:6216	73224	66	True				
ANR	73822	CallExpression	"fprintf ( stdout , "" * 1 tile\\n"" )"		73224	0					
ANR	73823	Callee	fprintf		73224	0					
ANR	73824	Identifier	fprintf		73224	0					
ANR	73825	ArgumentList	stdout		73224	1					
ANR	73826	Argument	stdout		73224	0					
ANR	73827	Identifier	stdout		73224	0					
ANR	73828	Argument	""" * 1 tile\\n"""		73224	1					
ANR	73829	PrimaryExpression	""" * 1 tile\\n"""		73224	0					
ANR	73830	ExpressionStatement	"fprintf ( stdout , "" * Size of precinct : 2^15 x 2^15 x 2^15 (means 1 precinct)\\n"" )"	135:4:6222:6314	73224	67	True				
ANR	73831	CallExpression	"fprintf ( stdout , "" * Size of precinct : 2^15 x 2^15 x 2^15 (means 1 precinct)\\n"" )"		73224	0					
ANR	73832	Callee	fprintf		73224	0					
ANR	73833	Identifier	fprintf		73224	0					
ANR	73834	ArgumentList	stdout		73224	1					
ANR	73835	Argument	stdout		73224	0					
ANR	73836	Identifier	stdout		73224	0					
ANR	73837	Argument	""" * Size of precinct : 2^15 x 2^15 x 2^15 (means 1 precinct)\\n"""		73224	1					
ANR	73838	PrimaryExpression	""" * Size of precinct : 2^15 x 2^15 x 2^15 (means 1 precinct)\\n"""		73224	0					
ANR	73839	ExpressionStatement	"fprintf ( stdout , "" * Size of code-block : 64 x 64 x 64\\n"" )"	137:4:6320:6377	73224	68	True				
ANR	73840	CallExpression	"fprintf ( stdout , "" * Size of code-block : 64 x 64 x 64\\n"" )"		73224	0					
ANR	73841	Callee	fprintf		73224	0					
ANR	73842	Identifier	fprintf		73224	0					
ANR	73843	ArgumentList	stdout		73224	1					
ANR	73844	Argument	stdout		73224	0					
ANR	73845	Identifier	stdout		73224	0					
ANR	73846	Argument	""" * Size of code-block : 64 x 64 x 64\\n"""		73224	1					
ANR	73847	PrimaryExpression	""" * Size of code-block : 64 x 64 x 64\\n"""		73224	0					
ANR	73848	ExpressionStatement	"fprintf ( stdout , "" * Number of resolutions in x, y and z axis: 3\\n"" )"	138:4:6383:6450	73224	69	True				
ANR	73849	CallExpression	"fprintf ( stdout , "" * Number of resolutions in x, y and z axis: 3\\n"" )"		73224	0					
ANR	73850	Callee	fprintf		73224	0					
ANR	73851	Identifier	fprintf		73224	0					
ANR	73852	ArgumentList	stdout		73224	1					
ANR	73853	Argument	stdout		73224	0					
ANR	73854	Identifier	stdout		73224	0					
ANR	73855	Argument	""" * Number of resolutions in x, y and z axis: 3\\n"""		73224	1					
ANR	73856	PrimaryExpression	""" * Number of resolutions in x, y and z axis: 3\\n"""		73224	0					
ANR	73857	ExpressionStatement	"fprintf ( stdout , "" * No SOP marker in the codestream\\n"" )"	139:4:6456:6511	73224	70	True				
ANR	73858	CallExpression	"fprintf ( stdout , "" * No SOP marker in the codestream\\n"" )"		73224	0					
ANR	73859	Callee	fprintf		73224	0					
ANR	73860	Identifier	fprintf		73224	0					
ANR	73861	ArgumentList	stdout		73224	1					
ANR	73862	Argument	stdout		73224	0					
ANR	73863	Identifier	stdout		73224	0					
ANR	73864	Argument	""" * No SOP marker in the codestream\\n"""		73224	1					
ANR	73865	PrimaryExpression	""" * No SOP marker in the codestream\\n"""		73224	0					
ANR	73866	ExpressionStatement	"fprintf ( stdout , "" * No EPH marker in the codestream\\n"" )"	140:4:6517:6572	73224	71	True				
ANR	73867	CallExpression	"fprintf ( stdout , "" * No EPH marker in the codestream\\n"" )"		73224	0					
ANR	73868	Callee	fprintf		73224	0					
ANR	73869	Identifier	fprintf		73224	0					
ANR	73870	ArgumentList	stdout		73224	1					
ANR	73871	Argument	stdout		73224	0					
ANR	73872	Identifier	stdout		73224	0					
ANR	73873	Argument	""" * No EPH marker in the codestream\\n"""		73224	1					
ANR	73874	PrimaryExpression	""" * No EPH marker in the codestream\\n"""		73224	0					
ANR	73875	ExpressionStatement	"fprintf ( stdout , "" * No sub-sampling in x, y or z direction\\n"" )"	141:4:6578:6640	73224	72	True				
ANR	73876	CallExpression	"fprintf ( stdout , "" * No sub-sampling in x, y or z direction\\n"" )"		73224	0					
ANR	73877	Callee	fprintf		73224	0					
ANR	73878	Identifier	fprintf		73224	0					
ANR	73879	ArgumentList	stdout		73224	1					
ANR	73880	Argument	stdout		73224	0					
ANR	73881	Identifier	stdout		73224	0					
ANR	73882	Argument	""" * No sub-sampling in x, y or z direction\\n"""		73224	1					
ANR	73883	PrimaryExpression	""" * No sub-sampling in x, y or z direction\\n"""		73224	0					
ANR	73884	ExpressionStatement	"fprintf ( stdout , "" * No mode switch activated\\n"" )"	142:4:6646:6694	73224	73	True				
ANR	73885	CallExpression	"fprintf ( stdout , "" * No mode switch activated\\n"" )"		73224	0					
ANR	73886	Callee	fprintf		73224	0					
ANR	73887	Identifier	fprintf		73224	0					
ANR	73888	ArgumentList	stdout		73224	1					
ANR	73889	Argument	stdout		73224	0					
ANR	73890	Identifier	stdout		73224	0					
ANR	73891	Argument	""" * No mode switch activated\\n"""		73224	1					
ANR	73892	PrimaryExpression	""" * No mode switch activated\\n"""		73224	0					
ANR	73893	ExpressionStatement	"fprintf ( stdout , "" * Progression order: LRCP\\n"" )"	143:4:6700:6747	73224	74	True				
ANR	73894	CallExpression	"fprintf ( stdout , "" * Progression order: LRCP\\n"" )"		73224	0					
ANR	73895	Callee	fprintf		73224	0					
ANR	73896	Identifier	fprintf		73224	0					
ANR	73897	ArgumentList	stdout		73224	1					
ANR	73898	Argument	stdout		73224	0					
ANR	73899	Identifier	stdout		73224	0					
ANR	73900	Argument	""" * Progression order: LRCP\\n"""		73224	1					
ANR	73901	PrimaryExpression	""" * Progression order: LRCP\\n"""		73224	0					
ANR	73902	ExpressionStatement	"fprintf ( stdout , "" * No index file\\n"" )"	144:4:6753:6790	73224	75	True				
ANR	73903	CallExpression	"fprintf ( stdout , "" * No index file\\n"" )"		73224	0					
ANR	73904	Callee	fprintf		73224	0					
ANR	73905	Identifier	fprintf		73224	0					
ANR	73906	ArgumentList	stdout		73224	1					
ANR	73907	Argument	stdout		73224	0					
ANR	73908	Identifier	stdout		73224	0					
ANR	73909	Argument	""" * No index file\\n"""		73224	1					
ANR	73910	PrimaryExpression	""" * No index file\\n"""		73224	0					
ANR	73911	ExpressionStatement	"fprintf ( stdout , "" * No ROI upshifted\\n"" )"	145:4:6796:6836	73224	76	True				
ANR	73912	CallExpression	"fprintf ( stdout , "" * No ROI upshifted\\n"" )"		73224	0					
ANR	73913	Callee	fprintf		73224	0					
ANR	73914	Identifier	fprintf		73224	0					
ANR	73915	ArgumentList	stdout		73224	1					
ANR	73916	Argument	stdout		73224	0					
ANR	73917	Identifier	stdout		73224	0					
ANR	73918	Argument	""" * No ROI upshifted\\n"""		73224	1					
ANR	73919	PrimaryExpression	""" * No ROI upshifted\\n"""		73224	0					
ANR	73920	ExpressionStatement	"fprintf ( stdout , "" * No offset of the origin of the volume\\n"" )"	146:4:6842:6903	73224	77	True				
ANR	73921	CallExpression	"fprintf ( stdout , "" * No offset of the origin of the volume\\n"" )"		73224	0					
ANR	73922	Callee	fprintf		73224	0					
ANR	73923	Identifier	fprintf		73224	0					
ANR	73924	ArgumentList	stdout		73224	1					
ANR	73925	Argument	stdout		73224	0					
ANR	73926	Identifier	stdout		73224	0					
ANR	73927	Argument	""" * No offset of the origin of the volume\\n"""		73224	1					
ANR	73928	PrimaryExpression	""" * No offset of the origin of the volume\\n"""		73224	0					
ANR	73929	ExpressionStatement	"fprintf ( stdout , "" * No offset of the origin of the tiles\\n"" )"	147:4:6909:6969	73224	78	True				
ANR	73930	CallExpression	"fprintf ( stdout , "" * No offset of the origin of the tiles\\n"" )"		73224	0					
ANR	73931	Callee	fprintf		73224	0					
ANR	73932	Identifier	fprintf		73224	0					
ANR	73933	ArgumentList	stdout		73224	1					
ANR	73934	Argument	stdout		73224	0					
ANR	73935	Identifier	stdout		73224	0					
ANR	73936	Argument	""" * No offset of the origin of the tiles\\n"""		73224	1					
ANR	73937	PrimaryExpression	""" * No offset of the origin of the tiles\\n"""		73224	0					
ANR	73938	ExpressionStatement	"fprintf ( stdout , "" * Reversible DWT 5-3 on each 2D slice\\n"" )"	148:4:6975:7034	73224	79	True				
ANR	73939	CallExpression	"fprintf ( stdout , "" * Reversible DWT 5-3 on each 2D slice\\n"" )"		73224	0					
ANR	73940	Callee	fprintf		73224	0					
ANR	73941	Identifier	fprintf		73224	0					
ANR	73942	ArgumentList	stdout		73224	1					
ANR	73943	Argument	stdout		73224	0					
ANR	73944	Identifier	stdout		73224	0					
ANR	73945	Argument	""" * Reversible DWT 5-3 on each 2D slice\\n"""		73224	1					
ANR	73946	PrimaryExpression	""" * Reversible DWT 5-3 on each 2D slice\\n"""		73224	0					
ANR	73947	ExpressionStatement	"fprintf ( stdout , "" * Coding algorithm: 2D-EBCOT \\n"" )"	149:4:7040:7091	73224	80	True				
ANR	73948	CallExpression	"fprintf ( stdout , "" * Coding algorithm: 2D-EBCOT \\n"" )"		73224	0					
ANR	73949	Callee	fprintf		73224	0					
ANR	73950	Identifier	fprintf		73224	0					
ANR	73951	ArgumentList	stdout		73224	1					
ANR	73952	Argument	stdout		73224	0					
ANR	73953	Identifier	stdout		73224	0					
ANR	73954	Argument	""" * Coding algorithm: 2D-EBCOT \\n"""		73224	1					
ANR	73955	PrimaryExpression	""" * Coding algorithm: 2D-EBCOT \\n"""		73224	0					
ANR	73956	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	150:4:7097:7118	73224	81	True				
ANR	73957	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73958	Callee	fprintf		73224	0					
ANR	73959	Identifier	fprintf		73224	0					
ANR	73960	ArgumentList	stdout		73224	1					
ANR	73961	Argument	stdout		73224	0					
ANR	73962	Identifier	stdout		73224	0					
ANR	73963	Argument	"""\\n"""		73224	1					
ANR	73964	PrimaryExpression	"""\\n"""		73224	0					
ANR	73965	ExpressionStatement	"fprintf ( stdout , ""REMARKS:\\n"" )"	151:4:7124:7153	73224	82	True				
ANR	73966	CallExpression	"fprintf ( stdout , ""REMARKS:\\n"" )"		73224	0					
ANR	73967	Callee	fprintf		73224	0					
ANR	73968	Identifier	fprintf		73224	0					
ANR	73969	ArgumentList	stdout		73224	1					
ANR	73970	Argument	stdout		73224	0					
ANR	73971	Identifier	stdout		73224	0					
ANR	73972	Argument	"""REMARKS:\\n"""		73224	1					
ANR	73973	PrimaryExpression	"""REMARKS:\\n"""		73224	0					
ANR	73974	ExpressionStatement	"fprintf ( stdout , ""---------\\n"" )"	152:4:7159:7189	73224	83	True				
ANR	73975	CallExpression	"fprintf ( stdout , ""---------\\n"" )"		73224	0					
ANR	73976	Callee	fprintf		73224	0					
ANR	73977	Identifier	fprintf		73224	0					
ANR	73978	ArgumentList	stdout		73224	1					
ANR	73979	Argument	stdout		73224	0					
ANR	73980	Identifier	stdout		73224	0					
ANR	73981	Argument	"""---------\\n"""		73224	1					
ANR	73982	PrimaryExpression	"""---------\\n"""		73224	0					
ANR	73983	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	153:4:7195:7216	73224	84	True				
ANR	73984	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	73985	Callee	fprintf		73224	0					
ANR	73986	Identifier	fprintf		73224	0					
ANR	73987	ArgumentList	stdout		73224	1					
ANR	73988	Argument	stdout		73224	0					
ANR	73989	Identifier	stdout		73224	0					
ANR	73990	Argument	"""\\n"""		73224	1					
ANR	73991	PrimaryExpression	"""\\n"""		73224	0					
ANR	73992	ExpressionStatement	"fprintf ( stdout , ""- The markers written to the main_header are : SOC SIZ COD QCD COM.\\n"" )"	154:4:7222:7322	73224	85	True				
ANR	73993	CallExpression	"fprintf ( stdout , ""- The markers written to the main_header are : SOC SIZ COD QCD COM.\\n"" )"		73224	0					
ANR	73994	Callee	fprintf		73224	0					
ANR	73995	Identifier	fprintf		73224	0					
ANR	73996	ArgumentList	stdout		73224	1					
ANR	73997	Argument	stdout		73224	0					
ANR	73998	Identifier	stdout		73224	0					
ANR	73999	Argument	"""- The markers written to the main_header are : SOC SIZ COD QCD COM.\\n"""		73224	1					
ANR	74000	PrimaryExpression	"""- The markers written to the main_header are : SOC SIZ COD QCD COM.\\n"""		73224	0					
ANR	74001	ExpressionStatement	"fprintf ( stdout , ""- COD and QCD markers will never appear in the tile_header.\\n"" )"	156:4:7328:7420	73224	86	True				
ANR	74002	CallExpression	"fprintf ( stdout , ""- COD and QCD markers will never appear in the tile_header.\\n"" )"		73224	0					
ANR	74003	Callee	fprintf		73224	0					
ANR	74004	Identifier	fprintf		73224	0					
ANR	74005	ArgumentList	stdout		73224	1					
ANR	74006	Argument	stdout		73224	0					
ANR	74007	Identifier	stdout		73224	0					
ANR	74008	Argument	"""- COD and QCD markers will never appear in the tile_header.\\n"""		73224	1					
ANR	74009	PrimaryExpression	"""- COD and QCD markers will never appear in the tile_header.\\n"""		73224	0					
ANR	74010	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	158:4:7426:7447	73224	87	True				
ANR	74011	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	74012	Callee	fprintf		73224	0					
ANR	74013	Identifier	fprintf		73224	0					
ANR	74014	ArgumentList	stdout		73224	1					
ANR	74015	Argument	stdout		73224	0					
ANR	74016	Identifier	stdout		73224	0					
ANR	74017	Argument	"""\\n"""		73224	1					
ANR	74018	PrimaryExpression	"""\\n"""		73224	0					
ANR	74019	ExpressionStatement	"fprintf ( stdout , ""- You need enough disk space memory (twice the original) to encode \\n"" )"	159:4:7453:7553	73224	88	True				
ANR	74020	CallExpression	"fprintf ( stdout , ""- You need enough disk space memory (twice the original) to encode \\n"" )"		73224	0					
ANR	74021	Callee	fprintf		73224	0					
ANR	74022	Identifier	fprintf		73224	0					
ANR	74023	ArgumentList	stdout		73224	1					
ANR	74024	Argument	stdout		73224	0					
ANR	74025	Identifier	stdout		73224	0					
ANR	74026	Argument	"""- You need enough disk space memory (twice the original) to encode \\n"""		73224	1					
ANR	74027	PrimaryExpression	"""- You need enough disk space memory (twice the original) to encode \\n"""		73224	0					
ANR	74028	ExpressionStatement	"fprintf ( stdout , ""the volume,i.e. for a 1.5 GB volume you need a minimum of 3GB of disk memory)\\n"" )"	161:4:7559:7669	73224	89	True				
ANR	74029	CallExpression	"fprintf ( stdout , ""the volume,i.e. for a 1.5 GB volume you need a minimum of 3GB of disk memory)\\n"" )"		73224	0					
ANR	74030	Callee	fprintf		73224	0					
ANR	74031	Identifier	fprintf		73224	0					
ANR	74032	ArgumentList	stdout		73224	1					
ANR	74033	Argument	stdout		73224	0					
ANR	74034	Identifier	stdout		73224	0					
ANR	74035	Argument	"""the volume,i.e. for a 1.5 GB volume you need a minimum of 3GB of disk memory)\\n"""		73224	1					
ANR	74036	PrimaryExpression	"""the volume,i.e. for a 1.5 GB volume you need a minimum of 3GB of disk memory)\\n"""		73224	0					
ANR	74037	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	163:4:7675:7696	73224	90	True				
ANR	74038	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	74039	Callee	fprintf		73224	0					
ANR	74040	Identifier	fprintf		73224	0					
ANR	74041	ArgumentList	stdout		73224	1					
ANR	74042	Argument	stdout		73224	0					
ANR	74043	Identifier	stdout		73224	0					
ANR	74044	Argument	"""\\n"""		73224	1					
ANR	74045	PrimaryExpression	"""\\n"""		73224	0					
ANR	74046	ExpressionStatement	"fprintf ( stdout , ""- When loading *.pgx files, a relative path to directory is needed for input argument \\n"" )"	164:4:7702:7821	73224	91	True				
ANR	74047	CallExpression	"fprintf ( stdout , ""- When loading *.pgx files, a relative path to directory is needed for input argument \\n"" )"		73224	0					
ANR	74048	Callee	fprintf		73224	0					
ANR	74049	Identifier	fprintf		73224	0					
ANR	74050	ArgumentList	stdout		73224	1					
ANR	74051	Argument	stdout		73224	0					
ANR	74052	Identifier	stdout		73224	0					
ANR	74053	Argument	"""- When loading *.pgx files, a relative path to directory is needed for input argument \\n"""		73224	1					
ANR	74054	PrimaryExpression	"""- When loading *.pgx files, a relative path to directory is needed for input argument \\n"""		73224	0					
ANR	74055	ExpressionStatement	"fprintf ( stdout , "" followed by the common prefix of the slices and a '*' character representing sequential numeration.\\n"" )"	166:4:7827:7960	73224	92	True				
ANR	74056	CallExpression	"fprintf ( stdout , "" followed by the common prefix of the slices and a '*' character representing sequential numeration.\\n"" )"		73224	0					
ANR	74057	Callee	fprintf		73224	0					
ANR	74058	Identifier	fprintf		73224	0					
ANR	74059	ArgumentList	stdout		73224	1					
ANR	74060	Argument	stdout		73224	0					
ANR	74061	Identifier	stdout		73224	0					
ANR	74062	Argument	""" followed by the common prefix of the slices and a '*' character representing sequential numeration.\\n"""		73224	1					
ANR	74063	PrimaryExpression	""" followed by the common prefix of the slices and a '*' character representing sequential numeration.\\n"""		73224	0					
ANR	74064	ExpressionStatement	"fprintf ( stdout , ""( -i relativepath/slices*.pgx )\\n"" )"	168:4:7966:8018	73224	93	True				
ANR	74065	CallExpression	"fprintf ( stdout , ""( -i relativepath/slices*.pgx )\\n"" )"		73224	0					
ANR	74066	Callee	fprintf		73224	0					
ANR	74067	Identifier	fprintf		73224	0					
ANR	74068	ArgumentList	stdout		73224	1					
ANR	74069	Argument	stdout		73224	0					
ANR	74070	Identifier	stdout		73224	0					
ANR	74071	Argument	"""( -i relativepath/slices*.pgx )\\n"""		73224	1					
ANR	74072	PrimaryExpression	"""( -i relativepath/slices*.pgx )\\n"""		73224	0					
ANR	74073	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	169:4:8024:8045	73224	94	True				
ANR	74074	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	74075	Callee	fprintf		73224	0					
ANR	74076	Identifier	fprintf		73224	0					
ANR	74077	ArgumentList	stdout		73224	1					
ANR	74078	Argument	stdout		73224	0					
ANR	74079	Identifier	stdout		73224	0					
ANR	74080	Argument	"""\\n"""		73224	1					
ANR	74081	PrimaryExpression	"""\\n"""		73224	0					
ANR	74082	ExpressionStatement	"fprintf ( stdout , "" - The index file has the structure below:\\n"" )"	170:4:8051:8114	73224	95	True				
ANR	74083	CallExpression	"fprintf ( stdout , "" - The index file has the structure below:\\n"" )"		73224	0					
ANR	74084	Callee	fprintf		73224	0					
ANR	74085	Identifier	fprintf		73224	0					
ANR	74086	ArgumentList	stdout		73224	1					
ANR	74087	Argument	stdout		73224	0					
ANR	74088	Identifier	stdout		73224	0					
ANR	74089	Argument	""" - The index file has the structure below:\\n"""		73224	1					
ANR	74090	PrimaryExpression	""" - The index file has the structure below:\\n"""		73224	0					
ANR	74091	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	171:4:8120:8141	73224	96	True				
ANR	74092	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	74093	Callee	fprintf		73224	0					
ANR	74094	Identifier	fprintf		73224	0					
ANR	74095	ArgumentList	stdout		73224	1					
ANR	74096	Argument	stdout		73224	0					
ANR	74097	Identifier	stdout		73224	0					
ANR	74098	Argument	"""\\n"""		73224	1					
ANR	74099	PrimaryExpression	"""\\n"""		73224	0					
ANR	74100	ExpressionStatement	"fprintf ( stdout , ""\\t\\tImage_height Image_width Image_depth\\n"" )"	172:4:8147:8207	73224	97	True				
ANR	74101	CallExpression	"fprintf ( stdout , ""\\t\\tImage_height Image_width Image_depth\\n"" )"		73224	0					
ANR	74102	Callee	fprintf		73224	0					
ANR	74103	Identifier	fprintf		73224	0					
ANR	74104	ArgumentList	stdout		73224	1					
ANR	74105	Argument	stdout		73224	0					
ANR	74106	Identifier	stdout		73224	0					
ANR	74107	Argument	"""\\t\\tImage_height Image_width Image_depth\\n"""		73224	1					
ANR	74108	PrimaryExpression	"""\\t\\tImage_height Image_width Image_depth\\n"""		73224	0					
ANR	74109	ExpressionStatement	"fprintf ( stdout , ""\\t\\tProgression order: 0 (LRCP)\\n"" )"	173:4:8213:8264	73224	98	True				
ANR	74110	CallExpression	"fprintf ( stdout , ""\\t\\tProgression order: 0 (LRCP)\\n"" )"		73224	0					
ANR	74111	Callee	fprintf		73224	0					
ANR	74112	Identifier	fprintf		73224	0					
ANR	74113	ArgumentList	stdout		73224	1					
ANR	74114	Argument	stdout		73224	0					
ANR	74115	Identifier	stdout		73224	0					
ANR	74116	Argument	"""\\t\\tProgression order: 0 (LRCP)\\n"""		73224	1					
ANR	74117	PrimaryExpression	"""\\t\\tProgression order: 0 (LRCP)\\n"""		73224	0					
ANR	74118	ExpressionStatement	"fprintf ( stdout , ""\\t\\tTiles_size_X Tiles_size_Y Tiles_size_Z\\n"" )"	174:4:8270:8332	73224	99	True				
ANR	74119	CallExpression	"fprintf ( stdout , ""\\t\\tTiles_size_X Tiles_size_Y Tiles_size_Z\\n"" )"		73224	0					
ANR	74120	Callee	fprintf		73224	0					
ANR	74121	Identifier	fprintf		73224	0					
ANR	74122	ArgumentList	stdout		73224	1					
ANR	74123	Argument	stdout		73224	0					
ANR	74124	Identifier	stdout		73224	0					
ANR	74125	Argument	"""\\t\\tTiles_size_X Tiles_size_Y Tiles_size_Z\\n"""		73224	1					
ANR	74126	PrimaryExpression	"""\\t\\tTiles_size_X Tiles_size_Y Tiles_size_Z\\n"""		73224	0					
ANR	74127	ExpressionStatement	"fprintf ( stdout , ""\\t\\tComponents_nb\\n"" )"	175:4:8338:8375	73224	100	True				
ANR	74128	CallExpression	"fprintf ( stdout , ""\\t\\tComponents_nb\\n"" )"		73224	0					
ANR	74129	Callee	fprintf		73224	0					
ANR	74130	Identifier	fprintf		73224	0					
ANR	74131	ArgumentList	stdout		73224	1					
ANR	74132	Argument	stdout		73224	0					
ANR	74133	Identifier	stdout		73224	0					
ANR	74134	Argument	"""\\t\\tComponents_nb\\n"""		73224	1					
ANR	74135	PrimaryExpression	"""\\t\\tComponents_nb\\n"""		73224	0					
ANR	74136	ExpressionStatement	"fprintf ( stdout , ""\\t\\tLayers_nb\\n"" )"	176:4:8381:8414	73224	101	True				
ANR	74137	CallExpression	"fprintf ( stdout , ""\\t\\tLayers_nb\\n"" )"		73224	0					
ANR	74138	Callee	fprintf		73224	0					
ANR	74139	Identifier	fprintf		73224	0					
ANR	74140	ArgumentList	stdout		73224	1					
ANR	74141	Argument	stdout		73224	0					
ANR	74142	Identifier	stdout		73224	0					
ANR	74143	Argument	"""\\t\\tLayers_nb\\n"""		73224	1					
ANR	74144	PrimaryExpression	"""\\t\\tLayers_nb\\n"""		73224	0					
ANR	74145	ExpressionStatement	"fprintf ( stdout , ""\\t\\tDecomposition_levels\\n"" )"	177:4:8420:8464	73224	102	True				
ANR	74146	CallExpression	"fprintf ( stdout , ""\\t\\tDecomposition_levels\\n"" )"		73224	0					
ANR	74147	Callee	fprintf		73224	0					
ANR	74148	Identifier	fprintf		73224	0					
ANR	74149	ArgumentList	stdout		73224	1					
ANR	74150	Argument	stdout		73224	0					
ANR	74151	Identifier	stdout		73224	0					
ANR	74152	Argument	"""\\t\\tDecomposition_levels\\n"""		73224	1					
ANR	74153	PrimaryExpression	"""\\t\\tDecomposition_levels\\n"""		73224	0					
ANR	74154	ExpressionStatement	"fprintf ( stdout , ""\\t\\t[Precincts_size_X_res_Nr Precincts_size_Y_res_Nr Precincts_size_Z_res_Nr]\\n\\t  ...\\n"" )"	178:4:8470:8588	73224	103	True				
ANR	74155	CallExpression	"fprintf ( stdout , ""\\t\\t[Precincts_size_X_res_Nr Precincts_size_Y_res_Nr Precincts_size_Z_res_Nr]\\n\\t  ...\\n"" )"		73224	0					
ANR	74156	Callee	fprintf		73224	0					
ANR	74157	Identifier	fprintf		73224	0					
ANR	74158	ArgumentList	stdout		73224	1					
ANR	74159	Argument	stdout		73224	0					
ANR	74160	Identifier	stdout		73224	0					
ANR	74161	Argument	"""\\t\\t[Precincts_size_X_res_Nr Precincts_size_Y_res_Nr Precincts_size_Z_res_Nr]\\n\\t  ...\\n"""		73224	1					
ANR	74162	PrimaryExpression	"""\\t\\t[Precincts_size_X_res_Nr Precincts_size_Y_res_Nr Precincts_size_Z_res_Nr]\\n\\t  ...\\n"""		73224	0					
ANR	74163	ExpressionStatement	"fprintf ( stdout , ""\\t\\t[Precincts_size_X_res_0 Precincts_size_Y_res_0 Precincts_size_Z_res_0]\\n"" )"	180:4:8594:8700	73224	104	True				
ANR	74164	CallExpression	"fprintf ( stdout , ""\\t\\t[Precincts_size_X_res_0 Precincts_size_Y_res_0 Precincts_size_Z_res_0]\\n"" )"		73224	0					
ANR	74165	Callee	fprintf		73224	0					
ANR	74166	Identifier	fprintf		73224	0					
ANR	74167	ArgumentList	stdout		73224	1					
ANR	74168	Argument	stdout		73224	0					
ANR	74169	Identifier	stdout		73224	0					
ANR	74170	Argument	"""\\t\\t[Precincts_size_X_res_0 Precincts_size_Y_res_0 Precincts_size_Z_res_0]\\n"""		73224	1					
ANR	74171	PrimaryExpression	"""\\t\\t[Precincts_size_X_res_0 Precincts_size_Y_res_0 Precincts_size_Z_res_0]\\n"""		73224	0					
ANR	74172	ExpressionStatement	"fprintf ( stdout , ""\\t\\tMain_header_end_position\\n"" )"	182:4:8706:8754	73224	105	True				
ANR	74173	CallExpression	"fprintf ( stdout , ""\\t\\tMain_header_end_position\\n"" )"		73224	0					
ANR	74174	Callee	fprintf		73224	0					
ANR	74175	Identifier	fprintf		73224	0					
ANR	74176	ArgumentList	stdout		73224	1					
ANR	74177	Argument	stdout		73224	0					
ANR	74178	Identifier	stdout		73224	0					
ANR	74179	Argument	"""\\t\\tMain_header_end_position\\n"""		73224	1					
ANR	74180	PrimaryExpression	"""\\t\\tMain_header_end_position\\n"""		73224	0					
ANR	74181	ExpressionStatement	"fprintf ( stdout , ""\\t\\tCodestream_size\\n"" )"	183:4:8760:8799	73224	106	True				
ANR	74182	CallExpression	"fprintf ( stdout , ""\\t\\tCodestream_size\\n"" )"		73224	0					
ANR	74183	Callee	fprintf		73224	0					
ANR	74184	Identifier	fprintf		73224	0					
ANR	74185	ArgumentList	stdout		73224	1					
ANR	74186	Argument	stdout		73224	0					
ANR	74187	Identifier	stdout		73224	0					
ANR	74188	Argument	"""\\t\\tCodestream_size\\n"""		73224	1					
ANR	74189	PrimaryExpression	"""\\t\\tCodestream_size\\n"""		73224	0					
ANR	74190	ExpressionStatement	"fprintf ( stdout , ""\\t\\tTile_0 [start_pos end_header end_pos TotalDisto NumPix MaxMSE]\\n"" )"	184:4:8805:8903	73224	107	True				
ANR	74191	CallExpression	"fprintf ( stdout , ""\\t\\tTile_0 [start_pos end_header end_pos TotalDisto NumPix MaxMSE]\\n"" )"		73224	0					
ANR	74192	Callee	fprintf		73224	0					
ANR	74193	Identifier	fprintf		73224	0					
ANR	74194	ArgumentList	stdout		73224	1					
ANR	74195	Argument	stdout		73224	0					
ANR	74196	Identifier	stdout		73224	0					
ANR	74197	Argument	"""\\t\\tTile_0 [start_pos end_header end_pos TotalDisto NumPix MaxMSE]\\n"""		73224	1					
ANR	74198	PrimaryExpression	"""\\t\\tTile_0 [start_pos end_header end_pos TotalDisto NumPix MaxMSE]\\n"""		73224	0					
ANR	74199	ExpressionStatement	"fprintf ( stdout , ""\\t\\t...\\n"" )"	186:4:8909:8936	73224	108	True				
ANR	74200	CallExpression	"fprintf ( stdout , ""\\t\\t...\\n"" )"		73224	0					
ANR	74201	Callee	fprintf		73224	0					
ANR	74202	Identifier	fprintf		73224	0					
ANR	74203	ArgumentList	stdout		73224	1					
ANR	74204	Argument	stdout		73224	0					
ANR	74205	Identifier	stdout		73224	0					
ANR	74206	Argument	"""\\t\\t...\\n"""		73224	1					
ANR	74207	PrimaryExpression	"""\\t\\t...\\n"""		73224	0					
ANR	74208	ExpressionStatement	"fprintf ( stdout , ""\\t\\tTile_Nt [  ''         ''        ''        ''       ''    ''  ]\\n"" )"	187:4:8942:9040	73224	109	True				
ANR	74209	CallExpression	"fprintf ( stdout , ""\\t\\tTile_Nt [  ''         ''        ''        ''       ''    ''  ]\\n"" )"		73224	0					
ANR	74210	Callee	fprintf		73224	0					
ANR	74211	Identifier	fprintf		73224	0					
ANR	74212	ArgumentList	stdout		73224	1					
ANR	74213	Argument	stdout		73224	0					
ANR	74214	Identifier	stdout		73224	0					
ANR	74215	Argument	"""\\t\\tTile_Nt [  ''         ''        ''        ''       ''    ''  ]\\n"""		73224	1					
ANR	74216	PrimaryExpression	"""\\t\\tTile_Nt [  ''         ''        ''        ''       ''    ''  ]\\n"""		73224	0					
ANR	74217	ExpressionStatement	"fprintf ( stdout , ""\\t  Tpacket_0 [Tile layer res. comp. prec. start_pos end_pos disto]\\n"" )"	189:4:9046:9146	73224	110	True				
ANR	74218	CallExpression	"fprintf ( stdout , ""\\t  Tpacket_0 [Tile layer res. comp. prec. start_pos end_pos disto]\\n"" )"		73224	0					
ANR	74219	Callee	fprintf		73224	0					
ANR	74220	Identifier	fprintf		73224	0					
ANR	74221	ArgumentList	stdout		73224	1					
ANR	74222	Argument	stdout		73224	0					
ANR	74223	Identifier	stdout		73224	0					
ANR	74224	Argument	"""\\t  Tpacket_0 [Tile layer res. comp. prec. start_pos end_pos disto]\\n"""		73224	1					
ANR	74225	PrimaryExpression	"""\\t  Tpacket_0 [Tile layer res. comp. prec. start_pos end_pos disto]\\n"""		73224	0					
ANR	74226	ExpressionStatement	"fprintf ( stdout , ""\\t  ...\\n"" )"	191:4:9152:9180	73224	111	True				
ANR	74227	CallExpression	"fprintf ( stdout , ""\\t  ...\\n"" )"		73224	0					
ANR	74228	Callee	fprintf		73224	0					
ANR	74229	Identifier	fprintf		73224	0					
ANR	74230	ArgumentList	stdout		73224	1					
ANR	74231	Argument	stdout		73224	0					
ANR	74232	Identifier	stdout		73224	0					
ANR	74233	Argument	"""\\t  ...\\n"""		73224	1					
ANR	74234	PrimaryExpression	"""\\t  ...\\n"""		73224	0					
ANR	74235	ExpressionStatement	"fprintf ( stdout , ""\\t  Tpacket_Np [''   ''    ''   ''    ''       ''       ''     '' ]\\n"" )"	192:4:9186:9286	73224	112	True				
ANR	74236	CallExpression	"fprintf ( stdout , ""\\t  Tpacket_Np [''   ''    ''   ''    ''       ''       ''     '' ]\\n"" )"		73224	0					
ANR	74237	Callee	fprintf		73224	0					
ANR	74238	Identifier	fprintf		73224	0					
ANR	74239	ArgumentList	stdout		73224	1					
ANR	74240	Argument	stdout		73224	0					
ANR	74241	Identifier	stdout		73224	0					
ANR	74242	Argument	"""\\t  Tpacket_Np [''   ''    ''   ''    ''       ''       ''     '' ]\\n"""		73224	1					
ANR	74243	PrimaryExpression	"""\\t  Tpacket_Np [''   ''    ''   ''    ''       ''       ''     '' ]\\n"""		73224	0					
ANR	74244	ExpressionStatement	"fprintf ( stdout , ""\\t  MaxDisto\\n"" )"	194:4:9292:9325	73224	113	True				
ANR	74245	CallExpression	"fprintf ( stdout , ""\\t  MaxDisto\\n"" )"		73224	0					
ANR	74246	Callee	fprintf		73224	0					
ANR	74247	Identifier	fprintf		73224	0					
ANR	74248	ArgumentList	stdout		73224	1					
ANR	74249	Argument	stdout		73224	0					
ANR	74250	Identifier	stdout		73224	0					
ANR	74251	Argument	"""\\t  MaxDisto\\n"""		73224	1					
ANR	74252	PrimaryExpression	"""\\t  MaxDisto\\n"""		73224	0					
ANR	74253	ExpressionStatement	"fprintf ( stdout , ""\\t  TotalDisto\\n\\n"" )"	195:4:9331:9368	73224	114	True				
ANR	74254	CallExpression	"fprintf ( stdout , ""\\t  TotalDisto\\n\\n"" )"		73224	0					
ANR	74255	Callee	fprintf		73224	0					
ANR	74256	Identifier	fprintf		73224	0					
ANR	74257	ArgumentList	stdout		73224	1					
ANR	74258	Argument	stdout		73224	0					
ANR	74259	Identifier	stdout		73224	0					
ANR	74260	Argument	"""\\t  TotalDisto\\n\\n"""		73224	1					
ANR	74261	PrimaryExpression	"""\\t  TotalDisto\\n\\n"""		73224	0					
ANR	74262	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	196:4:9374:9395	73224	115	True				
ANR	74263	CallExpression	"fprintf ( stdout , ""\\n"" )"		73224	0					
ANR	74264	Callee	fprintf		73224	0					
ANR	74265	Identifier	fprintf		73224	0					
ANR	74266	ArgumentList	stdout		73224	1					
ANR	74267	Argument	stdout		73224	0					
ANR	74268	Identifier	stdout		73224	0					
ANR	74269	Argument	"""\\n"""		73224	1					
ANR	74270	PrimaryExpression	"""\\n"""		73224	0					
ANR	74271	ReturnType	void		73224	1					
ANR	74272	Identifier	encode_help_display		73224	2					
ANR	74273	ParameterList			73224	3					
ANR	74274	CFGEntryNode	ENTRY		73224		True				
ANR	74275	CFGExitNode	EXIT		73224		True				
ANR	74276	Symbol	stdout		73224						
ANR	74277	Function	give_progression	200:0:9401:9857							
ANR	74278	FunctionDef	give_progression (char progression [ 4 ])		74277	0					
ANR	74279	CompoundStatement		201:0:9454:9857	74277	0					
ANR	74280	IfStatement	"if ( strncmp ( progression , ""LRCP"" , 4 ) == 0 )"		74277	0					
ANR	74281	Condition	"strncmp ( progression , ""LRCP"" , 4 ) == 0"	202:8:9464:9499	74277	0	True				
ANR	74282	EqualityExpression	"strncmp ( progression , ""LRCP"" , 4 ) == 0"		74277	0		==			
ANR	74283	CallExpression	"strncmp ( progression , ""LRCP"" , 4 )"		74277	0					
ANR	74284	Callee	strncmp		74277	0					
ANR	74285	Identifier	strncmp		74277	0					
ANR	74286	ArgumentList	progression		74277	1					
ANR	74287	Argument	progression		74277	0					
ANR	74288	Identifier	progression		74277	0					
ANR	74289	Argument	"""LRCP"""		74277	1					
ANR	74290	PrimaryExpression	"""LRCP"""		74277	0					
ANR	74291	Argument	4		74277	2					
ANR	74292	PrimaryExpression	4		74277	0					
ANR	74293	PrimaryExpression	0		74277	1					
ANR	74294	CompoundStatement		2:46:47:47	74277	1					
ANR	74295	ReturnStatement	return LRCP ;	203:8:9512:9523	74277	0	True				
ANR	74296	Identifier	LRCP		74277	0					
ANR	74297	IfStatement	"if ( strncmp ( progression , ""RLCP"" , 4 ) == 0 )"		74277	1					
ANR	74298	Condition	"strncmp ( progression , ""RLCP"" , 4 ) == 0"	205:8:9539:9574	74277	0	True				
ANR	74299	EqualityExpression	"strncmp ( progression , ""RLCP"" , 4 ) == 0"		74277	0		==			
ANR	74300	CallExpression	"strncmp ( progression , ""RLCP"" , 4 )"		74277	0					
ANR	74301	Callee	strncmp		74277	0					
ANR	74302	Identifier	strncmp		74277	0					
ANR	74303	ArgumentList	progression		74277	1					
ANR	74304	Argument	progression		74277	0					
ANR	74305	Identifier	progression		74277	0					
ANR	74306	Argument	"""RLCP"""		74277	1					
ANR	74307	PrimaryExpression	"""RLCP"""		74277	0					
ANR	74308	Argument	4		74277	2					
ANR	74309	PrimaryExpression	4		74277	0					
ANR	74310	PrimaryExpression	0		74277	1					
ANR	74311	CompoundStatement		5:46:122:122	74277	1					
ANR	74312	ReturnStatement	return RLCP ;	206:8:9587:9598	74277	0	True				
ANR	74313	Identifier	RLCP		74277	0					
ANR	74314	IfStatement	"if ( strncmp ( progression , ""RPCL"" , 4 ) == 0 )"		74277	2					
ANR	74315	Condition	"strncmp ( progression , ""RPCL"" , 4 ) == 0"	208:8:9614:9649	74277	0	True				
ANR	74316	EqualityExpression	"strncmp ( progression , ""RPCL"" , 4 ) == 0"		74277	0		==			
ANR	74317	CallExpression	"strncmp ( progression , ""RPCL"" , 4 )"		74277	0					
ANR	74318	Callee	strncmp		74277	0					
ANR	74319	Identifier	strncmp		74277	0					
ANR	74320	ArgumentList	progression		74277	1					
ANR	74321	Argument	progression		74277	0					
ANR	74322	Identifier	progression		74277	0					
ANR	74323	Argument	"""RPCL"""		74277	1					
ANR	74324	PrimaryExpression	"""RPCL"""		74277	0					
ANR	74325	Argument	4		74277	2					
ANR	74326	PrimaryExpression	4		74277	0					
ANR	74327	PrimaryExpression	0		74277	1					
ANR	74328	CompoundStatement		8:46:197:197	74277	1					
ANR	74329	ReturnStatement	return RPCL ;	209:8:9662:9673	74277	0	True				
ANR	74330	Identifier	RPCL		74277	0					
ANR	74331	IfStatement	"if ( strncmp ( progression , ""PCRL"" , 4 ) == 0 )"		74277	3					
ANR	74332	Condition	"strncmp ( progression , ""PCRL"" , 4 ) == 0"	211:8:9689:9724	74277	0	True				
ANR	74333	EqualityExpression	"strncmp ( progression , ""PCRL"" , 4 ) == 0"		74277	0		==			
ANR	74334	CallExpression	"strncmp ( progression , ""PCRL"" , 4 )"		74277	0					
ANR	74335	Callee	strncmp		74277	0					
ANR	74336	Identifier	strncmp		74277	0					
ANR	74337	ArgumentList	progression		74277	1					
ANR	74338	Argument	progression		74277	0					
ANR	74339	Identifier	progression		74277	0					
ANR	74340	Argument	"""PCRL"""		74277	1					
ANR	74341	PrimaryExpression	"""PCRL"""		74277	0					
ANR	74342	Argument	4		74277	2					
ANR	74343	PrimaryExpression	4		74277	0					
ANR	74344	PrimaryExpression	0		74277	1					
ANR	74345	CompoundStatement		11:46:272:272	74277	1					
ANR	74346	ReturnStatement	return PCRL ;	212:8:9737:9748	74277	0	True				
ANR	74347	Identifier	PCRL		74277	0					
ANR	74348	IfStatement	"if ( strncmp ( progression , ""CPRL"" , 4 ) == 0 )"		74277	4					
ANR	74349	Condition	"strncmp ( progression , ""CPRL"" , 4 ) == 0"	214:8:9764:9799	74277	0	True				
ANR	74350	EqualityExpression	"strncmp ( progression , ""CPRL"" , 4 ) == 0"		74277	0		==			
ANR	74351	CallExpression	"strncmp ( progression , ""CPRL"" , 4 )"		74277	0					
ANR	74352	Callee	strncmp		74277	0					
ANR	74353	Identifier	strncmp		74277	0					
ANR	74354	ArgumentList	progression		74277	1					
ANR	74355	Argument	progression		74277	0					
ANR	74356	Identifier	progression		74277	0					
ANR	74357	Argument	"""CPRL"""		74277	1					
ANR	74358	PrimaryExpression	"""CPRL"""		74277	0					
ANR	74359	Argument	4		74277	2					
ANR	74360	PrimaryExpression	4		74277	0					
ANR	74361	PrimaryExpression	0		74277	1					
ANR	74362	CompoundStatement		14:46:347:347	74277	1					
ANR	74363	ReturnStatement	return CPRL ;	215:8:9812:9823	74277	0	True				
ANR	74364	Identifier	CPRL		74277	0					
ANR	74365	ReturnStatement	return PROG_UNKNOWN ;	218:4:9836:9855	74277	5	True				
ANR	74366	Identifier	PROG_UNKNOWN		74277	0					
ANR	74367	ReturnType	OPJ_PROG_ORDER		74277	1					
ANR	74368	Identifier	give_progression		74277	2					
ANR	74369	ParameterList	char progression [ 4 ]		74277	3					
ANR	74370	Parameter	char progression [ 4 ]	200:32:9433:9451	74277	0	True				
ANR	74371	ParameterType	char [ 4 ]		74277	0					
ANR	74372	Identifier	progression		74277	1					
ANR	74373	CFGEntryNode	ENTRY		74277		True				
ANR	74374	CFGExitNode	EXIT		74277		True				
ANR	74375	Symbol	LRCP		74277						
ANR	74376	Symbol	strncmp		74277						
ANR	74377	Symbol	RLCP		74277						
ANR	74378	Symbol	RPCL		74277						
ANR	74379	Symbol	PCRL		74277						
ANR	74380	Symbol	CPRL		74277						
ANR	74381	Symbol	progression		74277						
ANR	74382	Symbol	PROG_UNKNOWN		74277						
ANR	74383	Function	give_transform	221:0:9860:10092							
ANR	74384	FunctionDef	give_transform (char transform [ 4 ])		74383	0					
ANR	74385	CompoundStatement		222:0:9908:10092	74383	0					
ANR	74386	IfStatement	"if ( strncmp ( transform , ""2DWT"" , 4 ) == 0 )"		74383	0					
ANR	74387	Condition	"strncmp ( transform , ""2DWT"" , 4 ) == 0"	223:8:9918:9951	74383	0	True				
ANR	74388	EqualityExpression	"strncmp ( transform , ""2DWT"" , 4 ) == 0"		74383	0		==			
ANR	74389	CallExpression	"strncmp ( transform , ""2DWT"" , 4 )"		74383	0					
ANR	74390	Callee	strncmp		74383	0					
ANR	74391	Identifier	strncmp		74383	0					
ANR	74392	ArgumentList	transform		74383	1					
ANR	74393	Argument	transform		74383	0					
ANR	74394	Identifier	transform		74383	0					
ANR	74395	Argument	"""2DWT"""		74383	1					
ANR	74396	PrimaryExpression	"""2DWT"""		74383	0					
ANR	74397	Argument	4		74383	2					
ANR	74398	PrimaryExpression	4		74383	0					
ANR	74399	PrimaryExpression	0		74383	1					
ANR	74400	CompoundStatement		2:44:45:45	74383	1					
ANR	74401	ReturnStatement	return TRF_2D_DWT ;	224:8:9964:9981	74383	0	True				
ANR	74402	Identifier	TRF_2D_DWT		74383	0					
ANR	74403	IfStatement	"if ( strncmp ( transform , ""3DWT"" , 4 ) == 0 )"		74383	1					
ANR	74404	Condition	"strncmp ( transform , ""3DWT"" , 4 ) == 0"	226:8:9997:10030	74383	0	True				
ANR	74405	EqualityExpression	"strncmp ( transform , ""3DWT"" , 4 ) == 0"		74383	0		==			
ANR	74406	CallExpression	"strncmp ( transform , ""3DWT"" , 4 )"		74383	0					
ANR	74407	Callee	strncmp		74383	0					
ANR	74408	Identifier	strncmp		74383	0					
ANR	74409	ArgumentList	transform		74383	1					
ANR	74410	Argument	transform		74383	0					
ANR	74411	Identifier	transform		74383	0					
ANR	74412	Argument	"""3DWT"""		74383	1					
ANR	74413	PrimaryExpression	"""3DWT"""		74383	0					
ANR	74414	Argument	4		74383	2					
ANR	74415	PrimaryExpression	4		74383	0					
ANR	74416	PrimaryExpression	0		74383	1					
ANR	74417	CompoundStatement		5:44:124:124	74383	1					
ANR	74418	ReturnStatement	return TRF_3D_DWT ;	227:8:10043:10060	74383	0	True				
ANR	74419	Identifier	TRF_3D_DWT		74383	0					
ANR	74420	ReturnStatement	return TRF_UNKNOWN ;	229:4:10072:10090	74383	2	True				
ANR	74421	Identifier	TRF_UNKNOWN		74383	0					
ANR	74422	ReturnType	OPJ_TRANSFORM		74383	1					
ANR	74423	Identifier	give_transform		74383	2					
ANR	74424	ParameterList	char transform [ 4 ]		74383	3					
ANR	74425	Parameter	char transform [ 4 ]	221:29:9889:9905	74383	0	True				
ANR	74426	ParameterType	char [ 4 ]		74383	0					
ANR	74427	Identifier	transform		74383	1					
ANR	74428	CFGEntryNode	ENTRY		74383		True				
ANR	74429	CFGExitNode	EXIT		74383		True				
ANR	74430	Symbol	strncmp		74383						
ANR	74431	Symbol	transform		74383						
ANR	74432	Symbol	TRF_3D_DWT		74383						
ANR	74433	Symbol	TRF_2D_DWT		74383						
ANR	74434	Symbol	TRF_UNKNOWN		74383						
ANR	74435	Function	give_coding	232:0:10095:10470							
ANR	74436	FunctionDef	give_coding (char coding [ 3 ])		74435	0					
ANR	74437	CompoundStatement		233:0:10142:10470	74435	0					
ANR	74438	IfStatement	"if ( strncmp ( coding , ""2EB"" , 3 ) == 0 )"		74435	0					
ANR	74439	Condition	"strncmp ( coding , ""2EB"" , 3 ) == 0"	235:8:10153:10182	74435	0	True				
ANR	74440	EqualityExpression	"strncmp ( coding , ""2EB"" , 3 ) == 0"		74435	0		==			
ANR	74441	CallExpression	"strncmp ( coding , ""2EB"" , 3 )"		74435	0					
ANR	74442	Callee	strncmp		74435	0					
ANR	74443	Identifier	strncmp		74435	0					
ANR	74444	ArgumentList	coding		74435	1					
ANR	74445	Argument	coding		74435	0					
ANR	74446	Identifier	coding		74435	0					
ANR	74447	Argument	"""2EB"""		74435	1					
ANR	74448	PrimaryExpression	"""2EB"""		74435	0					
ANR	74449	Argument	3		74435	2					
ANR	74450	PrimaryExpression	3		74435	0					
ANR	74451	PrimaryExpression	0		74435	1					
ANR	74452	CompoundStatement		3:40:42:42	74435	1					
ANR	74453	ReturnStatement	return ENCOD_2EB ;	236:8:10195:10211	74435	0	True				
ANR	74454	Identifier	ENCOD_2EB		74435	0					
ANR	74455	IfStatement	"if ( strncmp ( coding , ""3EB"" , 3 ) == 0 )"		74435	1					
ANR	74456	Condition	"strncmp ( coding , ""3EB"" , 3 ) == 0"	238:8:10227:10256	74435	0	True				
ANR	74457	EqualityExpression	"strncmp ( coding , ""3EB"" , 3 ) == 0"		74435	0		==			
ANR	74458	CallExpression	"strncmp ( coding , ""3EB"" , 3 )"		74435	0					
ANR	74459	Callee	strncmp		74435	0					
ANR	74460	Identifier	strncmp		74435	0					
ANR	74461	ArgumentList	coding		74435	1					
ANR	74462	Argument	coding		74435	0					
ANR	74463	Identifier	coding		74435	0					
ANR	74464	Argument	"""3EB"""		74435	1					
ANR	74465	PrimaryExpression	"""3EB"""		74435	0					
ANR	74466	Argument	3		74435	2					
ANR	74467	PrimaryExpression	3		74435	0					
ANR	74468	PrimaryExpression	0		74435	1					
ANR	74469	CompoundStatement		6:40:116:116	74435	1					
ANR	74470	ReturnStatement	return ENCOD_3EB ;	239:8:10269:10285	74435	0	True				
ANR	74471	Identifier	ENCOD_3EB		74435	0					
ANR	74472	ReturnStatement	return ENCOD_UNKNOWN ;	248:4:10448:10468	74435	2	True				
ANR	74473	Identifier	ENCOD_UNKNOWN		74435	0					
ANR	74474	ReturnType	OPJ_ENTROPY_CODING		74435	1					
ANR	74475	Identifier	give_coding		74435	2					
ANR	74476	ParameterList	char coding [ 3 ]		74435	3					
ANR	74477	Parameter	char coding [ 3 ]	232:31:10126:10139	74435	0	True				
ANR	74478	ParameterType	char [ 3 ]		74435	0					
ANR	74479	Identifier	coding		74435	1					
ANR	74480	CFGEntryNode	ENTRY		74435		True				
ANR	74481	CFGExitNode	EXIT		74435		True				
ANR	74482	Symbol	coding		74435						
ANR	74483	Symbol	strncmp		74435						
ANR	74484	Symbol	ENCOD_2EB		74435						
ANR	74485	Symbol	ENCOD_3EB		74435						
ANR	74486	Symbol	ENCOD_UNKNOWN		74435						
ANR	74487	Function	get_file_format	251:0:10473:10970							
ANR	74488	FunctionDef	get_file_format (char * filename)		74487	0					
ANR	74489	CompoundStatement		252:0:10509:10970	74487	0					
ANR	74490	IdentifierDeclStatement	int i ;	253:4:10515:10520	74487	0	True				
ANR	74491	IdentifierDecl	i		74487	0					
ANR	74492	IdentifierDeclType	int		74487	0					
ANR	74493	Identifier	i		74487	1					
ANR	74494	Statement	static	254:4:10526:10531	74487	1	True				
ANR	74495	IdentifierDeclStatement	"const char * extension [ ] = { ""pgx"" , ""bin"" , ""img"" , ""j3d"" , ""jp3d"" , ""j2k"" } ;"	254:11:10533:10602	74487	2	True				
ANR	74496	IdentifierDecl	"* extension [ ] = { ""pgx"" , ""bin"" , ""img"" , ""j3d"" , ""jp3d"" , ""j2k"" }"		74487	0					
ANR	74497	IdentifierDeclType	const char * [ ]		74487	0					
ANR	74498	Identifier	extension		74487	1					
ANR	74499	AssignmentExpression	"* extension [ ] = { ""pgx"" , ""bin"" , ""img"" , ""j3d"" , ""jp3d"" , ""j2k"" }"		74487	2		=			
ANR	74500	Identifier	extension		74487	0					
ANR	74501	InitializerList	"""pgx"""		74487	1					
ANR	74502	PrimaryExpression	"""pgx"""		74487	0					
ANR	74503	PrimaryExpression	"""bin"""		74487	1					
ANR	74504	PrimaryExpression	"""img"""		74487	2					
ANR	74505	PrimaryExpression	"""j3d"""		74487	3					
ANR	74506	PrimaryExpression	"""jp3d"""		74487	4					
ANR	74507	PrimaryExpression	"""j2k"""		74487	5					
ANR	74508	Statement	static	255:4:10608:10613	74487	3	True				
ANR	74509	IdentifierDeclStatement	"const int format [ ] = { PGX_DFMT , BIN_DFMT , IMG_DFMT , J3D_CFMT , J3D_CFMT , J2K_CFMT } ;"	255:11:10615:10697	74487	4	True				
ANR	74510	IdentifierDecl	"format [ ] = { PGX_DFMT , BIN_DFMT , IMG_DFMT , J3D_CFMT , J3D_CFMT , J2K_CFMT }"		74487	0					
ANR	74511	IdentifierDeclType	const int [ ]		74487	0					
ANR	74512	Identifier	format		74487	1					
ANR	74513	AssignmentExpression	"format [ ] = { PGX_DFMT , BIN_DFMT , IMG_DFMT , J3D_CFMT , J3D_CFMT , J2K_CFMT }"		74487	2		=			
ANR	74514	Identifier	format		74487	0					
ANR	74515	InitializerList	PGX_DFMT		74487	1					
ANR	74516	Identifier	PGX_DFMT		74487	0					
ANR	74517	Identifier	BIN_DFMT		74487	1					
ANR	74518	Identifier	IMG_DFMT		74487	2					
ANR	74519	Identifier	J3D_CFMT		74487	3					
ANR	74520	Identifier	J3D_CFMT		74487	4					
ANR	74521	Identifier	J2K_CFMT		74487	5					
ANR	74522	IdentifierDeclStatement	"char * ext = strrchr ( filename , '.' ) ;"	256:4:10703:10738	74487	5	True				
ANR	74523	IdentifierDecl	"* ext = strrchr ( filename , '.' )"		74487	0					
ANR	74524	IdentifierDeclType	char *		74487	0					
ANR	74525	Identifier	ext		74487	1					
ANR	74526	AssignmentExpression	"* ext = strrchr ( filename , '.' )"		74487	2		=			
ANR	74527	Identifier	ext		74487	0					
ANR	74528	CallExpression	"strrchr ( filename , '.' )"		74487	1					
ANR	74529	Callee	strrchr		74487	0					
ANR	74530	Identifier	strrchr		74487	0					
ANR	74531	ArgumentList	filename		74487	1					
ANR	74532	Argument	filename		74487	0					
ANR	74533	Identifier	filename		74487	0					
ANR	74534	Argument	'.'		74487	1					
ANR	74535	PrimaryExpression	'.'		74487	0					
ANR	74536	IfStatement	if ( ext )		74487	6					
ANR	74537	Condition	ext	257:8:10748:10750	74487	0	True				
ANR	74538	Identifier	ext		74487	0					
ANR	74539	CompoundStatement		6:13:243:243	74487	1					
ANR	74540	ExpressionStatement	ext ++	258:8:10763:10768	74487	0	True				
ANR	74541	PostIncDecOperationExpression	ext ++		74487	0					
ANR	74542	Identifier	ext		74487	0					
ANR	74543	IncDec	++		74487	1					
ANR	74544	ForStatement	for ( i = 0 ; i < sizeof ( format ) / sizeof ( * format ) ; i ++ )		74487	1					
ANR	74545	ForInit	i = 0 ;	259:13:10783:10788	74487	0	True				
ANR	74546	AssignmentExpression	i = 0		74487	0		=			
ANR	74547	Identifier	i		74487	0					
ANR	74548	PrimaryExpression	0		74487	1					
ANR	74549	Condition	i < sizeof ( format ) / sizeof ( * format )	259:20:10790:10825	74487	1	True				
ANR	74550	RelationalExpression	i < sizeof ( format ) / sizeof ( * format )		74487	0		<			
ANR	74551	Identifier	i		74487	0					
ANR	74552	MultiplicativeExpression	sizeof ( format ) / sizeof ( * format )		74487	1		/			
ANR	74553	SizeofExpression	sizeof ( format )		74487	0					
ANR	74554	Sizeof	sizeof		74487	0					
ANR	74555	SizeofOperand	format		74487	1					
ANR	74556	SizeofExpression	sizeof ( * format )		74487	1					
ANR	74557	Sizeof	sizeof		74487	0					
ANR	74558	UnaryOperationExpression	* format		74487	1					
ANR	74559	UnaryOperator	*		74487	0					
ANR	74560	Identifier	format		74487	1					
ANR	74561	PostIncDecOperationExpression	i ++	259:58:10828:10830	74487	2	True				
ANR	74562	Identifier	i		74487	0					
ANR	74563	IncDec	++		74487	1					
ANR	74564	CompoundStatement		8:63:323:323	74487	3					
ANR	74565	IfStatement	"if ( strnicmp ( ext , extension [ i ] , 3 ) == 0 )"		74487	0					
ANR	74566	Condition	"strnicmp ( ext , extension [ i ] , 3 ) == 0"	260:16:10851:10885	74487	0	True				
ANR	74567	EqualityExpression	"strnicmp ( ext , extension [ i ] , 3 ) == 0"		74487	0		==			
ANR	74568	CallExpression	"strnicmp ( ext , extension [ i ] , 3 )"		74487	0					
ANR	74569	Callee	strnicmp		74487	0					
ANR	74570	Identifier	strnicmp		74487	0					
ANR	74571	ArgumentList	ext		74487	1					
ANR	74572	Argument	ext		74487	0					
ANR	74573	Identifier	ext		74487	0					
ANR	74574	Argument	extension [ i ]		74487	1					
ANR	74575	ArrayIndexing	extension [ i ]		74487	0					
ANR	74576	Identifier	extension		74487	0					
ANR	74577	Identifier	i		74487	1					
ANR	74578	Argument	3		74487	2					
ANR	74579	PrimaryExpression	3		74487	0					
ANR	74580	PrimaryExpression	0		74487	1					
ANR	74581	CompoundStatement		9:53:378:378	74487	1					
ANR	74582	ReturnStatement	return format [ i ] ;	261:16:10906:10922	74487	0	True				
ANR	74583	ArrayIndexing	format [ i ]		74487	0					
ANR	74584	Identifier	format		74487	0					
ANR	74585	Identifier	i		74487	1					
ANR	74586	ReturnStatement	return - 1 ;	266:4:10959:10968	74487	7	True				
ANR	74587	UnaryOperationExpression	- 1		74487	0					
ANR	74588	UnaryOperator	-		74487	0					
ANR	74589	PrimaryExpression	1		74487	1					
ANR	74590	ReturnType	int		74487	1					
ANR	74591	Identifier	get_file_format		74487	2					
ANR	74592	ParameterList	char * filename		74487	3					
ANR	74593	Parameter	char * filename	251:20:10493:10506	74487	0	True				
ANR	74594	ParameterType	char *		74487	0					
ANR	74595	Identifier	filename		74487	1					
ANR	74596	CFGEntryNode	ENTRY		74487		True				
ANR	74597	CFGExitNode	EXIT		74487		True				
ANR	74598	Symbol	ext		74487						
ANR	74599	Symbol	extension		74487						
ANR	74600	Symbol	J2K_CFMT		74487						
ANR	74601	Symbol	format		74487						
ANR	74602	Symbol	BIN_DFMT		74487						
ANR	74603	Symbol	i		74487						
ANR	74604	Symbol	filename		74487						
ANR	74605	Symbol	* i		74487						
ANR	74606	Symbol	* format		74487						
ANR	74607	Symbol	J3D_CFMT		74487						
ANR	74608	Symbol	strrchr		74487						
ANR	74609	Symbol	* extension		74487						
ANR	74610	Symbol	PGX_DFMT		74487						
ANR	74611	Symbol	strnicmp		74487						
ANR	74612	Symbol	IMG_DFMT		74487						
ANR	74613	Function	parse_cmdline_encoder	271:0:11065:31836							
ANR	74614	FunctionDef	"parse_cmdline_encoder (int argc , char * * argv , opj_cparameters_t * parameters)"		74613	0					
ANR	74615	CompoundStatement		272:0:11145:31836	74613	0					
ANR	74616	IdentifierDeclStatement	"int i , value ;"	273:4:11151:11163	74613	0	True				
ANR	74617	IdentifierDecl	i		74613	0					
ANR	74618	IdentifierDeclType	int		74613	0					
ANR	74619	Identifier	i		74613	1					
ANR	74620	IdentifierDecl	value		74613	1					
ANR	74621	IdentifierDeclType	int		74613	0					
ANR	74622	Identifier	value		74613	1					
ANR	74623	WhileStatement	while ( 1 )		74613	1					
ANR	74624	Condition	1	277:11:11211:11211	74613	0	True				
ANR	74625	PrimaryExpression	1		74613	0					
ANR	74626	CompoundStatement		7:8:78:189	74613	1					
ANR	74627	IdentifierDeclStatement	"int c = opj_getopt ( argc , argv , ""i:m:o:r:q:f:t:n:c:b:x:p:s:d:hP:S:E:M:D:R:l:T:C:A:I"" ) ;"	278:8:11224:11335	74613	0	True				
ANR	74628	IdentifierDecl	"c = opj_getopt ( argc , argv , ""i:m:o:r:q:f:t:n:c:b:x:p:s:d:hP:S:E:M:D:R:l:T:C:A:I"" )"		74613	0					
ANR	74629	IdentifierDeclType	int		74613	0					
ANR	74630	Identifier	c		74613	1					
ANR	74631	AssignmentExpression	"c = opj_getopt ( argc , argv , ""i:m:o:r:q:f:t:n:c:b:x:p:s:d:hP:S:E:M:D:R:l:T:C:A:I"" )"		74613	2		=			
ANR	74632	Identifier	c		74613	0					
ANR	74633	CallExpression	"opj_getopt ( argc , argv , ""i:m:o:r:q:f:t:n:c:b:x:p:s:d:hP:S:E:M:D:R:l:T:C:A:I"" )"		74613	1					
ANR	74634	Callee	opj_getopt		74613	0					
ANR	74635	Identifier	opj_getopt		74613	0					
ANR	74636	ArgumentList	argc		74613	1					
ANR	74637	Argument	argc		74613	0					
ANR	74638	Identifier	argc		74613	0					
ANR	74639	Argument	argv		74613	1					
ANR	74640	Identifier	argv		74613	0					
ANR	74641	Argument	"""i:m:o:r:q:f:t:n:c:b:x:p:s:d:hP:S:E:M:D:R:l:T:C:A:I"""		74613	2					
ANR	74642	PrimaryExpression	"""i:m:o:r:q:f:t:n:c:b:x:p:s:d:hP:S:E:M:D:R:l:T:C:A:I"""		74613	0					
ANR	74643	IfStatement	if ( c == - 1 )		74613	1					
ANR	74644	Condition	c == - 1	280:12:11349:11355	74613	0	True				
ANR	74645	EqualityExpression	c == - 1		74613	0		==			
ANR	74646	Identifier	c		74613	0					
ANR	74647	UnaryOperationExpression	- 1		74613	1					
ANR	74648	UnaryOperator	-		74613	0					
ANR	74649	PrimaryExpression	1		74613	1					
ANR	74650	CompoundStatement		9:21:212:212	74613	1					
ANR	74651	BreakStatement	break ;	281:12:11372:11377	74613	0	True				
ANR	74652	SwitchStatement	switch ( c )		74613	2					
ANR	74653	Condition	c	283:16:11405:11405	74613	0	True				
ANR	74654	Identifier	c		74613	0					
ANR	74655	CompoundStatement		12:19:262:262	74613	1					
ANR	74656	Label	case 'i' :	284:8:11418:11426	74613	0	True				
ANR	74657	CompoundStatement		14:12:321:346	74613	1					
ANR	74658	IdentifierDeclStatement	char * infile = opj_optarg ;	285:12:11467:11492	74613	0	True				
ANR	74659	IdentifierDecl	* infile = opj_optarg		74613	0					
ANR	74660	IdentifierDeclType	char *		74613	0					
ANR	74661	Identifier	infile		74613	1					
ANR	74662	AssignmentExpression	* infile = opj_optarg		74613	2		=			
ANR	74663	Identifier	opj_optarg		74613	0					
ANR	74664	Identifier	opj_optarg		74613	1					
ANR	74665	ExpressionStatement	parameters -> decod_format = get_file_format ( infile )	286:12:11506:11556	74613	1	True				
ANR	74666	AssignmentExpression	parameters -> decod_format = get_file_format ( infile )		74613	0		=			
ANR	74667	PtrMemberAccess	parameters -> decod_format		74613	0					
ANR	74668	Identifier	parameters		74613	0					
ANR	74669	Identifier	decod_format		74613	1					
ANR	74670	CallExpression	get_file_format ( infile )		74613	1					
ANR	74671	Callee	get_file_format		74613	0					
ANR	74672	Identifier	get_file_format		74613	0					
ANR	74673	ArgumentList	infile		74613	1					
ANR	74674	Argument	infile		74613	0					
ANR	74675	Identifier	infile		74613	0					
ANR	74676	SwitchStatement	switch ( parameters -> decod_format )		74613	2					
ANR	74677	Condition	parameters -> decod_format	287:20:11578:11601	74613	0	True				
ANR	74678	PtrMemberAccess	parameters -> decod_format		74613	0					
ANR	74679	Identifier	parameters		74613	0					
ANR	74680	Identifier	decod_format		74613	1					
ANR	74681	CompoundStatement		16:46:458:458	74613	1					
ANR	74682	Label	case PGX_DFMT :	288:12:11618:11631	74613	0	True				
ANR	74683	Identifier	PGX_DFMT		74613	0					
ANR	74684	Label	case BIN_DFMT :	289:12:11645:11658	74613	1	True				
ANR	74685	Identifier	BIN_DFMT		74613	0					
ANR	74686	Label	case IMG_DFMT :	290:12:11672:11685	74613	2	True				
ANR	74687	Identifier	IMG_DFMT		74613	0					
ANR	74688	BreakStatement	break ;	291:16:11703:11708	74613	3	True				
ANR	74689	Label	default :	292:12:11722:11729	74613	4	True				
ANR	74690	Identifier	default		74613	0					
ANR	74691	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Unrecognized format for infile : %s [accept only *.pgx or *.bin] !!\\n\\n"" , infile )"	293:16:11747:11901	74613	5	True				
ANR	74692	CallExpression	"fprintf ( stdout , ""[ERROR] Unrecognized format for infile : %s [accept only *.pgx or *.bin] !!\\n\\n"" , infile )"		74613	0					
ANR	74693	Callee	fprintf		74613	0					
ANR	74694	Identifier	fprintf		74613	0					
ANR	74695	ArgumentList	stdout		74613	1					
ANR	74696	Argument	stdout		74613	0					
ANR	74697	Identifier	stdout		74613	0					
ANR	74698	Argument	"""[ERROR] Unrecognized format for infile : %s [accept only *.pgx or *.bin] !!\\n\\n"""		74613	1					
ANR	74699	PrimaryExpression	"""[ERROR] Unrecognized format for infile : %s [accept only *.pgx or *.bin] !!\\n\\n"""		74613	0					
ANR	74700	Argument	infile		74613	2					
ANR	74701	Identifier	infile		74613	0					
ANR	74702	ReturnStatement	return 1 ;	296:16:11919:11927	74613	6	True				
ANR	74703	PrimaryExpression	1		74613	0					
ANR	74704	BreakStatement	break ;	297:16:11945:11950	74613	7	True				
ANR	74705	ExpressionStatement	"strncpy ( parameters -> infile , infile , MAX_PATH )"	299:12:11978:12023	74613	3	True				
ANR	74706	CallExpression	"strncpy ( parameters -> infile , infile , MAX_PATH )"		74613	0					
ANR	74707	Callee	strncpy		74613	0					
ANR	74708	Identifier	strncpy		74613	0					
ANR	74709	ArgumentList	parameters -> infile		74613	1					
ANR	74710	Argument	parameters -> infile		74613	0					
ANR	74711	PtrMemberAccess	parameters -> infile		74613	0					
ANR	74712	Identifier	parameters		74613	0					
ANR	74713	Identifier	infile		74613	1					
ANR	74714	Argument	infile		74613	1					
ANR	74715	Identifier	infile		74613	0					
ANR	74716	Argument	MAX_PATH		74613	2					
ANR	74717	Identifier	MAX_PATH		74613	0					
ANR	74718	ExpressionStatement	"fprintf ( stdout , ""[INFO] Infile: %s \\n"" , parameters -> infile )"	300:12:12037:12096	74613	4	True				
ANR	74719	CallExpression	"fprintf ( stdout , ""[INFO] Infile: %s \\n"" , parameters -> infile )"		74613	0					
ANR	74720	Callee	fprintf		74613	0					
ANR	74721	Identifier	fprintf		74613	0					
ANR	74722	ArgumentList	stdout		74613	1					
ANR	74723	Argument	stdout		74613	0					
ANR	74724	Identifier	stdout		74613	0					
ANR	74725	Argument	"""[INFO] Infile: %s \\n"""		74613	1					
ANR	74726	PrimaryExpression	"""[INFO] Infile: %s \\n"""		74613	0					
ANR	74727	Argument	parameters -> infile		74613	2					
ANR	74728	PtrMemberAccess	parameters -> infile		74613	0					
ANR	74729	Identifier	parameters		74613	0					
ANR	74730	Identifier	infile		74613	1					
ANR	74731	BreakStatement	break ;	303:8:12117:12122	74613	2	True				
ANR	74732	Label	case 'm' :	306:8:12201:12209	74613	3	True				
ANR	74733	CompoundStatement		37:12:1148:1188	74613	4					
ANR	74734	IdentifierDeclStatement	char * imgfile = opj_optarg ;	307:12:12254:12280	74613	0	True				
ANR	74735	IdentifierDecl	* imgfile = opj_optarg		74613	0					
ANR	74736	IdentifierDeclType	char *		74613	0					
ANR	74737	Identifier	imgfile		74613	1					
ANR	74738	AssignmentExpression	* imgfile = opj_optarg		74613	2		=			
ANR	74739	Identifier	opj_optarg		74613	0					
ANR	74740	Identifier	opj_optarg		74613	1					
ANR	74741	IdentifierDeclStatement	int imgformat = get_file_format ( imgfile ) ;	308:12:12294:12334	74613	1	True				
ANR	74742	IdentifierDecl	imgformat = get_file_format ( imgfile )		74613	0					
ANR	74743	IdentifierDeclType	int		74613	0					
ANR	74744	Identifier	imgformat		74613	1					
ANR	74745	AssignmentExpression	imgformat = get_file_format ( imgfile )		74613	2		=			
ANR	74746	Identifier	imgformat		74613	0					
ANR	74747	CallExpression	get_file_format ( imgfile )		74613	1					
ANR	74748	Callee	get_file_format		74613	0					
ANR	74749	Identifier	get_file_format		74613	0					
ANR	74750	ArgumentList	imgfile		74613	1					
ANR	74751	Argument	imgfile		74613	0					
ANR	74752	Identifier	imgfile		74613	0					
ANR	74753	SwitchStatement	switch ( imgformat )		74613	2					
ANR	74754	Condition	imgformat	309:20:12356:12364	74613	0	True				
ANR	74755	Identifier	imgformat		74613	0					
ANR	74756	CompoundStatement		38:31:1221:1221	74613	1					
ANR	74757	Label	case IMG_DFMT :	310:12:12381:12394	74613	0	True				
ANR	74758	Identifier	IMG_DFMT		74613	0					
ANR	74759	BreakStatement	break ;	311:16:12412:12417	74613	1	True				
ANR	74760	Label	default :	312:12:12431:12438	74613	2	True				
ANR	74761	Identifier	default		74613	0					
ANR	74762	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Unrecognized format for imgfile : %s [accept only *.img] !!\\n\\n"" , imgfile )"	313:16:12456:12603	74613	3	True				
ANR	74763	CallExpression	"fprintf ( stdout , ""[ERROR] Unrecognized format for imgfile : %s [accept only *.img] !!\\n\\n"" , imgfile )"		74613	0					
ANR	74764	Callee	fprintf		74613	0					
ANR	74765	Identifier	fprintf		74613	0					
ANR	74766	ArgumentList	stdout		74613	1					
ANR	74767	Argument	stdout		74613	0					
ANR	74768	Identifier	stdout		74613	0					
ANR	74769	Argument	"""[ERROR] Unrecognized format for imgfile : %s [accept only *.img] !!\\n\\n"""		74613	1					
ANR	74770	PrimaryExpression	"""[ERROR] Unrecognized format for imgfile : %s [accept only *.img] !!\\n\\n"""		74613	0					
ANR	74771	Argument	imgfile		74613	2					
ANR	74772	Identifier	imgfile		74613	0					
ANR	74773	ReturnStatement	return 1 ;	316:16:12621:12629	74613	4	True				
ANR	74774	PrimaryExpression	1		74613	0					
ANR	74775	BreakStatement	break ;	317:16:12647:12652	74613	5	True				
ANR	74776	ExpressionStatement	"strncpy ( parameters -> imgfile , imgfile , MAX_PATH )"	319:12:12680:12727	74613	3	True				
ANR	74777	CallExpression	"strncpy ( parameters -> imgfile , imgfile , MAX_PATH )"		74613	0					
ANR	74778	Callee	strncpy		74613	0					
ANR	74779	Identifier	strncpy		74613	0					
ANR	74780	ArgumentList	parameters -> imgfile		74613	1					
ANR	74781	Argument	parameters -> imgfile		74613	0					
ANR	74782	PtrMemberAccess	parameters -> imgfile		74613	0					
ANR	74783	Identifier	parameters		74613	0					
ANR	74784	Identifier	imgfile		74613	1					
ANR	74785	Argument	imgfile		74613	1					
ANR	74786	Identifier	imgfile		74613	0					
ANR	74787	Argument	MAX_PATH		74613	2					
ANR	74788	Identifier	MAX_PATH		74613	0					
ANR	74789	ExpressionStatement	"fprintf ( stdout , ""[INFO] Imgfile: %s Format: %d\\n"" , parameters -> imgfile , imgformat )"	320:12:12741:12843	74613	4	True				
ANR	74790	CallExpression	"fprintf ( stdout , ""[INFO] Imgfile: %s Format: %d\\n"" , parameters -> imgfile , imgformat )"		74613	0					
ANR	74791	Callee	fprintf		74613	0					
ANR	74792	Identifier	fprintf		74613	0					
ANR	74793	ArgumentList	stdout		74613	1					
ANR	74794	Argument	stdout		74613	0					
ANR	74795	Identifier	stdout		74613	0					
ANR	74796	Argument	"""[INFO] Imgfile: %s Format: %d\\n"""		74613	1					
ANR	74797	PrimaryExpression	"""[INFO] Imgfile: %s Format: %d\\n"""		74613	0					
ANR	74798	Argument	parameters -> imgfile		74613	2					
ANR	74799	PtrMemberAccess	parameters -> imgfile		74613	0					
ANR	74800	Identifier	parameters		74613	0					
ANR	74801	Identifier	imgfile		74613	1					
ANR	74802	Argument	imgformat		74613	3					
ANR	74803	Identifier	imgformat		74613	0					
ANR	74804	BreakStatement	break ;	323:8:12863:12868	74613	5	True				
ANR	74805	Label	case 'o' :	326:8:12947:12955	74613	6	True				
ANR	74806	CompoundStatement		56:12:1851:1877	74613	7					
ANR	74807	IdentifierDeclStatement	char * outfile = opj_optarg ;	327:12:12997:13023	74613	0	True				
ANR	74808	IdentifierDecl	* outfile = opj_optarg		74613	0					
ANR	74809	IdentifierDeclType	char *		74613	0					
ANR	74810	Identifier	outfile		74613	1					
ANR	74811	AssignmentExpression	* outfile = opj_optarg		74613	2		=			
ANR	74812	Identifier	opj_optarg		74613	0					
ANR	74813	Identifier	opj_optarg		74613	1					
ANR	74814	ExpressionStatement	parameters -> cod_format = get_file_format ( outfile )	328:12:13037:13086	74613	1	True				
ANR	74815	AssignmentExpression	parameters -> cod_format = get_file_format ( outfile )		74613	0		=			
ANR	74816	PtrMemberAccess	parameters -> cod_format		74613	0					
ANR	74817	Identifier	parameters		74613	0					
ANR	74818	Identifier	cod_format		74613	1					
ANR	74819	CallExpression	get_file_format ( outfile )		74613	1					
ANR	74820	Callee	get_file_format		74613	0					
ANR	74821	Identifier	get_file_format		74613	0					
ANR	74822	ArgumentList	outfile		74613	1					
ANR	74823	Argument	outfile		74613	0					
ANR	74824	Identifier	outfile		74613	0					
ANR	74825	SwitchStatement	switch ( parameters -> cod_format )		74613	2					
ANR	74826	Condition	parameters -> cod_format	329:20:13108:13129	74613	0	True				
ANR	74827	PtrMemberAccess	parameters -> cod_format		74613	0					
ANR	74828	Identifier	parameters		74613	0					
ANR	74829	Identifier	cod_format		74613	1					
ANR	74830	CompoundStatement		58:44:1986:1986	74613	1					
ANR	74831	Label	case J3D_CFMT :	330:12:13146:13159	74613	0	True				
ANR	74832	Identifier	J3D_CFMT		74613	0					
ANR	74833	Label	case J2K_CFMT :	331:12:13173:13186	74613	1	True				
ANR	74834	Identifier	J2K_CFMT		74613	0					
ANR	74835	Label	case LSE_CFMT :	332:12:13200:13213	74613	2	True				
ANR	74836	Identifier	LSE_CFMT		74613	0					
ANR	74837	BreakStatement	break ;	333:16:13231:13236	74613	3	True				
ANR	74838	Label	default :	334:12:13250:13257	74613	4	True				
ANR	74839	Identifier	default		74613	0					
ANR	74840	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Unknown output format volume %s [only *.j2k, *.lse3d or *.jp3d]!! \\n"" , outfile )"	335:16:13275:13427	74613	5	True				
ANR	74841	CallExpression	"fprintf ( stdout , ""[ERROR] Unknown output format volume %s [only *.j2k, *.lse3d or *.jp3d]!! \\n"" , outfile )"		74613	0					
ANR	74842	Callee	fprintf		74613	0					
ANR	74843	Identifier	fprintf		74613	0					
ANR	74844	ArgumentList	stdout		74613	1					
ANR	74845	Argument	stdout		74613	0					
ANR	74846	Identifier	stdout		74613	0					
ANR	74847	Argument	"""[ERROR] Unknown output format volume %s [only *.j2k, *.lse3d or *.jp3d]!! \\n"""		74613	1					
ANR	74848	PrimaryExpression	"""[ERROR] Unknown output format volume %s [only *.j2k, *.lse3d or *.jp3d]!! \\n"""		74613	0					
ANR	74849	Argument	outfile		74613	2					
ANR	74850	Identifier	outfile		74613	0					
ANR	74851	ReturnStatement	return 1 ;	338:16:13445:13453	74613	6	True				
ANR	74852	PrimaryExpression	1		74613	0					
ANR	74853	BreakStatement	break ;	339:16:13471:13476	74613	7	True				
ANR	74854	ExpressionStatement	"strncpy ( parameters -> outfile , outfile , MAX_PATH )"	341:12:13504:13551	74613	3	True				
ANR	74855	CallExpression	"strncpy ( parameters -> outfile , outfile , MAX_PATH )"		74613	0					
ANR	74856	Callee	strncpy		74613	0					
ANR	74857	Identifier	strncpy		74613	0					
ANR	74858	ArgumentList	parameters -> outfile		74613	1					
ANR	74859	Argument	parameters -> outfile		74613	0					
ANR	74860	PtrMemberAccess	parameters -> outfile		74613	0					
ANR	74861	Identifier	parameters		74613	0					
ANR	74862	Identifier	outfile		74613	1					
ANR	74863	Argument	outfile		74613	1					
ANR	74864	Identifier	outfile		74613	0					
ANR	74865	Argument	MAX_PATH		74613	2					
ANR	74866	Identifier	MAX_PATH		74613	0					
ANR	74867	ExpressionStatement	"fprintf ( stdout , ""[INFO] Outfile: %s \\n"" , parameters -> outfile )"	342:12:13565:13626	74613	4	True				
ANR	74868	CallExpression	"fprintf ( stdout , ""[INFO] Outfile: %s \\n"" , parameters -> outfile )"		74613	0					
ANR	74869	Callee	fprintf		74613	0					
ANR	74870	Identifier	fprintf		74613	0					
ANR	74871	ArgumentList	stdout		74613	1					
ANR	74872	Argument	stdout		74613	0					
ANR	74873	Identifier	stdout		74613	0					
ANR	74874	Argument	"""[INFO] Outfile: %s \\n"""		74613	1					
ANR	74875	PrimaryExpression	"""[INFO] Outfile: %s \\n"""		74613	0					
ANR	74876	Argument	parameters -> outfile		74613	2					
ANR	74877	PtrMemberAccess	parameters -> outfile		74613	0					
ANR	74878	Identifier	parameters		74613	0					
ANR	74879	Identifier	outfile		74613	1					
ANR	74880	BreakStatement	break ;	344:8:13646:13651	74613	8	True				
ANR	74881	Label	case 'r' :	348:8:13731:13739	74613	9	True				
ANR	74882	CompoundStatement		78:12:2663:2683	74613	10					
ANR	74883	IdentifierDeclStatement	char * s = opj_optarg ;	349:12:13809:13829	74613	0	True				
ANR	74884	IdentifierDecl	* s = opj_optarg		74613	0					
ANR	74885	IdentifierDeclType	char *		74613	0					
ANR	74886	Identifier	s		74613	1					
ANR	74887	AssignmentExpression	* s = opj_optarg		74613	2		=			
ANR	74888	Identifier	opj_optarg		74613	0					
ANR	74889	Identifier	opj_optarg		74613	1					
ANR	74890	WhileStatement	"while ( sscanf ( s , ""%f"" , & parameters -> tcp_rates [ parameters -> tcp_numlayers ] ) == 1 )"		74613	1					
ANR	74891	Condition	"sscanf ( s , ""%f"" , & parameters -> tcp_rates [ parameters -> tcp_numlayers ] ) == 1"	350:19:13850:13940	74613	0	True				
ANR	74892	EqualityExpression	"sscanf ( s , ""%f"" , & parameters -> tcp_rates [ parameters -> tcp_numlayers ] ) == 1"		74613	0		==			
ANR	74893	CallExpression	"sscanf ( s , ""%f"" , & parameters -> tcp_rates [ parameters -> tcp_numlayers ] )"		74613	0					
ANR	74894	Callee	sscanf		74613	0					
ANR	74895	Identifier	sscanf		74613	0					
ANR	74896	ArgumentList	s		74613	1					
ANR	74897	Argument	s		74613	0					
ANR	74898	Identifier	s		74613	0					
ANR	74899	Argument	"""%f"""		74613	1					
ANR	74900	PrimaryExpression	"""%f"""		74613	0					
ANR	74901	Argument	& parameters -> tcp_rates [ parameters -> tcp_numlayers ]		74613	2					
ANR	74902	UnaryOperationExpression	& parameters -> tcp_rates [ parameters -> tcp_numlayers ]		74613	0					
ANR	74903	UnaryOperator	&		74613	0					
ANR	74904	ArrayIndexing	parameters -> tcp_rates [ parameters -> tcp_numlayers ]		74613	1					
ANR	74905	PtrMemberAccess	parameters -> tcp_rates		74613	0					
ANR	74906	Identifier	parameters		74613	0					
ANR	74907	Identifier	tcp_rates		74613	1					
ANR	74908	PtrMemberAccess	parameters -> tcp_numlayers		74613	1					
ANR	74909	Identifier	parameters		74613	0					
ANR	74910	Identifier	tcp_numlayers		74613	1					
ANR	74911	PrimaryExpression	1		74613	1					
ANR	74912	CompoundStatement		80:23:2797:2797	74613	1					
ANR	74913	ExpressionStatement	parameters -> tcp_numlayers ++	352:16:13961:13988	74613	0	True				
ANR	74914	PostIncDecOperationExpression	parameters -> tcp_numlayers ++		74613	0					
ANR	74915	PtrMemberAccess	parameters -> tcp_numlayers		74613	0					
ANR	74916	Identifier	parameters		74613	0					
ANR	74917	Identifier	tcp_numlayers		74613	1					
ANR	74918	IncDec	++		74613	1					
ANR	74919	WhileStatement	"while ( * s && * s != ',' )"		74613	1					
ANR	74920	Condition	"* s && * s != ','"	353:23:14013:14027	74613	0	True				
ANR	74921	AndExpression	"* s && * s != ','"		74613	0		&&			
ANR	74922	UnaryOperationExpression	* s		74613	0					
ANR	74923	UnaryOperator	*		74613	0					
ANR	74924	Identifier	s		74613	1					
ANR	74925	EqualityExpression	"* s != ','"		74613	1		!=			
ANR	74926	UnaryOperationExpression	* s		74613	0					
ANR	74927	UnaryOperator	*		74613	0					
ANR	74928	Identifier	s		74613	1					
ANR	74929	PrimaryExpression	"','"		74613	1					
ANR	74930	CompoundStatement		82:40:2884:2884	74613	1					
ANR	74931	ExpressionStatement	s ++	354:20:14052:14055	74613	0	True				
ANR	74932	PostIncDecOperationExpression	s ++		74613	0					
ANR	74933	Identifier	s		74613	0					
ANR	74934	IncDec	++		74613	1					
ANR	74935	IfStatement	if ( ! * s )		74613	2					
ANR	74936	Condition	! * s	356:20:14095:14097	74613	0	True				
ANR	74937	UnaryOperationExpression	! * s		74613	0					
ANR	74938	UnaryOperator	!		74613	0					
ANR	74939	UnaryOperationExpression	* s		74613	1					
ANR	74940	UnaryOperator	*		74613	0					
ANR	74941	Identifier	s		74613	1					
ANR	74942	CompoundStatement		85:25:2954:2954	74613	1					
ANR	74943	BreakStatement	break ;	357:20:14122:14127	74613	0	True				
ANR	74944	ExpressionStatement	s ++	359:16:14163:14166	74613	3	True				
ANR	74945	PostIncDecOperationExpression	s ++		74613	0					
ANR	74946	Identifier	s		74613	0					
ANR	74947	IncDec	++		74613	1					
ANR	74948	ExpressionStatement	parameters -> cp_disto_alloc = 1	361:12:14194:14224	74613	2	True				
ANR	74949	AssignmentExpression	parameters -> cp_disto_alloc = 1		74613	0		=			
ANR	74950	PtrMemberAccess	parameters -> cp_disto_alloc		74613	0					
ANR	74951	Identifier	parameters		74613	0					
ANR	74952	Identifier	cp_disto_alloc		74613	1					
ANR	74953	PrimaryExpression	1		74613	1					
ANR	74954	BreakStatement	break ;	363:8:14244:14249	74613	11	True				
ANR	74955	Label	case 'q' :	367:8:14329:14337	74613	12	True				
ANR	74956	CompoundStatement		97:12:3261:3281	74613	13					
ANR	74957	IdentifierDeclStatement	char * s = opj_optarg ;	368:12:14407:14427	74613	0	True				
ANR	74958	IdentifierDecl	* s = opj_optarg		74613	0					
ANR	74959	IdentifierDeclType	char *		74613	0					
ANR	74960	Identifier	s		74613	1					
ANR	74961	AssignmentExpression	* s = opj_optarg		74613	2		=			
ANR	74962	Identifier	opj_optarg		74613	0					
ANR	74963	Identifier	opj_optarg		74613	1					
ANR	74964	WhileStatement	"while ( sscanf ( s , ""%f"" , & parameters -> tcp_distoratio [ parameters -> tcp_numlayers ] ) == 1 )"		74613	1					
ANR	74965	Condition	"sscanf ( s , ""%f"" , & parameters -> tcp_distoratio [ parameters -> tcp_numlayers ] ) == 1"	369:19:14448:14543	74613	0	True				
ANR	74966	EqualityExpression	"sscanf ( s , ""%f"" , & parameters -> tcp_distoratio [ parameters -> tcp_numlayers ] ) == 1"		74613	0		==			
ANR	74967	CallExpression	"sscanf ( s , ""%f"" , & parameters -> tcp_distoratio [ parameters -> tcp_numlayers ] )"		74613	0					
ANR	74968	Callee	sscanf		74613	0					
ANR	74969	Identifier	sscanf		74613	0					
ANR	74970	ArgumentList	s		74613	1					
ANR	74971	Argument	s		74613	0					
ANR	74972	Identifier	s		74613	0					
ANR	74973	Argument	"""%f"""		74613	1					
ANR	74974	PrimaryExpression	"""%f"""		74613	0					
ANR	74975	Argument	& parameters -> tcp_distoratio [ parameters -> tcp_numlayers ]		74613	2					
ANR	74976	UnaryOperationExpression	& parameters -> tcp_distoratio [ parameters -> tcp_numlayers ]		74613	0					
ANR	74977	UnaryOperator	&		74613	0					
ANR	74978	ArrayIndexing	parameters -> tcp_distoratio [ parameters -> tcp_numlayers ]		74613	1					
ANR	74979	PtrMemberAccess	parameters -> tcp_distoratio		74613	0					
ANR	74980	Identifier	parameters		74613	0					
ANR	74981	Identifier	tcp_distoratio		74613	1					
ANR	74982	PtrMemberAccess	parameters -> tcp_numlayers		74613	1					
ANR	74983	Identifier	parameters		74613	0					
ANR	74984	Identifier	tcp_numlayers		74613	1					
ANR	74985	PrimaryExpression	1		74613	1					
ANR	74986	CompoundStatement		99:26:3400:3400	74613	1					
ANR	74987	ExpressionStatement	parameters -> tcp_numlayers ++	371:16:14564:14591	74613	0	True				
ANR	74988	PostIncDecOperationExpression	parameters -> tcp_numlayers ++		74613	0					
ANR	74989	PtrMemberAccess	parameters -> tcp_numlayers		74613	0					
ANR	74990	Identifier	parameters		74613	0					
ANR	74991	Identifier	tcp_numlayers		74613	1					
ANR	74992	IncDec	++		74613	1					
ANR	74993	WhileStatement	"while ( * s && * s != ',' )"		74613	1					
ANR	74994	Condition	"* s && * s != ','"	372:23:14616:14630	74613	0	True				
ANR	74995	AndExpression	"* s && * s != ','"		74613	0		&&			
ANR	74996	UnaryOperationExpression	* s		74613	0					
ANR	74997	UnaryOperator	*		74613	0					
ANR	74998	Identifier	s		74613	1					
ANR	74999	EqualityExpression	"* s != ','"		74613	1		!=			
ANR	75000	UnaryOperationExpression	* s		74613	0					
ANR	75001	UnaryOperator	*		74613	0					
ANR	75002	Identifier	s		74613	1					
ANR	75003	PrimaryExpression	"','"		74613	1					
ANR	75004	CompoundStatement		101:40:3487:3487	74613	1					
ANR	75005	ExpressionStatement	s ++	373:20:14655:14658	74613	0	True				
ANR	75006	PostIncDecOperationExpression	s ++		74613	0					
ANR	75007	Identifier	s		74613	0					
ANR	75008	IncDec	++		74613	1					
ANR	75009	IfStatement	if ( ! * s )		74613	2					
ANR	75010	Condition	! * s	375:20:14698:14700	74613	0	True				
ANR	75011	UnaryOperationExpression	! * s		74613	0					
ANR	75012	UnaryOperator	!		74613	0					
ANR	75013	UnaryOperationExpression	* s		74613	1					
ANR	75014	UnaryOperator	*		74613	0					
ANR	75015	Identifier	s		74613	1					
ANR	75016	CompoundStatement		104:25:3557:3557	74613	1					
ANR	75017	BreakStatement	break ;	376:20:14725:14730	74613	0	True				
ANR	75018	ExpressionStatement	s ++	378:16:14766:14769	74613	3	True				
ANR	75019	PostIncDecOperationExpression	s ++		74613	0					
ANR	75020	Identifier	s		74613	0					
ANR	75021	IncDec	++		74613	1					
ANR	75022	ExpressionStatement	parameters -> cp_fixed_quality = 1	380:12:14797:14829	74613	2	True				
ANR	75023	AssignmentExpression	parameters -> cp_fixed_quality = 1		74613	0		=			
ANR	75024	PtrMemberAccess	parameters -> cp_fixed_quality		74613	0					
ANR	75025	Identifier	parameters		74613	0					
ANR	75026	Identifier	cp_fixed_quality		74613	1					
ANR	75027	PrimaryExpression	1		74613	1					
ANR	75028	BreakStatement	break ;	382:8:14849:14854	74613	14	True				
ANR	75029	Label	case 'f' :	386:8:14934:14942	74613	15	True				
ANR	75030	CompoundStatement		115:18:3798:3798	74613	16					
ANR	75031	ExpressionStatement	"fprintf ( stdout , ""/---------------------------------------------------\\\\\\n"" )"	387:12:14958:15033	74613	0	True				
ANR	75032	CallExpression	"fprintf ( stdout , ""/---------------------------------------------------\\\\\\n"" )"		74613	0					
ANR	75033	Callee	fprintf		74613	0					
ANR	75034	Identifier	fprintf		74613	0					
ANR	75035	ArgumentList	stdout		74613	1					
ANR	75036	Argument	stdout		74613	0					
ANR	75037	Identifier	stdout		74613	0					
ANR	75038	Argument	"""/---------------------------------------------------\\\\\\n"""		74613	1					
ANR	75039	PrimaryExpression	"""/---------------------------------------------------\\\\\\n"""		74613	0					
ANR	75040	ExpressionStatement	"fprintf ( stdout , ""|  Fixed layer allocation option not implemented !!  |\\n"" )"	388:12:15047:15122	74613	1	True				
ANR	75041	CallExpression	"fprintf ( stdout , ""|  Fixed layer allocation option not implemented !!  |\\n"" )"		74613	0					
ANR	75042	Callee	fprintf		74613	0					
ANR	75043	Identifier	fprintf		74613	0					
ANR	75044	ArgumentList	stdout		74613	1					
ANR	75045	Argument	stdout		74613	0					
ANR	75046	Identifier	stdout		74613	0					
ANR	75047	Argument	"""|  Fixed layer allocation option not implemented !!  |\\n"""		74613	1					
ANR	75048	PrimaryExpression	"""|  Fixed layer allocation option not implemented !!  |\\n"""		74613	0					
ANR	75049	ExpressionStatement	"fprintf ( stdout , ""\\\\---------------------------------------------------/\\n"" )"	389:12:15136:15211	74613	2	True				
ANR	75050	CallExpression	"fprintf ( stdout , ""\\\\---------------------------------------------------/\\n"" )"		74613	0					
ANR	75051	Callee	fprintf		74613	0					
ANR	75052	Identifier	fprintf		74613	0					
ANR	75053	ArgumentList	stdout		74613	1					
ANR	75054	Argument	stdout		74613	0					
ANR	75055	Identifier	stdout		74613	0					
ANR	75056	Argument	"""\\\\---------------------------------------------------/\\n"""		74613	1					
ANR	75057	PrimaryExpression	"""\\\\---------------------------------------------------/\\n"""		74613	0					
ANR	75058	BreakStatement	break ;	430:8:16646:16651	74613	17	True				
ANR	75059	Label	case 't' :	434:8:16731:16739	74613	18	True				
ANR	75060	CompoundStatement		163:18:5595:5595	74613	19					
ANR	75061	IfStatement	"if ( sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> cp_tdx , & parameters -> cp_tdy , & parameters -> cp_tdz ) != 3 )"		74613	0					
ANR	75062	Condition	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> cp_tdx , & parameters -> cp_tdy , & parameters -> cp_tdz ) != 3"	435:16:16779:16899	74613	0	True				
ANR	75063	EqualityExpression	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> cp_tdx , & parameters -> cp_tdy , & parameters -> cp_tdz ) != 3"		74613	0		!=			
ANR	75064	CallExpression	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> cp_tdx , & parameters -> cp_tdy , & parameters -> cp_tdz )"		74613	0					
ANR	75065	Callee	sscanf		74613	0					
ANR	75066	Identifier	sscanf		74613	0					
ANR	75067	ArgumentList	opj_optarg		74613	1					
ANR	75068	Argument	opj_optarg		74613	0					
ANR	75069	Identifier	opj_optarg		74613	0					
ANR	75070	Argument	"""%d,%d,%d"""		74613	1					
ANR	75071	PrimaryExpression	"""%d,%d,%d"""		74613	0					
ANR	75072	Argument	& parameters -> cp_tdx		74613	2					
ANR	75073	UnaryOperationExpression	& parameters -> cp_tdx		74613	0					
ANR	75074	UnaryOperator	&		74613	0					
ANR	75075	PtrMemberAccess	parameters -> cp_tdx		74613	1					
ANR	75076	Identifier	parameters		74613	0					
ANR	75077	Identifier	cp_tdx		74613	1					
ANR	75078	Argument	& parameters -> cp_tdy		74613	3					
ANR	75079	UnaryOperationExpression	& parameters -> cp_tdy		74613	0					
ANR	75080	UnaryOperator	&		74613	0					
ANR	75081	PtrMemberAccess	parameters -> cp_tdy		74613	1					
ANR	75082	Identifier	parameters		74613	0					
ANR	75083	Identifier	cp_tdy		74613	1					
ANR	75084	Argument	& parameters -> cp_tdz		74613	4					
ANR	75085	UnaryOperationExpression	& parameters -> cp_tdz		74613	0					
ANR	75086	UnaryOperator	&		74613	0					
ANR	75087	PtrMemberAccess	parameters -> cp_tdz		74613	1					
ANR	75088	Identifier	parameters		74613	0					
ANR	75089	Identifier	cp_tdz		74613	1					
ANR	75090	PrimaryExpression	3		74613	1					
ANR	75091	CompoundStatement		165:50:5756:5756	74613	1					
ANR	75092	ExpressionStatement	"fprintf ( stdout , ""[ERROR] '-t' 'dimensions of tiles' argument error !  [-t tdx,tdy,tdz]\\n"" )"	437:16:16920:17034	74613	0	True				
ANR	75093	CallExpression	"fprintf ( stdout , ""[ERROR] '-t' 'dimensions of tiles' argument error !  [-t tdx,tdy,tdz]\\n"" )"		74613	0					
ANR	75094	Callee	fprintf		74613	0					
ANR	75095	Identifier	fprintf		74613	0					
ANR	75096	ArgumentList	stdout		74613	1					
ANR	75097	Argument	stdout		74613	0					
ANR	75098	Identifier	stdout		74613	0					
ANR	75099	Argument	"""[ERROR] '-t' 'dimensions of tiles' argument error !  [-t tdx,tdy,tdz]\\n"""		74613	1					
ANR	75100	PrimaryExpression	"""[ERROR] '-t' 'dimensions of tiles' argument error !  [-t tdx,tdy,tdz]\\n"""		74613	0					
ANR	75101	ReturnStatement	return 1 ;	439:16:17052:17060	74613	1	True				
ANR	75102	PrimaryExpression	1		74613	0					
ANR	75103	ExpressionStatement	parameters -> tile_size_on = true	441:12:17088:17119	74613	1	True				
ANR	75104	AssignmentExpression	parameters -> tile_size_on = true		74613	0		=			
ANR	75105	PtrMemberAccess	parameters -> tile_size_on		74613	0					
ANR	75106	Identifier	parameters		74613	0					
ANR	75107	Identifier	tile_size_on		74613	1					
ANR	75108	Identifier	true		74613	1					
ANR	75109	BreakStatement	break ;	443:8:17139:17144	74613	20	True				
ANR	75110	Label	case 'n' :	447:8:17224:17232	74613	21	True				
ANR	75111	CompoundStatement		177:12:6127:6134	74613	22					
ANR	75112	IdentifierDeclStatement	int aux ;	448:12:17273:17280	74613	0	True				
ANR	75113	IdentifierDecl	aux		74613	0					
ANR	75114	IdentifierDeclType	int		74613	0					
ANR	75115	Identifier	aux		74613	1					
ANR	75116	ExpressionStatement	"aux = sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> numresolution [ 0 ] , & parameters -> numresolution [ 1 ] , & parameters -> numresolution [ 2 ] )"	449:12:17294:17448	74613	1	True				
ANR	75117	AssignmentExpression	"aux = sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> numresolution [ 0 ] , & parameters -> numresolution [ 1 ] , & parameters -> numresolution [ 2 ] )"		74613	0		=			
ANR	75118	Identifier	aux		74613	0					
ANR	75119	CallExpression	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> numresolution [ 0 ] , & parameters -> numresolution [ 1 ] , & parameters -> numresolution [ 2 ] )"		74613	1					
ANR	75120	Callee	sscanf		74613	0					
ANR	75121	Identifier	sscanf		74613	0					
ANR	75122	ArgumentList	opj_optarg		74613	1					
ANR	75123	Argument	opj_optarg		74613	0					
ANR	75124	Identifier	opj_optarg		74613	0					
ANR	75125	Argument	"""%d,%d,%d"""		74613	1					
ANR	75126	PrimaryExpression	"""%d,%d,%d"""		74613	0					
ANR	75127	Argument	& parameters -> numresolution [ 0 ]		74613	2					
ANR	75128	UnaryOperationExpression	& parameters -> numresolution [ 0 ]		74613	0					
ANR	75129	UnaryOperator	&		74613	0					
ANR	75130	ArrayIndexing	parameters -> numresolution [ 0 ]		74613	1					
ANR	75131	PtrMemberAccess	parameters -> numresolution		74613	0					
ANR	75132	Identifier	parameters		74613	0					
ANR	75133	Identifier	numresolution		74613	1					
ANR	75134	PrimaryExpression	0		74613	1					
ANR	75135	Argument	& parameters -> numresolution [ 1 ]		74613	3					
ANR	75136	UnaryOperationExpression	& parameters -> numresolution [ 1 ]		74613	0					
ANR	75137	UnaryOperator	&		74613	0					
ANR	75138	ArrayIndexing	parameters -> numresolution [ 1 ]		74613	1					
ANR	75139	PtrMemberAccess	parameters -> numresolution		74613	0					
ANR	75140	Identifier	parameters		74613	0					
ANR	75141	Identifier	numresolution		74613	1					
ANR	75142	PrimaryExpression	1		74613	1					
ANR	75143	Argument	& parameters -> numresolution [ 2 ]		74613	4					
ANR	75144	UnaryOperationExpression	& parameters -> numresolution [ 2 ]		74613	0					
ANR	75145	UnaryOperator	&		74613	0					
ANR	75146	ArrayIndexing	parameters -> numresolution [ 2 ]		74613	1					
ANR	75147	PtrMemberAccess	parameters -> numresolution		74613	0					
ANR	75148	Identifier	parameters		74613	0					
ANR	75149	Identifier	numresolution		74613	1					
ANR	75150	PrimaryExpression	2		74613	1					
ANR	75151	IfStatement	if ( aux == 2 )		74613	2					
ANR	75152	Condition	aux == 2	451:16:17466:17473	74613	0	True				
ANR	75153	EqualityExpression	aux == 2		74613	0		==			
ANR	75154	Identifier	aux		74613	0					
ANR	75155	PrimaryExpression	2		74613	1					
ANR	75156	CompoundStatement		180:26:6330:6330	74613	1					
ANR	75157	ExpressionStatement	parameters -> numresolution [ 2 ] = 1	452:16:17494:17526	74613	0	True				
ANR	75158	AssignmentExpression	parameters -> numresolution [ 2 ] = 1		74613	0		=			
ANR	75159	ArrayIndexing	parameters -> numresolution [ 2 ]		74613	0					
ANR	75160	PtrMemberAccess	parameters -> numresolution		74613	0					
ANR	75161	Identifier	parameters		74613	0					
ANR	75162	Identifier	numresolution		74613	1					
ANR	75163	PrimaryExpression	2		74613	1					
ANR	75164	PrimaryExpression	1		74613	1					
ANR	75165	ElseStatement	else		74613	0					
ANR	75166	IfStatement	if ( aux == 1 )		74613	0					
ANR	75167	Condition	aux == 1	453:23:17551:17558	74613	0	True				
ANR	75168	EqualityExpression	aux == 1		74613	0		==			
ANR	75169	Identifier	aux		74613	0					
ANR	75170	PrimaryExpression	1		74613	1					
ANR	75171	CompoundStatement		182:33:6415:6415	74613	1					
ANR	75172	ExpressionStatement	parameters -> numresolution [ 1 ] = parameters -> numresolution [ 0 ]	454:16:17579:17638	74613	0	True				
ANR	75173	AssignmentExpression	parameters -> numresolution [ 1 ] = parameters -> numresolution [ 0 ]		74613	0		=			
ANR	75174	ArrayIndexing	parameters -> numresolution [ 1 ]		74613	0					
ANR	75175	PtrMemberAccess	parameters -> numresolution		74613	0					
ANR	75176	Identifier	parameters		74613	0					
ANR	75177	Identifier	numresolution		74613	1					
ANR	75178	PrimaryExpression	1		74613	1					
ANR	75179	ArrayIndexing	parameters -> numresolution [ 0 ]		74613	1					
ANR	75180	PtrMemberAccess	parameters -> numresolution		74613	0					
ANR	75181	Identifier	parameters		74613	0					
ANR	75182	Identifier	numresolution		74613	1					
ANR	75183	PrimaryExpression	0		74613	1					
ANR	75184	ExpressionStatement	parameters -> numresolution [ 2 ] = 1	455:16:17656:17688	74613	1	True				
ANR	75185	AssignmentExpression	parameters -> numresolution [ 2 ] = 1		74613	0		=			
ANR	75186	ArrayIndexing	parameters -> numresolution [ 2 ]		74613	0					
ANR	75187	PtrMemberAccess	parameters -> numresolution		74613	0					
ANR	75188	Identifier	parameters		74613	0					
ANR	75189	Identifier	numresolution		74613	1					
ANR	75190	PrimaryExpression	2		74613	1					
ANR	75191	PrimaryExpression	1		74613	1					
ANR	75192	ElseStatement	else		74613	0					
ANR	75193	IfStatement	if ( aux == 0 )		74613	0					
ANR	75194	Condition	aux == 0	456:23:17713:17720	74613	0	True				
ANR	75195	EqualityExpression	aux == 0		74613	0		==			
ANR	75196	Identifier	aux		74613	0					
ANR	75197	PrimaryExpression	0		74613	1					
ANR	75198	CompoundStatement		185:33:6577:6577	74613	1					
ANR	75199	ExpressionStatement	parameters -> numresolution [ 0 ] = 1	457:16:17741:17773	74613	0	True				
ANR	75200	AssignmentExpression	parameters -> numresolution [ 0 ] = 1		74613	0		=			
ANR	75201	ArrayIndexing	parameters -> numresolution [ 0 ]		74613	0					
ANR	75202	PtrMemberAccess	parameters -> numresolution		74613	0					
ANR	75203	Identifier	parameters		74613	0					
ANR	75204	Identifier	numresolution		74613	1					
ANR	75205	PrimaryExpression	0		74613	1					
ANR	75206	PrimaryExpression	1		74613	1					
ANR	75207	ExpressionStatement	parameters -> numresolution [ 1 ] = 1	458:16:17791:17823	74613	1	True				
ANR	75208	AssignmentExpression	parameters -> numresolution [ 1 ] = 1		74613	0		=			
ANR	75209	ArrayIndexing	parameters -> numresolution [ 1 ]		74613	0					
ANR	75210	PtrMemberAccess	parameters -> numresolution		74613	0					
ANR	75211	Identifier	parameters		74613	0					
ANR	75212	Identifier	numresolution		74613	1					
ANR	75213	PrimaryExpression	1		74613	1					
ANR	75214	PrimaryExpression	1		74613	1					
ANR	75215	ExpressionStatement	parameters -> numresolution [ 2 ] = 1	459:16:17841:17873	74613	2	True				
ANR	75216	AssignmentExpression	parameters -> numresolution [ 2 ] = 1		74613	0		=			
ANR	75217	ArrayIndexing	parameters -> numresolution [ 2 ]		74613	0					
ANR	75218	PtrMemberAccess	parameters -> numresolution		74613	0					
ANR	75219	Identifier	parameters		74613	0					
ANR	75220	Identifier	numresolution		74613	1					
ANR	75221	PrimaryExpression	2		74613	1					
ANR	75222	PrimaryExpression	1		74613	1					
ANR	75223	BreakStatement	break ;	462:8:17907:17912	74613	23	True				
ANR	75224	Label	case 'c' :	465:8:17991:17999	74613	24	True				
ANR	75225	CompoundStatement		198:12:6975:6995	74613	25					
ANR	75226	IdentifierDeclStatement	char sep ;	466:12:18048:18056	74613	0	True				
ANR	75227	IdentifierDecl	sep		74613	0					
ANR	75228	IdentifierDeclType	char		74613	0					
ANR	75229	Identifier	sep		74613	1					
ANR	75230	IdentifierDeclStatement	int res_spec = 0 ;	467:12:18070:18086	74613	1	True				
ANR	75231	IdentifierDecl	res_spec = 0		74613	0					
ANR	75232	IdentifierDeclType	int		74613	0					
ANR	75233	Identifier	res_spec		74613	1					
ANR	75234	AssignmentExpression	res_spec = 0		74613	2		=			
ANR	75235	Identifier	res_spec		74613	0					
ANR	75236	PrimaryExpression	0		74613	1					
ANR	75237	IdentifierDeclStatement	int aux ;	468:12:18100:18107	74613	2	True				
ANR	75238	IdentifierDecl	aux		74613	0					
ANR	75239	IdentifierDeclType	int		74613	0					
ANR	75240	Identifier	aux		74613	1					
ANR	75241	IdentifierDeclStatement	char * s = opj_optarg ;	469:12:18121:18141	74613	3	True				
ANR	75242	IdentifierDecl	* s = opj_optarg		74613	0					
ANR	75243	IdentifierDeclType	char *		74613	0					
ANR	75244	Identifier	s		74613	1					
ANR	75245	AssignmentExpression	* s = opj_optarg		74613	2		=			
ANR	75246	Identifier	opj_optarg		74613	0					
ANR	75247	Identifier	opj_optarg		74613	1					
ANR	75248	DoStatement	do		74613	4					
ANR	75249	CompoundStatement		199:15:7012:7012	74613	0					
ANR	75250	ExpressionStatement	sep = 0	471:16:18176:18183	74613	0	True				
ANR	75251	AssignmentExpression	sep = 0		74613	0		=			
ANR	75252	Identifier	sep		74613	0					
ANR	75253	PrimaryExpression	0		74613	1					
ANR	75254	ExpressionStatement	"aux = sscanf ( s , ""[%d,%d,%d]%c"" , & parameters -> prct_init [ 0 ] [ res_spec ] , & parameters -> prct_init [ 1 ] [ res_spec ] , & parameters -> prct_init [ 2 ] [ res_spec ] , & sep )"	472:16:18201:18378	74613	1	True				
ANR	75255	AssignmentExpression	"aux = sscanf ( s , ""[%d,%d,%d]%c"" , & parameters -> prct_init [ 0 ] [ res_spec ] , & parameters -> prct_init [ 1 ] [ res_spec ] , & parameters -> prct_init [ 2 ] [ res_spec ] , & sep )"		74613	0		=			
ANR	75256	Identifier	aux		74613	0					
ANR	75257	CallExpression	"sscanf ( s , ""[%d,%d,%d]%c"" , & parameters -> prct_init [ 0 ] [ res_spec ] , & parameters -> prct_init [ 1 ] [ res_spec ] , & parameters -> prct_init [ 2 ] [ res_spec ] , & sep )"		74613	1					
ANR	75258	Callee	sscanf		74613	0					
ANR	75259	Identifier	sscanf		74613	0					
ANR	75260	ArgumentList	s		74613	1					
ANR	75261	Argument	s		74613	0					
ANR	75262	Identifier	s		74613	0					
ANR	75263	Argument	"""[%d,%d,%d]%c"""		74613	1					
ANR	75264	PrimaryExpression	"""[%d,%d,%d]%c"""		74613	0					
ANR	75265	Argument	& parameters -> prct_init [ 0 ] [ res_spec ]		74613	2					
ANR	75266	UnaryOperationExpression	& parameters -> prct_init [ 0 ] [ res_spec ]		74613	0					
ANR	75267	UnaryOperator	&		74613	0					
ANR	75268	ArrayIndexing	parameters -> prct_init [ 0 ] [ res_spec ]		74613	1					
ANR	75269	ArrayIndexing	parameters -> prct_init [ 0 ]		74613	0					
ANR	75270	PtrMemberAccess	parameters -> prct_init		74613	0					
ANR	75271	Identifier	parameters		74613	0					
ANR	75272	Identifier	prct_init		74613	1					
ANR	75273	PrimaryExpression	0		74613	1					
ANR	75274	Identifier	res_spec		74613	1					
ANR	75275	Argument	& parameters -> prct_init [ 1 ] [ res_spec ]		74613	3					
ANR	75276	UnaryOperationExpression	& parameters -> prct_init [ 1 ] [ res_spec ]		74613	0					
ANR	75277	UnaryOperator	&		74613	0					
ANR	75278	ArrayIndexing	parameters -> prct_init [ 1 ] [ res_spec ]		74613	1					
ANR	75279	ArrayIndexing	parameters -> prct_init [ 1 ]		74613	0					
ANR	75280	PtrMemberAccess	parameters -> prct_init		74613	0					
ANR	75281	Identifier	parameters		74613	0					
ANR	75282	Identifier	prct_init		74613	1					
ANR	75283	PrimaryExpression	1		74613	1					
ANR	75284	Identifier	res_spec		74613	1					
ANR	75285	Argument	& parameters -> prct_init [ 2 ] [ res_spec ]		74613	4					
ANR	75286	UnaryOperationExpression	& parameters -> prct_init [ 2 ] [ res_spec ]		74613	0					
ANR	75287	UnaryOperator	&		74613	0					
ANR	75288	ArrayIndexing	parameters -> prct_init [ 2 ] [ res_spec ]		74613	1					
ANR	75289	ArrayIndexing	parameters -> prct_init [ 2 ]		74613	0					
ANR	75290	PtrMemberAccess	parameters -> prct_init		74613	0					
ANR	75291	Identifier	parameters		74613	0					
ANR	75292	Identifier	prct_init		74613	1					
ANR	75293	PrimaryExpression	2		74613	1					
ANR	75294	Identifier	res_spec		74613	1					
ANR	75295	Argument	& sep		74613	5					
ANR	75296	UnaryOperationExpression	& sep		74613	0					
ANR	75297	UnaryOperator	&		74613	0					
ANR	75298	Identifier	sep		74613	1					
ANR	75299	IfStatement	"if ( sep == ',' && aux != 4 )"		74613	2					
ANR	75300	Condition	"sep == ',' && aux != 4"	474:20:18400:18421	74613	0	True				
ANR	75301	AndExpression	"sep == ',' && aux != 4"		74613	0		&&			
ANR	75302	EqualityExpression	"sep == ','"		74613	0		==			
ANR	75303	Identifier	sep		74613	0					
ANR	75304	PrimaryExpression	"','"		74613	1					
ANR	75305	EqualityExpression	aux != 4		74613	1		!=			
ANR	75306	Identifier	aux		74613	0					
ANR	75307	PrimaryExpression	4		74613	1					
ANR	75308	CompoundStatement		203:44:7278:7278	74613	1					
ANR	75309	ExpressionStatement	"fprintf ( stdout , ""[ERROR] '-c' 'dimensions of precincts' argument error !  [-c [prcx_res0,prcy_res0,prcz_res0],...,[prcx_resN,prcy_resN,prcz_resN]]\\n"" )"	475:20:18446:18624	74613	0	True				
ANR	75310	CallExpression	"fprintf ( stdout , ""[ERROR] '-c' 'dimensions of precincts' argument error !  [-c [prcx_res0,prcy_res0,prcz_res0],...,[prcx_resN,prcy_resN,prcz_resN]]\\n"" )"		74613	0					
ANR	75311	Callee	fprintf		74613	0					
ANR	75312	Identifier	fprintf		74613	0					
ANR	75313	ArgumentList	stdout		74613	1					
ANR	75314	Argument	stdout		74613	0					
ANR	75315	Identifier	stdout		74613	0					
ANR	75316	Argument	"""[ERROR] '-c' 'dimensions of precincts' argument error !  [-c [prcx_res0,prcy_res0,prcz_res0],...,[prcx_resN,prcy_resN,prcz_resN]]\\n"""		74613	1					
ANR	75317	PrimaryExpression	"""[ERROR] '-c' 'dimensions of precincts' argument error !  [-c [prcx_res0,prcy_res0,prcz_res0],...,[prcx_resN,prcy_resN,prcz_resN]]\\n"""		74613	0					
ANR	75318	ReturnStatement	return 1 ;	477:20:18646:18654	74613	1	True				
ANR	75319	PrimaryExpression	1		74613	0					
ANR	75320	ExpressionStatement	parameters -> csty |= 0x01	479:16:18690:18714	74613	3	True				
ANR	75321	AssignmentExpression	parameters -> csty |= 0x01		74613	0		|=			
ANR	75322	PtrMemberAccess	parameters -> csty		74613	0					
ANR	75323	Identifier	parameters		74613	0					
ANR	75324	Identifier	csty		74613	1					
ANR	75325	PrimaryExpression	0x01		74613	1					
ANR	75326	ExpressionStatement	res_spec ++	480:16:18732:18742	74613	4	True				
ANR	75327	PostIncDecOperationExpression	res_spec ++		74613	0					
ANR	75328	Identifier	res_spec		74613	0					
ANR	75329	IncDec	++		74613	1					
ANR	75330	ExpressionStatement	"s = strpbrk ( s , ""]"" ) + 2"	481:16:18760:18783	74613	5	True				
ANR	75331	AssignmentExpression	"s = strpbrk ( s , ""]"" ) + 2"		74613	0		=			
ANR	75332	Identifier	s		74613	0					
ANR	75333	AdditiveExpression	"strpbrk ( s , ""]"" ) + 2"		74613	1		+			
ANR	75334	CallExpression	"strpbrk ( s , ""]"" )"		74613	0					
ANR	75335	Callee	strpbrk		74613	0					
ANR	75336	Identifier	strpbrk		74613	0					
ANR	75337	ArgumentList	s		74613	1					
ANR	75338	Argument	s		74613	0					
ANR	75339	Identifier	s		74613	0					
ANR	75340	Argument	"""]"""		74613	1					
ANR	75341	PrimaryExpression	"""]"""		74613	0					
ANR	75342	PrimaryExpression	2		74613	1					
ANR	75343	Condition	"sep == ','"	482:21:18806:18815	74613	1	True				
ANR	75344	EqualityExpression	"sep == ','"		74613	0		==			
ANR	75345	Identifier	sep		74613	0					
ANR	75346	PrimaryExpression	"','"		74613	1					
ANR	75347	ExpressionStatement	parameters -> res_spec = res_spec	483:12:18831:18862	74613	5	True				
ANR	75348	AssignmentExpression	parameters -> res_spec = res_spec		74613	0		=			
ANR	75349	PtrMemberAccess	parameters -> res_spec		74613	0					
ANR	75350	Identifier	parameters		74613	0					
ANR	75351	Identifier	res_spec		74613	1					
ANR	75352	Identifier	res_spec		74613	1					
ANR	75353	BreakStatement	break ;	485:8:18927:18932	74613	26	True				
ANR	75354	Label	case 'b' :	489:8:19012:19020	74613	27	True				
ANR	75355	CompoundStatement		219:12:7925:7981	74613	28					
ANR	75356	IdentifierDeclStatement	"int cblockw_init = 0 , cblockh_init = 0 , cblockl_init = 0 ;"	490:12:19071:19127	74613	0	True				
ANR	75357	IdentifierDecl	cblockw_init = 0		74613	0					
ANR	75358	IdentifierDeclType	int		74613	0					
ANR	75359	Identifier	cblockw_init		74613	1					
ANR	75360	AssignmentExpression	cblockw_init = 0		74613	2		=			
ANR	75361	Identifier	cblockw_init		74613	0					
ANR	75362	PrimaryExpression	0		74613	1					
ANR	75363	IdentifierDecl	cblockh_init = 0		74613	1					
ANR	75364	IdentifierDeclType	int		74613	0					
ANR	75365	Identifier	cblockh_init		74613	1					
ANR	75366	AssignmentExpression	cblockh_init = 0		74613	2		=			
ANR	75367	Identifier	cblockh_init		74613	0					
ANR	75368	PrimaryExpression	0		74613	1					
ANR	75369	IdentifierDecl	cblockl_init = 0		74613	2					
ANR	75370	IdentifierDeclType	int		74613	0					
ANR	75371	Identifier	cblockl_init		74613	1					
ANR	75372	AssignmentExpression	cblockl_init = 0		74613	2		=			
ANR	75373	Identifier	cblockl_init		74613	0					
ANR	75374	PrimaryExpression	0		74613	1					
ANR	75375	IfStatement	"if ( sscanf ( opj_optarg , ""%d,%d,%d"" , & cblockw_init , & cblockh_init , & cblockl_init ) != 3 )"		74613	1					
ANR	75376	Condition	"sscanf ( opj_optarg , ""%d,%d,%d"" , & cblockw_init , & cblockh_init , & cblockl_init ) != 3"	491:16:19145:19247	74613	0	True				
ANR	75377	EqualityExpression	"sscanf ( opj_optarg , ""%d,%d,%d"" , & cblockw_init , & cblockh_init , & cblockl_init ) != 3"		74613	0		!=			
ANR	75378	CallExpression	"sscanf ( opj_optarg , ""%d,%d,%d"" , & cblockw_init , & cblockh_init , & cblockl_init )"		74613	0					
ANR	75379	Callee	sscanf		74613	0					
ANR	75380	Identifier	sscanf		74613	0					
ANR	75381	ArgumentList	opj_optarg		74613	1					
ANR	75382	Argument	opj_optarg		74613	0					
ANR	75383	Identifier	opj_optarg		74613	0					
ANR	75384	Argument	"""%d,%d,%d"""		74613	1					
ANR	75385	PrimaryExpression	"""%d,%d,%d"""		74613	0					
ANR	75386	Argument	& cblockw_init		74613	2					
ANR	75387	UnaryOperationExpression	& cblockw_init		74613	0					
ANR	75388	UnaryOperator	&		74613	0					
ANR	75389	Identifier	cblockw_init		74613	1					
ANR	75390	Argument	& cblockh_init		74613	3					
ANR	75391	UnaryOperationExpression	& cblockh_init		74613	0					
ANR	75392	UnaryOperator	&		74613	0					
ANR	75393	Identifier	cblockh_init		74613	1					
ANR	75394	Argument	& cblockl_init		74613	4					
ANR	75395	UnaryOperationExpression	& cblockl_init		74613	0					
ANR	75396	UnaryOperator	&		74613	0					
ANR	75397	Identifier	cblockl_init		74613	1					
ANR	75398	PrimaryExpression	3		74613	1					
ANR	75399	CompoundStatement		221:44:8104:8104	74613	1					
ANR	75400	ExpressionStatement	"fprintf ( stdout , ""[ERROR] '-b' 'dimensions of codeblocks' argument error !  [-b cblkx,cblky,cblkz]\\n"" )"	493:16:19268:19393	74613	0	True				
ANR	75401	CallExpression	"fprintf ( stdout , ""[ERROR] '-b' 'dimensions of codeblocks' argument error !  [-b cblkx,cblky,cblkz]\\n"" )"		74613	0					
ANR	75402	Callee	fprintf		74613	0					
ANR	75403	Identifier	fprintf		74613	0					
ANR	75404	ArgumentList	stdout		74613	1					
ANR	75405	Argument	stdout		74613	0					
ANR	75406	Identifier	stdout		74613	0					
ANR	75407	Argument	"""[ERROR] '-b' 'dimensions of codeblocks' argument error !  [-b cblkx,cblky,cblkz]\\n"""		74613	1					
ANR	75408	PrimaryExpression	"""[ERROR] '-b' 'dimensions of codeblocks' argument error !  [-b cblkx,cblky,cblkz]\\n"""		74613	0					
ANR	75409	ReturnStatement	return 1 ;	495:16:19411:19419	74613	1	True				
ANR	75410	PrimaryExpression	1		74613	0					
ANR	75411	IfStatement	if ( cblockw_init * cblockh_init * cblockl_init > ( 1 << 18 ) || cblockw_init > 1024 || cblockw_init < 4 || cblockh_init > 1024 || cblockh_init < 4 || cblockl_init > 1024 || cblockl_init < 4 )		74613	2					
ANR	75412	Condition	cblockw_init * cblockh_init * cblockl_init > ( 1 << 18 ) || cblockw_init > 1024 || cblockw_init < 4 || cblockh_init > 1024 || cblockh_init < 4 || cblockl_init > 1024 || cblockl_init < 4	497:16:19451:19673	74613	0	True				
ANR	75413	OrExpression	cblockw_init * cblockh_init * cblockl_init > ( 1 << 18 ) || cblockw_init > 1024 || cblockw_init < 4 || cblockh_init > 1024 || cblockh_init < 4 || cblockl_init > 1024 || cblockl_init < 4		74613	0		||			
ANR	75414	RelationalExpression	cblockw_init * cblockh_init * cblockl_init > ( 1 << 18 )		74613	0		>			
ANR	75415	MultiplicativeExpression	cblockw_init * cblockh_init * cblockl_init		74613	0		*			
ANR	75416	Identifier	cblockw_init		74613	0					
ANR	75417	MultiplicativeExpression	cblockh_init * cblockl_init		74613	1		*			
ANR	75418	Identifier	cblockh_init		74613	0					
ANR	75419	Identifier	cblockl_init		74613	1					
ANR	75420	ShiftExpression	1 << 18		74613	1		<<			
ANR	75421	PrimaryExpression	1		74613	0					
ANR	75422	PrimaryExpression	18		74613	1					
ANR	75423	OrExpression	cblockw_init > 1024 || cblockw_init < 4 || cblockh_init > 1024 || cblockh_init < 4 || cblockl_init > 1024 || cblockl_init < 4		74613	1		||			
ANR	75424	RelationalExpression	cblockw_init > 1024		74613	0		>			
ANR	75425	Identifier	cblockw_init		74613	0					
ANR	75426	PrimaryExpression	1024		74613	1					
ANR	75427	OrExpression	cblockw_init < 4 || cblockh_init > 1024 || cblockh_init < 4 || cblockl_init > 1024 || cblockl_init < 4		74613	1		||			
ANR	75428	RelationalExpression	cblockw_init < 4		74613	0		<			
ANR	75429	Identifier	cblockw_init		74613	0					
ANR	75430	PrimaryExpression	4		74613	1					
ANR	75431	OrExpression	cblockh_init > 1024 || cblockh_init < 4 || cblockl_init > 1024 || cblockl_init < 4		74613	1		||			
ANR	75432	RelationalExpression	cblockh_init > 1024		74613	0		>			
ANR	75433	Identifier	cblockh_init		74613	0					
ANR	75434	PrimaryExpression	1024		74613	1					
ANR	75435	OrExpression	cblockh_init < 4 || cblockl_init > 1024 || cblockl_init < 4		74613	1		||			
ANR	75436	RelationalExpression	cblockh_init < 4		74613	0		<			
ANR	75437	Identifier	cblockh_init		74613	0					
ANR	75438	PrimaryExpression	4		74613	1					
ANR	75439	OrExpression	cblockl_init > 1024 || cblockl_init < 4		74613	1		||			
ANR	75440	RelationalExpression	cblockl_init > 1024		74613	0		>			
ANR	75441	Identifier	cblockl_init		74613	0					
ANR	75442	PrimaryExpression	1024		74613	1					
ANR	75443	RelationalExpression	cblockl_init < 4		74613	1		<			
ANR	75444	Identifier	cblockl_init		74613	0					
ANR	75445	PrimaryExpression	4		74613	1					
ANR	75446	CompoundStatement		228:81:8530:8530	74613	1					
ANR	75447	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Size of code_block error (option -b) !!\\n\\nRestriction :\\n * width*height*length<=4096\\n * 4<=width,height,length<= 1024\\n\\n"" )"	500:16:19694:19869	74613	0	True				
ANR	75448	CallExpression	"fprintf ( stdout , ""[ERROR] Size of code_block error (option -b) !!\\n\\nRestriction :\\n * width*height*length<=4096\\n * 4<=width,height,length<= 1024\\n\\n"" )"		74613	0					
ANR	75449	Callee	fprintf		74613	0					
ANR	75450	Identifier	fprintf		74613	0					
ANR	75451	ArgumentList	stdout		74613	1					
ANR	75452	Argument	stdout		74613	0					
ANR	75453	Identifier	stdout		74613	0					
ANR	75454	Argument	"""[ERROR] Size of code_block error (option -b) !!\\n\\nRestriction :\\n * width*height*length<=4096\\n * 4<=width,height,length<= 1024\\n\\n"""		74613	1					
ANR	75455	PrimaryExpression	"""[ERROR] Size of code_block error (option -b) !!\\n\\nRestriction :\\n * width*height*length<=4096\\n * 4<=width,height,length<= 1024\\n\\n"""		74613	0					
ANR	75456	ReturnStatement	return 1 ;	502:16:19887:19895	74613	1	True				
ANR	75457	PrimaryExpression	1		74613	0					
ANR	75458	ExpressionStatement	parameters -> cblock_init [ 0 ] = cblockw_init	504:12:19923:19964	74613	3	True				
ANR	75459	AssignmentExpression	parameters -> cblock_init [ 0 ] = cblockw_init		74613	0		=			
ANR	75460	ArrayIndexing	parameters -> cblock_init [ 0 ]		74613	0					
ANR	75461	PtrMemberAccess	parameters -> cblock_init		74613	0					
ANR	75462	Identifier	parameters		74613	0					
ANR	75463	Identifier	cblock_init		74613	1					
ANR	75464	PrimaryExpression	0		74613	1					
ANR	75465	Identifier	cblockw_init		74613	1					
ANR	75466	ExpressionStatement	parameters -> cblock_init [ 1 ] = cblockh_init	505:12:19978:20019	74613	4	True				
ANR	75467	AssignmentExpression	parameters -> cblock_init [ 1 ] = cblockh_init		74613	0		=			
ANR	75468	ArrayIndexing	parameters -> cblock_init [ 1 ]		74613	0					
ANR	75469	PtrMemberAccess	parameters -> cblock_init		74613	0					
ANR	75470	Identifier	parameters		74613	0					
ANR	75471	Identifier	cblock_init		74613	1					
ANR	75472	PrimaryExpression	1		74613	1					
ANR	75473	Identifier	cblockh_init		74613	1					
ANR	75474	ExpressionStatement	parameters -> cblock_init [ 2 ] = cblockl_init	506:12:20033:20074	74613	5	True				
ANR	75475	AssignmentExpression	parameters -> cblock_init [ 2 ] = cblockl_init		74613	0		=			
ANR	75476	ArrayIndexing	parameters -> cblock_init [ 2 ]		74613	0					
ANR	75477	PtrMemberAccess	parameters -> cblock_init		74613	0					
ANR	75478	Identifier	parameters		74613	0					
ANR	75479	Identifier	cblock_init		74613	1					
ANR	75480	PrimaryExpression	2		74613	1					
ANR	75481	Identifier	cblockl_init		74613	1					
ANR	75482	BreakStatement	break ;	508:8:20094:20099	74613	29	True				
ANR	75483	Label	case 'x' :	512:8:20179:20187	74613	30	True				
ANR	75484	CompoundStatement		242:12:9094:9118	74613	31					
ANR	75485	IdentifierDeclStatement	char * index = opj_optarg ;	513:12:20240:20264	74613	0	True				
ANR	75486	IdentifierDecl	* index = opj_optarg		74613	0					
ANR	75487	IdentifierDeclType	char *		74613	0					
ANR	75488	Identifier	index		74613	1					
ANR	75489	AssignmentExpression	* index = opj_optarg		74613	2		=			
ANR	75490	Identifier	opj_optarg		74613	0					
ANR	75491	Identifier	opj_optarg		74613	1					
ANR	75492	ExpressionStatement	"strncpy ( parameters -> index , index , MAX_PATH )"	514:12:20278:20321	74613	1	True				
ANR	75493	CallExpression	"strncpy ( parameters -> index , index , MAX_PATH )"		74613	0					
ANR	75494	Callee	strncpy		74613	0					
ANR	75495	Identifier	strncpy		74613	0					
ANR	75496	ArgumentList	parameters -> index		74613	1					
ANR	75497	Argument	parameters -> index		74613	0					
ANR	75498	PtrMemberAccess	parameters -> index		74613	0					
ANR	75499	Identifier	parameters		74613	0					
ANR	75500	Identifier	index		74613	1					
ANR	75501	Argument	index		74613	1					
ANR	75502	Identifier	index		74613	0					
ANR	75503	Argument	MAX_PATH		74613	2					
ANR	75504	Identifier	MAX_PATH		74613	0					
ANR	75505	ExpressionStatement	parameters -> index_on = 1	515:12:20335:20359	74613	2	True				
ANR	75506	AssignmentExpression	parameters -> index_on = 1		74613	0		=			
ANR	75507	PtrMemberAccess	parameters -> index_on		74613	0					
ANR	75508	Identifier	parameters		74613	0					
ANR	75509	Identifier	index_on		74613	1					
ANR	75510	PrimaryExpression	1		74613	1					
ANR	75511	BreakStatement	break ;	517:8:20379:20384	74613	32	True				
ANR	75512	Label	case 'p' :	521:8:20464:20472	74613	33	True				
ANR	75513	CompoundStatement		251:12:9374:9393	74613	34					
ANR	75514	IdentifierDeclStatement	char progression [ 4 ] ;	522:12:20520:20539	74613	0	True				
ANR	75515	IdentifierDecl	progression [ 4 ]		74613	0					
ANR	75516	IdentifierDeclType	char [ 4 ]		74613	0					
ANR	75517	Identifier	progression		74613	1					
ANR	75518	PrimaryExpression	4		74613	2					
ANR	75519	ExpressionStatement	"strncpy ( progression , opj_optarg , 4 )"	524:12:20554:20589	74613	1	True				
ANR	75520	CallExpression	"strncpy ( progression , opj_optarg , 4 )"		74613	0					
ANR	75521	Callee	strncpy		74613	0					
ANR	75522	Identifier	strncpy		74613	0					
ANR	75523	ArgumentList	progression		74613	1					
ANR	75524	Argument	progression		74613	0					
ANR	75525	Identifier	progression		74613	0					
ANR	75526	Argument	opj_optarg		74613	1					
ANR	75527	Identifier	opj_optarg		74613	0					
ANR	75528	Argument	4		74613	2					
ANR	75529	PrimaryExpression	4		74613	0					
ANR	75530	ExpressionStatement	parameters -> prog_order = give_progression ( progression )	525:12:20603:20657	74613	2	True				
ANR	75531	AssignmentExpression	parameters -> prog_order = give_progression ( progression )		74613	0		=			
ANR	75532	PtrMemberAccess	parameters -> prog_order		74613	0					
ANR	75533	Identifier	parameters		74613	0					
ANR	75534	Identifier	prog_order		74613	1					
ANR	75535	CallExpression	give_progression ( progression )		74613	1					
ANR	75536	Callee	give_progression		74613	0					
ANR	75537	Identifier	give_progression		74613	0					
ANR	75538	ArgumentList	progression		74613	1					
ANR	75539	Argument	progression		74613	0					
ANR	75540	Identifier	progression		74613	0					
ANR	75541	IfStatement	if ( parameters -> prog_order == - 1 )		74613	3					
ANR	75542	Condition	parameters -> prog_order == - 1	526:16:20675:20702	74613	0	True				
ANR	75543	EqualityExpression	parameters -> prog_order == - 1		74613	0		==			
ANR	75544	PtrMemberAccess	parameters -> prog_order		74613	0					
ANR	75545	Identifier	parameters		74613	0					
ANR	75546	Identifier	prog_order		74613	1					
ANR	75547	UnaryOperationExpression	- 1		74613	1					
ANR	75548	UnaryOperator	-		74613	0					
ANR	75549	PrimaryExpression	1		74613	1					
ANR	75550	CompoundStatement		255:46:9559:9559	74613	1					
ANR	75551	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Unrecognized progression order [LRCP, RLCP, RPCL, PCRL, CPRL] !!\\n"" )"	527:16:20723:20840	74613	0	True				
ANR	75552	CallExpression	"fprintf ( stdout , ""[ERROR] Unrecognized progression order [LRCP, RLCP, RPCL, PCRL, CPRL] !!\\n"" )"		74613	0					
ANR	75553	Callee	fprintf		74613	0					
ANR	75554	Identifier	fprintf		74613	0					
ANR	75555	ArgumentList	stdout		74613	1					
ANR	75556	Argument	stdout		74613	0					
ANR	75557	Identifier	stdout		74613	0					
ANR	75558	Argument	"""[ERROR] Unrecognized progression order [LRCP, RLCP, RPCL, PCRL, CPRL] !!\\n"""		74613	1					
ANR	75559	PrimaryExpression	"""[ERROR] Unrecognized progression order [LRCP, RLCP, RPCL, PCRL, CPRL] !!\\n"""		74613	0					
ANR	75560	ReturnStatement	return 1 ;	529:16:20858:20866	74613	1	True				
ANR	75561	PrimaryExpression	1		74613	0					
ANR	75562	BreakStatement	break ;	532:8:20900:20905	74613	35	True				
ANR	75563	Label	case 's' :	536:8:20985:20993	74613	36	True				
ANR	75564	CompoundStatement		265:18:9849:9849	74613	37					
ANR	75565	IfStatement	"if ( sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> subsampling_dx , & parameters -> subsampling_dy , & parameters -> subsampling_dz ) != 3 )"		74613	0					
ANR	75566	Condition	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> subsampling_dx , & parameters -> subsampling_dy , & parameters -> subsampling_dz ) != 3"	537:16:21046:21190	74613	0	True				
ANR	75567	EqualityExpression	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> subsampling_dx , & parameters -> subsampling_dy , & parameters -> subsampling_dz ) != 3"		74613	0		!=			
ANR	75568	CallExpression	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> subsampling_dx , & parameters -> subsampling_dy , & parameters -> subsampling_dz )"		74613	0					
ANR	75569	Callee	sscanf		74613	0					
ANR	75570	Identifier	sscanf		74613	0					
ANR	75571	ArgumentList	opj_optarg		74613	1					
ANR	75572	Argument	opj_optarg		74613	0					
ANR	75573	Identifier	opj_optarg		74613	0					
ANR	75574	Argument	"""%d,%d,%d"""		74613	1					
ANR	75575	PrimaryExpression	"""%d,%d,%d"""		74613	0					
ANR	75576	Argument	& parameters -> subsampling_dx		74613	2					
ANR	75577	UnaryOperationExpression	& parameters -> subsampling_dx		74613	0					
ANR	75578	UnaryOperator	&		74613	0					
ANR	75579	PtrMemberAccess	parameters -> subsampling_dx		74613	1					
ANR	75580	Identifier	parameters		74613	0					
ANR	75581	Identifier	subsampling_dx		74613	1					
ANR	75582	Argument	& parameters -> subsampling_dy		74613	3					
ANR	75583	UnaryOperationExpression	& parameters -> subsampling_dy		74613	0					
ANR	75584	UnaryOperator	&		74613	0					
ANR	75585	PtrMemberAccess	parameters -> subsampling_dy		74613	1					
ANR	75586	Identifier	parameters		74613	0					
ANR	75587	Identifier	subsampling_dy		74613	1					
ANR	75588	Argument	& parameters -> subsampling_dz		74613	4					
ANR	75589	UnaryOperationExpression	& parameters -> subsampling_dz		74613	0					
ANR	75590	UnaryOperator	&		74613	0					
ANR	75591	PtrMemberAccess	parameters -> subsampling_dz		74613	1					
ANR	75592	Identifier	parameters		74613	0					
ANR	75593	Identifier	subsampling_dz		74613	1					
ANR	75594	PrimaryExpression	3		74613	1					
ANR	75595	CompoundStatement		267:87:10047:10047	74613	1					
ANR	75596	ExpressionStatement	"fprintf ( stdout , ""[ERROR] '-s' sub-sampling argument error !  [-s dx,dy,dz]\\n"" )"	539:16:21211:21289	74613	0	True				
ANR	75597	CallExpression	"fprintf ( stdout , ""[ERROR] '-s' sub-sampling argument error !  [-s dx,dy,dz]\\n"" )"		74613	0					
ANR	75598	Callee	fprintf		74613	0					
ANR	75599	Identifier	fprintf		74613	0					
ANR	75600	ArgumentList	stdout		74613	1					
ANR	75601	Argument	stdout		74613	0					
ANR	75602	Identifier	stdout		74613	0					
ANR	75603	Argument	"""[ERROR] '-s' sub-sampling argument error !  [-s dx,dy,dz]\\n"""		74613	1					
ANR	75604	PrimaryExpression	"""[ERROR] '-s' sub-sampling argument error !  [-s dx,dy,dz]\\n"""		74613	0					
ANR	75605	ReturnStatement	return 1 ;	540:16:21307:21315	74613	1	True				
ANR	75606	PrimaryExpression	1		74613	0					
ANR	75607	BreakStatement	break ;	543:8:21349:21354	74613	38	True				
ANR	75608	Label	case 'd' :	547:8:21434:21442	74613	39	True				
ANR	75609	CompoundStatement		276:18:10298:10298	74613	40					
ANR	75610	IfStatement	"if ( sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> volume_offset_x0 , & parameters -> volume_offset_y0 , & parameters -> volume_offset_z0 ) != 3 )"		74613	0					
ANR	75611	Condition	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> volume_offset_x0 , & parameters -> volume_offset_y0 , & parameters -> volume_offset_z0 ) != 3"	548:16:21510:21660	74613	0	True				
ANR	75612	EqualityExpression	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> volume_offset_x0 , & parameters -> volume_offset_y0 , & parameters -> volume_offset_z0 ) != 3"		74613	0		!=			
ANR	75613	CallExpression	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> volume_offset_x0 , & parameters -> volume_offset_y0 , & parameters -> volume_offset_z0 )"		74613	0					
ANR	75614	Callee	sscanf		74613	0					
ANR	75615	Identifier	sscanf		74613	0					
ANR	75616	ArgumentList	opj_optarg		74613	1					
ANR	75617	Argument	opj_optarg		74613	0					
ANR	75618	Identifier	opj_optarg		74613	0					
ANR	75619	Argument	"""%d,%d,%d"""		74613	1					
ANR	75620	PrimaryExpression	"""%d,%d,%d"""		74613	0					
ANR	75621	Argument	& parameters -> volume_offset_x0		74613	2					
ANR	75622	UnaryOperationExpression	& parameters -> volume_offset_x0		74613	0					
ANR	75623	UnaryOperator	&		74613	0					
ANR	75624	PtrMemberAccess	parameters -> volume_offset_x0		74613	1					
ANR	75625	Identifier	parameters		74613	0					
ANR	75626	Identifier	volume_offset_x0		74613	1					
ANR	75627	Argument	& parameters -> volume_offset_y0		74613	3					
ANR	75628	UnaryOperationExpression	& parameters -> volume_offset_y0		74613	0					
ANR	75629	UnaryOperator	&		74613	0					
ANR	75630	PtrMemberAccess	parameters -> volume_offset_y0		74613	1					
ANR	75631	Identifier	parameters		74613	0					
ANR	75632	Identifier	volume_offset_y0		74613	1					
ANR	75633	Argument	& parameters -> volume_offset_z0		74613	4					
ANR	75634	UnaryOperationExpression	& parameters -> volume_offset_z0		74613	0					
ANR	75635	UnaryOperator	&		74613	0					
ANR	75636	PtrMemberAccess	parameters -> volume_offset_z0		74613	1					
ANR	75637	Identifier	parameters		74613	0					
ANR	75638	Identifier	volume_offset_z0		74613	1					
ANR	75639	PrimaryExpression	3		74613	1					
ANR	75640	CompoundStatement		278:91:10517:10517	74613	1					
ANR	75641	ExpressionStatement	"fprintf ( stdout , ""[ERROR] -d 'coordonnate of the reference grid' argument error !! [-d x0,y0,z0]\\n"" )"	550:16:21681:21804	74613	0	True				
ANR	75642	CallExpression	"fprintf ( stdout , ""[ERROR] -d 'coordonnate of the reference grid' argument error !! [-d x0,y0,z0]\\n"" )"		74613	0					
ANR	75643	Callee	fprintf		74613	0					
ANR	75644	Identifier	fprintf		74613	0					
ANR	75645	ArgumentList	stdout		74613	1					
ANR	75646	Argument	stdout		74613	0					
ANR	75647	Identifier	stdout		74613	0					
ANR	75648	Argument	"""[ERROR] -d 'coordonnate of the reference grid' argument error !! [-d x0,y0,z0]\\n"""		74613	1					
ANR	75649	PrimaryExpression	"""[ERROR] -d 'coordonnate of the reference grid' argument error !! [-d x0,y0,z0]\\n"""		74613	0					
ANR	75650	ReturnStatement	return 1 ;	552:16:21822:21830	74613	1	True				
ANR	75651	PrimaryExpression	1		74613	0					
ANR	75652	BreakStatement	break ;	555:8:21864:21869	74613	41	True				
ANR	75653	Label	case 'h' :	559:8:21949:21957	74613	42	True				
ANR	75654	CompoundStatement		288:18:10813:10813	74613	43					
ANR	75655	ExpressionStatement	encode_help_display ( )	560:12:22015:22036	74613	0	True				
ANR	75656	CallExpression	encode_help_display ( )		74613	0					
ANR	75657	Callee	encode_help_display		74613	0					
ANR	75658	Identifier	encode_help_display		74613	0					
ANR	75659	ArgumentList			74613	1					
ANR	75660	ReturnStatement	return 1 ;	561:12:22050:22058	74613	1	True				
ANR	75661	PrimaryExpression	1		74613	0					
ANR	75662	BreakStatement	break ;	563:8:22078:22083	74613	44	True				
ANR	75663	Label	case 'P' :	567:8:22163:22171	74613	45	True				
ANR	75664	CompoundStatement		300:12:11242:11262	74613	46					
ANR	75665	IdentifierDeclStatement	int numpocs = 0 ;	568:12:22205:22220	74613	0	True				
ANR	75666	IdentifierDecl	numpocs = 0		74613	0					
ANR	75667	IdentifierDeclType	int		74613	0					
ANR	75668	Identifier	numpocs		74613	1					
ANR	75669	AssignmentExpression	numpocs = 0		74613	2		=			
ANR	75670	Identifier	numpocs		74613	0					
ANR	75671	PrimaryExpression	0		74613	1					
ANR	75672	IdentifierDeclStatement	opj_poc_t * POC = NULL ;	569:12:22298:22319	74613	1	True				
ANR	75673	IdentifierDecl	* POC = NULL		74613	0					
ANR	75674	IdentifierDeclType	opj_poc_t *		74613	0					
ANR	75675	Identifier	POC		74613	1					
ANR	75676	AssignmentExpression	* POC = NULL		74613	2		=			
ANR	75677	Identifier	NULL		74613	0					
ANR	75678	Identifier	NULL		74613	1					
ANR	75679	IdentifierDeclStatement	char * s = opj_optarg ;	571:12:22388:22408	74613	2	True				
ANR	75680	IdentifierDecl	* s = opj_optarg		74613	0					
ANR	75681	IdentifierDeclType	char *		74613	0					
ANR	75682	Identifier	s		74613	1					
ANR	75683	AssignmentExpression	* s = opj_optarg		74613	2		=			
ANR	75684	Identifier	opj_optarg		74613	0					
ANR	75685	Identifier	opj_optarg		74613	1					
ANR	75686	ExpressionStatement	POC = parameters -> POC	572:12:22422:22443	74613	3	True				
ANR	75687	AssignmentExpression	POC = parameters -> POC		74613	0		=			
ANR	75688	Identifier	POC		74613	0					
ANR	75689	PtrMemberAccess	parameters -> POC		74613	1					
ANR	75690	Identifier	parameters		74613	0					
ANR	75691	Identifier	POC		74613	1					
ANR	75692	ExpressionStatement	"fprintf ( stdout , ""/----------------------------------\\\\\\n"" )"	574:12:22458:22516	74613	4	True				
ANR	75693	CallExpression	"fprintf ( stdout , ""/----------------------------------\\\\\\n"" )"		74613	0					
ANR	75694	Callee	fprintf		74613	0					
ANR	75695	Identifier	fprintf		74613	0					
ANR	75696	ArgumentList	stdout		74613	1					
ANR	75697	Argument	stdout		74613	0					
ANR	75698	Identifier	stdout		74613	0					
ANR	75699	Argument	"""/----------------------------------\\\\\\n"""		74613	1					
ANR	75700	PrimaryExpression	"""/----------------------------------\\\\\\n"""		74613	0					
ANR	75701	ExpressionStatement	"fprintf ( stdout , ""|  POC option not fully tested !!  |\\n"" )"	575:12:22530:22587	74613	5	True				
ANR	75702	CallExpression	"fprintf ( stdout , ""|  POC option not fully tested !!  |\\n"" )"		74613	0					
ANR	75703	Callee	fprintf		74613	0					
ANR	75704	Identifier	fprintf		74613	0					
ANR	75705	ArgumentList	stdout		74613	1					
ANR	75706	Argument	stdout		74613	0					
ANR	75707	Identifier	stdout		74613	0					
ANR	75708	Argument	"""|  POC option not fully tested !!  |\\n"""		74613	1					
ANR	75709	PrimaryExpression	"""|  POC option not fully tested !!  |\\n"""		74613	0					
ANR	75710	ExpressionStatement	"fprintf ( stdout , ""\\\\----------------------------------/\\n"" )"	576:12:22601:22659	74613	6	True				
ANR	75711	CallExpression	"fprintf ( stdout , ""\\\\----------------------------------/\\n"" )"		74613	0					
ANR	75712	Callee	fprintf		74613	0					
ANR	75713	Identifier	fprintf		74613	0					
ANR	75714	ArgumentList	stdout		74613	1					
ANR	75715	Argument	stdout		74613	0					
ANR	75716	Identifier	stdout		74613	0					
ANR	75717	Argument	"""\\\\----------------------------------/\\n"""		74613	1					
ANR	75718	PrimaryExpression	"""\\\\----------------------------------/\\n"""		74613	0					
ANR	75719	WhileStatement	"while ( sscanf ( s , ""T%d=%d,%d,%d,%d,%d,%s"" , & POC [ numpocs ] . tile , & POC [ numpocs ] . resno0 , & POC [ numpocs ] . compno0 , & POC [ numpocs ] . layno1 , & POC [ numpocs ] . resno1 , & POC [ numpocs ] . compno1 , POC [ numpocs ] . progorder ) == 7 )"		74613	7					
ANR	75720	Condition	"sscanf ( s , ""T%d=%d,%d,%d,%d,%d,%s"" , & POC [ numpocs ] . tile , & POC [ numpocs ] . resno0 , & POC [ numpocs ] . compno0 , & POC [ numpocs ] . layno1 , & POC [ numpocs ] . resno1 , & POC [ numpocs ] . compno1 , POC [ numpocs ] . progorder ) == 7"	578:19:22681:22953	74613	0	True				
ANR	75721	EqualityExpression	"sscanf ( s , ""T%d=%d,%d,%d,%d,%d,%s"" , & POC [ numpocs ] . tile , & POC [ numpocs ] . resno0 , & POC [ numpocs ] . compno0 , & POC [ numpocs ] . layno1 , & POC [ numpocs ] . resno1 , & POC [ numpocs ] . compno1 , POC [ numpocs ] . progorder ) == 7"		74613	0		==			
ANR	75722	CallExpression	"sscanf ( s , ""T%d=%d,%d,%d,%d,%d,%s"" , & POC [ numpocs ] . tile , & POC [ numpocs ] . resno0 , & POC [ numpocs ] . compno0 , & POC [ numpocs ] . layno1 , & POC [ numpocs ] . resno1 , & POC [ numpocs ] . compno1 , POC [ numpocs ] . progorder )"		74613	0					
ANR	75723	Callee	sscanf		74613	0					
ANR	75724	Identifier	sscanf		74613	0					
ANR	75725	ArgumentList	s		74613	1					
ANR	75726	Argument	s		74613	0					
ANR	75727	Identifier	s		74613	0					
ANR	75728	Argument	"""T%d=%d,%d,%d,%d,%d,%s"""		74613	1					
ANR	75729	PrimaryExpression	"""T%d=%d,%d,%d,%d,%d,%s"""		74613	0					
ANR	75730	Argument	& POC [ numpocs ] . tile		74613	2					
ANR	75731	UnaryOperationExpression	& POC [ numpocs ] . tile		74613	0					
ANR	75732	UnaryOperator	&		74613	0					
ANR	75733	MemberAccess	POC [ numpocs ] . tile		74613	1					
ANR	75734	ArrayIndexing	POC [ numpocs ]		74613	0					
ANR	75735	Identifier	POC		74613	0					
ANR	75736	Identifier	numpocs		74613	1					
ANR	75737	Identifier	tile		74613	1					
ANR	75738	Argument	& POC [ numpocs ] . resno0		74613	3					
ANR	75739	UnaryOperationExpression	& POC [ numpocs ] . resno0		74613	0					
ANR	75740	UnaryOperator	&		74613	0					
ANR	75741	MemberAccess	POC [ numpocs ] . resno0		74613	1					
ANR	75742	ArrayIndexing	POC [ numpocs ]		74613	0					
ANR	75743	Identifier	POC		74613	0					
ANR	75744	Identifier	numpocs		74613	1					
ANR	75745	Identifier	resno0		74613	1					
ANR	75746	Argument	& POC [ numpocs ] . compno0		74613	4					
ANR	75747	UnaryOperationExpression	& POC [ numpocs ] . compno0		74613	0					
ANR	75748	UnaryOperator	&		74613	0					
ANR	75749	MemberAccess	POC [ numpocs ] . compno0		74613	1					
ANR	75750	ArrayIndexing	POC [ numpocs ]		74613	0					
ANR	75751	Identifier	POC		74613	0					
ANR	75752	Identifier	numpocs		74613	1					
ANR	75753	Identifier	compno0		74613	1					
ANR	75754	Argument	& POC [ numpocs ] . layno1		74613	5					
ANR	75755	UnaryOperationExpression	& POC [ numpocs ] . layno1		74613	0					
ANR	75756	UnaryOperator	&		74613	0					
ANR	75757	MemberAccess	POC [ numpocs ] . layno1		74613	1					
ANR	75758	ArrayIndexing	POC [ numpocs ]		74613	0					
ANR	75759	Identifier	POC		74613	0					
ANR	75760	Identifier	numpocs		74613	1					
ANR	75761	Identifier	layno1		74613	1					
ANR	75762	Argument	& POC [ numpocs ] . resno1		74613	6					
ANR	75763	UnaryOperationExpression	& POC [ numpocs ] . resno1		74613	0					
ANR	75764	UnaryOperator	&		74613	0					
ANR	75765	MemberAccess	POC [ numpocs ] . resno1		74613	1					
ANR	75766	ArrayIndexing	POC [ numpocs ]		74613	0					
ANR	75767	Identifier	POC		74613	0					
ANR	75768	Identifier	numpocs		74613	1					
ANR	75769	Identifier	resno1		74613	1					
ANR	75770	Argument	& POC [ numpocs ] . compno1		74613	7					
ANR	75771	UnaryOperationExpression	& POC [ numpocs ] . compno1		74613	0					
ANR	75772	UnaryOperator	&		74613	0					
ANR	75773	MemberAccess	POC [ numpocs ] . compno1		74613	1					
ANR	75774	ArrayIndexing	POC [ numpocs ]		74613	0					
ANR	75775	Identifier	POC		74613	0					
ANR	75776	Identifier	numpocs		74613	1					
ANR	75777	Identifier	compno1		74613	1					
ANR	75778	Argument	POC [ numpocs ] . progorder		74613	8					
ANR	75779	MemberAccess	POC [ numpocs ] . progorder		74613	0					
ANR	75780	ArrayIndexing	POC [ numpocs ]		74613	0					
ANR	75781	Identifier	POC		74613	0					
ANR	75782	Identifier	numpocs		74613	1					
ANR	75783	Identifier	progorder		74613	1					
ANR	75784	PrimaryExpression	7		74613	1					
ANR	75785	CompoundStatement		310:79:11810:11810	74613	1					
ANR	75786	ExpressionStatement	POC [ numpocs ] . prg = give_progression ( POC [ numpocs ] . progorder )	582:16:22974:23033	74613	0	True				
ANR	75787	AssignmentExpression	POC [ numpocs ] . prg = give_progression ( POC [ numpocs ] . progorder )		74613	0		=			
ANR	75788	MemberAccess	POC [ numpocs ] . prg		74613	0					
ANR	75789	ArrayIndexing	POC [ numpocs ]		74613	0					
ANR	75790	Identifier	POC		74613	0					
ANR	75791	Identifier	numpocs		74613	1					
ANR	75792	Identifier	prg		74613	1					
ANR	75793	CallExpression	give_progression ( POC [ numpocs ] . progorder )		74613	1					
ANR	75794	Callee	give_progression		74613	0					
ANR	75795	Identifier	give_progression		74613	0					
ANR	75796	ArgumentList	POC [ numpocs ] . progorder		74613	1					
ANR	75797	Argument	POC [ numpocs ] . progorder		74613	0					
ANR	75798	MemberAccess	POC [ numpocs ] . progorder		74613	0					
ANR	75799	ArrayIndexing	POC [ numpocs ]		74613	0					
ANR	75800	Identifier	POC		74613	0					
ANR	75801	Identifier	numpocs		74613	1					
ANR	75802	Identifier	progorder		74613	1					
ANR	75803	ExpressionStatement	numpocs ++	584:16:23092:23101	74613	1	True				
ANR	75804	PostIncDecOperationExpression	numpocs ++		74613	0					
ANR	75805	Identifier	numpocs		74613	0					
ANR	75806	IncDec	++		74613	1					
ANR	75807	WhileStatement	while ( * s && * s != '/' )		74613	2					
ANR	75808	Condition	* s && * s != '/'	585:23:23126:23140	74613	0	True				
ANR	75809	AndExpression	* s && * s != '/'		74613	0		&&			
ANR	75810	UnaryOperationExpression	* s		74613	0					
ANR	75811	UnaryOperator	*		74613	0					
ANR	75812	Identifier	s		74613	1					
ANR	75813	EqualityExpression	* s != '/'		74613	1		!=			
ANR	75814	UnaryOperationExpression	* s		74613	0					
ANR	75815	UnaryOperator	*		74613	0					
ANR	75816	Identifier	s		74613	1					
ANR	75817	PrimaryExpression	'/'		74613	1					
ANR	75818	CompoundStatement		314:40:11997:11997	74613	1					
ANR	75819	ExpressionStatement	s ++	586:20:23165:23168	74613	0	True				
ANR	75820	PostIncDecOperationExpression	s ++		74613	0					
ANR	75821	Identifier	s		74613	0					
ANR	75822	IncDec	++		74613	1					
ANR	75823	IfStatement	if ( ! * s )		74613	3					
ANR	75824	Condition	! * s	588:20:23208:23210	74613	0	True				
ANR	75825	UnaryOperationExpression	! * s		74613	0					
ANR	75826	UnaryOperator	!		74613	0					
ANR	75827	UnaryOperationExpression	* s		74613	1					
ANR	75828	UnaryOperator	*		74613	0					
ANR	75829	Identifier	s		74613	1					
ANR	75830	CompoundStatement		317:25:12067:12067	74613	1					
ANR	75831	BreakStatement	break ;	589:20:23235:23240	74613	0	True				
ANR	75832	ExpressionStatement	s ++	591:16:23276:23279	74613	4	True				
ANR	75833	PostIncDecOperationExpression	s ++		74613	0					
ANR	75834	Identifier	s		74613	0					
ANR	75835	IncDec	++		74613	1					
ANR	75836	ExpressionStatement	parameters -> numpocs = numpocs	593:12:23307:23336	74613	8	True				
ANR	75837	AssignmentExpression	parameters -> numpocs = numpocs		74613	0		=			
ANR	75838	PtrMemberAccess	parameters -> numpocs		74613	0					
ANR	75839	Identifier	parameters		74613	0					
ANR	75840	Identifier	numpocs		74613	1					
ANR	75841	Identifier	numpocs		74613	1					
ANR	75842	BreakStatement	break ;	595:8:23356:23361	74613	47	True				
ANR	75843	Label	case 'S' :	599:8:23442:23450	74613	48	True				
ANR	75844	CompoundStatement		328:18:12306:12306	74613	49					
ANR	75845	ExpressionStatement	parameters -> csty |= 0x02	600:12:23491:23515	74613	0	True				
ANR	75846	AssignmentExpression	parameters -> csty |= 0x02		74613	0		|=			
ANR	75847	PtrMemberAccess	parameters -> csty		74613	0					
ANR	75848	Identifier	parameters		74613	0					
ANR	75849	Identifier	csty		74613	1					
ANR	75850	PrimaryExpression	0x02		74613	1					
ANR	75851	BreakStatement	break ;	602:8:23535:23540	74613	50	True				
ANR	75852	Label	case 'E' :	606:8:23621:23629	74613	51	True				
ANR	75853	CompoundStatement		335:18:12485:12485	74613	52					
ANR	75854	ExpressionStatement	parameters -> csty |= 0x04	607:12:23670:23694	74613	0	True				
ANR	75855	AssignmentExpression	parameters -> csty |= 0x04		74613	0		|=			
ANR	75856	PtrMemberAccess	parameters -> csty		74613	0					
ANR	75857	Identifier	parameters		74613	0					
ANR	75858	Identifier	csty		74613	1					
ANR	75859	PrimaryExpression	0x04		74613	1					
ANR	75860	BreakStatement	break ;	609:8:23714:23719	74613	53	True				
ANR	75861	Label	case 'M' :	613:8:23800:23808	74613	54	True				
ANR	75862	CompoundStatement		342:18:12664:12664	74613	55					
ANR	75863	ExpressionStatement	"fprintf ( stdout , ""[INFO] Mode switch option not fully tested !!\\n"" )"	614:12:23863:23929	74613	0	True				
ANR	75864	CallExpression	"fprintf ( stdout , ""[INFO] Mode switch option not fully tested !!\\n"" )"		74613	0					
ANR	75865	Callee	fprintf		74613	0					
ANR	75866	Identifier	fprintf		74613	0					
ANR	75867	ArgumentList	stdout		74613	1					
ANR	75868	Argument	stdout		74613	0					
ANR	75869	Identifier	stdout		74613	0					
ANR	75870	Argument	"""[INFO] Mode switch option not fully tested !!\\n"""		74613	1					
ANR	75871	PrimaryExpression	"""[INFO] Mode switch option not fully tested !!\\n"""		74613	0					
ANR	75872	ExpressionStatement	value = 0	615:12:23943:23952	74613	1	True				
ANR	75873	AssignmentExpression	value = 0		74613	0		=			
ANR	75874	Identifier	value		74613	0					
ANR	75875	PrimaryExpression	0		74613	1					
ANR	75876	IfStatement	"if ( sscanf ( opj_optarg , ""%d"" , & value ) == 1 )"		74613	2					
ANR	75877	Condition	"sscanf ( opj_optarg , ""%d"" , & value ) == 1"	616:16:23970:24006	74613	0	True				
ANR	75878	EqualityExpression	"sscanf ( opj_optarg , ""%d"" , & value ) == 1"		74613	0		==			
ANR	75879	CallExpression	"sscanf ( opj_optarg , ""%d"" , & value )"		74613	0					
ANR	75880	Callee	sscanf		74613	0					
ANR	75881	Identifier	sscanf		74613	0					
ANR	75882	ArgumentList	opj_optarg		74613	1					
ANR	75883	Argument	opj_optarg		74613	0					
ANR	75884	Identifier	opj_optarg		74613	0					
ANR	75885	Argument	"""%d"""		74613	1					
ANR	75886	PrimaryExpression	"""%d"""		74613	0					
ANR	75887	Argument	& value		74613	2					
ANR	75888	UnaryOperationExpression	& value		74613	0					
ANR	75889	UnaryOperator	&		74613	0					
ANR	75890	Identifier	value		74613	1					
ANR	75891	PrimaryExpression	1		74613	1					
ANR	75892	CompoundStatement		345:55:12863:12863	74613	1					
ANR	75893	ForStatement	for ( i = 0 ; i <= 6 ; i ++ )		74613	0					
ANR	75894	ForInit	i = 0 ;	617:21:24032:24037	74613	0	True				
ANR	75895	AssignmentExpression	i = 0		74613	0		=			
ANR	75896	Identifier	i		74613	0					
ANR	75897	PrimaryExpression	0		74613	1					
ANR	75898	Condition	i <= 6	617:28:24039:24044	74613	1	True				
ANR	75899	RelationalExpression	i <= 6		74613	0		<=			
ANR	75900	Identifier	i		74613	0					
ANR	75901	PrimaryExpression	6		74613	1					
ANR	75902	PostIncDecOperationExpression	i ++	617:36:24047:24049	74613	2	True				
ANR	75903	Identifier	i		74613	0					
ANR	75904	IncDec	++		74613	1					
ANR	75905	CompoundStatement		347:20:12928:12956	74613	3					
ANR	75906	IdentifierDeclStatement	int cache = value & ( 1 << i ) ;	618:20:24074:24102	74613	0	True				
ANR	75907	IdentifierDecl	cache = value & ( 1 << i )		74613	0					
ANR	75908	IdentifierDeclType	int		74613	0					
ANR	75909	Identifier	cache		74613	1					
ANR	75910	AssignmentExpression	cache = value & ( 1 << i )		74613	2		=			
ANR	75911	Identifier	cache		74613	0					
ANR	75912	BitAndExpression	value & ( 1 << i )		74613	1		&			
ANR	75913	Identifier	value		74613	0					
ANR	75914	ShiftExpression	1 << i		74613	1		<<			
ANR	75915	PrimaryExpression	1		74613	0					
ANR	75916	Identifier	i		74613	1					
ANR	75917	IfStatement	if ( cache )		74613	1					
ANR	75918	Condition	cache	619:24:24128:24132	74613	0	True				
ANR	75919	Identifier	cache		74613	0					
ANR	75920	CompoundStatement		348:31:12989:12989	74613	1					
ANR	75921	ExpressionStatement	parameters -> mode |= ( 1 << i )	620:24:24161:24189	74613	0	True				
ANR	75922	AssignmentExpression	parameters -> mode |= ( 1 << i )		74613	0		|=			
ANR	75923	PtrMemberAccess	parameters -> mode		74613	0					
ANR	75924	Identifier	parameters		74613	0					
ANR	75925	Identifier	mode		74613	1					
ANR	75926	ShiftExpression	1 << i		74613	1		<<			
ANR	75927	PrimaryExpression	1		74613	0					
ANR	75928	Identifier	i		74613	1					
ANR	75929	BreakStatement	break ;	625:8:24263:24268	74613	56	True				
ANR	75930	Label	case 'D' :	629:8:24349:24357	74613	57	True				
ANR	75931	CompoundStatement		358:18:13213:13213	74613	58					
ANR	75932	IfStatement	"if ( sscanf ( opj_optarg , ""%d"" , & parameters -> dcoffset ) != 1 )"		74613	0					
ANR	75933	Condition	"sscanf ( opj_optarg , ""%d"" , & parameters -> dcoffset ) != 1"	630:16:24395:24446	74613	0	True				
ANR	75934	EqualityExpression	"sscanf ( opj_optarg , ""%d"" , & parameters -> dcoffset ) != 1"		74613	0		!=			
ANR	75935	CallExpression	"sscanf ( opj_optarg , ""%d"" , & parameters -> dcoffset )"		74613	0					
ANR	75936	Callee	sscanf		74613	0					
ANR	75937	Identifier	sscanf		74613	0					
ANR	75938	ArgumentList	opj_optarg		74613	1					
ANR	75939	Argument	opj_optarg		74613	0					
ANR	75940	Identifier	opj_optarg		74613	0					
ANR	75941	Argument	"""%d"""		74613	1					
ANR	75942	PrimaryExpression	"""%d"""		74613	0					
ANR	75943	Argument	& parameters -> dcoffset		74613	2					
ANR	75944	UnaryOperationExpression	& parameters -> dcoffset		74613	0					
ANR	75945	UnaryOperator	&		74613	0					
ANR	75946	PtrMemberAccess	parameters -> dcoffset		74613	1					
ANR	75947	Identifier	parameters		74613	0					
ANR	75948	Identifier	dcoffset		74613	1					
ANR	75949	PrimaryExpression	1		74613	1					
ANR	75950	CompoundStatement		359:70:13303:13303	74613	1					
ANR	75951	ExpressionStatement	"fprintf ( stdout , ""[ERROR] DC offset error !! [-D %d]\\n"" , parameters -> dcoffset )"	631:16:24467:24544	74613	0	True				
ANR	75952	CallExpression	"fprintf ( stdout , ""[ERROR] DC offset error !! [-D %d]\\n"" , parameters -> dcoffset )"		74613	0					
ANR	75953	Callee	fprintf		74613	0					
ANR	75954	Identifier	fprintf		74613	0					
ANR	75955	ArgumentList	stdout		74613	1					
ANR	75956	Argument	stdout		74613	0					
ANR	75957	Identifier	stdout		74613	0					
ANR	75958	Argument	"""[ERROR] DC offset error !! [-D %d]\\n"""		74613	1					
ANR	75959	PrimaryExpression	"""[ERROR] DC offset error !! [-D %d]\\n"""		74613	0					
ANR	75960	Argument	parameters -> dcoffset		74613	2					
ANR	75961	PtrMemberAccess	parameters -> dcoffset		74613	0					
ANR	75962	Identifier	parameters		74613	0					
ANR	75963	Identifier	dcoffset		74613	1					
ANR	75964	ReturnStatement	return 1 ;	632:16:24562:24570	74613	1	True				
ANR	75965	PrimaryExpression	1		74613	0					
ANR	75966	BreakStatement	break ;	635:8:24604:24609	74613	59	True				
ANR	75967	Label	case 'R' :	639:8:24690:24698	74613	60	True				
ANR	75968	CompoundStatement		368:18:13554:13554	74613	61					
ANR	75969	IfStatement	"if ( sscanf ( opj_optarg , ""OI:c=%d,U=%d"" , & parameters -> roi_compno , & parameters -> roi_shift ) != 2 )"		74613	0					
ANR	75970	Condition	"sscanf ( opj_optarg , ""OI:c=%d,U=%d"" , & parameters -> roi_compno , & parameters -> roi_shift ) != 2"	640:16:24736:24846	74613	0	True				
ANR	75971	EqualityExpression	"sscanf ( opj_optarg , ""OI:c=%d,U=%d"" , & parameters -> roi_compno , & parameters -> roi_shift ) != 2"		74613	0		!=			
ANR	75972	CallExpression	"sscanf ( opj_optarg , ""OI:c=%d,U=%d"" , & parameters -> roi_compno , & parameters -> roi_shift )"		74613	0					
ANR	75973	Callee	sscanf		74613	0					
ANR	75974	Identifier	sscanf		74613	0					
ANR	75975	ArgumentList	opj_optarg		74613	1					
ANR	75976	Argument	opj_optarg		74613	0					
ANR	75977	Identifier	opj_optarg		74613	0					
ANR	75978	Argument	"""OI:c=%d,U=%d"""		74613	1					
ANR	75979	PrimaryExpression	"""OI:c=%d,U=%d"""		74613	0					
ANR	75980	Argument	& parameters -> roi_compno		74613	2					
ANR	75981	UnaryOperationExpression	& parameters -> roi_compno		74613	0					
ANR	75982	UnaryOperator	&		74613	0					
ANR	75983	PtrMemberAccess	parameters -> roi_compno		74613	1					
ANR	75984	Identifier	parameters		74613	0					
ANR	75985	Identifier	roi_compno		74613	1					
ANR	75986	Argument	& parameters -> roi_shift		74613	3					
ANR	75987	UnaryOperationExpression	& parameters -> roi_shift		74613	0					
ANR	75988	UnaryOperator	&		74613	0					
ANR	75989	PtrMemberAccess	parameters -> roi_shift		74613	1					
ANR	75990	Identifier	parameters		74613	0					
ANR	75991	Identifier	roi_shift		74613	1					
ANR	75992	PrimaryExpression	2		74613	1					
ANR	75993	CompoundStatement		370:53:13703:13703	74613	1					
ANR	75994	ExpressionStatement	"fprintf ( stdout , ""[ERROR] ROI error !! [-ROI:c='compno',U='shift']\\n"" )"	642:16:24867:24936	74613	0	True				
ANR	75995	CallExpression	"fprintf ( stdout , ""[ERROR] ROI error !! [-ROI:c='compno',U='shift']\\n"" )"		74613	0					
ANR	75996	Callee	fprintf		74613	0					
ANR	75997	Identifier	fprintf		74613	0					
ANR	75998	ArgumentList	stdout		74613	1					
ANR	75999	Argument	stdout		74613	0					
ANR	76000	Identifier	stdout		74613	0					
ANR	76001	Argument	"""[ERROR] ROI error !! [-ROI:c='compno',U='shift']\\n"""		74613	1					
ANR	76002	PrimaryExpression	"""[ERROR] ROI error !! [-ROI:c='compno',U='shift']\\n"""		74613	0					
ANR	76003	ReturnStatement	return 1 ;	643:16:24954:24962	74613	1	True				
ANR	76004	PrimaryExpression	1		74613	0					
ANR	76005	BreakStatement	break ;	646:8:24996:25001	74613	62	True				
ANR	76006	Label	case 'l' :	650:8:25082:25090	74613	63	True				
ANR	76007	CompoundStatement		379:18:13946:13946	74613	64					
ANR	76008	IfStatement	"if ( sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> cp_tx0 , & parameters -> cp_ty0 , & parameters -> cp_tz0 ) != 3 )"		74613	0					
ANR	76009	Condition	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> cp_tx0 , & parameters -> cp_ty0 , & parameters -> cp_tz0 ) != 3"	651:16:25136:25256	74613	0	True				
ANR	76010	EqualityExpression	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> cp_tx0 , & parameters -> cp_ty0 , & parameters -> cp_tz0 ) != 3"		74613	0		!=			
ANR	76011	CallExpression	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> cp_tx0 , & parameters -> cp_ty0 , & parameters -> cp_tz0 )"		74613	0					
ANR	76012	Callee	sscanf		74613	0					
ANR	76013	Identifier	sscanf		74613	0					
ANR	76014	ArgumentList	opj_optarg		74613	1					
ANR	76015	Argument	opj_optarg		74613	0					
ANR	76016	Identifier	opj_optarg		74613	0					
ANR	76017	Argument	"""%d,%d,%d"""		74613	1					
ANR	76018	PrimaryExpression	"""%d,%d,%d"""		74613	0					
ANR	76019	Argument	& parameters -> cp_tx0		74613	2					
ANR	76020	UnaryOperationExpression	& parameters -> cp_tx0		74613	0					
ANR	76021	UnaryOperator	&		74613	0					
ANR	76022	PtrMemberAccess	parameters -> cp_tx0		74613	1					
ANR	76023	Identifier	parameters		74613	0					
ANR	76024	Identifier	cp_tx0		74613	1					
ANR	76025	Argument	& parameters -> cp_ty0		74613	3					
ANR	76026	UnaryOperationExpression	& parameters -> cp_ty0		74613	0					
ANR	76027	UnaryOperator	&		74613	0					
ANR	76028	PtrMemberAccess	parameters -> cp_ty0		74613	1					
ANR	76029	Identifier	parameters		74613	0					
ANR	76030	Identifier	cp_ty0		74613	1					
ANR	76031	Argument	& parameters -> cp_tz0		74613	4					
ANR	76032	UnaryOperationExpression	& parameters -> cp_tz0		74613	0					
ANR	76033	UnaryOperator	&		74613	0					
ANR	76034	PtrMemberAccess	parameters -> cp_tz0		74613	1					
ANR	76035	Identifier	parameters		74613	0					
ANR	76036	Identifier	cp_tz0		74613	1					
ANR	76037	PrimaryExpression	3		74613	1					
ANR	76038	CompoundStatement		381:50:14113:14113	74613	1					
ANR	76039	ExpressionStatement	"fprintf ( stdout , ""[ERROR] -l 'tile offset' argument error !! [-l X0,Y0,Z0]"" )"	653:16:25277:25352	74613	0	True				
ANR	76040	CallExpression	"fprintf ( stdout , ""[ERROR] -l 'tile offset' argument error !! [-l X0,Y0,Z0]"" )"		74613	0					
ANR	76041	Callee	fprintf		74613	0					
ANR	76042	Identifier	fprintf		74613	0					
ANR	76043	ArgumentList	stdout		74613	1					
ANR	76044	Argument	stdout		74613	0					
ANR	76045	Identifier	stdout		74613	0					
ANR	76046	Argument	"""[ERROR] -l 'tile offset' argument error !! [-l X0,Y0,Z0]"""		74613	1					
ANR	76047	PrimaryExpression	"""[ERROR] -l 'tile offset' argument error !! [-l X0,Y0,Z0]"""		74613	0					
ANR	76048	ReturnStatement	return 1 ;	654:16:25370:25378	74613	1	True				
ANR	76049	PrimaryExpression	1		74613	0					
ANR	76050	BreakStatement	break ;	657:8:25412:25417	74613	65	True				
ANR	76051	Label	case 'C' :	676:8:26035:26043	74613	66	True				
ANR	76052	CompoundStatement		406:12:14954:14968	74613	67					
ANR	76053	IdentifierDeclStatement	char coding [ 3 ] ;	677:12:26100:26114	74613	0	True				
ANR	76054	IdentifierDecl	coding [ 3 ]		74613	0					
ANR	76055	IdentifierDeclType	char [ 3 ]		74613	0					
ANR	76056	Identifier	coding		74613	1					
ANR	76057	PrimaryExpression	3		74613	2					
ANR	76058	ExpressionStatement	"strncpy ( coding , opj_optarg , 3 )"	679:12:26129:26159	74613	1	True				
ANR	76059	CallExpression	"strncpy ( coding , opj_optarg , 3 )"		74613	0					
ANR	76060	Callee	strncpy		74613	0					
ANR	76061	Identifier	strncpy		74613	0					
ANR	76062	ArgumentList	coding		74613	1					
ANR	76063	Argument	coding		74613	0					
ANR	76064	Identifier	coding		74613	0					
ANR	76065	Argument	opj_optarg		74613	1					
ANR	76066	Identifier	opj_optarg		74613	0					
ANR	76067	Argument	3		74613	2					
ANR	76068	PrimaryExpression	3		74613	0					
ANR	76069	ExpressionStatement	parameters -> encoding_format = give_coding ( coding )	680:12:26173:26222	74613	2	True				
ANR	76070	AssignmentExpression	parameters -> encoding_format = give_coding ( coding )		74613	0		=			
ANR	76071	PtrMemberAccess	parameters -> encoding_format		74613	0					
ANR	76072	Identifier	parameters		74613	0					
ANR	76073	Identifier	encoding_format		74613	1					
ANR	76074	CallExpression	give_coding ( coding )		74613	1					
ANR	76075	Callee	give_coding		74613	0					
ANR	76076	Identifier	give_coding		74613	0					
ANR	76077	ArgumentList	coding		74613	1					
ANR	76078	Argument	coding		74613	0					
ANR	76079	Identifier	coding		74613	0					
ANR	76080	IfStatement	if ( parameters -> encoding_format == - 1 )		74613	3					
ANR	76081	Condition	parameters -> encoding_format == - 1	681:16:26240:26272	74613	0	True				
ANR	76082	EqualityExpression	parameters -> encoding_format == - 1		74613	0		==			
ANR	76083	PtrMemberAccess	parameters -> encoding_format		74613	0					
ANR	76084	Identifier	parameters		74613	0					
ANR	76085	Identifier	encoding_format		74613	1					
ANR	76086	UnaryOperationExpression	- 1		74613	1					
ANR	76087	UnaryOperator	-		74613	0					
ANR	76088	PrimaryExpression	1		74613	1					
ANR	76089	CompoundStatement		410:51:15129:15129	74613	1					
ANR	76090	ExpressionStatement	"fprintf ( stdout , ""[ERROR] -C 'Coding algorithm' argument error !! [-C 2EB, 3EB, 2GR, 3GR or GRI only]"" )"	682:16:26293:26419	74613	0	True				
ANR	76091	CallExpression	"fprintf ( stdout , ""[ERROR] -C 'Coding algorithm' argument error !! [-C 2EB, 3EB, 2GR, 3GR or GRI only]"" )"		74613	0					
ANR	76092	Callee	fprintf		74613	0					
ANR	76093	Identifier	fprintf		74613	0					
ANR	76094	ArgumentList	stdout		74613	1					
ANR	76095	Argument	stdout		74613	0					
ANR	76096	Identifier	stdout		74613	0					
ANR	76097	Argument	"""[ERROR] -C 'Coding algorithm' argument error !! [-C 2EB, 3EB, 2GR, 3GR or GRI only]"""		74613	1					
ANR	76098	PrimaryExpression	"""[ERROR] -C 'Coding algorithm' argument error !! [-C 2EB, 3EB, 2GR, 3GR or GRI only]"""		74613	0					
ANR	76099	ReturnStatement	return 1 ;	684:16:26437:26445	74613	1	True				
ANR	76100	PrimaryExpression	1		74613	0					
ANR	76101	BreakStatement	break ;	687:8:26479:26484	74613	68	True				
ANR	76102	Label	case 'I' :	691:8:26565:26573	74613	69	True				
ANR	76103	CompoundStatement		420:18:15429:15429	74613	70					
ANR	76104	ExpressionStatement	parameters -> irreversible = 1	692:12:26621:26649	74613	0	True				
ANR	76105	AssignmentExpression	parameters -> irreversible = 1		74613	0		=			
ANR	76106	PtrMemberAccess	parameters -> irreversible		74613	0					
ANR	76107	Identifier	parameters		74613	0					
ANR	76108	Identifier	irreversible		74613	1					
ANR	76109	PrimaryExpression	1		74613	1					
ANR	76110	BreakStatement	break ;	694:8:26669:26674	74613	71	True				
ANR	76111	Label	default :	696:8:26685:26692	74613	72	True				
ANR	76112	Identifier	default		74613	0					
ANR	76113	ExpressionStatement	"fprintf ( stdout , ""[ERROR] This option is not valid \\""-%c %s\\""\\n"" , c , opj_optarg )"	697:12:26706:26785	74613	73	True				
ANR	76114	CallExpression	"fprintf ( stdout , ""[ERROR] This option is not valid \\""-%c %s\\""\\n"" , c , opj_optarg )"		74613	0					
ANR	76115	Callee	fprintf		74613	0					
ANR	76116	Identifier	fprintf		74613	0					
ANR	76117	ArgumentList	stdout		74613	1					
ANR	76118	Argument	stdout		74613	0					
ANR	76119	Identifier	stdout		74613	0					
ANR	76120	Argument	"""[ERROR] This option is not valid \\""-%c %s\\""\\n"""		74613	1					
ANR	76121	PrimaryExpression	"""[ERROR] This option is not valid \\""-%c %s\\""\\n"""		74613	0					
ANR	76122	Argument	c		74613	2					
ANR	76123	Identifier	c		74613	0					
ANR	76124	Argument	opj_optarg		74613	3					
ANR	76125	Identifier	opj_optarg		74613	0					
ANR	76126	ReturnStatement	return 1 ;	698:12:26799:26807	74613	74	True				
ANR	76127	PrimaryExpression	1		74613	0					
ANR	76128	IfStatement	if ( ( parameters -> infile [ 0 ] == 0 ) || ( parameters -> outfile [ 0 ] == 0 ) )		74613	2					
ANR	76129	Condition	( parameters -> infile [ 0 ] == 0 ) || ( parameters -> outfile [ 0 ] == 0 )	704:8:26871:26931	74613	0	True				
ANR	76130	OrExpression	( parameters -> infile [ 0 ] == 0 ) || ( parameters -> outfile [ 0 ] == 0 )		74613	0		||			
ANR	76131	EqualityExpression	parameters -> infile [ 0 ] == 0		74613	0		==			
ANR	76132	ArrayIndexing	parameters -> infile [ 0 ]		74613	0					
ANR	76133	PtrMemberAccess	parameters -> infile		74613	0					
ANR	76134	Identifier	parameters		74613	0					
ANR	76135	Identifier	infile		74613	1					
ANR	76136	PrimaryExpression	0		74613	1					
ANR	76137	PrimaryExpression	0		74613	1					
ANR	76138	EqualityExpression	parameters -> outfile [ 0 ] == 0		74613	1		==			
ANR	76139	ArrayIndexing	parameters -> outfile [ 0 ]		74613	0					
ANR	76140	PtrMemberAccess	parameters -> outfile		74613	0					
ANR	76141	Identifier	parameters		74613	0					
ANR	76142	Identifier	outfile		74613	1					
ANR	76143	PrimaryExpression	0		74613	1					
ANR	76144	PrimaryExpression	0		74613	1					
ANR	76145	CompoundStatement		433:71:15788:15788	74613	1					
ANR	76146	ExpressionStatement	"fprintf ( stdout , ""usage: jp3d_vm_enc -i volume-file -o jp3d-file (+ options)\\n"" )"	705:8:26944:27023	74613	0	True				
ANR	76147	CallExpression	"fprintf ( stdout , ""usage: jp3d_vm_enc -i volume-file -o jp3d-file (+ options)\\n"" )"		74613	0					
ANR	76148	Callee	fprintf		74613	0					
ANR	76149	Identifier	fprintf		74613	0					
ANR	76150	ArgumentList	stdout		74613	1					
ANR	76151	Argument	stdout		74613	0					
ANR	76152	Identifier	stdout		74613	0					
ANR	76153	Argument	"""usage: jp3d_vm_enc -i volume-file -o jp3d-file (+ options)\\n"""		74613	1					
ANR	76154	PrimaryExpression	"""usage: jp3d_vm_enc -i volume-file -o jp3d-file (+ options)\\n"""		74613	0					
ANR	76155	ReturnStatement	return 1 ;	706:8:27033:27041	74613	1	True				
ANR	76156	PrimaryExpression	1		74613	0					
ANR	76157	IfStatement	if ( ( parameters -> decod_format == BIN_DFMT ) && ( parameters -> imgfile [ 0 ] == 0 ) )		74613	3					
ANR	76158	Condition	( parameters -> decod_format == BIN_DFMT ) && ( parameters -> imgfile [ 0 ] == 0 )	709:8:27058:27128	74613	0	True				
ANR	76159	AndExpression	( parameters -> decod_format == BIN_DFMT ) && ( parameters -> imgfile [ 0 ] == 0 )		74613	0		&&			
ANR	76160	EqualityExpression	parameters -> decod_format == BIN_DFMT		74613	0		==			
ANR	76161	PtrMemberAccess	parameters -> decod_format		74613	0					
ANR	76162	Identifier	parameters		74613	0					
ANR	76163	Identifier	decod_format		74613	1					
ANR	76164	Identifier	BIN_DFMT		74613	1					
ANR	76165	EqualityExpression	parameters -> imgfile [ 0 ] == 0		74613	1		==			
ANR	76166	ArrayIndexing	parameters -> imgfile [ 0 ]		74613	0					
ANR	76167	PtrMemberAccess	parameters -> imgfile		74613	0					
ANR	76168	Identifier	parameters		74613	0					
ANR	76169	Identifier	imgfile		74613	1					
ANR	76170	PrimaryExpression	0		74613	1					
ANR	76171	PrimaryExpression	0		74613	1					
ANR	76172	CompoundStatement		438:81:15985:15985	74613	1					
ANR	76173	ExpressionStatement	"fprintf ( stdout , ""usage: jp3d_vm_enc -i bin-volume-file -m img-file -o jp3d-file (+ options)\\n"" )"	710:8:27141:27252	74613	0	True				
ANR	76174	CallExpression	"fprintf ( stdout , ""usage: jp3d_vm_enc -i bin-volume-file -m img-file -o jp3d-file (+ options)\\n"" )"		74613	0					
ANR	76175	Callee	fprintf		74613	0					
ANR	76176	Identifier	fprintf		74613	0					
ANR	76177	ArgumentList	stdout		74613	1					
ANR	76178	Argument	stdout		74613	0					
ANR	76179	Identifier	stdout		74613	0					
ANR	76180	Argument	"""usage: jp3d_vm_enc -i bin-volume-file -m img-file -o jp3d-file (+ options)\\n"""		74613	1					
ANR	76181	PrimaryExpression	"""usage: jp3d_vm_enc -i bin-volume-file -m img-file -o jp3d-file (+ options)\\n"""		74613	0					
ANR	76182	ReturnStatement	return 1 ;	712:8:27262:27270	74613	1	True				
ANR	76183	PrimaryExpression	1		74613	0					
ANR	76184	IfStatement	if ( ( parameters -> decod_format != BIN_DFMT ) && ( parameters -> decod_format != PGX_DFMT ) && ( parameters -> decod_format != IMG_DFMT ) )		74613	4					
ANR	76185	Condition	( parameters -> decod_format != BIN_DFMT ) && ( parameters -> decod_format != PGX_DFMT ) && ( parameters -> decod_format != IMG_DFMT )	715:8:27287:27432	74613	0	True				
ANR	76186	AndExpression	( parameters -> decod_format != BIN_DFMT ) && ( parameters -> decod_format != PGX_DFMT ) && ( parameters -> decod_format != IMG_DFMT )		74613	0		&&			
ANR	76187	EqualityExpression	parameters -> decod_format != BIN_DFMT		74613	0		!=			
ANR	76188	PtrMemberAccess	parameters -> decod_format		74613	0					
ANR	76189	Identifier	parameters		74613	0					
ANR	76190	Identifier	decod_format		74613	1					
ANR	76191	Identifier	BIN_DFMT		74613	1					
ANR	76192	AndExpression	( parameters -> decod_format != PGX_DFMT ) && ( parameters -> decod_format != IMG_DFMT )		74613	1		&&			
ANR	76193	EqualityExpression	parameters -> decod_format != PGX_DFMT		74613	0		!=			
ANR	76194	PtrMemberAccess	parameters -> decod_format		74613	0					
ANR	76195	Identifier	parameters		74613	0					
ANR	76196	Identifier	decod_format		74613	1					
ANR	76197	Identifier	PGX_DFMT		74613	1					
ANR	76198	EqualityExpression	parameters -> decod_format != IMG_DFMT		74613	1		!=			
ANR	76199	PtrMemberAccess	parameters -> decod_format		74613	0					
ANR	76200	Identifier	parameters		74613	0					
ANR	76201	Identifier	decod_format		74613	1					
ANR	76202	Identifier	IMG_DFMT		74613	1					
ANR	76203	CompoundStatement		446:52:16289:16289	74613	1					
ANR	76204	ExpressionStatement	"fprintf ( stdout , ""usage: jp3d_vm_enc -i input-volume-file [*.bin,*.pgx,*.img] -o jp3d-file [*.jp3d,*.j2k] (+ options)\\n"" )"	718:8:27445:27581	74613	0	True				
ANR	76205	CallExpression	"fprintf ( stdout , ""usage: jp3d_vm_enc -i input-volume-file [*.bin,*.pgx,*.img] -o jp3d-file [*.jp3d,*.j2k] (+ options)\\n"" )"		74613	0					
ANR	76206	Callee	fprintf		74613	0					
ANR	76207	Identifier	fprintf		74613	0					
ANR	76208	ArgumentList	stdout		74613	1					
ANR	76209	Argument	stdout		74613	0					
ANR	76210	Identifier	stdout		74613	0					
ANR	76211	Argument	"""usage: jp3d_vm_enc -i input-volume-file [*.bin,*.pgx,*.img] -o jp3d-file [*.jp3d,*.j2k] (+ options)\\n"""		74613	1					
ANR	76212	PrimaryExpression	"""usage: jp3d_vm_enc -i input-volume-file [*.bin,*.pgx,*.img] -o jp3d-file [*.jp3d,*.j2k] (+ options)\\n"""		74613	0					
ANR	76213	ReturnStatement	return 1 ;	720:8:27591:27599	74613	1	True				
ANR	76214	PrimaryExpression	1		74613	0					
ANR	76215	IfStatement	if ( ( parameters -> cod_format != J3D_CFMT ) && ( parameters -> cod_format != J2K_CFMT ) )		74613	5					
ANR	76216	Condition	( parameters -> cod_format != J3D_CFMT ) && ( parameters -> cod_format != J2K_CFMT )	722:8:27615:27702	74613	0	True				
ANR	76217	AndExpression	( parameters -> cod_format != J3D_CFMT ) && ( parameters -> cod_format != J2K_CFMT )		74613	0		&&			
ANR	76218	EqualityExpression	parameters -> cod_format != J3D_CFMT		74613	0		!=			
ANR	76219	PtrMemberAccess	parameters -> cod_format		74613	0					
ANR	76220	Identifier	parameters		74613	0					
ANR	76221	Identifier	cod_format		74613	1					
ANR	76222	Identifier	J3D_CFMT		74613	1					
ANR	76223	EqualityExpression	parameters -> cod_format != J2K_CFMT		74613	1		!=			
ANR	76224	PtrMemberAccess	parameters -> cod_format		74613	0					
ANR	76225	Identifier	parameters		74613	0					
ANR	76226	Identifier	cod_format		74613	1					
ANR	76227	Identifier	J2K_CFMT		74613	1					
ANR	76228	CompoundStatement		452:50:16559:16559	74613	1					
ANR	76229	ExpressionStatement	"fprintf ( stdout , ""usage: jp3d_vm_enc -i input-volume-file [*.bin,*.pgx,*.img] -o jp3d-file [*.jp3d,*.j2k] (+ options)\\n"" )"	724:8:27715:27851	74613	0	True				
ANR	76230	CallExpression	"fprintf ( stdout , ""usage: jp3d_vm_enc -i input-volume-file [*.bin,*.pgx,*.img] -o jp3d-file [*.jp3d,*.j2k] (+ options)\\n"" )"		74613	0					
ANR	76231	Callee	fprintf		74613	0					
ANR	76232	Identifier	fprintf		74613	0					
ANR	76233	ArgumentList	stdout		74613	1					
ANR	76234	Argument	stdout		74613	0					
ANR	76235	Identifier	stdout		74613	0					
ANR	76236	Argument	"""usage: jp3d_vm_enc -i input-volume-file [*.bin,*.pgx,*.img] -o jp3d-file [*.jp3d,*.j2k] (+ options)\\n"""		74613	1					
ANR	76237	PrimaryExpression	"""usage: jp3d_vm_enc -i input-volume-file [*.bin,*.pgx,*.img] -o jp3d-file [*.jp3d,*.j2k] (+ options)\\n"""		74613	0					
ANR	76238	ReturnStatement	return 1 ;	726:8:27861:27869	74613	1	True				
ANR	76239	PrimaryExpression	1		74613	0					
ANR	76240	IfStatement	if ( ( parameters -> encoding_format == ENCOD_2GR || parameters -> encoding_format == ENCOD_3GR ) && parameters -> transform_format != TRF_3D_LSE && parameters -> transform_format != TRF_3D_RLS )		74613	6					
ANR	76241	Condition	( parameters -> encoding_format == ENCOD_2GR || parameters -> encoding_format == ENCOD_3GR ) && parameters -> transform_format != TRF_3D_LSE && parameters -> transform_format != TRF_3D_RLS	729:8:27886:28099	74613	0	True				
ANR	76242	AndExpression	( parameters -> encoding_format == ENCOD_2GR || parameters -> encoding_format == ENCOD_3GR ) && parameters -> transform_format != TRF_3D_LSE && parameters -> transform_format != TRF_3D_RLS		74613	0		&&			
ANR	76243	OrExpression	parameters -> encoding_format == ENCOD_2GR || parameters -> encoding_format == ENCOD_3GR		74613	0		||			
ANR	76244	EqualityExpression	parameters -> encoding_format == ENCOD_2GR		74613	0		==			
ANR	76245	PtrMemberAccess	parameters -> encoding_format		74613	0					
ANR	76246	Identifier	parameters		74613	0					
ANR	76247	Identifier	encoding_format		74613	1					
ANR	76248	Identifier	ENCOD_2GR		74613	1					
ANR	76249	EqualityExpression	parameters -> encoding_format == ENCOD_3GR		74613	1		==			
ANR	76250	PtrMemberAccess	parameters -> encoding_format		74613	0					
ANR	76251	Identifier	parameters		74613	0					
ANR	76252	Identifier	encoding_format		74613	1					
ANR	76253	Identifier	ENCOD_3GR		74613	1					
ANR	76254	AndExpression	parameters -> transform_format != TRF_3D_LSE && parameters -> transform_format != TRF_3D_RLS		74613	1		&&			
ANR	76255	EqualityExpression	parameters -> transform_format != TRF_3D_LSE		74613	0		!=			
ANR	76256	PtrMemberAccess	parameters -> transform_format		74613	0					
ANR	76257	Identifier	parameters		74613	0					
ANR	76258	Identifier	transform_format		74613	1					
ANR	76259	Identifier	TRF_3D_LSE		74613	1					
ANR	76260	EqualityExpression	parameters -> transform_format != TRF_3D_RLS		74613	1		!=			
ANR	76261	PtrMemberAccess	parameters -> transform_format		74613	0					
ANR	76262	Identifier	parameters		74613	0					
ANR	76263	Identifier	transform_format		74613	1					
ANR	76264	Identifier	TRF_3D_RLS		74613	1					
ANR	76265	CompoundStatement		461:56:16956:16956	74613	1					
ANR	76266	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Entropy coding options -C [2GR,3GR] are only compatible with predictive-based transform algorithms: -T [3RLS,3LSE].\\n"" )"	733:8:28112:28272	74613	0	True				
ANR	76267	CallExpression	"fprintf ( stdout , ""[ERROR] Entropy coding options -C [2GR,3GR] are only compatible with predictive-based transform algorithms: -T [3RLS,3LSE].\\n"" )"		74613	0					
ANR	76268	Callee	fprintf		74613	0					
ANR	76269	Identifier	fprintf		74613	0					
ANR	76270	ArgumentList	stdout		74613	1					
ANR	76271	Argument	stdout		74613	0					
ANR	76272	Identifier	stdout		74613	0					
ANR	76273	Argument	"""[ERROR] Entropy coding options -C [2GR,3GR] are only compatible with predictive-based transform algorithms: -T [3RLS,3LSE].\\n"""		74613	1					
ANR	76274	PrimaryExpression	"""[ERROR] Entropy coding options -C [2GR,3GR] are only compatible with predictive-based transform algorithms: -T [3RLS,3LSE].\\n"""		74613	0					
ANR	76275	ReturnStatement	return 1 ;	735:8:28282:28290	74613	1	True				
ANR	76276	PrimaryExpression	1		74613	0					
ANR	76277	IfStatement	if ( parameters -> encoding_format == ENCOD_3EB )		74613	7					
ANR	76278	Condition	parameters -> encoding_format == ENCOD_3EB	737:8:28306:28345	74613	0	True				
ANR	76279	EqualityExpression	parameters -> encoding_format == ENCOD_3EB		74613	0		==			
ANR	76280	PtrMemberAccess	parameters -> encoding_format		74613	0					
ANR	76281	Identifier	parameters		74613	0					
ANR	76282	Identifier	encoding_format		74613	1					
ANR	76283	Identifier	ENCOD_3EB		74613	1					
ANR	76284	CompoundStatement		466:50:17202:17202	74613	1					
ANR	76285	ExpressionStatement	parameters -> mode |= ( 1 << 6 )	738:8:28358:28386	74613	0	True				
ANR	76286	AssignmentExpression	parameters -> mode |= ( 1 << 6 )		74613	0		|=			
ANR	76287	PtrMemberAccess	parameters -> mode		74613	0					
ANR	76288	Identifier	parameters		74613	0					
ANR	76289	Identifier	mode		74613	1					
ANR	76290	ShiftExpression	1 << 6		74613	1		<<			
ANR	76291	PrimaryExpression	1		74613	0					
ANR	76292	PrimaryExpression	6		74613	1					
ANR	76293	IfStatement	if ( ( parameters -> mode >> 6 ) & 1 )		74613	8					
ANR	76294	Condition	( parameters -> mode >> 6 ) & 1	741:8:28403:28429	74613	0	True				
ANR	76295	BitAndExpression	( parameters -> mode >> 6 ) & 1		74613	0		&			
ANR	76296	ShiftExpression	parameters -> mode >> 6		74613	0		>>			
ANR	76297	PtrMemberAccess	parameters -> mode		74613	0					
ANR	76298	Identifier	parameters		74613	0					
ANR	76299	Identifier	mode		74613	1					
ANR	76300	PrimaryExpression	6		74613	1					
ANR	76301	PrimaryExpression	1		74613	1					
ANR	76302	CompoundStatement		470:37:17286:17286	74613	1					
ANR	76303	ExpressionStatement	parameters -> encoding_format = ENCOD_3EB	742:8:28442:28481	74613	0	True				
ANR	76304	AssignmentExpression	parameters -> encoding_format = ENCOD_3EB		74613	0		=			
ANR	76305	PtrMemberAccess	parameters -> encoding_format		74613	0					
ANR	76306	Identifier	parameters		74613	0					
ANR	76307	Identifier	encoding_format		74613	1					
ANR	76308	Identifier	ENCOD_3EB		74613	1					
ANR	76309	IfStatement	if ( ( parameters -> numresolution [ 2 ] == 0 || ( parameters -> numresolution [ 1 ] == 0 ) || ( parameters -> numresolution [ 0 ] == 0 ) ) )		74613	9					
ANR	76310	Condition	parameters -> numresolution [ 2 ] == 0 || ( parameters -> numresolution [ 1 ] == 0 ) || ( parameters -> numresolution [ 0 ] == 0 )	745:8:28498:28622	74613	0	True				
ANR	76311	OrExpression	parameters -> numresolution [ 2 ] == 0 || ( parameters -> numresolution [ 1 ] == 0 ) || ( parameters -> numresolution [ 0 ] == 0 )		74613	0		||			
ANR	76312	EqualityExpression	parameters -> numresolution [ 2 ] == 0		74613	0		==			
ANR	76313	ArrayIndexing	parameters -> numresolution [ 2 ]		74613	0					
ANR	76314	PtrMemberAccess	parameters -> numresolution		74613	0					
ANR	76315	Identifier	parameters		74613	0					
ANR	76316	Identifier	numresolution		74613	1					
ANR	76317	PrimaryExpression	2		74613	1					
ANR	76318	PrimaryExpression	0		74613	1					
ANR	76319	OrExpression	( parameters -> numresolution [ 1 ] == 0 ) || ( parameters -> numresolution [ 0 ] == 0 )		74613	1		||			
ANR	76320	EqualityExpression	parameters -> numresolution [ 1 ] == 0		74613	0		==			
ANR	76321	ArrayIndexing	parameters -> numresolution [ 1 ]		74613	0					
ANR	76322	PtrMemberAccess	parameters -> numresolution		74613	0					
ANR	76323	Identifier	parameters		74613	0					
ANR	76324	Identifier	numresolution		74613	1					
ANR	76325	PrimaryExpression	1		74613	1					
ANR	76326	PrimaryExpression	0		74613	1					
ANR	76327	EqualityExpression	parameters -> numresolution [ 0 ] == 0		74613	1		==			
ANR	76328	ArrayIndexing	parameters -> numresolution [ 0 ]		74613	0					
ANR	76329	PtrMemberAccess	parameters -> numresolution		74613	0					
ANR	76330	Identifier	parameters		74613	0					
ANR	76331	Identifier	numresolution		74613	1					
ANR	76332	PrimaryExpression	0		74613	1					
ANR	76333	PrimaryExpression	0		74613	1					
ANR	76334	CompoundStatement		475:50:17479:17479	74613	1					
ANR	76335	ExpressionStatement	"fprintf ( stdout , ""[ERROR] -n 'resolution levels' argument error ! Resolutions must be greater than 1 in order to perform DWT.\\n"" )"	747:8:28635:28779	74613	0	True				
ANR	76336	CallExpression	"fprintf ( stdout , ""[ERROR] -n 'resolution levels' argument error ! Resolutions must be greater than 1 in order to perform DWT.\\n"" )"		74613	0					
ANR	76337	Callee	fprintf		74613	0					
ANR	76338	Identifier	fprintf		74613	0					
ANR	76339	ArgumentList	stdout		74613	1					
ANR	76340	Argument	stdout		74613	0					
ANR	76341	Identifier	stdout		74613	0					
ANR	76342	Argument	"""[ERROR] -n 'resolution levels' argument error ! Resolutions must be greater than 1 in order to perform DWT.\\n"""		74613	1					
ANR	76343	PrimaryExpression	"""[ERROR] -n 'resolution levels' argument error ! Resolutions must be greater than 1 in order to perform DWT.\\n"""		74613	0					
ANR	76344	ReturnStatement	return 1 ;	749:8:28789:28797	74613	1	True				
ANR	76345	PrimaryExpression	1		74613	0					
ANR	76346	IfStatement	if ( parameters -> numresolution [ 1 ] != parameters -> numresolution [ 0 ] )		74613	10					
ANR	76347	Condition	parameters -> numresolution [ 1 ] != parameters -> numresolution [ 0 ]	751:8:28813:28872	74613	0	True				
ANR	76348	EqualityExpression	parameters -> numresolution [ 1 ] != parameters -> numresolution [ 0 ]		74613	0		!=			
ANR	76349	ArrayIndexing	parameters -> numresolution [ 1 ]		74613	0					
ANR	76350	PtrMemberAccess	parameters -> numresolution		74613	0					
ANR	76351	Identifier	parameters		74613	0					
ANR	76352	Identifier	numresolution		74613	1					
ANR	76353	PrimaryExpression	1		74613	1					
ANR	76354	ArrayIndexing	parameters -> numresolution [ 0 ]		74613	1					
ANR	76355	PtrMemberAccess	parameters -> numresolution		74613	0					
ANR	76356	Identifier	parameters		74613	0					
ANR	76357	Identifier	numresolution		74613	1					
ANR	76358	PrimaryExpression	0		74613	1					
ANR	76359	CompoundStatement		480:70:17729:17729	74613	1					
ANR	76360	ExpressionStatement	"fprintf ( stdout , ""[ERROR] -n 'resolution levels' argument error ! Resolutions in X and Y axis must be the same in this implementation.\\n"" )"	752:8:28885:29038	74613	0	True				
ANR	76361	CallExpression	"fprintf ( stdout , ""[ERROR] -n 'resolution levels' argument error ! Resolutions in X and Y axis must be the same in this implementation.\\n"" )"		74613	0					
ANR	76362	Callee	fprintf		74613	0					
ANR	76363	Identifier	fprintf		74613	0					
ANR	76364	ArgumentList	stdout		74613	1					
ANR	76365	Argument	stdout		74613	0					
ANR	76366	Identifier	stdout		74613	0					
ANR	76367	Argument	"""[ERROR] -n 'resolution levels' argument error ! Resolutions in X and Y axis must be the same in this implementation.\\n"""		74613	1					
ANR	76368	PrimaryExpression	"""[ERROR] -n 'resolution levels' argument error ! Resolutions in X and Y axis must be the same in this implementation.\\n"""		74613	0					
ANR	76369	ReturnStatement	return 1 ;	754:8:29048:29056	74613	1	True				
ANR	76370	PrimaryExpression	1		74613	0					
ANR	76371	IfStatement	if ( parameters -> numresolution [ 2 ] > parameters -> numresolution [ 0 ] )		74613	11					
ANR	76372	Condition	parameters -> numresolution [ 2 ] > parameters -> numresolution [ 0 ]	757:8:29073:29131	74613	0	True				
ANR	76373	RelationalExpression	parameters -> numresolution [ 2 ] > parameters -> numresolution [ 0 ]		74613	0		>			
ANR	76374	ArrayIndexing	parameters -> numresolution [ 2 ]		74613	0					
ANR	76375	PtrMemberAccess	parameters -> numresolution		74613	0					
ANR	76376	Identifier	parameters		74613	0					
ANR	76377	Identifier	numresolution		74613	1					
ANR	76378	PrimaryExpression	2		74613	1					
ANR	76379	ArrayIndexing	parameters -> numresolution [ 0 ]		74613	1					
ANR	76380	PtrMemberAccess	parameters -> numresolution		74613	0					
ANR	76381	Identifier	parameters		74613	0					
ANR	76382	Identifier	numresolution		74613	1					
ANR	76383	PrimaryExpression	0		74613	1					
ANR	76384	CompoundStatement		486:69:17988:17988	74613	1					
ANR	76385	ExpressionStatement	"fprintf ( stdout , ""[ERROR] -n 'resolution levels' argument error ! Resolutions in Z axis must be lower than in X-Y axis.\\n"" )"	758:8:29144:29282	74613	0	True				
ANR	76386	CallExpression	"fprintf ( stdout , ""[ERROR] -n 'resolution levels' argument error ! Resolutions in Z axis must be lower than in X-Y axis.\\n"" )"		74613	0					
ANR	76387	Callee	fprintf		74613	0					
ANR	76388	Identifier	fprintf		74613	0					
ANR	76389	ArgumentList	stdout		74613	1					
ANR	76390	Argument	stdout		74613	0					
ANR	76391	Identifier	stdout		74613	0					
ANR	76392	Argument	"""[ERROR] -n 'resolution levels' argument error ! Resolutions in Z axis must be lower than in X-Y axis.\\n"""		74613	1					
ANR	76393	PrimaryExpression	"""[ERROR] -n 'resolution levels' argument error ! Resolutions in Z axis must be lower than in X-Y axis.\\n"""		74613	0					
ANR	76394	ReturnStatement	return 1 ;	760:8:29292:29300	74613	1	True				
ANR	76395	PrimaryExpression	1		74613	0					
ANR	76396	IfStatement	if ( parameters -> dcoffset >= 128 && parameters -> dcoffset <= - 128 )		74613	12					
ANR	76397	Condition	parameters -> dcoffset >= 128 && parameters -> dcoffset <= - 128	763:8:29317:29375	74613	0	True				
ANR	76398	AndExpression	parameters -> dcoffset >= 128 && parameters -> dcoffset <= - 128		74613	0		&&			
ANR	76399	RelationalExpression	parameters -> dcoffset >= 128		74613	0		>=			
ANR	76400	PtrMemberAccess	parameters -> dcoffset		74613	0					
ANR	76401	Identifier	parameters		74613	0					
ANR	76402	Identifier	dcoffset		74613	1					
ANR	76403	PrimaryExpression	128		74613	1					
ANR	76404	RelationalExpression	parameters -> dcoffset <= - 128		74613	1		<=			
ANR	76405	PtrMemberAccess	parameters -> dcoffset		74613	0					
ANR	76406	Identifier	parameters		74613	0					
ANR	76407	Identifier	dcoffset		74613	1					
ANR	76408	UnaryOperationExpression	- 128		74613	1					
ANR	76409	UnaryOperator	-		74613	0					
ANR	76410	PrimaryExpression	128		74613	1					
ANR	76411	CompoundStatement		492:69:18232:18232	74613	1					
ANR	76412	ExpressionStatement	"fprintf ( stdout , ""[ERROR] -D 'DC offset' argument error ! Value must be -128<=DCO<=128.\\n"" )"	764:8:29388:29494	74613	0	True				
ANR	76413	CallExpression	"fprintf ( stdout , ""[ERROR] -D 'DC offset' argument error ! Value must be -128<=DCO<=128.\\n"" )"		74613	0					
ANR	76414	Callee	fprintf		74613	0					
ANR	76415	Identifier	fprintf		74613	0					
ANR	76416	ArgumentList	stdout		74613	1					
ANR	76417	Argument	stdout		74613	0					
ANR	76418	Identifier	stdout		74613	0					
ANR	76419	Argument	"""[ERROR] -D 'DC offset' argument error ! Value must be -128<=DCO<=128.\\n"""		74613	1					
ANR	76420	PrimaryExpression	"""[ERROR] -D 'DC offset' argument error ! Value must be -128<=DCO<=128.\\n"""		74613	0					
ANR	76421	ReturnStatement	return 1 ;	766:8:29504:29512	74613	1	True				
ANR	76422	PrimaryExpression	1		74613	0					
ANR	76423	IfStatement	if ( parameters -> numresolution [ 2 ] != 1 )		74613	13					
ANR	76424	Condition	parameters -> numresolution [ 2 ] != 1	769:8:29529:29561	74613	0	True				
ANR	76425	EqualityExpression	parameters -> numresolution [ 2 ] != 1		74613	0		!=			
ANR	76426	ArrayIndexing	parameters -> numresolution [ 2 ]		74613	0					
ANR	76427	PtrMemberAccess	parameters -> numresolution		74613	0					
ANR	76428	Identifier	parameters		74613	0					
ANR	76429	Identifier	numresolution		74613	1					
ANR	76430	PrimaryExpression	2		74613	1					
ANR	76431	PrimaryExpression	1		74613	1					
ANR	76432	CompoundStatement		498:43:18418:18418	74613	1					
ANR	76433	ExpressionStatement	parameters -> transform_format = TRF_3D_DWT	770:8:29574:29615	74613	0	True				
ANR	76434	AssignmentExpression	parameters -> transform_format = TRF_3D_DWT		74613	0		=			
ANR	76435	PtrMemberAccess	parameters -> transform_format		74613	0					
ANR	76436	Identifier	parameters		74613	0					
ANR	76437	Identifier	transform_format		74613	1					
ANR	76438	Identifier	TRF_3D_DWT		74613	1					
ANR	76439	ElseStatement	else		74613	0					
ANR	76440	IfStatement	if ( parameters -> numresolution [ 2 ] == 1 )		74613	0					
ANR	76441	Condition	parameters -> numresolution [ 2 ] == 1	772:15:29741:29773	74613	0	True				
ANR	76442	EqualityExpression	parameters -> numresolution [ 2 ] == 1		74613	0		==			
ANR	76443	ArrayIndexing	parameters -> numresolution [ 2 ]		74613	0					
ANR	76444	PtrMemberAccess	parameters -> numresolution		74613	0					
ANR	76445	Identifier	parameters		74613	0					
ANR	76446	Identifier	numresolution		74613	1					
ANR	76447	PrimaryExpression	2		74613	1					
ANR	76448	PrimaryExpression	1		74613	1					
ANR	76449	CompoundStatement		501:50:18630:18630	74613	1					
ANR	76450	ExpressionStatement	parameters -> transform_format = TRF_2D_DWT	773:8:29786:29827	74613	0	True				
ANR	76451	AssignmentExpression	parameters -> transform_format = TRF_2D_DWT		74613	0		=			
ANR	76452	PtrMemberAccess	parameters -> transform_format		74613	0					
ANR	76453	Identifier	parameters		74613	0					
ANR	76454	Identifier	transform_format		74613	1					
ANR	76455	Identifier	TRF_2D_DWT		74613	1					
ANR	76456	IfStatement	if ( ( parameters -> cod_format == J2K_CFMT ) && ( parameters -> transform_format != TRF_2D_DWT || parameters -> encoding_format != ENCOD_2EB ) )		74613	14					
ANR	76457	Condition	( parameters -> cod_format == J2K_CFMT ) && ( parameters -> transform_format != TRF_2D_DWT || parameters -> encoding_format != ENCOD_2EB )	777:8:29954:30106	74613	0	True				
ANR	76458	AndExpression	( parameters -> cod_format == J2K_CFMT ) && ( parameters -> transform_format != TRF_2D_DWT || parameters -> encoding_format != ENCOD_2EB )		74613	0		&&			
ANR	76459	EqualityExpression	parameters -> cod_format == J2K_CFMT		74613	0		==			
ANR	76460	PtrMemberAccess	parameters -> cod_format		74613	0					
ANR	76461	Identifier	parameters		74613	0					
ANR	76462	Identifier	cod_format		74613	1					
ANR	76463	Identifier	J2K_CFMT		74613	1					
ANR	76464	OrExpression	parameters -> transform_format != TRF_2D_DWT || parameters -> encoding_format != ENCOD_2EB		74613	1		||			
ANR	76465	EqualityExpression	parameters -> transform_format != TRF_2D_DWT		74613	0		!=			
ANR	76466	PtrMemberAccess	parameters -> transform_format		74613	0					
ANR	76467	Identifier	parameters		74613	0					
ANR	76468	Identifier	transform_format		74613	1					
ANR	76469	Identifier	TRF_2D_DWT		74613	1					
ANR	76470	EqualityExpression	parameters -> encoding_format != ENCOD_2EB		74613	1		!=			
ANR	76471	PtrMemberAccess	parameters -> encoding_format		74613	0					
ANR	76472	Identifier	parameters		74613	0					
ANR	76473	Identifier	encoding_format		74613	1					
ANR	76474	Identifier	ENCOD_2EB		74613	1					
ANR	76475	CompoundStatement		508:56:18963:18963	74613	1					
ANR	76476	ExpressionStatement	"fprintf ( stdout , ""[WARNING] Incompatible options -o *.j2k and defined transform or encoding algorithm. Latter will be ignored\\n"" )"	780:8:30119:30263	74613	0	True				
ANR	76477	CallExpression	"fprintf ( stdout , ""[WARNING] Incompatible options -o *.j2k and defined transform or encoding algorithm. Latter will be ignored\\n"" )"		74613	0					
ANR	76478	Callee	fprintf		74613	0					
ANR	76479	Identifier	fprintf		74613	0					
ANR	76480	ArgumentList	stdout		74613	1					
ANR	76481	Argument	stdout		74613	0					
ANR	76482	Identifier	stdout		74613	0					
ANR	76483	Argument	"""[WARNING] Incompatible options -o *.j2k and defined transform or encoding algorithm. Latter will be ignored\\n"""		74613	1					
ANR	76484	PrimaryExpression	"""[WARNING] Incompatible options -o *.j2k and defined transform or encoding algorithm. Latter will be ignored\\n"""		74613	0					
ANR	76485	ExpressionStatement	parameters -> transform_format = TRF_2D_DWT	782:8:30273:30314	74613	1	True				
ANR	76486	AssignmentExpression	parameters -> transform_format = TRF_2D_DWT		74613	0		=			
ANR	76487	PtrMemberAccess	parameters -> transform_format		74613	0					
ANR	76488	Identifier	parameters		74613	0					
ANR	76489	Identifier	transform_format		74613	1					
ANR	76490	Identifier	TRF_2D_DWT		74613	1					
ANR	76491	ExpressionStatement	parameters -> encoding_format = ENCOD_2EB	783:8:30324:30363	74613	2	True				
ANR	76492	AssignmentExpression	parameters -> encoding_format = ENCOD_2EB		74613	0		=			
ANR	76493	PtrMemberAccess	parameters -> encoding_format		74613	0					
ANR	76494	Identifier	parameters		74613	0					
ANR	76495	Identifier	encoding_format		74613	1					
ANR	76496	Identifier	ENCOD_2EB		74613	1					
ANR	76497	IfStatement	if ( ( parameters -> cp_disto_alloc || parameters -> cp_fixed_alloc || parameters -> cp_fixed_quality ) && ( ! ( parameters -> cp_disto_alloc ^ parameters -> cp_fixed_quality ) ) )		74613	15					
ANR	76498	Condition	( parameters -> cp_disto_alloc || parameters -> cp_fixed_alloc || parameters -> cp_fixed_quality ) && ( ! ( parameters -> cp_disto_alloc ^ parameters -> cp_fixed_quality ) )	786:8:30380:30559	74613	0	True				
ANR	76499	AndExpression	( parameters -> cp_disto_alloc || parameters -> cp_fixed_alloc || parameters -> cp_fixed_quality ) && ( ! ( parameters -> cp_disto_alloc ^ parameters -> cp_fixed_quality ) )		74613	0		&&			
ANR	76500	OrExpression	parameters -> cp_disto_alloc || parameters -> cp_fixed_alloc || parameters -> cp_fixed_quality		74613	0		||			
ANR	76501	PtrMemberAccess	parameters -> cp_disto_alloc		74613	0					
ANR	76502	Identifier	parameters		74613	0					
ANR	76503	Identifier	cp_disto_alloc		74613	1					
ANR	76504	OrExpression	parameters -> cp_fixed_alloc || parameters -> cp_fixed_quality		74613	1		||			
ANR	76505	PtrMemberAccess	parameters -> cp_fixed_alloc		74613	0					
ANR	76506	Identifier	parameters		74613	0					
ANR	76507	Identifier	cp_fixed_alloc		74613	1					
ANR	76508	PtrMemberAccess	parameters -> cp_fixed_quality		74613	1					
ANR	76509	Identifier	parameters		74613	0					
ANR	76510	Identifier	cp_fixed_quality		74613	1					
ANR	76511	UnaryOperationExpression	! ( parameters -> cp_disto_alloc ^ parameters -> cp_fixed_quality )		74613	1					
ANR	76512	UnaryOperator	!		74613	0					
ANR	76513	ExclusiveOrExpression	parameters -> cp_disto_alloc ^ parameters -> cp_fixed_quality		74613	1		^			
ANR	76514	PtrMemberAccess	parameters -> cp_disto_alloc		74613	0					
ANR	76515	Identifier	parameters		74613	0					
ANR	76516	Identifier	cp_disto_alloc		74613	1					
ANR	76517	PtrMemberAccess	parameters -> cp_fixed_quality		74613	1					
ANR	76518	Identifier	parameters		74613	0					
ANR	76519	Identifier	cp_fixed_quality		74613	1					
ANR	76520	CompoundStatement		517:76:19416:19416	74613	1					
ANR	76521	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Options -r and -q cannot be used together !!\\n"" )"	789:8:30572:30645	74613	0	True				
ANR	76522	CallExpression	"fprintf ( stdout , ""[ERROR] Options -r and -q cannot be used together !!\\n"" )"		74613	0					
ANR	76523	Callee	fprintf		74613	0					
ANR	76524	Identifier	fprintf		74613	0					
ANR	76525	ArgumentList	stdout		74613	1					
ANR	76526	Argument	stdout		74613	0					
ANR	76527	Identifier	stdout		74613	0					
ANR	76528	Argument	"""[ERROR] Options -r and -q cannot be used together !!\\n"""		74613	1					
ANR	76529	PrimaryExpression	"""[ERROR] Options -r and -q cannot be used together !!\\n"""		74613	0					
ANR	76530	ReturnStatement	return 1 ;	790:8:30655:30663	74613	1	True				
ANR	76531	PrimaryExpression	1		74613	0					
ANR	76532	IfStatement	if ( parameters -> tcp_numlayers == 0 )		74613	16					
ANR	76533	Condition	parameters -> tcp_numlayers == 0	794:8:30768:30797	74613	0	True				
ANR	76534	EqualityExpression	parameters -> tcp_numlayers == 0		74613	0		==			
ANR	76535	PtrMemberAccess	parameters -> tcp_numlayers		74613	0					
ANR	76536	Identifier	parameters		74613	0					
ANR	76537	Identifier	tcp_numlayers		74613	1					
ANR	76538	PrimaryExpression	0		74613	1					
ANR	76539	CompoundStatement		523:40:19654:19654	74613	1					
ANR	76540	ExpressionStatement	parameters -> tcp_rates [ 0 ] = 0.0	795:8:30810:30840	74613	0	True				
ANR	76541	AssignmentExpression	parameters -> tcp_rates [ 0 ] = 0.0		74613	0		=			
ANR	76542	ArrayIndexing	parameters -> tcp_rates [ 0 ]		74613	0					
ANR	76543	PtrMemberAccess	parameters -> tcp_rates		74613	0					
ANR	76544	Identifier	parameters		74613	0					
ANR	76545	Identifier	tcp_rates		74613	1					
ANR	76546	PrimaryExpression	0		74613	1					
ANR	76547	PrimaryExpression	0.0		74613	1					
ANR	76548	ExpressionStatement	parameters -> tcp_numlayers ++	796:8:30882:30909	74613	1	True				
ANR	76549	PostIncDecOperationExpression	parameters -> tcp_numlayers ++		74613	0					
ANR	76550	PtrMemberAccess	parameters -> tcp_numlayers		74613	0					
ANR	76551	Identifier	parameters		74613	0					
ANR	76552	Identifier	tcp_numlayers		74613	1					
ANR	76553	IncDec	++		74613	1					
ANR	76554	ExpressionStatement	parameters -> cp_disto_alloc = 1	797:8:30919:30949	74613	2	True				
ANR	76555	AssignmentExpression	parameters -> cp_disto_alloc = 1		74613	0		=			
ANR	76556	PtrMemberAccess	parameters -> cp_disto_alloc		74613	0					
ANR	76557	Identifier	parameters		74613	0					
ANR	76558	Identifier	cp_disto_alloc		74613	1					
ANR	76559	PrimaryExpression	1		74613	1					
ANR	76560	IfStatement	if ( ( parameters -> cp_tx0 > parameters -> volume_offset_x0 ) || ( parameters -> cp_ty0 > parameters -> volume_offset_y0 ) || ( parameters -> cp_tz0 > parameters -> volume_offset_z0 ) )		74613	17					
ANR	76561	Condition	( parameters -> cp_tx0 > parameters -> volume_offset_x0 ) || ( parameters -> cp_ty0 > parameters -> volume_offset_y0 ) || ( parameters -> cp_tz0 > parameters -> volume_offset_z0 )	800:8:30966:31150	74613	0	True				
ANR	76562	OrExpression	( parameters -> cp_tx0 > parameters -> volume_offset_x0 ) || ( parameters -> cp_ty0 > parameters -> volume_offset_y0 ) || ( parameters -> cp_tz0 > parameters -> volume_offset_z0 )		74613	0		||			
ANR	76563	RelationalExpression	parameters -> cp_tx0 > parameters -> volume_offset_x0		74613	0		>			
ANR	76564	PtrMemberAccess	parameters -> cp_tx0		74613	0					
ANR	76565	Identifier	parameters		74613	0					
ANR	76566	Identifier	cp_tx0		74613	1					
ANR	76567	PtrMemberAccess	parameters -> volume_offset_x0		74613	1					
ANR	76568	Identifier	parameters		74613	0					
ANR	76569	Identifier	volume_offset_x0		74613	1					
ANR	76570	OrExpression	( parameters -> cp_ty0 > parameters -> volume_offset_y0 ) || ( parameters -> cp_tz0 > parameters -> volume_offset_z0 )		74613	1		||			
ANR	76571	RelationalExpression	parameters -> cp_ty0 > parameters -> volume_offset_y0		74613	0		>			
ANR	76572	PtrMemberAccess	parameters -> cp_ty0		74613	0					
ANR	76573	Identifier	parameters		74613	0					
ANR	76574	Identifier	cp_ty0		74613	1					
ANR	76575	PtrMemberAccess	parameters -> volume_offset_y0		74613	1					
ANR	76576	Identifier	parameters		74613	0					
ANR	76577	Identifier	volume_offset_y0		74613	1					
ANR	76578	RelationalExpression	parameters -> cp_tz0 > parameters -> volume_offset_z0		74613	1		>			
ANR	76579	PtrMemberAccess	parameters -> cp_tz0		74613	0					
ANR	76580	Identifier	parameters		74613	0					
ANR	76581	Identifier	cp_tz0		74613	1					
ANR	76582	PtrMemberAccess	parameters -> volume_offset_z0		74613	1					
ANR	76583	Identifier	parameters		74613	0					
ANR	76584	Identifier	volume_offset_z0		74613	1					
ANR	76585	CompoundStatement		531:65:20007:20007	74613	1					
ANR	76586	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Tile offset dimension is unnappropriate --> TX0(%d)<=IMG_X0(%d) TYO(%d)<=IMG_Y0(%d) TZO(%d)<=IMG_Z0(%d)\\n"" , parameters -> cp_tx0 , parameters -> volume_offset_x0 , parameters -> cp_ty0 , parameters -> volume_offset_y0 , parameters -> cp_tz0 , parameters -> volume_offset_z0 )"	803:8:31163:31509	74613	0	True				
ANR	76587	CallExpression	"fprintf ( stdout , ""[ERROR] Tile offset dimension is unnappropriate --> TX0(%d)<=IMG_X0(%d) TYO(%d)<=IMG_Y0(%d) TZO(%d)<=IMG_Z0(%d)\\n"" , parameters -> cp_tx0 , parameters -> volume_offset_x0 , parameters -> cp_ty0 , parameters -> volume_offset_y0 , parameters -> cp_tz0 , parameters -> volume_offset_z0 )"		74613	0					
ANR	76588	Callee	fprintf		74613	0					
ANR	76589	Identifier	fprintf		74613	0					
ANR	76590	ArgumentList	stdout		74613	1					
ANR	76591	Argument	stdout		74613	0					
ANR	76592	Identifier	stdout		74613	0					
ANR	76593	Argument	"""[ERROR] Tile offset dimension is unnappropriate --> TX0(%d)<=IMG_X0(%d) TYO(%d)<=IMG_Y0(%d) TZO(%d)<=IMG_Z0(%d)\\n"""		74613	1					
ANR	76594	PrimaryExpression	"""[ERROR] Tile offset dimension is unnappropriate --> TX0(%d)<=IMG_X0(%d) TYO(%d)<=IMG_Y0(%d) TZO(%d)<=IMG_Z0(%d)\\n"""		74613	0					
ANR	76595	Argument	parameters -> cp_tx0		74613	2					
ANR	76596	PtrMemberAccess	parameters -> cp_tx0		74613	0					
ANR	76597	Identifier	parameters		74613	0					
ANR	76598	Identifier	cp_tx0		74613	1					
ANR	76599	Argument	parameters -> volume_offset_x0		74613	3					
ANR	76600	PtrMemberAccess	parameters -> volume_offset_x0		74613	0					
ANR	76601	Identifier	parameters		74613	0					
ANR	76602	Identifier	volume_offset_x0		74613	1					
ANR	76603	Argument	parameters -> cp_ty0		74613	4					
ANR	76604	PtrMemberAccess	parameters -> cp_ty0		74613	0					
ANR	76605	Identifier	parameters		74613	0					
ANR	76606	Identifier	cp_ty0		74613	1					
ANR	76607	Argument	parameters -> volume_offset_y0		74613	5					
ANR	76608	PtrMemberAccess	parameters -> volume_offset_y0		74613	0					
ANR	76609	Identifier	parameters		74613	0					
ANR	76610	Identifier	volume_offset_y0		74613	1					
ANR	76611	Argument	parameters -> cp_tz0		74613	6					
ANR	76612	PtrMemberAccess	parameters -> cp_tz0		74613	0					
ANR	76613	Identifier	parameters		74613	0					
ANR	76614	Identifier	cp_tz0		74613	1					
ANR	76615	Argument	parameters -> volume_offset_z0		74613	7					
ANR	76616	PtrMemberAccess	parameters -> volume_offset_z0		74613	0					
ANR	76617	Identifier	parameters		74613	0					
ANR	76618	Identifier	volume_offset_z0		74613	1					
ANR	76619	ReturnStatement	return 1 ;	808:8:31519:31527	74613	1	True				
ANR	76620	PrimaryExpression	1		74613	0					
ANR	76621	ForStatement	for ( i = 0 ; i < parameters -> numpocs ; i ++ )		74613	18					
ANR	76622	ForInit	i = 0 ;	811:9:31545:31550	74613	0	True				
ANR	76623	AssignmentExpression	i = 0		74613	0		=			
ANR	76624	Identifier	i		74613	0					
ANR	76625	PrimaryExpression	0		74613	1					
ANR	76626	Condition	i < parameters -> numpocs	811:16:31552:31574	74613	1	True				
ANR	76627	RelationalExpression	i < parameters -> numpocs		74613	0		<			
ANR	76628	Identifier	i		74613	0					
ANR	76629	PtrMemberAccess	parameters -> numpocs		74613	1					
ANR	76630	Identifier	parameters		74613	0					
ANR	76631	Identifier	numpocs		74613	1					
ANR	76632	PostIncDecOperationExpression	i ++	811:41:31577:31579	74613	2	True				
ANR	76633	Identifier	i		74613	0					
ANR	76634	IncDec	++		74613	1					
ANR	76635	CompoundStatement		540:46:20436:20436	74613	3					
ANR	76636	IfStatement	if ( parameters -> POC [ i ] . prg == - 1 )		74613	0					
ANR	76637	Condition	parameters -> POC [ i ] . prg == - 1	812:12:31596:31623	74613	0	True				
ANR	76638	EqualityExpression	parameters -> POC [ i ] . prg == - 1		74613	0		==			
ANR	76639	MemberAccess	parameters -> POC [ i ] . prg		74613	0					
ANR	76640	ArrayIndexing	parameters -> POC [ i ]		74613	0					
ANR	76641	PtrMemberAccess	parameters -> POC		74613	0					
ANR	76642	Identifier	parameters		74613	0					
ANR	76643	Identifier	POC		74613	1					
ANR	76644	Identifier	i		74613	1					
ANR	76645	Identifier	prg		74613	1					
ANR	76646	UnaryOperationExpression	- 1		74613	1					
ANR	76647	UnaryOperator	-		74613	0					
ANR	76648	PrimaryExpression	1		74613	1					
ANR	76649	CompoundStatement		541:42:20480:20480	74613	1					
ANR	76650	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Unrecognized progression order in option -P (POC n %d) [LRCP, RLCP, RPCL, PCRL, CPRL] !!\\n"" , i + 1 )"	813:12:31640:31804	74613	0	True				
ANR	76651	CallExpression	"fprintf ( stdout , ""[ERROR] Unrecognized progression order in option -P (POC n %d) [LRCP, RLCP, RPCL, PCRL, CPRL] !!\\n"" , i + 1 )"		74613	0					
ANR	76652	Callee	fprintf		74613	0					
ANR	76653	Identifier	fprintf		74613	0					
ANR	76654	ArgumentList	stdout		74613	1					
ANR	76655	Argument	stdout		74613	0					
ANR	76656	Identifier	stdout		74613	0					
ANR	76657	Argument	"""[ERROR] Unrecognized progression order in option -P (POC n %d) [LRCP, RLCP, RPCL, PCRL, CPRL] !!\\n"""		74613	1					
ANR	76658	PrimaryExpression	"""[ERROR] Unrecognized progression order in option -P (POC n %d) [LRCP, RLCP, RPCL, PCRL, CPRL] !!\\n"""		74613	0					
ANR	76659	Argument	i + 1		74613	2					
ANR	76660	AdditiveExpression	i + 1		74613	0		+			
ANR	76661	Identifier	i		74613	0					
ANR	76662	PrimaryExpression	1		74613	1					
ANR	76663	ReturnStatement	return 0 ;	818:4:31826:31834	74613	19	True				
ANR	76664	PrimaryExpression	0		74613	0					
ANR	76665	ReturnType	int		74613	1					
ANR	76666	Identifier	parse_cmdline_encoder		74613	2					
ANR	76667	ParameterList	"int argc , char * * argv , opj_cparameters_t * parameters"		74613	3					
ANR	76668	Parameter	int argc	271:26:11091:11098	74613	0	True				
ANR	76669	ParameterType	int		74613	0					
ANR	76670	Identifier	argc		74613	1					
ANR	76671	Parameter	char * * argv	271:36:11101:11111	74613	1	True				
ANR	76672	ParameterType	char * *		74613	0					
ANR	76673	Identifier	argv		74613	1					
ANR	76674	Parameter	opj_cparameters_t * parameters	271:49:11114:11142	74613	2	True				
ANR	76675	ParameterType	opj_cparameters_t *		74613	0					
ANR	76676	Identifier	parameters		74613	1					
ANR	76677	CFGEntryNode	ENTRY		74613		True				
ANR	76678	CFGExitNode	EXIT		74613		True				
ANR	76679	Symbol	* * parameters		74613						
ANR	76680	Symbol	* parameters -> prct_init		74613						
ANR	76681	Symbol	& parameters -> volume_offset_z0		74613						
ANR	76682	Symbol	parameters -> cp_tz0		74613						
ANR	76683	Symbol	TRF_2D_DWT		74613						
ANR	76684	Symbol	cblockh_init		74613						
ANR	76685	Symbol	opj_getopt		74613						
ANR	76686	Symbol	parameters -> transform_format		74613						
ANR	76687	Symbol	parameters -> encoding_format		74613						
ANR	76688	Symbol	parameters -> tile_size_on		74613						
ANR	76689	Symbol	TRF_3D_DWT		74613						
ANR	76690	Symbol	* numpocs		74613						
ANR	76691	Symbol	ENCOD_2EB		74613						
ANR	76692	Symbol	& POC [ numpocs ] . tile		74613						
ANR	76693	Symbol	parameters -> volume_offset_z0		74613						
ANR	76694	Symbol	parameters -> tcp_numlayers		74613						
ANR	76695	Symbol	& POC [ numpocs ] . resno1		74613						
ANR	76696	Symbol	* parameters -> POC		74613						
ANR	76697	Symbol	& POC [ numpocs ] . resno0		74613						
ANR	76698	Symbol	parameters -> cp_ty0		74613						
ANR	76699	Symbol	cache		74613						
ANR	76700	Symbol	POC		74613						
ANR	76701	Symbol	POC [ numpocs ] . prg		74613						
ANR	76702	Symbol	opj_optarg		74613						
ANR	76703	Symbol	ENCOD_3GR		74613						
ANR	76704	Symbol	BIN_DFMT		74613						
ANR	76705	Symbol	index		74613						
ANR	76706	Symbol	parameters -> tcp_rates		74613						
ANR	76707	Symbol	parameters -> prct_init		74613						
ANR	76708	Symbol	parameters -> prog_order		74613						
ANR	76709	Symbol	res_spec		74613						
ANR	76710	Symbol	parameters -> index_on		74613						
ANR	76711	Symbol	sscanf		74613						
ANR	76712	Symbol	& parameters -> subsampling_dx		74613						
ANR	76713	Symbol	IMG_DFMT		74613						
ANR	76714	Symbol	parameters -> csty		74613						
ANR	76715	Symbol	parameters -> cod_format		74613						
ANR	76716	Symbol	& parameters -> volume_offset_x0		74613						
ANR	76717	Symbol	& sep		74613						
ANR	76718	Symbol	infile		74613						
ANR	76719	Symbol	parameters -> POC		74613						
ANR	76720	Symbol	coding		74613						
ANR	76721	Symbol	parameters -> POC [ i ] . prg		74613						
ANR	76722	Symbol	parameters -> res_spec		74613						
ANR	76723	Symbol	PGX_DFMT		74613						
ANR	76724	Symbol	parameters -> dcoffset		74613						
ANR	76725	Symbol	parameters -> cp_disto_alloc		74613						
ANR	76726	Symbol	sep		74613						
ANR	76727	Symbol	cblockl_init		74613						
ANR	76728	Symbol	parameters -> tcp_distoratio		74613						
ANR	76729	Symbol	* parameters -> imgfile		74613						
ANR	76730	Symbol	c		74613						
ANR	76731	Symbol	& parameters -> volume_offset_y0		74613						
ANR	76732	Symbol	& parameters -> roi_compno		74613						
ANR	76733	Symbol	& parameters -> roi_shift		74613						
ANR	76734	Symbol	ENCOD_2GR		74613						
ANR	76735	Symbol	get_file_format		74613						
ANR	76736	Symbol	& POC [ numpocs ] . compno1		74613						
ANR	76737	Symbol	give_coding		74613						
ANR	76738	Symbol	i		74613						
ANR	76739	Symbol	& POC [ numpocs ] . compno0		74613						
ANR	76740	Symbol	parameters -> numresolution		74613						
ANR	76741	Symbol	* POC		74613						
ANR	76742	Symbol	s		74613						
ANR	76743	Symbol	give_progression		74613						
ANR	76744	Symbol	parameters -> index		74613						
ANR	76745	Symbol	& cblockl_init		74613						
ANR	76746	Symbol	& parameters -> dcoffset		74613						
ANR	76747	Symbol	parameters -> irreversible		74613						
ANR	76748	Symbol	J2K_CFMT		74613						
ANR	76749	Symbol	& value		74613						
ANR	76750	Symbol	stdout		74613						
ANR	76751	Symbol	strpbrk		74613						
ANR	76752	Symbol	& parameters -> cp_tx0		74613						
ANR	76753	Symbol	parameters -> mode		74613						
ANR	76754	Symbol	imgformat		74613						
ANR	76755	Symbol	* parameters -> infile		74613						
ANR	76756	Symbol	J3D_CFMT		74613						
ANR	76757	Symbol	parameters -> imgfile		74613						
ANR	76758	Symbol	TRF_3D_LSE		74613						
ANR	76759	Symbol	& parameters -> cp_tdz		74613						
ANR	76760	Symbol	& parameters -> cp_tdy		74613						
ANR	76761	Symbol	& parameters -> cp_tdx		74613						
ANR	76762	Symbol	NULL		74613						
ANR	76763	Symbol	& cblockh_init		74613						
ANR	76764	Symbol	* parameters -> outfile		74613						
ANR	76765	Symbol	parameters -> cp_fixed_quality		74613						
ANR	76766	Symbol	* parameters		74613						
ANR	76767	Symbol	true		74613						
ANR	76768	Symbol	parameters		74613						
ANR	76769	Symbol	& parameters -> cp_tz0		74613						
ANR	76770	Symbol	parameters -> cp_tx0		74613						
ANR	76771	Symbol	aux		74613						
ANR	76772	Symbol	& parameters -> subsampling_dy		74613						
ANR	76773	Symbol	outfile		74613						
ANR	76774	Symbol	& parameters -> subsampling_dz		74613						
ANR	76775	Symbol	progression		74613						
ANR	76776	Symbol	parameters -> outfile		74613						
ANR	76777	Symbol	argv		74613						
ANR	76778	Symbol	* parameters -> numresolution		74613						
ANR	76779	Symbol	cblockw_init		74613						
ANR	76780	Symbol	parameters -> cp_fixed_alloc		74613						
ANR	76781	Symbol	parameters -> volume_offset_x0		74613						
ANR	76782	Symbol	TRF_3D_RLS		74613						
ANR	76783	Symbol	value		74613						
ANR	76784	Symbol	argc		74613						
ANR	76785	Symbol	& cblockw_init		74613						
ANR	76786	Symbol	POC [ numpocs ] . progorder		74613						
ANR	76787	Symbol	& POC [ numpocs ] . layno1		74613						
ANR	76788	Symbol	& parameters -> cp_ty0		74613						
ANR	76789	Symbol	ENCOD_3EB		74613						
ANR	76790	Symbol	parameters -> numpocs		74613						
ANR	76791	Symbol	parameters -> infile		74613						
ANR	76792	Symbol	parameters -> decod_format		74613						
ANR	76793	Symbol	* i		74613						
ANR	76794	Symbol	parameters -> cblock_init		74613						
ANR	76795	Symbol	imgfile		74613						
ANR	76796	Symbol	* parameters -> tcp_rates		74613						
ANR	76797	Symbol	parameters -> volume_offset_y0		74613						
ANR	76798	Symbol	* parameters -> cblock_init		74613						
ANR	76799	Symbol	MAX_PATH		74613						
ANR	76800	Symbol	numpocs		74613						
ANR	76801	Symbol	* s		74613						
ANR	76802	Function	error_callback	826:0:31982:32119							
ANR	76803	FunctionDef	"error_callback (const char * msg , void * client_data)"		76802	0					
ANR	76804	CompoundStatement		827:0:32038:32119	76802	0					
ANR	76805	IdentifierDeclStatement	FILE * stream = ( FILE * ) client_data ;	828:4:32044:32077	76802	0	True				
ANR	76806	IdentifierDecl	* stream = ( FILE * ) client_data		76802	0					
ANR	76807	IdentifierDeclType	FILE *		76802	0					
ANR	76808	Identifier	stream		76802	1					
ANR	76809	AssignmentExpression	* stream = ( FILE * ) client_data		76802	2		=			
ANR	76810	Identifier	stream		76802	0					
ANR	76811	CastExpression	( FILE * ) client_data		76802	1					
ANR	76812	CastTarget	FILE *		76802	0					
ANR	76813	Identifier	client_data		76802	1					
ANR	76814	ExpressionStatement	"fprintf ( stream , ""[ERROR] %s"" , msg )"	829:4:32083:32117	76802	1	True				
ANR	76815	CallExpression	"fprintf ( stream , ""[ERROR] %s"" , msg )"		76802	0					
ANR	76816	Callee	fprintf		76802	0					
ANR	76817	Identifier	fprintf		76802	0					
ANR	76818	ArgumentList	stream		76802	1					
ANR	76819	Argument	stream		76802	0					
ANR	76820	Identifier	stream		76802	0					
ANR	76821	Argument	"""[ERROR] %s"""		76802	1					
ANR	76822	PrimaryExpression	"""[ERROR] %s"""		76802	0					
ANR	76823	Argument	msg		76802	2					
ANR	76824	Identifier	msg		76802	0					
ANR	76825	ReturnType	void		76802	1					
ANR	76826	Identifier	error_callback		76802	2					
ANR	76827	ParameterList	"const char * msg , void * client_data"		76802	3					
ANR	76828	Parameter	const char * msg	826:20:32002:32016	76802	0	True				
ANR	76829	ParameterType	const char *		76802	0					
ANR	76830	Identifier	msg		76802	1					
ANR	76831	Parameter	void * client_data	826:37:32019:32035	76802	1	True				
ANR	76832	ParameterType	void *		76802	0					
ANR	76833	Identifier	client_data		76802	1					
ANR	76834	CFGEntryNode	ENTRY		76802		True				
ANR	76835	CFGExitNode	EXIT		76802		True				
ANR	76836	Symbol	msg		76802						
ANR	76837	Symbol	client_data		76802						
ANR	76838	Symbol	stream		76802						
ANR	76839	Function	warning_callback	834:0:32184:32325							
ANR	76840	FunctionDef	"warning_callback (const char * msg , void * client_data)"		76839	0					
ANR	76841	CompoundStatement		835:0:32242:32325	76839	0					
ANR	76842	IdentifierDeclStatement	FILE * stream = ( FILE * ) client_data ;	836:4:32248:32281	76839	0	True				
ANR	76843	IdentifierDecl	* stream = ( FILE * ) client_data		76839	0					
ANR	76844	IdentifierDeclType	FILE *		76839	0					
ANR	76845	Identifier	stream		76839	1					
ANR	76846	AssignmentExpression	* stream = ( FILE * ) client_data		76839	2		=			
ANR	76847	Identifier	stream		76839	0					
ANR	76848	CastExpression	( FILE * ) client_data		76839	1					
ANR	76849	CastTarget	FILE *		76839	0					
ANR	76850	Identifier	client_data		76839	1					
ANR	76851	ExpressionStatement	"fprintf ( stream , ""[WARNING] %s"" , msg )"	837:4:32287:32323	76839	1	True				
ANR	76852	CallExpression	"fprintf ( stream , ""[WARNING] %s"" , msg )"		76839	0					
ANR	76853	Callee	fprintf		76839	0					
ANR	76854	Identifier	fprintf		76839	0					
ANR	76855	ArgumentList	stream		76839	1					
ANR	76856	Argument	stream		76839	0					
ANR	76857	Identifier	stream		76839	0					
ANR	76858	Argument	"""[WARNING] %s"""		76839	1					
ANR	76859	PrimaryExpression	"""[WARNING] %s"""		76839	0					
ANR	76860	Argument	msg		76839	2					
ANR	76861	Identifier	msg		76839	0					
ANR	76862	ReturnType	void		76839	1					
ANR	76863	Identifier	warning_callback		76839	2					
ANR	76864	ParameterList	"const char * msg , void * client_data"		76839	3					
ANR	76865	Parameter	const char * msg	834:22:32206:32220	76839	0	True				
ANR	76866	ParameterType	const char *		76839	0					
ANR	76867	Identifier	msg		76839	1					
ANR	76868	Parameter	void * client_data	834:39:32223:32239	76839	1	True				
ANR	76869	ParameterType	void *		76839	0					
ANR	76870	Identifier	client_data		76839	1					
ANR	76871	CFGEntryNode	ENTRY		76839		True				
ANR	76872	CFGExitNode	EXIT		76839		True				
ANR	76873	Symbol	msg		76839						
ANR	76874	Symbol	client_data		76839						
ANR	76875	Symbol	stream		76839						
ANR	76876	Function	info_callback	842:0:32388:32523							
ANR	76877	FunctionDef	"info_callback (const char * msg , void * client_data)"		76876	0					
ANR	76878	CompoundStatement		843:0:32443:32523	76876	0					
ANR	76879	IdentifierDeclStatement	FILE * stream = ( FILE * ) client_data ;	844:4:32449:32482	76876	0	True				
ANR	76880	IdentifierDecl	* stream = ( FILE * ) client_data		76876	0					
ANR	76881	IdentifierDeclType	FILE *		76876	0					
ANR	76882	Identifier	stream		76876	1					
ANR	76883	AssignmentExpression	* stream = ( FILE * ) client_data		76876	2		=			
ANR	76884	Identifier	stream		76876	0					
ANR	76885	CastExpression	( FILE * ) client_data		76876	1					
ANR	76886	CastTarget	FILE *		76876	0					
ANR	76887	Identifier	client_data		76876	1					
ANR	76888	ExpressionStatement	"fprintf ( stream , ""[INFO] %s"" , msg )"	845:4:32488:32521	76876	1	True				
ANR	76889	CallExpression	"fprintf ( stream , ""[INFO] %s"" , msg )"		76876	0					
ANR	76890	Callee	fprintf		76876	0					
ANR	76891	Identifier	fprintf		76876	0					
ANR	76892	ArgumentList	stream		76876	1					
ANR	76893	Argument	stream		76876	0					
ANR	76894	Identifier	stream		76876	0					
ANR	76895	Argument	"""[INFO] %s"""		76876	1					
ANR	76896	PrimaryExpression	"""[INFO] %s"""		76876	0					
ANR	76897	Argument	msg		76876	2					
ANR	76898	Identifier	msg		76876	0					
ANR	76899	ReturnType	void		76876	1					
ANR	76900	Identifier	info_callback		76876	2					
ANR	76901	ParameterList	"const char * msg , void * client_data"		76876	3					
ANR	76902	Parameter	const char * msg	842:19:32407:32421	76876	0	True				
ANR	76903	ParameterType	const char *		76876	0					
ANR	76904	Identifier	msg		76876	1					
ANR	76905	Parameter	void * client_data	842:36:32424:32440	76876	1	True				
ANR	76906	ParameterType	void *		76876	0					
ANR	76907	Identifier	client_data		76876	1					
ANR	76908	CFGEntryNode	ENTRY		76876		True				
ANR	76909	CFGExitNode	EXIT		76876		True				
ANR	76910	Symbol	msg		76876						
ANR	76911	Symbol	client_data		76876						
ANR	76912	Symbol	stream		76876						
ANR	76913	Function	main	850:0:32608:37515							
ANR	76914	FunctionDef	"main (int argc , char * * argv)"		76913	0					
ANR	76915	CompoundStatement		851:0:32640:37515	76913	0					
ANR	76916	IdentifierDeclStatement	bool bSuccess ;	852:4:32646:32659	76913	0	True				
ANR	76917	IdentifierDecl	bSuccess		76913	0					
ANR	76918	IdentifierDeclType	bool		76913	0					
ANR	76919	Identifier	bSuccess		76913	1					
ANR	76920	IdentifierDeclStatement	bool delete_comment = true ;	853:4:32665:32691	76913	1	True				
ANR	76921	IdentifierDecl	delete_comment = true		76913	0					
ANR	76922	IdentifierDeclType	bool		76913	0					
ANR	76923	Identifier	delete_comment		76913	1					
ANR	76924	AssignmentExpression	delete_comment = true		76913	2		=			
ANR	76925	Identifier	true		76913	0					
ANR	76926	Identifier	true		76913	1					
ANR	76927	IdentifierDeclStatement	opj_cparameters_t parameters ;	854:4:32697:32725	76913	2	True				
ANR	76928	IdentifierDecl	parameters		76913	0					
ANR	76929	IdentifierDeclType	opj_cparameters_t		76913	0					
ANR	76930	Identifier	parameters		76913	1					
ANR	76931	IdentifierDeclStatement	opj_event_mgr_t event_mgr ;	855:4:32762:32787	76913	3	True				
ANR	76932	IdentifierDecl	event_mgr		76913	0					
ANR	76933	IdentifierDeclType	opj_event_mgr_t		76913	0					
ANR	76934	Identifier	event_mgr		76913	1					
ANR	76935	IdentifierDeclStatement	opj_volume_t * volume = NULL ;	856:4:32818:32845	76913	4	True				
ANR	76936	IdentifierDecl	* volume = NULL		76913	0					
ANR	76937	IdentifierDeclType	opj_volume_t *		76913	0					
ANR	76938	Identifier	volume		76913	1					
ANR	76939	AssignmentExpression	* volume = NULL		76913	2		=			
ANR	76940	Identifier	NULL		76913	0					
ANR	76941	Identifier	NULL		76913	1					
ANR	76942	ExpressionStatement	"memset ( & event_mgr , 0 , sizeof ( opj_event_mgr_t ) )"	862:4:32956:33002	76913	5	True				
ANR	76943	CallExpression	"memset ( & event_mgr , 0 , sizeof ( opj_event_mgr_t ) )"		76913	0					
ANR	76944	Callee	memset		76913	0					
ANR	76945	Identifier	memset		76913	0					
ANR	76946	ArgumentList	& event_mgr		76913	1					
ANR	76947	Argument	& event_mgr		76913	0					
ANR	76948	UnaryOperationExpression	& event_mgr		76913	0					
ANR	76949	UnaryOperator	&		76913	0					
ANR	76950	Identifier	event_mgr		76913	1					
ANR	76951	Argument	0		76913	1					
ANR	76952	PrimaryExpression	0		76913	0					
ANR	76953	Argument	sizeof ( opj_event_mgr_t )		76913	2					
ANR	76954	SizeofExpression	sizeof ( opj_event_mgr_t )		76913	0					
ANR	76955	Sizeof	sizeof		76913	0					
ANR	76956	SizeofOperand	opj_event_mgr_t		76913	1					
ANR	76957	ExpressionStatement	event_mgr . error_handler = error_callback	863:4:33008:33048	76913	6	True				
ANR	76958	AssignmentExpression	event_mgr . error_handler = error_callback		76913	0		=			
ANR	76959	MemberAccess	event_mgr . error_handler		76913	0					
ANR	76960	Identifier	event_mgr		76913	0					
ANR	76961	Identifier	error_handler		76913	1					
ANR	76962	Identifier	error_callback		76913	1					
ANR	76963	ExpressionStatement	event_mgr . warning_handler = warning_callback	864:4:33054:33098	76913	7	True				
ANR	76964	AssignmentExpression	event_mgr . warning_handler = warning_callback		76913	0		=			
ANR	76965	MemberAccess	event_mgr . warning_handler		76913	0					
ANR	76966	Identifier	event_mgr		76913	0					
ANR	76967	Identifier	warning_handler		76913	1					
ANR	76968	Identifier	warning_callback		76913	1					
ANR	76969	ExpressionStatement	event_mgr . info_handler = info_callback	865:4:33104:33142	76913	8	True				
ANR	76970	AssignmentExpression	event_mgr . info_handler = info_callback		76913	0		=			
ANR	76971	MemberAccess	event_mgr . info_handler		76913	0					
ANR	76972	Identifier	event_mgr		76913	0					
ANR	76973	Identifier	info_handler		76913	1					
ANR	76974	Identifier	info_callback		76913	1					
ANR	76975	ExpressionStatement	opj_set_default_encoder_parameters ( & parameters )	868:4:33201:33248	76913	9	True				
ANR	76976	CallExpression	opj_set_default_encoder_parameters ( & parameters )		76913	0					
ANR	76977	Callee	opj_set_default_encoder_parameters		76913	0					
ANR	76978	Identifier	opj_set_default_encoder_parameters		76913	0					
ANR	76979	ArgumentList	& parameters		76913	1					
ANR	76980	Argument	& parameters		76913	0					
ANR	76981	UnaryOperationExpression	& parameters		76913	0					
ANR	76982	UnaryOperator	&		76913	0					
ANR	76983	Identifier	parameters		76913	1					
ANR	76984	IfStatement	"if ( parse_cmdline_encoder ( argc , argv , & parameters ) == 1 )"		76913	10					
ANR	76985	Condition	"parse_cmdline_encoder ( argc , argv , & parameters ) == 1"	871:8:33314:33364	76913	0	True				
ANR	76986	EqualityExpression	"parse_cmdline_encoder ( argc , argv , & parameters ) == 1"		76913	0		==			
ANR	76987	CallExpression	"parse_cmdline_encoder ( argc , argv , & parameters )"		76913	0					
ANR	76988	Callee	parse_cmdline_encoder		76913	0					
ANR	76989	Identifier	parse_cmdline_encoder		76913	0					
ANR	76990	ArgumentList	argc		76913	1					
ANR	76991	Argument	argc		76913	0					
ANR	76992	Identifier	argc		76913	0					
ANR	76993	Argument	argv		76913	1					
ANR	76994	Identifier	argv		76913	0					
ANR	76995	Argument	& parameters		76913	2					
ANR	76996	UnaryOperationExpression	& parameters		76913	0					
ANR	76997	UnaryOperator	&		76913	0					
ANR	76998	Identifier	parameters		76913	1					
ANR	76999	PrimaryExpression	1		76913	1					
ANR	77000	CompoundStatement		21:61:726:726	76913	1					
ANR	77001	ReturnStatement	return 0 ;	872:8:33377:33385	76913	0	True				
ANR	77002	PrimaryExpression	0		76913	0					
ANR	77003	IfStatement	if ( parameters . cp_comment == NULL )		76913	11					
ANR	77004	Condition	parameters . cp_comment == NULL	875:8:33402:33430	76913	0	True				
ANR	77005	EqualityExpression	parameters . cp_comment == NULL		76913	0		==			
ANR	77006	MemberAccess	parameters . cp_comment		76913	0					
ANR	77007	Identifier	parameters		76913	0					
ANR	77008	Identifier	cp_comment		76913	1					
ANR	77009	Identifier	NULL		76913	1					
ANR	77010	CompoundStatement		25:39:792:792	76913	1					
ANR	77011	ExpressionStatement	"parameters . cp_comment = ""Created by OpenJPEG version JP3D"""	876:8:33443:33501	76913	0	True				
ANR	77012	AssignmentExpression	"parameters . cp_comment = ""Created by OpenJPEG version JP3D"""		76913	0		=			
ANR	77013	MemberAccess	parameters . cp_comment		76913	0					
ANR	77014	Identifier	parameters		76913	0					
ANR	77015	Identifier	cp_comment		76913	1					
ANR	77016	PrimaryExpression	"""Created by OpenJPEG version JP3D"""		76913	1					
ANR	77017	ExpressionStatement	delete_comment = false	878:8:33573:33595	76913	1	True				
ANR	77018	AssignmentExpression	delete_comment = false		76913	0		=			
ANR	77019	Identifier	delete_comment		76913	0					
ANR	77020	Identifier	false		76913	1					
ANR	77021	IfStatement	if ( parameters . cod_format == J3D_CFMT || parameters . cod_format == J2K_CFMT )		76913	12					
ANR	77022	Condition	parameters . cod_format == J3D_CFMT || parameters . cod_format == J2K_CFMT	883:8:33691:33760	76913	0	True				
ANR	77023	OrExpression	parameters . cod_format == J3D_CFMT || parameters . cod_format == J2K_CFMT		76913	0		||			
ANR	77024	EqualityExpression	parameters . cod_format == J3D_CFMT		76913	0		==			
ANR	77025	MemberAccess	parameters . cod_format		76913	0					
ANR	77026	Identifier	parameters		76913	0					
ANR	77027	Identifier	cod_format		76913	1					
ANR	77028	Identifier	J3D_CFMT		76913	1					
ANR	77029	EqualityExpression	parameters . cod_format == J2K_CFMT		76913	1		==			
ANR	77030	MemberAccess	parameters . cod_format		76913	0					
ANR	77031	Identifier	parameters		76913	0					
ANR	77032	Identifier	cod_format		76913	1					
ANR	77033	Identifier	J2K_CFMT		76913	1					
ANR	77034	CompoundStatement		37:8:1234:1259	76913	1					
ANR	77035	IdentifierDeclStatement	"int codestream_length , pixels , bitsin ;"	884:8:33773:33810	76913	0	True				
ANR	77036	IdentifierDecl	codestream_length		76913	0					
ANR	77037	IdentifierDeclType	int		76913	0					
ANR	77038	Identifier	codestream_length		76913	1					
ANR	77039	IdentifierDecl	pixels		76913	1					
ANR	77040	IdentifierDeclType	int		76913	0					
ANR	77041	Identifier	pixels		76913	1					
ANR	77042	IdentifierDecl	bitsin		76913	2					
ANR	77043	IdentifierDeclType	int		76913	0					
ANR	77044	Identifier	bitsin		76913	1					
ANR	77045	IdentifierDeclStatement	opj_cio_t * cio = NULL ;	885:8:33820:33841	76913	1	True				
ANR	77046	IdentifierDecl	* cio = NULL		76913	0					
ANR	77047	IdentifierDeclType	opj_cio_t *		76913	0					
ANR	77048	Identifier	cio		76913	1					
ANR	77049	AssignmentExpression	* cio = NULL		76913	2		=			
ANR	77050	Identifier	NULL		76913	0					
ANR	77051	Identifier	NULL		76913	1					
ANR	77052	IdentifierDeclStatement	FILE * f = NULL ;	886:8:33851:33865	76913	2	True				
ANR	77053	IdentifierDecl	* f = NULL		76913	0					
ANR	77054	IdentifierDeclType	FILE *		76913	0					
ANR	77055	Identifier	f		76913	1					
ANR	77056	AssignmentExpression	* f = NULL		76913	2		=			
ANR	77057	Identifier	NULL		76913	0					
ANR	77058	Identifier	NULL		76913	1					
ANR	77059	IdentifierDeclStatement	opj_cinfo_t * cinfo = NULL ;	887:8:33875:33900	76913	3	True				
ANR	77060	IdentifierDecl	* cinfo = NULL		76913	0					
ANR	77061	IdentifierDeclType	opj_cinfo_t *		76913	0					
ANR	77062	Identifier	cinfo		76913	1					
ANR	77063	AssignmentExpression	* cinfo = NULL		76913	2		=			
ANR	77064	Identifier	NULL		76913	0					
ANR	77065	Identifier	NULL		76913	1					
ANR	77066	SwitchStatement	switch ( parameters . decod_format )		76913	4					
ANR	77067	Condition	parameters . decod_format	891:16:33996:34018	76913	0	True				
ANR	77068	MemberAccess	parameters . decod_format		76913	0					
ANR	77069	Identifier	parameters		76913	0					
ANR	77070	Identifier	decod_format		76913	1					
ANR	77071	CompoundStatement		41:41:1380:1380	76913	1					
ANR	77072	Label	case PGX_DFMT :	892:8:34031:34044	76913	0	True				
ANR	77073	Identifier	PGX_DFMT		76913	0					
ANR	77074	ExpressionStatement	"fprintf ( stdout , ""[INFO] Loading pgx file(s)\\n"" )"	893:12:34058:34105	76913	1	True				
ANR	77075	CallExpression	"fprintf ( stdout , ""[INFO] Loading pgx file(s)\\n"" )"		76913	0					
ANR	77076	Callee	fprintf		76913	0					
ANR	77077	Identifier	fprintf		76913	0					
ANR	77078	ArgumentList	stdout		76913	1					
ANR	77079	Argument	stdout		76913	0					
ANR	77080	Identifier	stdout		76913	0					
ANR	77081	Argument	"""[INFO] Loading pgx file(s)\\n"""		76913	1					
ANR	77082	PrimaryExpression	"""[INFO] Loading pgx file(s)\\n"""		76913	0					
ANR	77083	ExpressionStatement	"volume = pgxtovolume ( parameters . infile , & parameters )"	894:12:34119:34171	76913	2	True				
ANR	77084	AssignmentExpression	"volume = pgxtovolume ( parameters . infile , & parameters )"		76913	0		=			
ANR	77085	Identifier	volume		76913	0					
ANR	77086	CallExpression	"pgxtovolume ( parameters . infile , & parameters )"		76913	1					
ANR	77087	Callee	pgxtovolume		76913	0					
ANR	77088	Identifier	pgxtovolume		76913	0					
ANR	77089	ArgumentList	parameters . infile		76913	1					
ANR	77090	Argument	parameters . infile		76913	0					
ANR	77091	MemberAccess	parameters . infile		76913	0					
ANR	77092	Identifier	parameters		76913	0					
ANR	77093	Identifier	infile		76913	1					
ANR	77094	Argument	& parameters		76913	1					
ANR	77095	UnaryOperationExpression	& parameters		76913	0					
ANR	77096	UnaryOperator	&		76913	0					
ANR	77097	Identifier	parameters		76913	1					
ANR	77098	IfStatement	if ( ! volume )		76913	3					
ANR	77099	Condition	! volume	895:16:34189:34195	76913	0	True				
ANR	77100	UnaryOperationExpression	! volume		76913	0					
ANR	77101	UnaryOperator	!		76913	0					
ANR	77102	Identifier	volume		76913	1					
ANR	77103	CompoundStatement		45:25:1557:1557	76913	1					
ANR	77104	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Unable to load pgx files\\n"" )"	896:16:34216:34269	76913	0	True				
ANR	77105	CallExpression	"fprintf ( stdout , ""[ERROR] Unable to load pgx files\\n"" )"		76913	0					
ANR	77106	Callee	fprintf		76913	0					
ANR	77107	Identifier	fprintf		76913	0					
ANR	77108	ArgumentList	stdout		76913	1					
ANR	77109	Argument	stdout		76913	0					
ANR	77110	Identifier	stdout		76913	0					
ANR	77111	Argument	"""[ERROR] Unable to load pgx files\\n"""		76913	1					
ANR	77112	PrimaryExpression	"""[ERROR] Unable to load pgx files\\n"""		76913	0					
ANR	77113	ReturnStatement	return 1 ;	897:16:34287:34295	76913	1	True				
ANR	77114	PrimaryExpression	1		76913	0					
ANR	77115	BreakStatement	break ;	899:12:34323:34328	76913	4	True				
ANR	77116	Label	case BIN_DFMT :	901:8:34339:34352	76913	5	True				
ANR	77117	Identifier	BIN_DFMT		76913	0					
ANR	77118	ExpressionStatement	"fprintf ( stdout , ""[INFO] Loading bin file\\n"" )"	902:12:34366:34410	76913	6	True				
ANR	77119	CallExpression	"fprintf ( stdout , ""[INFO] Loading bin file\\n"" )"		76913	0					
ANR	77120	Callee	fprintf		76913	0					
ANR	77121	Identifier	fprintf		76913	0					
ANR	77122	ArgumentList	stdout		76913	1					
ANR	77123	Argument	stdout		76913	0					
ANR	77124	Identifier	stdout		76913	0					
ANR	77125	Argument	"""[INFO] Loading bin file\\n"""		76913	1					
ANR	77126	PrimaryExpression	"""[INFO] Loading bin file\\n"""		76913	0					
ANR	77127	ExpressionStatement	"volume = bintovolume ( parameters . infile , parameters . imgfile , & parameters )"	903:12:34424:34496	76913	7	True				
ANR	77128	AssignmentExpression	"volume = bintovolume ( parameters . infile , parameters . imgfile , & parameters )"		76913	0		=			
ANR	77129	Identifier	volume		76913	0					
ANR	77130	CallExpression	"bintovolume ( parameters . infile , parameters . imgfile , & parameters )"		76913	1					
ANR	77131	Callee	bintovolume		76913	0					
ANR	77132	Identifier	bintovolume		76913	0					
ANR	77133	ArgumentList	parameters . infile		76913	1					
ANR	77134	Argument	parameters . infile		76913	0					
ANR	77135	MemberAccess	parameters . infile		76913	0					
ANR	77136	Identifier	parameters		76913	0					
ANR	77137	Identifier	infile		76913	1					
ANR	77138	Argument	parameters . imgfile		76913	1					
ANR	77139	MemberAccess	parameters . imgfile		76913	0					
ANR	77140	Identifier	parameters		76913	0					
ANR	77141	Identifier	imgfile		76913	1					
ANR	77142	Argument	& parameters		76913	2					
ANR	77143	UnaryOperationExpression	& parameters		76913	0					
ANR	77144	UnaryOperator	&		76913	0					
ANR	77145	Identifier	parameters		76913	1					
ANR	77146	IfStatement	if ( ! volume )		76913	8					
ANR	77147	Condition	! volume	904:16:34514:34520	76913	0	True				
ANR	77148	UnaryOperationExpression	! volume		76913	0					
ANR	77149	UnaryOperator	!		76913	0					
ANR	77150	Identifier	volume		76913	1					
ANR	77151	CompoundStatement		54:25:1882:1882	76913	1					
ANR	77152	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Unable to load bin file\\n"" )"	905:16:34541:34593	76913	0	True				
ANR	77153	CallExpression	"fprintf ( stdout , ""[ERROR] Unable to load bin file\\n"" )"		76913	0					
ANR	77154	Callee	fprintf		76913	0					
ANR	77155	Identifier	fprintf		76913	0					
ANR	77156	ArgumentList	stdout		76913	1					
ANR	77157	Argument	stdout		76913	0					
ANR	77158	Identifier	stdout		76913	0					
ANR	77159	Argument	"""[ERROR] Unable to load bin file\\n"""		76913	1					
ANR	77160	PrimaryExpression	"""[ERROR] Unable to load bin file\\n"""		76913	0					
ANR	77161	ReturnStatement	return 1 ;	906:16:34611:34619	76913	1	True				
ANR	77162	PrimaryExpression	1		76913	0					
ANR	77163	BreakStatement	break ;	908:12:34647:34652	76913	9	True				
ANR	77164	Label	case IMG_DFMT :	910:8:34663:34676	76913	10	True				
ANR	77165	Identifier	IMG_DFMT		76913	0					
ANR	77166	ExpressionStatement	"fprintf ( stdout , ""[INFO] Loading img file\\n"" )"	911:12:34690:34734	76913	11	True				
ANR	77167	CallExpression	"fprintf ( stdout , ""[INFO] Loading img file\\n"" )"		76913	0					
ANR	77168	Callee	fprintf		76913	0					
ANR	77169	Identifier	fprintf		76913	0					
ANR	77170	ArgumentList	stdout		76913	1					
ANR	77171	Argument	stdout		76913	0					
ANR	77172	Identifier	stdout		76913	0					
ANR	77173	Argument	"""[INFO] Loading img file\\n"""		76913	1					
ANR	77174	PrimaryExpression	"""[INFO] Loading img file\\n"""		76913	0					
ANR	77175	ExpressionStatement	"volume = imgtovolume ( parameters . infile , & parameters )"	912:12:34748:34800	76913	12	True				
ANR	77176	AssignmentExpression	"volume = imgtovolume ( parameters . infile , & parameters )"		76913	0		=			
ANR	77177	Identifier	volume		76913	0					
ANR	77178	CallExpression	"imgtovolume ( parameters . infile , & parameters )"		76913	1					
ANR	77179	Callee	imgtovolume		76913	0					
ANR	77180	Identifier	imgtovolume		76913	0					
ANR	77181	ArgumentList	parameters . infile		76913	1					
ANR	77182	Argument	parameters . infile		76913	0					
ANR	77183	MemberAccess	parameters . infile		76913	0					
ANR	77184	Identifier	parameters		76913	0					
ANR	77185	Identifier	infile		76913	1					
ANR	77186	Argument	& parameters		76913	1					
ANR	77187	UnaryOperationExpression	& parameters		76913	0					
ANR	77188	UnaryOperator	&		76913	0					
ANR	77189	Identifier	parameters		76913	1					
ANR	77190	IfStatement	if ( ! volume )		76913	13					
ANR	77191	Condition	! volume	913:16:34818:34824	76913	0	True				
ANR	77192	UnaryOperationExpression	! volume		76913	0					
ANR	77193	UnaryOperator	!		76913	0					
ANR	77194	Identifier	volume		76913	1					
ANR	77195	CompoundStatement		63:25:2186:2186	76913	1					
ANR	77196	ExpressionStatement	"fprintf ( stderr , ""[ERROR] Unable to load img file\\n"" )"	914:16:34845:34897	76913	0	True				
ANR	77197	CallExpression	"fprintf ( stderr , ""[ERROR] Unable to load img file\\n"" )"		76913	0					
ANR	77198	Callee	fprintf		76913	0					
ANR	77199	Identifier	fprintf		76913	0					
ANR	77200	ArgumentList	stderr		76913	1					
ANR	77201	Argument	stderr		76913	0					
ANR	77202	Identifier	stderr		76913	0					
ANR	77203	Argument	"""[ERROR] Unable to load img file\\n"""		76913	1					
ANR	77204	PrimaryExpression	"""[ERROR] Unable to load img file\\n"""		76913	0					
ANR	77205	ReturnStatement	return 1 ;	915:16:34915:34923	76913	1	True				
ANR	77206	PrimaryExpression	1		76913	0					
ANR	77207	BreakStatement	break ;	917:12:34951:34956	76913	14	True				
ANR	77208	IfStatement	if ( parameters . cod_format == J3D_CFMT )		76913	5					
ANR	77209	Condition	parameters . cod_format == J3D_CFMT	921:12:35031:35063	76913	0	True				
ANR	77210	EqualityExpression	parameters . cod_format == J3D_CFMT		76913	0		==			
ANR	77211	MemberAccess	parameters . cod_format		76913	0					
ANR	77212	Identifier	parameters		76913	0					
ANR	77213	Identifier	cod_format		76913	1					
ANR	77214	Identifier	J3D_CFMT		76913	1					
ANR	77215	CompoundStatement		71:47:2425:2425	76913	1					
ANR	77216	ExpressionStatement	cinfo = opj_create_compress ( CODEC_J3D )	922:12:35080:35118	76913	0	True				
ANR	77217	AssignmentExpression	cinfo = opj_create_compress ( CODEC_J3D )		76913	0		=			
ANR	77218	Identifier	cinfo		76913	0					
ANR	77219	CallExpression	opj_create_compress ( CODEC_J3D )		76913	1					
ANR	77220	Callee	opj_create_compress		76913	0					
ANR	77221	Identifier	opj_create_compress		76913	0					
ANR	77222	ArgumentList	CODEC_J3D		76913	1					
ANR	77223	Argument	CODEC_J3D		76913	0					
ANR	77224	Identifier	CODEC_J3D		76913	0					
ANR	77225	ElseStatement	else		76913	0					
ANR	77226	IfStatement	if ( parameters . cod_format == J2K_CFMT )		76913	0					
ANR	77227	Condition	parameters . cod_format == J2K_CFMT	923:19:35139:35171	76913	0	True				
ANR	77228	EqualityExpression	parameters . cod_format == J2K_CFMT		76913	0		==			
ANR	77229	MemberAccess	parameters . cod_format		76913	0					
ANR	77230	Identifier	parameters		76913	0					
ANR	77231	Identifier	cod_format		76913	1					
ANR	77232	Identifier	J2K_CFMT		76913	1					
ANR	77233	CompoundStatement		73:54:2533:2533	76913	1					
ANR	77234	ExpressionStatement	cinfo = opj_create_compress ( CODEC_J2K )	924:12:35188:35226	76913	0	True				
ANR	77235	AssignmentExpression	cinfo = opj_create_compress ( CODEC_J2K )		76913	0		=			
ANR	77236	Identifier	cinfo		76913	0					
ANR	77237	CallExpression	opj_create_compress ( CODEC_J2K )		76913	1					
ANR	77238	Callee	opj_create_compress		76913	0					
ANR	77239	Identifier	opj_create_compress		76913	0					
ANR	77240	ArgumentList	CODEC_J2K		76913	1					
ANR	77241	Argument	CODEC_J2K		76913	0					
ANR	77242	Identifier	CODEC_J2K		76913	0					
ANR	77243	ExpressionStatement	"opj_set_event_mgr ( ( opj_common_ptr ) cinfo , & event_mgr , stdout )"	928:8:35319:35379	76913	6	True				
ANR	77244	CallExpression	"opj_set_event_mgr ( ( opj_common_ptr ) cinfo , & event_mgr , stdout )"		76913	0					
ANR	77245	Callee	opj_set_event_mgr		76913	0					
ANR	77246	Identifier	opj_set_event_mgr		76913	0					
ANR	77247	ArgumentList	( opj_common_ptr ) cinfo		76913	1					
ANR	77248	Argument	( opj_common_ptr ) cinfo		76913	0					
ANR	77249	CastExpression	( opj_common_ptr ) cinfo		76913	0					
ANR	77250	CastTarget	opj_common_ptr		76913	0					
ANR	77251	Identifier	cinfo		76913	1					
ANR	77252	Argument	& event_mgr		76913	1					
ANR	77253	UnaryOperationExpression	& event_mgr		76913	0					
ANR	77254	UnaryOperator	&		76913	0					
ANR	77255	Identifier	event_mgr		76913	1					
ANR	77256	Argument	stdout		76913	2					
ANR	77257	Identifier	stdout		76913	0					
ANR	77258	ExpressionStatement	"opj_setup_encoder ( cinfo , & parameters , volume )"	931:8:35484:35529	76913	7	True				
ANR	77259	CallExpression	"opj_setup_encoder ( cinfo , & parameters , volume )"		76913	0					
ANR	77260	Callee	opj_setup_encoder		76913	0					
ANR	77261	Identifier	opj_setup_encoder		76913	0					
ANR	77262	ArgumentList	cinfo		76913	1					
ANR	77263	Argument	cinfo		76913	0					
ANR	77264	Identifier	cinfo		76913	0					
ANR	77265	Argument	& parameters		76913	1					
ANR	77266	UnaryOperationExpression	& parameters		76913	0					
ANR	77267	UnaryOperator	&		76913	0					
ANR	77268	Identifier	parameters		76913	1					
ANR	77269	Argument	volume		76913	2					
ANR	77270	Identifier	volume		76913	0					
ANR	77271	ExpressionStatement	"cio = opj_cio_open ( ( opj_common_ptr ) cinfo , NULL , 0 )"	935:8:35629:35679	76913	8	True				
ANR	77272	AssignmentExpression	"cio = opj_cio_open ( ( opj_common_ptr ) cinfo , NULL , 0 )"		76913	0		=			
ANR	77273	Identifier	cio		76913	0					
ANR	77274	CallExpression	"opj_cio_open ( ( opj_common_ptr ) cinfo , NULL , 0 )"		76913	1					
ANR	77275	Callee	opj_cio_open		76913	0					
ANR	77276	Identifier	opj_cio_open		76913	0					
ANR	77277	ArgumentList	( opj_common_ptr ) cinfo		76913	1					
ANR	77278	Argument	( opj_common_ptr ) cinfo		76913	0					
ANR	77279	CastExpression	( opj_common_ptr ) cinfo		76913	0					
ANR	77280	CastTarget	opj_common_ptr		76913	0					
ANR	77281	Identifier	cinfo		76913	1					
ANR	77282	Argument	NULL		76913	1					
ANR	77283	Identifier	NULL		76913	0					
ANR	77284	Argument	0		76913	2					
ANR	77285	PrimaryExpression	0		76913	0					
ANR	77286	ExpressionStatement	"bSuccess = opj_encode ( cinfo , cio , volume , parameters . index )"	939:8:35781:35840	76913	9	True				
ANR	77287	AssignmentExpression	"bSuccess = opj_encode ( cinfo , cio , volume , parameters . index )"		76913	0		=			
ANR	77288	Identifier	bSuccess		76913	0					
ANR	77289	CallExpression	"opj_encode ( cinfo , cio , volume , parameters . index )"		76913	1					
ANR	77290	Callee	opj_encode		76913	0					
ANR	77291	Identifier	opj_encode		76913	0					
ANR	77292	ArgumentList	cinfo		76913	1					
ANR	77293	Argument	cinfo		76913	0					
ANR	77294	Identifier	cinfo		76913	0					
ANR	77295	Argument	cio		76913	1					
ANR	77296	Identifier	cio		76913	0					
ANR	77297	Argument	volume		76913	2					
ANR	77298	Identifier	volume		76913	0					
ANR	77299	Argument	parameters . index		76913	3					
ANR	77300	MemberAccess	parameters . index		76913	0					
ANR	77301	Identifier	parameters		76913	0					
ANR	77302	Identifier	index		76913	1					
ANR	77303	IfStatement	if ( ! bSuccess )		76913	10					
ANR	77304	Condition	! bSuccess	940:12:35854:35862	76913	0	True				
ANR	77305	UnaryOperationExpression	! bSuccess		76913	0					
ANR	77306	UnaryOperator	!		76913	0					
ANR	77307	Identifier	bSuccess		76913	1					
ANR	77308	CompoundStatement		90:23:3224:3224	76913	1					
ANR	77309	ExpressionStatement	opj_cio_close ( cio )	941:12:35879:35897	76913	0	True				
ANR	77310	CallExpression	opj_cio_close ( cio )		76913	0					
ANR	77311	Callee	opj_cio_close		76913	0					
ANR	77312	Identifier	opj_cio_close		76913	0					
ANR	77313	ArgumentList	cio		76913	1					
ANR	77314	Argument	cio		76913	0					
ANR	77315	Identifier	cio		76913	0					
ANR	77316	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Failed to encode volume\\n"" )"	942:12:35911:35963	76913	1	True				
ANR	77317	CallExpression	"fprintf ( stdout , ""[ERROR] Failed to encode volume\\n"" )"		76913	0					
ANR	77318	Callee	fprintf		76913	0					
ANR	77319	Identifier	fprintf		76913	0					
ANR	77320	ArgumentList	stdout		76913	1					
ANR	77321	Argument	stdout		76913	0					
ANR	77322	Identifier	stdout		76913	0					
ANR	77323	Argument	"""[ERROR] Failed to encode volume\\n"""		76913	1					
ANR	77324	PrimaryExpression	"""[ERROR] Failed to encode volume\\n"""		76913	0					
ANR	77325	ReturnStatement	return 1 ;	943:12:35977:35985	76913	2	True				
ANR	77326	PrimaryExpression	1		76913	0					
ANR	77327	ExpressionStatement	codestream_length = cio_tell ( cio )	945:8:36005:36038	76913	11	True				
ANR	77328	AssignmentExpression	codestream_length = cio_tell ( cio )		76913	0		=			
ANR	77329	Identifier	codestream_length		76913	0					
ANR	77330	CallExpression	cio_tell ( cio )		76913	1					
ANR	77331	Callee	cio_tell		76913	0					
ANR	77332	Identifier	cio_tell		76913	0					
ANR	77333	ArgumentList	cio		76913	1					
ANR	77334	Argument	cio		76913	0					
ANR	77335	Identifier	cio		76913	0					
ANR	77336	ExpressionStatement	pixels = ( volume -> x1 - volume -> x0 ) * ( volume -> y1 - volume -> y0 ) * ( volume -> z1 - volume -> z0 )	946:8:36048:36155	76913	12	True				
ANR	77337	AssignmentExpression	pixels = ( volume -> x1 - volume -> x0 ) * ( volume -> y1 - volume -> y0 ) * ( volume -> z1 - volume -> z0 )		76913	0		=			
ANR	77338	Identifier	pixels		76913	0					
ANR	77339	MultiplicativeExpression	( volume -> x1 - volume -> x0 ) * ( volume -> y1 - volume -> y0 ) * ( volume -> z1 - volume -> z0 )		76913	1		*			
ANR	77340	AdditiveExpression	volume -> x1 - volume -> x0		76913	0		-			
ANR	77341	PtrMemberAccess	volume -> x1		76913	0					
ANR	77342	Identifier	volume		76913	0					
ANR	77343	Identifier	x1		76913	1					
ANR	77344	PtrMemberAccess	volume -> x0		76913	1					
ANR	77345	Identifier	volume		76913	0					
ANR	77346	Identifier	x0		76913	1					
ANR	77347	MultiplicativeExpression	( volume -> y1 - volume -> y0 ) * ( volume -> z1 - volume -> z0 )		76913	1		*			
ANR	77348	AdditiveExpression	volume -> y1 - volume -> y0		76913	0		-			
ANR	77349	PtrMemberAccess	volume -> y1		76913	0					
ANR	77350	Identifier	volume		76913	0					
ANR	77351	Identifier	y1		76913	1					
ANR	77352	PtrMemberAccess	volume -> y0		76913	1					
ANR	77353	Identifier	volume		76913	0					
ANR	77354	Identifier	y0		76913	1					
ANR	77355	AdditiveExpression	volume -> z1 - volume -> z0		76913	1		-			
ANR	77356	PtrMemberAccess	volume -> z1		76913	0					
ANR	77357	Identifier	volume		76913	0					
ANR	77358	Identifier	z1		76913	1					
ANR	77359	PtrMemberAccess	volume -> z0		76913	1					
ANR	77360	Identifier	volume		76913	0					
ANR	77361	Identifier	z0		76913	1					
ANR	77362	ExpressionStatement	bitsin = pixels * volume -> comps [ 0 ] . prec	948:8:36165:36204	76913	13	True				
ANR	77363	AssignmentExpression	bitsin = pixels * volume -> comps [ 0 ] . prec		76913	0		=			
ANR	77364	Identifier	bitsin		76913	0					
ANR	77365	MultiplicativeExpression	pixels * volume -> comps [ 0 ] . prec		76913	1		*			
ANR	77366	Identifier	pixels		76913	0					
ANR	77367	MemberAccess	volume -> comps [ 0 ] . prec		76913	1					
ANR	77368	ArrayIndexing	volume -> comps [ 0 ]		76913	0					
ANR	77369	PtrMemberAccess	volume -> comps		76913	0					
ANR	77370	Identifier	volume		76913	0					
ANR	77371	Identifier	comps		76913	1					
ANR	77372	PrimaryExpression	0		76913	1					
ANR	77373	Identifier	prec		76913	1					
ANR	77374	ExpressionStatement	"fprintf ( stdout , ""[RESULT] Volume: %d x %d x %d (x %d bpv)\\n Codestream: %d B,  Ratio: %5.3f bpv,  (%5.3f : 1) \\n"" , ( volume -> x1 - volume -> x0 ) , ( volume -> y1 - volume -> y0 ) , ( volume -> z1 - volume -> z0 ) , volume -> comps [ 0 ] . prec , codestream_length , ( ( double ) codestream_length * 8.0 / ( double ) pixels ) , ( ( double ) bitsin / ( 8.0 * ( double ) codestream_length ) ) )"	949:8:36214:36637	76913	14	True				
ANR	77375	CallExpression	"fprintf ( stdout , ""[RESULT] Volume: %d x %d x %d (x %d bpv)\\n Codestream: %d B,  Ratio: %5.3f bpv,  (%5.3f : 1) \\n"" , ( volume -> x1 - volume -> x0 ) , ( volume -> y1 - volume -> y0 ) , ( volume -> z1 - volume -> z0 ) , volume -> comps [ 0 ] . prec , codestream_length , ( ( double ) codestream_length * 8.0 / ( double ) pixels ) , ( ( double ) bitsin / ( 8.0 * ( double ) codestream_length ) ) )"		76913	0					
ANR	77376	Callee	fprintf		76913	0					
ANR	77377	Identifier	fprintf		76913	0					
ANR	77378	ArgumentList	stdout		76913	1					
ANR	77379	Argument	stdout		76913	0					
ANR	77380	Identifier	stdout		76913	0					
ANR	77381	Argument	"""[RESULT] Volume: %d x %d x %d (x %d bpv)\\n Codestream: %d B,  Ratio: %5.3f bpv,  (%5.3f : 1) \\n"""		76913	1					
ANR	77382	PrimaryExpression	"""[RESULT] Volume: %d x %d x %d (x %d bpv)\\n Codestream: %d B,  Ratio: %5.3f bpv,  (%5.3f : 1) \\n"""		76913	0					
ANR	77383	Argument	volume -> x1 - volume -> x0		76913	2					
ANR	77384	AdditiveExpression	volume -> x1 - volume -> x0		76913	0		-			
ANR	77385	PtrMemberAccess	volume -> x1		76913	0					
ANR	77386	Identifier	volume		76913	0					
ANR	77387	Identifier	x1		76913	1					
ANR	77388	PtrMemberAccess	volume -> x0		76913	1					
ANR	77389	Identifier	volume		76913	0					
ANR	77390	Identifier	x0		76913	1					
ANR	77391	Argument	volume -> y1 - volume -> y0		76913	3					
ANR	77392	AdditiveExpression	volume -> y1 - volume -> y0		76913	0		-			
ANR	77393	PtrMemberAccess	volume -> y1		76913	0					
ANR	77394	Identifier	volume		76913	0					
ANR	77395	Identifier	y1		76913	1					
ANR	77396	PtrMemberAccess	volume -> y0		76913	1					
ANR	77397	Identifier	volume		76913	0					
ANR	77398	Identifier	y0		76913	1					
ANR	77399	Argument	volume -> z1 - volume -> z0		76913	4					
ANR	77400	AdditiveExpression	volume -> z1 - volume -> z0		76913	0		-			
ANR	77401	PtrMemberAccess	volume -> z1		76913	0					
ANR	77402	Identifier	volume		76913	0					
ANR	77403	Identifier	z1		76913	1					
ANR	77404	PtrMemberAccess	volume -> z0		76913	1					
ANR	77405	Identifier	volume		76913	0					
ANR	77406	Identifier	z0		76913	1					
ANR	77407	Argument	volume -> comps [ 0 ] . prec		76913	5					
ANR	77408	MemberAccess	volume -> comps [ 0 ] . prec		76913	0					
ANR	77409	ArrayIndexing	volume -> comps [ 0 ]		76913	0					
ANR	77410	PtrMemberAccess	volume -> comps		76913	0					
ANR	77411	Identifier	volume		76913	0					
ANR	77412	Identifier	comps		76913	1					
ANR	77413	PrimaryExpression	0		76913	1					
ANR	77414	Identifier	prec		76913	1					
ANR	77415	Argument	codestream_length		76913	6					
ANR	77416	Identifier	codestream_length		76913	0					
ANR	77417	Argument	( double ) codestream_length * 8.0 / ( double ) pixels		76913	7					
ANR	77418	MultiplicativeExpression	( double ) codestream_length * 8.0 / ( double ) pixels		76913	0		*			
ANR	77419	CastExpression	( double ) codestream_length		76913	0					
ANR	77420	CastTarget	double		76913	0					
ANR	77421	Identifier	codestream_length		76913	1					
ANR	77422	MultiplicativeExpression	8.0 / ( double ) pixels		76913	1		/			
ANR	77423	PrimaryExpression	8.0		76913	0					
ANR	77424	CastExpression	( double ) pixels		76913	1					
ANR	77425	CastTarget	double		76913	0					
ANR	77426	Identifier	pixels		76913	1					
ANR	77427	Argument	( double ) bitsin / ( 8.0 * ( double ) codestream_length )		76913	8					
ANR	77428	MultiplicativeExpression	( double ) bitsin / ( 8.0 * ( double ) codestream_length )		76913	0		/			
ANR	77429	CastExpression	( double ) bitsin		76913	0					
ANR	77430	CastTarget	double		76913	0					
ANR	77431	Identifier	bitsin		76913	1					
ANR	77432	MultiplicativeExpression	8.0 * ( double ) codestream_length		76913	1		*			
ANR	77433	PrimaryExpression	8.0		76913	0					
ANR	77434	CastExpression	( double ) codestream_length		76913	1					
ANR	77435	CastTarget	double		76913	0					
ANR	77436	Identifier	codestream_length		76913	1					
ANR	77437	ExpressionStatement	"f = fopen ( parameters . outfile , ""wb"" )"	957:8:36687:36722	76913	15	True				
ANR	77438	AssignmentExpression	"f = fopen ( parameters . outfile , ""wb"" )"		76913	0		=			
ANR	77439	Identifier	f		76913	0					
ANR	77440	CallExpression	"fopen ( parameters . outfile , ""wb"" )"		76913	1					
ANR	77441	Callee	fopen		76913	0					
ANR	77442	Identifier	fopen		76913	0					
ANR	77443	ArgumentList	parameters . outfile		76913	1					
ANR	77444	Argument	parameters . outfile		76913	0					
ANR	77445	MemberAccess	parameters . outfile		76913	0					
ANR	77446	Identifier	parameters		76913	0					
ANR	77447	Identifier	outfile		76913	1					
ANR	77448	Argument	"""wb"""		76913	1					
ANR	77449	PrimaryExpression	"""wb"""		76913	0					
ANR	77450	IfStatement	if ( ! f )		76913	16					
ANR	77451	Condition	! f	958:12:36736:36737	76913	0	True				
ANR	77452	UnaryOperationExpression	! f		76913	0					
ANR	77453	UnaryOperator	!		76913	0					
ANR	77454	Identifier	f		76913	1					
ANR	77455	CompoundStatement		108:16:4099:4099	76913	1					
ANR	77456	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Failed to open %s for writing\\n"" , parameters . outfile )"	959:12:36754:36832	76913	0	True				
ANR	77457	CallExpression	"fprintf ( stdout , ""[ERROR] Failed to open %s for writing\\n"" , parameters . outfile )"		76913	0					
ANR	77458	Callee	fprintf		76913	0					
ANR	77459	Identifier	fprintf		76913	0					
ANR	77460	ArgumentList	stdout		76913	1					
ANR	77461	Argument	stdout		76913	0					
ANR	77462	Identifier	stdout		76913	0					
ANR	77463	Argument	"""[ERROR] Failed to open %s for writing\\n"""		76913	1					
ANR	77464	PrimaryExpression	"""[ERROR] Failed to open %s for writing\\n"""		76913	0					
ANR	77465	Argument	parameters . outfile		76913	2					
ANR	77466	MemberAccess	parameters . outfile		76913	0					
ANR	77467	Identifier	parameters		76913	0					
ANR	77468	Identifier	outfile		76913	1					
ANR	77469	ReturnStatement	return 1 ;	960:12:36846:36854	76913	1	True				
ANR	77470	PrimaryExpression	1		76913	0					
ANR	77471	ExpressionStatement	"fwrite ( cio -> buffer , 1 , codestream_length , f )"	962:8:36874:36918	76913	17	True				
ANR	77472	CallExpression	"fwrite ( cio -> buffer , 1 , codestream_length , f )"		76913	0					
ANR	77473	Callee	fwrite		76913	0					
ANR	77474	Identifier	fwrite		76913	0					
ANR	77475	ArgumentList	cio -> buffer		76913	1					
ANR	77476	Argument	cio -> buffer		76913	0					
ANR	77477	PtrMemberAccess	cio -> buffer		76913	0					
ANR	77478	Identifier	cio		76913	0					
ANR	77479	Identifier	buffer		76913	1					
ANR	77480	Argument	1		76913	1					
ANR	77481	PrimaryExpression	1		76913	0					
ANR	77482	Argument	codestream_length		76913	2					
ANR	77483	Identifier	codestream_length		76913	0					
ANR	77484	Argument	f		76913	3					
ANR	77485	Identifier	f		76913	0					
ANR	77486	ExpressionStatement	fclose ( f )	963:8:36928:36937	76913	18	True				
ANR	77487	CallExpression	fclose ( f )		76913	0					
ANR	77488	Callee	fclose		76913	0					
ANR	77489	Identifier	fclose		76913	0					
ANR	77490	ArgumentList	f		76913	1					
ANR	77491	Argument	f		76913	0					
ANR	77492	Identifier	f		76913	0					
ANR	77493	ExpressionStatement	opj_cio_close ( cio )	966:8:36993:37011	76913	19	True				
ANR	77494	CallExpression	opj_cio_close ( cio )		76913	0					
ANR	77495	Callee	opj_cio_close		76913	0					
ANR	77496	Identifier	opj_cio_close		76913	0					
ANR	77497	ArgumentList	cio		76913	1					
ANR	77498	Argument	cio		76913	0					
ANR	77499	Identifier	cio		76913	0					
ANR	77500	ExpressionStatement	opj_destroy_compress ( cinfo )	969:8:37074:37101	76913	20	True				
ANR	77501	CallExpression	opj_destroy_compress ( cinfo )		76913	0					
ANR	77502	Callee	opj_destroy_compress		76913	0					
ANR	77503	Identifier	opj_destroy_compress		76913	0					
ANR	77504	ArgumentList	cinfo		76913	1					
ANR	77505	Argument	cinfo		76913	0					
ANR	77506	Identifier	cinfo		76913	0					
ANR	77507	ElseStatement	else		76913	0					
ANR	77508	CompoundStatement		120:11:4473:4473	76913	0					
ANR	77509	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Cod_format != JP3d !!! \\n"" )"	971:8:37124:37176	76913	0	True				
ANR	77510	CallExpression	"fprintf ( stdout , ""[ERROR] Cod_format != JP3d !!! \\n"" )"		76913	0					
ANR	77511	Callee	fprintf		76913	0					
ANR	77512	Identifier	fprintf		76913	0					
ANR	77513	ArgumentList	stdout		76913	1					
ANR	77514	Argument	stdout		76913	0					
ANR	77515	Identifier	stdout		76913	0					
ANR	77516	Argument	"""[ERROR] Cod_format != JP3d !!! \\n"""		76913	1					
ANR	77517	PrimaryExpression	"""[ERROR] Cod_format != JP3d !!! \\n"""		76913	0					
ANR	77518	ReturnStatement	return 1 ;	972:8:37186:37194	76913	1	True				
ANR	77519	PrimaryExpression	1		76913	0					
ANR	77520	IfStatement	if ( delete_comment )		76913	13					
ANR	77521	Condition	delete_comment	976:8:37252:37265	76913	0	True				
ANR	77522	Identifier	delete_comment		76913	0					
ANR	77523	CompoundStatement		126:24:4627:4627	76913	1					
ANR	77524	IfStatement	if ( parameters . cp_comment )		76913	0					
ANR	77525	Condition	parameters . cp_comment	977:12:37282:37302	76913	0	True				
ANR	77526	MemberAccess	parameters . cp_comment		76913	0					
ANR	77527	Identifier	parameters		76913	0					
ANR	77528	Identifier	cp_comment		76913	1					
ANR	77529	CompoundStatement		127:35:4664:4664	76913	1					
ANR	77530	ExpressionStatement	free ( parameters . cp_comment )	978:12:37319:37346	76913	0	True				
ANR	77531	CallExpression	free ( parameters . cp_comment )		76913	0					
ANR	77532	Callee	free		76913	0					
ANR	77533	Identifier	free		76913	0					
ANR	77534	ArgumentList	parameters . cp_comment		76913	1					
ANR	77535	Argument	parameters . cp_comment		76913	0					
ANR	77536	MemberAccess	parameters . cp_comment		76913	0					
ANR	77537	Identifier	parameters		76913	0					
ANR	77538	Identifier	cp_comment		76913	1					
ANR	77539	IfStatement	if ( parameters . cp_matrice )		76913	14					
ANR	77540	Condition	parameters . cp_matrice	981:8:37372:37392	76913	0	True				
ANR	77541	MemberAccess	parameters . cp_matrice		76913	0					
ANR	77542	Identifier	parameters		76913	0					
ANR	77543	Identifier	cp_matrice		76913	1					
ANR	77544	CompoundStatement		131:31:4754:4754	76913	1					
ANR	77545	ExpressionStatement	free ( parameters . cp_matrice )	982:8:37405:37432	76913	0	True				
ANR	77546	CallExpression	free ( parameters . cp_matrice )		76913	0					
ANR	77547	Callee	free		76913	0					
ANR	77548	Identifier	free		76913	0					
ANR	77549	ArgumentList	parameters . cp_matrice		76913	1					
ANR	77550	Argument	parameters . cp_matrice		76913	0					
ANR	77551	MemberAccess	parameters . cp_matrice		76913	0					
ANR	77552	Identifier	parameters		76913	0					
ANR	77553	Identifier	cp_matrice		76913	1					
ANR	77554	ExpressionStatement	opj_volume_destroy ( volume )	986:4:37472:37498	76913	15	True				
ANR	77555	CallExpression	opj_volume_destroy ( volume )		76913	0					
ANR	77556	Callee	opj_volume_destroy		76913	0					
ANR	77557	Identifier	opj_volume_destroy		76913	0					
ANR	77558	ArgumentList	volume		76913	1					
ANR	77559	Argument	volume		76913	0					
ANR	77560	Identifier	volume		76913	0					
ANR	77561	ReturnStatement	return 0 ;	988:4:37505:37513	76913	16	True				
ANR	77562	PrimaryExpression	0		76913	0					
ANR	77563	ReturnType	int		76913	1					
ANR	77564	Identifier	main		76913	2					
ANR	77565	ParameterList	"int argc , char * * argv"		76913	3					
ANR	77566	Parameter	int argc	850:9:32617:32624	76913	0	True				
ANR	77567	ParameterType	int		76913	0					
ANR	77568	Identifier	argc		76913	1					
ANR	77569	Parameter	char * * argv	850:19:32627:32637	76913	1	True				
ANR	77570	ParameterType	char * *		76913	0					
ANR	77571	Identifier	argv		76913	1					
ANR	77572	CFGEntryNode	ENTRY		76913		True				
ANR	77573	CFGExitNode	EXIT		76913		True				
ANR	77574	Symbol	J2K_CFMT		76913						
ANR	77575	Symbol	pgxtovolume		76913						
ANR	77576	Symbol	stdout		76913						
ANR	77577	Symbol	parameters . index		76913						
ANR	77578	Symbol	parameters . decod_format		76913						
ANR	77579	Symbol	* volume -> comps		76913						
ANR	77580	Symbol	parameters . cp_comment		76913						
ANR	77581	Symbol	volume -> z0		76913						
ANR	77582	Symbol	* cio		76913						
ANR	77583	Symbol	bitsin		76913						
ANR	77584	Symbol	volume -> y1		76913						
ANR	77585	Symbol	volume -> y0		76913						
ANR	77586	Symbol	J3D_CFMT		76913						
ANR	77587	Symbol	event_mgr		76913						
ANR	77588	Symbol	info_callback		76913						
ANR	77589	Symbol	volume -> comps		76913						
ANR	77590	Symbol	NULL		76913						
ANR	77591	Symbol	codestream_length		76913						
ANR	77592	Symbol	stderr		76913						
ANR	77593	Symbol	parse_cmdline_encoder		76913						
ANR	77594	Symbol	volume		76913						
ANR	77595	Symbol	parameters . outfile		76913						
ANR	77596	Symbol	volume -> comps [ 0 ] . prec		76913						
ANR	77597	Symbol	pixels		76913						
ANR	77598	Symbol	* volume		76913						
ANR	77599	Symbol	volume -> x0		76913						
ANR	77600	Symbol	event_mgr . error_handler		76913						
ANR	77601	Symbol	cinfo		76913						
ANR	77602	Symbol	delete_comment		76913						
ANR	77603	Symbol	volume -> x1		76913						
ANR	77604	Symbol	true		76913						
ANR	77605	Symbol	parameters . cod_format		76913						
ANR	77606	Symbol	imgtovolume		76913						
ANR	77607	Symbol	cio_tell		76913						
ANR	77608	Symbol	event_mgr . info_handler		76913						
ANR	77609	Symbol	parameters . cp_matrice		76913						
ANR	77610	Symbol	parameters		76913						
ANR	77611	Symbol	opj_create_compress		76913						
ANR	77612	Symbol	event_mgr . warning_handler		76913						
ANR	77613	Symbol	bintovolume		76913						
ANR	77614	Symbol	cio		76913						
ANR	77615	Symbol	argv		76913						
ANR	77616	Symbol	parameters . imgfile		76913						
ANR	77617	Symbol	warning_callback		76913						
ANR	77618	Symbol	CODEC_J3D		76913						
ANR	77619	Symbol	argc		76913						
ANR	77620	Symbol	bSuccess		76913						
ANR	77621	Symbol	parameters . infile		76913						
ANR	77622	Symbol	fopen		76913						
ANR	77623	Symbol	f		76913						
ANR	77624	Symbol	opj_encode		76913						
ANR	77625	Symbol	error_callback		76913						
ANR	77626	Symbol	& parameters		76913						
ANR	77627	Symbol	false		76913						
ANR	77628	Symbol	opj_cio_open		76913						
ANR	77629	Symbol	cio -> buffer		76913						
ANR	77630	Symbol	CODEC_J2K		76913						
ANR	77631	Symbol	volume -> z1		76913						
ANR	77632	Symbol	* * volume		76913						
ANR	77633	Symbol	& event_mgr		76913						
