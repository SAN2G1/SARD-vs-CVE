command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	498857	File	data/converged/CVE-2019-12973_openjpeg/src_lib_openmj2_dwt.c								
ANR	498858	ClassDef	dwt_local	55:8:2356:2433							
ANR	498859	DeclStmt									
ANR	498860	Decl							int	int *	mem
ANR	498861	DeclStmt									
ANR	498862	Decl							int	int	dn
ANR	498863	DeclStmt									
ANR	498864	Decl							int	int	sn
ANR	498865	DeclStmt									
ANR	498866	Decl							int	int	cas
ANR	498867	DeclStmt									
ANR	498868	Decl							dwt_local	dwt_local	dwt_t
ANR	498869	ClassDef	<unnamed>	62:8:2444:2474							
ANR	498870	DeclStmt									
ANR	498871	Decl							float	float [ 4 ]	f
ANR	498872	DeclStmt									
ANR	498873	Decl									v4
ANR	498874	ClassDef	v4dwt_local	66:8:2485:2586							
ANR	498875	DeclStmt									
ANR	498876	Decl							v4	v4 *	wavelet
ANR	498877	DeclStmt									
ANR	498878	Decl							int	int	dn
ANR	498879	DeclStmt									
ANR	498880	Decl							int	int	sn
ANR	498881	DeclStmt									
ANR	498882	Decl							int	int	cas
ANR	498883	DeclStmt									
ANR	498884	Decl							v4dwt_local	v4dwt_local	v4dwt_t
ANR	498885	DeclStmt									
ANR	498886	Decl							const float	const float	dwt_alpha
ANR	498887	DeclStmt									
ANR	498888	Decl							const float	const float	dwt_beta
ANR	498889	DeclStmt									
ANR	498890	Decl							const float	const float	dwt_gamma
ANR	498891	DeclStmt									
ANR	498892	Decl							const float	const float	dwt_delta
ANR	498893	DeclStmt									
ANR	498894	Decl							const float	const float	K
ANR	498895	DeclStmt									
ANR	498896	Decl							const float	const float	c13318
ANR	498897	DeclStmt									
ANR	498898	Decl							void ( * ) ( dwt_t * v )	void ( * ) ( dwt_t * v )	DWT1DFN
ANR	498899	DeclStmt									
ANR	498900	Decl							void	"void ( int * a , int * b , int dn , int sn , int cas )"	dwt_deinterleave_h
ANR	498901	DeclStmt									
ANR	498902	Decl							void	"void ( int * a , int * b , int dn , int sn , int x , int cas )"	dwt_deinterleave_v
ANR	498903	DeclStmt									
ANR	498904	Decl							void	"void ( dwt_t * h , int * a )"	dwt_interleave_h
ANR	498905	DeclStmt									
ANR	498906	Decl							void	"void ( dwt_t * v , int * a , int x )"	dwt_interleave_v
ANR	498907	DeclStmt									
ANR	498908	Decl							void	"void ( int * a , int dn , int sn , int cas )"	dwt_encode_1
ANR	498909	DeclStmt									
ANR	498910	Decl							void	void ( dwt_t * v )	dwt_decode_1
ANR	498911	DeclStmt									
ANR	498912	Decl							void	"void ( int * a , int dn , int sn , int cas )"	dwt_encode_1_real
ANR	498913	DeclStmt									
ANR	498914	Decl							void	"void ( int stepsize , int numbps , opj_stepsize_t * bandno_stepsize )"	dwt_encode_stepsize
ANR	498915	DeclStmt									
ANR	498916	Decl							void	"void ( opj_tcd_tilecomp_t * tilec , int i , DWT1DFN fn )"	dwt_decode_tile
ANR	498917	Function	dwt_deinterleave_h	171:0:5794:6026							
ANR	498918	FunctionDef	"dwt_deinterleave_h (int * a , int * b , int dn , int sn , int cas)"		498917	0					
ANR	498919	CompoundStatement		172:0:5866:6026	498917	0					
ANR	498920	IdentifierDeclStatement	int i ;	173:4:5872:5877	498917	0	True				
ANR	498921	IdentifierDecl	i		498917	0					
ANR	498922	IdentifierDeclType	int		498917	0					
ANR	498923	Identifier	i		498917	1					
ANR	498924	ForStatement	for ( i = 0 ; i < sn ; i ++ )		498917	1					
ANR	498925	ForInit	i = 0 ;	174:9:5888:5893	498917	0	True				
ANR	498926	AssignmentExpression	i = 0		498917	0		=			
ANR	498927	Identifier	i		498917	0					
ANR	498928	PrimaryExpression	0		498917	1					
ANR	498929	Condition	i < sn	174:16:5895:5900	498917	1	True				
ANR	498930	RelationalExpression	i < sn		498917	0		<			
ANR	498931	Identifier	i		498917	0					
ANR	498932	Identifier	sn		498917	1					
ANR	498933	PostIncDecOperationExpression	i ++	174:24:5903:5905	498917	2	True				
ANR	498934	Identifier	i		498917	0					
ANR	498935	IncDec	++		498917	1					
ANR	498936	CompoundStatement		3:29:41:41	498917	3					
ANR	498937	ExpressionStatement	b [ i ] = a [ 2 * i + cas ]	175:8:5918:5939	498917	0	True				
ANR	498938	AssignmentExpression	b [ i ] = a [ 2 * i + cas ]		498917	0		=			
ANR	498939	ArrayIndexing	b [ i ]		498917	0					
ANR	498940	Identifier	b		498917	0					
ANR	498941	Identifier	i		498917	1					
ANR	498942	ArrayIndexing	a [ 2 * i + cas ]		498917	1					
ANR	498943	Identifier	a		498917	0					
ANR	498944	AdditiveExpression	2 * i + cas		498917	1		+			
ANR	498945	MultiplicativeExpression	2 * i		498917	0		*			
ANR	498946	PrimaryExpression	2		498917	0					
ANR	498947	Identifier	i		498917	1					
ANR	498948	Identifier	cas		498917	1					
ANR	498949	ForStatement	for ( i = 0 ; i < dn ; i ++ )		498917	2					
ANR	498950	ForInit	i = 0 ;	177:9:5956:5961	498917	0	True				
ANR	498951	AssignmentExpression	i = 0		498917	0		=			
ANR	498952	Identifier	i		498917	0					
ANR	498953	PrimaryExpression	0		498917	1					
ANR	498954	Condition	i < dn	177:16:5963:5968	498917	1	True				
ANR	498955	RelationalExpression	i < dn		498917	0		<			
ANR	498956	Identifier	i		498917	0					
ANR	498957	Identifier	dn		498917	1					
ANR	498958	PostIncDecOperationExpression	i ++	177:24:5971:5973	498917	2	True				
ANR	498959	Identifier	i		498917	0					
ANR	498960	IncDec	++		498917	1					
ANR	498961	CompoundStatement		6:29:109:109	498917	3					
ANR	498962	ExpressionStatement	b [ sn + i ] = a [ ( 2 * i + 1 - cas ) ]	178:8:5986:6018	498917	0	True				
ANR	498963	AssignmentExpression	b [ sn + i ] = a [ ( 2 * i + 1 - cas ) ]		498917	0		=			
ANR	498964	ArrayIndexing	b [ sn + i ]		498917	0					
ANR	498965	Identifier	b		498917	0					
ANR	498966	AdditiveExpression	sn + i		498917	1		+			
ANR	498967	Identifier	sn		498917	0					
ANR	498968	Identifier	i		498917	1					
ANR	498969	ArrayIndexing	a [ ( 2 * i + 1 - cas ) ]		498917	1					
ANR	498970	Identifier	a		498917	0					
ANR	498971	AdditiveExpression	2 * i + 1 - cas		498917	1		+			
ANR	498972	MultiplicativeExpression	2 * i		498917	0		*			
ANR	498973	PrimaryExpression	2		498917	0					
ANR	498974	Identifier	i		498917	1					
ANR	498975	AdditiveExpression	1 - cas		498917	1		-			
ANR	498976	PrimaryExpression	1		498917	0					
ANR	498977	Identifier	cas		498917	1					
ANR	498978	ReturnType	static void		498917	1					
ANR	498979	Identifier	dwt_deinterleave_h		498917	2					
ANR	498980	ParameterList	"int * a , int * b , int dn , int sn , int cas"		498917	3					
ANR	498981	Parameter	int * a	171:31:5825:5830	498917	0	True				
ANR	498982	ParameterType	int *		498917	0					
ANR	498983	Identifier	a		498917	1					
ANR	498984	Parameter	int * b	171:39:5833:5838	498917	1	True				
ANR	498985	ParameterType	int *		498917	0					
ANR	498986	Identifier	b		498917	1					
ANR	498987	Parameter	int dn	171:47:5841:5846	498917	2	True				
ANR	498988	ParameterType	int		498917	0					
ANR	498989	Identifier	dn		498917	1					
ANR	498990	Parameter	int sn	171:55:5849:5854	498917	3	True				
ANR	498991	ParameterType	int		498917	0					
ANR	498992	Identifier	sn		498917	1					
ANR	498993	Parameter	int cas	171:63:5857:5863	498917	4	True				
ANR	498994	ParameterType	int		498917	0					
ANR	498995	Identifier	cas		498917	1					
ANR	498996	CFGEntryNode	ENTRY		498917		True				
ANR	498997	CFGExitNode	EXIT		498917		True				
ANR	498998	Symbol	* cas		498917						
ANR	498999	Symbol	a		498917						
ANR	499000	Symbol	b		498917						
ANR	499001	Symbol	* sn		498917						
ANR	499002	Symbol	* i		498917						
ANR	499003	Symbol	cas		498917						
ANR	499004	Symbol	i		498917						
ANR	499005	Symbol	dn		498917						
ANR	499006	Symbol	sn		498917						
ANR	499007	Symbol	* a		498917						
ANR	499008	Symbol	* b		498917						
ANR	499009	Function	dwt_deinterleave_v	185:0:6161:6408							
ANR	499010	FunctionDef	"dwt_deinterleave_v (int * a , int * b , int dn , int sn , int x , int cas)"		499009	0					
ANR	499011	CompoundStatement		186:0:6240:6408	499009	0					
ANR	499012	IdentifierDeclStatement	int i ;	187:4:6246:6251	499009	0	True				
ANR	499013	IdentifierDecl	i		499009	0					
ANR	499014	IdentifierDeclType	int		499009	0					
ANR	499015	Identifier	i		499009	1					
ANR	499016	ForStatement	for ( i = 0 ; i < sn ; i ++ )		499009	1					
ANR	499017	ForInit	i = 0 ;	188:9:6262:6267	499009	0	True				
ANR	499018	AssignmentExpression	i = 0		499009	0		=			
ANR	499019	Identifier	i		499009	0					
ANR	499020	PrimaryExpression	0		499009	1					
ANR	499021	Condition	i < sn	188:16:6269:6274	499009	1	True				
ANR	499022	RelationalExpression	i < sn		499009	0		<			
ANR	499023	Identifier	i		499009	0					
ANR	499024	Identifier	sn		499009	1					
ANR	499025	PostIncDecOperationExpression	i ++	188:24:6277:6279	499009	2	True				
ANR	499026	Identifier	i		499009	0					
ANR	499027	IncDec	++		499009	1					
ANR	499028	CompoundStatement		3:29:41:41	499009	3					
ANR	499029	ExpressionStatement	b [ i * x ] = a [ 2 * i + cas ]	189:8:6292:6317	499009	0	True				
ANR	499030	AssignmentExpression	b [ i * x ] = a [ 2 * i + cas ]		499009	0		=			
ANR	499031	ArrayIndexing	b [ i * x ]		499009	0					
ANR	499032	Identifier	b		499009	0					
ANR	499033	MultiplicativeExpression	i * x		499009	1		*			
ANR	499034	Identifier	i		499009	0					
ANR	499035	Identifier	x		499009	1					
ANR	499036	ArrayIndexing	a [ 2 * i + cas ]		499009	1					
ANR	499037	Identifier	a		499009	0					
ANR	499038	AdditiveExpression	2 * i + cas		499009	1		+			
ANR	499039	MultiplicativeExpression	2 * i		499009	0		*			
ANR	499040	PrimaryExpression	2		499009	0					
ANR	499041	Identifier	i		499009	1					
ANR	499042	Identifier	cas		499009	1					
ANR	499043	ForStatement	for ( i = 0 ; i < dn ; i ++ )		499009	2					
ANR	499044	ForInit	i = 0 ;	191:9:6334:6339	499009	0	True				
ANR	499045	AssignmentExpression	i = 0		499009	0		=			
ANR	499046	Identifier	i		499009	0					
ANR	499047	PrimaryExpression	0		499009	1					
ANR	499048	Condition	i < dn	191:16:6341:6346	499009	1	True				
ANR	499049	RelationalExpression	i < dn		499009	0		<			
ANR	499050	Identifier	i		499009	0					
ANR	499051	Identifier	dn		499009	1					
ANR	499052	PostIncDecOperationExpression	i ++	191:24:6349:6351	499009	2	True				
ANR	499053	Identifier	i		499009	0					
ANR	499054	IncDec	++		499009	1					
ANR	499055	CompoundStatement		6:29:113:113	499009	3					
ANR	499056	ExpressionStatement	b [ ( sn + i ) * x ] = a [ ( 2 * i + 1 - cas ) ]	192:8:6364:6400	499009	0	True				
ANR	499057	AssignmentExpression	b [ ( sn + i ) * x ] = a [ ( 2 * i + 1 - cas ) ]		499009	0		=			
ANR	499058	ArrayIndexing	b [ ( sn + i ) * x ]		499009	0					
ANR	499059	Identifier	b		499009	0					
ANR	499060	MultiplicativeExpression	( sn + i ) * x		499009	1		*			
ANR	499061	AdditiveExpression	sn + i		499009	0		+			
ANR	499062	Identifier	sn		499009	0					
ANR	499063	Identifier	i		499009	1					
ANR	499064	Identifier	x		499009	1					
ANR	499065	ArrayIndexing	a [ ( 2 * i + 1 - cas ) ]		499009	1					
ANR	499066	Identifier	a		499009	0					
ANR	499067	AdditiveExpression	2 * i + 1 - cas		499009	1		+			
ANR	499068	MultiplicativeExpression	2 * i		499009	0		*			
ANR	499069	PrimaryExpression	2		499009	0					
ANR	499070	Identifier	i		499009	1					
ANR	499071	AdditiveExpression	1 - cas		499009	1		-			
ANR	499072	PrimaryExpression	1		499009	0					
ANR	499073	Identifier	cas		499009	1					
ANR	499074	ReturnType	static void		499009	1					
ANR	499075	Identifier	dwt_deinterleave_v		499009	2					
ANR	499076	ParameterList	"int * a , int * b , int dn , int sn , int x , int cas"		499009	3					
ANR	499077	Parameter	int * a	185:31:6192:6197	499009	0	True				
ANR	499078	ParameterType	int *		499009	0					
ANR	499079	Identifier	a		499009	1					
ANR	499080	Parameter	int * b	185:39:6200:6205	499009	1	True				
ANR	499081	ParameterType	int *		499009	0					
ANR	499082	Identifier	b		499009	1					
ANR	499083	Parameter	int dn	185:47:6208:6213	499009	2	True				
ANR	499084	ParameterType	int		499009	0					
ANR	499085	Identifier	dn		499009	1					
ANR	499086	Parameter	int sn	185:55:6216:6221	499009	3	True				
ANR	499087	ParameterType	int		499009	0					
ANR	499088	Identifier	sn		499009	1					
ANR	499089	Parameter	int x	185:63:6224:6228	499009	4	True				
ANR	499090	ParameterType	int		499009	0					
ANR	499091	Identifier	x		499009	1					
ANR	499092	Parameter	int cas	185:70:6231:6237	499009	5	True				
ANR	499093	ParameterType	int		499009	0					
ANR	499094	Identifier	cas		499009	1					
ANR	499095	CFGEntryNode	ENTRY		499009		True				
ANR	499096	CFGExitNode	EXIT		499009		True				
ANR	499097	Symbol	* cas		499009						
ANR	499098	Symbol	a		499009						
ANR	499099	Symbol	b		499009						
ANR	499100	Symbol	* x		499009						
ANR	499101	Symbol	* sn		499009						
ANR	499102	Symbol	i		499009						
ANR	499103	Symbol	dn		499009						
ANR	499104	Symbol	* a		499009						
ANR	499105	Symbol	* b		499009						
ANR	499106	Symbol	* i		499009						
ANR	499107	Symbol	cas		499009						
ANR	499108	Symbol	x		499009						
ANR	499109	Symbol	sn		499009						
ANR	499110	Function	dwt_interleave_h	199:0:6543:6859							
ANR	499111	FunctionDef	"dwt_interleave_h (dwt_t * h , int * a)"		499110	0					
ANR	499112	CompoundStatement		200:0:6590:6859	499110	0					
ANR	499113	IdentifierDeclStatement	int * ai = a ;	201:4:6596:6607	499110	0	True				
ANR	499114	IdentifierDecl	* ai = a		499110	0					
ANR	499115	IdentifierDeclType	int *		499110	0					
ANR	499116	Identifier	ai		499110	1					
ANR	499117	AssignmentExpression	* ai = a		499110	2		=			
ANR	499118	Identifier	a		499110	0					
ANR	499119	Identifier	a		499110	1					
ANR	499120	IdentifierDeclStatement	int * bi = h -> mem + h -> cas ;	202:4:6613:6638	499110	1	True				
ANR	499121	IdentifierDecl	* bi = h -> mem + h -> cas		499110	0					
ANR	499122	IdentifierDeclType	int *		499110	0					
ANR	499123	Identifier	bi		499110	1					
ANR	499124	AssignmentExpression	* bi = h -> mem + h -> cas		499110	2		=			
ANR	499125	Identifier	bi		499110	0					
ANR	499126	AdditiveExpression	h -> mem + h -> cas		499110	1		+			
ANR	499127	PtrMemberAccess	h -> mem		499110	0					
ANR	499128	Identifier	h		499110	0					
ANR	499129	Identifier	mem		499110	1					
ANR	499130	PtrMemberAccess	h -> cas		499110	1					
ANR	499131	Identifier	h		499110	0					
ANR	499132	Identifier	cas		499110	1					
ANR	499133	IdentifierDeclStatement	int i = h -> sn ;	203:4:6644:6659	499110	2	True				
ANR	499134	IdentifierDecl	i = h -> sn		499110	0					
ANR	499135	IdentifierDeclType	int		499110	0					
ANR	499136	Identifier	i		499110	1					
ANR	499137	AssignmentExpression	i = h -> sn		499110	2		=			
ANR	499138	Identifier	i		499110	0					
ANR	499139	PtrMemberAccess	h -> sn		499110	1					
ANR	499140	Identifier	h		499110	0					
ANR	499141	Identifier	sn		499110	1					
ANR	499142	WhileStatement	while ( i -- )		499110	3					
ANR	499143	Condition	i --	204:11:6672:6674	499110	0	True				
ANR	499144	PostIncDecOperationExpression	i --		499110	0					
ANR	499145	Identifier	i		499110	0					
ANR	499146	IncDec	--		499110	1					
ANR	499147	CompoundStatement		5:16:86:86	499110	1					
ANR	499148	ExpressionStatement	* bi = * ( ai ++ )	205:8:6687:6700	499110	0	True				
ANR	499149	AssignmentExpression	* bi = * ( ai ++ )		499110	0		=			
ANR	499150	UnaryOperationExpression	* bi		499110	0					
ANR	499151	UnaryOperator	*		499110	0					
ANR	499152	Identifier	bi		499110	1					
ANR	499153	UnaryOperationExpression	* ( ai ++ )		499110	1					
ANR	499154	UnaryOperator	*		499110	0					
ANR	499155	PostIncDecOperationExpression	ai ++		499110	1					
ANR	499156	Identifier	ai		499110	0					
ANR	499157	IncDec	++		499110	1					
ANR	499158	ExpressionStatement	bi += 2	206:8:6710:6717	499110	1	True				
ANR	499159	AssignmentExpression	bi += 2		499110	0		+=			
ANR	499160	Identifier	bi		499110	0					
ANR	499161	PrimaryExpression	2		499110	1					
ANR	499162	ExpressionStatement	ai = a + h -> sn	208:4:6729:6744	499110	4	True				
ANR	499163	AssignmentExpression	ai = a + h -> sn		499110	0		=			
ANR	499164	Identifier	ai		499110	0					
ANR	499165	AdditiveExpression	a + h -> sn		499110	1		+			
ANR	499166	Identifier	a		499110	0					
ANR	499167	PtrMemberAccess	h -> sn		499110	1					
ANR	499168	Identifier	h		499110	0					
ANR	499169	Identifier	sn		499110	1					
ANR	499170	ExpressionStatement	bi = h -> mem + 1 - h -> cas	209:4:6750:6775	499110	5	True				
ANR	499171	AssignmentExpression	bi = h -> mem + 1 - h -> cas		499110	0		=			
ANR	499172	Identifier	bi		499110	0					
ANR	499173	AdditiveExpression	h -> mem + 1 - h -> cas		499110	1		+			
ANR	499174	PtrMemberAccess	h -> mem		499110	0					
ANR	499175	Identifier	h		499110	0					
ANR	499176	Identifier	mem		499110	1					
ANR	499177	AdditiveExpression	1 - h -> cas		499110	1		-			
ANR	499178	PrimaryExpression	1		499110	0					
ANR	499179	PtrMemberAccess	h -> cas		499110	1					
ANR	499180	Identifier	h		499110	0					
ANR	499181	Identifier	cas		499110	1					
ANR	499182	ExpressionStatement	i = h -> dn	210:4:6781:6793	499110	6	True				
ANR	499183	AssignmentExpression	i = h -> dn		499110	0		=			
ANR	499184	Identifier	i		499110	0					
ANR	499185	PtrMemberAccess	h -> dn		499110	1					
ANR	499186	Identifier	h		499110	0					
ANR	499187	Identifier	dn		499110	1					
ANR	499188	WhileStatement	while ( i -- )		499110	7					
ANR	499189	Condition	i --	211:11:6806:6808	499110	0	True				
ANR	499190	PostIncDecOperationExpression	i --		499110	0					
ANR	499191	Identifier	i		499110	0					
ANR	499192	IncDec	--		499110	1					
ANR	499193	CompoundStatement		12:16:220:220	499110	1					
ANR	499194	ExpressionStatement	* bi = * ( ai ++ )	212:8:6821:6834	499110	0	True				
ANR	499195	AssignmentExpression	* bi = * ( ai ++ )		499110	0		=			
ANR	499196	UnaryOperationExpression	* bi		499110	0					
ANR	499197	UnaryOperator	*		499110	0					
ANR	499198	Identifier	bi		499110	1					
ANR	499199	UnaryOperationExpression	* ( ai ++ )		499110	1					
ANR	499200	UnaryOperator	*		499110	0					
ANR	499201	PostIncDecOperationExpression	ai ++		499110	1					
ANR	499202	Identifier	ai		499110	0					
ANR	499203	IncDec	++		499110	1					
ANR	499204	ExpressionStatement	bi += 2	213:8:6844:6851	499110	1	True				
ANR	499205	AssignmentExpression	bi += 2		499110	0		+=			
ANR	499206	Identifier	bi		499110	0					
ANR	499207	PrimaryExpression	2		499110	1					
ANR	499208	ReturnType	static void		499110	1					
ANR	499209	Identifier	dwt_interleave_h		499110	2					
ANR	499210	ParameterList	"dwt_t * h , int * a"		499110	3					
ANR	499211	Parameter	dwt_t * h	199:29:6572:6579	499110	0	True				
ANR	499212	ParameterType	dwt_t *		499110	0					
ANR	499213	Identifier	h		499110	1					
ANR	499214	Parameter	int * a	199:39:6582:6587	499110	1	True				
ANR	499215	ParameterType	int *		499110	0					
ANR	499216	Identifier	a		499110	1					
ANR	499217	CFGEntryNode	ENTRY		499110		True				
ANR	499218	CFGExitNode	EXIT		499110		True				
ANR	499219	Symbol	a		499110						
ANR	499220	Symbol	* h		499110						
ANR	499221	Symbol	bi		499110						
ANR	499222	Symbol	h		499110						
ANR	499223	Symbol	ai		499110						
ANR	499224	Symbol	h -> dn		499110						
ANR	499225	Symbol	i		499110						
ANR	499226	Symbol	* ( ai ++ )		499110						
ANR	499227	Symbol	h -> cas		499110						
ANR	499228	Symbol	h -> mem		499110						
ANR	499229	Symbol	h -> sn		499110						
ANR	499230	Symbol	* bi		499110						
ANR	499231	Function	dwt_interleave_v	220:0:6994:7344							
ANR	499232	FunctionDef	"dwt_interleave_v (dwt_t * v , int * a , int x)"		499231	0					
ANR	499233	CompoundStatement		221:0:7048:7344	499231	0					
ANR	499234	IdentifierDeclStatement	int * ai = a ;	222:4:7054:7065	499231	0	True				
ANR	499235	IdentifierDecl	* ai = a		499231	0					
ANR	499236	IdentifierDeclType	int *		499231	0					
ANR	499237	Identifier	ai		499231	1					
ANR	499238	AssignmentExpression	* ai = a		499231	2		=			
ANR	499239	Identifier	a		499231	0					
ANR	499240	Identifier	a		499231	1					
ANR	499241	IdentifierDeclStatement	int * bi = v -> mem + v -> cas ;	223:4:7071:7096	499231	1	True				
ANR	499242	IdentifierDecl	* bi = v -> mem + v -> cas		499231	0					
ANR	499243	IdentifierDeclType	int *		499231	0					
ANR	499244	Identifier	bi		499231	1					
ANR	499245	AssignmentExpression	* bi = v -> mem + v -> cas		499231	2		=			
ANR	499246	Identifier	bi		499231	0					
ANR	499247	AdditiveExpression	v -> mem + v -> cas		499231	1		+			
ANR	499248	PtrMemberAccess	v -> mem		499231	0					
ANR	499249	Identifier	v		499231	0					
ANR	499250	Identifier	mem		499231	1					
ANR	499251	PtrMemberAccess	v -> cas		499231	1					
ANR	499252	Identifier	v		499231	0					
ANR	499253	Identifier	cas		499231	1					
ANR	499254	IdentifierDeclStatement	int i = v -> sn ;	224:4:7102:7116	499231	2	True				
ANR	499255	IdentifierDecl	i = v -> sn		499231	0					
ANR	499256	IdentifierDeclType	int		499231	0					
ANR	499257	Identifier	i		499231	1					
ANR	499258	AssignmentExpression	i = v -> sn		499231	2		=			
ANR	499259	Identifier	i		499231	0					
ANR	499260	PtrMemberAccess	v -> sn		499231	1					
ANR	499261	Identifier	v		499231	0					
ANR	499262	Identifier	sn		499231	1					
ANR	499263	WhileStatement	while ( i -- )		499231	3					
ANR	499264	Condition	i --	225:11:7129:7131	499231	0	True				
ANR	499265	PostIncDecOperationExpression	i --		499231	0					
ANR	499266	Identifier	i		499231	0					
ANR	499267	IncDec	--		499231	1					
ANR	499268	CompoundStatement		5:16:85:85	499231	1					
ANR	499269	ExpressionStatement	* bi = * ai	226:8:7144:7153	499231	0	True				
ANR	499270	AssignmentExpression	* bi = * ai		499231	0		=			
ANR	499271	UnaryOperationExpression	* bi		499231	0					
ANR	499272	UnaryOperator	*		499231	0					
ANR	499273	Identifier	bi		499231	1					
ANR	499274	UnaryOperationExpression	* ai		499231	1					
ANR	499275	UnaryOperator	*		499231	0					
ANR	499276	Identifier	ai		499231	1					
ANR	499277	ExpressionStatement	bi += 2	227:8:7163:7170	499231	1	True				
ANR	499278	AssignmentExpression	bi += 2		499231	0		+=			
ANR	499279	Identifier	bi		499231	0					
ANR	499280	PrimaryExpression	2		499231	1					
ANR	499281	ExpressionStatement	ai += x	228:8:7180:7187	499231	2	True				
ANR	499282	AssignmentExpression	ai += x		499231	0		+=			
ANR	499283	Identifier	ai		499231	0					
ANR	499284	Identifier	x		499231	1					
ANR	499285	ExpressionStatement	ai = a + ( v -> sn * x )	230:4:7199:7219	499231	4	True				
ANR	499286	AssignmentExpression	ai = a + ( v -> sn * x )		499231	0		=			
ANR	499287	Identifier	ai		499231	0					
ANR	499288	AdditiveExpression	a + ( v -> sn * x )		499231	1		+			
ANR	499289	Identifier	a		499231	0					
ANR	499290	MultiplicativeExpression	v -> sn * x		499231	1		*			
ANR	499291	PtrMemberAccess	v -> sn		499231	0					
ANR	499292	Identifier	v		499231	0					
ANR	499293	Identifier	sn		499231	1					
ANR	499294	Identifier	x		499231	1					
ANR	499295	ExpressionStatement	bi = v -> mem + 1 - v -> cas	231:4:7225:7249	499231	5	True				
ANR	499296	AssignmentExpression	bi = v -> mem + 1 - v -> cas		499231	0		=			
ANR	499297	Identifier	bi		499231	0					
ANR	499298	AdditiveExpression	v -> mem + 1 - v -> cas		499231	1		+			
ANR	499299	PtrMemberAccess	v -> mem		499231	0					
ANR	499300	Identifier	v		499231	0					
ANR	499301	Identifier	mem		499231	1					
ANR	499302	AdditiveExpression	1 - v -> cas		499231	1		-			
ANR	499303	PrimaryExpression	1		499231	0					
ANR	499304	PtrMemberAccess	v -> cas		499231	1					
ANR	499305	Identifier	v		499231	0					
ANR	499306	Identifier	cas		499231	1					
ANR	499307	ExpressionStatement	i = v -> dn	232:4:7255:7265	499231	6	True				
ANR	499308	AssignmentExpression	i = v -> dn		499231	0		=			
ANR	499309	Identifier	i		499231	0					
ANR	499310	PtrMemberAccess	v -> dn		499231	1					
ANR	499311	Identifier	v		499231	0					
ANR	499312	Identifier	dn		499231	1					
ANR	499313	WhileStatement	while ( i -- )		499231	7					
ANR	499314	Condition	i --	233:11:7278:7280	499231	0	True				
ANR	499315	PostIncDecOperationExpression	i --		499231	0					
ANR	499316	Identifier	i		499231	0					
ANR	499317	IncDec	--		499231	1					
ANR	499318	CompoundStatement		13:16:234:234	499231	1					
ANR	499319	ExpressionStatement	* bi = * ai	234:8:7293:7302	499231	0	True				
ANR	499320	AssignmentExpression	* bi = * ai		499231	0		=			
ANR	499321	UnaryOperationExpression	* bi		499231	0					
ANR	499322	UnaryOperator	*		499231	0					
ANR	499323	Identifier	bi		499231	1					
ANR	499324	UnaryOperationExpression	* ai		499231	1					
ANR	499325	UnaryOperator	*		499231	0					
ANR	499326	Identifier	ai		499231	1					
ANR	499327	ExpressionStatement	bi += 2	235:8:7312:7319	499231	1	True				
ANR	499328	AssignmentExpression	bi += 2		499231	0		+=			
ANR	499329	Identifier	bi		499231	0					
ANR	499330	PrimaryExpression	2		499231	1					
ANR	499331	ExpressionStatement	ai += x	236:8:7329:7336	499231	2	True				
ANR	499332	AssignmentExpression	ai += x		499231	0		+=			
ANR	499333	Identifier	ai		499231	0					
ANR	499334	Identifier	x		499231	1					
ANR	499335	ReturnType	static void		499231	1					
ANR	499336	Identifier	dwt_interleave_v		499231	2					
ANR	499337	ParameterList	"dwt_t * v , int * a , int x"		499231	3					
ANR	499338	Parameter	dwt_t * v	220:29:7023:7030	499231	0	True				
ANR	499339	ParameterType	dwt_t *		499231	0					
ANR	499340	Identifier	v		499231	1					
ANR	499341	Parameter	int * a	220:39:7033:7038	499231	1	True				
ANR	499342	ParameterType	int *		499231	0					
ANR	499343	Identifier	a		499231	1					
ANR	499344	Parameter	int x	220:47:7041:7045	499231	2	True				
ANR	499345	ParameterType	int		499231	0					
ANR	499346	Identifier	x		499231	1					
ANR	499347	CFGEntryNode	ENTRY		499231		True				
ANR	499348	CFGExitNode	EXIT		499231		True				
ANR	499349	Symbol	* v		499231						
ANR	499350	Symbol	a		499231						
ANR	499351	Symbol	v -> cas		499231						
ANR	499352	Symbol	v -> mem		499231						
ANR	499353	Symbol	bi		499231						
ANR	499354	Symbol	ai		499231						
ANR	499355	Symbol	i		499231						
ANR	499356	Symbol	* ai		499231						
ANR	499357	Symbol	* bi		499231						
ANR	499358	Symbol	v -> sn		499231						
ANR	499359	Symbol	v		499231						
ANR	499360	Symbol	x		499231						
ANR	499361	Symbol	v -> dn		499231						
ANR	499362	Function	dwt_encode_1	244:0:7478:8201							
ANR	499363	FunctionDef	"dwt_encode_1 (int * a , int dn , int sn , int cas)"		499362	0					
ANR	499364	CompoundStatement		245:0:7536:8201	499362	0					
ANR	499365	IdentifierDeclStatement	int i ;	246:4:7542:7547	499362	0	True				
ANR	499366	IdentifierDecl	i		499362	0					
ANR	499367	IdentifierDeclType	int		499362	0					
ANR	499368	Identifier	i		499362	1					
ANR	499369	IfStatement	if ( ! cas )		499362	1					
ANR	499370	Condition	! cas	248:8:7558:7561	499362	0	True				
ANR	499371	UnaryOperationExpression	! cas		499362	0					
ANR	499372	UnaryOperator	!		499362	0					
ANR	499373	Identifier	cas		499362	1					
ANR	499374	CompoundStatement		4:14:27:27	499362	1					
ANR	499375	IfStatement	if ( ( dn > 0 ) || ( sn > 1 ) )		499362	0					
ANR	499376	Condition	( dn > 0 ) || ( sn > 1 )	249:12:7578:7597	499362	0	True				
ANR	499377	OrExpression	( dn > 0 ) || ( sn > 1 )		499362	0		||			
ANR	499378	RelationalExpression	dn > 0		499362	0		>			
ANR	499379	Identifier	dn		499362	0					
ANR	499380	PrimaryExpression	0		499362	1					
ANR	499381	RelationalExpression	sn > 1		499362	1		>			
ANR	499382	Identifier	sn		499362	0					
ANR	499383	PrimaryExpression	1		499362	1					
ANR	499384	CompoundStatement		5:34:63:63	499362	1					
ANR	499385	ForStatement	for ( i = 0 ; i < dn ; i ++ )		499362	0					
ANR	499386	ForInit	i = 0 ;	250:17:7649:7654	499362	0	True				
ANR	499387	AssignmentExpression	i = 0		499362	0		=			
ANR	499388	Identifier	i		499362	0					
ANR	499389	PrimaryExpression	0		499362	1					
ANR	499390	Condition	i < dn	250:24:7656:7661	499362	1	True				
ANR	499391	RelationalExpression	i < dn		499362	0		<			
ANR	499392	Identifier	i		499362	0					
ANR	499393	Identifier	dn		499362	1					
ANR	499394	PostIncDecOperationExpression	i ++	250:32:7664:7666	499362	2	True				
ANR	499395	Identifier	i		499362	0					
ANR	499396	IncDec	++		499362	1					
ANR	499397	CompoundStatement		6:37:132:132	499362	3					
ANR	499398	ExpressionStatement	D ( i ) -= ( S_ ( i ) + S_ ( i + 1 ) ) >> 1	251:16:7687:7719	499362	0	True				
ANR	499399	AssignmentExpression	D ( i ) -= ( S_ ( i ) + S_ ( i + 1 ) ) >> 1		499362	0		-=			
ANR	499400	CallExpression	D ( i )		499362	0					
ANR	499401	Callee	D		499362	0					
ANR	499402	Identifier	D		499362	0					
ANR	499403	ArgumentList	i		499362	1					
ANR	499404	Argument	i		499362	0					
ANR	499405	Identifier	i		499362	0					
ANR	499406	ShiftExpression	( S_ ( i ) + S_ ( i + 1 ) ) >> 1		499362	1		>>			
ANR	499407	AdditiveExpression	S_ ( i ) + S_ ( i + 1 )		499362	0		+			
ANR	499408	CallExpression	S_ ( i )		499362	0					
ANR	499409	Callee	S_		499362	0					
ANR	499410	Identifier	S_		499362	0					
ANR	499411	ArgumentList	i		499362	1					
ANR	499412	Argument	i		499362	0					
ANR	499413	Identifier	i		499362	0					
ANR	499414	CallExpression	S_ ( i + 1 )		499362	1					
ANR	499415	Callee	S_		499362	0					
ANR	499416	Identifier	S_		499362	0					
ANR	499417	ArgumentList	i + 1		499362	1					
ANR	499418	Argument	i + 1		499362	0					
ANR	499419	AdditiveExpression	i + 1		499362	0		+			
ANR	499420	Identifier	i		499362	0					
ANR	499421	PrimaryExpression	1		499362	1					
ANR	499422	PrimaryExpression	1		499362	1					
ANR	499423	ForStatement	for ( i = 0 ; i < sn ; i ++ )		499362	1					
ANR	499424	ForInit	i = 0 ;	253:17:7752:7757	499362	0	True				
ANR	499425	AssignmentExpression	i = 0		499362	0		=			
ANR	499426	Identifier	i		499362	0					
ANR	499427	PrimaryExpression	0		499362	1					
ANR	499428	Condition	i < sn	253:24:7759:7764	499362	1	True				
ANR	499429	RelationalExpression	i < sn		499362	0		<			
ANR	499430	Identifier	i		499362	0					
ANR	499431	Identifier	sn		499362	1					
ANR	499432	PostIncDecOperationExpression	i ++	253:32:7767:7769	499362	2	True				
ANR	499433	Identifier	i		499362	0					
ANR	499434	IncDec	++		499362	1					
ANR	499435	CompoundStatement		9:37:235:235	499362	3					
ANR	499436	ExpressionStatement	S ( i ) += ( D_ ( i - 1 ) + D_ ( i ) + 2 ) >> 2	254:16:7790:7826	499362	0	True				
ANR	499437	AssignmentExpression	S ( i ) += ( D_ ( i - 1 ) + D_ ( i ) + 2 ) >> 2		499362	0		+=			
ANR	499438	CallExpression	S ( i )		499362	0					
ANR	499439	Callee	S		499362	0					
ANR	499440	Identifier	S		499362	0					
ANR	499441	ArgumentList	i		499362	1					
ANR	499442	Argument	i		499362	0					
ANR	499443	Identifier	i		499362	0					
ANR	499444	ShiftExpression	( D_ ( i - 1 ) + D_ ( i ) + 2 ) >> 2		499362	1		>>			
ANR	499445	AdditiveExpression	D_ ( i - 1 ) + D_ ( i ) + 2		499362	0		+			
ANR	499446	CallExpression	D_ ( i - 1 )		499362	0					
ANR	499447	Callee	D_		499362	0					
ANR	499448	Identifier	D_		499362	0					
ANR	499449	ArgumentList	i - 1		499362	1					
ANR	499450	Argument	i - 1		499362	0					
ANR	499451	AdditiveExpression	i - 1		499362	0		-			
ANR	499452	Identifier	i		499362	0					
ANR	499453	PrimaryExpression	1		499362	1					
ANR	499454	AdditiveExpression	D_ ( i ) + 2		499362	1		+			
ANR	499455	CallExpression	D_ ( i )		499362	0					
ANR	499456	Callee	D_		499362	0					
ANR	499457	Identifier	D_		499362	0					
ANR	499458	ArgumentList	i		499362	1					
ANR	499459	Argument	i		499362	0					
ANR	499460	Identifier	i		499362	0					
ANR	499461	PrimaryExpression	2		499362	1					
ANR	499462	PrimaryExpression	2		499362	1					
ANR	499463	ElseStatement	else		499362	0					
ANR	499464	CompoundStatement		13:11:326:326	499362	0					
ANR	499465	IfStatement	if ( ! sn && dn == 1 )		499362	0					
ANR	499466	Condition	! sn && dn == 1	258:12:7877:7890	499362	0	True				
ANR	499467	AndExpression	! sn && dn == 1		499362	0		&&			
ANR	499468	UnaryOperationExpression	! sn		499362	0					
ANR	499469	UnaryOperator	!		499362	0					
ANR	499470	Identifier	sn		499362	1					
ANR	499471	EqualityExpression	dn == 1		499362	1		==			
ANR	499472	Identifier	dn		499362	0					
ANR	499473	PrimaryExpression	1		499362	1					
ANR	499474	CompoundStatement		14:28:356:356	499362	1					
ANR	499475	ExpressionStatement	S ( 0 ) *= 2	259:12:7943:7952	499362	0	True				
ANR	499476	AssignmentExpression	S ( 0 ) *= 2		499362	0		*=			
ANR	499477	CallExpression	S ( 0 )		499362	0					
ANR	499478	Callee	S		499362	0					
ANR	499479	Identifier	S		499362	0					
ANR	499480	ArgumentList	0		499362	1					
ANR	499481	Argument	0		499362	0					
ANR	499482	PrimaryExpression	0		499362	0					
ANR	499483	PrimaryExpression	2		499362	1					
ANR	499484	ElseStatement	else		499362	0					
ANR	499485	CompoundStatement		16:15:432:432	499362	0					
ANR	499486	ForStatement	for ( i = 0 ; i < dn ; i ++ )		499362	0					
ANR	499487	ForInit	i = 0 ;	261:17:7988:7993	499362	0	True				
ANR	499488	AssignmentExpression	i = 0		499362	0		=			
ANR	499489	Identifier	i		499362	0					
ANR	499490	PrimaryExpression	0		499362	1					
ANR	499491	Condition	i < dn	261:24:7995:8000	499362	1	True				
ANR	499492	RelationalExpression	i < dn		499362	0		<			
ANR	499493	Identifier	i		499362	0					
ANR	499494	Identifier	dn		499362	1					
ANR	499495	PostIncDecOperationExpression	i ++	261:32:8003:8005	499362	2	True				
ANR	499496	Identifier	i		499362	0					
ANR	499497	IncDec	++		499362	1					
ANR	499498	CompoundStatement		17:37:471:471	499362	3					
ANR	499499	ExpressionStatement	S ( i ) -= ( DD_ ( i ) + DD_ ( i - 1 ) ) >> 1	262:16:8026:8060	499362	0	True				
ANR	499500	AssignmentExpression	S ( i ) -= ( DD_ ( i ) + DD_ ( i - 1 ) ) >> 1		499362	0		-=			
ANR	499501	CallExpression	S ( i )		499362	0					
ANR	499502	Callee	S		499362	0					
ANR	499503	Identifier	S		499362	0					
ANR	499504	ArgumentList	i		499362	1					
ANR	499505	Argument	i		499362	0					
ANR	499506	Identifier	i		499362	0					
ANR	499507	ShiftExpression	( DD_ ( i ) + DD_ ( i - 1 ) ) >> 1		499362	1		>>			
ANR	499508	AdditiveExpression	DD_ ( i ) + DD_ ( i - 1 )		499362	0		+			
ANR	499509	CallExpression	DD_ ( i )		499362	0					
ANR	499510	Callee	DD_		499362	0					
ANR	499511	Identifier	DD_		499362	0					
ANR	499512	ArgumentList	i		499362	1					
ANR	499513	Argument	i		499362	0					
ANR	499514	Identifier	i		499362	0					
ANR	499515	CallExpression	DD_ ( i - 1 )		499362	1					
ANR	499516	Callee	DD_		499362	0					
ANR	499517	Identifier	DD_		499362	0					
ANR	499518	ArgumentList	i - 1		499362	1					
ANR	499519	Argument	i - 1		499362	0					
ANR	499520	AdditiveExpression	i - 1		499362	0		-			
ANR	499521	Identifier	i		499362	0					
ANR	499522	PrimaryExpression	1		499362	1					
ANR	499523	PrimaryExpression	1		499362	1					
ANR	499524	ForStatement	for ( i = 0 ; i < sn ; i ++ )		499362	1					
ANR	499525	ForInit	i = 0 ;	264:17:8093:8098	499362	0	True				
ANR	499526	AssignmentExpression	i = 0		499362	0		=			
ANR	499527	Identifier	i		499362	0					
ANR	499528	PrimaryExpression	0		499362	1					
ANR	499529	Condition	i < sn	264:24:8100:8105	499362	1	True				
ANR	499530	RelationalExpression	i < sn		499362	0		<			
ANR	499531	Identifier	i		499362	0					
ANR	499532	Identifier	sn		499362	1					
ANR	499533	PostIncDecOperationExpression	i ++	264:32:8108:8110	499362	2	True				
ANR	499534	Identifier	i		499362	0					
ANR	499535	IncDec	++		499362	1					
ANR	499536	CompoundStatement		20:37:576:576	499362	3					
ANR	499537	ExpressionStatement	D ( i ) += ( SS_ ( i ) + SS_ ( i + 1 ) + 2 ) >> 2	265:16:8131:8169	499362	0	True				
ANR	499538	AssignmentExpression	D ( i ) += ( SS_ ( i ) + SS_ ( i + 1 ) + 2 ) >> 2		499362	0		+=			
ANR	499539	CallExpression	D ( i )		499362	0					
ANR	499540	Callee	D		499362	0					
ANR	499541	Identifier	D		499362	0					
ANR	499542	ArgumentList	i		499362	1					
ANR	499543	Argument	i		499362	0					
ANR	499544	Identifier	i		499362	0					
ANR	499545	ShiftExpression	( SS_ ( i ) + SS_ ( i + 1 ) + 2 ) >> 2		499362	1		>>			
ANR	499546	AdditiveExpression	SS_ ( i ) + SS_ ( i + 1 ) + 2		499362	0		+			
ANR	499547	CallExpression	SS_ ( i )		499362	0					
ANR	499548	Callee	SS_		499362	0					
ANR	499549	Identifier	SS_		499362	0					
ANR	499550	ArgumentList	i		499362	1					
ANR	499551	Argument	i		499362	0					
ANR	499552	Identifier	i		499362	0					
ANR	499553	AdditiveExpression	SS_ ( i + 1 ) + 2		499362	1		+			
ANR	499554	CallExpression	SS_ ( i + 1 )		499362	0					
ANR	499555	Callee	SS_		499362	0					
ANR	499556	Identifier	SS_		499362	0					
ANR	499557	ArgumentList	i + 1		499362	1					
ANR	499558	Argument	i + 1		499362	0					
ANR	499559	AdditiveExpression	i + 1		499362	0		+			
ANR	499560	Identifier	i		499362	0					
ANR	499561	PrimaryExpression	1		499362	1					
ANR	499562	PrimaryExpression	2		499362	1					
ANR	499563	PrimaryExpression	2		499362	1					
ANR	499564	ReturnType	static void		499362	1					
ANR	499565	Identifier	dwt_encode_1		499362	2					
ANR	499566	ParameterList	"int * a , int dn , int sn , int cas"		499362	3					
ANR	499567	Parameter	int * a	244:25:7503:7508	499362	0	True				
ANR	499568	ParameterType	int *		499362	0					
ANR	499569	Identifier	a		499362	1					
ANR	499570	Parameter	int dn	244:33:7511:7516	499362	1	True				
ANR	499571	ParameterType	int		499362	0					
ANR	499572	Identifier	dn		499362	1					
ANR	499573	Parameter	int sn	244:41:7519:7524	499362	2	True				
ANR	499574	ParameterType	int		499362	0					
ANR	499575	Identifier	sn		499362	1					
ANR	499576	Parameter	int cas	244:49:7527:7533	499362	3	True				
ANR	499577	ParameterType	int		499362	0					
ANR	499578	Identifier	cas		499362	1					
ANR	499579	CFGEntryNode	ENTRY		499362		True				
ANR	499580	CFGExitNode	EXIT		499362		True				
ANR	499581	Symbol	a		499362						
ANR	499582	Symbol	S		499362						
ANR	499583	Symbol	cas		499362						
ANR	499584	Symbol	D		499362						
ANR	499585	Symbol	i		499362						
ANR	499586	Symbol	dn		499362						
ANR	499587	Symbol	sn		499362						
ANR	499588	Symbol	D_		499362						
ANR	499589	Symbol	S_		499362						
ANR	499590	Symbol	DD_		499362						
ANR	499591	Symbol	SS_		499362						
ANR	499592	Function	dwt_decode_1_	274:0:8334:9060							
ANR	499593	FunctionDef	"dwt_decode_1_ (int * a , int dn , int sn , int cas)"		499592	0					
ANR	499594	CompoundStatement		275:0:8393:9060	499592	0					
ANR	499595	IdentifierDeclStatement	int i ;	276:4:8399:8404	499592	0	True				
ANR	499596	IdentifierDecl	i		499592	0					
ANR	499597	IdentifierDeclType	int		499592	0					
ANR	499598	Identifier	i		499592	1					
ANR	499599	IfStatement	if ( ! cas )		499592	1					
ANR	499600	Condition	! cas	278:8:8415:8418	499592	0	True				
ANR	499601	UnaryOperationExpression	! cas		499592	0					
ANR	499602	UnaryOperator	!		499592	0					
ANR	499603	Identifier	cas		499592	1					
ANR	499604	CompoundStatement		4:14:27:27	499592	1					
ANR	499605	IfStatement	if ( ( dn > 0 ) || ( sn > 1 ) )		499592	0					
ANR	499606	Condition	( dn > 0 ) || ( sn > 1 )	279:12:8435:8454	499592	0	True				
ANR	499607	OrExpression	( dn > 0 ) || ( sn > 1 )		499592	0		||			
ANR	499608	RelationalExpression	dn > 0		499592	0		>			
ANR	499609	Identifier	dn		499592	0					
ANR	499610	PrimaryExpression	0		499592	1					
ANR	499611	RelationalExpression	sn > 1		499592	1		>			
ANR	499612	Identifier	sn		499592	0					
ANR	499613	PrimaryExpression	1		499592	1					
ANR	499614	CompoundStatement		5:34:63:63	499592	1					
ANR	499615	ForStatement	for ( i = 0 ; i < sn ; i ++ )		499592	0					
ANR	499616	ForInit	i = 0 ;	280:17:8506:8511	499592	0	True				
ANR	499617	AssignmentExpression	i = 0		499592	0		=			
ANR	499618	Identifier	i		499592	0					
ANR	499619	PrimaryExpression	0		499592	1					
ANR	499620	Condition	i < sn	280:24:8513:8518	499592	1	True				
ANR	499621	RelationalExpression	i < sn		499592	0		<			
ANR	499622	Identifier	i		499592	0					
ANR	499623	Identifier	sn		499592	1					
ANR	499624	PostIncDecOperationExpression	i ++	280:32:8521:8523	499592	2	True				
ANR	499625	Identifier	i		499592	0					
ANR	499626	IncDec	++		499592	1					
ANR	499627	CompoundStatement		6:37:132:132	499592	3					
ANR	499628	ExpressionStatement	S ( i ) -= ( D_ ( i - 1 ) + D_ ( i ) + 2 ) >> 2	281:16:8544:8580	499592	0	True				
ANR	499629	AssignmentExpression	S ( i ) -= ( D_ ( i - 1 ) + D_ ( i ) + 2 ) >> 2		499592	0		-=			
ANR	499630	CallExpression	S ( i )		499592	0					
ANR	499631	Callee	S		499592	0					
ANR	499632	Identifier	S		499592	0					
ANR	499633	ArgumentList	i		499592	1					
ANR	499634	Argument	i		499592	0					
ANR	499635	Identifier	i		499592	0					
ANR	499636	ShiftExpression	( D_ ( i - 1 ) + D_ ( i ) + 2 ) >> 2		499592	1		>>			
ANR	499637	AdditiveExpression	D_ ( i - 1 ) + D_ ( i ) + 2		499592	0		+			
ANR	499638	CallExpression	D_ ( i - 1 )		499592	0					
ANR	499639	Callee	D_		499592	0					
ANR	499640	Identifier	D_		499592	0					
ANR	499641	ArgumentList	i - 1		499592	1					
ANR	499642	Argument	i - 1		499592	0					
ANR	499643	AdditiveExpression	i - 1		499592	0		-			
ANR	499644	Identifier	i		499592	0					
ANR	499645	PrimaryExpression	1		499592	1					
ANR	499646	AdditiveExpression	D_ ( i ) + 2		499592	1		+			
ANR	499647	CallExpression	D_ ( i )		499592	0					
ANR	499648	Callee	D_		499592	0					
ANR	499649	Identifier	D_		499592	0					
ANR	499650	ArgumentList	i		499592	1					
ANR	499651	Argument	i		499592	0					
ANR	499652	Identifier	i		499592	0					
ANR	499653	PrimaryExpression	2		499592	1					
ANR	499654	PrimaryExpression	2		499592	1					
ANR	499655	ForStatement	for ( i = 0 ; i < dn ; i ++ )		499592	1					
ANR	499656	ForInit	i = 0 ;	283:17:8613:8618	499592	0	True				
ANR	499657	AssignmentExpression	i = 0		499592	0		=			
ANR	499658	Identifier	i		499592	0					
ANR	499659	PrimaryExpression	0		499592	1					
ANR	499660	Condition	i < dn	283:24:8620:8625	499592	1	True				
ANR	499661	RelationalExpression	i < dn		499592	0		<			
ANR	499662	Identifier	i		499592	0					
ANR	499663	Identifier	dn		499592	1					
ANR	499664	PostIncDecOperationExpression	i ++	283:32:8628:8630	499592	2	True				
ANR	499665	Identifier	i		499592	0					
ANR	499666	IncDec	++		499592	1					
ANR	499667	CompoundStatement		9:37:239:239	499592	3					
ANR	499668	ExpressionStatement	D ( i ) += ( S_ ( i ) + S_ ( i + 1 ) ) >> 1	284:16:8651:8683	499592	0	True				
ANR	499669	AssignmentExpression	D ( i ) += ( S_ ( i ) + S_ ( i + 1 ) ) >> 1		499592	0		+=			
ANR	499670	CallExpression	D ( i )		499592	0					
ANR	499671	Callee	D		499592	0					
ANR	499672	Identifier	D		499592	0					
ANR	499673	ArgumentList	i		499592	1					
ANR	499674	Argument	i		499592	0					
ANR	499675	Identifier	i		499592	0					
ANR	499676	ShiftExpression	( S_ ( i ) + S_ ( i + 1 ) ) >> 1		499592	1		>>			
ANR	499677	AdditiveExpression	S_ ( i ) + S_ ( i + 1 )		499592	0		+			
ANR	499678	CallExpression	S_ ( i )		499592	0					
ANR	499679	Callee	S_		499592	0					
ANR	499680	Identifier	S_		499592	0					
ANR	499681	ArgumentList	i		499592	1					
ANR	499682	Argument	i		499592	0					
ANR	499683	Identifier	i		499592	0					
ANR	499684	CallExpression	S_ ( i + 1 )		499592	1					
ANR	499685	Callee	S_		499592	0					
ANR	499686	Identifier	S_		499592	0					
ANR	499687	ArgumentList	i + 1		499592	1					
ANR	499688	Argument	i + 1		499592	0					
ANR	499689	AdditiveExpression	i + 1		499592	0		+			
ANR	499690	Identifier	i		499592	0					
ANR	499691	PrimaryExpression	1		499592	1					
ANR	499692	PrimaryExpression	1		499592	1					
ANR	499693	ElseStatement	else		499592	0					
ANR	499694	CompoundStatement		13:11:326:326	499592	0					
ANR	499695	IfStatement	if ( ! sn && dn == 1 )		499592	0					
ANR	499696	Condition	! sn && dn == 1	288:12:8734:8748	499592	0	True				
ANR	499697	AndExpression	! sn && dn == 1		499592	0		&&			
ANR	499698	UnaryOperationExpression	! sn		499592	0					
ANR	499699	UnaryOperator	!		499592	0					
ANR	499700	Identifier	sn		499592	1					
ANR	499701	EqualityExpression	dn == 1		499592	1		==			
ANR	499702	Identifier	dn		499592	0					
ANR	499703	PrimaryExpression	1		499592	1					
ANR	499704	CompoundStatement		14:29:357:357	499592	1					
ANR	499705	ExpressionStatement	S ( 0 ) /= 2	289:12:8802:8811	499592	0	True				
ANR	499706	AssignmentExpression	S ( 0 ) /= 2		499592	0		/=			
ANR	499707	CallExpression	S ( 0 )		499592	0					
ANR	499708	Callee	S		499592	0					
ANR	499709	Identifier	S		499592	0					
ANR	499710	ArgumentList	0		499592	1					
ANR	499711	Argument	0		499592	0					
ANR	499712	PrimaryExpression	0		499592	0					
ANR	499713	PrimaryExpression	2		499592	1					
ANR	499714	ElseStatement	else		499592	0					
ANR	499715	CompoundStatement		16:15:434:434	499592	0					
ANR	499716	ForStatement	for ( i = 0 ; i < sn ; i ++ )		499592	0					
ANR	499717	ForInit	i = 0 ;	291:17:8847:8852	499592	0	True				
ANR	499718	AssignmentExpression	i = 0		499592	0		=			
ANR	499719	Identifier	i		499592	0					
ANR	499720	PrimaryExpression	0		499592	1					
ANR	499721	Condition	i < sn	291:24:8854:8859	499592	1	True				
ANR	499722	RelationalExpression	i < sn		499592	0		<			
ANR	499723	Identifier	i		499592	0					
ANR	499724	Identifier	sn		499592	1					
ANR	499725	PostIncDecOperationExpression	i ++	291:32:8862:8864	499592	2	True				
ANR	499726	Identifier	i		499592	0					
ANR	499727	IncDec	++		499592	1					
ANR	499728	CompoundStatement		17:37:473:473	499592	3					
ANR	499729	ExpressionStatement	D ( i ) -= ( SS_ ( i ) + SS_ ( i + 1 ) + 2 ) >> 2	292:16:8885:8923	499592	0	True				
ANR	499730	AssignmentExpression	D ( i ) -= ( SS_ ( i ) + SS_ ( i + 1 ) + 2 ) >> 2		499592	0		-=			
ANR	499731	CallExpression	D ( i )		499592	0					
ANR	499732	Callee	D		499592	0					
ANR	499733	Identifier	D		499592	0					
ANR	499734	ArgumentList	i		499592	1					
ANR	499735	Argument	i		499592	0					
ANR	499736	Identifier	i		499592	0					
ANR	499737	ShiftExpression	( SS_ ( i ) + SS_ ( i + 1 ) + 2 ) >> 2		499592	1		>>			
ANR	499738	AdditiveExpression	SS_ ( i ) + SS_ ( i + 1 ) + 2		499592	0		+			
ANR	499739	CallExpression	SS_ ( i )		499592	0					
ANR	499740	Callee	SS_		499592	0					
ANR	499741	Identifier	SS_		499592	0					
ANR	499742	ArgumentList	i		499592	1					
ANR	499743	Argument	i		499592	0					
ANR	499744	Identifier	i		499592	0					
ANR	499745	AdditiveExpression	SS_ ( i + 1 ) + 2		499592	1		+			
ANR	499746	CallExpression	SS_ ( i + 1 )		499592	0					
ANR	499747	Callee	SS_		499592	0					
ANR	499748	Identifier	SS_		499592	0					
ANR	499749	ArgumentList	i + 1		499592	1					
ANR	499750	Argument	i + 1		499592	0					
ANR	499751	AdditiveExpression	i + 1		499592	0		+			
ANR	499752	Identifier	i		499592	0					
ANR	499753	PrimaryExpression	1		499592	1					
ANR	499754	PrimaryExpression	2		499592	1					
ANR	499755	PrimaryExpression	2		499592	1					
ANR	499756	ForStatement	for ( i = 0 ; i < dn ; i ++ )		499592	1					
ANR	499757	ForInit	i = 0 ;	294:17:8956:8961	499592	0	True				
ANR	499758	AssignmentExpression	i = 0		499592	0		=			
ANR	499759	Identifier	i		499592	0					
ANR	499760	PrimaryExpression	0		499592	1					
ANR	499761	Condition	i < dn	294:24:8963:8968	499592	1	True				
ANR	499762	RelationalExpression	i < dn		499592	0		<			
ANR	499763	Identifier	i		499592	0					
ANR	499764	Identifier	dn		499592	1					
ANR	499765	PostIncDecOperationExpression	i ++	294:32:8971:8973	499592	2	True				
ANR	499766	Identifier	i		499592	0					
ANR	499767	IncDec	++		499592	1					
ANR	499768	CompoundStatement		20:37:582:582	499592	3					
ANR	499769	ExpressionStatement	S ( i ) += ( DD_ ( i ) + DD_ ( i - 1 ) ) >> 1	295:16:8994:9028	499592	0	True				
ANR	499770	AssignmentExpression	S ( i ) += ( DD_ ( i ) + DD_ ( i - 1 ) ) >> 1		499592	0		+=			
ANR	499771	CallExpression	S ( i )		499592	0					
ANR	499772	Callee	S		499592	0					
ANR	499773	Identifier	S		499592	0					
ANR	499774	ArgumentList	i		499592	1					
ANR	499775	Argument	i		499592	0					
ANR	499776	Identifier	i		499592	0					
ANR	499777	ShiftExpression	( DD_ ( i ) + DD_ ( i - 1 ) ) >> 1		499592	1		>>			
ANR	499778	AdditiveExpression	DD_ ( i ) + DD_ ( i - 1 )		499592	0		+			
ANR	499779	CallExpression	DD_ ( i )		499592	0					
ANR	499780	Callee	DD_		499592	0					
ANR	499781	Identifier	DD_		499592	0					
ANR	499782	ArgumentList	i		499592	1					
ANR	499783	Argument	i		499592	0					
ANR	499784	Identifier	i		499592	0					
ANR	499785	CallExpression	DD_ ( i - 1 )		499592	1					
ANR	499786	Callee	DD_		499592	0					
ANR	499787	Identifier	DD_		499592	0					
ANR	499788	ArgumentList	i - 1		499592	1					
ANR	499789	Argument	i - 1		499592	0					
ANR	499790	AdditiveExpression	i - 1		499592	0		-			
ANR	499791	Identifier	i		499592	0					
ANR	499792	PrimaryExpression	1		499592	1					
ANR	499793	PrimaryExpression	1		499592	1					
ANR	499794	ReturnType	static void		499592	1					
ANR	499795	Identifier	dwt_decode_1_		499592	2					
ANR	499796	ParameterList	"int * a , int dn , int sn , int cas"		499592	3					
ANR	499797	Parameter	int * a	274:26:8360:8365	499592	0	True				
ANR	499798	ParameterType	int *		499592	0					
ANR	499799	Identifier	a		499592	1					
ANR	499800	Parameter	int dn	274:34:8368:8373	499592	1	True				
ANR	499801	ParameterType	int		499592	0					
ANR	499802	Identifier	dn		499592	1					
ANR	499803	Parameter	int sn	274:42:8376:8381	499592	2	True				
ANR	499804	ParameterType	int		499592	0					
ANR	499805	Identifier	sn		499592	1					
ANR	499806	Parameter	int cas	274:50:8384:8390	499592	3	True				
ANR	499807	ParameterType	int		499592	0					
ANR	499808	Identifier	cas		499592	1					
ANR	499809	CFGEntryNode	ENTRY		499592		True				
ANR	499810	CFGExitNode	EXIT		499592		True				
ANR	499811	Symbol	a		499592						
ANR	499812	Symbol	S		499592						
ANR	499813	Symbol	cas		499592						
ANR	499814	Symbol	D		499592						
ANR	499815	Symbol	i		499592						
ANR	499816	Symbol	dn		499592						
ANR	499817	Symbol	sn		499592						
ANR	499818	Symbol	D_		499592						
ANR	499819	Symbol	S_		499592						
ANR	499820	Symbol	SS_		499592						
ANR	499821	Symbol	DD_		499592						
ANR	499822	Function	dwt_decode_1	304:0:9193:9279							
ANR	499823	FunctionDef	dwt_decode_1 (dwt_t * v)		499822	0					
ANR	499824	CompoundStatement		305:0:9228:9279	499822	0					
ANR	499825	ExpressionStatement	"dwt_decode_1_ ( v -> mem , v -> dn , v -> sn , v -> cas )"	306:4:9234:9277	499822	0	True				
ANR	499826	CallExpression	"dwt_decode_1_ ( v -> mem , v -> dn , v -> sn , v -> cas )"		499822	0					
ANR	499827	Callee	dwt_decode_1_		499822	0					
ANR	499828	Identifier	dwt_decode_1_		499822	0					
ANR	499829	ArgumentList	v -> mem		499822	1					
ANR	499830	Argument	v -> mem		499822	0					
ANR	499831	PtrMemberAccess	v -> mem		499822	0					
ANR	499832	Identifier	v		499822	0					
ANR	499833	Identifier	mem		499822	1					
ANR	499834	Argument	v -> dn		499822	1					
ANR	499835	PtrMemberAccess	v -> dn		499822	0					
ANR	499836	Identifier	v		499822	0					
ANR	499837	Identifier	dn		499822	1					
ANR	499838	Argument	v -> sn		499822	2					
ANR	499839	PtrMemberAccess	v -> sn		499822	0					
ANR	499840	Identifier	v		499822	0					
ANR	499841	Identifier	sn		499822	1					
ANR	499842	Argument	v -> cas		499822	3					
ANR	499843	PtrMemberAccess	v -> cas		499822	0					
ANR	499844	Identifier	v		499822	0					
ANR	499845	Identifier	cas		499822	1					
ANR	499846	ReturnType	static void		499822	1					
ANR	499847	Identifier	dwt_decode_1		499822	2					
ANR	499848	ParameterList	dwt_t * v		499822	3					
ANR	499849	Parameter	dwt_t * v	304:25:9218:9225	499822	0	True				
ANR	499850	ParameterType	dwt_t *		499822	0					
ANR	499851	Identifier	v		499822	1					
ANR	499852	CFGEntryNode	ENTRY		499822		True				
ANR	499853	CFGExitNode	EXIT		499822		True				
ANR	499854	Symbol	* v		499822						
ANR	499855	Symbol	v -> sn		499822						
ANR	499856	Symbol	v -> cas		499822						
ANR	499857	Symbol	v		499822						
ANR	499858	Symbol	v -> mem		499822						
ANR	499859	Symbol	v -> dn		499822						
ANR	499860	Function	dwt_encode_1_real	312:0:9414:11013							
ANR	499861	FunctionDef	"dwt_encode_1_real (int * a , int dn , int sn , int cas)"		499860	0					
ANR	499862	CompoundStatement		313:0:9477:11013	499860	0					
ANR	499863	IdentifierDeclStatement	int i ;	314:4:9483:9488	499860	0	True				
ANR	499864	IdentifierDecl	i		499860	0					
ANR	499865	IdentifierDeclType	int		499860	0					
ANR	499866	Identifier	i		499860	1					
ANR	499867	IfStatement	if ( ! cas )		499860	1					
ANR	499868	Condition	! cas	315:8:9498:9501	499860	0	True				
ANR	499869	UnaryOperationExpression	! cas		499860	0					
ANR	499870	UnaryOperator	!		499860	0					
ANR	499871	Identifier	cas		499860	1					
ANR	499872	CompoundStatement		3:14:26:26	499860	1					
ANR	499873	IfStatement	if ( ( dn > 0 ) || ( sn > 1 ) )		499860	0					
ANR	499874	Condition	( dn > 0 ) || ( sn > 1 )	316:12:9518:9537	499860	0	True				
ANR	499875	OrExpression	( dn > 0 ) || ( sn > 1 )		499860	0		||			
ANR	499876	RelationalExpression	dn > 0		499860	0		>			
ANR	499877	Identifier	dn		499860	0					
ANR	499878	PrimaryExpression	0		499860	1					
ANR	499879	RelationalExpression	sn > 1		499860	1		>			
ANR	499880	Identifier	sn		499860	0					
ANR	499881	PrimaryExpression	1		499860	1					
ANR	499882	CompoundStatement		4:34:62:62	499860	1					
ANR	499883	ForStatement	for ( i = 0 ; i < dn ; i ++ )		499860	0					
ANR	499884	ForInit	i = 0 ;	317:17:9589:9594	499860	0	True				
ANR	499885	AssignmentExpression	i = 0		499860	0		=			
ANR	499886	Identifier	i		499860	0					
ANR	499887	PrimaryExpression	0		499860	1					
ANR	499888	Condition	i < dn	317:24:9596:9601	499860	1	True				
ANR	499889	RelationalExpression	i < dn		499860	0		<			
ANR	499890	Identifier	i		499860	0					
ANR	499891	Identifier	dn		499860	1					
ANR	499892	PostIncDecOperationExpression	i ++	317:32:9604:9606	499860	2	True				
ANR	499893	Identifier	i		499860	0					
ANR	499894	IncDec	++		499860	1					
ANR	499895	CompoundStatement		5:37:131:131	499860	3					
ANR	499896	ExpressionStatement	"D ( i ) -= fix_mul ( S_ ( i ) + S_ ( i + 1 ) , 12993 )"	318:16:9627:9668	499860	0	True				
ANR	499897	AssignmentExpression	"D ( i ) -= fix_mul ( S_ ( i ) + S_ ( i + 1 ) , 12993 )"		499860	0		-=			
ANR	499898	CallExpression	D ( i )		499860	0					
ANR	499899	Callee	D		499860	0					
ANR	499900	Identifier	D		499860	0					
ANR	499901	ArgumentList	i		499860	1					
ANR	499902	Argument	i		499860	0					
ANR	499903	Identifier	i		499860	0					
ANR	499904	CallExpression	"fix_mul ( S_ ( i ) + S_ ( i + 1 ) , 12993 )"		499860	1					
ANR	499905	Callee	fix_mul		499860	0					
ANR	499906	Identifier	fix_mul		499860	0					
ANR	499907	ArgumentList	S_ ( i ) + S_ ( i + 1 )		499860	1					
ANR	499908	Argument	S_ ( i ) + S_ ( i + 1 )		499860	0					
ANR	499909	AdditiveExpression	S_ ( i ) + S_ ( i + 1 )		499860	0		+			
ANR	499910	CallExpression	S_ ( i )		499860	0					
ANR	499911	Callee	S_		499860	0					
ANR	499912	Identifier	S_		499860	0					
ANR	499913	ArgumentList	i		499860	1					
ANR	499914	Argument	i		499860	0					
ANR	499915	Identifier	i		499860	0					
ANR	499916	CallExpression	S_ ( i + 1 )		499860	1					
ANR	499917	Callee	S_		499860	0					
ANR	499918	Identifier	S_		499860	0					
ANR	499919	ArgumentList	i + 1		499860	1					
ANR	499920	Argument	i + 1		499860	0					
ANR	499921	AdditiveExpression	i + 1		499860	0		+			
ANR	499922	Identifier	i		499860	0					
ANR	499923	PrimaryExpression	1		499860	1					
ANR	499924	Argument	12993		499860	1					
ANR	499925	PrimaryExpression	12993		499860	0					
ANR	499926	ForStatement	for ( i = 0 ; i < sn ; i ++ )		499860	1					
ANR	499927	ForInit	i = 0 ;	320:17:9701:9706	499860	0	True				
ANR	499928	AssignmentExpression	i = 0		499860	0		=			
ANR	499929	Identifier	i		499860	0					
ANR	499930	PrimaryExpression	0		499860	1					
ANR	499931	Condition	i < sn	320:24:9708:9713	499860	1	True				
ANR	499932	RelationalExpression	i < sn		499860	0		<			
ANR	499933	Identifier	i		499860	0					
ANR	499934	Identifier	sn		499860	1					
ANR	499935	PostIncDecOperationExpression	i ++	320:32:9716:9718	499860	2	True				
ANR	499936	Identifier	i		499860	0					
ANR	499937	IncDec	++		499860	1					
ANR	499938	CompoundStatement		8:37:243:243	499860	3					
ANR	499939	ExpressionStatement	"S ( i ) -= fix_mul ( D_ ( i - 1 ) + D_ ( i ) , 434 )"	321:16:9739:9778	499860	0	True				
ANR	499940	AssignmentExpression	"S ( i ) -= fix_mul ( D_ ( i - 1 ) + D_ ( i ) , 434 )"		499860	0		-=			
ANR	499941	CallExpression	S ( i )		499860	0					
ANR	499942	Callee	S		499860	0					
ANR	499943	Identifier	S		499860	0					
ANR	499944	ArgumentList	i		499860	1					
ANR	499945	Argument	i		499860	0					
ANR	499946	Identifier	i		499860	0					
ANR	499947	CallExpression	"fix_mul ( D_ ( i - 1 ) + D_ ( i ) , 434 )"		499860	1					
ANR	499948	Callee	fix_mul		499860	0					
ANR	499949	Identifier	fix_mul		499860	0					
ANR	499950	ArgumentList	D_ ( i - 1 ) + D_ ( i )		499860	1					
ANR	499951	Argument	D_ ( i - 1 ) + D_ ( i )		499860	0					
ANR	499952	AdditiveExpression	D_ ( i - 1 ) + D_ ( i )		499860	0		+			
ANR	499953	CallExpression	D_ ( i - 1 )		499860	0					
ANR	499954	Callee	D_		499860	0					
ANR	499955	Identifier	D_		499860	0					
ANR	499956	ArgumentList	i - 1		499860	1					
ANR	499957	Argument	i - 1		499860	0					
ANR	499958	AdditiveExpression	i - 1		499860	0		-			
ANR	499959	Identifier	i		499860	0					
ANR	499960	PrimaryExpression	1		499860	1					
ANR	499961	CallExpression	D_ ( i )		499860	1					
ANR	499962	Callee	D_		499860	0					
ANR	499963	Identifier	D_		499860	0					
ANR	499964	ArgumentList	i		499860	1					
ANR	499965	Argument	i		499860	0					
ANR	499966	Identifier	i		499860	0					
ANR	499967	Argument	434		499860	1					
ANR	499968	PrimaryExpression	434		499860	0					
ANR	499969	ForStatement	for ( i = 0 ; i < dn ; i ++ )		499860	2					
ANR	499970	ForInit	i = 0 ;	323:17:9811:9816	499860	0	True				
ANR	499971	AssignmentExpression	i = 0		499860	0		=			
ANR	499972	Identifier	i		499860	0					
ANR	499973	PrimaryExpression	0		499860	1					
ANR	499974	Condition	i < dn	323:24:9818:9823	499860	1	True				
ANR	499975	RelationalExpression	i < dn		499860	0		<			
ANR	499976	Identifier	i		499860	0					
ANR	499977	Identifier	dn		499860	1					
ANR	499978	PostIncDecOperationExpression	i ++	323:32:9826:9828	499860	2	True				
ANR	499979	Identifier	i		499860	0					
ANR	499980	IncDec	++		499860	1					
ANR	499981	CompoundStatement		11:37:353:353	499860	3					
ANR	499982	ExpressionStatement	"D ( i ) += fix_mul ( S_ ( i ) + S_ ( i + 1 ) , 7233 )"	324:16:9849:9889	499860	0	True				
ANR	499983	AssignmentExpression	"D ( i ) += fix_mul ( S_ ( i ) + S_ ( i + 1 ) , 7233 )"		499860	0		+=			
ANR	499984	CallExpression	D ( i )		499860	0					
ANR	499985	Callee	D		499860	0					
ANR	499986	Identifier	D		499860	0					
ANR	499987	ArgumentList	i		499860	1					
ANR	499988	Argument	i		499860	0					
ANR	499989	Identifier	i		499860	0					
ANR	499990	CallExpression	"fix_mul ( S_ ( i ) + S_ ( i + 1 ) , 7233 )"		499860	1					
ANR	499991	Callee	fix_mul		499860	0					
ANR	499992	Identifier	fix_mul		499860	0					
ANR	499993	ArgumentList	S_ ( i ) + S_ ( i + 1 )		499860	1					
ANR	499994	Argument	S_ ( i ) + S_ ( i + 1 )		499860	0					
ANR	499995	AdditiveExpression	S_ ( i ) + S_ ( i + 1 )		499860	0		+			
ANR	499996	CallExpression	S_ ( i )		499860	0					
ANR	499997	Callee	S_		499860	0					
ANR	499998	Identifier	S_		499860	0					
ANR	499999	ArgumentList	i		499860	1					
ANR	500000	Argument	i		499860	0					
ANR	500001	Identifier	i		499860	0					
ANR	500002	CallExpression	S_ ( i + 1 )		499860	1					
ANR	500003	Callee	S_		499860	0					
ANR	500004	Identifier	S_		499860	0					
ANR	500005	ArgumentList	i + 1		499860	1					
ANR	500006	Argument	i + 1		499860	0					
ANR	500007	AdditiveExpression	i + 1		499860	0		+			
ANR	500008	Identifier	i		499860	0					
ANR	500009	PrimaryExpression	1		499860	1					
ANR	500010	Argument	7233		499860	1					
ANR	500011	PrimaryExpression	7233		499860	0					
ANR	500012	ForStatement	for ( i = 0 ; i < sn ; i ++ )		499860	3					
ANR	500013	ForInit	i = 0 ;	326:17:9922:9927	499860	0	True				
ANR	500014	AssignmentExpression	i = 0		499860	0		=			
ANR	500015	Identifier	i		499860	0					
ANR	500016	PrimaryExpression	0		499860	1					
ANR	500017	Condition	i < sn	326:24:9929:9934	499860	1	True				
ANR	500018	RelationalExpression	i < sn		499860	0		<			
ANR	500019	Identifier	i		499860	0					
ANR	500020	Identifier	sn		499860	1					
ANR	500021	PostIncDecOperationExpression	i ++	326:32:9937:9939	499860	2	True				
ANR	500022	Identifier	i		499860	0					
ANR	500023	IncDec	++		499860	1					
ANR	500024	CompoundStatement		14:37:464:464	499860	3					
ANR	500025	ExpressionStatement	"S ( i ) += fix_mul ( D_ ( i - 1 ) + D_ ( i ) , 3633 )"	327:16:9960:10000	499860	0	True				
ANR	500026	AssignmentExpression	"S ( i ) += fix_mul ( D_ ( i - 1 ) + D_ ( i ) , 3633 )"		499860	0		+=			
ANR	500027	CallExpression	S ( i )		499860	0					
ANR	500028	Callee	S		499860	0					
ANR	500029	Identifier	S		499860	0					
ANR	500030	ArgumentList	i		499860	1					
ANR	500031	Argument	i		499860	0					
ANR	500032	Identifier	i		499860	0					
ANR	500033	CallExpression	"fix_mul ( D_ ( i - 1 ) + D_ ( i ) , 3633 )"		499860	1					
ANR	500034	Callee	fix_mul		499860	0					
ANR	500035	Identifier	fix_mul		499860	0					
ANR	500036	ArgumentList	D_ ( i - 1 ) + D_ ( i )		499860	1					
ANR	500037	Argument	D_ ( i - 1 ) + D_ ( i )		499860	0					
ANR	500038	AdditiveExpression	D_ ( i - 1 ) + D_ ( i )		499860	0		+			
ANR	500039	CallExpression	D_ ( i - 1 )		499860	0					
ANR	500040	Callee	D_		499860	0					
ANR	500041	Identifier	D_		499860	0					
ANR	500042	ArgumentList	i - 1		499860	1					
ANR	500043	Argument	i - 1		499860	0					
ANR	500044	AdditiveExpression	i - 1		499860	0		-			
ANR	500045	Identifier	i		499860	0					
ANR	500046	PrimaryExpression	1		499860	1					
ANR	500047	CallExpression	D_ ( i )		499860	1					
ANR	500048	Callee	D_		499860	0					
ANR	500049	Identifier	D_		499860	0					
ANR	500050	ArgumentList	i		499860	1					
ANR	500051	Argument	i		499860	0					
ANR	500052	Identifier	i		499860	0					
ANR	500053	Argument	3633		499860	1					
ANR	500054	PrimaryExpression	3633		499860	0					
ANR	500055	ForStatement	for ( i = 0 ; i < dn ; i ++ )		499860	4					
ANR	500056	ForInit	i = 0 ;	329:17:10033:10038	499860	0	True				
ANR	500057	AssignmentExpression	i = 0		499860	0		=			
ANR	500058	Identifier	i		499860	0					
ANR	500059	PrimaryExpression	0		499860	1					
ANR	500060	Condition	i < dn	329:24:10040:10045	499860	1	True				
ANR	500061	RelationalExpression	i < dn		499860	0		<			
ANR	500062	Identifier	i		499860	0					
ANR	500063	Identifier	dn		499860	1					
ANR	500064	PostIncDecOperationExpression	i ++	329:32:10048:10050	499860	2	True				
ANR	500065	Identifier	i		499860	0					
ANR	500066	IncDec	++		499860	1					
ANR	500067	CompoundStatement		17:37:575:575	499860	3					
ANR	500068	ExpressionStatement	"D ( i ) = fix_mul ( D ( i ) , 5038 )"	330:16:10071:10097	499860	0	True				
ANR	500069	AssignmentExpression	"D ( i ) = fix_mul ( D ( i ) , 5038 )"		499860	0		=			
ANR	500070	CallExpression	D ( i )		499860	0					
ANR	500071	Callee	D		499860	0					
ANR	500072	Identifier	D		499860	0					
ANR	500073	ArgumentList	i		499860	1					
ANR	500074	Argument	i		499860	0					
ANR	500075	Identifier	i		499860	0					
ANR	500076	CallExpression	"fix_mul ( D ( i ) , 5038 )"		499860	1					
ANR	500077	Callee	fix_mul		499860	0					
ANR	500078	Identifier	fix_mul		499860	0					
ANR	500079	ArgumentList	D ( i )		499860	1					
ANR	500080	Argument	D ( i )		499860	0					
ANR	500081	CallExpression	D ( i )		499860	0					
ANR	500082	Callee	D		499860	0					
ANR	500083	Identifier	D		499860	0					
ANR	500084	ArgumentList	i		499860	1					
ANR	500085	Argument	i		499860	0					
ANR	500086	Identifier	i		499860	0					
ANR	500087	Argument	5038		499860	1					
ANR	500088	PrimaryExpression	5038		499860	0					
ANR	500089	ForStatement	for ( i = 0 ; i < sn ; i ++ )		499860	5					
ANR	500090	ForInit	i = 0 ;	332:17:10143:10148	499860	0	True				
ANR	500091	AssignmentExpression	i = 0		499860	0		=			
ANR	500092	Identifier	i		499860	0					
ANR	500093	PrimaryExpression	0		499860	1					
ANR	500094	Condition	i < sn	332:24:10150:10155	499860	1	True				
ANR	500095	RelationalExpression	i < sn		499860	0		<			
ANR	500096	Identifier	i		499860	0					
ANR	500097	Identifier	sn		499860	1					
ANR	500098	PostIncDecOperationExpression	i ++	332:32:10158:10160	499860	2	True				
ANR	500099	Identifier	i		499860	0					
ANR	500100	IncDec	++		499860	1					
ANR	500101	CompoundStatement		20:37:685:685	499860	3					
ANR	500102	ExpressionStatement	"S ( i ) = fix_mul ( S ( i ) , 6659 )"	333:16:10181:10207	499860	0	True				
ANR	500103	AssignmentExpression	"S ( i ) = fix_mul ( S ( i ) , 6659 )"		499860	0		=			
ANR	500104	CallExpression	S ( i )		499860	0					
ANR	500105	Callee	S		499860	0					
ANR	500106	Identifier	S		499860	0					
ANR	500107	ArgumentList	i		499860	1					
ANR	500108	Argument	i		499860	0					
ANR	500109	Identifier	i		499860	0					
ANR	500110	CallExpression	"fix_mul ( S ( i ) , 6659 )"		499860	1					
ANR	500111	Callee	fix_mul		499860	0					
ANR	500112	Identifier	fix_mul		499860	0					
ANR	500113	ArgumentList	S ( i )		499860	1					
ANR	500114	Argument	S ( i )		499860	0					
ANR	500115	CallExpression	S ( i )		499860	0					
ANR	500116	Callee	S		499860	0					
ANR	500117	Identifier	S		499860	0					
ANR	500118	ArgumentList	i		499860	1					
ANR	500119	Argument	i		499860	0					
ANR	500120	Identifier	i		499860	0					
ANR	500121	Argument	6659		499860	1					
ANR	500122	PrimaryExpression	6659		499860	0					
ANR	500123	ElseStatement	else		499860	0					
ANR	500124	CompoundStatement		24:11:779:779	499860	0					
ANR	500125	IfStatement	if ( ( sn > 0 ) || ( dn > 1 ) )		499860	0					
ANR	500126	Condition	( sn > 0 ) || ( dn > 1 )	337:12:10271:10290	499860	0	True				
ANR	500127	OrExpression	( sn > 0 ) || ( dn > 1 )		499860	0		||			
ANR	500128	RelationalExpression	sn > 0		499860	0		>			
ANR	500129	Identifier	sn		499860	0					
ANR	500130	PrimaryExpression	0		499860	1					
ANR	500131	RelationalExpression	dn > 1		499860	1		>			
ANR	500132	Identifier	dn		499860	0					
ANR	500133	PrimaryExpression	1		499860	1					
ANR	500134	CompoundStatement		25:34:815:815	499860	1					
ANR	500135	ForStatement	for ( i = 0 ; i < dn ; i ++ )		499860	0					
ANR	500136	ForInit	i = 0 ;	338:17:10342:10347	499860	0	True				
ANR	500137	AssignmentExpression	i = 0		499860	0		=			
ANR	500138	Identifier	i		499860	0					
ANR	500139	PrimaryExpression	0		499860	1					
ANR	500140	Condition	i < dn	338:24:10349:10354	499860	1	True				
ANR	500141	RelationalExpression	i < dn		499860	0		<			
ANR	500142	Identifier	i		499860	0					
ANR	500143	Identifier	dn		499860	1					
ANR	500144	PostIncDecOperationExpression	i ++	338:32:10357:10359	499860	2	True				
ANR	500145	Identifier	i		499860	0					
ANR	500146	IncDec	++		499860	1					
ANR	500147	CompoundStatement		26:37:884:884	499860	3					
ANR	500148	ExpressionStatement	"S ( i ) -= fix_mul ( DD_ ( i ) + DD_ ( i - 1 ) , 12993 )"	339:16:10380:10423	499860	0	True				
ANR	500149	AssignmentExpression	"S ( i ) -= fix_mul ( DD_ ( i ) + DD_ ( i - 1 ) , 12993 )"		499860	0		-=			
ANR	500150	CallExpression	S ( i )		499860	0					
ANR	500151	Callee	S		499860	0					
ANR	500152	Identifier	S		499860	0					
ANR	500153	ArgumentList	i		499860	1					
ANR	500154	Argument	i		499860	0					
ANR	500155	Identifier	i		499860	0					
ANR	500156	CallExpression	"fix_mul ( DD_ ( i ) + DD_ ( i - 1 ) , 12993 )"		499860	1					
ANR	500157	Callee	fix_mul		499860	0					
ANR	500158	Identifier	fix_mul		499860	0					
ANR	500159	ArgumentList	DD_ ( i ) + DD_ ( i - 1 )		499860	1					
ANR	500160	Argument	DD_ ( i ) + DD_ ( i - 1 )		499860	0					
ANR	500161	AdditiveExpression	DD_ ( i ) + DD_ ( i - 1 )		499860	0		+			
ANR	500162	CallExpression	DD_ ( i )		499860	0					
ANR	500163	Callee	DD_		499860	0					
ANR	500164	Identifier	DD_		499860	0					
ANR	500165	ArgumentList	i		499860	1					
ANR	500166	Argument	i		499860	0					
ANR	500167	Identifier	i		499860	0					
ANR	500168	CallExpression	DD_ ( i - 1 )		499860	1					
ANR	500169	Callee	DD_		499860	0					
ANR	500170	Identifier	DD_		499860	0					
ANR	500171	ArgumentList	i - 1		499860	1					
ANR	500172	Argument	i - 1		499860	0					
ANR	500173	AdditiveExpression	i - 1		499860	0		-			
ANR	500174	Identifier	i		499860	0					
ANR	500175	PrimaryExpression	1		499860	1					
ANR	500176	Argument	12993		499860	1					
ANR	500177	PrimaryExpression	12993		499860	0					
ANR	500178	ForStatement	for ( i = 0 ; i < sn ; i ++ )		499860	1					
ANR	500179	ForInit	i = 0 ;	341:17:10456:10461	499860	0	True				
ANR	500180	AssignmentExpression	i = 0		499860	0		=			
ANR	500181	Identifier	i		499860	0					
ANR	500182	PrimaryExpression	0		499860	1					
ANR	500183	Condition	i < sn	341:24:10463:10468	499860	1	True				
ANR	500184	RelationalExpression	i < sn		499860	0		<			
ANR	500185	Identifier	i		499860	0					
ANR	500186	Identifier	sn		499860	1					
ANR	500187	PostIncDecOperationExpression	i ++	341:32:10471:10473	499860	2	True				
ANR	500188	Identifier	i		499860	0					
ANR	500189	IncDec	++		499860	1					
ANR	500190	CompoundStatement		29:37:998:998	499860	3					
ANR	500191	ExpressionStatement	"D ( i ) -= fix_mul ( SS_ ( i ) + SS_ ( i + 1 ) , 434 )"	342:16:10494:10535	499860	0	True				
ANR	500192	AssignmentExpression	"D ( i ) -= fix_mul ( SS_ ( i ) + SS_ ( i + 1 ) , 434 )"		499860	0		-=			
ANR	500193	CallExpression	D ( i )		499860	0					
ANR	500194	Callee	D		499860	0					
ANR	500195	Identifier	D		499860	0					
ANR	500196	ArgumentList	i		499860	1					
ANR	500197	Argument	i		499860	0					
ANR	500198	Identifier	i		499860	0					
ANR	500199	CallExpression	"fix_mul ( SS_ ( i ) + SS_ ( i + 1 ) , 434 )"		499860	1					
ANR	500200	Callee	fix_mul		499860	0					
ANR	500201	Identifier	fix_mul		499860	0					
ANR	500202	ArgumentList	SS_ ( i ) + SS_ ( i + 1 )		499860	1					
ANR	500203	Argument	SS_ ( i ) + SS_ ( i + 1 )		499860	0					
ANR	500204	AdditiveExpression	SS_ ( i ) + SS_ ( i + 1 )		499860	0		+			
ANR	500205	CallExpression	SS_ ( i )		499860	0					
ANR	500206	Callee	SS_		499860	0					
ANR	500207	Identifier	SS_		499860	0					
ANR	500208	ArgumentList	i		499860	1					
ANR	500209	Argument	i		499860	0					
ANR	500210	Identifier	i		499860	0					
ANR	500211	CallExpression	SS_ ( i + 1 )		499860	1					
ANR	500212	Callee	SS_		499860	0					
ANR	500213	Identifier	SS_		499860	0					
ANR	500214	ArgumentList	i + 1		499860	1					
ANR	500215	Argument	i + 1		499860	0					
ANR	500216	AdditiveExpression	i + 1		499860	0		+			
ANR	500217	Identifier	i		499860	0					
ANR	500218	PrimaryExpression	1		499860	1					
ANR	500219	Argument	434		499860	1					
ANR	500220	PrimaryExpression	434		499860	0					
ANR	500221	ForStatement	for ( i = 0 ; i < dn ; i ++ )		499860	2					
ANR	500222	ForInit	i = 0 ;	344:17:10568:10573	499860	0	True				
ANR	500223	AssignmentExpression	i = 0		499860	0		=			
ANR	500224	Identifier	i		499860	0					
ANR	500225	PrimaryExpression	0		499860	1					
ANR	500226	Condition	i < dn	344:24:10575:10580	499860	1	True				
ANR	500227	RelationalExpression	i < dn		499860	0		<			
ANR	500228	Identifier	i		499860	0					
ANR	500229	Identifier	dn		499860	1					
ANR	500230	PostIncDecOperationExpression	i ++	344:32:10583:10585	499860	2	True				
ANR	500231	Identifier	i		499860	0					
ANR	500232	IncDec	++		499860	1					
ANR	500233	CompoundStatement		32:37:1110:1110	499860	3					
ANR	500234	ExpressionStatement	"S ( i ) += fix_mul ( DD_ ( i ) + DD_ ( i - 1 ) , 7233 )"	345:16:10606:10648	499860	0	True				
ANR	500235	AssignmentExpression	"S ( i ) += fix_mul ( DD_ ( i ) + DD_ ( i - 1 ) , 7233 )"		499860	0		+=			
ANR	500236	CallExpression	S ( i )		499860	0					
ANR	500237	Callee	S		499860	0					
ANR	500238	Identifier	S		499860	0					
ANR	500239	ArgumentList	i		499860	1					
ANR	500240	Argument	i		499860	0					
ANR	500241	Identifier	i		499860	0					
ANR	500242	CallExpression	"fix_mul ( DD_ ( i ) + DD_ ( i - 1 ) , 7233 )"		499860	1					
ANR	500243	Callee	fix_mul		499860	0					
ANR	500244	Identifier	fix_mul		499860	0					
ANR	500245	ArgumentList	DD_ ( i ) + DD_ ( i - 1 )		499860	1					
ANR	500246	Argument	DD_ ( i ) + DD_ ( i - 1 )		499860	0					
ANR	500247	AdditiveExpression	DD_ ( i ) + DD_ ( i - 1 )		499860	0		+			
ANR	500248	CallExpression	DD_ ( i )		499860	0					
ANR	500249	Callee	DD_		499860	0					
ANR	500250	Identifier	DD_		499860	0					
ANR	500251	ArgumentList	i		499860	1					
ANR	500252	Argument	i		499860	0					
ANR	500253	Identifier	i		499860	0					
ANR	500254	CallExpression	DD_ ( i - 1 )		499860	1					
ANR	500255	Callee	DD_		499860	0					
ANR	500256	Identifier	DD_		499860	0					
ANR	500257	ArgumentList	i - 1		499860	1					
ANR	500258	Argument	i - 1		499860	0					
ANR	500259	AdditiveExpression	i - 1		499860	0		-			
ANR	500260	Identifier	i		499860	0					
ANR	500261	PrimaryExpression	1		499860	1					
ANR	500262	Argument	7233		499860	1					
ANR	500263	PrimaryExpression	7233		499860	0					
ANR	500264	ForStatement	for ( i = 0 ; i < sn ; i ++ )		499860	3					
ANR	500265	ForInit	i = 0 ;	347:17:10681:10686	499860	0	True				
ANR	500266	AssignmentExpression	i = 0		499860	0		=			
ANR	500267	Identifier	i		499860	0					
ANR	500268	PrimaryExpression	0		499860	1					
ANR	500269	Condition	i < sn	347:24:10688:10693	499860	1	True				
ANR	500270	RelationalExpression	i < sn		499860	0		<			
ANR	500271	Identifier	i		499860	0					
ANR	500272	Identifier	sn		499860	1					
ANR	500273	PostIncDecOperationExpression	i ++	347:32:10696:10698	499860	2	True				
ANR	500274	Identifier	i		499860	0					
ANR	500275	IncDec	++		499860	1					
ANR	500276	CompoundStatement		35:37:1223:1223	499860	3					
ANR	500277	ExpressionStatement	"D ( i ) += fix_mul ( SS_ ( i ) + SS_ ( i + 1 ) , 3633 )"	348:16:10719:10761	499860	0	True				
ANR	500278	AssignmentExpression	"D ( i ) += fix_mul ( SS_ ( i ) + SS_ ( i + 1 ) , 3633 )"		499860	0		+=			
ANR	500279	CallExpression	D ( i )		499860	0					
ANR	500280	Callee	D		499860	0					
ANR	500281	Identifier	D		499860	0					
ANR	500282	ArgumentList	i		499860	1					
ANR	500283	Argument	i		499860	0					
ANR	500284	Identifier	i		499860	0					
ANR	500285	CallExpression	"fix_mul ( SS_ ( i ) + SS_ ( i + 1 ) , 3633 )"		499860	1					
ANR	500286	Callee	fix_mul		499860	0					
ANR	500287	Identifier	fix_mul		499860	0					
ANR	500288	ArgumentList	SS_ ( i ) + SS_ ( i + 1 )		499860	1					
ANR	500289	Argument	SS_ ( i ) + SS_ ( i + 1 )		499860	0					
ANR	500290	AdditiveExpression	SS_ ( i ) + SS_ ( i + 1 )		499860	0		+			
ANR	500291	CallExpression	SS_ ( i )		499860	0					
ANR	500292	Callee	SS_		499860	0					
ANR	500293	Identifier	SS_		499860	0					
ANR	500294	ArgumentList	i		499860	1					
ANR	500295	Argument	i		499860	0					
ANR	500296	Identifier	i		499860	0					
ANR	500297	CallExpression	SS_ ( i + 1 )		499860	1					
ANR	500298	Callee	SS_		499860	0					
ANR	500299	Identifier	SS_		499860	0					
ANR	500300	ArgumentList	i + 1		499860	1					
ANR	500301	Argument	i + 1		499860	0					
ANR	500302	AdditiveExpression	i + 1		499860	0		+			
ANR	500303	Identifier	i		499860	0					
ANR	500304	PrimaryExpression	1		499860	1					
ANR	500305	Argument	3633		499860	1					
ANR	500306	PrimaryExpression	3633		499860	0					
ANR	500307	ForStatement	for ( i = 0 ; i < dn ; i ++ )		499860	4					
ANR	500308	ForInit	i = 0 ;	350:17:10794:10799	499860	0	True				
ANR	500309	AssignmentExpression	i = 0		499860	0		=			
ANR	500310	Identifier	i		499860	0					
ANR	500311	PrimaryExpression	0		499860	1					
ANR	500312	Condition	i < dn	350:24:10801:10806	499860	1	True				
ANR	500313	RelationalExpression	i < dn		499860	0		<			
ANR	500314	Identifier	i		499860	0					
ANR	500315	Identifier	dn		499860	1					
ANR	500316	PostIncDecOperationExpression	i ++	350:32:10809:10811	499860	2	True				
ANR	500317	Identifier	i		499860	0					
ANR	500318	IncDec	++		499860	1					
ANR	500319	CompoundStatement		38:37:1336:1336	499860	3					
ANR	500320	ExpressionStatement	"S ( i ) = fix_mul ( S ( i ) , 5038 )"	351:16:10832:10858	499860	0	True				
ANR	500321	AssignmentExpression	"S ( i ) = fix_mul ( S ( i ) , 5038 )"		499860	0		=			
ANR	500322	CallExpression	S ( i )		499860	0					
ANR	500323	Callee	S		499860	0					
ANR	500324	Identifier	S		499860	0					
ANR	500325	ArgumentList	i		499860	1					
ANR	500326	Argument	i		499860	0					
ANR	500327	Identifier	i		499860	0					
ANR	500328	CallExpression	"fix_mul ( S ( i ) , 5038 )"		499860	1					
ANR	500329	Callee	fix_mul		499860	0					
ANR	500330	Identifier	fix_mul		499860	0					
ANR	500331	ArgumentList	S ( i )		499860	1					
ANR	500332	Argument	S ( i )		499860	0					
ANR	500333	CallExpression	S ( i )		499860	0					
ANR	500334	Callee	S		499860	0					
ANR	500335	Identifier	S		499860	0					
ANR	500336	ArgumentList	i		499860	1					
ANR	500337	Argument	i		499860	0					
ANR	500338	Identifier	i		499860	0					
ANR	500339	Argument	5038		499860	1					
ANR	500340	PrimaryExpression	5038		499860	0					
ANR	500341	ForStatement	for ( i = 0 ; i < sn ; i ++ )		499860	5					
ANR	500342	ForInit	i = 0 ;	353:17:10904:10909	499860	0	True				
ANR	500343	AssignmentExpression	i = 0		499860	0		=			
ANR	500344	Identifier	i		499860	0					
ANR	500345	PrimaryExpression	0		499860	1					
ANR	500346	Condition	i < sn	353:24:10911:10916	499860	1	True				
ANR	500347	RelationalExpression	i < sn		499860	0		<			
ANR	500348	Identifier	i		499860	0					
ANR	500349	Identifier	sn		499860	1					
ANR	500350	PostIncDecOperationExpression	i ++	353:32:10919:10921	499860	2	True				
ANR	500351	Identifier	i		499860	0					
ANR	500352	IncDec	++		499860	1					
ANR	500353	CompoundStatement		41:37:1446:1446	499860	3					
ANR	500354	ExpressionStatement	"D ( i ) = fix_mul ( D ( i ) , 6659 )"	354:16:10942:10968	499860	0	True				
ANR	500355	AssignmentExpression	"D ( i ) = fix_mul ( D ( i ) , 6659 )"		499860	0		=			
ANR	500356	CallExpression	D ( i )		499860	0					
ANR	500357	Callee	D		499860	0					
ANR	500358	Identifier	D		499860	0					
ANR	500359	ArgumentList	i		499860	1					
ANR	500360	Argument	i		499860	0					
ANR	500361	Identifier	i		499860	0					
ANR	500362	CallExpression	"fix_mul ( D ( i ) , 6659 )"		499860	1					
ANR	500363	Callee	fix_mul		499860	0					
ANR	500364	Identifier	fix_mul		499860	0					
ANR	500365	ArgumentList	D ( i )		499860	1					
ANR	500366	Argument	D ( i )		499860	0					
ANR	500367	CallExpression	D ( i )		499860	0					
ANR	500368	Callee	D		499860	0					
ANR	500369	Identifier	D		499860	0					
ANR	500370	ArgumentList	i		499860	1					
ANR	500371	Argument	i		499860	0					
ANR	500372	Identifier	i		499860	0					
ANR	500373	Argument	6659		499860	1					
ANR	500374	PrimaryExpression	6659		499860	0					
ANR	500375	ReturnType	static void		499860	1					
ANR	500376	Identifier	dwt_encode_1_real		499860	2					
ANR	500377	ParameterList	"int * a , int dn , int sn , int cas"		499860	3					
ANR	500378	Parameter	int * a	312:30:9444:9449	499860	0	True				
ANR	500379	ParameterType	int *		499860	0					
ANR	500380	Identifier	a		499860	1					
ANR	500381	Parameter	int dn	312:38:9452:9457	499860	1	True				
ANR	500382	ParameterType	int		499860	0					
ANR	500383	Identifier	dn		499860	1					
ANR	500384	Parameter	int sn	312:46:9460:9465	499860	2	True				
ANR	500385	ParameterType	int		499860	0					
ANR	500386	Identifier	sn		499860	1					
ANR	500387	Parameter	int cas	312:54:9468:9474	499860	3	True				
ANR	500388	ParameterType	int		499860	0					
ANR	500389	Identifier	cas		499860	1					
ANR	500390	CFGEntryNode	ENTRY		499860		True				
ANR	500391	CFGExitNode	EXIT		499860		True				
ANR	500392	Symbol	a		499860						
ANR	500393	Symbol	S		499860						
ANR	500394	Symbol	cas		499860						
ANR	500395	Symbol	D		499860						
ANR	500396	Symbol	i		499860						
ANR	500397	Symbol	dn		499860						
ANR	500398	Symbol	fix_mul		499860						
ANR	500399	Symbol	sn		499860						
ANR	500400	Symbol	D_		499860						
ANR	500401	Symbol	S_		499860						
ANR	500402	Symbol	DD_		499860						
ANR	500403	Symbol	SS_		499860						
ANR	500404	Function	dwt_encode_stepsize	360:0:11016:11349							
ANR	500405	FunctionDef	"dwt_encode_stepsize (int stepsize , int numbps , opj_stepsize_t * bandno_stepsize)"		500404	0					
ANR	500406	CompoundStatement		362:0:11139:11349	500404	0					
ANR	500407	IdentifierDeclStatement	"int p , n ;"	363:4:11145:11153	500404	0	True				
ANR	500408	IdentifierDecl	p		500404	0					
ANR	500409	IdentifierDeclType	int		500404	0					
ANR	500410	Identifier	p		500404	1					
ANR	500411	IdentifierDecl	n		500404	1					
ANR	500412	IdentifierDeclType	int		500404	0					
ANR	500413	Identifier	n		500404	1					
ANR	500414	ExpressionStatement	p = int_floorlog2 ( stepsize ) - 13	364:4:11159:11191	500404	1	True				
ANR	500415	AssignmentExpression	p = int_floorlog2 ( stepsize ) - 13		500404	0		=			
ANR	500416	Identifier	p		500404	0					
ANR	500417	AdditiveExpression	int_floorlog2 ( stepsize ) - 13		500404	1		-			
ANR	500418	CallExpression	int_floorlog2 ( stepsize )		500404	0					
ANR	500419	Callee	int_floorlog2		500404	0					
ANR	500420	Identifier	int_floorlog2		500404	0					
ANR	500421	ArgumentList	stepsize		500404	1					
ANR	500422	Argument	stepsize		500404	0					
ANR	500423	Identifier	stepsize		500404	0					
ANR	500424	PrimaryExpression	13		500404	1					
ANR	500425	ExpressionStatement	n = 11 - int_floorlog2 ( stepsize )	365:4:11197:11229	500404	2	True				
ANR	500426	AssignmentExpression	n = 11 - int_floorlog2 ( stepsize )		500404	0		=			
ANR	500427	Identifier	n		500404	0					
ANR	500428	AdditiveExpression	11 - int_floorlog2 ( stepsize )		500404	1		-			
ANR	500429	PrimaryExpression	11		500404	0					
ANR	500430	CallExpression	int_floorlog2 ( stepsize )		500404	1					
ANR	500431	Callee	int_floorlog2		500404	0					
ANR	500432	Identifier	int_floorlog2		500404	0					
ANR	500433	ArgumentList	stepsize		500404	1					
ANR	500434	Argument	stepsize		500404	0					
ANR	500435	Identifier	stepsize		500404	0					
ANR	500436	ExpressionStatement	bandno_stepsize -> mant = ( n < 0 ? stepsize >> - n : stepsize << n ) & 0x7ff	366:4:11235:11307	500404	3	True				
ANR	500437	AssignmentExpression	bandno_stepsize -> mant = ( n < 0 ? stepsize >> - n : stepsize << n ) & 0x7ff		500404	0		=			
ANR	500438	PtrMemberAccess	bandno_stepsize -> mant		500404	0					
ANR	500439	Identifier	bandno_stepsize		500404	0					
ANR	500440	Identifier	mant		500404	1					
ANR	500441	BitAndExpression	( n < 0 ? stepsize >> - n : stepsize << n ) & 0x7ff		500404	1		&			
ANR	500442	ConditionalExpression	n < 0 ? stepsize >> - n : stepsize << n		500404	0					
ANR	500443	Condition	n < 0		500404	0					
ANR	500444	RelationalExpression	n < 0		500404	0		<			
ANR	500445	Identifier	n		500404	0					
ANR	500446	PrimaryExpression	0		500404	1					
ANR	500447	ShiftExpression	stepsize >> - n		500404	1		>>			
ANR	500448	Identifier	stepsize		500404	0					
ANR	500449	UnaryOperationExpression	- n		500404	1					
ANR	500450	UnaryOperator	-		500404	0					
ANR	500451	Identifier	n		500404	1					
ANR	500452	ShiftExpression	stepsize << n		500404	2		<<			
ANR	500453	Identifier	stepsize		500404	0					
ANR	500454	Identifier	n		500404	1					
ANR	500455	PrimaryExpression	0x7ff		500404	1					
ANR	500456	ExpressionStatement	bandno_stepsize -> expn = numbps - p	367:4:11313:11347	500404	4	True				
ANR	500457	AssignmentExpression	bandno_stepsize -> expn = numbps - p		500404	0		=			
ANR	500458	PtrMemberAccess	bandno_stepsize -> expn		500404	0					
ANR	500459	Identifier	bandno_stepsize		500404	0					
ANR	500460	Identifier	expn		500404	1					
ANR	500461	AdditiveExpression	numbps - p		500404	1		-			
ANR	500462	Identifier	numbps		500404	0					
ANR	500463	Identifier	p		500404	1					
ANR	500464	ReturnType	static void		500404	1					
ANR	500465	Identifier	dwt_encode_stepsize		500404	2					
ANR	500466	ParameterList	"int stepsize , int numbps , opj_stepsize_t * bandno_stepsize"		500404	3					
ANR	500467	Parameter	int stepsize	360:32:11048:11059	500404	0	True				
ANR	500468	ParameterType	int		500404	0					
ANR	500469	Identifier	stepsize		500404	1					
ANR	500470	Parameter	int numbps	360:46:11062:11071	500404	1	True				
ANR	500471	ParameterType	int		500404	0					
ANR	500472	Identifier	numbps		500404	1					
ANR	500473	Parameter	opj_stepsize_t * bandno_stepsize	361:32:11106:11136	500404	2	True				
ANR	500474	ParameterType	opj_stepsize_t *		500404	0					
ANR	500475	Identifier	bandno_stepsize		500404	1					
ANR	500476	CFGEntryNode	ENTRY		500404		True				
ANR	500477	CFGExitNode	EXIT		500404		True				
ANR	500478	Symbol	p		500404						
ANR	500479	Symbol	bandno_stepsize -> expn		500404						
ANR	500480	Symbol	int_floorlog2		500404						
ANR	500481	Symbol	bandno_stepsize -> mant		500404						
ANR	500482	Symbol	numbps		500404						
ANR	500483	Symbol	bandno_stepsize		500404						
ANR	500484	Symbol	* bandno_stepsize		500404						
ANR	500485	Symbol	stepsize		500404						
ANR	500486	Symbol	n		500404						
ANR	500487	Function	dwt_encode	379:0:11624:13838							
ANR	500488	FunctionDef	dwt_encode (opj_tcd_tilecomp_t * tilec)		500487	0					
ANR	500489	CompoundStatement		380:0:11668:13838	500487	0					
ANR	500490	IdentifierDeclStatement	"int i , j , k ;"	381:4:11674:11685	500487	0	True				
ANR	500491	IdentifierDecl	i		500487	0					
ANR	500492	IdentifierDeclType	int		500487	0					
ANR	500493	Identifier	i		500487	1					
ANR	500494	IdentifierDecl	j		500487	1					
ANR	500495	IdentifierDeclType	int		500487	0					
ANR	500496	Identifier	j		500487	1					
ANR	500497	IdentifierDecl	k		500487	2					
ANR	500498	IdentifierDeclType	int		500487	0					
ANR	500499	Identifier	k		500487	1					
ANR	500500	IdentifierDeclStatement	int * a = NULL ;	382:4:11691:11704	500487	1	True				
ANR	500501	IdentifierDecl	* a = NULL		500487	0					
ANR	500502	IdentifierDeclType	int *		500487	0					
ANR	500503	Identifier	a		500487	1					
ANR	500504	AssignmentExpression	* a = NULL		500487	2		=			
ANR	500505	Identifier	NULL		500487	0					
ANR	500506	Identifier	NULL		500487	1					
ANR	500507	IdentifierDeclStatement	int * aj = NULL ;	383:4:11710:11724	500487	2	True				
ANR	500508	IdentifierDecl	* aj = NULL		500487	0					
ANR	500509	IdentifierDeclType	int *		500487	0					
ANR	500510	Identifier	aj		500487	1					
ANR	500511	AssignmentExpression	* aj = NULL		500487	2		=			
ANR	500512	Identifier	NULL		500487	0					
ANR	500513	Identifier	NULL		500487	1					
ANR	500514	IdentifierDeclStatement	int * bj = NULL ;	384:4:11730:11744	500487	3	True				
ANR	500515	IdentifierDecl	* bj = NULL		500487	0					
ANR	500516	IdentifierDeclType	int *		500487	0					
ANR	500517	Identifier	bj		500487	1					
ANR	500518	AssignmentExpression	* bj = NULL		500487	2		=			
ANR	500519	Identifier	NULL		500487	0					
ANR	500520	Identifier	NULL		500487	1					
ANR	500521	IdentifierDeclStatement	"int w , l ;"	385:4:11750:11758	500487	4	True				
ANR	500522	IdentifierDecl	w		500487	0					
ANR	500523	IdentifierDeclType	int		500487	0					
ANR	500524	Identifier	w		500487	1					
ANR	500525	IdentifierDecl	l		500487	1					
ANR	500526	IdentifierDeclType	int		500487	0					
ANR	500527	Identifier	l		500487	1					
ANR	500528	ExpressionStatement	w = tilec -> x1 - tilec -> x0	387:4:11765:11790	500487	5	True				
ANR	500529	AssignmentExpression	w = tilec -> x1 - tilec -> x0		500487	0		=			
ANR	500530	Identifier	w		500487	0					
ANR	500531	AdditiveExpression	tilec -> x1 - tilec -> x0		500487	1		-			
ANR	500532	PtrMemberAccess	tilec -> x1		500487	0					
ANR	500533	Identifier	tilec		500487	0					
ANR	500534	Identifier	x1		500487	1					
ANR	500535	PtrMemberAccess	tilec -> x0		500487	1					
ANR	500536	Identifier	tilec		500487	0					
ANR	500537	Identifier	x0		500487	1					
ANR	500538	ExpressionStatement	l = tilec -> numresolutions - 1	388:4:11796:11825	500487	6	True				
ANR	500539	AssignmentExpression	l = tilec -> numresolutions - 1		500487	0		=			
ANR	500540	Identifier	l		500487	0					
ANR	500541	AdditiveExpression	tilec -> numresolutions - 1		500487	1		-			
ANR	500542	PtrMemberAccess	tilec -> numresolutions		500487	0					
ANR	500543	Identifier	tilec		500487	0					
ANR	500544	Identifier	numresolutions		500487	1					
ANR	500545	PrimaryExpression	1		500487	1					
ANR	500546	ExpressionStatement	a = tilec -> data	389:4:11831:11846	500487	7	True				
ANR	500547	AssignmentExpression	a = tilec -> data		500487	0		=			
ANR	500548	Identifier	a		500487	0					
ANR	500549	PtrMemberAccess	tilec -> data		500487	1					
ANR	500550	Identifier	tilec		500487	0					
ANR	500551	Identifier	data		500487	1					
ANR	500552	ForStatement	for ( i = 0 ; i < l ; i ++ )		500487	8					
ANR	500553	ForInit	i = 0 ;	391:9:11858:11863	500487	0	True				
ANR	500554	AssignmentExpression	i = 0		500487	0		=			
ANR	500555	Identifier	i		500487	0					
ANR	500556	PrimaryExpression	0		500487	1					
ANR	500557	Condition	i < l	391:16:11865:11869	500487	1	True				
ANR	500558	RelationalExpression	i < l		500487	0		<			
ANR	500559	Identifier	i		500487	0					
ANR	500560	Identifier	l		500487	1					
ANR	500561	PostIncDecOperationExpression	i ++	391:23:11872:11874	500487	2	True				
ANR	500562	Identifier	i		500487	0					
ANR	500563	IncDec	++		500487	1					
ANR	500564	CompoundStatement		19:8:980:990	500487	3					
ANR	500565	IdentifierDeclStatement	int rw ;	392:8:11887:11893	500487	0	True				
ANR	500566	IdentifierDecl	rw		500487	0					
ANR	500567	IdentifierDeclType	int		500487	0					
ANR	500568	Identifier	rw		500487	1					
ANR	500569	IdentifierDeclStatement	int rh ;	393:8:12014:12020	500487	1	True				
ANR	500570	IdentifierDecl	rh		500487	0					
ANR	500571	IdentifierDeclType	int		500487	0					
ANR	500572	Identifier	rh		500487	1					
ANR	500573	IdentifierDeclStatement	int rw1 ;	394:8:12141:12148	500487	2	True				
ANR	500574	IdentifierDecl	rw1		500487	0					
ANR	500575	IdentifierDeclType	int		500487	0					
ANR	500576	Identifier	rw1		500487	1					
ANR	500577	IdentifierDeclStatement	int rh1 ;	395:8:12268:12275	500487	3	True				
ANR	500578	IdentifierDecl	rh1		500487	0					
ANR	500579	IdentifierDeclType	int		500487	0					
ANR	500580	Identifier	rh1		500487	1					
ANR	500581	IdentifierDeclStatement	int cas_col ;	396:8:12395:12406	500487	4	True				
ANR	500582	IdentifierDecl	cas_col		500487	0					
ANR	500583	IdentifierDeclType	int		500487	0					
ANR	500584	Identifier	cas_col		500487	1					
ANR	500585	IdentifierDeclStatement	int cas_row ;	397:8:12522:12533	500487	5	True				
ANR	500586	IdentifierDecl	cas_row		500487	0					
ANR	500587	IdentifierDeclType	int		500487	0					
ANR	500588	Identifier	cas_row		500487	1					
ANR	500589	IdentifierDeclStatement	"int dn , sn ;"	398:8:12649:12659	500487	6	True				
ANR	500590	IdentifierDecl	dn		500487	0					
ANR	500591	IdentifierDeclType	int		500487	0					
ANR	500592	Identifier	dn		500487	1					
ANR	500593	IdentifierDecl	sn		500487	1					
ANR	500594	IdentifierDeclType	int		500487	0					
ANR	500595	Identifier	sn		500487	1					
ANR	500596	ExpressionStatement	rw = tilec -> resolutions [ l - i ] . x1 - tilec -> resolutions [ l - i ] . x0	400:8:12670:12734	500487	7	True				
ANR	500597	AssignmentExpression	rw = tilec -> resolutions [ l - i ] . x1 - tilec -> resolutions [ l - i ] . x0		500487	0		=			
ANR	500598	Identifier	rw		500487	0					
ANR	500599	AdditiveExpression	tilec -> resolutions [ l - i ] . x1 - tilec -> resolutions [ l - i ] . x0		500487	1		-			
ANR	500600	MemberAccess	tilec -> resolutions [ l - i ] . x1		500487	0					
ANR	500601	ArrayIndexing	tilec -> resolutions [ l - i ]		500487	0					
ANR	500602	PtrMemberAccess	tilec -> resolutions		500487	0					
ANR	500603	Identifier	tilec		500487	0					
ANR	500604	Identifier	resolutions		500487	1					
ANR	500605	AdditiveExpression	l - i		500487	1		-			
ANR	500606	Identifier	l		500487	0					
ANR	500607	Identifier	i		500487	1					
ANR	500608	Identifier	x1		500487	1					
ANR	500609	MemberAccess	tilec -> resolutions [ l - i ] . x0		500487	1					
ANR	500610	ArrayIndexing	tilec -> resolutions [ l - i ]		500487	0					
ANR	500611	PtrMemberAccess	tilec -> resolutions		500487	0					
ANR	500612	Identifier	tilec		500487	0					
ANR	500613	Identifier	resolutions		500487	1					
ANR	500614	AdditiveExpression	l - i		500487	1		-			
ANR	500615	Identifier	l		500487	0					
ANR	500616	Identifier	i		500487	1					
ANR	500617	Identifier	x0		500487	1					
ANR	500618	ExpressionStatement	rh = tilec -> resolutions [ l - i ] . y1 - tilec -> resolutions [ l - i ] . y0	401:8:12744:12808	500487	8	True				
ANR	500619	AssignmentExpression	rh = tilec -> resolutions [ l - i ] . y1 - tilec -> resolutions [ l - i ] . y0		500487	0		=			
ANR	500620	Identifier	rh		500487	0					
ANR	500621	AdditiveExpression	tilec -> resolutions [ l - i ] . y1 - tilec -> resolutions [ l - i ] . y0		500487	1		-			
ANR	500622	MemberAccess	tilec -> resolutions [ l - i ] . y1		500487	0					
ANR	500623	ArrayIndexing	tilec -> resolutions [ l - i ]		500487	0					
ANR	500624	PtrMemberAccess	tilec -> resolutions		500487	0					
ANR	500625	Identifier	tilec		500487	0					
ANR	500626	Identifier	resolutions		500487	1					
ANR	500627	AdditiveExpression	l - i		500487	1		-			
ANR	500628	Identifier	l		500487	0					
ANR	500629	Identifier	i		500487	1					
ANR	500630	Identifier	y1		500487	1					
ANR	500631	MemberAccess	tilec -> resolutions [ l - i ] . y0		500487	1					
ANR	500632	ArrayIndexing	tilec -> resolutions [ l - i ]		500487	0					
ANR	500633	PtrMemberAccess	tilec -> resolutions		500487	0					
ANR	500634	Identifier	tilec		500487	0					
ANR	500635	Identifier	resolutions		500487	1					
ANR	500636	AdditiveExpression	l - i		500487	1		-			
ANR	500637	Identifier	l		500487	0					
ANR	500638	Identifier	i		500487	1					
ANR	500639	Identifier	y0		500487	1					
ANR	500640	ExpressionStatement	rw1 = tilec -> resolutions [ l - i - 1 ] . x1 - tilec -> resolutions [ l - i - 1 ] . x0	402:8:12818:12891	500487	9	True				
ANR	500641	AssignmentExpression	rw1 = tilec -> resolutions [ l - i - 1 ] . x1 - tilec -> resolutions [ l - i - 1 ] . x0		500487	0		=			
ANR	500642	Identifier	rw1		500487	0					
ANR	500643	AdditiveExpression	tilec -> resolutions [ l - i - 1 ] . x1 - tilec -> resolutions [ l - i - 1 ] . x0		500487	1		-			
ANR	500644	MemberAccess	tilec -> resolutions [ l - i - 1 ] . x1		500487	0					
ANR	500645	ArrayIndexing	tilec -> resolutions [ l - i - 1 ]		500487	0					
ANR	500646	PtrMemberAccess	tilec -> resolutions		500487	0					
ANR	500647	Identifier	tilec		500487	0					
ANR	500648	Identifier	resolutions		500487	1					
ANR	500649	AdditiveExpression	l - i - 1		500487	1		-			
ANR	500650	Identifier	l		500487	0					
ANR	500651	AdditiveExpression	i - 1		500487	1		-			
ANR	500652	Identifier	i		500487	0					
ANR	500653	PrimaryExpression	1		500487	1					
ANR	500654	Identifier	x1		500487	1					
ANR	500655	MemberAccess	tilec -> resolutions [ l - i - 1 ] . x0		500487	1					
ANR	500656	ArrayIndexing	tilec -> resolutions [ l - i - 1 ]		500487	0					
ANR	500657	PtrMemberAccess	tilec -> resolutions		500487	0					
ANR	500658	Identifier	tilec		500487	0					
ANR	500659	Identifier	resolutions		500487	1					
ANR	500660	AdditiveExpression	l - i - 1		500487	1		-			
ANR	500661	Identifier	l		500487	0					
ANR	500662	AdditiveExpression	i - 1		500487	1		-			
ANR	500663	Identifier	i		500487	0					
ANR	500664	PrimaryExpression	1		500487	1					
ANR	500665	Identifier	x0		500487	1					
ANR	500666	ExpressionStatement	rh1 = tilec -> resolutions [ l - i - 1 ] . y1 - tilec -> resolutions [ l - i - 1 ] . y0	403:8:12901:12974	500487	10	True				
ANR	500667	AssignmentExpression	rh1 = tilec -> resolutions [ l - i - 1 ] . y1 - tilec -> resolutions [ l - i - 1 ] . y0		500487	0		=			
ANR	500668	Identifier	rh1		500487	0					
ANR	500669	AdditiveExpression	tilec -> resolutions [ l - i - 1 ] . y1 - tilec -> resolutions [ l - i - 1 ] . y0		500487	1		-			
ANR	500670	MemberAccess	tilec -> resolutions [ l - i - 1 ] . y1		500487	0					
ANR	500671	ArrayIndexing	tilec -> resolutions [ l - i - 1 ]		500487	0					
ANR	500672	PtrMemberAccess	tilec -> resolutions		500487	0					
ANR	500673	Identifier	tilec		500487	0					
ANR	500674	Identifier	resolutions		500487	1					
ANR	500675	AdditiveExpression	l - i - 1		500487	1		-			
ANR	500676	Identifier	l		500487	0					
ANR	500677	AdditiveExpression	i - 1		500487	1		-			
ANR	500678	Identifier	i		500487	0					
ANR	500679	PrimaryExpression	1		500487	1					
ANR	500680	Identifier	y1		500487	1					
ANR	500681	MemberAccess	tilec -> resolutions [ l - i - 1 ] . y0		500487	1					
ANR	500682	ArrayIndexing	tilec -> resolutions [ l - i - 1 ]		500487	0					
ANR	500683	PtrMemberAccess	tilec -> resolutions		500487	0					
ANR	500684	Identifier	tilec		500487	0					
ANR	500685	Identifier	resolutions		500487	1					
ANR	500686	AdditiveExpression	l - i - 1		500487	1		-			
ANR	500687	Identifier	l		500487	0					
ANR	500688	AdditiveExpression	i - 1		500487	1		-			
ANR	500689	Identifier	i		500487	0					
ANR	500690	PrimaryExpression	1		500487	1					
ANR	500691	Identifier	y0		500487	1					
ANR	500692	ExpressionStatement	cas_row = tilec -> resolutions [ l - i ] . x0 % 2	405:8:12985:13027	500487	11	True				
ANR	500693	AssignmentExpression	cas_row = tilec -> resolutions [ l - i ] . x0 % 2		500487	0		=			
ANR	500694	Identifier	cas_row		500487	0					
ANR	500695	MultiplicativeExpression	tilec -> resolutions [ l - i ] . x0 % 2		500487	1		%			
ANR	500696	MemberAccess	tilec -> resolutions [ l - i ] . x0		500487	0					
ANR	500697	ArrayIndexing	tilec -> resolutions [ l - i ]		500487	0					
ANR	500698	PtrMemberAccess	tilec -> resolutions		500487	0					
ANR	500699	Identifier	tilec		500487	0					
ANR	500700	Identifier	resolutions		500487	1					
ANR	500701	AdditiveExpression	l - i		500487	1		-			
ANR	500702	Identifier	l		500487	0					
ANR	500703	Identifier	i		500487	1					
ANR	500704	Identifier	x0		500487	1					
ANR	500705	PrimaryExpression	2		500487	1					
ANR	500706	ExpressionStatement	cas_col = tilec -> resolutions [ l - i ] . y0 % 2	406:8:13037:13079	500487	12	True				
ANR	500707	AssignmentExpression	cas_col = tilec -> resolutions [ l - i ] . y0 % 2		500487	0		=			
ANR	500708	Identifier	cas_col		500487	0					
ANR	500709	MultiplicativeExpression	tilec -> resolutions [ l - i ] . y0 % 2		500487	1		%			
ANR	500710	MemberAccess	tilec -> resolutions [ l - i ] . y0		500487	0					
ANR	500711	ArrayIndexing	tilec -> resolutions [ l - i ]		500487	0					
ANR	500712	PtrMemberAccess	tilec -> resolutions		500487	0					
ANR	500713	Identifier	tilec		500487	0					
ANR	500714	Identifier	resolutions		500487	1					
ANR	500715	AdditiveExpression	l - i		500487	1		-			
ANR	500716	Identifier	l		500487	0					
ANR	500717	Identifier	i		500487	1					
ANR	500718	Identifier	y0		500487	1					
ANR	500719	PrimaryExpression	2		500487	1					
ANR	500720	ExpressionStatement	sn = rh1	408:8:13090:13098	500487	13	True				
ANR	500721	AssignmentExpression	sn = rh1		500487	0		=			
ANR	500722	Identifier	sn		500487	0					
ANR	500723	Identifier	rh1		500487	1					
ANR	500724	ExpressionStatement	dn = rh - rh1	409:8:13108:13121	500487	14	True				
ANR	500725	AssignmentExpression	dn = rh - rh1		500487	0		=			
ANR	500726	Identifier	dn		500487	0					
ANR	500727	AdditiveExpression	rh - rh1		500487	1		-			
ANR	500728	Identifier	rh		500487	0					
ANR	500729	Identifier	rh1		500487	1					
ANR	500730	ExpressionStatement	bj = ( int * ) opj_malloc ( rh * sizeof ( int ) )	410:8:13131:13170	500487	15	True				
ANR	500731	AssignmentExpression	bj = ( int * ) opj_malloc ( rh * sizeof ( int ) )		500487	0		=			
ANR	500732	Identifier	bj		500487	0					
ANR	500733	CastExpression	( int * ) opj_malloc ( rh * sizeof ( int ) )		500487	1					
ANR	500734	CastTarget	int *		500487	0					
ANR	500735	CallExpression	opj_malloc ( rh * sizeof ( int ) )		500487	1					
ANR	500736	Callee	opj_malloc		500487	0					
ANR	500737	Identifier	opj_malloc		500487	0					
ANR	500738	ArgumentList	rh * sizeof ( int )		500487	1					
ANR	500739	Argument	rh * sizeof ( int )		500487	0					
ANR	500740	MultiplicativeExpression	rh * sizeof ( int )		500487	0		*			
ANR	500741	Identifier	rh		500487	0					
ANR	500742	SizeofExpression	sizeof ( int )		500487	1					
ANR	500743	Sizeof	sizeof		500487	0					
ANR	500744	SizeofOperand	int		500487	1					
ANR	500745	ForStatement	for ( j = 0 ; j < rw ; j ++ )		500487	16					
ANR	500746	ForInit	j = 0 ;	411:13:13185:13190	500487	0	True				
ANR	500747	AssignmentExpression	j = 0		500487	0		=			
ANR	500748	Identifier	j		500487	0					
ANR	500749	PrimaryExpression	0		500487	1					
ANR	500750	Condition	j < rw	411:20:13192:13197	500487	1	True				
ANR	500751	RelationalExpression	j < rw		500487	0		<			
ANR	500752	Identifier	j		500487	0					
ANR	500753	Identifier	rw		500487	1					
ANR	500754	PostIncDecOperationExpression	j ++	411:28:13200:13202	500487	2	True				
ANR	500755	Identifier	j		500487	0					
ANR	500756	IncDec	++		500487	1					
ANR	500757	CompoundStatement		32:33:1536:1536	500487	3					
ANR	500758	ExpressionStatement	aj = a + j	412:12:13219:13229	500487	0	True				
ANR	500759	AssignmentExpression	aj = a + j		500487	0		=			
ANR	500760	Identifier	aj		500487	0					
ANR	500761	AdditiveExpression	a + j		500487	1		+			
ANR	500762	Identifier	a		500487	0					
ANR	500763	Identifier	j		500487	1					
ANR	500764	ForStatement	for ( k = 0 ; k < rh ; k ++ )		500487	1					
ANR	500765	ForInit	k = 0 ;	413:17:13248:13253	500487	0	True				
ANR	500766	AssignmentExpression	k = 0		500487	0		=			
ANR	500767	Identifier	k		500487	0					
ANR	500768	PrimaryExpression	0		500487	1					
ANR	500769	Condition	k < rh	413:24:13255:13260	500487	1	True				
ANR	500770	RelationalExpression	k < rh		500487	0		<			
ANR	500771	Identifier	k		500487	0					
ANR	500772	Identifier	rh		500487	1					
ANR	500773	PostIncDecOperationExpression	k ++	413:32:13263:13265	500487	2	True				
ANR	500774	Identifier	k		500487	0					
ANR	500775	IncDec	++		500487	1					
ANR	500776	CompoundStatement		34:37:1599:1599	500487	3					
ANR	500777	ExpressionStatement	bj [ k ] = aj [ k * w ]	414:16:13286:13303	500487	0	True				
ANR	500778	AssignmentExpression	bj [ k ] = aj [ k * w ]		500487	0		=			
ANR	500779	ArrayIndexing	bj [ k ]		500487	0					
ANR	500780	Identifier	bj		500487	0					
ANR	500781	Identifier	k		500487	1					
ANR	500782	ArrayIndexing	aj [ k * w ]		500487	1					
ANR	500783	Identifier	aj		500487	0					
ANR	500784	MultiplicativeExpression	k * w		500487	1		*			
ANR	500785	Identifier	k		500487	0					
ANR	500786	Identifier	w		500487	1					
ANR	500787	ExpressionStatement	"dwt_encode_1 ( bj , dn , sn , cas_col )"	416:12:13331:13364	500487	2	True				
ANR	500788	CallExpression	"dwt_encode_1 ( bj , dn , sn , cas_col )"		500487	0					
ANR	500789	Callee	dwt_encode_1		500487	0					
ANR	500790	Identifier	dwt_encode_1		500487	0					
ANR	500791	ArgumentList	bj		500487	1					
ANR	500792	Argument	bj		500487	0					
ANR	500793	Identifier	bj		500487	0					
ANR	500794	Argument	dn		500487	1					
ANR	500795	Identifier	dn		500487	0					
ANR	500796	Argument	sn		500487	2					
ANR	500797	Identifier	sn		500487	0					
ANR	500798	Argument	cas_col		500487	3					
ANR	500799	Identifier	cas_col		500487	0					
ANR	500800	ExpressionStatement	"dwt_deinterleave_v ( bj , aj , dn , sn , w , cas_col )"	417:12:13378:13424	500487	3	True				
ANR	500801	CallExpression	"dwt_deinterleave_v ( bj , aj , dn , sn , w , cas_col )"		500487	0					
ANR	500802	Callee	dwt_deinterleave_v		500487	0					
ANR	500803	Identifier	dwt_deinterleave_v		500487	0					
ANR	500804	ArgumentList	bj		500487	1					
ANR	500805	Argument	bj		500487	0					
ANR	500806	Identifier	bj		500487	0					
ANR	500807	Argument	aj		500487	1					
ANR	500808	Identifier	aj		500487	0					
ANR	500809	Argument	dn		500487	2					
ANR	500810	Identifier	dn		500487	0					
ANR	500811	Argument	sn		500487	3					
ANR	500812	Identifier	sn		500487	0					
ANR	500813	Argument	w		500487	4					
ANR	500814	Identifier	w		500487	0					
ANR	500815	Argument	cas_col		500487	5					
ANR	500816	Identifier	cas_col		500487	0					
ANR	500817	ExpressionStatement	opj_free ( bj )	419:8:13444:13456	500487	17	True				
ANR	500818	CallExpression	opj_free ( bj )		500487	0					
ANR	500819	Callee	opj_free		500487	0					
ANR	500820	Identifier	opj_free		500487	0					
ANR	500821	ArgumentList	bj		500487	1					
ANR	500822	Argument	bj		500487	0					
ANR	500823	Identifier	bj		500487	0					
ANR	500824	ExpressionStatement	sn = rw1	421:8:13467:13475	500487	18	True				
ANR	500825	AssignmentExpression	sn = rw1		500487	0		=			
ANR	500826	Identifier	sn		500487	0					
ANR	500827	Identifier	rw1		500487	1					
ANR	500828	ExpressionStatement	dn = rw - rw1	422:8:13485:13498	500487	19	True				
ANR	500829	AssignmentExpression	dn = rw - rw1		500487	0		=			
ANR	500830	Identifier	dn		500487	0					
ANR	500831	AdditiveExpression	rw - rw1		500487	1		-			
ANR	500832	Identifier	rw		500487	0					
ANR	500833	Identifier	rw1		500487	1					
ANR	500834	ExpressionStatement	bj = ( int * ) opj_malloc ( rw * sizeof ( int ) )	423:8:13508:13547	500487	20	True				
ANR	500835	AssignmentExpression	bj = ( int * ) opj_malloc ( rw * sizeof ( int ) )		500487	0		=			
ANR	500836	Identifier	bj		500487	0					
ANR	500837	CastExpression	( int * ) opj_malloc ( rw * sizeof ( int ) )		500487	1					
ANR	500838	CastTarget	int *		500487	0					
ANR	500839	CallExpression	opj_malloc ( rw * sizeof ( int ) )		500487	1					
ANR	500840	Callee	opj_malloc		500487	0					
ANR	500841	Identifier	opj_malloc		500487	0					
ANR	500842	ArgumentList	rw * sizeof ( int )		500487	1					
ANR	500843	Argument	rw * sizeof ( int )		500487	0					
ANR	500844	MultiplicativeExpression	rw * sizeof ( int )		500487	0		*			
ANR	500845	Identifier	rw		500487	0					
ANR	500846	SizeofExpression	sizeof ( int )		500487	1					
ANR	500847	Sizeof	sizeof		500487	0					
ANR	500848	SizeofOperand	int		500487	1					
ANR	500849	ForStatement	for ( j = 0 ; j < rh ; j ++ )		500487	21					
ANR	500850	ForInit	j = 0 ;	424:13:13562:13567	500487	0	True				
ANR	500851	AssignmentExpression	j = 0		500487	0		=			
ANR	500852	Identifier	j		500487	0					
ANR	500853	PrimaryExpression	0		500487	1					
ANR	500854	Condition	j < rh	424:20:13569:13574	500487	1	True				
ANR	500855	RelationalExpression	j < rh		500487	0		<			
ANR	500856	Identifier	j		500487	0					
ANR	500857	Identifier	rh		500487	1					
ANR	500858	PostIncDecOperationExpression	j ++	424:28:13577:13579	500487	2	True				
ANR	500859	Identifier	j		500487	0					
ANR	500860	IncDec	++		500487	1					
ANR	500861	CompoundStatement		45:33:1913:1913	500487	3					
ANR	500862	ExpressionStatement	aj = a + j * w	425:12:13596:13610	500487	0	True				
ANR	500863	AssignmentExpression	aj = a + j * w		500487	0		=			
ANR	500864	Identifier	aj		500487	0					
ANR	500865	AdditiveExpression	a + j * w		500487	1		+			
ANR	500866	Identifier	a		500487	0					
ANR	500867	MultiplicativeExpression	j * w		500487	1		*			
ANR	500868	Identifier	j		500487	0					
ANR	500869	Identifier	w		500487	1					
ANR	500870	ForStatement	for ( k = 0 ; k < rw ; k ++ )		500487	1					
ANR	500871	ForInit	k = 0 ;	426:17:13629:13634	500487	0	True				
ANR	500872	AssignmentExpression	k = 0		500487	0		=			
ANR	500873	Identifier	k		500487	0					
ANR	500874	PrimaryExpression	0		500487	1					
ANR	500875	Condition	k < rw	426:24:13636:13641	500487	1	True				
ANR	500876	RelationalExpression	k < rw		500487	0		<			
ANR	500877	Identifier	k		500487	0					
ANR	500878	Identifier	rw		500487	1					
ANR	500879	PostIncDecOperationExpression	k ++	426:32:13644:13646	500487	2	True				
ANR	500880	Identifier	k		500487	0					
ANR	500881	IncDec	++		500487	1					
ANR	500882	CompoundStatement		47:37:1980:1980	500487	3					
ANR	500883	ExpressionStatement	bj [ k ] = aj [ k ]	427:16:13667:13680	500487	0	True				
ANR	500884	AssignmentExpression	bj [ k ] = aj [ k ]		500487	0		=			
ANR	500885	ArrayIndexing	bj [ k ]		500487	0					
ANR	500886	Identifier	bj		500487	0					
ANR	500887	Identifier	k		500487	1					
ANR	500888	ArrayIndexing	aj [ k ]		500487	1					
ANR	500889	Identifier	aj		500487	0					
ANR	500890	Identifier	k		500487	1					
ANR	500891	ExpressionStatement	"dwt_encode_1 ( bj , dn , sn , cas_row )"	429:12:13708:13741	500487	2	True				
ANR	500892	CallExpression	"dwt_encode_1 ( bj , dn , sn , cas_row )"		500487	0					
ANR	500893	Callee	dwt_encode_1		500487	0					
ANR	500894	Identifier	dwt_encode_1		500487	0					
ANR	500895	ArgumentList	bj		500487	1					
ANR	500896	Argument	bj		500487	0					
ANR	500897	Identifier	bj		500487	0					
ANR	500898	Argument	dn		500487	1					
ANR	500899	Identifier	dn		500487	0					
ANR	500900	Argument	sn		500487	2					
ANR	500901	Identifier	sn		500487	0					
ANR	500902	Argument	cas_row		500487	3					
ANR	500903	Identifier	cas_row		500487	0					
ANR	500904	ExpressionStatement	"dwt_deinterleave_h ( bj , aj , dn , sn , cas_row )"	430:12:13755:13798	500487	3	True				
ANR	500905	CallExpression	"dwt_deinterleave_h ( bj , aj , dn , sn , cas_row )"		500487	0					
ANR	500906	Callee	dwt_deinterleave_h		500487	0					
ANR	500907	Identifier	dwt_deinterleave_h		500487	0					
ANR	500908	ArgumentList	bj		500487	1					
ANR	500909	Argument	bj		500487	0					
ANR	500910	Identifier	bj		500487	0					
ANR	500911	Argument	aj		500487	1					
ANR	500912	Identifier	aj		500487	0					
ANR	500913	Argument	dn		500487	2					
ANR	500914	Identifier	dn		500487	0					
ANR	500915	Argument	sn		500487	3					
ANR	500916	Identifier	sn		500487	0					
ANR	500917	Argument	cas_row		500487	4					
ANR	500918	Identifier	cas_row		500487	0					
ANR	500919	ExpressionStatement	opj_free ( bj )	432:8:13818:13830	500487	22	True				
ANR	500920	CallExpression	opj_free ( bj )		500487	0					
ANR	500921	Callee	opj_free		500487	0					
ANR	500922	Identifier	opj_free		500487	0					
ANR	500923	ArgumentList	bj		500487	1					
ANR	500924	Argument	bj		500487	0					
ANR	500925	Identifier	bj		500487	0					
ANR	500926	ReturnType	void		500487	1					
ANR	500927	Identifier	dwt_encode		500487	2					
ANR	500928	ParameterList	opj_tcd_tilecomp_t * tilec		500487	3					
ANR	500929	Parameter	opj_tcd_tilecomp_t * tilec	379:16:11640:11665	500487	0	True				
ANR	500930	ParameterType	opj_tcd_tilecomp_t *		500487	0					
ANR	500931	Identifier	tilec		500487	1					
ANR	500932	CFGEntryNode	ENTRY		500487		True				
ANR	500933	CFGExitNode	EXIT		500487		True				
ANR	500934	Symbol	opj_malloc		500487						
ANR	500935	Symbol	* w		500487						
ANR	500936	Symbol	tilec -> resolutions [ l - i - 1 ] . x0		500487						
ANR	500937	Symbol	rw		500487						
ANR	500938	Symbol	cas_col		500487						
ANR	500939	Symbol	bj		500487						
ANR	500940	Symbol	tilec -> data		500487						
ANR	500941	Symbol	dn		500487						
ANR	500942	Symbol	* tilec		500487						
ANR	500943	Symbol	* aj		500487						
ANR	500944	Symbol	rw1		500487						
ANR	500945	Symbol	tilec -> resolutions [ l - i ] . y1		500487						
ANR	500946	Symbol	tilec -> resolutions [ l - i ] . y0		500487						
ANR	500947	Symbol	sn		500487						
ANR	500948	Symbol	tilec -> resolutions [ l - i - 1 ] . x1		500487						
ANR	500949	Symbol	* * tilec		500487						
ANR	500950	Symbol	cas_row		500487						
ANR	500951	Symbol	tilec		500487						
ANR	500952	Symbol	a		500487						
ANR	500953	Symbol	NULL		500487						
ANR	500954	Symbol	tilec -> resolutions [ l - i - 1 ] . y1		500487						
ANR	500955	Symbol	tilec -> resolutions [ l - i - 1 ] . y0		500487						
ANR	500956	Symbol	i		500487						
ANR	500957	Symbol	aj		500487						
ANR	500958	Symbol	j		500487						
ANR	500959	Symbol	k		500487						
ANR	500960	Symbol	l		500487						
ANR	500961	Symbol	tilec -> x0		500487						
ANR	500962	Symbol	tilec -> x1		500487						
ANR	500963	Symbol	* bj		500487						
ANR	500964	Symbol	tilec -> resolutions [ l - i ] . x0		500487						
ANR	500965	Symbol	* i		500487						
ANR	500966	Symbol	tilec -> resolutions [ l - i ] . x1		500487						
ANR	500967	Symbol	tilec -> resolutions		500487						
ANR	500968	Symbol	tilec -> numresolutions		500487						
ANR	500969	Symbol	* k		500487						
ANR	500970	Symbol	rh		500487						
ANR	500971	Symbol	* l		500487						
ANR	500972	Symbol	w		500487						
ANR	500973	Symbol	rh1		500487						
ANR	500974	Symbol	* tilec -> resolutions		500487						
ANR	500975	Function	dwt_decode	440:0:13972:14080							
ANR	500976	FunctionDef	"dwt_decode (opj_tcd_tilecomp_t * tilec , int numres)"		500975	0					
ANR	500977	CompoundStatement		441:0:14027:14080	500975	0					
ANR	500978	ExpressionStatement	"dwt_decode_tile ( tilec , numres , & dwt_decode_1 )"	442:4:14033:14078	500975	0	True				
ANR	500979	CallExpression	"dwt_decode_tile ( tilec , numres , & dwt_decode_1 )"		500975	0					
ANR	500980	Callee	dwt_decode_tile		500975	0					
ANR	500981	Identifier	dwt_decode_tile		500975	0					
ANR	500982	ArgumentList	tilec		500975	1					
ANR	500983	Argument	tilec		500975	0					
ANR	500984	Identifier	tilec		500975	0					
ANR	500985	Argument	numres		500975	1					
ANR	500986	Identifier	numres		500975	0					
ANR	500987	Argument	& dwt_decode_1		500975	2					
ANR	500988	UnaryOperationExpression	& dwt_decode_1		500975	0					
ANR	500989	UnaryOperator	&		500975	0					
ANR	500990	Identifier	dwt_decode_1		500975	1					
ANR	500991	ReturnType	void		500975	1					
ANR	500992	Identifier	dwt_decode		500975	2					
ANR	500993	ParameterList	"opj_tcd_tilecomp_t * tilec , int numres"		500975	3					
ANR	500994	Parameter	opj_tcd_tilecomp_t * tilec	440:16:13988:14012	500975	0	True				
ANR	500995	ParameterType	opj_tcd_tilecomp_t *		500975	0					
ANR	500996	Identifier	tilec		500975	1					
ANR	500997	Parameter	int numres	440:43:14015:14024	500975	1	True				
ANR	500998	ParameterType	int		500975	0					
ANR	500999	Identifier	numres		500975	1					
ANR	501000	CFGEntryNode	ENTRY		500975		True				
ANR	501001	CFGExitNode	EXIT		500975		True				
ANR	501002	Symbol	tilec		500975						
ANR	501003	Symbol	numres		500975						
ANR	501004	Symbol	& dwt_decode_1		500975						
ANR	501005	Function	dwt_getgain	449:0:14207:14360							
ANR	501006	FunctionDef	dwt_getgain (int orient)		501005	0					
ANR	501007	CompoundStatement		450:0:14235:14360	501005	0					
ANR	501008	IfStatement	if ( orient == 0 )		501005	0					
ANR	501009	Condition	orient == 0	451:8:14245:14255	501005	0	True				
ANR	501010	EqualityExpression	orient == 0		501005	0		==			
ANR	501011	Identifier	orient		501005	0					
ANR	501012	PrimaryExpression	0		501005	1					
ANR	501013	CompoundStatement		2:21:22:22	501005	1					
ANR	501014	ReturnStatement	return 0 ;	452:8:14268:14276	501005	0	True				
ANR	501015	PrimaryExpression	0		501005	0					
ANR	501016	IfStatement	if ( orient == 1 || orient == 2 )		501005	1					
ANR	501017	Condition	orient == 1 || orient == 2	454:8:14292:14317	501005	0	True				
ANR	501018	OrExpression	orient == 1 || orient == 2		501005	0		||			
ANR	501019	EqualityExpression	orient == 1		501005	0		==			
ANR	501020	Identifier	orient		501005	0					
ANR	501021	PrimaryExpression	1		501005	1					
ANR	501022	EqualityExpression	orient == 2		501005	1		==			
ANR	501023	Identifier	orient		501005	0					
ANR	501024	PrimaryExpression	2		501005	1					
ANR	501025	CompoundStatement		5:36:84:84	501005	1					
ANR	501026	ReturnStatement	return 1 ;	455:8:14330:14338	501005	0	True				
ANR	501027	PrimaryExpression	1		501005	0					
ANR	501028	ReturnStatement	return 2 ;	457:4:14350:14358	501005	2	True				
ANR	501029	PrimaryExpression	2		501005	0					
ANR	501030	ReturnType	int		501005	1					
ANR	501031	Identifier	dwt_getgain		501005	2					
ANR	501032	ParameterList	int orient		501005	3					
ANR	501033	Parameter	int orient	449:16:14223:14232	501005	0	True				
ANR	501034	ParameterType	int		501005	0					
ANR	501035	Identifier	orient		501005	1					
ANR	501036	CFGEntryNode	ENTRY		501005		True				
ANR	501037	CFGExitNode	EXIT		501005		True				
ANR	501038	Symbol	orient		501005						
ANR	501039	Function	dwt_getnorm	463:0:14456:14537							
ANR	501040	FunctionDef	"dwt_getnorm (int level , int orient)"		501039	0					
ANR	501041	CompoundStatement		464:0:14498:14537	501039	0					
ANR	501042	ReturnStatement	return dwt_norms [ orient ] [ level ] ;	465:4:14504:14535	501039	0	True				
ANR	501043	ArrayIndexing	dwt_norms [ orient ] [ level ]		501039	0					
ANR	501044	ArrayIndexing	dwt_norms [ orient ]		501039	0					
ANR	501045	Identifier	dwt_norms		501039	0					
ANR	501046	Identifier	orient		501039	1					
ANR	501047	Identifier	level		501039	1					
ANR	501048	ReturnType	double		501039	1					
ANR	501049	Identifier	dwt_getnorm		501039	2					
ANR	501050	ParameterList	"int level , int orient"		501039	3					
ANR	501051	Parameter	int level	463:19:14475:14483	501039	0	True				
ANR	501052	ParameterType	int		501039	0					
ANR	501053	Identifier	level		501039	1					
ANR	501054	Parameter	int orient	463:30:14486:14495	501039	1	True				
ANR	501055	ParameterType	int		501039	0					
ANR	501056	Identifier	orient		501039	1					
ANR	501057	CFGEntryNode	ENTRY		501039		True				
ANR	501058	CFGExitNode	EXIT		501039		True				
ANR	501059	Symbol	* orient		501039						
ANR	501060	Symbol	dwt_norms		501039						
ANR	501061	Symbol	* * dwt_norms		501039						
ANR	501062	Symbol	orient		501039						
ANR	501063	Symbol	level		501039						
ANR	501064	Symbol	* * orient		501039						
ANR	501065	Symbol	* level		501039						
ANR	501066	Symbol	* dwt_norms		501039						
ANR	501067	Function	dwt_encode_real	472:0:14673:16878							
ANR	501068	FunctionDef	dwt_encode_real (opj_tcd_tilecomp_t * tilec)		501067	0					
ANR	501069	CompoundStatement		473:0:14722:16878	501067	0					
ANR	501070	IdentifierDeclStatement	"int i , j , k ;"	474:4:14728:14739	501067	0	True				
ANR	501071	IdentifierDecl	i		501067	0					
ANR	501072	IdentifierDeclType	int		501067	0					
ANR	501073	Identifier	i		501067	1					
ANR	501074	IdentifierDecl	j		501067	1					
ANR	501075	IdentifierDeclType	int		501067	0					
ANR	501076	Identifier	j		501067	1					
ANR	501077	IdentifierDecl	k		501067	2					
ANR	501078	IdentifierDeclType	int		501067	0					
ANR	501079	Identifier	k		501067	1					
ANR	501080	IdentifierDeclStatement	int * a = NULL ;	475:4:14745:14758	501067	1	True				
ANR	501081	IdentifierDecl	* a = NULL		501067	0					
ANR	501082	IdentifierDeclType	int *		501067	0					
ANR	501083	Identifier	a		501067	1					
ANR	501084	AssignmentExpression	* a = NULL		501067	2		=			
ANR	501085	Identifier	NULL		501067	0					
ANR	501086	Identifier	NULL		501067	1					
ANR	501087	IdentifierDeclStatement	int * aj = NULL ;	476:4:14764:14778	501067	2	True				
ANR	501088	IdentifierDecl	* aj = NULL		501067	0					
ANR	501089	IdentifierDeclType	int *		501067	0					
ANR	501090	Identifier	aj		501067	1					
ANR	501091	AssignmentExpression	* aj = NULL		501067	2		=			
ANR	501092	Identifier	NULL		501067	0					
ANR	501093	Identifier	NULL		501067	1					
ANR	501094	IdentifierDeclStatement	int * bj = NULL ;	477:4:14784:14798	501067	3	True				
ANR	501095	IdentifierDecl	* bj = NULL		501067	0					
ANR	501096	IdentifierDeclType	int *		501067	0					
ANR	501097	Identifier	bj		501067	1					
ANR	501098	AssignmentExpression	* bj = NULL		501067	2		=			
ANR	501099	Identifier	NULL		501067	0					
ANR	501100	Identifier	NULL		501067	1					
ANR	501101	IdentifierDeclStatement	"int w , l ;"	478:4:14804:14812	501067	4	True				
ANR	501102	IdentifierDecl	w		501067	0					
ANR	501103	IdentifierDeclType	int		501067	0					
ANR	501104	Identifier	w		501067	1					
ANR	501105	IdentifierDecl	l		501067	1					
ANR	501106	IdentifierDeclType	int		501067	0					
ANR	501107	Identifier	l		501067	1					
ANR	501108	ExpressionStatement	w = tilec -> x1 - tilec -> x0	480:4:14819:14844	501067	5	True				
ANR	501109	AssignmentExpression	w = tilec -> x1 - tilec -> x0		501067	0		=			
ANR	501110	Identifier	w		501067	0					
ANR	501111	AdditiveExpression	tilec -> x1 - tilec -> x0		501067	1		-			
ANR	501112	PtrMemberAccess	tilec -> x1		501067	0					
ANR	501113	Identifier	tilec		501067	0					
ANR	501114	Identifier	x1		501067	1					
ANR	501115	PtrMemberAccess	tilec -> x0		501067	1					
ANR	501116	Identifier	tilec		501067	0					
ANR	501117	Identifier	x0		501067	1					
ANR	501118	ExpressionStatement	l = tilec -> numresolutions - 1	481:4:14850:14879	501067	6	True				
ANR	501119	AssignmentExpression	l = tilec -> numresolutions - 1		501067	0		=			
ANR	501120	Identifier	l		501067	0					
ANR	501121	AdditiveExpression	tilec -> numresolutions - 1		501067	1		-			
ANR	501122	PtrMemberAccess	tilec -> numresolutions		501067	0					
ANR	501123	Identifier	tilec		501067	0					
ANR	501124	Identifier	numresolutions		501067	1					
ANR	501125	PrimaryExpression	1		501067	1					
ANR	501126	ExpressionStatement	a = tilec -> data	482:4:14885:14900	501067	7	True				
ANR	501127	AssignmentExpression	a = tilec -> data		501067	0		=			
ANR	501128	Identifier	a		501067	0					
ANR	501129	PtrMemberAccess	tilec -> data		501067	1					
ANR	501130	Identifier	tilec		501067	0					
ANR	501131	Identifier	data		501067	1					
ANR	501132	ForStatement	for ( i = 0 ; i < l ; i ++ )		501067	8					
ANR	501133	ForInit	i = 0 ;	484:9:14912:14917	501067	0	True				
ANR	501134	AssignmentExpression	i = 0		501067	0		=			
ANR	501135	Identifier	i		501067	0					
ANR	501136	PrimaryExpression	0		501067	1					
ANR	501137	Condition	i < l	484:16:14919:14923	501067	1	True				
ANR	501138	RelationalExpression	i < l		501067	0		<			
ANR	501139	Identifier	i		501067	0					
ANR	501140	Identifier	l		501067	1					
ANR	501141	PostIncDecOperationExpression	i ++	484:23:14926:14928	501067	2	True				
ANR	501142	Identifier	i		501067	0					
ANR	501143	IncDec	++		501067	1					
ANR	501144	CompoundStatement		19:8:956:966	501067	3					
ANR	501145	IdentifierDeclStatement	int rw ;	485:8:14941:14947	501067	0	True				
ANR	501146	IdentifierDecl	rw		501067	0					
ANR	501147	IdentifierDeclType	int		501067	0					
ANR	501148	Identifier	rw		501067	1					
ANR	501149	IdentifierDeclStatement	int rh ;	486:8:15062:15068	501067	1	True				
ANR	501150	IdentifierDecl	rh		501067	0					
ANR	501151	IdentifierDeclType	int		501067	0					
ANR	501152	Identifier	rh		501067	1					
ANR	501153	IdentifierDeclStatement	int rw1 ;	487:8:15183:15190	501067	2	True				
ANR	501154	IdentifierDecl	rw1		501067	0					
ANR	501155	IdentifierDeclType	int		501067	0					
ANR	501156	Identifier	rw1		501067	1					
ANR	501157	IdentifierDeclStatement	int rh1 ;	488:8:15304:15311	501067	3	True				
ANR	501158	IdentifierDecl	rh1		501067	0					
ANR	501159	IdentifierDeclType	int		501067	0					
ANR	501160	Identifier	rh1		501067	1					
ANR	501161	IdentifierDeclStatement	int cas_col ;	489:8:15425:15436	501067	4	True				
ANR	501162	IdentifierDecl	cas_col		501067	0					
ANR	501163	IdentifierDeclType	int		501067	0					
ANR	501164	Identifier	cas_col		501067	1					
ANR	501165	IdentifierDeclStatement	int cas_row ;	490:8:15552:15563	501067	5	True				
ANR	501166	IdentifierDecl	cas_row		501067	0					
ANR	501167	IdentifierDeclType	int		501067	0					
ANR	501168	Identifier	cas_row		501067	1					
ANR	501169	IdentifierDeclStatement	"int dn , sn ;"	491:8:15679:15689	501067	6	True				
ANR	501170	IdentifierDecl	dn		501067	0					
ANR	501171	IdentifierDeclType	int		501067	0					
ANR	501172	Identifier	dn		501067	1					
ANR	501173	IdentifierDecl	sn		501067	1					
ANR	501174	IdentifierDeclType	int		501067	0					
ANR	501175	Identifier	sn		501067	1					
ANR	501176	ExpressionStatement	rw = tilec -> resolutions [ l - i ] . x1 - tilec -> resolutions [ l - i ] . x0	493:8:15700:15764	501067	7	True				
ANR	501177	AssignmentExpression	rw = tilec -> resolutions [ l - i ] . x1 - tilec -> resolutions [ l - i ] . x0		501067	0		=			
ANR	501178	Identifier	rw		501067	0					
ANR	501179	AdditiveExpression	tilec -> resolutions [ l - i ] . x1 - tilec -> resolutions [ l - i ] . x0		501067	1		-			
ANR	501180	MemberAccess	tilec -> resolutions [ l - i ] . x1		501067	0					
ANR	501181	ArrayIndexing	tilec -> resolutions [ l - i ]		501067	0					
ANR	501182	PtrMemberAccess	tilec -> resolutions		501067	0					
ANR	501183	Identifier	tilec		501067	0					
ANR	501184	Identifier	resolutions		501067	1					
ANR	501185	AdditiveExpression	l - i		501067	1		-			
ANR	501186	Identifier	l		501067	0					
ANR	501187	Identifier	i		501067	1					
ANR	501188	Identifier	x1		501067	1					
ANR	501189	MemberAccess	tilec -> resolutions [ l - i ] . x0		501067	1					
ANR	501190	ArrayIndexing	tilec -> resolutions [ l - i ]		501067	0					
ANR	501191	PtrMemberAccess	tilec -> resolutions		501067	0					
ANR	501192	Identifier	tilec		501067	0					
ANR	501193	Identifier	resolutions		501067	1					
ANR	501194	AdditiveExpression	l - i		501067	1		-			
ANR	501195	Identifier	l		501067	0					
ANR	501196	Identifier	i		501067	1					
ANR	501197	Identifier	x0		501067	1					
ANR	501198	ExpressionStatement	rh = tilec -> resolutions [ l - i ] . y1 - tilec -> resolutions [ l - i ] . y0	494:8:15774:15838	501067	8	True				
ANR	501199	AssignmentExpression	rh = tilec -> resolutions [ l - i ] . y1 - tilec -> resolutions [ l - i ] . y0		501067	0		=			
ANR	501200	Identifier	rh		501067	0					
ANR	501201	AdditiveExpression	tilec -> resolutions [ l - i ] . y1 - tilec -> resolutions [ l - i ] . y0		501067	1		-			
ANR	501202	MemberAccess	tilec -> resolutions [ l - i ] . y1		501067	0					
ANR	501203	ArrayIndexing	tilec -> resolutions [ l - i ]		501067	0					
ANR	501204	PtrMemberAccess	tilec -> resolutions		501067	0					
ANR	501205	Identifier	tilec		501067	0					
ANR	501206	Identifier	resolutions		501067	1					
ANR	501207	AdditiveExpression	l - i		501067	1		-			
ANR	501208	Identifier	l		501067	0					
ANR	501209	Identifier	i		501067	1					
ANR	501210	Identifier	y1		501067	1					
ANR	501211	MemberAccess	tilec -> resolutions [ l - i ] . y0		501067	1					
ANR	501212	ArrayIndexing	tilec -> resolutions [ l - i ]		501067	0					
ANR	501213	PtrMemberAccess	tilec -> resolutions		501067	0					
ANR	501214	Identifier	tilec		501067	0					
ANR	501215	Identifier	resolutions		501067	1					
ANR	501216	AdditiveExpression	l - i		501067	1		-			
ANR	501217	Identifier	l		501067	0					
ANR	501218	Identifier	i		501067	1					
ANR	501219	Identifier	y0		501067	1					
ANR	501220	ExpressionStatement	rw1 = tilec -> resolutions [ l - i - 1 ] . x1 - tilec -> resolutions [ l - i - 1 ] . x0	495:8:15848:15921	501067	9	True				
ANR	501221	AssignmentExpression	rw1 = tilec -> resolutions [ l - i - 1 ] . x1 - tilec -> resolutions [ l - i - 1 ] . x0		501067	0		=			
ANR	501222	Identifier	rw1		501067	0					
ANR	501223	AdditiveExpression	tilec -> resolutions [ l - i - 1 ] . x1 - tilec -> resolutions [ l - i - 1 ] . x0		501067	1		-			
ANR	501224	MemberAccess	tilec -> resolutions [ l - i - 1 ] . x1		501067	0					
ANR	501225	ArrayIndexing	tilec -> resolutions [ l - i - 1 ]		501067	0					
ANR	501226	PtrMemberAccess	tilec -> resolutions		501067	0					
ANR	501227	Identifier	tilec		501067	0					
ANR	501228	Identifier	resolutions		501067	1					
ANR	501229	AdditiveExpression	l - i - 1		501067	1		-			
ANR	501230	Identifier	l		501067	0					
ANR	501231	AdditiveExpression	i - 1		501067	1		-			
ANR	501232	Identifier	i		501067	0					
ANR	501233	PrimaryExpression	1		501067	1					
ANR	501234	Identifier	x1		501067	1					
ANR	501235	MemberAccess	tilec -> resolutions [ l - i - 1 ] . x0		501067	1					
ANR	501236	ArrayIndexing	tilec -> resolutions [ l - i - 1 ]		501067	0					
ANR	501237	PtrMemberAccess	tilec -> resolutions		501067	0					
ANR	501238	Identifier	tilec		501067	0					
ANR	501239	Identifier	resolutions		501067	1					
ANR	501240	AdditiveExpression	l - i - 1		501067	1		-			
ANR	501241	Identifier	l		501067	0					
ANR	501242	AdditiveExpression	i - 1		501067	1		-			
ANR	501243	Identifier	i		501067	0					
ANR	501244	PrimaryExpression	1		501067	1					
ANR	501245	Identifier	x0		501067	1					
ANR	501246	ExpressionStatement	rh1 = tilec -> resolutions [ l - i - 1 ] . y1 - tilec -> resolutions [ l - i - 1 ] . y0	496:8:15931:16004	501067	10	True				
ANR	501247	AssignmentExpression	rh1 = tilec -> resolutions [ l - i - 1 ] . y1 - tilec -> resolutions [ l - i - 1 ] . y0		501067	0		=			
ANR	501248	Identifier	rh1		501067	0					
ANR	501249	AdditiveExpression	tilec -> resolutions [ l - i - 1 ] . y1 - tilec -> resolutions [ l - i - 1 ] . y0		501067	1		-			
ANR	501250	MemberAccess	tilec -> resolutions [ l - i - 1 ] . y1		501067	0					
ANR	501251	ArrayIndexing	tilec -> resolutions [ l - i - 1 ]		501067	0					
ANR	501252	PtrMemberAccess	tilec -> resolutions		501067	0					
ANR	501253	Identifier	tilec		501067	0					
ANR	501254	Identifier	resolutions		501067	1					
ANR	501255	AdditiveExpression	l - i - 1		501067	1		-			
ANR	501256	Identifier	l		501067	0					
ANR	501257	AdditiveExpression	i - 1		501067	1		-			
ANR	501258	Identifier	i		501067	0					
ANR	501259	PrimaryExpression	1		501067	1					
ANR	501260	Identifier	y1		501067	1					
ANR	501261	MemberAccess	tilec -> resolutions [ l - i - 1 ] . y0		501067	1					
ANR	501262	ArrayIndexing	tilec -> resolutions [ l - i - 1 ]		501067	0					
ANR	501263	PtrMemberAccess	tilec -> resolutions		501067	0					
ANR	501264	Identifier	tilec		501067	0					
ANR	501265	Identifier	resolutions		501067	1					
ANR	501266	AdditiveExpression	l - i - 1		501067	1		-			
ANR	501267	Identifier	l		501067	0					
ANR	501268	AdditiveExpression	i - 1		501067	1		-			
ANR	501269	Identifier	i		501067	0					
ANR	501270	PrimaryExpression	1		501067	1					
ANR	501271	Identifier	y0		501067	1					
ANR	501272	ExpressionStatement	cas_row = tilec -> resolutions [ l - i ] . x0 % 2	498:8:16015:16057	501067	11	True				
ANR	501273	AssignmentExpression	cas_row = tilec -> resolutions [ l - i ] . x0 % 2		501067	0		=			
ANR	501274	Identifier	cas_row		501067	0					
ANR	501275	MultiplicativeExpression	tilec -> resolutions [ l - i ] . x0 % 2		501067	1		%			
ANR	501276	MemberAccess	tilec -> resolutions [ l - i ] . x0		501067	0					
ANR	501277	ArrayIndexing	tilec -> resolutions [ l - i ]		501067	0					
ANR	501278	PtrMemberAccess	tilec -> resolutions		501067	0					
ANR	501279	Identifier	tilec		501067	0					
ANR	501280	Identifier	resolutions		501067	1					
ANR	501281	AdditiveExpression	l - i		501067	1		-			
ANR	501282	Identifier	l		501067	0					
ANR	501283	Identifier	i		501067	1					
ANR	501284	Identifier	x0		501067	1					
ANR	501285	PrimaryExpression	2		501067	1					
ANR	501286	ExpressionStatement	cas_col = tilec -> resolutions [ l - i ] . y0 % 2	499:8:16067:16109	501067	12	True				
ANR	501287	AssignmentExpression	cas_col = tilec -> resolutions [ l - i ] . y0 % 2		501067	0		=			
ANR	501288	Identifier	cas_col		501067	0					
ANR	501289	MultiplicativeExpression	tilec -> resolutions [ l - i ] . y0 % 2		501067	1		%			
ANR	501290	MemberAccess	tilec -> resolutions [ l - i ] . y0		501067	0					
ANR	501291	ArrayIndexing	tilec -> resolutions [ l - i ]		501067	0					
ANR	501292	PtrMemberAccess	tilec -> resolutions		501067	0					
ANR	501293	Identifier	tilec		501067	0					
ANR	501294	Identifier	resolutions		501067	1					
ANR	501295	AdditiveExpression	l - i		501067	1		-			
ANR	501296	Identifier	l		501067	0					
ANR	501297	Identifier	i		501067	1					
ANR	501298	Identifier	y0		501067	1					
ANR	501299	PrimaryExpression	2		501067	1					
ANR	501300	ExpressionStatement	sn = rh1	501:8:16120:16128	501067	13	True				
ANR	501301	AssignmentExpression	sn = rh1		501067	0		=			
ANR	501302	Identifier	sn		501067	0					
ANR	501303	Identifier	rh1		501067	1					
ANR	501304	ExpressionStatement	dn = rh - rh1	502:8:16138:16151	501067	14	True				
ANR	501305	AssignmentExpression	dn = rh - rh1		501067	0		=			
ANR	501306	Identifier	dn		501067	0					
ANR	501307	AdditiveExpression	rh - rh1		501067	1		-			
ANR	501308	Identifier	rh		501067	0					
ANR	501309	Identifier	rh1		501067	1					
ANR	501310	ExpressionStatement	bj = ( int * ) opj_malloc ( rh * sizeof ( int ) )	503:8:16161:16200	501067	15	True				
ANR	501311	AssignmentExpression	bj = ( int * ) opj_malloc ( rh * sizeof ( int ) )		501067	0		=			
ANR	501312	Identifier	bj		501067	0					
ANR	501313	CastExpression	( int * ) opj_malloc ( rh * sizeof ( int ) )		501067	1					
ANR	501314	CastTarget	int *		501067	0					
ANR	501315	CallExpression	opj_malloc ( rh * sizeof ( int ) )		501067	1					
ANR	501316	Callee	opj_malloc		501067	0					
ANR	501317	Identifier	opj_malloc		501067	0					
ANR	501318	ArgumentList	rh * sizeof ( int )		501067	1					
ANR	501319	Argument	rh * sizeof ( int )		501067	0					
ANR	501320	MultiplicativeExpression	rh * sizeof ( int )		501067	0		*			
ANR	501321	Identifier	rh		501067	0					
ANR	501322	SizeofExpression	sizeof ( int )		501067	1					
ANR	501323	Sizeof	sizeof		501067	0					
ANR	501324	SizeofOperand	int		501067	1					
ANR	501325	ForStatement	for ( j = 0 ; j < rw ; j ++ )		501067	16					
ANR	501326	ForInit	j = 0 ;	504:13:16215:16220	501067	0	True				
ANR	501327	AssignmentExpression	j = 0		501067	0		=			
ANR	501328	Identifier	j		501067	0					
ANR	501329	PrimaryExpression	0		501067	1					
ANR	501330	Condition	j < rw	504:20:16222:16227	501067	1	True				
ANR	501331	RelationalExpression	j < rw		501067	0		<			
ANR	501332	Identifier	j		501067	0					
ANR	501333	Identifier	rw		501067	1					
ANR	501334	PostIncDecOperationExpression	j ++	504:28:16230:16232	501067	2	True				
ANR	501335	Identifier	j		501067	0					
ANR	501336	IncDec	++		501067	1					
ANR	501337	CompoundStatement		32:33:1512:1512	501067	3					
ANR	501338	ExpressionStatement	aj = a + j	505:12:16249:16259	501067	0	True				
ANR	501339	AssignmentExpression	aj = a + j		501067	0		=			
ANR	501340	Identifier	aj		501067	0					
ANR	501341	AdditiveExpression	a + j		501067	1		+			
ANR	501342	Identifier	a		501067	0					
ANR	501343	Identifier	j		501067	1					
ANR	501344	ForStatement	for ( k = 0 ; k < rh ; k ++ )		501067	1					
ANR	501345	ForInit	k = 0 ;	506:17:16278:16283	501067	0	True				
ANR	501346	AssignmentExpression	k = 0		501067	0		=			
ANR	501347	Identifier	k		501067	0					
ANR	501348	PrimaryExpression	0		501067	1					
ANR	501349	Condition	k < rh	506:24:16285:16290	501067	1	True				
ANR	501350	RelationalExpression	k < rh		501067	0		<			
ANR	501351	Identifier	k		501067	0					
ANR	501352	Identifier	rh		501067	1					
ANR	501353	PostIncDecOperationExpression	k ++	506:32:16293:16295	501067	2	True				
ANR	501354	Identifier	k		501067	0					
ANR	501355	IncDec	++		501067	1					
ANR	501356	CompoundStatement		34:37:1575:1575	501067	3					
ANR	501357	ExpressionStatement	bj [ k ] = aj [ k * w ]	507:16:16316:16333	501067	0	True				
ANR	501358	AssignmentExpression	bj [ k ] = aj [ k * w ]		501067	0		=			
ANR	501359	ArrayIndexing	bj [ k ]		501067	0					
ANR	501360	Identifier	bj		501067	0					
ANR	501361	Identifier	k		501067	1					
ANR	501362	ArrayIndexing	aj [ k * w ]		501067	1					
ANR	501363	Identifier	aj		501067	0					
ANR	501364	MultiplicativeExpression	k * w		501067	1		*			
ANR	501365	Identifier	k		501067	0					
ANR	501366	Identifier	w		501067	1					
ANR	501367	ExpressionStatement	"dwt_encode_1_real ( bj , dn , sn , cas_col )"	509:12:16361:16399	501067	2	True				
ANR	501368	CallExpression	"dwt_encode_1_real ( bj , dn , sn , cas_col )"		501067	0					
ANR	501369	Callee	dwt_encode_1_real		501067	0					
ANR	501370	Identifier	dwt_encode_1_real		501067	0					
ANR	501371	ArgumentList	bj		501067	1					
ANR	501372	Argument	bj		501067	0					
ANR	501373	Identifier	bj		501067	0					
ANR	501374	Argument	dn		501067	1					
ANR	501375	Identifier	dn		501067	0					
ANR	501376	Argument	sn		501067	2					
ANR	501377	Identifier	sn		501067	0					
ANR	501378	Argument	cas_col		501067	3					
ANR	501379	Identifier	cas_col		501067	0					
ANR	501380	ExpressionStatement	"dwt_deinterleave_v ( bj , aj , dn , sn , w , cas_col )"	510:12:16413:16459	501067	3	True				
ANR	501381	CallExpression	"dwt_deinterleave_v ( bj , aj , dn , sn , w , cas_col )"		501067	0					
ANR	501382	Callee	dwt_deinterleave_v		501067	0					
ANR	501383	Identifier	dwt_deinterleave_v		501067	0					
ANR	501384	ArgumentList	bj		501067	1					
ANR	501385	Argument	bj		501067	0					
ANR	501386	Identifier	bj		501067	0					
ANR	501387	Argument	aj		501067	1					
ANR	501388	Identifier	aj		501067	0					
ANR	501389	Argument	dn		501067	2					
ANR	501390	Identifier	dn		501067	0					
ANR	501391	Argument	sn		501067	3					
ANR	501392	Identifier	sn		501067	0					
ANR	501393	Argument	w		501067	4					
ANR	501394	Identifier	w		501067	0					
ANR	501395	Argument	cas_col		501067	5					
ANR	501396	Identifier	cas_col		501067	0					
ANR	501397	ExpressionStatement	opj_free ( bj )	512:8:16479:16491	501067	17	True				
ANR	501398	CallExpression	opj_free ( bj )		501067	0					
ANR	501399	Callee	opj_free		501067	0					
ANR	501400	Identifier	opj_free		501067	0					
ANR	501401	ArgumentList	bj		501067	1					
ANR	501402	Argument	bj		501067	0					
ANR	501403	Identifier	bj		501067	0					
ANR	501404	ExpressionStatement	sn = rw1	514:8:16502:16510	501067	18	True				
ANR	501405	AssignmentExpression	sn = rw1		501067	0		=			
ANR	501406	Identifier	sn		501067	0					
ANR	501407	Identifier	rw1		501067	1					
ANR	501408	ExpressionStatement	dn = rw - rw1	515:8:16520:16533	501067	19	True				
ANR	501409	AssignmentExpression	dn = rw - rw1		501067	0		=			
ANR	501410	Identifier	dn		501067	0					
ANR	501411	AdditiveExpression	rw - rw1		501067	1		-			
ANR	501412	Identifier	rw		501067	0					
ANR	501413	Identifier	rw1		501067	1					
ANR	501414	ExpressionStatement	bj = ( int * ) opj_malloc ( rw * sizeof ( int ) )	516:8:16543:16582	501067	20	True				
ANR	501415	AssignmentExpression	bj = ( int * ) opj_malloc ( rw * sizeof ( int ) )		501067	0		=			
ANR	501416	Identifier	bj		501067	0					
ANR	501417	CastExpression	( int * ) opj_malloc ( rw * sizeof ( int ) )		501067	1					
ANR	501418	CastTarget	int *		501067	0					
ANR	501419	CallExpression	opj_malloc ( rw * sizeof ( int ) )		501067	1					
ANR	501420	Callee	opj_malloc		501067	0					
ANR	501421	Identifier	opj_malloc		501067	0					
ANR	501422	ArgumentList	rw * sizeof ( int )		501067	1					
ANR	501423	Argument	rw * sizeof ( int )		501067	0					
ANR	501424	MultiplicativeExpression	rw * sizeof ( int )		501067	0		*			
ANR	501425	Identifier	rw		501067	0					
ANR	501426	SizeofExpression	sizeof ( int )		501067	1					
ANR	501427	Sizeof	sizeof		501067	0					
ANR	501428	SizeofOperand	int		501067	1					
ANR	501429	ForStatement	for ( j = 0 ; j < rh ; j ++ )		501067	21					
ANR	501430	ForInit	j = 0 ;	517:13:16597:16602	501067	0	True				
ANR	501431	AssignmentExpression	j = 0		501067	0		=			
ANR	501432	Identifier	j		501067	0					
ANR	501433	PrimaryExpression	0		501067	1					
ANR	501434	Condition	j < rh	517:20:16604:16609	501067	1	True				
ANR	501435	RelationalExpression	j < rh		501067	0		<			
ANR	501436	Identifier	j		501067	0					
ANR	501437	Identifier	rh		501067	1					
ANR	501438	PostIncDecOperationExpression	j ++	517:28:16612:16614	501067	2	True				
ANR	501439	Identifier	j		501067	0					
ANR	501440	IncDec	++		501067	1					
ANR	501441	CompoundStatement		45:33:1894:1894	501067	3					
ANR	501442	ExpressionStatement	aj = a + j * w	518:12:16631:16645	501067	0	True				
ANR	501443	AssignmentExpression	aj = a + j * w		501067	0		=			
ANR	501444	Identifier	aj		501067	0					
ANR	501445	AdditiveExpression	a + j * w		501067	1		+			
ANR	501446	Identifier	a		501067	0					
ANR	501447	MultiplicativeExpression	j * w		501067	1		*			
ANR	501448	Identifier	j		501067	0					
ANR	501449	Identifier	w		501067	1					
ANR	501450	ForStatement	for ( k = 0 ; k < rw ; k ++ )		501067	1					
ANR	501451	ForInit	k = 0 ;	519:17:16664:16669	501067	0	True				
ANR	501452	AssignmentExpression	k = 0		501067	0		=			
ANR	501453	Identifier	k		501067	0					
ANR	501454	PrimaryExpression	0		501067	1					
ANR	501455	Condition	k < rw	519:24:16671:16676	501067	1	True				
ANR	501456	RelationalExpression	k < rw		501067	0		<			
ANR	501457	Identifier	k		501067	0					
ANR	501458	Identifier	rw		501067	1					
ANR	501459	PostIncDecOperationExpression	k ++	519:32:16679:16681	501067	2	True				
ANR	501460	Identifier	k		501067	0					
ANR	501461	IncDec	++		501067	1					
ANR	501462	CompoundStatement		47:37:1961:1961	501067	3					
ANR	501463	ExpressionStatement	bj [ k ] = aj [ k ]	520:16:16702:16715	501067	0	True				
ANR	501464	AssignmentExpression	bj [ k ] = aj [ k ]		501067	0		=			
ANR	501465	ArrayIndexing	bj [ k ]		501067	0					
ANR	501466	Identifier	bj		501067	0					
ANR	501467	Identifier	k		501067	1					
ANR	501468	ArrayIndexing	aj [ k ]		501067	1					
ANR	501469	Identifier	aj		501067	0					
ANR	501470	Identifier	k		501067	1					
ANR	501471	ExpressionStatement	"dwt_encode_1_real ( bj , dn , sn , cas_row )"	522:12:16743:16781	501067	2	True				
ANR	501472	CallExpression	"dwt_encode_1_real ( bj , dn , sn , cas_row )"		501067	0					
ANR	501473	Callee	dwt_encode_1_real		501067	0					
ANR	501474	Identifier	dwt_encode_1_real		501067	0					
ANR	501475	ArgumentList	bj		501067	1					
ANR	501476	Argument	bj		501067	0					
ANR	501477	Identifier	bj		501067	0					
ANR	501478	Argument	dn		501067	1					
ANR	501479	Identifier	dn		501067	0					
ANR	501480	Argument	sn		501067	2					
ANR	501481	Identifier	sn		501067	0					
ANR	501482	Argument	cas_row		501067	3					
ANR	501483	Identifier	cas_row		501067	0					
ANR	501484	ExpressionStatement	"dwt_deinterleave_h ( bj , aj , dn , sn , cas_row )"	523:12:16795:16838	501067	3	True				
ANR	501485	CallExpression	"dwt_deinterleave_h ( bj , aj , dn , sn , cas_row )"		501067	0					
ANR	501486	Callee	dwt_deinterleave_h		501067	0					
ANR	501487	Identifier	dwt_deinterleave_h		501067	0					
ANR	501488	ArgumentList	bj		501067	1					
ANR	501489	Argument	bj		501067	0					
ANR	501490	Identifier	bj		501067	0					
ANR	501491	Argument	aj		501067	1					
ANR	501492	Identifier	aj		501067	0					
ANR	501493	Argument	dn		501067	2					
ANR	501494	Identifier	dn		501067	0					
ANR	501495	Argument	sn		501067	3					
ANR	501496	Identifier	sn		501067	0					
ANR	501497	Argument	cas_row		501067	4					
ANR	501498	Identifier	cas_row		501067	0					
ANR	501499	ExpressionStatement	opj_free ( bj )	525:8:16858:16870	501067	22	True				
ANR	501500	CallExpression	opj_free ( bj )		501067	0					
ANR	501501	Callee	opj_free		501067	0					
ANR	501502	Identifier	opj_free		501067	0					
ANR	501503	ArgumentList	bj		501067	1					
ANR	501504	Argument	bj		501067	0					
ANR	501505	Identifier	bj		501067	0					
ANR	501506	ReturnType	void		501067	1					
ANR	501507	Identifier	dwt_encode_real		501067	2					
ANR	501508	ParameterList	opj_tcd_tilecomp_t * tilec		501067	3					
ANR	501509	Parameter	opj_tcd_tilecomp_t * tilec	472:21:14694:14719	501067	0	True				
ANR	501510	ParameterType	opj_tcd_tilecomp_t *		501067	0					
ANR	501511	Identifier	tilec		501067	1					
ANR	501512	CFGEntryNode	ENTRY		501067		True				
ANR	501513	CFGExitNode	EXIT		501067		True				
ANR	501514	Symbol	opj_malloc		501067						
ANR	501515	Symbol	* w		501067						
ANR	501516	Symbol	tilec -> resolutions [ l - i - 1 ] . x0		501067						
ANR	501517	Symbol	rw		501067						
ANR	501518	Symbol	cas_col		501067						
ANR	501519	Symbol	bj		501067						
ANR	501520	Symbol	tilec -> data		501067						
ANR	501521	Symbol	dn		501067						
ANR	501522	Symbol	* tilec		501067						
ANR	501523	Symbol	* aj		501067						
ANR	501524	Symbol	rw1		501067						
ANR	501525	Symbol	tilec -> resolutions [ l - i ] . y1		501067						
ANR	501526	Symbol	tilec -> resolutions [ l - i ] . y0		501067						
ANR	501527	Symbol	sn		501067						
ANR	501528	Symbol	tilec -> resolutions [ l - i - 1 ] . x1		501067						
ANR	501529	Symbol	* * tilec		501067						
ANR	501530	Symbol	cas_row		501067						
ANR	501531	Symbol	tilec		501067						
ANR	501532	Symbol	a		501067						
ANR	501533	Symbol	NULL		501067						
ANR	501534	Symbol	tilec -> resolutions [ l - i - 1 ] . y1		501067						
ANR	501535	Symbol	tilec -> resolutions [ l - i - 1 ] . y0		501067						
ANR	501536	Symbol	i		501067						
ANR	501537	Symbol	aj		501067						
ANR	501538	Symbol	j		501067						
ANR	501539	Symbol	k		501067						
ANR	501540	Symbol	l		501067						
ANR	501541	Symbol	tilec -> x0		501067						
ANR	501542	Symbol	tilec -> x1		501067						
ANR	501543	Symbol	* bj		501067						
ANR	501544	Symbol	tilec -> resolutions [ l - i ] . x0		501067						
ANR	501545	Symbol	tilec -> resolutions [ l - i ] . x1		501067						
ANR	501546	Symbol	* i		501067						
ANR	501547	Symbol	tilec -> resolutions		501067						
ANR	501548	Symbol	tilec -> numresolutions		501067						
ANR	501549	Symbol	* k		501067						
ANR	501550	Symbol	rh		501067						
ANR	501551	Symbol	* l		501067						
ANR	501552	Symbol	w		501067						
ANR	501553	Symbol	rh1		501067						
ANR	501554	Symbol	* tilec -> resolutions		501067						
ANR	501555	Function	dwt_getgain_real	533:0:17005:17072							
ANR	501556	FunctionDef	dwt_getgain_real (int orient)		501555	0					
ANR	501557	CompoundStatement		534:0:17038:17072	501555	0					
ANR	501558	ExpressionStatement	( void ) orient	535:4:17044:17056	501555	0	True				
ANR	501559	CastExpression	( void ) orient		501555	0					
ANR	501560	CastTarget	void		501555	0					
ANR	501561	Identifier	orient		501555	1					
ANR	501562	ReturnStatement	return 0 ;	536:4:17062:17070	501555	1	True				
ANR	501563	PrimaryExpression	0		501555	0					
ANR	501564	ReturnType	int		501555	1					
ANR	501565	Identifier	dwt_getgain_real		501555	2					
ANR	501566	ParameterList	int orient		501555	3					
ANR	501567	Parameter	int orient	533:21:17026:17035	501555	0	True				
ANR	501568	ParameterType	int		501555	0					
ANR	501569	Identifier	orient		501555	1					
ANR	501570	CFGEntryNode	ENTRY		501555		True				
ANR	501571	CFGExitNode	EXIT		501555		True				
ANR	501572	Symbol	orient		501555						
ANR	501573	Function	dwt_getnorm_real	542:0:17168:17259							
ANR	501574	FunctionDef	"dwt_getnorm_real (int level , int orient)"		501573	0					
ANR	501575	CompoundStatement		543:0:17215:17259	501573	0					
ANR	501576	ReturnStatement	return dwt_norms_real [ orient ] [ level ] ;	544:4:17221:17257	501573	0	True				
ANR	501577	ArrayIndexing	dwt_norms_real [ orient ] [ level ]		501573	0					
ANR	501578	ArrayIndexing	dwt_norms_real [ orient ]		501573	0					
ANR	501579	Identifier	dwt_norms_real		501573	0					
ANR	501580	Identifier	orient		501573	1					
ANR	501581	Identifier	level		501573	1					
ANR	501582	ReturnType	double		501573	1					
ANR	501583	Identifier	dwt_getnorm_real		501573	2					
ANR	501584	ParameterList	"int level , int orient"		501573	3					
ANR	501585	Parameter	int level	542:24:17192:17200	501573	0	True				
ANR	501586	ParameterType	int		501573	0					
ANR	501587	Identifier	level		501573	1					
ANR	501588	Parameter	int orient	542:35:17203:17212	501573	1	True				
ANR	501589	ParameterType	int		501573	0					
ANR	501590	Identifier	orient		501573	1					
ANR	501591	CFGEntryNode	ENTRY		501573		True				
ANR	501592	CFGExitNode	EXIT		501573		True				
ANR	501593	Symbol	* orient		501573						
ANR	501594	Symbol	* * dwt_norms_real		501573						
ANR	501595	Symbol	* dwt_norms_real		501573						
ANR	501596	Symbol	orient		501573						
ANR	501597	Symbol	level		501573						
ANR	501598	Symbol	* * orient		501573						
ANR	501599	Symbol	dwt_norms_real		501573						
ANR	501600	Symbol	* level		501573						
ANR	501601	Function	dwt_calc_explicit_stepsizes	547:0:17262:18178							
ANR	501602	FunctionDef	"dwt_calc_explicit_stepsizes (opj_tccp_t * tccp , int prec)"		501601	0					
ANR	501603	CompoundStatement		548:0:17324:18178	501601	0					
ANR	501604	IdentifierDeclStatement	"int numbands , bandno ;"	549:4:17330:17350	501601	0	True				
ANR	501605	IdentifierDecl	numbands		501601	0					
ANR	501606	IdentifierDeclType	int		501601	0					
ANR	501607	Identifier	numbands		501601	1					
ANR	501608	IdentifierDecl	bandno		501601	1					
ANR	501609	IdentifierDeclType	int		501601	0					
ANR	501610	Identifier	bandno		501601	1					
ANR	501611	ExpressionStatement	numbands = 3 * tccp -> numresolutions - 2	550:4:17356:17395	501601	1	True				
ANR	501612	AssignmentExpression	numbands = 3 * tccp -> numresolutions - 2		501601	0		=			
ANR	501613	Identifier	numbands		501601	0					
ANR	501614	AdditiveExpression	3 * tccp -> numresolutions - 2		501601	1		-			
ANR	501615	MultiplicativeExpression	3 * tccp -> numresolutions		501601	0		*			
ANR	501616	PrimaryExpression	3		501601	0					
ANR	501617	PtrMemberAccess	tccp -> numresolutions		501601	1					
ANR	501618	Identifier	tccp		501601	0					
ANR	501619	Identifier	numresolutions		501601	1					
ANR	501620	PrimaryExpression	2		501601	1					
ANR	501621	ForStatement	for ( bandno = 0 ; bandno < numbands ; bandno ++ )		501601	2					
ANR	501622	ForInit	bandno = 0 ;	551:9:17406:17416	501601	0	True				
ANR	501623	AssignmentExpression	bandno = 0		501601	0		=			
ANR	501624	Identifier	bandno		501601	0					
ANR	501625	PrimaryExpression	0		501601	1					
ANR	501626	Condition	bandno < numbands	551:21:17418:17434	501601	1	True				
ANR	501627	RelationalExpression	bandno < numbands		501601	0		<			
ANR	501628	Identifier	bandno		501601	0					
ANR	501629	Identifier	numbands		501601	1					
ANR	501630	PostIncDecOperationExpression	bandno ++	551:40:17437:17444	501601	2	True				
ANR	501631	Identifier	bandno		501601	0					
ANR	501632	IncDec	++		501601	1					
ANR	501633	CompoundStatement		6:8:157:187	501601	3					
ANR	501634	IdentifierDeclStatement	double stepsize ;	552:8:17457:17472	501601	0	True				
ANR	501635	IdentifierDecl	stepsize		501601	0					
ANR	501636	IdentifierDeclType	double		501601	0					
ANR	501637	Identifier	stepsize		501601	1					
ANR	501638	IdentifierDeclStatement	"int resno , level , orient , gain ;"	553:8:17482:17512	501601	1	True				
ANR	501639	IdentifierDecl	resno		501601	0					
ANR	501640	IdentifierDeclType	int		501601	0					
ANR	501641	Identifier	resno		501601	1					
ANR	501642	IdentifierDecl	level		501601	1					
ANR	501643	IdentifierDeclType	int		501601	0					
ANR	501644	Identifier	level		501601	1					
ANR	501645	IdentifierDecl	orient		501601	2					
ANR	501646	IdentifierDeclType	int		501601	0					
ANR	501647	Identifier	orient		501601	1					
ANR	501648	IdentifierDecl	gain		501601	3					
ANR	501649	IdentifierDeclType	int		501601	0					
ANR	501650	Identifier	gain		501601	1					
ANR	501651	ExpressionStatement	resno = ( bandno == 0 ) ? 0 : ( ( bandno - 1 ) / 3 + 1 )	555:8:17523:17573	501601	2	True				
ANR	501652	AssignmentExpression	resno = ( bandno == 0 ) ? 0 : ( ( bandno - 1 ) / 3 + 1 )		501601	0		=			
ANR	501653	Identifier	resno		501601	0					
ANR	501654	ConditionalExpression	( bandno == 0 ) ? 0 : ( ( bandno - 1 ) / 3 + 1 )		501601	1					
ANR	501655	Condition	bandno == 0		501601	0					
ANR	501656	EqualityExpression	bandno == 0		501601	0		==			
ANR	501657	Identifier	bandno		501601	0					
ANR	501658	PrimaryExpression	0		501601	1					
ANR	501659	PrimaryExpression	0		501601	1					
ANR	501660	AdditiveExpression	( bandno - 1 ) / 3 + 1		501601	2		+			
ANR	501661	MultiplicativeExpression	( bandno - 1 ) / 3		501601	0		/			
ANR	501662	AdditiveExpression	bandno - 1		501601	0		-			
ANR	501663	Identifier	bandno		501601	0					
ANR	501664	PrimaryExpression	1		501601	1					
ANR	501665	PrimaryExpression	3		501601	1					
ANR	501666	PrimaryExpression	1		501601	1					
ANR	501667	ExpressionStatement	orient = ( bandno == 0 ) ? 0 : ( ( bandno - 1 ) % 3 + 1 )	556:8:17583:17634	501601	3	True				
ANR	501668	AssignmentExpression	orient = ( bandno == 0 ) ? 0 : ( ( bandno - 1 ) % 3 + 1 )		501601	0		=			
ANR	501669	Identifier	orient		501601	0					
ANR	501670	ConditionalExpression	( bandno == 0 ) ? 0 : ( ( bandno - 1 ) % 3 + 1 )		501601	1					
ANR	501671	Condition	bandno == 0		501601	0					
ANR	501672	EqualityExpression	bandno == 0		501601	0		==			
ANR	501673	Identifier	bandno		501601	0					
ANR	501674	PrimaryExpression	0		501601	1					
ANR	501675	PrimaryExpression	0		501601	1					
ANR	501676	AdditiveExpression	( bandno - 1 ) % 3 + 1		501601	2		+			
ANR	501677	MultiplicativeExpression	( bandno - 1 ) % 3		501601	0		%			
ANR	501678	AdditiveExpression	bandno - 1		501601	0		-			
ANR	501679	Identifier	bandno		501601	0					
ANR	501680	PrimaryExpression	1		501601	1					
ANR	501681	PrimaryExpression	3		501601	1					
ANR	501682	PrimaryExpression	1		501601	1					
ANR	501683	ExpressionStatement	level = tccp -> numresolutions - 1 - resno	557:8:17644:17684	501601	4	True				
ANR	501684	AssignmentExpression	level = tccp -> numresolutions - 1 - resno		501601	0		=			
ANR	501685	Identifier	level		501601	0					
ANR	501686	AdditiveExpression	tccp -> numresolutions - 1 - resno		501601	1		-			
ANR	501687	PtrMemberAccess	tccp -> numresolutions		501601	0					
ANR	501688	Identifier	tccp		501601	0					
ANR	501689	Identifier	numresolutions		501601	1					
ANR	501690	AdditiveExpression	1 - resno		501601	1		-			
ANR	501691	PrimaryExpression	1		501601	0					
ANR	501692	Identifier	resno		501601	1					
ANR	501693	ExpressionStatement	gain = ( tccp -> qmfbid == 0 ) ? 0 : ( ( orient == 0 ) ? 0 : ( ( ( orient == 1 ) || ( orient == 2 ) ) ? 1 : 2 ) )	558:8:17694:17833	501601	5	True				
ANR	501694	AssignmentExpression	gain = ( tccp -> qmfbid == 0 ) ? 0 : ( ( orient == 0 ) ? 0 : ( ( ( orient == 1 ) || ( orient == 2 ) ) ? 1 : 2 ) )		501601	0		=			
ANR	501695	Identifier	gain		501601	0					
ANR	501696	ConditionalExpression	( tccp -> qmfbid == 0 ) ? 0 : ( ( orient == 0 ) ? 0 : ( ( ( orient == 1 ) || ( orient == 2 ) ) ? 1 : 2 ) )		501601	1					
ANR	501697	Condition	tccp -> qmfbid == 0		501601	0					
ANR	501698	EqualityExpression	tccp -> qmfbid == 0		501601	0		==			
ANR	501699	PtrMemberAccess	tccp -> qmfbid		501601	0					
ANR	501700	Identifier	tccp		501601	0					
ANR	501701	Identifier	qmfbid		501601	1					
ANR	501702	PrimaryExpression	0		501601	1					
ANR	501703	PrimaryExpression	0		501601	1					
ANR	501704	ConditionalExpression	( orient == 0 ) ? 0 : ( ( ( orient == 1 ) || ( orient == 2 ) ) ? 1 : 2 )		501601	2					
ANR	501705	Condition	orient == 0		501601	0					
ANR	501706	EqualityExpression	orient == 0		501601	0		==			
ANR	501707	Identifier	orient		501601	0					
ANR	501708	PrimaryExpression	0		501601	1					
ANR	501709	PrimaryExpression	0		501601	1					
ANR	501710	ConditionalExpression	( ( orient == 1 ) || ( orient == 2 ) ) ? 1 : 2		501601	2					
ANR	501711	Condition	( orient == 1 ) || ( orient == 2 )		501601	0					
ANR	501712	OrExpression	( orient == 1 ) || ( orient == 2 )		501601	0		||			
ANR	501713	EqualityExpression	orient == 1		501601	0		==			
ANR	501714	Identifier	orient		501601	0					
ANR	501715	PrimaryExpression	1		501601	1					
ANR	501716	EqualityExpression	orient == 2		501601	1		==			
ANR	501717	Identifier	orient		501601	0					
ANR	501718	PrimaryExpression	2		501601	1					
ANR	501719	PrimaryExpression	1		501601	1					
ANR	501720	PrimaryExpression	2		501601	2					
ANR	501721	IfStatement	if ( tccp -> qntsty == J2K_CCP_QNTSTY_NOQNT )		501601	6					
ANR	501722	Condition	tccp -> qntsty == J2K_CCP_QNTSTY_NOQNT	560:12:17847:17882	501601	0	True				
ANR	501723	EqualityExpression	tccp -> qntsty == J2K_CCP_QNTSTY_NOQNT		501601	0		==			
ANR	501724	PtrMemberAccess	tccp -> qntsty		501601	0					
ANR	501725	Identifier	tccp		501601	0					
ANR	501726	Identifier	qntsty		501601	1					
ANR	501727	Identifier	J2K_CCP_QNTSTY_NOQNT		501601	1					
ANR	501728	CompoundStatement		13:50:560:560	501601	1					
ANR	501729	ExpressionStatement	stepsize = 1.0	561:12:17899:17913	501601	0	True				
ANR	501730	AssignmentExpression	stepsize = 1.0		501601	0		=			
ANR	501731	Identifier	stepsize		501601	0					
ANR	501732	PrimaryExpression	1.0		501601	1					
ANR	501733	ElseStatement	else		501601	0					
ANR	501734	CompoundStatement		16:12:619:662	501601	0					
ANR	501735	IdentifierDeclStatement	double norm = dwt_norms_real [ orient ] [ level ] ;	563:12:17944:17987	501601	0	True				
ANR	501736	IdentifierDecl	norm = dwt_norms_real [ orient ] [ level ]		501601	0					
ANR	501737	IdentifierDeclType	double		501601	0					
ANR	501738	Identifier	norm		501601	1					
ANR	501739	AssignmentExpression	norm = dwt_norms_real [ orient ] [ level ]		501601	2		=			
ANR	501740	Identifier	norm		501601	0					
ANR	501741	ArrayIndexing	dwt_norms_real [ orient ] [ level ]		501601	1					
ANR	501742	ArrayIndexing	dwt_norms_real [ orient ]		501601	0					
ANR	501743	Identifier	dwt_norms_real		501601	0					
ANR	501744	Identifier	orient		501601	1					
ANR	501745	Identifier	level		501601	1					
ANR	501746	ExpressionStatement	stepsize = ( 1 << ( gain ) ) / norm	564:12:18001:18032	501601	1	True				
ANR	501747	AssignmentExpression	stepsize = ( 1 << ( gain ) ) / norm		501601	0		=			
ANR	501748	Identifier	stepsize		501601	0					
ANR	501749	MultiplicativeExpression	( 1 << ( gain ) ) / norm		501601	1		/			
ANR	501750	ShiftExpression	1 << ( gain )		501601	0		<<			
ANR	501751	PrimaryExpression	1		501601	0					
ANR	501752	Identifier	gain		501601	1					
ANR	501753	Identifier	norm		501601	1					
ANR	501754	ExpressionStatement	"dwt_encode_stepsize ( ( int ) floor ( stepsize * 8192.0 ) , prec + gain , & tccp -> stepsizes [ bandno ] )"	566:8:18052:18170	501601	7	True				
ANR	501755	CallExpression	"dwt_encode_stepsize ( ( int ) floor ( stepsize * 8192.0 ) , prec + gain , & tccp -> stepsizes [ bandno ] )"		501601	0					
ANR	501756	Callee	dwt_encode_stepsize		501601	0					
ANR	501757	Identifier	dwt_encode_stepsize		501601	0					
ANR	501758	ArgumentList	( int ) floor ( stepsize * 8192.0 )		501601	1					
ANR	501759	Argument	( int ) floor ( stepsize * 8192.0 )		501601	0					
ANR	501760	CastExpression	( int ) floor ( stepsize * 8192.0 )		501601	0					
ANR	501761	CastTarget	int		501601	0					
ANR	501762	CallExpression	floor ( stepsize * 8192.0 )		501601	1					
ANR	501763	Callee	floor		501601	0					
ANR	501764	Identifier	floor		501601	0					
ANR	501765	ArgumentList	stepsize * 8192.0		501601	1					
ANR	501766	Argument	stepsize * 8192.0		501601	0					
ANR	501767	MultiplicativeExpression	stepsize * 8192.0		501601	0		*			
ANR	501768	Identifier	stepsize		501601	0					
ANR	501769	PrimaryExpression	8192.0		501601	1					
ANR	501770	Argument	prec + gain		501601	1					
ANR	501771	AdditiveExpression	prec + gain		501601	0		+			
ANR	501772	Identifier	prec		501601	0					
ANR	501773	Identifier	gain		501601	1					
ANR	501774	Argument	& tccp -> stepsizes [ bandno ]		501601	2					
ANR	501775	UnaryOperationExpression	& tccp -> stepsizes [ bandno ]		501601	0					
ANR	501776	UnaryOperator	&		501601	0					
ANR	501777	ArrayIndexing	tccp -> stepsizes [ bandno ]		501601	1					
ANR	501778	PtrMemberAccess	tccp -> stepsizes		501601	0					
ANR	501779	Identifier	tccp		501601	0					
ANR	501780	Identifier	stepsizes		501601	1					
ANR	501781	Identifier	bandno		501601	1					
ANR	501782	ReturnType	void		501601	1					
ANR	501783	Identifier	dwt_calc_explicit_stepsizes		501601	2					
ANR	501784	ParameterList	"opj_tccp_t * tccp , int prec"		501601	3					
ANR	501785	Parameter	opj_tccp_t * tccp	547:33:17295:17311	501601	0	True				
ANR	501786	ParameterType	opj_tccp_t *		501601	0					
ANR	501787	Identifier	tccp		501601	1					
ANR	501788	Parameter	int prec	547:52:17314:17321	501601	1	True				
ANR	501789	ParameterType	int		501601	0					
ANR	501790	Identifier	prec		501601	1					
ANR	501791	CFGEntryNode	ENTRY		501601		True				
ANR	501792	CFGExitNode	EXIT		501601		True				
ANR	501793	Symbol	* orient		501601						
ANR	501794	Symbol	* dwt_norms_real		501601						
ANR	501795	Symbol	orient		501601						
ANR	501796	Symbol	level		501601						
ANR	501797	Symbol	* * orient		501601						
ANR	501798	Symbol	tccp -> qntsty		501601						
ANR	501799	Symbol	J2K_CCP_QNTSTY_NOQNT		501601						
ANR	501800	Symbol	tccp		501601						
ANR	501801	Symbol	tccp -> qmfbid		501601						
ANR	501802	Symbol	tccp -> stepsizes		501601						
ANR	501803	Symbol	* level		501601						
ANR	501804	Symbol	gain		501601						
ANR	501805	Symbol	norm		501601						
ANR	501806	Symbol	bandno		501601						
ANR	501807	Symbol	* * dwt_norms_real		501601						
ANR	501808	Symbol	prec		501601						
ANR	501809	Symbol	numbands		501601						
ANR	501810	Symbol	tccp -> numresolutions		501601						
ANR	501811	Symbol	* tccp		501601						
ANR	501812	Symbol	resno		501601						
ANR	501813	Symbol	dwt_norms_real		501601						
ANR	501814	Symbol	floor		501601						
ANR	501815	Symbol	stepsize		501601						
ANR	501816	Function	dwt_decode_max_resolution	575:0:18350:18653							
ANR	501817	FunctionDef	"dwt_decode_max_resolution (opj_tcd_resolution_t * restrict r , int i)"		501816	0					
ANR	501818	CompoundStatement		576:0:18428:18653	501816	0					
ANR	501819	IdentifierDeclStatement	int mr = 1 ;	577:4:18434:18445	501816	0	True				
ANR	501820	IdentifierDecl	mr = 1		501816	0					
ANR	501821	IdentifierDeclType	int		501816	0					
ANR	501822	Identifier	mr		501816	1					
ANR	501823	AssignmentExpression	mr = 1		501816	2		=			
ANR	501824	Identifier	mr		501816	0					
ANR	501825	PrimaryExpression	1		501816	1					
ANR	501826	IdentifierDeclStatement	int w ;	578:4:18451:18456	501816	1	True				
ANR	501827	IdentifierDecl	w		501816	0					
ANR	501828	IdentifierDeclType	int		501816	0					
ANR	501829	Identifier	w		501816	1					
ANR	501830	WhileStatement	while ( -- i )		501816	2					
ANR	501831	Condition	-- i	579:11:18469:18471	501816	0	True				
ANR	501832	UnaryExpression	-- i		501816	0					
ANR	501833	IncDec	--		501816	0					
ANR	501834	Identifier	i		501816	1					
ANR	501835	CompoundStatement		4:16:45:45	501816	1					
ANR	501836	ExpressionStatement	r ++	580:8:18484:18487	501816	0	True				
ANR	501837	PostIncDecOperationExpression	r ++		501816	0					
ANR	501838	Identifier	r		501816	0					
ANR	501839	IncDec	++		501816	1					
ANR	501840	IfStatement	if ( mr < ( w = r -> x1 - r -> x0 ) )		501816	1					
ANR	501841	Condition	mr < ( w = r -> x1 - r -> x0 )	581:12:18501:18524	501816	0	True				
ANR	501842	RelationalExpression	mr < ( w = r -> x1 - r -> x0 )		501816	0		<			
ANR	501843	Identifier	mr		501816	0					
ANR	501844	AssignmentExpression	w = r -> x1 - r -> x0		501816	1		=			
ANR	501845	Identifier	w		501816	0					
ANR	501846	AdditiveExpression	r -> x1 - r -> x0		501816	1		-			
ANR	501847	PtrMemberAccess	r -> x1		501816	0					
ANR	501848	Identifier	r		501816	0					
ANR	501849	Identifier	x1		501816	1					
ANR	501850	PtrMemberAccess	r -> x0		501816	1					
ANR	501851	Identifier	r		501816	0					
ANR	501852	Identifier	x0		501816	1					
ANR	501853	CompoundStatement		6:38:98:98	501816	1					
ANR	501854	ExpressionStatement	mr = w	582:12:18541:18548	501816	0	True				
ANR	501855	AssignmentExpression	mr = w		501816	0		=			
ANR	501856	Identifier	mr		501816	0					
ANR	501857	Identifier	w		501816	1					
ANR	501858	IfStatement	if ( mr < ( w = r -> y1 - r -> y0 ) )		501816	2					
ANR	501859	Condition	mr < ( w = r -> y1 - r -> y0 )	584:12:18572:18595	501816	0	True				
ANR	501860	RelationalExpression	mr < ( w = r -> y1 - r -> y0 )		501816	0		<			
ANR	501861	Identifier	mr		501816	0					
ANR	501862	AssignmentExpression	w = r -> y1 - r -> y0		501816	1		=			
ANR	501863	Identifier	w		501816	0					
ANR	501864	AdditiveExpression	r -> y1 - r -> y0		501816	1		-			
ANR	501865	PtrMemberAccess	r -> y1		501816	0					
ANR	501866	Identifier	r		501816	0					
ANR	501867	Identifier	y1		501816	1					
ANR	501868	PtrMemberAccess	r -> y0		501816	1					
ANR	501869	Identifier	r		501816	0					
ANR	501870	Identifier	y0		501816	1					
ANR	501871	CompoundStatement		9:38:169:169	501816	1					
ANR	501872	ExpressionStatement	mr = w	585:12:18612:18619	501816	0	True				
ANR	501873	AssignmentExpression	mr = w		501816	0		=			
ANR	501874	Identifier	mr		501816	0					
ANR	501875	Identifier	w		501816	1					
ANR	501876	ReturnStatement	return mr ;	588:4:18641:18651	501816	3	True				
ANR	501877	Identifier	mr		501816	0					
ANR	501878	ReturnType	static int		501816	1					
ANR	501879	Identifier	dwt_decode_max_resolution		501816	2					
ANR	501880	ParameterList	"opj_tcd_resolution_t * restrict r , int i"		501816	3					
ANR	501881	Parameter	opj_tcd_resolution_t * restrict r	575:37:18387:18418	501816	0	True				
ANR	501882	ParameterType	opj_tcd_resolution_t * restrict		501816	0					
ANR	501883	Identifier	r		501816	1					
ANR	501884	Parameter	int i	575:71:18421:18425	501816	1	True				
ANR	501885	ParameterType	int		501816	0					
ANR	501886	Identifier	i		501816	1					
ANR	501887	CFGEntryNode	ENTRY		501816		True				
ANR	501888	CFGExitNode	EXIT		501816		True				
ANR	501889	Symbol	r -> y0		501816						
ANR	501890	Symbol	r -> x0		501816						
ANR	501891	Symbol	r -> y1		501816						
ANR	501892	Symbol	r		501816						
ANR	501893	Symbol	r -> x1		501816						
ANR	501894	Symbol	mr		501816						
ANR	501895	Symbol	w		501816						
ANR	501896	Symbol	i		501816						
ANR	501897	Symbol	* r		501816						
ANR	501898	Function	dwt_decode_tile	595:0:18787:20083							
ANR	501899	FunctionDef	"dwt_decode_tile (opj_tcd_tilecomp_t * tilec , int numres , DWT1DFN dwt_1D)"		501898	0					
ANR	501900	CompoundStatement		597:0:18898:20083	501898	0					
ANR	501901	IdentifierDeclStatement	dwt_t h ;	598:4:18904:18911	501898	0	True				
ANR	501902	IdentifierDecl	h		501898	0					
ANR	501903	IdentifierDeclType	dwt_t		501898	0					
ANR	501904	Identifier	h		501898	1					
ANR	501905	IdentifierDeclStatement	dwt_t v ;	599:4:18917:18924	501898	1	True				
ANR	501906	IdentifierDecl	v		501898	0					
ANR	501907	IdentifierDeclType	dwt_t		501898	0					
ANR	501908	Identifier	v		501898	1					
ANR	501909	IdentifierDeclStatement	opj_tcd_resolution_t * tr = tilec -> resolutions ;	601:4:18931:18976	501898	2	True				
ANR	501910	IdentifierDecl	* tr = tilec -> resolutions		501898	0					
ANR	501911	IdentifierDeclType	opj_tcd_resolution_t *		501898	0					
ANR	501912	Identifier	tr		501898	1					
ANR	501913	AssignmentExpression	* tr = tilec -> resolutions		501898	2		=			
ANR	501914	Identifier	tr		501898	0					
ANR	501915	PtrMemberAccess	tilec -> resolutions		501898	1					
ANR	501916	Identifier	tilec		501898	0					
ANR	501917	Identifier	resolutions		501898	1					
ANR	501918	IdentifierDeclStatement	int rw = tr -> x1 - tr -> x0 ;	603:4:18983:19007	501898	3	True				
ANR	501919	IdentifierDecl	rw = tr -> x1 - tr -> x0		501898	0					
ANR	501920	IdentifierDeclType	int		501898	0					
ANR	501921	Identifier	rw		501898	1					
ANR	501922	AssignmentExpression	rw = tr -> x1 - tr -> x0		501898	2		=			
ANR	501923	Identifier	rw		501898	0					
ANR	501924	AdditiveExpression	tr -> x1 - tr -> x0		501898	1		-			
ANR	501925	PtrMemberAccess	tr -> x1		501898	0					
ANR	501926	Identifier	tr		501898	0					
ANR	501927	Identifier	x1		501898	1					
ANR	501928	PtrMemberAccess	tr -> x0		501898	1					
ANR	501929	Identifier	tr		501898	0					
ANR	501930	Identifier	x0		501898	1					
ANR	501931	IdentifierDeclStatement	int rh = tr -> y1 - tr -> y0 ;	604:4:19060:19084	501898	4	True				
ANR	501932	IdentifierDecl	rh = tr -> y1 - tr -> y0		501898	0					
ANR	501933	IdentifierDeclType	int		501898	0					
ANR	501934	Identifier	rh		501898	1					
ANR	501935	AssignmentExpression	rh = tr -> y1 - tr -> y0		501898	2		=			
ANR	501936	Identifier	rh		501898	0					
ANR	501937	AdditiveExpression	tr -> y1 - tr -> y0		501898	1		-			
ANR	501938	PtrMemberAccess	tr -> y1		501898	0					
ANR	501939	Identifier	tr		501898	0					
ANR	501940	Identifier	y1		501898	1					
ANR	501941	PtrMemberAccess	tr -> y0		501898	1					
ANR	501942	Identifier	tr		501898	0					
ANR	501943	Identifier	y0		501898	1					
ANR	501944	IdentifierDeclStatement	int w = tilec -> x1 - tilec -> x0 ;	606:4:19139:19168	501898	5	True				
ANR	501945	IdentifierDecl	w = tilec -> x1 - tilec -> x0		501898	0					
ANR	501946	IdentifierDeclType	int		501898	0					
ANR	501947	Identifier	w		501898	1					
ANR	501948	AssignmentExpression	w = tilec -> x1 - tilec -> x0		501898	2		=			
ANR	501949	Identifier	w		501898	0					
ANR	501950	AdditiveExpression	tilec -> x1 - tilec -> x0		501898	1		-			
ANR	501951	PtrMemberAccess	tilec -> x1		501898	0					
ANR	501952	Identifier	tilec		501898	0					
ANR	501953	Identifier	x1		501898	1					
ANR	501954	PtrMemberAccess	tilec -> x0		501898	1					
ANR	501955	Identifier	tilec		501898	0					
ANR	501956	Identifier	x0		501898	1					
ANR	501957	ExpressionStatement	"h . mem = ( int * ) opj_aligned_malloc ( dwt_decode_max_resolution ( tr , numres ) * sizeof ( int ) )"	608:4:19175:19297	501898	6	True				
ANR	501958	AssignmentExpression	"h . mem = ( int * ) opj_aligned_malloc ( dwt_decode_max_resolution ( tr , numres ) * sizeof ( int ) )"		501898	0		=			
ANR	501959	MemberAccess	h . mem		501898	0					
ANR	501960	Identifier	h		501898	0					
ANR	501961	Identifier	mem		501898	1					
ANR	501962	CastExpression	"( int * ) opj_aligned_malloc ( dwt_decode_max_resolution ( tr , numres ) * sizeof ( int ) )"		501898	1					
ANR	501963	CastTarget	int *		501898	0					
ANR	501964	CallExpression	"opj_aligned_malloc ( dwt_decode_max_resolution ( tr , numres ) * sizeof ( int ) )"		501898	1					
ANR	501965	Callee	opj_aligned_malloc		501898	0					
ANR	501966	Identifier	opj_aligned_malloc		501898	0					
ANR	501967	ArgumentList	"dwt_decode_max_resolution ( tr , numres ) * sizeof ( int )"		501898	1					
ANR	501968	Argument	"dwt_decode_max_resolution ( tr , numres ) * sizeof ( int )"		501898	0					
ANR	501969	MultiplicativeExpression	"dwt_decode_max_resolution ( tr , numres ) * sizeof ( int )"		501898	0		*			
ANR	501970	CallExpression	"dwt_decode_max_resolution ( tr , numres )"		501898	0					
ANR	501971	Callee	dwt_decode_max_resolution		501898	0					
ANR	501972	Identifier	dwt_decode_max_resolution		501898	0					
ANR	501973	ArgumentList	tr		501898	1					
ANR	501974	Argument	tr		501898	0					
ANR	501975	Identifier	tr		501898	0					
ANR	501976	Argument	numres		501898	1					
ANR	501977	Identifier	numres		501898	0					
ANR	501978	SizeofExpression	sizeof ( int )		501898	1					
ANR	501979	Sizeof	sizeof		501898	0					
ANR	501980	SizeofOperand	int		501898	1					
ANR	501981	ExpressionStatement	v . mem = h . mem	610:4:19303:19316	501898	7	True				
ANR	501982	AssignmentExpression	v . mem = h . mem		501898	0		=			
ANR	501983	MemberAccess	v . mem		501898	0					
ANR	501984	Identifier	v		501898	0					
ANR	501985	Identifier	mem		501898	1					
ANR	501986	MemberAccess	h . mem		501898	1					
ANR	501987	Identifier	h		501898	0					
ANR	501988	Identifier	mem		501898	1					
ANR	501989	WhileStatement	while ( -- numres )		501898	8					
ANR	501990	Condition	-- numres	612:11:19330:19337	501898	0	True				
ANR	501991	UnaryExpression	-- numres		501898	0					
ANR	501992	IncDec	--		501898	0					
ANR	501993	Identifier	numres		501898	1					
ANR	501994	CompoundStatement		18:8:496:501	501898	1					
ANR	501995	IdentifierDeclStatement	int * restrict tiledp = tilec -> data ;	613:8:19350:19385	501898	0	True				
ANR	501996	IdentifierDecl	* restrict tiledp = tilec -> data		501898	0					
ANR	501997	IdentifierDeclType	int * restrict		501898	0					
ANR	501998	Identifier	tiledp		501898	1					
ANR	501999	AssignmentExpression	* restrict tiledp = tilec -> data		501898	2		=			
ANR	502000	Identifier	tiledp		501898	0					
ANR	502001	PtrMemberAccess	tilec -> data		501898	1					
ANR	502002	Identifier	tilec		501898	0					
ANR	502003	Identifier	data		501898	1					
ANR	502004	IdentifierDeclStatement	int j ;	614:8:19395:19400	501898	1	True				
ANR	502005	IdentifierDecl	j		501898	0					
ANR	502006	IdentifierDeclType	int		501898	0					
ANR	502007	Identifier	j		501898	1					
ANR	502008	ExpressionStatement	++ tr	616:8:19411:19415	501898	2	True				
ANR	502009	UnaryExpression	++ tr		501898	0					
ANR	502010	IncDec	++		501898	0					
ANR	502011	Identifier	tr		501898	1					
ANR	502012	ExpressionStatement	h . sn = rw	617:8:19425:19434	501898	3	True				
ANR	502013	AssignmentExpression	h . sn = rw		501898	0		=			
ANR	502014	MemberAccess	h . sn		501898	0					
ANR	502015	Identifier	h		501898	0					
ANR	502016	Identifier	sn		501898	1					
ANR	502017	Identifier	rw		501898	1					
ANR	502018	ExpressionStatement	v . sn = rh	618:8:19444:19453	501898	4	True				
ANR	502019	AssignmentExpression	v . sn = rh		501898	0		=			
ANR	502020	MemberAccess	v . sn		501898	0					
ANR	502021	Identifier	v		501898	0					
ANR	502022	Identifier	sn		501898	1					
ANR	502023	Identifier	rh		501898	1					
ANR	502024	ExpressionStatement	rw = tr -> x1 - tr -> x0	620:8:19464:19484	501898	5	True				
ANR	502025	AssignmentExpression	rw = tr -> x1 - tr -> x0		501898	0		=			
ANR	502026	Identifier	rw		501898	0					
ANR	502027	AdditiveExpression	tr -> x1 - tr -> x0		501898	1		-			
ANR	502028	PtrMemberAccess	tr -> x1		501898	0					
ANR	502029	Identifier	tr		501898	0					
ANR	502030	Identifier	x1		501898	1					
ANR	502031	PtrMemberAccess	tr -> x0		501898	1					
ANR	502032	Identifier	tr		501898	0					
ANR	502033	Identifier	x0		501898	1					
ANR	502034	ExpressionStatement	rh = tr -> y1 - tr -> y0	621:8:19494:19514	501898	6	True				
ANR	502035	AssignmentExpression	rh = tr -> y1 - tr -> y0		501898	0		=			
ANR	502036	Identifier	rh		501898	0					
ANR	502037	AdditiveExpression	tr -> y1 - tr -> y0		501898	1		-			
ANR	502038	PtrMemberAccess	tr -> y1		501898	0					
ANR	502039	Identifier	tr		501898	0					
ANR	502040	Identifier	y1		501898	1					
ANR	502041	PtrMemberAccess	tr -> y0		501898	1					
ANR	502042	Identifier	tr		501898	0					
ANR	502043	Identifier	y0		501898	1					
ANR	502044	ExpressionStatement	h . dn = rw - h . sn	623:8:19525:19541	501898	7	True				
ANR	502045	AssignmentExpression	h . dn = rw - h . sn		501898	0		=			
ANR	502046	MemberAccess	h . dn		501898	0					
ANR	502047	Identifier	h		501898	0					
ANR	502048	Identifier	dn		501898	1					
ANR	502049	AdditiveExpression	rw - h . sn		501898	1		-			
ANR	502050	Identifier	rw		501898	0					
ANR	502051	MemberAccess	h . sn		501898	1					
ANR	502052	Identifier	h		501898	0					
ANR	502053	Identifier	sn		501898	1					
ANR	502054	ExpressionStatement	h . cas = tr -> x0 % 2	624:8:19551:19569	501898	8	True				
ANR	502055	AssignmentExpression	h . cas = tr -> x0 % 2		501898	0		=			
ANR	502056	MemberAccess	h . cas		501898	0					
ANR	502057	Identifier	h		501898	0					
ANR	502058	Identifier	cas		501898	1					
ANR	502059	MultiplicativeExpression	tr -> x0 % 2		501898	1		%			
ANR	502060	PtrMemberAccess	tr -> x0		501898	0					
ANR	502061	Identifier	tr		501898	0					
ANR	502062	Identifier	x0		501898	1					
ANR	502063	PrimaryExpression	2		501898	1					
ANR	502064	ForStatement	for ( j = 0 ; j < rh ; ++ j )		501898	9					
ANR	502065	ForInit	j = 0 ;	626:13:19585:19590	501898	0	True				
ANR	502066	AssignmentExpression	j = 0		501898	0		=			
ANR	502067	Identifier	j		501898	0					
ANR	502068	PrimaryExpression	0		501898	1					
ANR	502069	Condition	j < rh	626:20:19592:19597	501898	1	True				
ANR	502070	RelationalExpression	j < rh		501898	0		<			
ANR	502071	Identifier	j		501898	0					
ANR	502072	Identifier	rh		501898	1					
ANR	502073	UnaryExpression	++ j	626:28:19600:19602	501898	2	True				
ANR	502074	IncDec	++		501898	0					
ANR	502075	Identifier	j		501898	1					
ANR	502076	CompoundStatement		30:33:706:706	501898	3					
ANR	502077	ExpressionStatement	"dwt_interleave_h ( & h , & tiledp [ j * w ] )"	627:12:19619:19655	501898	0	True				
ANR	502078	CallExpression	"dwt_interleave_h ( & h , & tiledp [ j * w ] )"		501898	0					
ANR	502079	Callee	dwt_interleave_h		501898	0					
ANR	502080	Identifier	dwt_interleave_h		501898	0					
ANR	502081	ArgumentList	& h		501898	1					
ANR	502082	Argument	& h		501898	0					
ANR	502083	UnaryOperationExpression	& h		501898	0					
ANR	502084	UnaryOperator	&		501898	0					
ANR	502085	Identifier	h		501898	1					
ANR	502086	Argument	& tiledp [ j * w ]		501898	1					
ANR	502087	UnaryOperationExpression	& tiledp [ j * w ]		501898	0					
ANR	502088	UnaryOperator	&		501898	0					
ANR	502089	ArrayIndexing	tiledp [ j * w ]		501898	1					
ANR	502090	Identifier	tiledp		501898	0					
ANR	502091	MultiplicativeExpression	j * w		501898	1		*			
ANR	502092	Identifier	j		501898	0					
ANR	502093	Identifier	w		501898	1					
ANR	502094	ExpressionStatement	( dwt_1D ) ( & h )	628:12:19669:19681	501898	1	True				
ANR	502095	CastExpression	( dwt_1D ) ( & h )		501898	0					
ANR	502096	CastTarget	dwt_1D		501898	0					
ANR	502097	UnaryOperationExpression	& h		501898	1					
ANR	502098	UnaryOperator	&		501898	0					
ANR	502099	Identifier	h		501898	1					
ANR	502100	ExpressionStatement	"memcpy ( & tiledp [ j * w ] , h . mem , rw * sizeof ( int ) )"	629:12:19695:19742	501898	2	True				
ANR	502101	CallExpression	"memcpy ( & tiledp [ j * w ] , h . mem , rw * sizeof ( int ) )"		501898	0					
ANR	502102	Callee	memcpy		501898	0					
ANR	502103	Identifier	memcpy		501898	0					
ANR	502104	ArgumentList	& tiledp [ j * w ]		501898	1					
ANR	502105	Argument	& tiledp [ j * w ]		501898	0					
ANR	502106	UnaryOperationExpression	& tiledp [ j * w ]		501898	0					
ANR	502107	UnaryOperator	&		501898	0					
ANR	502108	ArrayIndexing	tiledp [ j * w ]		501898	1					
ANR	502109	Identifier	tiledp		501898	0					
ANR	502110	MultiplicativeExpression	j * w		501898	1		*			
ANR	502111	Identifier	j		501898	0					
ANR	502112	Identifier	w		501898	1					
ANR	502113	Argument	h . mem		501898	1					
ANR	502114	MemberAccess	h . mem		501898	0					
ANR	502115	Identifier	h		501898	0					
ANR	502116	Identifier	mem		501898	1					
ANR	502117	Argument	rw * sizeof ( int )		501898	2					
ANR	502118	MultiplicativeExpression	rw * sizeof ( int )		501898	0		*			
ANR	502119	Identifier	rw		501898	0					
ANR	502120	SizeofExpression	sizeof ( int )		501898	1					
ANR	502121	Sizeof	sizeof		501898	0					
ANR	502122	SizeofOperand	int		501898	1					
ANR	502123	ExpressionStatement	v . dn = rh - v . sn	632:8:19763:19779	501898	10	True				
ANR	502124	AssignmentExpression	v . dn = rh - v . sn		501898	0		=			
ANR	502125	MemberAccess	v . dn		501898	0					
ANR	502126	Identifier	v		501898	0					
ANR	502127	Identifier	dn		501898	1					
ANR	502128	AdditiveExpression	rh - v . sn		501898	1		-			
ANR	502129	Identifier	rh		501898	0					
ANR	502130	MemberAccess	v . sn		501898	1					
ANR	502131	Identifier	v		501898	0					
ANR	502132	Identifier	sn		501898	1					
ANR	502133	ExpressionStatement	v . cas = tr -> y0 % 2	633:8:19789:19807	501898	11	True				
ANR	502134	AssignmentExpression	v . cas = tr -> y0 % 2		501898	0		=			
ANR	502135	MemberAccess	v . cas		501898	0					
ANR	502136	Identifier	v		501898	0					
ANR	502137	Identifier	cas		501898	1					
ANR	502138	MultiplicativeExpression	tr -> y0 % 2		501898	1		%			
ANR	502139	PtrMemberAccess	tr -> y0		501898	0					
ANR	502140	Identifier	tr		501898	0					
ANR	502141	Identifier	y0		501898	1					
ANR	502142	PrimaryExpression	2		501898	1					
ANR	502143	ForStatement	for ( j = 0 ; j < rw ; ++ j )		501898	12					
ANR	502144	ForInit	j = 0 ;	635:13:19823:19828	501898	0	True				
ANR	502145	AssignmentExpression	j = 0		501898	0		=			
ANR	502146	Identifier	j		501898	0					
ANR	502147	PrimaryExpression	0		501898	1					
ANR	502148	Condition	j < rw	635:20:19830:19835	501898	1	True				
ANR	502149	RelationalExpression	j < rw		501898	0		<			
ANR	502150	Identifier	j		501898	0					
ANR	502151	Identifier	rw		501898	1					
ANR	502152	UnaryExpression	++ j	635:28:19838:19840	501898	2	True				
ANR	502153	IncDec	++		501898	0					
ANR	502154	Identifier	j		501898	1					
ANR	502155	CompoundStatement		40:12:958:963	501898	3					
ANR	502156	IdentifierDeclStatement	int k ;	636:12:19857:19862	501898	0	True				
ANR	502157	IdentifierDecl	k		501898	0					
ANR	502158	IdentifierDeclType	int		501898	0					
ANR	502159	Identifier	k		501898	1					
ANR	502160	ExpressionStatement	"dwt_interleave_v ( & v , & tiledp [ j ] , w )"	637:12:19876:19911	501898	1	True				
ANR	502161	CallExpression	"dwt_interleave_v ( & v , & tiledp [ j ] , w )"		501898	0					
ANR	502162	Callee	dwt_interleave_v		501898	0					
ANR	502163	Identifier	dwt_interleave_v		501898	0					
ANR	502164	ArgumentList	& v		501898	1					
ANR	502165	Argument	& v		501898	0					
ANR	502166	UnaryOperationExpression	& v		501898	0					
ANR	502167	UnaryOperator	&		501898	0					
ANR	502168	Identifier	v		501898	1					
ANR	502169	Argument	& tiledp [ j ]		501898	1					
ANR	502170	UnaryOperationExpression	& tiledp [ j ]		501898	0					
ANR	502171	UnaryOperator	&		501898	0					
ANR	502172	ArrayIndexing	tiledp [ j ]		501898	1					
ANR	502173	Identifier	tiledp		501898	0					
ANR	502174	Identifier	j		501898	1					
ANR	502175	Argument	w		501898	2					
ANR	502176	Identifier	w		501898	0					
ANR	502177	ExpressionStatement	( dwt_1D ) ( & v )	638:12:19925:19937	501898	2	True				
ANR	502178	CastExpression	( dwt_1D ) ( & v )		501898	0					
ANR	502179	CastTarget	dwt_1D		501898	0					
ANR	502180	UnaryOperationExpression	& v		501898	1					
ANR	502181	UnaryOperator	&		501898	0					
ANR	502182	Identifier	v		501898	1					
ANR	502183	ForStatement	for ( k = 0 ; k < rh ; ++ k )		501898	3					
ANR	502184	ForInit	k = 0 ;	639:17:19956:19961	501898	0	True				
ANR	502185	AssignmentExpression	k = 0		501898	0		=			
ANR	502186	Identifier	k		501898	0					
ANR	502187	PrimaryExpression	0		501898	1					
ANR	502188	Condition	k < rh	639:24:19963:19968	501898	1	True				
ANR	502189	RelationalExpression	k < rh		501898	0		<			
ANR	502190	Identifier	k		501898	0					
ANR	502191	Identifier	rh		501898	1					
ANR	502192	UnaryExpression	++ k	639:32:19971:19973	501898	2	True				
ANR	502193	IncDec	++		501898	0					
ANR	502194	Identifier	k		501898	1					
ANR	502195	CompoundStatement		43:37:1077:1077	501898	3					
ANR	502196	ExpressionStatement	tiledp [ k * w + j ] = v . mem [ k ]	640:16:19994:20022	501898	0	True				
ANR	502197	AssignmentExpression	tiledp [ k * w + j ] = v . mem [ k ]		501898	0		=			
ANR	502198	ArrayIndexing	tiledp [ k * w + j ]		501898	0					
ANR	502199	Identifier	tiledp		501898	0					
ANR	502200	AdditiveExpression	k * w + j		501898	1		+			
ANR	502201	MultiplicativeExpression	k * w		501898	0		*			
ANR	502202	Identifier	k		501898	0					
ANR	502203	Identifier	w		501898	1					
ANR	502204	Identifier	j		501898	1					
ANR	502205	ArrayIndexing	v . mem [ k ]		501898	1					
ANR	502206	MemberAccess	v . mem		501898	0					
ANR	502207	Identifier	v		501898	0					
ANR	502208	Identifier	mem		501898	1					
ANR	502209	Identifier	k		501898	1					
ANR	502210	ExpressionStatement	opj_aligned_free ( h . mem )	644:4:20058:20081	501898	9	True				
ANR	502211	CallExpression	opj_aligned_free ( h . mem )		501898	0					
ANR	502212	Callee	opj_aligned_free		501898	0					
ANR	502213	Identifier	opj_aligned_free		501898	0					
ANR	502214	ArgumentList	h . mem		501898	1					
ANR	502215	Argument	h . mem		501898	0					
ANR	502216	MemberAccess	h . mem		501898	0					
ANR	502217	Identifier	h		501898	0					
ANR	502218	Identifier	mem		501898	1					
ANR	502219	ReturnType	static void		501898	1					
ANR	502220	Identifier	dwt_decode_tile		501898	2					
ANR	502221	ParameterList	"opj_tcd_tilecomp_t * tilec , int numres , DWT1DFN dwt_1D"		501898	3					
ANR	502222	Parameter	opj_tcd_tilecomp_t * tilec	595:28:18815:18839	501898	0	True				
ANR	502223	ParameterType	opj_tcd_tilecomp_t *		501898	0					
ANR	502224	Identifier	tilec		501898	1					
ANR	502225	Parameter	int numres	595:55:18842:18851	501898	1	True				
ANR	502226	ParameterType	int		501898	0					
ANR	502227	Identifier	numres		501898	1					
ANR	502228	Parameter	DWT1DFN dwt_1D	596:28:18882:18895	501898	2	True				
ANR	502229	ParameterType	DWT1DFN		501898	0					
ANR	502230	Identifier	dwt_1D		501898	1					
ANR	502231	CFGEntryNode	ENTRY		501898		True				
ANR	502232	CFGExitNode	EXIT		501898		True				
ANR	502233	Symbol	* v		501898						
ANR	502234	Symbol	* w		501898						
ANR	502235	Symbol	numres		501898						
ANR	502236	Symbol	v . sn		501898						
ANR	502237	Symbol	tr -> y0		501898						
ANR	502238	Symbol	rw		501898						
ANR	502239	Symbol	tr -> y1		501898						
ANR	502240	Symbol	dwt_decode_max_resolution		501898						
ANR	502241	Symbol	tilec -> data		501898						
ANR	502242	Symbol	* tilec		501898						
ANR	502243	Symbol	h . mem		501898						
ANR	502244	Symbol	h . cas		501898						
ANR	502245	Symbol	v . dn		501898						
ANR	502246	Symbol	h . sn		501898						
ANR	502247	Symbol	* tiledp		501898						
ANR	502248	Symbol	dwt_1D		501898						
ANR	502249	Symbol	tiledp		501898						
ANR	502250	Symbol	tilec		501898						
ANR	502251	Symbol	h . dn		501898						
ANR	502252	Symbol	tr -> x0		501898						
ANR	502253	Symbol	tr -> x1		501898						
ANR	502254	Symbol	* tr		501898						
ANR	502255	Symbol	h		501898						
ANR	502256	Symbol	opj_aligned_malloc		501898						
ANR	502257	Symbol	j		501898						
ANR	502258	Symbol	v . mem		501898						
ANR	502259	Symbol	v . cas		501898						
ANR	502260	Symbol	k		501898						
ANR	502261	Symbol	tilec -> x0		501898						
ANR	502262	Symbol	tilec -> x1		501898						
ANR	502263	Symbol	& h		501898						
ANR	502264	Symbol	* v . mem		501898						
ANR	502265	Symbol	tilec -> resolutions		501898						
ANR	502266	Symbol	* j		501898						
ANR	502267	Symbol	* k		501898						
ANR	502268	Symbol	v		501898						
ANR	502269	Symbol	rh		501898						
ANR	502270	Symbol	w		501898						
ANR	502271	Symbol	& v		501898						
ANR	502272	Symbol	tr		501898						
ANR	502273	Function	v4dwt_interleave_h	647:0:20086:21525							
ANR	502274	FunctionDef	"v4dwt_interleave_h (v4dwt_t * restrict w , float * restrict a , int x , int size)"		502273	0					
ANR	502275	CompoundStatement		649:0:20205:21525	502273	0					
ANR	502276	IdentifierDeclStatement	float * restrict bi = ( float * ) ( w -> wavelet + w -> cas ) ;	650:4:20211:20261	502273	0	True				
ANR	502277	IdentifierDecl	* restrict bi = ( float * ) ( w -> wavelet + w -> cas )		502273	0					
ANR	502278	IdentifierDeclType	float * restrict		502273	0					
ANR	502279	Identifier	bi		502273	1					
ANR	502280	AssignmentExpression	* restrict bi = ( float * ) ( w -> wavelet + w -> cas )		502273	2		=			
ANR	502281	Identifier	bi		502273	0					
ANR	502282	CastExpression	( float * ) ( w -> wavelet + w -> cas )		502273	1					
ANR	502283	CastTarget	float *		502273	0					
ANR	502284	AdditiveExpression	w -> wavelet + w -> cas		502273	1		+			
ANR	502285	PtrMemberAccess	w -> wavelet		502273	0					
ANR	502286	Identifier	w		502273	0					
ANR	502287	Identifier	wavelet		502273	1					
ANR	502288	PtrMemberAccess	w -> cas		502273	1					
ANR	502289	Identifier	w		502273	0					
ANR	502290	Identifier	cas		502273	1					
ANR	502291	IdentifierDeclStatement	int count = w -> sn ;	651:4:20267:20284	502273	1	True				
ANR	502292	IdentifierDecl	count = w -> sn		502273	0					
ANR	502293	IdentifierDeclType	int		502273	0					
ANR	502294	Identifier	count		502273	1					
ANR	502295	AssignmentExpression	count = w -> sn		502273	2		=			
ANR	502296	Identifier	count		502273	0					
ANR	502297	PtrMemberAccess	w -> sn		502273	1					
ANR	502298	Identifier	w		502273	0					
ANR	502299	Identifier	sn		502273	1					
ANR	502300	IdentifierDeclStatement	"int i , k ;"	652:4:20290:20298	502273	2	True				
ANR	502301	IdentifierDecl	i		502273	0					
ANR	502302	IdentifierDeclType	int		502273	0					
ANR	502303	Identifier	i		502273	1					
ANR	502304	IdentifierDecl	k		502273	1					
ANR	502305	IdentifierDeclType	int		502273	0					
ANR	502306	Identifier	k		502273	1					
ANR	502307	ForStatement	for ( k = 0 ; k < 2 ; ++ k )		502273	3					
ANR	502308	ForInit	k = 0 ;	653:9:20309:20314	502273	0	True				
ANR	502309	AssignmentExpression	k = 0		502273	0		=			
ANR	502310	Identifier	k		502273	0					
ANR	502311	PrimaryExpression	0		502273	1					
ANR	502312	Condition	k < 2	653:16:20316:20320	502273	1	True				
ANR	502313	RelationalExpression	k < 2		502273	0		<			
ANR	502314	Identifier	k		502273	0					
ANR	502315	PrimaryExpression	2		502273	1					
ANR	502316	UnaryExpression	++ k	653:23:20323:20325	502273	2	True				
ANR	502317	IncDec	++		502273	0					
ANR	502318	Identifier	k		502273	1					
ANR	502319	CompoundStatement		5:28:122:122	502273	3					
ANR	502320	IfStatement	if ( count + 3 * x < size && ( ( size_t ) a & 0x0f ) == 0 && ( ( size_t ) bi & 0x0f ) == 0 && ( x & 0x0f ) == 0 )		502273	0					
ANR	502321	Condition	count + 3 * x < size && ( ( size_t ) a & 0x0f ) == 0 && ( ( size_t ) bi & 0x0f ) == 0 && ( x & 0x0f ) == 0	654:12:20342:20453	502273	0	True				
ANR	502322	AndExpression	count + 3 * x < size && ( ( size_t ) a & 0x0f ) == 0 && ( ( size_t ) bi & 0x0f ) == 0 && ( x & 0x0f ) == 0		502273	0		&&			
ANR	502323	RelationalExpression	count + 3 * x < size		502273	0		<			
ANR	502324	AdditiveExpression	count + 3 * x		502273	0		+			
ANR	502325	Identifier	count		502273	0					
ANR	502326	MultiplicativeExpression	3 * x		502273	1		*			
ANR	502327	PrimaryExpression	3		502273	0					
ANR	502328	Identifier	x		502273	1					
ANR	502329	Identifier	size		502273	1					
ANR	502330	AndExpression	( ( size_t ) a & 0x0f ) == 0 && ( ( size_t ) bi & 0x0f ) == 0 && ( x & 0x0f ) == 0		502273	1		&&			
ANR	502331	EqualityExpression	( ( size_t ) a & 0x0f ) == 0		502273	0		==			
ANR	502332	BitAndExpression	( size_t ) a & 0x0f		502273	0		&			
ANR	502333	CastExpression	( size_t ) a		502273	0					
ANR	502334	CastTarget	size_t		502273	0					
ANR	502335	Identifier	a		502273	1					
ANR	502336	PrimaryExpression	0x0f		502273	1					
ANR	502337	PrimaryExpression	0		502273	1					
ANR	502338	AndExpression	( ( size_t ) bi & 0x0f ) == 0 && ( x & 0x0f ) == 0		502273	1		&&			
ANR	502339	EqualityExpression	( ( size_t ) bi & 0x0f ) == 0		502273	0		==			
ANR	502340	BitAndExpression	( size_t ) bi & 0x0f		502273	0		&			
ANR	502341	CastExpression	( size_t ) bi		502273	0					
ANR	502342	CastTarget	size_t		502273	0					
ANR	502343	Identifier	bi		502273	1					
ANR	502344	PrimaryExpression	0x0f		502273	1					
ANR	502345	PrimaryExpression	0		502273	1					
ANR	502346	EqualityExpression	( x & 0x0f ) == 0		502273	1		==			
ANR	502347	BitAndExpression	x & 0x0f		502273	0		&			
ANR	502348	Identifier	x		502273	0					
ANR	502349	PrimaryExpression	0x0f		502273	1					
ANR	502350	PrimaryExpression	0		502273	1					
ANR	502351	CompoundStatement		7:62:250:250	502273	1					
ANR	502352	ForStatement	for ( i = 0 ; i < count ; ++ i )		502273	0					
ANR	502353	ForInit	i = 0 ;	657:17:20508:20513	502273	0	True				
ANR	502354	AssignmentExpression	i = 0		502273	0		=			
ANR	502355	Identifier	i		502273	0					
ANR	502356	PrimaryExpression	0		502273	1					
ANR	502357	Condition	i < count	657:24:20515:20523	502273	1	True				
ANR	502358	RelationalExpression	i < count		502273	0		<			
ANR	502359	Identifier	i		502273	0					
ANR	502360	Identifier	count		502273	1					
ANR	502361	UnaryExpression	++ i	657:35:20526:20528	502273	2	True				
ANR	502362	IncDec	++		502273	0					
ANR	502363	Identifier	i		502273	1					
ANR	502364	CompoundStatement		10:16:343:352	502273	3					
ANR	502365	IdentifierDeclStatement	int j = i ;	658:16:20549:20558	502273	0	True				
ANR	502366	IdentifierDecl	j = i		502273	0					
ANR	502367	IdentifierDeclType	int		502273	0					
ANR	502368	Identifier	j		502273	1					
ANR	502369	AssignmentExpression	j = i		502273	2		=			
ANR	502370	Identifier	i		502273	0					
ANR	502371	Identifier	i		502273	1					
ANR	502372	ExpressionStatement	bi [ i * 8 ] = a [ j ]	659:16:20576:20596	502273	1	True				
ANR	502373	AssignmentExpression	bi [ i * 8 ] = a [ j ]		502273	0		=			
ANR	502374	ArrayIndexing	bi [ i * 8 ]		502273	0					
ANR	502375	Identifier	bi		502273	0					
ANR	502376	MultiplicativeExpression	i * 8		502273	1		*			
ANR	502377	Identifier	i		502273	0					
ANR	502378	PrimaryExpression	8		502273	1					
ANR	502379	ArrayIndexing	a [ j ]		502273	1					
ANR	502380	Identifier	a		502273	0					
ANR	502381	Identifier	j		502273	1					
ANR	502382	ExpressionStatement	j += x	660:16:20614:20620	502273	2	True				
ANR	502383	AssignmentExpression	j += x		502273	0		+=			
ANR	502384	Identifier	j		502273	0					
ANR	502385	Identifier	x		502273	1					
ANR	502386	ExpressionStatement	bi [ i * 8 + 1 ] = a [ j ]	661:16:20638:20658	502273	3	True				
ANR	502387	AssignmentExpression	bi [ i * 8 + 1 ] = a [ j ]		502273	0		=			
ANR	502388	ArrayIndexing	bi [ i * 8 + 1 ]		502273	0					
ANR	502389	Identifier	bi		502273	0					
ANR	502390	AdditiveExpression	i * 8 + 1		502273	1		+			
ANR	502391	MultiplicativeExpression	i * 8		502273	0		*			
ANR	502392	Identifier	i		502273	0					
ANR	502393	PrimaryExpression	8		502273	1					
ANR	502394	PrimaryExpression	1		502273	1					
ANR	502395	ArrayIndexing	a [ j ]		502273	1					
ANR	502396	Identifier	a		502273	0					
ANR	502397	Identifier	j		502273	1					
ANR	502398	ExpressionStatement	j += x	662:16:20676:20682	502273	4	True				
ANR	502399	AssignmentExpression	j += x		502273	0		+=			
ANR	502400	Identifier	j		502273	0					
ANR	502401	Identifier	x		502273	1					
ANR	502402	ExpressionStatement	bi [ i * 8 + 2 ] = a [ j ]	663:16:20700:20720	502273	5	True				
ANR	502403	AssignmentExpression	bi [ i * 8 + 2 ] = a [ j ]		502273	0		=			
ANR	502404	ArrayIndexing	bi [ i * 8 + 2 ]		502273	0					
ANR	502405	Identifier	bi		502273	0					
ANR	502406	AdditiveExpression	i * 8 + 2		502273	1		+			
ANR	502407	MultiplicativeExpression	i * 8		502273	0		*			
ANR	502408	Identifier	i		502273	0					
ANR	502409	PrimaryExpression	8		502273	1					
ANR	502410	PrimaryExpression	2		502273	1					
ANR	502411	ArrayIndexing	a [ j ]		502273	1					
ANR	502412	Identifier	a		502273	0					
ANR	502413	Identifier	j		502273	1					
ANR	502414	ExpressionStatement	j += x	664:16:20738:20744	502273	6	True				
ANR	502415	AssignmentExpression	j += x		502273	0		+=			
ANR	502416	Identifier	j		502273	0					
ANR	502417	Identifier	x		502273	1					
ANR	502418	ExpressionStatement	bi [ i * 8 + 3 ] = a [ j ]	665:16:20762:20782	502273	7	True				
ANR	502419	AssignmentExpression	bi [ i * 8 + 3 ] = a [ j ]		502273	0		=			
ANR	502420	ArrayIndexing	bi [ i * 8 + 3 ]		502273	0					
ANR	502421	Identifier	bi		502273	0					
ANR	502422	AdditiveExpression	i * 8 + 3		502273	1		+			
ANR	502423	MultiplicativeExpression	i * 8		502273	0		*			
ANR	502424	Identifier	i		502273	0					
ANR	502425	PrimaryExpression	8		502273	1					
ANR	502426	PrimaryExpression	3		502273	1					
ANR	502427	ArrayIndexing	a [ j ]		502273	1					
ANR	502428	Identifier	a		502273	0					
ANR	502429	Identifier	j		502273	1					
ANR	502430	ElseStatement	else		502273	0					
ANR	502431	CompoundStatement		19:15:607:607	502273	0					
ANR	502432	ForStatement	for ( i = 0 ; i < count ; ++ i )		502273	0					
ANR	502433	ForInit	i = 0 ;	669:17:20865:20870	502273	0	True				
ANR	502434	AssignmentExpression	i = 0		502273	0		=			
ANR	502435	Identifier	i		502273	0					
ANR	502436	PrimaryExpression	0		502273	1					
ANR	502437	Condition	i < count	669:24:20872:20880	502273	1	True				
ANR	502438	RelationalExpression	i < count		502273	0		<			
ANR	502439	Identifier	i		502273	0					
ANR	502440	Identifier	count		502273	1					
ANR	502441	UnaryExpression	++ i	669:35:20883:20885	502273	2	True				
ANR	502442	IncDec	++		502273	0					
ANR	502443	Identifier	i		502273	1					
ANR	502444	CompoundStatement		22:16:700:709	502273	3					
ANR	502445	IdentifierDeclStatement	int j = i ;	670:16:20906:20915	502273	0	True				
ANR	502446	IdentifierDecl	j = i		502273	0					
ANR	502447	IdentifierDeclType	int		502273	0					
ANR	502448	Identifier	j		502273	1					
ANR	502449	AssignmentExpression	j = i		502273	2		=			
ANR	502450	Identifier	i		502273	0					
ANR	502451	Identifier	i		502273	1					
ANR	502452	ExpressionStatement	bi [ i * 8 ] = a [ j ]	671:16:20933:20953	502273	1	True				
ANR	502453	AssignmentExpression	bi [ i * 8 ] = a [ j ]		502273	0		=			
ANR	502454	ArrayIndexing	bi [ i * 8 ]		502273	0					
ANR	502455	Identifier	bi		502273	0					
ANR	502456	MultiplicativeExpression	i * 8		502273	1		*			
ANR	502457	Identifier	i		502273	0					
ANR	502458	PrimaryExpression	8		502273	1					
ANR	502459	ArrayIndexing	a [ j ]		502273	1					
ANR	502460	Identifier	a		502273	0					
ANR	502461	Identifier	j		502273	1					
ANR	502462	ExpressionStatement	j += x	672:16:20971:20977	502273	2	True				
ANR	502463	AssignmentExpression	j += x		502273	0		+=			
ANR	502464	Identifier	j		502273	0					
ANR	502465	Identifier	x		502273	1					
ANR	502466	IfStatement	if ( j > size )		502273	3					
ANR	502467	Condition	j > size	673:20:20999:21006	502273	0	True				
ANR	502468	RelationalExpression	j > size		502273	0		>			
ANR	502469	Identifier	j		502273	0					
ANR	502470	Identifier	size		502273	1					
ANR	502471	CompoundStatement		25:30:803:803	502273	1					
ANR	502472	ContinueStatement	continue ;	674:20:21031:21039	502273	0	True				
ANR	502473	ExpressionStatement	bi [ i * 8 + 1 ] = a [ j ]	676:16:21075:21095	502273	4	True				
ANR	502474	AssignmentExpression	bi [ i * 8 + 1 ] = a [ j ]		502273	0		=			
ANR	502475	ArrayIndexing	bi [ i * 8 + 1 ]		502273	0					
ANR	502476	Identifier	bi		502273	0					
ANR	502477	AdditiveExpression	i * 8 + 1		502273	1		+			
ANR	502478	MultiplicativeExpression	i * 8		502273	0		*			
ANR	502479	Identifier	i		502273	0					
ANR	502480	PrimaryExpression	8		502273	1					
ANR	502481	PrimaryExpression	1		502273	1					
ANR	502482	ArrayIndexing	a [ j ]		502273	1					
ANR	502483	Identifier	a		502273	0					
ANR	502484	Identifier	j		502273	1					
ANR	502485	ExpressionStatement	j += x	677:16:21113:21119	502273	5	True				
ANR	502486	AssignmentExpression	j += x		502273	0		+=			
ANR	502487	Identifier	j		502273	0					
ANR	502488	Identifier	x		502273	1					
ANR	502489	IfStatement	if ( j > size )		502273	6					
ANR	502490	Condition	j > size	678:20:21141:21148	502273	0	True				
ANR	502491	RelationalExpression	j > size		502273	0		>			
ANR	502492	Identifier	j		502273	0					
ANR	502493	Identifier	size		502273	1					
ANR	502494	CompoundStatement		30:30:945:945	502273	1					
ANR	502495	ContinueStatement	continue ;	679:20:21173:21181	502273	0	True				
ANR	502496	ExpressionStatement	bi [ i * 8 + 2 ] = a [ j ]	681:16:21217:21237	502273	7	True				
ANR	502497	AssignmentExpression	bi [ i * 8 + 2 ] = a [ j ]		502273	0		=			
ANR	502498	ArrayIndexing	bi [ i * 8 + 2 ]		502273	0					
ANR	502499	Identifier	bi		502273	0					
ANR	502500	AdditiveExpression	i * 8 + 2		502273	1		+			
ANR	502501	MultiplicativeExpression	i * 8		502273	0		*			
ANR	502502	Identifier	i		502273	0					
ANR	502503	PrimaryExpression	8		502273	1					
ANR	502504	PrimaryExpression	2		502273	1					
ANR	502505	ArrayIndexing	a [ j ]		502273	1					
ANR	502506	Identifier	a		502273	0					
ANR	502507	Identifier	j		502273	1					
ANR	502508	ExpressionStatement	j += x	682:16:21255:21261	502273	8	True				
ANR	502509	AssignmentExpression	j += x		502273	0		+=			
ANR	502510	Identifier	j		502273	0					
ANR	502511	Identifier	x		502273	1					
ANR	502512	IfStatement	if ( j > size )		502273	9					
ANR	502513	Condition	j > size	683:20:21283:21290	502273	0	True				
ANR	502514	RelationalExpression	j > size		502273	0		>			
ANR	502515	Identifier	j		502273	0					
ANR	502516	Identifier	size		502273	1					
ANR	502517	CompoundStatement		35:30:1087:1087	502273	1					
ANR	502518	ContinueStatement	continue ;	684:20:21315:21323	502273	0	True				
ANR	502519	ExpressionStatement	bi [ i * 8 + 3 ] = a [ j ]	686:16:21359:21379	502273	10	True				
ANR	502520	AssignmentExpression	bi [ i * 8 + 3 ] = a [ j ]		502273	0		=			
ANR	502521	ArrayIndexing	bi [ i * 8 + 3 ]		502273	0					
ANR	502522	Identifier	bi		502273	0					
ANR	502523	AdditiveExpression	i * 8 + 3		502273	1		+			
ANR	502524	MultiplicativeExpression	i * 8		502273	0		*			
ANR	502525	Identifier	i		502273	0					
ANR	502526	PrimaryExpression	8		502273	1					
ANR	502527	PrimaryExpression	3		502273	1					
ANR	502528	ArrayIndexing	a [ j ]		502273	1					
ANR	502529	Identifier	a		502273	0					
ANR	502530	Identifier	j		502273	1					
ANR	502531	ExpressionStatement	bi = ( float * ) ( w -> wavelet + 1 - w -> cas )	689:8:21413:21451	502273	1	True				
ANR	502532	AssignmentExpression	bi = ( float * ) ( w -> wavelet + 1 - w -> cas )		502273	0		=			
ANR	502533	Identifier	bi		502273	0					
ANR	502534	CastExpression	( float * ) ( w -> wavelet + 1 - w -> cas )		502273	1					
ANR	502535	CastTarget	float *		502273	0					
ANR	502536	AdditiveExpression	w -> wavelet + 1 - w -> cas		502273	1		+			
ANR	502537	PtrMemberAccess	w -> wavelet		502273	0					
ANR	502538	Identifier	w		502273	0					
ANR	502539	Identifier	wavelet		502273	1					
ANR	502540	AdditiveExpression	1 - w -> cas		502273	1		-			
ANR	502541	PrimaryExpression	1		502273	0					
ANR	502542	PtrMemberAccess	w -> cas		502273	1					
ANR	502543	Identifier	w		502273	0					
ANR	502544	Identifier	cas		502273	1					
ANR	502545	ExpressionStatement	a += w -> sn	690:8:21461:21471	502273	2	True				
ANR	502546	AssignmentExpression	a += w -> sn		502273	0		+=			
ANR	502547	Identifier	a		502273	0					
ANR	502548	PtrMemberAccess	w -> sn		502273	1					
ANR	502549	Identifier	w		502273	0					
ANR	502550	Identifier	sn		502273	1					
ANR	502551	ExpressionStatement	size -= w -> sn	691:8:21481:21494	502273	3	True				
ANR	502552	AssignmentExpression	size -= w -> sn		502273	0		-=			
ANR	502553	Identifier	size		502273	0					
ANR	502554	PtrMemberAccess	w -> sn		502273	1					
ANR	502555	Identifier	w		502273	0					
ANR	502556	Identifier	sn		502273	1					
ANR	502557	ExpressionStatement	count = w -> dn	692:8:21504:21517	502273	4	True				
ANR	502558	AssignmentExpression	count = w -> dn		502273	0		=			
ANR	502559	Identifier	count		502273	0					
ANR	502560	PtrMemberAccess	w -> dn		502273	1					
ANR	502561	Identifier	w		502273	0					
ANR	502562	Identifier	dn		502273	1					
ANR	502563	ReturnType	static void		502273	1					
ANR	502564	Identifier	v4dwt_interleave_h		502273	2					
ANR	502565	ParameterList	"v4dwt_t * restrict w , float * restrict a , int x , int size"		502273	3					
ANR	502566	Parameter	v4dwt_t * restrict w	647:31:20117:20135	502273	0	True				
ANR	502567	ParameterType	v4dwt_t * restrict		502273	0					
ANR	502568	Identifier	w		502273	1					
ANR	502569	Parameter	float * restrict a	647:52:20138:20154	502273	1	True				
ANR	502570	ParameterType	float * restrict		502273	0					
ANR	502571	Identifier	a		502273	1					
ANR	502572	Parameter	int x	647:71:20157:20161	502273	2	True				
ANR	502573	ParameterType	int		502273	0					
ANR	502574	Identifier	x		502273	1					
ANR	502575	Parameter	int size	648:31:20195:20202	502273	3	True				
ANR	502576	ParameterType	int		502273	0					
ANR	502577	Identifier	size		502273	1					
ANR	502578	CFGEntryNode	ENTRY		502273		True				
ANR	502579	CFGExitNode	EXIT		502273		True				
ANR	502580	Symbol	a		502273						
ANR	502581	Symbol	* w		502273						
ANR	502582	Symbol	bi		502273						
ANR	502583	Symbol	w -> dn		502273						
ANR	502584	Symbol	count		502273						
ANR	502585	Symbol	i		502273						
ANR	502586	Symbol	j		502273						
ANR	502587	Symbol	k		502273						
ANR	502588	Symbol	* a		502273						
ANR	502589	Symbol	* bi		502273						
ANR	502590	Symbol	* i		502273						
ANR	502591	Symbol	size		502273						
ANR	502592	Symbol	* j		502273						
ANR	502593	Symbol	w -> sn		502273						
ANR	502594	Symbol	w		502273						
ANR	502595	Symbol	x		502273						
ANR	502596	Symbol	w -> cas		502273						
ANR	502597	Symbol	w -> wavelet		502273						
ANR	502598	Function	v4dwt_interleave_v	696:0:21528:21912							
ANR	502599	FunctionDef	"v4dwt_interleave_v (v4dwt_t * restrict v , float * restrict a , int x)"		502598	0					
ANR	502600	CompoundStatement		697:0:21606:21912	502598	0					
ANR	502601	IdentifierDeclStatement	v4 * restrict bi = v -> wavelet + v -> cas ;	698:4:21612:21649	502598	0	True				
ANR	502602	IdentifierDecl	* restrict bi = v -> wavelet + v -> cas		502598	0					
ANR	502603	IdentifierDeclType	v4 * restrict		502598	0					
ANR	502604	Identifier	bi		502598	1					
ANR	502605	AssignmentExpression	* restrict bi = v -> wavelet + v -> cas		502598	2		=			
ANR	502606	Identifier	bi		502598	0					
ANR	502607	AdditiveExpression	v -> wavelet + v -> cas		502598	1		+			
ANR	502608	PtrMemberAccess	v -> wavelet		502598	0					
ANR	502609	Identifier	v		502598	0					
ANR	502610	Identifier	wavelet		502598	1					
ANR	502611	PtrMemberAccess	v -> cas		502598	1					
ANR	502612	Identifier	v		502598	0					
ANR	502613	Identifier	cas		502598	1					
ANR	502614	IdentifierDeclStatement	int i ;	699:4:21655:21660	502598	1	True				
ANR	502615	IdentifierDecl	i		502598	0					
ANR	502616	IdentifierDeclType	int		502598	0					
ANR	502617	Identifier	i		502598	1					
ANR	502618	ForStatement	for ( i = 0 ; i < v -> sn ; ++ i )		502598	2					
ANR	502619	ForInit	i = 0 ;	700:9:21671:21676	502598	0	True				
ANR	502620	AssignmentExpression	i = 0		502598	0		=			
ANR	502621	Identifier	i		502598	0					
ANR	502622	PrimaryExpression	0		502598	1					
ANR	502623	Condition	i < v -> sn	700:16:21678:21686	502598	1	True				
ANR	502624	RelationalExpression	i < v -> sn		502598	0		<			
ANR	502625	Identifier	i		502598	0					
ANR	502626	PtrMemberAccess	v -> sn		502598	1					
ANR	502627	Identifier	v		502598	0					
ANR	502628	Identifier	sn		502598	1					
ANR	502629	UnaryExpression	++ i	700:27:21689:21691	502598	2	True				
ANR	502630	IncDec	++		502598	0					
ANR	502631	Identifier	i		502598	1					
ANR	502632	CompoundStatement		4:32:87:87	502598	3					
ANR	502633	ExpressionStatement	"memcpy ( & bi [ i * 2 ] , & a [ i * x ] , 4 * sizeof ( float ) )"	701:8:21704:21752	502598	0	True				
ANR	502634	CallExpression	"memcpy ( & bi [ i * 2 ] , & a [ i * x ] , 4 * sizeof ( float ) )"		502598	0					
ANR	502635	Callee	memcpy		502598	0					
ANR	502636	Identifier	memcpy		502598	0					
ANR	502637	ArgumentList	& bi [ i * 2 ]		502598	1					
ANR	502638	Argument	& bi [ i * 2 ]		502598	0					
ANR	502639	UnaryOperationExpression	& bi [ i * 2 ]		502598	0					
ANR	502640	UnaryOperator	&		502598	0					
ANR	502641	ArrayIndexing	bi [ i * 2 ]		502598	1					
ANR	502642	Identifier	bi		502598	0					
ANR	502643	MultiplicativeExpression	i * 2		502598	1		*			
ANR	502644	Identifier	i		502598	0					
ANR	502645	PrimaryExpression	2		502598	1					
ANR	502646	Argument	& a [ i * x ]		502598	1					
ANR	502647	UnaryOperationExpression	& a [ i * x ]		502598	0					
ANR	502648	UnaryOperator	&		502598	0					
ANR	502649	ArrayIndexing	a [ i * x ]		502598	1					
ANR	502650	Identifier	a		502598	0					
ANR	502651	MultiplicativeExpression	i * x		502598	1		*			
ANR	502652	Identifier	i		502598	0					
ANR	502653	Identifier	x		502598	1					
ANR	502654	Argument	4 * sizeof ( float )		502598	2					
ANR	502655	MultiplicativeExpression	4 * sizeof ( float )		502598	0		*			
ANR	502656	PrimaryExpression	4		502598	0					
ANR	502657	SizeofExpression	sizeof ( float )		502598	1					
ANR	502658	Sizeof	sizeof		502598	0					
ANR	502659	SizeofOperand	float		502598	1					
ANR	502660	ExpressionStatement	a += v -> sn * x	703:4:21764:21778	502598	3	True				
ANR	502661	AssignmentExpression	a += v -> sn * x		502598	0		+=			
ANR	502662	Identifier	a		502598	0					
ANR	502663	MultiplicativeExpression	v -> sn * x		502598	1		*			
ANR	502664	PtrMemberAccess	v -> sn		502598	0					
ANR	502665	Identifier	v		502598	0					
ANR	502666	Identifier	sn		502598	1					
ANR	502667	Identifier	x		502598	1					
ANR	502668	ExpressionStatement	bi = v -> wavelet + 1 - v -> cas	704:4:21784:21812	502598	4	True				
ANR	502669	AssignmentExpression	bi = v -> wavelet + 1 - v -> cas		502598	0		=			
ANR	502670	Identifier	bi		502598	0					
ANR	502671	AdditiveExpression	v -> wavelet + 1 - v -> cas		502598	1		+			
ANR	502672	PtrMemberAccess	v -> wavelet		502598	0					
ANR	502673	Identifier	v		502598	0					
ANR	502674	Identifier	wavelet		502598	1					
ANR	502675	AdditiveExpression	1 - v -> cas		502598	1		-			
ANR	502676	PrimaryExpression	1		502598	0					
ANR	502677	PtrMemberAccess	v -> cas		502598	1					
ANR	502678	Identifier	v		502598	0					
ANR	502679	Identifier	cas		502598	1					
ANR	502680	ForStatement	for ( i = 0 ; i < v -> dn ; ++ i )		502598	5					
ANR	502681	ForInit	i = 0 ;	705:9:21823:21828	502598	0	True				
ANR	502682	AssignmentExpression	i = 0		502598	0		=			
ANR	502683	Identifier	i		502598	0					
ANR	502684	PrimaryExpression	0		502598	1					
ANR	502685	Condition	i < v -> dn	705:16:21830:21838	502598	1	True				
ANR	502686	RelationalExpression	i < v -> dn		502598	0		<			
ANR	502687	Identifier	i		502598	0					
ANR	502688	PtrMemberAccess	v -> dn		502598	1					
ANR	502689	Identifier	v		502598	0					
ANR	502690	Identifier	dn		502598	1					
ANR	502691	UnaryExpression	++ i	705:27:21841:21843	502598	2	True				
ANR	502692	IncDec	++		502598	0					
ANR	502693	Identifier	i		502598	1					
ANR	502694	CompoundStatement		9:32:239:239	502598	3					
ANR	502695	ExpressionStatement	"memcpy ( & bi [ i * 2 ] , & a [ i * x ] , 4 * sizeof ( float ) )"	706:8:21856:21904	502598	0	True				
ANR	502696	CallExpression	"memcpy ( & bi [ i * 2 ] , & a [ i * x ] , 4 * sizeof ( float ) )"		502598	0					
ANR	502697	Callee	memcpy		502598	0					
ANR	502698	Identifier	memcpy		502598	0					
ANR	502699	ArgumentList	& bi [ i * 2 ]		502598	1					
ANR	502700	Argument	& bi [ i * 2 ]		502598	0					
ANR	502701	UnaryOperationExpression	& bi [ i * 2 ]		502598	0					
ANR	502702	UnaryOperator	&		502598	0					
ANR	502703	ArrayIndexing	bi [ i * 2 ]		502598	1					
ANR	502704	Identifier	bi		502598	0					
ANR	502705	MultiplicativeExpression	i * 2		502598	1		*			
ANR	502706	Identifier	i		502598	0					
ANR	502707	PrimaryExpression	2		502598	1					
ANR	502708	Argument	& a [ i * x ]		502598	1					
ANR	502709	UnaryOperationExpression	& a [ i * x ]		502598	0					
ANR	502710	UnaryOperator	&		502598	0					
ANR	502711	ArrayIndexing	a [ i * x ]		502598	1					
ANR	502712	Identifier	a		502598	0					
ANR	502713	MultiplicativeExpression	i * x		502598	1		*			
ANR	502714	Identifier	i		502598	0					
ANR	502715	Identifier	x		502598	1					
ANR	502716	Argument	4 * sizeof ( float )		502598	2					
ANR	502717	MultiplicativeExpression	4 * sizeof ( float )		502598	0		*			
ANR	502718	PrimaryExpression	4		502598	0					
ANR	502719	SizeofExpression	sizeof ( float )		502598	1					
ANR	502720	Sizeof	sizeof		502598	0					
ANR	502721	SizeofOperand	float		502598	1					
ANR	502722	ReturnType	static void		502598	1					
ANR	502723	Identifier	v4dwt_interleave_v		502598	2					
ANR	502724	ParameterList	"v4dwt_t * restrict v , float * restrict a , int x"		502598	3					
ANR	502725	Parameter	v4dwt_t * restrict v	696:31:21559:21577	502598	0	True				
ANR	502726	ParameterType	v4dwt_t * restrict		502598	0					
ANR	502727	Identifier	v		502598	1					
ANR	502728	Parameter	float * restrict a	696:52:21580:21596	502598	1	True				
ANR	502729	ParameterType	float * restrict		502598	0					
ANR	502730	Identifier	a		502598	1					
ANR	502731	Parameter	int x	696:71:21599:21603	502598	2	True				
ANR	502732	ParameterType	int		502598	0					
ANR	502733	Identifier	x		502598	1					
ANR	502734	CFGEntryNode	ENTRY		502598		True				
ANR	502735	CFGExitNode	EXIT		502598		True				
ANR	502736	Symbol	* v		502598						
ANR	502737	Symbol	a		502598						
ANR	502738	Symbol	v -> sn		502598						
ANR	502739	Symbol	v -> cas		502598						
ANR	502740	Symbol	v		502598						
ANR	502741	Symbol	bi		502598						
ANR	502742	Symbol	x		502598						
ANR	502743	Symbol	i		502598						
ANR	502744	Symbol	v -> wavelet		502598						
ANR	502745	Symbol	v -> dn		502598						
ANR	502746	Function	v4dwt_decode_step1_sse	712:0:21931:22435							
ANR	502747	FunctionDef	"v4dwt_decode_step1_sse (v4 * w , int count , const __m128 c)"		502746	0					
ANR	502748	CompoundStatement		713:0:22000:22435	502746	0					
ANR	502749	IdentifierDeclStatement	__m128 * restrict vw = ( __m128 * ) w ;	714:4:22006:22039	502746	0	True				
ANR	502750	IdentifierDecl	* restrict vw = ( __m128 * ) w		502746	0					
ANR	502751	IdentifierDeclType	__m128 * restrict		502746	0					
ANR	502752	Identifier	vw		502746	1					
ANR	502753	AssignmentExpression	* restrict vw = ( __m128 * ) w		502746	2		=			
ANR	502754	Identifier	vw		502746	0					
ANR	502755	CastExpression	( __m128 * ) w		502746	1					
ANR	502756	CastTarget	__m128 *		502746	0					
ANR	502757	Identifier	w		502746	1					
ANR	502758	IdentifierDeclStatement	int i ;	715:4:22045:22050	502746	1	True				
ANR	502759	IdentifierDecl	i		502746	0					
ANR	502760	IdentifierDeclType	int		502746	0					
ANR	502761	Identifier	i		502746	1					
ANR	502762	ForStatement	for ( i = 0 ; i < count >> 2 ; ++ i )		502746	2					
ANR	502763	ForInit	i = 0 ;	717:9:22088:22093	502746	0	True				
ANR	502764	AssignmentExpression	i = 0		502746	0		=			
ANR	502765	Identifier	i		502746	0					
ANR	502766	PrimaryExpression	0		502746	1					
ANR	502767	Condition	i < count >> 2	717:16:22095:22108	502746	1	True				
ANR	502768	RelationalExpression	i < count >> 2		502746	0		<			
ANR	502769	Identifier	i		502746	0					
ANR	502770	ShiftExpression	count >> 2		502746	1		>>			
ANR	502771	Identifier	count		502746	0					
ANR	502772	PrimaryExpression	2		502746	1					
ANR	502773	UnaryExpression	++ i	717:32:22111:22113	502746	2	True				
ANR	502774	IncDec	++		502746	0					
ANR	502775	Identifier	i		502746	1					
ANR	502776	CompoundStatement		5:37:115:115	502746	3					
ANR	502777	ExpressionStatement	"* vw = _mm_mul_ps ( * vw , c )"	718:8:22126:22150	502746	0	True				
ANR	502778	AssignmentExpression	"* vw = _mm_mul_ps ( * vw , c )"		502746	0		=			
ANR	502779	UnaryOperationExpression	* vw		502746	0					
ANR	502780	UnaryOperator	*		502746	0					
ANR	502781	Identifier	vw		502746	1					
ANR	502782	CallExpression	"_mm_mul_ps ( * vw , c )"		502746	1					
ANR	502783	Callee	_mm_mul_ps		502746	0					
ANR	502784	Identifier	_mm_mul_ps		502746	0					
ANR	502785	ArgumentList	* vw		502746	1					
ANR	502786	Argument	* vw		502746	0					
ANR	502787	UnaryOperationExpression	* vw		502746	0					
ANR	502788	UnaryOperator	*		502746	0					
ANR	502789	Identifier	vw		502746	1					
ANR	502790	Argument	c		502746	1					
ANR	502791	Identifier	c		502746	0					
ANR	502792	ExpressionStatement	vw += 2	719:8:22160:22167	502746	1	True				
ANR	502793	AssignmentExpression	vw += 2		502746	0		+=			
ANR	502794	Identifier	vw		502746	0					
ANR	502795	PrimaryExpression	2		502746	1					
ANR	502796	ExpressionStatement	"* vw = _mm_mul_ps ( * vw , c )"	720:8:22177:22201	502746	2	True				
ANR	502797	AssignmentExpression	"* vw = _mm_mul_ps ( * vw , c )"		502746	0		=			
ANR	502798	UnaryOperationExpression	* vw		502746	0					
ANR	502799	UnaryOperator	*		502746	0					
ANR	502800	Identifier	vw		502746	1					
ANR	502801	CallExpression	"_mm_mul_ps ( * vw , c )"		502746	1					
ANR	502802	Callee	_mm_mul_ps		502746	0					
ANR	502803	Identifier	_mm_mul_ps		502746	0					
ANR	502804	ArgumentList	* vw		502746	1					
ANR	502805	Argument	* vw		502746	0					
ANR	502806	UnaryOperationExpression	* vw		502746	0					
ANR	502807	UnaryOperator	*		502746	0					
ANR	502808	Identifier	vw		502746	1					
ANR	502809	Argument	c		502746	1					
ANR	502810	Identifier	c		502746	0					
ANR	502811	ExpressionStatement	vw += 2	721:8:22211:22218	502746	3	True				
ANR	502812	AssignmentExpression	vw += 2		502746	0		+=			
ANR	502813	Identifier	vw		502746	0					
ANR	502814	PrimaryExpression	2		502746	1					
ANR	502815	ExpressionStatement	"* vw = _mm_mul_ps ( * vw , c )"	722:8:22228:22252	502746	4	True				
ANR	502816	AssignmentExpression	"* vw = _mm_mul_ps ( * vw , c )"		502746	0		=			
ANR	502817	UnaryOperationExpression	* vw		502746	0					
ANR	502818	UnaryOperator	*		502746	0					
ANR	502819	Identifier	vw		502746	1					
ANR	502820	CallExpression	"_mm_mul_ps ( * vw , c )"		502746	1					
ANR	502821	Callee	_mm_mul_ps		502746	0					
ANR	502822	Identifier	_mm_mul_ps		502746	0					
ANR	502823	ArgumentList	* vw		502746	1					
ANR	502824	Argument	* vw		502746	0					
ANR	502825	UnaryOperationExpression	* vw		502746	0					
ANR	502826	UnaryOperator	*		502746	0					
ANR	502827	Identifier	vw		502746	1					
ANR	502828	Argument	c		502746	1					
ANR	502829	Identifier	c		502746	0					
ANR	502830	ExpressionStatement	vw += 2	723:8:22262:22269	502746	5	True				
ANR	502831	AssignmentExpression	vw += 2		502746	0		+=			
ANR	502832	Identifier	vw		502746	0					
ANR	502833	PrimaryExpression	2		502746	1					
ANR	502834	ExpressionStatement	"* vw = _mm_mul_ps ( * vw , c )"	724:8:22279:22303	502746	6	True				
ANR	502835	AssignmentExpression	"* vw = _mm_mul_ps ( * vw , c )"		502746	0		=			
ANR	502836	UnaryOperationExpression	* vw		502746	0					
ANR	502837	UnaryOperator	*		502746	0					
ANR	502838	Identifier	vw		502746	1					
ANR	502839	CallExpression	"_mm_mul_ps ( * vw , c )"		502746	1					
ANR	502840	Callee	_mm_mul_ps		502746	0					
ANR	502841	Identifier	_mm_mul_ps		502746	0					
ANR	502842	ArgumentList	* vw		502746	1					
ANR	502843	Argument	* vw		502746	0					
ANR	502844	UnaryOperationExpression	* vw		502746	0					
ANR	502845	UnaryOperator	*		502746	0					
ANR	502846	Identifier	vw		502746	1					
ANR	502847	Argument	c		502746	1					
ANR	502848	Identifier	c		502746	0					
ANR	502849	ExpressionStatement	vw += 2	725:8:22313:22320	502746	7	True				
ANR	502850	AssignmentExpression	vw += 2		502746	0		+=			
ANR	502851	Identifier	vw		502746	0					
ANR	502852	PrimaryExpression	2		502746	1					
ANR	502853	ExpressionStatement	count &= 3	727:4:22332:22342	502746	3	True				
ANR	502854	AssignmentExpression	count &= 3		502746	0		&=			
ANR	502855	Identifier	count		502746	0					
ANR	502856	PrimaryExpression	3		502746	1					
ANR	502857	ForStatement	for ( i = 0 ; i < count ; ++ i )		502746	4					
ANR	502858	ForInit	i = 0 ;	728:9:22353:22358	502746	0	True				
ANR	502859	AssignmentExpression	i = 0		502746	0		=			
ANR	502860	Identifier	i		502746	0					
ANR	502861	PrimaryExpression	0		502746	1					
ANR	502862	Condition	i < count	728:16:22360:22368	502746	1	True				
ANR	502863	RelationalExpression	i < count		502746	0		<			
ANR	502864	Identifier	i		502746	0					
ANR	502865	Identifier	count		502746	1					
ANR	502866	UnaryExpression	++ i	728:27:22371:22373	502746	2	True				
ANR	502867	IncDec	++		502746	0					
ANR	502868	Identifier	i		502746	1					
ANR	502869	CompoundStatement		16:32:375:375	502746	3					
ANR	502870	ExpressionStatement	"* vw = _mm_mul_ps ( * vw , c )"	729:8:22386:22410	502746	0	True				
ANR	502871	AssignmentExpression	"* vw = _mm_mul_ps ( * vw , c )"		502746	0		=			
ANR	502872	UnaryOperationExpression	* vw		502746	0					
ANR	502873	UnaryOperator	*		502746	0					
ANR	502874	Identifier	vw		502746	1					
ANR	502875	CallExpression	"_mm_mul_ps ( * vw , c )"		502746	1					
ANR	502876	Callee	_mm_mul_ps		502746	0					
ANR	502877	Identifier	_mm_mul_ps		502746	0					
ANR	502878	ArgumentList	* vw		502746	1					
ANR	502879	Argument	* vw		502746	0					
ANR	502880	UnaryOperationExpression	* vw		502746	0					
ANR	502881	UnaryOperator	*		502746	0					
ANR	502882	Identifier	vw		502746	1					
ANR	502883	Argument	c		502746	1					
ANR	502884	Identifier	c		502746	0					
ANR	502885	ExpressionStatement	vw += 2	730:8:22420:22427	502746	1	True				
ANR	502886	AssignmentExpression	vw += 2		502746	0		+=			
ANR	502887	Identifier	vw		502746	0					
ANR	502888	PrimaryExpression	2		502746	1					
ANR	502889	ReturnType	static void		502746	1					
ANR	502890	Identifier	v4dwt_decode_step1_sse		502746	2					
ANR	502891	ParameterList	"v4 * w , int count , const __m128 c"		502746	3					
ANR	502892	Parameter	v4 * w	712:35:21966:21970	502746	0	True				
ANR	502893	ParameterType	v4 *		502746	0					
ANR	502894	Identifier	w		502746	1					
ANR	502895	Parameter	int count	712:42:21973:21981	502746	1	True				
ANR	502896	ParameterType	int		502746	0					
ANR	502897	Identifier	count		502746	1					
ANR	502898	Parameter	const __m128 c	712:53:21984:21997	502746	2	True				
ANR	502899	ParameterType	const __m128		502746	0					
ANR	502900	Identifier	c		502746	1					
ANR	502901	CFGEntryNode	ENTRY		502746		True				
ANR	502902	CFGExitNode	EXIT		502746		True				
ANR	502903	Symbol	vw		502746						
ANR	502904	Symbol	c		502746						
ANR	502905	Symbol	* vw		502746						
ANR	502906	Symbol	w		502746						
ANR	502907	Symbol	count		502746						
ANR	502908	Symbol	i		502746						
ANR	502909	Symbol	_mm_mul_ps		502746						
ANR	502910	Function	v4dwt_decode_step2_sse	734:0:22438:23070							
ANR	502911	FunctionDef	"v4dwt_decode_step2_sse (v4 * l , v4 * w , int k , int m , __m128 c)"		502910	0					
ANR	502912	CompoundStatement		735:0:22511:23070	502910	0					
ANR	502913	IdentifierDeclStatement	__m128 * restrict vl = ( __m128 * ) l ;	736:4:22517:22550	502910	0	True				
ANR	502914	IdentifierDecl	* restrict vl = ( __m128 * ) l		502910	0					
ANR	502915	IdentifierDeclType	__m128 * restrict		502910	0					
ANR	502916	Identifier	vl		502910	1					
ANR	502917	AssignmentExpression	* restrict vl = ( __m128 * ) l		502910	2		=			
ANR	502918	Identifier	vl		502910	0					
ANR	502919	CastExpression	( __m128 * ) l		502910	1					
ANR	502920	CastTarget	__m128 *		502910	0					
ANR	502921	Identifier	l		502910	1					
ANR	502922	IdentifierDeclStatement	__m128 * restrict vw = ( __m128 * ) w ;	737:4:22556:22589	502910	1	True				
ANR	502923	IdentifierDecl	* restrict vw = ( __m128 * ) w		502910	0					
ANR	502924	IdentifierDeclType	__m128 * restrict		502910	0					
ANR	502925	Identifier	vw		502910	1					
ANR	502926	AssignmentExpression	* restrict vw = ( __m128 * ) w		502910	2		=			
ANR	502927	Identifier	vw		502910	0					
ANR	502928	CastExpression	( __m128 * ) w		502910	1					
ANR	502929	CastTarget	__m128 *		502910	0					
ANR	502930	Identifier	w		502910	1					
ANR	502931	IdentifierDeclStatement	int i ;	738:4:22595:22600	502910	2	True				
ANR	502932	IdentifierDecl	i		502910	0					
ANR	502933	IdentifierDeclType	int		502910	0					
ANR	502934	Identifier	i		502910	1					
ANR	502935	IdentifierDeclStatement	"__m128 tmp1 , tmp2 , tmp3 ;"	739:4:22606:22629	502910	3	True				
ANR	502936	IdentifierDecl	tmp1		502910	0					
ANR	502937	IdentifierDeclType	__m128		502910	0					
ANR	502938	Identifier	tmp1		502910	1					
ANR	502939	IdentifierDecl	tmp2		502910	1					
ANR	502940	IdentifierDeclType	__m128		502910	0					
ANR	502941	Identifier	tmp2		502910	1					
ANR	502942	IdentifierDecl	tmp3		502910	2					
ANR	502943	IdentifierDeclType	__m128		502910	0					
ANR	502944	Identifier	tmp3		502910	1					
ANR	502945	ExpressionStatement	tmp1 = vl [ 0 ]	740:4:22635:22647	502910	4	True				
ANR	502946	AssignmentExpression	tmp1 = vl [ 0 ]		502910	0		=			
ANR	502947	Identifier	tmp1		502910	0					
ANR	502948	ArrayIndexing	vl [ 0 ]		502910	1					
ANR	502949	Identifier	vl		502910	0					
ANR	502950	PrimaryExpression	0		502910	1					
ANR	502951	ForStatement	for ( i = 0 ; i < m ; ++ i )		502910	5					
ANR	502952	ForInit	i = 0 ;	741:9:22658:22663	502910	0	True				
ANR	502953	AssignmentExpression	i = 0		502910	0		=			
ANR	502954	Identifier	i		502910	0					
ANR	502955	PrimaryExpression	0		502910	1					
ANR	502956	Condition	i < m	741:16:22665:22669	502910	1	True				
ANR	502957	RelationalExpression	i < m		502910	0		<			
ANR	502958	Identifier	i		502910	0					
ANR	502959	Identifier	m		502910	1					
ANR	502960	UnaryExpression	++ i	741:23:22672:22674	502910	2	True				
ANR	502961	IncDec	++		502910	0					
ANR	502962	Identifier	i		502910	1					
ANR	502963	CompoundStatement		7:28:165:165	502910	3					
ANR	502964	ExpressionStatement	tmp2 = vw [ - 1 ]	742:8:22687:22700	502910	0	True				
ANR	502965	AssignmentExpression	tmp2 = vw [ - 1 ]		502910	0		=			
ANR	502966	Identifier	tmp2		502910	0					
ANR	502967	ArrayIndexing	vw [ - 1 ]		502910	1					
ANR	502968	Identifier	vw		502910	0					
ANR	502969	UnaryOperationExpression	- 1		502910	1					
ANR	502970	UnaryOperator	-		502910	0					
ANR	502971	PrimaryExpression	1		502910	1					
ANR	502972	ExpressionStatement	tmp3 = vw [ 0 ]	743:8:22710:22723	502910	1	True				
ANR	502973	AssignmentExpression	tmp3 = vw [ 0 ]		502910	0		=			
ANR	502974	Identifier	tmp3		502910	0					
ANR	502975	ArrayIndexing	vw [ 0 ]		502910	1					
ANR	502976	Identifier	vw		502910	0					
ANR	502977	PrimaryExpression	0		502910	1					
ANR	502978	ExpressionStatement	"vw [ - 1 ] = _mm_add_ps ( tmp2 , _mm_mul_ps ( _mm_add_ps ( tmp1 , tmp3 ) , c ) )"	744:8:22733:22797	502910	2	True				
ANR	502979	AssignmentExpression	"vw [ - 1 ] = _mm_add_ps ( tmp2 , _mm_mul_ps ( _mm_add_ps ( tmp1 , tmp3 ) , c ) )"		502910	0		=			
ANR	502980	ArrayIndexing	vw [ - 1 ]		502910	0					
ANR	502981	Identifier	vw		502910	0					
ANR	502982	UnaryOperationExpression	- 1		502910	1					
ANR	502983	UnaryOperator	-		502910	0					
ANR	502984	PrimaryExpression	1		502910	1					
ANR	502985	CallExpression	"_mm_add_ps ( tmp2 , _mm_mul_ps ( _mm_add_ps ( tmp1 , tmp3 ) , c ) )"		502910	1					
ANR	502986	Callee	_mm_add_ps		502910	0					
ANR	502987	Identifier	_mm_add_ps		502910	0					
ANR	502988	ArgumentList	tmp2		502910	1					
ANR	502989	Argument	tmp2		502910	0					
ANR	502990	Identifier	tmp2		502910	0					
ANR	502991	Argument	"_mm_mul_ps ( _mm_add_ps ( tmp1 , tmp3 ) , c )"		502910	1					
ANR	502992	CallExpression	"_mm_mul_ps ( _mm_add_ps ( tmp1 , tmp3 ) , c )"		502910	0					
ANR	502993	Callee	_mm_mul_ps		502910	0					
ANR	502994	Identifier	_mm_mul_ps		502910	0					
ANR	502995	ArgumentList	"_mm_add_ps ( tmp1 , tmp3 )"		502910	1					
ANR	502996	Argument	"_mm_add_ps ( tmp1 , tmp3 )"		502910	0					
ANR	502997	CallExpression	"_mm_add_ps ( tmp1 , tmp3 )"		502910	0					
ANR	502998	Callee	_mm_add_ps		502910	0					
ANR	502999	Identifier	_mm_add_ps		502910	0					
ANR	503000	ArgumentList	tmp1		502910	1					
ANR	503001	Argument	tmp1		502910	0					
ANR	503002	Identifier	tmp1		502910	0					
ANR	503003	Argument	tmp3		502910	1					
ANR	503004	Identifier	tmp3		502910	0					
ANR	503005	Argument	c		502910	1					
ANR	503006	Identifier	c		502910	0					
ANR	503007	ExpressionStatement	tmp1 = tmp3	745:8:22807:22818	502910	3	True				
ANR	503008	AssignmentExpression	tmp1 = tmp3		502910	0		=			
ANR	503009	Identifier	tmp1		502910	0					
ANR	503010	Identifier	tmp3		502910	1					
ANR	503011	ExpressionStatement	vw += 2	746:8:22828:22835	502910	4	True				
ANR	503012	AssignmentExpression	vw += 2		502910	0		+=			
ANR	503013	Identifier	vw		502910	0					
ANR	503014	PrimaryExpression	2		502910	1					
ANR	503015	ExpressionStatement	vl = vw - 2	748:4:22847:22858	502910	6	True				
ANR	503016	AssignmentExpression	vl = vw - 2		502910	0		=			
ANR	503017	Identifier	vl		502910	0					
ANR	503018	AdditiveExpression	vw - 2		502910	1		-			
ANR	503019	Identifier	vw		502910	0					
ANR	503020	PrimaryExpression	2		502910	1					
ANR	503021	IfStatement	if ( m >= k )		502910	7					
ANR	503022	Condition	m >= k	749:8:22868:22873	502910	0	True				
ANR	503023	RelationalExpression	m >= k		502910	0		>=			
ANR	503024	Identifier	m		502910	0					
ANR	503025	Identifier	k		502910	1					
ANR	503026	CompoundStatement		15:16:364:364	502910	1					
ANR	503027	ReturnStatement	return ;	750:8:22886:22892	502910	0	True				
ANR	503028	ExpressionStatement	"c = _mm_add_ps ( c , c )"	752:4:22904:22924	502910	8	True				
ANR	503029	AssignmentExpression	"c = _mm_add_ps ( c , c )"		502910	0		=			
ANR	503030	Identifier	c		502910	0					
ANR	503031	CallExpression	"_mm_add_ps ( c , c )"		502910	1					
ANR	503032	Callee	_mm_add_ps		502910	0					
ANR	503033	Identifier	_mm_add_ps		502910	0					
ANR	503034	ArgumentList	c		502910	1					
ANR	503035	Argument	c		502910	0					
ANR	503036	Identifier	c		502910	0					
ANR	503037	Argument	c		502910	1					
ANR	503038	Identifier	c		502910	0					
ANR	503039	ExpressionStatement	"c = _mm_mul_ps ( c , vl [ 0 ] )"	753:4:22930:22954	502910	9	True				
ANR	503040	AssignmentExpression	"c = _mm_mul_ps ( c , vl [ 0 ] )"		502910	0		=			
ANR	503041	Identifier	c		502910	0					
ANR	503042	CallExpression	"_mm_mul_ps ( c , vl [ 0 ] )"		502910	1					
ANR	503043	Callee	_mm_mul_ps		502910	0					
ANR	503044	Identifier	_mm_mul_ps		502910	0					
ANR	503045	ArgumentList	c		502910	1					
ANR	503046	Argument	c		502910	0					
ANR	503047	Identifier	c		502910	0					
ANR	503048	Argument	vl [ 0 ]		502910	1					
ANR	503049	ArrayIndexing	vl [ 0 ]		502910	0					
ANR	503050	Identifier	vl		502910	0					
ANR	503051	PrimaryExpression	0		502910	1					
ANR	503052	ForStatement	for ( ; m < k ; ++ m )		502910	10					
ANR	503053	Condition	m < k	754:11:22967:22971	502910	0	True				
ANR	503054	RelationalExpression	m < k		502910	0		<			
ANR	503055	Identifier	m		502910	0					
ANR	503056	Identifier	k		502910	1					
ANR	503057	UnaryExpression	++ m	754:18:22974:22976	502910	1	True				
ANR	503058	IncDec	++		502910	0					
ANR	503059	Identifier	m		502910	1					
ANR	503060	CompoundStatement		21:8:477:496	502910	2					
ANR	503061	IdentifierDeclStatement	__m128 tmp = vw [ - 1 ] ;	755:8:22989:23008	502910	0	True				
ANR	503062	IdentifierDecl	tmp = vw [ - 1 ]		502910	0					
ANR	503063	IdentifierDeclType	__m128		502910	0					
ANR	503064	Identifier	tmp		502910	1					
ANR	503065	AssignmentExpression	tmp = vw [ - 1 ]		502910	2		=			
ANR	503066	Identifier	tmp		502910	0					
ANR	503067	ArrayIndexing	vw [ - 1 ]		502910	1					
ANR	503068	Identifier	vw		502910	0					
ANR	503069	UnaryOperationExpression	- 1		502910	1					
ANR	503070	UnaryOperator	-		502910	0					
ANR	503071	PrimaryExpression	1		502910	1					
ANR	503072	ExpressionStatement	"vw [ - 1 ] = _mm_add_ps ( tmp , c )"	756:8:23018:23045	502910	1	True				
ANR	503073	AssignmentExpression	"vw [ - 1 ] = _mm_add_ps ( tmp , c )"		502910	0		=			
ANR	503074	ArrayIndexing	vw [ - 1 ]		502910	0					
ANR	503075	Identifier	vw		502910	0					
ANR	503076	UnaryOperationExpression	- 1		502910	1					
ANR	503077	UnaryOperator	-		502910	0					
ANR	503078	PrimaryExpression	1		502910	1					
ANR	503079	CallExpression	"_mm_add_ps ( tmp , c )"		502910	1					
ANR	503080	Callee	_mm_add_ps		502910	0					
ANR	503081	Identifier	_mm_add_ps		502910	0					
ANR	503082	ArgumentList	tmp		502910	1					
ANR	503083	Argument	tmp		502910	0					
ANR	503084	Identifier	tmp		502910	0					
ANR	503085	Argument	c		502910	1					
ANR	503086	Identifier	c		502910	0					
ANR	503087	ExpressionStatement	vw += 2	757:8:23055:23062	502910	2	True				
ANR	503088	AssignmentExpression	vw += 2		502910	0		+=			
ANR	503089	Identifier	vw		502910	0					
ANR	503090	PrimaryExpression	2		502910	1					
ANR	503091	ReturnType	static void		502910	1					
ANR	503092	Identifier	v4dwt_decode_step2_sse		502910	2					
ANR	503093	ParameterList	"v4 * l , v4 * w , int k , int m , __m128 c"		502910	3					
ANR	503094	Parameter	v4 * l	734:35:22473:22477	502910	0	True				
ANR	503095	ParameterType	v4 *		502910	0					
ANR	503096	Identifier	l		502910	1					
ANR	503097	Parameter	v4 * w	734:42:22480:22484	502910	1	True				
ANR	503098	ParameterType	v4 *		502910	0					
ANR	503099	Identifier	w		502910	1					
ANR	503100	Parameter	int k	734:49:22487:22491	502910	2	True				
ANR	503101	ParameterType	int		502910	0					
ANR	503102	Identifier	k		502910	1					
ANR	503103	Parameter	int m	734:56:22494:22498	502910	3	True				
ANR	503104	ParameterType	int		502910	0					
ANR	503105	Identifier	m		502910	1					
ANR	503106	Parameter	__m128 c	734:63:22501:22508	502910	4	True				
ANR	503107	ParameterType	__m128		502910	0					
ANR	503108	Identifier	c		502910	1					
ANR	503109	CFGEntryNode	ENTRY		502910		True				
ANR	503110	CFGExitNode	EXIT		502910		True				
ANR	503111	Symbol	vw		502910						
ANR	503112	Symbol	c		502910						
ANR	503113	Symbol	* vw		502910						
ANR	503114	Symbol	i		502910						
ANR	503115	Symbol	_mm_mul_ps		502910						
ANR	503116	Symbol	tmp3		502910						
ANR	503117	Symbol	k		502910						
ANR	503118	Symbol	_mm_add_ps		502910						
ANR	503119	Symbol	l		502910						
ANR	503120	Symbol	tmp1		502910						
ANR	503121	Symbol	m		502910						
ANR	503122	Symbol	tmp2		502910						
ANR	503123	Symbol	vl		502910						
ANR	503124	Symbol	tmp		502910						
ANR	503125	Symbol	w		502910						
ANR	503126	Symbol	* vl		502910						
ANR	503127	Function	v4dwt_decode_step1	763:0:23080:23514							
ANR	503128	FunctionDef	"v4dwt_decode_step1 (v4 * w , int count , const float c)"		503127	0					
ANR	503129	CompoundStatement		764:0:23144:23514	503127	0					
ANR	503130	IdentifierDeclStatement	float * restrict fw = ( float * ) w ;	765:4:23150:23181	503127	0	True				
ANR	503131	IdentifierDecl	* restrict fw = ( float * ) w		503127	0					
ANR	503132	IdentifierDeclType	float * restrict		503127	0					
ANR	503133	Identifier	fw		503127	1					
ANR	503134	AssignmentExpression	* restrict fw = ( float * ) w		503127	2		=			
ANR	503135	Identifier	fw		503127	0					
ANR	503136	CastExpression	( float * ) w		503127	1					
ANR	503137	CastTarget	float *		503127	0					
ANR	503138	Identifier	w		503127	1					
ANR	503139	IdentifierDeclStatement	int i ;	766:4:23187:23192	503127	1	True				
ANR	503140	IdentifierDecl	i		503127	0					
ANR	503141	IdentifierDeclType	int		503127	0					
ANR	503142	Identifier	i		503127	1					
ANR	503143	ForStatement	for ( i = 0 ; i < count ; ++ i )		503127	2					
ANR	503144	ForInit	i = 0 ;	767:9:23203:23208	503127	0	True				
ANR	503145	AssignmentExpression	i = 0		503127	0		=			
ANR	503146	Identifier	i		503127	0					
ANR	503147	PrimaryExpression	0		503127	1					
ANR	503148	Condition	i < count	767:16:23210:23218	503127	1	True				
ANR	503149	RelationalExpression	i < count		503127	0		<			
ANR	503150	Identifier	i		503127	0					
ANR	503151	Identifier	count		503127	1					
ANR	503152	UnaryExpression	++ i	767:27:23221:23223	503127	2	True				
ANR	503153	IncDec	++		503127	0					
ANR	503154	Identifier	i		503127	1					
ANR	503155	CompoundStatement		8:8:199:225	503127	3					
ANR	503156	IdentifierDeclStatement	float tmp1 = fw [ i * 8 ] ;	768:8:23236:23262	503127	0	True				
ANR	503157	IdentifierDecl	tmp1 = fw [ i * 8 ]		503127	0					
ANR	503158	IdentifierDeclType	float		503127	0					
ANR	503159	Identifier	tmp1		503127	1					
ANR	503160	AssignmentExpression	tmp1 = fw [ i * 8 ]		503127	2		=			
ANR	503161	Identifier	tmp1		503127	0					
ANR	503162	ArrayIndexing	fw [ i * 8 ]		503127	1					
ANR	503163	Identifier	fw		503127	0					
ANR	503164	MultiplicativeExpression	i * 8		503127	1		*			
ANR	503165	Identifier	i		503127	0					
ANR	503166	PrimaryExpression	8		503127	1					
ANR	503167	IdentifierDeclStatement	float tmp2 = fw [ i * 8 + 1 ] ;	769:8:23272:23298	503127	1	True				
ANR	503168	IdentifierDecl	tmp2 = fw [ i * 8 + 1 ]		503127	0					
ANR	503169	IdentifierDeclType	float		503127	0					
ANR	503170	Identifier	tmp2		503127	1					
ANR	503171	AssignmentExpression	tmp2 = fw [ i * 8 + 1 ]		503127	2		=			
ANR	503172	Identifier	tmp2		503127	0					
ANR	503173	ArrayIndexing	fw [ i * 8 + 1 ]		503127	1					
ANR	503174	Identifier	fw		503127	0					
ANR	503175	AdditiveExpression	i * 8 + 1		503127	1		+			
ANR	503176	MultiplicativeExpression	i * 8		503127	0		*			
ANR	503177	Identifier	i		503127	0					
ANR	503178	PrimaryExpression	8		503127	1					
ANR	503179	PrimaryExpression	1		503127	1					
ANR	503180	IdentifierDeclStatement	float tmp3 = fw [ i * 8 + 2 ] ;	770:8:23308:23334	503127	2	True				
ANR	503181	IdentifierDecl	tmp3 = fw [ i * 8 + 2 ]		503127	0					
ANR	503182	IdentifierDeclType	float		503127	0					
ANR	503183	Identifier	tmp3		503127	1					
ANR	503184	AssignmentExpression	tmp3 = fw [ i * 8 + 2 ]		503127	2		=			
ANR	503185	Identifier	tmp3		503127	0					
ANR	503186	ArrayIndexing	fw [ i * 8 + 2 ]		503127	1					
ANR	503187	Identifier	fw		503127	0					
ANR	503188	AdditiveExpression	i * 8 + 2		503127	1		+			
ANR	503189	MultiplicativeExpression	i * 8		503127	0		*			
ANR	503190	Identifier	i		503127	0					
ANR	503191	PrimaryExpression	8		503127	1					
ANR	503192	PrimaryExpression	2		503127	1					
ANR	503193	IdentifierDeclStatement	float tmp4 = fw [ i * 8 + 3 ] ;	771:8:23344:23370	503127	3	True				
ANR	503194	IdentifierDecl	tmp4 = fw [ i * 8 + 3 ]		503127	0					
ANR	503195	IdentifierDeclType	float		503127	0					
ANR	503196	Identifier	tmp4		503127	1					
ANR	503197	AssignmentExpression	tmp4 = fw [ i * 8 + 3 ]		503127	2		=			
ANR	503198	Identifier	tmp4		503127	0					
ANR	503199	ArrayIndexing	fw [ i * 8 + 3 ]		503127	1					
ANR	503200	Identifier	fw		503127	0					
ANR	503201	AdditiveExpression	i * 8 + 3		503127	1		+			
ANR	503202	MultiplicativeExpression	i * 8		503127	0		*			
ANR	503203	Identifier	i		503127	0					
ANR	503204	PrimaryExpression	8		503127	1					
ANR	503205	PrimaryExpression	3		503127	1					
ANR	503206	ExpressionStatement	fw [ i * 8 ] = tmp1 * c	772:8:23380:23404	503127	4	True				
ANR	503207	AssignmentExpression	fw [ i * 8 ] = tmp1 * c		503127	0		=			
ANR	503208	ArrayIndexing	fw [ i * 8 ]		503127	0					
ANR	503209	Identifier	fw		503127	0					
ANR	503210	MultiplicativeExpression	i * 8		503127	1		*			
ANR	503211	Identifier	i		503127	0					
ANR	503212	PrimaryExpression	8		503127	1					
ANR	503213	MultiplicativeExpression	tmp1 * c		503127	1		*			
ANR	503214	Identifier	tmp1		503127	0					
ANR	503215	Identifier	c		503127	1					
ANR	503216	ExpressionStatement	fw [ i * 8 + 1 ] = tmp2 * c	773:8:23414:23438	503127	5	True				
ANR	503217	AssignmentExpression	fw [ i * 8 + 1 ] = tmp2 * c		503127	0		=			
ANR	503218	ArrayIndexing	fw [ i * 8 + 1 ]		503127	0					
ANR	503219	Identifier	fw		503127	0					
ANR	503220	AdditiveExpression	i * 8 + 1		503127	1		+			
ANR	503221	MultiplicativeExpression	i * 8		503127	0		*			
ANR	503222	Identifier	i		503127	0					
ANR	503223	PrimaryExpression	8		503127	1					
ANR	503224	PrimaryExpression	1		503127	1					
ANR	503225	MultiplicativeExpression	tmp2 * c		503127	1		*			
ANR	503226	Identifier	tmp2		503127	0					
ANR	503227	Identifier	c		503127	1					
ANR	503228	ExpressionStatement	fw [ i * 8 + 2 ] = tmp3 * c	774:8:23448:23472	503127	6	True				
ANR	503229	AssignmentExpression	fw [ i * 8 + 2 ] = tmp3 * c		503127	0		=			
ANR	503230	ArrayIndexing	fw [ i * 8 + 2 ]		503127	0					
ANR	503231	Identifier	fw		503127	0					
ANR	503232	AdditiveExpression	i * 8 + 2		503127	1		+			
ANR	503233	MultiplicativeExpression	i * 8		503127	0		*			
ANR	503234	Identifier	i		503127	0					
ANR	503235	PrimaryExpression	8		503127	1					
ANR	503236	PrimaryExpression	2		503127	1					
ANR	503237	MultiplicativeExpression	tmp3 * c		503127	1		*			
ANR	503238	Identifier	tmp3		503127	0					
ANR	503239	Identifier	c		503127	1					
ANR	503240	ExpressionStatement	fw [ i * 8 + 3 ] = tmp4 * c	775:8:23482:23506	503127	7	True				
ANR	503241	AssignmentExpression	fw [ i * 8 + 3 ] = tmp4 * c		503127	0		=			
ANR	503242	ArrayIndexing	fw [ i * 8 + 3 ]		503127	0					
ANR	503243	Identifier	fw		503127	0					
ANR	503244	AdditiveExpression	i * 8 + 3		503127	1		+			
ANR	503245	MultiplicativeExpression	i * 8		503127	0		*			
ANR	503246	Identifier	i		503127	0					
ANR	503247	PrimaryExpression	8		503127	1					
ANR	503248	PrimaryExpression	3		503127	1					
ANR	503249	MultiplicativeExpression	tmp4 * c		503127	1		*			
ANR	503250	Identifier	tmp4		503127	0					
ANR	503251	Identifier	c		503127	1					
ANR	503252	ReturnType	static void		503127	1					
ANR	503253	Identifier	v4dwt_decode_step1		503127	2					
ANR	503254	ParameterList	"v4 * w , int count , const float c"		503127	3					
ANR	503255	Parameter	v4 * w	763:31:23111:23115	503127	0	True				
ANR	503256	ParameterType	v4 *		503127	0					
ANR	503257	Identifier	w		503127	1					
ANR	503258	Parameter	int count	763:38:23118:23126	503127	1	True				
ANR	503259	ParameterType	int		503127	0					
ANR	503260	Identifier	count		503127	1					
ANR	503261	Parameter	const float c	763:49:23129:23141	503127	2	True				
ANR	503262	ParameterType	const float		503127	0					
ANR	503263	Identifier	c		503127	1					
ANR	503264	CFGEntryNode	ENTRY		503127		True				
ANR	503265	CFGExitNode	EXIT		503127		True				
ANR	503266	Symbol	fw		503127						
ANR	503267	Symbol	c		503127						
ANR	503268	Symbol	* i		503127						
ANR	503269	Symbol	* fw		503127						
ANR	503270	Symbol	w		503127						
ANR	503271	Symbol	count		503127						
ANR	503272	Symbol	i		503127						
ANR	503273	Symbol	tmp3		503127						
ANR	503274	Symbol	tmp4		503127						
ANR	503275	Symbol	tmp1		503127						
ANR	503276	Symbol	tmp2		503127						
ANR	503277	Function	v4dwt_decode_step2	779:0:23517:24837							
ANR	503278	FunctionDef	"v4dwt_decode_step2 (v4 * l , v4 * w , int k , int m , float c)"		503277	0					
ANR	503279	CompoundStatement		780:0:23585:24837	503277	0					
ANR	503280	IdentifierDeclStatement	float * restrict fl = ( float * ) l ;	781:4:23591:23622	503277	0	True				
ANR	503281	IdentifierDecl	* restrict fl = ( float * ) l		503277	0					
ANR	503282	IdentifierDeclType	float * restrict		503277	0					
ANR	503283	Identifier	fl		503277	1					
ANR	503284	AssignmentExpression	* restrict fl = ( float * ) l		503277	2		=			
ANR	503285	Identifier	fl		503277	0					
ANR	503286	CastExpression	( float * ) l		503277	1					
ANR	503287	CastTarget	float *		503277	0					
ANR	503288	Identifier	l		503277	1					
ANR	503289	IdentifierDeclStatement	float * restrict fw = ( float * ) w ;	782:4:23628:23659	503277	1	True				
ANR	503290	IdentifierDecl	* restrict fw = ( float * ) w		503277	0					
ANR	503291	IdentifierDeclType	float * restrict		503277	0					
ANR	503292	Identifier	fw		503277	1					
ANR	503293	AssignmentExpression	* restrict fw = ( float * ) w		503277	2		=			
ANR	503294	Identifier	fw		503277	0					
ANR	503295	CastExpression	( float * ) w		503277	1					
ANR	503296	CastTarget	float *		503277	0					
ANR	503297	Identifier	w		503277	1					
ANR	503298	IdentifierDeclStatement	int i ;	783:4:23665:23670	503277	2	True				
ANR	503299	IdentifierDecl	i		503277	0					
ANR	503300	IdentifierDeclType	int		503277	0					
ANR	503301	Identifier	i		503277	1					
ANR	503302	ForStatement	for ( i = 0 ; i < m ; ++ i )		503277	3					
ANR	503303	ForInit	i = 0 ;	784:9:23681:23686	503277	0	True				
ANR	503304	AssignmentExpression	i = 0		503277	0		=			
ANR	503305	Identifier	i		503277	0					
ANR	503306	PrimaryExpression	0		503277	1					
ANR	503307	Condition	i < m	784:16:23688:23692	503277	1	True				
ANR	503308	RelationalExpression	i < m		503277	0		<			
ANR	503309	Identifier	i		503277	0					
ANR	503310	Identifier	m		503277	1					
ANR	503311	UnaryExpression	++ i	784:23:23695:23697	503277	2	True				
ANR	503312	IncDec	++		503277	0					
ANR	503313	Identifier	i		503277	1					
ANR	503314	CompoundStatement		17:8:458:478	503277	3					
ANR	503315	IdentifierDeclStatement	float tmp1_1 = fl [ 0 ] ;	785:8:23710:23730	503277	0	True				
ANR	503316	IdentifierDecl	tmp1_1 = fl [ 0 ]		503277	0					
ANR	503317	IdentifierDeclType	float		503277	0					
ANR	503318	Identifier	tmp1_1		503277	1					
ANR	503319	AssignmentExpression	tmp1_1 = fl [ 0 ]		503277	2		=			
ANR	503320	Identifier	tmp1_1		503277	0					
ANR	503321	ArrayIndexing	fl [ 0 ]		503277	1					
ANR	503322	Identifier	fl		503277	0					
ANR	503323	PrimaryExpression	0		503277	1					
ANR	503324	IdentifierDeclStatement	float tmp1_2 = fl [ 1 ] ;	786:8:23740:23760	503277	1	True				
ANR	503325	IdentifierDecl	tmp1_2 = fl [ 1 ]		503277	0					
ANR	503326	IdentifierDeclType	float		503277	0					
ANR	503327	Identifier	tmp1_2		503277	1					
ANR	503328	AssignmentExpression	tmp1_2 = fl [ 1 ]		503277	2		=			
ANR	503329	Identifier	tmp1_2		503277	0					
ANR	503330	ArrayIndexing	fl [ 1 ]		503277	1					
ANR	503331	Identifier	fl		503277	0					
ANR	503332	PrimaryExpression	1		503277	1					
ANR	503333	IdentifierDeclStatement	float tmp1_3 = fl [ 2 ] ;	787:8:23770:23790	503277	2	True				
ANR	503334	IdentifierDecl	tmp1_3 = fl [ 2 ]		503277	0					
ANR	503335	IdentifierDeclType	float		503277	0					
ANR	503336	Identifier	tmp1_3		503277	1					
ANR	503337	AssignmentExpression	tmp1_3 = fl [ 2 ]		503277	2		=			
ANR	503338	Identifier	tmp1_3		503277	0					
ANR	503339	ArrayIndexing	fl [ 2 ]		503277	1					
ANR	503340	Identifier	fl		503277	0					
ANR	503341	PrimaryExpression	2		503277	1					
ANR	503342	IdentifierDeclStatement	float tmp1_4 = fl [ 3 ] ;	788:8:23800:23820	503277	3	True				
ANR	503343	IdentifierDecl	tmp1_4 = fl [ 3 ]		503277	0					
ANR	503344	IdentifierDeclType	float		503277	0					
ANR	503345	Identifier	tmp1_4		503277	1					
ANR	503346	AssignmentExpression	tmp1_4 = fl [ 3 ]		503277	2		=			
ANR	503347	Identifier	tmp1_4		503277	0					
ANR	503348	ArrayIndexing	fl [ 3 ]		503277	1					
ANR	503349	Identifier	fl		503277	0					
ANR	503350	PrimaryExpression	3		503277	1					
ANR	503351	IdentifierDeclStatement	float tmp2_1 = fw [ - 4 ] ;	789:8:23830:23851	503277	4	True				
ANR	503352	IdentifierDecl	tmp2_1 = fw [ - 4 ]		503277	0					
ANR	503353	IdentifierDeclType	float		503277	0					
ANR	503354	Identifier	tmp2_1		503277	1					
ANR	503355	AssignmentExpression	tmp2_1 = fw [ - 4 ]		503277	2		=			
ANR	503356	Identifier	tmp2_1		503277	0					
ANR	503357	ArrayIndexing	fw [ - 4 ]		503277	1					
ANR	503358	Identifier	fw		503277	0					
ANR	503359	UnaryOperationExpression	- 4		503277	1					
ANR	503360	UnaryOperator	-		503277	0					
ANR	503361	PrimaryExpression	4		503277	1					
ANR	503362	IdentifierDeclStatement	float tmp2_2 = fw [ - 3 ] ;	790:8:23861:23882	503277	5	True				
ANR	503363	IdentifierDecl	tmp2_2 = fw [ - 3 ]		503277	0					
ANR	503364	IdentifierDeclType	float		503277	0					
ANR	503365	Identifier	tmp2_2		503277	1					
ANR	503366	AssignmentExpression	tmp2_2 = fw [ - 3 ]		503277	2		=			
ANR	503367	Identifier	tmp2_2		503277	0					
ANR	503368	ArrayIndexing	fw [ - 3 ]		503277	1					
ANR	503369	Identifier	fw		503277	0					
ANR	503370	UnaryOperationExpression	- 3		503277	1					
ANR	503371	UnaryOperator	-		503277	0					
ANR	503372	PrimaryExpression	3		503277	1					
ANR	503373	IdentifierDeclStatement	float tmp2_3 = fw [ - 2 ] ;	791:8:23892:23913	503277	6	True				
ANR	503374	IdentifierDecl	tmp2_3 = fw [ - 2 ]		503277	0					
ANR	503375	IdentifierDeclType	float		503277	0					
ANR	503376	Identifier	tmp2_3		503277	1					
ANR	503377	AssignmentExpression	tmp2_3 = fw [ - 2 ]		503277	2		=			
ANR	503378	Identifier	tmp2_3		503277	0					
ANR	503379	ArrayIndexing	fw [ - 2 ]		503277	1					
ANR	503380	Identifier	fw		503277	0					
ANR	503381	UnaryOperationExpression	- 2		503277	1					
ANR	503382	UnaryOperator	-		503277	0					
ANR	503383	PrimaryExpression	2		503277	1					
ANR	503384	IdentifierDeclStatement	float tmp2_4 = fw [ - 1 ] ;	792:8:23923:23944	503277	7	True				
ANR	503385	IdentifierDecl	tmp2_4 = fw [ - 1 ]		503277	0					
ANR	503386	IdentifierDeclType	float		503277	0					
ANR	503387	Identifier	tmp2_4		503277	1					
ANR	503388	AssignmentExpression	tmp2_4 = fw [ - 1 ]		503277	2		=			
ANR	503389	Identifier	tmp2_4		503277	0					
ANR	503390	ArrayIndexing	fw [ - 1 ]		503277	1					
ANR	503391	Identifier	fw		503277	0					
ANR	503392	UnaryOperationExpression	- 1		503277	1					
ANR	503393	UnaryOperator	-		503277	0					
ANR	503394	PrimaryExpression	1		503277	1					
ANR	503395	IdentifierDeclStatement	float tmp3_1 = fw [ 0 ] ;	793:8:23954:23974	503277	8	True				
ANR	503396	IdentifierDecl	tmp3_1 = fw [ 0 ]		503277	0					
ANR	503397	IdentifierDeclType	float		503277	0					
ANR	503398	Identifier	tmp3_1		503277	1					
ANR	503399	AssignmentExpression	tmp3_1 = fw [ 0 ]		503277	2		=			
ANR	503400	Identifier	tmp3_1		503277	0					
ANR	503401	ArrayIndexing	fw [ 0 ]		503277	1					
ANR	503402	Identifier	fw		503277	0					
ANR	503403	PrimaryExpression	0		503277	1					
ANR	503404	IdentifierDeclStatement	float tmp3_2 = fw [ 1 ] ;	794:8:23984:24004	503277	9	True				
ANR	503405	IdentifierDecl	tmp3_2 = fw [ 1 ]		503277	0					
ANR	503406	IdentifierDeclType	float		503277	0					
ANR	503407	Identifier	tmp3_2		503277	1					
ANR	503408	AssignmentExpression	tmp3_2 = fw [ 1 ]		503277	2		=			
ANR	503409	Identifier	tmp3_2		503277	0					
ANR	503410	ArrayIndexing	fw [ 1 ]		503277	1					
ANR	503411	Identifier	fw		503277	0					
ANR	503412	PrimaryExpression	1		503277	1					
ANR	503413	IdentifierDeclStatement	float tmp3_3 = fw [ 2 ] ;	795:8:24014:24034	503277	10	True				
ANR	503414	IdentifierDecl	tmp3_3 = fw [ 2 ]		503277	0					
ANR	503415	IdentifierDeclType	float		503277	0					
ANR	503416	Identifier	tmp3_3		503277	1					
ANR	503417	AssignmentExpression	tmp3_3 = fw [ 2 ]		503277	2		=			
ANR	503418	Identifier	tmp3_3		503277	0					
ANR	503419	ArrayIndexing	fw [ 2 ]		503277	1					
ANR	503420	Identifier	fw		503277	0					
ANR	503421	PrimaryExpression	2		503277	1					
ANR	503422	IdentifierDeclStatement	float tmp3_4 = fw [ 3 ] ;	796:8:24044:24064	503277	11	True				
ANR	503423	IdentifierDecl	tmp3_4 = fw [ 3 ]		503277	0					
ANR	503424	IdentifierDeclType	float		503277	0					
ANR	503425	Identifier	tmp3_4		503277	1					
ANR	503426	AssignmentExpression	tmp3_4 = fw [ 3 ]		503277	2		=			
ANR	503427	Identifier	tmp3_4		503277	0					
ANR	503428	ArrayIndexing	fw [ 3 ]		503277	1					
ANR	503429	Identifier	fw		503277	0					
ANR	503430	PrimaryExpression	3		503277	1					
ANR	503431	ExpressionStatement	fw [ - 4 ] = tmp2_1 + ( ( tmp1_1 + tmp3_1 ) * c )	797:8:24074:24115	503277	12	True				
ANR	503432	AssignmentExpression	fw [ - 4 ] = tmp2_1 + ( ( tmp1_1 + tmp3_1 ) * c )		503277	0		=			
ANR	503433	ArrayIndexing	fw [ - 4 ]		503277	0					
ANR	503434	Identifier	fw		503277	0					
ANR	503435	UnaryOperationExpression	- 4		503277	1					
ANR	503436	UnaryOperator	-		503277	0					
ANR	503437	PrimaryExpression	4		503277	1					
ANR	503438	AdditiveExpression	tmp2_1 + ( ( tmp1_1 + tmp3_1 ) * c )		503277	1		+			
ANR	503439	Identifier	tmp2_1		503277	0					
ANR	503440	MultiplicativeExpression	( tmp1_1 + tmp3_1 ) * c		503277	1		*			
ANR	503441	AdditiveExpression	tmp1_1 + tmp3_1		503277	0		+			
ANR	503442	Identifier	tmp1_1		503277	0					
ANR	503443	Identifier	tmp3_1		503277	1					
ANR	503444	Identifier	c		503277	1					
ANR	503445	ExpressionStatement	fw [ - 3 ] = tmp2_2 + ( ( tmp1_2 + tmp3_2 ) * c )	798:8:24125:24166	503277	13	True				
ANR	503446	AssignmentExpression	fw [ - 3 ] = tmp2_2 + ( ( tmp1_2 + tmp3_2 ) * c )		503277	0		=			
ANR	503447	ArrayIndexing	fw [ - 3 ]		503277	0					
ANR	503448	Identifier	fw		503277	0					
ANR	503449	UnaryOperationExpression	- 3		503277	1					
ANR	503450	UnaryOperator	-		503277	0					
ANR	503451	PrimaryExpression	3		503277	1					
ANR	503452	AdditiveExpression	tmp2_2 + ( ( tmp1_2 + tmp3_2 ) * c )		503277	1		+			
ANR	503453	Identifier	tmp2_2		503277	0					
ANR	503454	MultiplicativeExpression	( tmp1_2 + tmp3_2 ) * c		503277	1		*			
ANR	503455	AdditiveExpression	tmp1_2 + tmp3_2		503277	0		+			
ANR	503456	Identifier	tmp1_2		503277	0					
ANR	503457	Identifier	tmp3_2		503277	1					
ANR	503458	Identifier	c		503277	1					
ANR	503459	ExpressionStatement	fw [ - 2 ] = tmp2_3 + ( ( tmp1_3 + tmp3_3 ) * c )	799:8:24176:24217	503277	14	True				
ANR	503460	AssignmentExpression	fw [ - 2 ] = tmp2_3 + ( ( tmp1_3 + tmp3_3 ) * c )		503277	0		=			
ANR	503461	ArrayIndexing	fw [ - 2 ]		503277	0					
ANR	503462	Identifier	fw		503277	0					
ANR	503463	UnaryOperationExpression	- 2		503277	1					
ANR	503464	UnaryOperator	-		503277	0					
ANR	503465	PrimaryExpression	2		503277	1					
ANR	503466	AdditiveExpression	tmp2_3 + ( ( tmp1_3 + tmp3_3 ) * c )		503277	1		+			
ANR	503467	Identifier	tmp2_3		503277	0					
ANR	503468	MultiplicativeExpression	( tmp1_3 + tmp3_3 ) * c		503277	1		*			
ANR	503469	AdditiveExpression	tmp1_3 + tmp3_3		503277	0		+			
ANR	503470	Identifier	tmp1_3		503277	0					
ANR	503471	Identifier	tmp3_3		503277	1					
ANR	503472	Identifier	c		503277	1					
ANR	503473	ExpressionStatement	fw [ - 1 ] = tmp2_4 + ( ( tmp1_4 + tmp3_4 ) * c )	800:8:24227:24268	503277	15	True				
ANR	503474	AssignmentExpression	fw [ - 1 ] = tmp2_4 + ( ( tmp1_4 + tmp3_4 ) * c )		503277	0		=			
ANR	503475	ArrayIndexing	fw [ - 1 ]		503277	0					
ANR	503476	Identifier	fw		503277	0					
ANR	503477	UnaryOperationExpression	- 1		503277	1					
ANR	503478	UnaryOperator	-		503277	0					
ANR	503479	PrimaryExpression	1		503277	1					
ANR	503480	AdditiveExpression	tmp2_4 + ( ( tmp1_4 + tmp3_4 ) * c )		503277	1		+			
ANR	503481	Identifier	tmp2_4		503277	0					
ANR	503482	MultiplicativeExpression	( tmp1_4 + tmp3_4 ) * c		503277	1		*			
ANR	503483	AdditiveExpression	tmp1_4 + tmp3_4		503277	0		+			
ANR	503484	Identifier	tmp1_4		503277	0					
ANR	503485	Identifier	tmp3_4		503277	1					
ANR	503486	Identifier	c		503277	1					
ANR	503487	ExpressionStatement	fl = fw	801:8:24278:24285	503277	16	True				
ANR	503488	AssignmentExpression	fl = fw		503277	0		=			
ANR	503489	Identifier	fl		503277	0					
ANR	503490	Identifier	fw		503277	1					
ANR	503491	ExpressionStatement	fw += 8	802:8:24295:24302	503277	17	True				
ANR	503492	AssignmentExpression	fw += 8		503277	0		+=			
ANR	503493	Identifier	fw		503277	0					
ANR	503494	PrimaryExpression	8		503277	1					
ANR	503495	IfStatement	if ( m < k )		503277	4					
ANR	503496	Condition	m < k	804:8:24318:24322	503277	0	True				
ANR	503497	RelationalExpression	m < k		503277	0		<			
ANR	503498	Identifier	m		503277	0					
ANR	503499	Identifier	k		503277	1					
ANR	503500	CompoundStatement		29:8:803:811	503277	1					
ANR	503501	IdentifierDeclStatement	float c1 ;	805:8:24335:24343	503277	0	True				
ANR	503502	IdentifierDecl	c1		503277	0					
ANR	503503	IdentifierDeclType	float		503277	0					
ANR	503504	Identifier	c1		503277	1					
ANR	503505	IdentifierDeclStatement	float c2 ;	806:8:24353:24361	503277	1	True				
ANR	503506	IdentifierDecl	c2		503277	0					
ANR	503507	IdentifierDeclType	float		503277	0					
ANR	503508	Identifier	c2		503277	1					
ANR	503509	IdentifierDeclStatement	float c3 ;	807:8:24371:24379	503277	2	True				
ANR	503510	IdentifierDecl	c3		503277	0					
ANR	503511	IdentifierDeclType	float		503277	0					
ANR	503512	Identifier	c3		503277	1					
ANR	503513	IdentifierDeclStatement	float c4 ;	808:8:24389:24397	503277	3	True				
ANR	503514	IdentifierDecl	c4		503277	0					
ANR	503515	IdentifierDeclType	float		503277	0					
ANR	503516	Identifier	c4		503277	1					
ANR	503517	ExpressionStatement	c += c	809:8:24407:24413	503277	4	True				
ANR	503518	AssignmentExpression	c += c		503277	0		+=			
ANR	503519	Identifier	c		503277	0					
ANR	503520	Identifier	c		503277	1					
ANR	503521	ExpressionStatement	c1 = fl [ 0 ] * c	810:8:24423:24437	503277	5	True				
ANR	503522	AssignmentExpression	c1 = fl [ 0 ] * c		503277	0		=			
ANR	503523	Identifier	c1		503277	0					
ANR	503524	MultiplicativeExpression	fl [ 0 ] * c		503277	1		*			
ANR	503525	ArrayIndexing	fl [ 0 ]		503277	0					
ANR	503526	Identifier	fl		503277	0					
ANR	503527	PrimaryExpression	0		503277	1					
ANR	503528	Identifier	c		503277	1					
ANR	503529	ExpressionStatement	c2 = fl [ 1 ] * c	811:8:24447:24461	503277	6	True				
ANR	503530	AssignmentExpression	c2 = fl [ 1 ] * c		503277	0		=			
ANR	503531	Identifier	c2		503277	0					
ANR	503532	MultiplicativeExpression	fl [ 1 ] * c		503277	1		*			
ANR	503533	ArrayIndexing	fl [ 1 ]		503277	0					
ANR	503534	Identifier	fl		503277	0					
ANR	503535	PrimaryExpression	1		503277	1					
ANR	503536	Identifier	c		503277	1					
ANR	503537	ExpressionStatement	c3 = fl [ 2 ] * c	812:8:24471:24485	503277	7	True				
ANR	503538	AssignmentExpression	c3 = fl [ 2 ] * c		503277	0		=			
ANR	503539	Identifier	c3		503277	0					
ANR	503540	MultiplicativeExpression	fl [ 2 ] * c		503277	1		*			
ANR	503541	ArrayIndexing	fl [ 2 ]		503277	0					
ANR	503542	Identifier	fl		503277	0					
ANR	503543	PrimaryExpression	2		503277	1					
ANR	503544	Identifier	c		503277	1					
ANR	503545	ExpressionStatement	c4 = fl [ 3 ] * c	813:8:24495:24509	503277	8	True				
ANR	503546	AssignmentExpression	c4 = fl [ 3 ] * c		503277	0		=			
ANR	503547	Identifier	c4		503277	0					
ANR	503548	MultiplicativeExpression	fl [ 3 ] * c		503277	1		*			
ANR	503549	ArrayIndexing	fl [ 3 ]		503277	0					
ANR	503550	Identifier	fl		503277	0					
ANR	503551	PrimaryExpression	3		503277	1					
ANR	503552	Identifier	c		503277	1					
ANR	503553	ForStatement	for ( ; m < k ; ++ m )		503277	9					
ANR	503554	Condition	m < k	814:15:24526:24530	503277	0	True				
ANR	503555	RelationalExpression	m < k		503277	0		<			
ANR	503556	Identifier	m		503277	0					
ANR	503557	Identifier	k		503277	1					
ANR	503558	UnaryExpression	++ m	814:22:24533:24535	503277	1	True				
ANR	503559	IncDec	++		503277	0					
ANR	503560	Identifier	m		503277	1					
ANR	503561	CompoundStatement		39:12:1065:1084	503277	2					
ANR	503562	IdentifierDeclStatement	float tmp1 = fw [ - 4 ] ;	815:12:24552:24571	503277	0	True				
ANR	503563	IdentifierDecl	tmp1 = fw [ - 4 ]		503277	0					
ANR	503564	IdentifierDeclType	float		503277	0					
ANR	503565	Identifier	tmp1		503277	1					
ANR	503566	AssignmentExpression	tmp1 = fw [ - 4 ]		503277	2		=			
ANR	503567	Identifier	tmp1		503277	0					
ANR	503568	ArrayIndexing	fw [ - 4 ]		503277	1					
ANR	503569	Identifier	fw		503277	0					
ANR	503570	UnaryOperationExpression	- 4		503277	1					
ANR	503571	UnaryOperator	-		503277	0					
ANR	503572	PrimaryExpression	4		503277	1					
ANR	503573	IdentifierDeclStatement	float tmp2 = fw [ - 3 ] ;	816:12:24585:24604	503277	1	True				
ANR	503574	IdentifierDecl	tmp2 = fw [ - 3 ]		503277	0					
ANR	503575	IdentifierDeclType	float		503277	0					
ANR	503576	Identifier	tmp2		503277	1					
ANR	503577	AssignmentExpression	tmp2 = fw [ - 3 ]		503277	2		=			
ANR	503578	Identifier	tmp2		503277	0					
ANR	503579	ArrayIndexing	fw [ - 3 ]		503277	1					
ANR	503580	Identifier	fw		503277	0					
ANR	503581	UnaryOperationExpression	- 3		503277	1					
ANR	503582	UnaryOperator	-		503277	0					
ANR	503583	PrimaryExpression	3		503277	1					
ANR	503584	IdentifierDeclStatement	float tmp3 = fw [ - 2 ] ;	817:12:24618:24637	503277	2	True				
ANR	503585	IdentifierDecl	tmp3 = fw [ - 2 ]		503277	0					
ANR	503586	IdentifierDeclType	float		503277	0					
ANR	503587	Identifier	tmp3		503277	1					
ANR	503588	AssignmentExpression	tmp3 = fw [ - 2 ]		503277	2		=			
ANR	503589	Identifier	tmp3		503277	0					
ANR	503590	ArrayIndexing	fw [ - 2 ]		503277	1					
ANR	503591	Identifier	fw		503277	0					
ANR	503592	UnaryOperationExpression	- 2		503277	1					
ANR	503593	UnaryOperator	-		503277	0					
ANR	503594	PrimaryExpression	2		503277	1					
ANR	503595	IdentifierDeclStatement	float tmp4 = fw [ - 1 ] ;	818:12:24651:24670	503277	3	True				
ANR	503596	IdentifierDecl	tmp4 = fw [ - 1 ]		503277	0					
ANR	503597	IdentifierDeclType	float		503277	0					
ANR	503598	Identifier	tmp4		503277	1					
ANR	503599	AssignmentExpression	tmp4 = fw [ - 1 ]		503277	2		=			
ANR	503600	Identifier	tmp4		503277	0					
ANR	503601	ArrayIndexing	fw [ - 1 ]		503277	1					
ANR	503602	Identifier	fw		503277	0					
ANR	503603	UnaryOperationExpression	- 1		503277	1					
ANR	503604	UnaryOperator	-		503277	0					
ANR	503605	PrimaryExpression	1		503277	1					
ANR	503606	ExpressionStatement	fw [ - 4 ] = tmp1 + c1	819:12:24684:24702	503277	4	True				
ANR	503607	AssignmentExpression	fw [ - 4 ] = tmp1 + c1		503277	0		=			
ANR	503608	ArrayIndexing	fw [ - 4 ]		503277	0					
ANR	503609	Identifier	fw		503277	0					
ANR	503610	UnaryOperationExpression	- 4		503277	1					
ANR	503611	UnaryOperator	-		503277	0					
ANR	503612	PrimaryExpression	4		503277	1					
ANR	503613	AdditiveExpression	tmp1 + c1		503277	1		+			
ANR	503614	Identifier	tmp1		503277	0					
ANR	503615	Identifier	c1		503277	1					
ANR	503616	ExpressionStatement	fw [ - 3 ] = tmp2 + c2	820:12:24716:24734	503277	5	True				
ANR	503617	AssignmentExpression	fw [ - 3 ] = tmp2 + c2		503277	0		=			
ANR	503618	ArrayIndexing	fw [ - 3 ]		503277	0					
ANR	503619	Identifier	fw		503277	0					
ANR	503620	UnaryOperationExpression	- 3		503277	1					
ANR	503621	UnaryOperator	-		503277	0					
ANR	503622	PrimaryExpression	3		503277	1					
ANR	503623	AdditiveExpression	tmp2 + c2		503277	1		+			
ANR	503624	Identifier	tmp2		503277	0					
ANR	503625	Identifier	c2		503277	1					
ANR	503626	ExpressionStatement	fw [ - 2 ] = tmp3 + c3	821:12:24748:24766	503277	6	True				
ANR	503627	AssignmentExpression	fw [ - 2 ] = tmp3 + c3		503277	0		=			
ANR	503628	ArrayIndexing	fw [ - 2 ]		503277	0					
ANR	503629	Identifier	fw		503277	0					
ANR	503630	UnaryOperationExpression	- 2		503277	1					
ANR	503631	UnaryOperator	-		503277	0					
ANR	503632	PrimaryExpression	2		503277	1					
ANR	503633	AdditiveExpression	tmp3 + c3		503277	1		+			
ANR	503634	Identifier	tmp3		503277	0					
ANR	503635	Identifier	c3		503277	1					
ANR	503636	ExpressionStatement	fw [ - 1 ] = tmp4 + c4	822:12:24780:24798	503277	7	True				
ANR	503637	AssignmentExpression	fw [ - 1 ] = tmp4 + c4		503277	0		=			
ANR	503638	ArrayIndexing	fw [ - 1 ]		503277	0					
ANR	503639	Identifier	fw		503277	0					
ANR	503640	UnaryOperationExpression	- 1		503277	1					
ANR	503641	UnaryOperator	-		503277	0					
ANR	503642	PrimaryExpression	1		503277	1					
ANR	503643	AdditiveExpression	tmp4 + c4		503277	1		+			
ANR	503644	Identifier	tmp4		503277	0					
ANR	503645	Identifier	c4		503277	1					
ANR	503646	ExpressionStatement	fw += 8	823:12:24812:24819	503277	8	True				
ANR	503647	AssignmentExpression	fw += 8		503277	0		+=			
ANR	503648	Identifier	fw		503277	0					
ANR	503649	PrimaryExpression	8		503277	1					
ANR	503650	ReturnType	static void		503277	1					
ANR	503651	Identifier	v4dwt_decode_step2		503277	2					
ANR	503652	ParameterList	"v4 * l , v4 * w , int k , int m , float c"		503277	3					
ANR	503653	Parameter	v4 * l	779:31:23548:23552	503277	0	True				
ANR	503654	ParameterType	v4 *		503277	0					
ANR	503655	Identifier	l		503277	1					
ANR	503656	Parameter	v4 * w	779:38:23555:23559	503277	1	True				
ANR	503657	ParameterType	v4 *		503277	0					
ANR	503658	Identifier	w		503277	1					
ANR	503659	Parameter	int k	779:45:23562:23566	503277	2	True				
ANR	503660	ParameterType	int		503277	0					
ANR	503661	Identifier	k		503277	1					
ANR	503662	Parameter	int m	779:52:23569:23573	503277	3	True				
ANR	503663	ParameterType	int		503277	0					
ANR	503664	Identifier	m		503277	1					
ANR	503665	Parameter	float c	779:59:23576:23582	503277	4	True				
ANR	503666	ParameterType	float		503277	0					
ANR	503667	Identifier	c		503277	1					
ANR	503668	CFGEntryNode	ENTRY		503277		True				
ANR	503669	CFGExitNode	EXIT		503277		True				
ANR	503670	Symbol	fl		503277						
ANR	503671	Symbol	tmp1_2		503277						
ANR	503672	Symbol	tmp2_1		503277						
ANR	503673	Symbol	tmp1_1		503277						
ANR	503674	Symbol	tmp1_4		503277						
ANR	503675	Symbol	tmp2_3		503277						
ANR	503676	Symbol	tmp3_2		503277						
ANR	503677	Symbol	tmp3		503277						
ANR	503678	Symbol	tmp1_3		503277						
ANR	503679	Symbol	tmp2_2		503277						
ANR	503680	Symbol	tmp3_1		503277						
ANR	503681	Symbol	tmp4		503277						
ANR	503682	Symbol	tmp1		503277						
ANR	503683	Symbol	tmp2		503277						
ANR	503684	Symbol	fw		503277						
ANR	503685	Symbol	* fw		503277						
ANR	503686	Symbol	tmp3_4		503277						
ANR	503687	Symbol	tmp2_4		503277						
ANR	503688	Symbol	tmp3_3		503277						
ANR	503689	Symbol	c		503277						
ANR	503690	Symbol	i		503277						
ANR	503691	Symbol	k		503277						
ANR	503692	Symbol	l		503277						
ANR	503693	Symbol	m		503277						
ANR	503694	Symbol	c1		503277						
ANR	503695	Symbol	* fl		503277						
ANR	503696	Symbol	c2		503277						
ANR	503697	Symbol	c3		503277						
ANR	503698	Symbol	c4		503277						
ANR	503699	Symbol	w		503277						
ANR	503700	Function	v4dwt_decode	833:0:24980:26780							
ANR	503701	FunctionDef	v4dwt_decode (v4dwt_t * restrict dwt)		503700	0					
ANR	503702	CompoundStatement		834:0:25028:26780	503700	0					
ANR	503703	IdentifierDeclStatement	"int a , b ;"	835:4:25034:25042	503700	0	True				
ANR	503704	IdentifierDecl	a		503700	0					
ANR	503705	IdentifierDeclType	int		503700	0					
ANR	503706	Identifier	a		503700	1					
ANR	503707	IdentifierDecl	b		503700	1					
ANR	503708	IdentifierDeclType	int		503700	0					
ANR	503709	Identifier	b		503700	1					
ANR	503710	IfStatement	if ( dwt -> cas == 0 )		503700	1					
ANR	503711	Condition	dwt -> cas == 0	836:8:25052:25064	503700	0	True				
ANR	503712	EqualityExpression	dwt -> cas == 0		503700	0		==			
ANR	503713	PtrMemberAccess	dwt -> cas		503700	0					
ANR	503714	Identifier	dwt		503700	0					
ANR	503715	Identifier	cas		503700	1					
ANR	503716	PrimaryExpression	0		503700	1					
ANR	503717	CompoundStatement		3:23:38:38	503700	1					
ANR	503718	IfStatement	if ( ! ( ( dwt -> dn > 0 ) || ( dwt -> sn > 1 ) ) )		503700	0					
ANR	503719	Condition	! ( ( dwt -> dn > 0 ) || ( dwt -> sn > 1 ) )	837:12:25081:25113	503700	0	True				
ANR	503720	UnaryOperationExpression	! ( ( dwt -> dn > 0 ) || ( dwt -> sn > 1 ) )		503700	0					
ANR	503721	UnaryOperator	!		503700	0					
ANR	503722	OrExpression	( dwt -> dn > 0 ) || ( dwt -> sn > 1 )		503700	1		||			
ANR	503723	RelationalExpression	dwt -> dn > 0		503700	0		>			
ANR	503724	PtrMemberAccess	dwt -> dn		503700	0					
ANR	503725	Identifier	dwt		503700	0					
ANR	503726	Identifier	dn		503700	1					
ANR	503727	PrimaryExpression	0		503700	1					
ANR	503728	RelationalExpression	dwt -> sn > 1		503700	1		>			
ANR	503729	PtrMemberAccess	dwt -> sn		503700	0					
ANR	503730	Identifier	dwt		503700	0					
ANR	503731	Identifier	sn		503700	1					
ANR	503732	PrimaryExpression	1		503700	1					
ANR	503733	CompoundStatement		4:47:87:87	503700	1					
ANR	503734	ReturnStatement	return ;	838:12:25130:25136	503700	0	True				
ANR	503735	ExpressionStatement	a = 0	840:8:25156:25161	503700	1	True				
ANR	503736	AssignmentExpression	a = 0		503700	0		=			
ANR	503737	Identifier	a		503700	0					
ANR	503738	PrimaryExpression	0		503700	1					
ANR	503739	ExpressionStatement	b = 1	841:8:25171:25176	503700	2	True				
ANR	503740	AssignmentExpression	b = 1		503700	0		=			
ANR	503741	Identifier	b		503700	0					
ANR	503742	PrimaryExpression	1		503700	1					
ANR	503743	ElseStatement	else		503700	0					
ANR	503744	CompoundStatement		9:11:160:160	503700	0					
ANR	503745	IfStatement	if ( ! ( ( dwt -> sn > 0 ) || ( dwt -> dn > 1 ) ) )		503700	0					
ANR	503746	Condition	! ( ( dwt -> sn > 0 ) || ( dwt -> dn > 1 ) )	843:12:25203:25235	503700	0	True				
ANR	503747	UnaryOperationExpression	! ( ( dwt -> sn > 0 ) || ( dwt -> dn > 1 ) )		503700	0					
ANR	503748	UnaryOperator	!		503700	0					
ANR	503749	OrExpression	( dwt -> sn > 0 ) || ( dwt -> dn > 1 )		503700	1		||			
ANR	503750	RelationalExpression	dwt -> sn > 0		503700	0		>			
ANR	503751	PtrMemberAccess	dwt -> sn		503700	0					
ANR	503752	Identifier	dwt		503700	0					
ANR	503753	Identifier	sn		503700	1					
ANR	503754	PrimaryExpression	0		503700	1					
ANR	503755	RelationalExpression	dwt -> dn > 1		503700	1		>			
ANR	503756	PtrMemberAccess	dwt -> dn		503700	0					
ANR	503757	Identifier	dwt		503700	0					
ANR	503758	Identifier	dn		503700	1					
ANR	503759	PrimaryExpression	1		503700	1					
ANR	503760	CompoundStatement		10:47:209:209	503700	1					
ANR	503761	ReturnStatement	return ;	844:12:25252:25258	503700	0	True				
ANR	503762	ExpressionStatement	a = 1	846:8:25278:25283	503700	1	True				
ANR	503763	AssignmentExpression	a = 1		503700	0		=			
ANR	503764	Identifier	a		503700	0					
ANR	503765	PrimaryExpression	1		503700	1					
ANR	503766	ExpressionStatement	b = 0	847:8:25293:25298	503700	2	True				
ANR	503767	AssignmentExpression	b = 0		503700	0		=			
ANR	503768	Identifier	b		503700	0					
ANR	503769	PrimaryExpression	0		503700	1					
ANR	503770	ExpressionStatement	"v4dwt_decode_step1_sse ( dwt -> wavelet + a , dwt -> sn , _mm_set1_ps ( K ) )"	850:4:25325:25390	503700	2	True				
ANR	503771	CallExpression	"v4dwt_decode_step1_sse ( dwt -> wavelet + a , dwt -> sn , _mm_set1_ps ( K ) )"		503700	0					
ANR	503772	Callee	v4dwt_decode_step1_sse		503700	0					
ANR	503773	Identifier	v4dwt_decode_step1_sse		503700	0					
ANR	503774	ArgumentList	dwt -> wavelet + a		503700	1					
ANR	503775	Argument	dwt -> wavelet + a		503700	0					
ANR	503776	AdditiveExpression	dwt -> wavelet + a		503700	0		+			
ANR	503777	PtrMemberAccess	dwt -> wavelet		503700	0					
ANR	503778	Identifier	dwt		503700	0					
ANR	503779	Identifier	wavelet		503700	1					
ANR	503780	Identifier	a		503700	1					
ANR	503781	Argument	dwt -> sn		503700	1					
ANR	503782	PtrMemberAccess	dwt -> sn		503700	0					
ANR	503783	Identifier	dwt		503700	0					
ANR	503784	Identifier	sn		503700	1					
ANR	503785	Argument	_mm_set1_ps ( K )		503700	2					
ANR	503786	CallExpression	_mm_set1_ps ( K )		503700	0					
ANR	503787	Callee	_mm_set1_ps		503700	0					
ANR	503788	Identifier	_mm_set1_ps		503700	0					
ANR	503789	ArgumentList	K		503700	1					
ANR	503790	Argument	K		503700	0					
ANR	503791	Identifier	K		503700	0					
ANR	503792	ExpressionStatement	"v4dwt_decode_step1_sse ( dwt -> wavelet + b , dwt -> dn , _mm_set1_ps ( c13318 ) )"	851:4:25396:25466	503700	3	True				
ANR	503793	CallExpression	"v4dwt_decode_step1_sse ( dwt -> wavelet + b , dwt -> dn , _mm_set1_ps ( c13318 ) )"		503700	0					
ANR	503794	Callee	v4dwt_decode_step1_sse		503700	0					
ANR	503795	Identifier	v4dwt_decode_step1_sse		503700	0					
ANR	503796	ArgumentList	dwt -> wavelet + b		503700	1					
ANR	503797	Argument	dwt -> wavelet + b		503700	0					
ANR	503798	AdditiveExpression	dwt -> wavelet + b		503700	0		+			
ANR	503799	PtrMemberAccess	dwt -> wavelet		503700	0					
ANR	503800	Identifier	dwt		503700	0					
ANR	503801	Identifier	wavelet		503700	1					
ANR	503802	Identifier	b		503700	1					
ANR	503803	Argument	dwt -> dn		503700	1					
ANR	503804	PtrMemberAccess	dwt -> dn		503700	0					
ANR	503805	Identifier	dwt		503700	0					
ANR	503806	Identifier	dn		503700	1					
ANR	503807	Argument	_mm_set1_ps ( c13318 )		503700	2					
ANR	503808	CallExpression	_mm_set1_ps ( c13318 )		503700	0					
ANR	503809	Callee	_mm_set1_ps		503700	0					
ANR	503810	Identifier	_mm_set1_ps		503700	0					
ANR	503811	ArgumentList	c13318		503700	1					
ANR	503812	Argument	c13318		503700	0					
ANR	503813	Identifier	c13318		503700	0					
ANR	503814	ExpressionStatement	"v4dwt_decode_step2_sse ( dwt -> wavelet + b , dwt -> wavelet + a + 1 , dwt -> sn , int_min ( dwt -> sn , dwt -> dn - a ) , _mm_set1_ps ( dwt_delta ) )"	852:4:25472:25625	503700	4	True				
ANR	503815	CallExpression	"v4dwt_decode_step2_sse ( dwt -> wavelet + b , dwt -> wavelet + a + 1 , dwt -> sn , int_min ( dwt -> sn , dwt -> dn - a ) , _mm_set1_ps ( dwt_delta ) )"		503700	0					
ANR	503816	Callee	v4dwt_decode_step2_sse		503700	0					
ANR	503817	Identifier	v4dwt_decode_step2_sse		503700	0					
ANR	503818	ArgumentList	dwt -> wavelet + b		503700	1					
ANR	503819	Argument	dwt -> wavelet + b		503700	0					
ANR	503820	AdditiveExpression	dwt -> wavelet + b		503700	0		+			
ANR	503821	PtrMemberAccess	dwt -> wavelet		503700	0					
ANR	503822	Identifier	dwt		503700	0					
ANR	503823	Identifier	wavelet		503700	1					
ANR	503824	Identifier	b		503700	1					
ANR	503825	Argument	dwt -> wavelet + a + 1		503700	1					
ANR	503826	AdditiveExpression	dwt -> wavelet + a + 1		503700	0		+			
ANR	503827	PtrMemberAccess	dwt -> wavelet		503700	0					
ANR	503828	Identifier	dwt		503700	0					
ANR	503829	Identifier	wavelet		503700	1					
ANR	503830	AdditiveExpression	a + 1		503700	1		+			
ANR	503831	Identifier	a		503700	0					
ANR	503832	PrimaryExpression	1		503700	1					
ANR	503833	Argument	dwt -> sn		503700	2					
ANR	503834	PtrMemberAccess	dwt -> sn		503700	0					
ANR	503835	Identifier	dwt		503700	0					
ANR	503836	Identifier	sn		503700	1					
ANR	503837	Argument	"int_min ( dwt -> sn , dwt -> dn - a )"		503700	3					
ANR	503838	CallExpression	"int_min ( dwt -> sn , dwt -> dn - a )"		503700	0					
ANR	503839	Callee	int_min		503700	0					
ANR	503840	Identifier	int_min		503700	0					
ANR	503841	ArgumentList	dwt -> sn		503700	1					
ANR	503842	Argument	dwt -> sn		503700	0					
ANR	503843	PtrMemberAccess	dwt -> sn		503700	0					
ANR	503844	Identifier	dwt		503700	0					
ANR	503845	Identifier	sn		503700	1					
ANR	503846	Argument	dwt -> dn - a		503700	1					
ANR	503847	AdditiveExpression	dwt -> dn - a		503700	0		-			
ANR	503848	PtrMemberAccess	dwt -> dn		503700	0					
ANR	503849	Identifier	dwt		503700	0					
ANR	503850	Identifier	dn		503700	1					
ANR	503851	Identifier	a		503700	1					
ANR	503852	Argument	_mm_set1_ps ( dwt_delta )		503700	4					
ANR	503853	CallExpression	_mm_set1_ps ( dwt_delta )		503700	0					
ANR	503854	Callee	_mm_set1_ps		503700	0					
ANR	503855	Identifier	_mm_set1_ps		503700	0					
ANR	503856	ArgumentList	dwt_delta		503700	1					
ANR	503857	Argument	dwt_delta		503700	0					
ANR	503858	Identifier	dwt_delta		503700	0					
ANR	503859	ExpressionStatement	"v4dwt_decode_step2_sse ( dwt -> wavelet + a , dwt -> wavelet + b + 1 , dwt -> dn , int_min ( dwt -> dn , dwt -> sn - b ) , _mm_set1_ps ( dwt_gamma ) )"	854:4:25631:25784	503700	5	True				
ANR	503860	CallExpression	"v4dwt_decode_step2_sse ( dwt -> wavelet + a , dwt -> wavelet + b + 1 , dwt -> dn , int_min ( dwt -> dn , dwt -> sn - b ) , _mm_set1_ps ( dwt_gamma ) )"		503700	0					
ANR	503861	Callee	v4dwt_decode_step2_sse		503700	0					
ANR	503862	Identifier	v4dwt_decode_step2_sse		503700	0					
ANR	503863	ArgumentList	dwt -> wavelet + a		503700	1					
ANR	503864	Argument	dwt -> wavelet + a		503700	0					
ANR	503865	AdditiveExpression	dwt -> wavelet + a		503700	0		+			
ANR	503866	PtrMemberAccess	dwt -> wavelet		503700	0					
ANR	503867	Identifier	dwt		503700	0					
ANR	503868	Identifier	wavelet		503700	1					
ANR	503869	Identifier	a		503700	1					
ANR	503870	Argument	dwt -> wavelet + b + 1		503700	1					
ANR	503871	AdditiveExpression	dwt -> wavelet + b + 1		503700	0		+			
ANR	503872	PtrMemberAccess	dwt -> wavelet		503700	0					
ANR	503873	Identifier	dwt		503700	0					
ANR	503874	Identifier	wavelet		503700	1					
ANR	503875	AdditiveExpression	b + 1		503700	1		+			
ANR	503876	Identifier	b		503700	0					
ANR	503877	PrimaryExpression	1		503700	1					
ANR	503878	Argument	dwt -> dn		503700	2					
ANR	503879	PtrMemberAccess	dwt -> dn		503700	0					
ANR	503880	Identifier	dwt		503700	0					
ANR	503881	Identifier	dn		503700	1					
ANR	503882	Argument	"int_min ( dwt -> dn , dwt -> sn - b )"		503700	3					
ANR	503883	CallExpression	"int_min ( dwt -> dn , dwt -> sn - b )"		503700	0					
ANR	503884	Callee	int_min		503700	0					
ANR	503885	Identifier	int_min		503700	0					
ANR	503886	ArgumentList	dwt -> dn		503700	1					
ANR	503887	Argument	dwt -> dn		503700	0					
ANR	503888	PtrMemberAccess	dwt -> dn		503700	0					
ANR	503889	Identifier	dwt		503700	0					
ANR	503890	Identifier	dn		503700	1					
ANR	503891	Argument	dwt -> sn - b		503700	1					
ANR	503892	AdditiveExpression	dwt -> sn - b		503700	0		-			
ANR	503893	PtrMemberAccess	dwt -> sn		503700	0					
ANR	503894	Identifier	dwt		503700	0					
ANR	503895	Identifier	sn		503700	1					
ANR	503896	Identifier	b		503700	1					
ANR	503897	Argument	_mm_set1_ps ( dwt_gamma )		503700	4					
ANR	503898	CallExpression	_mm_set1_ps ( dwt_gamma )		503700	0					
ANR	503899	Callee	_mm_set1_ps		503700	0					
ANR	503900	Identifier	_mm_set1_ps		503700	0					
ANR	503901	ArgumentList	dwt_gamma		503700	1					
ANR	503902	Argument	dwt_gamma		503700	0					
ANR	503903	Identifier	dwt_gamma		503700	0					
ANR	503904	ExpressionStatement	"v4dwt_decode_step2_sse ( dwt -> wavelet + b , dwt -> wavelet + a + 1 , dwt -> sn , int_min ( dwt -> sn , dwt -> dn - a ) , _mm_set1_ps ( dwt_beta ) )"	856:4:25790:25942	503700	6	True				
ANR	503905	CallExpression	"v4dwt_decode_step2_sse ( dwt -> wavelet + b , dwt -> wavelet + a + 1 , dwt -> sn , int_min ( dwt -> sn , dwt -> dn - a ) , _mm_set1_ps ( dwt_beta ) )"		503700	0					
ANR	503906	Callee	v4dwt_decode_step2_sse		503700	0					
ANR	503907	Identifier	v4dwt_decode_step2_sse		503700	0					
ANR	503908	ArgumentList	dwt -> wavelet + b		503700	1					
ANR	503909	Argument	dwt -> wavelet + b		503700	0					
ANR	503910	AdditiveExpression	dwt -> wavelet + b		503700	0		+			
ANR	503911	PtrMemberAccess	dwt -> wavelet		503700	0					
ANR	503912	Identifier	dwt		503700	0					
ANR	503913	Identifier	wavelet		503700	1					
ANR	503914	Identifier	b		503700	1					
ANR	503915	Argument	dwt -> wavelet + a + 1		503700	1					
ANR	503916	AdditiveExpression	dwt -> wavelet + a + 1		503700	0		+			
ANR	503917	PtrMemberAccess	dwt -> wavelet		503700	0					
ANR	503918	Identifier	dwt		503700	0					
ANR	503919	Identifier	wavelet		503700	1					
ANR	503920	AdditiveExpression	a + 1		503700	1		+			
ANR	503921	Identifier	a		503700	0					
ANR	503922	PrimaryExpression	1		503700	1					
ANR	503923	Argument	dwt -> sn		503700	2					
ANR	503924	PtrMemberAccess	dwt -> sn		503700	0					
ANR	503925	Identifier	dwt		503700	0					
ANR	503926	Identifier	sn		503700	1					
ANR	503927	Argument	"int_min ( dwt -> sn , dwt -> dn - a )"		503700	3					
ANR	503928	CallExpression	"int_min ( dwt -> sn , dwt -> dn - a )"		503700	0					
ANR	503929	Callee	int_min		503700	0					
ANR	503930	Identifier	int_min		503700	0					
ANR	503931	ArgumentList	dwt -> sn		503700	1					
ANR	503932	Argument	dwt -> sn		503700	0					
ANR	503933	PtrMemberAccess	dwt -> sn		503700	0					
ANR	503934	Identifier	dwt		503700	0					
ANR	503935	Identifier	sn		503700	1					
ANR	503936	Argument	dwt -> dn - a		503700	1					
ANR	503937	AdditiveExpression	dwt -> dn - a		503700	0		-			
ANR	503938	PtrMemberAccess	dwt -> dn		503700	0					
ANR	503939	Identifier	dwt		503700	0					
ANR	503940	Identifier	dn		503700	1					
ANR	503941	Identifier	a		503700	1					
ANR	503942	Argument	_mm_set1_ps ( dwt_beta )		503700	4					
ANR	503943	CallExpression	_mm_set1_ps ( dwt_beta )		503700	0					
ANR	503944	Callee	_mm_set1_ps		503700	0					
ANR	503945	Identifier	_mm_set1_ps		503700	0					
ANR	503946	ArgumentList	dwt_beta		503700	1					
ANR	503947	Argument	dwt_beta		503700	0					
ANR	503948	Identifier	dwt_beta		503700	0					
ANR	503949	ExpressionStatement	"v4dwt_decode_step2_sse ( dwt -> wavelet + a , dwt -> wavelet + b + 1 , dwt -> dn , int_min ( dwt -> dn , dwt -> sn - b ) , _mm_set1_ps ( dwt_alpha ) )"	858:4:25948:26101	503700	7	True				
ANR	503950	CallExpression	"v4dwt_decode_step2_sse ( dwt -> wavelet + a , dwt -> wavelet + b + 1 , dwt -> dn , int_min ( dwt -> dn , dwt -> sn - b ) , _mm_set1_ps ( dwt_alpha ) )"		503700	0					
ANR	503951	Callee	v4dwt_decode_step2_sse		503700	0					
ANR	503952	Identifier	v4dwt_decode_step2_sse		503700	0					
ANR	503953	ArgumentList	dwt -> wavelet + a		503700	1					
ANR	503954	Argument	dwt -> wavelet + a		503700	0					
ANR	503955	AdditiveExpression	dwt -> wavelet + a		503700	0		+			
ANR	503956	PtrMemberAccess	dwt -> wavelet		503700	0					
ANR	503957	Identifier	dwt		503700	0					
ANR	503958	Identifier	wavelet		503700	1					
ANR	503959	Identifier	a		503700	1					
ANR	503960	Argument	dwt -> wavelet + b + 1		503700	1					
ANR	503961	AdditiveExpression	dwt -> wavelet + b + 1		503700	0		+			
ANR	503962	PtrMemberAccess	dwt -> wavelet		503700	0					
ANR	503963	Identifier	dwt		503700	0					
ANR	503964	Identifier	wavelet		503700	1					
ANR	503965	AdditiveExpression	b + 1		503700	1		+			
ANR	503966	Identifier	b		503700	0					
ANR	503967	PrimaryExpression	1		503700	1					
ANR	503968	Argument	dwt -> dn		503700	2					
ANR	503969	PtrMemberAccess	dwt -> dn		503700	0					
ANR	503970	Identifier	dwt		503700	0					
ANR	503971	Identifier	dn		503700	1					
ANR	503972	Argument	"int_min ( dwt -> dn , dwt -> sn - b )"		503700	3					
ANR	503973	CallExpression	"int_min ( dwt -> dn , dwt -> sn - b )"		503700	0					
ANR	503974	Callee	int_min		503700	0					
ANR	503975	Identifier	int_min		503700	0					
ANR	503976	ArgumentList	dwt -> dn		503700	1					
ANR	503977	Argument	dwt -> dn		503700	0					
ANR	503978	PtrMemberAccess	dwt -> dn		503700	0					
ANR	503979	Identifier	dwt		503700	0					
ANR	503980	Identifier	dn		503700	1					
ANR	503981	Argument	dwt -> sn - b		503700	1					
ANR	503982	AdditiveExpression	dwt -> sn - b		503700	0		-			
ANR	503983	PtrMemberAccess	dwt -> sn		503700	0					
ANR	503984	Identifier	dwt		503700	0					
ANR	503985	Identifier	sn		503700	1					
ANR	503986	Identifier	b		503700	1					
ANR	503987	Argument	_mm_set1_ps ( dwt_alpha )		503700	4					
ANR	503988	CallExpression	_mm_set1_ps ( dwt_alpha )		503700	0					
ANR	503989	Callee	_mm_set1_ps		503700	0					
ANR	503990	Identifier	_mm_set1_ps		503700	0					
ANR	503991	ArgumentList	dwt_alpha		503700	1					
ANR	503992	Argument	dwt_alpha		503700	0					
ANR	503993	Identifier	dwt_alpha		503700	0					
ANR	503994	ReturnType	static void		503700	1					
ANR	503995	Identifier	v4dwt_decode		503700	2					
ANR	503996	ParameterList	v4dwt_t * restrict dwt		503700	3					
ANR	503997	Parameter	v4dwt_t * restrict dwt	833:25:25005:25025	503700	0	True				
ANR	503998	ParameterType	v4dwt_t * restrict		503700	0					
ANR	503999	Identifier	dwt		503700	1					
ANR	504000	CFGEntryNode	ENTRY		503700		True				
ANR	504001	CFGExitNode	EXIT		503700		True				
ANR	504002	Symbol	dwt		503700						
ANR	504003	Symbol	dwt -> sn		503700						
ANR	504004	Symbol	dwt_alpha		503700						
ANR	504005	Symbol	a		503700						
ANR	504006	Symbol	b		503700						
ANR	504007	Symbol	_mm_set1_ps		503700						
ANR	504008	Symbol	dwt_gamma		503700						
ANR	504009	Symbol	dwt -> wavelet		503700						
ANR	504010	Symbol	K		503700						
ANR	504011	Symbol	c13318		503700						
ANR	504012	Symbol	int_min		503700						
ANR	504013	Symbol	dwt -> dn		503700						
ANR	504014	Symbol	* dwt		503700						
ANR	504015	Symbol	dwt -> cas		503700						
ANR	504016	Symbol	dwt_beta		503700						
ANR	504017	Symbol	dwt_delta		503700						
ANR	504018	Function	dwt_decode_real	877:0:26915:29504							
ANR	504019	FunctionDef	"dwt_decode_real (opj_tcd_tilecomp_t * restrict tilec , int numres)"		504018	0					
ANR	504020	CompoundStatement		878:0:26984:29504	504018	0					
ANR	504021	IdentifierDeclStatement	v4dwt_t h ;	879:4:26990:26999	504018	0	True				
ANR	504022	IdentifierDecl	h		504018	0					
ANR	504023	IdentifierDeclType	v4dwt_t		504018	0					
ANR	504024	Identifier	h		504018	1					
ANR	504025	IdentifierDeclStatement	v4dwt_t v ;	880:4:27005:27014	504018	1	True				
ANR	504026	IdentifierDecl	v		504018	0					
ANR	504027	IdentifierDeclType	v4dwt_t		504018	0					
ANR	504028	Identifier	v		504018	1					
ANR	504029	IdentifierDeclStatement	opj_tcd_resolution_t * res = tilec -> resolutions ;	882:4:27021:27067	504018	2	True				
ANR	504030	IdentifierDecl	* res = tilec -> resolutions		504018	0					
ANR	504031	IdentifierDeclType	opj_tcd_resolution_t *		504018	0					
ANR	504032	Identifier	res		504018	1					
ANR	504033	AssignmentExpression	* res = tilec -> resolutions		504018	2		=			
ANR	504034	Identifier	res		504018	0					
ANR	504035	PtrMemberAccess	tilec -> resolutions		504018	1					
ANR	504036	Identifier	tilec		504018	0					
ANR	504037	Identifier	resolutions		504018	1					
ANR	504038	IdentifierDeclStatement	int rw = res -> x1 - res -> x0 ;	884:4:27074:27100	504018	3	True				
ANR	504039	IdentifierDecl	rw = res -> x1 - res -> x0		504018	0					
ANR	504040	IdentifierDeclType	int		504018	0					
ANR	504041	Identifier	rw		504018	1					
ANR	504042	AssignmentExpression	rw = res -> x1 - res -> x0		504018	2		=			
ANR	504043	Identifier	rw		504018	0					
ANR	504044	AdditiveExpression	res -> x1 - res -> x0		504018	1		-			
ANR	504045	PtrMemberAccess	res -> x1		504018	0					
ANR	504046	Identifier	res		504018	0					
ANR	504047	Identifier	x1		504018	1					
ANR	504048	PtrMemberAccess	res -> x0		504018	1					
ANR	504049	Identifier	res		504018	0					
ANR	504050	Identifier	x0		504018	1					
ANR	504051	IdentifierDeclStatement	int rh = res -> y1 - res -> y0 ;	885:4:27151:27177	504018	4	True				
ANR	504052	IdentifierDecl	rh = res -> y1 - res -> y0		504018	0					
ANR	504053	IdentifierDeclType	int		504018	0					
ANR	504054	Identifier	rh		504018	1					
ANR	504055	AssignmentExpression	rh = res -> y1 - res -> y0		504018	2		=			
ANR	504056	Identifier	rh		504018	0					
ANR	504057	AdditiveExpression	res -> y1 - res -> y0		504018	1		-			
ANR	504058	PtrMemberAccess	res -> y1		504018	0					
ANR	504059	Identifier	res		504018	0					
ANR	504060	Identifier	y1		504018	1					
ANR	504061	PtrMemberAccess	res -> y0		504018	1					
ANR	504062	Identifier	res		504018	0					
ANR	504063	Identifier	y0		504018	1					
ANR	504064	IdentifierDeclStatement	int w = tilec -> x1 - tilec -> x0 ;	887:4:27230:27259	504018	5	True				
ANR	504065	IdentifierDecl	w = tilec -> x1 - tilec -> x0		504018	0					
ANR	504066	IdentifierDeclType	int		504018	0					
ANR	504067	Identifier	w		504018	1					
ANR	504068	AssignmentExpression	w = tilec -> x1 - tilec -> x0		504018	2		=			
ANR	504069	Identifier	w		504018	0					
ANR	504070	AdditiveExpression	tilec -> x1 - tilec -> x0		504018	1		-			
ANR	504071	PtrMemberAccess	tilec -> x1		504018	0					
ANR	504072	Identifier	tilec		504018	0					
ANR	504073	Identifier	x1		504018	1					
ANR	504074	PtrMemberAccess	tilec -> x0		504018	1					
ANR	504075	Identifier	tilec		504018	0					
ANR	504076	Identifier	x0		504018	1					
ANR	504077	ExpressionStatement	"h . wavelet = ( v4 * ) opj_aligned_malloc ( ( dwt_decode_max_resolution ( res , numres ) + 5 ) * sizeof ( v4 ) )"	889:4:27266:27403	504018	6	True				
ANR	504078	AssignmentExpression	"h . wavelet = ( v4 * ) opj_aligned_malloc ( ( dwt_decode_max_resolution ( res , numres ) + 5 ) * sizeof ( v4 ) )"		504018	0		=			
ANR	504079	MemberAccess	h . wavelet		504018	0					
ANR	504080	Identifier	h		504018	0					
ANR	504081	Identifier	wavelet		504018	1					
ANR	504082	CastExpression	"( v4 * ) opj_aligned_malloc ( ( dwt_decode_max_resolution ( res , numres ) + 5 ) * sizeof ( v4 ) )"		504018	1					
ANR	504083	CastTarget	v4 *		504018	0					
ANR	504084	CallExpression	"opj_aligned_malloc ( ( dwt_decode_max_resolution ( res , numres ) + 5 ) * sizeof ( v4 ) )"		504018	1					
ANR	504085	Callee	opj_aligned_malloc		504018	0					
ANR	504086	Identifier	opj_aligned_malloc		504018	0					
ANR	504087	ArgumentList	"( dwt_decode_max_resolution ( res , numres ) + 5 ) * sizeof ( v4 )"		504018	1					
ANR	504088	Argument	"( dwt_decode_max_resolution ( res , numres ) + 5 ) * sizeof ( v4 )"		504018	0					
ANR	504089	MultiplicativeExpression	"( dwt_decode_max_resolution ( res , numres ) + 5 ) * sizeof ( v4 )"		504018	0		*			
ANR	504090	AdditiveExpression	"dwt_decode_max_resolution ( res , numres ) + 5"		504018	0		+			
ANR	504091	CallExpression	"dwt_decode_max_resolution ( res , numres )"		504018	0					
ANR	504092	Callee	dwt_decode_max_resolution		504018	0					
ANR	504093	Identifier	dwt_decode_max_resolution		504018	0					
ANR	504094	ArgumentList	res		504018	1					
ANR	504095	Argument	res		504018	0					
ANR	504096	Identifier	res		504018	0					
ANR	504097	Argument	numres		504018	1					
ANR	504098	Identifier	numres		504018	0					
ANR	504099	PrimaryExpression	5		504018	1					
ANR	504100	SizeofExpression	sizeof ( v4 )		504018	1					
ANR	504101	Sizeof	sizeof		504018	0					
ANR	504102	SizeofOperand	v4		504018	1					
ANR	504103	ExpressionStatement	v . wavelet = h . wavelet	891:4:27409:27430	504018	7	True				
ANR	504104	AssignmentExpression	v . wavelet = h . wavelet		504018	0		=			
ANR	504105	MemberAccess	v . wavelet		504018	0					
ANR	504106	Identifier	v		504018	0					
ANR	504107	Identifier	wavelet		504018	1					
ANR	504108	MemberAccess	h . wavelet		504018	1					
ANR	504109	Identifier	h		504018	0					
ANR	504110	Identifier	wavelet		504018	1					
ANR	504111	WhileStatement	while ( -- numres )		504018	8					
ANR	504112	Condition	-- numres	893:11:27444:27451	504018	0	True				
ANR	504113	UnaryExpression	-- numres		504018	0					
ANR	504114	IncDec	--		504018	0					
ANR	504115	Identifier	numres		504018	1					
ANR	504116	CompoundStatement		19:8:604:609	504018	1					
ANR	504117	IdentifierDeclStatement	float * restrict aj = ( float * ) tilec -> data ;	894:8:27464:27506	504018	0	True				
ANR	504118	IdentifierDecl	* restrict aj = ( float * ) tilec -> data		504018	0					
ANR	504119	IdentifierDeclType	float * restrict		504018	0					
ANR	504120	Identifier	aj		504018	1					
ANR	504121	AssignmentExpression	* restrict aj = ( float * ) tilec -> data		504018	2		=			
ANR	504122	Identifier	aj		504018	0					
ANR	504123	CastExpression	( float * ) tilec -> data		504018	1					
ANR	504124	CastTarget	float *		504018	0					
ANR	504125	PtrMemberAccess	tilec -> data		504018	1					
ANR	504126	Identifier	tilec		504018	0					
ANR	504127	Identifier	data		504018	1					
ANR	504128	IdentifierDeclStatement	int bufsize = ( tilec -> x1 - tilec -> x0 ) * ( tilec -> y1 - tilec -> y0 ) ;	895:8:27516:27579	504018	1	True				
ANR	504129	IdentifierDecl	bufsize = ( tilec -> x1 - tilec -> x0 ) * ( tilec -> y1 - tilec -> y0 )		504018	0					
ANR	504130	IdentifierDeclType	int		504018	0					
ANR	504131	Identifier	bufsize		504018	1					
ANR	504132	AssignmentExpression	bufsize = ( tilec -> x1 - tilec -> x0 ) * ( tilec -> y1 - tilec -> y0 )		504018	2		=			
ANR	504133	Identifier	bufsize		504018	0					
ANR	504134	MultiplicativeExpression	( tilec -> x1 - tilec -> x0 ) * ( tilec -> y1 - tilec -> y0 )		504018	1		*			
ANR	504135	AdditiveExpression	tilec -> x1 - tilec -> x0		504018	0		-			
ANR	504136	PtrMemberAccess	tilec -> x1		504018	0					
ANR	504137	Identifier	tilec		504018	0					
ANR	504138	Identifier	x1		504018	1					
ANR	504139	PtrMemberAccess	tilec -> x0		504018	1					
ANR	504140	Identifier	tilec		504018	0					
ANR	504141	Identifier	x0		504018	1					
ANR	504142	AdditiveExpression	tilec -> y1 - tilec -> y0		504018	1		-			
ANR	504143	PtrMemberAccess	tilec -> y1		504018	0					
ANR	504144	Identifier	tilec		504018	0					
ANR	504145	Identifier	y1		504018	1					
ANR	504146	PtrMemberAccess	tilec -> y0		504018	1					
ANR	504147	Identifier	tilec		504018	0					
ANR	504148	Identifier	y0		504018	1					
ANR	504149	IdentifierDeclStatement	int j ;	896:8:27589:27594	504018	2	True				
ANR	504150	IdentifierDecl	j		504018	0					
ANR	504151	IdentifierDeclType	int		504018	0					
ANR	504152	Identifier	j		504018	1					
ANR	504153	ExpressionStatement	h . sn = rw	898:8:27605:27614	504018	3	True				
ANR	504154	AssignmentExpression	h . sn = rw		504018	0		=			
ANR	504155	MemberAccess	h . sn		504018	0					
ANR	504156	Identifier	h		504018	0					
ANR	504157	Identifier	sn		504018	1					
ANR	504158	Identifier	rw		504018	1					
ANR	504159	ExpressionStatement	v . sn = rh	899:8:27624:27633	504018	4	True				
ANR	504160	AssignmentExpression	v . sn = rh		504018	0		=			
ANR	504161	MemberAccess	v . sn		504018	0					
ANR	504162	Identifier	v		504018	0					
ANR	504163	Identifier	sn		504018	1					
ANR	504164	Identifier	rh		504018	1					
ANR	504165	ExpressionStatement	++ res	901:8:27644:27649	504018	5	True				
ANR	504166	UnaryExpression	++ res		504018	0					
ANR	504167	IncDec	++		504018	0					
ANR	504168	Identifier	res		504018	1					
ANR	504169	ExpressionStatement	rw = res -> x1 - res -> x0	903:8:27660:27682	504018	6	True				
ANR	504170	AssignmentExpression	rw = res -> x1 - res -> x0		504018	0		=			
ANR	504171	Identifier	rw		504018	0					
ANR	504172	AdditiveExpression	res -> x1 - res -> x0		504018	1		-			
ANR	504173	PtrMemberAccess	res -> x1		504018	0					
ANR	504174	Identifier	res		504018	0					
ANR	504175	Identifier	x1		504018	1					
ANR	504176	PtrMemberAccess	res -> x0		504018	1					
ANR	504177	Identifier	res		504018	0					
ANR	504178	Identifier	x0		504018	1					
ANR	504179	ExpressionStatement	rh = res -> y1 - res -> y0	904:8:27737:27759	504018	7	True				
ANR	504180	AssignmentExpression	rh = res -> y1 - res -> y0		504018	0		=			
ANR	504181	Identifier	rh		504018	0					
ANR	504182	AdditiveExpression	res -> y1 - res -> y0		504018	1		-			
ANR	504183	PtrMemberAccess	res -> y1		504018	0					
ANR	504184	Identifier	res		504018	0					
ANR	504185	Identifier	y1		504018	1					
ANR	504186	PtrMemberAccess	res -> y0		504018	1					
ANR	504187	Identifier	res		504018	0					
ANR	504188	Identifier	y0		504018	1					
ANR	504189	ExpressionStatement	h . dn = rw - h . sn	906:8:27816:27832	504018	8	True				
ANR	504190	AssignmentExpression	h . dn = rw - h . sn		504018	0		=			
ANR	504191	MemberAccess	h . dn		504018	0					
ANR	504192	Identifier	h		504018	0					
ANR	504193	Identifier	dn		504018	1					
ANR	504194	AdditiveExpression	rw - h . sn		504018	1		-			
ANR	504195	Identifier	rw		504018	0					
ANR	504196	MemberAccess	h . sn		504018	1					
ANR	504197	Identifier	h		504018	0					
ANR	504198	Identifier	sn		504018	1					
ANR	504199	ExpressionStatement	h . cas = res -> x0 % 2	907:8:27842:27861	504018	9	True				
ANR	504200	AssignmentExpression	h . cas = res -> x0 % 2		504018	0		=			
ANR	504201	MemberAccess	h . cas		504018	0					
ANR	504202	Identifier	h		504018	0					
ANR	504203	Identifier	cas		504018	1					
ANR	504204	MultiplicativeExpression	res -> x0 % 2		504018	1		%			
ANR	504205	PtrMemberAccess	res -> x0		504018	0					
ANR	504206	Identifier	res		504018	0					
ANR	504207	Identifier	x0		504018	1					
ANR	504208	PrimaryExpression	2		504018	1					
ANR	504209	ForStatement	for ( j = rh ; j > 3 ; j -= 4 )		504018	10					
ANR	504210	ForInit	j = rh ;	909:13:27877:27883	504018	0	True				
ANR	504211	AssignmentExpression	j = rh		504018	0		=			
ANR	504212	Identifier	j		504018	0					
ANR	504213	Identifier	rh		504018	1					
ANR	504214	Condition	j > 3	909:21:27885:27889	504018	1	True				
ANR	504215	RelationalExpression	j > 3		504018	0		>			
ANR	504216	Identifier	j		504018	0					
ANR	504217	PrimaryExpression	3		504018	1					
ANR	504218	AssignmentExpression	j -= 4	909:28:27892:27897	504018	2	True	-=			
ANR	504219	Identifier	j		504018	0					
ANR	504220	PrimaryExpression	4		504018	1					
ANR	504221	CompoundStatement		33:12:929:934	504018	3					
ANR	504222	IdentifierDeclStatement	int k ;	910:12:27914:27919	504018	0	True				
ANR	504223	IdentifierDecl	k		504018	0					
ANR	504224	IdentifierDeclType	int		504018	0					
ANR	504225	Identifier	k		504018	1					
ANR	504226	ExpressionStatement	"v4dwt_interleave_h ( & h , aj , w , bufsize )"	911:12:27933:27971	504018	1	True				
ANR	504227	CallExpression	"v4dwt_interleave_h ( & h , aj , w , bufsize )"		504018	0					
ANR	504228	Callee	v4dwt_interleave_h		504018	0					
ANR	504229	Identifier	v4dwt_interleave_h		504018	0					
ANR	504230	ArgumentList	& h		504018	1					
ANR	504231	Argument	& h		504018	0					
ANR	504232	UnaryOperationExpression	& h		504018	0					
ANR	504233	UnaryOperator	&		504018	0					
ANR	504234	Identifier	h		504018	1					
ANR	504235	Argument	aj		504018	1					
ANR	504236	Identifier	aj		504018	0					
ANR	504237	Argument	w		504018	2					
ANR	504238	Identifier	w		504018	0					
ANR	504239	Argument	bufsize		504018	3					
ANR	504240	Identifier	bufsize		504018	0					
ANR	504241	ExpressionStatement	v4dwt_decode ( & h )	912:12:27985:28001	504018	2	True				
ANR	504242	CallExpression	v4dwt_decode ( & h )		504018	0					
ANR	504243	Callee	v4dwt_decode		504018	0					
ANR	504244	Identifier	v4dwt_decode		504018	0					
ANR	504245	ArgumentList	& h		504018	1					
ANR	504246	Argument	& h		504018	0					
ANR	504247	UnaryOperationExpression	& h		504018	0					
ANR	504248	UnaryOperator	&		504018	0					
ANR	504249	Identifier	h		504018	1					
ANR	504250	ForStatement	for ( k = rw ; -- k >= 0 ; )		504018	3					
ANR	504251	ForInit	k = rw ;	913:17:28020:28026	504018	0	True				
ANR	504252	AssignmentExpression	k = rw		504018	0		=			
ANR	504253	Identifier	k		504018	0					
ANR	504254	Identifier	rw		504018	1					
ANR	504255	Condition	-- k >= 0	913:25:28028:28035	504018	1	True				
ANR	504256	RelationalExpression	-- k >= 0		504018	0		>=			
ANR	504257	UnaryExpression	-- k		504018	0					
ANR	504258	IncDec	--		504018	0					
ANR	504259	Identifier	k		504018	1					
ANR	504260	PrimaryExpression	0		504018	1					
ANR	504261	CompoundStatement		36:36:1054:1054	504018	2					
ANR	504262	ExpressionStatement	aj [ k ] = h . wavelet [ k ] . f [ 0 ]	914:16:28057:28086	504018	0	True				
ANR	504263	AssignmentExpression	aj [ k ] = h . wavelet [ k ] . f [ 0 ]		504018	0		=			
ANR	504264	ArrayIndexing	aj [ k ]		504018	0					
ANR	504265	Identifier	aj		504018	0					
ANR	504266	Identifier	k		504018	1					
ANR	504267	ArrayIndexing	h . wavelet [ k ] . f [ 0 ]		504018	1					
ANR	504268	MemberAccess	h . wavelet [ k ] . f		504018	0					
ANR	504269	ArrayIndexing	h . wavelet [ k ]		504018	0					
ANR	504270	MemberAccess	h . wavelet		504018	0					
ANR	504271	Identifier	h		504018	0					
ANR	504272	Identifier	wavelet		504018	1					
ANR	504273	Identifier	k		504018	1					
ANR	504274	Identifier	f		504018	1					
ANR	504275	PrimaryExpression	0		504018	1					
ANR	504276	ExpressionStatement	aj [ k + w ] = h . wavelet [ k ] . f [ 1 ]	915:16:28104:28135	504018	1	True				
ANR	504277	AssignmentExpression	aj [ k + w ] = h . wavelet [ k ] . f [ 1 ]		504018	0		=			
ANR	504278	ArrayIndexing	aj [ k + w ]		504018	0					
ANR	504279	Identifier	aj		504018	0					
ANR	504280	AdditiveExpression	k + w		504018	1		+			
ANR	504281	Identifier	k		504018	0					
ANR	504282	Identifier	w		504018	1					
ANR	504283	ArrayIndexing	h . wavelet [ k ] . f [ 1 ]		504018	1					
ANR	504284	MemberAccess	h . wavelet [ k ] . f		504018	0					
ANR	504285	ArrayIndexing	h . wavelet [ k ]		504018	0					
ANR	504286	MemberAccess	h . wavelet		504018	0					
ANR	504287	Identifier	h		504018	0					
ANR	504288	Identifier	wavelet		504018	1					
ANR	504289	Identifier	k		504018	1					
ANR	504290	Identifier	f		504018	1					
ANR	504291	PrimaryExpression	1		504018	1					
ANR	504292	ExpressionStatement	aj [ k + w * 2 ] = h . wavelet [ k ] . f [ 2 ]	916:16:28153:28186	504018	2	True				
ANR	504293	AssignmentExpression	aj [ k + w * 2 ] = h . wavelet [ k ] . f [ 2 ]		504018	0		=			
ANR	504294	ArrayIndexing	aj [ k + w * 2 ]		504018	0					
ANR	504295	Identifier	aj		504018	0					
ANR	504296	AdditiveExpression	k + w * 2		504018	1		+			
ANR	504297	Identifier	k		504018	0					
ANR	504298	MultiplicativeExpression	w * 2		504018	1		*			
ANR	504299	Identifier	w		504018	0					
ANR	504300	PrimaryExpression	2		504018	1					
ANR	504301	ArrayIndexing	h . wavelet [ k ] . f [ 2 ]		504018	1					
ANR	504302	MemberAccess	h . wavelet [ k ] . f		504018	0					
ANR	504303	ArrayIndexing	h . wavelet [ k ]		504018	0					
ANR	504304	MemberAccess	h . wavelet		504018	0					
ANR	504305	Identifier	h		504018	0					
ANR	504306	Identifier	wavelet		504018	1					
ANR	504307	Identifier	k		504018	1					
ANR	504308	Identifier	f		504018	1					
ANR	504309	PrimaryExpression	2		504018	1					
ANR	504310	ExpressionStatement	aj [ k + w * 3 ] = h . wavelet [ k ] . f [ 3 ]	917:16:28204:28237	504018	3	True				
ANR	504311	AssignmentExpression	aj [ k + w * 3 ] = h . wavelet [ k ] . f [ 3 ]		504018	0		=			
ANR	504312	ArrayIndexing	aj [ k + w * 3 ]		504018	0					
ANR	504313	Identifier	aj		504018	0					
ANR	504314	AdditiveExpression	k + w * 3		504018	1		+			
ANR	504315	Identifier	k		504018	0					
ANR	504316	MultiplicativeExpression	w * 3		504018	1		*			
ANR	504317	Identifier	w		504018	0					
ANR	504318	PrimaryExpression	3		504018	1					
ANR	504319	ArrayIndexing	h . wavelet [ k ] . f [ 3 ]		504018	1					
ANR	504320	MemberAccess	h . wavelet [ k ] . f		504018	0					
ANR	504321	ArrayIndexing	h . wavelet [ k ]		504018	0					
ANR	504322	MemberAccess	h . wavelet		504018	0					
ANR	504323	Identifier	h		504018	0					
ANR	504324	Identifier	wavelet		504018	1					
ANR	504325	Identifier	k		504018	1					
ANR	504326	Identifier	f		504018	1					
ANR	504327	PrimaryExpression	3		504018	1					
ANR	504328	ExpressionStatement	aj += w * 4	919:12:28265:28276	504018	4	True				
ANR	504329	AssignmentExpression	aj += w * 4		504018	0		+=			
ANR	504330	Identifier	aj		504018	0					
ANR	504331	MultiplicativeExpression	w * 4		504018	1		*			
ANR	504332	Identifier	w		504018	0					
ANR	504333	PrimaryExpression	4		504018	1					
ANR	504334	ExpressionStatement	bufsize -= w * 4	920:12:28290:28306	504018	5	True				
ANR	504335	AssignmentExpression	bufsize -= w * 4		504018	0		-=			
ANR	504336	Identifier	bufsize		504018	0					
ANR	504337	MultiplicativeExpression	w * 4		504018	1		*			
ANR	504338	Identifier	w		504018	0					
ANR	504339	PrimaryExpression	4		504018	1					
ANR	504340	IfStatement	if ( rh & 0x03 )		504018	11					
ANR	504341	Condition	rh & 0x03	922:12:28330:28338	504018	0	True				
ANR	504342	BitAndExpression	rh & 0x03		504018	0		&			
ANR	504343	Identifier	rh		504018	0					
ANR	504344	PrimaryExpression	0x03		504018	1					
ANR	504345	CompoundStatement		46:12:1370:1375	504018	1					
ANR	504346	IdentifierDeclStatement	int k ;	923:12:28355:28360	504018	0	True				
ANR	504347	IdentifierDecl	k		504018	0					
ANR	504348	IdentifierDeclType	int		504018	0					
ANR	504349	Identifier	k		504018	1					
ANR	504350	ExpressionStatement	j = rh & 0x03	924:12:28374:28387	504018	1	True				
ANR	504351	AssignmentExpression	j = rh & 0x03		504018	0		=			
ANR	504352	Identifier	j		504018	0					
ANR	504353	BitAndExpression	rh & 0x03		504018	1		&			
ANR	504354	Identifier	rh		504018	0					
ANR	504355	PrimaryExpression	0x03		504018	1					
ANR	504356	ExpressionStatement	"v4dwt_interleave_h ( & h , aj , w , bufsize )"	925:12:28401:28439	504018	2	True				
ANR	504357	CallExpression	"v4dwt_interleave_h ( & h , aj , w , bufsize )"		504018	0					
ANR	504358	Callee	v4dwt_interleave_h		504018	0					
ANR	504359	Identifier	v4dwt_interleave_h		504018	0					
ANR	504360	ArgumentList	& h		504018	1					
ANR	504361	Argument	& h		504018	0					
ANR	504362	UnaryOperationExpression	& h		504018	0					
ANR	504363	UnaryOperator	&		504018	0					
ANR	504364	Identifier	h		504018	1					
ANR	504365	Argument	aj		504018	1					
ANR	504366	Identifier	aj		504018	0					
ANR	504367	Argument	w		504018	2					
ANR	504368	Identifier	w		504018	0					
ANR	504369	Argument	bufsize		504018	3					
ANR	504370	Identifier	bufsize		504018	0					
ANR	504371	ExpressionStatement	v4dwt_decode ( & h )	926:12:28453:28469	504018	3	True				
ANR	504372	CallExpression	v4dwt_decode ( & h )		504018	0					
ANR	504373	Callee	v4dwt_decode		504018	0					
ANR	504374	Identifier	v4dwt_decode		504018	0					
ANR	504375	ArgumentList	& h		504018	1					
ANR	504376	Argument	& h		504018	0					
ANR	504377	UnaryOperationExpression	& h		504018	0					
ANR	504378	UnaryOperator	&		504018	0					
ANR	504379	Identifier	h		504018	1					
ANR	504380	ForStatement	for ( k = rw ; -- k >= 0 ; )		504018	4					
ANR	504381	ForInit	k = rw ;	927:17:28488:28494	504018	0	True				
ANR	504382	AssignmentExpression	k = rw		504018	0		=			
ANR	504383	Identifier	k		504018	0					
ANR	504384	Identifier	rw		504018	1					
ANR	504385	Condition	-- k >= 0	927:25:28496:28503	504018	1	True				
ANR	504386	RelationalExpression	-- k >= 0		504018	0		>=			
ANR	504387	UnaryExpression	-- k		504018	0					
ANR	504388	IncDec	--		504018	0					
ANR	504389	Identifier	k		504018	1					
ANR	504390	PrimaryExpression	0		504018	1					
ANR	504391	CompoundStatement		50:36:1522:1522	504018	2					
ANR	504392	SwitchStatement	switch ( j )		504018	0					
ANR	504393	Condition	j	928:24:28533:28533	504018	0	True				
ANR	504394	Identifier	j		504018	0					
ANR	504395	CompoundStatement		51:27:1551:1551	504018	1					
ANR	504396	Label	case 3 :	929:16:28554:28560	504018	0	True				
ANR	504397	ExpressionStatement	aj [ k + w * 2 ] = h . wavelet [ k ] . f [ 2 ]	930:20:28582:28615	504018	1	True				
ANR	504398	AssignmentExpression	aj [ k + w * 2 ] = h . wavelet [ k ] . f [ 2 ]		504018	0		=			
ANR	504399	ArrayIndexing	aj [ k + w * 2 ]		504018	0					
ANR	504400	Identifier	aj		504018	0					
ANR	504401	AdditiveExpression	k + w * 2		504018	1		+			
ANR	504402	Identifier	k		504018	0					
ANR	504403	MultiplicativeExpression	w * 2		504018	1		*			
ANR	504404	Identifier	w		504018	0					
ANR	504405	PrimaryExpression	2		504018	1					
ANR	504406	ArrayIndexing	h . wavelet [ k ] . f [ 2 ]		504018	1					
ANR	504407	MemberAccess	h . wavelet [ k ] . f		504018	0					
ANR	504408	ArrayIndexing	h . wavelet [ k ]		504018	0					
ANR	504409	MemberAccess	h . wavelet		504018	0					
ANR	504410	Identifier	h		504018	0					
ANR	504411	Identifier	wavelet		504018	1					
ANR	504412	Identifier	k		504018	1					
ANR	504413	Identifier	f		504018	1					
ANR	504414	PrimaryExpression	2		504018	1					
ANR	504415	Label	case 2 :	931:16:28633:28639	504018	2	True				
ANR	504416	ExpressionStatement	aj [ k + w ] = h . wavelet [ k ] . f [ 1 ]	932:20:28661:28692	504018	3	True				
ANR	504417	AssignmentExpression	aj [ k + w ] = h . wavelet [ k ] . f [ 1 ]		504018	0		=			
ANR	504418	ArrayIndexing	aj [ k + w ]		504018	0					
ANR	504419	Identifier	aj		504018	0					
ANR	504420	AdditiveExpression	k + w		504018	1		+			
ANR	504421	Identifier	k		504018	0					
ANR	504422	Identifier	w		504018	1					
ANR	504423	ArrayIndexing	h . wavelet [ k ] . f [ 1 ]		504018	1					
ANR	504424	MemberAccess	h . wavelet [ k ] . f		504018	0					
ANR	504425	ArrayIndexing	h . wavelet [ k ]		504018	0					
ANR	504426	MemberAccess	h . wavelet		504018	0					
ANR	504427	Identifier	h		504018	0					
ANR	504428	Identifier	wavelet		504018	1					
ANR	504429	Identifier	k		504018	1					
ANR	504430	Identifier	f		504018	1					
ANR	504431	PrimaryExpression	1		504018	1					
ANR	504432	Label	case 1 :	933:16:28710:28716	504018	4	True				
ANR	504433	ExpressionStatement	aj [ k ] = h . wavelet [ k ] . f [ 0 ]	934:20:28738:28767	504018	5	True				
ANR	504434	AssignmentExpression	aj [ k ] = h . wavelet [ k ] . f [ 0 ]		504018	0		=			
ANR	504435	ArrayIndexing	aj [ k ]		504018	0					
ANR	504436	Identifier	aj		504018	0					
ANR	504437	Identifier	k		504018	1					
ANR	504438	ArrayIndexing	h . wavelet [ k ] . f [ 0 ]		504018	1					
ANR	504439	MemberAccess	h . wavelet [ k ] . f		504018	0					
ANR	504440	ArrayIndexing	h . wavelet [ k ]		504018	0					
ANR	504441	MemberAccess	h . wavelet		504018	0					
ANR	504442	Identifier	h		504018	0					
ANR	504443	Identifier	wavelet		504018	1					
ANR	504444	Identifier	k		504018	1					
ANR	504445	Identifier	f		504018	1					
ANR	504446	PrimaryExpression	0		504018	1					
ANR	504447	ExpressionStatement	v . dn = rh - v . sn	939:8:28820:28836	504018	12	True				
ANR	504448	AssignmentExpression	v . dn = rh - v . sn		504018	0		=			
ANR	504449	MemberAccess	v . dn		504018	0					
ANR	504450	Identifier	v		504018	0					
ANR	504451	Identifier	dn		504018	1					
ANR	504452	AdditiveExpression	rh - v . sn		504018	1		-			
ANR	504453	Identifier	rh		504018	0					
ANR	504454	MemberAccess	v . sn		504018	1					
ANR	504455	Identifier	v		504018	0					
ANR	504456	Identifier	sn		504018	1					
ANR	504457	ExpressionStatement	v . cas = res -> y0 % 2	940:8:28846:28865	504018	13	True				
ANR	504458	AssignmentExpression	v . cas = res -> y0 % 2		504018	0		=			
ANR	504459	MemberAccess	v . cas		504018	0					
ANR	504460	Identifier	v		504018	0					
ANR	504461	Identifier	cas		504018	1					
ANR	504462	MultiplicativeExpression	res -> y0 % 2		504018	1		%			
ANR	504463	PtrMemberAccess	res -> y0		504018	0					
ANR	504464	Identifier	res		504018	0					
ANR	504465	Identifier	y0		504018	1					
ANR	504466	PrimaryExpression	2		504018	1					
ANR	504467	ExpressionStatement	aj = ( float * ) tilec -> data	942:8:28876:28901	504018	14	True				
ANR	504468	AssignmentExpression	aj = ( float * ) tilec -> data		504018	0		=			
ANR	504469	Identifier	aj		504018	0					
ANR	504470	CastExpression	( float * ) tilec -> data		504018	1					
ANR	504471	CastTarget	float *		504018	0					
ANR	504472	PtrMemberAccess	tilec -> data		504018	1					
ANR	504473	Identifier	tilec		504018	0					
ANR	504474	Identifier	data		504018	1					
ANR	504475	ForStatement	for ( j = rw ; j > 3 ; j -= 4 )		504018	15					
ANR	504476	ForInit	j = rw ;	943:13:28916:28922	504018	0	True				
ANR	504477	AssignmentExpression	j = rw		504018	0		=			
ANR	504478	Identifier	j		504018	0					
ANR	504479	Identifier	rw		504018	1					
ANR	504480	Condition	j > 3	943:21:28924:28928	504018	1	True				
ANR	504481	RelationalExpression	j > 3		504018	0		>			
ANR	504482	Identifier	j		504018	0					
ANR	504483	PrimaryExpression	3		504018	1					
ANR	504484	AssignmentExpression	j -= 4	943:28:28931:28936	504018	2	True	-=			
ANR	504485	Identifier	j		504018	0					
ANR	504486	PrimaryExpression	4		504018	1					
ANR	504487	CompoundStatement		67:12:1968:1973	504018	3					
ANR	504488	IdentifierDeclStatement	int k ;	944:12:28953:28958	504018	0	True				
ANR	504489	IdentifierDecl	k		504018	0					
ANR	504490	IdentifierDeclType	int		504018	0					
ANR	504491	Identifier	k		504018	1					
ANR	504492	ExpressionStatement	"v4dwt_interleave_v ( & v , aj , w )"	945:12:28972:29001	504018	1	True				
ANR	504493	CallExpression	"v4dwt_interleave_v ( & v , aj , w )"		504018	0					
ANR	504494	Callee	v4dwt_interleave_v		504018	0					
ANR	504495	Identifier	v4dwt_interleave_v		504018	0					
ANR	504496	ArgumentList	& v		504018	1					
ANR	504497	Argument	& v		504018	0					
ANR	504498	UnaryOperationExpression	& v		504018	0					
ANR	504499	UnaryOperator	&		504018	0					
ANR	504500	Identifier	v		504018	1					
ANR	504501	Argument	aj		504018	1					
ANR	504502	Identifier	aj		504018	0					
ANR	504503	Argument	w		504018	2					
ANR	504504	Identifier	w		504018	0					
ANR	504505	ExpressionStatement	v4dwt_decode ( & v )	946:12:29015:29031	504018	2	True				
ANR	504506	CallExpression	v4dwt_decode ( & v )		504018	0					
ANR	504507	Callee	v4dwt_decode		504018	0					
ANR	504508	Identifier	v4dwt_decode		504018	0					
ANR	504509	ArgumentList	& v		504018	1					
ANR	504510	Argument	& v		504018	0					
ANR	504511	UnaryOperationExpression	& v		504018	0					
ANR	504512	UnaryOperator	&		504018	0					
ANR	504513	Identifier	v		504018	1					
ANR	504514	ForStatement	for ( k = 0 ; k < rh ; ++ k )		504018	3					
ANR	504515	ForInit	k = 0 ;	947:17:29050:29055	504018	0	True				
ANR	504516	AssignmentExpression	k = 0		504018	0		=			
ANR	504517	Identifier	k		504018	0					
ANR	504518	PrimaryExpression	0		504018	1					
ANR	504519	Condition	k < rh	947:24:29057:29062	504018	1	True				
ANR	504520	RelationalExpression	k < rh		504018	0		<			
ANR	504521	Identifier	k		504018	0					
ANR	504522	Identifier	rh		504018	1					
ANR	504523	UnaryExpression	++ k	947:32:29065:29067	504018	2	True				
ANR	504524	IncDec	++		504018	0					
ANR	504525	Identifier	k		504018	1					
ANR	504526	CompoundStatement		70:37:2085:2085	504018	3					
ANR	504527	ExpressionStatement	"memcpy ( & aj [ k * w ] , & v . wavelet [ k ] , 4 * sizeof ( float ) )"	948:16:29088:29140	504018	0	True				
ANR	504528	CallExpression	"memcpy ( & aj [ k * w ] , & v . wavelet [ k ] , 4 * sizeof ( float ) )"		504018	0					
ANR	504529	Callee	memcpy		504018	0					
ANR	504530	Identifier	memcpy		504018	0					
ANR	504531	ArgumentList	& aj [ k * w ]		504018	1					
ANR	504532	Argument	& aj [ k * w ]		504018	0					
ANR	504533	UnaryOperationExpression	& aj [ k * w ]		504018	0					
ANR	504534	UnaryOperator	&		504018	0					
ANR	504535	ArrayIndexing	aj [ k * w ]		504018	1					
ANR	504536	Identifier	aj		504018	0					
ANR	504537	MultiplicativeExpression	k * w		504018	1		*			
ANR	504538	Identifier	k		504018	0					
ANR	504539	Identifier	w		504018	1					
ANR	504540	Argument	& v . wavelet [ k ]		504018	1					
ANR	504541	UnaryOperationExpression	& v . wavelet [ k ]		504018	0					
ANR	504542	UnaryOperator	&		504018	0					
ANR	504543	ArrayIndexing	v . wavelet [ k ]		504018	1					
ANR	504544	MemberAccess	v . wavelet		504018	0					
ANR	504545	Identifier	v		504018	0					
ANR	504546	Identifier	wavelet		504018	1					
ANR	504547	Identifier	k		504018	1					
ANR	504548	Argument	4 * sizeof ( float )		504018	2					
ANR	504549	MultiplicativeExpression	4 * sizeof ( float )		504018	0		*			
ANR	504550	PrimaryExpression	4		504018	0					
ANR	504551	SizeofExpression	sizeof ( float )		504018	1					
ANR	504552	Sizeof	sizeof		504018	0					
ANR	504553	SizeofOperand	float		504018	1					
ANR	504554	ExpressionStatement	aj += 4	950:12:29168:29175	504018	4	True				
ANR	504555	AssignmentExpression	aj += 4		504018	0		+=			
ANR	504556	Identifier	aj		504018	0					
ANR	504557	PrimaryExpression	4		504018	1					
ANR	504558	IfStatement	if ( rw & 0x03 )		504018	16					
ANR	504559	Condition	rw & 0x03	952:12:29199:29207	504018	0	True				
ANR	504560	BitAndExpression	rw & 0x03		504018	0		&			
ANR	504561	Identifier	rw		504018	0					
ANR	504562	PrimaryExpression	0x03		504018	1					
ANR	504563	CompoundStatement		76:12:2239:2244	504018	1					
ANR	504564	IdentifierDeclStatement	int k ;	953:12:29224:29229	504018	0	True				
ANR	504565	IdentifierDecl	k		504018	0					
ANR	504566	IdentifierDeclType	int		504018	0					
ANR	504567	Identifier	k		504018	1					
ANR	504568	ExpressionStatement	j = rw & 0x03	954:12:29243:29256	504018	1	True				
ANR	504569	AssignmentExpression	j = rw & 0x03		504018	0		=			
ANR	504570	Identifier	j		504018	0					
ANR	504571	BitAndExpression	rw & 0x03		504018	1		&			
ANR	504572	Identifier	rw		504018	0					
ANR	504573	PrimaryExpression	0x03		504018	1					
ANR	504574	ExpressionStatement	"v4dwt_interleave_v ( & v , aj , w )"	955:12:29270:29299	504018	2	True				
ANR	504575	CallExpression	"v4dwt_interleave_v ( & v , aj , w )"		504018	0					
ANR	504576	Callee	v4dwt_interleave_v		504018	0					
ANR	504577	Identifier	v4dwt_interleave_v		504018	0					
ANR	504578	ArgumentList	& v		504018	1					
ANR	504579	Argument	& v		504018	0					
ANR	504580	UnaryOperationExpression	& v		504018	0					
ANR	504581	UnaryOperator	&		504018	0					
ANR	504582	Identifier	v		504018	1					
ANR	504583	Argument	aj		504018	1					
ANR	504584	Identifier	aj		504018	0					
ANR	504585	Argument	w		504018	2					
ANR	504586	Identifier	w		504018	0					
ANR	504587	ExpressionStatement	v4dwt_decode ( & v )	956:12:29313:29329	504018	3	True				
ANR	504588	CallExpression	v4dwt_decode ( & v )		504018	0					
ANR	504589	Callee	v4dwt_decode		504018	0					
ANR	504590	Identifier	v4dwt_decode		504018	0					
ANR	504591	ArgumentList	& v		504018	1					
ANR	504592	Argument	& v		504018	0					
ANR	504593	UnaryOperationExpression	& v		504018	0					
ANR	504594	UnaryOperator	&		504018	0					
ANR	504595	Identifier	v		504018	1					
ANR	504596	ForStatement	for ( k = 0 ; k < rh ; ++ k )		504018	4					
ANR	504597	ForInit	k = 0 ;	957:17:29348:29353	504018	0	True				
ANR	504598	AssignmentExpression	k = 0		504018	0		=			
ANR	504599	Identifier	k		504018	0					
ANR	504600	PrimaryExpression	0		504018	1					
ANR	504601	Condition	k < rh	957:24:29355:29360	504018	1	True				
ANR	504602	RelationalExpression	k < rh		504018	0		<			
ANR	504603	Identifier	k		504018	0					
ANR	504604	Identifier	rh		504018	1					
ANR	504605	UnaryExpression	++ k	957:32:29363:29365	504018	2	True				
ANR	504606	IncDec	++		504018	0					
ANR	504607	Identifier	k		504018	1					
ANR	504608	CompoundStatement		80:37:2383:2383	504018	3					
ANR	504609	ExpressionStatement	"memcpy ( & aj [ k * w ] , & v . wavelet [ k ] , j * sizeof ( float ) )"	958:16:29386:29438	504018	0	True				
ANR	504610	CallExpression	"memcpy ( & aj [ k * w ] , & v . wavelet [ k ] , j * sizeof ( float ) )"		504018	0					
ANR	504611	Callee	memcpy		504018	0					
ANR	504612	Identifier	memcpy		504018	0					
ANR	504613	ArgumentList	& aj [ k * w ]		504018	1					
ANR	504614	Argument	& aj [ k * w ]		504018	0					
ANR	504615	UnaryOperationExpression	& aj [ k * w ]		504018	0					
ANR	504616	UnaryOperator	&		504018	0					
ANR	504617	ArrayIndexing	aj [ k * w ]		504018	1					
ANR	504618	Identifier	aj		504018	0					
ANR	504619	MultiplicativeExpression	k * w		504018	1		*			
ANR	504620	Identifier	k		504018	0					
ANR	504621	Identifier	w		504018	1					
ANR	504622	Argument	& v . wavelet [ k ]		504018	1					
ANR	504623	UnaryOperationExpression	& v . wavelet [ k ]		504018	0					
ANR	504624	UnaryOperator	&		504018	0					
ANR	504625	ArrayIndexing	v . wavelet [ k ]		504018	1					
ANR	504626	MemberAccess	v . wavelet		504018	0					
ANR	504627	Identifier	v		504018	0					
ANR	504628	Identifier	wavelet		504018	1					
ANR	504629	Identifier	k		504018	1					
ANR	504630	Argument	j * sizeof ( float )		504018	2					
ANR	504631	MultiplicativeExpression	j * sizeof ( float )		504018	0		*			
ANR	504632	Identifier	j		504018	0					
ANR	504633	SizeofExpression	sizeof ( float )		504018	1					
ANR	504634	Sizeof	sizeof		504018	0					
ANR	504635	SizeofOperand	float		504018	1					
ANR	504636	ExpressionStatement	opj_aligned_free ( h . wavelet )	963:4:29475:29502	504018	9	True				
ANR	504637	CallExpression	opj_aligned_free ( h . wavelet )		504018	0					
ANR	504638	Callee	opj_aligned_free		504018	0					
ANR	504639	Identifier	opj_aligned_free		504018	0					
ANR	504640	ArgumentList	h . wavelet		504018	1					
ANR	504641	Argument	h . wavelet		504018	0					
ANR	504642	MemberAccess	h . wavelet		504018	0					
ANR	504643	Identifier	h		504018	0					
ANR	504644	Identifier	wavelet		504018	1					
ANR	504645	ReturnType	void		504018	1					
ANR	504646	Identifier	dwt_decode_real		504018	2					
ANR	504647	ParameterList	"opj_tcd_tilecomp_t * restrict tilec , int numres"		504018	3					
ANR	504648	Parameter	opj_tcd_tilecomp_t * restrict tilec	877:21:26936:26969	504018	0	True				
ANR	504649	ParameterType	opj_tcd_tilecomp_t * restrict		504018	0					
ANR	504650	Identifier	tilec		504018	1					
ANR	504651	Parameter	int numres	877:57:26972:26981	504018	1	True				
ANR	504652	ParameterType	int		504018	0					
ANR	504653	Identifier	numres		504018	1					
ANR	504654	CFGEntryNode	ENTRY		504018		True				
ANR	504655	CFGExitNode	EXIT		504018		True				
ANR	504656	Symbol	* w		504018						
ANR	504657	Symbol	* * h . wavelet		504018						
ANR	504658	Symbol	numres		504018						
ANR	504659	Symbol	v . sn		504018						
ANR	504660	Symbol	rw		504018						
ANR	504661	Symbol	dwt_decode_max_resolution		504018						
ANR	504662	Symbol	res -> y0		504018						
ANR	504663	Symbol	res -> y1		504018						
ANR	504664	Symbol	* res		504018						
ANR	504665	Symbol	tilec -> data		504018						
ANR	504666	Symbol	* tilec		504018						
ANR	504667	Symbol	tilec -> y0		504018						
ANR	504668	Symbol	tilec -> y1		504018						
ANR	504669	Symbol	* aj		504018						
ANR	504670	Symbol	h . cas		504018						
ANR	504671	Symbol	h . wavelet [ k ] . f		504018						
ANR	504672	Symbol	v . dn		504018						
ANR	504673	Symbol	* h . wavelet		504018						
ANR	504674	Symbol	h . sn		504018						
ANR	504675	Symbol	h . wavelet		504018						
ANR	504676	Symbol	* * k		504018						
ANR	504677	Symbol	tilec		504018						
ANR	504678	Symbol	res		504018						
ANR	504679	Symbol	v . wavelet		504018						
ANR	504680	Symbol	* * h		504018						
ANR	504681	Symbol	* h . wavelet [ k ] . f		504018						
ANR	504682	Symbol	h . dn		504018						
ANR	504683	Symbol	res -> x1		504018						
ANR	504684	Symbol	h		504018						
ANR	504685	Symbol	bufsize		504018						
ANR	504686	Symbol	res -> x0		504018						
ANR	504687	Symbol	aj		504018						
ANR	504688	Symbol	opj_aligned_malloc		504018						
ANR	504689	Symbol	j		504018						
ANR	504690	Symbol	k		504018						
ANR	504691	Symbol	v . cas		504018						
ANR	504692	Symbol	tilec -> x0		504018						
ANR	504693	Symbol	tilec -> x1		504018						
ANR	504694	Symbol	& h		504018						
ANR	504695	Symbol	* h		504018						
ANR	504696	Symbol	tilec -> resolutions		504018						
ANR	504697	Symbol	* k		504018						
ANR	504698	Symbol	v		504018						
ANR	504699	Symbol	rh		504018						
ANR	504700	Symbol	w		504018						
ANR	504701	Symbol	& v		504018						
