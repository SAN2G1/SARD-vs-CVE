command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	495356	File	data/converged/CVE-2019-12973_openjpeg/src_lib_openjpwl_rs.c								
ANR	495357	DeclStmt									
ANR	495358	Decl							int	int	gf
ANR	495359	DeclStmt									
ANR	495360	Decl							int	int	KK
ANR	495361	DeclStmt									
ANR	495362	Decl							int	int [ MM + 1 ]	Pp
ANR	495363	DeclStmt									
ANR	495364	Decl							int	int [ MM + 1 ]	Pp
ANR	495365	DeclStmt									
ANR	495366	Decl							int	int [ MM + 1 ]	Pp
ANR	495367	DeclStmt									
ANR	495368	Decl							int	int [ MM + 1 ]	Pp
ANR	495369	DeclStmt									
ANR	495370	Decl							int	int [ MM + 1 ]	Pp
ANR	495371	DeclStmt									
ANR	495372	Decl							int	int [ MM + 1 ]	Pp
ANR	495373	DeclStmt									
ANR	495374	Decl							int	int [ MM + 1 ]	Pp
ANR	495375	DeclStmt									
ANR	495376	Decl							int	int [ MM + 1 ]	Pp
ANR	495377	DeclStmt									
ANR	495378	Decl							int	int [ MM + 1 ]	Pp
ANR	495379	DeclStmt									
ANR	495380	Decl							int	int [ MM + 1 ]	Pp
ANR	495381	DeclStmt									
ANR	495382	Decl							int	int [ MM + 1 ]	Pp
ANR	495383	DeclStmt									
ANR	495384	Decl							int	int [ MM + 1 ]	Pp
ANR	495385	DeclStmt									
ANR	495386	Decl							int	int [ MM + 1 ]	Pp
ANR	495387	DeclStmt									
ANR	495388	Decl							int	int [ MM + 1 ]	Pp
ANR	495389	DeclStmt									
ANR	495390	Decl							int	int [ MM + 1 ]	Pp
ANR	495391	DeclStmt									
ANR	495392	Decl							gf	gf [ NN + 1 ]	Alpha_to
ANR	495393	DeclStmt									
ANR	495394	Decl							gf	gf [ NN + 1 ]	Index_of
ANR	495395	DeclStmt									
ANR	495396	Decl							gf	gf [ NN - 1 ]	Gg
ANR	495397	Function	modnn	174:0:5659:5788							
ANR	495398	FunctionDef	modnn (int x)		495397	0					
ANR	495399	CompoundStatement		176:0:5693:5788	495397	0					
ANR	495400	WhileStatement	while ( x >= NN )		495397	0					
ANR	495401	Condition	x >= NN	177:11:5706:5712	495397	0	True				
ANR	495402	RelationalExpression	x >= NN		495397	0		>=			
ANR	495403	Identifier	x		495397	0					
ANR	495404	Identifier	NN		495397	1					
ANR	495405	CompoundStatement		2:20:21:21	495397	1					
ANR	495406	ExpressionStatement	x -= NN	178:8:5725:5732	495397	0	True				
ANR	495407	AssignmentExpression	x -= NN		495397	0		-=			
ANR	495408	Identifier	x		495397	0					
ANR	495409	Identifier	NN		495397	1					
ANR	495410	ExpressionStatement	x = ( x >> MM ) + ( x & NN )	179:8:5742:5766	495397	1	True				
ANR	495411	AssignmentExpression	x = ( x >> MM ) + ( x & NN )		495397	0		=			
ANR	495412	Identifier	x		495397	0					
ANR	495413	AdditiveExpression	( x >> MM ) + ( x & NN )		495397	1		+			
ANR	495414	ShiftExpression	x >> MM		495397	0		>>			
ANR	495415	Identifier	x		495397	0					
ANR	495416	Identifier	MM		495397	1					
ANR	495417	BitAndExpression	x & NN		495397	1		&			
ANR	495418	Identifier	x		495397	0					
ANR	495419	Identifier	NN		495397	1					
ANR	495420	ReturnStatement	return x ;	181:4:5778:5786	495397	1	True				
ANR	495421	Identifier	x		495397	0					
ANR	495422	ReturnType	static gf		495397	1					
ANR	495423	Identifier	modnn		495397	2					
ANR	495424	ParameterList	int x		495397	3					
ANR	495425	Parameter	int x	175:6:5686:5690	495397	0	True				
ANR	495426	ParameterType	int		495397	0					
ANR	495427	Identifier	x		495397	1					
ANR	495428	CFGEntryNode	ENTRY		495397		True				
ANR	495429	CFGExitNode	EXIT		495397		True				
ANR	495430	Symbol	NN		495397						
ANR	495431	Symbol	MM		495397						
ANR	495432	Symbol	x		495397						
ANR	495433	DeclStmt									
ANR	495434	Decl							int	int	ci
ANR	495435	DeclStmt									
ANR	495436	Decl							int	int	ci
ANR	495437	DeclStmt									
ANR	495438	Decl							int	int	ci
ANR	495439	Function	init_rs	203:0:6144:6309							
ANR	495440	FunctionDef	init_rs (int k)		495439	0					
ANR	495441	CompoundStatement		204:0:6164:6309	495439	0					
ANR	495442	ExpressionStatement	KK = k	205:4:6170:6176	495439	0	True				
ANR	495443	AssignmentExpression	KK = k		495439	0		=			
ANR	495444	Identifier	KK		495439	0					
ANR	495445	Identifier	k		495439	1					
ANR	495446	IfStatement	if ( KK >= NN )		495439	1					
ANR	495447	Condition	KK >= NN	206:8:6186:6193	495439	0	True				
ANR	495448	RelationalExpression	KK >= NN		495439	0		>=			
ANR	495449	Identifier	KK		495439	0					
ANR	495450	Identifier	NN		495439	1					
ANR	495451	CompoundStatement		3:18:31:31	495439	1					
ANR	495452	ExpressionStatement	"printf ( ""KK must be less than 2**MM - 1\\n"" )"	207:8:6206:6248	495439	0	True				
ANR	495453	CallExpression	"printf ( ""KK must be less than 2**MM - 1\\n"" )"		495439	0					
ANR	495454	Callee	printf		495439	0					
ANR	495455	Identifier	printf		495439	0					
ANR	495456	ArgumentList	"""KK must be less than 2**MM - 1\\n"""		495439	1					
ANR	495457	Argument	"""KK must be less than 2**MM - 1\\n"""		495439	0					
ANR	495458	PrimaryExpression	"""KK must be less than 2**MM - 1\\n"""		495439	0					
ANR	495459	ExpressionStatement	exit ( 1 )	208:8:6258:6265	495439	1	True				
ANR	495460	CallExpression	exit ( 1 )		495439	0					
ANR	495461	Callee	exit		495439	0					
ANR	495462	Identifier	exit		495439	0					
ANR	495463	ArgumentList	1		495439	1					
ANR	495464	Argument	1		495439	0					
ANR	495465	PrimaryExpression	1		495439	0					
ANR	495466	ExpressionStatement	generate_gf ( )	211:4:6278:6291	495439	2	True				
ANR	495467	CallExpression	generate_gf ( )		495439	0					
ANR	495468	Callee	generate_gf		495439	0					
ANR	495469	Identifier	generate_gf		495439	0					
ANR	495470	ArgumentList			495439	1					
ANR	495471	ExpressionStatement	gen_poly ( )	212:4:6297:6307	495439	3	True				
ANR	495472	CallExpression	gen_poly ( )		495439	0					
ANR	495473	Callee	gen_poly		495439	0					
ANR	495474	Identifier	gen_poly		495439	0					
ANR	495475	ArgumentList			495439	1					
ANR	495476	ReturnType	void		495439	1					
ANR	495477	Identifier	init_rs		495439	2					
ANR	495478	ParameterList	int k		495439	3					
ANR	495479	Parameter	int k	203:13:6157:6161	495439	0	True				
ANR	495480	ParameterType	int		495439	0					
ANR	495481	Identifier	k		495439	1					
ANR	495482	CFGEntryNode	ENTRY		495439		True				
ANR	495483	CFGExitNode	EXIT		495439		True				
ANR	495484	Symbol	KK		495439						
ANR	495485	Symbol	NN		495439						
ANR	495486	Symbol	k		495439						
ANR	495487	Function	generate_gf	246:0:8054:9040							
ANR	495488	FunctionDef	generate_gf ()		495487	0					
ANR	495489	CompoundStatement		248:0:8077:9040	495487	0					
ANR	495490	Statement	register	249:4:8083:8090	495487	0	True				
ANR	495491	IdentifierDeclStatement	"int i , mask ;"	249:13:8092:8103	495487	1	True				
ANR	495492	IdentifierDecl	i		495487	0					
ANR	495493	IdentifierDeclType	int		495487	0					
ANR	495494	Identifier	i		495487	1					
ANR	495495	IdentifierDecl	mask		495487	1					
ANR	495496	IdentifierDeclType	int		495487	0					
ANR	495497	Identifier	mask		495487	1					
ANR	495498	ExpressionStatement	mask = 1	251:4:8110:8118	495487	2	True				
ANR	495499	AssignmentExpression	mask = 1		495487	0		=			
ANR	495500	Identifier	mask		495487	0					
ANR	495501	PrimaryExpression	1		495487	1					
ANR	495502	ExpressionStatement	Alpha_to [ MM ] = 0	252:4:8124:8140	495487	3	True				
ANR	495503	AssignmentExpression	Alpha_to [ MM ] = 0		495487	0		=			
ANR	495504	ArrayIndexing	Alpha_to [ MM ]		495487	0					
ANR	495505	Identifier	Alpha_to		495487	0					
ANR	495506	Identifier	MM		495487	1					
ANR	495507	PrimaryExpression	0		495487	1					
ANR	495508	ForStatement	for ( i = 0 ; i < MM ; i ++ )		495487	4					
ANR	495509	ForInit	i = 0 ;	253:9:8151:8156	495487	0	True				
ANR	495510	AssignmentExpression	i = 0		495487	0		=			
ANR	495511	Identifier	i		495487	0					
ANR	495512	PrimaryExpression	0		495487	1					
ANR	495513	Condition	i < MM	253:16:8158:8163	495487	1	True				
ANR	495514	RelationalExpression	i < MM		495487	0		<			
ANR	495515	Identifier	i		495487	0					
ANR	495516	Identifier	MM		495487	1					
ANR	495517	PostIncDecOperationExpression	i ++	253:24:8166:8168	495487	2	True				
ANR	495518	Identifier	i		495487	0					
ANR	495519	IncDec	++		495487	1					
ANR	495520	CompoundStatement		6:29:93:93	495487	3					
ANR	495521	ExpressionStatement	Alpha_to [ i ] = mask	254:8:8181:8199	495487	0	True				
ANR	495522	AssignmentExpression	Alpha_to [ i ] = mask		495487	0		=			
ANR	495523	ArrayIndexing	Alpha_to [ i ]		495487	0					
ANR	495524	Identifier	Alpha_to		495487	0					
ANR	495525	Identifier	i		495487	1					
ANR	495526	Identifier	mask		495487	1					
ANR	495527	ExpressionStatement	Index_of [ Alpha_to [ i ] ] = i	255:8:8209:8234	495487	1	True				
ANR	495528	AssignmentExpression	Index_of [ Alpha_to [ i ] ] = i		495487	0		=			
ANR	495529	ArrayIndexing	Index_of [ Alpha_to [ i ] ]		495487	0					
ANR	495530	Identifier	Index_of		495487	0					
ANR	495531	ArrayIndexing	Alpha_to [ i ]		495487	1					
ANR	495532	Identifier	Alpha_to		495487	0					
ANR	495533	Identifier	i		495487	1					
ANR	495534	Identifier	i		495487	1					
ANR	495535	IfStatement	if ( Pp [ i ] != 0 )		495487	2					
ANR	495536	Condition	Pp [ i ] != 0	257:12:8319:8328	495487	0	True				
ANR	495537	EqualityExpression	Pp [ i ] != 0		495487	0		!=			
ANR	495538	ArrayIndexing	Pp [ i ]		495487	0					
ANR	495539	Identifier	Pp		495487	0					
ANR	495540	Identifier	i		495487	1					
ANR	495541	PrimaryExpression	0		495487	1					
ANR	495542	CompoundStatement		10:24:253:253	495487	1					
ANR	495543	ExpressionStatement	Alpha_to [ MM ] ^= mask	258:12:8345:8365	495487	0	True				
ANR	495544	AssignmentExpression	Alpha_to [ MM ] ^= mask		495487	0		^=			
ANR	495545	ArrayIndexing	Alpha_to [ MM ]		495487	0					
ANR	495546	Identifier	Alpha_to		495487	0					
ANR	495547	Identifier	MM		495487	1					
ANR	495548	Identifier	mask		495487	1					
ANR	495549	ExpressionStatement	mask <<= 1	260:8:8418:8428	495487	3	True				
ANR	495550	AssignmentExpression	mask <<= 1		495487	0		<<=			
ANR	495551	Identifier	mask		495487	0					
ANR	495552	PrimaryExpression	1		495487	1					
ANR	495553	ExpressionStatement	Index_of [ Alpha_to [ MM ] ] = MM	262:4:8464:8491	495487	5	True				
ANR	495554	AssignmentExpression	Index_of [ Alpha_to [ MM ] ] = MM		495487	0		=			
ANR	495555	ArrayIndexing	Index_of [ Alpha_to [ MM ] ]		495487	0					
ANR	495556	Identifier	Index_of		495487	0					
ANR	495557	ArrayIndexing	Alpha_to [ MM ]		495487	1					
ANR	495558	Identifier	Alpha_to		495487	0					
ANR	495559	Identifier	MM		495487	1					
ANR	495560	Identifier	MM		495487	1					
ANR	495561	ExpressionStatement	mask >>= 1	268:4:8719:8729	495487	6	True				
ANR	495562	AssignmentExpression	mask >>= 1		495487	0		>>=			
ANR	495563	Identifier	mask		495487	0					
ANR	495564	PrimaryExpression	1		495487	1					
ANR	495565	ForStatement	for ( i = MM + 1 ; i < NN ; i ++ )		495487	7					
ANR	495566	ForInit	i = MM + 1 ;	269:9:8740:8750	495487	0	True				
ANR	495567	AssignmentExpression	i = MM + 1		495487	0		=			
ANR	495568	Identifier	i		495487	0					
ANR	495569	AdditiveExpression	MM + 1		495487	1		+			
ANR	495570	Identifier	MM		495487	0					
ANR	495571	PrimaryExpression	1		495487	1					
ANR	495572	Condition	i < NN	269:21:8752:8757	495487	1	True				
ANR	495573	RelationalExpression	i < NN		495487	0		<			
ANR	495574	Identifier	i		495487	0					
ANR	495575	Identifier	NN		495487	1					
ANR	495576	PostIncDecOperationExpression	i ++	269:29:8760:8762	495487	2	True				
ANR	495577	Identifier	i		495487	0					
ANR	495578	IncDec	++		495487	1					
ANR	495579	CompoundStatement		22:34:687:687	495487	3					
ANR	495580	IfStatement	if ( Alpha_to [ i - 1 ] >= mask )		495487	0					
ANR	495581	Condition	Alpha_to [ i - 1 ] >= mask	270:12:8779:8801	495487	0	True				
ANR	495582	RelationalExpression	Alpha_to [ i - 1 ] >= mask		495487	0		>=			
ANR	495583	ArrayIndexing	Alpha_to [ i - 1 ]		495487	0					
ANR	495584	Identifier	Alpha_to		495487	0					
ANR	495585	AdditiveExpression	i - 1		495487	1		-			
ANR	495586	Identifier	i		495487	0					
ANR	495587	PrimaryExpression	1		495487	1					
ANR	495588	Identifier	mask		495487	1					
ANR	495589	CompoundStatement		23:37:726:726	495487	1					
ANR	495590	ExpressionStatement	Alpha_to [ i ] = Alpha_to [ MM ] ^ ( ( Alpha_to [ i - 1 ] ^ mask ) << 1 )	271:12:8818:8878	495487	0	True				
ANR	495591	AssignmentExpression	Alpha_to [ i ] = Alpha_to [ MM ] ^ ( ( Alpha_to [ i - 1 ] ^ mask ) << 1 )		495487	0		=			
ANR	495592	ArrayIndexing	Alpha_to [ i ]		495487	0					
ANR	495593	Identifier	Alpha_to		495487	0					
ANR	495594	Identifier	i		495487	1					
ANR	495595	ExclusiveOrExpression	Alpha_to [ MM ] ^ ( ( Alpha_to [ i - 1 ] ^ mask ) << 1 )		495487	1		^			
ANR	495596	ArrayIndexing	Alpha_to [ MM ]		495487	0					
ANR	495597	Identifier	Alpha_to		495487	0					
ANR	495598	Identifier	MM		495487	1					
ANR	495599	ShiftExpression	( Alpha_to [ i - 1 ] ^ mask ) << 1		495487	1		<<			
ANR	495600	ExclusiveOrExpression	Alpha_to [ i - 1 ] ^ mask		495487	0		^			
ANR	495601	ArrayIndexing	Alpha_to [ i - 1 ]		495487	0					
ANR	495602	Identifier	Alpha_to		495487	0					
ANR	495603	AdditiveExpression	i - 1		495487	1		-			
ANR	495604	Identifier	i		495487	0					
ANR	495605	PrimaryExpression	1		495487	1					
ANR	495606	Identifier	mask		495487	1					
ANR	495607	PrimaryExpression	1		495487	1					
ANR	495608	ElseStatement	else		495487	0					
ANR	495609	CompoundStatement		25:15:817:817	495487	0					
ANR	495610	ExpressionStatement	Alpha_to [ i ] = Alpha_to [ i - 1 ] << 1	273:12:8909:8943	495487	0	True				
ANR	495611	AssignmentExpression	Alpha_to [ i ] = Alpha_to [ i - 1 ] << 1		495487	0		=			
ANR	495612	ArrayIndexing	Alpha_to [ i ]		495487	0					
ANR	495613	Identifier	Alpha_to		495487	0					
ANR	495614	Identifier	i		495487	1					
ANR	495615	ShiftExpression	Alpha_to [ i - 1 ] << 1		495487	1		<<			
ANR	495616	ArrayIndexing	Alpha_to [ i - 1 ]		495487	0					
ANR	495617	Identifier	Alpha_to		495487	0					
ANR	495618	AdditiveExpression	i - 1		495487	1		-			
ANR	495619	Identifier	i		495487	0					
ANR	495620	PrimaryExpression	1		495487	1					
ANR	495621	PrimaryExpression	1		495487	1					
ANR	495622	ExpressionStatement	Index_of [ Alpha_to [ i ] ] = i	275:8:8963:8988	495487	1	True				
ANR	495623	AssignmentExpression	Index_of [ Alpha_to [ i ] ] = i		495487	0		=			
ANR	495624	ArrayIndexing	Index_of [ Alpha_to [ i ] ]		495487	0					
ANR	495625	Identifier	Index_of		495487	0					
ANR	495626	ArrayIndexing	Alpha_to [ i ]		495487	1					
ANR	495627	Identifier	Alpha_to		495487	0					
ANR	495628	Identifier	i		495487	1					
ANR	495629	Identifier	i		495487	1					
ANR	495630	ExpressionStatement	Index_of [ 0 ] = A0	277:4:9000:9016	495487	8	True				
ANR	495631	AssignmentExpression	Index_of [ 0 ] = A0		495487	0		=			
ANR	495632	ArrayIndexing	Index_of [ 0 ]		495487	0					
ANR	495633	Identifier	Index_of		495487	0					
ANR	495634	PrimaryExpression	0		495487	1					
ANR	495635	Identifier	A0		495487	1					
ANR	495636	ExpressionStatement	Alpha_to [ NN ] = 0	278:4:9022:9038	495487	9	True				
ANR	495637	AssignmentExpression	Alpha_to [ NN ] = 0		495487	0		=			
ANR	495638	ArrayIndexing	Alpha_to [ NN ]		495487	0					
ANR	495639	Identifier	Alpha_to		495487	0					
ANR	495640	Identifier	NN		495487	1					
ANR	495641	PrimaryExpression	0		495487	1					
ANR	495642	ReturnType	void		495487	1					
ANR	495643	Identifier	generate_gf		495487	2					
ANR	495644	ParameterList			495487	3					
ANR	495645	CFGEntryNode	ENTRY		495487		True				
ANR	495646	CFGExitNode	EXIT		495487		True				
ANR	495647	Symbol	MM		495487						
ANR	495648	Symbol	Pp		495487						
ANR	495649	Symbol	NN		495487						
ANR	495650	Symbol	* * Alpha_to		495487						
ANR	495651	Symbol	* * i		495487						
ANR	495652	Symbol	* MM		495487						
ANR	495653	Symbol	* Pp		495487						
ANR	495654	Symbol	* NN		495487						
ANR	495655	Symbol	i		495487						
ANR	495656	Symbol	Index_of		495487						
ANR	495657	Symbol	* * MM		495487						
ANR	495658	Symbol	Alpha_to		495487						
ANR	495659	Symbol	A0		495487						
ANR	495660	Symbol	* i		495487						
ANR	495661	Symbol	* Index_of		495487						
ANR	495662	Symbol	mask		495487						
ANR	495663	Symbol	* Alpha_to		495487						
ANR	495664	Function	gen_poly	295:0:9390:10148							
ANR	495665	FunctionDef	gen_poly ()		495664	0					
ANR	495666	CompoundStatement		297:0:9410:10148	495664	0					
ANR	495667	Statement	register	298:4:9416:9423	495664	0	True				
ANR	495668	IdentifierDeclStatement	"int i , j ;"	298:13:9425:9433	495664	1	True				
ANR	495669	IdentifierDecl	i		495664	0					
ANR	495670	IdentifierDeclType	int		495664	0					
ANR	495671	Identifier	i		495664	1					
ANR	495672	IdentifierDecl	j		495664	1					
ANR	495673	IdentifierDeclType	int		495664	0					
ANR	495674	Identifier	j		495664	1					
ANR	495675	ExpressionStatement	Gg [ 0 ] = Alpha_to [ B0 ]	300:4:9440:9460	495664	2	True				
ANR	495676	AssignmentExpression	Gg [ 0 ] = Alpha_to [ B0 ]		495664	0		=			
ANR	495677	ArrayIndexing	Gg [ 0 ]		495664	0					
ANR	495678	Identifier	Gg		495664	0					
ANR	495679	PrimaryExpression	0		495664	1					
ANR	495680	ArrayIndexing	Alpha_to [ B0 ]		495664	1					
ANR	495681	Identifier	Alpha_to		495664	0					
ANR	495682	Identifier	B0		495664	1					
ANR	495683	ExpressionStatement	Gg [ 1 ] = 1	301:4:9466:9475	495664	3	True				
ANR	495684	AssignmentExpression	Gg [ 1 ] = 1		495664	0		=			
ANR	495685	ArrayIndexing	Gg [ 1 ]		495664	0					
ANR	495686	Identifier	Gg		495664	0					
ANR	495687	PrimaryExpression	1		495664	1					
ANR	495688	PrimaryExpression	1		495664	1					
ANR	495689	ForStatement	for ( i = 2 ; i <= NN - KK ; i ++ )		495664	4					
ANR	495690	ForInit	i = 2 ;	302:9:9524:9529	495664	0	True				
ANR	495691	AssignmentExpression	i = 2		495664	0		=			
ANR	495692	Identifier	i		495664	0					
ANR	495693	PrimaryExpression	2		495664	1					
ANR	495694	Condition	i <= NN - KK	302:16:9531:9542	495664	1	True				
ANR	495695	RelationalExpression	i <= NN - KK		495664	0		<=			
ANR	495696	Identifier	i		495664	0					
ANR	495697	AdditiveExpression	NN - KK		495664	1		-			
ANR	495698	Identifier	NN		495664	0					
ANR	495699	Identifier	KK		495664	1					
ANR	495700	PostIncDecOperationExpression	i ++	302:30:9545:9547	495664	2	True				
ANR	495701	Identifier	i		495664	0					
ANR	495702	IncDec	++		495664	1					
ANR	495703	CompoundStatement		6:35:139:139	495664	3					
ANR	495704	ExpressionStatement	Gg [ i ] = 1	303:8:9560:9569	495664	0	True				
ANR	495705	AssignmentExpression	Gg [ i ] = 1		495664	0		=			
ANR	495706	ArrayIndexing	Gg [ i ]		495664	0					
ANR	495707	Identifier	Gg		495664	0					
ANR	495708	Identifier	i		495664	1					
ANR	495709	PrimaryExpression	1		495664	1					
ANR	495710	ForStatement	for ( j = i - 1 ; j > 0 ; j -- )		495664	1					
ANR	495711	ForInit	j = i - 1 ;	308:13:9697:9706	495664	0	True				
ANR	495712	AssignmentExpression	j = i - 1		495664	0		=			
ANR	495713	Identifier	j		495664	0					
ANR	495714	AdditiveExpression	i - 1		495664	1		-			
ANR	495715	Identifier	i		495664	0					
ANR	495716	PrimaryExpression	1		495664	1					
ANR	495717	Condition	j > 0	308:24:9708:9712	495664	1	True				
ANR	495718	RelationalExpression	j > 0		495664	0		>			
ANR	495719	Identifier	j		495664	0					
ANR	495720	PrimaryExpression	0		495664	1					
ANR	495721	PostIncDecOperationExpression	j --	308:31:9715:9717	495664	2	True				
ANR	495722	Identifier	j		495664	0					
ANR	495723	IncDec	--		495664	1					
ANR	495724	IfStatement	if ( Gg [ j ] != 0 )		495664	3					
ANR	495725	Condition	Gg [ j ] != 0	309:16:9736:9745	495664	0	True				
ANR	495726	EqualityExpression	Gg [ j ] != 0		495664	0		!=			
ANR	495727	ArrayIndexing	Gg [ j ]		495664	0					
ANR	495728	Identifier	Gg		495664	0					
ANR	495729	Identifier	j		495664	1					
ANR	495730	PrimaryExpression	0		495664	1					
ANR	495731	CompoundStatement		13:28:337:337	495664	1					
ANR	495732	ExpressionStatement	Gg [ j ] = Gg [ j - 1 ] ^ Alpha_to [ modnn ( ( Index_of [ Gg [ j ] ] ) + B0 + i - 1 ) ]	310:16:9766:9833	495664	0	True				
ANR	495733	AssignmentExpression	Gg [ j ] = Gg [ j - 1 ] ^ Alpha_to [ modnn ( ( Index_of [ Gg [ j ] ] ) + B0 + i - 1 ) ]		495664	0		=			
ANR	495734	ArrayIndexing	Gg [ j ]		495664	0					
ANR	495735	Identifier	Gg		495664	0					
ANR	495736	Identifier	j		495664	1					
ANR	495737	ExclusiveOrExpression	Gg [ j - 1 ] ^ Alpha_to [ modnn ( ( Index_of [ Gg [ j ] ] ) + B0 + i - 1 ) ]		495664	1		^			
ANR	495738	ArrayIndexing	Gg [ j - 1 ]		495664	0					
ANR	495739	Identifier	Gg		495664	0					
ANR	495740	AdditiveExpression	j - 1		495664	1		-			
ANR	495741	Identifier	j		495664	0					
ANR	495742	PrimaryExpression	1		495664	1					
ANR	495743	ArrayIndexing	Alpha_to [ modnn ( ( Index_of [ Gg [ j ] ] ) + B0 + i - 1 ) ]		495664	1					
ANR	495744	Identifier	Alpha_to		495664	0					
ANR	495745	CallExpression	modnn ( ( Index_of [ Gg [ j ] ] ) + B0 + i - 1 )		495664	1					
ANR	495746	Callee	modnn		495664	0					
ANR	495747	Identifier	modnn		495664	0					
ANR	495748	ArgumentList	( Index_of [ Gg [ j ] ] ) + B0 + i - 1		495664	1					
ANR	495749	Argument	( Index_of [ Gg [ j ] ] ) + B0 + i - 1		495664	0					
ANR	495750	AdditiveExpression	( Index_of [ Gg [ j ] ] ) + B0 + i - 1		495664	0		+			
ANR	495751	ArrayIndexing	Index_of [ Gg [ j ] ]		495664	0					
ANR	495752	Identifier	Index_of		495664	0					
ANR	495753	ArrayIndexing	Gg [ j ]		495664	1					
ANR	495754	Identifier	Gg		495664	0					
ANR	495755	Identifier	j		495664	1					
ANR	495756	AdditiveExpression	B0 + i - 1		495664	1		+			
ANR	495757	Identifier	B0		495664	0					
ANR	495758	AdditiveExpression	i - 1		495664	1		-			
ANR	495759	Identifier	i		495664	0					
ANR	495760	PrimaryExpression	1		495664	1					
ANR	495761	ElseStatement	else		495664	0					
ANR	495762	CompoundStatement		15:19:443:443	495664	0					
ANR	495763	ExpressionStatement	Gg [ j ] = Gg [ j - 1 ]	312:16:9872:9889	495664	0	True				
ANR	495764	AssignmentExpression	Gg [ j ] = Gg [ j - 1 ]		495664	0		=			
ANR	495765	ArrayIndexing	Gg [ j ]		495664	0					
ANR	495766	Identifier	Gg		495664	0					
ANR	495767	Identifier	j		495664	1					
ANR	495768	ArrayIndexing	Gg [ j - 1 ]		495664	1					
ANR	495769	Identifier	Gg		495664	0					
ANR	495770	AdditiveExpression	j - 1		495664	1		-			
ANR	495771	Identifier	j		495664	0					
ANR	495772	PrimaryExpression	1		495664	1					
ANR	495773	ExpressionStatement	Gg [ 0 ] = Alpha_to [ modnn ( ( Index_of [ Gg [ 0 ] ] ) + B0 + i - 1 ) ]	315:8:9951:10006	495664	2	True				
ANR	495774	AssignmentExpression	Gg [ 0 ] = Alpha_to [ modnn ( ( Index_of [ Gg [ 0 ] ] ) + B0 + i - 1 ) ]		495664	0		=			
ANR	495775	ArrayIndexing	Gg [ 0 ]		495664	0					
ANR	495776	Identifier	Gg		495664	0					
ANR	495777	PrimaryExpression	0		495664	1					
ANR	495778	ArrayIndexing	Alpha_to [ modnn ( ( Index_of [ Gg [ 0 ] ] ) + B0 + i - 1 ) ]		495664	1					
ANR	495779	Identifier	Alpha_to		495664	0					
ANR	495780	CallExpression	modnn ( ( Index_of [ Gg [ 0 ] ] ) + B0 + i - 1 )		495664	1					
ANR	495781	Callee	modnn		495664	0					
ANR	495782	Identifier	modnn		495664	0					
ANR	495783	ArgumentList	( Index_of [ Gg [ 0 ] ] ) + B0 + i - 1		495664	1					
ANR	495784	Argument	( Index_of [ Gg [ 0 ] ] ) + B0 + i - 1		495664	0					
ANR	495785	AdditiveExpression	( Index_of [ Gg [ 0 ] ] ) + B0 + i - 1		495664	0		+			
ANR	495786	ArrayIndexing	Index_of [ Gg [ 0 ] ]		495664	0					
ANR	495787	Identifier	Index_of		495664	0					
ANR	495788	ArrayIndexing	Gg [ 0 ]		495664	1					
ANR	495789	Identifier	Gg		495664	0					
ANR	495790	PrimaryExpression	0		495664	1					
ANR	495791	AdditiveExpression	B0 + i - 1		495664	1		+			
ANR	495792	Identifier	B0		495664	0					
ANR	495793	AdditiveExpression	i - 1		495664	1		-			
ANR	495794	Identifier	i		495664	0					
ANR	495795	PrimaryExpression	1		495664	1					
ANR	495796	ForStatement	for ( i = 0 ; i <= NN - KK ; i ++ )		495664	5					
ANR	495797	ForInit	i = 0 ;	318:9:10081:10086	495664	0	True				
ANR	495798	AssignmentExpression	i = 0		495664	0		=			
ANR	495799	Identifier	i		495664	0					
ANR	495800	PrimaryExpression	0		495664	1					
ANR	495801	Condition	i <= NN - KK	318:16:10088:10099	495664	1	True				
ANR	495802	RelationalExpression	i <= NN - KK		495664	0		<=			
ANR	495803	Identifier	i		495664	0					
ANR	495804	AdditiveExpression	NN - KK		495664	1		-			
ANR	495805	Identifier	NN		495664	0					
ANR	495806	Identifier	KK		495664	1					
ANR	495807	PostIncDecOperationExpression	i ++	318:30:10102:10104	495664	2	True				
ANR	495808	Identifier	i		495664	0					
ANR	495809	IncDec	++		495664	1					
ANR	495810	CompoundStatement		22:35:696:696	495664	3					
ANR	495811	ExpressionStatement	Gg [ i ] = Index_of [ Gg [ i ] ]	319:8:10117:10140	495664	0	True				
ANR	495812	AssignmentExpression	Gg [ i ] = Index_of [ Gg [ i ] ]		495664	0		=			
ANR	495813	ArrayIndexing	Gg [ i ]		495664	0					
ANR	495814	Identifier	Gg		495664	0					
ANR	495815	Identifier	i		495664	1					
ANR	495816	ArrayIndexing	Index_of [ Gg [ i ] ]		495664	1					
ANR	495817	Identifier	Index_of		495664	0					
ANR	495818	ArrayIndexing	Gg [ i ]		495664	1					
ANR	495819	Identifier	Gg		495664	0					
ANR	495820	Identifier	i		495664	1					
ANR	495821	ReturnType	void		495664	1					
ANR	495822	Identifier	gen_poly		495664	2					
ANR	495823	ParameterList			495664	3					
ANR	495824	CFGEntryNode	ENTRY		495664		True				
ANR	495825	CFGExitNode	EXIT		495664		True				
ANR	495826	Symbol	Gg		495664						
ANR	495827	Symbol	KK		495664						
ANR	495828	Symbol	NN		495664						
ANR	495829	Symbol	* * j		495664						
ANR	495830	Symbol	* * i		495664						
ANR	495831	Symbol	* Gg		495664						
ANR	495832	Symbol	i		495664						
ANR	495833	Symbol	j		495664						
ANR	495834	Symbol	Index_of		495664						
ANR	495835	Symbol	B0		495664						
ANR	495836	Symbol	* * Gg		495664						
ANR	495837	Symbol	Alpha_to		495664						
ANR	495838	Symbol	modnn		495664						
ANR	495839	Symbol	* i		495664						
ANR	495840	Symbol	* Index_of		495664						
ANR	495841	Symbol	* j		495664						
ANR	495842	Symbol	* B0		495664						
ANR	495843	Symbol	* modnn		495664						
ANR	495844	Symbol	* Alpha_to		495664						
ANR	495845	Function	encode_rs	332:0:10551:11480							
ANR	495846	FunctionDef	"encode_rs (dtype * data , dtype * bb)"		495845	0					
ANR	495847	CompoundStatement		334:0:10589:11480	495845	0					
ANR	495848	Statement	register	335:4:10595:10602	495845	0	True				
ANR	495849	IdentifierDeclStatement	"int i , j ;"	335:13:10604:10612	495845	1	True				
ANR	495850	IdentifierDecl	i		495845	0					
ANR	495851	IdentifierDeclType	int		495845	0					
ANR	495852	Identifier	i		495845	1					
ANR	495853	IdentifierDecl	j		495845	1					
ANR	495854	IdentifierDeclType	int		495845	0					
ANR	495855	Identifier	j		495845	1					
ANR	495856	IdentifierDeclStatement	gf feedback ;	336:4:10618:10629	495845	2	True				
ANR	495857	IdentifierDecl	feedback		495845	0					
ANR	495858	IdentifierDeclType	gf		495845	0					
ANR	495859	Identifier	feedback		495845	1					
ANR	495860	ExpressionStatement	"CLEAR ( bb , NN - KK )"	338:4:10636:10654	495845	3	True				
ANR	495861	CallExpression	"CLEAR ( bb , NN - KK )"		495845	0					
ANR	495862	Callee	CLEAR		495845	0					
ANR	495863	Identifier	CLEAR		495845	0					
ANR	495864	ArgumentList	bb		495845	1					
ANR	495865	Argument	bb		495845	0					
ANR	495866	Identifier	bb		495845	0					
ANR	495867	Argument	NN - KK		495845	1					
ANR	495868	AdditiveExpression	NN - KK		495845	0		-			
ANR	495869	Identifier	NN		495845	0					
ANR	495870	Identifier	KK		495845	1					
ANR	495871	ForStatement	for ( i = KK - 1 ; i >= 0 ; i -- )		495845	4					
ANR	495872	ForInit	i = KK - 1 ;	339:9:10665:10675	495845	0	True				
ANR	495873	AssignmentExpression	i = KK - 1		495845	0		=			
ANR	495874	Identifier	i		495845	0					
ANR	495875	AdditiveExpression	KK - 1		495845	1		-			
ANR	495876	Identifier	KK		495845	0					
ANR	495877	PrimaryExpression	1		495845	1					
ANR	495878	Condition	i >= 0	339:21:10677:10682	495845	1	True				
ANR	495879	RelationalExpression	i >= 0		495845	0		>=			
ANR	495880	Identifier	i		495845	0					
ANR	495881	PrimaryExpression	0		495845	1					
ANR	495882	PostIncDecOperationExpression	i --	339:29:10685:10687	495845	2	True				
ANR	495883	Identifier	i		495845	0					
ANR	495884	IncDec	--		495845	1					
ANR	495885	CompoundStatement		6:34:100:100	495845	3					
ANR	495886	IfStatement	if ( data [ i ] > NN )		495845	0					
ANR	495887	Condition	data [ i ] > NN	341:12:10718:10729	495845	0	True				
ANR	495888	RelationalExpression	data [ i ] > NN		495845	0		>			
ANR	495889	ArrayIndexing	data [ i ]		495845	0					
ANR	495890	Identifier	data		495845	0					
ANR	495891	Identifier	i		495845	1					
ANR	495892	Identifier	NN		495845	1					
ANR	495893	CompoundStatement		8:26:142:142	495845	1					
ANR	495894	ReturnStatement	return - 1 ;	342:12:10746:10755	495845	0	True				
ANR	495895	UnaryOperationExpression	- 1		495845	0					
ANR	495896	UnaryOperator	-		495845	0					
ANR	495897	PrimaryExpression	1		495845	1					
ANR	495898	ExpressionStatement	feedback = Index_of [ data [ i ] ^ bb [ NN - KK - 1 ] ]	345:8:10806:10852	495845	1	True				
ANR	495899	AssignmentExpression	feedback = Index_of [ data [ i ] ^ bb [ NN - KK - 1 ] ]		495845	0		=			
ANR	495900	Identifier	feedback		495845	0					
ANR	495901	ArrayIndexing	Index_of [ data [ i ] ^ bb [ NN - KK - 1 ] ]		495845	1					
ANR	495902	Identifier	Index_of		495845	0					
ANR	495903	ExclusiveOrExpression	data [ i ] ^ bb [ NN - KK - 1 ]		495845	1		^			
ANR	495904	ArrayIndexing	data [ i ]		495845	0					
ANR	495905	Identifier	data		495845	0					
ANR	495906	Identifier	i		495845	1					
ANR	495907	ArrayIndexing	bb [ NN - KK - 1 ]		495845	1					
ANR	495908	Identifier	bb		495845	0					
ANR	495909	AdditiveExpression	NN - KK - 1		495845	1		-			
ANR	495910	Identifier	NN		495845	0					
ANR	495911	AdditiveExpression	KK - 1		495845	1		-			
ANR	495912	Identifier	KK		495845	0					
ANR	495913	PrimaryExpression	1		495845	1					
ANR	495914	IfStatement	if ( feedback != A0 )		495845	2					
ANR	495915	Condition	feedback != A0	346:12:10866:10879	495845	0	True				
ANR	495916	EqualityExpression	feedback != A0		495845	0		!=			
ANR	495917	Identifier	feedback		495845	0					
ANR	495918	Identifier	A0		495845	1					
ANR	495919	CompoundStatement		13:28:292:292	495845	1					
ANR	495920	ForStatement	for ( j = NN - KK - 1 ; j > 0 ; j -- )		495845	0					
ANR	495921	ForInit	j = NN - KK - 1 ;	347:17:10935:10950	495845	0	True				
ANR	495922	AssignmentExpression	j = NN - KK - 1		495845	0		=			
ANR	495923	Identifier	j		495845	0					
ANR	495924	AdditiveExpression	NN - KK - 1		495845	1		-			
ANR	495925	Identifier	NN		495845	0					
ANR	495926	AdditiveExpression	KK - 1		495845	1		-			
ANR	495927	Identifier	KK		495845	0					
ANR	495928	PrimaryExpression	1		495845	1					
ANR	495929	Condition	j > 0	347:34:10952:10956	495845	1	True				
ANR	495930	RelationalExpression	j > 0		495845	0		>			
ANR	495931	Identifier	j		495845	0					
ANR	495932	PrimaryExpression	0		495845	1					
ANR	495933	PostIncDecOperationExpression	j --	347:41:10959:10961	495845	2	True				
ANR	495934	Identifier	j		495845	0					
ANR	495935	IncDec	--		495845	1					
ANR	495936	IfStatement	if ( Gg [ j ] != A0 )		495845	3					
ANR	495937	Condition	Gg [ j ] != A0	348:20:10984:10994	495845	0	True				
ANR	495938	EqualityExpression	Gg [ j ] != A0		495845	0		!=			
ANR	495939	ArrayIndexing	Gg [ j ]		495845	0					
ANR	495940	Identifier	Gg		495845	0					
ANR	495941	Identifier	j		495845	1					
ANR	495942	Identifier	A0		495845	1					
ANR	495943	CompoundStatement		15:33:407:407	495845	1					
ANR	495944	ExpressionStatement	bb [ j ] = bb [ j - 1 ] ^ Alpha_to [ modnn ( Gg [ j ] + feedback ) ]	349:20:11019:11072	495845	0	True				
ANR	495945	AssignmentExpression	bb [ j ] = bb [ j - 1 ] ^ Alpha_to [ modnn ( Gg [ j ] + feedback ) ]		495845	0		=			
ANR	495946	ArrayIndexing	bb [ j ]		495845	0					
ANR	495947	Identifier	bb		495845	0					
ANR	495948	Identifier	j		495845	1					
ANR	495949	ExclusiveOrExpression	bb [ j - 1 ] ^ Alpha_to [ modnn ( Gg [ j ] + feedback ) ]		495845	1		^			
ANR	495950	ArrayIndexing	bb [ j - 1 ]		495845	0					
ANR	495951	Identifier	bb		495845	0					
ANR	495952	AdditiveExpression	j - 1		495845	1		-			
ANR	495953	Identifier	j		495845	0					
ANR	495954	PrimaryExpression	1		495845	1					
ANR	495955	ArrayIndexing	Alpha_to [ modnn ( Gg [ j ] + feedback ) ]		495845	1					
ANR	495956	Identifier	Alpha_to		495845	0					
ANR	495957	CallExpression	modnn ( Gg [ j ] + feedback )		495845	1					
ANR	495958	Callee	modnn		495845	0					
ANR	495959	Identifier	modnn		495845	0					
ANR	495960	ArgumentList	Gg [ j ] + feedback		495845	1					
ANR	495961	Argument	Gg [ j ] + feedback		495845	0					
ANR	495962	AdditiveExpression	Gg [ j ] + feedback		495845	0		+			
ANR	495963	ArrayIndexing	Gg [ j ]		495845	0					
ANR	495964	Identifier	Gg		495845	0					
ANR	495965	Identifier	j		495845	1					
ANR	495966	Identifier	feedback		495845	1					
ANR	495967	ElseStatement	else		495845	0					
ANR	495968	CompoundStatement		17:23:507:507	495845	0					
ANR	495969	ExpressionStatement	bb [ j ] = bb [ j - 1 ]	351:20:11119:11136	495845	0	True				
ANR	495970	AssignmentExpression	bb [ j ] = bb [ j - 1 ]		495845	0		=			
ANR	495971	ArrayIndexing	bb [ j ]		495845	0					
ANR	495972	Identifier	bb		495845	0					
ANR	495973	Identifier	j		495845	1					
ANR	495974	ArrayIndexing	bb [ j - 1 ]		495845	1					
ANR	495975	Identifier	bb		495845	0					
ANR	495976	AdditiveExpression	j - 1		495845	1		-			
ANR	495977	Identifier	j		495845	0					
ANR	495978	PrimaryExpression	1		495845	1					
ANR	495979	ExpressionStatement	bb [ 0 ] = Alpha_to [ modnn ( Gg [ 0 ] + feedback ) ]	353:12:11168:11209	495845	1	True				
ANR	495980	AssignmentExpression	bb [ 0 ] = Alpha_to [ modnn ( Gg [ 0 ] + feedback ) ]		495845	0		=			
ANR	495981	ArrayIndexing	bb [ 0 ]		495845	0					
ANR	495982	Identifier	bb		495845	0					
ANR	495983	PrimaryExpression	0		495845	1					
ANR	495984	ArrayIndexing	Alpha_to [ modnn ( Gg [ 0 ] + feedback ) ]		495845	1					
ANR	495985	Identifier	Alpha_to		495845	0					
ANR	495986	CallExpression	modnn ( Gg [ 0 ] + feedback )		495845	1					
ANR	495987	Callee	modnn		495845	0					
ANR	495988	Identifier	modnn		495845	0					
ANR	495989	ArgumentList	Gg [ 0 ] + feedback		495845	1					
ANR	495990	Argument	Gg [ 0 ] + feedback		495845	0					
ANR	495991	AdditiveExpression	Gg [ 0 ] + feedback		495845	0		+			
ANR	495992	ArrayIndexing	Gg [ 0 ]		495845	0					
ANR	495993	Identifier	Gg		495845	0					
ANR	495994	PrimaryExpression	0		495845	1					
ANR	495995	Identifier	feedback		495845	1					
ANR	495996	ElseStatement	else		495845	0					
ANR	495997	CompoundStatement		21:15:636:636	495845	0					
ANR	495998	ForStatement	for ( j = NN - KK - 1 ; j > 0 ; j -- )		495845	0					
ANR	495999	ForInit	j = NN - KK - 1 ;	357:17:11347:11362	495845	0	True				
ANR	496000	AssignmentExpression	j = NN - KK - 1		495845	0		=			
ANR	496001	Identifier	j		495845	0					
ANR	496002	AdditiveExpression	NN - KK - 1		495845	1		-			
ANR	496003	Identifier	NN		495845	0					
ANR	496004	AdditiveExpression	KK - 1		495845	1		-			
ANR	496005	Identifier	KK		495845	0					
ANR	496006	PrimaryExpression	1		495845	1					
ANR	496007	Condition	j > 0	357:34:11364:11368	495845	1	True				
ANR	496008	RelationalExpression	j > 0		495845	0		>			
ANR	496009	Identifier	j		495845	0					
ANR	496010	PrimaryExpression	0		495845	1					
ANR	496011	PostIncDecOperationExpression	j --	357:41:11371:11373	495845	2	True				
ANR	496012	Identifier	j		495845	0					
ANR	496013	IncDec	--		495845	1					
ANR	496014	CompoundStatement		24:46:786:786	495845	3					
ANR	496015	ExpressionStatement	bb [ j ] = bb [ j - 1 ]	358:16:11394:11411	495845	0	True				
ANR	496016	AssignmentExpression	bb [ j ] = bb [ j - 1 ]		495845	0		=			
ANR	496017	ArrayIndexing	bb [ j ]		495845	0					
ANR	496018	Identifier	bb		495845	0					
ANR	496019	Identifier	j		495845	1					
ANR	496020	ArrayIndexing	bb [ j - 1 ]		495845	1					
ANR	496021	Identifier	bb		495845	0					
ANR	496022	AdditiveExpression	j - 1		495845	1		-			
ANR	496023	Identifier	j		495845	0					
ANR	496024	PrimaryExpression	1		495845	1					
ANR	496025	ExpressionStatement	bb [ 0 ] = 0	360:12:11439:11448	495845	1	True				
ANR	496026	AssignmentExpression	bb [ 0 ] = 0		495845	0		=			
ANR	496027	ArrayIndexing	bb [ 0 ]		495845	0					
ANR	496028	Identifier	bb		495845	0					
ANR	496029	PrimaryExpression	0		495845	1					
ANR	496030	PrimaryExpression	0		495845	1					
ANR	496031	ReturnStatement	return 0 ;	363:4:11470:11478	495845	5	True				
ANR	496032	PrimaryExpression	0		495845	0					
ANR	496033	ReturnType	int		495845	1					
ANR	496034	Identifier	encode_rs		495845	2					
ANR	496035	ParameterList	"dtype * data , dtype * bb"		495845	3					
ANR	496036	Parameter	dtype * data	333:10:10565:10575	495845	0	True				
ANR	496037	ParameterType	dtype *		495845	0					
ANR	496038	Identifier	data		495845	1					
ANR	496039	Parameter	dtype * bb	333:23:10578:10586	495845	1	True				
ANR	496040	ParameterType	dtype *		495845	0					
ANR	496041	Identifier	bb		495845	1					
ANR	496042	CFGEntryNode	ENTRY		495845		True				
ANR	496043	CFGExitNode	EXIT		495845		True				
ANR	496044	Symbol	bb		495845						
ANR	496045	Symbol	NN		495845						
ANR	496046	Symbol	* * data		495845						
ANR	496047	Symbol	Gg		495845						
ANR	496048	Symbol	data		495845						
ANR	496049	Symbol	* KK		495845						
ANR	496050	Symbol	Index_of		495845						
ANR	496051	Symbol	* * KK		495845						
ANR	496052	Symbol	A0		495845						
ANR	496053	Symbol	Alpha_to		495845						
ANR	496054	Symbol	feedback		495845						
ANR	496055	Symbol	* Index_of		495845						
ANR	496056	Symbol	* modnn		495845						
ANR	496057	Symbol	KK		495845						
ANR	496058	Symbol	* * i		495845						
ANR	496059	Symbol	* NN		495845						
ANR	496060	Symbol	* bb		495845						
ANR	496061	Symbol	* Gg		495845						
ANR	496062	Symbol	i		495845						
ANR	496063	Symbol	j		495845						
ANR	496064	Symbol	* * bb		495845						
ANR	496065	Symbol	* * NN		495845						
ANR	496066	Symbol	modnn		495845						
ANR	496067	Symbol	* i		495845						
ANR	496068	Symbol	* j		495845						
ANR	496069	Symbol	* data		495845						
ANR	496070	Symbol	* Alpha_to		495845						
ANR	496071	Function	eras_dec_rs	379:0:12099:19673							
ANR	496072	FunctionDef	"eras_dec_rs (dtype * data , int * eras_pos , int no_eras)"		496071	0					
ANR	496073	CompoundStatement		381:0:12156:19673	496071	0					
ANR	496074	IdentifierDeclStatement	"int deg_lambda , el , deg_omega ;"	382:4:12162:12191	496071	0	True				
ANR	496075	IdentifierDecl	deg_lambda		496071	0					
ANR	496076	IdentifierDeclType	int		496071	0					
ANR	496077	Identifier	deg_lambda		496071	1					
ANR	496078	IdentifierDecl	el		496071	1					
ANR	496079	IdentifierDeclType	int		496071	0					
ANR	496080	Identifier	el		496071	1					
ANR	496081	IdentifierDecl	deg_omega		496071	2					
ANR	496082	IdentifierDeclType	int		496071	0					
ANR	496083	Identifier	deg_omega		496071	1					
ANR	496084	IdentifierDeclStatement	"int i , j , r ;"	383:4:12197:12208	496071	1	True				
ANR	496085	IdentifierDecl	i		496071	0					
ANR	496086	IdentifierDeclType	int		496071	0					
ANR	496087	Identifier	i		496071	1					
ANR	496088	IdentifierDecl	j		496071	1					
ANR	496089	IdentifierDeclType	int		496071	0					
ANR	496090	Identifier	j		496071	1					
ANR	496091	IdentifierDecl	r		496071	2					
ANR	496092	IdentifierDeclType	int		496071	0					
ANR	496093	Identifier	r		496071	1					
ANR	496094	IdentifierDeclStatement	"gf u , q , tmp , num1 , num2 , den , discr_r ;"	384:4:12214:12252	496071	2	True				
ANR	496095	IdentifierDecl	u		496071	0					
ANR	496096	IdentifierDeclType	gf		496071	0					
ANR	496097	Identifier	u		496071	1					
ANR	496098	IdentifierDecl	q		496071	1					
ANR	496099	IdentifierDeclType	gf		496071	0					
ANR	496100	Identifier	q		496071	1					
ANR	496101	IdentifierDecl	tmp		496071	2					
ANR	496102	IdentifierDeclType	gf		496071	0					
ANR	496103	Identifier	tmp		496071	1					
ANR	496104	IdentifierDecl	num1		496071	3					
ANR	496105	IdentifierDeclType	gf		496071	0					
ANR	496106	Identifier	num1		496071	1					
ANR	496107	IdentifierDecl	num2		496071	4					
ANR	496108	IdentifierDeclType	gf		496071	0					
ANR	496109	Identifier	num2		496071	1					
ANR	496110	IdentifierDecl	den		496071	5					
ANR	496111	IdentifierDeclType	gf		496071	0					
ANR	496112	Identifier	den		496071	1					
ANR	496113	IdentifierDecl	discr_r		496071	6					
ANR	496114	IdentifierDeclType	gf		496071	0					
ANR	496115	Identifier	discr_r		496071	1					
ANR	496116	IdentifierDeclStatement	gf recd [ NN ] ;	385:4:12258:12269	496071	3	True				
ANR	496117	IdentifierDecl	recd [ NN ]		496071	0					
ANR	496118	IdentifierDeclType	gf [ NN ]		496071	0					
ANR	496119	Identifier	recd		496071	1					
ANR	496120	Identifier	NN		496071	2					
ANR	496121	IdentifierDeclStatement	"gf lambda [ NN + 1 ] , s [ NN + 1 ] ;"	390:4:12470:12498	496071	4	True				
ANR	496122	IdentifierDecl	lambda [ NN + 1 ]		496071	0					
ANR	496123	IdentifierDeclType	gf [ NN + 1 ]		496071	0					
ANR	496124	Identifier	lambda		496071	1					
ANR	496125	AdditiveExpression	NN + 1		496071	2		+			
ANR	496126	Identifier	NN		496071	0					
ANR	496127	PrimaryExpression	1		496071	1					
ANR	496128	IdentifierDecl	s [ NN + 1 ]		496071	1					
ANR	496129	IdentifierDeclType	gf [ NN + 1 ]		496071	0					
ANR	496130	Identifier	s		496071	1					
ANR	496131	AdditiveExpression	NN + 1		496071	2		+			
ANR	496132	Identifier	NN		496071	0					
ANR	496133	PrimaryExpression	1		496071	1					
ANR	496134	IdentifierDeclStatement	"gf b [ NN + 1 ] , t [ NN + 1 ] , omega [ NN + 1 ] ;"	391:4:12504:12542	496071	5	True				
ANR	496135	IdentifierDecl	b [ NN + 1 ]		496071	0					
ANR	496136	IdentifierDeclType	gf [ NN + 1 ]		496071	0					
ANR	496137	Identifier	b		496071	1					
ANR	496138	AdditiveExpression	NN + 1		496071	2		+			
ANR	496139	Identifier	NN		496071	0					
ANR	496140	PrimaryExpression	1		496071	1					
ANR	496141	IdentifierDecl	t [ NN + 1 ]		496071	1					
ANR	496142	IdentifierDeclType	gf [ NN + 1 ]		496071	0					
ANR	496143	Identifier	t		496071	1					
ANR	496144	AdditiveExpression	NN + 1		496071	2		+			
ANR	496145	Identifier	NN		496071	0					
ANR	496146	PrimaryExpression	1		496071	1					
ANR	496147	IdentifierDecl	omega [ NN + 1 ]		496071	2					
ANR	496148	IdentifierDeclType	gf [ NN + 1 ]		496071	0					
ANR	496149	Identifier	omega		496071	1					
ANR	496150	AdditiveExpression	NN + 1		496071	2		+			
ANR	496151	Identifier	NN		496071	0					
ANR	496152	PrimaryExpression	1		496071	1					
ANR	496153	IdentifierDeclStatement	"gf root [ NN ] , reg [ NN + 1 ] , loc [ NN ] ;"	392:4:12548:12581	496071	6	True				
ANR	496154	IdentifierDecl	root [ NN ]		496071	0					
ANR	496155	IdentifierDeclType	gf [ NN ]		496071	0					
ANR	496156	Identifier	root		496071	1					
ANR	496157	Identifier	NN		496071	2					
ANR	496158	IdentifierDecl	reg [ NN + 1 ]		496071	1					
ANR	496159	IdentifierDeclType	gf [ NN + 1 ]		496071	0					
ANR	496160	Identifier	reg		496071	1					
ANR	496161	AdditiveExpression	NN + 1		496071	2		+			
ANR	496162	Identifier	NN		496071	0					
ANR	496163	PrimaryExpression	1		496071	1					
ANR	496164	IdentifierDecl	loc [ NN ]		496071	2					
ANR	496165	IdentifierDeclType	gf [ NN ]		496071	0					
ANR	496166	Identifier	loc		496071	1					
ANR	496167	Identifier	NN		496071	2					
ANR	496168	IdentifierDeclStatement	"int syn_error , count ;"	393:4:12587:12607	496071	7	True				
ANR	496169	IdentifierDecl	syn_error		496071	0					
ANR	496170	IdentifierDeclType	int		496071	0					
ANR	496171	Identifier	syn_error		496071	1					
ANR	496172	IdentifierDecl	count		496071	1					
ANR	496173	IdentifierDeclType	int		496071	0					
ANR	496174	Identifier	count		496071	1					
ANR	496175	ForStatement	for ( i = NN - 1 ; i >= 0 ; i -- )		496071	8					
ANR	496176	ForInit	i = NN - 1 ;	396:9:12690:12700	496071	0	True				
ANR	496177	AssignmentExpression	i = NN - 1		496071	0		=			
ANR	496178	Identifier	i		496071	0					
ANR	496179	AdditiveExpression	NN - 1		496071	1		-			
ANR	496180	Identifier	NN		496071	0					
ANR	496181	PrimaryExpression	1		496071	1					
ANR	496182	Condition	i >= 0	396:21:12702:12707	496071	1	True				
ANR	496183	RelationalExpression	i >= 0		496071	0		>=			
ANR	496184	Identifier	i		496071	0					
ANR	496185	PrimaryExpression	0		496071	1					
ANR	496186	PostIncDecOperationExpression	i --	396:29:12710:12712	496071	2	True				
ANR	496187	Identifier	i		496071	0					
ANR	496188	IncDec	--		496071	1					
ANR	496189	CompoundStatement		16:34:558:558	496071	3					
ANR	496190	IfStatement	if ( data [ i ] > NN )		496071	0					
ANR	496191	Condition	data [ i ] > NN	398:12:12743:12754	496071	0	True				
ANR	496192	RelationalExpression	data [ i ] > NN		496071	0		>			
ANR	496193	ArrayIndexing	data [ i ]		496071	0					
ANR	496194	Identifier	data		496071	0					
ANR	496195	Identifier	i		496071	1					
ANR	496196	Identifier	NN		496071	1					
ANR	496197	CompoundStatement		18:26:600:600	496071	1					
ANR	496198	ReturnStatement	return - 1 ;	399:12:12771:12780	496071	0	True				
ANR	496199	UnaryOperationExpression	- 1		496071	0					
ANR	496200	UnaryOperator	-		496071	0					
ANR	496201	PrimaryExpression	1		496071	1					
ANR	496202	ExpressionStatement	recd [ i ] = Index_of [ data [ i ] ]	402:8:12831:12858	496071	1	True				
ANR	496203	AssignmentExpression	recd [ i ] = Index_of [ data [ i ] ]		496071	0		=			
ANR	496204	ArrayIndexing	recd [ i ]		496071	0					
ANR	496205	Identifier	recd		496071	0					
ANR	496206	Identifier	i		496071	1					
ANR	496207	ArrayIndexing	Index_of [ data [ i ] ]		496071	1					
ANR	496208	Identifier	Index_of		496071	0					
ANR	496209	ArrayIndexing	data [ i ]		496071	1					
ANR	496210	Identifier	data		496071	0					
ANR	496211	Identifier	i		496071	1					
ANR	496212	ExpressionStatement	syn_error = 0	407:4:12998:13011	496071	9	True				
ANR	496213	AssignmentExpression	syn_error = 0		496071	0		=			
ANR	496214	Identifier	syn_error		496071	0					
ANR	496215	PrimaryExpression	0		496071	1					
ANR	496216	ForStatement	for ( i = 1 ; i <= NN - KK ; i ++ )		496071	10					
ANR	496217	ForInit	i = 1 ;	408:9:13022:13027	496071	0	True				
ANR	496218	AssignmentExpression	i = 1		496071	0		=			
ANR	496219	Identifier	i		496071	0					
ANR	496220	PrimaryExpression	1		496071	1					
ANR	496221	Condition	i <= NN - KK	408:16:13029:13040	496071	1	True				
ANR	496222	RelationalExpression	i <= NN - KK		496071	0		<=			
ANR	496223	Identifier	i		496071	0					
ANR	496224	AdditiveExpression	NN - KK		496071	1		-			
ANR	496225	Identifier	NN		496071	0					
ANR	496226	Identifier	KK		496071	1					
ANR	496227	PostIncDecOperationExpression	i ++	408:30:13043:13045	496071	2	True				
ANR	496228	Identifier	i		496071	0					
ANR	496229	IncDec	++		496071	1					
ANR	496230	CompoundStatement		28:35:891:891	496071	3					
ANR	496231	ExpressionStatement	tmp = 0	409:8:13058:13065	496071	0	True				
ANR	496232	AssignmentExpression	tmp = 0		496071	0		=			
ANR	496233	Identifier	tmp		496071	0					
ANR	496234	PrimaryExpression	0		496071	1					
ANR	496235	ForStatement	for ( j = 0 ; j < NN ; j ++ )		496071	1					
ANR	496236	ForInit	j = 0 ;	410:13:13080:13085	496071	0	True				
ANR	496237	AssignmentExpression	j = 0		496071	0		=			
ANR	496238	Identifier	j		496071	0					
ANR	496239	PrimaryExpression	0		496071	1					
ANR	496240	Condition	j < NN	410:20:13087:13092	496071	1	True				
ANR	496241	RelationalExpression	j < NN		496071	0		<			
ANR	496242	Identifier	j		496071	0					
ANR	496243	Identifier	NN		496071	1					
ANR	496244	PostIncDecOperationExpression	j ++	410:28:13095:13097	496071	2	True				
ANR	496245	Identifier	j		496071	0					
ANR	496246	IncDec	++		496071	1					
ANR	496247	IfStatement	if ( recd [ j ] != A0 )		496071	3					
ANR	496248	Condition	recd [ j ] != A0	411:16:13116:13128	496071	0	True				
ANR	496249	EqualityExpression	recd [ j ] != A0		496071	0		!=			
ANR	496250	ArrayIndexing	recd [ j ]		496071	0					
ANR	496251	Identifier	recd		496071	0					
ANR	496252	Identifier	j		496071	1					
ANR	496253	Identifier	A0		496071	1					
ANR	496254	CompoundStatement		31:31:974:974	496071	1					
ANR	496255	ExpressionStatement	tmp ^= Alpha_to [ modnn ( recd [ j ] + ( B0 + i - 1 ) * j ) ]	412:16:13177:13227	496071	0	True				
ANR	496256	AssignmentExpression	tmp ^= Alpha_to [ modnn ( recd [ j ] + ( B0 + i - 1 ) * j ) ]		496071	0		^=			
ANR	496257	Identifier	tmp		496071	0					
ANR	496258	ArrayIndexing	Alpha_to [ modnn ( recd [ j ] + ( B0 + i - 1 ) * j ) ]		496071	1					
ANR	496259	Identifier	Alpha_to		496071	0					
ANR	496260	CallExpression	modnn ( recd [ j ] + ( B0 + i - 1 ) * j )		496071	1					
ANR	496261	Callee	modnn		496071	0					
ANR	496262	Identifier	modnn		496071	0					
ANR	496263	ArgumentList	recd [ j ] + ( B0 + i - 1 ) * j		496071	1					
ANR	496264	Argument	recd [ j ] + ( B0 + i - 1 ) * j		496071	0					
ANR	496265	AdditiveExpression	recd [ j ] + ( B0 + i - 1 ) * j		496071	0		+			
ANR	496266	ArrayIndexing	recd [ j ]		496071	0					
ANR	496267	Identifier	recd		496071	0					
ANR	496268	Identifier	j		496071	1					
ANR	496269	MultiplicativeExpression	( B0 + i - 1 ) * j		496071	1		*			
ANR	496270	AdditiveExpression	B0 + i - 1		496071	0		+			
ANR	496271	Identifier	B0		496071	0					
ANR	496272	AdditiveExpression	i - 1		496071	1		-			
ANR	496273	Identifier	i		496071	0					
ANR	496274	PrimaryExpression	1		496071	1					
ANR	496275	Identifier	j		496071	1					
ANR	496276	ExpressionStatement	syn_error |= tmp	414:8:13251:13267	496071	2	True				
ANR	496277	AssignmentExpression	syn_error |= tmp		496071	0		|=			
ANR	496278	Identifier	syn_error		496071	0					
ANR	496279	Identifier	tmp		496071	1					
ANR	496280	ExpressionStatement	s [ i ] = Index_of [ tmp ]	417:8:13391:13411	496071	3	True				
ANR	496281	AssignmentExpression	s [ i ] = Index_of [ tmp ]		496071	0		=			
ANR	496282	ArrayIndexing	s [ i ]		496071	0					
ANR	496283	Identifier	s		496071	0					
ANR	496284	Identifier	i		496071	1					
ANR	496285	ArrayIndexing	Index_of [ tmp ]		496071	1					
ANR	496286	Identifier	Index_of		496071	0					
ANR	496287	Identifier	tmp		496071	1					
ANR	496288	IfStatement	if ( ! syn_error )		496071	11					
ANR	496289	Condition	! syn_error	419:8:13427:13436	496071	0	True				
ANR	496290	UnaryOperationExpression	! syn_error		496071	0					
ANR	496291	UnaryOperator	!		496071	0					
ANR	496292	Identifier	syn_error		496071	1					
ANR	496293	CompoundStatement		39:20:1282:1282	496071	1					
ANR	496294	ReturnStatement	return 0 ;	424:8:13600:13608	496071	0	True				
ANR	496295	PrimaryExpression	0		496071	0					
ANR	496296	ExpressionStatement	"CLEAR ( & lambda [ 1 ] , NN - KK )"	426:4:13620:13646	496071	12	True				
ANR	496297	CallExpression	"CLEAR ( & lambda [ 1 ] , NN - KK )"		496071	0					
ANR	496298	Callee	CLEAR		496071	0					
ANR	496299	Identifier	CLEAR		496071	0					
ANR	496300	ArgumentList	& lambda [ 1 ]		496071	1					
ANR	496301	Argument	& lambda [ 1 ]		496071	0					
ANR	496302	UnaryOperationExpression	& lambda [ 1 ]		496071	0					
ANR	496303	UnaryOperator	&		496071	0					
ANR	496304	ArrayIndexing	lambda [ 1 ]		496071	1					
ANR	496305	Identifier	lambda		496071	0					
ANR	496306	PrimaryExpression	1		496071	1					
ANR	496307	Argument	NN - KK		496071	1					
ANR	496308	AdditiveExpression	NN - KK		496071	0		-			
ANR	496309	Identifier	NN		496071	0					
ANR	496310	Identifier	KK		496071	1					
ANR	496311	ExpressionStatement	lambda [ 0 ] = 1	427:4:13652:13665	496071	13	True				
ANR	496312	AssignmentExpression	lambda [ 0 ] = 1		496071	0		=			
ANR	496313	ArrayIndexing	lambda [ 0 ]		496071	0					
ANR	496314	Identifier	lambda		496071	0					
ANR	496315	PrimaryExpression	0		496071	1					
ANR	496316	PrimaryExpression	1		496071	1					
ANR	496317	IfStatement	if ( no_eras > 0 )		496071	14					
ANR	496318	Condition	no_eras > 0	428:8:13675:13685	496071	0	True				
ANR	496319	RelationalExpression	no_eras > 0		496071	0		>			
ANR	496320	Identifier	no_eras		496071	0					
ANR	496321	PrimaryExpression	0		496071	1					
ANR	496322	CompoundStatement		48:21:1531:1531	496071	1					
ANR	496323	ExpressionStatement	lambda [ 1 ] = Alpha_to [ eras_pos [ 0 ] ]	430:8:13761:13794	496071	0	True				
ANR	496324	AssignmentExpression	lambda [ 1 ] = Alpha_to [ eras_pos [ 0 ] ]		496071	0		=			
ANR	496325	ArrayIndexing	lambda [ 1 ]		496071	0					
ANR	496326	Identifier	lambda		496071	0					
ANR	496327	PrimaryExpression	1		496071	1					
ANR	496328	ArrayIndexing	Alpha_to [ eras_pos [ 0 ] ]		496071	1					
ANR	496329	Identifier	Alpha_to		496071	0					
ANR	496330	ArrayIndexing	eras_pos [ 0 ]		496071	1					
ANR	496331	Identifier	eras_pos		496071	0					
ANR	496332	PrimaryExpression	0		496071	1					
ANR	496333	ForStatement	for ( i = 1 ; i < no_eras ; i ++ )		496071	1					
ANR	496334	ForInit	i = 1 ;	431:13:13809:13814	496071	0	True				
ANR	496335	AssignmentExpression	i = 1		496071	0		=			
ANR	496336	Identifier	i		496071	0					
ANR	496337	PrimaryExpression	1		496071	1					
ANR	496338	Condition	i < no_eras	431:20:13816:13826	496071	1	True				
ANR	496339	RelationalExpression	i < no_eras		496071	0		<			
ANR	496340	Identifier	i		496071	0					
ANR	496341	Identifier	no_eras		496071	1					
ANR	496342	PostIncDecOperationExpression	i ++	431:33:13829:13831	496071	2	True				
ANR	496343	Identifier	i		496071	0					
ANR	496344	IncDec	++		496071	1					
ANR	496345	CompoundStatement		51:38:1677:1677	496071	3					
ANR	496346	ExpressionStatement	u = eras_pos [ i ]	432:12:13848:13863	496071	0	True				
ANR	496347	AssignmentExpression	u = eras_pos [ i ]		496071	0		=			
ANR	496348	Identifier	u		496071	0					
ANR	496349	ArrayIndexing	eras_pos [ i ]		496071	1					
ANR	496350	Identifier	eras_pos		496071	0					
ANR	496351	Identifier	i		496071	1					
ANR	496352	ForStatement	for ( j = i + 1 ; j > 0 ; j -- )		496071	1					
ANR	496353	ForInit	j = i + 1 ;	433:17:13882:13891	496071	0	True				
ANR	496354	AssignmentExpression	j = i + 1		496071	0		=			
ANR	496355	Identifier	j		496071	0					
ANR	496356	AdditiveExpression	i + 1		496071	1		+			
ANR	496357	Identifier	i		496071	0					
ANR	496358	PrimaryExpression	1		496071	1					
ANR	496359	Condition	j > 0	433:28:13893:13897	496071	1	True				
ANR	496360	RelationalExpression	j > 0		496071	0		>			
ANR	496361	Identifier	j		496071	0					
ANR	496362	PrimaryExpression	0		496071	1					
ANR	496363	PostIncDecOperationExpression	j --	433:35:13900:13902	496071	2	True				
ANR	496364	Identifier	j		496071	0					
ANR	496365	IncDec	--		496071	1					
ANR	496366	CompoundStatement		53:40:1748:1748	496071	3					
ANR	496367	ExpressionStatement	tmp = Index_of [ lambda [ j - 1 ] ]	434:16:13923:13952	496071	0	True				
ANR	496368	AssignmentExpression	tmp = Index_of [ lambda [ j - 1 ] ]		496071	0		=			
ANR	496369	Identifier	tmp		496071	0					
ANR	496370	ArrayIndexing	Index_of [ lambda [ j - 1 ] ]		496071	1					
ANR	496371	Identifier	Index_of		496071	0					
ANR	496372	ArrayIndexing	lambda [ j - 1 ]		496071	1					
ANR	496373	Identifier	lambda		496071	0					
ANR	496374	AdditiveExpression	j - 1		496071	1		-			
ANR	496375	Identifier	j		496071	0					
ANR	496376	PrimaryExpression	1		496071	1					
ANR	496377	IfStatement	if ( tmp != A0 )		496071	1					
ANR	496378	Condition	tmp != A0	435:20:13974:13982	496071	0	True				
ANR	496379	EqualityExpression	tmp != A0		496071	0		!=			
ANR	496380	Identifier	tmp		496071	0					
ANR	496381	Identifier	A0		496071	1					
ANR	496382	CompoundStatement		55:31:1828:1828	496071	1					
ANR	496383	ExpressionStatement	lambda [ j ] ^= Alpha_to [ modnn ( u + tmp ) ]	436:20:14007:14044	496071	0	True				
ANR	496384	AssignmentExpression	lambda [ j ] ^= Alpha_to [ modnn ( u + tmp ) ]		496071	0		^=			
ANR	496385	ArrayIndexing	lambda [ j ]		496071	0					
ANR	496386	Identifier	lambda		496071	0					
ANR	496387	Identifier	j		496071	1					
ANR	496388	ArrayIndexing	Alpha_to [ modnn ( u + tmp ) ]		496071	1					
ANR	496389	Identifier	Alpha_to		496071	0					
ANR	496390	CallExpression	modnn ( u + tmp )		496071	1					
ANR	496391	Callee	modnn		496071	0					
ANR	496392	Identifier	modnn		496071	0					
ANR	496393	ArgumentList	u + tmp		496071	1					
ANR	496394	Argument	u + tmp		496071	0					
ANR	496395	AdditiveExpression	u + tmp		496071	0		+			
ANR	496396	Identifier	u		496071	0					
ANR	496397	Identifier	tmp		496071	1					
ANR	496398	ForStatement	for ( i = 1 ; i <= no_eras ; i ++ )		496071	2					
ANR	496399	ForInit	i = 1 ;	442:13:14182:14187	496071	0	True				
ANR	496400	AssignmentExpression	i = 1		496071	0		=			
ANR	496401	Identifier	i		496071	0					
ANR	496402	PrimaryExpression	1		496071	1					
ANR	496403	Condition	i <= no_eras	442:20:14189:14200	496071	1	True				
ANR	496404	RelationalExpression	i <= no_eras		496071	0		<=			
ANR	496405	Identifier	i		496071	0					
ANR	496406	Identifier	no_eras		496071	1					
ANR	496407	PostIncDecOperationExpression	i ++	442:34:14203:14205	496071	2	True				
ANR	496408	Identifier	i		496071	0					
ANR	496409	IncDec	++		496071	1					
ANR	496410	CompoundStatement		62:39:2051:2051	496071	3					
ANR	496411	ExpressionStatement	reg [ i ] = Index_of [ lambda [ i ] ]	443:12:14222:14250	496071	0	True				
ANR	496412	AssignmentExpression	reg [ i ] = Index_of [ lambda [ i ] ]		496071	0		=			
ANR	496413	ArrayIndexing	reg [ i ]		496071	0					
ANR	496414	Identifier	reg		496071	0					
ANR	496415	Identifier	i		496071	1					
ANR	496416	ArrayIndexing	Index_of [ lambda [ i ] ]		496071	1					
ANR	496417	Identifier	Index_of		496071	0					
ANR	496418	ArrayIndexing	lambda [ i ]		496071	1					
ANR	496419	Identifier	lambda		496071	0					
ANR	496420	Identifier	i		496071	1					
ANR	496421	ExpressionStatement	count = 0	445:8:14270:14279	496071	3	True				
ANR	496422	AssignmentExpression	count = 0		496071	0		=			
ANR	496423	Identifier	count		496071	0					
ANR	496424	PrimaryExpression	0		496071	1					
ANR	496425	ForStatement	for ( i = 1 ; i <= NN ; i ++ )		496071	4					
ANR	496426	ForInit	i = 1 ;	446:13:14294:14299	496071	0	True				
ANR	496427	AssignmentExpression	i = 1		496071	0		=			
ANR	496428	Identifier	i		496071	0					
ANR	496429	PrimaryExpression	1		496071	1					
ANR	496430	Condition	i <= NN	446:20:14301:14307	496071	1	True				
ANR	496431	RelationalExpression	i <= NN		496071	0		<=			
ANR	496432	Identifier	i		496071	0					
ANR	496433	Identifier	NN		496071	1					
ANR	496434	PostIncDecOperationExpression	i ++	446:29:14310:14312	496071	2	True				
ANR	496435	Identifier	i		496071	0					
ANR	496436	IncDec	++		496071	1					
ANR	496437	CompoundStatement		66:34:2158:2158	496071	3					
ANR	496438	ExpressionStatement	q = 1	447:12:14329:14334	496071	0	True				
ANR	496439	AssignmentExpression	q = 1		496071	0		=			
ANR	496440	Identifier	q		496071	0					
ANR	496441	PrimaryExpression	1		496071	1					
ANR	496442	ForStatement	for ( j = 1 ; j <= no_eras ; j ++ )		496071	1					
ANR	496443	ForInit	j = 1 ;	448:17:14353:14358	496071	0	True				
ANR	496444	AssignmentExpression	j = 1		496071	0		=			
ANR	496445	Identifier	j		496071	0					
ANR	496446	PrimaryExpression	1		496071	1					
ANR	496447	Condition	j <= no_eras	448:24:14360:14371	496071	1	True				
ANR	496448	RelationalExpression	j <= no_eras		496071	0		<=			
ANR	496449	Identifier	j		496071	0					
ANR	496450	Identifier	no_eras		496071	1					
ANR	496451	PostIncDecOperationExpression	j ++	448:38:14374:14376	496071	2	True				
ANR	496452	Identifier	j		496071	0					
ANR	496453	IncDec	++		496071	1					
ANR	496454	IfStatement	if ( reg [ j ] != A0 )		496071	3					
ANR	496455	Condition	reg [ j ] != A0	449:20:14399:14410	496071	0	True				
ANR	496456	EqualityExpression	reg [ j ] != A0		496071	0		!=			
ANR	496457	ArrayIndexing	reg [ j ]		496071	0					
ANR	496458	Identifier	reg		496071	0					
ANR	496459	Identifier	j		496071	1					
ANR	496460	Identifier	A0		496071	1					
ANR	496461	CompoundStatement		69:34:2256:2256	496071	1					
ANR	496462	ExpressionStatement	reg [ j ] = modnn ( reg [ j ] + j )	450:20:14435:14461	496071	0	True				
ANR	496463	AssignmentExpression	reg [ j ] = modnn ( reg [ j ] + j )		496071	0		=			
ANR	496464	ArrayIndexing	reg [ j ]		496071	0					
ANR	496465	Identifier	reg		496071	0					
ANR	496466	Identifier	j		496071	1					
ANR	496467	CallExpression	modnn ( reg [ j ] + j )		496071	1					
ANR	496468	Callee	modnn		496071	0					
ANR	496469	Identifier	modnn		496071	0					
ANR	496470	ArgumentList	reg [ j ] + j		496071	1					
ANR	496471	Argument	reg [ j ] + j		496071	0					
ANR	496472	AdditiveExpression	reg [ j ] + j		496071	0		+			
ANR	496473	ArrayIndexing	reg [ j ]		496071	0					
ANR	496474	Identifier	reg		496071	0					
ANR	496475	Identifier	j		496071	1					
ANR	496476	Identifier	j		496071	1					
ANR	496477	ExpressionStatement	q ^= Alpha_to [ reg [ j ] ]	451:20:14483:14504	496071	1	True				
ANR	496478	AssignmentExpression	q ^= Alpha_to [ reg [ j ] ]		496071	0		^=			
ANR	496479	Identifier	q		496071	0					
ANR	496480	ArrayIndexing	Alpha_to [ reg [ j ] ]		496071	1					
ANR	496481	Identifier	Alpha_to		496071	0					
ANR	496482	ArrayIndexing	reg [ j ]		496071	1					
ANR	496483	Identifier	reg		496071	0					
ANR	496484	Identifier	j		496071	1					
ANR	496485	IfStatement	if ( ! q )		496071	2					
ANR	496486	Condition	! q	453:16:14540:14541	496071	0	True				
ANR	496487	UnaryOperationExpression	! q		496071	0					
ANR	496488	UnaryOperator	!		496071	0					
ANR	496489	Identifier	q		496071	1					
ANR	496490	CompoundStatement		73:20:2387:2387	496071	1					
ANR	496491	ExpressionStatement	root [ count ] = i	457:16:14665:14680	496071	0	True				
ANR	496492	AssignmentExpression	root [ count ] = i		496071	0		=			
ANR	496493	ArrayIndexing	root [ count ]		496071	0					
ANR	496494	Identifier	root		496071	0					
ANR	496495	Identifier	count		496071	1					
ANR	496496	Identifier	i		496071	1					
ANR	496497	ExpressionStatement	loc [ count ] = NN - i	458:16:14698:14717	496071	1	True				
ANR	496498	AssignmentExpression	loc [ count ] = NN - i		496071	0		=			
ANR	496499	ArrayIndexing	loc [ count ]		496071	0					
ANR	496500	Identifier	loc		496071	0					
ANR	496501	Identifier	count		496071	1					
ANR	496502	AdditiveExpression	NN - i		496071	1		-			
ANR	496503	Identifier	NN		496071	0					
ANR	496504	Identifier	i		496071	1					
ANR	496505	ExpressionStatement	count ++	459:16:14735:14742	496071	2	True				
ANR	496506	PostIncDecOperationExpression	count ++		496071	0					
ANR	496507	Identifier	count		496071	0					
ANR	496508	IncDec	++		496071	1					
ANR	496509	IfStatement	if ( count != no_eras )		496071	5					
ANR	496510	Condition	count != no_eras	462:12:14780:14795	496071	0	True				
ANR	496511	EqualityExpression	count != no_eras		496071	0		!=			
ANR	496512	Identifier	count		496071	0					
ANR	496513	Identifier	no_eras		496071	1					
ANR	496514	CompoundStatement		82:30:2641:2641	496071	1					
ANR	496515	ExpressionStatement	"printf ( ""\\n lambda(x) is WRONG\\n"" )"	463:12:14812:14845	496071	0	True				
ANR	496516	CallExpression	"printf ( ""\\n lambda(x) is WRONG\\n"" )"		496071	0					
ANR	496517	Callee	printf		496071	0					
ANR	496518	Identifier	printf		496071	0					
ANR	496519	ArgumentList	"""\\n lambda(x) is WRONG\\n"""		496071	1					
ANR	496520	Argument	"""\\n lambda(x) is WRONG\\n"""		496071	0					
ANR	496521	PrimaryExpression	"""\\n lambda(x) is WRONG\\n"""		496071	0					
ANR	496522	ReturnStatement	return - 1 ;	464:12:14859:14868	496071	1	True				
ANR	496523	UnaryOperationExpression	- 1		496071	0					
ANR	496524	UnaryOperator	-		496071	0					
ANR	496525	PrimaryExpression	1		496071	1					
ANR	496526	ExpressionStatement	"printf ( ""\\n Erasure positions as determined by roots of Eras Loc Poly:\\n"" )"	467:8:14905:14978	496071	6	True				
ANR	496527	CallExpression	"printf ( ""\\n Erasure positions as determined by roots of Eras Loc Poly:\\n"" )"		496071	0					
ANR	496528	Callee	printf		496071	0					
ANR	496529	Identifier	printf		496071	0					
ANR	496530	ArgumentList	"""\\n Erasure positions as determined by roots of Eras Loc Poly:\\n"""		496071	1					
ANR	496531	Argument	"""\\n Erasure positions as determined by roots of Eras Loc Poly:\\n"""		496071	0					
ANR	496532	PrimaryExpression	"""\\n Erasure positions as determined by roots of Eras Loc Poly:\\n"""		496071	0					
ANR	496533	ForStatement	for ( i = 0 ; i < count ; i ++ )		496071	7					
ANR	496534	ForInit	i = 0 ;	468:13:14993:14998	496071	0	True				
ANR	496535	AssignmentExpression	i = 0		496071	0		=			
ANR	496536	Identifier	i		496071	0					
ANR	496537	PrimaryExpression	0		496071	1					
ANR	496538	Condition	i < count	468:20:15000:15008	496071	1	True				
ANR	496539	RelationalExpression	i < count		496071	0		<			
ANR	496540	Identifier	i		496071	0					
ANR	496541	Identifier	count		496071	1					
ANR	496542	PostIncDecOperationExpression	i ++	468:31:15011:15013	496071	2	True				
ANR	496543	Identifier	i		496071	0					
ANR	496544	IncDec	++		496071	1					
ANR	496545	CompoundStatement		88:36:2859:2859	496071	3					
ANR	496546	ExpressionStatement	"printf ( ""%d "" , loc [ i ] )"	469:12:15030:15051	496071	0	True				
ANR	496547	CallExpression	"printf ( ""%d "" , loc [ i ] )"		496071	0					
ANR	496548	Callee	printf		496071	0					
ANR	496549	Identifier	printf		496071	0					
ANR	496550	ArgumentList	"""%d """		496071	1					
ANR	496551	Argument	"""%d """		496071	0					
ANR	496552	PrimaryExpression	"""%d """		496071	0					
ANR	496553	Argument	loc [ i ]		496071	1					
ANR	496554	ArrayIndexing	loc [ i ]		496071	0					
ANR	496555	Identifier	loc		496071	0					
ANR	496556	Identifier	i		496071	1					
ANR	496557	ExpressionStatement	"printf ( ""\\n"" )"	471:8:15071:15083	496071	8	True				
ANR	496558	CallExpression	"printf ( ""\\n"" )"		496071	0					
ANR	496559	Callee	printf		496071	0					
ANR	496560	Identifier	printf		496071	0					
ANR	496561	ArgumentList	"""\\n"""		496071	1					
ANR	496562	Argument	"""\\n"""		496071	0					
ANR	496563	PrimaryExpression	"""\\n"""		496071	0					
ANR	496564	ForStatement	for ( i = 0 ; i < NN - KK + 1 ; i ++ )		496071	15					
ANR	496565	ForInit	i = 0 ;	475:9:15114:15119	496071	0	True				
ANR	496566	AssignmentExpression	i = 0		496071	0		=			
ANR	496567	Identifier	i		496071	0					
ANR	496568	PrimaryExpression	0		496071	1					
ANR	496569	Condition	i < NN - KK + 1	475:16:15121:15135	496071	1	True				
ANR	496570	RelationalExpression	i < NN - KK + 1		496071	0		<			
ANR	496571	Identifier	i		496071	0					
ANR	496572	AdditiveExpression	NN - KK + 1		496071	1		-			
ANR	496573	Identifier	NN		496071	0					
ANR	496574	AdditiveExpression	KK + 1		496071	1		+			
ANR	496575	Identifier	KK		496071	0					
ANR	496576	PrimaryExpression	1		496071	1					
ANR	496577	PostIncDecOperationExpression	i ++	475:33:15138:15140	496071	2	True				
ANR	496578	Identifier	i		496071	0					
ANR	496579	IncDec	++		496071	1					
ANR	496580	CompoundStatement		95:38:2986:2986	496071	3					
ANR	496581	ExpressionStatement	b [ i ] = Index_of [ lambda [ i ] ]	476:8:15153:15179	496071	0	True				
ANR	496582	AssignmentExpression	b [ i ] = Index_of [ lambda [ i ] ]		496071	0		=			
ANR	496583	ArrayIndexing	b [ i ]		496071	0					
ANR	496584	Identifier	b		496071	0					
ANR	496585	Identifier	i		496071	1					
ANR	496586	ArrayIndexing	Index_of [ lambda [ i ] ]		496071	1					
ANR	496587	Identifier	Index_of		496071	0					
ANR	496588	ArrayIndexing	lambda [ i ]		496071	1					
ANR	496589	Identifier	lambda		496071	0					
ANR	496590	Identifier	i		496071	1					
ANR	496591	ExpressionStatement	r = no_eras	483:4:15300:15311	496071	16	True				
ANR	496592	AssignmentExpression	r = no_eras		496071	0		=			
ANR	496593	Identifier	r		496071	0					
ANR	496594	Identifier	no_eras		496071	1					
ANR	496595	ExpressionStatement	el = no_eras	484:4:15317:15329	496071	17	True				
ANR	496596	AssignmentExpression	el = no_eras		496071	0		=			
ANR	496597	Identifier	el		496071	0					
ANR	496598	Identifier	no_eras		496071	1					
ANR	496599	WhileStatement	while ( ++ r <= NN - KK )		496071	18					
ANR	496600	Condition	++ r <= NN - KK	485:11:15342:15355	496071	0	True				
ANR	496601	RelationalExpression	++ r <= NN - KK		496071	0		<=			
ANR	496602	UnaryExpression	++ r		496071	0					
ANR	496603	IncDec	++		496071	0					
ANR	496604	Identifier	r		496071	1					
ANR	496605	AdditiveExpression	NN - KK		496071	1		-			
ANR	496606	Identifier	NN		496071	0					
ANR	496607	Identifier	KK		496071	1					
ANR	496608	CompoundStatement		105:27:3201:3201	496071	1					
ANR	496609	ExpressionStatement	discr_r = 0	487:8:15459:15470	496071	0	True				
ANR	496610	AssignmentExpression	discr_r = 0		496071	0		=			
ANR	496611	Identifier	discr_r		496071	0					
ANR	496612	PrimaryExpression	0		496071	1					
ANR	496613	ForStatement	for ( i = 0 ; i < r ; i ++ )		496071	1					
ANR	496614	ForInit	i = 0 ;	488:13:15485:15490	496071	0	True				
ANR	496615	AssignmentExpression	i = 0		496071	0		=			
ANR	496616	Identifier	i		496071	0					
ANR	496617	PrimaryExpression	0		496071	1					
ANR	496618	Condition	i < r	488:20:15492:15496	496071	1	True				
ANR	496619	RelationalExpression	i < r		496071	0		<			
ANR	496620	Identifier	i		496071	0					
ANR	496621	Identifier	r		496071	1					
ANR	496622	PostIncDecOperationExpression	i ++	488:27:15499:15501	496071	2	True				
ANR	496623	Identifier	i		496071	0					
ANR	496624	IncDec	++		496071	1					
ANR	496625	CompoundStatement		108:32:3347:3347	496071	3					
ANR	496626	IfStatement	if ( ( lambda [ i ] != 0 ) && ( s [ r - i ] != A0 ) )		496071	0					
ANR	496627	Condition	( lambda [ i ] != 0 ) && ( s [ r - i ] != A0 )	489:16:15522:15557	496071	0	True				
ANR	496628	AndExpression	( lambda [ i ] != 0 ) && ( s [ r - i ] != A0 )		496071	0		&&			
ANR	496629	EqualityExpression	lambda [ i ] != 0		496071	0		!=			
ANR	496630	ArrayIndexing	lambda [ i ]		496071	0					
ANR	496631	Identifier	lambda		496071	0					
ANR	496632	Identifier	i		496071	1					
ANR	496633	PrimaryExpression	0		496071	1					
ANR	496634	EqualityExpression	s [ r - i ] != A0		496071	1		!=			
ANR	496635	ArrayIndexing	s [ r - i ]		496071	0					
ANR	496636	Identifier	s		496071	0					
ANR	496637	AdditiveExpression	r - i		496071	1		-			
ANR	496638	Identifier	r		496071	0					
ANR	496639	Identifier	i		496071	1					
ANR	496640	Identifier	A0		496071	1					
ANR	496641	CompoundStatement		109:54:3403:3403	496071	1					
ANR	496642	ExpressionStatement	discr_r ^= Alpha_to [ modnn ( Index_of [ lambda [ i ] ] + s [ r - i ] ) ]	490:16:15578:15636	496071	0	True				
ANR	496643	AssignmentExpression	discr_r ^= Alpha_to [ modnn ( Index_of [ lambda [ i ] ] + s [ r - i ] ) ]		496071	0		^=			
ANR	496644	Identifier	discr_r		496071	0					
ANR	496645	ArrayIndexing	Alpha_to [ modnn ( Index_of [ lambda [ i ] ] + s [ r - i ] ) ]		496071	1					
ANR	496646	Identifier	Alpha_to		496071	0					
ANR	496647	CallExpression	modnn ( Index_of [ lambda [ i ] ] + s [ r - i ] )		496071	1					
ANR	496648	Callee	modnn		496071	0					
ANR	496649	Identifier	modnn		496071	0					
ANR	496650	ArgumentList	Index_of [ lambda [ i ] ] + s [ r - i ]		496071	1					
ANR	496651	Argument	Index_of [ lambda [ i ] ] + s [ r - i ]		496071	0					
ANR	496652	AdditiveExpression	Index_of [ lambda [ i ] ] + s [ r - i ]		496071	0		+			
ANR	496653	ArrayIndexing	Index_of [ lambda [ i ] ]		496071	0					
ANR	496654	Identifier	Index_of		496071	0					
ANR	496655	ArrayIndexing	lambda [ i ]		496071	1					
ANR	496656	Identifier	lambda		496071	0					
ANR	496657	Identifier	i		496071	1					
ANR	496658	ArrayIndexing	s [ r - i ]		496071	1					
ANR	496659	Identifier	s		496071	0					
ANR	496660	AdditiveExpression	r - i		496071	1		-			
ANR	496661	Identifier	r		496071	0					
ANR	496662	Identifier	i		496071	1					
ANR	496663	ExpressionStatement	discr_r = Index_of [ discr_r ]	493:8:15670:15697	496071	2	True				
ANR	496664	AssignmentExpression	discr_r = Index_of [ discr_r ]		496071	0		=			
ANR	496665	Identifier	discr_r		496071	0					
ANR	496666	ArrayIndexing	Index_of [ discr_r ]		496071	1					
ANR	496667	Identifier	Index_of		496071	0					
ANR	496668	Identifier	discr_r		496071	1					
ANR	496669	IfStatement	if ( discr_r == A0 )		496071	3					
ANR	496670	Condition	discr_r == A0	494:12:15731:15743	496071	0	True				
ANR	496671	EqualityExpression	discr_r == A0		496071	0		==			
ANR	496672	Identifier	discr_r		496071	0					
ANR	496673	Identifier	A0		496071	1					
ANR	496674	CompoundStatement		114:27:3589:3589	496071	1					
ANR	496675	ExpressionStatement	"COPYDOWN ( & b [ 1 ] , b , NN - KK )"	496:12:15809:15836	496071	0	True				
ANR	496676	CallExpression	"COPYDOWN ( & b [ 1 ] , b , NN - KK )"		496071	0					
ANR	496677	Callee	COPYDOWN		496071	0					
ANR	496678	Identifier	COPYDOWN		496071	0					
ANR	496679	ArgumentList	& b [ 1 ]		496071	1					
ANR	496680	Argument	& b [ 1 ]		496071	0					
ANR	496681	UnaryOperationExpression	& b [ 1 ]		496071	0					
ANR	496682	UnaryOperator	&		496071	0					
ANR	496683	ArrayIndexing	b [ 1 ]		496071	1					
ANR	496684	Identifier	b		496071	0					
ANR	496685	PrimaryExpression	1		496071	1					
ANR	496686	Argument	b		496071	1					
ANR	496687	Identifier	b		496071	0					
ANR	496688	Argument	NN - KK		496071	2					
ANR	496689	AdditiveExpression	NN - KK		496071	0		-			
ANR	496690	Identifier	NN		496071	0					
ANR	496691	Identifier	KK		496071	1					
ANR	496692	ExpressionStatement	b [ 0 ] = A0	497:12:15850:15859	496071	1	True				
ANR	496693	AssignmentExpression	b [ 0 ] = A0		496071	0		=			
ANR	496694	ArrayIndexing	b [ 0 ]		496071	0					
ANR	496695	Identifier	b		496071	0					
ANR	496696	PrimaryExpression	0		496071	1					
ANR	496697	Identifier	A0		496071	1					
ANR	496698	ElseStatement	else		496071	0					
ANR	496699	CompoundStatement		118:15:3719:3719	496071	0					
ANR	496700	ExpressionStatement	t [ 0 ] = lambda [ 0 ]	500:12:15959:15975	496071	0	True				
ANR	496701	AssignmentExpression	t [ 0 ] = lambda [ 0 ]		496071	0		=			
ANR	496702	ArrayIndexing	t [ 0 ]		496071	0					
ANR	496703	Identifier	t		496071	0					
ANR	496704	PrimaryExpression	0		496071	1					
ANR	496705	ArrayIndexing	lambda [ 0 ]		496071	1					
ANR	496706	Identifier	lambda		496071	0					
ANR	496707	PrimaryExpression	0		496071	1					
ANR	496708	ForStatement	for ( i = 0 ; i < NN - KK ; i ++ )		496071	1					
ANR	496709	ForInit	i = 0 ;	501:17:15994:16000	496071	0	True				
ANR	496710	AssignmentExpression	i = 0		496071	0		=			
ANR	496711	Identifier	i		496071	0					
ANR	496712	PrimaryExpression	0		496071	1					
ANR	496713	Condition	i < NN - KK	501:25:16002:16012	496071	1	True				
ANR	496714	RelationalExpression	i < NN - KK		496071	0		<			
ANR	496715	Identifier	i		496071	0					
ANR	496716	AdditiveExpression	NN - KK		496071	1		-			
ANR	496717	Identifier	NN		496071	0					
ANR	496718	Identifier	KK		496071	1					
ANR	496719	PostIncDecOperationExpression	i ++	501:38:16015:16017	496071	2	True				
ANR	496720	Identifier	i		496071	0					
ANR	496721	IncDec	++		496071	1					
ANR	496722	CompoundStatement		121:43:3863:3863	496071	3					
ANR	496723	IfStatement	if ( b [ i ] != A0 )		496071	0					
ANR	496724	Condition	b [ i ] != A0	502:20:16042:16051	496071	0	True				
ANR	496725	EqualityExpression	b [ i ] != A0		496071	0		!=			
ANR	496726	ArrayIndexing	b [ i ]		496071	0					
ANR	496727	Identifier	b		496071	0					
ANR	496728	Identifier	i		496071	1					
ANR	496729	Identifier	A0		496071	1					
ANR	496730	CompoundStatement		122:32:3897:3897	496071	1					
ANR	496731	ExpressionStatement	t [ i + 1 ] = lambda [ i + 1 ] ^ Alpha_to [ modnn ( discr_r + b [ i ] ) ]	503:20:16076:16134	496071	0	True				
ANR	496732	AssignmentExpression	t [ i + 1 ] = lambda [ i + 1 ] ^ Alpha_to [ modnn ( discr_r + b [ i ] ) ]		496071	0		=			
ANR	496733	ArrayIndexing	t [ i + 1 ]		496071	0					
ANR	496734	Identifier	t		496071	0					
ANR	496735	AdditiveExpression	i + 1		496071	1		+			
ANR	496736	Identifier	i		496071	0					
ANR	496737	PrimaryExpression	1		496071	1					
ANR	496738	ExclusiveOrExpression	lambda [ i + 1 ] ^ Alpha_to [ modnn ( discr_r + b [ i ] ) ]		496071	1		^			
ANR	496739	ArrayIndexing	lambda [ i + 1 ]		496071	0					
ANR	496740	Identifier	lambda		496071	0					
ANR	496741	AdditiveExpression	i + 1		496071	1		+			
ANR	496742	Identifier	i		496071	0					
ANR	496743	PrimaryExpression	1		496071	1					
ANR	496744	ArrayIndexing	Alpha_to [ modnn ( discr_r + b [ i ] ) ]		496071	1					
ANR	496745	Identifier	Alpha_to		496071	0					
ANR	496746	CallExpression	modnn ( discr_r + b [ i ] )		496071	1					
ANR	496747	Callee	modnn		496071	0					
ANR	496748	Identifier	modnn		496071	0					
ANR	496749	ArgumentList	discr_r + b [ i ]		496071	1					
ANR	496750	Argument	discr_r + b [ i ]		496071	0					
ANR	496751	AdditiveExpression	discr_r + b [ i ]		496071	0		+			
ANR	496752	Identifier	discr_r		496071	0					
ANR	496753	ArrayIndexing	b [ i ]		496071	1					
ANR	496754	Identifier	b		496071	0					
ANR	496755	Identifier	i		496071	1					
ANR	496756	ElseStatement	else		496071	0					
ANR	496757	CompoundStatement		124:23:4002:4002	496071	0					
ANR	496758	ExpressionStatement	t [ i + 1 ] = lambda [ i + 1 ]	505:20:16181:16205	496071	0	True				
ANR	496759	AssignmentExpression	t [ i + 1 ] = lambda [ i + 1 ]		496071	0		=			
ANR	496760	ArrayIndexing	t [ i + 1 ]		496071	0					
ANR	496761	Identifier	t		496071	0					
ANR	496762	AdditiveExpression	i + 1		496071	1		+			
ANR	496763	Identifier	i		496071	0					
ANR	496764	PrimaryExpression	1		496071	1					
ANR	496765	ArrayIndexing	lambda [ i + 1 ]		496071	1					
ANR	496766	Identifier	lambda		496071	0					
ANR	496767	AdditiveExpression	i + 1		496071	1		+			
ANR	496768	Identifier	i		496071	0					
ANR	496769	PrimaryExpression	1		496071	1					
ANR	496770	IfStatement	if ( 2 * el <= r + no_eras - 1 )		496071	2					
ANR	496771	Condition	2 * el <= r + no_eras - 1	508:16:16255:16279	496071	0	True				
ANR	496772	RelationalExpression	2 * el <= r + no_eras - 1		496071	0		<=			
ANR	496773	MultiplicativeExpression	2 * el		496071	0		*			
ANR	496774	PrimaryExpression	2		496071	0					
ANR	496775	Identifier	el		496071	1					
ANR	496776	AdditiveExpression	r + no_eras - 1		496071	1		+			
ANR	496777	Identifier	r		496071	0					
ANR	496778	AdditiveExpression	no_eras - 1		496071	1		-			
ANR	496779	Identifier	no_eras		496071	0					
ANR	496780	PrimaryExpression	1		496071	1					
ANR	496781	CompoundStatement		128:43:4125:4125	496071	1					
ANR	496782	ExpressionStatement	el = r + no_eras - el	509:16:16300:16321	496071	0	True				
ANR	496783	AssignmentExpression	el = r + no_eras - el		496071	0		=			
ANR	496784	Identifier	el		496071	0					
ANR	496785	AdditiveExpression	r + no_eras - el		496071	1		+			
ANR	496786	Identifier	r		496071	0					
ANR	496787	AdditiveExpression	no_eras - el		496071	1		-			
ANR	496788	Identifier	no_eras		496071	0					
ANR	496789	Identifier	el		496071	1					
ANR	496790	ForStatement	for ( i = 0 ; i <= NN - KK ; i ++ )		496071	1					
ANR	496791	ForInit	i = 0 ;	514:21:16470:16475	496071	0	True				
ANR	496792	AssignmentExpression	i = 0		496071	0		=			
ANR	496793	Identifier	i		496071	0					
ANR	496794	PrimaryExpression	0		496071	1					
ANR	496795	Condition	i <= NN - KK	514:28:16477:16488	496071	1	True				
ANR	496796	RelationalExpression	i <= NN - KK		496071	0		<=			
ANR	496797	Identifier	i		496071	0					
ANR	496798	AdditiveExpression	NN - KK		496071	1		-			
ANR	496799	Identifier	NN		496071	0					
ANR	496800	Identifier	KK		496071	1					
ANR	496801	PostIncDecOperationExpression	i ++	514:42:16491:16493	496071	2	True				
ANR	496802	Identifier	i		496071	0					
ANR	496803	IncDec	++		496071	1					
ANR	496804	CompoundStatement		134:47:4339:4339	496071	3					
ANR	496805	ExpressionStatement	b [ i ] = ( lambda [ i ] == 0 ) ? A0 : modnn ( Index_of [ lambda [ i ] ] - discr_r + NN )	515:20:16518:16590	496071	0	True				
ANR	496806	AssignmentExpression	b [ i ] = ( lambda [ i ] == 0 ) ? A0 : modnn ( Index_of [ lambda [ i ] ] - discr_r + NN )		496071	0		=			
ANR	496807	ArrayIndexing	b [ i ]		496071	0					
ANR	496808	Identifier	b		496071	0					
ANR	496809	Identifier	i		496071	1					
ANR	496810	ConditionalExpression	( lambda [ i ] == 0 ) ? A0 : modnn ( Index_of [ lambda [ i ] ] - discr_r + NN )		496071	1					
ANR	496811	Condition	lambda [ i ] == 0		496071	0					
ANR	496812	EqualityExpression	lambda [ i ] == 0		496071	0		==			
ANR	496813	ArrayIndexing	lambda [ i ]		496071	0					
ANR	496814	Identifier	lambda		496071	0					
ANR	496815	Identifier	i		496071	1					
ANR	496816	PrimaryExpression	0		496071	1					
ANR	496817	Identifier	A0		496071	1					
ANR	496818	CallExpression	modnn ( Index_of [ lambda [ i ] ] - discr_r + NN )		496071	2					
ANR	496819	Callee	modnn		496071	0					
ANR	496820	Identifier	modnn		496071	0					
ANR	496821	ArgumentList	Index_of [ lambda [ i ] ] - discr_r + NN		496071	1					
ANR	496822	Argument	Index_of [ lambda [ i ] ] - discr_r + NN		496071	0					
ANR	496823	AdditiveExpression	Index_of [ lambda [ i ] ] - discr_r + NN		496071	0		-			
ANR	496824	ArrayIndexing	Index_of [ lambda [ i ] ]		496071	0					
ANR	496825	Identifier	Index_of		496071	0					
ANR	496826	ArrayIndexing	lambda [ i ]		496071	1					
ANR	496827	Identifier	lambda		496071	0					
ANR	496828	Identifier	i		496071	1					
ANR	496829	AdditiveExpression	discr_r + NN		496071	1		+			
ANR	496830	Identifier	discr_r		496071	0					
ANR	496831	Identifier	NN		496071	1					
ANR	496832	ElseStatement	else		496071	0					
ANR	496833	CompoundStatement		137:19:4472:4472	496071	0					
ANR	496834	ExpressionStatement	"COPYDOWN ( & b [ 1 ] , b , NN - KK )"	519:16:16700:16727	496071	0	True				
ANR	496835	CallExpression	"COPYDOWN ( & b [ 1 ] , b , NN - KK )"		496071	0					
ANR	496836	Callee	COPYDOWN		496071	0					
ANR	496837	Identifier	COPYDOWN		496071	0					
ANR	496838	ArgumentList	& b [ 1 ]		496071	1					
ANR	496839	Argument	& b [ 1 ]		496071	0					
ANR	496840	UnaryOperationExpression	& b [ 1 ]		496071	0					
ANR	496841	UnaryOperator	&		496071	0					
ANR	496842	ArrayIndexing	b [ 1 ]		496071	1					
ANR	496843	Identifier	b		496071	0					
ANR	496844	PrimaryExpression	1		496071	1					
ANR	496845	Argument	b		496071	1					
ANR	496846	Identifier	b		496071	0					
ANR	496847	Argument	NN - KK		496071	2					
ANR	496848	AdditiveExpression	NN - KK		496071	0		-			
ANR	496849	Identifier	NN		496071	0					
ANR	496850	Identifier	KK		496071	1					
ANR	496851	ExpressionStatement	b [ 0 ] = A0	520:16:16745:16754	496071	1	True				
ANR	496852	AssignmentExpression	b [ 0 ] = A0		496071	0		=			
ANR	496853	ArrayIndexing	b [ 0 ]		496071	0					
ANR	496854	Identifier	b		496071	0					
ANR	496855	PrimaryExpression	0		496071	1					
ANR	496856	Identifier	A0		496071	1					
ANR	496857	ExpressionStatement	"COPY ( lambda , t , NN - KK + 1 )"	522:12:16782:16810	496071	3	True				
ANR	496858	CallExpression	"COPY ( lambda , t , NN - KK + 1 )"		496071	0					
ANR	496859	Callee	COPY		496071	0					
ANR	496860	Identifier	COPY		496071	0					
ANR	496861	ArgumentList	lambda		496071	1					
ANR	496862	Argument	lambda		496071	0					
ANR	496863	Identifier	lambda		496071	0					
ANR	496864	Argument	t		496071	1					
ANR	496865	Identifier	t		496071	0					
ANR	496866	Argument	NN - KK + 1		496071	2					
ANR	496867	AdditiveExpression	NN - KK + 1		496071	0		-			
ANR	496868	Identifier	NN		496071	0					
ANR	496869	AdditiveExpression	KK + 1		496071	1		+			
ANR	496870	Identifier	KK		496071	0					
ANR	496871	PrimaryExpression	1		496071	1					
ANR	496872	ExpressionStatement	deg_lambda = 0	527:4:16899:16913	496071	19	True				
ANR	496873	AssignmentExpression	deg_lambda = 0		496071	0		=			
ANR	496874	Identifier	deg_lambda		496071	0					
ANR	496875	PrimaryExpression	0		496071	1					
ANR	496876	ForStatement	for ( i = 0 ; i < NN - KK + 1 ; i ++ )		496071	20					
ANR	496877	ForInit	i = 0 ;	528:9:16924:16929	496071	0	True				
ANR	496878	AssignmentExpression	i = 0		496071	0		=			
ANR	496879	Identifier	i		496071	0					
ANR	496880	PrimaryExpression	0		496071	1					
ANR	496881	Condition	i < NN - KK + 1	528:16:16931:16945	496071	1	True				
ANR	496882	RelationalExpression	i < NN - KK + 1		496071	0		<			
ANR	496883	Identifier	i		496071	0					
ANR	496884	AdditiveExpression	NN - KK + 1		496071	1		-			
ANR	496885	Identifier	NN		496071	0					
ANR	496886	AdditiveExpression	KK + 1		496071	1		+			
ANR	496887	Identifier	KK		496071	0					
ANR	496888	PrimaryExpression	1		496071	1					
ANR	496889	PostIncDecOperationExpression	i ++	528:33:16948:16950	496071	2	True				
ANR	496890	Identifier	i		496071	0					
ANR	496891	IncDec	++		496071	1					
ANR	496892	CompoundStatement		148:38:4796:4796	496071	3					
ANR	496893	ExpressionStatement	lambda [ i ] = Index_of [ lambda [ i ] ]	529:8:16963:16994	496071	0	True				
ANR	496894	AssignmentExpression	lambda [ i ] = Index_of [ lambda [ i ] ]		496071	0		=			
ANR	496895	ArrayIndexing	lambda [ i ]		496071	0					
ANR	496896	Identifier	lambda		496071	0					
ANR	496897	Identifier	i		496071	1					
ANR	496898	ArrayIndexing	Index_of [ lambda [ i ] ]		496071	1					
ANR	496899	Identifier	Index_of		496071	0					
ANR	496900	ArrayIndexing	lambda [ i ]		496071	1					
ANR	496901	Identifier	lambda		496071	0					
ANR	496902	Identifier	i		496071	1					
ANR	496903	IfStatement	if ( lambda [ i ] != A0 )		496071	1					
ANR	496904	Condition	lambda [ i ] != A0	530:12:17008:17022	496071	0	True				
ANR	496905	EqualityExpression	lambda [ i ] != A0		496071	0		!=			
ANR	496906	ArrayIndexing	lambda [ i ]		496071	0					
ANR	496907	Identifier	lambda		496071	0					
ANR	496908	Identifier	i		496071	1					
ANR	496909	Identifier	A0		496071	1					
ANR	496910	CompoundStatement		150:29:4868:4868	496071	1					
ANR	496911	ExpressionStatement	deg_lambda = i	531:12:17039:17053	496071	0	True				
ANR	496912	AssignmentExpression	deg_lambda = i		496071	0		=			
ANR	496913	Identifier	deg_lambda		496071	0					
ANR	496914	Identifier	i		496071	1					
ANR	496915	ExpressionStatement	"COPY ( & reg [ 1 ] , & lambda [ 1 ] , NN - KK )"	538:4:17172:17206	496071	21	True				
ANR	496916	CallExpression	"COPY ( & reg [ 1 ] , & lambda [ 1 ] , NN - KK )"		496071	0					
ANR	496917	Callee	COPY		496071	0					
ANR	496918	Identifier	COPY		496071	0					
ANR	496919	ArgumentList	& reg [ 1 ]		496071	1					
ANR	496920	Argument	& reg [ 1 ]		496071	0					
ANR	496921	UnaryOperationExpression	& reg [ 1 ]		496071	0					
ANR	496922	UnaryOperator	&		496071	0					
ANR	496923	ArrayIndexing	reg [ 1 ]		496071	1					
ANR	496924	Identifier	reg		496071	0					
ANR	496925	PrimaryExpression	1		496071	1					
ANR	496926	Argument	& lambda [ 1 ]		496071	1					
ANR	496927	UnaryOperationExpression	& lambda [ 1 ]		496071	0					
ANR	496928	UnaryOperator	&		496071	0					
ANR	496929	ArrayIndexing	lambda [ 1 ]		496071	1					
ANR	496930	Identifier	lambda		496071	0					
ANR	496931	PrimaryExpression	1		496071	1					
ANR	496932	Argument	NN - KK		496071	2					
ANR	496933	AdditiveExpression	NN - KK		496071	0		-			
ANR	496934	Identifier	NN		496071	0					
ANR	496935	Identifier	KK		496071	1					
ANR	496936	ExpressionStatement	count = 0	539:4:17212:17221	496071	22	True				
ANR	496937	AssignmentExpression	count = 0		496071	0		=			
ANR	496938	Identifier	count		496071	0					
ANR	496939	PrimaryExpression	0		496071	1					
ANR	496940	ForStatement	for ( i = 1 ; i <= NN ; i ++ )		496071	23					
ANR	496941	ForInit	i = 1 ;	540:9:17272:17277	496071	0	True				
ANR	496942	AssignmentExpression	i = 1		496071	0		=			
ANR	496943	Identifier	i		496071	0					
ANR	496944	PrimaryExpression	1		496071	1					
ANR	496945	Condition	i <= NN	540:16:17279:17285	496071	1	True				
ANR	496946	RelationalExpression	i <= NN		496071	0		<=			
ANR	496947	Identifier	i		496071	0					
ANR	496948	Identifier	NN		496071	1					
ANR	496949	PostIncDecOperationExpression	i ++	540:25:17288:17290	496071	2	True				
ANR	496950	Identifier	i		496071	0					
ANR	496951	IncDec	++		496071	1					
ANR	496952	CompoundStatement		160:30:5136:5136	496071	3					
ANR	496953	ExpressionStatement	q = 1	541:8:17303:17308	496071	0	True				
ANR	496954	AssignmentExpression	q = 1		496071	0		=			
ANR	496955	Identifier	q		496071	0					
ANR	496956	PrimaryExpression	1		496071	1					
ANR	496957	ForStatement	for ( j = deg_lambda ; j > 0 ; j -- )		496071	1					
ANR	496958	ForInit	j = deg_lambda ;	542:13:17323:17337	496071	0	True				
ANR	496959	AssignmentExpression	j = deg_lambda		496071	0		=			
ANR	496960	Identifier	j		496071	0					
ANR	496961	Identifier	deg_lambda		496071	1					
ANR	496962	Condition	j > 0	542:29:17339:17343	496071	1	True				
ANR	496963	RelationalExpression	j > 0		496071	0		>			
ANR	496964	Identifier	j		496071	0					
ANR	496965	PrimaryExpression	0		496071	1					
ANR	496966	PostIncDecOperationExpression	j --	542:36:17346:17348	496071	2	True				
ANR	496967	Identifier	j		496071	0					
ANR	496968	IncDec	--		496071	1					
ANR	496969	IfStatement	if ( reg [ j ] != A0 )		496071	3					
ANR	496970	Condition	reg [ j ] != A0	543:16:17367:17378	496071	0	True				
ANR	496971	EqualityExpression	reg [ j ] != A0		496071	0		!=			
ANR	496972	ArrayIndexing	reg [ j ]		496071	0					
ANR	496973	Identifier	reg		496071	0					
ANR	496974	Identifier	j		496071	1					
ANR	496975	Identifier	A0		496071	1					
ANR	496976	CompoundStatement		163:30:5224:5224	496071	1					
ANR	496977	ExpressionStatement	reg [ j ] = modnn ( reg [ j ] + j )	544:16:17399:17425	496071	0	True				
ANR	496978	AssignmentExpression	reg [ j ] = modnn ( reg [ j ] + j )		496071	0		=			
ANR	496979	ArrayIndexing	reg [ j ]		496071	0					
ANR	496980	Identifier	reg		496071	0					
ANR	496981	Identifier	j		496071	1					
ANR	496982	CallExpression	modnn ( reg [ j ] + j )		496071	1					
ANR	496983	Callee	modnn		496071	0					
ANR	496984	Identifier	modnn		496071	0					
ANR	496985	ArgumentList	reg [ j ] + j		496071	1					
ANR	496986	Argument	reg [ j ] + j		496071	0					
ANR	496987	AdditiveExpression	reg [ j ] + j		496071	0		+			
ANR	496988	ArrayIndexing	reg [ j ]		496071	0					
ANR	496989	Identifier	reg		496071	0					
ANR	496990	Identifier	j		496071	1					
ANR	496991	Identifier	j		496071	1					
ANR	496992	ExpressionStatement	q ^= Alpha_to [ reg [ j ] ]	545:16:17443:17464	496071	1	True				
ANR	496993	AssignmentExpression	q ^= Alpha_to [ reg [ j ] ]		496071	0		^=			
ANR	496994	Identifier	q		496071	0					
ANR	496995	ArrayIndexing	Alpha_to [ reg [ j ] ]		496071	1					
ANR	496996	Identifier	Alpha_to		496071	0					
ANR	496997	ArrayIndexing	reg [ j ]		496071	1					
ANR	496998	Identifier	reg		496071	0					
ANR	496999	Identifier	j		496071	1					
ANR	497000	IfStatement	if ( ! q )		496071	2					
ANR	497001	Condition	! q	547:12:17492:17493	496071	0	True				
ANR	497002	UnaryOperationExpression	! q		496071	0					
ANR	497003	UnaryOperator	!		496071	0					
ANR	497004	Identifier	q		496071	1					
ANR	497005	CompoundStatement		167:16:5339:5339	496071	1					
ANR	497006	ExpressionStatement	root [ count ] = i	549:12:17578:17593	496071	0	True				
ANR	497007	AssignmentExpression	root [ count ] = i		496071	0		=			
ANR	497008	ArrayIndexing	root [ count ]		496071	0					
ANR	497009	Identifier	root		496071	0					
ANR	497010	Identifier	count		496071	1					
ANR	497011	Identifier	i		496071	1					
ANR	497012	ExpressionStatement	loc [ count ] = NN - i	550:12:17607:17626	496071	1	True				
ANR	497013	AssignmentExpression	loc [ count ] = NN - i		496071	0		=			
ANR	497014	ArrayIndexing	loc [ count ]		496071	0					
ANR	497015	Identifier	loc		496071	0					
ANR	497016	Identifier	count		496071	1					
ANR	497017	AdditiveExpression	NN - i		496071	1		-			
ANR	497018	Identifier	NN		496071	0					
ANR	497019	Identifier	i		496071	1					
ANR	497020	ExpressionStatement	count ++	551:12:17640:17647	496071	2	True				
ANR	497021	PostIncDecOperationExpression	count ++		496071	0					
ANR	497022	Identifier	count		496071	0					
ANR	497023	IncDec	++		496071	1					
ANR	497024	ExpressionStatement	"printf ( ""\\n Final error positions:\\t"" )"	556:4:17683:17720	496071	24	True				
ANR	497025	CallExpression	"printf ( ""\\n Final error positions:\\t"" )"		496071	0					
ANR	497026	Callee	printf		496071	0					
ANR	497027	Identifier	printf		496071	0					
ANR	497028	ArgumentList	"""\\n Final error positions:\\t"""		496071	1					
ANR	497029	Argument	"""\\n Final error positions:\\t"""		496071	0					
ANR	497030	PrimaryExpression	"""\\n Final error positions:\\t"""		496071	0					
ANR	497031	ForStatement	for ( i = 0 ; i < count ; i ++ )		496071	25					
ANR	497032	ForInit	i = 0 ;	557:9:17731:17736	496071	0	True				
ANR	497033	AssignmentExpression	i = 0		496071	0		=			
ANR	497034	Identifier	i		496071	0					
ANR	497035	PrimaryExpression	0		496071	1					
ANR	497036	Condition	i < count	557:16:17738:17746	496071	1	True				
ANR	497037	RelationalExpression	i < count		496071	0		<			
ANR	497038	Identifier	i		496071	0					
ANR	497039	Identifier	count		496071	1					
ANR	497040	PostIncDecOperationExpression	i ++	557:27:17749:17751	496071	2	True				
ANR	497041	Identifier	i		496071	0					
ANR	497042	IncDec	++		496071	1					
ANR	497043	CompoundStatement		177:32:5597:5597	496071	3					
ANR	497044	ExpressionStatement	"printf ( ""%d "" , loc [ i ] )"	558:8:17764:17785	496071	0	True				
ANR	497045	CallExpression	"printf ( ""%d "" , loc [ i ] )"		496071	0					
ANR	497046	Callee	printf		496071	0					
ANR	497047	Identifier	printf		496071	0					
ANR	497048	ArgumentList	"""%d """		496071	1					
ANR	497049	Argument	"""%d """		496071	0					
ANR	497050	PrimaryExpression	"""%d """		496071	0					
ANR	497051	Argument	loc [ i ]		496071	1					
ANR	497052	ArrayIndexing	loc [ i ]		496071	0					
ANR	497053	Identifier	loc		496071	0					
ANR	497054	Identifier	i		496071	1					
ANR	497055	ExpressionStatement	"printf ( ""\\n"" )"	560:4:17797:17809	496071	26	True				
ANR	497056	CallExpression	"printf ( ""\\n"" )"		496071	0					
ANR	497057	Callee	printf		496071	0					
ANR	497058	Identifier	printf		496071	0					
ANR	497059	ArgumentList	"""\\n"""		496071	1					
ANR	497060	Argument	"""\\n"""		496071	0					
ANR	497061	PrimaryExpression	"""\\n"""		496071	0					
ANR	497062	IfStatement	if ( deg_lambda != count )		496071	27					
ANR	497063	Condition	deg_lambda != count	562:8:17826:17844	496071	0	True				
ANR	497064	EqualityExpression	deg_lambda != count		496071	0		!=			
ANR	497065	Identifier	deg_lambda		496071	0					
ANR	497066	Identifier	count		496071	1					
ANR	497067	CompoundStatement		182:29:5690:5690	496071	1					
ANR	497068	ReturnStatement	return - 1 ;	567:8:17973:17982	496071	0	True				
ANR	497069	UnaryOperationExpression	- 1		496071	0					
ANR	497070	UnaryOperator	-		496071	0					
ANR	497071	PrimaryExpression	1		496071	1					
ANR	497072	ExpressionStatement	deg_omega = 0	573:4:18139:18152	496071	28	True				
ANR	497073	AssignmentExpression	deg_omega = 0		496071	0		=			
ANR	497074	Identifier	deg_omega		496071	0					
ANR	497075	PrimaryExpression	0		496071	1					
ANR	497076	ForStatement	for ( i = 0 ; i < NN - KK ; i ++ )		496071	29					
ANR	497077	ForInit	i = 0 ;	574:9:18163:18168	496071	0	True				
ANR	497078	AssignmentExpression	i = 0		496071	0		=			
ANR	497079	Identifier	i		496071	0					
ANR	497080	PrimaryExpression	0		496071	1					
ANR	497081	Condition	i < NN - KK	574:16:18170:18180	496071	1	True				
ANR	497082	RelationalExpression	i < NN - KK		496071	0		<			
ANR	497083	Identifier	i		496071	0					
ANR	497084	AdditiveExpression	NN - KK		496071	1		-			
ANR	497085	Identifier	NN		496071	0					
ANR	497086	Identifier	KK		496071	1					
ANR	497087	PostIncDecOperationExpression	i ++	574:29:18183:18185	496071	2	True				
ANR	497088	Identifier	i		496071	0					
ANR	497089	IncDec	++		496071	1					
ANR	497090	CompoundStatement		194:34:6031:6031	496071	3					
ANR	497091	ExpressionStatement	tmp = 0	575:8:18198:18205	496071	0	True				
ANR	497092	AssignmentExpression	tmp = 0		496071	0		=			
ANR	497093	Identifier	tmp		496071	0					
ANR	497094	PrimaryExpression	0		496071	1					
ANR	497095	ExpressionStatement	j = ( deg_lambda < i ) ? deg_lambda : i	576:8:18215:18252	496071	1	True				
ANR	497096	AssignmentExpression	j = ( deg_lambda < i ) ? deg_lambda : i		496071	0		=			
ANR	497097	Identifier	j		496071	0					
ANR	497098	ConditionalExpression	( deg_lambda < i ) ? deg_lambda : i		496071	1					
ANR	497099	Condition	deg_lambda < i		496071	0					
ANR	497100	RelationalExpression	deg_lambda < i		496071	0		<			
ANR	497101	Identifier	deg_lambda		496071	0					
ANR	497102	Identifier	i		496071	1					
ANR	497103	Identifier	deg_lambda		496071	1					
ANR	497104	Identifier	i		496071	2					
ANR	497105	ForStatement	for ( ; j >= 0 ; j -- )		496071	2					
ANR	497106	Condition	j >= 0	577:15:18269:18274	496071	0	True				
ANR	497107	RelationalExpression	j >= 0		496071	0		>=			
ANR	497108	Identifier	j		496071	0					
ANR	497109	PrimaryExpression	0		496071	1					
ANR	497110	PostIncDecOperationExpression	j --	577:23:18277:18279	496071	1	True				
ANR	497111	Identifier	j		496071	0					
ANR	497112	IncDec	--		496071	1					
ANR	497113	CompoundStatement		197:28:6125:6125	496071	2					
ANR	497114	IfStatement	if ( ( s [ i + 1 - j ] != A0 ) && ( lambda [ j ] != A0 ) )		496071	0					
ANR	497115	Condition	( s [ i + 1 - j ] != A0 ) && ( lambda [ j ] != A0 )	578:16:18300:18340	496071	0	True				
ANR	497116	AndExpression	( s [ i + 1 - j ] != A0 ) && ( lambda [ j ] != A0 )		496071	0		&&			
ANR	497117	EqualityExpression	s [ i + 1 - j ] != A0		496071	0		!=			
ANR	497118	ArrayIndexing	s [ i + 1 - j ]		496071	0					
ANR	497119	Identifier	s		496071	0					
ANR	497120	AdditiveExpression	i + 1 - j		496071	1		+			
ANR	497121	Identifier	i		496071	0					
ANR	497122	AdditiveExpression	1 - j		496071	1		-			
ANR	497123	PrimaryExpression	1		496071	0					
ANR	497124	Identifier	j		496071	1					
ANR	497125	Identifier	A0		496071	1					
ANR	497126	EqualityExpression	lambda [ j ] != A0		496071	1		!=			
ANR	497127	ArrayIndexing	lambda [ j ]		496071	0					
ANR	497128	Identifier	lambda		496071	0					
ANR	497129	Identifier	j		496071	1					
ANR	497130	Identifier	A0		496071	1					
ANR	497131	CompoundStatement		198:59:6186:6186	496071	1					
ANR	497132	ExpressionStatement	tmp ^= Alpha_to [ modnn ( s [ i + 1 - j ] + lambda [ j ] ) ]	579:16:18361:18409	496071	0	True				
ANR	497133	AssignmentExpression	tmp ^= Alpha_to [ modnn ( s [ i + 1 - j ] + lambda [ j ] ) ]		496071	0		^=			
ANR	497134	Identifier	tmp		496071	0					
ANR	497135	ArrayIndexing	Alpha_to [ modnn ( s [ i + 1 - j ] + lambda [ j ] ) ]		496071	1					
ANR	497136	Identifier	Alpha_to		496071	0					
ANR	497137	CallExpression	modnn ( s [ i + 1 - j ] + lambda [ j ] )		496071	1					
ANR	497138	Callee	modnn		496071	0					
ANR	497139	Identifier	modnn		496071	0					
ANR	497140	ArgumentList	s [ i + 1 - j ] + lambda [ j ]		496071	1					
ANR	497141	Argument	s [ i + 1 - j ] + lambda [ j ]		496071	0					
ANR	497142	AdditiveExpression	s [ i + 1 - j ] + lambda [ j ]		496071	0		+			
ANR	497143	ArrayIndexing	s [ i + 1 - j ]		496071	0					
ANR	497144	Identifier	s		496071	0					
ANR	497145	AdditiveExpression	i + 1 - j		496071	1		+			
ANR	497146	Identifier	i		496071	0					
ANR	497147	AdditiveExpression	1 - j		496071	1		-			
ANR	497148	PrimaryExpression	1		496071	0					
ANR	497149	Identifier	j		496071	1					
ANR	497150	ArrayIndexing	lambda [ j ]		496071	1					
ANR	497151	Identifier	lambda		496071	0					
ANR	497152	Identifier	j		496071	1					
ANR	497153	IfStatement	if ( tmp != 0 )		496071	3					
ANR	497154	Condition	tmp != 0	582:12:18447:18454	496071	0	True				
ANR	497155	EqualityExpression	tmp != 0		496071	0		!=			
ANR	497156	Identifier	tmp		496071	0					
ANR	497157	PrimaryExpression	0		496071	1					
ANR	497158	CompoundStatement		202:22:6300:6300	496071	1					
ANR	497159	ExpressionStatement	deg_omega = i	583:12:18471:18484	496071	0	True				
ANR	497160	AssignmentExpression	deg_omega = i		496071	0		=			
ANR	497161	Identifier	deg_omega		496071	0					
ANR	497162	Identifier	i		496071	1					
ANR	497163	ExpressionStatement	omega [ i ] = Index_of [ tmp ]	585:8:18504:18528	496071	4	True				
ANR	497164	AssignmentExpression	omega [ i ] = Index_of [ tmp ]		496071	0		=			
ANR	497165	ArrayIndexing	omega [ i ]		496071	0					
ANR	497166	Identifier	omega		496071	0					
ANR	497167	Identifier	i		496071	1					
ANR	497168	ArrayIndexing	Index_of [ tmp ]		496071	1					
ANR	497169	Identifier	Index_of		496071	0					
ANR	497170	Identifier	tmp		496071	1					
ANR	497171	ExpressionStatement	omega [ NN - KK ] = A0	587:4:18540:18559	496071	30	True				
ANR	497172	AssignmentExpression	omega [ NN - KK ] = A0		496071	0		=			
ANR	497173	ArrayIndexing	omega [ NN - KK ]		496071	0					
ANR	497174	Identifier	omega		496071	0					
ANR	497175	AdditiveExpression	NN - KK		496071	1		-			
ANR	497176	Identifier	NN		496071	0					
ANR	497177	Identifier	KK		496071	1					
ANR	497178	Identifier	A0		496071	1					
ANR	497179	ForStatement	for ( j = count - 1 ; j >= 0 ; j -- )		496071	31					
ANR	497180	ForInit	j = count - 1 ;	593:9:18733:18746	496071	0	True				
ANR	497181	AssignmentExpression	j = count - 1		496071	0		=			
ANR	497182	Identifier	j		496071	0					
ANR	497183	AdditiveExpression	count - 1		496071	1		-			
ANR	497184	Identifier	count		496071	0					
ANR	497185	PrimaryExpression	1		496071	1					
ANR	497186	Condition	j >= 0	593:24:18748:18753	496071	1	True				
ANR	497187	RelationalExpression	j >= 0		496071	0		>=			
ANR	497188	Identifier	j		496071	0					
ANR	497189	PrimaryExpression	0		496071	1					
ANR	497190	PostIncDecOperationExpression	j --	593:32:18756:18758	496071	2	True				
ANR	497191	Identifier	j		496071	0					
ANR	497192	IncDec	--		496071	1					
ANR	497193	CompoundStatement		213:37:6604:6604	496071	3					
ANR	497194	ExpressionStatement	num1 = 0	594:8:18771:18779	496071	0	True				
ANR	497195	AssignmentExpression	num1 = 0		496071	0		=			
ANR	497196	Identifier	num1		496071	0					
ANR	497197	PrimaryExpression	0		496071	1					
ANR	497198	ForStatement	for ( i = deg_omega ; i >= 0 ; i -- )		496071	1					
ANR	497199	ForInit	i = deg_omega ;	595:13:18794:18807	496071	0	True				
ANR	497200	AssignmentExpression	i = deg_omega		496071	0		=			
ANR	497201	Identifier	i		496071	0					
ANR	497202	Identifier	deg_omega		496071	1					
ANR	497203	Condition	i >= 0	595:28:18809:18814	496071	1	True				
ANR	497204	RelationalExpression	i >= 0		496071	0		>=			
ANR	497205	Identifier	i		496071	0					
ANR	497206	PrimaryExpression	0		496071	1					
ANR	497207	PostIncDecOperationExpression	i --	595:36:18817:18819	496071	2	True				
ANR	497208	Identifier	i		496071	0					
ANR	497209	IncDec	--		496071	1					
ANR	497210	CompoundStatement		215:41:6665:6665	496071	3					
ANR	497211	IfStatement	if ( omega [ i ] != A0 )		496071	0					
ANR	497212	Condition	omega [ i ] != A0	596:16:18840:18853	496071	0	True				
ANR	497213	EqualityExpression	omega [ i ] != A0		496071	0		!=			
ANR	497214	ArrayIndexing	omega [ i ]		496071	0					
ANR	497215	Identifier	omega		496071	0					
ANR	497216	Identifier	i		496071	1					
ANR	497217	Identifier	A0		496071	1					
ANR	497218	CompoundStatement		216:32:6699:6699	496071	1					
ANR	497219	ExpressionStatement	num1 ^= Alpha_to [ modnn ( omega [ i ] + i * root [ j ] ) ]	597:16:18874:18922	496071	0	True				
ANR	497220	AssignmentExpression	num1 ^= Alpha_to [ modnn ( omega [ i ] + i * root [ j ] ) ]		496071	0		^=			
ANR	497221	Identifier	num1		496071	0					
ANR	497222	ArrayIndexing	Alpha_to [ modnn ( omega [ i ] + i * root [ j ] ) ]		496071	1					
ANR	497223	Identifier	Alpha_to		496071	0					
ANR	497224	CallExpression	modnn ( omega [ i ] + i * root [ j ] )		496071	1					
ANR	497225	Callee	modnn		496071	0					
ANR	497226	Identifier	modnn		496071	0					
ANR	497227	ArgumentList	omega [ i ] + i * root [ j ]		496071	1					
ANR	497228	Argument	omega [ i ] + i * root [ j ]		496071	0					
ANR	497229	AdditiveExpression	omega [ i ] + i * root [ j ]		496071	0		+			
ANR	497230	ArrayIndexing	omega [ i ]		496071	0					
ANR	497231	Identifier	omega		496071	0					
ANR	497232	Identifier	i		496071	1					
ANR	497233	MultiplicativeExpression	i * root [ j ]		496071	1		*			
ANR	497234	Identifier	i		496071	0					
ANR	497235	ArrayIndexing	root [ j ]		496071	1					
ANR	497236	Identifier	root		496071	0					
ANR	497237	Identifier	j		496071	1					
ANR	497238	ExpressionStatement	num2 = Alpha_to [ modnn ( root [ j ] * ( B0 - 1 ) + NN ) ]	600:8:18956:19003	496071	2	True				
ANR	497239	AssignmentExpression	num2 = Alpha_to [ modnn ( root [ j ] * ( B0 - 1 ) + NN ) ]		496071	0		=			
ANR	497240	Identifier	num2		496071	0					
ANR	497241	ArrayIndexing	Alpha_to [ modnn ( root [ j ] * ( B0 - 1 ) + NN ) ]		496071	1					
ANR	497242	Identifier	Alpha_to		496071	0					
ANR	497243	CallExpression	modnn ( root [ j ] * ( B0 - 1 ) + NN )		496071	1					
ANR	497244	Callee	modnn		496071	0					
ANR	497245	Identifier	modnn		496071	0					
ANR	497246	ArgumentList	root [ j ] * ( B0 - 1 ) + NN		496071	1					
ANR	497247	Argument	root [ j ] * ( B0 - 1 ) + NN		496071	0					
ANR	497248	AdditiveExpression	root [ j ] * ( B0 - 1 ) + NN		496071	0		+			
ANR	497249	MultiplicativeExpression	root [ j ] * ( B0 - 1 )		496071	0		*			
ANR	497250	ArrayIndexing	root [ j ]		496071	0					
ANR	497251	Identifier	root		496071	0					
ANR	497252	Identifier	j		496071	1					
ANR	497253	AdditiveExpression	B0 - 1		496071	1		-			
ANR	497254	Identifier	B0		496071	0					
ANR	497255	PrimaryExpression	1		496071	1					
ANR	497256	Identifier	NN		496071	1					
ANR	497257	ExpressionStatement	den = 0	601:8:19013:19020	496071	3	True				
ANR	497258	AssignmentExpression	den = 0		496071	0		=			
ANR	497259	Identifier	den		496071	0					
ANR	497260	PrimaryExpression	0		496071	1					
ANR	497261	ForStatement	"for ( i = min ( deg_lambda , NN - KK - 1 ) & ~1 ; i >= 0 ; i -= 2 )"		496071	4					
ANR	497262	ForInit	"i = min ( deg_lambda , NN - KK - 1 ) & ~1 ;"	604:13:19121:19158	496071	0	True				
ANR	497263	AssignmentExpression	"i = min ( deg_lambda , NN - KK - 1 ) & ~1"		496071	0		=			
ANR	497264	Identifier	i		496071	0					
ANR	497265	BitAndExpression	"min ( deg_lambda , NN - KK - 1 ) & ~1"		496071	1		&			
ANR	497266	CallExpression	"min ( deg_lambda , NN - KK - 1 )"		496071	0					
ANR	497267	Callee	min		496071	0					
ANR	497268	Identifier	min		496071	0					
ANR	497269	ArgumentList	deg_lambda		496071	1					
ANR	497270	Argument	deg_lambda		496071	0					
ANR	497271	Identifier	deg_lambda		496071	0					
ANR	497272	Argument	NN - KK - 1		496071	1					
ANR	497273	AdditiveExpression	NN - KK - 1		496071	0		-			
ANR	497274	Identifier	NN		496071	0					
ANR	497275	AdditiveExpression	KK - 1		496071	1		-			
ANR	497276	Identifier	KK		496071	0					
ANR	497277	PrimaryExpression	1		496071	1					
ANR	497278	Identifier	~1		496071	1					
ANR	497279	Condition	i >= 0	604:52:19160:19165	496071	1	True				
ANR	497280	RelationalExpression	i >= 0		496071	0		>=			
ANR	497281	Identifier	i		496071	0					
ANR	497282	PrimaryExpression	0		496071	1					
ANR	497283	AssignmentExpression	i -= 2	604:60:19168:19173	496071	2	True	-=			
ANR	497284	Identifier	i		496071	0					
ANR	497285	PrimaryExpression	2		496071	1					
ANR	497286	CompoundStatement		224:68:7019:7019	496071	3					
ANR	497287	IfStatement	if ( lambda [ i + 1 ] != A0 )		496071	0					
ANR	497288	Condition	lambda [ i + 1 ] != A0	605:16:19194:19212	496071	0	True				
ANR	497289	EqualityExpression	lambda [ i + 1 ] != A0		496071	0		!=			
ANR	497290	ArrayIndexing	lambda [ i + 1 ]		496071	0					
ANR	497291	Identifier	lambda		496071	0					
ANR	497292	AdditiveExpression	i + 1		496071	1		+			
ANR	497293	Identifier	i		496071	0					
ANR	497294	PrimaryExpression	1		496071	1					
ANR	497295	Identifier	A0		496071	1					
ANR	497296	CompoundStatement		225:37:7058:7058	496071	1					
ANR	497297	ExpressionStatement	den ^= Alpha_to [ modnn ( lambda [ i + 1 ] + i * root [ j ] ) ]	606:16:19233:19284	496071	0	True				
ANR	497298	AssignmentExpression	den ^= Alpha_to [ modnn ( lambda [ i + 1 ] + i * root [ j ] ) ]		496071	0		^=			
ANR	497299	Identifier	den		496071	0					
ANR	497300	ArrayIndexing	Alpha_to [ modnn ( lambda [ i + 1 ] + i * root [ j ] ) ]		496071	1					
ANR	497301	Identifier	Alpha_to		496071	0					
ANR	497302	CallExpression	modnn ( lambda [ i + 1 ] + i * root [ j ] )		496071	1					
ANR	497303	Callee	modnn		496071	0					
ANR	497304	Identifier	modnn		496071	0					
ANR	497305	ArgumentList	lambda [ i + 1 ] + i * root [ j ]		496071	1					
ANR	497306	Argument	lambda [ i + 1 ] + i * root [ j ]		496071	0					
ANR	497307	AdditiveExpression	lambda [ i + 1 ] + i * root [ j ]		496071	0		+			
ANR	497308	ArrayIndexing	lambda [ i + 1 ]		496071	0					
ANR	497309	Identifier	lambda		496071	0					
ANR	497310	AdditiveExpression	i + 1		496071	1		+			
ANR	497311	Identifier	i		496071	0					
ANR	497312	PrimaryExpression	1		496071	1					
ANR	497313	MultiplicativeExpression	i * root [ j ]		496071	1		*			
ANR	497314	Identifier	i		496071	0					
ANR	497315	ArrayIndexing	root [ j ]		496071	1					
ANR	497316	Identifier	root		496071	0					
ANR	497317	Identifier	j		496071	1					
ANR	497318	IfStatement	if ( den == 0 )		496071	5					
ANR	497319	Condition	den == 0	609:12:19322:19329	496071	0	True				
ANR	497320	EqualityExpression	den == 0		496071	0		==			
ANR	497321	Identifier	den		496071	0					
ANR	497322	PrimaryExpression	0		496071	1					
ANR	497323	CompoundStatement		229:22:7175:7175	496071	1					
ANR	497324	ExpressionStatement	"printf ( ""\\n ERROR: denominator = 0\\n"" )"	611:12:19359:19396	496071	0	True				
ANR	497325	CallExpression	"printf ( ""\\n ERROR: denominator = 0\\n"" )"		496071	0					
ANR	497326	Callee	printf		496071	0					
ANR	497327	Identifier	printf		496071	0					
ANR	497328	ArgumentList	"""\\n ERROR: denominator = 0\\n"""		496071	1					
ANR	497329	Argument	"""\\n ERROR: denominator = 0\\n"""		496071	0					
ANR	497330	PrimaryExpression	"""\\n ERROR: denominator = 0\\n"""		496071	0					
ANR	497331	ReturnStatement	return - 1 ;	613:12:19417:19426	496071	1	True				
ANR	497332	UnaryOperationExpression	- 1		496071	0					
ANR	497333	UnaryOperator	-		496071	0					
ANR	497334	PrimaryExpression	1		496071	1					
ANR	497335	IfStatement	if ( num1 != 0 )		496071	6					
ANR	497336	Condition	num1 != 0	616:12:19484:19492	496071	0	True				
ANR	497337	EqualityExpression	num1 != 0		496071	0		!=			
ANR	497338	Identifier	num1		496071	0					
ANR	497339	PrimaryExpression	0		496071	1					
ANR	497340	CompoundStatement		236:23:7338:7338	496071	1					
ANR	497341	ExpressionStatement	data [ loc [ j ] ] ^= Alpha_to [ modnn ( Index_of [ num1 ] + Index_of [ num2 ] + NN - Index_of [ den ] ) ]	617:12:19509:19637	496071	0	True				
ANR	497342	AssignmentExpression	data [ loc [ j ] ] ^= Alpha_to [ modnn ( Index_of [ num1 ] + Index_of [ num2 ] + NN - Index_of [ den ] ) ]		496071	0		^=			
ANR	497343	ArrayIndexing	data [ loc [ j ] ]		496071	0					
ANR	497344	Identifier	data		496071	0					
ANR	497345	ArrayIndexing	loc [ j ]		496071	1					
ANR	497346	Identifier	loc		496071	0					
ANR	497347	Identifier	j		496071	1					
ANR	497348	ArrayIndexing	Alpha_to [ modnn ( Index_of [ num1 ] + Index_of [ num2 ] + NN - Index_of [ den ] ) ]		496071	1					
ANR	497349	Identifier	Alpha_to		496071	0					
ANR	497350	CallExpression	modnn ( Index_of [ num1 ] + Index_of [ num2 ] + NN - Index_of [ den ] )		496071	1					
ANR	497351	Callee	modnn		496071	0					
ANR	497352	Identifier	modnn		496071	0					
ANR	497353	ArgumentList	Index_of [ num1 ] + Index_of [ num2 ] + NN - Index_of [ den ]		496071	1					
ANR	497354	Argument	Index_of [ num1 ] + Index_of [ num2 ] + NN - Index_of [ den ]		496071	0					
ANR	497355	AdditiveExpression	Index_of [ num1 ] + Index_of [ num2 ] + NN - Index_of [ den ]		496071	0		+			
ANR	497356	ArrayIndexing	Index_of [ num1 ]		496071	0					
ANR	497357	Identifier	Index_of		496071	0					
ANR	497358	Identifier	num1		496071	1					
ANR	497359	AdditiveExpression	Index_of [ num2 ] + NN - Index_of [ den ]		496071	1		+			
ANR	497360	ArrayIndexing	Index_of [ num2 ]		496071	0					
ANR	497361	Identifier	Index_of		496071	0					
ANR	497362	Identifier	num2		496071	1					
ANR	497363	AdditiveExpression	NN - Index_of [ den ]		496071	1		-			
ANR	497364	Identifier	NN		496071	0					
ANR	497365	ArrayIndexing	Index_of [ den ]		496071	1					
ANR	497366	Identifier	Index_of		496071	0					
ANR	497367	Identifier	den		496071	1					
ANR	497368	ReturnStatement	return count ;	621:4:19659:19671	496071	32	True				
ANR	497369	Identifier	count		496071	0					
ANR	497370	ReturnType	int		496071	1					
ANR	497371	Identifier	eras_dec_rs		496071	2					
ANR	497372	ParameterList	"dtype * data , int * eras_pos , int no_eras"		496071	3					
ANR	497373	Parameter	dtype * data	380:12:12115:12125	496071	0	True				
ANR	497374	ParameterType	dtype *		496071	0					
ANR	497375	Identifier	data		496071	1					
ANR	497376	Parameter	int * eras_pos	380:25:12128:12140	496071	1	True				
ANR	497377	ParameterType	int *		496071	0					
ANR	497378	Identifier	eras_pos		496071	1					
ANR	497379	Parameter	int no_eras	380:40:12143:12153	496071	2	True				
ANR	497380	ParameterType	int		496071	0					
ANR	497381	Identifier	no_eras		496071	1					
ANR	497382	CFGEntryNode	ENTRY		496071		True				
ANR	497383	CFGExitNode	EXIT		496071		True				
ANR	497384	Symbol	* num2		496071						
ANR	497385	Symbol	* num1		496071						
ANR	497386	Symbol	data		496071						
ANR	497387	Symbol	* KK		496071						
ANR	497388	Symbol	Index_of		496071						
ANR	497389	Symbol	den		496071						
ANR	497390	Symbol	A0		496071						
ANR	497391	Symbol	* count		496071						
ANR	497392	Symbol	lambda		496071						
ANR	497393	Symbol	* Index_of		496071						
ANR	497394	Symbol	* * loc		496071						
ANR	497395	Symbol	reg		496071						
ANR	497396	Symbol	* eras_pos		496071						
ANR	497397	Symbol	tmp		496071						
ANR	497398	Symbol	* * eras_pos		496071						
ANR	497399	Symbol	* * lambda		496071						
ANR	497400	Symbol	no_eras		496071						
ANR	497401	Symbol	* * j		496071						
ANR	497402	Symbol	* * i		496071						
ANR	497403	Symbol	el		496071						
ANR	497404	Symbol	count		496071						
ANR	497405	Symbol	* recd		496071						
ANR	497406	Symbol	* loc		496071						
ANR	497407	Symbol	syn_error		496071						
ANR	497408	Symbol	deg_lambda		496071						
ANR	497409	Symbol	omega		496071						
ANR	497410	Symbol	B0		496071						
ANR	497411	Symbol	discr_r		496071						
ANR	497412	Symbol	* root		496071						
ANR	497413	Symbol	* Alpha_to		496071						
ANR	497414	Symbol	NN		496071						
ANR	497415	Symbol	* * data		496071						
ANR	497416	Symbol	loc		496071						
ANR	497417	Symbol	* tmp		496071						
ANR	497418	Symbol	* discr_r		496071						
ANR	497419	Symbol	* den		496071						
ANR	497420	Symbol	Alpha_to		496071						
ANR	497421	Symbol	eras_pos		496071						
ANR	497422	Symbol	min		496071						
ANR	497423	Symbol	root		496071						
ANR	497424	Symbol	num1		496071						
ANR	497425	Symbol	* modnn		496071						
ANR	497426	Symbol	* omega		496071						
ANR	497427	Symbol	num2		496071						
ANR	497428	Symbol	KK		496071						
ANR	497429	Symbol	recd		496071						
ANR	497430	Symbol	b		496071						
ANR	497431	Symbol	* NN		496071						
ANR	497432	Symbol	* * reg		496071						
ANR	497433	Symbol	i		496071						
ANR	497434	Symbol	j		496071						
ANR	497435	Symbol	* b		496071						
ANR	497436	Symbol	q		496071						
ANR	497437	Symbol	modnn		496071						
ANR	497438	Symbol	r		496071						
ANR	497439	Symbol	s		496071						
ANR	497440	Symbol	* i		496071						
ANR	497441	Symbol	* lambda		496071						
ANR	497442	Symbol	~1		496071						
ANR	497443	Symbol	t		496071						
ANR	497444	Symbol	* j		496071						
ANR	497445	Symbol	u		496071						
ANR	497446	Symbol	deg_omega		496071						
ANR	497447	Symbol	* r		496071						
ANR	497448	Symbol	* data		496071						
ANR	497449	Symbol	* s		496071						
ANR	497450	Symbol	* reg		496071						
ANR	497451	Symbol	* t		496071						
