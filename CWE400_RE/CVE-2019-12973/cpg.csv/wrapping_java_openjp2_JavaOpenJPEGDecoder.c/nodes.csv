command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1149424	File	data/converged/CVE-2019-12973_openjpeg/wrapping_java_openjp2_JavaOpenJPEGDecoder.c								
ANR	1149425	ClassDef	callback_variables	54:8:2221:2478							
ANR	1149426	DeclStmt									
ANR	1149427	Decl							JNIEnv	JNIEnv *	env
ANR	1149428	DeclStmt									
ANR	1149429	Decl							jobject	jobject *	jobj
ANR	1149430	DeclStmt									
ANR	1149431	Decl							jmethodID	jmethodID	message_mid
ANR	1149432	DeclStmt									
ANR	1149433	Decl							jmethodID	jmethodID	error_mid
ANR	1149434	DeclStmt									
ANR	1149435	Decl							callback_variables	callback_variables	callback_variables_t
ANR	1149436	ClassDef	dircnt	63:8:2491:2641							
ANR	1149437	DeclStmt									
ANR	1149438	Decl							char	char *	filename_buf
ANR	1149439	DeclStmt									
ANR	1149440	Decl							char	char * *	filename
ANR	1149441	DeclStmt									
ANR	1149442	Decl							dircnt	dircnt	dircnt_t
ANR	1149443	ClassDef	img_folder	71:8:2656:2916							
ANR	1149444	DeclStmt									
ANR	1149445	Decl							char	char *	imgdirpath
ANR	1149446	DeclStmt									
ANR	1149447	Decl							char	char *	out_format
ANR	1149448	DeclStmt									
ANR	1149449	Decl							char	char	set_imgdir
ANR	1149450	DeclStmt									
ANR	1149451	Decl							char	char	set_out_format
ANR	1149452	DeclStmt									
ANR	1149453	Decl							img_folder	img_folder	img_fol_t
ANR	1149454	Function	decode_help_display	84:0:2923:5870							
ANR	1149455	FunctionDef	decode_help_display ()		1149454	0					
ANR	1149456	CompoundStatement		84:27:2950:5870	1149454	0					
ANR	1149457	ExpressionStatement	"fprintf ( stdout , ""HELP\\n----\\n\\n"" )"	85:1:2954:2986	1149454	0	True				
ANR	1149458	CallExpression	"fprintf ( stdout , ""HELP\\n----\\n\\n"" )"		1149454	0					
ANR	1149459	Callee	fprintf		1149454	0					
ANR	1149460	Identifier	fprintf		1149454	0					
ANR	1149461	ArgumentList	stdout		1149454	1					
ANR	1149462	Argument	stdout		1149454	0					
ANR	1149463	Identifier	stdout		1149454	0					
ANR	1149464	Argument	"""HELP\\n----\\n\\n"""		1149454	1					
ANR	1149465	PrimaryExpression	"""HELP\\n----\\n\\n"""		1149454	0					
ANR	1149466	ExpressionStatement	"fprintf ( stdout , ""- the -h option displays this help information on screen\\n\\n"" )"	86:1:2990:3068	1149454	1	True				
ANR	1149467	CallExpression	"fprintf ( stdout , ""- the -h option displays this help information on screen\\n\\n"" )"		1149454	0					
ANR	1149468	Callee	fprintf		1149454	0					
ANR	1149469	Identifier	fprintf		1149454	0					
ANR	1149470	ArgumentList	stdout		1149454	1					
ANR	1149471	Argument	stdout		1149454	0					
ANR	1149472	Identifier	stdout		1149454	0					
ANR	1149473	Argument	"""- the -h option displays this help information on screen\\n\\n"""		1149454	1					
ANR	1149474	PrimaryExpression	"""- the -h option displays this help information on screen\\n\\n"""		1149454	0					
ANR	1149475	Statement	fprintf	89:1:3089:3095	1149454	2	True				
ANR	1149476	Statement	(	89:8:3096:3096	1149454	3	True				
ANR	1149477	Statement	stdout	89:9:3097:3102	1149454	4	True				
ANR	1149478	Statement	","	89:15:3103:3103	1149454	5	True				
ANR	1149479	Statement	"""List of parameters for the JPEG 2000 """	89:16:3104:3142	1149454	6	True				
ANR	1149480	Statement	"""+ JPWL """	91:2:3164:3172	1149454	7	True				
ANR	1149481	Statement	"""decoder:\\n"""	93:2:3200:3211	1149454	8	True				
ANR	1149482	Statement	)	93:14:3212:3212	1149454	9	True				
ANR	1149483	ExpressionStatement		93:15:3213:3213	1149454	10	True				
ANR	1149484	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	95:1:3232:3252	1149454	11	True				
ANR	1149485	CallExpression	"fprintf ( stdout , ""\\n"" )"		1149454	0					
ANR	1149486	Callee	fprintf		1149454	0					
ANR	1149487	Identifier	fprintf		1149454	0					
ANR	1149488	ArgumentList	stdout		1149454	1					
ANR	1149489	Argument	stdout		1149454	0					
ANR	1149490	Identifier	stdout		1149454	0					
ANR	1149491	Argument	"""\\n"""		1149454	1					
ANR	1149492	PrimaryExpression	"""\\n"""		1149454	0					
ANR	1149493	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	96:1:3256:3276	1149454	12	True				
ANR	1149494	CallExpression	"fprintf ( stdout , ""\\n"" )"		1149454	0					
ANR	1149495	Callee	fprintf		1149454	0					
ANR	1149496	Identifier	fprintf		1149454	0					
ANR	1149497	ArgumentList	stdout		1149454	1					
ANR	1149498	Argument	stdout		1149454	0					
ANR	1149499	Identifier	stdout		1149454	0					
ANR	1149500	Argument	"""\\n"""		1149454	1					
ANR	1149501	PrimaryExpression	"""\\n"""		1149454	0					
ANR	1149502	ExpressionStatement	"fprintf ( stdout , ""  -ImgDir \\n"" )"	97:1:3280:3310	1149454	13	True				
ANR	1149503	CallExpression	"fprintf ( stdout , ""  -ImgDir \\n"" )"		1149454	0					
ANR	1149504	Callee	fprintf		1149454	0					
ANR	1149505	Identifier	fprintf		1149454	0					
ANR	1149506	ArgumentList	stdout		1149454	1					
ANR	1149507	Argument	stdout		1149454	0					
ANR	1149508	Identifier	stdout		1149454	0					
ANR	1149509	Argument	"""  -ImgDir \\n"""		1149454	1					
ANR	1149510	PrimaryExpression	"""  -ImgDir \\n"""		1149454	0					
ANR	1149511	ExpressionStatement	"fprintf ( stdout , ""\\tImage file Directory path \\n"" )"	98:1:3314:3361	1149454	14	True				
ANR	1149512	CallExpression	"fprintf ( stdout , ""\\tImage file Directory path \\n"" )"		1149454	0					
ANR	1149513	Callee	fprintf		1149454	0					
ANR	1149514	Identifier	fprintf		1149454	0					
ANR	1149515	ArgumentList	stdout		1149454	1					
ANR	1149516	Argument	stdout		1149454	0					
ANR	1149517	Identifier	stdout		1149454	0					
ANR	1149518	Argument	"""\\tImage file Directory path \\n"""		1149454	1					
ANR	1149519	PrimaryExpression	"""\\tImage file Directory path \\n"""		1149454	0					
ANR	1149520	ExpressionStatement	"fprintf ( stdout , ""  -OutFor \\n"" )"	99:1:3365:3395	1149454	15	True				
ANR	1149521	CallExpression	"fprintf ( stdout , ""  -OutFor \\n"" )"		1149454	0					
ANR	1149522	Callee	fprintf		1149454	0					
ANR	1149523	Identifier	fprintf		1149454	0					
ANR	1149524	ArgumentList	stdout		1149454	1					
ANR	1149525	Argument	stdout		1149454	0					
ANR	1149526	Identifier	stdout		1149454	0					
ANR	1149527	Argument	"""  -OutFor \\n"""		1149454	1					
ANR	1149528	PrimaryExpression	"""  -OutFor \\n"""		1149454	0					
ANR	1149529	ExpressionStatement	"fprintf ( stdout , ""    REQUIRED only if -ImgDir is used\\n"" )"	100:1:3399:3455	1149454	16	True				
ANR	1149530	CallExpression	"fprintf ( stdout , ""    REQUIRED only if -ImgDir is used\\n"" )"		1149454	0					
ANR	1149531	Callee	fprintf		1149454	0					
ANR	1149532	Identifier	fprintf		1149454	0					
ANR	1149533	ArgumentList	stdout		1149454	1					
ANR	1149534	Argument	stdout		1149454	0					
ANR	1149535	Identifier	stdout		1149454	0					
ANR	1149536	Argument	"""    REQUIRED only if -ImgDir is used\\n"""		1149454	1					
ANR	1149537	PrimaryExpression	"""    REQUIRED only if -ImgDir is used\\n"""		1149454	0					
ANR	1149538	ExpressionStatement	"fprintf ( stdout , ""\\t  Need to specify only format without filename <BMP>  \\n"" )"	101:1:3459:3534	1149454	17	True				
ANR	1149539	CallExpression	"fprintf ( stdout , ""\\t  Need to specify only format without filename <BMP>  \\n"" )"		1149454	0					
ANR	1149540	Callee	fprintf		1149454	0					
ANR	1149541	Identifier	fprintf		1149454	0					
ANR	1149542	ArgumentList	stdout		1149454	1					
ANR	1149543	Argument	stdout		1149454	0					
ANR	1149544	Identifier	stdout		1149454	0					
ANR	1149545	Argument	"""\\t  Need to specify only format without filename <BMP>  \\n"""		1149454	1					
ANR	1149546	PrimaryExpression	"""\\t  Need to specify only format without filename <BMP>  \\n"""		1149454	0					
ANR	1149547	ExpressionStatement	"fprintf ( stdout , ""    Currently accepts PGM, PPM, PNM, PGX, BMP format\\n"" )"	102:1:3538:3610	1149454	18	True				
ANR	1149548	CallExpression	"fprintf ( stdout , ""    Currently accepts PGM, PPM, PNM, PGX, BMP format\\n"" )"		1149454	0					
ANR	1149549	Callee	fprintf		1149454	0					
ANR	1149550	Identifier	fprintf		1149454	0					
ANR	1149551	ArgumentList	stdout		1149454	1					
ANR	1149552	Argument	stdout		1149454	0					
ANR	1149553	Identifier	stdout		1149454	0					
ANR	1149554	Argument	"""    Currently accepts PGM, PPM, PNM, PGX, BMP format\\n"""		1149454	1					
ANR	1149555	PrimaryExpression	"""    Currently accepts PGM, PPM, PNM, PGX, BMP format\\n"""		1149454	0					
ANR	1149556	ExpressionStatement	"fprintf ( stdout , ""  -i <compressed file>\\n"" )"	103:1:3614:3656	1149454	19	True				
ANR	1149557	CallExpression	"fprintf ( stdout , ""  -i <compressed file>\\n"" )"		1149454	0					
ANR	1149558	Callee	fprintf		1149454	0					
ANR	1149559	Identifier	fprintf		1149454	0					
ANR	1149560	ArgumentList	stdout		1149454	1					
ANR	1149561	Argument	stdout		1149454	0					
ANR	1149562	Identifier	stdout		1149454	0					
ANR	1149563	Argument	"""  -i <compressed file>\\n"""		1149454	1					
ANR	1149564	PrimaryExpression	"""  -i <compressed file>\\n"""		1149454	0					
ANR	1149565	ExpressionStatement	"fprintf ( stdout , ""    REQUIRED only if an Input image directory not specified\\n"" )"	104:1:3660:3739	1149454	20	True				
ANR	1149566	CallExpression	"fprintf ( stdout , ""    REQUIRED only if an Input image directory not specified\\n"" )"		1149454	0					
ANR	1149567	Callee	fprintf		1149454	0					
ANR	1149568	Identifier	fprintf		1149454	0					
ANR	1149569	ArgumentList	stdout		1149454	1					
ANR	1149570	Argument	stdout		1149454	0					
ANR	1149571	Identifier	stdout		1149454	0					
ANR	1149572	Argument	"""    REQUIRED only if an Input image directory not specified\\n"""		1149454	1					
ANR	1149573	PrimaryExpression	"""    REQUIRED only if an Input image directory not specified\\n"""		1149454	0					
ANR	1149574	ExpressionStatement	"fprintf ( stdout , ""    Currently accepts J2K-files, JP2-files and JPT-files. The file type\\n"" )"	105:1:3743:3834	1149454	21	True				
ANR	1149575	CallExpression	"fprintf ( stdout , ""    Currently accepts J2K-files, JP2-files and JPT-files. The file type\\n"" )"		1149454	0					
ANR	1149576	Callee	fprintf		1149454	0					
ANR	1149577	Identifier	fprintf		1149454	0					
ANR	1149578	ArgumentList	stdout		1149454	1					
ANR	1149579	Argument	stdout		1149454	0					
ANR	1149580	Identifier	stdout		1149454	0					
ANR	1149581	Argument	"""    Currently accepts J2K-files, JP2-files and JPT-files. The file type\\n"""		1149454	1					
ANR	1149582	PrimaryExpression	"""    Currently accepts J2K-files, JP2-files and JPT-files. The file type\\n"""		1149454	0					
ANR	1149583	ExpressionStatement	"fprintf ( stdout , ""    is identified based on its suffix.\\n"" )"	106:1:3838:3896	1149454	22	True				
ANR	1149584	CallExpression	"fprintf ( stdout , ""    is identified based on its suffix.\\n"" )"		1149454	0					
ANR	1149585	Callee	fprintf		1149454	0					
ANR	1149586	Identifier	fprintf		1149454	0					
ANR	1149587	ArgumentList	stdout		1149454	1					
ANR	1149588	Argument	stdout		1149454	0					
ANR	1149589	Identifier	stdout		1149454	0					
ANR	1149590	Argument	"""    is identified based on its suffix.\\n"""		1149454	1					
ANR	1149591	PrimaryExpression	"""    is identified based on its suffix.\\n"""		1149454	0					
ANR	1149592	ExpressionStatement	"fprintf ( stdout , ""  -o <decompressed file>\\n"" )"	107:1:3900:3944	1149454	23	True				
ANR	1149593	CallExpression	"fprintf ( stdout , ""  -o <decompressed file>\\n"" )"		1149454	0					
ANR	1149594	Callee	fprintf		1149454	0					
ANR	1149595	Identifier	fprintf		1149454	0					
ANR	1149596	ArgumentList	stdout		1149454	1					
ANR	1149597	Argument	stdout		1149454	0					
ANR	1149598	Identifier	stdout		1149454	0					
ANR	1149599	Argument	"""  -o <decompressed file>\\n"""		1149454	1					
ANR	1149600	PrimaryExpression	"""  -o <decompressed file>\\n"""		1149454	0					
ANR	1149601	ExpressionStatement	"fprintf ( stdout , ""    REQUIRED\\n"" )"	108:1:3948:3980	1149454	24	True				
ANR	1149602	CallExpression	"fprintf ( stdout , ""    REQUIRED\\n"" )"		1149454	0					
ANR	1149603	Callee	fprintf		1149454	0					
ANR	1149604	Identifier	fprintf		1149454	0					
ANR	1149605	ArgumentList	stdout		1149454	1					
ANR	1149606	Argument	stdout		1149454	0					
ANR	1149607	Identifier	stdout		1149454	0					
ANR	1149608	Argument	"""    REQUIRED\\n"""		1149454	1					
ANR	1149609	PrimaryExpression	"""    REQUIRED\\n"""		1149454	0					
ANR	1149610	ExpressionStatement	"fprintf ( stdout , ""    Currently accepts PGM-files, PPM-files, PNM-files, PGX-files and\\n"" )"	109:1:3984:4072	1149454	25	True				
ANR	1149611	CallExpression	"fprintf ( stdout , ""    Currently accepts PGM-files, PPM-files, PNM-files, PGX-files and\\n"" )"		1149454	0					
ANR	1149612	Callee	fprintf		1149454	0					
ANR	1149613	Identifier	fprintf		1149454	0					
ANR	1149614	ArgumentList	stdout		1149454	1					
ANR	1149615	Argument	stdout		1149454	0					
ANR	1149616	Identifier	stdout		1149454	0					
ANR	1149617	Argument	"""    Currently accepts PGM-files, PPM-files, PNM-files, PGX-files and\\n"""		1149454	1					
ANR	1149618	PrimaryExpression	"""    Currently accepts PGM-files, PPM-files, PNM-files, PGX-files and\\n"""		1149454	0					
ANR	1149619	ExpressionStatement	"fprintf ( stdout , ""    BMP-files. Binary data is written to the file (not ascii). If a PGX\\n"" )"	110:1:4076:4167	1149454	26	True				
ANR	1149620	CallExpression	"fprintf ( stdout , ""    BMP-files. Binary data is written to the file (not ascii). If a PGX\\n"" )"		1149454	0					
ANR	1149621	Callee	fprintf		1149454	0					
ANR	1149622	Identifier	fprintf		1149454	0					
ANR	1149623	ArgumentList	stdout		1149454	1					
ANR	1149624	Argument	stdout		1149454	0					
ANR	1149625	Identifier	stdout		1149454	0					
ANR	1149626	Argument	"""    BMP-files. Binary data is written to the file (not ascii). If a PGX\\n"""		1149454	1					
ANR	1149627	PrimaryExpression	"""    BMP-files. Binary data is written to the file (not ascii). If a PGX\\n"""		1149454	0					
ANR	1149628	ExpressionStatement	"fprintf ( stdout , ""    filename is given, there will be as many output files as there are\\n"" )"	111:1:4171:4261	1149454	27	True				
ANR	1149629	CallExpression	"fprintf ( stdout , ""    filename is given, there will be as many output files as there are\\n"" )"		1149454	0					
ANR	1149630	Callee	fprintf		1149454	0					
ANR	1149631	Identifier	fprintf		1149454	0					
ANR	1149632	ArgumentList	stdout		1149454	1					
ANR	1149633	Argument	stdout		1149454	0					
ANR	1149634	Identifier	stdout		1149454	0					
ANR	1149635	Argument	"""    filename is given, there will be as many output files as there are\\n"""		1149454	1					
ANR	1149636	PrimaryExpression	"""    filename is given, there will be as many output files as there are\\n"""		1149454	0					
ANR	1149637	ExpressionStatement	"fprintf ( stdout , ""    components: an indice starting from 0 will then be appended to the\\n"" )"	112:1:4265:4355	1149454	28	True				
ANR	1149638	CallExpression	"fprintf ( stdout , ""    components: an indice starting from 0 will then be appended to the\\n"" )"		1149454	0					
ANR	1149639	Callee	fprintf		1149454	0					
ANR	1149640	Identifier	fprintf		1149454	0					
ANR	1149641	ArgumentList	stdout		1149454	1					
ANR	1149642	Argument	stdout		1149454	0					
ANR	1149643	Identifier	stdout		1149454	0					
ANR	1149644	Argument	"""    components: an indice starting from 0 will then be appended to the\\n"""		1149454	1					
ANR	1149645	PrimaryExpression	"""    components: an indice starting from 0 will then be appended to the\\n"""		1149454	0					
ANR	1149646	ExpressionStatement	"fprintf ( stdout , ""    output filename, just before the \\""pgx\\"" extension. If a PGM filename\\n"" )"	113:1:4359:4452	1149454	29	True				
ANR	1149647	CallExpression	"fprintf ( stdout , ""    output filename, just before the \\""pgx\\"" extension. If a PGM filename\\n"" )"		1149454	0					
ANR	1149648	Callee	fprintf		1149454	0					
ANR	1149649	Identifier	fprintf		1149454	0					
ANR	1149650	ArgumentList	stdout		1149454	1					
ANR	1149651	Argument	stdout		1149454	0					
ANR	1149652	Identifier	stdout		1149454	0					
ANR	1149653	Argument	"""    output filename, just before the \\""pgx\\"" extension. If a PGM filename\\n"""		1149454	1					
ANR	1149654	PrimaryExpression	"""    output filename, just before the \\""pgx\\"" extension. If a PGM filename\\n"""		1149454	0					
ANR	1149655	ExpressionStatement	"fprintf ( stdout , ""    is given and there are more than one component, only the first component\\n"" )"	114:1:4456:4552	1149454	30	True				
ANR	1149656	CallExpression	"fprintf ( stdout , ""    is given and there are more than one component, only the first component\\n"" )"		1149454	0					
ANR	1149657	Callee	fprintf		1149454	0					
ANR	1149658	Identifier	fprintf		1149454	0					
ANR	1149659	ArgumentList	stdout		1149454	1					
ANR	1149660	Argument	stdout		1149454	0					
ANR	1149661	Identifier	stdout		1149454	0					
ANR	1149662	Argument	"""    is given and there are more than one component, only the first component\\n"""		1149454	1					
ANR	1149663	PrimaryExpression	"""    is given and there are more than one component, only the first component\\n"""		1149454	0					
ANR	1149664	ExpressionStatement	"fprintf ( stdout , ""    will be written to the file.\\n"" )"	115:1:4556:4608	1149454	31	True				
ANR	1149665	CallExpression	"fprintf ( stdout , ""    will be written to the file.\\n"" )"		1149454	0					
ANR	1149666	Callee	fprintf		1149454	0					
ANR	1149667	Identifier	fprintf		1149454	0					
ANR	1149668	ArgumentList	stdout		1149454	1					
ANR	1149669	Argument	stdout		1149454	0					
ANR	1149670	Identifier	stdout		1149454	0					
ANR	1149671	Argument	"""    will be written to the file.\\n"""		1149454	1					
ANR	1149672	PrimaryExpression	"""    will be written to the file.\\n"""		1149454	0					
ANR	1149673	ExpressionStatement	"fprintf ( stdout , ""  -r <reduce factor>\\n"" )"	116:1:4612:4652	1149454	32	True				
ANR	1149674	CallExpression	"fprintf ( stdout , ""  -r <reduce factor>\\n"" )"		1149454	0					
ANR	1149675	Callee	fprintf		1149454	0					
ANR	1149676	Identifier	fprintf		1149454	0					
ANR	1149677	ArgumentList	stdout		1149454	1					
ANR	1149678	Argument	stdout		1149454	0					
ANR	1149679	Identifier	stdout		1149454	0					
ANR	1149680	Argument	"""  -r <reduce factor>\\n"""		1149454	1					
ANR	1149681	PrimaryExpression	"""  -r <reduce factor>\\n"""		1149454	0					
ANR	1149682	ExpressionStatement	"fprintf ( stdout , ""    Set the number of highest resolution levels to be discarded. The\\n"" )"	117:1:4656:4744	1149454	33	True				
ANR	1149683	CallExpression	"fprintf ( stdout , ""    Set the number of highest resolution levels to be discarded. The\\n"" )"		1149454	0					
ANR	1149684	Callee	fprintf		1149454	0					
ANR	1149685	Identifier	fprintf		1149454	0					
ANR	1149686	ArgumentList	stdout		1149454	1					
ANR	1149687	Argument	stdout		1149454	0					
ANR	1149688	Identifier	stdout		1149454	0					
ANR	1149689	Argument	"""    Set the number of highest resolution levels to be discarded. The\\n"""		1149454	1					
ANR	1149690	PrimaryExpression	"""    Set the number of highest resolution levels to be discarded. The\\n"""		1149454	0					
ANR	1149691	ExpressionStatement	"fprintf ( stdout , ""    image resolution is effectively divided by 2 to the power of the\\n"" )"	118:1:4748:4836	1149454	34	True				
ANR	1149692	CallExpression	"fprintf ( stdout , ""    image resolution is effectively divided by 2 to the power of the\\n"" )"		1149454	0					
ANR	1149693	Callee	fprintf		1149454	0					
ANR	1149694	Identifier	fprintf		1149454	0					
ANR	1149695	ArgumentList	stdout		1149454	1					
ANR	1149696	Argument	stdout		1149454	0					
ANR	1149697	Identifier	stdout		1149454	0					
ANR	1149698	Argument	"""    image resolution is effectively divided by 2 to the power of the\\n"""		1149454	1					
ANR	1149699	PrimaryExpression	"""    image resolution is effectively divided by 2 to the power of the\\n"""		1149454	0					
ANR	1149700	ExpressionStatement	"fprintf ( stdout , ""    number of discarded levels. The reduce factor is limited by the\\n"" )"	119:1:4840:4927	1149454	35	True				
ANR	1149701	CallExpression	"fprintf ( stdout , ""    number of discarded levels. The reduce factor is limited by the\\n"" )"		1149454	0					
ANR	1149702	Callee	fprintf		1149454	0					
ANR	1149703	Identifier	fprintf		1149454	0					
ANR	1149704	ArgumentList	stdout		1149454	1					
ANR	1149705	Argument	stdout		1149454	0					
ANR	1149706	Identifier	stdout		1149454	0					
ANR	1149707	Argument	"""    number of discarded levels. The reduce factor is limited by the\\n"""		1149454	1					
ANR	1149708	PrimaryExpression	"""    number of discarded levels. The reduce factor is limited by the\\n"""		1149454	0					
ANR	1149709	ExpressionStatement	"fprintf ( stdout , ""    smallest total number of decomposition levels among tiles.\\n"" )"	120:1:4931:5013	1149454	36	True				
ANR	1149710	CallExpression	"fprintf ( stdout , ""    smallest total number of decomposition levels among tiles.\\n"" )"		1149454	0					
ANR	1149711	Callee	fprintf		1149454	0					
ANR	1149712	Identifier	fprintf		1149454	0					
ANR	1149713	ArgumentList	stdout		1149454	1					
ANR	1149714	Argument	stdout		1149454	0					
ANR	1149715	Identifier	stdout		1149454	0					
ANR	1149716	Argument	"""    smallest total number of decomposition levels among tiles.\\n"""		1149454	1					
ANR	1149717	PrimaryExpression	"""    smallest total number of decomposition levels among tiles.\\n"""		1149454	0					
ANR	1149718	ExpressionStatement	"fprintf ( stdout , ""  -l <number of quality layers to decode>\\n"" )"	121:1:5017:5078	1149454	37	True				
ANR	1149719	CallExpression	"fprintf ( stdout , ""  -l <number of quality layers to decode>\\n"" )"		1149454	0					
ANR	1149720	Callee	fprintf		1149454	0					
ANR	1149721	Identifier	fprintf		1149454	0					
ANR	1149722	ArgumentList	stdout		1149454	1					
ANR	1149723	Argument	stdout		1149454	0					
ANR	1149724	Identifier	stdout		1149454	0					
ANR	1149725	Argument	"""  -l <number of quality layers to decode>\\n"""		1149454	1					
ANR	1149726	PrimaryExpression	"""  -l <number of quality layers to decode>\\n"""		1149454	0					
ANR	1149727	ExpressionStatement	"fprintf ( stdout , ""    Set the maximum number of quality layers to decode. If there are\\n"" )"	122:1:5082:5170	1149454	38	True				
ANR	1149728	CallExpression	"fprintf ( stdout , ""    Set the maximum number of quality layers to decode. If there are\\n"" )"		1149454	0					
ANR	1149729	Callee	fprintf		1149454	0					
ANR	1149730	Identifier	fprintf		1149454	0					
ANR	1149731	ArgumentList	stdout		1149454	1					
ANR	1149732	Argument	stdout		1149454	0					
ANR	1149733	Identifier	stdout		1149454	0					
ANR	1149734	Argument	"""    Set the maximum number of quality layers to decode. If there are\\n"""		1149454	1					
ANR	1149735	PrimaryExpression	"""    Set the maximum number of quality layers to decode. If there are\\n"""		1149454	0					
ANR	1149736	ExpressionStatement	"fprintf ( stdout , ""    less quality layers than the specified number, all the quality layers\\n"" )"	123:1:5174:5267	1149454	39	True				
ANR	1149737	CallExpression	"fprintf ( stdout , ""    less quality layers than the specified number, all the quality layers\\n"" )"		1149454	0					
ANR	1149738	Callee	fprintf		1149454	0					
ANR	1149739	Identifier	fprintf		1149454	0					
ANR	1149740	ArgumentList	stdout		1149454	1					
ANR	1149741	Argument	stdout		1149454	0					
ANR	1149742	Identifier	stdout		1149454	0					
ANR	1149743	Argument	"""    less quality layers than the specified number, all the quality layers\\n"""		1149454	1					
ANR	1149744	PrimaryExpression	"""    less quality layers than the specified number, all the quality layers\\n"""		1149454	0					
ANR	1149745	ExpressionStatement	"fprintf ( stdout , ""    are decoded.\\n"" )"	124:1:5271:5307	1149454	40	True				
ANR	1149746	CallExpression	"fprintf ( stdout , ""    are decoded.\\n"" )"		1149454	0					
ANR	1149747	Callee	fprintf		1149454	0					
ANR	1149748	Identifier	fprintf		1149454	0					
ANR	1149749	ArgumentList	stdout		1149454	1					
ANR	1149750	Argument	stdout		1149454	0					
ANR	1149751	Identifier	stdout		1149454	0					
ANR	1149752	Argument	"""    are decoded.\\n"""		1149454	1					
ANR	1149753	PrimaryExpression	"""    are decoded.\\n"""		1149454	0					
ANR	1149754	ExpressionStatement	"fprintf ( stdout , ""  -W <options>\\n"" )"	127:1:5343:5377	1149454	41	True				
ANR	1149755	CallExpression	"fprintf ( stdout , ""  -W <options>\\n"" )"		1149454	0					
ANR	1149756	Callee	fprintf		1149454	0					
ANR	1149757	Identifier	fprintf		1149454	0					
ANR	1149758	ArgumentList	stdout		1149454	1					
ANR	1149759	Argument	stdout		1149454	0					
ANR	1149760	Identifier	stdout		1149454	0					
ANR	1149761	Argument	"""  -W <options>\\n"""		1149454	1					
ANR	1149762	PrimaryExpression	"""  -W <options>\\n"""		1149454	0					
ANR	1149763	ExpressionStatement	"fprintf ( stdout , ""    Activates the JPWL correction capability, if the codestream complies.\\n"" )"	128:1:5381:5474	1149454	42	True				
ANR	1149764	CallExpression	"fprintf ( stdout , ""    Activates the JPWL correction capability, if the codestream complies.\\n"" )"		1149454	0					
ANR	1149765	Callee	fprintf		1149454	0					
ANR	1149766	Identifier	fprintf		1149454	0					
ANR	1149767	ArgumentList	stdout		1149454	1					
ANR	1149768	Argument	stdout		1149454	0					
ANR	1149769	Identifier	stdout		1149454	0					
ANR	1149770	Argument	"""    Activates the JPWL correction capability, if the codestream complies.\\n"""		1149454	1					
ANR	1149771	PrimaryExpression	"""    Activates the JPWL correction capability, if the codestream complies.\\n"""		1149454	0					
ANR	1149772	ExpressionStatement	"fprintf ( stdout , ""    Options can be a comma separated list of <param=val> tokens:\\n"" )"	129:1:5478:5562	1149454	43	True				
ANR	1149773	CallExpression	"fprintf ( stdout , ""    Options can be a comma separated list of <param=val> tokens:\\n"" )"		1149454	0					
ANR	1149774	Callee	fprintf		1149454	0					
ANR	1149775	Identifier	fprintf		1149454	0					
ANR	1149776	ArgumentList	stdout		1149454	1					
ANR	1149777	Argument	stdout		1149454	0					
ANR	1149778	Identifier	stdout		1149454	0					
ANR	1149779	Argument	"""    Options can be a comma separated list of <param=val> tokens:\\n"""		1149454	1					
ANR	1149780	PrimaryExpression	"""    Options can be a comma separated list of <param=val> tokens:\\n"""		1149454	0					
ANR	1149781	ExpressionStatement	"fprintf ( stdout , ""    c, c=numcomps\\n"" )"	130:1:5566:5603	1149454	44	True				
ANR	1149782	CallExpression	"fprintf ( stdout , ""    c, c=numcomps\\n"" )"		1149454	0					
ANR	1149783	Callee	fprintf		1149454	0					
ANR	1149784	Identifier	fprintf		1149454	0					
ANR	1149785	ArgumentList	stdout		1149454	1					
ANR	1149786	Argument	stdout		1149454	0					
ANR	1149787	Identifier	stdout		1149454	0					
ANR	1149788	Argument	"""    c, c=numcomps\\n"""		1149454	1					
ANR	1149789	PrimaryExpression	"""    c, c=numcomps\\n"""		1149454	0					
ANR	1149790	ExpressionStatement	"fprintf ( stdout , ""       numcomps is the number of expected components in the codestream\\n"" )"	131:1:5607:5697	1149454	45	True				
ANR	1149791	CallExpression	"fprintf ( stdout , ""       numcomps is the number of expected components in the codestream\\n"" )"		1149454	0					
ANR	1149792	Callee	fprintf		1149454	0					
ANR	1149793	Identifier	fprintf		1149454	0					
ANR	1149794	ArgumentList	stdout		1149454	1					
ANR	1149795	Argument	stdout		1149454	0					
ANR	1149796	Identifier	stdout		1149454	0					
ANR	1149797	Argument	"""       numcomps is the number of expected components in the codestream\\n"""		1149454	1					
ANR	1149798	PrimaryExpression	"""       numcomps is the number of expected components in the codestream\\n"""		1149454	0					
ANR	1149799	ExpressionStatement	"fprintf ( stdout , ""       (search of first EPB rely upon this, default is %d)\\n"" , JPWL_EXPECTED_COMPONENTS )"	132:1:5701:5805	1149454	46	True				
ANR	1149800	CallExpression	"fprintf ( stdout , ""       (search of first EPB rely upon this, default is %d)\\n"" , JPWL_EXPECTED_COMPONENTS )"		1149454	0					
ANR	1149801	Callee	fprintf		1149454	0					
ANR	1149802	Identifier	fprintf		1149454	0					
ANR	1149803	ArgumentList	stdout		1149454	1					
ANR	1149804	Argument	stdout		1149454	0					
ANR	1149805	Identifier	stdout		1149454	0					
ANR	1149806	Argument	"""       (search of first EPB rely upon this, default is %d)\\n"""		1149454	1					
ANR	1149807	PrimaryExpression	"""       (search of first EPB rely upon this, default is %d)\\n"""		1149454	0					
ANR	1149808	Argument	JPWL_EXPECTED_COMPONENTS		1149454	2					
ANR	1149809	Identifier	JPWL_EXPECTED_COMPONENTS		1149454	0					
ANR	1149810	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	135:1:5847:5867	1149454	47	True				
ANR	1149811	CallExpression	"fprintf ( stdout , ""\\n"" )"		1149454	0					
ANR	1149812	Callee	fprintf		1149454	0					
ANR	1149813	Identifier	fprintf		1149454	0					
ANR	1149814	ArgumentList	stdout		1149454	1					
ANR	1149815	Argument	stdout		1149454	0					
ANR	1149816	Identifier	stdout		1149454	0					
ANR	1149817	Argument	"""\\n"""		1149454	1					
ANR	1149818	PrimaryExpression	"""\\n"""		1149454	0					
ANR	1149819	ReturnType	void		1149454	1					
ANR	1149820	Identifier	decode_help_display		1149454	2					
ANR	1149821	ParameterList			1149454	3					
ANR	1149822	CFGEntryNode	ENTRY		1149454		True				
ANR	1149823	CFGExitNode	EXIT		1149454		True				
ANR	1149824	Symbol	stdout		1149454						
ANR	1149825	Symbol	JPWL_EXPECTED_COMPONENTS		1149454						
ANR	1149826	Function	get_num_images	140:0:5959:6410							
ANR	1149827	FunctionDef	get_num_images (char * imgdirpath)		1149826	0					
ANR	1149828	CompoundStatement		140:36:5995:6410	1149826	0					
ANR	1149829	IdentifierDeclStatement	DIR * dir ;	141:1:5999:6007	1149826	0	True				
ANR	1149830	IdentifierDecl	* dir		1149826	0					
ANR	1149831	IdentifierDeclType	DIR *		1149826	0					
ANR	1149832	Identifier	dir		1149826	1					
ANR	1149833	IdentifierDeclStatement	struct dirent * content ;	142:1:6011:6033	1149826	1	True				
ANR	1149834	IdentifierDecl	* content		1149826	0					
ANR	1149835	IdentifierDeclType	struct dirent *		1149826	0					
ANR	1149836	Identifier	content		1149826	1					
ANR	1149837	IdentifierDeclStatement	int num_images = 0 ;	143:1:6038:6056	1149826	2	True				
ANR	1149838	IdentifierDecl	num_images = 0		1149826	0					
ANR	1149839	IdentifierDeclType	int		1149826	0					
ANR	1149840	Identifier	num_images		1149826	1					
ANR	1149841	AssignmentExpression	num_images = 0		1149826	2		=			
ANR	1149842	Identifier	num_images		1149826	0					
ANR	1149843	PrimaryExpression	0		1149826	1					
ANR	1149844	ExpressionStatement	dir = opendir ( imgdirpath )	147:1:6122:6146	1149826	3	True				
ANR	1149845	AssignmentExpression	dir = opendir ( imgdirpath )		1149826	0		=			
ANR	1149846	Identifier	dir		1149826	0					
ANR	1149847	CallExpression	opendir ( imgdirpath )		1149826	1					
ANR	1149848	Callee	opendir		1149826	0					
ANR	1149849	Identifier	opendir		1149826	0					
ANR	1149850	ArgumentList	imgdirpath		1149826	1					
ANR	1149851	Argument	imgdirpath		1149826	0					
ANR	1149852	Identifier	imgdirpath		1149826	0					
ANR	1149853	IfStatement	if ( ! dir )		1149826	4					
ANR	1149854	Condition	! dir	148:4:6153:6156	1149826	0	True				
ANR	1149855	UnaryOperationExpression	! dir		1149826	0					
ANR	1149856	UnaryOperator	!		1149826	0					
ANR	1149857	Identifier	dir		1149826	1					
ANR	1149858	CompoundStatement		9:9:162:162	1149826	1					
ANR	1149859	ExpressionStatement	"fprintf ( stderr , ""Could not open Folder %s\\n"" , imgdirpath )"	149:2:6163:6218	1149826	0	True				
ANR	1149860	CallExpression	"fprintf ( stderr , ""Could not open Folder %s\\n"" , imgdirpath )"		1149826	0					
ANR	1149861	Callee	fprintf		1149826	0					
ANR	1149862	Identifier	fprintf		1149826	0					
ANR	1149863	ArgumentList	stderr		1149826	1					
ANR	1149864	Argument	stderr		1149826	0					
ANR	1149865	Identifier	stderr		1149826	0					
ANR	1149866	Argument	"""Could not open Folder %s\\n"""		1149826	1					
ANR	1149867	PrimaryExpression	"""Could not open Folder %s\\n"""		1149826	0					
ANR	1149868	Argument	imgdirpath		1149826	2					
ANR	1149869	Identifier	imgdirpath		1149826	0					
ANR	1149870	ReturnStatement	return 0 ;	150:2:6223:6231	1149826	1	True				
ANR	1149871	PrimaryExpression	0		1149826	0					
ANR	1149872	WhileStatement	while ( ( content = readdir ( dir ) ) != NULL )		1149826	5					
ANR	1149873	Condition	( content = readdir ( dir ) ) != NULL	153:7:6248:6275	1149826	0	True				
ANR	1149874	EqualityExpression	( content = readdir ( dir ) ) != NULL		1149826	0		!=			
ANR	1149875	AssignmentExpression	content = readdir ( dir )		1149826	0		=			
ANR	1149876	Identifier	content		1149826	0					
ANR	1149877	CallExpression	readdir ( dir )		1149826	1					
ANR	1149878	Callee	readdir		1149826	0					
ANR	1149879	Identifier	readdir		1149826	0					
ANR	1149880	ArgumentList	dir		1149826	1					
ANR	1149881	Argument	dir		1149826	0					
ANR	1149882	Identifier	dir		1149826	0					
ANR	1149883	Identifier	NULL		1149826	1					
ANR	1149884	CompoundStatement		14:36:281:281	1149826	1					
ANR	1149885	IfStatement	"if ( strcmp ( ""."" , content -> d_name ) == 0 || strcmp ( "".."" , content -> d_name ) == 0 )"		1149826	0					
ANR	1149886	Condition	"strcmp ( ""."" , content -> d_name ) == 0 || strcmp ( "".."" , content -> d_name ) == 0"	154:5:6285:6349	1149826	0	True				
ANR	1149887	OrExpression	"strcmp ( ""."" , content -> d_name ) == 0 || strcmp ( "".."" , content -> d_name ) == 0"		1149826	0		||			
ANR	1149888	EqualityExpression	"strcmp ( ""."" , content -> d_name ) == 0"		1149826	0		==			
ANR	1149889	CallExpression	"strcmp ( ""."" , content -> d_name )"		1149826	0					
ANR	1149890	Callee	strcmp		1149826	0					
ANR	1149891	Identifier	strcmp		1149826	0					
ANR	1149892	ArgumentList	"""."""		1149826	1					
ANR	1149893	Argument	"""."""		1149826	0					
ANR	1149894	PrimaryExpression	"""."""		1149826	0					
ANR	1149895	Argument	content -> d_name		1149826	1					
ANR	1149896	PtrMemberAccess	content -> d_name		1149826	0					
ANR	1149897	Identifier	content		1149826	0					
ANR	1149898	Identifier	d_name		1149826	1					
ANR	1149899	PrimaryExpression	0		1149826	1					
ANR	1149900	EqualityExpression	"strcmp ( "".."" , content -> d_name ) == 0"		1149826	1		==			
ANR	1149901	CallExpression	"strcmp ( "".."" , content -> d_name )"		1149826	0					
ANR	1149902	Callee	strcmp		1149826	0					
ANR	1149903	Identifier	strcmp		1149826	0					
ANR	1149904	ArgumentList	""".."""		1149826	1					
ANR	1149905	Argument	""".."""		1149826	0					
ANR	1149906	PrimaryExpression	""".."""		1149826	0					
ANR	1149907	Argument	content -> d_name		1149826	1					
ANR	1149908	PtrMemberAccess	content -> d_name		1149826	0					
ANR	1149909	Identifier	content		1149826	0					
ANR	1149910	Identifier	d_name		1149826	1					
ANR	1149911	PrimaryExpression	0		1149826	1					
ANR	1149912	ContinueStatement	continue ;	155:3:6357:6365	1149826	1	True				
ANR	1149913	ExpressionStatement	num_images ++	156:2:6370:6382	1149826	1	True				
ANR	1149914	PostIncDecOperationExpression	num_images ++		1149826	0					
ANR	1149915	Identifier	num_images		1149826	0					
ANR	1149916	IncDec	++		1149826	1					
ANR	1149917	ReturnStatement	return num_images ;	158:1:6390:6407	1149826	6	True				
ANR	1149918	Identifier	num_images		1149826	0					
ANR	1149919	ReturnType	int		1149826	1					
ANR	1149920	Identifier	get_num_images		1149826	2					
ANR	1149921	ParameterList	char * imgdirpath		1149826	3					
ANR	1149922	Parameter	char * imgdirpath	140:19:5978:5993	1149826	0	True				
ANR	1149923	ParameterType	char *		1149826	0					
ANR	1149924	Identifier	imgdirpath		1149826	1					
ANR	1149925	CFGEntryNode	ENTRY		1149826		True				
ANR	1149926	CFGExitNode	EXIT		1149826		True				
ANR	1149927	Symbol	strcmp		1149826						
ANR	1149928	Symbol	readdir		1149826						
ANR	1149929	Symbol	NULL		1149826						
ANR	1149930	Symbol	* content		1149826						
ANR	1149931	Symbol	opendir		1149826						
ANR	1149932	Symbol	content -> d_name		1149826						
ANR	1149933	Symbol	dir		1149826						
ANR	1149934	Symbol	stderr		1149826						
ANR	1149935	Symbol	imgdirpath		1149826						
ANR	1149936	Symbol	content		1149826						
ANR	1149937	Symbol	num_images		1149826						
ANR	1149938	Function	load_images	161:0:6415:6966							
ANR	1149939	FunctionDef	"load_images (dircnt_t * dirptr , char * imgdirpath)"		1149938	0					
ANR	1149940	CompoundStatement		161:51:6466:6966	1149938	0					
ANR	1149941	IdentifierDeclStatement	DIR * dir ;	162:1:6470:6478	1149938	0	True				
ANR	1149942	IdentifierDecl	* dir		1149938	0					
ANR	1149943	IdentifierDeclType	DIR *		1149938	0					
ANR	1149944	Identifier	dir		1149938	1					
ANR	1149945	IdentifierDeclStatement	struct dirent * content ;	163:1:6482:6504	1149938	1	True				
ANR	1149946	IdentifierDecl	* content		1149938	0					
ANR	1149947	IdentifierDeclType	struct dirent *		1149938	0					
ANR	1149948	Identifier	content		1149938	1					
ANR	1149949	IdentifierDeclStatement	int i = 0 ;	164:1:6509:6518	1149938	2	True				
ANR	1149950	IdentifierDecl	i = 0		1149938	0					
ANR	1149951	IdentifierDeclType	int		1149938	0					
ANR	1149952	Identifier	i		1149938	1					
ANR	1149953	AssignmentExpression	i = 0		1149938	2		=			
ANR	1149954	Identifier	i		1149938	0					
ANR	1149955	PrimaryExpression	0		1149938	1					
ANR	1149956	ExpressionStatement	dir = opendir ( imgdirpath )	168:1:6584:6608	1149938	3	True				
ANR	1149957	AssignmentExpression	dir = opendir ( imgdirpath )		1149938	0		=			
ANR	1149958	Identifier	dir		1149938	0					
ANR	1149959	CallExpression	opendir ( imgdirpath )		1149938	1					
ANR	1149960	Callee	opendir		1149938	0					
ANR	1149961	Identifier	opendir		1149938	0					
ANR	1149962	ArgumentList	imgdirpath		1149938	1					
ANR	1149963	Argument	imgdirpath		1149938	0					
ANR	1149964	Identifier	imgdirpath		1149938	0					
ANR	1149965	IfStatement	if ( ! dir )		1149938	4					
ANR	1149966	Condition	! dir	169:4:6615:6618	1149938	0	True				
ANR	1149967	UnaryOperationExpression	! dir		1149938	0					
ANR	1149968	UnaryOperator	!		1149938	0					
ANR	1149969	Identifier	dir		1149938	1					
ANR	1149970	CompoundStatement		9:9:153:153	1149938	1					
ANR	1149971	ExpressionStatement	"fprintf ( stderr , ""Could not open Folder %s\\n"" , imgdirpath )"	170:2:6625:6680	1149938	0	True				
ANR	1149972	CallExpression	"fprintf ( stderr , ""Could not open Folder %s\\n"" , imgdirpath )"		1149938	0					
ANR	1149973	Callee	fprintf		1149938	0					
ANR	1149974	Identifier	fprintf		1149938	0					
ANR	1149975	ArgumentList	stderr		1149938	1					
ANR	1149976	Argument	stderr		1149938	0					
ANR	1149977	Identifier	stderr		1149938	0					
ANR	1149978	Argument	"""Could not open Folder %s\\n"""		1149938	1					
ANR	1149979	PrimaryExpression	"""Could not open Folder %s\\n"""		1149938	0					
ANR	1149980	Argument	imgdirpath		1149938	2					
ANR	1149981	Identifier	imgdirpath		1149938	0					
ANR	1149982	ReturnStatement	return 1 ;	171:2:6685:6693	1149938	1	True				
ANR	1149983	PrimaryExpression	1		1149938	0					
ANR	1149984	ElseStatement	else		1149938	0					
ANR	1149985	CompoundStatement		12:7:236:236	1149938	0					
ANR	1149986	ExpressionStatement	"fprintf ( stderr , ""Folder opened successfully\\n"" )"	173:2:6708:6754	1149938	0	True				
ANR	1149987	CallExpression	"fprintf ( stderr , ""Folder opened successfully\\n"" )"		1149938	0					
ANR	1149988	Callee	fprintf		1149938	0					
ANR	1149989	Identifier	fprintf		1149938	0					
ANR	1149990	ArgumentList	stderr		1149938	1					
ANR	1149991	Argument	stderr		1149938	0					
ANR	1149992	Identifier	stderr		1149938	0					
ANR	1149993	Argument	"""Folder opened successfully\\n"""		1149938	1					
ANR	1149994	PrimaryExpression	"""Folder opened successfully\\n"""		1149938	0					
ANR	1149995	WhileStatement	while ( ( content = readdir ( dir ) ) != NULL )		1149938	5					
ANR	1149996	Condition	( content = readdir ( dir ) ) != NULL	176:7:6771:6798	1149938	0	True				
ANR	1149997	EqualityExpression	( content = readdir ( dir ) ) != NULL		1149938	0		!=			
ANR	1149998	AssignmentExpression	content = readdir ( dir )		1149938	0		=			
ANR	1149999	Identifier	content		1149938	0					
ANR	1150000	CallExpression	readdir ( dir )		1149938	1					
ANR	1150001	Callee	readdir		1149938	0					
ANR	1150002	Identifier	readdir		1149938	0					
ANR	1150003	ArgumentList	dir		1149938	1					
ANR	1150004	Argument	dir		1149938	0					
ANR	1150005	Identifier	dir		1149938	0					
ANR	1150006	Identifier	NULL		1149938	1					
ANR	1150007	CompoundStatement		16:36:333:333	1149938	1					
ANR	1150008	IfStatement	"if ( strcmp ( ""."" , content -> d_name ) == 0 || strcmp ( "".."" , content -> d_name ) == 0 )"		1149938	0					
ANR	1150009	Condition	"strcmp ( ""."" , content -> d_name ) == 0 || strcmp ( "".."" , content -> d_name ) == 0"	177:5:6808:6872	1149938	0	True				
ANR	1150010	OrExpression	"strcmp ( ""."" , content -> d_name ) == 0 || strcmp ( "".."" , content -> d_name ) == 0"		1149938	0		||			
ANR	1150011	EqualityExpression	"strcmp ( ""."" , content -> d_name ) == 0"		1149938	0		==			
ANR	1150012	CallExpression	"strcmp ( ""."" , content -> d_name )"		1149938	0					
ANR	1150013	Callee	strcmp		1149938	0					
ANR	1150014	Identifier	strcmp		1149938	0					
ANR	1150015	ArgumentList	"""."""		1149938	1					
ANR	1150016	Argument	"""."""		1149938	0					
ANR	1150017	PrimaryExpression	"""."""		1149938	0					
ANR	1150018	Argument	content -> d_name		1149938	1					
ANR	1150019	PtrMemberAccess	content -> d_name		1149938	0					
ANR	1150020	Identifier	content		1149938	0					
ANR	1150021	Identifier	d_name		1149938	1					
ANR	1150022	PrimaryExpression	0		1149938	1					
ANR	1150023	EqualityExpression	"strcmp ( "".."" , content -> d_name ) == 0"		1149938	1		==			
ANR	1150024	CallExpression	"strcmp ( "".."" , content -> d_name )"		1149938	0					
ANR	1150025	Callee	strcmp		1149938	0					
ANR	1150026	Identifier	strcmp		1149938	0					
ANR	1150027	ArgumentList	""".."""		1149938	1					
ANR	1150028	Argument	""".."""		1149938	0					
ANR	1150029	PrimaryExpression	""".."""		1149938	0					
ANR	1150030	Argument	content -> d_name		1149938	1					
ANR	1150031	PtrMemberAccess	content -> d_name		1149938	0					
ANR	1150032	Identifier	content		1149938	0					
ANR	1150033	Identifier	d_name		1149938	1					
ANR	1150034	PrimaryExpression	0		1149938	1					
ANR	1150035	ContinueStatement	continue ;	178:3:6880:6888	1149938	1	True				
ANR	1150036	ExpressionStatement	"strcpy ( dirptr -> filename [ i ] , content -> d_name )"	180:2:6895:6938	1149938	1	True				
ANR	1150037	CallExpression	"strcpy ( dirptr -> filename [ i ] , content -> d_name )"		1149938	0					
ANR	1150038	Callee	strcpy		1149938	0					
ANR	1150039	Identifier	strcpy		1149938	0					
ANR	1150040	ArgumentList	dirptr -> filename [ i ]		1149938	1					
ANR	1150041	Argument	dirptr -> filename [ i ]		1149938	0					
ANR	1150042	ArrayIndexing	dirptr -> filename [ i ]		1149938	0					
ANR	1150043	PtrMemberAccess	dirptr -> filename		1149938	0					
ANR	1150044	Identifier	dirptr		1149938	0					
ANR	1150045	Identifier	filename		1149938	1					
ANR	1150046	Identifier	i		1149938	1					
ANR	1150047	Argument	content -> d_name		1149938	1					
ANR	1150048	PtrMemberAccess	content -> d_name		1149938	0					
ANR	1150049	Identifier	content		1149938	0					
ANR	1150050	Identifier	d_name		1149938	1					
ANR	1150051	ExpressionStatement	i ++	181:2:6943:6946	1149938	2	True				
ANR	1150052	PostIncDecOperationExpression	i ++		1149938	0					
ANR	1150053	Identifier	i		1149938	0					
ANR	1150054	IncDec	++		1149938	1					
ANR	1150055	ReturnStatement	return 0 ;	183:1:6954:6962	1149938	6	True				
ANR	1150056	PrimaryExpression	0		1149938	0					
ANR	1150057	ReturnType	int		1149938	1					
ANR	1150058	Identifier	load_images		1149938	2					
ANR	1150059	ParameterList	"dircnt_t * dirptr , char * imgdirpath"		1149938	3					
ANR	1150060	Parameter	dircnt_t * dirptr	161:16:6431:6446	1149938	0	True				
ANR	1150061	ParameterType	dircnt_t *		1149938	0					
ANR	1150062	Identifier	dirptr		1149938	1					
ANR	1150063	Parameter	char * imgdirpath	161:34:6449:6464	1149938	1	True				
ANR	1150064	ParameterType	char *		1149938	0					
ANR	1150065	Identifier	imgdirpath		1149938	1					
ANR	1150066	CFGEntryNode	ENTRY		1149938		True				
ANR	1150067	CFGExitNode	EXIT		1149938		True				
ANR	1150068	Symbol	dirptr		1149938						
ANR	1150069	Symbol	strcmp		1149938						
ANR	1150070	Symbol	NULL		1149938						
ANR	1150071	Symbol	i		1149938						
ANR	1150072	Symbol	dir		1149938						
ANR	1150073	Symbol	stderr		1149938						
ANR	1150074	Symbol	* dirptr -> filename		1149938						
ANR	1150075	Symbol	* dirptr		1149938						
ANR	1150076	Symbol	content		1149938						
ANR	1150077	Symbol	dirptr -> filename		1149938						
ANR	1150078	Symbol	readdir		1149938						
ANR	1150079	Symbol	* i		1149938						
ANR	1150080	Symbol	* content		1149938						
ANR	1150081	Symbol	opendir		1149938						
ANR	1150082	Symbol	content -> d_name		1149938						
ANR	1150083	Symbol	* * dirptr		1149938						
ANR	1150084	Symbol	imgdirpath		1149938						
ANR	1150085	Function	get_file_format	186:0:6971:7552							
ANR	1150086	FunctionDef	get_file_format (char * filename)		1150085	0					
ANR	1150087	CompoundStatement		186:36:7007:7552	1150085	0					
ANR	1150088	IdentifierDeclStatement	unsigned int i ;	187:1:7011:7025	1150085	0	True				
ANR	1150089	IdentifierDecl	i		1150085	0					
ANR	1150090	IdentifierDeclType	unsigned int		1150085	0					
ANR	1150091	Identifier	i		1150085	1					
ANR	1150092	Statement	static	188:1:7029:7034	1150085	1	True				
ANR	1150093	IdentifierDeclStatement	"const char * extension [ ] = { ""pgx"" , ""pnm"" , ""pgm"" , ""ppm"" , ""bmp"" , ""tif"" , ""raw"" , ""tga"" , ""j2k"" , ""jp2"" , ""jpt"" , ""j2c"" } ;"	188:8:7036:7146	1150085	2	True				
ANR	1150094	IdentifierDecl	"* extension [ ] = { ""pgx"" , ""pnm"" , ""pgm"" , ""ppm"" , ""bmp"" , ""tif"" , ""raw"" , ""tga"" , ""j2k"" , ""jp2"" , ""jpt"" , ""j2c"" }"		1150085	0					
ANR	1150095	IdentifierDeclType	const char * [ ]		1150085	0					
ANR	1150096	Identifier	extension		1150085	1					
ANR	1150097	AssignmentExpression	"* extension [ ] = { ""pgx"" , ""pnm"" , ""pgm"" , ""ppm"" , ""bmp"" , ""tif"" , ""raw"" , ""tga"" , ""j2k"" , ""jp2"" , ""jpt"" , ""j2c"" }"		1150085	2		=			
ANR	1150098	Identifier	extension		1150085	0					
ANR	1150099	InitializerList	"""pgx"""		1150085	1					
ANR	1150100	PrimaryExpression	"""pgx"""		1150085	0					
ANR	1150101	PrimaryExpression	"""pnm"""		1150085	1					
ANR	1150102	PrimaryExpression	"""pgm"""		1150085	2					
ANR	1150103	PrimaryExpression	"""ppm"""		1150085	3					
ANR	1150104	PrimaryExpression	"""bmp"""		1150085	4					
ANR	1150105	PrimaryExpression	"""tif"""		1150085	5					
ANR	1150106	PrimaryExpression	"""raw"""		1150085	6					
ANR	1150107	PrimaryExpression	"""tga"""		1150085	7					
ANR	1150108	PrimaryExpression	"""j2k"""		1150085	8					
ANR	1150109	PrimaryExpression	"""jp2"""		1150085	9					
ANR	1150110	PrimaryExpression	"""jpt"""		1150085	10					
ANR	1150111	PrimaryExpression	"""j2c"""		1150085	11					
ANR	1150112	Statement	static	189:1:7150:7155	1150085	3	True				
ANR	1150113	IdentifierDeclStatement	"const int format [ ] = { PGX_DFMT , PXM_DFMT , PXM_DFMT , PXM_DFMT , BMP_DFMT , TIF_DFMT , RAW_DFMT , TGA_DFMT , J2K_CFMT , JP2_CFMT , JPT_CFMT , J2K_CFMT } ;"	189:8:7157:7300	1150085	4	True				
ANR	1150114	IdentifierDecl	"format [ ] = { PGX_DFMT , PXM_DFMT , PXM_DFMT , PXM_DFMT , BMP_DFMT , TIF_DFMT , RAW_DFMT , TGA_DFMT , J2K_CFMT , JP2_CFMT , JPT_CFMT , J2K_CFMT }"		1150085	0					
ANR	1150115	IdentifierDeclType	const int [ ]		1150085	0					
ANR	1150116	Identifier	format		1150085	1					
ANR	1150117	AssignmentExpression	"format [ ] = { PGX_DFMT , PXM_DFMT , PXM_DFMT , PXM_DFMT , BMP_DFMT , TIF_DFMT , RAW_DFMT , TGA_DFMT , J2K_CFMT , JP2_CFMT , JPT_CFMT , J2K_CFMT }"		1150085	2		=			
ANR	1150118	Identifier	format		1150085	0					
ANR	1150119	InitializerList	PGX_DFMT		1150085	1					
ANR	1150120	Identifier	PGX_DFMT		1150085	0					
ANR	1150121	Identifier	PXM_DFMT		1150085	1					
ANR	1150122	Identifier	PXM_DFMT		1150085	2					
ANR	1150123	Identifier	PXM_DFMT		1150085	3					
ANR	1150124	Identifier	BMP_DFMT		1150085	4					
ANR	1150125	Identifier	TIF_DFMT		1150085	5					
ANR	1150126	Identifier	RAW_DFMT		1150085	6					
ANR	1150127	Identifier	TGA_DFMT		1150085	7					
ANR	1150128	Identifier	J2K_CFMT		1150085	8					
ANR	1150129	Identifier	JP2_CFMT		1150085	9					
ANR	1150130	Identifier	JPT_CFMT		1150085	10					
ANR	1150131	Identifier	J2K_CFMT		1150085	11					
ANR	1150132	IdentifierDeclStatement	"char * ext = strrchr ( filename , '.' ) ;"	190:1:7304:7339	1150085	5	True				
ANR	1150133	IdentifierDecl	"* ext = strrchr ( filename , '.' )"		1150085	0					
ANR	1150134	IdentifierDeclType	char *		1150085	0					
ANR	1150135	Identifier	ext		1150085	1					
ANR	1150136	AssignmentExpression	"* ext = strrchr ( filename , '.' )"		1150085	2		=			
ANR	1150137	Identifier	ext		1150085	0					
ANR	1150138	CallExpression	"strrchr ( filename , '.' )"		1150085	1					
ANR	1150139	Callee	strrchr		1150085	0					
ANR	1150140	Identifier	strrchr		1150085	0					
ANR	1150141	ArgumentList	filename		1150085	1					
ANR	1150142	Argument	filename		1150085	0					
ANR	1150143	Identifier	filename		1150085	0					
ANR	1150144	Argument	'.'		1150085	1					
ANR	1150145	PrimaryExpression	'.'		1150085	0					
ANR	1150146	IfStatement	if ( ext == NULL )		1150085	6					
ANR	1150147	Condition	ext == NULL	191:5:7347:7357	1150085	0	True				
ANR	1150148	EqualityExpression	ext == NULL		1150085	0		==			
ANR	1150149	Identifier	ext		1150085	0					
ANR	1150150	Identifier	NULL		1150085	1					
ANR	1150151	ReturnStatement	return - 1 ;	192:2:7363:7372	1150085	1	True				
ANR	1150152	UnaryOperationExpression	- 1		1150085	0					
ANR	1150153	UnaryOperator	-		1150085	0					
ANR	1150154	PrimaryExpression	1		1150085	1					
ANR	1150155	ExpressionStatement	ext ++	193:1:7376:7381	1150085	7	True				
ANR	1150156	PostIncDecOperationExpression	ext ++		1150085	0					
ANR	1150157	Identifier	ext		1150085	0					
ANR	1150158	IncDec	++		1150085	1					
ANR	1150159	IfStatement	if ( ext )		1150085	8					
ANR	1150160	Condition	ext	194:4:7388:7390	1150085	0	True				
ANR	1150161	Identifier	ext		1150085	0					
ANR	1150162	CompoundStatement		9:9:385:385	1150085	1					
ANR	1150163	ForStatement	for ( i = 0 ; i < sizeof ( format ) / sizeof ( * format ) ; i ++ )		1150085	0					
ANR	1150164	ForInit	i = 0 ;	195:6:7402:7407	1150085	0	True				
ANR	1150165	AssignmentExpression	i = 0		1150085	0		=			
ANR	1150166	Identifier	i		1150085	0					
ANR	1150167	PrimaryExpression	0		1150085	1					
ANR	1150168	Condition	i < sizeof ( format ) / sizeof ( * format )	195:13:7409:7442	1150085	1	True				
ANR	1150169	RelationalExpression	i < sizeof ( format ) / sizeof ( * format )		1150085	0		<			
ANR	1150170	Identifier	i		1150085	0					
ANR	1150171	MultiplicativeExpression	sizeof ( format ) / sizeof ( * format )		1150085	1		/			
ANR	1150172	SizeofExpression	sizeof ( format )		1150085	0					
ANR	1150173	Sizeof	sizeof		1150085	0					
ANR	1150174	SizeofOperand	format		1150085	1					
ANR	1150175	SizeofExpression	sizeof ( * format )		1150085	1					
ANR	1150176	Sizeof	sizeof		1150085	0					
ANR	1150177	UnaryOperationExpression	* format		1150085	1					
ANR	1150178	UnaryOperator	*		1150085	0					
ANR	1150179	Identifier	format		1150085	1					
ANR	1150180	PostIncDecOperationExpression	i ++	195:49:7445:7447	1150085	2	True				
ANR	1150181	Identifier	i		1150085	0					
ANR	1150182	IncDec	++		1150085	1					
ANR	1150183	CompoundStatement		10:54:442:442	1150085	3					
ANR	1150184	IfStatement	"if ( strnicmp ( ext , extension [ i ] , 3 ) == 0 )"		1150085	0					
ANR	1150185	Condition	"strnicmp ( ext , extension [ i ] , 3 ) == 0"	196:6:7459:7493	1150085	0	True				
ANR	1150186	EqualityExpression	"strnicmp ( ext , extension [ i ] , 3 ) == 0"		1150085	0		==			
ANR	1150187	CallExpression	"strnicmp ( ext , extension [ i ] , 3 )"		1150085	0					
ANR	1150188	Callee	strnicmp		1150085	0					
ANR	1150189	Identifier	strnicmp		1150085	0					
ANR	1150190	ArgumentList	ext		1150085	1					
ANR	1150191	Argument	ext		1150085	0					
ANR	1150192	Identifier	ext		1150085	0					
ANR	1150193	Argument	extension [ i ]		1150085	1					
ANR	1150194	ArrayIndexing	extension [ i ]		1150085	0					
ANR	1150195	Identifier	extension		1150085	0					
ANR	1150196	Identifier	i		1150085	1					
ANR	1150197	Argument	3		1150085	2					
ANR	1150198	PrimaryExpression	3		1150085	0					
ANR	1150199	PrimaryExpression	0		1150085	1					
ANR	1150200	CompoundStatement		11:43:488:488	1150085	1					
ANR	1150201	ReturnStatement	return format [ i ] ;	197:4:7503:7519	1150085	0	True				
ANR	1150202	ArrayIndexing	format [ i ]		1150085	0					
ANR	1150203	Identifier	format		1150085	0					
ANR	1150204	Identifier	i		1150085	1					
ANR	1150205	ReturnStatement	return - 1 ;	202:1:7540:7549	1150085	9	True				
ANR	1150206	UnaryOperationExpression	- 1		1150085	0					
ANR	1150207	UnaryOperator	-		1150085	0					
ANR	1150208	PrimaryExpression	1		1150085	1					
ANR	1150209	ReturnType	int		1150085	1					
ANR	1150210	Identifier	get_file_format		1150085	2					
ANR	1150211	ParameterList	char * filename		1150085	3					
ANR	1150212	Parameter	char * filename	186:20:6991:7004	1150085	0	True				
ANR	1150213	ParameterType	char *		1150085	0					
ANR	1150214	Identifier	filename		1150085	1					
ANR	1150215	CFGEntryNode	ENTRY		1150085		True				
ANR	1150216	CFGExitNode	EXIT		1150085		True				
ANR	1150217	Symbol	TIF_DFMT		1150085						
ANR	1150218	Symbol	ext		1150085						
ANR	1150219	Symbol	PXM_DFMT		1150085						
ANR	1150220	Symbol	JPT_CFMT		1150085						
ANR	1150221	Symbol	extension		1150085						
ANR	1150222	Symbol	J2K_CFMT		1150085						
ANR	1150223	Symbol	NULL		1150085						
ANR	1150224	Symbol	RAW_DFMT		1150085						
ANR	1150225	Symbol	format		1150085						
ANR	1150226	Symbol	BMP_DFMT		1150085						
ANR	1150227	Symbol	i		1150085						
ANR	1150228	Symbol	JP2_CFMT		1150085						
ANR	1150229	Symbol	filename		1150085						
ANR	1150230	Symbol	* i		1150085						
ANR	1150231	Symbol	* format		1150085						
ANR	1150232	Symbol	strrchr		1150085						
ANR	1150233	Symbol	TGA_DFMT		1150085						
ANR	1150234	Symbol	* extension		1150085						
ANR	1150235	Symbol	PGX_DFMT		1150085						
ANR	1150236	Symbol	strnicmp		1150085						
ANR	1150237	Function	parse_cmdline_decoder	208:0:7643:13613							
ANR	1150238	FunctionDef	"parse_cmdline_decoder (int argc , char * * argv , opj_dparameters_t * parameters , img_fol_t * img_fol)"		1150237	0					
ANR	1150239	CompoundStatement		208:99:7742:13613	1150237	0					
ANR	1150240	IdentifierDeclStatement	int totlen ;	210:1:7777:7787	1150237	0	True				
ANR	1150241	IdentifierDecl	totlen		1150237	0					
ANR	1150242	IdentifierDeclType	int		1150237	0					
ANR	1150243	Identifier	totlen		1150237	1					
ANR	1150244	Statement	opj_option_t	211:1:7791:7802	1150237	1	True				
ANR	1150245	Statement	long_option	211:14:7804:7814	1150237	2	True				
ANR	1150246	Statement	[	211:25:7815:7815	1150237	3	True				
ANR	1150247	Statement	]	211:26:7816:7816	1150237	4	True				
ANR	1150248	Statement	=	211:27:7817:7817	1150237	5	True				
ANR	1150249	CompoundStatement		4:28:75:75	1150237	6					
ANR	1150250	CompoundStatement		5:2:80:80	1150237	0					
ANR	1150251	Statement	"""ImgDir"""	212:3:7824:7831	1150237	0	True				
ANR	1150252	Statement	","	212:11:7832:7832	1150237	1	True				
ANR	1150253	Statement	REQ_ARG	212:12:7833:7839	1150237	2	True				
ANR	1150254	Statement	","	212:19:7840:7840	1150237	3	True				
ANR	1150255	Statement	NULL	212:21:7842:7845	1150237	4	True				
ANR	1150256	Statement	","	212:26:7847:7847	1150237	5	True				
ANR	1150257	Statement	'y'	212:27:7848:7850	1150237	6	True				
ANR	1150258	Statement	","	212:31:7852:7852	1150237	1	True				
ANR	1150259	CompoundStatement		6:2:114:114	1150237	2					
ANR	1150260	Statement	"""OutFor"""	213:3:7858:7865	1150237	0	True				
ANR	1150261	Statement	","	213:11:7866:7866	1150237	1	True				
ANR	1150262	Statement	REQ_ARG	213:12:7867:7873	1150237	2	True				
ANR	1150263	Statement	","	213:19:7874:7874	1150237	3	True				
ANR	1150264	Statement	NULL	213:21:7876:7879	1150237	4	True				
ANR	1150265	Statement	","	213:26:7881:7881	1150237	5	True				
ANR	1150266	Statement	'O'	213:27:7882:7884	1150237	6	True				
ANR	1150267	Statement	","	213:31:7886:7886	1150237	3	True				
ANR	1150268	ExpressionStatement		214:2:7891:7891	1150237	7	True				
ANR	1150269	Statement	const	217:1:7912:7916	1150237	8	True				
ANR	1150270	Statement	char	217:7:7918:7921	1150237	9	True				
ANR	1150271	Statement	optlist	217:12:7923:7929	1150237	10	True				
ANR	1150272	Statement	[	217:19:7930:7930	1150237	11	True				
ANR	1150273	Statement	]	217:20:7931:7931	1150237	12	True				
ANR	1150274	Statement	=	217:22:7933:7933	1150237	13	True				
ANR	1150275	Statement	"""i:o:r:l:hx:"""	217:24:7935:7947	1150237	14	True				
ANR	1150276	Statement	"""W:"""	220:5:7974:7977	1150237	15	True				
ANR	1150277	ExpressionStatement		222:5:8008:8008	1150237	16	True				
ANR	1150278	ExpressionStatement	totlen = sizeof ( long_option )	229:1:8107:8133	1150237	17	True				
ANR	1150279	AssignmentExpression	totlen = sizeof ( long_option )		1150237	0		=			
ANR	1150280	Identifier	totlen		1150237	0					
ANR	1150281	SizeofExpression	sizeof ( long_option )		1150237	1					
ANR	1150282	Sizeof	sizeof		1150237	0					
ANR	1150283	SizeofOperand	long_option		1150237	1					
ANR	1150284	ExpressionStatement	img_fol -> set_out_format = 0	230:1:8137:8164	1150237	18	True				
ANR	1150285	AssignmentExpression	img_fol -> set_out_format = 0		1150237	0		=			
ANR	1150286	PtrMemberAccess	img_fol -> set_out_format		1150237	0					
ANR	1150287	Identifier	img_fol		1150237	0					
ANR	1150288	Identifier	set_out_format		1150237	1					
ANR	1150289	PrimaryExpression	0		1150237	1					
ANR	1150290	ExpressionStatement	reset_options_reading ( )	231:1:8168:8191	1150237	19	True				
ANR	1150291	CallExpression	reset_options_reading ( )		1150237	0					
ANR	1150292	Callee	reset_options_reading		1150237	0					
ANR	1150293	Identifier	reset_options_reading		1150237	0					
ANR	1150294	ArgumentList			1150237	1					
ANR	1150295	WhileStatement	while ( 1 )		1150237	20					
ANR	1150296	Condition	1	233:8:8204:8204	1150237	0	True				
ANR	1150297	PrimaryExpression	1		1150237	0					
ANR	1150298	CompoundStatement		27:2:469:531	1150237	1					
ANR	1150299	IdentifierDeclStatement	"int c = opj_getopt_long ( argc , argv , optlist , long_option , totlen ) ;"	234:2:8212:8274	1150237	0	True				
ANR	1150300	IdentifierDecl	"c = opj_getopt_long ( argc , argv , optlist , long_option , totlen )"		1150237	0					
ANR	1150301	IdentifierDeclType	int		1150237	0					
ANR	1150302	Identifier	c		1150237	1					
ANR	1150303	AssignmentExpression	"c = opj_getopt_long ( argc , argv , optlist , long_option , totlen )"		1150237	2		=			
ANR	1150304	Identifier	c		1150237	0					
ANR	1150305	CallExpression	"opj_getopt_long ( argc , argv , optlist , long_option , totlen )"		1150237	1					
ANR	1150306	Callee	opj_getopt_long		1150237	0					
ANR	1150307	Identifier	opj_getopt_long		1150237	0					
ANR	1150308	ArgumentList	argc		1150237	1					
ANR	1150309	Argument	argc		1150237	0					
ANR	1150310	Identifier	argc		1150237	0					
ANR	1150311	Argument	argv		1150237	1					
ANR	1150312	Identifier	argv		1150237	0					
ANR	1150313	Argument	optlist		1150237	2					
ANR	1150314	Identifier	optlist		1150237	0					
ANR	1150315	Argument	long_option		1150237	3					
ANR	1150316	Identifier	long_option		1150237	0					
ANR	1150317	Argument	totlen		1150237	4					
ANR	1150318	Identifier	totlen		1150237	0					
ANR	1150319	IfStatement	if ( c == - 1 )		1150237	1					
ANR	1150320	Condition	c == - 1	235:6:8283:8289	1150237	0	True				
ANR	1150321	EqualityExpression	c == - 1		1150237	0		==			
ANR	1150322	Identifier	c		1150237	0					
ANR	1150323	UnaryOperationExpression	- 1		1150237	1					
ANR	1150324	UnaryOperator	-		1150237	0					
ANR	1150325	PrimaryExpression	1		1150237	1					
ANR	1150326	BreakStatement	break ;	236:3:8296:8301	1150237	1	True				
ANR	1150327	SwitchStatement	switch ( c )		1150237	2					
ANR	1150328	Condition	c	237:10:8314:8314	1150237	0	True				
ANR	1150329	Identifier	c		1150237	0					
ANR	1150330	CompoundStatement		30:13:574:574	1150237	1					
ANR	1150331	Label	case 'i' :	238:3:8323:8331	1150237	0	True				
ANR	1150332	CompoundStatement		33:4:620:645	1150237	1					
ANR	1150333	IdentifierDeclStatement	char * infile = opj_optarg ;	240:4:8363:8388	1150237	0	True				
ANR	1150334	IdentifierDecl	* infile = opj_optarg		1150237	0					
ANR	1150335	IdentifierDeclType	char *		1150237	0					
ANR	1150336	Identifier	infile		1150237	1					
ANR	1150337	AssignmentExpression	* infile = opj_optarg		1150237	2		=			
ANR	1150338	Identifier	opj_optarg		1150237	0					
ANR	1150339	Identifier	opj_optarg		1150237	1					
ANR	1150340	ExpressionStatement	parameters -> decod_format = get_file_format ( infile )	241:4:8395:8445	1150237	1	True				
ANR	1150341	AssignmentExpression	parameters -> decod_format = get_file_format ( infile )		1150237	0		=			
ANR	1150342	PtrMemberAccess	parameters -> decod_format		1150237	0					
ANR	1150343	Identifier	parameters		1150237	0					
ANR	1150344	Identifier	decod_format		1150237	1					
ANR	1150345	CallExpression	get_file_format ( infile )		1150237	1					
ANR	1150346	Callee	get_file_format		1150237	0					
ANR	1150347	Identifier	get_file_format		1150237	0					
ANR	1150348	ArgumentList	infile		1150237	1					
ANR	1150349	Argument	infile		1150237	0					
ANR	1150350	Identifier	infile		1150237	0					
ANR	1150351	SwitchStatement	switch ( parameters -> decod_format )		1150237	2					
ANR	1150352	Condition	parameters -> decod_format	242:11:8459:8482	1150237	0	True				
ANR	1150353	PtrMemberAccess	parameters -> decod_format		1150237	0					
ANR	1150354	Identifier	parameters		1150237	0					
ANR	1150355	Identifier	decod_format		1150237	1					
ANR	1150356	CompoundStatement		35:37:742:742	1150237	1					
ANR	1150357	Label	case J2K_CFMT :	243:5:8493:8506	1150237	0	True				
ANR	1150358	Identifier	J2K_CFMT		1150237	0					
ANR	1150359	Label	case JP2_CFMT :	244:5:8514:8527	1150237	1	True				
ANR	1150360	Identifier	JP2_CFMT		1150237	0					
ANR	1150361	Label	case JPT_CFMT :	245:5:8535:8548	1150237	2	True				
ANR	1150362	Identifier	JPT_CFMT		1150237	0					
ANR	1150363	BreakStatement	break ;	246:6:8557:8562	1150237	3	True				
ANR	1150364	Label	default :	247:5:8570:8577	1150237	4	True				
ANR	1150365	Identifier	default		1150237	0					
ANR	1150366	ExpressionStatement	"fprintf ( stderr , ""!! Unrecognized format for infile : %s [accept only *.j2k, *.jp2, *.jpc or *.jpt] !!\\n\\n"" , infile )"	248:6:8586:8719	1150237	5	True				
ANR	1150367	CallExpression	"fprintf ( stderr , ""!! Unrecognized format for infile : %s [accept only *.j2k, *.jp2, *.jpc or *.jpt] !!\\n\\n"" , infile )"		1150237	0					
ANR	1150368	Callee	fprintf		1150237	0					
ANR	1150369	Identifier	fprintf		1150237	0					
ANR	1150370	ArgumentList	stderr		1150237	1					
ANR	1150371	Argument	stderr		1150237	0					
ANR	1150372	Identifier	stderr		1150237	0					
ANR	1150373	Argument	"""!! Unrecognized format for infile : %s [accept only *.j2k, *.jp2, *.jpc or *.jpt] !!\\n\\n"""		1150237	1					
ANR	1150374	PrimaryExpression	"""!! Unrecognized format for infile : %s [accept only *.j2k, *.jp2, *.jpc or *.jpt] !!\\n\\n"""		1150237	0					
ANR	1150375	Argument	infile		1150237	2					
ANR	1150376	Identifier	infile		1150237	0					
ANR	1150377	ReturnStatement	return 1 ;	251:6:8728:8736	1150237	6	True				
ANR	1150378	PrimaryExpression	1		1150237	0					
ANR	1150379	ExpressionStatement	"strncpy ( parameters -> infile , infile , sizeof ( parameters -> infile ) - 1 )"	253:4:8750:8815	1150237	3	True				
ANR	1150380	CallExpression	"strncpy ( parameters -> infile , infile , sizeof ( parameters -> infile ) - 1 )"		1150237	0					
ANR	1150381	Callee	strncpy		1150237	0					
ANR	1150382	Identifier	strncpy		1150237	0					
ANR	1150383	ArgumentList	parameters -> infile		1150237	1					
ANR	1150384	Argument	parameters -> infile		1150237	0					
ANR	1150385	PtrMemberAccess	parameters -> infile		1150237	0					
ANR	1150386	Identifier	parameters		1150237	0					
ANR	1150387	Identifier	infile		1150237	1					
ANR	1150388	Argument	infile		1150237	1					
ANR	1150389	Identifier	infile		1150237	0					
ANR	1150390	Argument	sizeof ( parameters -> infile ) - 1		1150237	2					
ANR	1150391	AdditiveExpression	sizeof ( parameters -> infile ) - 1		1150237	0		-			
ANR	1150392	SizeofExpression	sizeof ( parameters -> infile )		1150237	0					
ANR	1150393	Sizeof	sizeof		1150237	0					
ANR	1150394	PtrMemberAccess	parameters -> infile		1150237	1					
ANR	1150395	Identifier	parameters		1150237	0					
ANR	1150396	Identifier	infile		1150237	1					
ANR	1150397	PrimaryExpression	1		1150237	1					
ANR	1150398	BreakStatement	break ;	255:3:8827:8832	1150237	2	True				
ANR	1150399	Label	case 'o' :	259:3:8911:8919	1150237	3	True				
ANR	1150400	CompoundStatement		54:4:1209:1235	1150237	4					
ANR	1150401	IdentifierDeclStatement	char * outfile = opj_optarg ;	261:4:8952:8978	1150237	0	True				
ANR	1150402	IdentifierDecl	* outfile = opj_optarg		1150237	0					
ANR	1150403	IdentifierDeclType	char *		1150237	0					
ANR	1150404	Identifier	outfile		1150237	1					
ANR	1150405	AssignmentExpression	* outfile = opj_optarg		1150237	2		=			
ANR	1150406	Identifier	opj_optarg		1150237	0					
ANR	1150407	Identifier	opj_optarg		1150237	1					
ANR	1150408	ExpressionStatement	parameters -> cod_format = get_file_format ( outfile )	262:4:8985:9034	1150237	1	True				
ANR	1150409	AssignmentExpression	parameters -> cod_format = get_file_format ( outfile )		1150237	0		=			
ANR	1150410	PtrMemberAccess	parameters -> cod_format		1150237	0					
ANR	1150411	Identifier	parameters		1150237	0					
ANR	1150412	Identifier	cod_format		1150237	1					
ANR	1150413	CallExpression	get_file_format ( outfile )		1150237	1					
ANR	1150414	Callee	get_file_format		1150237	0					
ANR	1150415	Identifier	get_file_format		1150237	0					
ANR	1150416	ArgumentList	outfile		1150237	1					
ANR	1150417	Argument	outfile		1150237	0					
ANR	1150418	Identifier	outfile		1150237	0					
ANR	1150419	SwitchStatement	switch ( parameters -> cod_format )		1150237	2					
ANR	1150420	Condition	parameters -> cod_format	263:11:9048:9069	1150237	0	True				
ANR	1150421	PtrMemberAccess	parameters -> cod_format		1150237	0					
ANR	1150422	Identifier	parameters		1150237	0					
ANR	1150423	Identifier	cod_format		1150237	1					
ANR	1150424	CompoundStatement		56:35:1329:1329	1150237	1					
ANR	1150425	Label	case PGX_DFMT :	264:5:9080:9093	1150237	0	True				
ANR	1150426	Identifier	PGX_DFMT		1150237	0					
ANR	1150427	Label	case PXM_DFMT :	265:5:9101:9114	1150237	1	True				
ANR	1150428	Identifier	PXM_DFMT		1150237	0					
ANR	1150429	Label	case BMP_DFMT :	266:5:9122:9135	1150237	2	True				
ANR	1150430	Identifier	BMP_DFMT		1150237	0					
ANR	1150431	Label	case TIF_DFMT :	267:5:9143:9156	1150237	3	True				
ANR	1150432	Identifier	TIF_DFMT		1150237	0					
ANR	1150433	Label	case RAW_DFMT :	268:5:9164:9177	1150237	4	True				
ANR	1150434	Identifier	RAW_DFMT		1150237	0					
ANR	1150435	Label	case TGA_DFMT :	269:5:9185:9198	1150237	5	True				
ANR	1150436	Identifier	TGA_DFMT		1150237	0					
ANR	1150437	BreakStatement	break ;	270:6:9207:9212	1150237	6	True				
ANR	1150438	Label	default :	271:5:9220:9227	1150237	7	True				
ANR	1150439	Identifier	default		1150237	0					
ANR	1150440	ExpressionStatement	"fprintf ( stderr , ""Unknown output format image %s [only *.pnm, *.pgm, *.ppm, *.pgx, *.bmp, *.tif, *.raw or *.tga]!! \\n"" , outfile )"	272:6:9236:9363	1150237	8	True				
ANR	1150441	CallExpression	"fprintf ( stderr , ""Unknown output format image %s [only *.pnm, *.pgm, *.ppm, *.pgx, *.bmp, *.tif, *.raw or *.tga]!! \\n"" , outfile )"		1150237	0					
ANR	1150442	Callee	fprintf		1150237	0					
ANR	1150443	Identifier	fprintf		1150237	0					
ANR	1150444	ArgumentList	stderr		1150237	1					
ANR	1150445	Argument	stderr		1150237	0					
ANR	1150446	Identifier	stderr		1150237	0					
ANR	1150447	Argument	"""Unknown output format image %s [only *.pnm, *.pgm, *.ppm, *.pgx, *.bmp, *.tif, *.raw or *.tga]!! \\n"""		1150237	1					
ANR	1150448	PrimaryExpression	"""Unknown output format image %s [only *.pnm, *.pgm, *.ppm, *.pgx, *.bmp, *.tif, *.raw or *.tga]!! \\n"""		1150237	0					
ANR	1150449	Argument	outfile		1150237	2					
ANR	1150450	Identifier	outfile		1150237	0					
ANR	1150451	ReturnStatement	return 1 ;	273:6:9372:9380	1150237	9	True				
ANR	1150452	PrimaryExpression	1		1150237	0					
ANR	1150453	ExpressionStatement	"strncpy ( parameters -> outfile , outfile , sizeof ( parameters -> outfile ) - 1 )"	275:4:9394:9462	1150237	3	True				
ANR	1150454	CallExpression	"strncpy ( parameters -> outfile , outfile , sizeof ( parameters -> outfile ) - 1 )"		1150237	0					
ANR	1150455	Callee	strncpy		1150237	0					
ANR	1150456	Identifier	strncpy		1150237	0					
ANR	1150457	ArgumentList	parameters -> outfile		1150237	1					
ANR	1150458	Argument	parameters -> outfile		1150237	0					
ANR	1150459	PtrMemberAccess	parameters -> outfile		1150237	0					
ANR	1150460	Identifier	parameters		1150237	0					
ANR	1150461	Identifier	outfile		1150237	1					
ANR	1150462	Argument	outfile		1150237	1					
ANR	1150463	Identifier	outfile		1150237	0					
ANR	1150464	Argument	sizeof ( parameters -> outfile ) - 1		1150237	2					
ANR	1150465	AdditiveExpression	sizeof ( parameters -> outfile ) - 1		1150237	0		-			
ANR	1150466	SizeofExpression	sizeof ( parameters -> outfile )		1150237	0					
ANR	1150467	Sizeof	sizeof		1150237	0					
ANR	1150468	PtrMemberAccess	parameters -> outfile		1150237	1					
ANR	1150469	Identifier	parameters		1150237	0					
ANR	1150470	Identifier	outfile		1150237	1					
ANR	1150471	PrimaryExpression	1		1150237	1					
ANR	1150472	BreakStatement	break ;	277:3:9474:9479	1150237	5	True				
ANR	1150473	Label	case 'O' :	281:3:9557:9565	1150237	6	True				
ANR	1150474	CompoundStatement		77:4:1882:1903	1150237	7					
ANR	1150475	IdentifierDeclStatement	char outformat [ 50 ] ;	283:4:9600:9618	1150237	0	True				
ANR	1150476	IdentifierDecl	outformat [ 50 ]		1150237	0					
ANR	1150477	IdentifierDeclType	char [ 50 ]		1150237	0					
ANR	1150478	Identifier	outformat		1150237	1					
ANR	1150479	PrimaryExpression	50		1150237	2					
ANR	1150480	IdentifierDeclStatement	char * of = opj_optarg ;	284:4:9625:9646	1150237	1	True				
ANR	1150481	IdentifierDecl	* of = opj_optarg		1150237	0					
ANR	1150482	IdentifierDeclType	char *		1150237	0					
ANR	1150483	Identifier	of		1150237	1					
ANR	1150484	AssignmentExpression	* of = opj_optarg		1150237	2		=			
ANR	1150485	Identifier	opj_optarg		1150237	0					
ANR	1150486	Identifier	opj_optarg		1150237	1					
ANR	1150487	ExpressionStatement	"sprintf ( outformat , "".%s"" , of )"	285:4:9653:9680	1150237	2	True				
ANR	1150488	CallExpression	"sprintf ( outformat , "".%s"" , of )"		1150237	0					
ANR	1150489	Callee	sprintf		1150237	0					
ANR	1150490	Identifier	sprintf		1150237	0					
ANR	1150491	ArgumentList	outformat		1150237	1					
ANR	1150492	Argument	outformat		1150237	0					
ANR	1150493	Identifier	outformat		1150237	0					
ANR	1150494	Argument	""".%s"""		1150237	1					
ANR	1150495	PrimaryExpression	""".%s"""		1150237	0					
ANR	1150496	Argument	of		1150237	2					
ANR	1150497	Identifier	of		1150237	0					
ANR	1150498	ExpressionStatement	img_fol -> set_out_format = 1	286:4:9687:9714	1150237	3	True				
ANR	1150499	AssignmentExpression	img_fol -> set_out_format = 1		1150237	0		=			
ANR	1150500	PtrMemberAccess	img_fol -> set_out_format		1150237	0					
ANR	1150501	Identifier	img_fol		1150237	0					
ANR	1150502	Identifier	set_out_format		1150237	1					
ANR	1150503	PrimaryExpression	1		1150237	1					
ANR	1150504	ExpressionStatement	parameters -> cod_format = get_file_format ( outformat )	287:4:9721:9772	1150237	4	True				
ANR	1150505	AssignmentExpression	parameters -> cod_format = get_file_format ( outformat )		1150237	0		=			
ANR	1150506	PtrMemberAccess	parameters -> cod_format		1150237	0					
ANR	1150507	Identifier	parameters		1150237	0					
ANR	1150508	Identifier	cod_format		1150237	1					
ANR	1150509	CallExpression	get_file_format ( outformat )		1150237	1					
ANR	1150510	Callee	get_file_format		1150237	0					
ANR	1150511	Identifier	get_file_format		1150237	0					
ANR	1150512	ArgumentList	outformat		1150237	1					
ANR	1150513	Argument	outformat		1150237	0					
ANR	1150514	Identifier	outformat		1150237	0					
ANR	1150515	SwitchStatement	switch ( parameters -> cod_format )		1150237	5					
ANR	1150516	Condition	parameters -> cod_format	288:11:9786:9807	1150237	0	True				
ANR	1150517	PtrMemberAccess	parameters -> cod_format		1150237	0					
ANR	1150518	Identifier	parameters		1150237	0					
ANR	1150519	Identifier	cod_format		1150237	1					
ANR	1150520	CompoundStatement		81:35:2067:2067	1150237	1					
ANR	1150521	Label	case PGX_DFMT :	289:5:9818:9831	1150237	0	True				
ANR	1150522	Identifier	PGX_DFMT		1150237	0					
ANR	1150523	ExpressionStatement	"img_fol -> out_format = ""pgx"""	290:6:9840:9867	1150237	1	True				
ANR	1150524	AssignmentExpression	"img_fol -> out_format = ""pgx"""		1150237	0		=			
ANR	1150525	PtrMemberAccess	img_fol -> out_format		1150237	0					
ANR	1150526	Identifier	img_fol		1150237	0					
ANR	1150527	Identifier	out_format		1150237	1					
ANR	1150528	PrimaryExpression	"""pgx"""		1150237	1					
ANR	1150529	BreakStatement	break ;	291:6:9876:9881	1150237	2	True				
ANR	1150530	Label	case PXM_DFMT :	292:5:9889:9902	1150237	3	True				
ANR	1150531	Identifier	PXM_DFMT		1150237	0					
ANR	1150532	ExpressionStatement	"img_fol -> out_format = ""ppm"""	293:6:9911:9938	1150237	4	True				
ANR	1150533	AssignmentExpression	"img_fol -> out_format = ""ppm"""		1150237	0		=			
ANR	1150534	PtrMemberAccess	img_fol -> out_format		1150237	0					
ANR	1150535	Identifier	img_fol		1150237	0					
ANR	1150536	Identifier	out_format		1150237	1					
ANR	1150537	PrimaryExpression	"""ppm"""		1150237	1					
ANR	1150538	BreakStatement	break ;	294:6:9947:9952	1150237	5	True				
ANR	1150539	Label	case BMP_DFMT :	295:5:9960:9973	1150237	6	True				
ANR	1150540	Identifier	BMP_DFMT		1150237	0					
ANR	1150541	ExpressionStatement	"img_fol -> out_format = ""bmp"""	296:6:9982:10009	1150237	7	True				
ANR	1150542	AssignmentExpression	"img_fol -> out_format = ""bmp"""		1150237	0		=			
ANR	1150543	PtrMemberAccess	img_fol -> out_format		1150237	0					
ANR	1150544	Identifier	img_fol		1150237	0					
ANR	1150545	Identifier	out_format		1150237	1					
ANR	1150546	PrimaryExpression	"""bmp"""		1150237	1					
ANR	1150547	BreakStatement	break ;	297:6:10018:10023	1150237	8	True				
ANR	1150548	Label	case TIF_DFMT :	298:5:10031:10044	1150237	9	True				
ANR	1150549	Identifier	TIF_DFMT		1150237	0					
ANR	1150550	ExpressionStatement	"img_fol -> out_format = ""tif"""	299:6:10053:10080	1150237	10	True				
ANR	1150551	AssignmentExpression	"img_fol -> out_format = ""tif"""		1150237	0		=			
ANR	1150552	PtrMemberAccess	img_fol -> out_format		1150237	0					
ANR	1150553	Identifier	img_fol		1150237	0					
ANR	1150554	Identifier	out_format		1150237	1					
ANR	1150555	PrimaryExpression	"""tif"""		1150237	1					
ANR	1150556	BreakStatement	break ;	300:6:10089:10094	1150237	11	True				
ANR	1150557	Label	case RAW_DFMT :	301:5:10102:10115	1150237	12	True				
ANR	1150558	Identifier	RAW_DFMT		1150237	0					
ANR	1150559	ExpressionStatement	"img_fol -> out_format = ""raw"""	302:6:10124:10151	1150237	13	True				
ANR	1150560	AssignmentExpression	"img_fol -> out_format = ""raw"""		1150237	0		=			
ANR	1150561	PtrMemberAccess	img_fol -> out_format		1150237	0					
ANR	1150562	Identifier	img_fol		1150237	0					
ANR	1150563	Identifier	out_format		1150237	1					
ANR	1150564	PrimaryExpression	"""raw"""		1150237	1					
ANR	1150565	BreakStatement	break ;	303:6:10160:10165	1150237	14	True				
ANR	1150566	Label	case TGA_DFMT :	304:5:10173:10186	1150237	15	True				
ANR	1150567	Identifier	TGA_DFMT		1150237	0					
ANR	1150568	ExpressionStatement	"img_fol -> out_format = ""raw"""	305:6:10195:10222	1150237	16	True				
ANR	1150569	AssignmentExpression	"img_fol -> out_format = ""raw"""		1150237	0		=			
ANR	1150570	PtrMemberAccess	img_fol -> out_format		1150237	0					
ANR	1150571	Identifier	img_fol		1150237	0					
ANR	1150572	Identifier	out_format		1150237	1					
ANR	1150573	PrimaryExpression	"""raw"""		1150237	1					
ANR	1150574	BreakStatement	break ;	306:6:10231:10236	1150237	17	True				
ANR	1150575	Label	default :	307:5:10244:10251	1150237	18	True				
ANR	1150576	Identifier	default		1150237	0					
ANR	1150577	ExpressionStatement	"fprintf ( stderr , ""Unknown output format image %s [only *.pnm, *.pgm, *.ppm, *.pgx, *.bmp, *.tif, *.raw or *.tga]!! \\n"" , outformat )"	308:6:10260:10389	1150237	19	True				
ANR	1150578	CallExpression	"fprintf ( stderr , ""Unknown output format image %s [only *.pnm, *.pgm, *.ppm, *.pgx, *.bmp, *.tif, *.raw or *.tga]!! \\n"" , outformat )"		1150237	0					
ANR	1150579	Callee	fprintf		1150237	0					
ANR	1150580	Identifier	fprintf		1150237	0					
ANR	1150581	ArgumentList	stderr		1150237	1					
ANR	1150582	Argument	stderr		1150237	0					
ANR	1150583	Identifier	stderr		1150237	0					
ANR	1150584	Argument	"""Unknown output format image %s [only *.pnm, *.pgm, *.ppm, *.pgx, *.bmp, *.tif, *.raw or *.tga]!! \\n"""		1150237	1					
ANR	1150585	PrimaryExpression	"""Unknown output format image %s [only *.pnm, *.pgm, *.ppm, *.pgx, *.bmp, *.tif, *.raw or *.tga]!! \\n"""		1150237	0					
ANR	1150586	Argument	outformat		1150237	2					
ANR	1150587	Identifier	outformat		1150237	0					
ANR	1150588	ReturnStatement	return 1 ;	309:6:10398:10406	1150237	20	True				
ANR	1150589	PrimaryExpression	1		1150237	0					
ANR	1150590	BreakStatement	break ;	310:6:10415:10420	1150237	21	True				
ANR	1150591	BreakStatement	break ;	313:3:10439:10444	1150237	8	True				
ANR	1150592	Label	case 'r' :	318:3:10521:10529	1150237	9	True				
ANR	1150593	CompoundStatement		112:3:2813:2813	1150237	10					
ANR	1150594	ExpressionStatement	"sscanf ( opj_optarg , ""%d"" , & parameters -> cp_reduce )"	320:4:10563:10611	1150237	0	True				
ANR	1150595	CallExpression	"sscanf ( opj_optarg , ""%d"" , & parameters -> cp_reduce )"		1150237	0					
ANR	1150596	Callee	sscanf		1150237	0					
ANR	1150597	Identifier	sscanf		1150237	0					
ANR	1150598	ArgumentList	opj_optarg		1150237	1					
ANR	1150599	Argument	opj_optarg		1150237	0					
ANR	1150600	Identifier	opj_optarg		1150237	0					
ANR	1150601	Argument	"""%d"""		1150237	1					
ANR	1150602	PrimaryExpression	"""%d"""		1150237	0					
ANR	1150603	Argument	& parameters -> cp_reduce		1150237	2					
ANR	1150604	UnaryOperationExpression	& parameters -> cp_reduce		1150237	0					
ANR	1150605	UnaryOperator	&		1150237	0					
ANR	1150606	PtrMemberAccess	parameters -> cp_reduce		1150237	1					
ANR	1150607	Identifier	parameters		1150237	0					
ANR	1150608	Identifier	cp_reduce		1150237	1					
ANR	1150609	BreakStatement	break ;	322:3:10623:10628	1150237	11	True				
ANR	1150610	Label	case 'l' :	327:3:10714:10722	1150237	12	True				
ANR	1150611	CompoundStatement		121:3:3008:3008	1150237	13					
ANR	1150612	ExpressionStatement	"sscanf ( opj_optarg , ""%d"" , & parameters -> cp_layer )"	329:4:10758:10805	1150237	0	True				
ANR	1150613	CallExpression	"sscanf ( opj_optarg , ""%d"" , & parameters -> cp_layer )"		1150237	0					
ANR	1150614	Callee	sscanf		1150237	0					
ANR	1150615	Identifier	sscanf		1150237	0					
ANR	1150616	ArgumentList	opj_optarg		1150237	1					
ANR	1150617	Argument	opj_optarg		1150237	0					
ANR	1150618	Identifier	opj_optarg		1150237	0					
ANR	1150619	Argument	"""%d"""		1150237	1					
ANR	1150620	PrimaryExpression	"""%d"""		1150237	0					
ANR	1150621	Argument	& parameters -> cp_layer		1150237	2					
ANR	1150622	UnaryOperationExpression	& parameters -> cp_layer		1150237	0					
ANR	1150623	UnaryOperator	&		1150237	0					
ANR	1150624	PtrMemberAccess	parameters -> cp_layer		1150237	1					
ANR	1150625	Identifier	parameters		1150237	0					
ANR	1150626	Identifier	cp_layer		1150237	1					
ANR	1150627	BreakStatement	break ;	331:3:10817:10822	1150237	14	True				
ANR	1150628	Label	case 'h' :	335:3:10900:10908	1150237	15	True				
ANR	1150629	ExpressionStatement	decode_help_display ( )	336:4:10952:10973	1150237	16	True				
ANR	1150630	CallExpression	decode_help_display ( )		1150237	0					
ANR	1150631	Callee	decode_help_display		1150237	0					
ANR	1150632	Identifier	decode_help_display		1150237	0					
ANR	1150633	ArgumentList			1150237	1					
ANR	1150634	ReturnStatement	return 1 ;	337:4:10980:10988	1150237	17	True				
ANR	1150635	PrimaryExpression	1		1150237	0					
ANR	1150636	Label	case 'y' :	341:3:11068:11076	1150237	18	True				
ANR	1150637	CompoundStatement		135:4:3369:3369	1150237	19					
ANR	1150638	ExpressionStatement	img_fol -> imgdirpath = ( char * ) opj_malloc ( strlen ( opj_optarg ) + 1 )	343:5:11120:11183	1150237	0	True				
ANR	1150639	AssignmentExpression	img_fol -> imgdirpath = ( char * ) opj_malloc ( strlen ( opj_optarg ) + 1 )		1150237	0		=			
ANR	1150640	PtrMemberAccess	img_fol -> imgdirpath		1150237	0					
ANR	1150641	Identifier	img_fol		1150237	0					
ANR	1150642	Identifier	imgdirpath		1150237	1					
ANR	1150643	CastExpression	( char * ) opj_malloc ( strlen ( opj_optarg ) + 1 )		1150237	1					
ANR	1150644	CastTarget	char *		1150237	0					
ANR	1150645	CallExpression	opj_malloc ( strlen ( opj_optarg ) + 1 )		1150237	1					
ANR	1150646	Callee	opj_malloc		1150237	0					
ANR	1150647	Identifier	opj_malloc		1150237	0					
ANR	1150648	ArgumentList	strlen ( opj_optarg ) + 1		1150237	1					
ANR	1150649	Argument	strlen ( opj_optarg ) + 1		1150237	0					
ANR	1150650	AdditiveExpression	strlen ( opj_optarg ) + 1		1150237	0		+			
ANR	1150651	CallExpression	strlen ( opj_optarg )		1150237	0					
ANR	1150652	Callee	strlen		1150237	0					
ANR	1150653	Identifier	strlen		1150237	0					
ANR	1150654	ArgumentList	opj_optarg		1150237	1					
ANR	1150655	Argument	opj_optarg		1150237	0					
ANR	1150656	Identifier	opj_optarg		1150237	0					
ANR	1150657	PrimaryExpression	1		1150237	1					
ANR	1150658	ExpressionStatement	"strcpy ( img_fol -> imgdirpath , opj_optarg )"	344:5:11191:11229	1150237	1	True				
ANR	1150659	CallExpression	"strcpy ( img_fol -> imgdirpath , opj_optarg )"		1150237	0					
ANR	1150660	Callee	strcpy		1150237	0					
ANR	1150661	Identifier	strcpy		1150237	0					
ANR	1150662	ArgumentList	img_fol -> imgdirpath		1150237	1					
ANR	1150663	Argument	img_fol -> imgdirpath		1150237	0					
ANR	1150664	PtrMemberAccess	img_fol -> imgdirpath		1150237	0					
ANR	1150665	Identifier	img_fol		1150237	0					
ANR	1150666	Identifier	imgdirpath		1150237	1					
ANR	1150667	Argument	opj_optarg		1150237	1					
ANR	1150668	Identifier	opj_optarg		1150237	0					
ANR	1150669	ExpressionStatement	img_fol -> set_imgdir = 1	345:5:11237:11258	1150237	2	True				
ANR	1150670	AssignmentExpression	img_fol -> set_imgdir = 1		1150237	0		=			
ANR	1150671	PtrMemberAccess	img_fol -> set_imgdir		1150237	0					
ANR	1150672	Identifier	img_fol		1150237	0					
ANR	1150673	Identifier	set_imgdir		1150237	1					
ANR	1150674	PrimaryExpression	1		1150237	1					
ANR	1150675	BreakStatement	break ;	347:4:11272:11277	1150237	20	True				
ANR	1150676	Label	case 'W' :	352:3:11385:11393	1150237	21	True				
ANR	1150677	CompoundStatement		147:4:3697:3715	1150237	22					
ANR	1150678	IdentifierDeclStatement	char * token = NULL ;	354:4:11440:11458	1150237	0	True				
ANR	1150679	IdentifierDecl	* token = NULL		1150237	0					
ANR	1150680	IdentifierDeclType	char *		1150237	0					
ANR	1150681	Identifier	token		1150237	1					
ANR	1150682	AssignmentExpression	* token = NULL		1150237	2		=			
ANR	1150683	Identifier	NULL		1150237	0					
ANR	1150684	Identifier	NULL		1150237	1					
ANR	1150685	ExpressionStatement	"token = strtok ( opj_optarg , "","" )"	356:4:11467:11498	1150237	1	True				
ANR	1150686	AssignmentExpression	"token = strtok ( opj_optarg , "","" )"		1150237	0		=			
ANR	1150687	Identifier	token		1150237	0					
ANR	1150688	CallExpression	"strtok ( opj_optarg , "","" )"		1150237	1					
ANR	1150689	Callee	strtok		1150237	0					
ANR	1150690	Identifier	strtok		1150237	0					
ANR	1150691	ArgumentList	opj_optarg		1150237	1					
ANR	1150692	Argument	opj_optarg		1150237	0					
ANR	1150693	Identifier	opj_optarg		1150237	0					
ANR	1150694	Argument	""","""		1150237	1					
ANR	1150695	PrimaryExpression	""","""		1150237	0					
ANR	1150696	WhileStatement	while ( token != NULL )		1150237	2					
ANR	1150697	Condition	token != NULL	357:10:11511:11523	1150237	0	True				
ANR	1150698	EqualityExpression	token != NULL		1150237	0		!=			
ANR	1150699	Identifier	token		1150237	0					
ANR	1150700	Identifier	NULL		1150237	1					
ANR	1150701	CompoundStatement		150:25:3783:3783	1150237	1					
ANR	1150702	IfStatement	if ( * token == 'c' )		1150237	0					
ANR	1150703	Condition	* token == 'c'	360:9:11589:11601	1150237	0	True				
ANR	1150704	EqualityExpression	* token == 'c'		1150237	0		==			
ANR	1150705	UnaryOperationExpression	* token		1150237	0					
ANR	1150706	UnaryOperator	*		1150237	0					
ANR	1150707	Identifier	token		1150237	1					
ANR	1150708	PrimaryExpression	'c'		1150237	1					
ANR	1150709	CompoundStatement		155:13:3879:3889	1150237	1					
ANR	1150710	Statement	static	362:6:11615:11620	1150237	0	True				
ANR	1150711	IdentifierDeclStatement	int compno ;	362:13:11622:11632	1150237	1	True				
ANR	1150712	IdentifierDecl	compno		1150237	0					
ANR	1150713	IdentifierDeclType	int		1150237	0					
ANR	1150714	Identifier	compno		1150237	1					
ANR	1150715	ExpressionStatement	compno = JPWL_EXPECTED_COMPONENTS	364:6:11643:11676	1150237	2	True				
ANR	1150716	AssignmentExpression	compno = JPWL_EXPECTED_COMPONENTS		1150237	0		=			
ANR	1150717	Identifier	compno		1150237	0					
ANR	1150718	Identifier	JPWL_EXPECTED_COMPONENTS		1150237	1					
ANR	1150719	IfStatement	"if ( sscanf ( token , ""c=%d"" , & compno ) == 1 )"		1150237	3					
ANR	1150720	Condition	"sscanf ( token , ""c=%d"" , & compno ) == 1"	366:9:11725:11759	1150237	0	True				
ANR	1150721	EqualityExpression	"sscanf ( token , ""c=%d"" , & compno ) == 1"		1150237	0		==			
ANR	1150722	CallExpression	"sscanf ( token , ""c=%d"" , & compno )"		1150237	0					
ANR	1150723	Callee	sscanf		1150237	0					
ANR	1150724	Identifier	sscanf		1150237	0					
ANR	1150725	ArgumentList	token		1150237	1					
ANR	1150726	Argument	token		1150237	0					
ANR	1150727	Identifier	token		1150237	0					
ANR	1150728	Argument	"""c=%d"""		1150237	1					
ANR	1150729	PrimaryExpression	"""c=%d"""		1150237	0					
ANR	1150730	Argument	& compno		1150237	2					
ANR	1150731	UnaryOperationExpression	& compno		1150237	0					
ANR	1150732	UnaryOperator	&		1150237	0					
ANR	1150733	Identifier	compno		1150237	1					
ANR	1150734	PrimaryExpression	1		1150237	1					
ANR	1150735	CompoundStatement		159:46:4019:4019	1150237	1					
ANR	1150736	IfStatement	if ( ( compno < 1 ) || ( compno > 256 ) )		1150237	0					
ANR	1150737	Condition	( compno < 1 ) || ( compno > 256 )	368:11:11800:11829	1150237	0	True				
ANR	1150738	OrExpression	( compno < 1 ) || ( compno > 256 )		1150237	0		||			
ANR	1150739	RelationalExpression	compno < 1		1150237	0		<			
ANR	1150740	Identifier	compno		1150237	0					
ANR	1150741	PrimaryExpression	1		1150237	1					
ANR	1150742	RelationalExpression	compno > 256		1150237	1		>			
ANR	1150743	Identifier	compno		1150237	0					
ANR	1150744	PrimaryExpression	256		1150237	1					
ANR	1150745	CompoundStatement		161:43:4089:4089	1150237	1					
ANR	1150746	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid number of components c = %d\\n"" , compno )"	369:8:11843:11916	1150237	0	True				
ANR	1150747	CallExpression	"fprintf ( stderr , ""ERROR -> invalid number of components c = %d\\n"" , compno )"		1150237	0					
ANR	1150748	Callee	fprintf		1150237	0					
ANR	1150749	Identifier	fprintf		1150237	0					
ANR	1150750	ArgumentList	stderr		1150237	1					
ANR	1150751	Argument	stderr		1150237	0					
ANR	1150752	Identifier	stderr		1150237	0					
ANR	1150753	Argument	"""ERROR -> invalid number of components c = %d\\n"""		1150237	1					
ANR	1150754	PrimaryExpression	"""ERROR -> invalid number of components c = %d\\n"""		1150237	0					
ANR	1150755	Argument	compno		1150237	2					
ANR	1150756	Identifier	compno		1150237	0					
ANR	1150757	ReturnStatement	return 1 ;	370:8:11927:11935	1150237	1	True				
ANR	1150758	PrimaryExpression	1		1150237	0					
ANR	1150759	ExpressionStatement	parameters -> jpwl_exp_comps = compno	372:7:11955:11990	1150237	1	True				
ANR	1150760	AssignmentExpression	parameters -> jpwl_exp_comps = compno		1150237	0		=			
ANR	1150761	PtrMemberAccess	parameters -> jpwl_exp_comps		1150237	0					
ANR	1150762	Identifier	parameters		1150237	0					
ANR	1150763	Identifier	jpwl_exp_comps		1150237	1					
ANR	1150764	Identifier	compno		1150237	1					
ANR	1150765	ElseStatement	else		1150237	0					
ANR	1150766	IfStatement	"if ( ! strcmp ( token , ""c"" ) )"		1150237	0					
ANR	1150767	Condition	"! strcmp ( token , ""c"" )"	374:17:12012:12030	1150237	0	True				
ANR	1150768	UnaryOperationExpression	"! strcmp ( token , ""c"" )"		1150237	0					
ANR	1150769	UnaryOperator	!		1150237	0					
ANR	1150770	CallExpression	"strcmp ( token , ""c"" )"		1150237	1					
ANR	1150771	Callee	strcmp		1150237	0					
ANR	1150772	Identifier	strcmp		1150237	0					
ANR	1150773	ArgumentList	token		1150237	1					
ANR	1150774	Argument	token		1150237	0					
ANR	1150775	Identifier	token		1150237	0					
ANR	1150776	Argument	"""c"""		1150237	1					
ANR	1150777	PrimaryExpression	"""c"""		1150237	0					
ANR	1150778	CompoundStatement		167:38:4290:4290	1150237	1					
ANR	1150779	ExpressionStatement	parameters -> jpwl_exp_comps = compno	376:7:12065:12100	1150237	0	True				
ANR	1150780	AssignmentExpression	parameters -> jpwl_exp_comps = compno		1150237	0		=			
ANR	1150781	PtrMemberAccess	parameters -> jpwl_exp_comps		1150237	0					
ANR	1150782	Identifier	parameters		1150237	0					
ANR	1150783	Identifier	jpwl_exp_comps		1150237	1					
ANR	1150784	Identifier	compno		1150237	1					
ANR	1150785	ElseStatement	else		1150237	0					
ANR	1150786	CompoundStatement		171:13:4403:4403	1150237	0					
ANR	1150787	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid components specified = %s\\n"" , token )"	379:7:12156:12226	1150237	0	True				
ANR	1150788	CallExpression	"fprintf ( stderr , ""ERROR -> invalid components specified = %s\\n"" , token )"		1150237	0					
ANR	1150789	Callee	fprintf		1150237	0					
ANR	1150790	Identifier	fprintf		1150237	0					
ANR	1150791	ArgumentList	stderr		1150237	1					
ANR	1150792	Argument	stderr		1150237	0					
ANR	1150793	Identifier	stderr		1150237	0					
ANR	1150794	Argument	"""ERROR -> invalid components specified = %s\\n"""		1150237	1					
ANR	1150795	PrimaryExpression	"""ERROR -> invalid components specified = %s\\n"""		1150237	0					
ANR	1150796	Argument	token		1150237	2					
ANR	1150797	Identifier	token		1150237	0					
ANR	1150798	ReturnStatement	return 1 ;	380:7:12236:12244	1150237	1	True				
ANR	1150799	PrimaryExpression	1		1150237	0					
ANR	1150800	ExpressionStatement		381:7:12254:12254	1150237	4	True				
ANR	1150801	IfStatement	if ( * token == 't' )		1150237	1					
ANR	1150802	Condition	* token == 't'	385:9:12319:12331	1150237	0	True				
ANR	1150803	EqualityExpression	* token == 't'		1150237	0		==			
ANR	1150804	UnaryOperationExpression	* token		1150237	0					
ANR	1150805	UnaryOperator	*		1150237	0					
ANR	1150806	Identifier	token		1150237	1					
ANR	1150807	PrimaryExpression	't'		1150237	1					
ANR	1150808	CompoundStatement		180:13:4609:4619	1150237	1					
ANR	1150809	Statement	static	387:6:12345:12350	1150237	0	True				
ANR	1150810	IdentifierDeclStatement	int tileno ;	387:13:12352:12362	1150237	1	True				
ANR	1150811	IdentifierDecl	tileno		1150237	0					
ANR	1150812	IdentifierDeclType	int		1150237	0					
ANR	1150813	Identifier	tileno		1150237	1					
ANR	1150814	ExpressionStatement	tileno = JPWL_MAXIMUM_TILES	389:6:12373:12400	1150237	2	True				
ANR	1150815	AssignmentExpression	tileno = JPWL_MAXIMUM_TILES		1150237	0		=			
ANR	1150816	Identifier	tileno		1150237	0					
ANR	1150817	Identifier	JPWL_MAXIMUM_TILES		1150237	1					
ANR	1150818	IfStatement	"if ( sscanf ( token , ""t=%d"" , & tileno ) == 1 )"		1150237	3					
ANR	1150819	Condition	"sscanf ( token , ""t=%d"" , & tileno ) == 1"	391:9:12441:12475	1150237	0	True				
ANR	1150820	EqualityExpression	"sscanf ( token , ""t=%d"" , & tileno ) == 1"		1150237	0		==			
ANR	1150821	CallExpression	"sscanf ( token , ""t=%d"" , & tileno )"		1150237	0					
ANR	1150822	Callee	sscanf		1150237	0					
ANR	1150823	Identifier	sscanf		1150237	0					
ANR	1150824	ArgumentList	token		1150237	1					
ANR	1150825	Argument	token		1150237	0					
ANR	1150826	Identifier	token		1150237	0					
ANR	1150827	Argument	"""t=%d"""		1150237	1					
ANR	1150828	PrimaryExpression	"""t=%d"""		1150237	0					
ANR	1150829	Argument	& tileno		1150237	2					
ANR	1150830	UnaryOperationExpression	& tileno		1150237	0					
ANR	1150831	UnaryOperator	&		1150237	0					
ANR	1150832	Identifier	tileno		1150237	1					
ANR	1150833	PrimaryExpression	1		1150237	1					
ANR	1150834	CompoundStatement		184:46:4735:4735	1150237	1					
ANR	1150835	IfStatement	if ( ( tileno < 1 ) || ( tileno > JPWL_MAXIMUM_TILES ) )		1150237	0					
ANR	1150836	Condition	( tileno < 1 ) || ( tileno > JPWL_MAXIMUM_TILES )	393:11:12516:12560	1150237	0	True				
ANR	1150837	OrExpression	( tileno < 1 ) || ( tileno > JPWL_MAXIMUM_TILES )		1150237	0		||			
ANR	1150838	RelationalExpression	tileno < 1		1150237	0		<			
ANR	1150839	Identifier	tileno		1150237	0					
ANR	1150840	PrimaryExpression	1		1150237	1					
ANR	1150841	RelationalExpression	tileno > JPWL_MAXIMUM_TILES		1150237	1		>			
ANR	1150842	Identifier	tileno		1150237	0					
ANR	1150843	Identifier	JPWL_MAXIMUM_TILES		1150237	1					
ANR	1150844	CompoundStatement		186:58:4820:4820	1150237	1					
ANR	1150845	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid number of tiles t = %d\\n"" , tileno )"	394:8:12574:12642	1150237	0	True				
ANR	1150846	CallExpression	"fprintf ( stderr , ""ERROR -> invalid number of tiles t = %d\\n"" , tileno )"		1150237	0					
ANR	1150847	Callee	fprintf		1150237	0					
ANR	1150848	Identifier	fprintf		1150237	0					
ANR	1150849	ArgumentList	stderr		1150237	1					
ANR	1150850	Argument	stderr		1150237	0					
ANR	1150851	Identifier	stderr		1150237	0					
ANR	1150852	Argument	"""ERROR -> invalid number of tiles t = %d\\n"""		1150237	1					
ANR	1150853	PrimaryExpression	"""ERROR -> invalid number of tiles t = %d\\n"""		1150237	0					
ANR	1150854	Argument	tileno		1150237	2					
ANR	1150855	Identifier	tileno		1150237	0					
ANR	1150856	ReturnStatement	return 1 ;	395:8:12653:12661	1150237	1	True				
ANR	1150857	PrimaryExpression	1		1150237	0					
ANR	1150858	ExpressionStatement	parameters -> jpwl_max_tiles = tileno	397:7:12681:12716	1150237	1	True				
ANR	1150859	AssignmentExpression	parameters -> jpwl_max_tiles = tileno		1150237	0		=			
ANR	1150860	PtrMemberAccess	parameters -> jpwl_max_tiles		1150237	0					
ANR	1150861	Identifier	parameters		1150237	0					
ANR	1150862	Identifier	jpwl_max_tiles		1150237	1					
ANR	1150863	Identifier	tileno		1150237	1					
ANR	1150864	ElseStatement	else		1150237	0					
ANR	1150865	IfStatement	"if ( ! strcmp ( token , ""t"" ) )"		1150237	0					
ANR	1150866	Condition	"! strcmp ( token , ""t"" )"	399:17:12738:12756	1150237	0	True				
ANR	1150867	UnaryOperationExpression	"! strcmp ( token , ""t"" )"		1150237	0					
ANR	1150868	UnaryOperator	!		1150237	0					
ANR	1150869	CallExpression	"strcmp ( token , ""t"" )"		1150237	1					
ANR	1150870	Callee	strcmp		1150237	0					
ANR	1150871	Identifier	strcmp		1150237	0					
ANR	1150872	ArgumentList	token		1150237	1					
ANR	1150873	Argument	token		1150237	0					
ANR	1150874	Identifier	token		1150237	0					
ANR	1150875	Argument	"""t"""		1150237	1					
ANR	1150876	PrimaryExpression	"""t"""		1150237	0					
ANR	1150877	CompoundStatement		192:38:5016:5016	1150237	1					
ANR	1150878	ExpressionStatement	parameters -> jpwl_max_tiles = tileno	401:7:12791:12826	1150237	0	True				
ANR	1150879	AssignmentExpression	parameters -> jpwl_max_tiles = tileno		1150237	0		=			
ANR	1150880	PtrMemberAccess	parameters -> jpwl_max_tiles		1150237	0					
ANR	1150881	Identifier	parameters		1150237	0					
ANR	1150882	Identifier	jpwl_max_tiles		1150237	1					
ANR	1150883	Identifier	tileno		1150237	1					
ANR	1150884	ElseStatement	else		1150237	0					
ANR	1150885	CompoundStatement		196:13:5129:5129	1150237	0					
ANR	1150886	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid tiles specified = %s\\n"" , token )"	404:7:12882:12947	1150237	0	True				
ANR	1150887	CallExpression	"fprintf ( stderr , ""ERROR -> invalid tiles specified = %s\\n"" , token )"		1150237	0					
ANR	1150888	Callee	fprintf		1150237	0					
ANR	1150889	Identifier	fprintf		1150237	0					
ANR	1150890	ArgumentList	stderr		1150237	1					
ANR	1150891	Argument	stderr		1150237	0					
ANR	1150892	Identifier	stderr		1150237	0					
ANR	1150893	Argument	"""ERROR -> invalid tiles specified = %s\\n"""		1150237	1					
ANR	1150894	PrimaryExpression	"""ERROR -> invalid tiles specified = %s\\n"""		1150237	0					
ANR	1150895	Argument	token		1150237	2					
ANR	1150896	Identifier	token		1150237	0					
ANR	1150897	ReturnStatement	return 1 ;	405:7:12957:12965	1150237	1	True				
ANR	1150898	PrimaryExpression	1		1150237	0					
ANR	1150899	ExpressionStatement		406:7:12975:12975	1150237	4	True				
ANR	1150900	ExpressionStatement	"token = strtok ( NULL , "","" )"	410:5:13024:13049	1150237	2	True				
ANR	1150901	AssignmentExpression	"token = strtok ( NULL , "","" )"		1150237	0		=			
ANR	1150902	Identifier	token		1150237	0					
ANR	1150903	CallExpression	"strtok ( NULL , "","" )"		1150237	1					
ANR	1150904	Callee	strtok		1150237	0					
ANR	1150905	Identifier	strtok		1150237	0					
ANR	1150906	ArgumentList	NULL		1150237	1					
ANR	1150907	Argument	NULL		1150237	0					
ANR	1150908	Identifier	NULL		1150237	0					
ANR	1150909	Argument	""","""		1150237	1					
ANR	1150910	PrimaryExpression	""","""		1150237	0					
ANR	1150911	ExpressionStatement		411:5:13057:13057	1150237	3	True				
ANR	1150912	ExpressionStatement	parameters -> jpwl_correct = true	412:4:13064:13095	1150237	4	True				
ANR	1150913	AssignmentExpression	parameters -> jpwl_correct = true		1150237	0		=			
ANR	1150914	PtrMemberAccess	parameters -> jpwl_correct		1150237	0					
ANR	1150915	Identifier	parameters		1150237	0					
ANR	1150916	Identifier	jpwl_correct		1150237	1					
ANR	1150917	Identifier	true		1150237	1					
ANR	1150918	ExpressionStatement	"fprintf ( stdout , ""JPWL correction capability activated\\n"" )"	413:4:13102:13159	1150237	5	True				
ANR	1150919	CallExpression	"fprintf ( stdout , ""JPWL correction capability activated\\n"" )"		1150237	0					
ANR	1150920	Callee	fprintf		1150237	0					
ANR	1150921	Identifier	fprintf		1150237	0					
ANR	1150922	ArgumentList	stdout		1150237	1					
ANR	1150923	Argument	stdout		1150237	0					
ANR	1150924	Identifier	stdout		1150237	0					
ANR	1150925	Argument	"""JPWL correction capability activated\\n"""		1150237	1					
ANR	1150926	PrimaryExpression	"""JPWL correction capability activated\\n"""		1150237	0					
ANR	1150927	ExpressionStatement	"fprintf ( stdout , ""- expecting %d components\\n"" , parameters -> jpwl_exp_comps )"	414:4:13166:13240	1150237	6	True				
ANR	1150928	CallExpression	"fprintf ( stdout , ""- expecting %d components\\n"" , parameters -> jpwl_exp_comps )"		1150237	0					
ANR	1150929	Callee	fprintf		1150237	0					
ANR	1150930	Identifier	fprintf		1150237	0					
ANR	1150931	ArgumentList	stdout		1150237	1					
ANR	1150932	Argument	stdout		1150237	0					
ANR	1150933	Identifier	stdout		1150237	0					
ANR	1150934	Argument	"""- expecting %d components\\n"""		1150237	1					
ANR	1150935	PrimaryExpression	"""- expecting %d components\\n"""		1150237	0					
ANR	1150936	Argument	parameters -> jpwl_exp_comps		1150237	2					
ANR	1150937	PtrMemberAccess	parameters -> jpwl_exp_comps		1150237	0					
ANR	1150938	Identifier	parameters		1150237	0					
ANR	1150939	Identifier	jpwl_exp_comps		1150237	1					
ANR	1150940	BreakStatement	break ;	416:3:13252:13257	1150237	23	True				
ANR	1150941	Label	default :	422:3:13386:13393	1150237	24	True				
ANR	1150942	Identifier	default		1150237	0					
ANR	1150943	ExpressionStatement	"fprintf ( stderr , ""WARNING -> this option is not valid \\""-%c %s\\""\\n"" , c , opj_optarg )"	423:4:13400:13480	1150237	25	True				
ANR	1150944	CallExpression	"fprintf ( stderr , ""WARNING -> this option is not valid \\""-%c %s\\""\\n"" , c , opj_optarg )"		1150237	0					
ANR	1150945	Callee	fprintf		1150237	0					
ANR	1150946	Identifier	fprintf		1150237	0					
ANR	1150947	ArgumentList	stderr		1150237	1					
ANR	1150948	Argument	stderr		1150237	0					
ANR	1150949	Identifier	stderr		1150237	0					
ANR	1150950	Argument	"""WARNING -> this option is not valid \\""-%c %s\\""\\n"""		1150237	1					
ANR	1150951	PrimaryExpression	"""WARNING -> this option is not valid \\""-%c %s\\""\\n"""		1150237	0					
ANR	1150952	Argument	c		1150237	2					
ANR	1150953	Identifier	c		1150237	0					
ANR	1150954	Argument	opj_optarg		1150237	3					
ANR	1150955	Identifier	opj_optarg		1150237	0					
ANR	1150956	BreakStatement	break ;	424:4:13487:13492	1150237	26	True				
ANR	1150957	ReturnStatement	return 0 ;	430:1:13602:13610	1150237	21	True				
ANR	1150958	PrimaryExpression	0		1150237	0					
ANR	1150959	ReturnType	int		1150237	1					
ANR	1150960	Identifier	parse_cmdline_decoder		1150237	2					
ANR	1150961	ParameterList	"int argc , char * * argv , opj_dparameters_t * parameters , img_fol_t * img_fol"		1150237	3					
ANR	1150962	Parameter	int argc	208:26:7669:7676	1150237	0	True				
ANR	1150963	ParameterType	int		1150237	0					
ANR	1150964	Identifier	argc		1150237	1					
ANR	1150965	Parameter	char * * argv	208:36:7679:7689	1150237	1	True				
ANR	1150966	ParameterType	char * *		1150237	0					
ANR	1150967	Identifier	argv		1150237	1					
ANR	1150968	Parameter	opj_dparameters_t * parameters	208:49:7692:7720	1150237	2	True				
ANR	1150969	ParameterType	opj_dparameters_t *		1150237	0					
ANR	1150970	Identifier	parameters		1150237	1					
ANR	1150971	Parameter	img_fol_t * img_fol	208:79:7722:7739	1150237	3	True				
ANR	1150972	ParameterType	img_fol_t *		1150237	0					
ANR	1150973	Identifier	img_fol		1150237	1					
ANR	1150974	CFGEntryNode	ENTRY		1150237		True				
ANR	1150975	CFGExitNode	EXIT		1150237		True				
ANR	1150976	Symbol	parameters -> cod_format		1150237						
ANR	1150977	Symbol	img_fol		1150237						
ANR	1150978	Symbol	opj_malloc		1150237						
ANR	1150979	Symbol	tileno		1150237						
ANR	1150980	Symbol	stdout		1150237						
ANR	1150981	Symbol	outfile		1150237						
ANR	1150982	Symbol	& tileno		1150237						
ANR	1150983	Symbol	parameters -> outfile		1150237						
ANR	1150984	Symbol	infile		1150237						
ANR	1150985	Symbol	JPWL_MAXIMUM_TILES		1150237						
ANR	1150986	Symbol	argv		1150237						
ANR	1150987	Symbol	outformat		1150237						
ANR	1150988	Symbol	strlen		1150237						
ANR	1150989	Symbol	long_option		1150237						
ANR	1150990	Symbol	optlist		1150237						
ANR	1150991	Symbol	img_fol -> out_format		1150237						
ANR	1150992	Symbol	of		1150237						
ANR	1150993	Symbol	totlen		1150237						
ANR	1150994	Symbol	img_fol -> set_imgdir		1150237						
ANR	1150995	Symbol	opj_getopt_long		1150237						
ANR	1150996	Symbol	argc		1150237						
ANR	1150997	Symbol	strcmp		1150237						
ANR	1150998	Symbol	img_fol -> imgdirpath		1150237						
ANR	1150999	Symbol	parameters -> jpwl_correct		1150237						
ANR	1151000	Symbol	c		1150237						
ANR	1151001	Symbol	NULL		1150237						
ANR	1151002	Symbol	opj_optarg		1150237						
ANR	1151003	Symbol	get_file_format		1150237						
ANR	1151004	Symbol	& parameters -> cp_layer		1150237						
ANR	1151005	Symbol	strtok		1150237						
ANR	1151006	Symbol	stderr		1150237						
ANR	1151007	Symbol	parameters -> infile		1150237						
ANR	1151008	Symbol	parameters -> decod_format		1150237						
ANR	1151009	Symbol	token		1150237						
ANR	1151010	Symbol	compno		1150237						
ANR	1151011	Symbol	* parameters		1150237						
ANR	1151012	Symbol	* token		1150237						
ANR	1151013	Symbol	parameters -> jpwl_exp_comps		1150237						
ANR	1151014	Symbol	img_fol -> set_out_format		1150237						
ANR	1151015	Symbol	parameters -> jpwl_max_tiles		1150237						
ANR	1151016	Symbol	sscanf		1150237						
ANR	1151017	Symbol	* img_fol		1150237						
ANR	1151018	Symbol	true		1150237						
ANR	1151019	Symbol	& compno		1150237						
ANR	1151020	Symbol	& parameters -> cp_reduce		1150237						
ANR	1151021	Symbol	JPWL_EXPECTED_COMPONENTS		1150237						
ANR	1151022	Symbol	parameters		1150237						
ANR	1151023	Function	error_callback	438:0:13807:14343							
ANR	1151024	FunctionDef	"error_callback (const char * msg , void * client_data)"		1151023	0					
ANR	1151025	CompoundStatement		438:56:13863:14343	1151023	0					
ANR	1151026	IdentifierDeclStatement	callback_variables_t * vars = ( callback_variables_t * ) client_data ;	439:1:13867:13931	1151023	0	True				
ANR	1151027	IdentifierDecl	* vars = ( callback_variables_t * ) client_data		1151023	0					
ANR	1151028	IdentifierDeclType	callback_variables_t *		1151023	0					
ANR	1151029	Identifier	vars		1151023	1					
ANR	1151030	AssignmentExpression	* vars = ( callback_variables_t * ) client_data		1151023	2		=			
ANR	1151031	Identifier	vars		1151023	0					
ANR	1151032	CastExpression	( callback_variables_t * ) client_data		1151023	1					
ANR	1151033	CastTarget	callback_variables_t *		1151023	0					
ANR	1151034	Identifier	client_data		1151023	1					
ANR	1151035	IdentifierDeclStatement	JNIEnv * env = vars -> env ;	440:1:13935:13958	1151023	1	True				
ANR	1151036	IdentifierDecl	* env = vars -> env		1151023	0					
ANR	1151037	IdentifierDeclType	JNIEnv *		1151023	0					
ANR	1151038	Identifier	env		1151023	1					
ANR	1151039	AssignmentExpression	* env = vars -> env		1151023	2		=			
ANR	1151040	Identifier	env		1151023	0					
ANR	1151041	PtrMemberAccess	vars -> env		1151023	1					
ANR	1151042	Identifier	vars		1151023	0					
ANR	1151043	Identifier	env		1151023	1					
ANR	1151044	IdentifierDeclStatement	jstring jbuffer ;	441:1:13962:13977	1151023	2	True				
ANR	1151045	IdentifierDecl	jbuffer		1151023	0					
ANR	1151046	IdentifierDeclType	jstring		1151023	0					
ANR	1151047	Identifier	jbuffer		1151023	1					
ANR	1151048	ExpressionStatement	"jbuffer = ( * env ) -> NewStringUTF ( env , msg )"	443:1:13983:14023	1151023	3	True				
ANR	1151049	AssignmentExpression	"jbuffer = ( * env ) -> NewStringUTF ( env , msg )"		1151023	0		=			
ANR	1151050	Identifier	jbuffer		1151023	0					
ANR	1151051	CallExpression	"( * env ) -> NewStringUTF ( env , msg )"		1151023	1					
ANR	1151052	Callee	( * env ) -> NewStringUTF		1151023	0					
ANR	1151053	PtrMemberAccess	( * env ) -> NewStringUTF		1151023	0					
ANR	1151054	UnaryOperationExpression	* env		1151023	0					
ANR	1151055	UnaryOperator	*		1151023	0					
ANR	1151056	Identifier	env		1151023	1					
ANR	1151057	Identifier	NewStringUTF		1151023	1					
ANR	1151058	ArgumentList	env		1151023	1					
ANR	1151059	Argument	env		1151023	0					
ANR	1151060	Identifier	env		1151023	0					
ANR	1151061	Argument	msg		1151023	1					
ANR	1151062	Identifier	msg		1151023	0					
ANR	1151063	ExpressionStatement	( * env ) -> ExceptionClear ( env )	444:1:14027:14054	1151023	4	True				
ANR	1151064	CallExpression	( * env ) -> ExceptionClear ( env )		1151023	0					
ANR	1151065	Callee	( * env ) -> ExceptionClear		1151023	0					
ANR	1151066	PtrMemberAccess	( * env ) -> ExceptionClear		1151023	0					
ANR	1151067	UnaryOperationExpression	* env		1151023	0					
ANR	1151068	UnaryOperator	*		1151023	0					
ANR	1151069	Identifier	env		1151023	1					
ANR	1151070	Identifier	ExceptionClear		1151023	1					
ANR	1151071	ArgumentList	env		1151023	1					
ANR	1151072	Argument	env		1151023	0					
ANR	1151073	Identifier	env		1151023	0					
ANR	1151074	ExpressionStatement	"( * env ) -> CallVoidMethod ( env , * ( vars -> jobj ) , vars -> error_mid , jbuffer )"	445:1:14058:14126	1151023	5	True				
ANR	1151075	CallExpression	"( * env ) -> CallVoidMethod ( env , * ( vars -> jobj ) , vars -> error_mid , jbuffer )"		1151023	0					
ANR	1151076	Callee	( * env ) -> CallVoidMethod		1151023	0					
ANR	1151077	PtrMemberAccess	( * env ) -> CallVoidMethod		1151023	0					
ANR	1151078	UnaryOperationExpression	* env		1151023	0					
ANR	1151079	UnaryOperator	*		1151023	0					
ANR	1151080	Identifier	env		1151023	1					
ANR	1151081	Identifier	CallVoidMethod		1151023	1					
ANR	1151082	ArgumentList	env		1151023	1					
ANR	1151083	Argument	env		1151023	0					
ANR	1151084	Identifier	env		1151023	0					
ANR	1151085	Argument	* ( vars -> jobj )		1151023	1					
ANR	1151086	UnaryOperationExpression	* ( vars -> jobj )		1151023	0					
ANR	1151087	UnaryOperator	*		1151023	0					
ANR	1151088	PtrMemberAccess	vars -> jobj		1151023	1					
ANR	1151089	Identifier	vars		1151023	0					
ANR	1151090	Identifier	jobj		1151023	1					
ANR	1151091	Argument	vars -> error_mid		1151023	2					
ANR	1151092	PtrMemberAccess	vars -> error_mid		1151023	0					
ANR	1151093	Identifier	vars		1151023	0					
ANR	1151094	Identifier	error_mid		1151023	1					
ANR	1151095	Argument	jbuffer		1151023	3					
ANR	1151096	Identifier	jbuffer		1151023	0					
ANR	1151097	IfStatement	if ( ( * env ) -> ExceptionOccurred ( env ) )		1151023	6					
ANR	1151098	Condition	( * env ) -> ExceptionOccurred ( env )	447:5:14136:14165	1151023	0	True				
ANR	1151099	CallExpression	( * env ) -> ExceptionOccurred ( env )		1151023	0					
ANR	1151100	Callee	( * env ) -> ExceptionOccurred		1151023	0					
ANR	1151101	PtrMemberAccess	( * env ) -> ExceptionOccurred		1151023	0					
ANR	1151102	UnaryOperationExpression	* env		1151023	0					
ANR	1151103	UnaryOperator	*		1151023	0					
ANR	1151104	Identifier	env		1151023	1					
ANR	1151105	Identifier	ExceptionOccurred		1151023	1					
ANR	1151106	ArgumentList	env		1151023	1					
ANR	1151107	Argument	env		1151023	0					
ANR	1151108	Identifier	env		1151023	0					
ANR	1151109	CompoundStatement		10:37:304:304	1151023	1					
ANR	1151110	ExpressionStatement	"fprintf ( stderr , ""C: Exception during call back method\\n"" )"	448:2:14173:14229	1151023	0	True				
ANR	1151111	CallExpression	"fprintf ( stderr , ""C: Exception during call back method\\n"" )"		1151023	0					
ANR	1151112	Callee	fprintf		1151023	0					
ANR	1151113	Identifier	fprintf		1151023	0					
ANR	1151114	ArgumentList	stderr		1151023	1					
ANR	1151115	Argument	stderr		1151023	0					
ANR	1151116	Identifier	stderr		1151023	0					
ANR	1151117	Argument	"""C: Exception during call back method\\n"""		1151023	1					
ANR	1151118	PrimaryExpression	"""C: Exception during call back method\\n"""		1151023	0					
ANR	1151119	ExpressionStatement	( * env ) -> ExceptionDescribe ( env )	449:2:14234:14264	1151023	1	True				
ANR	1151120	CallExpression	( * env ) -> ExceptionDescribe ( env )		1151023	0					
ANR	1151121	Callee	( * env ) -> ExceptionDescribe		1151023	0					
ANR	1151122	PtrMemberAccess	( * env ) -> ExceptionDescribe		1151023	0					
ANR	1151123	UnaryOperationExpression	* env		1151023	0					
ANR	1151124	UnaryOperator	*		1151023	0					
ANR	1151125	Identifier	env		1151023	1					
ANR	1151126	Identifier	ExceptionDescribe		1151023	1					
ANR	1151127	ArgumentList	env		1151023	1					
ANR	1151128	Argument	env		1151023	0					
ANR	1151129	Identifier	env		1151023	0					
ANR	1151130	ExpressionStatement	( * env ) -> ExceptionClear ( env )	450:2:14269:14296	1151023	2	True				
ANR	1151131	CallExpression	( * env ) -> ExceptionClear ( env )		1151023	0					
ANR	1151132	Callee	( * env ) -> ExceptionClear		1151023	0					
ANR	1151133	PtrMemberAccess	( * env ) -> ExceptionClear		1151023	0					
ANR	1151134	UnaryOperationExpression	* env		1151023	0					
ANR	1151135	UnaryOperator	*		1151023	0					
ANR	1151136	Identifier	env		1151023	1					
ANR	1151137	Identifier	ExceptionClear		1151023	1					
ANR	1151138	ArgumentList	env		1151023	1					
ANR	1151139	Argument	env		1151023	0					
ANR	1151140	Identifier	env		1151023	0					
ANR	1151141	ExpressionStatement	"( * env ) -> DeleteLocalRef ( env , jbuffer )"	452:1:14304:14340	1151023	7	True				
ANR	1151142	CallExpression	"( * env ) -> DeleteLocalRef ( env , jbuffer )"		1151023	0					
ANR	1151143	Callee	( * env ) -> DeleteLocalRef		1151023	0					
ANR	1151144	PtrMemberAccess	( * env ) -> DeleteLocalRef		1151023	0					
ANR	1151145	UnaryOperationExpression	* env		1151023	0					
ANR	1151146	UnaryOperator	*		1151023	0					
ANR	1151147	Identifier	env		1151023	1					
ANR	1151148	Identifier	DeleteLocalRef		1151023	1					
ANR	1151149	ArgumentList	env		1151023	1					
ANR	1151150	Argument	env		1151023	0					
ANR	1151151	Identifier	env		1151023	0					
ANR	1151152	Argument	jbuffer		1151023	1					
ANR	1151153	Identifier	jbuffer		1151023	0					
ANR	1151154	ReturnType	void		1151023	1					
ANR	1151155	Identifier	error_callback		1151023	2					
ANR	1151156	ParameterList	"const char * msg , void * client_data"		1151023	3					
ANR	1151157	Parameter	const char * msg	438:20:13827:13841	1151023	0	True				
ANR	1151158	ParameterType	const char *		1151023	0					
ANR	1151159	Identifier	msg		1151023	1					
ANR	1151160	Parameter	void * client_data	438:37:13844:13860	1151023	1	True				
ANR	1151161	ParameterType	void *		1151023	0					
ANR	1151162	Identifier	client_data		1151023	1					
ANR	1151163	CFGEntryNode	ENTRY		1151023		True				
ANR	1151164	CFGExitNode	EXIT		1151023		True				
ANR	1151165	Symbol	msg		1151023						
ANR	1151166	Symbol	client_data		1151023						
ANR	1151167	Symbol	* * env		1151023						
ANR	1151168	Symbol	* vars -> jobj		1151023						
ANR	1151169	Symbol	* * vars		1151023						
ANR	1151170	Symbol	* vars		1151023						
ANR	1151171	Symbol	* env		1151023						
ANR	1151172	Symbol	vars -> error_mid		1151023						
ANR	1151173	Symbol	env		1151023						
ANR	1151174	Symbol	stderr		1151023						
ANR	1151175	Symbol	( * env ) -> NewStringUTF		1151023						
ANR	1151176	Symbol	* ( vars -> jobj )		1151023						
ANR	1151177	Symbol	vars -> jobj		1151023						
ANR	1151178	Symbol	( * env ) -> ExceptionOccurred		1151023						
ANR	1151179	Symbol	vars -> env		1151023						
ANR	1151180	Symbol	jbuffer		1151023						
ANR	1151181	Symbol	vars		1151023						
ANR	1151182	Function	warning_callback	457:0:14453:14994							
ANR	1151183	FunctionDef	"warning_callback (const char * msg , void * client_data)"		1151182	0					
ANR	1151184	CompoundStatement		457:58:14511:14994	1151182	0					
ANR	1151185	IdentifierDeclStatement	callback_variables_t * vars = ( callback_variables_t * ) client_data ;	458:1:14515:14579	1151182	0	True				
ANR	1151186	IdentifierDecl	* vars = ( callback_variables_t * ) client_data		1151182	0					
ANR	1151187	IdentifierDeclType	callback_variables_t *		1151182	0					
ANR	1151188	Identifier	vars		1151182	1					
ANR	1151189	AssignmentExpression	* vars = ( callback_variables_t * ) client_data		1151182	2		=			
ANR	1151190	Identifier	vars		1151182	0					
ANR	1151191	CastExpression	( callback_variables_t * ) client_data		1151182	1					
ANR	1151192	CastTarget	callback_variables_t *		1151182	0					
ANR	1151193	Identifier	client_data		1151182	1					
ANR	1151194	IdentifierDeclStatement	JNIEnv * env = vars -> env ;	459:1:14583:14606	1151182	1	True				
ANR	1151195	IdentifierDecl	* env = vars -> env		1151182	0					
ANR	1151196	IdentifierDeclType	JNIEnv *		1151182	0					
ANR	1151197	Identifier	env		1151182	1					
ANR	1151198	AssignmentExpression	* env = vars -> env		1151182	2		=			
ANR	1151199	Identifier	env		1151182	0					
ANR	1151200	PtrMemberAccess	vars -> env		1151182	1					
ANR	1151201	Identifier	vars		1151182	0					
ANR	1151202	Identifier	env		1151182	1					
ANR	1151203	IdentifierDeclStatement	jstring jbuffer ;	460:1:14610:14625	1151182	2	True				
ANR	1151204	IdentifierDecl	jbuffer		1151182	0					
ANR	1151205	IdentifierDeclType	jstring		1151182	0					
ANR	1151206	Identifier	jbuffer		1151182	1					
ANR	1151207	ExpressionStatement	"jbuffer = ( * env ) -> NewStringUTF ( env , msg )"	462:1:14631:14671	1151182	3	True				
ANR	1151208	AssignmentExpression	"jbuffer = ( * env ) -> NewStringUTF ( env , msg )"		1151182	0		=			
ANR	1151209	Identifier	jbuffer		1151182	0					
ANR	1151210	CallExpression	"( * env ) -> NewStringUTF ( env , msg )"		1151182	1					
ANR	1151211	Callee	( * env ) -> NewStringUTF		1151182	0					
ANR	1151212	PtrMemberAccess	( * env ) -> NewStringUTF		1151182	0					
ANR	1151213	UnaryOperationExpression	* env		1151182	0					
ANR	1151214	UnaryOperator	*		1151182	0					
ANR	1151215	Identifier	env		1151182	1					
ANR	1151216	Identifier	NewStringUTF		1151182	1					
ANR	1151217	ArgumentList	env		1151182	1					
ANR	1151218	Argument	env		1151182	0					
ANR	1151219	Identifier	env		1151182	0					
ANR	1151220	Argument	msg		1151182	1					
ANR	1151221	Identifier	msg		1151182	0					
ANR	1151222	ExpressionStatement	( * env ) -> ExceptionClear ( env )	463:1:14675:14702	1151182	4	True				
ANR	1151223	CallExpression	( * env ) -> ExceptionClear ( env )		1151182	0					
ANR	1151224	Callee	( * env ) -> ExceptionClear		1151182	0					
ANR	1151225	PtrMemberAccess	( * env ) -> ExceptionClear		1151182	0					
ANR	1151226	UnaryOperationExpression	* env		1151182	0					
ANR	1151227	UnaryOperator	*		1151182	0					
ANR	1151228	Identifier	env		1151182	1					
ANR	1151229	Identifier	ExceptionClear		1151182	1					
ANR	1151230	ArgumentList	env		1151182	1					
ANR	1151231	Argument	env		1151182	0					
ANR	1151232	Identifier	env		1151182	0					
ANR	1151233	ExpressionStatement	"( * env ) -> CallVoidMethod ( env , * ( vars -> jobj ) , vars -> message_mid , jbuffer )"	464:1:14706:14776	1151182	5	True				
ANR	1151234	CallExpression	"( * env ) -> CallVoidMethod ( env , * ( vars -> jobj ) , vars -> message_mid , jbuffer )"		1151182	0					
ANR	1151235	Callee	( * env ) -> CallVoidMethod		1151182	0					
ANR	1151236	PtrMemberAccess	( * env ) -> CallVoidMethod		1151182	0					
ANR	1151237	UnaryOperationExpression	* env		1151182	0					
ANR	1151238	UnaryOperator	*		1151182	0					
ANR	1151239	Identifier	env		1151182	1					
ANR	1151240	Identifier	CallVoidMethod		1151182	1					
ANR	1151241	ArgumentList	env		1151182	1					
ANR	1151242	Argument	env		1151182	0					
ANR	1151243	Identifier	env		1151182	0					
ANR	1151244	Argument	* ( vars -> jobj )		1151182	1					
ANR	1151245	UnaryOperationExpression	* ( vars -> jobj )		1151182	0					
ANR	1151246	UnaryOperator	*		1151182	0					
ANR	1151247	PtrMemberAccess	vars -> jobj		1151182	1					
ANR	1151248	Identifier	vars		1151182	0					
ANR	1151249	Identifier	jobj		1151182	1					
ANR	1151250	Argument	vars -> message_mid		1151182	2					
ANR	1151251	PtrMemberAccess	vars -> message_mid		1151182	0					
ANR	1151252	Identifier	vars		1151182	0					
ANR	1151253	Identifier	message_mid		1151182	1					
ANR	1151254	Argument	jbuffer		1151182	3					
ANR	1151255	Identifier	jbuffer		1151182	0					
ANR	1151256	IfStatement	if ( ( * env ) -> ExceptionOccurred ( env ) )		1151182	6					
ANR	1151257	Condition	( * env ) -> ExceptionOccurred ( env )	466:5:14787:14816	1151182	0	True				
ANR	1151258	CallExpression	( * env ) -> ExceptionOccurred ( env )		1151182	0					
ANR	1151259	Callee	( * env ) -> ExceptionOccurred		1151182	0					
ANR	1151260	PtrMemberAccess	( * env ) -> ExceptionOccurred		1151182	0					
ANR	1151261	UnaryOperationExpression	* env		1151182	0					
ANR	1151262	UnaryOperator	*		1151182	0					
ANR	1151263	Identifier	env		1151182	1					
ANR	1151264	Identifier	ExceptionOccurred		1151182	1					
ANR	1151265	ArgumentList	env		1151182	1					
ANR	1151266	Argument	env		1151182	0					
ANR	1151267	Identifier	env		1151182	0					
ANR	1151268	CompoundStatement		10:37:307:307	1151182	1					
ANR	1151269	ExpressionStatement	"fprintf ( stderr , ""C: Exception during call back method\\n"" )"	467:2:14824:14880	1151182	0	True				
ANR	1151270	CallExpression	"fprintf ( stderr , ""C: Exception during call back method\\n"" )"		1151182	0					
ANR	1151271	Callee	fprintf		1151182	0					
ANR	1151272	Identifier	fprintf		1151182	0					
ANR	1151273	ArgumentList	stderr		1151182	1					
ANR	1151274	Argument	stderr		1151182	0					
ANR	1151275	Identifier	stderr		1151182	0					
ANR	1151276	Argument	"""C: Exception during call back method\\n"""		1151182	1					
ANR	1151277	PrimaryExpression	"""C: Exception during call back method\\n"""		1151182	0					
ANR	1151278	ExpressionStatement	( * env ) -> ExceptionDescribe ( env )	468:2:14885:14915	1151182	1	True				
ANR	1151279	CallExpression	( * env ) -> ExceptionDescribe ( env )		1151182	0					
ANR	1151280	Callee	( * env ) -> ExceptionDescribe		1151182	0					
ANR	1151281	PtrMemberAccess	( * env ) -> ExceptionDescribe		1151182	0					
ANR	1151282	UnaryOperationExpression	* env		1151182	0					
ANR	1151283	UnaryOperator	*		1151182	0					
ANR	1151284	Identifier	env		1151182	1					
ANR	1151285	Identifier	ExceptionDescribe		1151182	1					
ANR	1151286	ArgumentList	env		1151182	1					
ANR	1151287	Argument	env		1151182	0					
ANR	1151288	Identifier	env		1151182	0					
ANR	1151289	ExpressionStatement	( * env ) -> ExceptionClear ( env )	469:2:14920:14947	1151182	2	True				
ANR	1151290	CallExpression	( * env ) -> ExceptionClear ( env )		1151182	0					
ANR	1151291	Callee	( * env ) -> ExceptionClear		1151182	0					
ANR	1151292	PtrMemberAccess	( * env ) -> ExceptionClear		1151182	0					
ANR	1151293	UnaryOperationExpression	* env		1151182	0					
ANR	1151294	UnaryOperator	*		1151182	0					
ANR	1151295	Identifier	env		1151182	1					
ANR	1151296	Identifier	ExceptionClear		1151182	1					
ANR	1151297	ArgumentList	env		1151182	1					
ANR	1151298	Argument	env		1151182	0					
ANR	1151299	Identifier	env		1151182	0					
ANR	1151300	ExpressionStatement	"( * env ) -> DeleteLocalRef ( env , jbuffer )"	471:1:14955:14991	1151182	7	True				
ANR	1151301	CallExpression	"( * env ) -> DeleteLocalRef ( env , jbuffer )"		1151182	0					
ANR	1151302	Callee	( * env ) -> DeleteLocalRef		1151182	0					
ANR	1151303	PtrMemberAccess	( * env ) -> DeleteLocalRef		1151182	0					
ANR	1151304	UnaryOperationExpression	* env		1151182	0					
ANR	1151305	UnaryOperator	*		1151182	0					
ANR	1151306	Identifier	env		1151182	1					
ANR	1151307	Identifier	DeleteLocalRef		1151182	1					
ANR	1151308	ArgumentList	env		1151182	1					
ANR	1151309	Argument	env		1151182	0					
ANR	1151310	Identifier	env		1151182	0					
ANR	1151311	Argument	jbuffer		1151182	1					
ANR	1151312	Identifier	jbuffer		1151182	0					
ANR	1151313	ReturnType	void		1151182	1					
ANR	1151314	Identifier	warning_callback		1151182	2					
ANR	1151315	ParameterList	"const char * msg , void * client_data"		1151182	3					
ANR	1151316	Parameter	const char * msg	457:22:14475:14489	1151182	0	True				
ANR	1151317	ParameterType	const char *		1151182	0					
ANR	1151318	Identifier	msg		1151182	1					
ANR	1151319	Parameter	void * client_data	457:39:14492:14508	1151182	1	True				
ANR	1151320	ParameterType	void *		1151182	0					
ANR	1151321	Identifier	client_data		1151182	1					
ANR	1151322	CFGEntryNode	ENTRY		1151182		True				
ANR	1151323	CFGExitNode	EXIT		1151182		True				
ANR	1151324	Symbol	msg		1151182						
ANR	1151325	Symbol	client_data		1151182						
ANR	1151326	Symbol	* * env		1151182						
ANR	1151327	Symbol	* vars -> jobj		1151182						
ANR	1151328	Symbol	* * vars		1151182						
ANR	1151329	Symbol	* vars		1151182						
ANR	1151330	Symbol	* env		1151182						
ANR	1151331	Symbol	env		1151182						
ANR	1151332	Symbol	stderr		1151182						
ANR	1151333	Symbol	( * env ) -> NewStringUTF		1151182						
ANR	1151334	Symbol	* ( vars -> jobj )		1151182						
ANR	1151335	Symbol	vars -> jobj		1151182						
ANR	1151336	Symbol	( * env ) -> ExceptionOccurred		1151182						
ANR	1151337	Symbol	vars -> env		1151182						
ANR	1151338	Symbol	jbuffer		1151182						
ANR	1151339	Symbol	vars -> message_mid		1151182						
ANR	1151340	Symbol	vars		1151182						
ANR	1151341	Function	info_callback	476:0:15108:15645							
ANR	1151342	FunctionDef	"info_callback (const char * msg , void * client_data)"		1151341	0					
ANR	1151343	CompoundStatement		476:55:15163:15645	1151341	0					
ANR	1151344	IdentifierDeclStatement	callback_variables_t * vars = ( callback_variables_t * ) client_data ;	477:1:15167:15231	1151341	0	True				
ANR	1151345	IdentifierDecl	* vars = ( callback_variables_t * ) client_data		1151341	0					
ANR	1151346	IdentifierDeclType	callback_variables_t *		1151341	0					
ANR	1151347	Identifier	vars		1151341	1					
ANR	1151348	AssignmentExpression	* vars = ( callback_variables_t * ) client_data		1151341	2		=			
ANR	1151349	Identifier	vars		1151341	0					
ANR	1151350	CastExpression	( callback_variables_t * ) client_data		1151341	1					
ANR	1151351	CastTarget	callback_variables_t *		1151341	0					
ANR	1151352	Identifier	client_data		1151341	1					
ANR	1151353	IdentifierDeclStatement	JNIEnv * env = vars -> env ;	478:1:15235:15258	1151341	1	True				
ANR	1151354	IdentifierDecl	* env = vars -> env		1151341	0					
ANR	1151355	IdentifierDeclType	JNIEnv *		1151341	0					
ANR	1151356	Identifier	env		1151341	1					
ANR	1151357	AssignmentExpression	* env = vars -> env		1151341	2		=			
ANR	1151358	Identifier	env		1151341	0					
ANR	1151359	PtrMemberAccess	vars -> env		1151341	1					
ANR	1151360	Identifier	vars		1151341	0					
ANR	1151361	Identifier	env		1151341	1					
ANR	1151362	IdentifierDeclStatement	jstring jbuffer ;	479:1:15262:15277	1151341	2	True				
ANR	1151363	IdentifierDecl	jbuffer		1151341	0					
ANR	1151364	IdentifierDeclType	jstring		1151341	0					
ANR	1151365	Identifier	jbuffer		1151341	1					
ANR	1151366	ExpressionStatement	"jbuffer = ( * env ) -> NewStringUTF ( env , msg )"	481:1:15283:15323	1151341	3	True				
ANR	1151367	AssignmentExpression	"jbuffer = ( * env ) -> NewStringUTF ( env , msg )"		1151341	0		=			
ANR	1151368	Identifier	jbuffer		1151341	0					
ANR	1151369	CallExpression	"( * env ) -> NewStringUTF ( env , msg )"		1151341	1					
ANR	1151370	Callee	( * env ) -> NewStringUTF		1151341	0					
ANR	1151371	PtrMemberAccess	( * env ) -> NewStringUTF		1151341	0					
ANR	1151372	UnaryOperationExpression	* env		1151341	0					
ANR	1151373	UnaryOperator	*		1151341	0					
ANR	1151374	Identifier	env		1151341	1					
ANR	1151375	Identifier	NewStringUTF		1151341	1					
ANR	1151376	ArgumentList	env		1151341	1					
ANR	1151377	Argument	env		1151341	0					
ANR	1151378	Identifier	env		1151341	0					
ANR	1151379	Argument	msg		1151341	1					
ANR	1151380	Identifier	msg		1151341	0					
ANR	1151381	ExpressionStatement	( * env ) -> ExceptionClear ( env )	482:1:15327:15354	1151341	4	True				
ANR	1151382	CallExpression	( * env ) -> ExceptionClear ( env )		1151341	0					
ANR	1151383	Callee	( * env ) -> ExceptionClear		1151341	0					
ANR	1151384	PtrMemberAccess	( * env ) -> ExceptionClear		1151341	0					
ANR	1151385	UnaryOperationExpression	* env		1151341	0					
ANR	1151386	UnaryOperator	*		1151341	0					
ANR	1151387	Identifier	env		1151341	1					
ANR	1151388	Identifier	ExceptionClear		1151341	1					
ANR	1151389	ArgumentList	env		1151341	1					
ANR	1151390	Argument	env		1151341	0					
ANR	1151391	Identifier	env		1151341	0					
ANR	1151392	ExpressionStatement	"( * env ) -> CallVoidMethod ( env , * ( vars -> jobj ) , vars -> message_mid , jbuffer )"	483:1:15358:15428	1151341	5	True				
ANR	1151393	CallExpression	"( * env ) -> CallVoidMethod ( env , * ( vars -> jobj ) , vars -> message_mid , jbuffer )"		1151341	0					
ANR	1151394	Callee	( * env ) -> CallVoidMethod		1151341	0					
ANR	1151395	PtrMemberAccess	( * env ) -> CallVoidMethod		1151341	0					
ANR	1151396	UnaryOperationExpression	* env		1151341	0					
ANR	1151397	UnaryOperator	*		1151341	0					
ANR	1151398	Identifier	env		1151341	1					
ANR	1151399	Identifier	CallVoidMethod		1151341	1					
ANR	1151400	ArgumentList	env		1151341	1					
ANR	1151401	Argument	env		1151341	0					
ANR	1151402	Identifier	env		1151341	0					
ANR	1151403	Argument	* ( vars -> jobj )		1151341	1					
ANR	1151404	UnaryOperationExpression	* ( vars -> jobj )		1151341	0					
ANR	1151405	UnaryOperator	*		1151341	0					
ANR	1151406	PtrMemberAccess	vars -> jobj		1151341	1					
ANR	1151407	Identifier	vars		1151341	0					
ANR	1151408	Identifier	jobj		1151341	1					
ANR	1151409	Argument	vars -> message_mid		1151341	2					
ANR	1151410	PtrMemberAccess	vars -> message_mid		1151341	0					
ANR	1151411	Identifier	vars		1151341	0					
ANR	1151412	Identifier	message_mid		1151341	1					
ANR	1151413	Argument	jbuffer		1151341	3					
ANR	1151414	Identifier	jbuffer		1151341	0					
ANR	1151415	IfStatement	if ( ( * env ) -> ExceptionOccurred ( env ) )		1151341	6					
ANR	1151416	Condition	( * env ) -> ExceptionOccurred ( env )	485:5:15438:15467	1151341	0	True				
ANR	1151417	CallExpression	( * env ) -> ExceptionOccurred ( env )		1151341	0					
ANR	1151418	Callee	( * env ) -> ExceptionOccurred		1151341	0					
ANR	1151419	PtrMemberAccess	( * env ) -> ExceptionOccurred		1151341	0					
ANR	1151420	UnaryOperationExpression	* env		1151341	0					
ANR	1151421	UnaryOperator	*		1151341	0					
ANR	1151422	Identifier	env		1151341	1					
ANR	1151423	Identifier	ExceptionOccurred		1151341	1					
ANR	1151424	ArgumentList	env		1151341	1					
ANR	1151425	Argument	env		1151341	0					
ANR	1151426	Identifier	env		1151341	0					
ANR	1151427	CompoundStatement		10:37:306:306	1151341	1					
ANR	1151428	ExpressionStatement	"fprintf ( stderr , ""C: Exception during call back method\\n"" )"	486:2:15475:15531	1151341	0	True				
ANR	1151429	CallExpression	"fprintf ( stderr , ""C: Exception during call back method\\n"" )"		1151341	0					
ANR	1151430	Callee	fprintf		1151341	0					
ANR	1151431	Identifier	fprintf		1151341	0					
ANR	1151432	ArgumentList	stderr		1151341	1					
ANR	1151433	Argument	stderr		1151341	0					
ANR	1151434	Identifier	stderr		1151341	0					
ANR	1151435	Argument	"""C: Exception during call back method\\n"""		1151341	1					
ANR	1151436	PrimaryExpression	"""C: Exception during call back method\\n"""		1151341	0					
ANR	1151437	ExpressionStatement	( * env ) -> ExceptionDescribe ( env )	487:2:15536:15566	1151341	1	True				
ANR	1151438	CallExpression	( * env ) -> ExceptionDescribe ( env )		1151341	0					
ANR	1151439	Callee	( * env ) -> ExceptionDescribe		1151341	0					
ANR	1151440	PtrMemberAccess	( * env ) -> ExceptionDescribe		1151341	0					
ANR	1151441	UnaryOperationExpression	* env		1151341	0					
ANR	1151442	UnaryOperator	*		1151341	0					
ANR	1151443	Identifier	env		1151341	1					
ANR	1151444	Identifier	ExceptionDescribe		1151341	1					
ANR	1151445	ArgumentList	env		1151341	1					
ANR	1151446	Argument	env		1151341	0					
ANR	1151447	Identifier	env		1151341	0					
ANR	1151448	ExpressionStatement	( * env ) -> ExceptionClear ( env )	488:2:15571:15598	1151341	2	True				
ANR	1151449	CallExpression	( * env ) -> ExceptionClear ( env )		1151341	0					
ANR	1151450	Callee	( * env ) -> ExceptionClear		1151341	0					
ANR	1151451	PtrMemberAccess	( * env ) -> ExceptionClear		1151341	0					
ANR	1151452	UnaryOperationExpression	* env		1151341	0					
ANR	1151453	UnaryOperator	*		1151341	0					
ANR	1151454	Identifier	env		1151341	1					
ANR	1151455	Identifier	ExceptionClear		1151341	1					
ANR	1151456	ArgumentList	env		1151341	1					
ANR	1151457	Argument	env		1151341	0					
ANR	1151458	Identifier	env		1151341	0					
ANR	1151459	ExpressionStatement	"( * env ) -> DeleteLocalRef ( env , jbuffer )"	490:1:15606:15642	1151341	7	True				
ANR	1151460	CallExpression	"( * env ) -> DeleteLocalRef ( env , jbuffer )"		1151341	0					
ANR	1151461	Callee	( * env ) -> DeleteLocalRef		1151341	0					
ANR	1151462	PtrMemberAccess	( * env ) -> DeleteLocalRef		1151341	0					
ANR	1151463	UnaryOperationExpression	* env		1151341	0					
ANR	1151464	UnaryOperator	*		1151341	0					
ANR	1151465	Identifier	env		1151341	1					
ANR	1151466	Identifier	DeleteLocalRef		1151341	1					
ANR	1151467	ArgumentList	env		1151341	1					
ANR	1151468	Argument	env		1151341	0					
ANR	1151469	Identifier	env		1151341	0					
ANR	1151470	Argument	jbuffer		1151341	1					
ANR	1151471	Identifier	jbuffer		1151341	0					
ANR	1151472	ReturnType	void		1151341	1					
ANR	1151473	Identifier	info_callback		1151341	2					
ANR	1151474	ParameterList	"const char * msg , void * client_data"		1151341	3					
ANR	1151475	Parameter	const char * msg	476:19:15127:15141	1151341	0	True				
ANR	1151476	ParameterType	const char *		1151341	0					
ANR	1151477	Identifier	msg		1151341	1					
ANR	1151478	Parameter	void * client_data	476:36:15144:15160	1151341	1	True				
ANR	1151479	ParameterType	void *		1151341	0					
ANR	1151480	Identifier	client_data		1151341	1					
ANR	1151481	CFGEntryNode	ENTRY		1151341		True				
ANR	1151482	CFGExitNode	EXIT		1151341		True				
ANR	1151483	Symbol	msg		1151341						
ANR	1151484	Symbol	client_data		1151341						
ANR	1151485	Symbol	* * env		1151341						
ANR	1151486	Symbol	* vars -> jobj		1151341						
ANR	1151487	Symbol	* * vars		1151341						
ANR	1151488	Symbol	* vars		1151341						
ANR	1151489	Symbol	* env		1151341						
ANR	1151490	Symbol	env		1151341						
ANR	1151491	Symbol	stderr		1151341						
ANR	1151492	Symbol	( * env ) -> NewStringUTF		1151341						
ANR	1151493	Symbol	* ( vars -> jobj )		1151341						
ANR	1151494	Symbol	vars -> jobj		1151341						
ANR	1151495	Symbol	( * env ) -> ExceptionOccurred		1151341						
ANR	1151496	Symbol	vars -> env		1151341						
ANR	1151497	Symbol	jbuffer		1151341						
ANR	1151498	Symbol	vars -> message_mid		1151341						
ANR	1151499	Symbol	vars		1151341						
ANR	1151500	Function	Java_org_openJpeg_OpenJPEGJavaDecoder_internalDecodeJ2KtoImage	496:0:15812:28581							
ANR	1151501	FunctionDef	"Java_org_openJpeg_OpenJPEGJavaDecoder_internalDecodeJ2KtoImage (JNIEnv * env , jobject obj , jobjectArray javaParameters)"		1151500	0					
ANR	1151502	CompoundStatement		496:141:15953:28581	1151500	0					
ANR	1151503	IdentifierDeclStatement	int argc ;	497:1:15957:15965	1151500	0	True				
ANR	1151504	IdentifierDecl	argc		1151500	0					
ANR	1151505	IdentifierDeclType	int		1151500	0					
ANR	1151506	Identifier	argc		1151500	1					
ANR	1151507	IdentifierDeclStatement	char * * argv ;	498:1:16083:16094	1151500	1	True				
ANR	1151508	IdentifierDecl	* * argv		1151500	0					
ANR	1151509	IdentifierDeclType	char * *		1151500	0					
ANR	1151510	Identifier	argv		1151500	1					
ANR	1151511	IdentifierDeclStatement	opj_dparameters_t parameters ;	499:1:16172:16200	1151500	2	True				
ANR	1151512	IdentifierDecl	parameters		1151500	0					
ANR	1151513	IdentifierDeclType	opj_dparameters_t		1151500	0					
ANR	1151514	Identifier	parameters		1151500	1					
ANR	1151515	IdentifierDeclStatement	img_fol_t img_fol ;	500:1:16235:16252	1151500	3	True				
ANR	1151516	IdentifierDecl	img_fol		1151500	0					
ANR	1151517	IdentifierDeclType	img_fol_t		1151500	0					
ANR	1151518	Identifier	img_fol		1151500	1					
ANR	1151519	IdentifierDeclStatement	opj_event_mgr_t event_mgr ;	501:1:16256:16281	1151500	4	True				
ANR	1151520	IdentifierDecl	event_mgr		1151500	0					
ANR	1151521	IdentifierDeclType	opj_event_mgr_t		1151500	0					
ANR	1151522	Identifier	event_mgr		1151500	1					
ANR	1151523	IdentifierDeclStatement	opj_image_t * image = NULL ;	502:1:16306:16331	1151500	5	True				
ANR	1151524	IdentifierDecl	* image = NULL		1151500	0					
ANR	1151525	IdentifierDeclType	opj_image_t *		1151500	0					
ANR	1151526	Identifier	image		1151500	1					
ANR	1151527	AssignmentExpression	* image = NULL		1151500	2		=			
ANR	1151528	Identifier	NULL		1151500	0					
ANR	1151529	Identifier	NULL		1151500	1					
ANR	1151530	IdentifierDeclStatement	FILE * fsrc = NULL ;	503:1:16335:16352	1151500	6	True				
ANR	1151531	IdentifierDecl	* fsrc = NULL		1151500	0					
ANR	1151532	IdentifierDeclType	FILE *		1151500	0					
ANR	1151533	Identifier	fsrc		1151500	1					
ANR	1151534	AssignmentExpression	* fsrc = NULL		1151500	2		=			
ANR	1151535	Identifier	NULL		1151500	0					
ANR	1151536	Identifier	NULL		1151500	1					
ANR	1151537	IdentifierDeclStatement	unsigned char * src = NULL ;	504:1:16356:16381	1151500	7	True				
ANR	1151538	IdentifierDecl	* src = NULL		1151500	0					
ANR	1151539	IdentifierDeclType	unsigned char *		1151500	0					
ANR	1151540	Identifier	src		1151500	1					
ANR	1151541	AssignmentExpression	* src = NULL		1151500	2		=			
ANR	1151542	Identifier	NULL		1151500	0					
ANR	1151543	Identifier	NULL		1151500	1					
ANR	1151544	IdentifierDeclStatement	int file_length ;	505:1:16385:16400	1151500	8	True				
ANR	1151545	IdentifierDecl	file_length		1151500	0					
ANR	1151546	IdentifierDeclType	int		1151500	0					
ANR	1151547	Identifier	file_length		1151500	1					
ANR	1151548	IdentifierDeclStatement	int num_images ;	506:1:16404:16418	1151500	9	True				
ANR	1151549	IdentifierDecl	num_images		1151500	0					
ANR	1151550	IdentifierDeclType	int		1151500	0					
ANR	1151551	Identifier	num_images		1151500	1					
ANR	1151552	IdentifierDeclStatement	"int i , j , imageno ;"	507:1:16422:16437	1151500	10	True				
ANR	1151553	IdentifierDecl	i		1151500	0					
ANR	1151554	IdentifierDeclType	int		1151500	0					
ANR	1151555	Identifier	i		1151500	1					
ANR	1151556	IdentifierDecl	j		1151500	1					
ANR	1151557	IdentifierDeclType	int		1151500	0					
ANR	1151558	Identifier	j		1151500	1					
ANR	1151559	IdentifierDecl	imageno		1151500	2					
ANR	1151560	IdentifierDeclType	int		1151500	0					
ANR	1151561	Identifier	imageno		1151500	1					
ANR	1151562	IdentifierDeclStatement	opj_dinfo_t * dinfo = NULL ;	508:1:16441:16466	1151500	11	True				
ANR	1151563	IdentifierDecl	* dinfo = NULL		1151500	0					
ANR	1151564	IdentifierDeclType	opj_dinfo_t *		1151500	0					
ANR	1151565	Identifier	dinfo		1151500	1					
ANR	1151566	AssignmentExpression	* dinfo = NULL		1151500	2		=			
ANR	1151567	Identifier	NULL		1151500	0					
ANR	1151568	Identifier	NULL		1151500	1					
ANR	1151569	IdentifierDeclStatement	opj_cio_t * cio = NULL ;	509:1:16501:16522	1151500	12	True				
ANR	1151570	IdentifierDecl	* cio = NULL		1151500	0					
ANR	1151571	IdentifierDeclType	opj_cio_t *		1151500	0					
ANR	1151572	Identifier	cio		1151500	1					
ANR	1151573	AssignmentExpression	* cio = NULL		1151500	2		=			
ANR	1151574	Identifier	NULL		1151500	0					
ANR	1151575	Identifier	NULL		1151500	1					
ANR	1151576	IdentifierDeclStatement	"int w , h ;"	510:1:16526:16533	1151500	13	True				
ANR	1151577	IdentifierDecl	w		1151500	0					
ANR	1151578	IdentifierDeclType	int		1151500	0					
ANR	1151579	Identifier	w		1151500	1					
ANR	1151580	IdentifierDecl	h		1151500	1					
ANR	1151581	IdentifierDeclType	int		1151500	0					
ANR	1151582	Identifier	h		1151500	1					
ANR	1151583	IdentifierDeclStatement	"long min_value , max_value ;"	511:1:16537:16562	1151500	14	True				
ANR	1151584	IdentifierDecl	min_value		1151500	0					
ANR	1151585	IdentifierDeclType	long		1151500	0					
ANR	1151586	Identifier	min_value		1151500	1					
ANR	1151587	IdentifierDecl	max_value		1151500	1					
ANR	1151588	IdentifierDeclType	long		1151500	0					
ANR	1151589	Identifier	max_value		1151500	1					
ANR	1151590	IdentifierDeclStatement	short tempS ;	512:1:16566:16577	1151500	15	True				
ANR	1151591	IdentifierDecl	tempS		1151500	0					
ANR	1151592	IdentifierDeclType	short		1151500	0					
ANR	1151593	Identifier	tempS		1151500	1					
ANR	1151594	IdentifierDeclStatement	"unsigned char tempUC , tempUC1 , tempUC2 ;"	512:14:16579:16617	1151500	16	True				
ANR	1151595	IdentifierDecl	tempUC		1151500	0					
ANR	1151596	IdentifierDeclType	unsigned char		1151500	0					
ANR	1151597	Identifier	tempUC		1151500	1					
ANR	1151598	IdentifierDecl	tempUC1		1151500	1					
ANR	1151599	IdentifierDeclType	unsigned char		1151500	0					
ANR	1151600	Identifier	tempUC1		1151500	1					
ANR	1151601	IdentifierDecl	tempUC2		1151500	2					
ANR	1151602	IdentifierDeclType	unsigned char		1151500	0					
ANR	1151603	Identifier	tempUC2		1151500	1					
ANR	1151604	IdentifierDeclStatement	jsize arraySize ;	514:1:16678:16694	1151500	17	True				
ANR	1151605	IdentifierDecl	arraySize		1151500	0					
ANR	1151606	IdentifierDeclType	jsize		1151500	0					
ANR	1151607	Identifier	arraySize		1151500	1					
ANR	1151608	IdentifierDeclStatement	jclass cls ;	515:1:16698:16709	1151500	18	True				
ANR	1151609	IdentifierDecl	cls		1151500	0					
ANR	1151610	IdentifierDeclType	jclass		1151500	0					
ANR	1151611	Identifier	cls		1151500	1					
ANR	1151612	IdentifierDeclStatement	jobject object ;	516:1:16713:16728	1151500	19	True				
ANR	1151613	IdentifierDecl	object		1151500	0					
ANR	1151614	IdentifierDeclType	jobject		1151500	0					
ANR	1151615	Identifier	object		1151500	1					
ANR	1151616	IdentifierDeclStatement	jboolean isCopy ;	517:1:16732:16747	1151500	20	True				
ANR	1151617	IdentifierDecl	isCopy		1151500	0					
ANR	1151618	IdentifierDeclType	jboolean		1151500	0					
ANR	1151619	Identifier	isCopy		1151500	1					
ANR	1151620	IdentifierDeclStatement	jfieldID fid ;	518:1:16751:16763	1151500	21	True				
ANR	1151621	IdentifierDecl	fid		1151500	0					
ANR	1151622	IdentifierDeclType	jfieldID		1151500	0					
ANR	1151623	Identifier	fid		1151500	1					
ANR	1151624	IdentifierDeclStatement	jbyteArray jba ;	519:1:16767:16781	1151500	22	True				
ANR	1151625	IdentifierDecl	jba		1151500	0					
ANR	1151626	IdentifierDeclType	jbyteArray		1151500	0					
ANR	1151627	Identifier	jba		1151500	1					
ANR	1151628	IdentifierDeclStatement	jshortArray jsa ;	520:1:16785:16800	1151500	23	True				
ANR	1151629	IdentifierDecl	jsa		1151500	0					
ANR	1151630	IdentifierDeclType	jshortArray		1151500	0					
ANR	1151631	Identifier	jsa		1151500	1					
ANR	1151632	IdentifierDeclStatement	jintArray jia ;	521:1:16804:16817	1151500	24	True				
ANR	1151633	IdentifierDecl	jia		1151500	0					
ANR	1151634	IdentifierDeclType	jintArray		1151500	0					
ANR	1151635	Identifier	jia		1151500	1					
ANR	1151636	IdentifierDeclStatement	"jbyte * jbBody , * ptrBBody ;"	522:1:16821:16846	1151500	25	True				
ANR	1151637	IdentifierDecl	* jbBody		1151500	0					
ANR	1151638	IdentifierDeclType	jbyte *		1151500	0					
ANR	1151639	Identifier	jbBody		1151500	1					
ANR	1151640	IdentifierDecl	* ptrBBody		1151500	1					
ANR	1151641	IdentifierDeclType	jbyte *		1151500	0					
ANR	1151642	Identifier	ptrBBody		1151500	1					
ANR	1151643	IdentifierDeclStatement	"jshort * jsBody , * ptrSBody ;"	523:1:16850:16876	1151500	26	True				
ANR	1151644	IdentifierDecl	* jsBody		1151500	0					
ANR	1151645	IdentifierDeclType	jshort *		1151500	0					
ANR	1151646	Identifier	jsBody		1151500	1					
ANR	1151647	IdentifierDecl	* ptrSBody		1151500	1					
ANR	1151648	IdentifierDeclType	jshort *		1151500	0					
ANR	1151649	Identifier	ptrSBody		1151500	1					
ANR	1151650	IdentifierDeclStatement	"jint * jiBody , * ptrIBody ;"	524:1:16880:16904	1151500	27	True				
ANR	1151651	IdentifierDecl	* jiBody		1151500	0					
ANR	1151652	IdentifierDeclType	jint *		1151500	0					
ANR	1151653	Identifier	jiBody		1151500	1					
ANR	1151654	IdentifierDecl	* ptrIBody		1151500	1					
ANR	1151655	IdentifierDeclType	jint *		1151500	0					
ANR	1151656	Identifier	ptrIBody		1151500	1					
ANR	1151657	IdentifierDeclStatement	callback_variables_t msgErrorCallback_vars ;	525:1:16908:16950	1151500	28	True				
ANR	1151658	IdentifierDecl	msgErrorCallback_vars		1151500	0					
ANR	1151659	IdentifierDeclType	callback_variables_t		1151500	0					
ANR	1151660	Identifier	msgErrorCallback_vars		1151500	1					
ANR	1151661	IdentifierDeclStatement	"int * ptr , * ptr1 , * ptr2 ;"	527:1:17008:17030	1151500	29	True				
ANR	1151662	IdentifierDecl	* ptr		1151500	0					
ANR	1151663	IdentifierDeclType	int *		1151500	0					
ANR	1151664	Identifier	ptr		1151500	1					
ANR	1151665	IdentifierDecl	* ptr1		1151500	1					
ANR	1151666	IdentifierDeclType	int *		1151500	0					
ANR	1151667	Identifier	ptr1		1151500	1					
ANR	1151668	IdentifierDecl	* ptr2		1151500	2					
ANR	1151669	IdentifierDeclType	int *		1151500	0					
ANR	1151670	Identifier	ptr2		1151500	1					
ANR	1151671	ExpressionStatement	"memset ( & event_mgr , 0 , sizeof ( opj_event_mgr_t ) )"	530:1:17124:17170	1151500	30	True				
ANR	1151672	CallExpression	"memset ( & event_mgr , 0 , sizeof ( opj_event_mgr_t ) )"		1151500	0					
ANR	1151673	Callee	memset		1151500	0					
ANR	1151674	Identifier	memset		1151500	0					
ANR	1151675	ArgumentList	& event_mgr		1151500	1					
ANR	1151676	Argument	& event_mgr		1151500	0					
ANR	1151677	UnaryOperationExpression	& event_mgr		1151500	0					
ANR	1151678	UnaryOperator	&		1151500	0					
ANR	1151679	Identifier	event_mgr		1151500	1					
ANR	1151680	Argument	0		1151500	1					
ANR	1151681	PrimaryExpression	0		1151500	0					
ANR	1151682	Argument	sizeof ( opj_event_mgr_t )		1151500	2					
ANR	1151683	SizeofExpression	sizeof ( opj_event_mgr_t )		1151500	0					
ANR	1151684	Sizeof	sizeof		1151500	0					
ANR	1151685	SizeofOperand	opj_event_mgr_t		1151500	1					
ANR	1151686	ExpressionStatement	event_mgr . error_handler = error_callback	531:1:17175:17215	1151500	31	True				
ANR	1151687	AssignmentExpression	event_mgr . error_handler = error_callback		1151500	0		=			
ANR	1151688	MemberAccess	event_mgr . error_handler		1151500	0					
ANR	1151689	Identifier	event_mgr		1151500	0					
ANR	1151690	Identifier	error_handler		1151500	1					
ANR	1151691	Identifier	error_callback		1151500	1					
ANR	1151692	ExpressionStatement	event_mgr . warning_handler = warning_callback	532:1:17219:17263	1151500	32	True				
ANR	1151693	AssignmentExpression	event_mgr . warning_handler = warning_callback		1151500	0		=			
ANR	1151694	MemberAccess	event_mgr . warning_handler		1151500	0					
ANR	1151695	Identifier	event_mgr		1151500	0					
ANR	1151696	Identifier	warning_handler		1151500	1					
ANR	1151697	Identifier	warning_callback		1151500	1					
ANR	1151698	ExpressionStatement	event_mgr . info_handler = info_callback	533:1:17267:17305	1151500	33	True				
ANR	1151699	AssignmentExpression	event_mgr . info_handler = info_callback		1151500	0		=			
ANR	1151700	MemberAccess	event_mgr . info_handler		1151500	0					
ANR	1151701	Identifier	event_mgr		1151500	0					
ANR	1151702	Identifier	info_handler		1151500	1					
ANR	1151703	Identifier	info_callback		1151500	1					
ANR	1151704	ExpressionStatement	"cls = ( * env ) -> GetObjectClass ( env , obj )"	536:1:17353:17391	1151500	34	True				
ANR	1151705	AssignmentExpression	"cls = ( * env ) -> GetObjectClass ( env , obj )"		1151500	0		=			
ANR	1151706	Identifier	cls		1151500	0					
ANR	1151707	CallExpression	"( * env ) -> GetObjectClass ( env , obj )"		1151500	1					
ANR	1151708	Callee	( * env ) -> GetObjectClass		1151500	0					
ANR	1151709	PtrMemberAccess	( * env ) -> GetObjectClass		1151500	0					
ANR	1151710	UnaryOperationExpression	* env		1151500	0					
ANR	1151711	UnaryOperator	*		1151500	0					
ANR	1151712	Identifier	env		1151500	1					
ANR	1151713	Identifier	GetObjectClass		1151500	1					
ANR	1151714	ArgumentList	env		1151500	1					
ANR	1151715	Argument	env		1151500	0					
ANR	1151716	Identifier	env		1151500	0					
ANR	1151717	Argument	obj		1151500	1					
ANR	1151718	Identifier	obj		1151500	0					
ANR	1151719	ExpressionStatement	msgErrorCallback_vars . env = env	539:1:17482:17513	1151500	35	True				
ANR	1151720	AssignmentExpression	msgErrorCallback_vars . env = env		1151500	0		=			
ANR	1151721	MemberAccess	msgErrorCallback_vars . env		1151500	0					
ANR	1151722	Identifier	msgErrorCallback_vars		1151500	0					
ANR	1151723	Identifier	env		1151500	1					
ANR	1151724	Identifier	env		1151500	1					
ANR	1151725	ExpressionStatement	msgErrorCallback_vars . jobj = & obj	540:1:17517:17550	1151500	36	True				
ANR	1151726	AssignmentExpression	msgErrorCallback_vars . jobj = & obj		1151500	0		=			
ANR	1151727	MemberAccess	msgErrorCallback_vars . jobj		1151500	0					
ANR	1151728	Identifier	msgErrorCallback_vars		1151500	0					
ANR	1151729	Identifier	jobj		1151500	1					
ANR	1151730	UnaryOperationExpression	& obj		1151500	1					
ANR	1151731	UnaryOperator	&		1151500	0					
ANR	1151732	Identifier	obj		1151500	1					
ANR	1151733	ExpressionStatement	"msgErrorCallback_vars . message_mid = ( * env ) -> GetMethodID ( env , cls , ""logMessage"" , ""(Ljava/lang/String;)V"" )"	541:1:17554:17658	1151500	37	True				
ANR	1151734	AssignmentExpression	"msgErrorCallback_vars . message_mid = ( * env ) -> GetMethodID ( env , cls , ""logMessage"" , ""(Ljava/lang/String;)V"" )"		1151500	0		=			
ANR	1151735	MemberAccess	msgErrorCallback_vars . message_mid		1151500	0					
ANR	1151736	Identifier	msgErrorCallback_vars		1151500	0					
ANR	1151737	Identifier	message_mid		1151500	1					
ANR	1151738	CallExpression	"( * env ) -> GetMethodID ( env , cls , ""logMessage"" , ""(Ljava/lang/String;)V"" )"		1151500	1					
ANR	1151739	Callee	( * env ) -> GetMethodID		1151500	0					
ANR	1151740	PtrMemberAccess	( * env ) -> GetMethodID		1151500	0					
ANR	1151741	UnaryOperationExpression	* env		1151500	0					
ANR	1151742	UnaryOperator	*		1151500	0					
ANR	1151743	Identifier	env		1151500	1					
ANR	1151744	Identifier	GetMethodID		1151500	1					
ANR	1151745	ArgumentList	env		1151500	1					
ANR	1151746	Argument	env		1151500	0					
ANR	1151747	Identifier	env		1151500	0					
ANR	1151748	Argument	cls		1151500	1					
ANR	1151749	Identifier	cls		1151500	0					
ANR	1151750	Argument	"""logMessage"""		1151500	2					
ANR	1151751	PrimaryExpression	"""logMessage"""		1151500	0					
ANR	1151752	Argument	"""(Ljava/lang/String;)V"""		1151500	3					
ANR	1151753	PrimaryExpression	"""(Ljava/lang/String;)V"""		1151500	0					
ANR	1151754	ExpressionStatement	"msgErrorCallback_vars . error_mid = ( * env ) -> GetMethodID ( env , cls , ""logError"" , ""(Ljava/lang/String;)V"" )"	542:1:17662:17762	1151500	38	True				
ANR	1151755	AssignmentExpression	"msgErrorCallback_vars . error_mid = ( * env ) -> GetMethodID ( env , cls , ""logError"" , ""(Ljava/lang/String;)V"" )"		1151500	0		=			
ANR	1151756	MemberAccess	msgErrorCallback_vars . error_mid		1151500	0					
ANR	1151757	Identifier	msgErrorCallback_vars		1151500	0					
ANR	1151758	Identifier	error_mid		1151500	1					
ANR	1151759	CallExpression	"( * env ) -> GetMethodID ( env , cls , ""logError"" , ""(Ljava/lang/String;)V"" )"		1151500	1					
ANR	1151760	Callee	( * env ) -> GetMethodID		1151500	0					
ANR	1151761	PtrMemberAccess	( * env ) -> GetMethodID		1151500	0					
ANR	1151762	UnaryOperationExpression	* env		1151500	0					
ANR	1151763	UnaryOperator	*		1151500	0					
ANR	1151764	Identifier	env		1151500	1					
ANR	1151765	Identifier	GetMethodID		1151500	1					
ANR	1151766	ArgumentList	env		1151500	1					
ANR	1151767	Argument	env		1151500	0					
ANR	1151768	Identifier	env		1151500	0					
ANR	1151769	Argument	cls		1151500	1					
ANR	1151770	Identifier	cls		1151500	0					
ANR	1151771	Argument	"""logError"""		1151500	2					
ANR	1151772	PrimaryExpression	"""logError"""		1151500	0					
ANR	1151773	Argument	"""(Ljava/lang/String;)V"""		1151500	3					
ANR	1151774	PrimaryExpression	"""(Ljava/lang/String;)V"""		1151500	0					
ANR	1151775	ExpressionStatement	"arraySize = ( * env ) -> GetArrayLength ( env , javaParameters )"	545:1:17885:17940	1151500	39	True				
ANR	1151776	AssignmentExpression	"arraySize = ( * env ) -> GetArrayLength ( env , javaParameters )"		1151500	0		=			
ANR	1151777	Identifier	arraySize		1151500	0					
ANR	1151778	CallExpression	"( * env ) -> GetArrayLength ( env , javaParameters )"		1151500	1					
ANR	1151779	Callee	( * env ) -> GetArrayLength		1151500	0					
ANR	1151780	PtrMemberAccess	( * env ) -> GetArrayLength		1151500	0					
ANR	1151781	UnaryOperationExpression	* env		1151500	0					
ANR	1151782	UnaryOperator	*		1151500	0					
ANR	1151783	Identifier	env		1151500	1					
ANR	1151784	Identifier	GetArrayLength		1151500	1					
ANR	1151785	ArgumentList	env		1151500	1					
ANR	1151786	Argument	env		1151500	0					
ANR	1151787	Identifier	env		1151500	0					
ANR	1151788	Argument	javaParameters		1151500	1					
ANR	1151789	Identifier	javaParameters		1151500	0					
ANR	1151790	ExpressionStatement	argc = ( int ) arraySize + 1	546:1:17944:17969	1151500	40	True				
ANR	1151791	AssignmentExpression	argc = ( int ) arraySize + 1		1151500	0		=			
ANR	1151792	Identifier	argc		1151500	0					
ANR	1151793	AdditiveExpression	( int ) arraySize + 1		1151500	1		+			
ANR	1151794	CastExpression	( int ) arraySize		1151500	0					
ANR	1151795	CastTarget	int		1151500	0					
ANR	1151796	Identifier	arraySize		1151500	1					
ANR	1151797	PrimaryExpression	1		1151500	1					
ANR	1151798	ExpressionStatement	argv = opj_malloc ( argc * sizeof ( char * ) )	547:1:17973:18010	1151500	41	True				
ANR	1151799	AssignmentExpression	argv = opj_malloc ( argc * sizeof ( char * ) )		1151500	0		=			
ANR	1151800	Identifier	argv		1151500	0					
ANR	1151801	CallExpression	opj_malloc ( argc * sizeof ( char * ) )		1151500	1					
ANR	1151802	Callee	opj_malloc		1151500	0					
ANR	1151803	Identifier	opj_malloc		1151500	0					
ANR	1151804	ArgumentList	argc * sizeof ( char * )		1151500	1					
ANR	1151805	Argument	argc * sizeof ( char * )		1151500	0					
ANR	1151806	MultiplicativeExpression	argc * sizeof ( char * )		1151500	0		*			
ANR	1151807	Identifier	argc		1151500	0					
ANR	1151808	SizeofExpression	sizeof ( char * )		1151500	1					
ANR	1151809	Sizeof	sizeof		1151500	0					
ANR	1151810	SizeofOperand	char *		1151500	1					
ANR	1151811	ExpressionStatement	"argv [ 0 ] = ""ProgramName.exe"""	548:1:18014:18041	1151500	42	True				
ANR	1151812	AssignmentExpression	"argv [ 0 ] = ""ProgramName.exe"""		1151500	0		=			
ANR	1151813	ArrayIndexing	argv [ 0 ]		1151500	0					
ANR	1151814	Identifier	argv		1151500	0					
ANR	1151815	PrimaryExpression	0		1151500	1					
ANR	1151816	PrimaryExpression	"""ProgramName.exe"""		1151500	1					
ANR	1151817	ExpressionStatement	j = 0	549:1:18076:18079	1151500	43	True				
ANR	1151818	AssignmentExpression	j = 0		1151500	0		=			
ANR	1151819	Identifier	j		1151500	0					
ANR	1151820	PrimaryExpression	0		1151500	1					
ANR	1151821	ForStatement	for ( i = 1 ; i < argc ; i ++ )		1151500	44					
ANR	1151822	ForInit	i = 1 ;	550:6:18088:18091	1151500	0	True				
ANR	1151823	AssignmentExpression	i = 1		1151500	0		=			
ANR	1151824	Identifier	i		1151500	0					
ANR	1151825	PrimaryExpression	1		1151500	1					
ANR	1151826	Condition	i < argc	550:11:18093:18098	1151500	1	True				
ANR	1151827	RelationalExpression	i < argc		1151500	0		<			
ANR	1151828	Identifier	i		1151500	0					
ANR	1151829	Identifier	argc		1151500	1					
ANR	1151830	PostIncDecOperationExpression	i ++	550:19:18101:18103	1151500	2	True				
ANR	1151831	Identifier	i		1151500	0					
ANR	1151832	IncDec	++		1151500	1					
ANR	1151833	CompoundStatement		55:24:2152:2152	1151500	3					
ANR	1151834	ExpressionStatement	"object = ( * env ) -> GetObjectArrayElement ( env , javaParameters , i - 1 )"	551:2:18111:18175	1151500	0	True				
ANR	1151835	AssignmentExpression	"object = ( * env ) -> GetObjectArrayElement ( env , javaParameters , i - 1 )"		1151500	0		=			
ANR	1151836	Identifier	object		1151500	0					
ANR	1151837	CallExpression	"( * env ) -> GetObjectArrayElement ( env , javaParameters , i - 1 )"		1151500	1					
ANR	1151838	Callee	( * env ) -> GetObjectArrayElement		1151500	0					
ANR	1151839	PtrMemberAccess	( * env ) -> GetObjectArrayElement		1151500	0					
ANR	1151840	UnaryOperationExpression	* env		1151500	0					
ANR	1151841	UnaryOperator	*		1151500	0					
ANR	1151842	Identifier	env		1151500	1					
ANR	1151843	Identifier	GetObjectArrayElement		1151500	1					
ANR	1151844	ArgumentList	env		1151500	1					
ANR	1151845	Argument	env		1151500	0					
ANR	1151846	Identifier	env		1151500	0					
ANR	1151847	Argument	javaParameters		1151500	1					
ANR	1151848	Identifier	javaParameters		1151500	0					
ANR	1151849	Argument	i - 1		1151500	2					
ANR	1151850	AdditiveExpression	i - 1		1151500	0		-			
ANR	1151851	Identifier	i		1151500	0					
ANR	1151852	PrimaryExpression	1		1151500	1					
ANR	1151853	ExpressionStatement	"argv [ i ] = ( char * ) ( * env ) -> GetStringUTFChars ( env , object , & isCopy )"	552:2:18180:18244	1151500	1	True				
ANR	1151854	AssignmentExpression	"argv [ i ] = ( char * ) ( * env ) -> GetStringUTFChars ( env , object , & isCopy )"		1151500	0		=			
ANR	1151855	ArrayIndexing	argv [ i ]		1151500	0					
ANR	1151856	Identifier	argv		1151500	0					
ANR	1151857	Identifier	i		1151500	1					
ANR	1151858	CastExpression	"( char * ) ( * env ) -> GetStringUTFChars ( env , object , & isCopy )"		1151500	1					
ANR	1151859	CastTarget	char *		1151500	0					
ANR	1151860	CallExpression	"( * env ) -> GetStringUTFChars ( env , object , & isCopy )"		1151500	1					
ANR	1151861	Callee	( * env ) -> GetStringUTFChars		1151500	0					
ANR	1151862	PtrMemberAccess	( * env ) -> GetStringUTFChars		1151500	0					
ANR	1151863	UnaryOperationExpression	* env		1151500	0					
ANR	1151864	UnaryOperator	*		1151500	0					
ANR	1151865	Identifier	env		1151500	1					
ANR	1151866	Identifier	GetStringUTFChars		1151500	1					
ANR	1151867	ArgumentList	env		1151500	1					
ANR	1151868	Argument	env		1151500	0					
ANR	1151869	Identifier	env		1151500	0					
ANR	1151870	Argument	object		1151500	1					
ANR	1151871	Identifier	object		1151500	0					
ANR	1151872	Argument	& isCopy		1151500	2					
ANR	1151873	UnaryOperationExpression	& isCopy		1151500	0					
ANR	1151874	UnaryOperator	&		1151500	0					
ANR	1151875	Identifier	isCopy		1151500	1					
ANR	1151876	ExpressionStatement	opj_set_default_decoder_parameters ( & parameters )	562:1:18418:18465	1151500	45	True				
ANR	1151877	CallExpression	opj_set_default_decoder_parameters ( & parameters )		1151500	0					
ANR	1151878	Callee	opj_set_default_decoder_parameters		1151500	0					
ANR	1151879	Identifier	opj_set_default_decoder_parameters		1151500	0					
ANR	1151880	ArgumentList	& parameters		1151500	1					
ANR	1151881	Argument	& parameters		1151500	0					
ANR	1151882	UnaryOperationExpression	& parameters		1151500	0					
ANR	1151883	UnaryOperator	&		1151500	0					
ANR	1151884	Identifier	parameters		1151500	1					
ANR	1151885	ExpressionStatement	parameters . decod_format = J2K_CFMT	563:1:18469:18503	1151500	46	True				
ANR	1151886	AssignmentExpression	parameters . decod_format = J2K_CFMT		1151500	0		=			
ANR	1151887	MemberAccess	parameters . decod_format		1151500	0					
ANR	1151888	Identifier	parameters		1151500	0					
ANR	1151889	Identifier	decod_format		1151500	1					
ANR	1151890	Identifier	J2K_CFMT		1151500	1					
ANR	1151891	IfStatement	"if ( parse_cmdline_decoder ( argc , argv , & parameters , & img_fol ) == 1 )"		1151500	47					
ANR	1151892	Condition	"parse_cmdline_decoder ( argc , argv , & parameters , & img_fol ) == 1"	566:4:18565:18624	1151500	0	True				
ANR	1151893	EqualityExpression	"parse_cmdline_decoder ( argc , argv , & parameters , & img_fol ) == 1"		1151500	0		==			
ANR	1151894	CallExpression	"parse_cmdline_decoder ( argc , argv , & parameters , & img_fol )"		1151500	0					
ANR	1151895	Callee	parse_cmdline_decoder		1151500	0					
ANR	1151896	Identifier	parse_cmdline_decoder		1151500	0					
ANR	1151897	ArgumentList	argc		1151500	1					
ANR	1151898	Argument	argc		1151500	0					
ANR	1151899	Identifier	argc		1151500	0					
ANR	1151900	Argument	argv		1151500	1					
ANR	1151901	Identifier	argv		1151500	0					
ANR	1151902	Argument	& parameters		1151500	2					
ANR	1151903	UnaryOperationExpression	& parameters		1151500	0					
ANR	1151904	UnaryOperator	&		1151500	0					
ANR	1151905	Identifier	parameters		1151500	1					
ANR	1151906	Argument	& img_fol		1151500	3					
ANR	1151907	UnaryOperationExpression	& img_fol		1151500	0					
ANR	1151908	UnaryOperator	&		1151500	0					
ANR	1151909	Identifier	img_fol		1151500	1					
ANR	1151910	PrimaryExpression	1		1151500	1					
ANR	1151911	CompoundStatement		71:66:2673:2673	1151500	1					
ANR	1151912	ForStatement	for ( i = 1 ; i < argc ; i ++ )		1151500	0					
ANR	1151913	ForInit	i = 1 ;	568:7:18678:18681	1151500	0	True				
ANR	1151914	AssignmentExpression	i = 1		1151500	0		=			
ANR	1151915	Identifier	i		1151500	0					
ANR	1151916	PrimaryExpression	1		1151500	1					
ANR	1151917	Condition	i < argc	568:12:18683:18688	1151500	1	True				
ANR	1151918	RelationalExpression	i < argc		1151500	0		<			
ANR	1151919	Identifier	i		1151500	0					
ANR	1151920	Identifier	argc		1151500	1					
ANR	1151921	PostIncDecOperationExpression	i ++	568:20:18691:18693	1151500	2	True				
ANR	1151922	Identifier	i		1151500	0					
ANR	1151923	IncDec	++		1151500	1					
ANR	1151924	ExpressionStatement	"( * env ) -> ReleaseStringUTFChars ( env , ( * env ) -> GetObjectArrayElement ( env , javaParameters , i - 1 ) , argv [ i ] )"	569:3:18700:18800	1151500	3	True				
ANR	1151925	CallExpression	"( * env ) -> ReleaseStringUTFChars ( env , ( * env ) -> GetObjectArrayElement ( env , javaParameters , i - 1 ) , argv [ i ] )"		1151500	0					
ANR	1151926	Callee	( * env ) -> ReleaseStringUTFChars		1151500	0					
ANR	1151927	PtrMemberAccess	( * env ) -> ReleaseStringUTFChars		1151500	0					
ANR	1151928	UnaryOperationExpression	* env		1151500	0					
ANR	1151929	UnaryOperator	*		1151500	0					
ANR	1151930	Identifier	env		1151500	1					
ANR	1151931	Identifier	ReleaseStringUTFChars		1151500	1					
ANR	1151932	ArgumentList	env		1151500	1					
ANR	1151933	Argument	env		1151500	0					
ANR	1151934	Identifier	env		1151500	0					
ANR	1151935	Argument	"( * env ) -> GetObjectArrayElement ( env , javaParameters , i - 1 )"		1151500	1					
ANR	1151936	CallExpression	"( * env ) -> GetObjectArrayElement ( env , javaParameters , i - 1 )"		1151500	0					
ANR	1151937	Callee	( * env ) -> GetObjectArrayElement		1151500	0					
ANR	1151938	PtrMemberAccess	( * env ) -> GetObjectArrayElement		1151500	0					
ANR	1151939	UnaryOperationExpression	* env		1151500	0					
ANR	1151940	UnaryOperator	*		1151500	0					
ANR	1151941	Identifier	env		1151500	1					
ANR	1151942	Identifier	GetObjectArrayElement		1151500	1					
ANR	1151943	ArgumentList	env		1151500	1					
ANR	1151944	Argument	env		1151500	0					
ANR	1151945	Identifier	env		1151500	0					
ANR	1151946	Argument	javaParameters		1151500	1					
ANR	1151947	Identifier	javaParameters		1151500	0					
ANR	1151948	Argument	i - 1		1151500	2					
ANR	1151949	AdditiveExpression	i - 1		1151500	0		-			
ANR	1151950	Identifier	i		1151500	0					
ANR	1151951	PrimaryExpression	1		1151500	1					
ANR	1151952	Argument	argv [ i ]		1151500	2					
ANR	1151953	ArrayIndexing	argv [ i ]		1151500	0					
ANR	1151954	Identifier	argv		1151500	0					
ANR	1151955	Identifier	i		1151500	1					
ANR	1151956	ReturnStatement	return - 1 ;	570:2:18805:18814	1151500	1	True				
ANR	1151957	UnaryOperationExpression	- 1		1151500	0					
ANR	1151958	UnaryOperator	-		1151500	0					
ANR	1151959	PrimaryExpression	1		1151500	1					
ANR	1151960	ForStatement	for ( i = 1 ; i < argc ; i ++ )		1151500	48					
ANR	1151961	ForInit	i = 1 ;	573:6:18867:18870	1151500	0	True				
ANR	1151962	AssignmentExpression	i = 1		1151500	0		=			
ANR	1151963	Identifier	i		1151500	0					
ANR	1151964	PrimaryExpression	1		1151500	1					
ANR	1151965	Condition	i < argc	573:11:18872:18877	1151500	1	True				
ANR	1151966	RelationalExpression	i < argc		1151500	0		<			
ANR	1151967	Identifier	i		1151500	0					
ANR	1151968	Identifier	argc		1151500	1					
ANR	1151969	PostIncDecOperationExpression	i ++	573:19:18880:18882	1151500	2	True				
ANR	1151970	Identifier	i		1151500	0					
ANR	1151971	IncDec	++		1151500	1					
ANR	1151972	ExpressionStatement	"( * env ) -> ReleaseStringUTFChars ( env , ( * env ) -> GetObjectArrayElement ( env , javaParameters , i - 1 ) , argv [ i ] )"	574:2:18888:18988	1151500	3	True				
ANR	1151973	CallExpression	"( * env ) -> ReleaseStringUTFChars ( env , ( * env ) -> GetObjectArrayElement ( env , javaParameters , i - 1 ) , argv [ i ] )"		1151500	0					
ANR	1151974	Callee	( * env ) -> ReleaseStringUTFChars		1151500	0					
ANR	1151975	PtrMemberAccess	( * env ) -> ReleaseStringUTFChars		1151500	0					
ANR	1151976	UnaryOperationExpression	* env		1151500	0					
ANR	1151977	UnaryOperator	*		1151500	0					
ANR	1151978	Identifier	env		1151500	1					
ANR	1151979	Identifier	ReleaseStringUTFChars		1151500	1					
ANR	1151980	ArgumentList	env		1151500	1					
ANR	1151981	Argument	env		1151500	0					
ANR	1151982	Identifier	env		1151500	0					
ANR	1151983	Argument	"( * env ) -> GetObjectArrayElement ( env , javaParameters , i - 1 )"		1151500	1					
ANR	1151984	CallExpression	"( * env ) -> GetObjectArrayElement ( env , javaParameters , i - 1 )"		1151500	0					
ANR	1151985	Callee	( * env ) -> GetObjectArrayElement		1151500	0					
ANR	1151986	PtrMemberAccess	( * env ) -> GetObjectArrayElement		1151500	0					
ANR	1151987	UnaryOperationExpression	* env		1151500	0					
ANR	1151988	UnaryOperator	*		1151500	0					
ANR	1151989	Identifier	env		1151500	1					
ANR	1151990	Identifier	GetObjectArrayElement		1151500	1					
ANR	1151991	ArgumentList	env		1151500	1					
ANR	1151992	Argument	env		1151500	0					
ANR	1151993	Identifier	env		1151500	0					
ANR	1151994	Argument	javaParameters		1151500	1					
ANR	1151995	Identifier	javaParameters		1151500	0					
ANR	1151996	Argument	i - 1		1151500	2					
ANR	1151997	AdditiveExpression	i - 1		1151500	0		-			
ANR	1151998	Identifier	i		1151500	0					
ANR	1151999	PrimaryExpression	1		1151500	1					
ANR	1152000	Argument	argv [ i ]		1151500	2					
ANR	1152001	ArrayIndexing	argv [ i ]		1151500	0					
ANR	1152002	Identifier	argv		1151500	0					
ANR	1152003	Identifier	i		1151500	1					
ANR	1152004	ExpressionStatement	num_images = 1	576:1:18994:19006	1151500	49	True				
ANR	1152005	AssignmentExpression	num_images = 1		1151500	0		=			
ANR	1152006	Identifier	num_images		1151500	0					
ANR	1152007	PrimaryExpression	1		1151500	1					
ANR	1152008	ExpressionStatement	"fid = ( * env ) -> GetFieldID ( env , cls , ""skippedResolutions"" , ""I"" )"	579:1:19077:19137	1151500	50	True				
ANR	1152009	AssignmentExpression	"fid = ( * env ) -> GetFieldID ( env , cls , ""skippedResolutions"" , ""I"" )"		1151500	0		=			
ANR	1152010	Identifier	fid		1151500	0					
ANR	1152011	CallExpression	"( * env ) -> GetFieldID ( env , cls , ""skippedResolutions"" , ""I"" )"		1151500	1					
ANR	1152012	Callee	( * env ) -> GetFieldID		1151500	0					
ANR	1152013	PtrMemberAccess	( * env ) -> GetFieldID		1151500	0					
ANR	1152014	UnaryOperationExpression	* env		1151500	0					
ANR	1152015	UnaryOperator	*		1151500	0					
ANR	1152016	Identifier	env		1151500	1					
ANR	1152017	Identifier	GetFieldID		1151500	1					
ANR	1152018	ArgumentList	env		1151500	1					
ANR	1152019	Argument	env		1151500	0					
ANR	1152020	Identifier	env		1151500	0					
ANR	1152021	Argument	cls		1151500	1					
ANR	1152022	Identifier	cls		1151500	0					
ANR	1152023	Argument	"""skippedResolutions"""		1151500	2					
ANR	1152024	PrimaryExpression	"""skippedResolutions"""		1151500	0					
ANR	1152025	Argument	"""I"""		1151500	3					
ANR	1152026	PrimaryExpression	"""I"""		1151500	0					
ANR	1152027	ExpressionStatement	"parameters . cp_reduce = ( short ) ( * env ) -> GetIntField ( env , obj , fid )"	580:1:19141:19206	1151500	51	True				
ANR	1152028	AssignmentExpression	"parameters . cp_reduce = ( short ) ( * env ) -> GetIntField ( env , obj , fid )"		1151500	0		=			
ANR	1152029	MemberAccess	parameters . cp_reduce		1151500	0					
ANR	1152030	Identifier	parameters		1151500	0					
ANR	1152031	Identifier	cp_reduce		1151500	1					
ANR	1152032	CastExpression	"( short ) ( * env ) -> GetIntField ( env , obj , fid )"		1151500	1					
ANR	1152033	CastTarget	short		1151500	0					
ANR	1152034	CallExpression	"( * env ) -> GetIntField ( env , obj , fid )"		1151500	1					
ANR	1152035	Callee	( * env ) -> GetIntField		1151500	0					
ANR	1152036	PtrMemberAccess	( * env ) -> GetIntField		1151500	0					
ANR	1152037	UnaryOperationExpression	* env		1151500	0					
ANR	1152038	UnaryOperator	*		1151500	0					
ANR	1152039	Identifier	env		1151500	1					
ANR	1152040	Identifier	GetIntField		1151500	1					
ANR	1152041	ArgumentList	env		1151500	1					
ANR	1152042	Argument	env		1151500	0					
ANR	1152043	Identifier	env		1151500	0					
ANR	1152044	Argument	obj		1151500	1					
ANR	1152045	Identifier	obj		1151500	0					
ANR	1152046	Argument	fid		1151500	2					
ANR	1152047	Identifier	fid		1151500	0					
ANR	1152048	ForStatement	for ( imageno = 0 ; imageno < num_images ; imageno ++ )		1151500	52					
ANR	1152049	ForInit	imageno = 0 ;	583:5:19248:19259	1151500	0	True				
ANR	1152050	AssignmentExpression	imageno = 0		1151500	0		=			
ANR	1152051	Identifier	imageno		1151500	0					
ANR	1152052	PrimaryExpression	0		1151500	1					
ANR	1152053	Condition	imageno < num_images	583:18:19261:19280	1151500	1	True				
ANR	1152054	RelationalExpression	imageno < num_images		1151500	0		<			
ANR	1152055	Identifier	imageno		1151500	0					
ANR	1152056	Identifier	num_images		1151500	1					
ANR	1152057	PostIncDecOperationExpression	imageno ++	583:41:19284:19292	1151500	2	True				
ANR	1152058	Identifier	imageno		1151500	0					
ANR	1152059	IncDec	++		1151500	1					
ANR	1152060	CompoundStatement		89:1:3343:3343	1151500	3					
ANR	1152061	ExpressionStatement	image = NULL	585:2:19302:19314	1151500	0	True				
ANR	1152062	AssignmentExpression	image = NULL		1151500	0		=			
ANR	1152063	Identifier	image		1151500	0					
ANR	1152064	Identifier	NULL		1151500	1					
ANR	1152065	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	586:2:19319:19339	1151500	1	True				
ANR	1152066	CallExpression	"fprintf ( stderr , ""\\n"" )"		1151500	0					
ANR	1152067	Callee	fprintf		1151500	0					
ANR	1152068	Identifier	fprintf		1151500	0					
ANR	1152069	ArgumentList	stderr		1151500	1					
ANR	1152070	Argument	stderr		1151500	0					
ANR	1152071	Identifier	stderr		1151500	0					
ANR	1152072	Argument	"""\\n"""		1151500	1					
ANR	1152073	PrimaryExpression	"""\\n"""		1151500	0					
ANR	1152074	IfStatement	if ( parameters . infile && parameters . infile [ 0 ] != '\\0' )		1151500	2					
ANR	1152075	Condition	parameters . infile && parameters . infile [ 0 ] != '\\0'	591:6:19577:19623	1151500	0	True				
ANR	1152076	AndExpression	parameters . infile && parameters . infile [ 0 ] != '\\0'		1151500	0		&&			
ANR	1152077	MemberAccess	parameters . infile		1151500	0					
ANR	1152078	Identifier	parameters		1151500	0					
ANR	1152079	Identifier	infile		1151500	1					
ANR	1152080	EqualityExpression	parameters . infile [ 0 ] != '\\0'		1151500	1		!=			
ANR	1152081	ArrayIndexing	parameters . infile [ 0 ]		1151500	0					
ANR	1152082	MemberAccess	parameters . infile		1151500	0					
ANR	1152083	Identifier	parameters		1151500	0					
ANR	1152084	Identifier	infile		1151500	1					
ANR	1152085	PrimaryExpression	0		1151500	1					
ANR	1152086	PrimaryExpression	'\\0'		1151500	1					
ANR	1152087	CompoundStatement		96:55:3672:3672	1151500	1					
ANR	1152088	ExpressionStatement	"fsrc = fopen ( parameters . infile , ""rb"" )"	593:3:19688:19725	1151500	0	True				
ANR	1152089	AssignmentExpression	"fsrc = fopen ( parameters . infile , ""rb"" )"		1151500	0		=			
ANR	1152090	Identifier	fsrc		1151500	0					
ANR	1152091	CallExpression	"fopen ( parameters . infile , ""rb"" )"		1151500	1					
ANR	1152092	Callee	fopen		1151500	0					
ANR	1152093	Identifier	fopen		1151500	0					
ANR	1152094	ArgumentList	parameters . infile		1151500	1					
ANR	1152095	Argument	parameters . infile		1151500	0					
ANR	1152096	MemberAccess	parameters . infile		1151500	0					
ANR	1152097	Identifier	parameters		1151500	0					
ANR	1152098	Identifier	infile		1151500	1					
ANR	1152099	Argument	"""rb"""		1151500	1					
ANR	1152100	PrimaryExpression	"""rb"""		1151500	0					
ANR	1152101	IfStatement	if ( ! fsrc )		1151500	1					
ANR	1152102	Condition	! fsrc	594:7:19735:19739	1151500	0	True				
ANR	1152103	UnaryOperationExpression	! fsrc		1151500	0					
ANR	1152104	UnaryOperator	!		1151500	0					
ANR	1152105	Identifier	fsrc		1151500	1					
ANR	1152106	CompoundStatement		99:14:3788:3788	1151500	1					
ANR	1152107	ExpressionStatement	"fprintf ( stderr , ""ERROR -> failed to open %s for reading\\n"" , parameters . infile )"	595:4:19749:19827	1151500	0	True				
ANR	1152108	CallExpression	"fprintf ( stderr , ""ERROR -> failed to open %s for reading\\n"" , parameters . infile )"		1151500	0					
ANR	1152109	Callee	fprintf		1151500	0					
ANR	1152110	Identifier	fprintf		1151500	0					
ANR	1152111	ArgumentList	stderr		1151500	1					
ANR	1152112	Argument	stderr		1151500	0					
ANR	1152113	Identifier	stderr		1151500	0					
ANR	1152114	Argument	"""ERROR -> failed to open %s for reading\\n"""		1151500	1					
ANR	1152115	PrimaryExpression	"""ERROR -> failed to open %s for reading\\n"""		1151500	0					
ANR	1152116	Argument	parameters . infile		1151500	2					
ANR	1152117	MemberAccess	parameters . infile		1151500	0					
ANR	1152118	Identifier	parameters		1151500	0					
ANR	1152119	Identifier	infile		1151500	1					
ANR	1152120	ReturnStatement	return 1 ;	596:4:19834:19842	1151500	1	True				
ANR	1152121	PrimaryExpression	1		1151500	0					
ANR	1152122	ExpressionStatement	"fseek ( fsrc , 0 , SEEK_END )"	598:3:19854:19878	1151500	2	True				
ANR	1152123	CallExpression	"fseek ( fsrc , 0 , SEEK_END )"		1151500	0					
ANR	1152124	Callee	fseek		1151500	0					
ANR	1152125	Identifier	fseek		1151500	0					
ANR	1152126	ArgumentList	fsrc		1151500	1					
ANR	1152127	Argument	fsrc		1151500	0					
ANR	1152128	Identifier	fsrc		1151500	0					
ANR	1152129	Argument	0		1151500	1					
ANR	1152130	PrimaryExpression	0		1151500	0					
ANR	1152131	Argument	SEEK_END		1151500	2					
ANR	1152132	Identifier	SEEK_END		1151500	0					
ANR	1152133	ExpressionStatement	file_length = ftell ( fsrc )	599:3:19884:19909	1151500	3	True				
ANR	1152134	AssignmentExpression	file_length = ftell ( fsrc )		1151500	0		=			
ANR	1152135	Identifier	file_length		1151500	0					
ANR	1152136	CallExpression	ftell ( fsrc )		1151500	1					
ANR	1152137	Callee	ftell		1151500	0					
ANR	1152138	Identifier	ftell		1151500	0					
ANR	1152139	ArgumentList	fsrc		1151500	1					
ANR	1152140	Argument	fsrc		1151500	0					
ANR	1152141	Identifier	fsrc		1151500	0					
ANR	1152142	ExpressionStatement	"fseek ( fsrc , 0 , SEEK_SET )"	600:3:19915:19939	1151500	4	True				
ANR	1152143	CallExpression	"fseek ( fsrc , 0 , SEEK_SET )"		1151500	0					
ANR	1152144	Callee	fseek		1151500	0					
ANR	1152145	Identifier	fseek		1151500	0					
ANR	1152146	ArgumentList	fsrc		1151500	1					
ANR	1152147	Argument	fsrc		1151500	0					
ANR	1152148	Identifier	fsrc		1151500	0					
ANR	1152149	Argument	0		1151500	1					
ANR	1152150	PrimaryExpression	0		1151500	0					
ANR	1152151	Argument	SEEK_SET		1151500	2					
ANR	1152152	Identifier	SEEK_SET		1151500	0					
ANR	1152153	ExpressionStatement	src = ( unsigned char * ) opj_malloc ( file_length )	601:3:19945:19992	1151500	5	True				
ANR	1152154	AssignmentExpression	src = ( unsigned char * ) opj_malloc ( file_length )		1151500	0		=			
ANR	1152155	Identifier	src		1151500	0					
ANR	1152156	CastExpression	( unsigned char * ) opj_malloc ( file_length )		1151500	1					
ANR	1152157	CastTarget	unsigned char *		1151500	0					
ANR	1152158	CallExpression	opj_malloc ( file_length )		1151500	1					
ANR	1152159	Callee	opj_malloc		1151500	0					
ANR	1152160	Identifier	opj_malloc		1151500	0					
ANR	1152161	ArgumentList	file_length		1151500	1					
ANR	1152162	Argument	file_length		1151500	0					
ANR	1152163	Identifier	file_length		1151500	0					
ANR	1152164	ExpressionStatement	"fread ( src , 1 , file_length , fsrc )"	602:3:19998:20030	1151500	6	True				
ANR	1152165	CallExpression	"fread ( src , 1 , file_length , fsrc )"		1151500	0					
ANR	1152166	Callee	fread		1151500	0					
ANR	1152167	Identifier	fread		1151500	0					
ANR	1152168	ArgumentList	src		1151500	1					
ANR	1152169	Argument	src		1151500	0					
ANR	1152170	Identifier	src		1151500	0					
ANR	1152171	Argument	1		1151500	1					
ANR	1152172	PrimaryExpression	1		1151500	0					
ANR	1152173	Argument	file_length		1151500	2					
ANR	1152174	Identifier	file_length		1151500	0					
ANR	1152175	Argument	fsrc		1151500	3					
ANR	1152176	Identifier	fsrc		1151500	0					
ANR	1152177	ExpressionStatement	fclose ( fsrc )	603:3:20036:20048	1151500	7	True				
ANR	1152178	CallExpression	fclose ( fsrc )		1151500	0					
ANR	1152179	Callee	fclose		1151500	0					
ANR	1152180	Identifier	fclose		1151500	0					
ANR	1152181	ArgumentList	fsrc		1151500	1					
ANR	1152182	Argument	fsrc		1151500	0					
ANR	1152183	Identifier	fsrc		1151500	0					
ANR	1152184	ElseStatement	else		1151500	0					
ANR	1152185	CompoundStatement		110:9:4166:4166	1151500	0					
ANR	1152186	ExpressionStatement	"fid = ( * env ) -> GetFieldID ( env , cls , ""compressedStream"" , ""[B"" )"	608:3:20246:20305	1151500	0	True				
ANR	1152187	AssignmentExpression	"fid = ( * env ) -> GetFieldID ( env , cls , ""compressedStream"" , ""[B"" )"		1151500	0		=			
ANR	1152188	Identifier	fid		1151500	0					
ANR	1152189	CallExpression	"( * env ) -> GetFieldID ( env , cls , ""compressedStream"" , ""[B"" )"		1151500	1					
ANR	1152190	Callee	( * env ) -> GetFieldID		1151500	0					
ANR	1152191	PtrMemberAccess	( * env ) -> GetFieldID		1151500	0					
ANR	1152192	UnaryOperationExpression	* env		1151500	0					
ANR	1152193	UnaryOperator	*		1151500	0					
ANR	1152194	Identifier	env		1151500	1					
ANR	1152195	Identifier	GetFieldID		1151500	1					
ANR	1152196	ArgumentList	env		1151500	1					
ANR	1152197	Argument	env		1151500	0					
ANR	1152198	Identifier	env		1151500	0					
ANR	1152199	Argument	cls		1151500	1					
ANR	1152200	Identifier	cls		1151500	0					
ANR	1152201	Argument	"""compressedStream"""		1151500	2					
ANR	1152202	PrimaryExpression	"""compressedStream"""		1151500	0					
ANR	1152203	Argument	"""[B"""		1151500	3					
ANR	1152204	PrimaryExpression	"""[B"""		1151500	0					
ANR	1152205	ExpressionStatement	"jba = ( * env ) -> GetObjectField ( env , obj , fid )"	609:3:20311:20354	1151500	1	True				
ANR	1152206	AssignmentExpression	"jba = ( * env ) -> GetObjectField ( env , obj , fid )"		1151500	0		=			
ANR	1152207	Identifier	jba		1151500	0					
ANR	1152208	CallExpression	"( * env ) -> GetObjectField ( env , obj , fid )"		1151500	1					
ANR	1152209	Callee	( * env ) -> GetObjectField		1151500	0					
ANR	1152210	PtrMemberAccess	( * env ) -> GetObjectField		1151500	0					
ANR	1152211	UnaryOperationExpression	* env		1151500	0					
ANR	1152212	UnaryOperator	*		1151500	0					
ANR	1152213	Identifier	env		1151500	1					
ANR	1152214	Identifier	GetObjectField		1151500	1					
ANR	1152215	ArgumentList	env		1151500	1					
ANR	1152216	Argument	env		1151500	0					
ANR	1152217	Identifier	env		1151500	0					
ANR	1152218	Argument	obj		1151500	1					
ANR	1152219	Identifier	obj		1151500	0					
ANR	1152220	Argument	fid		1151500	2					
ANR	1152221	Identifier	fid		1151500	0					
ANR	1152222	ExpressionStatement	"file_length = ( * env ) -> GetArrayLength ( env , jba )"	610:3:20360:20406	1151500	2	True				
ANR	1152223	AssignmentExpression	"file_length = ( * env ) -> GetArrayLength ( env , jba )"		1151500	0		=			
ANR	1152224	Identifier	file_length		1151500	0					
ANR	1152225	CallExpression	"( * env ) -> GetArrayLength ( env , jba )"		1151500	1					
ANR	1152226	Callee	( * env ) -> GetArrayLength		1151500	0					
ANR	1152227	PtrMemberAccess	( * env ) -> GetArrayLength		1151500	0					
ANR	1152228	UnaryOperationExpression	* env		1151500	0					
ANR	1152229	UnaryOperator	*		1151500	0					
ANR	1152230	Identifier	env		1151500	1					
ANR	1152231	Identifier	GetArrayLength		1151500	1					
ANR	1152232	ArgumentList	env		1151500	1					
ANR	1152233	Argument	env		1151500	0					
ANR	1152234	Identifier	env		1151500	0					
ANR	1152235	Argument	jba		1151500	1					
ANR	1152236	Identifier	jba		1151500	0					
ANR	1152237	ExpressionStatement	"jbBody = ( * env ) -> GetByteArrayElements ( env , jba , & isCopy )"	611:3:20412:20468	1151500	3	True				
ANR	1152238	AssignmentExpression	"jbBody = ( * env ) -> GetByteArrayElements ( env , jba , & isCopy )"		1151500	0		=			
ANR	1152239	Identifier	jbBody		1151500	0					
ANR	1152240	CallExpression	"( * env ) -> GetByteArrayElements ( env , jba , & isCopy )"		1151500	1					
ANR	1152241	Callee	( * env ) -> GetByteArrayElements		1151500	0					
ANR	1152242	PtrMemberAccess	( * env ) -> GetByteArrayElements		1151500	0					
ANR	1152243	UnaryOperationExpression	* env		1151500	0					
ANR	1152244	UnaryOperator	*		1151500	0					
ANR	1152245	Identifier	env		1151500	1					
ANR	1152246	Identifier	GetByteArrayElements		1151500	1					
ANR	1152247	ArgumentList	env		1151500	1					
ANR	1152248	Argument	env		1151500	0					
ANR	1152249	Identifier	env		1151500	0					
ANR	1152250	Argument	jba		1151500	1					
ANR	1152251	Identifier	jba		1151500	0					
ANR	1152252	Argument	& isCopy		1151500	2					
ANR	1152253	UnaryOperationExpression	& isCopy		1151500	0					
ANR	1152254	UnaryOperator	&		1151500	0					
ANR	1152255	Identifier	isCopy		1151500	1					
ANR	1152256	ExpressionStatement	src = ( unsigned char * ) jbBody	612:3:20474:20502	1151500	4	True				
ANR	1152257	AssignmentExpression	src = ( unsigned char * ) jbBody		1151500	0		=			
ANR	1152258	Identifier	src		1151500	0					
ANR	1152259	CastExpression	( unsigned char * ) jbBody		1151500	1					
ANR	1152260	CastTarget	unsigned char *		1151500	0					
ANR	1152261	Identifier	jbBody		1151500	1					
ANR	1152262	SwitchStatement	switch ( parameters . decod_format )		1151500	3					
ANR	1152263	Condition	parameters . decod_format	618:9:20587:20609	1151500	0	True				
ANR	1152264	MemberAccess	parameters . decod_format		1151500	0					
ANR	1152265	Identifier	parameters		1151500	0					
ANR	1152266	Identifier	decod_format		1151500	1					
ANR	1152267	CompoundStatement		123:34:4658:4658	1151500	1					
ANR	1152268	Label	case J2K_CFMT :	619:2:20617:20630	1151500	0	True				
ANR	1152269	Identifier	J2K_CFMT		1151500	0					
ANR	1152270	CompoundStatement		125:2:4681:4681	1151500	1					
ANR	1152271	ExpressionStatement	dinfo = opj_create_decompress ( CODEC_J2K )	624:3:20705:20745	1151500	0	True				
ANR	1152272	AssignmentExpression	dinfo = opj_create_decompress ( CODEC_J2K )		1151500	0		=			
ANR	1152273	Identifier	dinfo		1151500	0					
ANR	1152274	CallExpression	opj_create_decompress ( CODEC_J2K )		1151500	1					
ANR	1152275	Callee	opj_create_decompress		1151500	0					
ANR	1152276	Identifier	opj_create_decompress		1151500	0					
ANR	1152277	ArgumentList	CODEC_J2K		1151500	1					
ANR	1152278	Argument	CODEC_J2K		1151500	0					
ANR	1152279	Identifier	CODEC_J2K		1151500	0					
ANR	1152280	ExpressionStatement	"opj_set_event_mgr ( ( opj_common_ptr ) dinfo , & event_mgr , & msgErrorCallback_vars )"	627:3:20821:20897	1151500	1	True				
ANR	1152281	CallExpression	"opj_set_event_mgr ( ( opj_common_ptr ) dinfo , & event_mgr , & msgErrorCallback_vars )"		1151500	0					
ANR	1152282	Callee	opj_set_event_mgr		1151500	0					
ANR	1152283	Identifier	opj_set_event_mgr		1151500	0					
ANR	1152284	ArgumentList	( opj_common_ptr ) dinfo		1151500	1					
ANR	1152285	Argument	( opj_common_ptr ) dinfo		1151500	0					
ANR	1152286	CastExpression	( opj_common_ptr ) dinfo		1151500	0					
ANR	1152287	CastTarget	opj_common_ptr		1151500	0					
ANR	1152288	Identifier	dinfo		1151500	1					
ANR	1152289	Argument	& event_mgr		1151500	1					
ANR	1152290	UnaryOperationExpression	& event_mgr		1151500	0					
ANR	1152291	UnaryOperator	&		1151500	0					
ANR	1152292	Identifier	event_mgr		1151500	1					
ANR	1152293	Argument	& msgErrorCallback_vars		1151500	2					
ANR	1152294	UnaryOperationExpression	& msgErrorCallback_vars		1151500	0					
ANR	1152295	UnaryOperator	&		1151500	0					
ANR	1152296	Identifier	msgErrorCallback_vars		1151500	1					
ANR	1152297	ExpressionStatement	"opj_setup_decoder ( dinfo , & parameters )"	630:3:20975:21012	1151500	2	True				
ANR	1152298	CallExpression	"opj_setup_decoder ( dinfo , & parameters )"		1151500	0					
ANR	1152299	Callee	opj_setup_decoder		1151500	0					
ANR	1152300	Identifier	opj_setup_decoder		1151500	0					
ANR	1152301	ArgumentList	dinfo		1151500	1					
ANR	1152302	Argument	dinfo		1151500	0					
ANR	1152303	Identifier	dinfo		1151500	0					
ANR	1152304	Argument	& parameters		1151500	1					
ANR	1152305	UnaryOperationExpression	& parameters		1151500	0					
ANR	1152306	UnaryOperator	&		1151500	0					
ANR	1152307	Identifier	parameters		1151500	1					
ANR	1152308	ExpressionStatement	"cio = opj_cio_open ( ( opj_common_ptr ) dinfo , src , file_length )"	633:3:21049:21108	1151500	3	True				
ANR	1152309	AssignmentExpression	"cio = opj_cio_open ( ( opj_common_ptr ) dinfo , src , file_length )"		1151500	0		=			
ANR	1152310	Identifier	cio		1151500	0					
ANR	1152311	CallExpression	"opj_cio_open ( ( opj_common_ptr ) dinfo , src , file_length )"		1151500	1					
ANR	1152312	Callee	opj_cio_open		1151500	0					
ANR	1152313	Identifier	opj_cio_open		1151500	0					
ANR	1152314	ArgumentList	( opj_common_ptr ) dinfo		1151500	1					
ANR	1152315	Argument	( opj_common_ptr ) dinfo		1151500	0					
ANR	1152316	CastExpression	( opj_common_ptr ) dinfo		1151500	0					
ANR	1152317	CastTarget	opj_common_ptr		1151500	0					
ANR	1152318	Identifier	dinfo		1151500	1					
ANR	1152319	Argument	src		1151500	1					
ANR	1152320	Identifier	src		1151500	0					
ANR	1152321	Argument	file_length		1151500	2					
ANR	1152322	Identifier	file_length		1151500	0					
ANR	1152323	ExpressionStatement	"image = opj_decode ( dinfo , cio )"	636:3:21173:21203	1151500	4	True				
ANR	1152324	AssignmentExpression	"image = opj_decode ( dinfo , cio )"		1151500	0		=			
ANR	1152325	Identifier	image		1151500	0					
ANR	1152326	CallExpression	"opj_decode ( dinfo , cio )"		1151500	1					
ANR	1152327	Callee	opj_decode		1151500	0					
ANR	1152328	Identifier	opj_decode		1151500	0					
ANR	1152329	ArgumentList	dinfo		1151500	1					
ANR	1152330	Argument	dinfo		1151500	0					
ANR	1152331	Identifier	dinfo		1151500	0					
ANR	1152332	Argument	cio		1151500	1					
ANR	1152333	Identifier	cio		1151500	0					
ANR	1152334	IfStatement	if ( ! image )		1151500	5					
ANR	1152335	Condition	! image	637:6:21212:21217	1151500	0	True				
ANR	1152336	UnaryOperationExpression	! image		1151500	0					
ANR	1152337	UnaryOperator	!		1151500	0					
ANR	1152338	Identifier	image		1151500	1					
ANR	1152339	CompoundStatement		142:14:5266:5266	1151500	1					
ANR	1152340	ExpressionStatement	"fprintf ( stderr , ""ERROR -> j2k_to_image: failed to decode image!\\n"" )"	638:4:21227:21294	1151500	0	True				
ANR	1152341	CallExpression	"fprintf ( stderr , ""ERROR -> j2k_to_image: failed to decode image!\\n"" )"		1151500	0					
ANR	1152342	Callee	fprintf		1151500	0					
ANR	1152343	Identifier	fprintf		1151500	0					
ANR	1152344	ArgumentList	stderr		1151500	1					
ANR	1152345	Argument	stderr		1151500	0					
ANR	1152346	Identifier	stderr		1151500	0					
ANR	1152347	Argument	"""ERROR -> j2k_to_image: failed to decode image!\\n"""		1151500	1					
ANR	1152348	PrimaryExpression	"""ERROR -> j2k_to_image: failed to decode image!\\n"""		1151500	0					
ANR	1152349	ExpressionStatement	opj_destroy_decompress ( dinfo )	639:4:21301:21330	1151500	1	True				
ANR	1152350	CallExpression	opj_destroy_decompress ( dinfo )		1151500	0					
ANR	1152351	Callee	opj_destroy_decompress		1151500	0					
ANR	1152352	Identifier	opj_destroy_decompress		1151500	0					
ANR	1152353	ArgumentList	dinfo		1151500	1					
ANR	1152354	Argument	dinfo		1151500	0					
ANR	1152355	Identifier	dinfo		1151500	0					
ANR	1152356	ExpressionStatement	opj_cio_close ( cio )	640:4:21337:21355	1151500	2	True				
ANR	1152357	CallExpression	opj_cio_close ( cio )		1151500	0					
ANR	1152358	Callee	opj_cio_close		1151500	0					
ANR	1152359	Identifier	opj_cio_close		1151500	0					
ANR	1152360	ArgumentList	cio		1151500	1					
ANR	1152361	Argument	cio		1151500	0					
ANR	1152362	Identifier	cio		1151500	0					
ANR	1152363	ReturnStatement	return 1 ;	641:4:21362:21370	1151500	3	True				
ANR	1152364	PrimaryExpression	1		1151500	0					
ANR	1152365	ExpressionStatement	opj_cio_close ( cio )	645:3:21416:21434	1151500	6	True				
ANR	1152366	CallExpression	opj_cio_close ( cio )		1151500	0					
ANR	1152367	Callee	opj_cio_close		1151500	0					
ANR	1152368	Identifier	opj_cio_close		1151500	0					
ANR	1152369	ArgumentList	cio		1151500	1					
ANR	1152370	Argument	cio		1151500	0					
ANR	1152371	Identifier	cio		1151500	0					
ANR	1152372	BreakStatement	break ;	647:2:21444:21449	1151500	2	True				
ANR	1152373	Label	case JP2_CFMT :	649:2:21456:21469	1151500	3	True				
ANR	1152374	Identifier	JP2_CFMT		1151500	0					
ANR	1152375	CompoundStatement		155:2:5520:5520	1151500	4					
ANR	1152376	ExpressionStatement	dinfo = opj_create_decompress ( CODEC_JP2 )	654:3:21555:21595	1151500	0	True				
ANR	1152377	AssignmentExpression	dinfo = opj_create_decompress ( CODEC_JP2 )		1151500	0		=			
ANR	1152378	Identifier	dinfo		1151500	0					
ANR	1152379	CallExpression	opj_create_decompress ( CODEC_JP2 )		1151500	1					
ANR	1152380	Callee	opj_create_decompress		1151500	0					
ANR	1152381	Identifier	opj_create_decompress		1151500	0					
ANR	1152382	ArgumentList	CODEC_JP2		1151500	1					
ANR	1152383	Argument	CODEC_JP2		1151500	0					
ANR	1152384	Identifier	CODEC_JP2		1151500	0					
ANR	1152385	ExpressionStatement	"opj_set_event_mgr ( ( opj_common_ptr ) dinfo , & event_mgr , & msgErrorCallback_vars )"	657:3:21671:21747	1151500	1	True				
ANR	1152386	CallExpression	"opj_set_event_mgr ( ( opj_common_ptr ) dinfo , & event_mgr , & msgErrorCallback_vars )"		1151500	0					
ANR	1152387	Callee	opj_set_event_mgr		1151500	0					
ANR	1152388	Identifier	opj_set_event_mgr		1151500	0					
ANR	1152389	ArgumentList	( opj_common_ptr ) dinfo		1151500	1					
ANR	1152390	Argument	( opj_common_ptr ) dinfo		1151500	0					
ANR	1152391	CastExpression	( opj_common_ptr ) dinfo		1151500	0					
ANR	1152392	CastTarget	opj_common_ptr		1151500	0					
ANR	1152393	Identifier	dinfo		1151500	1					
ANR	1152394	Argument	& event_mgr		1151500	1					
ANR	1152395	UnaryOperationExpression	& event_mgr		1151500	0					
ANR	1152396	UnaryOperator	&		1151500	0					
ANR	1152397	Identifier	event_mgr		1151500	1					
ANR	1152398	Argument	& msgErrorCallback_vars		1151500	2					
ANR	1152399	UnaryOperationExpression	& msgErrorCallback_vars		1151500	0					
ANR	1152400	UnaryOperator	&		1151500	0					
ANR	1152401	Identifier	msgErrorCallback_vars		1151500	1					
ANR	1152402	ExpressionStatement	"opj_setup_decoder ( dinfo , & parameters )"	660:3:21847:21884	1151500	2	True				
ANR	1152403	CallExpression	"opj_setup_decoder ( dinfo , & parameters )"		1151500	0					
ANR	1152404	Callee	opj_setup_decoder		1151500	0					
ANR	1152405	Identifier	opj_setup_decoder		1151500	0					
ANR	1152406	ArgumentList	dinfo		1151500	1					
ANR	1152407	Argument	dinfo		1151500	0					
ANR	1152408	Identifier	dinfo		1151500	0					
ANR	1152409	Argument	& parameters		1151500	1					
ANR	1152410	UnaryOperationExpression	& parameters		1151500	0					
ANR	1152411	UnaryOperator	&		1151500	0					
ANR	1152412	Identifier	parameters		1151500	1					
ANR	1152413	ExpressionStatement	"cio = opj_cio_open ( ( opj_common_ptr ) dinfo , src , file_length )"	663:3:21921:21980	1151500	3	True				
ANR	1152414	AssignmentExpression	"cio = opj_cio_open ( ( opj_common_ptr ) dinfo , src , file_length )"		1151500	0		=			
ANR	1152415	Identifier	cio		1151500	0					
ANR	1152416	CallExpression	"opj_cio_open ( ( opj_common_ptr ) dinfo , src , file_length )"		1151500	1					
ANR	1152417	Callee	opj_cio_open		1151500	0					
ANR	1152418	Identifier	opj_cio_open		1151500	0					
ANR	1152419	ArgumentList	( opj_common_ptr ) dinfo		1151500	1					
ANR	1152420	Argument	( opj_common_ptr ) dinfo		1151500	0					
ANR	1152421	CastExpression	( opj_common_ptr ) dinfo		1151500	0					
ANR	1152422	CastTarget	opj_common_ptr		1151500	0					
ANR	1152423	Identifier	dinfo		1151500	1					
ANR	1152424	Argument	src		1151500	1					
ANR	1152425	Identifier	src		1151500	0					
ANR	1152426	Argument	file_length		1151500	2					
ANR	1152427	Identifier	file_length		1151500	0					
ANR	1152428	ExpressionStatement	"image = opj_decode ( dinfo , cio )"	666:3:22045:22075	1151500	4	True				
ANR	1152429	AssignmentExpression	"image = opj_decode ( dinfo , cio )"		1151500	0		=			
ANR	1152430	Identifier	image		1151500	0					
ANR	1152431	CallExpression	"opj_decode ( dinfo , cio )"		1151500	1					
ANR	1152432	Callee	opj_decode		1151500	0					
ANR	1152433	Identifier	opj_decode		1151500	0					
ANR	1152434	ArgumentList	dinfo		1151500	1					
ANR	1152435	Argument	dinfo		1151500	0					
ANR	1152436	Identifier	dinfo		1151500	0					
ANR	1152437	Argument	cio		1151500	1					
ANR	1152438	Identifier	cio		1151500	0					
ANR	1152439	IfStatement	if ( ! image )		1151500	5					
ANR	1152440	Condition	! image	667:6:22084:22089	1151500	0	True				
ANR	1152441	UnaryOperationExpression	! image		1151500	0					
ANR	1152442	UnaryOperator	!		1151500	0					
ANR	1152443	Identifier	image		1151500	1					
ANR	1152444	CompoundStatement		172:14:6138:6138	1151500	1					
ANR	1152445	ExpressionStatement	"fprintf ( stderr , ""ERROR -> j2k_to_image: failed to decode image!\\n"" )"	668:4:22099:22166	1151500	0	True				
ANR	1152446	CallExpression	"fprintf ( stderr , ""ERROR -> j2k_to_image: failed to decode image!\\n"" )"		1151500	0					
ANR	1152447	Callee	fprintf		1151500	0					
ANR	1152448	Identifier	fprintf		1151500	0					
ANR	1152449	ArgumentList	stderr		1151500	1					
ANR	1152450	Argument	stderr		1151500	0					
ANR	1152451	Identifier	stderr		1151500	0					
ANR	1152452	Argument	"""ERROR -> j2k_to_image: failed to decode image!\\n"""		1151500	1					
ANR	1152453	PrimaryExpression	"""ERROR -> j2k_to_image: failed to decode image!\\n"""		1151500	0					
ANR	1152454	ExpressionStatement	opj_destroy_decompress ( dinfo )	669:4:22173:22202	1151500	1	True				
ANR	1152455	CallExpression	opj_destroy_decompress ( dinfo )		1151500	0					
ANR	1152456	Callee	opj_destroy_decompress		1151500	0					
ANR	1152457	Identifier	opj_destroy_decompress		1151500	0					
ANR	1152458	ArgumentList	dinfo		1151500	1					
ANR	1152459	Argument	dinfo		1151500	0					
ANR	1152460	Identifier	dinfo		1151500	0					
ANR	1152461	ExpressionStatement	opj_cio_close ( cio )	670:4:22209:22227	1151500	2	True				
ANR	1152462	CallExpression	opj_cio_close ( cio )		1151500	0					
ANR	1152463	Callee	opj_cio_close		1151500	0					
ANR	1152464	Identifier	opj_cio_close		1151500	0					
ANR	1152465	ArgumentList	cio		1151500	1					
ANR	1152466	Argument	cio		1151500	0					
ANR	1152467	Identifier	cio		1151500	0					
ANR	1152468	ReturnStatement	return 1 ;	671:4:22234:22242	1151500	3	True				
ANR	1152469	PrimaryExpression	1		1151500	0					
ANR	1152470	ExpressionStatement	opj_cio_close ( cio )	675:3:22288:22306	1151500	6	True				
ANR	1152471	CallExpression	opj_cio_close ( cio )		1151500	0					
ANR	1152472	Callee	opj_cio_close		1151500	0					
ANR	1152473	Identifier	opj_cio_close		1151500	0					
ANR	1152474	ArgumentList	cio		1151500	1					
ANR	1152475	Argument	cio		1151500	0					
ANR	1152476	Identifier	cio		1151500	0					
ANR	1152477	BreakStatement	break ;	678:2:22318:22323	1151500	5	True				
ANR	1152478	Label	case JPT_CFMT :	680:2:22330:22343	1151500	6	True				
ANR	1152479	Identifier	JPT_CFMT		1151500	0					
ANR	1152480	CompoundStatement		186:2:6394:6394	1151500	7					
ANR	1152481	ExpressionStatement	dinfo = opj_create_decompress ( CODEC_JPT )	685:3:22413:22453	1151500	0	True				
ANR	1152482	AssignmentExpression	dinfo = opj_create_decompress ( CODEC_JPT )		1151500	0		=			
ANR	1152483	Identifier	dinfo		1151500	0					
ANR	1152484	CallExpression	opj_create_decompress ( CODEC_JPT )		1151500	1					
ANR	1152485	Callee	opj_create_decompress		1151500	0					
ANR	1152486	Identifier	opj_create_decompress		1151500	0					
ANR	1152487	ArgumentList	CODEC_JPT		1151500	1					
ANR	1152488	Argument	CODEC_JPT		1151500	0					
ANR	1152489	Identifier	CODEC_JPT		1151500	0					
ANR	1152490	ExpressionStatement	"opj_set_event_mgr ( ( opj_common_ptr ) dinfo , & event_mgr , & msgErrorCallback_vars )"	688:3:22529:22605	1151500	1	True				
ANR	1152491	CallExpression	"opj_set_event_mgr ( ( opj_common_ptr ) dinfo , & event_mgr , & msgErrorCallback_vars )"		1151500	0					
ANR	1152492	Callee	opj_set_event_mgr		1151500	0					
ANR	1152493	Identifier	opj_set_event_mgr		1151500	0					
ANR	1152494	ArgumentList	( opj_common_ptr ) dinfo		1151500	1					
ANR	1152495	Argument	( opj_common_ptr ) dinfo		1151500	0					
ANR	1152496	CastExpression	( opj_common_ptr ) dinfo		1151500	0					
ANR	1152497	CastTarget	opj_common_ptr		1151500	0					
ANR	1152498	Identifier	dinfo		1151500	1					
ANR	1152499	Argument	& event_mgr		1151500	1					
ANR	1152500	UnaryOperationExpression	& event_mgr		1151500	0					
ANR	1152501	UnaryOperator	&		1151500	0					
ANR	1152502	Identifier	event_mgr		1151500	1					
ANR	1152503	Argument	& msgErrorCallback_vars		1151500	2					
ANR	1152504	UnaryOperationExpression	& msgErrorCallback_vars		1151500	0					
ANR	1152505	UnaryOperator	&		1151500	0					
ANR	1152506	Identifier	msgErrorCallback_vars		1151500	1					
ANR	1152507	ExpressionStatement	"opj_setup_decoder ( dinfo , & parameters )"	691:3:22683:22720	1151500	2	True				
ANR	1152508	CallExpression	"opj_setup_decoder ( dinfo , & parameters )"		1151500	0					
ANR	1152509	Callee	opj_setup_decoder		1151500	0					
ANR	1152510	Identifier	opj_setup_decoder		1151500	0					
ANR	1152511	ArgumentList	dinfo		1151500	1					
ANR	1152512	Argument	dinfo		1151500	0					
ANR	1152513	Identifier	dinfo		1151500	0					
ANR	1152514	Argument	& parameters		1151500	1					
ANR	1152515	UnaryOperationExpression	& parameters		1151500	0					
ANR	1152516	UnaryOperator	&		1151500	0					
ANR	1152517	Identifier	parameters		1151500	1					
ANR	1152518	ExpressionStatement	"cio = opj_cio_open ( ( opj_common_ptr ) dinfo , src , file_length )"	694:3:22757:22816	1151500	3	True				
ANR	1152519	AssignmentExpression	"cio = opj_cio_open ( ( opj_common_ptr ) dinfo , src , file_length )"		1151500	0		=			
ANR	1152520	Identifier	cio		1151500	0					
ANR	1152521	CallExpression	"opj_cio_open ( ( opj_common_ptr ) dinfo , src , file_length )"		1151500	1					
ANR	1152522	Callee	opj_cio_open		1151500	0					
ANR	1152523	Identifier	opj_cio_open		1151500	0					
ANR	1152524	ArgumentList	( opj_common_ptr ) dinfo		1151500	1					
ANR	1152525	Argument	( opj_common_ptr ) dinfo		1151500	0					
ANR	1152526	CastExpression	( opj_common_ptr ) dinfo		1151500	0					
ANR	1152527	CastTarget	opj_common_ptr		1151500	0					
ANR	1152528	Identifier	dinfo		1151500	1					
ANR	1152529	Argument	src		1151500	1					
ANR	1152530	Identifier	src		1151500	0					
ANR	1152531	Argument	file_length		1151500	2					
ANR	1152532	Identifier	file_length		1151500	0					
ANR	1152533	ExpressionStatement	"image = opj_decode ( dinfo , cio )"	697:3:22881:22911	1151500	4	True				
ANR	1152534	AssignmentExpression	"image = opj_decode ( dinfo , cio )"		1151500	0		=			
ANR	1152535	Identifier	image		1151500	0					
ANR	1152536	CallExpression	"opj_decode ( dinfo , cio )"		1151500	1					
ANR	1152537	Callee	opj_decode		1151500	0					
ANR	1152538	Identifier	opj_decode		1151500	0					
ANR	1152539	ArgumentList	dinfo		1151500	1					
ANR	1152540	Argument	dinfo		1151500	0					
ANR	1152541	Identifier	dinfo		1151500	0					
ANR	1152542	Argument	cio		1151500	1					
ANR	1152543	Identifier	cio		1151500	0					
ANR	1152544	IfStatement	if ( ! image )		1151500	5					
ANR	1152545	Condition	! image	698:6:22920:22925	1151500	0	True				
ANR	1152546	UnaryOperationExpression	! image		1151500	0					
ANR	1152547	UnaryOperator	!		1151500	0					
ANR	1152548	Identifier	image		1151500	1					
ANR	1152549	CompoundStatement		203:14:6974:6974	1151500	1					
ANR	1152550	ExpressionStatement	"fprintf ( stderr , ""ERROR -> j2k_to_image: failed to decode image!\\n"" )"	699:4:22935:23002	1151500	0	True				
ANR	1152551	CallExpression	"fprintf ( stderr , ""ERROR -> j2k_to_image: failed to decode image!\\n"" )"		1151500	0					
ANR	1152552	Callee	fprintf		1151500	0					
ANR	1152553	Identifier	fprintf		1151500	0					
ANR	1152554	ArgumentList	stderr		1151500	1					
ANR	1152555	Argument	stderr		1151500	0					
ANR	1152556	Identifier	stderr		1151500	0					
ANR	1152557	Argument	"""ERROR -> j2k_to_image: failed to decode image!\\n"""		1151500	1					
ANR	1152558	PrimaryExpression	"""ERROR -> j2k_to_image: failed to decode image!\\n"""		1151500	0					
ANR	1152559	ExpressionStatement	opj_destroy_decompress ( dinfo )	700:4:23009:23038	1151500	1	True				
ANR	1152560	CallExpression	opj_destroy_decompress ( dinfo )		1151500	0					
ANR	1152561	Callee	opj_destroy_decompress		1151500	0					
ANR	1152562	Identifier	opj_destroy_decompress		1151500	0					
ANR	1152563	ArgumentList	dinfo		1151500	1					
ANR	1152564	Argument	dinfo		1151500	0					
ANR	1152565	Identifier	dinfo		1151500	0					
ANR	1152566	ExpressionStatement	opj_cio_close ( cio )	701:4:23045:23063	1151500	2	True				
ANR	1152567	CallExpression	opj_cio_close ( cio )		1151500	0					
ANR	1152568	Callee	opj_cio_close		1151500	0					
ANR	1152569	Identifier	opj_cio_close		1151500	0					
ANR	1152570	ArgumentList	cio		1151500	1					
ANR	1152571	Argument	cio		1151500	0					
ANR	1152572	Identifier	cio		1151500	0					
ANR	1152573	ReturnStatement	return 1 ;	702:4:23070:23078	1151500	3	True				
ANR	1152574	PrimaryExpression	1		1151500	0					
ANR	1152575	ExpressionStatement	opj_cio_close ( cio )	706:3:23124:23142	1151500	6	True				
ANR	1152576	CallExpression	opj_cio_close ( cio )		1151500	0					
ANR	1152577	Callee	opj_cio_close		1151500	0					
ANR	1152578	Identifier	opj_cio_close		1151500	0					
ANR	1152579	ArgumentList	cio		1151500	1					
ANR	1152580	Argument	cio		1151500	0					
ANR	1152581	Identifier	cio		1151500	0					
ANR	1152582	BreakStatement	break ;	708:2:23152:23157	1151500	8	True				
ANR	1152583	Label	default :	710:2:23164:23171	1151500	9	True				
ANR	1152584	Identifier	default		1151500	0					
ANR	1152585	ExpressionStatement	"fprintf ( stderr , ""skipping file..\\n"" )"	711:3:23177:23213	1151500	10	True				
ANR	1152586	CallExpression	"fprintf ( stderr , ""skipping file..\\n"" )"		1151500	0					
ANR	1152587	Callee	fprintf		1151500	0					
ANR	1152588	Identifier	fprintf		1151500	0					
ANR	1152589	ArgumentList	stderr		1151500	1					
ANR	1152590	Argument	stderr		1151500	0					
ANR	1152591	Identifier	stderr		1151500	0					
ANR	1152592	Argument	"""skipping file..\\n"""		1151500	1					
ANR	1152593	PrimaryExpression	"""skipping file..\\n"""		1151500	0					
ANR	1152594	ContinueStatement	continue ;	712:3:23219:23227	1151500	11	True				
ANR	1152595	IfStatement	if ( parameters . infile && parameters . infile [ 0 ] != '\\0' )		1151500	4					
ANR	1152596	Condition	parameters . infile && parameters . infile [ 0 ] != '\\0'	716:6:23294:23340	1151500	0	True				
ANR	1152597	AndExpression	parameters . infile && parameters . infile [ 0 ] != '\\0'		1151500	0		&&			
ANR	1152598	MemberAccess	parameters . infile		1151500	0					
ANR	1152599	Identifier	parameters		1151500	0					
ANR	1152600	Identifier	infile		1151500	1					
ANR	1152601	EqualityExpression	parameters . infile [ 0 ] != '\\0'		1151500	1		!=			
ANR	1152602	ArrayIndexing	parameters . infile [ 0 ]		1151500	0					
ANR	1152603	MemberAccess	parameters . infile		1151500	0					
ANR	1152604	Identifier	parameters		1151500	0					
ANR	1152605	Identifier	infile		1151500	1					
ANR	1152606	PrimaryExpression	0		1151500	1					
ANR	1152607	PrimaryExpression	'\\0'		1151500	1					
ANR	1152608	CompoundStatement		221:55:7389:7389	1151500	1					
ANR	1152609	ExpressionStatement	opj_free ( src )	717:3:23349:23362	1151500	0	True				
ANR	1152610	CallExpression	opj_free ( src )		1151500	0					
ANR	1152611	Callee	opj_free		1151500	0					
ANR	1152612	Identifier	opj_free		1151500	0					
ANR	1152613	ArgumentList	src		1151500	1					
ANR	1152614	Argument	src		1151500	0					
ANR	1152615	Identifier	src		1151500	0					
ANR	1152616	ElseStatement	else		1151500	0					
ANR	1152617	CompoundStatement		223:9:7420:7420	1151500	0					
ANR	1152618	ExpressionStatement	"( * env ) -> ReleaseByteArrayElements ( env , jba , jbBody , 0 )"	719:3:23380:23433	1151500	0	True				
ANR	1152619	CallExpression	"( * env ) -> ReleaseByteArrayElements ( env , jba , jbBody , 0 )"		1151500	0					
ANR	1152620	Callee	( * env ) -> ReleaseByteArrayElements		1151500	0					
ANR	1152621	PtrMemberAccess	( * env ) -> ReleaseByteArrayElements		1151500	0					
ANR	1152622	UnaryOperationExpression	* env		1151500	0					
ANR	1152623	UnaryOperator	*		1151500	0					
ANR	1152624	Identifier	env		1151500	1					
ANR	1152625	Identifier	ReleaseByteArrayElements		1151500	1					
ANR	1152626	ArgumentList	env		1151500	1					
ANR	1152627	Argument	env		1151500	0					
ANR	1152628	Identifier	env		1151500	0					
ANR	1152629	Argument	jba		1151500	1					
ANR	1152630	Identifier	jba		1151500	0					
ANR	1152631	Argument	jbBody		1151500	2					
ANR	1152632	Identifier	jbBody		1151500	0					
ANR	1152633	Argument	0		1151500	3					
ANR	1152634	PrimaryExpression	0		1151500	0					
ANR	1152635	ExpressionStatement	src = NULL	721:2:23443:23453	1151500	5	True				
ANR	1152636	AssignmentExpression	src = NULL		1151500	0		=			
ANR	1152637	Identifier	src		1151500	0					
ANR	1152638	Identifier	NULL		1151500	1					
ANR	1152639	SwitchStatement	switch ( parameters . cod_format )		1151500	6					
ANR	1152640	Condition	parameters . cod_format	727:10:23672:23692	1151500	0	True				
ANR	1152641	MemberAccess	parameters . cod_format		1151500	0					
ANR	1152642	Identifier	parameters		1151500	0					
ANR	1152643	Identifier	cod_format		1151500	1					
ANR	1152644	CompoundStatement		232:33:7741:7741	1151500	1					
ANR	1152645	Label	case PXM_DFMT :	728:2:23700:23713	1151500	0	True				
ANR	1152646	Identifier	PXM_DFMT		1151500	0					
ANR	1152647	IfStatement	"if ( imagetopnm ( image , parameters . outfile ) )"		1151500	1					
ANR	1152648	Condition	"imagetopnm ( image , parameters . outfile )"	729:7:23743:23779	1151500	0	True				
ANR	1152649	CallExpression	"imagetopnm ( image , parameters . outfile )"		1151500	0					
ANR	1152650	Callee	imagetopnm		1151500	0					
ANR	1152651	Identifier	imagetopnm		1151500	0					
ANR	1152652	ArgumentList	image		1151500	1					
ANR	1152653	Argument	image		1151500	0					
ANR	1152654	Identifier	image		1151500	0					
ANR	1152655	Argument	parameters . outfile		1151500	1					
ANR	1152656	MemberAccess	parameters . outfile		1151500	0					
ANR	1152657	Identifier	parameters		1151500	0					
ANR	1152658	Identifier	outfile		1151500	1					
ANR	1152659	CompoundStatement		234:46:7828:7828	1151500	1					
ANR	1152660	ExpressionStatement	"fprintf ( stdout , ""Outfile %s not generated\\n"" , parameters . outfile )"	730:4:23789:23852	1151500	0	True				
ANR	1152661	CallExpression	"fprintf ( stdout , ""Outfile %s not generated\\n"" , parameters . outfile )"		1151500	0					
ANR	1152662	Callee	fprintf		1151500	0					
ANR	1152663	Identifier	fprintf		1151500	0					
ANR	1152664	ArgumentList	stdout		1151500	1					
ANR	1152665	Argument	stdout		1151500	0					
ANR	1152666	Identifier	stdout		1151500	0					
ANR	1152667	Argument	"""Outfile %s not generated\\n"""		1151500	1					
ANR	1152668	PrimaryExpression	"""Outfile %s not generated\\n"""		1151500	0					
ANR	1152669	Argument	parameters . outfile		1151500	2					
ANR	1152670	MemberAccess	parameters . outfile		1151500	0					
ANR	1152671	Identifier	parameters		1151500	0					
ANR	1152672	Identifier	outfile		1151500	1					
ANR	1152673	ElseStatement	else		1151500	0					
ANR	1152674	CompoundStatement		237:8:7915:7915	1151500	0					
ANR	1152675	ExpressionStatement	"fprintf ( stdout , ""Generated Outfile %s\\n"" , parameters . outfile )"	733:4:23876:23935	1151500	0	True				
ANR	1152676	CallExpression	"fprintf ( stdout , ""Generated Outfile %s\\n"" , parameters . outfile )"		1151500	0					
ANR	1152677	Callee	fprintf		1151500	0					
ANR	1152678	Identifier	fprintf		1151500	0					
ANR	1152679	ArgumentList	stdout		1151500	1					
ANR	1152680	Argument	stdout		1151500	0					
ANR	1152681	Identifier	stdout		1151500	0					
ANR	1152682	Argument	"""Generated Outfile %s\\n"""		1151500	1					
ANR	1152683	PrimaryExpression	"""Generated Outfile %s\\n"""		1151500	0					
ANR	1152684	Argument	parameters . outfile		1151500	2					
ANR	1152685	MemberAccess	parameters . outfile		1151500	0					
ANR	1152686	Identifier	parameters		1151500	0					
ANR	1152687	Identifier	outfile		1151500	1					
ANR	1152688	BreakStatement	break ;	735:3:23947:23952	1151500	2	True				
ANR	1152689	Label	case PGX_DFMT :	737:2:23959:23972	1151500	3	True				
ANR	1152690	Identifier	PGX_DFMT		1151500	0					
ANR	1152691	IfStatement	"if ( imagetopgx ( image , parameters . outfile ) )"		1151500	4					
ANR	1152692	Condition	"imagetopgx ( image , parameters . outfile )"	738:6:23993:24029	1151500	0	True				
ANR	1152693	CallExpression	"imagetopgx ( image , parameters . outfile )"		1151500	0					
ANR	1152694	Callee	imagetopgx		1151500	0					
ANR	1152695	Identifier	imagetopgx		1151500	0					
ANR	1152696	ArgumentList	image		1151500	1					
ANR	1152697	Argument	image		1151500	0					
ANR	1152698	Identifier	image		1151500	0					
ANR	1152699	Argument	parameters . outfile		1151500	1					
ANR	1152700	MemberAccess	parameters . outfile		1151500	0					
ANR	1152701	Identifier	parameters		1151500	0					
ANR	1152702	Identifier	outfile		1151500	1					
ANR	1152703	CompoundStatement		243:44:8077:8077	1151500	1					
ANR	1152704	ExpressionStatement	"fprintf ( stdout , ""Outfile %s not generated\\n"" , parameters . outfile )"	739:4:24038:24101	1151500	0	True				
ANR	1152705	CallExpression	"fprintf ( stdout , ""Outfile %s not generated\\n"" , parameters . outfile )"		1151500	0					
ANR	1152706	Callee	fprintf		1151500	0					
ANR	1152707	Identifier	fprintf		1151500	0					
ANR	1152708	ArgumentList	stdout		1151500	1					
ANR	1152709	Argument	stdout		1151500	0					
ANR	1152710	Identifier	stdout		1151500	0					
ANR	1152711	Argument	"""Outfile %s not generated\\n"""		1151500	1					
ANR	1152712	PrimaryExpression	"""Outfile %s not generated\\n"""		1151500	0					
ANR	1152713	Argument	parameters . outfile		1151500	2					
ANR	1152714	MemberAccess	parameters . outfile		1151500	0					
ANR	1152715	Identifier	parameters		1151500	0					
ANR	1152716	Identifier	outfile		1151500	1					
ANR	1152717	ElseStatement	else		1151500	0					
ANR	1152718	CompoundStatement		246:8:8164:8164	1151500	0					
ANR	1152719	ExpressionStatement	"fprintf ( stdout , ""Generated Outfile %s\\n"" , parameters . outfile )"	742:4:24125:24184	1151500	0	True				
ANR	1152720	CallExpression	"fprintf ( stdout , ""Generated Outfile %s\\n"" , parameters . outfile )"		1151500	0					
ANR	1152721	Callee	fprintf		1151500	0					
ANR	1152722	Identifier	fprintf		1151500	0					
ANR	1152723	ArgumentList	stdout		1151500	1					
ANR	1152724	Argument	stdout		1151500	0					
ANR	1152725	Identifier	stdout		1151500	0					
ANR	1152726	Argument	"""Generated Outfile %s\\n"""		1151500	1					
ANR	1152727	PrimaryExpression	"""Generated Outfile %s\\n"""		1151500	0					
ANR	1152728	Argument	parameters . outfile		1151500	2					
ANR	1152729	MemberAccess	parameters . outfile		1151500	0					
ANR	1152730	Identifier	parameters		1151500	0					
ANR	1152731	Identifier	outfile		1151500	1					
ANR	1152732	BreakStatement	break ;	744:3:24196:24201	1151500	5	True				
ANR	1152733	Label	case BMP_DFMT :	746:2:24208:24221	1151500	6	True				
ANR	1152734	Identifier	BMP_DFMT		1151500	0					
ANR	1152735	IfStatement	"if ( imagetobmp ( image , parameters . outfile ) )"		1151500	7					
ANR	1152736	Condition	"imagetobmp ( image , parameters . outfile )"	747:6:24242:24278	1151500	0	True				
ANR	1152737	CallExpression	"imagetobmp ( image , parameters . outfile )"		1151500	0					
ANR	1152738	Callee	imagetobmp		1151500	0					
ANR	1152739	Identifier	imagetobmp		1151500	0					
ANR	1152740	ArgumentList	image		1151500	1					
ANR	1152741	Argument	image		1151500	0					
ANR	1152742	Identifier	image		1151500	0					
ANR	1152743	Argument	parameters . outfile		1151500	1					
ANR	1152744	MemberAccess	parameters . outfile		1151500	0					
ANR	1152745	Identifier	parameters		1151500	0					
ANR	1152746	Identifier	outfile		1151500	1					
ANR	1152747	CompoundStatement		252:44:8326:8326	1151500	1					
ANR	1152748	ExpressionStatement	"fprintf ( stdout , ""Outfile %s not generated\\n"" , parameters . outfile )"	748:4:24287:24350	1151500	0	True				
ANR	1152749	CallExpression	"fprintf ( stdout , ""Outfile %s not generated\\n"" , parameters . outfile )"		1151500	0					
ANR	1152750	Callee	fprintf		1151500	0					
ANR	1152751	Identifier	fprintf		1151500	0					
ANR	1152752	ArgumentList	stdout		1151500	1					
ANR	1152753	Argument	stdout		1151500	0					
ANR	1152754	Identifier	stdout		1151500	0					
ANR	1152755	Argument	"""Outfile %s not generated\\n"""		1151500	1					
ANR	1152756	PrimaryExpression	"""Outfile %s not generated\\n"""		1151500	0					
ANR	1152757	Argument	parameters . outfile		1151500	2					
ANR	1152758	MemberAccess	parameters . outfile		1151500	0					
ANR	1152759	Identifier	parameters		1151500	0					
ANR	1152760	Identifier	outfile		1151500	1					
ANR	1152761	ElseStatement	else		1151500	0					
ANR	1152762	CompoundStatement		255:8:8413:8413	1151500	0					
ANR	1152763	ExpressionStatement	"fprintf ( stdout , ""Generated Outfile %s\\n"" , parameters . outfile )"	751:4:24374:24433	1151500	0	True				
ANR	1152764	CallExpression	"fprintf ( stdout , ""Generated Outfile %s\\n"" , parameters . outfile )"		1151500	0					
ANR	1152765	Callee	fprintf		1151500	0					
ANR	1152766	Identifier	fprintf		1151500	0					
ANR	1152767	ArgumentList	stdout		1151500	1					
ANR	1152768	Argument	stdout		1151500	0					
ANR	1152769	Identifier	stdout		1151500	0					
ANR	1152770	Argument	"""Generated Outfile %s\\n"""		1151500	1					
ANR	1152771	PrimaryExpression	"""Generated Outfile %s\\n"""		1151500	0					
ANR	1152772	Argument	parameters . outfile		1151500	2					
ANR	1152773	MemberAccess	parameters . outfile		1151500	0					
ANR	1152774	Identifier	parameters		1151500	0					
ANR	1152775	Identifier	outfile		1151500	1					
ANR	1152776	BreakStatement	break ;	753:3:24445:24450	1151500	8	True				
ANR	1152777	ExpressionStatement	"printf ( ""C: checking thresholds\\n"" )"	759:2:24562:24596	1151500	7	True				
ANR	1152778	CallExpression	"printf ( ""C: checking thresholds\\n"" )"		1151500	0					
ANR	1152779	Callee	printf		1151500	0					
ANR	1152780	Identifier	printf		1151500	0					
ANR	1152781	ArgumentList	"""C: checking thresholds\\n"""		1151500	1					
ANR	1152782	Argument	"""C: checking thresholds\\n"""		1151500	0					
ANR	1152783	PrimaryExpression	"""C: checking thresholds\\n"""		1151500	0					
ANR	1152784	ExpressionStatement	w = image -> comps [ 0 ] . w	764:2:24885:24906	1151500	8	True				
ANR	1152785	AssignmentExpression	w = image -> comps [ 0 ] . w		1151500	0		=			
ANR	1152786	Identifier	w		1151500	0					
ANR	1152787	MemberAccess	image -> comps [ 0 ] . w		1151500	1					
ANR	1152788	ArrayIndexing	image -> comps [ 0 ]		1151500	0					
ANR	1152789	PtrMemberAccess	image -> comps		1151500	0					
ANR	1152790	Identifier	image		1151500	0					
ANR	1152791	Identifier	comps		1151500	1					
ANR	1152792	PrimaryExpression	0		1151500	1					
ANR	1152793	Identifier	w		1151500	1					
ANR	1152794	ExpressionStatement	h = image -> comps [ 0 ] . h	765:2:24911:24932	1151500	9	True				
ANR	1152795	AssignmentExpression	h = image -> comps [ 0 ] . h		1151500	0		=			
ANR	1152796	Identifier	h		1151500	0					
ANR	1152797	MemberAccess	image -> comps [ 0 ] . h		1151500	1					
ANR	1152798	ArrayIndexing	image -> comps [ 0 ]		1151500	0					
ANR	1152799	PtrMemberAccess	image -> comps		1151500	0					
ANR	1152800	Identifier	image		1151500	0					
ANR	1152801	Identifier	comps		1151500	1					
ANR	1152802	PrimaryExpression	0		1151500	1					
ANR	1152803	Identifier	h		1151500	1					
ANR	1152804	IfStatement	if ( image -> numcomps == 3 )		1151500	10					
ANR	1152805	Condition	image -> numcomps == 3	767:6:24943:24960	1151500	0	True				
ANR	1152806	EqualityExpression	image -> numcomps == 3		1151500	0		==			
ANR	1152807	PtrMemberAccess	image -> numcomps		1151500	0					
ANR	1152808	Identifier	image		1151500	0					
ANR	1152809	Identifier	numcomps		1151500	1					
ANR	1152810	PrimaryExpression	3		1151500	1					
ANR	1152811	CompoundStatement		272:26:9009:9009	1151500	1					
ANR	1152812	ExpressionStatement	ptr = image -> comps [ 0 ] . data	768:3:24999:25025	1151500	0	True				
ANR	1152813	AssignmentExpression	ptr = image -> comps [ 0 ] . data		1151500	0		=			
ANR	1152814	Identifier	ptr		1151500	0					
ANR	1152815	MemberAccess	image -> comps [ 0 ] . data		1151500	1					
ANR	1152816	ArrayIndexing	image -> comps [ 0 ]		1151500	0					
ANR	1152817	PtrMemberAccess	image -> comps		1151500	0					
ANR	1152818	Identifier	image		1151500	0					
ANR	1152819	Identifier	comps		1151500	1					
ANR	1152820	PrimaryExpression	0		1151500	1					
ANR	1152821	Identifier	data		1151500	1					
ANR	1152822	ExpressionStatement	ptr1 = image -> comps [ 1 ] . data	769:3:25031:25058	1151500	1	True				
ANR	1152823	AssignmentExpression	ptr1 = image -> comps [ 1 ] . data		1151500	0		=			
ANR	1152824	Identifier	ptr1		1151500	0					
ANR	1152825	MemberAccess	image -> comps [ 1 ] . data		1151500	1					
ANR	1152826	ArrayIndexing	image -> comps [ 1 ]		1151500	0					
ANR	1152827	PtrMemberAccess	image -> comps		1151500	0					
ANR	1152828	Identifier	image		1151500	0					
ANR	1152829	Identifier	comps		1151500	1					
ANR	1152830	PrimaryExpression	1		1151500	1					
ANR	1152831	Identifier	data		1151500	1					
ANR	1152832	ExpressionStatement	ptr2 = image -> comps [ 2 ] . data	770:3:25064:25091	1151500	2	True				
ANR	1152833	AssignmentExpression	ptr2 = image -> comps [ 2 ] . data		1151500	0		=			
ANR	1152834	Identifier	ptr2		1151500	0					
ANR	1152835	MemberAccess	image -> comps [ 2 ] . data		1151500	1					
ANR	1152836	ArrayIndexing	image -> comps [ 2 ]		1151500	0					
ANR	1152837	PtrMemberAccess	image -> comps		1151500	0					
ANR	1152838	Identifier	image		1151500	0					
ANR	1152839	Identifier	comps		1151500	1					
ANR	1152840	PrimaryExpression	2		1151500	1					
ANR	1152841	Identifier	data		1151500	1					
ANR	1152842	IfStatement	if ( image -> comps [ 0 ] . sgnd )		1151500	3					
ANR	1152843	Condition	image -> comps [ 0 ] . sgnd	772:7:25127:25146	1151500	0	True				
ANR	1152844	MemberAccess	image -> comps [ 0 ] . sgnd		1151500	0					
ANR	1152845	ArrayIndexing	image -> comps [ 0 ]		1151500	0					
ANR	1152846	PtrMemberAccess	image -> comps		1151500	0					
ANR	1152847	Identifier	image		1151500	0					
ANR	1152848	Identifier	comps		1151500	1					
ANR	1152849	PrimaryExpression	0		1151500	1					
ANR	1152850	Identifier	sgnd		1151500	1					
ANR	1152851	CompoundStatement		277:29:9195:9195	1151500	1					
ANR	1152852	ExpressionStatement	min_value = - 128	773:4:25156:25172	1151500	0	True				
ANR	1152853	AssignmentExpression	min_value = - 128		1151500	0		=			
ANR	1152854	Identifier	min_value		1151500	0					
ANR	1152855	UnaryOperationExpression	- 128		1151500	1					
ANR	1152856	UnaryOperator	-		1151500	0					
ANR	1152857	PrimaryExpression	128		1151500	1					
ANR	1152858	ExpressionStatement	max_value = 127	774:4:25179:25194	1151500	1	True				
ANR	1152859	AssignmentExpression	max_value = 127		1151500	0		=			
ANR	1152860	Identifier	max_value		1151500	0					
ANR	1152861	PrimaryExpression	127		1151500	1					
ANR	1152862	ElseStatement	else		1151500	0					
ANR	1152863	CompoundStatement		280:10:9253:9253	1151500	0					
ANR	1152864	ExpressionStatement	min_value = 0	776:4:25214:25227	1151500	0	True				
ANR	1152865	AssignmentExpression	min_value = 0		1151500	0		=			
ANR	1152866	Identifier	min_value		1151500	0					
ANR	1152867	PrimaryExpression	0		1151500	1					
ANR	1152868	ExpressionStatement	max_value = 255	777:4:25234:25249	1151500	1	True				
ANR	1152869	AssignmentExpression	max_value = 255		1151500	0		=			
ANR	1152870	Identifier	max_value		1151500	0					
ANR	1152871	PrimaryExpression	255		1151500	1					
ANR	1152872	ExpressionStatement	"fid = ( * env ) -> GetFieldID ( env , cls , ""image24"" , ""[I"" )"	781:3:25349:25399	1151500	4	True				
ANR	1152873	AssignmentExpression	"fid = ( * env ) -> GetFieldID ( env , cls , ""image24"" , ""[I"" )"		1151500	0		=			
ANR	1152874	Identifier	fid		1151500	0					
ANR	1152875	CallExpression	"( * env ) -> GetFieldID ( env , cls , ""image24"" , ""[I"" )"		1151500	1					
ANR	1152876	Callee	( * env ) -> GetFieldID		1151500	0					
ANR	1152877	PtrMemberAccess	( * env ) -> GetFieldID		1151500	0					
ANR	1152878	UnaryOperationExpression	* env		1151500	0					
ANR	1152879	UnaryOperator	*		1151500	0					
ANR	1152880	Identifier	env		1151500	1					
ANR	1152881	Identifier	GetFieldID		1151500	1					
ANR	1152882	ArgumentList	env		1151500	1					
ANR	1152883	Argument	env		1151500	0					
ANR	1152884	Identifier	env		1151500	0					
ANR	1152885	Argument	cls		1151500	1					
ANR	1152886	Identifier	cls		1151500	0					
ANR	1152887	Argument	"""image24"""		1151500	2					
ANR	1152888	PrimaryExpression	"""image24"""		1151500	0					
ANR	1152889	Argument	"""[I"""		1151500	3					
ANR	1152890	PrimaryExpression	"""[I"""		1151500	0					
ANR	1152891	ExpressionStatement	"jia = ( * env ) -> GetObjectField ( env , obj , fid )"	782:3:25405:25448	1151500	5	True				
ANR	1152892	AssignmentExpression	"jia = ( * env ) -> GetObjectField ( env , obj , fid )"		1151500	0		=			
ANR	1152893	Identifier	jia		1151500	0					
ANR	1152894	CallExpression	"( * env ) -> GetObjectField ( env , obj , fid )"		1151500	1					
ANR	1152895	Callee	( * env ) -> GetObjectField		1151500	0					
ANR	1152896	PtrMemberAccess	( * env ) -> GetObjectField		1151500	0					
ANR	1152897	UnaryOperationExpression	* env		1151500	0					
ANR	1152898	UnaryOperator	*		1151500	0					
ANR	1152899	Identifier	env		1151500	1					
ANR	1152900	Identifier	GetObjectField		1151500	1					
ANR	1152901	ArgumentList	env		1151500	1					
ANR	1152902	Argument	env		1151500	0					
ANR	1152903	Identifier	env		1151500	0					
ANR	1152904	Argument	obj		1151500	1					
ANR	1152905	Identifier	obj		1151500	0					
ANR	1152906	Argument	fid		1151500	2					
ANR	1152907	Identifier	fid		1151500	0					
ANR	1152908	ExpressionStatement	"jiBody = ( * env ) -> GetIntArrayElements ( env , jia , 0 )"	783:3:25454:25503	1151500	6	True				
ANR	1152909	AssignmentExpression	"jiBody = ( * env ) -> GetIntArrayElements ( env , jia , 0 )"		1151500	0		=			
ANR	1152910	Identifier	jiBody		1151500	0					
ANR	1152911	CallExpression	"( * env ) -> GetIntArrayElements ( env , jia , 0 )"		1151500	1					
ANR	1152912	Callee	( * env ) -> GetIntArrayElements		1151500	0					
ANR	1152913	PtrMemberAccess	( * env ) -> GetIntArrayElements		1151500	0					
ANR	1152914	UnaryOperationExpression	* env		1151500	0					
ANR	1152915	UnaryOperator	*		1151500	0					
ANR	1152916	Identifier	env		1151500	1					
ANR	1152917	Identifier	GetIntArrayElements		1151500	1					
ANR	1152918	ArgumentList	env		1151500	1					
ANR	1152919	Argument	env		1151500	0					
ANR	1152920	Identifier	env		1151500	0					
ANR	1152921	Argument	jia		1151500	1					
ANR	1152922	Identifier	jia		1151500	0					
ANR	1152923	Argument	0		1151500	2					
ANR	1152924	PrimaryExpression	0		1151500	0					
ANR	1152925	ExpressionStatement	ptrIBody = jiBody	784:3:25509:25526	1151500	7	True				
ANR	1152926	AssignmentExpression	ptrIBody = jiBody		1151500	0		=			
ANR	1152927	Identifier	ptrIBody		1151500	0					
ANR	1152928	Identifier	jiBody		1151500	1					
ANR	1152929	ExpressionStatement	"printf ( ""C: transferring image24: %d int to Java pointer=%d\\n"" , image -> numcomps * w * h , ptrIBody )"	785:3:25532:25624	1151500	8	True				
ANR	1152930	CallExpression	"printf ( ""C: transferring image24: %d int to Java pointer=%d\\n"" , image -> numcomps * w * h , ptrIBody )"		1151500	0					
ANR	1152931	Callee	printf		1151500	0					
ANR	1152932	Identifier	printf		1151500	0					
ANR	1152933	ArgumentList	"""C: transferring image24: %d int to Java pointer=%d\\n"""		1151500	1					
ANR	1152934	Argument	"""C: transferring image24: %d int to Java pointer=%d\\n"""		1151500	0					
ANR	1152935	PrimaryExpression	"""C: transferring image24: %d int to Java pointer=%d\\n"""		1151500	0					
ANR	1152936	Argument	image -> numcomps * w * h		1151500	1					
ANR	1152937	MultiplicativeExpression	image -> numcomps * w * h		1151500	0		*			
ANR	1152938	PtrMemberAccess	image -> numcomps		1151500	0					
ANR	1152939	Identifier	image		1151500	0					
ANR	1152940	Identifier	numcomps		1151500	1					
ANR	1152941	MultiplicativeExpression	w * h		1151500	1		*			
ANR	1152942	Identifier	w		1151500	0					
ANR	1152943	Identifier	h		1151500	1					
ANR	1152944	Argument	ptrIBody		1151500	2					
ANR	1152945	Identifier	ptrIBody		1151500	0					
ANR	1152946	ForStatement	for ( i = 0 ; i < w * h ; i ++ )		1151500	9					
ANR	1152947	ForInit	i = 0 ;	787:8:25637:25640	1151500	0	True				
ANR	1152948	AssignmentExpression	i = 0		1151500	0		=			
ANR	1152949	Identifier	i		1151500	0					
ANR	1152950	PrimaryExpression	0		1151500	1					
ANR	1152951	Condition	i < w * h	787:13:25642:25646	1151500	1	True				
ANR	1152952	RelationalExpression	i < w * h		1151500	0		<			
ANR	1152953	Identifier	i		1151500	0					
ANR	1152954	MultiplicativeExpression	w * h		1151500	1		*			
ANR	1152955	Identifier	w		1151500	0					
ANR	1152956	Identifier	h		1151500	1					
ANR	1152957	PostIncDecOperationExpression	i ++	787:20:25649:25651	1151500	2	True				
ANR	1152958	Identifier	i		1151500	0					
ANR	1152959	IncDec	++		1151500	1					
ANR	1152960	CompoundStatement		292:25:9700:9700	1151500	3					
ANR	1152961	ExpressionStatement	tempUC = ( unsigned char ) ( ptr [ i ] )	788:4:25661:25693	1151500	0	True				
ANR	1152962	AssignmentExpression	tempUC = ( unsigned char ) ( ptr [ i ] )		1151500	0		=			
ANR	1152963	Identifier	tempUC		1151500	0					
ANR	1152964	CastExpression	( unsigned char ) ( ptr [ i ] )		1151500	1					
ANR	1152965	CastTarget	unsigned char		1151500	0					
ANR	1152966	ArrayIndexing	ptr [ i ]		1151500	1					
ANR	1152967	Identifier	ptr		1151500	0					
ANR	1152968	Identifier	i		1151500	1					
ANR	1152969	ExpressionStatement	tempUC1 = ( unsigned char ) ( ptr1 [ i ] )	789:4:25700:25734	1151500	1	True				
ANR	1152970	AssignmentExpression	tempUC1 = ( unsigned char ) ( ptr1 [ i ] )		1151500	0		=			
ANR	1152971	Identifier	tempUC1		1151500	0					
ANR	1152972	CastExpression	( unsigned char ) ( ptr1 [ i ] )		1151500	1					
ANR	1152973	CastTarget	unsigned char		1151500	0					
ANR	1152974	ArrayIndexing	ptr1 [ i ]		1151500	1					
ANR	1152975	Identifier	ptr1		1151500	0					
ANR	1152976	Identifier	i		1151500	1					
ANR	1152977	ExpressionStatement	tempUC2 = ( unsigned char ) ( ptr2 [ i ] )	790:4:25741:25775	1151500	2	True				
ANR	1152978	AssignmentExpression	tempUC2 = ( unsigned char ) ( ptr2 [ i ] )		1151500	0		=			
ANR	1152979	Identifier	tempUC2		1151500	0					
ANR	1152980	CastExpression	( unsigned char ) ( ptr2 [ i ] )		1151500	1					
ANR	1152981	CastTarget	unsigned char		1151500	0					
ANR	1152982	ArrayIndexing	ptr2 [ i ]		1151500	1					
ANR	1152983	Identifier	ptr2		1151500	0					
ANR	1152984	Identifier	i		1151500	1					
ANR	1152985	IfStatement	if ( tempUC < min_value )		1151500	3					
ANR	1152986	Condition	tempUC < min_value	792:8:25811:25828	1151500	0	True				
ANR	1152987	RelationalExpression	tempUC < min_value		1151500	0		<			
ANR	1152988	Identifier	tempUC		1151500	0					
ANR	1152989	Identifier	min_value		1151500	1					
ANR	1152990	ExpressionStatement	tempUC = min_value	793:5:25837:25853	1151500	1	True				
ANR	1152991	AssignmentExpression	tempUC = min_value		1151500	0		=			
ANR	1152992	Identifier	tempUC		1151500	0					
ANR	1152993	Identifier	min_value		1151500	1					
ANR	1152994	ElseStatement	else		1151500	0					
ANR	1152995	IfStatement	if ( tempUC > max_value )		1151500	0					
ANR	1152996	Condition	tempUC > max_value	794:13:25869:25886	1151500	0	True				
ANR	1152997	RelationalExpression	tempUC > max_value		1151500	0		>			
ANR	1152998	Identifier	tempUC		1151500	0					
ANR	1152999	Identifier	max_value		1151500	1					
ANR	1153000	ExpressionStatement	tempUC = max_value	795:5:25895:25911	1151500	1	True				
ANR	1153001	AssignmentExpression	tempUC = max_value		1151500	0		=			
ANR	1153002	Identifier	tempUC		1151500	0					
ANR	1153003	Identifier	max_value		1151500	1					
ANR	1153004	IfStatement	if ( tempUC1 < min_value )		1151500	4					
ANR	1153005	Condition	tempUC1 < min_value	796:8:25922:25940	1151500	0	True				
ANR	1153006	RelationalExpression	tempUC1 < min_value		1151500	0		<			
ANR	1153007	Identifier	tempUC1		1151500	0					
ANR	1153008	Identifier	min_value		1151500	1					
ANR	1153009	ExpressionStatement	tempUC1 = min_value	797:5:25949:25966	1151500	1	True				
ANR	1153010	AssignmentExpression	tempUC1 = min_value		1151500	0		=			
ANR	1153011	Identifier	tempUC1		1151500	0					
ANR	1153012	Identifier	min_value		1151500	1					
ANR	1153013	ElseStatement	else		1151500	0					
ANR	1153014	IfStatement	if ( tempUC1 > max_value )		1151500	0					
ANR	1153015	Condition	tempUC1 > max_value	798:13:25982:26000	1151500	0	True				
ANR	1153016	RelationalExpression	tempUC1 > max_value		1151500	0		>			
ANR	1153017	Identifier	tempUC1		1151500	0					
ANR	1153018	Identifier	max_value		1151500	1					
ANR	1153019	ExpressionStatement	tempUC1 = max_value	799:5:26009:26026	1151500	1	True				
ANR	1153020	AssignmentExpression	tempUC1 = max_value		1151500	0		=			
ANR	1153021	Identifier	tempUC1		1151500	0					
ANR	1153022	Identifier	max_value		1151500	1					
ANR	1153023	IfStatement	if ( tempUC2 < min_value )		1151500	5					
ANR	1153024	Condition	tempUC2 < min_value	800:8:26037:26055	1151500	0	True				
ANR	1153025	RelationalExpression	tempUC2 < min_value		1151500	0		<			
ANR	1153026	Identifier	tempUC2		1151500	0					
ANR	1153027	Identifier	min_value		1151500	1					
ANR	1153028	ExpressionStatement	tempUC2 = min_value	801:5:26064:26081	1151500	1	True				
ANR	1153029	AssignmentExpression	tempUC2 = min_value		1151500	0		=			
ANR	1153030	Identifier	tempUC2		1151500	0					
ANR	1153031	Identifier	min_value		1151500	1					
ANR	1153032	ElseStatement	else		1151500	0					
ANR	1153033	IfStatement	if ( tempUC2 > max_value )		1151500	0					
ANR	1153034	Condition	tempUC2 > max_value	802:13:26097:26115	1151500	0	True				
ANR	1153035	RelationalExpression	tempUC2 > max_value		1151500	0		>			
ANR	1153036	Identifier	tempUC2		1151500	0					
ANR	1153037	Identifier	max_value		1151500	1					
ANR	1153038	ExpressionStatement	tempUC2 = max_value	803:5:26124:26141	1151500	1	True				
ANR	1153039	AssignmentExpression	tempUC2 = max_value		1151500	0		=			
ANR	1153040	Identifier	tempUC2		1151500	0					
ANR	1153041	Identifier	max_value		1151500	1					
ANR	1153042	ExpressionStatement	* ( ptrIBody ++ ) = ( int ) ( ( tempUC2 << 16 ) + ( tempUC1 << 8 ) + tempUC )	805:4:26156:26220	1151500	6	True				
ANR	1153043	AssignmentExpression	* ( ptrIBody ++ ) = ( int ) ( ( tempUC2 << 16 ) + ( tempUC1 << 8 ) + tempUC )		1151500	0		=			
ANR	1153044	UnaryOperationExpression	* ( ptrIBody ++ )		1151500	0					
ANR	1153045	UnaryOperator	*		1151500	0					
ANR	1153046	PostIncDecOperationExpression	ptrIBody ++		1151500	1					
ANR	1153047	Identifier	ptrIBody		1151500	0					
ANR	1153048	IncDec	++		1151500	1					
ANR	1153049	CastExpression	( int ) ( ( tempUC2 << 16 ) + ( tempUC1 << 8 ) + tempUC )		1151500	1					
ANR	1153050	CastTarget	int		1151500	0					
ANR	1153051	AdditiveExpression	( tempUC2 << 16 ) + ( tempUC1 << 8 ) + tempUC		1151500	1		+			
ANR	1153052	ShiftExpression	tempUC2 << 16		1151500	0		<<			
ANR	1153053	Identifier	tempUC2		1151500	0					
ANR	1153054	PrimaryExpression	16		1151500	1					
ANR	1153055	AdditiveExpression	( tempUC1 << 8 ) + tempUC		1151500	1		+			
ANR	1153056	ShiftExpression	tempUC1 << 8		1151500	0		<<			
ANR	1153057	Identifier	tempUC1		1151500	0					
ANR	1153058	PrimaryExpression	8		1151500	1					
ANR	1153059	Identifier	tempUC		1151500	1					
ANR	1153060	ExpressionStatement	"( * env ) -> ReleaseIntArrayElements ( env , jia , jiBody , 0 )"	807:3:26232:26284	1151500	10	True				
ANR	1153061	CallExpression	"( * env ) -> ReleaseIntArrayElements ( env , jia , jiBody , 0 )"		1151500	0					
ANR	1153062	Callee	( * env ) -> ReleaseIntArrayElements		1151500	0					
ANR	1153063	PtrMemberAccess	( * env ) -> ReleaseIntArrayElements		1151500	0					
ANR	1153064	UnaryOperationExpression	* env		1151500	0					
ANR	1153065	UnaryOperator	*		1151500	0					
ANR	1153066	Identifier	env		1151500	1					
ANR	1153067	Identifier	ReleaseIntArrayElements		1151500	1					
ANR	1153068	ArgumentList	env		1151500	1					
ANR	1153069	Argument	env		1151500	0					
ANR	1153070	Identifier	env		1151500	0					
ANR	1153071	Argument	jia		1151500	1					
ANR	1153072	Identifier	jia		1151500	0					
ANR	1153073	Argument	jiBody		1151500	2					
ANR	1153074	Identifier	jiBody		1151500	0					
ANR	1153075	Argument	0		1151500	3					
ANR	1153076	PrimaryExpression	0		1151500	0					
ANR	1153077	ElseStatement	else		1151500	0					
ANR	1153078	CompoundStatement		314:9:10344:10344	1151500	0					
ANR	1153079	ExpressionStatement	ptr = image -> comps [ 0 ] . data	810:3:26339:26365	1151500	0	True				
ANR	1153080	AssignmentExpression	ptr = image -> comps [ 0 ] . data		1151500	0		=			
ANR	1153081	Identifier	ptr		1151500	0					
ANR	1153082	MemberAccess	image -> comps [ 0 ] . data		1151500	1					
ANR	1153083	ArrayIndexing	image -> comps [ 0 ]		1151500	0					
ANR	1153084	PtrMemberAccess	image -> comps		1151500	0					
ANR	1153085	Identifier	image		1151500	0					
ANR	1153086	Identifier	comps		1151500	1					
ANR	1153087	PrimaryExpression	0		1151500	1					
ANR	1153088	Identifier	data		1151500	1					
ANR	1153089	ExpressionStatement	"printf ( ""C: before transferring a %d bpp image to java (length = %d)\\n"" , image -> comps [ 0 ] . prec , w * h )"	811:3:26371:26468	1151500	1	True				
ANR	1153090	CallExpression	"printf ( ""C: before transferring a %d bpp image to java (length = %d)\\n"" , image -> comps [ 0 ] . prec , w * h )"		1151500	0					
ANR	1153091	Callee	printf		1151500	0					
ANR	1153092	Identifier	printf		1151500	0					
ANR	1153093	ArgumentList	"""C: before transferring a %d bpp image to java (length = %d)\\n"""		1151500	1					
ANR	1153094	Argument	"""C: before transferring a %d bpp image to java (length = %d)\\n"""		1151500	0					
ANR	1153095	PrimaryExpression	"""C: before transferring a %d bpp image to java (length = %d)\\n"""		1151500	0					
ANR	1153096	Argument	image -> comps [ 0 ] . prec		1151500	1					
ANR	1153097	MemberAccess	image -> comps [ 0 ] . prec		1151500	0					
ANR	1153098	ArrayIndexing	image -> comps [ 0 ]		1151500	0					
ANR	1153099	PtrMemberAccess	image -> comps		1151500	0					
ANR	1153100	Identifier	image		1151500	0					
ANR	1153101	Identifier	comps		1151500	1					
ANR	1153102	PrimaryExpression	0		1151500	1					
ANR	1153103	Identifier	prec		1151500	1					
ANR	1153104	Argument	w * h		1151500	2					
ANR	1153105	MultiplicativeExpression	w * h		1151500	0		*			
ANR	1153106	Identifier	w		1151500	0					
ANR	1153107	Identifier	h		1151500	1					
ANR	1153108	IfStatement	if ( image -> comps [ 0 ] . prec <= 8 )		1151500	2					
ANR	1153109	Condition	image -> comps [ 0 ] . prec <= 8	812:7:26478:26500	1151500	0	True				
ANR	1153110	RelationalExpression	image -> comps [ 0 ] . prec <= 8		1151500	0		<=			
ANR	1153111	MemberAccess	image -> comps [ 0 ] . prec		1151500	0					
ANR	1153112	ArrayIndexing	image -> comps [ 0 ]		1151500	0					
ANR	1153113	PtrMemberAccess	image -> comps		1151500	0					
ANR	1153114	Identifier	image		1151500	0					
ANR	1153115	Identifier	comps		1151500	1					
ANR	1153116	PrimaryExpression	0		1151500	1					
ANR	1153117	Identifier	prec		1151500	1					
ANR	1153118	PrimaryExpression	8		1151500	1					
ANR	1153119	CompoundStatement		317:32:10549:10549	1151500	1					
ANR	1153120	ExpressionStatement	"fid = ( * env ) -> GetFieldID ( env , cls , ""image8"" , ""[B"" )"	813:4:26510:26559	1151500	0	True				
ANR	1153121	AssignmentExpression	"fid = ( * env ) -> GetFieldID ( env , cls , ""image8"" , ""[B"" )"		1151500	0		=			
ANR	1153122	Identifier	fid		1151500	0					
ANR	1153123	CallExpression	"( * env ) -> GetFieldID ( env , cls , ""image8"" , ""[B"" )"		1151500	1					
ANR	1153124	Callee	( * env ) -> GetFieldID		1151500	0					
ANR	1153125	PtrMemberAccess	( * env ) -> GetFieldID		1151500	0					
ANR	1153126	UnaryOperationExpression	* env		1151500	0					
ANR	1153127	UnaryOperator	*		1151500	0					
ANR	1153128	Identifier	env		1151500	1					
ANR	1153129	Identifier	GetFieldID		1151500	1					
ANR	1153130	ArgumentList	env		1151500	1					
ANR	1153131	Argument	env		1151500	0					
ANR	1153132	Identifier	env		1151500	0					
ANR	1153133	Argument	cls		1151500	1					
ANR	1153134	Identifier	cls		1151500	0					
ANR	1153135	Argument	"""image8"""		1151500	2					
ANR	1153136	PrimaryExpression	"""image8"""		1151500	0					
ANR	1153137	Argument	"""[B"""		1151500	3					
ANR	1153138	PrimaryExpression	"""[B"""		1151500	0					
ANR	1153139	ExpressionStatement	"jba = ( * env ) -> GetObjectField ( env , obj , fid )"	814:4:26566:26609	1151500	1	True				
ANR	1153140	AssignmentExpression	"jba = ( * env ) -> GetObjectField ( env , obj , fid )"		1151500	0		=			
ANR	1153141	Identifier	jba		1151500	0					
ANR	1153142	CallExpression	"( * env ) -> GetObjectField ( env , obj , fid )"		1151500	1					
ANR	1153143	Callee	( * env ) -> GetObjectField		1151500	0					
ANR	1153144	PtrMemberAccess	( * env ) -> GetObjectField		1151500	0					
ANR	1153145	UnaryOperationExpression	* env		1151500	0					
ANR	1153146	UnaryOperator	*		1151500	0					
ANR	1153147	Identifier	env		1151500	1					
ANR	1153148	Identifier	GetObjectField		1151500	1					
ANR	1153149	ArgumentList	env		1151500	1					
ANR	1153150	Argument	env		1151500	0					
ANR	1153151	Identifier	env		1151500	0					
ANR	1153152	Argument	obj		1151500	1					
ANR	1153153	Identifier	obj		1151500	0					
ANR	1153154	Argument	fid		1151500	2					
ANR	1153155	Identifier	fid		1151500	0					
ANR	1153156	ExpressionStatement	"jbBody = ( * env ) -> GetByteArrayElements ( env , jba , 0 )"	815:4:26616:26666	1151500	2	True				
ANR	1153157	AssignmentExpression	"jbBody = ( * env ) -> GetByteArrayElements ( env , jba , 0 )"		1151500	0		=			
ANR	1153158	Identifier	jbBody		1151500	0					
ANR	1153159	CallExpression	"( * env ) -> GetByteArrayElements ( env , jba , 0 )"		1151500	1					
ANR	1153160	Callee	( * env ) -> GetByteArrayElements		1151500	0					
ANR	1153161	PtrMemberAccess	( * env ) -> GetByteArrayElements		1151500	0					
ANR	1153162	UnaryOperationExpression	* env		1151500	0					
ANR	1153163	UnaryOperator	*		1151500	0					
ANR	1153164	Identifier	env		1151500	1					
ANR	1153165	Identifier	GetByteArrayElements		1151500	1					
ANR	1153166	ArgumentList	env		1151500	1					
ANR	1153167	Argument	env		1151500	0					
ANR	1153168	Identifier	env		1151500	0					
ANR	1153169	Argument	jba		1151500	1					
ANR	1153170	Identifier	jba		1151500	0					
ANR	1153171	Argument	0		1151500	2					
ANR	1153172	PrimaryExpression	0		1151500	0					
ANR	1153173	ExpressionStatement	ptrBBody = jbBody	816:4:26673:26690	1151500	3	True				
ANR	1153174	AssignmentExpression	ptrBBody = jbBody		1151500	0		=			
ANR	1153175	Identifier	ptrBBody		1151500	0					
ANR	1153176	Identifier	jbBody		1151500	1					
ANR	1153177	IfStatement	if ( image -> comps [ 0 ] . sgnd )		1151500	4					
ANR	1153178	Condition	image -> comps [ 0 ] . sgnd	818:8:26727:26746	1151500	0	True				
ANR	1153179	MemberAccess	image -> comps [ 0 ] . sgnd		1151500	0					
ANR	1153180	ArrayIndexing	image -> comps [ 0 ]		1151500	0					
ANR	1153181	PtrMemberAccess	image -> comps		1151500	0					
ANR	1153182	Identifier	image		1151500	0					
ANR	1153183	Identifier	comps		1151500	1					
ANR	1153184	PrimaryExpression	0		1151500	1					
ANR	1153185	Identifier	sgnd		1151500	1					
ANR	1153186	CompoundStatement		323:30:10795:10795	1151500	1					
ANR	1153187	ExpressionStatement	min_value = - 128	819:5:26757:26773	1151500	0	True				
ANR	1153188	AssignmentExpression	min_value = - 128		1151500	0		=			
ANR	1153189	Identifier	min_value		1151500	0					
ANR	1153190	UnaryOperationExpression	- 128		1151500	1					
ANR	1153191	UnaryOperator	-		1151500	0					
ANR	1153192	PrimaryExpression	128		1151500	1					
ANR	1153193	ExpressionStatement	max_value = 127	820:5:26781:26796	1151500	1	True				
ANR	1153194	AssignmentExpression	max_value = 127		1151500	0		=			
ANR	1153195	Identifier	max_value		1151500	0					
ANR	1153196	PrimaryExpression	127		1151500	1					
ANR	1153197	ElseStatement	else		1151500	0					
ANR	1153198	CompoundStatement		326:11:10856:10856	1151500	0					
ANR	1153199	ExpressionStatement	min_value = 0	822:5:26818:26831	1151500	0	True				
ANR	1153200	AssignmentExpression	min_value = 0		1151500	0		=			
ANR	1153201	Identifier	min_value		1151500	0					
ANR	1153202	PrimaryExpression	0		1151500	1					
ANR	1153203	ExpressionStatement	max_value = 255	823:5:26839:26854	1151500	1	True				
ANR	1153204	AssignmentExpression	max_value = 255		1151500	0		=			
ANR	1153205	Identifier	max_value		1151500	0					
ANR	1153206	PrimaryExpression	255		1151500	1					
ANR	1153207	ForStatement	for ( i = 0 ; i < w * h ; i ++ )		1151500	5					
ANR	1153208	ForInit	i = 0 ;	827:9:26981:26984	1151500	0	True				
ANR	1153209	AssignmentExpression	i = 0		1151500	0		=			
ANR	1153210	Identifier	i		1151500	0					
ANR	1153211	PrimaryExpression	0		1151500	1					
ANR	1153212	Condition	i < w * h	827:14:26986:26990	1151500	1	True				
ANR	1153213	RelationalExpression	i < w * h		1151500	0		<			
ANR	1153214	Identifier	i		1151500	0					
ANR	1153215	MultiplicativeExpression	w * h		1151500	1		*			
ANR	1153216	Identifier	w		1151500	0					
ANR	1153217	Identifier	h		1151500	1					
ANR	1153218	PostIncDecOperationExpression	i ++	827:21:26993:26995	1151500	2	True				
ANR	1153219	Identifier	i		1151500	0					
ANR	1153220	IncDec	++		1151500	1					
ANR	1153221	CompoundStatement		332:26:11044:11044	1151500	3					
ANR	1153222	ExpressionStatement	tempUC = ( unsigned char ) ( ptr [ i ] )	828:5:27006:27039	1151500	0	True				
ANR	1153223	AssignmentExpression	tempUC = ( unsigned char ) ( ptr [ i ] )		1151500	0		=			
ANR	1153224	Identifier	tempUC		1151500	0					
ANR	1153225	CastExpression	( unsigned char ) ( ptr [ i ] )		1151500	1					
ANR	1153226	CastTarget	unsigned char		1151500	0					
ANR	1153227	ArrayIndexing	ptr [ i ]		1151500	1					
ANR	1153228	Identifier	ptr		1151500	0					
ANR	1153229	Identifier	i		1151500	1					
ANR	1153230	IfStatement	if ( tempUC < min_value )		1151500	1					
ANR	1153231	Condition	tempUC < min_value	830:9:27076:27091	1151500	0	True				
ANR	1153232	RelationalExpression	tempUC < min_value		1151500	0		<			
ANR	1153233	Identifier	tempUC		1151500	0					
ANR	1153234	Identifier	min_value		1151500	1					
ANR	1153235	ExpressionStatement	tempUC = min_value	831:6:27101:27119	1151500	1	True				
ANR	1153236	AssignmentExpression	tempUC = min_value		1151500	0		=			
ANR	1153237	Identifier	tempUC		1151500	0					
ANR	1153238	Identifier	min_value		1151500	1					
ANR	1153239	ElseStatement	else		1151500	0					
ANR	1153240	IfStatement	if ( tempUC > max_value )		1151500	0					
ANR	1153241	Condition	tempUC > max_value	832:14:27136:27153	1151500	0	True				
ANR	1153242	RelationalExpression	tempUC > max_value		1151500	0		>			
ANR	1153243	Identifier	tempUC		1151500	0					
ANR	1153244	Identifier	max_value		1151500	1					
ANR	1153245	ExpressionStatement	tempUC = max_value	833:6:27163:27181	1151500	1	True				
ANR	1153246	AssignmentExpression	tempUC = max_value		1151500	0		=			
ANR	1153247	Identifier	tempUC		1151500	0					
ANR	1153248	Identifier	max_value		1151500	1					
ANR	1153249	ExpressionStatement	* ( ptrBBody ++ ) = tempUC	835:5:27197:27219	1151500	2	True				
ANR	1153250	AssignmentExpression	* ( ptrBBody ++ ) = tempUC		1151500	0		=			
ANR	1153251	UnaryOperationExpression	* ( ptrBBody ++ )		1151500	0					
ANR	1153252	UnaryOperator	*		1151500	0					
ANR	1153253	PostIncDecOperationExpression	ptrBBody ++		1151500	1					
ANR	1153254	Identifier	ptrBBody		1151500	0					
ANR	1153255	IncDec	++		1151500	1					
ANR	1153256	Identifier	tempUC		1151500	1					
ANR	1153257	ExpressionStatement	"( * env ) -> ReleaseByteArrayElements ( env , jba , jbBody , 0 )"	837:4:27233:27286	1151500	6	True				
ANR	1153258	CallExpression	"( * env ) -> ReleaseByteArrayElements ( env , jba , jbBody , 0 )"		1151500	0					
ANR	1153259	Callee	( * env ) -> ReleaseByteArrayElements		1151500	0					
ANR	1153260	PtrMemberAccess	( * env ) -> ReleaseByteArrayElements		1151500	0					
ANR	1153261	UnaryOperationExpression	* env		1151500	0					
ANR	1153262	UnaryOperator	*		1151500	0					
ANR	1153263	Identifier	env		1151500	1					
ANR	1153264	Identifier	ReleaseByteArrayElements		1151500	1					
ANR	1153265	ArgumentList	env		1151500	1					
ANR	1153266	Argument	env		1151500	0					
ANR	1153267	Identifier	env		1151500	0					
ANR	1153268	Argument	jba		1151500	1					
ANR	1153269	Identifier	jba		1151500	0					
ANR	1153270	Argument	jbBody		1151500	2					
ANR	1153271	Identifier	jbBody		1151500	0					
ANR	1153272	Argument	0		1151500	3					
ANR	1153273	PrimaryExpression	0		1151500	0					
ANR	1153274	ExpressionStatement	"printf ( ""C: image8 transferred to Java\\n"" )"	838:4:27293:27334	1151500	7	True				
ANR	1153275	CallExpression	"printf ( ""C: image8 transferred to Java\\n"" )"		1151500	0					
ANR	1153276	Callee	printf		1151500	0					
ANR	1153277	Identifier	printf		1151500	0					
ANR	1153278	ArgumentList	"""C: image8 transferred to Java\\n"""		1151500	1					
ANR	1153279	Argument	"""C: image8 transferred to Java\\n"""		1151500	0					
ANR	1153280	PrimaryExpression	"""C: image8 transferred to Java\\n"""		1151500	0					
ANR	1153281	ElseStatement	else		1151500	0					
ANR	1153282	CompoundStatement		344:10:11393:11393	1151500	0					
ANR	1153283	ExpressionStatement	"fid = ( * env ) -> GetFieldID ( env , cls , ""image16"" , ""[S"" )"	840:4:27354:27404	1151500	0	True				
ANR	1153284	AssignmentExpression	"fid = ( * env ) -> GetFieldID ( env , cls , ""image16"" , ""[S"" )"		1151500	0		=			
ANR	1153285	Identifier	fid		1151500	0					
ANR	1153286	CallExpression	"( * env ) -> GetFieldID ( env , cls , ""image16"" , ""[S"" )"		1151500	1					
ANR	1153287	Callee	( * env ) -> GetFieldID		1151500	0					
ANR	1153288	PtrMemberAccess	( * env ) -> GetFieldID		1151500	0					
ANR	1153289	UnaryOperationExpression	* env		1151500	0					
ANR	1153290	UnaryOperator	*		1151500	0					
ANR	1153291	Identifier	env		1151500	1					
ANR	1153292	Identifier	GetFieldID		1151500	1					
ANR	1153293	ArgumentList	env		1151500	1					
ANR	1153294	Argument	env		1151500	0					
ANR	1153295	Identifier	env		1151500	0					
ANR	1153296	Argument	cls		1151500	1					
ANR	1153297	Identifier	cls		1151500	0					
ANR	1153298	Argument	"""image16"""		1151500	2					
ANR	1153299	PrimaryExpression	"""image16"""		1151500	0					
ANR	1153300	Argument	"""[S"""		1151500	3					
ANR	1153301	PrimaryExpression	"""[S"""		1151500	0					
ANR	1153302	ExpressionStatement	"jsa = ( * env ) -> GetObjectField ( env , obj , fid )"	841:4:27411:27454	1151500	1	True				
ANR	1153303	AssignmentExpression	"jsa = ( * env ) -> GetObjectField ( env , obj , fid )"		1151500	0		=			
ANR	1153304	Identifier	jsa		1151500	0					
ANR	1153305	CallExpression	"( * env ) -> GetObjectField ( env , obj , fid )"		1151500	1					
ANR	1153306	Callee	( * env ) -> GetObjectField		1151500	0					
ANR	1153307	PtrMemberAccess	( * env ) -> GetObjectField		1151500	0					
ANR	1153308	UnaryOperationExpression	* env		1151500	0					
ANR	1153309	UnaryOperator	*		1151500	0					
ANR	1153310	Identifier	env		1151500	1					
ANR	1153311	Identifier	GetObjectField		1151500	1					
ANR	1153312	ArgumentList	env		1151500	1					
ANR	1153313	Argument	env		1151500	0					
ANR	1153314	Identifier	env		1151500	0					
ANR	1153315	Argument	obj		1151500	1					
ANR	1153316	Identifier	obj		1151500	0					
ANR	1153317	Argument	fid		1151500	2					
ANR	1153318	Identifier	fid		1151500	0					
ANR	1153319	ExpressionStatement	"jsBody = ( * env ) -> GetShortArrayElements ( env , jsa , 0 )"	842:4:27461:27512	1151500	2	True				
ANR	1153320	AssignmentExpression	"jsBody = ( * env ) -> GetShortArrayElements ( env , jsa , 0 )"		1151500	0		=			
ANR	1153321	Identifier	jsBody		1151500	0					
ANR	1153322	CallExpression	"( * env ) -> GetShortArrayElements ( env , jsa , 0 )"		1151500	1					
ANR	1153323	Callee	( * env ) -> GetShortArrayElements		1151500	0					
ANR	1153324	PtrMemberAccess	( * env ) -> GetShortArrayElements		1151500	0					
ANR	1153325	UnaryOperationExpression	* env		1151500	0					
ANR	1153326	UnaryOperator	*		1151500	0					
ANR	1153327	Identifier	env		1151500	1					
ANR	1153328	Identifier	GetShortArrayElements		1151500	1					
ANR	1153329	ArgumentList	env		1151500	1					
ANR	1153330	Argument	env		1151500	0					
ANR	1153331	Identifier	env		1151500	0					
ANR	1153332	Argument	jsa		1151500	1					
ANR	1153333	Identifier	jsa		1151500	0					
ANR	1153334	Argument	0		1151500	2					
ANR	1153335	PrimaryExpression	0		1151500	0					
ANR	1153336	ExpressionStatement	ptrSBody = jsBody	843:4:27519:27536	1151500	3	True				
ANR	1153337	AssignmentExpression	ptrSBody = jsBody		1151500	0		=			
ANR	1153338	Identifier	ptrSBody		1151500	0					
ANR	1153339	Identifier	jsBody		1151500	1					
ANR	1153340	IfStatement	if ( image -> comps [ 0 ] . sgnd )		1151500	4					
ANR	1153341	Condition	image -> comps [ 0 ] . sgnd	845:8:27573:27592	1151500	0	True				
ANR	1153342	MemberAccess	image -> comps [ 0 ] . sgnd		1151500	0					
ANR	1153343	ArrayIndexing	image -> comps [ 0 ]		1151500	0					
ANR	1153344	PtrMemberAccess	image -> comps		1151500	0					
ANR	1153345	Identifier	image		1151500	0					
ANR	1153346	Identifier	comps		1151500	1					
ANR	1153347	PrimaryExpression	0		1151500	1					
ANR	1153348	Identifier	sgnd		1151500	1					
ANR	1153349	CompoundStatement		350:30:11641:11641	1151500	1					
ANR	1153350	ExpressionStatement	min_value = - 32768	846:5:27603:27621	1151500	0	True				
ANR	1153351	AssignmentExpression	min_value = - 32768		1151500	0		=			
ANR	1153352	Identifier	min_value		1151500	0					
ANR	1153353	UnaryOperationExpression	- 32768		1151500	1					
ANR	1153354	UnaryOperator	-		1151500	0					
ANR	1153355	PrimaryExpression	32768		1151500	1					
ANR	1153356	ExpressionStatement	max_value = 32767	847:5:27629:27646	1151500	1	True				
ANR	1153357	AssignmentExpression	max_value = 32767		1151500	0		=			
ANR	1153358	Identifier	max_value		1151500	0					
ANR	1153359	PrimaryExpression	32767		1151500	1					
ANR	1153360	ElseStatement	else		1151500	0					
ANR	1153361	CompoundStatement		353:11:11706:11706	1151500	0					
ANR	1153362	ExpressionStatement	min_value = 0	849:5:27668:27681	1151500	0	True				
ANR	1153363	AssignmentExpression	min_value = 0		1151500	0		=			
ANR	1153364	Identifier	min_value		1151500	0					
ANR	1153365	PrimaryExpression	0		1151500	1					
ANR	1153366	ExpressionStatement	max_value = 65535	850:5:27689:27706	1151500	1	True				
ANR	1153367	AssignmentExpression	max_value = 65535		1151500	0		=			
ANR	1153368	Identifier	max_value		1151500	0					
ANR	1153369	PrimaryExpression	65535		1151500	1					
ANR	1153370	ExpressionStatement	"printf ( ""C: minValue = %d, maxValue = %d\\n"" , min_value , max_value )"	852:4:27720:27785	1151500	5	True				
ANR	1153371	CallExpression	"printf ( ""C: minValue = %d, maxValue = %d\\n"" , min_value , max_value )"		1151500	0					
ANR	1153372	Callee	printf		1151500	0					
ANR	1153373	Identifier	printf		1151500	0					
ANR	1153374	ArgumentList	"""C: minValue = %d, maxValue = %d\\n"""		1151500	1					
ANR	1153375	Argument	"""C: minValue = %d, maxValue = %d\\n"""		1151500	0					
ANR	1153376	PrimaryExpression	"""C: minValue = %d, maxValue = %d\\n"""		1151500	0					
ANR	1153377	Argument	min_value		1151500	1					
ANR	1153378	Identifier	min_value		1151500	0					
ANR	1153379	Argument	max_value		1151500	2					
ANR	1153380	Identifier	max_value		1151500	0					
ANR	1153381	ExpressionStatement	"printf ( ""C: transferring %d shorts to Java image16 pointer = %d\\n"" , w * h , ptrSBody )"	854:4:27804:27884	1151500	6	True				
ANR	1153382	CallExpression	"printf ( ""C: transferring %d shorts to Java image16 pointer = %d\\n"" , w * h , ptrSBody )"		1151500	0					
ANR	1153383	Callee	printf		1151500	0					
ANR	1153384	Identifier	printf		1151500	0					
ANR	1153385	ArgumentList	"""C: transferring %d shorts to Java image16 pointer = %d\\n"""		1151500	1					
ANR	1153386	Argument	"""C: transferring %d shorts to Java image16 pointer = %d\\n"""		1151500	0					
ANR	1153387	PrimaryExpression	"""C: transferring %d shorts to Java image16 pointer = %d\\n"""		1151500	0					
ANR	1153388	Argument	w * h		1151500	1					
ANR	1153389	MultiplicativeExpression	w * h		1151500	0		*			
ANR	1153390	Identifier	w		1151500	0					
ANR	1153391	Identifier	h		1151500	1					
ANR	1153392	Argument	ptrSBody		1151500	2					
ANR	1153393	Identifier	ptrSBody		1151500	0					
ANR	1153394	ForStatement	for ( i = 0 ; i < w * h ; i ++ )		1151500	7					
ANR	1153395	ForInit	i = 0 ;	855:9:27896:27899	1151500	0	True				
ANR	1153396	AssignmentExpression	i = 0		1151500	0		=			
ANR	1153397	Identifier	i		1151500	0					
ANR	1153398	PrimaryExpression	0		1151500	1					
ANR	1153399	Condition	i < w * h	855:14:27901:27905	1151500	1	True				
ANR	1153400	RelationalExpression	i < w * h		1151500	0		<			
ANR	1153401	Identifier	i		1151500	0					
ANR	1153402	MultiplicativeExpression	w * h		1151500	1		*			
ANR	1153403	Identifier	w		1151500	0					
ANR	1153404	Identifier	h		1151500	1					
ANR	1153405	PostIncDecOperationExpression	i ++	855:21:27908:27910	1151500	2	True				
ANR	1153406	Identifier	i		1151500	0					
ANR	1153407	IncDec	++		1151500	1					
ANR	1153408	CompoundStatement		360:26:11959:11959	1151500	3					
ANR	1153409	ExpressionStatement	tempS = ( short ) ( ptr [ i ] )	856:5:27921:27945	1151500	0	True				
ANR	1153410	AssignmentExpression	tempS = ( short ) ( ptr [ i ] )		1151500	0		=			
ANR	1153411	Identifier	tempS		1151500	0					
ANR	1153412	CastExpression	( short ) ( ptr [ i ] )		1151500	1					
ANR	1153413	CastTarget	short		1151500	0					
ANR	1153414	ArrayIndexing	ptr [ i ]		1151500	1					
ANR	1153415	Identifier	ptr		1151500	0					
ANR	1153416	Identifier	i		1151500	1					
ANR	1153417	IfStatement	if ( tempS < min_value )		1151500	1					
ANR	1153418	Condition	tempS < min_value	858:9:27982:27996	1151500	0	True				
ANR	1153419	RelationalExpression	tempS < min_value		1151500	0		<			
ANR	1153420	Identifier	tempS		1151500	0					
ANR	1153421	Identifier	min_value		1151500	1					
ANR	1153422	CompoundStatement		363:26:12045:12045	1151500	1					
ANR	1153423	ExpressionStatement	"printf ( ""C: value %d truncated to %d\\n"" , tempS , min_value )"	859:6:28008:28065	1151500	0	True				
ANR	1153424	CallExpression	"printf ( ""C: value %d truncated to %d\\n"" , tempS , min_value )"		1151500	0					
ANR	1153425	Callee	printf		1151500	0					
ANR	1153426	Identifier	printf		1151500	0					
ANR	1153427	ArgumentList	"""C: value %d truncated to %d\\n"""		1151500	1					
ANR	1153428	Argument	"""C: value %d truncated to %d\\n"""		1151500	0					
ANR	1153429	PrimaryExpression	"""C: value %d truncated to %d\\n"""		1151500	0					
ANR	1153430	Argument	tempS		1151500	1					
ANR	1153431	Identifier	tempS		1151500	0					
ANR	1153432	Argument	min_value		1151500	2					
ANR	1153433	Identifier	min_value		1151500	0					
ANR	1153434	ExpressionStatement	tempS = min_value	860:6:28074:28091	1151500	1	True				
ANR	1153435	AssignmentExpression	tempS = min_value		1151500	0		=			
ANR	1153436	Identifier	tempS		1151500	0					
ANR	1153437	Identifier	min_value		1151500	1					
ANR	1153438	ElseStatement	else		1151500	0					
ANR	1153439	IfStatement	if ( tempS > max_value )		1151500	0					
ANR	1153440	Condition	tempS > max_value	861:16:28110:28126	1151500	0	True				
ANR	1153441	RelationalExpression	tempS > max_value		1151500	0		>			
ANR	1153442	Identifier	tempS		1151500	0					
ANR	1153443	Identifier	max_value		1151500	1					
ANR	1153444	CompoundStatement		366:35:12175:12175	1151500	1					
ANR	1153445	ExpressionStatement	"printf ( ""C: value %d truncated to %d\\n"" , tempS , max_value )"	862:6:28138:28195	1151500	0	True				
ANR	1153446	CallExpression	"printf ( ""C: value %d truncated to %d\\n"" , tempS , max_value )"		1151500	0					
ANR	1153447	Callee	printf		1151500	0					
ANR	1153448	Identifier	printf		1151500	0					
ANR	1153449	ArgumentList	"""C: value %d truncated to %d\\n"""		1151500	1					
ANR	1153450	Argument	"""C: value %d truncated to %d\\n"""		1151500	0					
ANR	1153451	PrimaryExpression	"""C: value %d truncated to %d\\n"""		1151500	0					
ANR	1153452	Argument	tempS		1151500	1					
ANR	1153453	Identifier	tempS		1151500	0					
ANR	1153454	Argument	max_value		1151500	2					
ANR	1153455	Identifier	max_value		1151500	0					
ANR	1153456	ExpressionStatement	tempS = max_value	863:6:28204:28221	1151500	1	True				
ANR	1153457	AssignmentExpression	tempS = max_value		1151500	0		=			
ANR	1153458	Identifier	tempS		1151500	0					
ANR	1153459	Identifier	max_value		1151500	1					
ANR	1153460	ExpressionStatement	* ( ptrSBody ++ ) = tempS	866:5:28245:28266	1151500	2	True				
ANR	1153461	AssignmentExpression	* ( ptrSBody ++ ) = tempS		1151500	0		=			
ANR	1153462	UnaryOperationExpression	* ( ptrSBody ++ )		1151500	0					
ANR	1153463	UnaryOperator	*		1151500	0					
ANR	1153464	PostIncDecOperationExpression	ptrSBody ++		1151500	1					
ANR	1153465	Identifier	ptrSBody		1151500	0					
ANR	1153466	IncDec	++		1151500	1					
ANR	1153467	Identifier	tempS		1151500	1					
ANR	1153468	ExpressionStatement	"( * env ) -> ReleaseShortArrayElements ( env , jsa , jsBody , 0 )"	868:4:28280:28334	1151500	8	True				
ANR	1153469	CallExpression	"( * env ) -> ReleaseShortArrayElements ( env , jsa , jsBody , 0 )"		1151500	0					
ANR	1153470	Callee	( * env ) -> ReleaseShortArrayElements		1151500	0					
ANR	1153471	PtrMemberAccess	( * env ) -> ReleaseShortArrayElements		1151500	0					
ANR	1153472	UnaryOperationExpression	* env		1151500	0					
ANR	1153473	UnaryOperator	*		1151500	0					
ANR	1153474	Identifier	env		1151500	1					
ANR	1153475	Identifier	ReleaseShortArrayElements		1151500	1					
ANR	1153476	ArgumentList	env		1151500	1					
ANR	1153477	Argument	env		1151500	0					
ANR	1153478	Identifier	env		1151500	0					
ANR	1153479	Argument	jsa		1151500	1					
ANR	1153480	Identifier	jsa		1151500	0					
ANR	1153481	Argument	jsBody		1151500	2					
ANR	1153482	Identifier	jsBody		1151500	0					
ANR	1153483	Argument	0		1151500	3					
ANR	1153484	PrimaryExpression	0		1151500	0					
ANR	1153485	ExpressionStatement	"printf ( ""C: image16 completely filled\\n"" )"	869:4:28341:28381	1151500	9	True				
ANR	1153486	CallExpression	"printf ( ""C: image16 completely filled\\n"" )"		1151500	0					
ANR	1153487	Callee	printf		1151500	0					
ANR	1153488	Identifier	printf		1151500	0					
ANR	1153489	ArgumentList	"""C: image16 completely filled\\n"""		1151500	1					
ANR	1153490	Argument	"""C: image16 completely filled\\n"""		1151500	0					
ANR	1153491	PrimaryExpression	"""C: image16 completely filled\\n"""		1151500	0					
ANR	1153492	IfStatement	if ( dinfo )		1151500	11					
ANR	1153493	Condition	dinfo	875:5:28440:28444	1151500	0	True				
ANR	1153494	Identifier	dinfo		1151500	0					
ANR	1153495	CompoundStatement		380:12:12493:12493	1151500	1					
ANR	1153496	ExpressionStatement	opj_destroy_decompress ( dinfo )	876:3:28453:28482	1151500	0	True				
ANR	1153497	CallExpression	opj_destroy_decompress ( dinfo )		1151500	0					
ANR	1153498	Callee	opj_destroy_decompress		1151500	0					
ANR	1153499	Identifier	opj_destroy_decompress		1151500	0					
ANR	1153500	ArgumentList	dinfo		1151500	1					
ANR	1153501	Argument	dinfo		1151500	0					
ANR	1153502	Identifier	dinfo		1151500	0					
ANR	1153503	ExpressionStatement	opj_image_destroy ( image )	879:2:28527:28551	1151500	12	True				
ANR	1153504	CallExpression	opj_image_destroy ( image )		1151500	0					
ANR	1153505	Callee	opj_image_destroy		1151500	0					
ANR	1153506	Identifier	opj_image_destroy		1151500	0					
ANR	1153507	ArgumentList	image		1151500	1					
ANR	1153508	Argument	image		1151500	0					
ANR	1153509	Identifier	image		1151500	0					
ANR	1153510	ReturnStatement	return 1 ;	882:1:28561:28569	1151500	53	True				
ANR	1153511	PrimaryExpression	1		1151500	0					
ANR	1153512	ReturnType	JNIEXPORT jint JNICALL		1151500	1					
ANR	1153513	Identifier	Java_org_openJpeg_OpenJPEGJavaDecoder_internalDecodeJ2KtoImage		1151500	2					
ANR	1153514	ParameterList	"JNIEnv * env , jobject obj , jobjectArray javaParameters"		1151500	3					
ANR	1153515	Parameter	JNIEnv * env	496:86:15898:15908	1151500	0	True				
ANR	1153516	ParameterType	JNIEnv *		1151500	0					
ANR	1153517	Identifier	env		1151500	1					
ANR	1153518	Parameter	jobject obj	496:99:15911:15921	1151500	1	True				
ANR	1153519	ParameterType	jobject		1151500	0					
ANR	1153520	Identifier	obj		1151500	1					
ANR	1153521	Parameter	jobjectArray javaParameters	496:112:15924:15950	1151500	2	True				
ANR	1153522	ParameterType	jobjectArray		1151500	0					
ANR	1153523	Identifier	javaParameters		1151500	1					
ANR	1153524	CFGEntryNode	ENTRY		1151500		True				
ANR	1153525	CFGExitNode	EXIT		1151500		True				
ANR	1153526	Symbol	fid		1151500						
ANR	1153527	Symbol	img_fol		1151500						
ANR	1153528	Symbol	jia		1151500						
ANR	1153529	Symbol	parameters . decod_format		1151500						
ANR	1153530	Symbol	image -> comps		1151500						
ANR	1153531	Symbol	event_mgr		1151500						
ANR	1153532	Symbol	isCopy		1151500						
ANR	1153533	Symbol	jba		1151500						
ANR	1153534	Symbol	cls		1151500						
ANR	1153535	Symbol	& isCopy		1151500						
ANR	1153536	Symbol	msgErrorCallback_vars . env		1151500						
ANR	1153537	Symbol	( * env ) -> GetObjectField		1151500						
ANR	1153538	Symbol	CODEC_JPT		1151500						
ANR	1153539	Symbol	num_images		1151500						
ANR	1153540	Symbol	ptr2		1151500						
ANR	1153541	Symbol	parameters . outfile		1151500						
ANR	1153542	Symbol	event_mgr . error_handler		1151500						
ANR	1153543	Symbol	ptr1		1151500						
ANR	1153544	Symbol	jsa		1151500						
ANR	1153545	Symbol	parameters . cod_format		1151500						
ANR	1153546	Symbol	object		1151500						
ANR	1153547	Symbol	* * env		1151500						
ANR	1153548	Symbol	event_mgr . warning_handler		1151500						
ANR	1153549	Symbol	jiBody		1151500						
ANR	1153550	Symbol	msgErrorCallback_vars . jobj		1151500						
ANR	1153551	Symbol	& msgErrorCallback_vars		1151500						
ANR	1153552	Symbol	msgErrorCallback_vars . error_mid		1151500						
ANR	1153553	Symbol	* * image		1151500						
ANR	1153554	Symbol	image -> comps [ 0 ] . prec		1151500						
ANR	1153555	Symbol	warning_callback		1151500						
ANR	1153556	Symbol	* ( ptrIBody ++ )		1151500						
ANR	1153557	Symbol	fopen		1151500						
ANR	1153558	Symbol	* image -> comps		1151500						
ANR	1153559	Symbol	( * env ) -> GetMethodID		1151500						
ANR	1153560	Symbol	( * env ) -> GetArrayLength		1151500						
ANR	1153561	Symbol	( * env ) -> GetShortArrayElements		1151500						
ANR	1153562	Symbol	h		1151500						
ANR	1153563	Symbol	error_callback		1151500						
ANR	1153564	Symbol	& parameters		1151500						
ANR	1153565	Symbol	i		1151500						
ANR	1153566	Symbol	j		1151500						
ANR	1153567	Symbol	tempS		1151500						
ANR	1153568	Symbol	SEEK_END		1151500						
ANR	1153569	Symbol	min_value		1151500						
ANR	1153570	Symbol	CODEC_J2K		1151500						
ANR	1153571	Symbol	( * env ) -> GetFieldID		1151500						
ANR	1153572	Symbol	image -> comps [ 0 ] . sgnd		1151500						
ANR	1153573	Symbol	image -> comps [ 1 ] . data		1151500						
ANR	1153574	Symbol	w		1151500						
ANR	1153575	Symbol	ptrSBody		1151500						
ANR	1153576	Symbol	file_length		1151500						
ANR	1153577	Symbol	& event_mgr		1151500						
ANR	1153578	Symbol	parameters . cp_reduce		1151500						
ANR	1153579	Symbol	imagetopnm		1151500						
ANR	1153580	Symbol	javaParameters		1151500						
ANR	1153581	Symbol	J2K_CFMT		1151500						
ANR	1153582	Symbol	stdout		1151500						
ANR	1153583	Symbol	* ( ptrSBody ++ )		1151500						
ANR	1153584	Symbol	imagetobmp		1151500						
ANR	1153585	Symbol	* argv		1151500						
ANR	1153586	Symbol	image -> comps [ 2 ] . data		1151500						
ANR	1153587	Symbol	fsrc		1151500						
ANR	1153588	Symbol	( * env ) -> GetObjectClass		1151500						
ANR	1153589	Symbol	opj_decode		1151500						
ANR	1153590	Symbol	image -> comps [ 0 ] . h		1151500						
ANR	1153591	Symbol	( * env ) -> GetIntArrayElements		1151500						
ANR	1153592	Symbol	* ptr		1151500						
ANR	1153593	Symbol	* ptr2		1151500						
ANR	1153594	Symbol	* ptr1		1151500						
ANR	1153595	Symbol	jbBody		1151500						
ANR	1153596	Symbol	info_callback		1151500						
ANR	1153597	Symbol	dinfo		1151500						
ANR	1153598	Symbol	image		1151500						
ANR	1153599	Symbol	NULL		1151500						
ANR	1153600	Symbol	msgErrorCallback_vars . message_mid		1151500						
ANR	1153601	Symbol	image -> comps [ 0 ] . w		1151500						
ANR	1153602	Symbol	* env		1151500						
ANR	1153603	Symbol	parse_cmdline_decoder		1151500						
ANR	1153604	Symbol	imageno		1151500						
ANR	1153605	Symbol	opj_create_decompress		1151500						
ANR	1153606	Symbol	stderr		1151500						
ANR	1153607	Symbol	imagetopgx		1151500						
ANR	1153608	Symbol	* parameters . infile		1151500						
ANR	1153609	Symbol	* parameters		1151500						
ANR	1153610	Symbol	( * env ) -> GetObjectArrayElement		1151500						
ANR	1153611	Symbol	* ( ptrBBody ++ )		1151500						
ANR	1153612	Symbol	event_mgr . info_handler		1151500						
ANR	1153613	Symbol	parameters		1151500						
ANR	1153614	Symbol	* image		1151500						
ANR	1153615	Symbol	opj_malloc		1151500						
ANR	1153616	Symbol	( * env ) -> GetIntField		1151500						
ANR	1153617	Symbol	( * env ) -> GetByteArrayElements		1151500						
ANR	1153618	Symbol	ftell		1151500						
ANR	1153619	Symbol	msgErrorCallback_vars		1151500						
ANR	1153620	Symbol	cio		1151500						
ANR	1153621	Symbol	CODEC_JP2		1151500						
ANR	1153622	Symbol	argv		1151500						
ANR	1153623	Symbol	tempUC		1151500						
ANR	1153624	Symbol	image -> comps [ 0 ] . data		1151500						
ANR	1153625	Symbol	& img_fol		1151500						
ANR	1153626	Symbol	& obj		1151500						
ANR	1153627	Symbol	jsBody		1151500						
ANR	1153628	Symbol	ptrIBody		1151500						
ANR	1153629	Symbol	argc		1151500						
ANR	1153630	Symbol	parameters . infile		1151500						
ANR	1153631	Symbol	SEEK_SET		1151500						
ANR	1153632	Symbol	src		1151500						
ANR	1153633	Symbol	opj_cio_open		1151500						
ANR	1153634	Symbol	arraySize		1151500						
ANR	1153635	Symbol	env		1151500						
ANR	1153636	Symbol	( * env ) -> GetStringUTFChars		1151500						
ANR	1153637	Symbol	tempUC1		1151500						
ANR	1153638	Symbol	ptr		1151500						
ANR	1153639	Symbol	tempUC2		1151500						
ANR	1153640	Symbol	image -> numcomps		1151500						
ANR	1153641	Symbol	* i		1151500						
ANR	1153642	Symbol	obj		1151500						
ANR	1153643	Symbol	ptrBBody		1151500						
ANR	1153644	Symbol	max_value		1151500						
