command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	123226	File	data/converged/CVE-2019-12973_openjpeg/src_bin_mj2_meta_out.c								
ANR	123227	DeclStmt									
ANR	123228	Decl							BOOL	BOOL	notes
ANR	123229	DeclStmt									
ANR	123230	Decl							BOOL	BOOL	sampletables
ANR	123231	DeclStmt									
ANR	123232	Decl							BOOL	BOOL	raw
ANR	123233	DeclStmt									
ANR	123234	Decl							BOOL	BOOL	derived
ANR	123235	DeclStmt									
ANR	123236	Decl							opj_tcp_t	opj_tcp_t *	j2k_default_tcp
ANR	123237	DeclStmt									
ANR	123238	Decl							int	"int ( FILE * file , FILE * xmlout , opj_mj2_t * movie , unsigned int sampleframe , opj_event_mgr_t * event_mgr )"	xml_write_overall_header
ANR	123239	DeclStmt									
ANR	123240	Decl							int	"int ( FILE * file , FILE * xmlout , opj_mj2_t * movie , unsigned int sampleframe , opj_event_mgr_t * event_mgr )"	xml_write_moov
ANR	123241	DeclStmt									
ANR	123242	Decl							void	"void ( unsigned int value , char * buf )"	uint_to_chars
ANR	123243	DeclStmt									
ANR	123244	Decl							void	"void ( FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum , unsigned int sampleframe , opj_event_mgr_t * event_mgr )"	xml_write_trak
ANR	123245	DeclStmt									
ANR	123246	Decl							void	"void ( FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum )"	xml_write_tkhd
ANR	123247	DeclStmt									
ANR	123248	Decl							void	"void ( FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum )"	xml_write_udta
ANR	123249	DeclStmt									
ANR	123250	Decl							void	"void ( FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum )"	xml_write_mdia
ANR	123251	DeclStmt									
ANR	123252	Decl							void	"void ( FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum )"	xml_write_stbl
ANR	123253	DeclStmt									
ANR	123254	Decl							void	"void ( time_t t , LPFILETIME pft )"	UnixTimeToFileTime
ANR	123255	DeclStmt									
ANR	123256	Decl							void	"void ( time_t t , LPSYSTEMTIME pst )"	UnixTimeToSystemTime
ANR	123257	DeclStmt									
ANR	123258	Decl							void	"void ( FILE * xmlout , time_t t )"	xml_time_out
ANR	123259	DeclStmt									
ANR	123260	Decl							void	"void ( short int value , char * buf )"	int16_to_3packedchars
ANR	123261	DeclStmt									
ANR	123262	Decl							void	"void ( FILE * xmlout , opj_mj2_t * movie )"	xml_write_moov_udta
ANR	123263	DeclStmt									
ANR	123264	Decl							void	"void ( FILE * xmlout , opj_mj2_t * movie )"	xml_write_free_and_skip
ANR	123265	DeclStmt									
ANR	123266	Decl							void	"void ( FILE * xmlout , opj_mj2_t * movie )"	xml_write_uuid
ANR	123267	DeclStmt									
ANR	123268	Decl							int	"int ( FILE * file , FILE * xmlout , mj2_sample_t * sample , unsigned int snum , opj_event_mgr_t * event_mgr )"	xml_out_frame
ANR	123269	DeclStmt									
ANR	123270	Decl							void	"void ( FILE * xmlout , opj_image_t * img , opj_cp_t * cp )"	xml_out_frame_siz
ANR	123271	DeclStmt									
ANR	123272	Decl							void	"void ( FILE * xmlout , opj_tcp_t * tcp )"	xml_out_frame_cod
ANR	123273	DeclStmt									
ANR	123274	Decl							void	"void ( FILE * xmlout , opj_tcp_t * tcp , int numcomps )"	xml_out_frame_coc
ANR	123275	DeclStmt									
ANR	123276	Decl							BOOL	"BOOL ( opj_tccp_t * tccp1 , opj_tccp_t * tccp2 )"	same_component_style
ANR	123277	DeclStmt									
ANR	123278	Decl							void	"void ( FILE * xmlout , opj_tcp_t * tcp )"	xml_out_frame_qcd
ANR	123279	DeclStmt									
ANR	123280	Decl							void	"void ( FILE * xmlout , opj_tcp_t * tcp , int numcomps )"	xml_out_frame_qcc
ANR	123281	DeclStmt									
ANR	123282	Decl							BOOL	"BOOL ( opj_tccp_t * tccp1 , opj_tccp_t * tccp2 )"	same_component_quantization
ANR	123283	DeclStmt									
ANR	123284	Decl							void	"void ( FILE * xmlout , opj_tcp_t * tcp , int numcomps )"	xml_out_frame_rgn
ANR	123285	DeclStmt									
ANR	123286	Decl							void	"void ( FILE * xmlout , opj_tcp_t * tcp )"	xml_out_frame_poc
ANR	123287	DeclStmt									
ANR	123288	Decl							void	"void ( FILE * xmlout , opj_cp_t * cp )"	xml_out_frame_ppm
ANR	123289	DeclStmt									
ANR	123290	Decl							void	"void ( FILE * xmlout , opj_tcp_t * tcp )"	xml_out_frame_ppt
ANR	123291	DeclStmt									
ANR	123292	Decl							void	void ( FILE * xmlout )	xml_out_frame_tlm
ANR	123293	DeclStmt									
ANR	123294	Decl							void	void ( FILE * xmlout )	xml_out_frame_plm
ANR	123295	DeclStmt									
ANR	123296	Decl							void	"void ( FILE * xmlout , opj_tcp_t * tcp )"	xml_out_frame_plt
ANR	123297	DeclStmt									
ANR	123298	Decl							void	void ( FILE * xmlout )	xml_out_frame_crg
ANR	123299	DeclStmt									
ANR	123300	Decl							void	"void ( FILE * xmlout , opj_tcp_t * tcp )"	xml_out_frame_com
ANR	123301	DeclStmt									
ANR	123302	Decl							void	"void ( FILE * xmlout , char * data , int data_len , char * s )"	xml_out_dump_hex
ANR	123303	DeclStmt									
ANR	123304	Decl							void	"void ( FILE * xmlout , char * data , int data_len , char * s )"	xml_out_dump_hex_and_ascii
ANR	123305	DeclStmt									
ANR	123306	Decl							void	"void ( FILE * xmlout , opj_jp2_t * jp2_struct )"	xml_out_frame_jp2h
ANR	123307	DeclStmt									
ANR	123308	Decl							void	"void ( FILE * xmlout , opj_cp_t * cp )"	xml_out_frame_jp2i
ANR	123309	DeclStmt									
ANR	123310	Decl							void	"void ( FILE * xmlout , opj_cp_t * cp )"	xml_out_frame_xml
ANR	123311	DeclStmt									
ANR	123312	Decl							void	"void ( FILE * xmlout , opj_cp_t * cp )"	xml_out_frame_uuid
ANR	123313	DeclStmt									
ANR	123314	Decl							void	"void ( FILE * xmlout , opj_cp_t * cp )"	xml_out_frame_uinf
ANR	123315	DeclStmt									
ANR	123316	Decl							void	"void ( FILE * xmlout , opj_cp_t * cp )"	xml_out_frame_unknown_type
ANR	123317	Function	xml_write_init	104:0:4975:5124							
ANR	123318	FunctionDef	"xml_write_init (BOOL n , BOOL t , BOOL r , BOOL d)"		123317	0					
ANR	123319	CompoundStatement		105:0:5027:5124	123317	0					
ANR	123320	ExpressionStatement	notes = n	107:4:5061:5070	123317	0	True				
ANR	123321	AssignmentExpression	notes = n		123317	0		=			
ANR	123322	Identifier	notes		123317	0					
ANR	123323	Identifier	n		123317	1					
ANR	123324	ExpressionStatement	sampletables = t	108:4:5076:5092	123317	1	True				
ANR	123325	AssignmentExpression	sampletables = t		123317	0		=			
ANR	123326	Identifier	sampletables		123317	0					
ANR	123327	Identifier	t		123317	1					
ANR	123328	ExpressionStatement	raw = r	109:4:5098:5105	123317	2	True				
ANR	123329	AssignmentExpression	raw = r		123317	0		=			
ANR	123330	Identifier	raw		123317	0					
ANR	123331	Identifier	r		123317	1					
ANR	123332	ExpressionStatement	derived = d	110:4:5111:5122	123317	3	True				
ANR	123333	AssignmentExpression	derived = d		123317	0		=			
ANR	123334	Identifier	derived		123317	0					
ANR	123335	Identifier	d		123317	1					
ANR	123336	ReturnType	void		123317	1					
ANR	123337	Identifier	xml_write_init		123317	2					
ANR	123338	ParameterList	"BOOL n , BOOL t , BOOL r , BOOL d"		123317	3					
ANR	123339	Parameter	BOOL n	104:20:4995:5000	123317	0	True				
ANR	123340	ParameterType	BOOL		123317	0					
ANR	123341	Identifier	n		123317	1					
ANR	123342	Parameter	BOOL t	104:28:5003:5008	123317	1	True				
ANR	123343	ParameterType	BOOL		123317	0					
ANR	123344	Identifier	t		123317	1					
ANR	123345	Parameter	BOOL r	104:36:5011:5016	123317	2	True				
ANR	123346	ParameterType	BOOL		123317	0					
ANR	123347	Identifier	r		123317	1					
ANR	123348	Parameter	BOOL d	104:44:5019:5024	123317	3	True				
ANR	123349	ParameterType	BOOL		123317	0					
ANR	123350	Identifier	d		123317	1					
ANR	123351	CFGEntryNode	ENTRY		123317		True				
ANR	123352	CFGExitNode	EXIT		123317		True				
ANR	123353	Symbol	r		123317						
ANR	123354	Symbol	notes		123317						
ANR	123355	Symbol	t		123317						
ANR	123356	Symbol	d		123317						
ANR	123357	Symbol	sampletables		123317						
ANR	123358	Symbol	raw		123317						
ANR	123359	Symbol	derived		123317						
ANR	123360	Symbol	n		123317						
ANR	123361	Function	xml_write_struct	113:0:5127:6040							
ANR	123362	FunctionDef	"xml_write_struct (FILE * file , FILE * xmlout , opj_mj2_t * movie , unsigned int sampleframe , char * stringDTD , opj_event_mgr_t * event_mgr)"		123361	0					
ANR	123363	CompoundStatement		115:0:5285:6040	123361	0					
ANR	123364	IfStatement	if ( stringDTD != NULL )		123361	0					
ANR	123365	Condition	stringDTD != NULL	117:8:5296:5312	123361	0	True				
ANR	123366	EqualityExpression	stringDTD != NULL		123361	0		!=			
ANR	123367	Identifier	stringDTD		123361	0					
ANR	123368	Identifier	NULL		123361	1					
ANR	123369	CompoundStatement		3:27:29:29	123361	1					
ANR	123370	ExpressionStatement	"fprintf ( xmlout , ""<?xml version=\\""1.0\\"" standalone=\\""no\\""?>\\n"" )"	118:8:5325:5387	123361	0	True				
ANR	123371	CallExpression	"fprintf ( xmlout , ""<?xml version=\\""1.0\\"" standalone=\\""no\\""?>\\n"" )"		123361	0					
ANR	123372	Callee	fprintf		123361	0					
ANR	123373	Identifier	fprintf		123361	0					
ANR	123374	ArgumentList	xmlout		123361	1					
ANR	123375	Argument	xmlout		123361	0					
ANR	123376	Identifier	xmlout		123361	0					
ANR	123377	Argument	"""<?xml version=\\""1.0\\"" standalone=\\""no\\""?>\\n"""		123361	1					
ANR	123378	PrimaryExpression	"""<?xml version=\\""1.0\\"" standalone=\\""no\\""?>\\n"""		123361	0					
ANR	123379	ExpressionStatement	stringDTD [ 6 ] = '\\0'	121:8:5517:5548	123361	1	True				
ANR	123380	AssignmentExpression	stringDTD [ 6 ] = '\\0'		123361	0		=			
ANR	123381	ArrayIndexing	stringDTD [ 6 ]		123361	0					
ANR	123382	Identifier	stringDTD		123361	0					
ANR	123383	PrimaryExpression	6		123361	1					
ANR	123384	PrimaryExpression	'\\0'		123361	1					
ANR	123385	ExpressionStatement	"fprintf ( xmlout , ""<!DOCTYPE MJ2_File %s \\""%s\\"">\\n"" , stringDTD , stringDTD + 7 )"	123:8:5624:5700	123361	2	True				
ANR	123386	CallExpression	"fprintf ( xmlout , ""<!DOCTYPE MJ2_File %s \\""%s\\"">\\n"" , stringDTD , stringDTD + 7 )"		123361	0					
ANR	123387	Callee	fprintf		123361	0					
ANR	123388	Identifier	fprintf		123361	0					
ANR	123389	ArgumentList	xmlout		123361	1					
ANR	123390	Argument	xmlout		123361	0					
ANR	123391	Identifier	xmlout		123361	0					
ANR	123392	Argument	"""<!DOCTYPE MJ2_File %s \\""%s\\"">\\n"""		123361	1					
ANR	123393	PrimaryExpression	"""<!DOCTYPE MJ2_File %s \\""%s\\"">\\n"""		123361	0					
ANR	123394	Argument	stringDTD		123361	2					
ANR	123395	Identifier	stringDTD		123361	0					
ANR	123396	Argument	stringDTD + 7		123361	3					
ANR	123397	AdditiveExpression	stringDTD + 7		123361	0		+			
ANR	123398	Identifier	stringDTD		123361	0					
ANR	123399	PrimaryExpression	7		123361	1					
ANR	123400	ExpressionStatement	stringDTD [ 6 ] = ' '	124:8:5710:5728	123361	3	True				
ANR	123401	AssignmentExpression	stringDTD [ 6 ] = ' '		123361	0		=			
ANR	123402	ArrayIndexing	stringDTD [ 6 ]		123361	0					
ANR	123403	Identifier	stringDTD		123361	0					
ANR	123404	PrimaryExpression	6		123361	1					
ANR	123405	PrimaryExpression	' '		123361	1					
ANR	123406	ElseStatement	else		123361	0					
ANR	123407	CompoundStatement		11:11:510:510	123361	0					
ANR	123408	ExpressionStatement	"fprintf ( xmlout , ""<?xml version=\\""1.0\\"" standalone=\\""yes\\""?>\\n"" )"	126:8:5806:5869	123361	0	True				
ANR	123409	CallExpression	"fprintf ( xmlout , ""<?xml version=\\""1.0\\"" standalone=\\""yes\\""?>\\n"" )"		123361	0					
ANR	123410	Callee	fprintf		123361	0					
ANR	123411	Identifier	fprintf		123361	0					
ANR	123412	ArgumentList	xmlout		123361	1					
ANR	123413	Argument	xmlout		123361	0					
ANR	123414	Identifier	xmlout		123361	0					
ANR	123415	Argument	"""<?xml version=\\""1.0\\"" standalone=\\""yes\\""?>\\n"""		123361	1					
ANR	123416	PrimaryExpression	"""<?xml version=\\""1.0\\"" standalone=\\""yes\\""?>\\n"""		123361	0					
ANR	123417	ExpressionStatement	"fprintf ( xmlout , ""<MJ2_File>\\n"" )"	129:4:5882:5913	123361	1	True				
ANR	123418	CallExpression	"fprintf ( xmlout , ""<MJ2_File>\\n"" )"		123361	0					
ANR	123419	Callee	fprintf		123361	0					
ANR	123420	Identifier	fprintf		123361	0					
ANR	123421	ArgumentList	xmlout		123361	1					
ANR	123422	Argument	xmlout		123361	0					
ANR	123423	Identifier	xmlout		123361	0					
ANR	123424	Argument	"""<MJ2_File>\\n"""		123361	1					
ANR	123425	PrimaryExpression	"""<MJ2_File>\\n"""		123361	0					
ANR	123426	ExpressionStatement	"xml_write_overall_header ( file , xmlout , movie , sampleframe , event_mgr )"	130:4:5919:5988	123361	2	True				
ANR	123427	CallExpression	"xml_write_overall_header ( file , xmlout , movie , sampleframe , event_mgr )"		123361	0					
ANR	123428	Callee	xml_write_overall_header		123361	0					
ANR	123429	Identifier	xml_write_overall_header		123361	0					
ANR	123430	ArgumentList	file		123361	1					
ANR	123431	Argument	file		123361	0					
ANR	123432	Identifier	file		123361	0					
ANR	123433	Argument	xmlout		123361	1					
ANR	123434	Identifier	xmlout		123361	0					
ANR	123435	Argument	movie		123361	2					
ANR	123436	Identifier	movie		123361	0					
ANR	123437	Argument	sampleframe		123361	3					
ANR	123438	Identifier	sampleframe		123361	0					
ANR	123439	Argument	event_mgr		123361	4					
ANR	123440	Identifier	event_mgr		123361	0					
ANR	123441	ExpressionStatement	"fprintf ( xmlout , ""</MJ2_File>"" )"	131:4:5994:6024	123361	3	True				
ANR	123442	CallExpression	"fprintf ( xmlout , ""</MJ2_File>"" )"		123361	0					
ANR	123443	Callee	fprintf		123361	0					
ANR	123444	Identifier	fprintf		123361	0					
ANR	123445	ArgumentList	xmlout		123361	1					
ANR	123446	Argument	xmlout		123361	0					
ANR	123447	Identifier	xmlout		123361	0					
ANR	123448	Argument	"""</MJ2_File>"""		123361	1					
ANR	123449	PrimaryExpression	"""</MJ2_File>"""		123361	0					
ANR	123450	ReturnStatement	return 0 ;	132:4:6030:6038	123361	4	True				
ANR	123451	PrimaryExpression	0		123361	0					
ANR	123452	ReturnType	int		123361	1					
ANR	123453	Identifier	xml_write_struct		123361	2					
ANR	123454	ParameterList	"FILE * file , FILE * xmlout , opj_mj2_t * movie , unsigned int sampleframe , char * stringDTD , opj_event_mgr_t * event_mgr"		123361	3					
ANR	123455	Parameter	FILE * file	113:21:5148:5157	123361	0	True				
ANR	123456	ParameterType	FILE *		123361	0					
ANR	123457	Identifier	file		123361	1					
ANR	123458	Parameter	FILE * xmlout	113:33:5160:5171	123361	1	True				
ANR	123459	ParameterType	FILE *		123361	0					
ANR	123460	Identifier	xmlout		123361	1					
ANR	123461	Parameter	opj_mj2_t * movie	113:47:5174:5190	123361	2	True				
ANR	123462	ParameterType	opj_mj2_t *		123361	0					
ANR	123463	Identifier	movie		123361	1					
ANR	123464	Parameter	unsigned int sampleframe	114:21:5214:5237	123361	3	True				
ANR	123465	ParameterType	unsigned int		123361	0					
ANR	123466	Identifier	sampleframe		123361	1					
ANR	123467	Parameter	char * stringDTD	114:47:5240:5254	123361	4	True				
ANR	123468	ParameterType	char *		123361	0					
ANR	123469	Identifier	stringDTD		123361	1					
ANR	123470	Parameter	opj_event_mgr_t * event_mgr	114:64:5257:5282	123361	5	True				
ANR	123471	ParameterType	opj_event_mgr_t *		123361	0					
ANR	123472	Identifier	event_mgr		123361	1					
ANR	123473	CFGEntryNode	ENTRY		123361		True				
ANR	123474	CFGExitNode	EXIT		123361		True				
ANR	123475	Symbol	file		123361						
ANR	123476	Symbol	NULL		123361						
ANR	123477	Symbol	movie		123361						
ANR	123478	Symbol	stringDTD		123361						
ANR	123479	Symbol	sampleframe		123361						
ANR	123480	Symbol	event_mgr		123361						
ANR	123481	Symbol	* stringDTD		123361						
ANR	123482	Symbol	xmlout		123361						
ANR	123483	Function	xml_write_overall_header	137:0:6064:7881							
ANR	123484	FunctionDef	"xml_write_overall_header (FILE * file , FILE * xmlout , opj_mj2_t * movie , unsigned int sampleframe , opj_event_mgr_t * event_mgr)"		123483	0					
ANR	123485	CompoundStatement		139:0:6221:7881	123483	0					
ANR	123486	IdentifierDeclStatement	int i ;	140:4:6227:6232	123483	0	True				
ANR	123487	IdentifierDecl	i		123483	0					
ANR	123488	IdentifierDeclType	int		123483	0					
ANR	123489	Identifier	i		123483	1					
ANR	123490	IdentifierDeclStatement	char buf [ 5 ] ;	141:4:6238:6249	123483	1	True				
ANR	123491	IdentifierDecl	buf [ 5 ]		123483	0					
ANR	123492	IdentifierDeclType	char [ 5 ]		123483	0					
ANR	123493	Identifier	buf		123483	1					
ANR	123494	PrimaryExpression	5		123483	2					
ANR	123495	ExpressionStatement	buf [ 4 ] = '\\0'	142:4:6255:6268	123483	2	True				
ANR	123496	AssignmentExpression	buf [ 4 ] = '\\0'		123483	0		=			
ANR	123497	ArrayIndexing	buf [ 4 ]		123483	0					
ANR	123498	Identifier	buf		123483	0					
ANR	123499	PrimaryExpression	4		123483	1					
ANR	123500	PrimaryExpression	'\\0'		123483	1					
ANR	123501	ExpressionStatement	"fprintf ( xmlout , ""  <JP2 BoxType=\\""jP[space][space]\\"" Signature=\\""0x0d0a870a\\"" />\\n"" )"	144:4:6275:6371	123483	3	True				
ANR	123502	CallExpression	"fprintf ( xmlout , ""  <JP2 BoxType=\\""jP[space][space]\\"" Signature=\\""0x0d0a870a\\"" />\\n"" )"		123483	0					
ANR	123503	Callee	fprintf		123483	0					
ANR	123504	Identifier	fprintf		123483	0					
ANR	123505	ArgumentList	xmlout		123483	1					
ANR	123506	Argument	xmlout		123483	0					
ANR	123507	Identifier	xmlout		123483	0					
ANR	123508	Argument	"""  <JP2 BoxType=\\""jP[space][space]\\"" Signature=\\""0x0d0a870a\\"" />\\n"""		123483	1					
ANR	123509	PrimaryExpression	"""  <JP2 BoxType=\\""jP[space][space]\\"" Signature=\\""0x0d0a870a\\"" />\\n"""		123483	0					
ANR	123510	ExpressionStatement	"fprintf ( xmlout , ""  <FileType BoxType=\\""ftyp\\"">\\n"" )"	147:4:6436:6488	123483	4	True				
ANR	123511	CallExpression	"fprintf ( xmlout , ""  <FileType BoxType=\\""ftyp\\"">\\n"" )"		123483	0					
ANR	123512	Callee	fprintf		123483	0					
ANR	123513	Identifier	fprintf		123483	0					
ANR	123514	ArgumentList	xmlout		123483	1					
ANR	123515	Argument	xmlout		123483	0					
ANR	123516	Identifier	xmlout		123483	0					
ANR	123517	Argument	"""  <FileType BoxType=\\""ftyp\\"">\\n"""		123483	1					
ANR	123518	PrimaryExpression	"""  <FileType BoxType=\\""ftyp\\"">\\n"""		123483	0					
ANR	123519	ExpressionStatement	"uint_to_chars ( movie -> brand , buf )"	148:4:6494:6526	123483	5	True				
ANR	123520	CallExpression	"uint_to_chars ( movie -> brand , buf )"		123483	0					
ANR	123521	Callee	uint_to_chars		123483	0					
ANR	123522	Identifier	uint_to_chars		123483	0					
ANR	123523	ArgumentList	movie -> brand		123483	1					
ANR	123524	Argument	movie -> brand		123483	0					
ANR	123525	PtrMemberAccess	movie -> brand		123483	0					
ANR	123526	Identifier	movie		123483	0					
ANR	123527	Identifier	brand		123483	1					
ANR	123528	Argument	buf		123483	1					
ANR	123529	Identifier	buf		123483	0					
ANR	123530	ExpressionStatement	"fprintf ( xmlout , ""    <Brand>%s</Brand>\\n"" , buf )"	149:4:6532:6593	123483	6	True				
ANR	123531	CallExpression	"fprintf ( xmlout , ""    <Brand>%s</Brand>\\n"" , buf )"		123483	0					
ANR	123532	Callee	fprintf		123483	0					
ANR	123533	Identifier	fprintf		123483	0					
ANR	123534	ArgumentList	xmlout		123483	1					
ANR	123535	Argument	xmlout		123483	0					
ANR	123536	Identifier	xmlout		123483	0					
ANR	123537	Argument	"""    <Brand>%s</Brand>\\n"""		123483	1					
ANR	123538	PrimaryExpression	"""    <Brand>%s</Brand>\\n"""		123483	0					
ANR	123539	Argument	buf		123483	2					
ANR	123540	Identifier	buf		123483	0					
ANR	123541	ExpressionStatement	"fprintf ( xmlout , ""    <MinorVersion>%u</MinorVersion>\\n"" , movie -> minversion )"	151:4:6637:6726	123483	7	True				
ANR	123542	CallExpression	"fprintf ( xmlout , ""    <MinorVersion>%u</MinorVersion>\\n"" , movie -> minversion )"		123483	0					
ANR	123543	Callee	fprintf		123483	0					
ANR	123544	Identifier	fprintf		123483	0					
ANR	123545	ArgumentList	xmlout		123483	1					
ANR	123546	Argument	xmlout		123483	0					
ANR	123547	Identifier	xmlout		123483	0					
ANR	123548	Argument	"""    <MinorVersion>%u</MinorVersion>\\n"""		123483	1					
ANR	123549	PrimaryExpression	"""    <MinorVersion>%u</MinorVersion>\\n"""		123483	0					
ANR	123550	Argument	movie -> minversion		123483	2					
ANR	123551	PtrMemberAccess	movie -> minversion		123483	0					
ANR	123552	Identifier	movie		123483	0					
ANR	123553	Identifier	minversion		123483	1					
ANR	123554	ExpressionStatement	"fprintf ( xmlout , ""    <CompatibilityList Count=\\""%d\\"">\\n"" , movie -> num_cl )"	153:4:6765:6839	123483	8	True				
ANR	123555	CallExpression	"fprintf ( xmlout , ""    <CompatibilityList Count=\\""%d\\"">\\n"" , movie -> num_cl )"		123483	0					
ANR	123556	Callee	fprintf		123483	0					
ANR	123557	Identifier	fprintf		123483	0					
ANR	123558	ArgumentList	xmlout		123483	1					
ANR	123559	Argument	xmlout		123483	0					
ANR	123560	Identifier	xmlout		123483	0					
ANR	123561	Argument	"""    <CompatibilityList Count=\\""%d\\"">\\n"""		123483	1					
ANR	123562	PrimaryExpression	"""    <CompatibilityList Count=\\""%d\\"">\\n"""		123483	0					
ANR	123563	Argument	movie -> num_cl		123483	2					
ANR	123564	PtrMemberAccess	movie -> num_cl		123483	0					
ANR	123565	Identifier	movie		123483	0					
ANR	123566	Identifier	num_cl		123483	1					
ANR	123567	ForStatement	for ( i = movie -> num_cl - 1 ; i > - 1 ; i -- )		123483	9					
ANR	123568	ForInit	i = movie -> num_cl - 1 ;	154:9:6850:6871	123483	0	True				
ANR	123569	AssignmentExpression	i = movie -> num_cl - 1		123483	0		=			
ANR	123570	Identifier	i		123483	0					
ANR	123571	AdditiveExpression	movie -> num_cl - 1		123483	1		-			
ANR	123572	PtrMemberAccess	movie -> num_cl		123483	0					
ANR	123573	Identifier	movie		123483	0					
ANR	123574	Identifier	num_cl		123483	1					
ANR	123575	PrimaryExpression	1		123483	1					
ANR	123576	Condition	i > - 1	154:32:6873:6878	123483	1	True				
ANR	123577	RelationalExpression	i > - 1		123483	0		>			
ANR	123578	Identifier	i		123483	0					
ANR	123579	UnaryOperationExpression	- 1		123483	1					
ANR	123580	UnaryOperator	-		123483	0					
ANR	123581	PrimaryExpression	1		123483	1					
ANR	123582	PostIncDecOperationExpression	i --	155:12:6893:6895	123483	2	True				
ANR	123583	Identifier	i		123483	0					
ANR	123584	IncDec	--		123483	1					
ANR	123585	CompoundStatement		17:17:676:676	123483	3					
ANR	123586	ExpressionStatement	"uint_to_chars ( movie -> cl [ i ] , buf )"	156:8:6973:7005	123483	0	True				
ANR	123587	CallExpression	"uint_to_chars ( movie -> cl [ i ] , buf )"		123483	0					
ANR	123588	Callee	uint_to_chars		123483	0					
ANR	123589	Identifier	uint_to_chars		123483	0					
ANR	123590	ArgumentList	movie -> cl [ i ]		123483	1					
ANR	123591	Argument	movie -> cl [ i ]		123483	0					
ANR	123592	ArrayIndexing	movie -> cl [ i ]		123483	0					
ANR	123593	PtrMemberAccess	movie -> cl		123483	0					
ANR	123594	Identifier	movie		123483	0					
ANR	123595	Identifier	cl		123483	1					
ANR	123596	Identifier	i		123483	1					
ANR	123597	Argument	buf		123483	1					
ANR	123598	Identifier	buf		123483	0					
ANR	123599	ExpressionStatement	"fprintf ( xmlout , ""      <CompatibleBrand>%s</CompatibleBrand>\\n"" , buf )"	157:8:7015:7100	123483	1	True				
ANR	123600	CallExpression	"fprintf ( xmlout , ""      <CompatibleBrand>%s</CompatibleBrand>\\n"" , buf )"		123483	0					
ANR	123601	Callee	fprintf		123483	0					
ANR	123602	Identifier	fprintf		123483	0					
ANR	123603	ArgumentList	xmlout		123483	1					
ANR	123604	Argument	xmlout		123483	0					
ANR	123605	Identifier	xmlout		123483	0					
ANR	123606	Argument	"""      <CompatibleBrand>%s</CompatibleBrand>\\n"""		123483	1					
ANR	123607	PrimaryExpression	"""      <CompatibleBrand>%s</CompatibleBrand>\\n"""		123483	0					
ANR	123608	Argument	buf		123483	2					
ANR	123609	Identifier	buf		123483	0					
ANR	123610	ExpressionStatement	"fprintf ( xmlout , ""    </CompatibilityList>\\n"" )"	160:4:7143:7190	123483	10	True				
ANR	123611	CallExpression	"fprintf ( xmlout , ""    </CompatibilityList>\\n"" )"		123483	0					
ANR	123612	Callee	fprintf		123483	0					
ANR	123613	Identifier	fprintf		123483	0					
ANR	123614	ArgumentList	xmlout		123483	1					
ANR	123615	Argument	xmlout		123483	0					
ANR	123616	Identifier	xmlout		123483	0					
ANR	123617	Argument	"""    </CompatibilityList>\\n"""		123483	1					
ANR	123618	PrimaryExpression	"""    </CompatibilityList>\\n"""		123483	0					
ANR	123619	ExpressionStatement	"fprintf ( xmlout , ""  </FileType>\\n"" )"	161:4:7196:7232	123483	11	True				
ANR	123620	CallExpression	"fprintf ( xmlout , ""  </FileType>\\n"" )"		123483	0					
ANR	123621	Callee	fprintf		123483	0					
ANR	123622	Identifier	fprintf		123483	0					
ANR	123623	ArgumentList	xmlout		123483	1					
ANR	123624	Argument	xmlout		123483	0					
ANR	123625	Identifier	xmlout		123483	0					
ANR	123626	Argument	"""  </FileType>\\n"""		123483	1					
ANR	123627	PrimaryExpression	"""  </FileType>\\n"""		123483	0					
ANR	123628	ExpressionStatement	"xml_write_moov ( file , xmlout , movie , sampleframe , event_mgr )"	162:4:7238:7297	123483	12	True				
ANR	123629	CallExpression	"xml_write_moov ( file , xmlout , movie , sampleframe , event_mgr )"		123483	0					
ANR	123630	Callee	xml_write_moov		123483	0					
ANR	123631	Identifier	xml_write_moov		123483	0					
ANR	123632	ArgumentList	file		123483	1					
ANR	123633	Argument	file		123483	0					
ANR	123634	Identifier	file		123483	0					
ANR	123635	Argument	xmlout		123483	1					
ANR	123636	Identifier	xmlout		123483	0					
ANR	123637	Argument	movie		123483	2					
ANR	123638	Identifier	movie		123483	0					
ANR	123639	Argument	sampleframe		123483	3					
ANR	123640	Identifier	sampleframe		123483	0					
ANR	123641	Argument	event_mgr		123483	4					
ANR	123642	Identifier	event_mgr		123483	0					
ANR	123643	ExpressionStatement	"xml_write_free_and_skip ( xmlout , movie )"	166:4:7605:7671	123483	13	True				
ANR	123644	CallExpression	"xml_write_free_and_skip ( xmlout , movie )"		123483	0					
ANR	123645	Callee	xml_write_free_and_skip		123483	0					
ANR	123646	Identifier	xml_write_free_and_skip		123483	0					
ANR	123647	ArgumentList	xmlout		123483	1					
ANR	123648	Argument	xmlout		123483	0					
ANR	123649	Identifier	xmlout		123483	0					
ANR	123650	Argument	movie		123483	1					
ANR	123651	Identifier	movie		123483	0					
ANR	123652	ExpressionStatement	"xml_write_uuid ( xmlout , movie )"	168:4:7747:7795	123483	14	True				
ANR	123653	CallExpression	"xml_write_uuid ( xmlout , movie )"		123483	0					
ANR	123654	Callee	xml_write_uuid		123483	0					
ANR	123655	Identifier	xml_write_uuid		123483	0					
ANR	123656	ArgumentList	xmlout		123483	1					
ANR	123657	Argument	xmlout		123483	0					
ANR	123658	Identifier	xmlout		123483	0					
ANR	123659	Argument	movie		123483	1					
ANR	123660	Identifier	movie		123483	0					
ANR	123661	ReturnStatement	return 0 ;	170:4:7871:7879	123483	15	True				
ANR	123662	PrimaryExpression	0		123483	0					
ANR	123663	ReturnType	int		123483	1					
ANR	123664	Identifier	xml_write_overall_header		123483	2					
ANR	123665	ParameterList	"FILE * file , FILE * xmlout , opj_mj2_t * movie , unsigned int sampleframe , opj_event_mgr_t * event_mgr"		123483	3					
ANR	123666	Parameter	FILE * file	137:29:6093:6102	123483	0	True				
ANR	123667	ParameterType	FILE *		123483	0					
ANR	123668	Identifier	file		123483	1					
ANR	123669	Parameter	FILE * xmlout	137:41:6105:6116	123483	1	True				
ANR	123670	ParameterType	FILE *		123483	0					
ANR	123671	Identifier	xmlout		123483	1					
ANR	123672	Parameter	opj_mj2_t * movie	137:55:6119:6135	123483	2	True				
ANR	123673	ParameterType	opj_mj2_t *		123483	0					
ANR	123674	Identifier	movie		123483	1					
ANR	123675	Parameter	unsigned int sampleframe	138:29:6167:6190	123483	3	True				
ANR	123676	ParameterType	unsigned int		123483	0					
ANR	123677	Identifier	sampleframe		123483	1					
ANR	123678	Parameter	opj_event_mgr_t * event_mgr	138:55:6193:6218	123483	4	True				
ANR	123679	ParameterType	opj_event_mgr_t *		123483	0					
ANR	123680	Identifier	event_mgr		123483	1					
ANR	123681	CFGEntryNode	ENTRY		123483		True				
ANR	123682	CFGExitNode	EXIT		123483		True				
ANR	123683	Symbol	* buf		123483						
ANR	123684	Symbol	movie		123483						
ANR	123685	Symbol	sampleframe		123483						
ANR	123686	Symbol	i		123483						
ANR	123687	Symbol	movie -> brand		123483						
ANR	123688	Symbol	* movie -> cl		123483						
ANR	123689	Symbol	movie -> minversion		123483						
ANR	123690	Symbol	movie -> cl		123483						
ANR	123691	Symbol	xmlout		123483						
ANR	123692	Symbol	* movie		123483						
ANR	123693	Symbol	movie -> num_cl		123483						
ANR	123694	Symbol	* * movie		123483						
ANR	123695	Symbol	buf		123483						
ANR	123696	Symbol	file		123483						
ANR	123697	Symbol	* i		123483						
ANR	123698	Symbol	event_mgr		123483						
ANR	123699	Function	xml_write_moov	175:0:7905:14563							
ANR	123700	FunctionDef	"xml_write_moov (FILE * file , FILE * xmlout , opj_mj2_t * movie , unsigned int sampleframe , opj_event_mgr_t * event_mgr)"		123699	0					
ANR	123701	CompoundStatement		177:0:8042:14563	123699	0					
ANR	123702	IdentifierDeclStatement	unsigned int tnum ;	178:4:8048:8065	123699	0	True				
ANR	123703	IdentifierDecl	tnum		123699	0					
ANR	123704	IdentifierDeclType	unsigned int		123699	0					
ANR	123705	Identifier	tnum		123699	1					
ANR	123706	IdentifierDeclStatement	mj2_tk_t * track ;	179:4:8071:8086	123699	1	True				
ANR	123707	IdentifierDecl	* track		123699	0					
ANR	123708	IdentifierDeclType	mj2_tk_t *		123699	0					
ANR	123709	Identifier	track		123699	1					
ANR	123710	ExpressionStatement	"fprintf ( xmlout , ""  <MovieBox BoxType=\\""moov\\"">\\n"" )"	181:4:8093:8145	123699	2	True				
ANR	123711	CallExpression	"fprintf ( xmlout , ""  <MovieBox BoxType=\\""moov\\"">\\n"" )"		123699	0					
ANR	123712	Callee	fprintf		123699	0					
ANR	123713	Identifier	fprintf		123699	0					
ANR	123714	ArgumentList	xmlout		123699	1					
ANR	123715	Argument	xmlout		123699	0					
ANR	123716	Identifier	xmlout		123699	0					
ANR	123717	Argument	"""  <MovieBox BoxType=\\""moov\\"">\\n"""		123699	1					
ANR	123718	PrimaryExpression	"""  <MovieBox BoxType=\\""moov\\"">\\n"""		123699	0					
ANR	123719	ExpressionStatement	"fprintf ( xmlout , ""    <MovieHeader BoxType=\\""mvhd\\"">\\n"" )"	182:4:8151:8208	123699	3	True				
ANR	123720	CallExpression	"fprintf ( xmlout , ""    <MovieHeader BoxType=\\""mvhd\\"">\\n"" )"		123699	0					
ANR	123721	Callee	fprintf		123699	0					
ANR	123722	Identifier	fprintf		123699	0					
ANR	123723	ArgumentList	xmlout		123699	1					
ANR	123724	Argument	xmlout		123699	0					
ANR	123725	Identifier	xmlout		123699	0					
ANR	123726	Argument	"""    <MovieHeader BoxType=\\""mvhd\\"">\\n"""		123699	1					
ANR	123727	PrimaryExpression	"""    <MovieHeader BoxType=\\""mvhd\\"">\\n"""		123699	0					
ANR	123728	ExpressionStatement	"fprintf ( xmlout , ""      <CreationTime>\\n"" )"	183:4:8214:8257	123699	4	True				
ANR	123729	CallExpression	"fprintf ( xmlout , ""      <CreationTime>\\n"" )"		123699	0					
ANR	123730	Callee	fprintf		123699	0					
ANR	123731	Identifier	fprintf		123699	0					
ANR	123732	ArgumentList	xmlout		123699	1					
ANR	123733	Argument	xmlout		123699	0					
ANR	123734	Identifier	xmlout		123699	0					
ANR	123735	Argument	"""      <CreationTime>\\n"""		123699	1					
ANR	123736	PrimaryExpression	"""      <CreationTime>\\n"""		123699	0					
ANR	123737	IfStatement	if ( raw )		123699	5					
ANR	123738	Condition	raw	184:8:8267:8269	123699	0	True				
ANR	123739	Identifier	raw		123699	0					
ANR	123740	CompoundStatement		8:13:229:229	123699	1					
ANR	123741	ExpressionStatement	"fprintf ( xmlout , ""        <InSeconds>%u</InSeconds>\\n"" , movie -> creation_time )"	185:8:8282:8358	123699	0	True				
ANR	123742	CallExpression	"fprintf ( xmlout , ""        <InSeconds>%u</InSeconds>\\n"" , movie -> creation_time )"		123699	0					
ANR	123743	Callee	fprintf		123699	0					
ANR	123744	Identifier	fprintf		123699	0					
ANR	123745	ArgumentList	xmlout		123699	1					
ANR	123746	Argument	xmlout		123699	0					
ANR	123747	Identifier	xmlout		123699	0					
ANR	123748	Argument	"""        <InSeconds>%u</InSeconds>\\n"""		123699	1					
ANR	123749	PrimaryExpression	"""        <InSeconds>%u</InSeconds>\\n"""		123699	0					
ANR	123750	Argument	movie -> creation_time		123699	2					
ANR	123751	PtrMemberAccess	movie -> creation_time		123699	0					
ANR	123752	Identifier	movie		123699	0					
ANR	123753	Identifier	creation_time		123699	1					
ANR	123754	IfStatement	if ( notes )		123699	6					
ANR	123755	Condition	notes	187:8:8374:8378	123699	0	True				
ANR	123756	Identifier	notes		123699	0					
ANR	123757	CompoundStatement		11:15:338:338	123699	1					
ANR	123758	ExpressionStatement	"fprintf ( xmlout , ""        <!-- Seconds since start of Jan. 1, 1904 UTC (Greenwich) -->\\n"" )"	188:8:8391:8496	123699	0	True				
ANR	123759	CallExpression	"fprintf ( xmlout , ""        <!-- Seconds since start of Jan. 1, 1904 UTC (Greenwich) -->\\n"" )"		123699	0					
ANR	123760	Callee	fprintf		123699	0					
ANR	123761	Identifier	fprintf		123699	0					
ANR	123762	ArgumentList	xmlout		123699	1					
ANR	123763	Argument	xmlout		123699	0					
ANR	123764	Identifier	xmlout		123699	0					
ANR	123765	Argument	"""        <!-- Seconds since start of Jan. 1, 1904 UTC (Greenwich) -->\\n"""		123699	1					
ANR	123766	PrimaryExpression	"""        <!-- Seconds since start of Jan. 1, 1904 UTC (Greenwich) -->\\n"""		123699	0					
ANR	123767	IfStatement	if ( derived )		123699	7					
ANR	123768	Condition	derived	194:8:8713:8719	123699	0	True				
ANR	123769	Identifier	derived		123699	0					
ANR	123770	CompoundStatement		18:17:679:679	123699	1					
ANR	123771	ExpressionStatement	"fprintf ( xmlout , ""        <AsLocalTime>"" )"	195:8:8732:8772	123699	0	True				
ANR	123772	CallExpression	"fprintf ( xmlout , ""        <AsLocalTime>"" )"		123699	0					
ANR	123773	Callee	fprintf		123699	0					
ANR	123774	Identifier	fprintf		123699	0					
ANR	123775	ArgumentList	xmlout		123699	1					
ANR	123776	Argument	xmlout		123699	0					
ANR	123777	Identifier	xmlout		123699	0					
ANR	123778	Argument	"""        <AsLocalTime>"""		123699	1					
ANR	123779	PrimaryExpression	"""        <AsLocalTime>"""		123699	0					
ANR	123780	ExpressionStatement	"xml_time_out ( xmlout , movie -> creation_time - 2082844800 )"	196:8:8782:8837	123699	1	True				
ANR	123781	CallExpression	"xml_time_out ( xmlout , movie -> creation_time - 2082844800 )"		123699	0					
ANR	123782	Callee	xml_time_out		123699	0					
ANR	123783	Identifier	xml_time_out		123699	0					
ANR	123784	ArgumentList	xmlout		123699	1					
ANR	123785	Argument	xmlout		123699	0					
ANR	123786	Identifier	xmlout		123699	0					
ANR	123787	Argument	movie -> creation_time - 2082844800		123699	1					
ANR	123788	AdditiveExpression	movie -> creation_time - 2082844800		123699	0		-			
ANR	123789	PtrMemberAccess	movie -> creation_time		123699	0					
ANR	123790	Identifier	movie		123699	0					
ANR	123791	Identifier	creation_time		123699	1					
ANR	123792	PrimaryExpression	2082844800		123699	1					
ANR	123793	ExpressionStatement	"fprintf ( xmlout , ""</AsLocalTime>\\n"" )"	197:8:8847:8882	123699	2	True				
ANR	123794	CallExpression	"fprintf ( xmlout , ""</AsLocalTime>\\n"" )"		123699	0					
ANR	123795	Callee	fprintf		123699	0					
ANR	123796	Identifier	fprintf		123699	0					
ANR	123797	ArgumentList	xmlout		123699	1					
ANR	123798	Argument	xmlout		123699	0					
ANR	123799	Identifier	xmlout		123699	0					
ANR	123800	Argument	"""</AsLocalTime>\\n"""		123699	1					
ANR	123801	PrimaryExpression	"""</AsLocalTime>\\n"""		123699	0					
ANR	123802	ExpressionStatement	"fprintf ( xmlout , ""      </CreationTime>\\n"" )"	199:4:8894:8938	123699	8	True				
ANR	123803	CallExpression	"fprintf ( xmlout , ""      </CreationTime>\\n"" )"		123699	0					
ANR	123804	Callee	fprintf		123699	0					
ANR	123805	Identifier	fprintf		123699	0					
ANR	123806	ArgumentList	xmlout		123699	1					
ANR	123807	Argument	xmlout		123699	0					
ANR	123808	Identifier	xmlout		123699	0					
ANR	123809	Argument	"""      </CreationTime>\\n"""		123699	1					
ANR	123810	PrimaryExpression	"""      </CreationTime>\\n"""		123699	0					
ANR	123811	ExpressionStatement	"fprintf ( xmlout , ""      <ModificationTime>\\n"" )"	200:4:8944:8991	123699	9	True				
ANR	123812	CallExpression	"fprintf ( xmlout , ""      <ModificationTime>\\n"" )"		123699	0					
ANR	123813	Callee	fprintf		123699	0					
ANR	123814	Identifier	fprintf		123699	0					
ANR	123815	ArgumentList	xmlout		123699	1					
ANR	123816	Argument	xmlout		123699	0					
ANR	123817	Identifier	xmlout		123699	0					
ANR	123818	Argument	"""      <ModificationTime>\\n"""		123699	1					
ANR	123819	PrimaryExpression	"""      <ModificationTime>\\n"""		123699	0					
ANR	123820	IfStatement	if ( raw )		123699	10					
ANR	123821	Condition	raw	201:8:9001:9003	123699	0	True				
ANR	123822	Identifier	raw		123699	0					
ANR	123823	CompoundStatement		25:13:963:963	123699	1					
ANR	123824	ExpressionStatement	"fprintf ( xmlout , ""        <InSeconds>%u</InSeconds>\\n"" , movie -> modification_time )"	202:8:9016:9112	123699	0	True				
ANR	123825	CallExpression	"fprintf ( xmlout , ""        <InSeconds>%u</InSeconds>\\n"" , movie -> modification_time )"		123699	0					
ANR	123826	Callee	fprintf		123699	0					
ANR	123827	Identifier	fprintf		123699	0					
ANR	123828	ArgumentList	xmlout		123699	1					
ANR	123829	Argument	xmlout		123699	0					
ANR	123830	Identifier	xmlout		123699	0					
ANR	123831	Argument	"""        <InSeconds>%u</InSeconds>\\n"""		123699	1					
ANR	123832	PrimaryExpression	"""        <InSeconds>%u</InSeconds>\\n"""		123699	0					
ANR	123833	Argument	movie -> modification_time		123699	2					
ANR	123834	PtrMemberAccess	movie -> modification_time		123699	0					
ANR	123835	Identifier	movie		123699	0					
ANR	123836	Identifier	modification_time		123699	1					
ANR	123837	IfStatement	if ( derived )		123699	11					
ANR	123838	Condition	derived	205:8:9128:9134	123699	0	True				
ANR	123839	Identifier	derived		123699	0					
ANR	123840	CompoundStatement		29:17:1094:1094	123699	1					
ANR	123841	ExpressionStatement	"fprintf ( xmlout , ""        <AsLocalTime>"" )"	206:8:9147:9187	123699	0	True				
ANR	123842	CallExpression	"fprintf ( xmlout , ""        <AsLocalTime>"" )"		123699	0					
ANR	123843	Callee	fprintf		123699	0					
ANR	123844	Identifier	fprintf		123699	0					
ANR	123845	ArgumentList	xmlout		123699	1					
ANR	123846	Argument	xmlout		123699	0					
ANR	123847	Identifier	xmlout		123699	0					
ANR	123848	Argument	"""        <AsLocalTime>"""		123699	1					
ANR	123849	PrimaryExpression	"""        <AsLocalTime>"""		123699	0					
ANR	123850	ExpressionStatement	"xml_time_out ( xmlout , movie -> modification_time - 2082844800 )"	207:8:9197:9256	123699	1	True				
ANR	123851	CallExpression	"xml_time_out ( xmlout , movie -> modification_time - 2082844800 )"		123699	0					
ANR	123852	Callee	xml_time_out		123699	0					
ANR	123853	Identifier	xml_time_out		123699	0					
ANR	123854	ArgumentList	xmlout		123699	1					
ANR	123855	Argument	xmlout		123699	0					
ANR	123856	Identifier	xmlout		123699	0					
ANR	123857	Argument	movie -> modification_time - 2082844800		123699	1					
ANR	123858	AdditiveExpression	movie -> modification_time - 2082844800		123699	0		-			
ANR	123859	PtrMemberAccess	movie -> modification_time		123699	0					
ANR	123860	Identifier	movie		123699	0					
ANR	123861	Identifier	modification_time		123699	1					
ANR	123862	PrimaryExpression	2082844800		123699	1					
ANR	123863	ExpressionStatement	"fprintf ( xmlout , ""</AsLocalTime>\\n"" )"	208:8:9266:9301	123699	2	True				
ANR	123864	CallExpression	"fprintf ( xmlout , ""</AsLocalTime>\\n"" )"		123699	0					
ANR	123865	Callee	fprintf		123699	0					
ANR	123866	Identifier	fprintf		123699	0					
ANR	123867	ArgumentList	xmlout		123699	1					
ANR	123868	Argument	xmlout		123699	0					
ANR	123869	Identifier	xmlout		123699	0					
ANR	123870	Argument	"""</AsLocalTime>\\n"""		123699	1					
ANR	123871	PrimaryExpression	"""</AsLocalTime>\\n"""		123699	0					
ANR	123872	ExpressionStatement	"fprintf ( xmlout , ""      </ModificationTime>\\n"" )"	210:4:9313:9361	123699	12	True				
ANR	123873	CallExpression	"fprintf ( xmlout , ""      </ModificationTime>\\n"" )"		123699	0					
ANR	123874	Callee	fprintf		123699	0					
ANR	123875	Identifier	fprintf		123699	0					
ANR	123876	ArgumentList	xmlout		123699	1					
ANR	123877	Argument	xmlout		123699	0					
ANR	123878	Identifier	xmlout		123699	0					
ANR	123879	Argument	"""      </ModificationTime>\\n"""		123699	1					
ANR	123880	PrimaryExpression	"""      </ModificationTime>\\n"""		123699	0					
ANR	123881	ExpressionStatement	"fprintf ( xmlout , ""      <Timescale>%d</Timescale>\\n"" , movie -> timescale )"	211:4:9367:9439	123699	13	True				
ANR	123882	CallExpression	"fprintf ( xmlout , ""      <Timescale>%d</Timescale>\\n"" , movie -> timescale )"		123699	0					
ANR	123883	Callee	fprintf		123699	0					
ANR	123884	Identifier	fprintf		123699	0					
ANR	123885	ArgumentList	xmlout		123699	1					
ANR	123886	Argument	xmlout		123699	0					
ANR	123887	Identifier	xmlout		123699	0					
ANR	123888	Argument	"""      <Timescale>%d</Timescale>\\n"""		123699	1					
ANR	123889	PrimaryExpression	"""      <Timescale>%d</Timescale>\\n"""		123699	0					
ANR	123890	Argument	movie -> timescale		123699	2					
ANR	123891	PtrMemberAccess	movie -> timescale		123699	0					
ANR	123892	Identifier	movie		123699	0					
ANR	123893	Identifier	timescale		123699	1					
ANR	123894	IfStatement	if ( notes )		123699	14					
ANR	123895	Condition	notes	212:8:9449:9453	123699	0	True				
ANR	123896	Identifier	notes		123699	0					
ANR	123897	CompoundStatement		36:15:1413:1413	123699	1					
ANR	123898	ExpressionStatement	"fprintf ( xmlout , ""      <!-- Timescale defines time units in one second -->\\n"" )"	213:8:9466:9544	123699	0	True				
ANR	123899	CallExpression	"fprintf ( xmlout , ""      <!-- Timescale defines time units in one second -->\\n"" )"		123699	0					
ANR	123900	Callee	fprintf		123699	0					
ANR	123901	Identifier	fprintf		123699	0					
ANR	123902	ArgumentList	xmlout		123699	1					
ANR	123903	Argument	xmlout		123699	0					
ANR	123904	Identifier	xmlout		123699	0					
ANR	123905	Argument	"""      <!-- Timescale defines time units in one second -->\\n"""		123699	1					
ANR	123906	PrimaryExpression	"""      <!-- Timescale defines time units in one second -->\\n"""		123699	0					
ANR	123907	ExpressionStatement	"fprintf ( xmlout , ""      <Rate>\\n"" )"	215:4:9556:9601	123699	15	True				
ANR	123908	CallExpression	"fprintf ( xmlout , ""      <Rate>\\n"" )"		123699	0					
ANR	123909	Callee	fprintf		123699	0					
ANR	123910	Identifier	fprintf		123699	0					
ANR	123911	ArgumentList	xmlout		123699	1					
ANR	123912	Argument	xmlout		123699	0					
ANR	123913	Identifier	xmlout		123699	0					
ANR	123914	Argument	"""      <Rate>\\n"""		123699	1					
ANR	123915	PrimaryExpression	"""      <Rate>\\n"""		123699	0					
ANR	123916	IfStatement	if ( notes )		123699	16					
ANR	123917	Condition	notes	217:8:9683:9687	123699	0	True				
ANR	123918	Identifier	notes		123699	0					
ANR	123919	CompoundStatement		41:15:1647:1647	123699	1					
ANR	123920	ExpressionStatement	"fprintf ( xmlout , ""      <!-- Rate to play presentation is stored as fixed-point binary 16.16 value. Decimal value is approximation. -->\\n"" )"	218:8:9700:9854	123699	0	True				
ANR	123921	CallExpression	"fprintf ( xmlout , ""      <!-- Rate to play presentation is stored as fixed-point binary 16.16 value. Decimal value is approximation. -->\\n"" )"		123699	0					
ANR	123922	Callee	fprintf		123699	0					
ANR	123923	Identifier	fprintf		123699	0					
ANR	123924	ArgumentList	xmlout		123699	1					
ANR	123925	Argument	xmlout		123699	0					
ANR	123926	Identifier	xmlout		123699	0					
ANR	123927	Argument	"""      <!-- Rate to play presentation is stored as fixed-point binary 16.16 value. Decimal value is approximation. -->\\n"""		123699	1					
ANR	123928	PrimaryExpression	"""      <!-- Rate to play presentation is stored as fixed-point binary 16.16 value. Decimal value is approximation. -->\\n"""		123699	0					
ANR	123929	ExpressionStatement	"fprintf ( xmlout , ""      <!-- Rate is expressed relative to normal (default) value of 0x00010000 (1.0) -->\\n"" )"	220:8:9864:9988	123699	1	True				
ANR	123930	CallExpression	"fprintf ( xmlout , ""      <!-- Rate is expressed relative to normal (default) value of 0x00010000 (1.0) -->\\n"" )"		123699	0					
ANR	123931	Callee	fprintf		123699	0					
ANR	123932	Identifier	fprintf		123699	0					
ANR	123933	ArgumentList	xmlout		123699	1					
ANR	123934	Argument	xmlout		123699	0					
ANR	123935	Identifier	xmlout		123699	0					
ANR	123936	Argument	"""      <!-- Rate is expressed relative to normal (default) value of 0x00010000 (1.0) -->\\n"""		123699	1					
ANR	123937	PrimaryExpression	"""      <!-- Rate is expressed relative to normal (default) value of 0x00010000 (1.0) -->\\n"""		123699	0					
ANR	123938	IfStatement	if ( raw )		123699	17					
ANR	123939	Condition	raw	223:8:10004:10006	123699	0	True				
ANR	123940	Identifier	raw		123699	0					
ANR	123941	CompoundStatement		47:13:1966:1966	123699	1					
ANR	123942	ExpressionStatement	"fprintf ( xmlout , ""        <AsHex>0x%08x</AsHex>\\n"" , movie -> rate )"	224:8:10019:10082	123699	0	True				
ANR	123943	CallExpression	"fprintf ( xmlout , ""        <AsHex>0x%08x</AsHex>\\n"" , movie -> rate )"		123699	0					
ANR	123944	Callee	fprintf		123699	0					
ANR	123945	Identifier	fprintf		123699	0					
ANR	123946	ArgumentList	xmlout		123699	1					
ANR	123947	Argument	xmlout		123699	0					
ANR	123948	Identifier	xmlout		123699	0					
ANR	123949	Argument	"""        <AsHex>0x%08x</AsHex>\\n"""		123699	1					
ANR	123950	PrimaryExpression	"""        <AsHex>0x%08x</AsHex>\\n"""		123699	0					
ANR	123951	Argument	movie -> rate		123699	2					
ANR	123952	PtrMemberAccess	movie -> rate		123699	0					
ANR	123953	Identifier	movie		123699	0					
ANR	123954	Identifier	rate		123699	1					
ANR	123955	IfStatement	if ( derived )		123699	18					
ANR	123956	Condition	derived	226:8:10098:10104	123699	0	True				
ANR	123957	Identifier	derived		123699	0					
ANR	123958	CompoundStatement		50:17:2064:2064	123699	1					
ANR	123959	ExpressionStatement	"fprintf ( xmlout , ""        <AsDecimal>%12.6f</AsDecimal>\\n"" , ( double ) movie -> rate / ( double ) 0x00010000 )"	227:8:10117:10233	123699	0	True				
ANR	123960	CallExpression	"fprintf ( xmlout , ""        <AsDecimal>%12.6f</AsDecimal>\\n"" , ( double ) movie -> rate / ( double ) 0x00010000 )"		123699	0					
ANR	123961	Callee	fprintf		123699	0					
ANR	123962	Identifier	fprintf		123699	0					
ANR	123963	ArgumentList	xmlout		123699	1					
ANR	123964	Argument	xmlout		123699	0					
ANR	123965	Identifier	xmlout		123699	0					
ANR	123966	Argument	"""        <AsDecimal>%12.6f</AsDecimal>\\n"""		123699	1					
ANR	123967	PrimaryExpression	"""        <AsDecimal>%12.6f</AsDecimal>\\n"""		123699	0					
ANR	123968	Argument	( double ) movie -> rate / ( double ) 0x00010000		123699	2					
ANR	123969	MultiplicativeExpression	( double ) movie -> rate / ( double ) 0x00010000		123699	0		/			
ANR	123970	CastExpression	( double ) movie -> rate		123699	0					
ANR	123971	CastTarget	double		123699	0					
ANR	123972	PtrMemberAccess	movie -> rate		123699	1					
ANR	123973	Identifier	movie		123699	0					
ANR	123974	Identifier	rate		123699	1					
ANR	123975	CastExpression	( double ) 0x00010000		123699	1					
ANR	123976	CastTarget	double		123699	0					
ANR	123977	PrimaryExpression	0x00010000		123699	1					
ANR	123978	ExpressionStatement	"fprintf ( xmlout , ""      </Rate>\\n"" )"	230:4:10245:10281	123699	19	True				
ANR	123979	CallExpression	"fprintf ( xmlout , ""      </Rate>\\n"" )"		123699	0					
ANR	123980	Callee	fprintf		123699	0					
ANR	123981	Identifier	fprintf		123699	0					
ANR	123982	ArgumentList	xmlout		123699	1					
ANR	123983	Argument	xmlout		123699	0					
ANR	123984	Identifier	xmlout		123699	0					
ANR	123985	Argument	"""      </Rate>\\n"""		123699	1					
ANR	123986	PrimaryExpression	"""      </Rate>\\n"""		123699	0					
ANR	123987	ExpressionStatement	"fprintf ( xmlout , ""      <Duration>\\n"" )"	231:4:10287:10326	123699	20	True				
ANR	123988	CallExpression	"fprintf ( xmlout , ""      <Duration>\\n"" )"		123699	0					
ANR	123989	Callee	fprintf		123699	0					
ANR	123990	Identifier	fprintf		123699	0					
ANR	123991	ArgumentList	xmlout		123699	1					
ANR	123992	Argument	xmlout		123699	0					
ANR	123993	Identifier	xmlout		123699	0					
ANR	123994	Argument	"""      <Duration>\\n"""		123699	1					
ANR	123995	PrimaryExpression	"""      <Duration>\\n"""		123699	0					
ANR	123996	IfStatement	if ( raw )		123699	21					
ANR	123997	Condition	raw	232:8:10336:10338	123699	0	True				
ANR	123998	Identifier	raw		123699	0					
ANR	123999	CompoundStatement		56:13:2298:2298	123699	1					
ANR	124000	ExpressionStatement	"fprintf ( xmlout , ""        <InTimeUnits>%u</InTimeUnits>\\n"" , movie -> duration )"	233:8:10351:10426	123699	0	True				
ANR	124001	CallExpression	"fprintf ( xmlout , ""        <InTimeUnits>%u</InTimeUnits>\\n"" , movie -> duration )"		123699	0					
ANR	124002	Callee	fprintf		123699	0					
ANR	124003	Identifier	fprintf		123699	0					
ANR	124004	ArgumentList	xmlout		123699	1					
ANR	124005	Argument	xmlout		123699	0					
ANR	124006	Identifier	xmlout		123699	0					
ANR	124007	Argument	"""        <InTimeUnits>%u</InTimeUnits>\\n"""		123699	1					
ANR	124008	PrimaryExpression	"""        <InTimeUnits>%u</InTimeUnits>\\n"""		123699	0					
ANR	124009	Argument	movie -> duration		123699	2					
ANR	124010	PtrMemberAccess	movie -> duration		123699	0					
ANR	124011	Identifier	movie		123699	0					
ANR	124012	Identifier	duration		123699	1					
ANR	124013	IfStatement	if ( derived )		123699	22					
ANR	124014	Condition	derived	235:8:10442:10448	123699	0	True				
ANR	124015	Identifier	derived		123699	0					
ANR	124016	CompoundStatement		59:17:2408:2408	123699	1					
ANR	124017	ExpressionStatement	"fprintf ( xmlout , ""        <InSeconds>%12.3f</InSeconds>\\n"" , ( double ) movie -> duration / ( double ) movie -> timescale )"	236:8:10461:10604	123699	0	True				
ANR	124018	CallExpression	"fprintf ( xmlout , ""        <InSeconds>%12.3f</InSeconds>\\n"" , ( double ) movie -> duration / ( double ) movie -> timescale )"		123699	0					
ANR	124019	Callee	fprintf		123699	0					
ANR	124020	Identifier	fprintf		123699	0					
ANR	124021	ArgumentList	xmlout		123699	1					
ANR	124022	Argument	xmlout		123699	0					
ANR	124023	Identifier	xmlout		123699	0					
ANR	124024	Argument	"""        <InSeconds>%12.3f</InSeconds>\\n"""		123699	1					
ANR	124025	PrimaryExpression	"""        <InSeconds>%12.3f</InSeconds>\\n"""		123699	0					
ANR	124026	Argument	( double ) movie -> duration / ( double ) movie -> timescale		123699	2					
ANR	124027	MultiplicativeExpression	( double ) movie -> duration / ( double ) movie -> timescale		123699	0		/			
ANR	124028	CastExpression	( double ) movie -> duration		123699	0					
ANR	124029	CastTarget	double		123699	0					
ANR	124030	PtrMemberAccess	movie -> duration		123699	1					
ANR	124031	Identifier	movie		123699	0					
ANR	124032	Identifier	duration		123699	1					
ANR	124033	CastExpression	( double ) movie -> timescale		123699	1					
ANR	124034	CastTarget	double		123699	0					
ANR	124035	PtrMemberAccess	movie -> timescale		123699	1					
ANR	124036	Identifier	movie		123699	0					
ANR	124037	Identifier	timescale		123699	1					
ANR	124038	ExpressionStatement	"fprintf ( xmlout , ""      </Duration>\\n"" )"	240:4:10671:10711	123699	23	True				
ANR	124039	CallExpression	"fprintf ( xmlout , ""      </Duration>\\n"" )"		123699	0					
ANR	124040	Callee	fprintf		123699	0					
ANR	124041	Identifier	fprintf		123699	0					
ANR	124042	ArgumentList	xmlout		123699	1					
ANR	124043	Argument	xmlout		123699	0					
ANR	124044	Identifier	xmlout		123699	0					
ANR	124045	Argument	"""      </Duration>\\n"""		123699	1					
ANR	124046	PrimaryExpression	"""      </Duration>\\n"""		123699	0					
ANR	124047	ExpressionStatement	movie -> volume = movie -> volume << 8	242:4:10738:10772	123699	24	True				
ANR	124048	AssignmentExpression	movie -> volume = movie -> volume << 8		123699	0		=			
ANR	124049	PtrMemberAccess	movie -> volume		123699	0					
ANR	124050	Identifier	movie		123699	0					
ANR	124051	Identifier	volume		123699	1					
ANR	124052	ShiftExpression	movie -> volume << 8		123699	1		<<			
ANR	124053	PtrMemberAccess	movie -> volume		123699	0					
ANR	124054	Identifier	movie		123699	0					
ANR	124055	Identifier	volume		123699	1					
ANR	124056	PrimaryExpression	8		123699	1					
ANR	124057	ExpressionStatement	"fprintf ( xmlout , ""      <Volume>\\n"" )"	244:4:10785:10822	123699	25	True				
ANR	124058	CallExpression	"fprintf ( xmlout , ""      <Volume>\\n"" )"		123699	0					
ANR	124059	Callee	fprintf		123699	0					
ANR	124060	Identifier	fprintf		123699	0					
ANR	124061	ArgumentList	xmlout		123699	1					
ANR	124062	Argument	xmlout		123699	0					
ANR	124063	Identifier	xmlout		123699	0					
ANR	124064	Argument	"""      <Volume>\\n"""		123699	1					
ANR	124065	PrimaryExpression	"""      <Volume>\\n"""		123699	0					
ANR	124066	IfStatement	if ( notes )		123699	26					
ANR	124067	Condition	notes	245:8:10832:10836	123699	0	True				
ANR	124068	Identifier	notes		123699	0					
ANR	124069	CompoundStatement		69:15:2796:2796	123699	1					
ANR	124070	ExpressionStatement	"fprintf ( xmlout , ""      <!-- Audio volume stored as fixed-point binary 8.8 value. Decimal value is approximation. -->\\n"" )"	246:8:10849:10985	123699	0	True				
ANR	124071	CallExpression	"fprintf ( xmlout , ""      <!-- Audio volume stored as fixed-point binary 8.8 value. Decimal value is approximation. -->\\n"" )"		123699	0					
ANR	124072	Callee	fprintf		123699	0					
ANR	124073	Identifier	fprintf		123699	0					
ANR	124074	ArgumentList	xmlout		123699	1					
ANR	124075	Argument	xmlout		123699	0					
ANR	124076	Identifier	xmlout		123699	0					
ANR	124077	Argument	"""      <!-- Audio volume stored as fixed-point binary 8.8 value. Decimal value is approximation. -->\\n"""		123699	1					
ANR	124078	PrimaryExpression	"""      <!-- Audio volume stored as fixed-point binary 8.8 value. Decimal value is approximation. -->\\n"""		123699	0					
ANR	124079	ExpressionStatement	"fprintf ( xmlout , ""      <!-- Full, normal (default) value is 0x0100 (1.0) -->\\n"" )"	248:8:10995:11091	123699	1	True				
ANR	124080	CallExpression	"fprintf ( xmlout , ""      <!-- Full, normal (default) value is 0x0100 (1.0) -->\\n"" )"		123699	0					
ANR	124081	Callee	fprintf		123699	0					
ANR	124082	Identifier	fprintf		123699	0					
ANR	124083	ArgumentList	xmlout		123699	1					
ANR	124084	Argument	xmlout		123699	0					
ANR	124085	Identifier	xmlout		123699	0					
ANR	124086	Argument	"""      <!-- Full, normal (default) value is 0x0100 (1.0) -->\\n"""		123699	1					
ANR	124087	PrimaryExpression	"""      <!-- Full, normal (default) value is 0x0100 (1.0) -->\\n"""		123699	0					
ANR	124088	IfStatement	if ( raw )		123699	27					
ANR	124089	Condition	raw	251:8:11107:11109	123699	0	True				
ANR	124090	Identifier	raw		123699	0					
ANR	124091	CompoundStatement		75:13:3069:3069	123699	1					
ANR	124092	ExpressionStatement	"fprintf ( xmlout , ""        <AsHex>0x%04x</AsHex>\\n"" , movie -> volume )"	252:8:11122:11187	123699	0	True				
ANR	124093	CallExpression	"fprintf ( xmlout , ""        <AsHex>0x%04x</AsHex>\\n"" , movie -> volume )"		123699	0					
ANR	124094	Callee	fprintf		123699	0					
ANR	124095	Identifier	fprintf		123699	0					
ANR	124096	ArgumentList	xmlout		123699	1					
ANR	124097	Argument	xmlout		123699	0					
ANR	124098	Identifier	xmlout		123699	0					
ANR	124099	Argument	"""        <AsHex>0x%04x</AsHex>\\n"""		123699	1					
ANR	124100	PrimaryExpression	"""        <AsHex>0x%04x</AsHex>\\n"""		123699	0					
ANR	124101	Argument	movie -> volume		123699	2					
ANR	124102	PtrMemberAccess	movie -> volume		123699	0					
ANR	124103	Identifier	movie		123699	0					
ANR	124104	Identifier	volume		123699	1					
ANR	124105	IfStatement	if ( derived )		123699	28					
ANR	124106	Condition	derived	254:8:11203:11209	123699	0	True				
ANR	124107	Identifier	derived		123699	0					
ANR	124108	CompoundStatement		78:17:3169:3169	123699	1					
ANR	124109	ExpressionStatement	"fprintf ( xmlout , ""        <AsDecimal>%6.3f</AsDecimal>\\n"" , ( double ) movie -> volume / ( double ) 0x0100 )"	255:8:11222:11335	123699	0	True				
ANR	124110	CallExpression	"fprintf ( xmlout , ""        <AsDecimal>%6.3f</AsDecimal>\\n"" , ( double ) movie -> volume / ( double ) 0x0100 )"		123699	0					
ANR	124111	Callee	fprintf		123699	0					
ANR	124112	Identifier	fprintf		123699	0					
ANR	124113	ArgumentList	xmlout		123699	1					
ANR	124114	Argument	xmlout		123699	0					
ANR	124115	Identifier	xmlout		123699	0					
ANR	124116	Argument	"""        <AsDecimal>%6.3f</AsDecimal>\\n"""		123699	1					
ANR	124117	PrimaryExpression	"""        <AsDecimal>%6.3f</AsDecimal>\\n"""		123699	0					
ANR	124118	Argument	( double ) movie -> volume / ( double ) 0x0100		123699	2					
ANR	124119	MultiplicativeExpression	( double ) movie -> volume / ( double ) 0x0100		123699	0		/			
ANR	124120	CastExpression	( double ) movie -> volume		123699	0					
ANR	124121	CastTarget	double		123699	0					
ANR	124122	PtrMemberAccess	movie -> volume		123699	1					
ANR	124123	Identifier	movie		123699	0					
ANR	124124	Identifier	volume		123699	1					
ANR	124125	CastExpression	( double ) 0x0100		123699	1					
ANR	124126	CastTarget	double		123699	0					
ANR	124127	PrimaryExpression	0x0100		123699	1					
ANR	124128	ExpressionStatement	"fprintf ( xmlout , ""      </Volume>\\n"" )"	258:4:11347:11385	123699	29	True				
ANR	124129	CallExpression	"fprintf ( xmlout , ""      </Volume>\\n"" )"		123699	0					
ANR	124130	Callee	fprintf		123699	0					
ANR	124131	Identifier	fprintf		123699	0					
ANR	124132	ArgumentList	xmlout		123699	1					
ANR	124133	Argument	xmlout		123699	0					
ANR	124134	Identifier	xmlout		123699	0					
ANR	124135	Argument	"""      </Volume>\\n"""		123699	1					
ANR	124136	PrimaryExpression	"""      </Volume>\\n"""		123699	0					
ANR	124137	IfStatement	if ( notes )		123699	30					
ANR	124138	Condition	notes	260:8:11416:11420	123699	0	True				
ANR	124139	Identifier	notes		123699	0					
ANR	124140	CompoundStatement		84:15:3380:3380	123699	1					
ANR	124141	ExpressionStatement	"fprintf ( xmlout , ""      <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"" )"	261:8:11433:11572	123699	0	True				
ANR	124142	CallExpression	"fprintf ( xmlout , ""      <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"" )"		123699	0					
ANR	124143	Callee	fprintf		123699	0					
ANR	124144	Identifier	fprintf		123699	0					
ANR	124145	ArgumentList	xmlout		123699	1					
ANR	124146	Argument	xmlout		123699	0					
ANR	124147	Identifier	xmlout		123699	0					
ANR	124148	Argument	"""      <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"""		123699	1					
ANR	124149	PrimaryExpression	"""      <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"""		123699	0					
ANR	124150	ExpressionStatement	movie -> volume = movie -> volume >> 8	264:4:11584:11618	123699	31	True				
ANR	124151	AssignmentExpression	movie -> volume = movie -> volume >> 8		123699	0		=			
ANR	124152	PtrMemberAccess	movie -> volume		123699	0					
ANR	124153	Identifier	movie		123699	0					
ANR	124154	Identifier	volume		123699	1					
ANR	124155	ShiftExpression	movie -> volume >> 8		123699	1		>>			
ANR	124156	PtrMemberAccess	movie -> volume		123699	0					
ANR	124157	Identifier	movie		123699	0					
ANR	124158	Identifier	volume		123699	1					
ANR	124159	PrimaryExpression	8		123699	1					
ANR	124160	ExpressionStatement	"fprintf ( xmlout , ""      <TransformationMatrix>\\n"" )"	267:4:11700:11751	123699	32	True				
ANR	124161	CallExpression	"fprintf ( xmlout , ""      <TransformationMatrix>\\n"" )"		123699	0					
ANR	124162	Callee	fprintf		123699	0					
ANR	124163	Identifier	fprintf		123699	0					
ANR	124164	ArgumentList	xmlout		123699	1					
ANR	124165	Argument	xmlout		123699	0					
ANR	124166	Identifier	xmlout		123699	0					
ANR	124167	Argument	"""      <TransformationMatrix>\\n"""		123699	1					
ANR	124168	PrimaryExpression	"""      <TransformationMatrix>\\n"""		123699	0					
ANR	124169	IfStatement	if ( notes )		123699	33					
ANR	124170	Condition	notes	268:8:11761:11765	123699	0	True				
ANR	124171	Identifier	notes		123699	0					
ANR	124172	CompoundStatement		92:15:3725:3725	123699	1					
ANR	124173	ExpressionStatement	"fprintf ( xmlout , ""      <!-- 3 x 3 Video Transformation Matrix {a,b,u,c,d,v,x,y,w}.  Required: u=0, v=0, w=1 -->\\n"" )"	269:8:11778:11909	123699	0	True				
ANR	124174	CallExpression	"fprintf ( xmlout , ""      <!-- 3 x 3 Video Transformation Matrix {a,b,u,c,d,v,x,y,w}.  Required: u=0, v=0, w=1 -->\\n"" )"		123699	0					
ANR	124175	Callee	fprintf		123699	0					
ANR	124176	Identifier	fprintf		123699	0					
ANR	124177	ArgumentList	xmlout		123699	1					
ANR	124178	Argument	xmlout		123699	0					
ANR	124179	Identifier	xmlout		123699	0					
ANR	124180	Argument	"""      <!-- 3 x 3 Video Transformation Matrix {a,b,u,c,d,v,x,y,w}.  Required: u=0, v=0, w=1 -->\\n"""		123699	1					
ANR	124181	PrimaryExpression	"""      <!-- 3 x 3 Video Transformation Matrix {a,b,u,c,d,v,x,y,w}.  Required: u=0, v=0, w=1 -->\\n"""		123699	0					
ANR	124182	ExpressionStatement	"fprintf ( xmlout , ""      <!-- Maps decompressed point (p,q) to rendered point (ap + cq + x, bp + dq + y) -->\\n"" )"	271:8:11919:12045	123699	1	True				
ANR	124183	CallExpression	"fprintf ( xmlout , ""      <!-- Maps decompressed point (p,q) to rendered point (ap + cq + x, bp + dq + y) -->\\n"" )"		123699	0					
ANR	124184	Callee	fprintf		123699	0					
ANR	124185	Identifier	fprintf		123699	0					
ANR	124186	ArgumentList	xmlout		123699	1					
ANR	124187	Argument	xmlout		123699	0					
ANR	124188	Identifier	xmlout		123699	0					
ANR	124189	Argument	"""      <!-- Maps decompressed point (p,q) to rendered point (ap + cq + x, bp + dq + y) -->\\n"""		123699	1					
ANR	124190	PrimaryExpression	"""      <!-- Maps decompressed point (p,q) to rendered point (ap + cq + x, bp + dq + y) -->\\n"""		123699	0					
ANR	124191	ExpressionStatement	"fprintf ( xmlout , ""      <!-- Stored as Fixed Point Hex: all are binary 16.16, except u,v,w are 2.30 -->\\n"" )"	273:8:12055:12177	123699	2	True				
ANR	124192	CallExpression	"fprintf ( xmlout , ""      <!-- Stored as Fixed Point Hex: all are binary 16.16, except u,v,w are 2.30 -->\\n"" )"		123699	0					
ANR	124193	Callee	fprintf		123699	0					
ANR	124194	Identifier	fprintf		123699	0					
ANR	124195	ArgumentList	xmlout		123699	1					
ANR	124196	Argument	xmlout		123699	0					
ANR	124197	Identifier	xmlout		123699	0					
ANR	124198	Argument	"""      <!-- Stored as Fixed Point Hex: all are binary 16.16, except u,v,w are 2.30 -->\\n"""		123699	1					
ANR	124199	PrimaryExpression	"""      <!-- Stored as Fixed Point Hex: all are binary 16.16, except u,v,w are 2.30 -->\\n"""		123699	0					
ANR	124200	ExpressionStatement	"fprintf ( xmlout , ""      <!-- Unity = 0x00010000,0,0,0,0x00010000,0,0,0,0x40000000 -->\\n"" )"	275:8:12187:12291	123699	3	True				
ANR	124201	CallExpression	"fprintf ( xmlout , ""      <!-- Unity = 0x00010000,0,0,0,0x00010000,0,0,0,0x40000000 -->\\n"" )"		123699	0					
ANR	124202	Callee	fprintf		123699	0					
ANR	124203	Identifier	fprintf		123699	0					
ANR	124204	ArgumentList	xmlout		123699	1					
ANR	124205	Argument	xmlout		123699	0					
ANR	124206	Identifier	xmlout		123699	0					
ANR	124207	Argument	"""      <!-- Unity = 0x00010000,0,0,0,0x00010000,0,0,0,0x40000000 -->\\n"""		123699	1					
ANR	124208	PrimaryExpression	"""      <!-- Unity = 0x00010000,0,0,0,0x00010000,0,0,0,0x40000000 -->\\n"""		123699	0					
ANR	124209	ExpressionStatement	"fprintf ( xmlout , ""        <TMa>0x%08x</TMa>\\n"" , movie -> trans_matrix [ 0 ] )"	278:4:12303:12375	123699	34	True				
ANR	124210	CallExpression	"fprintf ( xmlout , ""        <TMa>0x%08x</TMa>\\n"" , movie -> trans_matrix [ 0 ] )"		123699	0					
ANR	124211	Callee	fprintf		123699	0					
ANR	124212	Identifier	fprintf		123699	0					
ANR	124213	ArgumentList	xmlout		123699	1					
ANR	124214	Argument	xmlout		123699	0					
ANR	124215	Identifier	xmlout		123699	0					
ANR	124216	Argument	"""        <TMa>0x%08x</TMa>\\n"""		123699	1					
ANR	124217	PrimaryExpression	"""        <TMa>0x%08x</TMa>\\n"""		123699	0					
ANR	124218	Argument	movie -> trans_matrix [ 0 ]		123699	2					
ANR	124219	ArrayIndexing	movie -> trans_matrix [ 0 ]		123699	0					
ANR	124220	PtrMemberAccess	movie -> trans_matrix		123699	0					
ANR	124221	Identifier	movie		123699	0					
ANR	124222	Identifier	trans_matrix		123699	1					
ANR	124223	PrimaryExpression	0		123699	1					
ANR	124224	ExpressionStatement	"fprintf ( xmlout , ""        <TMb>0x%08x</TMb>\\n"" , movie -> trans_matrix [ 1 ] )"	279:4:12381:12453	123699	35	True				
ANR	124225	CallExpression	"fprintf ( xmlout , ""        <TMb>0x%08x</TMb>\\n"" , movie -> trans_matrix [ 1 ] )"		123699	0					
ANR	124226	Callee	fprintf		123699	0					
ANR	124227	Identifier	fprintf		123699	0					
ANR	124228	ArgumentList	xmlout		123699	1					
ANR	124229	Argument	xmlout		123699	0					
ANR	124230	Identifier	xmlout		123699	0					
ANR	124231	Argument	"""        <TMb>0x%08x</TMb>\\n"""		123699	1					
ANR	124232	PrimaryExpression	"""        <TMb>0x%08x</TMb>\\n"""		123699	0					
ANR	124233	Argument	movie -> trans_matrix [ 1 ]		123699	2					
ANR	124234	ArrayIndexing	movie -> trans_matrix [ 1 ]		123699	0					
ANR	124235	PtrMemberAccess	movie -> trans_matrix		123699	0					
ANR	124236	Identifier	movie		123699	0					
ANR	124237	Identifier	trans_matrix		123699	1					
ANR	124238	PrimaryExpression	1		123699	1					
ANR	124239	ExpressionStatement	"fprintf ( xmlout , ""        <TMu>0x%08x</TMu>\\n"" , movie -> trans_matrix [ 2 ] )"	280:4:12459:12531	123699	36	True				
ANR	124240	CallExpression	"fprintf ( xmlout , ""        <TMu>0x%08x</TMu>\\n"" , movie -> trans_matrix [ 2 ] )"		123699	0					
ANR	124241	Callee	fprintf		123699	0					
ANR	124242	Identifier	fprintf		123699	0					
ANR	124243	ArgumentList	xmlout		123699	1					
ANR	124244	Argument	xmlout		123699	0					
ANR	124245	Identifier	xmlout		123699	0					
ANR	124246	Argument	"""        <TMu>0x%08x</TMu>\\n"""		123699	1					
ANR	124247	PrimaryExpression	"""        <TMu>0x%08x</TMu>\\n"""		123699	0					
ANR	124248	Argument	movie -> trans_matrix [ 2 ]		123699	2					
ANR	124249	ArrayIndexing	movie -> trans_matrix [ 2 ]		123699	0					
ANR	124250	PtrMemberAccess	movie -> trans_matrix		123699	0					
ANR	124251	Identifier	movie		123699	0					
ANR	124252	Identifier	trans_matrix		123699	1					
ANR	124253	PrimaryExpression	2		123699	1					
ANR	124254	ExpressionStatement	"fprintf ( xmlout , ""        <TMc>0x%08x</TMc>\\n"" , movie -> trans_matrix [ 3 ] )"	281:4:12537:12609	123699	37	True				
ANR	124255	CallExpression	"fprintf ( xmlout , ""        <TMc>0x%08x</TMc>\\n"" , movie -> trans_matrix [ 3 ] )"		123699	0					
ANR	124256	Callee	fprintf		123699	0					
ANR	124257	Identifier	fprintf		123699	0					
ANR	124258	ArgumentList	xmlout		123699	1					
ANR	124259	Argument	xmlout		123699	0					
ANR	124260	Identifier	xmlout		123699	0					
ANR	124261	Argument	"""        <TMc>0x%08x</TMc>\\n"""		123699	1					
ANR	124262	PrimaryExpression	"""        <TMc>0x%08x</TMc>\\n"""		123699	0					
ANR	124263	Argument	movie -> trans_matrix [ 3 ]		123699	2					
ANR	124264	ArrayIndexing	movie -> trans_matrix [ 3 ]		123699	0					
ANR	124265	PtrMemberAccess	movie -> trans_matrix		123699	0					
ANR	124266	Identifier	movie		123699	0					
ANR	124267	Identifier	trans_matrix		123699	1					
ANR	124268	PrimaryExpression	3		123699	1					
ANR	124269	ExpressionStatement	"fprintf ( xmlout , ""        <TMd>0x%08x</TMd>\\n"" , movie -> trans_matrix [ 4 ] )"	282:4:12615:12687	123699	38	True				
ANR	124270	CallExpression	"fprintf ( xmlout , ""        <TMd>0x%08x</TMd>\\n"" , movie -> trans_matrix [ 4 ] )"		123699	0					
ANR	124271	Callee	fprintf		123699	0					
ANR	124272	Identifier	fprintf		123699	0					
ANR	124273	ArgumentList	xmlout		123699	1					
ANR	124274	Argument	xmlout		123699	0					
ANR	124275	Identifier	xmlout		123699	0					
ANR	124276	Argument	"""        <TMd>0x%08x</TMd>\\n"""		123699	1					
ANR	124277	PrimaryExpression	"""        <TMd>0x%08x</TMd>\\n"""		123699	0					
ANR	124278	Argument	movie -> trans_matrix [ 4 ]		123699	2					
ANR	124279	ArrayIndexing	movie -> trans_matrix [ 4 ]		123699	0					
ANR	124280	PtrMemberAccess	movie -> trans_matrix		123699	0					
ANR	124281	Identifier	movie		123699	0					
ANR	124282	Identifier	trans_matrix		123699	1					
ANR	124283	PrimaryExpression	4		123699	1					
ANR	124284	ExpressionStatement	"fprintf ( xmlout , ""        <TMv>0x%08x</TMv>\\n"" , movie -> trans_matrix [ 5 ] )"	283:4:12693:12765	123699	39	True				
ANR	124285	CallExpression	"fprintf ( xmlout , ""        <TMv>0x%08x</TMv>\\n"" , movie -> trans_matrix [ 5 ] )"		123699	0					
ANR	124286	Callee	fprintf		123699	0					
ANR	124287	Identifier	fprintf		123699	0					
ANR	124288	ArgumentList	xmlout		123699	1					
ANR	124289	Argument	xmlout		123699	0					
ANR	124290	Identifier	xmlout		123699	0					
ANR	124291	Argument	"""        <TMv>0x%08x</TMv>\\n"""		123699	1					
ANR	124292	PrimaryExpression	"""        <TMv>0x%08x</TMv>\\n"""		123699	0					
ANR	124293	Argument	movie -> trans_matrix [ 5 ]		123699	2					
ANR	124294	ArrayIndexing	movie -> trans_matrix [ 5 ]		123699	0					
ANR	124295	PtrMemberAccess	movie -> trans_matrix		123699	0					
ANR	124296	Identifier	movie		123699	0					
ANR	124297	Identifier	trans_matrix		123699	1					
ANR	124298	PrimaryExpression	5		123699	1					
ANR	124299	ExpressionStatement	"fprintf ( xmlout , ""        <TMx>0x%08x</TMx>\\n"" , movie -> trans_matrix [ 6 ] )"	284:4:12771:12843	123699	40	True				
ANR	124300	CallExpression	"fprintf ( xmlout , ""        <TMx>0x%08x</TMx>\\n"" , movie -> trans_matrix [ 6 ] )"		123699	0					
ANR	124301	Callee	fprintf		123699	0					
ANR	124302	Identifier	fprintf		123699	0					
ANR	124303	ArgumentList	xmlout		123699	1					
ANR	124304	Argument	xmlout		123699	0					
ANR	124305	Identifier	xmlout		123699	0					
ANR	124306	Argument	"""        <TMx>0x%08x</TMx>\\n"""		123699	1					
ANR	124307	PrimaryExpression	"""        <TMx>0x%08x</TMx>\\n"""		123699	0					
ANR	124308	Argument	movie -> trans_matrix [ 6 ]		123699	2					
ANR	124309	ArrayIndexing	movie -> trans_matrix [ 6 ]		123699	0					
ANR	124310	PtrMemberAccess	movie -> trans_matrix		123699	0					
ANR	124311	Identifier	movie		123699	0					
ANR	124312	Identifier	trans_matrix		123699	1					
ANR	124313	PrimaryExpression	6		123699	1					
ANR	124314	ExpressionStatement	"fprintf ( xmlout , ""        <TMy>0x%08x</TMy>\\n"" , movie -> trans_matrix [ 7 ] )"	285:4:12849:12921	123699	41	True				
ANR	124315	CallExpression	"fprintf ( xmlout , ""        <TMy>0x%08x</TMy>\\n"" , movie -> trans_matrix [ 7 ] )"		123699	0					
ANR	124316	Callee	fprintf		123699	0					
ANR	124317	Identifier	fprintf		123699	0					
ANR	124318	ArgumentList	xmlout		123699	1					
ANR	124319	Argument	xmlout		123699	0					
ANR	124320	Identifier	xmlout		123699	0					
ANR	124321	Argument	"""        <TMy>0x%08x</TMy>\\n"""		123699	1					
ANR	124322	PrimaryExpression	"""        <TMy>0x%08x</TMy>\\n"""		123699	0					
ANR	124323	Argument	movie -> trans_matrix [ 7 ]		123699	2					
ANR	124324	ArrayIndexing	movie -> trans_matrix [ 7 ]		123699	0					
ANR	124325	PtrMemberAccess	movie -> trans_matrix		123699	0					
ANR	124326	Identifier	movie		123699	0					
ANR	124327	Identifier	trans_matrix		123699	1					
ANR	124328	PrimaryExpression	7		123699	1					
ANR	124329	ExpressionStatement	"fprintf ( xmlout , ""        <TMw>0x%08x</TMw>\\n"" , movie -> trans_matrix [ 8 ] )"	286:4:12927:12999	123699	42	True				
ANR	124330	CallExpression	"fprintf ( xmlout , ""        <TMw>0x%08x</TMw>\\n"" , movie -> trans_matrix [ 8 ] )"		123699	0					
ANR	124331	Callee	fprintf		123699	0					
ANR	124332	Identifier	fprintf		123699	0					
ANR	124333	ArgumentList	xmlout		123699	1					
ANR	124334	Argument	xmlout		123699	0					
ANR	124335	Identifier	xmlout		123699	0					
ANR	124336	Argument	"""        <TMw>0x%08x</TMw>\\n"""		123699	1					
ANR	124337	PrimaryExpression	"""        <TMw>0x%08x</TMw>\\n"""		123699	0					
ANR	124338	Argument	movie -> trans_matrix [ 8 ]		123699	2					
ANR	124339	ArrayIndexing	movie -> trans_matrix [ 8 ]		123699	0					
ANR	124340	PtrMemberAccess	movie -> trans_matrix		123699	0					
ANR	124341	Identifier	movie		123699	0					
ANR	124342	Identifier	trans_matrix		123699	1					
ANR	124343	PrimaryExpression	8		123699	1					
ANR	124344	ExpressionStatement	"fprintf ( xmlout , ""      </TransformationMatrix>\\n"" )"	287:4:13005:13057	123699	43	True				
ANR	124345	CallExpression	"fprintf ( xmlout , ""      </TransformationMatrix>\\n"" )"		123699	0					
ANR	124346	Callee	fprintf		123699	0					
ANR	124347	Identifier	fprintf		123699	0					
ANR	124348	ArgumentList	xmlout		123699	1					
ANR	124349	Argument	xmlout		123699	0					
ANR	124350	Identifier	xmlout		123699	0					
ANR	124351	Argument	"""      </TransformationMatrix>\\n"""		123699	1					
ANR	124352	PrimaryExpression	"""      </TransformationMatrix>\\n"""		123699	0					
ANR	124353	ExpressionStatement	"fprintf ( xmlout , ""    </MovieHeader>\\n"" )"	288:4:13063:13104	123699	44	True				
ANR	124354	CallExpression	"fprintf ( xmlout , ""    </MovieHeader>\\n"" )"		123699	0					
ANR	124355	Callee	fprintf		123699	0					
ANR	124356	Identifier	fprintf		123699	0					
ANR	124357	ArgumentList	xmlout		123699	1					
ANR	124358	Argument	xmlout		123699	0					
ANR	124359	Identifier	xmlout		123699	0					
ANR	124360	Argument	"""    </MovieHeader>\\n"""		123699	1					
ANR	124361	PrimaryExpression	"""    </MovieHeader>\\n"""		123699	0					
ANR	124362	ExpressionStatement	"fprintf ( xmlout , ""    <Statistics>\\n"" )"	290:4:13111:13150	123699	45	True				
ANR	124363	CallExpression	"fprintf ( xmlout , ""    <Statistics>\\n"" )"		123699	0					
ANR	124364	Callee	fprintf		123699	0					
ANR	124365	Identifier	fprintf		123699	0					
ANR	124366	ArgumentList	xmlout		123699	1					
ANR	124367	Argument	xmlout		123699	0					
ANR	124368	Identifier	xmlout		123699	0					
ANR	124369	Argument	"""    <Statistics>\\n"""		123699	1					
ANR	124370	PrimaryExpression	"""    <Statistics>\\n"""		123699	0					
ANR	124371	ExpressionStatement	"fprintf ( xmlout , ""      <TracksFound>\\n"" )"	291:4:13156:13198	123699	46	True				
ANR	124372	CallExpression	"fprintf ( xmlout , ""      <TracksFound>\\n"" )"		123699	0					
ANR	124373	Callee	fprintf		123699	0					
ANR	124374	Identifier	fprintf		123699	0					
ANR	124375	ArgumentList	xmlout		123699	1					
ANR	124376	Argument	xmlout		123699	0					
ANR	124377	Identifier	xmlout		123699	0					
ANR	124378	Argument	"""      <TracksFound>\\n"""		123699	1					
ANR	124379	PrimaryExpression	"""      <TracksFound>\\n"""		123699	0					
ANR	124380	ExpressionStatement	"fprintf ( xmlout , ""        <Video>%d</Video>\\n"" , movie -> num_vtk )"	292:4:13204:13268	123699	47	True				
ANR	124381	CallExpression	"fprintf ( xmlout , ""        <Video>%d</Video>\\n"" , movie -> num_vtk )"		123699	0					
ANR	124382	Callee	fprintf		123699	0					
ANR	124383	Identifier	fprintf		123699	0					
ANR	124384	ArgumentList	xmlout		123699	1					
ANR	124385	Argument	xmlout		123699	0					
ANR	124386	Identifier	xmlout		123699	0					
ANR	124387	Argument	"""        <Video>%d</Video>\\n"""		123699	1					
ANR	124388	PrimaryExpression	"""        <Video>%d</Video>\\n"""		123699	0					
ANR	124389	Argument	movie -> num_vtk		123699	2					
ANR	124390	PtrMemberAccess	movie -> num_vtk		123699	0					
ANR	124391	Identifier	movie		123699	0					
ANR	124392	Identifier	num_vtk		123699	1					
ANR	124393	ExpressionStatement	"fprintf ( xmlout , ""        <Audio>%d</Audio>\\n"" , movie -> num_stk )"	293:4:13274:13338	123699	48	True				
ANR	124394	CallExpression	"fprintf ( xmlout , ""        <Audio>%d</Audio>\\n"" , movie -> num_stk )"		123699	0					
ANR	124395	Callee	fprintf		123699	0					
ANR	124396	Identifier	fprintf		123699	0					
ANR	124397	ArgumentList	xmlout		123699	1					
ANR	124398	Argument	xmlout		123699	0					
ANR	124399	Identifier	xmlout		123699	0					
ANR	124400	Argument	"""        <Audio>%d</Audio>\\n"""		123699	1					
ANR	124401	PrimaryExpression	"""        <Audio>%d</Audio>\\n"""		123699	0					
ANR	124402	Argument	movie -> num_stk		123699	2					
ANR	124403	PtrMemberAccess	movie -> num_stk		123699	0					
ANR	124404	Identifier	movie		123699	0					
ANR	124405	Identifier	num_stk		123699	1					
ANR	124406	ExpressionStatement	"fprintf ( xmlout , ""        <Hint>%d</Hint>\\n"" , movie -> num_htk )"	294:4:13344:13406	123699	49	True				
ANR	124407	CallExpression	"fprintf ( xmlout , ""        <Hint>%d</Hint>\\n"" , movie -> num_htk )"		123699	0					
ANR	124408	Callee	fprintf		123699	0					
ANR	124409	Identifier	fprintf		123699	0					
ANR	124410	ArgumentList	xmlout		123699	1					
ANR	124411	Argument	xmlout		123699	0					
ANR	124412	Identifier	xmlout		123699	0					
ANR	124413	Argument	"""        <Hint>%d</Hint>\\n"""		123699	1					
ANR	124414	PrimaryExpression	"""        <Hint>%d</Hint>\\n"""		123699	0					
ANR	124415	Argument	movie -> num_htk		123699	2					
ANR	124416	PtrMemberAccess	movie -> num_htk		123699	0					
ANR	124417	Identifier	movie		123699	0					
ANR	124418	Identifier	num_htk		123699	1					
ANR	124419	IfStatement	if ( notes )		123699	50					
ANR	124420	Condition	notes	295:8:13416:13420	123699	0	True				
ANR	124421	Identifier	notes		123699	0					
ANR	124422	CompoundStatement		119:15:5380:5380	123699	1					
ANR	124423	ExpressionStatement	"fprintf ( xmlout , ""        <!-- Hint tracks for streaming video are not part of MJ2, but are a defined extension. -->\\n"" )"	296:8:13433:13568	123699	0	True				
ANR	124424	CallExpression	"fprintf ( xmlout , ""        <!-- Hint tracks for streaming video are not part of MJ2, but are a defined extension. -->\\n"" )"		123699	0					
ANR	124425	Callee	fprintf		123699	0					
ANR	124426	Identifier	fprintf		123699	0					
ANR	124427	ArgumentList	xmlout		123699	1					
ANR	124428	Argument	xmlout		123699	0					
ANR	124429	Identifier	xmlout		123699	0					
ANR	124430	Argument	"""        <!-- Hint tracks for streaming video are not part of MJ2, but are a defined extension. -->\\n"""		123699	1					
ANR	124431	PrimaryExpression	"""        <!-- Hint tracks for streaming video are not part of MJ2, but are a defined extension. -->\\n"""		123699	0					
ANR	124432	ExpressionStatement	"fprintf ( xmlout , ""      </TracksFound>\\n"" )"	300:4:13676:13719	123699	51	True				
ANR	124433	CallExpression	"fprintf ( xmlout , ""      </TracksFound>\\n"" )"		123699	0					
ANR	124434	Callee	fprintf		123699	0					
ANR	124435	Identifier	fprintf		123699	0					
ANR	124436	ArgumentList	xmlout		123699	1					
ANR	124437	Argument	xmlout		123699	0					
ANR	124438	Identifier	xmlout		123699	0					
ANR	124439	Argument	"""      </TracksFound>\\n"""		123699	1					
ANR	124440	PrimaryExpression	"""      </TracksFound>\\n"""		123699	0					
ANR	124441	ExpressionStatement	"fprintf ( xmlout , ""    </Statistics>\\n"" )"	301:4:13725:13765	123699	52	True				
ANR	124442	CallExpression	"fprintf ( xmlout , ""    </Statistics>\\n"" )"		123699	0					
ANR	124443	Callee	fprintf		123699	0					
ANR	124444	Identifier	fprintf		123699	0					
ANR	124445	ArgumentList	xmlout		123699	1					
ANR	124446	Argument	xmlout		123699	0					
ANR	124447	Identifier	xmlout		123699	0					
ANR	124448	Argument	"""    </Statistics>\\n"""		123699	1					
ANR	124449	PrimaryExpression	"""    </Statistics>\\n"""		123699	0					
ANR	124450	ExpressionStatement	tnum = 0	308:4:14052:14060	123699	53	True				
ANR	124451	AssignmentExpression	tnum = 0		123699	0		=			
ANR	124452	Identifier	tnum		123699	0					
ANR	124453	PrimaryExpression	0		123699	1					
ANR	124454	WhileStatement	while ( movie -> tk [ tnum ] . track_type != 0 )		123699	54					
ANR	124455	Condition	movie -> tk [ tnum ] . track_type != 0	309:11:14073:14103	123699	0	True				
ANR	124456	EqualityExpression	movie -> tk [ tnum ] . track_type != 0		123699	0		!=			
ANR	124457	MemberAccess	movie -> tk [ tnum ] . track_type		123699	0					
ANR	124458	ArrayIndexing	movie -> tk [ tnum ]		123699	0					
ANR	124459	PtrMemberAccess	movie -> tk		123699	0					
ANR	124460	Identifier	movie		123699	0					
ANR	124461	Identifier	tk		123699	1					
ANR	124462	Identifier	tnum		123699	1					
ANR	124463	Identifier	track_type		123699	1					
ANR	124464	PrimaryExpression	0		123699	1					
ANR	124465	CompoundStatement		133:44:6063:6063	123699	1					
ANR	124466	ExpressionStatement	tnum ++	310:8:14116:14123	123699	0	True				
ANR	124467	PostIncDecOperationExpression	tnum ++		123699	0					
ANR	124468	Identifier	tnum		123699	0					
ANR	124469	IncDec	++		123699	1					
ANR	124470	ExpressionStatement	track = & ( movie -> tk [ tnum ] )	313:4:14136:14162	123699	55	True				
ANR	124471	AssignmentExpression	track = & ( movie -> tk [ tnum ] )		123699	0		=			
ANR	124472	Identifier	track		123699	0					
ANR	124473	UnaryOperationExpression	& ( movie -> tk [ tnum ] )		123699	1					
ANR	124474	UnaryOperator	&		123699	0					
ANR	124475	ArrayIndexing	movie -> tk [ tnum ]		123699	1					
ANR	124476	PtrMemberAccess	movie -> tk		123699	0					
ANR	124477	Identifier	movie		123699	0					
ANR	124478	Identifier	tk		123699	1					
ANR	124479	Identifier	tnum		123699	1					
ANR	124480	ExpressionStatement	"xml_write_trak ( file , xmlout , track , tnum , sampleframe , event_mgr )"	315:4:14217:14282	123699	56	True				
ANR	124481	CallExpression	"xml_write_trak ( file , xmlout , track , tnum , sampleframe , event_mgr )"		123699	0					
ANR	124482	Callee	xml_write_trak		123699	0					
ANR	124483	Identifier	xml_write_trak		123699	0					
ANR	124484	ArgumentList	file		123699	1					
ANR	124485	Argument	file		123699	0					
ANR	124486	Identifier	file		123699	0					
ANR	124487	Argument	xmlout		123699	1					
ANR	124488	Identifier	xmlout		123699	0					
ANR	124489	Argument	track		123699	2					
ANR	124490	Identifier	track		123699	0					
ANR	124491	Argument	tnum		123699	3					
ANR	124492	Identifier	tnum		123699	0					
ANR	124493	Argument	sampleframe		123699	4					
ANR	124494	Identifier	sampleframe		123699	0					
ANR	124495	Argument	event_mgr		123699	5					
ANR	124496	Identifier	event_mgr		123699	0					
ANR	124497	ExpressionStatement	"xml_write_moov_udta ( xmlout , movie )"	318:4:14374:14432	123699	57	True				
ANR	124498	CallExpression	"xml_write_moov_udta ( xmlout , movie )"		123699	0					
ANR	124499	Callee	xml_write_moov_udta		123699	0					
ANR	124500	Identifier	xml_write_moov_udta		123699	0					
ANR	124501	ArgumentList	xmlout		123699	1					
ANR	124502	Argument	xmlout		123699	0					
ANR	124503	Identifier	xmlout		123699	0					
ANR	124504	Argument	movie		123699	1					
ANR	124505	Identifier	movie		123699	0					
ANR	124506	ExpressionStatement	"fprintf ( xmlout , ""  </MovieBox>\\n"" )"	320:4:14511:14547	123699	58	True				
ANR	124507	CallExpression	"fprintf ( xmlout , ""  </MovieBox>\\n"" )"		123699	0					
ANR	124508	Callee	fprintf		123699	0					
ANR	124509	Identifier	fprintf		123699	0					
ANR	124510	ArgumentList	xmlout		123699	1					
ANR	124511	Argument	xmlout		123699	0					
ANR	124512	Identifier	xmlout		123699	0					
ANR	124513	Argument	"""  </MovieBox>\\n"""		123699	1					
ANR	124514	PrimaryExpression	"""  </MovieBox>\\n"""		123699	0					
ANR	124515	ReturnStatement	return 0 ;	321:4:14553:14561	123699	59	True				
ANR	124516	PrimaryExpression	0		123699	0					
ANR	124517	ReturnType	int		123699	1					
ANR	124518	Identifier	xml_write_moov		123699	2					
ANR	124519	ParameterList	"FILE * file , FILE * xmlout , opj_mj2_t * movie , unsigned int sampleframe , opj_event_mgr_t * event_mgr"		123699	3					
ANR	124520	Parameter	FILE * file	175:19:7924:7933	123699	0	True				
ANR	124521	ParameterType	FILE *		123699	0					
ANR	124522	Identifier	file		123699	1					
ANR	124523	Parameter	FILE * xmlout	175:31:7936:7947	123699	1	True				
ANR	124524	ParameterType	FILE *		123699	0					
ANR	124525	Identifier	xmlout		123699	1					
ANR	124526	Parameter	opj_mj2_t * movie	175:45:7950:7966	123699	2	True				
ANR	124527	ParameterType	opj_mj2_t *		123699	0					
ANR	124528	Identifier	movie		123699	1					
ANR	124529	Parameter	unsigned int sampleframe	176:19:7988:8011	123699	3	True				
ANR	124530	ParameterType	unsigned int		123699	0					
ANR	124531	Identifier	sampleframe		123699	1					
ANR	124532	Parameter	opj_event_mgr_t * event_mgr	176:45:8014:8039	123699	4	True				
ANR	124533	ParameterType	opj_event_mgr_t *		123699	0					
ANR	124534	Identifier	event_mgr		123699	1					
ANR	124535	CFGEntryNode	ENTRY		123699		True				
ANR	124536	CFGExitNode	EXIT		123699		True				
ANR	124537	Symbol	notes		123699						
ANR	124538	Symbol	movie -> rate		123699						
ANR	124539	Symbol	movie		123699						
ANR	124540	Symbol	sampleframe		123699						
ANR	124541	Symbol	* movie -> trans_matrix		123699						
ANR	124542	Symbol	movie -> duration		123699						
ANR	124543	Symbol	file		123699						
ANR	124544	Symbol	event_mgr		123699						
ANR	124545	Symbol	movie -> modification_time		123699						
ANR	124546	Symbol	movie -> creation_time		123699						
ANR	124547	Symbol	track		123699						
ANR	124548	Symbol	movie -> trans_matrix		123699						
ANR	124549	Symbol	derived		123699						
ANR	124550	Symbol	movie -> tk [ tnum ] . track_type		123699						
ANR	124551	Symbol	movie -> num_htk		123699						
ANR	124552	Symbol	tnum		123699						
ANR	124553	Symbol	raw		123699						
ANR	124554	Symbol	* tnum		123699						
ANR	124555	Symbol	xmlout		123699						
ANR	124556	Symbol	* movie		123699						
ANR	124557	Symbol	* * movie		123699						
ANR	124558	Symbol	movie -> tk		123699						
ANR	124559	Symbol	movie -> timescale		123699						
ANR	124560	Symbol	movie -> num_vtk		123699						
ANR	124561	Symbol	movie -> num_stk		123699						
ANR	124562	Symbol	* movie -> tk		123699						
ANR	124563	Symbol	movie -> volume		123699						
ANR	124564	Function	uint_to_chars	326:0:14589:14831							
ANR	124565	FunctionDef	"uint_to_chars (unsigned int value , char * buf)"		124564	0					
ANR	124566	CompoundStatement		327:0:14639:14831	124564	0					
ANR	124567	IdentifierDeclStatement	int i ;	329:4:14679:14684	124564	0	True				
ANR	124568	IdentifierDecl	i		124564	0					
ANR	124569	IdentifierDeclType	int		124564	0					
ANR	124570	Identifier	i		124564	1					
ANR	124571	ForStatement	for ( i = 3 ; i >= 0 ; i -- )		124564	1					
ANR	124572	ForInit	i = 3 ;	330:9:14695:14700	124564	0	True				
ANR	124573	AssignmentExpression	i = 3		124564	0		=			
ANR	124574	Identifier	i		124564	0					
ANR	124575	PrimaryExpression	3		124564	1					
ANR	124576	Condition	i >= 0	330:16:14702:14707	124564	1	True				
ANR	124577	RelationalExpression	i >= 0		124564	0		>=			
ANR	124578	Identifier	i		124564	0					
ANR	124579	PrimaryExpression	0		124564	1					
ANR	124580	PostIncDecOperationExpression	i --	330:24:14710:14712	124564	2	True				
ANR	124581	Identifier	i		124564	0					
ANR	124582	IncDec	--		124564	1					
ANR	124583	CompoundStatement		4:29:75:75	124564	3					
ANR	124584	ExpressionStatement	buf [ i ] = ( value & 0x000000ff )	331:8:14725:14754	124564	0	True				
ANR	124585	AssignmentExpression	buf [ i ] = ( value & 0x000000ff )		124564	0		=			
ANR	124586	ArrayIndexing	buf [ i ]		124564	0					
ANR	124587	Identifier	buf		124564	0					
ANR	124588	Identifier	i		124564	1					
ANR	124589	BitAndExpression	value & 0x000000ff		124564	1		&			
ANR	124590	Identifier	value		124564	0					
ANR	124591	PrimaryExpression	0x000000ff		124564	1					
ANR	124592	ExpressionStatement	value = ( value >> 8 )	332:8:14764:14784	124564	1	True				
ANR	124593	AssignmentExpression	value = ( value >> 8 )		124564	0		=			
ANR	124594	Identifier	value		124564	0					
ANR	124595	ShiftExpression	value >> 8		124564	1		>>			
ANR	124596	Identifier	value		124564	0					
ANR	124597	PrimaryExpression	8		124564	1					
ANR	124598	ExpressionStatement	buf [ 4 ] = '\\0'	334:4:14796:14809	124564	2	True				
ANR	124599	AssignmentExpression	buf [ 4 ] = '\\0'		124564	0		=			
ANR	124600	ArrayIndexing	buf [ 4 ]		124564	0					
ANR	124601	Identifier	buf		124564	0					
ANR	124602	PrimaryExpression	4		124564	1					
ANR	124603	PrimaryExpression	'\\0'		124564	1					
ANR	124604	ReturnType	void		124564	1					
ANR	124605	Identifier	uint_to_chars		124564	2					
ANR	124606	ParameterList	"unsigned int value , char * buf"		124564	3					
ANR	124607	Parameter	unsigned int value	326:19:14608:14625	124564	0	True				
ANR	124608	ParameterType	unsigned int		124564	0					
ANR	124609	Identifier	value		124564	1					
ANR	124610	Parameter	char * buf	326:39:14628:14636	124564	1	True				
ANR	124611	ParameterType	char *		124564	0					
ANR	124612	Identifier	buf		124564	1					
ANR	124613	CFGEntryNode	ENTRY		124564		True				
ANR	124614	CFGExitNode	EXIT		124564		True				
ANR	124615	Symbol	buf		124564						
ANR	124616	Symbol	* buf		124564						
ANR	124617	Symbol	* i		124564						
ANR	124618	Symbol	i		124564						
ANR	124619	Symbol	value		124564						
ANR	124620	Function	UnixTimeToFileTime	341:0:14879:15474							
ANR	124621	FunctionDef	"UnixTimeToFileTime (time_t t , LPFILETIME pft)"		124620	0					
ANR	124622	CompoundStatement		342:0:14929:15474	124620	0					
ANR	124623	IdentifierDeclStatement	LONGLONG ll ;	346:4:15224:15235	124620	0	True				
ANR	124624	IdentifierDecl	ll		124620	0					
ANR	124625	IdentifierDeclType	LONGLONG		124620	0					
ANR	124626	Identifier	ll		124620	1					
ANR	124627	ExpressionStatement	"ll = Int32x32To64 ( t , 10000000 ) + 116444736000000000"	347:4:15275:15326	124620	1	True				
ANR	124628	AssignmentExpression	"ll = Int32x32To64 ( t , 10000000 ) + 116444736000000000"		124620	0		=			
ANR	124629	Identifier	ll		124620	0					
ANR	124630	AdditiveExpression	"Int32x32To64 ( t , 10000000 ) + 116444736000000000"		124620	1		+			
ANR	124631	CallExpression	"Int32x32To64 ( t , 10000000 )"		124620	0					
ANR	124632	Callee	Int32x32To64		124620	0					
ANR	124633	Identifier	Int32x32To64		124620	0					
ANR	124634	ArgumentList	t		124620	1					
ANR	124635	Argument	t		124620	0					
ANR	124636	Identifier	t		124620	0					
ANR	124637	Argument	10000000		124620	1					
ANR	124638	PrimaryExpression	10000000		124620	0					
ANR	124639	PrimaryExpression	116444736000000000		124620	1					
ANR	124640	ExpressionStatement	pft -> dwLowDateTime = ( DWORD ) ll	348:4:15332:15362	124620	2	True				
ANR	124641	AssignmentExpression	pft -> dwLowDateTime = ( DWORD ) ll		124620	0		=			
ANR	124642	PtrMemberAccess	pft -> dwLowDateTime		124620	0					
ANR	124643	Identifier	pft		124620	0					
ANR	124644	Identifier	dwLowDateTime		124620	1					
ANR	124645	CastExpression	( DWORD ) ll		124620	1					
ANR	124646	CastTarget	DWORD		124620	0					
ANR	124647	Identifier	ll		124620	1					
ANR	124648	ExpressionStatement	pft -> dwHighDateTime = ( DWORD ) ( ll >> 32 )	350:4:15433:15472	124620	3	True				
ANR	124649	AssignmentExpression	pft -> dwHighDateTime = ( DWORD ) ( ll >> 32 )		124620	0		=			
ANR	124650	PtrMemberAccess	pft -> dwHighDateTime		124620	0					
ANR	124651	Identifier	pft		124620	0					
ANR	124652	Identifier	dwHighDateTime		124620	1					
ANR	124653	CastExpression	( DWORD ) ( ll >> 32 )		124620	1					
ANR	124654	CastTarget	DWORD		124620	0					
ANR	124655	ShiftExpression	ll >> 32		124620	1		>>			
ANR	124656	Identifier	ll		124620	0					
ANR	124657	PrimaryExpression	32		124620	1					
ANR	124658	ReturnType	void		124620	1					
ANR	124659	Identifier	UnixTimeToFileTime		124620	2					
ANR	124660	ParameterList	"time_t t , LPFILETIME pft"		124620	3					
ANR	124661	Parameter	time_t t	341:24:14903:14910	124620	0	True				
ANR	124662	ParameterType	time_t		124620	0					
ANR	124663	Identifier	t		124620	1					
ANR	124664	Parameter	LPFILETIME pft	341:34:14913:14926	124620	1	True				
ANR	124665	ParameterType	LPFILETIME		124620	0					
ANR	124666	Identifier	pft		124620	1					
ANR	124667	CFGEntryNode	ENTRY		124620		True				
ANR	124668	CFGExitNode	EXIT		124620		True				
ANR	124669	Symbol	ll		124620						
ANR	124670	Symbol	pft -> dwLowDateTime		124620						
ANR	124671	Symbol	t		124620						
ANR	124672	Symbol	* pft		124620						
ANR	124673	Symbol	Int32x32To64		124620						
ANR	124674	Symbol	pft		124620						
ANR	124675	Symbol	pft -> dwHighDateTime		124620						
ANR	124676	Function	UnixTimeToSystemTime	358:0:15697:15947							
ANR	124677	FunctionDef	"UnixTimeToSystemTime (time_t t , LPSYSTEMTIME pst)"		124676	0					
ANR	124678	CompoundStatement		359:0:15751:15947	124676	0					
ANR	124679	IdentifierDeclStatement	FILETIME ft ;	361:4:15784:15795	124676	0	True				
ANR	124680	IdentifierDecl	ft		124676	0					
ANR	124681	IdentifierDeclType	FILETIME		124676	0					
ANR	124682	Identifier	ft		124676	1					
ANR	124683	ExpressionStatement	"UnixTimeToFileTime ( t , & ft )"	362:4:15801:15827	124676	1	True				
ANR	124684	CallExpression	"UnixTimeToFileTime ( t , & ft )"		124676	0					
ANR	124685	Callee	UnixTimeToFileTime		124676	0					
ANR	124686	Identifier	UnixTimeToFileTime		124676	0					
ANR	124687	ArgumentList	t		124676	1					
ANR	124688	Argument	t		124676	0					
ANR	124689	Identifier	t		124676	0					
ANR	124690	Argument	& ft		124676	1					
ANR	124691	UnaryOperationExpression	& ft		124676	0					
ANR	124692	UnaryOperator	&		124676	0					
ANR	124693	Identifier	ft		124676	1					
ANR	124694	ExpressionStatement	"FileTimeToLocalFileTime ( & ft , & ft )"	363:4:15833:15866	124676	2	True				
ANR	124695	CallExpression	"FileTimeToLocalFileTime ( & ft , & ft )"		124676	0					
ANR	124696	Callee	FileTimeToLocalFileTime		124676	0					
ANR	124697	Identifier	FileTimeToLocalFileTime		124676	0					
ANR	124698	ArgumentList	& ft		124676	1					
ANR	124699	Argument	& ft		124676	0					
ANR	124700	UnaryOperationExpression	& ft		124676	0					
ANR	124701	UnaryOperator	&		124676	0					
ANR	124702	Identifier	ft		124676	1					
ANR	124703	Argument	& ft		124676	1					
ANR	124704	UnaryOperationExpression	& ft		124676	0					
ANR	124705	UnaryOperator	&		124676	0					
ANR	124706	Identifier	ft		124676	1					
ANR	124707	ExpressionStatement	"FileTimeToSystemTime ( & ft , pst )"	364:4:15915:15945	124676	3	True				
ANR	124708	CallExpression	"FileTimeToSystemTime ( & ft , pst )"		124676	0					
ANR	124709	Callee	FileTimeToSystemTime		124676	0					
ANR	124710	Identifier	FileTimeToSystemTime		124676	0					
ANR	124711	ArgumentList	& ft		124676	1					
ANR	124712	Argument	& ft		124676	0					
ANR	124713	UnaryOperationExpression	& ft		124676	0					
ANR	124714	UnaryOperator	&		124676	0					
ANR	124715	Identifier	ft		124676	1					
ANR	124716	Argument	pst		124676	1					
ANR	124717	Identifier	pst		124676	0					
ANR	124718	ReturnType	void		124676	1					
ANR	124719	Identifier	UnixTimeToSystemTime		124676	2					
ANR	124720	ParameterList	"time_t t , LPSYSTEMTIME pst"		124676	3					
ANR	124721	Parameter	time_t t	358:26:15723:15730	124676	0	True				
ANR	124722	ParameterType	time_t		124676	0					
ANR	124723	Identifier	t		124676	1					
ANR	124724	Parameter	LPSYSTEMTIME pst	358:36:15733:15748	124676	1	True				
ANR	124725	ParameterType	LPSYSTEMTIME		124676	0					
ANR	124726	Identifier	pst		124676	1					
ANR	124727	CFGEntryNode	ENTRY		124676		True				
ANR	124728	CFGExitNode	EXIT		124676		True				
ANR	124729	Symbol	pst		124676						
ANR	124730	Symbol	t		124676						
ANR	124731	Symbol	& ft		124676						
ANR	124732	Symbol	ft		124676						
ANR	124733	Function	xml_time_out	369:0:15971:16352							
ANR	124734	FunctionDef	"xml_time_out (FILE * xmlout , time_t t)"		124733	0					
ANR	124735	CompoundStatement		370:0:16013:16352	124733	0					
ANR	124736	IdentifierDeclStatement	SYSTEMTIME st ;	372:4:16046:16059	124733	0	True				
ANR	124737	IdentifierDecl	st		124733	0					
ANR	124738	IdentifierDeclType	SYSTEMTIME		124733	0					
ANR	124739	Identifier	st		124733	1					
ANR	124740	IdentifierDeclStatement	"char szLocalDate [ 255 ] , szLocalTime [ 255 ] ;"	373:4:16065:16104	124733	1	True				
ANR	124741	IdentifierDecl	szLocalDate [ 255 ]		124733	0					
ANR	124742	IdentifierDeclType	char [ 255 ]		124733	0					
ANR	124743	Identifier	szLocalDate		124733	1					
ANR	124744	PrimaryExpression	255		124733	2					
ANR	124745	IdentifierDecl	szLocalTime [ 255 ]		124733	1					
ANR	124746	IdentifierDeclType	char [ 255 ]		124733	0					
ANR	124747	Identifier	szLocalTime		124733	1					
ANR	124748	PrimaryExpression	255		124733	2					
ANR	124749	ExpressionStatement	"UnixTimeToSystemTime ( t , & st )"	374:4:16110:16138	124733	2	True				
ANR	124750	CallExpression	"UnixTimeToSystemTime ( t , & st )"		124733	0					
ANR	124751	Callee	UnixTimeToSystemTime		124733	0					
ANR	124752	Identifier	UnixTimeToSystemTime		124733	0					
ANR	124753	ArgumentList	t		124733	1					
ANR	124754	Argument	t		124733	0					
ANR	124755	Identifier	t		124733	0					
ANR	124756	Argument	& st		124733	1					
ANR	124757	UnaryOperationExpression	& st		124733	0					
ANR	124758	UnaryOperator	&		124733	0					
ANR	124759	Identifier	st		124733	1					
ANR	124760	ExpressionStatement	"GetDateFormat ( LOCALE_USER_DEFAULT , DATE_LONGDATE , & st , NULL , szLocalDate , 255 )"	375:4:16144:16222	124733	3	True				
ANR	124761	CallExpression	"GetDateFormat ( LOCALE_USER_DEFAULT , DATE_LONGDATE , & st , NULL , szLocalDate , 255 )"		124733	0					
ANR	124762	Callee	GetDateFormat		124733	0					
ANR	124763	Identifier	GetDateFormat		124733	0					
ANR	124764	ArgumentList	LOCALE_USER_DEFAULT		124733	1					
ANR	124765	Argument	LOCALE_USER_DEFAULT		124733	0					
ANR	124766	Identifier	LOCALE_USER_DEFAULT		124733	0					
ANR	124767	Argument	DATE_LONGDATE		124733	1					
ANR	124768	Identifier	DATE_LONGDATE		124733	0					
ANR	124769	Argument	& st		124733	2					
ANR	124770	UnaryOperationExpression	& st		124733	0					
ANR	124771	UnaryOperator	&		124733	0					
ANR	124772	Identifier	st		124733	1					
ANR	124773	Argument	NULL		124733	3					
ANR	124774	Identifier	NULL		124733	0					
ANR	124775	Argument	szLocalDate		124733	4					
ANR	124776	Identifier	szLocalDate		124733	0					
ANR	124777	Argument	255		124733	5					
ANR	124778	PrimaryExpression	255		124733	0					
ANR	124779	ExpressionStatement	"GetTimeFormat ( LOCALE_USER_DEFAULT , 0 , & st , NULL , szLocalTime , 255 )"	376:4:16228:16294	124733	4	True				
ANR	124780	CallExpression	"GetTimeFormat ( LOCALE_USER_DEFAULT , 0 , & st , NULL , szLocalTime , 255 )"		124733	0					
ANR	124781	Callee	GetTimeFormat		124733	0					
ANR	124782	Identifier	GetTimeFormat		124733	0					
ANR	124783	ArgumentList	LOCALE_USER_DEFAULT		124733	1					
ANR	124784	Argument	LOCALE_USER_DEFAULT		124733	0					
ANR	124785	Identifier	LOCALE_USER_DEFAULT		124733	0					
ANR	124786	Argument	0		124733	1					
ANR	124787	PrimaryExpression	0		124733	0					
ANR	124788	Argument	& st		124733	2					
ANR	124789	UnaryOperationExpression	& st		124733	0					
ANR	124790	UnaryOperator	&		124733	0					
ANR	124791	Identifier	st		124733	1					
ANR	124792	Argument	NULL		124733	3					
ANR	124793	Identifier	NULL		124733	0					
ANR	124794	Argument	szLocalTime		124733	4					
ANR	124795	Identifier	szLocalTime		124733	0					
ANR	124796	Argument	255		124733	5					
ANR	124797	PrimaryExpression	255		124733	0					
ANR	124798	ExpressionStatement	"fprintf ( xmlout , ""%s %s"" , szLocalDate , szLocalTime )"	377:4:16300:16350	124733	5	True				
ANR	124799	CallExpression	"fprintf ( xmlout , ""%s %s"" , szLocalDate , szLocalTime )"		124733	0					
ANR	124800	Callee	fprintf		124733	0					
ANR	124801	Identifier	fprintf		124733	0					
ANR	124802	ArgumentList	xmlout		124733	1					
ANR	124803	Argument	xmlout		124733	0					
ANR	124804	Identifier	xmlout		124733	0					
ANR	124805	Argument	"""%s %s"""		124733	1					
ANR	124806	PrimaryExpression	"""%s %s"""		124733	0					
ANR	124807	Argument	szLocalDate		124733	2					
ANR	124808	Identifier	szLocalDate		124733	0					
ANR	124809	Argument	szLocalTime		124733	3					
ANR	124810	Identifier	szLocalTime		124733	0					
ANR	124811	ReturnType	void		124733	1					
ANR	124812	Identifier	xml_time_out		124733	2					
ANR	124813	ParameterList	"FILE * xmlout , time_t t"		124733	3					
ANR	124814	Parameter	FILE * xmlout	369:18:15989:16000	124733	0	True				
ANR	124815	ParameterType	FILE *		124733	0					
ANR	124816	Identifier	xmlout		124733	1					
ANR	124817	Parameter	time_t t	369:32:16003:16010	124733	1	True				
ANR	124818	ParameterType	time_t		124733	0					
ANR	124819	Identifier	t		124733	1					
ANR	124820	CFGEntryNode	ENTRY		124733		True				
ANR	124821	CFGExitNode	EXIT		124733		True				
ANR	124822	Symbol	st		124733						
ANR	124823	Symbol	szLocalDate		124733						
ANR	124824	Symbol	NULL		124733						
ANR	124825	Symbol	t		124733						
ANR	124826	Symbol	DATE_LONGDATE		124733						
ANR	124827	Symbol	LOCALE_USER_DEFAULT		124733						
ANR	124828	Symbol	szLocalTime		124733						
ANR	124829	Symbol	& st		124733						
ANR	124830	Symbol	xmlout		124733						
ANR	124831	Function	xml_write_moov_udta	384:0:16404:17726							
ANR	124832	FunctionDef	"xml_write_moov_udta (FILE * xmlout , opj_mj2_t * movie)"		124831	0					
ANR	124833	CompoundStatement		385:0:16462:17726	124831	0					
ANR	124834	Statement	IMAGINE	391:4:16741:16747	124831	0	True				
ANR	124835	Statement	movie	391:12:16749:16753	124831	1	True				
ANR	124836	Statement	->	391:17:16754:16755	124831	2	True				
ANR	124837	Statement	udta	391:19:16756:16759	124831	3	True				
ANR	124838	Statement	","	391:23:16760:16760	124831	4	True				
ANR	124839	Statement	movie	391:25:16762:16766	124831	5	True				
ANR	124840	Statement	->	391:30:16767:16768	124831	6	True				
ANR	124841	Statement	copyright_count	391:32:16769:16783	124831	7	True				
ANR	124842	Statement	","	391:47:16784:16784	124831	8	True				
ANR	124843	Statement	movie	392:12:16798:16802	124831	9	True				
ANR	124844	Statement	->	392:17:16803:16804	124831	10	True				
ANR	124845	Statement	copyright_language	392:19:16805:16822	124831	11	True				
ANR	124846	Statement	[	392:37:16823:16823	124831	12	True				
ANR	124847	Statement	i	392:38:16824:16824	124831	13	True				
ANR	124848	Statement	]	392:39:16825:16825	124831	14	True				
ANR	124849	Statement	(	392:40:16826:16826	124831	15	True				
ANR	124850	Statement	array	392:41:16827:16831	124831	16	True				
ANR	124851	Statement	of	392:47:16833:16834	124831	17	True				
ANR	124852	Statement	16	392:50:16836:16837	124831	18	True				
ANR	124853	Statement	bit	392:52:16838:16840	124831	19	True				
ANR	124854	Statement	ints	392:56:16842:16845	124831	20	True				
ANR	124855	Statement	)	392:60:16846:16846	124831	21	True				
ANR	124856	Statement	","	392:61:16847:16847	124831	22	True				
ANR	124857	Statement	movie	393:12:16861:16865	124831	23	True				
ANR	124858	Statement	->	393:17:16866:16867	124831	24	True				
ANR	124859	Statement	copyright_notice	393:19:16868:16883	124831	25	True				
ANR	124860	Statement	[	393:35:16884:16884	124831	26	True				
ANR	124861	Statement	i	393:36:16885:16885	124831	27	True				
ANR	124862	Statement	]	393:37:16886:16886	124831	28	True				
ANR	124863	Statement	(	393:38:16887:16887	124831	29	True				
ANR	124864	Statement	array	393:39:16888:16892	124831	30	True				
ANR	124865	Statement	of	393:45:16894:16895	124831	31	True				
ANR	124866	Statement	buffers	393:48:16897:16903	124831	32	True				
ANR	124867	Statement	)	393:55:16904:16904	124831	33	True				
ANR	124868	Statement	PROBABLY	394:12:16918:16925	124831	34	True				
ANR	124869	Statement	ALSO	394:21:16927:16930	124831	35	True				
ANR	124870	Statement	NEED	394:26:16932:16935	124831	36	True				
ANR	124871	Statement	movie	394:31:16937:16941	124831	37	True				
ANR	124872	Statement	->	394:36:16942:16943	124831	38	True				
ANR	124873	Statement	udta_len	394:38:16944:16951	124831	39	True				
ANR	124874	Statement	or	394:47:16953:16954	124831	40	True				
ANR	124875	Statement	special	394:50:16956:16962	124831	41	True				
ANR	124876	Statement	handler	394:58:16964:16970	124831	42	True				
ANR	124877	Statement	for	394:66:16972:16974	124831	43	True				
ANR	124878	Statement	non	394:70:16976:16978	124831	44	True				
ANR	124879	Statement	-	394:74:16980:16980	124831	45	True				
ANR	124880	IdentifierDeclStatement	standard boxes char buf [ 5 ] ;	394:76:16982:17020	124831	46	True				
ANR	124881	IdentifierDecl	buf [ 5 ]		124831	0					
ANR	124882	IdentifierDeclType	standard boxes char [ 5 ]		124831	0					
ANR	124883	Identifier	buf		124831	1					
ANR	124884	PrimaryExpression	5		124831	2					
ANR	124885	IdentifierDeclStatement	int i ;	396:4:17026:17031	124831	47	True				
ANR	124886	IdentifierDecl	i		124831	0					
ANR	124887	IdentifierDeclType	int		124831	0					
ANR	124888	Identifier	i		124831	1					
ANR	124889	IfStatement	if ( movie -> udta != 1 )		124831	48					
ANR	124890	Condition	movie -> udta != 1	398:8:17042:17057	124831	0	True				
ANR	124891	EqualityExpression	movie -> udta != 1		124831	0		!=			
ANR	124892	PtrMemberAccess	movie -> udta		124831	0					
ANR	124893	Identifier	movie		124831	0					
ANR	124894	Identifier	udta		124831	1					
ANR	124895	PrimaryExpression	1		124831	1					
ANR	124896	CompoundStatement		14:26:597:597	124831	1					
ANR	124897	ReturnStatement	return ;	399:8:17070:17076	124831	0	True				
ANR	124898	ExpressionStatement	"fprintf ( xmlout , ""    <UserData BoxType=\\""udta\\"">\\n"" )"	402:4:17110:17165	124831	49	True				
ANR	124899	CallExpression	"fprintf ( xmlout , ""    <UserData BoxType=\\""udta\\"">\\n"" )"		124831	0					
ANR	124900	Callee	fprintf		124831	0					
ANR	124901	Identifier	fprintf		124831	0					
ANR	124902	ArgumentList	xmlout		124831	1					
ANR	124903	Argument	xmlout		124831	0					
ANR	124904	Identifier	xmlout		124831	0					
ANR	124905	Argument	"""    <UserData BoxType=\\""udta\\"">\\n"""		124831	1					
ANR	124906	PrimaryExpression	"""    <UserData BoxType=\\""udta\\"">\\n"""		124831	0					
ANR	124907	ForStatement	for ( i = 0 ; i < movie -> copyright_count ; i ++ )		124831	50					
ANR	124908	ForInit	i = 0 ;	403:9:17176:17181	124831	0	True				
ANR	124909	AssignmentExpression	i = 0		124831	0		=			
ANR	124910	Identifier	i		124831	0					
ANR	124911	PrimaryExpression	0		124831	1					
ANR	124912	Condition	i < movie -> copyright_count	403:16:17183:17208	124831	1	True				
ANR	124913	RelationalExpression	i < movie -> copyright_count		124831	0		<			
ANR	124914	Identifier	i		124831	0					
ANR	124915	PtrMemberAccess	movie -> copyright_count		124831	1					
ANR	124916	Identifier	movie		124831	0					
ANR	124917	Identifier	copyright_count		124831	1					
ANR	124918	PostIncDecOperationExpression	i ++	403:44:17211:17213	124831	2	True				
ANR	124919	Identifier	i		124831	0					
ANR	124920	IncDec	++		124831	1					
ANR	124921	CompoundStatement		19:49:753:753	124831	3					
ANR	124922	ExpressionStatement	"fprintf ( xmlout , ""      <Copyright BoxType=\\""cprt\\""> Instance=\\""%d\\"">\\n"" , i + 1 )"	404:8:17226:17322	124831	0	True				
ANR	124923	CallExpression	"fprintf ( xmlout , ""      <Copyright BoxType=\\""cprt\\""> Instance=\\""%d\\"">\\n"" , i + 1 )"		124831	0					
ANR	124924	Callee	fprintf		124831	0					
ANR	124925	Identifier	fprintf		124831	0					
ANR	124926	ArgumentList	xmlout		124831	1					
ANR	124927	Argument	xmlout		124831	0					
ANR	124928	Identifier	xmlout		124831	0					
ANR	124929	Argument	"""      <Copyright BoxType=\\""cprt\\""> Instance=\\""%d\\"">\\n"""		124831	1					
ANR	124930	PrimaryExpression	"""      <Copyright BoxType=\\""cprt\\""> Instance=\\""%d\\"">\\n"""		124831	0					
ANR	124931	Argument	i + 1		124831	2					
ANR	124932	AdditiveExpression	i + 1		124831	0		+			
ANR	124933	Identifier	i		124831	0					
ANR	124934	PrimaryExpression	1		124831	1					
ANR	124935	ExpressionStatement	"int16_to_3packedchars ( ( short int ) movie -> copyright_languages [ i ] , buf )"	406:8:17332:17400	124831	1	True				
ANR	124936	CallExpression	"int16_to_3packedchars ( ( short int ) movie -> copyright_languages [ i ] , buf )"		124831	0					
ANR	124937	Callee	int16_to_3packedchars		124831	0					
ANR	124938	Identifier	int16_to_3packedchars		124831	0					
ANR	124939	ArgumentList	( short int ) movie -> copyright_languages [ i ]		124831	1					
ANR	124940	Argument	( short int ) movie -> copyright_languages [ i ]		124831	0					
ANR	124941	CastExpression	( short int ) movie -> copyright_languages [ i ]		124831	0					
ANR	124942	CastTarget	short int		124831	0					
ANR	124943	ArrayIndexing	movie -> copyright_languages [ i ]		124831	1					
ANR	124944	PtrMemberAccess	movie -> copyright_languages		124831	0					
ANR	124945	Identifier	movie		124831	0					
ANR	124946	Identifier	copyright_languages		124831	1					
ANR	124947	Identifier	i		124831	1					
ANR	124948	Argument	buf		124831	1					
ANR	124949	Identifier	buf		124831	0					
ANR	124950	ExpressionStatement	"fprintf ( xmlout , ""        <Language>%s</Language>\\n"" , buf )"	407:8:17410:17468	124831	2	True				
ANR	124951	CallExpression	"fprintf ( xmlout , ""        <Language>%s</Language>\\n"" , buf )"		124831	0					
ANR	124952	Callee	fprintf		124831	0					
ANR	124953	Identifier	fprintf		124831	0					
ANR	124954	ArgumentList	xmlout		124831	1					
ANR	124955	Argument	xmlout		124831	0					
ANR	124956	Identifier	xmlout		124831	0					
ANR	124957	Argument	"""        <Language>%s</Language>\\n"""		124831	1					
ANR	124958	PrimaryExpression	"""        <Language>%s</Language>\\n"""		124831	0					
ANR	124959	Argument	buf		124831	2					
ANR	124960	Identifier	buf		124831	0					
ANR	124961	ExpressionStatement	"fprintf ( xmlout , ""        <Notice>%s</Notice>\\n"" , movie -> copyright_notices [ i ] )"	408:8:17495:17573	124831	3	True				
ANR	124962	CallExpression	"fprintf ( xmlout , ""        <Notice>%s</Notice>\\n"" , movie -> copyright_notices [ i ] )"		124831	0					
ANR	124963	Callee	fprintf		124831	0					
ANR	124964	Identifier	fprintf		124831	0					
ANR	124965	ArgumentList	xmlout		124831	1					
ANR	124966	Argument	xmlout		124831	0					
ANR	124967	Identifier	xmlout		124831	0					
ANR	124968	Argument	"""        <Notice>%s</Notice>\\n"""		124831	1					
ANR	124969	PrimaryExpression	"""        <Notice>%s</Notice>\\n"""		124831	0					
ANR	124970	Argument	movie -> copyright_notices [ i ]		124831	2					
ANR	124971	ArrayIndexing	movie -> copyright_notices [ i ]		124831	0					
ANR	124972	PtrMemberAccess	movie -> copyright_notices		124831	0					
ANR	124973	Identifier	movie		124831	0					
ANR	124974	Identifier	copyright_notices		124831	1					
ANR	124975	Identifier	i		124831	1					
ANR	124976	ExpressionStatement	"fprintf ( xmlout , ""      </Copyright>\\n"" , i + 1 )"	409:8:17583:17630	124831	4	True				
ANR	124977	CallExpression	"fprintf ( xmlout , ""      </Copyright>\\n"" , i + 1 )"		124831	0					
ANR	124978	Callee	fprintf		124831	0					
ANR	124979	Identifier	fprintf		124831	0					
ANR	124980	ArgumentList	xmlout		124831	1					
ANR	124981	Argument	xmlout		124831	0					
ANR	124982	Identifier	xmlout		124831	0					
ANR	124983	Argument	"""      </Copyright>\\n"""		124831	1					
ANR	124984	PrimaryExpression	"""      </Copyright>\\n"""		124831	0					
ANR	124985	Argument	i + 1		124831	2					
ANR	124986	AdditiveExpression	i + 1		124831	0		+			
ANR	124987	Identifier	i		124831	0					
ANR	124988	PrimaryExpression	1		124831	1					
ANR	124989	ExpressionStatement	"fprintf ( xmlout , ""    </UserData>\\n"" )"	412:4:17678:17717	124831	51	True				
ANR	124990	CallExpression	"fprintf ( xmlout , ""    </UserData>\\n"" )"		124831	0					
ANR	124991	Callee	fprintf		124831	0					
ANR	124992	Identifier	fprintf		124831	0					
ANR	124993	ArgumentList	xmlout		124831	1					
ANR	124994	Argument	xmlout		124831	0					
ANR	124995	Identifier	xmlout		124831	0					
ANR	124996	Argument	"""    </UserData>\\n"""		124831	1					
ANR	124997	PrimaryExpression	"""    </UserData>\\n"""		124831	0					
ANR	124998	ReturnType	void		124831	1					
ANR	124999	Identifier	xml_write_moov_udta		124831	2					
ANR	125000	ParameterList	"FILE * xmlout , opj_mj2_t * movie"		124831	3					
ANR	125001	Parameter	FILE * xmlout	384:25:16429:16440	124831	0	True				
ANR	125002	ParameterType	FILE *		124831	0					
ANR	125003	Identifier	xmlout		124831	1					
ANR	125004	Parameter	opj_mj2_t * movie	384:39:16443:16459	124831	1	True				
ANR	125005	ParameterType	opj_mj2_t *		124831	0					
ANR	125006	Identifier	movie		124831	1					
ANR	125007	CFGEntryNode	ENTRY		124831		True				
ANR	125008	CFGExitNode	EXIT		124831		True				
ANR	125009	Symbol	* movie -> copyright_notices		124831						
ANR	125010	Symbol	movie		124831						
ANR	125011	Symbol	movie -> udta		124831						
ANR	125012	Symbol	i		124831						
ANR	125013	Symbol	movie -> copyright_notices		124831						
ANR	125014	Symbol	movie -> copyright_count		124831						
ANR	125015	Symbol	xmlout		124831						
ANR	125016	Symbol	* movie		124831						
ANR	125017	Symbol	movie -> copyright_languages		124831						
ANR	125018	Symbol	* * movie		124831						
ANR	125019	Symbol	buf		124831						
ANR	125020	Symbol	* i		124831						
ANR	125021	Symbol	* movie -> copyright_languages		124831						
ANR	125022	Function	xml_write_free_and_skip	416:0:17729:18895							
ANR	125023	FunctionDef	"xml_write_free_and_skip (FILE * xmlout , opj_mj2_t * movie)"		125022	0					
ANR	125024	CompoundStatement		417:0:17791:18895	125022	0					
ANR	125025	Statement	IMAGINE	422:4:18032:18038	125022	0	True				
ANR	125026	Statement	movie	422:12:18040:18044	125022	1	True				
ANR	125027	Statement	->	422:17:18045:18046	125022	2	True				
ANR	125028	Statement	free_and_skip	422:19:18047:18059	125022	3	True				
ANR	125029	Statement	","	422:32:18060:18060	125022	4	True				
ANR	125030	Statement	movie	422:34:18062:18066	125022	5	True				
ANR	125031	Statement	->	422:39:18067:18068	125022	6	True				
ANR	125032	Statement	free_and_skip_count	422:41:18069:18087	125022	7	True				
ANR	125033	Statement	","	422:60:18088:18088	125022	8	True				
ANR	125034	Statement	movie	423:12:18102:18106	125022	9	True				
ANR	125035	Statement	->	423:17:18107:18108	125022	10	True				
ANR	125036	Statement	free_and_skip_content	423:19:18109:18129	125022	11	True				
ANR	125037	Statement	[	423:40:18130:18130	125022	12	True				
ANR	125038	Statement	i	423:41:18131:18131	125022	13	True				
ANR	125039	Statement	]	423:42:18132:18132	125022	14	True				
ANR	125040	Statement	(	423:43:18133:18133	125022	15	True				
ANR	125041	Statement	array	423:44:18134:18138	125022	16	True				
ANR	125042	Statement	of	423:50:18140:18141	125022	17	True				
ANR	125043	Statement	buffers	423:53:18143:18149	125022	18	True				
ANR	125044	Statement	)	423:60:18150:18150	125022	19	True				
ANR	125045	Statement	","	423:61:18151:18151	125022	20	True				
ANR	125046	Statement	movie	424:12:18165:18169	125022	21	True				
ANR	125047	Statement	->	424:17:18170:18171	125022	22	True				
ANR	125048	Statement	free_and_skip_len	424:19:18172:18188	125022	23	True				
ANR	125049	Statement	[	424:36:18189:18189	125022	24	True				
ANR	125050	Statement	i	424:37:18190:18190	125022	25	True				
ANR	125051	Statement	]	424:38:18191:18191	125022	26	True				
ANR	125052	Statement	(	424:39:18192:18192	125022	27	True				
ANR	125053	Statement	array	424:40:18193:18197	125022	28	True				
ANR	125054	Statement	of	424:46:18199:18200	125022	29	True				
ANR	125055	Statement	ints	424:49:18202:18205	125022	30	True				
ANR	125056	Statement	)	424:53:18206:18206	125022	31	True				
ANR	125057	Statement	","	424:54:18207:18207	125022	32	True				
ANR	125058	Statement	movie	424:56:18209:18213	125022	33	True				
ANR	125059	Statement	->	424:61:18214:18215	125022	34	True				
ANR	125060	Statement	is_skip	424:63:18216:18222	125022	35	True				
ANR	125061	Statement	[	424:70:18223:18223	125022	36	True				
ANR	125062	Statement	i	424:71:18224:18224	125022	37	True				
ANR	125063	Statement	]	424:72:18225:18225	125022	38	True				
ANR	125064	Statement	(	424:73:18226:18226	125022	39	True				
ANR	125065	Statement	array	424:74:18227:18231	125022	40	True				
ANR	125066	Statement	of	424:80:18233:18234	125022	41	True				
ANR	125067	Statement	BOOL	424:83:18236:18239	125022	42	True				
ANR	125068	Statement	)	424:87:18240:18240	125022	43	True				
ANR	125069	IdentifierDeclStatement	int i ;	425:12:18254:18259	125022	44	True				
ANR	125070	IdentifierDecl	i		125022	0					
ANR	125071	IdentifierDeclType	int		125022	0					
ANR	125072	Identifier	i		125022	1					
ANR	125073	IfStatement	if ( movie -> free_and_skip != 1 )		125022	45					
ANR	125074	Condition	movie -> free_and_skip != 1	427:8:18270:18294	125022	0	True				
ANR	125075	EqualityExpression	movie -> free_and_skip != 1		125022	0		!=			
ANR	125076	PtrMemberAccess	movie -> free_and_skip		125022	0					
ANR	125077	Identifier	movie		125022	0					
ANR	125078	Identifier	free_and_skip		125022	1					
ANR	125079	PrimaryExpression	1		125022	1					
ANR	125080	CompoundStatement		11:35:505:505	125022	1					
ANR	125081	ReturnStatement	return ;	428:8:18307:18313	125022	0	True				
ANR	125082	ForStatement	for ( i = 0 ; i < movie -> free_and_skip_count ; i ++ )		125022	46					
ANR	125083	ForInit	i = 0 ;	431:9:18352:18357	125022	0	True				
ANR	125084	AssignmentExpression	i = 0		125022	0		=			
ANR	125085	Identifier	i		125022	0					
ANR	125086	PrimaryExpression	0		125022	1					
ANR	125087	Condition	i < movie -> free_and_skip_count	431:16:18359:18388	125022	1	True				
ANR	125088	RelationalExpression	i < movie -> free_and_skip_count		125022	0		<			
ANR	125089	Identifier	i		125022	0					
ANR	125090	PtrMemberAccess	movie -> free_and_skip_count		125022	1					
ANR	125091	Identifier	movie		125022	0					
ANR	125092	Identifier	free_and_skip_count		125022	1					
ANR	125093	PostIncDecOperationExpression	i ++	431:48:18391:18393	125022	2	True				
ANR	125094	Identifier	i		125022	0					
ANR	125095	IncDec	++		125022	1					
ANR	125096	CompoundStatement		15:53:604:604	125022	3					
ANR	125097	IfStatement	if ( movie -> is_skip [ i ] )		125022	0					
ANR	125098	Condition	movie -> is_skip [ i ]	432:12:18410:18426	125022	0	True				
ANR	125099	ArrayIndexing	movie -> is_skip [ i ]		125022	0					
ANR	125100	PtrMemberAccess	movie -> is_skip		125022	0					
ANR	125101	Identifier	movie		125022	0					
ANR	125102	Identifier	is_skip		125022	1					
ANR	125103	Identifier	i		125022	1					
ANR	125104	CompoundStatement		16:31:637:637	125022	1					
ANR	125105	ExpressionStatement	"fprintf ( xmlout , ""  <Skip BoxType=\\""skip\\"">\\n"" )"	433:12:18443:18492	125022	0	True				
ANR	125106	CallExpression	"fprintf ( xmlout , ""  <Skip BoxType=\\""skip\\"">\\n"" )"		125022	0					
ANR	125107	Callee	fprintf		125022	0					
ANR	125108	Identifier	fprintf		125022	0					
ANR	125109	ArgumentList	xmlout		125022	1					
ANR	125110	Argument	xmlout		125022	0					
ANR	125111	Identifier	xmlout		125022	0					
ANR	125112	Argument	"""  <Skip BoxType=\\""skip\\"">\\n"""		125022	1					
ANR	125113	PrimaryExpression	"""  <Skip BoxType=\\""skip\\"">\\n"""		125022	0					
ANR	125114	ElseStatement	else		125022	0					
ANR	125115	CompoundStatement		18:15:717:717	125022	0					
ANR	125116	ExpressionStatement	"fprintf ( xmlout , ""  <Free BoxType=\\""free\\"">\\n"" )"	435:12:18523:18572	125022	0	True				
ANR	125117	CallExpression	"fprintf ( xmlout , ""  <Free BoxType=\\""free\\"">\\n"" )"		125022	0					
ANR	125118	Callee	fprintf		125022	0					
ANR	125119	Identifier	fprintf		125022	0					
ANR	125120	ArgumentList	xmlout		125022	1					
ANR	125121	Argument	xmlout		125022	0					
ANR	125122	Identifier	xmlout		125022	0					
ANR	125123	Argument	"""  <Free BoxType=\\""free\\"">\\n"""		125022	1					
ANR	125124	PrimaryExpression	"""  <Free BoxType=\\""free\\"">\\n"""		125022	0					
ANR	125125	ExpressionStatement	"xml_out_dump_hex_and_ascii ( xmlout , movie -> free_and_skip_contents [ i ] , movie -> free_and_skip_len [ i ] )"	438:8:18593:18725	125022	1	True				
ANR	125126	CallExpression	"xml_out_dump_hex_and_ascii ( xmlout , movie -> free_and_skip_contents [ i ] , movie -> free_and_skip_len [ i ] )"		125022	0					
ANR	125127	Callee	xml_out_dump_hex_and_ascii		125022	0					
ANR	125128	Identifier	xml_out_dump_hex_and_ascii		125022	0					
ANR	125129	ArgumentList	xmlout		125022	1					
ANR	125130	Argument	xmlout		125022	0					
ANR	125131	Identifier	xmlout		125022	0					
ANR	125132	Argument	movie -> free_and_skip_contents [ i ]		125022	1					
ANR	125133	ArrayIndexing	movie -> free_and_skip_contents [ i ]		125022	0					
ANR	125134	PtrMemberAccess	movie -> free_and_skip_contents		125022	0					
ANR	125135	Identifier	movie		125022	0					
ANR	125136	Identifier	free_and_skip_contents		125022	1					
ANR	125137	Identifier	i		125022	1					
ANR	125138	Argument	movie -> free_and_skip_len [ i ]		125022	2					
ANR	125139	ArrayIndexing	movie -> free_and_skip_len [ i ]		125022	0					
ANR	125140	PtrMemberAccess	movie -> free_and_skip_len		125022	0					
ANR	125141	Identifier	movie		125022	0					
ANR	125142	Identifier	free_and_skip_len		125022	1					
ANR	125143	Identifier	i		125022	1					
ANR	125144	IfStatement	if ( movie -> is_skip [ i ] )		125022	2					
ANR	125145	Condition	movie -> is_skip [ i ]	441:12:18740:18756	125022	0	True				
ANR	125146	ArrayIndexing	movie -> is_skip [ i ]		125022	0					
ANR	125147	PtrMemberAccess	movie -> is_skip		125022	0					
ANR	125148	Identifier	movie		125022	0					
ANR	125149	Identifier	is_skip		125022	1					
ANR	125150	Identifier	i		125022	1					
ANR	125151	CompoundStatement		25:31:967:967	125022	1					
ANR	125152	ExpressionStatement	"fprintf ( xmlout , ""  </Skip>\\n"" )"	442:12:18773:18806	125022	0	True				
ANR	125153	CallExpression	"fprintf ( xmlout , ""  </Skip>\\n"" )"		125022	0					
ANR	125154	Callee	fprintf		125022	0					
ANR	125155	Identifier	fprintf		125022	0					
ANR	125156	ArgumentList	xmlout		125022	1					
ANR	125157	Argument	xmlout		125022	0					
ANR	125158	Identifier	xmlout		125022	0					
ANR	125159	Argument	"""  </Skip>\\n"""		125022	1					
ANR	125160	PrimaryExpression	"""  </Skip>\\n"""		125022	0					
ANR	125161	ElseStatement	else		125022	0					
ANR	125162	CompoundStatement		27:15:1031:1031	125022	0					
ANR	125163	ExpressionStatement	"fprintf ( xmlout , ""  </Free>\\n"" )"	444:12:18837:18870	125022	0	True				
ANR	125164	CallExpression	"fprintf ( xmlout , ""  </Free>\\n"" )"		125022	0					
ANR	125165	Callee	fprintf		125022	0					
ANR	125166	Identifier	fprintf		125022	0					
ANR	125167	ArgumentList	xmlout		125022	1					
ANR	125168	Argument	xmlout		125022	0					
ANR	125169	Identifier	xmlout		125022	0					
ANR	125170	Argument	"""  </Free>\\n"""		125022	1					
ANR	125171	PrimaryExpression	"""  </Free>\\n"""		125022	0					
ANR	125172	ReturnType	void		125022	1					
ANR	125173	Identifier	xml_write_free_and_skip		125022	2					
ANR	125174	ParameterList	"FILE * xmlout , opj_mj2_t * movie"		125022	3					
ANR	125175	Parameter	FILE * xmlout	416:29:17758:17769	125022	0	True				
ANR	125176	ParameterType	FILE *		125022	0					
ANR	125177	Identifier	xmlout		125022	1					
ANR	125178	Parameter	opj_mj2_t * movie	416:43:17772:17788	125022	1	True				
ANR	125179	ParameterType	opj_mj2_t *		125022	0					
ANR	125180	Identifier	movie		125022	1					
ANR	125181	CFGEntryNode	ENTRY		125022		True				
ANR	125182	CFGExitNode	EXIT		125022		True				
ANR	125183	Symbol	movie		125022						
ANR	125184	Symbol	* movie -> is_skip		125022						
ANR	125185	Symbol	i		125022						
ANR	125186	Symbol	* movie -> free_and_skip_len		125022						
ANR	125187	Symbol	xmlout		125022						
ANR	125188	Symbol	* movie		125022						
ANR	125189	Symbol	* * movie		125022						
ANR	125190	Symbol	movie -> free_and_skip_len		125022						
ANR	125191	Symbol	* i		125022						
ANR	125192	Symbol	movie -> is_skip		125022						
ANR	125193	Symbol	movie -> free_and_skip_contents		125022						
ANR	125194	Symbol	movie -> free_and_skip_count		125022						
ANR	125195	Symbol	movie -> free_and_skip		125022						
ANR	125196	Symbol	* movie -> free_and_skip_contents		125022						
ANR	125197	Function	xml_write_uuid	450:0:18898:20004							
ANR	125198	FunctionDef	"xml_write_uuid (FILE * xmlout , opj_mj2_t * movie)"		125197	0					
ANR	125199	CompoundStatement		451:0:18951:20004	125197	0					
ANR	125200	Statement	IMAGINE	457:4:19317:19323	125197	0	True				
ANR	125201	Statement	movie	457:12:19325:19329	125197	1	True				
ANR	125202	Statement	->	457:17:19330:19331	125197	2	True				
ANR	125203	Statement	uuid	457:19:19332:19335	125197	3	True				
ANR	125204	Statement	","	457:23:19336:19336	125197	4	True				
ANR	125205	Statement	movie	457:25:19338:19342	125197	5	True				
ANR	125206	Statement	->	457:30:19343:19344	125197	6	True				
ANR	125207	Statement	uuid_count	457:32:19345:19354	125197	7	True				
ANR	125208	Statement	","	457:42:19355:19355	125197	8	True				
ANR	125209	Statement	movie	458:12:19369:19373	125197	9	True				
ANR	125210	Statement	->	458:17:19374:19375	125197	10	True				
ANR	125211	Statement	uuid_content	458:19:19376:19387	125197	11	True				
ANR	125212	Statement	[	458:31:19388:19388	125197	12	True				
ANR	125213	Statement	i	458:32:19389:19389	125197	13	True				
ANR	125214	Statement	]	458:33:19390:19390	125197	14	True				
ANR	125215	Statement	(	458:34:19391:19391	125197	15	True				
ANR	125216	Statement	array	458:35:19392:19396	125197	16	True				
ANR	125217	Statement	of	458:41:19398:19399	125197	17	True				
ANR	125218	Statement	buffers	458:44:19401:19407	125197	18	True				
ANR	125219	Statement	)	458:51:19408:19408	125197	19	True				
ANR	125220	Statement	","	458:52:19409:19409	125197	20	True				
ANR	125221	Statement	movie	459:12:19423:19427	125197	21	True				
ANR	125222	Statement	->	459:17:19428:19429	125197	22	True				
ANR	125223	Statement	uuid_len	459:19:19430:19437	125197	23	True				
ANR	125224	Statement	[	459:27:19438:19438	125197	24	True				
ANR	125225	Statement	i	459:28:19439:19439	125197	25	True				
ANR	125226	Statement	]	459:29:19440:19440	125197	26	True				
ANR	125227	Statement	(	459:30:19441:19441	125197	27	True				
ANR	125228	Statement	array	459:31:19442:19446	125197	28	True				
ANR	125229	Statement	of	459:37:19448:19449	125197	29	True				
ANR	125230	Statement	ints	459:40:19451:19454	125197	30	True				
ANR	125231	Statement	)	459:44:19455:19455	125197	31	True				
ANR	125232	Statement	","	459:45:19456:19456	125197	32	True				
ANR	125233	Statement	movie	460:12:19470:19474	125197	33	True				
ANR	125234	Statement	->	460:17:19475:19476	125197	34	True				
ANR	125235	Statement	uuid_type	460:19:19477:19485	125197	35	True				
ANR	125236	Statement	[	460:28:19486:19486	125197	36	True				
ANR	125237	Statement	i	460:29:19487:19487	125197	37	True				
ANR	125238	Statement	]	460:30:19488:19488	125197	38	True				
ANR	125239	Statement	(	460:31:19489:19489	125197	39	True				
ANR	125240	Statement	array	460:32:19490:19494	125197	40	True				
ANR	125241	Statement	of	460:38:19496:19497	125197	41	True				
ANR	125242	Statement	17	460:41:19499:19500	125197	42	True				
ANR	125243	Statement	-	460:44:19502:19502	125197	43	True				
ANR	125244	Statement	byte	460:46:19504:19507	125197	44	True				
ANR	125245	Statement	(	460:50:19508:19508	125197	45	True				
ANR	125246	Statement	16	460:51:19509:19510	125197	46	True				
ANR	125247	Statement	+	460:54:19512:19512	125197	47	True				
ANR	125248	Statement	null	460:56:19514:19517	125197	48	True				
ANR	125249	Statement	termination	460:61:19519:19529	125197	49	True				
ANR	125250	Statement	)	460:72:19530:19530	125197	50	True				
ANR	125251	Statement	buffers	460:74:19532:19538	125197	51	True				
ANR	125252	Statement	)	460:81:19539:19539	125197	52	True				
ANR	125253	IdentifierDeclStatement	int i ;	461:12:19553:19558	125197	53	True				
ANR	125254	IdentifierDecl	i		125197	0					
ANR	125255	IdentifierDeclType	int		125197	0					
ANR	125256	Identifier	i		125197	1					
ANR	125257	IfStatement	if ( movie -> uuid != 1 )		125197	54					
ANR	125258	Condition	movie -> uuid != 1	463:8:19569:19584	125197	0	True				
ANR	125259	EqualityExpression	movie -> uuid != 1		125197	0		!=			
ANR	125260	PtrMemberAccess	movie -> uuid		125197	0					
ANR	125261	Identifier	movie		125197	0					
ANR	125262	Identifier	uuid		125197	1					
ANR	125263	PrimaryExpression	1		125197	1					
ANR	125264	CompoundStatement		13:26:635:635	125197	1					
ANR	125265	ReturnStatement	return ;	464:8:19597:19603	125197	0	True				
ANR	125266	ForStatement	for ( i = 0 ; i < movie -> uuid_count ; i ++ )		125197	55					
ANR	125267	ForInit	i = 0 ;	467:9:19642:19647	125197	0	True				
ANR	125268	AssignmentExpression	i = 0		125197	0		=			
ANR	125269	Identifier	i		125197	0					
ANR	125270	PrimaryExpression	0		125197	1					
ANR	125271	Condition	i < movie -> uuid_count	467:16:19649:19669	125197	1	True				
ANR	125272	RelationalExpression	i < movie -> uuid_count		125197	0		<			
ANR	125273	Identifier	i		125197	0					
ANR	125274	PtrMemberAccess	movie -> uuid_count		125197	1					
ANR	125275	Identifier	movie		125197	0					
ANR	125276	Identifier	uuid_count		125197	1					
ANR	125277	PostIncDecOperationExpression	i ++	467:39:19672:19674	125197	2	True				
ANR	125278	Identifier	i		125197	0					
ANR	125279	IncDec	++		125197	1					
ANR	125280	CompoundStatement		17:44:725:725	125197	3					
ANR	125281	ExpressionStatement	"fprintf ( xmlout , ""  <PrivateExtension BoxType=\\""uuid\\"" UUID=\\""%s\\"">\\n"" , movie -> uuid_type [ i ] )"	468:8:19687:19797	125197	0	True				
ANR	125282	CallExpression	"fprintf ( xmlout , ""  <PrivateExtension BoxType=\\""uuid\\"" UUID=\\""%s\\"">\\n"" , movie -> uuid_type [ i ] )"		125197	0					
ANR	125283	Callee	fprintf		125197	0					
ANR	125284	Identifier	fprintf		125197	0					
ANR	125285	ArgumentList	xmlout		125197	1					
ANR	125286	Argument	xmlout		125197	0					
ANR	125287	Identifier	xmlout		125197	0					
ANR	125288	Argument	"""  <PrivateExtension BoxType=\\""uuid\\"" UUID=\\""%s\\"">\\n"""		125197	1					
ANR	125289	PrimaryExpression	"""  <PrivateExtension BoxType=\\""uuid\\"" UUID=\\""%s\\"">\\n"""		125197	0					
ANR	125290	Argument	movie -> uuid_type [ i ]		125197	2					
ANR	125291	ArrayIndexing	movie -> uuid_type [ i ]		125197	0					
ANR	125292	PtrMemberAccess	movie -> uuid_type		125197	0					
ANR	125293	Identifier	movie		125197	0					
ANR	125294	Identifier	uuid_type		125197	1					
ANR	125295	Identifier	i		125197	1					
ANR	125296	ExpressionStatement	"xml_out_dump_hex_and_ascii ( xmlout , movie -> uuid_contents [ i ] , movie -> uuid_len [ i ] )"	471:8:19855:19934	125197	1	True				
ANR	125297	CallExpression	"xml_out_dump_hex_and_ascii ( xmlout , movie -> uuid_contents [ i ] , movie -> uuid_len [ i ] )"		125197	0					
ANR	125298	Callee	xml_out_dump_hex_and_ascii		125197	0					
ANR	125299	Identifier	xml_out_dump_hex_and_ascii		125197	0					
ANR	125300	ArgumentList	xmlout		125197	1					
ANR	125301	Argument	xmlout		125197	0					
ANR	125302	Identifier	xmlout		125197	0					
ANR	125303	Argument	movie -> uuid_contents [ i ]		125197	1					
ANR	125304	ArrayIndexing	movie -> uuid_contents [ i ]		125197	0					
ANR	125305	PtrMemberAccess	movie -> uuid_contents		125197	0					
ANR	125306	Identifier	movie		125197	0					
ANR	125307	Identifier	uuid_contents		125197	1					
ANR	125308	Identifier	i		125197	1					
ANR	125309	Argument	movie -> uuid_len [ i ]		125197	2					
ANR	125310	ArrayIndexing	movie -> uuid_len [ i ]		125197	0					
ANR	125311	PtrMemberAccess	movie -> uuid_len		125197	0					
ANR	125312	Identifier	movie		125197	0					
ANR	125313	Identifier	uuid_len		125197	1					
ANR	125314	Identifier	i		125197	1					
ANR	125315	ExpressionStatement	"fprintf ( xmlout , ""  </PrivateExtension>\\n"" )"	472:8:19944:19989	125197	2	True				
ANR	125316	CallExpression	"fprintf ( xmlout , ""  </PrivateExtension>\\n"" )"		125197	0					
ANR	125317	Callee	fprintf		125197	0					
ANR	125318	Identifier	fprintf		125197	0					
ANR	125319	ArgumentList	xmlout		125197	1					
ANR	125320	Argument	xmlout		125197	0					
ANR	125321	Identifier	xmlout		125197	0					
ANR	125322	Argument	"""  </PrivateExtension>\\n"""		125197	1					
ANR	125323	PrimaryExpression	"""  </PrivateExtension>\\n"""		125197	0					
ANR	125324	ReturnType	void		125197	1					
ANR	125325	Identifier	xml_write_uuid		125197	2					
ANR	125326	ParameterList	"FILE * xmlout , opj_mj2_t * movie"		125197	3					
ANR	125327	Parameter	FILE * xmlout	450:20:18918:18929	125197	0	True				
ANR	125328	ParameterType	FILE *		125197	0					
ANR	125329	Identifier	xmlout		125197	1					
ANR	125330	Parameter	opj_mj2_t * movie	450:34:18932:18948	125197	1	True				
ANR	125331	ParameterType	opj_mj2_t *		125197	0					
ANR	125332	Identifier	movie		125197	1					
ANR	125333	CFGEntryNode	ENTRY		125197		True				
ANR	125334	CFGExitNode	EXIT		125197		True				
ANR	125335	Symbol	movie		125197						
ANR	125336	Symbol	movie -> uuid		125197						
ANR	125337	Symbol	i		125197						
ANR	125338	Symbol	movie -> uuid_count		125197						
ANR	125339	Symbol	movie -> uuid_len		125197						
ANR	125340	Symbol	xmlout		125197						
ANR	125341	Symbol	* movie		125197						
ANR	125342	Symbol	* movie -> uuid_type		125197						
ANR	125343	Symbol	* * movie		125197						
ANR	125344	Symbol	movie -> uuid_contents		125197						
ANR	125345	Symbol	* i		125197						
ANR	125346	Symbol	* movie -> uuid_contents		125197						
ANR	125347	Symbol	* movie -> uuid_len		125197						
ANR	125348	Symbol	movie -> uuid_type		125197						
ANR	125349	Function	xml_write_trak	479:0:20028:21520							
ANR	125350	FunctionDef	"xml_write_trak (FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum , unsigned int sampleframe , opj_event_mgr_t * event_mgr)"		125349	0					
ANR	125351	CompoundStatement		481:0:20184:21520	125349	0					
ANR	125352	ExpressionStatement	"fprintf ( xmlout , ""    <Track BoxType=\\""trak\\"" Instance=\\""%d\\"">\\n"" , tnum )"	482:4:20190:20264	125349	0	True				
ANR	125353	CallExpression	"fprintf ( xmlout , ""    <Track BoxType=\\""trak\\"" Instance=\\""%d\\"">\\n"" , tnum )"		125349	0					
ANR	125354	Callee	fprintf		125349	0					
ANR	125355	Identifier	fprintf		125349	0					
ANR	125356	ArgumentList	xmlout		125349	1					
ANR	125357	Argument	xmlout		125349	0					
ANR	125358	Identifier	xmlout		125349	0					
ANR	125359	Argument	"""    <Track BoxType=\\""trak\\"" Instance=\\""%d\\"">\\n"""		125349	1					
ANR	125360	PrimaryExpression	"""    <Track BoxType=\\""trak\\"" Instance=\\""%d\\"">\\n"""		125349	0					
ANR	125361	Argument	tnum		125349	2					
ANR	125362	Identifier	tnum		125349	0					
ANR	125363	ExpressionStatement	"xml_write_tkhd ( file , xmlout , track , tnum )"	483:4:20270:20311	125349	1	True				
ANR	125364	CallExpression	"xml_write_tkhd ( file , xmlout , track , tnum )"		125349	0					
ANR	125365	Callee	xml_write_tkhd		125349	0					
ANR	125366	Identifier	xml_write_tkhd		125349	0					
ANR	125367	ArgumentList	file		125349	1					
ANR	125368	Argument	file		125349	0					
ANR	125369	Identifier	file		125349	0					
ANR	125370	Argument	xmlout		125349	1					
ANR	125371	Identifier	xmlout		125349	0					
ANR	125372	Argument	track		125349	2					
ANR	125373	Identifier	track		125349	0					
ANR	125374	Argument	tnum		125349	3					
ANR	125375	Identifier	tnum		125349	0					
ANR	125376	ExpressionStatement	"xml_write_mdia ( file , xmlout , track , tnum )"	486:4:20498:20539	125349	2	True				
ANR	125377	CallExpression	"xml_write_mdia ( file , xmlout , track , tnum )"		125349	0					
ANR	125378	Callee	xml_write_mdia		125349	0					
ANR	125379	Identifier	xml_write_mdia		125349	0					
ANR	125380	ArgumentList	file		125349	1					
ANR	125381	Argument	file		125349	0					
ANR	125382	Identifier	file		125349	0					
ANR	125383	Argument	xmlout		125349	1					
ANR	125384	Identifier	xmlout		125349	0					
ANR	125385	Argument	track		125349	2					
ANR	125386	Identifier	track		125349	0					
ANR	125387	Argument	tnum		125349	3					
ANR	125388	Identifier	tnum		125349	0					
ANR	125389	ExpressionStatement	"xml_write_udta ( file , xmlout , track , tnum )"	487:4:20545:20605	125349	3	True				
ANR	125390	CallExpression	"xml_write_udta ( file , xmlout , track , tnum )"		125349	0					
ANR	125391	Callee	xml_write_udta		125349	0					
ANR	125392	Identifier	xml_write_udta		125349	0					
ANR	125393	ArgumentList	file		125349	1					
ANR	125394	Argument	file		125349	0					
ANR	125395	Identifier	file		125349	0					
ANR	125396	Argument	xmlout		125349	1					
ANR	125397	Identifier	xmlout		125349	0					
ANR	125398	Argument	track		125349	2					
ANR	125399	Identifier	track		125349	0					
ANR	125400	Argument	tnum		125349	3					
ANR	125401	Identifier	tnum		125349	0					
ANR	125402	IfStatement	if ( track -> track_type == 0 )		125349	4					
ANR	125403	Condition	track -> track_type == 0	490:8:20698:20719	125349	0	True				
ANR	125404	EqualityExpression	track -> track_type == 0		125349	0		==			
ANR	125405	PtrMemberAccess	track -> track_type		125349	0					
ANR	125406	Identifier	track		125349	0					
ANR	125407	Identifier	track_type		125349	1					
ANR	125408	PrimaryExpression	0		125349	1					
ANR	125409	CompoundStatement		10:32:537:537	125349	1					
ANR	125410	IfStatement	if ( sampleframe > 0 && sampleframe <= track -> num_samples )		125349	0					
ANR	125411	Condition	sampleframe > 0 && sampleframe <= track -> num_samples	494:12:20956:21007	125349	0	True				
ANR	125412	AndExpression	sampleframe > 0 && sampleframe <= track -> num_samples		125349	0		&&			
ANR	125413	RelationalExpression	sampleframe > 0		125349	0		>			
ANR	125414	Identifier	sampleframe		125349	0					
ANR	125415	PrimaryExpression	0		125349	1					
ANR	125416	RelationalExpression	sampleframe <= track -> num_samples		125349	1		<=			
ANR	125417	Identifier	sampleframe		125349	0					
ANR	125418	PtrMemberAccess	track -> num_samples		125349	1					
ANR	125419	Identifier	track		125349	0					
ANR	125420	Identifier	num_samples		125349	1					
ANR	125421	CompoundStatement		16:12:873:890	125349	1					
ANR	125422	IdentifierDeclStatement	mj2_sample_t * sample ;	495:12:21024:21044	125349	0	True				
ANR	125423	IdentifierDecl	* sample		125349	0					
ANR	125424	IdentifierDeclType	mj2_sample_t *		125349	0					
ANR	125425	Identifier	sample		125349	1					
ANR	125426	IdentifierDeclStatement	unsigned int snum ;	496:12:21058:21075	125349	1	True				
ANR	125427	IdentifierDecl	snum		125349	0					
ANR	125428	IdentifierDeclType	unsigned int		125349	0					
ANR	125429	Identifier	snum		125349	1					
ANR	125430	ExpressionStatement	snum = sampleframe - 1	498:12:21090:21112	125349	2	True				
ANR	125431	AssignmentExpression	snum = sampleframe - 1		125349	0		=			
ANR	125432	Identifier	snum		125349	0					
ANR	125433	AdditiveExpression	sampleframe - 1		125349	1		-			
ANR	125434	Identifier	sampleframe		125349	0					
ANR	125435	PrimaryExpression	1		125349	1					
ANR	125436	ExpressionStatement	sample = & track -> sample [ snum ]	501:12:21282:21311	125349	3	True				
ANR	125437	AssignmentExpression	sample = & track -> sample [ snum ]		125349	0		=			
ANR	125438	Identifier	sample		125349	0					
ANR	125439	UnaryOperationExpression	& track -> sample [ snum ]		125349	1					
ANR	125440	UnaryOperator	&		125349	0					
ANR	125441	ArrayIndexing	track -> sample [ snum ]		125349	1					
ANR	125442	PtrMemberAccess	track -> sample		125349	0					
ANR	125443	Identifier	track		125349	0					
ANR	125444	Identifier	sample		125349	1					
ANR	125445	Identifier	snum		125349	1					
ANR	125446	IfStatement	"if ( xml_out_frame ( file , xmlout , sample , snum , event_mgr ) )"		125349	4					
ANR	125447	Condition	"xml_out_frame ( file , xmlout , sample , snum , event_mgr )"	502:16:21329:21380	125349	0	True				
ANR	125448	CallExpression	"xml_out_frame ( file , xmlout , sample , snum , event_mgr )"		125349	0					
ANR	125449	Callee	xml_out_frame		125349	0					
ANR	125450	Identifier	xml_out_frame		125349	0					
ANR	125451	ArgumentList	file		125349	1					
ANR	125452	Argument	file		125349	0					
ANR	125453	Identifier	file		125349	0					
ANR	125454	Argument	xmlout		125349	1					
ANR	125455	Identifier	xmlout		125349	0					
ANR	125456	Argument	sample		125349	2					
ANR	125457	Identifier	sample		125349	0					
ANR	125458	Argument	snum		125349	3					
ANR	125459	Identifier	snum		125349	0					
ANR	125460	Argument	event_mgr		125349	4					
ANR	125461	Identifier	event_mgr		125349	0					
ANR	125462	CompoundStatement		22:70:1198:1198	125349	1					
ANR	125463	ReturnStatement	return ;	503:16:21401:21407	125349	0	True				
ANR	125464	ExpressionStatement	"fprintf ( xmlout , ""    </Track>\\n"" )"	507:4:21482:21518	125349	5	True				
ANR	125465	CallExpression	"fprintf ( xmlout , ""    </Track>\\n"" )"		125349	0					
ANR	125466	Callee	fprintf		125349	0					
ANR	125467	Identifier	fprintf		125349	0					
ANR	125468	ArgumentList	xmlout		125349	1					
ANR	125469	Argument	xmlout		125349	0					
ANR	125470	Identifier	xmlout		125349	0					
ANR	125471	Argument	"""    </Track>\\n"""		125349	1					
ANR	125472	PrimaryExpression	"""    </Track>\\n"""		125349	0					
ANR	125473	ReturnType	void		125349	1					
ANR	125474	Identifier	xml_write_trak		125349	2					
ANR	125475	ParameterList	"FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum , unsigned int sampleframe , opj_event_mgr_t * event_mgr"		125349	3					
ANR	125476	Parameter	FILE * file	479:20:20048:20057	125349	0	True				
ANR	125477	ParameterType	FILE *		125349	0					
ANR	125478	Identifier	file		125349	1					
ANR	125479	Parameter	FILE * xmlout	479:32:20060:20071	125349	1	True				
ANR	125480	ParameterType	FILE *		125349	0					
ANR	125481	Identifier	xmlout		125349	1					
ANR	125482	Parameter	mj2_tk_t * track	479:46:20074:20088	125349	2	True				
ANR	125483	ParameterType	mj2_tk_t *		125349	0					
ANR	125484	Identifier	track		125349	1					
ANR	125485	Parameter	unsigned int tnum	480:20:20111:20127	125349	3	True				
ANR	125486	ParameterType	unsigned int		125349	0					
ANR	125487	Identifier	tnum		125349	1					
ANR	125488	Parameter	unsigned int sampleframe	480:39:20130:20153	125349	4	True				
ANR	125489	ParameterType	unsigned int		125349	0					
ANR	125490	Identifier	sampleframe		125349	1					
ANR	125491	Parameter	opj_event_mgr_t * event_mgr	480:65:20156:20181	125349	5	True				
ANR	125492	ParameterType	opj_event_mgr_t *		125349	0					
ANR	125493	Identifier	event_mgr		125349	1					
ANR	125494	CFGEntryNode	ENTRY		125349		True				
ANR	125495	CFGExitNode	EXIT		125349		True				
ANR	125496	Symbol	tnum		125349						
ANR	125497	Symbol	snum		125349						
ANR	125498	Symbol	sampleframe		125349						
ANR	125499	Symbol	track -> sample		125349						
ANR	125500	Symbol	* track		125349						
ANR	125501	Symbol	sample		125349						
ANR	125502	Symbol	xmlout		125349						
ANR	125503	Symbol	track -> track_type		125349						
ANR	125504	Symbol	file		125349						
ANR	125505	Symbol	xml_out_frame		125349						
ANR	125506	Symbol	event_mgr		125349						
ANR	125507	Symbol	track -> num_samples		125349						
ANR	125508	Symbol	track		125349						
ANR	125509	Function	xml_write_tkhd	512:0:21544:26757							
ANR	125510	FunctionDef	"xml_write_tkhd (FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum)"		125509	0					
ANR	125511	CompoundStatement		514:0:21646:26757	125509	0					
ANR	125512	ExpressionStatement	"fprintf ( xmlout , ""      <TrackHeader BoxType=\\""tkhd\\"">\\n"" )"	515:4:21652:21712	125509	0	True				
ANR	125513	CallExpression	"fprintf ( xmlout , ""      <TrackHeader BoxType=\\""tkhd\\"">\\n"" )"		125509	0					
ANR	125514	Callee	fprintf		125509	0					
ANR	125515	Identifier	fprintf		125509	0					
ANR	125516	ArgumentList	xmlout		125509	1					
ANR	125517	Argument	xmlout		125509	0					
ANR	125518	Identifier	xmlout		125509	0					
ANR	125519	Argument	"""      <TrackHeader BoxType=\\""tkhd\\"">\\n"""		125509	1					
ANR	125520	PrimaryExpression	"""      <TrackHeader BoxType=\\""tkhd\\"">\\n"""		125509	0					
ANR	125521	IfStatement	if ( notes )		125509	1					
ANR	125522	Condition	notes	516:8:21722:21726	125509	0	True				
ANR	125523	Identifier	notes		125509	0					
ANR	125524	CompoundStatement		3:15:82:82	125509	1					
ANR	125525	ExpressionStatement	"fprintf ( xmlout , ""      <!-- Not shown here: CreationTime, ModificationTime, Duration. -->\\n"" )"	517:8:21739:21848	125509	0	True				
ANR	125526	CallExpression	"fprintf ( xmlout , ""      <!-- Not shown here: CreationTime, ModificationTime, Duration. -->\\n"" )"		125509	0					
ANR	125527	Callee	fprintf		125509	0					
ANR	125528	Identifier	fprintf		125509	0					
ANR	125529	ArgumentList	xmlout		125509	1					
ANR	125530	Argument	xmlout		125509	0					
ANR	125531	Identifier	xmlout		125509	0					
ANR	125532	Argument	"""      <!-- Not shown here: CreationTime, ModificationTime, Duration. -->\\n"""		125509	1					
ANR	125533	PrimaryExpression	"""      <!-- Not shown here: CreationTime, ModificationTime, Duration. -->\\n"""		125509	0					
ANR	125534	ExpressionStatement	"fprintf ( xmlout , ""      <!-- These 3 fields are reported under MediaHeader below.   When reading these 3, -->\\n"" )"	519:8:21858:21986	125509	1	True				
ANR	125535	CallExpression	"fprintf ( xmlout , ""      <!-- These 3 fields are reported under MediaHeader below.   When reading these 3, -->\\n"" )"		125509	0					
ANR	125536	Callee	fprintf		125509	0					
ANR	125537	Identifier	fprintf		125509	0					
ANR	125538	ArgumentList	xmlout		125509	1					
ANR	125539	Argument	xmlout		125509	0					
ANR	125540	Identifier	xmlout		125509	0					
ANR	125541	Argument	"""      <!-- These 3 fields are reported under MediaHeader below.   When reading these 3, -->\\n"""		125509	1					
ANR	125542	PrimaryExpression	"""      <!-- These 3 fields are reported under MediaHeader below.   When reading these 3, -->\\n"""		125509	0					
ANR	125543	ExpressionStatement	"fprintf ( xmlout , ""      <!-- m2j_to_metadata currently doesn't distinguish between TrackHeader and MediaHeader source. -->\\n"" )"	521:8:21996:22137	125509	2	True				
ANR	125544	CallExpression	"fprintf ( xmlout , ""      <!-- m2j_to_metadata currently doesn't distinguish between TrackHeader and MediaHeader source. -->\\n"" )"		125509	0					
ANR	125545	Callee	fprintf		125509	0					
ANR	125546	Identifier	fprintf		125509	0					
ANR	125547	ArgumentList	xmlout		125509	1					
ANR	125548	Argument	xmlout		125509	0					
ANR	125549	Identifier	xmlout		125509	0					
ANR	125550	Argument	"""      <!-- m2j_to_metadata currently doesn't distinguish between TrackHeader and MediaHeader source. -->\\n"""		125509	1					
ANR	125551	PrimaryExpression	"""      <!-- m2j_to_metadata currently doesn't distinguish between TrackHeader and MediaHeader source. -->\\n"""		125509	0					
ANR	125552	ExpressionStatement	"fprintf ( xmlout , ""      <!-- If both found, value read from MediaHeader is used. -->\\n"" )"	523:8:22147:22250	125509	3	True				
ANR	125553	CallExpression	"fprintf ( xmlout , ""      <!-- If both found, value read from MediaHeader is used. -->\\n"" )"		125509	0					
ANR	125554	Callee	fprintf		125509	0					
ANR	125555	Identifier	fprintf		125509	0					
ANR	125556	ArgumentList	xmlout		125509	1					
ANR	125557	Argument	xmlout		125509	0					
ANR	125558	Identifier	xmlout		125509	0					
ANR	125559	Argument	"""      <!-- If both found, value read from MediaHeader is used. -->\\n"""		125509	1					
ANR	125560	PrimaryExpression	"""      <!-- If both found, value read from MediaHeader is used. -->\\n"""		125509	0					
ANR	125561	ExpressionStatement	"fprintf ( xmlout , ""        <TrackID>%u</TrackID>\\n"" , track -> track_ID )"	526:4:22262:22332	125509	2	True				
ANR	125562	CallExpression	"fprintf ( xmlout , ""        <TrackID>%u</TrackID>\\n"" , track -> track_ID )"		125509	0					
ANR	125563	Callee	fprintf		125509	0					
ANR	125564	Identifier	fprintf		125509	0					
ANR	125565	ArgumentList	xmlout		125509	1					
ANR	125566	Argument	xmlout		125509	0					
ANR	125567	Identifier	xmlout		125509	0					
ANR	125568	Argument	"""        <TrackID>%u</TrackID>\\n"""		125509	1					
ANR	125569	PrimaryExpression	"""        <TrackID>%u</TrackID>\\n"""		125509	0					
ANR	125570	Argument	track -> track_ID		125509	2					
ANR	125571	PtrMemberAccess	track -> track_ID		125509	0					
ANR	125572	Identifier	track		125509	0					
ANR	125573	Identifier	track_ID		125509	1					
ANR	125574	IfStatement	if ( track -> track_type == 0 )		125509	3					
ANR	125575	Condition	track -> track_type == 0	527:8:22342:22363	125509	0	True				
ANR	125576	EqualityExpression	track -> track_type == 0		125509	0		==			
ANR	125577	PtrMemberAccess	track -> track_type		125509	0					
ANR	125578	Identifier	track		125509	0					
ANR	125579	Identifier	track_type		125509	1					
ANR	125580	PrimaryExpression	0		125509	1					
ANR	125581	CompoundStatement		14:32:719:719	125509	1					
ANR	125582	ExpressionStatement	"fprintf ( xmlout , ""        <TrackLayer>%d</TrackLayer>\\n"" , track -> layer )"	528:8:22399:22470	125509	0	True				
ANR	125583	CallExpression	"fprintf ( xmlout , ""        <TrackLayer>%d</TrackLayer>\\n"" , track -> layer )"		125509	0					
ANR	125584	Callee	fprintf		125509	0					
ANR	125585	Identifier	fprintf		125509	0					
ANR	125586	ArgumentList	xmlout		125509	1					
ANR	125587	Argument	xmlout		125509	0					
ANR	125588	Identifier	xmlout		125509	0					
ANR	125589	Argument	"""        <TrackLayer>%d</TrackLayer>\\n"""		125509	1					
ANR	125590	PrimaryExpression	"""        <TrackLayer>%d</TrackLayer>\\n"""		125509	0					
ANR	125591	Argument	track -> layer		125509	2					
ANR	125592	PtrMemberAccess	track -> layer		125509	0					
ANR	125593	Identifier	track		125509	0					
ANR	125594	Identifier	layer		125509	1					
ANR	125595	IfStatement	if ( notes )		125509	1					
ANR	125596	Condition	notes	529:12:22484:22488	125509	0	True				
ANR	125597	Identifier	notes		125509	0					
ANR	125598	CompoundStatement		16:19:844:844	125509	1					
ANR	125599	ExpressionStatement	"fprintf ( xmlout , ""        <!-- front-to-back ordering of video tracks. 0 = normal, -1 is closer, etc. -->\\n"" )"	530:12:22505:22633	125509	0	True				
ANR	125600	CallExpression	"fprintf ( xmlout , ""        <!-- front-to-back ordering of video tracks. 0 = normal, -1 is closer, etc. -->\\n"" )"		125509	0					
ANR	125601	Callee	fprintf		125509	0					
ANR	125602	Identifier	fprintf		125509	0					
ANR	125603	ArgumentList	xmlout		125509	1					
ANR	125604	Argument	xmlout		125509	0					
ANR	125605	Identifier	xmlout		125509	0					
ANR	125606	Argument	"""        <!-- front-to-back ordering of video tracks. 0 = normal, -1 is closer, etc. -->\\n"""		125509	1					
ANR	125607	PrimaryExpression	"""        <!-- front-to-back ordering of video tracks. 0 = normal, -1 is closer, etc. -->\\n"""		125509	0					
ANR	125608	IfStatement	if ( track -> track_type != 0 )		125509	4					
ANR	125609	Condition	track -> track_type != 0	534:8:22659:22680	125509	0	True				
ANR	125610	EqualityExpression	track -> track_type != 0		125509	0		!=			
ANR	125611	PtrMemberAccess	track -> track_type		125509	0					
ANR	125612	Identifier	track		125509	0					
ANR	125613	Identifier	track_type		125509	1					
ANR	125614	PrimaryExpression	0		125509	1					
ANR	125615	CompoundStatement		21:32:1036:1036	125509	1					
ANR	125616	ExpressionStatement	track -> volume = track -> volume << 8	536:8:22755:22789	125509	0	True				
ANR	125617	AssignmentExpression	track -> volume = track -> volume << 8		125509	0		=			
ANR	125618	PtrMemberAccess	track -> volume		125509	0					
ANR	125619	Identifier	track		125509	0					
ANR	125620	Identifier	volume		125509	1					
ANR	125621	ShiftExpression	track -> volume << 8		125509	1		<<			
ANR	125622	PtrMemberAccess	track -> volume		125509	0					
ANR	125623	Identifier	track		125509	0					
ANR	125624	Identifier	volume		125509	1					
ANR	125625	PrimaryExpression	8		125509	1					
ANR	125626	ExpressionStatement	"fprintf ( xmlout , ""        <Volume>\\n"" )"	538:8:22806:22844	125509	1	True				
ANR	125627	CallExpression	"fprintf ( xmlout , ""        <Volume>\\n"" )"		125509	0					
ANR	125628	Callee	fprintf		125509	0					
ANR	125629	Identifier	fprintf		125509	0					
ANR	125630	ArgumentList	xmlout		125509	1					
ANR	125631	Argument	xmlout		125509	0					
ANR	125632	Identifier	xmlout		125509	0					
ANR	125633	Argument	"""        <Volume>\\n"""		125509	1					
ANR	125634	PrimaryExpression	"""        <Volume>\\n"""		125509	0					
ANR	125635	IfStatement	if ( notes )		125509	2					
ANR	125636	Condition	notes	539:12:22858:22862	125509	0	True				
ANR	125637	Identifier	notes		125509	0					
ANR	125638	CompoundStatement		26:19:1218:1218	125509	1					
ANR	125639	ExpressionStatement	"fprintf ( xmlout , ""          <!-- Track audio volume stored as fixed-point binary 8.8 value. Decimal value is approximation. -->\\n"" )"	540:12:22879:23029	125509	0	True				
ANR	125640	CallExpression	"fprintf ( xmlout , ""          <!-- Track audio volume stored as fixed-point binary 8.8 value. Decimal value is approximation. -->\\n"" )"		125509	0					
ANR	125641	Callee	fprintf		125509	0					
ANR	125642	Identifier	fprintf		125509	0					
ANR	125643	ArgumentList	xmlout		125509	1					
ANR	125644	Argument	xmlout		125509	0					
ANR	125645	Identifier	xmlout		125509	0					
ANR	125646	Argument	"""          <!-- Track audio volume stored as fixed-point binary 8.8 value. Decimal value is approximation. -->\\n"""		125509	1					
ANR	125647	PrimaryExpression	"""          <!-- Track audio volume stored as fixed-point binary 8.8 value. Decimal value is approximation. -->\\n"""		125509	0					
ANR	125648	ExpressionStatement	"fprintf ( xmlout , ""          <!-- Full, normal (default) value is 0x0100 (1.0) -->\\n"" )"	542:12:23043:23147	125509	1	True				
ANR	125649	CallExpression	"fprintf ( xmlout , ""          <!-- Full, normal (default) value is 0x0100 (1.0) -->\\n"" )"		125509	0					
ANR	125650	Callee	fprintf		125509	0					
ANR	125651	Identifier	fprintf		125509	0					
ANR	125652	ArgumentList	xmlout		125509	1					
ANR	125653	Argument	xmlout		125509	0					
ANR	125654	Identifier	xmlout		125509	0					
ANR	125655	Argument	"""          <!-- Full, normal (default) value is 0x0100 (1.0) -->\\n"""		125509	1					
ANR	125656	PrimaryExpression	"""          <!-- Full, normal (default) value is 0x0100 (1.0) -->\\n"""		125509	0					
ANR	125657	IfStatement	if ( raw )		125509	3					
ANR	125658	Condition	raw	545:12:23171:23173	125509	0	True				
ANR	125659	Identifier	raw		125509	0					
ANR	125660	CompoundStatement		32:17:1529:1529	125509	1					
ANR	125661	ExpressionStatement	"fprintf ( xmlout , ""          <AsHex>0x%04x</AsHex>\\n"" , track -> volume )"	546:12:23190:23257	125509	0	True				
ANR	125662	CallExpression	"fprintf ( xmlout , ""          <AsHex>0x%04x</AsHex>\\n"" , track -> volume )"		125509	0					
ANR	125663	Callee	fprintf		125509	0					
ANR	125664	Identifier	fprintf		125509	0					
ANR	125665	ArgumentList	xmlout		125509	1					
ANR	125666	Argument	xmlout		125509	0					
ANR	125667	Identifier	xmlout		125509	0					
ANR	125668	Argument	"""          <AsHex>0x%04x</AsHex>\\n"""		125509	1					
ANR	125669	PrimaryExpression	"""          <AsHex>0x%04x</AsHex>\\n"""		125509	0					
ANR	125670	Argument	track -> volume		125509	2					
ANR	125671	PtrMemberAccess	track -> volume		125509	0					
ANR	125672	Identifier	track		125509	0					
ANR	125673	Identifier	volume		125509	1					
ANR	125674	IfStatement	if ( derived )		125509	4					
ANR	125675	Condition	derived	548:12:23281:23287	125509	0	True				
ANR	125676	Identifier	derived		125509	0					
ANR	125677	CompoundStatement		35:21:1643:1643	125509	1					
ANR	125678	ExpressionStatement	"fprintf ( xmlout , ""          <AsDecimal>%6.3f</AsDecimal>\\n"" , ( double ) track -> volume / ( double ) 0x0100 )"	549:12:23304:23423	125509	0	True				
ANR	125679	CallExpression	"fprintf ( xmlout , ""          <AsDecimal>%6.3f</AsDecimal>\\n"" , ( double ) track -> volume / ( double ) 0x0100 )"		125509	0					
ANR	125680	Callee	fprintf		125509	0					
ANR	125681	Identifier	fprintf		125509	0					
ANR	125682	ArgumentList	xmlout		125509	1					
ANR	125683	Argument	xmlout		125509	0					
ANR	125684	Identifier	xmlout		125509	0					
ANR	125685	Argument	"""          <AsDecimal>%6.3f</AsDecimal>\\n"""		125509	1					
ANR	125686	PrimaryExpression	"""          <AsDecimal>%6.3f</AsDecimal>\\n"""		125509	0					
ANR	125687	Argument	( double ) track -> volume / ( double ) 0x0100		125509	2					
ANR	125688	MultiplicativeExpression	( double ) track -> volume / ( double ) 0x0100		125509	0		/			
ANR	125689	CastExpression	( double ) track -> volume		125509	0					
ANR	125690	CastTarget	double		125509	0					
ANR	125691	PtrMemberAccess	track -> volume		125509	1					
ANR	125692	Identifier	track		125509	0					
ANR	125693	Identifier	volume		125509	1					
ANR	125694	CastExpression	( double ) 0x0100		125509	1					
ANR	125695	CastTarget	double		125509	0					
ANR	125696	PrimaryExpression	0x0100		125509	1					
ANR	125697	ExpressionStatement	"fprintf ( xmlout , ""        </Volume>\\n"" )"	552:8:23443:23482	125509	5	True				
ANR	125698	CallExpression	"fprintf ( xmlout , ""        </Volume>\\n"" )"		125509	0					
ANR	125699	Callee	fprintf		125509	0					
ANR	125700	Identifier	fprintf		125509	0					
ANR	125701	ArgumentList	xmlout		125509	1					
ANR	125702	Argument	xmlout		125509	0					
ANR	125703	Identifier	xmlout		125509	0					
ANR	125704	Argument	"""        </Volume>\\n"""		125509	1					
ANR	125705	PrimaryExpression	"""        </Volume>\\n"""		125509	0					
ANR	125706	IfStatement	if ( notes )		125509	6					
ANR	125707	Condition	notes	554:12:23517:23521	125509	0	True				
ANR	125708	Identifier	notes		125509	0					
ANR	125709	CompoundStatement		41:19:1877:1877	125509	1					
ANR	125710	ExpressionStatement	"fprintf ( xmlout , ""        <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"" )"	555:12:23538:23683	125509	0	True				
ANR	125711	CallExpression	"fprintf ( xmlout , ""        <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"" )"		125509	0					
ANR	125712	Callee	fprintf		125509	0					
ANR	125713	Identifier	fprintf		125509	0					
ANR	125714	ArgumentList	xmlout		125509	1					
ANR	125715	Argument	xmlout		125509	0					
ANR	125716	Identifier	xmlout		125509	0					
ANR	125717	Argument	"""        <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"""		125509	1					
ANR	125718	PrimaryExpression	"""        <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"""		125509	0					
ANR	125719	ExpressionStatement	track -> volume = track -> volume >> 8	558:8:23703:23737	125509	7	True				
ANR	125720	AssignmentExpression	track -> volume = track -> volume >> 8		125509	0		=			
ANR	125721	PtrMemberAccess	track -> volume		125509	0					
ANR	125722	Identifier	track		125509	0					
ANR	125723	Identifier	volume		125509	1					
ANR	125724	ShiftExpression	track -> volume >> 8		125509	1		>>			
ANR	125725	PtrMemberAccess	track -> volume		125509	0					
ANR	125726	Identifier	track		125509	0					
ANR	125727	Identifier	volume		125509	1					
ANR	125728	PrimaryExpression	8		125509	1					
ANR	125729	IfStatement	if ( track -> track_type == 0 )		125509	5					
ANR	125730	Condition	track -> track_type == 0	561:8:23760:23781	125509	0	True				
ANR	125731	EqualityExpression	track -> track_type == 0		125509	0		==			
ANR	125732	PtrMemberAccess	track -> track_type		125509	0					
ANR	125733	Identifier	track		125509	0					
ANR	125734	Identifier	track_type		125509	1					
ANR	125735	PrimaryExpression	0		125509	1					
ANR	125736	CompoundStatement		48:32:2137:2137	125509	1					
ANR	125737	ExpressionStatement	"fprintf ( xmlout , ""        <TransformationMatrix>\\n"" )"	563:8:23867:23919	125509	0	True				
ANR	125738	CallExpression	"fprintf ( xmlout , ""        <TransformationMatrix>\\n"" )"		125509	0					
ANR	125739	Callee	fprintf		125509	0					
ANR	125740	Identifier	fprintf		125509	0					
ANR	125741	ArgumentList	xmlout		125509	1					
ANR	125742	Argument	xmlout		125509	0					
ANR	125743	Identifier	xmlout		125509	0					
ANR	125744	Argument	"""        <TransformationMatrix>\\n"""		125509	1					
ANR	125745	PrimaryExpression	"""        <TransformationMatrix>\\n"""		125509	0					
ANR	125746	IfStatement	if ( notes )		125509	1					
ANR	125747	Condition	notes	564:12:23933:23937	125509	0	True				
ANR	125748	Identifier	notes		125509	0					
ANR	125749	CompoundStatement		51:19:2293:2293	125509	1					
ANR	125750	ExpressionStatement	"fprintf ( xmlout , ""          <!-- Comments about matrix in MovieHeader apply here as well. -->\\n"" )"	565:12:23954:24070	125509	0	True				
ANR	125751	CallExpression	"fprintf ( xmlout , ""          <!-- Comments about matrix in MovieHeader apply here as well. -->\\n"" )"		125509	0					
ANR	125752	Callee	fprintf		125509	0					
ANR	125753	Identifier	fprintf		125509	0					
ANR	125754	ArgumentList	xmlout		125509	1					
ANR	125755	Argument	xmlout		125509	0					
ANR	125756	Identifier	xmlout		125509	0					
ANR	125757	Argument	"""          <!-- Comments about matrix in MovieHeader apply here as well. -->\\n"""		125509	1					
ANR	125758	PrimaryExpression	"""          <!-- Comments about matrix in MovieHeader apply here as well. -->\\n"""		125509	0					
ANR	125759	ExpressionStatement	"fprintf ( xmlout , ""          <!-- This matrix is applied before MovieHeader one. -->\\n"" )"	567:12:24084:24190	125509	1	True				
ANR	125760	CallExpression	"fprintf ( xmlout , ""          <!-- This matrix is applied before MovieHeader one. -->\\n"" )"		125509	0					
ANR	125761	Callee	fprintf		125509	0					
ANR	125762	Identifier	fprintf		125509	0					
ANR	125763	ArgumentList	xmlout		125509	1					
ANR	125764	Argument	xmlout		125509	0					
ANR	125765	Identifier	xmlout		125509	0					
ANR	125766	Argument	"""          <!-- This matrix is applied before MovieHeader one. -->\\n"""		125509	1					
ANR	125767	PrimaryExpression	"""          <!-- This matrix is applied before MovieHeader one. -->\\n"""		125509	0					
ANR	125768	ExpressionStatement	"fprintf ( xmlout , ""          <TMa>0x%08x</TMa>\\n"" , track -> trans_matrix [ 0 ] )"	570:8:24210:24283	125509	2	True				
ANR	125769	CallExpression	"fprintf ( xmlout , ""          <TMa>0x%08x</TMa>\\n"" , track -> trans_matrix [ 0 ] )"		125509	0					
ANR	125770	Callee	fprintf		125509	0					
ANR	125771	Identifier	fprintf		125509	0					
ANR	125772	ArgumentList	xmlout		125509	1					
ANR	125773	Argument	xmlout		125509	0					
ANR	125774	Identifier	xmlout		125509	0					
ANR	125775	Argument	"""          <TMa>0x%08x</TMa>\\n"""		125509	1					
ANR	125776	PrimaryExpression	"""          <TMa>0x%08x</TMa>\\n"""		125509	0					
ANR	125777	Argument	track -> trans_matrix [ 0 ]		125509	2					
ANR	125778	ArrayIndexing	track -> trans_matrix [ 0 ]		125509	0					
ANR	125779	PtrMemberAccess	track -> trans_matrix		125509	0					
ANR	125780	Identifier	track		125509	0					
ANR	125781	Identifier	trans_matrix		125509	1					
ANR	125782	PrimaryExpression	0		125509	1					
ANR	125783	ExpressionStatement	"fprintf ( xmlout , ""          <TMb>0x%08x</TMb>\\n"" , track -> trans_matrix [ 1 ] )"	571:8:24293:24366	125509	3	True				
ANR	125784	CallExpression	"fprintf ( xmlout , ""          <TMb>0x%08x</TMb>\\n"" , track -> trans_matrix [ 1 ] )"		125509	0					
ANR	125785	Callee	fprintf		125509	0					
ANR	125786	Identifier	fprintf		125509	0					
ANR	125787	ArgumentList	xmlout		125509	1					
ANR	125788	Argument	xmlout		125509	0					
ANR	125789	Identifier	xmlout		125509	0					
ANR	125790	Argument	"""          <TMb>0x%08x</TMb>\\n"""		125509	1					
ANR	125791	PrimaryExpression	"""          <TMb>0x%08x</TMb>\\n"""		125509	0					
ANR	125792	Argument	track -> trans_matrix [ 1 ]		125509	2					
ANR	125793	ArrayIndexing	track -> trans_matrix [ 1 ]		125509	0					
ANR	125794	PtrMemberAccess	track -> trans_matrix		125509	0					
ANR	125795	Identifier	track		125509	0					
ANR	125796	Identifier	trans_matrix		125509	1					
ANR	125797	PrimaryExpression	1		125509	1					
ANR	125798	ExpressionStatement	"fprintf ( xmlout , ""          <TMu>0x%08x</TMu>\\n"" , track -> trans_matrix [ 2 ] )"	572:8:24376:24449	125509	4	True				
ANR	125799	CallExpression	"fprintf ( xmlout , ""          <TMu>0x%08x</TMu>\\n"" , track -> trans_matrix [ 2 ] )"		125509	0					
ANR	125800	Callee	fprintf		125509	0					
ANR	125801	Identifier	fprintf		125509	0					
ANR	125802	ArgumentList	xmlout		125509	1					
ANR	125803	Argument	xmlout		125509	0					
ANR	125804	Identifier	xmlout		125509	0					
ANR	125805	Argument	"""          <TMu>0x%08x</TMu>\\n"""		125509	1					
ANR	125806	PrimaryExpression	"""          <TMu>0x%08x</TMu>\\n"""		125509	0					
ANR	125807	Argument	track -> trans_matrix [ 2 ]		125509	2					
ANR	125808	ArrayIndexing	track -> trans_matrix [ 2 ]		125509	0					
ANR	125809	PtrMemberAccess	track -> trans_matrix		125509	0					
ANR	125810	Identifier	track		125509	0					
ANR	125811	Identifier	trans_matrix		125509	1					
ANR	125812	PrimaryExpression	2		125509	1					
ANR	125813	ExpressionStatement	"fprintf ( xmlout , ""          <TMc>0x%08x</TMc>\\n"" , track -> trans_matrix [ 3 ] )"	573:8:24459:24532	125509	5	True				
ANR	125814	CallExpression	"fprintf ( xmlout , ""          <TMc>0x%08x</TMc>\\n"" , track -> trans_matrix [ 3 ] )"		125509	0					
ANR	125815	Callee	fprintf		125509	0					
ANR	125816	Identifier	fprintf		125509	0					
ANR	125817	ArgumentList	xmlout		125509	1					
ANR	125818	Argument	xmlout		125509	0					
ANR	125819	Identifier	xmlout		125509	0					
ANR	125820	Argument	"""          <TMc>0x%08x</TMc>\\n"""		125509	1					
ANR	125821	PrimaryExpression	"""          <TMc>0x%08x</TMc>\\n"""		125509	0					
ANR	125822	Argument	track -> trans_matrix [ 3 ]		125509	2					
ANR	125823	ArrayIndexing	track -> trans_matrix [ 3 ]		125509	0					
ANR	125824	PtrMemberAccess	track -> trans_matrix		125509	0					
ANR	125825	Identifier	track		125509	0					
ANR	125826	Identifier	trans_matrix		125509	1					
ANR	125827	PrimaryExpression	3		125509	1					
ANR	125828	ExpressionStatement	"fprintf ( xmlout , ""          <TMd>0x%08x</TMd>\\n"" , track -> trans_matrix [ 4 ] )"	574:8:24542:24615	125509	6	True				
ANR	125829	CallExpression	"fprintf ( xmlout , ""          <TMd>0x%08x</TMd>\\n"" , track -> trans_matrix [ 4 ] )"		125509	0					
ANR	125830	Callee	fprintf		125509	0					
ANR	125831	Identifier	fprintf		125509	0					
ANR	125832	ArgumentList	xmlout		125509	1					
ANR	125833	Argument	xmlout		125509	0					
ANR	125834	Identifier	xmlout		125509	0					
ANR	125835	Argument	"""          <TMd>0x%08x</TMd>\\n"""		125509	1					
ANR	125836	PrimaryExpression	"""          <TMd>0x%08x</TMd>\\n"""		125509	0					
ANR	125837	Argument	track -> trans_matrix [ 4 ]		125509	2					
ANR	125838	ArrayIndexing	track -> trans_matrix [ 4 ]		125509	0					
ANR	125839	PtrMemberAccess	track -> trans_matrix		125509	0					
ANR	125840	Identifier	track		125509	0					
ANR	125841	Identifier	trans_matrix		125509	1					
ANR	125842	PrimaryExpression	4		125509	1					
ANR	125843	ExpressionStatement	"fprintf ( xmlout , ""          <TMv>0x%08x</TMv>\\n"" , track -> trans_matrix [ 5 ] )"	575:8:24625:24698	125509	7	True				
ANR	125844	CallExpression	"fprintf ( xmlout , ""          <TMv>0x%08x</TMv>\\n"" , track -> trans_matrix [ 5 ] )"		125509	0					
ANR	125845	Callee	fprintf		125509	0					
ANR	125846	Identifier	fprintf		125509	0					
ANR	125847	ArgumentList	xmlout		125509	1					
ANR	125848	Argument	xmlout		125509	0					
ANR	125849	Identifier	xmlout		125509	0					
ANR	125850	Argument	"""          <TMv>0x%08x</TMv>\\n"""		125509	1					
ANR	125851	PrimaryExpression	"""          <TMv>0x%08x</TMv>\\n"""		125509	0					
ANR	125852	Argument	track -> trans_matrix [ 5 ]		125509	2					
ANR	125853	ArrayIndexing	track -> trans_matrix [ 5 ]		125509	0					
ANR	125854	PtrMemberAccess	track -> trans_matrix		125509	0					
ANR	125855	Identifier	track		125509	0					
ANR	125856	Identifier	trans_matrix		125509	1					
ANR	125857	PrimaryExpression	5		125509	1					
ANR	125858	ExpressionStatement	"fprintf ( xmlout , ""          <TMx>0x%08x</TMx>\\n"" , track -> trans_matrix [ 6 ] )"	576:8:24708:24781	125509	8	True				
ANR	125859	CallExpression	"fprintf ( xmlout , ""          <TMx>0x%08x</TMx>\\n"" , track -> trans_matrix [ 6 ] )"		125509	0					
ANR	125860	Callee	fprintf		125509	0					
ANR	125861	Identifier	fprintf		125509	0					
ANR	125862	ArgumentList	xmlout		125509	1					
ANR	125863	Argument	xmlout		125509	0					
ANR	125864	Identifier	xmlout		125509	0					
ANR	125865	Argument	"""          <TMx>0x%08x</TMx>\\n"""		125509	1					
ANR	125866	PrimaryExpression	"""          <TMx>0x%08x</TMx>\\n"""		125509	0					
ANR	125867	Argument	track -> trans_matrix [ 6 ]		125509	2					
ANR	125868	ArrayIndexing	track -> trans_matrix [ 6 ]		125509	0					
ANR	125869	PtrMemberAccess	track -> trans_matrix		125509	0					
ANR	125870	Identifier	track		125509	0					
ANR	125871	Identifier	trans_matrix		125509	1					
ANR	125872	PrimaryExpression	6		125509	1					
ANR	125873	ExpressionStatement	"fprintf ( xmlout , ""          <TMy>0x%08x</TMy>\\n"" , track -> trans_matrix [ 7 ] )"	577:8:24791:24864	125509	9	True				
ANR	125874	CallExpression	"fprintf ( xmlout , ""          <TMy>0x%08x</TMy>\\n"" , track -> trans_matrix [ 7 ] )"		125509	0					
ANR	125875	Callee	fprintf		125509	0					
ANR	125876	Identifier	fprintf		125509	0					
ANR	125877	ArgumentList	xmlout		125509	1					
ANR	125878	Argument	xmlout		125509	0					
ANR	125879	Identifier	xmlout		125509	0					
ANR	125880	Argument	"""          <TMy>0x%08x</TMy>\\n"""		125509	1					
ANR	125881	PrimaryExpression	"""          <TMy>0x%08x</TMy>\\n"""		125509	0					
ANR	125882	Argument	track -> trans_matrix [ 7 ]		125509	2					
ANR	125883	ArrayIndexing	track -> trans_matrix [ 7 ]		125509	0					
ANR	125884	PtrMemberAccess	track -> trans_matrix		125509	0					
ANR	125885	Identifier	track		125509	0					
ANR	125886	Identifier	trans_matrix		125509	1					
ANR	125887	PrimaryExpression	7		125509	1					
ANR	125888	ExpressionStatement	"fprintf ( xmlout , ""          <TMw>0x%08x</TMw>\\n"" , track -> trans_matrix [ 8 ] )"	578:8:24874:24947	125509	10	True				
ANR	125889	CallExpression	"fprintf ( xmlout , ""          <TMw>0x%08x</TMw>\\n"" , track -> trans_matrix [ 8 ] )"		125509	0					
ANR	125890	Callee	fprintf		125509	0					
ANR	125891	Identifier	fprintf		125509	0					
ANR	125892	ArgumentList	xmlout		125509	1					
ANR	125893	Argument	xmlout		125509	0					
ANR	125894	Identifier	xmlout		125509	0					
ANR	125895	Argument	"""          <TMw>0x%08x</TMw>\\n"""		125509	1					
ANR	125896	PrimaryExpression	"""          <TMw>0x%08x</TMw>\\n"""		125509	0					
ANR	125897	Argument	track -> trans_matrix [ 8 ]		125509	2					
ANR	125898	ArrayIndexing	track -> trans_matrix [ 8 ]		125509	0					
ANR	125899	PtrMemberAccess	track -> trans_matrix		125509	0					
ANR	125900	Identifier	track		125509	0					
ANR	125901	Identifier	trans_matrix		125509	1					
ANR	125902	PrimaryExpression	8		125509	1					
ANR	125903	ExpressionStatement	"fprintf ( xmlout , ""        </TransformationMatrix>\\n"" )"	579:8:24957:25010	125509	11	True				
ANR	125904	CallExpression	"fprintf ( xmlout , ""        </TransformationMatrix>\\n"" )"		125509	0					
ANR	125905	Callee	fprintf		125509	0					
ANR	125906	Identifier	fprintf		125509	0					
ANR	125907	ArgumentList	xmlout		125509	1					
ANR	125908	Argument	xmlout		125509	0					
ANR	125909	Identifier	xmlout		125509	0					
ANR	125910	Argument	"""        </TransformationMatrix>\\n"""		125509	1					
ANR	125911	PrimaryExpression	"""        </TransformationMatrix>\\n"""		125509	0					
ANR	125912	ExpressionStatement	track -> w = track -> w << 16	582:4:25043:25068	125509	6	True				
ANR	125913	AssignmentExpression	track -> w = track -> w << 16		125509	0		=			
ANR	125914	PtrMemberAccess	track -> w		125509	0					
ANR	125915	Identifier	track		125509	0					
ANR	125916	Identifier	w		125509	1					
ANR	125917	ShiftExpression	track -> w << 16		125509	1		<<			
ANR	125918	PtrMemberAccess	track -> w		125509	0					
ANR	125919	Identifier	track		125509	0					
ANR	125920	Identifier	w		125509	1					
ANR	125921	PrimaryExpression	16		125509	1					
ANR	125922	ExpressionStatement	track -> h = track -> h << 16	583:4:25074:25099	125509	7	True				
ANR	125923	AssignmentExpression	track -> h = track -> h << 16		125509	0		=			
ANR	125924	PtrMemberAccess	track -> h		125509	0					
ANR	125925	Identifier	track		125509	0					
ANR	125926	Identifier	h		125509	1					
ANR	125927	ShiftExpression	track -> h << 16		125509	1		<<			
ANR	125928	PtrMemberAccess	track -> h		125509	0					
ANR	125929	Identifier	track		125509	0					
ANR	125930	Identifier	h		125509	1					
ANR	125931	PrimaryExpression	16		125509	1					
ANR	125932	IfStatement	if ( notes )		125509	8					
ANR	125933	Condition	notes	585:8:25116:25120	125509	0	True				
ANR	125934	Identifier	notes		125509	0					
ANR	125935	CompoundStatement		72:15:3476:3476	125509	1					
ANR	125936	ExpressionStatement	"fprintf ( xmlout , ""        <!-- Width and Height in pixels are for the presentation; frames will be scaled to this. -->\\n"" )"	586:8:25133:25270	125509	0	True				
ANR	125937	CallExpression	"fprintf ( xmlout , ""        <!-- Width and Height in pixels are for the presentation; frames will be scaled to this. -->\\n"" )"		125509	0					
ANR	125938	Callee	fprintf		125509	0					
ANR	125939	Identifier	fprintf		125509	0					
ANR	125940	ArgumentList	xmlout		125509	1					
ANR	125941	Argument	xmlout		125509	0					
ANR	125942	Identifier	xmlout		125509	0					
ANR	125943	Argument	"""        <!-- Width and Height in pixels are for the presentation; frames will be scaled to this. -->\\n"""		125509	1					
ANR	125944	PrimaryExpression	"""        <!-- Width and Height in pixels are for the presentation; frames will be scaled to this. -->\\n"""		125509	0					
ANR	125945	ExpressionStatement	"fprintf ( xmlout , ""        <!-- Both stored as fixed-point binary 16.16 values. Decimal values are approximations. -->\\n"" )"	588:8:25280:25416	125509	1	True				
ANR	125946	CallExpression	"fprintf ( xmlout , ""        <!-- Both stored as fixed-point binary 16.16 values. Decimal values are approximations. -->\\n"" )"		125509	0					
ANR	125947	Callee	fprintf		125509	0					
ANR	125948	Identifier	fprintf		125509	0					
ANR	125949	ArgumentList	xmlout		125509	1					
ANR	125950	Argument	xmlout		125509	0					
ANR	125951	Identifier	xmlout		125509	0					
ANR	125952	Argument	"""        <!-- Both stored as fixed-point binary 16.16 values. Decimal values are approximations. -->\\n"""		125509	1					
ANR	125953	PrimaryExpression	"""        <!-- Both stored as fixed-point binary 16.16 values. Decimal values are approximations. -->\\n"""		125509	0					
ANR	125954	ExpressionStatement	"fprintf ( xmlout , ""        <Width>\\n"" )"	591:4:25428:25467	125509	9	True				
ANR	125955	CallExpression	"fprintf ( xmlout , ""        <Width>\\n"" )"		125509	0					
ANR	125956	Callee	fprintf		125509	0					
ANR	125957	Identifier	fprintf		125509	0					
ANR	125958	ArgumentList	xmlout		125509	1					
ANR	125959	Argument	xmlout		125509	0					
ANR	125960	Identifier	xmlout		125509	0					
ANR	125961	Argument	"""        <Width>\\n"""		125509	1					
ANR	125962	PrimaryExpression	"""        <Width>\\n"""		125509	0					
ANR	125963	IfStatement	if ( raw )		125509	10					
ANR	125964	Condition	raw	592:8:25477:25479	125509	0	True				
ANR	125965	Identifier	raw		125509	0					
ANR	125966	CompoundStatement		79:13:3835:3835	125509	1					
ANR	125967	ExpressionStatement	"fprintf ( xmlout , ""          <AsHex>0x%08x</AsHex>\\n"" , track -> w )"	593:8:25492:25555	125509	0	True				
ANR	125968	CallExpression	"fprintf ( xmlout , ""          <AsHex>0x%08x</AsHex>\\n"" , track -> w )"		125509	0					
ANR	125969	Callee	fprintf		125509	0					
ANR	125970	Identifier	fprintf		125509	0					
ANR	125971	ArgumentList	xmlout		125509	1					
ANR	125972	Argument	xmlout		125509	0					
ANR	125973	Identifier	xmlout		125509	0					
ANR	125974	Argument	"""          <AsHex>0x%08x</AsHex>\\n"""		125509	1					
ANR	125975	PrimaryExpression	"""          <AsHex>0x%08x</AsHex>\\n"""		125509	0					
ANR	125976	Argument	track -> w		125509	2					
ANR	125977	PtrMemberAccess	track -> w		125509	0					
ANR	125978	Identifier	track		125509	0					
ANR	125979	Identifier	w		125509	1					
ANR	125980	IfStatement	if ( derived )		125509	11					
ANR	125981	Condition	derived	595:8:25571:25577	125509	0	True				
ANR	125982	Identifier	derived		125509	0					
ANR	125983	CompoundStatement		82:17:3933:3933	125509	1					
ANR	125984	ExpressionStatement	"fprintf ( xmlout , ""          <AsDecimal>%12.6f</AsDecimal>\\n"" , ( double ) track -> w / ( double ) 0x00010000 )"	596:8:25590:25723	125509	0	True				
ANR	125985	CallExpression	"fprintf ( xmlout , ""          <AsDecimal>%12.6f</AsDecimal>\\n"" , ( double ) track -> w / ( double ) 0x00010000 )"		125509	0					
ANR	125986	Callee	fprintf		125509	0					
ANR	125987	Identifier	fprintf		125509	0					
ANR	125988	ArgumentList	xmlout		125509	1					
ANR	125989	Argument	xmlout		125509	0					
ANR	125990	Identifier	xmlout		125509	0					
ANR	125991	Argument	"""          <AsDecimal>%12.6f</AsDecimal>\\n"""		125509	1					
ANR	125992	PrimaryExpression	"""          <AsDecimal>%12.6f</AsDecimal>\\n"""		125509	0					
ANR	125993	Argument	( double ) track -> w / ( double ) 0x00010000		125509	2					
ANR	125994	MultiplicativeExpression	( double ) track -> w / ( double ) 0x00010000		125509	0		/			
ANR	125995	CastExpression	( double ) track -> w		125509	0					
ANR	125996	CastTarget	double		125509	0					
ANR	125997	PtrMemberAccess	track -> w		125509	1					
ANR	125998	Identifier	track		125509	0					
ANR	125999	Identifier	w		125509	1					
ANR	126000	CastExpression	( double ) 0x00010000		125509	1					
ANR	126001	CastTarget	double		125509	0					
ANR	126002	PrimaryExpression	0x00010000		125509	1					
ANR	126003	ExpressionStatement	"fprintf ( xmlout , ""        </Width>\\n"" )"	600:4:25803:25843	125509	12	True				
ANR	126004	CallExpression	"fprintf ( xmlout , ""        </Width>\\n"" )"		125509	0					
ANR	126005	Callee	fprintf		125509	0					
ANR	126006	Identifier	fprintf		125509	0					
ANR	126007	ArgumentList	xmlout		125509	1					
ANR	126008	Argument	xmlout		125509	0					
ANR	126009	Identifier	xmlout		125509	0					
ANR	126010	Argument	"""        </Width>\\n"""		125509	1					
ANR	126011	PrimaryExpression	"""        </Width>\\n"""		125509	0					
ANR	126012	ExpressionStatement	"fprintf ( xmlout , ""        <Height>\\n"" )"	601:4:25849:25889	125509	13	True				
ANR	126013	CallExpression	"fprintf ( xmlout , ""        <Height>\\n"" )"		125509	0					
ANR	126014	Callee	fprintf		125509	0					
ANR	126015	Identifier	fprintf		125509	0					
ANR	126016	ArgumentList	xmlout		125509	1					
ANR	126017	Argument	xmlout		125509	0					
ANR	126018	Identifier	xmlout		125509	0					
ANR	126019	Argument	"""        <Height>\\n"""		125509	1					
ANR	126020	PrimaryExpression	"""        <Height>\\n"""		125509	0					
ANR	126021	IfStatement	if ( raw )		125509	14					
ANR	126022	Condition	raw	602:8:25899:25901	125509	0	True				
ANR	126023	Identifier	raw		125509	0					
ANR	126024	CompoundStatement		89:13:4257:4257	125509	1					
ANR	126025	ExpressionStatement	"fprintf ( xmlout , ""          <AsHex>0x%08x</AsHex>\\n"" , track -> h )"	603:8:25914:25977	125509	0	True				
ANR	126026	CallExpression	"fprintf ( xmlout , ""          <AsHex>0x%08x</AsHex>\\n"" , track -> h )"		125509	0					
ANR	126027	Callee	fprintf		125509	0					
ANR	126028	Identifier	fprintf		125509	0					
ANR	126029	ArgumentList	xmlout		125509	1					
ANR	126030	Argument	xmlout		125509	0					
ANR	126031	Identifier	xmlout		125509	0					
ANR	126032	Argument	"""          <AsHex>0x%08x</AsHex>\\n"""		125509	1					
ANR	126033	PrimaryExpression	"""          <AsHex>0x%08x</AsHex>\\n"""		125509	0					
ANR	126034	Argument	track -> h		125509	2					
ANR	126035	PtrMemberAccess	track -> h		125509	0					
ANR	126036	Identifier	track		125509	0					
ANR	126037	Identifier	h		125509	1					
ANR	126038	IfStatement	if ( derived )		125509	15					
ANR	126039	Condition	derived	605:8:25993:25999	125509	0	True				
ANR	126040	Identifier	derived		125509	0					
ANR	126041	CompoundStatement		92:17:4355:4355	125509	1					
ANR	126042	ExpressionStatement	"fprintf ( xmlout , ""          <AsDecimal>%12.6f</AsDecimal>\\n"" , ( double ) track -> h / ( double ) 0x00010000 )"	606:8:26012:26145	125509	0	True				
ANR	126043	CallExpression	"fprintf ( xmlout , ""          <AsDecimal>%12.6f</AsDecimal>\\n"" , ( double ) track -> h / ( double ) 0x00010000 )"		125509	0					
ANR	126044	Callee	fprintf		125509	0					
ANR	126045	Identifier	fprintf		125509	0					
ANR	126046	ArgumentList	xmlout		125509	1					
ANR	126047	Argument	xmlout		125509	0					
ANR	126048	Identifier	xmlout		125509	0					
ANR	126049	Argument	"""          <AsDecimal>%12.6f</AsDecimal>\\n"""		125509	1					
ANR	126050	PrimaryExpression	"""          <AsDecimal>%12.6f</AsDecimal>\\n"""		125509	0					
ANR	126051	Argument	( double ) track -> h / ( double ) 0x00010000		125509	2					
ANR	126052	MultiplicativeExpression	( double ) track -> h / ( double ) 0x00010000		125509	0		/			
ANR	126053	CastExpression	( double ) track -> h		125509	0					
ANR	126054	CastTarget	double		125509	0					
ANR	126055	PtrMemberAccess	track -> h		125509	1					
ANR	126056	Identifier	track		125509	0					
ANR	126057	Identifier	h		125509	1					
ANR	126058	CastExpression	( double ) 0x00010000		125509	1					
ANR	126059	CastTarget	double		125509	0					
ANR	126060	PrimaryExpression	0x00010000		125509	1					
ANR	126061	ExpressionStatement	"fprintf ( xmlout , ""        </Height>\\n"" )"	610:4:26225:26266	125509	16	True				
ANR	126062	CallExpression	"fprintf ( xmlout , ""        </Height>\\n"" )"		125509	0					
ANR	126063	Callee	fprintf		125509	0					
ANR	126064	Identifier	fprintf		125509	0					
ANR	126065	ArgumentList	xmlout		125509	1					
ANR	126066	Argument	xmlout		125509	0					
ANR	126067	Identifier	xmlout		125509	0					
ANR	126068	Argument	"""        </Height>\\n"""		125509	1					
ANR	126069	PrimaryExpression	"""        </Height>\\n"""		125509	0					
ANR	126070	IfStatement	if ( notes )		125509	17					
ANR	126071	Condition	notes	612:8:26297:26301	125509	0	True				
ANR	126072	Identifier	notes		125509	0					
ANR	126073	CompoundStatement		99:15:4657:4657	125509	1					
ANR	126074	ExpressionStatement	"fprintf ( xmlout , ""        <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"" )"	613:8:26314:26455	125509	0	True				
ANR	126075	CallExpression	"fprintf ( xmlout , ""        <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"" )"		125509	0					
ANR	126076	Callee	fprintf		125509	0					
ANR	126077	Identifier	fprintf		125509	0					
ANR	126078	ArgumentList	xmlout		125509	1					
ANR	126079	Argument	xmlout		125509	0					
ANR	126080	Identifier	xmlout		125509	0					
ANR	126081	Argument	"""        <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"""		125509	1					
ANR	126082	PrimaryExpression	"""        <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"""		125509	0					
ANR	126083	ExpressionStatement	"fprintf ( xmlout , ""        <!-- Also, width and height values shown here will actually be those read from track's <VisualSampleEntry> if given. -->\\n"" )"	615:8:26465:26630	125509	1	True				
ANR	126084	CallExpression	"fprintf ( xmlout , ""        <!-- Also, width and height values shown here will actually be those read from track's <VisualSampleEntry> if given. -->\\n"" )"		125509	0					
ANR	126085	Callee	fprintf		125509	0					
ANR	126086	Identifier	fprintf		125509	0					
ANR	126087	ArgumentList	xmlout		125509	1					
ANR	126088	Argument	xmlout		125509	0					
ANR	126089	Identifier	xmlout		125509	0					
ANR	126090	Argument	"""        <!-- Also, width and height values shown here will actually be those read from track's <VisualSampleEntry> if given. -->\\n"""		125509	1					
ANR	126091	PrimaryExpression	"""        <!-- Also, width and height values shown here will actually be those read from track's <VisualSampleEntry> if given. -->\\n"""		125509	0					
ANR	126092	ExpressionStatement	track -> w = track -> w >> 16	618:4:26642:26667	125509	18	True				
ANR	126093	AssignmentExpression	track -> w = track -> w >> 16		125509	0		=			
ANR	126094	PtrMemberAccess	track -> w		125509	0					
ANR	126095	Identifier	track		125509	0					
ANR	126096	Identifier	w		125509	1					
ANR	126097	ShiftExpression	track -> w >> 16		125509	1		>>			
ANR	126098	PtrMemberAccess	track -> w		125509	0					
ANR	126099	Identifier	track		125509	0					
ANR	126100	Identifier	w		125509	1					
ANR	126101	PrimaryExpression	16		125509	1					
ANR	126102	ExpressionStatement	track -> h = track -> h >> 16	619:4:26673:26698	125509	19	True				
ANR	126103	AssignmentExpression	track -> h = track -> h >> 16		125509	0		=			
ANR	126104	PtrMemberAccess	track -> h		125509	0					
ANR	126105	Identifier	track		125509	0					
ANR	126106	Identifier	h		125509	1					
ANR	126107	ShiftExpression	track -> h >> 16		125509	1		>>			
ANR	126108	PtrMemberAccess	track -> h		125509	0					
ANR	126109	Identifier	track		125509	0					
ANR	126110	Identifier	h		125509	1					
ANR	126111	PrimaryExpression	16		125509	1					
ANR	126112	ExpressionStatement	"fprintf ( xmlout , ""      </TrackHeader>\\n"" )"	621:4:26711:26755	125509	20	True				
ANR	126113	CallExpression	"fprintf ( xmlout , ""      </TrackHeader>\\n"" )"		125509	0					
ANR	126114	Callee	fprintf		125509	0					
ANR	126115	Identifier	fprintf		125509	0					
ANR	126116	ArgumentList	xmlout		125509	1					
ANR	126117	Argument	xmlout		125509	0					
ANR	126118	Identifier	xmlout		125509	0					
ANR	126119	Argument	"""      </TrackHeader>\\n"""		125509	1					
ANR	126120	PrimaryExpression	"""      </TrackHeader>\\n"""		125509	0					
ANR	126121	ReturnType	void		125509	1					
ANR	126122	Identifier	xml_write_tkhd		125509	2					
ANR	126123	ParameterList	"FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum"		125509	3					
ANR	126124	Parameter	FILE * file	512:20:21564:21573	125509	0	True				
ANR	126125	ParameterType	FILE *		125509	0					
ANR	126126	Identifier	file		125509	1					
ANR	126127	Parameter	FILE * xmlout	512:32:21576:21587	125509	1	True				
ANR	126128	ParameterType	FILE *		125509	0					
ANR	126129	Identifier	xmlout		125509	1					
ANR	126130	Parameter	mj2_tk_t * track	512:46:21590:21604	125509	2	True				
ANR	126131	ParameterType	mj2_tk_t *		125509	0					
ANR	126132	Identifier	track		125509	1					
ANR	126133	Parameter	unsigned int tnum	513:20:21627:21643	125509	3	True				
ANR	126134	ParameterType	unsigned int		125509	0					
ANR	126135	Identifier	tnum		125509	1					
ANR	126136	CFGEntryNode	ENTRY		125509		True				
ANR	126137	CFGExitNode	EXIT		125509		True				
ANR	126138	Symbol	notes		125509						
ANR	126139	Symbol	tnum		125509						
ANR	126140	Symbol	track -> h		125509						
ANR	126141	Symbol	track -> trans_matrix		125509						
ANR	126142	Symbol	* * track		125509						
ANR	126143	Symbol	raw		125509						
ANR	126144	Symbol	* track -> trans_matrix		125509						
ANR	126145	Symbol	* track		125509						
ANR	126146	Symbol	xmlout		125509						
ANR	126147	Symbol	track -> track_type		125509						
ANR	126148	Symbol	file		125509						
ANR	126149	Symbol	track -> w		125509						
ANR	126150	Symbol	track -> track_ID		125509						
ANR	126151	Symbol	track -> volume		125509						
ANR	126152	Symbol	track		125509						
ANR	126153	Symbol	track -> layer		125509						
ANR	126154	Symbol	derived		125509						
ANR	126155	Function	xml_write_udta	626:0:26781:28137							
ANR	126156	FunctionDef	"xml_write_udta (FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum)"		126155	0					
ANR	126157	CompoundStatement		628:0:26883:28137	126155	0					
ANR	126158	Statement	IMAGINE	633:4:27124:27130	126155	0	True				
ANR	126159	Statement	track	633:12:27132:27136	126155	1	True				
ANR	126160	Statement	->	633:17:27137:27138	126155	2	True				
ANR	126161	Statement	udta	633:19:27139:27142	126155	3	True				
ANR	126162	Statement	","	633:23:27143:27143	126155	4	True				
ANR	126163	Statement	track	633:25:27145:27149	126155	5	True				
ANR	126164	Statement	->	633:30:27150:27151	126155	6	True				
ANR	126165	Statement	copyright_count	633:32:27152:27166	126155	7	True				
ANR	126166	Statement	","	633:47:27167:27167	126155	8	True				
ANR	126167	Statement	track	634:12:27181:27185	126155	9	True				
ANR	126168	Statement	->	634:17:27186:27187	126155	10	True				
ANR	126169	Statement	copyright_language	634:19:27188:27205	126155	11	True				
ANR	126170	Statement	[	634:37:27206:27206	126155	12	True				
ANR	126171	Statement	i	634:38:27207:27207	126155	13	True				
ANR	126172	Statement	]	634:39:27208:27208	126155	14	True				
ANR	126173	Statement	(	634:40:27209:27209	126155	15	True				
ANR	126174	Statement	array	634:41:27210:27214	126155	16	True				
ANR	126175	Statement	of	634:47:27216:27217	126155	17	True				
ANR	126176	Statement	16	634:50:27219:27220	126155	18	True				
ANR	126177	Statement	bit	634:52:27221:27223	126155	19	True				
ANR	126178	Statement	ints	634:56:27225:27228	126155	20	True				
ANR	126179	Statement	)	634:60:27229:27229	126155	21	True				
ANR	126180	Statement	","	634:61:27230:27230	126155	22	True				
ANR	126181	Statement	track	635:12:27244:27248	126155	23	True				
ANR	126182	Statement	->	635:17:27249:27250	126155	24	True				
ANR	126183	Statement	copyright_notice	635:19:27251:27266	126155	25	True				
ANR	126184	Statement	[	635:35:27267:27267	126155	26	True				
ANR	126185	Statement	i	635:36:27268:27268	126155	27	True				
ANR	126186	Statement	]	635:37:27269:27269	126155	28	True				
ANR	126187	Statement	(	635:38:27270:27270	126155	29	True				
ANR	126188	Statement	array	635:39:27271:27275	126155	30	True				
ANR	126189	Statement	of	635:45:27277:27278	126155	31	True				
ANR	126190	Statement	buffers	635:48:27280:27286	126155	32	True				
ANR	126191	Statement	)	635:55:27287:27287	126155	33	True				
ANR	126192	Statement	PROBABLY	636:12:27301:27308	126155	34	True				
ANR	126193	Statement	ALSO	636:21:27310:27313	126155	35	True				
ANR	126194	Statement	NEED	636:26:27315:27318	126155	36	True				
ANR	126195	Statement	track	636:31:27320:27324	126155	37	True				
ANR	126196	Statement	->	636:36:27325:27326	126155	38	True				
ANR	126197	Statement	udta_len	636:38:27327:27334	126155	39	True				
ANR	126198	Statement	or	636:47:27336:27337	126155	40	True				
ANR	126199	Statement	special	636:50:27339:27345	126155	41	True				
ANR	126200	Statement	handler	636:58:27347:27353	126155	42	True				
ANR	126201	Statement	for	636:66:27355:27357	126155	43	True				
ANR	126202	Statement	non	636:70:27359:27361	126155	44	True				
ANR	126203	Statement	-	636:74:27363:27363	126155	45	True				
ANR	126204	IdentifierDeclStatement	standard boxes char buf [ 5 ] ;	636:76:27365:27403	126155	46	True				
ANR	126205	IdentifierDecl	buf [ 5 ]		126155	0					
ANR	126206	IdentifierDeclType	standard boxes char [ 5 ]		126155	0					
ANR	126207	Identifier	buf		126155	1					
ANR	126208	PrimaryExpression	5		126155	2					
ANR	126209	IdentifierDeclStatement	int i ;	638:4:27409:27414	126155	47	True				
ANR	126210	IdentifierDecl	i		126155	0					
ANR	126211	IdentifierDeclType	int		126155	0					
ANR	126212	Identifier	i		126155	1					
ANR	126213	IfStatement	if ( track -> udta != 1 )		126155	48					
ANR	126214	Condition	track -> udta != 1	640:8:27425:27440	126155	0	True				
ANR	126215	EqualityExpression	track -> udta != 1		126155	0		!=			
ANR	126216	PtrMemberAccess	track -> udta		126155	0					
ANR	126217	Identifier	track		126155	0					
ANR	126218	Identifier	udta		126155	1					
ANR	126219	PrimaryExpression	1		126155	1					
ANR	126220	CompoundStatement		13:26:559:559	126155	1					
ANR	126221	ReturnStatement	return ;	641:8:27453:27459	126155	0	True				
ANR	126222	ExpressionStatement	"fprintf ( xmlout , ""      <UserData BoxType=\\""udta\\"">\\n"" )"	644:4:27493:27550	126155	49	True				
ANR	126223	CallExpression	"fprintf ( xmlout , ""      <UserData BoxType=\\""udta\\"">\\n"" )"		126155	0					
ANR	126224	Callee	fprintf		126155	0					
ANR	126225	Identifier	fprintf		126155	0					
ANR	126226	ArgumentList	xmlout		126155	1					
ANR	126227	Argument	xmlout		126155	0					
ANR	126228	Identifier	xmlout		126155	0					
ANR	126229	Argument	"""      <UserData BoxType=\\""udta\\"">\\n"""		126155	1					
ANR	126230	PrimaryExpression	"""      <UserData BoxType=\\""udta\\"">\\n"""		126155	0					
ANR	126231	ForStatement	for ( i = 0 ; i < track -> copyright_count ; i ++ )		126155	50					
ANR	126232	ForInit	i = 0 ;	645:9:27561:27566	126155	0	True				
ANR	126233	AssignmentExpression	i = 0		126155	0		=			
ANR	126234	Identifier	i		126155	0					
ANR	126235	PrimaryExpression	0		126155	1					
ANR	126236	Condition	i < track -> copyright_count	645:16:27568:27593	126155	1	True				
ANR	126237	RelationalExpression	i < track -> copyright_count		126155	0		<			
ANR	126238	Identifier	i		126155	0					
ANR	126239	PtrMemberAccess	track -> copyright_count		126155	1					
ANR	126240	Identifier	track		126155	0					
ANR	126241	Identifier	copyright_count		126155	1					
ANR	126242	PostIncDecOperationExpression	i ++	645:44:27596:27598	126155	2	True				
ANR	126243	Identifier	i		126155	0					
ANR	126244	IncDec	++		126155	1					
ANR	126245	CompoundStatement		18:49:717:717	126155	3					
ANR	126246	ExpressionStatement	"fprintf ( xmlout , ""        <Copyright BoxType=\\""cprt\\""> Instance=\\""%d\\"">\\n"" , i + 1 )"	646:8:27611:27709	126155	0	True				
ANR	126247	CallExpression	"fprintf ( xmlout , ""        <Copyright BoxType=\\""cprt\\""> Instance=\\""%d\\"">\\n"" , i + 1 )"		126155	0					
ANR	126248	Callee	fprintf		126155	0					
ANR	126249	Identifier	fprintf		126155	0					
ANR	126250	ArgumentList	xmlout		126155	1					
ANR	126251	Argument	xmlout		126155	0					
ANR	126252	Identifier	xmlout		126155	0					
ANR	126253	Argument	"""        <Copyright BoxType=\\""cprt\\""> Instance=\\""%d\\"">\\n"""		126155	1					
ANR	126254	PrimaryExpression	"""        <Copyright BoxType=\\""cprt\\""> Instance=\\""%d\\"">\\n"""		126155	0					
ANR	126255	Argument	i + 1		126155	2					
ANR	126256	AdditiveExpression	i + 1		126155	0		+			
ANR	126257	Identifier	i		126155	0					
ANR	126258	PrimaryExpression	1		126155	1					
ANR	126259	ExpressionStatement	"int16_to_3packedchars ( ( short int ) track -> copyright_languages [ i ] , buf )"	648:8:27719:27787	126155	1	True				
ANR	126260	CallExpression	"int16_to_3packedchars ( ( short int ) track -> copyright_languages [ i ] , buf )"		126155	0					
ANR	126261	Callee	int16_to_3packedchars		126155	0					
ANR	126262	Identifier	int16_to_3packedchars		126155	0					
ANR	126263	ArgumentList	( short int ) track -> copyright_languages [ i ]		126155	1					
ANR	126264	Argument	( short int ) track -> copyright_languages [ i ]		126155	0					
ANR	126265	CastExpression	( short int ) track -> copyright_languages [ i ]		126155	0					
ANR	126266	CastTarget	short int		126155	0					
ANR	126267	ArrayIndexing	track -> copyright_languages [ i ]		126155	1					
ANR	126268	PtrMemberAccess	track -> copyright_languages		126155	0					
ANR	126269	Identifier	track		126155	0					
ANR	126270	Identifier	copyright_languages		126155	1					
ANR	126271	Identifier	i		126155	1					
ANR	126272	Argument	buf		126155	1					
ANR	126273	Identifier	buf		126155	0					
ANR	126274	ExpressionStatement	"fprintf ( xmlout , ""          <Language>%s</Language>\\n"" , buf )"	649:8:27797:27857	126155	2	True				
ANR	126275	CallExpression	"fprintf ( xmlout , ""          <Language>%s</Language>\\n"" , buf )"		126155	0					
ANR	126276	Callee	fprintf		126155	0					
ANR	126277	Identifier	fprintf		126155	0					
ANR	126278	ArgumentList	xmlout		126155	1					
ANR	126279	Argument	xmlout		126155	0					
ANR	126280	Identifier	xmlout		126155	0					
ANR	126281	Argument	"""          <Language>%s</Language>\\n"""		126155	1					
ANR	126282	PrimaryExpression	"""          <Language>%s</Language>\\n"""		126155	0					
ANR	126283	Argument	buf		126155	2					
ANR	126284	Identifier	buf		126155	0					
ANR	126285	ExpressionStatement	"fprintf ( xmlout , ""          <Notice>%s</Notice>\\n"" , track -> copyright_notices [ i ] )"	650:8:27884:27980	126155	3	True				
ANR	126286	CallExpression	"fprintf ( xmlout , ""          <Notice>%s</Notice>\\n"" , track -> copyright_notices [ i ] )"		126155	0					
ANR	126287	Callee	fprintf		126155	0					
ANR	126288	Identifier	fprintf		126155	0					
ANR	126289	ArgumentList	xmlout		126155	1					
ANR	126290	Argument	xmlout		126155	0					
ANR	126291	Identifier	xmlout		126155	0					
ANR	126292	Argument	"""          <Notice>%s</Notice>\\n"""		126155	1					
ANR	126293	PrimaryExpression	"""          <Notice>%s</Notice>\\n"""		126155	0					
ANR	126294	Argument	track -> copyright_notices [ i ]		126155	2					
ANR	126295	ArrayIndexing	track -> copyright_notices [ i ]		126155	0					
ANR	126296	PtrMemberAccess	track -> copyright_notices		126155	0					
ANR	126297	Identifier	track		126155	0					
ANR	126298	Identifier	copyright_notices		126155	1					
ANR	126299	Identifier	i		126155	1					
ANR	126300	ExpressionStatement	"fprintf ( xmlout , ""        </Copyright>\\n"" , i + 1 )"	652:8:27990:28039	126155	4	True				
ANR	126301	CallExpression	"fprintf ( xmlout , ""        </Copyright>\\n"" , i + 1 )"		126155	0					
ANR	126302	Callee	fprintf		126155	0					
ANR	126303	Identifier	fprintf		126155	0					
ANR	126304	ArgumentList	xmlout		126155	1					
ANR	126305	Argument	xmlout		126155	0					
ANR	126306	Identifier	xmlout		126155	0					
ANR	126307	Argument	"""        </Copyright>\\n"""		126155	1					
ANR	126308	PrimaryExpression	"""        </Copyright>\\n"""		126155	0					
ANR	126309	Argument	i + 1		126155	2					
ANR	126310	AdditiveExpression	i + 1		126155	0		+			
ANR	126311	Identifier	i		126155	0					
ANR	126312	PrimaryExpression	1		126155	1					
ANR	126313	ExpressionStatement	"fprintf ( xmlout , ""      </UserData>\\n"" )"	655:4:28087:28128	126155	51	True				
ANR	126314	CallExpression	"fprintf ( xmlout , ""      </UserData>\\n"" )"		126155	0					
ANR	126315	Callee	fprintf		126155	0					
ANR	126316	Identifier	fprintf		126155	0					
ANR	126317	ArgumentList	xmlout		126155	1					
ANR	126318	Argument	xmlout		126155	0					
ANR	126319	Identifier	xmlout		126155	0					
ANR	126320	Argument	"""      </UserData>\\n"""		126155	1					
ANR	126321	PrimaryExpression	"""      </UserData>\\n"""		126155	0					
ANR	126322	ReturnType	void		126155	1					
ANR	126323	Identifier	xml_write_udta		126155	2					
ANR	126324	ParameterList	"FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum"		126155	3					
ANR	126325	Parameter	FILE * file	626:20:26801:26810	126155	0	True				
ANR	126326	ParameterType	FILE *		126155	0					
ANR	126327	Identifier	file		126155	1					
ANR	126328	Parameter	FILE * xmlout	626:32:26813:26824	126155	1	True				
ANR	126329	ParameterType	FILE *		126155	0					
ANR	126330	Identifier	xmlout		126155	1					
ANR	126331	Parameter	mj2_tk_t * track	626:46:26827:26841	126155	2	True				
ANR	126332	ParameterType	mj2_tk_t *		126155	0					
ANR	126333	Identifier	track		126155	1					
ANR	126334	Parameter	unsigned int tnum	627:20:26864:26880	126155	3	True				
ANR	126335	ParameterType	unsigned int		126155	0					
ANR	126336	Identifier	tnum		126155	1					
ANR	126337	CFGEntryNode	ENTRY		126155		True				
ANR	126338	CFGExitNode	EXIT		126155		True				
ANR	126339	Symbol	tnum		126155						
ANR	126340	Symbol	* * track		126155						
ANR	126341	Symbol	i		126155						
ANR	126342	Symbol	* track -> copyright_notices		126155						
ANR	126343	Symbol	track -> copyright_count		126155						
ANR	126344	Symbol	* track		126155						
ANR	126345	Symbol	track -> copyright_notices		126155						
ANR	126346	Symbol	xmlout		126155						
ANR	126347	Symbol	track -> udta		126155						
ANR	126348	Symbol	buf		126155						
ANR	126349	Symbol	file		126155						
ANR	126350	Symbol	* i		126155						
ANR	126351	Symbol	track -> copyright_languages		126155						
ANR	126352	Symbol	track		126155						
ANR	126353	Symbol	* track -> copyright_languages		126155						
ANR	126354	Function	xml_write_mdia	661:0:28161:38528							
ANR	126355	FunctionDef	"xml_write_mdia (FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum)"		126354	0					
ANR	126356	CompoundStatement		663:0:28263:38528	126354	0					
ANR	126357	IdentifierDeclStatement	char buf [ 5 ] ;	664:4:28269:28280	126354	0	True				
ANR	126358	IdentifierDecl	buf [ 5 ]		126354	0					
ANR	126359	IdentifierDeclType	char [ 5 ]		126354	0					
ANR	126360	Identifier	buf		126354	1					
ANR	126361	PrimaryExpression	5		126354	2					
ANR	126362	IdentifierDeclStatement	"int i , k ;"	665:4:28286:28294	126354	1	True				
ANR	126363	IdentifierDecl	i		126354	0					
ANR	126364	IdentifierDeclType	int		126354	0					
ANR	126365	Identifier	i		126354	1					
ANR	126366	IdentifierDecl	k		126354	1					
ANR	126367	IdentifierDeclType	int		126354	0					
ANR	126368	Identifier	k		126354	1					
ANR	126369	ExpressionStatement	buf [ 4 ] = '\\0'	666:4:28300:28313	126354	2	True				
ANR	126370	AssignmentExpression	buf [ 4 ] = '\\0'		126354	0		=			
ANR	126371	ArrayIndexing	buf [ 4 ]		126354	0					
ANR	126372	Identifier	buf		126354	0					
ANR	126373	PrimaryExpression	4		126354	1					
ANR	126374	PrimaryExpression	'\\0'		126354	1					
ANR	126375	ExpressionStatement	"fprintf ( xmlout , ""      <Media BoxType=\\""mdia\\"">\\n"" )"	668:4:28320:28374	126354	3	True				
ANR	126376	CallExpression	"fprintf ( xmlout , ""      <Media BoxType=\\""mdia\\"">\\n"" )"		126354	0					
ANR	126377	Callee	fprintf		126354	0					
ANR	126378	Identifier	fprintf		126354	0					
ANR	126379	ArgumentList	xmlout		126354	1					
ANR	126380	Argument	xmlout		126354	0					
ANR	126381	Identifier	xmlout		126354	0					
ANR	126382	Argument	"""      <Media BoxType=\\""mdia\\"">\\n"""		126354	1					
ANR	126383	PrimaryExpression	"""      <Media BoxType=\\""mdia\\"">\\n"""		126354	0					
ANR	126384	ExpressionStatement	"fprintf ( xmlout , ""        <MediaHeader BoxType=\\""mdhd\\"">\\n"" )"	669:4:28380:28442	126354	4	True				
ANR	126385	CallExpression	"fprintf ( xmlout , ""        <MediaHeader BoxType=\\""mdhd\\"">\\n"" )"		126354	0					
ANR	126386	Callee	fprintf		126354	0					
ANR	126387	Identifier	fprintf		126354	0					
ANR	126388	ArgumentList	xmlout		126354	1					
ANR	126389	Argument	xmlout		126354	0					
ANR	126390	Identifier	xmlout		126354	0					
ANR	126391	Argument	"""        <MediaHeader BoxType=\\""mdhd\\"">\\n"""		126354	1					
ANR	126392	PrimaryExpression	"""        <MediaHeader BoxType=\\""mdhd\\"">\\n"""		126354	0					
ANR	126393	ExpressionStatement	"fprintf ( xmlout , ""          <CreationTime>\\n"" )"	670:4:28448:28496	126354	5	True				
ANR	126394	CallExpression	"fprintf ( xmlout , ""          <CreationTime>\\n"" )"		126354	0					
ANR	126395	Callee	fprintf		126354	0					
ANR	126396	Identifier	fprintf		126354	0					
ANR	126397	ArgumentList	xmlout		126354	1					
ANR	126398	Argument	xmlout		126354	0					
ANR	126399	Identifier	xmlout		126354	0					
ANR	126400	Argument	"""          <CreationTime>\\n"""		126354	1					
ANR	126401	PrimaryExpression	"""          <CreationTime>\\n"""		126354	0					
ANR	126402	IfStatement	if ( raw )		126354	6					
ANR	126403	Condition	raw	671:8:28506:28508	126354	0	True				
ANR	126404	Identifier	raw		126354	0					
ANR	126405	CompoundStatement		9:13:247:247	126354	1					
ANR	126406	ExpressionStatement	"fprintf ( xmlout , ""            <InSeconds>%u</InSeconds>\\n"" , track -> creation_time )"	672:8:28521:28618	126354	0	True				
ANR	126407	CallExpression	"fprintf ( xmlout , ""            <InSeconds>%u</InSeconds>\\n"" , track -> creation_time )"		126354	0					
ANR	126408	Callee	fprintf		126354	0					
ANR	126409	Identifier	fprintf		126354	0					
ANR	126410	ArgumentList	xmlout		126354	1					
ANR	126411	Argument	xmlout		126354	0					
ANR	126412	Identifier	xmlout		126354	0					
ANR	126413	Argument	"""            <InSeconds>%u</InSeconds>\\n"""		126354	1					
ANR	126414	PrimaryExpression	"""            <InSeconds>%u</InSeconds>\\n"""		126354	0					
ANR	126415	Argument	track -> creation_time		126354	2					
ANR	126416	PtrMemberAccess	track -> creation_time		126354	0					
ANR	126417	Identifier	track		126354	0					
ANR	126418	Identifier	creation_time		126354	1					
ANR	126419	IfStatement	if ( notes )		126354	7					
ANR	126420	Condition	notes	675:8:28634:28638	126354	0	True				
ANR	126421	Identifier	notes		126354	0					
ANR	126422	CompoundStatement		13:15:377:377	126354	1					
ANR	126423	ExpressionStatement	"fprintf ( xmlout , ""            <!-- Seconds since start of Jan. 1, 1904 UTC (Greenwich) -->\\n"" )"	676:8:28651:28760	126354	0	True				
ANR	126424	CallExpression	"fprintf ( xmlout , ""            <!-- Seconds since start of Jan. 1, 1904 UTC (Greenwich) -->\\n"" )"		126354	0					
ANR	126425	Callee	fprintf		126354	0					
ANR	126426	Identifier	fprintf		126354	0					
ANR	126427	ArgumentList	xmlout		126354	1					
ANR	126428	Argument	xmlout		126354	0					
ANR	126429	Identifier	xmlout		126354	0					
ANR	126430	Argument	"""            <!-- Seconds since start of Jan. 1, 1904 UTC (Greenwich) -->\\n"""		126354	1					
ANR	126431	PrimaryExpression	"""            <!-- Seconds since start of Jan. 1, 1904 UTC (Greenwich) -->\\n"""		126354	0					
ANR	126432	IfStatement	if ( derived )		126354	8					
ANR	126433	Condition	derived	682:8:28977:28983	126354	0	True				
ANR	126434	Identifier	derived		126354	0					
ANR	126435	CompoundStatement		20:17:722:722	126354	1					
ANR	126436	ExpressionStatement	"fprintf ( xmlout , ""            <AsLocalTime>"" )"	683:8:28996:29041	126354	0	True				
ANR	126437	CallExpression	"fprintf ( xmlout , ""            <AsLocalTime>"" )"		126354	0					
ANR	126438	Callee	fprintf		126354	0					
ANR	126439	Identifier	fprintf		126354	0					
ANR	126440	ArgumentList	xmlout		126354	1					
ANR	126441	Argument	xmlout		126354	0					
ANR	126442	Identifier	xmlout		126354	0					
ANR	126443	Argument	"""            <AsLocalTime>"""		126354	1					
ANR	126444	PrimaryExpression	"""            <AsLocalTime>"""		126354	0					
ANR	126445	ExpressionStatement	"xml_time_out ( xmlout , track -> creation_time - 2082844800 )"	684:8:29051:29106	126354	1	True				
ANR	126446	CallExpression	"xml_time_out ( xmlout , track -> creation_time - 2082844800 )"		126354	0					
ANR	126447	Callee	xml_time_out		126354	0					
ANR	126448	Identifier	xml_time_out		126354	0					
ANR	126449	ArgumentList	xmlout		126354	1					
ANR	126450	Argument	xmlout		126354	0					
ANR	126451	Identifier	xmlout		126354	0					
ANR	126452	Argument	track -> creation_time - 2082844800		126354	1					
ANR	126453	AdditiveExpression	track -> creation_time - 2082844800		126354	0		-			
ANR	126454	PtrMemberAccess	track -> creation_time		126354	0					
ANR	126455	Identifier	track		126354	0					
ANR	126456	Identifier	creation_time		126354	1					
ANR	126457	PrimaryExpression	2082844800		126354	1					
ANR	126458	ExpressionStatement	"fprintf ( xmlout , ""</AsLocalTime>\\n"" )"	685:8:29116:29151	126354	2	True				
ANR	126459	CallExpression	"fprintf ( xmlout , ""</AsLocalTime>\\n"" )"		126354	0					
ANR	126460	Callee	fprintf		126354	0					
ANR	126461	Identifier	fprintf		126354	0					
ANR	126462	ArgumentList	xmlout		126354	1					
ANR	126463	Argument	xmlout		126354	0					
ANR	126464	Identifier	xmlout		126354	0					
ANR	126465	Argument	"""</AsLocalTime>\\n"""		126354	1					
ANR	126466	PrimaryExpression	"""</AsLocalTime>\\n"""		126354	0					
ANR	126467	ExpressionStatement	"fprintf ( xmlout , ""          </CreationTime>\\n"" )"	687:4:29163:29212	126354	9	True				
ANR	126468	CallExpression	"fprintf ( xmlout , ""          </CreationTime>\\n"" )"		126354	0					
ANR	126469	Callee	fprintf		126354	0					
ANR	126470	Identifier	fprintf		126354	0					
ANR	126471	ArgumentList	xmlout		126354	1					
ANR	126472	Argument	xmlout		126354	0					
ANR	126473	Identifier	xmlout		126354	0					
ANR	126474	Argument	"""          </CreationTime>\\n"""		126354	1					
ANR	126475	PrimaryExpression	"""          </CreationTime>\\n"""		126354	0					
ANR	126476	ExpressionStatement	"fprintf ( xmlout , ""          <ModificationTime>\\n"" )"	688:4:29218:29270	126354	10	True				
ANR	126477	CallExpression	"fprintf ( xmlout , ""          <ModificationTime>\\n"" )"		126354	0					
ANR	126478	Callee	fprintf		126354	0					
ANR	126479	Identifier	fprintf		126354	0					
ANR	126480	ArgumentList	xmlout		126354	1					
ANR	126481	Argument	xmlout		126354	0					
ANR	126482	Identifier	xmlout		126354	0					
ANR	126483	Argument	"""          <ModificationTime>\\n"""		126354	1					
ANR	126484	PrimaryExpression	"""          <ModificationTime>\\n"""		126354	0					
ANR	126485	IfStatement	if ( raw )		126354	11					
ANR	126486	Condition	raw	689:8:29280:29282	126354	0	True				
ANR	126487	Identifier	raw		126354	0					
ANR	126488	CompoundStatement		27:13:1021:1021	126354	1					
ANR	126489	ExpressionStatement	"fprintf ( xmlout , ""            <InSeconds>%u</InSeconds>\\n"" , track -> modification_time )"	690:8:29295:29396	126354	0	True				
ANR	126490	CallExpression	"fprintf ( xmlout , ""            <InSeconds>%u</InSeconds>\\n"" , track -> modification_time )"		126354	0					
ANR	126491	Callee	fprintf		126354	0					
ANR	126492	Identifier	fprintf		126354	0					
ANR	126493	ArgumentList	xmlout		126354	1					
ANR	126494	Argument	xmlout		126354	0					
ANR	126495	Identifier	xmlout		126354	0					
ANR	126496	Argument	"""            <InSeconds>%u</InSeconds>\\n"""		126354	1					
ANR	126497	PrimaryExpression	"""            <InSeconds>%u</InSeconds>\\n"""		126354	0					
ANR	126498	Argument	track -> modification_time		126354	2					
ANR	126499	PtrMemberAccess	track -> modification_time		126354	0					
ANR	126500	Identifier	track		126354	0					
ANR	126501	Identifier	modification_time		126354	1					
ANR	126502	IfStatement	if ( derived )		126354	12					
ANR	126503	Condition	derived	693:8:29412:29418	126354	0	True				
ANR	126504	Identifier	derived		126354	0					
ANR	126505	CompoundStatement		31:17:1157:1157	126354	1					
ANR	126506	ExpressionStatement	"fprintf ( xmlout , ""            <AsLocalTime>"" )"	694:8:29431:29476	126354	0	True				
ANR	126507	CallExpression	"fprintf ( xmlout , ""            <AsLocalTime>"" )"		126354	0					
ANR	126508	Callee	fprintf		126354	0					
ANR	126509	Identifier	fprintf		126354	0					
ANR	126510	ArgumentList	xmlout		126354	1					
ANR	126511	Argument	xmlout		126354	0					
ANR	126512	Identifier	xmlout		126354	0					
ANR	126513	Argument	"""            <AsLocalTime>"""		126354	1					
ANR	126514	PrimaryExpression	"""            <AsLocalTime>"""		126354	0					
ANR	126515	ExpressionStatement	"xml_time_out ( xmlout , track -> modification_time - 2082844800 )"	695:8:29486:29545	126354	1	True				
ANR	126516	CallExpression	"xml_time_out ( xmlout , track -> modification_time - 2082844800 )"		126354	0					
ANR	126517	Callee	xml_time_out		126354	0					
ANR	126518	Identifier	xml_time_out		126354	0					
ANR	126519	ArgumentList	xmlout		126354	1					
ANR	126520	Argument	xmlout		126354	0					
ANR	126521	Identifier	xmlout		126354	0					
ANR	126522	Argument	track -> modification_time - 2082844800		126354	1					
ANR	126523	AdditiveExpression	track -> modification_time - 2082844800		126354	0		-			
ANR	126524	PtrMemberAccess	track -> modification_time		126354	0					
ANR	126525	Identifier	track		126354	0					
ANR	126526	Identifier	modification_time		126354	1					
ANR	126527	PrimaryExpression	2082844800		126354	1					
ANR	126528	ExpressionStatement	"fprintf ( xmlout , ""</AsLocalTime>\\n"" )"	696:8:29555:29590	126354	2	True				
ANR	126529	CallExpression	"fprintf ( xmlout , ""</AsLocalTime>\\n"" )"		126354	0					
ANR	126530	Callee	fprintf		126354	0					
ANR	126531	Identifier	fprintf		126354	0					
ANR	126532	ArgumentList	xmlout		126354	1					
ANR	126533	Argument	xmlout		126354	0					
ANR	126534	Identifier	xmlout		126354	0					
ANR	126535	Argument	"""</AsLocalTime>\\n"""		126354	1					
ANR	126536	PrimaryExpression	"""</AsLocalTime>\\n"""		126354	0					
ANR	126537	ExpressionStatement	"fprintf ( xmlout , ""          </ModificationTime>\\n"" )"	698:4:29602:29655	126354	13	True				
ANR	126538	CallExpression	"fprintf ( xmlout , ""          </ModificationTime>\\n"" )"		126354	0					
ANR	126539	Callee	fprintf		126354	0					
ANR	126540	Identifier	fprintf		126354	0					
ANR	126541	ArgumentList	xmlout		126354	1					
ANR	126542	Argument	xmlout		126354	0					
ANR	126543	Identifier	xmlout		126354	0					
ANR	126544	Argument	"""          </ModificationTime>\\n"""		126354	1					
ANR	126545	PrimaryExpression	"""          </ModificationTime>\\n"""		126354	0					
ANR	126546	ExpressionStatement	"fprintf ( xmlout , ""          <Timescale>%d</Timescale>\\n"" , track -> timescale )"	699:4:29661:29738	126354	14	True				
ANR	126547	CallExpression	"fprintf ( xmlout , ""          <Timescale>%d</Timescale>\\n"" , track -> timescale )"		126354	0					
ANR	126548	Callee	fprintf		126354	0					
ANR	126549	Identifier	fprintf		126354	0					
ANR	126550	ArgumentList	xmlout		126354	1					
ANR	126551	Argument	xmlout		126354	0					
ANR	126552	Identifier	xmlout		126354	0					
ANR	126553	Argument	"""          <Timescale>%d</Timescale>\\n"""		126354	1					
ANR	126554	PrimaryExpression	"""          <Timescale>%d</Timescale>\\n"""		126354	0					
ANR	126555	Argument	track -> timescale		126354	2					
ANR	126556	PtrMemberAccess	track -> timescale		126354	0					
ANR	126557	Identifier	track		126354	0					
ANR	126558	Identifier	timescale		126354	1					
ANR	126559	IfStatement	if ( notes )		126354	15					
ANR	126560	Condition	notes	700:8:29748:29752	126354	0	True				
ANR	126561	Identifier	notes		126354	0					
ANR	126562	CompoundStatement		38:15:1491:1491	126354	1					
ANR	126563	ExpressionStatement	"fprintf ( xmlout , ""          <!-- Timescale defines time units in one second -->\\n"" )"	701:8:29765:29863	126354	0	True				
ANR	126564	CallExpression	"fprintf ( xmlout , ""          <!-- Timescale defines time units in one second -->\\n"" )"		126354	0					
ANR	126565	Callee	fprintf		126354	0					
ANR	126566	Identifier	fprintf		126354	0					
ANR	126567	ArgumentList	xmlout		126354	1					
ANR	126568	Argument	xmlout		126354	0					
ANR	126569	Identifier	xmlout		126354	0					
ANR	126570	Argument	"""          <!-- Timescale defines time units in one second -->\\n"""		126354	1					
ANR	126571	PrimaryExpression	"""          <!-- Timescale defines time units in one second -->\\n"""		126354	0					
ANR	126572	ExpressionStatement	"fprintf ( xmlout , ""          <Duration>\\n"" )"	704:4:29875:29919	126354	16	True				
ANR	126573	CallExpression	"fprintf ( xmlout , ""          <Duration>\\n"" )"		126354	0					
ANR	126574	Callee	fprintf		126354	0					
ANR	126575	Identifier	fprintf		126354	0					
ANR	126576	ArgumentList	xmlout		126354	1					
ANR	126577	Argument	xmlout		126354	0					
ANR	126578	Identifier	xmlout		126354	0					
ANR	126579	Argument	"""          <Duration>\\n"""		126354	1					
ANR	126580	PrimaryExpression	"""          <Duration>\\n"""		126354	0					
ANR	126581	IfStatement	if ( raw )		126354	17					
ANR	126582	Condition	raw	705:8:29929:29931	126354	0	True				
ANR	126583	Identifier	raw		126354	0					
ANR	126584	CompoundStatement		43:13:1670:1670	126354	1					
ANR	126585	ExpressionStatement	"fprintf ( xmlout , ""            <InTimeUnits>%u</InTimeUnits>\\n"" , track -> duration )"	706:8:29944:30040	126354	0	True				
ANR	126586	CallExpression	"fprintf ( xmlout , ""            <InTimeUnits>%u</InTimeUnits>\\n"" , track -> duration )"		126354	0					
ANR	126587	Callee	fprintf		126354	0					
ANR	126588	Identifier	fprintf		126354	0					
ANR	126589	ArgumentList	xmlout		126354	1					
ANR	126590	Argument	xmlout		126354	0					
ANR	126591	Identifier	xmlout		126354	0					
ANR	126592	Argument	"""            <InTimeUnits>%u</InTimeUnits>\\n"""		126354	1					
ANR	126593	PrimaryExpression	"""            <InTimeUnits>%u</InTimeUnits>\\n"""		126354	0					
ANR	126594	Argument	track -> duration		126354	2					
ANR	126595	PtrMemberAccess	track -> duration		126354	0					
ANR	126596	Identifier	track		126354	0					
ANR	126597	Identifier	duration		126354	1					
ANR	126598	IfStatement	if ( derived )		126354	18					
ANR	126599	Condition	derived	709:8:30056:30062	126354	0	True				
ANR	126600	Identifier	derived		126354	0					
ANR	126601	CompoundStatement		47:17:1801:1801	126354	1					
ANR	126602	ExpressionStatement	"fprintf ( xmlout , ""            <InSeconds>%12.3f</InSeconds>\\n"" , ( double ) track -> duration / ( double ) track -> timescale )"	710:8:30075:30223	126354	0	True				
ANR	126603	CallExpression	"fprintf ( xmlout , ""            <InSeconds>%12.3f</InSeconds>\\n"" , ( double ) track -> duration / ( double ) track -> timescale )"		126354	0					
ANR	126604	Callee	fprintf		126354	0					
ANR	126605	Identifier	fprintf		126354	0					
ANR	126606	ArgumentList	xmlout		126354	1					
ANR	126607	Argument	xmlout		126354	0					
ANR	126608	Identifier	xmlout		126354	0					
ANR	126609	Argument	"""            <InSeconds>%12.3f</InSeconds>\\n"""		126354	1					
ANR	126610	PrimaryExpression	"""            <InSeconds>%12.3f</InSeconds>\\n"""		126354	0					
ANR	126611	Argument	( double ) track -> duration / ( double ) track -> timescale		126354	2					
ANR	126612	MultiplicativeExpression	( double ) track -> duration / ( double ) track -> timescale		126354	0		/			
ANR	126613	CastExpression	( double ) track -> duration		126354	0					
ANR	126614	CastTarget	double		126354	0					
ANR	126615	PtrMemberAccess	track -> duration		126354	1					
ANR	126616	Identifier	track		126354	0					
ANR	126617	Identifier	duration		126354	1					
ANR	126618	CastExpression	( double ) track -> timescale		126354	1					
ANR	126619	CastTarget	double		126354	0					
ANR	126620	PtrMemberAccess	track -> timescale		126354	1					
ANR	126621	Identifier	track		126354	0					
ANR	126622	Identifier	timescale		126354	1					
ANR	126623	ExpressionStatement	"fprintf ( xmlout , ""          </Duration>\\n"" )"	714:4:30290:30335	126354	19	True				
ANR	126624	CallExpression	"fprintf ( xmlout , ""          </Duration>\\n"" )"		126354	0					
ANR	126625	Callee	fprintf		126354	0					
ANR	126626	Identifier	fprintf		126354	0					
ANR	126627	ArgumentList	xmlout		126354	1					
ANR	126628	Argument	xmlout		126354	0					
ANR	126629	Identifier	xmlout		126354	0					
ANR	126630	Argument	"""          </Duration>\\n"""		126354	1					
ANR	126631	PrimaryExpression	"""          </Duration>\\n"""		126354	0					
ANR	126632	ExpressionStatement	"int16_to_3packedchars ( ( short int ) track -> language , buf )"	715:4:30341:30395	126354	20	True				
ANR	126633	CallExpression	"int16_to_3packedchars ( ( short int ) track -> language , buf )"		126354	0					
ANR	126634	Callee	int16_to_3packedchars		126354	0					
ANR	126635	Identifier	int16_to_3packedchars		126354	0					
ANR	126636	ArgumentList	( short int ) track -> language		126354	1					
ANR	126637	Argument	( short int ) track -> language		126354	0					
ANR	126638	CastExpression	( short int ) track -> language		126354	0					
ANR	126639	CastTarget	short int		126354	0					
ANR	126640	PtrMemberAccess	track -> language		126354	1					
ANR	126641	Identifier	track		126354	0					
ANR	126642	Identifier	language		126354	1					
ANR	126643	Argument	buf		126354	1					
ANR	126644	Identifier	buf		126354	0					
ANR	126645	ExpressionStatement	"fprintf ( xmlout , ""          <Language>%s</Language>\\n"" , buf )"	716:4:30401:30463	126354	21	True				
ANR	126646	CallExpression	"fprintf ( xmlout , ""          <Language>%s</Language>\\n"" , buf )"		126354	0					
ANR	126647	Callee	fprintf		126354	0					
ANR	126648	Identifier	fprintf		126354	0					
ANR	126649	ArgumentList	xmlout		126354	1					
ANR	126650	Argument	xmlout		126354	0					
ANR	126651	Identifier	xmlout		126354	0					
ANR	126652	Argument	"""          <Language>%s</Language>\\n"""		126354	1					
ANR	126653	PrimaryExpression	"""          <Language>%s</Language>\\n"""		126354	0					
ANR	126654	Argument	buf		126354	2					
ANR	126655	Identifier	buf		126354	0					
ANR	126656	ExpressionStatement	"fprintf ( xmlout , ""        </MediaHeader>\\n"" )"	717:4:30486:30532	126354	22	True				
ANR	126657	CallExpression	"fprintf ( xmlout , ""        </MediaHeader>\\n"" )"		126354	0					
ANR	126658	Callee	fprintf		126354	0					
ANR	126659	Identifier	fprintf		126354	0					
ANR	126660	ArgumentList	xmlout		126354	1					
ANR	126661	Argument	xmlout		126354	0					
ANR	126662	Identifier	xmlout		126354	0					
ANR	126663	Argument	"""        </MediaHeader>\\n"""		126354	1					
ANR	126664	PrimaryExpression	"""        </MediaHeader>\\n"""		126354	0					
ANR	126665	ExpressionStatement	"fprintf ( xmlout , ""        <HandlerReference BoxType=\\""hdlr\\"">\\n"" )"	718:4:30538:30605	126354	23	True				
ANR	126666	CallExpression	"fprintf ( xmlout , ""        <HandlerReference BoxType=\\""hdlr\\"">\\n"" )"		126354	0					
ANR	126667	Callee	fprintf		126354	0					
ANR	126668	Identifier	fprintf		126354	0					
ANR	126669	ArgumentList	xmlout		126354	1					
ANR	126670	Argument	xmlout		126354	0					
ANR	126671	Identifier	xmlout		126354	0					
ANR	126672	Argument	"""        <HandlerReference BoxType=\\""hdlr\\"">\\n"""		126354	1					
ANR	126673	PrimaryExpression	"""        <HandlerReference BoxType=\\""hdlr\\"">\\n"""		126354	0					
ANR	126674	SwitchStatement	switch ( track -> track_type )		126354	24					
ANR	126675	Condition	track -> track_type	719:12:30619:30635	126354	0	True				
ANR	126676	PtrMemberAccess	track -> track_type		126354	0					
ANR	126677	Identifier	track		126354	0					
ANR	126678	Identifier	track_type		126354	1					
ANR	126679	CompoundStatement		57:31:2374:2374	126354	1					
ANR	126680	Label	case 0 :	720:4:30644:30650	126354	0	True				
ANR	126681	ExpressionStatement	"fprintf ( xmlout , ""          <HandlerType Code=\\""vide\\"">video media track</HandlerType>\\n"" )"	721:8:30660:30765	126354	1	True				
ANR	126682	CallExpression	"fprintf ( xmlout , ""          <HandlerType Code=\\""vide\\"">video media track</HandlerType>\\n"" )"		126354	0					
ANR	126683	Callee	fprintf		126354	0					
ANR	126684	Identifier	fprintf		126354	0					
ANR	126685	ArgumentList	xmlout		126354	1					
ANR	126686	Argument	xmlout		126354	0					
ANR	126687	Identifier	xmlout		126354	0					
ANR	126688	Argument	"""          <HandlerType Code=\\""vide\\"">video media track</HandlerType>\\n"""		126354	1					
ANR	126689	PrimaryExpression	"""          <HandlerType Code=\\""vide\\"">video media track</HandlerType>\\n"""		126354	0					
ANR	126690	BreakStatement	break ;	723:8:30775:30780	126354	2	True				
ANR	126691	Label	case 1 :	724:4:30786:30792	126354	3	True				
ANR	126692	ExpressionStatement	"fprintf ( xmlout , ""          <HandlerType Code=\\""soun\\"">Sound</HandlerType>\\n"" )"	725:8:30802:30880	126354	4	True				
ANR	126693	CallExpression	"fprintf ( xmlout , ""          <HandlerType Code=\\""soun\\"">Sound</HandlerType>\\n"" )"		126354	0					
ANR	126694	Callee	fprintf		126354	0					
ANR	126695	Identifier	fprintf		126354	0					
ANR	126696	ArgumentList	xmlout		126354	1					
ANR	126697	Argument	xmlout		126354	0					
ANR	126698	Identifier	xmlout		126354	0					
ANR	126699	Argument	"""          <HandlerType Code=\\""soun\\"">Sound</HandlerType>\\n"""		126354	1					
ANR	126700	PrimaryExpression	"""          <HandlerType Code=\\""soun\\"">Sound</HandlerType>\\n"""		126354	0					
ANR	126701	BreakStatement	break ;	726:8:30890:30895	126354	5	True				
ANR	126702	Label	case 2 :	727:4:30901:30907	126354	6	True				
ANR	126703	ExpressionStatement	"fprintf ( xmlout , ""          <HandlerType Code=\\""hint\\"">Hint</HandlerType>\\n"" )"	728:8:30917:30994	126354	7	True				
ANR	126704	CallExpression	"fprintf ( xmlout , ""          <HandlerType Code=\\""hint\\"">Hint</HandlerType>\\n"" )"		126354	0					
ANR	126705	Callee	fprintf		126354	0					
ANR	126706	Identifier	fprintf		126354	0					
ANR	126707	ArgumentList	xmlout		126354	1					
ANR	126708	Argument	xmlout		126354	0					
ANR	126709	Identifier	xmlout		126354	0					
ANR	126710	Argument	"""          <HandlerType Code=\\""hint\\"">Hint</HandlerType>\\n"""		126354	1					
ANR	126711	PrimaryExpression	"""          <HandlerType Code=\\""hint\\"">Hint</HandlerType>\\n"""		126354	0					
ANR	126712	BreakStatement	break ;	729:8:31004:31009	126354	8	True				
ANR	126713	IfStatement	if ( notes )		126354	25					
ANR	126714	Condition	notes	731:8:31025:31029	126354	0	True				
ANR	126715	Identifier	notes		126354	0					
ANR	126716	CompoundStatement		69:15:2768:2768	126354	1					
ANR	126717	ExpressionStatement	"fprintf ( xmlout , ""          <!-- String value shown is not actually read from file. -->\\n"" )"	732:8:31042:31148	126354	0	True				
ANR	126718	CallExpression	"fprintf ( xmlout , ""          <!-- String value shown is not actually read from file. -->\\n"" )"		126354	0					
ANR	126719	Callee	fprintf		126354	0					
ANR	126720	Identifier	fprintf		126354	0					
ANR	126721	ArgumentList	xmlout		126354	1					
ANR	126722	Argument	xmlout		126354	0					
ANR	126723	Identifier	xmlout		126354	0					
ANR	126724	Argument	"""          <!-- String value shown is not actually read from file. -->\\n"""		126354	1					
ANR	126725	PrimaryExpression	"""          <!-- String value shown is not actually read from file. -->\\n"""		126354	0					
ANR	126726	ExpressionStatement	"fprintf ( xmlout , ""          <!-- Shown value is one used for our encode. -->\\n"" )"	734:8:31158:31253	126354	1	True				
ANR	126727	CallExpression	"fprintf ( xmlout , ""          <!-- Shown value is one used for our encode. -->\\n"" )"		126354	0					
ANR	126728	Callee	fprintf		126354	0					
ANR	126729	Identifier	fprintf		126354	0					
ANR	126730	ArgumentList	xmlout		126354	1					
ANR	126731	Argument	xmlout		126354	0					
ANR	126732	Identifier	xmlout		126354	0					
ANR	126733	Argument	"""          <!-- Shown value is one used for our encode. -->\\n"""		126354	1					
ANR	126734	PrimaryExpression	"""          <!-- Shown value is one used for our encode. -->\\n"""		126354	0					
ANR	126735	ExpressionStatement	"fprintf ( xmlout , ""        </HandlerReference>\\n"" )"	737:4:31265:31316	126354	26	True				
ANR	126736	CallExpression	"fprintf ( xmlout , ""        </HandlerReference>\\n"" )"		126354	0					
ANR	126737	Callee	fprintf		126354	0					
ANR	126738	Identifier	fprintf		126354	0					
ANR	126739	ArgumentList	xmlout		126354	1					
ANR	126740	Argument	xmlout		126354	0					
ANR	126741	Identifier	xmlout		126354	0					
ANR	126742	Argument	"""        </HandlerReference>\\n"""		126354	1					
ANR	126743	PrimaryExpression	"""        </HandlerReference>\\n"""		126354	0					
ANR	126744	ExpressionStatement	"fprintf ( xmlout , ""        <MediaInfoContainer BoxType=\\""minf\\"">\\n"" )"	738:4:31322:31391	126354	27	True				
ANR	126745	CallExpression	"fprintf ( xmlout , ""        <MediaInfoContainer BoxType=\\""minf\\"">\\n"" )"		126354	0					
ANR	126746	Callee	fprintf		126354	0					
ANR	126747	Identifier	fprintf		126354	0					
ANR	126748	ArgumentList	xmlout		126354	1					
ANR	126749	Argument	xmlout		126354	0					
ANR	126750	Identifier	xmlout		126354	0					
ANR	126751	Argument	"""        <MediaInfoContainer BoxType=\\""minf\\"">\\n"""		126354	1					
ANR	126752	PrimaryExpression	"""        <MediaInfoContainer BoxType=\\""minf\\"">\\n"""		126354	0					
ANR	126753	SwitchStatement	switch ( track -> track_type )		126354	28					
ANR	126754	Condition	track -> track_type	739:12:31405:31421	126354	0	True				
ANR	126755	PtrMemberAccess	track -> track_type		126354	0					
ANR	126756	Identifier	track		126354	0					
ANR	126757	Identifier	track_type		126354	1					
ANR	126758	CompoundStatement		77:31:3160:3160	126354	1					
ANR	126759	Label	case 0 :	740:4:31430:31436	126354	0	True				
ANR	126760	ExpressionStatement	"fprintf ( xmlout , ""          <VideoMediaHeader BoxType=\\""vmhd\\"">\\n"" )"	741:8:31446:31513	126354	1	True				
ANR	126761	CallExpression	"fprintf ( xmlout , ""          <VideoMediaHeader BoxType=\\""vmhd\\"">\\n"" )"		126354	0					
ANR	126762	Callee	fprintf		126354	0					
ANR	126763	Identifier	fprintf		126354	0					
ANR	126764	ArgumentList	xmlout		126354	1					
ANR	126765	Argument	xmlout		126354	0					
ANR	126766	Identifier	xmlout		126354	0					
ANR	126767	Argument	"""          <VideoMediaHeader BoxType=\\""vmhd\\"">\\n"""		126354	1					
ANR	126768	PrimaryExpression	"""          <VideoMediaHeader BoxType=\\""vmhd\\"">\\n"""		126354	0					
ANR	126769	ExpressionStatement	"fprintf ( xmlout , ""            <GraphicsMode>0x%02x</GraphicsMode>\\n"" , track -> graphicsmode )"	742:8:31523:31629	126354	2	True				
ANR	126770	CallExpression	"fprintf ( xmlout , ""            <GraphicsMode>0x%02x</GraphicsMode>\\n"" , track -> graphicsmode )"		126354	0					
ANR	126771	Callee	fprintf		126354	0					
ANR	126772	Identifier	fprintf		126354	0					
ANR	126773	ArgumentList	xmlout		126354	1					
ANR	126774	Argument	xmlout		126354	0					
ANR	126775	Identifier	xmlout		126354	0					
ANR	126776	Argument	"""            <GraphicsMode>0x%02x</GraphicsMode>\\n"""		126354	1					
ANR	126777	PrimaryExpression	"""            <GraphicsMode>0x%02x</GraphicsMode>\\n"""		126354	0					
ANR	126778	Argument	track -> graphicsmode		126354	2					
ANR	126779	PtrMemberAccess	track -> graphicsmode		126354	0					
ANR	126780	Identifier	track		126354	0					
ANR	126781	Identifier	graphicsmode		126354	1					
ANR	126782	IfStatement	if ( notes )		126354	3					
ANR	126783	Condition	notes	744:12:31643:31647	126354	0	True				
ANR	126784	Identifier	notes		126354	0					
ANR	126785	CompoundStatement		82:19:3386:3386	126354	1					
ANR	126786	ExpressionStatement	"fprintf ( xmlout , ""            <!-- Enumerated values of graphics mode: -->\\n"" )"	745:12:31664:31741	126354	0	True				
ANR	126787	CallExpression	"fprintf ( xmlout , ""            <!-- Enumerated values of graphics mode: -->\\n"" )"		126354	0					
ANR	126788	Callee	fprintf		126354	0					
ANR	126789	Identifier	fprintf		126354	0					
ANR	126790	ArgumentList	xmlout		126354	1					
ANR	126791	Argument	xmlout		126354	0					
ANR	126792	Identifier	xmlout		126354	0					
ANR	126793	Argument	"""            <!-- Enumerated values of graphics mode: -->\\n"""		126354	1					
ANR	126794	PrimaryExpression	"""            <!-- Enumerated values of graphics mode: -->\\n"""		126354	0					
ANR	126795	ExpressionStatement	"fprintf ( xmlout , ""            <!--  0x00 = copy (over existing image); -->\\n"" )"	746:12:31755:31832	126354	1	True				
ANR	126796	CallExpression	"fprintf ( xmlout , ""            <!--  0x00 = copy (over existing image); -->\\n"" )"		126354	0					
ANR	126797	Callee	fprintf		126354	0					
ANR	126798	Identifier	fprintf		126354	0					
ANR	126799	ArgumentList	xmlout		126354	1					
ANR	126800	Argument	xmlout		126354	0					
ANR	126801	Identifier	xmlout		126354	0					
ANR	126802	Argument	"""            <!--  0x00 = copy (over existing image); -->\\n"""		126354	1					
ANR	126803	PrimaryExpression	"""            <!--  0x00 = copy (over existing image); -->\\n"""		126354	0					
ANR	126804	ExpressionStatement	"fprintf ( xmlout , ""            <!--  0x24 = transparent; 'blue-screen' this image using opcolor; -->\\n"" )"	747:12:31846:31968	126354	2	True				
ANR	126805	CallExpression	"fprintf ( xmlout , ""            <!--  0x24 = transparent; 'blue-screen' this image using opcolor; -->\\n"" )"		126354	0					
ANR	126806	Callee	fprintf		126354	0					
ANR	126807	Identifier	fprintf		126354	0					
ANR	126808	ArgumentList	xmlout		126354	1					
ANR	126809	Argument	xmlout		126354	0					
ANR	126810	Identifier	xmlout		126354	0					
ANR	126811	Argument	"""            <!--  0x24 = transparent; 'blue-screen' this image using opcolor; -->\\n"""		126354	1					
ANR	126812	PrimaryExpression	"""            <!--  0x24 = transparent; 'blue-screen' this image using opcolor; -->\\n"""		126354	0					
ANR	126813	ExpressionStatement	"fprintf ( xmlout , ""            <!--  0x100 = alpha; alpha-blend this image -->\\n"" )"	749:12:31982:32082	126354	3	True				
ANR	126814	CallExpression	"fprintf ( xmlout , ""            <!--  0x100 = alpha; alpha-blend this image -->\\n"" )"		126354	0					
ANR	126815	Callee	fprintf		126354	0					
ANR	126816	Identifier	fprintf		126354	0					
ANR	126817	ArgumentList	xmlout		126354	1					
ANR	126818	Argument	xmlout		126354	0					
ANR	126819	Identifier	xmlout		126354	0					
ANR	126820	Argument	"""            <!--  0x100 = alpha; alpha-blend this image -->\\n"""		126354	1					
ANR	126821	PrimaryExpression	"""            <!--  0x100 = alpha; alpha-blend this image -->\\n"""		126354	0					
ANR	126822	ExpressionStatement	"fprintf ( xmlout , ""            <!--  0x102 = pre-multiplied black alpha; image has been already been alpha-blended with black. -->\\n"" )"	752:12:32281:32433	126354	4	True				
ANR	126823	CallExpression	"fprintf ( xmlout , ""            <!--  0x102 = pre-multiplied black alpha; image has been already been alpha-blended with black. -->\\n"" )"		126354	0					
ANR	126824	Callee	fprintf		126354	0					
ANR	126825	Identifier	fprintf		126354	0					
ANR	126826	ArgumentList	xmlout		126354	1					
ANR	126827	Argument	xmlout		126354	0					
ANR	126828	Identifier	xmlout		126354	0					
ANR	126829	Argument	"""            <!--  0x102 = pre-multiplied black alpha; image has been already been alpha-blended with black. -->\\n"""		126354	1					
ANR	126830	PrimaryExpression	"""            <!--  0x102 = pre-multiplied black alpha; image has been already been alpha-blended with black. -->\\n"""		126354	0					
ANR	126831	ExpressionStatement	"fprintf ( xmlout , ""            <!--  0x110 = component alpha; blend alpha channel(s) and color channels individually. -->\\n"" )"	754:12:32447:32590	126354	5	True				
ANR	126832	CallExpression	"fprintf ( xmlout , ""            <!--  0x110 = component alpha; blend alpha channel(s) and color channels individually. -->\\n"" )"		126354	0					
ANR	126833	Callee	fprintf		126354	0					
ANR	126834	Identifier	fprintf		126354	0					
ANR	126835	ArgumentList	xmlout		126354	1					
ANR	126836	Argument	xmlout		126354	0					
ANR	126837	Identifier	xmlout		126354	0					
ANR	126838	Argument	"""            <!--  0x110 = component alpha; blend alpha channel(s) and color channels individually. -->\\n"""		126354	1					
ANR	126839	PrimaryExpression	"""            <!--  0x110 = component alpha; blend alpha channel(s) and color channels individually. -->\\n"""		126354	0					
ANR	126840	ExpressionStatement	"fprintf ( xmlout , ""            <Opcolor>\\n"" )"	757:8:32610:32653	126354	4	True				
ANR	126841	CallExpression	"fprintf ( xmlout , ""            <Opcolor>\\n"" )"		126354	0					
ANR	126842	Callee	fprintf		126354	0					
ANR	126843	Identifier	fprintf		126354	0					
ANR	126844	ArgumentList	xmlout		126354	1					
ANR	126845	Argument	xmlout		126354	0					
ANR	126846	Identifier	xmlout		126354	0					
ANR	126847	Argument	"""            <Opcolor>\\n"""		126354	1					
ANR	126848	PrimaryExpression	"""            <Opcolor>\\n"""		126354	0					
ANR	126849	ExpressionStatement	"fprintf ( xmlout , ""              <Red>0x%02x</Red>\\n"" , track -> opcolor [ 0 ] )"	758:8:32663:32735	126354	5	True				
ANR	126850	CallExpression	"fprintf ( xmlout , ""              <Red>0x%02x</Red>\\n"" , track -> opcolor [ 0 ] )"		126354	0					
ANR	126851	Callee	fprintf		126354	0					
ANR	126852	Identifier	fprintf		126354	0					
ANR	126853	ArgumentList	xmlout		126354	1					
ANR	126854	Argument	xmlout		126354	0					
ANR	126855	Identifier	xmlout		126354	0					
ANR	126856	Argument	"""              <Red>0x%02x</Red>\\n"""		126354	1					
ANR	126857	PrimaryExpression	"""              <Red>0x%02x</Red>\\n"""		126354	0					
ANR	126858	Argument	track -> opcolor [ 0 ]		126354	2					
ANR	126859	ArrayIndexing	track -> opcolor [ 0 ]		126354	0					
ANR	126860	PtrMemberAccess	track -> opcolor		126354	0					
ANR	126861	Identifier	track		126354	0					
ANR	126862	Identifier	opcolor		126354	1					
ANR	126863	PrimaryExpression	0		126354	1					
ANR	126864	ExpressionStatement	"fprintf ( xmlout , ""              <Green>0x%02x</Green>\\n"" , track -> opcolor [ 1 ] )"	759:8:32745:32821	126354	6	True				
ANR	126865	CallExpression	"fprintf ( xmlout , ""              <Green>0x%02x</Green>\\n"" , track -> opcolor [ 1 ] )"		126354	0					
ANR	126866	Callee	fprintf		126354	0					
ANR	126867	Identifier	fprintf		126354	0					
ANR	126868	ArgumentList	xmlout		126354	1					
ANR	126869	Argument	xmlout		126354	0					
ANR	126870	Identifier	xmlout		126354	0					
ANR	126871	Argument	"""              <Green>0x%02x</Green>\\n"""		126354	1					
ANR	126872	PrimaryExpression	"""              <Green>0x%02x</Green>\\n"""		126354	0					
ANR	126873	Argument	track -> opcolor [ 1 ]		126354	2					
ANR	126874	ArrayIndexing	track -> opcolor [ 1 ]		126354	0					
ANR	126875	PtrMemberAccess	track -> opcolor		126354	0					
ANR	126876	Identifier	track		126354	0					
ANR	126877	Identifier	opcolor		126354	1					
ANR	126878	PrimaryExpression	1		126354	1					
ANR	126879	ExpressionStatement	"fprintf ( xmlout , ""              <Blue>0x%02x</Blue>\\n"" , track -> opcolor [ 2 ] )"	760:8:32831:32905	126354	7	True				
ANR	126880	CallExpression	"fprintf ( xmlout , ""              <Blue>0x%02x</Blue>\\n"" , track -> opcolor [ 2 ] )"		126354	0					
ANR	126881	Callee	fprintf		126354	0					
ANR	126882	Identifier	fprintf		126354	0					
ANR	126883	ArgumentList	xmlout		126354	1					
ANR	126884	Argument	xmlout		126354	0					
ANR	126885	Identifier	xmlout		126354	0					
ANR	126886	Argument	"""              <Blue>0x%02x</Blue>\\n"""		126354	1					
ANR	126887	PrimaryExpression	"""              <Blue>0x%02x</Blue>\\n"""		126354	0					
ANR	126888	Argument	track -> opcolor [ 2 ]		126354	2					
ANR	126889	ArrayIndexing	track -> opcolor [ 2 ]		126354	0					
ANR	126890	PtrMemberAccess	track -> opcolor		126354	0					
ANR	126891	Identifier	track		126354	0					
ANR	126892	Identifier	opcolor		126354	1					
ANR	126893	PrimaryExpression	2		126354	1					
ANR	126894	ExpressionStatement	"fprintf ( xmlout , ""            </Opcolor>\\n"" )"	761:8:32915:32959	126354	8	True				
ANR	126895	CallExpression	"fprintf ( xmlout , ""            </Opcolor>\\n"" )"		126354	0					
ANR	126896	Callee	fprintf		126354	0					
ANR	126897	Identifier	fprintf		126354	0					
ANR	126898	ArgumentList	xmlout		126354	1					
ANR	126899	Argument	xmlout		126354	0					
ANR	126900	Identifier	xmlout		126354	0					
ANR	126901	Argument	"""            </Opcolor>\\n"""		126354	1					
ANR	126902	PrimaryExpression	"""            </Opcolor>\\n"""		126354	0					
ANR	126903	ExpressionStatement	"fprintf ( xmlout , ""          </VideoMediaHeader>\\n"" )"	762:8:32969:33020	126354	9	True				
ANR	126904	CallExpression	"fprintf ( xmlout , ""          </VideoMediaHeader>\\n"" )"		126354	0					
ANR	126905	Callee	fprintf		126354	0					
ANR	126906	Identifier	fprintf		126354	0					
ANR	126907	ArgumentList	xmlout		126354	1					
ANR	126908	Argument	xmlout		126354	0					
ANR	126909	Identifier	xmlout		126354	0					
ANR	126910	Argument	"""          </VideoMediaHeader>\\n"""		126354	1					
ANR	126911	PrimaryExpression	"""          </VideoMediaHeader>\\n"""		126354	0					
ANR	126912	BreakStatement	break ;	763:8:33030:33035	126354	10	True				
ANR	126913	Label	case 1 :	764:4:33041:33047	126354	11	True				
ANR	126914	ExpressionStatement	"fprintf ( xmlout , ""          <SoundMediaHeader BoxType=\\""smhd\\"">\\n"" )"	765:8:33057:33124	126354	12	True				
ANR	126915	CallExpression	"fprintf ( xmlout , ""          <SoundMediaHeader BoxType=\\""smhd\\"">\\n"" )"		126354	0					
ANR	126916	Callee	fprintf		126354	0					
ANR	126917	Identifier	fprintf		126354	0					
ANR	126918	ArgumentList	xmlout		126354	1					
ANR	126919	Argument	xmlout		126354	0					
ANR	126920	Identifier	xmlout		126354	0					
ANR	126921	Argument	"""          <SoundMediaHeader BoxType=\\""smhd\\"">\\n"""		126354	1					
ANR	126922	PrimaryExpression	"""          <SoundMediaHeader BoxType=\\""smhd\\"">\\n"""		126354	0					
ANR	126923	ExpressionStatement	track -> balance = track -> balance << 8	767:8:33155:33191	126354	13	True				
ANR	126924	AssignmentExpression	track -> balance = track -> balance << 8		126354	0		=			
ANR	126925	PtrMemberAccess	track -> balance		126354	0					
ANR	126926	Identifier	track		126354	0					
ANR	126927	Identifier	balance		126354	1					
ANR	126928	ShiftExpression	track -> balance << 8		126354	1		<<			
ANR	126929	PtrMemberAccess	track -> balance		126354	0					
ANR	126930	Identifier	track		126354	0					
ANR	126931	Identifier	balance		126354	1					
ANR	126932	PrimaryExpression	8		126354	1					
ANR	126933	ExpressionStatement	"fprintf ( xmlout , ""            <Balance>\\n"" )"	769:8:33208:33251	126354	14	True				
ANR	126934	CallExpression	"fprintf ( xmlout , ""            <Balance>\\n"" )"		126354	0					
ANR	126935	Callee	fprintf		126354	0					
ANR	126936	Identifier	fprintf		126354	0					
ANR	126937	ArgumentList	xmlout		126354	1					
ANR	126938	Argument	xmlout		126354	0					
ANR	126939	Identifier	xmlout		126354	0					
ANR	126940	Argument	"""            <Balance>\\n"""		126354	1					
ANR	126941	PrimaryExpression	"""            <Balance>\\n"""		126354	0					
ANR	126942	IfStatement	if ( notes )		126354	15					
ANR	126943	Condition	notes	770:12:33265:33269	126354	0	True				
ANR	126944	Identifier	notes		126354	0					
ANR	126945	CompoundStatement		108:19:5008:5008	126354	1					
ANR	126946	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Track audio balance fixes mono track in stereo space. -->\\n"" )"	771:12:33286:33403	126354	0	True				
ANR	126947	CallExpression	"fprintf ( xmlout , ""              <!-- Track audio balance fixes mono track in stereo space. -->\\n"" )"		126354	0					
ANR	126948	Callee	fprintf		126354	0					
ANR	126949	Identifier	fprintf		126354	0					
ANR	126950	ArgumentList	xmlout		126354	1					
ANR	126951	Argument	xmlout		126354	0					
ANR	126952	Identifier	xmlout		126354	0					
ANR	126953	Argument	"""              <!-- Track audio balance fixes mono track in stereo space. -->\\n"""		126354	1					
ANR	126954	PrimaryExpression	"""              <!-- Track audio balance fixes mono track in stereo space. -->\\n"""		126354	0					
ANR	126955	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Stored as fixed-point binary 8.8 value. Decimal value is approximation. -->\\n"" )"	773:12:33417:33552	126354	1	True				
ANR	126956	CallExpression	"fprintf ( xmlout , ""              <!-- Stored as fixed-point binary 8.8 value. Decimal value is approximation. -->\\n"" )"		126354	0					
ANR	126957	Callee	fprintf		126354	0					
ANR	126958	Identifier	fprintf		126354	0					
ANR	126959	ArgumentList	xmlout		126354	1					
ANR	126960	Argument	xmlout		126354	0					
ANR	126961	Identifier	xmlout		126354	0					
ANR	126962	Argument	"""              <!-- Stored as fixed-point binary 8.8 value. Decimal value is approximation. -->\\n"""		126354	1					
ANR	126963	PrimaryExpression	"""              <!-- Stored as fixed-point binary 8.8 value. Decimal value is approximation. -->\\n"""		126354	0					
ANR	126964	ExpressionStatement	"fprintf ( xmlout , ""              <!-- 0.0 = center, -1.0 = full left, 1.0 = full right -->\\n"" )"	775:12:33566:33678	126354	2	True				
ANR	126965	CallExpression	"fprintf ( xmlout , ""              <!-- 0.0 = center, -1.0 = full left, 1.0 = full right -->\\n"" )"		126354	0					
ANR	126966	Callee	fprintf		126354	0					
ANR	126967	Identifier	fprintf		126354	0					
ANR	126968	ArgumentList	xmlout		126354	1					
ANR	126969	Argument	xmlout		126354	0					
ANR	126970	Identifier	xmlout		126354	0					
ANR	126971	Argument	"""              <!-- 0.0 = center, -1.0 = full left, 1.0 = full right -->\\n"""		126354	1					
ANR	126972	PrimaryExpression	"""              <!-- 0.0 = center, -1.0 = full left, 1.0 = full right -->\\n"""		126354	0					
ANR	126973	IfStatement	if ( raw )		126354	16					
ANR	126974	Condition	raw	778:12:33702:33704	126354	0	True				
ANR	126975	Identifier	raw		126354	0					
ANR	126976	CompoundStatement		116:17:5443:5443	126354	1					
ANR	126977	ExpressionStatement	"fprintf ( xmlout , ""              <AsHex>0x%04x</AsHex>\\n"" , track -> balance )"	779:12:33721:33793	126354	0	True				
ANR	126978	CallExpression	"fprintf ( xmlout , ""              <AsHex>0x%04x</AsHex>\\n"" , track -> balance )"		126354	0					
ANR	126979	Callee	fprintf		126354	0					
ANR	126980	Identifier	fprintf		126354	0					
ANR	126981	ArgumentList	xmlout		126354	1					
ANR	126982	Argument	xmlout		126354	0					
ANR	126983	Identifier	xmlout		126354	0					
ANR	126984	Argument	"""              <AsHex>0x%04x</AsHex>\\n"""		126354	1					
ANR	126985	PrimaryExpression	"""              <AsHex>0x%04x</AsHex>\\n"""		126354	0					
ANR	126986	Argument	track -> balance		126354	2					
ANR	126987	PtrMemberAccess	track -> balance		126354	0					
ANR	126988	Identifier	track		126354	0					
ANR	126989	Identifier	balance		126354	1					
ANR	126990	IfStatement	if ( derived )		126354	17					
ANR	126991	Condition	derived	781:12:33817:33823	126354	0	True				
ANR	126992	Identifier	derived		126354	0					
ANR	126993	CompoundStatement		119:21:5562:5562	126354	1					
ANR	126994	ExpressionStatement	"fprintf ( xmlout , ""              <AsDecimal>%6.3f</AsDecimal>\\n"" , ( double ) track -> balance / ( double ) 0x0100 )"	782:12:33840:33964	126354	0	True				
ANR	126995	CallExpression	"fprintf ( xmlout , ""              <AsDecimal>%6.3f</AsDecimal>\\n"" , ( double ) track -> balance / ( double ) 0x0100 )"		126354	0					
ANR	126996	Callee	fprintf		126354	0					
ANR	126997	Identifier	fprintf		126354	0					
ANR	126998	ArgumentList	xmlout		126354	1					
ANR	126999	Argument	xmlout		126354	0					
ANR	127000	Identifier	xmlout		126354	0					
ANR	127001	Argument	"""              <AsDecimal>%6.3f</AsDecimal>\\n"""		126354	1					
ANR	127002	PrimaryExpression	"""              <AsDecimal>%6.3f</AsDecimal>\\n"""		126354	0					
ANR	127003	Argument	( double ) track -> balance / ( double ) 0x0100		126354	2					
ANR	127004	MultiplicativeExpression	( double ) track -> balance / ( double ) 0x0100		126354	0		/			
ANR	127005	CastExpression	( double ) track -> balance		126354	0					
ANR	127006	CastTarget	double		126354	0					
ANR	127007	PtrMemberAccess	track -> balance		126354	1					
ANR	127008	Identifier	track		126354	0					
ANR	127009	Identifier	balance		126354	1					
ANR	127010	CastExpression	( double ) 0x0100		126354	1					
ANR	127011	CastTarget	double		126354	0					
ANR	127012	PrimaryExpression	0x0100		126354	1					
ANR	127013	ExpressionStatement	"fprintf ( xmlout , ""            </Balance>\\n"" )"	785:8:33984:34028	126354	18	True				
ANR	127014	CallExpression	"fprintf ( xmlout , ""            </Balance>\\n"" )"		126354	0					
ANR	127015	Callee	fprintf		126354	0					
ANR	127016	Identifier	fprintf		126354	0					
ANR	127017	ArgumentList	xmlout		126354	1					
ANR	127018	Argument	xmlout		126354	0					
ANR	127019	Identifier	xmlout		126354	0					
ANR	127020	Argument	"""            </Balance>\\n"""		126354	1					
ANR	127021	PrimaryExpression	"""            </Balance>\\n"""		126354	0					
ANR	127022	IfStatement	if ( notes )		126354	19					
ANR	127023	Condition	notes	787:12:34063:34067	126354	0	True				
ANR	127024	Identifier	notes		126354	0					
ANR	127025	CompoundStatement		125:19:5806:5806	126354	1					
ANR	127026	ExpressionStatement	"fprintf ( xmlout , ""            <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"" )"	788:12:34084:34233	126354	0	True				
ANR	127027	CallExpression	"fprintf ( xmlout , ""            <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"" )"		126354	0					
ANR	127028	Callee	fprintf		126354	0					
ANR	127029	Identifier	fprintf		126354	0					
ANR	127030	ArgumentList	xmlout		126354	1					
ANR	127031	Argument	xmlout		126354	0					
ANR	127032	Identifier	xmlout		126354	0					
ANR	127033	Argument	"""            <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"""		126354	1					
ANR	127034	PrimaryExpression	"""            <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"""		126354	0					
ANR	127035	ExpressionStatement	track -> balance = track -> balance >> 8	791:8:34253:34289	126354	20	True				
ANR	127036	AssignmentExpression	track -> balance = track -> balance >> 8		126354	0		=			
ANR	127037	PtrMemberAccess	track -> balance		126354	0					
ANR	127038	Identifier	track		126354	0					
ANR	127039	Identifier	balance		126354	1					
ANR	127040	ShiftExpression	track -> balance >> 8		126354	1		>>			
ANR	127041	PtrMemberAccess	track -> balance		126354	0					
ANR	127042	Identifier	track		126354	0					
ANR	127043	Identifier	balance		126354	1					
ANR	127044	PrimaryExpression	8		126354	1					
ANR	127045	ExpressionStatement	"fprintf ( xmlout , ""          </SoundMediaHeader>\\n"" )"	793:8:34306:34357	126354	21	True				
ANR	127046	CallExpression	"fprintf ( xmlout , ""          </SoundMediaHeader>\\n"" )"		126354	0					
ANR	127047	Callee	fprintf		126354	0					
ANR	127048	Identifier	fprintf		126354	0					
ANR	127049	ArgumentList	xmlout		126354	1					
ANR	127050	Argument	xmlout		126354	0					
ANR	127051	Identifier	xmlout		126354	0					
ANR	127052	Argument	"""          </SoundMediaHeader>\\n"""		126354	1					
ANR	127053	PrimaryExpression	"""          </SoundMediaHeader>\\n"""		126354	0					
ANR	127054	BreakStatement	break ;	794:8:34367:34372	126354	22	True				
ANR	127055	Label	case 2 :	795:4:34378:34384	126354	23	True				
ANR	127056	ExpressionStatement	"fprintf ( xmlout , ""          <HintMediaHeader BoxType=\\""hmhd\\"">\\n"" )"	796:8:34394:34460	126354	24	True				
ANR	127057	CallExpression	"fprintf ( xmlout , ""          <HintMediaHeader BoxType=\\""hmhd\\"">\\n"" )"		126354	0					
ANR	127058	Callee	fprintf		126354	0					
ANR	127059	Identifier	fprintf		126354	0					
ANR	127060	ArgumentList	xmlout		126354	1					
ANR	127061	Argument	xmlout		126354	0					
ANR	127062	Identifier	xmlout		126354	0					
ANR	127063	Argument	"""          <HintMediaHeader BoxType=\\""hmhd\\"">\\n"""		126354	1					
ANR	127064	PrimaryExpression	"""          <HintMediaHeader BoxType=\\""hmhd\\"">\\n"""		126354	0					
ANR	127065	ExpressionStatement	"fprintf ( xmlout , ""            <MaxPDU_Size>%d</MaxPDU_Size>\\n"" , track -> maxPDUsize )"	797:8:34470:34568	126354	25	True				
ANR	127066	CallExpression	"fprintf ( xmlout , ""            <MaxPDU_Size>%d</MaxPDU_Size>\\n"" , track -> maxPDUsize )"		126354	0					
ANR	127067	Callee	fprintf		126354	0					
ANR	127068	Identifier	fprintf		126354	0					
ANR	127069	ArgumentList	xmlout		126354	1					
ANR	127070	Argument	xmlout		126354	0					
ANR	127071	Identifier	xmlout		126354	0					
ANR	127072	Argument	"""            <MaxPDU_Size>%d</MaxPDU_Size>\\n"""		126354	1					
ANR	127073	PrimaryExpression	"""            <MaxPDU_Size>%d</MaxPDU_Size>\\n"""		126354	0					
ANR	127074	Argument	track -> maxPDUsize		126354	2					
ANR	127075	PtrMemberAccess	track -> maxPDUsize		126354	0					
ANR	127076	Identifier	track		126354	0					
ANR	127077	Identifier	maxPDUsize		126354	1					
ANR	127078	IfStatement	if ( notes )		126354	26					
ANR	127079	Condition	notes	799:12:34582:34586	126354	0	True				
ANR	127080	Identifier	notes		126354	0					
ANR	127081	CompoundStatement		137:19:6325:6325	126354	1					
ANR	127082	ExpressionStatement	"fprintf ( xmlout , ""            <!-- Size in bytes of largest PDU in this hint stream. -->\\n"" )"	800:12:34603:34714	126354	0	True				
ANR	127083	CallExpression	"fprintf ( xmlout , ""            <!-- Size in bytes of largest PDU in this hint stream. -->\\n"" )"		126354	0					
ANR	127084	Callee	fprintf		126354	0					
ANR	127085	Identifier	fprintf		126354	0					
ANR	127086	ArgumentList	xmlout		126354	1					
ANR	127087	Argument	xmlout		126354	0					
ANR	127088	Identifier	xmlout		126354	0					
ANR	127089	Argument	"""            <!-- Size in bytes of largest PDU in this hint stream. -->\\n"""		126354	1					
ANR	127090	PrimaryExpression	"""            <!-- Size in bytes of largest PDU in this hint stream. -->\\n"""		126354	0					
ANR	127091	ExpressionStatement	"fprintf ( xmlout , ""            <AvgPDU_Size>%d</AvgPDU_Size>\\n"" , track -> avgPDUsize )"	803:8:34734:34832	126354	27	True				
ANR	127092	CallExpression	"fprintf ( xmlout , ""            <AvgPDU_Size>%d</AvgPDU_Size>\\n"" , track -> avgPDUsize )"		126354	0					
ANR	127093	Callee	fprintf		126354	0					
ANR	127094	Identifier	fprintf		126354	0					
ANR	127095	ArgumentList	xmlout		126354	1					
ANR	127096	Argument	xmlout		126354	0					
ANR	127097	Identifier	xmlout		126354	0					
ANR	127098	Argument	"""            <AvgPDU_Size>%d</AvgPDU_Size>\\n"""		126354	1					
ANR	127099	PrimaryExpression	"""            <AvgPDU_Size>%d</AvgPDU_Size>\\n"""		126354	0					
ANR	127100	Argument	track -> avgPDUsize		126354	2					
ANR	127101	PtrMemberAccess	track -> avgPDUsize		126354	0					
ANR	127102	Identifier	track		126354	0					
ANR	127103	Identifier	avgPDUsize		126354	1					
ANR	127104	IfStatement	if ( notes )		126354	28					
ANR	127105	Condition	notes	805:12:34846:34850	126354	0	True				
ANR	127106	Identifier	notes		126354	0					
ANR	127107	CompoundStatement		143:19:6589:6589	126354	1					
ANR	127108	ExpressionStatement	"fprintf ( xmlout , ""            <!-- Average size in bytes of a PDU over the entire presentation. -->\\n"" )"	806:12:34867:34989	126354	0	True				
ANR	127109	CallExpression	"fprintf ( xmlout , ""            <!-- Average size in bytes of a PDU over the entire presentation. -->\\n"" )"		126354	0					
ANR	127110	Callee	fprintf		126354	0					
ANR	127111	Identifier	fprintf		126354	0					
ANR	127112	ArgumentList	xmlout		126354	1					
ANR	127113	Argument	xmlout		126354	0					
ANR	127114	Identifier	xmlout		126354	0					
ANR	127115	Argument	"""            <!-- Average size in bytes of a PDU over the entire presentation. -->\\n"""		126354	1					
ANR	127116	PrimaryExpression	"""            <!-- Average size in bytes of a PDU over the entire presentation. -->\\n"""		126354	0					
ANR	127117	ExpressionStatement	"fprintf ( xmlout , ""            <MaxBitRate>%d</MaxBitRate>\\n"" , track -> maxbitrate )"	809:8:35009:35105	126354	29	True				
ANR	127118	CallExpression	"fprintf ( xmlout , ""            <MaxBitRate>%d</MaxBitRate>\\n"" , track -> maxbitrate )"		126354	0					
ANR	127119	Callee	fprintf		126354	0					
ANR	127120	Identifier	fprintf		126354	0					
ANR	127121	ArgumentList	xmlout		126354	1					
ANR	127122	Argument	xmlout		126354	0					
ANR	127123	Identifier	xmlout		126354	0					
ANR	127124	Argument	"""            <MaxBitRate>%d</MaxBitRate>\\n"""		126354	1					
ANR	127125	PrimaryExpression	"""            <MaxBitRate>%d</MaxBitRate>\\n"""		126354	0					
ANR	127126	Argument	track -> maxbitrate		126354	2					
ANR	127127	PtrMemberAccess	track -> maxbitrate		126354	0					
ANR	127128	Identifier	track		126354	0					
ANR	127129	Identifier	maxbitrate		126354	1					
ANR	127130	IfStatement	if ( notes )		126354	30					
ANR	127131	Condition	notes	811:12:35119:35123	126354	0	True				
ANR	127132	Identifier	notes		126354	0					
ANR	127133	CompoundStatement		149:19:6862:6862	126354	1					
ANR	127134	ExpressionStatement	"fprintf ( xmlout , ""            <!-- Maximum rate in bits per second over any window of 1 second. -->\\n"" )"	812:12:35140:35262	126354	0	True				
ANR	127135	CallExpression	"fprintf ( xmlout , ""            <!-- Maximum rate in bits per second over any window of 1 second. -->\\n"" )"		126354	0					
ANR	127136	Callee	fprintf		126354	0					
ANR	127137	Identifier	fprintf		126354	0					
ANR	127138	ArgumentList	xmlout		126354	1					
ANR	127139	Argument	xmlout		126354	0					
ANR	127140	Identifier	xmlout		126354	0					
ANR	127141	Argument	"""            <!-- Maximum rate in bits per second over any window of 1 second. -->\\n"""		126354	1					
ANR	127142	PrimaryExpression	"""            <!-- Maximum rate in bits per second over any window of 1 second. -->\\n"""		126354	0					
ANR	127143	ExpressionStatement	"fprintf ( xmlout , ""            <AvgBitRate>%d</AvgBitRate>\\n"" , track -> avgbitrate )"	815:8:35282:35378	126354	31	True				
ANR	127144	CallExpression	"fprintf ( xmlout , ""            <AvgBitRate>%d</AvgBitRate>\\n"" , track -> avgbitrate )"		126354	0					
ANR	127145	Callee	fprintf		126354	0					
ANR	127146	Identifier	fprintf		126354	0					
ANR	127147	ArgumentList	xmlout		126354	1					
ANR	127148	Argument	xmlout		126354	0					
ANR	127149	Identifier	xmlout		126354	0					
ANR	127150	Argument	"""            <AvgBitRate>%d</AvgBitRate>\\n"""		126354	1					
ANR	127151	PrimaryExpression	"""            <AvgBitRate>%d</AvgBitRate>\\n"""		126354	0					
ANR	127152	Argument	track -> avgbitrate		126354	2					
ANR	127153	PtrMemberAccess	track -> avgbitrate		126354	0					
ANR	127154	Identifier	track		126354	0					
ANR	127155	Identifier	avgbitrate		126354	1					
ANR	127156	IfStatement	if ( notes )		126354	32					
ANR	127157	Condition	notes	817:12:35392:35396	126354	0	True				
ANR	127158	Identifier	notes		126354	0					
ANR	127159	CompoundStatement		155:19:7135:7135	126354	1					
ANR	127160	ExpressionStatement	"fprintf ( xmlout , ""            <!-- Averate rate in bits per second over the entire presentation. -->\\n"" )"	818:12:35413:35536	126354	0	True				
ANR	127161	CallExpression	"fprintf ( xmlout , ""            <!-- Averate rate in bits per second over the entire presentation. -->\\n"" )"		126354	0					
ANR	127162	Callee	fprintf		126354	0					
ANR	127163	Identifier	fprintf		126354	0					
ANR	127164	ArgumentList	xmlout		126354	1					
ANR	127165	Argument	xmlout		126354	0					
ANR	127166	Identifier	xmlout		126354	0					
ANR	127167	Argument	"""            <!-- Averate rate in bits per second over the entire presentation. -->\\n"""		126354	1					
ANR	127168	PrimaryExpression	"""            <!-- Averate rate in bits per second over the entire presentation. -->\\n"""		126354	0					
ANR	127169	ExpressionStatement	"fprintf ( xmlout , ""            <SlidingAvgBit>%d</SlidingAvgBitRate>\\n"" , track -> slidingavgbitrate )"	821:8:35556:35669	126354	33	True				
ANR	127170	CallExpression	"fprintf ( xmlout , ""            <SlidingAvgBit>%d</SlidingAvgBitRate>\\n"" , track -> slidingavgbitrate )"		126354	0					
ANR	127171	Callee	fprintf		126354	0					
ANR	127172	Identifier	fprintf		126354	0					
ANR	127173	ArgumentList	xmlout		126354	1					
ANR	127174	Argument	xmlout		126354	0					
ANR	127175	Identifier	xmlout		126354	0					
ANR	127176	Argument	"""            <SlidingAvgBit>%d</SlidingAvgBitRate>\\n"""		126354	1					
ANR	127177	PrimaryExpression	"""            <SlidingAvgBit>%d</SlidingAvgBitRate>\\n"""		126354	0					
ANR	127178	Argument	track -> slidingavgbitrate		126354	2					
ANR	127179	PtrMemberAccess	track -> slidingavgbitrate		126354	0					
ANR	127180	Identifier	track		126354	0					
ANR	127181	Identifier	slidingavgbitrate		126354	1					
ANR	127182	IfStatement	if ( notes )		126354	34					
ANR	127183	Condition	notes	823:12:35683:35687	126354	0	True				
ANR	127184	Identifier	notes		126354	0					
ANR	127185	CompoundStatement		161:19:7426:7426	126354	1					
ANR	127186	ExpressionStatement	"fprintf ( xmlout , ""            <!-- Maximum rate in bits per second over any window of one minute. -->\\n"" )"	824:12:35704:35828	126354	0	True				
ANR	127187	CallExpression	"fprintf ( xmlout , ""            <!-- Maximum rate in bits per second over any window of one minute. -->\\n"" )"		126354	0					
ANR	127188	Callee	fprintf		126354	0					
ANR	127189	Identifier	fprintf		126354	0					
ANR	127190	ArgumentList	xmlout		126354	1					
ANR	127191	Argument	xmlout		126354	0					
ANR	127192	Identifier	xmlout		126354	0					
ANR	127193	Argument	"""            <!-- Maximum rate in bits per second over any window of one minute. -->\\n"""		126354	1					
ANR	127194	PrimaryExpression	"""            <!-- Maximum rate in bits per second over any window of one minute. -->\\n"""		126354	0					
ANR	127195	ExpressionStatement	"fprintf ( xmlout , ""          </HintMediaHeader>\\n"" )"	827:8:35848:35898	126354	35	True				
ANR	127196	CallExpression	"fprintf ( xmlout , ""          </HintMediaHeader>\\n"" )"		126354	0					
ANR	127197	Callee	fprintf		126354	0					
ANR	127198	Identifier	fprintf		126354	0					
ANR	127199	ArgumentList	xmlout		126354	1					
ANR	127200	Argument	xmlout		126354	0					
ANR	127201	Identifier	xmlout		126354	0					
ANR	127202	Argument	"""          </HintMediaHeader>\\n"""		126354	1					
ANR	127203	PrimaryExpression	"""          </HintMediaHeader>\\n"""		126354	0					
ANR	127204	BreakStatement	break ;	828:8:35908:35913	126354	36	True				
ANR	127205	ExpressionStatement	"fprintf ( xmlout , ""          <DataInfo BoxType=\\""dinf\\"">\\n"" )"	830:4:35925:35986	126354	29	True				
ANR	127206	CallExpression	"fprintf ( xmlout , ""          <DataInfo BoxType=\\""dinf\\"">\\n"" )"		126354	0					
ANR	127207	Callee	fprintf		126354	0					
ANR	127208	Identifier	fprintf		126354	0					
ANR	127209	ArgumentList	xmlout		126354	1					
ANR	127210	Argument	xmlout		126354	0					
ANR	127211	Identifier	xmlout		126354	0					
ANR	127212	Argument	"""          <DataInfo BoxType=\\""dinf\\"">\\n"""		126354	1					
ANR	127213	PrimaryExpression	"""          <DataInfo BoxType=\\""dinf\\"">\\n"""		126354	0					
ANR	127214	ExpressionStatement	"fprintf ( xmlout , ""            <DataReference BoxType=\\""dref\\""  URL_Count=\\""%d\\"" URN_Count=\\""%d\\"">\\n"" , track -> num_url , track -> num_urn )"	831:4:35992:36148	126354	30	True				
ANR	127215	CallExpression	"fprintf ( xmlout , ""            <DataReference BoxType=\\""dref\\""  URL_Count=\\""%d\\"" URN_Count=\\""%d\\"">\\n"" , track -> num_url , track -> num_urn )"		126354	0					
ANR	127216	Callee	fprintf		126354	0					
ANR	127217	Identifier	fprintf		126354	0					
ANR	127218	ArgumentList	xmlout		126354	1					
ANR	127219	Argument	xmlout		126354	0					
ANR	127220	Identifier	xmlout		126354	0					
ANR	127221	Argument	"""            <DataReference BoxType=\\""dref\\""  URL_Count=\\""%d\\"" URN_Count=\\""%d\\"">\\n"""		126354	1					
ANR	127222	PrimaryExpression	"""            <DataReference BoxType=\\""dref\\""  URL_Count=\\""%d\\"" URN_Count=\\""%d\\"">\\n"""		126354	0					
ANR	127223	Argument	track -> num_url		126354	2					
ANR	127224	PtrMemberAccess	track -> num_url		126354	0					
ANR	127225	Identifier	track		126354	0					
ANR	127226	Identifier	num_url		126354	1					
ANR	127227	Argument	track -> num_urn		126354	3					
ANR	127228	PtrMemberAccess	track -> num_urn		126354	0					
ANR	127229	Identifier	track		126354	0					
ANR	127230	Identifier	num_urn		126354	1					
ANR	127231	IfStatement	if ( notes )		126354	31					
ANR	127232	Condition	notes	836:8:36375:36379	126354	0	True				
ANR	127233	Identifier	notes		126354	0					
ANR	127234	CompoundStatement		174:15:8118:8118	126354	1					
ANR	127235	ExpressionStatement	"fprintf ( xmlout , ""              <!-- No entries here mean that file is self-contained, as required by Simple Profile. -->\\n"" )"	837:8:36392:36532	126354	0	True				
ANR	127236	CallExpression	"fprintf ( xmlout , ""              <!-- No entries here mean that file is self-contained, as required by Simple Profile. -->\\n"" )"		126354	0					
ANR	127237	Callee	fprintf		126354	0					
ANR	127238	Identifier	fprintf		126354	0					
ANR	127239	ArgumentList	xmlout		126354	1					
ANR	127240	Argument	xmlout		126354	0					
ANR	127241	Identifier	xmlout		126354	0					
ANR	127242	Argument	"""              <!-- No entries here mean that file is self-contained, as required by Simple Profile. -->\\n"""		126354	1					
ANR	127243	PrimaryExpression	"""              <!-- No entries here mean that file is self-contained, as required by Simple Profile. -->\\n"""		126354	0					
ANR	127244	ForStatement	for ( k = 0 ; k < track -> num_url ; k ++ )		126354	32					
ANR	127245	ForInit	k = 0 ;	840:9:36549:36554	126354	0	True				
ANR	127246	AssignmentExpression	k = 0		126354	0		=			
ANR	127247	Identifier	k		126354	0					
ANR	127248	PrimaryExpression	0		126354	1					
ANR	127249	Condition	k < track -> num_url	840:16:36556:36573	126354	1	True				
ANR	127250	RelationalExpression	k < track -> num_url		126354	0		<			
ANR	127251	Identifier	k		126354	0					
ANR	127252	PtrMemberAccess	track -> num_url		126354	1					
ANR	127253	Identifier	track		126354	0					
ANR	127254	Identifier	num_url		126354	1					
ANR	127255	PostIncDecOperationExpression	k ++	840:36:36576:36578	126354	2	True				
ANR	127256	Identifier	k		126354	0					
ANR	127257	IncDec	++		126354	1					
ANR	127258	CompoundStatement		178:41:8317:8317	126354	3					
ANR	127259	ExpressionStatement	"fprintf ( xmlout , ""            <DataEntryUrlBox BoxType=\\""url[space]\\"">\\n"" )"	841:8:36591:36680	126354	0	True				
ANR	127260	CallExpression	"fprintf ( xmlout , ""            <DataEntryUrlBox BoxType=\\""url[space]\\"">\\n"" )"		126354	0					
ANR	127261	Callee	fprintf		126354	0					
ANR	127262	Identifier	fprintf		126354	0					
ANR	127263	ArgumentList	xmlout		126354	1					
ANR	127264	Argument	xmlout		126354	0					
ANR	127265	Identifier	xmlout		126354	0					
ANR	127266	Argument	"""            <DataEntryUrlBox BoxType=\\""url[space]\\"">\\n"""		126354	1					
ANR	127267	PrimaryExpression	"""            <DataEntryUrlBox BoxType=\\""url[space]\\"">\\n"""		126354	0					
ANR	127268	IfStatement	if ( notes )		126354	1					
ANR	127269	Condition	notes	843:12:36724:36728	126354	0	True				
ANR	127270	Identifier	notes		126354	0					
ANR	127271	CompoundStatement		181:19:8467:8467	126354	1					
ANR	127272	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Only the first 16 bytes of URL location are recorded in mj2_to_metadata data structure. -->\\n"" )"	844:12:36745:36896	126354	0	True				
ANR	127273	CallExpression	"fprintf ( xmlout , ""              <!-- Only the first 16 bytes of URL location are recorded in mj2_to_metadata data structure. -->\\n"" )"		126354	0					
ANR	127274	Callee	fprintf		126354	0					
ANR	127275	Identifier	fprintf		126354	0					
ANR	127276	ArgumentList	xmlout		126354	1					
ANR	127277	Argument	xmlout		126354	0					
ANR	127278	Identifier	xmlout		126354	0					
ANR	127279	Argument	"""              <!-- Only the first 16 bytes of URL location are recorded in mj2_to_metadata data structure. -->\\n"""		126354	1					
ANR	127280	PrimaryExpression	"""              <!-- Only the first 16 bytes of URL location are recorded in mj2_to_metadata data structure. -->\\n"""		126354	0					
ANR	127281	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		126354	2					
ANR	127282	ForInit	i = 0 ;	847:13:36921:36926	126354	0	True				
ANR	127283	AssignmentExpression	i = 0		126354	0		=			
ANR	127284	Identifier	i		126354	0					
ANR	127285	PrimaryExpression	0		126354	1					
ANR	127286	Condition	i < 4	847:20:36928:36932	126354	1	True				
ANR	127287	RelationalExpression	i < 4		126354	0		<			
ANR	127288	Identifier	i		126354	0					
ANR	127289	PrimaryExpression	4		126354	1					
ANR	127290	PostIncDecOperationExpression	i ++	847:27:36935:36937	126354	2	True				
ANR	127291	Identifier	i		126354	0					
ANR	127292	IncDec	++		126354	1					
ANR	127293	CompoundStatement		185:32:8676:8676	126354	3					
ANR	127294	ExpressionStatement	"uint_to_chars ( track -> url [ track -> num_url ] . location [ i ] , buf )"	848:12:36954:37012	126354	0	True				
ANR	127295	CallExpression	"uint_to_chars ( track -> url [ track -> num_url ] . location [ i ] , buf )"		126354	0					
ANR	127296	Callee	uint_to_chars		126354	0					
ANR	127297	Identifier	uint_to_chars		126354	0					
ANR	127298	ArgumentList	track -> url [ track -> num_url ] . location [ i ]		126354	1					
ANR	127299	Argument	track -> url [ track -> num_url ] . location [ i ]		126354	0					
ANR	127300	ArrayIndexing	track -> url [ track -> num_url ] . location [ i ]		126354	0					
ANR	127301	MemberAccess	track -> url [ track -> num_url ] . location		126354	0					
ANR	127302	ArrayIndexing	track -> url [ track -> num_url ]		126354	0					
ANR	127303	PtrMemberAccess	track -> url		126354	0					
ANR	127304	Identifier	track		126354	0					
ANR	127305	Identifier	url		126354	1					
ANR	127306	PtrMemberAccess	track -> num_url		126354	1					
ANR	127307	Identifier	track		126354	0					
ANR	127308	Identifier	num_url		126354	1					
ANR	127309	Identifier	location		126354	1					
ANR	127310	Identifier	i		126354	1					
ANR	127311	Argument	buf		126354	1					
ANR	127312	Identifier	buf		126354	0					
ANR	127313	ExpressionStatement	"fprintf ( xmlout , ""              <Location>%s</Location>\\n"" , buf )"	849:12:37026:37090	126354	1	True				
ANR	127314	CallExpression	"fprintf ( xmlout , ""              <Location>%s</Location>\\n"" , buf )"		126354	0					
ANR	127315	Callee	fprintf		126354	0					
ANR	127316	Identifier	fprintf		126354	0					
ANR	127317	ArgumentList	xmlout		126354	1					
ANR	127318	Argument	xmlout		126354	0					
ANR	127319	Identifier	xmlout		126354	0					
ANR	127320	Argument	"""              <Location>%s</Location>\\n"""		126354	1					
ANR	127321	PrimaryExpression	"""              <Location>%s</Location>\\n"""		126354	0					
ANR	127322	Argument	buf		126354	2					
ANR	127323	Identifier	buf		126354	0					
ANR	127324	ExpressionStatement	"fprintf ( xmlout , ""            </DataEntryUrlBox>\\n"" )"	851:8:37110:37177	126354	3	True				
ANR	127325	CallExpression	"fprintf ( xmlout , ""            </DataEntryUrlBox>\\n"" )"		126354	0					
ANR	127326	Callee	fprintf		126354	0					
ANR	127327	Identifier	fprintf		126354	0					
ANR	127328	ArgumentList	xmlout		126354	1					
ANR	127329	Argument	xmlout		126354	0					
ANR	127330	Identifier	xmlout		126354	0					
ANR	127331	Argument	"""            </DataEntryUrlBox>\\n"""		126354	1					
ANR	127332	PrimaryExpression	"""            </DataEntryUrlBox>\\n"""		126354	0					
ANR	127333	ForStatement	for ( k = 0 ; k < track -> num_urn ; k ++ )		126354	33					
ANR	127334	ForInit	k = 0 ;	854:9:37224:37229	126354	0	True				
ANR	127335	AssignmentExpression	k = 0		126354	0		=			
ANR	127336	Identifier	k		126354	0					
ANR	127337	PrimaryExpression	0		126354	1					
ANR	127338	Condition	k < track -> num_urn	854:16:37231:37248	126354	1	True				
ANR	127339	RelationalExpression	k < track -> num_urn		126354	0		<			
ANR	127340	Identifier	k		126354	0					
ANR	127341	PtrMemberAccess	track -> num_urn		126354	1					
ANR	127342	Identifier	track		126354	0					
ANR	127343	Identifier	num_urn		126354	1					
ANR	127344	PostIncDecOperationExpression	k ++	854:36:37251:37253	126354	2	True				
ANR	127345	Identifier	k		126354	0					
ANR	127346	IncDec	++		126354	1					
ANR	127347	CompoundStatement		192:41:8992:8992	126354	3					
ANR	127348	ExpressionStatement	"fprintf ( xmlout , ""            <DataEntryUrnBox BoxType=\\""urn[space]\\"">\\n"" )"	855:8:37266:37355	126354	0	True				
ANR	127349	CallExpression	"fprintf ( xmlout , ""            <DataEntryUrnBox BoxType=\\""urn[space]\\"">\\n"" )"		126354	0					
ANR	127350	Callee	fprintf		126354	0					
ANR	127351	Identifier	fprintf		126354	0					
ANR	127352	ArgumentList	xmlout		126354	1					
ANR	127353	Argument	xmlout		126354	0					
ANR	127354	Identifier	xmlout		126354	0					
ANR	127355	Argument	"""            <DataEntryUrnBox BoxType=\\""urn[space]\\"">\\n"""		126354	1					
ANR	127356	PrimaryExpression	"""            <DataEntryUrnBox BoxType=\\""urn[space]\\"">\\n"""		126354	0					
ANR	127357	IfStatement	if ( notes )		126354	1					
ANR	127358	Condition	notes	858:12:37480:37484	126354	0	True				
ANR	127359	Identifier	notes		126354	0					
ANR	127360	CompoundStatement		196:19:9223:9223	126354	1					
ANR	127361	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Only the first 16 bytes each of URN name and optional location are recorded in mj2_to_metadata data structure. -->\\n"" )"	859:12:37501:37675	126354	0	True				
ANR	127362	CallExpression	"fprintf ( xmlout , ""              <!-- Only the first 16 bytes each of URN name and optional location are recorded in mj2_to_metadata data structure. -->\\n"" )"		126354	0					
ANR	127363	Callee	fprintf		126354	0					
ANR	127364	Identifier	fprintf		126354	0					
ANR	127365	ArgumentList	xmlout		126354	1					
ANR	127366	Argument	xmlout		126354	0					
ANR	127367	Identifier	xmlout		126354	0					
ANR	127368	Argument	"""              <!-- Only the first 16 bytes each of URN name and optional location are recorded in mj2_to_metadata data structure. -->\\n"""		126354	1					
ANR	127369	PrimaryExpression	"""              <!-- Only the first 16 bytes each of URN name and optional location are recorded in mj2_to_metadata data structure. -->\\n"""		126354	0					
ANR	127370	ExpressionStatement	"fprintf ( xmlout , ""              <Name>"" )"	862:8:37695:37735	126354	2	True				
ANR	127371	CallExpression	"fprintf ( xmlout , ""              <Name>"" )"		126354	0					
ANR	127372	Callee	fprintf		126354	0					
ANR	127373	Identifier	fprintf		126354	0					
ANR	127374	ArgumentList	xmlout		126354	1					
ANR	127375	Argument	xmlout		126354	0					
ANR	127376	Identifier	xmlout		126354	0					
ANR	127377	Argument	"""              <Name>"""		126354	1					
ANR	127378	PrimaryExpression	"""              <Name>"""		126354	0					
ANR	127379	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		126354	3					
ANR	127380	ForInit	i = 0 ;	863:13:37750:37755	126354	0	True				
ANR	127381	AssignmentExpression	i = 0		126354	0		=			
ANR	127382	Identifier	i		126354	0					
ANR	127383	PrimaryExpression	0		126354	1					
ANR	127384	Condition	i < 4	863:20:37757:37761	126354	1	True				
ANR	127385	RelationalExpression	i < 4		126354	0		<			
ANR	127386	Identifier	i		126354	0					
ANR	127387	PrimaryExpression	4		126354	1					
ANR	127388	PostIncDecOperationExpression	i ++	863:27:37764:37766	126354	2	True				
ANR	127389	Identifier	i		126354	0					
ANR	127390	IncDec	++		126354	1					
ANR	127391	CompoundStatement		201:32:9505:9505	126354	3					
ANR	127392	ExpressionStatement	"uint_to_chars ( track -> urn [ track -> num_urn ] . name [ i ] , buf )"	864:12:37783:37837	126354	0	True				
ANR	127393	CallExpression	"uint_to_chars ( track -> urn [ track -> num_urn ] . name [ i ] , buf )"		126354	0					
ANR	127394	Callee	uint_to_chars		126354	0					
ANR	127395	Identifier	uint_to_chars		126354	0					
ANR	127396	ArgumentList	track -> urn [ track -> num_urn ] . name [ i ]		126354	1					
ANR	127397	Argument	track -> urn [ track -> num_urn ] . name [ i ]		126354	0					
ANR	127398	ArrayIndexing	track -> urn [ track -> num_urn ] . name [ i ]		126354	0					
ANR	127399	MemberAccess	track -> urn [ track -> num_urn ] . name		126354	0					
ANR	127400	ArrayIndexing	track -> urn [ track -> num_urn ]		126354	0					
ANR	127401	PtrMemberAccess	track -> urn		126354	0					
ANR	127402	Identifier	track		126354	0					
ANR	127403	Identifier	urn		126354	1					
ANR	127404	PtrMemberAccess	track -> num_urn		126354	1					
ANR	127405	Identifier	track		126354	0					
ANR	127406	Identifier	num_urn		126354	1					
ANR	127407	Identifier	name		126354	1					
ANR	127408	Identifier	i		126354	1					
ANR	127409	Argument	buf		126354	1					
ANR	127410	Identifier	buf		126354	0					
ANR	127411	ExpressionStatement	"fprintf ( xmlout , ""%s"" , buf )"	865:12:37851:37877	126354	1	True				
ANR	127412	CallExpression	"fprintf ( xmlout , ""%s"" , buf )"		126354	0					
ANR	127413	Callee	fprintf		126354	0					
ANR	127414	Identifier	fprintf		126354	0					
ANR	127415	ArgumentList	xmlout		126354	1					
ANR	127416	Argument	xmlout		126354	0					
ANR	127417	Identifier	xmlout		126354	0					
ANR	127418	Argument	"""%s"""		126354	1					
ANR	127419	PrimaryExpression	"""%s"""		126354	0					
ANR	127420	Argument	buf		126354	2					
ANR	127421	Identifier	buf		126354	0					
ANR	127422	ExpressionStatement	"fprintf ( xmlout , ""</Name>\\n"" )"	867:8:37897:37926	126354	4	True				
ANR	127423	CallExpression	"fprintf ( xmlout , ""</Name>\\n"" )"		126354	0					
ANR	127424	Callee	fprintf		126354	0					
ANR	127425	Identifier	fprintf		126354	0					
ANR	127426	ArgumentList	xmlout		126354	1					
ANR	127427	Argument	xmlout		126354	0					
ANR	127428	Identifier	xmlout		126354	0					
ANR	127429	Argument	"""</Name>\\n"""		126354	1					
ANR	127430	PrimaryExpression	"""</Name>\\n"""		126354	0					
ANR	127431	ExpressionStatement	"fprintf ( xmlout , ""              <Location>"" )"	868:8:37936:37980	126354	5	True				
ANR	127432	CallExpression	"fprintf ( xmlout , ""              <Location>"" )"		126354	0					
ANR	127433	Callee	fprintf		126354	0					
ANR	127434	Identifier	fprintf		126354	0					
ANR	127435	ArgumentList	xmlout		126354	1					
ANR	127436	Argument	xmlout		126354	0					
ANR	127437	Identifier	xmlout		126354	0					
ANR	127438	Argument	"""              <Location>"""		126354	1					
ANR	127439	PrimaryExpression	"""              <Location>"""		126354	0					
ANR	127440	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		126354	6					
ANR	127441	ForInit	i = 0 ;	869:13:37995:38000	126354	0	True				
ANR	127442	AssignmentExpression	i = 0		126354	0		=			
ANR	127443	Identifier	i		126354	0					
ANR	127444	PrimaryExpression	0		126354	1					
ANR	127445	Condition	i < 4	869:20:38002:38006	126354	1	True				
ANR	127446	RelationalExpression	i < 4		126354	0		<			
ANR	127447	Identifier	i		126354	0					
ANR	127448	PrimaryExpression	4		126354	1					
ANR	127449	PostIncDecOperationExpression	i ++	869:27:38009:38011	126354	2	True				
ANR	127450	Identifier	i		126354	0					
ANR	127451	IncDec	++		126354	1					
ANR	127452	CompoundStatement		207:32:9750:9750	126354	3					
ANR	127453	ExpressionStatement	"uint_to_chars ( track -> urn [ track -> num_urn ] . location [ i ] , buf )"	870:12:38028:38086	126354	0	True				
ANR	127454	CallExpression	"uint_to_chars ( track -> urn [ track -> num_urn ] . location [ i ] , buf )"		126354	0					
ANR	127455	Callee	uint_to_chars		126354	0					
ANR	127456	Identifier	uint_to_chars		126354	0					
ANR	127457	ArgumentList	track -> urn [ track -> num_urn ] . location [ i ]		126354	1					
ANR	127458	Argument	track -> urn [ track -> num_urn ] . location [ i ]		126354	0					
ANR	127459	ArrayIndexing	track -> urn [ track -> num_urn ] . location [ i ]		126354	0					
ANR	127460	MemberAccess	track -> urn [ track -> num_urn ] . location		126354	0					
ANR	127461	ArrayIndexing	track -> urn [ track -> num_urn ]		126354	0					
ANR	127462	PtrMemberAccess	track -> urn		126354	0					
ANR	127463	Identifier	track		126354	0					
ANR	127464	Identifier	urn		126354	1					
ANR	127465	PtrMemberAccess	track -> num_urn		126354	1					
ANR	127466	Identifier	track		126354	0					
ANR	127467	Identifier	num_urn		126354	1					
ANR	127468	Identifier	location		126354	1					
ANR	127469	Identifier	i		126354	1					
ANR	127470	Argument	buf		126354	1					
ANR	127471	Identifier	buf		126354	0					
ANR	127472	ExpressionStatement	"fprintf ( xmlout , ""%s"" , buf )"	871:12:38100:38126	126354	1	True				
ANR	127473	CallExpression	"fprintf ( xmlout , ""%s"" , buf )"		126354	0					
ANR	127474	Callee	fprintf		126354	0					
ANR	127475	Identifier	fprintf		126354	0					
ANR	127476	ArgumentList	xmlout		126354	1					
ANR	127477	Argument	xmlout		126354	0					
ANR	127478	Identifier	xmlout		126354	0					
ANR	127479	Argument	"""%s"""		126354	1					
ANR	127480	PrimaryExpression	"""%s"""		126354	0					
ANR	127481	Argument	buf		126354	2					
ANR	127482	Identifier	buf		126354	0					
ANR	127483	ExpressionStatement	"fprintf ( xmlout , ""</Location>\\n"" )"	873:8:38146:38179	126354	7	True				
ANR	127484	CallExpression	"fprintf ( xmlout , ""</Location>\\n"" )"		126354	0					
ANR	127485	Callee	fprintf		126354	0					
ANR	127486	Identifier	fprintf		126354	0					
ANR	127487	ArgumentList	xmlout		126354	1					
ANR	127488	Argument	xmlout		126354	0					
ANR	127489	Identifier	xmlout		126354	0					
ANR	127490	Argument	"""</Location>\\n"""		126354	1					
ANR	127491	PrimaryExpression	"""</Location>\\n"""		126354	0					
ANR	127492	ExpressionStatement	"fprintf ( xmlout , ""            </DataEntryUrnBox>\\n"" )"	874:8:38189:38241	126354	8	True				
ANR	127493	CallExpression	"fprintf ( xmlout , ""            </DataEntryUrnBox>\\n"" )"		126354	0					
ANR	127494	Callee	fprintf		126354	0					
ANR	127495	Identifier	fprintf		126354	0					
ANR	127496	ArgumentList	xmlout		126354	1					
ANR	127497	Argument	xmlout		126354	0					
ANR	127498	Identifier	xmlout		126354	0					
ANR	127499	Argument	"""            </DataEntryUrnBox>\\n"""		126354	1					
ANR	127500	PrimaryExpression	"""            </DataEntryUrnBox>\\n"""		126354	0					
ANR	127501	ExpressionStatement	"fprintf ( xmlout , ""            </DataReference>\\n"" )"	876:4:38253:38305	126354	34	True				
ANR	127502	CallExpression	"fprintf ( xmlout , ""            </DataReference>\\n"" )"		126354	0					
ANR	127503	Callee	fprintf		126354	0					
ANR	127504	Identifier	fprintf		126354	0					
ANR	127505	ArgumentList	xmlout		126354	1					
ANR	127506	Argument	xmlout		126354	0					
ANR	127507	Identifier	xmlout		126354	0					
ANR	127508	Argument	"""            </DataReference>\\n"""		126354	1					
ANR	127509	PrimaryExpression	"""            </DataReference>\\n"""		126354	0					
ANR	127510	ExpressionStatement	"fprintf ( xmlout , ""          </DataInfo>\\n"" )"	877:4:38311:38356	126354	35	True				
ANR	127511	CallExpression	"fprintf ( xmlout , ""          </DataInfo>\\n"" )"		126354	0					
ANR	127512	Callee	fprintf		126354	0					
ANR	127513	Identifier	fprintf		126354	0					
ANR	127514	ArgumentList	xmlout		126354	1					
ANR	127515	Argument	xmlout		126354	0					
ANR	127516	Identifier	xmlout		126354	0					
ANR	127517	Argument	"""          </DataInfo>\\n"""		126354	1					
ANR	127518	PrimaryExpression	"""          </DataInfo>\\n"""		126354	0					
ANR	127519	ExpressionStatement	"xml_write_stbl ( file , xmlout , track , tnum )"	879:4:38363:38404	126354	36	True				
ANR	127520	CallExpression	"xml_write_stbl ( file , xmlout , track , tnum )"		126354	0					
ANR	127521	Callee	xml_write_stbl		126354	0					
ANR	127522	Identifier	xml_write_stbl		126354	0					
ANR	127523	ArgumentList	file		126354	1					
ANR	127524	Argument	file		126354	0					
ANR	127525	Identifier	file		126354	0					
ANR	127526	Argument	xmlout		126354	1					
ANR	127527	Identifier	xmlout		126354	0					
ANR	127528	Argument	track		126354	2					
ANR	127529	Identifier	track		126354	0					
ANR	127530	Argument	tnum		126354	3					
ANR	127531	Identifier	tnum		126354	0					
ANR	127532	ExpressionStatement	"fprintf ( xmlout , ""        </MediaInfoContainer>\\n"" )"	881:4:38429:38482	126354	37	True				
ANR	127533	CallExpression	"fprintf ( xmlout , ""        </MediaInfoContainer>\\n"" )"		126354	0					
ANR	127534	Callee	fprintf		126354	0					
ANR	127535	Identifier	fprintf		126354	0					
ANR	127536	ArgumentList	xmlout		126354	1					
ANR	127537	Argument	xmlout		126354	0					
ANR	127538	Identifier	xmlout		126354	0					
ANR	127539	Argument	"""        </MediaInfoContainer>\\n"""		126354	1					
ANR	127540	PrimaryExpression	"""        </MediaInfoContainer>\\n"""		126354	0					
ANR	127541	ExpressionStatement	"fprintf ( xmlout , ""      </Media>\\n"" )"	882:4:38488:38526	126354	38	True				
ANR	127542	CallExpression	"fprintf ( xmlout , ""      </Media>\\n"" )"		126354	0					
ANR	127543	Callee	fprintf		126354	0					
ANR	127544	Identifier	fprintf		126354	0					
ANR	127545	ArgumentList	xmlout		126354	1					
ANR	127546	Argument	xmlout		126354	0					
ANR	127547	Identifier	xmlout		126354	0					
ANR	127548	Argument	"""      </Media>\\n"""		126354	1					
ANR	127549	PrimaryExpression	"""      </Media>\\n"""		126354	0					
ANR	127550	ReturnType	void		126354	1					
ANR	127551	Identifier	xml_write_mdia		126354	2					
ANR	127552	ParameterList	"FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum"		126354	3					
ANR	127553	Parameter	FILE * file	661:20:28181:28190	126354	0	True				
ANR	127554	ParameterType	FILE *		126354	0					
ANR	127555	Identifier	file		126354	1					
ANR	127556	Parameter	FILE * xmlout	661:32:28193:28204	126354	1	True				
ANR	127557	ParameterType	FILE *		126354	0					
ANR	127558	Identifier	xmlout		126354	1					
ANR	127559	Parameter	mj2_tk_t * track	661:46:28207:28221	126354	2	True				
ANR	127560	ParameterType	mj2_tk_t *		126354	0					
ANR	127561	Identifier	track		126354	1					
ANR	127562	Parameter	unsigned int tnum	662:20:28244:28260	126354	3	True				
ANR	127563	ParameterType	unsigned int		126354	0					
ANR	127564	Identifier	tnum		126354	1					
ANR	127565	CFGEntryNode	ENTRY		126354		True				
ANR	127566	CFGExitNode	EXIT		126354		True				
ANR	127567	Symbol	track -> num_url		126354						
ANR	127568	Symbol	track -> num_urn		126354						
ANR	127569	Symbol	notes		126354						
ANR	127570	Symbol	track -> urn [ track -> num_urn ] . location		126354						
ANR	127571	Symbol	* * track		126354						
ANR	127572	Symbol	* * track -> urn		126354						
ANR	127573	Symbol	* * track -> url		126354						
ANR	127574	Symbol	track -> track_type		126354						
ANR	127575	Symbol	track -> avgPDUsize		126354						
ANR	127576	Symbol	* track -> num_urn		126354						
ANR	127577	Symbol	file		126354						
ANR	127578	Symbol	track -> duration		126354						
ANR	127579	Symbol	* track -> num_url		126354						
ANR	127580	Symbol	track -> urn [ track -> num_urn ] . name		126354						
ANR	127581	Symbol	* track -> urn [ track -> num_urn ] . location		126354						
ANR	127582	Symbol	track		126354						
ANR	127583	Symbol	track -> timescale		126354						
ANR	127584	Symbol	track -> graphicsmode		126354						
ANR	127585	Symbol	track -> maxPDUsize		126354						
ANR	127586	Symbol	derived		126354						
ANR	127587	Symbol	* track -> opcolor		126354						
ANR	127588	Symbol	track -> balance		126354						
ANR	127589	Symbol	* buf		126354						
ANR	127590	Symbol	* track -> urn		126354						
ANR	127591	Symbol	tnum		126354						
ANR	127592	Symbol	* track -> url		126354						
ANR	127593	Symbol	* * * track		126354						
ANR	127594	Symbol	track -> maxbitrate		126354						
ANR	127595	Symbol	track -> slidingavgbitrate		126354						
ANR	127596	Symbol	* * track -> num_url		126354						
ANR	127597	Symbol	i		126354						
ANR	127598	Symbol	raw		126354						
ANR	127599	Symbol	* track -> urn [ track -> num_urn ] . name		126354						
ANR	127600	Symbol	* * track -> num_urn		126354						
ANR	127601	Symbol	k		126354						
ANR	127602	Symbol	* track		126354						
ANR	127603	Symbol	xmlout		126354						
ANR	127604	Symbol	buf		126354						
ANR	127605	Symbol	track -> modification_time		126354						
ANR	127606	Symbol	* i		126354						
ANR	127607	Symbol	track -> url [ track -> num_url ] . location		126354						
ANR	127608	Symbol	track -> avgbitrate		126354						
ANR	127609	Symbol	* track -> url [ track -> num_url ] . location		126354						
ANR	127610	Symbol	track -> language		126354						
ANR	127611	Symbol	track -> creation_time		126354						
ANR	127612	Symbol	track -> opcolor		126354						
ANR	127613	Symbol	track -> urn		126354						
ANR	127614	Symbol	track -> url		126354						
ANR	127615	Function	xml_write_stbl	887:0:38552:53580							
ANR	127616	FunctionDef	"xml_write_stbl (FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum)"		127615	0					
ANR	127617	CompoundStatement		889:0:38654:53580	127615	0					
ANR	127618	IdentifierDeclStatement	"char buf [ 5 ] , buf33 [ 33 ] ;"	890:4:38660:38682	127615	0	True				
ANR	127619	IdentifierDecl	buf [ 5 ]		127615	0					
ANR	127620	IdentifierDeclType	char [ 5 ]		127615	0					
ANR	127621	Identifier	buf		127615	1					
ANR	127622	PrimaryExpression	5		127615	2					
ANR	127623	IdentifierDecl	buf33 [ 33 ]		127615	1					
ANR	127624	IdentifierDeclType	char [ 33 ]		127615	0					
ANR	127625	Identifier	buf33		127615	1					
ANR	127626	PrimaryExpression	33		127615	2					
ANR	127627	IdentifierDeclStatement	"int i , len ;"	891:4:38688:38698	127615	1	True				
ANR	127628	IdentifierDecl	i		127615	0					
ANR	127629	IdentifierDeclType	int		127615	0					
ANR	127630	Identifier	i		127615	1					
ANR	127631	IdentifierDecl	len		127615	1					
ANR	127632	IdentifierDeclType	int		127615	0					
ANR	127633	Identifier	len		127615	1					
ANR	127634	ExpressionStatement	buf [ 4 ] = '\\0'	892:4:38704:38717	127615	2	True				
ANR	127635	AssignmentExpression	buf [ 4 ] = '\\0'		127615	0		=			
ANR	127636	ArrayIndexing	buf [ 4 ]		127615	0					
ANR	127637	Identifier	buf		127615	0					
ANR	127638	PrimaryExpression	4		127615	1					
ANR	127639	PrimaryExpression	'\\0'		127615	1					
ANR	127640	ExpressionStatement	"fprintf ( xmlout , ""          <SampleTable BoxType=\\""stbl\\"">\\n"" )"	894:4:38724:38790	127615	3	True				
ANR	127641	CallExpression	"fprintf ( xmlout , ""          <SampleTable BoxType=\\""stbl\\"">\\n"" )"		127615	0					
ANR	127642	Callee	fprintf		127615	0					
ANR	127643	Identifier	fprintf		127615	0					
ANR	127644	ArgumentList	xmlout		127615	1					
ANR	127645	Argument	xmlout		127615	0					
ANR	127646	Identifier	xmlout		127615	0					
ANR	127647	Argument	"""          <SampleTable BoxType=\\""stbl\\"">\\n"""		127615	1					
ANR	127648	PrimaryExpression	"""          <SampleTable BoxType=\\""stbl\\"">\\n"""		127615	0					
ANR	127649	IfStatement	if ( notes )		127615	4					
ANR	127650	Condition	notes	895:8:38800:38804	127615	0	True				
ANR	127651	Identifier	notes		127615	0					
ANR	127652	CompoundStatement		7:15:152:152	127615	1					
ANR	127653	ExpressionStatement	"fprintf ( xmlout , ""            <!-- What follows are specific instances of generic SampleDescription BoxType=\\""stsd\\"" -->\\n"" )"	896:8:38817:38956	127615	0	True				
ANR	127654	CallExpression	"fprintf ( xmlout , ""            <!-- What follows are specific instances of generic SampleDescription BoxType=\\""stsd\\"" -->\\n"" )"		127615	0					
ANR	127655	Callee	fprintf		127615	0					
ANR	127656	Identifier	fprintf		127615	0					
ANR	127657	ArgumentList	xmlout		127615	1					
ANR	127658	Argument	xmlout		127615	0					
ANR	127659	Identifier	xmlout		127615	0					
ANR	127660	Argument	"""            <!-- What follows are specific instances of generic SampleDescription BoxType=\\""stsd\\"" -->\\n"""		127615	1					
ANR	127661	PrimaryExpression	"""            <!-- What follows are specific instances of generic SampleDescription BoxType=\\""stsd\\"" -->\\n"""		127615	0					
ANR	127662	SwitchStatement	switch ( track -> track_type )		127615	5					
ANR	127663	Condition	track -> track_type	899:12:38976:38992	127615	0	True				
ANR	127664	PtrMemberAccess	track -> track_type		127615	0					
ANR	127665	Identifier	track		127615	0					
ANR	127666	Identifier	track_type		127615	1					
ANR	127667	CompoundStatement		11:31:340:340	127615	1					
ANR	127668	Label	case 0 :	900:4:39001:39007	127615	0	True				
ANR	127669	ExpressionStatement	"fprintf ( xmlout , ""            <VisualSampleEntry BoxType=\\""mjp2\\"">\\n"" )"	904:8:39270:39342	127615	1	True				
ANR	127670	CallExpression	"fprintf ( xmlout , ""            <VisualSampleEntry BoxType=\\""mjp2\\"">\\n"" )"		127615	0					
ANR	127671	Callee	fprintf		127615	0					
ANR	127672	Identifier	fprintf		127615	0					
ANR	127673	ArgumentList	xmlout		127615	1					
ANR	127674	Argument	xmlout		127615	0					
ANR	127675	Identifier	xmlout		127615	0					
ANR	127676	Argument	"""            <VisualSampleEntry BoxType=\\""mjp2\\"">\\n"""		127615	1					
ANR	127677	PrimaryExpression	"""            <VisualSampleEntry BoxType=\\""mjp2\\"">\\n"""		127615	0					
ANR	127678	IfStatement	if ( notes )		127615	2					
ANR	127679	Condition	notes	905:12:39356:39360	127615	0	True				
ANR	127680	Identifier	notes		127615	0					
ANR	127681	CompoundStatement		17:19:708:708	127615	1					
ANR	127682	ExpressionStatement	"fprintf ( xmlout , ""            <!-- If multiple instances of this box, only first is shown here. -->\\n"" )"	906:12:39377:39499	127615	0	True				
ANR	127683	CallExpression	"fprintf ( xmlout , ""            <!-- If multiple instances of this box, only first is shown here. -->\\n"" )"		127615	0					
ANR	127684	Callee	fprintf		127615	0					
ANR	127685	Identifier	fprintf		127615	0					
ANR	127686	ArgumentList	xmlout		127615	1					
ANR	127687	Argument	xmlout		127615	0					
ANR	127688	Identifier	xmlout		127615	0					
ANR	127689	Argument	"""            <!-- If multiple instances of this box, only first is shown here. -->\\n"""		127615	1					
ANR	127690	PrimaryExpression	"""            <!-- If multiple instances of this box, only first is shown here. -->\\n"""		127615	0					
ANR	127691	ExpressionStatement	"fprintf ( xmlout , ""            <!-- Width and Height are in pixels.  Unlike the Track Header, there is no fractional part. -->\\n"" )"	908:12:39513:39661	127615	1	True				
ANR	127692	CallExpression	"fprintf ( xmlout , ""            <!-- Width and Height are in pixels.  Unlike the Track Header, there is no fractional part. -->\\n"" )"		127615	0					
ANR	127693	Callee	fprintf		127615	0					
ANR	127694	Identifier	fprintf		127615	0					
ANR	127695	ArgumentList	xmlout		127615	1					
ANR	127696	Argument	xmlout		127615	0					
ANR	127697	Identifier	xmlout		127615	0					
ANR	127698	Argument	"""            <!-- Width and Height are in pixels.  Unlike the Track Header, there is no fractional part. -->\\n"""		127615	1					
ANR	127699	PrimaryExpression	"""            <!-- Width and Height are in pixels.  Unlike the Track Header, there is no fractional part. -->\\n"""		127615	0					
ANR	127700	ExpressionStatement	"fprintf ( xmlout , ""            <!-- In mj2_to_metadata implementation, the values are not represented separately from Track Header's values. -->\\n"" )"	910:12:39675:39841	127615	2	True				
ANR	127701	CallExpression	"fprintf ( xmlout , ""            <!-- In mj2_to_metadata implementation, the values are not represented separately from Track Header's values. -->\\n"" )"		127615	0					
ANR	127702	Callee	fprintf		127615	0					
ANR	127703	Identifier	fprintf		127615	0					
ANR	127704	ArgumentList	xmlout		127615	1					
ANR	127705	Argument	xmlout		127615	0					
ANR	127706	Identifier	xmlout		127615	0					
ANR	127707	Argument	"""            <!-- In mj2_to_metadata implementation, the values are not represented separately from Track Header's values. -->\\n"""		127615	1					
ANR	127708	PrimaryExpression	"""            <!-- In mj2_to_metadata implementation, the values are not represented separately from Track Header's values. -->\\n"""		127615	0					
ANR	127709	ExpressionStatement	"fprintf ( xmlout , ""              <WidthAsInteger>%d</WidthAsInteger>\\n"" , track -> w )"	914:8:39973:40072	127615	3	True				
ANR	127710	CallExpression	"fprintf ( xmlout , ""              <WidthAsInteger>%d</WidthAsInteger>\\n"" , track -> w )"		127615	0					
ANR	127711	Callee	fprintf		127615	0					
ANR	127712	Identifier	fprintf		127615	0					
ANR	127713	ArgumentList	xmlout		127615	1					
ANR	127714	Argument	xmlout		127615	0					
ANR	127715	Identifier	xmlout		127615	0					
ANR	127716	Argument	"""              <WidthAsInteger>%d</WidthAsInteger>\\n"""		127615	1					
ANR	127717	PrimaryExpression	"""              <WidthAsInteger>%d</WidthAsInteger>\\n"""		127615	0					
ANR	127718	Argument	track -> w		127615	2					
ANR	127719	PtrMemberAccess	track -> w		127615	0					
ANR	127720	Identifier	track		127615	0					
ANR	127721	Identifier	w		127615	1					
ANR	127722	ExpressionStatement	"fprintf ( xmlout , ""              <HeightAsInteger>%d</HeightAsInteger>\\n"" , track -> h )"	916:8:40082:40183	127615	4	True				
ANR	127723	CallExpression	"fprintf ( xmlout , ""              <HeightAsInteger>%d</HeightAsInteger>\\n"" , track -> h )"		127615	0					
ANR	127724	Callee	fprintf		127615	0					
ANR	127725	Identifier	fprintf		127615	0					
ANR	127726	ArgumentList	xmlout		127615	1					
ANR	127727	Argument	xmlout		127615	0					
ANR	127728	Identifier	xmlout		127615	0					
ANR	127729	Argument	"""              <HeightAsInteger>%d</HeightAsInteger>\\n"""		127615	1					
ANR	127730	PrimaryExpression	"""              <HeightAsInteger>%d</HeightAsInteger>\\n"""		127615	0					
ANR	127731	Argument	track -> h		127615	2					
ANR	127732	PtrMemberAccess	track -> h		127615	0					
ANR	127733	Identifier	track		127615	0					
ANR	127734	Identifier	h		127615	1					
ANR	127735	IfStatement	if ( notes )		127615	5					
ANR	127736	Condition	notes	919:12:40297:40301	127615	0	True				
ANR	127737	Identifier	notes		127615	0					
ANR	127738	CompoundStatement		31:19:1649:1649	127615	1					
ANR	127739	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Resolutions are in pixels per inch, for the highest-resolution component (typically luminance). -->\\n"" )"	920:12:40318:40477	127615	0	True				
ANR	127740	CallExpression	"fprintf ( xmlout , ""              <!-- Resolutions are in pixels per inch, for the highest-resolution component (typically luminance). -->\\n"" )"		127615	0					
ANR	127741	Callee	fprintf		127615	0					
ANR	127742	Identifier	fprintf		127615	0					
ANR	127743	ArgumentList	xmlout		127615	1					
ANR	127744	Argument	xmlout		127615	0					
ANR	127745	Identifier	xmlout		127615	0					
ANR	127746	Argument	"""              <!-- Resolutions are in pixels per inch, for the highest-resolution component (typically luminance). -->\\n"""		127615	1					
ANR	127747	PrimaryExpression	"""              <!-- Resolutions are in pixels per inch, for the highest-resolution component (typically luminance). -->\\n"""		127615	0					
ANR	127748	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Both stored as fixed-point binary 16.16 values. Decimal values are approximations. -->\\n"" )"	922:12:40491:40637	127615	1	True				
ANR	127749	CallExpression	"fprintf ( xmlout , ""              <!-- Both stored as fixed-point binary 16.16 values. Decimal values are approximations. -->\\n"" )"		127615	0					
ANR	127750	Callee	fprintf		127615	0					
ANR	127751	Identifier	fprintf		127615	0					
ANR	127752	ArgumentList	xmlout		127615	1					
ANR	127753	Argument	xmlout		127615	0					
ANR	127754	Identifier	xmlout		127615	0					
ANR	127755	Argument	"""              <!-- Both stored as fixed-point binary 16.16 values. Decimal values are approximations. -->\\n"""		127615	1					
ANR	127756	PrimaryExpression	"""              <!-- Both stored as fixed-point binary 16.16 values. Decimal values are approximations. -->\\n"""		127615	0					
ANR	127757	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Typical value for both resolutions is 0x00480000  (72.0) -->\\n"" )"	924:12:40651:40771	127615	2	True				
ANR	127758	CallExpression	"fprintf ( xmlout , ""              <!-- Typical value for both resolutions is 0x00480000  (72.0) -->\\n"" )"		127615	0					
ANR	127759	Callee	fprintf		127615	0					
ANR	127760	Identifier	fprintf		127615	0					
ANR	127761	ArgumentList	xmlout		127615	1					
ANR	127762	Argument	xmlout		127615	0					
ANR	127763	Identifier	xmlout		127615	0					
ANR	127764	Argument	"""              <!-- Typical value for both resolutions is 0x00480000  (72.0) -->\\n"""		127615	1					
ANR	127765	PrimaryExpression	"""              <!-- Typical value for both resolutions is 0x00480000  (72.0) -->\\n"""		127615	0					
ANR	127766	ExpressionStatement	"fprintf ( xmlout , ""              <HorizontalRes>\\n"" )"	927:8:40791:40844	127615	6	True				
ANR	127767	CallExpression	"fprintf ( xmlout , ""              <HorizontalRes>\\n"" )"		127615	0					
ANR	127768	Callee	fprintf		127615	0					
ANR	127769	Identifier	fprintf		127615	0					
ANR	127770	ArgumentList	xmlout		127615	1					
ANR	127771	Argument	xmlout		127615	0					
ANR	127772	Identifier	xmlout		127615	0					
ANR	127773	Argument	"""              <HorizontalRes>\\n"""		127615	1					
ANR	127774	PrimaryExpression	"""              <HorizontalRes>\\n"""		127615	0					
ANR	127775	IfStatement	if ( raw )		127615	7					
ANR	127776	Condition	raw	928:12:40858:40860	127615	0	True				
ANR	127777	Identifier	raw		127615	0					
ANR	127778	CompoundStatement		40:17:2208:2208	127615	1					
ANR	127779	ExpressionStatement	"fprintf ( xmlout , ""                <AsHex>0x%08x</AsHex>\\n"" , track -> horizresolution )"	929:12:40877:40980	127615	0	True				
ANR	127780	CallExpression	"fprintf ( xmlout , ""                <AsHex>0x%08x</AsHex>\\n"" , track -> horizresolution )"		127615	0					
ANR	127781	Callee	fprintf		127615	0					
ANR	127782	Identifier	fprintf		127615	0					
ANR	127783	ArgumentList	xmlout		127615	1					
ANR	127784	Argument	xmlout		127615	0					
ANR	127785	Identifier	xmlout		127615	0					
ANR	127786	Argument	"""                <AsHex>0x%08x</AsHex>\\n"""		127615	1					
ANR	127787	PrimaryExpression	"""                <AsHex>0x%08x</AsHex>\\n"""		127615	0					
ANR	127788	Argument	track -> horizresolution		127615	2					
ANR	127789	PtrMemberAccess	track -> horizresolution		127615	0					
ANR	127790	Identifier	track		127615	0					
ANR	127791	Identifier	horizresolution		127615	1					
ANR	127792	IfStatement	if ( derived )		127615	8					
ANR	127793	Condition	derived	932:12:41004:41010	127615	0	True				
ANR	127794	Identifier	derived		127615	0					
ANR	127795	CompoundStatement		44:21:2358:2358	127615	1					
ANR	127796	ExpressionStatement	"fprintf ( xmlout , ""                <AsDecimal>%12.6f</AsDecimal>\\n"" , ( double ) track -> horizresolution / ( double ) 0x00010000 )"	933:12:41027:41188	127615	0	True				
ANR	127797	CallExpression	"fprintf ( xmlout , ""                <AsDecimal>%12.6f</AsDecimal>\\n"" , ( double ) track -> horizresolution / ( double ) 0x00010000 )"		127615	0					
ANR	127798	Callee	fprintf		127615	0					
ANR	127799	Identifier	fprintf		127615	0					
ANR	127800	ArgumentList	xmlout		127615	1					
ANR	127801	Argument	xmlout		127615	0					
ANR	127802	Identifier	xmlout		127615	0					
ANR	127803	Argument	"""                <AsDecimal>%12.6f</AsDecimal>\\n"""		127615	1					
ANR	127804	PrimaryExpression	"""                <AsDecimal>%12.6f</AsDecimal>\\n"""		127615	0					
ANR	127805	Argument	( double ) track -> horizresolution / ( double ) 0x00010000		127615	2					
ANR	127806	MultiplicativeExpression	( double ) track -> horizresolution / ( double ) 0x00010000		127615	0		/			
ANR	127807	CastExpression	( double ) track -> horizresolution		127615	0					
ANR	127808	CastTarget	double		127615	0					
ANR	127809	PtrMemberAccess	track -> horizresolution		127615	1					
ANR	127810	Identifier	track		127615	0					
ANR	127811	Identifier	horizresolution		127615	1					
ANR	127812	CastExpression	( double ) 0x00010000		127615	1					
ANR	127813	CastTarget	double		127615	0					
ANR	127814	PrimaryExpression	0x00010000		127615	1					
ANR	127815	ExpressionStatement	"fprintf ( xmlout , ""              </HorizontalRes>\\n"" )"	937:8:41276:41330	127615	9	True				
ANR	127816	CallExpression	"fprintf ( xmlout , ""              </HorizontalRes>\\n"" )"		127615	0					
ANR	127817	Callee	fprintf		127615	0					
ANR	127818	Identifier	fprintf		127615	0					
ANR	127819	ArgumentList	xmlout		127615	1					
ANR	127820	Argument	xmlout		127615	0					
ANR	127821	Identifier	xmlout		127615	0					
ANR	127822	Argument	"""              </HorizontalRes>\\n"""		127615	1					
ANR	127823	PrimaryExpression	"""              </HorizontalRes>\\n"""		127615	0					
ANR	127824	ExpressionStatement	"fprintf ( xmlout , ""              <VerticalRes>\\n"" )"	938:8:41340:41391	127615	10	True				
ANR	127825	CallExpression	"fprintf ( xmlout , ""              <VerticalRes>\\n"" )"		127615	0					
ANR	127826	Callee	fprintf		127615	0					
ANR	127827	Identifier	fprintf		127615	0					
ANR	127828	ArgumentList	xmlout		127615	1					
ANR	127829	Argument	xmlout		127615	0					
ANR	127830	Identifier	xmlout		127615	0					
ANR	127831	Argument	"""              <VerticalRes>\\n"""		127615	1					
ANR	127832	PrimaryExpression	"""              <VerticalRes>\\n"""		127615	0					
ANR	127833	IfStatement	if ( raw )		127615	11					
ANR	127834	Condition	raw	939:12:41405:41407	127615	0	True				
ANR	127835	Identifier	raw		127615	0					
ANR	127836	CompoundStatement		51:17:2755:2755	127615	1					
ANR	127837	ExpressionStatement	"fprintf ( xmlout , ""                <AsHex>0x%08x</AsHex>\\n"" , track -> vertresolution )"	940:12:41424:41526	127615	0	True				
ANR	127838	CallExpression	"fprintf ( xmlout , ""                <AsHex>0x%08x</AsHex>\\n"" , track -> vertresolution )"		127615	0					
ANR	127839	Callee	fprintf		127615	0					
ANR	127840	Identifier	fprintf		127615	0					
ANR	127841	ArgumentList	xmlout		127615	1					
ANR	127842	Argument	xmlout		127615	0					
ANR	127843	Identifier	xmlout		127615	0					
ANR	127844	Argument	"""                <AsHex>0x%08x</AsHex>\\n"""		127615	1					
ANR	127845	PrimaryExpression	"""                <AsHex>0x%08x</AsHex>\\n"""		127615	0					
ANR	127846	Argument	track -> vertresolution		127615	2					
ANR	127847	PtrMemberAccess	track -> vertresolution		127615	0					
ANR	127848	Identifier	track		127615	0					
ANR	127849	Identifier	vertresolution		127615	1					
ANR	127850	IfStatement	if ( derived )		127615	12					
ANR	127851	Condition	derived	943:12:41550:41556	127615	0	True				
ANR	127852	Identifier	derived		127615	0					
ANR	127853	CompoundStatement		55:21:2904:2904	127615	1					
ANR	127854	ExpressionStatement	"fprintf ( xmlout , ""                <AsDecimal>%12.6f</AsDecimal>\\n"" , ( double ) track -> vertresolution / ( double ) 0x00010000 )"	944:12:41573:41733	127615	0	True				
ANR	127855	CallExpression	"fprintf ( xmlout , ""                <AsDecimal>%12.6f</AsDecimal>\\n"" , ( double ) track -> vertresolution / ( double ) 0x00010000 )"		127615	0					
ANR	127856	Callee	fprintf		127615	0					
ANR	127857	Identifier	fprintf		127615	0					
ANR	127858	ArgumentList	xmlout		127615	1					
ANR	127859	Argument	xmlout		127615	0					
ANR	127860	Identifier	xmlout		127615	0					
ANR	127861	Argument	"""                <AsDecimal>%12.6f</AsDecimal>\\n"""		127615	1					
ANR	127862	PrimaryExpression	"""                <AsDecimal>%12.6f</AsDecimal>\\n"""		127615	0					
ANR	127863	Argument	( double ) track -> vertresolution / ( double ) 0x00010000		127615	2					
ANR	127864	MultiplicativeExpression	( double ) track -> vertresolution / ( double ) 0x00010000		127615	0		/			
ANR	127865	CastExpression	( double ) track -> vertresolution		127615	0					
ANR	127866	CastTarget	double		127615	0					
ANR	127867	PtrMemberAccess	track -> vertresolution		127615	1					
ANR	127868	Identifier	track		127615	0					
ANR	127869	Identifier	vertresolution		127615	1					
ANR	127870	CastExpression	( double ) 0x00010000		127615	1					
ANR	127871	CastTarget	double		127615	0					
ANR	127872	PrimaryExpression	0x00010000		127615	1					
ANR	127873	ExpressionStatement	"fprintf ( xmlout , ""              </VerticalRes>\\n"" )"	948:8:41821:41873	127615	13	True				
ANR	127874	CallExpression	"fprintf ( xmlout , ""              </VerticalRes>\\n"" )"		127615	0					
ANR	127875	Callee	fprintf		127615	0					
ANR	127876	Identifier	fprintf		127615	0					
ANR	127877	ArgumentList	xmlout		127615	1					
ANR	127878	Argument	xmlout		127615	0					
ANR	127879	Identifier	xmlout		127615	0					
ANR	127880	Argument	"""              </VerticalRes>\\n"""		127615	1					
ANR	127881	PrimaryExpression	"""              </VerticalRes>\\n"""		127615	0					
ANR	127882	ExpressionStatement	buf33 [ 0 ] = '\\0'	950:8:41884:41899	127615	14	True				
ANR	127883	AssignmentExpression	buf33 [ 0 ] = '\\0'		127615	0		=			
ANR	127884	ArrayIndexing	buf33 [ 0 ]		127615	0					
ANR	127885	Identifier	buf33		127615	0					
ANR	127886	PrimaryExpression	0		127615	1					
ANR	127887	PrimaryExpression	'\\0'		127615	1					
ANR	127888	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		127615	15					
ANR	127889	ForInit	i = 0 ;	951:13:41914:41919	127615	0	True				
ANR	127890	AssignmentExpression	i = 0		127615	0		=			
ANR	127891	Identifier	i		127615	0					
ANR	127892	PrimaryExpression	0		127615	1					
ANR	127893	Condition	i < 8	951:20:41921:41925	127615	1	True				
ANR	127894	RelationalExpression	i < 8		127615	0		<			
ANR	127895	Identifier	i		127615	0					
ANR	127896	PrimaryExpression	8		127615	1					
ANR	127897	PostIncDecOperationExpression	i ++	951:27:41928:41930	127615	2	True				
ANR	127898	Identifier	i		127615	0					
ANR	127899	IncDec	++		127615	1					
ANR	127900	CompoundStatement		63:32:3278:3278	127615	3					
ANR	127901	ExpressionStatement	"uint_to_chars ( ( unsigned int ) track -> compressorname [ i ] , buf )"	952:12:41947:42005	127615	0	True				
ANR	127902	CallExpression	"uint_to_chars ( ( unsigned int ) track -> compressorname [ i ] , buf )"		127615	0					
ANR	127903	Callee	uint_to_chars		127615	0					
ANR	127904	Identifier	uint_to_chars		127615	0					
ANR	127905	ArgumentList	( unsigned int ) track -> compressorname [ i ]		127615	1					
ANR	127906	Argument	( unsigned int ) track -> compressorname [ i ]		127615	0					
ANR	127907	CastExpression	( unsigned int ) track -> compressorname [ i ]		127615	0					
ANR	127908	CastTarget	unsigned int		127615	0					
ANR	127909	ArrayIndexing	track -> compressorname [ i ]		127615	1					
ANR	127910	PtrMemberAccess	track -> compressorname		127615	0					
ANR	127911	Identifier	track		127615	0					
ANR	127912	Identifier	compressorname		127615	1					
ANR	127913	Identifier	i		127615	1					
ANR	127914	Argument	buf		127615	1					
ANR	127915	Identifier	buf		127615	0					
ANR	127916	ExpressionStatement	"strcat ( buf33 , buf )"	953:12:42019:42056	127615	1	True				
ANR	127917	CallExpression	"strcat ( buf33 , buf )"		127615	0					
ANR	127918	Callee	strcat		127615	0					
ANR	127919	Identifier	strcat		127615	0					
ANR	127920	ArgumentList	buf33		127615	1					
ANR	127921	Argument	buf33		127615	0					
ANR	127922	Identifier	buf33		127615	0					
ANR	127923	Argument	buf		127615	1					
ANR	127924	Identifier	buf		127615	0					
ANR	127925	ExpressionStatement	len = ( int ) buf33 [ 0 ]	956:8:42150:42184	127615	16	True				
ANR	127926	AssignmentExpression	len = ( int ) buf33 [ 0 ]		127615	0		=			
ANR	127927	Identifier	len		127615	0					
ANR	127928	CastExpression	( int ) buf33 [ 0 ]		127615	1					
ANR	127929	CastTarget	int		127615	0					
ANR	127930	ArrayIndexing	buf33 [ 0 ]		127615	1					
ANR	127931	Identifier	buf33		127615	0					
ANR	127932	PrimaryExpression	0		127615	1					
ANR	127933	ExpressionStatement	buf33 [ len + 1 ] = '\\0'	958:8:42272:42293	127615	17	True				
ANR	127934	AssignmentExpression	buf33 [ len + 1 ] = '\\0'		127615	0		=			
ANR	127935	ArrayIndexing	buf33 [ len + 1 ]		127615	0					
ANR	127936	Identifier	buf33		127615	0					
ANR	127937	AdditiveExpression	len + 1		127615	1		+			
ANR	127938	Identifier	len		127615	0					
ANR	127939	PrimaryExpression	1		127615	1					
ANR	127940	PrimaryExpression	'\\0'		127615	1					
ANR	127941	ExpressionStatement	"fprintf ( xmlout , ""              <CompressorName>%s</CompressorName>\\n"" , buf33 + 1 )"	959:8:42321:42421	127615	18	True				
ANR	127942	CallExpression	"fprintf ( xmlout , ""              <CompressorName>%s</CompressorName>\\n"" , buf33 + 1 )"		127615	0					
ANR	127943	Callee	fprintf		127615	0					
ANR	127944	Identifier	fprintf		127615	0					
ANR	127945	ArgumentList	xmlout		127615	1					
ANR	127946	Argument	xmlout		127615	0					
ANR	127947	Identifier	xmlout		127615	0					
ANR	127948	Argument	"""              <CompressorName>%s</CompressorName>\\n"""		127615	1					
ANR	127949	PrimaryExpression	"""              <CompressorName>%s</CompressorName>\\n"""		127615	0					
ANR	127950	Argument	buf33 + 1		127615	2					
ANR	127951	AdditiveExpression	buf33 + 1		127615	0		+			
ANR	127952	Identifier	buf33		127615	0					
ANR	127953	PrimaryExpression	1		127615	1					
ANR	127954	IfStatement	if ( notes )		127615	19					
ANR	127955	Condition	notes	961:12:42465:42469	127615	0	True				
ANR	127956	Identifier	notes		127615	0					
ANR	127957	CompoundStatement		73:19:3817:3817	127615	1					
ANR	127958	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Compressor name for debugging.  Standard restricts max length to 31 bytes. -->\\n"" )"	962:12:42486:42624	127615	0	True				
ANR	127959	CallExpression	"fprintf ( xmlout , ""              <!-- Compressor name for debugging.  Standard restricts max length to 31 bytes. -->\\n"" )"		127615	0					
ANR	127960	Callee	fprintf		127615	0					
ANR	127961	Identifier	fprintf		127615	0					
ANR	127962	ArgumentList	xmlout		127615	1					
ANR	127963	Argument	xmlout		127615	0					
ANR	127964	Identifier	xmlout		127615	0					
ANR	127965	Argument	"""              <!-- Compressor name for debugging.  Standard restricts max length to 31 bytes. -->\\n"""		127615	1					
ANR	127966	PrimaryExpression	"""              <!-- Compressor name for debugging.  Standard restricts max length to 31 bytes. -->\\n"""		127615	0					
ANR	127967	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Usually blank or \\""Motion JPEG2000\\"" -->\\n"" )"	964:12:42638:42738	127615	1	True				
ANR	127968	CallExpression	"fprintf ( xmlout , ""              <!-- Usually blank or \\""Motion JPEG2000\\"" -->\\n"" )"		127615	0					
ANR	127969	Callee	fprintf		127615	0					
ANR	127970	Identifier	fprintf		127615	0					
ANR	127971	ArgumentList	xmlout		127615	1					
ANR	127972	Argument	xmlout		127615	0					
ANR	127973	Identifier	xmlout		127615	0					
ANR	127974	Argument	"""              <!-- Usually blank or \\""Motion JPEG2000\\"" -->\\n"""		127615	1					
ANR	127975	PrimaryExpression	"""              <!-- Usually blank or \\""Motion JPEG2000\\"" -->\\n"""		127615	0					
ANR	127976	ExpressionStatement	"fprintf ( xmlout , ""              <Depth>0x%02x</Depth>\\n"" , track -> depth )"	967:8:42758:42831	127615	20	True				
ANR	127977	CallExpression	"fprintf ( xmlout , ""              <Depth>0x%02x</Depth>\\n"" , track -> depth )"		127615	0					
ANR	127978	Callee	fprintf		127615	0					
ANR	127979	Identifier	fprintf		127615	0					
ANR	127980	ArgumentList	xmlout		127615	1					
ANR	127981	Argument	xmlout		127615	0					
ANR	127982	Identifier	xmlout		127615	0					
ANR	127983	Argument	"""              <Depth>0x%02x</Depth>\\n"""		127615	1					
ANR	127984	PrimaryExpression	"""              <Depth>0x%02x</Depth>\\n"""		127615	0					
ANR	127985	Argument	track -> depth		127615	2					
ANR	127986	PtrMemberAccess	track -> depth		127615	0					
ANR	127987	Identifier	track		127615	0					
ANR	127988	Identifier	depth		127615	1					
ANR	127989	IfStatement	if ( notes )		127615	21					
ANR	127990	Condition	notes	968:12:42845:42849	127615	0	True				
ANR	127991	Identifier	notes		127615	0					
ANR	127992	CompoundStatement		80:19:4197:4197	127615	1					
ANR	127993	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Depth is: -->\\n"" )"	969:12:42866:42920	127615	0	True				
ANR	127994	CallExpression	"fprintf ( xmlout , ""              <!-- Depth is: -->\\n"" )"		127615	0					
ANR	127995	Callee	fprintf		127615	0					
ANR	127996	Identifier	fprintf		127615	0					
ANR	127997	ArgumentList	xmlout		127615	1					
ANR	127998	Argument	xmlout		127615	0					
ANR	127999	Identifier	xmlout		127615	0					
ANR	128000	Argument	"""              <!-- Depth is: -->\\n"""		127615	1					
ANR	128001	PrimaryExpression	"""              <!-- Depth is: -->\\n"""		127615	0					
ANR	128002	ExpressionStatement	"fprintf ( xmlout , ""              <!--   0x20: alpha channels present (color or grayscale) -->\\n"" )"	970:12:42934:43049	127615	1	True				
ANR	128003	CallExpression	"fprintf ( xmlout , ""              <!--   0x20: alpha channels present (color or grayscale) -->\\n"" )"		127615	0					
ANR	128004	Callee	fprintf		127615	0					
ANR	128005	Identifier	fprintf		127615	0					
ANR	128006	ArgumentList	xmlout		127615	1					
ANR	128007	Argument	xmlout		127615	0					
ANR	128008	Identifier	xmlout		127615	0					
ANR	128009	Argument	"""              <!--   0x20: alpha channels present (color or grayscale) -->\\n"""		127615	1					
ANR	128010	PrimaryExpression	"""              <!--   0x20: alpha channels present (color or grayscale) -->\\n"""		127615	0					
ANR	128011	ExpressionStatement	"fprintf ( xmlout , ""              <!--   0x28: grayscale without alpha -->\\n"" )"	972:12:43063:43139	127615	2	True				
ANR	128012	CallExpression	"fprintf ( xmlout , ""              <!--   0x28: grayscale without alpha -->\\n"" )"		127615	0					
ANR	128013	Callee	fprintf		127615	0					
ANR	128014	Identifier	fprintf		127615	0					
ANR	128015	ArgumentList	xmlout		127615	1					
ANR	128016	Argument	xmlout		127615	0					
ANR	128017	Identifier	xmlout		127615	0					
ANR	128018	Argument	"""              <!--   0x28: grayscale without alpha -->\\n"""		127615	1					
ANR	128019	PrimaryExpression	"""              <!--   0x28: grayscale without alpha -->\\n"""		127615	0					
ANR	128020	ExpressionStatement	"fprintf ( xmlout , ""              <!--   0x18: color without alpha -->\\n"" )"	973:12:43153:43225	127615	3	True				
ANR	128021	CallExpression	"fprintf ( xmlout , ""              <!--   0x18: color without alpha -->\\n"" )"		127615	0					
ANR	128022	Callee	fprintf		127615	0					
ANR	128023	Identifier	fprintf		127615	0					
ANR	128024	ArgumentList	xmlout		127615	1					
ANR	128025	Argument	xmlout		127615	0					
ANR	128026	Identifier	xmlout		127615	0					
ANR	128027	Argument	"""              <!--   0x18: color without alpha -->\\n"""		127615	1					
ANR	128028	PrimaryExpression	"""              <!--   0x18: color without alpha -->\\n"""		127615	0					
ANR	128029	ExpressionStatement	"xml_out_frame_jp2h ( xmlout , & ( track -> jp2_struct ) )"	976:8:43246:43294	127615	22	True				
ANR	128030	CallExpression	"xml_out_frame_jp2h ( xmlout , & ( track -> jp2_struct ) )"		127615	0					
ANR	128031	Callee	xml_out_frame_jp2h		127615	0					
ANR	128032	Identifier	xml_out_frame_jp2h		127615	0					
ANR	128033	ArgumentList	xmlout		127615	1					
ANR	128034	Argument	xmlout		127615	0					
ANR	128035	Identifier	xmlout		127615	0					
ANR	128036	Argument	& ( track -> jp2_struct )		127615	1					
ANR	128037	UnaryOperationExpression	& ( track -> jp2_struct )		127615	0					
ANR	128038	UnaryOperator	&		127615	0					
ANR	128039	PtrMemberAccess	track -> jp2_struct		127615	1					
ANR	128040	Identifier	track		127615	0					
ANR	128041	Identifier	jp2_struct		127615	1					
ANR	128042	ExpressionStatement	"fprintf ( xmlout , ""              <FieldCoding BoxType=\\""fiel\\"">\\n"" )"	979:8:43369:43437	127615	23	True				
ANR	128043	CallExpression	"fprintf ( xmlout , ""              <FieldCoding BoxType=\\""fiel\\"">\\n"" )"		127615	0					
ANR	128044	Callee	fprintf		127615	0					
ANR	128045	Identifier	fprintf		127615	0					
ANR	128046	ArgumentList	xmlout		127615	1					
ANR	128047	Argument	xmlout		127615	0					
ANR	128048	Identifier	xmlout		127615	0					
ANR	128049	Argument	"""              <FieldCoding BoxType=\\""fiel\\"">\\n"""		127615	1					
ANR	128050	PrimaryExpression	"""              <FieldCoding BoxType=\\""fiel\\"">\\n"""		127615	0					
ANR	128051	ExpressionStatement	"fprintf ( xmlout , ""                <FieldCount>%d</FieldCount>\\n"" , ( unsigned int ) track -> fieldcount )"	980:8:43447:43563	127615	24	True				
ANR	128052	CallExpression	"fprintf ( xmlout , ""                <FieldCount>%d</FieldCount>\\n"" , ( unsigned int ) track -> fieldcount )"		127615	0					
ANR	128053	Callee	fprintf		127615	0					
ANR	128054	Identifier	fprintf		127615	0					
ANR	128055	ArgumentList	xmlout		127615	1					
ANR	128056	Argument	xmlout		127615	0					
ANR	128057	Identifier	xmlout		127615	0					
ANR	128058	Argument	"""                <FieldCount>%d</FieldCount>\\n"""		127615	1					
ANR	128059	PrimaryExpression	"""                <FieldCount>%d</FieldCount>\\n"""		127615	0					
ANR	128060	Argument	( unsigned int ) track -> fieldcount		127615	2					
ANR	128061	CastExpression	( unsigned int ) track -> fieldcount		127615	0					
ANR	128062	CastTarget	unsigned int		127615	0					
ANR	128063	PtrMemberAccess	track -> fieldcount		127615	1					
ANR	128064	Identifier	track		127615	0					
ANR	128065	Identifier	fieldcount		127615	1					
ANR	128066	IfStatement	if ( notes )		127615	25					
ANR	128067	Condition	notes	982:12:43604:43608	127615	0	True				
ANR	128068	Identifier	notes		127615	0					
ANR	128069	CompoundStatement		94:19:4956:4956	127615	1					
ANR	128070	ExpressionStatement	"fprintf ( xmlout , ""                <!-- Must be either 1 or 2 -->\\n"" )"	983:12:43625:43693	127615	0	True				
ANR	128071	CallExpression	"fprintf ( xmlout , ""                <!-- Must be either 1 or 2 -->\\n"" )"		127615	0					
ANR	128072	Callee	fprintf		127615	0					
ANR	128073	Identifier	fprintf		127615	0					
ANR	128074	ArgumentList	xmlout		127615	1					
ANR	128075	Argument	xmlout		127615	0					
ANR	128076	Identifier	xmlout		127615	0					
ANR	128077	Argument	"""                <!-- Must be either 1 or 2 -->\\n"""		127615	1					
ANR	128078	PrimaryExpression	"""                <!-- Must be either 1 or 2 -->\\n"""		127615	0					
ANR	128079	ExpressionStatement	"fprintf ( xmlout , ""                <FieldOrder>%d</FieldOrder>\\n"" , ( unsigned int ) track -> fieldorder )"	985:8:43713:43829	127615	26	True				
ANR	128080	CallExpression	"fprintf ( xmlout , ""                <FieldOrder>%d</FieldOrder>\\n"" , ( unsigned int ) track -> fieldorder )"		127615	0					
ANR	128081	Callee	fprintf		127615	0					
ANR	128082	Identifier	fprintf		127615	0					
ANR	128083	ArgumentList	xmlout		127615	1					
ANR	128084	Argument	xmlout		127615	0					
ANR	128085	Identifier	xmlout		127615	0					
ANR	128086	Argument	"""                <FieldOrder>%d</FieldOrder>\\n"""		127615	1					
ANR	128087	PrimaryExpression	"""                <FieldOrder>%d</FieldOrder>\\n"""		127615	0					
ANR	128088	Argument	( unsigned int ) track -> fieldorder		127615	2					
ANR	128089	CastExpression	( unsigned int ) track -> fieldorder		127615	0					
ANR	128090	CastTarget	unsigned int		127615	0					
ANR	128091	PtrMemberAccess	track -> fieldorder		127615	1					
ANR	128092	Identifier	track		127615	0					
ANR	128093	Identifier	fieldorder		127615	1					
ANR	128094	IfStatement	if ( notes )		127615	27					
ANR	128095	Condition	notes	987:12:43870:43874	127615	0	True				
ANR	128096	Identifier	notes		127615	0					
ANR	128097	CompoundStatement		99:19:5222:5222	127615	1					
ANR	128098	ExpressionStatement	"fprintf ( xmlout , ""                <!-- When FieldCount=2, FieldOrder means: -->\\n"" )"	988:12:43891:43993	127615	0	True				
ANR	128099	CallExpression	"fprintf ( xmlout , ""                <!-- When FieldCount=2, FieldOrder means: -->\\n"" )"		127615	0					
ANR	128100	Callee	fprintf		127615	0					
ANR	128101	Identifier	fprintf		127615	0					
ANR	128102	ArgumentList	xmlout		127615	1					
ANR	128103	Argument	xmlout		127615	0					
ANR	128104	Identifier	xmlout		127615	0					
ANR	128105	Argument	"""                <!-- When FieldCount=2, FieldOrder means: -->\\n"""		127615	1					
ANR	128106	PrimaryExpression	"""                <!-- When FieldCount=2, FieldOrder means: -->\\n"""		127615	0					
ANR	128107	ExpressionStatement	"fprintf ( xmlout , ""                <!--   0: Field coding unknown -->\\n"" )"	990:12:44007:44079	127615	1	True				
ANR	128108	CallExpression	"fprintf ( xmlout , ""                <!--   0: Field coding unknown -->\\n"" )"		127615	0					
ANR	128109	Callee	fprintf		127615	0					
ANR	128110	Identifier	fprintf		127615	0					
ANR	128111	ArgumentList	xmlout		127615	1					
ANR	128112	Argument	xmlout		127615	0					
ANR	128113	Identifier	xmlout		127615	0					
ANR	128114	Argument	"""                <!--   0: Field coding unknown -->\\n"""		127615	1					
ANR	128115	PrimaryExpression	"""                <!--   0: Field coding unknown -->\\n"""		127615	0					
ANR	128116	ExpressionStatement	"fprintf ( xmlout , ""                <!--   1: Field with topmost line is stored first in sample; fields are in temporal order -->\\n"" )"	991:12:44093:44243	127615	2	True				
ANR	128117	CallExpression	"fprintf ( xmlout , ""                <!--   1: Field with topmost line is stored first in sample; fields are in temporal order -->\\n"" )"		127615	0					
ANR	128118	Callee	fprintf		127615	0					
ANR	128119	Identifier	fprintf		127615	0					
ANR	128120	ArgumentList	xmlout		127615	1					
ANR	128121	Argument	xmlout		127615	0					
ANR	128122	Identifier	xmlout		127615	0					
ANR	128123	Argument	"""                <!--   1: Field with topmost line is stored first in sample; fields are in temporal order -->\\n"""		127615	1					
ANR	128124	PrimaryExpression	"""                <!--   1: Field with topmost line is stored first in sample; fields are in temporal order -->\\n"""		127615	0					
ANR	128125	ExpressionStatement	"fprintf ( xmlout , ""                <!--   6: Field with topmost line is stored second in sample; fields are in temporal order -->\\n"" )"	993:12:44257:44408	127615	3	True				
ANR	128126	CallExpression	"fprintf ( xmlout , ""                <!--   6: Field with topmost line is stored second in sample; fields are in temporal order -->\\n"" )"		127615	0					
ANR	128127	Callee	fprintf		127615	0					
ANR	128128	Identifier	fprintf		127615	0					
ANR	128129	ArgumentList	xmlout		127615	1					
ANR	128130	Argument	xmlout		127615	0					
ANR	128131	Identifier	xmlout		127615	0					
ANR	128132	Argument	"""                <!--   6: Field with topmost line is stored second in sample; fields are in temporal order -->\\n"""		127615	1					
ANR	128133	PrimaryExpression	"""                <!--   6: Field with topmost line is stored second in sample; fields are in temporal order -->\\n"""		127615	0					
ANR	128134	ExpressionStatement	"fprintf ( xmlout , ""                <!-- Defaults: FieldCount=1, FieldOrder=0 if FieldCoding box not present -->\\n"" )"	995:12:44422:44555	127615	4	True				
ANR	128135	CallExpression	"fprintf ( xmlout , ""                <!-- Defaults: FieldCount=1, FieldOrder=0 if FieldCoding box not present -->\\n"" )"		127615	0					
ANR	128136	Callee	fprintf		127615	0					
ANR	128137	Identifier	fprintf		127615	0					
ANR	128138	ArgumentList	xmlout		127615	1					
ANR	128139	Argument	xmlout		127615	0					
ANR	128140	Identifier	xmlout		127615	0					
ANR	128141	Argument	"""                <!-- Defaults: FieldCount=1, FieldOrder=0 if FieldCoding box not present -->\\n"""		127615	1					
ANR	128142	PrimaryExpression	"""                <!-- Defaults: FieldCount=1, FieldOrder=0 if FieldCoding box not present -->\\n"""		127615	0					
ANR	128143	ExpressionStatement	"fprintf ( xmlout , ""                <!-- Current implementation doesn't retain whether box was actually present. -->\\n"" )"	997:12:44569:44706	127615	5	True				
ANR	128144	CallExpression	"fprintf ( xmlout , ""                <!-- Current implementation doesn't retain whether box was actually present. -->\\n"" )"		127615	0					
ANR	128145	Callee	fprintf		127615	0					
ANR	128146	Identifier	fprintf		127615	0					
ANR	128147	ArgumentList	xmlout		127615	1					
ANR	128148	Argument	xmlout		127615	0					
ANR	128149	Identifier	xmlout		127615	0					
ANR	128150	Argument	"""                <!-- Current implementation doesn't retain whether box was actually present. -->\\n"""		127615	1					
ANR	128151	PrimaryExpression	"""                <!-- Current implementation doesn't retain whether box was actually present. -->\\n"""		127615	0					
ANR	128152	ExpressionStatement	"fprintf ( xmlout , ""              </FieldCoding>\\n"" )"	1000:8:44726:44778	127615	28	True				
ANR	128153	CallExpression	"fprintf ( xmlout , ""              </FieldCoding>\\n"" )"		127615	0					
ANR	128154	Callee	fprintf		127615	0					
ANR	128155	Identifier	fprintf		127615	0					
ANR	128156	ArgumentList	xmlout		127615	1					
ANR	128157	Argument	xmlout		127615	0					
ANR	128158	Identifier	xmlout		127615	0					
ANR	128159	Argument	"""              </FieldCoding>\\n"""		127615	1					
ANR	128160	PrimaryExpression	"""              </FieldCoding>\\n"""		127615	0					
ANR	128161	ExpressionStatement	"fprintf ( xmlout , ""              <MJP2_Profile BoxType=\\""jp2p\\"" Count=\\""%d\\"">\\n"" , track -> num_br )"	1002:8:44789:44899	127615	29	True				
ANR	128162	CallExpression	"fprintf ( xmlout , ""              <MJP2_Profile BoxType=\\""jp2p\\"" Count=\\""%d\\"">\\n"" , track -> num_br )"		127615	0					
ANR	128163	Callee	fprintf		127615	0					
ANR	128164	Identifier	fprintf		127615	0					
ANR	128165	ArgumentList	xmlout		127615	1					
ANR	128166	Argument	xmlout		127615	0					
ANR	128167	Identifier	xmlout		127615	0					
ANR	128168	Argument	"""              <MJP2_Profile BoxType=\\""jp2p\\"" Count=\\""%d\\"">\\n"""		127615	1					
ANR	128169	PrimaryExpression	"""              <MJP2_Profile BoxType=\\""jp2p\\"" Count=\\""%d\\"">\\n"""		127615	0					
ANR	128170	Argument	track -> num_br		127615	2					
ANR	128171	PtrMemberAccess	track -> num_br		127615	0					
ANR	128172	Identifier	track		127615	0					
ANR	128173	Identifier	num_br		127615	1					
ANR	128174	ForStatement	for ( i = 0 ; i < track -> num_br ; i ++ )		127615	30					
ANR	128175	ForInit	i = 0 ;	1004:13:44914:44919	127615	0	True				
ANR	128176	AssignmentExpression	i = 0		127615	0		=			
ANR	128177	Identifier	i		127615	0					
ANR	128178	PrimaryExpression	0		127615	1					
ANR	128179	Condition	i < track -> num_br	1004:20:44921:44937	127615	1	True				
ANR	128180	RelationalExpression	i < track -> num_br		127615	0		<			
ANR	128181	Identifier	i		127615	0					
ANR	128182	PtrMemberAccess	track -> num_br		127615	1					
ANR	128183	Identifier	track		127615	0					
ANR	128184	Identifier	num_br		127615	1					
ANR	128185	PostIncDecOperationExpression	i ++	1005:16:44956:44958	127615	2	True				
ANR	128186	Identifier	i		127615	0					
ANR	128187	IncDec	++		127615	1					
ANR	128188	CompoundStatement		117:21:6306:6306	127615	3					
ANR	128189	ExpressionStatement	"uint_to_chars ( track -> br [ i ] , buf )"	1006:12:45040:45072	127615	0	True				
ANR	128190	CallExpression	"uint_to_chars ( track -> br [ i ] , buf )"		127615	0					
ANR	128191	Callee	uint_to_chars		127615	0					
ANR	128192	Identifier	uint_to_chars		127615	0					
ANR	128193	ArgumentList	track -> br [ i ]		127615	1					
ANR	128194	Argument	track -> br [ i ]		127615	0					
ANR	128195	ArrayIndexing	track -> br [ i ]		127615	0					
ANR	128196	PtrMemberAccess	track -> br		127615	0					
ANR	128197	Identifier	track		127615	0					
ANR	128198	Identifier	br		127615	1					
ANR	128199	Identifier	i		127615	1					
ANR	128200	Argument	buf		127615	1					
ANR	128201	Identifier	buf		127615	0					
ANR	128202	ExpressionStatement	"fprintf ( xmlout , ""                <CompatibleBrand>%s</CompatibleBrand>\\n"" , buf )"	1007:12:45086:45186	127615	1	True				
ANR	128203	CallExpression	"fprintf ( xmlout , ""                <CompatibleBrand>%s</CompatibleBrand>\\n"" , buf )"		127615	0					
ANR	128204	Callee	fprintf		127615	0					
ANR	128205	Identifier	fprintf		127615	0					
ANR	128206	ArgumentList	xmlout		127615	1					
ANR	128207	Argument	xmlout		127615	0					
ANR	128208	Identifier	xmlout		127615	0					
ANR	128209	Argument	"""                <CompatibleBrand>%s</CompatibleBrand>\\n"""		127615	1					
ANR	128210	PrimaryExpression	"""                <CompatibleBrand>%s</CompatibleBrand>\\n"""		127615	0					
ANR	128211	Argument	buf		127615	2					
ANR	128212	Identifier	buf		127615	0					
ANR	128213	ExpressionStatement	"fprintf ( xmlout , ""              </MJP2_Profile>\\n"" )"	1010:8:45237:45290	127615	31	True				
ANR	128214	CallExpression	"fprintf ( xmlout , ""              </MJP2_Profile>\\n"" )"		127615	0					
ANR	128215	Callee	fprintf		127615	0					
ANR	128216	Identifier	fprintf		127615	0					
ANR	128217	ArgumentList	xmlout		127615	1					
ANR	128218	Argument	xmlout		127615	0					
ANR	128219	Identifier	xmlout		127615	0					
ANR	128220	Argument	"""              </MJP2_Profile>\\n"""		127615	1					
ANR	128221	PrimaryExpression	"""              </MJP2_Profile>\\n"""		127615	0					
ANR	128222	ExpressionStatement	"fprintf ( xmlout , ""              <MJP2_Prefix BoxType=\\""jp2x\\"" Count=\\""%d\\"">\\n"" , track -> num_jp2x )"	1012:8:45301:45412	127615	32	True				
ANR	128223	CallExpression	"fprintf ( xmlout , ""              <MJP2_Prefix BoxType=\\""jp2x\\"" Count=\\""%d\\"">\\n"" , track -> num_jp2x )"		127615	0					
ANR	128224	Callee	fprintf		127615	0					
ANR	128225	Identifier	fprintf		127615	0					
ANR	128226	ArgumentList	xmlout		127615	1					
ANR	128227	Argument	xmlout		127615	0					
ANR	128228	Identifier	xmlout		127615	0					
ANR	128229	Argument	"""              <MJP2_Prefix BoxType=\\""jp2x\\"" Count=\\""%d\\"">\\n"""		127615	1					
ANR	128230	PrimaryExpression	"""              <MJP2_Prefix BoxType=\\""jp2x\\"" Count=\\""%d\\"">\\n"""		127615	0					
ANR	128231	Argument	track -> num_jp2x		127615	2					
ANR	128232	PtrMemberAccess	track -> num_jp2x		127615	0					
ANR	128233	Identifier	track		127615	0					
ANR	128234	Identifier	num_jp2x		127615	1					
ANR	128235	ForStatement	for ( i = 0 ; i < track -> num_jp2x ; i ++ )		127615	33					
ANR	128236	ForInit	i = 0 ;	1014:13:45427:45432	127615	0	True				
ANR	128237	AssignmentExpression	i = 0		127615	0		=			
ANR	128238	Identifier	i		127615	0					
ANR	128239	PrimaryExpression	0		127615	1					
ANR	128240	Condition	i < track -> num_jp2x	1014:20:45434:45452	127615	1	True				
ANR	128241	RelationalExpression	i < track -> num_jp2x		127615	0		<			
ANR	128242	Identifier	i		127615	0					
ANR	128243	PtrMemberAccess	track -> num_jp2x		127615	1					
ANR	128244	Identifier	track		127615	0					
ANR	128245	Identifier	num_jp2x		127615	1					
ANR	128246	PostIncDecOperationExpression	i ++	1014:41:45455:45457	127615	2	True				
ANR	128247	Identifier	i		127615	0					
ANR	128248	IncDec	++		127615	1					
ANR	128249	CompoundStatement		126:46:6805:6805	127615	3					
ANR	128250	ExpressionStatement	"fprintf ( xmlout , ""                <Data>0x%02x</Data>\\n"" , track -> jp2xdata [ i ] )"	1016:12:45537:45634	127615	0	True				
ANR	128251	CallExpression	"fprintf ( xmlout , ""                <Data>0x%02x</Data>\\n"" , track -> jp2xdata [ i ] )"		127615	0					
ANR	128252	Callee	fprintf		127615	0					
ANR	128253	Identifier	fprintf		127615	0					
ANR	128254	ArgumentList	xmlout		127615	1					
ANR	128255	Argument	xmlout		127615	0					
ANR	128256	Identifier	xmlout		127615	0					
ANR	128257	Argument	"""                <Data>0x%02x</Data>\\n"""		127615	1					
ANR	128258	PrimaryExpression	"""                <Data>0x%02x</Data>\\n"""		127615	0					
ANR	128259	Argument	track -> jp2xdata [ i ]		127615	2					
ANR	128260	ArrayIndexing	track -> jp2xdata [ i ]		127615	0					
ANR	128261	PtrMemberAccess	track -> jp2xdata		127615	0					
ANR	128262	Identifier	track		127615	0					
ANR	128263	Identifier	jp2xdata		127615	1					
ANR	128264	Identifier	i		127615	1					
ANR	128265	ExpressionStatement	"fprintf ( xmlout , ""              </MJP2_Prefix>\\n"" )"	1019:8:45689:45741	127615	34	True				
ANR	128266	CallExpression	"fprintf ( xmlout , ""              </MJP2_Prefix>\\n"" )"		127615	0					
ANR	128267	Callee	fprintf		127615	0					
ANR	128268	Identifier	fprintf		127615	0					
ANR	128269	ArgumentList	xmlout		127615	1					
ANR	128270	Argument	xmlout		127615	0					
ANR	128271	Identifier	xmlout		127615	0					
ANR	128272	Argument	"""              </MJP2_Prefix>\\n"""		127615	1					
ANR	128273	PrimaryExpression	"""              </MJP2_Prefix>\\n"""		127615	0					
ANR	128274	ExpressionStatement	"fprintf ( xmlout , ""              <MJP2_SubSampling BoxType=\\""jsub\\"">\\n"" )"	1021:8:45752:45838	127615	35	True				
ANR	128275	CallExpression	"fprintf ( xmlout , ""              <MJP2_SubSampling BoxType=\\""jsub\\"">\\n"" )"		127615	0					
ANR	128276	Callee	fprintf		127615	0					
ANR	128277	Identifier	fprintf		127615	0					
ANR	128278	ArgumentList	xmlout		127615	1					
ANR	128279	Argument	xmlout		127615	0					
ANR	128280	Identifier	xmlout		127615	0					
ANR	128281	Argument	"""              <MJP2_SubSampling BoxType=\\""jsub\\"">\\n"""		127615	1					
ANR	128282	PrimaryExpression	"""              <MJP2_SubSampling BoxType=\\""jsub\\"">\\n"""		127615	0					
ANR	128283	IfStatement	if ( notes )		127615	36					
ANR	128284	Condition	notes	1023:12:45886:45890	127615	0	True				
ANR	128285	Identifier	notes		127615	0					
ANR	128286	CompoundStatement		135:19:7238:7238	127615	1					
ANR	128287	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Typical subsample value is 2 for 4:2:0 -->\\n"" )"	1024:12:45907:46009	127615	0	True				
ANR	128288	CallExpression	"fprintf ( xmlout , ""              <!-- Typical subsample value is 2 for 4:2:0 -->\\n"" )"		127615	0					
ANR	128289	Callee	fprintf		127615	0					
ANR	128290	Identifier	fprintf		127615	0					
ANR	128291	ArgumentList	xmlout		127615	1					
ANR	128292	Argument	xmlout		127615	0					
ANR	128293	Identifier	xmlout		127615	0					
ANR	128294	Argument	"""              <!-- Typical subsample value is 2 for 4:2:0 -->\\n"""		127615	1					
ANR	128295	PrimaryExpression	"""              <!-- Typical subsample value is 2 for 4:2:0 -->\\n"""		127615	0					
ANR	128296	ExpressionStatement	"fprintf ( xmlout , ""                <HorizontalSub>%d</HorizontalSub>\\n"" , track -> hsub )"	1027:8:46029:46131	127615	37	True				
ANR	128297	CallExpression	"fprintf ( xmlout , ""                <HorizontalSub>%d</HorizontalSub>\\n"" , track -> hsub )"		127615	0					
ANR	128298	Callee	fprintf		127615	0					
ANR	128299	Identifier	fprintf		127615	0					
ANR	128300	ArgumentList	xmlout		127615	1					
ANR	128301	Argument	xmlout		127615	0					
ANR	128302	Identifier	xmlout		127615	0					
ANR	128303	Argument	"""                <HorizontalSub>%d</HorizontalSub>\\n"""		127615	1					
ANR	128304	PrimaryExpression	"""                <HorizontalSub>%d</HorizontalSub>\\n"""		127615	0					
ANR	128305	Argument	track -> hsub		127615	2					
ANR	128306	PtrMemberAccess	track -> hsub		127615	0					
ANR	128307	Identifier	track		127615	0					
ANR	128308	Identifier	hsub		127615	1					
ANR	128309	ExpressionStatement	"fprintf ( xmlout , ""                <VerticalSub>%d</VerticalSub>\\n"" , track -> vsub )"	1029:8:46141:46239	127615	38	True				
ANR	128310	CallExpression	"fprintf ( xmlout , ""                <VerticalSub>%d</VerticalSub>\\n"" , track -> vsub )"		127615	0					
ANR	128311	Callee	fprintf		127615	0					
ANR	128312	Identifier	fprintf		127615	0					
ANR	128313	ArgumentList	xmlout		127615	1					
ANR	128314	Argument	xmlout		127615	0					
ANR	128315	Identifier	xmlout		127615	0					
ANR	128316	Argument	"""                <VerticalSub>%d</VerticalSub>\\n"""		127615	1					
ANR	128317	PrimaryExpression	"""                <VerticalSub>%d</VerticalSub>\\n"""		127615	0					
ANR	128318	Argument	track -> vsub		127615	2					
ANR	128319	PtrMemberAccess	track -> vsub		127615	0					
ANR	128320	Identifier	track		127615	0					
ANR	128321	Identifier	vsub		127615	1					
ANR	128322	ExpressionStatement	"fprintf ( xmlout , ""                <HorizontalOffset>%d</HorizontalOffset>\\n"" , track -> hoff )"	1031:8:46249:46357	127615	39	True				
ANR	128323	CallExpression	"fprintf ( xmlout , ""                <HorizontalOffset>%d</HorizontalOffset>\\n"" , track -> hoff )"		127615	0					
ANR	128324	Callee	fprintf		127615	0					
ANR	128325	Identifier	fprintf		127615	0					
ANR	128326	ArgumentList	xmlout		127615	1					
ANR	128327	Argument	xmlout		127615	0					
ANR	128328	Identifier	xmlout		127615	0					
ANR	128329	Argument	"""                <HorizontalOffset>%d</HorizontalOffset>\\n"""		127615	1					
ANR	128330	PrimaryExpression	"""                <HorizontalOffset>%d</HorizontalOffset>\\n"""		127615	0					
ANR	128331	Argument	track -> hoff		127615	2					
ANR	128332	PtrMemberAccess	track -> hoff		127615	0					
ANR	128333	Identifier	track		127615	0					
ANR	128334	Identifier	hoff		127615	1					
ANR	128335	ExpressionStatement	"fprintf ( xmlout , ""                <VerticalOffset>%d</VerticalOffset>\\n"" , track -> voff )"	1033:8:46367:46471	127615	40	True				
ANR	128336	CallExpression	"fprintf ( xmlout , ""                <VerticalOffset>%d</VerticalOffset>\\n"" , track -> voff )"		127615	0					
ANR	128337	Callee	fprintf		127615	0					
ANR	128338	Identifier	fprintf		127615	0					
ANR	128339	ArgumentList	xmlout		127615	1					
ANR	128340	Argument	xmlout		127615	0					
ANR	128341	Identifier	xmlout		127615	0					
ANR	128342	Argument	"""                <VerticalOffset>%d</VerticalOffset>\\n"""		127615	1					
ANR	128343	PrimaryExpression	"""                <VerticalOffset>%d</VerticalOffset>\\n"""		127615	0					
ANR	128344	Argument	track -> voff		127615	2					
ANR	128345	PtrMemberAccess	track -> voff		127615	0					
ANR	128346	Identifier	track		127615	0					
ANR	128347	Identifier	voff		127615	1					
ANR	128348	IfStatement	if ( notes )		127615	41					
ANR	128349	Condition	notes	1035:12:46485:46489	127615	0	True				
ANR	128350	Identifier	notes		127615	0					
ANR	128351	CompoundStatement		147:19:7837:7837	127615	1					
ANR	128352	ExpressionStatement	"fprintf ( xmlout , ""                <!-- Typical {horizontal, vertical} chroma offset values: -->\\n"" )"	1036:12:46506:46624	127615	0	True				
ANR	128353	CallExpression	"fprintf ( xmlout , ""                <!-- Typical {horizontal, vertical} chroma offset values: -->\\n"" )"		127615	0					
ANR	128354	Callee	fprintf		127615	0					
ANR	128355	Identifier	fprintf		127615	0					
ANR	128356	ArgumentList	xmlout		127615	1					
ANR	128357	Argument	xmlout		127615	0					
ANR	128358	Identifier	xmlout		127615	0					
ANR	128359	Argument	"""                <!-- Typical {horizontal, vertical} chroma offset values: -->\\n"""		127615	1					
ANR	128360	PrimaryExpression	"""                <!-- Typical {horizontal, vertical} chroma offset values: -->\\n"""		127615	0					
ANR	128361	ExpressionStatement	"fprintf ( xmlout , ""                <!-- 4:2:2 format (CCIR601, H.262, MPEG2, MPEG4, recom. Exif): {0, 0} -->\\n"" )"	1038:12:46638:46768	127615	1	True				
ANR	128362	CallExpression	"fprintf ( xmlout , ""                <!-- 4:2:2 format (CCIR601, H.262, MPEG2, MPEG4, recom. Exif): {0, 0} -->\\n"" )"		127615	0					
ANR	128363	Callee	fprintf		127615	0					
ANR	128364	Identifier	fprintf		127615	0					
ANR	128365	ArgumentList	xmlout		127615	1					
ANR	128366	Argument	xmlout		127615	0					
ANR	128367	Identifier	xmlout		127615	0					
ANR	128368	Argument	"""                <!-- 4:2:2 format (CCIR601, H.262, MPEG2, MPEG4, recom. Exif): {0, 0} -->\\n"""		127615	1					
ANR	128369	PrimaryExpression	"""                <!-- 4:2:2 format (CCIR601, H.262, MPEG2, MPEG4, recom. Exif): {0, 0} -->\\n"""		127615	0					
ANR	128370	ExpressionStatement	"fprintf ( xmlout , ""                <!-- 4:2:2 format (JFIF):                                      {1, 0} -->\\n"" )"	1040:12:46782:46912	127615	2	True				
ANR	128371	CallExpression	"fprintf ( xmlout , ""                <!-- 4:2:2 format (JFIF):                                      {1, 0} -->\\n"" )"		127615	0					
ANR	128372	Callee	fprintf		127615	0					
ANR	128373	Identifier	fprintf		127615	0					
ANR	128374	ArgumentList	xmlout		127615	1					
ANR	128375	Argument	xmlout		127615	0					
ANR	128376	Identifier	xmlout		127615	0					
ANR	128377	Argument	"""                <!-- 4:2:2 format (JFIF):                                      {1, 0} -->\\n"""		127615	1					
ANR	128378	PrimaryExpression	"""                <!-- 4:2:2 format (JFIF):                                      {1, 0} -->\\n"""		127615	0					
ANR	128379	ExpressionStatement	"fprintf ( xmlout , ""                <!-- 4:2:0 format (H.262, MPEG2, MPEG4):                       {0, 1} -->\\n"" )"	1042:12:46926:47056	127615	3	True				
ANR	128380	CallExpression	"fprintf ( xmlout , ""                <!-- 4:2:0 format (H.262, MPEG2, MPEG4):                       {0, 1} -->\\n"" )"		127615	0					
ANR	128381	Callee	fprintf		127615	0					
ANR	128382	Identifier	fprintf		127615	0					
ANR	128383	ArgumentList	xmlout		127615	1					
ANR	128384	Argument	xmlout		127615	0					
ANR	128385	Identifier	xmlout		127615	0					
ANR	128386	Argument	"""                <!-- 4:2:0 format (H.262, MPEG2, MPEG4):                       {0, 1} -->\\n"""		127615	1					
ANR	128387	PrimaryExpression	"""                <!-- 4:2:0 format (H.262, MPEG2, MPEG4):                       {0, 1} -->\\n"""		127615	0					
ANR	128388	ExpressionStatement	"fprintf ( xmlout , ""                <!-- 4:2:0 format (MPEG1, H.261, JFIF, recom. Exif):           {1, 1} -->\\n"" )"	1044:12:47070:47200	127615	4	True				
ANR	128389	CallExpression	"fprintf ( xmlout , ""                <!-- 4:2:0 format (MPEG1, H.261, JFIF, recom. Exif):           {1, 1} -->\\n"" )"		127615	0					
ANR	128390	Callee	fprintf		127615	0					
ANR	128391	Identifier	fprintf		127615	0					
ANR	128392	ArgumentList	xmlout		127615	1					
ANR	128393	Argument	xmlout		127615	0					
ANR	128394	Identifier	xmlout		127615	0					
ANR	128395	Argument	"""                <!-- 4:2:0 format (MPEG1, H.261, JFIF, recom. Exif):           {1, 1} -->\\n"""		127615	1					
ANR	128396	PrimaryExpression	"""                <!-- 4:2:0 format (MPEG1, H.261, JFIF, recom. Exif):           {1, 1} -->\\n"""		127615	0					
ANR	128397	ExpressionStatement	"fprintf ( xmlout , ""              </MJP2_SubSampling>\\n"" )"	1047:8:47220:47290	127615	42	True				
ANR	128398	CallExpression	"fprintf ( xmlout , ""              </MJP2_SubSampling>\\n"" )"		127615	0					
ANR	128399	Callee	fprintf		127615	0					
ANR	128400	Identifier	fprintf		127615	0					
ANR	128401	ArgumentList	xmlout		127615	1					
ANR	128402	Argument	xmlout		127615	0					
ANR	128403	Identifier	xmlout		127615	0					
ANR	128404	Argument	"""              </MJP2_SubSampling>\\n"""		127615	1					
ANR	128405	PrimaryExpression	"""              </MJP2_SubSampling>\\n"""		127615	0					
ANR	128406	ExpressionStatement	"fprintf ( xmlout , ""              <MJP2_OriginalFormat BoxType=\\""orfo\\"">\\n"" )"	1050:8:47335:47424	127615	43	True				
ANR	128407	CallExpression	"fprintf ( xmlout , ""              <MJP2_OriginalFormat BoxType=\\""orfo\\"">\\n"" )"		127615	0					
ANR	128408	Callee	fprintf		127615	0					
ANR	128409	Identifier	fprintf		127615	0					
ANR	128410	ArgumentList	xmlout		127615	1					
ANR	128411	Argument	xmlout		127615	0					
ANR	128412	Identifier	xmlout		127615	0					
ANR	128413	Argument	"""              <MJP2_OriginalFormat BoxType=\\""orfo\\"">\\n"""		127615	1					
ANR	128414	PrimaryExpression	"""              <MJP2_OriginalFormat BoxType=\\""orfo\\"">\\n"""		127615	0					
ANR	128415	ExpressionStatement	"fprintf ( xmlout , ""                <OriginalFieldCount>%u</OriginalFieldCount>\\n"" , ( unsigned int ) track -> or_fieldcount )"	1052:8:47457:47605	127615	44	True				
ANR	128416	CallExpression	"fprintf ( xmlout , ""                <OriginalFieldCount>%u</OriginalFieldCount>\\n"" , ( unsigned int ) track -> or_fieldcount )"		127615	0					
ANR	128417	Callee	fprintf		127615	0					
ANR	128418	Identifier	fprintf		127615	0					
ANR	128419	ArgumentList	xmlout		127615	1					
ANR	128420	Argument	xmlout		127615	0					
ANR	128421	Identifier	xmlout		127615	0					
ANR	128422	Argument	"""                <OriginalFieldCount>%u</OriginalFieldCount>\\n"""		127615	1					
ANR	128423	PrimaryExpression	"""                <OriginalFieldCount>%u</OriginalFieldCount>\\n"""		127615	0					
ANR	128424	Argument	( unsigned int ) track -> or_fieldcount		127615	2					
ANR	128425	CastExpression	( unsigned int ) track -> or_fieldcount		127615	0					
ANR	128426	CastTarget	unsigned int		127615	0					
ANR	128427	PtrMemberAccess	track -> or_fieldcount		127615	1					
ANR	128428	Identifier	track		127615	0					
ANR	128429	Identifier	or_fieldcount		127615	1					
ANR	128430	IfStatement	if ( notes )		127615	45					
ANR	128431	Condition	notes	1055:12:47646:47650	127615	0	True				
ANR	128432	Identifier	notes		127615	0					
ANR	128433	CompoundStatement		167:19:8998:8998	127615	1					
ANR	128434	ExpressionStatement	"fprintf ( xmlout , ""                <!-- In original material before encoding.  Must be either 1 or 2 -->\\n"" )"	1056:12:47667:47793	127615	0	True				
ANR	128435	CallExpression	"fprintf ( xmlout , ""                <!-- In original material before encoding.  Must be either 1 or 2 -->\\n"" )"		127615	0					
ANR	128436	Callee	fprintf		127615	0					
ANR	128437	Identifier	fprintf		127615	0					
ANR	128438	ArgumentList	xmlout		127615	1					
ANR	128439	Argument	xmlout		127615	0					
ANR	128440	Identifier	xmlout		127615	0					
ANR	128441	Argument	"""                <!-- In original material before encoding.  Must be either 1 or 2 -->\\n"""		127615	1					
ANR	128442	PrimaryExpression	"""                <!-- In original material before encoding.  Must be either 1 or 2 -->\\n"""		127615	0					
ANR	128443	ExpressionStatement	"fprintf ( xmlout , ""                <OriginalFieldOrder>%u</OriginalFieldOrder>\\n"" , ( unsigned int ) track -> or_fieldorder )"	1059:8:47813:47961	127615	46	True				
ANR	128444	CallExpression	"fprintf ( xmlout , ""                <OriginalFieldOrder>%u</OriginalFieldOrder>\\n"" , ( unsigned int ) track -> or_fieldorder )"		127615	0					
ANR	128445	Callee	fprintf		127615	0					
ANR	128446	Identifier	fprintf		127615	0					
ANR	128447	ArgumentList	xmlout		127615	1					
ANR	128448	Argument	xmlout		127615	0					
ANR	128449	Identifier	xmlout		127615	0					
ANR	128450	Argument	"""                <OriginalFieldOrder>%u</OriginalFieldOrder>\\n"""		127615	1					
ANR	128451	PrimaryExpression	"""                <OriginalFieldOrder>%u</OriginalFieldOrder>\\n"""		127615	0					
ANR	128452	Argument	( unsigned int ) track -> or_fieldorder		127615	2					
ANR	128453	CastExpression	( unsigned int ) track -> or_fieldorder		127615	0					
ANR	128454	CastTarget	unsigned int		127615	0					
ANR	128455	PtrMemberAccess	track -> or_fieldorder		127615	1					
ANR	128456	Identifier	track		127615	0					
ANR	128457	Identifier	or_fieldorder		127615	1					
ANR	128458	IfStatement	if ( notes )		127615	47					
ANR	128459	Condition	notes	1062:12:48002:48006	127615	0	True				
ANR	128460	Identifier	notes		127615	0					
ANR	128461	CompoundStatement		174:19:9354:9354	127615	1					
ANR	128462	ExpressionStatement	"fprintf ( xmlout , ""                <!-- When FieldCount=2, FieldOrder means: -->\\n"" )"	1063:12:48023:48125	127615	0	True				
ANR	128463	CallExpression	"fprintf ( xmlout , ""                <!-- When FieldCount=2, FieldOrder means: -->\\n"" )"		127615	0					
ANR	128464	Callee	fprintf		127615	0					
ANR	128465	Identifier	fprintf		127615	0					
ANR	128466	ArgumentList	xmlout		127615	1					
ANR	128467	Argument	xmlout		127615	0					
ANR	128468	Identifier	xmlout		127615	0					
ANR	128469	Argument	"""                <!-- When FieldCount=2, FieldOrder means: -->\\n"""		127615	1					
ANR	128470	PrimaryExpression	"""                <!-- When FieldCount=2, FieldOrder means: -->\\n"""		127615	0					
ANR	128471	ExpressionStatement	"fprintf ( xmlout , ""                <!--   0: Field coding unknown -->\\n"" )"	1065:12:48139:48211	127615	1	True				
ANR	128472	CallExpression	"fprintf ( xmlout , ""                <!--   0: Field coding unknown -->\\n"" )"		127615	0					
ANR	128473	Callee	fprintf		127615	0					
ANR	128474	Identifier	fprintf		127615	0					
ANR	128475	ArgumentList	xmlout		127615	1					
ANR	128476	Argument	xmlout		127615	0					
ANR	128477	Identifier	xmlout		127615	0					
ANR	128478	Argument	"""                <!--   0: Field coding unknown -->\\n"""		127615	1					
ANR	128479	PrimaryExpression	"""                <!--   0: Field coding unknown -->\\n"""		127615	0					
ANR	128480	ExpressionStatement	"fprintf ( xmlout , ""                <!--   11: Topmost line came from the earlier field; -->\\n"" )"	1066:12:48225:48338	127615	2	True				
ANR	128481	CallExpression	"fprintf ( xmlout , ""                <!--   11: Topmost line came from the earlier field; -->\\n"" )"		127615	0					
ANR	128482	Callee	fprintf		127615	0					
ANR	128483	Identifier	fprintf		127615	0					
ANR	128484	ArgumentList	xmlout		127615	1					
ANR	128485	Argument	xmlout		127615	0					
ANR	128486	Identifier	xmlout		127615	0					
ANR	128487	Argument	"""                <!--   11: Topmost line came from the earlier field; -->\\n"""		127615	1					
ANR	128488	PrimaryExpression	"""                <!--   11: Topmost line came from the earlier field; -->\\n"""		127615	0					
ANR	128489	ExpressionStatement	"fprintf ( xmlout , ""                <!--   16:  Topmost line came form the later field. -->\\n"" )"	1068:12:48352:48464	127615	3	True				
ANR	128490	CallExpression	"fprintf ( xmlout , ""                <!--   16:  Topmost line came form the later field. -->\\n"" )"		127615	0					
ANR	128491	Callee	fprintf		127615	0					
ANR	128492	Identifier	fprintf		127615	0					
ANR	128493	ArgumentList	xmlout		127615	1					
ANR	128494	Argument	xmlout		127615	0					
ANR	128495	Identifier	xmlout		127615	0					
ANR	128496	Argument	"""                <!--   16:  Topmost line came form the later field. -->\\n"""		127615	1					
ANR	128497	PrimaryExpression	"""                <!--   16:  Topmost line came form the later field. -->\\n"""		127615	0					
ANR	128498	ExpressionStatement	"fprintf ( xmlout , ""                <!-- Defaults: FieldCount=1, FieldOrder=0 if FieldCoding box not present -->\\n"" )"	1070:12:48478:48611	127615	4	True				
ANR	128499	CallExpression	"fprintf ( xmlout , ""                <!-- Defaults: FieldCount=1, FieldOrder=0 if FieldCoding box not present -->\\n"" )"		127615	0					
ANR	128500	Callee	fprintf		127615	0					
ANR	128501	Identifier	fprintf		127615	0					
ANR	128502	ArgumentList	xmlout		127615	1					
ANR	128503	Argument	xmlout		127615	0					
ANR	128504	Identifier	xmlout		127615	0					
ANR	128505	Argument	"""                <!-- Defaults: FieldCount=1, FieldOrder=0 if FieldCoding box not present -->\\n"""		127615	1					
ANR	128506	PrimaryExpression	"""                <!-- Defaults: FieldCount=1, FieldOrder=0 if FieldCoding box not present -->\\n"""		127615	0					
ANR	128507	ExpressionStatement	"fprintf ( xmlout , ""                <!-- Current implementation doesn't retain whether box was actually present. -->\\n"" )"	1072:12:48625:48762	127615	5	True				
ANR	128508	CallExpression	"fprintf ( xmlout , ""                <!-- Current implementation doesn't retain whether box was actually present. -->\\n"" )"		127615	0					
ANR	128509	Callee	fprintf		127615	0					
ANR	128510	Identifier	fprintf		127615	0					
ANR	128511	ArgumentList	xmlout		127615	1					
ANR	128512	Argument	xmlout		127615	0					
ANR	128513	Identifier	xmlout		127615	0					
ANR	128514	Argument	"""                <!-- Current implementation doesn't retain whether box was actually present. -->\\n"""		127615	1					
ANR	128515	PrimaryExpression	"""                <!-- Current implementation doesn't retain whether box was actually present. -->\\n"""		127615	0					
ANR	128516	ExpressionStatement	"fprintf ( xmlout , ""              </MJP2_OriginalFormat>\\n"" )"	1075:8:48782:48842	127615	48	True				
ANR	128517	CallExpression	"fprintf ( xmlout , ""              </MJP2_OriginalFormat>\\n"" )"		127615	0					
ANR	128518	Callee	fprintf		127615	0					
ANR	128519	Identifier	fprintf		127615	0					
ANR	128520	ArgumentList	xmlout		127615	1					
ANR	128521	Argument	xmlout		127615	0					
ANR	128522	Identifier	xmlout		127615	0					
ANR	128523	Argument	"""              </MJP2_OriginalFormat>\\n"""		127615	1					
ANR	128524	PrimaryExpression	"""              </MJP2_OriginalFormat>\\n"""		127615	0					
ANR	128525	ExpressionStatement	"fprintf ( xmlout , ""            </VisualSampleEntry>\\n"" )"	1076:8:48852:48908	127615	49	True				
ANR	128526	CallExpression	"fprintf ( xmlout , ""            </VisualSampleEntry>\\n"" )"		127615	0					
ANR	128527	Callee	fprintf		127615	0					
ANR	128528	Identifier	fprintf		127615	0					
ANR	128529	ArgumentList	xmlout		127615	1					
ANR	128530	Argument	xmlout		127615	0					
ANR	128531	Identifier	xmlout		127615	0					
ANR	128532	Argument	"""            </VisualSampleEntry>\\n"""		127615	1					
ANR	128533	PrimaryExpression	"""            </VisualSampleEntry>\\n"""		127615	0					
ANR	128534	BreakStatement	break ;	1077:8:48918:48923	127615	50	True				
ANR	128535	Label	case 1 :	1078:4:48929:48935	127615	51	True				
ANR	128536	Label	case 2 :	1079:4:48941:48947	127615	52	True				
ANR	128537	IfStatement	if ( notes )		127615	53					
ANR	128538	Condition	notes	1080:12:48961:48965	127615	0	True				
ANR	128539	Identifier	notes		127615	0					
ANR	128540	CompoundStatement		192:19:10313:10313	127615	1					
ANR	128541	ExpressionStatement	"fprintf ( xmlout , ""            <!-- mj2_to_metadata's data structure doesn't record this currently. -->\\n"" )"	1081:12:48982:49107	127615	0	True				
ANR	128542	CallExpression	"fprintf ( xmlout , ""            <!-- mj2_to_metadata's data structure doesn't record this currently. -->\\n"" )"		127615	0					
ANR	128543	Callee	fprintf		127615	0					
ANR	128544	Identifier	fprintf		127615	0					
ANR	128545	ArgumentList	xmlout		127615	1					
ANR	128546	Argument	xmlout		127615	0					
ANR	128547	Identifier	xmlout		127615	0					
ANR	128548	Argument	"""            <!-- mj2_to_metadata's data structure doesn't record this currently. -->\\n"""		127615	1					
ANR	128549	PrimaryExpression	"""            <!-- mj2_to_metadata's data structure doesn't record this currently. -->\\n"""		127615	0					
ANR	128550	BreakStatement	break ;	1084:8:49127:49132	127615	54	True				
ANR	128551	ExpressionStatement	"fprintf ( xmlout , ""            <TimeToSample BoxType=\\""stts\\"">\\n"" )"	1086:4:49144:49213	127615	6	True				
ANR	128552	CallExpression	"fprintf ( xmlout , ""            <TimeToSample BoxType=\\""stts\\"">\\n"" )"		127615	0					
ANR	128553	Callee	fprintf		127615	0					
ANR	128554	Identifier	fprintf		127615	0					
ANR	128555	ArgumentList	xmlout		127615	1					
ANR	128556	Argument	xmlout		127615	0					
ANR	128557	Identifier	xmlout		127615	0					
ANR	128558	Argument	"""            <TimeToSample BoxType=\\""stts\\"">\\n"""		127615	1					
ANR	128559	PrimaryExpression	"""            <TimeToSample BoxType=\\""stts\\"">\\n"""		127615	0					
ANR	128560	ExpressionStatement	"fprintf ( xmlout , ""              <SampleStatistics>\\n"" )"	1087:4:49219:49277	127615	7	True				
ANR	128561	CallExpression	"fprintf ( xmlout , ""              <SampleStatistics>\\n"" )"		127615	0					
ANR	128562	Callee	fprintf		127615	0					
ANR	128563	Identifier	fprintf		127615	0					
ANR	128564	ArgumentList	xmlout		127615	1					
ANR	128565	Argument	xmlout		127615	0					
ANR	128566	Identifier	xmlout		127615	0					
ANR	128567	Argument	"""              <SampleStatistics>\\n"""		127615	1					
ANR	128568	PrimaryExpression	"""              <SampleStatistics>\\n"""		127615	0					
ANR	128569	ExpressionStatement	"fprintf ( xmlout , ""                <TotalSamples>%d</TotalSamples>\\n"" , track -> num_samples )"	1088:4:49283:49388	127615	8	True				
ANR	128570	CallExpression	"fprintf ( xmlout , ""                <TotalSamples>%d</TotalSamples>\\n"" , track -> num_samples )"		127615	0					
ANR	128571	Callee	fprintf		127615	0					
ANR	128572	Identifier	fprintf		127615	0					
ANR	128573	ArgumentList	xmlout		127615	1					
ANR	128574	Argument	xmlout		127615	0					
ANR	128575	Identifier	xmlout		127615	0					
ANR	128576	Argument	"""                <TotalSamples>%d</TotalSamples>\\n"""		127615	1					
ANR	128577	PrimaryExpression	"""                <TotalSamples>%d</TotalSamples>\\n"""		127615	0					
ANR	128578	Argument	track -> num_samples		127615	2					
ANR	128579	PtrMemberAccess	track -> num_samples		127615	0					
ANR	128580	Identifier	track		127615	0					
ANR	128581	Identifier	num_samples		127615	1					
ANR	128582	IfStatement	if ( notes )		127615	9					
ANR	128583	Condition	notes	1090:8:49398:49402	127615	0	True				
ANR	128584	Identifier	notes		127615	0					
ANR	128585	CompoundStatement		202:15:10750:10750	127615	1					
ANR	128586	ExpressionStatement	"fprintf ( xmlout , ""                <!-- For video, gives the total frames in the track, by summing all entries in the Sample Table -->\\n"" )"	1091:8:49415:49567	127615	0	True				
ANR	128587	CallExpression	"fprintf ( xmlout , ""                <!-- For video, gives the total frames in the track, by summing all entries in the Sample Table -->\\n"" )"		127615	0					
ANR	128588	Callee	fprintf		127615	0					
ANR	128589	Identifier	fprintf		127615	0					
ANR	128590	ArgumentList	xmlout		127615	1					
ANR	128591	Argument	xmlout		127615	0					
ANR	128592	Identifier	xmlout		127615	0					
ANR	128593	Argument	"""                <!-- For video, gives the total frames in the track, by summing all entries in the Sample Table -->\\n"""		127615	1					
ANR	128594	PrimaryExpression	"""                <!-- For video, gives the total frames in the track, by summing all entries in the Sample Table -->\\n"""		127615	0					
ANR	128595	ExpressionStatement	"fprintf ( xmlout , ""              </SampleStatistics>\\n"" )"	1094:4:49579:49638	127615	10	True				
ANR	128596	CallExpression	"fprintf ( xmlout , ""              </SampleStatistics>\\n"" )"		127615	0					
ANR	128597	Callee	fprintf		127615	0					
ANR	128598	Identifier	fprintf		127615	0					
ANR	128599	ArgumentList	xmlout		127615	1					
ANR	128600	Argument	xmlout		127615	0					
ANR	128601	Identifier	xmlout		127615	0					
ANR	128602	Argument	"""              </SampleStatistics>\\n"""		127615	1					
ANR	128603	PrimaryExpression	"""              </SampleStatistics>\\n"""		127615	0					
ANR	128604	ExpressionStatement	"fprintf ( xmlout , ""              <SampleEntries EntryCount=\\""%d\\"">\\n"" , track -> num_tts )"	1095:4:49644:49745	127615	11	True				
ANR	128605	CallExpression	"fprintf ( xmlout , ""              <SampleEntries EntryCount=\\""%d\\"">\\n"" , track -> num_tts )"		127615	0					
ANR	128606	Callee	fprintf		127615	0					
ANR	128607	Identifier	fprintf		127615	0					
ANR	128608	ArgumentList	xmlout		127615	1					
ANR	128609	Argument	xmlout		127615	0					
ANR	128610	Identifier	xmlout		127615	0					
ANR	128611	Argument	"""              <SampleEntries EntryCount=\\""%d\\"">\\n"""		127615	1					
ANR	128612	PrimaryExpression	"""              <SampleEntries EntryCount=\\""%d\\"">\\n"""		127615	0					
ANR	128613	Argument	track -> num_tts		127615	2					
ANR	128614	PtrMemberAccess	track -> num_tts		127615	0					
ANR	128615	Identifier	track		127615	0					
ANR	128616	Identifier	num_tts		127615	1					
ANR	128617	ForStatement	for ( i = 0 ; i < track -> num_tts ; i ++ )		127615	12					
ANR	128618	ForInit	i = 0 ;	1097:9:49756:49761	127615	0	True				
ANR	128619	AssignmentExpression	i = 0		127615	0		=			
ANR	128620	Identifier	i		127615	0					
ANR	128621	PrimaryExpression	0		127615	1					
ANR	128622	Condition	i < track -> num_tts	1097:16:49763:49780	127615	1	True				
ANR	128623	RelationalExpression	i < track -> num_tts		127615	0		<			
ANR	128624	Identifier	i		127615	0					
ANR	128625	PtrMemberAccess	track -> num_tts		127615	1					
ANR	128626	Identifier	track		127615	0					
ANR	128627	Identifier	num_tts		127615	1					
ANR	128628	PostIncDecOperationExpression	i ++	1097:36:49783:49785	127615	2	True				
ANR	128629	Identifier	i		127615	0					
ANR	128630	IncDec	++		127615	1					
ANR	128631	CompoundStatement		209:41:11133:11133	127615	3					
ANR	128632	ExpressionStatement	"fprintf ( xmlout , ""                <Table Entry=\\""%u\\"" SampleCount=\\""%d\\"" SampleDelta=\\""%u\\"" />\\n"" , i + 1 , track -> tts [ i ] . sample_count , track -> tts [ i ] . sample_delta )"	1098:8:49798:49990	127615	0	True				
ANR	128633	CallExpression	"fprintf ( xmlout , ""                <Table Entry=\\""%u\\"" SampleCount=\\""%d\\"" SampleDelta=\\""%u\\"" />\\n"" , i + 1 , track -> tts [ i ] . sample_count , track -> tts [ i ] . sample_delta )"		127615	0					
ANR	128634	Callee	fprintf		127615	0					
ANR	128635	Identifier	fprintf		127615	0					
ANR	128636	ArgumentList	xmlout		127615	1					
ANR	128637	Argument	xmlout		127615	0					
ANR	128638	Identifier	xmlout		127615	0					
ANR	128639	Argument	"""                <Table Entry=\\""%u\\"" SampleCount=\\""%d\\"" SampleDelta=\\""%u\\"" />\\n"""		127615	1					
ANR	128640	PrimaryExpression	"""                <Table Entry=\\""%u\\"" SampleCount=\\""%d\\"" SampleDelta=\\""%u\\"" />\\n"""		127615	0					
ANR	128641	Argument	i + 1		127615	2					
ANR	128642	AdditiveExpression	i + 1		127615	0		+			
ANR	128643	Identifier	i		127615	0					
ANR	128644	PrimaryExpression	1		127615	1					
ANR	128645	Argument	track -> tts [ i ] . sample_count		127615	3					
ANR	128646	MemberAccess	track -> tts [ i ] . sample_count		127615	0					
ANR	128647	ArrayIndexing	track -> tts [ i ]		127615	0					
ANR	128648	PtrMemberAccess	track -> tts		127615	0					
ANR	128649	Identifier	track		127615	0					
ANR	128650	Identifier	tts		127615	1					
ANR	128651	Identifier	i		127615	1					
ANR	128652	Identifier	sample_count		127615	1					
ANR	128653	Argument	track -> tts [ i ] . sample_delta		127615	4					
ANR	128654	MemberAccess	track -> tts [ i ] . sample_delta		127615	0					
ANR	128655	ArrayIndexing	track -> tts [ i ]		127615	0					
ANR	128656	PtrMemberAccess	track -> tts		127615	0					
ANR	128657	Identifier	track		127615	0					
ANR	128658	Identifier	tts		127615	1					
ANR	128659	Identifier	i		127615	1					
ANR	128660	Identifier	sample_delta		127615	1					
ANR	128661	ExpressionStatement	"fprintf ( xmlout , ""              </SampleEntries>\\n"" )"	1102:4:50002:50058	127615	13	True				
ANR	128662	CallExpression	"fprintf ( xmlout , ""              </SampleEntries>\\n"" )"		127615	0					
ANR	128663	Callee	fprintf		127615	0					
ANR	128664	Identifier	fprintf		127615	0					
ANR	128665	ArgumentList	xmlout		127615	1					
ANR	128666	Argument	xmlout		127615	0					
ANR	128667	Identifier	xmlout		127615	0					
ANR	128668	Argument	"""              </SampleEntries>\\n"""		127615	1					
ANR	128669	PrimaryExpression	"""              </SampleEntries>\\n"""		127615	0					
ANR	128670	ExpressionStatement	"fprintf ( xmlout , ""            </TimeToSample>\\n"" )"	1103:4:50064:50117	127615	14	True				
ANR	128671	CallExpression	"fprintf ( xmlout , ""            </TimeToSample>\\n"" )"		127615	0					
ANR	128672	Callee	fprintf		127615	0					
ANR	128673	Identifier	fprintf		127615	0					
ANR	128674	ArgumentList	xmlout		127615	1					
ANR	128675	Argument	xmlout		127615	0					
ANR	128676	Identifier	xmlout		127615	0					
ANR	128677	Argument	"""            </TimeToSample>\\n"""		127615	1					
ANR	128678	PrimaryExpression	"""            </TimeToSample>\\n"""		127615	0					
ANR	128679	ExpressionStatement	"fprintf ( xmlout , ""            <SampleToChunk BoxType=\\""stsc\\"" Count=\\""%d\\"">\\n"" , track -> num_samplestochunk )"	1105:4:50124:50253	127615	15	True				
ANR	128680	CallExpression	"fprintf ( xmlout , ""            <SampleToChunk BoxType=\\""stsc\\"" Count=\\""%d\\"">\\n"" , track -> num_samplestochunk )"		127615	0					
ANR	128681	Callee	fprintf		127615	0					
ANR	128682	Identifier	fprintf		127615	0					
ANR	128683	ArgumentList	xmlout		127615	1					
ANR	128684	Argument	xmlout		127615	0					
ANR	128685	Identifier	xmlout		127615	0					
ANR	128686	Argument	"""            <SampleToChunk BoxType=\\""stsc\\"" Count=\\""%d\\"">\\n"""		127615	1					
ANR	128687	PrimaryExpression	"""            <SampleToChunk BoxType=\\""stsc\\"" Count=\\""%d\\"">\\n"""		127615	0					
ANR	128688	Argument	track -> num_samplestochunk		127615	2					
ANR	128689	PtrMemberAccess	track -> num_samplestochunk		127615	0					
ANR	128690	Identifier	track		127615	0					
ANR	128691	Identifier	num_samplestochunk		127615	1					
ANR	128692	ForStatement	for ( i = 0 ; i < track -> num_samplestochunk ; i ++ )		127615	16					
ANR	128693	ForInit	i = 0 ;	1108:9:50264:50269	127615	0	True				
ANR	128694	AssignmentExpression	i = 0		127615	0		=			
ANR	128695	Identifier	i		127615	0					
ANR	128696	PrimaryExpression	0		127615	1					
ANR	128697	Condition	i < track -> num_samplestochunk	1108:16:50271:50299	127615	1	True				
ANR	128698	RelationalExpression	i < track -> num_samplestochunk		127615	0		<			
ANR	128699	Identifier	i		127615	0					
ANR	128700	PtrMemberAccess	track -> num_samplestochunk		127615	1					
ANR	128701	Identifier	track		127615	0					
ANR	128702	Identifier	num_samplestochunk		127615	1					
ANR	128703	PostIncDecOperationExpression	i ++	1108:47:50302:50304	127615	2	True				
ANR	128704	Identifier	i		127615	0					
ANR	128705	IncDec	++		127615	1					
ANR	128706	CompoundStatement		220:52:11652:11652	127615	3					
ANR	128707	ExpressionStatement	"fprintf ( xmlout , ""              <FirstChunk>%u</FirstChunk>\\n"" , track -> sampletochunk [ i ] . first_chunk )"	1109:8:50317:50435	127615	0	True				
ANR	128708	CallExpression	"fprintf ( xmlout , ""              <FirstChunk>%u</FirstChunk>\\n"" , track -> sampletochunk [ i ] . first_chunk )"		127615	0					
ANR	128709	Callee	fprintf		127615	0					
ANR	128710	Identifier	fprintf		127615	0					
ANR	128711	ArgumentList	xmlout		127615	1					
ANR	128712	Argument	xmlout		127615	0					
ANR	128713	Identifier	xmlout		127615	0					
ANR	128714	Argument	"""              <FirstChunk>%u</FirstChunk>\\n"""		127615	1					
ANR	128715	PrimaryExpression	"""              <FirstChunk>%u</FirstChunk>\\n"""		127615	0					
ANR	128716	Argument	track -> sampletochunk [ i ] . first_chunk		127615	2					
ANR	128717	MemberAccess	track -> sampletochunk [ i ] . first_chunk		127615	0					
ANR	128718	ArrayIndexing	track -> sampletochunk [ i ]		127615	0					
ANR	128719	PtrMemberAccess	track -> sampletochunk		127615	0					
ANR	128720	Identifier	track		127615	0					
ANR	128721	Identifier	sampletochunk		127615	1					
ANR	128722	Identifier	i		127615	1					
ANR	128723	Identifier	first_chunk		127615	1					
ANR	128724	ExpressionStatement	"fprintf ( xmlout , ""              <SamplesPerChunk>%u</SamplesPerChunk>\\n"" , track -> sampletochunk [ i ] . samples_per_chunk )"	1111:8:50459:50593	127615	1	True				
ANR	128725	CallExpression	"fprintf ( xmlout , ""              <SamplesPerChunk>%u</SamplesPerChunk>\\n"" , track -> sampletochunk [ i ] . samples_per_chunk )"		127615	0					
ANR	128726	Callee	fprintf		127615	0					
ANR	128727	Identifier	fprintf		127615	0					
ANR	128728	ArgumentList	xmlout		127615	1					
ANR	128729	Argument	xmlout		127615	0					
ANR	128730	Identifier	xmlout		127615	0					
ANR	128731	Argument	"""              <SamplesPerChunk>%u</SamplesPerChunk>\\n"""		127615	1					
ANR	128732	PrimaryExpression	"""              <SamplesPerChunk>%u</SamplesPerChunk>\\n"""		127615	0					
ANR	128733	Argument	track -> sampletochunk [ i ] . samples_per_chunk		127615	2					
ANR	128734	MemberAccess	track -> sampletochunk [ i ] . samples_per_chunk		127615	0					
ANR	128735	ArrayIndexing	track -> sampletochunk [ i ]		127615	0					
ANR	128736	PtrMemberAccess	track -> sampletochunk		127615	0					
ANR	128737	Identifier	track		127615	0					
ANR	128738	Identifier	sampletochunk		127615	1					
ANR	128739	Identifier	i		127615	1					
ANR	128740	Identifier	samples_per_chunk		127615	1					
ANR	128741	ExpressionStatement	"fprintf ( xmlout , ""              <SampleDescrIndex>%u</SampleDescrIndex>\\n"" , track -> sampletochunk [ i ] . sample_descr_idx )"	1113:8:50617:50752	127615	2	True				
ANR	128742	CallExpression	"fprintf ( xmlout , ""              <SampleDescrIndex>%u</SampleDescrIndex>\\n"" , track -> sampletochunk [ i ] . sample_descr_idx )"		127615	0					
ANR	128743	Callee	fprintf		127615	0					
ANR	128744	Identifier	fprintf		127615	0					
ANR	128745	ArgumentList	xmlout		127615	1					
ANR	128746	Argument	xmlout		127615	0					
ANR	128747	Identifier	xmlout		127615	0					
ANR	128748	Argument	"""              <SampleDescrIndex>%u</SampleDescrIndex>\\n"""		127615	1					
ANR	128749	PrimaryExpression	"""              <SampleDescrIndex>%u</SampleDescrIndex>\\n"""		127615	0					
ANR	128750	Argument	track -> sampletochunk [ i ] . sample_descr_idx		127615	2					
ANR	128751	MemberAccess	track -> sampletochunk [ i ] . sample_descr_idx		127615	0					
ANR	128752	ArrayIndexing	track -> sampletochunk [ i ]		127615	0					
ANR	128753	PtrMemberAccess	track -> sampletochunk		127615	0					
ANR	128754	Identifier	track		127615	0					
ANR	128755	Identifier	sampletochunk		127615	1					
ANR	128756	Identifier	i		127615	1					
ANR	128757	Identifier	sample_descr_idx		127615	1					
ANR	128758	ExpressionStatement	"fprintf ( xmlout , ""            </SampleToChunk>\\n"" )"	1116:4:50778:50832	127615	17	True				
ANR	128759	CallExpression	"fprintf ( xmlout , ""            </SampleToChunk>\\n"" )"		127615	0					
ANR	128760	Callee	fprintf		127615	0					
ANR	128761	Identifier	fprintf		127615	0					
ANR	128762	ArgumentList	xmlout		127615	1					
ANR	128763	Argument	xmlout		127615	0					
ANR	128764	Identifier	xmlout		127615	0					
ANR	128765	Argument	"""            </SampleToChunk>\\n"""		127615	1					
ANR	128766	PrimaryExpression	"""            </SampleToChunk>\\n"""		127615	0					
ANR	128767	ExpressionStatement	"fprintf ( xmlout , ""            <SampleSize BoxType=\\""stsz\\"">\\n"" )"	1119:4:50955:51022	127615	18	True				
ANR	128768	CallExpression	"fprintf ( xmlout , ""            <SampleSize BoxType=\\""stsz\\"">\\n"" )"		127615	0					
ANR	128769	Callee	fprintf		127615	0					
ANR	128770	Identifier	fprintf		127615	0					
ANR	128771	ArgumentList	xmlout		127615	1					
ANR	128772	Argument	xmlout		127615	0					
ANR	128773	Identifier	xmlout		127615	0					
ANR	128774	Argument	"""            <SampleSize BoxType=\\""stsz\\"">\\n"""		127615	1					
ANR	128775	PrimaryExpression	"""            <SampleSize BoxType=\\""stsz\\"">\\n"""		127615	0					
ANR	128776	IfStatement	if ( track -> same_sample_size )		127615	19					
ANR	128777	Condition	track -> same_sample_size	1120:8:51032:51054	127615	0	True				
ANR	128778	PtrMemberAccess	track -> same_sample_size		127615	0					
ANR	128779	Identifier	track		127615	0					
ANR	128780	Identifier	same_sample_size		127615	1					
ANR	128781	CompoundStatement		232:33:12402:12402	127615	1					
ANR	128782	ExpressionStatement	"fprintf ( xmlout , ""              <Sample_Size>%u</Sample_Size>\\n"" , track -> sample [ 0 ] . sample_size )"	1122:8:51153:51266	127615	0	True				
ANR	128783	CallExpression	"fprintf ( xmlout , ""              <Sample_Size>%u</Sample_Size>\\n"" , track -> sample [ 0 ] . sample_size )"		127615	0					
ANR	128784	Callee	fprintf		127615	0					
ANR	128785	Identifier	fprintf		127615	0					
ANR	128786	ArgumentList	xmlout		127615	1					
ANR	128787	Argument	xmlout		127615	0					
ANR	128788	Identifier	xmlout		127615	0					
ANR	128789	Argument	"""              <Sample_Size>%u</Sample_Size>\\n"""		127615	1					
ANR	128790	PrimaryExpression	"""              <Sample_Size>%u</Sample_Size>\\n"""		127615	0					
ANR	128791	Argument	track -> sample [ 0 ] . sample_size		127615	2					
ANR	128792	MemberAccess	track -> sample [ 0 ] . sample_size		127615	0					
ANR	128793	ArrayIndexing	track -> sample [ 0 ]		127615	0					
ANR	128794	PtrMemberAccess	track -> sample		127615	0					
ANR	128795	Identifier	track		127615	0					
ANR	128796	Identifier	sample		127615	1					
ANR	128797	PrimaryExpression	0		127615	1					
ANR	128798	Identifier	sample_size		127615	1					
ANR	128799	IfStatement	if ( notes )		127615	1					
ANR	128800	Condition	notes	1124:12:51280:51284	127615	0	True				
ANR	128801	Identifier	notes		127615	0					
ANR	128802	CompoundStatement		236:19:12632:12632	127615	1					
ANR	128803	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Non-zero value means all samples have that size. -->\\n"" )"	1125:12:51301:51413	127615	0	True				
ANR	128804	CallExpression	"fprintf ( xmlout , ""              <!-- Non-zero value means all samples have that size. -->\\n"" )"		127615	0					
ANR	128805	Callee	fprintf		127615	0					
ANR	128806	Identifier	fprintf		127615	0					
ANR	128807	ArgumentList	xmlout		127615	1					
ANR	128808	Argument	xmlout		127615	0					
ANR	128809	Identifier	xmlout		127615	0					
ANR	128810	Argument	"""              <!-- Non-zero value means all samples have that size. -->\\n"""		127615	1					
ANR	128811	PrimaryExpression	"""              <!-- Non-zero value means all samples have that size. -->\\n"""		127615	0					
ANR	128812	ExpressionStatement	"fprintf ( xmlout , ""              <!-- So <Sample_Count> (aka Entry_Count in std.) has no meaning, is suppressed from this output, and no table follows. -->\\n"" )"	1127:12:51427:51604	127615	1	True				
ANR	128813	CallExpression	"fprintf ( xmlout , ""              <!-- So <Sample_Count> (aka Entry_Count in std.) has no meaning, is suppressed from this output, and no table follows. -->\\n"" )"		127615	0					
ANR	128814	Callee	fprintf		127615	0					
ANR	128815	Identifier	fprintf		127615	0					
ANR	128816	ArgumentList	xmlout		127615	1					
ANR	128817	Argument	xmlout		127615	0					
ANR	128818	Identifier	xmlout		127615	0					
ANR	128819	Argument	"""              <!-- So <Sample_Count> (aka Entry_Count in std.) has no meaning, is suppressed from this output, and no table follows. -->\\n"""		127615	1					
ANR	128820	PrimaryExpression	"""              <!-- So <Sample_Count> (aka Entry_Count in std.) has no meaning, is suppressed from this output, and no table follows. -->\\n"""		127615	0					
ANR	128821	ElseStatement	else		127615	0					
ANR	128822	CompoundStatement		242:11:12972:12972	127615	0					
ANR	128823	ExpressionStatement	"fprintf ( xmlout , ""              <Sample_Size>0</Sample_Size>\\n"" )"	1131:8:51637:51703	127615	0	True				
ANR	128824	CallExpression	"fprintf ( xmlout , ""              <Sample_Size>0</Sample_Size>\\n"" )"		127615	0					
ANR	128825	Callee	fprintf		127615	0					
ANR	128826	Identifier	fprintf		127615	0					
ANR	128827	ArgumentList	xmlout		127615	1					
ANR	128828	Argument	xmlout		127615	0					
ANR	128829	Identifier	xmlout		127615	0					
ANR	128830	Argument	"""              <Sample_Size>0</Sample_Size>\\n"""		127615	1					
ANR	128831	PrimaryExpression	"""              <Sample_Size>0</Sample_Size>\\n"""		127615	0					
ANR	128832	IfStatement	if ( notes )		127615	1					
ANR	128833	Condition	notes	1132:12:51717:51721	127615	0	True				
ANR	128834	Identifier	notes		127615	0					
ANR	128835	IfStatement	if ( sampletables )		127615	1					
ANR	128836	Condition	sampletables	1133:16:51740:51751	127615	0	True				
ANR	128837	Identifier	sampletables		127615	0					
ANR	128838	CompoundStatement		245:30:13099:13099	127615	1					
ANR	128839	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Zero value means samples have different sizes, given in table next of length Sample_Count (aka Entry_Count in std). -->\\n"" )"	1134:16:51772:51955	127615	0	True				
ANR	128840	CallExpression	"fprintf ( xmlout , ""              <!-- Zero value means samples have different sizes, given in table next of length Sample_Count (aka Entry_Count in std). -->\\n"" )"		127615	0					
ANR	128841	Callee	fprintf		127615	0					
ANR	128842	Identifier	fprintf		127615	0					
ANR	128843	ArgumentList	xmlout		127615	1					
ANR	128844	Argument	xmlout		127615	0					
ANR	128845	Identifier	xmlout		127615	0					
ANR	128846	Argument	"""              <!-- Zero value means samples have different sizes, given in table next of length Sample_Count (aka Entry_Count in std). -->\\n"""		127615	1					
ANR	128847	PrimaryExpression	"""              <!-- Zero value means samples have different sizes, given in table next of length Sample_Count (aka Entry_Count in std). -->\\n"""		127615	0					
ANR	128848	ElseStatement	else		127615	0					
ANR	128849	CompoundStatement		248:19:13321:13321	127615	0					
ANR	128850	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Zero value means samples have different sizes, given in table (not shown) of length Sample_Count (aka Entry_Count in std). -->\\n"" )"	1137:16:51994:52184	127615	0	True				
ANR	128851	CallExpression	"fprintf ( xmlout , ""              <!-- Zero value means samples have different sizes, given in table (not shown) of length Sample_Count (aka Entry_Count in std). -->\\n"" )"		127615	0					
ANR	128852	Callee	fprintf		127615	0					
ANR	128853	Identifier	fprintf		127615	0					
ANR	128854	ArgumentList	xmlout		127615	1					
ANR	128855	Argument	xmlout		127615	0					
ANR	128856	Identifier	xmlout		127615	0					
ANR	128857	Argument	"""              <!-- Zero value means samples have different sizes, given in table (not shown) of length Sample_Count (aka Entry_Count in std). -->\\n"""		127615	1					
ANR	128858	PrimaryExpression	"""              <!-- Zero value means samples have different sizes, given in table (not shown) of length Sample_Count (aka Entry_Count in std). -->\\n"""		127615	0					
ANR	128859	ExpressionStatement	"fprintf ( xmlout , ""              <Sample_Count>%u</Sample_Count>\\n"" , track -> num_samples )"	1140:8:52208:52313	127615	2	True				
ANR	128860	CallExpression	"fprintf ( xmlout , ""              <Sample_Count>%u</Sample_Count>\\n"" , track -> num_samples )"		127615	0					
ANR	128861	Callee	fprintf		127615	0					
ANR	128862	Identifier	fprintf		127615	0					
ANR	128863	ArgumentList	xmlout		127615	1					
ANR	128864	Argument	xmlout		127615	0					
ANR	128865	Identifier	xmlout		127615	0					
ANR	128866	Argument	"""              <Sample_Count>%u</Sample_Count>\\n"""		127615	1					
ANR	128867	PrimaryExpression	"""              <Sample_Count>%u</Sample_Count>\\n"""		127615	0					
ANR	128868	Argument	track -> num_samples		127615	2					
ANR	128869	PtrMemberAccess	track -> num_samples		127615	0					
ANR	128870	Identifier	track		127615	0					
ANR	128871	Identifier	num_samples		127615	1					
ANR	128872	IfStatement	if ( sampletables )		127615	3					
ANR	128873	Condition	sampletables	1142:12:52327:52338	127615	0	True				
ANR	128874	Identifier	sampletables		127615	0					
ANR	128875	ForStatement	for ( i = 0 ; i < ( int ) track -> num_samples ; i ++ )		127615	1					
ANR	128876	ForInit	i = 0 ;	1143:17:52358:52363	127615	0	True				
ANR	128877	AssignmentExpression	i = 0		127615	0		=			
ANR	128878	Identifier	i		127615	0					
ANR	128879	PrimaryExpression	0		127615	1					
ANR	128880	Condition	i < ( int ) track -> num_samples	1143:24:52365:52391	127615	1	True				
ANR	128881	RelationalExpression	i < ( int ) track -> num_samples		127615	0		<			
ANR	128882	Identifier	i		127615	0					
ANR	128883	CastExpression	( int ) track -> num_samples		127615	1					
ANR	128884	CastTarget	int		127615	0					
ANR	128885	PtrMemberAccess	track -> num_samples		127615	1					
ANR	128886	Identifier	track		127615	0					
ANR	128887	Identifier	num_samples		127615	1					
ANR	128888	PostIncDecOperationExpression	i ++	1143:53:52394:52396	127615	2	True				
ANR	128889	Identifier	i		127615	0					
ANR	128890	IncDec	++		127615	1					
ANR	128891	CompoundStatement		255:58:13744:13744	127615	3					
ANR	128892	ExpressionStatement	"fprintf ( xmlout , ""              <EntrySize Num=\\""%u\\"">%u</EntrySize>\\n"" , i + 1 , track -> sample [ i ] . sample_size )"	1144:16:52417:52550	127615	0	True				
ANR	128893	CallExpression	"fprintf ( xmlout , ""              <EntrySize Num=\\""%u\\"">%u</EntrySize>\\n"" , i + 1 , track -> sample [ i ] . sample_size )"		127615	0					
ANR	128894	Callee	fprintf		127615	0					
ANR	128895	Identifier	fprintf		127615	0					
ANR	128896	ArgumentList	xmlout		127615	1					
ANR	128897	Argument	xmlout		127615	0					
ANR	128898	Identifier	xmlout		127615	0					
ANR	128899	Argument	"""              <EntrySize Num=\\""%u\\"">%u</EntrySize>\\n"""		127615	1					
ANR	128900	PrimaryExpression	"""              <EntrySize Num=\\""%u\\"">%u</EntrySize>\\n"""		127615	0					
ANR	128901	Argument	i + 1		127615	2					
ANR	128902	AdditiveExpression	i + 1		127615	0		+			
ANR	128903	Identifier	i		127615	0					
ANR	128904	PrimaryExpression	1		127615	1					
ANR	128905	Argument	track -> sample [ i ] . sample_size		127615	3					
ANR	128906	MemberAccess	track -> sample [ i ] . sample_size		127615	0					
ANR	128907	ArrayIndexing	track -> sample [ i ]		127615	0					
ANR	128908	PtrMemberAccess	track -> sample		127615	0					
ANR	128909	Identifier	track		127615	0					
ANR	128910	Identifier	sample		127615	1					
ANR	128911	Identifier	i		127615	1					
ANR	128912	Identifier	sample_size		127615	1					
ANR	128913	ExpressionStatement	"fprintf ( xmlout , ""            </SampleSize>\\n"" )"	1148:4:52576:52627	127615	20	True				
ANR	128914	CallExpression	"fprintf ( xmlout , ""            </SampleSize>\\n"" )"		127615	0					
ANR	128915	Callee	fprintf		127615	0					
ANR	128916	Identifier	fprintf		127615	0					
ANR	128917	ArgumentList	xmlout		127615	1					
ANR	128918	Argument	xmlout		127615	0					
ANR	128919	Identifier	xmlout		127615	0					
ANR	128920	Argument	"""            </SampleSize>\\n"""		127615	1					
ANR	128921	PrimaryExpression	"""            </SampleSize>\\n"""		127615	0					
ANR	128922	ExpressionStatement	"fprintf ( xmlout , ""            <ChunkOffset BoxType=\\""stco\\"">\\n"" )"	1150:4:52634:52702	127615	21	True				
ANR	128923	CallExpression	"fprintf ( xmlout , ""            <ChunkOffset BoxType=\\""stco\\"">\\n"" )"		127615	0					
ANR	128924	Callee	fprintf		127615	0					
ANR	128925	Identifier	fprintf		127615	0					
ANR	128926	ArgumentList	xmlout		127615	1					
ANR	128927	Argument	xmlout		127615	0					
ANR	128928	Identifier	xmlout		127615	0					
ANR	128929	Argument	"""            <ChunkOffset BoxType=\\""stco\\"">\\n"""		127615	1					
ANR	128930	PrimaryExpression	"""            <ChunkOffset BoxType=\\""stco\\"">\\n"""		127615	0					
ANR	128931	ExpressionStatement	"fprintf ( xmlout , ""              <EntryCount>%u</EntryCount>\\n"" , track -> num_chunks )"	1152:4:52767:52865	127615	22	True				
ANR	128932	CallExpression	"fprintf ( xmlout , ""              <EntryCount>%u</EntryCount>\\n"" , track -> num_chunks )"		127615	0					
ANR	128933	Callee	fprintf		127615	0					
ANR	128934	Identifier	fprintf		127615	0					
ANR	128935	ArgumentList	xmlout		127615	1					
ANR	128936	Argument	xmlout		127615	0					
ANR	128937	Identifier	xmlout		127615	0					
ANR	128938	Argument	"""              <EntryCount>%u</EntryCount>\\n"""		127615	1					
ANR	128939	PrimaryExpression	"""              <EntryCount>%u</EntryCount>\\n"""		127615	0					
ANR	128940	Argument	track -> num_chunks		127615	2					
ANR	128941	PtrMemberAccess	track -> num_chunks		127615	0					
ANR	128942	Identifier	track		127615	0					
ANR	128943	Identifier	num_chunks		127615	1					
ANR	128944	IfStatement	if ( notes )		127615	23					
ANR	128945	Condition	notes	1154:8:52875:52879	127615	0	True				
ANR	128946	Identifier	notes		127615	0					
ANR	128947	CompoundStatement		266:15:14227:14227	127615	1					
ANR	128948	ExpressionStatement	"fprintf ( xmlout , ""              <!-- For this implementation, EntryCount shown is one calculated during file read of <SampleToChunk> data. -->\\n"" )"	1155:8:52892:53053	127615	0	True				
ANR	128949	CallExpression	"fprintf ( xmlout , ""              <!-- For this implementation, EntryCount shown is one calculated during file read of <SampleToChunk> data. -->\\n"" )"		127615	0					
ANR	128950	Callee	fprintf		127615	0					
ANR	128951	Identifier	fprintf		127615	0					
ANR	128952	ArgumentList	xmlout		127615	1					
ANR	128953	Argument	xmlout		127615	0					
ANR	128954	Identifier	xmlout		127615	0					
ANR	128955	Argument	"""              <!-- For this implementation, EntryCount shown is one calculated during file read of <SampleToChunk> data. -->\\n"""		127615	1					
ANR	128956	PrimaryExpression	"""              <!-- For this implementation, EntryCount shown is one calculated during file read of <SampleToChunk> data. -->\\n"""		127615	0					
ANR	128957	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Implementation will report failure during file read of <ChunkOffset> data if read entry-count disagrees. -->\\n"" )"	1157:8:53063:53227	127615	1	True				
ANR	128958	CallExpression	"fprintf ( xmlout , ""              <!-- Implementation will report failure during file read of <ChunkOffset> data if read entry-count disagrees. -->\\n"" )"		127615	0					
ANR	128959	Callee	fprintf		127615	0					
ANR	128960	Identifier	fprintf		127615	0					
ANR	128961	ArgumentList	xmlout		127615	1					
ANR	128962	Argument	xmlout		127615	0					
ANR	128963	Identifier	xmlout		127615	0					
ANR	128964	Argument	"""              <!-- Implementation will report failure during file read of <ChunkOffset> data if read entry-count disagrees. -->\\n"""		127615	1					
ANR	128965	PrimaryExpression	"""              <!-- Implementation will report failure during file read of <ChunkOffset> data if read entry-count disagrees. -->\\n"""		127615	0					
ANR	128966	IfStatement	if ( sampletables )		127615	24					
ANR	128967	Condition	sampletables	1160:8:53243:53254	127615	0	True				
ANR	128968	Identifier	sampletables		127615	0					
ANR	128969	ForStatement	for ( i = 0 ; i < ( int ) track -> num_chunks ; i ++ )		127615	1					
ANR	128970	ForInit	i = 0 ;	1161:13:53270:53275	127615	0	True				
ANR	128971	AssignmentExpression	i = 0		127615	0		=			
ANR	128972	Identifier	i		127615	0					
ANR	128973	PrimaryExpression	0		127615	1					
ANR	128974	Condition	i < ( int ) track -> num_chunks	1161:20:53277:53302	127615	1	True				
ANR	128975	RelationalExpression	i < ( int ) track -> num_chunks		127615	0		<			
ANR	128976	Identifier	i		127615	0					
ANR	128977	CastExpression	( int ) track -> num_chunks		127615	1					
ANR	128978	CastTarget	int		127615	0					
ANR	128979	PtrMemberAccess	track -> num_chunks		127615	1					
ANR	128980	Identifier	track		127615	0					
ANR	128981	Identifier	num_chunks		127615	1					
ANR	128982	PostIncDecOperationExpression	i ++	1161:48:53305:53307	127615	2	True				
ANR	128983	Identifier	i		127615	0					
ANR	128984	IncDec	++		127615	1					
ANR	128985	CompoundStatement		273:53:14655:14655	127615	3					
ANR	128986	ExpressionStatement	"fprintf ( xmlout , ""              <Chunk_Offset Num=\\""%d\\"">%u</Chunk_Offset>\\n"" , i + 1 , track -> chunk [ i ] . offset )"	1162:12:53324:53453	127615	0	True				
ANR	128987	CallExpression	"fprintf ( xmlout , ""              <Chunk_Offset Num=\\""%d\\"">%u</Chunk_Offset>\\n"" , i + 1 , track -> chunk [ i ] . offset )"		127615	0					
ANR	128988	Callee	fprintf		127615	0					
ANR	128989	Identifier	fprintf		127615	0					
ANR	128990	ArgumentList	xmlout		127615	1					
ANR	128991	Argument	xmlout		127615	0					
ANR	128992	Identifier	xmlout		127615	0					
ANR	128993	Argument	"""              <Chunk_Offset Num=\\""%d\\"">%u</Chunk_Offset>\\n"""		127615	1					
ANR	128994	PrimaryExpression	"""              <Chunk_Offset Num=\\""%d\\"">%u</Chunk_Offset>\\n"""		127615	0					
ANR	128995	Argument	i + 1		127615	2					
ANR	128996	AdditiveExpression	i + 1		127615	0		+			
ANR	128997	Identifier	i		127615	0					
ANR	128998	PrimaryExpression	1		127615	1					
ANR	128999	Argument	track -> chunk [ i ] . offset		127615	3					
ANR	129000	MemberAccess	track -> chunk [ i ] . offset		127615	0					
ANR	129001	ArrayIndexing	track -> chunk [ i ]		127615	0					
ANR	129002	PtrMemberAccess	track -> chunk		127615	0					
ANR	129003	Identifier	track		127615	0					
ANR	129004	Identifier	chunk		127615	1					
ANR	129005	Identifier	i		127615	1					
ANR	129006	Identifier	offset		127615	1					
ANR	129007	ExpressionStatement	"fprintf ( xmlout , ""            </ChunkOffset>\\n"" )"	1165:4:53469:53521	127615	25	True				
ANR	129008	CallExpression	"fprintf ( xmlout , ""            </ChunkOffset>\\n"" )"		127615	0					
ANR	129009	Callee	fprintf		127615	0					
ANR	129010	Identifier	fprintf		127615	0					
ANR	129011	ArgumentList	xmlout		127615	1					
ANR	129012	Argument	xmlout		127615	0					
ANR	129013	Identifier	xmlout		127615	0					
ANR	129014	Argument	"""            </ChunkOffset>\\n"""		127615	1					
ANR	129015	PrimaryExpression	"""            </ChunkOffset>\\n"""		127615	0					
ANR	129016	ExpressionStatement	"fprintf ( xmlout , ""          </SampleTable>\\n"" )"	1167:4:53528:53578	127615	26	True				
ANR	129017	CallExpression	"fprintf ( xmlout , ""          </SampleTable>\\n"" )"		127615	0					
ANR	129018	Callee	fprintf		127615	0					
ANR	129019	Identifier	fprintf		127615	0					
ANR	129020	ArgumentList	xmlout		127615	1					
ANR	129021	Argument	xmlout		127615	0					
ANR	129022	Identifier	xmlout		127615	0					
ANR	129023	Argument	"""          </SampleTable>\\n"""		127615	1					
ANR	129024	PrimaryExpression	"""          </SampleTable>\\n"""		127615	0					
ANR	129025	ReturnType	void		127615	1					
ANR	129026	Identifier	xml_write_stbl		127615	2					
ANR	129027	ParameterList	"FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum"		127615	3					
ANR	129028	Parameter	FILE * file	887:20:38572:38581	127615	0	True				
ANR	129029	ParameterType	FILE *		127615	0					
ANR	129030	Identifier	file		127615	1					
ANR	129031	Parameter	FILE * xmlout	887:32:38584:38595	127615	1	True				
ANR	129032	ParameterType	FILE *		127615	0					
ANR	129033	Identifier	xmlout		127615	1					
ANR	129034	Parameter	mj2_tk_t * track	887:46:38598:38612	127615	2	True				
ANR	129035	ParameterType	mj2_tk_t *		127615	0					
ANR	129036	Identifier	track		127615	1					
ANR	129037	Parameter	unsigned int tnum	888:20:38635:38651	127615	3	True				
ANR	129038	ParameterType	unsigned int		127615	0					
ANR	129039	Identifier	tnum		127615	1					
ANR	129040	CFGEntryNode	ENTRY		127615		True				
ANR	129041	CFGExitNode	EXIT		127615		True				
ANR	129042	Symbol	notes		127615						
ANR	129043	Symbol	& track -> jp2_struct		127615						
ANR	129044	Symbol	track -> sampletochunk [ i ] . sample_descr_idx		127615						
ANR	129045	Symbol	* * track		127615						
ANR	129046	Symbol	buf33		127615						
ANR	129047	Symbol	track -> fieldorder		127615						
ANR	129048	Symbol	track -> sample		127615						
ANR	129049	Symbol	track -> sampletochunk		127615						
ANR	129050	Symbol	track -> fieldcount		127615						
ANR	129051	Symbol	track -> hsub		127615						
ANR	129052	Symbol	len		127615						
ANR	129053	Symbol	track -> compressorname		127615						
ANR	129054	Symbol	track -> chunk		127615						
ANR	129055	Symbol	track -> num_br		127615						
ANR	129056	Symbol	track -> num_jp2x		127615						
ANR	129057	Symbol	* track -> jp2xdata		127615						
ANR	129058	Symbol	* track -> tts		127615						
ANR	129059	Symbol	* buf		127615						
ANR	129060	Symbol	tnum		127615						
ANR	129061	Symbol	* track -> compressorname		127615						
ANR	129062	Symbol	raw		127615						
ANR	129063	Symbol	* track		127615						
ANR	129064	Symbol	xmlout		127615						
ANR	129065	Symbol	track -> num_samplestochunk		127615						
ANR	129066	Symbol	track -> num_chunks		127615						
ANR	129067	Symbol	track -> or_fieldcount		127615						
ANR	129068	Symbol	track -> tts		127615						
ANR	129069	Symbol	track -> depth		127615						
ANR	129070	Symbol	track -> sample [ i ] . sample_size		127615						
ANR	129071	Symbol	track -> vertresolution		127615						
ANR	129072	Symbol	track -> sample [ 0 ] . sample_size		127615						
ANR	129073	Symbol	track -> hoff		127615						
ANR	129074	Symbol	track -> tts [ i ] . sample_count		127615						
ANR	129075	Symbol	track -> same_sample_size		127615						
ANR	129076	Symbol	track -> vsub		127615						
ANR	129077	Symbol	track -> br		127615						
ANR	129078	Symbol	track -> track_type		127615						
ANR	129079	Symbol	track -> sampletochunk [ i ] . first_chunk		127615						
ANR	129080	Symbol	file		127615						
ANR	129081	Symbol	track -> or_fieldorder		127615						
ANR	129082	Symbol	track -> horizresolution		127615						
ANR	129083	Symbol	track -> jp2xdata		127615						
ANR	129084	Symbol	track		127615						
ANR	129085	Symbol	derived		127615						
ANR	129086	Symbol	* buf33		127615						
ANR	129087	Symbol	* track -> chunk		127615						
ANR	129088	Symbol	track -> h		127615						
ANR	129089	Symbol	track -> tts [ i ] . sample_delta		127615						
ANR	129090	Symbol	* track -> sample		127615						
ANR	129091	Symbol	i		127615						
ANR	129092	Symbol	* track -> br		127615						
ANR	129093	Symbol	track -> chunk [ i ] . offset		127615						
ANR	129094	Symbol	buf		127615						
ANR	129095	Symbol	* i		127615						
ANR	129096	Symbol	track -> w		127615						
ANR	129097	Symbol	sampletables		127615						
ANR	129098	Symbol	track -> voff		127615						
ANR	129099	Symbol	track -> num_samples		127615						
ANR	129100	Symbol	track -> num_tts		127615						
ANR	129101	Symbol	track -> sampletochunk [ i ] . samples_per_chunk		127615						
ANR	129102	Symbol	* track -> sampletochunk		127615						
ANR	129103	Symbol	* len		127615						
ANR	129104	Function	xml_out_frame	1172:0:53604:61961							
ANR	129105	FunctionDef	"xml_out_frame (FILE * file , FILE * xmlout , mj2_sample_t * sample , unsigned int snum , opj_event_mgr_t * event_mgr)"		129104	0					
ANR	129106	CompoundStatement		1174:0:53735:61961	129104	0					
ANR	129107	IdentifierDeclStatement	opj_dparameters_t parameters ;	1175:4:53741:53769	129104	0	True				
ANR	129108	IdentifierDecl	parameters		129104	0					
ANR	129109	IdentifierDeclType	opj_dparameters_t		129104	0					
ANR	129110	Identifier	parameters		129104	1					
ANR	129111	IdentifierDeclStatement	opj_image_t * img ;	1176:4:53808:53824	129104	1	True				
ANR	129112	IdentifierDecl	* img		129104	0					
ANR	129113	IdentifierDeclType	opj_image_t *		129104	0					
ANR	129114	Identifier	img		129104	1					
ANR	129115	IdentifierDeclStatement	opj_cp_t * cp ;	1177:4:53830:53842	129104	2	True				
ANR	129116	IdentifierDecl	* cp		129104	0					
ANR	129117	IdentifierDeclType	opj_cp_t *		129104	0					
ANR	129118	Identifier	cp		129104	1					
ANR	129119	IdentifierDeclStatement	int i ;	1178:4:53848:53853	129104	3	True				
ANR	129120	IdentifierDecl	i		129104	0					
ANR	129121	IdentifierDeclType	int		129104	0					
ANR	129122	Identifier	i		129104	1					
ANR	129123	IdentifierDeclStatement	int numcomps ;	1179:4:53859:53871	129104	4	True				
ANR	129124	IdentifierDecl	numcomps		129104	0					
ANR	129125	IdentifierDeclType	int		129104	0					
ANR	129126	Identifier	numcomps		129104	1					
ANR	129127	IdentifierDeclStatement	unsigned char * frame_codestream ;	1180:4:53877:53908	129104	5	True				
ANR	129128	IdentifierDecl	* frame_codestream		129104	0					
ANR	129129	IdentifierDeclType	unsigned char *		129104	0					
ANR	129130	Identifier	frame_codestream		129104	1					
ANR	129131	IdentifierDeclStatement	opj_dinfo_t * dinfo = NULL ;	1181:4:53914:53939	129104	6	True				
ANR	129132	IdentifierDecl	* dinfo = NULL		129104	0					
ANR	129133	IdentifierDeclType	opj_dinfo_t *		129104	0					
ANR	129134	Identifier	dinfo		129104	1					
ANR	129135	AssignmentExpression	* dinfo = NULL		129104	2		=			
ANR	129136	Identifier	NULL		129104	0					
ANR	129137	Identifier	NULL		129104	1					
ANR	129138	IdentifierDeclStatement	opj_cio_t * cio = NULL ;	1182:4:53977:53998	129104	7	True				
ANR	129139	IdentifierDecl	* cio = NULL		129104	0					
ANR	129140	IdentifierDeclType	opj_cio_t *		129104	0					
ANR	129141	Identifier	cio		129104	1					
ANR	129142	AssignmentExpression	* cio = NULL		129104	2		=			
ANR	129143	Identifier	NULL		129104	0					
ANR	129144	Identifier	NULL		129104	1					
ANR	129145	IdentifierDeclStatement	opj_j2k_t * j2k ;	1183:4:54004:54018	129104	8	True				
ANR	129146	IdentifierDecl	* j2k		129104	0					
ANR	129147	IdentifierDeclType	opj_j2k_t *		129104	0					
ANR	129148	Identifier	j2k		129104	1					
ANR	129149	ExpressionStatement	dinfo = opj_create_decompress ( CODEC_J2K )	1188:4:54099:54139	129104	9	True				
ANR	129150	AssignmentExpression	dinfo = opj_create_decompress ( CODEC_J2K )		129104	0		=			
ANR	129151	Identifier	dinfo		129104	0					
ANR	129152	CallExpression	opj_create_decompress ( CODEC_J2K )		129104	1					
ANR	129153	Callee	opj_create_decompress		129104	0					
ANR	129154	Identifier	opj_create_decompress		129104	0					
ANR	129155	ArgumentList	CODEC_J2K		129104	1					
ANR	129156	Argument	CODEC_J2K		129104	0					
ANR	129157	Identifier	CODEC_J2K		129104	0					
ANR	129158	ExpressionStatement	"opj_set_event_mgr ( ( opj_common_ptr ) dinfo , event_mgr , stderr )"	1191:4:54214:54273	129104	10	True				
ANR	129159	CallExpression	"opj_set_event_mgr ( ( opj_common_ptr ) dinfo , event_mgr , stderr )"		129104	0					
ANR	129160	Callee	opj_set_event_mgr		129104	0					
ANR	129161	Identifier	opj_set_event_mgr		129104	0					
ANR	129162	ArgumentList	( opj_common_ptr ) dinfo		129104	1					
ANR	129163	Argument	( opj_common_ptr ) dinfo		129104	0					
ANR	129164	CastExpression	( opj_common_ptr ) dinfo		129104	0					
ANR	129165	CastTarget	opj_common_ptr		129104	0					
ANR	129166	Identifier	dinfo		129104	1					
ANR	129167	Argument	event_mgr		129104	1					
ANR	129168	Identifier	event_mgr		129104	0					
ANR	129169	Argument	stderr		129104	2					
ANR	129170	Identifier	stderr		129104	0					
ANR	129171	ExpressionStatement	parameters . cp_limit_decoding = DECODE_ALL_BUT_PACKETS	1194:4:54372:54425	129104	11	True				
ANR	129172	AssignmentExpression	parameters . cp_limit_decoding = DECODE_ALL_BUT_PACKETS		129104	0		=			
ANR	129173	MemberAccess	parameters . cp_limit_decoding		129104	0					
ANR	129174	Identifier	parameters		129104	0					
ANR	129175	Identifier	cp_limit_decoding		129104	1					
ANR	129176	Identifier	DECODE_ALL_BUT_PACKETS		129104	1					
ANR	129177	ExpressionStatement	"opj_setup_decoder ( dinfo , & parameters )"	1195:4:54431:54468	129104	12	True				
ANR	129178	CallExpression	"opj_setup_decoder ( dinfo , & parameters )"		129104	0					
ANR	129179	Callee	opj_setup_decoder		129104	0					
ANR	129180	Identifier	opj_setup_decoder		129104	0					
ANR	129181	ArgumentList	dinfo		129104	1					
ANR	129182	Argument	dinfo		129104	0					
ANR	129183	Identifier	dinfo		129104	0					
ANR	129184	Argument	& parameters		129104	1					
ANR	129185	UnaryOperationExpression	& parameters		129104	0					
ANR	129186	UnaryOperator	&		129104	0					
ANR	129187	Identifier	parameters		129104	1					
ANR	129188	ExpressionStatement	frame_codestream = ( unsigned char * ) malloc ( sample -> sample_size - 8 )	1197:4:54475:54565	129104	13	True				
ANR	129189	AssignmentExpression	frame_codestream = ( unsigned char * ) malloc ( sample -> sample_size - 8 )		129104	0		=			
ANR	129190	Identifier	frame_codestream		129104	0					
ANR	129191	CastExpression	( unsigned char * ) malloc ( sample -> sample_size - 8 )		129104	1					
ANR	129192	CastTarget	unsigned char *		129104	0					
ANR	129193	CallExpression	malloc ( sample -> sample_size - 8 )		129104	1					
ANR	129194	Callee	malloc		129104	0					
ANR	129195	Identifier	malloc		129104	0					
ANR	129196	ArgumentList	sample -> sample_size - 8		129104	1					
ANR	129197	Argument	sample -> sample_size - 8		129104	0					
ANR	129198	AdditiveExpression	sample -> sample_size - 8		129104	0		-			
ANR	129199	PtrMemberAccess	sample -> sample_size		129104	0					
ANR	129200	Identifier	sample		129104	0					
ANR	129201	Identifier	sample_size		129104	1					
ANR	129202	PrimaryExpression	8		129104	1					
ANR	129203	IfStatement	if ( frame_codestream == NULL )		129104	14					
ANR	129204	Condition	frame_codestream == NULL	1199:8:54602:54625	129104	0	True				
ANR	129205	EqualityExpression	frame_codestream == NULL		129104	0		==			
ANR	129206	Identifier	frame_codestream		129104	0					
ANR	129207	Identifier	NULL		129104	1					
ANR	129208	CompoundStatement		26:34:892:892	129104	1					
ANR	129209	ReturnStatement	return 1 ;	1200:8:54638:54646	129104	0	True				
ANR	129210	PrimaryExpression	1		129104	0					
ANR	129211	ExpressionStatement	"fseek ( file , sample -> offset + 8 , SEEK_SET )"	1203:4:54659:54700	129104	15	True				
ANR	129212	CallExpression	"fseek ( file , sample -> offset + 8 , SEEK_SET )"		129104	0					
ANR	129213	Callee	fseek		129104	0					
ANR	129214	Identifier	fseek		129104	0					
ANR	129215	ArgumentList	file		129104	1					
ANR	129216	Argument	file		129104	0					
ANR	129217	Identifier	file		129104	0					
ANR	129218	Argument	sample -> offset + 8		129104	1					
ANR	129219	AdditiveExpression	sample -> offset + 8		129104	0		+			
ANR	129220	PtrMemberAccess	sample -> offset		129104	0					
ANR	129221	Identifier	sample		129104	0					
ANR	129222	Identifier	offset		129104	1					
ANR	129223	PrimaryExpression	8		129104	1					
ANR	129224	Argument	SEEK_SET		129104	2					
ANR	129225	Identifier	SEEK_SET		129104	0					
ANR	129226	ExpressionStatement	"fread ( frame_codestream , sample -> sample_size - 8 , 1 , file )"	1204:4:54706:54773	129104	16	True				
ANR	129227	CallExpression	"fread ( frame_codestream , sample -> sample_size - 8 , 1 , file )"		129104	0					
ANR	129228	Callee	fread		129104	0					
ANR	129229	Identifier	fread		129104	0					
ANR	129230	ArgumentList	frame_codestream		129104	1					
ANR	129231	Argument	frame_codestream		129104	0					
ANR	129232	Identifier	frame_codestream		129104	0					
ANR	129233	Argument	sample -> sample_size - 8		129104	1					
ANR	129234	AdditiveExpression	sample -> sample_size - 8		129104	0		-			
ANR	129235	PtrMemberAccess	sample -> sample_size		129104	0					
ANR	129236	Identifier	sample		129104	0					
ANR	129237	Identifier	sample_size		129104	1					
ANR	129238	PrimaryExpression	8		129104	1					
ANR	129239	Argument	1		129104	2					
ANR	129240	PrimaryExpression	1		129104	0					
ANR	129241	Argument	file		129104	3					
ANR	129242	Identifier	file		129104	0					
ANR	129243	ExpressionStatement	"cio = opj_cio_open ( ( opj_common_ptr ) dinfo , frame_codestream , sample -> sample_size - 8 )"	1208:4:54857:54964	129104	17	True				
ANR	129244	AssignmentExpression	"cio = opj_cio_open ( ( opj_common_ptr ) dinfo , frame_codestream , sample -> sample_size - 8 )"		129104	0		=			
ANR	129245	Identifier	cio		129104	0					
ANR	129246	CallExpression	"opj_cio_open ( ( opj_common_ptr ) dinfo , frame_codestream , sample -> sample_size - 8 )"		129104	1					
ANR	129247	Callee	opj_cio_open		129104	0					
ANR	129248	Identifier	opj_cio_open		129104	0					
ANR	129249	ArgumentList	( opj_common_ptr ) dinfo		129104	1					
ANR	129250	Argument	( opj_common_ptr ) dinfo		129104	0					
ANR	129251	CastExpression	( opj_common_ptr ) dinfo		129104	0					
ANR	129252	CastTarget	opj_common_ptr		129104	0					
ANR	129253	Identifier	dinfo		129104	1					
ANR	129254	Argument	frame_codestream		129104	1					
ANR	129255	Identifier	frame_codestream		129104	0					
ANR	129256	Argument	sample -> sample_size - 8		129104	2					
ANR	129257	AdditiveExpression	sample -> sample_size - 8		129104	0		-			
ANR	129258	PtrMemberAccess	sample -> sample_size		129104	0					
ANR	129259	Identifier	sample		129104	0					
ANR	129260	Identifier	sample_size		129104	1					
ANR	129261	PrimaryExpression	8		129104	1					
ANR	129262	ExpressionStatement	"img = opj_decode ( dinfo , cio )"	1212:4:55002:55030	129104	18	True				
ANR	129263	AssignmentExpression	"img = opj_decode ( dinfo , cio )"		129104	0		=			
ANR	129264	Identifier	img		129104	0					
ANR	129265	CallExpression	"opj_decode ( dinfo , cio )"		129104	1					
ANR	129266	Callee	opj_decode		129104	0					
ANR	129267	Identifier	opj_decode		129104	0					
ANR	129268	ArgumentList	dinfo		129104	1					
ANR	129269	Argument	dinfo		129104	0					
ANR	129270	Identifier	dinfo		129104	0					
ANR	129271	Argument	cio		129104	1					
ANR	129272	Identifier	cio		129104	0					
ANR	129273	IfStatement	if ( ! img )		129104	19					
ANR	129274	Condition	! img	1213:8:55040:55043	129104	0	True				
ANR	129275	UnaryOperationExpression	! img		129104	0					
ANR	129276	UnaryOperator	!		129104	0					
ANR	129277	Identifier	img		129104	1					
ANR	129278	CompoundStatement		40:14:1310:1310	129104	1					
ANR	129279	ExpressionStatement	"fprintf ( stderr , ""ERROR -> j2k_to_image: failed to decode image!\\n"" )"	1214:8:55056:55123	129104	0	True				
ANR	129280	CallExpression	"fprintf ( stderr , ""ERROR -> j2k_to_image: failed to decode image!\\n"" )"		129104	0					
ANR	129281	Callee	fprintf		129104	0					
ANR	129282	Identifier	fprintf		129104	0					
ANR	129283	ArgumentList	stderr		129104	1					
ANR	129284	Argument	stderr		129104	0					
ANR	129285	Identifier	stderr		129104	0					
ANR	129286	Argument	"""ERROR -> j2k_to_image: failed to decode image!\\n"""		129104	1					
ANR	129287	PrimaryExpression	"""ERROR -> j2k_to_image: failed to decode image!\\n"""		129104	0					
ANR	129288	ExpressionStatement	opj_destroy_decompress ( dinfo )	1215:8:55133:55162	129104	1	True				
ANR	129289	CallExpression	opj_destroy_decompress ( dinfo )		129104	0					
ANR	129290	Callee	opj_destroy_decompress		129104	0					
ANR	129291	Identifier	opj_destroy_decompress		129104	0					
ANR	129292	ArgumentList	dinfo		129104	1					
ANR	129293	Argument	dinfo		129104	0					
ANR	129294	Identifier	dinfo		129104	0					
ANR	129295	ExpressionStatement	opj_cio_close ( cio )	1216:8:55172:55190	129104	2	True				
ANR	129296	CallExpression	opj_cio_close ( cio )		129104	0					
ANR	129297	Callee	opj_cio_close		129104	0					
ANR	129298	Identifier	opj_cio_close		129104	0					
ANR	129299	ArgumentList	cio		129104	1					
ANR	129300	Argument	cio		129104	0					
ANR	129301	Identifier	cio		129104	0					
ANR	129302	ReturnStatement	return 1 ;	1217:8:55200:55208	129104	3	True				
ANR	129303	PrimaryExpression	1		129104	0					
ANR	129304	ExpressionStatement	j2k = ( opj_j2k_t * ) dinfo -> j2k_handle	1220:4:55221:55256	129104	20	True				
ANR	129305	AssignmentExpression	j2k = ( opj_j2k_t * ) dinfo -> j2k_handle		129104	0		=			
ANR	129306	Identifier	j2k		129104	0					
ANR	129307	CastExpression	( opj_j2k_t * ) dinfo -> j2k_handle		129104	1					
ANR	129308	CastTarget	opj_j2k_t *		129104	0					
ANR	129309	PtrMemberAccess	dinfo -> j2k_handle		129104	1					
ANR	129310	Identifier	dinfo		129104	0					
ANR	129311	Identifier	j2k_handle		129104	1					
ANR	129312	ExpressionStatement	j2k_default_tcp = j2k -> default_tcp	1221:4:55262:55296	129104	21	True				
ANR	129313	AssignmentExpression	j2k_default_tcp = j2k -> default_tcp		129104	0		=			
ANR	129314	Identifier	j2k_default_tcp		129104	0					
ANR	129315	PtrMemberAccess	j2k -> default_tcp		129104	1					
ANR	129316	Identifier	j2k		129104	0					
ANR	129317	Identifier	default_tcp		129104	1					
ANR	129318	ExpressionStatement	cp = j2k -> cp	1222:4:55302:55314	129104	22	True				
ANR	129319	AssignmentExpression	cp = j2k -> cp		129104	0		=			
ANR	129320	Identifier	cp		129104	0					
ANR	129321	PtrMemberAccess	j2k -> cp		129104	1					
ANR	129322	Identifier	j2k		129104	0					
ANR	129323	Identifier	cp		129104	1					
ANR	129324	ExpressionStatement	numcomps = img -> numcomps	1224:4:55321:55345	129104	23	True				
ANR	129325	AssignmentExpression	numcomps = img -> numcomps		129104	0		=			
ANR	129326	Identifier	numcomps		129104	0					
ANR	129327	PtrMemberAccess	img -> numcomps		129104	1					
ANR	129328	Identifier	img		129104	0					
ANR	129329	Identifier	numcomps		129104	1					
ANR	129330	ExpressionStatement	"fprintf ( xmlout , ""      <JP2_Frame Num=\\""%d\\"">\\n"" , snum + 1 )"	1226:4:55433:55497	129104	24	True				
ANR	129331	CallExpression	"fprintf ( xmlout , ""      <JP2_Frame Num=\\""%d\\"">\\n"" , snum + 1 )"		129104	0					
ANR	129332	Callee	fprintf		129104	0					
ANR	129333	Identifier	fprintf		129104	0					
ANR	129334	ArgumentList	xmlout		129104	1					
ANR	129335	Argument	xmlout		129104	0					
ANR	129336	Identifier	xmlout		129104	0					
ANR	129337	Argument	"""      <JP2_Frame Num=\\""%d\\"">\\n"""		129104	1					
ANR	129338	PrimaryExpression	"""      <JP2_Frame Num=\\""%d\\"">\\n"""		129104	0					
ANR	129339	Argument	snum + 1		129104	2					
ANR	129340	AdditiveExpression	snum + 1		129104	0		+			
ANR	129341	Identifier	snum		129104	0					
ANR	129342	PrimaryExpression	1		129104	1					
ANR	129343	ExpressionStatement	"fprintf ( xmlout , ""        <MainHeader>\\n"" )"	1227:4:55503:55549	129104	25	True				
ANR	129344	CallExpression	"fprintf ( xmlout , ""        <MainHeader>\\n"" )"		129104	0					
ANR	129345	Callee	fprintf		129104	0					
ANR	129346	Identifier	fprintf		129104	0					
ANR	129347	ArgumentList	xmlout		129104	1					
ANR	129348	Argument	xmlout		129104	0					
ANR	129349	Identifier	xmlout		129104	0					
ANR	129350	Argument	"""        <MainHeader>\\n"""		129104	1					
ANR	129351	PrimaryExpression	"""        <MainHeader>\\n"""		129104	0					
ANR	129352	ExpressionStatement	"fprintf ( xmlout , ""          <StartOfCodestream Marker=\\""SOC\\"" />\\n"" )"	1230:4:55761:55833	129104	26	True				
ANR	129353	CallExpression	"fprintf ( xmlout , ""          <StartOfCodestream Marker=\\""SOC\\"" />\\n"" )"		129104	0					
ANR	129354	Callee	fprintf		129104	0					
ANR	129355	Identifier	fprintf		129104	0					
ANR	129356	ArgumentList	xmlout		129104	1					
ANR	129357	Argument	xmlout		129104	0					
ANR	129358	Identifier	xmlout		129104	0					
ANR	129359	Argument	"""          <StartOfCodestream Marker=\\""SOC\\"" />\\n"""		129104	1					
ANR	129360	PrimaryExpression	"""          <StartOfCodestream Marker=\\""SOC\\"" />\\n"""		129104	0					
ANR	129361	ExpressionStatement	"xml_out_frame_siz ( xmlout , img , cp )"	1232:4:55961:55995	129104	27	True				
ANR	129362	CallExpression	"xml_out_frame_siz ( xmlout , img , cp )"		129104	0					
ANR	129363	Callee	xml_out_frame_siz		129104	0					
ANR	129364	Identifier	xml_out_frame_siz		129104	0					
ANR	129365	ArgumentList	xmlout		129104	1					
ANR	129366	Argument	xmlout		129104	0					
ANR	129367	Identifier	xmlout		129104	0					
ANR	129368	Argument	img		129104	1					
ANR	129369	Identifier	img		129104	0					
ANR	129370	Argument	cp		129104	2					
ANR	129371	Identifier	cp		129104	0					
ANR	129372	ExpressionStatement	"xml_out_frame_cod ( xmlout , j2k_default_tcp )"	1233:4:56020:56062	129104	28	True				
ANR	129373	CallExpression	"xml_out_frame_cod ( xmlout , j2k_default_tcp )"		129104	0					
ANR	129374	Callee	xml_out_frame_cod		129104	0					
ANR	129375	Identifier	xml_out_frame_cod		129104	0					
ANR	129376	ArgumentList	xmlout		129104	1					
ANR	129377	Argument	xmlout		129104	0					
ANR	129378	Identifier	xmlout		129104	0					
ANR	129379	Argument	j2k_default_tcp		129104	1					
ANR	129380	Identifier	j2k_default_tcp		129104	0					
ANR	129381	ExpressionStatement	"xml_out_frame_coc ( xmlout , j2k_default_tcp , numcomps )"	1234:4:56087:56161	129104	29	True				
ANR	129382	CallExpression	"xml_out_frame_coc ( xmlout , j2k_default_tcp , numcomps )"		129104	0					
ANR	129383	Callee	xml_out_frame_coc		129104	0					
ANR	129384	Identifier	xml_out_frame_coc		129104	0					
ANR	129385	ArgumentList	xmlout		129104	1					
ANR	129386	Argument	xmlout		129104	0					
ANR	129387	Identifier	xmlout		129104	0					
ANR	129388	Argument	j2k_default_tcp		129104	1					
ANR	129389	Identifier	j2k_default_tcp		129104	0					
ANR	129390	Argument	numcomps		129104	2					
ANR	129391	Identifier	numcomps		129104	0					
ANR	129392	ExpressionStatement	"xml_out_frame_qcd ( xmlout , j2k_default_tcp )"	1236:4:56210:56252	129104	30	True				
ANR	129393	CallExpression	"xml_out_frame_qcd ( xmlout , j2k_default_tcp )"		129104	0					
ANR	129394	Callee	xml_out_frame_qcd		129104	0					
ANR	129395	Identifier	xml_out_frame_qcd		129104	0					
ANR	129396	ArgumentList	xmlout		129104	1					
ANR	129397	Argument	xmlout		129104	0					
ANR	129398	Identifier	xmlout		129104	0					
ANR	129399	Argument	j2k_default_tcp		129104	1					
ANR	129400	Identifier	j2k_default_tcp		129104	0					
ANR	129401	ExpressionStatement	"xml_out_frame_qcc ( xmlout , j2k_default_tcp , numcomps )"	1237:4:56277:56351	129104	31	True				
ANR	129402	CallExpression	"xml_out_frame_qcc ( xmlout , j2k_default_tcp , numcomps )"		129104	0					
ANR	129403	Callee	xml_out_frame_qcc		129104	0					
ANR	129404	Identifier	xml_out_frame_qcc		129104	0					
ANR	129405	ArgumentList	xmlout		129104	1					
ANR	129406	Argument	xmlout		129104	0					
ANR	129407	Identifier	xmlout		129104	0					
ANR	129408	Argument	j2k_default_tcp		129104	1					
ANR	129409	Identifier	j2k_default_tcp		129104	0					
ANR	129410	Argument	numcomps		129104	2					
ANR	129411	Identifier	numcomps		129104	0					
ANR	129412	ExpressionStatement	"xml_out_frame_rgn ( xmlout , j2k_default_tcp , numcomps )"	1239:4:56400:56474	129104	32	True				
ANR	129413	CallExpression	"xml_out_frame_rgn ( xmlout , j2k_default_tcp , numcomps )"		129104	0					
ANR	129414	Callee	xml_out_frame_rgn		129104	0					
ANR	129415	Identifier	xml_out_frame_rgn		129104	0					
ANR	129416	ArgumentList	xmlout		129104	1					
ANR	129417	Argument	xmlout		129104	0					
ANR	129418	Identifier	xmlout		129104	0					
ANR	129419	Argument	j2k_default_tcp		129104	1					
ANR	129420	Identifier	j2k_default_tcp		129104	0					
ANR	129421	Argument	numcomps		129104	2					
ANR	129422	Identifier	numcomps		129104	0					
ANR	129423	ExpressionStatement	"xml_out_frame_poc ( xmlout , j2k_default_tcp )"	1241:4:56515:56579	129104	33	True				
ANR	129424	CallExpression	"xml_out_frame_poc ( xmlout , j2k_default_tcp )"		129104	0					
ANR	129425	Callee	xml_out_frame_poc		129104	0					
ANR	129426	Identifier	xml_out_frame_poc		129104	0					
ANR	129427	ArgumentList	xmlout		129104	1					
ANR	129428	Argument	xmlout		129104	0					
ANR	129429	Identifier	xmlout		129104	0					
ANR	129430	Argument	j2k_default_tcp		129104	1					
ANR	129431	Identifier	j2k_default_tcp		129104	0					
ANR	129432	ExpressionStatement	"xml_out_frame_ppm ( xmlout , cp )"	1245:4:56738:56789	129104	34	True				
ANR	129433	CallExpression	"xml_out_frame_ppm ( xmlout , cp )"		129104	0					
ANR	129434	Callee	xml_out_frame_ppm		129104	0					
ANR	129435	Identifier	xml_out_frame_ppm		129104	0					
ANR	129436	ArgumentList	xmlout		129104	1					
ANR	129437	Argument	xmlout		129104	0					
ANR	129438	Identifier	xmlout		129104	0					
ANR	129439	Argument	cp		129104	1					
ANR	129440	Identifier	cp		129104	0					
ANR	129441	ExpressionStatement	xml_out_frame_tlm ( xmlout )	1248:4:56899:56933	129104	35	True				
ANR	129442	CallExpression	xml_out_frame_tlm ( xmlout )		129104	0					
ANR	129443	Callee	xml_out_frame_tlm		129104	0					
ANR	129444	Identifier	xml_out_frame_tlm		129104	0					
ANR	129445	ArgumentList	xmlout		129104	1					
ANR	129446	Argument	xmlout		129104	0					
ANR	129447	Identifier	xmlout		129104	0					
ANR	129448	ExpressionStatement	xml_out_frame_plm ( xmlout )	1250:4:56995:57029	129104	36	True				
ANR	129449	CallExpression	xml_out_frame_plm ( xmlout )		129104	0					
ANR	129450	Callee	xml_out_frame_plm		129104	0					
ANR	129451	Identifier	xml_out_frame_plm		129104	0					
ANR	129452	ArgumentList	xmlout		129104	1					
ANR	129453	Argument	xmlout		129104	0					
ANR	129454	Identifier	xmlout		129104	0					
ANR	129455	ExpressionStatement	xml_out_frame_crg ( xmlout )	1252:4:57136:57170	129104	37	True				
ANR	129456	CallExpression	xml_out_frame_crg ( xmlout )		129104	0					
ANR	129457	Callee	xml_out_frame_crg		129104	0					
ANR	129458	Identifier	xml_out_frame_crg		129104	0					
ANR	129459	ArgumentList	xmlout		129104	1					
ANR	129460	Argument	xmlout		129104	0					
ANR	129461	Identifier	xmlout		129104	0					
ANR	129462	ExpressionStatement	"xml_out_frame_com ( xmlout , j2k_default_tcp )"	1254:4:57241:57305	129104	38	True				
ANR	129463	CallExpression	"xml_out_frame_com ( xmlout , j2k_default_tcp )"		129104	0					
ANR	129464	Callee	xml_out_frame_com		129104	0					
ANR	129465	Identifier	xml_out_frame_com		129104	0					
ANR	129466	ArgumentList	xmlout		129104	1					
ANR	129467	Argument	xmlout		129104	0					
ANR	129468	Identifier	xmlout		129104	0					
ANR	129469	Argument	j2k_default_tcp		129104	1					
ANR	129470	Identifier	j2k_default_tcp		129104	0					
ANR	129471	ExpressionStatement	"fprintf ( xmlout , ""        </MainHeader>\\n"" )"	1257:4:57377:57424	129104	39	True				
ANR	129472	CallExpression	"fprintf ( xmlout , ""        </MainHeader>\\n"" )"		129104	0					
ANR	129473	Callee	fprintf		129104	0					
ANR	129474	Identifier	fprintf		129104	0					
ANR	129475	ArgumentList	xmlout		129104	1					
ANR	129476	Argument	xmlout		129104	0					
ANR	129477	Identifier	xmlout		129104	0					
ANR	129478	Argument	"""        </MainHeader>\\n"""		129104	1					
ANR	129479	PrimaryExpression	"""        </MainHeader>\\n"""		129104	0					
ANR	129480	ExpressionStatement	"fprintf ( xmlout , ""        <TilePartHeaders Count=\\""%d\\"">\\n"" , cp -> tileno_size )"	1260:4:57480:57573	129104	40	True				
ANR	129481	CallExpression	"fprintf ( xmlout , ""        <TilePartHeaders Count=\\""%d\\"">\\n"" , cp -> tileno_size )"		129104	0					
ANR	129482	Callee	fprintf		129104	0					
ANR	129483	Identifier	fprintf		129104	0					
ANR	129484	ArgumentList	xmlout		129104	1					
ANR	129485	Argument	xmlout		129104	0					
ANR	129486	Identifier	xmlout		129104	0					
ANR	129487	Argument	"""        <TilePartHeaders Count=\\""%d\\"">\\n"""		129104	1					
ANR	129488	PrimaryExpression	"""        <TilePartHeaders Count=\\""%d\\"">\\n"""		129104	0					
ANR	129489	Argument	cp -> tileno_size		129104	2					
ANR	129490	PtrMemberAccess	cp -> tileno_size		129104	0					
ANR	129491	Identifier	cp		129104	0					
ANR	129492	Identifier	tileno_size		129104	1					
ANR	129493	ForStatement	for ( i = 0 ; i < cp -> tileno_size ; i ++ )		129104	41					
ANR	129494	ForInit	i = 0 ;	1262:9:57623:57628	129104	0	True				
ANR	129495	AssignmentExpression	i = 0		129104	0		=			
ANR	129496	Identifier	i		129104	0					
ANR	129497	PrimaryExpression	0		129104	1					
ANR	129498	Condition	i < cp -> tileno_size	1262:16:57630:57648	129104	1	True				
ANR	129499	RelationalExpression	i < cp -> tileno_size		129104	0		<			
ANR	129500	Identifier	i		129104	0					
ANR	129501	PtrMemberAccess	cp -> tileno_size		129104	1					
ANR	129502	Identifier	cp		129104	0					
ANR	129503	Identifier	tileno_size		129104	1					
ANR	129504	PostIncDecOperationExpression	i ++	1263:12:57663:57665	129104	2	True				
ANR	129505	Identifier	i		129104	0					
ANR	129506	IncDec	++		129104	1					
ANR	129507	CompoundStatement		90:17:3932:3932	129104	3					
ANR	129508	ExpressionStatement	"fprintf ( xmlout , ""          <TilePartHeader Num=\\""%d\\"" ID=\\""%d\\"">\\n"" , i , cp -> tileno [ i ] )"	1265:8:57837:57942	129104	0	True				
ANR	129509	CallExpression	"fprintf ( xmlout , ""          <TilePartHeader Num=\\""%d\\"" ID=\\""%d\\"">\\n"" , i , cp -> tileno [ i ] )"		129104	0					
ANR	129510	Callee	fprintf		129104	0					
ANR	129511	Identifier	fprintf		129104	0					
ANR	129512	ArgumentList	xmlout		129104	1					
ANR	129513	Argument	xmlout		129104	0					
ANR	129514	Identifier	xmlout		129104	0					
ANR	129515	Argument	"""          <TilePartHeader Num=\\""%d\\"" ID=\\""%d\\"">\\n"""		129104	1					
ANR	129516	PrimaryExpression	"""          <TilePartHeader Num=\\""%d\\"" ID=\\""%d\\"">\\n"""		129104	0					
ANR	129517	Argument	i		129104	2					
ANR	129518	Identifier	i		129104	0					
ANR	129519	Argument	cp -> tileno [ i ]		129104	3					
ANR	129520	ArrayIndexing	cp -> tileno [ i ]		129104	0					
ANR	129521	PtrMemberAccess	cp -> tileno		129104	0					
ANR	129522	Identifier	cp		129104	0					
ANR	129523	Identifier	tileno		129104	1					
ANR	129524	Identifier	i		129104	1					
ANR	129525	ExpressionStatement	"fprintf ( xmlout , ""            <StartOfTilePart Marker=\\""SOT\\"" />\\n"" )"	1267:8:58016:58086	129104	1	True				
ANR	129526	CallExpression	"fprintf ( xmlout , ""            <StartOfTilePart Marker=\\""SOT\\"" />\\n"" )"		129104	0					
ANR	129527	Callee	fprintf		129104	0					
ANR	129528	Identifier	fprintf		129104	0					
ANR	129529	ArgumentList	xmlout		129104	1					
ANR	129530	Argument	xmlout		129104	0					
ANR	129531	Identifier	xmlout		129104	0					
ANR	129532	Argument	"""            <StartOfTilePart Marker=\\""SOT\\"" />\\n"""		129104	1					
ANR	129533	PrimaryExpression	"""            <StartOfTilePart Marker=\\""SOT\\"" />\\n"""		129104	0					
ANR	129534	IfStatement	if ( i == 0 )		129104	2					
ANR	129535	Condition	i == 0	1269:12:58210:58215	129104	0	True				
ANR	129536	EqualityExpression	i == 0		129104	0		==			
ANR	129537	Identifier	i		129104	0					
ANR	129538	PrimaryExpression	0		129104	1					
ANR	129539	CompoundStatement		96:20:4482:4482	129104	1					
ANR	129540	ExpressionStatement	"xml_out_frame_cod ( xmlout , & ( cp -> tcps [ i ] ) )"	1270:12:58232:58273	129104	0	True				
ANR	129541	CallExpression	"xml_out_frame_cod ( xmlout , & ( cp -> tcps [ i ] ) )"		129104	0					
ANR	129542	Callee	xml_out_frame_cod		129104	0					
ANR	129543	Identifier	xml_out_frame_cod		129104	0					
ANR	129544	ArgumentList	xmlout		129104	1					
ANR	129545	Argument	xmlout		129104	0					
ANR	129546	Identifier	xmlout		129104	0					
ANR	129547	Argument	& ( cp -> tcps [ i ] )		129104	1					
ANR	129548	UnaryOperationExpression	& ( cp -> tcps [ i ] )		129104	0					
ANR	129549	UnaryOperator	&		129104	0					
ANR	129550	ArrayIndexing	cp -> tcps [ i ]		129104	1					
ANR	129551	PtrMemberAccess	cp -> tcps		129104	0					
ANR	129552	Identifier	cp		129104	0					
ANR	129553	Identifier	tcps		129104	1					
ANR	129554	Identifier	i		129104	1					
ANR	129555	ExpressionStatement	"xml_out_frame_coc ( xmlout , & ( cp -> tcps [ i ] ) , numcomps )"	1271:12:58317:58398	129104	1	True				
ANR	129556	CallExpression	"xml_out_frame_coc ( xmlout , & ( cp -> tcps [ i ] ) , numcomps )"		129104	0					
ANR	129557	Callee	xml_out_frame_coc		129104	0					
ANR	129558	Identifier	xml_out_frame_coc		129104	0					
ANR	129559	ArgumentList	xmlout		129104	1					
ANR	129560	Argument	xmlout		129104	0					
ANR	129561	Identifier	xmlout		129104	0					
ANR	129562	Argument	& ( cp -> tcps [ i ] )		129104	1					
ANR	129563	UnaryOperationExpression	& ( cp -> tcps [ i ] )		129104	0					
ANR	129564	UnaryOperator	&		129104	0					
ANR	129565	ArrayIndexing	cp -> tcps [ i ]		129104	1					
ANR	129566	PtrMemberAccess	cp -> tcps		129104	0					
ANR	129567	Identifier	cp		129104	0					
ANR	129568	Identifier	tcps		129104	1					
ANR	129569	Identifier	i		129104	1					
ANR	129570	Argument	numcomps		129104	2					
ANR	129571	Identifier	numcomps		129104	0					
ANR	129572	ExpressionStatement	"xml_out_frame_qcd ( xmlout , & ( cp -> tcps [ i ] ) )"	1273:12:58447:58488	129104	2	True				
ANR	129573	CallExpression	"xml_out_frame_qcd ( xmlout , & ( cp -> tcps [ i ] ) )"		129104	0					
ANR	129574	Callee	xml_out_frame_qcd		129104	0					
ANR	129575	Identifier	xml_out_frame_qcd		129104	0					
ANR	129576	ArgumentList	xmlout		129104	1					
ANR	129577	Argument	xmlout		129104	0					
ANR	129578	Identifier	xmlout		129104	0					
ANR	129579	Argument	& ( cp -> tcps [ i ] )		129104	1					
ANR	129580	UnaryOperationExpression	& ( cp -> tcps [ i ] )		129104	0					
ANR	129581	UnaryOperator	&		129104	0					
ANR	129582	ArrayIndexing	cp -> tcps [ i ]		129104	1					
ANR	129583	PtrMemberAccess	cp -> tcps		129104	0					
ANR	129584	Identifier	cp		129104	0					
ANR	129585	Identifier	tcps		129104	1					
ANR	129586	Identifier	i		129104	1					
ANR	129587	ExpressionStatement	"xml_out_frame_qcc ( xmlout , & ( cp -> tcps [ i ] ) , numcomps )"	1274:12:58532:58613	129104	3	True				
ANR	129588	CallExpression	"xml_out_frame_qcc ( xmlout , & ( cp -> tcps [ i ] ) , numcomps )"		129104	0					
ANR	129589	Callee	xml_out_frame_qcc		129104	0					
ANR	129590	Identifier	xml_out_frame_qcc		129104	0					
ANR	129591	ArgumentList	xmlout		129104	1					
ANR	129592	Argument	xmlout		129104	0					
ANR	129593	Identifier	xmlout		129104	0					
ANR	129594	Argument	& ( cp -> tcps [ i ] )		129104	1					
ANR	129595	UnaryOperationExpression	& ( cp -> tcps [ i ] )		129104	0					
ANR	129596	UnaryOperator	&		129104	0					
ANR	129597	ArrayIndexing	cp -> tcps [ i ]		129104	1					
ANR	129598	PtrMemberAccess	cp -> tcps		129104	0					
ANR	129599	Identifier	cp		129104	0					
ANR	129600	Identifier	tcps		129104	1					
ANR	129601	Identifier	i		129104	1					
ANR	129602	Argument	numcomps		129104	2					
ANR	129603	Identifier	numcomps		129104	0					
ANR	129604	ExpressionStatement	"xml_out_frame_rgn ( xmlout , & ( cp -> tcps [ i ] ) , numcomps )"	1276:12:58663:58744	129104	4	True				
ANR	129605	CallExpression	"xml_out_frame_rgn ( xmlout , & ( cp -> tcps [ i ] ) , numcomps )"		129104	0					
ANR	129606	Callee	xml_out_frame_rgn		129104	0					
ANR	129607	Identifier	xml_out_frame_rgn		129104	0					
ANR	129608	ArgumentList	xmlout		129104	1					
ANR	129609	Argument	xmlout		129104	0					
ANR	129610	Identifier	xmlout		129104	0					
ANR	129611	Argument	& ( cp -> tcps [ i ] )		129104	1					
ANR	129612	UnaryOperationExpression	& ( cp -> tcps [ i ] )		129104	0					
ANR	129613	UnaryOperator	&		129104	0					
ANR	129614	ArrayIndexing	cp -> tcps [ i ]		129104	1					
ANR	129615	PtrMemberAccess	cp -> tcps		129104	0					
ANR	129616	Identifier	cp		129104	0					
ANR	129617	Identifier	tcps		129104	1					
ANR	129618	Identifier	i		129104	1					
ANR	129619	Argument	numcomps		129104	2					
ANR	129620	Identifier	numcomps		129104	0					
ANR	129621	ExpressionStatement	"xml_out_frame_poc ( xmlout , & ( cp -> tcps [ i ] ) )"	1279:8:58799:58866	129104	3	True				
ANR	129622	CallExpression	"xml_out_frame_poc ( xmlout , & ( cp -> tcps [ i ] ) )"		129104	0					
ANR	129623	Callee	xml_out_frame_poc		129104	0					
ANR	129624	Identifier	xml_out_frame_poc		129104	0					
ANR	129625	ArgumentList	xmlout		129104	1					
ANR	129626	Argument	xmlout		129104	0					
ANR	129627	Identifier	xmlout		129104	0					
ANR	129628	Argument	& ( cp -> tcps [ i ] )		129104	1					
ANR	129629	UnaryOperationExpression	& ( cp -> tcps [ i ] )		129104	0					
ANR	129630	UnaryOperator	&		129104	0					
ANR	129631	ArrayIndexing	cp -> tcps [ i ]		129104	1					
ANR	129632	PtrMemberAccess	cp -> tcps		129104	0					
ANR	129633	Identifier	cp		129104	0					
ANR	129634	Identifier	tcps		129104	1					
ANR	129635	Identifier	i		129104	1					
ANR	129636	ExpressionStatement	"xml_out_frame_ppt ( xmlout , & ( cp -> tcps [ i ] ) )"	1282:8:58973:59040	129104	4	True				
ANR	129637	CallExpression	"xml_out_frame_ppt ( xmlout , & ( cp -> tcps [ i ] ) )"		129104	0					
ANR	129638	Callee	xml_out_frame_ppt		129104	0					
ANR	129639	Identifier	xml_out_frame_ppt		129104	0					
ANR	129640	ArgumentList	xmlout		129104	1					
ANR	129641	Argument	xmlout		129104	0					
ANR	129642	Identifier	xmlout		129104	0					
ANR	129643	Argument	& ( cp -> tcps [ i ] )		129104	1					
ANR	129644	UnaryOperationExpression	& ( cp -> tcps [ i ] )		129104	0					
ANR	129645	UnaryOperator	&		129104	0					
ANR	129646	ArrayIndexing	cp -> tcps [ i ]		129104	1					
ANR	129647	PtrMemberAccess	cp -> tcps		129104	0					
ANR	129648	Identifier	cp		129104	0					
ANR	129649	Identifier	tcps		129104	1					
ANR	129650	Identifier	i		129104	1					
ANR	129651	ExpressionStatement	"xml_out_frame_plt ( xmlout , & ( cp -> tcps [ i ] ) )"	1285:8:59145:59212	129104	5	True				
ANR	129652	CallExpression	"xml_out_frame_plt ( xmlout , & ( cp -> tcps [ i ] ) )"		129104	0					
ANR	129653	Callee	xml_out_frame_plt		129104	0					
ANR	129654	Identifier	xml_out_frame_plt		129104	0					
ANR	129655	ArgumentList	xmlout		129104	1					
ANR	129656	Argument	xmlout		129104	0					
ANR	129657	Identifier	xmlout		129104	0					
ANR	129658	Argument	& ( cp -> tcps [ i ] )		129104	1					
ANR	129659	UnaryOperationExpression	& ( cp -> tcps [ i ] )		129104	0					
ANR	129660	UnaryOperator	&		129104	0					
ANR	129661	ArrayIndexing	cp -> tcps [ i ]		129104	1					
ANR	129662	PtrMemberAccess	cp -> tcps		129104	0					
ANR	129663	Identifier	cp		129104	0					
ANR	129664	Identifier	tcps		129104	1					
ANR	129665	Identifier	i		129104	1					
ANR	129666	ExpressionStatement	"xml_out_frame_com ( xmlout , & ( cp -> tcps [ i ] ) )"	1287:8:59317:59384	129104	6	True				
ANR	129667	CallExpression	"xml_out_frame_com ( xmlout , & ( cp -> tcps [ i ] ) )"		129104	0					
ANR	129668	Callee	xml_out_frame_com		129104	0					
ANR	129669	Identifier	xml_out_frame_com		129104	0					
ANR	129670	ArgumentList	xmlout		129104	1					
ANR	129671	Argument	xmlout		129104	0					
ANR	129672	Identifier	xmlout		129104	0					
ANR	129673	Argument	& ( cp -> tcps [ i ] )		129104	1					
ANR	129674	UnaryOperationExpression	& ( cp -> tcps [ i ] )		129104	0					
ANR	129675	UnaryOperator	&		129104	0					
ANR	129676	ArrayIndexing	cp -> tcps [ i ]		129104	1					
ANR	129677	PtrMemberAccess	cp -> tcps		129104	0					
ANR	129678	Identifier	cp		129104	0					
ANR	129679	Identifier	tcps		129104	1					
ANR	129680	Identifier	i		129104	1					
ANR	129681	ExpressionStatement	"fprintf ( xmlout , ""            <StartOfData Marker=\\""SOD\\"" />\\n"" )"	1291:8:59609:59675	129104	7	True				
ANR	129682	CallExpression	"fprintf ( xmlout , ""            <StartOfData Marker=\\""SOD\\"" />\\n"" )"		129104	0					
ANR	129683	Callee	fprintf		129104	0					
ANR	129684	Identifier	fprintf		129104	0					
ANR	129685	ArgumentList	xmlout		129104	1					
ANR	129686	Argument	xmlout		129104	0					
ANR	129687	Identifier	xmlout		129104	0					
ANR	129688	Argument	"""            <StartOfData Marker=\\""SOD\\"" />\\n"""		129104	1					
ANR	129689	PrimaryExpression	"""            <StartOfData Marker=\\""SOD\\"" />\\n"""		129104	0					
ANR	129690	IfStatement	if ( notes )		129104	8					
ANR	129691	Condition	notes	1292:12:59689:59693	129104	0	True				
ANR	129692	Identifier	notes		129104	0					
ANR	129693	CompoundStatement		119:19:5960:5960	129104	1					
ANR	129694	ExpressionStatement	"fprintf ( xmlout , ""            <!-- Tile-part bitstream, not shown, follows tile-part header and SOD marker. -->\\n"" )"	1293:12:59710:59844	129104	0	True				
ANR	129695	CallExpression	"fprintf ( xmlout , ""            <!-- Tile-part bitstream, not shown, follows tile-part header and SOD marker. -->\\n"" )"		129104	0					
ANR	129696	Callee	fprintf		129104	0					
ANR	129697	Identifier	fprintf		129104	0					
ANR	129698	ArgumentList	xmlout		129104	1					
ANR	129699	Argument	xmlout		129104	0					
ANR	129700	Identifier	xmlout		129104	0					
ANR	129701	Argument	"""            <!-- Tile-part bitstream, not shown, follows tile-part header and SOD marker. -->\\n"""		129104	1					
ANR	129702	PrimaryExpression	"""            <!-- Tile-part bitstream, not shown, follows tile-part header and SOD marker. -->\\n"""		129104	0					
ANR	129703	ExpressionStatement	"fprintf ( xmlout , ""          </TilePartHeader>\\n"" )"	1296:8:59864:59915	129104	9	True				
ANR	129704	CallExpression	"fprintf ( xmlout , ""          </TilePartHeader>\\n"" )"		129104	0					
ANR	129705	Callee	fprintf		129104	0					
ANR	129706	Identifier	fprintf		129104	0					
ANR	129707	ArgumentList	xmlout		129104	1					
ANR	129708	Argument	xmlout		129104	0					
ANR	129709	Identifier	xmlout		129104	0					
ANR	129710	Argument	"""          </TilePartHeader>\\n"""		129104	1					
ANR	129711	PrimaryExpression	"""          </TilePartHeader>\\n"""		129104	0					
ANR	129712	ExpressionStatement	"fprintf ( xmlout , ""        </TilePartHeaders>\\n"" )"	1298:4:59927:59986	129104	42	True				
ANR	129713	CallExpression	"fprintf ( xmlout , ""        </TilePartHeaders>\\n"" )"		129104	0					
ANR	129714	Callee	fprintf		129104	0					
ANR	129715	Identifier	fprintf		129104	0					
ANR	129716	ArgumentList	xmlout		129104	1					
ANR	129717	Argument	xmlout		129104	0					
ANR	129718	Identifier	xmlout		129104	0					
ANR	129719	Argument	"""        </TilePartHeaders>\\n"""		129104	1					
ANR	129720	PrimaryExpression	"""        </TilePartHeaders>\\n"""		129104	0					
ANR	129721	Statement	IMAGINE	1302:4:60043:60049	129104	43	True				
ANR	129722	Statement	the	1302:12:60051:60053	129104	44	True				
ANR	129723	Statement	cp	1302:16:60055:60056	129104	45	True				
ANR	129724	Statement	object	1302:19:60058:60063	129104	46	True				
ANR	129725	Statement	has	1302:26:60065:60067	129104	47	True				
ANR	129726	Statement	data	1302:30:60069:60072	129104	48	True				
ANR	129727	Statement	to	1302:35:60074:60075	129104	49	True				
ANR	129728	Statement	support	1302:38:60077:60083	129104	50	True				
ANR	129729	Statement	the	1302:46:60085:60087	129104	51	True				
ANR	129730	Statement	following	1302:50:60089:60097	129104	52	True				
ANR	129731	Statement	...	1302:59:60098:60100	129104	53	True				
ANR	129732	Statement	but	1302:63:60102:60104	129104	54	True				
ANR	129733	Statement	we	1302:67:60106:60107	129104	55	True				
ANR	129734	Statement	could	1302:70:60109:60113	129104	56	True				
ANR	129735	Statement	use	1302:76:60115:60117	129104	57	True				
ANR	129736	Statement	an	1302:80:60119:60120	129104	58	True				
ANR	129737	ExpressionStatement	"xmlout , & cp"	1303:4:60126:60466	129104	59	True				
ANR	129738	Expression	"xmlout , & cp"		129104	0					
ANR	129739	Identifier	xmlout		129104	0					
ANR	129740	UnaryOperationExpression	& cp		129104	1					
ANR	129741	UnaryOperator	&		129104	0					
ANR	129742	Identifier	cp		129104	1					
ANR	129743	ExpressionStatement	"xml_out_frame_xml ( xmlout , & cp )"	1308:4:60536:60588	129104	60	True				
ANR	129744	CallExpression	"xml_out_frame_xml ( xmlout , & cp )"		129104	0					
ANR	129745	Callee	xml_out_frame_xml		129104	0					
ANR	129746	Identifier	xml_out_frame_xml		129104	0					
ANR	129747	ArgumentList	xmlout		129104	1					
ANR	129748	Argument	xmlout		129104	0					
ANR	129749	Identifier	xmlout		129104	0					
ANR	129750	Argument	& cp		129104	1					
ANR	129751	UnaryOperationExpression	& cp		129104	0					
ANR	129752	UnaryOperator	&		129104	0					
ANR	129753	Identifier	cp		129104	1					
ANR	129754	ExpressionStatement	"xml_out_frame_uuid ( xmlout , & cp )"	1310:4:60649:60680	129104	61	True				
ANR	129755	CallExpression	"xml_out_frame_uuid ( xmlout , & cp )"		129104	0					
ANR	129756	Callee	xml_out_frame_uuid		129104	0					
ANR	129757	Identifier	xml_out_frame_uuid		129104	0					
ANR	129758	ArgumentList	xmlout		129104	1					
ANR	129759	Argument	xmlout		129104	0					
ANR	129760	Identifier	xmlout		129104	0					
ANR	129761	Argument	& cp		129104	1					
ANR	129762	UnaryOperationExpression	& cp		129104	0					
ANR	129763	UnaryOperator	&		129104	0					
ANR	129764	Identifier	cp		129104	1					
ANR	129765	ExpressionStatement	"xml_out_frame_uinf ( xmlout , & cp )"	1311:4:60721:60775	129104	62	True				
ANR	129766	CallExpression	"xml_out_frame_uinf ( xmlout , & cp )"		129104	0					
ANR	129767	Callee	xml_out_frame_uinf		129104	0					
ANR	129768	Identifier	xml_out_frame_uinf		129104	0					
ANR	129769	ArgumentList	xmlout		129104	1					
ANR	129770	Argument	xmlout		129104	0					
ANR	129771	Identifier	xmlout		129104	0					
ANR	129772	Argument	& cp		129104	1					
ANR	129773	UnaryOperationExpression	& cp		129104	0					
ANR	129774	UnaryOperator	&		129104	0					
ANR	129775	Identifier	cp		129104	1					
ANR	129776	ExpressionStatement	"fprintf ( xmlout , ""      </JP2_Frame>\\n"" )"	1315:4:60854:60898	129104	63	True				
ANR	129777	CallExpression	"fprintf ( xmlout , ""      </JP2_Frame>\\n"" )"		129104	0					
ANR	129778	Callee	fprintf		129104	0					
ANR	129779	Identifier	fprintf		129104	0					
ANR	129780	ArgumentList	xmlout		129104	1					
ANR	129781	Argument	xmlout		129104	0					
ANR	129782	Identifier	xmlout		129104	0					
ANR	129783	Argument	"""      </JP2_Frame>\\n"""		129104	1					
ANR	129784	PrimaryExpression	"""      </JP2_Frame>\\n"""		129104	0					
ANR	129785	IfStatement	if ( notes )		129104	64					
ANR	129786	Condition	notes	1318:8:60937:60941	129104	0	True				
ANR	129787	Identifier	notes		129104	0					
ANR	129788	CompoundStatement		145:15:7208:7208	129104	1					
ANR	129789	ExpressionStatement	"fprintf ( xmlout , ""      <!-- Given the number and size of components, mj2_to_frame would try to convert this -->\\n"" )"	1319:8:60954:61085	129104	0	True				
ANR	129790	CallExpression	"fprintf ( xmlout , ""      <!-- Given the number and size of components, mj2_to_frame would try to convert this -->\\n"" )"		129104	0					
ANR	129791	Callee	fprintf		129104	0					
ANR	129792	Identifier	fprintf		129104	0					
ANR	129793	ArgumentList	xmlout		129104	1					
ANR	129794	Argument	xmlout		129104	0					
ANR	129795	Identifier	xmlout		129104	0					
ANR	129796	Argument	"""      <!-- Given the number and size of components, mj2_to_frame would try to convert this -->\\n"""		129104	1					
ANR	129797	PrimaryExpression	"""      <!-- Given the number and size of components, mj2_to_frame would try to convert this -->\\n"""		129104	0					
ANR	129798	IfStatement	if ( ( ( img -> numcomps == 3 ) && ( img -> comps [ 0 ] . dx == img -> comps [ 1 ] . dx / 2 ) && ( img -> comps [ 0 ] . dx == img -> comps [ 2 ] . dx / 2 ) && ( img -> comps [ 0 ] . dx == 1 ) ) || ( img -> numcomps == 1 ) )		129104	1					
ANR	129799	Condition	( ( img -> numcomps == 3 ) && ( img -> comps [ 0 ] . dx == img -> comps [ 1 ] . dx / 2 ) && ( img -> comps [ 0 ] . dx == img -> comps [ 2 ] . dx / 2 ) && ( img -> comps [ 0 ] . dx == 1 ) ) || ( img -> numcomps == 1 )	1321:12:61099:61295	129104	0	True				
ANR	129800	OrExpression	( ( img -> numcomps == 3 ) && ( img -> comps [ 0 ] . dx == img -> comps [ 1 ] . dx / 2 ) && ( img -> comps [ 0 ] . dx == img -> comps [ 2 ] . dx / 2 ) && ( img -> comps [ 0 ] . dx == 1 ) ) || ( img -> numcomps == 1 )		129104	0		||			
ANR	129801	AndExpression	( img -> numcomps == 3 ) && ( img -> comps [ 0 ] . dx == img -> comps [ 1 ] . dx / 2 ) && ( img -> comps [ 0 ] . dx == img -> comps [ 2 ] . dx / 2 ) && ( img -> comps [ 0 ] . dx == 1 )		129104	0		&&			
ANR	129802	EqualityExpression	img -> numcomps == 3		129104	0		==			
ANR	129803	PtrMemberAccess	img -> numcomps		129104	0					
ANR	129804	Identifier	img		129104	0					
ANR	129805	Identifier	numcomps		129104	1					
ANR	129806	PrimaryExpression	3		129104	1					
ANR	129807	AndExpression	( img -> comps [ 0 ] . dx == img -> comps [ 1 ] . dx / 2 ) && ( img -> comps [ 0 ] . dx == img -> comps [ 2 ] . dx / 2 ) && ( img -> comps [ 0 ] . dx == 1 )		129104	1		&&			
ANR	129808	EqualityExpression	img -> comps [ 0 ] . dx == img -> comps [ 1 ] . dx / 2		129104	0		==			
ANR	129809	MemberAccess	img -> comps [ 0 ] . dx		129104	0					
ANR	129810	ArrayIndexing	img -> comps [ 0 ]		129104	0					
ANR	129811	PtrMemberAccess	img -> comps		129104	0					
ANR	129812	Identifier	img		129104	0					
ANR	129813	Identifier	comps		129104	1					
ANR	129814	PrimaryExpression	0		129104	1					
ANR	129815	Identifier	dx		129104	1					
ANR	129816	MultiplicativeExpression	img -> comps [ 1 ] . dx / 2		129104	1		/			
ANR	129817	MemberAccess	img -> comps [ 1 ] . dx		129104	0					
ANR	129818	ArrayIndexing	img -> comps [ 1 ]		129104	0					
ANR	129819	PtrMemberAccess	img -> comps		129104	0					
ANR	129820	Identifier	img		129104	0					
ANR	129821	Identifier	comps		129104	1					
ANR	129822	PrimaryExpression	1		129104	1					
ANR	129823	Identifier	dx		129104	1					
ANR	129824	PrimaryExpression	2		129104	1					
ANR	129825	AndExpression	( img -> comps [ 0 ] . dx == img -> comps [ 2 ] . dx / 2 ) && ( img -> comps [ 0 ] . dx == 1 )		129104	1		&&			
ANR	129826	EqualityExpression	img -> comps [ 0 ] . dx == img -> comps [ 2 ] . dx / 2		129104	0		==			
ANR	129827	MemberAccess	img -> comps [ 0 ] . dx		129104	0					
ANR	129828	ArrayIndexing	img -> comps [ 0 ]		129104	0					
ANR	129829	PtrMemberAccess	img -> comps		129104	0					
ANR	129830	Identifier	img		129104	0					
ANR	129831	Identifier	comps		129104	1					
ANR	129832	PrimaryExpression	0		129104	1					
ANR	129833	Identifier	dx		129104	1					
ANR	129834	MultiplicativeExpression	img -> comps [ 2 ] . dx / 2		129104	1		/			
ANR	129835	MemberAccess	img -> comps [ 2 ] . dx		129104	0					
ANR	129836	ArrayIndexing	img -> comps [ 2 ]		129104	0					
ANR	129837	PtrMemberAccess	img -> comps		129104	0					
ANR	129838	Identifier	img		129104	0					
ANR	129839	Identifier	comps		129104	1					
ANR	129840	PrimaryExpression	2		129104	1					
ANR	129841	Identifier	dx		129104	1					
ANR	129842	PrimaryExpression	2		129104	1					
ANR	129843	EqualityExpression	img -> comps [ 0 ] . dx == 1		129104	1		==			
ANR	129844	MemberAccess	img -> comps [ 0 ] . dx		129104	0					
ANR	129845	ArrayIndexing	img -> comps [ 0 ]		129104	0					
ANR	129846	PtrMemberAccess	img -> comps		129104	0					
ANR	129847	Identifier	img		129104	0					
ANR	129848	Identifier	comps		129104	1					
ANR	129849	PrimaryExpression	0		129104	1					
ANR	129850	Identifier	dx		129104	1					
ANR	129851	PrimaryExpression	1		129104	1					
ANR	129852	EqualityExpression	img -> numcomps == 1		129104	1		==			
ANR	129853	PtrMemberAccess	img -> numcomps		129104	0					
ANR	129854	Identifier	img		129104	0					
ANR	129855	Identifier	numcomps		129104	1					
ANR	129856	PrimaryExpression	1		129104	1					
ANR	129857	CompoundStatement		150:41:7562:7562	129104	1					
ANR	129858	ExpressionStatement	"fprintf ( xmlout , ""      <!-- file to a YUV movie in the normal manner. -->\\n"" )"	1324:12:61312:61390	129104	0	True				
ANR	129859	CallExpression	"fprintf ( xmlout , ""      <!-- file to a YUV movie in the normal manner. -->\\n"" )"		129104	0					
ANR	129860	Callee	fprintf		129104	0					
ANR	129861	Identifier	fprintf		129104	0					
ANR	129862	ArgumentList	xmlout		129104	1					
ANR	129863	Argument	xmlout		129104	0					
ANR	129864	Identifier	xmlout		129104	0					
ANR	129865	Argument	"""      <!-- file to a YUV movie in the normal manner. -->\\n"""		129104	1					
ANR	129866	PrimaryExpression	"""      <!-- file to a YUV movie in the normal manner. -->\\n"""		129104	0					
ANR	129867	ElseStatement	else		129104	0					
ANR	129868	IfStatement	if ( ( img -> numcomps == 3 ) && ( img -> comps [ 0 ] . dx == 1 ) && ( img -> comps [ 1 ] . dx == 1 ) && ( img -> comps [ 2 ] . dx == 1 ) )		129104	0					
ANR	129869	Condition	( img -> numcomps == 3 ) && ( img -> comps [ 0 ] . dx == 1 ) && ( img -> comps [ 1 ] . dx == 1 ) && ( img -> comps [ 2 ] . dx == 1 )	1325:19:61411:61549	129104	0	True				
ANR	129870	AndExpression	( img -> numcomps == 3 ) && ( img -> comps [ 0 ] . dx == 1 ) && ( img -> comps [ 1 ] . dx == 1 ) && ( img -> comps [ 2 ] . dx == 1 )		129104	0		&&			
ANR	129871	EqualityExpression	img -> numcomps == 3		129104	0		==			
ANR	129872	PtrMemberAccess	img -> numcomps		129104	0					
ANR	129873	Identifier	img		129104	0					
ANR	129874	Identifier	numcomps		129104	1					
ANR	129875	PrimaryExpression	3		129104	1					
ANR	129876	AndExpression	( img -> comps [ 0 ] . dx == 1 ) && ( img -> comps [ 1 ] . dx == 1 ) && ( img -> comps [ 2 ] . dx == 1 )		129104	1		&&			
ANR	129877	EqualityExpression	img -> comps [ 0 ] . dx == 1		129104	0		==			
ANR	129878	MemberAccess	img -> comps [ 0 ] . dx		129104	0					
ANR	129879	ArrayIndexing	img -> comps [ 0 ]		129104	0					
ANR	129880	PtrMemberAccess	img -> comps		129104	0					
ANR	129881	Identifier	img		129104	0					
ANR	129882	Identifier	comps		129104	1					
ANR	129883	PrimaryExpression	0		129104	1					
ANR	129884	Identifier	dx		129104	1					
ANR	129885	PrimaryExpression	1		129104	1					
ANR	129886	AndExpression	( img -> comps [ 1 ] . dx == 1 ) && ( img -> comps [ 2 ] . dx == 1 )		129104	1		&&			
ANR	129887	EqualityExpression	img -> comps [ 1 ] . dx == 1		129104	0		==			
ANR	129888	MemberAccess	img -> comps [ 1 ] . dx		129104	0					
ANR	129889	ArrayIndexing	img -> comps [ 1 ]		129104	0					
ANR	129890	PtrMemberAccess	img -> comps		129104	0					
ANR	129891	Identifier	img		129104	0					
ANR	129892	Identifier	comps		129104	1					
ANR	129893	PrimaryExpression	1		129104	1					
ANR	129894	Identifier	dx		129104	1					
ANR	129895	PrimaryExpression	1		129104	1					
ANR	129896	EqualityExpression	img -> comps [ 2 ] . dx == 1		129104	1		==			
ANR	129897	MemberAccess	img -> comps [ 2 ] . dx		129104	0					
ANR	129898	ArrayIndexing	img -> comps [ 2 ]		129104	0					
ANR	129899	PtrMemberAccess	img -> comps		129104	0					
ANR	129900	Identifier	img		129104	0					
ANR	129901	Identifier	comps		129104	1					
ANR	129902	PrimaryExpression	2		129104	1					
ANR	129903	Identifier	dx		129104	1					
ANR	129904	PrimaryExpression	1		129104	1					
ANR	129905	CompoundStatement		154:45:7817:7817	129104	1					
ANR	129906	ExpressionStatement	"fprintf ( xmlout , ""      <!-- YUV 4:4:4 file to a series of .bmp files. -->\\n"" )"	1328:12:61599:61677	129104	0	True				
ANR	129907	CallExpression	"fprintf ( xmlout , ""      <!-- YUV 4:4:4 file to a series of .bmp files. -->\\n"" )"		129104	0					
ANR	129908	Callee	fprintf		129104	0					
ANR	129909	Identifier	fprintf		129104	0					
ANR	129910	ArgumentList	xmlout		129104	1					
ANR	129911	Argument	xmlout		129104	0					
ANR	129912	Identifier	xmlout		129104	0					
ANR	129913	Argument	"""      <!-- YUV 4:4:4 file to a series of .bmp files. -->\\n"""		129104	1					
ANR	129914	PrimaryExpression	"""      <!-- YUV 4:4:4 file to a series of .bmp files. -->\\n"""		129104	0					
ANR	129915	ElseStatement	else		129104	0					
ANR	129916	CompoundStatement		156:15:7958:7958	129104	0					
ANR	129917	ExpressionStatement	"fprintf ( xmlout , ""      <!-- file whose image component dimension are unknown, to a series of .j2k files. -->\\n"" )"	1330:12:61708:61840	129104	0	True				
ANR	129918	CallExpression	"fprintf ( xmlout , ""      <!-- file whose image component dimension are unknown, to a series of .j2k files. -->\\n"" )"		129104	0					
ANR	129919	Callee	fprintf		129104	0					
ANR	129920	Identifier	fprintf		129104	0					
ANR	129921	ArgumentList	xmlout		129104	1					
ANR	129922	Argument	xmlout		129104	0					
ANR	129923	Identifier	xmlout		129104	0					
ANR	129924	Argument	"""      <!-- file whose image component dimension are unknown, to a series of .j2k files. -->\\n"""		129104	1					
ANR	129925	PrimaryExpression	"""      <!-- file whose image component dimension are unknown, to a series of .j2k files. -->\\n"""		129104	0					
ANR	129926	ExpressionStatement	opj_destroy_decompress ( dinfo )	1335:4:61863:61892	129104	65	True				
ANR	129927	CallExpression	opj_destroy_decompress ( dinfo )		129104	0					
ANR	129928	Callee	opj_destroy_decompress		129104	0					
ANR	129929	Identifier	opj_destroy_decompress		129104	0					
ANR	129930	ArgumentList	dinfo		129104	1					
ANR	129931	Argument	dinfo		129104	0					
ANR	129932	Identifier	dinfo		129104	0					
ANR	129933	ExpressionStatement	opj_cio_close ( cio )	1336:4:61898:61916	129104	66	True				
ANR	129934	CallExpression	opj_cio_close ( cio )		129104	0					
ANR	129935	Callee	opj_cio_close		129104	0					
ANR	129936	Identifier	opj_cio_close		129104	0					
ANR	129937	ArgumentList	cio		129104	1					
ANR	129938	Argument	cio		129104	0					
ANR	129939	Identifier	cio		129104	0					
ANR	129940	ExpressionStatement	free ( frame_codestream )	1337:4:61922:61944	129104	67	True				
ANR	129941	CallExpression	free ( frame_codestream )		129104	0					
ANR	129942	Callee	free		129104	0					
ANR	129943	Identifier	free		129104	0					
ANR	129944	ArgumentList	frame_codestream		129104	1					
ANR	129945	Argument	frame_codestream		129104	0					
ANR	129946	Identifier	frame_codestream		129104	0					
ANR	129947	ReturnStatement	return 0 ;	1339:4:61951:61959	129104	68	True				
ANR	129948	PrimaryExpression	0		129104	0					
ANR	129949	ReturnType	int		129104	1					
ANR	129950	Identifier	xml_out_frame		129104	2					
ANR	129951	ParameterList	"FILE * file , FILE * xmlout , mj2_sample_t * sample , unsigned int snum , opj_event_mgr_t * event_mgr"		129104	3					
ANR	129952	Parameter	FILE * file	1172:18:53622:53631	129104	0	True				
ANR	129953	ParameterType	FILE *		129104	0					
ANR	129954	Identifier	file		129104	1					
ANR	129955	Parameter	FILE * xmlout	1172:30:53634:53645	129104	1	True				
ANR	129956	ParameterType	FILE *		129104	0					
ANR	129957	Identifier	xmlout		129104	1					
ANR	129958	Parameter	mj2_sample_t * sample	1172:44:53648:53667	129104	2	True				
ANR	129959	ParameterType	mj2_sample_t *		129104	0					
ANR	129960	Identifier	sample		129104	1					
ANR	129961	Parameter	unsigned int snum	1173:18:53688:53704	129104	3	True				
ANR	129962	ParameterType	unsigned int		129104	0					
ANR	129963	Identifier	snum		129104	1					
ANR	129964	Parameter	opj_event_mgr_t * event_mgr	1173:37:53707:53732	129104	4	True				
ANR	129965	ParameterType	opj_event_mgr_t *		129104	0					
ANR	129966	Identifier	event_mgr		129104	1					
ANR	129967	CFGEntryNode	ENTRY		129104		True				
ANR	129968	CFGExitNode	EXIT		129104		True				
ANR	129969	Symbol	j2k -> cp		129104						
ANR	129970	Symbol	notes		129104						
ANR	129971	Symbol	snum		129104						
ANR	129972	Symbol	* dinfo		129104						
ANR	129973	Symbol	dinfo -> j2k_handle		129104						
ANR	129974	Symbol	* img		129104						
ANR	129975	Symbol	opj_decode		129104						
ANR	129976	Symbol	event_mgr		129104						
ANR	129977	Symbol	* * img		129104						
ANR	129978	Symbol	DECODE_ALL_BUT_PACKETS		129104						
ANR	129979	Symbol	dinfo		129104						
ANR	129980	Symbol	img -> comps		129104						
ANR	129981	Symbol	NULL		129104						
ANR	129982	Symbol	sample -> sample_size		129104						
ANR	129983	Symbol	opj_create_decompress		129104						
ANR	129984	Symbol	parameters . cp_limit_decoding		129104						
ANR	129985	Symbol	stderr		129104						
ANR	129986	Symbol	xmlout		129104						
ANR	129987	Symbol	* cp		129104						
ANR	129988	Symbol	j2k -> default_tcp		129104						
ANR	129989	Symbol	* j2k		129104						
ANR	129990	Symbol	img -> comps [ 2 ] . dx		129104						
ANR	129991	Symbol	cp -> tcps		129104						
ANR	129992	Symbol	img -> numcomps		129104						
ANR	129993	Symbol	& cp		129104						
ANR	129994	Symbol	sample -> offset		129104						
ANR	129995	Symbol	img -> comps [ 0 ] . dx		129104						
ANR	129996	Symbol	* img -> comps		129104						
ANR	129997	Symbol	parameters		129104						
ANR	129998	Symbol	img		129104						
ANR	129999	Symbol	cio		129104						
ANR	130000	Symbol	j2k_default_tcp		129104						
ANR	130001	Symbol	file		129104						
ANR	130002	Symbol	* * cp		129104						
ANR	130003	Symbol	numcomps		129104						
ANR	130004	Symbol	* sample		129104						
ANR	130005	Symbol	SEEK_SET		129104						
ANR	130006	Symbol	malloc		129104						
ANR	130007	Symbol	j2k		129104						
ANR	130008	Symbol	& parameters		129104						
ANR	130009	Symbol	opj_cio_open		129104						
ANR	130010	Symbol	i		129104						
ANR	130011	Symbol	cp -> tileno_size		129104						
ANR	130012	Symbol	sample		129104						
ANR	130013	Symbol	cp		129104						
ANR	130014	Symbol	frame_codestream		129104						
ANR	130015	Symbol	CODEC_J2K		129104						
ANR	130016	Symbol	* i		129104						
ANR	130017	Symbol	* cp -> tileno		129104						
ANR	130018	Symbol	cp -> tileno		129104						
ANR	130019	Symbol	img -> comps [ 1 ] . dx		129104						
ANR	130020	Function	int16_to_3packedchars	1344:0:61985:62311							
ANR	130021	FunctionDef	"int16_to_3packedchars (short int value , char * buf)"		130020	0					
ANR	130022	CompoundStatement		1345:0:62040:62311	130020	0					
ANR	130023	IdentifierDeclStatement	int i ;	1348:4:62176:62181	130020	0	True				
ANR	130024	IdentifierDecl	i		130020	0					
ANR	130025	IdentifierDeclType	int		130020	0					
ANR	130026	Identifier	i		130020	1					
ANR	130027	ForStatement	for ( i = 2 ; i >= 0 ; i -- )		130020	1					
ANR	130028	ForInit	i = 2 ;	1349:9:62192:62197	130020	0	True				
ANR	130029	AssignmentExpression	i = 2		130020	0		=			
ANR	130030	Identifier	i		130020	0					
ANR	130031	PrimaryExpression	2		130020	1					
ANR	130032	Condition	i >= 0	1349:16:62199:62204	130020	1	True				
ANR	130033	RelationalExpression	i >= 0		130020	0		>=			
ANR	130034	Identifier	i		130020	0					
ANR	130035	PrimaryExpression	0		130020	1					
ANR	130036	PostIncDecOperationExpression	i --	1349:24:62207:62209	130020	2	True				
ANR	130037	Identifier	i		130020	0					
ANR	130038	IncDec	--		130020	1					
ANR	130039	CompoundStatement		5:29:171:171	130020	3					
ANR	130040	ExpressionStatement	buf [ i ] = ( value & 0x001f ) + 0x60	1350:8:62222:62254	130020	0	True				
ANR	130041	AssignmentExpression	buf [ i ] = ( value & 0x001f ) + 0x60		130020	0		=			
ANR	130042	ArrayIndexing	buf [ i ]		130020	0					
ANR	130043	Identifier	buf		130020	0					
ANR	130044	Identifier	i		130020	1					
ANR	130045	AdditiveExpression	( value & 0x001f ) + 0x60		130020	1		+			
ANR	130046	BitAndExpression	value & 0x001f		130020	0		&			
ANR	130047	Identifier	value		130020	0					
ANR	130048	PrimaryExpression	0x001f		130020	1					
ANR	130049	PrimaryExpression	0x60		130020	1					
ANR	130050	ExpressionStatement	value = ( value >> 5 )	1351:8:62264:62284	130020	1	True				
ANR	130051	AssignmentExpression	value = ( value >> 5 )		130020	0		=			
ANR	130052	Identifier	value		130020	0					
ANR	130053	ShiftExpression	value >> 5		130020	1		>>			
ANR	130054	Identifier	value		130020	0					
ANR	130055	PrimaryExpression	5		130020	1					
ANR	130056	ExpressionStatement	buf [ 3 ] = '\\0'	1353:4:62296:62309	130020	2	True				
ANR	130057	AssignmentExpression	buf [ 3 ] = '\\0'		130020	0		=			
ANR	130058	ArrayIndexing	buf [ 3 ]		130020	0					
ANR	130059	Identifier	buf		130020	0					
ANR	130060	PrimaryExpression	3		130020	1					
ANR	130061	PrimaryExpression	'\\0'		130020	1					
ANR	130062	ReturnType	void		130020	1					
ANR	130063	Identifier	int16_to_3packedchars		130020	2					
ANR	130064	ParameterList	"short int value , char * buf"		130020	3					
ANR	130065	Parameter	short int value	1344:27:62012:62026	130020	0	True				
ANR	130066	ParameterType	short int		130020	0					
ANR	130067	Identifier	value		130020	1					
ANR	130068	Parameter	char * buf	1344:44:62029:62037	130020	1	True				
ANR	130069	ParameterType	char *		130020	0					
ANR	130070	Identifier	buf		130020	1					
ANR	130071	CFGEntryNode	ENTRY		130020		True				
ANR	130072	CFGExitNode	EXIT		130020		True				
ANR	130073	Symbol	buf		130020						
ANR	130074	Symbol	* buf		130020						
ANR	130075	Symbol	* i		130020						
ANR	130076	Symbol	i		130020						
ANR	130077	Symbol	value		130020						
ANR	130078	Function	xml_out_frame_siz	1358:0:62335:66511							
ANR	130079	FunctionDef	"xml_out_frame_siz (FILE * xmlout , opj_image_t * img , opj_cp_t * cp)"		130078	0					
ANR	130080	CompoundStatement		1359:0:62404:66511	130078	0					
ANR	130081	IdentifierDeclStatement	opj_image_comp_t * comp ;	1360:4:62410:62432	130078	0	True				
ANR	130082	IdentifierDecl	* comp		130078	0					
ANR	130083	IdentifierDeclType	opj_image_comp_t *		130078	0					
ANR	130084	Identifier	comp		130078	1					
ANR	130085	IdentifierDeclStatement	int i ;	1361:4:62438:62443	130078	1	True				
ANR	130086	IdentifierDecl	i		130078	0					
ANR	130087	IdentifierDeclType	int		130078	0					
ANR	130088	Identifier	i		130078	1					
ANR	130089	ExpressionStatement	"fprintf ( xmlout , ""          <ImageAndFileSize Marker=\\""SIZ\\"">\\n"" )"	1363:4:62450:62517	130078	2	True				
ANR	130090	CallExpression	"fprintf ( xmlout , ""          <ImageAndFileSize Marker=\\""SIZ\\"">\\n"" )"		130078	0					
ANR	130091	Callee	fprintf		130078	0					
ANR	130092	Identifier	fprintf		130078	0					
ANR	130093	ArgumentList	xmlout		130078	1					
ANR	130094	Argument	xmlout		130078	0					
ANR	130095	Identifier	xmlout		130078	0					
ANR	130096	Argument	"""          <ImageAndFileSize Marker=\\""SIZ\\"">\\n"""		130078	1					
ANR	130097	PrimaryExpression	"""          <ImageAndFileSize Marker=\\""SIZ\\"">\\n"""		130078	0					
ANR	130098	ExpressionStatement	"fprintf ( xmlout , ""            <Xsiz>%d</Xsiz>\\n"" , img -> x1 )"	1366:4:62608:62668	130078	3	True				
ANR	130099	CallExpression	"fprintf ( xmlout , ""            <Xsiz>%d</Xsiz>\\n"" , img -> x1 )"		130078	0					
ANR	130100	Callee	fprintf		130078	0					
ANR	130101	Identifier	fprintf		130078	0					
ANR	130102	ArgumentList	xmlout		130078	1					
ANR	130103	Argument	xmlout		130078	0					
ANR	130104	Identifier	xmlout		130078	0					
ANR	130105	Argument	"""            <Xsiz>%d</Xsiz>\\n"""		130078	1					
ANR	130106	PrimaryExpression	"""            <Xsiz>%d</Xsiz>\\n"""		130078	0					
ANR	130107	Argument	img -> x1		130078	2					
ANR	130108	PtrMemberAccess	img -> x1		130078	0					
ANR	130109	Identifier	img		130078	0					
ANR	130110	Identifier	x1		130078	1					
ANR	130111	ExpressionStatement	"fprintf ( xmlout , ""            <Ysiz>%d</Ysiz>\\n"" , img -> y1 )"	1367:4:62674:62734	130078	4	True				
ANR	130112	CallExpression	"fprintf ( xmlout , ""            <Ysiz>%d</Ysiz>\\n"" , img -> y1 )"		130078	0					
ANR	130113	Callee	fprintf		130078	0					
ANR	130114	Identifier	fprintf		130078	0					
ANR	130115	ArgumentList	xmlout		130078	1					
ANR	130116	Argument	xmlout		130078	0					
ANR	130117	Identifier	xmlout		130078	0					
ANR	130118	Argument	"""            <Ysiz>%d</Ysiz>\\n"""		130078	1					
ANR	130119	PrimaryExpression	"""            <Ysiz>%d</Ysiz>\\n"""		130078	0					
ANR	130120	Argument	img -> y1		130078	2					
ANR	130121	PtrMemberAccess	img -> y1		130078	0					
ANR	130122	Identifier	img		130078	0					
ANR	130123	Identifier	y1		130078	1					
ANR	130124	IfStatement	if ( notes )		130078	5					
ANR	130125	Condition	notes	1368:8:62744:62748	130078	0	True				
ANR	130126	Identifier	notes		130078	0					
ANR	130127	CompoundStatement		10:15:346:346	130078	1					
ANR	130128	ExpressionStatement	"fprintf ( xmlout , ""            <!-- Xsiz, Ysiz is the size of the reference grid. -->\\n"" )"	1369:8:62761:62864	130078	0	True				
ANR	130129	CallExpression	"fprintf ( xmlout , ""            <!-- Xsiz, Ysiz is the size of the reference grid. -->\\n"" )"		130078	0					
ANR	130130	Callee	fprintf		130078	0					
ANR	130131	Identifier	fprintf		130078	0					
ANR	130132	ArgumentList	xmlout		130078	1					
ANR	130133	Argument	xmlout		130078	0					
ANR	130134	Identifier	xmlout		130078	0					
ANR	130135	Argument	"""            <!-- Xsiz, Ysiz is the size of the reference grid. -->\\n"""		130078	1					
ANR	130136	PrimaryExpression	"""            <!-- Xsiz, Ysiz is the size of the reference grid. -->\\n"""		130078	0					
ANR	130137	ExpressionStatement	"fprintf ( xmlout , ""            <XOsiz>%d</XOsiz>\\n"" , img -> x0 )"	1372:4:62876:62938	130078	6	True				
ANR	130138	CallExpression	"fprintf ( xmlout , ""            <XOsiz>%d</XOsiz>\\n"" , img -> x0 )"		130078	0					
ANR	130139	Callee	fprintf		130078	0					
ANR	130140	Identifier	fprintf		130078	0					
ANR	130141	ArgumentList	xmlout		130078	1					
ANR	130142	Argument	xmlout		130078	0					
ANR	130143	Identifier	xmlout		130078	0					
ANR	130144	Argument	"""            <XOsiz>%d</XOsiz>\\n"""		130078	1					
ANR	130145	PrimaryExpression	"""            <XOsiz>%d</XOsiz>\\n"""		130078	0					
ANR	130146	Argument	img -> x0		130078	2					
ANR	130147	PtrMemberAccess	img -> x0		130078	0					
ANR	130148	Identifier	img		130078	0					
ANR	130149	Identifier	x0		130078	1					
ANR	130150	ExpressionStatement	"fprintf ( xmlout , ""            <YOsiz>%d</YOsiz>\\n"" , img -> y0 )"	1373:4:62944:63006	130078	7	True				
ANR	130151	CallExpression	"fprintf ( xmlout , ""            <YOsiz>%d</YOsiz>\\n"" , img -> y0 )"		130078	0					
ANR	130152	Callee	fprintf		130078	0					
ANR	130153	Identifier	fprintf		130078	0					
ANR	130154	ArgumentList	xmlout		130078	1					
ANR	130155	Argument	xmlout		130078	0					
ANR	130156	Identifier	xmlout		130078	0					
ANR	130157	Argument	"""            <YOsiz>%d</YOsiz>\\n"""		130078	1					
ANR	130158	PrimaryExpression	"""            <YOsiz>%d</YOsiz>\\n"""		130078	0					
ANR	130159	Argument	img -> y0		130078	2					
ANR	130160	PtrMemberAccess	img -> y0		130078	0					
ANR	130161	Identifier	img		130078	0					
ANR	130162	Identifier	y0		130078	1					
ANR	130163	IfStatement	if ( notes )		130078	8					
ANR	130164	Condition	notes	1374:8:63016:63020	130078	0	True				
ANR	130165	Identifier	notes		130078	0					
ANR	130166	CompoundStatement		16:15:618:618	130078	1					
ANR	130167	ExpressionStatement	"fprintf ( xmlout , ""            <!-- XOsiz, YOsiz are offsets from grid origin to image origin. -->\\n"" )"	1375:8:63033:63149	130078	0	True				
ANR	130168	CallExpression	"fprintf ( xmlout , ""            <!-- XOsiz, YOsiz are offsets from grid origin to image origin. -->\\n"" )"		130078	0					
ANR	130169	Callee	fprintf		130078	0					
ANR	130170	Identifier	fprintf		130078	0					
ANR	130171	ArgumentList	xmlout		130078	1					
ANR	130172	Argument	xmlout		130078	0					
ANR	130173	Identifier	xmlout		130078	0					
ANR	130174	Argument	"""            <!-- XOsiz, YOsiz are offsets from grid origin to image origin. -->\\n"""		130078	1					
ANR	130175	PrimaryExpression	"""            <!-- XOsiz, YOsiz are offsets from grid origin to image origin. -->\\n"""		130078	0					
ANR	130176	ExpressionStatement	"fprintf ( xmlout , ""            <XTsiz>%d</XTsiz>\\n"" , cp -> tdx )"	1378:4:63161:63223	130078	9	True				
ANR	130177	CallExpression	"fprintf ( xmlout , ""            <XTsiz>%d</XTsiz>\\n"" , cp -> tdx )"		130078	0					
ANR	130178	Callee	fprintf		130078	0					
ANR	130179	Identifier	fprintf		130078	0					
ANR	130180	ArgumentList	xmlout		130078	1					
ANR	130181	Argument	xmlout		130078	0					
ANR	130182	Identifier	xmlout		130078	0					
ANR	130183	Argument	"""            <XTsiz>%d</XTsiz>\\n"""		130078	1					
ANR	130184	PrimaryExpression	"""            <XTsiz>%d</XTsiz>\\n"""		130078	0					
ANR	130185	Argument	cp -> tdx		130078	2					
ANR	130186	PtrMemberAccess	cp -> tdx		130078	0					
ANR	130187	Identifier	cp		130078	0					
ANR	130188	Identifier	tdx		130078	1					
ANR	130189	ExpressionStatement	"fprintf ( xmlout , ""            <YTsiz>%d</YTsiz>\\n"" , cp -> tdy )"	1379:4:63229:63291	130078	10	True				
ANR	130190	CallExpression	"fprintf ( xmlout , ""            <YTsiz>%d</YTsiz>\\n"" , cp -> tdy )"		130078	0					
ANR	130191	Callee	fprintf		130078	0					
ANR	130192	Identifier	fprintf		130078	0					
ANR	130193	ArgumentList	xmlout		130078	1					
ANR	130194	Argument	xmlout		130078	0					
ANR	130195	Identifier	xmlout		130078	0					
ANR	130196	Argument	"""            <YTsiz>%d</YTsiz>\\n"""		130078	1					
ANR	130197	PrimaryExpression	"""            <YTsiz>%d</YTsiz>\\n"""		130078	0					
ANR	130198	Argument	cp -> tdy		130078	2					
ANR	130199	PtrMemberAccess	cp -> tdy		130078	0					
ANR	130200	Identifier	cp		130078	0					
ANR	130201	Identifier	tdy		130078	1					
ANR	130202	IfStatement	if ( notes )		130078	11					
ANR	130203	Condition	notes	1380:8:63301:63305	130078	0	True				
ANR	130204	Identifier	notes		130078	0					
ANR	130205	CompoundStatement		22:15:903:903	130078	1					
ANR	130206	ExpressionStatement	"fprintf ( xmlout , ""            <!-- XTsiz, YTsiz is the size of one tile with respect to the grid. -->\\n"" )"	1381:8:63318:63438	130078	0	True				
ANR	130207	CallExpression	"fprintf ( xmlout , ""            <!-- XTsiz, YTsiz is the size of one tile with respect to the grid. -->\\n"" )"		130078	0					
ANR	130208	Callee	fprintf		130078	0					
ANR	130209	Identifier	fprintf		130078	0					
ANR	130210	ArgumentList	xmlout		130078	1					
ANR	130211	Argument	xmlout		130078	0					
ANR	130212	Identifier	xmlout		130078	0					
ANR	130213	Argument	"""            <!-- XTsiz, YTsiz is the size of one tile with respect to the grid. -->\\n"""		130078	1					
ANR	130214	PrimaryExpression	"""            <!-- XTsiz, YTsiz is the size of one tile with respect to the grid. -->\\n"""		130078	0					
ANR	130215	ExpressionStatement	"fprintf ( xmlout , ""            <XTOsiz>%d</XTOsiz>\\n"" , cp -> tx0 )"	1384:4:63450:63514	130078	12	True				
ANR	130216	CallExpression	"fprintf ( xmlout , ""            <XTOsiz>%d</XTOsiz>\\n"" , cp -> tx0 )"		130078	0					
ANR	130217	Callee	fprintf		130078	0					
ANR	130218	Identifier	fprintf		130078	0					
ANR	130219	ArgumentList	xmlout		130078	1					
ANR	130220	Argument	xmlout		130078	0					
ANR	130221	Identifier	xmlout		130078	0					
ANR	130222	Argument	"""            <XTOsiz>%d</XTOsiz>\\n"""		130078	1					
ANR	130223	PrimaryExpression	"""            <XTOsiz>%d</XTOsiz>\\n"""		130078	0					
ANR	130224	Argument	cp -> tx0		130078	2					
ANR	130225	PtrMemberAccess	cp -> tx0		130078	0					
ANR	130226	Identifier	cp		130078	0					
ANR	130227	Identifier	tx0		130078	1					
ANR	130228	ExpressionStatement	"fprintf ( xmlout , ""            <YTOsiz>%d</YTOsiz>\\n"" , cp -> ty0 )"	1385:4:63520:63584	130078	13	True				
ANR	130229	CallExpression	"fprintf ( xmlout , ""            <YTOsiz>%d</YTOsiz>\\n"" , cp -> ty0 )"		130078	0					
ANR	130230	Callee	fprintf		130078	0					
ANR	130231	Identifier	fprintf		130078	0					
ANR	130232	ArgumentList	xmlout		130078	1					
ANR	130233	Argument	xmlout		130078	0					
ANR	130234	Identifier	xmlout		130078	0					
ANR	130235	Argument	"""            <YTOsiz>%d</YTOsiz>\\n"""		130078	1					
ANR	130236	PrimaryExpression	"""            <YTOsiz>%d</YTOsiz>\\n"""		130078	0					
ANR	130237	Argument	cp -> ty0		130078	2					
ANR	130238	PtrMemberAccess	cp -> ty0		130078	0					
ANR	130239	Identifier	cp		130078	0					
ANR	130240	Identifier	ty0		130078	1					
ANR	130241	IfStatement	if ( notes )		130078	14					
ANR	130242	Condition	notes	1386:8:63594:63598	130078	0	True				
ANR	130243	Identifier	notes		130078	0					
ANR	130244	CompoundStatement		28:15:1196:1196	130078	1					
ANR	130245	ExpressionStatement	"fprintf ( xmlout , ""            <!-- XTOsiz, YTOsiz are offsets from grid origin to first tile origin. -->\\n"" )"	1387:8:63611:63734	130078	0	True				
ANR	130246	CallExpression	"fprintf ( xmlout , ""            <!-- XTOsiz, YTOsiz are offsets from grid origin to first tile origin. -->\\n"" )"		130078	0					
ANR	130247	Callee	fprintf		130078	0					
ANR	130248	Identifier	fprintf		130078	0					
ANR	130249	ArgumentList	xmlout		130078	1					
ANR	130250	Argument	xmlout		130078	0					
ANR	130251	Identifier	xmlout		130078	0					
ANR	130252	Argument	"""            <!-- XTOsiz, YTOsiz are offsets from grid origin to first tile origin. -->\\n"""		130078	1					
ANR	130253	PrimaryExpression	"""            <!-- XTOsiz, YTOsiz are offsets from grid origin to first tile origin. -->\\n"""		130078	0					
ANR	130254	ExpressionStatement	"fprintf ( xmlout , ""            <Csiz>%d</Csiz>\\n"" , img -> numcomps )"	1390:4:63746:63812	130078	15	True				
ANR	130255	CallExpression	"fprintf ( xmlout , ""            <Csiz>%d</Csiz>\\n"" , img -> numcomps )"		130078	0					
ANR	130256	Callee	fprintf		130078	0					
ANR	130257	Identifier	fprintf		130078	0					
ANR	130258	ArgumentList	xmlout		130078	1					
ANR	130259	Argument	xmlout		130078	0					
ANR	130260	Identifier	xmlout		130078	0					
ANR	130261	Argument	"""            <Csiz>%d</Csiz>\\n"""		130078	1					
ANR	130262	PrimaryExpression	"""            <Csiz>%d</Csiz>\\n"""		130078	0					
ANR	130263	Argument	img -> numcomps		130078	2					
ANR	130264	PtrMemberAccess	img -> numcomps		130078	0					
ANR	130265	Identifier	img		130078	0					
ANR	130266	Identifier	numcomps		130078	1					
ANR	130267	IfStatement	if ( notes )		130078	16					
ANR	130268	Condition	notes	1391:8:63822:63826	130078	0	True				
ANR	130269	Identifier	notes		130078	0					
ANR	130270	CompoundStatement		33:15:1424:1424	130078	1					
ANR	130271	ExpressionStatement	"fprintf ( xmlout , ""            <!-- Csiz is the number of components in the image. -->\\n"" )"	1392:8:63839:63943	130078	0	True				
ANR	130272	CallExpression	"fprintf ( xmlout , ""            <!-- Csiz is the number of components in the image. -->\\n"" )"		130078	0					
ANR	130273	Callee	fprintf		130078	0					
ANR	130274	Identifier	fprintf		130078	0					
ANR	130275	ArgumentList	xmlout		130078	1					
ANR	130276	Argument	xmlout		130078	0					
ANR	130277	Identifier	xmlout		130078	0					
ANR	130278	Argument	"""            <!-- Csiz is the number of components in the image. -->\\n"""		130078	1					
ANR	130279	PrimaryExpression	"""            <!-- Csiz is the number of components in the image. -->\\n"""		130078	0					
ANR	130280	ExpressionStatement	"fprintf ( xmlout , ""            <!-- For image components next: -->\\n"" )"	1394:8:63953:64022	130078	1	True				
ANR	130281	CallExpression	"fprintf ( xmlout , ""            <!-- For image components next: -->\\n"" )"		130078	0					
ANR	130282	Callee	fprintf		130078	0					
ANR	130283	Identifier	fprintf		130078	0					
ANR	130284	ArgumentList	xmlout		130078	1					
ANR	130285	Argument	xmlout		130078	0					
ANR	130286	Identifier	xmlout		130078	0					
ANR	130287	Argument	"""            <!-- For image components next: -->\\n"""		130078	1					
ANR	130288	PrimaryExpression	"""            <!-- For image components next: -->\\n"""		130078	0					
ANR	130289	ExpressionStatement	"fprintf ( xmlout , ""            <!--   XRsiz, YRsiz denote pixel-sample-spacing on the grid, per Part I Annex B. -->\\n"" )"	1395:8:64032:64165	130078	2	True				
ANR	130290	CallExpression	"fprintf ( xmlout , ""            <!--   XRsiz, YRsiz denote pixel-sample-spacing on the grid, per Part I Annex B. -->\\n"" )"		130078	0					
ANR	130291	Callee	fprintf		130078	0					
ANR	130292	Identifier	fprintf		130078	0					
ANR	130293	ArgumentList	xmlout		130078	1					
ANR	130294	Argument	xmlout		130078	0					
ANR	130295	Identifier	xmlout		130078	0					
ANR	130296	Argument	"""            <!--   XRsiz, YRsiz denote pixel-sample-spacing on the grid, per Part I Annex B. -->\\n"""		130078	1					
ANR	130297	PrimaryExpression	"""            <!--   XRsiz, YRsiz denote pixel-sample-spacing on the grid, per Part I Annex B. -->\\n"""		130078	0					
ANR	130298	ExpressionStatement	"fprintf ( xmlout , ""            <!--   Bits per pixel (bpp) is the pixel depth. -->\\n"" )"	1398:8:64292:64392	130078	3	True				
ANR	130299	CallExpression	"fprintf ( xmlout , ""            <!--   Bits per pixel (bpp) is the pixel depth. -->\\n"" )"		130078	0					
ANR	130300	Callee	fprintf		130078	0					
ANR	130301	Identifier	fprintf		130078	0					
ANR	130302	ArgumentList	xmlout		130078	1					
ANR	130303	Argument	xmlout		130078	0					
ANR	130304	Identifier	xmlout		130078	0					
ANR	130305	Argument	"""            <!--   Bits per pixel (bpp) is the pixel depth. -->\\n"""		130078	1					
ANR	130306	PrimaryExpression	"""            <!--   Bits per pixel (bpp) is the pixel depth. -->\\n"""		130078	0					
ANR	130307	ExpressionStatement	"fprintf ( xmlout , ""            <!--   WidthOfData and HeightOfData are calculated values, e.g.: w = roundup((Xsiz - XOsiz)/ XRsiz) -->\\n"" )"	1400:8:64402:64554	130078	4	True				
ANR	130308	CallExpression	"fprintf ( xmlout , ""            <!--   WidthOfData and HeightOfData are calculated values, e.g.: w = roundup((Xsiz - XOsiz)/ XRsiz) -->\\n"" )"		130078	0					
ANR	130309	Callee	fprintf		130078	0					
ANR	130310	Identifier	fprintf		130078	0					
ANR	130311	ArgumentList	xmlout		130078	1					
ANR	130312	Argument	xmlout		130078	0					
ANR	130313	Identifier	xmlout		130078	0					
ANR	130314	Argument	"""            <!--   WidthOfData and HeightOfData are calculated values, e.g.: w = roundup((Xsiz - XOsiz)/ XRsiz) -->\\n"""		130078	1					
ANR	130315	PrimaryExpression	"""            <!--   WidthOfData and HeightOfData are calculated values, e.g.: w = roundup((Xsiz - XOsiz)/ XRsiz) -->\\n"""		130078	0					
ANR	130316	ForStatement	for ( i = 0 ; i < img -> numcomps ; i ++ )		130078	17					
ANR	130317	ForInit	i = 0 ;	1404:9:64572:64577	130078	0	True				
ANR	130318	AssignmentExpression	i = 0		130078	0		=			
ANR	130319	Identifier	i		130078	0					
ANR	130320	PrimaryExpression	0		130078	1					
ANR	130321	Condition	i < img -> numcomps	1404:16:64579:64595	130078	1	True				
ANR	130322	RelationalExpression	i < img -> numcomps		130078	0		<			
ANR	130323	Identifier	i		130078	0					
ANR	130324	PtrMemberAccess	img -> numcomps		130078	1					
ANR	130325	Identifier	img		130078	0					
ANR	130326	Identifier	numcomps		130078	1					
ANR	130327	PostIncDecOperationExpression	i ++	1404:35:64598:64600	130078	2	True				
ANR	130328	Identifier	i		130078	0					
ANR	130329	IncDec	++		130078	1					
ANR	130330	CompoundStatement		46:40:2198:2198	130078	3					
ANR	130331	ExpressionStatement	comp = & ( img -> comps [ i ] )	1405:8:64635:64658	130078	0	True				
ANR	130332	AssignmentExpression	comp = & ( img -> comps [ i ] )		130078	0		=			
ANR	130333	Identifier	comp		130078	0					
ANR	130334	UnaryOperationExpression	& ( img -> comps [ i ] )		130078	1					
ANR	130335	UnaryOperator	&		130078	0					
ANR	130336	ArrayIndexing	img -> comps [ i ]		130078	1					
ANR	130337	PtrMemberAccess	img -> comps		130078	0					
ANR	130338	Identifier	img		130078	0					
ANR	130339	Identifier	comps		130078	1					
ANR	130340	Identifier	i		130078	1					
ANR	130341	ExpressionStatement	"fprintf ( xmlout , ""            <Component Num=\\""%d\\"">\\n"" , i + 1 )"	1406:8:64668:64731	130078	1	True				
ANR	130342	CallExpression	"fprintf ( xmlout , ""            <Component Num=\\""%d\\"">\\n"" , i + 1 )"		130078	0					
ANR	130343	Callee	fprintf		130078	0					
ANR	130344	Identifier	fprintf		130078	0					
ANR	130345	ArgumentList	xmlout		130078	1					
ANR	130346	Argument	xmlout		130078	0					
ANR	130347	Identifier	xmlout		130078	0					
ANR	130348	Argument	"""            <Component Num=\\""%d\\"">\\n"""		130078	1					
ANR	130349	PrimaryExpression	"""            <Component Num=\\""%d\\"">\\n"""		130078	0					
ANR	130350	Argument	i + 1		130078	2					
ANR	130351	AdditiveExpression	i + 1		130078	0		+			
ANR	130352	Identifier	i		130078	0					
ANR	130353	PrimaryExpression	1		130078	1					
ANR	130354	ExpressionStatement	"fprintf ( xmlout , ""              <Ssiz>\\n"" )"	1407:8:64741:64783	130078	2	True				
ANR	130355	CallExpression	"fprintf ( xmlout , ""              <Ssiz>\\n"" )"		130078	0					
ANR	130356	Callee	fprintf		130078	0					
ANR	130357	Identifier	fprintf		130078	0					
ANR	130358	ArgumentList	xmlout		130078	1					
ANR	130359	Argument	xmlout		130078	0					
ANR	130360	Identifier	xmlout		130078	0					
ANR	130361	Argument	"""              <Ssiz>\\n"""		130078	1					
ANR	130362	PrimaryExpression	"""              <Ssiz>\\n"""		130078	0					
ANR	130363	IfStatement	if ( raw )		130078	3					
ANR	130364	Condition	raw	1408:12:64797:64799	130078	0	True				
ANR	130365	Identifier	raw		130078	0					
ANR	130366	CompoundStatement		50:17:2397:2397	130078	1					
ANR	130367	ExpressionStatement	"fprintf ( xmlout , ""                <AsHex>0x%02x</AsHex>\\n"" , ( comp -> sgnd << 7 ) & ( comp -> prec - 1 ) )"	1409:12:64816:64932	130078	0	True				
ANR	130368	CallExpression	"fprintf ( xmlout , ""                <AsHex>0x%02x</AsHex>\\n"" , ( comp -> sgnd << 7 ) & ( comp -> prec - 1 ) )"		130078	0					
ANR	130369	Callee	fprintf		130078	0					
ANR	130370	Identifier	fprintf		130078	0					
ANR	130371	ArgumentList	xmlout		130078	1					
ANR	130372	Argument	xmlout		130078	0					
ANR	130373	Identifier	xmlout		130078	0					
ANR	130374	Argument	"""                <AsHex>0x%02x</AsHex>\\n"""		130078	1					
ANR	130375	PrimaryExpression	"""                <AsHex>0x%02x</AsHex>\\n"""		130078	0					
ANR	130376	Argument	( comp -> sgnd << 7 ) & ( comp -> prec - 1 )		130078	2					
ANR	130377	BitAndExpression	( comp -> sgnd << 7 ) & ( comp -> prec - 1 )		130078	0		&			
ANR	130378	ShiftExpression	comp -> sgnd << 7		130078	0		<<			
ANR	130379	PtrMemberAccess	comp -> sgnd		130078	0					
ANR	130380	Identifier	comp		130078	0					
ANR	130381	Identifier	sgnd		130078	1					
ANR	130382	PrimaryExpression	7		130078	1					
ANR	130383	AdditiveExpression	comp -> prec - 1		130078	1		-			
ANR	130384	PtrMemberAccess	comp -> prec		130078	0					
ANR	130385	Identifier	comp		130078	0					
ANR	130386	Identifier	prec		130078	1					
ANR	130387	PrimaryExpression	1		130078	1					
ANR	130388	IfStatement	if ( derived )		130078	4					
ANR	130389	Condition	derived	1412:12:64956:64962	130078	0	True				
ANR	130390	Identifier	derived		130078	0					
ANR	130391	CompoundStatement		54:21:2560:2560	130078	1					
ANR	130392	ExpressionStatement	"fprintf ( xmlout , ""                <Signed>%d</Signed>\\n"" , comp -> sgnd )"	1413:12:64979:65047	130078	0	True				
ANR	130393	CallExpression	"fprintf ( xmlout , ""                <Signed>%d</Signed>\\n"" , comp -> sgnd )"		130078	0					
ANR	130394	Callee	fprintf		130078	0					
ANR	130395	Identifier	fprintf		130078	0					
ANR	130396	ArgumentList	xmlout		130078	1					
ANR	130397	Argument	xmlout		130078	0					
ANR	130398	Identifier	xmlout		130078	0					
ANR	130399	Argument	"""                <Signed>%d</Signed>\\n"""		130078	1					
ANR	130400	PrimaryExpression	"""                <Signed>%d</Signed>\\n"""		130078	0					
ANR	130401	Argument	comp -> sgnd		130078	2					
ANR	130402	PtrMemberAccess	comp -> sgnd		130078	0					
ANR	130403	Identifier	comp		130078	0					
ANR	130404	Identifier	sgnd		130078	1					
ANR	130405	ExpressionStatement	"fprintf ( xmlout , ""                <PrecisionInBits>%d</PrecisionInBits>\\n"" , comp -> prec )"	1414:12:65061:65167	130078	1	True				
ANR	130406	CallExpression	"fprintf ( xmlout , ""                <PrecisionInBits>%d</PrecisionInBits>\\n"" , comp -> prec )"		130078	0					
ANR	130407	Callee	fprintf		130078	0					
ANR	130408	Identifier	fprintf		130078	0					
ANR	130409	ArgumentList	xmlout		130078	1					
ANR	130410	Argument	xmlout		130078	0					
ANR	130411	Identifier	xmlout		130078	0					
ANR	130412	Argument	"""                <PrecisionInBits>%d</PrecisionInBits>\\n"""		130078	1					
ANR	130413	PrimaryExpression	"""                <PrecisionInBits>%d</PrecisionInBits>\\n"""		130078	0					
ANR	130414	Argument	comp -> prec		130078	2					
ANR	130415	PtrMemberAccess	comp -> prec		130078	0					
ANR	130416	Identifier	comp		130078	0					
ANR	130417	Identifier	prec		130078	1					
ANR	130418	ExpressionStatement	"fprintf ( xmlout , ""              </Ssiz>\\n"" )"	1417:8:65187:65230	130078	5	True				
ANR	130419	CallExpression	"fprintf ( xmlout , ""              </Ssiz>\\n"" )"		130078	0					
ANR	130420	Callee	fprintf		130078	0					
ANR	130421	Identifier	fprintf		130078	0					
ANR	130422	ArgumentList	xmlout		130078	1					
ANR	130423	Argument	xmlout		130078	0					
ANR	130424	Identifier	xmlout		130078	0					
ANR	130425	Argument	"""              </Ssiz>\\n"""		130078	1					
ANR	130426	PrimaryExpression	"""              </Ssiz>\\n"""		130078	0					
ANR	130427	ExpressionStatement	"fprintf ( xmlout , ""              <XRsiz>%d</XRsiz>\\n"" , comp -> dx )"	1418:8:65240:65303	130078	6	True				
ANR	130428	CallExpression	"fprintf ( xmlout , ""              <XRsiz>%d</XRsiz>\\n"" , comp -> dx )"		130078	0					
ANR	130429	Callee	fprintf		130078	0					
ANR	130430	Identifier	fprintf		130078	0					
ANR	130431	ArgumentList	xmlout		130078	1					
ANR	130432	Argument	xmlout		130078	0					
ANR	130433	Identifier	xmlout		130078	0					
ANR	130434	Argument	"""              <XRsiz>%d</XRsiz>\\n"""		130078	1					
ANR	130435	PrimaryExpression	"""              <XRsiz>%d</XRsiz>\\n"""		130078	0					
ANR	130436	Argument	comp -> dx		130078	2					
ANR	130437	PtrMemberAccess	comp -> dx		130078	0					
ANR	130438	Identifier	comp		130078	0					
ANR	130439	Identifier	dx		130078	1					
ANR	130440	ExpressionStatement	"fprintf ( xmlout , ""              <YRsiz>%d</YRsiz>\\n"" , comp -> dy )"	1419:8:65313:65376	130078	7	True				
ANR	130441	CallExpression	"fprintf ( xmlout , ""              <YRsiz>%d</YRsiz>\\n"" , comp -> dy )"		130078	0					
ANR	130442	Callee	fprintf		130078	0					
ANR	130443	Identifier	fprintf		130078	0					
ANR	130444	ArgumentList	xmlout		130078	1					
ANR	130445	Argument	xmlout		130078	0					
ANR	130446	Identifier	xmlout		130078	0					
ANR	130447	Argument	"""              <YRsiz>%d</YRsiz>\\n"""		130078	1					
ANR	130448	PrimaryExpression	"""              <YRsiz>%d</YRsiz>\\n"""		130078	0					
ANR	130449	Argument	comp -> dy		130078	2					
ANR	130450	PtrMemberAccess	comp -> dy		130078	0					
ANR	130451	Identifier	comp		130078	0					
ANR	130452	Identifier	dy		130078	1					
ANR	130453	ExpressionStatement	"fprintf ( xmlout , ""              <WidthOfData>%d</WidthOfData>\\n"" , comp -> w )"	1420:8:65386:65460	130078	8	True				
ANR	130454	CallExpression	"fprintf ( xmlout , ""              <WidthOfData>%d</WidthOfData>\\n"" , comp -> w )"		130078	0					
ANR	130455	Callee	fprintf		130078	0					
ANR	130456	Identifier	fprintf		130078	0					
ANR	130457	ArgumentList	xmlout		130078	1					
ANR	130458	Argument	xmlout		130078	0					
ANR	130459	Identifier	xmlout		130078	0					
ANR	130460	Argument	"""              <WidthOfData>%d</WidthOfData>\\n"""		130078	1					
ANR	130461	PrimaryExpression	"""              <WidthOfData>%d</WidthOfData>\\n"""		130078	0					
ANR	130462	Argument	comp -> w		130078	2					
ANR	130463	PtrMemberAccess	comp -> w		130078	0					
ANR	130464	Identifier	comp		130078	0					
ANR	130465	Identifier	w		130078	1					
ANR	130466	ExpressionStatement	"fprintf ( xmlout , ""              <HeightOfData>%d</HeightOfData>\\n"" , comp -> h )"	1421:8:65470:65546	130078	9	True				
ANR	130467	CallExpression	"fprintf ( xmlout , ""              <HeightOfData>%d</HeightOfData>\\n"" , comp -> h )"		130078	0					
ANR	130468	Callee	fprintf		130078	0					
ANR	130469	Identifier	fprintf		130078	0					
ANR	130470	ArgumentList	xmlout		130078	1					
ANR	130471	Argument	xmlout		130078	0					
ANR	130472	Identifier	xmlout		130078	0					
ANR	130473	Argument	"""              <HeightOfData>%d</HeightOfData>\\n"""		130078	1					
ANR	130474	PrimaryExpression	"""              <HeightOfData>%d</HeightOfData>\\n"""		130078	0					
ANR	130475	Argument	comp -> h		130078	2					
ANR	130476	PtrMemberAccess	comp -> h		130078	0					
ANR	130477	Identifier	comp		130078	0					
ANR	130478	Identifier	h		130078	1					
ANR	130479	ExpressionStatement	"fprintf ( xmlout , ""            </Component>\\n"" )"	1433:8:66398:66444	130078	10	True				
ANR	130480	CallExpression	"fprintf ( xmlout , ""            </Component>\\n"" )"		130078	0					
ANR	130481	Callee	fprintf		130078	0					
ANR	130482	Identifier	fprintf		130078	0					
ANR	130483	ArgumentList	xmlout		130078	1					
ANR	130484	Argument	xmlout		130078	0					
ANR	130485	Identifier	xmlout		130078	0					
ANR	130486	Argument	"""            </Component>\\n"""		130078	1					
ANR	130487	PrimaryExpression	"""            </Component>\\n"""		130078	0					
ANR	130488	ExpressionStatement	"fprintf ( xmlout , ""          </ImageAndFileSize>\\n"" )"	1435:4:66456:66509	130078	18	True				
ANR	130489	CallExpression	"fprintf ( xmlout , ""          </ImageAndFileSize>\\n"" )"		130078	0					
ANR	130490	Callee	fprintf		130078	0					
ANR	130491	Identifier	fprintf		130078	0					
ANR	130492	ArgumentList	xmlout		130078	1					
ANR	130493	Argument	xmlout		130078	0					
ANR	130494	Identifier	xmlout		130078	0					
ANR	130495	Argument	"""          </ImageAndFileSize>\\n"""		130078	1					
ANR	130496	PrimaryExpression	"""          </ImageAndFileSize>\\n"""		130078	0					
ANR	130497	ReturnType	void		130078	1					
ANR	130498	Identifier	xml_out_frame_siz		130078	2					
ANR	130499	ParameterList	"FILE * xmlout , opj_image_t * img , opj_cp_t * cp"		130078	3					
ANR	130500	Parameter	FILE * xmlout	1358:23:62358:62369	130078	0	True				
ANR	130501	ParameterType	FILE *		130078	0					
ANR	130502	Identifier	xmlout		130078	1					
ANR	130503	Parameter	opj_image_t * img	1358:37:62372:62387	130078	1	True				
ANR	130504	ParameterType	opj_image_t *		130078	0					
ANR	130505	Identifier	img		130078	1					
ANR	130506	Parameter	opj_cp_t * cp	1358:55:62390:62401	130078	2	True				
ANR	130507	ParameterType	opj_cp_t *		130078	0					
ANR	130508	Identifier	cp		130078	1					
ANR	130509	CFGEntryNode	ENTRY		130078		True				
ANR	130510	CFGExitNode	EXIT		130078		True				
ANR	130511	Symbol	img		130078						
ANR	130512	Symbol	notes		130078						
ANR	130513	Symbol	img -> y0		130078						
ANR	130514	Symbol	comp -> dx		130078						
ANR	130515	Symbol	comp -> dy		130078						
ANR	130516	Symbol	img -> y1		130078						
ANR	130517	Symbol	* img		130078						
ANR	130518	Symbol	cp -> tx0		130078						
ANR	130519	Symbol	* comp		130078						
ANR	130520	Symbol	derived		130078						
ANR	130521	Symbol	comp		130078						
ANR	130522	Symbol	img -> comps		130078						
ANR	130523	Symbol	i		130078						
ANR	130524	Symbol	cp -> ty0		130078						
ANR	130525	Symbol	raw		130078						
ANR	130526	Symbol	cp -> tdx		130078						
ANR	130527	Symbol	comp -> prec		130078						
ANR	130528	Symbol	cp -> tdy		130078						
ANR	130529	Symbol	cp		130078						
ANR	130530	Symbol	img -> x1		130078						
ANR	130531	Symbol	comp -> w		130078						
ANR	130532	Symbol	xmlout		130078						
ANR	130533	Symbol	img -> x0		130078						
ANR	130534	Symbol	* cp		130078						
ANR	130535	Symbol	img -> numcomps		130078						
ANR	130536	Symbol	comp -> sgnd		130078						
ANR	130537	Symbol	comp -> h		130078						
ANR	130538	Function	xml_out_frame_cod	1440:0:66535:72666							
ANR	130539	FunctionDef	"xml_out_frame_cod (FILE * xmlout , opj_tcp_t * tcp)"		130538	0					
ANR	130540	CompoundStatement		1441:0:66588:72666	130538	0					
ANR	130541	IdentifierDeclStatement	opj_tccp_t * tccp ;	1446:4:66889:66905	130538	0	True				
ANR	130542	IdentifierDecl	* tccp		130538	0					
ANR	130543	IdentifierDeclType	opj_tccp_t *		130538	0					
ANR	130544	Identifier	tccp		130538	1					
ANR	130545	IdentifierDeclStatement	int i ;	1447:4:66911:66916	130538	1	True				
ANR	130546	IdentifierDecl	i		130538	0					
ANR	130547	IdentifierDeclType	int		130538	0					
ANR	130548	Identifier	i		130538	1					
ANR	130549	IdentifierDeclStatement	"char spaces [ 13 ] = ""            "" ;"	1448:4:66922:66954	130538	2	True				
ANR	130550	IdentifierDecl	"spaces [ 13 ] = ""            """		130538	0					
ANR	130551	IdentifierDeclType	char [ 13 ]		130538	0					
ANR	130552	Identifier	spaces		130538	1					
ANR	130553	PrimaryExpression	13		130538	2					
ANR	130554	AssignmentExpression	"spaces [ 13 ] = ""            """		130538	3		=			
ANR	130555	Identifier	spaces		130538	0					
ANR	130556	PrimaryExpression	"""            """		130538	1					
ANR	130557	IdentifierDeclStatement	char * s = spaces ;	1449:4:66987:67003	130538	3	True				
ANR	130558	IdentifierDecl	* s = spaces		130538	0					
ANR	130559	IdentifierDeclType	char *		130538	0					
ANR	130560	Identifier	s		130538	1					
ANR	130561	AssignmentExpression	* s = spaces		130538	2		=			
ANR	130562	Identifier	spaces		130538	0					
ANR	130563	Identifier	spaces		130538	1					
ANR	130564	IfStatement	if ( tcp == j2k_default_tcp )		130538	4					
ANR	130565	Condition	tcp == j2k_default_tcp	1450:8:67013:67034	130538	0	True				
ANR	130566	EqualityExpression	tcp == j2k_default_tcp		130538	0		==			
ANR	130567	Identifier	tcp		130538	0					
ANR	130568	Identifier	j2k_default_tcp		130538	1					
ANR	130569	CompoundStatement		10:32:448:448	130538	1					
ANR	130570	ExpressionStatement	s ++	1451:8:67047:67050	130538	0	True				
ANR	130571	PostIncDecOperationExpression	s ++		130538	0					
ANR	130572	Identifier	s		130538	0					
ANR	130573	IncDec	++		130538	1					
ANR	130574	ExpressionStatement	s ++	1452:8:67060:67063	130538	1	True				
ANR	130575	PostIncDecOperationExpression	s ++		130538	0					
ANR	130576	Identifier	s		130538	0					
ANR	130577	IncDec	++		130538	1					
ANR	130578	ExpressionStatement	tccp = & ( tcp -> tccps [ 0 ] )	1454:4:67112:67135	130538	5	True				
ANR	130579	AssignmentExpression	tccp = & ( tcp -> tccps [ 0 ] )		130538	0		=			
ANR	130580	Identifier	tccp		130538	0					
ANR	130581	UnaryOperationExpression	& ( tcp -> tccps [ 0 ] )		130538	1					
ANR	130582	UnaryOperator	&		130538	0					
ANR	130583	ArrayIndexing	tcp -> tccps [ 0 ]		130538	1					
ANR	130584	PtrMemberAccess	tcp -> tccps		130538	0					
ANR	130585	Identifier	tcp		130538	0					
ANR	130586	Identifier	tccps		130538	1					
ANR	130587	PrimaryExpression	0		130538	1					
ANR	130588	ExpressionStatement	"fprintf ( xmlout , ""%s<CodingStyleDefault Marker=\\""COD\\"">\\n"" , s )"	1456:4:67142:67220	130538	6	True				
ANR	130589	CallExpression	"fprintf ( xmlout , ""%s<CodingStyleDefault Marker=\\""COD\\"">\\n"" , s )"		130538	0					
ANR	130590	Callee	fprintf		130538	0					
ANR	130591	Identifier	fprintf		130538	0					
ANR	130592	ArgumentList	xmlout		130538	1					
ANR	130593	Argument	xmlout		130538	0					
ANR	130594	Identifier	xmlout		130538	0					
ANR	130595	Argument	"""%s<CodingStyleDefault Marker=\\""COD\\"">\\n"""		130538	1					
ANR	130596	PrimaryExpression	"""%s<CodingStyleDefault Marker=\\""COD\\"">\\n"""		130538	0					
ANR	130597	Argument	s		130538	2					
ANR	130598	Identifier	s		130538	0					
ANR	130599	ExpressionStatement	"fprintf ( xmlout , ""%s  <Scod>0x%02x</Scod>\\n"" , s , tcp -> csty )"	1459:4:67300:67363	130538	7	True				
ANR	130600	CallExpression	"fprintf ( xmlout , ""%s  <Scod>0x%02x</Scod>\\n"" , s , tcp -> csty )"		130538	0					
ANR	130601	Callee	fprintf		130538	0					
ANR	130602	Identifier	fprintf		130538	0					
ANR	130603	ArgumentList	xmlout		130538	1					
ANR	130604	Argument	xmlout		130538	0					
ANR	130605	Identifier	xmlout		130538	0					
ANR	130606	Argument	"""%s  <Scod>0x%02x</Scod>\\n"""		130538	1					
ANR	130607	PrimaryExpression	"""%s  <Scod>0x%02x</Scod>\\n"""		130538	0					
ANR	130608	Argument	s		130538	2					
ANR	130609	Identifier	s		130538	0					
ANR	130610	Argument	tcp -> csty		130538	3					
ANR	130611	PtrMemberAccess	tcp -> csty		130538	0					
ANR	130612	Identifier	tcp		130538	0					
ANR	130613	Identifier	csty		130538	1					
ANR	130614	IfStatement	if ( notes )		130538	8					
ANR	130615	Condition	notes	1460:8:67386:67390	130538	0	True				
ANR	130616	Identifier	notes		130538	0					
ANR	130617	CompoundStatement		20:15:804:804	130538	1					
ANR	130618	ExpressionStatement	"fprintf ( xmlout , ""%s  <!-- For Scod, specific bits mean (where bit 0 is lowest or rightmost): -->\\n"" , s )"	1461:8:67403:67538	130538	0	True				
ANR	130619	CallExpression	"fprintf ( xmlout , ""%s  <!-- For Scod, specific bits mean (where bit 0 is lowest or rightmost): -->\\n"" , s )"		130538	0					
ANR	130620	Callee	fprintf		130538	0					
ANR	130621	Identifier	fprintf		130538	0					
ANR	130622	ArgumentList	xmlout		130538	1					
ANR	130623	Argument	xmlout		130538	0					
ANR	130624	Identifier	xmlout		130538	0					
ANR	130625	Argument	"""%s  <!-- For Scod, specific bits mean (where bit 0 is lowest or rightmost): -->\\n"""		130538	1					
ANR	130626	PrimaryExpression	"""%s  <!-- For Scod, specific bits mean (where bit 0 is lowest or rightmost): -->\\n"""		130538	0					
ANR	130627	Argument	s		130538	2					
ANR	130628	Identifier	s		130538	0					
ANR	130629	ExpressionStatement	"fprintf ( xmlout , ""%s  <!-- bit 0: Defines entropy coder precincts -->\\n"" , s )"	1464:8:67548:67626	130538	1	True				
ANR	130630	CallExpression	"fprintf ( xmlout , ""%s  <!-- bit 0: Defines entropy coder precincts -->\\n"" , s )"		130538	0					
ANR	130631	Callee	fprintf		130538	0					
ANR	130632	Identifier	fprintf		130538	0					
ANR	130633	ArgumentList	xmlout		130538	1					
ANR	130634	Argument	xmlout		130538	0					
ANR	130635	Identifier	xmlout		130538	0					
ANR	130636	Argument	"""%s  <!-- bit 0: Defines entropy coder precincts -->\\n"""		130538	1					
ANR	130637	PrimaryExpression	"""%s  <!-- bit 0: Defines entropy coder precincts -->\\n"""		130538	0					
ANR	130638	Argument	s		130538	2					
ANR	130639	Identifier	s		130538	0					
ANR	130640	ExpressionStatement	"fprintf ( xmlout , ""%s  <!--        0 = (PPx=15, PPy=15); 1 = precincts defined below. -->\\n"" , s )"	1465:8:67636:67746	130538	2	True				
ANR	130641	CallExpression	"fprintf ( xmlout , ""%s  <!--        0 = (PPx=15, PPy=15); 1 = precincts defined below. -->\\n"" , s )"		130538	0					
ANR	130642	Callee	fprintf		130538	0					
ANR	130643	Identifier	fprintf		130538	0					
ANR	130644	ArgumentList	xmlout		130538	1					
ANR	130645	Argument	xmlout		130538	0					
ANR	130646	Identifier	xmlout		130538	0					
ANR	130647	Argument	"""%s  <!--        0 = (PPx=15, PPy=15); 1 = precincts defined below. -->\\n"""		130538	1					
ANR	130648	PrimaryExpression	"""%s  <!--        0 = (PPx=15, PPy=15); 1 = precincts defined below. -->\\n"""		130538	0					
ANR	130649	Argument	s		130538	2					
ANR	130650	Identifier	s		130538	0					
ANR	130651	ExpressionStatement	"fprintf ( xmlout , ""%s  <!-- bit 1: 1 = SOP marker may be used; 0 = not. -->\\n"" , s )"	1467:8:67756:67855	130538	3	True				
ANR	130652	CallExpression	"fprintf ( xmlout , ""%s  <!-- bit 1: 1 = SOP marker may be used; 0 = not. -->\\n"" , s )"		130538	0					
ANR	130653	Callee	fprintf		130538	0					
ANR	130654	Identifier	fprintf		130538	0					
ANR	130655	ArgumentList	xmlout		130538	1					
ANR	130656	Argument	xmlout		130538	0					
ANR	130657	Identifier	xmlout		130538	0					
ANR	130658	Argument	"""%s  <!-- bit 1: 1 = SOP marker may be used; 0 = not. -->\\n"""		130538	1					
ANR	130659	PrimaryExpression	"""%s  <!-- bit 1: 1 = SOP marker may be used; 0 = not. -->\\n"""		130538	0					
ANR	130660	Argument	s		130538	2					
ANR	130661	Identifier	s		130538	0					
ANR	130662	ExpressionStatement	"fprintf ( xmlout , ""%s  <!-- bit 2: 1 = EPH marker may be used; 0 = not. -->\\n"" , s )"	1469:8:67865:67964	130538	4	True				
ANR	130663	CallExpression	"fprintf ( xmlout , ""%s  <!-- bit 2: 1 = EPH marker may be used; 0 = not. -->\\n"" , s )"		130538	0					
ANR	130664	Callee	fprintf		130538	0					
ANR	130665	Identifier	fprintf		130538	0					
ANR	130666	ArgumentList	xmlout		130538	1					
ANR	130667	Argument	xmlout		130538	0					
ANR	130668	Identifier	xmlout		130538	0					
ANR	130669	Argument	"""%s  <!-- bit 2: 1 = EPH marker may be used; 0 = not. -->\\n"""		130538	1					
ANR	130670	PrimaryExpression	"""%s  <!-- bit 2: 1 = EPH marker may be used; 0 = not. -->\\n"""		130538	0					
ANR	130671	Argument	s		130538	2					
ANR	130672	Identifier	s		130538	0					
ANR	130673	ExpressionStatement	"fprintf ( xmlout , ""%s  <SGcod>\\n"" , s )"	1472:4:67976:68016	130538	9	True				
ANR	130674	CallExpression	"fprintf ( xmlout , ""%s  <SGcod>\\n"" , s )"		130538	0					
ANR	130675	Callee	fprintf		130538	0					
ANR	130676	Identifier	fprintf		130538	0					
ANR	130677	ArgumentList	xmlout		130538	1					
ANR	130678	Argument	xmlout		130538	0					
ANR	130679	Identifier	xmlout		130538	0					
ANR	130680	Argument	"""%s  <SGcod>\\n"""		130538	1					
ANR	130681	PrimaryExpression	"""%s  <SGcod>\\n"""		130538	0					
ANR	130682	Argument	s		130538	2					
ANR	130683	Identifier	s		130538	0					
ANR	130684	ExpressionStatement	"fprintf ( xmlout , ""%s    <ProgressionOrder>%d</ProgressionOrder>\\n"" , s , tcp -> prg )"	1473:4:68022:68118	130538	10	True				
ANR	130685	CallExpression	"fprintf ( xmlout , ""%s    <ProgressionOrder>%d</ProgressionOrder>\\n"" , s , tcp -> prg )"		130538	0					
ANR	130686	Callee	fprintf		130538	0					
ANR	130687	Identifier	fprintf		130538	0					
ANR	130688	ArgumentList	xmlout		130538	1					
ANR	130689	Argument	xmlout		130538	0					
ANR	130690	Identifier	xmlout		130538	0					
ANR	130691	Argument	"""%s    <ProgressionOrder>%d</ProgressionOrder>\\n"""		130538	1					
ANR	130692	PrimaryExpression	"""%s    <ProgressionOrder>%d</ProgressionOrder>\\n"""		130538	0					
ANR	130693	Argument	s		130538	2					
ANR	130694	Identifier	s		130538	0					
ANR	130695	Argument	tcp -> prg		130538	3					
ANR	130696	PtrMemberAccess	tcp -> prg		130538	0					
ANR	130697	Identifier	tcp		130538	0					
ANR	130698	Identifier	prg		130538	1					
ANR	130699	IfStatement	if ( notes )		130538	11					
ANR	130700	Condition	notes	1475:8:68152:68156	130538	0	True				
ANR	130701	Identifier	notes		130538	0					
ANR	130702	CompoundStatement		35:15:1570:1570	130538	1					
ANR	130703	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Defined Progression Order Values are: -->\\n"" , s )"	1476:8:68169:68248	130538	0	True				
ANR	130704	CallExpression	"fprintf ( xmlout , ""%s    <!-- Defined Progression Order Values are: -->\\n"" , s )"		130538	0					
ANR	130705	Callee	fprintf		130538	0					
ANR	130706	Identifier	fprintf		130538	0					
ANR	130707	ArgumentList	xmlout		130538	1					
ANR	130708	Argument	xmlout		130538	0					
ANR	130709	Identifier	xmlout		130538	0					
ANR	130710	Argument	"""%s    <!-- Defined Progression Order Values are: -->\\n"""		130538	1					
ANR	130711	PrimaryExpression	"""%s    <!-- Defined Progression Order Values are: -->\\n"""		130538	0					
ANR	130712	Argument	s		130538	2					
ANR	130713	Identifier	s		130538	0					
ANR	130714	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- 0 = LRCP; 1 = RLCP; 2 = RPCL; 3 = PCRL; 4 = CPRL -->\\n"" , s )"	1477:8:68258:68361	130538	1	True				
ANR	130715	CallExpression	"fprintf ( xmlout , ""%s    <!-- 0 = LRCP; 1 = RLCP; 2 = RPCL; 3 = PCRL; 4 = CPRL -->\\n"" , s )"		130538	0					
ANR	130716	Callee	fprintf		130538	0					
ANR	130717	Identifier	fprintf		130538	0					
ANR	130718	ArgumentList	xmlout		130538	1					
ANR	130719	Argument	xmlout		130538	0					
ANR	130720	Identifier	xmlout		130538	0					
ANR	130721	Argument	"""%s    <!-- 0 = LRCP; 1 = RLCP; 2 = RPCL; 3 = PCRL; 4 = CPRL -->\\n"""		130538	1					
ANR	130722	PrimaryExpression	"""%s    <!-- 0 = LRCP; 1 = RLCP; 2 = RPCL; 3 = PCRL; 4 = CPRL -->\\n"""		130538	0					
ANR	130723	Argument	s		130538	2					
ANR	130724	Identifier	s		130538	0					
ANR	130725	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- where L = \\""layer\\"", R = \\""resolution level\\"", C = \\""component\\"", P = \\""position\\"". -->\\n"" , s )"	1479:8:68371:68525	130538	2	True				
ANR	130726	CallExpression	"fprintf ( xmlout , ""%s    <!-- where L = \\""layer\\"", R = \\""resolution level\\"", C = \\""component\\"", P = \\""position\\"". -->\\n"" , s )"		130538	0					
ANR	130727	Callee	fprintf		130538	0					
ANR	130728	Identifier	fprintf		130538	0					
ANR	130729	ArgumentList	xmlout		130538	1					
ANR	130730	Argument	xmlout		130538	0					
ANR	130731	Identifier	xmlout		130538	0					
ANR	130732	Argument	"""%s    <!-- where L = \\""layer\\"", R = \\""resolution level\\"", C = \\""component\\"", P = \\""position\\"". -->\\n"""		130538	1					
ANR	130733	PrimaryExpression	"""%s    <!-- where L = \\""layer\\"", R = \\""resolution level\\"", C = \\""component\\"", P = \\""position\\"". -->\\n"""		130538	0					
ANR	130734	Argument	s		130538	2					
ANR	130735	Identifier	s		130538	0					
ANR	130736	ExpressionStatement	"fprintf ( xmlout , ""%s    <NumberOfLayers>%d</NumberOfLayers>\\n"" , s , tcp -> numlayers )"	1483:4:68537:68635	130538	12	True				
ANR	130737	CallExpression	"fprintf ( xmlout , ""%s    <NumberOfLayers>%d</NumberOfLayers>\\n"" , s , tcp -> numlayers )"		130538	0					
ANR	130738	Callee	fprintf		130538	0					
ANR	130739	Identifier	fprintf		130538	0					
ANR	130740	ArgumentList	xmlout		130538	1					
ANR	130741	Argument	xmlout		130538	0					
ANR	130742	Identifier	xmlout		130538	0					
ANR	130743	Argument	"""%s    <NumberOfLayers>%d</NumberOfLayers>\\n"""		130538	1					
ANR	130744	PrimaryExpression	"""%s    <NumberOfLayers>%d</NumberOfLayers>\\n"""		130538	0					
ANR	130745	Argument	s		130538	2					
ANR	130746	Identifier	s		130538	0					
ANR	130747	Argument	tcp -> numlayers		130538	3					
ANR	130748	PtrMemberAccess	tcp -> numlayers		130538	0					
ANR	130749	Identifier	tcp		130538	0					
ANR	130750	Identifier	numlayers		130538	1					
ANR	130751	ExpressionStatement	"fprintf ( xmlout , ""%s    <MultipleComponentTransformation>%d</MultipleComponentTransformation>\\n"" , s , tcp -> mct )"	1485:4:68666:68799	130538	13	True				
ANR	130752	CallExpression	"fprintf ( xmlout , ""%s    <MultipleComponentTransformation>%d</MultipleComponentTransformation>\\n"" , s , tcp -> mct )"		130538	0					
ANR	130753	Callee	fprintf		130538	0					
ANR	130754	Identifier	fprintf		130538	0					
ANR	130755	ArgumentList	xmlout		130538	1					
ANR	130756	Argument	xmlout		130538	0					
ANR	130757	Identifier	xmlout		130538	0					
ANR	130758	Argument	"""%s    <MultipleComponentTransformation>%d</MultipleComponentTransformation>\\n"""		130538	1					
ANR	130759	PrimaryExpression	"""%s    <MultipleComponentTransformation>%d</MultipleComponentTransformation>\\n"""		130538	0					
ANR	130760	Argument	s		130538	2					
ANR	130761	Identifier	s		130538	0					
ANR	130762	Argument	tcp -> mct		130538	3					
ANR	130763	PtrMemberAccess	tcp -> mct		130538	0					
ANR	130764	Identifier	tcp		130538	0					
ANR	130765	Identifier	mct		130538	1					
ANR	130766	IfStatement	if ( notes )		130538	14					
ANR	130767	Condition	notes	1488:8:68856:68860	130538	0	True				
ANR	130768	Identifier	notes		130538	0					
ANR	130769	CompoundStatement		48:15:2274:2274	130538	1					
ANR	130770	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- For MCT, 0 = none, 1 = transform first 3 components for efficiency, per Part I Annex G -->\\n"" , s )"	1489:8:68873:69030	130538	0	True				
ANR	130771	CallExpression	"fprintf ( xmlout , ""%s    <!-- For MCT, 0 = none, 1 = transform first 3 components for efficiency, per Part I Annex G -->\\n"" , s )"		130538	0					
ANR	130772	Callee	fprintf		130538	0					
ANR	130773	Identifier	fprintf		130538	0					
ANR	130774	ArgumentList	xmlout		130538	1					
ANR	130775	Argument	xmlout		130538	0					
ANR	130776	Identifier	xmlout		130538	0					
ANR	130777	Argument	"""%s    <!-- For MCT, 0 = none, 1 = transform first 3 components for efficiency, per Part I Annex G -->\\n"""		130538	1					
ANR	130778	PrimaryExpression	"""%s    <!-- For MCT, 0 = none, 1 = transform first 3 components for efficiency, per Part I Annex G -->\\n"""		130538	0					
ANR	130779	Argument	s		130538	2					
ANR	130780	Identifier	s		130538	0					
ANR	130781	ExpressionStatement	"fprintf ( xmlout , ""%s  </SGcod>\\n"" , s )"	1493:4:69042:69083	130538	15	True				
ANR	130782	CallExpression	"fprintf ( xmlout , ""%s  </SGcod>\\n"" , s )"		130538	0					
ANR	130783	Callee	fprintf		130538	0					
ANR	130784	Identifier	fprintf		130538	0					
ANR	130785	ArgumentList	xmlout		130538	1					
ANR	130786	Argument	xmlout		130538	0					
ANR	130787	Identifier	xmlout		130538	0					
ANR	130788	Argument	"""%s  </SGcod>\\n"""		130538	1					
ANR	130789	PrimaryExpression	"""%s  </SGcod>\\n"""		130538	0					
ANR	130790	Argument	s		130538	2					
ANR	130791	Identifier	s		130538	0					
ANR	130792	ExpressionStatement	"fprintf ( xmlout , ""%s  <SPcod>\\n"" , s )"	1495:4:69214:69254	130538	16	True				
ANR	130793	CallExpression	"fprintf ( xmlout , ""%s  <SPcod>\\n"" , s )"		130538	0					
ANR	130794	Callee	fprintf		130538	0					
ANR	130795	Identifier	fprintf		130538	0					
ANR	130796	ArgumentList	xmlout		130538	1					
ANR	130797	Argument	xmlout		130538	0					
ANR	130798	Identifier	xmlout		130538	0					
ANR	130799	Argument	"""%s  <SPcod>\\n"""		130538	1					
ANR	130800	PrimaryExpression	"""%s  <SPcod>\\n"""		130538	0					
ANR	130801	Argument	s		130538	2					
ANR	130802	Identifier	s		130538	0					
ANR	130803	ExpressionStatement	"fprintf ( xmlout , ""%s    <NumberOfDecompositionLevels>%d</NumberOfDecompositionLevels>\\n"" , s , tccp -> numresolutions - 1 )"	1499:4:69485:69626	130538	17	True				
ANR	130804	CallExpression	"fprintf ( xmlout , ""%s    <NumberOfDecompositionLevels>%d</NumberOfDecompositionLevels>\\n"" , s , tccp -> numresolutions - 1 )"		130538	0					
ANR	130805	Callee	fprintf		130538	0					
ANR	130806	Identifier	fprintf		130538	0					
ANR	130807	ArgumentList	xmlout		130538	1					
ANR	130808	Argument	xmlout		130538	0					
ANR	130809	Identifier	xmlout		130538	0					
ANR	130810	Argument	"""%s    <NumberOfDecompositionLevels>%d</NumberOfDecompositionLevels>\\n"""		130538	1					
ANR	130811	PrimaryExpression	"""%s    <NumberOfDecompositionLevels>%d</NumberOfDecompositionLevels>\\n"""		130538	0					
ANR	130812	Argument	s		130538	2					
ANR	130813	Identifier	s		130538	0					
ANR	130814	Argument	tccp -> numresolutions - 1		130538	3					
ANR	130815	AdditiveExpression	tccp -> numresolutions - 1		130538	0		-			
ANR	130816	PtrMemberAccess	tccp -> numresolutions		130538	0					
ANR	130817	Identifier	tccp		130538	0					
ANR	130818	Identifier	numresolutions		130538	1					
ANR	130819	PrimaryExpression	1		130538	1					
ANR	130820	ExpressionStatement	"fprintf ( xmlout , ""%s    <CodeblockWidth>%d</CodeblockWidth>\\n"" , s , tccp -> cblkw - 2 )"	1502:4:69658:69757	130538	18	True				
ANR	130821	CallExpression	"fprintf ( xmlout , ""%s    <CodeblockWidth>%d</CodeblockWidth>\\n"" , s , tccp -> cblkw - 2 )"		130538	0					
ANR	130822	Callee	fprintf		130538	0					
ANR	130823	Identifier	fprintf		130538	0					
ANR	130824	ArgumentList	xmlout		130538	1					
ANR	130825	Argument	xmlout		130538	0					
ANR	130826	Identifier	xmlout		130538	0					
ANR	130827	Argument	"""%s    <CodeblockWidth>%d</CodeblockWidth>\\n"""		130538	1					
ANR	130828	PrimaryExpression	"""%s    <CodeblockWidth>%d</CodeblockWidth>\\n"""		130538	0					
ANR	130829	Argument	s		130538	2					
ANR	130830	Identifier	s		130538	0					
ANR	130831	Argument	tccp -> cblkw - 2		130538	3					
ANR	130832	AdditiveExpression	tccp -> cblkw - 2		130538	0		-			
ANR	130833	PtrMemberAccess	tccp -> cblkw		130538	0					
ANR	130834	Identifier	tccp		130538	0					
ANR	130835	Identifier	cblkw		130538	1					
ANR	130836	PrimaryExpression	2		130538	1					
ANR	130837	ExpressionStatement	"fprintf ( xmlout , ""%s    <CodeblockHeight>%d</CodeblockHeight>\\n"" , s , tccp -> cblkh - 2 )"	1504:4:69788:69889	130538	19	True				
ANR	130838	CallExpression	"fprintf ( xmlout , ""%s    <CodeblockHeight>%d</CodeblockHeight>\\n"" , s , tccp -> cblkh - 2 )"		130538	0					
ANR	130839	Callee	fprintf		130538	0					
ANR	130840	Identifier	fprintf		130538	0					
ANR	130841	ArgumentList	xmlout		130538	1					
ANR	130842	Argument	xmlout		130538	0					
ANR	130843	Identifier	xmlout		130538	0					
ANR	130844	Argument	"""%s    <CodeblockHeight>%d</CodeblockHeight>\\n"""		130538	1					
ANR	130845	PrimaryExpression	"""%s    <CodeblockHeight>%d</CodeblockHeight>\\n"""		130538	0					
ANR	130846	Argument	s		130538	2					
ANR	130847	Identifier	s		130538	0					
ANR	130848	Argument	tccp -> cblkh - 2		130538	3					
ANR	130849	AdditiveExpression	tccp -> cblkh - 2		130538	0		-			
ANR	130850	PtrMemberAccess	tccp -> cblkh		130538	0					
ANR	130851	Identifier	tccp		130538	0					
ANR	130852	Identifier	cblkh		130538	1					
ANR	130853	PrimaryExpression	2		130538	1					
ANR	130854	IfStatement	if ( notes )		130538	20					
ANR	130855	Condition	notes	1506:8:69926:69930	130538	0	True				
ANR	130856	Identifier	notes		130538	0					
ANR	130857	CompoundStatement		66:15:3344:3344	130538	1					
ANR	130858	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- CBW and CBH are non-negative, and summed cannot exceed 8 -->\\n"" , s )"	1507:8:69943:70054	130538	0	True				
ANR	130859	CallExpression	"fprintf ( xmlout , ""%s    <!-- CBW and CBH are non-negative, and summed cannot exceed 8 -->\\n"" , s )"		130538	0					
ANR	130860	Callee	fprintf		130538	0					
ANR	130861	Identifier	fprintf		130538	0					
ANR	130862	ArgumentList	xmlout		130538	1					
ANR	130863	Argument	xmlout		130538	0					
ANR	130864	Identifier	xmlout		130538	0					
ANR	130865	Argument	"""%s    <!-- CBW and CBH are non-negative, and summed cannot exceed 8 -->\\n"""		130538	1					
ANR	130866	PrimaryExpression	"""%s    <!-- CBW and CBH are non-negative, and summed cannot exceed 8 -->\\n"""		130538	0					
ANR	130867	Argument	s		130538	2					
ANR	130868	Identifier	s		130538	0					
ANR	130869	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Codeblock dimension is 2^(value + 2) -->\\n"" , s )"	1509:8:70064:70142	130538	1	True				
ANR	130870	CallExpression	"fprintf ( xmlout , ""%s    <!-- Codeblock dimension is 2^(value + 2) -->\\n"" , s )"		130538	0					
ANR	130871	Callee	fprintf		130538	0					
ANR	130872	Identifier	fprintf		130538	0					
ANR	130873	ArgumentList	xmlout		130538	1					
ANR	130874	Argument	xmlout		130538	0					
ANR	130875	Identifier	xmlout		130538	0					
ANR	130876	Argument	"""%s    <!-- Codeblock dimension is 2^(value + 2) -->\\n"""		130538	1					
ANR	130877	PrimaryExpression	"""%s    <!-- Codeblock dimension is 2^(value + 2) -->\\n"""		130538	0					
ANR	130878	Argument	s		130538	2					
ANR	130879	Identifier	s		130538	0					
ANR	130880	ExpressionStatement	"fprintf ( xmlout , ""%s    <CodeblockStyle>0x%02x</CodeblockStyle>\\n"" , s , tccp -> cblksty )"	1511:4:70154:70255	130538	21	True				
ANR	130881	CallExpression	"fprintf ( xmlout , ""%s    <CodeblockStyle>0x%02x</CodeblockStyle>\\n"" , s , tccp -> cblksty )"		130538	0					
ANR	130882	Callee	fprintf		130538	0					
ANR	130883	Identifier	fprintf		130538	0					
ANR	130884	ArgumentList	xmlout		130538	1					
ANR	130885	Argument	xmlout		130538	0					
ANR	130886	Identifier	xmlout		130538	0					
ANR	130887	Argument	"""%s    <CodeblockStyle>0x%02x</CodeblockStyle>\\n"""		130538	1					
ANR	130888	PrimaryExpression	"""%s    <CodeblockStyle>0x%02x</CodeblockStyle>\\n"""		130538	0					
ANR	130889	Argument	s		130538	2					
ANR	130890	Identifier	s		130538	0					
ANR	130891	Argument	tccp -> cblksty		130538	3					
ANR	130892	PtrMemberAccess	tccp -> cblksty		130538	0					
ANR	130893	Identifier	tccp		130538	0					
ANR	130894	Identifier	cblksty		130538	1					
ANR	130895	IfStatement	if ( notes )		130538	22					
ANR	130896	Condition	notes	1513:8:70292:70296	130538	0	True				
ANR	130897	Identifier	notes		130538	0					
ANR	130898	CompoundStatement		73:15:3710:3710	130538	1					
ANR	130899	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- For CodeblockStyle, bits mean (with value 1=feature on, 0=off): -->\\n"" , s )"	1514:8:70309:70443	130538	0	True				
ANR	130900	CallExpression	"fprintf ( xmlout , ""%s    <!-- For CodeblockStyle, bits mean (with value 1=feature on, 0=off): -->\\n"" , s )"		130538	0					
ANR	130901	Callee	fprintf		130538	0					
ANR	130902	Identifier	fprintf		130538	0					
ANR	130903	ArgumentList	xmlout		130538	1					
ANR	130904	Argument	xmlout		130538	0					
ANR	130905	Identifier	xmlout		130538	0					
ANR	130906	Argument	"""%s    <!-- For CodeblockStyle, bits mean (with value 1=feature on, 0=off): -->\\n"""		130538	1					
ANR	130907	PrimaryExpression	"""%s    <!-- For CodeblockStyle, bits mean (with value 1=feature on, 0=off): -->\\n"""		130538	0					
ANR	130908	Argument	s		130538	2					
ANR	130909	Identifier	s		130538	0					
ANR	130910	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- bit 0: Selective arithmetic coding bypass. -->\\n"" , s )"	1517:8:70453:70550	130538	1	True				
ANR	130911	CallExpression	"fprintf ( xmlout , ""%s    <!-- bit 0: Selective arithmetic coding bypass. -->\\n"" , s )"		130538	0					
ANR	130912	Callee	fprintf		130538	0					
ANR	130913	Identifier	fprintf		130538	0					
ANR	130914	ArgumentList	xmlout		130538	1					
ANR	130915	Argument	xmlout		130538	0					
ANR	130916	Identifier	xmlout		130538	0					
ANR	130917	Argument	"""%s    <!-- bit 0: Selective arithmetic coding bypass. -->\\n"""		130538	1					
ANR	130918	PrimaryExpression	"""%s    <!-- bit 0: Selective arithmetic coding bypass. -->\\n"""		130538	0					
ANR	130919	Argument	s		130538	2					
ANR	130920	Identifier	s		130538	0					
ANR	130921	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- bit 1: Reset context probabilities on coding pass boundaries. -->\\n"" , s )"	1519:8:70560:70692	130538	2	True				
ANR	130922	CallExpression	"fprintf ( xmlout , ""%s    <!-- bit 1: Reset context probabilities on coding pass boundaries. -->\\n"" , s )"		130538	0					
ANR	130923	Callee	fprintf		130538	0					
ANR	130924	Identifier	fprintf		130538	0					
ANR	130925	ArgumentList	xmlout		130538	1					
ANR	130926	Argument	xmlout		130538	0					
ANR	130927	Identifier	xmlout		130538	0					
ANR	130928	Argument	"""%s    <!-- bit 1: Reset context probabilities on coding pass boundaries. -->\\n"""		130538	1					
ANR	130929	PrimaryExpression	"""%s    <!-- bit 1: Reset context probabilities on coding pass boundaries. -->\\n"""		130538	0					
ANR	130930	Argument	s		130538	2					
ANR	130931	Identifier	s		130538	0					
ANR	130932	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- bit 2: Termination on each coding pass. -->\\n"" , s )"	1522:8:70702:70799	130538	3	True				
ANR	130933	CallExpression	"fprintf ( xmlout , ""%s    <!-- bit 2: Termination on each coding pass. -->\\n"" , s )"		130538	0					
ANR	130934	Callee	fprintf		130538	0					
ANR	130935	Identifier	fprintf		130538	0					
ANR	130936	ArgumentList	xmlout		130538	1					
ANR	130937	Argument	xmlout		130538	0					
ANR	130938	Identifier	xmlout		130538	0					
ANR	130939	Argument	"""%s    <!-- bit 2: Termination on each coding pass. -->\\n"""		130538	1					
ANR	130940	PrimaryExpression	"""%s    <!-- bit 2: Termination on each coding pass. -->\\n"""		130538	0					
ANR	130941	Argument	s		130538	2					
ANR	130942	Identifier	s		130538	0					
ANR	130943	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- bit 3: Vertically causal context. -->\\n"" , s )"	1524:8:70809:70884	130538	4	True				
ANR	130944	CallExpression	"fprintf ( xmlout , ""%s    <!-- bit 3: Vertically causal context. -->\\n"" , s )"		130538	0					
ANR	130945	Callee	fprintf		130538	0					
ANR	130946	Identifier	fprintf		130538	0					
ANR	130947	ArgumentList	xmlout		130538	1					
ANR	130948	Argument	xmlout		130538	0					
ANR	130949	Identifier	xmlout		130538	0					
ANR	130950	Argument	"""%s    <!-- bit 3: Vertically causal context. -->\\n"""		130538	1					
ANR	130951	PrimaryExpression	"""%s    <!-- bit 3: Vertically causal context. -->\\n"""		130538	0					
ANR	130952	Argument	s		130538	2					
ANR	130953	Identifier	s		130538	0					
ANR	130954	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- bit 4: Predictable termination. -->\\n"" , s )"	1525:8:70894:70967	130538	5	True				
ANR	130955	CallExpression	"fprintf ( xmlout , ""%s    <!-- bit 4: Predictable termination. -->\\n"" , s )"		130538	0					
ANR	130956	Callee	fprintf		130538	0					
ANR	130957	Identifier	fprintf		130538	0					
ANR	130958	ArgumentList	xmlout		130538	1					
ANR	130959	Argument	xmlout		130538	0					
ANR	130960	Identifier	xmlout		130538	0					
ANR	130961	Argument	"""%s    <!-- bit 4: Predictable termination. -->\\n"""		130538	1					
ANR	130962	PrimaryExpression	"""%s    <!-- bit 4: Predictable termination. -->\\n"""		130538	0					
ANR	130963	Argument	s		130538	2					
ANR	130964	Identifier	s		130538	0					
ANR	130965	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- bit 5: Segmentation symbols are used. -->\\n"" , s )"	1526:8:70977:71056	130538	6	True				
ANR	130966	CallExpression	"fprintf ( xmlout , ""%s    <!-- bit 5: Segmentation symbols are used. -->\\n"" , s )"		130538	0					
ANR	130967	Callee	fprintf		130538	0					
ANR	130968	Identifier	fprintf		130538	0					
ANR	130969	ArgumentList	xmlout		130538	1					
ANR	130970	Argument	xmlout		130538	0					
ANR	130971	Identifier	xmlout		130538	0					
ANR	130972	Argument	"""%s    <!-- bit 5: Segmentation symbols are used. -->\\n"""		130538	1					
ANR	130973	PrimaryExpression	"""%s    <!-- bit 5: Segmentation symbols are used. -->\\n"""		130538	0					
ANR	130974	Argument	s		130538	2					
ANR	130975	Identifier	s		130538	0					
ANR	130976	ExpressionStatement	"fprintf ( xmlout , ""%s    <Transformation>%d</Transformation>\\n"" , s , tccp -> qmfbid )"	1528:4:71068:71164	130538	23	True				
ANR	130977	CallExpression	"fprintf ( xmlout , ""%s    <Transformation>%d</Transformation>\\n"" , s , tccp -> qmfbid )"		130538	0					
ANR	130978	Callee	fprintf		130538	0					
ANR	130979	Identifier	fprintf		130538	0					
ANR	130980	ArgumentList	xmlout		130538	1					
ANR	130981	Argument	xmlout		130538	0					
ANR	130982	Identifier	xmlout		130538	0					
ANR	130983	Argument	"""%s    <Transformation>%d</Transformation>\\n"""		130538	1					
ANR	130984	PrimaryExpression	"""%s    <Transformation>%d</Transformation>\\n"""		130538	0					
ANR	130985	Argument	s		130538	2					
ANR	130986	Identifier	s		130538	0					
ANR	130987	Argument	tccp -> qmfbid		130538	3					
ANR	130988	PtrMemberAccess	tccp -> qmfbid		130538	0					
ANR	130989	Identifier	tccp		130538	0					
ANR	130990	Identifier	qmfbid		130538	1					
ANR	130991	IfStatement	if ( notes )		130538	24					
ANR	130992	Condition	notes	1530:8:71198:71202	130538	0	True				
ANR	130993	Identifier	notes		130538	0					
ANR	130994	CompoundStatement		90:15:4616:4616	130538	1					
ANR	130995	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- For Transformation, 0=\\""9-7 irreversible filter\\"", 1=\\""5-3 reversible filter\\"" -->\\n"" , s )"	1531:8:71215:71364	130538	0	True				
ANR	130996	CallExpression	"fprintf ( xmlout , ""%s    <!-- For Transformation, 0=\\""9-7 irreversible filter\\"", 1=\\""5-3 reversible filter\\"" -->\\n"" , s )"		130538	0					
ANR	130997	Callee	fprintf		130538	0					
ANR	130998	Identifier	fprintf		130538	0					
ANR	130999	ArgumentList	xmlout		130538	1					
ANR	131000	Argument	xmlout		130538	0					
ANR	131001	Identifier	xmlout		130538	0					
ANR	131002	Argument	"""%s    <!-- For Transformation, 0=\\""9-7 irreversible filter\\"", 1=\\""5-3 reversible filter\\"" -->\\n"""		130538	1					
ANR	131003	PrimaryExpression	"""%s    <!-- For Transformation, 0=\\""9-7 irreversible filter\\"", 1=\\""5-3 reversible filter\\"" -->\\n"""		130538	0					
ANR	131004	Argument	s		130538	2					
ANR	131005	Identifier	s		130538	0					
ANR	131006	IfStatement	if ( tccp -> csty & J2K_CP_CSTY_PRT )		130538	25					
ANR	131007	Condition	tccp -> csty & J2K_CP_CSTY_PRT	1535:8:71380:71407	130538	0	True				
ANR	131008	BitAndExpression	tccp -> csty & J2K_CP_CSTY_PRT		130538	0		&			
ANR	131009	PtrMemberAccess	tccp -> csty		130538	0					
ANR	131010	Identifier	tccp		130538	0					
ANR	131011	Identifier	csty		130538	1					
ANR	131012	Identifier	J2K_CP_CSTY_PRT		130538	1					
ANR	131013	CompoundStatement		95:38:4821:4821	130538	1					
ANR	131014	ExpressionStatement	"fprintf ( xmlout , ""%s    <PrecinctSize>\\n"" , s )"	1536:8:71420:71467	130538	0	True				
ANR	131015	CallExpression	"fprintf ( xmlout , ""%s    <PrecinctSize>\\n"" , s )"		130538	0					
ANR	131016	Callee	fprintf		130538	0					
ANR	131017	Identifier	fprintf		130538	0					
ANR	131018	ArgumentList	xmlout		130538	1					
ANR	131019	Argument	xmlout		130538	0					
ANR	131020	Identifier	xmlout		130538	0					
ANR	131021	Argument	"""%s    <PrecinctSize>\\n"""		130538	1					
ANR	131022	PrimaryExpression	"""%s    <PrecinctSize>\\n"""		130538	0					
ANR	131023	Argument	s		130538	2					
ANR	131024	Identifier	s		130538	0					
ANR	131025	IfStatement	if ( notes )		130538	1					
ANR	131026	Condition	notes	1537:12:71507:71511	130538	0	True				
ANR	131027	Identifier	notes		130538	0					
ANR	131028	CompoundStatement		97:19:4925:4925	130538	1					
ANR	131029	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- These are size exponents PPx and PPy. May be zero only for first level (aka N(L)LL subband)-->\\n"" , s )"	1538:12:71528:71697	130538	0	True				
ANR	131030	CallExpression	"fprintf ( xmlout , ""%s    <!-- These are size exponents PPx and PPy. May be zero only for first level (aka N(L)LL subband)-->\\n"" , s )"		130538	0					
ANR	131031	Callee	fprintf		130538	0					
ANR	131032	Identifier	fprintf		130538	0					
ANR	131033	ArgumentList	xmlout		130538	1					
ANR	131034	Argument	xmlout		130538	0					
ANR	131035	Identifier	xmlout		130538	0					
ANR	131036	Argument	"""%s    <!-- These are size exponents PPx and PPy. May be zero only for first level (aka N(L)LL subband)-->\\n"""		130538	1					
ANR	131037	PrimaryExpression	"""%s    <!-- These are size exponents PPx and PPy. May be zero only for first level (aka N(L)LL subband)-->\\n"""		130538	0					
ANR	131038	Argument	s		130538	2					
ANR	131039	Identifier	s		130538	0					
ANR	131040	ForStatement	for ( i = 0 ; i < tccp -> numresolutions ; i ++ )		130538	2					
ANR	131041	ForInit	i = 0 ;	1542:13:71722:71727	130538	0	True				
ANR	131042	AssignmentExpression	i = 0		130538	0		=			
ANR	131043	Identifier	i		130538	0					
ANR	131044	PrimaryExpression	0		130538	1					
ANR	131045	Condition	i < tccp -> numresolutions	1542:20:71729:71752	130538	1	True				
ANR	131046	RelationalExpression	i < tccp -> numresolutions		130538	0		<			
ANR	131047	Identifier	i		130538	0					
ANR	131048	PtrMemberAccess	tccp -> numresolutions		130538	1					
ANR	131049	Identifier	tccp		130538	0					
ANR	131050	Identifier	numresolutions		130538	1					
ANR	131051	PostIncDecOperationExpression	i ++	1542:46:71755:71757	130538	2	True				
ANR	131052	Identifier	i		130538	0					
ANR	131053	IncDec	++		130538	1					
ANR	131054	CompoundStatement		102:51:5171:5171	130538	3					
ANR	131055	ExpressionStatement	"fprintf ( xmlout , ""%s      <PrecinctHeightAndWidth  ResolutionLevel=\\""%d\\"">\\n"" , s , i )"	1543:12:71774:71878	130538	0	True				
ANR	131056	CallExpression	"fprintf ( xmlout , ""%s      <PrecinctHeightAndWidth  ResolutionLevel=\\""%d\\"">\\n"" , s , i )"		130538	0					
ANR	131057	Callee	fprintf		130538	0					
ANR	131058	Identifier	fprintf		130538	0					
ANR	131059	ArgumentList	xmlout		130538	1					
ANR	131060	Argument	xmlout		130538	0					
ANR	131061	Identifier	xmlout		130538	0					
ANR	131062	Argument	"""%s      <PrecinctHeightAndWidth  ResolutionLevel=\\""%d\\"">\\n"""		130538	1					
ANR	131063	PrimaryExpression	"""%s      <PrecinctHeightAndWidth  ResolutionLevel=\\""%d\\"">\\n"""		130538	0					
ANR	131064	Argument	s		130538	2					
ANR	131065	Identifier	s		130538	0					
ANR	131066	Argument	i		130538	3					
ANR	131067	Identifier	i		130538	0					
ANR	131068	IfStatement	if ( raw )		130538	1					
ANR	131069	Condition	raw	1545:16:71896:71898	130538	0	True				
ANR	131070	Identifier	raw		130538	0					
ANR	131071	CompoundStatement		105:21:5312:5312	130538	1					
ANR	131072	ExpressionStatement	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> prch [ i ] << 4 ) | tccp -> prcw [ i ] )"	1546:16:71919:72036	130538	0	True				
ANR	131073	CallExpression	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> prch [ i ] << 4 ) | tccp -> prcw [ i ] )"		130538	0					
ANR	131074	Callee	fprintf		130538	0					
ANR	131075	Identifier	fprintf		130538	0					
ANR	131076	ArgumentList	xmlout		130538	1					
ANR	131077	Argument	xmlout		130538	0					
ANR	131078	Identifier	xmlout		130538	0					
ANR	131079	Argument	"""%s        <AsHex>0x%02x</AsHex>\\n"""		130538	1					
ANR	131080	PrimaryExpression	"""%s        <AsHex>0x%02x</AsHex>\\n"""		130538	0					
ANR	131081	Argument	s		130538	2					
ANR	131082	Identifier	s		130538	0					
ANR	131083	Argument	( tccp -> prch [ i ] << 4 ) | tccp -> prcw [ i ]		130538	3					
ANR	131084	InclusiveOrExpression	( tccp -> prch [ i ] << 4 ) | tccp -> prcw [ i ]		130538	0		|			
ANR	131085	ShiftExpression	tccp -> prch [ i ] << 4		130538	0		<<			
ANR	131086	ArrayIndexing	tccp -> prch [ i ]		130538	0					
ANR	131087	PtrMemberAccess	tccp -> prch		130538	0					
ANR	131088	Identifier	tccp		130538	0					
ANR	131089	Identifier	prch		130538	1					
ANR	131090	Identifier	i		130538	1					
ANR	131091	PrimaryExpression	4		130538	1					
ANR	131092	ArrayIndexing	tccp -> prcw [ i ]		130538	1					
ANR	131093	PtrMemberAccess	tccp -> prcw		130538	0					
ANR	131094	Identifier	tccp		130538	0					
ANR	131095	Identifier	prcw		130538	1					
ANR	131096	Identifier	i		130538	1					
ANR	131097	IfStatement	if ( derived )		130538	2					
ANR	131098	Condition	derived	1549:16:72107:72113	130538	0	True				
ANR	131099	Identifier	derived		130538	0					
ANR	131100	CompoundStatement		109:25:5527:5527	130538	1					
ANR	131101	ExpressionStatement	"fprintf ( xmlout , ""%s        <WidthAsDecimal>%d</WidthAsDecimal>\\n"" , s , tccp -> prcw [ i ] )"	1550:16:72134:72242	130538	0	True				
ANR	131102	CallExpression	"fprintf ( xmlout , ""%s        <WidthAsDecimal>%d</WidthAsDecimal>\\n"" , s , tccp -> prcw [ i ] )"		130538	0					
ANR	131103	Callee	fprintf		130538	0					
ANR	131104	Identifier	fprintf		130538	0					
ANR	131105	ArgumentList	xmlout		130538	1					
ANR	131106	Argument	xmlout		130538	0					
ANR	131107	Identifier	xmlout		130538	0					
ANR	131108	Argument	"""%s        <WidthAsDecimal>%d</WidthAsDecimal>\\n"""		130538	1					
ANR	131109	PrimaryExpression	"""%s        <WidthAsDecimal>%d</WidthAsDecimal>\\n"""		130538	0					
ANR	131110	Argument	s		130538	2					
ANR	131111	Identifier	s		130538	0					
ANR	131112	Argument	tccp -> prcw [ i ]		130538	3					
ANR	131113	ArrayIndexing	tccp -> prcw [ i ]		130538	0					
ANR	131114	PtrMemberAccess	tccp -> prcw		130538	0					
ANR	131115	Identifier	tccp		130538	0					
ANR	131116	Identifier	prcw		130538	1					
ANR	131117	Identifier	i		130538	1					
ANR	131118	ExpressionStatement	"fprintf ( xmlout , ""%s        <HeightAsDecimal>%d</HeightAsDecimal>\\n"" , s , tccp -> prch [ i ] )"	1552:16:72260:72370	130538	1	True				
ANR	131119	CallExpression	"fprintf ( xmlout , ""%s        <HeightAsDecimal>%d</HeightAsDecimal>\\n"" , s , tccp -> prch [ i ] )"		130538	0					
ANR	131120	Callee	fprintf		130538	0					
ANR	131121	Identifier	fprintf		130538	0					
ANR	131122	ArgumentList	xmlout		130538	1					
ANR	131123	Argument	xmlout		130538	0					
ANR	131124	Identifier	xmlout		130538	0					
ANR	131125	Argument	"""%s        <HeightAsDecimal>%d</HeightAsDecimal>\\n"""		130538	1					
ANR	131126	PrimaryExpression	"""%s        <HeightAsDecimal>%d</HeightAsDecimal>\\n"""		130538	0					
ANR	131127	Argument	s		130538	2					
ANR	131128	Identifier	s		130538	0					
ANR	131129	Argument	tccp -> prch [ i ]		130538	3					
ANR	131130	ArrayIndexing	tccp -> prch [ i ]		130538	0					
ANR	131131	PtrMemberAccess	tccp -> prch		130538	0					
ANR	131132	Identifier	tccp		130538	0					
ANR	131133	Identifier	prch		130538	1					
ANR	131134	Identifier	i		130538	1					
ANR	131135	ExpressionStatement	"fprintf ( xmlout , ""%s      </PrecinctHeightAndWidth>\\n"" , s , i )"	1555:12:72398:72459	130538	3	True				
ANR	131136	CallExpression	"fprintf ( xmlout , ""%s      </PrecinctHeightAndWidth>\\n"" , s , i )"		130538	0					
ANR	131137	Callee	fprintf		130538	0					
ANR	131138	Identifier	fprintf		130538	0					
ANR	131139	ArgumentList	xmlout		130538	1					
ANR	131140	Argument	xmlout		130538	0					
ANR	131141	Identifier	xmlout		130538	0					
ANR	131142	Argument	"""%s      </PrecinctHeightAndWidth>\\n"""		130538	1					
ANR	131143	PrimaryExpression	"""%s      </PrecinctHeightAndWidth>\\n"""		130538	0					
ANR	131144	Argument	s		130538	2					
ANR	131145	Identifier	s		130538	0					
ANR	131146	Argument	i		130538	3					
ANR	131147	Identifier	i		130538	0					
ANR	131148	ExpressionStatement	"fprintf ( xmlout , ""%s    </PrecinctSize>\\n"" , s )"	1557:8:72479:72527	130538	3	True				
ANR	131149	CallExpression	"fprintf ( xmlout , ""%s    </PrecinctSize>\\n"" , s )"		130538	0					
ANR	131150	Callee	fprintf		130538	0					
ANR	131151	Identifier	fprintf		130538	0					
ANR	131152	ArgumentList	xmlout		130538	1					
ANR	131153	Argument	xmlout		130538	0					
ANR	131154	Identifier	xmlout		130538	0					
ANR	131155	Argument	"""%s    </PrecinctSize>\\n"""		130538	1					
ANR	131156	PrimaryExpression	"""%s    </PrecinctSize>\\n"""		130538	0					
ANR	131157	Argument	s		130538	2					
ANR	131158	Identifier	s		130538	0					
ANR	131159	ExpressionStatement	"fprintf ( xmlout , ""%s  </SPcod>\\n"" , s )"	1559:4:72565:72606	130538	26	True				
ANR	131160	CallExpression	"fprintf ( xmlout , ""%s  </SPcod>\\n"" , s )"		130538	0					
ANR	131161	Callee	fprintf		130538	0					
ANR	131162	Identifier	fprintf		130538	0					
ANR	131163	ArgumentList	xmlout		130538	1					
ANR	131164	Argument	xmlout		130538	0					
ANR	131165	Identifier	xmlout		130538	0					
ANR	131166	Argument	"""%s  </SPcod>\\n"""		130538	1					
ANR	131167	PrimaryExpression	"""%s  </SPcod>\\n"""		130538	0					
ANR	131168	Argument	s		130538	2					
ANR	131169	Identifier	s		130538	0					
ANR	131170	ExpressionStatement	"fprintf ( xmlout , ""%s</CodingStyleDefault>\\n"" , s )"	1560:4:72612:72664	130538	27	True				
ANR	131171	CallExpression	"fprintf ( xmlout , ""%s</CodingStyleDefault>\\n"" , s )"		130538	0					
ANR	131172	Callee	fprintf		130538	0					
ANR	131173	Identifier	fprintf		130538	0					
ANR	131174	ArgumentList	xmlout		130538	1					
ANR	131175	Argument	xmlout		130538	0					
ANR	131176	Identifier	xmlout		130538	0					
ANR	131177	Argument	"""%s</CodingStyleDefault>\\n"""		130538	1					
ANR	131178	PrimaryExpression	"""%s</CodingStyleDefault>\\n"""		130538	0					
ANR	131179	Argument	s		130538	2					
ANR	131180	Identifier	s		130538	0					
ANR	131181	ReturnType	void		130538	1					
ANR	131182	Identifier	xml_out_frame_cod		130538	2					
ANR	131183	ParameterList	"FILE * xmlout , opj_tcp_t * tcp"		130538	3					
ANR	131184	Parameter	FILE * xmlout	1440:23:66558:66569	130538	0	True				
ANR	131185	ParameterType	FILE *		130538	0					
ANR	131186	Identifier	xmlout		130538	1					
ANR	131187	Parameter	opj_tcp_t * tcp	1440:37:66572:66585	130538	1	True				
ANR	131188	ParameterType	opj_tcp_t *		130538	0					
ANR	131189	Identifier	tcp		130538	1					
ANR	131190	CFGEntryNode	ENTRY		130538		True				
ANR	131191	CFGExitNode	EXIT		130538		True				
ANR	131192	Symbol	J2K_CP_CSTY_PRT		130538						
ANR	131193	Symbol	notes		130538						
ANR	131194	Symbol	tcp -> mct		130538						
ANR	131195	Symbol	* tccp -> prch		130538						
ANR	131196	Symbol	* tcp		130538						
ANR	131197	Symbol	tccp -> qmfbid		130538						
ANR	131198	Symbol	tcp -> csty		130538						
ANR	131199	Symbol	j2k_default_tcp		130538						
ANR	131200	Symbol	tccp -> numresolutions		130538						
ANR	131201	Symbol	* * tccp		130538						
ANR	131202	Symbol	tcp -> prg		130538						
ANR	131203	Symbol	tccp -> cblkh		130538						
ANR	131204	Symbol	* tccp -> prcw		130538						
ANR	131205	Symbol	tccp -> cblksty		130538						
ANR	131206	Symbol	tccp -> prch		130538						
ANR	131207	Symbol	derived		130538						
ANR	131208	Symbol	tcp		130538						
ANR	131209	Symbol	tcp -> numlayers		130538						
ANR	131210	Symbol	tccp -> csty		130538						
ANR	131211	Symbol	tcp -> tccps		130538						
ANR	131212	Symbol	tccp -> prcw		130538						
ANR	131213	Symbol	i		130538						
ANR	131214	Symbol	raw		130538						
ANR	131215	Symbol	tccp		130538						
ANR	131216	Symbol	tccp -> cblkw		130538						
ANR	131217	Symbol	xmlout		130538						
ANR	131218	Symbol	s		130538						
ANR	131219	Symbol	* i		130538						
ANR	131220	Symbol	* tccp		130538						
ANR	131221	Symbol	spaces		130538						
ANR	131222	Function	xml_out_frame_coc	1565:0:72690:79195							
ANR	131223	FunctionDef	"xml_out_frame_coc (FILE * xmlout , opj_tcp_t * tcp , int numcomps)"		131222	0					
ANR	131224	CompoundStatement		1567:0:72823:79195	131222	0					
ANR	131225	IdentifierDeclStatement	"opj_tccp_t * tccp , * firstcomp_tccp ;"	1569:4:72867:72900	131222	0	True				
ANR	131226	IdentifierDecl	* tccp		131222	0					
ANR	131227	IdentifierDeclType	opj_tccp_t *		131222	0					
ANR	131228	Identifier	tccp		131222	1					
ANR	131229	IdentifierDecl	* firstcomp_tccp		131222	1					
ANR	131230	IdentifierDeclType	opj_tccp_t *		131222	0					
ANR	131231	Identifier	firstcomp_tccp		131222	1					
ANR	131232	IdentifierDeclStatement	"int i , compno ;"	1570:4:72906:72919	131222	1	True				
ANR	131233	IdentifierDecl	i		131222	0					
ANR	131234	IdentifierDeclType	int		131222	0					
ANR	131235	Identifier	i		131222	1					
ANR	131236	IdentifierDecl	compno		131222	1					
ANR	131237	IdentifierDeclType	int		131222	0					
ANR	131238	Identifier	compno		131222	1					
ANR	131239	IdentifierDeclStatement	"char spaces [ 13 ] = ""            "" ;"	1571:4:72925:72957	131222	2	True				
ANR	131240	IdentifierDecl	"spaces [ 13 ] = ""            """		131222	0					
ANR	131241	IdentifierDeclType	char [ 13 ]		131222	0					
ANR	131242	Identifier	spaces		131222	1					
ANR	131243	PrimaryExpression	13		131222	2					
ANR	131244	AssignmentExpression	"spaces [ 13 ] = ""            """		131222	3		=			
ANR	131245	Identifier	spaces		131222	0					
ANR	131246	PrimaryExpression	"""            """		131222	1					
ANR	131247	IdentifierDeclStatement	char * s = spaces ;	1572:4:72990:73006	131222	3	True				
ANR	131248	IdentifierDecl	* s = spaces		131222	0					
ANR	131249	IdentifierDeclType	char *		131222	0					
ANR	131250	Identifier	s		131222	1					
ANR	131251	AssignmentExpression	* s = spaces		131222	2		=			
ANR	131252	Identifier	spaces		131222	0					
ANR	131253	Identifier	spaces		131222	1					
ANR	131254	IfStatement	if ( tcp == j2k_default_tcp )		131222	4					
ANR	131255	Condition	tcp == j2k_default_tcp	1573:8:73016:73037	131222	0	True				
ANR	131256	EqualityExpression	tcp == j2k_default_tcp		131222	0		==			
ANR	131257	Identifier	tcp		131222	0					
ANR	131258	Identifier	j2k_default_tcp		131222	1					
ANR	131259	CompoundStatement		7:32:216:216	131222	1					
ANR	131260	ExpressionStatement	s ++	1574:8:73050:73053	131222	0	True				
ANR	131261	PostIncDecOperationExpression	s ++		131222	0					
ANR	131262	Identifier	s		131222	0					
ANR	131263	IncDec	++		131222	1					
ANR	131264	ExpressionStatement	s ++	1575:8:73063:73066	131222	1	True				
ANR	131265	PostIncDecOperationExpression	s ++		131222	0					
ANR	131266	Identifier	s		131222	0					
ANR	131267	IncDec	++		131222	1					
ANR	131268	ExpressionStatement	firstcomp_tccp = & ( tcp -> tccps [ 0 ] )	1578:4:73116:73149	131222	5	True				
ANR	131269	AssignmentExpression	firstcomp_tccp = & ( tcp -> tccps [ 0 ] )		131222	0		=			
ANR	131270	Identifier	firstcomp_tccp		131222	0					
ANR	131271	UnaryOperationExpression	& ( tcp -> tccps [ 0 ] )		131222	1					
ANR	131272	UnaryOperator	&		131222	0					
ANR	131273	ArrayIndexing	tcp -> tccps [ 0 ]		131222	1					
ANR	131274	PtrMemberAccess	tcp -> tccps		131222	0					
ANR	131275	Identifier	tcp		131222	0					
ANR	131276	Identifier	tccps		131222	1					
ANR	131277	PrimaryExpression	0		131222	1					
ANR	131278	IfStatement	if ( notes )		131222	6					
ANR	131279	Condition	notes	1584:8:73487:73491	131222	0	True				
ANR	131280	Identifier	notes		131222	0					
ANR	131281	CompoundStatement		18:15:670:670	131222	1					
ANR	131282	ExpressionStatement	"fprintf ( xmlout , ""%s<!-- mj2_to_metadata implementation always reports component[0] as using default COD, -->\\n"" , s )"	1585:8:73504:73651	131222	0	True				
ANR	131283	CallExpression	"fprintf ( xmlout , ""%s<!-- mj2_to_metadata implementation always reports component[0] as using default COD, -->\\n"" , s )"		131222	0					
ANR	131284	Callee	fprintf		131222	0					
ANR	131285	Identifier	fprintf		131222	0					
ANR	131286	ArgumentList	xmlout		131222	1					
ANR	131287	Argument	xmlout		131222	0					
ANR	131288	Identifier	xmlout		131222	0					
ANR	131289	Argument	"""%s<!-- mj2_to_metadata implementation always reports component[0] as using default COD, -->\\n"""		131222	1					
ANR	131290	PrimaryExpression	"""%s<!-- mj2_to_metadata implementation always reports component[0] as using default COD, -->\\n"""		131222	0					
ANR	131291	Argument	s		131222	2					
ANR	131292	Identifier	s		131222	0					
ANR	131293	IfStatement	if ( tcp == j2k_default_tcp )		131222	1					
ANR	131294	Condition	tcp == j2k_default_tcp	1588:12:73665:73686	131222	0	True				
ANR	131295	EqualityExpression	tcp == j2k_default_tcp		131222	0		==			
ANR	131296	Identifier	tcp		131222	0					
ANR	131297	Identifier	j2k_default_tcp		131222	1					
ANR	131298	CompoundStatement		22:36:865:865	131222	1					
ANR	131299	ExpressionStatement	"fprintf ( xmlout , ""%s<!-- and any other component, with main-header style values different from [0], as COC. -->\\n"" , s )"	1589:12:73703:73860	131222	0	True				
ANR	131300	CallExpression	"fprintf ( xmlout , ""%s<!-- and any other component, with main-header style values different from [0], as COC. -->\\n"" , s )"		131222	0					
ANR	131301	Callee	fprintf		131222	0					
ANR	131302	Identifier	fprintf		131222	0					
ANR	131303	ArgumentList	xmlout		131222	1					
ANR	131304	Argument	xmlout		131222	0					
ANR	131305	Identifier	xmlout		131222	0					
ANR	131306	Argument	"""%s<!-- and any other component, with main-header style values different from [0], as COC. -->\\n"""		131222	1					
ANR	131307	PrimaryExpression	"""%s<!-- and any other component, with main-header style values different from [0], as COC. -->\\n"""		131222	0					
ANR	131308	Argument	s		131222	2					
ANR	131309	Identifier	s		131222	0					
ANR	131310	ElseStatement	else		131222	0					
ANR	131311	CompoundStatement		26:15:1053:1053	131222	0					
ANR	131312	ExpressionStatement	"fprintf ( xmlout , ""%s<!-- and any other component, with tile-part-header style values different from [0], as COC. -->\\n"" , s )"	1593:12:73891:74053	131222	0	True				
ANR	131313	CallExpression	"fprintf ( xmlout , ""%s<!-- and any other component, with tile-part-header style values different from [0], as COC. -->\\n"" , s )"		131222	0					
ANR	131314	Callee	fprintf		131222	0					
ANR	131315	Identifier	fprintf		131222	0					
ANR	131316	ArgumentList	xmlout		131222	1					
ANR	131317	Argument	xmlout		131222	0					
ANR	131318	Identifier	xmlout		131222	0					
ANR	131319	Argument	"""%s<!-- and any other component, with tile-part-header style values different from [0], as COC. -->\\n"""		131222	1					
ANR	131320	PrimaryExpression	"""%s<!-- and any other component, with tile-part-header style values different from [0], as COC. -->\\n"""		131222	0					
ANR	131321	Argument	s		131222	2					
ANR	131322	Identifier	s		131222	0					
ANR	131323	ForStatement	for ( compno = 1 ; compno < numcomps ; compno ++ )		131222	7					
ANR	131324	ForInit	compno = 1 ;	1598:9:74080:74090	131222	0	True				
ANR	131325	AssignmentExpression	compno = 1		131222	0		=			
ANR	131326	Identifier	compno		131222	0					
ANR	131327	PrimaryExpression	1		131222	1					
ANR	131328	Condition	compno < numcomps	1598:21:74092:74108	131222	1	True				
ANR	131329	RelationalExpression	compno < numcomps		131222	0		<			
ANR	131330	Identifier	compno		131222	0					
ANR	131331	Identifier	numcomps		131222	1					
ANR	131332	PostIncDecOperationExpression	compno ++	1599:12:74123:74130	131222	2	True				
ANR	131333	Identifier	compno		131222	0					
ANR	131334	IncDec	++		131222	1					
ANR	131335	CompoundStatement		33:22:1309:1309	131222	3					
ANR	131336	ExpressionStatement	tccp = & tcp -> tccps [ compno ]	1600:8:74185:74211	131222	0	True				
ANR	131337	AssignmentExpression	tccp = & tcp -> tccps [ compno ]		131222	0		=			
ANR	131338	Identifier	tccp		131222	0					
ANR	131339	UnaryOperationExpression	& tcp -> tccps [ compno ]		131222	1					
ANR	131340	UnaryOperator	&		131222	0					
ANR	131341	ArrayIndexing	tcp -> tccps [ compno ]		131222	1					
ANR	131342	PtrMemberAccess	tcp -> tccps		131222	0					
ANR	131343	Identifier	tcp		131222	0					
ANR	131344	Identifier	tccps		131222	1					
ANR	131345	Identifier	compno		131222	1					
ANR	131346	IfStatement	"if ( same_component_style ( firstcomp_tccp , tccp ) )"		131222	1					
ANR	131347	Condition	"same_component_style ( firstcomp_tccp , tccp )"	1601:12:74225:74266	131222	0	True				
ANR	131348	CallExpression	"same_component_style ( firstcomp_tccp , tccp )"		131222	0					
ANR	131349	Callee	same_component_style		131222	0					
ANR	131350	Identifier	same_component_style		131222	0					
ANR	131351	ArgumentList	firstcomp_tccp		131222	1					
ANR	131352	Argument	firstcomp_tccp		131222	0					
ANR	131353	Identifier	firstcomp_tccp		131222	0					
ANR	131354	Argument	tccp		131222	1					
ANR	131355	Identifier	tccp		131222	0					
ANR	131356	CompoundStatement		35:56:1445:1445	131222	1					
ANR	131357	ContinueStatement	continue ;	1602:12:74283:74291	131222	0	True				
ANR	131358	ExpressionStatement	"fprintf ( xmlout , ""%s<CodingStyleComponent Marker=\\""COC\\"">\\n"" , s )"	1606:8:74404:74488	131222	2	True				
ANR	131359	CallExpression	"fprintf ( xmlout , ""%s<CodingStyleComponent Marker=\\""COC\\"">\\n"" , s )"		131222	0					
ANR	131360	Callee	fprintf		131222	0					
ANR	131361	Identifier	fprintf		131222	0					
ANR	131362	ArgumentList	xmlout		131222	1					
ANR	131363	Argument	xmlout		131222	0					
ANR	131364	Identifier	xmlout		131222	0					
ANR	131365	Argument	"""%s<CodingStyleComponent Marker=\\""COC\\"">\\n"""		131222	1					
ANR	131366	PrimaryExpression	"""%s<CodingStyleComponent Marker=\\""COC\\"">\\n"""		131222	0					
ANR	131367	Argument	s		131222	2					
ANR	131368	Identifier	s		131222	0					
ANR	131369	IfStatement	if ( notes )		131222	3					
ANR	131370	Condition	notes	1608:12:74557:74561	131222	0	True				
ANR	131371	Identifier	notes		131222	0					
ANR	131372	CompoundStatement		42:19:1740:1740	131222	1					
ANR	131373	ExpressionStatement	"fprintf ( xmlout , ""%s  <!-- See Ccoc below for zero-based component number. -->\\n"" , s )"	1609:12:74578:74682	131222	0	True				
ANR	131374	CallExpression	"fprintf ( xmlout , ""%s  <!-- See Ccoc below for zero-based component number. -->\\n"" , s )"		131222	0					
ANR	131375	Callee	fprintf		131222	0					
ANR	131376	Identifier	fprintf		131222	0					
ANR	131377	ArgumentList	xmlout		131222	1					
ANR	131378	Argument	xmlout		131222	0					
ANR	131379	Identifier	xmlout		131222	0					
ANR	131380	Argument	"""%s  <!-- See Ccoc below for zero-based component number. -->\\n"""		131222	1					
ANR	131381	PrimaryExpression	"""%s  <!-- See Ccoc below for zero-based component number. -->\\n"""		131222	0					
ANR	131382	Argument	s		131222	2					
ANR	131383	Identifier	s		131222	0					
ANR	131384	ExpressionStatement	"fprintf ( xmlout , ""%s  <Scoc>0x%02x</Scoc>\\n"" , s , tccp -> csty )"	1614:8:74814:74878	131222	4	True				
ANR	131385	CallExpression	"fprintf ( xmlout , ""%s  <Scoc>0x%02x</Scoc>\\n"" , s , tccp -> csty )"		131222	0					
ANR	131386	Callee	fprintf		131222	0					
ANR	131387	Identifier	fprintf		131222	0					
ANR	131388	ArgumentList	xmlout		131222	1					
ANR	131389	Argument	xmlout		131222	0					
ANR	131390	Identifier	xmlout		131222	0					
ANR	131391	Argument	"""%s  <Scoc>0x%02x</Scoc>\\n"""		131222	1					
ANR	131392	PrimaryExpression	"""%s  <Scoc>0x%02x</Scoc>\\n"""		131222	0					
ANR	131393	Argument	s		131222	2					
ANR	131394	Identifier	s		131222	0					
ANR	131395	Argument	tccp -> csty		131222	3					
ANR	131396	PtrMemberAccess	tccp -> csty		131222	0					
ANR	131397	Identifier	tccp		131222	0					
ANR	131398	Identifier	csty		131222	1					
ANR	131399	IfStatement	if ( notes )		131222	5					
ANR	131400	Condition	notes	1615:12:74905:74909	131222	0	True				
ANR	131401	Identifier	notes		131222	0					
ANR	131402	CompoundStatement		49:19:2088:2088	131222	1					
ANR	131403	ExpressionStatement	"fprintf ( xmlout , ""%s  <!-- Scoc defines entropy coder precincts: -->\\n"" , s )"	1616:12:74926:75003	131222	0	True				
ANR	131404	CallExpression	"fprintf ( xmlout , ""%s  <!-- Scoc defines entropy coder precincts: -->\\n"" , s )"		131222	0					
ANR	131405	Callee	fprintf		131222	0					
ANR	131406	Identifier	fprintf		131222	0					
ANR	131407	ArgumentList	xmlout		131222	1					
ANR	131408	Argument	xmlout		131222	0					
ANR	131409	Identifier	xmlout		131222	0					
ANR	131410	Argument	"""%s  <!-- Scoc defines entropy coder precincts: -->\\n"""		131222	1					
ANR	131411	PrimaryExpression	"""%s  <!-- Scoc defines entropy coder precincts: -->\\n"""		131222	0					
ANR	131412	Argument	s		131222	2					
ANR	131413	Identifier	s		131222	0					
ANR	131414	ExpressionStatement	"fprintf ( xmlout , ""%s  <!--   0 = maximum, namely (PPx=15, PPy=15); 1 = precincts defined below. -->\\n"" , s )"	1617:12:75017:75162	131222	1	True				
ANR	131415	CallExpression	"fprintf ( xmlout , ""%s  <!--   0 = maximum, namely (PPx=15, PPy=15); 1 = precincts defined below. -->\\n"" , s )"		131222	0					
ANR	131416	Callee	fprintf		131222	0					
ANR	131417	Identifier	fprintf		131222	0					
ANR	131418	ArgumentList	xmlout		131222	1					
ANR	131419	Argument	xmlout		131222	0					
ANR	131420	Identifier	xmlout		131222	0					
ANR	131421	Argument	"""%s  <!--   0 = maximum, namely (PPx=15, PPy=15); 1 = precincts defined below. -->\\n"""		131222	1					
ANR	131422	PrimaryExpression	"""%s  <!--   0 = maximum, namely (PPx=15, PPy=15); 1 = precincts defined below. -->\\n"""		131222	0					
ANR	131423	Argument	s		131222	2					
ANR	131424	Identifier	s		131222	0					
ANR	131425	ExpressionStatement	"fprintf ( xmlout , ""%s  <Ccoc>%d</Ccoc>\\n"" , s , compno )"	1621:8:75182:75238	131222	6	True				
ANR	131426	CallExpression	"fprintf ( xmlout , ""%s  <Ccoc>%d</Ccoc>\\n"" , s , compno )"		131222	0					
ANR	131427	Callee	fprintf		131222	0					
ANR	131428	Identifier	fprintf		131222	0					
ANR	131429	ArgumentList	xmlout		131222	1					
ANR	131430	Argument	xmlout		131222	0					
ANR	131431	Identifier	xmlout		131222	0					
ANR	131432	Argument	"""%s  <Ccoc>%d</Ccoc>\\n"""		131222	1					
ANR	131433	PrimaryExpression	"""%s  <Ccoc>%d</Ccoc>\\n"""		131222	0					
ANR	131434	Argument	s		131222	2					
ANR	131435	Identifier	s		131222	0					
ANR	131436	Argument	compno		131222	3					
ANR	131437	Identifier	compno		131222	0					
ANR	131438	ExpressionStatement	"fprintf ( xmlout , ""%s  <SPcoc>\\n"" , s )"	1629:8:75638:75678	131222	7	True				
ANR	131439	CallExpression	"fprintf ( xmlout , ""%s  <SPcoc>\\n"" , s )"		131222	0					
ANR	131440	Callee	fprintf		131222	0					
ANR	131441	Identifier	fprintf		131222	0					
ANR	131442	ArgumentList	xmlout		131222	1					
ANR	131443	Argument	xmlout		131222	0					
ANR	131444	Identifier	xmlout		131222	0					
ANR	131445	Argument	"""%s  <SPcoc>\\n"""		131222	1					
ANR	131446	PrimaryExpression	"""%s  <SPcoc>\\n"""		131222	0					
ANR	131447	Argument	s		131222	2					
ANR	131448	Identifier	s		131222	0					
ANR	131449	ExpressionStatement	"fprintf ( xmlout , ""%s    <NumberOfDecompositionLevels>%d</NumberOfDecompositionLevels>\\n"" , s , tccp -> numresolutions - 1 )"	1630:8:75688:75837	131222	8	True				
ANR	131450	CallExpression	"fprintf ( xmlout , ""%s    <NumberOfDecompositionLevels>%d</NumberOfDecompositionLevels>\\n"" , s , tccp -> numresolutions - 1 )"		131222	0					
ANR	131451	Callee	fprintf		131222	0					
ANR	131452	Identifier	fprintf		131222	0					
ANR	131453	ArgumentList	xmlout		131222	1					
ANR	131454	Argument	xmlout		131222	0					
ANR	131455	Identifier	xmlout		131222	0					
ANR	131456	Argument	"""%s    <NumberOfDecompositionLevels>%d</NumberOfDecompositionLevels>\\n"""		131222	1					
ANR	131457	PrimaryExpression	"""%s    <NumberOfDecompositionLevels>%d</NumberOfDecompositionLevels>\\n"""		131222	0					
ANR	131458	Argument	s		131222	2					
ANR	131459	Identifier	s		131222	0					
ANR	131460	Argument	tccp -> numresolutions - 1		131222	3					
ANR	131461	AdditiveExpression	tccp -> numresolutions - 1		131222	0		-			
ANR	131462	PtrMemberAccess	tccp -> numresolutions		131222	0					
ANR	131463	Identifier	tccp		131222	0					
ANR	131464	Identifier	numresolutions		131222	1					
ANR	131465	PrimaryExpression	1		131222	1					
ANR	131466	ExpressionStatement	"fprintf ( xmlout , ""%s    <CodeblockWidth>%d</CodeblockWidth>\\n"" , s , tccp -> cblkw - 2 )"	1633:8:75871:75974	131222	9	True				
ANR	131467	CallExpression	"fprintf ( xmlout , ""%s    <CodeblockWidth>%d</CodeblockWidth>\\n"" , s , tccp -> cblkw - 2 )"		131222	0					
ANR	131468	Callee	fprintf		131222	0					
ANR	131469	Identifier	fprintf		131222	0					
ANR	131470	ArgumentList	xmlout		131222	1					
ANR	131471	Argument	xmlout		131222	0					
ANR	131472	Identifier	xmlout		131222	0					
ANR	131473	Argument	"""%s    <CodeblockWidth>%d</CodeblockWidth>\\n"""		131222	1					
ANR	131474	PrimaryExpression	"""%s    <CodeblockWidth>%d</CodeblockWidth>\\n"""		131222	0					
ANR	131475	Argument	s		131222	2					
ANR	131476	Identifier	s		131222	0					
ANR	131477	Argument	tccp -> cblkw - 2		131222	3					
ANR	131478	AdditiveExpression	tccp -> cblkw - 2		131222	0		-			
ANR	131479	PtrMemberAccess	tccp -> cblkw		131222	0					
ANR	131480	Identifier	tccp		131222	0					
ANR	131481	Identifier	cblkw		131222	1					
ANR	131482	PrimaryExpression	2		131222	1					
ANR	131483	ExpressionStatement	"fprintf ( xmlout , ""%s    <CodeblockHeight>%d</CodeblockHeight>\\n"" , s , tccp -> cblkh - 2 )"	1635:8:76011:76116	131222	10	True				
ANR	131484	CallExpression	"fprintf ( xmlout , ""%s    <CodeblockHeight>%d</CodeblockHeight>\\n"" , s , tccp -> cblkh - 2 )"		131222	0					
ANR	131485	Callee	fprintf		131222	0					
ANR	131486	Identifier	fprintf		131222	0					
ANR	131487	ArgumentList	xmlout		131222	1					
ANR	131488	Argument	xmlout		131222	0					
ANR	131489	Identifier	xmlout		131222	0					
ANR	131490	Argument	"""%s    <CodeblockHeight>%d</CodeblockHeight>\\n"""		131222	1					
ANR	131491	PrimaryExpression	"""%s    <CodeblockHeight>%d</CodeblockHeight>\\n"""		131222	0					
ANR	131492	Argument	s		131222	2					
ANR	131493	Identifier	s		131222	0					
ANR	131494	Argument	tccp -> cblkh - 2		131222	3					
ANR	131495	AdditiveExpression	tccp -> cblkh - 2		131222	0		-			
ANR	131496	PtrMemberAccess	tccp -> cblkh		131222	0					
ANR	131497	Identifier	tccp		131222	0					
ANR	131498	Identifier	cblkh		131222	1					
ANR	131499	PrimaryExpression	2		131222	1					
ANR	131500	IfStatement	if ( notes )		131222	11					
ANR	131501	Condition	notes	1637:12:76155:76159	131222	0	True				
ANR	131502	Identifier	notes		131222	0					
ANR	131503	CompoundStatement		71:19:3338:3338	131222	1					
ANR	131504	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- CBW and CBH are non-negative, and summed cannot exceed 8 -->\\n"" , s )"	1638:12:76176:76291	131222	0	True				
ANR	131505	CallExpression	"fprintf ( xmlout , ""%s    <!-- CBW and CBH are non-negative, and summed cannot exceed 8 -->\\n"" , s )"		131222	0					
ANR	131506	Callee	fprintf		131222	0					
ANR	131507	Identifier	fprintf		131222	0					
ANR	131508	ArgumentList	xmlout		131222	1					
ANR	131509	Argument	xmlout		131222	0					
ANR	131510	Identifier	xmlout		131222	0					
ANR	131511	Argument	"""%s    <!-- CBW and CBH are non-negative, and summed cannot exceed 8 -->\\n"""		131222	1					
ANR	131512	PrimaryExpression	"""%s    <!-- CBW and CBH are non-negative, and summed cannot exceed 8 -->\\n"""		131222	0					
ANR	131513	Argument	s		131222	2					
ANR	131514	Identifier	s		131222	0					
ANR	131515	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Codeblock dimension is 2^(value + 2) -->\\n"" , s )"	1640:12:76305:76383	131222	1	True				
ANR	131516	CallExpression	"fprintf ( xmlout , ""%s    <!-- Codeblock dimension is 2^(value + 2) -->\\n"" , s )"		131222	0					
ANR	131517	Callee	fprintf		131222	0					
ANR	131518	Identifier	fprintf		131222	0					
ANR	131519	ArgumentList	xmlout		131222	1					
ANR	131520	Argument	xmlout		131222	0					
ANR	131521	Identifier	xmlout		131222	0					
ANR	131522	Argument	"""%s    <!-- Codeblock dimension is 2^(value + 2) -->\\n"""		131222	1					
ANR	131523	PrimaryExpression	"""%s    <!-- Codeblock dimension is 2^(value + 2) -->\\n"""		131222	0					
ANR	131524	Argument	s		131222	2					
ANR	131525	Identifier	s		131222	0					
ANR	131526	ExpressionStatement	"fprintf ( xmlout , ""%s    <CodeblockStyle>0x%02x</CodeblockStyle>\\n"" , s , tccp -> cblksty )"	1642:8:76403:76508	131222	12	True				
ANR	131527	CallExpression	"fprintf ( xmlout , ""%s    <CodeblockStyle>0x%02x</CodeblockStyle>\\n"" , s , tccp -> cblksty )"		131222	0					
ANR	131528	Callee	fprintf		131222	0					
ANR	131529	Identifier	fprintf		131222	0					
ANR	131530	ArgumentList	xmlout		131222	1					
ANR	131531	Argument	xmlout		131222	0					
ANR	131532	Identifier	xmlout		131222	0					
ANR	131533	Argument	"""%s    <CodeblockStyle>0x%02x</CodeblockStyle>\\n"""		131222	1					
ANR	131534	PrimaryExpression	"""%s    <CodeblockStyle>0x%02x</CodeblockStyle>\\n"""		131222	0					
ANR	131535	Argument	s		131222	2					
ANR	131536	Identifier	s		131222	0					
ANR	131537	Argument	tccp -> cblksty		131222	3					
ANR	131538	PtrMemberAccess	tccp -> cblksty		131222	0					
ANR	131539	Identifier	tccp		131222	0					
ANR	131540	Identifier	cblksty		131222	1					
ANR	131541	IfStatement	if ( notes )		131222	13					
ANR	131542	Condition	notes	1644:12:76547:76551	131222	0	True				
ANR	131543	Identifier	notes		131222	0					
ANR	131544	CompoundStatement		78:19:3730:3730	131222	1					
ANR	131545	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- For CodeblockStyle, bits mean (with value 1=feature on, 0=off): -->\\n"" , s )"	1645:12:76568:76710	131222	0	True				
ANR	131546	CallExpression	"fprintf ( xmlout , ""%s    <!-- For CodeblockStyle, bits mean (with value 1=feature on, 0=off): -->\\n"" , s )"		131222	0					
ANR	131547	Callee	fprintf		131222	0					
ANR	131548	Identifier	fprintf		131222	0					
ANR	131549	ArgumentList	xmlout		131222	1					
ANR	131550	Argument	xmlout		131222	0					
ANR	131551	Identifier	xmlout		131222	0					
ANR	131552	Argument	"""%s    <!-- For CodeblockStyle, bits mean (with value 1=feature on, 0=off): -->\\n"""		131222	1					
ANR	131553	PrimaryExpression	"""%s    <!-- For CodeblockStyle, bits mean (with value 1=feature on, 0=off): -->\\n"""		131222	0					
ANR	131554	Argument	s		131222	2					
ANR	131555	Identifier	s		131222	0					
ANR	131556	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- bit 0: Selective arithmetic coding bypass. -->\\n"" , s )"	1648:12:76724:76825	131222	1	True				
ANR	131557	CallExpression	"fprintf ( xmlout , ""%s    <!-- bit 0: Selective arithmetic coding bypass. -->\\n"" , s )"		131222	0					
ANR	131558	Callee	fprintf		131222	0					
ANR	131559	Identifier	fprintf		131222	0					
ANR	131560	ArgumentList	xmlout		131222	1					
ANR	131561	Argument	xmlout		131222	0					
ANR	131562	Identifier	xmlout		131222	0					
ANR	131563	Argument	"""%s    <!-- bit 0: Selective arithmetic coding bypass. -->\\n"""		131222	1					
ANR	131564	PrimaryExpression	"""%s    <!-- bit 0: Selective arithmetic coding bypass. -->\\n"""		131222	0					
ANR	131565	Argument	s		131222	2					
ANR	131566	Identifier	s		131222	0					
ANR	131567	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- bit 1: Reset context probabilities on coding pass boundaries. -->\\n"" , s )"	1650:12:76839:76979	131222	2	True				
ANR	131568	CallExpression	"fprintf ( xmlout , ""%s    <!-- bit 1: Reset context probabilities on coding pass boundaries. -->\\n"" , s )"		131222	0					
ANR	131569	Callee	fprintf		131222	0					
ANR	131570	Identifier	fprintf		131222	0					
ANR	131571	ArgumentList	xmlout		131222	1					
ANR	131572	Argument	xmlout		131222	0					
ANR	131573	Identifier	xmlout		131222	0					
ANR	131574	Argument	"""%s    <!-- bit 1: Reset context probabilities on coding pass boundaries. -->\\n"""		131222	1					
ANR	131575	PrimaryExpression	"""%s    <!-- bit 1: Reset context probabilities on coding pass boundaries. -->\\n"""		131222	0					
ANR	131576	Argument	s		131222	2					
ANR	131577	Identifier	s		131222	0					
ANR	131578	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- bit 2: Termination on each coding pass. -->\\n"" , s )"	1653:12:76993:77094	131222	3	True				
ANR	131579	CallExpression	"fprintf ( xmlout , ""%s    <!-- bit 2: Termination on each coding pass. -->\\n"" , s )"		131222	0					
ANR	131580	Callee	fprintf		131222	0					
ANR	131581	Identifier	fprintf		131222	0					
ANR	131582	ArgumentList	xmlout		131222	1					
ANR	131583	Argument	xmlout		131222	0					
ANR	131584	Identifier	xmlout		131222	0					
ANR	131585	Argument	"""%s    <!-- bit 2: Termination on each coding pass. -->\\n"""		131222	1					
ANR	131586	PrimaryExpression	"""%s    <!-- bit 2: Termination on each coding pass. -->\\n"""		131222	0					
ANR	131587	Argument	s		131222	2					
ANR	131588	Identifier	s		131222	0					
ANR	131589	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- bit 3: Vertically causal context. -->\\n"" , s )"	1655:12:77108:77183	131222	4	True				
ANR	131590	CallExpression	"fprintf ( xmlout , ""%s    <!-- bit 3: Vertically causal context. -->\\n"" , s )"		131222	0					
ANR	131591	Callee	fprintf		131222	0					
ANR	131592	Identifier	fprintf		131222	0					
ANR	131593	ArgumentList	xmlout		131222	1					
ANR	131594	Argument	xmlout		131222	0					
ANR	131595	Identifier	xmlout		131222	0					
ANR	131596	Argument	"""%s    <!-- bit 3: Vertically causal context. -->\\n"""		131222	1					
ANR	131597	PrimaryExpression	"""%s    <!-- bit 3: Vertically causal context. -->\\n"""		131222	0					
ANR	131598	Argument	s		131222	2					
ANR	131599	Identifier	s		131222	0					
ANR	131600	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- bit 4: Predictable termination. -->\\n"" , s )"	1656:12:77197:77270	131222	5	True				
ANR	131601	CallExpression	"fprintf ( xmlout , ""%s    <!-- bit 4: Predictable termination. -->\\n"" , s )"		131222	0					
ANR	131602	Callee	fprintf		131222	0					
ANR	131603	Identifier	fprintf		131222	0					
ANR	131604	ArgumentList	xmlout		131222	1					
ANR	131605	Argument	xmlout		131222	0					
ANR	131606	Identifier	xmlout		131222	0					
ANR	131607	Argument	"""%s    <!-- bit 4: Predictable termination. -->\\n"""		131222	1					
ANR	131608	PrimaryExpression	"""%s    <!-- bit 4: Predictable termination. -->\\n"""		131222	0					
ANR	131609	Argument	s		131222	2					
ANR	131610	Identifier	s		131222	0					
ANR	131611	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- bit 5: Segmentation symbols are used. -->\\n"" , s )"	1657:12:77284:77363	131222	6	True				
ANR	131612	CallExpression	"fprintf ( xmlout , ""%s    <!-- bit 5: Segmentation symbols are used. -->\\n"" , s )"		131222	0					
ANR	131613	Callee	fprintf		131222	0					
ANR	131614	Identifier	fprintf		131222	0					
ANR	131615	ArgumentList	xmlout		131222	1					
ANR	131616	Argument	xmlout		131222	0					
ANR	131617	Identifier	xmlout		131222	0					
ANR	131618	Argument	"""%s    <!-- bit 5: Segmentation symbols are used. -->\\n"""		131222	1					
ANR	131619	PrimaryExpression	"""%s    <!-- bit 5: Segmentation symbols are used. -->\\n"""		131222	0					
ANR	131620	Argument	s		131222	2					
ANR	131621	Identifier	s		131222	0					
ANR	131622	ExpressionStatement	"fprintf ( xmlout , ""%s    <Transformation>%d</Transformation>\\n"" , s , tccp -> qmfbid )"	1659:8:77383:77483	131222	14	True				
ANR	131623	CallExpression	"fprintf ( xmlout , ""%s    <Transformation>%d</Transformation>\\n"" , s , tccp -> qmfbid )"		131222	0					
ANR	131624	Callee	fprintf		131222	0					
ANR	131625	Identifier	fprintf		131222	0					
ANR	131626	ArgumentList	xmlout		131222	1					
ANR	131627	Argument	xmlout		131222	0					
ANR	131628	Identifier	xmlout		131222	0					
ANR	131629	Argument	"""%s    <Transformation>%d</Transformation>\\n"""		131222	1					
ANR	131630	PrimaryExpression	"""%s    <Transformation>%d</Transformation>\\n"""		131222	0					
ANR	131631	Argument	s		131222	2					
ANR	131632	Identifier	s		131222	0					
ANR	131633	Argument	tccp -> qmfbid		131222	3					
ANR	131634	PtrMemberAccess	tccp -> qmfbid		131222	0					
ANR	131635	Identifier	tccp		131222	0					
ANR	131636	Identifier	qmfbid		131222	1					
ANR	131637	IfStatement	if ( notes )		131222	15					
ANR	131638	Condition	notes	1661:12:77523:77527	131222	0	True				
ANR	131639	Identifier	notes		131222	0					
ANR	131640	CompoundStatement		95:19:4706:4706	131222	1					
ANR	131641	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- For Transformation, 0=\\""9-7 irreversible filter\\"", 1=\\""5-3 reversible filter\\"" -->\\n"" , s )"	1662:12:77544:77701	131222	0	True				
ANR	131642	CallExpression	"fprintf ( xmlout , ""%s    <!-- For Transformation, 0=\\""9-7 irreversible filter\\"", 1=\\""5-3 reversible filter\\"" -->\\n"" , s )"		131222	0					
ANR	131643	Callee	fprintf		131222	0					
ANR	131644	Identifier	fprintf		131222	0					
ANR	131645	ArgumentList	xmlout		131222	1					
ANR	131646	Argument	xmlout		131222	0					
ANR	131647	Identifier	xmlout		131222	0					
ANR	131648	Argument	"""%s    <!-- For Transformation, 0=\\""9-7 irreversible filter\\"", 1=\\""5-3 reversible filter\\"" -->\\n"""		131222	1					
ANR	131649	PrimaryExpression	"""%s    <!-- For Transformation, 0=\\""9-7 irreversible filter\\"", 1=\\""5-3 reversible filter\\"" -->\\n"""		131222	0					
ANR	131650	Argument	s		131222	2					
ANR	131651	Identifier	s		131222	0					
ANR	131652	IfStatement	if ( tccp -> csty & J2K_CP_CSTY_PRT )		131222	16					
ANR	131653	Condition	tccp -> csty & J2K_CP_CSTY_PRT	1666:12:77725:77752	131222	0	True				
ANR	131654	BitAndExpression	tccp -> csty & J2K_CP_CSTY_PRT		131222	0		&			
ANR	131655	PtrMemberAccess	tccp -> csty		131222	0					
ANR	131656	Identifier	tccp		131222	0					
ANR	131657	Identifier	csty		131222	1					
ANR	131658	Identifier	J2K_CP_CSTY_PRT		131222	1					
ANR	131659	CompoundStatement		100:42:4931:4931	131222	1					
ANR	131660	ExpressionStatement	"fprintf ( xmlout , ""%s    <PrecinctSize>\\n"" , s )"	1667:12:77769:77816	131222	0	True				
ANR	131661	CallExpression	"fprintf ( xmlout , ""%s    <PrecinctSize>\\n"" , s )"		131222	0					
ANR	131662	Callee	fprintf		131222	0					
ANR	131663	Identifier	fprintf		131222	0					
ANR	131664	ArgumentList	xmlout		131222	1					
ANR	131665	Argument	xmlout		131222	0					
ANR	131666	Identifier	xmlout		131222	0					
ANR	131667	Argument	"""%s    <PrecinctSize>\\n"""		131222	1					
ANR	131668	PrimaryExpression	"""%s    <PrecinctSize>\\n"""		131222	0					
ANR	131669	Argument	s		131222	2					
ANR	131670	Identifier	s		131222	0					
ANR	131671	IfStatement	if ( notes )		131222	1					
ANR	131672	Condition	notes	1668:16:77860:77864	131222	0	True				
ANR	131673	Identifier	notes		131222	0					
ANR	131674	CompoundStatement		102:23:5043:5043	131222	1					
ANR	131675	ExpressionStatement	"fprintf ( xmlout , ""%s      <!-- These are size exponents PPx and PPy. May be zero only for first level (aka N(L)LL subband)-->\\n"" , s )"	1669:16:77885:78064	131222	0	True				
ANR	131676	CallExpression	"fprintf ( xmlout , ""%s      <!-- These are size exponents PPx and PPy. May be zero only for first level (aka N(L)LL subband)-->\\n"" , s )"		131222	0					
ANR	131677	Callee	fprintf		131222	0					
ANR	131678	Identifier	fprintf		131222	0					
ANR	131679	ArgumentList	xmlout		131222	1					
ANR	131680	Argument	xmlout		131222	0					
ANR	131681	Identifier	xmlout		131222	0					
ANR	131682	Argument	"""%s      <!-- These are size exponents PPx and PPy. May be zero only for first level (aka N(L)LL subband)-->\\n"""		131222	1					
ANR	131683	PrimaryExpression	"""%s      <!-- These are size exponents PPx and PPy. May be zero only for first level (aka N(L)LL subband)-->\\n"""		131222	0					
ANR	131684	Argument	s		131222	2					
ANR	131685	Identifier	s		131222	0					
ANR	131686	ForStatement	for ( i = 0 ; i < tccp -> numresolutions - 1 ; i ++ )		131222	2					
ANR	131687	ForInit	i = 0 ;	1673:17:78097:78102	131222	0	True				
ANR	131688	AssignmentExpression	i = 0		131222	0		=			
ANR	131689	Identifier	i		131222	0					
ANR	131690	PrimaryExpression	0		131222	1					
ANR	131691	Condition	i < tccp -> numresolutions - 1	1673:24:78104:78131	131222	1	True				
ANR	131692	RelationalExpression	i < tccp -> numresolutions - 1		131222	0		<			
ANR	131693	Identifier	i		131222	0					
ANR	131694	AdditiveExpression	tccp -> numresolutions - 1		131222	1		-			
ANR	131695	PtrMemberAccess	tccp -> numresolutions		131222	0					
ANR	131696	Identifier	tccp		131222	0					
ANR	131697	Identifier	numresolutions		131222	1					
ANR	131698	PrimaryExpression	1		131222	1					
ANR	131699	PostIncDecOperationExpression	i ++	1674:20:78154:78156	131222	2	True				
ANR	131700	Identifier	i		131222	0					
ANR	131701	IncDec	++		131222	1					
ANR	131702	CompoundStatement		108:25:5335:5335	131222	3					
ANR	131703	ExpressionStatement	"fprintf ( xmlout , ""%s      <PrecinctHeightAndWidth  ResolutionLevel=\\""%d\\"">\\n"" , s , i )"	1675:16:78227:78335	131222	0	True				
ANR	131704	CallExpression	"fprintf ( xmlout , ""%s      <PrecinctHeightAndWidth  ResolutionLevel=\\""%d\\"">\\n"" , s , i )"		131222	0					
ANR	131705	Callee	fprintf		131222	0					
ANR	131706	Identifier	fprintf		131222	0					
ANR	131707	ArgumentList	xmlout		131222	1					
ANR	131708	Argument	xmlout		131222	0					
ANR	131709	Identifier	xmlout		131222	0					
ANR	131710	Argument	"""%s      <PrecinctHeightAndWidth  ResolutionLevel=\\""%d\\"">\\n"""		131222	1					
ANR	131711	PrimaryExpression	"""%s      <PrecinctHeightAndWidth  ResolutionLevel=\\""%d\\"">\\n"""		131222	0					
ANR	131712	Argument	s		131222	2					
ANR	131713	Identifier	s		131222	0					
ANR	131714	Argument	i		131222	3					
ANR	131715	Identifier	i		131222	0					
ANR	131716	IfStatement	if ( raw )		131222	1					
ANR	131717	Condition	raw	1677:20:78357:78359	131222	0	True				
ANR	131718	Identifier	raw		131222	0					
ANR	131719	CompoundStatement		111:25:5538:5538	131222	1					
ANR	131720	ExpressionStatement	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> prch [ i ] << 4 ) | tccp -> prcw [ i ] )"	1678:20:78384:78505	131222	0	True				
ANR	131721	CallExpression	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> prch [ i ] << 4 ) | tccp -> prcw [ i ] )"		131222	0					
ANR	131722	Callee	fprintf		131222	0					
ANR	131723	Identifier	fprintf		131222	0					
ANR	131724	ArgumentList	xmlout		131222	1					
ANR	131725	Argument	xmlout		131222	0					
ANR	131726	Identifier	xmlout		131222	0					
ANR	131727	Argument	"""%s        <AsHex>0x%02x</AsHex>\\n"""		131222	1					
ANR	131728	PrimaryExpression	"""%s        <AsHex>0x%02x</AsHex>\\n"""		131222	0					
ANR	131729	Argument	s		131222	2					
ANR	131730	Identifier	s		131222	0					
ANR	131731	Argument	( tccp -> prch [ i ] << 4 ) | tccp -> prcw [ i ]		131222	3					
ANR	131732	InclusiveOrExpression	( tccp -> prch [ i ] << 4 ) | tccp -> prcw [ i ]		131222	0		|			
ANR	131733	ShiftExpression	tccp -> prch [ i ] << 4		131222	0		<<			
ANR	131734	ArrayIndexing	tccp -> prch [ i ]		131222	0					
ANR	131735	PtrMemberAccess	tccp -> prch		131222	0					
ANR	131736	Identifier	tccp		131222	0					
ANR	131737	Identifier	prch		131222	1					
ANR	131738	Identifier	i		131222	1					
ANR	131739	PrimaryExpression	4		131222	1					
ANR	131740	ArrayIndexing	tccp -> prcw [ i ]		131222	1					
ANR	131741	PtrMemberAccess	tccp -> prcw		131222	0					
ANR	131742	Identifier	tccp		131222	0					
ANR	131743	Identifier	prcw		131222	1					
ANR	131744	Identifier	i		131222	1					
ANR	131745	IfStatement	if ( derived )		131222	2					
ANR	131746	Condition	derived	1681:20:78584:78590	131222	0	True				
ANR	131747	Identifier	derived		131222	0					
ANR	131748	CompoundStatement		115:29:5769:5769	131222	1					
ANR	131749	ExpressionStatement	"fprintf ( xmlout , ""%s        <WidthAsDecimal>%d</WidthAsDecimal>\\n"" , s , tccp -> prcw [ i ] )"	1682:20:78615:78727	131222	0	True				
ANR	131750	CallExpression	"fprintf ( xmlout , ""%s        <WidthAsDecimal>%d</WidthAsDecimal>\\n"" , s , tccp -> prcw [ i ] )"		131222	0					
ANR	131751	Callee	fprintf		131222	0					
ANR	131752	Identifier	fprintf		131222	0					
ANR	131753	ArgumentList	xmlout		131222	1					
ANR	131754	Argument	xmlout		131222	0					
ANR	131755	Identifier	xmlout		131222	0					
ANR	131756	Argument	"""%s        <WidthAsDecimal>%d</WidthAsDecimal>\\n"""		131222	1					
ANR	131757	PrimaryExpression	"""%s        <WidthAsDecimal>%d</WidthAsDecimal>\\n"""		131222	0					
ANR	131758	Argument	s		131222	2					
ANR	131759	Identifier	s		131222	0					
ANR	131760	Argument	tccp -> prcw [ i ]		131222	3					
ANR	131761	ArrayIndexing	tccp -> prcw [ i ]		131222	0					
ANR	131762	PtrMemberAccess	tccp -> prcw		131222	0					
ANR	131763	Identifier	tccp		131222	0					
ANR	131764	Identifier	prcw		131222	1					
ANR	131765	Identifier	i		131222	1					
ANR	131766	ExpressionStatement	"fprintf ( xmlout , ""%s        <HeightAsDecimal>%d</HeightAsDecimal>\\n"" , s , tccp -> prch [ i ] )"	1684:20:78749:78863	131222	1	True				
ANR	131767	CallExpression	"fprintf ( xmlout , ""%s        <HeightAsDecimal>%d</HeightAsDecimal>\\n"" , s , tccp -> prch [ i ] )"		131222	0					
ANR	131768	Callee	fprintf		131222	0					
ANR	131769	Identifier	fprintf		131222	0					
ANR	131770	ArgumentList	xmlout		131222	1					
ANR	131771	Argument	xmlout		131222	0					
ANR	131772	Identifier	xmlout		131222	0					
ANR	131773	Argument	"""%s        <HeightAsDecimal>%d</HeightAsDecimal>\\n"""		131222	1					
ANR	131774	PrimaryExpression	"""%s        <HeightAsDecimal>%d</HeightAsDecimal>\\n"""		131222	0					
ANR	131775	Argument	s		131222	2					
ANR	131776	Identifier	s		131222	0					
ANR	131777	Argument	tccp -> prch [ i ]		131222	3					
ANR	131778	ArrayIndexing	tccp -> prch [ i ]		131222	0					
ANR	131779	PtrMemberAccess	tccp -> prch		131222	0					
ANR	131780	Identifier	tccp		131222	0					
ANR	131781	Identifier	prch		131222	1					
ANR	131782	Identifier	i		131222	1					
ANR	131783	ExpressionStatement	"fprintf ( xmlout , ""%s      </PrecinctHeightAndWidth>\\n"" , s , i )"	1687:16:78899:78960	131222	3	True				
ANR	131784	CallExpression	"fprintf ( xmlout , ""%s      </PrecinctHeightAndWidth>\\n"" , s , i )"		131222	0					
ANR	131785	Callee	fprintf		131222	0					
ANR	131786	Identifier	fprintf		131222	0					
ANR	131787	ArgumentList	xmlout		131222	1					
ANR	131788	Argument	xmlout		131222	0					
ANR	131789	Identifier	xmlout		131222	0					
ANR	131790	Argument	"""%s      </PrecinctHeightAndWidth>\\n"""		131222	1					
ANR	131791	PrimaryExpression	"""%s      </PrecinctHeightAndWidth>\\n"""		131222	0					
ANR	131792	Argument	s		131222	2					
ANR	131793	Identifier	s		131222	0					
ANR	131794	Argument	i		131222	3					
ANR	131795	Identifier	i		131222	0					
ANR	131796	ExpressionStatement	"fprintf ( xmlout , ""%s    </PrecinctSize>\\n"" , s )"	1689:12:78988:79036	131222	3	True				
ANR	131797	CallExpression	"fprintf ( xmlout , ""%s    </PrecinctSize>\\n"" , s )"		131222	0					
ANR	131798	Callee	fprintf		131222	0					
ANR	131799	Identifier	fprintf		131222	0					
ANR	131800	ArgumentList	xmlout		131222	1					
ANR	131801	Argument	xmlout		131222	0					
ANR	131802	Identifier	xmlout		131222	0					
ANR	131803	Argument	"""%s    </PrecinctSize>\\n"""		131222	1					
ANR	131804	PrimaryExpression	"""%s    </PrecinctSize>\\n"""		131222	0					
ANR	131805	Argument	s		131222	2					
ANR	131806	Identifier	s		131222	0					
ANR	131807	ExpressionStatement	"fprintf ( xmlout , ""%s  </SPcoc>\\n"" , s )"	1691:8:79082:79123	131222	17	True				
ANR	131808	CallExpression	"fprintf ( xmlout , ""%s  </SPcoc>\\n"" , s )"		131222	0					
ANR	131809	Callee	fprintf		131222	0					
ANR	131810	Identifier	fprintf		131222	0					
ANR	131811	ArgumentList	xmlout		131222	1					
ANR	131812	Argument	xmlout		131222	0					
ANR	131813	Identifier	xmlout		131222	0					
ANR	131814	Argument	"""%s  </SPcoc>\\n"""		131222	1					
ANR	131815	PrimaryExpression	"""%s  </SPcoc>\\n"""		131222	0					
ANR	131816	Argument	s		131222	2					
ANR	131817	Identifier	s		131222	0					
ANR	131818	ExpressionStatement	"fprintf ( xmlout , ""%s</CodingStyleComponent>\\n"" , s )"	1692:8:79133:79187	131222	18	True				
ANR	131819	CallExpression	"fprintf ( xmlout , ""%s</CodingStyleComponent>\\n"" , s )"		131222	0					
ANR	131820	Callee	fprintf		131222	0					
ANR	131821	Identifier	fprintf		131222	0					
ANR	131822	ArgumentList	xmlout		131222	1					
ANR	131823	Argument	xmlout		131222	0					
ANR	131824	Identifier	xmlout		131222	0					
ANR	131825	Argument	"""%s</CodingStyleComponent>\\n"""		131222	1					
ANR	131826	PrimaryExpression	"""%s</CodingStyleComponent>\\n"""		131222	0					
ANR	131827	Argument	s		131222	2					
ANR	131828	Identifier	s		131222	0					
ANR	131829	ReturnType	void		131222	1					
ANR	131830	Identifier	xml_out_frame_coc		131222	2					
ANR	131831	ParameterList	"FILE * xmlout , opj_tcp_t * tcp , int numcomps"		131222	3					
ANR	131832	Parameter	FILE * xmlout	1565:23:72713:72724	131222	0	True				
ANR	131833	ParameterType	FILE *		131222	0					
ANR	131834	Identifier	xmlout		131222	1					
ANR	131835	Parameter	opj_tcp_t * tcp	1565:37:72727:72740	131222	1	True				
ANR	131836	ParameterType	opj_tcp_t *		131222	0					
ANR	131837	Identifier	tcp		131222	1					
ANR	131838	Parameter	int numcomps	1566:23:72766:72777	131222	2	True				
ANR	131839	ParameterType	int		131222	0					
ANR	131840	Identifier	numcomps		131222	1					
ANR	131841	CFGEntryNode	ENTRY		131222		True				
ANR	131842	CFGExitNode	EXIT		131222		True				
ANR	131843	Symbol	J2K_CP_CSTY_PRT		131222						
ANR	131844	Symbol	notes		131222						
ANR	131845	Symbol	* tccp -> prch		131222						
ANR	131846	Symbol	* tcp		131222						
ANR	131847	Symbol	tccp -> qmfbid		131222						
ANR	131848	Symbol	j2k_default_tcp		131222						
ANR	131849	Symbol	tccp -> numresolutions		131222						
ANR	131850	Symbol	* * tccp		131222						
ANR	131851	Symbol	tccp -> cblkh		131222						
ANR	131852	Symbol	* tccp -> prcw		131222						
ANR	131853	Symbol	tccp -> cblksty		131222						
ANR	131854	Symbol	tccp -> prch		131222						
ANR	131855	Symbol	derived		131222						
ANR	131856	Symbol	numcomps		131222						
ANR	131857	Symbol	tcp		131222						
ANR	131858	Symbol	tccp -> csty		131222						
ANR	131859	Symbol	tcp -> tccps		131222						
ANR	131860	Symbol	tccp -> prcw		131222						
ANR	131861	Symbol	i		131222						
ANR	131862	Symbol	same_component_style		131222						
ANR	131863	Symbol	raw		131222						
ANR	131864	Symbol	tccp		131222						
ANR	131865	Symbol	tccp -> cblkw		131222						
ANR	131866	Symbol	xmlout		131222						
ANR	131867	Symbol	compno		131222						
ANR	131868	Symbol	s		131222						
ANR	131869	Symbol	* i		131222						
ANR	131870	Symbol	* tccp		131222						
ANR	131871	Symbol	firstcomp_tccp		131222						
ANR	131872	Symbol	spaces		131222						
ANR	131873	Function	same_component_style	1698:0:79219:79918							
ANR	131874	FunctionDef	"same_component_style (opj_tccp_t * tccp1 , opj_tccp_t * tccp2)"		131873	0					
ANR	131875	CompoundStatement		1699:0:79283:79918	131873	0					
ANR	131876	IdentifierDeclStatement	int i ;	1700:4:79289:79294	131873	0	True				
ANR	131877	IdentifierDecl	i		131873	0					
ANR	131878	IdentifierDeclType	int		131873	0					
ANR	131879	Identifier	i		131873	1					
ANR	131880	IfStatement	if ( tccp1 -> numresolutions != tccp2 -> numresolutions )		131873	1					
ANR	131881	Condition	tccp1 -> numresolutions != tccp2 -> numresolutions	1702:8:79305:79350	131873	0	True				
ANR	131882	EqualityExpression	tccp1 -> numresolutions != tccp2 -> numresolutions		131873	0		!=			
ANR	131883	PtrMemberAccess	tccp1 -> numresolutions		131873	0					
ANR	131884	Identifier	tccp1		131873	0					
ANR	131885	Identifier	numresolutions		131873	1					
ANR	131886	PtrMemberAccess	tccp2 -> numresolutions		131873	1					
ANR	131887	Identifier	tccp2		131873	0					
ANR	131888	Identifier	numresolutions		131873	1					
ANR	131889	CompoundStatement		4:56:69:69	131873	1					
ANR	131890	ReturnStatement	return FALSE ;	1703:8:79363:79375	131873	0	True				
ANR	131891	Identifier	FALSE		131873	0					
ANR	131892	IfStatement	if ( tccp1 -> cblkw != tccp2 -> cblkw )		131873	2					
ANR	131893	Condition	tccp1 -> cblkw != tccp2 -> cblkw	1705:8:79391:79418	131873	0	True				
ANR	131894	EqualityExpression	tccp1 -> cblkw != tccp2 -> cblkw		131873	0		!=			
ANR	131895	PtrMemberAccess	tccp1 -> cblkw		131873	0					
ANR	131896	Identifier	tccp1		131873	0					
ANR	131897	Identifier	cblkw		131873	1					
ANR	131898	PtrMemberAccess	tccp2 -> cblkw		131873	1					
ANR	131899	Identifier	tccp2		131873	0					
ANR	131900	Identifier	cblkw		131873	1					
ANR	131901	CompoundStatement		7:38:137:137	131873	1					
ANR	131902	ReturnStatement	return FALSE ;	1706:8:79431:79443	131873	0	True				
ANR	131903	Identifier	FALSE		131873	0					
ANR	131904	IfStatement	if ( tccp1 -> cblkh != tccp2 -> cblkh )		131873	3					
ANR	131905	Condition	tccp1 -> cblkh != tccp2 -> cblkh	1708:8:79459:79486	131873	0	True				
ANR	131906	EqualityExpression	tccp1 -> cblkh != tccp2 -> cblkh		131873	0		!=			
ANR	131907	PtrMemberAccess	tccp1 -> cblkh		131873	0					
ANR	131908	Identifier	tccp1		131873	0					
ANR	131909	Identifier	cblkh		131873	1					
ANR	131910	PtrMemberAccess	tccp2 -> cblkh		131873	1					
ANR	131911	Identifier	tccp2		131873	0					
ANR	131912	Identifier	cblkh		131873	1					
ANR	131913	CompoundStatement		10:38:205:205	131873	1					
ANR	131914	ReturnStatement	return FALSE ;	1709:8:79499:79511	131873	0	True				
ANR	131915	Identifier	FALSE		131873	0					
ANR	131916	IfStatement	if ( tccp1 -> cblksty != tccp2 -> cblksty )		131873	4					
ANR	131917	Condition	tccp1 -> cblksty != tccp2 -> cblksty	1711:8:79527:79558	131873	0	True				
ANR	131918	EqualityExpression	tccp1 -> cblksty != tccp2 -> cblksty		131873	0		!=			
ANR	131919	PtrMemberAccess	tccp1 -> cblksty		131873	0					
ANR	131920	Identifier	tccp1		131873	0					
ANR	131921	Identifier	cblksty		131873	1					
ANR	131922	PtrMemberAccess	tccp2 -> cblksty		131873	1					
ANR	131923	Identifier	tccp2		131873	0					
ANR	131924	Identifier	cblksty		131873	1					
ANR	131925	CompoundStatement		13:42:277:277	131873	1					
ANR	131926	ReturnStatement	return FALSE ;	1712:8:79571:79583	131873	0	True				
ANR	131927	Identifier	FALSE		131873	0					
ANR	131928	IfStatement	if ( tccp1 -> csty != tccp2 -> csty )		131873	5					
ANR	131929	Condition	tccp1 -> csty != tccp2 -> csty	1714:8:79599:79624	131873	0	True				
ANR	131930	EqualityExpression	tccp1 -> csty != tccp2 -> csty		131873	0		!=			
ANR	131931	PtrMemberAccess	tccp1 -> csty		131873	0					
ANR	131932	Identifier	tccp1		131873	0					
ANR	131933	Identifier	csty		131873	1					
ANR	131934	PtrMemberAccess	tccp2 -> csty		131873	1					
ANR	131935	Identifier	tccp2		131873	0					
ANR	131936	Identifier	csty		131873	1					
ANR	131937	CompoundStatement		16:36:343:343	131873	1					
ANR	131938	ReturnStatement	return FALSE ;	1715:8:79637:79649	131873	0	True				
ANR	131939	Identifier	FALSE		131873	0					
ANR	131940	IfStatement	if ( tccp1 -> csty & J2K_CP_CSTY_PRT )		131873	6					
ANR	131941	Condition	tccp1 -> csty & J2K_CP_CSTY_PRT	1718:8:79666:79694	131873	0	True				
ANR	131942	BitAndExpression	tccp1 -> csty & J2K_CP_CSTY_PRT		131873	0		&			
ANR	131943	PtrMemberAccess	tccp1 -> csty		131873	0					
ANR	131944	Identifier	tccp1		131873	0					
ANR	131945	Identifier	csty		131873	1					
ANR	131946	Identifier	J2K_CP_CSTY_PRT		131873	1					
ANR	131947	CompoundStatement		20:39:413:413	131873	1					
ANR	131948	ForStatement	for ( i = 0 ; i < tccp1 -> numresolutions ; i ++ )		131873	0					
ANR	131949	ForInit	i = 0 ;	1719:13:79712:79717	131873	0	True				
ANR	131950	AssignmentExpression	i = 0		131873	0		=			
ANR	131951	Identifier	i		131873	0					
ANR	131952	PrimaryExpression	0		131873	1					
ANR	131953	Condition	i < tccp1 -> numresolutions	1719:20:79719:79743	131873	1	True				
ANR	131954	RelationalExpression	i < tccp1 -> numresolutions		131873	0		<			
ANR	131955	Identifier	i		131873	0					
ANR	131956	PtrMemberAccess	tccp1 -> numresolutions		131873	1					
ANR	131957	Identifier	tccp1		131873	0					
ANR	131958	Identifier	numresolutions		131873	1					
ANR	131959	PostIncDecOperationExpression	i ++	1719:47:79746:79748	131873	2	True				
ANR	131960	Identifier	i		131873	0					
ANR	131961	IncDec	++		131873	1					
ANR	131962	CompoundStatement		21:52:467:467	131873	3					
ANR	131963	IfStatement	if ( tccp1 -> prcw [ i ] != tccp2 -> prcw [ i ] || tccp1 -> prch [ i ] != tccp2 -> prch [ i ] )		131873	0					
ANR	131964	Condition	tccp1 -> prcw [ i ] != tccp2 -> prcw [ i ] || tccp1 -> prch [ i ] != tccp2 -> prch [ i ]	1720:16:79769:79836	131873	0	True				
ANR	131965	OrExpression	tccp1 -> prcw [ i ] != tccp2 -> prcw [ i ] || tccp1 -> prch [ i ] != tccp2 -> prch [ i ]		131873	0		||			
ANR	131966	EqualityExpression	tccp1 -> prcw [ i ] != tccp2 -> prcw [ i ]		131873	0		!=			
ANR	131967	ArrayIndexing	tccp1 -> prcw [ i ]		131873	0					
ANR	131968	PtrMemberAccess	tccp1 -> prcw		131873	0					
ANR	131969	Identifier	tccp1		131873	0					
ANR	131970	Identifier	prcw		131873	1					
ANR	131971	Identifier	i		131873	1					
ANR	131972	ArrayIndexing	tccp2 -> prcw [ i ]		131873	1					
ANR	131973	PtrMemberAccess	tccp2 -> prcw		131873	0					
ANR	131974	Identifier	tccp2		131873	0					
ANR	131975	Identifier	prcw		131873	1					
ANR	131976	Identifier	i		131873	1					
ANR	131977	EqualityExpression	tccp1 -> prch [ i ] != tccp2 -> prch [ i ]		131873	1		!=			
ANR	131978	ArrayIndexing	tccp1 -> prch [ i ]		131873	0					
ANR	131979	PtrMemberAccess	tccp1 -> prch		131873	0					
ANR	131980	Identifier	tccp1		131873	0					
ANR	131981	Identifier	prch		131873	1					
ANR	131982	Identifier	i		131873	1					
ANR	131983	ArrayIndexing	tccp2 -> prch [ i ]		131873	1					
ANR	131984	PtrMemberAccess	tccp2 -> prch		131873	0					
ANR	131985	Identifier	tccp2		131873	0					
ANR	131986	Identifier	prch		131873	1					
ANR	131987	Identifier	i		131873	1					
ANR	131988	CompoundStatement		22:86:555:555	131873	1					
ANR	131989	ReturnStatement	return FALSE ;	1721:16:79857:79869	131873	0	True				
ANR	131990	Identifier	FALSE		131873	0					
ANR	131991	ReturnStatement	return TRUE ;	1725:4:79905:79916	131873	7	True				
ANR	131992	Identifier	TRUE		131873	0					
ANR	131993	ReturnType	BOOL		131873	1					
ANR	131994	Identifier	same_component_style		131873	2					
ANR	131995	ParameterList	"opj_tccp_t * tccp1 , opj_tccp_t * tccp2"		131873	3					
ANR	131996	Parameter	opj_tccp_t * tccp1	1698:26:79245:79261	131873	0	True				
ANR	131997	ParameterType	opj_tccp_t *		131873	0					
ANR	131998	Identifier	tccp1		131873	1					
ANR	131999	Parameter	opj_tccp_t * tccp2	1698:45:79264:79280	131873	1	True				
ANR	132000	ParameterType	opj_tccp_t *		131873	0					
ANR	132001	Identifier	tccp2		131873	1					
ANR	132002	CFGEntryNode	ENTRY		131873		True				
ANR	132003	CFGExitNode	EXIT		131873		True				
ANR	132004	Symbol	tccp2 -> cblkh		131873						
ANR	132005	Symbol	J2K_CP_CSTY_PRT		131873						
ANR	132006	Symbol	tccp1		131873						
ANR	132007	Symbol	tccp2		131873						
ANR	132008	Symbol	tccp2 -> prch		131873						
ANR	132009	Symbol	tccp1 -> cblkw		131873						
ANR	132010	Symbol	* tccp2		131873						
ANR	132011	Symbol	tccp2 -> cblkw		131873						
ANR	132012	Symbol	* tccp2 -> prcw		131873						
ANR	132013	Symbol	tccp1 -> cblkh		131873						
ANR	132014	Symbol	* tccp1 -> prcw		131873						
ANR	132015	Symbol	tccp2 -> prcw		131873						
ANR	132016	Symbol	tccp1 -> csty		131873						
ANR	132017	Symbol	tccp2 -> numresolutions		131873						
ANR	132018	Symbol	tccp2 -> csty		131873						
ANR	132019	Symbol	tccp1 -> prcw		131873						
ANR	132020	Symbol	i		131873						
ANR	132021	Symbol	tccp2 -> cblksty		131873						
ANR	132022	Symbol	TRUE		131873						
ANR	132023	Symbol	* tccp2 -> prch		131873						
ANR	132024	Symbol	* tccp1 -> prch		131873						
ANR	132025	Symbol	* tccp1		131873						
ANR	132026	Symbol	* i		131873						
ANR	132027	Symbol	tccp1 -> prch		131873						
ANR	132028	Symbol	* * tccp1		131873						
ANR	132029	Symbol	FALSE		131873						
ANR	132030	Symbol	* * tccp2		131873						
ANR	132031	Symbol	tccp1 -> cblksty		131873						
ANR	132032	Symbol	tccp1 -> numresolutions		131873						
ANR	132033	Function	xml_out_frame_qcd	1730:0:79942:88388							
ANR	132034	FunctionDef	"xml_out_frame_qcd (FILE * xmlout , opj_tcp_t * tcp)"		132033	0					
ANR	132035	CompoundStatement		1731:0:79995:88388	132033	0					
ANR	132036	IdentifierDeclStatement	opj_tccp_t * tccp ;	1733:4:80126:80142	132033	0	True				
ANR	132037	IdentifierDecl	* tccp		132033	0					
ANR	132038	IdentifierDeclType	opj_tccp_t *		132033	0					
ANR	132039	Identifier	tccp		132033	1					
ANR	132040	IdentifierDeclStatement	"int bandno , numbands ;"	1734:4:80148:80168	132033	1	True				
ANR	132041	IdentifierDecl	bandno		132033	0					
ANR	132042	IdentifierDeclType	int		132033	0					
ANR	132043	Identifier	bandno		132033	1					
ANR	132044	IdentifierDecl	numbands		132033	1					
ANR	132045	IdentifierDeclType	int		132033	0					
ANR	132046	Identifier	numbands		132033	1					
ANR	132047	IdentifierDeclStatement	"char spaces [ 13 ] = ""            "" ;"	1735:4:80174:80206	132033	2	True				
ANR	132048	IdentifierDecl	"spaces [ 13 ] = ""            """		132033	0					
ANR	132049	IdentifierDeclType	char [ 13 ]		132033	0					
ANR	132050	Identifier	spaces		132033	1					
ANR	132051	PrimaryExpression	13		132033	2					
ANR	132052	AssignmentExpression	"spaces [ 13 ] = ""            """		132033	3		=			
ANR	132053	Identifier	spaces		132033	0					
ANR	132054	PrimaryExpression	"""            """		132033	1					
ANR	132055	IdentifierDeclStatement	char * s = spaces ;	1736:4:80239:80255	132033	3	True				
ANR	132056	IdentifierDecl	* s = spaces		132033	0					
ANR	132057	IdentifierDeclType	char *		132033	0					
ANR	132058	Identifier	s		132033	1					
ANR	132059	AssignmentExpression	* s = spaces		132033	2		=			
ANR	132060	Identifier	spaces		132033	0					
ANR	132061	Identifier	spaces		132033	1					
ANR	132062	IfStatement	if ( tcp == j2k_default_tcp )		132033	4					
ANR	132063	Condition	tcp == j2k_default_tcp	1737:8:80265:80286	132033	0	True				
ANR	132064	EqualityExpression	tcp == j2k_default_tcp		132033	0		==			
ANR	132065	Identifier	tcp		132033	0					
ANR	132066	Identifier	j2k_default_tcp		132033	1					
ANR	132067	CompoundStatement		7:32:293:293	132033	1					
ANR	132068	ExpressionStatement	s ++	1738:8:80299:80302	132033	0	True				
ANR	132069	PostIncDecOperationExpression	s ++		132033	0					
ANR	132070	Identifier	s		132033	0					
ANR	132071	IncDec	++		132033	1					
ANR	132072	ExpressionStatement	s ++	1739:8:80312:80315	132033	1	True				
ANR	132073	PostIncDecOperationExpression	s ++		132033	0					
ANR	132074	Identifier	s		132033	0					
ANR	132075	IncDec	++		132033	1					
ANR	132076	ExpressionStatement	"fprintf ( xmlout , ""%s<QuantizationDefault Marker=\\""QCD\\"">\\n"" , s )"	1743:4:80396:80475	132033	5	True				
ANR	132077	CallExpression	"fprintf ( xmlout , ""%s<QuantizationDefault Marker=\\""QCD\\"">\\n"" , s )"		132033	0					
ANR	132078	Callee	fprintf		132033	0					
ANR	132079	Identifier	fprintf		132033	0					
ANR	132080	ArgumentList	xmlout		132033	1					
ANR	132081	Argument	xmlout		132033	0					
ANR	132082	Identifier	xmlout		132033	0					
ANR	132083	Argument	"""%s<QuantizationDefault Marker=\\""QCD\\"">\\n"""		132033	1					
ANR	132084	PrimaryExpression	"""%s<QuantizationDefault Marker=\\""QCD\\"">\\n"""		132033	0					
ANR	132085	Argument	s		132033	2					
ANR	132086	Identifier	s		132033	0					
ANR	132087	ExpressionStatement	tccp = & ( tcp -> tccps [ 0 ] )	1745:4:80530:80553	132033	6	True				
ANR	132088	AssignmentExpression	tccp = & ( tcp -> tccps [ 0 ] )		132033	0		=			
ANR	132089	Identifier	tccp		132033	0					
ANR	132090	UnaryOperationExpression	& ( tcp -> tccps [ 0 ] )		132033	1					
ANR	132091	UnaryOperator	&		132033	0					
ANR	132092	ArrayIndexing	tcp -> tccps [ 0 ]		132033	1					
ANR	132093	PtrMemberAccess	tcp -> tccps		132033	0					
ANR	132094	Identifier	tcp		132033	0					
ANR	132095	Identifier	tccps		132033	1					
ANR	132096	PrimaryExpression	0		132033	1					
ANR	132097	ExpressionStatement	"fprintf ( xmlout , ""%s  <Sqcd>\\n"" , s )"	1747:4:80603:80642	132033	7	True				
ANR	132098	CallExpression	"fprintf ( xmlout , ""%s  <Sqcd>\\n"" , s )"		132033	0					
ANR	132099	Callee	fprintf		132033	0					
ANR	132100	Identifier	fprintf		132033	0					
ANR	132101	ArgumentList	xmlout		132033	1					
ANR	132102	Argument	xmlout		132033	0					
ANR	132103	Identifier	xmlout		132033	0					
ANR	132104	Argument	"""%s  <Sqcd>\\n"""		132033	1					
ANR	132105	PrimaryExpression	"""%s  <Sqcd>\\n"""		132033	0					
ANR	132106	Argument	s		132033	2					
ANR	132107	Identifier	s		132033	0					
ANR	132108	IfStatement	if ( notes )		132033	8					
ANR	132109	Condition	notes	1748:8:80670:80674	132033	0	True				
ANR	132110	Identifier	notes		132033	0					
ANR	132111	CompoundStatement		18:15:681:681	132033	1					
ANR	132112	ExpressionStatement	"fprintf ( xmlout , ""%s  <!-- Default quantization style for all components. -->\\n"" , s )"	1749:8:80687:80786	132033	0	True				
ANR	132113	CallExpression	"fprintf ( xmlout , ""%s  <!-- Default quantization style for all components. -->\\n"" , s )"		132033	0					
ANR	132114	Callee	fprintf		132033	0					
ANR	132115	Identifier	fprintf		132033	0					
ANR	132116	ArgumentList	xmlout		132033	1					
ANR	132117	Argument	xmlout		132033	0					
ANR	132118	Identifier	xmlout		132033	0					
ANR	132119	Argument	"""%s  <!-- Default quantization style for all components. -->\\n"""		132033	1					
ANR	132120	PrimaryExpression	"""%s  <!-- Default quantization style for all components. -->\\n"""		132033	0					
ANR	132121	Argument	s		132033	2					
ANR	132122	Identifier	s		132033	0					
ANR	132123	IfStatement	if ( raw )		132033	9					
ANR	132124	Condition	raw	1752:8:80802:80804	132033	0	True				
ANR	132125	Identifier	raw		132033	0					
ANR	132126	CompoundStatement		22:13:811:811	132033	1					
ANR	132127	ExpressionStatement	"fprintf ( xmlout , ""%s    <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> numgbits ) << 5 | tccp -> qntsty )"	1753:8:80817:80925	132033	0	True				
ANR	132128	CallExpression	"fprintf ( xmlout , ""%s    <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> numgbits ) << 5 | tccp -> qntsty )"		132033	0					
ANR	132129	Callee	fprintf		132033	0					
ANR	132130	Identifier	fprintf		132033	0					
ANR	132131	ArgumentList	xmlout		132033	1					
ANR	132132	Argument	xmlout		132033	0					
ANR	132133	Identifier	xmlout		132033	0					
ANR	132134	Argument	"""%s    <AsHex>0x%02x</AsHex>\\n"""		132033	1					
ANR	132135	PrimaryExpression	"""%s    <AsHex>0x%02x</AsHex>\\n"""		132033	0					
ANR	132136	Argument	s		132033	2					
ANR	132137	Identifier	s		132033	0					
ANR	132138	Argument	( tccp -> numgbits ) << 5 | tccp -> qntsty		132033	3					
ANR	132139	InclusiveOrExpression	( tccp -> numgbits ) << 5 | tccp -> qntsty		132033	0		|			
ANR	132140	ShiftExpression	( tccp -> numgbits ) << 5		132033	0		<<			
ANR	132141	PtrMemberAccess	tccp -> numgbits		132033	0					
ANR	132142	Identifier	tccp		132033	0					
ANR	132143	Identifier	numgbits		132033	1					
ANR	132144	PrimaryExpression	5		132033	1					
ANR	132145	PtrMemberAccess	tccp -> qntsty		132033	1					
ANR	132146	Identifier	tccp		132033	0					
ANR	132147	Identifier	qntsty		132033	1					
ANR	132148	IfStatement	if ( derived )		132033	10					
ANR	132149	Condition	derived	1756:8:80941:80947	132033	0	True				
ANR	132150	Identifier	derived		132033	0					
ANR	132151	CompoundStatement		26:17:954:954	132033	1					
ANR	132152	ExpressionStatement	"fprintf ( xmlout , ""%s    <QuantizationStyle>%d</QuantizationStyle>\\n"" , s , tccp -> qntsty )"	1757:8:80960:81064	132033	0	True				
ANR	132153	CallExpression	"fprintf ( xmlout , ""%s    <QuantizationStyle>%d</QuantizationStyle>\\n"" , s , tccp -> qntsty )"		132033	0					
ANR	132154	Callee	fprintf		132033	0					
ANR	132155	Identifier	fprintf		132033	0					
ANR	132156	ArgumentList	xmlout		132033	1					
ANR	132157	Argument	xmlout		132033	0					
ANR	132158	Identifier	xmlout		132033	0					
ANR	132159	Argument	"""%s    <QuantizationStyle>%d</QuantizationStyle>\\n"""		132033	1					
ANR	132160	PrimaryExpression	"""%s    <QuantizationStyle>%d</QuantizationStyle>\\n"""		132033	0					
ANR	132161	Argument	s		132033	2					
ANR	132162	Identifier	s		132033	0					
ANR	132163	Argument	tccp -> qntsty		132033	3					
ANR	132164	PtrMemberAccess	tccp -> qntsty		132033	0					
ANR	132165	Identifier	tccp		132033	0					
ANR	132166	Identifier	qntsty		132033	1					
ANR	132167	IfStatement	if ( notes )		132033	11					
ANR	132168	Condition	notes	1760:8:81080:81084	132033	0	True				
ANR	132169	Identifier	notes		132033	0					
ANR	132170	CompoundStatement		30:15:1091:1091	132033	1					
ANR	132171	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Quantization style (in Sqcd's low 5 bits) may be: -->\\n"" , s )"	1761:8:81097:81201	132033	0	True				
ANR	132172	CallExpression	"fprintf ( xmlout , ""%s    <!-- Quantization style (in Sqcd's low 5 bits) may be: -->\\n"" , s )"		132033	0					
ANR	132173	Callee	fprintf		132033	0					
ANR	132174	Identifier	fprintf		132033	0					
ANR	132175	ArgumentList	xmlout		132033	1					
ANR	132176	Argument	xmlout		132033	0					
ANR	132177	Identifier	xmlout		132033	0					
ANR	132178	Argument	"""%s    <!-- Quantization style (in Sqcd's low 5 bits) may be: -->\\n"""		132033	1					
ANR	132179	PrimaryExpression	"""%s    <!-- Quantization style (in Sqcd's low 5 bits) may be: -->\\n"""		132033	0					
ANR	132180	Argument	s		132033	2					
ANR	132181	Identifier	s		132033	0					
ANR	132182	ExpressionStatement	"fprintf ( xmlout , ""%s    <!--   0 = No quantization. SPqcd size = 8 bits-->\\n"" , s )"	1763:8:81211:81310	132033	1	True				
ANR	132183	CallExpression	"fprintf ( xmlout , ""%s    <!--   0 = No quantization. SPqcd size = 8 bits-->\\n"" , s )"		132033	0					
ANR	132184	Callee	fprintf		132033	0					
ANR	132185	Identifier	fprintf		132033	0					
ANR	132186	ArgumentList	xmlout		132033	1					
ANR	132187	Argument	xmlout		132033	0					
ANR	132188	Identifier	xmlout		132033	0					
ANR	132189	Argument	"""%s    <!--   0 = No quantization. SPqcd size = 8 bits-->\\n"""		132033	1					
ANR	132190	PrimaryExpression	"""%s    <!--   0 = No quantization. SPqcd size = 8 bits-->\\n"""		132033	0					
ANR	132191	Argument	s		132033	2					
ANR	132192	Identifier	s		132033	0					
ANR	132193	ExpressionStatement	"fprintf ( xmlout , ""%s    <!--   1 = Scalar derived (values signaled for N(L)LL subband only). Use Eq. E.5. SPqcd size = 16. -->\\n"" , s )"	1765:8:81320:81484	132033	2	True				
ANR	132194	CallExpression	"fprintf ( xmlout , ""%s    <!--   1 = Scalar derived (values signaled for N(L)LL subband only). Use Eq. E.5. SPqcd size = 16. -->\\n"" , s )"		132033	0					
ANR	132195	Callee	fprintf		132033	0					
ANR	132196	Identifier	fprintf		132033	0					
ANR	132197	ArgumentList	xmlout		132033	1					
ANR	132198	Argument	xmlout		132033	0					
ANR	132199	Identifier	xmlout		132033	0					
ANR	132200	Argument	"""%s    <!--   1 = Scalar derived (values signaled for N(L)LL subband only). Use Eq. E.5. SPqcd size = 16. -->\\n"""		132033	1					
ANR	132201	PrimaryExpression	"""%s    <!--   1 = Scalar derived (values signaled for N(L)LL subband only). Use Eq. E.5. SPqcd size = 16. -->\\n"""		132033	0					
ANR	132202	Argument	s		132033	2					
ANR	132203	Identifier	s		132033	0					
ANR	132204	ExpressionStatement	"fprintf ( xmlout , ""%s    <!--   2 = Scalar expounded (values signaled for each subband). SPqcd size = 16. -->\\n"" , s )"	1768:8:81494:81640	132033	3	True				
ANR	132205	CallExpression	"fprintf ( xmlout , ""%s    <!--   2 = Scalar expounded (values signaled for each subband). SPqcd size = 16. -->\\n"" , s )"		132033	0					
ANR	132206	Callee	fprintf		132033	0					
ANR	132207	Identifier	fprintf		132033	0					
ANR	132208	ArgumentList	xmlout		132033	1					
ANR	132209	Argument	xmlout		132033	0					
ANR	132210	Identifier	xmlout		132033	0					
ANR	132211	Argument	"""%s    <!--   2 = Scalar expounded (values signaled for each subband). SPqcd size = 16. -->\\n"""		132033	1					
ANR	132212	PrimaryExpression	"""%s    <!--   2 = Scalar expounded (values signaled for each subband). SPqcd size = 16. -->\\n"""		132033	0					
ANR	132213	Argument	s		132033	2					
ANR	132214	Identifier	s		132033	0					
ANR	132215	IfStatement	if ( derived )		132033	12					
ANR	132216	Condition	derived	1772:8:81656:81662	132033	0	True				
ANR	132217	Identifier	derived		132033	0					
ANR	132218	CompoundStatement		42:17:1669:1669	132033	1					
ANR	132219	ExpressionStatement	"fprintf ( xmlout , ""%s    <NumberOfGuardBits>%d</NumberOfGuardBits>\\n"" , s , tccp -> numgbits )"	1773:8:81675:81781	132033	0	True				
ANR	132220	CallExpression	"fprintf ( xmlout , ""%s    <NumberOfGuardBits>%d</NumberOfGuardBits>\\n"" , s , tccp -> numgbits )"		132033	0					
ANR	132221	Callee	fprintf		132033	0					
ANR	132222	Identifier	fprintf		132033	0					
ANR	132223	ArgumentList	xmlout		132033	1					
ANR	132224	Argument	xmlout		132033	0					
ANR	132225	Identifier	xmlout		132033	0					
ANR	132226	Argument	"""%s    <NumberOfGuardBits>%d</NumberOfGuardBits>\\n"""		132033	1					
ANR	132227	PrimaryExpression	"""%s    <NumberOfGuardBits>%d</NumberOfGuardBits>\\n"""		132033	0					
ANR	132228	Argument	s		132033	2					
ANR	132229	Identifier	s		132033	0					
ANR	132230	Argument	tccp -> numgbits		132033	3					
ANR	132231	PtrMemberAccess	tccp -> numgbits		132033	0					
ANR	132232	Identifier	tccp		132033	0					
ANR	132233	Identifier	numgbits		132033	1					
ANR	132234	IfStatement	if ( notes )		132033	13					
ANR	132235	Condition	notes	1776:8:81797:81801	132033	0	True				
ANR	132236	Identifier	notes		132033	0					
ANR	132237	CompoundStatement		46:15:1808:1808	132033	1					
ANR	132238	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- 0-7 guard bits allowed (stored in Sqcd's high 3 bits) -->\\n"" , s )"	1777:8:81814:81922	132033	0	True				
ANR	132239	CallExpression	"fprintf ( xmlout , ""%s    <!-- 0-7 guard bits allowed (stored in Sqcd's high 3 bits) -->\\n"" , s )"		132033	0					
ANR	132240	Callee	fprintf		132033	0					
ANR	132241	Identifier	fprintf		132033	0					
ANR	132242	ArgumentList	xmlout		132033	1					
ANR	132243	Argument	xmlout		132033	0					
ANR	132244	Identifier	xmlout		132033	0					
ANR	132245	Argument	"""%s    <!-- 0-7 guard bits allowed (stored in Sqcd's high 3 bits) -->\\n"""		132033	1					
ANR	132246	PrimaryExpression	"""%s    <!-- 0-7 guard bits allowed (stored in Sqcd's high 3 bits) -->\\n"""		132033	0					
ANR	132247	Argument	s		132033	2					
ANR	132248	Identifier	s		132033	0					
ANR	132249	ExpressionStatement	"fprintf ( xmlout , ""%s  </Sqcd>\\n"" , s )"	1780:4:81934:81974	132033	14	True				
ANR	132250	CallExpression	"fprintf ( xmlout , ""%s  </Sqcd>\\n"" , s )"		132033	0					
ANR	132251	Callee	fprintf		132033	0					
ANR	132252	Identifier	fprintf		132033	0					
ANR	132253	ArgumentList	xmlout		132033	1					
ANR	132254	Argument	xmlout		132033	0					
ANR	132255	Identifier	xmlout		132033	0					
ANR	132256	Argument	"""%s  </Sqcd>\\n"""		132033	1					
ANR	132257	PrimaryExpression	"""%s  </Sqcd>\\n"""		132033	0					
ANR	132258	Argument	s		132033	2					
ANR	132259	Identifier	s		132033	0					
ANR	132260	ExpressionStatement	"fprintf ( xmlout , ""%s  <SPqcd>\\n"" , s )"	1786:4:82253:82293	132033	15	True				
ANR	132261	CallExpression	"fprintf ( xmlout , ""%s  <SPqcd>\\n"" , s )"		132033	0					
ANR	132262	Callee	fprintf		132033	0					
ANR	132263	Identifier	fprintf		132033	0					
ANR	132264	ArgumentList	xmlout		132033	1					
ANR	132265	Argument	xmlout		132033	0					
ANR	132266	Identifier	xmlout		132033	0					
ANR	132267	Argument	"""%s  <SPqcd>\\n"""		132033	1					
ANR	132268	PrimaryExpression	"""%s  <SPqcd>\\n"""		132033	0					
ANR	132269	Argument	s		132033	2					
ANR	132270	Identifier	s		132033	0					
ANR	132271	SwitchStatement	switch ( tccp -> qntsty )		132033	16					
ANR	132272	Condition	tccp -> qntsty	1787:12:82307:82318	132033	0	True				
ANR	132273	PtrMemberAccess	tccp -> qntsty		132033	0					
ANR	132274	Identifier	tccp		132033	0					
ANR	132275	Identifier	qntsty		132033	1					
ANR	132276	CompoundStatement		57:26:2325:2325	132033	1					
ANR	132277	Label	case J2K_CCP_QNTSTY_NOQNT :	1788:4:82327:82352	132033	0	True				
ANR	132278	Identifier	J2K_CCP_QNTSTY_NOQNT		132033	0					
ANR	132279	ExpressionStatement	numbands = J2K_MAXBANDS	1790:8:82472:82495	132033	1	True				
ANR	132280	AssignmentExpression	numbands = J2K_MAXBANDS		132033	0		=			
ANR	132281	Identifier	numbands		132033	0					
ANR	132282	Identifier	J2K_MAXBANDS		132033	1					
ANR	132283	ExpressionStatement	"fprintf ( xmlout , ""%s    <ReversibleStepSizeValue>\\n"" , s )"	1793:8:82683:82741	132033	2	True				
ANR	132284	CallExpression	"fprintf ( xmlout , ""%s    <ReversibleStepSizeValue>\\n"" , s )"		132033	0					
ANR	132285	Callee	fprintf		132033	0					
ANR	132286	Identifier	fprintf		132033	0					
ANR	132287	ArgumentList	xmlout		132033	1					
ANR	132288	Argument	xmlout		132033	0					
ANR	132289	Identifier	xmlout		132033	0					
ANR	132290	Argument	"""%s    <ReversibleStepSizeValue>\\n"""		132033	1					
ANR	132291	PrimaryExpression	"""%s    <ReversibleStepSizeValue>\\n"""		132033	0					
ANR	132292	Argument	s		132033	2					
ANR	132293	Identifier	s		132033	0					
ANR	132294	IfStatement	if ( notes )		132033	3					
ANR	132295	Condition	notes	1794:12:82755:82759	132033	0	True				
ANR	132296	Identifier	notes		132033	0					
ANR	132297	CompoundStatement		64:19:2766:2766	132033	1					
ANR	132298	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"" , s )"	1795:12:82776:82922	132033	0	True				
ANR	132299	CallExpression	"fprintf ( xmlout , ""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"" , s )"		132033	0					
ANR	132300	Callee	fprintf		132033	0					
ANR	132301	Identifier	fprintf		132033	0					
ANR	132302	ArgumentList	xmlout		132033	1					
ANR	132303	Argument	xmlout		132033	0					
ANR	132304	Identifier	xmlout		132033	0					
ANR	132305	Argument	"""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"""		132033	1					
ANR	132306	PrimaryExpression	"""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"""		132033	0					
ANR	132307	Argument	s		132033	2					
ANR	132308	Identifier	s		132033	0					
ANR	132309	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- until an exponent with zero value is reached. -->\\n"" , s )"	1798:12:82936:83040	132033	1	True				
ANR	132310	CallExpression	"fprintf ( xmlout , ""%s    <!-- until an exponent with zero value is reached. -->\\n"" , s )"		132033	0					
ANR	132311	Callee	fprintf		132033	0					
ANR	132312	Identifier	fprintf		132033	0					
ANR	132313	ArgumentList	xmlout		132033	1					
ANR	132314	Argument	xmlout		132033	0					
ANR	132315	Identifier	xmlout		132033	0					
ANR	132316	Argument	"""%s    <!-- until an exponent with zero value is reached. -->\\n"""		132033	1					
ANR	132317	PrimaryExpression	"""%s    <!-- until an exponent with zero value is reached. -->\\n"""		132033	0					
ANR	132318	Argument	s		132033	2					
ANR	132319	Identifier	s		132033	0					
ANR	132320	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Exponent epsilon(b) of reversible dynamic range. -->\\n"" , s )"	1800:12:83054:83161	132033	2	True				
ANR	132321	CallExpression	"fprintf ( xmlout , ""%s    <!-- Exponent epsilon(b) of reversible dynamic range. -->\\n"" , s )"		132033	0					
ANR	132322	Callee	fprintf		132033	0					
ANR	132323	Identifier	fprintf		132033	0					
ANR	132324	ArgumentList	xmlout		132033	1					
ANR	132325	Argument	xmlout		132033	0					
ANR	132326	Identifier	xmlout		132033	0					
ANR	132327	Argument	"""%s    <!-- Exponent epsilon(b) of reversible dynamic range. -->\\n"""		132033	1					
ANR	132328	PrimaryExpression	"""%s    <!-- Exponent epsilon(b) of reversible dynamic range. -->\\n"""		132033	0					
ANR	132329	Argument	s		132033	2					
ANR	132330	Identifier	s		132033	0					
ANR	132331	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Hex value is as stored, in high-order 5 bits. -->\\n"" , s )"	1802:12:83175:83279	132033	3	True				
ANR	132332	CallExpression	"fprintf ( xmlout , ""%s    <!-- Hex value is as stored, in high-order 5 bits. -->\\n"" , s )"		132033	0					
ANR	132333	Callee	fprintf		132033	0					
ANR	132334	Identifier	fprintf		132033	0					
ANR	132335	ArgumentList	xmlout		132033	1					
ANR	132336	Argument	xmlout		132033	0					
ANR	132337	Identifier	xmlout		132033	0					
ANR	132338	Argument	"""%s    <!-- Hex value is as stored, in high-order 5 bits. -->\\n"""		132033	1					
ANR	132339	PrimaryExpression	"""%s    <!-- Hex value is as stored, in high-order 5 bits. -->\\n"""		132033	0					
ANR	132340	Argument	s		132033	2					
ANR	132341	Identifier	s		132033	0					
ANR	132342	ForStatement	for ( bandno = 0 ; bandno < numbands ; bandno ++ )		132033	4					
ANR	132343	ForInit	bandno = 0 ;	1805:13:83304:83314	132033	0	True				
ANR	132344	AssignmentExpression	bandno = 0		132033	0		=			
ANR	132345	Identifier	bandno		132033	0					
ANR	132346	PrimaryExpression	0		132033	1					
ANR	132347	Condition	bandno < numbands	1805:25:83316:83332	132033	1	True				
ANR	132348	RelationalExpression	bandno < numbands		132033	0		<			
ANR	132349	Identifier	bandno		132033	0					
ANR	132350	Identifier	numbands		132033	1					
ANR	132351	PostIncDecOperationExpression	bandno ++	1805:44:83335:83342	132033	2	True				
ANR	132352	Identifier	bandno		132033	0					
ANR	132353	IncDec	++		132033	1					
ANR	132354	CompoundStatement		75:54:3349:3349	132033	3					
ANR	132355	IfStatement	if ( tccp -> stepsizes [ bandno ] . expn == 0 )		132033	0					
ANR	132356	Condition	tccp -> stepsizes [ bandno ] . expn == 0	1806:16:83363:83395	132033	0	True				
ANR	132357	EqualityExpression	tccp -> stepsizes [ bandno ] . expn == 0		132033	0		==			
ANR	132358	MemberAccess	tccp -> stepsizes [ bandno ] . expn		132033	0					
ANR	132359	ArrayIndexing	tccp -> stepsizes [ bandno ]		132033	0					
ANR	132360	PtrMemberAccess	tccp -> stepsizes		132033	0					
ANR	132361	Identifier	tccp		132033	0					
ANR	132362	Identifier	stepsizes		132033	1					
ANR	132363	Identifier	bandno		132033	1					
ANR	132364	Identifier	expn		132033	1					
ANR	132365	PrimaryExpression	0		132033	1					
ANR	132366	CompoundStatement		76:51:3402:3402	132033	1					
ANR	132367	BreakStatement	break ;	1807:16:83416:83421	132033	0	True				
ANR	132368	ExpressionStatement	"fprintf ( xmlout , ""%s      <DynamicRangeExponent Subband=\\""%d\\"">\\n"" , s , bandno )"	1809:12:83492:83570	132033	1	True				
ANR	132369	CallExpression	"fprintf ( xmlout , ""%s      <DynamicRangeExponent Subband=\\""%d\\"">\\n"" , s , bandno )"		132033	0					
ANR	132370	Callee	fprintf		132033	0					
ANR	132371	Identifier	fprintf		132033	0					
ANR	132372	ArgumentList	xmlout		132033	1					
ANR	132373	Argument	xmlout		132033	0					
ANR	132374	Identifier	xmlout		132033	0					
ANR	132375	Argument	"""%s      <DynamicRangeExponent Subband=\\""%d\\"">\\n"""		132033	1					
ANR	132376	PrimaryExpression	"""%s      <DynamicRangeExponent Subband=\\""%d\\"">\\n"""		132033	0					
ANR	132377	Argument	s		132033	2					
ANR	132378	Identifier	s		132033	0					
ANR	132379	Argument	bandno		132033	3					
ANR	132380	Identifier	bandno		132033	0					
ANR	132381	IfStatement	if ( raw )		132033	2					
ANR	132382	Condition	raw	1810:16:83588:83590	132033	0	True				
ANR	132383	Identifier	raw		132033	0					
ANR	132384	CompoundStatement		80:21:3597:3597	132033	1					
ANR	132385	ExpressionStatement	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , tccp -> stepsizes [ bandno ] . expn << 3 )"	1811:16:83611:83725	132033	0	True				
ANR	132386	CallExpression	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , tccp -> stepsizes [ bandno ] . expn << 3 )"		132033	0					
ANR	132387	Callee	fprintf		132033	0					
ANR	132388	Identifier	fprintf		132033	0					
ANR	132389	ArgumentList	xmlout		132033	1					
ANR	132390	Argument	xmlout		132033	0					
ANR	132391	Identifier	xmlout		132033	0					
ANR	132392	Argument	"""%s        <AsHex>0x%02x</AsHex>\\n"""		132033	1					
ANR	132393	PrimaryExpression	"""%s        <AsHex>0x%02x</AsHex>\\n"""		132033	0					
ANR	132394	Argument	s		132033	2					
ANR	132395	Identifier	s		132033	0					
ANR	132396	Argument	tccp -> stepsizes [ bandno ] . expn << 3		132033	3					
ANR	132397	ShiftExpression	tccp -> stepsizes [ bandno ] . expn << 3		132033	0		<<			
ANR	132398	MemberAccess	tccp -> stepsizes [ bandno ] . expn		132033	0					
ANR	132399	ArrayIndexing	tccp -> stepsizes [ bandno ]		132033	0					
ANR	132400	PtrMemberAccess	tccp -> stepsizes		132033	0					
ANR	132401	Identifier	tccp		132033	0					
ANR	132402	Identifier	stepsizes		132033	1					
ANR	132403	Identifier	bandno		132033	1					
ANR	132404	Identifier	expn		132033	1					
ANR	132405	PrimaryExpression	3		132033	1					
ANR	132406	IfStatement	if ( derived )		132033	3					
ANR	132407	Condition	derived	1814:16:83757:83763	132033	0	True				
ANR	132408	Identifier	derived		132033	0					
ANR	132409	CompoundStatement		84:25:3770:3770	132033	1					
ANR	132410	ExpressionStatement	"fprintf ( xmlout , ""%s        <AsDecimal>%d</AsDecimal>\\n"" , s , tccp -> stepsizes [ bandno ] . expn )"	1815:16:83784:83897	132033	0	True				
ANR	132411	CallExpression	"fprintf ( xmlout , ""%s        <AsDecimal>%d</AsDecimal>\\n"" , s , tccp -> stepsizes [ bandno ] . expn )"		132033	0					
ANR	132412	Callee	fprintf		132033	0					
ANR	132413	Identifier	fprintf		132033	0					
ANR	132414	ArgumentList	xmlout		132033	1					
ANR	132415	Argument	xmlout		132033	0					
ANR	132416	Identifier	xmlout		132033	0					
ANR	132417	Argument	"""%s        <AsDecimal>%d</AsDecimal>\\n"""		132033	1					
ANR	132418	PrimaryExpression	"""%s        <AsDecimal>%d</AsDecimal>\\n"""		132033	0					
ANR	132419	Argument	s		132033	2					
ANR	132420	Identifier	s		132033	0					
ANR	132421	Argument	tccp -> stepsizes [ bandno ] . expn		132033	3					
ANR	132422	MemberAccess	tccp -> stepsizes [ bandno ] . expn		132033	0					
ANR	132423	ArrayIndexing	tccp -> stepsizes [ bandno ]		132033	0					
ANR	132424	PtrMemberAccess	tccp -> stepsizes		132033	0					
ANR	132425	Identifier	tccp		132033	0					
ANR	132426	Identifier	stepsizes		132033	1					
ANR	132427	Identifier	bandno		132033	1					
ANR	132428	Identifier	expn		132033	1					
ANR	132429	ExpressionStatement	"fprintf ( xmlout , ""%s      </DynamicRangeExponent>\\n"" , s )"	1818:12:83925:83981	132033	4	True				
ANR	132430	CallExpression	"fprintf ( xmlout , ""%s      </DynamicRangeExponent>\\n"" , s )"		132033	0					
ANR	132431	Callee	fprintf		132033	0					
ANR	132432	Identifier	fprintf		132033	0					
ANR	132433	ArgumentList	xmlout		132033	1					
ANR	132434	Argument	xmlout		132033	0					
ANR	132435	Identifier	xmlout		132033	0					
ANR	132436	Argument	"""%s      </DynamicRangeExponent>\\n"""		132033	1					
ANR	132437	PrimaryExpression	"""%s      </DynamicRangeExponent>\\n"""		132033	0					
ANR	132438	Argument	s		132033	2					
ANR	132439	Identifier	s		132033	0					
ANR	132440	ExpressionStatement	"fprintf ( xmlout , ""%s    </ReversibleStepSizeValue>\\n"" , s )"	1820:8:84001:84060	132033	5	True				
ANR	132441	CallExpression	"fprintf ( xmlout , ""%s    </ReversibleStepSizeValue>\\n"" , s )"		132033	0					
ANR	132442	Callee	fprintf		132033	0					
ANR	132443	Identifier	fprintf		132033	0					
ANR	132444	ArgumentList	xmlout		132033	1					
ANR	132445	Argument	xmlout		132033	0					
ANR	132446	Identifier	xmlout		132033	0					
ANR	132447	Argument	"""%s    </ReversibleStepSizeValue>\\n"""		132033	1					
ANR	132448	PrimaryExpression	"""%s    </ReversibleStepSizeValue>\\n"""		132033	0					
ANR	132449	Argument	s		132033	2					
ANR	132450	Identifier	s		132033	0					
ANR	132451	BreakStatement	break ;	1821:8:84070:84075	132033	6	True				
ANR	132452	Label	case J2K_CCP_QNTSTY_SIQNT :	1822:4:84081:84106	132033	7	True				
ANR	132453	Identifier	J2K_CCP_QNTSTY_SIQNT		132033	0					
ANR	132454	ExpressionStatement	"fprintf ( xmlout , ""%s    <QuantizationStepSizeValues>\\n"" , s )"	1825:8:84250:84311	132033	8	True				
ANR	132455	CallExpression	"fprintf ( xmlout , ""%s    <QuantizationStepSizeValues>\\n"" , s )"		132033	0					
ANR	132456	Callee	fprintf		132033	0					
ANR	132457	Identifier	fprintf		132033	0					
ANR	132458	ArgumentList	xmlout		132033	1					
ANR	132459	Argument	xmlout		132033	0					
ANR	132460	Identifier	xmlout		132033	0					
ANR	132461	Argument	"""%s    <QuantizationStepSizeValues>\\n"""		132033	1					
ANR	132462	PrimaryExpression	"""%s    <QuantizationStepSizeValues>\\n"""		132033	0					
ANR	132463	Argument	s		132033	2					
ANR	132464	Identifier	s		132033	0					
ANR	132465	IfStatement	if ( notes )		132033	9					
ANR	132466	Condition	notes	1826:12:84325:84329	132033	0	True				
ANR	132467	Identifier	notes		132033	0					
ANR	132468	CompoundStatement		96:19:4336:4336	132033	1					
ANR	132469	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"" , s )"	1827:12:84346:84495	132033	0	True				
ANR	132470	CallExpression	"fprintf ( xmlout , ""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"" , s )"		132033	0					
ANR	132471	Callee	fprintf		132033	0					
ANR	132472	Identifier	fprintf		132033	0					
ANR	132473	ArgumentList	xmlout		132033	1					
ANR	132474	Argument	xmlout		132033	0					
ANR	132475	Identifier	xmlout		132033	0					
ANR	132476	Argument	"""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"""		132033	1					
ANR	132477	PrimaryExpression	"""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"""		132033	0					
ANR	132478	Argument	s		132033	2					
ANR	132479	Identifier	s		132033	0					
ANR	132480	ExpressionStatement	"fprintf ( xmlout , ""%s      <QuantizationValues Subband=\\""0\\"">\\n"" , s )"	1831:8:84515:84584	132033	10	True				
ANR	132481	CallExpression	"fprintf ( xmlout , ""%s      <QuantizationValues Subband=\\""0\\"">\\n"" , s )"		132033	0					
ANR	132482	Callee	fprintf		132033	0					
ANR	132483	Identifier	fprintf		132033	0					
ANR	132484	ArgumentList	xmlout		132033	1					
ANR	132485	Argument	xmlout		132033	0					
ANR	132486	Identifier	xmlout		132033	0					
ANR	132487	Argument	"""%s      <QuantizationValues Subband=\\""0\\"">\\n"""		132033	1					
ANR	132488	PrimaryExpression	"""%s      <QuantizationValues Subband=\\""0\\"">\\n"""		132033	0					
ANR	132489	Argument	s		132033	2					
ANR	132490	Identifier	s		132033	0					
ANR	132491	IfStatement	if ( notes )		132033	11					
ANR	132492	Condition	notes	1832:12:84598:84602	132033	0	True				
ANR	132493	Identifier	notes		132033	0					
ANR	132494	CompoundStatement		102:19:4609:4609	132033	1					
ANR	132495	ExpressionStatement	"fprintf ( xmlout , ""%s      <!-- For N(L)LL subband: >\\n"" , s )"	1833:12:84619:84678	132033	0	True				
ANR	132496	CallExpression	"fprintf ( xmlout , ""%s      <!-- For N(L)LL subband: >\\n"" , s )"		132033	0					
ANR	132497	Callee	fprintf		132033	0					
ANR	132498	Identifier	fprintf		132033	0					
ANR	132499	ArgumentList	xmlout		132033	1					
ANR	132500	Argument	xmlout		132033	0					
ANR	132501	Identifier	xmlout		132033	0					
ANR	132502	Argument	"""%s      <!-- For N(L)LL subband: >\\n"""		132033	1					
ANR	132503	PrimaryExpression	"""%s      <!-- For N(L)LL subband: >\\n"""		132033	0					
ANR	132504	Argument	s		132033	2					
ANR	132505	Identifier	s		132033	0					
ANR	132506	IfStatement	if ( raw )		132033	12					
ANR	132507	Condition	raw	1835:12:84702:84704	132033	0	True				
ANR	132508	Identifier	raw		132033	0					
ANR	132509	CompoundStatement		105:17:4711:4711	132033	1					
ANR	132510	ExpressionStatement	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> stepsizes [ 0 ] . expn << 11 ) | tccp -> stepsizes [ 0 ] . mant )"	1836:12:84721:84856	132033	0	True				
ANR	132511	CallExpression	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> stepsizes [ 0 ] . expn << 11 ) | tccp -> stepsizes [ 0 ] . mant )"		132033	0					
ANR	132512	Callee	fprintf		132033	0					
ANR	132513	Identifier	fprintf		132033	0					
ANR	132514	ArgumentList	xmlout		132033	1					
ANR	132515	Argument	xmlout		132033	0					
ANR	132516	Identifier	xmlout		132033	0					
ANR	132517	Argument	"""%s        <AsHex>0x%02x</AsHex>\\n"""		132033	1					
ANR	132518	PrimaryExpression	"""%s        <AsHex>0x%02x</AsHex>\\n"""		132033	0					
ANR	132519	Argument	s		132033	2					
ANR	132520	Identifier	s		132033	0					
ANR	132521	Argument	( tccp -> stepsizes [ 0 ] . expn << 11 ) | tccp -> stepsizes [ 0 ] . mant		132033	3					
ANR	132522	InclusiveOrExpression	( tccp -> stepsizes [ 0 ] . expn << 11 ) | tccp -> stepsizes [ 0 ] . mant		132033	0		|			
ANR	132523	ShiftExpression	tccp -> stepsizes [ 0 ] . expn << 11		132033	0		<<			
ANR	132524	MemberAccess	tccp -> stepsizes [ 0 ] . expn		132033	0					
ANR	132525	ArrayIndexing	tccp -> stepsizes [ 0 ]		132033	0					
ANR	132526	PtrMemberAccess	tccp -> stepsizes		132033	0					
ANR	132527	Identifier	tccp		132033	0					
ANR	132528	Identifier	stepsizes		132033	1					
ANR	132529	PrimaryExpression	0		132033	1					
ANR	132530	Identifier	expn		132033	1					
ANR	132531	PrimaryExpression	11		132033	1					
ANR	132532	MemberAccess	tccp -> stepsizes [ 0 ] . mant		132033	1					
ANR	132533	ArrayIndexing	tccp -> stepsizes [ 0 ]		132033	0					
ANR	132534	PtrMemberAccess	tccp -> stepsizes		132033	0					
ANR	132535	Identifier	tccp		132033	0					
ANR	132536	Identifier	stepsizes		132033	1					
ANR	132537	PrimaryExpression	0		132033	1					
ANR	132538	Identifier	mant		132033	1					
ANR	132539	IfStatement	if ( derived )		132033	13					
ANR	132540	Condition	derived	1839:12:84880:84886	132033	0	True				
ANR	132541	Identifier	derived		132033	0					
ANR	132542	CompoundStatement		109:21:4893:4893	132033	1					
ANR	132543	ExpressionStatement	"fprintf ( xmlout , ""%s        <Exponent>%d</Exponent>\\n"" , s , tccp -> stepsizes [ 0 ] . expn )"	1840:12:84903:85006	132033	0	True				
ANR	132544	CallExpression	"fprintf ( xmlout , ""%s        <Exponent>%d</Exponent>\\n"" , s , tccp -> stepsizes [ 0 ] . expn )"		132033	0					
ANR	132545	Callee	fprintf		132033	0					
ANR	132546	Identifier	fprintf		132033	0					
ANR	132547	ArgumentList	xmlout		132033	1					
ANR	132548	Argument	xmlout		132033	0					
ANR	132549	Identifier	xmlout		132033	0					
ANR	132550	Argument	"""%s        <Exponent>%d</Exponent>\\n"""		132033	1					
ANR	132551	PrimaryExpression	"""%s        <Exponent>%d</Exponent>\\n"""		132033	0					
ANR	132552	Argument	s		132033	2					
ANR	132553	Identifier	s		132033	0					
ANR	132554	Argument	tccp -> stepsizes [ 0 ] . expn		132033	3					
ANR	132555	MemberAccess	tccp -> stepsizes [ 0 ] . expn		132033	0					
ANR	132556	ArrayIndexing	tccp -> stepsizes [ 0 ]		132033	0					
ANR	132557	PtrMemberAccess	tccp -> stepsizes		132033	0					
ANR	132558	Identifier	tccp		132033	0					
ANR	132559	Identifier	stepsizes		132033	1					
ANR	132560	PrimaryExpression	0		132033	1					
ANR	132561	Identifier	expn		132033	1					
ANR	132562	ExpressionStatement	"fprintf ( xmlout , ""%s        <Mantissa>%d</Mantissa>\\n"" , s , tccp -> stepsizes [ 0 ] . mant )"	1842:12:85020:85123	132033	1	True				
ANR	132563	CallExpression	"fprintf ( xmlout , ""%s        <Mantissa>%d</Mantissa>\\n"" , s , tccp -> stepsizes [ 0 ] . mant )"		132033	0					
ANR	132564	Callee	fprintf		132033	0					
ANR	132565	Identifier	fprintf		132033	0					
ANR	132566	ArgumentList	xmlout		132033	1					
ANR	132567	Argument	xmlout		132033	0					
ANR	132568	Identifier	xmlout		132033	0					
ANR	132569	Argument	"""%s        <Mantissa>%d</Mantissa>\\n"""		132033	1					
ANR	132570	PrimaryExpression	"""%s        <Mantissa>%d</Mantissa>\\n"""		132033	0					
ANR	132571	Argument	s		132033	2					
ANR	132572	Identifier	s		132033	0					
ANR	132573	Argument	tccp -> stepsizes [ 0 ] . mant		132033	3					
ANR	132574	MemberAccess	tccp -> stepsizes [ 0 ] . mant		132033	0					
ANR	132575	ArrayIndexing	tccp -> stepsizes [ 0 ]		132033	0					
ANR	132576	PtrMemberAccess	tccp -> stepsizes		132033	0					
ANR	132577	Identifier	tccp		132033	0					
ANR	132578	Identifier	stepsizes		132033	1					
ANR	132579	PrimaryExpression	0		132033	1					
ANR	132580	Identifier	mant		132033	1					
ANR	132581	ExpressionStatement	"fprintf ( xmlout , ""%s      </QuantizationValues>\\n"" , s )"	1845:8:85143:85199	132033	14	True				
ANR	132582	CallExpression	"fprintf ( xmlout , ""%s      </QuantizationValues>\\n"" , s )"		132033	0					
ANR	132583	Callee	fprintf		132033	0					
ANR	132584	Identifier	fprintf		132033	0					
ANR	132585	ArgumentList	xmlout		132033	1					
ANR	132586	Argument	xmlout		132033	0					
ANR	132587	Identifier	xmlout		132033	0					
ANR	132588	Argument	"""%s      </QuantizationValues>\\n"""		132033	1					
ANR	132589	PrimaryExpression	"""%s      </QuantizationValues>\\n"""		132033	0					
ANR	132590	Argument	s		132033	2					
ANR	132591	Identifier	s		132033	0					
ANR	132592	IfStatement	if ( notes )		132033	15					
ANR	132593	Condition	notes	1846:12:85213:85217	132033	0	True				
ANR	132594	Identifier	notes		132033	0					
ANR	132595	CompoundStatement		116:19:5224:5224	132033	1					
ANR	132596	ExpressionStatement	"fprintf ( xmlout , ""%s      <!-- Exponents for subbands beyond 0 are not from header, but calculated per Eq. E.5 -->\\n"" , s )"	1847:12:85234:85394	132033	0	True				
ANR	132597	CallExpression	"fprintf ( xmlout , ""%s      <!-- Exponents for subbands beyond 0 are not from header, but calculated per Eq. E.5 -->\\n"" , s )"		132033	0					
ANR	132598	Callee	fprintf		132033	0					
ANR	132599	Identifier	fprintf		132033	0					
ANR	132600	ArgumentList	xmlout		132033	1					
ANR	132601	Argument	xmlout		132033	0					
ANR	132602	Identifier	xmlout		132033	0					
ANR	132603	Argument	"""%s      <!-- Exponents for subbands beyond 0 are not from header, but calculated per Eq. E.5 -->\\n"""		132033	1					
ANR	132604	PrimaryExpression	"""%s      <!-- Exponents for subbands beyond 0 are not from header, but calculated per Eq. E.5 -->\\n"""		132033	0					
ANR	132605	Argument	s		132033	2					
ANR	132606	Identifier	s		132033	0					
ANR	132607	ExpressionStatement	"fprintf ( xmlout , ""%s      <!-- The mantissa for all subbands is the same, given by the value above. -->\\n"" , s )"	1850:12:85408:85557	132033	1	True				
ANR	132608	CallExpression	"fprintf ( xmlout , ""%s      <!-- The mantissa for all subbands is the same, given by the value above. -->\\n"" , s )"		132033	0					
ANR	132609	Callee	fprintf		132033	0					
ANR	132610	Identifier	fprintf		132033	0					
ANR	132611	ArgumentList	xmlout		132033	1					
ANR	132612	Argument	xmlout		132033	0					
ANR	132613	Identifier	xmlout		132033	0					
ANR	132614	Argument	"""%s      <!-- The mantissa for all subbands is the same, given by the value above. -->\\n"""		132033	1					
ANR	132615	PrimaryExpression	"""%s      <!-- The mantissa for all subbands is the same, given by the value above. -->\\n"""		132033	0					
ANR	132616	Argument	s		132033	2					
ANR	132617	Identifier	s		132033	0					
ANR	132618	ExpressionStatement	"fprintf ( xmlout , ""%s      <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"" , s )"	1853:12:85571:85719	132033	2	True				
ANR	132619	CallExpression	"fprintf ( xmlout , ""%s      <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"" , s )"		132033	0					
ANR	132620	Callee	fprintf		132033	0					
ANR	132621	Identifier	fprintf		132033	0					
ANR	132622	ArgumentList	xmlout		132033	1					
ANR	132623	Argument	xmlout		132033	0					
ANR	132624	Identifier	xmlout		132033	0					
ANR	132625	Argument	"""%s      <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"""		132033	1					
ANR	132626	PrimaryExpression	"""%s      <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"""		132033	0					
ANR	132627	Argument	s		132033	2					
ANR	132628	Identifier	s		132033	0					
ANR	132629	ExpressionStatement	"fprintf ( xmlout , ""%s      <!-- until a subband with exponent of zero value is reached. -->\\n"" , s )"	1856:12:85733:85869	132033	3	True				
ANR	132630	CallExpression	"fprintf ( xmlout , ""%s      <!-- until a subband with exponent of zero value is reached. -->\\n"" , s )"		132033	0					
ANR	132631	Callee	fprintf		132033	0					
ANR	132632	Identifier	fprintf		132033	0					
ANR	132633	ArgumentList	xmlout		132033	1					
ANR	132634	Argument	xmlout		132033	0					
ANR	132635	Identifier	xmlout		132033	0					
ANR	132636	Argument	"""%s      <!-- until a subband with exponent of zero value is reached. -->\\n"""		132033	1					
ANR	132637	PrimaryExpression	"""%s      <!-- until a subband with exponent of zero value is reached. -->\\n"""		132033	0					
ANR	132638	Argument	s		132033	2					
ANR	132639	Identifier	s		132033	0					
ANR	132640	ForStatement	for ( bandno = 1 ; bandno < J2K_MAXBANDS ; bandno ++ )		132033	16					
ANR	132641	ForInit	bandno = 1 ;	1861:13:85895:85905	132033	0	True				
ANR	132642	AssignmentExpression	bandno = 1		132033	0		=			
ANR	132643	Identifier	bandno		132033	0					
ANR	132644	PrimaryExpression	1		132033	1					
ANR	132645	Condition	bandno < J2K_MAXBANDS	1861:25:85907:85927	132033	1	True				
ANR	132646	RelationalExpression	bandno < J2K_MAXBANDS		132033	0		<			
ANR	132647	Identifier	bandno		132033	0					
ANR	132648	Identifier	J2K_MAXBANDS		132033	1					
ANR	132649	PostIncDecOperationExpression	bandno ++	1861:48:85930:85937	132033	2	True				
ANR	132650	Identifier	bandno		132033	0					
ANR	132651	IncDec	++		132033	1					
ANR	132652	CompoundStatement		131:58:5944:5944	132033	3					
ANR	132653	IfStatement	if ( tccp -> stepsizes [ bandno ] . expn == 0 )		132033	0					
ANR	132654	Condition	tccp -> stepsizes [ bandno ] . expn == 0	1862:16:85958:85990	132033	0	True				
ANR	132655	EqualityExpression	tccp -> stepsizes [ bandno ] . expn == 0		132033	0		==			
ANR	132656	MemberAccess	tccp -> stepsizes [ bandno ] . expn		132033	0					
ANR	132657	ArrayIndexing	tccp -> stepsizes [ bandno ]		132033	0					
ANR	132658	PtrMemberAccess	tccp -> stepsizes		132033	0					
ANR	132659	Identifier	tccp		132033	0					
ANR	132660	Identifier	stepsizes		132033	1					
ANR	132661	Identifier	bandno		132033	1					
ANR	132662	Identifier	expn		132033	1					
ANR	132663	PrimaryExpression	0		132033	1					
ANR	132664	CompoundStatement		132:51:5997:5997	132033	1					
ANR	132665	BreakStatement	break ;	1863:16:86011:86016	132033	0	True				
ANR	132666	ExpressionStatement	"fprintf ( xmlout , ""%s      <CalculatedExponent Subband=\\""%d\\"">%d</CalculatedExponent>\\n"" , s , bandno , tccp -> stepsizes [ bandno ] . expn )"	1866:12:86045:86213	132033	1	True				
ANR	132667	CallExpression	"fprintf ( xmlout , ""%s      <CalculatedExponent Subband=\\""%d\\"">%d</CalculatedExponent>\\n"" , s , bandno , tccp -> stepsizes [ bandno ] . expn )"		132033	0					
ANR	132668	Callee	fprintf		132033	0					
ANR	132669	Identifier	fprintf		132033	0					
ANR	132670	ArgumentList	xmlout		132033	1					
ANR	132671	Argument	xmlout		132033	0					
ANR	132672	Identifier	xmlout		132033	0					
ANR	132673	Argument	"""%s      <CalculatedExponent Subband=\\""%d\\"">%d</CalculatedExponent>\\n"""		132033	1					
ANR	132674	PrimaryExpression	"""%s      <CalculatedExponent Subband=\\""%d\\"">%d</CalculatedExponent>\\n"""		132033	0					
ANR	132675	Argument	s		132033	2					
ANR	132676	Identifier	s		132033	0					
ANR	132677	Argument	bandno		132033	3					
ANR	132678	Identifier	bandno		132033	0					
ANR	132679	Argument	tccp -> stepsizes [ bandno ] . expn		132033	4					
ANR	132680	MemberAccess	tccp -> stepsizes [ bandno ] . expn		132033	0					
ANR	132681	ArrayIndexing	tccp -> stepsizes [ bandno ]		132033	0					
ANR	132682	PtrMemberAccess	tccp -> stepsizes		132033	0					
ANR	132683	Identifier	tccp		132033	0					
ANR	132684	Identifier	stepsizes		132033	1					
ANR	132685	Identifier	bandno		132033	1					
ANR	132686	Identifier	expn		132033	1					
ANR	132687	ExpressionStatement	"fprintf ( xmlout , ""%s    </QuantizationStepSizeValues>\\n"" , s )"	1871:8:86234:86296	132033	17	True				
ANR	132688	CallExpression	"fprintf ( xmlout , ""%s    </QuantizationStepSizeValues>\\n"" , s )"		132033	0					
ANR	132689	Callee	fprintf		132033	0					
ANR	132690	Identifier	fprintf		132033	0					
ANR	132691	ArgumentList	xmlout		132033	1					
ANR	132692	Argument	xmlout		132033	0					
ANR	132693	Identifier	xmlout		132033	0					
ANR	132694	Argument	"""%s    </QuantizationStepSizeValues>\\n"""		132033	1					
ANR	132695	PrimaryExpression	"""%s    </QuantizationStepSizeValues>\\n"""		132033	0					
ANR	132696	Argument	s		132033	2					
ANR	132697	Identifier	s		132033	0					
ANR	132698	BreakStatement	break ;	1872:8:86306:86311	132033	18	True				
ANR	132699	Label	default :	1874:4:86318:86325	132033	19	True				
ANR	132700	Identifier	default		132033	0					
ANR	132701	ExpressionStatement	numbands = J2K_MAXBANDS	1876:8:86485:86508	132033	20	True				
ANR	132702	AssignmentExpression	numbands = J2K_MAXBANDS		132033	0		=			
ANR	132703	Identifier	numbands		132033	0					
ANR	132704	Identifier	J2K_MAXBANDS		132033	1					
ANR	132705	ExpressionStatement	"fprintf ( xmlout , ""%s    <QuantizationStepSizeValues>\\n"" , s )"	1878:8:86615:86676	132033	21	True				
ANR	132706	CallExpression	"fprintf ( xmlout , ""%s    <QuantizationStepSizeValues>\\n"" , s )"		132033	0					
ANR	132707	Callee	fprintf		132033	0					
ANR	132708	Identifier	fprintf		132033	0					
ANR	132709	ArgumentList	xmlout		132033	1					
ANR	132710	Argument	xmlout		132033	0					
ANR	132711	Identifier	xmlout		132033	0					
ANR	132712	Argument	"""%s    <QuantizationStepSizeValues>\\n"""		132033	1					
ANR	132713	PrimaryExpression	"""%s    <QuantizationStepSizeValues>\\n"""		132033	0					
ANR	132714	Argument	s		132033	2					
ANR	132715	Identifier	s		132033	0					
ANR	132716	IfStatement	if ( notes )		132033	22					
ANR	132717	Condition	notes	1879:12:86690:86694	132033	0	True				
ANR	132718	Identifier	notes		132033	0					
ANR	132719	CompoundStatement		149:19:6701:6701	132033	1					
ANR	132720	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"" , s )"	1880:12:86711:86860	132033	0	True				
ANR	132721	CallExpression	"fprintf ( xmlout , ""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"" , s )"		132033	0					
ANR	132722	Callee	fprintf		132033	0					
ANR	132723	Identifier	fprintf		132033	0					
ANR	132724	ArgumentList	xmlout		132033	1					
ANR	132725	Argument	xmlout		132033	0					
ANR	132726	Identifier	xmlout		132033	0					
ANR	132727	Argument	"""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"""		132033	1					
ANR	132728	PrimaryExpression	"""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"""		132033	0					
ANR	132729	Argument	s		132033	2					
ANR	132730	Identifier	s		132033	0					
ANR	132731	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"" , s )"	1883:12:86874:87020	132033	1	True				
ANR	132732	CallExpression	"fprintf ( xmlout , ""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"" , s )"		132033	0					
ANR	132733	Callee	fprintf		132033	0					
ANR	132734	Identifier	fprintf		132033	0					
ANR	132735	ArgumentList	xmlout		132033	1					
ANR	132736	Argument	xmlout		132033	0					
ANR	132737	Identifier	xmlout		132033	0					
ANR	132738	Argument	"""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"""		132033	1					
ANR	132739	PrimaryExpression	"""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"""		132033	0					
ANR	132740	Argument	s		132033	2					
ANR	132741	Identifier	s		132033	0					
ANR	132742	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- until a subband with mantissa and exponent of zero values is reached. -->\\n"" , s )"	1886:12:87034:87182	132033	2	True				
ANR	132743	CallExpression	"fprintf ( xmlout , ""%s    <!-- until a subband with mantissa and exponent of zero values is reached. -->\\n"" , s )"		132033	0					
ANR	132744	Callee	fprintf		132033	0					
ANR	132745	Identifier	fprintf		132033	0					
ANR	132746	ArgumentList	xmlout		132033	1					
ANR	132747	Argument	xmlout		132033	0					
ANR	132748	Identifier	xmlout		132033	0					
ANR	132749	Argument	"""%s    <!-- until a subband with mantissa and exponent of zero values is reached. -->\\n"""		132033	1					
ANR	132750	PrimaryExpression	"""%s    <!-- until a subband with mantissa and exponent of zero values is reached. -->\\n"""		132033	0					
ANR	132751	Argument	s		132033	2					
ANR	132752	Identifier	s		132033	0					
ANR	132753	ForStatement	for ( bandno = 0 ; bandno < numbands ; bandno ++ )		132033	23					
ANR	132754	ForInit	bandno = 0 ;	1890:13:87207:87217	132033	0	True				
ANR	132755	AssignmentExpression	bandno = 0		132033	0		=			
ANR	132756	Identifier	bandno		132033	0					
ANR	132757	PrimaryExpression	0		132033	1					
ANR	132758	Condition	bandno < numbands	1890:25:87219:87235	132033	1	True				
ANR	132759	RelationalExpression	bandno < numbands		132033	0		<			
ANR	132760	Identifier	bandno		132033	0					
ANR	132761	Identifier	numbands		132033	1					
ANR	132762	PostIncDecOperationExpression	bandno ++	1890:44:87238:87245	132033	2	True				
ANR	132763	Identifier	bandno		132033	0					
ANR	132764	IncDec	++		132033	1					
ANR	132765	CompoundStatement		160:54:7252:7252	132033	3					
ANR	132766	IfStatement	if ( tccp -> stepsizes [ bandno ] . expn == 0 && tccp -> stepsizes [ bandno ] . mant == 0 )		132033	0					
ANR	132767	Condition	tccp -> stepsizes [ bandno ] . expn == 0 && tccp -> stepsizes [ bandno ] . mant == 0	1891:16:87266:87335	132033	0	True				
ANR	132768	AndExpression	tccp -> stepsizes [ bandno ] . expn == 0 && tccp -> stepsizes [ bandno ] . mant == 0		132033	0		&&			
ANR	132769	EqualityExpression	tccp -> stepsizes [ bandno ] . expn == 0		132033	0		==			
ANR	132770	MemberAccess	tccp -> stepsizes [ bandno ] . expn		132033	0					
ANR	132771	ArrayIndexing	tccp -> stepsizes [ bandno ]		132033	0					
ANR	132772	PtrMemberAccess	tccp -> stepsizes		132033	0					
ANR	132773	Identifier	tccp		132033	0					
ANR	132774	Identifier	stepsizes		132033	1					
ANR	132775	Identifier	bandno		132033	1					
ANR	132776	Identifier	expn		132033	1					
ANR	132777	PrimaryExpression	0		132033	1					
ANR	132778	EqualityExpression	tccp -> stepsizes [ bandno ] . mant == 0		132033	1		==			
ANR	132779	MemberAccess	tccp -> stepsizes [ bandno ] . mant		132033	0					
ANR	132780	ArrayIndexing	tccp -> stepsizes [ bandno ]		132033	0					
ANR	132781	PtrMemberAccess	tccp -> stepsizes		132033	0					
ANR	132782	Identifier	tccp		132033	0					
ANR	132783	Identifier	stepsizes		132033	1					
ANR	132784	Identifier	bandno		132033	1					
ANR	132785	Identifier	mant		132033	1					
ANR	132786	PrimaryExpression	0		132033	1					
ANR	132787	CompoundStatement		161:88:7342:7342	132033	1					
ANR	132788	BreakStatement	break ;	1892:16:87356:87361	132033	0	True				
ANR	132789	ExpressionStatement	"fprintf ( xmlout , ""%s      <QuantizationValues Subband=\\""%d\\"">\\n"" , s , bandno )"	1895:12:87433:87509	132033	1	True				
ANR	132790	CallExpression	"fprintf ( xmlout , ""%s      <QuantizationValues Subband=\\""%d\\"">\\n"" , s , bandno )"		132033	0					
ANR	132791	Callee	fprintf		132033	0					
ANR	132792	Identifier	fprintf		132033	0					
ANR	132793	ArgumentList	xmlout		132033	1					
ANR	132794	Argument	xmlout		132033	0					
ANR	132795	Identifier	xmlout		132033	0					
ANR	132796	Argument	"""%s      <QuantizationValues Subband=\\""%d\\"">\\n"""		132033	1					
ANR	132797	PrimaryExpression	"""%s      <QuantizationValues Subband=\\""%d\\"">\\n"""		132033	0					
ANR	132798	Argument	s		132033	2					
ANR	132799	Identifier	s		132033	0					
ANR	132800	Argument	bandno		132033	3					
ANR	132801	Identifier	bandno		132033	0					
ANR	132802	IfStatement	if ( raw )		132033	2					
ANR	132803	Condition	raw	1896:16:87527:87529	132033	0	True				
ANR	132804	Identifier	raw		132033	0					
ANR	132805	CompoundStatement		166:21:7536:7536	132033	1					
ANR	132806	ExpressionStatement	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> stepsizes [ bandno ] . expn << 11 ) | tccp -> stepsizes [ bandno ] . mant )"	1897:16:87550:87698	132033	0	True				
ANR	132807	CallExpression	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> stepsizes [ bandno ] . expn << 11 ) | tccp -> stepsizes [ bandno ] . mant )"		132033	0					
ANR	132808	Callee	fprintf		132033	0					
ANR	132809	Identifier	fprintf		132033	0					
ANR	132810	ArgumentList	xmlout		132033	1					
ANR	132811	Argument	xmlout		132033	0					
ANR	132812	Identifier	xmlout		132033	0					
ANR	132813	Argument	"""%s        <AsHex>0x%02x</AsHex>\\n"""		132033	1					
ANR	132814	PrimaryExpression	"""%s        <AsHex>0x%02x</AsHex>\\n"""		132033	0					
ANR	132815	Argument	s		132033	2					
ANR	132816	Identifier	s		132033	0					
ANR	132817	Argument	( tccp -> stepsizes [ bandno ] . expn << 11 ) | tccp -> stepsizes [ bandno ] . mant		132033	3					
ANR	132818	InclusiveOrExpression	( tccp -> stepsizes [ bandno ] . expn << 11 ) | tccp -> stepsizes [ bandno ] . mant		132033	0		|			
ANR	132819	ShiftExpression	tccp -> stepsizes [ bandno ] . expn << 11		132033	0		<<			
ANR	132820	MemberAccess	tccp -> stepsizes [ bandno ] . expn		132033	0					
ANR	132821	ArrayIndexing	tccp -> stepsizes [ bandno ]		132033	0					
ANR	132822	PtrMemberAccess	tccp -> stepsizes		132033	0					
ANR	132823	Identifier	tccp		132033	0					
ANR	132824	Identifier	stepsizes		132033	1					
ANR	132825	Identifier	bandno		132033	1					
ANR	132826	Identifier	expn		132033	1					
ANR	132827	PrimaryExpression	11		132033	1					
ANR	132828	MemberAccess	tccp -> stepsizes [ bandno ] . mant		132033	1					
ANR	132829	ArrayIndexing	tccp -> stepsizes [ bandno ]		132033	0					
ANR	132830	PtrMemberAccess	tccp -> stepsizes		132033	0					
ANR	132831	Identifier	tccp		132033	0					
ANR	132832	Identifier	stepsizes		132033	1					
ANR	132833	Identifier	bandno		132033	1					
ANR	132834	Identifier	mant		132033	1					
ANR	132835	IfStatement	if ( derived )		132033	3					
ANR	132836	Condition	derived	1900:16:87730:87736	132033	0	True				
ANR	132837	Identifier	derived		132033	0					
ANR	132838	CompoundStatement		170:25:7743:7743	132033	1					
ANR	132839	ExpressionStatement	"fprintf ( xmlout , ""%s        <Exponent>%d</Exponent>\\n"" , s , tccp -> stepsizes [ bandno ] . expn )"	1901:16:87757:87868	132033	0	True				
ANR	132840	CallExpression	"fprintf ( xmlout , ""%s        <Exponent>%d</Exponent>\\n"" , s , tccp -> stepsizes [ bandno ] . expn )"		132033	0					
ANR	132841	Callee	fprintf		132033	0					
ANR	132842	Identifier	fprintf		132033	0					
ANR	132843	ArgumentList	xmlout		132033	1					
ANR	132844	Argument	xmlout		132033	0					
ANR	132845	Identifier	xmlout		132033	0					
ANR	132846	Argument	"""%s        <Exponent>%d</Exponent>\\n"""		132033	1					
ANR	132847	PrimaryExpression	"""%s        <Exponent>%d</Exponent>\\n"""		132033	0					
ANR	132848	Argument	s		132033	2					
ANR	132849	Identifier	s		132033	0					
ANR	132850	Argument	tccp -> stepsizes [ bandno ] . expn		132033	3					
ANR	132851	MemberAccess	tccp -> stepsizes [ bandno ] . expn		132033	0					
ANR	132852	ArrayIndexing	tccp -> stepsizes [ bandno ]		132033	0					
ANR	132853	PtrMemberAccess	tccp -> stepsizes		132033	0					
ANR	132854	Identifier	tccp		132033	0					
ANR	132855	Identifier	stepsizes		132033	1					
ANR	132856	Identifier	bandno		132033	1					
ANR	132857	Identifier	expn		132033	1					
ANR	132858	ExpressionStatement	"fprintf ( xmlout , ""%s        <Mantissa>%d</Mantissa>\\n"" , s , tccp -> stepsizes [ bandno ] . mant )"	1903:16:87886:87997	132033	1	True				
ANR	132859	CallExpression	"fprintf ( xmlout , ""%s        <Mantissa>%d</Mantissa>\\n"" , s , tccp -> stepsizes [ bandno ] . mant )"		132033	0					
ANR	132860	Callee	fprintf		132033	0					
ANR	132861	Identifier	fprintf		132033	0					
ANR	132862	ArgumentList	xmlout		132033	1					
ANR	132863	Argument	xmlout		132033	0					
ANR	132864	Identifier	xmlout		132033	0					
ANR	132865	Argument	"""%s        <Mantissa>%d</Mantissa>\\n"""		132033	1					
ANR	132866	PrimaryExpression	"""%s        <Mantissa>%d</Mantissa>\\n"""		132033	0					
ANR	132867	Argument	s		132033	2					
ANR	132868	Identifier	s		132033	0					
ANR	132869	Argument	tccp -> stepsizes [ bandno ] . mant		132033	3					
ANR	132870	MemberAccess	tccp -> stepsizes [ bandno ] . mant		132033	0					
ANR	132871	ArrayIndexing	tccp -> stepsizes [ bandno ]		132033	0					
ANR	132872	PtrMemberAccess	tccp -> stepsizes		132033	0					
ANR	132873	Identifier	tccp		132033	0					
ANR	132874	Identifier	stepsizes		132033	1					
ANR	132875	Identifier	bandno		132033	1					
ANR	132876	Identifier	mant		132033	1					
ANR	132877	ExpressionStatement	"fprintf ( xmlout , ""%s      </QuantizationValues>\\n"" , s )"	1906:12:88025:88079	132033	4	True				
ANR	132878	CallExpression	"fprintf ( xmlout , ""%s      </QuantizationValues>\\n"" , s )"		132033	0					
ANR	132879	Callee	fprintf		132033	0					
ANR	132880	Identifier	fprintf		132033	0					
ANR	132881	ArgumentList	xmlout		132033	1					
ANR	132882	Argument	xmlout		132033	0					
ANR	132883	Identifier	xmlout		132033	0					
ANR	132884	Argument	"""%s      </QuantizationValues>\\n"""		132033	1					
ANR	132885	PrimaryExpression	"""%s      </QuantizationValues>\\n"""		132033	0					
ANR	132886	Argument	s		132033	2					
ANR	132887	Identifier	s		132033	0					
ANR	132888	ExpressionStatement	"fprintf ( xmlout , ""%s    </QuantizationStepSizeValues>\\n"" , s )"	1908:8:88099:88161	132033	24	True				
ANR	132889	CallExpression	"fprintf ( xmlout , ""%s    </QuantizationStepSizeValues>\\n"" , s )"		132033	0					
ANR	132890	Callee	fprintf		132033	0					
ANR	132891	Identifier	fprintf		132033	0					
ANR	132892	ArgumentList	xmlout		132033	1					
ANR	132893	Argument	xmlout		132033	0					
ANR	132894	Identifier	xmlout		132033	0					
ANR	132895	Argument	"""%s    </QuantizationStepSizeValues>\\n"""		132033	1					
ANR	132896	PrimaryExpression	"""%s    </QuantizationStepSizeValues>\\n"""		132033	0					
ANR	132897	Argument	s		132033	2					
ANR	132898	Identifier	s		132033	0					
ANR	132899	BreakStatement	break ;	1909:8:88171:88176	132033	25	True				
ANR	132900	ExpressionStatement	"fprintf ( xmlout , ""%s  </SPqcd>\\n"" , s )"	1911:4:88201:88242	132033	17	True				
ANR	132901	CallExpression	"fprintf ( xmlout , ""%s  </SPqcd>\\n"" , s )"		132033	0					
ANR	132902	Callee	fprintf		132033	0					
ANR	132903	Identifier	fprintf		132033	0					
ANR	132904	ArgumentList	xmlout		132033	1					
ANR	132905	Argument	xmlout		132033	0					
ANR	132906	Identifier	xmlout		132033	0					
ANR	132907	Argument	"""%s  </SPqcd>\\n"""		132033	1					
ANR	132908	PrimaryExpression	"""%s  </SPqcd>\\n"""		132033	0					
ANR	132909	Argument	s		132033	2					
ANR	132910	Identifier	s		132033	0					
ANR	132911	ExpressionStatement	"fprintf ( xmlout , ""%s</QuantizationDefault>\\n"" , s )"	1912:4:88248:88301	132033	18	True				
ANR	132912	CallExpression	"fprintf ( xmlout , ""%s</QuantizationDefault>\\n"" , s )"		132033	0					
ANR	132913	Callee	fprintf		132033	0					
ANR	132914	Identifier	fprintf		132033	0					
ANR	132915	ArgumentList	xmlout		132033	1					
ANR	132916	Argument	xmlout		132033	0					
ANR	132917	Identifier	xmlout		132033	0					
ANR	132918	Argument	"""%s</QuantizationDefault>\\n"""		132033	1					
ANR	132919	PrimaryExpression	"""%s</QuantizationDefault>\\n"""		132033	0					
ANR	132920	Argument	s		132033	2					
ANR	132921	Identifier	s		132033	0					
ANR	132922	ReturnType	void		132033	1					
ANR	132923	Identifier	xml_out_frame_qcd		132033	2					
ANR	132924	ParameterList	"FILE * xmlout , opj_tcp_t * tcp"		132033	3					
ANR	132925	Parameter	FILE * xmlout	1730:23:79965:79976	132033	0	True				
ANR	132926	ParameterType	FILE *		132033	0					
ANR	132927	Identifier	xmlout		132033	1					
ANR	132928	Parameter	opj_tcp_t * tcp	1730:37:79979:79992	132033	1	True				
ANR	132929	ParameterType	opj_tcp_t *		132033	0					
ANR	132930	Identifier	tcp		132033	1					
ANR	132931	CFGEntryNode	ENTRY		132033		True				
ANR	132932	CFGExitNode	EXIT		132033		True				
ANR	132933	Symbol	notes		132033						
ANR	132934	Symbol	* tccp -> stepsizes		132033						
ANR	132935	Symbol	tccp -> stepsizes [ bandno ] . mant		132033						
ANR	132936	Symbol	* tcp		132033						
ANR	132937	Symbol	j2k_default_tcp		132033						
ANR	132938	Symbol	* bandno		132033						
ANR	132939	Symbol	tccp -> stepsizes [ 0 ] . expn		132033						
ANR	132940	Symbol	numbands		132033						
ANR	132941	Symbol	* * tccp		132033						
ANR	132942	Symbol	derived		132033						
ANR	132943	Symbol	J2K_MAXBANDS		132033						
ANR	132944	Symbol	tcp		132033						
ANR	132945	Symbol	tccp -> stepsizes [ bandno ] . expn		132033						
ANR	132946	Symbol	tcp -> tccps		132033						
ANR	132947	Symbol	tccp -> qntsty		132033						
ANR	132948	Symbol	raw		132033						
ANR	132949	Symbol	tccp		132033						
ANR	132950	Symbol	tccp -> stepsizes		132033						
ANR	132951	Symbol	tccp -> numgbits		132033						
ANR	132952	Symbol	xmlout		132033						
ANR	132953	Symbol	bandno		132033						
ANR	132954	Symbol	s		132033						
ANR	132955	Symbol	* tccp		132033						
ANR	132956	Symbol	spaces		132033						
ANR	132957	Symbol	tccp -> stepsizes [ 0 ] . mant		132033						
ANR	132958	Function	xml_out_frame_qcc	1919:0:88412:98427							
ANR	132959	FunctionDef	"xml_out_frame_qcc (FILE * xmlout , opj_tcp_t * tcp , int numcomps)"		132958	0					
ANR	132960	CompoundStatement		1920:0:88479:98427	132958	0					
ANR	132961	IdentifierDeclStatement	"opj_tccp_t * tccp , * firstcomp_tccp ;"	1923:4:88648:88681	132958	0	True				
ANR	132962	IdentifierDecl	* tccp		132958	0					
ANR	132963	IdentifierDeclType	opj_tccp_t *		132958	0					
ANR	132964	Identifier	tccp		132958	1					
ANR	132965	IdentifierDecl	* firstcomp_tccp		132958	1					
ANR	132966	IdentifierDeclType	opj_tccp_t *		132958	0					
ANR	132967	Identifier	firstcomp_tccp		132958	1					
ANR	132968	IdentifierDeclStatement	"int bandno , numbands ;"	1924:4:88687:88707	132958	1	True				
ANR	132969	IdentifierDecl	bandno		132958	0					
ANR	132970	IdentifierDeclType	int		132958	0					
ANR	132971	Identifier	bandno		132958	1					
ANR	132972	IdentifierDecl	numbands		132958	1					
ANR	132973	IdentifierDeclType	int		132958	0					
ANR	132974	Identifier	numbands		132958	1					
ANR	132975	IdentifierDeclStatement	int compno ;	1925:4:88713:88723	132958	2	True				
ANR	132976	IdentifierDecl	compno		132958	0					
ANR	132977	IdentifierDeclType	int		132958	0					
ANR	132978	Identifier	compno		132958	1					
ANR	132979	IdentifierDeclStatement	"char spaces [ 13 ] = ""            "" ;"	1926:4:88729:88761	132958	3	True				
ANR	132980	IdentifierDecl	"spaces [ 13 ] = ""            """		132958	0					
ANR	132981	IdentifierDeclType	char [ 13 ]		132958	0					
ANR	132982	Identifier	spaces		132958	1					
ANR	132983	PrimaryExpression	13		132958	2					
ANR	132984	AssignmentExpression	"spaces [ 13 ] = ""            """		132958	3		=			
ANR	132985	Identifier	spaces		132958	0					
ANR	132986	PrimaryExpression	"""            """		132958	1					
ANR	132987	IdentifierDeclStatement	char * s = spaces ;	1927:4:88794:88810	132958	4	True				
ANR	132988	IdentifierDecl	* s = spaces		132958	0					
ANR	132989	IdentifierDeclType	char *		132958	0					
ANR	132990	Identifier	s		132958	1					
ANR	132991	AssignmentExpression	* s = spaces		132958	2		=			
ANR	132992	Identifier	spaces		132958	0					
ANR	132993	Identifier	spaces		132958	1					
ANR	132994	IfStatement	if ( tcp == j2k_default_tcp )		132958	5					
ANR	132995	Condition	tcp == j2k_default_tcp	1928:8:88820:88841	132958	0	True				
ANR	132996	EqualityExpression	tcp == j2k_default_tcp		132958	0		==			
ANR	132997	Identifier	tcp		132958	0					
ANR	132998	Identifier	j2k_default_tcp		132958	1					
ANR	132999	CompoundStatement		9:32:364:364	132958	1					
ANR	133000	ExpressionStatement	s ++	1929:8:88854:88857	132958	0	True				
ANR	133001	PostIncDecOperationExpression	s ++		132958	0					
ANR	133002	Identifier	s		132958	0					
ANR	133003	IncDec	++		132958	1					
ANR	133004	ExpressionStatement	s ++	1930:8:88867:88870	132958	1	True				
ANR	133005	PostIncDecOperationExpression	s ++		132958	0					
ANR	133006	Identifier	s		132958	0					
ANR	133007	IncDec	++		132958	1					
ANR	133008	ExpressionStatement	firstcomp_tccp = & ( tcp -> tccps [ 0 ] )	1933:4:88920:88953	132958	6	True				
ANR	133009	AssignmentExpression	firstcomp_tccp = & ( tcp -> tccps [ 0 ] )		132958	0		=			
ANR	133010	Identifier	firstcomp_tccp		132958	0					
ANR	133011	UnaryOperationExpression	& ( tcp -> tccps [ 0 ] )		132958	1					
ANR	133012	UnaryOperator	&		132958	0					
ANR	133013	ArrayIndexing	tcp -> tccps [ 0 ]		132958	1					
ANR	133014	PtrMemberAccess	tcp -> tccps		132958	0					
ANR	133015	Identifier	tcp		132958	0					
ANR	133016	Identifier	tccps		132958	1					
ANR	133017	PrimaryExpression	0		132958	1					
ANR	133018	IfStatement	if ( notes )		132958	7					
ANR	133019	Condition	notes	1939:8:89291:89295	132958	0	True				
ANR	133020	Identifier	notes		132958	0					
ANR	133021	CompoundStatement		20:15:818:818	132958	1					
ANR	133022	ExpressionStatement	"fprintf ( xmlout , ""%s<!-- mj2_to_metadata implementation always reports component[0] as using default QCD, -->\\n"" , s )"	1940:8:89308:89455	132958	0	True				
ANR	133023	CallExpression	"fprintf ( xmlout , ""%s<!-- mj2_to_metadata implementation always reports component[0] as using default QCD, -->\\n"" , s )"		132958	0					
ANR	133024	Callee	fprintf		132958	0					
ANR	133025	Identifier	fprintf		132958	0					
ANR	133026	ArgumentList	xmlout		132958	1					
ANR	133027	Argument	xmlout		132958	0					
ANR	133028	Identifier	xmlout		132958	0					
ANR	133029	Argument	"""%s<!-- mj2_to_metadata implementation always reports component[0] as using default QCD, -->\\n"""		132958	1					
ANR	133030	PrimaryExpression	"""%s<!-- mj2_to_metadata implementation always reports component[0] as using default QCD, -->\\n"""		132958	0					
ANR	133031	Argument	s		132958	2					
ANR	133032	Identifier	s		132958	0					
ANR	133033	IfStatement	if ( tcp == j2k_default_tcp )		132958	1					
ANR	133034	Condition	tcp == j2k_default_tcp	1943:12:89469:89490	132958	0	True				
ANR	133035	EqualityExpression	tcp == j2k_default_tcp		132958	0		==			
ANR	133036	Identifier	tcp		132958	0					
ANR	133037	Identifier	j2k_default_tcp		132958	1					
ANR	133038	CompoundStatement		24:36:1013:1013	132958	1					
ANR	133039	ExpressionStatement	"fprintf ( xmlout , ""%s<!-- and any other component, with main-header quantization values different from [0], as QCC. -->\\n"" , s )"	1944:12:89507:89671	132958	0	True				
ANR	133040	CallExpression	"fprintf ( xmlout , ""%s<!-- and any other component, with main-header quantization values different from [0], as QCC. -->\\n"" , s )"		132958	0					
ANR	133041	Callee	fprintf		132958	0					
ANR	133042	Identifier	fprintf		132958	0					
ANR	133043	ArgumentList	xmlout		132958	1					
ANR	133044	Argument	xmlout		132958	0					
ANR	133045	Identifier	xmlout		132958	0					
ANR	133046	Argument	"""%s<!-- and any other component, with main-header quantization values different from [0], as QCC. -->\\n"""		132958	1					
ANR	133047	PrimaryExpression	"""%s<!-- and any other component, with main-header quantization values different from [0], as QCC. -->\\n"""		132958	0					
ANR	133048	Argument	s		132958	2					
ANR	133049	Identifier	s		132958	0					
ANR	133050	ElseStatement	else		132958	0					
ANR	133051	CompoundStatement		28:15:1208:1208	132958	0					
ANR	133052	ExpressionStatement	"fprintf ( xmlout , ""%s<!-- and any other component, with tile-part-header quantization values different from [0], as QCC. -->\\n"" , s )"	1948:12:89702:89871	132958	0	True				
ANR	133053	CallExpression	"fprintf ( xmlout , ""%s<!-- and any other component, with tile-part-header quantization values different from [0], as QCC. -->\\n"" , s )"		132958	0					
ANR	133054	Callee	fprintf		132958	0					
ANR	133055	Identifier	fprintf		132958	0					
ANR	133056	ArgumentList	xmlout		132958	1					
ANR	133057	Argument	xmlout		132958	0					
ANR	133058	Identifier	xmlout		132958	0					
ANR	133059	Argument	"""%s<!-- and any other component, with tile-part-header quantization values different from [0], as QCC. -->\\n"""		132958	1					
ANR	133060	PrimaryExpression	"""%s<!-- and any other component, with tile-part-header quantization values different from [0], as QCC. -->\\n"""		132958	0					
ANR	133061	Argument	s		132958	2					
ANR	133062	Identifier	s		132958	0					
ANR	133063	ForStatement	for ( compno = 1 ; compno < numcomps ; compno ++ )		132958	8					
ANR	133064	ForInit	compno = 1 ;	1953:9:89898:89908	132958	0	True				
ANR	133065	AssignmentExpression	compno = 1		132958	0		=			
ANR	133066	Identifier	compno		132958	0					
ANR	133067	PrimaryExpression	1		132958	1					
ANR	133068	Condition	compno < numcomps	1953:21:89910:89926	132958	1	True				
ANR	133069	RelationalExpression	compno < numcomps		132958	0		<			
ANR	133070	Identifier	compno		132958	0					
ANR	133071	Identifier	numcomps		132958	1					
ANR	133072	PostIncDecOperationExpression	compno ++	1954:12:89941:89948	132958	2	True				
ANR	133073	Identifier	compno		132958	0					
ANR	133074	IncDec	++		132958	1					
ANR	133075	CompoundStatement		35:22:1471:1471	132958	3					
ANR	133076	ExpressionStatement	tccp = & ( tcp -> tccps [ compno ] )	1955:8:90003:90031	132958	0	True				
ANR	133077	AssignmentExpression	tccp = & ( tcp -> tccps [ compno ] )		132958	0		=			
ANR	133078	Identifier	tccp		132958	0					
ANR	133079	UnaryOperationExpression	& ( tcp -> tccps [ compno ] )		132958	1					
ANR	133080	UnaryOperator	&		132958	0					
ANR	133081	ArrayIndexing	tcp -> tccps [ compno ]		132958	1					
ANR	133082	PtrMemberAccess	tcp -> tccps		132958	0					
ANR	133083	Identifier	tcp		132958	0					
ANR	133084	Identifier	tccps		132958	1					
ANR	133085	Identifier	compno		132958	1					
ANR	133086	IfStatement	"if ( same_component_quantization ( firstcomp_tccp , tccp ) )"		132958	1					
ANR	133087	Condition	"same_component_quantization ( firstcomp_tccp , tccp )"	1956:12:90045:90093	132958	0	True				
ANR	133088	CallExpression	"same_component_quantization ( firstcomp_tccp , tccp )"		132958	0					
ANR	133089	Callee	same_component_quantization		132958	0					
ANR	133090	Identifier	same_component_quantization		132958	0					
ANR	133091	ArgumentList	firstcomp_tccp		132958	1					
ANR	133092	Argument	firstcomp_tccp		132958	0					
ANR	133093	Identifier	firstcomp_tccp		132958	0					
ANR	133094	Argument	tccp		132958	1					
ANR	133095	Identifier	tccp		132958	0					
ANR	133096	CompoundStatement		37:63:1616:1616	132958	1					
ANR	133097	ContinueStatement	continue ;	1957:12:90110:90118	132958	0	True				
ANR	133098	ExpressionStatement	"fprintf ( xmlout , ""%s<QuantizationComponent Marker=\\""QCC\\"" Component=\\""%d\\"">\\n"" , s , compno )"	1961:8:90174:90295	132958	2	True				
ANR	133099	CallExpression	"fprintf ( xmlout , ""%s<QuantizationComponent Marker=\\""QCC\\"" Component=\\""%d\\"">\\n"" , s , compno )"		132958	0					
ANR	133100	Callee	fprintf		132958	0					
ANR	133101	Identifier	fprintf		132958	0					
ANR	133102	ArgumentList	xmlout		132958	1					
ANR	133103	Argument	xmlout		132958	0					
ANR	133104	Identifier	xmlout		132958	0					
ANR	133105	Argument	"""%s<QuantizationComponent Marker=\\""QCC\\"" Component=\\""%d\\"">\\n"""		132958	1					
ANR	133106	PrimaryExpression	"""%s<QuantizationComponent Marker=\\""QCC\\"" Component=\\""%d\\"">\\n"""		132958	0					
ANR	133107	Argument	s		132958	2					
ANR	133108	Identifier	s		132958	0					
ANR	133109	Argument	compno		132958	3					
ANR	133110	Identifier	compno		132958	0					
ANR	133111	ExpressionStatement	tccp = & j2k_default_tcp -> tccps [ 0 ]	1964:8:90354:90387	132958	3	True				
ANR	133112	AssignmentExpression	tccp = & j2k_default_tcp -> tccps [ 0 ]		132958	0		=			
ANR	133113	Identifier	tccp		132958	0					
ANR	133114	UnaryOperationExpression	& j2k_default_tcp -> tccps [ 0 ]		132958	1					
ANR	133115	UnaryOperator	&		132958	0					
ANR	133116	ArrayIndexing	j2k_default_tcp -> tccps [ 0 ]		132958	1					
ANR	133117	PtrMemberAccess	j2k_default_tcp -> tccps		132958	0					
ANR	133118	Identifier	j2k_default_tcp		132958	0					
ANR	133119	Identifier	tccps		132958	1					
ANR	133120	PrimaryExpression	0		132958	1					
ANR	133121	ExpressionStatement	"fprintf ( xmlout , ""%s  <Sqcc>\\n"" , s )"	1966:8:90484:90523	132958	4	True				
ANR	133122	CallExpression	"fprintf ( xmlout , ""%s  <Sqcc>\\n"" , s )"		132958	0					
ANR	133123	Callee	fprintf		132958	0					
ANR	133124	Identifier	fprintf		132958	0					
ANR	133125	ArgumentList	xmlout		132958	1					
ANR	133126	Argument	xmlout		132958	0					
ANR	133127	Identifier	xmlout		132958	0					
ANR	133128	Argument	"""%s  <Sqcc>\\n"""		132958	1					
ANR	133129	PrimaryExpression	"""%s  <Sqcc>\\n"""		132958	0					
ANR	133130	Argument	s		132958	2					
ANR	133131	Identifier	s		132958	0					
ANR	133132	IfStatement	if ( notes )		132958	5					
ANR	133133	Condition	notes	1967:12:90557:90561	132958	0	True				
ANR	133134	Identifier	notes		132958	0					
ANR	133135	CompoundStatement		48:19:2084:2084	132958	1					
ANR	133136	ExpressionStatement	"fprintf ( xmlout , ""%s  <!-- Quantization style for this component. -->\\n"" , s )"	1968:12:90578:90656	132958	0	True				
ANR	133137	CallExpression	"fprintf ( xmlout , ""%s  <!-- Quantization style for this component. -->\\n"" , s )"		132958	0					
ANR	133138	Callee	fprintf		132958	0					
ANR	133139	Identifier	fprintf		132958	0					
ANR	133140	ArgumentList	xmlout		132958	1					
ANR	133141	Argument	xmlout		132958	0					
ANR	133142	Identifier	xmlout		132958	0					
ANR	133143	Argument	"""%s  <!-- Quantization style for this component. -->\\n"""		132958	1					
ANR	133144	PrimaryExpression	"""%s  <!-- Quantization style for this component. -->\\n"""		132958	0					
ANR	133145	Argument	s		132958	2					
ANR	133146	Identifier	s		132958	0					
ANR	133147	IfStatement	if ( raw )		132958	6					
ANR	133148	Condition	raw	1970:12:90680:90682	132958	0	True				
ANR	133149	Identifier	raw		132958	0					
ANR	133150	CompoundStatement		51:17:2205:2205	132958	1					
ANR	133151	ExpressionStatement	"fprintf ( xmlout , ""%s    <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> numgbits ) << 5 | tccp -> qntsty )"	1971:12:90699:90811	132958	0	True				
ANR	133152	CallExpression	"fprintf ( xmlout , ""%s    <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> numgbits ) << 5 | tccp -> qntsty )"		132958	0					
ANR	133153	Callee	fprintf		132958	0					
ANR	133154	Identifier	fprintf		132958	0					
ANR	133155	ArgumentList	xmlout		132958	1					
ANR	133156	Argument	xmlout		132958	0					
ANR	133157	Identifier	xmlout		132958	0					
ANR	133158	Argument	"""%s    <AsHex>0x%02x</AsHex>\\n"""		132958	1					
ANR	133159	PrimaryExpression	"""%s    <AsHex>0x%02x</AsHex>\\n"""		132958	0					
ANR	133160	Argument	s		132958	2					
ANR	133161	Identifier	s		132958	0					
ANR	133162	Argument	( tccp -> numgbits ) << 5 | tccp -> qntsty		132958	3					
ANR	133163	InclusiveOrExpression	( tccp -> numgbits ) << 5 | tccp -> qntsty		132958	0		|			
ANR	133164	ShiftExpression	( tccp -> numgbits ) << 5		132958	0		<<			
ANR	133165	PtrMemberAccess	tccp -> numgbits		132958	0					
ANR	133166	Identifier	tccp		132958	0					
ANR	133167	Identifier	numgbits		132958	1					
ANR	133168	PrimaryExpression	5		132958	1					
ANR	133169	PtrMemberAccess	tccp -> qntsty		132958	1					
ANR	133170	Identifier	tccp		132958	0					
ANR	133171	Identifier	qntsty		132958	1					
ANR	133172	IfStatement	if ( derived )		132958	7					
ANR	133173	Condition	derived	1974:12:90835:90841	132958	0	True				
ANR	133174	Identifier	derived		132958	0					
ANR	133175	CompoundStatement		55:21:2364:2364	132958	1					
ANR	133176	ExpressionStatement	"fprintf ( xmlout , ""%s    <QuantizationStyle>%d</QuantizationStyle>\\n"" , s , tccp -> qntsty )"	1975:12:90858:90966	132958	0	True				
ANR	133177	CallExpression	"fprintf ( xmlout , ""%s    <QuantizationStyle>%d</QuantizationStyle>\\n"" , s , tccp -> qntsty )"		132958	0					
ANR	133178	Callee	fprintf		132958	0					
ANR	133179	Identifier	fprintf		132958	0					
ANR	133180	ArgumentList	xmlout		132958	1					
ANR	133181	Argument	xmlout		132958	0					
ANR	133182	Identifier	xmlout		132958	0					
ANR	133183	Argument	"""%s    <QuantizationStyle>%d</QuantizationStyle>\\n"""		132958	1					
ANR	133184	PrimaryExpression	"""%s    <QuantizationStyle>%d</QuantizationStyle>\\n"""		132958	0					
ANR	133185	Argument	s		132958	2					
ANR	133186	Identifier	s		132958	0					
ANR	133187	Argument	tccp -> qntsty		132958	3					
ANR	133188	PtrMemberAccess	tccp -> qntsty		132958	0					
ANR	133189	Identifier	tccp		132958	0					
ANR	133190	Identifier	qntsty		132958	1					
ANR	133191	IfStatement	if ( notes )		132958	8					
ANR	133192	Condition	notes	1978:12:90990:90994	132958	0	True				
ANR	133193	Identifier	notes		132958	0					
ANR	133194	CompoundStatement		59:19:2517:2517	132958	1					
ANR	133195	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Quantization style (in Sqcc's low 5 bits) may be: -->\\n"" , s )"	1979:12:91011:91119	132958	0	True				
ANR	133196	CallExpression	"fprintf ( xmlout , ""%s    <!-- Quantization style (in Sqcc's low 5 bits) may be: -->\\n"" , s )"		132958	0					
ANR	133197	Callee	fprintf		132958	0					
ANR	133198	Identifier	fprintf		132958	0					
ANR	133199	ArgumentList	xmlout		132958	1					
ANR	133200	Argument	xmlout		132958	0					
ANR	133201	Identifier	xmlout		132958	0					
ANR	133202	Argument	"""%s    <!-- Quantization style (in Sqcc's low 5 bits) may be: -->\\n"""		132958	1					
ANR	133203	PrimaryExpression	"""%s    <!-- Quantization style (in Sqcc's low 5 bits) may be: -->\\n"""		132958	0					
ANR	133204	Argument	s		132958	2					
ANR	133205	Identifier	s		132958	0					
ANR	133206	ExpressionStatement	"fprintf ( xmlout , ""%s    <!--   0 = No quantization. SPqcc size = 8 bits-->\\n"" , s )"	1981:12:91133:91236	132958	1	True				
ANR	133207	CallExpression	"fprintf ( xmlout , ""%s    <!--   0 = No quantization. SPqcc size = 8 bits-->\\n"" , s )"		132958	0					
ANR	133208	Callee	fprintf		132958	0					
ANR	133209	Identifier	fprintf		132958	0					
ANR	133210	ArgumentList	xmlout		132958	1					
ANR	133211	Argument	xmlout		132958	0					
ANR	133212	Identifier	xmlout		132958	0					
ANR	133213	Argument	"""%s    <!--   0 = No quantization. SPqcc size = 8 bits-->\\n"""		132958	1					
ANR	133214	PrimaryExpression	"""%s    <!--   0 = No quantization. SPqcc size = 8 bits-->\\n"""		132958	0					
ANR	133215	Argument	s		132958	2					
ANR	133216	Identifier	s		132958	0					
ANR	133217	ExpressionStatement	"fprintf ( xmlout , ""%s    <!--   1 = Scalar derived (values signaled for N(L)LL subband only). Use Eq. E.5. SPqcc size = 16. -->\\n"" , s )"	1983:12:91250:91422	132958	2	True				
ANR	133218	CallExpression	"fprintf ( xmlout , ""%s    <!--   1 = Scalar derived (values signaled for N(L)LL subband only). Use Eq. E.5. SPqcc size = 16. -->\\n"" , s )"		132958	0					
ANR	133219	Callee	fprintf		132958	0					
ANR	133220	Identifier	fprintf		132958	0					
ANR	133221	ArgumentList	xmlout		132958	1					
ANR	133222	Argument	xmlout		132958	0					
ANR	133223	Identifier	xmlout		132958	0					
ANR	133224	Argument	"""%s    <!--   1 = Scalar derived (values signaled for N(L)LL subband only). Use Eq. E.5. SPqcc size = 16. -->\\n"""		132958	1					
ANR	133225	PrimaryExpression	"""%s    <!--   1 = Scalar derived (values signaled for N(L)LL subband only). Use Eq. E.5. SPqcc size = 16. -->\\n"""		132958	0					
ANR	133226	Argument	s		132958	2					
ANR	133227	Identifier	s		132958	0					
ANR	133228	ExpressionStatement	"fprintf ( xmlout , ""%s    <!--   2 = Scalar expounded (values signaled for each subband). SPqcc size = 16. -->\\n"" , s )"	1986:12:91436:91590	132958	3	True				
ANR	133229	CallExpression	"fprintf ( xmlout , ""%s    <!--   2 = Scalar expounded (values signaled for each subband). SPqcc size = 16. -->\\n"" , s )"		132958	0					
ANR	133230	Callee	fprintf		132958	0					
ANR	133231	Identifier	fprintf		132958	0					
ANR	133232	ArgumentList	xmlout		132958	1					
ANR	133233	Argument	xmlout		132958	0					
ANR	133234	Identifier	xmlout		132958	0					
ANR	133235	Argument	"""%s    <!--   2 = Scalar expounded (values signaled for each subband). SPqcc size = 16. -->\\n"""		132958	1					
ANR	133236	PrimaryExpression	"""%s    <!--   2 = Scalar expounded (values signaled for each subband). SPqcc size = 16. -->\\n"""		132958	0					
ANR	133237	Argument	s		132958	2					
ANR	133238	Identifier	s		132958	0					
ANR	133239	IfStatement	if ( derived )		132958	9					
ANR	133240	Condition	derived	1990:12:91614:91620	132958	0	True				
ANR	133241	Identifier	derived		132958	0					
ANR	133242	CompoundStatement		71:21:3143:3143	132958	1					
ANR	133243	ExpressionStatement	"fprintf ( xmlout , ""%s    <NumberOfGuardBits>%d</NumberOfGuardBits>\\n"" , s , tccp -> numgbits )"	1991:12:91637:91747	132958	0	True				
ANR	133244	CallExpression	"fprintf ( xmlout , ""%s    <NumberOfGuardBits>%d</NumberOfGuardBits>\\n"" , s , tccp -> numgbits )"		132958	0					
ANR	133245	Callee	fprintf		132958	0					
ANR	133246	Identifier	fprintf		132958	0					
ANR	133247	ArgumentList	xmlout		132958	1					
ANR	133248	Argument	xmlout		132958	0					
ANR	133249	Identifier	xmlout		132958	0					
ANR	133250	Argument	"""%s    <NumberOfGuardBits>%d</NumberOfGuardBits>\\n"""		132958	1					
ANR	133251	PrimaryExpression	"""%s    <NumberOfGuardBits>%d</NumberOfGuardBits>\\n"""		132958	0					
ANR	133252	Argument	s		132958	2					
ANR	133253	Identifier	s		132958	0					
ANR	133254	Argument	tccp -> numgbits		132958	3					
ANR	133255	PtrMemberAccess	tccp -> numgbits		132958	0					
ANR	133256	Identifier	tccp		132958	0					
ANR	133257	Identifier	numgbits		132958	1					
ANR	133258	IfStatement	if ( notes )		132958	10					
ANR	133259	Condition	notes	1994:12:91771:91775	132958	0	True				
ANR	133260	Identifier	notes		132958	0					
ANR	133261	CompoundStatement		75:19:3298:3298	132958	1					
ANR	133262	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- 0-7 guard bits allowed (stored in Sqcc's high 3 bits) -->\\n"" , s )"	1995:12:91792:91904	132958	0	True				
ANR	133263	CallExpression	"fprintf ( xmlout , ""%s    <!-- 0-7 guard bits allowed (stored in Sqcc's high 3 bits) -->\\n"" , s )"		132958	0					
ANR	133264	Callee	fprintf		132958	0					
ANR	133265	Identifier	fprintf		132958	0					
ANR	133266	ArgumentList	xmlout		132958	1					
ANR	133267	Argument	xmlout		132958	0					
ANR	133268	Identifier	xmlout		132958	0					
ANR	133269	Argument	"""%s    <!-- 0-7 guard bits allowed (stored in Sqcc's high 3 bits) -->\\n"""		132958	1					
ANR	133270	PrimaryExpression	"""%s    <!-- 0-7 guard bits allowed (stored in Sqcc's high 3 bits) -->\\n"""		132958	0					
ANR	133271	Argument	s		132958	2					
ANR	133272	Identifier	s		132958	0					
ANR	133273	ExpressionStatement	"fprintf ( xmlout , ""%s  </Sqcc>\\n"" , s )"	1998:8:91924:91964	132958	11	True				
ANR	133274	CallExpression	"fprintf ( xmlout , ""%s  </Sqcc>\\n"" , s )"		132958	0					
ANR	133275	Callee	fprintf		132958	0					
ANR	133276	Identifier	fprintf		132958	0					
ANR	133277	ArgumentList	xmlout		132958	1					
ANR	133278	Argument	xmlout		132958	0					
ANR	133279	Identifier	xmlout		132958	0					
ANR	133280	Argument	"""%s  </Sqcc>\\n"""		132958	1					
ANR	133281	PrimaryExpression	"""%s  </Sqcc>\\n"""		132958	0					
ANR	133282	Argument	s		132958	2					
ANR	133283	Identifier	s		132958	0					
ANR	133284	ExpressionStatement	"fprintf ( xmlout , ""%s  <SPqcc>\\n"" , s )"	2002:8:92151:92191	132958	12	True				
ANR	133285	CallExpression	"fprintf ( xmlout , ""%s  <SPqcc>\\n"" , s )"		132958	0					
ANR	133286	Callee	fprintf		132958	0					
ANR	133287	Identifier	fprintf		132958	0					
ANR	133288	ArgumentList	xmlout		132958	1					
ANR	133289	Argument	xmlout		132958	0					
ANR	133290	Identifier	xmlout		132958	0					
ANR	133291	Argument	"""%s  <SPqcc>\\n"""		132958	1					
ANR	133292	PrimaryExpression	"""%s  <SPqcc>\\n"""		132958	0					
ANR	133293	Argument	s		132958	2					
ANR	133294	Identifier	s		132958	0					
ANR	133295	SwitchStatement	switch ( tccp -> qntsty )		132958	13					
ANR	133296	Condition	tccp -> qntsty	2003:16:92209:92220	132958	0	True				
ANR	133297	PtrMemberAccess	tccp -> qntsty		132958	0					
ANR	133298	Identifier	tccp		132958	0					
ANR	133299	Identifier	qntsty		132958	1					
ANR	133300	CompoundStatement		84:30:3743:3743	132958	1					
ANR	133301	Label	case J2K_CCP_QNTSTY_NOQNT :	2004:8:92233:92258	132958	0	True				
ANR	133302	Identifier	J2K_CCP_QNTSTY_NOQNT		132958	0					
ANR	133303	ExpressionStatement	numbands = J2K_MAXBANDS	2005:12:92272:92295	132958	1	True				
ANR	133304	AssignmentExpression	numbands = J2K_MAXBANDS		132958	0		=			
ANR	133305	Identifier	numbands		132958	0					
ANR	133306	Identifier	J2K_MAXBANDS		132958	1					
ANR	133307	ExpressionStatement	"fprintf ( xmlout , ""%s    <ReversibleStepSizeValue>\\n"" , s )"	2009:12:92496:92554	132958	2	True				
ANR	133308	CallExpression	"fprintf ( xmlout , ""%s    <ReversibleStepSizeValue>\\n"" , s )"		132958	0					
ANR	133309	Callee	fprintf		132958	0					
ANR	133310	Identifier	fprintf		132958	0					
ANR	133311	ArgumentList	xmlout		132958	1					
ANR	133312	Argument	xmlout		132958	0					
ANR	133313	Identifier	xmlout		132958	0					
ANR	133314	Argument	"""%s    <ReversibleStepSizeValue>\\n"""		132958	1					
ANR	133315	PrimaryExpression	"""%s    <ReversibleStepSizeValue>\\n"""		132958	0					
ANR	133316	Argument	s		132958	2					
ANR	133317	Identifier	s		132958	0					
ANR	133318	IfStatement	if ( notes )		132958	3					
ANR	133319	Condition	notes	2010:16:92572:92576	132958	0	True				
ANR	133320	Identifier	notes		132958	0					
ANR	133321	CompoundStatement		91:23:4099:4099	132958	1					
ANR	133322	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"" , s )"	2011:16:92597:92751	132958	0	True				
ANR	133323	CallExpression	"fprintf ( xmlout , ""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"" , s )"		132958	0					
ANR	133324	Callee	fprintf		132958	0					
ANR	133325	Identifier	fprintf		132958	0					
ANR	133326	ArgumentList	xmlout		132958	1					
ANR	133327	Argument	xmlout		132958	0					
ANR	133328	Identifier	xmlout		132958	0					
ANR	133329	Argument	"""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"""		132958	1					
ANR	133330	PrimaryExpression	"""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"""		132958	0					
ANR	133331	Argument	s		132958	2					
ANR	133332	Identifier	s		132958	0					
ANR	133333	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- until an exponent with zero value is reached. -->\\n"" , s )"	2014:16:92769:92877	132958	1	True				
ANR	133334	CallExpression	"fprintf ( xmlout , ""%s    <!-- until an exponent with zero value is reached. -->\\n"" , s )"		132958	0					
ANR	133335	Callee	fprintf		132958	0					
ANR	133336	Identifier	fprintf		132958	0					
ANR	133337	ArgumentList	xmlout		132958	1					
ANR	133338	Argument	xmlout		132958	0					
ANR	133339	Identifier	xmlout		132958	0					
ANR	133340	Argument	"""%s    <!-- until an exponent with zero value is reached. -->\\n"""		132958	1					
ANR	133341	PrimaryExpression	"""%s    <!-- until an exponent with zero value is reached. -->\\n"""		132958	0					
ANR	133342	Argument	s		132958	2					
ANR	133343	Identifier	s		132958	0					
ANR	133344	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Exponent epsilon(b) of reversible dynamic range. -->\\n"" , s )"	2016:16:92895:93006	132958	2	True				
ANR	133345	CallExpression	"fprintf ( xmlout , ""%s    <!-- Exponent epsilon(b) of reversible dynamic range. -->\\n"" , s )"		132958	0					
ANR	133346	Callee	fprintf		132958	0					
ANR	133347	Identifier	fprintf		132958	0					
ANR	133348	ArgumentList	xmlout		132958	1					
ANR	133349	Argument	xmlout		132958	0					
ANR	133350	Identifier	xmlout		132958	0					
ANR	133351	Argument	"""%s    <!-- Exponent epsilon(b) of reversible dynamic range. -->\\n"""		132958	1					
ANR	133352	PrimaryExpression	"""%s    <!-- Exponent epsilon(b) of reversible dynamic range. -->\\n"""		132958	0					
ANR	133353	Argument	s		132958	2					
ANR	133354	Identifier	s		132958	0					
ANR	133355	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Hex value is as stored, in high-order 5 bits. -->\\n"" , s )"	2018:16:93024:93132	132958	3	True				
ANR	133356	CallExpression	"fprintf ( xmlout , ""%s    <!-- Hex value is as stored, in high-order 5 bits. -->\\n"" , s )"		132958	0					
ANR	133357	Callee	fprintf		132958	0					
ANR	133358	Identifier	fprintf		132958	0					
ANR	133359	ArgumentList	xmlout		132958	1					
ANR	133360	Argument	xmlout		132958	0					
ANR	133361	Identifier	xmlout		132958	0					
ANR	133362	Argument	"""%s    <!-- Hex value is as stored, in high-order 5 bits. -->\\n"""		132958	1					
ANR	133363	PrimaryExpression	"""%s    <!-- Hex value is as stored, in high-order 5 bits. -->\\n"""		132958	0					
ANR	133364	Argument	s		132958	2					
ANR	133365	Identifier	s		132958	0					
ANR	133366	ForStatement	for ( bandno = 0 ; bandno < numbands ; bandno ++ )		132958	4					
ANR	133367	ForInit	bandno = 0 ;	2021:17:93165:93175	132958	0	True				
ANR	133368	AssignmentExpression	bandno = 0		132958	0		=			
ANR	133369	Identifier	bandno		132958	0					
ANR	133370	PrimaryExpression	0		132958	1					
ANR	133371	Condition	bandno < numbands	2021:29:93177:93193	132958	1	True				
ANR	133372	RelationalExpression	bandno < numbands		132958	0		<			
ANR	133373	Identifier	bandno		132958	0					
ANR	133374	Identifier	numbands		132958	1					
ANR	133375	PostIncDecOperationExpression	bandno ++	2021:48:93196:93203	132958	2	True				
ANR	133376	Identifier	bandno		132958	0					
ANR	133377	IncDec	++		132958	1					
ANR	133378	CompoundStatement		102:58:4726:4726	132958	3					
ANR	133379	IfStatement	if ( tccp -> stepsizes [ bandno ] . expn == 0 )		132958	0					
ANR	133380	Condition	tccp -> stepsizes [ bandno ] . expn == 0	2022:20:93228:93260	132958	0	True				
ANR	133381	EqualityExpression	tccp -> stepsizes [ bandno ] . expn == 0		132958	0		==			
ANR	133382	MemberAccess	tccp -> stepsizes [ bandno ] . expn		132958	0					
ANR	133383	ArrayIndexing	tccp -> stepsizes [ bandno ]		132958	0					
ANR	133384	PtrMemberAccess	tccp -> stepsizes		132958	0					
ANR	133385	Identifier	tccp		132958	0					
ANR	133386	Identifier	stepsizes		132958	1					
ANR	133387	Identifier	bandno		132958	1					
ANR	133388	Identifier	expn		132958	1					
ANR	133389	PrimaryExpression	0		132958	1					
ANR	133390	CompoundStatement		103:55:4783:4783	132958	1					
ANR	133391	BreakStatement	break ;	2023:20:93285:93290	132958	0	True				
ANR	133392	ExpressionStatement	"fprintf ( xmlout , ""%s      <Exponent Subband=\\""%d\\"">\\n"" , s , bandno )"	2025:16:93374:93440	132958	1	True				
ANR	133393	CallExpression	"fprintf ( xmlout , ""%s      <Exponent Subband=\\""%d\\"">\\n"" , s , bandno )"		132958	0					
ANR	133394	Callee	fprintf		132958	0					
ANR	133395	Identifier	fprintf		132958	0					
ANR	133396	ArgumentList	xmlout		132958	1					
ANR	133397	Argument	xmlout		132958	0					
ANR	133398	Identifier	xmlout		132958	0					
ANR	133399	Argument	"""%s      <Exponent Subband=\\""%d\\"">\\n"""		132958	1					
ANR	133400	PrimaryExpression	"""%s      <Exponent Subband=\\""%d\\"">\\n"""		132958	0					
ANR	133401	Argument	s		132958	2					
ANR	133402	Identifier	s		132958	0					
ANR	133403	Argument	bandno		132958	3					
ANR	133404	Identifier	bandno		132958	0					
ANR	133405	IfStatement	if ( raw )		132958	2					
ANR	133406	Condition	raw	2026:20:93462:93464	132958	0	True				
ANR	133407	Identifier	raw		132958	0					
ANR	133408	CompoundStatement		107:25:4987:4987	132958	1					
ANR	133409	ExpressionStatement	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , tccp -> stepsizes [ bandno ] . expn << 3 )"	2027:20:93489:93607	132958	0	True				
ANR	133410	CallExpression	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , tccp -> stepsizes [ bandno ] . expn << 3 )"		132958	0					
ANR	133411	Callee	fprintf		132958	0					
ANR	133412	Identifier	fprintf		132958	0					
ANR	133413	ArgumentList	xmlout		132958	1					
ANR	133414	Argument	xmlout		132958	0					
ANR	133415	Identifier	xmlout		132958	0					
ANR	133416	Argument	"""%s        <AsHex>0x%02x</AsHex>\\n"""		132958	1					
ANR	133417	PrimaryExpression	"""%s        <AsHex>0x%02x</AsHex>\\n"""		132958	0					
ANR	133418	Argument	s		132958	2					
ANR	133419	Identifier	s		132958	0					
ANR	133420	Argument	tccp -> stepsizes [ bandno ] . expn << 3		132958	3					
ANR	133421	ShiftExpression	tccp -> stepsizes [ bandno ] . expn << 3		132958	0		<<			
ANR	133422	MemberAccess	tccp -> stepsizes [ bandno ] . expn		132958	0					
ANR	133423	ArrayIndexing	tccp -> stepsizes [ bandno ]		132958	0					
ANR	133424	PtrMemberAccess	tccp -> stepsizes		132958	0					
ANR	133425	Identifier	tccp		132958	0					
ANR	133426	Identifier	stepsizes		132958	1					
ANR	133427	Identifier	bandno		132958	1					
ANR	133428	Identifier	expn		132958	1					
ANR	133429	PrimaryExpression	3		132958	1					
ANR	133430	IfStatement	if ( derived )		132958	3					
ANR	133431	Condition	derived	2030:20:93647:93653	132958	0	True				
ANR	133432	Identifier	derived		132958	0					
ANR	133433	CompoundStatement		111:29:5176:5176	132958	1					
ANR	133434	ExpressionStatement	"fprintf ( xmlout , ""%s        <AsDecimal>%d</AsDecimal>\\n"" , s , tccp -> stepsizes [ bandno ] . expn )"	2031:20:93678:93795	132958	0	True				
ANR	133435	CallExpression	"fprintf ( xmlout , ""%s        <AsDecimal>%d</AsDecimal>\\n"" , s , tccp -> stepsizes [ bandno ] . expn )"		132958	0					
ANR	133436	Callee	fprintf		132958	0					
ANR	133437	Identifier	fprintf		132958	0					
ANR	133438	ArgumentList	xmlout		132958	1					
ANR	133439	Argument	xmlout		132958	0					
ANR	133440	Identifier	xmlout		132958	0					
ANR	133441	Argument	"""%s        <AsDecimal>%d</AsDecimal>\\n"""		132958	1					
ANR	133442	PrimaryExpression	"""%s        <AsDecimal>%d</AsDecimal>\\n"""		132958	0					
ANR	133443	Argument	s		132958	2					
ANR	133444	Identifier	s		132958	0					
ANR	133445	Argument	tccp -> stepsizes [ bandno ] . expn		132958	3					
ANR	133446	MemberAccess	tccp -> stepsizes [ bandno ] . expn		132958	0					
ANR	133447	ArrayIndexing	tccp -> stepsizes [ bandno ]		132958	0					
ANR	133448	PtrMemberAccess	tccp -> stepsizes		132958	0					
ANR	133449	Identifier	tccp		132958	0					
ANR	133450	Identifier	stepsizes		132958	1					
ANR	133451	Identifier	bandno		132958	1					
ANR	133452	Identifier	expn		132958	1					
ANR	133453	ExpressionStatement	"fprintf ( xmlout , ""%s      </Exponent>\\n"" , s )"	2034:16:93831:93875	132958	4	True				
ANR	133454	CallExpression	"fprintf ( xmlout , ""%s      </Exponent>\\n"" , s )"		132958	0					
ANR	133455	Callee	fprintf		132958	0					
ANR	133456	Identifier	fprintf		132958	0					
ANR	133457	ArgumentList	xmlout		132958	1					
ANR	133458	Argument	xmlout		132958	0					
ANR	133459	Identifier	xmlout		132958	0					
ANR	133460	Argument	"""%s      </Exponent>\\n"""		132958	1					
ANR	133461	PrimaryExpression	"""%s      </Exponent>\\n"""		132958	0					
ANR	133462	Argument	s		132958	2					
ANR	133463	Identifier	s		132958	0					
ANR	133464	ExpressionStatement	"fprintf ( xmlout , ""%s    </ReversibleStepSizeValue>\\n"" , s )"	2036:12:93903:93962	132958	5	True				
ANR	133465	CallExpression	"fprintf ( xmlout , ""%s    </ReversibleStepSizeValue>\\n"" , s )"		132958	0					
ANR	133466	Callee	fprintf		132958	0					
ANR	133467	Identifier	fprintf		132958	0					
ANR	133468	ArgumentList	xmlout		132958	1					
ANR	133469	Argument	xmlout		132958	0					
ANR	133470	Identifier	xmlout		132958	0					
ANR	133471	Argument	"""%s    </ReversibleStepSizeValue>\\n"""		132958	1					
ANR	133472	PrimaryExpression	"""%s    </ReversibleStepSizeValue>\\n"""		132958	0					
ANR	133473	Argument	s		132958	2					
ANR	133474	Identifier	s		132958	0					
ANR	133475	BreakStatement	break ;	2037:12:93976:93981	132958	6	True				
ANR	133476	Label	case J2K_CCP_QNTSTY_SIQNT :	2038:8:93991:94016	132958	7	True				
ANR	133477	Identifier	J2K_CCP_QNTSTY_SIQNT		132958	0					
ANR	133478	ExpressionStatement	"fprintf ( xmlout , ""%s    <QuantizationStepSizeValues>\\n"" , s )"	2040:12:94062:94123	132958	8	True				
ANR	133479	CallExpression	"fprintf ( xmlout , ""%s    <QuantizationStepSizeValues>\\n"" , s )"		132958	0					
ANR	133480	Callee	fprintf		132958	0					
ANR	133481	Identifier	fprintf		132958	0					
ANR	133482	ArgumentList	xmlout		132958	1					
ANR	133483	Argument	xmlout		132958	0					
ANR	133484	Identifier	xmlout		132958	0					
ANR	133485	Argument	"""%s    <QuantizationStepSizeValues>\\n"""		132958	1					
ANR	133486	PrimaryExpression	"""%s    <QuantizationStepSizeValues>\\n"""		132958	0					
ANR	133487	Argument	s		132958	2					
ANR	133488	Identifier	s		132958	0					
ANR	133489	IfStatement	if ( notes )		132958	9					
ANR	133490	Condition	notes	2041:16:94141:94145	132958	0	True				
ANR	133491	Identifier	notes		132958	0					
ANR	133492	CompoundStatement		122:23:5668:5668	132958	1					
ANR	133493	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"" , s )"	2042:16:94166:94323	132958	0	True				
ANR	133494	CallExpression	"fprintf ( xmlout , ""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"" , s )"		132958	0					
ANR	133495	Callee	fprintf		132958	0					
ANR	133496	Identifier	fprintf		132958	0					
ANR	133497	ArgumentList	xmlout		132958	1					
ANR	133498	Argument	xmlout		132958	0					
ANR	133499	Identifier	xmlout		132958	0					
ANR	133500	Argument	"""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"""		132958	1					
ANR	133501	PrimaryExpression	"""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"""		132958	0					
ANR	133502	Argument	s		132958	2					
ANR	133503	Identifier	s		132958	0					
ANR	133504	ExpressionStatement	"fprintf ( xmlout , ""%s      <QuantizationValuesForSubband0>\\n"" , s )"	2046:12:94351:94417	132958	10	True				
ANR	133505	CallExpression	"fprintf ( xmlout , ""%s      <QuantizationValuesForSubband0>\\n"" , s )"		132958	0					
ANR	133506	Callee	fprintf		132958	0					
ANR	133507	Identifier	fprintf		132958	0					
ANR	133508	ArgumentList	xmlout		132958	1					
ANR	133509	Argument	xmlout		132958	0					
ANR	133510	Identifier	xmlout		132958	0					
ANR	133511	Argument	"""%s      <QuantizationValuesForSubband0>\\n"""		132958	1					
ANR	133512	PrimaryExpression	"""%s      <QuantizationValuesForSubband0>\\n"""		132958	0					
ANR	133513	Argument	s		132958	2					
ANR	133514	Identifier	s		132958	0					
ANR	133515	IfStatement	if ( notes )		132958	11					
ANR	133516	Condition	notes	2047:16:94435:94439	132958	0	True				
ANR	133517	Identifier	notes		132958	0					
ANR	133518	CompoundStatement		128:23:5962:5962	132958	1					
ANR	133519	ExpressionStatement	"fprintf ( xmlout , ""%s      <!-- For N(L)LL subband: >\\n"" , s )"	2048:16:94460:94519	132958	0	True				
ANR	133520	CallExpression	"fprintf ( xmlout , ""%s      <!-- For N(L)LL subband: >\\n"" , s )"		132958	0					
ANR	133521	Callee	fprintf		132958	0					
ANR	133522	Identifier	fprintf		132958	0					
ANR	133523	ArgumentList	xmlout		132958	1					
ANR	133524	Argument	xmlout		132958	0					
ANR	133525	Identifier	xmlout		132958	0					
ANR	133526	Argument	"""%s      <!-- For N(L)LL subband: >\\n"""		132958	1					
ANR	133527	PrimaryExpression	"""%s      <!-- For N(L)LL subband: >\\n"""		132958	0					
ANR	133528	Argument	s		132958	2					
ANR	133529	Identifier	s		132958	0					
ANR	133530	IfStatement	if ( raw )		132958	12					
ANR	133531	Condition	raw	2050:16:94551:94553	132958	0	True				
ANR	133532	Identifier	raw		132958	0					
ANR	133533	CompoundStatement		131:21:6076:6076	132958	1					
ANR	133534	ExpressionStatement	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> stepsizes [ 0 ] . expn << 11 ) | tccp -> stepsizes [ 0 ] . mant )"	2051:16:94574:94713	132958	0	True				
ANR	133535	CallExpression	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> stepsizes [ 0 ] . expn << 11 ) | tccp -> stepsizes [ 0 ] . mant )"		132958	0					
ANR	133536	Callee	fprintf		132958	0					
ANR	133537	Identifier	fprintf		132958	0					
ANR	133538	ArgumentList	xmlout		132958	1					
ANR	133539	Argument	xmlout		132958	0					
ANR	133540	Identifier	xmlout		132958	0					
ANR	133541	Argument	"""%s        <AsHex>0x%02x</AsHex>\\n"""		132958	1					
ANR	133542	PrimaryExpression	"""%s        <AsHex>0x%02x</AsHex>\\n"""		132958	0					
ANR	133543	Argument	s		132958	2					
ANR	133544	Identifier	s		132958	0					
ANR	133545	Argument	( tccp -> stepsizes [ 0 ] . expn << 11 ) | tccp -> stepsizes [ 0 ] . mant		132958	3					
ANR	133546	InclusiveOrExpression	( tccp -> stepsizes [ 0 ] . expn << 11 ) | tccp -> stepsizes [ 0 ] . mant		132958	0		|			
ANR	133547	ShiftExpression	tccp -> stepsizes [ 0 ] . expn << 11		132958	0		<<			
ANR	133548	MemberAccess	tccp -> stepsizes [ 0 ] . expn		132958	0					
ANR	133549	ArrayIndexing	tccp -> stepsizes [ 0 ]		132958	0					
ANR	133550	PtrMemberAccess	tccp -> stepsizes		132958	0					
ANR	133551	Identifier	tccp		132958	0					
ANR	133552	Identifier	stepsizes		132958	1					
ANR	133553	PrimaryExpression	0		132958	1					
ANR	133554	Identifier	expn		132958	1					
ANR	133555	PrimaryExpression	11		132958	1					
ANR	133556	MemberAccess	tccp -> stepsizes [ 0 ] . mant		132958	1					
ANR	133557	ArrayIndexing	tccp -> stepsizes [ 0 ]		132958	0					
ANR	133558	PtrMemberAccess	tccp -> stepsizes		132958	0					
ANR	133559	Identifier	tccp		132958	0					
ANR	133560	Identifier	stepsizes		132958	1					
ANR	133561	PrimaryExpression	0		132958	1					
ANR	133562	Identifier	mant		132958	1					
ANR	133563	IfStatement	if ( derived )		132958	13					
ANR	133564	Condition	derived	2054:16:94745:94751	132958	0	True				
ANR	133565	Identifier	derived		132958	0					
ANR	133566	CompoundStatement		135:25:6274:6274	132958	1					
ANR	133567	ExpressionStatement	"fprintf ( xmlout , ""%s        <Exponent>%d</Exponent>\\n"" , s , tccp -> stepsizes [ 0 ] . expn )"	2055:16:94772:94879	132958	0	True				
ANR	133568	CallExpression	"fprintf ( xmlout , ""%s        <Exponent>%d</Exponent>\\n"" , s , tccp -> stepsizes [ 0 ] . expn )"		132958	0					
ANR	133569	Callee	fprintf		132958	0					
ANR	133570	Identifier	fprintf		132958	0					
ANR	133571	ArgumentList	xmlout		132958	1					
ANR	133572	Argument	xmlout		132958	0					
ANR	133573	Identifier	xmlout		132958	0					
ANR	133574	Argument	"""%s        <Exponent>%d</Exponent>\\n"""		132958	1					
ANR	133575	PrimaryExpression	"""%s        <Exponent>%d</Exponent>\\n"""		132958	0					
ANR	133576	Argument	s		132958	2					
ANR	133577	Identifier	s		132958	0					
ANR	133578	Argument	tccp -> stepsizes [ 0 ] . expn		132958	3					
ANR	133579	MemberAccess	tccp -> stepsizes [ 0 ] . expn		132958	0					
ANR	133580	ArrayIndexing	tccp -> stepsizes [ 0 ]		132958	0					
ANR	133581	PtrMemberAccess	tccp -> stepsizes		132958	0					
ANR	133582	Identifier	tccp		132958	0					
ANR	133583	Identifier	stepsizes		132958	1					
ANR	133584	PrimaryExpression	0		132958	1					
ANR	133585	Identifier	expn		132958	1					
ANR	133586	ExpressionStatement	"fprintf ( xmlout , ""%s        <Mantissa>%d</Mantissa>\\n"" , s , tccp -> stepsizes [ 0 ] . mant )"	2057:16:94897:95004	132958	1	True				
ANR	133587	CallExpression	"fprintf ( xmlout , ""%s        <Mantissa>%d</Mantissa>\\n"" , s , tccp -> stepsizes [ 0 ] . mant )"		132958	0					
ANR	133588	Callee	fprintf		132958	0					
ANR	133589	Identifier	fprintf		132958	0					
ANR	133590	ArgumentList	xmlout		132958	1					
ANR	133591	Argument	xmlout		132958	0					
ANR	133592	Identifier	xmlout		132958	0					
ANR	133593	Argument	"""%s        <Mantissa>%d</Mantissa>\\n"""		132958	1					
ANR	133594	PrimaryExpression	"""%s        <Mantissa>%d</Mantissa>\\n"""		132958	0					
ANR	133595	Argument	s		132958	2					
ANR	133596	Identifier	s		132958	0					
ANR	133597	Argument	tccp -> stepsizes [ 0 ] . mant		132958	3					
ANR	133598	MemberAccess	tccp -> stepsizes [ 0 ] . mant		132958	0					
ANR	133599	ArrayIndexing	tccp -> stepsizes [ 0 ]		132958	0					
ANR	133600	PtrMemberAccess	tccp -> stepsizes		132958	0					
ANR	133601	Identifier	tccp		132958	0					
ANR	133602	Identifier	stepsizes		132958	1					
ANR	133603	PrimaryExpression	0		132958	1					
ANR	133604	Identifier	mant		132958	1					
ANR	133605	ExpressionStatement	"fprintf ( xmlout , ""%s      </QuantizationValuesForSubband0>\\n"" , s )"	2060:12:95032:95099	132958	14	True				
ANR	133606	CallExpression	"fprintf ( xmlout , ""%s      </QuantizationValuesForSubband0>\\n"" , s )"		132958	0					
ANR	133607	Callee	fprintf		132958	0					
ANR	133608	Identifier	fprintf		132958	0					
ANR	133609	ArgumentList	xmlout		132958	1					
ANR	133610	Argument	xmlout		132958	0					
ANR	133611	Identifier	xmlout		132958	0					
ANR	133612	Argument	"""%s      </QuantizationValuesForSubband0>\\n"""		132958	1					
ANR	133613	PrimaryExpression	"""%s      </QuantizationValuesForSubband0>\\n"""		132958	0					
ANR	133614	Argument	s		132958	2					
ANR	133615	Identifier	s		132958	0					
ANR	133616	IfStatement	if ( notes )		132958	15					
ANR	133617	Condition	notes	2061:16:95117:95121	132958	0	True				
ANR	133618	Identifier	notes		132958	0					
ANR	133619	CompoundStatement		142:23:6644:6644	132958	1					
ANR	133620	ExpressionStatement	"fprintf ( xmlout , ""%s      <!-- Exponents for subbands beyond 0 are not from header, but calculated per Eq. E.5 -->\\n"" , s )"	2062:16:95142:95310	132958	0	True				
ANR	133621	CallExpression	"fprintf ( xmlout , ""%s      <!-- Exponents for subbands beyond 0 are not from header, but calculated per Eq. E.5 -->\\n"" , s )"		132958	0					
ANR	133622	Callee	fprintf		132958	0					
ANR	133623	Identifier	fprintf		132958	0					
ANR	133624	ArgumentList	xmlout		132958	1					
ANR	133625	Argument	xmlout		132958	0					
ANR	133626	Identifier	xmlout		132958	0					
ANR	133627	Argument	"""%s      <!-- Exponents for subbands beyond 0 are not from header, but calculated per Eq. E.5 -->\\n"""		132958	1					
ANR	133628	PrimaryExpression	"""%s      <!-- Exponents for subbands beyond 0 are not from header, but calculated per Eq. E.5 -->\\n"""		132958	0					
ANR	133629	Argument	s		132958	2					
ANR	133630	Identifier	s		132958	0					
ANR	133631	ExpressionStatement	"fprintf ( xmlout , ""%s      <!-- The mantissa for all subbands is the same, given by the value above. -->\\n"" , s )"	2065:16:95328:95485	132958	1	True				
ANR	133632	CallExpression	"fprintf ( xmlout , ""%s      <!-- The mantissa for all subbands is the same, given by the value above. -->\\n"" , s )"		132958	0					
ANR	133633	Callee	fprintf		132958	0					
ANR	133634	Identifier	fprintf		132958	0					
ANR	133635	ArgumentList	xmlout		132958	1					
ANR	133636	Argument	xmlout		132958	0					
ANR	133637	Identifier	xmlout		132958	0					
ANR	133638	Argument	"""%s      <!-- The mantissa for all subbands is the same, given by the value above. -->\\n"""		132958	1					
ANR	133639	PrimaryExpression	"""%s      <!-- The mantissa for all subbands is the same, given by the value above. -->\\n"""		132958	0					
ANR	133640	Argument	s		132958	2					
ANR	133641	Identifier	s		132958	0					
ANR	133642	ExpressionStatement	"fprintf ( xmlout , ""%s      <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"" , s )"	2068:16:95503:95659	132958	2	True				
ANR	133643	CallExpression	"fprintf ( xmlout , ""%s      <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"" , s )"		132958	0					
ANR	133644	Callee	fprintf		132958	0					
ANR	133645	Identifier	fprintf		132958	0					
ANR	133646	ArgumentList	xmlout		132958	1					
ANR	133647	Argument	xmlout		132958	0					
ANR	133648	Identifier	xmlout		132958	0					
ANR	133649	Argument	"""%s      <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"""		132958	1					
ANR	133650	PrimaryExpression	"""%s      <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"""		132958	0					
ANR	133651	Argument	s		132958	2					
ANR	133652	Identifier	s		132958	0					
ANR	133653	ExpressionStatement	"fprintf ( xmlout , ""%s      <!-- until a subband with exponent of zero value is reached. -->\\n"" , s )"	2071:16:95677:95821	132958	3	True				
ANR	133654	CallExpression	"fprintf ( xmlout , ""%s      <!-- until a subband with exponent of zero value is reached. -->\\n"" , s )"		132958	0					
ANR	133655	Callee	fprintf		132958	0					
ANR	133656	Identifier	fprintf		132958	0					
ANR	133657	ArgumentList	xmlout		132958	1					
ANR	133658	Argument	xmlout		132958	0					
ANR	133659	Identifier	xmlout		132958	0					
ANR	133660	Argument	"""%s      <!-- until a subband with exponent of zero value is reached. -->\\n"""		132958	1					
ANR	133661	PrimaryExpression	"""%s      <!-- until a subband with exponent of zero value is reached. -->\\n"""		132958	0					
ANR	133662	Argument	s		132958	2					
ANR	133663	Identifier	s		132958	0					
ANR	133664	ForStatement	for ( bandno = 1 ; bandno < J2K_MAXBANDS ; bandno ++ )		132958	16					
ANR	133665	ForInit	bandno = 1 ;	2076:17:95855:95865	132958	0	True				
ANR	133666	AssignmentExpression	bandno = 1		132958	0		=			
ANR	133667	Identifier	bandno		132958	0					
ANR	133668	PrimaryExpression	1		132958	1					
ANR	133669	Condition	bandno < J2K_MAXBANDS	2076:29:95867:95887	132958	1	True				
ANR	133670	RelationalExpression	bandno < J2K_MAXBANDS		132958	0		<			
ANR	133671	Identifier	bandno		132958	0					
ANR	133672	Identifier	J2K_MAXBANDS		132958	1					
ANR	133673	PostIncDecOperationExpression	bandno ++	2076:52:95890:95897	132958	2	True				
ANR	133674	Identifier	bandno		132958	0					
ANR	133675	IncDec	++		132958	1					
ANR	133676	CompoundStatement		157:62:7420:7420	132958	3					
ANR	133677	IfStatement	if ( tccp -> stepsizes [ bandno ] . expn == 0 )		132958	0					
ANR	133678	Condition	tccp -> stepsizes [ bandno ] . expn == 0	2077:20:95922:95954	132958	0	True				
ANR	133679	EqualityExpression	tccp -> stepsizes [ bandno ] . expn == 0		132958	0		==			
ANR	133680	MemberAccess	tccp -> stepsizes [ bandno ] . expn		132958	0					
ANR	133681	ArrayIndexing	tccp -> stepsizes [ bandno ]		132958	0					
ANR	133682	PtrMemberAccess	tccp -> stepsizes		132958	0					
ANR	133683	Identifier	tccp		132958	0					
ANR	133684	Identifier	stepsizes		132958	1					
ANR	133685	Identifier	bandno		132958	1					
ANR	133686	Identifier	expn		132958	1					
ANR	133687	PrimaryExpression	0		132958	1					
ANR	133688	CompoundStatement		158:55:7477:7477	132958	1					
ANR	133689	BreakStatement	break ;	2078:20:95979:95984	132958	0	True				
ANR	133690	ExpressionStatement	"fprintf ( xmlout , ""%s      <CalculatedExponent Subband=\\""%d\\"">%d</CalculatedExponent>\\n"" , s , bandno , tccp -> stepsizes [ bandno ] . expn )"	2081:16:96021:96197	132958	1	True				
ANR	133691	CallExpression	"fprintf ( xmlout , ""%s      <CalculatedExponent Subband=\\""%d\\"">%d</CalculatedExponent>\\n"" , s , bandno , tccp -> stepsizes [ bandno ] . expn )"		132958	0					
ANR	133692	Callee	fprintf		132958	0					
ANR	133693	Identifier	fprintf		132958	0					
ANR	133694	ArgumentList	xmlout		132958	1					
ANR	133695	Argument	xmlout		132958	0					
ANR	133696	Identifier	xmlout		132958	0					
ANR	133697	Argument	"""%s      <CalculatedExponent Subband=\\""%d\\"">%d</CalculatedExponent>\\n"""		132958	1					
ANR	133698	PrimaryExpression	"""%s      <CalculatedExponent Subband=\\""%d\\"">%d</CalculatedExponent>\\n"""		132958	0					
ANR	133699	Argument	s		132958	2					
ANR	133700	Identifier	s		132958	0					
ANR	133701	Argument	bandno		132958	3					
ANR	133702	Identifier	bandno		132958	0					
ANR	133703	Argument	tccp -> stepsizes [ bandno ] . expn		132958	4					
ANR	133704	MemberAccess	tccp -> stepsizes [ bandno ] . expn		132958	0					
ANR	133705	ArrayIndexing	tccp -> stepsizes [ bandno ]		132958	0					
ANR	133706	PtrMemberAccess	tccp -> stepsizes		132958	0					
ANR	133707	Identifier	tccp		132958	0					
ANR	133708	Identifier	stepsizes		132958	1					
ANR	133709	Identifier	bandno		132958	1					
ANR	133710	Identifier	expn		132958	1					
ANR	133711	ExpressionStatement	"fprintf ( xmlout , ""%s    </QuantizationStepSizeValues>\\n"" , s )"	2085:12:96225:96287	132958	17	True				
ANR	133712	CallExpression	"fprintf ( xmlout , ""%s    </QuantizationStepSizeValues>\\n"" , s )"		132958	0					
ANR	133713	Callee	fprintf		132958	0					
ANR	133714	Identifier	fprintf		132958	0					
ANR	133715	ArgumentList	xmlout		132958	1					
ANR	133716	Argument	xmlout		132958	0					
ANR	133717	Identifier	xmlout		132958	0					
ANR	133718	Argument	"""%s    </QuantizationStepSizeValues>\\n"""		132958	1					
ANR	133719	PrimaryExpression	"""%s    </QuantizationStepSizeValues>\\n"""		132958	0					
ANR	133720	Argument	s		132958	2					
ANR	133721	Identifier	s		132958	0					
ANR	133722	BreakStatement	break ;	2086:12:96301:96306	132958	18	True				
ANR	133723	Label	default :	2088:8:96317:96324	132958	19	True				
ANR	133724	Identifier	default		132958	0					
ANR	133725	ExpressionStatement	numbands = J2K_MAXBANDS	2089:12:96365:96388	132958	20	True				
ANR	133726	AssignmentExpression	numbands = J2K_MAXBANDS		132958	0		=			
ANR	133727	Identifier	numbands		132958	0					
ANR	133728	Identifier	J2K_MAXBANDS		132958	1					
ANR	133729	ExpressionStatement	"fprintf ( xmlout , ""%s    <QuantizationStepSizeValues>\\n"" , s )"	2091:12:96503:96564	132958	21	True				
ANR	133730	CallExpression	"fprintf ( xmlout , ""%s    <QuantizationStepSizeValues>\\n"" , s )"		132958	0					
ANR	133731	Callee	fprintf		132958	0					
ANR	133732	Identifier	fprintf		132958	0					
ANR	133733	ArgumentList	xmlout		132958	1					
ANR	133734	Argument	xmlout		132958	0					
ANR	133735	Identifier	xmlout		132958	0					
ANR	133736	Argument	"""%s    <QuantizationStepSizeValues>\\n"""		132958	1					
ANR	133737	PrimaryExpression	"""%s    <QuantizationStepSizeValues>\\n"""		132958	0					
ANR	133738	Argument	s		132958	2					
ANR	133739	Identifier	s		132958	0					
ANR	133740	IfStatement	if ( notes )		132958	22					
ANR	133741	Condition	notes	2092:16:96582:96586	132958	0	True				
ANR	133742	Identifier	notes		132958	0					
ANR	133743	CompoundStatement		173:23:8109:8109	132958	1					
ANR	133744	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"" , s )"	2093:16:96607:96764	132958	0	True				
ANR	133745	CallExpression	"fprintf ( xmlout , ""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"" , s )"		132958	0					
ANR	133746	Callee	fprintf		132958	0					
ANR	133747	Identifier	fprintf		132958	0					
ANR	133748	ArgumentList	xmlout		132958	1					
ANR	133749	Argument	xmlout		132958	0					
ANR	133750	Identifier	xmlout		132958	0					
ANR	133751	Argument	"""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"""		132958	1					
ANR	133752	PrimaryExpression	"""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"""		132958	0					
ANR	133753	Argument	s		132958	2					
ANR	133754	Identifier	s		132958	0					
ANR	133755	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"" , s )"	2096:16:96782:96936	132958	1	True				
ANR	133756	CallExpression	"fprintf ( xmlout , ""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"" , s )"		132958	0					
ANR	133757	Callee	fprintf		132958	0					
ANR	133758	Identifier	fprintf		132958	0					
ANR	133759	ArgumentList	xmlout		132958	1					
ANR	133760	Argument	xmlout		132958	0					
ANR	133761	Identifier	xmlout		132958	0					
ANR	133762	Argument	"""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"""		132958	1					
ANR	133763	PrimaryExpression	"""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"""		132958	0					
ANR	133764	Argument	s		132958	2					
ANR	133765	Identifier	s		132958	0					
ANR	133766	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- until a subband with mantissa and exponent of zero values is reached. -->\\n"" , s )"	2099:16:96954:97110	132958	2	True				
ANR	133767	CallExpression	"fprintf ( xmlout , ""%s    <!-- until a subband with mantissa and exponent of zero values is reached. -->\\n"" , s )"		132958	0					
ANR	133768	Callee	fprintf		132958	0					
ANR	133769	Identifier	fprintf		132958	0					
ANR	133770	ArgumentList	xmlout		132958	1					
ANR	133771	Argument	xmlout		132958	0					
ANR	133772	Identifier	xmlout		132958	0					
ANR	133773	Argument	"""%s    <!-- until a subband with mantissa and exponent of zero values is reached. -->\\n"""		132958	1					
ANR	133774	PrimaryExpression	"""%s    <!-- until a subband with mantissa and exponent of zero values is reached. -->\\n"""		132958	0					
ANR	133775	Argument	s		132958	2					
ANR	133776	Identifier	s		132958	0					
ANR	133777	ForStatement	for ( bandno = 0 ; bandno < numbands ; bandno ++ )		132958	23					
ANR	133778	ForInit	bandno = 0 ;	2103:17:97143:97153	132958	0	True				
ANR	133779	AssignmentExpression	bandno = 0		132958	0		=			
ANR	133780	Identifier	bandno		132958	0					
ANR	133781	PrimaryExpression	0		132958	1					
ANR	133782	Condition	bandno < numbands	2103:29:97155:97171	132958	1	True				
ANR	133783	RelationalExpression	bandno < numbands		132958	0		<			
ANR	133784	Identifier	bandno		132958	0					
ANR	133785	Identifier	numbands		132958	1					
ANR	133786	PostIncDecOperationExpression	bandno ++	2103:48:97174:97181	132958	2	True				
ANR	133787	Identifier	bandno		132958	0					
ANR	133788	IncDec	++		132958	1					
ANR	133789	CompoundStatement		184:58:8704:8704	132958	3					
ANR	133790	IfStatement	if ( tccp -> stepsizes [ bandno ] . expn == 0 && tccp -> stepsizes [ bandno ] . mant == 0 )		132958	0					
ANR	133791	Condition	tccp -> stepsizes [ bandno ] . expn == 0 && tccp -> stepsizes [ bandno ] . mant == 0	2104:20:97206:97275	132958	0	True				
ANR	133792	AndExpression	tccp -> stepsizes [ bandno ] . expn == 0 && tccp -> stepsizes [ bandno ] . mant == 0		132958	0		&&			
ANR	133793	EqualityExpression	tccp -> stepsizes [ bandno ] . expn == 0		132958	0		==			
ANR	133794	MemberAccess	tccp -> stepsizes [ bandno ] . expn		132958	0					
ANR	133795	ArrayIndexing	tccp -> stepsizes [ bandno ]		132958	0					
ANR	133796	PtrMemberAccess	tccp -> stepsizes		132958	0					
ANR	133797	Identifier	tccp		132958	0					
ANR	133798	Identifier	stepsizes		132958	1					
ANR	133799	Identifier	bandno		132958	1					
ANR	133800	Identifier	expn		132958	1					
ANR	133801	PrimaryExpression	0		132958	1					
ANR	133802	EqualityExpression	tccp -> stepsizes [ bandno ] . mant == 0		132958	1		==			
ANR	133803	MemberAccess	tccp -> stepsizes [ bandno ] . mant		132958	0					
ANR	133804	ArrayIndexing	tccp -> stepsizes [ bandno ]		132958	0					
ANR	133805	PtrMemberAccess	tccp -> stepsizes		132958	0					
ANR	133806	Identifier	tccp		132958	0					
ANR	133807	Identifier	stepsizes		132958	1					
ANR	133808	Identifier	bandno		132958	1					
ANR	133809	Identifier	mant		132958	1					
ANR	133810	PrimaryExpression	0		132958	1					
ANR	133811	CompoundStatement		185:92:8798:8798	132958	1					
ANR	133812	BreakStatement	break ;	2105:20:97300:97305	132958	0	True				
ANR	133813	ExpressionStatement	"fprintf ( xmlout , ""%s      <QuantizationValues Subband=\\""%d\\"">\\n"" , s , bandno )"	2107:16:97395:97471	132958	1	True				
ANR	133814	CallExpression	"fprintf ( xmlout , ""%s      <QuantizationValues Subband=\\""%d\\"">\\n"" , s , bandno )"		132958	0					
ANR	133815	Callee	fprintf		132958	0					
ANR	133816	Identifier	fprintf		132958	0					
ANR	133817	ArgumentList	xmlout		132958	1					
ANR	133818	Argument	xmlout		132958	0					
ANR	133819	Identifier	xmlout		132958	0					
ANR	133820	Argument	"""%s      <QuantizationValues Subband=\\""%d\\"">\\n"""		132958	1					
ANR	133821	PrimaryExpression	"""%s      <QuantizationValues Subband=\\""%d\\"">\\n"""		132958	0					
ANR	133822	Argument	s		132958	2					
ANR	133823	Identifier	s		132958	0					
ANR	133824	Argument	bandno		132958	3					
ANR	133825	Identifier	bandno		132958	0					
ANR	133826	IfStatement	if ( raw )		132958	2					
ANR	133827	Condition	raw	2108:20:97493:97495	132958	0	True				
ANR	133828	Identifier	raw		132958	0					
ANR	133829	CompoundStatement		189:25:9018:9018	132958	1					
ANR	133830	ExpressionStatement	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> stepsizes [ bandno ] . expn << 11 ) | tccp -> stepsizes [ bandno ] . mant )"	2109:20:97520:97672	132958	0	True				
ANR	133831	CallExpression	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> stepsizes [ bandno ] . expn << 11 ) | tccp -> stepsizes [ bandno ] . mant )"		132958	0					
ANR	133832	Callee	fprintf		132958	0					
ANR	133833	Identifier	fprintf		132958	0					
ANR	133834	ArgumentList	xmlout		132958	1					
ANR	133835	Argument	xmlout		132958	0					
ANR	133836	Identifier	xmlout		132958	0					
ANR	133837	Argument	"""%s        <AsHex>0x%02x</AsHex>\\n"""		132958	1					
ANR	133838	PrimaryExpression	"""%s        <AsHex>0x%02x</AsHex>\\n"""		132958	0					
ANR	133839	Argument	s		132958	2					
ANR	133840	Identifier	s		132958	0					
ANR	133841	Argument	( tccp -> stepsizes [ bandno ] . expn << 11 ) | tccp -> stepsizes [ bandno ] . mant		132958	3					
ANR	133842	InclusiveOrExpression	( tccp -> stepsizes [ bandno ] . expn << 11 ) | tccp -> stepsizes [ bandno ] . mant		132958	0		|			
ANR	133843	ShiftExpression	tccp -> stepsizes [ bandno ] . expn << 11		132958	0		<<			
ANR	133844	MemberAccess	tccp -> stepsizes [ bandno ] . expn		132958	0					
ANR	133845	ArrayIndexing	tccp -> stepsizes [ bandno ]		132958	0					
ANR	133846	PtrMemberAccess	tccp -> stepsizes		132958	0					
ANR	133847	Identifier	tccp		132958	0					
ANR	133848	Identifier	stepsizes		132958	1					
ANR	133849	Identifier	bandno		132958	1					
ANR	133850	Identifier	expn		132958	1					
ANR	133851	PrimaryExpression	11		132958	1					
ANR	133852	MemberAccess	tccp -> stepsizes [ bandno ] . mant		132958	1					
ANR	133853	ArrayIndexing	tccp -> stepsizes [ bandno ]		132958	0					
ANR	133854	PtrMemberAccess	tccp -> stepsizes		132958	0					
ANR	133855	Identifier	tccp		132958	0					
ANR	133856	Identifier	stepsizes		132958	1					
ANR	133857	Identifier	bandno		132958	1					
ANR	133858	Identifier	mant		132958	1					
ANR	133859	IfStatement	if ( derived )		132958	3					
ANR	133860	Condition	derived	2112:20:97712:97718	132958	0	True				
ANR	133861	Identifier	derived		132958	0					
ANR	133862	CompoundStatement		193:29:9241:9241	132958	1					
ANR	133863	ExpressionStatement	"fprintf ( xmlout , ""%s        <Exponent>%d</Exponent>\\n"" , s , tccp -> stepsizes [ bandno ] . expn )"	2113:20:97743:97858	132958	0	True				
ANR	133864	CallExpression	"fprintf ( xmlout , ""%s        <Exponent>%d</Exponent>\\n"" , s , tccp -> stepsizes [ bandno ] . expn )"		132958	0					
ANR	133865	Callee	fprintf		132958	0					
ANR	133866	Identifier	fprintf		132958	0					
ANR	133867	ArgumentList	xmlout		132958	1					
ANR	133868	Argument	xmlout		132958	0					
ANR	133869	Identifier	xmlout		132958	0					
ANR	133870	Argument	"""%s        <Exponent>%d</Exponent>\\n"""		132958	1					
ANR	133871	PrimaryExpression	"""%s        <Exponent>%d</Exponent>\\n"""		132958	0					
ANR	133872	Argument	s		132958	2					
ANR	133873	Identifier	s		132958	0					
ANR	133874	Argument	tccp -> stepsizes [ bandno ] . expn		132958	3					
ANR	133875	MemberAccess	tccp -> stepsizes [ bandno ] . expn		132958	0					
ANR	133876	ArrayIndexing	tccp -> stepsizes [ bandno ]		132958	0					
ANR	133877	PtrMemberAccess	tccp -> stepsizes		132958	0					
ANR	133878	Identifier	tccp		132958	0					
ANR	133879	Identifier	stepsizes		132958	1					
ANR	133880	Identifier	bandno		132958	1					
ANR	133881	Identifier	expn		132958	1					
ANR	133882	ExpressionStatement	"fprintf ( xmlout , ""%s        <Mantissa>%d</Mantissa>\\n"" , s , tccp -> stepsizes [ bandno ] . mant )"	2115:20:97880:97995	132958	1	True				
ANR	133883	CallExpression	"fprintf ( xmlout , ""%s        <Mantissa>%d</Mantissa>\\n"" , s , tccp -> stepsizes [ bandno ] . mant )"		132958	0					
ANR	133884	Callee	fprintf		132958	0					
ANR	133885	Identifier	fprintf		132958	0					
ANR	133886	ArgumentList	xmlout		132958	1					
ANR	133887	Argument	xmlout		132958	0					
ANR	133888	Identifier	xmlout		132958	0					
ANR	133889	Argument	"""%s        <Mantissa>%d</Mantissa>\\n"""		132958	1					
ANR	133890	PrimaryExpression	"""%s        <Mantissa>%d</Mantissa>\\n"""		132958	0					
ANR	133891	Argument	s		132958	2					
ANR	133892	Identifier	s		132958	0					
ANR	133893	Argument	tccp -> stepsizes [ bandno ] . mant		132958	3					
ANR	133894	MemberAccess	tccp -> stepsizes [ bandno ] . mant		132958	0					
ANR	133895	ArrayIndexing	tccp -> stepsizes [ bandno ]		132958	0					
ANR	133896	PtrMemberAccess	tccp -> stepsizes		132958	0					
ANR	133897	Identifier	tccp		132958	0					
ANR	133898	Identifier	stepsizes		132958	1					
ANR	133899	Identifier	bandno		132958	1					
ANR	133900	Identifier	mant		132958	1					
ANR	133901	ExpressionStatement	"fprintf ( xmlout , ""%s      </QuantizationValues>\\n"" , s )"	2118:16:98031:98085	132958	4	True				
ANR	133902	CallExpression	"fprintf ( xmlout , ""%s      </QuantizationValues>\\n"" , s )"		132958	0					
ANR	133903	Callee	fprintf		132958	0					
ANR	133904	Identifier	fprintf		132958	0					
ANR	133905	ArgumentList	xmlout		132958	1					
ANR	133906	Argument	xmlout		132958	0					
ANR	133907	Identifier	xmlout		132958	0					
ANR	133908	Argument	"""%s      </QuantizationValues>\\n"""		132958	1					
ANR	133909	PrimaryExpression	"""%s      </QuantizationValues>\\n"""		132958	0					
ANR	133910	Argument	s		132958	2					
ANR	133911	Identifier	s		132958	0					
ANR	133912	ExpressionStatement	"fprintf ( xmlout , ""%s    </QuantizationStepSizeValues>\\n"" , s )"	2120:12:98113:98175	132958	24	True				
ANR	133913	CallExpression	"fprintf ( xmlout , ""%s    </QuantizationStepSizeValues>\\n"" , s )"		132958	0					
ANR	133914	Callee	fprintf		132958	0					
ANR	133915	Identifier	fprintf		132958	0					
ANR	133916	ArgumentList	xmlout		132958	1					
ANR	133917	Argument	xmlout		132958	0					
ANR	133918	Identifier	xmlout		132958	0					
ANR	133919	Argument	"""%s    </QuantizationStepSizeValues>\\n"""		132958	1					
ANR	133920	PrimaryExpression	"""%s    </QuantizationStepSizeValues>\\n"""		132958	0					
ANR	133921	Argument	s		132958	2					
ANR	133922	Identifier	s		132958	0					
ANR	133923	BreakStatement	break ;	2121:12:98189:98194	132958	25	True				
ANR	133924	ExpressionStatement	"fprintf ( xmlout , ""%s  </SPqcc>\\n"" , s )"	2123:8:98227:98268	132958	14	True				
ANR	133925	CallExpression	"fprintf ( xmlout , ""%s  </SPqcc>\\n"" , s )"		132958	0					
ANR	133926	Callee	fprintf		132958	0					
ANR	133927	Identifier	fprintf		132958	0					
ANR	133928	ArgumentList	xmlout		132958	1					
ANR	133929	Argument	xmlout		132958	0					
ANR	133930	Identifier	xmlout		132958	0					
ANR	133931	Argument	"""%s  </SPqcc>\\n"""		132958	1					
ANR	133932	PrimaryExpression	"""%s  </SPqcc>\\n"""		132958	0					
ANR	133933	Argument	s		132958	2					
ANR	133934	Identifier	s		132958	0					
ANR	133935	ExpressionStatement	"fprintf ( xmlout , ""%s</QuantizationComponent>\\n"" , s )"	2124:8:98278:98333	132958	15	True				
ANR	133936	CallExpression	"fprintf ( xmlout , ""%s</QuantizationComponent>\\n"" , s )"		132958	0					
ANR	133937	Callee	fprintf		132958	0					
ANR	133938	Identifier	fprintf		132958	0					
ANR	133939	ArgumentList	xmlout		132958	1					
ANR	133940	Argument	xmlout		132958	0					
ANR	133941	Identifier	xmlout		132958	0					
ANR	133942	Argument	"""%s</QuantizationComponent>\\n"""		132958	1					
ANR	133943	PrimaryExpression	"""%s</QuantizationComponent>\\n"""		132958	0					
ANR	133944	Argument	s		132958	2					
ANR	133945	Identifier	s		132958	0					
ANR	133946	ReturnType	void		132958	1					
ANR	133947	Identifier	xml_out_frame_qcc		132958	2					
ANR	133948	ParameterList	"FILE * xmlout , opj_tcp_t * tcp , int numcomps"		132958	3					
ANR	133949	Parameter	FILE * xmlout	1919:23:88435:88446	132958	0	True				
ANR	133950	ParameterType	FILE *		132958	0					
ANR	133951	Identifier	xmlout		132958	1					
ANR	133952	Parameter	opj_tcp_t * tcp	1919:37:88449:88462	132958	1	True				
ANR	133953	ParameterType	opj_tcp_t *		132958	0					
ANR	133954	Identifier	tcp		132958	1					
ANR	133955	Parameter	int numcomps	1919:53:88465:88476	132958	2	True				
ANR	133956	ParameterType	int		132958	0					
ANR	133957	Identifier	numcomps		132958	1					
ANR	133958	CFGEntryNode	ENTRY		132958		True				
ANR	133959	CFGExitNode	EXIT		132958		True				
ANR	133960	Symbol	notes		132958						
ANR	133961	Symbol	* tccp -> stepsizes		132958						
ANR	133962	Symbol	j2k_default_tcp -> tccps		132958						
ANR	133963	Symbol	tccp -> stepsizes [ bandno ] . mant		132958						
ANR	133964	Symbol	* tcp		132958						
ANR	133965	Symbol	j2k_default_tcp		132958						
ANR	133966	Symbol	* bandno		132958						
ANR	133967	Symbol	tccp -> stepsizes [ 0 ] . expn		132958						
ANR	133968	Symbol	numbands		132958						
ANR	133969	Symbol	* * tccp		132958						
ANR	133970	Symbol	same_component_quantization		132958						
ANR	133971	Symbol	derived		132958						
ANR	133972	Symbol	J2K_MAXBANDS		132958						
ANR	133973	Symbol	numcomps		132958						
ANR	133974	Symbol	tcp		132958						
ANR	133975	Symbol	tccp -> stepsizes [ bandno ] . expn		132958						
ANR	133976	Symbol	tcp -> tccps		132958						
ANR	133977	Symbol	tccp -> qntsty		132958						
ANR	133978	Symbol	raw		132958						
ANR	133979	Symbol	tccp		132958						
ANR	133980	Symbol	tccp -> stepsizes		132958						
ANR	133981	Symbol	tccp -> numgbits		132958						
ANR	133982	Symbol	xmlout		132958						
ANR	133983	Symbol	compno		132958						
ANR	133984	Symbol	bandno		132958						
ANR	133985	Symbol	s		132958						
ANR	133986	Symbol	* tccp		132958						
ANR	133987	Symbol	firstcomp_tccp		132958						
ANR	133988	Symbol	spaces		132958						
ANR	133989	Symbol	* j2k_default_tcp		132958						
ANR	133990	Symbol	tccp -> stepsizes [ 0 ] . mant		132958						
ANR	133991	Function	same_component_quantization	2131:0:98451:100023							
ANR	133992	FunctionDef	"same_component_quantization (opj_tccp_t * tccp1 , opj_tccp_t * tccp2)"		133991	0					
ANR	133993	CompoundStatement		2132:0:98522:100023	133991	0					
ANR	133994	IdentifierDeclStatement	"int bandno , numbands ;"	2133:4:98528:98548	133991	0	True				
ANR	133995	IdentifierDecl	bandno		133991	0					
ANR	133996	IdentifierDeclType	int		133991	0					
ANR	133997	Identifier	bandno		133991	1					
ANR	133998	IdentifierDecl	numbands		133991	1					
ANR	133999	IdentifierDeclType	int		133991	0					
ANR	134000	Identifier	numbands		133991	1					
ANR	134001	IfStatement	if ( tccp1 -> qntsty != tccp2 -> qntsty )		133991	1					
ANR	134002	Condition	tccp1 -> qntsty != tccp2 -> qntsty	2135:8:98559:98588	133991	0	True				
ANR	134003	EqualityExpression	tccp1 -> qntsty != tccp2 -> qntsty		133991	0		!=			
ANR	134004	PtrMemberAccess	tccp1 -> qntsty		133991	0					
ANR	134005	Identifier	tccp1		133991	0					
ANR	134006	Identifier	qntsty		133991	1					
ANR	134007	PtrMemberAccess	tccp2 -> qntsty		133991	1					
ANR	134008	Identifier	tccp2		133991	0					
ANR	134009	Identifier	qntsty		133991	1					
ANR	134010	CompoundStatement		4:40:68:68	133991	1					
ANR	134011	ReturnStatement	return FALSE ;	2136:8:98601:98613	133991	0	True				
ANR	134012	Identifier	FALSE		133991	0					
ANR	134013	IfStatement	if ( tccp1 -> numgbits != tccp2 -> numgbits )		133991	2					
ANR	134014	Condition	tccp1 -> numgbits != tccp2 -> numgbits	2138:8:98629:98662	133991	0	True				
ANR	134015	EqualityExpression	tccp1 -> numgbits != tccp2 -> numgbits		133991	0		!=			
ANR	134016	PtrMemberAccess	tccp1 -> numgbits		133991	0					
ANR	134017	Identifier	tccp1		133991	0					
ANR	134018	Identifier	numgbits		133991	1					
ANR	134019	PtrMemberAccess	tccp2 -> numgbits		133991	1					
ANR	134020	Identifier	tccp2		133991	0					
ANR	134021	Identifier	numgbits		133991	1					
ANR	134022	CompoundStatement		7:44:142:142	133991	1					
ANR	134023	ReturnStatement	return FALSE ;	2139:8:98675:98687	133991	0	True				
ANR	134024	Identifier	FALSE		133991	0					
ANR	134025	SwitchStatement	switch ( tccp1 -> qntsty )		133991	3					
ANR	134026	Condition	tccp1 -> qntsty	2142:12:98708:98720	133991	0	True				
ANR	134027	PtrMemberAccess	tccp1 -> qntsty		133991	0					
ANR	134028	Identifier	tccp1		133991	0					
ANR	134029	Identifier	qntsty		133991	1					
ANR	134030	CompoundStatement		11:27:200:200	133991	1					
ANR	134031	Label	case J2K_CCP_QNTSTY_NOQNT :	2143:4:98729:98754	133991	0	True				
ANR	134032	Identifier	J2K_CCP_QNTSTY_NOQNT		133991	0					
ANR	134033	ExpressionStatement	numbands = J2K_MAXBANDS	2144:8:98764:98787	133991	1	True				
ANR	134034	AssignmentExpression	numbands = J2K_MAXBANDS		133991	0		=			
ANR	134035	Identifier	numbands		133991	0					
ANR	134036	Identifier	J2K_MAXBANDS		133991	1					
ANR	134037	ForStatement	for ( bandno = 0 ; bandno < numbands ; bandno ++ )		133991	2					
ANR	134038	ForInit	bandno = 0 ;	2146:13:98914:98924	133991	0	True				
ANR	134039	AssignmentExpression	bandno = 0		133991	0		=			
ANR	134040	Identifier	bandno		133991	0					
ANR	134041	PrimaryExpression	0		133991	1					
ANR	134042	Condition	bandno < numbands	2146:25:98926:98942	133991	1	True				
ANR	134043	RelationalExpression	bandno < numbands		133991	0		<			
ANR	134044	Identifier	bandno		133991	0					
ANR	134045	Identifier	numbands		133991	1					
ANR	134046	PostIncDecOperationExpression	bandno ++	2146:44:98945:98952	133991	2	True				
ANR	134047	Identifier	bandno		133991	0					
ANR	134048	IncDec	++		133991	1					
ANR	134049	CompoundStatement		15:54:432:432	133991	3					
ANR	134050	IfStatement	if ( tccp1 -> stepsizes [ bandno ] . expn == 0 )		133991	0					
ANR	134051	Condition	tccp1 -> stepsizes [ bandno ] . expn == 0	2147:16:98973:99006	133991	0	True				
ANR	134052	EqualityExpression	tccp1 -> stepsizes [ bandno ] . expn == 0		133991	0		==			
ANR	134053	MemberAccess	tccp1 -> stepsizes [ bandno ] . expn		133991	0					
ANR	134054	ArrayIndexing	tccp1 -> stepsizes [ bandno ]		133991	0					
ANR	134055	PtrMemberAccess	tccp1 -> stepsizes		133991	0					
ANR	134056	Identifier	tccp1		133991	0					
ANR	134057	Identifier	stepsizes		133991	1					
ANR	134058	Identifier	bandno		133991	1					
ANR	134059	Identifier	expn		133991	1					
ANR	134060	PrimaryExpression	0		133991	1					
ANR	134061	CompoundStatement		16:52:486:486	133991	1					
ANR	134062	BreakStatement	break ;	2148:16:99027:99032	133991	0	True				
ANR	134063	IfStatement	if ( tccp1 -> stepsizes [ bandno ] . expn != tccp2 -> stepsizes [ bandno ] . expn )		133991	1					
ANR	134064	Condition	tccp1 -> stepsizes [ bandno ] . expn != tccp2 -> stepsizes [ bandno ] . expn	2150:16:99064:99125	133991	0	True				
ANR	134065	EqualityExpression	tccp1 -> stepsizes [ bandno ] . expn != tccp2 -> stepsizes [ bandno ] . expn		133991	0		!=			
ANR	134066	MemberAccess	tccp1 -> stepsizes [ bandno ] . expn		133991	0					
ANR	134067	ArrayIndexing	tccp1 -> stepsizes [ bandno ]		133991	0					
ANR	134068	PtrMemberAccess	tccp1 -> stepsizes		133991	0					
ANR	134069	Identifier	tccp1		133991	0					
ANR	134070	Identifier	stepsizes		133991	1					
ANR	134071	Identifier	bandno		133991	1					
ANR	134072	Identifier	expn		133991	1					
ANR	134073	MemberAccess	tccp2 -> stepsizes [ bandno ] . expn		133991	1					
ANR	134074	ArrayIndexing	tccp2 -> stepsizes [ bandno ]		133991	0					
ANR	134075	PtrMemberAccess	tccp2 -> stepsizes		133991	0					
ANR	134076	Identifier	tccp2		133991	0					
ANR	134077	Identifier	stepsizes		133991	1					
ANR	134078	Identifier	bandno		133991	1					
ANR	134079	Identifier	expn		133991	1					
ANR	134080	CompoundStatement		19:80:605:605	133991	1					
ANR	134081	ReturnStatement	return FALSE ;	2151:16:99146:99158	133991	0	True				
ANR	134082	Identifier	FALSE		133991	0					
ANR	134083	BreakStatement	break ;	2154:8:99192:99197	133991	3	True				
ANR	134084	Label	case J2K_CCP_QNTSTY_SIQNT :	2155:4:99203:99228	133991	4	True				
ANR	134085	Identifier	J2K_CCP_QNTSTY_SIQNT		133991	0					
ANR	134086	IfStatement	if ( tccp1 -> stepsizes [ 0 ] . expn != tccp2 -> stepsizes [ 0 ] . expn || tccp1 -> stepsizes [ 0 ] . mant != tccp2 -> stepsizes [ 0 ] . mant )		133991	5					
ANR	134087	Condition	tccp1 -> stepsizes [ 0 ] . expn != tccp2 -> stepsizes [ 0 ] . expn || tccp1 -> stepsizes [ 0 ] . mant != tccp2 -> stepsizes [ 0 ] . mant	2157:12:99270:99393	133991	0	True				
ANR	134088	OrExpression	tccp1 -> stepsizes [ 0 ] . expn != tccp2 -> stepsizes [ 0 ] . expn || tccp1 -> stepsizes [ 0 ] . mant != tccp2 -> stepsizes [ 0 ] . mant		133991	0		||			
ANR	134089	EqualityExpression	tccp1 -> stepsizes [ 0 ] . expn != tccp2 -> stepsizes [ 0 ] . expn		133991	0		!=			
ANR	134090	MemberAccess	tccp1 -> stepsizes [ 0 ] . expn		133991	0					
ANR	134091	ArrayIndexing	tccp1 -> stepsizes [ 0 ]		133991	0					
ANR	134092	PtrMemberAccess	tccp1 -> stepsizes		133991	0					
ANR	134093	Identifier	tccp1		133991	0					
ANR	134094	Identifier	stepsizes		133991	1					
ANR	134095	PrimaryExpression	0		133991	1					
ANR	134096	Identifier	expn		133991	1					
ANR	134097	MemberAccess	tccp2 -> stepsizes [ 0 ] . expn		133991	1					
ANR	134098	ArrayIndexing	tccp2 -> stepsizes [ 0 ]		133991	0					
ANR	134099	PtrMemberAccess	tccp2 -> stepsizes		133991	0					
ANR	134100	Identifier	tccp2		133991	0					
ANR	134101	Identifier	stepsizes		133991	1					
ANR	134102	PrimaryExpression	0		133991	1					
ANR	134103	Identifier	expn		133991	1					
ANR	134104	EqualityExpression	tccp1 -> stepsizes [ 0 ] . mant != tccp2 -> stepsizes [ 0 ] . mant		133991	1		!=			
ANR	134105	MemberAccess	tccp1 -> stepsizes [ 0 ] . mant		133991	0					
ANR	134106	ArrayIndexing	tccp1 -> stepsizes [ 0 ]		133991	0					
ANR	134107	PtrMemberAccess	tccp1 -> stepsizes		133991	0					
ANR	134108	Identifier	tccp1		133991	0					
ANR	134109	Identifier	stepsizes		133991	1					
ANR	134110	PrimaryExpression	0		133991	1					
ANR	134111	Identifier	mant		133991	1					
ANR	134112	MemberAccess	tccp2 -> stepsizes [ 0 ] . mant		133991	1					
ANR	134113	ArrayIndexing	tccp2 -> stepsizes [ 0 ]		133991	0					
ANR	134114	PtrMemberAccess	tccp2 -> stepsizes		133991	0					
ANR	134115	Identifier	tccp2		133991	0					
ANR	134116	Identifier	stepsizes		133991	1					
ANR	134117	PrimaryExpression	0		133991	1					
ANR	134118	Identifier	mant		133991	1					
ANR	134119	CompoundStatement		27:70:873:873	133991	1					
ANR	134120	ReturnStatement	return FALSE ;	2159:12:99410:99422	133991	0	True				
ANR	134121	Identifier	FALSE		133991	0					
ANR	134122	BreakStatement	break ;	2162:8:99522:99527	133991	6	True				
ANR	134123	Label	default :	2164:4:99534:99541	133991	7	True				
ANR	134124	Identifier	default		133991	0					
ANR	134125	ExpressionStatement	numbands = J2K_MAXBANDS	2165:8:99578:99601	133991	8	True				
ANR	134126	AssignmentExpression	numbands = J2K_MAXBANDS		133991	0		=			
ANR	134127	Identifier	numbands		133991	0					
ANR	134128	Identifier	J2K_MAXBANDS		133991	1					
ANR	134129	ForStatement	for ( bandno = 0 ; bandno < numbands ; bandno ++ )		133991	9					
ANR	134130	ForInit	bandno = 0 ;	2167:13:99726:99736	133991	0	True				
ANR	134131	AssignmentExpression	bandno = 0		133991	0		=			
ANR	134132	Identifier	bandno		133991	0					
ANR	134133	PrimaryExpression	0		133991	1					
ANR	134134	Condition	bandno < numbands	2167:25:99738:99754	133991	1	True				
ANR	134135	RelationalExpression	bandno < numbands		133991	0		<			
ANR	134136	Identifier	bandno		133991	0					
ANR	134137	Identifier	numbands		133991	1					
ANR	134138	PostIncDecOperationExpression	bandno ++	2167:44:99757:99764	133991	2	True				
ANR	134139	Identifier	bandno		133991	0					
ANR	134140	IncDec	++		133991	1					
ANR	134141	CompoundStatement		36:54:1244:1244	133991	3					
ANR	134142	IfStatement	if ( tccp1 -> stepsizes [ bandno ] . expn != tccp2 -> stepsizes [ bandno ] . expn || tccp1 -> stepsizes [ bandno ] . mant != tccp2 -> stepsizes [ bandno ] . mant )		133991	0					
ANR	134143	Condition	tccp1 -> stepsizes [ bandno ] . expn != tccp2 -> stepsizes [ bandno ] . expn || tccp1 -> stepsizes [ bandno ] . mant != tccp2 -> stepsizes [ bandno ] . mant	2168:16:99785:99932	133991	0	True				
ANR	134144	OrExpression	tccp1 -> stepsizes [ bandno ] . expn != tccp2 -> stepsizes [ bandno ] . expn || tccp1 -> stepsizes [ bandno ] . mant != tccp2 -> stepsizes [ bandno ] . mant		133991	0		||			
ANR	134145	EqualityExpression	tccp1 -> stepsizes [ bandno ] . expn != tccp2 -> stepsizes [ bandno ] . expn		133991	0		!=			
ANR	134146	MemberAccess	tccp1 -> stepsizes [ bandno ] . expn		133991	0					
ANR	134147	ArrayIndexing	tccp1 -> stepsizes [ bandno ]		133991	0					
ANR	134148	PtrMemberAccess	tccp1 -> stepsizes		133991	0					
ANR	134149	Identifier	tccp1		133991	0					
ANR	134150	Identifier	stepsizes		133991	1					
ANR	134151	Identifier	bandno		133991	1					
ANR	134152	Identifier	expn		133991	1					
ANR	134153	MemberAccess	tccp2 -> stepsizes [ bandno ] . expn		133991	1					
ANR	134154	ArrayIndexing	tccp2 -> stepsizes [ bandno ]		133991	0					
ANR	134155	PtrMemberAccess	tccp2 -> stepsizes		133991	0					
ANR	134156	Identifier	tccp2		133991	0					
ANR	134157	Identifier	stepsizes		133991	1					
ANR	134158	Identifier	bandno		133991	1					
ANR	134159	Identifier	expn		133991	1					
ANR	134160	EqualityExpression	tccp1 -> stepsizes [ bandno ] . mant != tccp2 -> stepsizes [ bandno ] . mant		133991	1		!=			
ANR	134161	MemberAccess	tccp1 -> stepsizes [ bandno ] . mant		133991	0					
ANR	134162	ArrayIndexing	tccp1 -> stepsizes [ bandno ]		133991	0					
ANR	134163	PtrMemberAccess	tccp1 -> stepsizes		133991	0					
ANR	134164	Identifier	tccp1		133991	0					
ANR	134165	Identifier	stepsizes		133991	1					
ANR	134166	Identifier	bandno		133991	1					
ANR	134167	Identifier	mant		133991	1					
ANR	134168	MemberAccess	tccp2 -> stepsizes [ bandno ] . mant		133991	1					
ANR	134169	ArrayIndexing	tccp2 -> stepsizes [ bandno ]		133991	0					
ANR	134170	PtrMemberAccess	tccp2 -> stepsizes		133991	0					
ANR	134171	Identifier	tccp2		133991	0					
ANR	134172	Identifier	stepsizes		133991	1					
ANR	134173	Identifier	bandno		133991	1					
ANR	134174	Identifier	mant		133991	1					
ANR	134175	ExpressionStatement		2169:83:99934:99934	133991	1	True				
ANR	134176	ReturnStatement	return FALSE ;	2170:12:99948:99960	133991	1	True				
ANR	134177	Identifier	FALSE		133991	0					
ANR	134178	BreakStatement	break ;	2172:8:99980:99985	133991	10	True				
ANR	134179	ReturnStatement	return TRUE ;	2174:4:100010:100021	133991	4	True				
ANR	134180	Identifier	TRUE		133991	0					
ANR	134181	ReturnType	BOOL		133991	1					
ANR	134182	Identifier	same_component_quantization		133991	2					
ANR	134183	ParameterList	"opj_tccp_t * tccp1 , opj_tccp_t * tccp2"		133991	3					
ANR	134184	Parameter	opj_tccp_t * tccp1	2131:33:98484:98500	133991	0	True				
ANR	134185	ParameterType	opj_tccp_t *		133991	0					
ANR	134186	Identifier	tccp1		133991	1					
ANR	134187	Parameter	opj_tccp_t * tccp2	2131:52:98503:98519	133991	1	True				
ANR	134188	ParameterType	opj_tccp_t *		133991	0					
ANR	134189	Identifier	tccp2		133991	1					
ANR	134190	CFGEntryNode	ENTRY		133991		True				
ANR	134191	CFGExitNode	EXIT		133991		True				
ANR	134192	Symbol	tccp1 -> numgbits		133991						
ANR	134193	Symbol	tccp2 -> numgbits		133991						
ANR	134194	Symbol	tccp1		133991						
ANR	134195	Symbol	tccp2		133991						
ANR	134196	Symbol	tccp1 -> stepsizes		133991						
ANR	134197	Symbol	* tccp2		133991						
ANR	134198	Symbol	tccp2 -> stepsizes		133991						
ANR	134199	Symbol	* bandno		133991						
ANR	134200	Symbol	* tccp1 -> stepsizes		133991						
ANR	134201	Symbol	numbands		133991						
ANR	134202	Symbol	tccp1 -> stepsizes [ bandno ] . expn		133991						
ANR	134203	Symbol	tccp2 -> stepsizes [ bandno ] . mant		133991						
ANR	134204	Symbol	tccp1 -> qntsty		133991						
ANR	134205	Symbol	* tccp2 -> stepsizes		133991						
ANR	134206	Symbol	J2K_MAXBANDS		133991						
ANR	134207	Symbol	tccp2 -> stepsizes [ bandno ] . expn		133991						
ANR	134208	Symbol	tccp1 -> stepsizes [ 0 ] . mant		133991						
ANR	134209	Symbol	tccp2 -> stepsizes [ 0 ] . expn		133991						
ANR	134210	Symbol	tccp1 -> stepsizes [ bandno ] . mant		133991						
ANR	134211	Symbol	TRUE		133991						
ANR	134212	Symbol	* tccp1		133991						
ANR	134213	Symbol	bandno		133991						
ANR	134214	Symbol	tccp2 -> stepsizes [ 0 ] . mant		133991						
ANR	134215	Symbol	tccp2 -> qntsty		133991						
ANR	134216	Symbol	* * tccp1		133991						
ANR	134217	Symbol	tccp1 -> stepsizes [ 0 ] . expn		133991						
ANR	134218	Symbol	FALSE		133991						
ANR	134219	Symbol	* * tccp2		133991						
ANR	134220	Function	xml_out_frame_rgn	2179:0:100047:101716							
ANR	134221	FunctionDef	"xml_out_frame_rgn (FILE * xmlout , opj_tcp_t * tcp , int numcomps)"		134220	0					
ANR	134222	CompoundStatement		2180:0:100114:101716	134220	0					
ANR	134223	IdentifierDeclStatement	"int compno , SPrgn ;"	2181:4:100120:100137	134220	0	True				
ANR	134224	IdentifierDecl	compno		134220	0					
ANR	134225	IdentifierDeclType	int		134220	0					
ANR	134226	Identifier	compno		134220	1					
ANR	134227	IdentifierDecl	SPrgn		134220	1					
ANR	134228	IdentifierDeclType	int		134220	0					
ANR	134229	Identifier	SPrgn		134220	1					
ANR	134230	IdentifierDeclStatement	"char spaces [ 13 ] = ""            "" ;"	2183:4:100223:100255	134220	1	True				
ANR	134231	IdentifierDecl	"spaces [ 13 ] = ""            """		134220	0					
ANR	134232	IdentifierDeclType	char [ 13 ]		134220	0					
ANR	134233	Identifier	spaces		134220	1					
ANR	134234	PrimaryExpression	13		134220	2					
ANR	134235	AssignmentExpression	"spaces [ 13 ] = ""            """		134220	3		=			
ANR	134236	Identifier	spaces		134220	0					
ANR	134237	PrimaryExpression	"""            """		134220	1					
ANR	134238	IdentifierDeclStatement	char * s = spaces ;	2184:4:100288:100304	134220	2	True				
ANR	134239	IdentifierDecl	* s = spaces		134220	0					
ANR	134240	IdentifierDeclType	char *		134220	0					
ANR	134241	Identifier	s		134220	1					
ANR	134242	AssignmentExpression	* s = spaces		134220	2		=			
ANR	134243	Identifier	spaces		134220	0					
ANR	134244	Identifier	spaces		134220	1					
ANR	134245	IfStatement	if ( tcp == j2k_default_tcp )		134220	3					
ANR	134246	Condition	tcp == j2k_default_tcp	2185:8:100314:100335	134220	0	True				
ANR	134247	EqualityExpression	tcp == j2k_default_tcp		134220	0		==			
ANR	134248	Identifier	tcp		134220	0					
ANR	134249	Identifier	j2k_default_tcp		134220	1					
ANR	134250	CompoundStatement		6:32:223:223	134220	1					
ANR	134251	ExpressionStatement	s ++	2186:8:100348:100351	134220	0	True				
ANR	134252	PostIncDecOperationExpression	s ++		134220	0					
ANR	134253	Identifier	s		134220	0					
ANR	134254	IncDec	++		134220	1					
ANR	134255	ExpressionStatement	s ++	2187:8:100361:100364	134220	1	True				
ANR	134256	PostIncDecOperationExpression	s ++		134220	0					
ANR	134257	Identifier	s		134220	0					
ANR	134258	IncDec	++		134220	1					
ANR	134259	ForStatement	for ( compno = 0 ; compno < numcomps ; compno ++ )		134220	4					
ANR	134260	ForInit	compno = 0 ;	2190:9:100419:100429	134220	0	True				
ANR	134261	AssignmentExpression	compno = 0		134220	0		=			
ANR	134262	Identifier	compno		134220	0					
ANR	134263	PrimaryExpression	0		134220	1					
ANR	134264	Condition	compno < numcomps	2190:21:100431:100447	134220	1	True				
ANR	134265	RelationalExpression	compno < numcomps		134220	0		<			
ANR	134266	Identifier	compno		134220	0					
ANR	134267	Identifier	numcomps		134220	1					
ANR	134268	PostIncDecOperationExpression	compno ++	2190:40:100450:100457	134220	2	True				
ANR	134269	Identifier	compno		134220	0					
ANR	134270	IncDec	++		134220	1					
ANR	134271	CompoundStatement		11:50:345:345	134220	3					
ANR	134272	ExpressionStatement	SPrgn = tcp -> tccps [ compno ] . roishift	2191:8:100470:100505	134220	0	True				
ANR	134273	AssignmentExpression	SPrgn = tcp -> tccps [ compno ] . roishift		134220	0		=			
ANR	134274	Identifier	SPrgn		134220	0					
ANR	134275	MemberAccess	tcp -> tccps [ compno ] . roishift		134220	1					
ANR	134276	ArrayIndexing	tcp -> tccps [ compno ]		134220	0					
ANR	134277	PtrMemberAccess	tcp -> tccps		134220	0					
ANR	134278	Identifier	tcp		134220	0					
ANR	134279	Identifier	tccps		134220	1					
ANR	134280	Identifier	compno		134220	1					
ANR	134281	Identifier	roishift		134220	1					
ANR	134282	IfStatement	if ( SPrgn == 0 )		134220	1					
ANR	134283	Condition	SPrgn == 0	2192:12:100542:100551	134220	0	True				
ANR	134284	EqualityExpression	SPrgn == 0		134220	0		==			
ANR	134285	Identifier	SPrgn		134220	0					
ANR	134286	PrimaryExpression	0		134220	1					
ANR	134287	CompoundStatement		13:24:439:439	134220	1					
ANR	134288	ContinueStatement	continue ;	2193:12:100568:100576	134220	0	True				
ANR	134289	ExpressionStatement	"fprintf ( xmlout , ""%s<RegionOfInterest Marker=\\""RGN\\"">\\n"" , s )"	2196:8:100625:100703	134220	2	True				
ANR	134290	CallExpression	"fprintf ( xmlout , ""%s<RegionOfInterest Marker=\\""RGN\\"">\\n"" , s )"		134220	0					
ANR	134291	Callee	fprintf		134220	0					
ANR	134292	Identifier	fprintf		134220	0					
ANR	134293	ArgumentList	xmlout		134220	1					
ANR	134294	Argument	xmlout		134220	0					
ANR	134295	Identifier	xmlout		134220	0					
ANR	134296	Argument	"""%s<RegionOfInterest Marker=\\""RGN\\"">\\n"""		134220	1					
ANR	134297	PrimaryExpression	"""%s<RegionOfInterest Marker=\\""RGN\\"">\\n"""		134220	0					
ANR	134298	Argument	s		134220	2					
ANR	134299	Identifier	s		134220	0					
ANR	134300	IfStatement	if ( notes )		134220	3					
ANR	134301	Condition	notes	2198:12:100772:100776	134220	0	True				
ANR	134302	Identifier	notes		134220	0					
ANR	134303	CompoundStatement		19:19:664:664	134220	1					
ANR	134304	ExpressionStatement	"fprintf ( xmlout , ""%s<!-- See Crgn below for zero-based component number. -->\\n"" , s )"	2199:12:100793:100896	134220	0	True				
ANR	134305	CallExpression	"fprintf ( xmlout , ""%s<!-- See Crgn below for zero-based component number. -->\\n"" , s )"		134220	0					
ANR	134306	Callee	fprintf		134220	0					
ANR	134307	Identifier	fprintf		134220	0					
ANR	134308	ArgumentList	xmlout		134220	1					
ANR	134309	Argument	xmlout		134220	0					
ANR	134310	Identifier	xmlout		134220	0					
ANR	134311	Argument	"""%s<!-- See Crgn below for zero-based component number. -->\\n"""		134220	1					
ANR	134312	PrimaryExpression	"""%s<!-- See Crgn below for zero-based component number. -->\\n"""		134220	0					
ANR	134313	Argument	s		134220	2					
ANR	134314	Identifier	s		134220	0					
ANR	134315	ExpressionStatement	"fprintf ( xmlout , ""%s  <Srgn>0</Srgn>\\n"" , s )"	2203:8:100964:101009	134220	4	True				
ANR	134316	CallExpression	"fprintf ( xmlout , ""%s  <Srgn>0</Srgn>\\n"" , s )"		134220	0					
ANR	134317	Callee	fprintf		134220	0					
ANR	134318	Identifier	fprintf		134220	0					
ANR	134319	ArgumentList	xmlout		134220	1					
ANR	134320	Argument	xmlout		134220	0					
ANR	134321	Identifier	xmlout		134220	0					
ANR	134322	Argument	"""%s  <Srgn>0</Srgn>\\n"""		134220	1					
ANR	134323	PrimaryExpression	"""%s  <Srgn>0</Srgn>\\n"""		134220	0					
ANR	134324	Argument	s		134220	2					
ANR	134325	Identifier	s		134220	0					
ANR	134326	IfStatement	if ( notes )		134220	5					
ANR	134327	Condition	notes	2204:12:101036:101040	134220	0	True				
ANR	134328	Identifier	notes		134220	0					
ANR	134329	CompoundStatement		25:19:928:928	134220	1					
ANR	134330	ExpressionStatement	"fprintf ( xmlout , ""%s  <!-- Srgn is ROI style.  Only style=0 defined: Implicit ROI (max. shift) -->\\n"" , s )"	2205:12:101057:101201	134220	0	True				
ANR	134331	CallExpression	"fprintf ( xmlout , ""%s  <!-- Srgn is ROI style.  Only style=0 defined: Implicit ROI (max. shift) -->\\n"" , s )"		134220	0					
ANR	134332	Callee	fprintf		134220	0					
ANR	134333	Identifier	fprintf		134220	0					
ANR	134334	ArgumentList	xmlout		134220	1					
ANR	134335	Argument	xmlout		134220	0					
ANR	134336	Identifier	xmlout		134220	0					
ANR	134337	Argument	"""%s  <!-- Srgn is ROI style.  Only style=0 defined: Implicit ROI (max. shift) -->\\n"""		134220	1					
ANR	134338	PrimaryExpression	"""%s  <!-- Srgn is ROI style.  Only style=0 defined: Implicit ROI (max. shift) -->\\n"""		134220	0					
ANR	134339	Argument	s		134220	2					
ANR	134340	Identifier	s		134220	0					
ANR	134341	ExpressionStatement	"fprintf ( xmlout , ""%s  <Crgn>%d</Crgn>\\n"" , s , compno )"	2209:8:101221:101275	134220	6	True				
ANR	134342	CallExpression	"fprintf ( xmlout , ""%s  <Crgn>%d</Crgn>\\n"" , s , compno )"		134220	0					
ANR	134343	Callee	fprintf		134220	0					
ANR	134344	Identifier	fprintf		134220	0					
ANR	134345	ArgumentList	xmlout		134220	1					
ANR	134346	Argument	xmlout		134220	0					
ANR	134347	Identifier	xmlout		134220	0					
ANR	134348	Argument	"""%s  <Crgn>%d</Crgn>\\n"""		134220	1					
ANR	134349	PrimaryExpression	"""%s  <Crgn>%d</Crgn>\\n"""		134220	0					
ANR	134350	Argument	s		134220	2					
ANR	134351	Identifier	s		134220	0					
ANR	134352	Argument	compno		134220	3					
ANR	134353	Identifier	compno		134220	0					
ANR	134354	ExpressionStatement	"fprintf ( xmlout , ""%s  <SPrgn>%d</SPrgn>\\n"" , s , SPrgn )"	2210:8:101304:101359	134220	7	True				
ANR	134355	CallExpression	"fprintf ( xmlout , ""%s  <SPrgn>%d</SPrgn>\\n"" , s , SPrgn )"		134220	0					
ANR	134356	Callee	fprintf		134220	0					
ANR	134357	Identifier	fprintf		134220	0					
ANR	134358	ArgumentList	xmlout		134220	1					
ANR	134359	Argument	xmlout		134220	0					
ANR	134360	Identifier	xmlout		134220	0					
ANR	134361	Argument	"""%s  <SPrgn>%d</SPrgn>\\n"""		134220	1					
ANR	134362	PrimaryExpression	"""%s  <SPrgn>%d</SPrgn>\\n"""		134220	0					
ANR	134363	Argument	s		134220	2					
ANR	134364	Identifier	s		134220	0					
ANR	134365	Argument	SPrgn		134220	3					
ANR	134366	Identifier	SPrgn		134220	0					
ANR	134367	IfStatement	if ( notes )		134220	8					
ANR	134368	Condition	notes	2211:12:101386:101390	134220	0	True				
ANR	134369	Identifier	notes		134220	0					
ANR	134370	CompoundStatement		32:19:1278:1278	134220	1					
ANR	134371	ExpressionStatement	"fprintf ( xmlout , ""%s  <!-- SPrgn is implicit ROI shift, i.e., binary shifting of ROI coefficients above background. -->\\n"" , s )"	2212:12:101407:101572	134220	0	True				
ANR	134372	CallExpression	"fprintf ( xmlout , ""%s  <!-- SPrgn is implicit ROI shift, i.e., binary shifting of ROI coefficients above background. -->\\n"" , s )"		134220	0					
ANR	134373	Callee	fprintf		134220	0					
ANR	134374	Identifier	fprintf		134220	0					
ANR	134375	ArgumentList	xmlout		134220	1					
ANR	134376	Argument	xmlout		134220	0					
ANR	134377	Identifier	xmlout		134220	0					
ANR	134378	Argument	"""%s  <!-- SPrgn is implicit ROI shift, i.e., binary shifting of ROI coefficients above background. -->\\n"""		134220	1					
ANR	134379	PrimaryExpression	"""%s  <!-- SPrgn is implicit ROI shift, i.e., binary shifting of ROI coefficients above background. -->\\n"""		134220	0					
ANR	134380	Argument	s		134220	2					
ANR	134381	Identifier	s		134220	0					
ANR	134382	ExpressionStatement	"fprintf ( xmlout , ""</RegionOfInterest\\n"" , s )"	2216:8:101592:101653	134220	9	True				
ANR	134383	CallExpression	"fprintf ( xmlout , ""</RegionOfInterest\\n"" , s )"		134220	0					
ANR	134384	Callee	fprintf		134220	0					
ANR	134385	Identifier	fprintf		134220	0					
ANR	134386	ArgumentList	xmlout		134220	1					
ANR	134387	Argument	xmlout		134220	0					
ANR	134388	Identifier	xmlout		134220	0					
ANR	134389	Argument	"""</RegionOfInterest\\n"""		134220	1					
ANR	134390	PrimaryExpression	"""</RegionOfInterest\\n"""		134220	0					
ANR	134391	Argument	s		134220	2					
ANR	134392	Identifier	s		134220	0					
ANR	134393	ReturnType	void		134220	1					
ANR	134394	Identifier	xml_out_frame_rgn		134220	2					
ANR	134395	ParameterList	"FILE * xmlout , opj_tcp_t * tcp , int numcomps"		134220	3					
ANR	134396	Parameter	FILE * xmlout	2179:23:100070:100081	134220	0	True				
ANR	134397	ParameterType	FILE *		134220	0					
ANR	134398	Identifier	xmlout		134220	1					
ANR	134399	Parameter	opj_tcp_t * tcp	2179:37:100084:100097	134220	1	True				
ANR	134400	ParameterType	opj_tcp_t *		134220	0					
ANR	134401	Identifier	tcp		134220	1					
ANR	134402	Parameter	int numcomps	2179:53:100100:100111	134220	2	True				
ANR	134403	ParameterType	int		134220	0					
ANR	134404	Identifier	numcomps		134220	1					
ANR	134405	CFGEntryNode	ENTRY		134220		True				
ANR	134406	CFGExitNode	EXIT		134220		True				
ANR	134407	Symbol	tcp		134220						
ANR	134408	Symbol	notes		134220						
ANR	134409	Symbol	tcp -> tccps		134220						
ANR	134410	Symbol	SPrgn		134220						
ANR	134411	Symbol	* tcp		134220						
ANR	134412	Symbol	xmlout		134220						
ANR	134413	Symbol	compno		134220						
ANR	134414	Symbol	* compno		134220						
ANR	134415	Symbol	j2k_default_tcp		134220						
ANR	134416	Symbol	s		134220						
ANR	134417	Symbol	* * tcp		134220						
ANR	134418	Symbol	spaces		134220						
ANR	134419	Symbol	* tcp -> tccps		134220						
ANR	134420	Symbol	tcp -> tccps [ compno ] . roishift		134220						
ANR	134421	Symbol	numcomps		134220						
ANR	134422	Function	xml_out_frame_poc	2223:0:101740:104935							
ANR	134423	FunctionDef	"xml_out_frame_poc (FILE * xmlout , opj_tcp_t * tcp)"		134422	0					
ANR	134424	CompoundStatement		2225:0:101849:104935	134422	0					
ANR	134425	IdentifierDeclStatement	int i ;	2227:4:101888:101893	134422	0	True				
ANR	134426	IdentifierDecl	i		134422	0					
ANR	134427	IdentifierDeclType	int		134422	0					
ANR	134428	Identifier	i		134422	1					
ANR	134429	IdentifierDeclStatement	opj_poc_t * poc ;	2228:4:101899:101913	134422	1	True				
ANR	134430	IdentifierDecl	* poc		134422	0					
ANR	134431	IdentifierDeclType	opj_poc_t *		134422	0					
ANR	134432	Identifier	poc		134422	1					
ANR	134433	IdentifierDeclStatement	"char spaces [ 13 ] = ""            "" ;"	2229:4:101919:101951	134422	2	True				
ANR	134434	IdentifierDecl	"spaces [ 13 ] = ""            """		134422	0					
ANR	134435	IdentifierDeclType	char [ 13 ]		134422	0					
ANR	134436	Identifier	spaces		134422	1					
ANR	134437	PrimaryExpression	13		134422	2					
ANR	134438	AssignmentExpression	"spaces [ 13 ] = ""            """		134422	3		=			
ANR	134439	Identifier	spaces		134422	0					
ANR	134440	PrimaryExpression	"""            """		134422	1					
ANR	134441	IdentifierDeclStatement	char * s = spaces ;	2230:4:101984:102000	134422	3	True				
ANR	134442	IdentifierDecl	* s = spaces		134422	0					
ANR	134443	IdentifierDeclType	char *		134422	0					
ANR	134444	Identifier	s		134422	1					
ANR	134445	AssignmentExpression	* s = spaces		134422	2		=			
ANR	134446	Identifier	spaces		134422	0					
ANR	134447	Identifier	spaces		134422	1					
ANR	134448	IfStatement	if ( tcp == j2k_default_tcp )		134422	4					
ANR	134449	Condition	tcp == j2k_default_tcp	2231:8:102010:102031	134422	0	True				
ANR	134450	EqualityExpression	tcp == j2k_default_tcp		134422	0		==			
ANR	134451	Identifier	tcp		134422	0					
ANR	134452	Identifier	j2k_default_tcp		134422	1					
ANR	134453	CompoundStatement		7:32:184:184	134422	1					
ANR	134454	ExpressionStatement	s ++	2232:8:102044:102047	134422	0	True				
ANR	134455	PostIncDecOperationExpression	s ++		134422	0					
ANR	134456	Identifier	s		134422	0					
ANR	134457	IncDec	++		134422	1					
ANR	134458	ExpressionStatement	s ++	2233:8:102057:102060	134422	1	True				
ANR	134459	PostIncDecOperationExpression	s ++		134422	0					
ANR	134460	Identifier	s		134422	0					
ANR	134461	IncDec	++		134422	1					
ANR	134462	IfStatement	if ( tcp -> POC != 1 )		134422	5					
ANR	134463	Condition	tcp -> POC != 1	2236:8:102114:102126	134422	0	True				
ANR	134464	EqualityExpression	tcp -> POC != 1		134422	0		!=			
ANR	134465	PtrMemberAccess	tcp -> POC		134422	0					
ANR	134466	Identifier	tcp		134422	0					
ANR	134467	Identifier	POC		134422	1					
ANR	134468	PrimaryExpression	1		134422	1					
ANR	134469	CompoundStatement		12:23:279:279	134422	1					
ANR	134470	ReturnStatement	return ;	2237:8:102139:102145	134422	0	True				
ANR	134471	ExpressionStatement	"fprintf ( xmlout , ""%s<ProgressionOrderChange Marker=\\""POC\\"">\\n"" , s )"	2240:4:102179:102259	134422	6	True				
ANR	134472	CallExpression	"fprintf ( xmlout , ""%s<ProgressionOrderChange Marker=\\""POC\\"">\\n"" , s )"		134422	0					
ANR	134473	Callee	fprintf		134422	0					
ANR	134474	Identifier	fprintf		134422	0					
ANR	134475	ArgumentList	xmlout		134422	1					
ANR	134476	Argument	xmlout		134422	0					
ANR	134477	Identifier	xmlout		134422	0					
ANR	134478	Argument	"""%s<ProgressionOrderChange Marker=\\""POC\\"">\\n"""		134422	1					
ANR	134479	PrimaryExpression	"""%s<ProgressionOrderChange Marker=\\""POC\\"">\\n"""		134422	0					
ANR	134480	Argument	s		134422	2					
ANR	134481	Identifier	s		134422	0					
ANR	134482	ForStatement	for ( i = 0 ; i < tcp -> numpocs ; i ++ )		134422	7					
ANR	134483	ForInit	i = 0 ;	2246:9:102558:102563	134422	0	True				
ANR	134484	AssignmentExpression	i = 0		134422	0		=			
ANR	134485	Identifier	i		134422	0					
ANR	134486	PrimaryExpression	0		134422	1					
ANR	134487	Condition	i < tcp -> numpocs	2246:16:102565:102580	134422	1	True				
ANR	134488	RelationalExpression	i < tcp -> numpocs		134422	0		<			
ANR	134489	Identifier	i		134422	0					
ANR	134490	PtrMemberAccess	tcp -> numpocs		134422	1					
ANR	134491	Identifier	tcp		134422	0					
ANR	134492	Identifier	numpocs		134422	1					
ANR	134493	PostIncDecOperationExpression	i ++	2246:34:102583:102585	134422	2	True				
ANR	134494	Identifier	i		134422	0					
ANR	134495	IncDec	++		134422	1					
ANR	134496	CompoundStatement		22:39:738:738	134422	3					
ANR	134497	ExpressionStatement	poc = & tcp -> pocs [ i ]	2247:8:102598:102617	134422	0	True				
ANR	134498	AssignmentExpression	poc = & tcp -> pocs [ i ]		134422	0		=			
ANR	134499	Identifier	poc		134422	0					
ANR	134500	UnaryOperationExpression	& tcp -> pocs [ i ]		134422	1					
ANR	134501	UnaryOperator	&		134422	0					
ANR	134502	ArrayIndexing	tcp -> pocs [ i ]		134422	1					
ANR	134503	PtrMemberAccess	tcp -> pocs		134422	0					
ANR	134504	Identifier	tcp		134422	0					
ANR	134505	Identifier	pocs		134422	1					
ANR	134506	Identifier	i		134422	1					
ANR	134507	ExpressionStatement	"fprintf ( xmlout , ""%s  <Progression Num=\\""%d\\"">\\n"" , s , i + 1 )"	2248:8:102627:102687	134422	1	True				
ANR	134508	CallExpression	"fprintf ( xmlout , ""%s  <Progression Num=\\""%d\\"">\\n"" , s , i + 1 )"		134422	0					
ANR	134509	Callee	fprintf		134422	0					
ANR	134510	Identifier	fprintf		134422	0					
ANR	134511	ArgumentList	xmlout		134422	1					
ANR	134512	Argument	xmlout		134422	0					
ANR	134513	Identifier	xmlout		134422	0					
ANR	134514	Argument	"""%s  <Progression Num=\\""%d\\"">\\n"""		134422	1					
ANR	134515	PrimaryExpression	"""%s  <Progression Num=\\""%d\\"">\\n"""		134422	0					
ANR	134516	Argument	s		134422	2					
ANR	134517	Identifier	s		134422	0					
ANR	134518	Argument	i + 1		134422	3					
ANR	134519	AdditiveExpression	i + 1		134422	0		+			
ANR	134520	Identifier	i		134422	0					
ANR	134521	PrimaryExpression	1		134422	1					
ANR	134522	ExpressionStatement	"fprintf ( xmlout , ""%S    <RSpoc>%d</RSpoc>\\n"" , s , poc -> resno0 )"	2249:8:102697:102774	134422	2	True				
ANR	134523	CallExpression	"fprintf ( xmlout , ""%S    <RSpoc>%d</RSpoc>\\n"" , s , poc -> resno0 )"		134422	0					
ANR	134524	Callee	fprintf		134422	0					
ANR	134525	Identifier	fprintf		134422	0					
ANR	134526	ArgumentList	xmlout		134422	1					
ANR	134527	Argument	xmlout		134422	0					
ANR	134528	Identifier	xmlout		134422	0					
ANR	134529	Argument	"""%S    <RSpoc>%d</RSpoc>\\n"""		134422	1					
ANR	134530	PrimaryExpression	"""%S    <RSpoc>%d</RSpoc>\\n"""		134422	0					
ANR	134531	Argument	s		134422	2					
ANR	134532	Identifier	s		134422	0					
ANR	134533	Argument	poc -> resno0		134422	3					
ANR	134534	PtrMemberAccess	poc -> resno0		134422	0					
ANR	134535	Identifier	poc		134422	0					
ANR	134536	Identifier	resno0		134422	1					
ANR	134537	IfStatement	if ( notes )		134422	3					
ANR	134538	Condition	notes	2251:12:102811:102815	134422	0	True				
ANR	134539	Identifier	notes		134422	0					
ANR	134540	CompoundStatement		27:19:968:968	134422	1					
ANR	134541	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Resolution level index (inclusive) for progression start. Range: 0 to 33 -->\\n"" , s )"	2252:12:102832:102983	134422	0	True				
ANR	134542	CallExpression	"fprintf ( xmlout , ""%s    <!-- Resolution level index (inclusive) for progression start. Range: 0 to 33 -->\\n"" , s )"		134422	0					
ANR	134543	Callee	fprintf		134422	0					
ANR	134544	Identifier	fprintf		134422	0					
ANR	134545	ArgumentList	xmlout		134422	1					
ANR	134546	Argument	xmlout		134422	0					
ANR	134547	Identifier	xmlout		134422	0					
ANR	134548	Argument	"""%s    <!-- Resolution level index (inclusive) for progression start. Range: 0 to 33 -->\\n"""		134422	1					
ANR	134549	PrimaryExpression	"""%s    <!-- Resolution level index (inclusive) for progression start. Range: 0 to 33 -->\\n"""		134422	0					
ANR	134550	Argument	s		134422	2					
ANR	134551	Identifier	s		134422	0					
ANR	134552	ExpressionStatement	"fprintf ( xmlout , ""%s    <CSpoc>%d</CSpoc>\\n"" , s , poc -> compno0 )"	2256:8:103003:103081	134422	4	True				
ANR	134553	CallExpression	"fprintf ( xmlout , ""%s    <CSpoc>%d</CSpoc>\\n"" , s , poc -> compno0 )"		134422	0					
ANR	134554	Callee	fprintf		134422	0					
ANR	134555	Identifier	fprintf		134422	0					
ANR	134556	ArgumentList	xmlout		134422	1					
ANR	134557	Argument	xmlout		134422	0					
ANR	134558	Identifier	xmlout		134422	0					
ANR	134559	Argument	"""%s    <CSpoc>%d</CSpoc>\\n"""		134422	1					
ANR	134560	PrimaryExpression	"""%s    <CSpoc>%d</CSpoc>\\n"""		134422	0					
ANR	134561	Argument	s		134422	2					
ANR	134562	Identifier	s		134422	0					
ANR	134563	Argument	poc -> compno0		134422	3					
ANR	134564	PtrMemberAccess	poc -> compno0		134422	0					
ANR	134565	Identifier	poc		134422	0					
ANR	134566	Identifier	compno0		134422	1					
ANR	134567	IfStatement	if ( notes )		134422	5					
ANR	134568	Condition	notes	2258:12:103153:103157	134422	0	True				
ANR	134569	Identifier	notes		134422	0					
ANR	134570	CompoundStatement		34:19:1310:1310	134422	1					
ANR	134571	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Component index (inclusive) for progression start. -->\\n"" , s )"	2259:12:103174:103283	134422	0	True				
ANR	134572	CallExpression	"fprintf ( xmlout , ""%s    <!-- Component index (inclusive) for progression start. -->\\n"" , s )"		134422	0					
ANR	134573	Callee	fprintf		134422	0					
ANR	134574	Identifier	fprintf		134422	0					
ANR	134575	ArgumentList	xmlout		134422	1					
ANR	134576	Argument	xmlout		134422	0					
ANR	134577	Identifier	xmlout		134422	0					
ANR	134578	Argument	"""%s    <!-- Component index (inclusive) for progression start. -->\\n"""		134422	1					
ANR	134579	PrimaryExpression	"""%s    <!-- Component index (inclusive) for progression start. -->\\n"""		134422	0					
ANR	134580	Argument	s		134422	2					
ANR	134581	Identifier	s		134422	0					
ANR	134582	ExpressionStatement	"fprintf ( xmlout , ""%s    <LYEpoc>%d</LYEpoc>\\n"" , s , poc -> layno1 )"	2262:8:103303:103382	134422	6	True				
ANR	134583	CallExpression	"fprintf ( xmlout , ""%s    <LYEpoc>%d</LYEpoc>\\n"" , s , poc -> layno1 )"		134422	0					
ANR	134584	Callee	fprintf		134422	0					
ANR	134585	Identifier	fprintf		134422	0					
ANR	134586	ArgumentList	xmlout		134422	1					
ANR	134587	Argument	xmlout		134422	0					
ANR	134588	Identifier	xmlout		134422	0					
ANR	134589	Argument	"""%s    <LYEpoc>%d</LYEpoc>\\n"""		134422	1					
ANR	134590	PrimaryExpression	"""%s    <LYEpoc>%d</LYEpoc>\\n"""		134422	0					
ANR	134591	Argument	s		134422	2					
ANR	134592	Identifier	s		134422	0					
ANR	134593	Argument	poc -> layno1		134422	3					
ANR	134594	PtrMemberAccess	poc -> layno1		134422	0					
ANR	134595	Identifier	poc		134422	0					
ANR	134596	Identifier	layno1		134422	1					
ANR	134597	IfStatement	if ( notes )		134422	7					
ANR	134598	Condition	notes	2264:12:103463:103467	134422	0	True				
ANR	134599	Identifier	notes		134422	0					
ANR	134600	CompoundStatement		40:19:1620:1620	134422	1					
ANR	134601	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Layer index (exclusive) for progression end. -->\\n"" , s )"	2265:12:103484:103587	134422	0	True				
ANR	134602	CallExpression	"fprintf ( xmlout , ""%s    <!-- Layer index (exclusive) for progression end. -->\\n"" , s )"		134422	0					
ANR	134603	Callee	fprintf		134422	0					
ANR	134604	Identifier	fprintf		134422	0					
ANR	134605	ArgumentList	xmlout		134422	1					
ANR	134606	Argument	xmlout		134422	0					
ANR	134607	Identifier	xmlout		134422	0					
ANR	134608	Argument	"""%s    <!-- Layer index (exclusive) for progression end. -->\\n"""		134422	1					
ANR	134609	PrimaryExpression	"""%s    <!-- Layer index (exclusive) for progression end. -->\\n"""		134422	0					
ANR	134610	Argument	s		134422	2					
ANR	134611	Identifier	s		134422	0					
ANR	134612	ExpressionStatement	"fprintf ( xmlout , ""%s    <REpoc>%d</REpoc>\\n"" , s , poc -> resno1 )"	2268:8:103607:103684	134422	8	True				
ANR	134613	CallExpression	"fprintf ( xmlout , ""%s    <REpoc>%d</REpoc>\\n"" , s , poc -> resno1 )"		134422	0					
ANR	134614	Callee	fprintf		134422	0					
ANR	134615	Identifier	fprintf		134422	0					
ANR	134616	ArgumentList	xmlout		134422	1					
ANR	134617	Argument	xmlout		134422	0					
ANR	134618	Identifier	xmlout		134422	0					
ANR	134619	Argument	"""%s    <REpoc>%d</REpoc>\\n"""		134422	1					
ANR	134620	PrimaryExpression	"""%s    <REpoc>%d</REpoc>\\n"""		134422	0					
ANR	134621	Argument	s		134422	2					
ANR	134622	Identifier	s		134422	0					
ANR	134623	Argument	poc -> resno1		134422	3					
ANR	134624	PtrMemberAccess	poc -> resno1		134422	0					
ANR	134625	Identifier	poc		134422	0					
ANR	134626	Identifier	resno1		134422	1					
ANR	134627	IfStatement	if ( notes )		134422	9					
ANR	134628	Condition	notes	2270:12:103761:103765	134422	0	True				
ANR	134629	Identifier	notes		134422	0					
ANR	134630	CompoundStatement		46:19:1918:1918	134422	1					
ANR	134631	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Resolution level index (exclusive) for progression end. Range: RSpoc to 33 -->\\n"" , s )"	2271:12:103782:103935	134422	0	True				
ANR	134632	CallExpression	"fprintf ( xmlout , ""%s    <!-- Resolution level index (exclusive) for progression end. Range: RSpoc to 33 -->\\n"" , s )"		134422	0					
ANR	134633	Callee	fprintf		134422	0					
ANR	134634	Identifier	fprintf		134422	0					
ANR	134635	ArgumentList	xmlout		134422	1					
ANR	134636	Argument	xmlout		134422	0					
ANR	134637	Identifier	xmlout		134422	0					
ANR	134638	Argument	"""%s    <!-- Resolution level index (exclusive) for progression end. Range: RSpoc to 33 -->\\n"""		134422	1					
ANR	134639	PrimaryExpression	"""%s    <!-- Resolution level index (exclusive) for progression end. Range: RSpoc to 33 -->\\n"""		134422	0					
ANR	134640	Argument	s		134422	2					
ANR	134641	Identifier	s		134422	0					
ANR	134642	ExpressionStatement	"fprintf ( xmlout , ""%s    <CEpoc>%d</CEpoc>\\n"" , s , poc -> compno1 )"	2275:8:103955:104033	134422	10	True				
ANR	134643	CallExpression	"fprintf ( xmlout , ""%s    <CEpoc>%d</CEpoc>\\n"" , s , poc -> compno1 )"		134422	0					
ANR	134644	Callee	fprintf		134422	0					
ANR	134645	Identifier	fprintf		134422	0					
ANR	134646	ArgumentList	xmlout		134422	1					
ANR	134647	Argument	xmlout		134422	0					
ANR	134648	Identifier	xmlout		134422	0					
ANR	134649	Argument	"""%s    <CEpoc>%d</CEpoc>\\n"""		134422	1					
ANR	134650	PrimaryExpression	"""%s    <CEpoc>%d</CEpoc>\\n"""		134422	0					
ANR	134651	Argument	s		134422	2					
ANR	134652	Identifier	s		134422	0					
ANR	134653	Argument	poc -> compno1		134422	3					
ANR	134654	PtrMemberAccess	poc -> compno1		134422	0					
ANR	134655	Identifier	poc		134422	0					
ANR	134656	Identifier	compno1		134422	1					
ANR	134657	IfStatement	if ( notes )		134422	11					
ANR	134658	Condition	notes	2277:12:104137:104141	134422	0	True				
ANR	134659	Identifier	notes		134422	0					
ANR	134660	CompoundStatement		53:19:2294:2294	134422	1					
ANR	134661	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Component index (exclusive) for progression end.  Minimum: CSpoc -->\\n"" , s )"	2278:12:104158:104301	134422	0	True				
ANR	134662	CallExpression	"fprintf ( xmlout , ""%s    <!-- Component index (exclusive) for progression end.  Minimum: CSpoc -->\\n"" , s )"		134422	0					
ANR	134663	Callee	fprintf		134422	0					
ANR	134664	Identifier	fprintf		134422	0					
ANR	134665	ArgumentList	xmlout		134422	1					
ANR	134666	Argument	xmlout		134422	0					
ANR	134667	Identifier	xmlout		134422	0					
ANR	134668	Argument	"""%s    <!-- Component index (exclusive) for progression end.  Minimum: CSpoc -->\\n"""		134422	1					
ANR	134669	PrimaryExpression	"""%s    <!-- Component index (exclusive) for progression end.  Minimum: CSpoc -->\\n"""		134422	0					
ANR	134670	Argument	s		134422	2					
ANR	134671	Identifier	s		134422	0					
ANR	134672	ExpressionStatement	"fprintf ( xmlout , ""%s    <Ppoc>%d</Ppoc>\\n"" , s , poc -> prg )"	2282:8:104321:104377	134422	12	True				
ANR	134673	CallExpression	"fprintf ( xmlout , ""%s    <Ppoc>%d</Ppoc>\\n"" , s , poc -> prg )"		134422	0					
ANR	134674	Callee	fprintf		134422	0					
ANR	134675	Identifier	fprintf		134422	0					
ANR	134676	ArgumentList	xmlout		134422	1					
ANR	134677	Argument	xmlout		134422	0					
ANR	134678	Identifier	xmlout		134422	0					
ANR	134679	Argument	"""%s    <Ppoc>%d</Ppoc>\\n"""		134422	1					
ANR	134680	PrimaryExpression	"""%s    <Ppoc>%d</Ppoc>\\n"""		134422	0					
ANR	134681	Argument	s		134422	2					
ANR	134682	Identifier	s		134422	0					
ANR	134683	Argument	poc -> prg		134422	3					
ANR	134684	PtrMemberAccess	poc -> prg		134422	0					
ANR	134685	Identifier	poc		134422	0					
ANR	134686	Identifier	prg		134422	1					
ANR	134687	IfStatement	if ( notes )		134422	13					
ANR	134688	Condition	notes	2283:12:104411:104415	134422	0	True				
ANR	134689	Identifier	notes		134422	0					
ANR	134690	CompoundStatement		59:19:2568:2568	134422	1					
ANR	134691	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Defined Progression Order Values are: -->\\n"" , s )"	2284:12:104432:104508	134422	0	True				
ANR	134692	CallExpression	"fprintf ( xmlout , ""%s    <!-- Defined Progression Order Values are: -->\\n"" , s )"		134422	0					
ANR	134693	Callee	fprintf		134422	0					
ANR	134694	Identifier	fprintf		134422	0					
ANR	134695	ArgumentList	xmlout		134422	1					
ANR	134696	Argument	xmlout		134422	0					
ANR	134697	Identifier	xmlout		134422	0					
ANR	134698	Argument	"""%s    <!-- Defined Progression Order Values are: -->\\n"""		134422	1					
ANR	134699	PrimaryExpression	"""%s    <!-- Defined Progression Order Values are: -->\\n"""		134422	0					
ANR	134700	Argument	s		134422	2					
ANR	134701	Identifier	s		134422	0					
ANR	134702	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- 0 = LRCP; 1 = RLCP; 2 = RPCL; 3 = PCRL; 4 = CPRL -->\\n"" , s )"	2285:12:104522:104629	134422	1	True				
ANR	134703	CallExpression	"fprintf ( xmlout , ""%s    <!-- 0 = LRCP; 1 = RLCP; 2 = RPCL; 3 = PCRL; 4 = CPRL -->\\n"" , s )"		134422	0					
ANR	134704	Callee	fprintf		134422	0					
ANR	134705	Identifier	fprintf		134422	0					
ANR	134706	ArgumentList	xmlout		134422	1					
ANR	134707	Argument	xmlout		134422	0					
ANR	134708	Identifier	xmlout		134422	0					
ANR	134709	Argument	"""%s    <!-- 0 = LRCP; 1 = RLCP; 2 = RPCL; 3 = PCRL; 4 = CPRL -->\\n"""		134422	1					
ANR	134710	PrimaryExpression	"""%s    <!-- 0 = LRCP; 1 = RLCP; 2 = RPCL; 3 = PCRL; 4 = CPRL -->\\n"""		134422	0					
ANR	134711	Argument	s		134422	2					
ANR	134712	Identifier	s		134422	0					
ANR	134713	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- where L = \\""layer\\"", R = \\""resolution level\\"", C = \\""component\\"", P = \\""position\\"". -->\\n"" , s )"	2287:12:104643:104805	134422	2	True				
ANR	134714	CallExpression	"fprintf ( xmlout , ""%s    <!-- where L = \\""layer\\"", R = \\""resolution level\\"", C = \\""component\\"", P = \\""position\\"". -->\\n"" , s )"		134422	0					
ANR	134715	Callee	fprintf		134422	0					
ANR	134716	Identifier	fprintf		134422	0					
ANR	134717	ArgumentList	xmlout		134422	1					
ANR	134718	Argument	xmlout		134422	0					
ANR	134719	Identifier	xmlout		134422	0					
ANR	134720	Argument	"""%s    <!-- where L = \\""layer\\"", R = \\""resolution level\\"", C = \\""component\\"", P = \\""position\\"". -->\\n"""		134422	1					
ANR	134721	PrimaryExpression	"""%s    <!-- where L = \\""layer\\"", R = \\""resolution level\\"", C = \\""component\\"", P = \\""position\\"". -->\\n"""		134422	0					
ANR	134722	Argument	s		134422	2					
ANR	134723	Identifier	s		134422	0					
ANR	134724	ExpressionStatement	"fprintf ( xmlout , ""%s  </Progression>\\n"" , s )"	2291:8:104825:104868	134422	14	True				
ANR	134725	CallExpression	"fprintf ( xmlout , ""%s  </Progression>\\n"" , s )"		134422	0					
ANR	134726	Callee	fprintf		134422	0					
ANR	134727	Identifier	fprintf		134422	0					
ANR	134728	ArgumentList	xmlout		134422	1					
ANR	134729	Argument	xmlout		134422	0					
ANR	134730	Identifier	xmlout		134422	0					
ANR	134731	Argument	"""%s  </Progression>\\n"""		134422	1					
ANR	134732	PrimaryExpression	"""%s  </Progression>\\n"""		134422	0					
ANR	134733	Argument	s		134422	2					
ANR	134734	Identifier	s		134422	0					
ANR	134735	ExpressionStatement	"fprintf ( xmlout , ""%s</ProgressionOrderChange\\n"" , s )"	2293:4:104880:104933	134422	8	True				
ANR	134736	CallExpression	"fprintf ( xmlout , ""%s</ProgressionOrderChange\\n"" , s )"		134422	0					
ANR	134737	Callee	fprintf		134422	0					
ANR	134738	Identifier	fprintf		134422	0					
ANR	134739	ArgumentList	xmlout		134422	1					
ANR	134740	Argument	xmlout		134422	0					
ANR	134741	Identifier	xmlout		134422	0					
ANR	134742	Argument	"""%s</ProgressionOrderChange\\n"""		134422	1					
ANR	134743	PrimaryExpression	"""%s</ProgressionOrderChange\\n"""		134422	0					
ANR	134744	Argument	s		134422	2					
ANR	134745	Identifier	s		134422	0					
ANR	134746	ReturnType	void		134422	1					
ANR	134747	Identifier	xml_out_frame_poc		134422	2					
ANR	134748	ParameterList	"FILE * xmlout , opj_tcp_t * tcp"		134422	3					
ANR	134749	Parameter	FILE * xmlout	2223:23:101763:101774	134422	0	True				
ANR	134750	ParameterType	FILE *		134422	0					
ANR	134751	Identifier	xmlout		134422	1					
ANR	134752	Parameter	opj_tcp_t * tcp	2224:23:101800:101813	134422	1	True				
ANR	134753	ParameterType	opj_tcp_t *		134422	0					
ANR	134754	Identifier	tcp		134422	1					
ANR	134755	CFGEntryNode	ENTRY		134422		True				
ANR	134756	CFGExitNode	EXIT		134422		True				
ANR	134757	Symbol	tcp		134422						
ANR	134758	Symbol	tcp -> numpocs		134422						
ANR	134759	Symbol	notes		134422						
ANR	134760	Symbol	poc -> compno1		134422						
ANR	134761	Symbol	poc		134422						
ANR	134762	Symbol	tcp -> pocs		134422						
ANR	134763	Symbol	poc -> compno0		134422						
ANR	134764	Symbol	i		134422						
ANR	134765	Symbol	* tcp		134422						
ANR	134766	Symbol	* poc		134422						
ANR	134767	Symbol	xmlout		134422						
ANR	134768	Symbol	j2k_default_tcp		134422						
ANR	134769	Symbol	s		134422						
ANR	134770	Symbol	poc -> layno1		134422						
ANR	134771	Symbol	spaces		134422						
ANR	134772	Symbol	tcp -> POC		134422						
ANR	134773	Symbol	poc -> resno0		134422						
ANR	134774	Symbol	poc -> resno1		134422						
ANR	134775	Symbol	poc -> prg		134422						
ANR	134776	Function	xml_out_frame_ppm	2302:0:105178:107071							
ANR	134777	FunctionDef	"xml_out_frame_ppm (FILE * xmlout , opj_cp_t * cp)"		134776	0					
ANR	134778	CompoundStatement		2304:0:105317:107071	134776	0					
ANR	134779	IdentifierDeclStatement	int j ;	2308:4:105513:105518	134776	0	True				
ANR	134780	IdentifierDecl	j		134776	0					
ANR	134781	IdentifierDeclType	int		134776	0					
ANR	134782	Identifier	j		134776	1					
ANR	134783	IfStatement	if ( cp -> ppm != 1 )		134776	1					
ANR	134784	Condition	cp -> ppm != 1	2310:8:105529:105540	134776	0	True				
ANR	134785	EqualityExpression	cp -> ppm != 1		134776	0		!=			
ANR	134786	PtrMemberAccess	cp -> ppm		134776	0					
ANR	134787	Identifier	cp		134776	0					
ANR	134788	Identifier	ppm		134776	1					
ANR	134789	PrimaryExpression	1		134776	1					
ANR	134790	CompoundStatement		7:22:225:225	134776	1					
ANR	134791	ReturnStatement	return ;	2311:8:105553:105559	134776	0	True				
ANR	134792	ExpressionStatement	"fprintf ( xmlout , ""          <PackedPacketHeadersMainHeader Marker=\\""PPM\\"">\\n"" )"	2314:4:105639:105728	134776	2	True				
ANR	134793	CallExpression	"fprintf ( xmlout , ""          <PackedPacketHeadersMainHeader Marker=\\""PPM\\"">\\n"" )"		134776	0					
ANR	134794	Callee	fprintf		134776	0					
ANR	134795	Identifier	fprintf		134776	0					
ANR	134796	ArgumentList	xmlout		134776	1					
ANR	134797	Argument	xmlout		134776	0					
ANR	134798	Identifier	xmlout		134776	0					
ANR	134799	Argument	"""          <PackedPacketHeadersMainHeader Marker=\\""PPM\\"">\\n"""		134776	1					
ANR	134800	PrimaryExpression	"""          <PackedPacketHeadersMainHeader Marker=\\""PPM\\"">\\n"""		134776	0					
ANR	134801	IfStatement	if ( notes )		134776	3					
ANR	134802	Condition	notes	2317:8:105843:105847	134776	0	True				
ANR	134803	Identifier	notes		134776	0					
ANR	134804	CompoundStatement		14:15:532:532	134776	1					
ANR	134805	ExpressionStatement	"fprintf ( xmlout , ""          <!-- If there are multiple PPM marker segments in the main header, -->\\n"" )"	2318:8:105860:105977	134776	0	True				
ANR	134806	CallExpression	"fprintf ( xmlout , ""          <!-- If there are multiple PPM marker segments in the main header, -->\\n"" )"		134776	0					
ANR	134807	Callee	fprintf		134776	0					
ANR	134808	Identifier	fprintf		134776	0					
ANR	134809	ArgumentList	xmlout		134776	1					
ANR	134810	Argument	xmlout		134776	0					
ANR	134811	Identifier	xmlout		134776	0					
ANR	134812	Argument	"""          <!-- If there are multiple PPM marker segments in the main header, -->\\n"""		134776	1					
ANR	134813	PrimaryExpression	"""          <!-- If there are multiple PPM marker segments in the main header, -->\\n"""		134776	0					
ANR	134814	ExpressionStatement	"fprintf ( xmlout , ""          <!-- this mj2_to_metadata implementation will report them as a single consolidated PPM header. -->\\n"" )"	2320:8:105987:106132	134776	1	True				
ANR	134815	CallExpression	"fprintf ( xmlout , ""          <!-- this mj2_to_metadata implementation will report them as a single consolidated PPM header. -->\\n"" )"		134776	0					
ANR	134816	Callee	fprintf		134776	0					
ANR	134817	Identifier	fprintf		134776	0					
ANR	134818	ArgumentList	xmlout		134776	1					
ANR	134819	Argument	xmlout		134776	0					
ANR	134820	Identifier	xmlout		134776	0					
ANR	134821	Argument	"""          <!-- this mj2_to_metadata implementation will report them as a single consolidated PPM header. -->\\n"""		134776	1					
ANR	134822	PrimaryExpression	"""          <!-- this mj2_to_metadata implementation will report them as a single consolidated PPM header. -->\\n"""		134776	0					
ANR	134823	ExpressionStatement	"fprintf ( xmlout , ""          <!-- The implementation can't currently segregate by tile-part. -->\\n"" )"	2322:8:106142:106256	134776	2	True				
ANR	134824	CallExpression	"fprintf ( xmlout , ""          <!-- The implementation can't currently segregate by tile-part. -->\\n"" )"		134776	0					
ANR	134825	Callee	fprintf		134776	0					
ANR	134826	Identifier	fprintf		134776	0					
ANR	134827	ArgumentList	xmlout		134776	1					
ANR	134828	Argument	xmlout		134776	0					
ANR	134829	Identifier	xmlout		134776	0					
ANR	134830	Argument	"""          <!-- The implementation can't currently segregate by tile-part. -->\\n"""		134776	1					
ANR	134831	PrimaryExpression	"""          <!-- The implementation can't currently segregate by tile-part. -->\\n"""		134776	0					
ANR	134832	ExpressionStatement	"fprintf ( xmlout , ""          <!-- TO DO? further map the packet headers to xml. -->\\n"" )"	2324:8:106266:106367	134776	3	True				
ANR	134833	CallExpression	"fprintf ( xmlout , ""          <!-- TO DO? further map the packet headers to xml. -->\\n"" )"		134776	0					
ANR	134834	Callee	fprintf		134776	0					
ANR	134835	Identifier	fprintf		134776	0					
ANR	134836	ArgumentList	xmlout		134776	1					
ANR	134837	Argument	xmlout		134776	0					
ANR	134838	Identifier	xmlout		134776	0					
ANR	134839	Argument	"""          <!-- TO DO? further map the packet headers to xml. -->\\n"""		134776	1					
ANR	134840	PrimaryExpression	"""          <!-- TO DO? further map the packet headers to xml. -->\\n"""		134776	0					
ANR	134841	ExpressionStatement	"fprintf ( xmlout , ""            <PackedData>\\n"" )"	2332:4:106697:106745	134776	4	True				
ANR	134842	CallExpression	"fprintf ( xmlout , ""            <PackedData>\\n"" )"		134776	0					
ANR	134843	Callee	fprintf		134776	0					
ANR	134844	Identifier	fprintf		134776	0					
ANR	134845	ArgumentList	xmlout		134776	1					
ANR	134846	Argument	xmlout		134776	0					
ANR	134847	Identifier	xmlout		134776	0					
ANR	134848	Argument	"""            <PackedData>\\n"""		134776	1					
ANR	134849	PrimaryExpression	"""            <PackedData>\\n"""		134776	0					
ANR	134850	ExpressionStatement	"xml_out_dump_hex ( xmlout , cp -> ppm_data , cp -> ppm_len )"	2333:4:106751:106802	134776	5	True				
ANR	134851	CallExpression	"xml_out_dump_hex ( xmlout , cp -> ppm_data , cp -> ppm_len )"		134776	0					
ANR	134852	Callee	xml_out_dump_hex		134776	0					
ANR	134853	Identifier	xml_out_dump_hex		134776	0					
ANR	134854	ArgumentList	xmlout		134776	1					
ANR	134855	Argument	xmlout		134776	0					
ANR	134856	Identifier	xmlout		134776	0					
ANR	134857	Argument	cp -> ppm_data		134776	1					
ANR	134858	PtrMemberAccess	cp -> ppm_data		134776	0					
ANR	134859	Identifier	cp		134776	0					
ANR	134860	Identifier	ppm_data		134776	1					
ANR	134861	Argument	cp -> ppm_len		134776	2					
ANR	134862	PtrMemberAccess	cp -> ppm_len		134776	0					
ANR	134863	Identifier	cp		134776	0					
ANR	134864	Identifier	ppm_len		134776	1					
ANR	134865	ExpressionStatement	"fprintf ( xmlout , ""            </PackedData>\\n"" )"	2335:4:106867:106916	134776	6	True				
ANR	134866	CallExpression	"fprintf ( xmlout , ""            </PackedData>\\n"" )"		134776	0					
ANR	134867	Callee	fprintf		134776	0					
ANR	134868	Identifier	fprintf		134776	0					
ANR	134869	ArgumentList	xmlout		134776	1					
ANR	134870	Argument	xmlout		134776	0					
ANR	134871	Identifier	xmlout		134776	0					
ANR	134872	Argument	"""            </PackedData>\\n"""		134776	1					
ANR	134873	PrimaryExpression	"""            </PackedData>\\n"""		134776	0					
ANR	134874	ExpressionStatement	"fprintf ( xmlout , ""          </PackedPacketHeadersMainHeader>\\n"" )"	2336:4:106922:106997	134776	7	True				
ANR	134875	CallExpression	"fprintf ( xmlout , ""          </PackedPacketHeadersMainHeader>\\n"" )"		134776	0					
ANR	134876	Callee	fprintf		134776	0					
ANR	134877	Identifier	fprintf		134776	0					
ANR	134878	ArgumentList	xmlout		134776	1					
ANR	134879	Argument	xmlout		134776	0					
ANR	134880	Identifier	xmlout		134776	0					
ANR	134881	Argument	"""          </PackedPacketHeadersMainHeader>\\n"""		134776	1					
ANR	134882	PrimaryExpression	"""          </PackedPacketHeadersMainHeader>\\n"""		134776	0					
ANR	134883	ReturnType	void		134776	1					
ANR	134884	Identifier	xml_out_frame_ppm		134776	2					
ANR	134885	ParameterList	"FILE * xmlout , opj_cp_t * cp"		134776	3					
ANR	134886	Parameter	FILE * xmlout	2302:23:105201:105212	134776	0	True				
ANR	134887	ParameterType	FILE *		134776	0					
ANR	134888	Identifier	xmlout		134776	1					
ANR	134889	Parameter	opj_cp_t * cp	2303:23:105238:105249	134776	1	True				
ANR	134890	ParameterType	opj_cp_t *		134776	0					
ANR	134891	Identifier	cp		134776	1					
ANR	134892	CFGEntryNode	ENTRY		134776		True				
ANR	134893	CFGExitNode	EXIT		134776		True				
ANR	134894	Symbol	* cp		134776						
ANR	134895	Symbol	notes		134776						
ANR	134896	Symbol	cp -> ppm		134776						
ANR	134897	Symbol	cp -> ppm_len		134776						
ANR	134898	Symbol	cp -> ppm_data		134776						
ANR	134899	Symbol	j		134776						
ANR	134900	Symbol	cp		134776						
ANR	134901	Symbol	xmlout		134776						
ANR	134902	Function	xml_out_frame_ppt	2342:0:107095:109019							
ANR	134903	FunctionDef	"xml_out_frame_ppt (FILE * xmlout , opj_tcp_t * tcp)"		134902	0					
ANR	134904	CompoundStatement		2344:0:107236:109019	134902	0					
ANR	134905	IdentifierDeclStatement	int j ;	2348:4:107432:107437	134902	0	True				
ANR	134906	IdentifierDecl	j		134902	0					
ANR	134907	IdentifierDeclType	int		134902	0					
ANR	134908	Identifier	j		134902	1					
ANR	134909	IfStatement	if ( tcp -> ppt != 1 )		134902	1					
ANR	134910	Condition	tcp -> ppt != 1	2350:8:107448:107460	134902	0	True				
ANR	134911	EqualityExpression	tcp -> ppt != 1		134902	0		!=			
ANR	134912	PtrMemberAccess	tcp -> ppt		134902	0					
ANR	134913	Identifier	tcp		134902	0					
ANR	134914	Identifier	ppt		134902	1					
ANR	134915	PrimaryExpression	1		134902	1					
ANR	134916	CompoundStatement		7:23:226:226	134902	1					
ANR	134917	ReturnStatement	return ;	2351:8:107473:107479	134902	0	True				
ANR	134918	ExpressionStatement	"fprintf ( xmlout , ""            <PackedPacketHeadersTilePartHeader Marker=\\""PPT\\"">\\n"" )"	2355:4:107555:107650	134902	2	True				
ANR	134919	CallExpression	"fprintf ( xmlout , ""            <PackedPacketHeadersTilePartHeader Marker=\\""PPT\\"">\\n"" )"		134902	0					
ANR	134920	Callee	fprintf		134902	0					
ANR	134921	Identifier	fprintf		134902	0					
ANR	134922	ArgumentList	xmlout		134902	1					
ANR	134923	Argument	xmlout		134902	0					
ANR	134924	Identifier	xmlout		134902	0					
ANR	134925	Argument	"""            <PackedPacketHeadersTilePartHeader Marker=\\""PPT\\"">\\n"""		134902	1					
ANR	134926	PrimaryExpression	"""            <PackedPacketHeadersTilePartHeader Marker=\\""PPT\\"">\\n"""		134902	0					
ANR	134927	IfStatement	if ( notes )		134902	3					
ANR	134928	Condition	notes	2358:8:107765:107769	134902	0	True				
ANR	134929	Identifier	notes		134902	0					
ANR	134930	CompoundStatement		15:15:535:535	134902	1					
ANR	134931	ExpressionStatement	"fprintf ( xmlout , ""            <!-- If there are multiple PPT marker segments in the tile-part header, -->\\n"" )"	2359:8:107782:107906	134902	0	True				
ANR	134932	CallExpression	"fprintf ( xmlout , ""            <!-- If there are multiple PPT marker segments in the tile-part header, -->\\n"" )"		134902	0					
ANR	134933	Callee	fprintf		134902	0					
ANR	134934	Identifier	fprintf		134902	0					
ANR	134935	ArgumentList	xmlout		134902	1					
ANR	134936	Argument	xmlout		134902	0					
ANR	134937	Identifier	xmlout		134902	0					
ANR	134938	Argument	"""            <!-- If there are multiple PPT marker segments in the tile-part header, -->\\n"""		134902	1					
ANR	134939	PrimaryExpression	"""            <!-- If there are multiple PPT marker segments in the tile-part header, -->\\n"""		134902	0					
ANR	134940	ExpressionStatement	"fprintf ( xmlout , ""            <!-- this mj2_to_metadata implementation will report them as a single consolidated PPT header. -->\\n"" )"	2361:8:107916:108063	134902	1	True				
ANR	134941	CallExpression	"fprintf ( xmlout , ""            <!-- this mj2_to_metadata implementation will report them as a single consolidated PPT header. -->\\n"" )"		134902	0					
ANR	134942	Callee	fprintf		134902	0					
ANR	134943	Identifier	fprintf		134902	0					
ANR	134944	ArgumentList	xmlout		134902	1					
ANR	134945	Argument	xmlout		134902	0					
ANR	134946	Identifier	xmlout		134902	0					
ANR	134947	Argument	"""            <!-- this mj2_to_metadata implementation will report them as a single consolidated PPT header. -->\\n"""		134902	1					
ANR	134948	PrimaryExpression	"""            <!-- this mj2_to_metadata implementation will report them as a single consolidated PPT header. -->\\n"""		134902	0					
ANR	134949	ExpressionStatement	"fprintf ( xmlout , ""            <!-- The implementation can't currently segregate by tile-part. -->\\n"" )"	2363:8:108073:108189	134902	2	True				
ANR	134950	CallExpression	"fprintf ( xmlout , ""            <!-- The implementation can't currently segregate by tile-part. -->\\n"" )"		134902	0					
ANR	134951	Callee	fprintf		134902	0					
ANR	134952	Identifier	fprintf		134902	0					
ANR	134953	ArgumentList	xmlout		134902	1					
ANR	134954	Argument	xmlout		134902	0					
ANR	134955	Identifier	xmlout		134902	0					
ANR	134956	Argument	"""            <!-- The implementation can't currently segregate by tile-part. -->\\n"""		134902	1					
ANR	134957	PrimaryExpression	"""            <!-- The implementation can't currently segregate by tile-part. -->\\n"""		134902	0					
ANR	134958	ExpressionStatement	"fprintf ( xmlout , ""            <!-- TO DO? further map the packet headers to xml. -->\\n"" )"	2365:8:108199:108302	134902	3	True				
ANR	134959	CallExpression	"fprintf ( xmlout , ""            <!-- TO DO? further map the packet headers to xml. -->\\n"" )"		134902	0					
ANR	134960	Callee	fprintf		134902	0					
ANR	134961	Identifier	fprintf		134902	0					
ANR	134962	ArgumentList	xmlout		134902	1					
ANR	134963	Argument	xmlout		134902	0					
ANR	134964	Identifier	xmlout		134902	0					
ANR	134965	Argument	"""            <!-- TO DO? further map the packet headers to xml. -->\\n"""		134902	1					
ANR	134966	PrimaryExpression	"""            <!-- TO DO? further map the packet headers to xml. -->\\n"""		134902	0					
ANR	134967	ExpressionStatement	"fprintf ( xmlout , ""              <PackedData>\\n"" )"	2373:4:108632:108682	134902	4	True				
ANR	134968	CallExpression	"fprintf ( xmlout , ""              <PackedData>\\n"" )"		134902	0					
ANR	134969	Callee	fprintf		134902	0					
ANR	134970	Identifier	fprintf		134902	0					
ANR	134971	ArgumentList	xmlout		134902	1					
ANR	134972	Argument	xmlout		134902	0					
ANR	134973	Identifier	xmlout		134902	0					
ANR	134974	Argument	"""              <PackedData>\\n"""		134902	1					
ANR	134975	PrimaryExpression	"""              <PackedData>\\n"""		134902	0					
ANR	134976	ExpressionStatement	"xml_out_dump_hex ( xmlout , tcp -> ppt_data , tcp -> ppt_len )"	2374:4:108688:108741	134902	5	True				
ANR	134977	CallExpression	"xml_out_dump_hex ( xmlout , tcp -> ppt_data , tcp -> ppt_len )"		134902	0					
ANR	134978	Callee	xml_out_dump_hex		134902	0					
ANR	134979	Identifier	xml_out_dump_hex		134902	0					
ANR	134980	ArgumentList	xmlout		134902	1					
ANR	134981	Argument	xmlout		134902	0					
ANR	134982	Identifier	xmlout		134902	0					
ANR	134983	Argument	tcp -> ppt_data		134902	1					
ANR	134984	PtrMemberAccess	tcp -> ppt_data		134902	0					
ANR	134985	Identifier	tcp		134902	0					
ANR	134986	Identifier	ppt_data		134902	1					
ANR	134987	Argument	tcp -> ppt_len		134902	2					
ANR	134988	PtrMemberAccess	tcp -> ppt_len		134902	0					
ANR	134989	Identifier	tcp		134902	0					
ANR	134990	Identifier	ppt_len		134902	1					
ANR	134991	ExpressionStatement	"fprintf ( xmlout , ""              </PackedData>\\n"" )"	2376:4:108806:108857	134902	6	True				
ANR	134992	CallExpression	"fprintf ( xmlout , ""              </PackedData>\\n"" )"		134902	0					
ANR	134993	Callee	fprintf		134902	0					
ANR	134994	Identifier	fprintf		134902	0					
ANR	134995	ArgumentList	xmlout		134902	1					
ANR	134996	Argument	xmlout		134902	0					
ANR	134997	Identifier	xmlout		134902	0					
ANR	134998	Argument	"""              </PackedData>\\n"""		134902	1					
ANR	134999	PrimaryExpression	"""              </PackedData>\\n"""		134902	0					
ANR	135000	ExpressionStatement	"fprintf ( xmlout , ""            </PackedPacketHeadersTileHeader>\\n"" )"	2377:4:108863:108940	134902	7	True				
ANR	135001	CallExpression	"fprintf ( xmlout , ""            </PackedPacketHeadersTileHeader>\\n"" )"		134902	0					
ANR	135002	Callee	fprintf		134902	0					
ANR	135003	Identifier	fprintf		134902	0					
ANR	135004	ArgumentList	xmlout		134902	1					
ANR	135005	Argument	xmlout		134902	0					
ANR	135006	Identifier	xmlout		134902	0					
ANR	135007	Argument	"""            </PackedPacketHeadersTileHeader>\\n"""		134902	1					
ANR	135008	PrimaryExpression	"""            </PackedPacketHeadersTileHeader>\\n"""		134902	0					
ANR	135009	ReturnType	void		134902	1					
ANR	135010	Identifier	xml_out_frame_ppt		134902	2					
ANR	135011	ParameterList	"FILE * xmlout , opj_tcp_t * tcp"		134902	3					
ANR	135012	Parameter	FILE * xmlout	2342:23:107118:107129	134902	0	True				
ANR	135013	ParameterType	FILE *		134902	0					
ANR	135014	Identifier	xmlout		134902	1					
ANR	135015	Parameter	opj_tcp_t * tcp	2343:23:107155:107168	134902	1	True				
ANR	135016	ParameterType	opj_tcp_t *		134902	0					
ANR	135017	Identifier	tcp		134902	1					
ANR	135018	CFGEntryNode	ENTRY		134902		True				
ANR	135019	CFGExitNode	EXIT		134902		True				
ANR	135020	Symbol	tcp		134902						
ANR	135021	Symbol	notes		134902						
ANR	135022	Symbol	tcp -> ppt		134902						
ANR	135023	Symbol	tcp -> ppt_len		134902						
ANR	135024	Symbol	tcp -> ppt_data		134902						
ANR	135025	Symbol	j		134902						
ANR	135026	Symbol	* tcp		134902						
ANR	135027	Symbol	xmlout		134902						
ANR	135028	Function	xml_out_frame_tlm	2384:0:109067:109413							
ANR	135029	FunctionDef	xml_out_frame_tlm (FILE * xmlout)		135028	0					
ANR	135030	CompoundStatement		2386:0:109176:109413	135028	0					
ANR	135031	ReturnType	void		135028	1					
ANR	135032	Identifier	xml_out_frame_tlm		135028	2					
ANR	135033	ParameterList	FILE * xmlout		135028	3					
ANR	135034	Parameter	FILE * xmlout	2384:23:109090:109124	135028	0	True				
ANR	135035	ParameterType	FILE *		135028	0					
ANR	135036	Identifier	xmlout		135028	1					
ANR	135037	CFGEntryNode	ENTRY		135028		True				
ANR	135038	CFGExitNode	EXIT		135028		True				
ANR	135039	Symbol	xmlout		135028						
ANR	135040	Function	xml_out_frame_plm	2394:0:109437:109863							
ANR	135041	FunctionDef	xml_out_frame_plm (FILE * xmlout)		135040	0					
ANR	135042	CompoundStatement		2396:0:109576:109863	135040	0					
ANR	135043	ReturnType	void		135040	1					
ANR	135044	Identifier	xml_out_frame_plm		135040	2					
ANR	135045	ParameterList	FILE * xmlout		135040	3					
ANR	135046	Parameter	FILE * xmlout	2394:23:109460:109494	135040	0	True				
ANR	135047	ParameterType	FILE *		135040	0					
ANR	135048	Identifier	xmlout		135040	1					
ANR	135049	CFGEntryNode	ENTRY		135040		True				
ANR	135050	CFGExitNode	EXIT		135040		True				
ANR	135051	Symbol	xmlout		135040						
ANR	135052	Function	xml_out_frame_plt	2405:0:109887:110218							
ANR	135053	FunctionDef	"xml_out_frame_plt (FILE * xmlout , opj_tcp_t * tcp)"		135052	0					
ANR	135054	CompoundStatement		2407:0:110050:110218	135052	0					
ANR	135055	ReturnType	void		135052	1					
ANR	135056	Identifier	xml_out_frame_plt		135052	2					
ANR	135057	ParameterList	"FILE * xmlout , opj_tcp_t * tcp"		135052	3					
ANR	135058	Parameter	FILE * xmlout	2405:23:109910:109921	135052	0	True				
ANR	135059	ParameterType	FILE *		135052	0					
ANR	135060	Identifier	xmlout		135052	1					
ANR	135061	Parameter	opj_tcp_t * tcp	2406:23:109947:109960	135052	1	True				
ANR	135062	ParameterType	opj_tcp_t *		135052	0					
ANR	135063	Identifier	tcp		135052	1					
ANR	135064	CFGEntryNode	ENTRY		135052		True				
ANR	135065	CFGExitNode	EXIT		135052		True				
ANR	135066	Symbol	tcp		135052						
ANR	135067	Symbol	xmlout		135052						
ANR	135068	Function	xml_out_frame_crg	2415:0:110242:113230							
ANR	135069	FunctionDef	xml_out_frame_crg (FILE * xmlout)		135068	0					
ANR	135070	CompoundStatement		2416:0:110279:113230	135068	0					
ANR	135071	Statement	THIS	2421:0:110565:110568	135068	0	True				
ANR	135072	Statement	PSEUDOCODE	2421:5:110570:110579	135068	1	True				
ANR	135073	Statement	IMAGINES	2421:16:110581:110588	135068	2	True				
ANR	135074	Statement	THESE	2421:25:110590:110594	135068	3	True				
ANR	135075	Label	EXIST :	2421:31:110596:110601	135068	4	True				
ANR	135076	Identifier	EXIST		135068	0					
ANR	135077	Statement	j2k_default_tcp	2422:4:110607:110621	135068	5	True				
ANR	135078	Statement	->	2422:19:110622:110623	135068	6	True				
ANR	135079	Statement	crg	2422:21:110624:110626	135068	7	True				
ANR	135080	Statement	","	2422:24:110627:110627	135068	8	True				
ANR	135081	Statement	j2k_default_tcp	2422:26:110629:110643	135068	9	True				
ANR	135082	Statement	->	2422:41:110644:110645	135068	10	True				
ANR	135083	Statement	crg_i	2422:43:110646:110650	135068	11	True				
ANR	135084	Statement	","	2422:48:110651:110651	135068	12	True				
ANR	135085	Statement	j2k_default_tcp	2422:50:110653:110667	135068	13	True				
ANR	135086	Statement	->	2422:65:110668:110669	135068	14	True				
ANR	135087	Statement	crg_xcrg	2422:67:110670:110677	135068	15	True				
ANR	135088	Statement	*	2422:75:110678:110678	135068	16	True				
ANR	135089	Statement	","	2422:76:110679:110679	135068	17	True				
ANR	135090	Statement	j2k_default_tcp	2423:20:110701:110715	135068	18	True				
ANR	135091	Statement	->	2423:35:110716:110717	135068	19	True				
ANR	135092	Statement	crg_ycrg	2423:37:110718:110725	135068	20	True				
ANR	135093	Statement	*	2423:45:110726:110726	135068	21	True				
ANR	135094	Statement	(	2424:20:110748:110748	135068	22	True				
ANR	135095	Statement	POSSIBLY	2424:21:110749:110756	135068	23	True				
ANR	135096	Statement	DON	2424:30:110758:110760	135068	24	True				
ANR	135097	Statement	T	2424:34:110762:110762	135068	25	True				
ANR	135098	Statement	NEED	2424:36:110764:110767	135068	26	True				
ANR	135099	Statement	crg_i	2424:41:110769:110773	135068	27	True				
ANR	135100	Statement	","	2424:46:110774:110774	135068	28	True				
ANR	135101	Statement	CAN	2424:48:110776:110778	135068	29	True				
ANR	135102	Statement	GET	2424:52:110780:110782	135068	30	True				
ANR	135103	Statement	NUMBER	2424:56:110784:110789	135068	31	True				
ANR	135104	Statement	OR	2424:63:110791:110792	135068	32	True				
ANR	135105	Statement	COMPONENTS	2424:66:110794:110803	135068	33	True				
ANR	135106	Statement	FROM	2424:77:110805:110808	135068	34	True				
ANR	135107	Statement	ELSEWHERE	2424:82:110810:110818	135068	35	True				
ANR	135108	Statement	)	2424:91:110819:110819	135068	36	True				
ANR	135109	IfStatement	if ( j2k_default_tcp -> crg != 1 || j2k_default_tcp -> crg_i == 0 )		135068	37					
ANR	135110	Condition	j2k_default_tcp -> crg != 1 || j2k_default_tcp -> crg_i == 0	2425:25:110846:110901	135068	0	True				
ANR	135111	OrExpression	j2k_default_tcp -> crg != 1 || j2k_default_tcp -> crg_i == 0		135068	0		||			
ANR	135112	EqualityExpression	j2k_default_tcp -> crg != 1		135068	0		!=			
ANR	135113	PtrMemberAccess	j2k_default_tcp -> crg		135068	0					
ANR	135114	Identifier	j2k_default_tcp		135068	0					
ANR	135115	Identifier	crg		135068	1					
ANR	135116	PrimaryExpression	1		135068	1					
ANR	135117	EqualityExpression	j2k_default_tcp -> crg_i == 0		135068	1		==			
ANR	135118	PtrMemberAccess	j2k_default_tcp -> crg_i		135068	0					
ANR	135119	Identifier	j2k_default_tcp		135068	0					
ANR	135120	Identifier	crg_i		135068	1					
ANR	135121	PrimaryExpression	0		135068	1					
ANR	135122	ReturnStatement	return ;	2426:21:110925:110931	135068	1	True				
ANR	135123	ExpressionStatement	"fprintf ( xmlout , ""          <ComponentRegistration Marker=\\""RG\\"" Count=\\""%d\\"">\\n"" , j2k_default_tcp -> crg_i )"	2429:21:111034:111197	135068	38	True				
ANR	135124	CallExpression	"fprintf ( xmlout , ""          <ComponentRegistration Marker=\\""RG\\"" Count=\\""%d\\"">\\n"" , j2k_default_tcp -> crg_i )"		135068	0					
ANR	135125	Callee	fprintf		135068	0					
ANR	135126	Identifier	fprintf		135068	0					
ANR	135127	ArgumentList	xmlout		135068	1					
ANR	135128	Argument	xmlout		135068	0					
ANR	135129	Identifier	xmlout		135068	0					
ANR	135130	Argument	"""          <ComponentRegistration Marker=\\""RG\\"" Count=\\""%d\\"">\\n"""		135068	1					
ANR	135131	PrimaryExpression	"""          <ComponentRegistration Marker=\\""RG\\"" Count=\\""%d\\"">\\n"""		135068	0					
ANR	135132	Argument	j2k_default_tcp -> crg_i		135068	2					
ANR	135133	PtrMemberAccess	j2k_default_tcp -> crg_i		135068	0					
ANR	135134	Identifier	j2k_default_tcp		135068	0					
ANR	135135	Identifier	crg_i		135068	1					
ANR	135136	IfStatement	if ( notes )		135068	39					
ANR	135137	Condition	notes	2432:8:111207:111211	135068	0	True				
ANR	135138	Identifier	notes		135068	0					
ANR	135139	CompoundStatement		17:15:934:934	135068	1					
ANR	135140	ExpressionStatement	"fprintf ( xmlout , ""          <!-- Fine tuning of registration of components with respect to each other, -->\\n"" )"	2433:8:111224:111349	135068	0	True				
ANR	135141	CallExpression	"fprintf ( xmlout , ""          <!-- Fine tuning of registration of components with respect to each other, -->\\n"" )"		135068	0					
ANR	135142	Callee	fprintf		135068	0					
ANR	135143	Identifier	fprintf		135068	0					
ANR	135144	ArgumentList	xmlout		135068	1					
ANR	135145	Argument	xmlout		135068	0					
ANR	135146	Identifier	xmlout		135068	0					
ANR	135147	Argument	"""          <!-- Fine tuning of registration of components with respect to each other, -->\\n"""		135068	1					
ANR	135148	PrimaryExpression	"""          <!-- Fine tuning of registration of components with respect to each other, -->\\n"""		135068	0					
ANR	135149	ExpressionStatement	"fprintf ( xmlout , ""          <!-- not required but potentially helpful for decoder. -->\\n"" )"	2435:12:111363:111472	135068	1	True				
ANR	135150	CallExpression	"fprintf ( xmlout , ""          <!-- not required but potentially helpful for decoder. -->\\n"" )"		135068	0					
ANR	135151	Callee	fprintf		135068	0					
ANR	135152	Identifier	fprintf		135068	0					
ANR	135153	ArgumentList	xmlout		135068	1					
ANR	135154	Argument	xmlout		135068	0					
ANR	135155	Identifier	xmlout		135068	0					
ANR	135156	Argument	"""          <!-- not required but potentially helpful for decoder. -->\\n"""		135068	1					
ANR	135157	PrimaryExpression	"""          <!-- not required but potentially helpful for decoder. -->\\n"""		135068	0					
ANR	135158	ExpressionStatement	"fprintf ( xmlout , ""          <!-- These supplementary fractional offsets are in units of 1/65536 of the horizontal -->\\n"" )"	2437:12:111486:111626	135068	2	True				
ANR	135159	CallExpression	"fprintf ( xmlout , ""          <!-- These supplementary fractional offsets are in units of 1/65536 of the horizontal -->\\n"" )"		135068	0					
ANR	135160	Callee	fprintf		135068	0					
ANR	135161	Identifier	fprintf		135068	0					
ANR	135162	ArgumentList	xmlout		135068	1					
ANR	135163	Argument	xmlout		135068	0					
ANR	135164	Identifier	xmlout		135068	0					
ANR	135165	Argument	"""          <!-- These supplementary fractional offsets are in units of 1/65536 of the horizontal -->\\n"""		135068	1					
ANR	135166	PrimaryExpression	"""          <!-- These supplementary fractional offsets are in units of 1/65536 of the horizontal -->\\n"""		135068	0					
ANR	135167	ExpressionStatement	"fprintf ( xmlout , ""          <!-- or vertical separation (e.g., XRsiz[i] or YRsiz[i] for component i). -->\\n"" )"	2439:12:111640:111768	135068	3	True				
ANR	135168	CallExpression	"fprintf ( xmlout , ""          <!-- or vertical separation (e.g., XRsiz[i] or YRsiz[i] for component i). -->\\n"" )"		135068	0					
ANR	135169	Callee	fprintf		135068	0					
ANR	135170	Identifier	fprintf		135068	0					
ANR	135171	ArgumentList	xmlout		135068	1					
ANR	135172	Argument	xmlout		135068	0					
ANR	135173	Identifier	xmlout		135068	0					
ANR	135174	Argument	"""          <!-- or vertical separation (e.g., XRsiz[i] or YRsiz[i] for component i). -->\\n"""		135068	1					
ANR	135175	PrimaryExpression	"""          <!-- or vertical separation (e.g., XRsiz[i] or YRsiz[i] for component i). -->\\n"""		135068	0					
ANR	135176	ForStatement	for ( i = 0 ; i < j2k_default_tcp -> crg_i ; i ++ )		135068	40					
ANR	135177	ForInit	i = 0 ;	2443:9:111902:111907	135068	0	True				
ANR	135178	AssignmentExpression	i = 0		135068	0		=			
ANR	135179	Identifier	i		135068	0					
ANR	135180	PrimaryExpression	0		135068	1					
ANR	135181	Condition	i < j2k_default_tcp -> crg_i	2443:16:111909:111934	135068	1	True				
ANR	135182	RelationalExpression	i < j2k_default_tcp -> crg_i		135068	0		<			
ANR	135183	Identifier	i		135068	0					
ANR	135184	PtrMemberAccess	j2k_default_tcp -> crg_i		135068	1					
ANR	135185	Identifier	j2k_default_tcp		135068	0					
ANR	135186	Identifier	crg_i		135068	1					
ANR	135187	PostIncDecOperationExpression	i ++	2443:44:111937:111939	135068	2	True				
ANR	135188	Identifier	i		135068	0					
ANR	135189	IncDec	++		135068	1					
ANR	135190	CompoundStatement		28:49:1662:1662	135068	3					
ANR	135191	ExpressionStatement	"fprintf ( xmlout , ""            <Component Num=\\""%d\\"">\\n"" , i + 1 )"	2444:4:111948:112011	135068	0	True				
ANR	135192	CallExpression	"fprintf ( xmlout , ""            <Component Num=\\""%d\\"">\\n"" , i + 1 )"		135068	0					
ANR	135193	Callee	fprintf		135068	0					
ANR	135194	Identifier	fprintf		135068	0					
ANR	135195	ArgumentList	xmlout		135068	1					
ANR	135196	Argument	xmlout		135068	0					
ANR	135197	Identifier	xmlout		135068	0					
ANR	135198	Argument	"""            <Component Num=\\""%d\\"">\\n"""		135068	1					
ANR	135199	PrimaryExpression	"""            <Component Num=\\""%d\\"">\\n"""		135068	0					
ANR	135200	Argument	i + 1		135068	2					
ANR	135201	AdditiveExpression	i + 1		135068	0		+			
ANR	135202	Identifier	i		135068	0					
ANR	135203	PrimaryExpression	1		135068	1					
ANR	135204	ExpressionStatement	"fprintf ( xmlout , ""              <Xcrg>\\n"" )"	2445:8:112021:112063	135068	1	True				
ANR	135205	CallExpression	"fprintf ( xmlout , ""              <Xcrg>\\n"" )"		135068	0					
ANR	135206	Callee	fprintf		135068	0					
ANR	135207	Identifier	fprintf		135068	0					
ANR	135208	ArgumentList	xmlout		135068	1					
ANR	135209	Argument	xmlout		135068	0					
ANR	135210	Identifier	xmlout		135068	0					
ANR	135211	Argument	"""              <Xcrg>\\n"""		135068	1					
ANR	135212	PrimaryExpression	"""              <Xcrg>\\n"""		135068	0					
ANR	135213	IfStatement	if ( raw )		135068	2					
ANR	135214	Condition	raw	2446:12:112077:112079	135068	0	True				
ANR	135215	Identifier	raw		135068	0					
ANR	135216	CompoundStatement		31:17:1802:1802	135068	1					
ANR	135217	ExpressionStatement	"fprintf ( xmlout , ""                <AsNumerator>%d</AsNumerator>\\n"" , j2k_default_tcp -> crg_xcrg [ i ] )"	2447:12:112096:112212	135068	0	True				
ANR	135218	CallExpression	"fprintf ( xmlout , ""                <AsNumerator>%d</AsNumerator>\\n"" , j2k_default_tcp -> crg_xcrg [ i ] )"		135068	0					
ANR	135219	Callee	fprintf		135068	0					
ANR	135220	Identifier	fprintf		135068	0					
ANR	135221	ArgumentList	xmlout		135068	1					
ANR	135222	Argument	xmlout		135068	0					
ANR	135223	Identifier	xmlout		135068	0					
ANR	135224	Argument	"""                <AsNumerator>%d</AsNumerator>\\n"""		135068	1					
ANR	135225	PrimaryExpression	"""                <AsNumerator>%d</AsNumerator>\\n"""		135068	0					
ANR	135226	Argument	j2k_default_tcp -> crg_xcrg [ i ]		135068	2					
ANR	135227	ArrayIndexing	j2k_default_tcp -> crg_xcrg [ i ]		135068	0					
ANR	135228	PtrMemberAccess	j2k_default_tcp -> crg_xcrg		135068	0					
ANR	135229	Identifier	j2k_default_tcp		135068	0					
ANR	135230	Identifier	crg_xcrg		135068	1					
ANR	135231	Identifier	i		135068	1					
ANR	135232	IfStatement	if ( derived )		135068	3					
ANR	135233	Condition	derived	2450:12:112236:112242	135068	0	True				
ANR	135234	Identifier	derived		135068	0					
ANR	135235	CompoundStatement		35:21:1965:1965	135068	1					
ANR	135236	ExpressionStatement	"fprintf ( xmlout , ""                <AsPercentage>%.4f</AsPercentage>\\n"" , ( ( double ) j2k_default_tcp -> crg_xcrg [ i ] ) / 655.36 )"	2452:12:112357:112496	135068	0	True				
ANR	135237	CallExpression	"fprintf ( xmlout , ""                <AsPercentage>%.4f</AsPercentage>\\n"" , ( ( double ) j2k_default_tcp -> crg_xcrg [ i ] ) / 655.36 )"		135068	0					
ANR	135238	Callee	fprintf		135068	0					
ANR	135239	Identifier	fprintf		135068	0					
ANR	135240	ArgumentList	xmlout		135068	1					
ANR	135241	Argument	xmlout		135068	0					
ANR	135242	Identifier	xmlout		135068	0					
ANR	135243	Argument	"""                <AsPercentage>%.4f</AsPercentage>\\n"""		135068	1					
ANR	135244	PrimaryExpression	"""                <AsPercentage>%.4f</AsPercentage>\\n"""		135068	0					
ANR	135245	Argument	( ( double ) j2k_default_tcp -> crg_xcrg [ i ] ) / 655.36		135068	2					
ANR	135246	MultiplicativeExpression	( ( double ) j2k_default_tcp -> crg_xcrg [ i ] ) / 655.36		135068	0		/			
ANR	135247	CastExpression	( double ) j2k_default_tcp -> crg_xcrg [ i ]		135068	0					
ANR	135248	CastTarget	double		135068	0					
ANR	135249	ArrayIndexing	j2k_default_tcp -> crg_xcrg [ i ]		135068	1					
ANR	135250	PtrMemberAccess	j2k_default_tcp -> crg_xcrg		135068	0					
ANR	135251	Identifier	j2k_default_tcp		135068	0					
ANR	135252	Identifier	crg_xcrg		135068	1					
ANR	135253	Identifier	i		135068	1					
ANR	135254	PrimaryExpression	655.36		135068	1					
ANR	135255	ExpressionStatement	"fprintf ( xmlout , ""              </Xcrg>\\n"" )"	2456:8:112602:112645	135068	4	True				
ANR	135256	CallExpression	"fprintf ( xmlout , ""              </Xcrg>\\n"" )"		135068	0					
ANR	135257	Callee	fprintf		135068	0					
ANR	135258	Identifier	fprintf		135068	0					
ANR	135259	ArgumentList	xmlout		135068	1					
ANR	135260	Argument	xmlout		135068	0					
ANR	135261	Identifier	xmlout		135068	0					
ANR	135262	Argument	"""              </Xcrg>\\n"""		135068	1					
ANR	135263	PrimaryExpression	"""              </Xcrg>\\n"""		135068	0					
ANR	135264	ExpressionStatement	"fprintf ( xmlout , ""              <Ycrg>\\n"" )"	2457:8:112655:112697	135068	5	True				
ANR	135265	CallExpression	"fprintf ( xmlout , ""              <Ycrg>\\n"" )"		135068	0					
ANR	135266	Callee	fprintf		135068	0					
ANR	135267	Identifier	fprintf		135068	0					
ANR	135268	ArgumentList	xmlout		135068	1					
ANR	135269	Argument	xmlout		135068	0					
ANR	135270	Identifier	xmlout		135068	0					
ANR	135271	Argument	"""              <Ycrg>\\n"""		135068	1					
ANR	135272	PrimaryExpression	"""              <Ycrg>\\n"""		135068	0					
ANR	135273	IfStatement	if ( raw )		135068	6					
ANR	135274	Condition	raw	2458:12:112711:112713	135068	0	True				
ANR	135275	Identifier	raw		135068	0					
ANR	135276	CompoundStatement		43:17:2436:2436	135068	1					
ANR	135277	ExpressionStatement	"fprintf ( xmlout , ""                <AsNumerator>%d</AsNumerator>\\n"" , j2k_default_tcp -> crg_ycrg [ i ] )"	2459:12:112730:112846	135068	0	True				
ANR	135278	CallExpression	"fprintf ( xmlout , ""                <AsNumerator>%d</AsNumerator>\\n"" , j2k_default_tcp -> crg_ycrg [ i ] )"		135068	0					
ANR	135279	Callee	fprintf		135068	0					
ANR	135280	Identifier	fprintf		135068	0					
ANR	135281	ArgumentList	xmlout		135068	1					
ANR	135282	Argument	xmlout		135068	0					
ANR	135283	Identifier	xmlout		135068	0					
ANR	135284	Argument	"""                <AsNumerator>%d</AsNumerator>\\n"""		135068	1					
ANR	135285	PrimaryExpression	"""                <AsNumerator>%d</AsNumerator>\\n"""		135068	0					
ANR	135286	Argument	j2k_default_tcp -> crg_ycrg [ i ]		135068	2					
ANR	135287	ArrayIndexing	j2k_default_tcp -> crg_ycrg [ i ]		135068	0					
ANR	135288	PtrMemberAccess	j2k_default_tcp -> crg_ycrg		135068	0					
ANR	135289	Identifier	j2k_default_tcp		135068	0					
ANR	135290	Identifier	crg_ycrg		135068	1					
ANR	135291	Identifier	i		135068	1					
ANR	135292	IfStatement	if ( derived )		135068	7					
ANR	135293	Condition	derived	2462:12:112870:112876	135068	0	True				
ANR	135294	Identifier	derived		135068	0					
ANR	135295	CompoundStatement		47:21:2599:2599	135068	1					
ANR	135296	ExpressionStatement	"fprintf ( xmlout , ""                <AsPercentage>%f</AsPercentage>\\n"" , ( ( double ) j2k_default_tcp -> crg_ycrg [ i ] ) / 655.36 )"	2463:12:112893:113030	135068	0	True				
ANR	135297	CallExpression	"fprintf ( xmlout , ""                <AsPercentage>%f</AsPercentage>\\n"" , ( ( double ) j2k_default_tcp -> crg_ycrg [ i ] ) / 655.36 )"		135068	0					
ANR	135298	Callee	fprintf		135068	0					
ANR	135299	Identifier	fprintf		135068	0					
ANR	135300	ArgumentList	xmlout		135068	1					
ANR	135301	Argument	xmlout		135068	0					
ANR	135302	Identifier	xmlout		135068	0					
ANR	135303	Argument	"""                <AsPercentage>%f</AsPercentage>\\n"""		135068	1					
ANR	135304	PrimaryExpression	"""                <AsPercentage>%f</AsPercentage>\\n"""		135068	0					
ANR	135305	Argument	( ( double ) j2k_default_tcp -> crg_ycrg [ i ] ) / 655.36		135068	2					
ANR	135306	MultiplicativeExpression	( ( double ) j2k_default_tcp -> crg_ycrg [ i ] ) / 655.36		135068	0		/			
ANR	135307	CastExpression	( double ) j2k_default_tcp -> crg_ycrg [ i ]		135068	0					
ANR	135308	CastTarget	double		135068	0					
ANR	135309	ArrayIndexing	j2k_default_tcp -> crg_ycrg [ i ]		135068	1					
ANR	135310	PtrMemberAccess	j2k_default_tcp -> crg_ycrg		135068	0					
ANR	135311	Identifier	j2k_default_tcp		135068	0					
ANR	135312	Identifier	crg_ycrg		135068	1					
ANR	135313	Identifier	i		135068	1					
ANR	135314	PrimaryExpression	655.36		135068	1					
ANR	135315	ExpressionStatement	"fprintf ( xmlout , ""              </Ycrg>\\n"" )"	2466:8:113050:113093	135068	8	True				
ANR	135316	CallExpression	"fprintf ( xmlout , ""              </Ycrg>\\n"" )"		135068	0					
ANR	135317	Callee	fprintf		135068	0					
ANR	135318	Identifier	fprintf		135068	0					
ANR	135319	ArgumentList	xmlout		135068	1					
ANR	135320	Argument	xmlout		135068	0					
ANR	135321	Identifier	xmlout		135068	0					
ANR	135322	Argument	"""              </Ycrg>\\n"""		135068	1					
ANR	135323	PrimaryExpression	"""              </Ycrg>\\n"""		135068	0					
ANR	135324	ExpressionStatement	"fprintf ( xmlout , ""            </Component>\\n"" )"	2467:8:113103:113149	135068	9	True				
ANR	135325	CallExpression	"fprintf ( xmlout , ""            </Component>\\n"" )"		135068	0					
ANR	135326	Callee	fprintf		135068	0					
ANR	135327	Identifier	fprintf		135068	0					
ANR	135328	ArgumentList	xmlout		135068	1					
ANR	135329	Argument	xmlout		135068	0					
ANR	135330	Identifier	xmlout		135068	0					
ANR	135331	Argument	"""            </Component>\\n"""		135068	1					
ANR	135332	PrimaryExpression	"""            </Component>\\n"""		135068	0					
ANR	135333	ExpressionStatement	"fprintf ( xmlout , ""          </ComponentRegistration>\\n"" )"	2470:4:113162:113220	135068	41	True				
ANR	135334	CallExpression	"fprintf ( xmlout , ""          </ComponentRegistration>\\n"" )"		135068	0					
ANR	135335	Callee	fprintf		135068	0					
ANR	135336	Identifier	fprintf		135068	0					
ANR	135337	ArgumentList	xmlout		135068	1					
ANR	135338	Argument	xmlout		135068	0					
ANR	135339	Identifier	xmlout		135068	0					
ANR	135340	Argument	"""          </ComponentRegistration>\\n"""		135068	1					
ANR	135341	PrimaryExpression	"""          </ComponentRegistration>\\n"""		135068	0					
ANR	135342	ReturnType	void		135068	1					
ANR	135343	Identifier	xml_out_frame_crg		135068	2					
ANR	135344	ParameterList	FILE * xmlout		135068	3					
ANR	135345	Parameter	FILE * xmlout	2415:23:110265:110276	135068	0	True				
ANR	135346	ParameterType	FILE *		135068	0					
ANR	135347	Identifier	xmlout		135068	1					
ANR	135348	CFGEntryNode	ENTRY		135068		True				
ANR	135349	CFGExitNode	EXIT		135068		True				
ANR	135350	Symbol	notes		135068						
ANR	135351	Symbol	* * j2k_default_tcp		135068						
ANR	135352	Symbol	* j2k_default_tcp -> crg_ycrg		135068						
ANR	135353	Symbol	* j2k_default_tcp -> crg_xcrg		135068						
ANR	135354	Symbol	i		135068						
ANR	135355	Symbol	raw		135068						
ANR	135356	Symbol	j2k_default_tcp -> crg		135068						
ANR	135357	Symbol	xmlout		135068						
ANR	135358	Symbol	j2k_default_tcp		135068						
ANR	135359	Symbol	j2k_default_tcp -> crg_i		135068						
ANR	135360	Symbol	* i		135068						
ANR	135361	Symbol	j2k_default_tcp -> crg_xcrg		135068						
ANR	135362	Symbol	j2k_default_tcp -> crg_ycrg		135068						
ANR	135363	Symbol	derived		135068						
ANR	135364	Symbol	* j2k_default_tcp		135068						
ANR	135365	Function	xml_out_frame_com	2478:0:113377:114179							
ANR	135366	FunctionDef	"xml_out_frame_com (FILE * xmlout , opj_tcp_t * tcp)"		135365	0					
ANR	135367	CompoundStatement		2479:0:113430:114179	135365	0					
ANR	135368	IdentifierDeclStatement	"char spaces [ 13 ] = ""            "" ;"	2483:4:113607:113639	135365	0	True				
ANR	135369	IdentifierDecl	"spaces [ 13 ] = ""            """		135365	0					
ANR	135370	IdentifierDeclType	char [ 13 ]		135365	0					
ANR	135371	Identifier	spaces		135365	1					
ANR	135372	PrimaryExpression	13		135365	2					
ANR	135373	AssignmentExpression	"spaces [ 13 ] = ""            """		135365	3		=			
ANR	135374	Identifier	spaces		135365	0					
ANR	135375	PrimaryExpression	"""            """		135365	1					
ANR	135376	IdentifierDeclStatement	char * s = spaces ;	2484:4:113672:113688	135365	1	True				
ANR	135377	IdentifierDecl	* s = spaces		135365	0					
ANR	135378	IdentifierDeclType	char *		135365	0					
ANR	135379	Identifier	s		135365	1					
ANR	135380	AssignmentExpression	* s = spaces		135365	2		=			
ANR	135381	Identifier	spaces		135365	0					
ANR	135382	Identifier	spaces		135365	1					
ANR	135383	IfStatement	if ( tcp == & j2k_default_tcp )		135365	2					
ANR	135384	Condition	tcp == & j2k_default_tcp	2485:8:113698:113720	135365	0	True				
ANR	135385	EqualityExpression	tcp == & j2k_default_tcp		135365	0		==			
ANR	135386	Identifier	tcp		135365	0					
ANR	135387	UnaryOperationExpression	& j2k_default_tcp		135365	1					
ANR	135388	UnaryOperator	&		135365	0					
ANR	135389	Identifier	j2k_default_tcp		135365	1					
ANR	135390	CompoundStatement		7:33:292:292	135365	1					
ANR	135391	ExpressionStatement	s ++	2486:8:113733:113736	135365	0	True				
ANR	135392	PostIncDecOperationExpression	s ++		135365	0					
ANR	135393	Identifier	s		135365	0					
ANR	135394	IncDec	++		135365	1					
ANR	135395	ExpressionStatement	s ++	2487:8:113746:113749	135365	1	True				
ANR	135396	PostIncDecOperationExpression	s ++		135365	0					
ANR	135397	Identifier	s		135365	0					
ANR	135398	IncDec	++		135365	1					
ANR	135399	Statement	THIS	2489:0:113794:113797	135365	3	True				
ANR	135400	Statement	PSEUDOCODE	2489:5:113799:113808	135365	4	True				
ANR	135401	Statement	IMAGINES	2489:16:113810:113817	135365	5	True				
ANR	135402	Statement	THESE	2489:25:113819:113823	135365	6	True				
ANR	135403	Label	EXIST :	2489:31:113825:113830	135365	7	True				
ANR	135404	Identifier	EXIST		135365	0					
ANR	135405	Statement	tcp	2490:4:113836:113838	135365	8	True				
ANR	135406	Statement	->	2490:7:113839:113840	135365	9	True				
ANR	135407	Statement	com	2490:9:113841:113843	135365	10	True				
ANR	135408	Statement	","	2490:12:113844:113844	135365	11	True				
ANR	135409	Statement	tcp	2490:14:113846:113848	135365	12	True				
ANR	135410	Statement	->	2490:17:113849:113850	135365	13	True				
ANR	135411	Statement	com_len	2490:19:113851:113857	135365	14	True				
ANR	135412	Statement	","	2490:26:113858:113858	135365	15	True				
ANR	135413	Statement	tcp	2490:28:113860:113862	135365	16	True				
ANR	135414	Statement	->	2490:31:113863:113864	135365	17	True				
ANR	135415	Statement	com_data	2490:33:113865:113872	135365	18	True				
ANR	135416	Statement	array	2490:42:113874:113878	135365	19	True				
ANR	135417	IfStatement	if ( tcp -> com != 1 )		135365	20					
ANR	135418	Condition	tcp -> com != 1	2491:8:113888:113900	135365	0	True				
ANR	135419	EqualityExpression	tcp -> com != 1		135365	0		!=			
ANR	135420	PtrMemberAccess	tcp -> com		135365	0					
ANR	135421	Identifier	tcp		135365	0					
ANR	135422	Identifier	com		135365	1					
ANR	135423	PrimaryExpression	1		135365	1					
ANR	135424	CompoundStatement		13:23:472:472	135365	1					
ANR	135425	ReturnStatement	return ;	2492:8:113913:113919	135365	0	True				
ANR	135426	ExpressionStatement	"fprintf ( xmlout , ""%s<Comment Marker=\\""COM\\"">\\n"" , s )"	2495:4:113953:114018	135365	21	True				
ANR	135427	CallExpression	"fprintf ( xmlout , ""%s<Comment Marker=\\""COM\\"">\\n"" , s )"		135365	0					
ANR	135428	Callee	fprintf		135365	0					
ANR	135429	Identifier	fprintf		135365	0					
ANR	135430	ArgumentList	xmlout		135365	1					
ANR	135431	Argument	xmlout		135365	0					
ANR	135432	Identifier	xmlout		135365	0					
ANR	135433	Argument	"""%s<Comment Marker=\\""COM\\"">\\n"""		135365	1					
ANR	135434	PrimaryExpression	"""%s<Comment Marker=\\""COM\\"">\\n"""		135365	0					
ANR	135435	Argument	s		135365	2					
ANR	135436	Identifier	s		135365	0					
ANR	135437	ExpressionStatement	"xml_out_dump_hex_and_ascii ( tcp -> com_data , tcp -> com_len , s )"	2497:4:114067:114125	135365	22	True				
ANR	135438	CallExpression	"xml_out_dump_hex_and_ascii ( tcp -> com_data , tcp -> com_len , s )"		135365	0					
ANR	135439	Callee	xml_out_dump_hex_and_ascii		135365	0					
ANR	135440	Identifier	xml_out_dump_hex_and_ascii		135365	0					
ANR	135441	ArgumentList	tcp -> com_data		135365	1					
ANR	135442	Argument	tcp -> com_data		135365	0					
ANR	135443	PtrMemberAccess	tcp -> com_data		135365	0					
ANR	135444	Identifier	tcp		135365	0					
ANR	135445	Identifier	com_data		135365	1					
ANR	135446	Argument	tcp -> com_len		135365	1					
ANR	135447	PtrMemberAccess	tcp -> com_len		135365	0					
ANR	135448	Identifier	tcp		135365	0					
ANR	135449	Identifier	com_len		135365	1					
ANR	135450	Argument	s		135365	2					
ANR	135451	Identifier	s		135365	0					
ANR	135452	ExpressionStatement	"fprintf ( xmlout , ""%s</Comment>\\n"" , s )"	2498:4:114131:114170	135365	23	True				
ANR	135453	CallExpression	"fprintf ( xmlout , ""%s</Comment>\\n"" , s )"		135365	0					
ANR	135454	Callee	fprintf		135365	0					
ANR	135455	Identifier	fprintf		135365	0					
ANR	135456	ArgumentList	xmlout		135365	1					
ANR	135457	Argument	xmlout		135365	0					
ANR	135458	Identifier	xmlout		135365	0					
ANR	135459	Argument	"""%s</Comment>\\n"""		135365	1					
ANR	135460	PrimaryExpression	"""%s</Comment>\\n"""		135365	0					
ANR	135461	Argument	s		135365	2					
ANR	135462	Identifier	s		135365	0					
ANR	135463	ReturnType	void		135365	1					
ANR	135464	Identifier	xml_out_frame_com		135365	2					
ANR	135465	ParameterList	"FILE * xmlout , opj_tcp_t * tcp"		135365	3					
ANR	135466	Parameter	FILE * xmlout	2478:23:113400:113411	135365	0	True				
ANR	135467	ParameterType	FILE *		135365	0					
ANR	135468	Identifier	xmlout		135365	1					
ANR	135469	Parameter	opj_tcp_t * tcp	2478:37:113414:113427	135365	1	True				
ANR	135470	ParameterType	opj_tcp_t *		135365	0					
ANR	135471	Identifier	tcp		135365	1					
ANR	135472	CFGEntryNode	ENTRY		135365		True				
ANR	135473	CFGExitNode	EXIT		135365		True				
ANR	135474	Symbol	tcp		135365						
ANR	135475	Symbol	s		135365						
ANR	135476	Symbol	spaces		135365						
ANR	135477	Symbol	& j2k_default_tcp		135365						
ANR	135478	Symbol	* tcp		135365						
ANR	135479	Symbol	tcp -> com		135365						
ANR	135480	Symbol	tcp -> com_len		135365						
ANR	135481	Symbol	tcp -> com_data		135365						
ANR	135482	Symbol	xmlout		135365						
ANR	135483	Function	xml_out_dump_hex	2502:0:114182:114665							
ANR	135484	FunctionDef	"xml_out_dump_hex (FILE * xmlout , char * data , int data_len , char * s)"		135483	0					
ANR	135485	CompoundStatement		2503:0:114253:114665	135483	0					
ANR	135486	IdentifierDeclStatement	int i ;	2505:4:114304:114309	135483	0	True				
ANR	135487	IdentifierDecl	i		135483	0					
ANR	135488	IdentifierDeclType	int		135483	0					
ANR	135489	Identifier	i		135483	1					
ANR	135490	ExpressionStatement	"fprintf ( xmlout , ""%s<AsHex>\\n"" , s )"	2508:4:114399:114435	135483	1	True				
ANR	135491	CallExpression	"fprintf ( xmlout , ""%s<AsHex>\\n"" , s )"		135483	0					
ANR	135492	Callee	fprintf		135483	0					
ANR	135493	Identifier	fprintf		135483	0					
ANR	135494	ArgumentList	xmlout		135483	1					
ANR	135495	Argument	xmlout		135483	0					
ANR	135496	Identifier	xmlout		135483	0					
ANR	135497	Argument	"""%s<AsHex>\\n"""		135483	1					
ANR	135498	PrimaryExpression	"""%s<AsHex>\\n"""		135483	0					
ANR	135499	Argument	s		135483	2					
ANR	135500	Identifier	s		135483	0					
ANR	135501	ExpressionStatement	"fprintf ( xmlout , ""%s  "" , s )"	2509:4:114441:114470	135483	2	True				
ANR	135502	CallExpression	"fprintf ( xmlout , ""%s  "" , s )"		135483	0					
ANR	135503	Callee	fprintf		135483	0					
ANR	135504	Identifier	fprintf		135483	0					
ANR	135505	ArgumentList	xmlout		135483	1					
ANR	135506	Argument	xmlout		135483	0					
ANR	135507	Identifier	xmlout		135483	0					
ANR	135508	Argument	"""%s  """		135483	1					
ANR	135509	PrimaryExpression	"""%s  """		135483	0					
ANR	135510	Argument	s		135483	2					
ANR	135511	Identifier	s		135483	0					
ANR	135512	ForStatement	for ( i = 0 ; i < data_len ; i ++ )		135483	3					
ANR	135513	ForInit	i = 0 ;	2510:9:114518:114523	135483	0	True				
ANR	135514	AssignmentExpression	i = 0		135483	0		=			
ANR	135515	Identifier	i		135483	0					
ANR	135516	PrimaryExpression	0		135483	1					
ANR	135517	Condition	i < data_len	2510:16:114525:114536	135483	1	True				
ANR	135518	RelationalExpression	i < data_len		135483	0		<			
ANR	135519	Identifier	i		135483	0					
ANR	135520	Identifier	data_len		135483	1					
ANR	135521	PostIncDecOperationExpression	i ++	2510:30:114539:114541	135483	2	True				
ANR	135522	Identifier	i		135483	0					
ANR	135523	IncDec	++		135483	1					
ANR	135524	CompoundStatement		8:35:290:290	135483	3					
ANR	135525	ExpressionStatement	"fprintf ( xmlout , ""%02x"" , data [ i ] )"	2511:8:114581:114614	135483	0	True				
ANR	135526	CallExpression	"fprintf ( xmlout , ""%02x"" , data [ i ] )"		135483	0					
ANR	135527	Callee	fprintf		135483	0					
ANR	135528	Identifier	fprintf		135483	0					
ANR	135529	ArgumentList	xmlout		135483	1					
ANR	135530	Argument	xmlout		135483	0					
ANR	135531	Identifier	xmlout		135483	0					
ANR	135532	Argument	"""%02x"""		135483	1					
ANR	135533	PrimaryExpression	"""%02x"""		135483	0					
ANR	135534	Argument	data [ i ]		135483	2					
ANR	135535	ArrayIndexing	data [ i ]		135483	0					
ANR	135536	Identifier	data		135483	0					
ANR	135537	Identifier	i		135483	1					
ANR	135538	ExpressionStatement	"fprintf ( xmlout , ""%s</AsHex>\\n"" , s )"	2513:4:114626:114663	135483	4	True				
ANR	135539	CallExpression	"fprintf ( xmlout , ""%s</AsHex>\\n"" , s )"		135483	0					
ANR	135540	Callee	fprintf		135483	0					
ANR	135541	Identifier	fprintf		135483	0					
ANR	135542	ArgumentList	xmlout		135483	1					
ANR	135543	Argument	xmlout		135483	0					
ANR	135544	Identifier	xmlout		135483	0					
ANR	135545	Argument	"""%s</AsHex>\\n"""		135483	1					
ANR	135546	PrimaryExpression	"""%s</AsHex>\\n"""		135483	0					
ANR	135547	Argument	s		135483	2					
ANR	135548	Identifier	s		135483	0					
ANR	135549	ReturnType	void		135483	1					
ANR	135550	Identifier	xml_out_dump_hex		135483	2					
ANR	135551	ParameterList	"FILE * xmlout , char * data , int data_len , char * s"		135483	3					
ANR	135552	Parameter	FILE * xmlout	2502:22:114204:114215	135483	0	True				
ANR	135553	ParameterType	FILE *		135483	0					
ANR	135554	Identifier	xmlout		135483	1					
ANR	135555	Parameter	char * data	2502:36:114218:114227	135483	1	True				
ANR	135556	ParameterType	char *		135483	0					
ANR	135557	Identifier	data		135483	1					
ANR	135558	Parameter	int data_len	2502:48:114230:114241	135483	2	True				
ANR	135559	ParameterType	int		135483	0					
ANR	135560	Identifier	data_len		135483	1					
ANR	135561	Parameter	char * s	2502:62:114244:114250	135483	3	True				
ANR	135562	ParameterType	char *		135483	0					
ANR	135563	Identifier	s		135483	1					
ANR	135564	CFGEntryNode	ENTRY		135483		True				
ANR	135565	CFGExitNode	EXIT		135483		True				
ANR	135566	Symbol	s		135483						
ANR	135567	Symbol	* i		135483						
ANR	135568	Symbol	data		135483						
ANR	135569	Symbol	data_len		135483						
ANR	135570	Symbol	i		135483						
ANR	135571	Symbol	* data		135483						
ANR	135572	Symbol	xmlout		135483						
ANR	135573	Function	xml_out_dump_hex_and_ascii	2519:0:114831:116324							
ANR	135574	FunctionDef	"xml_out_dump_hex_and_ascii (FILE * xmlout , char * data , int data_len , char * s)"		135573	0					
ANR	135575	CompoundStatement		2521:0:114944:116324	135573	0					
ANR	135576	IdentifierDeclStatement	"int i , j ;"	2523:4:114995:115003	135573	0	True				
ANR	135577	IdentifierDecl	i		135573	0					
ANR	135578	IdentifierDeclType	int		135573	0					
ANR	135579	Identifier	i		135573	1					
ANR	135580	IdentifierDecl	j		135573	1					
ANR	135581	IdentifierDeclType	int		135573	0					
ANR	135582	Identifier	j		135573	1					
ANR	135583	IfStatement	if ( raw )		135573	1					
ANR	135584	Condition	raw	2525:8:115014:115016	135573	0	True				
ANR	135585	Identifier	raw		135573	0					
ANR	135586	CompoundStatement		5:13:74:74	135573	1					
ANR	135587	ExpressionStatement	"xml_out_dump_hex ( xmlout , data , data_len , s )"	2526:8:115029:115072	135573	0	True				
ANR	135588	CallExpression	"xml_out_dump_hex ( xmlout , data , data_len , s )"		135573	0					
ANR	135589	Callee	xml_out_dump_hex		135573	0					
ANR	135590	Identifier	xml_out_dump_hex		135573	0					
ANR	135591	ArgumentList	xmlout		135573	1					
ANR	135592	Argument	xmlout		135573	0					
ANR	135593	Identifier	xmlout		135573	0					
ANR	135594	Argument	data		135573	1					
ANR	135595	Identifier	data		135573	0					
ANR	135596	Argument	data_len		135573	2					
ANR	135597	Identifier	data_len		135573	0					
ANR	135598	Argument	s		135573	3					
ANR	135599	Identifier	s		135573	0					
ANR	135600	IfStatement	if ( derived )		135573	2					
ANR	135601	Condition	derived	2529:8:115089:115095	135573	0	True				
ANR	135602	Identifier	derived		135573	0					
ANR	135603	CompoundStatement		9:17:153:153	135573	1					
ANR	135604	ExpressionStatement	"fprintf ( xmlout , ""%s<AsHexAndASCII>\\n"" , s )"	2530:8:115108:115150	135573	0	True				
ANR	135605	CallExpression	"fprintf ( xmlout , ""%s<AsHexAndASCII>\\n"" , s )"		135573	0					
ANR	135606	Callee	fprintf		135573	0					
ANR	135607	Identifier	fprintf		135573	0					
ANR	135608	ArgumentList	xmlout		135573	1					
ANR	135609	Argument	xmlout		135573	0					
ANR	135610	Identifier	xmlout		135573	0					
ANR	135611	Argument	"""%s<AsHexAndASCII>\\n"""		135573	1					
ANR	135612	PrimaryExpression	"""%s<AsHexAndASCII>\\n"""		135573	0					
ANR	135613	Argument	s		135573	2					
ANR	135614	Identifier	s		135573	0					
ANR	135615	ForStatement	for ( i = 0 ; i < data_len ; )		135573	1					
ANR	135616	ForInit	i = 0 ;	2531:13:115165:115170	135573	0	True				
ANR	135617	AssignmentExpression	i = 0		135573	0		=			
ANR	135618	Identifier	i		135573	0					
ANR	135619	PrimaryExpression	0		135573	1					
ANR	135620	Condition	i < data_len	2531:20:115172:115183	135573	1	True				
ANR	135621	RelationalExpression	i < data_len		135573	0		<			
ANR	135622	Identifier	i		135573	0					
ANR	135623	Identifier	data_len		135573	1					
ANR	135624	CompoundStatement		11:35:242:242	135573	2					
ANR	135625	ExpressionStatement	"fprintf ( xmlout , ""%s "" , s )"	2532:12:115201:115226	135573	0	True				
ANR	135626	CallExpression	"fprintf ( xmlout , ""%s "" , s )"		135573	0					
ANR	135627	Callee	fprintf		135573	0					
ANR	135628	Identifier	fprintf		135573	0					
ANR	135629	ArgumentList	xmlout		135573	1					
ANR	135630	Argument	xmlout		135573	0					
ANR	135631	Identifier	xmlout		135573	0					
ANR	135632	Argument	"""%s """		135573	1					
ANR	135633	PrimaryExpression	"""%s """		135573	0					
ANR	135634	Argument	s		135573	2					
ANR	135635	Identifier	s		135573	0					
ANR	135636	ForStatement	for ( j = 0 ; j < BYTES_PER_DUMP_LINE ; j ++ )		135573	1					
ANR	135637	ForInit	j = 0 ;	2534:17:115326:115331	135573	0	True				
ANR	135638	AssignmentExpression	j = 0		135573	0		=			
ANR	135639	Identifier	j		135573	0					
ANR	135640	PrimaryExpression	0		135573	1					
ANR	135641	Condition	j < BYTES_PER_DUMP_LINE	2534:24:115333:115355	135573	1	True				
ANR	135642	RelationalExpression	j < BYTES_PER_DUMP_LINE		135573	0		<			
ANR	135643	Identifier	j		135573	0					
ANR	135644	Identifier	BYTES_PER_DUMP_LINE		135573	1					
ANR	135645	PostIncDecOperationExpression	j ++	2534:49:115358:115360	135573	2	True				
ANR	135646	Identifier	j		135573	0					
ANR	135647	IncDec	++		135573	1					
ANR	135648	CompoundStatement		14:54:418:418	135573	3					
ANR	135649	ExpressionStatement	"fprintf ( xmlout , "" %02x"" , data [ i + j ] )"	2535:16:115398:115435	135573	0	True				
ANR	135650	CallExpression	"fprintf ( xmlout , "" %02x"" , data [ i + j ] )"		135573	0					
ANR	135651	Callee	fprintf		135573	0					
ANR	135652	Identifier	fprintf		135573	0					
ANR	135653	ArgumentList	xmlout		135573	1					
ANR	135654	Argument	xmlout		135573	0					
ANR	135655	Identifier	xmlout		135573	0					
ANR	135656	Argument	""" %02x"""		135573	1					
ANR	135657	PrimaryExpression	""" %02x"""		135573	0					
ANR	135658	Argument	data [ i + j ]		135573	2					
ANR	135659	ArrayIndexing	data [ i + j ]		135573	0					
ANR	135660	Identifier	data		135573	0					
ANR	135661	AdditiveExpression	i + j		135573	1		+			
ANR	135662	Identifier	i		135573	0					
ANR	135663	Identifier	j		135573	1					
ANR	135664	ExpressionStatement	"fprintf ( xmlout , ""  "" )"	2537:43:115494:115516	135573	2	True				
ANR	135665	CallExpression	"fprintf ( xmlout , ""  "" )"		135573	0					
ANR	135666	Callee	fprintf		135573	0					
ANR	135667	Identifier	fprintf		135573	0					
ANR	135668	ArgumentList	xmlout		135573	1					
ANR	135669	Argument	xmlout		135573	0					
ANR	135670	Identifier	xmlout		135573	0					
ANR	135671	Argument	"""  """		135573	1					
ANR	135672	PrimaryExpression	"""  """		135573	0					
ANR	135673	ForStatement	"for ( j = 0 ; j < BYTES_PER_DUMP_LINE ; j ++ , i ++ )"		135573	3					
ANR	135674	ForInit	j = 0 ;	2539:17:115574:115579	135573	0	True				
ANR	135675	AssignmentExpression	j = 0		135573	0		=			
ANR	135676	Identifier	j		135573	0					
ANR	135677	PrimaryExpression	0		135573	1					
ANR	135678	Condition	j < BYTES_PER_DUMP_LINE	2539:24:115581:115603	135573	1	True				
ANR	135679	RelationalExpression	j < BYTES_PER_DUMP_LINE		135573	0		<			
ANR	135680	Identifier	j		135573	0					
ANR	135681	Identifier	BYTES_PER_DUMP_LINE		135573	1					
ANR	135682	Expression	"j ++ , i ++"	2539:49:115606:115613	135573	2	True				
ANR	135683	PostIncDecOperationExpression	j ++		135573	0					
ANR	135684	Identifier	j		135573	0					
ANR	135685	IncDec	++		135573	1					
ANR	135686	PostIncDecOperationExpression	i ++		135573	1					
ANR	135687	Identifier	i		135573	0					
ANR	135688	IncDec	++		135573	1					
ANR	135689	CompoundStatement		19:59:671:671	135573	3					
ANR	135690	IfStatement	if ( isprint ( ( int ) data [ i ] ) && i < data_len )		135573	0					
ANR	135691	Condition	isprint ( ( int ) data [ i ] ) && i < data_len	2540:20:115638:115674	135573	0	True				
ANR	135692	AndExpression	isprint ( ( int ) data [ i ] ) && i < data_len		135573	0		&&			
ANR	135693	CallExpression	isprint ( ( int ) data [ i ] )		135573	0					
ANR	135694	Callee	isprint		135573	0					
ANR	135695	Identifier	isprint		135573	0					
ANR	135696	ArgumentList	( int ) data [ i ]		135573	1					
ANR	135697	Argument	( int ) data [ i ]		135573	0					
ANR	135698	CastExpression	( int ) data [ i ]		135573	0					
ANR	135699	CastTarget	int		135573	0					
ANR	135700	ArrayIndexing	data [ i ]		135573	1					
ANR	135701	Identifier	data		135573	0					
ANR	135702	Identifier	i		135573	1					
ANR	135703	RelationalExpression	i < data_len		135573	1		<			
ANR	135704	Identifier	i		135573	0					
ANR	135705	Identifier	data_len		135573	1					
ANR	135706	CompoundStatement		20:59:732:732	135573	1					
ANR	135707	ExpressionStatement	"fprintf ( xmlout , ""%c"" , data [ i ] )"	2541:20:115699:115729	135573	0	True				
ANR	135708	CallExpression	"fprintf ( xmlout , ""%c"" , data [ i ] )"		135573	0					
ANR	135709	Callee	fprintf		135573	0					
ANR	135710	Identifier	fprintf		135573	0					
ANR	135711	ArgumentList	xmlout		135573	1					
ANR	135712	Argument	xmlout		135573	0					
ANR	135713	Identifier	xmlout		135573	0					
ANR	135714	Argument	"""%c"""		135573	1					
ANR	135715	PrimaryExpression	"""%c"""		135573	0					
ANR	135716	Argument	data [ i ]		135573	2					
ANR	135717	ArrayIndexing	data [ i ]		135573	0					
ANR	135718	Identifier	data		135573	0					
ANR	135719	Identifier	i		135573	1					
ANR	135720	ElseStatement	else		135573	0					
ANR	135721	CompoundStatement		22:23:809:809	135573	0					
ANR	135722	ExpressionStatement	"fprintf ( xmlout , "" "" )"	2543:20:115776:115796	135573	0	True				
ANR	135723	CallExpression	"fprintf ( xmlout , "" "" )"		135573	0					
ANR	135724	Callee	fprintf		135573	0					
ANR	135725	Identifier	fprintf		135573	0					
ANR	135726	ArgumentList	xmlout		135573	1					
ANR	135727	Argument	xmlout		135573	0					
ANR	135728	Identifier	xmlout		135573	0					
ANR	135729	Argument	""" """		135573	1					
ANR	135730	PrimaryExpression	""" """		135573	0					
ANR	135731	ExpressionStatement	"fprintf ( xmlout , ""%s</AsHexAndASCII>\\n"" , s )"	2552:8:116273:116316	135573	2	True				
ANR	135732	CallExpression	"fprintf ( xmlout , ""%s</AsHexAndASCII>\\n"" , s )"		135573	0					
ANR	135733	Callee	fprintf		135573	0					
ANR	135734	Identifier	fprintf		135573	0					
ANR	135735	ArgumentList	xmlout		135573	1					
ANR	135736	Argument	xmlout		135573	0					
ANR	135737	Identifier	xmlout		135573	0					
ANR	135738	Argument	"""%s</AsHexAndASCII>\\n"""		135573	1					
ANR	135739	PrimaryExpression	"""%s</AsHexAndASCII>\\n"""		135573	0					
ANR	135740	Argument	s		135573	2					
ANR	135741	Identifier	s		135573	0					
ANR	135742	ReturnType	void		135573	1					
ANR	135743	Identifier	xml_out_dump_hex_and_ascii		135573	2					
ANR	135744	ParameterList	"FILE * xmlout , char * data , int data_len , char * s"		135573	3					
ANR	135745	Parameter	FILE * xmlout	2519:32:114863:114874	135573	0	True				
ANR	135746	ParameterType	FILE *		135573	0					
ANR	135747	Identifier	xmlout		135573	1					
ANR	135748	Parameter	char * data	2519:46:114877:114886	135573	1	True				
ANR	135749	ParameterType	char *		135573	0					
ANR	135750	Identifier	data		135573	1					
ANR	135751	Parameter	int data_len	2519:58:114889:114900	135573	2	True				
ANR	135752	ParameterType	int		135573	0					
ANR	135753	Identifier	data_len		135573	1					
ANR	135754	Parameter	char * s	2520:32:114935:114941	135573	3	True				
ANR	135755	ParameterType	char *		135573	0					
ANR	135756	Identifier	s		135573	1					
ANR	135757	CFGEntryNode	ENTRY		135573		True				
ANR	135758	CFGExitNode	EXIT		135573		True				
ANR	135759	Symbol	data		135573						
ANR	135760	Symbol	BYTES_PER_DUMP_LINE		135573						
ANR	135761	Symbol	data_len		135573						
ANR	135762	Symbol	isprint		135573						
ANR	135763	Symbol	i		135573						
ANR	135764	Symbol	raw		135573						
ANR	135765	Symbol	j		135573						
ANR	135766	Symbol	xmlout		135573						
ANR	135767	Symbol	s		135573						
ANR	135768	Symbol	* i		135573						
ANR	135769	Symbol	* j		135573						
ANR	135770	Symbol	derived		135573						
ANR	135771	Symbol	* data		135573						
ANR	135772	Function	xml_out_frame_jp2h	2559:0:116349:122860							
ANR	135773	FunctionDef	"xml_out_frame_jp2h (FILE * xmlout , opj_jp2_t * jp2_struct)"		135772	0					
ANR	135774	CompoundStatement		2560:0:116430:122860	135772	0					
ANR	135775	IdentifierDeclStatement	int i ;	2562:4:116492:116497	135772	0	True				
ANR	135776	IdentifierDecl	i		135772	0					
ANR	135777	IdentifierDeclType	int		135772	0					
ANR	135778	Identifier	i		135772	1					
ANR	135779	ExpressionStatement	"fprintf ( xmlout , ""              <JP2Header BoxType=\\""jp2h\\"">\\n"" )"	2564:4:116504:116572	135772	1	True				
ANR	135780	CallExpression	"fprintf ( xmlout , ""              <JP2Header BoxType=\\""jp2h\\"">\\n"" )"		135772	0					
ANR	135781	Callee	fprintf		135772	0					
ANR	135782	Identifier	fprintf		135772	0					
ANR	135783	ArgumentList	xmlout		135772	1					
ANR	135784	Argument	xmlout		135772	0					
ANR	135785	Identifier	xmlout		135772	0					
ANR	135786	Argument	"""              <JP2Header BoxType=\\""jp2h\\"">\\n"""		135772	1					
ANR	135787	PrimaryExpression	"""              <JP2Header BoxType=\\""jp2h\\"">\\n"""		135772	0					
ANR	135788	ExpressionStatement	"fprintf ( xmlout , ""                <ImageHeader BoxType=\\""ihdr\\"">\\n"" )"	2567:4:116624:116696	135772	2	True				
ANR	135789	CallExpression	"fprintf ( xmlout , ""                <ImageHeader BoxType=\\""ihdr\\"">\\n"" )"		135772	0					
ANR	135790	Callee	fprintf		135772	0					
ANR	135791	Identifier	fprintf		135772	0					
ANR	135792	ArgumentList	xmlout		135772	1					
ANR	135793	Argument	xmlout		135772	0					
ANR	135794	Identifier	xmlout		135772	0					
ANR	135795	Argument	"""                <ImageHeader BoxType=\\""ihdr\\"">\\n"""		135772	1					
ANR	135796	PrimaryExpression	"""                <ImageHeader BoxType=\\""ihdr\\"">\\n"""		135772	0					
ANR	135797	ExpressionStatement	"fprintf ( xmlout , ""                  <HEIGHT>%d</HEIGHT>\\n"" , jp2_struct -> h )"	2568:4:116702:116792	135772	3	True				
ANR	135798	CallExpression	"fprintf ( xmlout , ""                  <HEIGHT>%d</HEIGHT>\\n"" , jp2_struct -> h )"		135772	0					
ANR	135799	Callee	fprintf		135772	0					
ANR	135800	Identifier	fprintf		135772	0					
ANR	135801	ArgumentList	xmlout		135772	1					
ANR	135802	Argument	xmlout		135772	0					
ANR	135803	Identifier	xmlout		135772	0					
ANR	135804	Argument	"""                  <HEIGHT>%d</HEIGHT>\\n"""		135772	1					
ANR	135805	PrimaryExpression	"""                  <HEIGHT>%d</HEIGHT>\\n"""		135772	0					
ANR	135806	Argument	jp2_struct -> h		135772	2					
ANR	135807	PtrMemberAccess	jp2_struct -> h		135772	0					
ANR	135808	Identifier	jp2_struct		135772	0					
ANR	135809	Identifier	h		135772	1					
ANR	135810	ExpressionStatement	"fprintf ( xmlout , ""                  <WIDTH>%d</WIDTH>\\n"" , jp2_struct -> w )"	2570:4:116812:116900	135772	4	True				
ANR	135811	CallExpression	"fprintf ( xmlout , ""                  <WIDTH>%d</WIDTH>\\n"" , jp2_struct -> w )"		135772	0					
ANR	135812	Callee	fprintf		135772	0					
ANR	135813	Identifier	fprintf		135772	0					
ANR	135814	ArgumentList	xmlout		135772	1					
ANR	135815	Argument	xmlout		135772	0					
ANR	135816	Identifier	xmlout		135772	0					
ANR	135817	Argument	"""                  <WIDTH>%d</WIDTH>\\n"""		135772	1					
ANR	135818	PrimaryExpression	"""                  <WIDTH>%d</WIDTH>\\n"""		135772	0					
ANR	135819	Argument	jp2_struct -> w		135772	2					
ANR	135820	PtrMemberAccess	jp2_struct -> w		135772	0					
ANR	135821	Identifier	jp2_struct		135772	0					
ANR	135822	Identifier	w		135772	1					
ANR	135823	IfStatement	if ( notes )		135772	5					
ANR	135824	Condition	notes	2572:8:116924:116928	135772	0	True				
ANR	135825	Identifier	notes		135772	0					
ANR	135826	CompoundStatement		13:15:500:500	135772	1					
ANR	135827	ExpressionStatement	"fprintf ( xmlout , ""                  <!-- HEIGHT here, if 2 fields per image, is of total deinterlaced height. -->\\n"" )"	2573:8:116941:117073	135772	0	True				
ANR	135828	CallExpression	"fprintf ( xmlout , ""                  <!-- HEIGHT here, if 2 fields per image, is of total deinterlaced height. -->\\n"" )"		135772	0					
ANR	135829	Callee	fprintf		135772	0					
ANR	135830	Identifier	fprintf		135772	0					
ANR	135831	ArgumentList	xmlout		135772	1					
ANR	135832	Argument	xmlout		135772	0					
ANR	135833	Identifier	xmlout		135772	0					
ANR	135834	Argument	"""                  <!-- HEIGHT here, if 2 fields per image, is of total deinterlaced height. -->\\n"""		135772	1					
ANR	135835	PrimaryExpression	"""                  <!-- HEIGHT here, if 2 fields per image, is of total deinterlaced height. -->\\n"""		135772	0					
ANR	135836	ExpressionStatement	"fprintf ( xmlout , ""                  <NC>%d</NC>\\n"" , jp2_struct -> numcomps )"	2576:4:117085:117174	135772	6	True				
ANR	135837	CallExpression	"fprintf ( xmlout , ""                  <NC>%d</NC>\\n"" , jp2_struct -> numcomps )"		135772	0					
ANR	135838	Callee	fprintf		135772	0					
ANR	135839	Identifier	fprintf		135772	0					
ANR	135840	ArgumentList	xmlout		135772	1					
ANR	135841	Argument	xmlout		135772	0					
ANR	135842	Identifier	xmlout		135772	0					
ANR	135843	Argument	"""                  <NC>%d</NC>\\n"""		135772	1					
ANR	135844	PrimaryExpression	"""                  <NC>%d</NC>\\n"""		135772	0					
ANR	135845	Argument	jp2_struct -> numcomps		135772	2					
ANR	135846	PtrMemberAccess	jp2_struct -> numcomps		135772	0					
ANR	135847	Identifier	jp2_struct		135772	0					
ANR	135848	Identifier	numcomps		135772	1					
ANR	135849	IfStatement	if ( notes )		135772	7					
ANR	135850	Condition	notes	2578:8:117198:117202	135772	0	True				
ANR	135851	Identifier	notes		135772	0					
ANR	135852	CompoundStatement		19:15:774:774	135772	1					
ANR	135853	ExpressionStatement	"fprintf ( xmlout , ""                  <!-- NC is number of components -->\\n"" )"	2579:8:117215:117305	135772	0	True				
ANR	135854	CallExpression	"fprintf ( xmlout , ""                  <!-- NC is number of components -->\\n"" )"		135772	0					
ANR	135855	Callee	fprintf		135772	0					
ANR	135856	Identifier	fprintf		135772	0					
ANR	135857	ArgumentList	xmlout		135772	1					
ANR	135858	Argument	xmlout		135772	0					
ANR	135859	Identifier	xmlout		135772	0					
ANR	135860	Argument	"""                  <!-- NC is number of components -->\\n"""		135772	1					
ANR	135861	PrimaryExpression	"""                  <!-- NC is number of components -->\\n"""		135772	0					
ANR	135862	ExpressionStatement	"fprintf ( xmlout , ""                  <BPC>\\n"" )"	2582:4:117334:117383	135772	8	True				
ANR	135863	CallExpression	"fprintf ( xmlout , ""                  <BPC>\\n"" )"		135772	0					
ANR	135864	Callee	fprintf		135772	0					
ANR	135865	Identifier	fprintf		135772	0					
ANR	135866	ArgumentList	xmlout		135772	1					
ANR	135867	Argument	xmlout		135772	0					
ANR	135868	Identifier	xmlout		135772	0					
ANR	135869	Argument	"""                  <BPC>\\n"""		135772	1					
ANR	135870	PrimaryExpression	"""                  <BPC>\\n"""		135772	0					
ANR	135871	IfStatement	if ( jp2_struct -> bpc == 255 )		135772	9					
ANR	135872	Condition	jp2_struct -> bpc == 255	2583:8:117406:117427	135772	0	True				
ANR	135873	EqualityExpression	jp2_struct -> bpc == 255		135772	0		==			
ANR	135874	PtrMemberAccess	jp2_struct -> bpc		135772	0					
ANR	135875	Identifier	jp2_struct		135772	0					
ANR	135876	Identifier	bpc		135772	1					
ANR	135877	PrimaryExpression	255		135772	1					
ANR	135878	CompoundStatement		24:32:999:999	135772	1					
ANR	135879	ExpressionStatement	"fprintf ( xmlout , ""                    <AsHex>0x%02x</AsHex>\\n"" , jp2_struct -> bpc )"	2584:8:117440:117538	135772	0	True				
ANR	135880	CallExpression	"fprintf ( xmlout , ""                    <AsHex>0x%02x</AsHex>\\n"" , jp2_struct -> bpc )"		135772	0					
ANR	135881	Callee	fprintf		135772	0					
ANR	135882	Identifier	fprintf		135772	0					
ANR	135883	ArgumentList	xmlout		135772	1					
ANR	135884	Argument	xmlout		135772	0					
ANR	135885	Identifier	xmlout		135772	0					
ANR	135886	Argument	"""                    <AsHex>0x%02x</AsHex>\\n"""		135772	1					
ANR	135887	PrimaryExpression	"""                    <AsHex>0x%02x</AsHex>\\n"""		135772	0					
ANR	135888	Argument	jp2_struct -> bpc		135772	2					
ANR	135889	PtrMemberAccess	jp2_struct -> bpc		135772	0					
ANR	135890	Identifier	jp2_struct		135772	0					
ANR	135891	Identifier	bpc		135772	1					
ANR	135892	IfStatement	if ( notes )		135772	1					
ANR	135893	Condition	notes	2586:12:117565:117569	135772	0	True				
ANR	135894	Identifier	notes		135772	0					
ANR	135895	CompoundStatement		27:19:1141:1141	135772	1					
ANR	135896	ExpressionStatement	"fprintf ( xmlout , ""                    <!-- BPC = 0xff means bits per pixel varies with component; see table below. -->\\n"" )"	2587:12:117586:117727	135772	0	True				
ANR	135897	CallExpression	"fprintf ( xmlout , ""                    <!-- BPC = 0xff means bits per pixel varies with component; see table below. -->\\n"" )"		135772	0					
ANR	135898	Callee	fprintf		135772	0					
ANR	135899	Identifier	fprintf		135772	0					
ANR	135900	ArgumentList	xmlout		135772	1					
ANR	135901	Argument	xmlout		135772	0					
ANR	135902	Identifier	xmlout		135772	0					
ANR	135903	Argument	"""                    <!-- BPC = 0xff means bits per pixel varies with component; see table below. -->\\n"""		135772	1					
ANR	135904	PrimaryExpression	"""                    <!-- BPC = 0xff means bits per pixel varies with component; see table below. -->\\n"""		135772	0					
ANR	135905	ElseStatement	else		135772	0					
ANR	135906	CompoundStatement		31:11:1319:1319	135772	0					
ANR	135907	IfStatement	if ( raw )		135772	0					
ANR	135908	Condition	raw	2591:12:117779:117781	135772	0	True				
ANR	135909	Identifier	raw		135772	0					
ANR	135910	CompoundStatement		32:17:1353:1353	135772	1					
ANR	135911	ExpressionStatement	"fprintf ( xmlout , ""                    <AsHex>0x%02x</AsHex>\\n"" , jp2_struct -> bpc )"	2592:12:117798:117898	135772	0	True				
ANR	135912	CallExpression	"fprintf ( xmlout , ""                    <AsHex>0x%02x</AsHex>\\n"" , jp2_struct -> bpc )"		135772	0					
ANR	135913	Callee	fprintf		135772	0					
ANR	135914	Identifier	fprintf		135772	0					
ANR	135915	ArgumentList	xmlout		135772	1					
ANR	135916	Argument	xmlout		135772	0					
ANR	135917	Identifier	xmlout		135772	0					
ANR	135918	Argument	"""                    <AsHex>0x%02x</AsHex>\\n"""		135772	1					
ANR	135919	PrimaryExpression	"""                    <AsHex>0x%02x</AsHex>\\n"""		135772	0					
ANR	135920	Argument	jp2_struct -> bpc		135772	2					
ANR	135921	PtrMemberAccess	jp2_struct -> bpc		135772	0					
ANR	135922	Identifier	jp2_struct		135772	0					
ANR	135923	Identifier	bpc		135772	1					
ANR	135924	IfStatement	if ( notes )		135772	1					
ANR	135925	Condition	notes	2594:16:117929:117933	135772	0	True				
ANR	135926	Identifier	notes		135772	0					
ANR	135927	CompoundStatement		35:23:1505:1505	135772	1					
ANR	135928	ExpressionStatement	"fprintf ( xmlout , ""                    <!-- BPC = 0xff means bits per pixel varies with component; see table below. -->\\n"" )"	2595:16:117954:118099	135772	0	True				
ANR	135929	CallExpression	"fprintf ( xmlout , ""                    <!-- BPC = 0xff means bits per pixel varies with component; see table below. -->\\n"" )"		135772	0					
ANR	135930	Callee	fprintf		135772	0					
ANR	135931	Identifier	fprintf		135772	0					
ANR	135932	ArgumentList	xmlout		135772	1					
ANR	135933	Argument	xmlout		135772	0					
ANR	135934	Identifier	xmlout		135772	0					
ANR	135935	Argument	"""                    <!-- BPC = 0xff means bits per pixel varies with component; see table below. -->\\n"""		135772	1					
ANR	135936	PrimaryExpression	"""                    <!-- BPC = 0xff means bits per pixel varies with component; see table below. -->\\n"""		135772	0					
ANR	135937	IfStatement	if ( derived )		135772	1					
ANR	135938	Condition	derived	2599:12:118137:118143	135772	0	True				
ANR	135939	Identifier	derived		135772	0					
ANR	135940	CompoundStatement		40:21:1715:1715	135772	1					
ANR	135941	ExpressionStatement	"fprintf ( xmlout , ""                    <BitsPerPixel>%d</BitsPerPixel>\\n"" , jp2_struct -> bpc & 0x7f )"	2600:12:118160:118277	135772	0	True				
ANR	135942	CallExpression	"fprintf ( xmlout , ""                    <BitsPerPixel>%d</BitsPerPixel>\\n"" , jp2_struct -> bpc & 0x7f )"		135772	0					
ANR	135943	Callee	fprintf		135772	0					
ANR	135944	Identifier	fprintf		135772	0					
ANR	135945	ArgumentList	xmlout		135772	1					
ANR	135946	Argument	xmlout		135772	0					
ANR	135947	Identifier	xmlout		135772	0					
ANR	135948	Argument	"""                    <BitsPerPixel>%d</BitsPerPixel>\\n"""		135772	1					
ANR	135949	PrimaryExpression	"""                    <BitsPerPixel>%d</BitsPerPixel>\\n"""		135772	0					
ANR	135950	Argument	jp2_struct -> bpc & 0x7f		135772	2					
ANR	135951	BitAndExpression	jp2_struct -> bpc & 0x7f		135772	0		&			
ANR	135952	PtrMemberAccess	jp2_struct -> bpc		135772	0					
ANR	135953	Identifier	jp2_struct		135772	0					
ANR	135954	Identifier	bpc		135772	1					
ANR	135955	PrimaryExpression	0x7f		135772	1					
ANR	135956	ExpressionStatement	"fprintf ( xmlout , ""                    <Signed>%d</Signed>\\n"" , jp2_struct -> bpc >> 7 )"	2602:12:118291:118394	135772	1	True				
ANR	135957	CallExpression	"fprintf ( xmlout , ""                    <Signed>%d</Signed>\\n"" , jp2_struct -> bpc >> 7 )"		135772	0					
ANR	135958	Callee	fprintf		135772	0					
ANR	135959	Identifier	fprintf		135772	0					
ANR	135960	ArgumentList	xmlout		135772	1					
ANR	135961	Argument	xmlout		135772	0					
ANR	135962	Identifier	xmlout		135772	0					
ANR	135963	Argument	"""                    <Signed>%d</Signed>\\n"""		135772	1					
ANR	135964	PrimaryExpression	"""                    <Signed>%d</Signed>\\n"""		135772	0					
ANR	135965	Argument	jp2_struct -> bpc >> 7		135772	2					
ANR	135966	ShiftExpression	jp2_struct -> bpc >> 7		135772	0		>>			
ANR	135967	PtrMemberAccess	jp2_struct -> bpc		135772	0					
ANR	135968	Identifier	jp2_struct		135772	0					
ANR	135969	Identifier	bpc		135772	1					
ANR	135970	PrimaryExpression	7		135772	1					
ANR	135971	ExpressionStatement	"fprintf ( xmlout , ""                  </BPC>\\n"" )"	2606:4:118416:118466	135772	10	True				
ANR	135972	CallExpression	"fprintf ( xmlout , ""                  </BPC>\\n"" )"		135772	0					
ANR	135973	Callee	fprintf		135772	0					
ANR	135974	Identifier	fprintf		135772	0					
ANR	135975	ArgumentList	xmlout		135772	1					
ANR	135976	Argument	xmlout		135772	0					
ANR	135977	Identifier	xmlout		135772	0					
ANR	135978	Argument	"""                  </BPC>\\n"""		135772	1					
ANR	135979	PrimaryExpression	"""                  </BPC>\\n"""		135772	0					
ANR	135980	ExpressionStatement	"fprintf ( xmlout , ""                  <C>%d</C>\\n"" , jp2_struct -> C )"	2607:4:118472:118552	135772	11	True				
ANR	135981	CallExpression	"fprintf ( xmlout , ""                  <C>%d</C>\\n"" , jp2_struct -> C )"		135772	0					
ANR	135982	Callee	fprintf		135772	0					
ANR	135983	Identifier	fprintf		135772	0					
ANR	135984	ArgumentList	xmlout		135772	1					
ANR	135985	Argument	xmlout		135772	0					
ANR	135986	Identifier	xmlout		135772	0					
ANR	135987	Argument	"""                  <C>%d</C>\\n"""		135772	1					
ANR	135988	PrimaryExpression	"""                  <C>%d</C>\\n"""		135772	0					
ANR	135989	Argument	jp2_struct -> C		135772	2					
ANR	135990	PtrMemberAccess	jp2_struct -> C		135772	0					
ANR	135991	Identifier	jp2_struct		135772	0					
ANR	135992	Identifier	C		135772	1					
ANR	135993	IfStatement	if ( notes )		135772	12					
ANR	135994	Condition	notes	2609:8:118575:118579	135772	0	True				
ANR	135995	Identifier	notes		135772	0					
ANR	135996	CompoundStatement		50:15:2151:2151	135772	1					
ANR	135997	ExpressionStatement	"fprintf ( xmlout , ""                  <!-- C is compression type.  Only \\""7\\"" is allowed to date. -->\\n"" )"	2610:8:118592:118710	135772	0	True				
ANR	135998	CallExpression	"fprintf ( xmlout , ""                  <!-- C is compression type.  Only \\""7\\"" is allowed to date. -->\\n"" )"		135772	0					
ANR	135999	Callee	fprintf		135772	0					
ANR	136000	Identifier	fprintf		135772	0					
ANR	136001	ArgumentList	xmlout		135772	1					
ANR	136002	Argument	xmlout		135772	0					
ANR	136003	Identifier	xmlout		135772	0					
ANR	136004	Argument	"""                  <!-- C is compression type.  Only \\""7\\"" is allowed to date. -->\\n"""		135772	1					
ANR	136005	PrimaryExpression	"""                  <!-- C is compression type.  Only \\""7\\"" is allowed to date. -->\\n"""		135772	0					
ANR	136006	ExpressionStatement	"fprintf ( xmlout , ""                  <UnkC>%d</UnkC>\\n"" , jp2_struct -> UnkC )"	2613:4:118739:118828	135772	13	True				
ANR	136007	CallExpression	"fprintf ( xmlout , ""                  <UnkC>%d</UnkC>\\n"" , jp2_struct -> UnkC )"		135772	0					
ANR	136008	Callee	fprintf		135772	0					
ANR	136009	Identifier	fprintf		135772	0					
ANR	136010	ArgumentList	xmlout		135772	1					
ANR	136011	Argument	xmlout		135772	0					
ANR	136012	Identifier	xmlout		135772	0					
ANR	136013	Argument	"""                  <UnkC>%d</UnkC>\\n"""		135772	1					
ANR	136014	PrimaryExpression	"""                  <UnkC>%d</UnkC>\\n"""		135772	0					
ANR	136015	Argument	jp2_struct -> UnkC		135772	2					
ANR	136016	PtrMemberAccess	jp2_struct -> UnkC		135772	0					
ANR	136017	Identifier	jp2_struct		135772	0					
ANR	136018	Identifier	UnkC		135772	1					
ANR	136019	IfStatement	if ( notes )		135772	14					
ANR	136020	Condition	notes	2615:8:118851:118855	135772	0	True				
ANR	136021	Identifier	notes		135772	0					
ANR	136022	CompoundStatement		56:15:2427:2427	135772	1					
ANR	136023	ExpressionStatement	"fprintf ( xmlout , ""                  <!-- Colourspace Unknown. 1 = unknown, 0 = known (e.g., colourspace spec is accurate) -->\\n"" )"	2616:8:118868:119012	135772	0	True				
ANR	136024	CallExpression	"fprintf ( xmlout , ""                  <!-- Colourspace Unknown. 1 = unknown, 0 = known (e.g., colourspace spec is accurate) -->\\n"" )"		135772	0					
ANR	136025	Callee	fprintf		135772	0					
ANR	136026	Identifier	fprintf		135772	0					
ANR	136027	ArgumentList	xmlout		135772	1					
ANR	136028	Argument	xmlout		135772	0					
ANR	136029	Identifier	xmlout		135772	0					
ANR	136030	Argument	"""                  <!-- Colourspace Unknown. 1 = unknown, 0 = known (e.g., colourspace spec is accurate) -->\\n"""		135772	1					
ANR	136031	PrimaryExpression	"""                  <!-- Colourspace Unknown. 1 = unknown, 0 = known (e.g., colourspace spec is accurate) -->\\n"""		135772	0					
ANR	136032	ExpressionStatement	"fprintf ( xmlout , ""                  <IPR>%d</IPR>\\n"" , jp2_struct -> IPR )"	2619:4:119040:119126	135772	15	True				
ANR	136033	CallExpression	"fprintf ( xmlout , ""                  <IPR>%d</IPR>\\n"" , jp2_struct -> IPR )"		135772	0					
ANR	136034	Callee	fprintf		135772	0					
ANR	136035	Identifier	fprintf		135772	0					
ANR	136036	ArgumentList	xmlout		135772	1					
ANR	136037	Argument	xmlout		135772	0					
ANR	136038	Identifier	xmlout		135772	0					
ANR	136039	Argument	"""                  <IPR>%d</IPR>\\n"""		135772	1					
ANR	136040	PrimaryExpression	"""                  <IPR>%d</IPR>\\n"""		135772	0					
ANR	136041	Argument	jp2_struct -> IPR		135772	2					
ANR	136042	PtrMemberAccess	jp2_struct -> IPR		135772	0					
ANR	136043	Identifier	jp2_struct		135772	0					
ANR	136044	Identifier	IPR		135772	1					
ANR	136045	IfStatement	if ( notes )		135772	16					
ANR	136046	Condition	notes	2621:8:119149:119153	135772	0	True				
ANR	136047	Identifier	notes		135772	0					
ANR	136048	CompoundStatement		62:15:2725:2725	135772	1					
ANR	136049	ExpressionStatement	"fprintf ( xmlout , ""                  <!-- IPR is 1 if frame contains an Intellectual Property box; 0 otherwise. -->\\n"" )"	2622:8:119166:119299	135772	0	True				
ANR	136050	CallExpression	"fprintf ( xmlout , ""                  <!-- IPR is 1 if frame contains an Intellectual Property box; 0 otherwise. -->\\n"" )"		135772	0					
ANR	136051	Callee	fprintf		135772	0					
ANR	136052	Identifier	fprintf		135772	0					
ANR	136053	ArgumentList	xmlout		135772	1					
ANR	136054	Argument	xmlout		135772	0					
ANR	136055	Identifier	xmlout		135772	0					
ANR	136056	Argument	"""                  <!-- IPR is 1 if frame contains an Intellectual Property box; 0 otherwise. -->\\n"""		135772	1					
ANR	136057	PrimaryExpression	"""                  <!-- IPR is 1 if frame contains an Intellectual Property box; 0 otherwise. -->\\n"""		135772	0					
ANR	136058	ExpressionStatement	"fprintf ( xmlout , ""                </ImageHeader>\\n"" )"	2625:4:119328:119384	135772	17	True				
ANR	136059	CallExpression	"fprintf ( xmlout , ""                </ImageHeader>\\n"" )"		135772	0					
ANR	136060	Callee	fprintf		135772	0					
ANR	136061	Identifier	fprintf		135772	0					
ANR	136062	ArgumentList	xmlout		135772	1					
ANR	136063	Argument	xmlout		135772	0					
ANR	136064	Identifier	xmlout		135772	0					
ANR	136065	Argument	"""                </ImageHeader>\\n"""		135772	1					
ANR	136066	PrimaryExpression	"""                </ImageHeader>\\n"""		135772	0					
ANR	136067	IfStatement	if ( jp2_struct -> bpc == 255 )		135772	18					
ANR	136068	Condition	jp2_struct -> bpc == 255	2627:8:119395:119416	135772	0	True				
ANR	136069	EqualityExpression	jp2_struct -> bpc == 255		135772	0		==			
ANR	136070	PtrMemberAccess	jp2_struct -> bpc		135772	0					
ANR	136071	Identifier	jp2_struct		135772	0					
ANR	136072	Identifier	bpc		135772	1					
ANR	136073	PrimaryExpression	255		135772	1					
ANR	136074	CompoundStatement		68:32:2988:2988	135772	1					
ANR	136075	ExpressionStatement	"fprintf ( xmlout , ""                <BitsPerComponent BoxType=\\""bpcc\\"">\\n"" )"	2628:8:119429:119504	135772	0	True				
ANR	136076	CallExpression	"fprintf ( xmlout , ""                <BitsPerComponent BoxType=\\""bpcc\\"">\\n"" )"		135772	0					
ANR	136077	Callee	fprintf		135772	0					
ANR	136078	Identifier	fprintf		135772	0					
ANR	136079	ArgumentList	xmlout		135772	1					
ANR	136080	Argument	xmlout		135772	0					
ANR	136081	Identifier	xmlout		135772	0					
ANR	136082	Argument	"""                <BitsPerComponent BoxType=\\""bpcc\\"">\\n"""		135772	1					
ANR	136083	PrimaryExpression	"""                <BitsPerComponent BoxType=\\""bpcc\\"">\\n"""		135772	0					
ANR	136084	IfStatement	if ( notes )		135772	1					
ANR	136085	Condition	notes	2629:12:119518:119522	135772	0	True				
ANR	136086	Identifier	notes		135772	0					
ANR	136087	CompoundStatement		70:19:3094:3094	135772	1					
ANR	136088	ExpressionStatement	"fprintf ( xmlout , ""                <!-- Pixel depth (range 1 to 38) is low 7 bits of hex value + 1 -->\\n"" )"	2630:12:119539:119663	135772	0	True				
ANR	136089	CallExpression	"fprintf ( xmlout , ""                <!-- Pixel depth (range 1 to 38) is low 7 bits of hex value + 1 -->\\n"" )"		135772	0					
ANR	136090	Callee	fprintf		135772	0					
ANR	136091	Identifier	fprintf		135772	0					
ANR	136092	ArgumentList	xmlout		135772	1					
ANR	136093	Argument	xmlout		135772	0					
ANR	136094	Identifier	xmlout		135772	0					
ANR	136095	Argument	"""                <!-- Pixel depth (range 1 to 38) is low 7 bits of hex value + 1 -->\\n"""		135772	1					
ANR	136096	PrimaryExpression	"""                <!-- Pixel depth (range 1 to 38) is low 7 bits of hex value + 1 -->\\n"""		135772	0					
ANR	136097	ForStatement	for ( i = 0 ; i < ( int ) jp2_struct -> numcomps ; i ++ )		135772	2					
ANR	136098	ForInit	i = 0 ;	2635:13:119788:119793	135772	0	True				
ANR	136099	AssignmentExpression	i = 0		135772	0		=			
ANR	136100	Identifier	i		135772	0					
ANR	136101	PrimaryExpression	0		135772	1					
ANR	136102	Condition	i < ( int ) jp2_struct -> numcomps	2635:20:119795:119823	135772	1	True				
ANR	136103	RelationalExpression	i < ( int ) jp2_struct -> numcomps		135772	0		<			
ANR	136104	Identifier	i		135772	0					
ANR	136105	CastExpression	( int ) jp2_struct -> numcomps		135772	1					
ANR	136106	CastTarget	int		135772	0					
ANR	136107	PtrMemberAccess	jp2_struct -> numcomps		135772	1					
ANR	136108	Identifier	jp2_struct		135772	0					
ANR	136109	Identifier	numcomps		135772	1					
ANR	136110	PostIncDecOperationExpression	i ++	2635:51:119826:119828	135772	2	True				
ANR	136111	Identifier	i		135772	0					
ANR	136112	IncDec	++		135772	1					
ANR	136113	CompoundStatement		76:56:3400:3400	135772	3					
ANR	136114	IfStatement	if ( raw )		135772	0					
ANR	136115	Condition	raw	2636:16:119849:119851	135772	0	True				
ANR	136116	Identifier	raw		135772	0					
ANR	136117	CompoundStatement		77:21:3423:3423	135772	1					
ANR	136118	ExpressionStatement	"fprintf ( xmlout , ""                  <AsHex>0x%02x</AsHex>\\n"" , jp2_struct -> comps [ i ] . bpcc )"	2637:16:119872:119983	135772	0	True				
ANR	136119	CallExpression	"fprintf ( xmlout , ""                  <AsHex>0x%02x</AsHex>\\n"" , jp2_struct -> comps [ i ] . bpcc )"		135772	0					
ANR	136120	Callee	fprintf		135772	0					
ANR	136121	Identifier	fprintf		135772	0					
ANR	136122	ArgumentList	xmlout		135772	1					
ANR	136123	Argument	xmlout		135772	0					
ANR	136124	Identifier	xmlout		135772	0					
ANR	136125	Argument	"""                  <AsHex>0x%02x</AsHex>\\n"""		135772	1					
ANR	136126	PrimaryExpression	"""                  <AsHex>0x%02x</AsHex>\\n"""		135772	0					
ANR	136127	Argument	jp2_struct -> comps [ i ] . bpcc		135772	2					
ANR	136128	MemberAccess	jp2_struct -> comps [ i ] . bpcc		135772	0					
ANR	136129	ArrayIndexing	jp2_struct -> comps [ i ]		135772	0					
ANR	136130	PtrMemberAccess	jp2_struct -> comps		135772	0					
ANR	136131	Identifier	jp2_struct		135772	0					
ANR	136132	Identifier	comps		135772	1					
ANR	136133	Identifier	i		135772	1					
ANR	136134	Identifier	bpcc		135772	1					
ANR	136135	IfStatement	if ( derived )		135772	1					
ANR	136136	Condition	derived	2640:16:120031:120037	135772	0	True				
ANR	136137	Identifier	derived		135772	0					
ANR	136138	CompoundStatement		81:25:3609:3609	135772	1					
ANR	136139	ExpressionStatement	"fprintf ( xmlout , ""                  <BitsPerPixel>%d</BitsPerPixel>\\n"" , ( jp2_struct -> comps [ i ] . bpcc & 0x7f ) + 1 )"	2641:16:120058:120192	135772	0	True				
ANR	136140	CallExpression	"fprintf ( xmlout , ""                  <BitsPerPixel>%d</BitsPerPixel>\\n"" , ( jp2_struct -> comps [ i ] . bpcc & 0x7f ) + 1 )"		135772	0					
ANR	136141	Callee	fprintf		135772	0					
ANR	136142	Identifier	fprintf		135772	0					
ANR	136143	ArgumentList	xmlout		135772	1					
ANR	136144	Argument	xmlout		135772	0					
ANR	136145	Identifier	xmlout		135772	0					
ANR	136146	Argument	"""                  <BitsPerPixel>%d</BitsPerPixel>\\n"""		135772	1					
ANR	136147	PrimaryExpression	"""                  <BitsPerPixel>%d</BitsPerPixel>\\n"""		135772	0					
ANR	136148	Argument	( jp2_struct -> comps [ i ] . bpcc & 0x7f ) + 1		135772	2					
ANR	136149	AdditiveExpression	( jp2_struct -> comps [ i ] . bpcc & 0x7f ) + 1		135772	0		+			
ANR	136150	BitAndExpression	jp2_struct -> comps [ i ] . bpcc & 0x7f		135772	0		&			
ANR	136151	MemberAccess	jp2_struct -> comps [ i ] . bpcc		135772	0					
ANR	136152	ArrayIndexing	jp2_struct -> comps [ i ]		135772	0					
ANR	136153	PtrMemberAccess	jp2_struct -> comps		135772	0					
ANR	136154	Identifier	jp2_struct		135772	0					
ANR	136155	Identifier	comps		135772	1					
ANR	136156	Identifier	i		135772	1					
ANR	136157	Identifier	bpcc		135772	1					
ANR	136158	PrimaryExpression	0x7f		135772	1					
ANR	136159	PrimaryExpression	1		135772	1					
ANR	136160	ExpressionStatement	"fprintf ( xmlout , ""                  <Signed>%d</Signed>\\n"" , jp2_struct -> comps [ i ] . bpcc >> 7 )"	2643:16:120210:120324	135772	1	True				
ANR	136161	CallExpression	"fprintf ( xmlout , ""                  <Signed>%d</Signed>\\n"" , jp2_struct -> comps [ i ] . bpcc >> 7 )"		135772	0					
ANR	136162	Callee	fprintf		135772	0					
ANR	136163	Identifier	fprintf		135772	0					
ANR	136164	ArgumentList	xmlout		135772	1					
ANR	136165	Argument	xmlout		135772	0					
ANR	136166	Identifier	xmlout		135772	0					
ANR	136167	Argument	"""                  <Signed>%d</Signed>\\n"""		135772	1					
ANR	136168	PrimaryExpression	"""                  <Signed>%d</Signed>\\n"""		135772	0					
ANR	136169	Argument	jp2_struct -> comps [ i ] . bpcc >> 7		135772	2					
ANR	136170	ShiftExpression	jp2_struct -> comps [ i ] . bpcc >> 7		135772	0		>>			
ANR	136171	MemberAccess	jp2_struct -> comps [ i ] . bpcc		135772	0					
ANR	136172	ArrayIndexing	jp2_struct -> comps [ i ]		135772	0					
ANR	136173	PtrMemberAccess	jp2_struct -> comps		135772	0					
ANR	136174	Identifier	jp2_struct		135772	0					
ANR	136175	Identifier	comps		135772	1					
ANR	136176	Identifier	i		135772	1					
ANR	136177	Identifier	bpcc		135772	1					
ANR	136178	PrimaryExpression	7		135772	1					
ANR	136179	ExpressionStatement	"fprintf ( xmlout , ""                </BitsPerComponent>\\n"" )"	2647:8:120358:120417	135772	3	True				
ANR	136180	CallExpression	"fprintf ( xmlout , ""                </BitsPerComponent>\\n"" )"		135772	0					
ANR	136181	Callee	fprintf		135772	0					
ANR	136182	Identifier	fprintf		135772	0					
ANR	136183	ArgumentList	xmlout		135772	1					
ANR	136184	Argument	xmlout		135772	0					
ANR	136185	Identifier	xmlout		135772	0					
ANR	136186	Argument	"""                </BitsPerComponent>\\n"""		135772	1					
ANR	136187	PrimaryExpression	"""                </BitsPerComponent>\\n"""		135772	0					
ANR	136188	ExpressionStatement	"fprintf ( xmlout , ""                <ColourSpecification BoxType=\\""colr\\"">\\n"" )"	2651:4:120474:120561	135772	19	True				
ANR	136189	CallExpression	"fprintf ( xmlout , ""                <ColourSpecification BoxType=\\""colr\\"">\\n"" )"		135772	0					
ANR	136190	Callee	fprintf		135772	0					
ANR	136191	Identifier	fprintf		135772	0					
ANR	136192	ArgumentList	xmlout		135772	1					
ANR	136193	Argument	xmlout		135772	0					
ANR	136194	Identifier	xmlout		135772	0					
ANR	136195	Argument	"""                <ColourSpecification BoxType=\\""colr\\"">\\n"""		135772	1					
ANR	136196	PrimaryExpression	"""                <ColourSpecification BoxType=\\""colr\\"">\\n"""		135772	0					
ANR	136197	ExpressionStatement	"fprintf ( xmlout , ""                  <METH>%d</METH>\\n"" , jp2_struct -> meth )"	2653:4:120567:120656	135772	20	True				
ANR	136198	CallExpression	"fprintf ( xmlout , ""                  <METH>%d</METH>\\n"" , jp2_struct -> meth )"		135772	0					
ANR	136199	Callee	fprintf		135772	0					
ANR	136200	Identifier	fprintf		135772	0					
ANR	136201	ArgumentList	xmlout		135772	1					
ANR	136202	Argument	xmlout		135772	0					
ANR	136203	Identifier	xmlout		135772	0					
ANR	136204	Argument	"""                  <METH>%d</METH>\\n"""		135772	1					
ANR	136205	PrimaryExpression	"""                  <METH>%d</METH>\\n"""		135772	0					
ANR	136206	Argument	jp2_struct -> meth		135772	2					
ANR	136207	PtrMemberAccess	jp2_struct -> meth		135772	0					
ANR	136208	Identifier	jp2_struct		135772	0					
ANR	136209	Identifier	meth		135772	1					
ANR	136210	IfStatement	if ( notes )		135772	21					
ANR	136211	Condition	notes	2655:8:120679:120683	135772	0	True				
ANR	136212	Identifier	notes		135772	0					
ANR	136213	CompoundStatement		96:15:4255:4255	135772	1					
ANR	136214	ExpressionStatement	"fprintf ( xmlout , ""                  <!-- Valid values of specification method so far: -->\\n"" )"	2656:8:120696:120804	135772	0	True				
ANR	136215	CallExpression	"fprintf ( xmlout , ""                  <!-- Valid values of specification method so far: -->\\n"" )"		135772	0					
ANR	136216	Callee	fprintf		135772	0					
ANR	136217	Identifier	fprintf		135772	0					
ANR	136218	ArgumentList	xmlout		135772	1					
ANR	136219	Argument	xmlout		135772	0					
ANR	136220	Identifier	xmlout		135772	0					
ANR	136221	Argument	"""                  <!-- Valid values of specification method so far: -->\\n"""		135772	1					
ANR	136222	PrimaryExpression	"""                  <!-- Valid values of specification method so far: -->\\n"""		135772	0					
ANR	136223	ExpressionStatement	"fprintf ( xmlout , ""                  <!--   1 = Enumerated colourspace, in EnumCS field -->\\n"" )"	2658:8:120814:120923	135772	1	True				
ANR	136224	CallExpression	"fprintf ( xmlout , ""                  <!--   1 = Enumerated colourspace, in EnumCS field -->\\n"" )"		135772	0					
ANR	136225	Callee	fprintf		135772	0					
ANR	136226	Identifier	fprintf		135772	0					
ANR	136227	ArgumentList	xmlout		135772	1					
ANR	136228	Argument	xmlout		135772	0					
ANR	136229	Identifier	xmlout		135772	0					
ANR	136230	Argument	"""                  <!--   1 = Enumerated colourspace, in EnumCS field -->\\n"""		135772	1					
ANR	136231	PrimaryExpression	"""                  <!--   1 = Enumerated colourspace, in EnumCS field -->\\n"""		135772	0					
ANR	136232	ExpressionStatement	"fprintf ( xmlout , ""                  <!--   2 = Restricted ICC Profile, in PROFILE field -->\\n"" )"	2660:8:120933:121043	135772	2	True				
ANR	136233	CallExpression	"fprintf ( xmlout , ""                  <!--   2 = Restricted ICC Profile, in PROFILE field -->\\n"" )"		135772	0					
ANR	136234	Callee	fprintf		135772	0					
ANR	136235	Identifier	fprintf		135772	0					
ANR	136236	ArgumentList	xmlout		135772	1					
ANR	136237	Argument	xmlout		135772	0					
ANR	136238	Identifier	xmlout		135772	0					
ANR	136239	Argument	"""                  <!--   2 = Restricted ICC Profile, in PROFILE field -->\\n"""		135772	1					
ANR	136240	PrimaryExpression	"""                  <!--   2 = Restricted ICC Profile, in PROFILE field -->\\n"""		135772	0					
ANR	136241	ExpressionStatement	"fprintf ( xmlout , ""                  <PREC>%d</PREC>\\n"" , jp2_struct -> precedence )"	2663:4:121055:121150	135772	22	True				
ANR	136242	CallExpression	"fprintf ( xmlout , ""                  <PREC>%d</PREC>\\n"" , jp2_struct -> precedence )"		135772	0					
ANR	136243	Callee	fprintf		135772	0					
ANR	136244	Identifier	fprintf		135772	0					
ANR	136245	ArgumentList	xmlout		135772	1					
ANR	136246	Argument	xmlout		135772	0					
ANR	136247	Identifier	xmlout		135772	0					
ANR	136248	Argument	"""                  <PREC>%d</PREC>\\n"""		135772	1					
ANR	136249	PrimaryExpression	"""                  <PREC>%d</PREC>\\n"""		135772	0					
ANR	136250	Argument	jp2_struct -> precedence		135772	2					
ANR	136251	PtrMemberAccess	jp2_struct -> precedence		135772	0					
ANR	136252	Identifier	jp2_struct		135772	0					
ANR	136253	Identifier	precedence		135772	1					
ANR	136254	IfStatement	if ( notes )		135772	23					
ANR	136255	Condition	notes	2665:8:121173:121177	135772	0	True				
ANR	136256	Identifier	notes		135772	0					
ANR	136257	CompoundStatement		106:15:4749:4749	135772	1					
ANR	136258	ExpressionStatement	"fprintf ( xmlout , ""                  <!-- 0 is only valid value of precedence so far. -->\\n"" )"	2666:8:121190:121297	135772	0	True				
ANR	136259	CallExpression	"fprintf ( xmlout , ""                  <!-- 0 is only valid value of precedence so far. -->\\n"" )"		135772	0					
ANR	136260	Callee	fprintf		135772	0					
ANR	136261	Identifier	fprintf		135772	0					
ANR	136262	ArgumentList	xmlout		135772	1					
ANR	136263	Argument	xmlout		135772	0					
ANR	136264	Identifier	xmlout		135772	0					
ANR	136265	Argument	"""                  <!-- 0 is only valid value of precedence so far. -->\\n"""		135772	1					
ANR	136266	PrimaryExpression	"""                  <!-- 0 is only valid value of precedence so far. -->\\n"""		135772	0					
ANR	136267	ExpressionStatement	"fprintf ( xmlout , ""                  <APPROX>%d</APPROX>\\n"" , jp2_struct -> approx )"	2669:4:121309:121404	135772	24	True				
ANR	136268	CallExpression	"fprintf ( xmlout , ""                  <APPROX>%d</APPROX>\\n"" , jp2_struct -> approx )"		135772	0					
ANR	136269	Callee	fprintf		135772	0					
ANR	136270	Identifier	fprintf		135772	0					
ANR	136271	ArgumentList	xmlout		135772	1					
ANR	136272	Argument	xmlout		135772	0					
ANR	136273	Identifier	xmlout		135772	0					
ANR	136274	Argument	"""                  <APPROX>%d</APPROX>\\n"""		135772	1					
ANR	136275	PrimaryExpression	"""                  <APPROX>%d</APPROX>\\n"""		135772	0					
ANR	136276	Argument	jp2_struct -> approx		135772	2					
ANR	136277	PtrMemberAccess	jp2_struct -> approx		135772	0					
ANR	136278	Identifier	jp2_struct		135772	0					
ANR	136279	Identifier	approx		135772	1					
ANR	136280	IfStatement	if ( notes )		135772	25					
ANR	136281	Condition	notes	2671:8:121427:121431	135772	0	True				
ANR	136282	Identifier	notes		135772	0					
ANR	136283	CompoundStatement		112:15:5003:5003	135772	1					
ANR	136284	ExpressionStatement	"fprintf ( xmlout , ""                  <!-- 0 is only valid value of colourspace approximation so far. -->\\n"" )"	2672:8:121444:121566	135772	0	True				
ANR	136285	CallExpression	"fprintf ( xmlout , ""                  <!-- 0 is only valid value of colourspace approximation so far. -->\\n"" )"		135772	0					
ANR	136286	Callee	fprintf		135772	0					
ANR	136287	Identifier	fprintf		135772	0					
ANR	136288	ArgumentList	xmlout		135772	1					
ANR	136289	Argument	xmlout		135772	0					
ANR	136290	Identifier	xmlout		135772	0					
ANR	136291	Argument	"""                  <!-- 0 is only valid value of colourspace approximation so far. -->\\n"""		135772	1					
ANR	136292	PrimaryExpression	"""                  <!-- 0 is only valid value of colourspace approximation so far. -->\\n"""		135772	0					
ANR	136293	IfStatement	if ( jp2_struct -> meth == 1 )		135772	26					
ANR	136294	Condition	jp2_struct -> meth == 1	2676:8:121583:121603	135772	0	True				
ANR	136295	EqualityExpression	jp2_struct -> meth == 1		135772	0		==			
ANR	136296	PtrMemberAccess	jp2_struct -> meth		135772	0					
ANR	136297	Identifier	jp2_struct		135772	0					
ANR	136298	Identifier	meth		135772	1					
ANR	136299	PrimaryExpression	1		135772	1					
ANR	136300	CompoundStatement		117:31:5175:5175	135772	1					
ANR	136301	ExpressionStatement	"fprintf ( xmlout , ""                  <EnumCS>%d</EnumCS>\\n"" , jp2_struct -> enumcs )"	2677:8:121616:121713	135772	0	True				
ANR	136302	CallExpression	"fprintf ( xmlout , ""                  <EnumCS>%d</EnumCS>\\n"" , jp2_struct -> enumcs )"		135772	0					
ANR	136303	Callee	fprintf		135772	0					
ANR	136304	Identifier	fprintf		135772	0					
ANR	136305	ArgumentList	xmlout		135772	1					
ANR	136306	Argument	xmlout		135772	0					
ANR	136307	Identifier	xmlout		135772	0					
ANR	136308	Argument	"""                  <EnumCS>%d</EnumCS>\\n"""		135772	1					
ANR	136309	PrimaryExpression	"""                  <EnumCS>%d</EnumCS>\\n"""		135772	0					
ANR	136310	Argument	jp2_struct -> enumcs		135772	2					
ANR	136311	PtrMemberAccess	jp2_struct -> enumcs		135772	0					
ANR	136312	Identifier	jp2_struct		135772	0					
ANR	136313	Identifier	enumcs		135772	1					
ANR	136314	IfStatement	if ( notes )		135772	1					
ANR	136315	Condition	notes	2679:12:121741:121745	135772	0	True				
ANR	136316	Identifier	notes		135772	0					
ANR	136317	CompoundStatement		120:19:5317:5317	135772	1					
ANR	136318	ExpressionStatement	"fprintf ( xmlout , ""                  <!-- Valid values of enumerated MJ2 colourspace so far: -->\\n"" )"	2680:12:121762:121880	135772	0	True				
ANR	136319	CallExpression	"fprintf ( xmlout , ""                  <!-- Valid values of enumerated MJ2 colourspace so far: -->\\n"" )"		135772	0					
ANR	136320	Callee	fprintf		135772	0					
ANR	136321	Identifier	fprintf		135772	0					
ANR	136322	ArgumentList	xmlout		135772	1					
ANR	136323	Argument	xmlout		135772	0					
ANR	136324	Identifier	xmlout		135772	0					
ANR	136325	Argument	"""                  <!-- Valid values of enumerated MJ2 colourspace so far: -->\\n"""		135772	1					
ANR	136326	PrimaryExpression	"""                  <!-- Valid values of enumerated MJ2 colourspace so far: -->\\n"""		135772	0					
ANR	136327	ExpressionStatement	"fprintf ( xmlout , ""                  <!--   16: sRGB as defined by IEC 61966-2-1. -->\\n"" )"	2682:12:121894:122001	135772	1	True				
ANR	136328	CallExpression	"fprintf ( xmlout , ""                  <!--   16: sRGB as defined by IEC 61966-2-1. -->\\n"" )"		135772	0					
ANR	136329	Callee	fprintf		135772	0					
ANR	136330	Identifier	fprintf		135772	0					
ANR	136331	ArgumentList	xmlout		135772	1					
ANR	136332	Argument	xmlout		135772	0					
ANR	136333	Identifier	xmlout		135772	0					
ANR	136334	Argument	"""                  <!--   16: sRGB as defined by IEC 61966-2-1. -->\\n"""		135772	1					
ANR	136335	PrimaryExpression	"""                  <!--   16: sRGB as defined by IEC 61966-2-1. -->\\n"""		135772	0					
ANR	136336	ExpressionStatement	"fprintf ( xmlout , ""                  <!--   17: greyscale (related to sRGB). -->\\n"" )"	2684:12:122015:122117	135772	2	True				
ANR	136337	CallExpression	"fprintf ( xmlout , ""                  <!--   17: greyscale (related to sRGB). -->\\n"" )"		135772	0					
ANR	136338	Callee	fprintf		135772	0					
ANR	136339	Identifier	fprintf		135772	0					
ANR	136340	ArgumentList	xmlout		135772	1					
ANR	136341	Argument	xmlout		135772	0					
ANR	136342	Identifier	xmlout		135772	0					
ANR	136343	Argument	"""                  <!--   17: greyscale (related to sRGB). -->\\n"""		135772	1					
ANR	136344	PrimaryExpression	"""                  <!--   17: greyscale (related to sRGB). -->\\n"""		135772	0					
ANR	136345	ExpressionStatement	"fprintf ( xmlout , ""                  <!--   18: sRGB YCC (from JPEG 2000 Part II). -->\\n"" )"	2686:12:122131:122239	135772	3	True				
ANR	136346	CallExpression	"fprintf ( xmlout , ""                  <!--   18: sRGB YCC (from JPEG 2000 Part II). -->\\n"" )"		135772	0					
ANR	136347	Callee	fprintf		135772	0					
ANR	136348	Identifier	fprintf		135772	0					
ANR	136349	ArgumentList	xmlout		135772	1					
ANR	136350	Argument	xmlout		135772	0					
ANR	136351	Identifier	xmlout		135772	0					
ANR	136352	Argument	"""                  <!--   18: sRGB YCC (from JPEG 2000 Part II). -->\\n"""		135772	1					
ANR	136353	PrimaryExpression	"""                  <!--   18: sRGB YCC (from JPEG 2000 Part II). -->\\n"""		135772	0					
ANR	136354	ExpressionStatement	"fprintf ( xmlout , ""                  <!-- (Additional JPX values are defined in Part II). -->\\n"" )"	2688:12:122253:122368	135772	4	True				
ANR	136355	CallExpression	"fprintf ( xmlout , ""                  <!-- (Additional JPX values are defined in Part II). -->\\n"" )"		135772	0					
ANR	136356	Callee	fprintf		135772	0					
ANR	136357	Identifier	fprintf		135772	0					
ANR	136358	ArgumentList	xmlout		135772	1					
ANR	136359	Argument	xmlout		135772	0					
ANR	136360	Identifier	xmlout		135772	0					
ANR	136361	Argument	"""                  <!-- (Additional JPX values are defined in Part II). -->\\n"""		135772	1					
ANR	136362	PrimaryExpression	"""                  <!-- (Additional JPX values are defined in Part II). -->\\n"""		135772	0					
ANR	136363	ElseStatement	else		135772	0					
ANR	136364	IfStatement	if ( notes )		135772	0					
ANR	136365	Condition	notes	2691:15:122395:122399	135772	0	True				
ANR	136366	Identifier	notes		135772	0					
ANR	136367	CompoundStatement		132:22:5971:5971	135772	1					
ANR	136368	ExpressionStatement	"fprintf ( xmlout , ""                  <!-- PROFILE is not handled by current OpenJPEG implementation. -->\\n"" )"	2692:8:122412:122534	135772	0	True				
ANR	136369	CallExpression	"fprintf ( xmlout , ""                  <!-- PROFILE is not handled by current OpenJPEG implementation. -->\\n"" )"		135772	0					
ANR	136370	Callee	fprintf		135772	0					
ANR	136371	Identifier	fprintf		135772	0					
ANR	136372	ArgumentList	xmlout		135772	1					
ANR	136373	Argument	xmlout		135772	0					
ANR	136374	Identifier	xmlout		135772	0					
ANR	136375	Argument	"""                  <!-- PROFILE is not handled by current OpenJPEG implementation. -->\\n"""		135772	1					
ANR	136376	PrimaryExpression	"""                  <!-- PROFILE is not handled by current OpenJPEG implementation. -->\\n"""		135772	0					
ANR	136377	ExpressionStatement	"fprintf ( xmlout , ""                </ColourSpecification>\\n"" )"	2696:4:122595:122659	135772	27	True				
ANR	136378	CallExpression	"fprintf ( xmlout , ""                </ColourSpecification>\\n"" )"		135772	0					
ANR	136379	Callee	fprintf		135772	0					
ANR	136380	Identifier	fprintf		135772	0					
ANR	136381	ArgumentList	xmlout		135772	1					
ANR	136382	Argument	xmlout		135772	0					
ANR	136383	Identifier	xmlout		135772	0					
ANR	136384	Argument	"""                </ColourSpecification>\\n"""		135772	1					
ANR	136385	PrimaryExpression	"""                </ColourSpecification>\\n"""		135772	0					
ANR	136386	ExpressionStatement	"fprintf ( xmlout , ""              </JP2Header>\\n"" )"	2704:4:122806:122858	135772	28	True				
ANR	136387	CallExpression	"fprintf ( xmlout , ""              </JP2Header>\\n"" )"		135772	0					
ANR	136388	Callee	fprintf		135772	0					
ANR	136389	Identifier	fprintf		135772	0					
ANR	136390	ArgumentList	xmlout		135772	1					
ANR	136391	Argument	xmlout		135772	0					
ANR	136392	Identifier	xmlout		135772	0					
ANR	136393	Argument	"""              </JP2Header>\\n"""		135772	1					
ANR	136394	PrimaryExpression	"""              </JP2Header>\\n"""		135772	0					
ANR	136395	ReturnType	void		135772	1					
ANR	136396	Identifier	xml_out_frame_jp2h		135772	2					
ANR	136397	ParameterList	"FILE * xmlout , opj_jp2_t * jp2_struct"		135772	3					
ANR	136398	Parameter	FILE * xmlout	2559:24:116373:116384	135772	0	True				
ANR	136399	ParameterType	FILE *		135772	0					
ANR	136400	Identifier	xmlout		135772	1					
ANR	136401	Parameter	opj_jp2_t * jp2_struct	2559:38:116387:116407	135772	1	True				
ANR	136402	ParameterType	opj_jp2_t *		135772	0					
ANR	136403	Identifier	jp2_struct		135772	1					
ANR	136404	CFGEntryNode	ENTRY		135772		True				
ANR	136405	CFGExitNode	EXIT		135772		True				
ANR	136406	Symbol	notes		135772						
ANR	136407	Symbol	jp2_struct -> bpc		135772						
ANR	136408	Symbol	jp2_struct -> comps [ i ] . bpcc		135772						
ANR	136409	Symbol	jp2_struct -> IPR		135772						
ANR	136410	Symbol	i		135772						
ANR	136411	Symbol	raw		135772						
ANR	136412	Symbol	jp2_struct -> comps		135772						
ANR	136413	Symbol	* jp2_struct		135772						
ANR	136414	Symbol	jp2_struct -> UnkC		135772						
ANR	136415	Symbol	* jp2_struct -> comps		135772						
ANR	136416	Symbol	* * jp2_struct		135772						
ANR	136417	Symbol	jp2_struct -> enumcs		135772						
ANR	136418	Symbol	jp2_struct -> h		135772						
ANR	136419	Symbol	jp2_struct -> meth		135772						
ANR	136420	Symbol	xmlout		135772						
ANR	136421	Symbol	jp2_struct -> precedence		135772						
ANR	136422	Symbol	jp2_struct		135772						
ANR	136423	Symbol	jp2_struct -> C		135772						
ANR	136424	Symbol	* i		135772						
ANR	136425	Symbol	jp2_struct -> numcomps		135772						
ANR	136426	Symbol	derived		135772						
ANR	136427	Symbol	jp2_struct -> approx		135772						
ANR	136428	Symbol	jp2_struct -> w		135772						
ANR	136429	Function	xml_out_frame_jp2i	2710:41:122968:123794							
ANR	136430	FunctionDef	"xml_out_frame_jp2i (FILE * xmlout , opj_cp_t * cp)"		136429	0					
ANR	136431	CompoundStatement		2712:0:123049:123794	136429	0					
ANR	136432	IdentifierDeclStatement	int i ;	2714:4:123123:123128	136429	0	True				
ANR	136433	IdentifierDecl	i		136429	0					
ANR	136434	IdentifierDeclType	int		136429	0					
ANR	136435	Identifier	i		136429	1					
ANR	136436	Statement	IMAGE	2715:4:123134:123138	136429	1	True				
ANR	136437	Statement	cp	2715:10:123140:123141	136429	2	True				
ANR	136438	Statement	->	2715:12:123142:123143	136429	3	True				
ANR	136439	Statement	jp2i	2715:14:123144:123147	136429	4	True				
ANR	136440	Statement	","	2715:18:123148:123148	136429	5	True				
ANR	136441	Statement	cp	2715:20:123150:123151	136429	6	True				
ANR	136442	Statement	->	2715:22:123152:123153	136429	7	True				
ANR	136443	Statement	jp2i_count	2715:24:123154:123163	136429	8	True				
ANR	136444	Statement	","	2715:34:123164:123164	136429	9	True				
ANR	136445	Statement	cp	2715:36:123166:123167	136429	10	True				
ANR	136446	Statement	->	2715:38:123168:123169	136429	11	True				
ANR	136447	Statement	jp2i_data	2715:40:123170:123178	136429	12	True				
ANR	136448	Statement	(	2715:49:123179:123179	136429	13	True				
ANR	136449	Statement	array	2715:50:123180:123184	136429	14	True				
ANR	136450	Statement	of	2715:56:123186:123187	136429	15	True				
ANR	136451	Statement	chars	2715:59:123189:123193	136429	16	True				
ANR	136452	Statement	)	2715:64:123194:123194	136429	17	True				
ANR	136453	Statement	","	2715:65:123195:123195	136429	18	True				
ANR	136454	Statement	cp	2716:10:123207:123208	136429	19	True				
ANR	136455	Statement	->	2716:12:123209:123210	136429	20	True				
ANR	136456	Statement	cp2i_len	2716:14:123211:123218	136429	21	True				
ANR	136457	Statement	(	2716:22:123219:123219	136429	22	True				
ANR	136458	Statement	array	2716:23:123220:123224	136429	23	True				
ANR	136459	Statement	of	2716:29:123226:123227	136429	24	True				
ANR	136460	Statement	ints	2716:32:123229:123232	136429	25	True				
ANR	136461	Statement	)	2716:36:123233:123233	136429	26	True				
ANR	136462	IfStatement	if ( cp -> jp2i != 1 )		136429	27					
ANR	136463	Condition	cp -> jp2i != 1	2717:8:123243:123255	136429	0	True				
ANR	136464	EqualityExpression	cp -> jp2i != 1		136429	0		!=			
ANR	136465	PtrMemberAccess	cp -> jp2i		136429	0					
ANR	136466	Identifier	cp		136429	0					
ANR	136467	Identifier	jp2i		136429	1					
ANR	136468	PrimaryExpression	1		136429	1					
ANR	136469	CompoundStatement		6:23:208:208	136429	1					
ANR	136470	ReturnStatement	return ;	2718:8:123268:123274	136429	0	True				
ANR	136471	ForStatement	for ( i = 0 ; i < cp -> jp2i_count ; i ++ )		136429	28					
ANR	136472	ForInit	i = 0 ;	2721:9:123313:123318	136429	0	True				
ANR	136473	AssignmentExpression	i = 0		136429	0		=			
ANR	136474	Identifier	i		136429	0					
ANR	136475	PrimaryExpression	0		136429	1					
ANR	136476	Condition	i < cp -> jp2i_count	2721:16:123320:123337	136429	1	True				
ANR	136477	RelationalExpression	i < cp -> jp2i_count		136429	0		<			
ANR	136478	Identifier	i		136429	0					
ANR	136479	PtrMemberAccess	cp -> jp2i_count		136429	1					
ANR	136480	Identifier	cp		136429	0					
ANR	136481	Identifier	jp2i_count		136429	1					
ANR	136482	PostIncDecOperationExpression	i ++	2721:36:123340:123342	136429	2	True				
ANR	136483	Identifier	i		136429	0					
ANR	136484	IncDec	++		136429	1					
ANR	136485	CompoundStatement		10:41:295:295	136429	3					
ANR	136486	ExpressionStatement	"fprintf ( xmlout , ""            <IntellectualProperty BoxType=\\""jp2i\\"">\\n"" )"	2722:8:123355:123432	136429	0	True				
ANR	136487	CallExpression	"fprintf ( xmlout , ""            <IntellectualProperty BoxType=\\""jp2i\\"">\\n"" )"		136429	0					
ANR	136488	Callee	fprintf		136429	0					
ANR	136489	Identifier	fprintf		136429	0					
ANR	136490	ArgumentList	xmlout		136429	1					
ANR	136491	Argument	xmlout		136429	0					
ANR	136492	Identifier	xmlout		136429	0					
ANR	136493	Argument	"""            <IntellectualProperty BoxType=\\""jp2i\\"">\\n"""		136429	1					
ANR	136494	PrimaryExpression	"""            <IntellectualProperty BoxType=\\""jp2i\\"">\\n"""		136429	0					
ANR	136495	ExpressionStatement	"xml_out_dump_hex_and_ascii ( xmlout , cp -> jp2i_data [ i ] , cp -> jp2i_len [ i ] )"	2726:8:123646:123715	136429	1	True				
ANR	136496	CallExpression	"xml_out_dump_hex_and_ascii ( xmlout , cp -> jp2i_data [ i ] , cp -> jp2i_len [ i ] )"		136429	0					
ANR	136497	Callee	xml_out_dump_hex_and_ascii		136429	0					
ANR	136498	Identifier	xml_out_dump_hex_and_ascii		136429	0					
ANR	136499	ArgumentList	xmlout		136429	1					
ANR	136500	Argument	xmlout		136429	0					
ANR	136501	Identifier	xmlout		136429	0					
ANR	136502	Argument	cp -> jp2i_data [ i ]		136429	1					
ANR	136503	ArrayIndexing	cp -> jp2i_data [ i ]		136429	0					
ANR	136504	PtrMemberAccess	cp -> jp2i_data		136429	0					
ANR	136505	Identifier	cp		136429	0					
ANR	136506	Identifier	jp2i_data		136429	1					
ANR	136507	Identifier	i		136429	1					
ANR	136508	Argument	cp -> jp2i_len [ i ]		136429	2					
ANR	136509	ArrayIndexing	cp -> jp2i_len [ i ]		136429	0					
ANR	136510	PtrMemberAccess	cp -> jp2i_len		136429	0					
ANR	136511	Identifier	cp		136429	0					
ANR	136512	Identifier	jp2i_len		136429	1					
ANR	136513	Identifier	i		136429	1					
ANR	136514	ExpressionStatement	"fprintf ( xmlout , ""            </IntellectualProperty>\\n"" )"	2727:8:123725:123786	136429	2	True				
ANR	136515	CallExpression	"fprintf ( xmlout , ""            </IntellectualProperty>\\n"" )"		136429	0					
ANR	136516	Callee	fprintf		136429	0					
ANR	136517	Identifier	fprintf		136429	0					
ANR	136518	ArgumentList	xmlout		136429	1					
ANR	136519	Argument	xmlout		136429	0					
ANR	136520	Identifier	xmlout		136429	0					
ANR	136521	Argument	"""            </IntellectualProperty>\\n"""		136429	1					
ANR	136522	PrimaryExpression	"""            </IntellectualProperty>\\n"""		136429	0					
ANR	136523	ReturnType	data structure instead void		136429	1					
ANR	136524	Identifier	xml_out_frame_jp2i		136429	2					
ANR	136525	ParameterList	"FILE * xmlout , opj_cp_t * cp"		136429	3					
ANR	136526	Parameter	FILE * xmlout	2711:30:123021:123032	136429	0	True				
ANR	136527	ParameterType	FILE *		136429	0					
ANR	136528	Identifier	xmlout		136429	1					
ANR	136529	Parameter	opj_cp_t * cp	2711:44:123035:123046	136429	1	True				
ANR	136530	ParameterType	opj_cp_t *		136429	0					
ANR	136531	Identifier	cp		136429	1					
ANR	136532	CFGEntryNode	ENTRY		136429		True				
ANR	136533	CFGExitNode	EXIT		136429		True				
ANR	136534	Symbol	* cp		136429						
ANR	136535	Symbol	cp -> jp2i_count		136429						
ANR	136536	Symbol	* i		136429						
ANR	136537	Symbol	* cp -> jp2i_len		136429						
ANR	136538	Symbol	cp -> jp2i_data		136429						
ANR	136539	Symbol	i		136429						
ANR	136540	Symbol	* cp -> jp2i_data		136429						
ANR	136541	Symbol	* * cp		136429						
ANR	136542	Symbol	cp -> jp2i_len		136429						
ANR	136543	Symbol	cp		136429						
ANR	136544	Symbol	xmlout		136429						
ANR	136545	Symbol	cp -> jp2i		136429						
ANR	136546	Function	xml_out_frame_xml	2731:0:123797:124749							
ANR	136547	FunctionDef	"xml_out_frame_xml (FILE * xmlout , opj_cp_t * cp)"		136546	0					
ANR	136548	CompoundStatement		2732:0:123848:124749	136546	0					
ANR	136549	Statement	IMAGE	2734:4:123947:123951	136546	0	True				
ANR	136550	Statement	cp	2734:10:123953:123954	136546	1	True				
ANR	136551	Statement	->	2734:12:123955:123956	136546	2	True				
ANR	136552	Statement	xml	2734:14:123957:123959	136546	3	True				
ANR	136553	Statement	","	2734:17:123960:123960	136546	4	True				
ANR	136554	Statement	cp	2734:19:123962:123963	136546	5	True				
ANR	136555	Statement	->	2734:21:123964:123965	136546	6	True				
ANR	136556	Statement	xml_count	2734:23:123966:123974	136546	7	True				
ANR	136557	Statement	","	2734:32:123975:123975	136546	8	True				
ANR	136558	Statement	cp	2734:34:123977:123978	136546	9	True				
ANR	136559	Statement	->	2734:36:123979:123980	136546	10	True				
ANR	136560	Statement	xml_data	2734:38:123981:123988	136546	11	True				
ANR	136561	Statement	(	2734:46:123989:123989	136546	12	True				
ANR	136562	Statement	array	2734:47:123990:123994	136546	13	True				
ANR	136563	Statement	of	2734:53:123996:123997	136546	14	True				
ANR	136564	Statement	chars	2734:56:123999:124003	136546	15	True				
ANR	136565	Statement	)	2734:61:124004:124004	136546	16	True				
ANR	136566	Statement	MAYBE	2735:4:124010:124014	136546	17	True				
ANR	136567	Statement	WE	2735:10:124016:124017	136546	18	True				
ANR	136568	Statement	DON	2735:13:124019:124021	136546	19	True				
ANR	136569	Statement	T	2735:17:124023:124023	136546	20	True				
ANR	136570	Statement	NEED	2735:19:124025:124028	136546	21	True				
ANR	136571	Statement	cp	2735:24:124030:124031	136546	22	True				
ANR	136572	Statement	->	2735:26:124032:124033	136546	23	True				
ANR	136573	Statement	xml_len	2735:28:124034:124040	136546	24	True				
ANR	136574	Statement	(	2735:36:124042:124042	136546	25	True				
ANR	136575	Statement	array	2735:37:124043:124047	136546	26	True				
ANR	136576	Statement	of	2735:43:124049:124050	136546	27	True				
ANR	136577	Statement	ints	2735:46:124052:124055	136546	28	True				
ANR	136578	Statement	)	2735:50:124056:124056	136546	29	True				
ANR	136579	Statement	IF	2735:52:124058:124059	136546	30	True				
ANR	136580	Statement	WE	2735:55:124061:124062	136546	31	True				
ANR	136581	Statement	ASSUME	2735:58:124064:124069	136546	32	True				
ANR	136582	Statement	xml_data	2735:65:124071:124078	136546	33	True				
ANR	136583	Statement	IS	2735:74:124080:124081	136546	34	True				
ANR	136584	Statement	NULL	2735:77:124083:124086	136546	35	True				
ANR	136585	Statement	-	2735:81:124087:124087	136546	36	True				
ANR	136586	Statement	TERMINATED	2735:82:124088:124097	136546	37	True				
ANR	136587	Statement	.	2735:92:124098:124098	136546	38	True				
ANR	136588	Statement	ASSUME	2736:4:124104:124109	136546	39	True				
ANR	136589	Statement	ASSUME	2736:11:124111:124116	136546	40	True				
ANR	136590	Statement	EACH	2736:18:124118:124121	136546	41	True				
ANR	136591	Statement	LINE	2736:23:124123:124126	136546	42	True				
ANR	136592	Statement	IS	2736:28:124128:124129	136546	43	True				
ANR	136593	Statement	ENDED	2736:31:124131:124135	136546	44	True				
ANR	136594	Statement	BY	2736:37:124137:124138	136546	45	True				
ANR	136595	Statement	n	2736:41:124141:124141	136546	46	True				
ANR	136596	Statement	.	2736:42:124142:124142	136546	47	True				
ANR	136597	IdentifierDeclStatement	int i ;	2737:4:124148:124153	136546	48	True				
ANR	136598	IdentifierDecl	i		136546	0					
ANR	136599	IdentifierDeclType	int		136546	0					
ANR	136600	Identifier	i		136546	1					
ANR	136601	IfStatement	if ( cp -> xml != 1 )		136546	49					
ANR	136602	Condition	cp -> xml != 1	2738:8:124163:124174	136546	0	True				
ANR	136603	EqualityExpression	cp -> xml != 1		136546	0		!=			
ANR	136604	PtrMemberAccess	cp -> xml		136546	0					
ANR	136605	Identifier	cp		136546	0					
ANR	136606	Identifier	xml		136546	1					
ANR	136607	PrimaryExpression	1		136546	1					
ANR	136608	CompoundStatement		7:22:328:328	136546	1					
ANR	136609	ReturnStatement	return ;	2739:8:124187:124193	136546	0	True				
ANR	136610	ForStatement	for ( i = 0 ; i < cp -> xml_count ; i ++ )		136546	50					
ANR	136611	ForInit	i = 0 ;	2742:9:124232:124237	136546	0	True				
ANR	136612	AssignmentExpression	i = 0		136546	0		=			
ANR	136613	Identifier	i		136546	0					
ANR	136614	PrimaryExpression	0		136546	1					
ANR	136615	Condition	i < cp -> xml_count	2742:16:124239:124255	136546	1	True				
ANR	136616	RelationalExpression	i < cp -> xml_count		136546	0		<			
ANR	136617	Identifier	i		136546	0					
ANR	136618	PtrMemberAccess	cp -> xml_count		136546	1					
ANR	136619	Identifier	cp		136546	0					
ANR	136620	Identifier	xml_count		136546	1					
ANR	136621	PostIncDecOperationExpression	i ++	2742:35:124258:124260	136546	2	True				
ANR	136622	Identifier	i		136546	0					
ANR	136623	IncDec	++		136546	1					
ANR	136624	CompoundStatement		11:40:414:414	136546	3					
ANR	136625	Statement	fprintf	2743:8:124273:124279	136546	0	True				
ANR	136626	Statement	(	2743:15:124280:124280	136546	1	True				
ANR	136627	Statement	xmlout	2743:16:124281:124286	136546	2	True				
ANR	136628	Statement	","	2743:22:124287:124287	136546	3	True				
ANR	136629	Statement	"""            <TextFormXML BoxType=\\""xml[space]"""	2743:29:124294:124340	136546	4	True				
ANR	136630	Statement	Instance	2743:77:124342:124349	136546	5	True				
ANR	136631	Statement	=	2743:86:124351:124351	136546	6	True				
ANR	136632	Statement	"""%d\\"">\\n"""	2744:21:124374:124382	136546	7	True				
ANR	136633	Statement	","	2744:30:124383:124383	136546	8	True				
ANR	136634	Statement	i	2744:32:124385:124385	136546	9	True				
ANR	136635	Statement	+	2744:34:124387:124387	136546	10	True				
ANR	136636	Statement	1	2744:36:124389:124389	136546	11	True				
ANR	136637	Statement	)	2744:37:124390:124390	136546	12	True				
ANR	136638	ExpressionStatement		2744:38:124391:124391	136546	13	True				
ANR	136639	ExpressionStatement	"fprintf ( xmlout , cp -> xml_data [ i ] )"	2747:8:124562:124610	136546	14	True				
ANR	136640	CallExpression	"fprintf ( xmlout , cp -> xml_data [ i ] )"		136546	0					
ANR	136641	Callee	fprintf		136546	0					
ANR	136642	Identifier	fprintf		136546	0					
ANR	136643	ArgumentList	xmlout		136546	1					
ANR	136644	Argument	xmlout		136546	0					
ANR	136645	Identifier	xmlout		136546	0					
ANR	136646	Argument	cp -> xml_data [ i ]		136546	1					
ANR	136647	ArrayIndexing	cp -> xml_data [ i ]		136546	0					
ANR	136648	PtrMemberAccess	cp -> xml_data		136546	0					
ANR	136649	Identifier	cp		136546	0					
ANR	136650	Identifier	xml_data		136546	1					
ANR	136651	Identifier	i		136546	1					
ANR	136652	ExpressionStatement	"fprintf ( xmlout , ""            </TextFormXML>\\n"" )"	2749:8:124689:124741	136546	15	True				
ANR	136653	CallExpression	"fprintf ( xmlout , ""            </TextFormXML>\\n"" )"		136546	0					
ANR	136654	Callee	fprintf		136546	0					
ANR	136655	Identifier	fprintf		136546	0					
ANR	136656	ArgumentList	xmlout		136546	1					
ANR	136657	Argument	xmlout		136546	0					
ANR	136658	Identifier	xmlout		136546	0					
ANR	136659	Argument	"""            </TextFormXML>\\n"""		136546	1					
ANR	136660	PrimaryExpression	"""            </TextFormXML>\\n"""		136546	0					
ANR	136661	ReturnType	void		136546	1					
ANR	136662	Identifier	xml_out_frame_xml		136546	2					
ANR	136663	ParameterList	"FILE * xmlout , opj_cp_t * cp"		136546	3					
ANR	136664	Parameter	FILE * xmlout	2731:23:123820:123831	136546	0	True				
ANR	136665	ParameterType	FILE *		136546	0					
ANR	136666	Identifier	xmlout		136546	1					
ANR	136667	Parameter	opj_cp_t * cp	2731:37:123834:123845	136546	1	True				
ANR	136668	ParameterType	opj_cp_t *		136546	0					
ANR	136669	Identifier	cp		136546	1					
ANR	136670	CFGEntryNode	ENTRY		136546		True				
ANR	136671	CFGExitNode	EXIT		136546		True				
ANR	136672	Symbol	* cp		136546						
ANR	136673	Symbol	* i		136546						
ANR	136674	Symbol	* cp -> xml_data		136546						
ANR	136675	Symbol	i		136546						
ANR	136676	Symbol	* * cp		136546						
ANR	136677	Symbol	cp -> xml_count		136546						
ANR	136678	Symbol	cp		136546						
ANR	136679	Symbol	cp -> xml		136546						
ANR	136680	Symbol	cp -> xml_data		136546						
ANR	136681	Symbol	xmlout		136546						
ANR	136682	Function	xml_out_frame_uuid	2753:0:124752:128585							
ANR	136683	FunctionDef	"xml_out_frame_uuid (FILE * xmlout , opj_cp_t * cp)"		136682	0					
ANR	136684	CompoundStatement		2754:0:124804:128585	136682	0					
ANR	136685	IdentifierDeclStatement	int i ;	2765:4:125612:125617	136682	0	True				
ANR	136686	IdentifierDecl	i		136682	0					
ANR	136687	IdentifierDeclType	int		136682	0					
ANR	136688	Identifier	i		136682	1					
ANR	136689	Statement	IMAGE	2766:4:125623:125627	136682	1	True				
ANR	136690	Statement	cp	2766:10:125629:125630	136682	2	True				
ANR	136691	Statement	->	2766:12:125631:125632	136682	3	True				
ANR	136692	Statement	uuid	2766:14:125633:125636	136682	4	True				
ANR	136693	Statement	","	2766:18:125637:125637	136682	5	True				
ANR	136694	Statement	cp	2766:20:125639:125640	136682	6	True				
ANR	136695	Statement	->	2766:22:125641:125642	136682	7	True				
ANR	136696	Statement	uuid_count	2766:24:125643:125652	136682	8	True				
ANR	136697	Statement	","	2766:34:125653:125653	136682	9	True				
ANR	136698	Statement	cp	2767:10:125665:125666	136682	10	True				
ANR	136699	Statement	->	2767:12:125667:125668	136682	11	True				
ANR	136700	Statement	uuid_value	2767:14:125669:125678	136682	12	True				
ANR	136701	Statement	(	2767:24:125679:125679	136682	13	True				
ANR	136702	Statement	array	2767:25:125680:125684	136682	14	True				
ANR	136703	Statement	of	2767:31:125686:125687	136682	15	True				
ANR	136704	Statement	uuids	2767:34:125689:125693	136682	16	True				
ANR	136705	Statement	...	2767:39:125694:125696	136682	17	True				
ANR	136706	Statement	let	2768:25:125723:125725	136682	18	True				
ANR	136707	Statement	s	2768:29:125727:125727	136682	19	True				
ANR	136708	Statement	say	2768:31:125729:125731	136682	20	True				
ANR	136709	Statement	fixed	2768:35:125733:125737	136682	21	True				
ANR	136710	Statement	-	2768:40:125738:125738	136682	22	True				
ANR	136711	Statement	length	2768:41:125739:125744	136682	23	True				
ANR	136712	Statement	strings	2768:48:125746:125752	136682	24	True				
ANR	136713	Statement	)	2768:55:125753:125753	136682	25	True				
ANR	136714	Statement	cp	2768:57:125755:125756	136682	26	True				
ANR	136715	Statement	->	2768:59:125757:125758	136682	27	True				
ANR	136716	Statement	uuid_data	2768:61:125759:125767	136682	28	True				
ANR	136717	Statement	(	2768:71:125769:125769	136682	29	True				
ANR	136718	Statement	array	2768:72:125770:125774	136682	30	True				
ANR	136719	Statement	of	2768:78:125776:125777	136682	31	True				
ANR	136720	Statement	char	2768:81:125779:125782	136682	32	True				
ANR	136721	Statement	buffers	2768:86:125784:125790	136682	33	True				
ANR	136722	Statement	)	2768:93:125791:125791	136682	34	True				
ANR	136723	Statement	","	2768:94:125792:125792	136682	35	True				
ANR	136724	Statement	cp	2768:96:125794:125795	136682	36	True				
ANR	136725	Statement	->	2768:98:125796:125797	136682	37	True				
ANR	136726	Statement	uuid_len	2768:100:125798:125805	136682	38	True				
ANR	136727	Statement	(	2768:109:125807:125807	136682	39	True				
ANR	136728	Statement	array	2768:110:125808:125812	136682	40	True				
ANR	136729	Statement	of	2768:116:125814:125815	136682	41	True				
ANR	136730	Statement	ints	2768:119:125817:125820	136682	42	True				
ANR	136731	Statement	)	2768:123:125821:125821	136682	43	True				
ANR	136732	IfStatement	if ( cp -> juuid != 1 )		136682	44					
ANR	136733	Condition	cp -> juuid != 1	2769:29:125852:125865	136682	0	True				
ANR	136734	EqualityExpression	cp -> juuid != 1		136682	0		!=			
ANR	136735	PtrMemberAccess	cp -> juuid		136682	0					
ANR	136736	Identifier	cp		136682	0					
ANR	136737	Identifier	juuid		136682	1					
ANR	136738	PrimaryExpression	1		136682	1					
ANR	136739	ReturnStatement	return ;	2770:25:125893:125899	136682	1	True				
ANR	136740	ForStatement	for ( i = 0 ; i < cp -> uuid_count ; i ++ )		136682	45					
ANR	136741	ForInit	i = 0 ;	2772:9:125929:125934	136682	0	True				
ANR	136742	AssignmentExpression	i = 0		136682	0		=			
ANR	136743	Identifier	i		136682	0					
ANR	136744	PrimaryExpression	0		136682	1					
ANR	136745	Condition	i < cp -> uuid_count	2772:16:125936:125953	136682	1	True				
ANR	136746	RelationalExpression	i < cp -> uuid_count		136682	0		<			
ANR	136747	Identifier	i		136682	0					
ANR	136748	PtrMemberAccess	cp -> uuid_count		136682	1					
ANR	136749	Identifier	cp		136682	0					
ANR	136750	Identifier	uuid_count		136682	1					
ANR	136751	PostIncDecOperationExpression	i ++	2772:36:125956:125958	136682	2	True				
ANR	136752	Identifier	i		136682	0					
ANR	136753	IncDec	++		136682	1					
ANR	136754	CompoundStatement		19:41:1156:1156	136682	3					
ANR	136755	Statement	fprintf	2773:8:125971:125977	136682	0	True				
ANR	136756	Statement	(	2773:15:125978:125978	136682	1	True				
ANR	136757	Statement	xmlout	2773:16:125979:125984	136682	2	True				
ANR	136758	Statement	","	2773:22:125985:125985	136682	3	True				
ANR	136759	Statement	"""            <UniversalUniqueID BoxType=\\""uuid\\"">\\n                fprintf(xmlout,      """	2773:29:125992:126079	136682	4	True				
ANR	136760	Statement	<	2774:52:126094:126094	136682	5	True				
ANR	136761	Statement	UUID	2774:53:126095:126098	136682	6	True				
ANR	136762	Statement	>	2774:57:126099:126099	136682	7	True				
ANR	136763	Statement	%	2774:58:126100:126100	136682	8	True				
ANR	136764	Statement	s	2774:59:126101:126101	136682	9	True				
ANR	136765	Statement	<	2774:60:126102:126102	136682	10	True				
ANR	136766	Statement	/	2774:61:126103:126103	136682	11	True				
ANR	136767	Statement	UUDI	2774:62:126104:126107	136682	12	True				
ANR	136768	Statement	>	2774:66:126108:126108	136682	13	True				
ANR	136769	Statement	n	2774:68:126110:126110	136682	14	True				
ANR	136770	Statement	""", cp->uuid_value[i]);\\n                fprintf(xmlout,      """	2774:69:126111:126171	136682	15	True				
ANR	136771	Statement	<	2775:52:126186:126186	136682	16	True				
ANR	136772	Statement	Data	2775:53:126187:126190	136682	17	True				
ANR	136773	Statement	>	2775:57:126191:126191	136682	18	True				
ANR	136774	Statement	n	2775:59:126193:126193	136682	19	True				
ANR	136775	Statement	""");\\n                /* I think this can be anything, including binary, so do a dump */\\n                /* Is it better to indent or not indent this content?  Indent is better for reading, but\\n                worse for cut/paste. */\\n                xml_out_dump_hex_and_ascii(xmlout, cp->uuid_data[i], cp->uuid_len[i]);\\n                fprintf(xmlout,      """	2775:60:126194:126550	136682	20	True				
ANR	136776	Statement	<	2780:52:126565:126565	136682	21	True				
ANR	136777	Statement	/	2780:53:126566:126566	136682	22	True				
ANR	136778	Statement	Data	2780:54:126567:126570	136682	23	True				
ANR	136779	Statement	>	2780:58:126571:126571	136682	24	True				
ANR	136780	Statement	n	2780:60:126573:126573	136682	25	True				
ANR	136781	Statement	""");\\n                fprintf(xmlout,      """	2780:61:126574:126615	136682	26	True				
ANR	136782	Statement	<	2781:50:126628:126628	136682	27	True				
ANR	136783	Statement	/	2781:51:126629:126629	136682	28	True				
ANR	136784	Statement	UniversalUniqueID	2781:52:126630:126646	136682	29	True				
ANR	136785	Statement	>	2781:69:126647:126647	136682	30	True				
ANR	136786	Statement	n	2781:71:126649:126649	136682	31	True				
ANR	136787	Statement	""");\\n    }\\n}\\n\\nvoid xml_out_frame_uinf(FILE* xmlout, opj_cp_t *cp)\\n{\\n    /* UUIDInfo 'uinf', includes UUIDList 'ulst' and URL 'url\\40' */\\n    /* Part I 1.7.3 says: may appear multiply in JP2 file, anywhere at the top level except before File Type box */\\n    /* So there may be multiple ulst's, and each can have multiple UUIDs listed (with a single URL) */\\n    /* This is not quite as vendor-specific as UUIDs, or at least is meant to be generally readable */\\n    /* Assume UUIDs stored in canonical string format */\\n    int i, j;\\n    IMAGE cp->uinf, cp->uinf_count, cp->uinf_ulst_nu(array of ints)\\n    cp->uinf_uuid(2 dimensional array of uuids... let's say fixed-length strings),\\n                  cp->uinf_url(array of char buffers)\\n\\n                  if (cp->uinf != 1)\\n                  return; /* Not present */\\n\\n    for (i = 0; i < cp->uuid_count; i++) {\\n        fprintf(xmlout,      """	2781:72:126650:127539	136682	32	True				
ANR	136788	Statement	<	2801:42:127552:127552	136682	33	True				
ANR	136789	Statement	UUIDInfo	2801:43:127553:127560	136682	34	True				
ANR	136790	Statement	BoxType	2801:52:127562:127568	136682	35	True				
ANR	136791	Statement	=	2801:59:127569:127569	136682	36	True				
ANR	136792	Statement	"""uinf\\"">\\n"""	2801:61:127571:127581	136682	37	True				
ANR	136793	Statement	)	2801:72:127582:127582	136682	38	True				
ANR	136794	ExpressionStatement		2801:73:127583:127583	136682	39	True				
ANR	136795	ExpressionStatement	"fprintf ( xmlout , ""              <UUIDList BoxType=\\""ulst\\"" Count=\\""%d\\"">\\n"" , cp -> cp -> uinf_ulst_nu [ i ] )"	2802:12:127597:127722	136682	40	True				
ANR	136796	CallExpression	"fprintf ( xmlout , ""              <UUIDList BoxType=\\""ulst\\"" Count=\\""%d\\"">\\n"" , cp -> cp -> uinf_ulst_nu [ i ] )"		136682	0					
ANR	136797	Callee	fprintf		136682	0					
ANR	136798	Identifier	fprintf		136682	0					
ANR	136799	ArgumentList	xmlout		136682	1					
ANR	136800	Argument	xmlout		136682	0					
ANR	136801	Identifier	xmlout		136682	0					
ANR	136802	Argument	"""              <UUIDList BoxType=\\""ulst\\"" Count=\\""%d\\"">\\n"""		136682	1					
ANR	136803	PrimaryExpression	"""              <UUIDList BoxType=\\""ulst\\"" Count=\\""%d\\"">\\n"""		136682	0					
ANR	136804	Argument	cp -> cp -> uinf_ulst_nu [ i ]		136682	2					
ANR	136805	ArrayIndexing	cp -> cp -> uinf_ulst_nu [ i ]		136682	0					
ANR	136806	PtrMemberAccess	cp -> cp -> uinf_ulst_nu		136682	0					
ANR	136807	PtrMemberAccess	cp -> cp		136682	0					
ANR	136808	Identifier	cp		136682	0					
ANR	136809	Identifier	cp		136682	1					
ANR	136810	Identifier	uinf_ulst_nu		136682	1					
ANR	136811	Identifier	i		136682	1					
ANR	136812	ForStatement	for ( j = 0 ; j < cp -> uinf_ulst_nu [ i ] ; j ++ )		136682	41					
ANR	136813	ForInit	j = 0 ;	2804:17:127741:127746	136682	0	True				
ANR	136814	AssignmentExpression	j = 0		136682	0		=			
ANR	136815	Identifier	j		136682	0					
ANR	136816	PrimaryExpression	0		136682	1					
ANR	136817	Condition	j < cp -> uinf_ulst_nu [ i ]	2804:24:127748:127770	136682	1	True				
ANR	136818	RelationalExpression	j < cp -> uinf_ulst_nu [ i ]		136682	0		<			
ANR	136819	Identifier	j		136682	0					
ANR	136820	ArrayIndexing	cp -> uinf_ulst_nu [ i ]		136682	1					
ANR	136821	PtrMemberAccess	cp -> uinf_ulst_nu		136682	0					
ANR	136822	Identifier	cp		136682	0					
ANR	136823	Identifier	uinf_ulst_nu		136682	1					
ANR	136824	Identifier	i		136682	1					
ANR	136825	PostIncDecOperationExpression	j ++	2804:50:127774:127776	136682	2	True				
ANR	136826	Identifier	j		136682	0					
ANR	136827	IncDec	++		136682	1					
ANR	136828	CompoundStatement		51:55:2974:2974	136682	3					
ANR	136829	ExpressionStatement	"fprintf ( xmlout , ""              <ID Instance=\\""%s\\"">%s</ID>\\n"" , cp -> uuif_uuid [ i ] [ j ] , j + 1 )"	2805:16:127797:127914	136682	0	True				
ANR	136830	CallExpression	"fprintf ( xmlout , ""              <ID Instance=\\""%s\\"">%s</ID>\\n"" , cp -> uuif_uuid [ i ] [ j ] , j + 1 )"		136682	0					
ANR	136831	Callee	fprintf		136682	0					
ANR	136832	Identifier	fprintf		136682	0					
ANR	136833	ArgumentList	xmlout		136682	1					
ANR	136834	Argument	xmlout		136682	0					
ANR	136835	Identifier	xmlout		136682	0					
ANR	136836	Argument	"""              <ID Instance=\\""%s\\"">%s</ID>\\n"""		136682	1					
ANR	136837	PrimaryExpression	"""              <ID Instance=\\""%s\\"">%s</ID>\\n"""		136682	0					
ANR	136838	Argument	cp -> uuif_uuid [ i ] [ j ]		136682	2					
ANR	136839	ArrayIndexing	cp -> uuif_uuid [ i ] [ j ]		136682	0					
ANR	136840	ArrayIndexing	cp -> uuif_uuid [ i ]		136682	0					
ANR	136841	PtrMemberAccess	cp -> uuif_uuid		136682	0					
ANR	136842	Identifier	cp		136682	0					
ANR	136843	Identifier	uuif_uuid		136682	1					
ANR	136844	Identifier	i		136682	1					
ANR	136845	Identifier	j		136682	1					
ANR	136846	Argument	j + 1		136682	3					
ANR	136847	AdditiveExpression	j + 1		136682	0		+			
ANR	136848	Identifier	j		136682	0					
ANR	136849	PrimaryExpression	1		136682	1					
ANR	136850	ExpressionStatement	"fprintf ( xmlout , ""              </UUIDList>\\n"" )"	2808:12:127942:127993	136682	42	True				
ANR	136851	CallExpression	"fprintf ( xmlout , ""              </UUIDList>\\n"" )"		136682	0					
ANR	136852	Callee	fprintf		136682	0					
ANR	136853	Identifier	fprintf		136682	0					
ANR	136854	ArgumentList	xmlout		136682	1					
ANR	136855	Argument	xmlout		136682	0					
ANR	136856	Identifier	xmlout		136682	0					
ANR	136857	Argument	"""              </UUIDList>\\n"""		136682	1					
ANR	136858	PrimaryExpression	"""              </UUIDList>\\n"""		136682	0					
ANR	136859	ExpressionStatement	"fprintf ( xmlout , ""              <DataEntryURL>\\n"" )"	2809:12:128007:128061	136682	43	True				
ANR	136860	CallExpression	"fprintf ( xmlout , ""              <DataEntryURL>\\n"" )"		136682	0					
ANR	136861	Callee	fprintf		136682	0					
ANR	136862	Identifier	fprintf		136682	0					
ANR	136863	ArgumentList	xmlout		136682	1					
ANR	136864	Argument	xmlout		136682	0					
ANR	136865	Identifier	xmlout		136682	0					
ANR	136866	Argument	"""              <DataEntryURL>\\n"""		136682	1					
ANR	136867	PrimaryExpression	"""              <DataEntryURL>\\n"""		136682	0					
ANR	136868	ExpressionStatement	"fprintf ( xmlout , ""                <LOC>\\n"" )"	2811:12:128122:128169	136682	44	True				
ANR	136869	CallExpression	"fprintf ( xmlout , ""                <LOC>\\n"" )"		136682	0					
ANR	136870	Callee	fprintf		136682	0					
ANR	136871	Identifier	fprintf		136682	0					
ANR	136872	ArgumentList	xmlout		136682	1					
ANR	136873	Argument	xmlout		136682	0					
ANR	136874	Identifier	xmlout		136682	0					
ANR	136875	Argument	"""                <LOC>\\n"""		136682	1					
ANR	136876	PrimaryExpression	"""                <LOC>\\n"""		136682	0					
ANR	136877	ExpressionStatement	"fprintf ( xmlout , ""                  %s"" , cp -> uinf_url [ i ] )"	2812:12:128183:128264	136682	45	True				
ANR	136878	CallExpression	"fprintf ( xmlout , ""                  %s"" , cp -> uinf_url [ i ] )"		136682	0					
ANR	136879	Callee	fprintf		136682	0					
ANR	136880	Identifier	fprintf		136682	0					
ANR	136881	ArgumentList	xmlout		136682	1					
ANR	136882	Argument	xmlout		136682	0					
ANR	136883	Identifier	xmlout		136682	0					
ANR	136884	Argument	"""                  %s"""		136682	1					
ANR	136885	PrimaryExpression	"""                  %s"""		136682	0					
ANR	136886	Argument	cp -> uinf_url [ i ]		136682	2					
ANR	136887	ArrayIndexing	cp -> uinf_url [ i ]		136682	0					
ANR	136888	PtrMemberAccess	cp -> uinf_url		136682	0					
ANR	136889	Identifier	cp		136682	0					
ANR	136890	Identifier	uinf_url		136682	1					
ANR	136891	Identifier	i		136682	1					
ANR	136892	ExpressionStatement	"fprintf ( xmlout , ""                </LOC>\\n"" )"	2814:12:128393:128441	136682	46	True				
ANR	136893	CallExpression	"fprintf ( xmlout , ""                </LOC>\\n"" )"		136682	0					
ANR	136894	Callee	fprintf		136682	0					
ANR	136895	Identifier	fprintf		136682	0					
ANR	136896	ArgumentList	xmlout		136682	1					
ANR	136897	Argument	xmlout		136682	0					
ANR	136898	Identifier	xmlout		136682	0					
ANR	136899	Argument	"""                </LOC>\\n"""		136682	1					
ANR	136900	PrimaryExpression	"""                </LOC>\\n"""		136682	0					
ANR	136901	ExpressionStatement	"fprintf ( xmlout , ""              </DataEntryURL>\\n"" )"	2815:12:128455:128510	136682	47	True				
ANR	136902	CallExpression	"fprintf ( xmlout , ""              </DataEntryURL>\\n"" )"		136682	0					
ANR	136903	Callee	fprintf		136682	0					
ANR	136904	Identifier	fprintf		136682	0					
ANR	136905	ArgumentList	xmlout		136682	1					
ANR	136906	Argument	xmlout		136682	0					
ANR	136907	Identifier	xmlout		136682	0					
ANR	136908	Argument	"""              </DataEntryURL>\\n"""		136682	1					
ANR	136909	PrimaryExpression	"""              </DataEntryURL>\\n"""		136682	0					
ANR	136910	ExpressionStatement	"fprintf ( xmlout , ""            </UUIDInfo>\\n"" )"	2816:12:128524:128573	136682	48	True				
ANR	136911	CallExpression	"fprintf ( xmlout , ""            </UUIDInfo>\\n"" )"		136682	0					
ANR	136912	Callee	fprintf		136682	0					
ANR	136913	Identifier	fprintf		136682	0					
ANR	136914	ArgumentList	xmlout		136682	1					
ANR	136915	Argument	xmlout		136682	0					
ANR	136916	Identifier	xmlout		136682	0					
ANR	136917	Argument	"""            </UUIDInfo>\\n"""		136682	1					
ANR	136918	PrimaryExpression	"""            </UUIDInfo>\\n"""		136682	0					
ANR	136919	ReturnType	void		136682	1					
ANR	136920	Identifier	xml_out_frame_uuid		136682	2					
ANR	136921	ParameterList	"FILE * xmlout , opj_cp_t * cp"		136682	3					
ANR	136922	Parameter	FILE * xmlout	2753:24:124776:124787	136682	0	True				
ANR	136923	ParameterType	FILE *		136682	0					
ANR	136924	Identifier	xmlout		136682	1					
ANR	136925	Parameter	opj_cp_t * cp	2753:38:124790:124801	136682	1	True				
ANR	136926	ParameterType	opj_cp_t *		136682	0					
ANR	136927	Identifier	cp		136682	1					
ANR	136928	CFGEntryNode	ENTRY		136682		True				
ANR	136929	CFGExitNode	EXIT		136682		True				
ANR	136930	Symbol	* * i		136682						
ANR	136931	Symbol	* * cp -> uuif_uuid		136682						
ANR	136932	Symbol	* * cp -> cp		136682						
ANR	136933	Symbol	* cp -> uinf_ulst_nu		136682						
ANR	136934	Symbol	* cp -> uinf_url		136682						
ANR	136935	Symbol	cp -> cp -> uinf_ulst_nu		136682						
ANR	136936	Symbol	* cp -> cp		136682						
ANR	136937	Symbol	cp -> uinf_ulst_nu		136682						
ANR	136938	Symbol	i		136682						
ANR	136939	Symbol	cp -> cp		136682						
ANR	136940	Symbol	j		136682						
ANR	136941	Symbol	* cp -> uuif_uuid		136682						
ANR	136942	Symbol	cp -> uuif_uuid		136682						
ANR	136943	Symbol	cp		136682						
ANR	136944	Symbol	cp -> uuid_count		136682						
ANR	136945	Symbol	* cp -> cp -> uinf_ulst_nu		136682						
ANR	136946	Symbol	xmlout		136682						
ANR	136947	Symbol	* cp		136682						
ANR	136948	Symbol	* i		136682						
ANR	136949	Symbol	* j		136682						
ANR	136950	Symbol	* * * cp		136682						
ANR	136951	Symbol	cp -> juuid		136682						
ANR	136952	Symbol	cp -> uinf_url		136682						
ANR	136953	Symbol	* * cp		136682						
ANR	136954	Function	xml_out_frame_unknown_type	2821:35:128653:130580							
ANR	136955	FunctionDef	"xml_out_frame_unknown_type (FILE * xmlout , opj_cp_t * cp)"		136954	0					
ANR	136956	CompoundStatement		2823:0:128736:130580	136954	0					
ANR	136957	IdentifierDeclStatement	int i ;	2838:4:129744:129749	136954	0	True				
ANR	136958	IdentifierDecl	i		136954	0					
ANR	136959	IdentifierDeclType	int		136954	0					
ANR	136960	Identifier	i		136954	1					
ANR	136961	Statement	IMAGE	2839:4:129755:129759	136954	1	True				
ANR	136962	Statement	cp	2839:10:129761:129762	136954	2	True				
ANR	136963	Statement	->	2839:12:129763:129764	136954	3	True				
ANR	136964	Statement	unknown_type	2839:14:129765:129776	136954	4	True				
ANR	136965	Statement	","	2839:26:129777:129777	136954	5	True				
ANR	136966	Statement	cp	2839:28:129779:129780	136954	6	True				
ANR	136967	Statement	->	2839:30:129781:129782	136954	7	True				
ANR	136968	Statement	unknown_type_count	2839:32:129783:129800	136954	8	True				
ANR	136969	Statement	","	2839:50:129801:129801	136954	9	True				
ANR	136970	Statement	cp	2840:10:129813:129814	136954	10	True				
ANR	136971	Statement	->	2840:12:129815:129816	136954	11	True				
ANR	136972	Statement	unknown_type_boxtype	2840:14:129817:129836	136954	12	True				
ANR	136973	Statement	(	2840:34:129837:129837	136954	13	True				
ANR	136974	Statement	array	2840:35:129838:129842	136954	14	True				
ANR	136975	Statement	of	2840:41:129844:129845	136954	15	True				
ANR	136976	Statement	buf	2840:44:129847:129849	136954	16	True				
ANR	136977	Statement	[	2840:47:129850:129850	136954	17	True				
ANR	136978	Statement	5	2840:48:129851:129851	136954	18	True				
ANR	136979	Statement	]	2840:49:129852:129852	136954	19	True				
ANR	136980	Statement	s	2840:50:129853:129853	136954	20	True				
ANR	136981	Statement	)	2840:51:129854:129854	136954	21	True				
ANR	136982	Statement	","	2840:52:129855:129855	136954	22	True				
ANR	136983	Statement	cp	2841:10:129867:129868	136954	23	True				
ANR	136984	Statement	->	2841:12:129869:129870	136954	24	True				
ANR	136985	Statement	unknown_type_data	2841:14:129871:129887	136954	25	True				
ANR	136986	Statement	(	2841:31:129888:129888	136954	26	True				
ANR	136987	Statement	array	2841:32:129889:129893	136954	27	True				
ANR	136988	Statement	of	2841:38:129895:129896	136954	28	True				
ANR	136989	Statement	chars	2841:41:129898:129902	136954	29	True				
ANR	136990	Statement	)	2841:46:129903:129903	136954	30	True				
ANR	136991	Statement	","	2841:47:129904:129904	136954	31	True				
ANR	136992	Statement	cp	2841:49:129906:129907	136954	32	True				
ANR	136993	Statement	->	2841:51:129908:129909	136954	33	True				
ANR	136994	Statement	unknown_type_len	2841:53:129910:129925	136954	34	True				
ANR	136995	Statement	(	2841:69:129926:129926	136954	35	True				
ANR	136996	Statement	array	2841:70:129927:129931	136954	36	True				
ANR	136997	Statement	of	2841:76:129933:129934	136954	37	True				
ANR	136998	Statement	ints	2841:79:129936:129939	136954	38	True				
ANR	136999	Statement	)	2841:83:129940:129940	136954	39	True				
ANR	137000	IfStatement	if ( cp -> unknown_type != 1 )		136954	40					
ANR	137001	Condition	cp -> unknown_type != 1	2842:8:129950:129970	136954	0	True				
ANR	137002	EqualityExpression	cp -> unknown_type != 1		136954	0		!=			
ANR	137003	PtrMemberAccess	cp -> unknown_type		136954	0					
ANR	137004	Identifier	cp		136954	0					
ANR	137005	Identifier	unknown_type		136954	1					
ANR	137006	PrimaryExpression	1		136954	1					
ANR	137007	CompoundStatement		20:31:1236:1236	136954	1					
ANR	137008	ReturnStatement	return ;	2843:8:129983:129989	136954	0	True				
ANR	137009	ForStatement	for ( i = 0 ; i < cp -> unknown_type_count ; i ++ )		136954	41					
ANR	137010	ForInit	i = 0 ;	2846:9:130028:130033	136954	0	True				
ANR	137011	AssignmentExpression	i = 0		136954	0		=			
ANR	137012	Identifier	i		136954	0					
ANR	137013	PrimaryExpression	0		136954	1					
ANR	137014	Condition	i < cp -> unknown_type_count	2846:16:130035:130060	136954	1	True				
ANR	137015	RelationalExpression	i < cp -> unknown_type_count		136954	0		<			
ANR	137016	Identifier	i		136954	0					
ANR	137017	PtrMemberAccess	cp -> unknown_type_count		136954	1					
ANR	137018	Identifier	cp		136954	0					
ANR	137019	Identifier	unknown_type_count		136954	1					
ANR	137020	PostIncDecOperationExpression	i ++	2846:44:130063:130065	136954	2	True				
ANR	137021	Identifier	i		136954	0					
ANR	137022	IncDec	++		136954	1					
ANR	137023	CompoundStatement		24:49:1331:1331	136954	3					
ANR	137024	ExpressionStatement	"fprintf ( xmlout , ""            <UnknownType BoxType=\\""%s\\"">\\n"" , cp -> unknown_type_boxtype [ i ] )"	2847:8:130078:130189	136954	0	True				
ANR	137025	CallExpression	"fprintf ( xmlout , ""            <UnknownType BoxType=\\""%s\\"">\\n"" , cp -> unknown_type_boxtype [ i ] )"		136954	0					
ANR	137026	Callee	fprintf		136954	0					
ANR	137027	Identifier	fprintf		136954	0					
ANR	137028	ArgumentList	xmlout		136954	1					
ANR	137029	Argument	xmlout		136954	0					
ANR	137030	Identifier	xmlout		136954	0					
ANR	137031	Argument	"""            <UnknownType BoxType=\\""%s\\"">\\n"""		136954	1					
ANR	137032	PrimaryExpression	"""            <UnknownType BoxType=\\""%s\\"">\\n"""		136954	0					
ANR	137033	Argument	cp -> unknown_type_boxtype [ i ]		136954	2					
ANR	137034	ArrayIndexing	cp -> unknown_type_boxtype [ i ]		136954	0					
ANR	137035	PtrMemberAccess	cp -> unknown_type_boxtype		136954	0					
ANR	137036	Identifier	cp		136954	0					
ANR	137037	Identifier	unknown_type_boxtype		136954	1					
ANR	137038	Identifier	i		136954	1					
ANR	137039	ExpressionStatement	"xml_out_dump_hex_and_ascii ( xmlout , cp -> unknown_type_data [ i ] , cp -> unknown_type_len [ i ] )"	2852:8:130390:130510	136954	1	True				
ANR	137040	CallExpression	"xml_out_dump_hex_and_ascii ( xmlout , cp -> unknown_type_data [ i ] , cp -> unknown_type_len [ i ] )"		136954	0					
ANR	137041	Callee	xml_out_dump_hex_and_ascii		136954	0					
ANR	137042	Identifier	xml_out_dump_hex_and_ascii		136954	0					
ANR	137043	ArgumentList	xmlout		136954	1					
ANR	137044	Argument	xmlout		136954	0					
ANR	137045	Identifier	xmlout		136954	0					
ANR	137046	Argument	cp -> unknown_type_data [ i ]		136954	1					
ANR	137047	ArrayIndexing	cp -> unknown_type_data [ i ]		136954	0					
ANR	137048	PtrMemberAccess	cp -> unknown_type_data		136954	0					
ANR	137049	Identifier	cp		136954	0					
ANR	137050	Identifier	unknown_type_data		136954	1					
ANR	137051	Identifier	i		136954	1					
ANR	137052	Argument	cp -> unknown_type_len [ i ]		136954	2					
ANR	137053	ArrayIndexing	cp -> unknown_type_len [ i ]		136954	0					
ANR	137054	PtrMemberAccess	cp -> unknown_type_len		136954	0					
ANR	137055	Identifier	cp		136954	0					
ANR	137056	Identifier	unknown_type_len		136954	1					
ANR	137057	Identifier	i		136954	1					
ANR	137058	ExpressionStatement	"fprintf ( xmlout , ""            </UnknownType>\\n"" )"	2854:8:130520:130572	136954	2	True				
ANR	137059	CallExpression	"fprintf ( xmlout , ""            </UnknownType>\\n"" )"		136954	0					
ANR	137060	Callee	fprintf		136954	0					
ANR	137061	Identifier	fprintf		136954	0					
ANR	137062	ArgumentList	xmlout		136954	1					
ANR	137063	Argument	xmlout		136954	0					
ANR	137064	Identifier	xmlout		136954	0					
ANR	137065	Argument	"""            </UnknownType>\\n"""		136954	1					
ANR	137066	PrimaryExpression	"""            </UnknownType>\\n"""		136954	0					
ANR	137067	ReturnType	data structure instead void		136954	1					
ANR	137068	Identifier	xml_out_frame_unknown_type		136954	2					
ANR	137069	ParameterList	"FILE * xmlout , opj_cp_t * cp"		136954	3					
ANR	137070	Parameter	FILE * xmlout	2822:32:128708:128719	136954	0	True				
ANR	137071	ParameterType	FILE *		136954	0					
ANR	137072	Identifier	xmlout		136954	1					
ANR	137073	Parameter	opj_cp_t * cp	2822:46:128722:128733	136954	1	True				
ANR	137074	ParameterType	opj_cp_t *		136954	0					
ANR	137075	Identifier	cp		136954	1					
ANR	137076	CFGEntryNode	ENTRY		136954		True				
ANR	137077	CFGExitNode	EXIT		136954		True				
ANR	137078	Symbol	* cp -> unknown_type_data		136954						
ANR	137079	Symbol	i		136954						
ANR	137080	Symbol	cp -> unknown_type_count		136954						
ANR	137081	Symbol	cp		136954						
ANR	137082	Symbol	xmlout		136954						
ANR	137083	Symbol	* cp		136954						
ANR	137084	Symbol	cp -> unknown_type_len		136954						
ANR	137085	Symbol	* cp -> unknown_type_len		136954						
ANR	137086	Symbol	* i		136954						
ANR	137087	Symbol	cp -> unknown_type_data		136954						
ANR	137088	Symbol	cp -> unknown_type		136954						
ANR	137089	Symbol	* * cp		136954						
ANR	137090	Symbol	cp -> unknown_type_boxtype		136954						
ANR	137091	Symbol	* cp -> unknown_type_boxtype		136954						
