command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	66593	File	data/converged/CVE-2019-12973_openjpeg/src_bin_jp2_windirent.h								
ANR	66594	ClassDef	dirent	251:8:8589:8930							
ANR	66595	DeclStmt									
ANR	66596	Decl							char	char [ NAME_MAX + 1 ]	d_name
ANR	66597	DeclStmt									
ANR	66598	Decl							WIN32_FIND_DATA	WIN32_FIND_DATA	data
ANR	66599	DeclStmt									
ANR	66600	Decl							struct ffblk	struct ffblk	data
ANR	66601	DeclStmt									
ANR	66602	Decl							struct _find_t	struct _find_t	data
ANR	66603	DeclStmt									
ANR	66604	Decl							dirent	dirent	dirent
ANR	66605	ClassDef	DIR	268:8:9070:9476							
ANR	66606	DeclStmt									
ANR	66607	Decl							char	char *	dirname
ANR	66608	DeclStmt									
ANR	66609	Decl							dirent	dirent	current
ANR	66610	DeclStmt									
ANR	66611	Decl							int	int	dirent_filled
ANR	66612	DeclStmt									
ANR	66613	Decl							HANDLE	HANDLE	search_handle
ANR	66614	DeclStmt									
ANR	66615	Decl							DIR	DIR	DIR
ANR	66616	DeclStmt									
ANR	66617	Decl							DIR	DIR * ( const char * dirname )	opendir
ANR	66618	DeclStmt									
ANR	66619	Decl							struct dirent	struct dirent * ( DIR * dirp )	readdir
ANR	66620	DeclStmt									
ANR	66621	Decl							int	int ( DIR * dirp )	closedir
ANR	66622	DeclStmt									
ANR	66623	Decl							void	void ( DIR * dirp )	rewinddir
ANR	66624	DeclStmt									
ANR	66625	Decl							int	int ( DIR * p )	_initdir
ANR	66626	DeclStmt									
ANR	66627	Decl							const char	const char * ( const struct dirent * dp )	_getdirname
ANR	66628	DeclStmt									
ANR	66629	Decl							void	void ( struct DIR * dirp )	_setdirname
ANR	66630	Function	opendir	347:0:11677:13101							
ANR	66631	FunctionDef	opendir (const char * dirname)		66630	0					
ANR	66632	CompoundStatement		348:0:11718:13101	66630	0					
ANR	66633	IdentifierDeclStatement	DIR * dirp ;	349:4:11724:11733	66630	0	True				
ANR	66634	IdentifierDecl	* dirp		66630	0					
ANR	66635	IdentifierDeclType	DIR *		66630	0					
ANR	66636	Identifier	dirp		66630	1					
ANR	66637	ExpressionStatement	assert ( dirname != NULL )	350:4:11739:11762	66630	1	True				
ANR	66638	CallExpression	assert ( dirname != NULL )		66630	0					
ANR	66639	Callee	assert		66630	0					
ANR	66640	Identifier	assert		66630	0					
ANR	66641	ArgumentList	dirname != NULL		66630	1					
ANR	66642	Argument	dirname != NULL		66630	0					
ANR	66643	EqualityExpression	dirname != NULL		66630	0		!=			
ANR	66644	Identifier	dirname		66630	0					
ANR	66645	Identifier	NULL		66630	1					
ANR	66646	ExpressionStatement	dirp = ( DIR * ) malloc ( sizeof ( struct DIR ) )	352:4:11769:11808	66630	2	True				
ANR	66647	AssignmentExpression	dirp = ( DIR * ) malloc ( sizeof ( struct DIR ) )		66630	0		=			
ANR	66648	Identifier	dirp		66630	0					
ANR	66649	CastExpression	( DIR * ) malloc ( sizeof ( struct DIR ) )		66630	1					
ANR	66650	CastTarget	DIR *		66630	0					
ANR	66651	CallExpression	malloc ( sizeof ( struct DIR ) )		66630	1					
ANR	66652	Callee	malloc		66630	0					
ANR	66653	Identifier	malloc		66630	0					
ANR	66654	ArgumentList	sizeof ( struct DIR )		66630	1					
ANR	66655	Argument	sizeof ( struct DIR )		66630	0					
ANR	66656	SizeofExpression	sizeof ( struct DIR )		66630	0					
ANR	66657	Sizeof	sizeof		66630	0					
ANR	66658	SizeofOperand	struct DIR		66630	1					
ANR	66659	IfStatement	if ( dirp != NULL )		66630	3					
ANR	66660	Condition	dirp != NULL	353:8:11818:11829	66630	0	True				
ANR	66661	EqualityExpression	dirp != NULL		66630	0		!=			
ANR	66662	Identifier	dirp		66630	0					
ANR	66663	Identifier	NULL		66630	1					
ANR	66664	CompoundStatement		26:2:969:1020	66630	1					
ANR	66665	IdentifierDeclStatement	char * p ;	354:8:11842:11849	66630	0	True				
ANR	66666	IdentifierDecl	* p		66630	0					
ANR	66667	IdentifierDeclType	char *		66630	0					
ANR	66668	Identifier	p		66630	1					
ANR	66669	ExpressionStatement	"dirp -> dirname = ( char * ) malloc ( strlen ( dirname ) + 1 + strlen ( ""\\\\*.*"" ) )"	357:8:11907:11976	66630	1	True				
ANR	66670	AssignmentExpression	"dirp -> dirname = ( char * ) malloc ( strlen ( dirname ) + 1 + strlen ( ""\\\\*.*"" ) )"		66630	0		=			
ANR	66671	PtrMemberAccess	dirp -> dirname		66630	0					
ANR	66672	Identifier	dirp		66630	0					
ANR	66673	Identifier	dirname		66630	1					
ANR	66674	CastExpression	"( char * ) malloc ( strlen ( dirname ) + 1 + strlen ( ""\\\\*.*"" ) )"		66630	1					
ANR	66675	CastTarget	char *		66630	0					
ANR	66676	CallExpression	"malloc ( strlen ( dirname ) + 1 + strlen ( ""\\\\*.*"" ) )"		66630	1					
ANR	66677	Callee	malloc		66630	0					
ANR	66678	Identifier	malloc		66630	0					
ANR	66679	ArgumentList	"strlen ( dirname ) + 1 + strlen ( ""\\\\*.*"" )"		66630	1					
ANR	66680	Argument	"strlen ( dirname ) + 1 + strlen ( ""\\\\*.*"" )"		66630	0					
ANR	66681	AdditiveExpression	"strlen ( dirname ) + 1 + strlen ( ""\\\\*.*"" )"		66630	0		+			
ANR	66682	CallExpression	strlen ( dirname )		66630	0					
ANR	66683	Callee	strlen		66630	0					
ANR	66684	Identifier	strlen		66630	0					
ANR	66685	ArgumentList	dirname		66630	1					
ANR	66686	Argument	dirname		66630	0					
ANR	66687	Identifier	dirname		66630	0					
ANR	66688	AdditiveExpression	"1 + strlen ( ""\\\\*.*"" )"		66630	1		+			
ANR	66689	PrimaryExpression	1		66630	0					
ANR	66690	CallExpression	"strlen ( ""\\\\*.*"" )"		66630	1					
ANR	66691	Callee	strlen		66630	0					
ANR	66692	Identifier	strlen		66630	0					
ANR	66693	ArgumentList	"""\\\\*.*"""		66630	1					
ANR	66694	Argument	"""\\\\*.*"""		66630	0					
ANR	66695	PrimaryExpression	"""\\\\*.*"""		66630	0					
ANR	66696	IfStatement	if ( dirp -> dirname == NULL )		66630	2					
ANR	66697	Condition	dirp -> dirname == NULL	358:12:11990:12010	66630	0	True				
ANR	66698	EqualityExpression	dirp -> dirname == NULL		66630	0		==			
ANR	66699	PtrMemberAccess	dirp -> dirname		66630	0					
ANR	66700	Identifier	dirp		66630	0					
ANR	66701	Identifier	dirname		66630	1					
ANR	66702	Identifier	NULL		66630	1					
ANR	66703	CompoundStatement		11:35:294:294	66630	1					
ANR	66704	ExpressionStatement	free ( dirp )	360:12:12104:12114	66630	0	True				
ANR	66705	CallExpression	free ( dirp )		66630	0					
ANR	66706	Callee	free		66630	0					
ANR	66707	Identifier	free		66630	0					
ANR	66708	ArgumentList	dirp		66630	1					
ANR	66709	Argument	dirp		66630	0					
ANR	66710	Identifier	dirp		66630	0					
ANR	66711	ReturnStatement	return NULL ;	361:12:12128:12139	66630	1	True				
ANR	66712	Identifier	NULL		66630	0					
ANR	66713	ExpressionStatement	"strcpy ( dirp -> dirname , dirname )"	367:8:12460:12490	66630	3	True				
ANR	66714	CallExpression	"strcpy ( dirp -> dirname , dirname )"		66630	0					
ANR	66715	Callee	strcpy		66630	0					
ANR	66716	Identifier	strcpy		66630	0					
ANR	66717	ArgumentList	dirp -> dirname		66630	1					
ANR	66718	Argument	dirp -> dirname		66630	0					
ANR	66719	PtrMemberAccess	dirp -> dirname		66630	0					
ANR	66720	Identifier	dirp		66630	0					
ANR	66721	Identifier	dirname		66630	1					
ANR	66722	Argument	dirname		66630	1					
ANR	66723	Identifier	dirname		66630	0					
ANR	66724	ExpressionStatement	"p = strchr ( dirp -> dirname , '\\0' )"	368:8:12500:12531	66630	4	True				
ANR	66725	AssignmentExpression	"p = strchr ( dirp -> dirname , '\\0' )"		66630	0		=			
ANR	66726	Identifier	p		66630	0					
ANR	66727	CallExpression	"strchr ( dirp -> dirname , '\\0' )"		66630	1					
ANR	66728	Callee	strchr		66630	0					
ANR	66729	Identifier	strchr		66630	0					
ANR	66730	ArgumentList	dirp -> dirname		66630	1					
ANR	66731	Argument	dirp -> dirname		66630	0					
ANR	66732	PtrMemberAccess	dirp -> dirname		66630	0					
ANR	66733	Identifier	dirp		66630	0					
ANR	66734	Identifier	dirname		66630	1					
ANR	66735	Argument	'\\0'		66630	1					
ANR	66736	PrimaryExpression	'\\0'		66630	0					
ANR	66737	IfStatement	if ( dirp -> dirname < p && * ( p - 1 ) != '\\\\' && * ( p - 1 ) != '/' && * ( p - 1 ) != ':' )		66630	5					
ANR	66738	Condition	dirp -> dirname < p && * ( p - 1 ) != '\\\\' && * ( p - 1 ) != '/' && * ( p - 1 ) != ':'	369:12:12545:12640	66630	0	True				
ANR	66739	AndExpression	dirp -> dirname < p && * ( p - 1 ) != '\\\\' && * ( p - 1 ) != '/' && * ( p - 1 ) != ':'		66630	0		&&			
ANR	66740	RelationalExpression	dirp -> dirname < p		66630	0		<			
ANR	66741	PtrMemberAccess	dirp -> dirname		66630	0					
ANR	66742	Identifier	dirp		66630	0					
ANR	66743	Identifier	dirname		66630	1					
ANR	66744	Identifier	p		66630	1					
ANR	66745	AndExpression	* ( p - 1 ) != '\\\\' && * ( p - 1 ) != '/' && * ( p - 1 ) != ':'		66630	1		&&			
ANR	66746	EqualityExpression	* ( p - 1 ) != '\\\\'		66630	0		!=			
ANR	66747	UnaryOperationExpression	* ( p - 1 )		66630	0					
ANR	66748	UnaryOperator	*		66630	0					
ANR	66749	AdditiveExpression	p - 1		66630	1		-			
ANR	66750	Identifier	p		66630	0					
ANR	66751	PrimaryExpression	1		66630	1					
ANR	66752	PrimaryExpression	'\\\\'		66630	1					
ANR	66753	AndExpression	* ( p - 1 ) != '/' && * ( p - 1 ) != ':'		66630	1		&&			
ANR	66754	EqualityExpression	* ( p - 1 ) != '/'		66630	0		!=			
ANR	66755	UnaryOperationExpression	* ( p - 1 )		66630	0					
ANR	66756	UnaryOperator	*		66630	0					
ANR	66757	AdditiveExpression	p - 1		66630	1		-			
ANR	66758	Identifier	p		66630	0					
ANR	66759	PrimaryExpression	1		66630	1					
ANR	66760	PrimaryExpression	'/'		66630	1					
ANR	66761	EqualityExpression	* ( p - 1 ) != ':'		66630	1		!=			
ANR	66762	UnaryOperationExpression	* ( p - 1 )		66630	0					
ANR	66763	UnaryOperator	*		66630	0					
ANR	66764	AdditiveExpression	p - 1		66630	1		-			
ANR	66765	Identifier	p		66630	0					
ANR	66766	PrimaryExpression	1		66630	1					
ANR	66767	PrimaryExpression	':'		66630	1					
ANR	66768	CompoundStatement		23:76:924:924	66630	1					
ANR	66769	ExpressionStatement	"strcpy ( p ++ , ""\\\\"" )"	371:12:12657:12674	66630	0	True				
ANR	66770	CallExpression	"strcpy ( p ++ , ""\\\\"" )"		66630	0					
ANR	66771	Callee	strcpy		66630	0					
ANR	66772	Identifier	strcpy		66630	0					
ANR	66773	ArgumentList	p ++		66630	1					
ANR	66774	Argument	p ++		66630	0					
ANR	66775	PostIncDecOperationExpression	p ++		66630	0					
ANR	66776	Identifier	p		66630	0					
ANR	66777	IncDec	++		66630	1					
ANR	66778	Argument	"""\\\\"""		66630	1					
ANR	66779	PrimaryExpression	"""\\\\"""		66630	0					
ANR	66780	ElseStatement	else		66630	0					
ANR	66781	ExpressionStatement	"strcpy ( p , ""*.*"" )"	376:8:12808:12824	66630	0	True				
ANR	66782	CallExpression	"strcpy ( p , ""*.*"" )"		66630	0					
ANR	66783	Callee	strcpy		66630	0					
ANR	66784	Identifier	strcpy		66630	0					
ANR	66785	ArgumentList	p		66630	1					
ANR	66786	Argument	p		66630	0					
ANR	66787	Identifier	p		66630	0					
ANR	66788	Argument	"""*.*"""		66630	1					
ANR	66789	PrimaryExpression	"""*.*"""		66630	0					
ANR	66790	IdentifierDeclStatement	"ifdef DIRENT_WIN32_INTERFACE strcpy ( p , ""*"" ) ;"	373:2:12688:12739	66630	6	True				
ANR	66791	IdentifierDecl	"strcpy ( p , ""*"" )"		66630	0					
ANR	66792	IdentifierDeclType	ifdef DIRENT_WIN32_INTERFACE		66630	0					
ANR	66793	Identifier	strcpy		66630	1					
ANR	66794	Expression	"p , ""*"""		66630	2					
ANR	66795	Identifier	p		66630	0					
ANR	66796	PrimaryExpression	"""*"""		66630	1					
ANR	66797	Statement	endif	377:2:12878:12882	66630	7	True				
ANR	66798	IfStatement	if ( _initdir ( dirp ) == 0 )		66630	8					
ANR	66799	Condition	_initdir ( dirp ) == 0	380:12:12923:12941	66630	0	True				
ANR	66800	EqualityExpression	_initdir ( dirp ) == 0		66630	0		==			
ANR	66801	CallExpression	_initdir ( dirp )		66630	0					
ANR	66802	Callee	_initdir		66630	0					
ANR	66803	Identifier	_initdir		66630	0					
ANR	66804	ArgumentList	dirp		66630	1					
ANR	66805	Argument	dirp		66630	0					
ANR	66806	Identifier	dirp		66630	0					
ANR	66807	PrimaryExpression	0		66630	1					
ANR	66808	CompoundStatement		33:33:1225:1225	66630	1					
ANR	66809	ExpressionStatement	free ( dirp -> dirname )	382:12:12998:13017	66630	0	True				
ANR	66810	CallExpression	free ( dirp -> dirname )		66630	0					
ANR	66811	Callee	free		66630	0					
ANR	66812	Identifier	free		66630	0					
ANR	66813	ArgumentList	dirp -> dirname		66630	1					
ANR	66814	Argument	dirp -> dirname		66630	0					
ANR	66815	PtrMemberAccess	dirp -> dirname		66630	0					
ANR	66816	Identifier	dirp		66630	0					
ANR	66817	Identifier	dirname		66630	1					
ANR	66818	ExpressionStatement	free ( dirp )	383:12:13031:13041	66630	1	True				
ANR	66819	CallExpression	free ( dirp )		66630	0					
ANR	66820	Callee	free		66630	0					
ANR	66821	Identifier	free		66630	0					
ANR	66822	ArgumentList	dirp		66630	1					
ANR	66823	Argument	dirp		66630	0					
ANR	66824	Identifier	dirp		66630	0					
ANR	66825	ReturnStatement	return NULL ;	384:12:13055:13066	66630	2	True				
ANR	66826	Identifier	NULL		66630	0					
ANR	66827	ReturnStatement	return dirp ;	387:4:13088:13099	66630	4	True				
ANR	66828	Identifier	dirp		66630	0					
ANR	66829	ReturnType	static DIR *		66630	1					
ANR	66830	Identifier	opendir		66630	2					
ANR	66831	ParameterList	const char * dirname		66630	3					
ANR	66832	Parameter	const char * dirname	347:20:11697:11715	66630	0	True				
ANR	66833	ParameterType	const char *		66630	0					
ANR	66834	Identifier	dirname		66630	1					
ANR	66835	CFGEntryNode	ENTRY		66630		True				
ANR	66836	CFGExitNode	EXIT		66630		True				
ANR	66837	Symbol	malloc		66630						
ANR	66838	Symbol	* ( p - 1 )		66630						
ANR	66839	Symbol	NULL		66630						
ANR	66840	Symbol	* dirp		66630						
ANR	66841	Symbol	strchr		66630						
ANR	66842	Symbol	dirp -> dirname		66630						
ANR	66843	Symbol	dirp		66630						
ANR	66844	Symbol	dirname		66630						
ANR	66845	Symbol	strcpy		66630						
ANR	66846	Symbol	_initdir		66630						
ANR	66847	Symbol	p		66630						
ANR	66848	Symbol	strlen		66630						
ANR	66849	Symbol	* p		66630						
ANR	66850	Function	readdir	437:0:15497:17353							
ANR	66851	FunctionDef	readdir (DIR * dirp)		66850	0					
ANR	66852	CompoundStatement		439:0:15539:17353	66850	0					
ANR	66853	ExpressionStatement	assert ( dirp != NULL )	440:4:15545:15565	66850	0	True				
ANR	66854	CallExpression	assert ( dirp != NULL )		66850	0					
ANR	66855	Callee	assert		66850	0					
ANR	66856	Identifier	assert		66850	0					
ANR	66857	ArgumentList	dirp != NULL		66850	1					
ANR	66858	Argument	dirp != NULL		66850	0					
ANR	66859	EqualityExpression	dirp != NULL		66850	0		!=			
ANR	66860	Identifier	dirp		66850	0					
ANR	66861	Identifier	NULL		66850	1					
ANR	66862	IfStatement	if ( dirp == NULL )		66850	1					
ANR	66863	Condition	dirp == NULL	441:8:15575:15586	66850	0	True				
ANR	66864	EqualityExpression	dirp == NULL		66850	0		==			
ANR	66865	Identifier	dirp		66850	0					
ANR	66866	Identifier	NULL		66850	1					
ANR	66867	CompoundStatement		3:22:49:49	66850	1					
ANR	66868	ExpressionStatement	errno = EBADF	442:8:15599:15612	66850	0	True				
ANR	66869	AssignmentExpression	errno = EBADF		66850	0		=			
ANR	66870	Identifier	errno		66850	0					
ANR	66871	Identifier	EBADF		66850	1					
ANR	66872	ReturnStatement	return NULL ;	443:8:15622:15633	66850	1	True				
ANR	66873	Identifier	NULL		66850	0					
ANR	66874	IfStatement	if ( dirp -> search_handle == INVALID_HANDLE_VALUE )		66850	2					
ANR	66875	Condition	dirp -> search_handle == INVALID_HANDLE_VALUE	447:8:15686:15728	66850	0	True				
ANR	66876	EqualityExpression	dirp -> search_handle == INVALID_HANDLE_VALUE		66850	0		==			
ANR	66877	PtrMemberAccess	dirp -> search_handle		66850	0					
ANR	66878	Identifier	dirp		66850	0					
ANR	66879	Identifier	search_handle		66850	1					
ANR	66880	Identifier	INVALID_HANDLE_VALUE		66850	1					
ANR	66881	CompoundStatement		9:53:191:191	66850	1					
ANR	66882	ExpressionStatement	errno = EBADF	449:8:15824:15837	66850	0	True				
ANR	66883	AssignmentExpression	errno = EBADF		66850	0		=			
ANR	66884	Identifier	errno		66850	0					
ANR	66885	Identifier	EBADF		66850	1					
ANR	66886	ReturnStatement	return NULL ;	450:8:15847:15858	66850	1	True				
ANR	66887	Identifier	NULL		66850	0					
ANR	66888	IfStatement	if ( dirp -> dirent_filled != 0 )		66850	3					
ANR	66889	Condition	dirp -> dirent_filled != 0	454:8:15882:15905	66850	0	True				
ANR	66890	EqualityExpression	dirp -> dirent_filled != 0		66850	0		!=			
ANR	66891	PtrMemberAccess	dirp -> dirent_filled		66850	0					
ANR	66892	Identifier	dirp		66850	0					
ANR	66893	Identifier	dirent_filled		66850	1					
ANR	66894	PrimaryExpression	0		66850	1					
ANR	66895	CompoundStatement		16:34:368:368	66850	1					
ANR	66896	ExpressionStatement	dirp -> dirent_filled = 0	465:8:16558:16581	66850	0	True				
ANR	66897	AssignmentExpression	dirp -> dirent_filled = 0		66850	0		=			
ANR	66898	PtrMemberAccess	dirp -> dirent_filled		66850	0					
ANR	66899	Identifier	dirp		66850	0					
ANR	66900	Identifier	dirent_filled		66850	1					
ANR	66901	PrimaryExpression	0		66850	1					
ANR	66902	ElseStatement	else		66850	0					
ANR	66903	CompoundStatement		45:2:1704:1736	66850	0					
ANR	66904	IfStatement	"if ( FindNextFile ( dirp -> search_handle , & dirp -> current . data ) == FALSE )"		66850	0					
ANR	66905	Condition	"FindNextFile ( dirp -> search_handle , & dirp -> current . data ) == FALSE"	469:12:16688:16750	66850	0	True				
ANR	66906	EqualityExpression	"FindNextFile ( dirp -> search_handle , & dirp -> current . data ) == FALSE"		66850	0		==			
ANR	66907	CallExpression	"FindNextFile ( dirp -> search_handle , & dirp -> current . data )"		66850	0					
ANR	66908	Callee	FindNextFile		66850	0					
ANR	66909	Identifier	FindNextFile		66850	0					
ANR	66910	ArgumentList	dirp -> search_handle		66850	1					
ANR	66911	Argument	dirp -> search_handle		66850	0					
ANR	66912	PtrMemberAccess	dirp -> search_handle		66850	0					
ANR	66913	Identifier	dirp		66850	0					
ANR	66914	Identifier	search_handle		66850	1					
ANR	66915	Argument	& dirp -> current . data		66850	1					
ANR	66916	UnaryOperationExpression	& dirp -> current . data		66850	0					
ANR	66917	UnaryOperator	&		66850	0					
ANR	66918	MemberAccess	dirp -> current . data		66850	1					
ANR	66919	PtrMemberAccess	dirp -> current		66850	0					
ANR	66920	Identifier	dirp		66850	0					
ANR	66921	Identifier	current		66850	1					
ANR	66922	Identifier	data		66850	1					
ANR	66923	Identifier	FALSE		66850	1					
ANR	66924	CompoundStatement		31:77:1213:1213	66850	1					
ANR	66925	ExpressionStatement	FindClose ( dirp -> search_handle )	471:12:16835:16865	66850	0	True				
ANR	66926	CallExpression	FindClose ( dirp -> search_handle )		66850	0					
ANR	66927	Callee	FindClose		66850	0					
ANR	66928	Identifier	FindClose		66850	0					
ANR	66929	ArgumentList	dirp -> search_handle		66850	1					
ANR	66930	Argument	dirp -> search_handle		66850	0					
ANR	66931	PtrMemberAccess	dirp -> search_handle		66850	0					
ANR	66932	Identifier	dirp		66850	0					
ANR	66933	Identifier	search_handle		66850	1					
ANR	66934	ExpressionStatement	dirp -> search_handle = INVALID_HANDLE_VALUE	472:12:16879:16921	66850	1	True				
ANR	66935	AssignmentExpression	dirp -> search_handle = INVALID_HANDLE_VALUE		66850	0		=			
ANR	66936	PtrMemberAccess	dirp -> search_handle		66850	0					
ANR	66937	Identifier	dirp		66850	0					
ANR	66938	Identifier	search_handle		66850	1					
ANR	66939	Identifier	INVALID_HANDLE_VALUE		66850	1					
ANR	66940	ExpressionStatement	errno = ENOENT	473:12:16935:16949	66850	2	True				
ANR	66941	AssignmentExpression	errno = ENOENT		66850	0		=			
ANR	66942	Identifier	errno		66850	0					
ANR	66943	Identifier	ENOENT		66850	1					
ANR	66944	ReturnStatement	return NULL ;	474:12:16963:16974	66850	3	True				
ANR	66945	Identifier	NULL		66850	0					
ANR	66946	Statement	elif	477:2:16989:16992	66850	1	True				
ANR	66947	Statement	defined	477:7:16994:17000	66850	2	True				
ANR	66948	Statement	(	477:14:17001:17001	66850	3	True				
ANR	66949	Statement	DIRENT_MSDOS_INTERFACE	477:15:17002:17023	66850	4	True				
ANR	66950	Statement	)	477:37:17024:17024	66850	5	True				
ANR	66951	IfStatement	if ( _dos_findnext ( & dirp -> current . data ) != 0 )		66850	6					
ANR	66952	Condition	_dos_findnext ( & dirp -> current . data ) != 0	478:12:17038:17076	66850	0	True				
ANR	66953	EqualityExpression	_dos_findnext ( & dirp -> current . data ) != 0		66850	0		!=			
ANR	66954	CallExpression	_dos_findnext ( & dirp -> current . data )		66850	0					
ANR	66955	Callee	_dos_findnext		66850	0					
ANR	66956	Identifier	_dos_findnext		66850	0					
ANR	66957	ArgumentList	& dirp -> current . data		66850	1					
ANR	66958	Argument	& dirp -> current . data		66850	0					
ANR	66959	UnaryOperationExpression	& dirp -> current . data		66850	0					
ANR	66960	UnaryOperator	&		66850	0					
ANR	66961	MemberAccess	dirp -> current . data		66850	1					
ANR	66962	PtrMemberAccess	dirp -> current		66850	0					
ANR	66963	Identifier	dirp		66850	0					
ANR	66964	Identifier	current		66850	1					
ANR	66965	Identifier	data		66850	1					
ANR	66966	PrimaryExpression	0		66850	1					
ANR	66967	CompoundStatement		40:53:1539:1539	66850	1					
ANR	66968	ReturnStatement	return NULL ;	481:12:17219:17230	66850	0	True				
ANR	66969	Identifier	NULL		66850	0					
ANR	66970	IdentifierDeclStatement	endif _setdirname ( dirp ) ;	483:2:17244:17276	66850	7	True				
ANR	66971	IdentifierDecl	_setdirname ( dirp )		66850	0					
ANR	66972	IdentifierDeclType	endif		66850	0					
ANR	66973	Identifier	_setdirname		66850	1					
ANR	66974	Identifier	dirp		66850	2					
ANR	66975	ExpressionStatement	assert ( dirp -> dirent_filled == 0 )	486:8:17286:17318	66850	8	True				
ANR	66976	CallExpression	assert ( dirp -> dirent_filled == 0 )		66850	0					
ANR	66977	Callee	assert		66850	0					
ANR	66978	Identifier	assert		66850	0					
ANR	66979	ArgumentList	dirp -> dirent_filled == 0		66850	1					
ANR	66980	Argument	dirp -> dirent_filled == 0		66850	0					
ANR	66981	EqualityExpression	dirp -> dirent_filled == 0		66850	0		==			
ANR	66982	PtrMemberAccess	dirp -> dirent_filled		66850	0					
ANR	66983	Identifier	dirp		66850	0					
ANR	66984	Identifier	dirent_filled		66850	1					
ANR	66985	PrimaryExpression	0		66850	1					
ANR	66986	ReturnStatement	return & dirp -> current ;	488:4:17330:17351	66850	4	True				
ANR	66987	UnaryOperationExpression	& dirp -> current		66850	0					
ANR	66988	UnaryOperator	&		66850	0					
ANR	66989	PtrMemberAccess	dirp -> current		66850	1					
ANR	66990	Identifier	dirp		66850	0					
ANR	66991	Identifier	current		66850	1					
ANR	66992	ReturnType	static struct dirent *		66850	1					
ANR	66993	Identifier	readdir		66850	2					
ANR	66994	ParameterList	DIR * dirp		66850	3					
ANR	66995	Parameter	DIR * dirp	438:8:15528:15536	66850	0	True				
ANR	66996	ParameterType	DIR *		66850	0					
ANR	66997	Identifier	dirp		66850	1					
ANR	66998	CFGEntryNode	ENTRY		66850		True				
ANR	66999	CFGExitNode	EXIT		66850		True				
ANR	67000	Symbol	errno		66850						
ANR	67001	Symbol	_dos_findnext		66850						
ANR	67002	Symbol	NULL		66850						
ANR	67003	Symbol	* dirp		66850						
ANR	67004	Symbol	dirp -> dirent_filled		66850						
ANR	67005	Symbol	dirp -> current		66850						
ANR	67006	Symbol	ENOENT		66850						
ANR	67007	Symbol	dirp		66850						
ANR	67008	Symbol	dirp -> search_handle		66850						
ANR	67009	Symbol	EBADF		66850						
ANR	67010	Symbol	INVALID_HANDLE_VALUE		66850						
ANR	67011	Symbol	FindNextFile		66850						
ANR	67012	Symbol	_setdirname		66850						
ANR	67013	Symbol	& dirp -> current . data		66850						
ANR	67014	Symbol	& dirp -> current		66850						
ANR	67015	Symbol	FALSE		66850						
ANR	67016	Function	closedir	511:0:18131:18954							
ANR	67017	FunctionDef	closedir (DIR * dirp)		67016	0					
ANR	67018	CompoundStatement		513:0:18162:18954	67016	0					
ANR	67019	IdentifierDeclStatement	int retcode = 0 ;	514:4:18168:18183	67016	0	True				
ANR	67020	IdentifierDecl	retcode = 0		67016	0					
ANR	67021	IdentifierDeclType	int		67016	0					
ANR	67022	Identifier	retcode		67016	1					
ANR	67023	AssignmentExpression	retcode = 0		67016	2		=			
ANR	67024	Identifier	retcode		67016	0					
ANR	67025	PrimaryExpression	0		67016	1					
ANR	67026	ExpressionStatement	assert ( dirp != NULL )	517:4:18246:18266	67016	1	True				
ANR	67027	CallExpression	assert ( dirp != NULL )		67016	0					
ANR	67028	Callee	assert		67016	0					
ANR	67029	Identifier	assert		67016	0					
ANR	67030	ArgumentList	dirp != NULL		67016	1					
ANR	67031	Argument	dirp != NULL		67016	0					
ANR	67032	EqualityExpression	dirp != NULL		67016	0		!=			
ANR	67033	Identifier	dirp		67016	0					
ANR	67034	Identifier	NULL		67016	1					
ANR	67035	IfStatement	if ( dirp == NULL )		67016	2					
ANR	67036	Condition	dirp == NULL	518:8:18276:18287	67016	0	True				
ANR	67037	EqualityExpression	dirp == NULL		67016	0		==			
ANR	67038	Identifier	dirp		67016	0					
ANR	67039	Identifier	NULL		67016	1					
ANR	67040	CompoundStatement		6:22:127:127	67016	1					
ANR	67041	ExpressionStatement	errno = EBADF	519:8:18300:18313	67016	0	True				
ANR	67042	AssignmentExpression	errno = EBADF		67016	0		=			
ANR	67043	Identifier	errno		67016	0					
ANR	67044	Identifier	EBADF		67016	1					
ANR	67045	ReturnStatement	return - 1 ;	520:8:18323:18332	67016	1	True				
ANR	67046	UnaryOperationExpression	- 1		67016	0					
ANR	67047	UnaryOperator	-		67016	0					
ANR	67048	PrimaryExpression	1		67016	1					
ANR	67049	IfStatement	if ( dirp -> dirname != NULL )		67016	3					
ANR	67050	Condition	dirp -> dirname != NULL	524:8:18398:18418	67016	0	True				
ANR	67051	EqualityExpression	dirp -> dirname != NULL		67016	0		!=			
ANR	67052	PtrMemberAccess	dirp -> dirname		67016	0					
ANR	67053	Identifier	dirp		67016	0					
ANR	67054	Identifier	dirname		67016	1					
ANR	67055	Identifier	NULL		67016	1					
ANR	67056	CompoundStatement		12:31:258:258	67016	1					
ANR	67057	ExpressionStatement	free ( dirp -> dirname )	525:8:18431:18450	67016	0	True				
ANR	67058	CallExpression	free ( dirp -> dirname )		67016	0					
ANR	67059	Callee	free		67016	0					
ANR	67060	Identifier	free		67016	0					
ANR	67061	ArgumentList	dirp -> dirname		67016	1					
ANR	67062	Argument	dirp -> dirname		67016	0					
ANR	67063	PtrMemberAccess	dirp -> dirname		67016	0					
ANR	67064	Identifier	dirp		67016	0					
ANR	67065	Identifier	dirname		67016	1					
ANR	67066	IfStatement	if ( dirp -> search_handle != INVALID_HANDLE_VALUE )		67016	4					
ANR	67067	Condition	dirp -> search_handle != INVALID_HANDLE_VALUE	529:8:18503:18545	67016	0	True				
ANR	67068	EqualityExpression	dirp -> search_handle != INVALID_HANDLE_VALUE		67016	0		!=			
ANR	67069	PtrMemberAccess	dirp -> search_handle		67016	0					
ANR	67070	Identifier	dirp		67016	0					
ANR	67071	Identifier	search_handle		67016	1					
ANR	67072	Identifier	INVALID_HANDLE_VALUE		67016	1					
ANR	67073	CompoundStatement		17:53:385:385	67016	1					
ANR	67074	IfStatement	if ( FindClose ( dirp -> search_handle ) == FALSE )		67016	0					
ANR	67075	Condition	FindClose ( dirp -> search_handle ) == FALSE	530:12:18562:18600	67016	0	True				
ANR	67076	EqualityExpression	FindClose ( dirp -> search_handle ) == FALSE		67016	0		==			
ANR	67077	CallExpression	FindClose ( dirp -> search_handle )		67016	0					
ANR	67078	Callee	FindClose		67016	0					
ANR	67079	Identifier	FindClose		67016	0					
ANR	67080	ArgumentList	dirp -> search_handle		67016	1					
ANR	67081	Argument	dirp -> search_handle		67016	0					
ANR	67082	PtrMemberAccess	dirp -> search_handle		67016	0					
ANR	67083	Identifier	dirp		67016	0					
ANR	67084	Identifier	search_handle		67016	1					
ANR	67085	Identifier	FALSE		67016	1					
ANR	67086	CompoundStatement		18:53:440:440	67016	1					
ANR	67087	ExpressionStatement	retcode = - 1	532:12:18649:18661	67016	0	True				
ANR	67088	AssignmentExpression	retcode = - 1		67016	0		=			
ANR	67089	Identifier	retcode		67016	0					
ANR	67090	UnaryOperationExpression	- 1		67016	1					
ANR	67091	UnaryOperator	-		67016	0					
ANR	67092	PrimaryExpression	1		67016	1					
ANR	67093	ExpressionStatement	errno = EBADF	533:12:18675:18688	67016	1	True				
ANR	67094	AssignmentExpression	errno = EBADF		67016	0		=			
ANR	67095	Identifier	errno		67016	0					
ANR	67096	Identifier	EBADF		67016	1					
ANR	67097	ExpressionStatement	"memset ( dirp , 0 , sizeof ( * dirp ) )"	539:4:18792:18822	67016	5	True				
ANR	67098	CallExpression	"memset ( dirp , 0 , sizeof ( * dirp ) )"		67016	0					
ANR	67099	Callee	memset		67016	0					
ANR	67100	Identifier	memset		67016	0					
ANR	67101	ArgumentList	dirp		67016	1					
ANR	67102	Argument	dirp		67016	0					
ANR	67103	Identifier	dirp		67016	0					
ANR	67104	Argument	0		67016	1					
ANR	67105	PrimaryExpression	0		67016	0					
ANR	67106	Argument	sizeof ( * dirp )		67016	2					
ANR	67107	SizeofExpression	sizeof ( * dirp )		67016	0					
ANR	67108	Sizeof	sizeof		67016	0					
ANR	67109	UnaryOperationExpression	* dirp		67016	1					
ANR	67110	UnaryOperator	*		67016	0					
ANR	67111	Identifier	dirp		67016	1					
ANR	67112	Statement	if	540:2:18826:18827	67016	6	True				
ANR	67113	Statement	defined	540:5:18829:18835	67016	7	True				
ANR	67114	ExpressionStatement	( DIRENT_WIN32_INTERFACE ) dirp -> search_handle = INVALID_HANDLE_VALUE	540:12:18836:18907	67016	8	True				
ANR	67115	AssignmentExpression	( DIRENT_WIN32_INTERFACE ) dirp -> search_handle = INVALID_HANDLE_VALUE		67016	0		=			
ANR	67116	CastExpression	( DIRENT_WIN32_INTERFACE ) dirp -> search_handle		67016	0					
ANR	67117	CastTarget	DIRENT_WIN32_INTERFACE		67016	0					
ANR	67118	PtrMemberAccess	dirp -> search_handle		67016	1					
ANR	67119	Identifier	dirp		67016	0					
ANR	67120	Identifier	search_handle		67016	1					
ANR	67121	Identifier	INVALID_HANDLE_VALUE		67016	1					
ANR	67122	IdentifierDeclStatement	endif free ( dirp ) ;	542:2:18911:18932	67016	9	True				
ANR	67123	IdentifierDecl	free ( dirp )		67016	0					
ANR	67124	IdentifierDeclType	endif		67016	0					
ANR	67125	Identifier	free		67016	1					
ANR	67126	Identifier	dirp		67016	2					
ANR	67127	ReturnStatement	return retcode ;	545:4:18938:18952	67016	10	True				
ANR	67128	Identifier	retcode		67016	0					
ANR	67129	ReturnType	static int		67016	1					
ANR	67130	Identifier	closedir		67016	2					
ANR	67131	ParameterList	DIR * dirp		67016	3					
ANR	67132	Parameter	DIR * dirp	512:9:18151:18159	67016	0	True				
ANR	67133	ParameterType	DIR *		67016	0					
ANR	67134	Identifier	dirp		67016	1					
ANR	67135	CFGEntryNode	ENTRY		67016		True				
ANR	67136	CFGExitNode	EXIT		67016		True				
ANR	67137	Symbol	errno		67016						
ANR	67138	Symbol	NULL		67016						
ANR	67139	Symbol	* dirp		67016						
ANR	67140	Symbol	FindClose		67016						
ANR	67141	Symbol	dirp -> dirname		67016						
ANR	67142	Symbol	FALSE		67016						
ANR	67143	Symbol	dirp		67016						
ANR	67144	Symbol	dirp -> search_handle		67016						
ANR	67145	Symbol	free		67016						
ANR	67146	Symbol	EBADF		67016						
ANR	67147	Symbol	INVALID_HANDLE_VALUE		67016						
ANR	67148	Symbol	retcode		67016						
ANR	67149	Function	rewinddir	571:0:19970:20683							
ANR	67150	FunctionDef	rewinddir (DIR * dirp)		67149	0					
ANR	67151	CompoundStatement		573:0:20003:20683	67149	0					
ANR	67152	ExpressionStatement	assert ( dirp != NULL )	575:4:20048:20068	67149	0	True				
ANR	67153	CallExpression	assert ( dirp != NULL )		67149	0					
ANR	67154	Callee	assert		67149	0					
ANR	67155	Identifier	assert		67149	0					
ANR	67156	ArgumentList	dirp != NULL		67149	1					
ANR	67157	Argument	dirp != NULL		67149	0					
ANR	67158	EqualityExpression	dirp != NULL		67149	0		!=			
ANR	67159	Identifier	dirp		67149	0					
ANR	67160	Identifier	NULL		67149	1					
ANR	67161	IfStatement	if ( dirp == NULL )		67149	1					
ANR	67162	Condition	dirp == NULL	576:8:20078:20089	67149	0	True				
ANR	67163	EqualityExpression	dirp == NULL		67149	0		==			
ANR	67164	Identifier	dirp		67149	0					
ANR	67165	Identifier	NULL		67149	1					
ANR	67166	CompoundStatement		4:22:88:88	67149	1					
ANR	67167	ExpressionStatement	errno = EBADF	577:8:20102:20115	67149	0	True				
ANR	67168	AssignmentExpression	errno = EBADF		67149	0		=			
ANR	67169	Identifier	errno		67149	0					
ANR	67170	Identifier	EBADF		67149	1					
ANR	67171	ReturnStatement	return ;	578:8:20125:20131	67149	1	True				
ANR	67172	ExpressionStatement	assert ( dirp -> dirname != NULL )	580:4:20143:20172	67149	2	True				
ANR	67173	CallExpression	assert ( dirp -> dirname != NULL )		67149	0					
ANR	67174	Callee	assert		67149	0					
ANR	67175	Identifier	assert		67149	0					
ANR	67176	ArgumentList	dirp -> dirname != NULL		67149	1					
ANR	67177	Argument	dirp -> dirname != NULL		67149	0					
ANR	67178	EqualityExpression	dirp -> dirname != NULL		67149	0		!=			
ANR	67179	PtrMemberAccess	dirp -> dirname		67149	0					
ANR	67180	Identifier	dirp		67149	0					
ANR	67181	Identifier	dirname		67149	1					
ANR	67182	Identifier	NULL		67149	1					
ANR	67183	IfStatement	if ( dirp -> search_handle != INVALID_HANDLE_VALUE )		67149	3					
ANR	67184	Condition	dirp -> search_handle != INVALID_HANDLE_VALUE	584:8:20251:20293	67149	0	True				
ANR	67185	EqualityExpression	dirp -> search_handle != INVALID_HANDLE_VALUE		67149	0		!=			
ANR	67186	PtrMemberAccess	dirp -> search_handle		67149	0					
ANR	67187	Identifier	dirp		67149	0					
ANR	67188	Identifier	search_handle		67149	1					
ANR	67189	Identifier	INVALID_HANDLE_VALUE		67149	1					
ANR	67190	CompoundStatement		12:53:292:292	67149	1					
ANR	67191	IfStatement	if ( FindClose ( dirp -> search_handle ) == FALSE )		67149	0					
ANR	67192	Condition	FindClose ( dirp -> search_handle ) == FALSE	585:12:20310:20348	67149	0	True				
ANR	67193	EqualityExpression	FindClose ( dirp -> search_handle ) == FALSE		67149	0		==			
ANR	67194	CallExpression	FindClose ( dirp -> search_handle )		67149	0					
ANR	67195	Callee	FindClose		67149	0					
ANR	67196	Identifier	FindClose		67149	0					
ANR	67197	ArgumentList	dirp -> search_handle		67149	1					
ANR	67198	Argument	dirp -> search_handle		67149	0					
ANR	67199	PtrMemberAccess	dirp -> search_handle		67149	0					
ANR	67200	Identifier	dirp		67149	0					
ANR	67201	Identifier	search_handle		67149	1					
ANR	67202	Identifier	FALSE		67149	1					
ANR	67203	CompoundStatement		13:53:347:347	67149	1					
ANR	67204	ExpressionStatement	errno = EBADF	587:12:20397:20410	67149	0	True				
ANR	67205	AssignmentExpression	errno = EBADF		67149	0		=			
ANR	67206	Identifier	errno		67149	0					
ANR	67207	Identifier	EBADF		67149	1					
ANR	67208	IfStatement	if ( _initdir ( dirp ) == 0 )		67149	4					
ANR	67209	Condition	_initdir ( dirp ) == 0	593:8:20478:20496	67149	0	True				
ANR	67210	EqualityExpression	_initdir ( dirp ) == 0		67149	0		==			
ANR	67211	CallExpression	_initdir ( dirp )		67149	0					
ANR	67212	Callee	_initdir		67149	0					
ANR	67213	Identifier	_initdir		67149	0					
ANR	67214	ArgumentList	dirp		67149	1					
ANR	67215	Argument	dirp		67149	0					
ANR	67216	Identifier	dirp		67149	0					
ANR	67217	PrimaryExpression	0		67149	1					
ANR	67218	CompoundStatement		21:29:495:495	67149	1					
ANR	67219	ExpressionStatement		596:17:20675:20675	67149	0	True				
ANR	67220	ReturnType	static void		67149	1					
ANR	67221	Identifier	rewinddir		67149	2					
ANR	67222	ParameterList	DIR * dirp		67149	3					
ANR	67223	Parameter	DIR * dirp	572:10:19992:20000	67149	0	True				
ANR	67224	ParameterType	DIR *		67149	0					
ANR	67225	Identifier	dirp		67149	1					
ANR	67226	CFGEntryNode	ENTRY		67149		True				
ANR	67227	CFGExitNode	EXIT		67149		True				
ANR	67228	Symbol	errno		67149						
ANR	67229	Symbol	NULL		67149						
ANR	67230	Symbol	* dirp		67149						
ANR	67231	Symbol	FindClose		67149						
ANR	67232	Symbol	dirp -> dirname		67149						
ANR	67233	Symbol	FALSE		67149						
ANR	67234	Symbol	dirp		67149						
ANR	67235	Symbol	dirp -> search_handle		67149						
ANR	67236	Symbol	EBADF		67149						
ANR	67237	Symbol	INVALID_HANDLE_VALUE		67149						
ANR	67238	Symbol	_initdir		67149						
ANR	67239	Function	_initdir	605:0:20824:21881							
ANR	67240	FunctionDef	_initdir (DIR * dirp)		67239	0					
ANR	67241	CompoundStatement		607:0:20855:21881	67239	0					
ANR	67242	ExpressionStatement	assert ( dirp != NULL )	608:4:20861:20881	67239	0	True				
ANR	67243	CallExpression	assert ( dirp != NULL )		67239	0					
ANR	67244	Callee	assert		67239	0					
ANR	67245	Identifier	assert		67239	0					
ANR	67246	ArgumentList	dirp != NULL		67239	1					
ANR	67247	Argument	dirp != NULL		67239	0					
ANR	67248	EqualityExpression	dirp != NULL		67239	0		!=			
ANR	67249	Identifier	dirp		67239	0					
ANR	67250	Identifier	NULL		67239	1					
ANR	67251	ExpressionStatement	assert ( dirp -> dirname != NULL )	609:4:20887:20916	67239	1	True				
ANR	67252	CallExpression	assert ( dirp -> dirname != NULL )		67239	0					
ANR	67253	Callee	assert		67239	0					
ANR	67254	Identifier	assert		67239	0					
ANR	67255	ArgumentList	dirp -> dirname != NULL		67239	1					
ANR	67256	Argument	dirp -> dirname != NULL		67239	0					
ANR	67257	EqualityExpression	dirp -> dirname != NULL		67239	0		!=			
ANR	67258	PtrMemberAccess	dirp -> dirname		67239	0					
ANR	67259	Identifier	dirp		67239	0					
ANR	67260	Identifier	dirname		67239	1					
ANR	67261	Identifier	NULL		67239	1					
ANR	67262	ExpressionStatement	dirp -> dirent_filled = 0	610:4:20922:20945	67239	2	True				
ANR	67263	AssignmentExpression	dirp -> dirent_filled = 0		67239	0		=			
ANR	67264	PtrMemberAccess	dirp -> dirent_filled		67239	0					
ANR	67265	Identifier	dirp		67239	0					
ANR	67266	Identifier	dirent_filled		67239	1					
ANR	67267	PrimaryExpression	0		67239	1					
ANR	67268	Statement	if	612:2:20950:20951	67239	3	True				
ANR	67269	Statement	defined	612:5:20953:20959	67239	4	True				
ANR	67270	ExpressionStatement	"( DIRENT_WIN32_INTERFACE ) dirp -> search_handle = FindFirstFile ( dirp -> dirname , & dirp -> current . data )"	612:12:20960:21106	67239	5	True				
ANR	67271	AssignmentExpression	"( DIRENT_WIN32_INTERFACE ) dirp -> search_handle = FindFirstFile ( dirp -> dirname , & dirp -> current . data )"		67239	0		=			
ANR	67272	CastExpression	( DIRENT_WIN32_INTERFACE ) dirp -> search_handle		67239	0					
ANR	67273	CastTarget	DIRENT_WIN32_INTERFACE		67239	0					
ANR	67274	PtrMemberAccess	dirp -> search_handle		67239	1					
ANR	67275	Identifier	dirp		67239	0					
ANR	67276	Identifier	search_handle		67239	1					
ANR	67277	CallExpression	"FindFirstFile ( dirp -> dirname , & dirp -> current . data )"		67239	1					
ANR	67278	Callee	FindFirstFile		67239	0					
ANR	67279	Identifier	FindFirstFile		67239	0					
ANR	67280	ArgumentList	dirp -> dirname		67239	1					
ANR	67281	Argument	dirp -> dirname		67239	0					
ANR	67282	PtrMemberAccess	dirp -> dirname		67239	0					
ANR	67283	Identifier	dirp		67239	0					
ANR	67284	Identifier	dirname		67239	1					
ANR	67285	Argument	& dirp -> current . data		67239	1					
ANR	67286	UnaryOperationExpression	& dirp -> current . data		67239	0					
ANR	67287	UnaryOperator	&		67239	0					
ANR	67288	MemberAccess	dirp -> current . data		67239	1					
ANR	67289	PtrMemberAccess	dirp -> current		67239	0					
ANR	67290	Identifier	dirp		67239	0					
ANR	67291	Identifier	current		67239	1					
ANR	67292	Identifier	data		67239	1					
ANR	67293	IfStatement	if ( dirp -> search_handle == INVALID_HANDLE_VALUE )		67239	6					
ANR	67294	Condition	dirp -> search_handle == INVALID_HANDLE_VALUE	615:8:21116:21158	67239	0	True				
ANR	67295	EqualityExpression	dirp -> search_handle == INVALID_HANDLE_VALUE		67239	0		==			
ANR	67296	PtrMemberAccess	dirp -> search_handle		67239	0					
ANR	67297	Identifier	dirp		67239	0					
ANR	67298	Identifier	search_handle		67239	1					
ANR	67299	Identifier	INVALID_HANDLE_VALUE		67239	1					
ANR	67300	CompoundStatement		9:53:305:305	67239	1					
ANR	67301	ExpressionStatement	errno = ENOENT	619:8:21366:21380	67239	0	True				
ANR	67302	AssignmentExpression	errno = ENOENT		67239	0		=			
ANR	67303	Identifier	errno		67239	0					
ANR	67304	Identifier	ENOENT		67239	1					
ANR	67305	ReturnStatement	return 0 ;	620:8:21390:21398	67239	1	True				
ANR	67306	PrimaryExpression	0		67239	0					
ANR	67307	Statement	elif	623:2:21409:21412	67239	7	True				
ANR	67308	Statement	defined	623:7:21414:21420	67239	8	True				
ANR	67309	Statement	(	623:14:21421:21421	67239	9	True				
ANR	67310	Statement	DIRENT_MSDOS_INTERFACE	623:15:21422:21443	67239	10	True				
ANR	67311	Statement	)	623:37:21444:21444	67239	11	True				
ANR	67312	IfStatement	"if ( _dos_findfirst ( dirp -> dirname , _A_SUBDIR | _A_RDONLY | _A_ARCH | _A_SYSTEM | _A_HIDDEN , & dirp -> current . data ) != 0 )"		67239	12					
ANR	67313	Condition	"_dos_findfirst ( dirp -> dirname , _A_SUBDIR | _A_RDONLY | _A_ARCH | _A_SYSTEM | _A_HIDDEN , & dirp -> current . data ) != 0"	624:8:21454:21611	67239	0	True				
ANR	67314	EqualityExpression	"_dos_findfirst ( dirp -> dirname , _A_SUBDIR | _A_RDONLY | _A_ARCH | _A_SYSTEM | _A_HIDDEN , & dirp -> current . data ) != 0"		67239	0		!=			
ANR	67315	CallExpression	"_dos_findfirst ( dirp -> dirname , _A_SUBDIR | _A_RDONLY | _A_ARCH | _A_SYSTEM | _A_HIDDEN , & dirp -> current . data )"		67239	0					
ANR	67316	Callee	_dos_findfirst		67239	0					
ANR	67317	Identifier	_dos_findfirst		67239	0					
ANR	67318	ArgumentList	dirp -> dirname		67239	1					
ANR	67319	Argument	dirp -> dirname		67239	0					
ANR	67320	PtrMemberAccess	dirp -> dirname		67239	0					
ANR	67321	Identifier	dirp		67239	0					
ANR	67322	Identifier	dirname		67239	1					
ANR	67323	Argument	_A_SUBDIR | _A_RDONLY | _A_ARCH | _A_SYSTEM | _A_HIDDEN		67239	1					
ANR	67324	InclusiveOrExpression	_A_SUBDIR | _A_RDONLY | _A_ARCH | _A_SYSTEM | _A_HIDDEN		67239	0		|			
ANR	67325	Identifier	_A_SUBDIR		67239	0					
ANR	67326	InclusiveOrExpression	_A_RDONLY | _A_ARCH | _A_SYSTEM | _A_HIDDEN		67239	1		|			
ANR	67327	Identifier	_A_RDONLY		67239	0					
ANR	67328	InclusiveOrExpression	_A_ARCH | _A_SYSTEM | _A_HIDDEN		67239	1		|			
ANR	67329	Identifier	_A_ARCH		67239	0					
ANR	67330	InclusiveOrExpression	_A_SYSTEM | _A_HIDDEN		67239	1		|			
ANR	67331	Identifier	_A_SYSTEM		67239	0					
ANR	67332	Identifier	_A_HIDDEN		67239	1					
ANR	67333	Argument	& dirp -> current . data		67239	2					
ANR	67334	UnaryOperationExpression	& dirp -> current . data		67239	0					
ANR	67335	UnaryOperator	&		67239	0					
ANR	67336	MemberAccess	dirp -> current . data		67239	1					
ANR	67337	PtrMemberAccess	dirp -> current		67239	0					
ANR	67338	Identifier	dirp		67239	0					
ANR	67339	Identifier	current		67239	1					
ANR	67340	Identifier	data		67239	1					
ANR	67341	PrimaryExpression	0		67239	1					
ANR	67342	CompoundStatement		20:50:758:758	67239	1					
ANR	67343	ReturnStatement	return 0 ;	629:8:21744:21752	67239	0	True				
ANR	67344	PrimaryExpression	0		67239	0					
ANR	67345	IdentifierDeclStatement	endif _setdirname ( dirp ) ;	631:2:21762:21836	67239	13	True				
ANR	67346	IdentifierDecl	_setdirname ( dirp )		67239	0					
ANR	67347	IdentifierDeclType	endif		67239	0					
ANR	67348	Identifier	_setdirname		67239	1					
ANR	67349	Identifier	dirp		67239	2					
ANR	67350	ExpressionStatement	dirp -> dirent_filled = 1	635:4:21842:21865	67239	14	True				
ANR	67351	AssignmentExpression	dirp -> dirent_filled = 1		67239	0		=			
ANR	67352	PtrMemberAccess	dirp -> dirent_filled		67239	0					
ANR	67353	Identifier	dirp		67239	0					
ANR	67354	Identifier	dirent_filled		67239	1					
ANR	67355	PrimaryExpression	1		67239	1					
ANR	67356	ReturnStatement	return 1 ;	636:4:21871:21879	67239	15	True				
ANR	67357	PrimaryExpression	1		67239	0					
ANR	67358	ReturnType	static int		67239	1					
ANR	67359	Identifier	_initdir		67239	2					
ANR	67360	ParameterList	DIR * dirp		67239	3					
ANR	67361	Parameter	DIR * dirp	606:9:20844:20852	67239	0	True				
ANR	67362	ParameterType	DIR *		67239	0					
ANR	67363	Identifier	dirp		67239	1					
ANR	67364	CFGEntryNode	ENTRY		67239		True				
ANR	67365	CFGExitNode	EXIT		67239		True				
ANR	67366	Symbol	_dos_findfirst		67239						
ANR	67367	Symbol	errno		67239						
ANR	67368	Symbol	NULL		67239						
ANR	67369	Symbol	* dirp		67239						
ANR	67370	Symbol	dirp -> dirent_filled		67239						
ANR	67371	Symbol	_A_HIDDEN		67239						
ANR	67372	Symbol	dirp -> current		67239						
ANR	67373	Symbol	_A_ARCH		67239						
ANR	67374	Symbol	_A_RDONLY		67239						
ANR	67375	Symbol	dirp -> dirname		67239						
ANR	67376	Symbol	ENOENT		67239						
ANR	67377	Symbol	dirp		67239						
ANR	67378	Symbol	FindFirstFile		67239						
ANR	67379	Symbol	dirp -> search_handle		67239						
ANR	67380	Symbol	INVALID_HANDLE_VALUE		67239						
ANR	67381	Symbol	_setdirname		67239						
ANR	67382	Symbol	& dirp -> current . data		67239						
ANR	67383	Symbol	& dirp -> current		67239						
ANR	67384	Symbol	_A_SUBDIR		67239						
ANR	67385	Symbol	_A_SYSTEM		67239						
ANR	67386	Function	_getdirname	643:0:21964:22192							
ANR	67387	FunctionDef	_getdirname (const struct dirent * dp)		67386	0					
ANR	67388	CompoundStatement		645:0:22021:22192	67386	0					
ANR	67389	ReturnStatement	return dp -> data . cFileName ;	647:4:22063:22088	67386	0	True				
ANR	67390	MemberAccess	dp -> data . cFileName		67386	0					
ANR	67391	PtrMemberAccess	dp -> data		67386	0					
ANR	67392	Identifier	dp		67386	0					
ANR	67393	Identifier	data		67386	1					
ANR	67394	Identifier	cFileName		67386	1					
ANR	67395	ReturnType	static const char *		67386	1					
ANR	67396	Identifier	_getdirname		67386	2					
ANR	67397	ParameterList	const struct dirent * dp		67386	3					
ANR	67398	Parameter	const struct dirent * dp	644:12:21996:22018	67386	0	True				
ANR	67399	ParameterType	const struct dirent *		67386	0					
ANR	67400	Identifier	dp		67386	1					
ANR	67401	CFGEntryNode	ENTRY		67386		True				
ANR	67402	CFGExitNode	EXIT		67386		True				
ANR	67403	Symbol	* dp		67386						
ANR	67404	Symbol	dp -> data . cFileName		67386						
ANR	67405	Symbol	dp -> data		67386						
ANR	67406	Symbol	dp		67386						
ANR	67407	Function	_setdirname	661:0:22281:22603							
ANR	67408	FunctionDef	_setdirname (struct DIR * dirp)		67407	0					
ANR	67409	CompoundStatement		663:0:22323:22603	67407	0					
ANR	67410	ExpressionStatement	assert ( strlen ( _getdirname ( & dirp -> current ) ) <= NAME_MAX )	665:4:22376:22431	67407	0	True				
ANR	67411	CallExpression	assert ( strlen ( _getdirname ( & dirp -> current ) ) <= NAME_MAX )		67407	0					
ANR	67412	Callee	assert		67407	0					
ANR	67413	Identifier	assert		67407	0					
ANR	67414	ArgumentList	strlen ( _getdirname ( & dirp -> current ) ) <= NAME_MAX		67407	1					
ANR	67415	Argument	strlen ( _getdirname ( & dirp -> current ) ) <= NAME_MAX		67407	0					
ANR	67416	RelationalExpression	strlen ( _getdirname ( & dirp -> current ) ) <= NAME_MAX		67407	0		<=			
ANR	67417	CallExpression	strlen ( _getdirname ( & dirp -> current ) )		67407	0					
ANR	67418	Callee	strlen		67407	0					
ANR	67419	Identifier	strlen		67407	0					
ANR	67420	ArgumentList	_getdirname ( & dirp -> current )		67407	1					
ANR	67421	Argument	_getdirname ( & dirp -> current )		67407	0					
ANR	67422	CallExpression	_getdirname ( & dirp -> current )		67407	0					
ANR	67423	Callee	_getdirname		67407	0					
ANR	67424	Identifier	_getdirname		67407	0					
ANR	67425	ArgumentList	& dirp -> current		67407	1					
ANR	67426	Argument	& dirp -> current		67407	0					
ANR	67427	UnaryOperationExpression	& dirp -> current		67407	0					
ANR	67428	UnaryOperator	&		67407	0					
ANR	67429	PtrMemberAccess	dirp -> current		67407	1					
ANR	67430	Identifier	dirp		67407	0					
ANR	67431	Identifier	current		67407	1					
ANR	67432	Identifier	NAME_MAX		67407	1					
ANR	67433	ExpressionStatement	"strncpy ( dirp -> current . d_name , _getdirname ( & dirp -> current ) , NAME_MAX )"	667:4:22438:22530	67407	1	True				
ANR	67434	CallExpression	"strncpy ( dirp -> current . d_name , _getdirname ( & dirp -> current ) , NAME_MAX )"		67407	0					
ANR	67435	Callee	strncpy		67407	0					
ANR	67436	Identifier	strncpy		67407	0					
ANR	67437	ArgumentList	dirp -> current . d_name		67407	1					
ANR	67438	Argument	dirp -> current . d_name		67407	0					
ANR	67439	MemberAccess	dirp -> current . d_name		67407	0					
ANR	67440	PtrMemberAccess	dirp -> current		67407	0					
ANR	67441	Identifier	dirp		67407	0					
ANR	67442	Identifier	current		67407	1					
ANR	67443	Identifier	d_name		67407	1					
ANR	67444	Argument	_getdirname ( & dirp -> current )		67407	1					
ANR	67445	CallExpression	_getdirname ( & dirp -> current )		67407	0					
ANR	67446	Callee	_getdirname		67407	0					
ANR	67447	Identifier	_getdirname		67407	0					
ANR	67448	ArgumentList	& dirp -> current		67407	1					
ANR	67449	Argument	& dirp -> current		67407	0					
ANR	67450	UnaryOperationExpression	& dirp -> current		67407	0					
ANR	67451	UnaryOperator	&		67407	0					
ANR	67452	PtrMemberAccess	dirp -> current		67407	1					
ANR	67453	Identifier	dirp		67407	0					
ANR	67454	Identifier	current		67407	1					
ANR	67455	Argument	NAME_MAX		67407	2					
ANR	67456	Identifier	NAME_MAX		67407	0					
ANR	67457	ExpressionStatement	dirp -> current . d_name [ NAME_MAX ] = '\\0'	670:4:22536:22573	67407	2	True				
ANR	67458	AssignmentExpression	dirp -> current . d_name [ NAME_MAX ] = '\\0'		67407	0		=			
ANR	67459	ArrayIndexing	dirp -> current . d_name [ NAME_MAX ]		67407	0					
ANR	67460	MemberAccess	dirp -> current . d_name		67407	0					
ANR	67461	PtrMemberAccess	dirp -> current		67407	0					
ANR	67462	Identifier	dirp		67407	0					
ANR	67463	Identifier	current		67407	1					
ANR	67464	Identifier	d_name		67407	1					
ANR	67465	Identifier	NAME_MAX		67407	1					
ANR	67466	PrimaryExpression	'\\0'		67407	1					
ANR	67467	ReturnType	static void		67407	1					
ANR	67468	Identifier	_setdirname		67407	2					
ANR	67469	ParameterList	struct DIR * dirp		67407	3					
ANR	67470	Parameter	struct DIR * dirp	662:12:22305:22320	67407	0	True				
ANR	67471	ParameterType	struct DIR *		67407	0					
ANR	67472	Identifier	dirp		67407	1					
ANR	67473	CFGEntryNode	ENTRY		67407		True				
ANR	67474	CFGExitNode	EXIT		67407		True				
ANR	67475	Symbol	strlen		67407						
ANR	67476	Symbol	* dirp		67407						
ANR	67477	Symbol	dirp -> current		67407						
ANR	67478	Symbol	& dirp -> current		67407						
ANR	67479	Symbol	_getdirname		67407						
ANR	67480	Symbol	dirp -> current . d_name		67407						
ANR	67481	Symbol	* * dirp		67407						
ANR	67482	Symbol	dirp		67407						
ANR	67483	Symbol	* dirp -> current		67407						
ANR	67484	Symbol	NAME_MAX		67407						
ANR	67485	Symbol	* dirp -> current . d_name		67407						
ANR	67486	Symbol	* NAME_MAX		67407						
