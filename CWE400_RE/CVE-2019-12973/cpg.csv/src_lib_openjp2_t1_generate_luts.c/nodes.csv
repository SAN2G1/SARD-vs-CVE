command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	321318	File	data/converged/CVE-2019-12973_openjpeg/src_lib_openjp2_t1_generate_luts.c								
ANR	321319	Function	t1_init_ctxno_zc	42:0:2095:3812							
ANR	321320	FunctionDef	"t1_init_ctxno_zc (OPJ_UINT32 f , OPJ_UINT32 orient)"		321319	0					
ANR	321321	CompoundStatement		43:0:2156:3812	321319	0					
ANR	321322	IdentifierDeclStatement	"int h , v , d , n , t , hv ;"	44:4:2162:2183	321319	0	True				
ANR	321323	IdentifierDecl	h		321319	0					
ANR	321324	IdentifierDeclType	int		321319	0					
ANR	321325	Identifier	h		321319	1					
ANR	321326	IdentifierDecl	v		321319	1					
ANR	321327	IdentifierDeclType	int		321319	0					
ANR	321328	Identifier	v		321319	1					
ANR	321329	IdentifierDecl	d		321319	2					
ANR	321330	IdentifierDeclType	int		321319	0					
ANR	321331	Identifier	d		321319	1					
ANR	321332	IdentifierDecl	n		321319	3					
ANR	321333	IdentifierDeclType	int		321319	0					
ANR	321334	Identifier	n		321319	1					
ANR	321335	IdentifierDecl	t		321319	4					
ANR	321336	IdentifierDeclType	int		321319	0					
ANR	321337	Identifier	t		321319	1					
ANR	321338	IdentifierDecl	hv		321319	5					
ANR	321339	IdentifierDeclType	int		321319	0					
ANR	321340	Identifier	hv		321319	1					
ANR	321341	ExpressionStatement	n = 0	45:4:2189:2194	321319	1	True				
ANR	321342	AssignmentExpression	n = 0		321319	0		=			
ANR	321343	Identifier	n		321319	0					
ANR	321344	PrimaryExpression	0		321319	1					
ANR	321345	ExpressionStatement	h = ( ( f & T1_SIGMA_3 ) != 0 ) + ( ( f & T1_SIGMA_5 ) != 0 )	46:4:2200:2253	321319	2	True				
ANR	321346	AssignmentExpression	h = ( ( f & T1_SIGMA_3 ) != 0 ) + ( ( f & T1_SIGMA_5 ) != 0 )		321319	0		=			
ANR	321347	Identifier	h		321319	0					
ANR	321348	AdditiveExpression	( ( f & T1_SIGMA_3 ) != 0 ) + ( ( f & T1_SIGMA_5 ) != 0 )		321319	1		+			
ANR	321349	EqualityExpression	( f & T1_SIGMA_3 ) != 0		321319	0		!=			
ANR	321350	BitAndExpression	f & T1_SIGMA_3		321319	0		&			
ANR	321351	Identifier	f		321319	0					
ANR	321352	Identifier	T1_SIGMA_3		321319	1					
ANR	321353	PrimaryExpression	0		321319	1					
ANR	321354	EqualityExpression	( f & T1_SIGMA_5 ) != 0		321319	1		!=			
ANR	321355	BitAndExpression	f & T1_SIGMA_5		321319	0		&			
ANR	321356	Identifier	f		321319	0					
ANR	321357	Identifier	T1_SIGMA_5		321319	1					
ANR	321358	PrimaryExpression	0		321319	1					
ANR	321359	ExpressionStatement	v = ( ( f & T1_SIGMA_1 ) != 0 ) + ( ( f & T1_SIGMA_7 ) != 0 )	47:4:2259:2312	321319	3	True				
ANR	321360	AssignmentExpression	v = ( ( f & T1_SIGMA_1 ) != 0 ) + ( ( f & T1_SIGMA_7 ) != 0 )		321319	0		=			
ANR	321361	Identifier	v		321319	0					
ANR	321362	AdditiveExpression	( ( f & T1_SIGMA_1 ) != 0 ) + ( ( f & T1_SIGMA_7 ) != 0 )		321319	1		+			
ANR	321363	EqualityExpression	( f & T1_SIGMA_1 ) != 0		321319	0		!=			
ANR	321364	BitAndExpression	f & T1_SIGMA_1		321319	0		&			
ANR	321365	Identifier	f		321319	0					
ANR	321366	Identifier	T1_SIGMA_1		321319	1					
ANR	321367	PrimaryExpression	0		321319	1					
ANR	321368	EqualityExpression	( f & T1_SIGMA_7 ) != 0		321319	1		!=			
ANR	321369	BitAndExpression	f & T1_SIGMA_7		321319	0		&			
ANR	321370	Identifier	f		321319	0					
ANR	321371	Identifier	T1_SIGMA_7		321319	1					
ANR	321372	PrimaryExpression	0		321319	1					
ANR	321373	ExpressionStatement	d = ( ( f & T1_SIGMA_0 ) != 0 ) + ( ( f & T1_SIGMA_2 ) != 0 ) + ( ( f & T1_SIGMA_8 ) != 0 ) + ( ( f & T1_SIGMA_6 ) != 0 )	48:4:2318:2440	321319	4	True				
ANR	321374	AssignmentExpression	d = ( ( f & T1_SIGMA_0 ) != 0 ) + ( ( f & T1_SIGMA_2 ) != 0 ) + ( ( f & T1_SIGMA_8 ) != 0 ) + ( ( f & T1_SIGMA_6 ) != 0 )		321319	0		=			
ANR	321375	Identifier	d		321319	0					
ANR	321376	AdditiveExpression	( ( f & T1_SIGMA_0 ) != 0 ) + ( ( f & T1_SIGMA_2 ) != 0 ) + ( ( f & T1_SIGMA_8 ) != 0 ) + ( ( f & T1_SIGMA_6 ) != 0 )		321319	1		+			
ANR	321377	EqualityExpression	( f & T1_SIGMA_0 ) != 0		321319	0		!=			
ANR	321378	BitAndExpression	f & T1_SIGMA_0		321319	0		&			
ANR	321379	Identifier	f		321319	0					
ANR	321380	Identifier	T1_SIGMA_0		321319	1					
ANR	321381	PrimaryExpression	0		321319	1					
ANR	321382	AdditiveExpression	( ( f & T1_SIGMA_2 ) != 0 ) + ( ( f & T1_SIGMA_8 ) != 0 ) + ( ( f & T1_SIGMA_6 ) != 0 )		321319	1		+			
ANR	321383	EqualityExpression	( f & T1_SIGMA_2 ) != 0		321319	0		!=			
ANR	321384	BitAndExpression	f & T1_SIGMA_2		321319	0		&			
ANR	321385	Identifier	f		321319	0					
ANR	321386	Identifier	T1_SIGMA_2		321319	1					
ANR	321387	PrimaryExpression	0		321319	1					
ANR	321388	AdditiveExpression	( ( f & T1_SIGMA_8 ) != 0 ) + ( ( f & T1_SIGMA_6 ) != 0 )		321319	1		+			
ANR	321389	EqualityExpression	( f & T1_SIGMA_8 ) != 0		321319	0		!=			
ANR	321390	BitAndExpression	f & T1_SIGMA_8		321319	0		&			
ANR	321391	Identifier	f		321319	0					
ANR	321392	Identifier	T1_SIGMA_8		321319	1					
ANR	321393	PrimaryExpression	0		321319	1					
ANR	321394	EqualityExpression	( f & T1_SIGMA_6 ) != 0		321319	1		!=			
ANR	321395	BitAndExpression	f & T1_SIGMA_6		321319	0		&			
ANR	321396	Identifier	f		321319	0					
ANR	321397	Identifier	T1_SIGMA_6		321319	1					
ANR	321398	PrimaryExpression	0		321319	1					
ANR	321399	SwitchStatement	switch ( orient )		321319	5					
ANR	321400	Condition	orient	51:12:2455:2460	321319	0	True				
ANR	321401	Identifier	orient		321319	0					
ANR	321402	CompoundStatement		9:20:306:306	321319	1					
ANR	321403	Label	case 2 :	52:4:2469:2475	321319	0	True				
ANR	321404	ExpressionStatement	t = h	53:8:2485:2490	321319	1	True				
ANR	321405	AssignmentExpression	t = h		321319	0		=			
ANR	321406	Identifier	t		321319	0					
ANR	321407	Identifier	h		321319	1					
ANR	321408	ExpressionStatement	h = v	54:8:2500:2505	321319	2	True				
ANR	321409	AssignmentExpression	h = v		321319	0		=			
ANR	321410	Identifier	h		321319	0					
ANR	321411	Identifier	v		321319	1					
ANR	321412	ExpressionStatement	v = t	55:8:2515:2520	321319	3	True				
ANR	321413	AssignmentExpression	v = t		321319	0		=			
ANR	321414	Identifier	v		321319	0					
ANR	321415	Identifier	t		321319	1					
ANR	321416	Label	case 0 :	56:4:2526:2532	321319	4	True				
ANR	321417	Label	case 1 :	57:4:2538:2544	321319	5	True				
ANR	321418	IfStatement	if ( ! h )		321319	6					
ANR	321419	Condition	! h	58:12:2558:2559	321319	0	True				
ANR	321420	UnaryOperationExpression	! h		321319	0					
ANR	321421	UnaryOperator	!		321319	0					
ANR	321422	Identifier	h		321319	1					
ANR	321423	CompoundStatement		16:16:405:405	321319	1					
ANR	321424	IfStatement	if ( ! v )		321319	0					
ANR	321425	Condition	! v	59:16:2580:2581	321319	0	True				
ANR	321426	UnaryOperationExpression	! v		321319	0					
ANR	321427	UnaryOperator	!		321319	0					
ANR	321428	Identifier	v		321319	1					
ANR	321429	CompoundStatement		17:20:427:427	321319	1					
ANR	321430	IfStatement	if ( ! d )		321319	0					
ANR	321431	Condition	! d	60:20:2606:2607	321319	0	True				
ANR	321432	UnaryOperationExpression	! d		321319	0					
ANR	321433	UnaryOperator	!		321319	0					
ANR	321434	Identifier	d		321319	1					
ANR	321435	CompoundStatement		18:24:453:453	321319	1					
ANR	321436	ExpressionStatement	n = 0	61:20:2632:2637	321319	0	True				
ANR	321437	AssignmentExpression	n = 0		321319	0		=			
ANR	321438	Identifier	n		321319	0					
ANR	321439	PrimaryExpression	0		321319	1					
ANR	321440	ElseStatement	else		321319	0					
ANR	321441	IfStatement	if ( d == 1 )		321319	0					
ANR	321442	Condition	d == 1	62:27:2666:2671	321319	0	True				
ANR	321443	EqualityExpression	d == 1		321319	0		==			
ANR	321444	Identifier	d		321319	0					
ANR	321445	PrimaryExpression	1		321319	1					
ANR	321446	CompoundStatement		20:35:517:517	321319	1					
ANR	321447	ExpressionStatement	n = 1	63:20:2696:2701	321319	0	True				
ANR	321448	AssignmentExpression	n = 1		321319	0		=			
ANR	321449	Identifier	n		321319	0					
ANR	321450	PrimaryExpression	1		321319	1					
ANR	321451	ElseStatement	else		321319	0					
ANR	321452	CompoundStatement		22:23:569:569	321319	0					
ANR	321453	ExpressionStatement	n = 2	65:20:2748:2753	321319	0	True				
ANR	321454	AssignmentExpression	n = 2		321319	0		=			
ANR	321455	Identifier	n		321319	0					
ANR	321456	PrimaryExpression	2		321319	1					
ANR	321457	ElseStatement	else		321319	0					
ANR	321458	IfStatement	if ( v == 1 )		321319	0					
ANR	321459	Condition	v == 1	67:23:2796:2801	321319	0	True				
ANR	321460	EqualityExpression	v == 1		321319	0		==			
ANR	321461	Identifier	v		321319	0					
ANR	321462	PrimaryExpression	1		321319	1					
ANR	321463	CompoundStatement		25:31:647:647	321319	1					
ANR	321464	ExpressionStatement	n = 3	68:16:2822:2827	321319	0	True				
ANR	321465	AssignmentExpression	n = 3		321319	0		=			
ANR	321466	Identifier	n		321319	0					
ANR	321467	PrimaryExpression	3		321319	1					
ANR	321468	ElseStatement	else		321319	0					
ANR	321469	CompoundStatement		27:19:691:691	321319	0					
ANR	321470	ExpressionStatement	n = 4	70:16:2866:2871	321319	0	True				
ANR	321471	AssignmentExpression	n = 4		321319	0		=			
ANR	321472	Identifier	n		321319	0					
ANR	321473	PrimaryExpression	4		321319	1					
ANR	321474	ElseStatement	else		321319	0					
ANR	321475	IfStatement	if ( h == 1 )		321319	0					
ANR	321476	Condition	h == 1	72:19:2906:2911	321319	0	True				
ANR	321477	EqualityExpression	h == 1		321319	0		==			
ANR	321478	Identifier	h		321319	0					
ANR	321479	PrimaryExpression	1		321319	1					
ANR	321480	CompoundStatement		30:27:757:757	321319	1					
ANR	321481	IfStatement	if ( ! v )		321319	0					
ANR	321482	Condition	! v	73:16:2932:2933	321319	0	True				
ANR	321483	UnaryOperationExpression	! v		321319	0					
ANR	321484	UnaryOperator	!		321319	0					
ANR	321485	Identifier	v		321319	1					
ANR	321486	CompoundStatement		31:20:779:779	321319	1					
ANR	321487	IfStatement	if ( ! d )		321319	0					
ANR	321488	Condition	! d	74:20:2958:2959	321319	0	True				
ANR	321489	UnaryOperationExpression	! d		321319	0					
ANR	321490	UnaryOperator	!		321319	0					
ANR	321491	Identifier	d		321319	1					
ANR	321492	CompoundStatement		32:24:805:805	321319	1					
ANR	321493	ExpressionStatement	n = 5	75:20:2984:2989	321319	0	True				
ANR	321494	AssignmentExpression	n = 5		321319	0		=			
ANR	321495	Identifier	n		321319	0					
ANR	321496	PrimaryExpression	5		321319	1					
ANR	321497	ElseStatement	else		321319	0					
ANR	321498	CompoundStatement		34:23:857:857	321319	0					
ANR	321499	ExpressionStatement	n = 6	77:20:3036:3041	321319	0	True				
ANR	321500	AssignmentExpression	n = 6		321319	0		=			
ANR	321501	Identifier	n		321319	0					
ANR	321502	PrimaryExpression	6		321319	1					
ANR	321503	ElseStatement	else		321319	0					
ANR	321504	CompoundStatement		37:19:923:923	321319	0					
ANR	321505	ExpressionStatement	n = 7	80:16:3098:3103	321319	0	True				
ANR	321506	AssignmentExpression	n = 7		321319	0		=			
ANR	321507	Identifier	n		321319	0					
ANR	321508	PrimaryExpression	7		321319	1					
ANR	321509	ElseStatement	else		321319	0					
ANR	321510	CompoundStatement		40:15:977:977	321319	0					
ANR	321511	ExpressionStatement	n = 8	83:12:3148:3153	321319	0	True				
ANR	321512	AssignmentExpression	n = 8		321319	0		=			
ANR	321513	Identifier	n		321319	0					
ANR	321514	PrimaryExpression	8		321319	1					
ANR	321515	BreakStatement	break ;	85:8:3173:3178	321319	7	True				
ANR	321516	Label	case 3 :	86:4:3184:3190	321319	8	True				
ANR	321517	ExpressionStatement	hv = h + v	87:8:3200:3210	321319	9	True				
ANR	321518	AssignmentExpression	hv = h + v		321319	0		=			
ANR	321519	Identifier	hv		321319	0					
ANR	321520	AdditiveExpression	h + v		321319	1		+			
ANR	321521	Identifier	h		321319	0					
ANR	321522	Identifier	v		321319	1					
ANR	321523	IfStatement	if ( ! d )		321319	10					
ANR	321524	Condition	! d	88:12:3224:3225	321319	0	True				
ANR	321525	UnaryOperationExpression	! d		321319	0					
ANR	321526	UnaryOperator	!		321319	0					
ANR	321527	Identifier	d		321319	1					
ANR	321528	CompoundStatement		46:16:1071:1071	321319	1					
ANR	321529	IfStatement	if ( ! hv )		321319	0					
ANR	321530	Condition	! hv	89:16:3246:3248	321319	0	True				
ANR	321531	UnaryOperationExpression	! hv		321319	0					
ANR	321532	UnaryOperator	!		321319	0					
ANR	321533	Identifier	hv		321319	1					
ANR	321534	CompoundStatement		47:21:1094:1094	321319	1					
ANR	321535	ExpressionStatement	n = 0	90:16:3269:3274	321319	0	True				
ANR	321536	AssignmentExpression	n = 0		321319	0		=			
ANR	321537	Identifier	n		321319	0					
ANR	321538	PrimaryExpression	0		321319	1					
ANR	321539	ElseStatement	else		321319	0					
ANR	321540	IfStatement	if ( hv == 1 )		321319	0					
ANR	321541	Condition	hv == 1	91:23:3299:3305	321319	0	True				
ANR	321542	EqualityExpression	hv == 1		321319	0		==			
ANR	321543	Identifier	hv		321319	0					
ANR	321544	PrimaryExpression	1		321319	1					
ANR	321545	CompoundStatement		49:32:1151:1151	321319	1					
ANR	321546	ExpressionStatement	n = 1	92:16:3326:3331	321319	0	True				
ANR	321547	AssignmentExpression	n = 1		321319	0		=			
ANR	321548	Identifier	n		321319	0					
ANR	321549	PrimaryExpression	1		321319	1					
ANR	321550	ElseStatement	else		321319	0					
ANR	321551	CompoundStatement		51:19:1195:1195	321319	0					
ANR	321552	ExpressionStatement	n = 2	94:16:3370:3375	321319	0	True				
ANR	321553	AssignmentExpression	n = 2		321319	0		=			
ANR	321554	Identifier	n		321319	0					
ANR	321555	PrimaryExpression	2		321319	1					
ANR	321556	ElseStatement	else		321319	0					
ANR	321557	IfStatement	if ( d == 1 )		321319	0					
ANR	321558	Condition	d == 1	96:19:3410:3415	321319	0	True				
ANR	321559	EqualityExpression	d == 1		321319	0		==			
ANR	321560	Identifier	d		321319	0					
ANR	321561	PrimaryExpression	1		321319	1					
ANR	321562	CompoundStatement		54:27:1261:1261	321319	1					
ANR	321563	IfStatement	if ( ! hv )		321319	0					
ANR	321564	Condition	! hv	97:16:3436:3438	321319	0	True				
ANR	321565	UnaryOperationExpression	! hv		321319	0					
ANR	321566	UnaryOperator	!		321319	0					
ANR	321567	Identifier	hv		321319	1					
ANR	321568	CompoundStatement		55:21:1284:1284	321319	1					
ANR	321569	ExpressionStatement	n = 3	98:16:3459:3464	321319	0	True				
ANR	321570	AssignmentExpression	n = 3		321319	0		=			
ANR	321571	Identifier	n		321319	0					
ANR	321572	PrimaryExpression	3		321319	1					
ANR	321573	ElseStatement	else		321319	0					
ANR	321574	IfStatement	if ( hv == 1 )		321319	0					
ANR	321575	Condition	hv == 1	99:23:3489:3495	321319	0	True				
ANR	321576	EqualityExpression	hv == 1		321319	0		==			
ANR	321577	Identifier	hv		321319	0					
ANR	321578	PrimaryExpression	1		321319	1					
ANR	321579	CompoundStatement		57:32:1341:1341	321319	1					
ANR	321580	ExpressionStatement	n = 4	100:16:3516:3521	321319	0	True				
ANR	321581	AssignmentExpression	n = 4		321319	0		=			
ANR	321582	Identifier	n		321319	0					
ANR	321583	PrimaryExpression	4		321319	1					
ANR	321584	ElseStatement	else		321319	0					
ANR	321585	CompoundStatement		59:19:1385:1385	321319	0					
ANR	321586	ExpressionStatement	n = 5	102:16:3560:3565	321319	0	True				
ANR	321587	AssignmentExpression	n = 5		321319	0		=			
ANR	321588	Identifier	n		321319	0					
ANR	321589	PrimaryExpression	5		321319	1					
ANR	321590	ElseStatement	else		321319	0					
ANR	321591	IfStatement	if ( d == 2 )		321319	0					
ANR	321592	Condition	d == 2	104:19:3600:3605	321319	0	True				
ANR	321593	EqualityExpression	d == 2		321319	0		==			
ANR	321594	Identifier	d		321319	0					
ANR	321595	PrimaryExpression	2		321319	1					
ANR	321596	CompoundStatement		62:27:1451:1451	321319	1					
ANR	321597	IfStatement	if ( ! hv )		321319	0					
ANR	321598	Condition	! hv	105:16:3626:3628	321319	0	True				
ANR	321599	UnaryOperationExpression	! hv		321319	0					
ANR	321600	UnaryOperator	!		321319	0					
ANR	321601	Identifier	hv		321319	1					
ANR	321602	CompoundStatement		63:21:1474:1474	321319	1					
ANR	321603	ExpressionStatement	n = 6	106:16:3649:3654	321319	0	True				
ANR	321604	AssignmentExpression	n = 6		321319	0		=			
ANR	321605	Identifier	n		321319	0					
ANR	321606	PrimaryExpression	6		321319	1					
ANR	321607	ElseStatement	else		321319	0					
ANR	321608	CompoundStatement		65:19:1518:1518	321319	0					
ANR	321609	ExpressionStatement	n = 7	108:16:3693:3698	321319	0	True				
ANR	321610	AssignmentExpression	n = 7		321319	0		=			
ANR	321611	Identifier	n		321319	0					
ANR	321612	PrimaryExpression	7		321319	1					
ANR	321613	ElseStatement	else		321319	0					
ANR	321614	CompoundStatement		68:15:1572:1572	321319	0					
ANR	321615	ExpressionStatement	n = 8	111:12:3743:3748	321319	0	True				
ANR	321616	AssignmentExpression	n = 8		321319	0		=			
ANR	321617	Identifier	n		321319	0					
ANR	321618	PrimaryExpression	8		321319	1					
ANR	321619	BreakStatement	break ;	113:8:3768:3773	321319	11	True				
ANR	321620	ReturnStatement	return ( T1_CTXNO_ZC + n ) ;	116:4:3786:3810	321319	6	True				
ANR	321621	AdditiveExpression	T1_CTXNO_ZC + n		321319	0		+			
ANR	321622	Identifier	T1_CTXNO_ZC		321319	0					
ANR	321623	Identifier	n		321319	1					
ANR	321624	ReturnType	static int		321319	1					
ANR	321625	Identifier	t1_init_ctxno_zc		321319	2					
ANR	321626	ParameterList	"OPJ_UINT32 f , OPJ_UINT32 orient"		321319	3					
ANR	321627	Parameter	OPJ_UINT32 f	42:28:2123:2134	321319	0	True				
ANR	321628	ParameterType	OPJ_UINT32		321319	0					
ANR	321629	Identifier	f		321319	1					
ANR	321630	Parameter	OPJ_UINT32 orient	42:42:2137:2153	321319	1	True				
ANR	321631	ParameterType	OPJ_UINT32		321319	0					
ANR	321632	Identifier	orient		321319	1					
ANR	321633	CFGEntryNode	ENTRY		321319		True				
ANR	321634	CFGExitNode	EXIT		321319		True				
ANR	321635	Symbol	orient		321319						
ANR	321636	Symbol	d		321319						
ANR	321637	Symbol	f		321319						
ANR	321638	Symbol	h		321319						
ANR	321639	Symbol	hv		321319						
ANR	321640	Symbol	n		321319						
ANR	321641	Symbol	T1_SIGMA_1		321319						
ANR	321642	Symbol	T1_SIGMA_0		321319						
ANR	321643	Symbol	T1_CTXNO_ZC		321319						
ANR	321644	Symbol	T1_SIGMA_3		321319						
ANR	321645	Symbol	T1_SIGMA_2		321319						
ANR	321646	Symbol	t		321319						
ANR	321647	Symbol	v		321319						
ANR	321648	Symbol	T1_SIGMA_8		321319						
ANR	321649	Symbol	T1_SIGMA_5		321319						
ANR	321650	Symbol	T1_SIGMA_7		321319						
ANR	321651	Symbol	T1_SIGMA_6		321319						
ANR	321652	Function	t1_init_ctxno_sc	119:0:3815:5212							
ANR	321653	FunctionDef	t1_init_ctxno_sc (OPJ_UINT32 f)		321652	0					
ANR	321654	CompoundStatement		120:0:3857:5212	321652	0					
ANR	321655	IdentifierDeclStatement	"int hc , vc , n ;"	121:4:3863:3876	321652	0	True				
ANR	321656	IdentifierDecl	hc		321652	0					
ANR	321657	IdentifierDeclType	int		321652	0					
ANR	321658	Identifier	hc		321652	1					
ANR	321659	IdentifierDecl	vc		321652	1					
ANR	321660	IdentifierDeclType	int		321652	0					
ANR	321661	Identifier	vc		321652	1					
ANR	321662	IdentifierDecl	n		321652	2					
ANR	321663	IdentifierDeclType	int		321652	0					
ANR	321664	Identifier	n		321652	1					
ANR	321665	ExpressionStatement	n = 0	122:4:3882:3887	321652	1	True				
ANR	321666	AssignmentExpression	n = 0		321652	0		=			
ANR	321667	Identifier	n		321652	0					
ANR	321668	PrimaryExpression	0		321652	1					
ANR	321669	ExpressionStatement	"hc = opj_int_min ( ( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == T1_LUT_SIG_E ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == T1_LUT_SIG_W ) , 1 ) - opj_int_min ( ( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) , 1 )"	124:4:3894:4345	321652	2	True				
ANR	321670	AssignmentExpression	"hc = opj_int_min ( ( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == T1_LUT_SIG_E ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == T1_LUT_SIG_W ) , 1 ) - opj_int_min ( ( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) , 1 )"		321652	0		=			
ANR	321671	Identifier	hc		321652	0					
ANR	321672	AdditiveExpression	"opj_int_min ( ( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == T1_LUT_SIG_E ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == T1_LUT_SIG_W ) , 1 ) - opj_int_min ( ( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) , 1 )"		321652	1		-			
ANR	321673	CallExpression	"opj_int_min ( ( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == T1_LUT_SIG_E ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == T1_LUT_SIG_W ) , 1 )"		321652	0					
ANR	321674	Callee	opj_int_min		321652	0					
ANR	321675	Identifier	opj_int_min		321652	0					
ANR	321676	ArgumentList	( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == T1_LUT_SIG_E ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == T1_LUT_SIG_W )		321652	1					
ANR	321677	Argument	( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == T1_LUT_SIG_E ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == T1_LUT_SIG_W )		321652	0					
ANR	321678	AdditiveExpression	( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == T1_LUT_SIG_E ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == T1_LUT_SIG_W )		321652	0		+			
ANR	321679	EqualityExpression	( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == T1_LUT_SIG_E		321652	0		==			
ANR	321680	BitAndExpression	f & ( T1_LUT_SIG_E | T1_LUT_SGN_E )		321652	0		&			
ANR	321681	Identifier	f		321652	0					
ANR	321682	InclusiveOrExpression	T1_LUT_SIG_E | T1_LUT_SGN_E		321652	1		|			
ANR	321683	Identifier	T1_LUT_SIG_E		321652	0					
ANR	321684	Identifier	T1_LUT_SGN_E		321652	1					
ANR	321685	Identifier	T1_LUT_SIG_E		321652	1					
ANR	321686	EqualityExpression	( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == T1_LUT_SIG_W		321652	1		==			
ANR	321687	BitAndExpression	f & ( T1_LUT_SIG_W | T1_LUT_SGN_W )		321652	0		&			
ANR	321688	Identifier	f		321652	0					
ANR	321689	InclusiveOrExpression	T1_LUT_SIG_W | T1_LUT_SGN_W		321652	1		|			
ANR	321690	Identifier	T1_LUT_SIG_W		321652	0					
ANR	321691	Identifier	T1_LUT_SGN_W		321652	1					
ANR	321692	Identifier	T1_LUT_SIG_W		321652	1					
ANR	321693	Argument	1		321652	1					
ANR	321694	PrimaryExpression	1		321652	0					
ANR	321695	CallExpression	"opj_int_min ( ( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) , 1 )"		321652	1					
ANR	321696	Callee	opj_int_min		321652	0					
ANR	321697	Identifier	opj_int_min		321652	0					
ANR	321698	ArgumentList	( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == ( T1_LUT_SIG_W | T1_LUT_SGN_W ) )		321652	1					
ANR	321699	Argument	( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == ( T1_LUT_SIG_W | T1_LUT_SGN_W ) )		321652	0					
ANR	321700	AdditiveExpression	( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == ( T1_LUT_SIG_W | T1_LUT_SGN_W ) )		321652	0		+			
ANR	321701	EqualityExpression	( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == ( T1_LUT_SIG_E | T1_LUT_SGN_E )		321652	0		==			
ANR	321702	BitAndExpression	f & ( T1_LUT_SIG_E | T1_LUT_SGN_E )		321652	0		&			
ANR	321703	Identifier	f		321652	0					
ANR	321704	InclusiveOrExpression	T1_LUT_SIG_E | T1_LUT_SGN_E		321652	1		|			
ANR	321705	Identifier	T1_LUT_SIG_E		321652	0					
ANR	321706	Identifier	T1_LUT_SGN_E		321652	1					
ANR	321707	InclusiveOrExpression	T1_LUT_SIG_E | T1_LUT_SGN_E		321652	1		|			
ANR	321708	Identifier	T1_LUT_SIG_E		321652	0					
ANR	321709	Identifier	T1_LUT_SGN_E		321652	1					
ANR	321710	EqualityExpression	( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == ( T1_LUT_SIG_W | T1_LUT_SGN_W )		321652	1		==			
ANR	321711	BitAndExpression	f & ( T1_LUT_SIG_W | T1_LUT_SGN_W )		321652	0		&			
ANR	321712	Identifier	f		321652	0					
ANR	321713	InclusiveOrExpression	T1_LUT_SIG_W | T1_LUT_SGN_W		321652	1		|			
ANR	321714	Identifier	T1_LUT_SIG_W		321652	0					
ANR	321715	Identifier	T1_LUT_SGN_W		321652	1					
ANR	321716	InclusiveOrExpression	T1_LUT_SIG_W | T1_LUT_SGN_W		321652	1		|			
ANR	321717	Identifier	T1_LUT_SIG_W		321652	0					
ANR	321718	Identifier	T1_LUT_SGN_W		321652	1					
ANR	321719	Argument	1		321652	1					
ANR	321720	PrimaryExpression	1		321652	0					
ANR	321721	ExpressionStatement	"vc = opj_int_min ( ( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == T1_LUT_SIG_N ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == T1_LUT_SIG_S ) , 1 ) - opj_int_min ( ( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) , 1 )"	131:4:4352:4803	321652	3	True				
ANR	321722	AssignmentExpression	"vc = opj_int_min ( ( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == T1_LUT_SIG_N ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == T1_LUT_SIG_S ) , 1 ) - opj_int_min ( ( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) , 1 )"		321652	0		=			
ANR	321723	Identifier	vc		321652	0					
ANR	321724	AdditiveExpression	"opj_int_min ( ( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == T1_LUT_SIG_N ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == T1_LUT_SIG_S ) , 1 ) - opj_int_min ( ( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) , 1 )"		321652	1		-			
ANR	321725	CallExpression	"opj_int_min ( ( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == T1_LUT_SIG_N ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == T1_LUT_SIG_S ) , 1 )"		321652	0					
ANR	321726	Callee	opj_int_min		321652	0					
ANR	321727	Identifier	opj_int_min		321652	0					
ANR	321728	ArgumentList	( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == T1_LUT_SIG_N ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == T1_LUT_SIG_S )		321652	1					
ANR	321729	Argument	( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == T1_LUT_SIG_N ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == T1_LUT_SIG_S )		321652	0					
ANR	321730	AdditiveExpression	( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == T1_LUT_SIG_N ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == T1_LUT_SIG_S )		321652	0		+			
ANR	321731	EqualityExpression	( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == T1_LUT_SIG_N		321652	0		==			
ANR	321732	BitAndExpression	f & ( T1_LUT_SIG_N | T1_LUT_SGN_N )		321652	0		&			
ANR	321733	Identifier	f		321652	0					
ANR	321734	InclusiveOrExpression	T1_LUT_SIG_N | T1_LUT_SGN_N		321652	1		|			
ANR	321735	Identifier	T1_LUT_SIG_N		321652	0					
ANR	321736	Identifier	T1_LUT_SGN_N		321652	1					
ANR	321737	Identifier	T1_LUT_SIG_N		321652	1					
ANR	321738	EqualityExpression	( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == T1_LUT_SIG_S		321652	1		==			
ANR	321739	BitAndExpression	f & ( T1_LUT_SIG_S | T1_LUT_SGN_S )		321652	0		&			
ANR	321740	Identifier	f		321652	0					
ANR	321741	InclusiveOrExpression	T1_LUT_SIG_S | T1_LUT_SGN_S		321652	1		|			
ANR	321742	Identifier	T1_LUT_SIG_S		321652	0					
ANR	321743	Identifier	T1_LUT_SGN_S		321652	1					
ANR	321744	Identifier	T1_LUT_SIG_S		321652	1					
ANR	321745	Argument	1		321652	1					
ANR	321746	PrimaryExpression	1		321652	0					
ANR	321747	CallExpression	"opj_int_min ( ( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) , 1 )"		321652	1					
ANR	321748	Callee	opj_int_min		321652	0					
ANR	321749	Identifier	opj_int_min		321652	0					
ANR	321750	ArgumentList	( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == ( T1_LUT_SIG_S | T1_LUT_SGN_S ) )		321652	1					
ANR	321751	Argument	( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == ( T1_LUT_SIG_S | T1_LUT_SGN_S ) )		321652	0					
ANR	321752	AdditiveExpression	( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == ( T1_LUT_SIG_S | T1_LUT_SGN_S ) )		321652	0		+			
ANR	321753	EqualityExpression	( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == ( T1_LUT_SIG_N | T1_LUT_SGN_N )		321652	0		==			
ANR	321754	BitAndExpression	f & ( T1_LUT_SIG_N | T1_LUT_SGN_N )		321652	0		&			
ANR	321755	Identifier	f		321652	0					
ANR	321756	InclusiveOrExpression	T1_LUT_SIG_N | T1_LUT_SGN_N		321652	1		|			
ANR	321757	Identifier	T1_LUT_SIG_N		321652	0					
ANR	321758	Identifier	T1_LUT_SGN_N		321652	1					
ANR	321759	InclusiveOrExpression	T1_LUT_SIG_N | T1_LUT_SGN_N		321652	1		|			
ANR	321760	Identifier	T1_LUT_SIG_N		321652	0					
ANR	321761	Identifier	T1_LUT_SGN_N		321652	1					
ANR	321762	EqualityExpression	( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == ( T1_LUT_SIG_S | T1_LUT_SGN_S )		321652	1		==			
ANR	321763	BitAndExpression	f & ( T1_LUT_SIG_S | T1_LUT_SGN_S )		321652	0		&			
ANR	321764	Identifier	f		321652	0					
ANR	321765	InclusiveOrExpression	T1_LUT_SIG_S | T1_LUT_SGN_S		321652	1		|			
ANR	321766	Identifier	T1_LUT_SIG_S		321652	0					
ANR	321767	Identifier	T1_LUT_SGN_S		321652	1					
ANR	321768	InclusiveOrExpression	T1_LUT_SIG_S | T1_LUT_SGN_S		321652	1		|			
ANR	321769	Identifier	T1_LUT_SIG_S		321652	0					
ANR	321770	Identifier	T1_LUT_SGN_S		321652	1					
ANR	321771	Argument	1		321652	1					
ANR	321772	PrimaryExpression	1		321652	0					
ANR	321773	IfStatement	if ( hc < 0 )		321652	4					
ANR	321774	Condition	hc < 0	138:8:4814:4819	321652	0	True				
ANR	321775	RelationalExpression	hc < 0		321652	0		<			
ANR	321776	Identifier	hc		321652	0					
ANR	321777	PrimaryExpression	0		321652	1					
ANR	321778	CompoundStatement		19:16:964:964	321652	1					
ANR	321779	ExpressionStatement	hc = - hc	139:8:4832:4840	321652	0	True				
ANR	321780	AssignmentExpression	hc = - hc		321652	0		=			
ANR	321781	Identifier	hc		321652	0					
ANR	321782	UnaryOperationExpression	- hc		321652	1					
ANR	321783	UnaryOperator	-		321652	0					
ANR	321784	Identifier	hc		321652	1					
ANR	321785	ExpressionStatement	vc = - vc	140:8:4850:4858	321652	1	True				
ANR	321786	AssignmentExpression	vc = - vc		321652	0		=			
ANR	321787	Identifier	vc		321652	0					
ANR	321788	UnaryOperationExpression	- vc		321652	1					
ANR	321789	UnaryOperator	-		321652	0					
ANR	321790	Identifier	vc		321652	1					
ANR	321791	IfStatement	if ( ! hc )		321652	5					
ANR	321792	Condition	! hc	142:8:4874:4876	321652	0	True				
ANR	321793	UnaryOperationExpression	! hc		321652	0					
ANR	321794	UnaryOperator	!		321652	0					
ANR	321795	Identifier	hc		321652	1					
ANR	321796	CompoundStatement		23:13:1021:1021	321652	1					
ANR	321797	IfStatement	if ( vc == - 1 )		321652	0					
ANR	321798	Condition	vc == - 1	143:12:4893:4900	321652	0	True				
ANR	321799	EqualityExpression	vc == - 1		321652	0		==			
ANR	321800	Identifier	vc		321652	0					
ANR	321801	UnaryOperationExpression	- 1		321652	1					
ANR	321802	UnaryOperator	-		321652	0					
ANR	321803	PrimaryExpression	1		321652	1					
ANR	321804	CompoundStatement		24:22:1045:1045	321652	1					
ANR	321805	ExpressionStatement	n = 1	144:12:4917:4922	321652	0	True				
ANR	321806	AssignmentExpression	n = 1		321652	0		=			
ANR	321807	Identifier	n		321652	0					
ANR	321808	PrimaryExpression	1		321652	1					
ANR	321809	ElseStatement	else		321652	0					
ANR	321810	IfStatement	if ( ! vc )		321652	0					
ANR	321811	Condition	! vc	145:19:4943:4945	321652	0	True				
ANR	321812	UnaryOperationExpression	! vc		321652	0					
ANR	321813	UnaryOperator	!		321652	0					
ANR	321814	Identifier	vc		321652	1					
ANR	321815	CompoundStatement		26:24:1090:1090	321652	1					
ANR	321816	ExpressionStatement	n = 0	146:12:4962:4967	321652	0	True				
ANR	321817	AssignmentExpression	n = 0		321652	0		=			
ANR	321818	Identifier	n		321652	0					
ANR	321819	PrimaryExpression	0		321652	1					
ANR	321820	ElseStatement	else		321652	0					
ANR	321821	CompoundStatement		28:15:1126:1126	321652	0					
ANR	321822	ExpressionStatement	n = 1	148:12:4998:5003	321652	0	True				
ANR	321823	AssignmentExpression	n = 1		321652	0		=			
ANR	321824	Identifier	n		321652	0					
ANR	321825	PrimaryExpression	1		321652	1					
ANR	321826	ElseStatement	else		321652	0					
ANR	321827	IfStatement	if ( hc == 1 )		321652	0					
ANR	321828	Condition	hc == 1	150:15:5030:5036	321652	0	True				
ANR	321829	EqualityExpression	hc == 1		321652	0		==			
ANR	321830	Identifier	hc		321652	0					
ANR	321831	PrimaryExpression	1		321652	1					
ANR	321832	CompoundStatement		31:24:1181:1181	321652	1					
ANR	321833	IfStatement	if ( vc == - 1 )		321652	0					
ANR	321834	Condition	vc == - 1	151:12:5053:5060	321652	0	True				
ANR	321835	EqualityExpression	vc == - 1		321652	0		==			
ANR	321836	Identifier	vc		321652	0					
ANR	321837	UnaryOperationExpression	- 1		321652	1					
ANR	321838	UnaryOperator	-		321652	0					
ANR	321839	PrimaryExpression	1		321652	1					
ANR	321840	CompoundStatement		32:22:1205:1205	321652	1					
ANR	321841	ExpressionStatement	n = 2	152:12:5077:5082	321652	0	True				
ANR	321842	AssignmentExpression	n = 2		321652	0		=			
ANR	321843	Identifier	n		321652	0					
ANR	321844	PrimaryExpression	2		321652	1					
ANR	321845	ElseStatement	else		321652	0					
ANR	321846	IfStatement	if ( ! vc )		321652	0					
ANR	321847	Condition	! vc	153:19:5103:5105	321652	0	True				
ANR	321848	UnaryOperationExpression	! vc		321652	0					
ANR	321849	UnaryOperator	!		321652	0					
ANR	321850	Identifier	vc		321652	1					
ANR	321851	CompoundStatement		34:24:1250:1250	321652	1					
ANR	321852	ExpressionStatement	n = 3	154:12:5122:5127	321652	0	True				
ANR	321853	AssignmentExpression	n = 3		321652	0		=			
ANR	321854	Identifier	n		321652	0					
ANR	321855	PrimaryExpression	3		321652	1					
ANR	321856	ElseStatement	else		321652	0					
ANR	321857	CompoundStatement		36:15:1286:1286	321652	0					
ANR	321858	ExpressionStatement	n = 4	156:12:5158:5163	321652	0	True				
ANR	321859	AssignmentExpression	n = 4		321652	0		=			
ANR	321860	Identifier	n		321652	0					
ANR	321861	PrimaryExpression	4		321652	1					
ANR	321862	ReturnStatement	return ( T1_CTXNO_SC + n ) ;	160:4:5186:5210	321652	6	True				
ANR	321863	AdditiveExpression	T1_CTXNO_SC + n		321652	0		+			
ANR	321864	Identifier	T1_CTXNO_SC		321652	0					
ANR	321865	Identifier	n		321652	1					
ANR	321866	ReturnType	static int		321652	1					
ANR	321867	Identifier	t1_init_ctxno_sc		321652	2					
ANR	321868	ParameterList	OPJ_UINT32 f		321652	3					
ANR	321869	Parameter	OPJ_UINT32 f	119:28:3843:3854	321652	0	True				
ANR	321870	ParameterType	OPJ_UINT32		321652	0					
ANR	321871	Identifier	f		321652	1					
ANR	321872	CFGEntryNode	ENTRY		321652		True				
ANR	321873	CFGExitNode	EXIT		321652		True				
ANR	321874	Symbol	T1_LUT_SIG_E		321652						
ANR	321875	Symbol	f		321652						
ANR	321876	Symbol	T1_LUT_SIG_N		321652						
ANR	321877	Symbol	T1_LUT_SGN_E		321652						
ANR	321878	Symbol	vc		321652						
ANR	321879	Symbol	T1_LUT_SIG_S		321652						
ANR	321880	Symbol	n		321652						
ANR	321881	Symbol	opj_int_min		321652						
ANR	321882	Symbol	T1_LUT_SIG_W		321652						
ANR	321883	Symbol	T1_LUT_SGN_N		321652						
ANR	321884	Symbol	T1_LUT_SGN_S		321652						
ANR	321885	Symbol	T1_CTXNO_SC		321652						
ANR	321886	Symbol	hc		321652						
ANR	321887	Symbol	T1_LUT_SGN_W		321652						
ANR	321888	Function	t1_init_spb	163:0:5215:6305							
ANR	321889	FunctionDef	t1_init_spb (OPJ_UINT32 f)		321888	0					
ANR	321890	CompoundStatement		164:0:5252:6305	321888	0					
ANR	321891	IdentifierDeclStatement	"int hc , vc , n ;"	165:4:5258:5271	321888	0	True				
ANR	321892	IdentifierDecl	hc		321888	0					
ANR	321893	IdentifierDeclType	int		321888	0					
ANR	321894	Identifier	hc		321888	1					
ANR	321895	IdentifierDecl	vc		321888	1					
ANR	321896	IdentifierDeclType	int		321888	0					
ANR	321897	Identifier	vc		321888	1					
ANR	321898	IdentifierDecl	n		321888	2					
ANR	321899	IdentifierDeclType	int		321888	0					
ANR	321900	Identifier	n		321888	1					
ANR	321901	ExpressionStatement	"hc = opj_int_min ( ( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == T1_LUT_SIG_E ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == T1_LUT_SIG_W ) , 1 ) - opj_int_min ( ( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) , 1 )"	167:4:5278:5729	321888	1	True				
ANR	321902	AssignmentExpression	"hc = opj_int_min ( ( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == T1_LUT_SIG_E ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == T1_LUT_SIG_W ) , 1 ) - opj_int_min ( ( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) , 1 )"		321888	0		=			
ANR	321903	Identifier	hc		321888	0					
ANR	321904	AdditiveExpression	"opj_int_min ( ( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == T1_LUT_SIG_E ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == T1_LUT_SIG_W ) , 1 ) - opj_int_min ( ( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) , 1 )"		321888	1		-			
ANR	321905	CallExpression	"opj_int_min ( ( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == T1_LUT_SIG_E ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == T1_LUT_SIG_W ) , 1 )"		321888	0					
ANR	321906	Callee	opj_int_min		321888	0					
ANR	321907	Identifier	opj_int_min		321888	0					
ANR	321908	ArgumentList	( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == T1_LUT_SIG_E ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == T1_LUT_SIG_W )		321888	1					
ANR	321909	Argument	( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == T1_LUT_SIG_E ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == T1_LUT_SIG_W )		321888	0					
ANR	321910	AdditiveExpression	( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == T1_LUT_SIG_E ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == T1_LUT_SIG_W )		321888	0		+			
ANR	321911	EqualityExpression	( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == T1_LUT_SIG_E		321888	0		==			
ANR	321912	BitAndExpression	f & ( T1_LUT_SIG_E | T1_LUT_SGN_E )		321888	0		&			
ANR	321913	Identifier	f		321888	0					
ANR	321914	InclusiveOrExpression	T1_LUT_SIG_E | T1_LUT_SGN_E		321888	1		|			
ANR	321915	Identifier	T1_LUT_SIG_E		321888	0					
ANR	321916	Identifier	T1_LUT_SGN_E		321888	1					
ANR	321917	Identifier	T1_LUT_SIG_E		321888	1					
ANR	321918	EqualityExpression	( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == T1_LUT_SIG_W		321888	1		==			
ANR	321919	BitAndExpression	f & ( T1_LUT_SIG_W | T1_LUT_SGN_W )		321888	0		&			
ANR	321920	Identifier	f		321888	0					
ANR	321921	InclusiveOrExpression	T1_LUT_SIG_W | T1_LUT_SGN_W		321888	1		|			
ANR	321922	Identifier	T1_LUT_SIG_W		321888	0					
ANR	321923	Identifier	T1_LUT_SGN_W		321888	1					
ANR	321924	Identifier	T1_LUT_SIG_W		321888	1					
ANR	321925	Argument	1		321888	1					
ANR	321926	PrimaryExpression	1		321888	0					
ANR	321927	CallExpression	"opj_int_min ( ( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) , 1 )"		321888	1					
ANR	321928	Callee	opj_int_min		321888	0					
ANR	321929	Identifier	opj_int_min		321888	0					
ANR	321930	ArgumentList	( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == ( T1_LUT_SIG_W | T1_LUT_SGN_W ) )		321888	1					
ANR	321931	Argument	( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == ( T1_LUT_SIG_W | T1_LUT_SGN_W ) )		321888	0					
ANR	321932	AdditiveExpression	( ( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) + ( ( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == ( T1_LUT_SIG_W | T1_LUT_SGN_W ) )		321888	0		+			
ANR	321933	EqualityExpression	( f & ( T1_LUT_SIG_E | T1_LUT_SGN_E ) ) == ( T1_LUT_SIG_E | T1_LUT_SGN_E )		321888	0		==			
ANR	321934	BitAndExpression	f & ( T1_LUT_SIG_E | T1_LUT_SGN_E )		321888	0		&			
ANR	321935	Identifier	f		321888	0					
ANR	321936	InclusiveOrExpression	T1_LUT_SIG_E | T1_LUT_SGN_E		321888	1		|			
ANR	321937	Identifier	T1_LUT_SIG_E		321888	0					
ANR	321938	Identifier	T1_LUT_SGN_E		321888	1					
ANR	321939	InclusiveOrExpression	T1_LUT_SIG_E | T1_LUT_SGN_E		321888	1		|			
ANR	321940	Identifier	T1_LUT_SIG_E		321888	0					
ANR	321941	Identifier	T1_LUT_SGN_E		321888	1					
ANR	321942	EqualityExpression	( f & ( T1_LUT_SIG_W | T1_LUT_SGN_W ) ) == ( T1_LUT_SIG_W | T1_LUT_SGN_W )		321888	1		==			
ANR	321943	BitAndExpression	f & ( T1_LUT_SIG_W | T1_LUT_SGN_W )		321888	0		&			
ANR	321944	Identifier	f		321888	0					
ANR	321945	InclusiveOrExpression	T1_LUT_SIG_W | T1_LUT_SGN_W		321888	1		|			
ANR	321946	Identifier	T1_LUT_SIG_W		321888	0					
ANR	321947	Identifier	T1_LUT_SGN_W		321888	1					
ANR	321948	InclusiveOrExpression	T1_LUT_SIG_W | T1_LUT_SGN_W		321888	1		|			
ANR	321949	Identifier	T1_LUT_SIG_W		321888	0					
ANR	321950	Identifier	T1_LUT_SGN_W		321888	1					
ANR	321951	Argument	1		321888	1					
ANR	321952	PrimaryExpression	1		321888	0					
ANR	321953	ExpressionStatement	"vc = opj_int_min ( ( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == T1_LUT_SIG_N ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == T1_LUT_SIG_S ) , 1 ) - opj_int_min ( ( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) , 1 )"	174:4:5736:6187	321888	2	True				
ANR	321954	AssignmentExpression	"vc = opj_int_min ( ( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == T1_LUT_SIG_N ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == T1_LUT_SIG_S ) , 1 ) - opj_int_min ( ( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) , 1 )"		321888	0		=			
ANR	321955	Identifier	vc		321888	0					
ANR	321956	AdditiveExpression	"opj_int_min ( ( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == T1_LUT_SIG_N ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == T1_LUT_SIG_S ) , 1 ) - opj_int_min ( ( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) , 1 )"		321888	1		-			
ANR	321957	CallExpression	"opj_int_min ( ( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == T1_LUT_SIG_N ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == T1_LUT_SIG_S ) , 1 )"		321888	0					
ANR	321958	Callee	opj_int_min		321888	0					
ANR	321959	Identifier	opj_int_min		321888	0					
ANR	321960	ArgumentList	( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == T1_LUT_SIG_N ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == T1_LUT_SIG_S )		321888	1					
ANR	321961	Argument	( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == T1_LUT_SIG_N ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == T1_LUT_SIG_S )		321888	0					
ANR	321962	AdditiveExpression	( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == T1_LUT_SIG_N ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == T1_LUT_SIG_S )		321888	0		+			
ANR	321963	EqualityExpression	( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == T1_LUT_SIG_N		321888	0		==			
ANR	321964	BitAndExpression	f & ( T1_LUT_SIG_N | T1_LUT_SGN_N )		321888	0		&			
ANR	321965	Identifier	f		321888	0					
ANR	321966	InclusiveOrExpression	T1_LUT_SIG_N | T1_LUT_SGN_N		321888	1		|			
ANR	321967	Identifier	T1_LUT_SIG_N		321888	0					
ANR	321968	Identifier	T1_LUT_SGN_N		321888	1					
ANR	321969	Identifier	T1_LUT_SIG_N		321888	1					
ANR	321970	EqualityExpression	( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == T1_LUT_SIG_S		321888	1		==			
ANR	321971	BitAndExpression	f & ( T1_LUT_SIG_S | T1_LUT_SGN_S )		321888	0		&			
ANR	321972	Identifier	f		321888	0					
ANR	321973	InclusiveOrExpression	T1_LUT_SIG_S | T1_LUT_SGN_S		321888	1		|			
ANR	321974	Identifier	T1_LUT_SIG_S		321888	0					
ANR	321975	Identifier	T1_LUT_SGN_S		321888	1					
ANR	321976	Identifier	T1_LUT_SIG_S		321888	1					
ANR	321977	Argument	1		321888	1					
ANR	321978	PrimaryExpression	1		321888	0					
ANR	321979	CallExpression	"opj_int_min ( ( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) , 1 )"		321888	1					
ANR	321980	Callee	opj_int_min		321888	0					
ANR	321981	Identifier	opj_int_min		321888	0					
ANR	321982	ArgumentList	( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == ( T1_LUT_SIG_S | T1_LUT_SGN_S ) )		321888	1					
ANR	321983	Argument	( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == ( T1_LUT_SIG_S | T1_LUT_SGN_S ) )		321888	0					
ANR	321984	AdditiveExpression	( ( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) + ( ( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == ( T1_LUT_SIG_S | T1_LUT_SGN_S ) )		321888	0		+			
ANR	321985	EqualityExpression	( f & ( T1_LUT_SIG_N | T1_LUT_SGN_N ) ) == ( T1_LUT_SIG_N | T1_LUT_SGN_N )		321888	0		==			
ANR	321986	BitAndExpression	f & ( T1_LUT_SIG_N | T1_LUT_SGN_N )		321888	0		&			
ANR	321987	Identifier	f		321888	0					
ANR	321988	InclusiveOrExpression	T1_LUT_SIG_N | T1_LUT_SGN_N		321888	1		|			
ANR	321989	Identifier	T1_LUT_SIG_N		321888	0					
ANR	321990	Identifier	T1_LUT_SGN_N		321888	1					
ANR	321991	InclusiveOrExpression	T1_LUT_SIG_N | T1_LUT_SGN_N		321888	1		|			
ANR	321992	Identifier	T1_LUT_SIG_N		321888	0					
ANR	321993	Identifier	T1_LUT_SGN_N		321888	1					
ANR	321994	EqualityExpression	( f & ( T1_LUT_SIG_S | T1_LUT_SGN_S ) ) == ( T1_LUT_SIG_S | T1_LUT_SGN_S )		321888	1		==			
ANR	321995	BitAndExpression	f & ( T1_LUT_SIG_S | T1_LUT_SGN_S )		321888	0		&			
ANR	321996	Identifier	f		321888	0					
ANR	321997	InclusiveOrExpression	T1_LUT_SIG_S | T1_LUT_SGN_S		321888	1		|			
ANR	321998	Identifier	T1_LUT_SIG_S		321888	0					
ANR	321999	Identifier	T1_LUT_SGN_S		321888	1					
ANR	322000	InclusiveOrExpression	T1_LUT_SIG_S | T1_LUT_SGN_S		321888	1		|			
ANR	322001	Identifier	T1_LUT_SIG_S		321888	0					
ANR	322002	Identifier	T1_LUT_SGN_S		321888	1					
ANR	322003	Argument	1		321888	1					
ANR	322004	PrimaryExpression	1		321888	0					
ANR	322005	IfStatement	if ( ! hc && ! vc )		321888	3					
ANR	322006	Condition	! hc && ! vc	181:8:6198:6207	321888	0	True				
ANR	322007	AndExpression	! hc && ! vc		321888	0		&&			
ANR	322008	UnaryOperationExpression	! hc		321888	0					
ANR	322009	UnaryOperator	!		321888	0					
ANR	322010	Identifier	hc		321888	1					
ANR	322011	UnaryOperationExpression	! vc		321888	1					
ANR	322012	UnaryOperator	!		321888	0					
ANR	322013	Identifier	vc		321888	1					
ANR	322014	CompoundStatement		18:20:957:957	321888	1					
ANR	322015	ExpressionStatement	n = 0	182:8:6220:6225	321888	0	True				
ANR	322016	AssignmentExpression	n = 0		321888	0		=			
ANR	322017	Identifier	n		321888	0					
ANR	322018	PrimaryExpression	0		321888	1					
ANR	322019	ElseStatement	else		321888	0					
ANR	322020	CompoundStatement		20:11:985:985	321888	0					
ANR	322021	ExpressionStatement	n = ( ! ( hc > 0 || ( ! hc && vc > 0 ) ) )	184:8:6248:6282	321888	0	True				
ANR	322022	AssignmentExpression	n = ( ! ( hc > 0 || ( ! hc && vc > 0 ) ) )		321888	0		=			
ANR	322023	Identifier	n		321888	0					
ANR	322024	UnaryOperationExpression	! ( hc > 0 || ( ! hc && vc > 0 ) )		321888	1					
ANR	322025	UnaryOperator	!		321888	0					
ANR	322026	OrExpression	hc > 0 || ( ! hc && vc > 0 )		321888	1		||			
ANR	322027	RelationalExpression	hc > 0		321888	0		>			
ANR	322028	Identifier	hc		321888	0					
ANR	322029	PrimaryExpression	0		321888	1					
ANR	322030	AndExpression	! hc && vc > 0		321888	1		&&			
ANR	322031	UnaryOperationExpression	! hc		321888	0					
ANR	322032	UnaryOperator	!		321888	0					
ANR	322033	Identifier	hc		321888	1					
ANR	322034	RelationalExpression	vc > 0		321888	1		>			
ANR	322035	Identifier	vc		321888	0					
ANR	322036	PrimaryExpression	0		321888	1					
ANR	322037	ReturnStatement	return n ;	187:4:6295:6303	321888	4	True				
ANR	322038	Identifier	n		321888	0					
ANR	322039	ReturnType	static int		321888	1					
ANR	322040	Identifier	t1_init_spb		321888	2					
ANR	322041	ParameterList	OPJ_UINT32 f		321888	3					
ANR	322042	Parameter	OPJ_UINT32 f	163:23:5238:5249	321888	0	True				
ANR	322043	ParameterType	OPJ_UINT32		321888	0					
ANR	322044	Identifier	f		321888	1					
ANR	322045	CFGEntryNode	ENTRY		321888		True				
ANR	322046	CFGExitNode	EXIT		321888		True				
ANR	322047	Symbol	T1_LUT_SIG_E		321888						
ANR	322048	Symbol	f		321888						
ANR	322049	Symbol	T1_LUT_SIG_N		321888						
ANR	322050	Symbol	T1_LUT_SGN_E		321888						
ANR	322051	Symbol	vc		321888						
ANR	322052	Symbol	T1_LUT_SIG_S		321888						
ANR	322053	Symbol	n		321888						
ANR	322054	Symbol	opj_int_min		321888						
ANR	322055	Symbol	T1_LUT_SIG_W		321888						
ANR	322056	Symbol	T1_LUT_SGN_N		321888						
ANR	322057	Symbol	T1_LUT_SGN_S		321888						
ANR	322058	Symbol	hc		321888						
ANR	322059	Symbol	T1_LUT_SGN_W		321888						
ANR	322060	Function	dump_array16	190:0:6308:6614							
ANR	322061	FunctionDef	"dump_array16 (int array [ ] , int size)"		322060	0					
ANR	322062	CompoundStatement		191:0:6356:6614	322060	0					
ANR	322063	IdentifierDeclStatement	int i ;	192:4:6362:6367	322060	0	True				
ANR	322064	IdentifierDecl	i		322060	0					
ANR	322065	IdentifierDeclType	int		322060	0					
ANR	322066	Identifier	i		322060	1					
ANR	322067	ExpressionStatement	-- size	193:4:6373:6379	322060	1	True				
ANR	322068	UnaryExpression	-- size		322060	0					
ANR	322069	IncDec	--		322060	0					
ANR	322070	Identifier	size		322060	1					
ANR	322071	ForStatement	for ( i = 0 ; i < size ; ++ i )		322060	2					
ANR	322072	ForInit	i = 0 ;	194:9:6390:6395	322060	0	True				
ANR	322073	AssignmentExpression	i = 0		322060	0		=			
ANR	322074	Identifier	i		322060	0					
ANR	322075	PrimaryExpression	0		322060	1					
ANR	322076	Condition	i < size	194:16:6397:6404	322060	1	True				
ANR	322077	RelationalExpression	i < size		322060	0		<			
ANR	322078	Identifier	i		322060	0					
ANR	322079	Identifier	size		322060	1					
ANR	322080	UnaryExpression	++ i	194:26:6407:6409	322060	2	True				
ANR	322081	IncDec	++		322060	0					
ANR	322082	Identifier	i		322060	1					
ANR	322083	CompoundStatement		4:31:55:55	322060	3					
ANR	322084	ExpressionStatement	"printf ( ""0x%04x,"" , array [ i ] )"	195:8:6422:6449	322060	0	True				
ANR	322085	CallExpression	"printf ( ""0x%04x,"" , array [ i ] )"		322060	0					
ANR	322086	Callee	printf		322060	0					
ANR	322087	Identifier	printf		322060	0					
ANR	322088	ArgumentList	"""0x%04x,"""		322060	1					
ANR	322089	Argument	"""0x%04x,"""		322060	0					
ANR	322090	PrimaryExpression	"""0x%04x,"""		322060	0					
ANR	322091	Argument	array [ i ]		322060	1					
ANR	322092	ArrayIndexing	array [ i ]		322060	0					
ANR	322093	Identifier	array		322060	0					
ANR	322094	Identifier	i		322060	1					
ANR	322095	IfStatement	if ( ! ( ( i + 1 ) & 0x7 ) )		322060	1					
ANR	322096	Condition	! ( ( i + 1 ) & 0x7 )	196:12:6463:6478	322060	0	True				
ANR	322097	UnaryOperationExpression	! ( ( i + 1 ) & 0x7 )		322060	0					
ANR	322098	UnaryOperator	!		322060	0					
ANR	322099	BitAndExpression	( i + 1 ) & 0x7		322060	1		&			
ANR	322100	AdditiveExpression	i + 1		322060	0		+			
ANR	322101	Identifier	i		322060	0					
ANR	322102	PrimaryExpression	1		322060	1					
ANR	322103	PrimaryExpression	0x7		322060	1					
ANR	322104	CompoundStatement		6:30:124:124	322060	1					
ANR	322105	ExpressionStatement	"printf ( ""\\n    "" )"	197:12:6495:6511	322060	0	True				
ANR	322106	CallExpression	"printf ( ""\\n    "" )"		322060	0					
ANR	322107	Callee	printf		322060	0					
ANR	322108	Identifier	printf		322060	0					
ANR	322109	ArgumentList	"""\\n    """		322060	1					
ANR	322110	Argument	"""\\n    """		322060	0					
ANR	322111	PrimaryExpression	"""\\n    """		322060	0					
ANR	322112	ElseStatement	else		322060	0					
ANR	322113	CompoundStatement		8:15:171:171	322060	0					
ANR	322114	ExpressionStatement	"printf ( "" "" )"	199:12:6542:6553	322060	0	True				
ANR	322115	CallExpression	"printf ( "" "" )"		322060	0					
ANR	322116	Callee	printf		322060	0					
ANR	322117	Identifier	printf		322060	0					
ANR	322118	ArgumentList	""" """		322060	1					
ANR	322119	Argument	""" """		322060	0					
ANR	322120	PrimaryExpression	""" """		322060	0					
ANR	322121	ExpressionStatement	"printf ( ""0x%04x\\n};\\n\\n"" , array [ size ] )"	202:4:6575:6612	322060	3	True				
ANR	322122	CallExpression	"printf ( ""0x%04x\\n};\\n\\n"" , array [ size ] )"		322060	0					
ANR	322123	Callee	printf		322060	0					
ANR	322124	Identifier	printf		322060	0					
ANR	322125	ArgumentList	"""0x%04x\\n};\\n\\n"""		322060	1					
ANR	322126	Argument	"""0x%04x\\n};\\n\\n"""		322060	0					
ANR	322127	PrimaryExpression	"""0x%04x\\n};\\n\\n"""		322060	0					
ANR	322128	Argument	array [ size ]		322060	1					
ANR	322129	ArrayIndexing	array [ size ]		322060	0					
ANR	322130	Identifier	array		322060	0					
ANR	322131	Identifier	size		322060	1					
ANR	322132	ReturnType	static void		322060	1					
ANR	322133	Identifier	dump_array16		322060	2					
ANR	322134	ParameterList	"int array [ ] , int size"		322060	3					
ANR	322135	Parameter	int array [ ]	190:25:6333:6343	322060	0	True				
ANR	322136	ParameterType	int [ ]		322060	0					
ANR	322137	Identifier	array		322060	1					
ANR	322138	Parameter	int size	190:38:6346:6353	322060	1	True				
ANR	322139	ParameterType	int		322060	0					
ANR	322140	Identifier	size		322060	1					
ANR	322141	CFGEntryNode	ENTRY		322060		True				
ANR	322142	CFGExitNode	EXIT		322060		True				
ANR	322143	Symbol	* i		322060						
ANR	322144	Symbol	* size		322060						
ANR	322145	Symbol	size		322060						
ANR	322146	Symbol	array		322060						
ANR	322147	Symbol	i		322060						
ANR	322148	Symbol	* array		322060						
ANR	322149	Function	main	205:0:6617:10166							
ANR	322150	FunctionDef	"main (int argc , char * * argv)"		322149	0					
ANR	322151	CompoundStatement		206:0:6649:10166	322149	0					
ANR	322152	IdentifierDeclStatement	"unsigned int i , j ;"	207:4:6655:6672	322149	0	True				
ANR	322153	IdentifierDecl	i		322149	0					
ANR	322154	IdentifierDeclType	unsigned int		322149	0					
ANR	322155	Identifier	i		322149	1					
ANR	322156	IdentifierDecl	j		322149	1					
ANR	322157	IdentifierDeclType	unsigned int		322149	0					
ANR	322158	Identifier	j		322149	1					
ANR	322159	IdentifierDeclStatement	"double u , v , t ;"	208:4:6678:6692	322149	1	True				
ANR	322160	IdentifierDecl	u		322149	0					
ANR	322161	IdentifierDeclType	double		322149	0					
ANR	322162	Identifier	u		322149	1					
ANR	322163	IdentifierDecl	v		322149	1					
ANR	322164	IdentifierDeclType	double		322149	0					
ANR	322165	Identifier	v		322149	1					
ANR	322166	IdentifierDecl	t		322149	2					
ANR	322167	IdentifierDeclType	double		322149	0					
ANR	322168	Identifier	t		322149	1					
ANR	322169	IdentifierDeclStatement	int lut_ctxno_zc [ 2048 ] ;	210:4:6699:6721	322149	2	True				
ANR	322170	IdentifierDecl	lut_ctxno_zc [ 2048 ]		322149	0					
ANR	322171	IdentifierDeclType	int [ 2048 ]		322149	0					
ANR	322172	Identifier	lut_ctxno_zc		322149	1					
ANR	322173	PrimaryExpression	2048		322149	2					
ANR	322174	IdentifierDeclStatement	int lut_nmsedec_sig [ 1 << T1_NMSEDEC_BITS ] ;	211:4:6727:6768	322149	3	True				
ANR	322175	IdentifierDecl	lut_nmsedec_sig [ 1 << T1_NMSEDEC_BITS ]		322149	0					
ANR	322176	IdentifierDeclType	int [ 1 << T1_NMSEDEC_BITS ]		322149	0					
ANR	322177	Identifier	lut_nmsedec_sig		322149	1					
ANR	322178	ShiftExpression	1 << T1_NMSEDEC_BITS		322149	2		<<			
ANR	322179	PrimaryExpression	1		322149	0					
ANR	322180	Identifier	T1_NMSEDEC_BITS		322149	1					
ANR	322181	IdentifierDeclStatement	int lut_nmsedec_sig0 [ 1 << T1_NMSEDEC_BITS ] ;	212:4:6774:6816	322149	4	True				
ANR	322182	IdentifierDecl	lut_nmsedec_sig0 [ 1 << T1_NMSEDEC_BITS ]		322149	0					
ANR	322183	IdentifierDeclType	int [ 1 << T1_NMSEDEC_BITS ]		322149	0					
ANR	322184	Identifier	lut_nmsedec_sig0		322149	1					
ANR	322185	ShiftExpression	1 << T1_NMSEDEC_BITS		322149	2		<<			
ANR	322186	PrimaryExpression	1		322149	0					
ANR	322187	Identifier	T1_NMSEDEC_BITS		322149	1					
ANR	322188	IdentifierDeclStatement	int lut_nmsedec_ref [ 1 << T1_NMSEDEC_BITS ] ;	213:4:6822:6863	322149	5	True				
ANR	322189	IdentifierDecl	lut_nmsedec_ref [ 1 << T1_NMSEDEC_BITS ]		322149	0					
ANR	322190	IdentifierDeclType	int [ 1 << T1_NMSEDEC_BITS ]		322149	0					
ANR	322191	Identifier	lut_nmsedec_ref		322149	1					
ANR	322192	ShiftExpression	1 << T1_NMSEDEC_BITS		322149	2		<<			
ANR	322193	PrimaryExpression	1		322149	0					
ANR	322194	Identifier	T1_NMSEDEC_BITS		322149	1					
ANR	322195	IdentifierDeclStatement	int lut_nmsedec_ref0 [ 1 << T1_NMSEDEC_BITS ] ;	214:4:6869:6911	322149	6	True				
ANR	322196	IdentifierDecl	lut_nmsedec_ref0 [ 1 << T1_NMSEDEC_BITS ]		322149	0					
ANR	322197	IdentifierDeclType	int [ 1 << T1_NMSEDEC_BITS ]		322149	0					
ANR	322198	Identifier	lut_nmsedec_ref0		322149	1					
ANR	322199	ShiftExpression	1 << T1_NMSEDEC_BITS		322149	2		<<			
ANR	322200	PrimaryExpression	1		322149	0					
ANR	322201	Identifier	T1_NMSEDEC_BITS		322149	1					
ANR	322202	ExpressionStatement	( void ) argc	215:4:6917:6927	322149	7	True				
ANR	322203	CastExpression	( void ) argc		322149	0					
ANR	322204	CastTarget	void		322149	0					
ANR	322205	Identifier	argc		322149	1					
ANR	322206	ExpressionStatement	( void ) argv	216:4:6933:6943	322149	8	True				
ANR	322207	CastExpression	( void ) argv		322149	0					
ANR	322208	CastTarget	void		322149	0					
ANR	322209	Identifier	argv		322149	1					
ANR	322210	ExpressionStatement	"printf ( ""/* This file was automatically generated by t1_generate_luts.c */\\n\\n"" )"	218:4:6950:7029	322149	9	True				
ANR	322211	CallExpression	"printf ( ""/* This file was automatically generated by t1_generate_luts.c */\\n\\n"" )"		322149	0					
ANR	322212	Callee	printf		322149	0					
ANR	322213	Identifier	printf		322149	0					
ANR	322214	ArgumentList	"""/* This file was automatically generated by t1_generate_luts.c */\\n\\n"""		322149	1					
ANR	322215	Argument	"""/* This file was automatically generated by t1_generate_luts.c */\\n\\n"""		322149	0					
ANR	322216	PrimaryExpression	"""/* This file was automatically generated by t1_generate_luts.c */\\n\\n"""		322149	0					
ANR	322217	ForStatement	for ( j = 0 ; j < 4 ; ++ j )		322149	10					
ANR	322218	ForInit	j = 0 ;	221:9:7064:7069	322149	0	True				
ANR	322219	AssignmentExpression	j = 0		322149	0		=			
ANR	322220	Identifier	j		322149	0					
ANR	322221	PrimaryExpression	0		322149	1					
ANR	322222	Condition	j < 4	221:16:7071:7075	322149	1	True				
ANR	322223	RelationalExpression	j < 4		322149	0		<			
ANR	322224	Identifier	j		322149	0					
ANR	322225	PrimaryExpression	4		322149	1					
ANR	322226	UnaryExpression	++ j	221:23:7078:7080	322149	2	True				
ANR	322227	IncDec	++		322149	0					
ANR	322228	Identifier	j		322149	1					
ANR	322229	CompoundStatement		16:28:433:433	322149	3					
ANR	322230	ForStatement	for ( i = 0 ; i < 512 ; ++ i )		322149	0					
ANR	322231	ForInit	i = 0 ;	222:13:7098:7103	322149	0	True				
ANR	322232	AssignmentExpression	i = 0		322149	0		=			
ANR	322233	Identifier	i		322149	0					
ANR	322234	PrimaryExpression	0		322149	1					
ANR	322235	Condition	i < 512	222:20:7105:7111	322149	1	True				
ANR	322236	RelationalExpression	i < 512		322149	0		<			
ANR	322237	Identifier	i		322149	0					
ANR	322238	PrimaryExpression	512		322149	1					
ANR	322239	UnaryExpression	++ i	222:29:7114:7116	322149	2	True				
ANR	322240	IncDec	++		322149	0					
ANR	322241	Identifier	i		322149	1					
ANR	322242	CompoundStatement		18:12:483:504	322149	3					
ANR	322243	IdentifierDeclStatement	OPJ_UINT32 orient = j ;	223:12:7133:7154	322149	0	True				
ANR	322244	IdentifierDecl	orient = j		322149	0					
ANR	322245	IdentifierDeclType	OPJ_UINT32		322149	0					
ANR	322246	Identifier	orient		322149	1					
ANR	322247	AssignmentExpression	orient = j		322149	2		=			
ANR	322248	Identifier	j		322149	0					
ANR	322249	Identifier	j		322149	1					
ANR	322250	IfStatement	if ( orient == 2 )		322149	1					
ANR	322251	Condition	orient == 2	224:16:7172:7182	322149	0	True				
ANR	322252	EqualityExpression	orient == 2		322149	0		==			
ANR	322253	Identifier	orient		322149	0					
ANR	322254	PrimaryExpression	2		322149	1					
ANR	322255	CompoundStatement		19:29:535:535	322149	1					
ANR	322256	ExpressionStatement	orient = 1	225:16:7203:7213	322149	0	True				
ANR	322257	AssignmentExpression	orient = 1		322149	0		=			
ANR	322258	Identifier	orient		322149	0					
ANR	322259	PrimaryExpression	1		322149	1					
ANR	322260	ElseStatement	else		322149	0					
ANR	322261	IfStatement	if ( orient == 1 )		322149	0					
ANR	322262	Condition	orient == 1	226:23:7238:7248	322149	0	True				
ANR	322263	EqualityExpression	orient == 1		322149	0		==			
ANR	322264	Identifier	orient		322149	0					
ANR	322265	PrimaryExpression	1		322149	1					
ANR	322266	CompoundStatement		21:36:601:601	322149	1					
ANR	322267	ExpressionStatement	orient = 2	227:16:7269:7279	322149	0	True				
ANR	322268	AssignmentExpression	orient = 2		322149	0		=			
ANR	322269	Identifier	orient		322149	0					
ANR	322270	PrimaryExpression	2		322149	1					
ANR	322271	ExpressionStatement	"lut_ctxno_zc [ ( orient << 9 ) | i ] = t1_init_ctxno_zc ( i , j )"	229:12:7307:7363	322149	2	True				
ANR	322272	AssignmentExpression	"lut_ctxno_zc [ ( orient << 9 ) | i ] = t1_init_ctxno_zc ( i , j )"		322149	0		=			
ANR	322273	ArrayIndexing	lut_ctxno_zc [ ( orient << 9 ) | i ]		322149	0					
ANR	322274	Identifier	lut_ctxno_zc		322149	0					
ANR	322275	InclusiveOrExpression	( orient << 9 ) | i		322149	1		|			
ANR	322276	ShiftExpression	orient << 9		322149	0		<<			
ANR	322277	Identifier	orient		322149	0					
ANR	322278	PrimaryExpression	9		322149	1					
ANR	322279	Identifier	i		322149	1					
ANR	322280	CallExpression	"t1_init_ctxno_zc ( i , j )"		322149	1					
ANR	322281	Callee	t1_init_ctxno_zc		322149	0					
ANR	322282	Identifier	t1_init_ctxno_zc		322149	0					
ANR	322283	ArgumentList	i		322149	1					
ANR	322284	Argument	i		322149	0					
ANR	322285	Identifier	i		322149	0					
ANR	322286	Argument	j		322149	1					
ANR	322287	Identifier	j		322149	0					
ANR	322288	ExpressionStatement	"printf ( ""static const OPJ_BYTE lut_ctxno_zc[2048] = {\\n    "" )"	233:4:7386:7446	322149	11	True				
ANR	322289	CallExpression	"printf ( ""static const OPJ_BYTE lut_ctxno_zc[2048] = {\\n    "" )"		322149	0					
ANR	322290	Callee	printf		322149	0					
ANR	322291	Identifier	printf		322149	0					
ANR	322292	ArgumentList	"""static const OPJ_BYTE lut_ctxno_zc[2048] = {\\n    """		322149	1					
ANR	322293	Argument	"""static const OPJ_BYTE lut_ctxno_zc[2048] = {\\n    """		322149	0					
ANR	322294	PrimaryExpression	"""static const OPJ_BYTE lut_ctxno_zc[2048] = {\\n    """		322149	0					
ANR	322295	ForStatement	for ( i = 0 ; i < 2047 ; ++ i )		322149	12					
ANR	322296	ForInit	i = 0 ;	234:9:7457:7462	322149	0	True				
ANR	322297	AssignmentExpression	i = 0		322149	0		=			
ANR	322298	Identifier	i		322149	0					
ANR	322299	PrimaryExpression	0		322149	1					
ANR	322300	Condition	i < 2047	234:16:7464:7471	322149	1	True				
ANR	322301	RelationalExpression	i < 2047		322149	0		<			
ANR	322302	Identifier	i		322149	0					
ANR	322303	PrimaryExpression	2047		322149	1					
ANR	322304	UnaryExpression	++ i	234:26:7474:7476	322149	2	True				
ANR	322305	IncDec	++		322149	0					
ANR	322306	Identifier	i		322149	1					
ANR	322307	CompoundStatement		29:31:829:829	322149	3					
ANR	322308	ExpressionStatement	"printf ( ""%i,"" , lut_ctxno_zc [ i ] )"	235:8:7489:7519	322149	0	True				
ANR	322309	CallExpression	"printf ( ""%i,"" , lut_ctxno_zc [ i ] )"		322149	0					
ANR	322310	Callee	printf		322149	0					
ANR	322311	Identifier	printf		322149	0					
ANR	322312	ArgumentList	"""%i,"""		322149	1					
ANR	322313	Argument	"""%i,"""		322149	0					
ANR	322314	PrimaryExpression	"""%i,"""		322149	0					
ANR	322315	Argument	lut_ctxno_zc [ i ]		322149	1					
ANR	322316	ArrayIndexing	lut_ctxno_zc [ i ]		322149	0					
ANR	322317	Identifier	lut_ctxno_zc		322149	0					
ANR	322318	Identifier	i		322149	1					
ANR	322319	IfStatement	if ( ! ( ( i + 1 ) & 0x1f ) )		322149	1					
ANR	322320	Condition	! ( ( i + 1 ) & 0x1f )	236:12:7533:7549	322149	0	True				
ANR	322321	UnaryOperationExpression	! ( ( i + 1 ) & 0x1f )		322149	0					
ANR	322322	UnaryOperator	!		322149	0					
ANR	322323	BitAndExpression	( i + 1 ) & 0x1f		322149	1		&			
ANR	322324	AdditiveExpression	i + 1		322149	0		+			
ANR	322325	Identifier	i		322149	0					
ANR	322326	PrimaryExpression	1		322149	1					
ANR	322327	PrimaryExpression	0x1f		322149	1					
ANR	322328	CompoundStatement		31:31:902:902	322149	1					
ANR	322329	ExpressionStatement	"printf ( ""\\n    "" )"	237:12:7566:7582	322149	0	True				
ANR	322330	CallExpression	"printf ( ""\\n    "" )"		322149	0					
ANR	322331	Callee	printf		322149	0					
ANR	322332	Identifier	printf		322149	0					
ANR	322333	ArgumentList	"""\\n    """		322149	1					
ANR	322334	Argument	"""\\n    """		322149	0					
ANR	322335	PrimaryExpression	"""\\n    """		322149	0					
ANR	322336	ElseStatement	else		322149	0					
ANR	322337	CompoundStatement		33:15:949:949	322149	0					
ANR	322338	ExpressionStatement	"printf ( "" "" )"	239:12:7613:7624	322149	0	True				
ANR	322339	CallExpression	"printf ( "" "" )"		322149	0					
ANR	322340	Callee	printf		322149	0					
ANR	322341	Identifier	printf		322149	0					
ANR	322342	ArgumentList	""" """		322149	1					
ANR	322343	Argument	""" """		322149	0					
ANR	322344	PrimaryExpression	""" """		322149	0					
ANR	322345	ExpressionStatement	"printf ( ""%i\\n};\\n\\n"" , lut_ctxno_zc [ 2047 ] )"	242:4:7646:7686	322149	13	True				
ANR	322346	CallExpression	"printf ( ""%i\\n};\\n\\n"" , lut_ctxno_zc [ 2047 ] )"		322149	0					
ANR	322347	Callee	printf		322149	0					
ANR	322348	Identifier	printf		322149	0					
ANR	322349	ArgumentList	"""%i\\n};\\n\\n"""		322149	1					
ANR	322350	Argument	"""%i\\n};\\n\\n"""		322149	0					
ANR	322351	PrimaryExpression	"""%i\\n};\\n\\n"""		322149	0					
ANR	322352	Argument	lut_ctxno_zc [ 2047 ]		322149	1					
ANR	322353	ArrayIndexing	lut_ctxno_zc [ 2047 ]		322149	0					
ANR	322354	Identifier	lut_ctxno_zc		322149	0					
ANR	322355	PrimaryExpression	2047		322149	1					
ANR	322356	ExpressionStatement	"printf ( ""static const OPJ_BYTE lut_ctxno_sc[256] = {\\n    "" )"	245:4:7716:7775	322149	14	True				
ANR	322357	CallExpression	"printf ( ""static const OPJ_BYTE lut_ctxno_sc[256] = {\\n    "" )"		322149	0					
ANR	322358	Callee	printf		322149	0					
ANR	322359	Identifier	printf		322149	0					
ANR	322360	ArgumentList	"""static const OPJ_BYTE lut_ctxno_sc[256] = {\\n    """		322149	1					
ANR	322361	Argument	"""static const OPJ_BYTE lut_ctxno_sc[256] = {\\n    """		322149	0					
ANR	322362	PrimaryExpression	"""static const OPJ_BYTE lut_ctxno_sc[256] = {\\n    """		322149	0					
ANR	322363	ForStatement	for ( i = 0 ; i < 255 ; ++ i )		322149	15					
ANR	322364	ForInit	i = 0 ;	246:9:7786:7791	322149	0	True				
ANR	322365	AssignmentExpression	i = 0		322149	0		=			
ANR	322366	Identifier	i		322149	0					
ANR	322367	PrimaryExpression	0		322149	1					
ANR	322368	Condition	i < 255	246:16:7793:7799	322149	1	True				
ANR	322369	RelationalExpression	i < 255		322149	0		<			
ANR	322370	Identifier	i		322149	0					
ANR	322371	PrimaryExpression	255		322149	1					
ANR	322372	UnaryExpression	++ i	246:25:7802:7804	322149	2	True				
ANR	322373	IncDec	++		322149	0					
ANR	322374	Identifier	i		322149	1					
ANR	322375	CompoundStatement		41:30:1157:1157	322149	3					
ANR	322376	ExpressionStatement	"printf ( ""0x%x,"" , t1_init_ctxno_sc ( i ) )"	247:8:7817:7853	322149	0	True				
ANR	322377	CallExpression	"printf ( ""0x%x,"" , t1_init_ctxno_sc ( i ) )"		322149	0					
ANR	322378	Callee	printf		322149	0					
ANR	322379	Identifier	printf		322149	0					
ANR	322380	ArgumentList	"""0x%x,"""		322149	1					
ANR	322381	Argument	"""0x%x,"""		322149	0					
ANR	322382	PrimaryExpression	"""0x%x,"""		322149	0					
ANR	322383	Argument	t1_init_ctxno_sc ( i )		322149	1					
ANR	322384	CallExpression	t1_init_ctxno_sc ( i )		322149	0					
ANR	322385	Callee	t1_init_ctxno_sc		322149	0					
ANR	322386	Identifier	t1_init_ctxno_sc		322149	0					
ANR	322387	ArgumentList	i		322149	1					
ANR	322388	Argument	i		322149	0					
ANR	322389	Identifier	i		322149	0					
ANR	322390	IfStatement	if ( ! ( ( i + 1 ) & 0xf ) )		322149	1					
ANR	322391	Condition	! ( ( i + 1 ) & 0xf )	248:12:7867:7882	322149	0	True				
ANR	322392	UnaryOperationExpression	! ( ( i + 1 ) & 0xf )		322149	0					
ANR	322393	UnaryOperator	!		322149	0					
ANR	322394	BitAndExpression	( i + 1 ) & 0xf		322149	1		&			
ANR	322395	AdditiveExpression	i + 1		322149	0		+			
ANR	322396	Identifier	i		322149	0					
ANR	322397	PrimaryExpression	1		322149	1					
ANR	322398	PrimaryExpression	0xf		322149	1					
ANR	322399	CompoundStatement		43:30:1235:1235	322149	1					
ANR	322400	ExpressionStatement	"printf ( ""\\n    "" )"	249:12:7899:7915	322149	0	True				
ANR	322401	CallExpression	"printf ( ""\\n    "" )"		322149	0					
ANR	322402	Callee	printf		322149	0					
ANR	322403	Identifier	printf		322149	0					
ANR	322404	ArgumentList	"""\\n    """		322149	1					
ANR	322405	Argument	"""\\n    """		322149	0					
ANR	322406	PrimaryExpression	"""\\n    """		322149	0					
ANR	322407	ElseStatement	else		322149	0					
ANR	322408	CompoundStatement		45:15:1282:1282	322149	0					
ANR	322409	ExpressionStatement	"printf ( "" "" )"	251:12:7946:7957	322149	0	True				
ANR	322410	CallExpression	"printf ( "" "" )"		322149	0					
ANR	322411	Callee	printf		322149	0					
ANR	322412	Identifier	printf		322149	0					
ANR	322413	ArgumentList	""" """		322149	1					
ANR	322414	Argument	""" """		322149	0					
ANR	322415	PrimaryExpression	""" """		322149	0					
ANR	322416	ExpressionStatement	"printf ( ""0x%x\\n};\\n\\n"" , t1_init_ctxno_sc ( 255 ) )"	254:4:7979:8024	322149	16	True				
ANR	322417	CallExpression	"printf ( ""0x%x\\n};\\n\\n"" , t1_init_ctxno_sc ( 255 ) )"		322149	0					
ANR	322418	Callee	printf		322149	0					
ANR	322419	Identifier	printf		322149	0					
ANR	322420	ArgumentList	"""0x%x\\n};\\n\\n"""		322149	1					
ANR	322421	Argument	"""0x%x\\n};\\n\\n"""		322149	0					
ANR	322422	PrimaryExpression	"""0x%x\\n};\\n\\n"""		322149	0					
ANR	322423	Argument	t1_init_ctxno_sc ( 255 )		322149	1					
ANR	322424	CallExpression	t1_init_ctxno_sc ( 255 )		322149	0					
ANR	322425	Callee	t1_init_ctxno_sc		322149	0					
ANR	322426	Identifier	t1_init_ctxno_sc		322149	0					
ANR	322427	ArgumentList	255		322149	1					
ANR	322428	Argument	255		322149	0					
ANR	322429	PrimaryExpression	255		322149	0					
ANR	322430	ExpressionStatement	"printf ( ""static const OPJ_BYTE lut_spb[256] = {\\n    "" )"	257:4:8049:8103	322149	17	True				
ANR	322431	CallExpression	"printf ( ""static const OPJ_BYTE lut_spb[256] = {\\n    "" )"		322149	0					
ANR	322432	Callee	printf		322149	0					
ANR	322433	Identifier	printf		322149	0					
ANR	322434	ArgumentList	"""static const OPJ_BYTE lut_spb[256] = {\\n    """		322149	1					
ANR	322435	Argument	"""static const OPJ_BYTE lut_spb[256] = {\\n    """		322149	0					
ANR	322436	PrimaryExpression	"""static const OPJ_BYTE lut_spb[256] = {\\n    """		322149	0					
ANR	322437	ForStatement	for ( i = 0 ; i < 255 ; ++ i )		322149	18					
ANR	322438	ForInit	i = 0 ;	258:9:8114:8119	322149	0	True				
ANR	322439	AssignmentExpression	i = 0		322149	0		=			
ANR	322440	Identifier	i		322149	0					
ANR	322441	PrimaryExpression	0		322149	1					
ANR	322442	Condition	i < 255	258:16:8121:8127	322149	1	True				
ANR	322443	RelationalExpression	i < 255		322149	0		<			
ANR	322444	Identifier	i		322149	0					
ANR	322445	PrimaryExpression	255		322149	1					
ANR	322446	UnaryExpression	++ i	258:25:8130:8132	322149	2	True				
ANR	322447	IncDec	++		322149	0					
ANR	322448	Identifier	i		322149	1					
ANR	322449	CompoundStatement		53:30:1485:1485	322149	3					
ANR	322450	ExpressionStatement	"printf ( ""%i,"" , t1_init_spb ( i ) )"	259:8:8145:8174	322149	0	True				
ANR	322451	CallExpression	"printf ( ""%i,"" , t1_init_spb ( i ) )"		322149	0					
ANR	322452	Callee	printf		322149	0					
ANR	322453	Identifier	printf		322149	0					
ANR	322454	ArgumentList	"""%i,"""		322149	1					
ANR	322455	Argument	"""%i,"""		322149	0					
ANR	322456	PrimaryExpression	"""%i,"""		322149	0					
ANR	322457	Argument	t1_init_spb ( i )		322149	1					
ANR	322458	CallExpression	t1_init_spb ( i )		322149	0					
ANR	322459	Callee	t1_init_spb		322149	0					
ANR	322460	Identifier	t1_init_spb		322149	0					
ANR	322461	ArgumentList	i		322149	1					
ANR	322462	Argument	i		322149	0					
ANR	322463	Identifier	i		322149	0					
ANR	322464	IfStatement	if ( ! ( ( i + 1 ) & 0x1f ) )		322149	1					
ANR	322465	Condition	! ( ( i + 1 ) & 0x1f )	260:12:8188:8204	322149	0	True				
ANR	322466	UnaryOperationExpression	! ( ( i + 1 ) & 0x1f )		322149	0					
ANR	322467	UnaryOperator	!		322149	0					
ANR	322468	BitAndExpression	( i + 1 ) & 0x1f		322149	1		&			
ANR	322469	AdditiveExpression	i + 1		322149	0		+			
ANR	322470	Identifier	i		322149	0					
ANR	322471	PrimaryExpression	1		322149	1					
ANR	322472	PrimaryExpression	0x1f		322149	1					
ANR	322473	CompoundStatement		55:31:1557:1557	322149	1					
ANR	322474	ExpressionStatement	"printf ( ""\\n    "" )"	261:12:8221:8237	322149	0	True				
ANR	322475	CallExpression	"printf ( ""\\n    "" )"		322149	0					
ANR	322476	Callee	printf		322149	0					
ANR	322477	Identifier	printf		322149	0					
ANR	322478	ArgumentList	"""\\n    """		322149	1					
ANR	322479	Argument	"""\\n    """		322149	0					
ANR	322480	PrimaryExpression	"""\\n    """		322149	0					
ANR	322481	ElseStatement	else		322149	0					
ANR	322482	CompoundStatement		57:15:1604:1604	322149	0					
ANR	322483	ExpressionStatement	"printf ( "" "" )"	263:12:8268:8279	322149	0	True				
ANR	322484	CallExpression	"printf ( "" "" )"		322149	0					
ANR	322485	Callee	printf		322149	0					
ANR	322486	Identifier	printf		322149	0					
ANR	322487	ArgumentList	""" """		322149	1					
ANR	322488	Argument	""" """		322149	0					
ANR	322489	PrimaryExpression	""" """		322149	0					
ANR	322490	ExpressionStatement	"printf ( ""%i\\n};\\n\\n"" , t1_init_spb ( 255 ) )"	266:4:8301:8339	322149	19	True				
ANR	322491	CallExpression	"printf ( ""%i\\n};\\n\\n"" , t1_init_spb ( 255 ) )"		322149	0					
ANR	322492	Callee	printf		322149	0					
ANR	322493	Identifier	printf		322149	0					
ANR	322494	ArgumentList	"""%i\\n};\\n\\n"""		322149	1					
ANR	322495	Argument	"""%i\\n};\\n\\n"""		322149	0					
ANR	322496	PrimaryExpression	"""%i\\n};\\n\\n"""		322149	0					
ANR	322497	Argument	t1_init_spb ( 255 )		322149	1					
ANR	322498	CallExpression	t1_init_spb ( 255 )		322149	0					
ANR	322499	Callee	t1_init_spb		322149	0					
ANR	322500	Identifier	t1_init_spb		322149	0					
ANR	322501	ArgumentList	255		322149	1					
ANR	322502	Argument	255		322149	0					
ANR	322503	PrimaryExpression	255		322149	0					
ANR	322504	ForStatement	for ( i = 0U ; i < ( 1U << T1_NMSEDEC_BITS ) ; ++ i )		322149	20					
ANR	322505	ForInit	i = 0U ;	270:9:8424:8430	322149	0	True				
ANR	322506	AssignmentExpression	i = 0U		322149	0		=			
ANR	322507	Identifier	i		322149	0					
ANR	322508	PrimaryExpression	0U		322149	1					
ANR	322509	Condition	i < ( 1U << T1_NMSEDEC_BITS )	270:17:8432:8458	322149	1	True				
ANR	322510	RelationalExpression	i < ( 1U << T1_NMSEDEC_BITS )		322149	0		<			
ANR	322511	Identifier	i		322149	0					
ANR	322512	ShiftExpression	1U << T1_NMSEDEC_BITS		322149	1		<<			
ANR	322513	PrimaryExpression	1U		322149	0					
ANR	322514	Identifier	T1_NMSEDEC_BITS		322149	1					
ANR	322515	UnaryExpression	++ i	270:46:8461:8463	322149	2	True				
ANR	322516	IncDec	++		322149	0					
ANR	322517	Identifier	i		322149	1					
ANR	322518	CompoundStatement		65:51:1816:1816	322149	3					
ANR	322519	ExpressionStatement	"t = i / pow ( 2 , T1_NMSEDEC_FRACBITS )"	271:8:8476:8511	322149	0	True				
ANR	322520	AssignmentExpression	"t = i / pow ( 2 , T1_NMSEDEC_FRACBITS )"		322149	0		=			
ANR	322521	Identifier	t		322149	0					
ANR	322522	MultiplicativeExpression	"i / pow ( 2 , T1_NMSEDEC_FRACBITS )"		322149	1		/			
ANR	322523	Identifier	i		322149	0					
ANR	322524	CallExpression	"pow ( 2 , T1_NMSEDEC_FRACBITS )"		322149	1					
ANR	322525	Callee	pow		322149	0					
ANR	322526	Identifier	pow		322149	0					
ANR	322527	ArgumentList	2		322149	1					
ANR	322528	Argument	2		322149	0					
ANR	322529	PrimaryExpression	2		322149	0					
ANR	322530	Argument	T1_NMSEDEC_FRACBITS		322149	1					
ANR	322531	Identifier	T1_NMSEDEC_FRACBITS		322149	0					
ANR	322532	ExpressionStatement	u = t	272:8:8521:8526	322149	1	True				
ANR	322533	AssignmentExpression	u = t		322149	0		=			
ANR	322534	Identifier	u		322149	0					
ANR	322535	Identifier	t		322149	1					
ANR	322536	ExpressionStatement	v = t - 1.5	273:8:8536:8547	322149	2	True				
ANR	322537	AssignmentExpression	v = t - 1.5		322149	0		=			
ANR	322538	Identifier	v		322149	0					
ANR	322539	AdditiveExpression	t - 1.5		322149	1		-			
ANR	322540	Identifier	t		322149	0					
ANR	322541	PrimaryExpression	1.5		322149	1					
ANR	322542	ExpressionStatement	"lut_nmsedec_sig [ i ] = opj_int_max ( 0 , ( int ) ( floor ( ( u * u - v * v ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 ) / pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0 ) )"	274:8:8557:8766	322149	3	True				
ANR	322543	AssignmentExpression	"lut_nmsedec_sig [ i ] = opj_int_max ( 0 , ( int ) ( floor ( ( u * u - v * v ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 ) / pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0 ) )"		322149	0		=			
ANR	322544	ArrayIndexing	lut_nmsedec_sig [ i ]		322149	0					
ANR	322545	Identifier	lut_nmsedec_sig		322149	0					
ANR	322546	Identifier	i		322149	1					
ANR	322547	CallExpression	"opj_int_max ( 0 , ( int ) ( floor ( ( u * u - v * v ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 ) / pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0 ) )"		322149	1					
ANR	322548	Callee	opj_int_max		322149	0					
ANR	322549	Identifier	opj_int_max		322149	0					
ANR	322550	ArgumentList	0		322149	1					
ANR	322551	Argument	0		322149	0					
ANR	322552	PrimaryExpression	0		322149	0					
ANR	322553	Argument	"( int ) ( floor ( ( u * u - v * v ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 ) / pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0 )"		322149	1					
ANR	322554	CastExpression	"( int ) ( floor ( ( u * u - v * v ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 ) / pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0 )"		322149	0					
ANR	322555	CastTarget	int		322149	0					
ANR	322556	MultiplicativeExpression	"floor ( ( u * u - v * v ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 ) / pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0"		322149	1		/			
ANR	322557	CallExpression	"floor ( ( u * u - v * v ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 )"		322149	0					
ANR	322558	Callee	floor		322149	0					
ANR	322559	Identifier	floor		322149	0					
ANR	322560	ArgumentList	"( u * u - v * v ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5"		322149	1					
ANR	322561	Argument	"( u * u - v * v ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5"		322149	0					
ANR	322562	AdditiveExpression	"( u * u - v * v ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5"		322149	0		+			
ANR	322563	MultiplicativeExpression	"( u * u - v * v ) * pow ( 2 , T1_NMSEDEC_FRACBITS )"		322149	0		*			
ANR	322564	AdditiveExpression	u * u - v * v		322149	0		-			
ANR	322565	MultiplicativeExpression	u * u		322149	0		*			
ANR	322566	Identifier	u		322149	0					
ANR	322567	Identifier	u		322149	1					
ANR	322568	MultiplicativeExpression	v * v		322149	1		*			
ANR	322569	Identifier	v		322149	0					
ANR	322570	Identifier	v		322149	1					
ANR	322571	CallExpression	"pow ( 2 , T1_NMSEDEC_FRACBITS )"		322149	1					
ANR	322572	Callee	pow		322149	0					
ANR	322573	Identifier	pow		322149	0					
ANR	322574	ArgumentList	2		322149	1					
ANR	322575	Argument	2		322149	0					
ANR	322576	PrimaryExpression	2		322149	0					
ANR	322577	Argument	T1_NMSEDEC_FRACBITS		322149	1					
ANR	322578	Identifier	T1_NMSEDEC_FRACBITS		322149	0					
ANR	322579	PrimaryExpression	0.5		322149	1					
ANR	322580	MultiplicativeExpression	"pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0"		322149	1		*			
ANR	322581	CallExpression	"pow ( 2 , T1_NMSEDEC_FRACBITS )"		322149	0					
ANR	322582	Callee	pow		322149	0					
ANR	322583	Identifier	pow		322149	0					
ANR	322584	ArgumentList	2		322149	1					
ANR	322585	Argument	2		322149	0					
ANR	322586	PrimaryExpression	2		322149	0					
ANR	322587	Argument	T1_NMSEDEC_FRACBITS		322149	1					
ANR	322588	Identifier	T1_NMSEDEC_FRACBITS		322149	0					
ANR	322589	PrimaryExpression	8192.0		322149	1					
ANR	322590	ExpressionStatement	"lut_nmsedec_sig0 [ i ] = opj_int_max ( 0 , ( int ) ( floor ( ( u * u ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 ) / pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0 ) )"	278:8:8776:8978	322149	4	True				
ANR	322591	AssignmentExpression	"lut_nmsedec_sig0 [ i ] = opj_int_max ( 0 , ( int ) ( floor ( ( u * u ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 ) / pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0 ) )"		322149	0		=			
ANR	322592	ArrayIndexing	lut_nmsedec_sig0 [ i ]		322149	0					
ANR	322593	Identifier	lut_nmsedec_sig0		322149	0					
ANR	322594	Identifier	i		322149	1					
ANR	322595	CallExpression	"opj_int_max ( 0 , ( int ) ( floor ( ( u * u ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 ) / pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0 ) )"		322149	1					
ANR	322596	Callee	opj_int_max		322149	0					
ANR	322597	Identifier	opj_int_max		322149	0					
ANR	322598	ArgumentList	0		322149	1					
ANR	322599	Argument	0		322149	0					
ANR	322600	PrimaryExpression	0		322149	0					
ANR	322601	Argument	"( int ) ( floor ( ( u * u ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 ) / pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0 )"		322149	1					
ANR	322602	CastExpression	"( int ) ( floor ( ( u * u ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 ) / pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0 )"		322149	0					
ANR	322603	CastTarget	int		322149	0					
ANR	322604	MultiplicativeExpression	"floor ( ( u * u ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 ) / pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0"		322149	1		/			
ANR	322605	CallExpression	"floor ( ( u * u ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 )"		322149	0					
ANR	322606	Callee	floor		322149	0					
ANR	322607	Identifier	floor		322149	0					
ANR	322608	ArgumentList	"( u * u ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5"		322149	1					
ANR	322609	Argument	"( u * u ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5"		322149	0					
ANR	322610	AdditiveExpression	"( u * u ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5"		322149	0		+			
ANR	322611	MultiplicativeExpression	"( u * u ) * pow ( 2 , T1_NMSEDEC_FRACBITS )"		322149	0		*			
ANR	322612	MultiplicativeExpression	u * u		322149	0		*			
ANR	322613	Identifier	u		322149	0					
ANR	322614	Identifier	u		322149	1					
ANR	322615	CallExpression	"pow ( 2 , T1_NMSEDEC_FRACBITS )"		322149	1					
ANR	322616	Callee	pow		322149	0					
ANR	322617	Identifier	pow		322149	0					
ANR	322618	ArgumentList	2		322149	1					
ANR	322619	Argument	2		322149	0					
ANR	322620	PrimaryExpression	2		322149	0					
ANR	322621	Argument	T1_NMSEDEC_FRACBITS		322149	1					
ANR	322622	Identifier	T1_NMSEDEC_FRACBITS		322149	0					
ANR	322623	PrimaryExpression	0.5		322149	1					
ANR	322624	MultiplicativeExpression	"pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0"		322149	1		*			
ANR	322625	CallExpression	"pow ( 2 , T1_NMSEDEC_FRACBITS )"		322149	0					
ANR	322626	Callee	pow		322149	0					
ANR	322627	Identifier	pow		322149	0					
ANR	322628	ArgumentList	2		322149	1					
ANR	322629	Argument	2		322149	0					
ANR	322630	PrimaryExpression	2		322149	0					
ANR	322631	Argument	T1_NMSEDEC_FRACBITS		322149	1					
ANR	322632	Identifier	T1_NMSEDEC_FRACBITS		322149	0					
ANR	322633	PrimaryExpression	8192.0		322149	1					
ANR	322634	ExpressionStatement	u = t - 1.0	282:8:8988:8999	322149	5	True				
ANR	322635	AssignmentExpression	u = t - 1.0		322149	0		=			
ANR	322636	Identifier	u		322149	0					
ANR	322637	AdditiveExpression	t - 1.0		322149	1		-			
ANR	322638	Identifier	t		322149	0					
ANR	322639	PrimaryExpression	1.0		322149	1					
ANR	322640	IfStatement	if ( i & ( 1 << ( T1_NMSEDEC_BITS - 1 ) ) )		322149	6					
ANR	322641	Condition	i & ( 1 << ( T1_NMSEDEC_BITS - 1 ) )	283:12:9013:9044	322149	0	True				
ANR	322642	BitAndExpression	i & ( 1 << ( T1_NMSEDEC_BITS - 1 ) )		322149	0		&			
ANR	322643	Identifier	i		322149	0					
ANR	322644	ShiftExpression	1 << ( T1_NMSEDEC_BITS - 1 )		322149	1		<<			
ANR	322645	PrimaryExpression	1		322149	0					
ANR	322646	AdditiveExpression	T1_NMSEDEC_BITS - 1		322149	1		-			
ANR	322647	Identifier	T1_NMSEDEC_BITS		322149	0					
ANR	322648	PrimaryExpression	1		322149	1					
ANR	322649	CompoundStatement		78:46:2397:2397	322149	1					
ANR	322650	ExpressionStatement	v = t - 1.5	284:12:9061:9072	322149	0	True				
ANR	322651	AssignmentExpression	v = t - 1.5		322149	0		=			
ANR	322652	Identifier	v		322149	0					
ANR	322653	AdditiveExpression	t - 1.5		322149	1		-			
ANR	322654	Identifier	t		322149	0					
ANR	322655	PrimaryExpression	1.5		322149	1					
ANR	322656	ElseStatement	else		322149	0					
ANR	322657	CompoundStatement		80:15:2439:2439	322149	0					
ANR	322658	ExpressionStatement	v = t - 0.5	286:12:9103:9114	322149	0	True				
ANR	322659	AssignmentExpression	v = t - 0.5		322149	0		=			
ANR	322660	Identifier	v		322149	0					
ANR	322661	AdditiveExpression	t - 0.5		322149	1		-			
ANR	322662	Identifier	t		322149	0					
ANR	322663	PrimaryExpression	0.5		322149	1					
ANR	322664	ExpressionStatement	"lut_nmsedec_ref [ i ] = opj_int_max ( 0 , ( int ) ( floor ( ( u * u - v * v ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 ) / pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0 ) )"	288:8:9134:9343	322149	7	True				
ANR	322665	AssignmentExpression	"lut_nmsedec_ref [ i ] = opj_int_max ( 0 , ( int ) ( floor ( ( u * u - v * v ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 ) / pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0 ) )"		322149	0		=			
ANR	322666	ArrayIndexing	lut_nmsedec_ref [ i ]		322149	0					
ANR	322667	Identifier	lut_nmsedec_ref		322149	0					
ANR	322668	Identifier	i		322149	1					
ANR	322669	CallExpression	"opj_int_max ( 0 , ( int ) ( floor ( ( u * u - v * v ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 ) / pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0 ) )"		322149	1					
ANR	322670	Callee	opj_int_max		322149	0					
ANR	322671	Identifier	opj_int_max		322149	0					
ANR	322672	ArgumentList	0		322149	1					
ANR	322673	Argument	0		322149	0					
ANR	322674	PrimaryExpression	0		322149	0					
ANR	322675	Argument	"( int ) ( floor ( ( u * u - v * v ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 ) / pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0 )"		322149	1					
ANR	322676	CastExpression	"( int ) ( floor ( ( u * u - v * v ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 ) / pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0 )"		322149	0					
ANR	322677	CastTarget	int		322149	0					
ANR	322678	MultiplicativeExpression	"floor ( ( u * u - v * v ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 ) / pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0"		322149	1		/			
ANR	322679	CallExpression	"floor ( ( u * u - v * v ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 )"		322149	0					
ANR	322680	Callee	floor		322149	0					
ANR	322681	Identifier	floor		322149	0					
ANR	322682	ArgumentList	"( u * u - v * v ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5"		322149	1					
ANR	322683	Argument	"( u * u - v * v ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5"		322149	0					
ANR	322684	AdditiveExpression	"( u * u - v * v ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5"		322149	0		+			
ANR	322685	MultiplicativeExpression	"( u * u - v * v ) * pow ( 2 , T1_NMSEDEC_FRACBITS )"		322149	0		*			
ANR	322686	AdditiveExpression	u * u - v * v		322149	0		-			
ANR	322687	MultiplicativeExpression	u * u		322149	0		*			
ANR	322688	Identifier	u		322149	0					
ANR	322689	Identifier	u		322149	1					
ANR	322690	MultiplicativeExpression	v * v		322149	1		*			
ANR	322691	Identifier	v		322149	0					
ANR	322692	Identifier	v		322149	1					
ANR	322693	CallExpression	"pow ( 2 , T1_NMSEDEC_FRACBITS )"		322149	1					
ANR	322694	Callee	pow		322149	0					
ANR	322695	Identifier	pow		322149	0					
ANR	322696	ArgumentList	2		322149	1					
ANR	322697	Argument	2		322149	0					
ANR	322698	PrimaryExpression	2		322149	0					
ANR	322699	Argument	T1_NMSEDEC_FRACBITS		322149	1					
ANR	322700	Identifier	T1_NMSEDEC_FRACBITS		322149	0					
ANR	322701	PrimaryExpression	0.5		322149	1					
ANR	322702	MultiplicativeExpression	"pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0"		322149	1		*			
ANR	322703	CallExpression	"pow ( 2 , T1_NMSEDEC_FRACBITS )"		322149	0					
ANR	322704	Callee	pow		322149	0					
ANR	322705	Identifier	pow		322149	0					
ANR	322706	ArgumentList	2		322149	1					
ANR	322707	Argument	2		322149	0					
ANR	322708	PrimaryExpression	2		322149	0					
ANR	322709	Argument	T1_NMSEDEC_FRACBITS		322149	1					
ANR	322710	Identifier	T1_NMSEDEC_FRACBITS		322149	0					
ANR	322711	PrimaryExpression	8192.0		322149	1					
ANR	322712	ExpressionStatement	"lut_nmsedec_ref0 [ i ] = opj_int_max ( 0 , ( int ) ( floor ( ( u * u ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 ) / pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0 ) )"	292:8:9353:9555	322149	8	True				
ANR	322713	AssignmentExpression	"lut_nmsedec_ref0 [ i ] = opj_int_max ( 0 , ( int ) ( floor ( ( u * u ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 ) / pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0 ) )"		322149	0		=			
ANR	322714	ArrayIndexing	lut_nmsedec_ref0 [ i ]		322149	0					
ANR	322715	Identifier	lut_nmsedec_ref0		322149	0					
ANR	322716	Identifier	i		322149	1					
ANR	322717	CallExpression	"opj_int_max ( 0 , ( int ) ( floor ( ( u * u ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 ) / pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0 ) )"		322149	1					
ANR	322718	Callee	opj_int_max		322149	0					
ANR	322719	Identifier	opj_int_max		322149	0					
ANR	322720	ArgumentList	0		322149	1					
ANR	322721	Argument	0		322149	0					
ANR	322722	PrimaryExpression	0		322149	0					
ANR	322723	Argument	"( int ) ( floor ( ( u * u ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 ) / pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0 )"		322149	1					
ANR	322724	CastExpression	"( int ) ( floor ( ( u * u ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 ) / pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0 )"		322149	0					
ANR	322725	CastTarget	int		322149	0					
ANR	322726	MultiplicativeExpression	"floor ( ( u * u ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 ) / pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0"		322149	1		/			
ANR	322727	CallExpression	"floor ( ( u * u ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5 )"		322149	0					
ANR	322728	Callee	floor		322149	0					
ANR	322729	Identifier	floor		322149	0					
ANR	322730	ArgumentList	"( u * u ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5"		322149	1					
ANR	322731	Argument	"( u * u ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5"		322149	0					
ANR	322732	AdditiveExpression	"( u * u ) * pow ( 2 , T1_NMSEDEC_FRACBITS ) + 0.5"		322149	0		+			
ANR	322733	MultiplicativeExpression	"( u * u ) * pow ( 2 , T1_NMSEDEC_FRACBITS )"		322149	0		*			
ANR	322734	MultiplicativeExpression	u * u		322149	0		*			
ANR	322735	Identifier	u		322149	0					
ANR	322736	Identifier	u		322149	1					
ANR	322737	CallExpression	"pow ( 2 , T1_NMSEDEC_FRACBITS )"		322149	1					
ANR	322738	Callee	pow		322149	0					
ANR	322739	Identifier	pow		322149	0					
ANR	322740	ArgumentList	2		322149	1					
ANR	322741	Argument	2		322149	0					
ANR	322742	PrimaryExpression	2		322149	0					
ANR	322743	Argument	T1_NMSEDEC_FRACBITS		322149	1					
ANR	322744	Identifier	T1_NMSEDEC_FRACBITS		322149	0					
ANR	322745	PrimaryExpression	0.5		322149	1					
ANR	322746	MultiplicativeExpression	"pow ( 2 , T1_NMSEDEC_FRACBITS ) * 8192.0"		322149	1		*			
ANR	322747	CallExpression	"pow ( 2 , T1_NMSEDEC_FRACBITS )"		322149	0					
ANR	322748	Callee	pow		322149	0					
ANR	322749	Identifier	pow		322149	0					
ANR	322750	ArgumentList	2		322149	1					
ANR	322751	Argument	2		322149	0					
ANR	322752	PrimaryExpression	2		322149	0					
ANR	322753	Argument	T1_NMSEDEC_FRACBITS		322149	1					
ANR	322754	Identifier	T1_NMSEDEC_FRACBITS		322149	0					
ANR	322755	PrimaryExpression	8192.0		322149	1					
ANR	322756	ExpressionStatement	"printf ( ""static const OPJ_INT16 lut_nmsedec_sig[1U << T1_NMSEDEC_BITS] = {\\n    "" )"	298:4:9568:9649	322149	21	True				
ANR	322757	CallExpression	"printf ( ""static const OPJ_INT16 lut_nmsedec_sig[1U << T1_NMSEDEC_BITS] = {\\n    "" )"		322149	0					
ANR	322758	Callee	printf		322149	0					
ANR	322759	Identifier	printf		322149	0					
ANR	322760	ArgumentList	"""static const OPJ_INT16 lut_nmsedec_sig[1U << T1_NMSEDEC_BITS] = {\\n    """		322149	1					
ANR	322761	Argument	"""static const OPJ_INT16 lut_nmsedec_sig[1U << T1_NMSEDEC_BITS] = {\\n    """		322149	0					
ANR	322762	PrimaryExpression	"""static const OPJ_INT16 lut_nmsedec_sig[1U << T1_NMSEDEC_BITS] = {\\n    """		322149	0					
ANR	322763	ExpressionStatement	"dump_array16 ( lut_nmsedec_sig , 1U << T1_NMSEDEC_BITS )"	299:4:9655:9707	322149	22	True				
ANR	322764	CallExpression	"dump_array16 ( lut_nmsedec_sig , 1U << T1_NMSEDEC_BITS )"		322149	0					
ANR	322765	Callee	dump_array16		322149	0					
ANR	322766	Identifier	dump_array16		322149	0					
ANR	322767	ArgumentList	lut_nmsedec_sig		322149	1					
ANR	322768	Argument	lut_nmsedec_sig		322149	0					
ANR	322769	Identifier	lut_nmsedec_sig		322149	0					
ANR	322770	Argument	1U << T1_NMSEDEC_BITS		322149	1					
ANR	322771	ShiftExpression	1U << T1_NMSEDEC_BITS		322149	0		<<			
ANR	322772	PrimaryExpression	1U		322149	0					
ANR	322773	Identifier	T1_NMSEDEC_BITS		322149	1					
ANR	322774	ExpressionStatement	"printf ( ""static const OPJ_INT16 lut_nmsedec_sig0[1U << T1_NMSEDEC_BITS] = {\\n    "" )"	301:4:9714:9796	322149	23	True				
ANR	322775	CallExpression	"printf ( ""static const OPJ_INT16 lut_nmsedec_sig0[1U << T1_NMSEDEC_BITS] = {\\n    "" )"		322149	0					
ANR	322776	Callee	printf		322149	0					
ANR	322777	Identifier	printf		322149	0					
ANR	322778	ArgumentList	"""static const OPJ_INT16 lut_nmsedec_sig0[1U << T1_NMSEDEC_BITS] = {\\n    """		322149	1					
ANR	322779	Argument	"""static const OPJ_INT16 lut_nmsedec_sig0[1U << T1_NMSEDEC_BITS] = {\\n    """		322149	0					
ANR	322780	PrimaryExpression	"""static const OPJ_INT16 lut_nmsedec_sig0[1U << T1_NMSEDEC_BITS] = {\\n    """		322149	0					
ANR	322781	ExpressionStatement	"dump_array16 ( lut_nmsedec_sig0 , 1U << T1_NMSEDEC_BITS )"	302:4:9802:9855	322149	24	True				
ANR	322782	CallExpression	"dump_array16 ( lut_nmsedec_sig0 , 1U << T1_NMSEDEC_BITS )"		322149	0					
ANR	322783	Callee	dump_array16		322149	0					
ANR	322784	Identifier	dump_array16		322149	0					
ANR	322785	ArgumentList	lut_nmsedec_sig0		322149	1					
ANR	322786	Argument	lut_nmsedec_sig0		322149	0					
ANR	322787	Identifier	lut_nmsedec_sig0		322149	0					
ANR	322788	Argument	1U << T1_NMSEDEC_BITS		322149	1					
ANR	322789	ShiftExpression	1U << T1_NMSEDEC_BITS		322149	0		<<			
ANR	322790	PrimaryExpression	1U		322149	0					
ANR	322791	Identifier	T1_NMSEDEC_BITS		322149	1					
ANR	322792	ExpressionStatement	"printf ( ""static const OPJ_INT16 lut_nmsedec_ref[1U << T1_NMSEDEC_BITS] = {\\n    "" )"	304:4:9862:9943	322149	25	True				
ANR	322793	CallExpression	"printf ( ""static const OPJ_INT16 lut_nmsedec_ref[1U << T1_NMSEDEC_BITS] = {\\n    "" )"		322149	0					
ANR	322794	Callee	printf		322149	0					
ANR	322795	Identifier	printf		322149	0					
ANR	322796	ArgumentList	"""static const OPJ_INT16 lut_nmsedec_ref[1U << T1_NMSEDEC_BITS] = {\\n    """		322149	1					
ANR	322797	Argument	"""static const OPJ_INT16 lut_nmsedec_ref[1U << T1_NMSEDEC_BITS] = {\\n    """		322149	0					
ANR	322798	PrimaryExpression	"""static const OPJ_INT16 lut_nmsedec_ref[1U << T1_NMSEDEC_BITS] = {\\n    """		322149	0					
ANR	322799	ExpressionStatement	"dump_array16 ( lut_nmsedec_ref , 1U << T1_NMSEDEC_BITS )"	305:4:9949:10001	322149	26	True				
ANR	322800	CallExpression	"dump_array16 ( lut_nmsedec_ref , 1U << T1_NMSEDEC_BITS )"		322149	0					
ANR	322801	Callee	dump_array16		322149	0					
ANR	322802	Identifier	dump_array16		322149	0					
ANR	322803	ArgumentList	lut_nmsedec_ref		322149	1					
ANR	322804	Argument	lut_nmsedec_ref		322149	0					
ANR	322805	Identifier	lut_nmsedec_ref		322149	0					
ANR	322806	Argument	1U << T1_NMSEDEC_BITS		322149	1					
ANR	322807	ShiftExpression	1U << T1_NMSEDEC_BITS		322149	0		<<			
ANR	322808	PrimaryExpression	1U		322149	0					
ANR	322809	Identifier	T1_NMSEDEC_BITS		322149	1					
ANR	322810	ExpressionStatement	"printf ( ""static const OPJ_INT16 lut_nmsedec_ref0[1U << T1_NMSEDEC_BITS] = {\\n    "" )"	307:4:10008:10090	322149	27	True				
ANR	322811	CallExpression	"printf ( ""static const OPJ_INT16 lut_nmsedec_ref0[1U << T1_NMSEDEC_BITS] = {\\n    "" )"		322149	0					
ANR	322812	Callee	printf		322149	0					
ANR	322813	Identifier	printf		322149	0					
ANR	322814	ArgumentList	"""static const OPJ_INT16 lut_nmsedec_ref0[1U << T1_NMSEDEC_BITS] = {\\n    """		322149	1					
ANR	322815	Argument	"""static const OPJ_INT16 lut_nmsedec_ref0[1U << T1_NMSEDEC_BITS] = {\\n    """		322149	0					
ANR	322816	PrimaryExpression	"""static const OPJ_INT16 lut_nmsedec_ref0[1U << T1_NMSEDEC_BITS] = {\\n    """		322149	0					
ANR	322817	ExpressionStatement	"dump_array16 ( lut_nmsedec_ref0 , 1U << T1_NMSEDEC_BITS )"	308:4:10096:10149	322149	28	True				
ANR	322818	CallExpression	"dump_array16 ( lut_nmsedec_ref0 , 1U << T1_NMSEDEC_BITS )"		322149	0					
ANR	322819	Callee	dump_array16		322149	0					
ANR	322820	Identifier	dump_array16		322149	0					
ANR	322821	ArgumentList	lut_nmsedec_ref0		322149	1					
ANR	322822	Argument	lut_nmsedec_ref0		322149	0					
ANR	322823	Identifier	lut_nmsedec_ref0		322149	0					
ANR	322824	Argument	1U << T1_NMSEDEC_BITS		322149	1					
ANR	322825	ShiftExpression	1U << T1_NMSEDEC_BITS		322149	0		<<			
ANR	322826	PrimaryExpression	1U		322149	0					
ANR	322827	Identifier	T1_NMSEDEC_BITS		322149	1					
ANR	322828	ReturnStatement	return 0 ;	310:4:10156:10164	322149	29	True				
ANR	322829	PrimaryExpression	0		322149	0					
ANR	322830	ReturnType	int		322149	1					
ANR	322831	Identifier	main		322149	2					
ANR	322832	ParameterList	"int argc , char * * argv"		322149	3					
ANR	322833	Parameter	int argc	205:9:6626:6633	322149	0	True				
ANR	322834	ParameterType	int		322149	0					
ANR	322835	Identifier	argc		322149	1					
ANR	322836	Parameter	char * * argv	205:19:6636:6646	322149	1	True				
ANR	322837	ParameterType	char * *		322149	0					
ANR	322838	Identifier	argv		322149	1					
ANR	322839	CFGEntryNode	ENTRY		322149		True				
ANR	322840	CFGExitNode	EXIT		322149		True				
ANR	322841	Symbol	lut_ctxno_zc		322149						
ANR	322842	Symbol	argv		322149						
ANR	322843	Symbol	t1_init_ctxno_zc		322149						
ANR	322844	Symbol	lut_nmsedec_ref0		322149						
ANR	322845	Symbol	pow		322149						
ANR	322846	Symbol	* lut_ctxno_zc		322149						
ANR	322847	Symbol	floor		322149						
ANR	322848	Symbol	opj_int_max		322149						
ANR	322849	Symbol	argc		322149						
ANR	322850	Symbol	T1_NMSEDEC_FRACBITS		322149						
ANR	322851	Symbol	* orient		322149						
ANR	322852	Symbol	* lut_nmsedec_ref		322149						
ANR	322853	Symbol	t1_init_spb		322149						
ANR	322854	Symbol	* lut_nmsedec_sig		322149						
ANR	322855	Symbol	orient		322149						
ANR	322856	Symbol	i		322149						
ANR	322857	Symbol	j		322149						
ANR	322858	Symbol	lut_nmsedec_sig0		322149						
ANR	322859	Symbol	* lut_nmsedec_ref0		322149						
ANR	322860	Symbol	lut_nmsedec_sig		322149						
ANR	322861	Symbol	* lut_nmsedec_sig0		322149						
ANR	322862	Symbol	lut_nmsedec_ref		322149						
ANR	322863	Symbol	* i		322149						
ANR	322864	Symbol	t		322149						
ANR	322865	Symbol	t1_init_ctxno_sc		322149						
ANR	322866	Symbol	u		322149						
ANR	322867	Symbol	v		322149						
ANR	322868	Symbol	T1_NMSEDEC_BITS		322149						
