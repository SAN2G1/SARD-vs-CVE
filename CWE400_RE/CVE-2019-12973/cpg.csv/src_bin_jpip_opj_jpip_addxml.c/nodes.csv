command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	81783	File	data/converged/CVE-2019-12973_openjpeg/src_bin_jpip_opj_jpip_addxml.c								
ANR	81784	DeclStmt									
ANR	81785	Decl							FILE	FILE * ( const char filename [ ] )	open_jp2file
ANR	81786	DeclStmt									
ANR	81787	Decl							char	"char * ( const char filename [ ] , long * fsize )"	read_xmlfile
ANR	81788	Function	main	75:0:2943:3632							
ANR	81789	FunctionDef	"main (int argc , char * argv [ ])"		81788	0					
ANR	81790	CompoundStatement		76:0:2976:3632	81788	0					
ANR	81791	IdentifierDeclStatement	FILE * fp ;	77:4:2982:2990	81788	0	True				
ANR	81792	IdentifierDecl	* fp		81788	0					
ANR	81793	IdentifierDeclType	FILE *		81788	0					
ANR	81794	Identifier	fp		81788	1					
ANR	81795	IdentifierDeclStatement	"char * xmldata , type [ ] = ""xml "" ;"	78:4:2996:3026	81788	1	True				
ANR	81796	IdentifierDecl	* xmldata		81788	0					
ANR	81797	IdentifierDeclType	char *		81788	0					
ANR	81798	Identifier	xmldata		81788	1					
ANR	81799	IdentifierDecl	"type [ ] = ""xml """		81788	1					
ANR	81800	IdentifierDeclType	char [ ]		81788	0					
ANR	81801	Identifier	type		81788	1					
ANR	81802	AssignmentExpression	"type [ ] = ""xml """		81788	2		=			
ANR	81803	Identifier	type		81788	0					
ANR	81804	PrimaryExpression	"""xml """		81788	1					
ANR	81805	IdentifierDeclStatement	"long fsize , boxsize ;"	79:4:3032:3051	81788	2	True				
ANR	81806	IdentifierDecl	fsize		81788	0					
ANR	81807	IdentifierDeclType	long		81788	0					
ANR	81808	Identifier	fsize		81788	1					
ANR	81809	IdentifierDecl	boxsize		81788	1					
ANR	81810	IdentifierDeclType	long		81788	0					
ANR	81811	Identifier	boxsize		81788	1					
ANR	81812	IfStatement	if ( argc < 3 )		81788	3					
ANR	81813	Condition	argc < 3	81:8:3062:3069	81788	0	True				
ANR	81814	RelationalExpression	argc < 3		81788	0		<			
ANR	81815	Identifier	argc		81788	0					
ANR	81816	PrimaryExpression	3		81788	1					
ANR	81817	CompoundStatement		6:18:95:95	81788	1					
ANR	81818	ExpressionStatement	"fprintf ( stderr , ""USAGE: %s modifing.jp2 adding.xml\\n"" , argv [ 0 ] )"	82:8:3082:3145	81788	0	True				
ANR	81819	CallExpression	"fprintf ( stderr , ""USAGE: %s modifing.jp2 adding.xml\\n"" , argv [ 0 ] )"		81788	0					
ANR	81820	Callee	fprintf		81788	0					
ANR	81821	Identifier	fprintf		81788	0					
ANR	81822	ArgumentList	stderr		81788	1					
ANR	81823	Argument	stderr		81788	0					
ANR	81824	Identifier	stderr		81788	0					
ANR	81825	Argument	"""USAGE: %s modifing.jp2 adding.xml\\n"""		81788	1					
ANR	81826	PrimaryExpression	"""USAGE: %s modifing.jp2 adding.xml\\n"""		81788	0					
ANR	81827	Argument	argv [ 0 ]		81788	2					
ANR	81828	ArrayIndexing	argv [ 0 ]		81788	0					
ANR	81829	Identifier	argv		81788	0					
ANR	81830	PrimaryExpression	0		81788	1					
ANR	81831	ReturnStatement	return - 1 ;	83:8:3155:3164	81788	1	True				
ANR	81832	UnaryOperationExpression	- 1		81788	0					
ANR	81833	UnaryOperator	-		81788	0					
ANR	81834	PrimaryExpression	1		81788	1					
ANR	81835	ExpressionStatement	fp = open_jp2file ( argv [ 1 ] )	86:4:3177:3203	81788	4	True				
ANR	81836	AssignmentExpression	fp = open_jp2file ( argv [ 1 ] )		81788	0		=			
ANR	81837	Identifier	fp		81788	0					
ANR	81838	CallExpression	open_jp2file ( argv [ 1 ] )		81788	1					
ANR	81839	Callee	open_jp2file		81788	0					
ANR	81840	Identifier	open_jp2file		81788	0					
ANR	81841	ArgumentList	argv [ 1 ]		81788	1					
ANR	81842	Argument	argv [ 1 ]		81788	0					
ANR	81843	ArrayIndexing	argv [ 1 ]		81788	0					
ANR	81844	Identifier	argv		81788	0					
ANR	81845	PrimaryExpression	1		81788	1					
ANR	81846	IfStatement	if ( ! fp )		81788	5					
ANR	81847	Condition	! fp	87:8:3213:3215	81788	0	True				
ANR	81848	UnaryOperationExpression	! fp		81788	0					
ANR	81849	UnaryOperator	!		81788	0					
ANR	81850	Identifier	fp		81788	1					
ANR	81851	CompoundStatement		12:13:241:241	81788	1					
ANR	81852	ReturnStatement	return - 1 ;	88:8:3228:3237	81788	0	True				
ANR	81853	UnaryOperationExpression	- 1		81788	0					
ANR	81854	UnaryOperator	-		81788	0					
ANR	81855	PrimaryExpression	1		81788	1					
ANR	81856	ExpressionStatement	"xmldata = read_xmlfile ( argv [ 2 ] , & fsize )"	91:4:3250:3289	81788	6	True				
ANR	81857	AssignmentExpression	"xmldata = read_xmlfile ( argv [ 2 ] , & fsize )"		81788	0		=			
ANR	81858	Identifier	xmldata		81788	0					
ANR	81859	CallExpression	"read_xmlfile ( argv [ 2 ] , & fsize )"		81788	1					
ANR	81860	Callee	read_xmlfile		81788	0					
ANR	81861	Identifier	read_xmlfile		81788	0					
ANR	81862	ArgumentList	argv [ 2 ]		81788	1					
ANR	81863	Argument	argv [ 2 ]		81788	0					
ANR	81864	ArrayIndexing	argv [ 2 ]		81788	0					
ANR	81865	Identifier	argv		81788	0					
ANR	81866	PrimaryExpression	2		81788	1					
ANR	81867	Argument	& fsize		81788	1					
ANR	81868	UnaryOperationExpression	& fsize		81788	0					
ANR	81869	UnaryOperator	&		81788	0					
ANR	81870	Identifier	fsize		81788	1					
ANR	81871	IfStatement	if ( fsize < 0 )		81788	7					
ANR	81872	Condition	fsize < 0	92:8:3299:3307	81788	0	True				
ANR	81873	RelationalExpression	fsize < 0		81788	0		<			
ANR	81874	Identifier	fsize		81788	0					
ANR	81875	PrimaryExpression	0		81788	1					
ANR	81876	CompoundStatement		17:19:333:333	81788	1					
ANR	81877	ReturnStatement	return - 1 ;	93:8:3320:3329	81788	0	True				
ANR	81878	UnaryOperationExpression	- 1		81788	0					
ANR	81879	UnaryOperator	-		81788	0					
ANR	81880	PrimaryExpression	1		81788	1					
ANR	81881	ExpressionStatement	boxsize = fsize + 8	95:4:3341:3360	81788	8	True				
ANR	81882	AssignmentExpression	boxsize = fsize + 8		81788	0		=			
ANR	81883	Identifier	boxsize		81788	0					
ANR	81884	AdditiveExpression	fsize + 8		81788	1		+			
ANR	81885	Identifier	fsize		81788	0					
ANR	81886	PrimaryExpression	8		81788	1					
ANR	81887	ExpressionStatement	"fputc ( ( boxsize >> 24 ) & 0xff , fp )"	97:4:3367:3400	81788	9	True				
ANR	81888	CallExpression	"fputc ( ( boxsize >> 24 ) & 0xff , fp )"		81788	0					
ANR	81889	Callee	fputc		81788	0					
ANR	81890	Identifier	fputc		81788	0					
ANR	81891	ArgumentList	( boxsize >> 24 ) & 0xff		81788	1					
ANR	81892	Argument	( boxsize >> 24 ) & 0xff		81788	0					
ANR	81893	BitAndExpression	( boxsize >> 24 ) & 0xff		81788	0		&			
ANR	81894	ShiftExpression	boxsize >> 24		81788	0		>>			
ANR	81895	Identifier	boxsize		81788	0					
ANR	81896	PrimaryExpression	24		81788	1					
ANR	81897	PrimaryExpression	0xff		81788	1					
ANR	81898	Argument	fp		81788	1					
ANR	81899	Identifier	fp		81788	0					
ANR	81900	ExpressionStatement	"fputc ( ( boxsize >> 16 ) & 0xff , fp )"	98:4:3406:3439	81788	10	True				
ANR	81901	CallExpression	"fputc ( ( boxsize >> 16 ) & 0xff , fp )"		81788	0					
ANR	81902	Callee	fputc		81788	0					
ANR	81903	Identifier	fputc		81788	0					
ANR	81904	ArgumentList	( boxsize >> 16 ) & 0xff		81788	1					
ANR	81905	Argument	( boxsize >> 16 ) & 0xff		81788	0					
ANR	81906	BitAndExpression	( boxsize >> 16 ) & 0xff		81788	0		&			
ANR	81907	ShiftExpression	boxsize >> 16		81788	0		>>			
ANR	81908	Identifier	boxsize		81788	0					
ANR	81909	PrimaryExpression	16		81788	1					
ANR	81910	PrimaryExpression	0xff		81788	1					
ANR	81911	Argument	fp		81788	1					
ANR	81912	Identifier	fp		81788	0					
ANR	81913	ExpressionStatement	"fputc ( ( boxsize >> 8 ) & 0xff , fp )"	99:4:3445:3477	81788	11	True				
ANR	81914	CallExpression	"fputc ( ( boxsize >> 8 ) & 0xff , fp )"		81788	0					
ANR	81915	Callee	fputc		81788	0					
ANR	81916	Identifier	fputc		81788	0					
ANR	81917	ArgumentList	( boxsize >> 8 ) & 0xff		81788	1					
ANR	81918	Argument	( boxsize >> 8 ) & 0xff		81788	0					
ANR	81919	BitAndExpression	( boxsize >> 8 ) & 0xff		81788	0		&			
ANR	81920	ShiftExpression	boxsize >> 8		81788	0		>>			
ANR	81921	Identifier	boxsize		81788	0					
ANR	81922	PrimaryExpression	8		81788	1					
ANR	81923	PrimaryExpression	0xff		81788	1					
ANR	81924	Argument	fp		81788	1					
ANR	81925	Identifier	fp		81788	0					
ANR	81926	ExpressionStatement	"fputc ( boxsize & 0xff , fp )"	100:4:3483:3508	81788	12	True				
ANR	81927	CallExpression	"fputc ( boxsize & 0xff , fp )"		81788	0					
ANR	81928	Callee	fputc		81788	0					
ANR	81929	Identifier	fputc		81788	0					
ANR	81930	ArgumentList	boxsize & 0xff		81788	1					
ANR	81931	Argument	boxsize & 0xff		81788	0					
ANR	81932	BitAndExpression	boxsize & 0xff		81788	0		&			
ANR	81933	Identifier	boxsize		81788	0					
ANR	81934	PrimaryExpression	0xff		81788	1					
ANR	81935	Argument	fp		81788	1					
ANR	81936	Identifier	fp		81788	0					
ANR	81937	ExpressionStatement	"fwrite ( type , 4 , 1 , fp )"	101:4:3514:3536	81788	13	True				
ANR	81938	CallExpression	"fwrite ( type , 4 , 1 , fp )"		81788	0					
ANR	81939	Callee	fwrite		81788	0					
ANR	81940	Identifier	fwrite		81788	0					
ANR	81941	ArgumentList	type		81788	1					
ANR	81942	Argument	type		81788	0					
ANR	81943	Identifier	type		81788	0					
ANR	81944	Argument	4		81788	1					
ANR	81945	PrimaryExpression	4		81788	0					
ANR	81946	Argument	1		81788	2					
ANR	81947	PrimaryExpression	1		81788	0					
ANR	81948	Argument	fp		81788	3					
ANR	81949	Identifier	fp		81788	0					
ANR	81950	ExpressionStatement	"fwrite ( xmldata , ( size_t ) fsize , 1 , fp )"	102:4:3542:3579	81788	14	True				
ANR	81951	CallExpression	"fwrite ( xmldata , ( size_t ) fsize , 1 , fp )"		81788	0					
ANR	81952	Callee	fwrite		81788	0					
ANR	81953	Identifier	fwrite		81788	0					
ANR	81954	ArgumentList	xmldata		81788	1					
ANR	81955	Argument	xmldata		81788	0					
ANR	81956	Identifier	xmldata		81788	0					
ANR	81957	Argument	( size_t ) fsize		81788	1					
ANR	81958	CastExpression	( size_t ) fsize		81788	0					
ANR	81959	CastTarget	size_t		81788	0					
ANR	81960	Identifier	fsize		81788	1					
ANR	81961	Argument	1		81788	2					
ANR	81962	PrimaryExpression	1		81788	0					
ANR	81963	Argument	fp		81788	3					
ANR	81964	Identifier	fp		81788	0					
ANR	81965	ExpressionStatement	free ( xmldata )	104:4:3586:3599	81788	15	True				
ANR	81966	CallExpression	free ( xmldata )		81788	0					
ANR	81967	Callee	free		81788	0					
ANR	81968	Identifier	free		81788	0					
ANR	81969	ArgumentList	xmldata		81788	1					
ANR	81970	Argument	xmldata		81788	0					
ANR	81971	Identifier	xmldata		81788	0					
ANR	81972	ExpressionStatement	fclose ( fp )	105:4:3605:3615	81788	16	True				
ANR	81973	CallExpression	fclose ( fp )		81788	0					
ANR	81974	Callee	fclose		81788	0					
ANR	81975	Identifier	fclose		81788	0					
ANR	81976	ArgumentList	fp		81788	1					
ANR	81977	Argument	fp		81788	0					
ANR	81978	Identifier	fp		81788	0					
ANR	81979	ReturnStatement	return 0 ;	107:4:3622:3630	81788	17	True				
ANR	81980	PrimaryExpression	0		81788	0					
ANR	81981	ReturnType	int		81788	1					
ANR	81982	Identifier	main		81788	2					
ANR	81983	ParameterList	"int argc , char * argv [ ]"		81788	3					
ANR	81984	Parameter	int argc	75:9:2952:2959	81788	0	True				
ANR	81985	ParameterType	int		81788	0					
ANR	81986	Identifier	argc		81788	1					
ANR	81987	Parameter	char * argv [ ]	75:19:2962:2973	81788	1	True				
ANR	81988	ParameterType	char * [ ]		81788	0					
ANR	81989	Identifier	argv		81788	1					
ANR	81990	CFGEntryNode	ENTRY		81788		True				
ANR	81991	CFGExitNode	EXIT		81788		True				
ANR	81992	Symbol	argc		81788						
ANR	81993	Symbol	boxsize		81788						
ANR	81994	Symbol	fsize		81788						
ANR	81995	Symbol	& fsize		81788						
ANR	81996	Symbol	read_xmlfile		81788						
ANR	81997	Symbol	fp		81788						
ANR	81998	Symbol	* argv		81788						
ANR	81999	Symbol	open_jp2file		81788						
ANR	82000	Symbol	type		81788						
ANR	82001	Symbol	stderr		81788						
ANR	82002	Symbol	argv		81788						
ANR	82003	Symbol	xmldata		81788						
ANR	82004	Function	open_jp2file	110:0:3635:4593							
ANR	82005	FunctionDef	open_jp2file (const char filename [ ])		82004	0					
ANR	82006	CompoundStatement		111:0:3678:4593	82004	0					
ANR	82007	IdentifierDeclStatement	FILE * fp ;	112:4:3684:3692	82004	0	True				
ANR	82008	IdentifierDecl	* fp		82004	0					
ANR	82009	IdentifierDeclType	FILE *		82004	0					
ANR	82010	Identifier	fp		82004	1					
ANR	82011	IdentifierDeclStatement	char * data ;	113:4:3698:3708	82004	1	True				
ANR	82012	IdentifierDecl	* data		82004	0					
ANR	82013	IdentifierDeclType	char *		82004	0					
ANR	82014	Identifier	data		82004	1					
ANR	82015	IfStatement	"if ( ! ( fp = fopen ( filename , ""a+b"" ) ) )"		82004	2					
ANR	82016	Condition	"! ( fp = fopen ( filename , ""a+b"" ) )"	115:8:3719:3748	82004	0	True				
ANR	82017	UnaryOperationExpression	"! ( fp = fopen ( filename , ""a+b"" ) )"		82004	0					
ANR	82018	UnaryOperator	!		82004	0					
ANR	82019	AssignmentExpression	"fp = fopen ( filename , ""a+b"" )"		82004	1		=			
ANR	82020	Identifier	fp		82004	0					
ANR	82021	CallExpression	"fopen ( filename , ""a+b"" )"		82004	1					
ANR	82022	Callee	fopen		82004	0					
ANR	82023	Identifier	fopen		82004	0					
ANR	82024	ArgumentList	filename		82004	1					
ANR	82025	Argument	filename		82004	0					
ANR	82026	Identifier	filename		82004	0					
ANR	82027	Argument	"""a+b"""		82004	1					
ANR	82028	PrimaryExpression	"""a+b"""		82004	0					
ANR	82029	CompoundStatement		5:40:72:72	82004	1					
ANR	82030	ExpressionStatement	"fprintf ( stderr , ""Original JP2 %s not found\\n"" , filename )"	116:8:3761:3817	82004	0	True				
ANR	82031	CallExpression	"fprintf ( stderr , ""Original JP2 %s not found\\n"" , filename )"		82004	0					
ANR	82032	Callee	fprintf		82004	0					
ANR	82033	Identifier	fprintf		82004	0					
ANR	82034	ArgumentList	stderr		82004	1					
ANR	82035	Argument	stderr		82004	0					
ANR	82036	Identifier	stderr		82004	0					
ANR	82037	Argument	"""Original JP2 %s not found\\n"""		82004	1					
ANR	82038	PrimaryExpression	"""Original JP2 %s not found\\n"""		82004	0					
ANR	82039	Argument	filename		82004	2					
ANR	82040	Identifier	filename		82004	0					
ANR	82041	ReturnStatement	return NULL ;	117:8:3827:3838	82004	1	True				
ANR	82042	Identifier	NULL		82004	0					
ANR	82043	IfStatement	"if ( fseek ( fp , 0 , SEEK_SET ) == - 1 )"		82004	3					
ANR	82044	Condition	"fseek ( fp , 0 , SEEK_SET ) == - 1"	120:8:3900:3927	82004	0	True				
ANR	82045	EqualityExpression	"fseek ( fp , 0 , SEEK_SET ) == - 1"		82004	0		==			
ANR	82046	CallExpression	"fseek ( fp , 0 , SEEK_SET )"		82004	0					
ANR	82047	Callee	fseek		82004	0					
ANR	82048	Identifier	fseek		82004	0					
ANR	82049	ArgumentList	fp		82004	1					
ANR	82050	Argument	fp		82004	0					
ANR	82051	Identifier	fp		82004	0					
ANR	82052	Argument	0		82004	1					
ANR	82053	PrimaryExpression	0		82004	0					
ANR	82054	Argument	SEEK_SET		82004	2					
ANR	82055	Identifier	SEEK_SET		82004	0					
ANR	82056	UnaryOperationExpression	- 1		82004	1					
ANR	82057	UnaryOperator	-		82004	0					
ANR	82058	PrimaryExpression	1		82004	1					
ANR	82059	CompoundStatement		10:38:251:251	82004	1					
ANR	82060	ExpressionStatement	fclose ( fp )	121:8:3940:3950	82004	0	True				
ANR	82061	CallExpression	fclose ( fp )		82004	0					
ANR	82062	Callee	fclose		82004	0					
ANR	82063	Identifier	fclose		82004	0					
ANR	82064	ArgumentList	fp		82004	1					
ANR	82065	Argument	fp		82004	0					
ANR	82066	Identifier	fp		82004	0					
ANR	82067	ExpressionStatement	"fprintf ( stderr , ""Original JP2 %s broken (fseek error)\\n"" , filename )"	122:8:3960:4027	82004	1	True				
ANR	82068	CallExpression	"fprintf ( stderr , ""Original JP2 %s broken (fseek error)\\n"" , filename )"		82004	0					
ANR	82069	Callee	fprintf		82004	0					
ANR	82070	Identifier	fprintf		82004	0					
ANR	82071	ArgumentList	stderr		82004	1					
ANR	82072	Argument	stderr		82004	0					
ANR	82073	Identifier	stderr		82004	0					
ANR	82074	Argument	"""Original JP2 %s broken (fseek error)\\n"""		82004	1					
ANR	82075	PrimaryExpression	"""Original JP2 %s broken (fseek error)\\n"""		82004	0					
ANR	82076	Argument	filename		82004	2					
ANR	82077	Identifier	filename		82004	0					
ANR	82078	ReturnStatement	return NULL ;	123:8:4037:4048	82004	2	True				
ANR	82079	Identifier	NULL		82004	0					
ANR	82080	ExpressionStatement	data = ( char * ) malloc ( 12 )	126:4:4061:4086	82004	4	True				
ANR	82081	AssignmentExpression	data = ( char * ) malloc ( 12 )		82004	0		=			
ANR	82082	Identifier	data		82004	0					
ANR	82083	CastExpression	( char * ) malloc ( 12 )		82004	1					
ANR	82084	CastTarget	char *		82004	0					
ANR	82085	CallExpression	malloc ( 12 )		82004	1					
ANR	82086	Callee	malloc		82004	0					
ANR	82087	Identifier	malloc		82004	0					
ANR	82088	ArgumentList	12		82004	1					
ANR	82089	Argument	12		82004	0					
ANR	82090	PrimaryExpression	12		82004	0					
ANR	82091	IfStatement	"if ( fread ( data , 12 , 1 , fp ) != 1 )"		82004	5					
ANR	82092	Condition	"fread ( data , 12 , 1 , fp ) != 1"	127:8:4118:4144	82004	0	True				
ANR	82093	EqualityExpression	"fread ( data , 12 , 1 , fp ) != 1"		82004	0		!=			
ANR	82094	CallExpression	"fread ( data , 12 , 1 , fp )"		82004	0					
ANR	82095	Callee	fread		82004	0					
ANR	82096	Identifier	fread		82004	0					
ANR	82097	ArgumentList	data		82004	1					
ANR	82098	Argument	data		82004	0					
ANR	82099	Identifier	data		82004	0					
ANR	82100	Argument	12		82004	1					
ANR	82101	PrimaryExpression	12		82004	0					
ANR	82102	Argument	1		82004	2					
ANR	82103	PrimaryExpression	1		82004	0					
ANR	82104	Argument	fp		82004	3					
ANR	82105	Identifier	fp		82004	0					
ANR	82106	PrimaryExpression	1		82004	1					
ANR	82107	CompoundStatement		17:37:468:468	82004	1					
ANR	82108	ExpressionStatement	free ( data )	128:8:4157:4167	82004	0	True				
ANR	82109	CallExpression	free ( data )		82004	0					
ANR	82110	Callee	free		82004	0					
ANR	82111	Identifier	free		82004	0					
ANR	82112	ArgumentList	data		82004	1					
ANR	82113	Argument	data		82004	0					
ANR	82114	Identifier	data		82004	0					
ANR	82115	ExpressionStatement	fclose ( fp )	129:8:4177:4187	82004	1	True				
ANR	82116	CallExpression	fclose ( fp )		82004	0					
ANR	82117	Callee	fclose		82004	0					
ANR	82118	Identifier	fclose		82004	0					
ANR	82119	ArgumentList	fp		82004	1					
ANR	82120	Argument	fp		82004	0					
ANR	82121	Identifier	fp		82004	0					
ANR	82122	ExpressionStatement	"fprintf ( stderr , ""Original JP2 %s broken (read error)\\n"" , filename )"	130:8:4197:4263	82004	2	True				
ANR	82123	CallExpression	"fprintf ( stderr , ""Original JP2 %s broken (read error)\\n"" , filename )"		82004	0					
ANR	82124	Callee	fprintf		82004	0					
ANR	82125	Identifier	fprintf		82004	0					
ANR	82126	ArgumentList	stderr		82004	1					
ANR	82127	Argument	stderr		82004	0					
ANR	82128	Identifier	stderr		82004	0					
ANR	82129	Argument	"""Original JP2 %s broken (read error)\\n"""		82004	1					
ANR	82130	PrimaryExpression	"""Original JP2 %s broken (read error)\\n"""		82004	0					
ANR	82131	Argument	filename		82004	2					
ANR	82132	Identifier	filename		82004	0					
ANR	82133	ReturnStatement	return NULL ;	131:8:4273:4284	82004	3	True				
ANR	82134	Identifier	NULL		82004	0					
ANR	82135	IfStatement	"if ( * data || * ( data + 1 ) || * ( data + 2 ) || * ( data + 3 ) != 12 || strncmp ( data + 4 , ""jP  \\r\\n\\x87\\n"" , 8 ) )"		82004	6					
ANR	82136	Condition	"* data || * ( data + 1 ) || * ( data + 2 ) || * ( data + 3 ) != 12 || strncmp ( data + 4 , ""jP  \\r\\n\\x87\\n"" , 8 )"	134:8:4301:4410	82004	0	True				
ANR	82137	OrExpression	"* data || * ( data + 1 ) || * ( data + 2 ) || * ( data + 3 ) != 12 || strncmp ( data + 4 , ""jP  \\r\\n\\x87\\n"" , 8 )"		82004	0		||			
ANR	82138	UnaryOperationExpression	* data		82004	0					
ANR	82139	UnaryOperator	*		82004	0					
ANR	82140	Identifier	data		82004	1					
ANR	82141	OrExpression	"* ( data + 1 ) || * ( data + 2 ) || * ( data + 3 ) != 12 || strncmp ( data + 4 , ""jP  \\r\\n\\x87\\n"" , 8 )"		82004	1		||			
ANR	82142	UnaryOperationExpression	* ( data + 1 )		82004	0					
ANR	82143	UnaryOperator	*		82004	0					
ANR	82144	AdditiveExpression	data + 1		82004	1		+			
ANR	82145	Identifier	data		82004	0					
ANR	82146	PrimaryExpression	1		82004	1					
ANR	82147	OrExpression	"* ( data + 2 ) || * ( data + 3 ) != 12 || strncmp ( data + 4 , ""jP  \\r\\n\\x87\\n"" , 8 )"		82004	1		||			
ANR	82148	UnaryOperationExpression	* ( data + 2 )		82004	0					
ANR	82149	UnaryOperator	*		82004	0					
ANR	82150	AdditiveExpression	data + 2		82004	1		+			
ANR	82151	Identifier	data		82004	0					
ANR	82152	PrimaryExpression	2		82004	1					
ANR	82153	OrExpression	"* ( data + 3 ) != 12 || strncmp ( data + 4 , ""jP  \\r\\n\\x87\\n"" , 8 )"		82004	1		||			
ANR	82154	EqualityExpression	* ( data + 3 ) != 12		82004	0		!=			
ANR	82155	UnaryOperationExpression	* ( data + 3 )		82004	0					
ANR	82156	UnaryOperator	*		82004	0					
ANR	82157	AdditiveExpression	data + 3		82004	1		+			
ANR	82158	Identifier	data		82004	0					
ANR	82159	PrimaryExpression	3		82004	1					
ANR	82160	PrimaryExpression	12		82004	1					
ANR	82161	CallExpression	"strncmp ( data + 4 , ""jP  \\r\\n\\x87\\n"" , 8 )"		82004	1					
ANR	82162	Callee	strncmp		82004	0					
ANR	82163	Identifier	strncmp		82004	0					
ANR	82164	ArgumentList	data + 4		82004	1					
ANR	82165	Argument	data + 4		82004	0					
ANR	82166	AdditiveExpression	data + 4		82004	0		+			
ANR	82167	Identifier	data		82004	0					
ANR	82168	PrimaryExpression	4		82004	1					
ANR	82169	Argument	"""jP  \\r\\n\\x87\\n"""		82004	1					
ANR	82170	PrimaryExpression	"""jP  \\r\\n\\x87\\n"""		82004	0					
ANR	82171	Argument	8		82004	2					
ANR	82172	PrimaryExpression	8		82004	0					
ANR	82173	CompoundStatement		25:73:734:734	82004	1					
ANR	82174	ExpressionStatement	free ( data )	136:8:4423:4433	82004	0	True				
ANR	82175	CallExpression	free ( data )		82004	0					
ANR	82176	Callee	free		82004	0					
ANR	82177	Identifier	free		82004	0					
ANR	82178	ArgumentList	data		82004	1					
ANR	82179	Argument	data		82004	0					
ANR	82180	Identifier	data		82004	0					
ANR	82181	ExpressionStatement	fclose ( fp )	137:8:4443:4453	82004	1	True				
ANR	82182	CallExpression	fclose ( fp )		82004	0					
ANR	82183	Callee	fclose		82004	0					
ANR	82184	Identifier	fclose		82004	0					
ANR	82185	ArgumentList	fp		82004	1					
ANR	82186	Argument	fp		82004	0					
ANR	82187	Identifier	fp		82004	0					
ANR	82188	ExpressionStatement	"fprintf ( stderr , ""No JPEG 2000 Signature box in target %s\\n"" , filename )"	138:8:4463:4533	82004	2	True				
ANR	82189	CallExpression	"fprintf ( stderr , ""No JPEG 2000 Signature box in target %s\\n"" , filename )"		82004	0					
ANR	82190	Callee	fprintf		82004	0					
ANR	82191	Identifier	fprintf		82004	0					
ANR	82192	ArgumentList	stderr		82004	1					
ANR	82193	Argument	stderr		82004	0					
ANR	82194	Identifier	stderr		82004	0					
ANR	82195	Argument	"""No JPEG 2000 Signature box in target %s\\n"""		82004	1					
ANR	82196	PrimaryExpression	"""No JPEG 2000 Signature box in target %s\\n"""		82004	0					
ANR	82197	Argument	filename		82004	2					
ANR	82198	Identifier	filename		82004	0					
ANR	82199	ReturnStatement	return NULL ;	139:8:4543:4554	82004	3	True				
ANR	82200	Identifier	NULL		82004	0					
ANR	82201	ExpressionStatement	free ( data )	141:4:4566:4576	82004	7	True				
ANR	82202	CallExpression	free ( data )		82004	0					
ANR	82203	Callee	free		82004	0					
ANR	82204	Identifier	free		82004	0					
ANR	82205	ArgumentList	data		82004	1					
ANR	82206	Argument	data		82004	0					
ANR	82207	Identifier	data		82004	0					
ANR	82208	ReturnStatement	return fp ;	142:4:4582:4591	82004	8	True				
ANR	82209	Identifier	fp		82004	0					
ANR	82210	ReturnType	FILE *		82004	1					
ANR	82211	Identifier	open_jp2file		82004	2					
ANR	82212	ParameterList	const char filename [ ]		82004	3					
ANR	82213	Parameter	const char filename [ ]	110:20:3655:3675	82004	0	True				
ANR	82214	ParameterType	const char [ ]		82004	0					
ANR	82215	Identifier	filename		82004	1					
ANR	82216	CFGEntryNode	ENTRY		82004		True				
ANR	82217	CFGExitNode	EXIT		82004		True				
ANR	82218	Symbol	SEEK_SET		82004						
ANR	82219	Symbol	fopen		82004						
ANR	82220	Symbol	malloc		82004						
ANR	82221	Symbol	NULL		82004						
ANR	82222	Symbol	data		82004						
ANR	82223	Symbol	fp		82004						
ANR	82224	Symbol	stderr		82004						
ANR	82225	Symbol	fseek		82004						
ANR	82226	Symbol	fread		82004						
ANR	82227	Symbol	strncmp		82004						
ANR	82228	Symbol	filename		82004						
ANR	82229	Symbol	* ( data + 3 )		82004						
ANR	82230	Symbol	* ( data + 2 )		82004						
ANR	82231	Symbol	* ( data + 1 )		82004						
ANR	82232	Symbol	* data		82004						
ANR	82233	Function	read_xmlfile	145:0:4596:5640							
ANR	82234	FunctionDef	"read_xmlfile (const char filename [ ] , long * fsize)"		82233	0					
ANR	82235	CompoundStatement		146:0:4652:5640	82233	0					
ANR	82236	IdentifierDeclStatement	FILE * fp ;	147:4:4658:4666	82233	0	True				
ANR	82237	IdentifierDecl	* fp		82233	0					
ANR	82238	IdentifierDeclType	FILE *		82233	0					
ANR	82239	Identifier	fp		82233	1					
ANR	82240	IdentifierDeclStatement	char * data ;	148:4:4672:4682	82233	1	True				
ANR	82241	IdentifierDecl	* data		82233	0					
ANR	82242	IdentifierDeclType	char *		82233	0					
ANR	82243	Identifier	data		82233	1					
ANR	82244	IfStatement	"if ( ! ( fp = fopen ( filename , ""r"" ) ) )"		82233	2					
ANR	82245	Condition	"! ( fp = fopen ( filename , ""r"" ) )"	151:8:4744:4771	82233	0	True				
ANR	82246	UnaryOperationExpression	"! ( fp = fopen ( filename , ""r"" ) )"		82233	0					
ANR	82247	UnaryOperator	!		82233	0					
ANR	82248	AssignmentExpression	"fp = fopen ( filename , ""r"" )"		82233	1		=			
ANR	82249	Identifier	fp		82233	0					
ANR	82250	CallExpression	"fopen ( filename , ""r"" )"		82233	1					
ANR	82251	Callee	fopen		82233	0					
ANR	82252	Identifier	fopen		82233	0					
ANR	82253	ArgumentList	filename		82233	1					
ANR	82254	Argument	filename		82233	0					
ANR	82255	Identifier	filename		82233	0					
ANR	82256	Argument	"""r"""		82233	1					
ANR	82257	PrimaryExpression	"""r"""		82233	0					
ANR	82258	CompoundStatement		6:38:121:121	82233	1					
ANR	82259	ExpressionStatement	"fprintf ( stderr , ""XML file %s not found\\n"" , filename )"	152:8:4784:4836	82233	0	True				
ANR	82260	CallExpression	"fprintf ( stderr , ""XML file %s not found\\n"" , filename )"		82233	0					
ANR	82261	Callee	fprintf		82233	0					
ANR	82262	Identifier	fprintf		82233	0					
ANR	82263	ArgumentList	stderr		82233	1					
ANR	82264	Argument	stderr		82233	0					
ANR	82265	Identifier	stderr		82233	0					
ANR	82266	Argument	"""XML file %s not found\\n"""		82233	1					
ANR	82267	PrimaryExpression	"""XML file %s not found\\n"""		82233	0					
ANR	82268	Argument	filename		82233	2					
ANR	82269	Identifier	filename		82233	0					
ANR	82270	ReturnStatement	return NULL ;	153:8:4846:4857	82233	1	True				
ANR	82271	Identifier	NULL		82233	0					
ANR	82272	IfStatement	"if ( fseek ( fp , 0 , SEEK_END ) == - 1 )"		82233	3					
ANR	82273	Condition	"fseek ( fp , 0 , SEEK_END ) == - 1"	156:8:4874:4901	82233	0	True				
ANR	82274	EqualityExpression	"fseek ( fp , 0 , SEEK_END ) == - 1"		82233	0		==			
ANR	82275	CallExpression	"fseek ( fp , 0 , SEEK_END )"		82233	0					
ANR	82276	Callee	fseek		82233	0					
ANR	82277	Identifier	fseek		82233	0					
ANR	82278	ArgumentList	fp		82233	1					
ANR	82279	Argument	fp		82233	0					
ANR	82280	Identifier	fp		82233	0					
ANR	82281	Argument	0		82233	1					
ANR	82282	PrimaryExpression	0		82233	0					
ANR	82283	Argument	SEEK_END		82233	2					
ANR	82284	Identifier	SEEK_END		82233	0					
ANR	82285	UnaryOperationExpression	- 1		82233	1					
ANR	82286	UnaryOperator	-		82233	0					
ANR	82287	PrimaryExpression	1		82233	1					
ANR	82288	CompoundStatement		11:38:251:251	82233	1					
ANR	82289	ExpressionStatement	"fprintf ( stderr , ""XML file %s broken (seek error)\\n"" , filename )"	157:8:4914:4976	82233	0	True				
ANR	82290	CallExpression	"fprintf ( stderr , ""XML file %s broken (seek error)\\n"" , filename )"		82233	0					
ANR	82291	Callee	fprintf		82233	0					
ANR	82292	Identifier	fprintf		82233	0					
ANR	82293	ArgumentList	stderr		82233	1					
ANR	82294	Argument	stderr		82233	0					
ANR	82295	Identifier	stderr		82233	0					
ANR	82296	Argument	"""XML file %s broken (seek error)\\n"""		82233	1					
ANR	82297	PrimaryExpression	"""XML file %s broken (seek error)\\n"""		82233	0					
ANR	82298	Argument	filename		82233	2					
ANR	82299	Identifier	filename		82233	0					
ANR	82300	ExpressionStatement	fclose ( fp )	158:8:4986:4996	82233	1	True				
ANR	82301	CallExpression	fclose ( fp )		82233	0					
ANR	82302	Callee	fclose		82233	0					
ANR	82303	Identifier	fclose		82233	0					
ANR	82304	ArgumentList	fp		82233	1					
ANR	82305	Argument	fp		82233	0					
ANR	82306	Identifier	fp		82233	0					
ANR	82307	ReturnStatement	return NULL ;	159:8:5006:5017	82233	2	True				
ANR	82308	Identifier	NULL		82233	0					
ANR	82309	IfStatement	if ( ( * fsize = ftell ( fp ) ) == - 1 )		82233	4					
ANR	82310	Condition	( * fsize = ftell ( fp ) ) == - 1	162:8:5034:5059	82233	0	True				
ANR	82311	EqualityExpression	( * fsize = ftell ( fp ) ) == - 1		82233	0		==			
ANR	82312	AssignmentExpression	* fsize = ftell ( fp )		82233	0		=			
ANR	82313	UnaryOperationExpression	* fsize		82233	0					
ANR	82314	UnaryOperator	*		82233	0					
ANR	82315	Identifier	fsize		82233	1					
ANR	82316	CallExpression	ftell ( fp )		82233	1					
ANR	82317	Callee	ftell		82233	0					
ANR	82318	Identifier	ftell		82233	0					
ANR	82319	ArgumentList	fp		82233	1					
ANR	82320	Argument	fp		82233	0					
ANR	82321	Identifier	fp		82233	0					
ANR	82322	UnaryOperationExpression	- 1		82233	1					
ANR	82323	UnaryOperator	-		82233	0					
ANR	82324	PrimaryExpression	1		82233	1					
ANR	82325	CompoundStatement		17:36:409:409	82233	1					
ANR	82326	ExpressionStatement	"fprintf ( stderr , ""XML file %s broken (seek error)\\n"" , filename )"	163:8:5072:5134	82233	0	True				
ANR	82327	CallExpression	"fprintf ( stderr , ""XML file %s broken (seek error)\\n"" , filename )"		82233	0					
ANR	82328	Callee	fprintf		82233	0					
ANR	82329	Identifier	fprintf		82233	0					
ANR	82330	ArgumentList	stderr		82233	1					
ANR	82331	Argument	stderr		82233	0					
ANR	82332	Identifier	stderr		82233	0					
ANR	82333	Argument	"""XML file %s broken (seek error)\\n"""		82233	1					
ANR	82334	PrimaryExpression	"""XML file %s broken (seek error)\\n"""		82233	0					
ANR	82335	Argument	filename		82233	2					
ANR	82336	Identifier	filename		82233	0					
ANR	82337	ExpressionStatement	fclose ( fp )	164:8:5144:5154	82233	1	True				
ANR	82338	CallExpression	fclose ( fp )		82233	0					
ANR	82339	Callee	fclose		82233	0					
ANR	82340	Identifier	fclose		82233	0					
ANR	82341	ArgumentList	fp		82233	1					
ANR	82342	Argument	fp		82233	0					
ANR	82343	Identifier	fp		82233	0					
ANR	82344	ReturnStatement	return NULL ;	165:8:5164:5175	82233	2	True				
ANR	82345	Identifier	NULL		82233	0					
ANR	82346	ExpressionStatement	assert ( * fsize >= 0 )	167:4:5187:5206	82233	5	True				
ANR	82347	CallExpression	assert ( * fsize >= 0 )		82233	0					
ANR	82348	Callee	assert		82233	0					
ANR	82349	Identifier	assert		82233	0					
ANR	82350	ArgumentList	* fsize >= 0		82233	1					
ANR	82351	Argument	* fsize >= 0		82233	0					
ANR	82352	RelationalExpression	* fsize >= 0		82233	0		>=			
ANR	82353	UnaryOperationExpression	* fsize		82233	0					
ANR	82354	UnaryOperator	*		82233	0					
ANR	82355	Identifier	fsize		82233	1					
ANR	82356	PrimaryExpression	0		82233	1					
ANR	82357	IfStatement	"if ( fseek ( fp , 0 , SEEK_SET ) == - 1 )"		82233	6					
ANR	82358	Condition	"fseek ( fp , 0 , SEEK_SET ) == - 1"	169:8:5217:5244	82233	0	True				
ANR	82359	EqualityExpression	"fseek ( fp , 0 , SEEK_SET ) == - 1"		82233	0		==			
ANR	82360	CallExpression	"fseek ( fp , 0 , SEEK_SET )"		82233	0					
ANR	82361	Callee	fseek		82233	0					
ANR	82362	Identifier	fseek		82233	0					
ANR	82363	ArgumentList	fp		82233	1					
ANR	82364	Argument	fp		82233	0					
ANR	82365	Identifier	fp		82233	0					
ANR	82366	Argument	0		82233	1					
ANR	82367	PrimaryExpression	0		82233	0					
ANR	82368	Argument	SEEK_SET		82233	2					
ANR	82369	Identifier	SEEK_SET		82233	0					
ANR	82370	UnaryOperationExpression	- 1		82233	1					
ANR	82371	UnaryOperator	-		82233	0					
ANR	82372	PrimaryExpression	1		82233	1					
ANR	82373	CompoundStatement		24:38:594:594	82233	1					
ANR	82374	ExpressionStatement	"fprintf ( stderr , ""XML file %s broken (seek error)\\n"" , filename )"	170:8:5257:5319	82233	0	True				
ANR	82375	CallExpression	"fprintf ( stderr , ""XML file %s broken (seek error)\\n"" , filename )"		82233	0					
ANR	82376	Callee	fprintf		82233	0					
ANR	82377	Identifier	fprintf		82233	0					
ANR	82378	ArgumentList	stderr		82233	1					
ANR	82379	Argument	stderr		82233	0					
ANR	82380	Identifier	stderr		82233	0					
ANR	82381	Argument	"""XML file %s broken (seek error)\\n"""		82233	1					
ANR	82382	PrimaryExpression	"""XML file %s broken (seek error)\\n"""		82233	0					
ANR	82383	Argument	filename		82233	2					
ANR	82384	Identifier	filename		82233	0					
ANR	82385	ExpressionStatement	fclose ( fp )	171:8:5329:5339	82233	1	True				
ANR	82386	CallExpression	fclose ( fp )		82233	0					
ANR	82387	Callee	fclose		82233	0					
ANR	82388	Identifier	fclose		82233	0					
ANR	82389	ArgumentList	fp		82233	1					
ANR	82390	Argument	fp		82233	0					
ANR	82391	Identifier	fp		82233	0					
ANR	82392	ReturnStatement	return NULL ;	172:8:5349:5360	82233	2	True				
ANR	82393	Identifier	NULL		82233	0					
ANR	82394	ExpressionStatement	data = ( char * ) malloc ( ( size_t ) * fsize )	175:4:5373:5412	82233	7	True				
ANR	82395	AssignmentExpression	data = ( char * ) malloc ( ( size_t ) * fsize )		82233	0		=			
ANR	82396	Identifier	data		82233	0					
ANR	82397	CastExpression	( char * ) malloc ( ( size_t ) * fsize )		82233	1					
ANR	82398	CastTarget	char *		82233	0					
ANR	82399	CallExpression	malloc ( ( size_t ) * fsize )		82233	1					
ANR	82400	Callee	malloc		82233	0					
ANR	82401	Identifier	malloc		82233	0					
ANR	82402	ArgumentList	( size_t ) * fsize		82233	1					
ANR	82403	Argument	( size_t ) * fsize		82233	0					
ANR	82404	CastExpression	( size_t ) * fsize		82233	0					
ANR	82405	CastTarget	size_t		82233	0					
ANR	82406	UnaryOperationExpression	* fsize		82233	1					
ANR	82407	UnaryOperator	*		82233	0					
ANR	82408	Identifier	fsize		82233	1					
ANR	82409	IfStatement	"if ( fread ( data , ( size_t ) * fsize , 1 , fp ) != 1 )"		82233	8					
ANR	82410	Condition	"fread ( data , ( size_t ) * fsize , 1 , fp ) != 1"	177:8:5423:5461	82233	0	True				
ANR	82411	EqualityExpression	"fread ( data , ( size_t ) * fsize , 1 , fp ) != 1"		82233	0		!=			
ANR	82412	CallExpression	"fread ( data , ( size_t ) * fsize , 1 , fp )"		82233	0					
ANR	82413	Callee	fread		82233	0					
ANR	82414	Identifier	fread		82233	0					
ANR	82415	ArgumentList	data		82233	1					
ANR	82416	Argument	data		82233	0					
ANR	82417	Identifier	data		82233	0					
ANR	82418	Argument	( size_t ) * fsize		82233	1					
ANR	82419	CastExpression	( size_t ) * fsize		82233	0					
ANR	82420	CastTarget	size_t		82233	0					
ANR	82421	UnaryOperationExpression	* fsize		82233	1					
ANR	82422	UnaryOperator	*		82233	0					
ANR	82423	Identifier	fsize		82233	1					
ANR	82424	Argument	1		82233	2					
ANR	82425	PrimaryExpression	1		82233	0					
ANR	82426	Argument	fp		82233	3					
ANR	82427	Identifier	fp		82233	0					
ANR	82428	PrimaryExpression	1		82233	1					
ANR	82429	CompoundStatement		32:49:811:811	82233	1					
ANR	82430	ExpressionStatement	"fprintf ( stderr , ""XML file %s broken (read error)\\n"" , filename )"	178:8:5474:5536	82233	0	True				
ANR	82431	CallExpression	"fprintf ( stderr , ""XML file %s broken (read error)\\n"" , filename )"		82233	0					
ANR	82432	Callee	fprintf		82233	0					
ANR	82433	Identifier	fprintf		82233	0					
ANR	82434	ArgumentList	stderr		82233	1					
ANR	82435	Argument	stderr		82233	0					
ANR	82436	Identifier	stderr		82233	0					
ANR	82437	Argument	"""XML file %s broken (read error)\\n"""		82233	1					
ANR	82438	PrimaryExpression	"""XML file %s broken (read error)\\n"""		82233	0					
ANR	82439	Argument	filename		82233	2					
ANR	82440	Identifier	filename		82233	0					
ANR	82441	ExpressionStatement	free ( data )	179:8:5546:5556	82233	1	True				
ANR	82442	CallExpression	free ( data )		82233	0					
ANR	82443	Callee	free		82233	0					
ANR	82444	Identifier	free		82233	0					
ANR	82445	ArgumentList	data		82233	1					
ANR	82446	Argument	data		82233	0					
ANR	82447	Identifier	data		82233	0					
ANR	82448	ExpressionStatement	fclose ( fp )	180:8:5566:5576	82233	2	True				
ANR	82449	CallExpression	fclose ( fp )		82233	0					
ANR	82450	Callee	fclose		82233	0					
ANR	82451	Identifier	fclose		82233	0					
ANR	82452	ArgumentList	fp		82233	1					
ANR	82453	Argument	fp		82233	0					
ANR	82454	Identifier	fp		82233	0					
ANR	82455	ReturnStatement	return NULL ;	181:8:5586:5597	82233	3	True				
ANR	82456	Identifier	NULL		82233	0					
ANR	82457	ExpressionStatement	fclose ( fp )	184:4:5610:5620	82233	9	True				
ANR	82458	CallExpression	fclose ( fp )		82233	0					
ANR	82459	Callee	fclose		82233	0					
ANR	82460	Identifier	fclose		82233	0					
ANR	82461	ArgumentList	fp		82233	1					
ANR	82462	Argument	fp		82233	0					
ANR	82463	Identifier	fp		82233	0					
ANR	82464	ReturnStatement	return data ;	186:4:5627:5638	82233	10	True				
ANR	82465	Identifier	data		82233	0					
ANR	82466	ReturnType	char *		82233	1					
ANR	82467	Identifier	read_xmlfile		82233	2					
ANR	82468	ParameterList	"const char filename [ ] , long * fsize"		82233	3					
ANR	82469	Parameter	const char filename [ ]	145:20:4616:4636	82233	0	True				
ANR	82470	ParameterType	const char [ ]		82233	0					
ANR	82471	Identifier	filename		82233	1					
ANR	82472	Parameter	long * fsize	145:43:4639:4649	82233	1	True				
ANR	82473	ParameterType	long *		82233	0					
ANR	82474	Identifier	fsize		82233	1					
ANR	82475	CFGEntryNode	ENTRY		82233		True				
ANR	82476	CFGExitNode	EXIT		82233		True				
ANR	82477	Symbol	SEEK_SET		82233						
ANR	82478	Symbol	fopen		82233						
ANR	82479	Symbol	malloc		82233						
ANR	82480	Symbol	NULL		82233						
ANR	82481	Symbol	data		82233						
ANR	82482	Symbol	ftell		82233						
ANR	82483	Symbol	* fsize		82233						
ANR	82484	Symbol	fp		82233						
ANR	82485	Symbol	stderr		82233						
ANR	82486	Symbol	fseek		82233						
ANR	82487	Symbol	fread		82233						
ANR	82488	Symbol	SEEK_END		82233						
ANR	82489	Symbol	filename		82233						
ANR	82490	Symbol	fsize		82233						
