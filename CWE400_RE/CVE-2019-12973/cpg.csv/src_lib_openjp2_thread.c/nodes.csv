command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	349338	File	data/converged/CVE-2019-12973_openjpeg/src_lib_openjp2_thread.c								
ANR	349339	Function	opj_has_thread_support	48:0:2065:2139							
ANR	349340	FunctionDef	opj_has_thread_support ()		349339	0					
ANR	349341	CompoundStatement		49:0:2116:2139	349339	0					
ANR	349342	ReturnStatement	return OPJ_TRUE ;	50:4:2122:2137	349339	0	True				
ANR	349343	Identifier	OPJ_TRUE		349339	0					
ANR	349344	ReturnType	OPJ_BOOL OPJ_CALLCONV		349339	1					
ANR	349345	Identifier	opj_has_thread_support		349339	2					
ANR	349346	ParameterList			349339	3					
ANR	349347	CFGEntryNode	ENTRY		349339		True				
ANR	349348	CFGExitNode	EXIT		349339		True				
ANR	349349	Symbol	OPJ_TRUE		349339						
ANR	349350	Function	opj_get_num_cpus	53:0:2142:2356							
ANR	349351	FunctionDef	opj_get_num_cpus ()		349350	0					
ANR	349352	CompoundStatement		54:0:2182:2356	349350	0					
ANR	349353	IdentifierDeclStatement	SYSTEM_INFO info ;	55:4:2188:2204	349350	0	True				
ANR	349354	IdentifierDecl	info		349350	0					
ANR	349355	IdentifierDeclType	SYSTEM_INFO		349350	0					
ANR	349356	Identifier	info		349350	1					
ANR	349357	IdentifierDeclStatement	DWORD dwNum ;	56:4:2210:2221	349350	1	True				
ANR	349358	IdentifierDecl	dwNum		349350	0					
ANR	349359	IdentifierDeclType	DWORD		349350	0					
ANR	349360	Identifier	dwNum		349350	1					
ANR	349361	ExpressionStatement	GetSystemInfo ( & info )	57:4:2227:2247	349350	2	True				
ANR	349362	CallExpression	GetSystemInfo ( & info )		349350	0					
ANR	349363	Callee	GetSystemInfo		349350	0					
ANR	349364	Identifier	GetSystemInfo		349350	0					
ANR	349365	ArgumentList	& info		349350	1					
ANR	349366	Argument	& info		349350	0					
ANR	349367	UnaryOperationExpression	& info		349350	0					
ANR	349368	UnaryOperator	&		349350	0					
ANR	349369	Identifier	info		349350	1					
ANR	349370	ExpressionStatement	dwNum = info . dwNumberOfProcessors	58:4:2253:2286	349350	3	True				
ANR	349371	AssignmentExpression	dwNum = info . dwNumberOfProcessors		349350	0		=			
ANR	349372	Identifier	dwNum		349350	0					
ANR	349373	MemberAccess	info . dwNumberOfProcessors		349350	1					
ANR	349374	Identifier	info		349350	0					
ANR	349375	Identifier	dwNumberOfProcessors		349350	1					
ANR	349376	IfStatement	if ( dwNum < 1 )		349350	4					
ANR	349377	Condition	dwNum < 1	59:8:2296:2304	349350	0	True				
ANR	349378	RelationalExpression	dwNum < 1		349350	0		<			
ANR	349379	Identifier	dwNum		349350	0					
ANR	349380	PrimaryExpression	1		349350	1					
ANR	349381	CompoundStatement		6:19:124:124	349350	1					
ANR	349382	ReturnStatement	return 1 ;	60:8:2317:2325	349350	0	True				
ANR	349383	PrimaryExpression	1		349350	0					
ANR	349384	ReturnStatement	return ( int ) dwNum ;	62:4:2337:2354	349350	5	True				
ANR	349385	CastExpression	( int ) dwNum		349350	0					
ANR	349386	CastTarget	int		349350	0					
ANR	349387	Identifier	dwNum		349350	1					
ANR	349388	ReturnType	int OPJ_CALLCONV		349350	1					
ANR	349389	Identifier	opj_get_num_cpus		349350	2					
ANR	349390	ParameterList			349350	3					
ANR	349391	CFGEntryNode	ENTRY		349350		True				
ANR	349392	CFGExitNode	EXIT		349350		True				
ANR	349393	Symbol	info . dwNumberOfProcessors		349350						
ANR	349394	Symbol	& info		349350						
ANR	349395	Symbol	dwNum		349350						
ANR	349396	Symbol	info		349350						
ANR	349397	ClassDef	opj_mutex_t	65:0:2359:2405							
ANR	349398	DeclStmt									
ANR	349399	Decl							CRITICAL_SECTION	CRITICAL_SECTION	cs
ANR	349400	Function	opj_mutex_create	69:0:2409:2646							
ANR	349401	FunctionDef	opj_mutex_create ()		349400	0					
ANR	349402	CompoundStatement		70:0:2445:2646	349400	0					
ANR	349403	IdentifierDeclStatement	opj_mutex_t * mutex = ( opj_mutex_t * ) opj_malloc ( sizeof ( opj_mutex_t ) ) ;	71:4:2451:2518	349400	0	True				
ANR	349404	IdentifierDecl	* mutex = ( opj_mutex_t * ) opj_malloc ( sizeof ( opj_mutex_t ) )		349400	0					
ANR	349405	IdentifierDeclType	opj_mutex_t *		349400	0					
ANR	349406	Identifier	mutex		349400	1					
ANR	349407	AssignmentExpression	* mutex = ( opj_mutex_t * ) opj_malloc ( sizeof ( opj_mutex_t ) )		349400	2		=			
ANR	349408	Identifier	mutex		349400	0					
ANR	349409	CastExpression	( opj_mutex_t * ) opj_malloc ( sizeof ( opj_mutex_t ) )		349400	1					
ANR	349410	CastTarget	opj_mutex_t *		349400	0					
ANR	349411	CallExpression	opj_malloc ( sizeof ( opj_mutex_t ) )		349400	1					
ANR	349412	Callee	opj_malloc		349400	0					
ANR	349413	Identifier	opj_malloc		349400	0					
ANR	349414	ArgumentList	sizeof ( opj_mutex_t )		349400	1					
ANR	349415	Argument	sizeof ( opj_mutex_t )		349400	0					
ANR	349416	SizeofExpression	sizeof ( opj_mutex_t )		349400	0					
ANR	349417	Sizeof	sizeof		349400	0					
ANR	349418	SizeofOperand	opj_mutex_t		349400	1					
ANR	349419	IfStatement	if ( ! mutex )		349400	1					
ANR	349420	Condition	! mutex	72:8:2528:2533	349400	0	True				
ANR	349421	UnaryOperationExpression	! mutex		349400	0					
ANR	349422	UnaryOperator	!		349400	0					
ANR	349423	Identifier	mutex		349400	1					
ANR	349424	CompoundStatement		3:16:90:90	349400	1					
ANR	349425	ReturnStatement	return NULL ;	73:8:2546:2557	349400	0	True				
ANR	349426	Identifier	NULL		349400	0					
ANR	349427	ExpressionStatement	"InitializeCriticalSectionAndSpinCount ( & ( mutex -> cs ) , 4000 )"	75:4:2569:2626	349400	2	True				
ANR	349428	CallExpression	"InitializeCriticalSectionAndSpinCount ( & ( mutex -> cs ) , 4000 )"		349400	0					
ANR	349429	Callee	InitializeCriticalSectionAndSpinCount		349400	0					
ANR	349430	Identifier	InitializeCriticalSectionAndSpinCount		349400	0					
ANR	349431	ArgumentList	& ( mutex -> cs )		349400	1					
ANR	349432	Argument	& ( mutex -> cs )		349400	0					
ANR	349433	UnaryOperationExpression	& ( mutex -> cs )		349400	0					
ANR	349434	UnaryOperator	&		349400	0					
ANR	349435	PtrMemberAccess	mutex -> cs		349400	1					
ANR	349436	Identifier	mutex		349400	0					
ANR	349437	Identifier	cs		349400	1					
ANR	349438	Argument	4000		349400	1					
ANR	349439	PrimaryExpression	4000		349400	0					
ANR	349440	ReturnStatement	return mutex ;	76:4:2632:2644	349400	3	True				
ANR	349441	Identifier	mutex		349400	0					
ANR	349442	ReturnType	opj_mutex_t *		349400	1					
ANR	349443	Identifier	opj_mutex_create		349400	2					
ANR	349444	ParameterList			349400	3					
ANR	349445	CFGEntryNode	ENTRY		349400		True				
ANR	349446	CFGExitNode	EXIT		349400		True				
ANR	349447	Symbol	opj_malloc		349400						
ANR	349448	Symbol	NULL		349400						
ANR	349449	Symbol	mutex		349400						
ANR	349450	Symbol	& mutex -> cs		349400						
ANR	349451	Function	opj_mutex_lock	79:0:2649:2731							
ANR	349452	FunctionDef	opj_mutex_lock (opj_mutex_t * mutex)		349451	0					
ANR	349453	CompoundStatement		80:0:2689:2731	349451	0					
ANR	349454	ExpressionStatement	EnterCriticalSection ( & ( mutex -> cs ) )	81:4:2695:2729	349451	0	True				
ANR	349455	CallExpression	EnterCriticalSection ( & ( mutex -> cs ) )		349451	0					
ANR	349456	Callee	EnterCriticalSection		349451	0					
ANR	349457	Identifier	EnterCriticalSection		349451	0					
ANR	349458	ArgumentList	& ( mutex -> cs )		349451	1					
ANR	349459	Argument	& ( mutex -> cs )		349451	0					
ANR	349460	UnaryOperationExpression	& ( mutex -> cs )		349451	0					
ANR	349461	UnaryOperator	&		349451	0					
ANR	349462	PtrMemberAccess	mutex -> cs		349451	1					
ANR	349463	Identifier	mutex		349451	0					
ANR	349464	Identifier	cs		349451	1					
ANR	349465	ReturnType	void		349451	1					
ANR	349466	Identifier	opj_mutex_lock		349451	2					
ANR	349467	ParameterList	opj_mutex_t * mutex		349451	3					
ANR	349468	Parameter	opj_mutex_t * mutex	79:20:2669:2686	349451	0	True				
ANR	349469	ParameterType	opj_mutex_t *		349451	0					
ANR	349470	Identifier	mutex		349451	1					
ANR	349471	CFGEntryNode	ENTRY		349451		True				
ANR	349472	CFGExitNode	EXIT		349451		True				
ANR	349473	Symbol	mutex		349451						
ANR	349474	Symbol	& mutex -> cs		349451						
ANR	349475	Function	opj_mutex_unlock	84:0:2734:2818							
ANR	349476	FunctionDef	opj_mutex_unlock (opj_mutex_t * mutex)		349475	0					
ANR	349477	CompoundStatement		85:0:2776:2818	349475	0					
ANR	349478	ExpressionStatement	LeaveCriticalSection ( & ( mutex -> cs ) )	86:4:2782:2816	349475	0	True				
ANR	349479	CallExpression	LeaveCriticalSection ( & ( mutex -> cs ) )		349475	0					
ANR	349480	Callee	LeaveCriticalSection		349475	0					
ANR	349481	Identifier	LeaveCriticalSection		349475	0					
ANR	349482	ArgumentList	& ( mutex -> cs )		349475	1					
ANR	349483	Argument	& ( mutex -> cs )		349475	0					
ANR	349484	UnaryOperationExpression	& ( mutex -> cs )		349475	0					
ANR	349485	UnaryOperator	&		349475	0					
ANR	349486	PtrMemberAccess	mutex -> cs		349475	1					
ANR	349487	Identifier	mutex		349475	0					
ANR	349488	Identifier	cs		349475	1					
ANR	349489	ReturnType	void		349475	1					
ANR	349490	Identifier	opj_mutex_unlock		349475	2					
ANR	349491	ParameterList	opj_mutex_t * mutex		349475	3					
ANR	349492	Parameter	opj_mutex_t * mutex	84:22:2756:2773	349475	0	True				
ANR	349493	ParameterType	opj_mutex_t *		349475	0					
ANR	349494	Identifier	mutex		349475	1					
ANR	349495	CFGEntryNode	ENTRY		349475		True				
ANR	349496	CFGExitNode	EXIT		349475		True				
ANR	349497	Symbol	mutex		349475						
ANR	349498	Symbol	& mutex -> cs		349475						
ANR	349499	Function	opj_mutex_destroy	89:0:2821:2968							
ANR	349500	FunctionDef	opj_mutex_destroy (opj_mutex_t * mutex)		349499	0					
ANR	349501	CompoundStatement		90:0:2864:2968	349499	0					
ANR	349502	IfStatement	if ( ! mutex )		349499	0					
ANR	349503	Condition	! mutex	91:8:2874:2879	349499	0	True				
ANR	349504	UnaryOperationExpression	! mutex		349499	0					
ANR	349505	UnaryOperator	!		349499	0					
ANR	349506	Identifier	mutex		349499	1					
ANR	349507	CompoundStatement		2:16:17:17	349499	1					
ANR	349508	ReturnStatement	return ;	92:8:2892:2898	349499	0	True				
ANR	349509	ExpressionStatement	DeleteCriticalSection ( & ( mutex -> cs ) )	94:4:2910:2945	349499	1	True				
ANR	349510	CallExpression	DeleteCriticalSection ( & ( mutex -> cs ) )		349499	0					
ANR	349511	Callee	DeleteCriticalSection		349499	0					
ANR	349512	Identifier	DeleteCriticalSection		349499	0					
ANR	349513	ArgumentList	& ( mutex -> cs )		349499	1					
ANR	349514	Argument	& ( mutex -> cs )		349499	0					
ANR	349515	UnaryOperationExpression	& ( mutex -> cs )		349499	0					
ANR	349516	UnaryOperator	&		349499	0					
ANR	349517	PtrMemberAccess	mutex -> cs		349499	1					
ANR	349518	Identifier	mutex		349499	0					
ANR	349519	Identifier	cs		349499	1					
ANR	349520	ExpressionStatement	opj_free ( mutex )	95:4:2951:2966	349499	2	True				
ANR	349521	CallExpression	opj_free ( mutex )		349499	0					
ANR	349522	Callee	opj_free		349499	0					
ANR	349523	Identifier	opj_free		349499	0					
ANR	349524	ArgumentList	mutex		349499	1					
ANR	349525	Argument	mutex		349499	0					
ANR	349526	Identifier	mutex		349499	0					
ANR	349527	ReturnType	void		349499	1					
ANR	349528	Identifier	opj_mutex_destroy		349499	2					
ANR	349529	ParameterList	opj_mutex_t * mutex		349499	3					
ANR	349530	Parameter	opj_mutex_t * mutex	89:23:2844:2861	349499	0	True				
ANR	349531	ParameterType	opj_mutex_t *		349499	0					
ANR	349532	Identifier	mutex		349499	1					
ANR	349533	CFGEntryNode	ENTRY		349499		True				
ANR	349534	CFGExitNode	EXIT		349499		True				
ANR	349535	Symbol	mutex		349499						
ANR	349536	Symbol	& mutex -> cs		349499						
ANR	349537	ClassDef	opj_cond_waiter_list_t	98:0:2971:3063							
ANR	349538	DeclStmt									
ANR	349539	Decl							HANDLE	HANDLE	hEvent
ANR	349540	DeclStmt									
ANR	349541	Decl							struct opj_cond_waiter_list_t	struct opj_cond_waiter_list_t *	next
ANR	349542	DeclStmt									
ANR	349543	Decl							struct opj_cond_waiter_list_t	struct opj_cond_waiter_list_t	opj_cond_waiter_list_t
ANR	349544	ClassDef	opj_cond_t	104:0:3129:3236							
ANR	349545	DeclStmt									
ANR	349546	Decl							opj_mutex_t	opj_mutex_t *	internal_mutex
ANR	349547	DeclStmt									
ANR	349548	Decl							opj_cond_waiter_list_t	opj_cond_waiter_list_t *	waiter_list
ANR	349549	DeclStmt									
ANR	349550	Decl							DWORD	DWORD	TLSKey
ANR	349551	DeclStmt									
ANR	349552	Decl							volatile LONG	volatile LONG	inTLSLockedSection
ANR	349553	DeclStmt									
ANR	349554	Decl							volatile int	volatile int	TLSKeyInit
ANR	349555	Function	opj_cond_create	113:0:3355:4430							
ANR	349556	FunctionDef	opj_cond_create ()		349555	0					
ANR	349557	CompoundStatement		114:0:3389:4430	349555	0					
ANR	349558	IdentifierDeclStatement	opj_cond_t * cond = ( opj_cond_t * ) opj_malloc ( sizeof ( opj_cond_t ) ) ;	115:4:3395:3458	349555	0	True				
ANR	349559	IdentifierDecl	* cond = ( opj_cond_t * ) opj_malloc ( sizeof ( opj_cond_t ) )		349555	0					
ANR	349560	IdentifierDeclType	opj_cond_t *		349555	0					
ANR	349561	Identifier	cond		349555	1					
ANR	349562	AssignmentExpression	* cond = ( opj_cond_t * ) opj_malloc ( sizeof ( opj_cond_t ) )		349555	2		=			
ANR	349563	Identifier	cond		349555	0					
ANR	349564	CastExpression	( opj_cond_t * ) opj_malloc ( sizeof ( opj_cond_t ) )		349555	1					
ANR	349565	CastTarget	opj_cond_t *		349555	0					
ANR	349566	CallExpression	opj_malloc ( sizeof ( opj_cond_t ) )		349555	1					
ANR	349567	Callee	opj_malloc		349555	0					
ANR	349568	Identifier	opj_malloc		349555	0					
ANR	349569	ArgumentList	sizeof ( opj_cond_t )		349555	1					
ANR	349570	Argument	sizeof ( opj_cond_t )		349555	0					
ANR	349571	SizeofExpression	sizeof ( opj_cond_t )		349555	0					
ANR	349572	Sizeof	sizeof		349555	0					
ANR	349573	SizeofOperand	opj_cond_t		349555	1					
ANR	349574	IfStatement	if ( ! cond )		349555	1					
ANR	349575	Condition	! cond	116:8:3468:3472	349555	0	True				
ANR	349576	UnaryOperationExpression	! cond		349555	0					
ANR	349577	UnaryOperator	!		349555	0					
ANR	349578	Identifier	cond		349555	1					
ANR	349579	CompoundStatement		3:15:85:85	349555	1					
ANR	349580	ReturnStatement	return NULL ;	117:8:3485:3496	349555	0	True				
ANR	349581	Identifier	NULL		349555	0					
ANR	349582	WhileStatement	while ( OPJ_TRUE )		349555	2					
ANR	349583	Condition	OPJ_TRUE	123:11:3745:3752	349555	0	True				
ANR	349584	Identifier	OPJ_TRUE		349555	0					
ANR	349585	CompoundStatement		10:21:365:365	349555	1					
ANR	349586	IfStatement	"if ( InterlockedCompareExchange ( & inTLSLockedSection , 1 , 0 ) == 0 )"		349555	0					
ANR	349587	Condition	"InterlockedCompareExchange ( & inTLSLockedSection , 1 , 0 ) == 0"	126:12:3808:3865	349555	0	True				
ANR	349588	EqualityExpression	"InterlockedCompareExchange ( & inTLSLockedSection , 1 , 0 ) == 0"		349555	0		==			
ANR	349589	CallExpression	"InterlockedCompareExchange ( & inTLSLockedSection , 1 , 0 )"		349555	0					
ANR	349590	Callee	InterlockedCompareExchange		349555	0					
ANR	349591	Identifier	InterlockedCompareExchange		349555	0					
ANR	349592	ArgumentList	& inTLSLockedSection		349555	1					
ANR	349593	Argument	& inTLSLockedSection		349555	0					
ANR	349594	UnaryOperationExpression	& inTLSLockedSection		349555	0					
ANR	349595	UnaryOperator	&		349555	0					
ANR	349596	Identifier	inTLSLockedSection		349555	1					
ANR	349597	Argument	1		349555	1					
ANR	349598	PrimaryExpression	1		349555	0					
ANR	349599	Argument	0		349555	2					
ANR	349600	PrimaryExpression	0		349555	0					
ANR	349601	PrimaryExpression	0		349555	1					
ANR	349602	CompoundStatement		15:8:493:493	349555	1					
ANR	349603	IfStatement	if ( ! TLSKeyInit )		349555	0					
ANR	349604	Condition	! TLSKeyInit	129:16:3901:3911	349555	0	True				
ANR	349605	UnaryOperationExpression	! TLSKeyInit		349555	0					
ANR	349606	UnaryOperator	!		349555	0					
ANR	349607	Identifier	TLSKeyInit		349555	1					
ANR	349608	CompoundStatement		16:29:524:524	349555	1					
ANR	349609	ExpressionStatement	TLSKey = TlsAlloc ( )	130:16:3932:3951	349555	0	True				
ANR	349610	AssignmentExpression	TLSKey = TlsAlloc ( )		349555	0		=			
ANR	349611	Identifier	TLSKey		349555	0					
ANR	349612	CallExpression	TlsAlloc ( )		349555	1					
ANR	349613	Callee	TlsAlloc		349555	0					
ANR	349614	Identifier	TlsAlloc		349555	0					
ANR	349615	ArgumentList			349555	1					
ANR	349616	ExpressionStatement	TLSKeyInit = OPJ_TRUE	131:16:3969:3990	349555	1	True				
ANR	349617	AssignmentExpression	TLSKeyInit = OPJ_TRUE		349555	0		=			
ANR	349618	Identifier	TLSKeyInit		349555	0					
ANR	349619	Identifier	OPJ_TRUE		349555	1					
ANR	349620	ExpressionStatement	"InterlockedCompareExchange ( & inTLSLockedSection , 0 , 1 )"	134:12:4056:4109	349555	1	True				
ANR	349621	CallExpression	"InterlockedCompareExchange ( & inTLSLockedSection , 0 , 1 )"		349555	0					
ANR	349622	Callee	InterlockedCompareExchange		349555	0					
ANR	349623	Identifier	InterlockedCompareExchange		349555	0					
ANR	349624	ArgumentList	& inTLSLockedSection		349555	1					
ANR	349625	Argument	& inTLSLockedSection		349555	0					
ANR	349626	UnaryOperationExpression	& inTLSLockedSection		349555	0					
ANR	349627	UnaryOperator	&		349555	0					
ANR	349628	Identifier	inTLSLockedSection		349555	1					
ANR	349629	Argument	0		349555	1					
ANR	349630	PrimaryExpression	0		349555	0					
ANR	349631	Argument	1		349555	2					
ANR	349632	PrimaryExpression	1		349555	0					
ANR	349633	BreakStatement	break ;	136:12:4130:4135	349555	2	True				
ANR	349634	IfStatement	if ( TLSKey == TLS_OUT_OF_INDEXES )		349555	3					
ANR	349635	Condition	TLSKey == TLS_OUT_OF_INDEXES	140:8:4162:4189	349555	0	True				
ANR	349636	EqualityExpression	TLSKey == TLS_OUT_OF_INDEXES		349555	0		==			
ANR	349637	Identifier	TLSKey		349555	0					
ANR	349638	Identifier	TLS_OUT_OF_INDEXES		349555	1					
ANR	349639	CompoundStatement		27:38:802:802	349555	1					
ANR	349640	ExpressionStatement	opj_free ( cond )	141:8:4202:4216	349555	0	True				
ANR	349641	CallExpression	opj_free ( cond )		349555	0					
ANR	349642	Callee	opj_free		349555	0					
ANR	349643	Identifier	opj_free		349555	0					
ANR	349644	ArgumentList	cond		349555	1					
ANR	349645	Argument	cond		349555	0					
ANR	349646	Identifier	cond		349555	0					
ANR	349647	ReturnStatement	return NULL ;	142:8:4226:4237	349555	1	True				
ANR	349648	Identifier	NULL		349555	0					
ANR	349649	ExpressionStatement	cond -> internal_mutex = opj_mutex_create ( )	144:4:4249:4290	349555	4	True				
ANR	349650	AssignmentExpression	cond -> internal_mutex = opj_mutex_create ( )		349555	0		=			
ANR	349651	PtrMemberAccess	cond -> internal_mutex		349555	0					
ANR	349652	Identifier	cond		349555	0					
ANR	349653	Identifier	internal_mutex		349555	1					
ANR	349654	CallExpression	opj_mutex_create ( )		349555	1					
ANR	349655	Callee	opj_mutex_create		349555	0					
ANR	349656	Identifier	opj_mutex_create		349555	0					
ANR	349657	ArgumentList			349555	1					
ANR	349658	IfStatement	if ( cond -> internal_mutex == NULL )		349555	5					
ANR	349659	Condition	cond -> internal_mutex == NULL	145:8:4300:4327	349555	0	True				
ANR	349660	EqualityExpression	cond -> internal_mutex == NULL		349555	0		==			
ANR	349661	PtrMemberAccess	cond -> internal_mutex		349555	0					
ANR	349662	Identifier	cond		349555	0					
ANR	349663	Identifier	internal_mutex		349555	1					
ANR	349664	Identifier	NULL		349555	1					
ANR	349665	CompoundStatement		32:38:940:940	349555	1					
ANR	349666	ExpressionStatement	opj_free ( cond )	146:8:4340:4354	349555	0	True				
ANR	349667	CallExpression	opj_free ( cond )		349555	0					
ANR	349668	Callee	opj_free		349555	0					
ANR	349669	Identifier	opj_free		349555	0					
ANR	349670	ArgumentList	cond		349555	1					
ANR	349671	Argument	cond		349555	0					
ANR	349672	Identifier	cond		349555	0					
ANR	349673	ReturnStatement	return NULL ;	147:8:4364:4375	349555	1	True				
ANR	349674	Identifier	NULL		349555	0					
ANR	349675	ExpressionStatement	cond -> waiter_list = NULL	149:4:4387:4411	349555	6	True				
ANR	349676	AssignmentExpression	cond -> waiter_list = NULL		349555	0		=			
ANR	349677	PtrMemberAccess	cond -> waiter_list		349555	0					
ANR	349678	Identifier	cond		349555	0					
ANR	349679	Identifier	waiter_list		349555	1					
ANR	349680	Identifier	NULL		349555	1					
ANR	349681	ReturnStatement	return cond ;	150:4:4417:4428	349555	7	True				
ANR	349682	Identifier	cond		349555	0					
ANR	349683	ReturnType	opj_cond_t *		349555	1					
ANR	349684	Identifier	opj_cond_create		349555	2					
ANR	349685	ParameterList			349555	3					
ANR	349686	CFGEntryNode	ENTRY		349555		True				
ANR	349687	CFGExitNode	EXIT		349555		True				
ANR	349688	Symbol	opj_malloc		349555						
ANR	349689	Symbol	NULL		349555						
ANR	349690	Symbol	TLS_OUT_OF_INDEXES		349555						
ANR	349691	Symbol	InterlockedCompareExchange		349555						
ANR	349692	Symbol	& inTLSLockedSection		349555						
ANR	349693	Symbol	* cond		349555						
ANR	349694	Symbol	TLSKey		349555						
ANR	349695	Symbol	cond		349555						
ANR	349696	Symbol	TLSKeyInit		349555						
ANR	349697	Symbol	cond -> waiter_list		349555						
ANR	349698	Symbol	cond -> internal_mutex		349555						
ANR	349699	Symbol	opj_mutex_create		349555						
ANR	349700	Symbol	OPJ_TRUE		349555						
ANR	349701	Symbol	TlsAlloc		349555						
ANR	349702	Function	opj_cond_wait	153:0:4433:5593							
ANR	349703	FunctionDef	"opj_cond_wait (opj_cond_t * cond , opj_mutex_t * mutex)"		349702	0					
ANR	349704	CompoundStatement		154:0:4490:5593	349702	0					
ANR	349705	IdentifierDeclStatement	opj_cond_waiter_list_t * item ;	155:4:4496:4524	349702	0	True				
ANR	349706	IdentifierDecl	* item		349702	0					
ANR	349707	IdentifierDeclType	opj_cond_waiter_list_t *		349702	0					
ANR	349708	Identifier	item		349702	1					
ANR	349709	IdentifierDeclStatement	HANDLE hEvent = ( HANDLE ) TlsGetValue ( TLSKey ) ;	156:4:4530:4574	349702	1	True				
ANR	349710	IdentifierDecl	hEvent = ( HANDLE ) TlsGetValue ( TLSKey )		349702	0					
ANR	349711	IdentifierDeclType	HANDLE		349702	0					
ANR	349712	Identifier	hEvent		349702	1					
ANR	349713	AssignmentExpression	hEvent = ( HANDLE ) TlsGetValue ( TLSKey )		349702	2		=			
ANR	349714	Identifier	hEvent		349702	0					
ANR	349715	CastExpression	( HANDLE ) TlsGetValue ( TLSKey )		349702	1					
ANR	349716	CastTarget	HANDLE		349702	0					
ANR	349717	CallExpression	TlsGetValue ( TLSKey )		349702	1					
ANR	349718	Callee	TlsGetValue		349702	0					
ANR	349719	Identifier	TlsGetValue		349702	0					
ANR	349720	ArgumentList	TLSKey		349702	1					
ANR	349721	Argument	TLSKey		349702	0					
ANR	349722	Identifier	TLSKey		349702	0					
ANR	349723	IfStatement	if ( hEvent == NULL )		349702	2					
ANR	349724	Condition	hEvent == NULL	157:8:4584:4597	349702	0	True				
ANR	349725	EqualityExpression	hEvent == NULL		349702	0		==			
ANR	349726	Identifier	hEvent		349702	0					
ANR	349727	Identifier	NULL		349702	1					
ANR	349728	CompoundStatement		4:24:109:109	349702	1					
ANR	349729	ExpressionStatement	"hEvent = CreateEvent ( NULL , 0 , 0 , NULL )"	158:8:4610:4839	349702	0	True				
ANR	349730	AssignmentExpression	"hEvent = CreateEvent ( NULL , 0 , 0 , NULL )"		349702	0		=			
ANR	349731	Identifier	hEvent		349702	0					
ANR	349732	CallExpression	"CreateEvent ( NULL , 0 , 0 , NULL )"		349702	1					
ANR	349733	Callee	CreateEvent		349702	0					
ANR	349734	Identifier	CreateEvent		349702	0					
ANR	349735	ArgumentList	NULL		349702	1					
ANR	349736	Argument	NULL		349702	0					
ANR	349737	Identifier	NULL		349702	0					
ANR	349738	Argument	0		349702	1					
ANR	349739	PrimaryExpression	0		349702	0					
ANR	349740	Argument	0		349702	2					
ANR	349741	PrimaryExpression	0		349702	0					
ANR	349742	Argument	NULL		349702	3					
ANR	349743	Identifier	NULL		349702	0					
ANR	349744	ExpressionStatement	assert ( hEvent )	162:8:4849:4863	349702	1	True				
ANR	349745	CallExpression	assert ( hEvent )		349702	0					
ANR	349746	Callee	assert		349702	0					
ANR	349747	Identifier	assert		349702	0					
ANR	349748	ArgumentList	hEvent		349702	1					
ANR	349749	Argument	hEvent		349702	0					
ANR	349750	Identifier	hEvent		349702	0					
ANR	349751	ExpressionStatement	"TlsSetValue ( TLSKey , hEvent )"	164:8:4874:4901	349702	2	True				
ANR	349752	CallExpression	"TlsSetValue ( TLSKey , hEvent )"		349702	0					
ANR	349753	Callee	TlsSetValue		349702	0					
ANR	349754	Identifier	TlsSetValue		349702	0					
ANR	349755	ArgumentList	TLSKey		349702	1					
ANR	349756	Argument	TLSKey		349702	0					
ANR	349757	Identifier	TLSKey		349702	0					
ANR	349758	Argument	hEvent		349702	1					
ANR	349759	Identifier	hEvent		349702	0					
ANR	349760	ExpressionStatement	opj_mutex_lock ( cond -> internal_mutex )	168:4:4980:5016	349702	3	True				
ANR	349761	CallExpression	opj_mutex_lock ( cond -> internal_mutex )		349702	0					
ANR	349762	Callee	opj_mutex_lock		349702	0					
ANR	349763	Identifier	opj_mutex_lock		349702	0					
ANR	349764	ArgumentList	cond -> internal_mutex		349702	1					
ANR	349765	Argument	cond -> internal_mutex		349702	0					
ANR	349766	PtrMemberAccess	cond -> internal_mutex		349702	0					
ANR	349767	Identifier	cond		349702	0					
ANR	349768	Identifier	internal_mutex		349702	1					
ANR	349769	ExpressionStatement	item = ( opj_cond_waiter_list_t * ) opj_malloc ( sizeof ( opj_cond_waiter_list_t ) )	170:4:5023:5097	349702	4	True				
ANR	349770	AssignmentExpression	item = ( opj_cond_waiter_list_t * ) opj_malloc ( sizeof ( opj_cond_waiter_list_t ) )		349702	0		=			
ANR	349771	Identifier	item		349702	0					
ANR	349772	CastExpression	( opj_cond_waiter_list_t * ) opj_malloc ( sizeof ( opj_cond_waiter_list_t ) )		349702	1					
ANR	349773	CastTarget	opj_cond_waiter_list_t *		349702	0					
ANR	349774	CallExpression	opj_malloc ( sizeof ( opj_cond_waiter_list_t ) )		349702	1					
ANR	349775	Callee	opj_malloc		349702	0					
ANR	349776	Identifier	opj_malloc		349702	0					
ANR	349777	ArgumentList	sizeof ( opj_cond_waiter_list_t )		349702	1					
ANR	349778	Argument	sizeof ( opj_cond_waiter_list_t )		349702	0					
ANR	349779	SizeofExpression	sizeof ( opj_cond_waiter_list_t )		349702	0					
ANR	349780	Sizeof	sizeof		349702	0					
ANR	349781	SizeofOperand	opj_cond_waiter_list_t		349702	1					
ANR	349782	ExpressionStatement	assert ( item != NULL )	171:4:5103:5123	349702	5	True				
ANR	349783	CallExpression	assert ( item != NULL )		349702	0					
ANR	349784	Callee	assert		349702	0					
ANR	349785	Identifier	assert		349702	0					
ANR	349786	ArgumentList	item != NULL		349702	1					
ANR	349787	Argument	item != NULL		349702	0					
ANR	349788	EqualityExpression	item != NULL		349702	0		!=			
ANR	349789	Identifier	item		349702	0					
ANR	349790	Identifier	NULL		349702	1					
ANR	349791	ExpressionStatement	item -> hEvent = hEvent	173:4:5130:5151	349702	6	True				
ANR	349792	AssignmentExpression	item -> hEvent = hEvent		349702	0		=			
ANR	349793	PtrMemberAccess	item -> hEvent		349702	0					
ANR	349794	Identifier	item		349702	0					
ANR	349795	Identifier	hEvent		349702	1					
ANR	349796	Identifier	hEvent		349702	1					
ANR	349797	ExpressionStatement	item -> next = cond -> waiter_list	174:4:5157:5187	349702	7	True				
ANR	349798	AssignmentExpression	item -> next = cond -> waiter_list		349702	0		=			
ANR	349799	PtrMemberAccess	item -> next		349702	0					
ANR	349800	Identifier	item		349702	0					
ANR	349801	Identifier	next		349702	1					
ANR	349802	PtrMemberAccess	cond -> waiter_list		349702	1					
ANR	349803	Identifier	cond		349702	0					
ANR	349804	Identifier	waiter_list		349702	1					
ANR	349805	ExpressionStatement	cond -> waiter_list = item	176:4:5194:5218	349702	8	True				
ANR	349806	AssignmentExpression	cond -> waiter_list = item		349702	0		=			
ANR	349807	PtrMemberAccess	cond -> waiter_list		349702	0					
ANR	349808	Identifier	cond		349702	0					
ANR	349809	Identifier	waiter_list		349702	1					
ANR	349810	Identifier	item		349702	1					
ANR	349811	ExpressionStatement	opj_mutex_unlock ( cond -> internal_mutex )	178:4:5225:5263	349702	9	True				
ANR	349812	CallExpression	opj_mutex_unlock ( cond -> internal_mutex )		349702	0					
ANR	349813	Callee	opj_mutex_unlock		349702	0					
ANR	349814	Identifier	opj_mutex_unlock		349702	0					
ANR	349815	ArgumentList	cond -> internal_mutex		349702	1					
ANR	349816	Argument	cond -> internal_mutex		349702	0					
ANR	349817	PtrMemberAccess	cond -> internal_mutex		349702	0					
ANR	349818	Identifier	cond		349702	0					
ANR	349819	Identifier	internal_mutex		349702	1					
ANR	349820	ExpressionStatement	opj_mutex_unlock ( mutex )	181:4:5349:5372	349702	10	True				
ANR	349821	CallExpression	opj_mutex_unlock ( mutex )		349702	0					
ANR	349822	Callee	opj_mutex_unlock		349702	0					
ANR	349823	Identifier	opj_mutex_unlock		349702	0					
ANR	349824	ArgumentList	mutex		349702	1					
ANR	349825	Argument	mutex		349702	0					
ANR	349826	Identifier	mutex		349702	0					
ANR	349827	ExpressionStatement	"WaitForSingleObject ( hEvent , INFINITE )"	185:4:5489:5526	349702	11	True				
ANR	349828	CallExpression	"WaitForSingleObject ( hEvent , INFINITE )"		349702	0					
ANR	349829	Callee	WaitForSingleObject		349702	0					
ANR	349830	Identifier	WaitForSingleObject		349702	0					
ANR	349831	ArgumentList	hEvent		349702	1					
ANR	349832	Argument	hEvent		349702	0					
ANR	349833	Identifier	hEvent		349702	0					
ANR	349834	Argument	INFINITE		349702	1					
ANR	349835	Identifier	INFINITE		349702	0					
ANR	349836	ExpressionStatement	opj_mutex_lock ( mutex )	188:4:5570:5591	349702	12	True				
ANR	349837	CallExpression	opj_mutex_lock ( mutex )		349702	0					
ANR	349838	Callee	opj_mutex_lock		349702	0					
ANR	349839	Identifier	opj_mutex_lock		349702	0					
ANR	349840	ArgumentList	mutex		349702	1					
ANR	349841	Argument	mutex		349702	0					
ANR	349842	Identifier	mutex		349702	0					
ANR	349843	ReturnType	void		349702	1					
ANR	349844	Identifier	opj_cond_wait		349702	2					
ANR	349845	ParameterList	"opj_cond_t * cond , opj_mutex_t * mutex"		349702	3					
ANR	349846	Parameter	opj_cond_t * cond	153:19:4452:4467	349702	0	True				
ANR	349847	ParameterType	opj_cond_t *		349702	0					
ANR	349848	Identifier	cond		349702	1					
ANR	349849	Parameter	opj_mutex_t * mutex	153:37:4470:4487	349702	1	True				
ANR	349850	ParameterType	opj_mutex_t *		349702	0					
ANR	349851	Identifier	mutex		349702	1					
ANR	349852	CFGEntryNode	ENTRY		349702		True				
ANR	349853	CFGExitNode	EXIT		349702		True				
ANR	349854	Symbol	opj_malloc		349702						
ANR	349855	Symbol	item		349702						
ANR	349856	Symbol	NULL		349702						
ANR	349857	Symbol	* cond		349702						
ANR	349858	Symbol	TLSKey		349702						
ANR	349859	Symbol	mutex		349702						
ANR	349860	Symbol	hEvent		349702						
ANR	349861	Symbol	cond		349702						
ANR	349862	Symbol	INFINITE		349702						
ANR	349863	Symbol	CreateEvent		349702						
ANR	349864	Symbol	item -> next		349702						
ANR	349865	Symbol	cond -> waiter_list		349702						
ANR	349866	Symbol	cond -> internal_mutex		349702						
ANR	349867	Symbol	* item		349702						
ANR	349868	Symbol	item -> hEvent		349702						
ANR	349869	Symbol	TlsGetValue		349702						
ANR	349870	Function	opj_cond_signal	191:0:5596:6001							
ANR	349871	FunctionDef	opj_cond_signal (opj_cond_t * cond)		349870	0					
ANR	349872	CompoundStatement		192:0:5635:6001	349870	0					
ANR	349873	IdentifierDeclStatement	opj_cond_waiter_list_t * psIter ;	193:4:5641:5671	349870	0	True				
ANR	349874	IdentifierDecl	* psIter		349870	0					
ANR	349875	IdentifierDeclType	opj_cond_waiter_list_t *		349870	0					
ANR	349876	Identifier	psIter		349870	1					
ANR	349877	ExpressionStatement	opj_mutex_lock ( cond -> internal_mutex )	196:4:5751:5787	349870	1	True				
ANR	349878	CallExpression	opj_mutex_lock ( cond -> internal_mutex )		349870	0					
ANR	349879	Callee	opj_mutex_lock		349870	0					
ANR	349880	Identifier	opj_mutex_lock		349870	0					
ANR	349881	ArgumentList	cond -> internal_mutex		349870	1					
ANR	349882	Argument	cond -> internal_mutex		349870	0					
ANR	349883	PtrMemberAccess	cond -> internal_mutex		349870	0					
ANR	349884	Identifier	cond		349870	0					
ANR	349885	Identifier	internal_mutex		349870	1					
ANR	349886	ExpressionStatement	psIter = cond -> waiter_list	198:4:5794:5820	349870	2	True				
ANR	349887	AssignmentExpression	psIter = cond -> waiter_list		349870	0		=			
ANR	349888	Identifier	psIter		349870	0					
ANR	349889	PtrMemberAccess	cond -> waiter_list		349870	1					
ANR	349890	Identifier	cond		349870	0					
ANR	349891	Identifier	waiter_list		349870	1					
ANR	349892	IfStatement	if ( psIter != NULL )		349870	3					
ANR	349893	Condition	psIter != NULL	199:8:5830:5843	349870	0	True				
ANR	349894	EqualityExpression	psIter != NULL		349870	0		!=			
ANR	349895	Identifier	psIter		349870	0					
ANR	349896	Identifier	NULL		349870	1					
ANR	349897	CompoundStatement		8:24:210:210	349870	1					
ANR	349898	ExpressionStatement	SetEvent ( psIter -> hEvent )	200:8:5856:5880	349870	0	True				
ANR	349899	CallExpression	SetEvent ( psIter -> hEvent )		349870	0					
ANR	349900	Callee	SetEvent		349870	0					
ANR	349901	Identifier	SetEvent		349870	0					
ANR	349902	ArgumentList	psIter -> hEvent		349870	1					
ANR	349903	Argument	psIter -> hEvent		349870	0					
ANR	349904	PtrMemberAccess	psIter -> hEvent		349870	0					
ANR	349905	Identifier	psIter		349870	0					
ANR	349906	Identifier	hEvent		349870	1					
ANR	349907	ExpressionStatement	cond -> waiter_list = psIter -> next	201:8:5890:5922	349870	1	True				
ANR	349908	AssignmentExpression	cond -> waiter_list = psIter -> next		349870	0		=			
ANR	349909	PtrMemberAccess	cond -> waiter_list		349870	0					
ANR	349910	Identifier	cond		349870	0					
ANR	349911	Identifier	waiter_list		349870	1					
ANR	349912	PtrMemberAccess	psIter -> next		349870	1					
ANR	349913	Identifier	psIter		349870	0					
ANR	349914	Identifier	next		349870	1					
ANR	349915	ExpressionStatement	opj_free ( psIter )	202:8:5932:5948	349870	2	True				
ANR	349916	CallExpression	opj_free ( psIter )		349870	0					
ANR	349917	Callee	opj_free		349870	0					
ANR	349918	Identifier	opj_free		349870	0					
ANR	349919	ArgumentList	psIter		349870	1					
ANR	349920	Argument	psIter		349870	0					
ANR	349921	Identifier	psIter		349870	0					
ANR	349922	ExpressionStatement	opj_mutex_unlock ( cond -> internal_mutex )	205:4:5961:5999	349870	4	True				
ANR	349923	CallExpression	opj_mutex_unlock ( cond -> internal_mutex )		349870	0					
ANR	349924	Callee	opj_mutex_unlock		349870	0					
ANR	349925	Identifier	opj_mutex_unlock		349870	0					
ANR	349926	ArgumentList	cond -> internal_mutex		349870	1					
ANR	349927	Argument	cond -> internal_mutex		349870	0					
ANR	349928	PtrMemberAccess	cond -> internal_mutex		349870	0					
ANR	349929	Identifier	cond		349870	0					
ANR	349930	Identifier	internal_mutex		349870	1					
ANR	349931	ReturnType	void		349870	1					
ANR	349932	Identifier	opj_cond_signal		349870	2					
ANR	349933	ParameterList	opj_cond_t * cond		349870	3					
ANR	349934	Parameter	opj_cond_t * cond	191:21:5617:5632	349870	0	True				
ANR	349935	ParameterType	opj_cond_t *		349870	0					
ANR	349936	Identifier	cond		349870	1					
ANR	349937	CFGEntryNode	ENTRY		349870		True				
ANR	349938	CFGExitNode	EXIT		349870		True				
ANR	349939	Symbol	psIter -> hEvent		349870						
ANR	349940	Symbol	NULL		349870						
ANR	349941	Symbol	cond -> waiter_list		349870						
ANR	349942	Symbol	* cond		349870						
ANR	349943	Symbol	cond -> internal_mutex		349870						
ANR	349944	Symbol	cond		349870						
ANR	349945	Symbol	psIter -> next		349870						
ANR	349946	Symbol	psIter		349870						
ANR	349947	Symbol	* psIter		349870						
ANR	349948	Function	opj_cond_destroy	208:0:6004:6189							
ANR	349949	FunctionDef	opj_cond_destroy (opj_cond_t * cond)		349948	0					
ANR	349950	CompoundStatement		209:0:6044:6189	349948	0					
ANR	349951	IfStatement	if ( ! cond )		349948	0					
ANR	349952	Condition	! cond	210:8:6054:6058	349948	0	True				
ANR	349953	UnaryOperationExpression	! cond		349948	0					
ANR	349954	UnaryOperator	!		349948	0					
ANR	349955	Identifier	cond		349948	1					
ANR	349956	CompoundStatement		2:15:16:16	349948	1					
ANR	349957	ReturnStatement	return ;	211:8:6071:6077	349948	0	True				
ANR	349958	ExpressionStatement	opj_mutex_destroy ( cond -> internal_mutex )	213:4:6089:6128	349948	1	True				
ANR	349959	CallExpression	opj_mutex_destroy ( cond -> internal_mutex )		349948	0					
ANR	349960	Callee	opj_mutex_destroy		349948	0					
ANR	349961	Identifier	opj_mutex_destroy		349948	0					
ANR	349962	ArgumentList	cond -> internal_mutex		349948	1					
ANR	349963	Argument	cond -> internal_mutex		349948	0					
ANR	349964	PtrMemberAccess	cond -> internal_mutex		349948	0					
ANR	349965	Identifier	cond		349948	0					
ANR	349966	Identifier	internal_mutex		349948	1					
ANR	349967	ExpressionStatement	assert ( cond -> waiter_list == NULL )	214:4:6134:6167	349948	2	True				
ANR	349968	CallExpression	assert ( cond -> waiter_list == NULL )		349948	0					
ANR	349969	Callee	assert		349948	0					
ANR	349970	Identifier	assert		349948	0					
ANR	349971	ArgumentList	cond -> waiter_list == NULL		349948	1					
ANR	349972	Argument	cond -> waiter_list == NULL		349948	0					
ANR	349973	EqualityExpression	cond -> waiter_list == NULL		349948	0		==			
ANR	349974	PtrMemberAccess	cond -> waiter_list		349948	0					
ANR	349975	Identifier	cond		349948	0					
ANR	349976	Identifier	waiter_list		349948	1					
ANR	349977	Identifier	NULL		349948	1					
ANR	349978	ExpressionStatement	opj_free ( cond )	215:4:6173:6187	349948	3	True				
ANR	349979	CallExpression	opj_free ( cond )		349948	0					
ANR	349980	Callee	opj_free		349948	0					
ANR	349981	Identifier	opj_free		349948	0					
ANR	349982	ArgumentList	cond		349948	1					
ANR	349983	Argument	cond		349948	0					
ANR	349984	Identifier	cond		349948	0					
ANR	349985	ReturnType	void		349948	1					
ANR	349986	Identifier	opj_cond_destroy		349948	2					
ANR	349987	ParameterList	opj_cond_t * cond		349948	3					
ANR	349988	Parameter	opj_cond_t * cond	208:22:6026:6041	349948	0	True				
ANR	349989	ParameterType	opj_cond_t *		349948	0					
ANR	349990	Identifier	cond		349948	1					
ANR	349991	CFGEntryNode	ENTRY		349948		True				
ANR	349992	CFGExitNode	EXIT		349948		True				
ANR	349993	Symbol	NULL		349948						
ANR	349994	Symbol	cond -> waiter_list		349948						
ANR	349995	Symbol	* cond		349948						
ANR	349996	Symbol	cond -> internal_mutex		349948						
ANR	349997	Symbol	cond		349948						
ANR	349998	ClassDef	opj_thread_t	218:0:6192:6284							
ANR	349999	DeclStmt									
ANR	350000	Decl							opj_thread_fn	opj_thread_fn	thread_fn
ANR	350001	DeclStmt									
ANR	350002	Decl							void	void *	user_data
ANR	350003	DeclStmt									
ANR	350004	Decl							HANDLE	HANDLE	hThread
ANR	350005	Function	opj_thread_callback_adapter	224:0:6288:7066							
ANR	350006	FunctionDef	opj_thread_callback_adapter (void * info)		350005	0					
ANR	350007	CompoundStatement		225:0:6351:7066	350005	0					
ANR	350008	IdentifierDeclStatement	opj_thread_t * thread = ( opj_thread_t * ) info ;	226:4:6357:6400	350005	0	True				
ANR	350009	IdentifierDecl	* thread = ( opj_thread_t * ) info		350005	0					
ANR	350010	IdentifierDeclType	opj_thread_t *		350005	0					
ANR	350011	Identifier	thread		350005	1					
ANR	350012	AssignmentExpression	* thread = ( opj_thread_t * ) info		350005	2		=			
ANR	350013	Identifier	thread		350005	0					
ANR	350014	CastExpression	( opj_thread_t * ) info		350005	1					
ANR	350015	CastTarget	opj_thread_t *		350005	0					
ANR	350016	Identifier	info		350005	1					
ANR	350017	IdentifierDeclStatement	HANDLE hEvent = NULL ;	227:4:6406:6426	350005	1	True				
ANR	350018	IdentifierDecl	hEvent = NULL		350005	0					
ANR	350019	IdentifierDeclType	HANDLE		350005	0					
ANR	350020	Identifier	hEvent		350005	1					
ANR	350021	AssignmentExpression	hEvent = NULL		350005	2		=			
ANR	350022	Identifier	NULL		350005	0					
ANR	350023	Identifier	NULL		350005	1					
ANR	350024	ExpressionStatement	thread -> thread_fn ( thread -> user_data )	229:4:6433:6469	350005	2	True				
ANR	350025	CallExpression	thread -> thread_fn ( thread -> user_data )		350005	0					
ANR	350026	Callee	thread -> thread_fn		350005	0					
ANR	350027	PtrMemberAccess	thread -> thread_fn		350005	0					
ANR	350028	Identifier	thread		350005	0					
ANR	350029	Identifier	thread_fn		350005	1					
ANR	350030	ArgumentList	thread -> user_data		350005	1					
ANR	350031	Argument	thread -> user_data		350005	0					
ANR	350032	PtrMemberAccess	thread -> user_data		350005	0					
ANR	350033	Identifier	thread		350005	0					
ANR	350034	Identifier	user_data		350005	1					
ANR	350035	WhileStatement	while ( OPJ_TRUE )		350005	3					
ANR	350036	Condition	OPJ_TRUE	232:11:6538:6545	350005	0	True				
ANR	350037	Identifier	OPJ_TRUE		350005	0					
ANR	350038	CompoundStatement		8:21:196:196	350005	1					
ANR	350039	IfStatement	"if ( InterlockedCompareExchange ( & inTLSLockedSection , 1 , 0 ) == 0 )"		350005	0					
ANR	350040	Condition	"InterlockedCompareExchange ( & inTLSLockedSection , 1 , 0 ) == 0"	235:12:6675:6732	350005	0	True				
ANR	350041	EqualityExpression	"InterlockedCompareExchange ( & inTLSLockedSection , 1 , 0 ) == 0"		350005	0		==			
ANR	350042	CallExpression	"InterlockedCompareExchange ( & inTLSLockedSection , 1 , 0 )"		350005	0					
ANR	350043	Callee	InterlockedCompareExchange		350005	0					
ANR	350044	Identifier	InterlockedCompareExchange		350005	0					
ANR	350045	ArgumentList	& inTLSLockedSection		350005	1					
ANR	350046	Argument	& inTLSLockedSection		350005	0					
ANR	350047	UnaryOperationExpression	& inTLSLockedSection		350005	0					
ANR	350048	UnaryOperator	&		350005	0					
ANR	350049	Identifier	inTLSLockedSection		350005	1					
ANR	350050	Argument	1		350005	1					
ANR	350051	PrimaryExpression	1		350005	0					
ANR	350052	Argument	0		350005	2					
ANR	350053	PrimaryExpression	0		350005	0					
ANR	350054	PrimaryExpression	0		350005	1					
ANR	350055	CompoundStatement		13:8:398:398	350005	1					
ANR	350056	IfStatement	if ( TLSKeyInit )		350005	0					
ANR	350057	Condition	TLSKeyInit	238:16:6768:6777	350005	0	True				
ANR	350058	Identifier	TLSKeyInit		350005	0					
ANR	350059	CompoundStatement		14:28:428:428	350005	1					
ANR	350060	ExpressionStatement	hEvent = ( HANDLE ) TlsGetValue ( TLSKey )	239:16:6798:6835	350005	0	True				
ANR	350061	AssignmentExpression	hEvent = ( HANDLE ) TlsGetValue ( TLSKey )		350005	0		=			
ANR	350062	Identifier	hEvent		350005	0					
ANR	350063	CastExpression	( HANDLE ) TlsGetValue ( TLSKey )		350005	1					
ANR	350064	CastTarget	HANDLE		350005	0					
ANR	350065	CallExpression	TlsGetValue ( TLSKey )		350005	1					
ANR	350066	Callee	TlsGetValue		350005	0					
ANR	350067	Identifier	TlsGetValue		350005	0					
ANR	350068	ArgumentList	TLSKey		350005	1					
ANR	350069	Argument	TLSKey		350005	0					
ANR	350070	Identifier	TLSKey		350005	0					
ANR	350071	ExpressionStatement	"InterlockedCompareExchange ( & inTLSLockedSection , 0 , 1 )"	242:12:6901:6954	350005	1	True				
ANR	350072	CallExpression	"InterlockedCompareExchange ( & inTLSLockedSection , 0 , 1 )"		350005	0					
ANR	350073	Callee	InterlockedCompareExchange		350005	0					
ANR	350074	Identifier	InterlockedCompareExchange		350005	0					
ANR	350075	ArgumentList	& inTLSLockedSection		350005	1					
ANR	350076	Argument	& inTLSLockedSection		350005	0					
ANR	350077	UnaryOperationExpression	& inTLSLockedSection		350005	0					
ANR	350078	UnaryOperator	&		350005	0					
ANR	350079	Identifier	inTLSLockedSection		350005	1					
ANR	350080	Argument	0		350005	1					
ANR	350081	PrimaryExpression	0		350005	0					
ANR	350082	Argument	1		350005	2					
ANR	350083	PrimaryExpression	1		350005	0					
ANR	350084	BreakStatement	break ;	244:12:6975:6980	350005	2	True				
ANR	350085	IfStatement	if ( hEvent )		350005	4					
ANR	350086	Condition	hEvent	247:8:7006:7011	350005	0	True				
ANR	350087	Identifier	hEvent		350005	0					
ANR	350088	CompoundStatement		23:16:662:662	350005	1					
ANR	350089	ExpressionStatement	CloseHandle ( hEvent )	248:8:7024:7043	350005	0	True				
ANR	350090	CallExpression	CloseHandle ( hEvent )		350005	0					
ANR	350091	Callee	CloseHandle		350005	0					
ANR	350092	Identifier	CloseHandle		350005	0					
ANR	350093	ArgumentList	hEvent		350005	1					
ANR	350094	Argument	hEvent		350005	0					
ANR	350095	Identifier	hEvent		350005	0					
ANR	350096	ReturnStatement	return 0 ;	251:4:7056:7064	350005	5	True				
ANR	350097	PrimaryExpression	0		350005	0					
ANR	350098	ReturnType	unsigned int __stdcall		350005	1					
ANR	350099	Identifier	opj_thread_callback_adapter		350005	2					
ANR	350100	ParameterList	void * info		350005	3					
ANR	350101	Parameter	void * info	224:51:6339:6348	350005	0	True				
ANR	350102	ParameterType	void *		350005	0					
ANR	350103	Identifier	info		350005	1					
ANR	350104	CFGEntryNode	ENTRY		350005		True				
ANR	350105	CFGExitNode	EXIT		350005		True				
ANR	350106	Symbol	TLSKeyInit		350005						
ANR	350107	Symbol	NULL		350005						
ANR	350108	Symbol	thread -> user_data		350005						
ANR	350109	Symbol	InterlockedCompareExchange		350005						
ANR	350110	Symbol	& inTLSLockedSection		350005						
ANR	350111	Symbol	TLSKey		350005						
ANR	350112	Symbol	hEvent		350005						
ANR	350113	Symbol	* thread		350005						
ANR	350114	Symbol	thread		350005						
ANR	350115	Symbol	OPJ_TRUE		350005						
ANR	350116	Symbol	TlsGetValue		350005						
ANR	350117	Symbol	info		350005						
ANR	350118	Function	opj_thread_create	254:0:7069:7607							
ANR	350119	FunctionDef	"opj_thread_create (opj_thread_fn thread_fn , void * user_data)"		350118	0					
ANR	350120	CompoundStatement		255:0:7143:7607	350118	0					
ANR	350121	IdentifierDeclStatement	opj_thread_t * thread ;	256:4:7149:7169	350118	0	True				
ANR	350122	IdentifierDecl	* thread		350118	0					
ANR	350123	IdentifierDeclType	opj_thread_t *		350118	0					
ANR	350124	Identifier	thread		350118	1					
ANR	350125	ExpressionStatement	assert ( thread_fn )	258:4:7176:7193	350118	1	True				
ANR	350126	CallExpression	assert ( thread_fn )		350118	0					
ANR	350127	Callee	assert		350118	0					
ANR	350128	Identifier	assert		350118	0					
ANR	350129	ArgumentList	thread_fn		350118	1					
ANR	350130	Argument	thread_fn		350118	0					
ANR	350131	Identifier	thread_fn		350118	0					
ANR	350132	ExpressionStatement	thread = ( opj_thread_t * ) opj_malloc ( sizeof ( opj_thread_t ) )	260:4:7200:7257	350118	2	True				
ANR	350133	AssignmentExpression	thread = ( opj_thread_t * ) opj_malloc ( sizeof ( opj_thread_t ) )		350118	0		=			
ANR	350134	Identifier	thread		350118	0					
ANR	350135	CastExpression	( opj_thread_t * ) opj_malloc ( sizeof ( opj_thread_t ) )		350118	1					
ANR	350136	CastTarget	opj_thread_t *		350118	0					
ANR	350137	CallExpression	opj_malloc ( sizeof ( opj_thread_t ) )		350118	1					
ANR	350138	Callee	opj_malloc		350118	0					
ANR	350139	Identifier	opj_malloc		350118	0					
ANR	350140	ArgumentList	sizeof ( opj_thread_t )		350118	1					
ANR	350141	Argument	sizeof ( opj_thread_t )		350118	0					
ANR	350142	SizeofExpression	sizeof ( opj_thread_t )		350118	0					
ANR	350143	Sizeof	sizeof		350118	0					
ANR	350144	SizeofOperand	opj_thread_t		350118	1					
ANR	350145	IfStatement	if ( ! thread )		350118	3					
ANR	350146	Condition	! thread	261:8:7267:7273	350118	0	True				
ANR	350147	UnaryOperationExpression	! thread		350118	0					
ANR	350148	UnaryOperator	!		350118	0					
ANR	350149	Identifier	thread		350118	1					
ANR	350150	CompoundStatement		7:17:132:132	350118	1					
ANR	350151	ReturnStatement	return NULL ;	262:8:7286:7297	350118	0	True				
ANR	350152	Identifier	NULL		350118	0					
ANR	350153	ExpressionStatement	thread -> thread_fn = thread_fn	264:4:7309:7338	350118	4	True				
ANR	350154	AssignmentExpression	thread -> thread_fn = thread_fn		350118	0		=			
ANR	350155	PtrMemberAccess	thread -> thread_fn		350118	0					
ANR	350156	Identifier	thread		350118	0					
ANR	350157	Identifier	thread_fn		350118	1					
ANR	350158	Identifier	thread_fn		350118	1					
ANR	350159	ExpressionStatement	thread -> user_data = user_data	265:4:7344:7373	350118	5	True				
ANR	350160	AssignmentExpression	thread -> user_data = user_data		350118	0		=			
ANR	350161	PtrMemberAccess	thread -> user_data		350118	0					
ANR	350162	Identifier	thread		350118	0					
ANR	350163	Identifier	user_data		350118	1					
ANR	350164	Identifier	user_data		350118	1					
ANR	350165	ExpressionStatement	"thread -> hThread = ( HANDLE ) _beginthreadex ( NULL , 0 , opj_thread_callback_adapter , thread , 0 , NULL )"	267:4:7380:7497	350118	6	True				
ANR	350166	AssignmentExpression	"thread -> hThread = ( HANDLE ) _beginthreadex ( NULL , 0 , opj_thread_callback_adapter , thread , 0 , NULL )"		350118	0		=			
ANR	350167	PtrMemberAccess	thread -> hThread		350118	0					
ANR	350168	Identifier	thread		350118	0					
ANR	350169	Identifier	hThread		350118	1					
ANR	350170	CastExpression	"( HANDLE ) _beginthreadex ( NULL , 0 , opj_thread_callback_adapter , thread , 0 , NULL )"		350118	1					
ANR	350171	CastTarget	HANDLE		350118	0					
ANR	350172	CallExpression	"_beginthreadex ( NULL , 0 , opj_thread_callback_adapter , thread , 0 , NULL )"		350118	1					
ANR	350173	Callee	_beginthreadex		350118	0					
ANR	350174	Identifier	_beginthreadex		350118	0					
ANR	350175	ArgumentList	NULL		350118	1					
ANR	350176	Argument	NULL		350118	0					
ANR	350177	Identifier	NULL		350118	0					
ANR	350178	Argument	0		350118	1					
ANR	350179	PrimaryExpression	0		350118	0					
ANR	350180	Argument	opj_thread_callback_adapter		350118	2					
ANR	350181	Identifier	opj_thread_callback_adapter		350118	0					
ANR	350182	Argument	thread		350118	3					
ANR	350183	Identifier	thread		350118	0					
ANR	350184	Argument	0		350118	4					
ANR	350185	PrimaryExpression	0		350118	0					
ANR	350186	Argument	NULL		350118	5					
ANR	350187	Identifier	NULL		350118	0					
ANR	350188	IfStatement	if ( thread -> hThread == NULL )		350118	7					
ANR	350189	Condition	thread -> hThread == NULL	270:8:7508:7530	350118	0	True				
ANR	350190	EqualityExpression	thread -> hThread == NULL		350118	0		==			
ANR	350191	PtrMemberAccess	thread -> hThread		350118	0					
ANR	350192	Identifier	thread		350118	0					
ANR	350193	Identifier	hThread		350118	1					
ANR	350194	Identifier	NULL		350118	1					
ANR	350195	CompoundStatement		16:33:389:389	350118	1					
ANR	350196	ExpressionStatement	opj_free ( thread )	271:8:7543:7559	350118	0	True				
ANR	350197	CallExpression	opj_free ( thread )		350118	0					
ANR	350198	Callee	opj_free		350118	0					
ANR	350199	Identifier	opj_free		350118	0					
ANR	350200	ArgumentList	thread		350118	1					
ANR	350201	Argument	thread		350118	0					
ANR	350202	Identifier	thread		350118	0					
ANR	350203	ReturnStatement	return NULL ;	272:8:7569:7580	350118	1	True				
ANR	350204	Identifier	NULL		350118	0					
ANR	350205	ReturnStatement	return thread ;	274:4:7592:7605	350118	8	True				
ANR	350206	Identifier	thread		350118	0					
ANR	350207	ReturnType	opj_thread_t *		350118	1					
ANR	350208	Identifier	opj_thread_create		350118	2					
ANR	350209	ParameterList	"opj_thread_fn thread_fn , void * user_data"		350118	3					
ANR	350210	Parameter	opj_thread_fn thread_fn	254:32:7101:7123	350118	0	True				
ANR	350211	ParameterType	opj_thread_fn		350118	0					
ANR	350212	Identifier	thread_fn		350118	1					
ANR	350213	Parameter	void * user_data	254:57:7126:7140	350118	1	True				
ANR	350214	ParameterType	void *		350118	0					
ANR	350215	Identifier	user_data		350118	1					
ANR	350216	CFGEntryNode	ENTRY		350118		True				
ANR	350217	CFGExitNode	EXIT		350118		True				
ANR	350218	Symbol	opj_malloc		350118						
ANR	350219	Symbol	NULL		350118						
ANR	350220	Symbol	thread -> user_data		350118						
ANR	350221	Symbol	opj_thread_callback_adapter		350118						
ANR	350222	Symbol	* thread		350118						
ANR	350223	Symbol	thread -> hThread		350118						
ANR	350224	Symbol	thread -> thread_fn		350118						
ANR	350225	Symbol	_beginthreadex		350118						
ANR	350226	Symbol	user_data		350118						
ANR	350227	Symbol	thread		350118						
ANR	350228	Symbol	thread_fn		350118						
ANR	350229	Function	opj_thread_join	277:0:7610:7764							
ANR	350230	FunctionDef	opj_thread_join (opj_thread_t * thread)		350229	0					
ANR	350231	CompoundStatement		278:0:7653:7764	350229	0					
ANR	350232	ExpressionStatement	"WaitForSingleObject ( thread -> hThread , INFINITE )"	279:4:7659:7705	350229	0	True				
ANR	350233	CallExpression	"WaitForSingleObject ( thread -> hThread , INFINITE )"		350229	0					
ANR	350234	Callee	WaitForSingleObject		350229	0					
ANR	350235	Identifier	WaitForSingleObject		350229	0					
ANR	350236	ArgumentList	thread -> hThread		350229	1					
ANR	350237	Argument	thread -> hThread		350229	0					
ANR	350238	PtrMemberAccess	thread -> hThread		350229	0					
ANR	350239	Identifier	thread		350229	0					
ANR	350240	Identifier	hThread		350229	1					
ANR	350241	Argument	INFINITE		350229	1					
ANR	350242	Identifier	INFINITE		350229	0					
ANR	350243	ExpressionStatement	CloseHandle ( thread -> hThread )	280:4:7711:7739	350229	1	True				
ANR	350244	CallExpression	CloseHandle ( thread -> hThread )		350229	0					
ANR	350245	Callee	CloseHandle		350229	0					
ANR	350246	Identifier	CloseHandle		350229	0					
ANR	350247	ArgumentList	thread -> hThread		350229	1					
ANR	350248	Argument	thread -> hThread		350229	0					
ANR	350249	PtrMemberAccess	thread -> hThread		350229	0					
ANR	350250	Identifier	thread		350229	0					
ANR	350251	Identifier	hThread		350229	1					
ANR	350252	ExpressionStatement	opj_free ( thread )	282:4:7746:7762	350229	2	True				
ANR	350253	CallExpression	opj_free ( thread )		350229	0					
ANR	350254	Callee	opj_free		350229	0					
ANR	350255	Identifier	opj_free		350229	0					
ANR	350256	ArgumentList	thread		350229	1					
ANR	350257	Argument	thread		350229	0					
ANR	350258	Identifier	thread		350229	0					
ANR	350259	ReturnType	void		350229	1					
ANR	350260	Identifier	opj_thread_join		350229	2					
ANR	350261	ParameterList	opj_thread_t * thread		350229	3					
ANR	350262	Parameter	opj_thread_t * thread	277:21:7631:7650	350229	0	True				
ANR	350263	ParameterType	opj_thread_t *		350229	0					
ANR	350264	Identifier	thread		350229	1					
ANR	350265	CFGEntryNode	ENTRY		350229		True				
ANR	350266	CFGExitNode	EXIT		350229		True				
ANR	350267	Symbol	thread -> hThread		350229						
ANR	350268	Symbol	* thread		350229						
ANR	350269	Symbol	thread		350229						
ANR	350270	Symbol	INFINITE		350229						
ANR	350271	Function	opj_has_thread_support	295:0:8034:8108							
ANR	350272	FunctionDef	opj_has_thread_support ()		350271	0					
ANR	350273	CompoundStatement		296:0:8085:8108	350271	0					
ANR	350274	ReturnStatement	return OPJ_TRUE ;	297:4:8091:8106	350271	0	True				
ANR	350275	Identifier	OPJ_TRUE		350271	0					
ANR	350276	ReturnType	OPJ_BOOL OPJ_CALLCONV		350271	1					
ANR	350277	Identifier	opj_has_thread_support		350271	2					
ANR	350278	ParameterList			350271	3					
ANR	350279	CFGEntryNode	ENTRY		350271		True				
ANR	350280	CFGExitNode	EXIT		350271		True				
ANR	350281	Symbol	OPJ_TRUE		350271						
ANR	350282	Function	opj_get_num_cpus	300:0:8111:8255							
ANR	350283	FunctionDef	opj_get_num_cpus ()		350282	0					
ANR	350284	CompoundStatement		301:0:8151:8255	350282	0					
ANR	350285	ReturnStatement	return ( int ) sysconf ( _SC_NPROCESSORS_ONLN ) ;	303:4:8185:8226	350282	0	True				
ANR	350286	CastExpression	( int ) sysconf ( _SC_NPROCESSORS_ONLN )		350282	0					
ANR	350287	CastTarget	int		350282	0					
ANR	350288	CallExpression	sysconf ( _SC_NPROCESSORS_ONLN )		350282	1					
ANR	350289	Callee	sysconf		350282	0					
ANR	350290	Identifier	sysconf		350282	0					
ANR	350291	ArgumentList	_SC_NPROCESSORS_ONLN		350282	1					
ANR	350292	Argument	_SC_NPROCESSORS_ONLN		350282	0					
ANR	350293	Identifier	_SC_NPROCESSORS_ONLN		350282	0					
ANR	350294	ReturnType	int OPJ_CALLCONV		350282	1					
ANR	350295	Identifier	opj_get_num_cpus		350282	2					
ANR	350296	ParameterList			350282	3					
ANR	350297	CFGEntryNode	ENTRY		350282		True				
ANR	350298	CFGExitNode	EXIT		350282		True				
ANR	350299	Symbol	_SC_NPROCESSORS_ONLN		350282						
ANR	350300	Symbol	sysconf		350282						
ANR	350301	ClassDef	opj_mutex_t	309:0:8258:8306							
ANR	350302	DeclStmt									
ANR	350303	Decl							pthread_mutex_t	pthread_mutex_t	mutex
ANR	350304	Function	opj_mutex_create	313:0:8310:8599							
ANR	350305	FunctionDef	opj_mutex_create ()		350304	0					
ANR	350306	CompoundStatement		314:0:8346:8599	350304	0					
ANR	350307	IdentifierDeclStatement	"opj_mutex_t * mutex = ( opj_mutex_t * ) opj_calloc ( 1U , sizeof ( opj_mutex_t ) ) ;"	315:4:8352:8423	350304	0	True				
ANR	350308	IdentifierDecl	"* mutex = ( opj_mutex_t * ) opj_calloc ( 1U , sizeof ( opj_mutex_t ) )"		350304	0					
ANR	350309	IdentifierDeclType	opj_mutex_t *		350304	0					
ANR	350310	Identifier	mutex		350304	1					
ANR	350311	AssignmentExpression	"* mutex = ( opj_mutex_t * ) opj_calloc ( 1U , sizeof ( opj_mutex_t ) )"		350304	2		=			
ANR	350312	Identifier	mutex		350304	0					
ANR	350313	CastExpression	"( opj_mutex_t * ) opj_calloc ( 1U , sizeof ( opj_mutex_t ) )"		350304	1					
ANR	350314	CastTarget	opj_mutex_t *		350304	0					
ANR	350315	CallExpression	"opj_calloc ( 1U , sizeof ( opj_mutex_t ) )"		350304	1					
ANR	350316	Callee	opj_calloc		350304	0					
ANR	350317	Identifier	opj_calloc		350304	0					
ANR	350318	ArgumentList	1U		350304	1					
ANR	350319	Argument	1U		350304	0					
ANR	350320	PrimaryExpression	1U		350304	0					
ANR	350321	Argument	sizeof ( opj_mutex_t )		350304	1					
ANR	350322	SizeofExpression	sizeof ( opj_mutex_t )		350304	0					
ANR	350323	Sizeof	sizeof		350304	0					
ANR	350324	SizeofOperand	opj_mutex_t		350304	1					
ANR	350325	IfStatement	if ( mutex != NULL )		350304	1					
ANR	350326	Condition	mutex != NULL	316:8:8433:8445	350304	0	True				
ANR	350327	EqualityExpression	mutex != NULL		350304	0		!=			
ANR	350328	Identifier	mutex		350304	0					
ANR	350329	Identifier	NULL		350304	1					
ANR	350330	CompoundStatement		3:23:101:101	350304	1					
ANR	350331	IfStatement	"if ( pthread_mutex_init ( & mutex -> mutex , NULL ) != 0 )"		350304	0					
ANR	350332	Condition	"pthread_mutex_init ( & mutex -> mutex , NULL ) != 0"	317:12:8462:8505	350304	0	True				
ANR	350333	EqualityExpression	"pthread_mutex_init ( & mutex -> mutex , NULL ) != 0"		350304	0		!=			
ANR	350334	CallExpression	"pthread_mutex_init ( & mutex -> mutex , NULL )"		350304	0					
ANR	350335	Callee	pthread_mutex_init		350304	0					
ANR	350336	Identifier	pthread_mutex_init		350304	0					
ANR	350337	ArgumentList	& mutex -> mutex		350304	1					
ANR	350338	Argument	& mutex -> mutex		350304	0					
ANR	350339	UnaryOperationExpression	& mutex -> mutex		350304	0					
ANR	350340	UnaryOperator	&		350304	0					
ANR	350341	PtrMemberAccess	mutex -> mutex		350304	1					
ANR	350342	Identifier	mutex		350304	0					
ANR	350343	Identifier	mutex		350304	1					
ANR	350344	Argument	NULL		350304	1					
ANR	350345	Identifier	NULL		350304	0					
ANR	350346	PrimaryExpression	0		350304	1					
ANR	350347	CompoundStatement		4:58:161:161	350304	1					
ANR	350348	ExpressionStatement	opj_free ( mutex )	318:12:8522:8537	350304	0	True				
ANR	350349	CallExpression	opj_free ( mutex )		350304	0					
ANR	350350	Callee	opj_free		350304	0					
ANR	350351	Identifier	opj_free		350304	0					
ANR	350352	ArgumentList	mutex		350304	1					
ANR	350353	Argument	mutex		350304	0					
ANR	350354	Identifier	mutex		350304	0					
ANR	350355	ExpressionStatement	mutex = NULL	319:12:8551:8563	350304	1	True				
ANR	350356	AssignmentExpression	mutex = NULL		350304	0		=			
ANR	350357	Identifier	mutex		350304	0					
ANR	350358	Identifier	NULL		350304	1					
ANR	350359	ReturnStatement	return mutex ;	322:4:8585:8597	350304	2	True				
ANR	350360	Identifier	mutex		350304	0					
ANR	350361	ReturnType	opj_mutex_t *		350304	1					
ANR	350362	Identifier	opj_mutex_create		350304	2					
ANR	350363	ParameterList			350304	3					
ANR	350364	CFGEntryNode	ENTRY		350304		True				
ANR	350365	CFGExitNode	EXIT		350304		True				
ANR	350366	Symbol	pthread_mutex_init		350304						
ANR	350367	Symbol	NULL		350304						
ANR	350368	Symbol	opj_calloc		350304						
ANR	350369	Symbol	mutex		350304						
ANR	350370	Symbol	& mutex -> mutex		350304						
ANR	350371	Function	opj_mutex_lock	325:0:8602:8685							
ANR	350372	FunctionDef	opj_mutex_lock (opj_mutex_t * mutex)		350371	0					
ANR	350373	CompoundStatement		326:0:8642:8685	350371	0					
ANR	350374	ExpressionStatement	pthread_mutex_lock ( & ( mutex -> mutex ) )	327:4:8648:8683	350371	0	True				
ANR	350375	CallExpression	pthread_mutex_lock ( & ( mutex -> mutex ) )		350371	0					
ANR	350376	Callee	pthread_mutex_lock		350371	0					
ANR	350377	Identifier	pthread_mutex_lock		350371	0					
ANR	350378	ArgumentList	& ( mutex -> mutex )		350371	1					
ANR	350379	Argument	& ( mutex -> mutex )		350371	0					
ANR	350380	UnaryOperationExpression	& ( mutex -> mutex )		350371	0					
ANR	350381	UnaryOperator	&		350371	0					
ANR	350382	PtrMemberAccess	mutex -> mutex		350371	1					
ANR	350383	Identifier	mutex		350371	0					
ANR	350384	Identifier	mutex		350371	1					
ANR	350385	ReturnType	void		350371	1					
ANR	350386	Identifier	opj_mutex_lock		350371	2					
ANR	350387	ParameterList	opj_mutex_t * mutex		350371	3					
ANR	350388	Parameter	opj_mutex_t * mutex	325:20:8622:8639	350371	0	True				
ANR	350389	ParameterType	opj_mutex_t *		350371	0					
ANR	350390	Identifier	mutex		350371	1					
ANR	350391	CFGEntryNode	ENTRY		350371		True				
ANR	350392	CFGExitNode	EXIT		350371		True				
ANR	350393	Symbol	mutex		350371						
ANR	350394	Symbol	& mutex -> mutex		350371						
ANR	350395	Function	opj_mutex_unlock	330:0:8688:8775							
ANR	350396	FunctionDef	opj_mutex_unlock (opj_mutex_t * mutex)		350395	0					
ANR	350397	CompoundStatement		331:0:8730:8775	350395	0					
ANR	350398	ExpressionStatement	pthread_mutex_unlock ( & ( mutex -> mutex ) )	332:4:8736:8773	350395	0	True				
ANR	350399	CallExpression	pthread_mutex_unlock ( & ( mutex -> mutex ) )		350395	0					
ANR	350400	Callee	pthread_mutex_unlock		350395	0					
ANR	350401	Identifier	pthread_mutex_unlock		350395	0					
ANR	350402	ArgumentList	& ( mutex -> mutex )		350395	1					
ANR	350403	Argument	& ( mutex -> mutex )		350395	0					
ANR	350404	UnaryOperationExpression	& ( mutex -> mutex )		350395	0					
ANR	350405	UnaryOperator	&		350395	0					
ANR	350406	PtrMemberAccess	mutex -> mutex		350395	1					
ANR	350407	Identifier	mutex		350395	0					
ANR	350408	Identifier	mutex		350395	1					
ANR	350409	ReturnType	void		350395	1					
ANR	350410	Identifier	opj_mutex_unlock		350395	2					
ANR	350411	ParameterList	opj_mutex_t * mutex		350395	3					
ANR	350412	Parameter	opj_mutex_t * mutex	330:22:8710:8727	350395	0	True				
ANR	350413	ParameterType	opj_mutex_t *		350395	0					
ANR	350414	Identifier	mutex		350395	1					
ANR	350415	CFGEntryNode	ENTRY		350395		True				
ANR	350416	CFGExitNode	EXIT		350395		True				
ANR	350417	Symbol	mutex		350395						
ANR	350418	Symbol	& mutex -> mutex		350395						
ANR	350419	Function	opj_mutex_destroy	335:0:8778:8928							
ANR	350420	FunctionDef	opj_mutex_destroy (opj_mutex_t * mutex)		350419	0					
ANR	350421	CompoundStatement		336:0:8821:8928	350419	0					
ANR	350422	IfStatement	if ( ! mutex )		350419	0					
ANR	350423	Condition	! mutex	337:8:8831:8836	350419	0	True				
ANR	350424	UnaryOperationExpression	! mutex		350419	0					
ANR	350425	UnaryOperator	!		350419	0					
ANR	350426	Identifier	mutex		350419	1					
ANR	350427	CompoundStatement		2:16:17:17	350419	1					
ANR	350428	ReturnStatement	return ;	338:8:8849:8855	350419	0	True				
ANR	350429	ExpressionStatement	pthread_mutex_destroy ( & ( mutex -> mutex ) )	340:4:8867:8905	350419	1	True				
ANR	350430	CallExpression	pthread_mutex_destroy ( & ( mutex -> mutex ) )		350419	0					
ANR	350431	Callee	pthread_mutex_destroy		350419	0					
ANR	350432	Identifier	pthread_mutex_destroy		350419	0					
ANR	350433	ArgumentList	& ( mutex -> mutex )		350419	1					
ANR	350434	Argument	& ( mutex -> mutex )		350419	0					
ANR	350435	UnaryOperationExpression	& ( mutex -> mutex )		350419	0					
ANR	350436	UnaryOperator	&		350419	0					
ANR	350437	PtrMemberAccess	mutex -> mutex		350419	1					
ANR	350438	Identifier	mutex		350419	0					
ANR	350439	Identifier	mutex		350419	1					
ANR	350440	ExpressionStatement	opj_free ( mutex )	341:4:8911:8926	350419	2	True				
ANR	350441	CallExpression	opj_free ( mutex )		350419	0					
ANR	350442	Callee	opj_free		350419	0					
ANR	350443	Identifier	opj_free		350419	0					
ANR	350444	ArgumentList	mutex		350419	1					
ANR	350445	Argument	mutex		350419	0					
ANR	350446	Identifier	mutex		350419	0					
ANR	350447	ReturnType	void		350419	1					
ANR	350448	Identifier	opj_mutex_destroy		350419	2					
ANR	350449	ParameterList	opj_mutex_t * mutex		350419	3					
ANR	350450	Parameter	opj_mutex_t * mutex	335:23:8801:8818	350419	0	True				
ANR	350451	ParameterType	opj_mutex_t *		350419	0					
ANR	350452	Identifier	mutex		350419	1					
ANR	350453	CFGEntryNode	ENTRY		350419		True				
ANR	350454	CFGExitNode	EXIT		350419		True				
ANR	350455	Symbol	mutex		350419						
ANR	350456	Symbol	& mutex -> mutex		350419						
ANR	350457	ClassDef	opj_cond_t	344:0:8931:8976							
ANR	350458	DeclStmt									
ANR	350459	Decl							pthread_cond_t	pthread_cond_t	cond
ANR	350460	Function	opj_cond_create	348:0:8980:9252							
ANR	350461	FunctionDef	opj_cond_create ()		350460	0					
ANR	350462	CompoundStatement		349:0:9014:9252	350460	0					
ANR	350463	IdentifierDeclStatement	opj_cond_t * cond = ( opj_cond_t * ) opj_malloc ( sizeof ( opj_cond_t ) ) ;	350:4:9020:9083	350460	0	True				
ANR	350464	IdentifierDecl	* cond = ( opj_cond_t * ) opj_malloc ( sizeof ( opj_cond_t ) )		350460	0					
ANR	350465	IdentifierDeclType	opj_cond_t *		350460	0					
ANR	350466	Identifier	cond		350460	1					
ANR	350467	AssignmentExpression	* cond = ( opj_cond_t * ) opj_malloc ( sizeof ( opj_cond_t ) )		350460	2		=			
ANR	350468	Identifier	cond		350460	0					
ANR	350469	CastExpression	( opj_cond_t * ) opj_malloc ( sizeof ( opj_cond_t ) )		350460	1					
ANR	350470	CastTarget	opj_cond_t *		350460	0					
ANR	350471	CallExpression	opj_malloc ( sizeof ( opj_cond_t ) )		350460	1					
ANR	350472	Callee	opj_malloc		350460	0					
ANR	350473	Identifier	opj_malloc		350460	0					
ANR	350474	ArgumentList	sizeof ( opj_cond_t )		350460	1					
ANR	350475	Argument	sizeof ( opj_cond_t )		350460	0					
ANR	350476	SizeofExpression	sizeof ( opj_cond_t )		350460	0					
ANR	350477	Sizeof	sizeof		350460	0					
ANR	350478	SizeofOperand	opj_cond_t		350460	1					
ANR	350479	IfStatement	if ( ! cond )		350460	1					
ANR	350480	Condition	! cond	351:8:9093:9097	350460	0	True				
ANR	350481	UnaryOperationExpression	! cond		350460	0					
ANR	350482	UnaryOperator	!		350460	0					
ANR	350483	Identifier	cond		350460	1					
ANR	350484	CompoundStatement		3:15:85:85	350460	1					
ANR	350485	ReturnStatement	return NULL ;	352:8:9110:9121	350460	0	True				
ANR	350486	Identifier	NULL		350460	0					
ANR	350487	IfStatement	"if ( pthread_cond_init ( & ( cond -> cond ) , NULL ) != 0 )"		350460	2					
ANR	350488	Condition	"pthread_cond_init ( & ( cond -> cond ) , NULL ) != 0"	354:8:9137:9179	350460	0	True				
ANR	350489	EqualityExpression	"pthread_cond_init ( & ( cond -> cond ) , NULL ) != 0"		350460	0		!=			
ANR	350490	CallExpression	"pthread_cond_init ( & ( cond -> cond ) , NULL )"		350460	0					
ANR	350491	Callee	pthread_cond_init		350460	0					
ANR	350492	Identifier	pthread_cond_init		350460	0					
ANR	350493	ArgumentList	& ( cond -> cond )		350460	1					
ANR	350494	Argument	& ( cond -> cond )		350460	0					
ANR	350495	UnaryOperationExpression	& ( cond -> cond )		350460	0					
ANR	350496	UnaryOperator	&		350460	0					
ANR	350497	PtrMemberAccess	cond -> cond		350460	1					
ANR	350498	Identifier	cond		350460	0					
ANR	350499	Identifier	cond		350460	1					
ANR	350500	Argument	NULL		350460	1					
ANR	350501	Identifier	NULL		350460	0					
ANR	350502	PrimaryExpression	0		350460	1					
ANR	350503	CompoundStatement		6:53:167:167	350460	1					
ANR	350504	ExpressionStatement	opj_free ( cond )	355:8:9192:9206	350460	0	True				
ANR	350505	CallExpression	opj_free ( cond )		350460	0					
ANR	350506	Callee	opj_free		350460	0					
ANR	350507	Identifier	opj_free		350460	0					
ANR	350508	ArgumentList	cond		350460	1					
ANR	350509	Argument	cond		350460	0					
ANR	350510	Identifier	cond		350460	0					
ANR	350511	ReturnStatement	return NULL ;	356:8:9216:9227	350460	1	True				
ANR	350512	Identifier	NULL		350460	0					
ANR	350513	ReturnStatement	return cond ;	358:4:9239:9250	350460	3	True				
ANR	350514	Identifier	cond		350460	0					
ANR	350515	ReturnType	opj_cond_t *		350460	1					
ANR	350516	Identifier	opj_cond_create		350460	2					
ANR	350517	ParameterList			350460	3					
ANR	350518	CFGEntryNode	ENTRY		350460		True				
ANR	350519	CFGExitNode	EXIT		350460		True				
ANR	350520	Symbol	opj_malloc		350460						
ANR	350521	Symbol	& cond -> cond		350460						
ANR	350522	Symbol	NULL		350460						
ANR	350523	Symbol	pthread_cond_init		350460						
ANR	350524	Symbol	cond		350460						
ANR	350525	Function	opj_cond_wait	361:0:9255:9369							
ANR	350526	FunctionDef	"opj_cond_wait (opj_cond_t * cond , opj_mutex_t * mutex)"		350525	0					
ANR	350527	CompoundStatement		362:0:9312:9369	350525	0					
ANR	350528	ExpressionStatement	"pthread_cond_wait ( & ( cond -> cond ) , & ( mutex -> mutex ) )"	363:4:9318:9367	350525	0	True				
ANR	350529	CallExpression	"pthread_cond_wait ( & ( cond -> cond ) , & ( mutex -> mutex ) )"		350525	0					
ANR	350530	Callee	pthread_cond_wait		350525	0					
ANR	350531	Identifier	pthread_cond_wait		350525	0					
ANR	350532	ArgumentList	& ( cond -> cond )		350525	1					
ANR	350533	Argument	& ( cond -> cond )		350525	0					
ANR	350534	UnaryOperationExpression	& ( cond -> cond )		350525	0					
ANR	350535	UnaryOperator	&		350525	0					
ANR	350536	PtrMemberAccess	cond -> cond		350525	1					
ANR	350537	Identifier	cond		350525	0					
ANR	350538	Identifier	cond		350525	1					
ANR	350539	Argument	& ( mutex -> mutex )		350525	1					
ANR	350540	UnaryOperationExpression	& ( mutex -> mutex )		350525	0					
ANR	350541	UnaryOperator	&		350525	0					
ANR	350542	PtrMemberAccess	mutex -> mutex		350525	1					
ANR	350543	Identifier	mutex		350525	0					
ANR	350544	Identifier	mutex		350525	1					
ANR	350545	ReturnType	void		350525	1					
ANR	350546	Identifier	opj_cond_wait		350525	2					
ANR	350547	ParameterList	"opj_cond_t * cond , opj_mutex_t * mutex"		350525	3					
ANR	350548	Parameter	opj_cond_t * cond	361:19:9274:9289	350525	0	True				
ANR	350549	ParameterType	opj_cond_t *		350525	0					
ANR	350550	Identifier	cond		350525	1					
ANR	350551	Parameter	opj_mutex_t * mutex	361:37:9292:9309	350525	1	True				
ANR	350552	ParameterType	opj_mutex_t *		350525	0					
ANR	350553	Identifier	mutex		350525	1					
ANR	350554	CFGEntryNode	ENTRY		350525		True				
ANR	350555	CFGExitNode	EXIT		350525		True				
ANR	350556	Symbol	& cond -> cond		350525						
ANR	350557	Symbol	mutex		350525						
ANR	350558	Symbol	& mutex -> mutex		350525						
ANR	350559	Symbol	cond		350525						
ANR	350560	Function	opj_cond_signal	366:0:9372:9500							
ANR	350561	FunctionDef	opj_cond_signal (opj_cond_t * cond)		350560	0					
ANR	350562	CompoundStatement		367:0:9411:9500	350560	0					
ANR	350563	IdentifierDeclStatement	int ret = pthread_cond_signal ( & ( cond -> cond ) ) ;	368:4:9417:9461	350560	0	True				
ANR	350564	IdentifierDecl	ret = pthread_cond_signal ( & ( cond -> cond ) )		350560	0					
ANR	350565	IdentifierDeclType	int		350560	0					
ANR	350566	Identifier	ret		350560	1					
ANR	350567	AssignmentExpression	ret = pthread_cond_signal ( & ( cond -> cond ) )		350560	2		=			
ANR	350568	Identifier	ret		350560	0					
ANR	350569	CallExpression	pthread_cond_signal ( & ( cond -> cond ) )		350560	1					
ANR	350570	Callee	pthread_cond_signal		350560	0					
ANR	350571	Identifier	pthread_cond_signal		350560	0					
ANR	350572	ArgumentList	& ( cond -> cond )		350560	1					
ANR	350573	Argument	& ( cond -> cond )		350560	0					
ANR	350574	UnaryOperationExpression	& ( cond -> cond )		350560	0					
ANR	350575	UnaryOperator	&		350560	0					
ANR	350576	PtrMemberAccess	cond -> cond		350560	1					
ANR	350577	Identifier	cond		350560	0					
ANR	350578	Identifier	cond		350560	1					
ANR	350579	ExpressionStatement	( void ) ret	369:4:9467:9476	350560	1	True				
ANR	350580	CastExpression	( void ) ret		350560	0					
ANR	350581	CastTarget	void		350560	0					
ANR	350582	Identifier	ret		350560	1					
ANR	350583	ExpressionStatement	assert ( ret == 0 )	370:4:9482:9498	350560	2	True				
ANR	350584	CallExpression	assert ( ret == 0 )		350560	0					
ANR	350585	Callee	assert		350560	0					
ANR	350586	Identifier	assert		350560	0					
ANR	350587	ArgumentList	ret == 0		350560	1					
ANR	350588	Argument	ret == 0		350560	0					
ANR	350589	EqualityExpression	ret == 0		350560	0		==			
ANR	350590	Identifier	ret		350560	0					
ANR	350591	PrimaryExpression	0		350560	1					
ANR	350592	ReturnType	void		350560	1					
ANR	350593	Identifier	opj_cond_signal		350560	2					
ANR	350594	ParameterList	opj_cond_t * cond		350560	3					
ANR	350595	Parameter	opj_cond_t * cond	366:21:9393:9408	350560	0	True				
ANR	350596	ParameterType	opj_cond_t *		350560	0					
ANR	350597	Identifier	cond		350560	1					
ANR	350598	CFGEntryNode	ENTRY		350560		True				
ANR	350599	CFGExitNode	EXIT		350560		True				
ANR	350600	Symbol	ret		350560						
ANR	350601	Symbol	& cond -> cond		350560						
ANR	350602	Symbol	cond		350560						
ANR	350603	Symbol	pthread_cond_signal		350560						
ANR	350604	Function	opj_cond_destroy	373:0:9503:9645							
ANR	350605	FunctionDef	opj_cond_destroy (opj_cond_t * cond)		350604	0					
ANR	350606	CompoundStatement		374:0:9543:9645	350604	0					
ANR	350607	IfStatement	if ( ! cond )		350604	0					
ANR	350608	Condition	! cond	375:8:9553:9557	350604	0	True				
ANR	350609	UnaryOperationExpression	! cond		350604	0					
ANR	350610	UnaryOperator	!		350604	0					
ANR	350611	Identifier	cond		350604	1					
ANR	350612	CompoundStatement		2:15:16:16	350604	1					
ANR	350613	ReturnStatement	return ;	376:8:9570:9576	350604	0	True				
ANR	350614	ExpressionStatement	pthread_cond_destroy ( & ( cond -> cond ) )	378:4:9588:9623	350604	1	True				
ANR	350615	CallExpression	pthread_cond_destroy ( & ( cond -> cond ) )		350604	0					
ANR	350616	Callee	pthread_cond_destroy		350604	0					
ANR	350617	Identifier	pthread_cond_destroy		350604	0					
ANR	350618	ArgumentList	& ( cond -> cond )		350604	1					
ANR	350619	Argument	& ( cond -> cond )		350604	0					
ANR	350620	UnaryOperationExpression	& ( cond -> cond )		350604	0					
ANR	350621	UnaryOperator	&		350604	0					
ANR	350622	PtrMemberAccess	cond -> cond		350604	1					
ANR	350623	Identifier	cond		350604	0					
ANR	350624	Identifier	cond		350604	1					
ANR	350625	ExpressionStatement	opj_free ( cond )	379:4:9629:9643	350604	2	True				
ANR	350626	CallExpression	opj_free ( cond )		350604	0					
ANR	350627	Callee	opj_free		350604	0					
ANR	350628	Identifier	opj_free		350604	0					
ANR	350629	ArgumentList	cond		350604	1					
ANR	350630	Argument	cond		350604	0					
ANR	350631	Identifier	cond		350604	0					
ANR	350632	ReturnType	void		350604	1					
ANR	350633	Identifier	opj_cond_destroy		350604	2					
ANR	350634	ParameterList	opj_cond_t * cond		350604	3					
ANR	350635	Parameter	opj_cond_t * cond	373:22:9525:9540	350604	0	True				
ANR	350636	ParameterType	opj_cond_t *		350604	0					
ANR	350637	Identifier	cond		350604	1					
ANR	350638	CFGEntryNode	ENTRY		350604		True				
ANR	350639	CFGExitNode	EXIT		350604		True				
ANR	350640	Symbol	& cond -> cond		350604						
ANR	350641	Symbol	cond		350604						
ANR	350642	ClassDef	opj_thread_t	383:0:9649:9743							
ANR	350643	DeclStmt									
ANR	350644	Decl							opj_thread_fn	opj_thread_fn	thread_fn
ANR	350645	DeclStmt									
ANR	350646	Decl							void	void *	user_data
ANR	350647	DeclStmt									
ANR	350648	Decl							pthread_t	pthread_t	thread
ANR	350649	Function	opj_thread_callback_adapter	389:0:9747:9910							
ANR	350650	FunctionDef	opj_thread_callback_adapter (void * info)		350649	0					
ANR	350651	CompoundStatement		390:0:9800:9910	350649	0					
ANR	350652	IdentifierDeclStatement	opj_thread_t * thread = ( opj_thread_t * ) info ;	391:4:9806:9849	350649	0	True				
ANR	350653	IdentifierDecl	* thread = ( opj_thread_t * ) info		350649	0					
ANR	350654	IdentifierDeclType	opj_thread_t *		350649	0					
ANR	350655	Identifier	thread		350649	1					
ANR	350656	AssignmentExpression	* thread = ( opj_thread_t * ) info		350649	2		=			
ANR	350657	Identifier	thread		350649	0					
ANR	350658	CastExpression	( opj_thread_t * ) info		350649	1					
ANR	350659	CastTarget	opj_thread_t *		350649	0					
ANR	350660	Identifier	info		350649	1					
ANR	350661	ExpressionStatement	thread -> thread_fn ( thread -> user_data )	392:4:9855:9891	350649	1	True				
ANR	350662	CallExpression	thread -> thread_fn ( thread -> user_data )		350649	0					
ANR	350663	Callee	thread -> thread_fn		350649	0					
ANR	350664	PtrMemberAccess	thread -> thread_fn		350649	0					
ANR	350665	Identifier	thread		350649	0					
ANR	350666	Identifier	thread_fn		350649	1					
ANR	350667	ArgumentList	thread -> user_data		350649	1					
ANR	350668	Argument	thread -> user_data		350649	0					
ANR	350669	PtrMemberAccess	thread -> user_data		350649	0					
ANR	350670	Identifier	thread		350649	0					
ANR	350671	Identifier	user_data		350649	1					
ANR	350672	ReturnStatement	return NULL ;	393:4:9897:9908	350649	2	True				
ANR	350673	Identifier	NULL		350649	0					
ANR	350674	ReturnType	static void *		350649	1					
ANR	350675	Identifier	opj_thread_callback_adapter		350649	2					
ANR	350676	ParameterList	void * info		350649	3					
ANR	350677	Parameter	void * info	389:41:9788:9797	350649	0	True				
ANR	350678	ParameterType	void *		350649	0					
ANR	350679	Identifier	info		350649	1					
ANR	350680	CFGEntryNode	ENTRY		350649		True				
ANR	350681	CFGExitNode	EXIT		350649		True				
ANR	350682	Symbol	NULL		350649						
ANR	350683	Symbol	thread -> user_data		350649						
ANR	350684	Symbol	* thread		350649						
ANR	350685	Symbol	thread		350649						
ANR	350686	Symbol	info		350649						
ANR	350687	Function	opj_thread_create	396:0:9913:10538							
ANR	350688	FunctionDef	"opj_thread_create (opj_thread_fn thread_fn , void * user_data)"		350687	0					
ANR	350689	CompoundStatement		397:0:9987:10538	350687	0					
ANR	350690	IdentifierDeclStatement	pthread_attr_t attr ;	398:4:9993:10012	350687	0	True				
ANR	350691	IdentifierDecl	attr		350687	0					
ANR	350692	IdentifierDeclType	pthread_attr_t		350687	0					
ANR	350693	Identifier	attr		350687	1					
ANR	350694	IdentifierDeclStatement	opj_thread_t * thread ;	399:4:10018:10038	350687	1	True				
ANR	350695	IdentifierDecl	* thread		350687	0					
ANR	350696	IdentifierDeclType	opj_thread_t *		350687	0					
ANR	350697	Identifier	thread		350687	1					
ANR	350698	ExpressionStatement	assert ( thread_fn )	401:4:10045:10062	350687	2	True				
ANR	350699	CallExpression	assert ( thread_fn )		350687	0					
ANR	350700	Callee	assert		350687	0					
ANR	350701	Identifier	assert		350687	0					
ANR	350702	ArgumentList	thread_fn		350687	1					
ANR	350703	Argument	thread_fn		350687	0					
ANR	350704	Identifier	thread_fn		350687	0					
ANR	350705	ExpressionStatement	thread = ( opj_thread_t * ) opj_malloc ( sizeof ( opj_thread_t ) )	403:4:10069:10126	350687	3	True				
ANR	350706	AssignmentExpression	thread = ( opj_thread_t * ) opj_malloc ( sizeof ( opj_thread_t ) )		350687	0		=			
ANR	350707	Identifier	thread		350687	0					
ANR	350708	CastExpression	( opj_thread_t * ) opj_malloc ( sizeof ( opj_thread_t ) )		350687	1					
ANR	350709	CastTarget	opj_thread_t *		350687	0					
ANR	350710	CallExpression	opj_malloc ( sizeof ( opj_thread_t ) )		350687	1					
ANR	350711	Callee	opj_malloc		350687	0					
ANR	350712	Identifier	opj_malloc		350687	0					
ANR	350713	ArgumentList	sizeof ( opj_thread_t )		350687	1					
ANR	350714	Argument	sizeof ( opj_thread_t )		350687	0					
ANR	350715	SizeofExpression	sizeof ( opj_thread_t )		350687	0					
ANR	350716	Sizeof	sizeof		350687	0					
ANR	350717	SizeofOperand	opj_thread_t		350687	1					
ANR	350718	IfStatement	if ( ! thread )		350687	4					
ANR	350719	Condition	! thread	404:8:10136:10142	350687	0	True				
ANR	350720	UnaryOperationExpression	! thread		350687	0					
ANR	350721	UnaryOperator	!		350687	0					
ANR	350722	Identifier	thread		350687	1					
ANR	350723	CompoundStatement		8:17:157:157	350687	1					
ANR	350724	ReturnStatement	return NULL ;	405:8:10155:10166	350687	0	True				
ANR	350725	Identifier	NULL		350687	0					
ANR	350726	ExpressionStatement	thread -> thread_fn = thread_fn	407:4:10178:10207	350687	5	True				
ANR	350727	AssignmentExpression	thread -> thread_fn = thread_fn		350687	0		=			
ANR	350728	PtrMemberAccess	thread -> thread_fn		350687	0					
ANR	350729	Identifier	thread		350687	0					
ANR	350730	Identifier	thread_fn		350687	1					
ANR	350731	Identifier	thread_fn		350687	1					
ANR	350732	ExpressionStatement	thread -> user_data = user_data	408:4:10213:10242	350687	6	True				
ANR	350733	AssignmentExpression	thread -> user_data = user_data		350687	0		=			
ANR	350734	PtrMemberAccess	thread -> user_data		350687	0					
ANR	350735	Identifier	thread		350687	0					
ANR	350736	Identifier	user_data		350687	1					
ANR	350737	Identifier	user_data		350687	1					
ANR	350738	ExpressionStatement	pthread_attr_init ( & attr )	410:4:10249:10273	350687	7	True				
ANR	350739	CallExpression	pthread_attr_init ( & attr )		350687	0					
ANR	350740	Callee	pthread_attr_init		350687	0					
ANR	350741	Identifier	pthread_attr_init		350687	0					
ANR	350742	ArgumentList	& attr		350687	1					
ANR	350743	Argument	& attr		350687	0					
ANR	350744	UnaryOperationExpression	& attr		350687	0					
ANR	350745	UnaryOperator	&		350687	0					
ANR	350746	Identifier	attr		350687	1					
ANR	350747	ExpressionStatement	"pthread_attr_setdetachstate ( & attr , PTHREAD_CREATE_JOINABLE )"	411:4:10279:10338	350687	8	True				
ANR	350748	CallExpression	"pthread_attr_setdetachstate ( & attr , PTHREAD_CREATE_JOINABLE )"		350687	0					
ANR	350749	Callee	pthread_attr_setdetachstate		350687	0					
ANR	350750	Identifier	pthread_attr_setdetachstate		350687	0					
ANR	350751	ArgumentList	& attr		350687	1					
ANR	350752	Argument	& attr		350687	0					
ANR	350753	UnaryOperationExpression	& attr		350687	0					
ANR	350754	UnaryOperator	&		350687	0					
ANR	350755	Identifier	attr		350687	1					
ANR	350756	Argument	PTHREAD_CREATE_JOINABLE		350687	1					
ANR	350757	Identifier	PTHREAD_CREATE_JOINABLE		350687	0					
ANR	350758	IfStatement	"if ( pthread_create ( & ( thread -> thread ) , & attr , opj_thread_callback_adapter , ( void * ) thread ) != 0 )"		350687	9					
ANR	350759	Condition	"pthread_create ( & ( thread -> thread ) , & attr , opj_thread_callback_adapter , ( void * ) thread ) != 0"	412:8:10348:10461	350687	0	True				
ANR	350760	EqualityExpression	"pthread_create ( & ( thread -> thread ) , & attr , opj_thread_callback_adapter , ( void * ) thread ) != 0"		350687	0		!=			
ANR	350761	CallExpression	"pthread_create ( & ( thread -> thread ) , & attr , opj_thread_callback_adapter , ( void * ) thread )"		350687	0					
ANR	350762	Callee	pthread_create		350687	0					
ANR	350763	Identifier	pthread_create		350687	0					
ANR	350764	ArgumentList	& ( thread -> thread )		350687	1					
ANR	350765	Argument	& ( thread -> thread )		350687	0					
ANR	350766	UnaryOperationExpression	& ( thread -> thread )		350687	0					
ANR	350767	UnaryOperator	&		350687	0					
ANR	350768	PtrMemberAccess	thread -> thread		350687	1					
ANR	350769	Identifier	thread		350687	0					
ANR	350770	Identifier	thread		350687	1					
ANR	350771	Argument	& attr		350687	1					
ANR	350772	UnaryOperationExpression	& attr		350687	0					
ANR	350773	UnaryOperator	&		350687	0					
ANR	350774	Identifier	attr		350687	1					
ANR	350775	Argument	opj_thread_callback_adapter		350687	2					
ANR	350776	Identifier	opj_thread_callback_adapter		350687	0					
ANR	350777	Argument	( void * ) thread		350687	3					
ANR	350778	CastExpression	( void * ) thread		350687	0					
ANR	350779	CastTarget	void *		350687	0					
ANR	350780	Identifier	thread		350687	1					
ANR	350781	PrimaryExpression	0		350687	1					
ANR	350782	CompoundStatement		17:75:476:476	350687	1					
ANR	350783	ExpressionStatement	opj_free ( thread )	414:8:10474:10490	350687	0	True				
ANR	350784	CallExpression	opj_free ( thread )		350687	0					
ANR	350785	Callee	opj_free		350687	0					
ANR	350786	Identifier	opj_free		350687	0					
ANR	350787	ArgumentList	thread		350687	1					
ANR	350788	Argument	thread		350687	0					
ANR	350789	Identifier	thread		350687	0					
ANR	350790	ReturnStatement	return NULL ;	415:8:10500:10511	350687	1	True				
ANR	350791	Identifier	NULL		350687	0					
ANR	350792	ReturnStatement	return thread ;	417:4:10523:10536	350687	10	True				
ANR	350793	Identifier	thread		350687	0					
ANR	350794	ReturnType	opj_thread_t *		350687	1					
ANR	350795	Identifier	opj_thread_create		350687	2					
ANR	350796	ParameterList	"opj_thread_fn thread_fn , void * user_data"		350687	3					
ANR	350797	Parameter	opj_thread_fn thread_fn	396:32:9945:9967	350687	0	True				
ANR	350798	ParameterType	opj_thread_fn		350687	0					
ANR	350799	Identifier	thread_fn		350687	1					
ANR	350800	Parameter	void * user_data	396:57:9970:9984	350687	1	True				
ANR	350801	ParameterType	void *		350687	0					
ANR	350802	Identifier	user_data		350687	1					
ANR	350803	CFGEntryNode	ENTRY		350687		True				
ANR	350804	CFGExitNode	EXIT		350687		True				
ANR	350805	Symbol	opj_malloc		350687						
ANR	350806	Symbol	NULL		350687						
ANR	350807	Symbol	& attr		350687						
ANR	350808	Symbol	opj_thread_callback_adapter		350687						
ANR	350809	Symbol	user_data		350687						
ANR	350810	Symbol	thread		350687						
ANR	350811	Symbol	PTHREAD_CREATE_JOINABLE		350687						
ANR	350812	Symbol	thread -> user_data		350687						
ANR	350813	Symbol	* thread		350687						
ANR	350814	Symbol	thread -> thread_fn		350687						
ANR	350815	Symbol	attr		350687						
ANR	350816	Symbol	pthread_create		350687						
ANR	350817	Symbol	& thread -> thread		350687						
ANR	350818	Symbol	thread_fn		350687						
ANR	350819	Function	opj_thread_join	420:0:10541:10670							
ANR	350820	FunctionDef	opj_thread_join (opj_thread_t * thread)		350819	0					
ANR	350821	CompoundStatement		421:0:10584:10670	350819	0					
ANR	350822	IdentifierDeclStatement	void * status ;	422:4:10590:10602	350819	0	True				
ANR	350823	IdentifierDecl	* status		350819	0					
ANR	350824	IdentifierDeclType	void *		350819	0					
ANR	350825	Identifier	status		350819	1					
ANR	350826	ExpressionStatement	"pthread_join ( thread -> thread , & status )"	423:4:10608:10645	350819	1	True				
ANR	350827	CallExpression	"pthread_join ( thread -> thread , & status )"		350819	0					
ANR	350828	Callee	pthread_join		350819	0					
ANR	350829	Identifier	pthread_join		350819	0					
ANR	350830	ArgumentList	thread -> thread		350819	1					
ANR	350831	Argument	thread -> thread		350819	0					
ANR	350832	PtrMemberAccess	thread -> thread		350819	0					
ANR	350833	Identifier	thread		350819	0					
ANR	350834	Identifier	thread		350819	1					
ANR	350835	Argument	& status		350819	1					
ANR	350836	UnaryOperationExpression	& status		350819	0					
ANR	350837	UnaryOperator	&		350819	0					
ANR	350838	Identifier	status		350819	1					
ANR	350839	ExpressionStatement	opj_free ( thread )	425:4:10652:10668	350819	2	True				
ANR	350840	CallExpression	opj_free ( thread )		350819	0					
ANR	350841	Callee	opj_free		350819	0					
ANR	350842	Identifier	opj_free		350819	0					
ANR	350843	ArgumentList	thread		350819	1					
ANR	350844	Argument	thread		350819	0					
ANR	350845	Identifier	thread		350819	0					
ANR	350846	ReturnType	void		350819	1					
ANR	350847	Identifier	opj_thread_join		350819	2					
ANR	350848	ParameterList	opj_thread_t * thread		350819	3					
ANR	350849	Parameter	opj_thread_t * thread	420:21:10562:10581	350819	0	True				
ANR	350850	ParameterType	opj_thread_t *		350819	0					
ANR	350851	Identifier	thread		350819	1					
ANR	350852	CFGEntryNode	ENTRY		350819		True				
ANR	350853	CFGExitNode	EXIT		350819		True				
ANR	350854	Symbol	* thread		350819						
ANR	350855	Symbol	thread		350819						
ANR	350856	Symbol	& status		350819						
ANR	350857	Symbol	thread -> thread		350819						
ANR	350858	Symbol	status		350819						
ANR	350859	Function	opj_has_thread_support	433:0:10733:10808							
ANR	350860	FunctionDef	opj_has_thread_support ()		350859	0					
ANR	350861	CompoundStatement		434:0:10784:10808	350859	0					
ANR	350862	ReturnStatement	return OPJ_FALSE ;	435:4:10790:10806	350859	0	True				
ANR	350863	Identifier	OPJ_FALSE		350859	0					
ANR	350864	ReturnType	OPJ_BOOL OPJ_CALLCONV		350859	1					
ANR	350865	Identifier	opj_has_thread_support		350859	2					
ANR	350866	ParameterList			350859	3					
ANR	350867	CFGEntryNode	ENTRY		350859		True				
ANR	350868	CFGExitNode	EXIT		350859		True				
ANR	350869	Symbol	OPJ_FALSE		350859						
ANR	350870	Function	opj_get_num_cpus	438:0:10811:10867							
ANR	350871	FunctionDef	opj_get_num_cpus ()		350870	0					
ANR	350872	CompoundStatement		439:0:10851:10867	350870	0					
ANR	350873	ReturnStatement	return 1 ;	440:4:10857:10865	350870	0	True				
ANR	350874	PrimaryExpression	1		350870	0					
ANR	350875	ReturnType	int OPJ_CALLCONV		350870	1					
ANR	350876	Identifier	opj_get_num_cpus		350870	2					
ANR	350877	ParameterList			350870	3					
ANR	350878	CFGEntryNode	ENTRY		350870		True				
ANR	350879	CFGExitNode	EXIT		350870		True				
ANR	350880	Function	opj_mutex_create	443:0:10870:10925							
ANR	350881	FunctionDef	opj_mutex_create ()		350880	0					
ANR	350882	CompoundStatement		444:0:10906:10925	350880	0					
ANR	350883	ReturnStatement	return NULL ;	445:4:10912:10923	350880	0	True				
ANR	350884	Identifier	NULL		350880	0					
ANR	350885	ReturnType	opj_mutex_t *		350880	1					
ANR	350886	Identifier	opj_mutex_create		350880	2					
ANR	350887	ParameterList			350880	3					
ANR	350888	CFGEntryNode	ENTRY		350880		True				
ANR	350889	CFGExitNode	EXIT		350880		True				
ANR	350890	Symbol	NULL		350880						
ANR	350891	Function	opj_mutex_lock	448:0:10928:10988							
ANR	350892	FunctionDef	opj_mutex_lock (opj_mutex_t * mutex)		350891	0					
ANR	350893	CompoundStatement		449:0:10968:10988	350891	0					
ANR	350894	ExpressionStatement	( void ) mutex	450:4:10974:10986	350891	0	True				
ANR	350895	CastExpression	( void ) mutex		350891	0					
ANR	350896	CastTarget	void		350891	0					
ANR	350897	Identifier	mutex		350891	1					
ANR	350898	ReturnType	void		350891	1					
ANR	350899	Identifier	opj_mutex_lock		350891	2					
ANR	350900	ParameterList	opj_mutex_t * mutex		350891	3					
ANR	350901	Parameter	opj_mutex_t * mutex	448:20:10948:10965	350891	0	True				
ANR	350902	ParameterType	opj_mutex_t *		350891	0					
ANR	350903	Identifier	mutex		350891	1					
ANR	350904	CFGEntryNode	ENTRY		350891		True				
ANR	350905	CFGExitNode	EXIT		350891		True				
ANR	350906	Symbol	mutex		350891						
ANR	350907	Function	opj_mutex_unlock	453:0:10991:11053							
ANR	350908	FunctionDef	opj_mutex_unlock (opj_mutex_t * mutex)		350907	0					
ANR	350909	CompoundStatement		454:0:11033:11053	350907	0					
ANR	350910	ExpressionStatement	( void ) mutex	455:4:11039:11051	350907	0	True				
ANR	350911	CastExpression	( void ) mutex		350907	0					
ANR	350912	CastTarget	void		350907	0					
ANR	350913	Identifier	mutex		350907	1					
ANR	350914	ReturnType	void		350907	1					
ANR	350915	Identifier	opj_mutex_unlock		350907	2					
ANR	350916	ParameterList	opj_mutex_t * mutex		350907	3					
ANR	350917	Parameter	opj_mutex_t * mutex	453:22:11013:11030	350907	0	True				
ANR	350918	ParameterType	opj_mutex_t *		350907	0					
ANR	350919	Identifier	mutex		350907	1					
ANR	350920	CFGEntryNode	ENTRY		350907		True				
ANR	350921	CFGExitNode	EXIT		350907		True				
ANR	350922	Symbol	mutex		350907						
ANR	350923	Function	opj_mutex_destroy	458:0:11056:11119							
ANR	350924	FunctionDef	opj_mutex_destroy (opj_mutex_t * mutex)		350923	0					
ANR	350925	CompoundStatement		459:0:11099:11119	350923	0					
ANR	350926	ExpressionStatement	( void ) mutex	460:4:11105:11117	350923	0	True				
ANR	350927	CastExpression	( void ) mutex		350923	0					
ANR	350928	CastTarget	void		350923	0					
ANR	350929	Identifier	mutex		350923	1					
ANR	350930	ReturnType	void		350923	1					
ANR	350931	Identifier	opj_mutex_destroy		350923	2					
ANR	350932	ParameterList	opj_mutex_t * mutex		350923	3					
ANR	350933	Parameter	opj_mutex_t * mutex	458:23:11079:11096	350923	0	True				
ANR	350934	ParameterType	opj_mutex_t *		350923	0					
ANR	350935	Identifier	mutex		350923	1					
ANR	350936	CFGEntryNode	ENTRY		350923		True				
ANR	350937	CFGExitNode	EXIT		350923		True				
ANR	350938	Symbol	mutex		350923						
ANR	350939	Function	opj_cond_create	463:0:11122:11175							
ANR	350940	FunctionDef	opj_cond_create ()		350939	0					
ANR	350941	CompoundStatement		464:0:11156:11175	350939	0					
ANR	350942	ReturnStatement	return NULL ;	465:4:11162:11173	350939	0	True				
ANR	350943	Identifier	NULL		350939	0					
ANR	350944	ReturnType	opj_cond_t *		350939	1					
ANR	350945	Identifier	opj_cond_create		350939	2					
ANR	350946	ParameterList			350939	3					
ANR	350947	CFGEntryNode	ENTRY		350939		True				
ANR	350948	CFGExitNode	EXIT		350939		True				
ANR	350949	Symbol	NULL		350939						
ANR	350950	Function	opj_cond_wait	468:0:11178:11272							
ANR	350951	FunctionDef	"opj_cond_wait (opj_cond_t * cond , opj_mutex_t * mutex)"		350950	0					
ANR	350952	CompoundStatement		469:0:11235:11272	350950	0					
ANR	350953	ExpressionStatement	( void ) cond	470:4:11241:11252	350950	0	True				
ANR	350954	CastExpression	( void ) cond		350950	0					
ANR	350955	CastTarget	void		350950	0					
ANR	350956	Identifier	cond		350950	1					
ANR	350957	ExpressionStatement	( void ) mutex	471:4:11258:11270	350950	1	True				
ANR	350958	CastExpression	( void ) mutex		350950	0					
ANR	350959	CastTarget	void		350950	0					
ANR	350960	Identifier	mutex		350950	1					
ANR	350961	ReturnType	void		350950	1					
ANR	350962	Identifier	opj_cond_wait		350950	2					
ANR	350963	ParameterList	"opj_cond_t * cond , opj_mutex_t * mutex"		350950	3					
ANR	350964	Parameter	opj_cond_t * cond	468:19:11197:11212	350950	0	True				
ANR	350965	ParameterType	opj_cond_t *		350950	0					
ANR	350966	Identifier	cond		350950	1					
ANR	350967	Parameter	opj_mutex_t * mutex	468:37:11215:11232	350950	1	True				
ANR	350968	ParameterType	opj_mutex_t *		350950	0					
ANR	350969	Identifier	mutex		350950	1					
ANR	350970	CFGEntryNode	ENTRY		350950		True				
ANR	350971	CFGExitNode	EXIT		350950		True				
ANR	350972	Symbol	mutex		350950						
ANR	350973	Symbol	cond		350950						
ANR	350974	Function	opj_cond_signal	474:0:11275:11333							
ANR	350975	FunctionDef	opj_cond_signal (opj_cond_t * cond)		350974	0					
ANR	350976	CompoundStatement		475:0:11314:11333	350974	0					
ANR	350977	ExpressionStatement	( void ) cond	476:4:11320:11331	350974	0	True				
ANR	350978	CastExpression	( void ) cond		350974	0					
ANR	350979	CastTarget	void		350974	0					
ANR	350980	Identifier	cond		350974	1					
ANR	350981	ReturnType	void		350974	1					
ANR	350982	Identifier	opj_cond_signal		350974	2					
ANR	350983	ParameterList	opj_cond_t * cond		350974	3					
ANR	350984	Parameter	opj_cond_t * cond	474:21:11296:11311	350974	0	True				
ANR	350985	ParameterType	opj_cond_t *		350974	0					
ANR	350986	Identifier	cond		350974	1					
ANR	350987	CFGEntryNode	ENTRY		350974		True				
ANR	350988	CFGExitNode	EXIT		350974		True				
ANR	350989	Symbol	cond		350974						
ANR	350990	Function	opj_cond_destroy	479:0:11336:11395							
ANR	350991	FunctionDef	opj_cond_destroy (opj_cond_t * cond)		350990	0					
ANR	350992	CompoundStatement		480:0:11376:11395	350990	0					
ANR	350993	ExpressionStatement	( void ) cond	481:4:11382:11393	350990	0	True				
ANR	350994	CastExpression	( void ) cond		350990	0					
ANR	350995	CastTarget	void		350990	0					
ANR	350996	Identifier	cond		350990	1					
ANR	350997	ReturnType	void		350990	1					
ANR	350998	Identifier	opj_cond_destroy		350990	2					
ANR	350999	ParameterList	opj_cond_t * cond		350990	3					
ANR	351000	Parameter	opj_cond_t * cond	479:22:11358:11373	350990	0	True				
ANR	351001	ParameterType	opj_cond_t *		350990	0					
ANR	351002	Identifier	cond		350990	1					
ANR	351003	CFGEntryNode	ENTRY		350990		True				
ANR	351004	CFGExitNode	EXIT		350990		True				
ANR	351005	Symbol	cond		350990						
ANR	351006	Function	opj_thread_create	484:0:11398:11535							
ANR	351007	FunctionDef	"opj_thread_create (opj_thread_fn thread_fn , void * user_data)"		351006	0					
ANR	351008	CompoundStatement		485:0:11472:11535	351006	0					
ANR	351009	ExpressionStatement	( void ) thread_fn	486:4:11478:11494	351006	0	True				
ANR	351010	CastExpression	( void ) thread_fn		351006	0					
ANR	351011	CastTarget	void		351006	0					
ANR	351012	Identifier	thread_fn		351006	1					
ANR	351013	ExpressionStatement	( void ) user_data	487:4:11500:11516	351006	1	True				
ANR	351014	CastExpression	( void ) user_data		351006	0					
ANR	351015	CastTarget	void		351006	0					
ANR	351016	Identifier	user_data		351006	1					
ANR	351017	ReturnStatement	return NULL ;	488:4:11522:11533	351006	2	True				
ANR	351018	Identifier	NULL		351006	0					
ANR	351019	ReturnType	opj_thread_t *		351006	1					
ANR	351020	Identifier	opj_thread_create		351006	2					
ANR	351021	ParameterList	"opj_thread_fn thread_fn , void * user_data"		351006	3					
ANR	351022	Parameter	opj_thread_fn thread_fn	484:32:11430:11452	351006	0	True				
ANR	351023	ParameterType	opj_thread_fn		351006	0					
ANR	351024	Identifier	thread_fn		351006	1					
ANR	351025	Parameter	void * user_data	484:57:11455:11469	351006	1	True				
ANR	351026	ParameterType	void *		351006	0					
ANR	351027	Identifier	user_data		351006	1					
ANR	351028	CFGEntryNode	ENTRY		351006		True				
ANR	351029	CFGExitNode	EXIT		351006		True				
ANR	351030	Symbol	NULL		351006						
ANR	351031	Symbol	user_data		351006						
ANR	351032	Symbol	thread_fn		351006						
ANR	351033	Function	opj_thread_join	491:0:11538:11602							
ANR	351034	FunctionDef	opj_thread_join (opj_thread_t * thread)		351033	0					
ANR	351035	CompoundStatement		492:0:11581:11602	351033	0					
ANR	351036	ExpressionStatement	( void ) thread	493:4:11587:11600	351033	0	True				
ANR	351037	CastExpression	( void ) thread		351033	0					
ANR	351038	CastTarget	void		351033	0					
ANR	351039	Identifier	thread		351033	1					
ANR	351040	ReturnType	void		351033	1					
ANR	351041	Identifier	opj_thread_join		351033	2					
ANR	351042	ParameterList	opj_thread_t * thread		351033	3					
ANR	351043	Parameter	opj_thread_t * thread	491:21:11559:11578	351033	0	True				
ANR	351044	ParameterType	opj_thread_t *		351033	0					
ANR	351045	Identifier	thread		351033	1					
ANR	351046	CFGEntryNode	ENTRY		351033		True				
ANR	351047	CFGExitNode	EXIT		351033		True				
ANR	351048	Symbol	thread		351033						
ANR	351049	ClassDef	<unnamed>	498:8:11621:11716							
ANR	351050	DeclStmt									
ANR	351051	Decl							int	int	key
ANR	351052	DeclStmt									
ANR	351053	Decl							void	void *	value
ANR	351054	DeclStmt									
ANR	351055	Decl							opj_tls_free_func	opj_tls_free_func	opj_free_func
ANR	351056	DeclStmt									
ANR	351057	Decl									opj_tls_key_val_t
ANR	351058	ClassDef	opj_tls_t	504:0:11719:11808							
ANR	351059	DeclStmt									
ANR	351060	Decl							opj_tls_key_val_t	opj_tls_key_val_t *	key_val
ANR	351061	DeclStmt									
ANR	351062	Decl							int	int	key_val_count
ANR	351063	Function	opj_tls_new	509:0:11812:11908							
ANR	351064	FunctionDef	opj_tls_new ()		351063	0					
ANR	351065	CompoundStatement		510:0:11848:11908	351063	0					
ANR	351066	ReturnStatement	"return ( opj_tls_t * ) opj_calloc ( 1 , sizeof ( opj_tls_t ) ) ;"	511:4:11854:11906	351063	0	True				
ANR	351067	CastExpression	"( opj_tls_t * ) opj_calloc ( 1 , sizeof ( opj_tls_t ) )"		351063	0					
ANR	351068	CastTarget	opj_tls_t *		351063	0					
ANR	351069	CallExpression	"opj_calloc ( 1 , sizeof ( opj_tls_t ) )"		351063	1					
ANR	351070	Callee	opj_calloc		351063	0					
ANR	351071	Identifier	opj_calloc		351063	0					
ANR	351072	ArgumentList	1		351063	1					
ANR	351073	Argument	1		351063	0					
ANR	351074	PrimaryExpression	1		351063	0					
ANR	351075	Argument	sizeof ( opj_tls_t )		351063	1					
ANR	351076	SizeofExpression	sizeof ( opj_tls_t )		351063	0					
ANR	351077	Sizeof	sizeof		351063	0					
ANR	351078	SizeofOperand	opj_tls_t		351063	1					
ANR	351079	ReturnType	static opj_tls_t *		351063	1					
ANR	351080	Identifier	opj_tls_new		351063	2					
ANR	351081	ParameterList			351063	3					
ANR	351082	CFGEntryNode	ENTRY		351063		True				
ANR	351083	CFGExitNode	EXIT		351063		True				
ANR	351084	Symbol	opj_calloc		351063						
ANR	351085	Function	opj_tls_destroy	514:0:11911:12227							
ANR	351086	FunctionDef	opj_tls_destroy (opj_tls_t * tls)		351085	0					
ANR	351087	CompoundStatement		515:0:11955:12227	351085	0					
ANR	351088	IdentifierDeclStatement	int i ;	516:4:11961:11966	351085	0	True				
ANR	351089	IdentifierDecl	i		351085	0					
ANR	351090	IdentifierDeclType	int		351085	0					
ANR	351091	Identifier	i		351085	1					
ANR	351092	IfStatement	if ( ! tls )		351085	1					
ANR	351093	Condition	! tls	517:8:11976:11979	351085	0	True				
ANR	351094	UnaryOperationExpression	! tls		351085	0					
ANR	351095	UnaryOperator	!		351085	0					
ANR	351096	Identifier	tls		351085	1					
ANR	351097	CompoundStatement		3:14:26:26	351085	1					
ANR	351098	ReturnStatement	return ;	518:8:11992:11998	351085	0	True				
ANR	351099	ForStatement	for ( i = 0 ; i < tls -> key_val_count ; i ++ )		351085	2					
ANR	351100	ForInit	i = 0 ;	520:9:12015:12020	351085	0	True				
ANR	351101	AssignmentExpression	i = 0		351085	0		=			
ANR	351102	Identifier	i		351085	0					
ANR	351103	PrimaryExpression	0		351085	1					
ANR	351104	Condition	i < tls -> key_val_count	520:16:12022:12043	351085	1	True				
ANR	351105	RelationalExpression	i < tls -> key_val_count		351085	0		<			
ANR	351106	Identifier	i		351085	0					
ANR	351107	PtrMemberAccess	tls -> key_val_count		351085	1					
ANR	351108	Identifier	tls		351085	0					
ANR	351109	Identifier	key_val_count		351085	1					
ANR	351110	PostIncDecOperationExpression	i ++	520:40:12046:12048	351085	2	True				
ANR	351111	Identifier	i		351085	0					
ANR	351112	IncDec	++		351085	1					
ANR	351113	CompoundStatement		6:45:95:95	351085	3					
ANR	351114	IfStatement	if ( tls -> key_val [ i ] . opj_free_func )		351085	0					
ANR	351115	Condition	tls -> key_val [ i ] . opj_free_func	521:12:12065:12093	351085	0	True				
ANR	351116	MemberAccess	tls -> key_val [ i ] . opj_free_func		351085	0					
ANR	351117	ArrayIndexing	tls -> key_val [ i ]		351085	0					
ANR	351118	PtrMemberAccess	tls -> key_val		351085	0					
ANR	351119	Identifier	tls		351085	0					
ANR	351120	Identifier	key_val		351085	1					
ANR	351121	Identifier	i		351085	1					
ANR	351122	Identifier	opj_free_func		351085	1					
ANR	351123	CompoundStatement		7:43:140:140	351085	1					
ANR	351124	ExpressionStatement	tls -> key_val [ i ] . opj_free_func ( tls -> key_val [ i ] . value )	522:12:12110:12162	351085	0	True				
ANR	351125	CallExpression	tls -> key_val [ i ] . opj_free_func ( tls -> key_val [ i ] . value )		351085	0					
ANR	351126	Callee	tls -> key_val [ i ] . opj_free_func		351085	0					
ANR	351127	MemberAccess	tls -> key_val [ i ] . opj_free_func		351085	0					
ANR	351128	ArrayIndexing	tls -> key_val [ i ]		351085	0					
ANR	351129	PtrMemberAccess	tls -> key_val		351085	0					
ANR	351130	Identifier	tls		351085	0					
ANR	351131	Identifier	key_val		351085	1					
ANR	351132	Identifier	i		351085	1					
ANR	351133	Identifier	opj_free_func		351085	1					
ANR	351134	ArgumentList	tls -> key_val [ i ] . value		351085	1					
ANR	351135	Argument	tls -> key_val [ i ] . value		351085	0					
ANR	351136	MemberAccess	tls -> key_val [ i ] . value		351085	0					
ANR	351137	ArrayIndexing	tls -> key_val [ i ]		351085	0					
ANR	351138	PtrMemberAccess	tls -> key_val		351085	0					
ANR	351139	Identifier	tls		351085	0					
ANR	351140	Identifier	key_val		351085	1					
ANR	351141	Identifier	i		351085	1					
ANR	351142	Identifier	value		351085	1					
ANR	351143	ExpressionStatement	opj_free ( tls -> key_val )	525:4:12184:12206	351085	3	True				
ANR	351144	CallExpression	opj_free ( tls -> key_val )		351085	0					
ANR	351145	Callee	opj_free		351085	0					
ANR	351146	Identifier	opj_free		351085	0					
ANR	351147	ArgumentList	tls -> key_val		351085	1					
ANR	351148	Argument	tls -> key_val		351085	0					
ANR	351149	PtrMemberAccess	tls -> key_val		351085	0					
ANR	351150	Identifier	tls		351085	0					
ANR	351151	Identifier	key_val		351085	1					
ANR	351152	ExpressionStatement	opj_free ( tls )	526:4:12212:12225	351085	4	True				
ANR	351153	CallExpression	opj_free ( tls )		351085	0					
ANR	351154	Callee	opj_free		351085	0					
ANR	351155	Identifier	opj_free		351085	0					
ANR	351156	ArgumentList	tls		351085	1					
ANR	351157	Argument	tls		351085	0					
ANR	351158	Identifier	tls		351085	0					
ANR	351159	ReturnType	static void		351085	1					
ANR	351160	Identifier	opj_tls_destroy		351085	2					
ANR	351161	ParameterList	opj_tls_t * tls		351085	3					
ANR	351162	Parameter	opj_tls_t * tls	514:28:11939:11952	351085	0	True				
ANR	351163	ParameterType	opj_tls_t *		351085	0					
ANR	351164	Identifier	tls		351085	1					
ANR	351165	CFGEntryNode	ENTRY		351085		True				
ANR	351166	CFGExitNode	EXIT		351085		True				
ANR	351167	Symbol	tls -> key_val [ i ] . opj_free_func		351085						
ANR	351168	Symbol	tls -> key_val		351085						
ANR	351169	Symbol	* i		351085						
ANR	351170	Symbol	* tls		351085						
ANR	351171	Symbol	tls -> key_val_count		351085						
ANR	351172	Symbol	tls -> key_val [ i ] . value		351085						
ANR	351173	Symbol	i		351085						
ANR	351174	Symbol	tls		351085						
ANR	351175	Symbol	* tls -> key_val		351085						
ANR	351176	Symbol	* * tls		351085						
ANR	351177	Function	opj_tls_get	529:0:12230:12450							
ANR	351178	FunctionDef	"opj_tls_get (opj_tls_t * tls , int key)"		351177	0					
ANR	351179	CompoundStatement		530:0:12273:12450	351177	0					
ANR	351180	IdentifierDeclStatement	int i ;	531:4:12279:12284	351177	0	True				
ANR	351181	IdentifierDecl	i		351177	0					
ANR	351182	IdentifierDeclType	int		351177	0					
ANR	351183	Identifier	i		351177	1					
ANR	351184	ForStatement	for ( i = 0 ; i < tls -> key_val_count ; i ++ )		351177	1					
ANR	351185	ForInit	i = 0 ;	532:9:12295:12300	351177	0	True				
ANR	351186	AssignmentExpression	i = 0		351177	0		=			
ANR	351187	Identifier	i		351177	0					
ANR	351188	PrimaryExpression	0		351177	1					
ANR	351189	Condition	i < tls -> key_val_count	532:16:12302:12323	351177	1	True				
ANR	351190	RelationalExpression	i < tls -> key_val_count		351177	0		<			
ANR	351191	Identifier	i		351177	0					
ANR	351192	PtrMemberAccess	tls -> key_val_count		351177	1					
ANR	351193	Identifier	tls		351177	0					
ANR	351194	Identifier	key_val_count		351177	1					
ANR	351195	PostIncDecOperationExpression	i ++	532:40:12326:12328	351177	2	True				
ANR	351196	Identifier	i		351177	0					
ANR	351197	IncDec	++		351177	1					
ANR	351198	CompoundStatement		3:45:57:57	351177	3					
ANR	351199	IfStatement	if ( tls -> key_val [ i ] . key == key )		351177	0					
ANR	351200	Condition	tls -> key_val [ i ] . key == key	533:12:12345:12370	351177	0	True				
ANR	351201	EqualityExpression	tls -> key_val [ i ] . key == key		351177	0		==			
ANR	351202	MemberAccess	tls -> key_val [ i ] . key		351177	0					
ANR	351203	ArrayIndexing	tls -> key_val [ i ]		351177	0					
ANR	351204	PtrMemberAccess	tls -> key_val		351177	0					
ANR	351205	Identifier	tls		351177	0					
ANR	351206	Identifier	key_val		351177	1					
ANR	351207	Identifier	i		351177	1					
ANR	351208	Identifier	key		351177	1					
ANR	351209	Identifier	key		351177	1					
ANR	351210	CompoundStatement		4:40:99:99	351177	1					
ANR	351211	ReturnStatement	return tls -> key_val [ i ] . value ;	534:12:12387:12415	351177	0	True				
ANR	351212	MemberAccess	tls -> key_val [ i ] . value		351177	0					
ANR	351213	ArrayIndexing	tls -> key_val [ i ]		351177	0					
ANR	351214	PtrMemberAccess	tls -> key_val		351177	0					
ANR	351215	Identifier	tls		351177	0					
ANR	351216	Identifier	key_val		351177	1					
ANR	351217	Identifier	i		351177	1					
ANR	351218	Identifier	value		351177	1					
ANR	351219	ReturnStatement	return NULL ;	537:4:12437:12448	351177	2	True				
ANR	351220	Identifier	NULL		351177	0					
ANR	351221	ReturnType	void *		351177	1					
ANR	351222	Identifier	opj_tls_get		351177	2					
ANR	351223	ParameterList	"opj_tls_t * tls , int key"		351177	3					
ANR	351224	Parameter	opj_tls_t * tls	529:18:12248:12261	351177	0	True				
ANR	351225	ParameterType	opj_tls_t *		351177	0					
ANR	351226	Identifier	tls		351177	1					
ANR	351227	Parameter	int key	529:34:12264:12270	351177	1	True				
ANR	351228	ParameterType	int		351177	0					
ANR	351229	Identifier	key		351177	1					
ANR	351230	CFGEntryNode	ENTRY		351177		True				
ANR	351231	CFGExitNode	EXIT		351177		True				
ANR	351232	Symbol	tls -> key_val		351177						
ANR	351233	Symbol	* i		351177						
ANR	351234	Symbol	NULL		351177						
ANR	351235	Symbol	* tls		351177						
ANR	351236	Symbol	tls -> key_val_count		351177						
ANR	351237	Symbol	tls -> key_val [ i ] . value		351177						
ANR	351238	Symbol	i		351177						
ANR	351239	Symbol	tls		351177						
ANR	351240	Symbol	* tls -> key_val		351177						
ANR	351241	Symbol	tls -> key_val [ i ] . key		351177						
ANR	351242	Symbol	key		351177						
ANR	351243	Symbol	* * tls		351177						
ANR	351244	Function	opj_tls_set	540:0:12453:13506							
ANR	351245	FunctionDef	"opj_tls_set (opj_tls_t * tls , int key , void * value , opj_tls_free_func opj_free_func)"		351244	0					
ANR	351246	CompoundStatement		542:0:12566:13506	351244	0					
ANR	351247	IdentifierDeclStatement	opj_tls_key_val_t * new_key_val ;	543:4:12572:12602	351244	0	True				
ANR	351248	IdentifierDecl	* new_key_val		351244	0					
ANR	351249	IdentifierDeclType	opj_tls_key_val_t *		351244	0					
ANR	351250	Identifier	new_key_val		351244	1					
ANR	351251	IdentifierDeclStatement	int i ;	544:4:12608:12613	351244	1	True				
ANR	351252	IdentifierDecl	i		351244	0					
ANR	351253	IdentifierDeclType	int		351244	0					
ANR	351254	Identifier	i		351244	1					
ANR	351255	IfStatement	if ( tls -> key_val_count == INT_MAX )		351244	2					
ANR	351256	Condition	tls -> key_val_count == INT_MAX	546:8:12624:12652	351244	0	True				
ANR	351257	EqualityExpression	tls -> key_val_count == INT_MAX		351244	0		==			
ANR	351258	PtrMemberAccess	tls -> key_val_count		351244	0					
ANR	351259	Identifier	tls		351244	0					
ANR	351260	Identifier	key_val_count		351244	1					
ANR	351261	Identifier	INT_MAX		351244	1					
ANR	351262	CompoundStatement		5:39:88:88	351244	1					
ANR	351263	ReturnStatement	return OPJ_FALSE ;	547:8:12665:12681	351244	0	True				
ANR	351264	Identifier	OPJ_FALSE		351244	0					
ANR	351265	ForStatement	for ( i = 0 ; i < tls -> key_val_count ; i ++ )		351244	3					
ANR	351266	ForInit	i = 0 ;	549:9:12698:12703	351244	0	True				
ANR	351267	AssignmentExpression	i = 0		351244	0		=			
ANR	351268	Identifier	i		351244	0					
ANR	351269	PrimaryExpression	0		351244	1					
ANR	351270	Condition	i < tls -> key_val_count	549:16:12705:12726	351244	1	True				
ANR	351271	RelationalExpression	i < tls -> key_val_count		351244	0		<			
ANR	351272	Identifier	i		351244	0					
ANR	351273	PtrMemberAccess	tls -> key_val_count		351244	1					
ANR	351274	Identifier	tls		351244	0					
ANR	351275	Identifier	key_val_count		351244	1					
ANR	351276	PostIncDecOperationExpression	i ++	549:40:12729:12731	351244	2	True				
ANR	351277	Identifier	i		351244	0					
ANR	351278	IncDec	++		351244	1					
ANR	351279	CompoundStatement		8:45:167:167	351244	3					
ANR	351280	IfStatement	if ( tls -> key_val [ i ] . key == key )		351244	0					
ANR	351281	Condition	tls -> key_val [ i ] . key == key	550:12:12748:12773	351244	0	True				
ANR	351282	EqualityExpression	tls -> key_val [ i ] . key == key		351244	0		==			
ANR	351283	MemberAccess	tls -> key_val [ i ] . key		351244	0					
ANR	351284	ArrayIndexing	tls -> key_val [ i ]		351244	0					
ANR	351285	PtrMemberAccess	tls -> key_val		351244	0					
ANR	351286	Identifier	tls		351244	0					
ANR	351287	Identifier	key_val		351244	1					
ANR	351288	Identifier	i		351244	1					
ANR	351289	Identifier	key		351244	1					
ANR	351290	Identifier	key		351244	1					
ANR	351291	CompoundStatement		9:40:209:209	351244	1					
ANR	351292	IfStatement	if ( tls -> key_val [ i ] . opj_free_func )		351244	0					
ANR	351293	Condition	tls -> key_val [ i ] . opj_free_func	551:16:12794:12822	351244	0	True				
ANR	351294	MemberAccess	tls -> key_val [ i ] . opj_free_func		351244	0					
ANR	351295	ArrayIndexing	tls -> key_val [ i ]		351244	0					
ANR	351296	PtrMemberAccess	tls -> key_val		351244	0					
ANR	351297	Identifier	tls		351244	0					
ANR	351298	Identifier	key_val		351244	1					
ANR	351299	Identifier	i		351244	1					
ANR	351300	Identifier	opj_free_func		351244	1					
ANR	351301	CompoundStatement		10:47:258:258	351244	1					
ANR	351302	ExpressionStatement	tls -> key_val [ i ] . opj_free_func ( tls -> key_val [ i ] . value )	552:16:12843:12895	351244	0	True				
ANR	351303	CallExpression	tls -> key_val [ i ] . opj_free_func ( tls -> key_val [ i ] . value )		351244	0					
ANR	351304	Callee	tls -> key_val [ i ] . opj_free_func		351244	0					
ANR	351305	MemberAccess	tls -> key_val [ i ] . opj_free_func		351244	0					
ANR	351306	ArrayIndexing	tls -> key_val [ i ]		351244	0					
ANR	351307	PtrMemberAccess	tls -> key_val		351244	0					
ANR	351308	Identifier	tls		351244	0					
ANR	351309	Identifier	key_val		351244	1					
ANR	351310	Identifier	i		351244	1					
ANR	351311	Identifier	opj_free_func		351244	1					
ANR	351312	ArgumentList	tls -> key_val [ i ] . value		351244	1					
ANR	351313	Argument	tls -> key_val [ i ] . value		351244	0					
ANR	351314	MemberAccess	tls -> key_val [ i ] . value		351244	0					
ANR	351315	ArrayIndexing	tls -> key_val [ i ]		351244	0					
ANR	351316	PtrMemberAccess	tls -> key_val		351244	0					
ANR	351317	Identifier	tls		351244	0					
ANR	351318	Identifier	key_val		351244	1					
ANR	351319	Identifier	i		351244	1					
ANR	351320	Identifier	value		351244	1					
ANR	351321	ExpressionStatement	tls -> key_val [ i ] . value = value	554:12:12923:12952	351244	1	True				
ANR	351322	AssignmentExpression	tls -> key_val [ i ] . value = value		351244	0		=			
ANR	351323	MemberAccess	tls -> key_val [ i ] . value		351244	0					
ANR	351324	ArrayIndexing	tls -> key_val [ i ]		351244	0					
ANR	351325	PtrMemberAccess	tls -> key_val		351244	0					
ANR	351326	Identifier	tls		351244	0					
ANR	351327	Identifier	key_val		351244	1					
ANR	351328	Identifier	i		351244	1					
ANR	351329	Identifier	value		351244	1					
ANR	351330	Identifier	value		351244	1					
ANR	351331	ExpressionStatement	tls -> key_val [ i ] . opj_free_func = opj_free_func	555:12:12966:13011	351244	2	True				
ANR	351332	AssignmentExpression	tls -> key_val [ i ] . opj_free_func = opj_free_func		351244	0		=			
ANR	351333	MemberAccess	tls -> key_val [ i ] . opj_free_func		351244	0					
ANR	351334	ArrayIndexing	tls -> key_val [ i ]		351244	0					
ANR	351335	PtrMemberAccess	tls -> key_val		351244	0					
ANR	351336	Identifier	tls		351244	0					
ANR	351337	Identifier	key_val		351244	1					
ANR	351338	Identifier	i		351244	1					
ANR	351339	Identifier	opj_free_func		351244	1					
ANR	351340	Identifier	opj_free_func		351244	1					
ANR	351341	ReturnStatement	return OPJ_TRUE ;	556:12:13025:13040	351244	3	True				
ANR	351342	Identifier	OPJ_TRUE		351244	0					
ANR	351343	ExpressionStatement	"new_key_val = ( opj_tls_key_val_t * ) opj_realloc ( tls -> key_val , ( ( size_t ) tls -> key_val_count + 1U ) * sizeof ( opj_tls_key_val_t ) )"	559:4:13062:13203	351244	4	True				
ANR	351344	AssignmentExpression	"new_key_val = ( opj_tls_key_val_t * ) opj_realloc ( tls -> key_val , ( ( size_t ) tls -> key_val_count + 1U ) * sizeof ( opj_tls_key_val_t ) )"		351244	0		=			
ANR	351345	Identifier	new_key_val		351244	0					
ANR	351346	CastExpression	"( opj_tls_key_val_t * ) opj_realloc ( tls -> key_val , ( ( size_t ) tls -> key_val_count + 1U ) * sizeof ( opj_tls_key_val_t ) )"		351244	1					
ANR	351347	CastTarget	opj_tls_key_val_t *		351244	0					
ANR	351348	CallExpression	"opj_realloc ( tls -> key_val , ( ( size_t ) tls -> key_val_count + 1U ) * sizeof ( opj_tls_key_val_t ) )"		351244	1					
ANR	351349	Callee	opj_realloc		351244	0					
ANR	351350	Identifier	opj_realloc		351244	0					
ANR	351351	ArgumentList	tls -> key_val		351244	1					
ANR	351352	Argument	tls -> key_val		351244	0					
ANR	351353	PtrMemberAccess	tls -> key_val		351244	0					
ANR	351354	Identifier	tls		351244	0					
ANR	351355	Identifier	key_val		351244	1					
ANR	351356	Argument	( ( size_t ) tls -> key_val_count + 1U ) * sizeof ( opj_tls_key_val_t )		351244	1					
ANR	351357	MultiplicativeExpression	( ( size_t ) tls -> key_val_count + 1U ) * sizeof ( opj_tls_key_val_t )		351244	0		*			
ANR	351358	AdditiveExpression	( size_t ) tls -> key_val_count + 1U		351244	0		+			
ANR	351359	CastExpression	( size_t ) tls -> key_val_count		351244	0					
ANR	351360	CastTarget	size_t		351244	0					
ANR	351361	PtrMemberAccess	tls -> key_val_count		351244	1					
ANR	351362	Identifier	tls		351244	0					
ANR	351363	Identifier	key_val_count		351244	1					
ANR	351364	PrimaryExpression	1U		351244	1					
ANR	351365	SizeofExpression	sizeof ( opj_tls_key_val_t )		351244	1					
ANR	351366	Sizeof	sizeof		351244	0					
ANR	351367	SizeofOperand	opj_tls_key_val_t		351244	1					
ANR	351368	IfStatement	if ( ! new_key_val )		351244	5					
ANR	351369	Condition	! new_key_val	561:8:13213:13224	351244	0	True				
ANR	351370	UnaryOperationExpression	! new_key_val		351244	0					
ANR	351371	UnaryOperator	!		351244	0					
ANR	351372	Identifier	new_key_val		351244	1					
ANR	351373	CompoundStatement		20:22:660:660	351244	1					
ANR	351374	ReturnStatement	return OPJ_FALSE ;	562:8:13237:13253	351244	0	True				
ANR	351375	Identifier	OPJ_FALSE		351244	0					
ANR	351376	ExpressionStatement	tls -> key_val = new_key_val	564:4:13265:13291	351244	6	True				
ANR	351377	AssignmentExpression	tls -> key_val = new_key_val		351244	0		=			
ANR	351378	PtrMemberAccess	tls -> key_val		351244	0					
ANR	351379	Identifier	tls		351244	0					
ANR	351380	Identifier	key_val		351244	1					
ANR	351381	Identifier	new_key_val		351244	1					
ANR	351382	ExpressionStatement	new_key_val [ tls -> key_val_count ] . key = key	565:4:13297:13338	351244	7	True				
ANR	351383	AssignmentExpression	new_key_val [ tls -> key_val_count ] . key = key		351244	0		=			
ANR	351384	MemberAccess	new_key_val [ tls -> key_val_count ] . key		351244	0					
ANR	351385	ArrayIndexing	new_key_val [ tls -> key_val_count ]		351244	0					
ANR	351386	Identifier	new_key_val		351244	0					
ANR	351387	PtrMemberAccess	tls -> key_val_count		351244	1					
ANR	351388	Identifier	tls		351244	0					
ANR	351389	Identifier	key_val_count		351244	1					
ANR	351390	Identifier	key		351244	1					
ANR	351391	Identifier	key		351244	1					
ANR	351392	ExpressionStatement	new_key_val [ tls -> key_val_count ] . value = value	566:4:13344:13389	351244	8	True				
ANR	351393	AssignmentExpression	new_key_val [ tls -> key_val_count ] . value = value		351244	0		=			
ANR	351394	MemberAccess	new_key_val [ tls -> key_val_count ] . value		351244	0					
ANR	351395	ArrayIndexing	new_key_val [ tls -> key_val_count ]		351244	0					
ANR	351396	Identifier	new_key_val		351244	0					
ANR	351397	PtrMemberAccess	tls -> key_val_count		351244	1					
ANR	351398	Identifier	tls		351244	0					
ANR	351399	Identifier	key_val_count		351244	1					
ANR	351400	Identifier	value		351244	1					
ANR	351401	Identifier	value		351244	1					
ANR	351402	ExpressionStatement	new_key_val [ tls -> key_val_count ] . opj_free_func = opj_free_func	567:4:13395:13456	351244	9	True				
ANR	351403	AssignmentExpression	new_key_val [ tls -> key_val_count ] . opj_free_func = opj_free_func		351244	0		=			
ANR	351404	MemberAccess	new_key_val [ tls -> key_val_count ] . opj_free_func		351244	0					
ANR	351405	ArrayIndexing	new_key_val [ tls -> key_val_count ]		351244	0					
ANR	351406	Identifier	new_key_val		351244	0					
ANR	351407	PtrMemberAccess	tls -> key_val_count		351244	1					
ANR	351408	Identifier	tls		351244	0					
ANR	351409	Identifier	key_val_count		351244	1					
ANR	351410	Identifier	opj_free_func		351244	1					
ANR	351411	Identifier	opj_free_func		351244	1					
ANR	351412	ExpressionStatement	tls -> key_val_count ++	568:4:13462:13483	351244	10	True				
ANR	351413	PostIncDecOperationExpression	tls -> key_val_count ++		351244	0					
ANR	351414	PtrMemberAccess	tls -> key_val_count		351244	0					
ANR	351415	Identifier	tls		351244	0					
ANR	351416	Identifier	key_val_count		351244	1					
ANR	351417	IncDec	++		351244	1					
ANR	351418	ReturnStatement	return OPJ_TRUE ;	569:4:13489:13504	351244	11	True				
ANR	351419	Identifier	OPJ_TRUE		351244	0					
ANR	351420	ReturnType	OPJ_BOOL		351244	1					
ANR	351421	Identifier	opj_tls_set		351244	2					
ANR	351422	ParameterList	"opj_tls_t * tls , int key , void * value , opj_tls_free_func opj_free_func"		351244	3					
ANR	351423	Parameter	opj_tls_t * tls	540:21:12474:12487	351244	0	True				
ANR	351424	ParameterType	opj_tls_t *		351244	0					
ANR	351425	Identifier	tls		351244	1					
ANR	351426	Parameter	int key	540:37:12490:12496	351244	1	True				
ANR	351427	ParameterType	int		351244	0					
ANR	351428	Identifier	key		351244	1					
ANR	351429	Parameter	void * value	540:46:12499:12509	351244	2	True				
ANR	351430	ParameterType	void *		351244	0					
ANR	351431	Identifier	value		351244	1					
ANR	351432	Parameter	opj_tls_free_func opj_free_func	541:21:12533:12563	351244	3	True				
ANR	351433	ParameterType	opj_tls_free_func		351244	0					
ANR	351434	Identifier	opj_free_func		351244	1					
ANR	351435	CFGEntryNode	ENTRY		351244		True				
ANR	351436	CFGExitNode	EXIT		351244		True				
ANR	351437	Symbol	new_key_val [ tls -> key_val_count ] . key		351244						
ANR	351438	Symbol	tls -> key_val		351244						
ANR	351439	Symbol	tls -> key_val [ i ] . opj_free_func		351244						
ANR	351440	Symbol	new_key_val		351244						
ANR	351441	Symbol	* tls		351244						
ANR	351442	Symbol	new_key_val [ tls -> key_val_count ] . opj_free_func		351244						
ANR	351443	Symbol	i		351244						
ANR	351444	Symbol	tls -> key_val [ i ] . key		351244						
ANR	351445	Symbol	* * tls		351244						
ANR	351446	Symbol	OPJ_FALSE		351244						
ANR	351447	Symbol	* i		351244						
ANR	351448	Symbol	new_key_val [ tls -> key_val_count ] . value		351244						
ANR	351449	Symbol	opj_realloc		351244						
ANR	351450	Symbol	tls -> key_val_count		351244						
ANR	351451	Symbol	* new_key_val		351244						
ANR	351452	Symbol	INT_MAX		351244						
ANR	351453	Symbol	tls -> key_val [ i ] . value		351244						
ANR	351454	Symbol	tls		351244						
ANR	351455	Symbol	* tls -> key_val		351244						
ANR	351456	Symbol	OPJ_TRUE		351244						
ANR	351457	Symbol	value		351244						
ANR	351458	Symbol	* tls -> key_val_count		351244						
ANR	351459	Symbol	key		351244						
ANR	351460	Symbol	opj_free_func		351244						
ANR	351461	ClassDef	<unnamed>	573:8:13518:13619							
ANR	351462	DeclStmt									
ANR	351463	Decl							opj_job_fn	opj_job_fn	job_fn
ANR	351464	DeclStmt									
ANR	351465	Decl							void	void *	user_data
ANR	351466	DeclStmt									
ANR	351467	Decl									opj_worker_thread_job_t
ANR	351468	ClassDef	<unnamed>	578:8:13630:13830							
ANR	351469	DeclStmt									
ANR	351470	Decl							opj_thread_pool_t	opj_thread_pool_t *	tp
ANR	351471	DeclStmt									
ANR	351472	Decl							opj_thread_t	opj_thread_t *	thread
ANR	351473	DeclStmt									
ANR	351474	Decl							int	int	marked_as_waiting
ANR	351475	DeclStmt									
ANR	351476	Decl							opj_mutex_t	opj_mutex_t *	mutex
ANR	351477	DeclStmt									
ANR	351478	Decl							opj_cond_t	opj_cond_t *	cond
ANR	351479	DeclStmt									
ANR	351480	Decl									opj_worker_thread_t
ANR	351481	ClassDef	<unnamed>	587:8:13841:13922							
ANR	351482	DeclStmt									
ANR	351483	Decl									opj_worker_thread_state
ANR	351484	ClassDef	opj_job_list_t	593:0:13925:14016							
ANR	351485	DeclStmt									
ANR	351486	Decl							opj_worker_thread_job_t	opj_worker_thread_job_t *	job
ANR	351487	DeclStmt									
ANR	351488	Decl							struct opj_job_list_t	struct opj_job_list_t *	next
ANR	351489	DeclStmt									
ANR	351490	Decl							struct opj_job_list_t	struct opj_job_list_t	opj_job_list_t
ANR	351491	ClassDef	opj_worker_thread_list_t	599:0:14066:14183							
ANR	351492	DeclStmt									
ANR	351493	Decl							opj_worker_thread_t	opj_worker_thread_t *	worker_thread
ANR	351494	DeclStmt									
ANR	351495	Decl							struct opj_worker_thread_list_t	struct opj_worker_thread_list_t *	next
ANR	351496	DeclStmt									
ANR	351497	Decl							struct opj_worker_thread_list_t	struct opj_worker_thread_list_t	opj_worker_thread_list_t
ANR	351498	ClassDef	opj_thread_pool_t	605:0:14253:14859							
ANR	351499	DeclStmt									
ANR	351500	Decl							opj_worker_thread_t	opj_worker_thread_t *	worker_threads
ANR	351501	DeclStmt									
ANR	351502	Decl							int	int	worker_threads_count
ANR	351503	DeclStmt									
ANR	351504	Decl							opj_cond_t	opj_cond_t *	cond
ANR	351505	DeclStmt									
ANR	351506	Decl							opj_mutex_t	opj_mutex_t *	mutex
ANR	351507	DeclStmt									
ANR	351508	Decl							volatile opj_worker_thread_state	volatile opj_worker_thread_state	state
ANR	351509	DeclStmt									
ANR	351510	Decl							opj_job_list_t	opj_job_list_t *	job_queue
ANR	351511	DeclStmt									
ANR	351512	Decl							volatile int	volatile int	pending_jobs_count
ANR	351513	DeclStmt									
ANR	351514	Decl							opj_worker_thread_list_t	opj_worker_thread_list_t *	waiting_worker_thread_list
ANR	351515	DeclStmt									
ANR	351516	Decl							int	int	waiting_worker_thread_count
ANR	351517	DeclStmt									
ANR	351518	Decl							opj_tls_t	opj_tls_t *	tls
ANR	351519	DeclStmt									
ANR	351520	Decl							int	int	signaling_threshold
ANR	351521	DeclStmt									
ANR	351522	Decl							OPJ_BOOL	"OPJ_BOOL ( opj_thread_pool_t * tp , int num_threads )"	opj_thread_pool_setup
ANR	351523	DeclStmt									
ANR	351524	Decl							opj_worker_thread_job_t	"opj_worker_thread_job_t * ( opj_thread_pool_t * tp , opj_worker_thread_t * worker_thread , OPJ_BOOL signal_job_finished )"	opj_thread_pool_get_next_job
ANR	351525	Function	opj_thread_pool_create	625:0:15107:15745							
ANR	351526	FunctionDef	opj_thread_pool_create (int num_threads)		351525	0					
ANR	351527	CompoundStatement		626:0:15166:15745	351525	0					
ANR	351528	IdentifierDeclStatement	opj_thread_pool_t * tp ;	627:4:15172:15193	351525	0	True				
ANR	351529	IdentifierDecl	* tp		351525	0					
ANR	351530	IdentifierDeclType	opj_thread_pool_t *		351525	0					
ANR	351531	Identifier	tp		351525	1					
ANR	351532	ExpressionStatement	"tp = ( opj_thread_pool_t * ) opj_calloc ( 1 , sizeof ( opj_thread_pool_t ) )"	629:4:15200:15266	351525	1	True				
ANR	351533	AssignmentExpression	"tp = ( opj_thread_pool_t * ) opj_calloc ( 1 , sizeof ( opj_thread_pool_t ) )"		351525	0		=			
ANR	351534	Identifier	tp		351525	0					
ANR	351535	CastExpression	"( opj_thread_pool_t * ) opj_calloc ( 1 , sizeof ( opj_thread_pool_t ) )"		351525	1					
ANR	351536	CastTarget	opj_thread_pool_t *		351525	0					
ANR	351537	CallExpression	"opj_calloc ( 1 , sizeof ( opj_thread_pool_t ) )"		351525	1					
ANR	351538	Callee	opj_calloc		351525	0					
ANR	351539	Identifier	opj_calloc		351525	0					
ANR	351540	ArgumentList	1		351525	1					
ANR	351541	Argument	1		351525	0					
ANR	351542	PrimaryExpression	1		351525	0					
ANR	351543	Argument	sizeof ( opj_thread_pool_t )		351525	1					
ANR	351544	SizeofExpression	sizeof ( opj_thread_pool_t )		351525	0					
ANR	351545	Sizeof	sizeof		351525	0					
ANR	351546	SizeofOperand	opj_thread_pool_t		351525	1					
ANR	351547	IfStatement	if ( ! tp )		351525	2					
ANR	351548	Condition	! tp	630:8:15276:15278	351525	0	True				
ANR	351549	UnaryOperationExpression	! tp		351525	0					
ANR	351550	UnaryOperator	!		351525	0					
ANR	351551	Identifier	tp		351525	1					
ANR	351552	CompoundStatement		5:13:114:114	351525	1					
ANR	351553	ReturnStatement	return NULL ;	631:8:15291:15302	351525	0	True				
ANR	351554	Identifier	NULL		351525	0					
ANR	351555	ExpressionStatement	tp -> state = OPJWTS_OK	633:4:15314:15335	351525	3	True				
ANR	351556	AssignmentExpression	tp -> state = OPJWTS_OK		351525	0		=			
ANR	351557	PtrMemberAccess	tp -> state		351525	0					
ANR	351558	Identifier	tp		351525	0					
ANR	351559	Identifier	state		351525	1					
ANR	351560	Identifier	OPJWTS_OK		351525	1					
ANR	351561	IfStatement	if ( num_threads <= 0 )		351525	4					
ANR	351562	Condition	num_threads <= 0	635:8:15346:15361	351525	0	True				
ANR	351563	RelationalExpression	num_threads <= 0		351525	0		<=			
ANR	351564	Identifier	num_threads		351525	0					
ANR	351565	PrimaryExpression	0		351525	1					
ANR	351566	CompoundStatement		10:26:197:197	351525	1					
ANR	351567	ExpressionStatement	tp -> tls = opj_tls_new ( )	636:8:15374:15397	351525	0	True				
ANR	351568	AssignmentExpression	tp -> tls = opj_tls_new ( )		351525	0		=			
ANR	351569	PtrMemberAccess	tp -> tls		351525	0					
ANR	351570	Identifier	tp		351525	0					
ANR	351571	Identifier	tls		351525	1					
ANR	351572	CallExpression	opj_tls_new ( )		351525	1					
ANR	351573	Callee	opj_tls_new		351525	0					
ANR	351574	Identifier	opj_tls_new		351525	0					
ANR	351575	ArgumentList			351525	1					
ANR	351576	IfStatement	if ( ! tp -> tls )		351525	1					
ANR	351577	Condition	! tp -> tls	637:12:15411:15418	351525	0	True				
ANR	351578	UnaryOperationExpression	! tp -> tls		351525	0					
ANR	351579	UnaryOperator	!		351525	0					
ANR	351580	PtrMemberAccess	tp -> tls		351525	1					
ANR	351581	Identifier	tp		351525	0					
ANR	351582	Identifier	tls		351525	1					
ANR	351583	CompoundStatement		12:22:254:254	351525	1					
ANR	351584	ExpressionStatement	opj_free ( tp )	638:12:15435:15447	351525	0	True				
ANR	351585	CallExpression	opj_free ( tp )		351525	0					
ANR	351586	Callee	opj_free		351525	0					
ANR	351587	Identifier	opj_free		351525	0					
ANR	351588	ArgumentList	tp		351525	1					
ANR	351589	Argument	tp		351525	0					
ANR	351590	Identifier	tp		351525	0					
ANR	351591	ExpressionStatement	tp = NULL	639:12:15461:15470	351525	1	True				
ANR	351592	AssignmentExpression	tp = NULL		351525	0		=			
ANR	351593	Identifier	tp		351525	0					
ANR	351594	Identifier	NULL		351525	1					
ANR	351595	ReturnStatement	return tp ;	641:8:15490:15499	351525	2	True				
ANR	351596	Identifier	tp		351525	0					
ANR	351597	ExpressionStatement	tp -> mutex = opj_mutex_create ( )	644:4:15512:15542	351525	5	True				
ANR	351598	AssignmentExpression	tp -> mutex = opj_mutex_create ( )		351525	0		=			
ANR	351599	PtrMemberAccess	tp -> mutex		351525	0					
ANR	351600	Identifier	tp		351525	0					
ANR	351601	Identifier	mutex		351525	1					
ANR	351602	CallExpression	opj_mutex_create ( )		351525	1					
ANR	351603	Callee	opj_mutex_create		351525	0					
ANR	351604	Identifier	opj_mutex_create		351525	0					
ANR	351605	ArgumentList			351525	1					
ANR	351606	IfStatement	if ( ! tp -> mutex )		351525	6					
ANR	351607	Condition	! tp -> mutex	645:8:15552:15561	351525	0	True				
ANR	351608	UnaryOperationExpression	! tp -> mutex		351525	0					
ANR	351609	UnaryOperator	!		351525	0					
ANR	351610	PtrMemberAccess	tp -> mutex		351525	1					
ANR	351611	Identifier	tp		351525	0					
ANR	351612	Identifier	mutex		351525	1					
ANR	351613	CompoundStatement		20:20:397:397	351525	1					
ANR	351614	ExpressionStatement	opj_free ( tp )	646:8:15574:15586	351525	0	True				
ANR	351615	CallExpression	opj_free ( tp )		351525	0					
ANR	351616	Callee	opj_free		351525	0					
ANR	351617	Identifier	opj_free		351525	0					
ANR	351618	ArgumentList	tp		351525	1					
ANR	351619	Argument	tp		351525	0					
ANR	351620	Identifier	tp		351525	0					
ANR	351621	ReturnStatement	return NULL ;	647:8:15596:15607	351525	1	True				
ANR	351622	Identifier	NULL		351525	0					
ANR	351623	IfStatement	"if ( ! opj_thread_pool_setup ( tp , num_threads ) )"		351525	7					
ANR	351624	Condition	"! opj_thread_pool_setup ( tp , num_threads )"	649:8:15623:15661	351525	0	True				
ANR	351625	UnaryOperationExpression	"! opj_thread_pool_setup ( tp , num_threads )"		351525	0					
ANR	351626	UnaryOperator	!		351525	0					
ANR	351627	CallExpression	"opj_thread_pool_setup ( tp , num_threads )"		351525	1					
ANR	351628	Callee	opj_thread_pool_setup		351525	0					
ANR	351629	Identifier	opj_thread_pool_setup		351525	0					
ANR	351630	ArgumentList	tp		351525	1					
ANR	351631	Argument	tp		351525	0					
ANR	351632	Identifier	tp		351525	0					
ANR	351633	Argument	num_threads		351525	1					
ANR	351634	Identifier	num_threads		351525	0					
ANR	351635	CompoundStatement		24:49:497:497	351525	1					
ANR	351636	ExpressionStatement	opj_thread_pool_destroy ( tp )	650:8:15674:15701	351525	0	True				
ANR	351637	CallExpression	opj_thread_pool_destroy ( tp )		351525	0					
ANR	351638	Callee	opj_thread_pool_destroy		351525	0					
ANR	351639	Identifier	opj_thread_pool_destroy		351525	0					
ANR	351640	ArgumentList	tp		351525	1					
ANR	351641	Argument	tp		351525	0					
ANR	351642	Identifier	tp		351525	0					
ANR	351643	ReturnStatement	return NULL ;	651:8:15711:15722	351525	1	True				
ANR	351644	Identifier	NULL		351525	0					
ANR	351645	ReturnStatement	return tp ;	653:4:15734:15743	351525	8	True				
ANR	351646	Identifier	tp		351525	0					
ANR	351647	ReturnType	opj_thread_pool_t *		351525	1					
ANR	351648	Identifier	opj_thread_pool_create		351525	2					
ANR	351649	ParameterList	int num_threads		351525	3					
ANR	351650	Parameter	int num_threads	625:42:15149:15163	351525	0	True				
ANR	351651	ParameterType	int		351525	0					
ANR	351652	Identifier	num_threads		351525	1					
ANR	351653	CFGEntryNode	ENTRY		351525		True				
ANR	351654	CFGExitNode	EXIT		351525		True				
ANR	351655	Symbol	* tp		351525						
ANR	351656	Symbol	tp -> tls		351525						
ANR	351657	Symbol	NULL		351525						
ANR	351658	Symbol	opj_thread_pool_setup		351525						
ANR	351659	Symbol	opj_calloc		351525						
ANR	351660	Symbol	opj_tls_new		351525						
ANR	351661	Symbol	opj_mutex_create		351525						
ANR	351662	Symbol	num_threads		351525						
ANR	351663	Symbol	OPJWTS_OK		351525						
ANR	351664	Symbol	tp -> state		351525						
ANR	351665	Symbol	tp		351525						
ANR	351666	Symbol	tp -> mutex		351525						
ANR	351667	Function	opj_worker_thread_function	656:0:15748:16434							
ANR	351668	FunctionDef	opj_worker_thread_function (void * user_data)		351667	0					
ANR	351669	CompoundStatement		657:0:15804:16434	351667	0					
ANR	351670	IdentifierDeclStatement	opj_worker_thread_t * worker_thread ;	658:4:15810:15844	351667	0	True				
ANR	351671	IdentifierDecl	* worker_thread		351667	0					
ANR	351672	IdentifierDeclType	opj_worker_thread_t *		351667	0					
ANR	351673	Identifier	worker_thread		351667	1					
ANR	351674	IdentifierDeclStatement	opj_thread_pool_t * tp ;	659:4:15850:15871	351667	1	True				
ANR	351675	IdentifierDecl	* tp		351667	0					
ANR	351676	IdentifierDeclType	opj_thread_pool_t *		351667	0					
ANR	351677	Identifier	tp		351667	1					
ANR	351678	IdentifierDeclStatement	opj_tls_t * tls ;	660:4:15877:15891	351667	2	True				
ANR	351679	IdentifierDecl	* tls		351667	0					
ANR	351680	IdentifierDeclType	opj_tls_t *		351667	0					
ANR	351681	Identifier	tls		351667	1					
ANR	351682	IdentifierDeclStatement	OPJ_BOOL job_finished = OPJ_FALSE ;	661:4:15897:15930	351667	3	True				
ANR	351683	IdentifierDecl	job_finished = OPJ_FALSE		351667	0					
ANR	351684	IdentifierDeclType	OPJ_BOOL		351667	0					
ANR	351685	Identifier	job_finished		351667	1					
ANR	351686	AssignmentExpression	job_finished = OPJ_FALSE		351667	2		=			
ANR	351687	Identifier	OPJ_FALSE		351667	0					
ANR	351688	Identifier	OPJ_FALSE		351667	1					
ANR	351689	ExpressionStatement	worker_thread = ( opj_worker_thread_t * ) user_data	663:4:15937:15985	351667	4	True				
ANR	351690	AssignmentExpression	worker_thread = ( opj_worker_thread_t * ) user_data		351667	0		=			
ANR	351691	Identifier	worker_thread		351667	0					
ANR	351692	CastExpression	( opj_worker_thread_t * ) user_data		351667	1					
ANR	351693	CastTarget	opj_worker_thread_t *		351667	0					
ANR	351694	Identifier	user_data		351667	1					
ANR	351695	ExpressionStatement	tp = worker_thread -> tp	664:4:15991:16013	351667	5	True				
ANR	351696	AssignmentExpression	tp = worker_thread -> tp		351667	0		=			
ANR	351697	Identifier	tp		351667	0					
ANR	351698	PtrMemberAccess	worker_thread -> tp		351667	1					
ANR	351699	Identifier	worker_thread		351667	0					
ANR	351700	Identifier	tp		351667	1					
ANR	351701	ExpressionStatement	tls = opj_tls_new ( )	665:4:16019:16038	351667	6	True				
ANR	351702	AssignmentExpression	tls = opj_tls_new ( )		351667	0		=			
ANR	351703	Identifier	tls		351667	0					
ANR	351704	CallExpression	opj_tls_new ( )		351667	1					
ANR	351705	Callee	opj_tls_new		351667	0					
ANR	351706	Identifier	opj_tls_new		351667	0					
ANR	351707	ArgumentList			351667	1					
ANR	351708	WhileStatement	while ( OPJ_TRUE )		351667	7					
ANR	351709	Condition	OPJ_TRUE	667:11:16052:16059	351667	0	True				
ANR	351710	Identifier	OPJ_TRUE		351667	0					
ANR	351711	CompoundStatement		12:8:267:398	351667	1					
ANR	351712	IdentifierDeclStatement	"opj_worker_thread_job_t * job = opj_thread_pool_get_next_job ( tp , worker_thread , job_finished ) ;"	668:8:16072:16203	351667	0	True				
ANR	351713	IdentifierDecl	"* job = opj_thread_pool_get_next_job ( tp , worker_thread , job_finished )"		351667	0					
ANR	351714	IdentifierDeclType	opj_worker_thread_job_t *		351667	0					
ANR	351715	Identifier	job		351667	1					
ANR	351716	AssignmentExpression	"* job = opj_thread_pool_get_next_job ( tp , worker_thread , job_finished )"		351667	2		=			
ANR	351717	Identifier	job		351667	0					
ANR	351718	CallExpression	"opj_thread_pool_get_next_job ( tp , worker_thread , job_finished )"		351667	1					
ANR	351719	Callee	opj_thread_pool_get_next_job		351667	0					
ANR	351720	Identifier	opj_thread_pool_get_next_job		351667	0					
ANR	351721	ArgumentList	tp		351667	1					
ANR	351722	Argument	tp		351667	0					
ANR	351723	Identifier	tp		351667	0					
ANR	351724	Argument	worker_thread		351667	1					
ANR	351725	Identifier	worker_thread		351667	0					
ANR	351726	Argument	job_finished		351667	2					
ANR	351727	Identifier	job_finished		351667	0					
ANR	351728	IfStatement	if ( job == NULL )		351667	1					
ANR	351729	Condition	job == NULL	670:12:16217:16227	351667	0	True				
ANR	351730	EqualityExpression	job == NULL		351667	0		==			
ANR	351731	Identifier	job		351667	0					
ANR	351732	Identifier	NULL		351667	1					
ANR	351733	CompoundStatement		14:25:425:425	351667	1					
ANR	351734	BreakStatement	break ;	671:12:16244:16249	351667	0	True				
ANR	351735	IfStatement	if ( job -> job_fn )		351667	2					
ANR	351736	Condition	job -> job_fn	674:12:16274:16284	351667	0	True				
ANR	351737	PtrMemberAccess	job -> job_fn		351667	0					
ANR	351738	Identifier	job		351667	0					
ANR	351739	Identifier	job_fn		351667	1					
ANR	351740	CompoundStatement		18:25:482:482	351667	1					
ANR	351741	ExpressionStatement	"job -> job_fn ( job -> user_data , tls )"	675:12:16301:16333	351667	0	True				
ANR	351742	CallExpression	"job -> job_fn ( job -> user_data , tls )"		351667	0					
ANR	351743	Callee	job -> job_fn		351667	0					
ANR	351744	PtrMemberAccess	job -> job_fn		351667	0					
ANR	351745	Identifier	job		351667	0					
ANR	351746	Identifier	job_fn		351667	1					
ANR	351747	ArgumentList	job -> user_data		351667	1					
ANR	351748	Argument	job -> user_data		351667	0					
ANR	351749	PtrMemberAccess	job -> user_data		351667	0					
ANR	351750	Identifier	job		351667	0					
ANR	351751	Identifier	user_data		351667	1					
ANR	351752	Argument	tls		351667	1					
ANR	351753	Identifier	tls		351667	0					
ANR	351754	ExpressionStatement	opj_free ( job )	677:8:16353:16366	351667	3	True				
ANR	351755	CallExpression	opj_free ( job )		351667	0					
ANR	351756	Callee	opj_free		351667	0					
ANR	351757	Identifier	opj_free		351667	0					
ANR	351758	ArgumentList	job		351667	1					
ANR	351759	Argument	job		351667	0					
ANR	351760	Identifier	job		351667	0					
ANR	351761	ExpressionStatement	job_finished = OPJ_TRUE	678:8:16376:16399	351667	4	True				
ANR	351762	AssignmentExpression	job_finished = OPJ_TRUE		351667	0		=			
ANR	351763	Identifier	job_finished		351667	0					
ANR	351764	Identifier	OPJ_TRUE		351667	1					
ANR	351765	ExpressionStatement	opj_tls_destroy ( tls )	681:4:16412:16432	351667	8	True				
ANR	351766	CallExpression	opj_tls_destroy ( tls )		351667	0					
ANR	351767	Callee	opj_tls_destroy		351667	0					
ANR	351768	Identifier	opj_tls_destroy		351667	0					
ANR	351769	ArgumentList	tls		351667	1					
ANR	351770	Argument	tls		351667	0					
ANR	351771	Identifier	tls		351667	0					
ANR	351772	ReturnType	static void		351667	1					
ANR	351773	Identifier	opj_worker_thread_function		351667	2					
ANR	351774	ParameterList	void * user_data		351667	3					
ANR	351775	Parameter	void * user_data	656:39:15787:15801	351667	0	True				
ANR	351776	ParameterType	void *		351667	0					
ANR	351777	Identifier	user_data		351667	1					
ANR	351778	CFGEntryNode	ENTRY		351667		True				
ANR	351779	CFGExitNode	EXIT		351667		True				
ANR	351780	Symbol	NULL		351667						
ANR	351781	Symbol	job -> user_data		351667						
ANR	351782	Symbol	worker_thread		351667						
ANR	351783	Symbol	worker_thread -> tp		351667						
ANR	351784	Symbol	job_finished		351667						
ANR	351785	Symbol	* job		351667						
ANR	351786	Symbol	opj_thread_pool_get_next_job		351667						
ANR	351787	Symbol	user_data		351667						
ANR	351788	Symbol	OPJ_FALSE		351667						
ANR	351789	Symbol	job -> job_fn		351667						
ANR	351790	Symbol	opj_tls_new		351667						
ANR	351791	Symbol	tls		351667						
ANR	351792	Symbol	tp		351667						
ANR	351793	Symbol	OPJ_TRUE		351667						
ANR	351794	Symbol	job		351667						
ANR	351795	Symbol	* worker_thread		351667						
ANR	351796	Function	opj_thread_pool_setup	684:0:16437:18404							
ANR	351797	FunctionDef	"opj_thread_pool_setup (opj_thread_pool_t * tp , int num_threads)"		351796	0					
ANR	351798	CompoundStatement		685:0:16515:18404	351796	0					
ANR	351799	IdentifierDeclStatement	int i ;	686:4:16521:16526	351796	0	True				
ANR	351800	IdentifierDecl	i		351796	0					
ANR	351801	IdentifierDeclType	int		351796	0					
ANR	351802	Identifier	i		351796	1					
ANR	351803	IdentifierDeclStatement	OPJ_BOOL bRet = OPJ_TRUE ;	687:4:16532:16556	351796	1	True				
ANR	351804	IdentifierDecl	bRet = OPJ_TRUE		351796	0					
ANR	351805	IdentifierDeclType	OPJ_BOOL		351796	0					
ANR	351806	Identifier	bRet		351796	1					
ANR	351807	AssignmentExpression	bRet = OPJ_TRUE		351796	2		=			
ANR	351808	Identifier	OPJ_TRUE		351796	0					
ANR	351809	Identifier	OPJ_TRUE		351796	1					
ANR	351810	ExpressionStatement	assert ( num_threads > 0 )	689:4:16563:16586	351796	2	True				
ANR	351811	CallExpression	assert ( num_threads > 0 )		351796	0					
ANR	351812	Callee	assert		351796	0					
ANR	351813	Identifier	assert		351796	0					
ANR	351814	ArgumentList	num_threads > 0		351796	1					
ANR	351815	Argument	num_threads > 0		351796	0					
ANR	351816	RelationalExpression	num_threads > 0		351796	0		>			
ANR	351817	Identifier	num_threads		351796	0					
ANR	351818	PrimaryExpression	0		351796	1					
ANR	351819	ExpressionStatement	tp -> cond = opj_cond_create ( )	691:4:16593:16621	351796	3	True				
ANR	351820	AssignmentExpression	tp -> cond = opj_cond_create ( )		351796	0		=			
ANR	351821	PtrMemberAccess	tp -> cond		351796	0					
ANR	351822	Identifier	tp		351796	0					
ANR	351823	Identifier	cond		351796	1					
ANR	351824	CallExpression	opj_cond_create ( )		351796	1					
ANR	351825	Callee	opj_cond_create		351796	0					
ANR	351826	Identifier	opj_cond_create		351796	0					
ANR	351827	ArgumentList			351796	1					
ANR	351828	IfStatement	if ( tp -> cond == NULL )		351796	4					
ANR	351829	Condition	tp -> cond == NULL	692:8:16631:16646	351796	0	True				
ANR	351830	EqualityExpression	tp -> cond == NULL		351796	0		==			
ANR	351831	PtrMemberAccess	tp -> cond		351796	0					
ANR	351832	Identifier	tp		351796	0					
ANR	351833	Identifier	cond		351796	1					
ANR	351834	Identifier	NULL		351796	1					
ANR	351835	CompoundStatement		8:26:133:133	351796	1					
ANR	351836	ReturnStatement	return OPJ_FALSE ;	693:8:16659:16675	351796	0	True				
ANR	351837	Identifier	OPJ_FALSE		351796	0					
ANR	351838	ExpressionStatement	"tp -> worker_threads = ( opj_worker_thread_t * ) opj_calloc ( ( size_t ) num_threads , sizeof ( opj_worker_thread_t ) )"	696:4:16688:16817	351796	5	True				
ANR	351839	AssignmentExpression	"tp -> worker_threads = ( opj_worker_thread_t * ) opj_calloc ( ( size_t ) num_threads , sizeof ( opj_worker_thread_t ) )"		351796	0		=			
ANR	351840	PtrMemberAccess	tp -> worker_threads		351796	0					
ANR	351841	Identifier	tp		351796	0					
ANR	351842	Identifier	worker_threads		351796	1					
ANR	351843	CastExpression	"( opj_worker_thread_t * ) opj_calloc ( ( size_t ) num_threads , sizeof ( opj_worker_thread_t ) )"		351796	1					
ANR	351844	CastTarget	opj_worker_thread_t *		351796	0					
ANR	351845	CallExpression	"opj_calloc ( ( size_t ) num_threads , sizeof ( opj_worker_thread_t ) )"		351796	1					
ANR	351846	Callee	opj_calloc		351796	0					
ANR	351847	Identifier	opj_calloc		351796	0					
ANR	351848	ArgumentList	( size_t ) num_threads		351796	1					
ANR	351849	Argument	( size_t ) num_threads		351796	0					
ANR	351850	CastExpression	( size_t ) num_threads		351796	0					
ANR	351851	CastTarget	size_t		351796	0					
ANR	351852	Identifier	num_threads		351796	1					
ANR	351853	Argument	sizeof ( opj_worker_thread_t )		351796	1					
ANR	351854	SizeofExpression	sizeof ( opj_worker_thread_t )		351796	0					
ANR	351855	Sizeof	sizeof		351796	0					
ANR	351856	SizeofOperand	opj_worker_thread_t		351796	1					
ANR	351857	IfStatement	if ( tp -> worker_threads == NULL )		351796	6					
ANR	351858	Condition	tp -> worker_threads == NULL	698:8:16827:16852	351796	0	True				
ANR	351859	EqualityExpression	tp -> worker_threads == NULL		351796	0		==			
ANR	351860	PtrMemberAccess	tp -> worker_threads		351796	0					
ANR	351861	Identifier	tp		351796	0					
ANR	351862	Identifier	worker_threads		351796	1					
ANR	351863	Identifier	NULL		351796	1					
ANR	351864	CompoundStatement		14:36:339:339	351796	1					
ANR	351865	ReturnStatement	return OPJ_FALSE ;	699:8:16865:16881	351796	0	True				
ANR	351866	Identifier	OPJ_FALSE		351796	0					
ANR	351867	ExpressionStatement	tp -> worker_threads_count = num_threads	701:4:16893:16931	351796	7	True				
ANR	351868	AssignmentExpression	tp -> worker_threads_count = num_threads		351796	0		=			
ANR	351869	PtrMemberAccess	tp -> worker_threads_count		351796	0					
ANR	351870	Identifier	tp		351796	0					
ANR	351871	Identifier	worker_threads_count		351796	1					
ANR	351872	Identifier	num_threads		351796	1					
ANR	351873	ForStatement	for ( i = 0 ; i < num_threads ; i ++ )		351796	8					
ANR	351874	ForInit	i = 0 ;	703:9:16943:16948	351796	0	True				
ANR	351875	AssignmentExpression	i = 0		351796	0		=			
ANR	351876	Identifier	i		351796	0					
ANR	351877	PrimaryExpression	0		351796	1					
ANR	351878	Condition	i < num_threads	703:16:16950:16964	351796	1	True				
ANR	351879	RelationalExpression	i < num_threads		351796	0		<			
ANR	351880	Identifier	i		351796	0					
ANR	351881	Identifier	num_threads		351796	1					
ANR	351882	PostIncDecOperationExpression	i ++	703:33:16967:16969	351796	2	True				
ANR	351883	Identifier	i		351796	0					
ANR	351884	IncDec	++		351796	1					
ANR	351885	CompoundStatement		19:38:456:456	351796	3					
ANR	351886	ExpressionStatement	tp -> worker_threads [ i ] . tp = tp	704:8:16982:17011	351796	0	True				
ANR	351887	AssignmentExpression	tp -> worker_threads [ i ] . tp = tp		351796	0		=			
ANR	351888	MemberAccess	tp -> worker_threads [ i ] . tp		351796	0					
ANR	351889	ArrayIndexing	tp -> worker_threads [ i ]		351796	0					
ANR	351890	PtrMemberAccess	tp -> worker_threads		351796	0					
ANR	351891	Identifier	tp		351796	0					
ANR	351892	Identifier	worker_threads		351796	1					
ANR	351893	Identifier	i		351796	1					
ANR	351894	Identifier	tp		351796	1					
ANR	351895	Identifier	tp		351796	1					
ANR	351896	ExpressionStatement	tp -> worker_threads [ i ] . mutex = opj_mutex_create ( )	706:8:17022:17070	351796	1	True				
ANR	351897	AssignmentExpression	tp -> worker_threads [ i ] . mutex = opj_mutex_create ( )		351796	0		=			
ANR	351898	MemberAccess	tp -> worker_threads [ i ] . mutex		351796	0					
ANR	351899	ArrayIndexing	tp -> worker_threads [ i ]		351796	0					
ANR	351900	PtrMemberAccess	tp -> worker_threads		351796	0					
ANR	351901	Identifier	tp		351796	0					
ANR	351902	Identifier	worker_threads		351796	1					
ANR	351903	Identifier	i		351796	1					
ANR	351904	Identifier	mutex		351796	1					
ANR	351905	CallExpression	opj_mutex_create ( )		351796	1					
ANR	351906	Callee	opj_mutex_create		351796	0					
ANR	351907	Identifier	opj_mutex_create		351796	0					
ANR	351908	ArgumentList			351796	1					
ANR	351909	IfStatement	if ( tp -> worker_threads [ i ] . mutex == NULL )		351796	2					
ANR	351910	Condition	tp -> worker_threads [ i ] . mutex == NULL	707:12:17084:17118	351796	0	True				
ANR	351911	EqualityExpression	tp -> worker_threads [ i ] . mutex == NULL		351796	0		==			
ANR	351912	MemberAccess	tp -> worker_threads [ i ] . mutex		351796	0					
ANR	351913	ArrayIndexing	tp -> worker_threads [ i ]		351796	0					
ANR	351914	PtrMemberAccess	tp -> worker_threads		351796	0					
ANR	351915	Identifier	tp		351796	0					
ANR	351916	Identifier	worker_threads		351796	1					
ANR	351917	Identifier	i		351796	1					
ANR	351918	Identifier	mutex		351796	1					
ANR	351919	Identifier	NULL		351796	1					
ANR	351920	CompoundStatement		23:49:605:605	351796	1					
ANR	351921	ExpressionStatement	tp -> worker_threads_count = i	708:12:17135:17163	351796	0	True				
ANR	351922	AssignmentExpression	tp -> worker_threads_count = i		351796	0		=			
ANR	351923	PtrMemberAccess	tp -> worker_threads_count		351796	0					
ANR	351924	Identifier	tp		351796	0					
ANR	351925	Identifier	worker_threads_count		351796	1					
ANR	351926	Identifier	i		351796	1					
ANR	351927	ExpressionStatement	bRet = OPJ_FALSE	709:12:17177:17193	351796	1	True				
ANR	351928	AssignmentExpression	bRet = OPJ_FALSE		351796	0		=			
ANR	351929	Identifier	bRet		351796	0					
ANR	351930	Identifier	OPJ_FALSE		351796	1					
ANR	351931	BreakStatement	break ;	710:12:17207:17212	351796	2	True				
ANR	351932	ExpressionStatement	tp -> worker_threads [ i ] . cond = opj_cond_create ( )	713:8:17233:17279	351796	3	True				
ANR	351933	AssignmentExpression	tp -> worker_threads [ i ] . cond = opj_cond_create ( )		351796	0		=			
ANR	351934	MemberAccess	tp -> worker_threads [ i ] . cond		351796	0					
ANR	351935	ArrayIndexing	tp -> worker_threads [ i ]		351796	0					
ANR	351936	PtrMemberAccess	tp -> worker_threads		351796	0					
ANR	351937	Identifier	tp		351796	0					
ANR	351938	Identifier	worker_threads		351796	1					
ANR	351939	Identifier	i		351796	1					
ANR	351940	Identifier	cond		351796	1					
ANR	351941	CallExpression	opj_cond_create ( )		351796	1					
ANR	351942	Callee	opj_cond_create		351796	0					
ANR	351943	Identifier	opj_cond_create		351796	0					
ANR	351944	ArgumentList			351796	1					
ANR	351945	IfStatement	if ( tp -> worker_threads [ i ] . cond == NULL )		351796	4					
ANR	351946	Condition	tp -> worker_threads [ i ] . cond == NULL	714:12:17293:17326	351796	0	True				
ANR	351947	EqualityExpression	tp -> worker_threads [ i ] . cond == NULL		351796	0		==			
ANR	351948	MemberAccess	tp -> worker_threads [ i ] . cond		351796	0					
ANR	351949	ArrayIndexing	tp -> worker_threads [ i ]		351796	0					
ANR	351950	PtrMemberAccess	tp -> worker_threads		351796	0					
ANR	351951	Identifier	tp		351796	0					
ANR	351952	Identifier	worker_threads		351796	1					
ANR	351953	Identifier	i		351796	1					
ANR	351954	Identifier	cond		351796	1					
ANR	351955	Identifier	NULL		351796	1					
ANR	351956	CompoundStatement		30:48:813:813	351796	1					
ANR	351957	ExpressionStatement	opj_mutex_destroy ( tp -> worker_threads [ i ] . mutex )	715:12:17343:17389	351796	0	True				
ANR	351958	CallExpression	opj_mutex_destroy ( tp -> worker_threads [ i ] . mutex )		351796	0					
ANR	351959	Callee	opj_mutex_destroy		351796	0					
ANR	351960	Identifier	opj_mutex_destroy		351796	0					
ANR	351961	ArgumentList	tp -> worker_threads [ i ] . mutex		351796	1					
ANR	351962	Argument	tp -> worker_threads [ i ] . mutex		351796	0					
ANR	351963	MemberAccess	tp -> worker_threads [ i ] . mutex		351796	0					
ANR	351964	ArrayIndexing	tp -> worker_threads [ i ]		351796	0					
ANR	351965	PtrMemberAccess	tp -> worker_threads		351796	0					
ANR	351966	Identifier	tp		351796	0					
ANR	351967	Identifier	worker_threads		351796	1					
ANR	351968	Identifier	i		351796	1					
ANR	351969	Identifier	mutex		351796	1					
ANR	351970	ExpressionStatement	tp -> worker_threads_count = i	716:12:17403:17431	351796	1	True				
ANR	351971	AssignmentExpression	tp -> worker_threads_count = i		351796	0		=			
ANR	351972	PtrMemberAccess	tp -> worker_threads_count		351796	0					
ANR	351973	Identifier	tp		351796	0					
ANR	351974	Identifier	worker_threads_count		351796	1					
ANR	351975	Identifier	i		351796	1					
ANR	351976	ExpressionStatement	bRet = OPJ_FALSE	717:12:17445:17461	351796	2	True				
ANR	351977	AssignmentExpression	bRet = OPJ_FALSE		351796	0		=			
ANR	351978	Identifier	bRet		351796	0					
ANR	351979	Identifier	OPJ_FALSE		351796	1					
ANR	351980	BreakStatement	break ;	718:12:17475:17480	351796	3	True				
ANR	351981	ExpressionStatement	tp -> worker_threads [ i ] . marked_as_waiting = OPJ_FALSE	721:8:17501:17552	351796	5	True				
ANR	351982	AssignmentExpression	tp -> worker_threads [ i ] . marked_as_waiting = OPJ_FALSE		351796	0		=			
ANR	351983	MemberAccess	tp -> worker_threads [ i ] . marked_as_waiting		351796	0					
ANR	351984	ArrayIndexing	tp -> worker_threads [ i ]		351796	0					
ANR	351985	PtrMemberAccess	tp -> worker_threads		351796	0					
ANR	351986	Identifier	tp		351796	0					
ANR	351987	Identifier	worker_threads		351796	1					
ANR	351988	Identifier	i		351796	1					
ANR	351989	Identifier	marked_as_waiting		351796	1					
ANR	351990	Identifier	OPJ_FALSE		351796	1					
ANR	351991	ExpressionStatement	"tp -> worker_threads [ i ] . thread = opj_thread_create ( opj_worker_thread_function , & ( tp -> worker_threads [ i ] ) )"	723:8:17563:17704	351796	6	True				
ANR	351992	AssignmentExpression	"tp -> worker_threads [ i ] . thread = opj_thread_create ( opj_worker_thread_function , & ( tp -> worker_threads [ i ] ) )"		351796	0		=			
ANR	351993	MemberAccess	tp -> worker_threads [ i ] . thread		351796	0					
ANR	351994	ArrayIndexing	tp -> worker_threads [ i ]		351796	0					
ANR	351995	PtrMemberAccess	tp -> worker_threads		351796	0					
ANR	351996	Identifier	tp		351796	0					
ANR	351997	Identifier	worker_threads		351796	1					
ANR	351998	Identifier	i		351796	1					
ANR	351999	Identifier	thread		351796	1					
ANR	352000	CallExpression	"opj_thread_create ( opj_worker_thread_function , & ( tp -> worker_threads [ i ] ) )"		351796	1					
ANR	352001	Callee	opj_thread_create		351796	0					
ANR	352002	Identifier	opj_thread_create		351796	0					
ANR	352003	ArgumentList	opj_worker_thread_function		351796	1					
ANR	352004	Argument	opj_worker_thread_function		351796	0					
ANR	352005	Identifier	opj_worker_thread_function		351796	0					
ANR	352006	Argument	& ( tp -> worker_threads [ i ] )		351796	1					
ANR	352007	UnaryOperationExpression	& ( tp -> worker_threads [ i ] )		351796	0					
ANR	352008	UnaryOperator	&		351796	0					
ANR	352009	ArrayIndexing	tp -> worker_threads [ i ]		351796	1					
ANR	352010	PtrMemberAccess	tp -> worker_threads		351796	0					
ANR	352011	Identifier	tp		351796	0					
ANR	352012	Identifier	worker_threads		351796	1					
ANR	352013	Identifier	i		351796	1					
ANR	352014	IfStatement	if ( tp -> worker_threads [ i ] . thread == NULL )		351796	7					
ANR	352015	Condition	tp -> worker_threads [ i ] . thread == NULL	725:12:17718:17753	351796	0	True				
ANR	352016	EqualityExpression	tp -> worker_threads [ i ] . thread == NULL		351796	0		==			
ANR	352017	MemberAccess	tp -> worker_threads [ i ] . thread		351796	0					
ANR	352018	ArrayIndexing	tp -> worker_threads [ i ]		351796	0					
ANR	352019	PtrMemberAccess	tp -> worker_threads		351796	0					
ANR	352020	Identifier	tp		351796	0					
ANR	352021	Identifier	worker_threads		351796	1					
ANR	352022	Identifier	i		351796	1					
ANR	352023	Identifier	thread		351796	1					
ANR	352024	Identifier	NULL		351796	1					
ANR	352025	CompoundStatement		41:50:1240:1240	351796	1					
ANR	352026	ExpressionStatement	opj_mutex_destroy ( tp -> worker_threads [ i ] . mutex )	726:12:17770:17816	351796	0	True				
ANR	352027	CallExpression	opj_mutex_destroy ( tp -> worker_threads [ i ] . mutex )		351796	0					
ANR	352028	Callee	opj_mutex_destroy		351796	0					
ANR	352029	Identifier	opj_mutex_destroy		351796	0					
ANR	352030	ArgumentList	tp -> worker_threads [ i ] . mutex		351796	1					
ANR	352031	Argument	tp -> worker_threads [ i ] . mutex		351796	0					
ANR	352032	MemberAccess	tp -> worker_threads [ i ] . mutex		351796	0					
ANR	352033	ArrayIndexing	tp -> worker_threads [ i ]		351796	0					
ANR	352034	PtrMemberAccess	tp -> worker_threads		351796	0					
ANR	352035	Identifier	tp		351796	0					
ANR	352036	Identifier	worker_threads		351796	1					
ANR	352037	Identifier	i		351796	1					
ANR	352038	Identifier	mutex		351796	1					
ANR	352039	ExpressionStatement	opj_cond_destroy ( tp -> worker_threads [ i ] . cond )	727:12:17830:17874	351796	1	True				
ANR	352040	CallExpression	opj_cond_destroy ( tp -> worker_threads [ i ] . cond )		351796	0					
ANR	352041	Callee	opj_cond_destroy		351796	0					
ANR	352042	Identifier	opj_cond_destroy		351796	0					
ANR	352043	ArgumentList	tp -> worker_threads [ i ] . cond		351796	1					
ANR	352044	Argument	tp -> worker_threads [ i ] . cond		351796	0					
ANR	352045	MemberAccess	tp -> worker_threads [ i ] . cond		351796	0					
ANR	352046	ArrayIndexing	tp -> worker_threads [ i ]		351796	0					
ANR	352047	PtrMemberAccess	tp -> worker_threads		351796	0					
ANR	352048	Identifier	tp		351796	0					
ANR	352049	Identifier	worker_threads		351796	1					
ANR	352050	Identifier	i		351796	1					
ANR	352051	Identifier	cond		351796	1					
ANR	352052	ExpressionStatement	tp -> worker_threads_count = i	728:12:17888:17916	351796	2	True				
ANR	352053	AssignmentExpression	tp -> worker_threads_count = i		351796	0		=			
ANR	352054	PtrMemberAccess	tp -> worker_threads_count		351796	0					
ANR	352055	Identifier	tp		351796	0					
ANR	352056	Identifier	worker_threads_count		351796	1					
ANR	352057	Identifier	i		351796	1					
ANR	352058	ExpressionStatement	bRet = OPJ_FALSE	729:12:17930:17946	351796	3	True				
ANR	352059	AssignmentExpression	bRet = OPJ_FALSE		351796	0		=			
ANR	352060	Identifier	bRet		351796	0					
ANR	352061	Identifier	OPJ_FALSE		351796	1					
ANR	352062	BreakStatement	break ;	730:12:17960:17965	351796	4	True				
ANR	352063	ExpressionStatement	opj_mutex_lock ( tp -> mutex )	736:4:18090:18115	351796	9	True				
ANR	352064	CallExpression	opj_mutex_lock ( tp -> mutex )		351796	0					
ANR	352065	Callee	opj_mutex_lock		351796	0					
ANR	352066	Identifier	opj_mutex_lock		351796	0					
ANR	352067	ArgumentList	tp -> mutex		351796	1					
ANR	352068	Argument	tp -> mutex		351796	0					
ANR	352069	PtrMemberAccess	tp -> mutex		351796	0					
ANR	352070	Identifier	tp		351796	0					
ANR	352071	Identifier	mutex		351796	1					
ANR	352072	WhileStatement	while ( tp -> waiting_worker_thread_count < tp -> worker_threads_count )		351796	10					
ANR	352073	Condition	tp -> waiting_worker_thread_count < tp -> worker_threads_count	737:11:18128:18185	351796	0	True				
ANR	352074	RelationalExpression	tp -> waiting_worker_thread_count < tp -> worker_threads_count		351796	0		<			
ANR	352075	PtrMemberAccess	tp -> waiting_worker_thread_count		351796	0					
ANR	352076	Identifier	tp		351796	0					
ANR	352077	Identifier	waiting_worker_thread_count		351796	1					
ANR	352078	PtrMemberAccess	tp -> worker_threads_count		351796	1					
ANR	352079	Identifier	tp		351796	0					
ANR	352080	Identifier	worker_threads_count		351796	1					
ANR	352081	CompoundStatement		53:71:1672:1672	351796	1					
ANR	352082	ExpressionStatement	"opj_cond_wait ( tp -> cond , tp -> mutex )"	738:8:18198:18232	351796	0	True				
ANR	352083	CallExpression	"opj_cond_wait ( tp -> cond , tp -> mutex )"		351796	0					
ANR	352084	Callee	opj_cond_wait		351796	0					
ANR	352085	Identifier	opj_cond_wait		351796	0					
ANR	352086	ArgumentList	tp -> cond		351796	1					
ANR	352087	Argument	tp -> cond		351796	0					
ANR	352088	PtrMemberAccess	tp -> cond		351796	0					
ANR	352089	Identifier	tp		351796	0					
ANR	352090	Identifier	cond		351796	1					
ANR	352091	Argument	tp -> mutex		351796	1					
ANR	352092	PtrMemberAccess	tp -> mutex		351796	0					
ANR	352093	Identifier	tp		351796	0					
ANR	352094	Identifier	mutex		351796	1					
ANR	352095	ExpressionStatement	opj_mutex_unlock ( tp -> mutex )	740:4:18244:18271	351796	11	True				
ANR	352096	CallExpression	opj_mutex_unlock ( tp -> mutex )		351796	0					
ANR	352097	Callee	opj_mutex_unlock		351796	0					
ANR	352098	Identifier	opj_mutex_unlock		351796	0					
ANR	352099	ArgumentList	tp -> mutex		351796	1					
ANR	352100	Argument	tp -> mutex		351796	0					
ANR	352101	PtrMemberAccess	tp -> mutex		351796	0					
ANR	352102	Identifier	tp		351796	0					
ANR	352103	Identifier	mutex		351796	1					
ANR	352104	IfStatement	if ( tp -> state == OPJWTS_ERROR )		351796	12					
ANR	352105	Condition	tp -> state == OPJWTS_ERROR	743:8:18325:18349	351796	0	True				
ANR	352106	EqualityExpression	tp -> state == OPJWTS_ERROR		351796	0		==			
ANR	352107	PtrMemberAccess	tp -> state		351796	0					
ANR	352108	Identifier	tp		351796	0					
ANR	352109	Identifier	state		351796	1					
ANR	352110	Identifier	OPJWTS_ERROR		351796	1					
ANR	352111	CompoundStatement		59:35:1836:1836	351796	1					
ANR	352112	ExpressionStatement	bRet = OPJ_FALSE	744:8:18362:18378	351796	0	True				
ANR	352113	AssignmentExpression	bRet = OPJ_FALSE		351796	0		=			
ANR	352114	Identifier	bRet		351796	0					
ANR	352115	Identifier	OPJ_FALSE		351796	1					
ANR	352116	ReturnStatement	return bRet ;	747:4:18391:18402	351796	13	True				
ANR	352117	Identifier	bRet		351796	0					
ANR	352118	ReturnType	static OPJ_BOOL		351796	1					
ANR	352119	Identifier	opj_thread_pool_setup		351796	2					
ANR	352120	ParameterList	"opj_thread_pool_t * tp , int num_threads"		351796	3					
ANR	352121	Parameter	opj_thread_pool_t * tp	684:38:16475:16495	351796	0	True				
ANR	352122	ParameterType	opj_thread_pool_t *		351796	0					
ANR	352123	Identifier	tp		351796	1					
ANR	352124	Parameter	int num_threads	684:61:16498:16512	351796	1	True				
ANR	352125	ParameterType	int		351796	0					
ANR	352126	Identifier	num_threads		351796	1					
ANR	352127	CFGEntryNode	ENTRY		351796		True				
ANR	352128	CFGExitNode	EXIT		351796		True				
ANR	352129	Symbol	tp -> worker_threads [ i ] . marked_as_waiting		351796						
ANR	352130	Symbol	tp -> worker_threads		351796						
ANR	352131	Symbol	opj_worker_thread_function		351796						
ANR	352132	Symbol	tp -> worker_threads [ i ] . thread		351796						
ANR	352133	Symbol	tp -> state		351796						
ANR	352134	Symbol	OPJWTS_ERROR		351796						
ANR	352135	Symbol	tp -> mutex		351796						
ANR	352136	Symbol	opj_thread_create		351796						
ANR	352137	Symbol	tp -> worker_threads [ i ] . cond		351796						
ANR	352138	Symbol	OPJ_FALSE		351796						
ANR	352139	Symbol	opj_mutex_create		351796						
ANR	352140	Symbol	tp -> worker_threads [ i ] . tp		351796						
ANR	352141	Symbol	OPJ_TRUE		351796						
ANR	352142	Symbol	tp -> waiting_worker_thread_count		351796						
ANR	352143	Symbol	tp -> cond		351796						
ANR	352144	Symbol	* tp		351796						
ANR	352145	Symbol	NULL		351796						
ANR	352146	Symbol	opj_calloc		351796						
ANR	352147	Symbol	i		351796						
ANR	352148	Symbol	* * tp		351796						
ANR	352149	Symbol	* tp -> worker_threads		351796						
ANR	352150	Symbol	bRet		351796						
ANR	352151	Symbol	* i		351796						
ANR	352152	Symbol	tp -> worker_threads_count		351796						
ANR	352153	Symbol	opj_cond_create		351796						
ANR	352154	Symbol	num_threads		351796						
ANR	352155	Symbol	tp -> worker_threads [ i ] . mutex		351796						
ANR	352156	Symbol	tp		351796						
ANR	352157	Function	opj_thread_pool_get_next_job	757:0:18463:20649							
ANR	352158	FunctionDef	"opj_thread_pool_get_next_job (opj_thread_pool_t * tp , opj_worker_thread_t * worker_thread , OPJ_BOOL signal_job_finished)"		352157	0					
ANR	352159	CompoundStatement		761:0:18626:20649	352157	0					
ANR	352160	WhileStatement	while ( OPJ_TRUE )		352157	0					
ANR	352161	Condition	OPJ_TRUE	762:11:18639:18646	352157	0	True				
ANR	352162	Identifier	OPJ_TRUE		352157	0					
ANR	352163	CompoundStatement		3:8:32:60	352157	1					
ANR	352164	IdentifierDeclStatement	opj_job_list_t * top_job_iter ;	763:8:18659:18687	352157	0	True				
ANR	352165	IdentifierDecl	* top_job_iter		352157	0					
ANR	352166	IdentifierDeclType	opj_job_list_t *		352157	0					
ANR	352167	Identifier	top_job_iter		352157	1					
ANR	352168	ExpressionStatement	opj_mutex_lock ( tp -> mutex )	765:8:18698:18723	352157	1	True				
ANR	352169	CallExpression	opj_mutex_lock ( tp -> mutex )		352157	0					
ANR	352170	Callee	opj_mutex_lock		352157	0					
ANR	352171	Identifier	opj_mutex_lock		352157	0					
ANR	352172	ArgumentList	tp -> mutex		352157	1					
ANR	352173	Argument	tp -> mutex		352157	0					
ANR	352174	PtrMemberAccess	tp -> mutex		352157	0					
ANR	352175	Identifier	tp		352157	0					
ANR	352176	Identifier	mutex		352157	1					
ANR	352177	IfStatement	if ( signal_job_finished )		352157	2					
ANR	352178	Condition	signal_job_finished	767:12:18738:18756	352157	0	True				
ANR	352179	Identifier	signal_job_finished		352157	0					
ANR	352180	CompoundStatement		7:33:132:132	352157	1					
ANR	352181	ExpressionStatement	signal_job_finished = OPJ_FALSE	768:12:18773:18804	352157	0	True				
ANR	352182	AssignmentExpression	signal_job_finished = OPJ_FALSE		352157	0		=			
ANR	352183	Identifier	signal_job_finished		352157	0					
ANR	352184	Identifier	OPJ_FALSE		352157	1					
ANR	352185	ExpressionStatement	tp -> pending_jobs_count --	769:12:18818:18843	352157	1	True				
ANR	352186	PostIncDecOperationExpression	tp -> pending_jobs_count --		352157	0					
ANR	352187	PtrMemberAccess	tp -> pending_jobs_count		352157	0					
ANR	352188	Identifier	tp		352157	0					
ANR	352189	Identifier	pending_jobs_count		352157	1					
ANR	352190	IncDec	--		352157	1					
ANR	352191	IfStatement	if ( tp -> pending_jobs_count <= tp -> signaling_threshold )		352157	2					
ANR	352192	Condition	tp -> pending_jobs_count <= tp -> signaling_threshold	771:16:18944:18992	352157	0	True				
ANR	352193	RelationalExpression	tp -> pending_jobs_count <= tp -> signaling_threshold		352157	0		<=			
ANR	352194	PtrMemberAccess	tp -> pending_jobs_count		352157	0					
ANR	352195	Identifier	tp		352157	0					
ANR	352196	Identifier	pending_jobs_count		352157	1					
ANR	352197	PtrMemberAccess	tp -> signaling_threshold		352157	1					
ANR	352198	Identifier	tp		352157	0					
ANR	352199	Identifier	signaling_threshold		352157	1					
ANR	352200	CompoundStatement		11:67:368:368	352157	1					
ANR	352201	ExpressionStatement	opj_cond_signal ( tp -> cond )	772:16:19013:19038	352157	0	True				
ANR	352202	CallExpression	opj_cond_signal ( tp -> cond )		352157	0					
ANR	352203	Callee	opj_cond_signal		352157	0					
ANR	352204	Identifier	opj_cond_signal		352157	0					
ANR	352205	ArgumentList	tp -> cond		352157	1					
ANR	352206	Argument	tp -> cond		352157	0					
ANR	352207	PtrMemberAccess	tp -> cond		352157	0					
ANR	352208	Identifier	tp		352157	0					
ANR	352209	Identifier	cond		352157	1					
ANR	352210	IfStatement	if ( tp -> state == OPJWTS_STOP )		352157	3					
ANR	352211	Condition	tp -> state == OPJWTS_STOP	776:12:19077:19100	352157	0	True				
ANR	352212	EqualityExpression	tp -> state == OPJWTS_STOP		352157	0		==			
ANR	352213	PtrMemberAccess	tp -> state		352157	0					
ANR	352214	Identifier	tp		352157	0					
ANR	352215	Identifier	state		352157	1					
ANR	352216	Identifier	OPJWTS_STOP		352157	1					
ANR	352217	CompoundStatement		16:38:476:476	352157	1					
ANR	352218	ExpressionStatement	opj_mutex_unlock ( tp -> mutex )	777:12:19117:19144	352157	0	True				
ANR	352219	CallExpression	opj_mutex_unlock ( tp -> mutex )		352157	0					
ANR	352220	Callee	opj_mutex_unlock		352157	0					
ANR	352221	Identifier	opj_mutex_unlock		352157	0					
ANR	352222	ArgumentList	tp -> mutex		352157	1					
ANR	352223	Argument	tp -> mutex		352157	0					
ANR	352224	PtrMemberAccess	tp -> mutex		352157	0					
ANR	352225	Identifier	tp		352157	0					
ANR	352226	Identifier	mutex		352157	1					
ANR	352227	ReturnStatement	return NULL ;	778:12:19158:19169	352157	1	True				
ANR	352228	Identifier	NULL		352157	0					
ANR	352229	ExpressionStatement	top_job_iter = tp -> job_queue	780:8:19189:19217	352157	4	True				
ANR	352230	AssignmentExpression	top_job_iter = tp -> job_queue		352157	0		=			
ANR	352231	Identifier	top_job_iter		352157	0					
ANR	352232	PtrMemberAccess	tp -> job_queue		352157	1					
ANR	352233	Identifier	tp		352157	0					
ANR	352234	Identifier	job_queue		352157	1					
ANR	352235	IfStatement	if ( top_job_iter )		352157	5					
ANR	352236	Condition	top_job_iter	781:12:19231:19242	352157	0	True				
ANR	352237	Identifier	top_job_iter		352157	0					
ANR	352238	CompoundStatement		22:12:632:660	352157	1					
ANR	352239	IdentifierDeclStatement	opj_worker_thread_job_t * job ;	782:12:19259:19287	352157	0	True				
ANR	352240	IdentifierDecl	* job		352157	0					
ANR	352241	IdentifierDeclType	opj_worker_thread_job_t *		352157	0					
ANR	352242	Identifier	job		352157	1					
ANR	352243	ExpressionStatement	tp -> job_queue = top_job_iter -> next	783:12:19301:19335	352157	1	True				
ANR	352244	AssignmentExpression	tp -> job_queue = top_job_iter -> next		352157	0		=			
ANR	352245	PtrMemberAccess	tp -> job_queue		352157	0					
ANR	352246	Identifier	tp		352157	0					
ANR	352247	Identifier	job_queue		352157	1					
ANR	352248	PtrMemberAccess	top_job_iter -> next		352157	1					
ANR	352249	Identifier	top_job_iter		352157	0					
ANR	352250	Identifier	next		352157	1					
ANR	352251	ExpressionStatement	job = top_job_iter -> job	785:12:19350:19373	352157	2	True				
ANR	352252	AssignmentExpression	job = top_job_iter -> job		352157	0		=			
ANR	352253	Identifier	job		352157	0					
ANR	352254	PtrMemberAccess	top_job_iter -> job		352157	1					
ANR	352255	Identifier	top_job_iter		352157	0					
ANR	352256	Identifier	job		352157	1					
ANR	352257	ExpressionStatement	opj_mutex_unlock ( tp -> mutex )	786:12:19387:19414	352157	3	True				
ANR	352258	CallExpression	opj_mutex_unlock ( tp -> mutex )		352157	0					
ANR	352259	Callee	opj_mutex_unlock		352157	0					
ANR	352260	Identifier	opj_mutex_unlock		352157	0					
ANR	352261	ArgumentList	tp -> mutex		352157	1					
ANR	352262	Argument	tp -> mutex		352157	0					
ANR	352263	PtrMemberAccess	tp -> mutex		352157	0					
ANR	352264	Identifier	tp		352157	0					
ANR	352265	Identifier	mutex		352157	1					
ANR	352266	ExpressionStatement	opj_free ( top_job_iter )	787:12:19428:19450	352157	4	True				
ANR	352267	CallExpression	opj_free ( top_job_iter )		352157	0					
ANR	352268	Callee	opj_free		352157	0					
ANR	352269	Identifier	opj_free		352157	0					
ANR	352270	ArgumentList	top_job_iter		352157	1					
ANR	352271	Argument	top_job_iter		352157	0					
ANR	352272	Identifier	top_job_iter		352157	0					
ANR	352273	ReturnStatement	return job ;	788:12:19464:19474	352157	5	True				
ANR	352274	Identifier	job		352157	0					
ANR	352275	IfStatement	if ( ! worker_thread -> marked_as_waiting )		352157	6					
ANR	352276	Condition	! worker_thread -> marked_as_waiting	792:12:19528:19560	352157	0	True				
ANR	352277	UnaryOperationExpression	! worker_thread -> marked_as_waiting		352157	0					
ANR	352278	UnaryOperator	!		352157	0					
ANR	352279	PtrMemberAccess	worker_thread -> marked_as_waiting		352157	1					
ANR	352280	Identifier	worker_thread		352157	0					
ANR	352281	Identifier	marked_as_waiting		352157	1					
ANR	352282	CompoundStatement		33:12:950:980	352157	1					
ANR	352283	IdentifierDeclStatement	opj_worker_thread_list_t * item ;	793:12:19577:19607	352157	0	True				
ANR	352284	IdentifierDecl	* item		352157	0					
ANR	352285	IdentifierDeclType	opj_worker_thread_list_t *		352157	0					
ANR	352286	Identifier	item		352157	1					
ANR	352287	ExpressionStatement	worker_thread -> marked_as_waiting = OPJ_TRUE	795:12:19622:19665	352157	1	True				
ANR	352288	AssignmentExpression	worker_thread -> marked_as_waiting = OPJ_TRUE		352157	0		=			
ANR	352289	PtrMemberAccess	worker_thread -> marked_as_waiting		352157	0					
ANR	352290	Identifier	worker_thread		352157	0					
ANR	352291	Identifier	marked_as_waiting		352157	1					
ANR	352292	Identifier	OPJ_TRUE		352157	1					
ANR	352293	ExpressionStatement	tp -> waiting_worker_thread_count ++	796:12:19679:19713	352157	2	True				
ANR	352294	PostIncDecOperationExpression	tp -> waiting_worker_thread_count ++		352157	0					
ANR	352295	PtrMemberAccess	tp -> waiting_worker_thread_count		352157	0					
ANR	352296	Identifier	tp		352157	0					
ANR	352297	Identifier	waiting_worker_thread_count		352157	1					
ANR	352298	IncDec	++		352157	1					
ANR	352299	ExpressionStatement	assert ( tp -> waiting_worker_thread_count <= tp -> worker_threads_count )	797:12:19727:19794	352157	3	True				
ANR	352300	CallExpression	assert ( tp -> waiting_worker_thread_count <= tp -> worker_threads_count )		352157	0					
ANR	352301	Callee	assert		352157	0					
ANR	352302	Identifier	assert		352157	0					
ANR	352303	ArgumentList	tp -> waiting_worker_thread_count <= tp -> worker_threads_count		352157	1					
ANR	352304	Argument	tp -> waiting_worker_thread_count <= tp -> worker_threads_count		352157	0					
ANR	352305	RelationalExpression	tp -> waiting_worker_thread_count <= tp -> worker_threads_count		352157	0		<=			
ANR	352306	PtrMemberAccess	tp -> waiting_worker_thread_count		352157	0					
ANR	352307	Identifier	tp		352157	0					
ANR	352308	Identifier	waiting_worker_thread_count		352157	1					
ANR	352309	PtrMemberAccess	tp -> worker_threads_count		352157	1					
ANR	352310	Identifier	tp		352157	0					
ANR	352311	Identifier	worker_threads_count		352157	1					
ANR	352312	ExpressionStatement	item = ( opj_worker_thread_list_t * ) opj_malloc ( sizeof ( opj_worker_thread_list_t ) )	799:12:19809:19888	352157	4	True				
ANR	352313	AssignmentExpression	item = ( opj_worker_thread_list_t * ) opj_malloc ( sizeof ( opj_worker_thread_list_t ) )		352157	0		=			
ANR	352314	Identifier	item		352157	0					
ANR	352315	CastExpression	( opj_worker_thread_list_t * ) opj_malloc ( sizeof ( opj_worker_thread_list_t ) )		352157	1					
ANR	352316	CastTarget	opj_worker_thread_list_t *		352157	0					
ANR	352317	CallExpression	opj_malloc ( sizeof ( opj_worker_thread_list_t ) )		352157	1					
ANR	352318	Callee	opj_malloc		352157	0					
ANR	352319	Identifier	opj_malloc		352157	0					
ANR	352320	ArgumentList	sizeof ( opj_worker_thread_list_t )		352157	1					
ANR	352321	Argument	sizeof ( opj_worker_thread_list_t )		352157	0					
ANR	352322	SizeofExpression	sizeof ( opj_worker_thread_list_t )		352157	0					
ANR	352323	Sizeof	sizeof		352157	0					
ANR	352324	SizeofOperand	opj_worker_thread_list_t		352157	1					
ANR	352325	IfStatement	if ( item == NULL )		352157	5					
ANR	352326	Condition	item == NULL	800:16:19906:19917	352157	0	True				
ANR	352327	EqualityExpression	item == NULL		352157	0		==			
ANR	352328	Identifier	item		352157	0					
ANR	352329	Identifier	NULL		352157	1					
ANR	352330	CompoundStatement		40:30:1293:1293	352157	1					
ANR	352331	ExpressionStatement	tp -> state = OPJWTS_ERROR	801:16:19938:19962	352157	0	True				
ANR	352332	AssignmentExpression	tp -> state = OPJWTS_ERROR		352157	0		=			
ANR	352333	PtrMemberAccess	tp -> state		352157	0					
ANR	352334	Identifier	tp		352157	0					
ANR	352335	Identifier	state		352157	1					
ANR	352336	Identifier	OPJWTS_ERROR		352157	1					
ANR	352337	ExpressionStatement	opj_cond_signal ( tp -> cond )	802:16:19980:20005	352157	1	True				
ANR	352338	CallExpression	opj_cond_signal ( tp -> cond )		352157	0					
ANR	352339	Callee	opj_cond_signal		352157	0					
ANR	352340	Identifier	opj_cond_signal		352157	0					
ANR	352341	ArgumentList	tp -> cond		352157	1					
ANR	352342	Argument	tp -> cond		352157	0					
ANR	352343	PtrMemberAccess	tp -> cond		352157	0					
ANR	352344	Identifier	tp		352157	0					
ANR	352345	Identifier	cond		352157	1					
ANR	352346	ExpressionStatement	opj_mutex_unlock ( tp -> mutex )	804:16:20024:20051	352157	2	True				
ANR	352347	CallExpression	opj_mutex_unlock ( tp -> mutex )		352157	0					
ANR	352348	Callee	opj_mutex_unlock		352157	0					
ANR	352349	Identifier	opj_mutex_unlock		352157	0					
ANR	352350	ArgumentList	tp -> mutex		352157	1					
ANR	352351	Argument	tp -> mutex		352157	0					
ANR	352352	PtrMemberAccess	tp -> mutex		352157	0					
ANR	352353	Identifier	tp		352157	0					
ANR	352354	Identifier	mutex		352157	1					
ANR	352355	ReturnStatement	return NULL ;	805:16:20069:20080	352157	3	True				
ANR	352356	Identifier	NULL		352157	0					
ANR	352357	ExpressionStatement	item -> worker_thread = worker_thread	808:12:20109:20144	352157	6	True				
ANR	352358	AssignmentExpression	item -> worker_thread = worker_thread		352157	0		=			
ANR	352359	PtrMemberAccess	item -> worker_thread		352157	0					
ANR	352360	Identifier	item		352157	0					
ANR	352361	Identifier	worker_thread		352157	1					
ANR	352362	Identifier	worker_thread		352157	1					
ANR	352363	ExpressionStatement	item -> next = tp -> waiting_worker_thread_list	809:12:20158:20201	352157	7	True				
ANR	352364	AssignmentExpression	item -> next = tp -> waiting_worker_thread_list		352157	0		=			
ANR	352365	PtrMemberAccess	item -> next		352157	0					
ANR	352366	Identifier	item		352157	0					
ANR	352367	Identifier	next		352157	1					
ANR	352368	PtrMemberAccess	tp -> waiting_worker_thread_list		352157	1					
ANR	352369	Identifier	tp		352157	0					
ANR	352370	Identifier	waiting_worker_thread_list		352157	1					
ANR	352371	ExpressionStatement	tp -> waiting_worker_thread_list = item	810:12:20215:20252	352157	8	True				
ANR	352372	AssignmentExpression	tp -> waiting_worker_thread_list = item		352157	0		=			
ANR	352373	PtrMemberAccess	tp -> waiting_worker_thread_list		352157	0					
ANR	352374	Identifier	tp		352157	0					
ANR	352375	Identifier	waiting_worker_thread_list		352157	1					
ANR	352376	Identifier	item		352157	1					
ANR	352377	ExpressionStatement	opj_cond_signal ( tp -> cond )	814:8:20338:20363	352157	7	True				
ANR	352378	CallExpression	opj_cond_signal ( tp -> cond )		352157	0					
ANR	352379	Callee	opj_cond_signal		352157	0					
ANR	352380	Identifier	opj_cond_signal		352157	0					
ANR	352381	ArgumentList	tp -> cond		352157	1					
ANR	352382	Argument	tp -> cond		352157	0					
ANR	352383	PtrMemberAccess	tp -> cond		352157	0					
ANR	352384	Identifier	tp		352157	0					
ANR	352385	Identifier	cond		352157	1					
ANR	352386	ExpressionStatement	opj_mutex_lock ( worker_thread -> mutex )	816:8:20374:20410	352157	8	True				
ANR	352387	CallExpression	opj_mutex_lock ( worker_thread -> mutex )		352157	0					
ANR	352388	Callee	opj_mutex_lock		352157	0					
ANR	352389	Identifier	opj_mutex_lock		352157	0					
ANR	352390	ArgumentList	worker_thread -> mutex		352157	1					
ANR	352391	Argument	worker_thread -> mutex		352157	0					
ANR	352392	PtrMemberAccess	worker_thread -> mutex		352157	0					
ANR	352393	Identifier	worker_thread		352157	0					
ANR	352394	Identifier	mutex		352157	1					
ANR	352395	ExpressionStatement	opj_mutex_unlock ( tp -> mutex )	817:8:20420:20447	352157	9	True				
ANR	352396	CallExpression	opj_mutex_unlock ( tp -> mutex )		352157	0					
ANR	352397	Callee	opj_mutex_unlock		352157	0					
ANR	352398	Identifier	opj_mutex_unlock		352157	0					
ANR	352399	ArgumentList	tp -> mutex		352157	1					
ANR	352400	Argument	tp -> mutex		352157	0					
ANR	352401	PtrMemberAccess	tp -> mutex		352157	0					
ANR	352402	Identifier	tp		352157	0					
ANR	352403	Identifier	mutex		352157	1					
ANR	352404	ExpressionStatement	"opj_cond_wait ( worker_thread -> cond , worker_thread -> mutex )"	820:8:20501:20557	352157	10	True				
ANR	352405	CallExpression	"opj_cond_wait ( worker_thread -> cond , worker_thread -> mutex )"		352157	0					
ANR	352406	Callee	opj_cond_wait		352157	0					
ANR	352407	Identifier	opj_cond_wait		352157	0					
ANR	352408	ArgumentList	worker_thread -> cond		352157	1					
ANR	352409	Argument	worker_thread -> cond		352157	0					
ANR	352410	PtrMemberAccess	worker_thread -> cond		352157	0					
ANR	352411	Identifier	worker_thread		352157	0					
ANR	352412	Identifier	cond		352157	1					
ANR	352413	Argument	worker_thread -> mutex		352157	1					
ANR	352414	PtrMemberAccess	worker_thread -> mutex		352157	0					
ANR	352415	Identifier	worker_thread		352157	0					
ANR	352416	Identifier	mutex		352157	1					
ANR	352417	ExpressionStatement	opj_mutex_unlock ( worker_thread -> mutex )	822:8:20568:20606	352157	11	True				
ANR	352418	CallExpression	opj_mutex_unlock ( worker_thread -> mutex )		352157	0					
ANR	352419	Callee	opj_mutex_unlock		352157	0					
ANR	352420	Identifier	opj_mutex_unlock		352157	0					
ANR	352421	ArgumentList	worker_thread -> mutex		352157	1					
ANR	352422	Argument	worker_thread -> mutex		352157	0					
ANR	352423	PtrMemberAccess	worker_thread -> mutex		352157	0					
ANR	352424	Identifier	worker_thread		352157	0					
ANR	352425	Identifier	mutex		352157	1					
ANR	352426	ReturnType	static opj_worker_thread_job_t *		352157	1					
ANR	352427	Identifier	opj_thread_pool_get_next_job		352157	2					
ANR	352428	ParameterList	"opj_thread_pool_t * tp , opj_worker_thread_t * worker_thread , OPJ_BOOL signal_job_finished"		352157	3					
ANR	352429	Parameter	opj_thread_pool_t * tp	758:4:18529:18549	352157	0	True				
ANR	352430	ParameterType	opj_thread_pool_t *		352157	0					
ANR	352431	Identifier	tp		352157	1					
ANR	352432	Parameter	opj_worker_thread_t * worker_thread	759:4:18556:18589	352157	1	True				
ANR	352433	ParameterType	opj_worker_thread_t *		352157	0					
ANR	352434	Identifier	worker_thread		352157	1					
ANR	352435	Parameter	OPJ_BOOL signal_job_finished	760:4:18596:18623	352157	2	True				
ANR	352436	ParameterType	OPJ_BOOL		352157	0					
ANR	352437	Identifier	signal_job_finished		352157	1					
ANR	352438	CFGEntryNode	ENTRY		352157		True				
ANR	352439	CFGExitNode	EXIT		352157		True				
ANR	352440	Symbol	opj_malloc		352157						
ANR	352441	Symbol	tp -> job_queue		352157						
ANR	352442	Symbol	tp -> signaling_threshold		352157						
ANR	352443	Symbol	tp -> state		352157						
ANR	352444	Symbol	OPJWTS_ERROR		352157						
ANR	352445	Symbol	top_job_iter -> job		352157						
ANR	352446	Symbol	tp -> mutex		352157						
ANR	352447	Symbol	item -> next		352157						
ANR	352448	Symbol	* top_job_iter		352157						
ANR	352449	Symbol	OPJ_FALSE		352157						
ANR	352450	Symbol	top_job_iter -> next		352157						
ANR	352451	Symbol	* item		352157						
ANR	352452	Symbol	item -> worker_thread		352157						
ANR	352453	Symbol	OPJ_TRUE		352157						
ANR	352454	Symbol	tp -> waiting_worker_thread_count		352157						
ANR	352455	Symbol	tp -> cond		352157						
ANR	352456	Symbol	* tp		352157						
ANR	352457	Symbol	tp -> waiting_worker_thread_list		352157						
ANR	352458	Symbol	top_job_iter		352157						
ANR	352459	Symbol	item		352157						
ANR	352460	Symbol	NULL		352157						
ANR	352461	Symbol	worker_thread -> marked_as_waiting		352157						
ANR	352462	Symbol	worker_thread		352157						
ANR	352463	Symbol	signal_job_finished		352157						
ANR	352464	Symbol	OPJWTS_STOP		352157						
ANR	352465	Symbol	tp -> worker_threads_count		352157						
ANR	352466	Symbol	tp -> pending_jobs_count		352157						
ANR	352467	Symbol	worker_thread -> mutex		352157						
ANR	352468	Symbol	tp		352157						
ANR	352469	Symbol	job		352157						
ANR	352470	Symbol	worker_thread -> cond		352157						
ANR	352471	Symbol	* worker_thread		352157						
ANR	352472	Function	opj_thread_pool_submit_job	827:0:20652:22624							
ANR	352473	FunctionDef	"opj_thread_pool_submit_job (opj_thread_pool_t * tp , opj_job_fn job_fn , void * user_data)"		352472	0					
ANR	352474	CompoundStatement		830:0:20819:22624	352472	0					
ANR	352475	IdentifierDeclStatement	opj_worker_thread_job_t * job ;	831:4:20825:20853	352472	0	True				
ANR	352476	IdentifierDecl	* job		352472	0					
ANR	352477	IdentifierDeclType	opj_worker_thread_job_t *		352472	0					
ANR	352478	Identifier	job		352472	1					
ANR	352479	IdentifierDeclStatement	opj_job_list_t * item ;	832:4:20859:20879	352472	1	True				
ANR	352480	IdentifierDecl	* item		352472	0					
ANR	352481	IdentifierDeclType	opj_job_list_t *		352472	0					
ANR	352482	Identifier	item		352472	1					
ANR	352483	IfStatement	if ( tp -> mutex == NULL )		352472	2					
ANR	352484	Condition	tp -> mutex == NULL	834:8:20890:20906	352472	0	True				
ANR	352485	EqualityExpression	tp -> mutex == NULL		352472	0		==			
ANR	352486	PtrMemberAccess	tp -> mutex		352472	0					
ANR	352487	Identifier	tp		352472	0					
ANR	352488	Identifier	mutex		352472	1					
ANR	352489	Identifier	NULL		352472	1					
ANR	352490	CompoundStatement		5:27:89:89	352472	1					
ANR	352491	ExpressionStatement	"job_fn ( user_data , tp -> tls )"	835:8:20919:20945	352472	0	True				
ANR	352492	CallExpression	"job_fn ( user_data , tp -> tls )"		352472	0					
ANR	352493	Callee	job_fn		352472	0					
ANR	352494	Identifier	job_fn		352472	0					
ANR	352495	ArgumentList	user_data		352472	1					
ANR	352496	Argument	user_data		352472	0					
ANR	352497	Identifier	user_data		352472	0					
ANR	352498	Argument	tp -> tls		352472	1					
ANR	352499	PtrMemberAccess	tp -> tls		352472	0					
ANR	352500	Identifier	tp		352472	0					
ANR	352501	Identifier	tls		352472	1					
ANR	352502	ReturnStatement	return OPJ_TRUE ;	836:8:20955:20970	352472	1	True				
ANR	352503	Identifier	OPJ_TRUE		352472	0					
ANR	352504	ExpressionStatement	job = ( opj_worker_thread_job_t * ) opj_malloc ( sizeof ( opj_worker_thread_job_t ) )	839:4:20983:21058	352472	3	True				
ANR	352505	AssignmentExpression	job = ( opj_worker_thread_job_t * ) opj_malloc ( sizeof ( opj_worker_thread_job_t ) )		352472	0		=			
ANR	352506	Identifier	job		352472	0					
ANR	352507	CastExpression	( opj_worker_thread_job_t * ) opj_malloc ( sizeof ( opj_worker_thread_job_t ) )		352472	1					
ANR	352508	CastTarget	opj_worker_thread_job_t *		352472	0					
ANR	352509	CallExpression	opj_malloc ( sizeof ( opj_worker_thread_job_t ) )		352472	1					
ANR	352510	Callee	opj_malloc		352472	0					
ANR	352511	Identifier	opj_malloc		352472	0					
ANR	352512	ArgumentList	sizeof ( opj_worker_thread_job_t )		352472	1					
ANR	352513	Argument	sizeof ( opj_worker_thread_job_t )		352472	0					
ANR	352514	SizeofExpression	sizeof ( opj_worker_thread_job_t )		352472	0					
ANR	352515	Sizeof	sizeof		352472	0					
ANR	352516	SizeofOperand	opj_worker_thread_job_t		352472	1					
ANR	352517	IfStatement	if ( job == NULL )		352472	4					
ANR	352518	Condition	job == NULL	840:8:21068:21078	352472	0	True				
ANR	352519	EqualityExpression	job == NULL		352472	0		==			
ANR	352520	Identifier	job		352472	0					
ANR	352521	Identifier	NULL		352472	1					
ANR	352522	CompoundStatement		11:21:261:261	352472	1					
ANR	352523	ReturnStatement	return OPJ_FALSE ;	841:8:21091:21107	352472	0	True				
ANR	352524	Identifier	OPJ_FALSE		352472	0					
ANR	352525	ExpressionStatement	job -> job_fn = job_fn	843:4:21119:21139	352472	5	True				
ANR	352526	AssignmentExpression	job -> job_fn = job_fn		352472	0		=			
ANR	352527	PtrMemberAccess	job -> job_fn		352472	0					
ANR	352528	Identifier	job		352472	0					
ANR	352529	Identifier	job_fn		352472	1					
ANR	352530	Identifier	job_fn		352472	1					
ANR	352531	ExpressionStatement	job -> user_data = user_data	844:4:21145:21171	352472	6	True				
ANR	352532	AssignmentExpression	job -> user_data = user_data		352472	0		=			
ANR	352533	PtrMemberAccess	job -> user_data		352472	0					
ANR	352534	Identifier	job		352472	0					
ANR	352535	Identifier	user_data		352472	1					
ANR	352536	Identifier	user_data		352472	1					
ANR	352537	ExpressionStatement	item = ( opj_job_list_t * ) opj_malloc ( sizeof ( opj_job_list_t ) )	846:4:21178:21237	352472	7	True				
ANR	352538	AssignmentExpression	item = ( opj_job_list_t * ) opj_malloc ( sizeof ( opj_job_list_t ) )		352472	0		=			
ANR	352539	Identifier	item		352472	0					
ANR	352540	CastExpression	( opj_job_list_t * ) opj_malloc ( sizeof ( opj_job_list_t ) )		352472	1					
ANR	352541	CastTarget	opj_job_list_t *		352472	0					
ANR	352542	CallExpression	opj_malloc ( sizeof ( opj_job_list_t ) )		352472	1					
ANR	352543	Callee	opj_malloc		352472	0					
ANR	352544	Identifier	opj_malloc		352472	0					
ANR	352545	ArgumentList	sizeof ( opj_job_list_t )		352472	1					
ANR	352546	Argument	sizeof ( opj_job_list_t )		352472	0					
ANR	352547	SizeofExpression	sizeof ( opj_job_list_t )		352472	0					
ANR	352548	Sizeof	sizeof		352472	0					
ANR	352549	SizeofOperand	opj_job_list_t		352472	1					
ANR	352550	IfStatement	if ( item == NULL )		352472	8					
ANR	352551	Condition	item == NULL	847:8:21247:21258	352472	0	True				
ANR	352552	EqualityExpression	item == NULL		352472	0		==			
ANR	352553	Identifier	item		352472	0					
ANR	352554	Identifier	NULL		352472	1					
ANR	352555	CompoundStatement		18:22:441:441	352472	1					
ANR	352556	ExpressionStatement	opj_free ( job )	848:8:21271:21284	352472	0	True				
ANR	352557	CallExpression	opj_free ( job )		352472	0					
ANR	352558	Callee	opj_free		352472	0					
ANR	352559	Identifier	opj_free		352472	0					
ANR	352560	ArgumentList	job		352472	1					
ANR	352561	Argument	job		352472	0					
ANR	352562	Identifier	job		352472	0					
ANR	352563	ReturnStatement	return OPJ_FALSE ;	849:8:21294:21310	352472	1	True				
ANR	352564	Identifier	OPJ_FALSE		352472	0					
ANR	352565	ExpressionStatement	item -> job = job	851:4:21322:21337	352472	9	True				
ANR	352566	AssignmentExpression	item -> job = job		352472	0		=			
ANR	352567	PtrMemberAccess	item -> job		352472	0					
ANR	352568	Identifier	item		352472	0					
ANR	352569	Identifier	job		352472	1					
ANR	352570	Identifier	job		352472	1					
ANR	352571	ExpressionStatement	opj_mutex_lock ( tp -> mutex )	853:4:21344:21369	352472	10	True				
ANR	352572	CallExpression	opj_mutex_lock ( tp -> mutex )		352472	0					
ANR	352573	Callee	opj_mutex_lock		352472	0					
ANR	352574	Identifier	opj_mutex_lock		352472	0					
ANR	352575	ArgumentList	tp -> mutex		352472	1					
ANR	352576	Argument	tp -> mutex		352472	0					
ANR	352577	PtrMemberAccess	tp -> mutex		352472	0					
ANR	352578	Identifier	tp		352472	0					
ANR	352579	Identifier	mutex		352472	1					
ANR	352580	ExpressionStatement	tp -> signaling_threshold = 100 * tp -> worker_threads_count	855:4:21376:21432	352472	11	True				
ANR	352581	AssignmentExpression	tp -> signaling_threshold = 100 * tp -> worker_threads_count		352472	0		=			
ANR	352582	PtrMemberAccess	tp -> signaling_threshold		352472	0					
ANR	352583	Identifier	tp		352472	0					
ANR	352584	Identifier	signaling_threshold		352472	1					
ANR	352585	MultiplicativeExpression	100 * tp -> worker_threads_count		352472	1		*			
ANR	352586	PrimaryExpression	100		352472	0					
ANR	352587	PtrMemberAccess	tp -> worker_threads_count		352472	1					
ANR	352588	Identifier	tp		352472	0					
ANR	352589	Identifier	worker_threads_count		352472	1					
ANR	352590	WhileStatement	while ( tp -> pending_jobs_count > tp -> signaling_threshold )		352472	12					
ANR	352591	Condition	tp -> pending_jobs_count > tp -> signaling_threshold	856:11:21445:21492	352472	0	True				
ANR	352592	RelationalExpression	tp -> pending_jobs_count > tp -> signaling_threshold		352472	0		>			
ANR	352593	PtrMemberAccess	tp -> pending_jobs_count		352472	0					
ANR	352594	Identifier	tp		352472	0					
ANR	352595	Identifier	pending_jobs_count		352472	1					
ANR	352596	PtrMemberAccess	tp -> signaling_threshold		352472	1					
ANR	352597	Identifier	tp		352472	0					
ANR	352598	Identifier	signaling_threshold		352472	1					
ANR	352599	CompoundStatement		27:61:675:675	352472	1					
ANR	352600	ExpressionStatement	"opj_cond_wait ( tp -> cond , tp -> mutex )"	858:8:21582:21616	352472	0	True				
ANR	352601	CallExpression	"opj_cond_wait ( tp -> cond , tp -> mutex )"		352472	0					
ANR	352602	Callee	opj_cond_wait		352472	0					
ANR	352603	Identifier	opj_cond_wait		352472	0					
ANR	352604	ArgumentList	tp -> cond		352472	1					
ANR	352605	Argument	tp -> cond		352472	0					
ANR	352606	PtrMemberAccess	tp -> cond		352472	0					
ANR	352607	Identifier	tp		352472	0					
ANR	352608	Identifier	cond		352472	1					
ANR	352609	Argument	tp -> mutex		352472	1					
ANR	352610	PtrMemberAccess	tp -> mutex		352472	0					
ANR	352611	Identifier	tp		352472	0					
ANR	352612	Identifier	mutex		352472	1					
ANR	352613	ExpressionStatement	item -> next = tp -> job_queue	862:4:21701:21727	352472	13	True				
ANR	352614	AssignmentExpression	item -> next = tp -> job_queue		352472	0		=			
ANR	352615	PtrMemberAccess	item -> next		352472	0					
ANR	352616	Identifier	item		352472	0					
ANR	352617	Identifier	next		352472	1					
ANR	352618	PtrMemberAccess	tp -> job_queue		352472	1					
ANR	352619	Identifier	tp		352472	0					
ANR	352620	Identifier	job_queue		352472	1					
ANR	352621	ExpressionStatement	tp -> job_queue = item	863:4:21733:21753	352472	14	True				
ANR	352622	AssignmentExpression	tp -> job_queue = item		352472	0		=			
ANR	352623	PtrMemberAccess	tp -> job_queue		352472	0					
ANR	352624	Identifier	tp		352472	0					
ANR	352625	Identifier	job_queue		352472	1					
ANR	352626	Identifier	item		352472	1					
ANR	352627	ExpressionStatement	tp -> pending_jobs_count ++	864:4:21759:21784	352472	15	True				
ANR	352628	PostIncDecOperationExpression	tp -> pending_jobs_count ++		352472	0					
ANR	352629	PtrMemberAccess	tp -> pending_jobs_count		352472	0					
ANR	352630	Identifier	tp		352472	0					
ANR	352631	Identifier	pending_jobs_count		352472	1					
ANR	352632	IncDec	++		352472	1					
ANR	352633	IfStatement	if ( tp -> waiting_worker_thread_list )		352472	16					
ANR	352634	Condition	tp -> waiting_worker_thread_list	866:8:21795:21824	352472	0	True				
ANR	352635	PtrMemberAccess	tp -> waiting_worker_thread_list		352472	0					
ANR	352636	Identifier	tp		352472	0					
ANR	352637	Identifier	waiting_worker_thread_list		352472	1					
ANR	352638	CompoundStatement		40:8:1101:1138	352472	1					
ANR	352639	IdentifierDeclStatement	opj_worker_thread_t * worker_thread ;	867:8:21837:21871	352472	0	True				
ANR	352640	IdentifierDecl	* worker_thread		352472	0					
ANR	352641	IdentifierDeclType	opj_worker_thread_t *		352472	0					
ANR	352642	Identifier	worker_thread		352472	1					
ANR	352643	IdentifierDeclStatement	opj_worker_thread_list_t * next ;	868:8:21881:21911	352472	1	True				
ANR	352644	IdentifierDecl	* next		352472	0					
ANR	352645	IdentifierDeclType	opj_worker_thread_list_t *		352472	0					
ANR	352646	Identifier	next		352472	1					
ANR	352647	IdentifierDeclStatement	opj_worker_thread_list_t * to_opj_free ;	869:8:21921:21958	352472	2	True				
ANR	352648	IdentifierDecl	* to_opj_free		352472	0					
ANR	352649	IdentifierDeclType	opj_worker_thread_list_t *		352472	0					
ANR	352650	Identifier	to_opj_free		352472	1					
ANR	352651	ExpressionStatement	worker_thread = tp -> waiting_worker_thread_list -> worker_thread	871:8:21969:22030	352472	3	True				
ANR	352652	AssignmentExpression	worker_thread = tp -> waiting_worker_thread_list -> worker_thread		352472	0		=			
ANR	352653	Identifier	worker_thread		352472	0					
ANR	352654	PtrMemberAccess	tp -> waiting_worker_thread_list -> worker_thread		352472	1					
ANR	352655	PtrMemberAccess	tp -> waiting_worker_thread_list		352472	0					
ANR	352656	Identifier	tp		352472	0					
ANR	352657	Identifier	waiting_worker_thread_list		352472	1					
ANR	352658	Identifier	worker_thread		352472	1					
ANR	352659	ExpressionStatement	assert ( worker_thread -> marked_as_waiting )	873:8:22041:22081	352472	4	True				
ANR	352660	CallExpression	assert ( worker_thread -> marked_as_waiting )		352472	0					
ANR	352661	Callee	assert		352472	0					
ANR	352662	Identifier	assert		352472	0					
ANR	352663	ArgumentList	worker_thread -> marked_as_waiting		352472	1					
ANR	352664	Argument	worker_thread -> marked_as_waiting		352472	0					
ANR	352665	PtrMemberAccess	worker_thread -> marked_as_waiting		352472	0					
ANR	352666	Identifier	worker_thread		352472	0					
ANR	352667	Identifier	marked_as_waiting		352472	1					
ANR	352668	ExpressionStatement	worker_thread -> marked_as_waiting = OPJ_FALSE	874:8:22091:22135	352472	5	True				
ANR	352669	AssignmentExpression	worker_thread -> marked_as_waiting = OPJ_FALSE		352472	0		=			
ANR	352670	PtrMemberAccess	worker_thread -> marked_as_waiting		352472	0					
ANR	352671	Identifier	worker_thread		352472	0					
ANR	352672	Identifier	marked_as_waiting		352472	1					
ANR	352673	Identifier	OPJ_FALSE		352472	1					
ANR	352674	ExpressionStatement	next = tp -> waiting_worker_thread_list -> next	876:8:22146:22189	352472	6	True				
ANR	352675	AssignmentExpression	next = tp -> waiting_worker_thread_list -> next		352472	0		=			
ANR	352676	Identifier	next		352472	0					
ANR	352677	PtrMemberAccess	tp -> waiting_worker_thread_list -> next		352472	1					
ANR	352678	PtrMemberAccess	tp -> waiting_worker_thread_list		352472	0					
ANR	352679	Identifier	tp		352472	0					
ANR	352680	Identifier	waiting_worker_thread_list		352472	1					
ANR	352681	Identifier	next		352472	1					
ANR	352682	ExpressionStatement	to_opj_free = tp -> waiting_worker_thread_list	877:8:22199:22243	352472	7	True				
ANR	352683	AssignmentExpression	to_opj_free = tp -> waiting_worker_thread_list		352472	0		=			
ANR	352684	Identifier	to_opj_free		352472	0					
ANR	352685	PtrMemberAccess	tp -> waiting_worker_thread_list		352472	1					
ANR	352686	Identifier	tp		352472	0					
ANR	352687	Identifier	waiting_worker_thread_list		352472	1					
ANR	352688	ExpressionStatement	tp -> waiting_worker_thread_list = next	878:8:22253:22290	352472	8	True				
ANR	352689	AssignmentExpression	tp -> waiting_worker_thread_list = next		352472	0		=			
ANR	352690	PtrMemberAccess	tp -> waiting_worker_thread_list		352472	0					
ANR	352691	Identifier	tp		352472	0					
ANR	352692	Identifier	waiting_worker_thread_list		352472	1					
ANR	352693	Identifier	next		352472	1					
ANR	352694	ExpressionStatement	tp -> waiting_worker_thread_count --	879:8:22300:22334	352472	9	True				
ANR	352695	PostIncDecOperationExpression	tp -> waiting_worker_thread_count --		352472	0					
ANR	352696	PtrMemberAccess	tp -> waiting_worker_thread_count		352472	0					
ANR	352697	Identifier	tp		352472	0					
ANR	352698	Identifier	waiting_worker_thread_count		352472	1					
ANR	352699	IncDec	--		352472	1					
ANR	352700	ExpressionStatement	opj_mutex_lock ( worker_thread -> mutex )	881:8:22345:22381	352472	10	True				
ANR	352701	CallExpression	opj_mutex_lock ( worker_thread -> mutex )		352472	0					
ANR	352702	Callee	opj_mutex_lock		352472	0					
ANR	352703	Identifier	opj_mutex_lock		352472	0					
ANR	352704	ArgumentList	worker_thread -> mutex		352472	1					
ANR	352705	Argument	worker_thread -> mutex		352472	0					
ANR	352706	PtrMemberAccess	worker_thread -> mutex		352472	0					
ANR	352707	Identifier	worker_thread		352472	0					
ANR	352708	Identifier	mutex		352472	1					
ANR	352709	ExpressionStatement	opj_mutex_unlock ( tp -> mutex )	882:8:22391:22418	352472	11	True				
ANR	352710	CallExpression	opj_mutex_unlock ( tp -> mutex )		352472	0					
ANR	352711	Callee	opj_mutex_unlock		352472	0					
ANR	352712	Identifier	opj_mutex_unlock		352472	0					
ANR	352713	ArgumentList	tp -> mutex		352472	1					
ANR	352714	Argument	tp -> mutex		352472	0					
ANR	352715	PtrMemberAccess	tp -> mutex		352472	0					
ANR	352716	Identifier	tp		352472	0					
ANR	352717	Identifier	mutex		352472	1					
ANR	352718	ExpressionStatement	opj_cond_signal ( worker_thread -> cond )	883:8:22428:22464	352472	12	True				
ANR	352719	CallExpression	opj_cond_signal ( worker_thread -> cond )		352472	0					
ANR	352720	Callee	opj_cond_signal		352472	0					
ANR	352721	Identifier	opj_cond_signal		352472	0					
ANR	352722	ArgumentList	worker_thread -> cond		352472	1					
ANR	352723	Argument	worker_thread -> cond		352472	0					
ANR	352724	PtrMemberAccess	worker_thread -> cond		352472	0					
ANR	352725	Identifier	worker_thread		352472	0					
ANR	352726	Identifier	cond		352472	1					
ANR	352727	ExpressionStatement	opj_mutex_unlock ( worker_thread -> mutex )	884:8:22474:22512	352472	13	True				
ANR	352728	CallExpression	opj_mutex_unlock ( worker_thread -> mutex )		352472	0					
ANR	352729	Callee	opj_mutex_unlock		352472	0					
ANR	352730	Identifier	opj_mutex_unlock		352472	0					
ANR	352731	ArgumentList	worker_thread -> mutex		352472	1					
ANR	352732	Argument	worker_thread -> mutex		352472	0					
ANR	352733	PtrMemberAccess	worker_thread -> mutex		352472	0					
ANR	352734	Identifier	worker_thread		352472	0					
ANR	352735	Identifier	mutex		352472	1					
ANR	352736	ExpressionStatement	opj_free ( to_opj_free )	886:8:22523:22544	352472	14	True				
ANR	352737	CallExpression	opj_free ( to_opj_free )		352472	0					
ANR	352738	Callee	opj_free		352472	0					
ANR	352739	Identifier	opj_free		352472	0					
ANR	352740	ArgumentList	to_opj_free		352472	1					
ANR	352741	Argument	to_opj_free		352472	0					
ANR	352742	Identifier	to_opj_free		352472	0					
ANR	352743	ElseStatement	else		352472	0					
ANR	352744	CompoundStatement		58:11:1737:1737	352472	0					
ANR	352745	ExpressionStatement	opj_mutex_unlock ( tp -> mutex )	888:8:22567:22594	352472	0	True				
ANR	352746	CallExpression	opj_mutex_unlock ( tp -> mutex )		352472	0					
ANR	352747	Callee	opj_mutex_unlock		352472	0					
ANR	352748	Identifier	opj_mutex_unlock		352472	0					
ANR	352749	ArgumentList	tp -> mutex		352472	1					
ANR	352750	Argument	tp -> mutex		352472	0					
ANR	352751	PtrMemberAccess	tp -> mutex		352472	0					
ANR	352752	Identifier	tp		352472	0					
ANR	352753	Identifier	mutex		352472	1					
ANR	352754	ReturnStatement	return OPJ_TRUE ;	891:4:22607:22622	352472	17	True				
ANR	352755	Identifier	OPJ_TRUE		352472	0					
ANR	352756	ReturnType	OPJ_BOOL		352472	1					
ANR	352757	Identifier	opj_thread_pool_submit_job		352472	2					
ANR	352758	ParameterList	"opj_thread_pool_t * tp , opj_job_fn job_fn , void * user_data"		352472	3					
ANR	352759	Parameter	opj_thread_pool_t * tp	827:36:20688:20708	352472	0	True				
ANR	352760	ParameterType	opj_thread_pool_t *		352472	0					
ANR	352761	Identifier	tp		352472	1					
ANR	352762	Parameter	opj_job_fn job_fn	828:36:20747:20763	352472	1	True				
ANR	352763	ParameterType	opj_job_fn		352472	0					
ANR	352764	Identifier	job_fn		352472	1					
ANR	352765	Parameter	void * user_data	829:36:20802:20816	352472	2	True				
ANR	352766	ParameterType	void *		352472	0					
ANR	352767	Identifier	user_data		352472	1					
ANR	352768	CFGEntryNode	ENTRY		352472		True				
ANR	352769	CFGExitNode	EXIT		352472		True				
ANR	352770	Symbol	next		352472						
ANR	352771	Symbol	opj_malloc		352472						
ANR	352772	Symbol	to_opj_free		352472						
ANR	352773	Symbol	tp -> job_queue		352472						
ANR	352774	Symbol	item -> job		352472						
ANR	352775	Symbol	tp -> signaling_threshold		352472						
ANR	352776	Symbol	tp -> mutex		352472						
ANR	352777	Symbol	item -> next		352472						
ANR	352778	Symbol	tp -> waiting_worker_thread_list -> worker_thread		352472						
ANR	352779	Symbol	OPJ_FALSE		352472						
ANR	352780	Symbol	* item		352472						
ANR	352781	Symbol	* tp -> waiting_worker_thread_list		352472						
ANR	352782	Symbol	OPJ_TRUE		352472						
ANR	352783	Symbol	tp -> waiting_worker_thread_count		352472						
ANR	352784	Symbol	tp -> cond		352472						
ANR	352785	Symbol	job_fn		352472						
ANR	352786	Symbol	* tp		352472						
ANR	352787	Symbol	tp -> tls		352472						
ANR	352788	Symbol	tp -> waiting_worker_thread_list		352472						
ANR	352789	Symbol	item		352472						
ANR	352790	Symbol	NULL		352472						
ANR	352791	Symbol	job -> user_data		352472						
ANR	352792	Symbol	worker_thread -> marked_as_waiting		352472						
ANR	352793	Symbol	worker_thread		352472						
ANR	352794	Symbol	tp -> waiting_worker_thread_list -> next		352472						
ANR	352795	Symbol	* job		352472						
ANR	352796	Symbol	* * tp		352472						
ANR	352797	Symbol	user_data		352472						
ANR	352798	Symbol	job -> job_fn		352472						
ANR	352799	Symbol	tp -> worker_threads_count		352472						
ANR	352800	Symbol	tp -> pending_jobs_count		352472						
ANR	352801	Symbol	worker_thread -> mutex		352472						
ANR	352802	Symbol	tp		352472						
ANR	352803	Symbol	job		352472						
ANR	352804	Symbol	worker_thread -> cond		352472						
ANR	352805	Symbol	* worker_thread		352472						
ANR	352806	Function	opj_thread_pool_wait_completion	894:0:22627:23304							
ANR	352807	FunctionDef	"opj_thread_pool_wait_completion (opj_thread_pool_t * tp , int max_remaining_jobs)"		352806	0					
ANR	352808	CompoundStatement		896:0:22748:23304	352806	0					
ANR	352809	IfStatement	if ( tp -> mutex == NULL )		352806	0					
ANR	352810	Condition	tp -> mutex == NULL	897:8:22758:22774	352806	0	True				
ANR	352811	EqualityExpression	tp -> mutex == NULL		352806	0		==			
ANR	352812	PtrMemberAccess	tp -> mutex		352806	0					
ANR	352813	Identifier	tp		352806	0					
ANR	352814	Identifier	mutex		352806	1					
ANR	352815	Identifier	NULL		352806	1					
ANR	352816	CompoundStatement		2:27:28:28	352806	1					
ANR	352817	ReturnStatement	return ;	898:8:22787:22793	352806	0	True				
ANR	352818	IfStatement	if ( max_remaining_jobs < 0 )		352806	1					
ANR	352819	Condition	max_remaining_jobs < 0	901:8:22810:22831	352806	0	True				
ANR	352820	RelationalExpression	max_remaining_jobs < 0		352806	0		<			
ANR	352821	Identifier	max_remaining_jobs		352806	0					
ANR	352822	PrimaryExpression	0		352806	1					
ANR	352823	CompoundStatement		6:32:85:85	352806	1					
ANR	352824	ExpressionStatement	max_remaining_jobs = 0	902:8:22844:22866	352806	0	True				
ANR	352825	AssignmentExpression	max_remaining_jobs = 0		352806	0		=			
ANR	352826	Identifier	max_remaining_jobs		352806	0					
ANR	352827	PrimaryExpression	0		352806	1					
ANR	352828	ExpressionStatement	opj_mutex_lock ( tp -> mutex )	904:4:22878:22903	352806	2	True				
ANR	352829	CallExpression	opj_mutex_lock ( tp -> mutex )		352806	0					
ANR	352830	Callee	opj_mutex_lock		352806	0					
ANR	352831	Identifier	opj_mutex_lock		352806	0					
ANR	352832	ArgumentList	tp -> mutex		352806	1					
ANR	352833	Argument	tp -> mutex		352806	0					
ANR	352834	PtrMemberAccess	tp -> mutex		352806	0					
ANR	352835	Identifier	tp		352806	0					
ANR	352836	Identifier	mutex		352806	1					
ANR	352837	ExpressionStatement	tp -> signaling_threshold = max_remaining_jobs	905:4:22909:22953	352806	3	True				
ANR	352838	AssignmentExpression	tp -> signaling_threshold = max_remaining_jobs		352806	0		=			
ANR	352839	PtrMemberAccess	tp -> signaling_threshold		352806	0					
ANR	352840	Identifier	tp		352806	0					
ANR	352841	Identifier	signaling_threshold		352806	1					
ANR	352842	Identifier	max_remaining_jobs		352806	1					
ANR	352843	WhileStatement	while ( tp -> pending_jobs_count > max_remaining_jobs )		352806	4					
ANR	352844	Condition	tp -> pending_jobs_count > max_remaining_jobs	906:11:22966:23008	352806	0	True				
ANR	352845	RelationalExpression	tp -> pending_jobs_count > max_remaining_jobs		352806	0		>			
ANR	352846	PtrMemberAccess	tp -> pending_jobs_count		352806	0					
ANR	352847	Identifier	tp		352806	0					
ANR	352848	Identifier	pending_jobs_count		352806	1					
ANR	352849	Identifier	max_remaining_jobs		352806	1					
ANR	352850	CompoundStatement		11:56:262:262	352806	1					
ANR	352851	ExpressionStatement	"opj_cond_wait ( tp -> cond , tp -> mutex )"	908:8:23148:23182	352806	0	True				
ANR	352852	CallExpression	"opj_cond_wait ( tp -> cond , tp -> mutex )"		352806	0					
ANR	352853	Callee	opj_cond_wait		352806	0					
ANR	352854	Identifier	opj_cond_wait		352806	0					
ANR	352855	ArgumentList	tp -> cond		352806	1					
ANR	352856	Argument	tp -> cond		352806	0					
ANR	352857	PtrMemberAccess	tp -> cond		352806	0					
ANR	352858	Identifier	tp		352806	0					
ANR	352859	Identifier	cond		352806	1					
ANR	352860	Argument	tp -> mutex		352806	1					
ANR	352861	PtrMemberAccess	tp -> mutex		352806	0					
ANR	352862	Identifier	tp		352806	0					
ANR	352863	Identifier	mutex		352806	1					
ANR	352864	ExpressionStatement	opj_mutex_unlock ( tp -> mutex )	911:4:23275:23302	352806	5	True				
ANR	352865	CallExpression	opj_mutex_unlock ( tp -> mutex )		352806	0					
ANR	352866	Callee	opj_mutex_unlock		352806	0					
ANR	352867	Identifier	opj_mutex_unlock		352806	0					
ANR	352868	ArgumentList	tp -> mutex		352806	1					
ANR	352869	Argument	tp -> mutex		352806	0					
ANR	352870	PtrMemberAccess	tp -> mutex		352806	0					
ANR	352871	Identifier	tp		352806	0					
ANR	352872	Identifier	mutex		352806	1					
ANR	352873	ReturnType	void		352806	1					
ANR	352874	Identifier	opj_thread_pool_wait_completion		352806	2					
ANR	352875	ParameterList	"opj_thread_pool_t * tp , int max_remaining_jobs"		352806	3					
ANR	352876	Parameter	opj_thread_pool_t * tp	894:37:22664:22684	352806	0	True				
ANR	352877	ParameterType	opj_thread_pool_t *		352806	0					
ANR	352878	Identifier	tp		352806	1					
ANR	352879	Parameter	int max_remaining_jobs	895:37:22724:22745	352806	1	True				
ANR	352880	ParameterType	int		352806	0					
ANR	352881	Identifier	max_remaining_jobs		352806	1					
ANR	352882	CFGEntryNode	ENTRY		352806		True				
ANR	352883	CFGExitNode	EXIT		352806		True				
ANR	352884	Symbol	* tp		352806						
ANR	352885	Symbol	NULL		352806						
ANR	352886	Symbol	tp -> signaling_threshold		352806						
ANR	352887	Symbol	tp -> pending_jobs_count		352806						
ANR	352888	Symbol	tp		352806						
ANR	352889	Symbol	max_remaining_jobs		352806						
ANR	352890	Symbol	tp -> mutex		352806						
ANR	352891	Symbol	tp -> cond		352806						
ANR	352892	Function	opj_thread_pool_get_thread_count	914:0:23307:23406							
ANR	352893	FunctionDef	opj_thread_pool_get_thread_count (opj_thread_pool_t * tp)		352892	0					
ANR	352894	CompoundStatement		915:0:23367:23406	352892	0					
ANR	352895	ReturnStatement	return tp -> worker_threads_count ;	916:4:23373:23404	352892	0	True				
ANR	352896	PtrMemberAccess	tp -> worker_threads_count		352892	0					
ANR	352897	Identifier	tp		352892	0					
ANR	352898	Identifier	worker_threads_count		352892	1					
ANR	352899	ReturnType	int		352892	1					
ANR	352900	Identifier	opj_thread_pool_get_thread_count		352892	2					
ANR	352901	ParameterList	opj_thread_pool_t * tp		352892	3					
ANR	352902	Parameter	opj_thread_pool_t * tp	914:37:23344:23364	352892	0	True				
ANR	352903	ParameterType	opj_thread_pool_t *		352892	0					
ANR	352904	Identifier	tp		352892	1					
ANR	352905	CFGEntryNode	ENTRY		352892		True				
ANR	352906	CFGExitNode	EXIT		352892		True				
ANR	352907	Symbol	* tp		352892						
ANR	352908	Symbol	tp -> worker_threads_count		352892						
ANR	352909	Symbol	tp		352892						
ANR	352910	Function	opj_thread_pool_destroy	919:0:23409:24527							
ANR	352911	FunctionDef	opj_thread_pool_destroy (opj_thread_pool_t * tp)		352910	0					
ANR	352912	CompoundStatement		920:0:23461:24527	352910	0					
ANR	352913	IfStatement	if ( ! tp )		352910	0					
ANR	352914	Condition	! tp	921:8:23471:23473	352910	0	True				
ANR	352915	UnaryOperationExpression	! tp		352910	0					
ANR	352916	UnaryOperator	!		352910	0					
ANR	352917	Identifier	tp		352910	1					
ANR	352918	CompoundStatement		2:13:14:14	352910	1					
ANR	352919	ReturnStatement	return ;	922:8:23486:23492	352910	0	True				
ANR	352920	IfStatement	if ( tp -> cond )		352910	1					
ANR	352921	Condition	tp -> cond	924:8:23508:23515	352910	0	True				
ANR	352922	PtrMemberAccess	tp -> cond		352910	0					
ANR	352923	Identifier	tp		352910	0					
ANR	352924	Identifier	cond		352910	1					
ANR	352925	CompoundStatement		6:8:66:71	352910	1					
ANR	352926	IdentifierDeclStatement	int i ;	925:8:23528:23533	352910	0	True				
ANR	352927	IdentifierDecl	i		352910	0					
ANR	352928	IdentifierDeclType	int		352910	0					
ANR	352929	Identifier	i		352910	1					
ANR	352930	ExpressionStatement	"opj_thread_pool_wait_completion ( tp , 0 )"	926:8:23543:23581	352910	1	True				
ANR	352931	CallExpression	"opj_thread_pool_wait_completion ( tp , 0 )"		352910	0					
ANR	352932	Callee	opj_thread_pool_wait_completion		352910	0					
ANR	352933	Identifier	opj_thread_pool_wait_completion		352910	0					
ANR	352934	ArgumentList	tp		352910	1					
ANR	352935	Argument	tp		352910	0					
ANR	352936	Identifier	tp		352910	0					
ANR	352937	Argument	0		352910	1					
ANR	352938	PrimaryExpression	0		352910	0					
ANR	352939	ExpressionStatement	opj_mutex_lock ( tp -> mutex )	928:8:23592:23617	352910	2	True				
ANR	352940	CallExpression	opj_mutex_lock ( tp -> mutex )		352910	0					
ANR	352941	Callee	opj_mutex_lock		352910	0					
ANR	352942	Identifier	opj_mutex_lock		352910	0					
ANR	352943	ArgumentList	tp -> mutex		352910	1					
ANR	352944	Argument	tp -> mutex		352910	0					
ANR	352945	PtrMemberAccess	tp -> mutex		352910	0					
ANR	352946	Identifier	tp		352910	0					
ANR	352947	Identifier	mutex		352910	1					
ANR	352948	ExpressionStatement	tp -> state = OPJWTS_STOP	929:8:23627:23650	352910	3	True				
ANR	352949	AssignmentExpression	tp -> state = OPJWTS_STOP		352910	0		=			
ANR	352950	PtrMemberAccess	tp -> state		352910	0					
ANR	352951	Identifier	tp		352910	0					
ANR	352952	Identifier	state		352910	1					
ANR	352953	Identifier	OPJWTS_STOP		352910	1					
ANR	352954	ExpressionStatement	opj_mutex_unlock ( tp -> mutex )	930:8:23660:23687	352910	4	True				
ANR	352955	CallExpression	opj_mutex_unlock ( tp -> mutex )		352910	0					
ANR	352956	Callee	opj_mutex_unlock		352910	0					
ANR	352957	Identifier	opj_mutex_unlock		352910	0					
ANR	352958	ArgumentList	tp -> mutex		352910	1					
ANR	352959	Argument	tp -> mutex		352910	0					
ANR	352960	PtrMemberAccess	tp -> mutex		352910	0					
ANR	352961	Identifier	tp		352910	0					
ANR	352962	Identifier	mutex		352910	1					
ANR	352963	ForStatement	for ( i = 0 ; i < tp -> worker_threads_count ; i ++ )		352910	5					
ANR	352964	ForInit	i = 0 ;	932:13:23703:23708	352910	0	True				
ANR	352965	AssignmentExpression	i = 0		352910	0		=			
ANR	352966	Identifier	i		352910	0					
ANR	352967	PrimaryExpression	0		352910	1					
ANR	352968	Condition	i < tp -> worker_threads_count	932:20:23710:23737	352910	1	True				
ANR	352969	RelationalExpression	i < tp -> worker_threads_count		352910	0		<			
ANR	352970	Identifier	i		352910	0					
ANR	352971	PtrMemberAccess	tp -> worker_threads_count		352910	1					
ANR	352972	Identifier	tp		352910	0					
ANR	352973	Identifier	worker_threads_count		352910	1					
ANR	352974	PostIncDecOperationExpression	i ++	932:50:23740:23742	352910	2	True				
ANR	352975	Identifier	i		352910	0					
ANR	352976	IncDec	++		352910	1					
ANR	352977	CompoundStatement		13:55:283:283	352910	3					
ANR	352978	ExpressionStatement	opj_mutex_lock ( tp -> worker_threads [ i ] . mutex )	933:12:23759:23802	352910	0	True				
ANR	352979	CallExpression	opj_mutex_lock ( tp -> worker_threads [ i ] . mutex )		352910	0					
ANR	352980	Callee	opj_mutex_lock		352910	0					
ANR	352981	Identifier	opj_mutex_lock		352910	0					
ANR	352982	ArgumentList	tp -> worker_threads [ i ] . mutex		352910	1					
ANR	352983	Argument	tp -> worker_threads [ i ] . mutex		352910	0					
ANR	352984	MemberAccess	tp -> worker_threads [ i ] . mutex		352910	0					
ANR	352985	ArrayIndexing	tp -> worker_threads [ i ]		352910	0					
ANR	352986	PtrMemberAccess	tp -> worker_threads		352910	0					
ANR	352987	Identifier	tp		352910	0					
ANR	352988	Identifier	worker_threads		352910	1					
ANR	352989	Identifier	i		352910	1					
ANR	352990	Identifier	mutex		352910	1					
ANR	352991	ExpressionStatement	opj_cond_signal ( tp -> worker_threads [ i ] . cond )	934:12:23816:23859	352910	1	True				
ANR	352992	CallExpression	opj_cond_signal ( tp -> worker_threads [ i ] . cond )		352910	0					
ANR	352993	Callee	opj_cond_signal		352910	0					
ANR	352994	Identifier	opj_cond_signal		352910	0					
ANR	352995	ArgumentList	tp -> worker_threads [ i ] . cond		352910	1					
ANR	352996	Argument	tp -> worker_threads [ i ] . cond		352910	0					
ANR	352997	MemberAccess	tp -> worker_threads [ i ] . cond		352910	0					
ANR	352998	ArrayIndexing	tp -> worker_threads [ i ]		352910	0					
ANR	352999	PtrMemberAccess	tp -> worker_threads		352910	0					
ANR	353000	Identifier	tp		352910	0					
ANR	353001	Identifier	worker_threads		352910	1					
ANR	353002	Identifier	i		352910	1					
ANR	353003	Identifier	cond		352910	1					
ANR	353004	ExpressionStatement	opj_mutex_unlock ( tp -> worker_threads [ i ] . mutex )	935:12:23873:23918	352910	2	True				
ANR	353005	CallExpression	opj_mutex_unlock ( tp -> worker_threads [ i ] . mutex )		352910	0					
ANR	353006	Callee	opj_mutex_unlock		352910	0					
ANR	353007	Identifier	opj_mutex_unlock		352910	0					
ANR	353008	ArgumentList	tp -> worker_threads [ i ] . mutex		352910	1					
ANR	353009	Argument	tp -> worker_threads [ i ] . mutex		352910	0					
ANR	353010	MemberAccess	tp -> worker_threads [ i ] . mutex		352910	0					
ANR	353011	ArrayIndexing	tp -> worker_threads [ i ]		352910	0					
ANR	353012	PtrMemberAccess	tp -> worker_threads		352910	0					
ANR	353013	Identifier	tp		352910	0					
ANR	353014	Identifier	worker_threads		352910	1					
ANR	353015	Identifier	i		352910	1					
ANR	353016	Identifier	mutex		352910	1					
ANR	353017	ExpressionStatement	opj_thread_join ( tp -> worker_threads [ i ] . thread )	936:12:23932:23977	352910	3	True				
ANR	353018	CallExpression	opj_thread_join ( tp -> worker_threads [ i ] . thread )		352910	0					
ANR	353019	Callee	opj_thread_join		352910	0					
ANR	353020	Identifier	opj_thread_join		352910	0					
ANR	353021	ArgumentList	tp -> worker_threads [ i ] . thread		352910	1					
ANR	353022	Argument	tp -> worker_threads [ i ] . thread		352910	0					
ANR	353023	MemberAccess	tp -> worker_threads [ i ] . thread		352910	0					
ANR	353024	ArrayIndexing	tp -> worker_threads [ i ]		352910	0					
ANR	353025	PtrMemberAccess	tp -> worker_threads		352910	0					
ANR	353026	Identifier	tp		352910	0					
ANR	353027	Identifier	worker_threads		352910	1					
ANR	353028	Identifier	i		352910	1					
ANR	353029	Identifier	thread		352910	1					
ANR	353030	ExpressionStatement	opj_cond_destroy ( tp -> worker_threads [ i ] . cond )	937:12:23991:24035	352910	4	True				
ANR	353031	CallExpression	opj_cond_destroy ( tp -> worker_threads [ i ] . cond )		352910	0					
ANR	353032	Callee	opj_cond_destroy		352910	0					
ANR	353033	Identifier	opj_cond_destroy		352910	0					
ANR	353034	ArgumentList	tp -> worker_threads [ i ] . cond		352910	1					
ANR	353035	Argument	tp -> worker_threads [ i ] . cond		352910	0					
ANR	353036	MemberAccess	tp -> worker_threads [ i ] . cond		352910	0					
ANR	353037	ArrayIndexing	tp -> worker_threads [ i ]		352910	0					
ANR	353038	PtrMemberAccess	tp -> worker_threads		352910	0					
ANR	353039	Identifier	tp		352910	0					
ANR	353040	Identifier	worker_threads		352910	1					
ANR	353041	Identifier	i		352910	1					
ANR	353042	Identifier	cond		352910	1					
ANR	353043	ExpressionStatement	opj_mutex_destroy ( tp -> worker_threads [ i ] . mutex )	938:12:24049:24095	352910	5	True				
ANR	353044	CallExpression	opj_mutex_destroy ( tp -> worker_threads [ i ] . mutex )		352910	0					
ANR	353045	Callee	opj_mutex_destroy		352910	0					
ANR	353046	Identifier	opj_mutex_destroy		352910	0					
ANR	353047	ArgumentList	tp -> worker_threads [ i ] . mutex		352910	1					
ANR	353048	Argument	tp -> worker_threads [ i ] . mutex		352910	0					
ANR	353049	MemberAccess	tp -> worker_threads [ i ] . mutex		352910	0					
ANR	353050	ArrayIndexing	tp -> worker_threads [ i ]		352910	0					
ANR	353051	PtrMemberAccess	tp -> worker_threads		352910	0					
ANR	353052	Identifier	tp		352910	0					
ANR	353053	Identifier	worker_threads		352910	1					
ANR	353054	Identifier	i		352910	1					
ANR	353055	Identifier	mutex		352910	1					
ANR	353056	ExpressionStatement	opj_free ( tp -> worker_threads )	941:8:24116:24144	352910	6	True				
ANR	353057	CallExpression	opj_free ( tp -> worker_threads )		352910	0					
ANR	353058	Callee	opj_free		352910	0					
ANR	353059	Identifier	opj_free		352910	0					
ANR	353060	ArgumentList	tp -> worker_threads		352910	1					
ANR	353061	Argument	tp -> worker_threads		352910	0					
ANR	353062	PtrMemberAccess	tp -> worker_threads		352910	0					
ANR	353063	Identifier	tp		352910	0					
ANR	353064	Identifier	worker_threads		352910	1					
ANR	353065	WhileStatement	while ( tp -> waiting_worker_thread_list != NULL )		352910	7					
ANR	353066	Condition	tp -> waiting_worker_thread_list != NULL	943:15:24162:24199	352910	0	True				
ANR	353067	EqualityExpression	tp -> waiting_worker_thread_list != NULL		352910	0		!=			
ANR	353068	PtrMemberAccess	tp -> waiting_worker_thread_list		352910	0					
ANR	353069	Identifier	tp		352910	0					
ANR	353070	Identifier	waiting_worker_thread_list		352910	1					
ANR	353071	Identifier	NULL		352910	1					
ANR	353072	CompoundStatement		25:12:754:823	352910	1					
ANR	353073	IdentifierDeclStatement	opj_worker_thread_list_t * next = tp -> waiting_worker_thread_list -> next ;	944:12:24216:24285	352910	0	True				
ANR	353074	IdentifierDecl	* next = tp -> waiting_worker_thread_list -> next		352910	0					
ANR	353075	IdentifierDeclType	opj_worker_thread_list_t *		352910	0					
ANR	353076	Identifier	next		352910	1					
ANR	353077	AssignmentExpression	* next = tp -> waiting_worker_thread_list -> next		352910	2		=			
ANR	353078	Identifier	next		352910	0					
ANR	353079	PtrMemberAccess	tp -> waiting_worker_thread_list -> next		352910	1					
ANR	353080	PtrMemberAccess	tp -> waiting_worker_thread_list		352910	0					
ANR	353081	Identifier	tp		352910	0					
ANR	353082	Identifier	waiting_worker_thread_list		352910	1					
ANR	353083	Identifier	next		352910	1					
ANR	353084	ExpressionStatement	opj_free ( tp -> waiting_worker_thread_list )	945:12:24299:24339	352910	1	True				
ANR	353085	CallExpression	opj_free ( tp -> waiting_worker_thread_list )		352910	0					
ANR	353086	Callee	opj_free		352910	0					
ANR	353087	Identifier	opj_free		352910	0					
ANR	353088	ArgumentList	tp -> waiting_worker_thread_list		352910	1					
ANR	353089	Argument	tp -> waiting_worker_thread_list		352910	0					
ANR	353090	PtrMemberAccess	tp -> waiting_worker_thread_list		352910	0					
ANR	353091	Identifier	tp		352910	0					
ANR	353092	Identifier	waiting_worker_thread_list		352910	1					
ANR	353093	ExpressionStatement	tp -> waiting_worker_thread_list = next	946:12:24353:24390	352910	2	True				
ANR	353094	AssignmentExpression	tp -> waiting_worker_thread_list = next		352910	0		=			
ANR	353095	PtrMemberAccess	tp -> waiting_worker_thread_list		352910	0					
ANR	353096	Identifier	tp		352910	0					
ANR	353097	Identifier	waiting_worker_thread_list		352910	1					
ANR	353098	Identifier	next		352910	1					
ANR	353099	ExpressionStatement	opj_cond_destroy ( tp -> cond )	949:8:24411:24437	352910	8	True				
ANR	353100	CallExpression	opj_cond_destroy ( tp -> cond )		352910	0					
ANR	353101	Callee	opj_cond_destroy		352910	0					
ANR	353102	Identifier	opj_cond_destroy		352910	0					
ANR	353103	ArgumentList	tp -> cond		352910	1					
ANR	353104	Argument	tp -> cond		352910	0					
ANR	353105	PtrMemberAccess	tp -> cond		352910	0					
ANR	353106	Identifier	tp		352910	0					
ANR	353107	Identifier	cond		352910	1					
ANR	353108	ExpressionStatement	opj_mutex_destroy ( tp -> mutex )	951:4:24449:24477	352910	2	True				
ANR	353109	CallExpression	opj_mutex_destroy ( tp -> mutex )		352910	0					
ANR	353110	Callee	opj_mutex_destroy		352910	0					
ANR	353111	Identifier	opj_mutex_destroy		352910	0					
ANR	353112	ArgumentList	tp -> mutex		352910	1					
ANR	353113	Argument	tp -> mutex		352910	0					
ANR	353114	PtrMemberAccess	tp -> mutex		352910	0					
ANR	353115	Identifier	tp		352910	0					
ANR	353116	Identifier	mutex		352910	1					
ANR	353117	ExpressionStatement	opj_tls_destroy ( tp -> tls )	952:4:24483:24507	352910	3	True				
ANR	353118	CallExpression	opj_tls_destroy ( tp -> tls )		352910	0					
ANR	353119	Callee	opj_tls_destroy		352910	0					
ANR	353120	Identifier	opj_tls_destroy		352910	0					
ANR	353121	ArgumentList	tp -> tls		352910	1					
ANR	353122	Argument	tp -> tls		352910	0					
ANR	353123	PtrMemberAccess	tp -> tls		352910	0					
ANR	353124	Identifier	tp		352910	0					
ANR	353125	Identifier	tls		352910	1					
ANR	353126	ExpressionStatement	opj_free ( tp )	953:4:24513:24525	352910	4	True				
ANR	353127	CallExpression	opj_free ( tp )		352910	0					
ANR	353128	Callee	opj_free		352910	0					
ANR	353129	Identifier	opj_free		352910	0					
ANR	353130	ArgumentList	tp		352910	1					
ANR	353131	Argument	tp		352910	0					
ANR	353132	Identifier	tp		352910	0					
ANR	353133	ReturnType	void		352910	1					
ANR	353134	Identifier	opj_thread_pool_destroy		352910	2					
ANR	353135	ParameterList	opj_thread_pool_t * tp		352910	3					
ANR	353136	Parameter	opj_thread_pool_t * tp	919:29:23438:23458	352910	0	True				
ANR	353137	ParameterType	opj_thread_pool_t *		352910	0					
ANR	353138	Identifier	tp		352910	1					
ANR	353139	CFGEntryNode	ENTRY		352910		True				
ANR	353140	CFGExitNode	EXIT		352910		True				
ANR	353141	Symbol	next		352910						
ANR	353142	Symbol	* tp		352910						
ANR	353143	Symbol	tp -> waiting_worker_thread_list		352910						
ANR	353144	Symbol	tp -> tls		352910						
ANR	353145	Symbol	NULL		352910						
ANR	353146	Symbol	tp -> worker_threads		352910						
ANR	353147	Symbol	tp -> waiting_worker_thread_list -> next		352910						
ANR	353148	Symbol	i		352910						
ANR	353149	Symbol	* * tp		352910						
ANR	353150	Symbol	tp -> worker_threads [ i ] . thread		352910						
ANR	353151	Symbol	tp -> state		352910						
ANR	353152	Symbol	tp -> mutex		352910						
ANR	353153	Symbol	* tp -> worker_threads		352910						
ANR	353154	Symbol	OPJWTS_STOP		352910						
ANR	353155	Symbol	tp -> worker_threads [ i ] . cond		352910						
ANR	353156	Symbol	* i		352910						
ANR	353157	Symbol	tp -> worker_threads_count		352910						
ANR	353158	Symbol	tp -> worker_threads [ i ] . mutex		352910						
ANR	353159	Symbol	* tp -> waiting_worker_thread_list		352910						
ANR	353160	Symbol	tp		352910						
ANR	353161	Symbol	tp -> cond		352910						
