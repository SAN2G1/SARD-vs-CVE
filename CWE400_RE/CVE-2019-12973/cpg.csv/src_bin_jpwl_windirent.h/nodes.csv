command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	122332	File	data/converged/CVE-2019-12973_openjpeg/src_bin_jpwl_windirent.h								
ANR	122333	ClassDef	dirent	251:8:8589:8930							
ANR	122334	DeclStmt									
ANR	122335	Decl							char	char [ NAME_MAX + 1 ]	d_name
ANR	122336	DeclStmt									
ANR	122337	Decl							WIN32_FIND_DATA	WIN32_FIND_DATA	data
ANR	122338	DeclStmt									
ANR	122339	Decl							struct ffblk	struct ffblk	data
ANR	122340	DeclStmt									
ANR	122341	Decl							struct _find_t	struct _find_t	data
ANR	122342	DeclStmt									
ANR	122343	Decl							dirent	dirent	dirent
ANR	122344	ClassDef	DIR	268:8:9070:9476							
ANR	122345	DeclStmt									
ANR	122346	Decl							char	char *	dirname
ANR	122347	DeclStmt									
ANR	122348	Decl							dirent	dirent	current
ANR	122349	DeclStmt									
ANR	122350	Decl							int	int	dirent_filled
ANR	122351	DeclStmt									
ANR	122352	Decl							HANDLE	HANDLE	search_handle
ANR	122353	DeclStmt									
ANR	122354	Decl							DIR	DIR	DIR
ANR	122355	DeclStmt									
ANR	122356	Decl							DIR	DIR * ( const char * dirname )	opendir
ANR	122357	DeclStmt									
ANR	122358	Decl							struct dirent	struct dirent * ( DIR * dirp )	readdir
ANR	122359	DeclStmt									
ANR	122360	Decl							int	int ( DIR * dirp )	closedir
ANR	122361	DeclStmt									
ANR	122362	Decl							void	void ( DIR * dirp )	rewinddir
ANR	122363	DeclStmt									
ANR	122364	Decl							int	int ( DIR * p )	_initdir
ANR	122365	DeclStmt									
ANR	122366	Decl							const char	const char * ( const struct dirent * dp )	_getdirname
ANR	122367	DeclStmt									
ANR	122368	Decl							void	void ( struct DIR * dirp )	_setdirname
ANR	122369	Function	opendir	345:0:11656:13080							
ANR	122370	FunctionDef	opendir (const char * dirname)		122369	0					
ANR	122371	CompoundStatement		346:0:11697:13080	122369	0					
ANR	122372	IdentifierDeclStatement	DIR * dirp ;	347:4:11703:11712	122369	0	True				
ANR	122373	IdentifierDecl	* dirp		122369	0					
ANR	122374	IdentifierDeclType	DIR *		122369	0					
ANR	122375	Identifier	dirp		122369	1					
ANR	122376	ExpressionStatement	assert ( dirname != NULL )	348:4:11718:11741	122369	1	True				
ANR	122377	CallExpression	assert ( dirname != NULL )		122369	0					
ANR	122378	Callee	assert		122369	0					
ANR	122379	Identifier	assert		122369	0					
ANR	122380	ArgumentList	dirname != NULL		122369	1					
ANR	122381	Argument	dirname != NULL		122369	0					
ANR	122382	EqualityExpression	dirname != NULL		122369	0		!=			
ANR	122383	Identifier	dirname		122369	0					
ANR	122384	Identifier	NULL		122369	1					
ANR	122385	ExpressionStatement	dirp = ( DIR * ) malloc ( sizeof ( struct DIR ) )	350:4:11748:11787	122369	2	True				
ANR	122386	AssignmentExpression	dirp = ( DIR * ) malloc ( sizeof ( struct DIR ) )		122369	0		=			
ANR	122387	Identifier	dirp		122369	0					
ANR	122388	CastExpression	( DIR * ) malloc ( sizeof ( struct DIR ) )		122369	1					
ANR	122389	CastTarget	DIR *		122369	0					
ANR	122390	CallExpression	malloc ( sizeof ( struct DIR ) )		122369	1					
ANR	122391	Callee	malloc		122369	0					
ANR	122392	Identifier	malloc		122369	0					
ANR	122393	ArgumentList	sizeof ( struct DIR )		122369	1					
ANR	122394	Argument	sizeof ( struct DIR )		122369	0					
ANR	122395	SizeofExpression	sizeof ( struct DIR )		122369	0					
ANR	122396	Sizeof	sizeof		122369	0					
ANR	122397	SizeofOperand	struct DIR		122369	1					
ANR	122398	IfStatement	if ( dirp != NULL )		122369	3					
ANR	122399	Condition	dirp != NULL	351:8:11797:11808	122369	0	True				
ANR	122400	EqualityExpression	dirp != NULL		122369	0		!=			
ANR	122401	Identifier	dirp		122369	0					
ANR	122402	Identifier	NULL		122369	1					
ANR	122403	CompoundStatement		26:2:969:1020	122369	1					
ANR	122404	IdentifierDeclStatement	char * p ;	352:8:11821:11828	122369	0	True				
ANR	122405	IdentifierDecl	* p		122369	0					
ANR	122406	IdentifierDeclType	char *		122369	0					
ANR	122407	Identifier	p		122369	1					
ANR	122408	ExpressionStatement	"dirp -> dirname = ( char * ) malloc ( strlen ( dirname ) + 1 + strlen ( ""\\\\*.*"" ) )"	355:8:11886:11955	122369	1	True				
ANR	122409	AssignmentExpression	"dirp -> dirname = ( char * ) malloc ( strlen ( dirname ) + 1 + strlen ( ""\\\\*.*"" ) )"		122369	0		=			
ANR	122410	PtrMemberAccess	dirp -> dirname		122369	0					
ANR	122411	Identifier	dirp		122369	0					
ANR	122412	Identifier	dirname		122369	1					
ANR	122413	CastExpression	"( char * ) malloc ( strlen ( dirname ) + 1 + strlen ( ""\\\\*.*"" ) )"		122369	1					
ANR	122414	CastTarget	char *		122369	0					
ANR	122415	CallExpression	"malloc ( strlen ( dirname ) + 1 + strlen ( ""\\\\*.*"" ) )"		122369	1					
ANR	122416	Callee	malloc		122369	0					
ANR	122417	Identifier	malloc		122369	0					
ANR	122418	ArgumentList	"strlen ( dirname ) + 1 + strlen ( ""\\\\*.*"" )"		122369	1					
ANR	122419	Argument	"strlen ( dirname ) + 1 + strlen ( ""\\\\*.*"" )"		122369	0					
ANR	122420	AdditiveExpression	"strlen ( dirname ) + 1 + strlen ( ""\\\\*.*"" )"		122369	0		+			
ANR	122421	CallExpression	strlen ( dirname )		122369	0					
ANR	122422	Callee	strlen		122369	0					
ANR	122423	Identifier	strlen		122369	0					
ANR	122424	ArgumentList	dirname		122369	1					
ANR	122425	Argument	dirname		122369	0					
ANR	122426	Identifier	dirname		122369	0					
ANR	122427	AdditiveExpression	"1 + strlen ( ""\\\\*.*"" )"		122369	1		+			
ANR	122428	PrimaryExpression	1		122369	0					
ANR	122429	CallExpression	"strlen ( ""\\\\*.*"" )"		122369	1					
ANR	122430	Callee	strlen		122369	0					
ANR	122431	Identifier	strlen		122369	0					
ANR	122432	ArgumentList	"""\\\\*.*"""		122369	1					
ANR	122433	Argument	"""\\\\*.*"""		122369	0					
ANR	122434	PrimaryExpression	"""\\\\*.*"""		122369	0					
ANR	122435	IfStatement	if ( dirp -> dirname == NULL )		122369	2					
ANR	122436	Condition	dirp -> dirname == NULL	356:12:11969:11989	122369	0	True				
ANR	122437	EqualityExpression	dirp -> dirname == NULL		122369	0		==			
ANR	122438	PtrMemberAccess	dirp -> dirname		122369	0					
ANR	122439	Identifier	dirp		122369	0					
ANR	122440	Identifier	dirname		122369	1					
ANR	122441	Identifier	NULL		122369	1					
ANR	122442	CompoundStatement		11:35:294:294	122369	1					
ANR	122443	ExpressionStatement	free ( dirp )	358:12:12083:12093	122369	0	True				
ANR	122444	CallExpression	free ( dirp )		122369	0					
ANR	122445	Callee	free		122369	0					
ANR	122446	Identifier	free		122369	0					
ANR	122447	ArgumentList	dirp		122369	1					
ANR	122448	Argument	dirp		122369	0					
ANR	122449	Identifier	dirp		122369	0					
ANR	122450	ReturnStatement	return NULL ;	359:12:12107:12118	122369	1	True				
ANR	122451	Identifier	NULL		122369	0					
ANR	122452	ExpressionStatement	"strcpy ( dirp -> dirname , dirname )"	365:8:12439:12469	122369	3	True				
ANR	122453	CallExpression	"strcpy ( dirp -> dirname , dirname )"		122369	0					
ANR	122454	Callee	strcpy		122369	0					
ANR	122455	Identifier	strcpy		122369	0					
ANR	122456	ArgumentList	dirp -> dirname		122369	1					
ANR	122457	Argument	dirp -> dirname		122369	0					
ANR	122458	PtrMemberAccess	dirp -> dirname		122369	0					
ANR	122459	Identifier	dirp		122369	0					
ANR	122460	Identifier	dirname		122369	1					
ANR	122461	Argument	dirname		122369	1					
ANR	122462	Identifier	dirname		122369	0					
ANR	122463	ExpressionStatement	"p = strchr ( dirp -> dirname , '\\0' )"	366:8:12479:12510	122369	4	True				
ANR	122464	AssignmentExpression	"p = strchr ( dirp -> dirname , '\\0' )"		122369	0		=			
ANR	122465	Identifier	p		122369	0					
ANR	122466	CallExpression	"strchr ( dirp -> dirname , '\\0' )"		122369	1					
ANR	122467	Callee	strchr		122369	0					
ANR	122468	Identifier	strchr		122369	0					
ANR	122469	ArgumentList	dirp -> dirname		122369	1					
ANR	122470	Argument	dirp -> dirname		122369	0					
ANR	122471	PtrMemberAccess	dirp -> dirname		122369	0					
ANR	122472	Identifier	dirp		122369	0					
ANR	122473	Identifier	dirname		122369	1					
ANR	122474	Argument	'\\0'		122369	1					
ANR	122475	PrimaryExpression	'\\0'		122369	0					
ANR	122476	IfStatement	if ( dirp -> dirname < p && * ( p - 1 ) != '\\\\' && * ( p - 1 ) != '/' && * ( p - 1 ) != ':' )		122369	5					
ANR	122477	Condition	dirp -> dirname < p && * ( p - 1 ) != '\\\\' && * ( p - 1 ) != '/' && * ( p - 1 ) != ':'	367:12:12524:12619	122369	0	True				
ANR	122478	AndExpression	dirp -> dirname < p && * ( p - 1 ) != '\\\\' && * ( p - 1 ) != '/' && * ( p - 1 ) != ':'		122369	0		&&			
ANR	122479	RelationalExpression	dirp -> dirname < p		122369	0		<			
ANR	122480	PtrMemberAccess	dirp -> dirname		122369	0					
ANR	122481	Identifier	dirp		122369	0					
ANR	122482	Identifier	dirname		122369	1					
ANR	122483	Identifier	p		122369	1					
ANR	122484	AndExpression	* ( p - 1 ) != '\\\\' && * ( p - 1 ) != '/' && * ( p - 1 ) != ':'		122369	1		&&			
ANR	122485	EqualityExpression	* ( p - 1 ) != '\\\\'		122369	0		!=			
ANR	122486	UnaryOperationExpression	* ( p - 1 )		122369	0					
ANR	122487	UnaryOperator	*		122369	0					
ANR	122488	AdditiveExpression	p - 1		122369	1		-			
ANR	122489	Identifier	p		122369	0					
ANR	122490	PrimaryExpression	1		122369	1					
ANR	122491	PrimaryExpression	'\\\\'		122369	1					
ANR	122492	AndExpression	* ( p - 1 ) != '/' && * ( p - 1 ) != ':'		122369	1		&&			
ANR	122493	EqualityExpression	* ( p - 1 ) != '/'		122369	0		!=			
ANR	122494	UnaryOperationExpression	* ( p - 1 )		122369	0					
ANR	122495	UnaryOperator	*		122369	0					
ANR	122496	AdditiveExpression	p - 1		122369	1		-			
ANR	122497	Identifier	p		122369	0					
ANR	122498	PrimaryExpression	1		122369	1					
ANR	122499	PrimaryExpression	'/'		122369	1					
ANR	122500	EqualityExpression	* ( p - 1 ) != ':'		122369	1		!=			
ANR	122501	UnaryOperationExpression	* ( p - 1 )		122369	0					
ANR	122502	UnaryOperator	*		122369	0					
ANR	122503	AdditiveExpression	p - 1		122369	1		-			
ANR	122504	Identifier	p		122369	0					
ANR	122505	PrimaryExpression	1		122369	1					
ANR	122506	PrimaryExpression	':'		122369	1					
ANR	122507	CompoundStatement		23:76:924:924	122369	1					
ANR	122508	ExpressionStatement	"strcpy ( p ++ , ""\\\\"" )"	369:12:12636:12653	122369	0	True				
ANR	122509	CallExpression	"strcpy ( p ++ , ""\\\\"" )"		122369	0					
ANR	122510	Callee	strcpy		122369	0					
ANR	122511	Identifier	strcpy		122369	0					
ANR	122512	ArgumentList	p ++		122369	1					
ANR	122513	Argument	p ++		122369	0					
ANR	122514	PostIncDecOperationExpression	p ++		122369	0					
ANR	122515	Identifier	p		122369	0					
ANR	122516	IncDec	++		122369	1					
ANR	122517	Argument	"""\\\\"""		122369	1					
ANR	122518	PrimaryExpression	"""\\\\"""		122369	0					
ANR	122519	ElseStatement	else		122369	0					
ANR	122520	ExpressionStatement	"strcpy ( p , ""*.*"" )"	374:8:12787:12803	122369	0	True				
ANR	122521	CallExpression	"strcpy ( p , ""*.*"" )"		122369	0					
ANR	122522	Callee	strcpy		122369	0					
ANR	122523	Identifier	strcpy		122369	0					
ANR	122524	ArgumentList	p		122369	1					
ANR	122525	Argument	p		122369	0					
ANR	122526	Identifier	p		122369	0					
ANR	122527	Argument	"""*.*"""		122369	1					
ANR	122528	PrimaryExpression	"""*.*"""		122369	0					
ANR	122529	IdentifierDeclStatement	"ifdef DIRENT_WIN32_INTERFACE strcpy ( p , ""*"" ) ;"	371:2:12667:12718	122369	6	True				
ANR	122530	IdentifierDecl	"strcpy ( p , ""*"" )"		122369	0					
ANR	122531	IdentifierDeclType	ifdef DIRENT_WIN32_INTERFACE		122369	0					
ANR	122532	Identifier	strcpy		122369	1					
ANR	122533	Expression	"p , ""*"""		122369	2					
ANR	122534	Identifier	p		122369	0					
ANR	122535	PrimaryExpression	"""*"""		122369	1					
ANR	122536	Statement	endif	375:2:12857:12861	122369	7	True				
ANR	122537	IfStatement	if ( _initdir ( dirp ) == 0 )		122369	8					
ANR	122538	Condition	_initdir ( dirp ) == 0	378:12:12902:12920	122369	0	True				
ANR	122539	EqualityExpression	_initdir ( dirp ) == 0		122369	0		==			
ANR	122540	CallExpression	_initdir ( dirp )		122369	0					
ANR	122541	Callee	_initdir		122369	0					
ANR	122542	Identifier	_initdir		122369	0					
ANR	122543	ArgumentList	dirp		122369	1					
ANR	122544	Argument	dirp		122369	0					
ANR	122545	Identifier	dirp		122369	0					
ANR	122546	PrimaryExpression	0		122369	1					
ANR	122547	CompoundStatement		33:33:1225:1225	122369	1					
ANR	122548	ExpressionStatement	free ( dirp -> dirname )	380:12:12977:12996	122369	0	True				
ANR	122549	CallExpression	free ( dirp -> dirname )		122369	0					
ANR	122550	Callee	free		122369	0					
ANR	122551	Identifier	free		122369	0					
ANR	122552	ArgumentList	dirp -> dirname		122369	1					
ANR	122553	Argument	dirp -> dirname		122369	0					
ANR	122554	PtrMemberAccess	dirp -> dirname		122369	0					
ANR	122555	Identifier	dirp		122369	0					
ANR	122556	Identifier	dirname		122369	1					
ANR	122557	ExpressionStatement	free ( dirp )	381:12:13010:13020	122369	1	True				
ANR	122558	CallExpression	free ( dirp )		122369	0					
ANR	122559	Callee	free		122369	0					
ANR	122560	Identifier	free		122369	0					
ANR	122561	ArgumentList	dirp		122369	1					
ANR	122562	Argument	dirp		122369	0					
ANR	122563	Identifier	dirp		122369	0					
ANR	122564	ReturnStatement	return NULL ;	382:12:13034:13045	122369	2	True				
ANR	122565	Identifier	NULL		122369	0					
ANR	122566	ReturnStatement	return dirp ;	385:4:13067:13078	122369	4	True				
ANR	122567	Identifier	dirp		122369	0					
ANR	122568	ReturnType	static DIR *		122369	1					
ANR	122569	Identifier	opendir		122369	2					
ANR	122570	ParameterList	const char * dirname		122369	3					
ANR	122571	Parameter	const char * dirname	345:20:11676:11694	122369	0	True				
ANR	122572	ParameterType	const char *		122369	0					
ANR	122573	Identifier	dirname		122369	1					
ANR	122574	CFGEntryNode	ENTRY		122369		True				
ANR	122575	CFGExitNode	EXIT		122369		True				
ANR	122576	Symbol	malloc		122369						
ANR	122577	Symbol	* ( p - 1 )		122369						
ANR	122578	Symbol	NULL		122369						
ANR	122579	Symbol	* dirp		122369						
ANR	122580	Symbol	strchr		122369						
ANR	122581	Symbol	dirp -> dirname		122369						
ANR	122582	Symbol	dirp		122369						
ANR	122583	Symbol	dirname		122369						
ANR	122584	Symbol	strcpy		122369						
ANR	122585	Symbol	_initdir		122369						
ANR	122586	Symbol	p		122369						
ANR	122587	Symbol	strlen		122369						
ANR	122588	Symbol	* p		122369						
ANR	122589	Function	readdir	435:0:15476:17332							
ANR	122590	FunctionDef	readdir (DIR * dirp)		122589	0					
ANR	122591	CompoundStatement		437:0:15518:17332	122589	0					
ANR	122592	ExpressionStatement	assert ( dirp != NULL )	438:4:15524:15544	122589	0	True				
ANR	122593	CallExpression	assert ( dirp != NULL )		122589	0					
ANR	122594	Callee	assert		122589	0					
ANR	122595	Identifier	assert		122589	0					
ANR	122596	ArgumentList	dirp != NULL		122589	1					
ANR	122597	Argument	dirp != NULL		122589	0					
ANR	122598	EqualityExpression	dirp != NULL		122589	0		!=			
ANR	122599	Identifier	dirp		122589	0					
ANR	122600	Identifier	NULL		122589	1					
ANR	122601	IfStatement	if ( dirp == NULL )		122589	1					
ANR	122602	Condition	dirp == NULL	439:8:15554:15565	122589	0	True				
ANR	122603	EqualityExpression	dirp == NULL		122589	0		==			
ANR	122604	Identifier	dirp		122589	0					
ANR	122605	Identifier	NULL		122589	1					
ANR	122606	CompoundStatement		3:22:49:49	122589	1					
ANR	122607	ExpressionStatement	errno = EBADF	440:8:15578:15591	122589	0	True				
ANR	122608	AssignmentExpression	errno = EBADF		122589	0		=			
ANR	122609	Identifier	errno		122589	0					
ANR	122610	Identifier	EBADF		122589	1					
ANR	122611	ReturnStatement	return NULL ;	441:8:15601:15612	122589	1	True				
ANR	122612	Identifier	NULL		122589	0					
ANR	122613	IfStatement	if ( dirp -> search_handle == INVALID_HANDLE_VALUE )		122589	2					
ANR	122614	Condition	dirp -> search_handle == INVALID_HANDLE_VALUE	445:8:15665:15707	122589	0	True				
ANR	122615	EqualityExpression	dirp -> search_handle == INVALID_HANDLE_VALUE		122589	0		==			
ANR	122616	PtrMemberAccess	dirp -> search_handle		122589	0					
ANR	122617	Identifier	dirp		122589	0					
ANR	122618	Identifier	search_handle		122589	1					
ANR	122619	Identifier	INVALID_HANDLE_VALUE		122589	1					
ANR	122620	CompoundStatement		9:53:191:191	122589	1					
ANR	122621	ExpressionStatement	errno = EBADF	447:8:15803:15816	122589	0	True				
ANR	122622	AssignmentExpression	errno = EBADF		122589	0		=			
ANR	122623	Identifier	errno		122589	0					
ANR	122624	Identifier	EBADF		122589	1					
ANR	122625	ReturnStatement	return NULL ;	448:8:15826:15837	122589	1	True				
ANR	122626	Identifier	NULL		122589	0					
ANR	122627	IfStatement	if ( dirp -> dirent_filled != 0 )		122589	3					
ANR	122628	Condition	dirp -> dirent_filled != 0	452:8:15861:15884	122589	0	True				
ANR	122629	EqualityExpression	dirp -> dirent_filled != 0		122589	0		!=			
ANR	122630	PtrMemberAccess	dirp -> dirent_filled		122589	0					
ANR	122631	Identifier	dirp		122589	0					
ANR	122632	Identifier	dirent_filled		122589	1					
ANR	122633	PrimaryExpression	0		122589	1					
ANR	122634	CompoundStatement		16:34:368:368	122589	1					
ANR	122635	ExpressionStatement	dirp -> dirent_filled = 0	463:8:16537:16560	122589	0	True				
ANR	122636	AssignmentExpression	dirp -> dirent_filled = 0		122589	0		=			
ANR	122637	PtrMemberAccess	dirp -> dirent_filled		122589	0					
ANR	122638	Identifier	dirp		122589	0					
ANR	122639	Identifier	dirent_filled		122589	1					
ANR	122640	PrimaryExpression	0		122589	1					
ANR	122641	ElseStatement	else		122589	0					
ANR	122642	CompoundStatement		45:2:1704:1736	122589	0					
ANR	122643	IfStatement	"if ( FindNextFile ( dirp -> search_handle , & dirp -> current . data ) == FALSE )"		122589	0					
ANR	122644	Condition	"FindNextFile ( dirp -> search_handle , & dirp -> current . data ) == FALSE"	467:12:16667:16729	122589	0	True				
ANR	122645	EqualityExpression	"FindNextFile ( dirp -> search_handle , & dirp -> current . data ) == FALSE"		122589	0		==			
ANR	122646	CallExpression	"FindNextFile ( dirp -> search_handle , & dirp -> current . data )"		122589	0					
ANR	122647	Callee	FindNextFile		122589	0					
ANR	122648	Identifier	FindNextFile		122589	0					
ANR	122649	ArgumentList	dirp -> search_handle		122589	1					
ANR	122650	Argument	dirp -> search_handle		122589	0					
ANR	122651	PtrMemberAccess	dirp -> search_handle		122589	0					
ANR	122652	Identifier	dirp		122589	0					
ANR	122653	Identifier	search_handle		122589	1					
ANR	122654	Argument	& dirp -> current . data		122589	1					
ANR	122655	UnaryOperationExpression	& dirp -> current . data		122589	0					
ANR	122656	UnaryOperator	&		122589	0					
ANR	122657	MemberAccess	dirp -> current . data		122589	1					
ANR	122658	PtrMemberAccess	dirp -> current		122589	0					
ANR	122659	Identifier	dirp		122589	0					
ANR	122660	Identifier	current		122589	1					
ANR	122661	Identifier	data		122589	1					
ANR	122662	Identifier	FALSE		122589	1					
ANR	122663	CompoundStatement		31:77:1213:1213	122589	1					
ANR	122664	ExpressionStatement	FindClose ( dirp -> search_handle )	469:12:16814:16844	122589	0	True				
ANR	122665	CallExpression	FindClose ( dirp -> search_handle )		122589	0					
ANR	122666	Callee	FindClose		122589	0					
ANR	122667	Identifier	FindClose		122589	0					
ANR	122668	ArgumentList	dirp -> search_handle		122589	1					
ANR	122669	Argument	dirp -> search_handle		122589	0					
ANR	122670	PtrMemberAccess	dirp -> search_handle		122589	0					
ANR	122671	Identifier	dirp		122589	0					
ANR	122672	Identifier	search_handle		122589	1					
ANR	122673	ExpressionStatement	dirp -> search_handle = INVALID_HANDLE_VALUE	470:12:16858:16900	122589	1	True				
ANR	122674	AssignmentExpression	dirp -> search_handle = INVALID_HANDLE_VALUE		122589	0		=			
ANR	122675	PtrMemberAccess	dirp -> search_handle		122589	0					
ANR	122676	Identifier	dirp		122589	0					
ANR	122677	Identifier	search_handle		122589	1					
ANR	122678	Identifier	INVALID_HANDLE_VALUE		122589	1					
ANR	122679	ExpressionStatement	errno = ENOENT	471:12:16914:16928	122589	2	True				
ANR	122680	AssignmentExpression	errno = ENOENT		122589	0		=			
ANR	122681	Identifier	errno		122589	0					
ANR	122682	Identifier	ENOENT		122589	1					
ANR	122683	ReturnStatement	return NULL ;	472:12:16942:16953	122589	3	True				
ANR	122684	Identifier	NULL		122589	0					
ANR	122685	Statement	elif	475:2:16968:16971	122589	1	True				
ANR	122686	Statement	defined	475:7:16973:16979	122589	2	True				
ANR	122687	Statement	(	475:14:16980:16980	122589	3	True				
ANR	122688	Statement	DIRENT_MSDOS_INTERFACE	475:15:16981:17002	122589	4	True				
ANR	122689	Statement	)	475:37:17003:17003	122589	5	True				
ANR	122690	IfStatement	if ( _dos_findnext ( & dirp -> current . data ) != 0 )		122589	6					
ANR	122691	Condition	_dos_findnext ( & dirp -> current . data ) != 0	476:12:17017:17055	122589	0	True				
ANR	122692	EqualityExpression	_dos_findnext ( & dirp -> current . data ) != 0		122589	0		!=			
ANR	122693	CallExpression	_dos_findnext ( & dirp -> current . data )		122589	0					
ANR	122694	Callee	_dos_findnext		122589	0					
ANR	122695	Identifier	_dos_findnext		122589	0					
ANR	122696	ArgumentList	& dirp -> current . data		122589	1					
ANR	122697	Argument	& dirp -> current . data		122589	0					
ANR	122698	UnaryOperationExpression	& dirp -> current . data		122589	0					
ANR	122699	UnaryOperator	&		122589	0					
ANR	122700	MemberAccess	dirp -> current . data		122589	1					
ANR	122701	PtrMemberAccess	dirp -> current		122589	0					
ANR	122702	Identifier	dirp		122589	0					
ANR	122703	Identifier	current		122589	1					
ANR	122704	Identifier	data		122589	1					
ANR	122705	PrimaryExpression	0		122589	1					
ANR	122706	CompoundStatement		40:53:1539:1539	122589	1					
ANR	122707	ReturnStatement	return NULL ;	479:12:17198:17209	122589	0	True				
ANR	122708	Identifier	NULL		122589	0					
ANR	122709	IdentifierDeclStatement	endif _setdirname ( dirp ) ;	481:2:17223:17255	122589	7	True				
ANR	122710	IdentifierDecl	_setdirname ( dirp )		122589	0					
ANR	122711	IdentifierDeclType	endif		122589	0					
ANR	122712	Identifier	_setdirname		122589	1					
ANR	122713	Identifier	dirp		122589	2					
ANR	122714	ExpressionStatement	assert ( dirp -> dirent_filled == 0 )	484:8:17265:17297	122589	8	True				
ANR	122715	CallExpression	assert ( dirp -> dirent_filled == 0 )		122589	0					
ANR	122716	Callee	assert		122589	0					
ANR	122717	Identifier	assert		122589	0					
ANR	122718	ArgumentList	dirp -> dirent_filled == 0		122589	1					
ANR	122719	Argument	dirp -> dirent_filled == 0		122589	0					
ANR	122720	EqualityExpression	dirp -> dirent_filled == 0		122589	0		==			
ANR	122721	PtrMemberAccess	dirp -> dirent_filled		122589	0					
ANR	122722	Identifier	dirp		122589	0					
ANR	122723	Identifier	dirent_filled		122589	1					
ANR	122724	PrimaryExpression	0		122589	1					
ANR	122725	ReturnStatement	return & dirp -> current ;	486:4:17309:17330	122589	4	True				
ANR	122726	UnaryOperationExpression	& dirp -> current		122589	0					
ANR	122727	UnaryOperator	&		122589	0					
ANR	122728	PtrMemberAccess	dirp -> current		122589	1					
ANR	122729	Identifier	dirp		122589	0					
ANR	122730	Identifier	current		122589	1					
ANR	122731	ReturnType	static struct dirent *		122589	1					
ANR	122732	Identifier	readdir		122589	2					
ANR	122733	ParameterList	DIR * dirp		122589	3					
ANR	122734	Parameter	DIR * dirp	436:8:15507:15515	122589	0	True				
ANR	122735	ParameterType	DIR *		122589	0					
ANR	122736	Identifier	dirp		122589	1					
ANR	122737	CFGEntryNode	ENTRY		122589		True				
ANR	122738	CFGExitNode	EXIT		122589		True				
ANR	122739	Symbol	errno		122589						
ANR	122740	Symbol	_dos_findnext		122589						
ANR	122741	Symbol	NULL		122589						
ANR	122742	Symbol	* dirp		122589						
ANR	122743	Symbol	dirp -> dirent_filled		122589						
ANR	122744	Symbol	dirp -> current		122589						
ANR	122745	Symbol	ENOENT		122589						
ANR	122746	Symbol	dirp		122589						
ANR	122747	Symbol	dirp -> search_handle		122589						
ANR	122748	Symbol	EBADF		122589						
ANR	122749	Symbol	INVALID_HANDLE_VALUE		122589						
ANR	122750	Symbol	FindNextFile		122589						
ANR	122751	Symbol	_setdirname		122589						
ANR	122752	Symbol	& dirp -> current . data		122589						
ANR	122753	Symbol	& dirp -> current		122589						
ANR	122754	Symbol	FALSE		122589						
ANR	122755	Function	closedir	509:0:18110:18933							
ANR	122756	FunctionDef	closedir (DIR * dirp)		122755	0					
ANR	122757	CompoundStatement		511:0:18141:18933	122755	0					
ANR	122758	IdentifierDeclStatement	int retcode = 0 ;	512:4:18147:18162	122755	0	True				
ANR	122759	IdentifierDecl	retcode = 0		122755	0					
ANR	122760	IdentifierDeclType	int		122755	0					
ANR	122761	Identifier	retcode		122755	1					
ANR	122762	AssignmentExpression	retcode = 0		122755	2		=			
ANR	122763	Identifier	retcode		122755	0					
ANR	122764	PrimaryExpression	0		122755	1					
ANR	122765	ExpressionStatement	assert ( dirp != NULL )	515:4:18225:18245	122755	1	True				
ANR	122766	CallExpression	assert ( dirp != NULL )		122755	0					
ANR	122767	Callee	assert		122755	0					
ANR	122768	Identifier	assert		122755	0					
ANR	122769	ArgumentList	dirp != NULL		122755	1					
ANR	122770	Argument	dirp != NULL		122755	0					
ANR	122771	EqualityExpression	dirp != NULL		122755	0		!=			
ANR	122772	Identifier	dirp		122755	0					
ANR	122773	Identifier	NULL		122755	1					
ANR	122774	IfStatement	if ( dirp == NULL )		122755	2					
ANR	122775	Condition	dirp == NULL	516:8:18255:18266	122755	0	True				
ANR	122776	EqualityExpression	dirp == NULL		122755	0		==			
ANR	122777	Identifier	dirp		122755	0					
ANR	122778	Identifier	NULL		122755	1					
ANR	122779	CompoundStatement		6:22:127:127	122755	1					
ANR	122780	ExpressionStatement	errno = EBADF	517:8:18279:18292	122755	0	True				
ANR	122781	AssignmentExpression	errno = EBADF		122755	0		=			
ANR	122782	Identifier	errno		122755	0					
ANR	122783	Identifier	EBADF		122755	1					
ANR	122784	ReturnStatement	return - 1 ;	518:8:18302:18311	122755	1	True				
ANR	122785	UnaryOperationExpression	- 1		122755	0					
ANR	122786	UnaryOperator	-		122755	0					
ANR	122787	PrimaryExpression	1		122755	1					
ANR	122788	IfStatement	if ( dirp -> dirname != NULL )		122755	3					
ANR	122789	Condition	dirp -> dirname != NULL	522:8:18377:18397	122755	0	True				
ANR	122790	EqualityExpression	dirp -> dirname != NULL		122755	0		!=			
ANR	122791	PtrMemberAccess	dirp -> dirname		122755	0					
ANR	122792	Identifier	dirp		122755	0					
ANR	122793	Identifier	dirname		122755	1					
ANR	122794	Identifier	NULL		122755	1					
ANR	122795	CompoundStatement		12:31:258:258	122755	1					
ANR	122796	ExpressionStatement	free ( dirp -> dirname )	523:8:18410:18429	122755	0	True				
ANR	122797	CallExpression	free ( dirp -> dirname )		122755	0					
ANR	122798	Callee	free		122755	0					
ANR	122799	Identifier	free		122755	0					
ANR	122800	ArgumentList	dirp -> dirname		122755	1					
ANR	122801	Argument	dirp -> dirname		122755	0					
ANR	122802	PtrMemberAccess	dirp -> dirname		122755	0					
ANR	122803	Identifier	dirp		122755	0					
ANR	122804	Identifier	dirname		122755	1					
ANR	122805	IfStatement	if ( dirp -> search_handle != INVALID_HANDLE_VALUE )		122755	4					
ANR	122806	Condition	dirp -> search_handle != INVALID_HANDLE_VALUE	527:8:18482:18524	122755	0	True				
ANR	122807	EqualityExpression	dirp -> search_handle != INVALID_HANDLE_VALUE		122755	0		!=			
ANR	122808	PtrMemberAccess	dirp -> search_handle		122755	0					
ANR	122809	Identifier	dirp		122755	0					
ANR	122810	Identifier	search_handle		122755	1					
ANR	122811	Identifier	INVALID_HANDLE_VALUE		122755	1					
ANR	122812	CompoundStatement		17:53:385:385	122755	1					
ANR	122813	IfStatement	if ( FindClose ( dirp -> search_handle ) == FALSE )		122755	0					
ANR	122814	Condition	FindClose ( dirp -> search_handle ) == FALSE	528:12:18541:18579	122755	0	True				
ANR	122815	EqualityExpression	FindClose ( dirp -> search_handle ) == FALSE		122755	0		==			
ANR	122816	CallExpression	FindClose ( dirp -> search_handle )		122755	0					
ANR	122817	Callee	FindClose		122755	0					
ANR	122818	Identifier	FindClose		122755	0					
ANR	122819	ArgumentList	dirp -> search_handle		122755	1					
ANR	122820	Argument	dirp -> search_handle		122755	0					
ANR	122821	PtrMemberAccess	dirp -> search_handle		122755	0					
ANR	122822	Identifier	dirp		122755	0					
ANR	122823	Identifier	search_handle		122755	1					
ANR	122824	Identifier	FALSE		122755	1					
ANR	122825	CompoundStatement		18:53:440:440	122755	1					
ANR	122826	ExpressionStatement	retcode = - 1	530:12:18628:18640	122755	0	True				
ANR	122827	AssignmentExpression	retcode = - 1		122755	0		=			
ANR	122828	Identifier	retcode		122755	0					
ANR	122829	UnaryOperationExpression	- 1		122755	1					
ANR	122830	UnaryOperator	-		122755	0					
ANR	122831	PrimaryExpression	1		122755	1					
ANR	122832	ExpressionStatement	errno = EBADF	531:12:18654:18667	122755	1	True				
ANR	122833	AssignmentExpression	errno = EBADF		122755	0		=			
ANR	122834	Identifier	errno		122755	0					
ANR	122835	Identifier	EBADF		122755	1					
ANR	122836	ExpressionStatement	"memset ( dirp , 0 , sizeof ( * dirp ) )"	537:4:18771:18801	122755	5	True				
ANR	122837	CallExpression	"memset ( dirp , 0 , sizeof ( * dirp ) )"		122755	0					
ANR	122838	Callee	memset		122755	0					
ANR	122839	Identifier	memset		122755	0					
ANR	122840	ArgumentList	dirp		122755	1					
ANR	122841	Argument	dirp		122755	0					
ANR	122842	Identifier	dirp		122755	0					
ANR	122843	Argument	0		122755	1					
ANR	122844	PrimaryExpression	0		122755	0					
ANR	122845	Argument	sizeof ( * dirp )		122755	2					
ANR	122846	SizeofExpression	sizeof ( * dirp )		122755	0					
ANR	122847	Sizeof	sizeof		122755	0					
ANR	122848	UnaryOperationExpression	* dirp		122755	1					
ANR	122849	UnaryOperator	*		122755	0					
ANR	122850	Identifier	dirp		122755	1					
ANR	122851	Statement	if	538:2:18805:18806	122755	6	True				
ANR	122852	Statement	defined	538:5:18808:18814	122755	7	True				
ANR	122853	ExpressionStatement	( DIRENT_WIN32_INTERFACE ) dirp -> search_handle = INVALID_HANDLE_VALUE	538:12:18815:18886	122755	8	True				
ANR	122854	AssignmentExpression	( DIRENT_WIN32_INTERFACE ) dirp -> search_handle = INVALID_HANDLE_VALUE		122755	0		=			
ANR	122855	CastExpression	( DIRENT_WIN32_INTERFACE ) dirp -> search_handle		122755	0					
ANR	122856	CastTarget	DIRENT_WIN32_INTERFACE		122755	0					
ANR	122857	PtrMemberAccess	dirp -> search_handle		122755	1					
ANR	122858	Identifier	dirp		122755	0					
ANR	122859	Identifier	search_handle		122755	1					
ANR	122860	Identifier	INVALID_HANDLE_VALUE		122755	1					
ANR	122861	IdentifierDeclStatement	endif free ( dirp ) ;	540:2:18890:18911	122755	9	True				
ANR	122862	IdentifierDecl	free ( dirp )		122755	0					
ANR	122863	IdentifierDeclType	endif		122755	0					
ANR	122864	Identifier	free		122755	1					
ANR	122865	Identifier	dirp		122755	2					
ANR	122866	ReturnStatement	return retcode ;	543:4:18917:18931	122755	10	True				
ANR	122867	Identifier	retcode		122755	0					
ANR	122868	ReturnType	static int		122755	1					
ANR	122869	Identifier	closedir		122755	2					
ANR	122870	ParameterList	DIR * dirp		122755	3					
ANR	122871	Parameter	DIR * dirp	510:9:18130:18138	122755	0	True				
ANR	122872	ParameterType	DIR *		122755	0					
ANR	122873	Identifier	dirp		122755	1					
ANR	122874	CFGEntryNode	ENTRY		122755		True				
ANR	122875	CFGExitNode	EXIT		122755		True				
ANR	122876	Symbol	errno		122755						
ANR	122877	Symbol	NULL		122755						
ANR	122878	Symbol	* dirp		122755						
ANR	122879	Symbol	FindClose		122755						
ANR	122880	Symbol	dirp -> dirname		122755						
ANR	122881	Symbol	FALSE		122755						
ANR	122882	Symbol	dirp		122755						
ANR	122883	Symbol	dirp -> search_handle		122755						
ANR	122884	Symbol	free		122755						
ANR	122885	Symbol	EBADF		122755						
ANR	122886	Symbol	INVALID_HANDLE_VALUE		122755						
ANR	122887	Symbol	retcode		122755						
ANR	122888	Function	rewinddir	568:0:19935:20648							
ANR	122889	FunctionDef	rewinddir (DIR * dirp)		122888	0					
ANR	122890	CompoundStatement		570:0:19968:20648	122888	0					
ANR	122891	ExpressionStatement	assert ( dirp != NULL )	572:4:20013:20033	122888	0	True				
ANR	122892	CallExpression	assert ( dirp != NULL )		122888	0					
ANR	122893	Callee	assert		122888	0					
ANR	122894	Identifier	assert		122888	0					
ANR	122895	ArgumentList	dirp != NULL		122888	1					
ANR	122896	Argument	dirp != NULL		122888	0					
ANR	122897	EqualityExpression	dirp != NULL		122888	0		!=			
ANR	122898	Identifier	dirp		122888	0					
ANR	122899	Identifier	NULL		122888	1					
ANR	122900	IfStatement	if ( dirp == NULL )		122888	1					
ANR	122901	Condition	dirp == NULL	573:8:20043:20054	122888	0	True				
ANR	122902	EqualityExpression	dirp == NULL		122888	0		==			
ANR	122903	Identifier	dirp		122888	0					
ANR	122904	Identifier	NULL		122888	1					
ANR	122905	CompoundStatement		4:22:88:88	122888	1					
ANR	122906	ExpressionStatement	errno = EBADF	574:8:20067:20080	122888	0	True				
ANR	122907	AssignmentExpression	errno = EBADF		122888	0		=			
ANR	122908	Identifier	errno		122888	0					
ANR	122909	Identifier	EBADF		122888	1					
ANR	122910	ReturnStatement	return ;	575:8:20090:20096	122888	1	True				
ANR	122911	ExpressionStatement	assert ( dirp -> dirname != NULL )	577:4:20108:20137	122888	2	True				
ANR	122912	CallExpression	assert ( dirp -> dirname != NULL )		122888	0					
ANR	122913	Callee	assert		122888	0					
ANR	122914	Identifier	assert		122888	0					
ANR	122915	ArgumentList	dirp -> dirname != NULL		122888	1					
ANR	122916	Argument	dirp -> dirname != NULL		122888	0					
ANR	122917	EqualityExpression	dirp -> dirname != NULL		122888	0		!=			
ANR	122918	PtrMemberAccess	dirp -> dirname		122888	0					
ANR	122919	Identifier	dirp		122888	0					
ANR	122920	Identifier	dirname		122888	1					
ANR	122921	Identifier	NULL		122888	1					
ANR	122922	IfStatement	if ( dirp -> search_handle != INVALID_HANDLE_VALUE )		122888	3					
ANR	122923	Condition	dirp -> search_handle != INVALID_HANDLE_VALUE	581:8:20216:20258	122888	0	True				
ANR	122924	EqualityExpression	dirp -> search_handle != INVALID_HANDLE_VALUE		122888	0		!=			
ANR	122925	PtrMemberAccess	dirp -> search_handle		122888	0					
ANR	122926	Identifier	dirp		122888	0					
ANR	122927	Identifier	search_handle		122888	1					
ANR	122928	Identifier	INVALID_HANDLE_VALUE		122888	1					
ANR	122929	CompoundStatement		12:53:292:292	122888	1					
ANR	122930	IfStatement	if ( FindClose ( dirp -> search_handle ) == FALSE )		122888	0					
ANR	122931	Condition	FindClose ( dirp -> search_handle ) == FALSE	582:12:20275:20313	122888	0	True				
ANR	122932	EqualityExpression	FindClose ( dirp -> search_handle ) == FALSE		122888	0		==			
ANR	122933	CallExpression	FindClose ( dirp -> search_handle )		122888	0					
ANR	122934	Callee	FindClose		122888	0					
ANR	122935	Identifier	FindClose		122888	0					
ANR	122936	ArgumentList	dirp -> search_handle		122888	1					
ANR	122937	Argument	dirp -> search_handle		122888	0					
ANR	122938	PtrMemberAccess	dirp -> search_handle		122888	0					
ANR	122939	Identifier	dirp		122888	0					
ANR	122940	Identifier	search_handle		122888	1					
ANR	122941	Identifier	FALSE		122888	1					
ANR	122942	CompoundStatement		13:53:347:347	122888	1					
ANR	122943	ExpressionStatement	errno = EBADF	584:12:20362:20375	122888	0	True				
ANR	122944	AssignmentExpression	errno = EBADF		122888	0		=			
ANR	122945	Identifier	errno		122888	0					
ANR	122946	Identifier	EBADF		122888	1					
ANR	122947	IfStatement	if ( _initdir ( dirp ) == 0 )		122888	4					
ANR	122948	Condition	_initdir ( dirp ) == 0	590:8:20443:20461	122888	0	True				
ANR	122949	EqualityExpression	_initdir ( dirp ) == 0		122888	0		==			
ANR	122950	CallExpression	_initdir ( dirp )		122888	0					
ANR	122951	Callee	_initdir		122888	0					
ANR	122952	Identifier	_initdir		122888	0					
ANR	122953	ArgumentList	dirp		122888	1					
ANR	122954	Argument	dirp		122888	0					
ANR	122955	Identifier	dirp		122888	0					
ANR	122956	PrimaryExpression	0		122888	1					
ANR	122957	CompoundStatement		21:29:495:495	122888	1					
ANR	122958	ExpressionStatement		593:17:20640:20640	122888	0	True				
ANR	122959	ReturnType	static void		122888	1					
ANR	122960	Identifier	rewinddir		122888	2					
ANR	122961	ParameterList	DIR * dirp		122888	3					
ANR	122962	Parameter	DIR * dirp	569:10:19957:19965	122888	0	True				
ANR	122963	ParameterType	DIR *		122888	0					
ANR	122964	Identifier	dirp		122888	1					
ANR	122965	CFGEntryNode	ENTRY		122888		True				
ANR	122966	CFGExitNode	EXIT		122888		True				
ANR	122967	Symbol	errno		122888						
ANR	122968	Symbol	NULL		122888						
ANR	122969	Symbol	* dirp		122888						
ANR	122970	Symbol	FindClose		122888						
ANR	122971	Symbol	dirp -> dirname		122888						
ANR	122972	Symbol	FALSE		122888						
ANR	122973	Symbol	dirp		122888						
ANR	122974	Symbol	dirp -> search_handle		122888						
ANR	122975	Symbol	EBADF		122888						
ANR	122976	Symbol	INVALID_HANDLE_VALUE		122888						
ANR	122977	Symbol	_initdir		122888						
ANR	122978	Function	_initdir	602:0:20783:21840							
ANR	122979	FunctionDef	_initdir (DIR * dirp)		122978	0					
ANR	122980	CompoundStatement		604:0:20814:21840	122978	0					
ANR	122981	ExpressionStatement	assert ( dirp != NULL )	605:4:20820:20840	122978	0	True				
ANR	122982	CallExpression	assert ( dirp != NULL )		122978	0					
ANR	122983	Callee	assert		122978	0					
ANR	122984	Identifier	assert		122978	0					
ANR	122985	ArgumentList	dirp != NULL		122978	1					
ANR	122986	Argument	dirp != NULL		122978	0					
ANR	122987	EqualityExpression	dirp != NULL		122978	0		!=			
ANR	122988	Identifier	dirp		122978	0					
ANR	122989	Identifier	NULL		122978	1					
ANR	122990	ExpressionStatement	assert ( dirp -> dirname != NULL )	606:4:20846:20875	122978	1	True				
ANR	122991	CallExpression	assert ( dirp -> dirname != NULL )		122978	0					
ANR	122992	Callee	assert		122978	0					
ANR	122993	Identifier	assert		122978	0					
ANR	122994	ArgumentList	dirp -> dirname != NULL		122978	1					
ANR	122995	Argument	dirp -> dirname != NULL		122978	0					
ANR	122996	EqualityExpression	dirp -> dirname != NULL		122978	0		!=			
ANR	122997	PtrMemberAccess	dirp -> dirname		122978	0					
ANR	122998	Identifier	dirp		122978	0					
ANR	122999	Identifier	dirname		122978	1					
ANR	123000	Identifier	NULL		122978	1					
ANR	123001	ExpressionStatement	dirp -> dirent_filled = 0	607:4:20881:20904	122978	2	True				
ANR	123002	AssignmentExpression	dirp -> dirent_filled = 0		122978	0		=			
ANR	123003	PtrMemberAccess	dirp -> dirent_filled		122978	0					
ANR	123004	Identifier	dirp		122978	0					
ANR	123005	Identifier	dirent_filled		122978	1					
ANR	123006	PrimaryExpression	0		122978	1					
ANR	123007	Statement	if	609:2:20909:20910	122978	3	True				
ANR	123008	Statement	defined	609:5:20912:20918	122978	4	True				
ANR	123009	ExpressionStatement	"( DIRENT_WIN32_INTERFACE ) dirp -> search_handle = FindFirstFile ( dirp -> dirname , & dirp -> current . data )"	609:12:20919:21065	122978	5	True				
ANR	123010	AssignmentExpression	"( DIRENT_WIN32_INTERFACE ) dirp -> search_handle = FindFirstFile ( dirp -> dirname , & dirp -> current . data )"		122978	0		=			
ANR	123011	CastExpression	( DIRENT_WIN32_INTERFACE ) dirp -> search_handle		122978	0					
ANR	123012	CastTarget	DIRENT_WIN32_INTERFACE		122978	0					
ANR	123013	PtrMemberAccess	dirp -> search_handle		122978	1					
ANR	123014	Identifier	dirp		122978	0					
ANR	123015	Identifier	search_handle		122978	1					
ANR	123016	CallExpression	"FindFirstFile ( dirp -> dirname , & dirp -> current . data )"		122978	1					
ANR	123017	Callee	FindFirstFile		122978	0					
ANR	123018	Identifier	FindFirstFile		122978	0					
ANR	123019	ArgumentList	dirp -> dirname		122978	1					
ANR	123020	Argument	dirp -> dirname		122978	0					
ANR	123021	PtrMemberAccess	dirp -> dirname		122978	0					
ANR	123022	Identifier	dirp		122978	0					
ANR	123023	Identifier	dirname		122978	1					
ANR	123024	Argument	& dirp -> current . data		122978	1					
ANR	123025	UnaryOperationExpression	& dirp -> current . data		122978	0					
ANR	123026	UnaryOperator	&		122978	0					
ANR	123027	MemberAccess	dirp -> current . data		122978	1					
ANR	123028	PtrMemberAccess	dirp -> current		122978	0					
ANR	123029	Identifier	dirp		122978	0					
ANR	123030	Identifier	current		122978	1					
ANR	123031	Identifier	data		122978	1					
ANR	123032	IfStatement	if ( dirp -> search_handle == INVALID_HANDLE_VALUE )		122978	6					
ANR	123033	Condition	dirp -> search_handle == INVALID_HANDLE_VALUE	612:8:21075:21117	122978	0	True				
ANR	123034	EqualityExpression	dirp -> search_handle == INVALID_HANDLE_VALUE		122978	0		==			
ANR	123035	PtrMemberAccess	dirp -> search_handle		122978	0					
ANR	123036	Identifier	dirp		122978	0					
ANR	123037	Identifier	search_handle		122978	1					
ANR	123038	Identifier	INVALID_HANDLE_VALUE		122978	1					
ANR	123039	CompoundStatement		9:53:305:305	122978	1					
ANR	123040	ExpressionStatement	errno = ENOENT	616:8:21325:21339	122978	0	True				
ANR	123041	AssignmentExpression	errno = ENOENT		122978	0		=			
ANR	123042	Identifier	errno		122978	0					
ANR	123043	Identifier	ENOENT		122978	1					
ANR	123044	ReturnStatement	return 0 ;	617:8:21349:21357	122978	1	True				
ANR	123045	PrimaryExpression	0		122978	0					
ANR	123046	Statement	elif	620:2:21368:21371	122978	7	True				
ANR	123047	Statement	defined	620:7:21373:21379	122978	8	True				
ANR	123048	Statement	(	620:14:21380:21380	122978	9	True				
ANR	123049	Statement	DIRENT_MSDOS_INTERFACE	620:15:21381:21402	122978	10	True				
ANR	123050	Statement	)	620:37:21403:21403	122978	11	True				
ANR	123051	IfStatement	"if ( _dos_findfirst ( dirp -> dirname , _A_SUBDIR | _A_RDONLY | _A_ARCH | _A_SYSTEM | _A_HIDDEN , & dirp -> current . data ) != 0 )"		122978	12					
ANR	123052	Condition	"_dos_findfirst ( dirp -> dirname , _A_SUBDIR | _A_RDONLY | _A_ARCH | _A_SYSTEM | _A_HIDDEN , & dirp -> current . data ) != 0"	621:8:21413:21570	122978	0	True				
ANR	123053	EqualityExpression	"_dos_findfirst ( dirp -> dirname , _A_SUBDIR | _A_RDONLY | _A_ARCH | _A_SYSTEM | _A_HIDDEN , & dirp -> current . data ) != 0"		122978	0		!=			
ANR	123054	CallExpression	"_dos_findfirst ( dirp -> dirname , _A_SUBDIR | _A_RDONLY | _A_ARCH | _A_SYSTEM | _A_HIDDEN , & dirp -> current . data )"		122978	0					
ANR	123055	Callee	_dos_findfirst		122978	0					
ANR	123056	Identifier	_dos_findfirst		122978	0					
ANR	123057	ArgumentList	dirp -> dirname		122978	1					
ANR	123058	Argument	dirp -> dirname		122978	0					
ANR	123059	PtrMemberAccess	dirp -> dirname		122978	0					
ANR	123060	Identifier	dirp		122978	0					
ANR	123061	Identifier	dirname		122978	1					
ANR	123062	Argument	_A_SUBDIR | _A_RDONLY | _A_ARCH | _A_SYSTEM | _A_HIDDEN		122978	1					
ANR	123063	InclusiveOrExpression	_A_SUBDIR | _A_RDONLY | _A_ARCH | _A_SYSTEM | _A_HIDDEN		122978	0		|			
ANR	123064	Identifier	_A_SUBDIR		122978	0					
ANR	123065	InclusiveOrExpression	_A_RDONLY | _A_ARCH | _A_SYSTEM | _A_HIDDEN		122978	1		|			
ANR	123066	Identifier	_A_RDONLY		122978	0					
ANR	123067	InclusiveOrExpression	_A_ARCH | _A_SYSTEM | _A_HIDDEN		122978	1		|			
ANR	123068	Identifier	_A_ARCH		122978	0					
ANR	123069	InclusiveOrExpression	_A_SYSTEM | _A_HIDDEN		122978	1		|			
ANR	123070	Identifier	_A_SYSTEM		122978	0					
ANR	123071	Identifier	_A_HIDDEN		122978	1					
ANR	123072	Argument	& dirp -> current . data		122978	2					
ANR	123073	UnaryOperationExpression	& dirp -> current . data		122978	0					
ANR	123074	UnaryOperator	&		122978	0					
ANR	123075	MemberAccess	dirp -> current . data		122978	1					
ANR	123076	PtrMemberAccess	dirp -> current		122978	0					
ANR	123077	Identifier	dirp		122978	0					
ANR	123078	Identifier	current		122978	1					
ANR	123079	Identifier	data		122978	1					
ANR	123080	PrimaryExpression	0		122978	1					
ANR	123081	CompoundStatement		20:50:758:758	122978	1					
ANR	123082	ReturnStatement	return 0 ;	626:8:21703:21711	122978	0	True				
ANR	123083	PrimaryExpression	0		122978	0					
ANR	123084	IdentifierDeclStatement	endif _setdirname ( dirp ) ;	628:2:21721:21795	122978	13	True				
ANR	123085	IdentifierDecl	_setdirname ( dirp )		122978	0					
ANR	123086	IdentifierDeclType	endif		122978	0					
ANR	123087	Identifier	_setdirname		122978	1					
ANR	123088	Identifier	dirp		122978	2					
ANR	123089	ExpressionStatement	dirp -> dirent_filled = 1	632:4:21801:21824	122978	14	True				
ANR	123090	AssignmentExpression	dirp -> dirent_filled = 1		122978	0		=			
ANR	123091	PtrMemberAccess	dirp -> dirent_filled		122978	0					
ANR	123092	Identifier	dirp		122978	0					
ANR	123093	Identifier	dirent_filled		122978	1					
ANR	123094	PrimaryExpression	1		122978	1					
ANR	123095	ReturnStatement	return 1 ;	633:4:21830:21838	122978	15	True				
ANR	123096	PrimaryExpression	1		122978	0					
ANR	123097	ReturnType	static int		122978	1					
ANR	123098	Identifier	_initdir		122978	2					
ANR	123099	ParameterList	DIR * dirp		122978	3					
ANR	123100	Parameter	DIR * dirp	603:9:20803:20811	122978	0	True				
ANR	123101	ParameterType	DIR *		122978	0					
ANR	123102	Identifier	dirp		122978	1					
ANR	123103	CFGEntryNode	ENTRY		122978		True				
ANR	123104	CFGExitNode	EXIT		122978		True				
ANR	123105	Symbol	_dos_findfirst		122978						
ANR	123106	Symbol	errno		122978						
ANR	123107	Symbol	NULL		122978						
ANR	123108	Symbol	* dirp		122978						
ANR	123109	Symbol	dirp -> dirent_filled		122978						
ANR	123110	Symbol	_A_HIDDEN		122978						
ANR	123111	Symbol	dirp -> current		122978						
ANR	123112	Symbol	_A_ARCH		122978						
ANR	123113	Symbol	_A_RDONLY		122978						
ANR	123114	Symbol	dirp -> dirname		122978						
ANR	123115	Symbol	ENOENT		122978						
ANR	123116	Symbol	dirp		122978						
ANR	123117	Symbol	FindFirstFile		122978						
ANR	123118	Symbol	dirp -> search_handle		122978						
ANR	123119	Symbol	INVALID_HANDLE_VALUE		122978						
ANR	123120	Symbol	_setdirname		122978						
ANR	123121	Symbol	& dirp -> current . data		122978						
ANR	123122	Symbol	& dirp -> current		122978						
ANR	123123	Symbol	_A_SUBDIR		122978						
ANR	123124	Symbol	_A_SYSTEM		122978						
ANR	123125	Function	_getdirname	640:0:21923:22151							
ANR	123126	FunctionDef	_getdirname (const struct dirent * dp)		123125	0					
ANR	123127	CompoundStatement		642:0:21980:22151	123125	0					
ANR	123128	ReturnStatement	return dp -> data . cFileName ;	644:4:22022:22047	123125	0	True				
ANR	123129	MemberAccess	dp -> data . cFileName		123125	0					
ANR	123130	PtrMemberAccess	dp -> data		123125	0					
ANR	123131	Identifier	dp		123125	0					
ANR	123132	Identifier	data		123125	1					
ANR	123133	Identifier	cFileName		123125	1					
ANR	123134	ReturnType	static const char *		123125	1					
ANR	123135	Identifier	_getdirname		123125	2					
ANR	123136	ParameterList	const struct dirent * dp		123125	3					
ANR	123137	Parameter	const struct dirent * dp	641:12:21955:21977	123125	0	True				
ANR	123138	ParameterType	const struct dirent *		123125	0					
ANR	123139	Identifier	dp		123125	1					
ANR	123140	CFGEntryNode	ENTRY		123125		True				
ANR	123141	CFGExitNode	EXIT		123125		True				
ANR	123142	Symbol	* dp		123125						
ANR	123143	Symbol	dp -> data . cFileName		123125						
ANR	123144	Symbol	dp -> data		123125						
ANR	123145	Symbol	dp		123125						
ANR	123146	Function	_setdirname	658:0:22240:22562							
ANR	123147	FunctionDef	_setdirname (struct DIR * dirp)		123146	0					
ANR	123148	CompoundStatement		660:0:22282:22562	123146	0					
ANR	123149	ExpressionStatement	assert ( strlen ( _getdirname ( & dirp -> current ) ) <= NAME_MAX )	662:4:22335:22390	123146	0	True				
ANR	123150	CallExpression	assert ( strlen ( _getdirname ( & dirp -> current ) ) <= NAME_MAX )		123146	0					
ANR	123151	Callee	assert		123146	0					
ANR	123152	Identifier	assert		123146	0					
ANR	123153	ArgumentList	strlen ( _getdirname ( & dirp -> current ) ) <= NAME_MAX		123146	1					
ANR	123154	Argument	strlen ( _getdirname ( & dirp -> current ) ) <= NAME_MAX		123146	0					
ANR	123155	RelationalExpression	strlen ( _getdirname ( & dirp -> current ) ) <= NAME_MAX		123146	0		<=			
ANR	123156	CallExpression	strlen ( _getdirname ( & dirp -> current ) )		123146	0					
ANR	123157	Callee	strlen		123146	0					
ANR	123158	Identifier	strlen		123146	0					
ANR	123159	ArgumentList	_getdirname ( & dirp -> current )		123146	1					
ANR	123160	Argument	_getdirname ( & dirp -> current )		123146	0					
ANR	123161	CallExpression	_getdirname ( & dirp -> current )		123146	0					
ANR	123162	Callee	_getdirname		123146	0					
ANR	123163	Identifier	_getdirname		123146	0					
ANR	123164	ArgumentList	& dirp -> current		123146	1					
ANR	123165	Argument	& dirp -> current		123146	0					
ANR	123166	UnaryOperationExpression	& dirp -> current		123146	0					
ANR	123167	UnaryOperator	&		123146	0					
ANR	123168	PtrMemberAccess	dirp -> current		123146	1					
ANR	123169	Identifier	dirp		123146	0					
ANR	123170	Identifier	current		123146	1					
ANR	123171	Identifier	NAME_MAX		123146	1					
ANR	123172	ExpressionStatement	"strncpy ( dirp -> current . d_name , _getdirname ( & dirp -> current ) , NAME_MAX )"	664:4:22397:22489	123146	1	True				
ANR	123173	CallExpression	"strncpy ( dirp -> current . d_name , _getdirname ( & dirp -> current ) , NAME_MAX )"		123146	0					
ANR	123174	Callee	strncpy		123146	0					
ANR	123175	Identifier	strncpy		123146	0					
ANR	123176	ArgumentList	dirp -> current . d_name		123146	1					
ANR	123177	Argument	dirp -> current . d_name		123146	0					
ANR	123178	MemberAccess	dirp -> current . d_name		123146	0					
ANR	123179	PtrMemberAccess	dirp -> current		123146	0					
ANR	123180	Identifier	dirp		123146	0					
ANR	123181	Identifier	current		123146	1					
ANR	123182	Identifier	d_name		123146	1					
ANR	123183	Argument	_getdirname ( & dirp -> current )		123146	1					
ANR	123184	CallExpression	_getdirname ( & dirp -> current )		123146	0					
ANR	123185	Callee	_getdirname		123146	0					
ANR	123186	Identifier	_getdirname		123146	0					
ANR	123187	ArgumentList	& dirp -> current		123146	1					
ANR	123188	Argument	& dirp -> current		123146	0					
ANR	123189	UnaryOperationExpression	& dirp -> current		123146	0					
ANR	123190	UnaryOperator	&		123146	0					
ANR	123191	PtrMemberAccess	dirp -> current		123146	1					
ANR	123192	Identifier	dirp		123146	0					
ANR	123193	Identifier	current		123146	1					
ANR	123194	Argument	NAME_MAX		123146	2					
ANR	123195	Identifier	NAME_MAX		123146	0					
ANR	123196	ExpressionStatement	dirp -> current . d_name [ NAME_MAX ] = '\\0'	667:4:22495:22532	123146	2	True				
ANR	123197	AssignmentExpression	dirp -> current . d_name [ NAME_MAX ] = '\\0'		123146	0		=			
ANR	123198	ArrayIndexing	dirp -> current . d_name [ NAME_MAX ]		123146	0					
ANR	123199	MemberAccess	dirp -> current . d_name		123146	0					
ANR	123200	PtrMemberAccess	dirp -> current		123146	0					
ANR	123201	Identifier	dirp		123146	0					
ANR	123202	Identifier	current		123146	1					
ANR	123203	Identifier	d_name		123146	1					
ANR	123204	Identifier	NAME_MAX		123146	1					
ANR	123205	PrimaryExpression	'\\0'		123146	1					
ANR	123206	ReturnType	static void		123146	1					
ANR	123207	Identifier	_setdirname		123146	2					
ANR	123208	ParameterList	struct DIR * dirp		123146	3					
ANR	123209	Parameter	struct DIR * dirp	659:12:22264:22279	123146	0	True				
ANR	123210	ParameterType	struct DIR *		123146	0					
ANR	123211	Identifier	dirp		123146	1					
ANR	123212	CFGEntryNode	ENTRY		123146		True				
ANR	123213	CFGExitNode	EXIT		123146		True				
ANR	123214	Symbol	strlen		123146						
ANR	123215	Symbol	* dirp		123146						
ANR	123216	Symbol	dirp -> current		123146						
ANR	123217	Symbol	& dirp -> current		123146						
ANR	123218	Symbol	_getdirname		123146						
ANR	123219	Symbol	dirp -> current . d_name		123146						
ANR	123220	Symbol	* * dirp		123146						
ANR	123221	Symbol	dirp		123146						
ANR	123222	Symbol	* dirp -> current		123146						
ANR	123223	Symbol	NAME_MAX		123146						
ANR	123224	Symbol	* dirp -> current . d_name		123146						
ANR	123225	Symbol	* NAME_MAX		123146						
