command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1062916	File	data/converged/CVE-2019-12973_openjpeg/thirdparty_libtiff_tif_luv.c								
ANR	1062917	DeclStmt									
ANR	1062918	Decl							struct logLuvState	struct logLuvState	LogLuvState
ANR	1062919	ClassDef	logLuvState	160:0:6987:7507							
ANR	1062920	DeclStmt									
ANR	1062921	Decl							int	int	user_datafmt
ANR	1062922	DeclStmt									
ANR	1062923	Decl							int	int	encode_meth
ANR	1062924	DeclStmt									
ANR	1062925	Decl							int	int	pixel_size
ANR	1062926	DeclStmt									
ANR	1062927	Decl							uint8	uint8 *	tbuf
ANR	1062928	DeclStmt									
ANR	1062929	Decl							tmsize_t	tmsize_t	tbuflen
ANR	1062930	DeclStmt									
ANR	1062931	Decl							"void ( * ) ( LogLuvState * , uint8 * , tmsize_t )"	"void ( * ) ( LogLuvState * , uint8 * , tmsize_t )"	tfunc
ANR	1062932	DeclStmt									
ANR	1062933	Decl							TIFFVSetMethod	TIFFVSetMethod	vgetparent
ANR	1062934	DeclStmt									
ANR	1062935	Decl							TIFFVSetMethod	TIFFVSetMethod	vsetparent
ANR	1062936	Function	LogL16Decode	183:0:7756:9493							
ANR	1062937	FunctionDef	"LogL16Decode (TIFF * tif , uint8 * op , tmsize_t occ , uint16 s)"		1062936	0					
ANR	1062938	CompoundStatement		185:0:7826:9493	1062936	0					
ANR	1062939	Statement	static	186:1:7829:7834	1062936	0	True				
ANR	1062940	IdentifierDeclStatement	"const char module [ ] = ""LogL16Decode"" ;"	186:8:7836:7872	1062936	1	True				
ANR	1062941	IdentifierDecl	"module [ ] = ""LogL16Decode"""		1062936	0					
ANR	1062942	IdentifierDeclType	const char [ ]		1062936	0					
ANR	1062943	Identifier	module		1062936	1					
ANR	1062944	AssignmentExpression	"module [ ] = ""LogL16Decode"""		1062936	2		=			
ANR	1062945	Identifier	module		1062936	0					
ANR	1062946	PrimaryExpression	"""LogL16Decode"""		1062936	1					
ANR	1062947	IdentifierDeclStatement	LogLuvState * sp = DecoderState ( tif ) ;	187:1:7875:7910	1062936	2	True				
ANR	1062948	IdentifierDecl	* sp = DecoderState ( tif )		1062936	0					
ANR	1062949	IdentifierDeclType	LogLuvState *		1062936	0					
ANR	1062950	Identifier	sp		1062936	1					
ANR	1062951	AssignmentExpression	* sp = DecoderState ( tif )		1062936	2		=			
ANR	1062952	Identifier	sp		1062936	0					
ANR	1062953	CallExpression	DecoderState ( tif )		1062936	1					
ANR	1062954	Callee	DecoderState		1062936	0					
ANR	1062955	Identifier	DecoderState		1062936	0					
ANR	1062956	ArgumentList	tif		1062936	1					
ANR	1062957	Argument	tif		1062936	0					
ANR	1062958	Identifier	tif		1062936	0					
ANR	1062959	IdentifierDeclStatement	int shft ;	188:1:7913:7921	1062936	3	True				
ANR	1062960	IdentifierDecl	shft		1062936	0					
ANR	1062961	IdentifierDeclType	int		1062936	0					
ANR	1062962	Identifier	shft		1062936	1					
ANR	1062963	IdentifierDeclStatement	tmsize_t i ;	189:1:7924:7934	1062936	4	True				
ANR	1062964	IdentifierDecl	i		1062936	0					
ANR	1062965	IdentifierDeclType	tmsize_t		1062936	0					
ANR	1062966	Identifier	i		1062936	1					
ANR	1062967	IdentifierDeclStatement	tmsize_t npixels ;	190:1:7937:7953	1062936	5	True				
ANR	1062968	IdentifierDecl	npixels		1062936	0					
ANR	1062969	IdentifierDeclType	tmsize_t		1062936	0					
ANR	1062970	Identifier	npixels		1062936	1					
ANR	1062971	IdentifierDeclStatement	unsigned char * bp ;	191:1:7956:7973	1062936	6	True				
ANR	1062972	IdentifierDecl	* bp		1062936	0					
ANR	1062973	IdentifierDeclType	unsigned char *		1062936	0					
ANR	1062974	Identifier	bp		1062936	1					
ANR	1062975	IdentifierDeclStatement	int16 * tp ;	192:1:7976:7985	1062936	7	True				
ANR	1062976	IdentifierDecl	* tp		1062936	0					
ANR	1062977	IdentifierDeclType	int16 *		1062936	0					
ANR	1062978	Identifier	tp		1062936	1					
ANR	1062979	IdentifierDeclStatement	int16 b ;	193:1:7988:7995	1062936	8	True				
ANR	1062980	IdentifierDecl	b		1062936	0					
ANR	1062981	IdentifierDeclType	int16		1062936	0					
ANR	1062982	Identifier	b		1062936	1					
ANR	1062983	IdentifierDeclStatement	tmsize_t cc ;	194:1:7998:8009	1062936	9	True				
ANR	1062984	IdentifierDecl	cc		1062936	0					
ANR	1062985	IdentifierDeclType	tmsize_t		1062936	0					
ANR	1062986	Identifier	cc		1062936	1					
ANR	1062987	IdentifierDeclStatement	int rc ;	195:1:8012:8018	1062936	10	True				
ANR	1062988	IdentifierDecl	rc		1062936	0					
ANR	1062989	IdentifierDeclType	int		1062936	0					
ANR	1062990	Identifier	rc		1062936	1					
ANR	1062991	ExpressionStatement	assert ( s == 0 )	197:1:8022:8036	1062936	11	True				
ANR	1062992	CallExpression	assert ( s == 0 )		1062936	0					
ANR	1062993	Callee	assert		1062936	0					
ANR	1062994	Identifier	assert		1062936	0					
ANR	1062995	ArgumentList	s == 0		1062936	1					
ANR	1062996	Argument	s == 0		1062936	0					
ANR	1062997	EqualityExpression	s == 0		1062936	0		==			
ANR	1062998	Identifier	s		1062936	0					
ANR	1062999	PrimaryExpression	0		1062936	1					
ANR	1063000	ExpressionStatement	assert ( sp != NULL )	198:1:8039:8057	1062936	12	True				
ANR	1063001	CallExpression	assert ( sp != NULL )		1062936	0					
ANR	1063002	Callee	assert		1062936	0					
ANR	1063003	Identifier	assert		1062936	0					
ANR	1063004	ArgumentList	sp != NULL		1062936	1					
ANR	1063005	Argument	sp != NULL		1062936	0					
ANR	1063006	EqualityExpression	sp != NULL		1062936	0		!=			
ANR	1063007	Identifier	sp		1062936	0					
ANR	1063008	Identifier	NULL		1062936	1					
ANR	1063009	ExpressionStatement	npixels = occ / sp -> pixel_size	200:1:8061:8091	1062936	13	True				
ANR	1063010	AssignmentExpression	npixels = occ / sp -> pixel_size		1062936	0		=			
ANR	1063011	Identifier	npixels		1062936	0					
ANR	1063012	MultiplicativeExpression	occ / sp -> pixel_size		1062936	1		/			
ANR	1063013	Identifier	occ		1062936	0					
ANR	1063014	PtrMemberAccess	sp -> pixel_size		1062936	1					
ANR	1063015	Identifier	sp		1062936	0					
ANR	1063016	Identifier	pixel_size		1062936	1					
ANR	1063017	IfStatement	if ( sp -> user_datafmt == SGILOGDATAFMT_16BIT )		1062936	14					
ANR	1063018	Condition	sp -> user_datafmt == SGILOGDATAFMT_16BIT	202:5:8099:8137	1062936	0	True				
ANR	1063019	EqualityExpression	sp -> user_datafmt == SGILOGDATAFMT_16BIT		1062936	0		==			
ANR	1063020	PtrMemberAccess	sp -> user_datafmt		1062936	0					
ANR	1063021	Identifier	sp		1062936	0					
ANR	1063022	Identifier	user_datafmt		1062936	1					
ANR	1063023	Identifier	SGILOGDATAFMT_16BIT		1062936	1					
ANR	1063024	ExpressionStatement	tp = ( int16 * ) op	203:2:8142:8158	1062936	1	True				
ANR	1063025	AssignmentExpression	tp = ( int16 * ) op		1062936	0		=			
ANR	1063026	Identifier	tp		1062936	0					
ANR	1063027	CastExpression	( int16 * ) op		1062936	1					
ANR	1063028	CastTarget	int16 *		1062936	0					
ANR	1063029	Identifier	op		1062936	1					
ANR	1063030	ElseStatement	else		1062936	0					
ANR	1063031	CompoundStatement		20:6:339:339	1062936	0					
ANR	1063032	ExpressionStatement	assert ( sp -> tbuflen >= npixels )	205:2:8170:8200	1062936	0	True				
ANR	1063033	CallExpression	assert ( sp -> tbuflen >= npixels )		1062936	0					
ANR	1063034	Callee	assert		1062936	0					
ANR	1063035	Identifier	assert		1062936	0					
ANR	1063036	ArgumentList	sp -> tbuflen >= npixels		1062936	1					
ANR	1063037	Argument	sp -> tbuflen >= npixels		1062936	0					
ANR	1063038	RelationalExpression	sp -> tbuflen >= npixels		1062936	0		>=			
ANR	1063039	PtrMemberAccess	sp -> tbuflen		1062936	0					
ANR	1063040	Identifier	sp		1062936	0					
ANR	1063041	Identifier	tbuflen		1062936	1					
ANR	1063042	Identifier	npixels		1062936	1					
ANR	1063043	ExpressionStatement	tp = ( int16 * ) sp -> tbuf	206:2:8204:8226	1062936	1	True				
ANR	1063044	AssignmentExpression	tp = ( int16 * ) sp -> tbuf		1062936	0		=			
ANR	1063045	Identifier	tp		1062936	0					
ANR	1063046	CastExpression	( int16 * ) sp -> tbuf		1062936	1					
ANR	1063047	CastTarget	int16 *		1062936	0					
ANR	1063048	PtrMemberAccess	sp -> tbuf		1062936	1					
ANR	1063049	Identifier	sp		1062936	0					
ANR	1063050	Identifier	tbuf		1062936	1					
ANR	1063051	ExpressionStatement	"_TIFFmemset ( ( void * ) tp , 0 , npixels * sizeof ( tp [ 0 ] ) )"	208:1:8232:8282	1062936	15	True				
ANR	1063052	CallExpression	"_TIFFmemset ( ( void * ) tp , 0 , npixels * sizeof ( tp [ 0 ] ) )"		1062936	0					
ANR	1063053	Callee	_TIFFmemset		1062936	0					
ANR	1063054	Identifier	_TIFFmemset		1062936	0					
ANR	1063055	ArgumentList	( void * ) tp		1062936	1					
ANR	1063056	Argument	( void * ) tp		1062936	0					
ANR	1063057	CastExpression	( void * ) tp		1062936	0					
ANR	1063058	CastTarget	void *		1062936	0					
ANR	1063059	Identifier	tp		1062936	1					
ANR	1063060	Argument	0		1062936	1					
ANR	1063061	PrimaryExpression	0		1062936	0					
ANR	1063062	Argument	npixels * sizeof ( tp [ 0 ] )		1062936	2					
ANR	1063063	MultiplicativeExpression	npixels * sizeof ( tp [ 0 ] )		1062936	0		*			
ANR	1063064	Identifier	npixels		1062936	0					
ANR	1063065	SizeofExpression	sizeof ( tp [ 0 ] )		1062936	1					
ANR	1063066	Sizeof	sizeof		1062936	0					
ANR	1063067	ArrayIndexing	tp [ 0 ]		1062936	1					
ANR	1063068	Identifier	tp		1062936	0					
ANR	1063069	PrimaryExpression	0		1062936	1					
ANR	1063070	ExpressionStatement	bp = ( unsigned char * ) tif -> tif_rawcp	210:1:8286:8322	1062936	16	True				
ANR	1063071	AssignmentExpression	bp = ( unsigned char * ) tif -> tif_rawcp		1062936	0		=			
ANR	1063072	Identifier	bp		1062936	0					
ANR	1063073	CastExpression	( unsigned char * ) tif -> tif_rawcp		1062936	1					
ANR	1063074	CastTarget	unsigned char *		1062936	0					
ANR	1063075	PtrMemberAccess	tif -> tif_rawcp		1062936	1					
ANR	1063076	Identifier	tif		1062936	0					
ANR	1063077	Identifier	tif_rawcp		1062936	1					
ANR	1063078	ExpressionStatement	cc = tif -> tif_rawcc	211:1:8325:8344	1062936	17	True				
ANR	1063079	AssignmentExpression	cc = tif -> tif_rawcc		1062936	0		=			
ANR	1063080	Identifier	cc		1062936	0					
ANR	1063081	PtrMemberAccess	tif -> tif_rawcc		1062936	1					
ANR	1063082	Identifier	tif		1062936	0					
ANR	1063083	Identifier	tif_rawcc		1062936	1					
ANR	1063084	ForStatement	for ( shft = 2 * 8 ; ( shft -= 8 ) >= 0 ; )		1062936	18					
ANR	1063085	ForInit	shft = 2 * 8 ;	213:6:8380:8390	1062936	0	True				
ANR	1063086	AssignmentExpression	shft = 2 * 8		1062936	0		=			
ANR	1063087	Identifier	shft		1062936	0					
ANR	1063088	MultiplicativeExpression	2 * 8		1062936	1		*			
ANR	1063089	PrimaryExpression	2		1062936	0					
ANR	1063090	PrimaryExpression	8		1062936	1					
ANR	1063091	Condition	( shft -= 8 ) >= 0	213:18:8392:8407	1062936	1	True				
ANR	1063092	RelationalExpression	( shft -= 8 ) >= 0		1062936	0		>=			
ANR	1063093	AssignmentExpression	shft -= 8		1062936	0		-=			
ANR	1063094	Identifier	shft		1062936	0					
ANR	1063095	PrimaryExpression	8		1062936	1					
ANR	1063096	PrimaryExpression	0		1062936	1					
ANR	1063097	CompoundStatement		29:38:585:585	1062936	2					
ANR	1063098	ForStatement	for ( i = 0 ; i < npixels && cc > 0 ; )		1062936	0					
ANR	1063099	ForInit	i = 0 ;	214:7:8421:8426	1062936	0	True				
ANR	1063100	AssignmentExpression	i = 0		1062936	0		=			
ANR	1063101	Identifier	i		1062936	0					
ANR	1063102	PrimaryExpression	0		1062936	1					
ANR	1063103	Condition	i < npixels && cc > 0	214:14:8428:8448	1062936	1	True				
ANR	1063104	AndExpression	i < npixels && cc > 0		1062936	0		&&			
ANR	1063105	RelationalExpression	i < npixels		1062936	0		<			
ANR	1063106	Identifier	i		1062936	0					
ANR	1063107	Identifier	npixels		1062936	1					
ANR	1063108	RelationalExpression	cc > 0		1062936	1		>			
ANR	1063109	Identifier	cc		1062936	0					
ANR	1063110	PrimaryExpression	0		1062936	1					
ANR	1063111	IfStatement	if ( * bp >= 128 )		1062936	2					
ANR	1063112	Condition	* bp >= 128	215:7:8460:8469	1062936	0	True				
ANR	1063113	RelationalExpression	* bp >= 128		1062936	0		>=			
ANR	1063114	UnaryOperationExpression	* bp		1062936	0					
ANR	1063115	UnaryOperator	*		1062936	0					
ANR	1063116	Identifier	bp		1062936	1					
ANR	1063117	PrimaryExpression	128		1062936	1					
ANR	1063118	CompoundStatement		31:19:645:645	1062936	1					
ANR	1063119	ExpressionStatement	rc = * bp ++ + ( 2 - 128 )	216:4:8489:8509	1062936	0	True				
ANR	1063120	AssignmentExpression	rc = * bp ++ + ( 2 - 128 )		1062936	0		=			
ANR	1063121	Identifier	rc		1062936	0					
ANR	1063122	AdditiveExpression	* bp ++ + ( 2 - 128 )		1062936	1		+			
ANR	1063123	UnaryOperationExpression	* bp ++		1062936	0					
ANR	1063124	UnaryOperator	*		1062936	0					
ANR	1063125	PostIncDecOperationExpression	bp ++		1062936	1					
ANR	1063126	Identifier	bp		1062936	0					
ANR	1063127	IncDec	++		1062936	1					
ANR	1063128	AdditiveExpression	2 - 128		1062936	1		-			
ANR	1063129	PrimaryExpression	2		1062936	0					
ANR	1063130	PrimaryExpression	128		1062936	1					
ANR	1063131	ExpressionStatement	b = ( int16 ) ( * bp ++ << shft )	217:4:8600:8626	1062936	1	True				
ANR	1063132	AssignmentExpression	b = ( int16 ) ( * bp ++ << shft )		1062936	0		=			
ANR	1063133	Identifier	b		1062936	0					
ANR	1063134	CastExpression	( int16 ) ( * bp ++ << shft )		1062936	1					
ANR	1063135	CastTarget	int16		1062936	0					
ANR	1063136	ShiftExpression	* bp ++ << shft		1062936	1		<<			
ANR	1063137	UnaryOperationExpression	* bp ++		1062936	0					
ANR	1063138	UnaryOperator	*		1062936	0					
ANR	1063139	PostIncDecOperationExpression	bp ++		1062936	1					
ANR	1063140	Identifier	bp		1062936	0					
ANR	1063141	IncDec	++		1062936	1					
ANR	1063142	Identifier	shft		1062936	1					
ANR	1063143	ExpressionStatement	cc -= 2	218:4:8632:8639	1062936	2	True				
ANR	1063144	AssignmentExpression	cc -= 2		1062936	0		-=			
ANR	1063145	Identifier	cc		1062936	0					
ANR	1063146	PrimaryExpression	2		1062936	1					
ANR	1063147	WhileStatement	while ( rc -- && i < npixels )		1062936	3					
ANR	1063148	Condition	rc -- && i < npixels	219:11:8652:8670	1062936	0	True				
ANR	1063149	AndExpression	rc -- && i < npixels		1062936	0		&&			
ANR	1063150	PostIncDecOperationExpression	rc --		1062936	0					
ANR	1063151	Identifier	rc		1062936	0					
ANR	1063152	IncDec	--		1062936	1					
ANR	1063153	RelationalExpression	i < npixels		1062936	1		<			
ANR	1063154	Identifier	i		1062936	0					
ANR	1063155	Identifier	npixels		1062936	1					
ANR	1063156	ExpressionStatement	tp [ i ++ ] |= b	220:5:8678:8690	1062936	1	True				
ANR	1063157	AssignmentExpression	tp [ i ++ ] |= b		1062936	0		|=			
ANR	1063158	ArrayIndexing	tp [ i ++ ]		1062936	0					
ANR	1063159	Identifier	tp		1062936	0					
ANR	1063160	PostIncDecOperationExpression	i ++		1062936	1					
ANR	1063161	Identifier	i		1062936	0					
ANR	1063162	IncDec	++		1062936	1					
ANR	1063163	Identifier	b		1062936	1					
ANR	1063164	ElseStatement	else		1062936	0					
ANR	1063165	CompoundStatement		37:10:875:875	1062936	0					
ANR	1063166	ExpressionStatement	rc = * bp ++	222:4:8724:8734	1062936	0	True				
ANR	1063167	AssignmentExpression	rc = * bp ++		1062936	0		=			
ANR	1063168	Identifier	rc		1062936	0					
ANR	1063169	UnaryOperationExpression	* bp ++		1062936	1					
ANR	1063170	UnaryOperator	*		1062936	0					
ANR	1063171	PostIncDecOperationExpression	bp ++		1062936	1					
ANR	1063172	Identifier	bp		1062936	0					
ANR	1063173	IncDec	++		1062936	1					
ANR	1063174	WhileStatement	while ( -- cc && rc -- && i < npixels )		1062936	1					
ANR	1063175	Condition	-- cc && rc -- && i < npixels	223:11:8766:8792	1062936	0	True				
ANR	1063176	AndExpression	-- cc && rc -- && i < npixels		1062936	0		&&			
ANR	1063177	UnaryExpression	-- cc		1062936	0					
ANR	1063178	IncDec	--		1062936	0					
ANR	1063179	Identifier	cc		1062936	1					
ANR	1063180	AndExpression	rc -- && i < npixels		1062936	1		&&			
ANR	1063181	PostIncDecOperationExpression	rc --		1062936	0					
ANR	1063182	Identifier	rc		1062936	0					
ANR	1063183	IncDec	--		1062936	1					
ANR	1063184	RelationalExpression	i < npixels		1062936	1		<			
ANR	1063185	Identifier	i		1062936	0					
ANR	1063186	Identifier	npixels		1062936	1					
ANR	1063187	ExpressionStatement	tp [ i ++ ] |= ( int16 ) * bp ++ << shft	224:5:8800:8831	1062936	1	True				
ANR	1063188	AssignmentExpression	tp [ i ++ ] |= ( int16 ) * bp ++ << shft		1062936	0		|=			
ANR	1063189	ArrayIndexing	tp [ i ++ ]		1062936	0					
ANR	1063190	Identifier	tp		1062936	0					
ANR	1063191	PostIncDecOperationExpression	i ++		1062936	1					
ANR	1063192	Identifier	i		1062936	0					
ANR	1063193	IncDec	++		1062936	1					
ANR	1063194	ShiftExpression	( int16 ) * bp ++ << shft		1062936	1		<<			
ANR	1063195	CastExpression	( int16 ) * bp ++		1062936	0					
ANR	1063196	CastTarget	int16		1062936	0					
ANR	1063197	UnaryOperationExpression	* bp ++		1062936	1					
ANR	1063198	UnaryOperator	*		1062936	0					
ANR	1063199	PostIncDecOperationExpression	bp ++		1062936	1					
ANR	1063200	Identifier	bp		1062936	0					
ANR	1063201	IncDec	++		1062936	1					
ANR	1063202	Identifier	shft		1062936	1					
ANR	1063203	IfStatement	if ( i != npixels )		1062936	1					
ANR	1063204	Condition	i != npixels	226:6:8844:8855	1062936	0	True				
ANR	1063205	EqualityExpression	i != npixels		1062936	0		!=			
ANR	1063206	Identifier	i		1062936	0					
ANR	1063207	Identifier	npixels		1062936	1					
ANR	1063208	CompoundStatement		42:20:1031:1031	1062936	1					
ANR	1063209	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Not enough data at row %lu (short %I64d pixels)"" , ( unsigned long ) tif -> tif_row , ( unsigned __int64 ) ( npixels - i ) )"	228:3:8933:9114	1062936	0	True				
ANR	1063210	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Not enough data at row %lu (short %I64d pixels)"" , ( unsigned long ) tif -> tif_row , ( unsigned __int64 ) ( npixels - i ) )"		1062936	0					
ANR	1063211	Callee	TIFFErrorExt		1062936	0					
ANR	1063212	Identifier	TIFFErrorExt		1062936	0					
ANR	1063213	ArgumentList	tif -> tif_clientdata		1062936	1					
ANR	1063214	Argument	tif -> tif_clientdata		1062936	0					
ANR	1063215	PtrMemberAccess	tif -> tif_clientdata		1062936	0					
ANR	1063216	Identifier	tif		1062936	0					
ANR	1063217	Identifier	tif_clientdata		1062936	1					
ANR	1063218	Argument	module		1062936	1					
ANR	1063219	Identifier	module		1062936	0					
ANR	1063220	Argument	"""Not enough data at row %lu (short %I64d pixels)"""		1062936	2					
ANR	1063221	PrimaryExpression	"""Not enough data at row %lu (short %I64d pixels)"""		1062936	0					
ANR	1063222	Argument	( unsigned long ) tif -> tif_row		1062936	3					
ANR	1063223	CastExpression	( unsigned long ) tif -> tif_row		1062936	0					
ANR	1063224	CastTarget	unsigned long		1062936	0					
ANR	1063225	PtrMemberAccess	tif -> tif_row		1062936	1					
ANR	1063226	Identifier	tif		1062936	0					
ANR	1063227	Identifier	tif_row		1062936	1					
ANR	1063228	Argument	( unsigned __int64 ) ( npixels - i )		1062936	4					
ANR	1063229	CastExpression	( unsigned __int64 ) ( npixels - i )		1062936	0					
ANR	1063230	CastTarget	unsigned __int64		1062936	0					
ANR	1063231	AdditiveExpression	npixels - i		1062936	1		-			
ANR	1063232	Identifier	npixels		1062936	0					
ANR	1063233	Identifier	i		1062936	1					
ANR	1063234	ExpressionStatement	tif -> tif_rawcp = ( uint8 * ) bp	238:3:9319:9347	1062936	1	True				
ANR	1063235	AssignmentExpression	tif -> tif_rawcp = ( uint8 * ) bp		1062936	0		=			
ANR	1063236	PtrMemberAccess	tif -> tif_rawcp		1062936	0					
ANR	1063237	Identifier	tif		1062936	0					
ANR	1063238	Identifier	tif_rawcp		1062936	1					
ANR	1063239	CastExpression	( uint8 * ) bp		1062936	1					
ANR	1063240	CastTarget	uint8 *		1062936	0					
ANR	1063241	Identifier	bp		1062936	1					
ANR	1063242	ExpressionStatement	tif -> tif_rawcc = cc	239:3:9352:9371	1062936	2	True				
ANR	1063243	AssignmentExpression	tif -> tif_rawcc = cc		1062936	0		=			
ANR	1063244	PtrMemberAccess	tif -> tif_rawcc		1062936	0					
ANR	1063245	Identifier	tif		1062936	0					
ANR	1063246	Identifier	tif_rawcc		1062936	1					
ANR	1063247	Identifier	cc		1062936	1					
ANR	1063248	ReturnStatement	return ( 0 ) ;	240:3:9376:9386	1062936	3	True				
ANR	1063249	PrimaryExpression	0		1062936	0					
ANR	1063250	ExpressionStatement	"( * sp -> tfunc ) ( sp , op , npixels )"	243:1:9396:9425	1062936	19	True				
ANR	1063251	CallExpression	"( * sp -> tfunc ) ( sp , op , npixels )"		1062936	0					
ANR	1063252	Callee	* sp -> tfunc		1062936	0					
ANR	1063253	UnaryOperationExpression	* sp -> tfunc		1062936	0					
ANR	1063254	UnaryOperator	*		1062936	0					
ANR	1063255	PtrMemberAccess	sp -> tfunc		1062936	1					
ANR	1063256	Identifier	sp		1062936	0					
ANR	1063257	Identifier	tfunc		1062936	1					
ANR	1063258	ArgumentList	sp		1062936	1					
ANR	1063259	Argument	sp		1062936	0					
ANR	1063260	Identifier	sp		1062936	0					
ANR	1063261	Argument	op		1062936	1					
ANR	1063262	Identifier	op		1062936	0					
ANR	1063263	Argument	npixels		1062936	2					
ANR	1063264	Identifier	npixels		1062936	0					
ANR	1063265	ExpressionStatement	tif -> tif_rawcp = ( uint8 * ) bp	244:1:9428:9456	1062936	20	True				
ANR	1063266	AssignmentExpression	tif -> tif_rawcp = ( uint8 * ) bp		1062936	0		=			
ANR	1063267	PtrMemberAccess	tif -> tif_rawcp		1062936	0					
ANR	1063268	Identifier	tif		1062936	0					
ANR	1063269	Identifier	tif_rawcp		1062936	1					
ANR	1063270	CastExpression	( uint8 * ) bp		1062936	1					
ANR	1063271	CastTarget	uint8 *		1062936	0					
ANR	1063272	Identifier	bp		1062936	1					
ANR	1063273	ExpressionStatement	tif -> tif_rawcc = cc	245:1:9459:9478	1062936	21	True				
ANR	1063274	AssignmentExpression	tif -> tif_rawcc = cc		1062936	0		=			
ANR	1063275	PtrMemberAccess	tif -> tif_rawcc		1062936	0					
ANR	1063276	Identifier	tif		1062936	0					
ANR	1063277	Identifier	tif_rawcc		1062936	1					
ANR	1063278	Identifier	cc		1062936	1					
ANR	1063279	ReturnStatement	return ( 1 ) ;	246:1:9481:9491	1062936	22	True				
ANR	1063280	PrimaryExpression	1		1062936	0					
ANR	1063281	ReturnType	static int		1062936	1					
ANR	1063282	Identifier	LogL16Decode		1062936	2					
ANR	1063283	ParameterList	"TIFF * tif , uint8 * op , tmsize_t occ , uint16 s"		1062936	3					
ANR	1063284	Parameter	TIFF * tif	184:13:7780:7788	1062936	0	True				
ANR	1063285	ParameterType	TIFF *		1062936	0					
ANR	1063286	Identifier	tif		1062936	1					
ANR	1063287	Parameter	uint8 * op	184:24:7791:7799	1062936	1	True				
ANR	1063288	ParameterType	uint8 *		1062936	0					
ANR	1063289	Identifier	op		1062936	1					
ANR	1063290	Parameter	tmsize_t occ	184:35:7802:7813	1062936	2	True				
ANR	1063291	ParameterType	tmsize_t		1062936	0					
ANR	1063292	Identifier	occ		1062936	1					
ANR	1063293	Parameter	uint16 s	184:49:7816:7823	1062936	3	True				
ANR	1063294	ParameterType	uint16		1062936	0					
ANR	1063295	Identifier	s		1062936	1					
ANR	1063296	CFGEntryNode	ENTRY		1062936		True				
ANR	1063297	CFGExitNode	EXIT		1062936		True				
ANR	1063298	Symbol	* sp		1062936						
ANR	1063299	Symbol	* bp ++		1062936						
ANR	1063300	Symbol	sp -> user_datafmt		1062936						
ANR	1063301	Symbol	occ		1062936						
ANR	1063302	Symbol	bp		1062936						
ANR	1063303	Symbol	tif		1062936						
ANR	1063304	Symbol	npixels		1062936						
ANR	1063305	Symbol	sp -> tbuflen		1062936						
ANR	1063306	Symbol	tif -> tif_rawcc		1062936						
ANR	1063307	Symbol	sp -> pixel_size		1062936						
ANR	1063308	Symbol	DecoderState		1062936						
ANR	1063309	Symbol	SGILOGDATAFMT_16BIT		1062936						
ANR	1063310	Symbol	shft		1062936						
ANR	1063311	Symbol	* bp		1062936						
ANR	1063312	Symbol	sp -> tbuf		1062936						
ANR	1063313	Symbol	sp -> tfunc		1062936						
ANR	1063314	Symbol	sp		1062936						
ANR	1063315	Symbol	cc		1062936						
ANR	1063316	Symbol	op		1062936						
ANR	1063317	Symbol	* tp		1062936						
ANR	1063318	Symbol	b		1062936						
ANR	1063319	Symbol	NULL		1062936						
ANR	1063320	Symbol	module		1062936						
ANR	1063321	Symbol	i		1062936						
ANR	1063322	Symbol	tif -> tif_row		1062936						
ANR	1063323	Symbol	tif -> tif_rawcp		1062936						
ANR	1063324	Symbol	tif -> tif_clientdata		1062936						
ANR	1063325	Symbol	rc		1062936						
ANR	1063326	Symbol	s		1062936						
ANR	1063327	Symbol	* tif		1062936						
ANR	1063328	Symbol	tp		1062936						
ANR	1063329	Function	LogLuvDecode24	252:0:9540:10773							
ANR	1063330	FunctionDef	"LogLuvDecode24 (TIFF * tif , uint8 * op , tmsize_t occ , uint16 s)"		1063329	0					
ANR	1063331	CompoundStatement		254:0:9612:10773	1063329	0					
ANR	1063332	Statement	static	255:1:9615:9620	1063329	0	True				
ANR	1063333	IdentifierDeclStatement	"const char module [ ] = ""LogLuvDecode24"" ;"	255:8:9622:9660	1063329	1	True				
ANR	1063334	IdentifierDecl	"module [ ] = ""LogLuvDecode24"""		1063329	0					
ANR	1063335	IdentifierDeclType	const char [ ]		1063329	0					
ANR	1063336	Identifier	module		1063329	1					
ANR	1063337	AssignmentExpression	"module [ ] = ""LogLuvDecode24"""		1063329	2		=			
ANR	1063338	Identifier	module		1063329	0					
ANR	1063339	PrimaryExpression	"""LogLuvDecode24"""		1063329	1					
ANR	1063340	IdentifierDeclStatement	LogLuvState * sp = DecoderState ( tif ) ;	256:1:9663:9698	1063329	2	True				
ANR	1063341	IdentifierDecl	* sp = DecoderState ( tif )		1063329	0					
ANR	1063342	IdentifierDeclType	LogLuvState *		1063329	0					
ANR	1063343	Identifier	sp		1063329	1					
ANR	1063344	AssignmentExpression	* sp = DecoderState ( tif )		1063329	2		=			
ANR	1063345	Identifier	sp		1063329	0					
ANR	1063346	CallExpression	DecoderState ( tif )		1063329	1					
ANR	1063347	Callee	DecoderState		1063329	0					
ANR	1063348	Identifier	DecoderState		1063329	0					
ANR	1063349	ArgumentList	tif		1063329	1					
ANR	1063350	Argument	tif		1063329	0					
ANR	1063351	Identifier	tif		1063329	0					
ANR	1063352	IdentifierDeclStatement	tmsize_t cc ;	257:1:9701:9712	1063329	3	True				
ANR	1063353	IdentifierDecl	cc		1063329	0					
ANR	1063354	IdentifierDeclType	tmsize_t		1063329	0					
ANR	1063355	Identifier	cc		1063329	1					
ANR	1063356	IdentifierDeclStatement	tmsize_t i ;	258:1:9715:9725	1063329	4	True				
ANR	1063357	IdentifierDecl	i		1063329	0					
ANR	1063358	IdentifierDeclType	tmsize_t		1063329	0					
ANR	1063359	Identifier	i		1063329	1					
ANR	1063360	IdentifierDeclStatement	tmsize_t npixels ;	259:1:9728:9744	1063329	5	True				
ANR	1063361	IdentifierDecl	npixels		1063329	0					
ANR	1063362	IdentifierDeclType	tmsize_t		1063329	0					
ANR	1063363	Identifier	npixels		1063329	1					
ANR	1063364	IdentifierDeclStatement	unsigned char * bp ;	260:1:9747:9764	1063329	6	True				
ANR	1063365	IdentifierDecl	* bp		1063329	0					
ANR	1063366	IdentifierDeclType	unsigned char *		1063329	0					
ANR	1063367	Identifier	bp		1063329	1					
ANR	1063368	IdentifierDeclStatement	uint32 * tp ;	261:1:9767:9777	1063329	7	True				
ANR	1063369	IdentifierDecl	* tp		1063329	0					
ANR	1063370	IdentifierDeclType	uint32 *		1063329	0					
ANR	1063371	Identifier	tp		1063329	1					
ANR	1063372	ExpressionStatement	assert ( s == 0 )	263:1:9781:9795	1063329	8	True				
ANR	1063373	CallExpression	assert ( s == 0 )		1063329	0					
ANR	1063374	Callee	assert		1063329	0					
ANR	1063375	Identifier	assert		1063329	0					
ANR	1063376	ArgumentList	s == 0		1063329	1					
ANR	1063377	Argument	s == 0		1063329	0					
ANR	1063378	EqualityExpression	s == 0		1063329	0		==			
ANR	1063379	Identifier	s		1063329	0					
ANR	1063380	PrimaryExpression	0		1063329	1					
ANR	1063381	ExpressionStatement	assert ( sp != NULL )	264:1:9798:9816	1063329	9	True				
ANR	1063382	CallExpression	assert ( sp != NULL )		1063329	0					
ANR	1063383	Callee	assert		1063329	0					
ANR	1063384	Identifier	assert		1063329	0					
ANR	1063385	ArgumentList	sp != NULL		1063329	1					
ANR	1063386	Argument	sp != NULL		1063329	0					
ANR	1063387	EqualityExpression	sp != NULL		1063329	0		!=			
ANR	1063388	Identifier	sp		1063329	0					
ANR	1063389	Identifier	NULL		1063329	1					
ANR	1063390	ExpressionStatement	npixels = occ / sp -> pixel_size	266:1:9820:9850	1063329	10	True				
ANR	1063391	AssignmentExpression	npixels = occ / sp -> pixel_size		1063329	0		=			
ANR	1063392	Identifier	npixels		1063329	0					
ANR	1063393	MultiplicativeExpression	occ / sp -> pixel_size		1063329	1		/			
ANR	1063394	Identifier	occ		1063329	0					
ANR	1063395	PtrMemberAccess	sp -> pixel_size		1063329	1					
ANR	1063396	Identifier	sp		1063329	0					
ANR	1063397	Identifier	pixel_size		1063329	1					
ANR	1063398	IfStatement	if ( sp -> user_datafmt == SGILOGDATAFMT_RAW )		1063329	11					
ANR	1063399	Condition	sp -> user_datafmt == SGILOGDATAFMT_RAW	268:5:9858:9894	1063329	0	True				
ANR	1063400	EqualityExpression	sp -> user_datafmt == SGILOGDATAFMT_RAW		1063329	0		==			
ANR	1063401	PtrMemberAccess	sp -> user_datafmt		1063329	0					
ANR	1063402	Identifier	sp		1063329	0					
ANR	1063403	Identifier	user_datafmt		1063329	1					
ANR	1063404	Identifier	SGILOGDATAFMT_RAW		1063329	1					
ANR	1063405	ExpressionStatement	tp = ( uint32 * ) op	269:2:9899:9916	1063329	1	True				
ANR	1063406	AssignmentExpression	tp = ( uint32 * ) op		1063329	0		=			
ANR	1063407	Identifier	tp		1063329	0					
ANR	1063408	CastExpression	( uint32 * ) op		1063329	1					
ANR	1063409	CastTarget	uint32 *		1063329	0					
ANR	1063410	Identifier	op		1063329	1					
ANR	1063411	ElseStatement	else		1063329	0					
ANR	1063412	CompoundStatement		17:6:311:311	1063329	0					
ANR	1063413	ExpressionStatement	assert ( sp -> tbuflen >= npixels )	271:2:9928:9958	1063329	0	True				
ANR	1063414	CallExpression	assert ( sp -> tbuflen >= npixels )		1063329	0					
ANR	1063415	Callee	assert		1063329	0					
ANR	1063416	Identifier	assert		1063329	0					
ANR	1063417	ArgumentList	sp -> tbuflen >= npixels		1063329	1					
ANR	1063418	Argument	sp -> tbuflen >= npixels		1063329	0					
ANR	1063419	RelationalExpression	sp -> tbuflen >= npixels		1063329	0		>=			
ANR	1063420	PtrMemberAccess	sp -> tbuflen		1063329	0					
ANR	1063421	Identifier	sp		1063329	0					
ANR	1063422	Identifier	tbuflen		1063329	1					
ANR	1063423	Identifier	npixels		1063329	1					
ANR	1063424	ExpressionStatement	tp = ( uint32 * ) sp -> tbuf	272:2:9962:9986	1063329	1	True				
ANR	1063425	AssignmentExpression	tp = ( uint32 * ) sp -> tbuf		1063329	0		=			
ANR	1063426	Identifier	tp		1063329	0					
ANR	1063427	CastExpression	( uint32 * ) sp -> tbuf		1063329	1					
ANR	1063428	CastTarget	uint32 *		1063329	0					
ANR	1063429	PtrMemberAccess	sp -> tbuf		1063329	1					
ANR	1063430	Identifier	sp		1063329	0					
ANR	1063431	Identifier	tbuf		1063329	1					
ANR	1063432	ExpressionStatement	bp = ( unsigned char * ) tif -> tif_rawcp	275:1:10023:10059	1063329	12	True				
ANR	1063433	AssignmentExpression	bp = ( unsigned char * ) tif -> tif_rawcp		1063329	0		=			
ANR	1063434	Identifier	bp		1063329	0					
ANR	1063435	CastExpression	( unsigned char * ) tif -> tif_rawcp		1063329	1					
ANR	1063436	CastTarget	unsigned char *		1063329	0					
ANR	1063437	PtrMemberAccess	tif -> tif_rawcp		1063329	1					
ANR	1063438	Identifier	tif		1063329	0					
ANR	1063439	Identifier	tif_rawcp		1063329	1					
ANR	1063440	ExpressionStatement	cc = tif -> tif_rawcc	276:1:10062:10081	1063329	13	True				
ANR	1063441	AssignmentExpression	cc = tif -> tif_rawcc		1063329	0		=			
ANR	1063442	Identifier	cc		1063329	0					
ANR	1063443	PtrMemberAccess	tif -> tif_rawcc		1063329	1					
ANR	1063444	Identifier	tif		1063329	0					
ANR	1063445	Identifier	tif_rawcc		1063329	1					
ANR	1063446	ForStatement	for ( i = 0 ; i < npixels && cc > 0 ; i ++ )		1063329	14					
ANR	1063447	ForInit	i = 0 ;	277:6:10089:10094	1063329	0	True				
ANR	1063448	AssignmentExpression	i = 0		1063329	0		=			
ANR	1063449	Identifier	i		1063329	0					
ANR	1063450	PrimaryExpression	0		1063329	1					
ANR	1063451	Condition	i < npixels && cc > 0	277:13:10096:10116	1063329	1	True				
ANR	1063452	AndExpression	i < npixels && cc > 0		1063329	0		&&			
ANR	1063453	RelationalExpression	i < npixels		1063329	0		<			
ANR	1063454	Identifier	i		1063329	0					
ANR	1063455	Identifier	npixels		1063329	1					
ANR	1063456	RelationalExpression	cc > 0		1063329	1		>			
ANR	1063457	Identifier	cc		1063329	0					
ANR	1063458	PrimaryExpression	0		1063329	1					
ANR	1063459	PostIncDecOperationExpression	i ++	277:36:10119:10121	1063329	2	True				
ANR	1063460	Identifier	i		1063329	0					
ANR	1063461	IncDec	++		1063329	1					
ANR	1063462	CompoundStatement		24:41:511:511	1063329	3					
ANR	1063463	ExpressionStatement	tp [ i ] = bp [ 0 ] << 16 | bp [ 1 ] << 8 | bp [ 2 ]	278:2:10128:10168	1063329	0	True				
ANR	1063464	AssignmentExpression	tp [ i ] = bp [ 0 ] << 16 | bp [ 1 ] << 8 | bp [ 2 ]		1063329	0		=			
ANR	1063465	ArrayIndexing	tp [ i ]		1063329	0					
ANR	1063466	Identifier	tp		1063329	0					
ANR	1063467	Identifier	i		1063329	1					
ANR	1063468	InclusiveOrExpression	bp [ 0 ] << 16 | bp [ 1 ] << 8 | bp [ 2 ]		1063329	1		|			
ANR	1063469	ShiftExpression	bp [ 0 ] << 16		1063329	0		<<			
ANR	1063470	ArrayIndexing	bp [ 0 ]		1063329	0					
ANR	1063471	Identifier	bp		1063329	0					
ANR	1063472	PrimaryExpression	0		1063329	1					
ANR	1063473	PrimaryExpression	16		1063329	1					
ANR	1063474	InclusiveOrExpression	bp [ 1 ] << 8 | bp [ 2 ]		1063329	1		|			
ANR	1063475	ShiftExpression	bp [ 1 ] << 8		1063329	0		<<			
ANR	1063476	ArrayIndexing	bp [ 1 ]		1063329	0					
ANR	1063477	Identifier	bp		1063329	0					
ANR	1063478	PrimaryExpression	1		1063329	1					
ANR	1063479	PrimaryExpression	8		1063329	1					
ANR	1063480	ArrayIndexing	bp [ 2 ]		1063329	1					
ANR	1063481	Identifier	bp		1063329	0					
ANR	1063482	PrimaryExpression	2		1063329	1					
ANR	1063483	ExpressionStatement	bp += 3	279:2:10172:10179	1063329	1	True				
ANR	1063484	AssignmentExpression	bp += 3		1063329	0		+=			
ANR	1063485	Identifier	bp		1063329	0					
ANR	1063486	PrimaryExpression	3		1063329	1					
ANR	1063487	ExpressionStatement	cc -= 3	280:2:10183:10190	1063329	2	True				
ANR	1063488	AssignmentExpression	cc -= 3		1063329	0		-=			
ANR	1063489	Identifier	cc		1063329	0					
ANR	1063490	PrimaryExpression	3		1063329	1					
ANR	1063491	ExpressionStatement	tif -> tif_rawcp = ( uint8 * ) bp	282:1:10196:10224	1063329	15	True				
ANR	1063492	AssignmentExpression	tif -> tif_rawcp = ( uint8 * ) bp		1063329	0		=			
ANR	1063493	PtrMemberAccess	tif -> tif_rawcp		1063329	0					
ANR	1063494	Identifier	tif		1063329	0					
ANR	1063495	Identifier	tif_rawcp		1063329	1					
ANR	1063496	CastExpression	( uint8 * ) bp		1063329	1					
ANR	1063497	CastTarget	uint8 *		1063329	0					
ANR	1063498	Identifier	bp		1063329	1					
ANR	1063499	ExpressionStatement	tif -> tif_rawcc = cc	283:1:10227:10246	1063329	16	True				
ANR	1063500	AssignmentExpression	tif -> tif_rawcc = cc		1063329	0		=			
ANR	1063501	PtrMemberAccess	tif -> tif_rawcc		1063329	0					
ANR	1063502	Identifier	tif		1063329	0					
ANR	1063503	Identifier	tif_rawcc		1063329	1					
ANR	1063504	Identifier	cc		1063329	1					
ANR	1063505	IfStatement	if ( i != npixels )		1063329	17					
ANR	1063506	Condition	i != npixels	284:5:10253:10264	1063329	0	True				
ANR	1063507	EqualityExpression	i != npixels		1063329	0		!=			
ANR	1063508	Identifier	i		1063329	0					
ANR	1063509	Identifier	npixels		1063329	1					
ANR	1063510	CompoundStatement		31:19:654:654	1063329	1					
ANR	1063511	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Not enough data at row %lu (short %I64d pixels)"" , ( unsigned long ) tif -> tif_row , ( unsigned __int64 ) ( npixels - i ) )"	286:2:10341:10516	1063329	0	True				
ANR	1063512	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Not enough data at row %lu (short %I64d pixels)"" , ( unsigned long ) tif -> tif_row , ( unsigned __int64 ) ( npixels - i ) )"		1063329	0					
ANR	1063513	Callee	TIFFErrorExt		1063329	0					
ANR	1063514	Identifier	TIFFErrorExt		1063329	0					
ANR	1063515	ArgumentList	tif -> tif_clientdata		1063329	1					
ANR	1063516	Argument	tif -> tif_clientdata		1063329	0					
ANR	1063517	PtrMemberAccess	tif -> tif_clientdata		1063329	0					
ANR	1063518	Identifier	tif		1063329	0					
ANR	1063519	Identifier	tif_clientdata		1063329	1					
ANR	1063520	Argument	module		1063329	1					
ANR	1063521	Identifier	module		1063329	0					
ANR	1063522	Argument	"""Not enough data at row %lu (short %I64d pixels)"""		1063329	2					
ANR	1063523	PrimaryExpression	"""Not enough data at row %lu (short %I64d pixels)"""		1063329	0					
ANR	1063524	Argument	( unsigned long ) tif -> tif_row		1063329	3					
ANR	1063525	CastExpression	( unsigned long ) tif -> tif_row		1063329	0					
ANR	1063526	CastTarget	unsigned long		1063329	0					
ANR	1063527	PtrMemberAccess	tif -> tif_row		1063329	1					
ANR	1063528	Identifier	tif		1063329	0					
ANR	1063529	Identifier	tif_row		1063329	1					
ANR	1063530	Argument	( unsigned __int64 ) ( npixels - i )		1063329	4					
ANR	1063531	CastExpression	( unsigned __int64 ) ( npixels - i )		1063329	0					
ANR	1063532	CastTarget	unsigned __int64		1063329	0					
ANR	1063533	AdditiveExpression	npixels - i		1063329	1		-			
ANR	1063534	Identifier	npixels		1063329	0					
ANR	1063535	Identifier	i		1063329	1					
ANR	1063536	ReturnStatement	return ( 0 ) ;	296:2:10713:10723	1063329	1	True				
ANR	1063537	PrimaryExpression	0		1063329	0					
ANR	1063538	ExpressionStatement	"( * sp -> tfunc ) ( sp , op , npixels )"	298:1:10729:10758	1063329	18	True				
ANR	1063539	CallExpression	"( * sp -> tfunc ) ( sp , op , npixels )"		1063329	0					
ANR	1063540	Callee	* sp -> tfunc		1063329	0					
ANR	1063541	UnaryOperationExpression	* sp -> tfunc		1063329	0					
ANR	1063542	UnaryOperator	*		1063329	0					
ANR	1063543	PtrMemberAccess	sp -> tfunc		1063329	1					
ANR	1063544	Identifier	sp		1063329	0					
ANR	1063545	Identifier	tfunc		1063329	1					
ANR	1063546	ArgumentList	sp		1063329	1					
ANR	1063547	Argument	sp		1063329	0					
ANR	1063548	Identifier	sp		1063329	0					
ANR	1063549	Argument	op		1063329	1					
ANR	1063550	Identifier	op		1063329	0					
ANR	1063551	Argument	npixels		1063329	2					
ANR	1063552	Identifier	npixels		1063329	0					
ANR	1063553	ReturnStatement	return ( 1 ) ;	299:1:10761:10771	1063329	19	True				
ANR	1063554	PrimaryExpression	1		1063329	0					
ANR	1063555	ReturnType	static int		1063329	1					
ANR	1063556	Identifier	LogLuvDecode24		1063329	2					
ANR	1063557	ParameterList	"TIFF * tif , uint8 * op , tmsize_t occ , uint16 s"		1063329	3					
ANR	1063558	Parameter	TIFF * tif	253:15:9566:9574	1063329	0	True				
ANR	1063559	ParameterType	TIFF *		1063329	0					
ANR	1063560	Identifier	tif		1063329	1					
ANR	1063561	Parameter	uint8 * op	253:26:9577:9585	1063329	1	True				
ANR	1063562	ParameterType	uint8 *		1063329	0					
ANR	1063563	Identifier	op		1063329	1					
ANR	1063564	Parameter	tmsize_t occ	253:37:9588:9599	1063329	2	True				
ANR	1063565	ParameterType	tmsize_t		1063329	0					
ANR	1063566	Identifier	occ		1063329	1					
ANR	1063567	Parameter	uint16 s	253:51:9602:9609	1063329	3	True				
ANR	1063568	ParameterType	uint16		1063329	0					
ANR	1063569	Identifier	s		1063329	1					
ANR	1063570	CFGEntryNode	ENTRY		1063329		True				
ANR	1063571	CFGExitNode	EXIT		1063329		True				
ANR	1063572	Symbol	* sp		1063329						
ANR	1063573	Symbol	sp -> user_datafmt		1063329						
ANR	1063574	Symbol	SGILOGDATAFMT_RAW		1063329						
ANR	1063575	Symbol	occ		1063329						
ANR	1063576	Symbol	bp		1063329						
ANR	1063577	Symbol	tif		1063329						
ANR	1063578	Symbol	npixels		1063329						
ANR	1063579	Symbol	sp -> tbuflen		1063329						
ANR	1063580	Symbol	tif -> tif_rawcc		1063329						
ANR	1063581	Symbol	sp -> pixel_size		1063329						
ANR	1063582	Symbol	DecoderState		1063329						
ANR	1063583	Symbol	* bp		1063329						
ANR	1063584	Symbol	sp -> tbuf		1063329						
ANR	1063585	Symbol	sp -> tfunc		1063329						
ANR	1063586	Symbol	sp		1063329						
ANR	1063587	Symbol	cc		1063329						
ANR	1063588	Symbol	op		1063329						
ANR	1063589	Symbol	* tp		1063329						
ANR	1063590	Symbol	NULL		1063329						
ANR	1063591	Symbol	module		1063329						
ANR	1063592	Symbol	i		1063329						
ANR	1063593	Symbol	tif -> tif_row		1063329						
ANR	1063594	Symbol	tif -> tif_rawcp		1063329						
ANR	1063595	Symbol	tif -> tif_clientdata		1063329						
ANR	1063596	Symbol	s		1063329						
ANR	1063597	Symbol	* i		1063329						
ANR	1063598	Symbol	* tif		1063329						
ANR	1063599	Symbol	tp		1063329						
ANR	1063600	Function	LogLuvDecode32	305:0:10820:12573							
ANR	1063601	FunctionDef	"LogLuvDecode32 (TIFF * tif , uint8 * op , tmsize_t occ , uint16 s)"		1063600	0					
ANR	1063602	CompoundStatement		307:0:10892:12573	1063600	0					
ANR	1063603	Statement	static	308:1:10895:10900	1063600	0	True				
ANR	1063604	IdentifierDeclStatement	"const char module [ ] = ""LogLuvDecode32"" ;"	308:8:10902:10940	1063600	1	True				
ANR	1063605	IdentifierDecl	"module [ ] = ""LogLuvDecode32"""		1063600	0					
ANR	1063606	IdentifierDeclType	const char [ ]		1063600	0					
ANR	1063607	Identifier	module		1063600	1					
ANR	1063608	AssignmentExpression	"module [ ] = ""LogLuvDecode32"""		1063600	2		=			
ANR	1063609	Identifier	module		1063600	0					
ANR	1063610	PrimaryExpression	"""LogLuvDecode32"""		1063600	1					
ANR	1063611	IdentifierDeclStatement	LogLuvState * sp ;	309:1:10943:10958	1063600	2	True				
ANR	1063612	IdentifierDecl	* sp		1063600	0					
ANR	1063613	IdentifierDeclType	LogLuvState *		1063600	0					
ANR	1063614	Identifier	sp		1063600	1					
ANR	1063615	IdentifierDeclStatement	int shft ;	310:1:10961:10969	1063600	3	True				
ANR	1063616	IdentifierDecl	shft		1063600	0					
ANR	1063617	IdentifierDeclType	int		1063600	0					
ANR	1063618	Identifier	shft		1063600	1					
ANR	1063619	IdentifierDeclStatement	tmsize_t i ;	311:1:10972:10982	1063600	4	True				
ANR	1063620	IdentifierDecl	i		1063600	0					
ANR	1063621	IdentifierDeclType	tmsize_t		1063600	0					
ANR	1063622	Identifier	i		1063600	1					
ANR	1063623	IdentifierDeclStatement	tmsize_t npixels ;	312:1:10985:11001	1063600	5	True				
ANR	1063624	IdentifierDecl	npixels		1063600	0					
ANR	1063625	IdentifierDeclType	tmsize_t		1063600	0					
ANR	1063626	Identifier	npixels		1063600	1					
ANR	1063627	IdentifierDeclStatement	unsigned char * bp ;	313:1:11004:11021	1063600	6	True				
ANR	1063628	IdentifierDecl	* bp		1063600	0					
ANR	1063629	IdentifierDeclType	unsigned char *		1063600	0					
ANR	1063630	Identifier	bp		1063600	1					
ANR	1063631	IdentifierDeclStatement	uint32 * tp ;	314:1:11024:11034	1063600	7	True				
ANR	1063632	IdentifierDecl	* tp		1063600	0					
ANR	1063633	IdentifierDeclType	uint32 *		1063600	0					
ANR	1063634	Identifier	tp		1063600	1					
ANR	1063635	IdentifierDeclStatement	uint32 b ;	315:1:11037:11045	1063600	8	True				
ANR	1063636	IdentifierDecl	b		1063600	0					
ANR	1063637	IdentifierDeclType	uint32		1063600	0					
ANR	1063638	Identifier	b		1063600	1					
ANR	1063639	IdentifierDeclStatement	tmsize_t cc ;	316:1:11048:11059	1063600	9	True				
ANR	1063640	IdentifierDecl	cc		1063600	0					
ANR	1063641	IdentifierDeclType	tmsize_t		1063600	0					
ANR	1063642	Identifier	cc		1063600	1					
ANR	1063643	IdentifierDeclStatement	int rc ;	317:1:11062:11068	1063600	10	True				
ANR	1063644	IdentifierDecl	rc		1063600	0					
ANR	1063645	IdentifierDeclType	int		1063600	0					
ANR	1063646	Identifier	rc		1063600	1					
ANR	1063647	ExpressionStatement	assert ( s == 0 )	319:1:11072:11086	1063600	11	True				
ANR	1063648	CallExpression	assert ( s == 0 )		1063600	0					
ANR	1063649	Callee	assert		1063600	0					
ANR	1063650	Identifier	assert		1063600	0					
ANR	1063651	ArgumentList	s == 0		1063600	1					
ANR	1063652	Argument	s == 0		1063600	0					
ANR	1063653	EqualityExpression	s == 0		1063600	0		==			
ANR	1063654	Identifier	s		1063600	0					
ANR	1063655	PrimaryExpression	0		1063600	1					
ANR	1063656	ExpressionStatement	sp = DecoderState ( tif )	320:1:11089:11111	1063600	12	True				
ANR	1063657	AssignmentExpression	sp = DecoderState ( tif )		1063600	0		=			
ANR	1063658	Identifier	sp		1063600	0					
ANR	1063659	CallExpression	DecoderState ( tif )		1063600	1					
ANR	1063660	Callee	DecoderState		1063600	0					
ANR	1063661	Identifier	DecoderState		1063600	0					
ANR	1063662	ArgumentList	tif		1063600	1					
ANR	1063663	Argument	tif		1063600	0					
ANR	1063664	Identifier	tif		1063600	0					
ANR	1063665	ExpressionStatement	assert ( sp != NULL )	321:1:11114:11132	1063600	13	True				
ANR	1063666	CallExpression	assert ( sp != NULL )		1063600	0					
ANR	1063667	Callee	assert		1063600	0					
ANR	1063668	Identifier	assert		1063600	0					
ANR	1063669	ArgumentList	sp != NULL		1063600	1					
ANR	1063670	Argument	sp != NULL		1063600	0					
ANR	1063671	EqualityExpression	sp != NULL		1063600	0		!=			
ANR	1063672	Identifier	sp		1063600	0					
ANR	1063673	Identifier	NULL		1063600	1					
ANR	1063674	ExpressionStatement	npixels = occ / sp -> pixel_size	323:1:11136:11166	1063600	14	True				
ANR	1063675	AssignmentExpression	npixels = occ / sp -> pixel_size		1063600	0		=			
ANR	1063676	Identifier	npixels		1063600	0					
ANR	1063677	MultiplicativeExpression	occ / sp -> pixel_size		1063600	1		/			
ANR	1063678	Identifier	occ		1063600	0					
ANR	1063679	PtrMemberAccess	sp -> pixel_size		1063600	1					
ANR	1063680	Identifier	sp		1063600	0					
ANR	1063681	Identifier	pixel_size		1063600	1					
ANR	1063682	IfStatement	if ( sp -> user_datafmt == SGILOGDATAFMT_RAW )		1063600	15					
ANR	1063683	Condition	sp -> user_datafmt == SGILOGDATAFMT_RAW	325:5:11174:11210	1063600	0	True				
ANR	1063684	EqualityExpression	sp -> user_datafmt == SGILOGDATAFMT_RAW		1063600	0		==			
ANR	1063685	PtrMemberAccess	sp -> user_datafmt		1063600	0					
ANR	1063686	Identifier	sp		1063600	0					
ANR	1063687	Identifier	user_datafmt		1063600	1					
ANR	1063688	Identifier	SGILOGDATAFMT_RAW		1063600	1					
ANR	1063689	ExpressionStatement	tp = ( uint32 * ) op	326:2:11215:11232	1063600	1	True				
ANR	1063690	AssignmentExpression	tp = ( uint32 * ) op		1063600	0		=			
ANR	1063691	Identifier	tp		1063600	0					
ANR	1063692	CastExpression	( uint32 * ) op		1063600	1					
ANR	1063693	CastTarget	uint32 *		1063600	0					
ANR	1063694	Identifier	op		1063600	1					
ANR	1063695	ElseStatement	else		1063600	0					
ANR	1063696	CompoundStatement		21:6:347:347	1063600	0					
ANR	1063697	ExpressionStatement	assert ( sp -> tbuflen >= npixels )	328:2:11244:11274	1063600	0	True				
ANR	1063698	CallExpression	assert ( sp -> tbuflen >= npixels )		1063600	0					
ANR	1063699	Callee	assert		1063600	0					
ANR	1063700	Identifier	assert		1063600	0					
ANR	1063701	ArgumentList	sp -> tbuflen >= npixels		1063600	1					
ANR	1063702	Argument	sp -> tbuflen >= npixels		1063600	0					
ANR	1063703	RelationalExpression	sp -> tbuflen >= npixels		1063600	0		>=			
ANR	1063704	PtrMemberAccess	sp -> tbuflen		1063600	0					
ANR	1063705	Identifier	sp		1063600	0					
ANR	1063706	Identifier	tbuflen		1063600	1					
ANR	1063707	Identifier	npixels		1063600	1					
ANR	1063708	ExpressionStatement	tp = ( uint32 * ) sp -> tbuf	329:2:11278:11301	1063600	1	True				
ANR	1063709	AssignmentExpression	tp = ( uint32 * ) sp -> tbuf		1063600	0		=			
ANR	1063710	Identifier	tp		1063600	0					
ANR	1063711	CastExpression	( uint32 * ) sp -> tbuf		1063600	1					
ANR	1063712	CastTarget	uint32 *		1063600	0					
ANR	1063713	PtrMemberAccess	sp -> tbuf		1063600	1					
ANR	1063714	Identifier	sp		1063600	0					
ANR	1063715	Identifier	tbuf		1063600	1					
ANR	1063716	ExpressionStatement	"_TIFFmemset ( ( void * ) tp , 0 , npixels * sizeof ( tp [ 0 ] ) )"	331:1:11307:11357	1063600	16	True				
ANR	1063717	CallExpression	"_TIFFmemset ( ( void * ) tp , 0 , npixels * sizeof ( tp [ 0 ] ) )"		1063600	0					
ANR	1063718	Callee	_TIFFmemset		1063600	0					
ANR	1063719	Identifier	_TIFFmemset		1063600	0					
ANR	1063720	ArgumentList	( void * ) tp		1063600	1					
ANR	1063721	Argument	( void * ) tp		1063600	0					
ANR	1063722	CastExpression	( void * ) tp		1063600	0					
ANR	1063723	CastTarget	void *		1063600	0					
ANR	1063724	Identifier	tp		1063600	1					
ANR	1063725	Argument	0		1063600	1					
ANR	1063726	PrimaryExpression	0		1063600	0					
ANR	1063727	Argument	npixels * sizeof ( tp [ 0 ] )		1063600	2					
ANR	1063728	MultiplicativeExpression	npixels * sizeof ( tp [ 0 ] )		1063600	0		*			
ANR	1063729	Identifier	npixels		1063600	0					
ANR	1063730	SizeofExpression	sizeof ( tp [ 0 ] )		1063600	1					
ANR	1063731	Sizeof	sizeof		1063600	0					
ANR	1063732	ArrayIndexing	tp [ 0 ]		1063600	1					
ANR	1063733	Identifier	tp		1063600	0					
ANR	1063734	PrimaryExpression	0		1063600	1					
ANR	1063735	ExpressionStatement	bp = ( unsigned char * ) tif -> tif_rawcp	333:1:11361:11397	1063600	17	True				
ANR	1063736	AssignmentExpression	bp = ( unsigned char * ) tif -> tif_rawcp		1063600	0		=			
ANR	1063737	Identifier	bp		1063600	0					
ANR	1063738	CastExpression	( unsigned char * ) tif -> tif_rawcp		1063600	1					
ANR	1063739	CastTarget	unsigned char *		1063600	0					
ANR	1063740	PtrMemberAccess	tif -> tif_rawcp		1063600	1					
ANR	1063741	Identifier	tif		1063600	0					
ANR	1063742	Identifier	tif_rawcp		1063600	1					
ANR	1063743	ExpressionStatement	cc = tif -> tif_rawcc	334:1:11400:11419	1063600	18	True				
ANR	1063744	AssignmentExpression	cc = tif -> tif_rawcc		1063600	0		=			
ANR	1063745	Identifier	cc		1063600	0					
ANR	1063746	PtrMemberAccess	tif -> tif_rawcc		1063600	1					
ANR	1063747	Identifier	tif		1063600	0					
ANR	1063748	Identifier	tif_rawcc		1063600	1					
ANR	1063749	ForStatement	for ( shft = 4 * 8 ; ( shft -= 8 ) >= 0 ; )		1063600	19					
ANR	1063750	ForInit	shft = 4 * 8 ;	336:6:11455:11465	1063600	0	True				
ANR	1063751	AssignmentExpression	shft = 4 * 8		1063600	0		=			
ANR	1063752	Identifier	shft		1063600	0					
ANR	1063753	MultiplicativeExpression	4 * 8		1063600	1		*			
ANR	1063754	PrimaryExpression	4		1063600	0					
ANR	1063755	PrimaryExpression	8		1063600	1					
ANR	1063756	Condition	( shft -= 8 ) >= 0	336:18:11467:11482	1063600	1	True				
ANR	1063757	RelationalExpression	( shft -= 8 ) >= 0		1063600	0		>=			
ANR	1063758	AssignmentExpression	shft -= 8		1063600	0		-=			
ANR	1063759	Identifier	shft		1063600	0					
ANR	1063760	PrimaryExpression	8		1063600	1					
ANR	1063761	PrimaryExpression	0		1063600	1					
ANR	1063762	CompoundStatement		30:38:594:594	1063600	2					
ANR	1063763	ForStatement	for ( i = 0 ; i < npixels && cc > 0 ; )		1063600	0					
ANR	1063764	ForInit	i = 0 ;	337:7:11496:11501	1063600	0	True				
ANR	1063765	AssignmentExpression	i = 0		1063600	0		=			
ANR	1063766	Identifier	i		1063600	0					
ANR	1063767	PrimaryExpression	0		1063600	1					
ANR	1063768	Condition	i < npixels && cc > 0	337:14:11503:11523	1063600	1	True				
ANR	1063769	AndExpression	i < npixels && cc > 0		1063600	0		&&			
ANR	1063770	RelationalExpression	i < npixels		1063600	0		<			
ANR	1063771	Identifier	i		1063600	0					
ANR	1063772	Identifier	npixels		1063600	1					
ANR	1063773	RelationalExpression	cc > 0		1063600	1		>			
ANR	1063774	Identifier	cc		1063600	0					
ANR	1063775	PrimaryExpression	0		1063600	1					
ANR	1063776	IfStatement	if ( * bp >= 128 )		1063600	2					
ANR	1063777	Condition	* bp >= 128	338:7:11535:11544	1063600	0	True				
ANR	1063778	RelationalExpression	* bp >= 128		1063600	0		>=			
ANR	1063779	UnaryOperationExpression	* bp		1063600	0					
ANR	1063780	UnaryOperator	*		1063600	0					
ANR	1063781	Identifier	bp		1063600	1					
ANR	1063782	PrimaryExpression	128		1063600	1					
ANR	1063783	CompoundStatement		32:19:654:654	1063600	1					
ANR	1063784	ExpressionStatement	rc = * bp ++ + ( 2 - 128 )	339:4:11564:11584	1063600	0	True				
ANR	1063785	AssignmentExpression	rc = * bp ++ + ( 2 - 128 )		1063600	0		=			
ANR	1063786	Identifier	rc		1063600	0					
ANR	1063787	AdditiveExpression	* bp ++ + ( 2 - 128 )		1063600	1		+			
ANR	1063788	UnaryOperationExpression	* bp ++		1063600	0					
ANR	1063789	UnaryOperator	*		1063600	0					
ANR	1063790	PostIncDecOperationExpression	bp ++		1063600	1					
ANR	1063791	Identifier	bp		1063600	0					
ANR	1063792	IncDec	++		1063600	1					
ANR	1063793	AdditiveExpression	2 - 128		1063600	1		-			
ANR	1063794	PrimaryExpression	2		1063600	0					
ANR	1063795	PrimaryExpression	128		1063600	1					
ANR	1063796	ExpressionStatement	b = ( uint32 ) * bp ++ << shft	340:4:11590:11615	1063600	1	True				
ANR	1063797	AssignmentExpression	b = ( uint32 ) * bp ++ << shft		1063600	0		=			
ANR	1063798	Identifier	b		1063600	0					
ANR	1063799	ShiftExpression	( uint32 ) * bp ++ << shft		1063600	1		<<			
ANR	1063800	CastExpression	( uint32 ) * bp ++		1063600	0					
ANR	1063801	CastTarget	uint32		1063600	0					
ANR	1063802	UnaryOperationExpression	* bp ++		1063600	1					
ANR	1063803	UnaryOperator	*		1063600	0					
ANR	1063804	PostIncDecOperationExpression	bp ++		1063600	1					
ANR	1063805	Identifier	bp		1063600	0					
ANR	1063806	IncDec	++		1063600	1					
ANR	1063807	Identifier	shft		1063600	1					
ANR	1063808	ExpressionStatement	cc -= 2	341:4:11621:11628	1063600	2	True				
ANR	1063809	AssignmentExpression	cc -= 2		1063600	0		-=			
ANR	1063810	Identifier	cc		1063600	0					
ANR	1063811	PrimaryExpression	2		1063600	1					
ANR	1063812	WhileStatement	while ( rc -- && i < npixels )		1063600	3					
ANR	1063813	Condition	rc -- && i < npixels	342:11:11739:11757	1063600	0	True				
ANR	1063814	AndExpression	rc -- && i < npixels		1063600	0		&&			
ANR	1063815	PostIncDecOperationExpression	rc --		1063600	0					
ANR	1063816	Identifier	rc		1063600	0					
ANR	1063817	IncDec	--		1063600	1					
ANR	1063818	RelationalExpression	i < npixels		1063600	1		<			
ANR	1063819	Identifier	i		1063600	0					
ANR	1063820	Identifier	npixels		1063600	1					
ANR	1063821	ExpressionStatement	tp [ i ++ ] |= b	343:5:11765:11777	1063600	1	True				
ANR	1063822	AssignmentExpression	tp [ i ++ ] |= b		1063600	0		|=			
ANR	1063823	ArrayIndexing	tp [ i ++ ]		1063600	0					
ANR	1063824	Identifier	tp		1063600	0					
ANR	1063825	PostIncDecOperationExpression	i ++		1063600	1					
ANR	1063826	Identifier	i		1063600	0					
ANR	1063827	IncDec	++		1063600	1					
ANR	1063828	Identifier	b		1063600	1					
ANR	1063829	ElseStatement	else		1063600	0					
ANR	1063830	CompoundStatement		38:10:896:896	1063600	0					
ANR	1063831	ExpressionStatement	rc = * bp ++	345:4:11811:11821	1063600	0	True				
ANR	1063832	AssignmentExpression	rc = * bp ++		1063600	0		=			
ANR	1063833	Identifier	rc		1063600	0					
ANR	1063834	UnaryOperationExpression	* bp ++		1063600	1					
ANR	1063835	UnaryOperator	*		1063600	0					
ANR	1063836	PostIncDecOperationExpression	bp ++		1063600	1					
ANR	1063837	Identifier	bp		1063600	0					
ANR	1063838	IncDec	++		1063600	1					
ANR	1063839	WhileStatement	while ( -- cc && rc -- && i < npixels )		1063600	1					
ANR	1063840	Condition	-- cc && rc -- && i < npixels	346:11:11853:11879	1063600	0	True				
ANR	1063841	AndExpression	-- cc && rc -- && i < npixels		1063600	0		&&			
ANR	1063842	UnaryExpression	-- cc		1063600	0					
ANR	1063843	IncDec	--		1063600	0					
ANR	1063844	Identifier	cc		1063600	1					
ANR	1063845	AndExpression	rc -- && i < npixels		1063600	1		&&			
ANR	1063846	PostIncDecOperationExpression	rc --		1063600	0					
ANR	1063847	Identifier	rc		1063600	0					
ANR	1063848	IncDec	--		1063600	1					
ANR	1063849	RelationalExpression	i < npixels		1063600	1		<			
ANR	1063850	Identifier	i		1063600	0					
ANR	1063851	Identifier	npixels		1063600	1					
ANR	1063852	ExpressionStatement	tp [ i ++ ] |= ( uint32 ) * bp ++ << shft	347:5:11887:11919	1063600	1	True				
ANR	1063853	AssignmentExpression	tp [ i ++ ] |= ( uint32 ) * bp ++ << shft		1063600	0		|=			
ANR	1063854	ArrayIndexing	tp [ i ++ ]		1063600	0					
ANR	1063855	Identifier	tp		1063600	0					
ANR	1063856	PostIncDecOperationExpression	i ++		1063600	1					
ANR	1063857	Identifier	i		1063600	0					
ANR	1063858	IncDec	++		1063600	1					
ANR	1063859	ShiftExpression	( uint32 ) * bp ++ << shft		1063600	1		<<			
ANR	1063860	CastExpression	( uint32 ) * bp ++		1063600	0					
ANR	1063861	CastTarget	uint32		1063600	0					
ANR	1063862	UnaryOperationExpression	* bp ++		1063600	1					
ANR	1063863	UnaryOperator	*		1063600	0					
ANR	1063864	PostIncDecOperationExpression	bp ++		1063600	1					
ANR	1063865	Identifier	bp		1063600	0					
ANR	1063866	IncDec	++		1063600	1					
ANR	1063867	Identifier	shft		1063600	1					
ANR	1063868	IfStatement	if ( i != npixels )		1063600	1					
ANR	1063869	Condition	i != npixels	349:6:11932:11943	1063600	0	True				
ANR	1063870	EqualityExpression	i != npixels		1063600	0		!=			
ANR	1063871	Identifier	i		1063600	0					
ANR	1063872	Identifier	npixels		1063600	1					
ANR	1063873	CompoundStatement		43:20:1053:1053	1063600	1					
ANR	1063874	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Not enough data at row %lu (short %I64d pixels)"" , ( unsigned long ) tif -> tif_row , ( unsigned __int64 ) ( npixels - i ) )"	351:3:12021:12198	1063600	0	True				
ANR	1063875	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Not enough data at row %lu (short %I64d pixels)"" , ( unsigned long ) tif -> tif_row , ( unsigned __int64 ) ( npixels - i ) )"		1063600	0					
ANR	1063876	Callee	TIFFErrorExt		1063600	0					
ANR	1063877	Identifier	TIFFErrorExt		1063600	0					
ANR	1063878	ArgumentList	tif -> tif_clientdata		1063600	1					
ANR	1063879	Argument	tif -> tif_clientdata		1063600	0					
ANR	1063880	PtrMemberAccess	tif -> tif_clientdata		1063600	0					
ANR	1063881	Identifier	tif		1063600	0					
ANR	1063882	Identifier	tif_clientdata		1063600	1					
ANR	1063883	Argument	module		1063600	1					
ANR	1063884	Identifier	module		1063600	0					
ANR	1063885	Argument	"""Not enough data at row %lu (short %I64d pixels)"""		1063600	2					
ANR	1063886	PrimaryExpression	"""Not enough data at row %lu (short %I64d pixels)"""		1063600	0					
ANR	1063887	Argument	( unsigned long ) tif -> tif_row		1063600	3					
ANR	1063888	CastExpression	( unsigned long ) tif -> tif_row		1063600	0					
ANR	1063889	CastTarget	unsigned long		1063600	0					
ANR	1063890	PtrMemberAccess	tif -> tif_row		1063600	1					
ANR	1063891	Identifier	tif		1063600	0					
ANR	1063892	Identifier	tif_row		1063600	1					
ANR	1063893	Argument	( unsigned __int64 ) ( npixels - i )		1063600	4					
ANR	1063894	CastExpression	( unsigned __int64 ) ( npixels - i )		1063600	0					
ANR	1063895	CastTarget	unsigned __int64		1063600	0					
ANR	1063896	AdditiveExpression	npixels - i		1063600	1		-			
ANR	1063897	Identifier	npixels		1063600	0					
ANR	1063898	Identifier	i		1063600	1					
ANR	1063899	ExpressionStatement	tif -> tif_rawcp = ( uint8 * ) bp	361:3:12399:12427	1063600	1	True				
ANR	1063900	AssignmentExpression	tif -> tif_rawcp = ( uint8 * ) bp		1063600	0		=			
ANR	1063901	PtrMemberAccess	tif -> tif_rawcp		1063600	0					
ANR	1063902	Identifier	tif		1063600	0					
ANR	1063903	Identifier	tif_rawcp		1063600	1					
ANR	1063904	CastExpression	( uint8 * ) bp		1063600	1					
ANR	1063905	CastTarget	uint8 *		1063600	0					
ANR	1063906	Identifier	bp		1063600	1					
ANR	1063907	ExpressionStatement	tif -> tif_rawcc = cc	362:3:12432:12451	1063600	2	True				
ANR	1063908	AssignmentExpression	tif -> tif_rawcc = cc		1063600	0		=			
ANR	1063909	PtrMemberAccess	tif -> tif_rawcc		1063600	0					
ANR	1063910	Identifier	tif		1063600	0					
ANR	1063911	Identifier	tif_rawcc		1063600	1					
ANR	1063912	Identifier	cc		1063600	1					
ANR	1063913	ReturnStatement	return ( 0 ) ;	363:3:12456:12466	1063600	3	True				
ANR	1063914	PrimaryExpression	0		1063600	0					
ANR	1063915	ExpressionStatement	"( * sp -> tfunc ) ( sp , op , npixels )"	366:1:12476:12505	1063600	20	True				
ANR	1063916	CallExpression	"( * sp -> tfunc ) ( sp , op , npixels )"		1063600	0					
ANR	1063917	Callee	* sp -> tfunc		1063600	0					
ANR	1063918	UnaryOperationExpression	* sp -> tfunc		1063600	0					
ANR	1063919	UnaryOperator	*		1063600	0					
ANR	1063920	PtrMemberAccess	sp -> tfunc		1063600	1					
ANR	1063921	Identifier	sp		1063600	0					
ANR	1063922	Identifier	tfunc		1063600	1					
ANR	1063923	ArgumentList	sp		1063600	1					
ANR	1063924	Argument	sp		1063600	0					
ANR	1063925	Identifier	sp		1063600	0					
ANR	1063926	Argument	op		1063600	1					
ANR	1063927	Identifier	op		1063600	0					
ANR	1063928	Argument	npixels		1063600	2					
ANR	1063929	Identifier	npixels		1063600	0					
ANR	1063930	ExpressionStatement	tif -> tif_rawcp = ( uint8 * ) bp	367:1:12508:12536	1063600	21	True				
ANR	1063931	AssignmentExpression	tif -> tif_rawcp = ( uint8 * ) bp		1063600	0		=			
ANR	1063932	PtrMemberAccess	tif -> tif_rawcp		1063600	0					
ANR	1063933	Identifier	tif		1063600	0					
ANR	1063934	Identifier	tif_rawcp		1063600	1					
ANR	1063935	CastExpression	( uint8 * ) bp		1063600	1					
ANR	1063936	CastTarget	uint8 *		1063600	0					
ANR	1063937	Identifier	bp		1063600	1					
ANR	1063938	ExpressionStatement	tif -> tif_rawcc = cc	368:1:12539:12558	1063600	22	True				
ANR	1063939	AssignmentExpression	tif -> tif_rawcc = cc		1063600	0		=			
ANR	1063940	PtrMemberAccess	tif -> tif_rawcc		1063600	0					
ANR	1063941	Identifier	tif		1063600	0					
ANR	1063942	Identifier	tif_rawcc		1063600	1					
ANR	1063943	Identifier	cc		1063600	1					
ANR	1063944	ReturnStatement	return ( 1 ) ;	369:1:12561:12571	1063600	23	True				
ANR	1063945	PrimaryExpression	1		1063600	0					
ANR	1063946	ReturnType	static int		1063600	1					
ANR	1063947	Identifier	LogLuvDecode32		1063600	2					
ANR	1063948	ParameterList	"TIFF * tif , uint8 * op , tmsize_t occ , uint16 s"		1063600	3					
ANR	1063949	Parameter	TIFF * tif	306:15:10846:10854	1063600	0	True				
ANR	1063950	ParameterType	TIFF *		1063600	0					
ANR	1063951	Identifier	tif		1063600	1					
ANR	1063952	Parameter	uint8 * op	306:26:10857:10865	1063600	1	True				
ANR	1063953	ParameterType	uint8 *		1063600	0					
ANR	1063954	Identifier	op		1063600	1					
ANR	1063955	Parameter	tmsize_t occ	306:37:10868:10879	1063600	2	True				
ANR	1063956	ParameterType	tmsize_t		1063600	0					
ANR	1063957	Identifier	occ		1063600	1					
ANR	1063958	Parameter	uint16 s	306:51:10882:10889	1063600	3	True				
ANR	1063959	ParameterType	uint16		1063600	0					
ANR	1063960	Identifier	s		1063600	1					
ANR	1063961	CFGEntryNode	ENTRY		1063600		True				
ANR	1063962	CFGExitNode	EXIT		1063600		True				
ANR	1063963	Symbol	* sp		1063600						
ANR	1063964	Symbol	* bp ++		1063600						
ANR	1063965	Symbol	sp -> user_datafmt		1063600						
ANR	1063966	Symbol	SGILOGDATAFMT_RAW		1063600						
ANR	1063967	Symbol	occ		1063600						
ANR	1063968	Symbol	bp		1063600						
ANR	1063969	Symbol	tif		1063600						
ANR	1063970	Symbol	npixels		1063600						
ANR	1063971	Symbol	sp -> tbuflen		1063600						
ANR	1063972	Symbol	tif -> tif_rawcc		1063600						
ANR	1063973	Symbol	sp -> pixel_size		1063600						
ANR	1063974	Symbol	DecoderState		1063600						
ANR	1063975	Symbol	shft		1063600						
ANR	1063976	Symbol	* bp		1063600						
ANR	1063977	Symbol	sp -> tbuf		1063600						
ANR	1063978	Symbol	sp -> tfunc		1063600						
ANR	1063979	Symbol	sp		1063600						
ANR	1063980	Symbol	cc		1063600						
ANR	1063981	Symbol	op		1063600						
ANR	1063982	Symbol	* tp		1063600						
ANR	1063983	Symbol	b		1063600						
ANR	1063984	Symbol	NULL		1063600						
ANR	1063985	Symbol	module		1063600						
ANR	1063986	Symbol	i		1063600						
ANR	1063987	Symbol	tif -> tif_row		1063600						
ANR	1063988	Symbol	tif -> tif_rawcp		1063600						
ANR	1063989	Symbol	tif -> tif_clientdata		1063600						
ANR	1063990	Symbol	rc		1063600						
ANR	1063991	Symbol	s		1063600						
ANR	1063992	Symbol	* tif		1063600						
ANR	1063993	Symbol	tp		1063600						
ANR	1063994	Function	LogLuvDecodeStrip	377:0:12711:13013							
ANR	1063995	FunctionDef	"LogLuvDecodeStrip (TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s)"		1063994	0					
ANR	1063996	CompoundStatement		379:0:12785:13013	1063994	0					
ANR	1063997	IdentifierDeclStatement	tmsize_t rowlen = TIFFScanlineSize ( tif ) ;	380:1:12788:12827	1063994	0	True				
ANR	1063998	IdentifierDecl	rowlen = TIFFScanlineSize ( tif )		1063994	0					
ANR	1063999	IdentifierDeclType	tmsize_t		1063994	0					
ANR	1064000	Identifier	rowlen		1063994	1					
ANR	1064001	AssignmentExpression	rowlen = TIFFScanlineSize ( tif )		1063994	2		=			
ANR	1064002	Identifier	rowlen		1063994	0					
ANR	1064003	CallExpression	TIFFScanlineSize ( tif )		1063994	1					
ANR	1064004	Callee	TIFFScanlineSize		1063994	0					
ANR	1064005	Identifier	TIFFScanlineSize		1063994	0					
ANR	1064006	ArgumentList	tif		1063994	1					
ANR	1064007	Argument	tif		1063994	0					
ANR	1064008	Identifier	tif		1063994	0					
ANR	1064009	IfStatement	if ( rowlen == 0 )		1063994	1					
ANR	1064010	Condition	rowlen == 0	382:12:12842:12852	1063994	0	True				
ANR	1064011	EqualityExpression	rowlen == 0		1063994	0		==			
ANR	1064012	Identifier	rowlen		1063994	0					
ANR	1064013	PrimaryExpression	0		1063994	1					
ANR	1064014	ReturnStatement	return 0 ;	383:16:12871:12879	1063994	1	True				
ANR	1064015	PrimaryExpression	0		1063994	0					
ANR	1064016	ExpressionStatement	assert ( cc % rowlen == 0 )	385:1:12883:12905	1063994	2	True				
ANR	1064017	CallExpression	assert ( cc % rowlen == 0 )		1063994	0					
ANR	1064018	Callee	assert		1063994	0					
ANR	1064019	Identifier	assert		1063994	0					
ANR	1064020	ArgumentList	cc % rowlen == 0		1063994	1					
ANR	1064021	Argument	cc % rowlen == 0		1063994	0					
ANR	1064022	EqualityExpression	cc % rowlen == 0		1063994	0		==			
ANR	1064023	MultiplicativeExpression	cc % rowlen		1063994	0		%			
ANR	1064024	Identifier	cc		1063994	0					
ANR	1064025	Identifier	rowlen		1063994	1					
ANR	1064026	PrimaryExpression	0		1063994	1					
ANR	1064027	WhileStatement	"while ( cc && ( * tif -> tif_decoderow ) ( tif , bp , rowlen , s ) )"		1063994	3					
ANR	1064028	Condition	"cc && ( * tif -> tif_decoderow ) ( tif , bp , rowlen , s )"	386:8:12915:12961	1063994	0	True				
ANR	1064029	AndExpression	"cc && ( * tif -> tif_decoderow ) ( tif , bp , rowlen , s )"		1063994	0		&&			
ANR	1064030	Identifier	cc		1063994	0					
ANR	1064031	CallExpression	"( * tif -> tif_decoderow ) ( tif , bp , rowlen , s )"		1063994	1					
ANR	1064032	Callee	* tif -> tif_decoderow		1063994	0					
ANR	1064033	UnaryOperationExpression	* tif -> tif_decoderow		1063994	0					
ANR	1064034	UnaryOperator	*		1063994	0					
ANR	1064035	PtrMemberAccess	tif -> tif_decoderow		1063994	1					
ANR	1064036	Identifier	tif		1063994	0					
ANR	1064037	Identifier	tif_decoderow		1063994	1					
ANR	1064038	ArgumentList	tif		1063994	1					
ANR	1064039	Argument	tif		1063994	0					
ANR	1064040	Identifier	tif		1063994	0					
ANR	1064041	Argument	bp		1063994	1					
ANR	1064042	Identifier	bp		1063994	0					
ANR	1064043	Argument	rowlen		1063994	2					
ANR	1064044	Identifier	rowlen		1063994	0					
ANR	1064045	Argument	s		1063994	3					
ANR	1064046	Identifier	s		1063994	0					
ANR	1064047	ExpressionStatement	"bp += rowlen , cc -= rowlen"	387:2:12966:12992	1063994	1	True				
ANR	1064048	Expression	"bp += rowlen , cc -= rowlen"		1063994	0					
ANR	1064049	AssignmentExpression	bp += rowlen		1063994	0		+=			
ANR	1064050	Identifier	bp		1063994	0					
ANR	1064051	Identifier	rowlen		1063994	1					
ANR	1064052	AssignmentExpression	cc -= rowlen		1063994	1		-=			
ANR	1064053	Identifier	cc		1063994	0					
ANR	1064054	Identifier	rowlen		1063994	1					
ANR	1064055	ReturnStatement	return ( cc == 0 ) ;	388:1:12995:13011	1063994	4	True				
ANR	1064056	EqualityExpression	cc == 0		1063994	0		==			
ANR	1064057	Identifier	cc		1063994	0					
ANR	1064058	PrimaryExpression	0		1063994	1					
ANR	1064059	ReturnType	static int		1063994	1					
ANR	1064060	Identifier	LogLuvDecodeStrip		1063994	2					
ANR	1064061	ParameterList	"TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s"		1063994	3					
ANR	1064062	Parameter	TIFF * tif	378:18:12740:12748	1063994	0	True				
ANR	1064063	ParameterType	TIFF *		1063994	0					
ANR	1064064	Identifier	tif		1063994	1					
ANR	1064065	Parameter	uint8 * bp	378:29:12751:12759	1063994	1	True				
ANR	1064066	ParameterType	uint8 *		1063994	0					
ANR	1064067	Identifier	bp		1063994	1					
ANR	1064068	Parameter	tmsize_t cc	378:40:12762:12772	1063994	2	True				
ANR	1064069	ParameterType	tmsize_t		1063994	0					
ANR	1064070	Identifier	cc		1063994	1					
ANR	1064071	Parameter	uint16 s	378:53:12775:12782	1063994	3	True				
ANR	1064072	ParameterType	uint16		1063994	0					
ANR	1064073	Identifier	s		1063994	1					
ANR	1064074	CFGEntryNode	ENTRY		1063994		True				
ANR	1064075	CFGExitNode	EXIT		1063994		True				
ANR	1064076	Symbol	tif		1063994						
ANR	1064077	Symbol	cc		1063994						
ANR	1064078	Symbol	* tif -> tif_decoderow		1063994						
ANR	1064079	Symbol	TIFFScanlineSize		1063994						
ANR	1064080	Symbol	s		1063994						
ANR	1064081	Symbol	* * tif		1063994						
ANR	1064082	Symbol	rowlen		1063994						
ANR	1064083	Symbol	tif -> tif_decoderow		1063994						
ANR	1064084	Symbol	* tif		1063994						
ANR	1064085	Symbol	bp		1063994						
ANR	1064086	Function	LogLuvDecodeTile	396:0:13150:13450							
ANR	1064087	FunctionDef	"LogLuvDecodeTile (TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s)"		1064086	0					
ANR	1064088	CompoundStatement		398:0:13223:13450	1064086	0					
ANR	1064089	IdentifierDeclStatement	tmsize_t rowlen = TIFFTileRowSize ( tif ) ;	399:1:13226:13264	1064086	0	True				
ANR	1064090	IdentifierDecl	rowlen = TIFFTileRowSize ( tif )		1064086	0					
ANR	1064091	IdentifierDeclType	tmsize_t		1064086	0					
ANR	1064092	Identifier	rowlen		1064086	1					
ANR	1064093	AssignmentExpression	rowlen = TIFFTileRowSize ( tif )		1064086	2		=			
ANR	1064094	Identifier	rowlen		1064086	0					
ANR	1064095	CallExpression	TIFFTileRowSize ( tif )		1064086	1					
ANR	1064096	Callee	TIFFTileRowSize		1064086	0					
ANR	1064097	Identifier	TIFFTileRowSize		1064086	0					
ANR	1064098	ArgumentList	tif		1064086	1					
ANR	1064099	Argument	tif		1064086	0					
ANR	1064100	Identifier	tif		1064086	0					
ANR	1064101	IfStatement	if ( rowlen == 0 )		1064086	1					
ANR	1064102	Condition	rowlen == 0	401:12:13279:13289	1064086	0	True				
ANR	1064103	EqualityExpression	rowlen == 0		1064086	0		==			
ANR	1064104	Identifier	rowlen		1064086	0					
ANR	1064105	PrimaryExpression	0		1064086	1					
ANR	1064106	ReturnStatement	return 0 ;	402:16:13308:13316	1064086	1	True				
ANR	1064107	PrimaryExpression	0		1064086	0					
ANR	1064108	ExpressionStatement	assert ( cc % rowlen == 0 )	404:1:13320:13342	1064086	2	True				
ANR	1064109	CallExpression	assert ( cc % rowlen == 0 )		1064086	0					
ANR	1064110	Callee	assert		1064086	0					
ANR	1064111	Identifier	assert		1064086	0					
ANR	1064112	ArgumentList	cc % rowlen == 0		1064086	1					
ANR	1064113	Argument	cc % rowlen == 0		1064086	0					
ANR	1064114	EqualityExpression	cc % rowlen == 0		1064086	0		==			
ANR	1064115	MultiplicativeExpression	cc % rowlen		1064086	0		%			
ANR	1064116	Identifier	cc		1064086	0					
ANR	1064117	Identifier	rowlen		1064086	1					
ANR	1064118	PrimaryExpression	0		1064086	1					
ANR	1064119	WhileStatement	"while ( cc && ( * tif -> tif_decoderow ) ( tif , bp , rowlen , s ) )"		1064086	3					
ANR	1064120	Condition	"cc && ( * tif -> tif_decoderow ) ( tif , bp , rowlen , s )"	405:8:13352:13398	1064086	0	True				
ANR	1064121	AndExpression	"cc && ( * tif -> tif_decoderow ) ( tif , bp , rowlen , s )"		1064086	0		&&			
ANR	1064122	Identifier	cc		1064086	0					
ANR	1064123	CallExpression	"( * tif -> tif_decoderow ) ( tif , bp , rowlen , s )"		1064086	1					
ANR	1064124	Callee	* tif -> tif_decoderow		1064086	0					
ANR	1064125	UnaryOperationExpression	* tif -> tif_decoderow		1064086	0					
ANR	1064126	UnaryOperator	*		1064086	0					
ANR	1064127	PtrMemberAccess	tif -> tif_decoderow		1064086	1					
ANR	1064128	Identifier	tif		1064086	0					
ANR	1064129	Identifier	tif_decoderow		1064086	1					
ANR	1064130	ArgumentList	tif		1064086	1					
ANR	1064131	Argument	tif		1064086	0					
ANR	1064132	Identifier	tif		1064086	0					
ANR	1064133	Argument	bp		1064086	1					
ANR	1064134	Identifier	bp		1064086	0					
ANR	1064135	Argument	rowlen		1064086	2					
ANR	1064136	Identifier	rowlen		1064086	0					
ANR	1064137	Argument	s		1064086	3					
ANR	1064138	Identifier	s		1064086	0					
ANR	1064139	ExpressionStatement	"bp += rowlen , cc -= rowlen"	406:2:13403:13429	1064086	1	True				
ANR	1064140	Expression	"bp += rowlen , cc -= rowlen"		1064086	0					
ANR	1064141	AssignmentExpression	bp += rowlen		1064086	0		+=			
ANR	1064142	Identifier	bp		1064086	0					
ANR	1064143	Identifier	rowlen		1064086	1					
ANR	1064144	AssignmentExpression	cc -= rowlen		1064086	1		-=			
ANR	1064145	Identifier	cc		1064086	0					
ANR	1064146	Identifier	rowlen		1064086	1					
ANR	1064147	ReturnStatement	return ( cc == 0 ) ;	407:1:13432:13448	1064086	4	True				
ANR	1064148	EqualityExpression	cc == 0		1064086	0		==			
ANR	1064149	Identifier	cc		1064086	0					
ANR	1064150	PrimaryExpression	0		1064086	1					
ANR	1064151	ReturnType	static int		1064086	1					
ANR	1064152	Identifier	LogLuvDecodeTile		1064086	2					
ANR	1064153	ParameterList	"TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s"		1064086	3					
ANR	1064154	Parameter	TIFF * tif	397:17:13178:13186	1064086	0	True				
ANR	1064155	ParameterType	TIFF *		1064086	0					
ANR	1064156	Identifier	tif		1064086	1					
ANR	1064157	Parameter	uint8 * bp	397:28:13189:13197	1064086	1	True				
ANR	1064158	ParameterType	uint8 *		1064086	0					
ANR	1064159	Identifier	bp		1064086	1					
ANR	1064160	Parameter	tmsize_t cc	397:39:13200:13210	1064086	2	True				
ANR	1064161	ParameterType	tmsize_t		1064086	0					
ANR	1064162	Identifier	cc		1064086	1					
ANR	1064163	Parameter	uint16 s	397:52:13213:13220	1064086	3	True				
ANR	1064164	ParameterType	uint16		1064086	0					
ANR	1064165	Identifier	s		1064086	1					
ANR	1064166	CFGEntryNode	ENTRY		1064086		True				
ANR	1064167	CFGExitNode	EXIT		1064086		True				
ANR	1064168	Symbol	tif		1064086						
ANR	1064169	Symbol	cc		1064086						
ANR	1064170	Symbol	* tif -> tif_decoderow		1064086						
ANR	1064171	Symbol	s		1064086						
ANR	1064172	Symbol	* * tif		1064086						
ANR	1064173	Symbol	rowlen		1064086						
ANR	1064174	Symbol	TIFFTileRowSize		1064086						
ANR	1064175	Symbol	* tif		1064086						
ANR	1064176	Symbol	tif -> tif_decoderow		1064086						
ANR	1064177	Symbol	bp		1064086						
ANR	1064178	Function	LogL16Encode	413:0:13494:15617							
ANR	1064179	FunctionDef	"LogL16Encode (TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s)"		1064178	0					
ANR	1064180	CompoundStatement		415:0:13563:15617	1064178	0					
ANR	1064181	IdentifierDeclStatement	LogLuvState * sp = EncoderState ( tif ) ;	416:1:13566:13601	1064178	0	True				
ANR	1064182	IdentifierDecl	* sp = EncoderState ( tif )		1064178	0					
ANR	1064183	IdentifierDeclType	LogLuvState *		1064178	0					
ANR	1064184	Identifier	sp		1064178	1					
ANR	1064185	AssignmentExpression	* sp = EncoderState ( tif )		1064178	2		=			
ANR	1064186	Identifier	sp		1064178	0					
ANR	1064187	CallExpression	EncoderState ( tif )		1064178	1					
ANR	1064188	Callee	EncoderState		1064178	0					
ANR	1064189	Identifier	EncoderState		1064178	0					
ANR	1064190	ArgumentList	tif		1064178	1					
ANR	1064191	Argument	tif		1064178	0					
ANR	1064192	Identifier	tif		1064178	0					
ANR	1064193	IdentifierDeclStatement	int shft ;	417:1:13604:13612	1064178	1	True				
ANR	1064194	IdentifierDecl	shft		1064178	0					
ANR	1064195	IdentifierDeclType	int		1064178	0					
ANR	1064196	Identifier	shft		1064178	1					
ANR	1064197	IdentifierDeclStatement	tmsize_t i ;	418:1:13615:13625	1064178	2	True				
ANR	1064198	IdentifierDecl	i		1064178	0					
ANR	1064199	IdentifierDeclType	tmsize_t		1064178	0					
ANR	1064200	Identifier	i		1064178	1					
ANR	1064201	IdentifierDeclStatement	tmsize_t j ;	419:1:13628:13638	1064178	3	True				
ANR	1064202	IdentifierDecl	j		1064178	0					
ANR	1064203	IdentifierDeclType	tmsize_t		1064178	0					
ANR	1064204	Identifier	j		1064178	1					
ANR	1064205	IdentifierDeclStatement	tmsize_t npixels ;	420:1:13641:13657	1064178	4	True				
ANR	1064206	IdentifierDecl	npixels		1064178	0					
ANR	1064207	IdentifierDeclType	tmsize_t		1064178	0					
ANR	1064208	Identifier	npixels		1064178	1					
ANR	1064209	IdentifierDeclStatement	uint8 * op ;	421:1:13660:13669	1064178	5	True				
ANR	1064210	IdentifierDecl	* op		1064178	0					
ANR	1064211	IdentifierDeclType	uint8 *		1064178	0					
ANR	1064212	Identifier	op		1064178	1					
ANR	1064213	IdentifierDeclStatement	int16 * tp ;	422:1:13672:13681	1064178	6	True				
ANR	1064214	IdentifierDecl	* tp		1064178	0					
ANR	1064215	IdentifierDeclType	int16 *		1064178	0					
ANR	1064216	Identifier	tp		1064178	1					
ANR	1064217	IdentifierDeclStatement	int16 b ;	423:1:13684:13691	1064178	7	True				
ANR	1064218	IdentifierDecl	b		1064178	0					
ANR	1064219	IdentifierDeclType	int16		1064178	0					
ANR	1064220	Identifier	b		1064178	1					
ANR	1064221	IdentifierDeclStatement	tmsize_t occ ;	424:1:13694:13706	1064178	8	True				
ANR	1064222	IdentifierDecl	occ		1064178	0					
ANR	1064223	IdentifierDeclType	tmsize_t		1064178	0					
ANR	1064224	Identifier	occ		1064178	1					
ANR	1064225	IdentifierDeclStatement	"int rc = 0 , mask ;"	425:1:13709:13723	1064178	9	True				
ANR	1064226	IdentifierDecl	rc = 0		1064178	0					
ANR	1064227	IdentifierDeclType	int		1064178	0					
ANR	1064228	Identifier	rc		1064178	1					
ANR	1064229	AssignmentExpression	rc = 0		1064178	2		=			
ANR	1064230	Identifier	rc		1064178	0					
ANR	1064231	PrimaryExpression	0		1064178	1					
ANR	1064232	IdentifierDecl	mask		1064178	1					
ANR	1064233	IdentifierDeclType	int		1064178	0					
ANR	1064234	Identifier	mask		1064178	1					
ANR	1064235	IdentifierDeclStatement	tmsize_t beg ;	426:1:13726:13738	1064178	10	True				
ANR	1064236	IdentifierDecl	beg		1064178	0					
ANR	1064237	IdentifierDeclType	tmsize_t		1064178	0					
ANR	1064238	Identifier	beg		1064178	1					
ANR	1064239	ExpressionStatement	assert ( s == 0 )	428:1:13742:13756	1064178	11	True				
ANR	1064240	CallExpression	assert ( s == 0 )		1064178	0					
ANR	1064241	Callee	assert		1064178	0					
ANR	1064242	Identifier	assert		1064178	0					
ANR	1064243	ArgumentList	s == 0		1064178	1					
ANR	1064244	Argument	s == 0		1064178	0					
ANR	1064245	EqualityExpression	s == 0		1064178	0		==			
ANR	1064246	Identifier	s		1064178	0					
ANR	1064247	PrimaryExpression	0		1064178	1					
ANR	1064248	ExpressionStatement	assert ( sp != NULL )	429:1:13759:13777	1064178	12	True				
ANR	1064249	CallExpression	assert ( sp != NULL )		1064178	0					
ANR	1064250	Callee	assert		1064178	0					
ANR	1064251	Identifier	assert		1064178	0					
ANR	1064252	ArgumentList	sp != NULL		1064178	1					
ANR	1064253	Argument	sp != NULL		1064178	0					
ANR	1064254	EqualityExpression	sp != NULL		1064178	0		!=			
ANR	1064255	Identifier	sp		1064178	0					
ANR	1064256	Identifier	NULL		1064178	1					
ANR	1064257	ExpressionStatement	npixels = cc / sp -> pixel_size	430:1:13780:13809	1064178	13	True				
ANR	1064258	AssignmentExpression	npixels = cc / sp -> pixel_size		1064178	0		=			
ANR	1064259	Identifier	npixels		1064178	0					
ANR	1064260	MultiplicativeExpression	cc / sp -> pixel_size		1064178	1		/			
ANR	1064261	Identifier	cc		1064178	0					
ANR	1064262	PtrMemberAccess	sp -> pixel_size		1064178	1					
ANR	1064263	Identifier	sp		1064178	0					
ANR	1064264	Identifier	pixel_size		1064178	1					
ANR	1064265	IfStatement	if ( sp -> user_datafmt == SGILOGDATAFMT_16BIT )		1064178	14					
ANR	1064266	Condition	sp -> user_datafmt == SGILOGDATAFMT_16BIT	432:5:13817:13855	1064178	0	True				
ANR	1064267	EqualityExpression	sp -> user_datafmt == SGILOGDATAFMT_16BIT		1064178	0		==			
ANR	1064268	PtrMemberAccess	sp -> user_datafmt		1064178	0					
ANR	1064269	Identifier	sp		1064178	0					
ANR	1064270	Identifier	user_datafmt		1064178	1					
ANR	1064271	Identifier	SGILOGDATAFMT_16BIT		1064178	1					
ANR	1064272	ExpressionStatement	tp = ( int16 * ) bp	433:2:13860:13876	1064178	1	True				
ANR	1064273	AssignmentExpression	tp = ( int16 * ) bp		1064178	0		=			
ANR	1064274	Identifier	tp		1064178	0					
ANR	1064275	CastExpression	( int16 * ) bp		1064178	1					
ANR	1064276	CastTarget	int16 *		1064178	0					
ANR	1064277	Identifier	bp		1064178	1					
ANR	1064278	ElseStatement	else		1064178	0					
ANR	1064279	CompoundStatement		20:6:320:320	1064178	0					
ANR	1064280	ExpressionStatement	tp = ( int16 * ) sp -> tbuf	435:2:13888:13910	1064178	0	True				
ANR	1064281	AssignmentExpression	tp = ( int16 * ) sp -> tbuf		1064178	0		=			
ANR	1064282	Identifier	tp		1064178	0					
ANR	1064283	CastExpression	( int16 * ) sp -> tbuf		1064178	1					
ANR	1064284	CastTarget	int16 *		1064178	0					
ANR	1064285	PtrMemberAccess	sp -> tbuf		1064178	1					
ANR	1064286	Identifier	sp		1064178	0					
ANR	1064287	Identifier	tbuf		1064178	1					
ANR	1064288	ExpressionStatement	assert ( sp -> tbuflen >= npixels )	436:2:13914:13944	1064178	1	True				
ANR	1064289	CallExpression	assert ( sp -> tbuflen >= npixels )		1064178	0					
ANR	1064290	Callee	assert		1064178	0					
ANR	1064291	Identifier	assert		1064178	0					
ANR	1064292	ArgumentList	sp -> tbuflen >= npixels		1064178	1					
ANR	1064293	Argument	sp -> tbuflen >= npixels		1064178	0					
ANR	1064294	RelationalExpression	sp -> tbuflen >= npixels		1064178	0		>=			
ANR	1064295	PtrMemberAccess	sp -> tbuflen		1064178	0					
ANR	1064296	Identifier	sp		1064178	0					
ANR	1064297	Identifier	tbuflen		1064178	1					
ANR	1064298	Identifier	npixels		1064178	1					
ANR	1064299	ExpressionStatement	"( * sp -> tfunc ) ( sp , bp , npixels )"	437:2:13948:13977	1064178	2	True				
ANR	1064300	CallExpression	"( * sp -> tfunc ) ( sp , bp , npixels )"		1064178	0					
ANR	1064301	Callee	* sp -> tfunc		1064178	0					
ANR	1064302	UnaryOperationExpression	* sp -> tfunc		1064178	0					
ANR	1064303	UnaryOperator	*		1064178	0					
ANR	1064304	PtrMemberAccess	sp -> tfunc		1064178	1					
ANR	1064305	Identifier	sp		1064178	0					
ANR	1064306	Identifier	tfunc		1064178	1					
ANR	1064307	ArgumentList	sp		1064178	1					
ANR	1064308	Argument	sp		1064178	0					
ANR	1064309	Identifier	sp		1064178	0					
ANR	1064310	Argument	bp		1064178	1					
ANR	1064311	Identifier	bp		1064178	0					
ANR	1064312	Argument	npixels		1064178	2					
ANR	1064313	Identifier	npixels		1064178	0					
ANR	1064314	ExpressionStatement	op = tif -> tif_rawcp	440:1:14016:14035	1064178	15	True				
ANR	1064315	AssignmentExpression	op = tif -> tif_rawcp		1064178	0		=			
ANR	1064316	Identifier	op		1064178	0					
ANR	1064317	PtrMemberAccess	tif -> tif_rawcp		1064178	1					
ANR	1064318	Identifier	tif		1064178	0					
ANR	1064319	Identifier	tif_rawcp		1064178	1					
ANR	1064320	ExpressionStatement	occ = tif -> tif_rawdatasize - tif -> tif_rawcc	441:1:14038:14081	1064178	16	True				
ANR	1064321	AssignmentExpression	occ = tif -> tif_rawdatasize - tif -> tif_rawcc		1064178	0		=			
ANR	1064322	Identifier	occ		1064178	0					
ANR	1064323	AdditiveExpression	tif -> tif_rawdatasize - tif -> tif_rawcc		1064178	1		-			
ANR	1064324	PtrMemberAccess	tif -> tif_rawdatasize		1064178	0					
ANR	1064325	Identifier	tif		1064178	0					
ANR	1064326	Identifier	tif_rawdatasize		1064178	1					
ANR	1064327	PtrMemberAccess	tif -> tif_rawcc		1064178	1					
ANR	1064328	Identifier	tif		1064178	0					
ANR	1064329	Identifier	tif_rawcc		1064178	1					
ANR	1064330	ForStatement	for ( shft = 2 * 8 ; ( shft -= 8 ) >= 0 ; )		1064178	17					
ANR	1064331	ForInit	shft = 2 * 8 ;	442:6:14089:14099	1064178	0	True				
ANR	1064332	AssignmentExpression	shft = 2 * 8		1064178	0		=			
ANR	1064333	Identifier	shft		1064178	0					
ANR	1064334	MultiplicativeExpression	2 * 8		1064178	1		*			
ANR	1064335	PrimaryExpression	2		1064178	0					
ANR	1064336	PrimaryExpression	8		1064178	1					
ANR	1064337	Condition	( shft -= 8 ) >= 0	442:18:14101:14116	1064178	1	True				
ANR	1064338	RelationalExpression	( shft -= 8 ) >= 0		1064178	0		>=			
ANR	1064339	AssignmentExpression	shft -= 8		1064178	0		-=			
ANR	1064340	Identifier	shft		1064178	0					
ANR	1064341	PrimaryExpression	8		1064178	1					
ANR	1064342	PrimaryExpression	0		1064178	1					
ANR	1064343	ForStatement	for ( i = 0 ; i < npixels ; i += rc )		1064178	2					
ANR	1064344	ForInit	i = 0 ;	443:7:14128:14133	1064178	0	True				
ANR	1064345	AssignmentExpression	i = 0		1064178	0		=			
ANR	1064346	Identifier	i		1064178	0					
ANR	1064347	PrimaryExpression	0		1064178	1					
ANR	1064348	Condition	i < npixels	443:14:14135:14145	1064178	1	True				
ANR	1064349	RelationalExpression	i < npixels		1064178	0		<			
ANR	1064350	Identifier	i		1064178	0					
ANR	1064351	Identifier	npixels		1064178	1					
ANR	1064352	AssignmentExpression	i += rc	443:27:14148:14154	1064178	2	True	+=			
ANR	1064353	Identifier	i		1064178	0					
ANR	1064354	Identifier	rc		1064178	1					
ANR	1064355	CompoundStatement		29:36:593:593	1064178	3					
ANR	1064356	IfStatement	if ( occ < 4 )		1064178	0					
ANR	1064357	Condition	occ < 4	444:7:14166:14172	1064178	0	True				
ANR	1064358	RelationalExpression	occ < 4		1064178	0		<			
ANR	1064359	Identifier	occ		1064178	0					
ANR	1064360	PrimaryExpression	4		1064178	1					
ANR	1064361	CompoundStatement		30:16:611:611	1064178	1					
ANR	1064362	ExpressionStatement	tif -> tif_rawcp = op	445:4:14181:14200	1064178	0	True				
ANR	1064363	AssignmentExpression	tif -> tif_rawcp = op		1064178	0		=			
ANR	1064364	PtrMemberAccess	tif -> tif_rawcp		1064178	0					
ANR	1064365	Identifier	tif		1064178	0					
ANR	1064366	Identifier	tif_rawcp		1064178	1					
ANR	1064367	Identifier	op		1064178	1					
ANR	1064368	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - occ	446:4:14206:14249	1064178	1	True				
ANR	1064369	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - occ		1064178	0		=			
ANR	1064370	PtrMemberAccess	tif -> tif_rawcc		1064178	0					
ANR	1064371	Identifier	tif		1064178	0					
ANR	1064372	Identifier	tif_rawcc		1064178	1					
ANR	1064373	AdditiveExpression	tif -> tif_rawdatasize - occ		1064178	1		-			
ANR	1064374	PtrMemberAccess	tif -> tif_rawdatasize		1064178	0					
ANR	1064375	Identifier	tif		1064178	0					
ANR	1064376	Identifier	tif_rawdatasize		1064178	1					
ANR	1064377	Identifier	occ		1064178	1					
ANR	1064378	IfStatement	if ( ! TIFFFlushData1 ( tif ) )		1064178	2					
ANR	1064379	Condition	! TIFFFlushData1 ( tif )	447:8:14259:14278	1064178	0	True				
ANR	1064380	UnaryOperationExpression	! TIFFFlushData1 ( tif )		1064178	0					
ANR	1064381	UnaryOperator	!		1064178	0					
ANR	1064382	CallExpression	TIFFFlushData1 ( tif )		1064178	1					
ANR	1064383	Callee	TIFFFlushData1		1064178	0					
ANR	1064384	Identifier	TIFFFlushData1		1064178	0					
ANR	1064385	ArgumentList	tif		1064178	1					
ANR	1064386	Argument	tif		1064178	0					
ANR	1064387	Identifier	tif		1064178	0					
ANR	1064388	ReturnStatement	return ( - 1 ) ;	448:5:14286:14297	1064178	1	True				
ANR	1064389	UnaryOperationExpression	- 1		1064178	0					
ANR	1064390	UnaryOperator	-		1064178	0					
ANR	1064391	PrimaryExpression	1		1064178	1					
ANR	1064392	ExpressionStatement	op = tif -> tif_rawcp	449:4:14303:14322	1064178	3	True				
ANR	1064393	AssignmentExpression	op = tif -> tif_rawcp		1064178	0		=			
ANR	1064394	Identifier	op		1064178	0					
ANR	1064395	PtrMemberAccess	tif -> tif_rawcp		1064178	1					
ANR	1064396	Identifier	tif		1064178	0					
ANR	1064397	Identifier	tif_rawcp		1064178	1					
ANR	1064398	ExpressionStatement	occ = tif -> tif_rawdatasize - tif -> tif_rawcc	450:4:14328:14371	1064178	4	True				
ANR	1064399	AssignmentExpression	occ = tif -> tif_rawdatasize - tif -> tif_rawcc		1064178	0		=			
ANR	1064400	Identifier	occ		1064178	0					
ANR	1064401	AdditiveExpression	tif -> tif_rawdatasize - tif -> tif_rawcc		1064178	1		-			
ANR	1064402	PtrMemberAccess	tif -> tif_rawdatasize		1064178	0					
ANR	1064403	Identifier	tif		1064178	0					
ANR	1064404	Identifier	tif_rawdatasize		1064178	1					
ANR	1064405	PtrMemberAccess	tif -> tif_rawcc		1064178	1					
ANR	1064406	Identifier	tif		1064178	0					
ANR	1064407	Identifier	tif_rawcc		1064178	1					
ANR	1064408	ExpressionStatement	mask = 0xff << shft	452:3:14381:14400	1064178	1	True				
ANR	1064409	AssignmentExpression	mask = 0xff << shft		1064178	0		=			
ANR	1064410	Identifier	mask		1064178	0					
ANR	1064411	ShiftExpression	0xff << shft		1064178	1		<<			
ANR	1064412	PrimaryExpression	0xff		1064178	0					
ANR	1064413	Identifier	shft		1064178	1					
ANR	1064414	ForStatement	for ( beg = i ; beg < npixels ; beg += rc )		1064178	2					
ANR	1064415	ForInit	beg = i ;	453:8:14431:14438	1064178	0	True				
ANR	1064416	AssignmentExpression	beg = i		1064178	0		=			
ANR	1064417	Identifier	beg		1064178	0					
ANR	1064418	Identifier	i		1064178	1					
ANR	1064419	Condition	beg < npixels	453:17:14440:14452	1064178	1	True				
ANR	1064420	RelationalExpression	beg < npixels		1064178	0		<			
ANR	1064421	Identifier	beg		1064178	0					
ANR	1064422	Identifier	npixels		1064178	1					
ANR	1064423	AssignmentExpression	beg += rc	453:32:14455:14463	1064178	2	True	+=			
ANR	1064424	Identifier	beg		1064178	0					
ANR	1064425	Identifier	rc		1064178	1					
ANR	1064426	CompoundStatement		39:43:902:902	1064178	3					
ANR	1064427	ExpressionStatement	b = ( int16 ) ( tp [ beg ] & mask )	454:4:14472:14500	1064178	0	True				
ANR	1064428	AssignmentExpression	b = ( int16 ) ( tp [ beg ] & mask )		1064178	0		=			
ANR	1064429	Identifier	b		1064178	0					
ANR	1064430	CastExpression	( int16 ) ( tp [ beg ] & mask )		1064178	1					
ANR	1064431	CastTarget	int16		1064178	0					
ANR	1064432	BitAndExpression	tp [ beg ] & mask		1064178	1		&			
ANR	1064433	ArrayIndexing	tp [ beg ]		1064178	0					
ANR	1064434	Identifier	tp		1064178	0					
ANR	1064435	Identifier	beg		1064178	1					
ANR	1064436	Identifier	mask		1064178	1					
ANR	1064437	ExpressionStatement	rc = 1	455:4:14506:14512	1064178	1	True				
ANR	1064438	AssignmentExpression	rc = 1		1064178	0		=			
ANR	1064439	Identifier	rc		1064178	0					
ANR	1064440	PrimaryExpression	1		1064178	1					
ANR	1064441	WhileStatement	while ( rc < 127 + 2 && beg + rc < npixels && ( tp [ beg + rc ] & mask ) == b )		1064178	2					
ANR	1064442	Condition	rc < 127 + 2 && beg + rc < npixels && ( tp [ beg + rc ] & mask ) == b	456:11:14525:14590	1064178	0	True				
ANR	1064443	AndExpression	rc < 127 + 2 && beg + rc < npixels && ( tp [ beg + rc ] & mask ) == b		1064178	0		&&			
ANR	1064444	RelationalExpression	rc < 127 + 2		1064178	0		<			
ANR	1064445	Identifier	rc		1064178	0					
ANR	1064446	AdditiveExpression	127 + 2		1064178	1		+			
ANR	1064447	PrimaryExpression	127		1064178	0					
ANR	1064448	PrimaryExpression	2		1064178	1					
ANR	1064449	AndExpression	beg + rc < npixels && ( tp [ beg + rc ] & mask ) == b		1064178	1		&&			
ANR	1064450	RelationalExpression	beg + rc < npixels		1064178	0		<			
ANR	1064451	AdditiveExpression	beg + rc		1064178	0		+			
ANR	1064452	Identifier	beg		1064178	0					
ANR	1064453	Identifier	rc		1064178	1					
ANR	1064454	Identifier	npixels		1064178	1					
ANR	1064455	EqualityExpression	( tp [ beg + rc ] & mask ) == b		1064178	1		==			
ANR	1064456	BitAndExpression	tp [ beg + rc ] & mask		1064178	0		&			
ANR	1064457	ArrayIndexing	tp [ beg + rc ]		1064178	0					
ANR	1064458	Identifier	tp		1064178	0					
ANR	1064459	AdditiveExpression	beg + rc		1064178	1		+			
ANR	1064460	Identifier	beg		1064178	0					
ANR	1064461	Identifier	rc		1064178	1					
ANR	1064462	Identifier	mask		1064178	1					
ANR	1064463	Identifier	b		1064178	1					
ANR	1064464	ExpressionStatement	rc ++	458:5:14598:14602	1064178	1	True				
ANR	1064465	PostIncDecOperationExpression	rc ++		1064178	0					
ANR	1064466	Identifier	rc		1064178	0					
ANR	1064467	IncDec	++		1064178	1					
ANR	1064468	IfStatement	if ( rc >= MINRUN )		1064178	3					
ANR	1064469	Condition	rc >= MINRUN	459:8:14612:14623	1064178	0	True				
ANR	1064470	RelationalExpression	rc >= MINRUN		1064178	0		>=			
ANR	1064471	Identifier	rc		1064178	0					
ANR	1064472	Identifier	MINRUN		1064178	1					
ANR	1064473	BreakStatement	break ;	460:5:14631:14636	1064178	1	True				
ANR	1064474	IfStatement	if ( beg - i > 1 && beg - i < MINRUN )		1064178	3					
ANR	1064475	Condition	beg - i > 1 && beg - i < MINRUN	462:7:14669:14695	1064178	0	True				
ANR	1064476	AndExpression	beg - i > 1 && beg - i < MINRUN		1064178	0		&&			
ANR	1064477	RelationalExpression	beg - i > 1		1064178	0		>			
ANR	1064478	AdditiveExpression	beg - i		1064178	0		-			
ANR	1064479	Identifier	beg		1064178	0					
ANR	1064480	Identifier	i		1064178	1					
ANR	1064481	PrimaryExpression	1		1064178	1					
ANR	1064482	RelationalExpression	beg - i < MINRUN		1064178	1		<			
ANR	1064483	AdditiveExpression	beg - i		1064178	0		-			
ANR	1064484	Identifier	beg		1064178	0					
ANR	1064485	Identifier	i		1064178	1					
ANR	1064486	Identifier	MINRUN		1064178	1					
ANR	1064487	CompoundStatement		48:36:1134:1134	1064178	1					
ANR	1064488	ExpressionStatement	b = ( int16 ) ( tp [ i ] & mask )	463:4:14704:14730	1064178	0	True				
ANR	1064489	AssignmentExpression	b = ( int16 ) ( tp [ i ] & mask )		1064178	0		=			
ANR	1064490	Identifier	b		1064178	0					
ANR	1064491	CastExpression	( int16 ) ( tp [ i ] & mask )		1064178	1					
ANR	1064492	CastTarget	int16		1064178	0					
ANR	1064493	BitAndExpression	tp [ i ] & mask		1064178	1		&			
ANR	1064494	ArrayIndexing	tp [ i ]		1064178	0					
ANR	1064495	Identifier	tp		1064178	0					
ANR	1064496	Identifier	i		1064178	1					
ANR	1064497	Identifier	mask		1064178	1					
ANR	1064498	ExpressionStatement	j = i + 1	464:4:14756:14763	1064178	1	True				
ANR	1064499	AssignmentExpression	j = i + 1		1064178	0		=			
ANR	1064500	Identifier	j		1064178	0					
ANR	1064501	AdditiveExpression	i + 1		1064178	1		+			
ANR	1064502	Identifier	i		1064178	0					
ANR	1064503	PrimaryExpression	1		1064178	1					
ANR	1064504	WhileStatement	while ( ( tp [ j ++ ] & mask ) == b )		1064178	2					
ANR	1064505	Condition	( tp [ j ++ ] & mask ) == b	465:11:14776:14796	1064178	0	True				
ANR	1064506	EqualityExpression	( tp [ j ++ ] & mask ) == b		1064178	0		==			
ANR	1064507	BitAndExpression	tp [ j ++ ] & mask		1064178	0		&			
ANR	1064508	ArrayIndexing	tp [ j ++ ]		1064178	0					
ANR	1064509	Identifier	tp		1064178	0					
ANR	1064510	PostIncDecOperationExpression	j ++		1064178	1					
ANR	1064511	Identifier	j		1064178	0					
ANR	1064512	IncDec	++		1064178	1					
ANR	1064513	Identifier	mask		1064178	1					
ANR	1064514	Identifier	b		1064178	1					
ANR	1064515	IfStatement	if ( j == beg )		1064178	1					
ANR	1064516	Condition	j == beg	466:9:14808:14815	1064178	0	True				
ANR	1064517	EqualityExpression	j == beg		1064178	0		==			
ANR	1064518	Identifier	j		1064178	0					
ANR	1064519	Identifier	beg		1064178	1					
ANR	1064520	CompoundStatement		52:19:1254:1254	1064178	1					
ANR	1064521	ExpressionStatement	* op ++ = ( uint8 ) ( 128 - 2 + j - i )	467:6:14826:14852	1064178	0	True				
ANR	1064522	AssignmentExpression	* op ++ = ( uint8 ) ( 128 - 2 + j - i )		1064178	0		=			
ANR	1064523	UnaryOperationExpression	* op ++		1064178	0					
ANR	1064524	UnaryOperator	*		1064178	0					
ANR	1064525	PostIncDecOperationExpression	op ++		1064178	1					
ANR	1064526	Identifier	op		1064178	0					
ANR	1064527	IncDec	++		1064178	1					
ANR	1064528	CastExpression	( uint8 ) ( 128 - 2 + j - i )		1064178	1					
ANR	1064529	CastTarget	uint8		1064178	0					
ANR	1064530	AdditiveExpression	128 - 2 + j - i		1064178	1		-			
ANR	1064531	PrimaryExpression	128		1064178	0					
ANR	1064532	AdditiveExpression	2 + j - i		1064178	1		+			
ANR	1064533	PrimaryExpression	2		1064178	0					
ANR	1064534	AdditiveExpression	j - i		1064178	1		-			
ANR	1064535	Identifier	j		1064178	0					
ANR	1064536	Identifier	i		1064178	1					
ANR	1064537	ExpressionStatement	* op ++ = ( uint8 ) ( b >> shft )	468:6:14860:14886	1064178	1	True				
ANR	1064538	AssignmentExpression	* op ++ = ( uint8 ) ( b >> shft )		1064178	0		=			
ANR	1064539	UnaryOperationExpression	* op ++		1064178	0					
ANR	1064540	UnaryOperator	*		1064178	0					
ANR	1064541	PostIncDecOperationExpression	op ++		1064178	1					
ANR	1064542	Identifier	op		1064178	0					
ANR	1064543	IncDec	++		1064178	1					
ANR	1064544	CastExpression	( uint8 ) ( b >> shft )		1064178	1					
ANR	1064545	CastTarget	uint8		1064178	0					
ANR	1064546	ShiftExpression	b >> shft		1064178	1		>>			
ANR	1064547	Identifier	b		1064178	0					
ANR	1064548	Identifier	shft		1064178	1					
ANR	1064549	ExpressionStatement	occ -= 2	469:6:14894:14902	1064178	2	True				
ANR	1064550	AssignmentExpression	occ -= 2		1064178	0		-=			
ANR	1064551	Identifier	occ		1064178	0					
ANR	1064552	PrimaryExpression	2		1064178	1					
ANR	1064553	ExpressionStatement	i = beg	470:6:14910:14917	1064178	3	True				
ANR	1064554	AssignmentExpression	i = beg		1064178	0		=			
ANR	1064555	Identifier	i		1064178	0					
ANR	1064556	Identifier	beg		1064178	1					
ANR	1064557	BreakStatement	break ;	471:6:14925:14930	1064178	4	True				
ANR	1064558	WhileStatement	while ( i < beg )		1064178	4					
ANR	1064559	Condition	i < beg	474:10:14954:14960	1064178	0	True				
ANR	1064560	RelationalExpression	i < beg		1064178	0		<			
ANR	1064561	Identifier	i		1064178	0					
ANR	1064562	Identifier	beg		1064178	1					
ANR	1064563	CompoundStatement		60:19:1399:1399	1064178	1					
ANR	1064564	IfStatement	if ( ( j = beg - i ) > 127 )		1064178	0					
ANR	1064565	Condition	( j = beg - i ) > 127	475:8:14998:15014	1064178	0	True				
ANR	1064566	RelationalExpression	( j = beg - i ) > 127		1064178	0		>			
ANR	1064567	AssignmentExpression	j = beg - i		1064178	0		=			
ANR	1064568	Identifier	j		1064178	0					
ANR	1064569	AdditiveExpression	beg - i		1064178	1		-			
ANR	1064570	Identifier	beg		1064178	0					
ANR	1064571	Identifier	i		1064178	1					
ANR	1064572	PrimaryExpression	127		1064178	1					
ANR	1064573	ExpressionStatement	j = 127	475:27:15017:15024	1064178	1	True				
ANR	1064574	AssignmentExpression	j = 127		1064178	0		=			
ANR	1064575	Identifier	j		1064178	0					
ANR	1064576	PrimaryExpression	127		1064178	1					
ANR	1064577	IfStatement	if ( occ < j + 3 )		1064178	1					
ANR	1064578	Condition	occ < j + 3	476:8:15034:15042	1064178	0	True				
ANR	1064579	RelationalExpression	occ < j + 3		1064178	0		<			
ANR	1064580	Identifier	occ		1064178	0					
ANR	1064581	AdditiveExpression	j + 3		1064178	1		+			
ANR	1064582	Identifier	j		1064178	0					
ANR	1064583	PrimaryExpression	3		1064178	1					
ANR	1064584	CompoundStatement		62:19:1481:1481	1064178	1					
ANR	1064585	ExpressionStatement	tif -> tif_rawcp = op	477:5:15052:15071	1064178	0	True				
ANR	1064586	AssignmentExpression	tif -> tif_rawcp = op		1064178	0		=			
ANR	1064587	PtrMemberAccess	tif -> tif_rawcp		1064178	0					
ANR	1064588	Identifier	tif		1064178	0					
ANR	1064589	Identifier	tif_rawcp		1064178	1					
ANR	1064590	Identifier	op		1064178	1					
ANR	1064591	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - occ	478:5:15078:15121	1064178	1	True				
ANR	1064592	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - occ		1064178	0		=			
ANR	1064593	PtrMemberAccess	tif -> tif_rawcc		1064178	0					
ANR	1064594	Identifier	tif		1064178	0					
ANR	1064595	Identifier	tif_rawcc		1064178	1					
ANR	1064596	AdditiveExpression	tif -> tif_rawdatasize - occ		1064178	1		-			
ANR	1064597	PtrMemberAccess	tif -> tif_rawdatasize		1064178	0					
ANR	1064598	Identifier	tif		1064178	0					
ANR	1064599	Identifier	tif_rawdatasize		1064178	1					
ANR	1064600	Identifier	occ		1064178	1					
ANR	1064601	IfStatement	if ( ! TIFFFlushData1 ( tif ) )		1064178	2					
ANR	1064602	Condition	! TIFFFlushData1 ( tif )	479:9:15132:15151	1064178	0	True				
ANR	1064603	UnaryOperationExpression	! TIFFFlushData1 ( tif )		1064178	0					
ANR	1064604	UnaryOperator	!		1064178	0					
ANR	1064605	CallExpression	TIFFFlushData1 ( tif )		1064178	1					
ANR	1064606	Callee	TIFFFlushData1		1064178	0					
ANR	1064607	Identifier	TIFFFlushData1		1064178	0					
ANR	1064608	ArgumentList	tif		1064178	1					
ANR	1064609	Argument	tif		1064178	0					
ANR	1064610	Identifier	tif		1064178	0					
ANR	1064611	ReturnStatement	return ( - 1 ) ;	480:6:15160:15171	1064178	1	True				
ANR	1064612	UnaryOperationExpression	- 1		1064178	0					
ANR	1064613	UnaryOperator	-		1064178	0					
ANR	1064614	PrimaryExpression	1		1064178	1					
ANR	1064615	ExpressionStatement	op = tif -> tif_rawcp	481:5:15178:15197	1064178	3	True				
ANR	1064616	AssignmentExpression	op = tif -> tif_rawcp		1064178	0		=			
ANR	1064617	Identifier	op		1064178	0					
ANR	1064618	PtrMemberAccess	tif -> tif_rawcp		1064178	1					
ANR	1064619	Identifier	tif		1064178	0					
ANR	1064620	Identifier	tif_rawcp		1064178	1					
ANR	1064621	ExpressionStatement	occ = tif -> tif_rawdatasize - tif -> tif_rawcc	482:5:15204:15247	1064178	4	True				
ANR	1064622	AssignmentExpression	occ = tif -> tif_rawdatasize - tif -> tif_rawcc		1064178	0		=			
ANR	1064623	Identifier	occ		1064178	0					
ANR	1064624	AdditiveExpression	tif -> tif_rawdatasize - tif -> tif_rawcc		1064178	1		-			
ANR	1064625	PtrMemberAccess	tif -> tif_rawdatasize		1064178	0					
ANR	1064626	Identifier	tif		1064178	0					
ANR	1064627	Identifier	tif_rawdatasize		1064178	1					
ANR	1064628	PtrMemberAccess	tif -> tif_rawcc		1064178	1					
ANR	1064629	Identifier	tif		1064178	0					
ANR	1064630	Identifier	tif_rawcc		1064178	1					
ANR	1064631	ExpressionStatement	* op ++ = ( uint8 ) j	484:4:15259:15276	1064178	2	True				
ANR	1064632	AssignmentExpression	* op ++ = ( uint8 ) j		1064178	0		=			
ANR	1064633	UnaryOperationExpression	* op ++		1064178	0					
ANR	1064634	UnaryOperator	*		1064178	0					
ANR	1064635	PostIncDecOperationExpression	op ++		1064178	1					
ANR	1064636	Identifier	op		1064178	0					
ANR	1064637	IncDec	++		1064178	1					
ANR	1064638	CastExpression	( uint8 ) j		1064178	1					
ANR	1064639	CastTarget	uint8		1064178	0					
ANR	1064640	Identifier	j		1064178	1					
ANR	1064641	ExpressionStatement	occ --	484:23:15278:15283	1064178	3	True				
ANR	1064642	PostIncDecOperationExpression	occ --		1064178	0					
ANR	1064643	Identifier	occ		1064178	0					
ANR	1064644	IncDec	--		1064178	1					
ANR	1064645	WhileStatement	while ( j -- )		1064178	4					
ANR	1064646	Condition	j --	485:11:15296:15298	1064178	0	True				
ANR	1064647	PostIncDecOperationExpression	j --		1064178	0					
ANR	1064648	Identifier	j		1064178	0					
ANR	1064649	IncDec	--		1064178	1					
ANR	1064650	CompoundStatement		71:16:1737:1737	1064178	1					
ANR	1064651	ExpressionStatement	* op ++ = ( uint8 ) ( tp [ i ++ ] >> shft & 0xff )	486:5:15308:15348	1064178	0	True				
ANR	1064652	AssignmentExpression	* op ++ = ( uint8 ) ( tp [ i ++ ] >> shft & 0xff )		1064178	0		=			
ANR	1064653	UnaryOperationExpression	* op ++		1064178	0					
ANR	1064654	UnaryOperator	*		1064178	0					
ANR	1064655	PostIncDecOperationExpression	op ++		1064178	1					
ANR	1064656	Identifier	op		1064178	0					
ANR	1064657	IncDec	++		1064178	1					
ANR	1064658	CastExpression	( uint8 ) ( tp [ i ++ ] >> shft & 0xff )		1064178	1					
ANR	1064659	CastTarget	uint8		1064178	0					
ANR	1064660	BitAndExpression	tp [ i ++ ] >> shft & 0xff		1064178	1		&			
ANR	1064661	ShiftExpression	tp [ i ++ ] >> shft		1064178	0		>>			
ANR	1064662	ArrayIndexing	tp [ i ++ ]		1064178	0					
ANR	1064663	Identifier	tp		1064178	0					
ANR	1064664	PostIncDecOperationExpression	i ++		1064178	1					
ANR	1064665	Identifier	i		1064178	0					
ANR	1064666	IncDec	++		1064178	1					
ANR	1064667	Identifier	shft		1064178	1					
ANR	1064668	PrimaryExpression	0xff		1064178	1					
ANR	1064669	ExpressionStatement	occ --	487:5:15355:15360	1064178	1	True				
ANR	1064670	PostIncDecOperationExpression	occ --		1064178	0					
ANR	1064671	Identifier	occ		1064178	0					
ANR	1064672	IncDec	--		1064178	1					
ANR	1064673	IfStatement	if ( rc >= MINRUN )		1064178	5					
ANR	1064674	Condition	rc >= MINRUN	490:7:15380:15391	1064178	0	True				
ANR	1064675	RelationalExpression	rc >= MINRUN		1064178	0		>=			
ANR	1064676	Identifier	rc		1064178	0					
ANR	1064677	Identifier	MINRUN		1064178	1					
ANR	1064678	CompoundStatement		76:21:1830:1830	1064178	1					
ANR	1064679	ExpressionStatement	* op ++ = ( uint8 ) ( 128 - 2 + rc )	491:4:15421:15447	1064178	0	True				
ANR	1064680	AssignmentExpression	* op ++ = ( uint8 ) ( 128 - 2 + rc )		1064178	0		=			
ANR	1064681	UnaryOperationExpression	* op ++		1064178	0					
ANR	1064682	UnaryOperator	*		1064178	0					
ANR	1064683	PostIncDecOperationExpression	op ++		1064178	1					
ANR	1064684	Identifier	op		1064178	0					
ANR	1064685	IncDec	++		1064178	1					
ANR	1064686	CastExpression	( uint8 ) ( 128 - 2 + rc )		1064178	1					
ANR	1064687	CastTarget	uint8		1064178	0					
ANR	1064688	AdditiveExpression	128 - 2 + rc		1064178	1		-			
ANR	1064689	PrimaryExpression	128		1064178	0					
ANR	1064690	AdditiveExpression	2 + rc		1064178	1		+			
ANR	1064691	PrimaryExpression	2		1064178	0					
ANR	1064692	Identifier	rc		1064178	1					
ANR	1064693	ExpressionStatement	* op ++ = ( uint8 ) ( tp [ beg ] >> shft & 0xff )	492:4:15453:15493	1064178	1	True				
ANR	1064694	AssignmentExpression	* op ++ = ( uint8 ) ( tp [ beg ] >> shft & 0xff )		1064178	0		=			
ANR	1064695	UnaryOperationExpression	* op ++		1064178	0					
ANR	1064696	UnaryOperator	*		1064178	0					
ANR	1064697	PostIncDecOperationExpression	op ++		1064178	1					
ANR	1064698	Identifier	op		1064178	0					
ANR	1064699	IncDec	++		1064178	1					
ANR	1064700	CastExpression	( uint8 ) ( tp [ beg ] >> shft & 0xff )		1064178	1					
ANR	1064701	CastTarget	uint8		1064178	0					
ANR	1064702	BitAndExpression	tp [ beg ] >> shft & 0xff		1064178	1		&			
ANR	1064703	ShiftExpression	tp [ beg ] >> shft		1064178	0		>>			
ANR	1064704	ArrayIndexing	tp [ beg ]		1064178	0					
ANR	1064705	Identifier	tp		1064178	0					
ANR	1064706	Identifier	beg		1064178	1					
ANR	1064707	Identifier	shft		1064178	1					
ANR	1064708	PrimaryExpression	0xff		1064178	1					
ANR	1064709	ExpressionStatement	occ -= 2	493:4:15499:15507	1064178	2	True				
ANR	1064710	AssignmentExpression	occ -= 2		1064178	0		-=			
ANR	1064711	Identifier	occ		1064178	0					
ANR	1064712	PrimaryExpression	2		1064178	1					
ANR	1064713	ElseStatement	else		1064178	0					
ANR	1064714	ExpressionStatement	rc = 0	495:4:15523:15529	1064178	0	True				
ANR	1064715	AssignmentExpression	rc = 0		1064178	0		=			
ANR	1064716	Identifier	rc		1064178	0					
ANR	1064717	PrimaryExpression	0		1064178	1					
ANR	1064718	ExpressionStatement	tif -> tif_rawcp = op	497:1:15536:15555	1064178	18	True				
ANR	1064719	AssignmentExpression	tif -> tif_rawcp = op		1064178	0		=			
ANR	1064720	PtrMemberAccess	tif -> tif_rawcp		1064178	0					
ANR	1064721	Identifier	tif		1064178	0					
ANR	1064722	Identifier	tif_rawcp		1064178	1					
ANR	1064723	Identifier	op		1064178	1					
ANR	1064724	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - occ	498:1:15558:15601	1064178	19	True				
ANR	1064725	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - occ		1064178	0		=			
ANR	1064726	PtrMemberAccess	tif -> tif_rawcc		1064178	0					
ANR	1064727	Identifier	tif		1064178	0					
ANR	1064728	Identifier	tif_rawcc		1064178	1					
ANR	1064729	AdditiveExpression	tif -> tif_rawdatasize - occ		1064178	1		-			
ANR	1064730	PtrMemberAccess	tif -> tif_rawdatasize		1064178	0					
ANR	1064731	Identifier	tif		1064178	0					
ANR	1064732	Identifier	tif_rawdatasize		1064178	1					
ANR	1064733	Identifier	occ		1064178	1					
ANR	1064734	ReturnStatement	return ( 1 ) ;	500:1:15605:15615	1064178	20	True				
ANR	1064735	PrimaryExpression	1		1064178	0					
ANR	1064736	ReturnType	static int		1064178	1					
ANR	1064737	Identifier	LogL16Encode		1064178	2					
ANR	1064738	ParameterList	"TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s"		1064178	3					
ANR	1064739	Parameter	TIFF * tif	414:13:13518:13526	1064178	0	True				
ANR	1064740	ParameterType	TIFF *		1064178	0					
ANR	1064741	Identifier	tif		1064178	1					
ANR	1064742	Parameter	uint8 * bp	414:24:13529:13537	1064178	1	True				
ANR	1064743	ParameterType	uint8 *		1064178	0					
ANR	1064744	Identifier	bp		1064178	1					
ANR	1064745	Parameter	tmsize_t cc	414:35:13540:13550	1064178	2	True				
ANR	1064746	ParameterType	tmsize_t		1064178	0					
ANR	1064747	Identifier	cc		1064178	1					
ANR	1064748	Parameter	uint16 s	414:48:13553:13560	1064178	3	True				
ANR	1064749	ParameterType	uint16		1064178	0					
ANR	1064750	Identifier	s		1064178	1					
ANR	1064751	CFGEntryNode	ENTRY		1064178		True				
ANR	1064752	CFGExitNode	EXIT		1064178		True				
ANR	1064753	Symbol	* sp		1064178						
ANR	1064754	Symbol	beg		1064178						
ANR	1064755	Symbol	sp -> user_datafmt		1064178						
ANR	1064756	Symbol	bp		1064178						
ANR	1064757	Symbol	occ		1064178						
ANR	1064758	Symbol	tif		1064178						
ANR	1064759	Symbol	npixels		1064178						
ANR	1064760	Symbol	sp -> tbuflen		1064178						
ANR	1064761	Symbol	tif -> tif_rawcc		1064178						
ANR	1064762	Symbol	* beg		1064178						
ANR	1064763	Symbol	sp -> pixel_size		1064178						
ANR	1064764	Symbol	SGILOGDATAFMT_16BIT		1064178						
ANR	1064765	Symbol	TIFFFlushData1		1064178						
ANR	1064766	Symbol	shft		1064178						
ANR	1064767	Symbol	sp -> tbuf		1064178						
ANR	1064768	Symbol	sp -> tfunc		1064178						
ANR	1064769	Symbol	sp		1064178						
ANR	1064770	Symbol	mask		1064178						
ANR	1064771	Symbol	cc		1064178						
ANR	1064772	Symbol	EncoderState		1064178						
ANR	1064773	Symbol	op		1064178						
ANR	1064774	Symbol	* tp		1064178						
ANR	1064775	Symbol	b		1064178						
ANR	1064776	Symbol	NULL		1064178						
ANR	1064777	Symbol	i		1064178						
ANR	1064778	Symbol	j		1064178						
ANR	1064779	Symbol	tif -> tif_rawcp		1064178						
ANR	1064780	Symbol	rc		1064178						
ANR	1064781	Symbol	s		1064178						
ANR	1064782	Symbol	* i		1064178						
ANR	1064783	Symbol	tif -> tif_rawdatasize		1064178						
ANR	1064784	Symbol	* rc		1064178						
ANR	1064785	Symbol	MINRUN		1064178						
ANR	1064786	Symbol	* op ++		1064178						
ANR	1064787	Symbol	* tif		1064178						
ANR	1064788	Symbol	tp		1064178						
ANR	1064789	Function	LogLuvEncode24	506:0:15661:16621							
ANR	1064790	FunctionDef	"LogLuvEncode24 (TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s)"		1064789	0					
ANR	1064791	CompoundStatement		508:0:15732:16621	1064789	0					
ANR	1064792	IdentifierDeclStatement	LogLuvState * sp = EncoderState ( tif ) ;	509:1:15735:15770	1064789	0	True				
ANR	1064793	IdentifierDecl	* sp = EncoderState ( tif )		1064789	0					
ANR	1064794	IdentifierDeclType	LogLuvState *		1064789	0					
ANR	1064795	Identifier	sp		1064789	1					
ANR	1064796	AssignmentExpression	* sp = EncoderState ( tif )		1064789	2		=			
ANR	1064797	Identifier	sp		1064789	0					
ANR	1064798	CallExpression	EncoderState ( tif )		1064789	1					
ANR	1064799	Callee	EncoderState		1064789	0					
ANR	1064800	Identifier	EncoderState		1064789	0					
ANR	1064801	ArgumentList	tif		1064789	1					
ANR	1064802	Argument	tif		1064789	0					
ANR	1064803	Identifier	tif		1064789	0					
ANR	1064804	IdentifierDeclStatement	tmsize_t i ;	510:1:15773:15783	1064789	1	True				
ANR	1064805	IdentifierDecl	i		1064789	0					
ANR	1064806	IdentifierDeclType	tmsize_t		1064789	0					
ANR	1064807	Identifier	i		1064789	1					
ANR	1064808	IdentifierDeclStatement	tmsize_t npixels ;	511:1:15786:15802	1064789	2	True				
ANR	1064809	IdentifierDecl	npixels		1064789	0					
ANR	1064810	IdentifierDeclType	tmsize_t		1064789	0					
ANR	1064811	Identifier	npixels		1064789	1					
ANR	1064812	IdentifierDeclStatement	tmsize_t occ ;	512:1:15805:15817	1064789	3	True				
ANR	1064813	IdentifierDecl	occ		1064789	0					
ANR	1064814	IdentifierDeclType	tmsize_t		1064789	0					
ANR	1064815	Identifier	occ		1064789	1					
ANR	1064816	IdentifierDeclStatement	uint8 * op ;	513:1:15820:15829	1064789	4	True				
ANR	1064817	IdentifierDecl	* op		1064789	0					
ANR	1064818	IdentifierDeclType	uint8 *		1064789	0					
ANR	1064819	Identifier	op		1064789	1					
ANR	1064820	IdentifierDeclStatement	uint32 * tp ;	514:1:15832:15842	1064789	5	True				
ANR	1064821	IdentifierDecl	* tp		1064789	0					
ANR	1064822	IdentifierDeclType	uint32 *		1064789	0					
ANR	1064823	Identifier	tp		1064789	1					
ANR	1064824	ExpressionStatement	assert ( s == 0 )	516:1:15846:15860	1064789	6	True				
ANR	1064825	CallExpression	assert ( s == 0 )		1064789	0					
ANR	1064826	Callee	assert		1064789	0					
ANR	1064827	Identifier	assert		1064789	0					
ANR	1064828	ArgumentList	s == 0		1064789	1					
ANR	1064829	Argument	s == 0		1064789	0					
ANR	1064830	EqualityExpression	s == 0		1064789	0		==			
ANR	1064831	Identifier	s		1064789	0					
ANR	1064832	PrimaryExpression	0		1064789	1					
ANR	1064833	ExpressionStatement	assert ( sp != NULL )	517:1:15863:15881	1064789	7	True				
ANR	1064834	CallExpression	assert ( sp != NULL )		1064789	0					
ANR	1064835	Callee	assert		1064789	0					
ANR	1064836	Identifier	assert		1064789	0					
ANR	1064837	ArgumentList	sp != NULL		1064789	1					
ANR	1064838	Argument	sp != NULL		1064789	0					
ANR	1064839	EqualityExpression	sp != NULL		1064789	0		!=			
ANR	1064840	Identifier	sp		1064789	0					
ANR	1064841	Identifier	NULL		1064789	1					
ANR	1064842	ExpressionStatement	npixels = cc / sp -> pixel_size	518:1:15884:15913	1064789	8	True				
ANR	1064843	AssignmentExpression	npixels = cc / sp -> pixel_size		1064789	0		=			
ANR	1064844	Identifier	npixels		1064789	0					
ANR	1064845	MultiplicativeExpression	cc / sp -> pixel_size		1064789	1		/			
ANR	1064846	Identifier	cc		1064789	0					
ANR	1064847	PtrMemberAccess	sp -> pixel_size		1064789	1					
ANR	1064848	Identifier	sp		1064789	0					
ANR	1064849	Identifier	pixel_size		1064789	1					
ANR	1064850	IfStatement	if ( sp -> user_datafmt == SGILOGDATAFMT_RAW )		1064789	9					
ANR	1064851	Condition	sp -> user_datafmt == SGILOGDATAFMT_RAW	520:5:15921:15957	1064789	0	True				
ANR	1064852	EqualityExpression	sp -> user_datafmt == SGILOGDATAFMT_RAW		1064789	0		==			
ANR	1064853	PtrMemberAccess	sp -> user_datafmt		1064789	0					
ANR	1064854	Identifier	sp		1064789	0					
ANR	1064855	Identifier	user_datafmt		1064789	1					
ANR	1064856	Identifier	SGILOGDATAFMT_RAW		1064789	1					
ANR	1064857	ExpressionStatement	tp = ( uint32 * ) bp	521:2:15962:15979	1064789	1	True				
ANR	1064858	AssignmentExpression	tp = ( uint32 * ) bp		1064789	0		=			
ANR	1064859	Identifier	tp		1064789	0					
ANR	1064860	CastExpression	( uint32 * ) bp		1064789	1					
ANR	1064861	CastTarget	uint32 *		1064789	0					
ANR	1064862	Identifier	bp		1064789	1					
ANR	1064863	ElseStatement	else		1064789	0					
ANR	1064864	CompoundStatement		15:6:254:254	1064789	0					
ANR	1064865	ExpressionStatement	tp = ( uint32 * ) sp -> tbuf	523:2:15991:16014	1064789	0	True				
ANR	1064866	AssignmentExpression	tp = ( uint32 * ) sp -> tbuf		1064789	0		=			
ANR	1064867	Identifier	tp		1064789	0					
ANR	1064868	CastExpression	( uint32 * ) sp -> tbuf		1064789	1					
ANR	1064869	CastTarget	uint32 *		1064789	0					
ANR	1064870	PtrMemberAccess	sp -> tbuf		1064789	1					
ANR	1064871	Identifier	sp		1064789	0					
ANR	1064872	Identifier	tbuf		1064789	1					
ANR	1064873	ExpressionStatement	assert ( sp -> tbuflen >= npixels )	524:2:16018:16048	1064789	1	True				
ANR	1064874	CallExpression	assert ( sp -> tbuflen >= npixels )		1064789	0					
ANR	1064875	Callee	assert		1064789	0					
ANR	1064876	Identifier	assert		1064789	0					
ANR	1064877	ArgumentList	sp -> tbuflen >= npixels		1064789	1					
ANR	1064878	Argument	sp -> tbuflen >= npixels		1064789	0					
ANR	1064879	RelationalExpression	sp -> tbuflen >= npixels		1064789	0		>=			
ANR	1064880	PtrMemberAccess	sp -> tbuflen		1064789	0					
ANR	1064881	Identifier	sp		1064789	0					
ANR	1064882	Identifier	tbuflen		1064789	1					
ANR	1064883	Identifier	npixels		1064789	1					
ANR	1064884	ExpressionStatement	"( * sp -> tfunc ) ( sp , bp , npixels )"	525:2:16052:16081	1064789	2	True				
ANR	1064885	CallExpression	"( * sp -> tfunc ) ( sp , bp , npixels )"		1064789	0					
ANR	1064886	Callee	* sp -> tfunc		1064789	0					
ANR	1064887	UnaryOperationExpression	* sp -> tfunc		1064789	0					
ANR	1064888	UnaryOperator	*		1064789	0					
ANR	1064889	PtrMemberAccess	sp -> tfunc		1064789	1					
ANR	1064890	Identifier	sp		1064789	0					
ANR	1064891	Identifier	tfunc		1064789	1					
ANR	1064892	ArgumentList	sp		1064789	1					
ANR	1064893	Argument	sp		1064789	0					
ANR	1064894	Identifier	sp		1064789	0					
ANR	1064895	Argument	bp		1064789	1					
ANR	1064896	Identifier	bp		1064789	0					
ANR	1064897	Argument	npixels		1064789	2					
ANR	1064898	Identifier	npixels		1064789	0					
ANR	1064899	ExpressionStatement	op = tif -> tif_rawcp	528:1:16119:16138	1064789	10	True				
ANR	1064900	AssignmentExpression	op = tif -> tif_rawcp		1064789	0		=			
ANR	1064901	Identifier	op		1064789	0					
ANR	1064902	PtrMemberAccess	tif -> tif_rawcp		1064789	1					
ANR	1064903	Identifier	tif		1064789	0					
ANR	1064904	Identifier	tif_rawcp		1064789	1					
ANR	1064905	ExpressionStatement	occ = tif -> tif_rawdatasize - tif -> tif_rawcc	529:1:16141:16184	1064789	11	True				
ANR	1064906	AssignmentExpression	occ = tif -> tif_rawdatasize - tif -> tif_rawcc		1064789	0		=			
ANR	1064907	Identifier	occ		1064789	0					
ANR	1064908	AdditiveExpression	tif -> tif_rawdatasize - tif -> tif_rawcc		1064789	1		-			
ANR	1064909	PtrMemberAccess	tif -> tif_rawdatasize		1064789	0					
ANR	1064910	Identifier	tif		1064789	0					
ANR	1064911	Identifier	tif_rawdatasize		1064789	1					
ANR	1064912	PtrMemberAccess	tif -> tif_rawcc		1064789	1					
ANR	1064913	Identifier	tif		1064789	0					
ANR	1064914	Identifier	tif_rawcc		1064789	1					
ANR	1064915	ForStatement	for ( i = npixels ; i -- ; )		1064789	12					
ANR	1064916	ForInit	i = npixels ;	530:6:16192:16203	1064789	0	True				
ANR	1064917	AssignmentExpression	i = npixels		1064789	0		=			
ANR	1064918	Identifier	i		1064789	0					
ANR	1064919	Identifier	npixels		1064789	1					
ANR	1064920	Condition	i --	530:19:16205:16207	1064789	1	True				
ANR	1064921	PostIncDecOperationExpression	i --		1064789	0					
ANR	1064922	Identifier	i		1064789	0					
ANR	1064923	IncDec	--		1064789	1					
ANR	1064924	CompoundStatement		23:26:479:479	1064789	2					
ANR	1064925	IfStatement	if ( occ < 3 )		1064789	0					
ANR	1064926	Condition	occ < 3	531:6:16220:16226	1064789	0	True				
ANR	1064927	RelationalExpression	occ < 3		1064789	0		<			
ANR	1064928	Identifier	occ		1064789	0					
ANR	1064929	PrimaryExpression	3		1064789	1					
ANR	1064930	CompoundStatement		24:15:496:496	1064789	1					
ANR	1064931	ExpressionStatement	tif -> tif_rawcp = op	532:3:16234:16253	1064789	0	True				
ANR	1064932	AssignmentExpression	tif -> tif_rawcp = op		1064789	0		=			
ANR	1064933	PtrMemberAccess	tif -> tif_rawcp		1064789	0					
ANR	1064934	Identifier	tif		1064789	0					
ANR	1064935	Identifier	tif_rawcp		1064789	1					
ANR	1064936	Identifier	op		1064789	1					
ANR	1064937	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - occ	533:3:16258:16301	1064789	1	True				
ANR	1064938	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - occ		1064789	0		=			
ANR	1064939	PtrMemberAccess	tif -> tif_rawcc		1064789	0					
ANR	1064940	Identifier	tif		1064789	0					
ANR	1064941	Identifier	tif_rawcc		1064789	1					
ANR	1064942	AdditiveExpression	tif -> tif_rawdatasize - occ		1064789	1		-			
ANR	1064943	PtrMemberAccess	tif -> tif_rawdatasize		1064789	0					
ANR	1064944	Identifier	tif		1064789	0					
ANR	1064945	Identifier	tif_rawdatasize		1064789	1					
ANR	1064946	Identifier	occ		1064789	1					
ANR	1064947	IfStatement	if ( ! TIFFFlushData1 ( tif ) )		1064789	2					
ANR	1064948	Condition	! TIFFFlushData1 ( tif )	534:7:16310:16329	1064789	0	True				
ANR	1064949	UnaryOperationExpression	! TIFFFlushData1 ( tif )		1064789	0					
ANR	1064950	UnaryOperator	!		1064789	0					
ANR	1064951	CallExpression	TIFFFlushData1 ( tif )		1064789	1					
ANR	1064952	Callee	TIFFFlushData1		1064789	0					
ANR	1064953	Identifier	TIFFFlushData1		1064789	0					
ANR	1064954	ArgumentList	tif		1064789	1					
ANR	1064955	Argument	tif		1064789	0					
ANR	1064956	Identifier	tif		1064789	0					
ANR	1064957	ReturnStatement	return ( - 1 ) ;	535:4:16336:16347	1064789	1	True				
ANR	1064958	UnaryOperationExpression	- 1		1064789	0					
ANR	1064959	UnaryOperator	-		1064789	0					
ANR	1064960	PrimaryExpression	1		1064789	1					
ANR	1064961	ExpressionStatement	op = tif -> tif_rawcp	536:3:16352:16371	1064789	3	True				
ANR	1064962	AssignmentExpression	op = tif -> tif_rawcp		1064789	0		=			
ANR	1064963	Identifier	op		1064789	0					
ANR	1064964	PtrMemberAccess	tif -> tif_rawcp		1064789	1					
ANR	1064965	Identifier	tif		1064789	0					
ANR	1064966	Identifier	tif_rawcp		1064789	1					
ANR	1064967	ExpressionStatement	occ = tif -> tif_rawdatasize - tif -> tif_rawcc	537:3:16376:16419	1064789	4	True				
ANR	1064968	AssignmentExpression	occ = tif -> tif_rawdatasize - tif -> tif_rawcc		1064789	0		=			
ANR	1064969	Identifier	occ		1064789	0					
ANR	1064970	AdditiveExpression	tif -> tif_rawdatasize - tif -> tif_rawcc		1064789	1		-			
ANR	1064971	PtrMemberAccess	tif -> tif_rawdatasize		1064789	0					
ANR	1064972	Identifier	tif		1064789	0					
ANR	1064973	Identifier	tif_rawdatasize		1064789	1					
ANR	1064974	PtrMemberAccess	tif -> tif_rawcc		1064789	1					
ANR	1064975	Identifier	tif		1064789	0					
ANR	1064976	Identifier	tif_rawcc		1064789	1					
ANR	1064977	ExpressionStatement	* op ++ = ( uint8 ) ( * tp >> 16 )	539:2:16427:16453	1064789	1	True				
ANR	1064978	AssignmentExpression	* op ++ = ( uint8 ) ( * tp >> 16 )		1064789	0		=			
ANR	1064979	UnaryOperationExpression	* op ++		1064789	0					
ANR	1064980	UnaryOperator	*		1064789	0					
ANR	1064981	PostIncDecOperationExpression	op ++		1064789	1					
ANR	1064982	Identifier	op		1064789	0					
ANR	1064983	IncDec	++		1064789	1					
ANR	1064984	CastExpression	( uint8 ) ( * tp >> 16 )		1064789	1					
ANR	1064985	CastTarget	uint8		1064789	0					
ANR	1064986	ShiftExpression	* tp >> 16		1064789	1		>>			
ANR	1064987	UnaryOperationExpression	* tp		1064789	0					
ANR	1064988	UnaryOperator	*		1064789	0					
ANR	1064989	Identifier	tp		1064789	1					
ANR	1064990	PrimaryExpression	16		1064789	1					
ANR	1064991	ExpressionStatement	* op ++ = ( uint8 ) ( * tp >> 8 & 0xff )	540:2:16457:16489	1064789	2	True				
ANR	1064992	AssignmentExpression	* op ++ = ( uint8 ) ( * tp >> 8 & 0xff )		1064789	0		=			
ANR	1064993	UnaryOperationExpression	* op ++		1064789	0					
ANR	1064994	UnaryOperator	*		1064789	0					
ANR	1064995	PostIncDecOperationExpression	op ++		1064789	1					
ANR	1064996	Identifier	op		1064789	0					
ANR	1064997	IncDec	++		1064789	1					
ANR	1064998	CastExpression	( uint8 ) ( * tp >> 8 & 0xff )		1064789	1					
ANR	1064999	CastTarget	uint8		1064789	0					
ANR	1065000	BitAndExpression	* tp >> 8 & 0xff		1064789	1		&			
ANR	1065001	ShiftExpression	* tp >> 8		1064789	0		>>			
ANR	1065002	UnaryOperationExpression	* tp		1064789	0					
ANR	1065003	UnaryOperator	*		1064789	0					
ANR	1065004	Identifier	tp		1064789	1					
ANR	1065005	PrimaryExpression	8		1064789	1					
ANR	1065006	PrimaryExpression	0xff		1064789	1					
ANR	1065007	ExpressionStatement	* op ++ = ( uint8 ) ( * tp ++ & 0xff )	541:2:16493:16522	1064789	3	True				
ANR	1065008	AssignmentExpression	* op ++ = ( uint8 ) ( * tp ++ & 0xff )		1064789	0		=			
ANR	1065009	UnaryOperationExpression	* op ++		1064789	0					
ANR	1065010	UnaryOperator	*		1064789	0					
ANR	1065011	PostIncDecOperationExpression	op ++		1064789	1					
ANR	1065012	Identifier	op		1064789	0					
ANR	1065013	IncDec	++		1064789	1					
ANR	1065014	CastExpression	( uint8 ) ( * tp ++ & 0xff )		1064789	1					
ANR	1065015	CastTarget	uint8		1064789	0					
ANR	1065016	BitAndExpression	* tp ++ & 0xff		1064789	1		&			
ANR	1065017	UnaryOperationExpression	* tp ++		1064789	0					
ANR	1065018	UnaryOperator	*		1064789	0					
ANR	1065019	PostIncDecOperationExpression	tp ++		1064789	1					
ANR	1065020	Identifier	tp		1064789	0					
ANR	1065021	IncDec	++		1064789	1					
ANR	1065022	PrimaryExpression	0xff		1064789	1					
ANR	1065023	ExpressionStatement	occ -= 3	542:2:16526:16534	1064789	4	True				
ANR	1065024	AssignmentExpression	occ -= 3		1064789	0		-=			
ANR	1065025	Identifier	occ		1064789	0					
ANR	1065026	PrimaryExpression	3		1064789	1					
ANR	1065027	ExpressionStatement	tif -> tif_rawcp = op	544:1:16540:16559	1064789	13	True				
ANR	1065028	AssignmentExpression	tif -> tif_rawcp = op		1064789	0		=			
ANR	1065029	PtrMemberAccess	tif -> tif_rawcp		1064789	0					
ANR	1065030	Identifier	tif		1064789	0					
ANR	1065031	Identifier	tif_rawcp		1064789	1					
ANR	1065032	Identifier	op		1064789	1					
ANR	1065033	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - occ	545:1:16562:16605	1064789	14	True				
ANR	1065034	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - occ		1064789	0		=			
ANR	1065035	PtrMemberAccess	tif -> tif_rawcc		1064789	0					
ANR	1065036	Identifier	tif		1064789	0					
ANR	1065037	Identifier	tif_rawcc		1064789	1					
ANR	1065038	AdditiveExpression	tif -> tif_rawdatasize - occ		1064789	1		-			
ANR	1065039	PtrMemberAccess	tif -> tif_rawdatasize		1064789	0					
ANR	1065040	Identifier	tif		1064789	0					
ANR	1065041	Identifier	tif_rawdatasize		1064789	1					
ANR	1065042	Identifier	occ		1064789	1					
ANR	1065043	ReturnStatement	return ( 1 ) ;	547:1:16609:16619	1064789	15	True				
ANR	1065044	PrimaryExpression	1		1064789	0					
ANR	1065045	ReturnType	static int		1064789	1					
ANR	1065046	Identifier	LogLuvEncode24		1064789	2					
ANR	1065047	ParameterList	"TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s"		1064789	3					
ANR	1065048	Parameter	TIFF * tif	507:15:15687:15695	1064789	0	True				
ANR	1065049	ParameterType	TIFF *		1064789	0					
ANR	1065050	Identifier	tif		1064789	1					
ANR	1065051	Parameter	uint8 * bp	507:26:15698:15706	1064789	1	True				
ANR	1065052	ParameterType	uint8 *		1064789	0					
ANR	1065053	Identifier	bp		1064789	1					
ANR	1065054	Parameter	tmsize_t cc	507:37:15709:15719	1064789	2	True				
ANR	1065055	ParameterType	tmsize_t		1064789	0					
ANR	1065056	Identifier	cc		1064789	1					
ANR	1065057	Parameter	uint16 s	507:50:15722:15729	1064789	3	True				
ANR	1065058	ParameterType	uint16		1064789	0					
ANR	1065059	Identifier	s		1064789	1					
ANR	1065060	CFGEntryNode	ENTRY		1064789		True				
ANR	1065061	CFGExitNode	EXIT		1064789		True				
ANR	1065062	Symbol	* sp		1064789						
ANR	1065063	Symbol	sp -> user_datafmt		1064789						
ANR	1065064	Symbol	SGILOGDATAFMT_RAW		1064789						
ANR	1065065	Symbol	bp		1064789						
ANR	1065066	Symbol	occ		1064789						
ANR	1065067	Symbol	tif		1064789						
ANR	1065068	Symbol	npixels		1064789						
ANR	1065069	Symbol	sp -> tbuflen		1064789						
ANR	1065070	Symbol	tif -> tif_rawcc		1064789						
ANR	1065071	Symbol	sp -> pixel_size		1064789						
ANR	1065072	Symbol	TIFFFlushData1		1064789						
ANR	1065073	Symbol	sp -> tbuf		1064789						
ANR	1065074	Symbol	sp -> tfunc		1064789						
ANR	1065075	Symbol	sp		1064789						
ANR	1065076	Symbol	cc		1064789						
ANR	1065077	Symbol	EncoderState		1064789						
ANR	1065078	Symbol	op		1064789						
ANR	1065079	Symbol	* tp		1064789						
ANR	1065080	Symbol	NULL		1064789						
ANR	1065081	Symbol	i		1064789						
ANR	1065082	Symbol	tif -> tif_rawcp		1064789						
ANR	1065083	Symbol	s		1064789						
ANR	1065084	Symbol	tif -> tif_rawdatasize		1064789						
ANR	1065085	Symbol	* tp ++		1064789						
ANR	1065086	Symbol	* op ++		1064789						
ANR	1065087	Symbol	* tif		1064789						
ANR	1065088	Symbol	tp		1064789						
ANR	1065089	Function	LogLuvEncode32	553:0:16665:18771							
ANR	1065090	FunctionDef	"LogLuvEncode32 (TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s)"		1065089	0					
ANR	1065091	CompoundStatement		555:0:16736:18771	1065089	0					
ANR	1065092	IdentifierDeclStatement	LogLuvState * sp = EncoderState ( tif ) ;	556:1:16739:16774	1065089	0	True				
ANR	1065093	IdentifierDecl	* sp = EncoderState ( tif )		1065089	0					
ANR	1065094	IdentifierDeclType	LogLuvState *		1065089	0					
ANR	1065095	Identifier	sp		1065089	1					
ANR	1065096	AssignmentExpression	* sp = EncoderState ( tif )		1065089	2		=			
ANR	1065097	Identifier	sp		1065089	0					
ANR	1065098	CallExpression	EncoderState ( tif )		1065089	1					
ANR	1065099	Callee	EncoderState		1065089	0					
ANR	1065100	Identifier	EncoderState		1065089	0					
ANR	1065101	ArgumentList	tif		1065089	1					
ANR	1065102	Argument	tif		1065089	0					
ANR	1065103	Identifier	tif		1065089	0					
ANR	1065104	IdentifierDeclStatement	int shft ;	557:1:16777:16785	1065089	1	True				
ANR	1065105	IdentifierDecl	shft		1065089	0					
ANR	1065106	IdentifierDeclType	int		1065089	0					
ANR	1065107	Identifier	shft		1065089	1					
ANR	1065108	IdentifierDeclStatement	tmsize_t i ;	558:1:16788:16798	1065089	2	True				
ANR	1065109	IdentifierDecl	i		1065089	0					
ANR	1065110	IdentifierDeclType	tmsize_t		1065089	0					
ANR	1065111	Identifier	i		1065089	1					
ANR	1065112	IdentifierDeclStatement	tmsize_t j ;	559:1:16801:16811	1065089	3	True				
ANR	1065113	IdentifierDecl	j		1065089	0					
ANR	1065114	IdentifierDeclType	tmsize_t		1065089	0					
ANR	1065115	Identifier	j		1065089	1					
ANR	1065116	IdentifierDeclStatement	tmsize_t npixels ;	560:1:16814:16830	1065089	4	True				
ANR	1065117	IdentifierDecl	npixels		1065089	0					
ANR	1065118	IdentifierDeclType	tmsize_t		1065089	0					
ANR	1065119	Identifier	npixels		1065089	1					
ANR	1065120	IdentifierDeclStatement	uint8 * op ;	561:1:16833:16842	1065089	5	True				
ANR	1065121	IdentifierDecl	* op		1065089	0					
ANR	1065122	IdentifierDeclType	uint8 *		1065089	0					
ANR	1065123	Identifier	op		1065089	1					
ANR	1065124	IdentifierDeclStatement	uint32 * tp ;	562:1:16845:16855	1065089	6	True				
ANR	1065125	IdentifierDecl	* tp		1065089	0					
ANR	1065126	IdentifierDeclType	uint32 *		1065089	0					
ANR	1065127	Identifier	tp		1065089	1					
ANR	1065128	IdentifierDeclStatement	uint32 b ;	563:1:16858:16866	1065089	7	True				
ANR	1065129	IdentifierDecl	b		1065089	0					
ANR	1065130	IdentifierDeclType	uint32		1065089	0					
ANR	1065131	Identifier	b		1065089	1					
ANR	1065132	IdentifierDeclStatement	tmsize_t occ ;	564:1:16869:16881	1065089	8	True				
ANR	1065133	IdentifierDecl	occ		1065089	0					
ANR	1065134	IdentifierDeclType	tmsize_t		1065089	0					
ANR	1065135	Identifier	occ		1065089	1					
ANR	1065136	IdentifierDeclStatement	"int rc = 0 , mask ;"	565:1:16884:16898	1065089	9	True				
ANR	1065137	IdentifierDecl	rc = 0		1065089	0					
ANR	1065138	IdentifierDeclType	int		1065089	0					
ANR	1065139	Identifier	rc		1065089	1					
ANR	1065140	AssignmentExpression	rc = 0		1065089	2		=			
ANR	1065141	Identifier	rc		1065089	0					
ANR	1065142	PrimaryExpression	0		1065089	1					
ANR	1065143	IdentifierDecl	mask		1065089	1					
ANR	1065144	IdentifierDeclType	int		1065089	0					
ANR	1065145	Identifier	mask		1065089	1					
ANR	1065146	IdentifierDeclStatement	tmsize_t beg ;	566:1:16901:16913	1065089	10	True				
ANR	1065147	IdentifierDecl	beg		1065089	0					
ANR	1065148	IdentifierDeclType	tmsize_t		1065089	0					
ANR	1065149	Identifier	beg		1065089	1					
ANR	1065150	ExpressionStatement	assert ( s == 0 )	568:1:16917:16931	1065089	11	True				
ANR	1065151	CallExpression	assert ( s == 0 )		1065089	0					
ANR	1065152	Callee	assert		1065089	0					
ANR	1065153	Identifier	assert		1065089	0					
ANR	1065154	ArgumentList	s == 0		1065089	1					
ANR	1065155	Argument	s == 0		1065089	0					
ANR	1065156	EqualityExpression	s == 0		1065089	0		==			
ANR	1065157	Identifier	s		1065089	0					
ANR	1065158	PrimaryExpression	0		1065089	1					
ANR	1065159	ExpressionStatement	assert ( sp != NULL )	569:1:16934:16952	1065089	12	True				
ANR	1065160	CallExpression	assert ( sp != NULL )		1065089	0					
ANR	1065161	Callee	assert		1065089	0					
ANR	1065162	Identifier	assert		1065089	0					
ANR	1065163	ArgumentList	sp != NULL		1065089	1					
ANR	1065164	Argument	sp != NULL		1065089	0					
ANR	1065165	EqualityExpression	sp != NULL		1065089	0		!=			
ANR	1065166	Identifier	sp		1065089	0					
ANR	1065167	Identifier	NULL		1065089	1					
ANR	1065168	ExpressionStatement	npixels = cc / sp -> pixel_size	571:1:16956:16985	1065089	13	True				
ANR	1065169	AssignmentExpression	npixels = cc / sp -> pixel_size		1065089	0		=			
ANR	1065170	Identifier	npixels		1065089	0					
ANR	1065171	MultiplicativeExpression	cc / sp -> pixel_size		1065089	1		/			
ANR	1065172	Identifier	cc		1065089	0					
ANR	1065173	PtrMemberAccess	sp -> pixel_size		1065089	1					
ANR	1065174	Identifier	sp		1065089	0					
ANR	1065175	Identifier	pixel_size		1065089	1					
ANR	1065176	IfStatement	if ( sp -> user_datafmt == SGILOGDATAFMT_RAW )		1065089	14					
ANR	1065177	Condition	sp -> user_datafmt == SGILOGDATAFMT_RAW	573:5:16993:17029	1065089	0	True				
ANR	1065178	EqualityExpression	sp -> user_datafmt == SGILOGDATAFMT_RAW		1065089	0		==			
ANR	1065179	PtrMemberAccess	sp -> user_datafmt		1065089	0					
ANR	1065180	Identifier	sp		1065089	0					
ANR	1065181	Identifier	user_datafmt		1065089	1					
ANR	1065182	Identifier	SGILOGDATAFMT_RAW		1065089	1					
ANR	1065183	ExpressionStatement	tp = ( uint32 * ) bp	574:2:17034:17051	1065089	1	True				
ANR	1065184	AssignmentExpression	tp = ( uint32 * ) bp		1065089	0		=			
ANR	1065185	Identifier	tp		1065089	0					
ANR	1065186	CastExpression	( uint32 * ) bp		1065089	1					
ANR	1065187	CastTarget	uint32 *		1065089	0					
ANR	1065188	Identifier	bp		1065089	1					
ANR	1065189	ElseStatement	else		1065089	0					
ANR	1065190	CompoundStatement		21:6:322:322	1065089	0					
ANR	1065191	ExpressionStatement	tp = ( uint32 * ) sp -> tbuf	576:2:17063:17086	1065089	0	True				
ANR	1065192	AssignmentExpression	tp = ( uint32 * ) sp -> tbuf		1065089	0		=			
ANR	1065193	Identifier	tp		1065089	0					
ANR	1065194	CastExpression	( uint32 * ) sp -> tbuf		1065089	1					
ANR	1065195	CastTarget	uint32 *		1065089	0					
ANR	1065196	PtrMemberAccess	sp -> tbuf		1065089	1					
ANR	1065197	Identifier	sp		1065089	0					
ANR	1065198	Identifier	tbuf		1065089	1					
ANR	1065199	ExpressionStatement	assert ( sp -> tbuflen >= npixels )	577:2:17090:17120	1065089	1	True				
ANR	1065200	CallExpression	assert ( sp -> tbuflen >= npixels )		1065089	0					
ANR	1065201	Callee	assert		1065089	0					
ANR	1065202	Identifier	assert		1065089	0					
ANR	1065203	ArgumentList	sp -> tbuflen >= npixels		1065089	1					
ANR	1065204	Argument	sp -> tbuflen >= npixels		1065089	0					
ANR	1065205	RelationalExpression	sp -> tbuflen >= npixels		1065089	0		>=			
ANR	1065206	PtrMemberAccess	sp -> tbuflen		1065089	0					
ANR	1065207	Identifier	sp		1065089	0					
ANR	1065208	Identifier	tbuflen		1065089	1					
ANR	1065209	Identifier	npixels		1065089	1					
ANR	1065210	ExpressionStatement	"( * sp -> tfunc ) ( sp , bp , npixels )"	578:2:17124:17153	1065089	2	True				
ANR	1065211	CallExpression	"( * sp -> tfunc ) ( sp , bp , npixels )"		1065089	0					
ANR	1065212	Callee	* sp -> tfunc		1065089	0					
ANR	1065213	UnaryOperationExpression	* sp -> tfunc		1065089	0					
ANR	1065214	UnaryOperator	*		1065089	0					
ANR	1065215	PtrMemberAccess	sp -> tfunc		1065089	1					
ANR	1065216	Identifier	sp		1065089	0					
ANR	1065217	Identifier	tfunc		1065089	1					
ANR	1065218	ArgumentList	sp		1065089	1					
ANR	1065219	Argument	sp		1065089	0					
ANR	1065220	Identifier	sp		1065089	0					
ANR	1065221	Argument	bp		1065089	1					
ANR	1065222	Identifier	bp		1065089	0					
ANR	1065223	Argument	npixels		1065089	2					
ANR	1065224	Identifier	npixels		1065089	0					
ANR	1065225	ExpressionStatement	op = tif -> tif_rawcp	581:1:17192:17211	1065089	15	True				
ANR	1065226	AssignmentExpression	op = tif -> tif_rawcp		1065089	0		=			
ANR	1065227	Identifier	op		1065089	0					
ANR	1065228	PtrMemberAccess	tif -> tif_rawcp		1065089	1					
ANR	1065229	Identifier	tif		1065089	0					
ANR	1065230	Identifier	tif_rawcp		1065089	1					
ANR	1065231	ExpressionStatement	occ = tif -> tif_rawdatasize - tif -> tif_rawcc	582:1:17214:17257	1065089	16	True				
ANR	1065232	AssignmentExpression	occ = tif -> tif_rawdatasize - tif -> tif_rawcc		1065089	0		=			
ANR	1065233	Identifier	occ		1065089	0					
ANR	1065234	AdditiveExpression	tif -> tif_rawdatasize - tif -> tif_rawcc		1065089	1		-			
ANR	1065235	PtrMemberAccess	tif -> tif_rawdatasize		1065089	0					
ANR	1065236	Identifier	tif		1065089	0					
ANR	1065237	Identifier	tif_rawdatasize		1065089	1					
ANR	1065238	PtrMemberAccess	tif -> tif_rawcc		1065089	1					
ANR	1065239	Identifier	tif		1065089	0					
ANR	1065240	Identifier	tif_rawcc		1065089	1					
ANR	1065241	ForStatement	for ( shft = 4 * 8 ; ( shft -= 8 ) >= 0 ; )		1065089	17					
ANR	1065242	ForInit	shft = 4 * 8 ;	583:6:17265:17275	1065089	0	True				
ANR	1065243	AssignmentExpression	shft = 4 * 8		1065089	0		=			
ANR	1065244	Identifier	shft		1065089	0					
ANR	1065245	MultiplicativeExpression	4 * 8		1065089	1		*			
ANR	1065246	PrimaryExpression	4		1065089	0					
ANR	1065247	PrimaryExpression	8		1065089	1					
ANR	1065248	Condition	( shft -= 8 ) >= 0	583:18:17277:17292	1065089	1	True				
ANR	1065249	RelationalExpression	( shft -= 8 ) >= 0		1065089	0		>=			
ANR	1065250	AssignmentExpression	shft -= 8		1065089	0		-=			
ANR	1065251	Identifier	shft		1065089	0					
ANR	1065252	PrimaryExpression	8		1065089	1					
ANR	1065253	PrimaryExpression	0		1065089	1					
ANR	1065254	ForStatement	for ( i = 0 ; i < npixels ; i += rc )		1065089	2					
ANR	1065255	ForInit	i = 0 ;	584:7:17304:17309	1065089	0	True				
ANR	1065256	AssignmentExpression	i = 0		1065089	0		=			
ANR	1065257	Identifier	i		1065089	0					
ANR	1065258	PrimaryExpression	0		1065089	1					
ANR	1065259	Condition	i < npixels	584:14:17311:17321	1065089	1	True				
ANR	1065260	RelationalExpression	i < npixels		1065089	0		<			
ANR	1065261	Identifier	i		1065089	0					
ANR	1065262	Identifier	npixels		1065089	1					
ANR	1065263	AssignmentExpression	i += rc	584:27:17324:17330	1065089	2	True	+=			
ANR	1065264	Identifier	i		1065089	0					
ANR	1065265	Identifier	rc		1065089	1					
ANR	1065266	CompoundStatement		30:36:596:596	1065089	3					
ANR	1065267	IfStatement	if ( occ < 4 )		1065089	0					
ANR	1065268	Condition	occ < 4	585:7:17342:17348	1065089	0	True				
ANR	1065269	RelationalExpression	occ < 4		1065089	0		<			
ANR	1065270	Identifier	occ		1065089	0					
ANR	1065271	PrimaryExpression	4		1065089	1					
ANR	1065272	CompoundStatement		31:16:614:614	1065089	1					
ANR	1065273	ExpressionStatement	tif -> tif_rawcp = op	586:4:17357:17376	1065089	0	True				
ANR	1065274	AssignmentExpression	tif -> tif_rawcp = op		1065089	0		=			
ANR	1065275	PtrMemberAccess	tif -> tif_rawcp		1065089	0					
ANR	1065276	Identifier	tif		1065089	0					
ANR	1065277	Identifier	tif_rawcp		1065089	1					
ANR	1065278	Identifier	op		1065089	1					
ANR	1065279	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - occ	587:4:17382:17425	1065089	1	True				
ANR	1065280	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - occ		1065089	0		=			
ANR	1065281	PtrMemberAccess	tif -> tif_rawcc		1065089	0					
ANR	1065282	Identifier	tif		1065089	0					
ANR	1065283	Identifier	tif_rawcc		1065089	1					
ANR	1065284	AdditiveExpression	tif -> tif_rawdatasize - occ		1065089	1		-			
ANR	1065285	PtrMemberAccess	tif -> tif_rawdatasize		1065089	0					
ANR	1065286	Identifier	tif		1065089	0					
ANR	1065287	Identifier	tif_rawdatasize		1065089	1					
ANR	1065288	Identifier	occ		1065089	1					
ANR	1065289	IfStatement	if ( ! TIFFFlushData1 ( tif ) )		1065089	2					
ANR	1065290	Condition	! TIFFFlushData1 ( tif )	588:8:17435:17454	1065089	0	True				
ANR	1065291	UnaryOperationExpression	! TIFFFlushData1 ( tif )		1065089	0					
ANR	1065292	UnaryOperator	!		1065089	0					
ANR	1065293	CallExpression	TIFFFlushData1 ( tif )		1065089	1					
ANR	1065294	Callee	TIFFFlushData1		1065089	0					
ANR	1065295	Identifier	TIFFFlushData1		1065089	0					
ANR	1065296	ArgumentList	tif		1065089	1					
ANR	1065297	Argument	tif		1065089	0					
ANR	1065298	Identifier	tif		1065089	0					
ANR	1065299	ReturnStatement	return ( - 1 ) ;	589:5:17462:17473	1065089	1	True				
ANR	1065300	UnaryOperationExpression	- 1		1065089	0					
ANR	1065301	UnaryOperator	-		1065089	0					
ANR	1065302	PrimaryExpression	1		1065089	1					
ANR	1065303	ExpressionStatement	op = tif -> tif_rawcp	590:4:17479:17498	1065089	3	True				
ANR	1065304	AssignmentExpression	op = tif -> tif_rawcp		1065089	0		=			
ANR	1065305	Identifier	op		1065089	0					
ANR	1065306	PtrMemberAccess	tif -> tif_rawcp		1065089	1					
ANR	1065307	Identifier	tif		1065089	0					
ANR	1065308	Identifier	tif_rawcp		1065089	1					
ANR	1065309	ExpressionStatement	occ = tif -> tif_rawdatasize - tif -> tif_rawcc	591:4:17504:17547	1065089	4	True				
ANR	1065310	AssignmentExpression	occ = tif -> tif_rawdatasize - tif -> tif_rawcc		1065089	0		=			
ANR	1065311	Identifier	occ		1065089	0					
ANR	1065312	AdditiveExpression	tif -> tif_rawdatasize - tif -> tif_rawcc		1065089	1		-			
ANR	1065313	PtrMemberAccess	tif -> tif_rawdatasize		1065089	0					
ANR	1065314	Identifier	tif		1065089	0					
ANR	1065315	Identifier	tif_rawdatasize		1065089	1					
ANR	1065316	PtrMemberAccess	tif -> tif_rawcc		1065089	1					
ANR	1065317	Identifier	tif		1065089	0					
ANR	1065318	Identifier	tif_rawcc		1065089	1					
ANR	1065319	ExpressionStatement	mask = 0xff << shft	593:3:17557:17576	1065089	1	True				
ANR	1065320	AssignmentExpression	mask = 0xff << shft		1065089	0		=			
ANR	1065321	Identifier	mask		1065089	0					
ANR	1065322	ShiftExpression	0xff << shft		1065089	1		<<			
ANR	1065323	PrimaryExpression	0xff		1065089	0					
ANR	1065324	Identifier	shft		1065089	1					
ANR	1065325	ForStatement	for ( beg = i ; beg < npixels ; beg += rc )		1065089	2					
ANR	1065326	ForInit	beg = i ;	594:8:17607:17614	1065089	0	True				
ANR	1065327	AssignmentExpression	beg = i		1065089	0		=			
ANR	1065328	Identifier	beg		1065089	0					
ANR	1065329	Identifier	i		1065089	1					
ANR	1065330	Condition	beg < npixels	594:17:17616:17628	1065089	1	True				
ANR	1065331	RelationalExpression	beg < npixels		1065089	0		<			
ANR	1065332	Identifier	beg		1065089	0					
ANR	1065333	Identifier	npixels		1065089	1					
ANR	1065334	AssignmentExpression	beg += rc	594:32:17631:17639	1065089	2	True	+=			
ANR	1065335	Identifier	beg		1065089	0					
ANR	1065336	Identifier	rc		1065089	1					
ANR	1065337	CompoundStatement		40:43:905:905	1065089	3					
ANR	1065338	ExpressionStatement	b = tp [ beg ] & mask	595:4:17648:17666	1065089	0	True				
ANR	1065339	AssignmentExpression	b = tp [ beg ] & mask		1065089	0		=			
ANR	1065340	Identifier	b		1065089	0					
ANR	1065341	BitAndExpression	tp [ beg ] & mask		1065089	1		&			
ANR	1065342	ArrayIndexing	tp [ beg ]		1065089	0					
ANR	1065343	Identifier	tp		1065089	0					
ANR	1065344	Identifier	beg		1065089	1					
ANR	1065345	Identifier	mask		1065089	1					
ANR	1065346	ExpressionStatement	rc = 1	596:4:17672:17678	1065089	1	True				
ANR	1065347	AssignmentExpression	rc = 1		1065089	0		=			
ANR	1065348	Identifier	rc		1065089	0					
ANR	1065349	PrimaryExpression	1		1065089	1					
ANR	1065350	WhileStatement	while ( rc < 127 + 2 && beg + rc < npixels && ( tp [ beg + rc ] & mask ) == b )		1065089	2					
ANR	1065351	Condition	rc < 127 + 2 && beg + rc < npixels && ( tp [ beg + rc ] & mask ) == b	597:11:17691:17754	1065089	0	True				
ANR	1065352	AndExpression	rc < 127 + 2 && beg + rc < npixels && ( tp [ beg + rc ] & mask ) == b		1065089	0		&&			
ANR	1065353	RelationalExpression	rc < 127 + 2		1065089	0		<			
ANR	1065354	Identifier	rc		1065089	0					
ANR	1065355	AdditiveExpression	127 + 2		1065089	1		+			
ANR	1065356	PrimaryExpression	127		1065089	0					
ANR	1065357	PrimaryExpression	2		1065089	1					
ANR	1065358	AndExpression	beg + rc < npixels && ( tp [ beg + rc ] & mask ) == b		1065089	1		&&			
ANR	1065359	RelationalExpression	beg + rc < npixels		1065089	0		<			
ANR	1065360	AdditiveExpression	beg + rc		1065089	0		+			
ANR	1065361	Identifier	beg		1065089	0					
ANR	1065362	Identifier	rc		1065089	1					
ANR	1065363	Identifier	npixels		1065089	1					
ANR	1065364	EqualityExpression	( tp [ beg + rc ] & mask ) == b		1065089	1		==			
ANR	1065365	BitAndExpression	tp [ beg + rc ] & mask		1065089	0		&			
ANR	1065366	ArrayIndexing	tp [ beg + rc ]		1065089	0					
ANR	1065367	Identifier	tp		1065089	0					
ANR	1065368	AdditiveExpression	beg + rc		1065089	1		+			
ANR	1065369	Identifier	beg		1065089	0					
ANR	1065370	Identifier	rc		1065089	1					
ANR	1065371	Identifier	mask		1065089	1					
ANR	1065372	Identifier	b		1065089	1					
ANR	1065373	ExpressionStatement	rc ++	599:5:17762:17766	1065089	1	True				
ANR	1065374	PostIncDecOperationExpression	rc ++		1065089	0					
ANR	1065375	Identifier	rc		1065089	0					
ANR	1065376	IncDec	++		1065089	1					
ANR	1065377	IfStatement	if ( rc >= MINRUN )		1065089	3					
ANR	1065378	Condition	rc >= MINRUN	600:8:17776:17787	1065089	0	True				
ANR	1065379	RelationalExpression	rc >= MINRUN		1065089	0		>=			
ANR	1065380	Identifier	rc		1065089	0					
ANR	1065381	Identifier	MINRUN		1065089	1					
ANR	1065382	BreakStatement	break ;	601:5:17795:17800	1065089	1	True				
ANR	1065383	IfStatement	if ( beg - i > 1 && beg - i < MINRUN )		1065089	3					
ANR	1065384	Condition	beg - i > 1 && beg - i < MINRUN	603:7:17833:17859	1065089	0	True				
ANR	1065385	AndExpression	beg - i > 1 && beg - i < MINRUN		1065089	0		&&			
ANR	1065386	RelationalExpression	beg - i > 1		1065089	0		>			
ANR	1065387	AdditiveExpression	beg - i		1065089	0		-			
ANR	1065388	Identifier	beg		1065089	0					
ANR	1065389	Identifier	i		1065089	1					
ANR	1065390	PrimaryExpression	1		1065089	1					
ANR	1065391	RelationalExpression	beg - i < MINRUN		1065089	1		<			
ANR	1065392	AdditiveExpression	beg - i		1065089	0		-			
ANR	1065393	Identifier	beg		1065089	0					
ANR	1065394	Identifier	i		1065089	1					
ANR	1065395	Identifier	MINRUN		1065089	1					
ANR	1065396	CompoundStatement		49:36:1125:1125	1065089	1					
ANR	1065397	ExpressionStatement	b = tp [ i ] & mask	604:4:17868:17884	1065089	0	True				
ANR	1065398	AssignmentExpression	b = tp [ i ] & mask		1065089	0		=			
ANR	1065399	Identifier	b		1065089	0					
ANR	1065400	BitAndExpression	tp [ i ] & mask		1065089	1		&			
ANR	1065401	ArrayIndexing	tp [ i ]		1065089	0					
ANR	1065402	Identifier	tp		1065089	0					
ANR	1065403	Identifier	i		1065089	1					
ANR	1065404	Identifier	mask		1065089	1					
ANR	1065405	ExpressionStatement	j = i + 1	605:4:17912:17919	1065089	1	True				
ANR	1065406	AssignmentExpression	j = i + 1		1065089	0		=			
ANR	1065407	Identifier	j		1065089	0					
ANR	1065408	AdditiveExpression	i + 1		1065089	1		+			
ANR	1065409	Identifier	i		1065089	0					
ANR	1065410	PrimaryExpression	1		1065089	1					
ANR	1065411	WhileStatement	while ( ( tp [ j ++ ] & mask ) == b )		1065089	2					
ANR	1065412	Condition	( tp [ j ++ ] & mask ) == b	606:11:17932:17952	1065089	0	True				
ANR	1065413	EqualityExpression	( tp [ j ++ ] & mask ) == b		1065089	0		==			
ANR	1065414	BitAndExpression	tp [ j ++ ] & mask		1065089	0		&			
ANR	1065415	ArrayIndexing	tp [ j ++ ]		1065089	0					
ANR	1065416	Identifier	tp		1065089	0					
ANR	1065417	PostIncDecOperationExpression	j ++		1065089	1					
ANR	1065418	Identifier	j		1065089	0					
ANR	1065419	IncDec	++		1065089	1					
ANR	1065420	Identifier	mask		1065089	1					
ANR	1065421	Identifier	b		1065089	1					
ANR	1065422	IfStatement	if ( j == beg )		1065089	1					
ANR	1065423	Condition	j == beg	607:9:17964:17971	1065089	0	True				
ANR	1065424	EqualityExpression	j == beg		1065089	0		==			
ANR	1065425	Identifier	j		1065089	0					
ANR	1065426	Identifier	beg		1065089	1					
ANR	1065427	CompoundStatement		53:19:1237:1237	1065089	1					
ANR	1065428	ExpressionStatement	* op ++ = ( uint8 ) ( 128 - 2 + j - i )	608:6:17982:18008	1065089	0	True				
ANR	1065429	AssignmentExpression	* op ++ = ( uint8 ) ( 128 - 2 + j - i )		1065089	0		=			
ANR	1065430	UnaryOperationExpression	* op ++		1065089	0					
ANR	1065431	UnaryOperator	*		1065089	0					
ANR	1065432	PostIncDecOperationExpression	op ++		1065089	1					
ANR	1065433	Identifier	op		1065089	0					
ANR	1065434	IncDec	++		1065089	1					
ANR	1065435	CastExpression	( uint8 ) ( 128 - 2 + j - i )		1065089	1					
ANR	1065436	CastTarget	uint8		1065089	0					
ANR	1065437	AdditiveExpression	128 - 2 + j - i		1065089	1		-			
ANR	1065438	PrimaryExpression	128		1065089	0					
ANR	1065439	AdditiveExpression	2 + j - i		1065089	1		+			
ANR	1065440	PrimaryExpression	2		1065089	0					
ANR	1065441	AdditiveExpression	j - i		1065089	1		-			
ANR	1065442	Identifier	j		1065089	0					
ANR	1065443	Identifier	i		1065089	1					
ANR	1065444	ExpressionStatement	* op ++ = ( uint8 ) ( b >> shft )	609:6:18016:18042	1065089	1	True				
ANR	1065445	AssignmentExpression	* op ++ = ( uint8 ) ( b >> shft )		1065089	0		=			
ANR	1065446	UnaryOperationExpression	* op ++		1065089	0					
ANR	1065447	UnaryOperator	*		1065089	0					
ANR	1065448	PostIncDecOperationExpression	op ++		1065089	1					
ANR	1065449	Identifier	op		1065089	0					
ANR	1065450	IncDec	++		1065089	1					
ANR	1065451	CastExpression	( uint8 ) ( b >> shft )		1065089	1					
ANR	1065452	CastTarget	uint8		1065089	0					
ANR	1065453	ShiftExpression	b >> shft		1065089	1		>>			
ANR	1065454	Identifier	b		1065089	0					
ANR	1065455	Identifier	shft		1065089	1					
ANR	1065456	ExpressionStatement	occ -= 2	610:6:18050:18058	1065089	2	True				
ANR	1065457	AssignmentExpression	occ -= 2		1065089	0		-=			
ANR	1065458	Identifier	occ		1065089	0					
ANR	1065459	PrimaryExpression	2		1065089	1					
ANR	1065460	ExpressionStatement	i = beg	611:6:18066:18073	1065089	3	True				
ANR	1065461	AssignmentExpression	i = beg		1065089	0		=			
ANR	1065462	Identifier	i		1065089	0					
ANR	1065463	Identifier	beg		1065089	1					
ANR	1065464	BreakStatement	break ;	612:6:18081:18086	1065089	4	True				
ANR	1065465	WhileStatement	while ( i < beg )		1065089	4					
ANR	1065466	Condition	i < beg	615:10:18110:18116	1065089	0	True				
ANR	1065467	RelationalExpression	i < beg		1065089	0		<			
ANR	1065468	Identifier	i		1065089	0					
ANR	1065469	Identifier	beg		1065089	1					
ANR	1065470	CompoundStatement		61:19:1382:1382	1065089	1					
ANR	1065471	IfStatement	if ( ( j = beg - i ) > 127 )		1065089	0					
ANR	1065472	Condition	( j = beg - i ) > 127	616:8:18154:18170	1065089	0	True				
ANR	1065473	RelationalExpression	( j = beg - i ) > 127		1065089	0		>			
ANR	1065474	AssignmentExpression	j = beg - i		1065089	0		=			
ANR	1065475	Identifier	j		1065089	0					
ANR	1065476	AdditiveExpression	beg - i		1065089	1		-			
ANR	1065477	Identifier	beg		1065089	0					
ANR	1065478	Identifier	i		1065089	1					
ANR	1065479	PrimaryExpression	127		1065089	1					
ANR	1065480	ExpressionStatement	j = 127	616:27:18173:18180	1065089	1	True				
ANR	1065481	AssignmentExpression	j = 127		1065089	0		=			
ANR	1065482	Identifier	j		1065089	0					
ANR	1065483	PrimaryExpression	127		1065089	1					
ANR	1065484	IfStatement	if ( occ < j + 3 )		1065089	1					
ANR	1065485	Condition	occ < j + 3	617:8:18190:18198	1065089	0	True				
ANR	1065486	RelationalExpression	occ < j + 3		1065089	0		<			
ANR	1065487	Identifier	occ		1065089	0					
ANR	1065488	AdditiveExpression	j + 3		1065089	1		+			
ANR	1065489	Identifier	j		1065089	0					
ANR	1065490	PrimaryExpression	3		1065089	1					
ANR	1065491	CompoundStatement		63:19:1464:1464	1065089	1					
ANR	1065492	ExpressionStatement	tif -> tif_rawcp = op	618:5:18208:18227	1065089	0	True				
ANR	1065493	AssignmentExpression	tif -> tif_rawcp = op		1065089	0		=			
ANR	1065494	PtrMemberAccess	tif -> tif_rawcp		1065089	0					
ANR	1065495	Identifier	tif		1065089	0					
ANR	1065496	Identifier	tif_rawcp		1065089	1					
ANR	1065497	Identifier	op		1065089	1					
ANR	1065498	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - occ	619:5:18234:18277	1065089	1	True				
ANR	1065499	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - occ		1065089	0		=			
ANR	1065500	PtrMemberAccess	tif -> tif_rawcc		1065089	0					
ANR	1065501	Identifier	tif		1065089	0					
ANR	1065502	Identifier	tif_rawcc		1065089	1					
ANR	1065503	AdditiveExpression	tif -> tif_rawdatasize - occ		1065089	1		-			
ANR	1065504	PtrMemberAccess	tif -> tif_rawdatasize		1065089	0					
ANR	1065505	Identifier	tif		1065089	0					
ANR	1065506	Identifier	tif_rawdatasize		1065089	1					
ANR	1065507	Identifier	occ		1065089	1					
ANR	1065508	IfStatement	if ( ! TIFFFlushData1 ( tif ) )		1065089	2					
ANR	1065509	Condition	! TIFFFlushData1 ( tif )	620:9:18288:18307	1065089	0	True				
ANR	1065510	UnaryOperationExpression	! TIFFFlushData1 ( tif )		1065089	0					
ANR	1065511	UnaryOperator	!		1065089	0					
ANR	1065512	CallExpression	TIFFFlushData1 ( tif )		1065089	1					
ANR	1065513	Callee	TIFFFlushData1		1065089	0					
ANR	1065514	Identifier	TIFFFlushData1		1065089	0					
ANR	1065515	ArgumentList	tif		1065089	1					
ANR	1065516	Argument	tif		1065089	0					
ANR	1065517	Identifier	tif		1065089	0					
ANR	1065518	ReturnStatement	return ( - 1 ) ;	621:6:18316:18327	1065089	1	True				
ANR	1065519	UnaryOperationExpression	- 1		1065089	0					
ANR	1065520	UnaryOperator	-		1065089	0					
ANR	1065521	PrimaryExpression	1		1065089	1					
ANR	1065522	ExpressionStatement	op = tif -> tif_rawcp	622:5:18334:18353	1065089	3	True				
ANR	1065523	AssignmentExpression	op = tif -> tif_rawcp		1065089	0		=			
ANR	1065524	Identifier	op		1065089	0					
ANR	1065525	PtrMemberAccess	tif -> tif_rawcp		1065089	1					
ANR	1065526	Identifier	tif		1065089	0					
ANR	1065527	Identifier	tif_rawcp		1065089	1					
ANR	1065528	ExpressionStatement	occ = tif -> tif_rawdatasize - tif -> tif_rawcc	623:5:18360:18403	1065089	4	True				
ANR	1065529	AssignmentExpression	occ = tif -> tif_rawdatasize - tif -> tif_rawcc		1065089	0		=			
ANR	1065530	Identifier	occ		1065089	0					
ANR	1065531	AdditiveExpression	tif -> tif_rawdatasize - tif -> tif_rawcc		1065089	1		-			
ANR	1065532	PtrMemberAccess	tif -> tif_rawdatasize		1065089	0					
ANR	1065533	Identifier	tif		1065089	0					
ANR	1065534	Identifier	tif_rawdatasize		1065089	1					
ANR	1065535	PtrMemberAccess	tif -> tif_rawcc		1065089	1					
ANR	1065536	Identifier	tif		1065089	0					
ANR	1065537	Identifier	tif_rawcc		1065089	1					
ANR	1065538	ExpressionStatement	* op ++ = ( uint8 ) j	625:4:18415:18432	1065089	2	True				
ANR	1065539	AssignmentExpression	* op ++ = ( uint8 ) j		1065089	0		=			
ANR	1065540	UnaryOperationExpression	* op ++		1065089	0					
ANR	1065541	UnaryOperator	*		1065089	0					
ANR	1065542	PostIncDecOperationExpression	op ++		1065089	1					
ANR	1065543	Identifier	op		1065089	0					
ANR	1065544	IncDec	++		1065089	1					
ANR	1065545	CastExpression	( uint8 ) j		1065089	1					
ANR	1065546	CastTarget	uint8		1065089	0					
ANR	1065547	Identifier	j		1065089	1					
ANR	1065548	ExpressionStatement	occ --	625:23:18434:18439	1065089	3	True				
ANR	1065549	PostIncDecOperationExpression	occ --		1065089	0					
ANR	1065550	Identifier	occ		1065089	0					
ANR	1065551	IncDec	--		1065089	1					
ANR	1065552	WhileStatement	while ( j -- )		1065089	4					
ANR	1065553	Condition	j --	626:11:18452:18454	1065089	0	True				
ANR	1065554	PostIncDecOperationExpression	j --		1065089	0					
ANR	1065555	Identifier	j		1065089	0					
ANR	1065556	IncDec	--		1065089	1					
ANR	1065557	CompoundStatement		72:16:1720:1720	1065089	1					
ANR	1065558	ExpressionStatement	* op ++ = ( uint8 ) ( tp [ i ++ ] >> shft & 0xff )	627:5:18464:18503	1065089	0	True				
ANR	1065559	AssignmentExpression	* op ++ = ( uint8 ) ( tp [ i ++ ] >> shft & 0xff )		1065089	0		=			
ANR	1065560	UnaryOperationExpression	* op ++		1065089	0					
ANR	1065561	UnaryOperator	*		1065089	0					
ANR	1065562	PostIncDecOperationExpression	op ++		1065089	1					
ANR	1065563	Identifier	op		1065089	0					
ANR	1065564	IncDec	++		1065089	1					
ANR	1065565	CastExpression	( uint8 ) ( tp [ i ++ ] >> shft & 0xff )		1065089	1					
ANR	1065566	CastTarget	uint8		1065089	0					
ANR	1065567	BitAndExpression	tp [ i ++ ] >> shft & 0xff		1065089	1		&			
ANR	1065568	ShiftExpression	tp [ i ++ ] >> shft		1065089	0		>>			
ANR	1065569	ArrayIndexing	tp [ i ++ ]		1065089	0					
ANR	1065570	Identifier	tp		1065089	0					
ANR	1065571	PostIncDecOperationExpression	i ++		1065089	1					
ANR	1065572	Identifier	i		1065089	0					
ANR	1065573	IncDec	++		1065089	1					
ANR	1065574	Identifier	shft		1065089	1					
ANR	1065575	PrimaryExpression	0xff		1065089	1					
ANR	1065576	ExpressionStatement	occ --	628:5:18510:18515	1065089	1	True				
ANR	1065577	PostIncDecOperationExpression	occ --		1065089	0					
ANR	1065578	Identifier	occ		1065089	0					
ANR	1065579	IncDec	--		1065089	1					
ANR	1065580	IfStatement	if ( rc >= MINRUN )		1065089	5					
ANR	1065581	Condition	rc >= MINRUN	631:7:18535:18546	1065089	0	True				
ANR	1065582	RelationalExpression	rc >= MINRUN		1065089	0		>=			
ANR	1065583	Identifier	rc		1065089	0					
ANR	1065584	Identifier	MINRUN		1065089	1					
ANR	1065585	CompoundStatement		77:21:1812:1812	1065089	1					
ANR	1065586	ExpressionStatement	* op ++ = ( uint8 ) ( 128 - 2 + rc )	632:4:18576:18602	1065089	0	True				
ANR	1065587	AssignmentExpression	* op ++ = ( uint8 ) ( 128 - 2 + rc )		1065089	0		=			
ANR	1065588	UnaryOperationExpression	* op ++		1065089	0					
ANR	1065589	UnaryOperator	*		1065089	0					
ANR	1065590	PostIncDecOperationExpression	op ++		1065089	1					
ANR	1065591	Identifier	op		1065089	0					
ANR	1065592	IncDec	++		1065089	1					
ANR	1065593	CastExpression	( uint8 ) ( 128 - 2 + rc )		1065089	1					
ANR	1065594	CastTarget	uint8		1065089	0					
ANR	1065595	AdditiveExpression	128 - 2 + rc		1065089	1		-			
ANR	1065596	PrimaryExpression	128		1065089	0					
ANR	1065597	AdditiveExpression	2 + rc		1065089	1		+			
ANR	1065598	PrimaryExpression	2		1065089	0					
ANR	1065599	Identifier	rc		1065089	1					
ANR	1065600	ExpressionStatement	* op ++ = ( uint8 ) ( tp [ beg ] >> shft & 0xff )	633:4:18608:18647	1065089	1	True				
ANR	1065601	AssignmentExpression	* op ++ = ( uint8 ) ( tp [ beg ] >> shft & 0xff )		1065089	0		=			
ANR	1065602	UnaryOperationExpression	* op ++		1065089	0					
ANR	1065603	UnaryOperator	*		1065089	0					
ANR	1065604	PostIncDecOperationExpression	op ++		1065089	1					
ANR	1065605	Identifier	op		1065089	0					
ANR	1065606	IncDec	++		1065089	1					
ANR	1065607	CastExpression	( uint8 ) ( tp [ beg ] >> shft & 0xff )		1065089	1					
ANR	1065608	CastTarget	uint8		1065089	0					
ANR	1065609	BitAndExpression	tp [ beg ] >> shft & 0xff		1065089	1		&			
ANR	1065610	ShiftExpression	tp [ beg ] >> shft		1065089	0		>>			
ANR	1065611	ArrayIndexing	tp [ beg ]		1065089	0					
ANR	1065612	Identifier	tp		1065089	0					
ANR	1065613	Identifier	beg		1065089	1					
ANR	1065614	Identifier	shft		1065089	1					
ANR	1065615	PrimaryExpression	0xff		1065089	1					
ANR	1065616	ExpressionStatement	occ -= 2	634:4:18653:18661	1065089	2	True				
ANR	1065617	AssignmentExpression	occ -= 2		1065089	0		-=			
ANR	1065618	Identifier	occ		1065089	0					
ANR	1065619	PrimaryExpression	2		1065089	1					
ANR	1065620	ElseStatement	else		1065089	0					
ANR	1065621	ExpressionStatement	rc = 0	636:4:18677:18683	1065089	0	True				
ANR	1065622	AssignmentExpression	rc = 0		1065089	0		=			
ANR	1065623	Identifier	rc		1065089	0					
ANR	1065624	PrimaryExpression	0		1065089	1					
ANR	1065625	ExpressionStatement	tif -> tif_rawcp = op	638:1:18690:18709	1065089	18	True				
ANR	1065626	AssignmentExpression	tif -> tif_rawcp = op		1065089	0		=			
ANR	1065627	PtrMemberAccess	tif -> tif_rawcp		1065089	0					
ANR	1065628	Identifier	tif		1065089	0					
ANR	1065629	Identifier	tif_rawcp		1065089	1					
ANR	1065630	Identifier	op		1065089	1					
ANR	1065631	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - occ	639:1:18712:18755	1065089	19	True				
ANR	1065632	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - occ		1065089	0		=			
ANR	1065633	PtrMemberAccess	tif -> tif_rawcc		1065089	0					
ANR	1065634	Identifier	tif		1065089	0					
ANR	1065635	Identifier	tif_rawcc		1065089	1					
ANR	1065636	AdditiveExpression	tif -> tif_rawdatasize - occ		1065089	1		-			
ANR	1065637	PtrMemberAccess	tif -> tif_rawdatasize		1065089	0					
ANR	1065638	Identifier	tif		1065089	0					
ANR	1065639	Identifier	tif_rawdatasize		1065089	1					
ANR	1065640	Identifier	occ		1065089	1					
ANR	1065641	ReturnStatement	return ( 1 ) ;	641:1:18759:18769	1065089	20	True				
ANR	1065642	PrimaryExpression	1		1065089	0					
ANR	1065643	ReturnType	static int		1065089	1					
ANR	1065644	Identifier	LogLuvEncode32		1065089	2					
ANR	1065645	ParameterList	"TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s"		1065089	3					
ANR	1065646	Parameter	TIFF * tif	554:15:16691:16699	1065089	0	True				
ANR	1065647	ParameterType	TIFF *		1065089	0					
ANR	1065648	Identifier	tif		1065089	1					
ANR	1065649	Parameter	uint8 * bp	554:26:16702:16710	1065089	1	True				
ANR	1065650	ParameterType	uint8 *		1065089	0					
ANR	1065651	Identifier	bp		1065089	1					
ANR	1065652	Parameter	tmsize_t cc	554:37:16713:16723	1065089	2	True				
ANR	1065653	ParameterType	tmsize_t		1065089	0					
ANR	1065654	Identifier	cc		1065089	1					
ANR	1065655	Parameter	uint16 s	554:50:16726:16733	1065089	3	True				
ANR	1065656	ParameterType	uint16		1065089	0					
ANR	1065657	Identifier	s		1065089	1					
ANR	1065658	CFGEntryNode	ENTRY		1065089		True				
ANR	1065659	CFGExitNode	EXIT		1065089		True				
ANR	1065660	Symbol	* sp		1065089						
ANR	1065661	Symbol	beg		1065089						
ANR	1065662	Symbol	sp -> user_datafmt		1065089						
ANR	1065663	Symbol	SGILOGDATAFMT_RAW		1065089						
ANR	1065664	Symbol	bp		1065089						
ANR	1065665	Symbol	occ		1065089						
ANR	1065666	Symbol	tif		1065089						
ANR	1065667	Symbol	npixels		1065089						
ANR	1065668	Symbol	sp -> tbuflen		1065089						
ANR	1065669	Symbol	tif -> tif_rawcc		1065089						
ANR	1065670	Symbol	* beg		1065089						
ANR	1065671	Symbol	sp -> pixel_size		1065089						
ANR	1065672	Symbol	TIFFFlushData1		1065089						
ANR	1065673	Symbol	shft		1065089						
ANR	1065674	Symbol	sp -> tbuf		1065089						
ANR	1065675	Symbol	sp -> tfunc		1065089						
ANR	1065676	Symbol	sp		1065089						
ANR	1065677	Symbol	mask		1065089						
ANR	1065678	Symbol	cc		1065089						
ANR	1065679	Symbol	EncoderState		1065089						
ANR	1065680	Symbol	op		1065089						
ANR	1065681	Symbol	* tp		1065089						
ANR	1065682	Symbol	b		1065089						
ANR	1065683	Symbol	NULL		1065089						
ANR	1065684	Symbol	i		1065089						
ANR	1065685	Symbol	j		1065089						
ANR	1065686	Symbol	tif -> tif_rawcp		1065089						
ANR	1065687	Symbol	rc		1065089						
ANR	1065688	Symbol	s		1065089						
ANR	1065689	Symbol	* i		1065089						
ANR	1065690	Symbol	tif -> tif_rawdatasize		1065089						
ANR	1065691	Symbol	* rc		1065089						
ANR	1065692	Symbol	MINRUN		1065089						
ANR	1065693	Symbol	* op ++		1065089						
ANR	1065694	Symbol	* tif		1065089						
ANR	1065695	Symbol	tp		1065089						
ANR	1065696	Function	LogLuvEncodeStrip	648:0:18882:19189							
ANR	1065697	FunctionDef	"LogLuvEncodeStrip (TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s)"		1065696	0					
ANR	1065698	CompoundStatement		650:0:18956:19189	1065696	0					
ANR	1065699	IdentifierDeclStatement	tmsize_t rowlen = TIFFScanlineSize ( tif ) ;	651:1:18959:18998	1065696	0	True				
ANR	1065700	IdentifierDecl	rowlen = TIFFScanlineSize ( tif )		1065696	0					
ANR	1065701	IdentifierDeclType	tmsize_t		1065696	0					
ANR	1065702	Identifier	rowlen		1065696	1					
ANR	1065703	AssignmentExpression	rowlen = TIFFScanlineSize ( tif )		1065696	2		=			
ANR	1065704	Identifier	rowlen		1065696	0					
ANR	1065705	CallExpression	TIFFScanlineSize ( tif )		1065696	1					
ANR	1065706	Callee	TIFFScanlineSize		1065696	0					
ANR	1065707	Identifier	TIFFScanlineSize		1065696	0					
ANR	1065708	ArgumentList	tif		1065696	1					
ANR	1065709	Argument	tif		1065696	0					
ANR	1065710	Identifier	tif		1065696	0					
ANR	1065711	IfStatement	if ( rowlen == 0 )		1065696	1					
ANR	1065712	Condition	rowlen == 0	653:12:19013:19023	1065696	0	True				
ANR	1065713	EqualityExpression	rowlen == 0		1065696	0		==			
ANR	1065714	Identifier	rowlen		1065696	0					
ANR	1065715	PrimaryExpression	0		1065696	1					
ANR	1065716	ReturnStatement	return 0 ;	654:16:19042:19050	1065696	1	True				
ANR	1065717	PrimaryExpression	0		1065696	0					
ANR	1065718	ExpressionStatement	assert ( cc % rowlen == 0 )	656:1:19054:19076	1065696	2	True				
ANR	1065719	CallExpression	assert ( cc % rowlen == 0 )		1065696	0					
ANR	1065720	Callee	assert		1065696	0					
ANR	1065721	Identifier	assert		1065696	0					
ANR	1065722	ArgumentList	cc % rowlen == 0		1065696	1					
ANR	1065723	Argument	cc % rowlen == 0		1065696	0					
ANR	1065724	EqualityExpression	cc % rowlen == 0		1065696	0		==			
ANR	1065725	MultiplicativeExpression	cc % rowlen		1065696	0		%			
ANR	1065726	Identifier	cc		1065696	0					
ANR	1065727	Identifier	rowlen		1065696	1					
ANR	1065728	PrimaryExpression	0		1065696	1					
ANR	1065729	WhileStatement	"while ( cc && ( * tif -> tif_encoderow ) ( tif , bp , rowlen , s ) == 1 )"		1065696	3					
ANR	1065730	Condition	"cc && ( * tif -> tif_encoderow ) ( tif , bp , rowlen , s ) == 1"	657:8:19086:19137	1065696	0	True				
ANR	1065731	AndExpression	"cc && ( * tif -> tif_encoderow ) ( tif , bp , rowlen , s ) == 1"		1065696	0		&&			
ANR	1065732	Identifier	cc		1065696	0					
ANR	1065733	EqualityExpression	"( * tif -> tif_encoderow ) ( tif , bp , rowlen , s ) == 1"		1065696	1		==			
ANR	1065734	CallExpression	"( * tif -> tif_encoderow ) ( tif , bp , rowlen , s )"		1065696	0					
ANR	1065735	Callee	* tif -> tif_encoderow		1065696	0					
ANR	1065736	UnaryOperationExpression	* tif -> tif_encoderow		1065696	0					
ANR	1065737	UnaryOperator	*		1065696	0					
ANR	1065738	PtrMemberAccess	tif -> tif_encoderow		1065696	1					
ANR	1065739	Identifier	tif		1065696	0					
ANR	1065740	Identifier	tif_encoderow		1065696	1					
ANR	1065741	ArgumentList	tif		1065696	1					
ANR	1065742	Argument	tif		1065696	0					
ANR	1065743	Identifier	tif		1065696	0					
ANR	1065744	Argument	bp		1065696	1					
ANR	1065745	Identifier	bp		1065696	0					
ANR	1065746	Argument	rowlen		1065696	2					
ANR	1065747	Identifier	rowlen		1065696	0					
ANR	1065748	Argument	s		1065696	3					
ANR	1065749	Identifier	s		1065696	0					
ANR	1065750	PrimaryExpression	1		1065696	1					
ANR	1065751	ExpressionStatement	"bp += rowlen , cc -= rowlen"	658:2:19142:19168	1065696	1	True				
ANR	1065752	Expression	"bp += rowlen , cc -= rowlen"		1065696	0					
ANR	1065753	AssignmentExpression	bp += rowlen		1065696	0		+=			
ANR	1065754	Identifier	bp		1065696	0					
ANR	1065755	Identifier	rowlen		1065696	1					
ANR	1065756	AssignmentExpression	cc -= rowlen		1065696	1		-=			
ANR	1065757	Identifier	cc		1065696	0					
ANR	1065758	Identifier	rowlen		1065696	1					
ANR	1065759	ReturnStatement	return ( cc == 0 ) ;	659:1:19171:19187	1065696	4	True				
ANR	1065760	EqualityExpression	cc == 0		1065696	0		==			
ANR	1065761	Identifier	cc		1065696	0					
ANR	1065762	PrimaryExpression	0		1065696	1					
ANR	1065763	ReturnType	static int		1065696	1					
ANR	1065764	Identifier	LogLuvEncodeStrip		1065696	2					
ANR	1065765	ParameterList	"TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s"		1065696	3					
ANR	1065766	Parameter	TIFF * tif	649:18:18911:18919	1065696	0	True				
ANR	1065767	ParameterType	TIFF *		1065696	0					
ANR	1065768	Identifier	tif		1065696	1					
ANR	1065769	Parameter	uint8 * bp	649:29:18922:18930	1065696	1	True				
ANR	1065770	ParameterType	uint8 *		1065696	0					
ANR	1065771	Identifier	bp		1065696	1					
ANR	1065772	Parameter	tmsize_t cc	649:40:18933:18943	1065696	2	True				
ANR	1065773	ParameterType	tmsize_t		1065696	0					
ANR	1065774	Identifier	cc		1065696	1					
ANR	1065775	Parameter	uint16 s	649:53:18946:18953	1065696	3	True				
ANR	1065776	ParameterType	uint16		1065696	0					
ANR	1065777	Identifier	s		1065696	1					
ANR	1065778	CFGEntryNode	ENTRY		1065696		True				
ANR	1065779	CFGExitNode	EXIT		1065696		True				
ANR	1065780	Symbol	tif		1065696						
ANR	1065781	Symbol	cc		1065696						
ANR	1065782	Symbol	TIFFScanlineSize		1065696						
ANR	1065783	Symbol	tif -> tif_encoderow		1065696						
ANR	1065784	Symbol	s		1065696						
ANR	1065785	Symbol	* * tif		1065696						
ANR	1065786	Symbol	rowlen		1065696						
ANR	1065787	Symbol	* tif -> tif_encoderow		1065696						
ANR	1065788	Symbol	* tif		1065696						
ANR	1065789	Symbol	bp		1065696						
ANR	1065790	Function	LogLuvEncodeTile	666:0:19299:19604							
ANR	1065791	FunctionDef	"LogLuvEncodeTile (TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s)"		1065790	0					
ANR	1065792	CompoundStatement		668:0:19372:19604	1065790	0					
ANR	1065793	IdentifierDeclStatement	tmsize_t rowlen = TIFFTileRowSize ( tif ) ;	669:1:19375:19413	1065790	0	True				
ANR	1065794	IdentifierDecl	rowlen = TIFFTileRowSize ( tif )		1065790	0					
ANR	1065795	IdentifierDeclType	tmsize_t		1065790	0					
ANR	1065796	Identifier	rowlen		1065790	1					
ANR	1065797	AssignmentExpression	rowlen = TIFFTileRowSize ( tif )		1065790	2		=			
ANR	1065798	Identifier	rowlen		1065790	0					
ANR	1065799	CallExpression	TIFFTileRowSize ( tif )		1065790	1					
ANR	1065800	Callee	TIFFTileRowSize		1065790	0					
ANR	1065801	Identifier	TIFFTileRowSize		1065790	0					
ANR	1065802	ArgumentList	tif		1065790	1					
ANR	1065803	Argument	tif		1065790	0					
ANR	1065804	Identifier	tif		1065790	0					
ANR	1065805	IfStatement	if ( rowlen == 0 )		1065790	1					
ANR	1065806	Condition	rowlen == 0	671:12:19428:19438	1065790	0	True				
ANR	1065807	EqualityExpression	rowlen == 0		1065790	0		==			
ANR	1065808	Identifier	rowlen		1065790	0					
ANR	1065809	PrimaryExpression	0		1065790	1					
ANR	1065810	ReturnStatement	return 0 ;	672:16:19457:19465	1065790	1	True				
ANR	1065811	PrimaryExpression	0		1065790	0					
ANR	1065812	ExpressionStatement	assert ( cc % rowlen == 0 )	674:1:19469:19491	1065790	2	True				
ANR	1065813	CallExpression	assert ( cc % rowlen == 0 )		1065790	0					
ANR	1065814	Callee	assert		1065790	0					
ANR	1065815	Identifier	assert		1065790	0					
ANR	1065816	ArgumentList	cc % rowlen == 0		1065790	1					
ANR	1065817	Argument	cc % rowlen == 0		1065790	0					
ANR	1065818	EqualityExpression	cc % rowlen == 0		1065790	0		==			
ANR	1065819	MultiplicativeExpression	cc % rowlen		1065790	0		%			
ANR	1065820	Identifier	cc		1065790	0					
ANR	1065821	Identifier	rowlen		1065790	1					
ANR	1065822	PrimaryExpression	0		1065790	1					
ANR	1065823	WhileStatement	"while ( cc && ( * tif -> tif_encoderow ) ( tif , bp , rowlen , s ) == 1 )"		1065790	3					
ANR	1065824	Condition	"cc && ( * tif -> tif_encoderow ) ( tif , bp , rowlen , s ) == 1"	675:8:19501:19552	1065790	0	True				
ANR	1065825	AndExpression	"cc && ( * tif -> tif_encoderow ) ( tif , bp , rowlen , s ) == 1"		1065790	0		&&			
ANR	1065826	Identifier	cc		1065790	0					
ANR	1065827	EqualityExpression	"( * tif -> tif_encoderow ) ( tif , bp , rowlen , s ) == 1"		1065790	1		==			
ANR	1065828	CallExpression	"( * tif -> tif_encoderow ) ( tif , bp , rowlen , s )"		1065790	0					
ANR	1065829	Callee	* tif -> tif_encoderow		1065790	0					
ANR	1065830	UnaryOperationExpression	* tif -> tif_encoderow		1065790	0					
ANR	1065831	UnaryOperator	*		1065790	0					
ANR	1065832	PtrMemberAccess	tif -> tif_encoderow		1065790	1					
ANR	1065833	Identifier	tif		1065790	0					
ANR	1065834	Identifier	tif_encoderow		1065790	1					
ANR	1065835	ArgumentList	tif		1065790	1					
ANR	1065836	Argument	tif		1065790	0					
ANR	1065837	Identifier	tif		1065790	0					
ANR	1065838	Argument	bp		1065790	1					
ANR	1065839	Identifier	bp		1065790	0					
ANR	1065840	Argument	rowlen		1065790	2					
ANR	1065841	Identifier	rowlen		1065790	0					
ANR	1065842	Argument	s		1065790	3					
ANR	1065843	Identifier	s		1065790	0					
ANR	1065844	PrimaryExpression	1		1065790	1					
ANR	1065845	ExpressionStatement	"bp += rowlen , cc -= rowlen"	676:2:19557:19583	1065790	1	True				
ANR	1065846	Expression	"bp += rowlen , cc -= rowlen"		1065790	0					
ANR	1065847	AssignmentExpression	bp += rowlen		1065790	0		+=			
ANR	1065848	Identifier	bp		1065790	0					
ANR	1065849	Identifier	rowlen		1065790	1					
ANR	1065850	AssignmentExpression	cc -= rowlen		1065790	1		-=			
ANR	1065851	Identifier	cc		1065790	0					
ANR	1065852	Identifier	rowlen		1065790	1					
ANR	1065853	ReturnStatement	return ( cc == 0 ) ;	677:1:19586:19602	1065790	4	True				
ANR	1065854	EqualityExpression	cc == 0		1065790	0		==			
ANR	1065855	Identifier	cc		1065790	0					
ANR	1065856	PrimaryExpression	0		1065790	1					
ANR	1065857	ReturnType	static int		1065790	1					
ANR	1065858	Identifier	LogLuvEncodeTile		1065790	2					
ANR	1065859	ParameterList	"TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s"		1065790	3					
ANR	1065860	Parameter	TIFF * tif	667:17:19327:19335	1065790	0	True				
ANR	1065861	ParameterType	TIFF *		1065790	0					
ANR	1065862	Identifier	tif		1065790	1					
ANR	1065863	Parameter	uint8 * bp	667:28:19338:19346	1065790	1	True				
ANR	1065864	ParameterType	uint8 *		1065790	0					
ANR	1065865	Identifier	bp		1065790	1					
ANR	1065866	Parameter	tmsize_t cc	667:39:19349:19359	1065790	2	True				
ANR	1065867	ParameterType	tmsize_t		1065790	0					
ANR	1065868	Identifier	cc		1065790	1					
ANR	1065869	Parameter	uint16 s	667:52:19362:19369	1065790	3	True				
ANR	1065870	ParameterType	uint16		1065790	0					
ANR	1065871	Identifier	s		1065790	1					
ANR	1065872	CFGEntryNode	ENTRY		1065790		True				
ANR	1065873	CFGExitNode	EXIT		1065790		True				
ANR	1065874	Symbol	tif		1065790						
ANR	1065875	Symbol	cc		1065790						
ANR	1065876	Symbol	tif -> tif_encoderow		1065790						
ANR	1065877	Symbol	s		1065790						
ANR	1065878	Symbol	* * tif		1065790						
ANR	1065879	Symbol	rowlen		1065790						
ANR	1065880	Symbol	* tif -> tif_encoderow		1065790						
ANR	1065881	Symbol	TIFFTileRowSize		1065790						
ANR	1065882	Symbol	* tif		1065790						
ANR	1065883	Symbol	bp		1065790						
ANR	1065884	Function	LogL16toY	710:0:20230:20439							
ANR	1065885	FunctionDef	LogL16toY (int p16)		1065884	0					
ANR	1065886	CompoundStatement		712:0:20298:20439	1065884	0					
ANR	1065887	IdentifierDeclStatement	int Le = p16 & 0x7fff ;	713:1:20301:20322	1065884	0	True				
ANR	1065888	IdentifierDecl	Le = p16 & 0x7fff		1065884	0					
ANR	1065889	IdentifierDeclType	int		1065884	0					
ANR	1065890	Identifier	Le		1065884	1					
ANR	1065891	AssignmentExpression	Le = p16 & 0x7fff		1065884	2		=			
ANR	1065892	Identifier	Le		1065884	0					
ANR	1065893	BitAndExpression	p16 & 0x7fff		1065884	1		&			
ANR	1065894	Identifier	p16		1065884	0					
ANR	1065895	PrimaryExpression	0x7fff		1065884	1					
ANR	1065896	IdentifierDeclStatement	double Y ;	714:1:20325:20333	1065884	1	True				
ANR	1065897	IdentifierDecl	Y		1065884	0					
ANR	1065898	IdentifierDeclType	double		1065884	0					
ANR	1065899	Identifier	Y		1065884	1					
ANR	1065900	IfStatement	if ( ! Le )		1065884	2					
ANR	1065901	Condition	! Le	716:5:20341:20343	1065884	0	True				
ANR	1065902	UnaryOperationExpression	! Le		1065884	0					
ANR	1065903	UnaryOperator	!		1065884	0					
ANR	1065904	Identifier	Le		1065884	1					
ANR	1065905	ReturnStatement	return ( 0. ) ;	717:2:20348:20359	1065884	1	True				
ANR	1065906	PrimaryExpression	0.		1065884	0					
ANR	1065907	ExpressionStatement	Y = exp ( M_LN2 / 256. * ( Le + .5 ) - M_LN2 * 64. )	718:1:20362:20401	1065884	3	True				
ANR	1065908	AssignmentExpression	Y = exp ( M_LN2 / 256. * ( Le + .5 ) - M_LN2 * 64. )		1065884	0		=			
ANR	1065909	Identifier	Y		1065884	0					
ANR	1065910	CallExpression	exp ( M_LN2 / 256. * ( Le + .5 ) - M_LN2 * 64. )		1065884	1					
ANR	1065911	Callee	exp		1065884	0					
ANR	1065912	Identifier	exp		1065884	0					
ANR	1065913	ArgumentList	M_LN2 / 256. * ( Le + .5 ) - M_LN2 * 64.		1065884	1					
ANR	1065914	Argument	M_LN2 / 256. * ( Le + .5 ) - M_LN2 * 64.		1065884	0					
ANR	1065915	AdditiveExpression	M_LN2 / 256. * ( Le + .5 ) - M_LN2 * 64.		1065884	0		-			
ANR	1065916	MultiplicativeExpression	M_LN2 / 256. * ( Le + .5 )		1065884	0		/			
ANR	1065917	Identifier	M_LN2		1065884	0					
ANR	1065918	MultiplicativeExpression	256. * ( Le + .5 )		1065884	1		*			
ANR	1065919	PrimaryExpression	256.		1065884	0					
ANR	1065920	AdditiveExpression	Le + .5		1065884	1		+			
ANR	1065921	Identifier	Le		1065884	0					
ANR	1065922	PrimaryExpression	.5		1065884	1					
ANR	1065923	MultiplicativeExpression	M_LN2 * 64.		1065884	1		*			
ANR	1065924	Identifier	M_LN2		1065884	0					
ANR	1065925	PrimaryExpression	64.		1065884	1					
ANR	1065926	ReturnStatement	return ( ! ( p16 & 0x8000 ) ? Y : - Y ) ;	719:1:20404:20437	1065884	4	True				
ANR	1065927	ConditionalExpression	! ( p16 & 0x8000 ) ? Y : - Y		1065884	0					
ANR	1065928	Condition	! ( p16 & 0x8000 )		1065884	0					
ANR	1065929	UnaryOperationExpression	! ( p16 & 0x8000 )		1065884	0					
ANR	1065930	UnaryOperator	!		1065884	0					
ANR	1065931	BitAndExpression	p16 & 0x8000		1065884	1		&			
ANR	1065932	Identifier	p16		1065884	0					
ANR	1065933	PrimaryExpression	0x8000		1065884	1					
ANR	1065934	Identifier	Y		1065884	1					
ANR	1065935	UnaryOperationExpression	- Y		1065884	2					
ANR	1065936	UnaryOperator	-		1065884	0					
ANR	1065937	Identifier	Y		1065884	1					
ANR	1065938	ReturnType	double		1065884	1					
ANR	1065939	Identifier	LogL16toY		1065884	2					
ANR	1065940	ParameterList	int p16		1065884	3					
ANR	1065941	Parameter	int p16	711:10:20247:20253	1065884	0	True				
ANR	1065942	ParameterType	int		1065884	0					
ANR	1065943	Identifier	p16		1065884	1					
ANR	1065944	CFGEntryNode	ENTRY		1065884		True				
ANR	1065945	CFGExitNode	EXIT		1065884		True				
ANR	1065946	Symbol	p16		1065884						
ANR	1065947	Symbol	M_LN2		1065884						
ANR	1065948	Symbol	Le		1065884						
ANR	1065949	Symbol	Y		1065884						
ANR	1065950	Symbol	exp		1065884						
ANR	1065951	Function	LogL16fromY	725:0:20475:20788							
ANR	1065952	FunctionDef	"LogL16fromY (double Y , int em)"		1065951	0					
ANR	1065953	CompoundStatement		727:0:20538:20788	1065951	0					
ANR	1065954	IfStatement	if ( Y >= 1.8371976e19 )		1065951	0					
ANR	1065955	Condition	Y >= 1.8371976e19	728:5:20545:20561	1065951	0	True				
ANR	1065956	RelationalExpression	Y >= 1.8371976e19		1065951	0		>=			
ANR	1065957	Identifier	Y		1065951	0					
ANR	1065958	PrimaryExpression	1.8371976e19		1065951	1					
ANR	1065959	ReturnStatement	return ( 0x7fff ) ;	729:2:20566:20581	1065951	1	True				
ANR	1065960	PrimaryExpression	0x7fff		1065951	0					
ANR	1065961	IfStatement	if ( Y <= - 1.8371976e19 )		1065951	1					
ANR	1065962	Condition	Y <= - 1.8371976e19	730:5:20588:20605	1065951	0	True				
ANR	1065963	RelationalExpression	Y <= - 1.8371976e19		1065951	0		<=			
ANR	1065964	Identifier	Y		1065951	0					
ANR	1065965	UnaryOperationExpression	- 1.8371976e19		1065951	1					
ANR	1065966	UnaryOperator	-		1065951	0					
ANR	1065967	PrimaryExpression	1.8371976e19		1065951	1					
ANR	1065968	ReturnStatement	return ( 0xffff ) ;	731:2:20610:20625	1065951	1	True				
ANR	1065969	PrimaryExpression	0xffff		1065951	0					
ANR	1065970	IfStatement	if ( Y > 5.4136769e-20 )		1065951	2					
ANR	1065971	Condition	Y > 5.4136769e-20	732:5:20632:20648	1065951	0	True				
ANR	1065972	RelationalExpression	Y > 5.4136769e-20		1065951	0		>			
ANR	1065973	Identifier	Y		1065951	0					
ANR	1065974	PrimaryExpression	5.4136769e-20		1065951	1					
ANR	1065975	ReturnStatement	"return itrunc ( 256. * ( log2 ( Y ) + 64. ) , em ) ;"	733:2:20653:20692	1065951	1	True				
ANR	1065976	CallExpression	"itrunc ( 256. * ( log2 ( Y ) + 64. ) , em )"		1065951	0					
ANR	1065977	Callee	itrunc		1065951	0					
ANR	1065978	Identifier	itrunc		1065951	0					
ANR	1065979	ArgumentList	256. * ( log2 ( Y ) + 64. )		1065951	1					
ANR	1065980	Argument	256. * ( log2 ( Y ) + 64. )		1065951	0					
ANR	1065981	MultiplicativeExpression	256. * ( log2 ( Y ) + 64. )		1065951	0		*			
ANR	1065982	PrimaryExpression	256.		1065951	0					
ANR	1065983	AdditiveExpression	log2 ( Y ) + 64.		1065951	1		+			
ANR	1065984	CallExpression	log2 ( Y )		1065951	0					
ANR	1065985	Callee	log2		1065951	0					
ANR	1065986	Identifier	log2		1065951	0					
ANR	1065987	ArgumentList	Y		1065951	1					
ANR	1065988	Argument	Y		1065951	0					
ANR	1065989	Identifier	Y		1065951	0					
ANR	1065990	PrimaryExpression	64.		1065951	1					
ANR	1065991	Argument	em		1065951	1					
ANR	1065992	Identifier	em		1065951	0					
ANR	1065993	IfStatement	if ( Y < - 5.4136769e-20 )		1065951	3					
ANR	1065994	Condition	Y < - 5.4136769e-20	734:5:20699:20716	1065951	0	True				
ANR	1065995	RelationalExpression	Y < - 5.4136769e-20		1065951	0		<			
ANR	1065996	Identifier	Y		1065951	0					
ANR	1065997	UnaryOperationExpression	- 5.4136769e-20		1065951	1					
ANR	1065998	UnaryOperator	-		1065951	0					
ANR	1065999	PrimaryExpression	5.4136769e-20		1065951	1					
ANR	1066000	ReturnStatement	"return ( ~0x7fff | itrunc ( 256. * ( log2 ( - Y ) + 64. ) , em ) ) ;"	735:2:20721:20773	1065951	1	True				
ANR	1066001	InclusiveOrExpression	"~0x7fff | itrunc ( 256. * ( log2 ( - Y ) + 64. ) , em )"		1065951	0		|			
ANR	1066002	Identifier	~0x7fff		1065951	0					
ANR	1066003	CallExpression	"itrunc ( 256. * ( log2 ( - Y ) + 64. ) , em )"		1065951	1					
ANR	1066004	Callee	itrunc		1065951	0					
ANR	1066005	Identifier	itrunc		1065951	0					
ANR	1066006	ArgumentList	256. * ( log2 ( - Y ) + 64. )		1065951	1					
ANR	1066007	Argument	256. * ( log2 ( - Y ) + 64. )		1065951	0					
ANR	1066008	MultiplicativeExpression	256. * ( log2 ( - Y ) + 64. )		1065951	0		*			
ANR	1066009	PrimaryExpression	256.		1065951	0					
ANR	1066010	AdditiveExpression	log2 ( - Y ) + 64.		1065951	1		+			
ANR	1066011	CallExpression	log2 ( - Y )		1065951	0					
ANR	1066012	Callee	log2		1065951	0					
ANR	1066013	Identifier	log2		1065951	0					
ANR	1066014	ArgumentList	- Y		1065951	1					
ANR	1066015	Argument	- Y		1065951	0					
ANR	1066016	UnaryOperationExpression	- Y		1065951	0					
ANR	1066017	UnaryOperator	-		1065951	0					
ANR	1066018	Identifier	Y		1065951	1					
ANR	1066019	PrimaryExpression	64.		1065951	1					
ANR	1066020	Argument	em		1065951	1					
ANR	1066021	Identifier	em		1065951	0					
ANR	1066022	ReturnStatement	return ( 0 ) ;	736:1:20776:20786	1065951	4	True				
ANR	1066023	PrimaryExpression	0		1065951	0					
ANR	1066024	ReturnType	int		1065951	1					
ANR	1066025	Identifier	LogL16fromY		1065951	2					
ANR	1066026	ParameterList	"double Y , int em"		1065951	3					
ANR	1066027	Parameter	double Y	726:12:20491:20498	1065951	0	True				
ANR	1066028	ParameterType	double		1065951	0					
ANR	1066029	Identifier	Y		1065951	1					
ANR	1066030	Parameter	int em	726:22:20501:20506	1065951	1	True				
ANR	1066031	ParameterType	int		1065951	0					
ANR	1066032	Identifier	em		1065951	1					
ANR	1066033	CFGEntryNode	ENTRY		1065951		True				
ANR	1066034	CFGExitNode	EXIT		1065951		True				
ANR	1066035	Symbol	itrunc		1065951						
ANR	1066036	Symbol	em		1065951						
ANR	1066037	Symbol	Y		1065951						
ANR	1066038	Symbol	~0x7fff		1065951						
ANR	1066039	Symbol	log2		1065951						
ANR	1066040	Function	L16toY	739:0:20791:20965							
ANR	1066041	FunctionDef	"L16toY (LogLuvState * sp , uint8 * op , tmsize_t n)"		1066040	0					
ANR	1066042	CompoundStatement		741:0:20850:20965	1066040	0					
ANR	1066043	IdentifierDeclStatement	int16 * l16 = ( int16 * ) sp -> tbuf ;	742:1:20853:20883	1066040	0	True				
ANR	1066044	IdentifierDecl	* l16 = ( int16 * ) sp -> tbuf		1066040	0					
ANR	1066045	IdentifierDeclType	int16 *		1066040	0					
ANR	1066046	Identifier	l16		1066040	1					
ANR	1066047	AssignmentExpression	* l16 = ( int16 * ) sp -> tbuf		1066040	2		=			
ANR	1066048	Identifier	l16		1066040	0					
ANR	1066049	CastExpression	( int16 * ) sp -> tbuf		1066040	1					
ANR	1066050	CastTarget	int16 *		1066040	0					
ANR	1066051	PtrMemberAccess	sp -> tbuf		1066040	1					
ANR	1066052	Identifier	sp		1066040	0					
ANR	1066053	Identifier	tbuf		1066040	1					
ANR	1066054	IdentifierDeclStatement	float * yp = ( float * ) op ;	743:1:20886:20909	1066040	1	True				
ANR	1066055	IdentifierDecl	* yp = ( float * ) op		1066040	0					
ANR	1066056	IdentifierDeclType	float *		1066040	0					
ANR	1066057	Identifier	yp		1066040	1					
ANR	1066058	AssignmentExpression	* yp = ( float * ) op		1066040	2		=			
ANR	1066059	Identifier	yp		1066040	0					
ANR	1066060	CastExpression	( float * ) op		1066040	1					
ANR	1066061	CastTarget	float *		1066040	0					
ANR	1066062	Identifier	op		1066040	1					
ANR	1066063	WhileStatement	while ( n -- > 0 )		1066040	2					
ANR	1066064	Condition	n -- > 0	745:8:20920:20926	1066040	0	True				
ANR	1066065	RelationalExpression	n -- > 0		1066040	0		>			
ANR	1066066	PostIncDecOperationExpression	n --		1066040	0					
ANR	1066067	Identifier	n		1066040	0					
ANR	1066068	IncDec	--		1066040	1					
ANR	1066069	PrimaryExpression	0		1066040	1					
ANR	1066070	ExpressionStatement	* yp ++ = ( float ) LogL16toY ( * l16 ++ )	746:2:20931:20963	1066040	1	True				
ANR	1066071	AssignmentExpression	* yp ++ = ( float ) LogL16toY ( * l16 ++ )		1066040	0		=			
ANR	1066072	UnaryOperationExpression	* yp ++		1066040	0					
ANR	1066073	UnaryOperator	*		1066040	0					
ANR	1066074	PostIncDecOperationExpression	yp ++		1066040	1					
ANR	1066075	Identifier	yp		1066040	0					
ANR	1066076	IncDec	++		1066040	1					
ANR	1066077	CastExpression	( float ) LogL16toY ( * l16 ++ )		1066040	1					
ANR	1066078	CastTarget	float		1066040	0					
ANR	1066079	CallExpression	LogL16toY ( * l16 ++ )		1066040	1					
ANR	1066080	Callee	LogL16toY		1066040	0					
ANR	1066081	Identifier	LogL16toY		1066040	0					
ANR	1066082	ArgumentList	* l16 ++		1066040	1					
ANR	1066083	Argument	* l16 ++		1066040	0					
ANR	1066084	UnaryOperationExpression	* l16 ++		1066040	0					
ANR	1066085	UnaryOperator	*		1066040	0					
ANR	1066086	PostIncDecOperationExpression	l16 ++		1066040	1					
ANR	1066087	Identifier	l16		1066040	0					
ANR	1066088	IncDec	++		1066040	1					
ANR	1066089	ReturnType	static void		1066040	1					
ANR	1066090	Identifier	L16toY		1066040	2					
ANR	1066091	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		1066040	3					
ANR	1066092	Parameter	LogLuvState * sp	740:7:20810:20824	1066040	0	True				
ANR	1066093	ParameterType	LogLuvState *		1066040	0					
ANR	1066094	Identifier	sp		1066040	1					
ANR	1066095	Parameter	uint8 * op	740:24:20827:20835	1066040	1	True				
ANR	1066096	ParameterType	uint8 *		1066040	0					
ANR	1066097	Identifier	op		1066040	1					
ANR	1066098	Parameter	tmsize_t n	740:35:20838:20847	1066040	2	True				
ANR	1066099	ParameterType	tmsize_t		1066040	0					
ANR	1066100	Identifier	n		1066040	1					
ANR	1066101	CFGEntryNode	ENTRY		1066040		True				
ANR	1066102	CFGExitNode	EXIT		1066040		True				
ANR	1066103	Symbol	* sp		1066040						
ANR	1066104	Symbol	l16		1066040						
ANR	1066105	Symbol	op		1066040						
ANR	1066106	Symbol	LogL16toY		1066040						
ANR	1066107	Symbol	yp		1066040						
ANR	1066108	Symbol	sp -> tbuf		1066040						
ANR	1066109	Symbol	* l16 ++		1066040						
ANR	1066110	Symbol	sp		1066040						
ANR	1066111	Symbol	n		1066040						
ANR	1066112	Symbol	* yp ++		1066040						
ANR	1066113	Function	L16toGry	749:0:20968:21220							
ANR	1066114	FunctionDef	"L16toGry (LogLuvState * sp , uint8 * op , tmsize_t n)"		1066113	0					
ANR	1066115	CompoundStatement		751:0:21029:21220	1066113	0					
ANR	1066116	IdentifierDeclStatement	int16 * l16 = ( int16 * ) sp -> tbuf ;	752:1:21032:21062	1066113	0	True				
ANR	1066117	IdentifierDecl	* l16 = ( int16 * ) sp -> tbuf		1066113	0					
ANR	1066118	IdentifierDeclType	int16 *		1066113	0					
ANR	1066119	Identifier	l16		1066113	1					
ANR	1066120	AssignmentExpression	* l16 = ( int16 * ) sp -> tbuf		1066113	2		=			
ANR	1066121	Identifier	l16		1066113	0					
ANR	1066122	CastExpression	( int16 * ) sp -> tbuf		1066113	1					
ANR	1066123	CastTarget	int16 *		1066113	0					
ANR	1066124	PtrMemberAccess	sp -> tbuf		1066113	1					
ANR	1066125	Identifier	sp		1066113	0					
ANR	1066126	Identifier	tbuf		1066113	1					
ANR	1066127	IdentifierDeclStatement	uint8 * gp = ( uint8 * ) op ;	753:1:21065:21088	1066113	1	True				
ANR	1066128	IdentifierDecl	* gp = ( uint8 * ) op		1066113	0					
ANR	1066129	IdentifierDeclType	uint8 *		1066113	0					
ANR	1066130	Identifier	gp		1066113	1					
ANR	1066131	AssignmentExpression	* gp = ( uint8 * ) op		1066113	2		=			
ANR	1066132	Identifier	gp		1066113	0					
ANR	1066133	CastExpression	( uint8 * ) op		1066113	1					
ANR	1066134	CastTarget	uint8 *		1066113	0					
ANR	1066135	Identifier	op		1066113	1					
ANR	1066136	WhileStatement	while ( n -- > 0 )		1066113	2					
ANR	1066137	Condition	n -- > 0	755:8:21099:21105	1066113	0	True				
ANR	1066138	RelationalExpression	n -- > 0		1066113	0		>			
ANR	1066139	PostIncDecOperationExpression	n --		1066113	0					
ANR	1066140	Identifier	n		1066113	0					
ANR	1066141	IncDec	--		1066113	1					
ANR	1066142	PrimaryExpression	0		1066113	1					
ANR	1066143	CompoundStatement		6:2:82:110	1066113	1					
ANR	1066144	IdentifierDeclStatement	double Y = LogL16toY ( * l16 ++ ) ;	756:2:21112:21140	1066113	0	True				
ANR	1066145	IdentifierDecl	Y = LogL16toY ( * l16 ++ )		1066113	0					
ANR	1066146	IdentifierDeclType	double		1066113	0					
ANR	1066147	Identifier	Y		1066113	1					
ANR	1066148	AssignmentExpression	Y = LogL16toY ( * l16 ++ )		1066113	2		=			
ANR	1066149	Identifier	Y		1066113	0					
ANR	1066150	CallExpression	LogL16toY ( * l16 ++ )		1066113	1					
ANR	1066151	Callee	LogL16toY		1066113	0					
ANR	1066152	Identifier	LogL16toY		1066113	0					
ANR	1066153	ArgumentList	* l16 ++		1066113	1					
ANR	1066154	Argument	* l16 ++		1066113	0					
ANR	1066155	UnaryOperationExpression	* l16 ++		1066113	0					
ANR	1066156	UnaryOperator	*		1066113	0					
ANR	1066157	PostIncDecOperationExpression	l16 ++		1066113	1					
ANR	1066158	Identifier	l16		1066113	0					
ANR	1066159	IncDec	++		1066113	1					
ANR	1066160	ExpressionStatement	* gp ++ = ( uint8 ) ( ( Y <= 0. ) ? 0 : ( Y >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( Y ) ) )	757:2:21144:21215	1066113	1	True				
ANR	1066161	AssignmentExpression	* gp ++ = ( uint8 ) ( ( Y <= 0. ) ? 0 : ( Y >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( Y ) ) )		1066113	0		=			
ANR	1066162	UnaryOperationExpression	* gp ++		1066113	0					
ANR	1066163	UnaryOperator	*		1066113	0					
ANR	1066164	PostIncDecOperationExpression	gp ++		1066113	1					
ANR	1066165	Identifier	gp		1066113	0					
ANR	1066166	IncDec	++		1066113	1					
ANR	1066167	CastExpression	( uint8 ) ( ( Y <= 0. ) ? 0 : ( Y >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( Y ) ) )		1066113	1					
ANR	1066168	CastTarget	uint8		1066113	0					
ANR	1066169	ConditionalExpression	( Y <= 0. ) ? 0 : ( Y >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( Y ) )		1066113	1					
ANR	1066170	Condition	Y <= 0.		1066113	0					
ANR	1066171	RelationalExpression	Y <= 0.		1066113	0		<=			
ANR	1066172	Identifier	Y		1066113	0					
ANR	1066173	PrimaryExpression	0.		1066113	1					
ANR	1066174	PrimaryExpression	0		1066113	1					
ANR	1066175	ConditionalExpression	( Y >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( Y ) )		1066113	2					
ANR	1066176	Condition	Y >= 1.		1066113	0					
ANR	1066177	RelationalExpression	Y >= 1.		1066113	0		>=			
ANR	1066178	Identifier	Y		1066113	0					
ANR	1066179	PrimaryExpression	1.		1066113	1					
ANR	1066180	PrimaryExpression	255		1066113	1					
ANR	1066181	CastExpression	( int ) ( 256. * sqrt ( Y ) )		1066113	2					
ANR	1066182	CastTarget	int		1066113	0					
ANR	1066183	MultiplicativeExpression	256. * sqrt ( Y )		1066113	1		*			
ANR	1066184	PrimaryExpression	256.		1066113	0					
ANR	1066185	CallExpression	sqrt ( Y )		1066113	1					
ANR	1066186	Callee	sqrt		1066113	0					
ANR	1066187	Identifier	sqrt		1066113	0					
ANR	1066188	ArgumentList	Y		1066113	1					
ANR	1066189	Argument	Y		1066113	0					
ANR	1066190	Identifier	Y		1066113	0					
ANR	1066191	ReturnType	static void		1066113	1					
ANR	1066192	Identifier	L16toGry		1066113	2					
ANR	1066193	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		1066113	3					
ANR	1066194	Parameter	LogLuvState * sp	750:9:20989:21003	1066113	0	True				
ANR	1066195	ParameterType	LogLuvState *		1066113	0					
ANR	1066196	Identifier	sp		1066113	1					
ANR	1066197	Parameter	uint8 * op	750:26:21006:21014	1066113	1	True				
ANR	1066198	ParameterType	uint8 *		1066113	0					
ANR	1066199	Identifier	op		1066113	1					
ANR	1066200	Parameter	tmsize_t n	750:37:21017:21026	1066113	2	True				
ANR	1066201	ParameterType	tmsize_t		1066113	0					
ANR	1066202	Identifier	n		1066113	1					
ANR	1066203	CFGEntryNode	ENTRY		1066113		True				
ANR	1066204	CFGExitNode	EXIT		1066113		True				
ANR	1066205	Symbol	l16		1066113						
ANR	1066206	Symbol	* sp		1066113						
ANR	1066207	Symbol	op		1066113						
ANR	1066208	Symbol	LogL16toY		1066113						
ANR	1066209	Symbol	sqrt		1066113						
ANR	1066210	Symbol	sp -> tbuf		1066113						
ANR	1066211	Symbol	gp		1066113						
ANR	1066212	Symbol	Y		1066113						
ANR	1066213	Symbol	* l16 ++		1066113						
ANR	1066214	Symbol	sp		1066113						
ANR	1066215	Symbol	n		1066113						
ANR	1066216	Symbol	* gp ++		1066113						
ANR	1066217	Function	L16fromY	761:0:21223:21421							
ANR	1066218	FunctionDef	"L16fromY (LogLuvState * sp , uint8 * op , tmsize_t n)"		1066217	0					
ANR	1066219	CompoundStatement		763:0:21284:21421	1066217	0					
ANR	1066220	IdentifierDeclStatement	int16 * l16 = ( int16 * ) sp -> tbuf ;	764:1:21287:21317	1066217	0	True				
ANR	1066221	IdentifierDecl	* l16 = ( int16 * ) sp -> tbuf		1066217	0					
ANR	1066222	IdentifierDeclType	int16 *		1066217	0					
ANR	1066223	Identifier	l16		1066217	1					
ANR	1066224	AssignmentExpression	* l16 = ( int16 * ) sp -> tbuf		1066217	2		=			
ANR	1066225	Identifier	l16		1066217	0					
ANR	1066226	CastExpression	( int16 * ) sp -> tbuf		1066217	1					
ANR	1066227	CastTarget	int16 *		1066217	0					
ANR	1066228	PtrMemberAccess	sp -> tbuf		1066217	1					
ANR	1066229	Identifier	sp		1066217	0					
ANR	1066230	Identifier	tbuf		1066217	1					
ANR	1066231	IdentifierDeclStatement	float * yp = ( float * ) op ;	765:1:21320:21343	1066217	1	True				
ANR	1066232	IdentifierDecl	* yp = ( float * ) op		1066217	0					
ANR	1066233	IdentifierDeclType	float *		1066217	0					
ANR	1066234	Identifier	yp		1066217	1					
ANR	1066235	AssignmentExpression	* yp = ( float * ) op		1066217	2		=			
ANR	1066236	Identifier	yp		1066217	0					
ANR	1066237	CastExpression	( float * ) op		1066217	1					
ANR	1066238	CastTarget	float *		1066217	0					
ANR	1066239	Identifier	op		1066217	1					
ANR	1066240	WhileStatement	while ( n -- > 0 )		1066217	2					
ANR	1066241	Condition	n -- > 0	767:8:21354:21360	1066217	0	True				
ANR	1066242	RelationalExpression	n -- > 0		1066217	0		>			
ANR	1066243	PostIncDecOperationExpression	n --		1066217	0					
ANR	1066244	Identifier	n		1066217	0					
ANR	1066245	IncDec	--		1066217	1					
ANR	1066246	PrimaryExpression	0		1066217	1					
ANR	1066247	ExpressionStatement	"* l16 ++ = ( int16 ) ( LogL16fromY ( * yp ++ , sp -> encode_meth ) )"	768:2:21365:21419	1066217	1	True				
ANR	1066248	AssignmentExpression	"* l16 ++ = ( int16 ) ( LogL16fromY ( * yp ++ , sp -> encode_meth ) )"		1066217	0		=			
ANR	1066249	UnaryOperationExpression	* l16 ++		1066217	0					
ANR	1066250	UnaryOperator	*		1066217	0					
ANR	1066251	PostIncDecOperationExpression	l16 ++		1066217	1					
ANR	1066252	Identifier	l16		1066217	0					
ANR	1066253	IncDec	++		1066217	1					
ANR	1066254	CastExpression	"( int16 ) ( LogL16fromY ( * yp ++ , sp -> encode_meth ) )"		1066217	1					
ANR	1066255	CastTarget	int16		1066217	0					
ANR	1066256	CallExpression	"LogL16fromY ( * yp ++ , sp -> encode_meth )"		1066217	1					
ANR	1066257	Callee	LogL16fromY		1066217	0					
ANR	1066258	Identifier	LogL16fromY		1066217	0					
ANR	1066259	ArgumentList	* yp ++		1066217	1					
ANR	1066260	Argument	* yp ++		1066217	0					
ANR	1066261	UnaryOperationExpression	* yp ++		1066217	0					
ANR	1066262	UnaryOperator	*		1066217	0					
ANR	1066263	PostIncDecOperationExpression	yp ++		1066217	1					
ANR	1066264	Identifier	yp		1066217	0					
ANR	1066265	IncDec	++		1066217	1					
ANR	1066266	Argument	sp -> encode_meth		1066217	1					
ANR	1066267	PtrMemberAccess	sp -> encode_meth		1066217	0					
ANR	1066268	Identifier	sp		1066217	0					
ANR	1066269	Identifier	encode_meth		1066217	1					
ANR	1066270	ReturnType	static void		1066217	1					
ANR	1066271	Identifier	L16fromY		1066217	2					
ANR	1066272	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		1066217	3					
ANR	1066273	Parameter	LogLuvState * sp	762:9:21244:21258	1066217	0	True				
ANR	1066274	ParameterType	LogLuvState *		1066217	0					
ANR	1066275	Identifier	sp		1066217	1					
ANR	1066276	Parameter	uint8 * op	762:26:21261:21269	1066217	1	True				
ANR	1066277	ParameterType	uint8 *		1066217	0					
ANR	1066278	Identifier	op		1066217	1					
ANR	1066279	Parameter	tmsize_t n	762:37:21272:21281	1066217	2	True				
ANR	1066280	ParameterType	tmsize_t		1066217	0					
ANR	1066281	Identifier	n		1066217	1					
ANR	1066282	CFGEntryNode	ENTRY		1066217		True				
ANR	1066283	CFGExitNode	EXIT		1066217		True				
ANR	1066284	Symbol	l16		1066217						
ANR	1066285	Symbol	* sp		1066217						
ANR	1066286	Symbol	op		1066217						
ANR	1066287	Symbol	yp		1066217						
ANR	1066288	Symbol	sp -> tbuf		1066217						
ANR	1066289	Symbol	* l16 ++		1066217						
ANR	1066290	Symbol	LogL16fromY		1066217						
ANR	1066291	Symbol	sp -> encode_meth		1066217						
ANR	1066292	Symbol	sp		1066217						
ANR	1066293	Symbol	n		1066217						
ANR	1066294	Symbol	* yp ++		1066217						
ANR	1066295	Function	XYZtoRGB24	774:0:21457:22034							
ANR	1066296	FunctionDef	"XYZtoRGB24 (float xyz [ 3 ] , uint8 rgb [ 3 ])"		1066295	0					
ANR	1066297	CompoundStatement		776:0:21501:22034	1066295	0					
ANR	1066298	IdentifierDeclStatement	"double r , g , b ;"	777:1:21504:21518	1066295	0	True				
ANR	1066299	IdentifierDecl	r		1066295	0					
ANR	1066300	IdentifierDeclType	double		1066295	0					
ANR	1066301	Identifier	r		1066295	1					
ANR	1066302	IdentifierDecl	g		1066295	1					
ANR	1066303	IdentifierDeclType	double		1066295	0					
ANR	1066304	Identifier	g		1066295	1					
ANR	1066305	IdentifierDecl	b		1066295	2					
ANR	1066306	IdentifierDeclType	double		1066295	0					
ANR	1066307	Identifier	b		1066295	1					
ANR	1066308	ExpressionStatement	r = 2.690 * xyz [ 0 ] + - 1.276 * xyz [ 1 ] + - 0.414 * xyz [ 2 ]	779:1:21558:21607	1066295	1	True				
ANR	1066309	AssignmentExpression	r = 2.690 * xyz [ 0 ] + - 1.276 * xyz [ 1 ] + - 0.414 * xyz [ 2 ]		1066295	0		=			
ANR	1066310	Identifier	r		1066295	0					
ANR	1066311	AdditiveExpression	2.690 * xyz [ 0 ] + - 1.276 * xyz [ 1 ] + - 0.414 * xyz [ 2 ]		1066295	1		+			
ANR	1066312	MultiplicativeExpression	2.690 * xyz [ 0 ]		1066295	0		*			
ANR	1066313	PrimaryExpression	2.690		1066295	0					
ANR	1066314	ArrayIndexing	xyz [ 0 ]		1066295	1					
ANR	1066315	Identifier	xyz		1066295	0					
ANR	1066316	PrimaryExpression	0		1066295	1					
ANR	1066317	AdditiveExpression	- 1.276 * xyz [ 1 ] + - 0.414 * xyz [ 2 ]		1066295	1		+			
ANR	1066318	MultiplicativeExpression	- 1.276 * xyz [ 1 ]		1066295	0		*			
ANR	1066319	UnaryOperationExpression	- 1.276		1066295	0					
ANR	1066320	UnaryOperator	-		1066295	0					
ANR	1066321	PrimaryExpression	1.276		1066295	1					
ANR	1066322	ArrayIndexing	xyz [ 1 ]		1066295	1					
ANR	1066323	Identifier	xyz		1066295	0					
ANR	1066324	PrimaryExpression	1		1066295	1					
ANR	1066325	MultiplicativeExpression	- 0.414 * xyz [ 2 ]		1066295	1		*			
ANR	1066326	UnaryOperationExpression	- 0.414		1066295	0					
ANR	1066327	UnaryOperator	-		1066295	0					
ANR	1066328	PrimaryExpression	0.414		1066295	1					
ANR	1066329	ArrayIndexing	xyz [ 2 ]		1066295	1					
ANR	1066330	Identifier	xyz		1066295	0					
ANR	1066331	PrimaryExpression	2		1066295	1					
ANR	1066332	ExpressionStatement	g = - 1.022 * xyz [ 0 ] + 1.978 * xyz [ 1 ] + 0.044 * xyz [ 2 ]	780:1:21610:21659	1066295	2	True				
ANR	1066333	AssignmentExpression	g = - 1.022 * xyz [ 0 ] + 1.978 * xyz [ 1 ] + 0.044 * xyz [ 2 ]		1066295	0		=			
ANR	1066334	Identifier	g		1066295	0					
ANR	1066335	AdditiveExpression	- 1.022 * xyz [ 0 ] + 1.978 * xyz [ 1 ] + 0.044 * xyz [ 2 ]		1066295	1		+			
ANR	1066336	MultiplicativeExpression	- 1.022 * xyz [ 0 ]		1066295	0		*			
ANR	1066337	UnaryOperationExpression	- 1.022		1066295	0					
ANR	1066338	UnaryOperator	-		1066295	0					
ANR	1066339	PrimaryExpression	1.022		1066295	1					
ANR	1066340	ArrayIndexing	xyz [ 0 ]		1066295	1					
ANR	1066341	Identifier	xyz		1066295	0					
ANR	1066342	PrimaryExpression	0		1066295	1					
ANR	1066343	AdditiveExpression	1.978 * xyz [ 1 ] + 0.044 * xyz [ 2 ]		1066295	1		+			
ANR	1066344	MultiplicativeExpression	1.978 * xyz [ 1 ]		1066295	0		*			
ANR	1066345	PrimaryExpression	1.978		1066295	0					
ANR	1066346	ArrayIndexing	xyz [ 1 ]		1066295	1					
ANR	1066347	Identifier	xyz		1066295	0					
ANR	1066348	PrimaryExpression	1		1066295	1					
ANR	1066349	MultiplicativeExpression	0.044 * xyz [ 2 ]		1066295	1		*			
ANR	1066350	PrimaryExpression	0.044		1066295	0					
ANR	1066351	ArrayIndexing	xyz [ 2 ]		1066295	1					
ANR	1066352	Identifier	xyz		1066295	0					
ANR	1066353	PrimaryExpression	2		1066295	1					
ANR	1066354	ExpressionStatement	b = 0.061 * xyz [ 0 ] + - 0.224 * xyz [ 1 ] + 1.163 * xyz [ 2 ]	781:1:21662:21711	1066295	3	True				
ANR	1066355	AssignmentExpression	b = 0.061 * xyz [ 0 ] + - 0.224 * xyz [ 1 ] + 1.163 * xyz [ 2 ]		1066295	0		=			
ANR	1066356	Identifier	b		1066295	0					
ANR	1066357	AdditiveExpression	0.061 * xyz [ 0 ] + - 0.224 * xyz [ 1 ] + 1.163 * xyz [ 2 ]		1066295	1		+			
ANR	1066358	MultiplicativeExpression	0.061 * xyz [ 0 ]		1066295	0		*			
ANR	1066359	PrimaryExpression	0.061		1066295	0					
ANR	1066360	ArrayIndexing	xyz [ 0 ]		1066295	1					
ANR	1066361	Identifier	xyz		1066295	0					
ANR	1066362	PrimaryExpression	0		1066295	1					
ANR	1066363	AdditiveExpression	- 0.224 * xyz [ 1 ] + 1.163 * xyz [ 2 ]		1066295	1		+			
ANR	1066364	MultiplicativeExpression	- 0.224 * xyz [ 1 ]		1066295	0		*			
ANR	1066365	UnaryOperationExpression	- 0.224		1066295	0					
ANR	1066366	UnaryOperator	-		1066295	0					
ANR	1066367	PrimaryExpression	0.224		1066295	1					
ANR	1066368	ArrayIndexing	xyz [ 1 ]		1066295	1					
ANR	1066369	Identifier	xyz		1066295	0					
ANR	1066370	PrimaryExpression	1		1066295	1					
ANR	1066371	MultiplicativeExpression	1.163 * xyz [ 2 ]		1066295	1		*			
ANR	1066372	PrimaryExpression	1.163		1066295	0					
ANR	1066373	ArrayIndexing	xyz [ 2 ]		1066295	1					
ANR	1066374	Identifier	xyz		1066295	0					
ANR	1066375	PrimaryExpression	2		1066295	1					
ANR	1066376	ExpressionStatement	rgb [ 0 ] = ( uint8 ) ( ( r <= 0. ) ? 0 : ( r >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( r ) ) )	784:1:21819:21888	1066295	4	True				
ANR	1066377	AssignmentExpression	rgb [ 0 ] = ( uint8 ) ( ( r <= 0. ) ? 0 : ( r >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( r ) ) )		1066295	0		=			
ANR	1066378	ArrayIndexing	rgb [ 0 ]		1066295	0					
ANR	1066379	Identifier	rgb		1066295	0					
ANR	1066380	PrimaryExpression	0		1066295	1					
ANR	1066381	CastExpression	( uint8 ) ( ( r <= 0. ) ? 0 : ( r >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( r ) ) )		1066295	1					
ANR	1066382	CastTarget	uint8		1066295	0					
ANR	1066383	ConditionalExpression	( r <= 0. ) ? 0 : ( r >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( r ) )		1066295	1					
ANR	1066384	Condition	r <= 0.		1066295	0					
ANR	1066385	RelationalExpression	r <= 0.		1066295	0		<=			
ANR	1066386	Identifier	r		1066295	0					
ANR	1066387	PrimaryExpression	0.		1066295	1					
ANR	1066388	PrimaryExpression	0		1066295	1					
ANR	1066389	ConditionalExpression	( r >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( r ) )		1066295	2					
ANR	1066390	Condition	r >= 1.		1066295	0					
ANR	1066391	RelationalExpression	r >= 1.		1066295	0		>=			
ANR	1066392	Identifier	r		1066295	0					
ANR	1066393	PrimaryExpression	1.		1066295	1					
ANR	1066394	PrimaryExpression	255		1066295	1					
ANR	1066395	CastExpression	( int ) ( 256. * sqrt ( r ) )		1066295	2					
ANR	1066396	CastTarget	int		1066295	0					
ANR	1066397	MultiplicativeExpression	256. * sqrt ( r )		1066295	1		*			
ANR	1066398	PrimaryExpression	256.		1066295	0					
ANR	1066399	CallExpression	sqrt ( r )		1066295	1					
ANR	1066400	Callee	sqrt		1066295	0					
ANR	1066401	Identifier	sqrt		1066295	0					
ANR	1066402	ArgumentList	r		1066295	1					
ANR	1066403	Argument	r		1066295	0					
ANR	1066404	Identifier	r		1066295	0					
ANR	1066405	ExpressionStatement	rgb [ 1 ] = ( uint8 ) ( ( g <= 0. ) ? 0 : ( g >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( g ) ) )	785:1:21891:21960	1066295	5	True				
ANR	1066406	AssignmentExpression	rgb [ 1 ] = ( uint8 ) ( ( g <= 0. ) ? 0 : ( g >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( g ) ) )		1066295	0		=			
ANR	1066407	ArrayIndexing	rgb [ 1 ]		1066295	0					
ANR	1066408	Identifier	rgb		1066295	0					
ANR	1066409	PrimaryExpression	1		1066295	1					
ANR	1066410	CastExpression	( uint8 ) ( ( g <= 0. ) ? 0 : ( g >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( g ) ) )		1066295	1					
ANR	1066411	CastTarget	uint8		1066295	0					
ANR	1066412	ConditionalExpression	( g <= 0. ) ? 0 : ( g >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( g ) )		1066295	1					
ANR	1066413	Condition	g <= 0.		1066295	0					
ANR	1066414	RelationalExpression	g <= 0.		1066295	0		<=			
ANR	1066415	Identifier	g		1066295	0					
ANR	1066416	PrimaryExpression	0.		1066295	1					
ANR	1066417	PrimaryExpression	0		1066295	1					
ANR	1066418	ConditionalExpression	( g >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( g ) )		1066295	2					
ANR	1066419	Condition	g >= 1.		1066295	0					
ANR	1066420	RelationalExpression	g >= 1.		1066295	0		>=			
ANR	1066421	Identifier	g		1066295	0					
ANR	1066422	PrimaryExpression	1.		1066295	1					
ANR	1066423	PrimaryExpression	255		1066295	1					
ANR	1066424	CastExpression	( int ) ( 256. * sqrt ( g ) )		1066295	2					
ANR	1066425	CastTarget	int		1066295	0					
ANR	1066426	MultiplicativeExpression	256. * sqrt ( g )		1066295	1		*			
ANR	1066427	PrimaryExpression	256.		1066295	0					
ANR	1066428	CallExpression	sqrt ( g )		1066295	1					
ANR	1066429	Callee	sqrt		1066295	0					
ANR	1066430	Identifier	sqrt		1066295	0					
ANR	1066431	ArgumentList	g		1066295	1					
ANR	1066432	Argument	g		1066295	0					
ANR	1066433	Identifier	g		1066295	0					
ANR	1066434	ExpressionStatement	rgb [ 2 ] = ( uint8 ) ( ( b <= 0. ) ? 0 : ( b >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( b ) ) )	786:1:21963:22032	1066295	6	True				
ANR	1066435	AssignmentExpression	rgb [ 2 ] = ( uint8 ) ( ( b <= 0. ) ? 0 : ( b >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( b ) ) )		1066295	0		=			
ANR	1066436	ArrayIndexing	rgb [ 2 ]		1066295	0					
ANR	1066437	Identifier	rgb		1066295	0					
ANR	1066438	PrimaryExpression	2		1066295	1					
ANR	1066439	CastExpression	( uint8 ) ( ( b <= 0. ) ? 0 : ( b >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( b ) ) )		1066295	1					
ANR	1066440	CastTarget	uint8		1066295	0					
ANR	1066441	ConditionalExpression	( b <= 0. ) ? 0 : ( b >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( b ) )		1066295	1					
ANR	1066442	Condition	b <= 0.		1066295	0					
ANR	1066443	RelationalExpression	b <= 0.		1066295	0		<=			
ANR	1066444	Identifier	b		1066295	0					
ANR	1066445	PrimaryExpression	0.		1066295	1					
ANR	1066446	PrimaryExpression	0		1066295	1					
ANR	1066447	ConditionalExpression	( b >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( b ) )		1066295	2					
ANR	1066448	Condition	b >= 1.		1066295	0					
ANR	1066449	RelationalExpression	b >= 1.		1066295	0		>=			
ANR	1066450	Identifier	b		1066295	0					
ANR	1066451	PrimaryExpression	1.		1066295	1					
ANR	1066452	PrimaryExpression	255		1066295	1					
ANR	1066453	CastExpression	( int ) ( 256. * sqrt ( b ) )		1066295	2					
ANR	1066454	CastTarget	int		1066295	0					
ANR	1066455	MultiplicativeExpression	256. * sqrt ( b )		1066295	1		*			
ANR	1066456	PrimaryExpression	256.		1066295	0					
ANR	1066457	CallExpression	sqrt ( b )		1066295	1					
ANR	1066458	Callee	sqrt		1066295	0					
ANR	1066459	Identifier	sqrt		1066295	0					
ANR	1066460	ArgumentList	b		1066295	1					
ANR	1066461	Argument	b		1066295	0					
ANR	1066462	Identifier	b		1066295	0					
ANR	1066463	ReturnType	void		1066295	1					
ANR	1066464	Identifier	XYZtoRGB24		1066295	2					
ANR	1066465	ParameterList	"float xyz [ 3 ] , uint8 rgb [ 3 ]"		1066295	3					
ANR	1066466	Parameter	float xyz [ 3 ]	775:11:21473:21484	1066295	0	True				
ANR	1066467	ParameterType	float [ 3 ]		1066295	0					
ANR	1066468	Identifier	xyz		1066295	1					
ANR	1066469	Parameter	uint8 rgb [ 3 ]	775:25:21487:21498	1066295	1	True				
ANR	1066470	ParameterType	uint8 [ 3 ]		1066295	0					
ANR	1066471	Identifier	rgb		1066295	1					
ANR	1066472	CFGEntryNode	ENTRY		1066295		True				
ANR	1066473	CFGExitNode	EXIT		1066295		True				
ANR	1066474	Symbol	r		1066295						
ANR	1066475	Symbol	b		1066295						
ANR	1066476	Symbol	* xyz		1066295						
ANR	1066477	Symbol	sqrt		1066295						
ANR	1066478	Symbol	g		1066295						
ANR	1066479	Symbol	* rgb		1066295						
ANR	1066480	Symbol	xyz		1066295						
ANR	1066481	Symbol	rgb		1066295						
ANR	1066482	Function	LogL10toY	792:0:22070:22217							
ANR	1066483	FunctionDef	LogL10toY (int p10)		1066482	0					
ANR	1066484	CompoundStatement		794:0:22138:22217	1066482	0					
ANR	1066485	IfStatement	if ( p10 == 0 )		1066482	0					
ANR	1066486	Condition	p10 == 0	795:5:22145:22152	1066482	0	True				
ANR	1066487	EqualityExpression	p10 == 0		1066482	0		==			
ANR	1066488	Identifier	p10		1066482	0					
ANR	1066489	PrimaryExpression	0		1066482	1					
ANR	1066490	ReturnStatement	return ( 0. ) ;	796:2:22157:22168	1066482	1	True				
ANR	1066491	PrimaryExpression	0.		1066482	0					
ANR	1066492	ReturnStatement	return ( exp ( M_LN2 / 64. * ( p10 + .5 ) - M_LN2 * 12. ) ) ;	797:1:22171:22215	1066482	1	True				
ANR	1066493	CallExpression	exp ( M_LN2 / 64. * ( p10 + .5 ) - M_LN2 * 12. )		1066482	0					
ANR	1066494	Callee	exp		1066482	0					
ANR	1066495	Identifier	exp		1066482	0					
ANR	1066496	ArgumentList	M_LN2 / 64. * ( p10 + .5 ) - M_LN2 * 12.		1066482	1					
ANR	1066497	Argument	M_LN2 / 64. * ( p10 + .5 ) - M_LN2 * 12.		1066482	0					
ANR	1066498	AdditiveExpression	M_LN2 / 64. * ( p10 + .5 ) - M_LN2 * 12.		1066482	0		-			
ANR	1066499	MultiplicativeExpression	M_LN2 / 64. * ( p10 + .5 )		1066482	0		/			
ANR	1066500	Identifier	M_LN2		1066482	0					
ANR	1066501	MultiplicativeExpression	64. * ( p10 + .5 )		1066482	1		*			
ANR	1066502	PrimaryExpression	64.		1066482	0					
ANR	1066503	AdditiveExpression	p10 + .5		1066482	1		+			
ANR	1066504	Identifier	p10		1066482	0					
ANR	1066505	PrimaryExpression	.5		1066482	1					
ANR	1066506	MultiplicativeExpression	M_LN2 * 12.		1066482	1		*			
ANR	1066507	Identifier	M_LN2		1066482	0					
ANR	1066508	PrimaryExpression	12.		1066482	1					
ANR	1066509	ReturnType	double		1066482	1					
ANR	1066510	Identifier	LogL10toY		1066482	2					
ANR	1066511	ParameterList	int p10		1066482	3					
ANR	1066512	Parameter	int p10	793:10:22087:22093	1066482	0	True				
ANR	1066513	ParameterType	int		1066482	0					
ANR	1066514	Identifier	p10		1066482	1					
ANR	1066515	CFGEntryNode	ENTRY		1066482		True				
ANR	1066516	CFGExitNode	EXIT		1066482		True				
ANR	1066517	Symbol	M_LN2		1066482						
ANR	1066518	Symbol	exp		1066482						
ANR	1066519	Symbol	p10		1066482						
ANR	1066520	Function	LogL10fromY	803:0:22253:22442							
ANR	1066521	FunctionDef	"LogL10fromY (double Y , int em)"		1066520	0					
ANR	1066522	CompoundStatement		805:0:22316:22442	1066520	0					
ANR	1066523	IfStatement	if ( Y >= 15.742 )		1066520	0					
ANR	1066524	Condition	Y >= 15.742	806:5:22323:22333	1066520	0	True				
ANR	1066525	RelationalExpression	Y >= 15.742		1066520	0		>=			
ANR	1066526	Identifier	Y		1066520	0					
ANR	1066527	PrimaryExpression	15.742		1066520	1					
ANR	1066528	ReturnStatement	return ( 0x3ff ) ;	807:2:22338:22352	1066520	1	True				
ANR	1066529	PrimaryExpression	0x3ff		1066520	0					
ANR	1066530	ElseStatement	else		1066520	0					
ANR	1066531	IfStatement	if ( Y <= .00024283 )		1066520	0					
ANR	1066532	Condition	Y <= .00024283	808:10:22364:22377	1066520	0	True				
ANR	1066533	RelationalExpression	Y <= .00024283		1066520	0		<=			
ANR	1066534	Identifier	Y		1066520	0					
ANR	1066535	PrimaryExpression	.00024283		1066520	1					
ANR	1066536	ReturnStatement	return ( 0 ) ;	809:2:22382:22392	1066520	1	True				
ANR	1066537	PrimaryExpression	0		1066520	0					
ANR	1066538	ElseStatement	else		1066520	0					
ANR	1066539	ReturnStatement	"return itrunc ( 64. * ( log2 ( Y ) + 12. ) , em ) ;"	811:2:22402:22440	1066520	0	True				
ANR	1066540	CallExpression	"itrunc ( 64. * ( log2 ( Y ) + 12. ) , em )"		1066520	0					
ANR	1066541	Callee	itrunc		1066520	0					
ANR	1066542	Identifier	itrunc		1066520	0					
ANR	1066543	ArgumentList	64. * ( log2 ( Y ) + 12. )		1066520	1					
ANR	1066544	Argument	64. * ( log2 ( Y ) + 12. )		1066520	0					
ANR	1066545	MultiplicativeExpression	64. * ( log2 ( Y ) + 12. )		1066520	0		*			
ANR	1066546	PrimaryExpression	64.		1066520	0					
ANR	1066547	AdditiveExpression	log2 ( Y ) + 12.		1066520	1		+			
ANR	1066548	CallExpression	log2 ( Y )		1066520	0					
ANR	1066549	Callee	log2		1066520	0					
ANR	1066550	Identifier	log2		1066520	0					
ANR	1066551	ArgumentList	Y		1066520	1					
ANR	1066552	Argument	Y		1066520	0					
ANR	1066553	Identifier	Y		1066520	0					
ANR	1066554	PrimaryExpression	12.		1066520	1					
ANR	1066555	Argument	em		1066520	1					
ANR	1066556	Identifier	em		1066520	0					
ANR	1066557	ReturnType	int		1066520	1					
ANR	1066558	Identifier	LogL10fromY		1066520	2					
ANR	1066559	ParameterList	"double Y , int em"		1066520	3					
ANR	1066560	Parameter	double Y	804:12:22269:22276	1066520	0	True				
ANR	1066561	ParameterType	double		1066520	0					
ANR	1066562	Identifier	Y		1066520	1					
ANR	1066563	Parameter	int em	804:22:22279:22284	1066520	1	True				
ANR	1066564	ParameterType	int		1066520	0					
ANR	1066565	Identifier	em		1066520	1					
ANR	1066566	CFGEntryNode	ENTRY		1066520		True				
ANR	1066567	CFGExitNode	EXIT		1066520		True				
ANR	1066568	Symbol	itrunc		1066520						
ANR	1066569	Symbol	em		1066520						
ANR	1066570	Symbol	Y		1066520						
ANR	1066571	Symbol	log2		1066520						
ANR	1066572	Function	oog_encode	818:0:22566:23832							
ANR	1066573	FunctionDef	"oog_encode (double u , double v)"		1066572	0					
ANR	1066574	CompoundStatement		820:0:22642:23832	1066572	0					
ANR	1066575	Statement	static	821:1:22645:22650	1066572	0	True				
ANR	1066576	IdentifierDeclStatement	int oog_table [ NANGLES ] ;	821:8:22652:22674	1066572	1	True				
ANR	1066577	IdentifierDecl	oog_table [ NANGLES ]		1066572	0					
ANR	1066578	IdentifierDeclType	int [ NANGLES ]		1066572	0					
ANR	1066579	Identifier	oog_table		1066572	1					
ANR	1066580	Identifier	NANGLES		1066572	2					
ANR	1066581	Statement	static	822:1:22677:22682	1066572	2	True				
ANR	1066582	IdentifierDeclStatement	int initialized = 0 ;	822:8:22684:22703	1066572	3	True				
ANR	1066583	IdentifierDecl	initialized = 0		1066572	0					
ANR	1066584	IdentifierDeclType	int		1066572	0					
ANR	1066585	Identifier	initialized		1066572	1					
ANR	1066586	AssignmentExpression	initialized = 0		1066572	2		=			
ANR	1066587	Identifier	initialized		1066572	0					
ANR	1066588	PrimaryExpression	0		1066572	1					
ANR	1066589	Statement	register	823:1:22706:22713	1066572	4	True				
ANR	1066590	IdentifierDeclStatement	int i ;	823:10:22715:22720	1066572	5	True				
ANR	1066591	IdentifierDecl	i		1066572	0					
ANR	1066592	IdentifierDeclType	int		1066572	0					
ANR	1066593	Identifier	i		1066572	1					
ANR	1066594	IfStatement	if ( ! initialized )		1066572	6					
ANR	1066595	Condition	! initialized	825:5:22728:22739	1066572	0	True				
ANR	1066596	UnaryOperationExpression	! initialized		1066572	0					
ANR	1066597	UnaryOperator	!		1066572	0					
ANR	1066598	Identifier	initialized		1066572	1					
ANR	1066599	CompoundStatement		8:2:175:192	1066572	1					
ANR	1066600	IdentifierDeclStatement	"double eps [ NANGLES ] , ua , va , ang , epsa ;"	826:2:22776:22814	1066572	0	True				
ANR	1066601	IdentifierDecl	eps [ NANGLES ]		1066572	0					
ANR	1066602	IdentifierDeclType	double [ NANGLES ]		1066572	0					
ANR	1066603	Identifier	eps		1066572	1					
ANR	1066604	Identifier	NANGLES		1066572	2					
ANR	1066605	IdentifierDecl	ua		1066572	1					
ANR	1066606	IdentifierDeclType	double		1066572	0					
ANR	1066607	Identifier	ua		1066572	1					
ANR	1066608	IdentifierDecl	va		1066572	2					
ANR	1066609	IdentifierDeclType	double		1066572	0					
ANR	1066610	Identifier	va		1066572	1					
ANR	1066611	IdentifierDecl	ang		1066572	3					
ANR	1066612	IdentifierDeclType	double		1066572	0					
ANR	1066613	Identifier	ang		1066572	1					
ANR	1066614	IdentifierDecl	epsa		1066572	4					
ANR	1066615	IdentifierDeclType	double		1066572	0					
ANR	1066616	Identifier	epsa		1066572	1					
ANR	1066617	IdentifierDeclStatement	"int ui , vi , ustep ;"	827:2:22818:22835	1066572	1	True				
ANR	1066618	IdentifierDecl	ui		1066572	0					
ANR	1066619	IdentifierDeclType	int		1066572	0					
ANR	1066620	Identifier	ui		1066572	1					
ANR	1066621	IdentifierDecl	vi		1066572	1					
ANR	1066622	IdentifierDeclType	int		1066572	0					
ANR	1066623	Identifier	vi		1066572	1					
ANR	1066624	IdentifierDecl	ustep		1066572	2					
ANR	1066625	IdentifierDeclType	int		1066572	0					
ANR	1066626	Identifier	ustep		1066572	1					
ANR	1066627	ForStatement	for ( i = NANGLES ; i -- ; )		1066572	2					
ANR	1066628	ForInit	i = NANGLES ;	828:7:22844:22855	1066572	0	True				
ANR	1066629	AssignmentExpression	i = NANGLES		1066572	0		=			
ANR	1066630	Identifier	i		1066572	0					
ANR	1066631	Identifier	NANGLES		1066572	1					
ANR	1066632	Condition	i --	828:20:22857:22859	1066572	1	True				
ANR	1066633	PostIncDecOperationExpression	i --		1066572	0					
ANR	1066634	Identifier	i		1066572	0					
ANR	1066635	IncDec	--		1066572	1					
ANR	1066636	ExpressionStatement	eps [ i ] = 2.	829:3:22867:22878	1066572	2	True				
ANR	1066637	AssignmentExpression	eps [ i ] = 2.		1066572	0		=			
ANR	1066638	ArrayIndexing	eps [ i ]		1066572	0					
ANR	1066639	Identifier	eps		1066572	0					
ANR	1066640	Identifier	i		1066572	1					
ANR	1066641	PrimaryExpression	2.		1066572	1					
ANR	1066642	ForStatement	for ( vi = UV_NVS ; vi -- ; )		1066572	3					
ANR	1066643	ForInit	vi = UV_NVS ;	830:7:22887:22898	1066572	0	True				
ANR	1066644	AssignmentExpression	vi = UV_NVS		1066572	0		=			
ANR	1066645	Identifier	vi		1066572	0					
ANR	1066646	Identifier	UV_NVS		1066572	1					
ANR	1066647	Condition	vi --	830:20:22900:22903	1066572	1	True				
ANR	1066648	PostIncDecOperationExpression	vi --		1066572	0					
ANR	1066649	Identifier	vi		1066572	0					
ANR	1066650	IncDec	--		1066572	1					
ANR	1066651	CompoundStatement		11:28:265:265	1066572	2					
ANR	1066652	ExpressionStatement	va = UV_VSTART + ( vi + .5 ) * UV_SQSIZ	831:3:22913:22946	1066572	0	True				
ANR	1066653	AssignmentExpression	va = UV_VSTART + ( vi + .5 ) * UV_SQSIZ		1066572	0		=			
ANR	1066654	Identifier	va		1066572	0					
ANR	1066655	AdditiveExpression	UV_VSTART + ( vi + .5 ) * UV_SQSIZ		1066572	1		+			
ANR	1066656	Identifier	UV_VSTART		1066572	0					
ANR	1066657	MultiplicativeExpression	( vi + .5 ) * UV_SQSIZ		1066572	1		*			
ANR	1066658	AdditiveExpression	vi + .5		1066572	0		+			
ANR	1066659	Identifier	vi		1066572	0					
ANR	1066660	PrimaryExpression	.5		1066572	1					
ANR	1066661	Identifier	UV_SQSIZ		1066572	1					
ANR	1066662	ExpressionStatement	ustep = uv_row [ vi ] . nus - 1	832:3:22951:22975	1066572	1	True				
ANR	1066663	AssignmentExpression	ustep = uv_row [ vi ] . nus - 1		1066572	0		=			
ANR	1066664	Identifier	ustep		1066572	0					
ANR	1066665	AdditiveExpression	uv_row [ vi ] . nus - 1		1066572	1		-			
ANR	1066666	MemberAccess	uv_row [ vi ] . nus		1066572	0					
ANR	1066667	ArrayIndexing	uv_row [ vi ]		1066572	0					
ANR	1066668	Identifier	uv_row		1066572	0					
ANR	1066669	Identifier	vi		1066572	1					
ANR	1066670	Identifier	nus		1066572	1					
ANR	1066671	PrimaryExpression	1		1066572	1					
ANR	1066672	IfStatement	if ( vi == UV_NVS - 1 || vi == 0 || ustep <= 0 )		1066572	2					
ANR	1066673	Condition	vi == UV_NVS - 1 || vi == 0 || ustep <= 0	833:7:22984:23022	1066572	0	True				
ANR	1066674	OrExpression	vi == UV_NVS - 1 || vi == 0 || ustep <= 0		1066572	0		||			
ANR	1066675	EqualityExpression	vi == UV_NVS - 1		1066572	0		==			
ANR	1066676	Identifier	vi		1066572	0					
ANR	1066677	AdditiveExpression	UV_NVS - 1		1066572	1		-			
ANR	1066678	Identifier	UV_NVS		1066572	0					
ANR	1066679	PrimaryExpression	1		1066572	1					
ANR	1066680	OrExpression	vi == 0 || ustep <= 0		1066572	1		||			
ANR	1066681	EqualityExpression	vi == 0		1066572	0		==			
ANR	1066682	Identifier	vi		1066572	0					
ANR	1066683	PrimaryExpression	0		1066572	1					
ANR	1066684	RelationalExpression	ustep <= 0		1066572	1		<=			
ANR	1066685	Identifier	ustep		1066572	0					
ANR	1066686	PrimaryExpression	0		1066572	1					
ANR	1066687	ExpressionStatement	ustep = 1	834:4:23029:23038	1066572	1	True				
ANR	1066688	AssignmentExpression	ustep = 1		1066572	0		=			
ANR	1066689	Identifier	ustep		1066572	0					
ANR	1066690	PrimaryExpression	1		1066572	1					
ANR	1066691	ForStatement	for ( ui = uv_row [ vi ] . nus - 1 ; ui >= 0 ; ui -= ustep )		1066572	3					
ANR	1066692	ForInit	ui = uv_row [ vi ] . nus - 1 ;	835:8:23048:23069	1066572	0	True				
ANR	1066693	AssignmentExpression	ui = uv_row [ vi ] . nus - 1		1066572	0		=			
ANR	1066694	Identifier	ui		1066572	0					
ANR	1066695	AdditiveExpression	uv_row [ vi ] . nus - 1		1066572	1		-			
ANR	1066696	MemberAccess	uv_row [ vi ] . nus		1066572	0					
ANR	1066697	ArrayIndexing	uv_row [ vi ]		1066572	0					
ANR	1066698	Identifier	uv_row		1066572	0					
ANR	1066699	Identifier	vi		1066572	1					
ANR	1066700	Identifier	nus		1066572	1					
ANR	1066701	PrimaryExpression	1		1066572	1					
ANR	1066702	Condition	ui >= 0	835:31:23071:23077	1066572	1	True				
ANR	1066703	RelationalExpression	ui >= 0		1066572	0		>=			
ANR	1066704	Identifier	ui		1066572	0					
ANR	1066705	PrimaryExpression	0		1066572	1					
ANR	1066706	AssignmentExpression	ui -= ustep	835:40:23080:23090	1066572	2	True	-=			
ANR	1066707	Identifier	ui		1066572	0					
ANR	1066708	Identifier	ustep		1066572	1					
ANR	1066709	CompoundStatement		16:53:450:450	1066572	3					
ANR	1066710	ExpressionStatement	ua = uv_row [ vi ] . ustart + ( ui + .5 ) * UV_SQSIZ	836:4:23099:23140	1066572	0	True				
ANR	1066711	AssignmentExpression	ua = uv_row [ vi ] . ustart + ( ui + .5 ) * UV_SQSIZ		1066572	0		=			
ANR	1066712	Identifier	ua		1066572	0					
ANR	1066713	AdditiveExpression	uv_row [ vi ] . ustart + ( ui + .5 ) * UV_SQSIZ		1066572	1		+			
ANR	1066714	MemberAccess	uv_row [ vi ] . ustart		1066572	0					
ANR	1066715	ArrayIndexing	uv_row [ vi ]		1066572	0					
ANR	1066716	Identifier	uv_row		1066572	0					
ANR	1066717	Identifier	vi		1066572	1					
ANR	1066718	Identifier	ustart		1066572	1					
ANR	1066719	MultiplicativeExpression	( ui + .5 ) * UV_SQSIZ		1066572	1		*			
ANR	1066720	AdditiveExpression	ui + .5		1066572	0		+			
ANR	1066721	Identifier	ui		1066572	0					
ANR	1066722	PrimaryExpression	.5		1066572	1					
ANR	1066723	Identifier	UV_SQSIZ		1066572	1					
ANR	1066724	ExpressionStatement	"ang = uv2ang ( ua , va )"	837:4:23146:23166	1066572	1	True				
ANR	1066725	AssignmentExpression	"ang = uv2ang ( ua , va )"		1066572	0		=			
ANR	1066726	Identifier	ang		1066572	0					
ANR	1066727	CallExpression	"uv2ang ( ua , va )"		1066572	1					
ANR	1066728	Callee	uv2ang		1066572	0					
ANR	1066729	Identifier	uv2ang		1066572	0					
ANR	1066730	ArgumentList	ua		1066572	1					
ANR	1066731	Argument	ua		1066572	0					
ANR	1066732	Identifier	ua		1066572	0					
ANR	1066733	Argument	va		1066572	1					
ANR	1066734	Identifier	va		1066572	0					
ANR	1066735	ExpressionStatement	i = ( int ) ang	838:4:23172:23185	1066572	2	True				
ANR	1066736	AssignmentExpression	i = ( int ) ang		1066572	0		=			
ANR	1066737	Identifier	i		1066572	0					
ANR	1066738	CastExpression	( int ) ang		1066572	1					
ANR	1066739	CastTarget	int		1066572	0					
ANR	1066740	Identifier	ang		1066572	1					
ANR	1066741	ExpressionStatement	epsa = fabs ( ang - ( i + .5 ) )	839:4:23191:23216	1066572	3	True				
ANR	1066742	AssignmentExpression	epsa = fabs ( ang - ( i + .5 ) )		1066572	0		=			
ANR	1066743	Identifier	epsa		1066572	0					
ANR	1066744	CallExpression	fabs ( ang - ( i + .5 ) )		1066572	1					
ANR	1066745	Callee	fabs		1066572	0					
ANR	1066746	Identifier	fabs		1066572	0					
ANR	1066747	ArgumentList	ang - ( i + .5 )		1066572	1					
ANR	1066748	Argument	ang - ( i + .5 )		1066572	0					
ANR	1066749	AdditiveExpression	ang - ( i + .5 )		1066572	0		-			
ANR	1066750	Identifier	ang		1066572	0					
ANR	1066751	AdditiveExpression	i + .5		1066572	1		+			
ANR	1066752	Identifier	i		1066572	0					
ANR	1066753	PrimaryExpression	.5		1066572	1					
ANR	1066754	IfStatement	if ( epsa < eps [ i ] )		1066572	4					
ANR	1066755	Condition	epsa < eps [ i ]	840:8:23226:23238	1066572	0	True				
ANR	1066756	RelationalExpression	epsa < eps [ i ]		1066572	0		<			
ANR	1066757	Identifier	epsa		1066572	0					
ANR	1066758	ArrayIndexing	eps [ i ]		1066572	1					
ANR	1066759	Identifier	eps		1066572	0					
ANR	1066760	Identifier	i		1066572	1					
ANR	1066761	CompoundStatement		21:23:598:598	1066572	1					
ANR	1066762	ExpressionStatement	oog_table [ i ] = uv_row [ vi ] . ncum + ui	841:5:23248:23283	1066572	0	True				
ANR	1066763	AssignmentExpression	oog_table [ i ] = uv_row [ vi ] . ncum + ui		1066572	0		=			
ANR	1066764	ArrayIndexing	oog_table [ i ]		1066572	0					
ANR	1066765	Identifier	oog_table		1066572	0					
ANR	1066766	Identifier	i		1066572	1					
ANR	1066767	AdditiveExpression	uv_row [ vi ] . ncum + ui		1066572	1		+			
ANR	1066768	MemberAccess	uv_row [ vi ] . ncum		1066572	0					
ANR	1066769	ArrayIndexing	uv_row [ vi ]		1066572	0					
ANR	1066770	Identifier	uv_row		1066572	0					
ANR	1066771	Identifier	vi		1066572	1					
ANR	1066772	Identifier	ncum		1066572	1					
ANR	1066773	Identifier	ui		1066572	1					
ANR	1066774	ExpressionStatement	eps [ i ] = epsa	842:5:23290:23303	1066572	1	True				
ANR	1066775	AssignmentExpression	eps [ i ] = epsa		1066572	0		=			
ANR	1066776	ArrayIndexing	eps [ i ]		1066572	0					
ANR	1066777	Identifier	eps		1066572	0					
ANR	1066778	Identifier	i		1066572	1					
ANR	1066779	Identifier	epsa		1066572	1					
ANR	1066780	ForStatement	for ( i = NANGLES ; i -- ; )		1066572	4					
ANR	1066781	ForInit	i = NANGLES ;	846:7:23327:23338	1066572	0	True				
ANR	1066782	AssignmentExpression	i = NANGLES		1066572	0		=			
ANR	1066783	Identifier	i		1066572	0					
ANR	1066784	Identifier	NANGLES		1066572	1					
ANR	1066785	Condition	i --	846:20:23340:23342	1066572	1	True				
ANR	1066786	PostIncDecOperationExpression	i --		1066572	0					
ANR	1066787	Identifier	i		1066572	0					
ANR	1066788	IncDec	--		1066572	1					
ANR	1066789	IfStatement	if ( eps [ i ] > 1.5 )		1066572	2					
ANR	1066790	Condition	eps [ i ] > 1.5	847:7:23375:23386	1066572	0	True				
ANR	1066791	RelationalExpression	eps [ i ] > 1.5		1066572	0		>			
ANR	1066792	ArrayIndexing	eps [ i ]		1066572	0					
ANR	1066793	Identifier	eps		1066572	0					
ANR	1066794	Identifier	i		1066572	1					
ANR	1066795	PrimaryExpression	1.5		1066572	1					
ANR	1066796	CompoundStatement		29:4:752:762	1066572	1					
ANR	1066797	IdentifierDeclStatement	"int i1 , i2 ;"	848:4:23395:23405	1066572	0	True				
ANR	1066798	IdentifierDecl	i1		1066572	0					
ANR	1066799	IdentifierDeclType	int		1066572	0					
ANR	1066800	Identifier	i1		1066572	1					
ANR	1066801	IdentifierDecl	i2		1066572	1					
ANR	1066802	IdentifierDeclType	int		1066572	0					
ANR	1066803	Identifier	i2		1066572	1					
ANR	1066804	ForStatement	for ( i1 = 1 ; i1 < NANGLES / 2 ; i1 ++ )		1066572	1					
ANR	1066805	ForInit	i1 = 1 ;	849:9:23416:23422	1066572	0	True				
ANR	1066806	AssignmentExpression	i1 = 1		1066572	0		=			
ANR	1066807	Identifier	i1		1066572	0					
ANR	1066808	PrimaryExpression	1		1066572	1					
ANR	1066809	Condition	i1 < NANGLES / 2	849:17:23424:23437	1066572	1	True				
ANR	1066810	RelationalExpression	i1 < NANGLES / 2		1066572	0		<			
ANR	1066811	Identifier	i1		1066572	0					
ANR	1066812	MultiplicativeExpression	NANGLES / 2		1066572	1		/			
ANR	1066813	Identifier	NANGLES		1066572	0					
ANR	1066814	PrimaryExpression	2		1066572	1					
ANR	1066815	PostIncDecOperationExpression	i1 ++	849:33:23440:23443	1066572	2	True				
ANR	1066816	Identifier	i1		1066572	0					
ANR	1066817	IncDec	++		1066572	1					
ANR	1066818	IfStatement	if ( eps [ ( i + i1 ) % NANGLES ] < 1.5 )		1066572	3					
ANR	1066819	Condition	eps [ ( i + i1 ) % NANGLES ] < 1.5	850:9:23455:23479	1066572	0	True				
ANR	1066820	RelationalExpression	eps [ ( i + i1 ) % NANGLES ] < 1.5		1066572	0		<			
ANR	1066821	ArrayIndexing	eps [ ( i + i1 ) % NANGLES ]		1066572	0					
ANR	1066822	Identifier	eps		1066572	0					
ANR	1066823	MultiplicativeExpression	( i + i1 ) % NANGLES		1066572	1		%			
ANR	1066824	AdditiveExpression	i + i1		1066572	0		+			
ANR	1066825	Identifier	i		1066572	0					
ANR	1066826	Identifier	i1		1066572	1					
ANR	1066827	Identifier	NANGLES		1066572	1					
ANR	1066828	PrimaryExpression	1.5		1066572	1					
ANR	1066829	BreakStatement	break ;	851:6:23488:23493	1066572	1	True				
ANR	1066830	ForStatement	for ( i2 = 1 ; i2 < NANGLES / 2 ; i2 ++ )		1066572	2					
ANR	1066831	ForInit	i2 = 1 ;	852:9:23504:23510	1066572	0	True				
ANR	1066832	AssignmentExpression	i2 = 1		1066572	0		=			
ANR	1066833	Identifier	i2		1066572	0					
ANR	1066834	PrimaryExpression	1		1066572	1					
ANR	1066835	Condition	i2 < NANGLES / 2	852:17:23512:23525	1066572	1	True				
ANR	1066836	RelationalExpression	i2 < NANGLES / 2		1066572	0		<			
ANR	1066837	Identifier	i2		1066572	0					
ANR	1066838	MultiplicativeExpression	NANGLES / 2		1066572	1		/			
ANR	1066839	Identifier	NANGLES		1066572	0					
ANR	1066840	PrimaryExpression	2		1066572	1					
ANR	1066841	PostIncDecOperationExpression	i2 ++	852:33:23528:23531	1066572	2	True				
ANR	1066842	Identifier	i2		1066572	0					
ANR	1066843	IncDec	++		1066572	1					
ANR	1066844	IfStatement	if ( eps [ ( i + NANGLES - i2 ) % NANGLES ] < 1.5 )		1066572	3					
ANR	1066845	Condition	eps [ ( i + NANGLES - i2 ) % NANGLES ] < 1.5	853:9:23543:23575	1066572	0	True				
ANR	1066846	RelationalExpression	eps [ ( i + NANGLES - i2 ) % NANGLES ] < 1.5		1066572	0		<			
ANR	1066847	ArrayIndexing	eps [ ( i + NANGLES - i2 ) % NANGLES ]		1066572	0					
ANR	1066848	Identifier	eps		1066572	0					
ANR	1066849	MultiplicativeExpression	( i + NANGLES - i2 ) % NANGLES		1066572	1		%			
ANR	1066850	AdditiveExpression	i + NANGLES - i2		1066572	0		+			
ANR	1066851	Identifier	i		1066572	0					
ANR	1066852	AdditiveExpression	NANGLES - i2		1066572	1		-			
ANR	1066853	Identifier	NANGLES		1066572	0					
ANR	1066854	Identifier	i2		1066572	1					
ANR	1066855	Identifier	NANGLES		1066572	1					
ANR	1066856	PrimaryExpression	1.5		1066572	1					
ANR	1066857	BreakStatement	break ;	854:6:23584:23589	1066572	1	True				
ANR	1066858	IfStatement	if ( i1 < i2 )		1066572	3					
ANR	1066859	Condition	i1 < i2	855:8:23599:23605	1066572	0	True				
ANR	1066860	RelationalExpression	i1 < i2		1066572	0		<			
ANR	1066861	Identifier	i1		1066572	0					
ANR	1066862	Identifier	i2		1066572	1					
ANR	1066863	ExpressionStatement	oog_table [ i ] = oog_table [ ( i + i1 ) % NANGLES ]	856:5:23613:23659	1066572	1	True				
ANR	1066864	AssignmentExpression	oog_table [ i ] = oog_table [ ( i + i1 ) % NANGLES ]		1066572	0		=			
ANR	1066865	ArrayIndexing	oog_table [ i ]		1066572	0					
ANR	1066866	Identifier	oog_table		1066572	0					
ANR	1066867	Identifier	i		1066572	1					
ANR	1066868	ArrayIndexing	oog_table [ ( i + i1 ) % NANGLES ]		1066572	1					
ANR	1066869	Identifier	oog_table		1066572	0					
ANR	1066870	MultiplicativeExpression	( i + i1 ) % NANGLES		1066572	1		%			
ANR	1066871	AdditiveExpression	i + i1		1066572	0		+			
ANR	1066872	Identifier	i		1066572	0					
ANR	1066873	Identifier	i1		1066572	1					
ANR	1066874	Identifier	NANGLES		1066572	1					
ANR	1066875	ElseStatement	else		1066572	0					
ANR	1066876	ExpressionStatement	oog_table [ i ] = oog_table [ ( i + NANGLES - i2 ) % NANGLES ]	859:5:23675:23729	1066572	0	True				
ANR	1066877	AssignmentExpression	oog_table [ i ] = oog_table [ ( i + NANGLES - i2 ) % NANGLES ]		1066572	0		=			
ANR	1066878	ArrayIndexing	oog_table [ i ]		1066572	0					
ANR	1066879	Identifier	oog_table		1066572	0					
ANR	1066880	Identifier	i		1066572	1					
ANR	1066881	ArrayIndexing	oog_table [ ( i + NANGLES - i2 ) % NANGLES ]		1066572	1					
ANR	1066882	Identifier	oog_table		1066572	0					
ANR	1066883	MultiplicativeExpression	( i + NANGLES - i2 ) % NANGLES		1066572	1		%			
ANR	1066884	AdditiveExpression	i + NANGLES - i2		1066572	0		+			
ANR	1066885	Identifier	i		1066572	0					
ANR	1066886	AdditiveExpression	NANGLES - i2		1066572	1		-			
ANR	1066887	Identifier	NANGLES		1066572	0					
ANR	1066888	Identifier	i2		1066572	1					
ANR	1066889	Identifier	NANGLES		1066572	1					
ANR	1066890	ExpressionStatement	initialized = 1	862:2:23738:23753	1066572	5	True				
ANR	1066891	AssignmentExpression	initialized = 1		1066572	0		=			
ANR	1066892	Identifier	initialized		1066572	0					
ANR	1066893	PrimaryExpression	1		1066572	1					
ANR	1066894	ExpressionStatement	"i = ( int ) uv2ang ( u , v )"	864:1:23759:23781	1066572	7	True				
ANR	1066895	AssignmentExpression	"i = ( int ) uv2ang ( u , v )"		1066572	0		=			
ANR	1066896	Identifier	i		1066572	0					
ANR	1066897	CastExpression	"( int ) uv2ang ( u , v )"		1066572	1					
ANR	1066898	CastTarget	int		1066572	0					
ANR	1066899	CallExpression	"uv2ang ( u , v )"		1066572	1					
ANR	1066900	Callee	uv2ang		1066572	0					
ANR	1066901	Identifier	uv2ang		1066572	0					
ANR	1066902	ArgumentList	u		1066572	1					
ANR	1066903	Argument	u		1066572	0					
ANR	1066904	Identifier	u		1066572	0					
ANR	1066905	Argument	v		1066572	1					
ANR	1066906	Identifier	v		1066572	0					
ANR	1066907	ReturnStatement	return ( oog_table [ i ] ) ;	865:1:23809:23830	1066572	8	True				
ANR	1066908	ArrayIndexing	oog_table [ i ]		1066572	0					
ANR	1066909	Identifier	oog_table		1066572	0					
ANR	1066910	Identifier	i		1066572	1					
ANR	1066911	ReturnType	static int		1066572	1					
ANR	1066912	Identifier	oog_encode		1066572	2					
ANR	1066913	ParameterList	"double u , double v"		1066572	3					
ANR	1066914	Parameter	double u	819:11:22588:22595	1066572	0	True				
ANR	1066915	ParameterType	double		1066572	0					
ANR	1066916	Identifier	u		1066572	1					
ANR	1066917	Parameter	double v	819:21:22598:22605	1066572	1	True				
ANR	1066918	ParameterType	double		1066572	0					
ANR	1066919	Identifier	v		1066572	1					
ANR	1066920	CFGEntryNode	ENTRY		1066572		True				
ANR	1066921	CFGExitNode	EXIT		1066572		True				
ANR	1066922	Symbol	* NANGLES		1066572						
ANR	1066923	Symbol	oog_table		1066572						
ANR	1066924	Symbol	ua		1066572						
ANR	1066925	Symbol	* i2		1066572						
ANR	1066926	Symbol	UV_VSTART		1066572						
ANR	1066927	Symbol	* i1		1066572						
ANR	1066928	Symbol	ui		1066572						
ANR	1066929	Symbol	epsa		1066572						
ANR	1066930	Symbol	initialized		1066572						
ANR	1066931	Symbol	UV_NVS		1066572						
ANR	1066932	Symbol	ang		1066572						
ANR	1066933	Symbol	fabs		1066572						
ANR	1066934	Symbol	ustep		1066572						
ANR	1066935	Symbol	UV_SQSIZ		1066572						
ANR	1066936	Symbol	i1		1066572						
ANR	1066937	Symbol	i		1066572						
ANR	1066938	Symbol	eps		1066572						
ANR	1066939	Symbol	i2		1066572						
ANR	1066940	Symbol	va		1066572						
ANR	1066941	Symbol	* eps		1066572						
ANR	1066942	Symbol	uv_row		1066572						
ANR	1066943	Symbol	uv_row [ vi ] . ncum		1066572						
ANR	1066944	Symbol	uv_row [ vi ] . nus		1066572						
ANR	1066945	Symbol	* oog_table		1066572						
ANR	1066946	Symbol	vi		1066572						
ANR	1066947	Symbol	NANGLES		1066572						
ANR	1066948	Symbol	* i		1066572						
ANR	1066949	Symbol	u		1066572						
ANR	1066950	Symbol	v		1066572						
ANR	1066951	Symbol	uv2ang		1066572						
ANR	1066952	Symbol	* uv_row		1066572						
ANR	1066953	Symbol	* vi		1066572						
ANR	1066954	Symbol	uv_row [ vi ] . ustart		1066572						
ANR	1066955	Function	uv_encode	874:0:23898:24339							
ANR	1066956	FunctionDef	"uv_encode (double u , double v , int em)"		1066955	0					
ANR	1066957	CompoundStatement		876:0:23973:24339	1066955	0					
ANR	1066958	Statement	register	877:1:23976:23983	1066955	0	True				
ANR	1066959	IdentifierDeclStatement	"int vi , ui ;"	877:10:23985:23995	1066955	1	True				
ANR	1066960	IdentifierDecl	vi		1066955	0					
ANR	1066961	IdentifierDeclType	int		1066955	0					
ANR	1066962	Identifier	vi		1066955	1					
ANR	1066963	IdentifierDecl	ui		1066955	1					
ANR	1066964	IdentifierDeclType	int		1066955	0					
ANR	1066965	Identifier	ui		1066955	1					
ANR	1066966	IfStatement	if ( v < UV_VSTART )		1066955	2					
ANR	1066967	Condition	v < UV_VSTART	879:5:24003:24015	1066955	0	True				
ANR	1066968	RelationalExpression	v < UV_VSTART		1066955	0		<			
ANR	1066969	Identifier	v		1066955	0					
ANR	1066970	Identifier	UV_VSTART		1066955	1					
ANR	1066971	ReturnStatement	"return oog_encode ( u , v ) ;"	880:2:24020:24043	1066955	1	True				
ANR	1066972	CallExpression	"oog_encode ( u , v )"		1066955	0					
ANR	1066973	Callee	oog_encode		1066955	0					
ANR	1066974	Identifier	oog_encode		1066955	0					
ANR	1066975	ArgumentList	u		1066955	1					
ANR	1066976	Argument	u		1066955	0					
ANR	1066977	Identifier	u		1066955	0					
ANR	1066978	Argument	v		1066955	1					
ANR	1066979	Identifier	v		1066955	0					
ANR	1066980	ExpressionStatement	"vi = itrunc ( ( v - UV_VSTART ) * ( 1. / UV_SQSIZ ) , em )"	881:1:24046:24092	1066955	3	True				
ANR	1066981	AssignmentExpression	"vi = itrunc ( ( v - UV_VSTART ) * ( 1. / UV_SQSIZ ) , em )"		1066955	0		=			
ANR	1066982	Identifier	vi		1066955	0					
ANR	1066983	CallExpression	"itrunc ( ( v - UV_VSTART ) * ( 1. / UV_SQSIZ ) , em )"		1066955	1					
ANR	1066984	Callee	itrunc		1066955	0					
ANR	1066985	Identifier	itrunc		1066955	0					
ANR	1066986	ArgumentList	( v - UV_VSTART ) * ( 1. / UV_SQSIZ )		1066955	1					
ANR	1066987	Argument	( v - UV_VSTART ) * ( 1. / UV_SQSIZ )		1066955	0					
ANR	1066988	MultiplicativeExpression	( v - UV_VSTART ) * ( 1. / UV_SQSIZ )		1066955	0		*			
ANR	1066989	AdditiveExpression	v - UV_VSTART		1066955	0		-			
ANR	1066990	Identifier	v		1066955	0					
ANR	1066991	Identifier	UV_VSTART		1066955	1					
ANR	1066992	MultiplicativeExpression	1. / UV_SQSIZ		1066955	1		/			
ANR	1066993	PrimaryExpression	1.		1066955	0					
ANR	1066994	Identifier	UV_SQSIZ		1066955	1					
ANR	1066995	Argument	em		1066955	1					
ANR	1066996	Identifier	em		1066955	0					
ANR	1066997	IfStatement	if ( vi >= UV_NVS )		1066955	4					
ANR	1066998	Condition	vi >= UV_NVS	882:5:24099:24110	1066955	0	True				
ANR	1066999	RelationalExpression	vi >= UV_NVS		1066955	0		>=			
ANR	1067000	Identifier	vi		1066955	0					
ANR	1067001	Identifier	UV_NVS		1066955	1					
ANR	1067002	ReturnStatement	"return oog_encode ( u , v ) ;"	883:2:24115:24138	1066955	1	True				
ANR	1067003	CallExpression	"oog_encode ( u , v )"		1066955	0					
ANR	1067004	Callee	oog_encode		1066955	0					
ANR	1067005	Identifier	oog_encode		1066955	0					
ANR	1067006	ArgumentList	u		1066955	1					
ANR	1067007	Argument	u		1066955	0					
ANR	1067008	Identifier	u		1066955	0					
ANR	1067009	Argument	v		1066955	1					
ANR	1067010	Identifier	v		1066955	0					
ANR	1067011	IfStatement	if ( u < uv_row [ vi ] . ustart )		1066955	5					
ANR	1067012	Condition	u < uv_row [ vi ] . ustart	884:5:24145:24165	1066955	0	True				
ANR	1067013	RelationalExpression	u < uv_row [ vi ] . ustart		1066955	0		<			
ANR	1067014	Identifier	u		1066955	0					
ANR	1067015	MemberAccess	uv_row [ vi ] . ustart		1066955	1					
ANR	1067016	ArrayIndexing	uv_row [ vi ]		1066955	0					
ANR	1067017	Identifier	uv_row		1066955	0					
ANR	1067018	Identifier	vi		1066955	1					
ANR	1067019	Identifier	ustart		1066955	1					
ANR	1067020	ReturnStatement	"return oog_encode ( u , v ) ;"	885:2:24170:24193	1066955	1	True				
ANR	1067021	CallExpression	"oog_encode ( u , v )"		1066955	0					
ANR	1067022	Callee	oog_encode		1066955	0					
ANR	1067023	Identifier	oog_encode		1066955	0					
ANR	1067024	ArgumentList	u		1066955	1					
ANR	1067025	Argument	u		1066955	0					
ANR	1067026	Identifier	u		1066955	0					
ANR	1067027	Argument	v		1066955	1					
ANR	1067028	Identifier	v		1066955	0					
ANR	1067029	ExpressionStatement	"ui = itrunc ( ( u - uv_row [ vi ] . ustart ) * ( 1. / UV_SQSIZ ) , em )"	886:1:24196:24250	1066955	6	True				
ANR	1067030	AssignmentExpression	"ui = itrunc ( ( u - uv_row [ vi ] . ustart ) * ( 1. / UV_SQSIZ ) , em )"		1066955	0		=			
ANR	1067031	Identifier	ui		1066955	0					
ANR	1067032	CallExpression	"itrunc ( ( u - uv_row [ vi ] . ustart ) * ( 1. / UV_SQSIZ ) , em )"		1066955	1					
ANR	1067033	Callee	itrunc		1066955	0					
ANR	1067034	Identifier	itrunc		1066955	0					
ANR	1067035	ArgumentList	( u - uv_row [ vi ] . ustart ) * ( 1. / UV_SQSIZ )		1066955	1					
ANR	1067036	Argument	( u - uv_row [ vi ] . ustart ) * ( 1. / UV_SQSIZ )		1066955	0					
ANR	1067037	MultiplicativeExpression	( u - uv_row [ vi ] . ustart ) * ( 1. / UV_SQSIZ )		1066955	0		*			
ANR	1067038	AdditiveExpression	u - uv_row [ vi ] . ustart		1066955	0		-			
ANR	1067039	Identifier	u		1066955	0					
ANR	1067040	MemberAccess	uv_row [ vi ] . ustart		1066955	1					
ANR	1067041	ArrayIndexing	uv_row [ vi ]		1066955	0					
ANR	1067042	Identifier	uv_row		1066955	0					
ANR	1067043	Identifier	vi		1066955	1					
ANR	1067044	Identifier	ustart		1066955	1					
ANR	1067045	MultiplicativeExpression	1. / UV_SQSIZ		1066955	1		/			
ANR	1067046	PrimaryExpression	1.		1066955	0					
ANR	1067047	Identifier	UV_SQSIZ		1066955	1					
ANR	1067048	Argument	em		1066955	1					
ANR	1067049	Identifier	em		1066955	0					
ANR	1067050	IfStatement	if ( ui >= uv_row [ vi ] . nus )		1066955	7					
ANR	1067051	Condition	ui >= uv_row [ vi ] . nus	887:5:24257:24276	1066955	0	True				
ANR	1067052	RelationalExpression	ui >= uv_row [ vi ] . nus		1066955	0		>=			
ANR	1067053	Identifier	ui		1066955	0					
ANR	1067054	MemberAccess	uv_row [ vi ] . nus		1066955	1					
ANR	1067055	ArrayIndexing	uv_row [ vi ]		1066955	0					
ANR	1067056	Identifier	uv_row		1066955	0					
ANR	1067057	Identifier	vi		1066955	1					
ANR	1067058	Identifier	nus		1066955	1					
ANR	1067059	ReturnStatement	"return oog_encode ( u , v ) ;"	888:2:24281:24304	1066955	1	True				
ANR	1067060	CallExpression	"oog_encode ( u , v )"		1066955	0					
ANR	1067061	Callee	oog_encode		1066955	0					
ANR	1067062	Identifier	oog_encode		1066955	0					
ANR	1067063	ArgumentList	u		1066955	1					
ANR	1067064	Argument	u		1066955	0					
ANR	1067065	Identifier	u		1066955	0					
ANR	1067066	Argument	v		1066955	1					
ANR	1067067	Identifier	v		1066955	0					
ANR	1067068	ReturnStatement	return ( uv_row [ vi ] . ncum + ui ) ;	890:1:24308:24337	1066955	8	True				
ANR	1067069	AdditiveExpression	uv_row [ vi ] . ncum + ui		1066955	0		+			
ANR	1067070	MemberAccess	uv_row [ vi ] . ncum		1066955	0					
ANR	1067071	ArrayIndexing	uv_row [ vi ]		1066955	0					
ANR	1067072	Identifier	uv_row		1066955	0					
ANR	1067073	Identifier	vi		1066955	1					
ANR	1067074	Identifier	ncum		1066955	1					
ANR	1067075	Identifier	ui		1066955	1					
ANR	1067076	ReturnType	int		1066955	1					
ANR	1067077	Identifier	uv_encode		1066955	2					
ANR	1067078	ParameterList	"double u , double v , int em"		1066955	3					
ANR	1067079	Parameter	double u	875:10:23912:23919	1066955	0	True				
ANR	1067080	ParameterType	double		1066955	0					
ANR	1067081	Identifier	u		1066955	1					
ANR	1067082	Parameter	double v	875:20:23922:23929	1066955	1	True				
ANR	1067083	ParameterType	double		1066955	0					
ANR	1067084	Identifier	v		1066955	1					
ANR	1067085	Parameter	int em	875:30:23932:23937	1066955	2	True				
ANR	1067086	ParameterType	int		1066955	0					
ANR	1067087	Identifier	em		1066955	1					
ANR	1067088	CFGEntryNode	ENTRY		1066955		True				
ANR	1067089	CFGExitNode	EXIT		1066955		True				
ANR	1067090	Symbol	itrunc		1066955						
ANR	1067091	Symbol	UV_SQSIZ		1066955						
ANR	1067092	Symbol	em		1066955						
ANR	1067093	Symbol	UV_VSTART		1066955						
ANR	1067094	Symbol	oog_encode		1066955						
ANR	1067095	Symbol	uv_row		1066955						
ANR	1067096	Symbol	uv_row [ vi ] . ncum		1066955						
ANR	1067097	Symbol	uv_row [ vi ] . nus		1066955						
ANR	1067098	Symbol	vi		1066955						
ANR	1067099	Symbol	ui		1066955						
ANR	1067100	Symbol	u		1066955						
ANR	1067101	Symbol	v		1066955						
ANR	1067102	Symbol	UV_NVS		1066955						
ANR	1067103	Symbol	* uv_row		1066955						
ANR	1067104	Symbol	* vi		1066955						
ANR	1067105	Symbol	uv_row [ vi ] . ustart		1066955						
ANR	1067106	Function	uv_decode	896:0:24375:24912							
ANR	1067107	FunctionDef	"uv_decode (double * up , double * vp , int c)"		1067106	0					
ANR	1067108	CompoundStatement		898:0:24447:24912	1067106	0					
ANR	1067109	IdentifierDeclStatement	"int upper , lower ;"	899:1:24450:24466	1067106	0	True				
ANR	1067110	IdentifierDecl	upper		1067106	0					
ANR	1067111	IdentifierDeclType	int		1067106	0					
ANR	1067112	Identifier	upper		1067106	1					
ANR	1067113	IdentifierDecl	lower		1067106	1					
ANR	1067114	IdentifierDeclType	int		1067106	0					
ANR	1067115	Identifier	lower		1067106	1					
ANR	1067116	Statement	register	900:1:24469:24476	1067106	1	True				
ANR	1067117	IdentifierDeclStatement	"int ui , vi ;"	900:10:24478:24488	1067106	2	True				
ANR	1067118	IdentifierDecl	ui		1067106	0					
ANR	1067119	IdentifierDeclType	int		1067106	0					
ANR	1067120	Identifier	ui		1067106	1					
ANR	1067121	IdentifierDecl	vi		1067106	1					
ANR	1067122	IdentifierDeclType	int		1067106	0					
ANR	1067123	Identifier	vi		1067106	1					
ANR	1067124	IfStatement	if ( c < 0 || c >= UV_NDIVS )		1067106	3					
ANR	1067125	Condition	c < 0 || c >= UV_NDIVS	902:5:24496:24517	1067106	0	True				
ANR	1067126	OrExpression	c < 0 || c >= UV_NDIVS		1067106	0		||			
ANR	1067127	RelationalExpression	c < 0		1067106	0		<			
ANR	1067128	Identifier	c		1067106	0					
ANR	1067129	PrimaryExpression	0		1067106	1					
ANR	1067130	RelationalExpression	c >= UV_NDIVS		1067106	1		>=			
ANR	1067131	Identifier	c		1067106	0					
ANR	1067132	Identifier	UV_NDIVS		1067106	1					
ANR	1067133	ReturnStatement	return ( - 1 ) ;	903:2:24522:24533	1067106	1	True				
ANR	1067134	UnaryOperationExpression	- 1		1067106	0					
ANR	1067135	UnaryOperator	-		1067106	0					
ANR	1067136	PrimaryExpression	1		1067106	1					
ANR	1067137	ExpressionStatement	lower = 0	904:1:24536:24545	1067106	4	True				
ANR	1067138	AssignmentExpression	lower = 0		1067106	0		=			
ANR	1067139	Identifier	lower		1067106	0					
ANR	1067140	PrimaryExpression	0		1067106	1					
ANR	1067141	ExpressionStatement	upper = UV_NVS	905:1:24571:24585	1067106	5	True				
ANR	1067142	AssignmentExpression	upper = UV_NVS		1067106	0		=			
ANR	1067143	Identifier	upper		1067106	0					
ANR	1067144	Identifier	UV_NVS		1067106	1					
ANR	1067145	WhileStatement	while ( upper - lower > 1 )		1067106	6					
ANR	1067146	Condition	upper - lower > 1	906:8:24595:24611	1067106	0	True				
ANR	1067147	RelationalExpression	upper - lower > 1		1067106	0		>			
ANR	1067148	AdditiveExpression	upper - lower		1067106	0		-			
ANR	1067149	Identifier	upper		1067106	0					
ANR	1067150	Identifier	lower		1067106	1					
ANR	1067151	PrimaryExpression	1		1067106	1					
ANR	1067152	CompoundStatement		9:27:166:166	1067106	1					
ANR	1067153	ExpressionStatement	vi = ( lower + upper ) >> 1	907:2:24618:24643	1067106	0	True				
ANR	1067154	AssignmentExpression	vi = ( lower + upper ) >> 1		1067106	0		=			
ANR	1067155	Identifier	vi		1067106	0					
ANR	1067156	ShiftExpression	( lower + upper ) >> 1		1067106	1		>>			
ANR	1067157	AdditiveExpression	lower + upper		1067106	0		+			
ANR	1067158	Identifier	lower		1067106	0					
ANR	1067159	Identifier	upper		1067106	1					
ANR	1067160	PrimaryExpression	1		1067106	1					
ANR	1067161	ExpressionStatement	ui = c - uv_row [ vi ] . ncum	908:2:24647:24671	1067106	1	True				
ANR	1067162	AssignmentExpression	ui = c - uv_row [ vi ] . ncum		1067106	0		=			
ANR	1067163	Identifier	ui		1067106	0					
ANR	1067164	AdditiveExpression	c - uv_row [ vi ] . ncum		1067106	1		-			
ANR	1067165	Identifier	c		1067106	0					
ANR	1067166	MemberAccess	uv_row [ vi ] . ncum		1067106	1					
ANR	1067167	ArrayIndexing	uv_row [ vi ]		1067106	0					
ANR	1067168	Identifier	uv_row		1067106	0					
ANR	1067169	Identifier	vi		1067106	1					
ANR	1067170	Identifier	ncum		1067106	1					
ANR	1067171	IfStatement	if ( ui > 0 )		1067106	2					
ANR	1067172	Condition	ui > 0	909:6:24679:24684	1067106	0	True				
ANR	1067173	RelationalExpression	ui > 0		1067106	0		>			
ANR	1067174	Identifier	ui		1067106	0					
ANR	1067175	PrimaryExpression	0		1067106	1					
ANR	1067176	ExpressionStatement	lower = vi	910:3:24690:24700	1067106	1	True				
ANR	1067177	AssignmentExpression	lower = vi		1067106	0		=			
ANR	1067178	Identifier	lower		1067106	0					
ANR	1067179	Identifier	vi		1067106	1					
ANR	1067180	ElseStatement	else		1067106	0					
ANR	1067181	IfStatement	if ( ui < 0 )		1067106	0					
ANR	1067182	Condition	ui < 0	911:11:24713:24718	1067106	0	True				
ANR	1067183	RelationalExpression	ui < 0		1067106	0		<			
ANR	1067184	Identifier	ui		1067106	0					
ANR	1067185	PrimaryExpression	0		1067106	1					
ANR	1067186	ExpressionStatement	upper = vi	912:3:24724:24734	1067106	1	True				
ANR	1067187	AssignmentExpression	upper = vi		1067106	0		=			
ANR	1067188	Identifier	upper		1067106	0					
ANR	1067189	Identifier	vi		1067106	1					
ANR	1067190	ElseStatement	else		1067106	0					
ANR	1067191	CompoundStatement		16:7:295:295	1067106	0					
ANR	1067192	ExpressionStatement	lower = vi	914:3:24748:24758	1067106	0	True				
ANR	1067193	AssignmentExpression	lower = vi		1067106	0		=			
ANR	1067194	Identifier	lower		1067106	0					
ANR	1067195	Identifier	vi		1067106	1					
ANR	1067196	BreakStatement	break ;	915:3:24763:24768	1067106	1	True				
ANR	1067197	ExpressionStatement	vi = lower	918:1:24778:24788	1067106	7	True				
ANR	1067198	AssignmentExpression	vi = lower		1067106	0		=			
ANR	1067199	Identifier	vi		1067106	0					
ANR	1067200	Identifier	lower		1067106	1					
ANR	1067201	ExpressionStatement	ui = c - uv_row [ vi ] . ncum	919:1:24791:24815	1067106	8	True				
ANR	1067202	AssignmentExpression	ui = c - uv_row [ vi ] . ncum		1067106	0		=			
ANR	1067203	Identifier	ui		1067106	0					
ANR	1067204	AdditiveExpression	c - uv_row [ vi ] . ncum		1067106	1		-			
ANR	1067205	Identifier	c		1067106	0					
ANR	1067206	MemberAccess	uv_row [ vi ] . ncum		1067106	1					
ANR	1067207	ArrayIndexing	uv_row [ vi ]		1067106	0					
ANR	1067208	Identifier	uv_row		1067106	0					
ANR	1067209	Identifier	vi		1067106	1					
ANR	1067210	Identifier	ncum		1067106	1					
ANR	1067211	ExpressionStatement	* up = uv_row [ vi ] . ustart + ( ui + .5 ) * UV_SQSIZ	920:1:24818:24860	1067106	9	True				
ANR	1067212	AssignmentExpression	* up = uv_row [ vi ] . ustart + ( ui + .5 ) * UV_SQSIZ		1067106	0		=			
ANR	1067213	UnaryOperationExpression	* up		1067106	0					
ANR	1067214	UnaryOperator	*		1067106	0					
ANR	1067215	Identifier	up		1067106	1					
ANR	1067216	AdditiveExpression	uv_row [ vi ] . ustart + ( ui + .5 ) * UV_SQSIZ		1067106	1		+			
ANR	1067217	MemberAccess	uv_row [ vi ] . ustart		1067106	0					
ANR	1067218	ArrayIndexing	uv_row [ vi ]		1067106	0					
ANR	1067219	Identifier	uv_row		1067106	0					
ANR	1067220	Identifier	vi		1067106	1					
ANR	1067221	Identifier	ustart		1067106	1					
ANR	1067222	MultiplicativeExpression	( ui + .5 ) * UV_SQSIZ		1067106	1		*			
ANR	1067223	AdditiveExpression	ui + .5		1067106	0		+			
ANR	1067224	Identifier	ui		1067106	0					
ANR	1067225	PrimaryExpression	.5		1067106	1					
ANR	1067226	Identifier	UV_SQSIZ		1067106	1					
ANR	1067227	ExpressionStatement	* vp = UV_VSTART + ( vi + .5 ) * UV_SQSIZ	921:1:24863:24897	1067106	10	True				
ANR	1067228	AssignmentExpression	* vp = UV_VSTART + ( vi + .5 ) * UV_SQSIZ		1067106	0		=			
ANR	1067229	UnaryOperationExpression	* vp		1067106	0					
ANR	1067230	UnaryOperator	*		1067106	0					
ANR	1067231	Identifier	vp		1067106	1					
ANR	1067232	AdditiveExpression	UV_VSTART + ( vi + .5 ) * UV_SQSIZ		1067106	1		+			
ANR	1067233	Identifier	UV_VSTART		1067106	0					
ANR	1067234	MultiplicativeExpression	( vi + .5 ) * UV_SQSIZ		1067106	1		*			
ANR	1067235	AdditiveExpression	vi + .5		1067106	0		+			
ANR	1067236	Identifier	vi		1067106	0					
ANR	1067237	PrimaryExpression	.5		1067106	1					
ANR	1067238	Identifier	UV_SQSIZ		1067106	1					
ANR	1067239	ReturnStatement	return ( 0 ) ;	922:1:24900:24910	1067106	11	True				
ANR	1067240	PrimaryExpression	0		1067106	0					
ANR	1067241	ReturnType	int		1067106	1					
ANR	1067242	Identifier	uv_decode		1067106	2					
ANR	1067243	ParameterList	"double * up , double * vp , int c"		1067106	3					
ANR	1067244	Parameter	double * up	897:10:24389:24398	1067106	0	True				
ANR	1067245	ParameterType	double *		1067106	0					
ANR	1067246	Identifier	up		1067106	1					
ANR	1067247	Parameter	double * vp	897:22:24401:24410	1067106	1	True				
ANR	1067248	ParameterType	double *		1067106	0					
ANR	1067249	Identifier	vp		1067106	1					
ANR	1067250	Parameter	int c	897:34:24413:24417	1067106	2	True				
ANR	1067251	ParameterType	int		1067106	0					
ANR	1067252	Identifier	c		1067106	1					
ANR	1067253	CFGEntryNode	ENTRY		1067106		True				
ANR	1067254	CFGExitNode	EXIT		1067106		True				
ANR	1067255	Symbol	* up		1067106						
ANR	1067256	Symbol	c		1067106						
ANR	1067257	Symbol	* vp		1067106						
ANR	1067258	Symbol	lower		1067106						
ANR	1067259	Symbol	upper		1067106						
ANR	1067260	Symbol	UV_SQSIZ		1067106						
ANR	1067261	Symbol	UV_VSTART		1067106						
ANR	1067262	Symbol	uv_row		1067106						
ANR	1067263	Symbol	uv_row [ vi ] . ncum		1067106						
ANR	1067264	Symbol	UV_NDIVS		1067106						
ANR	1067265	Symbol	vi		1067106						
ANR	1067266	Symbol	ui		1067106						
ANR	1067267	Symbol	UV_NVS		1067106						
ANR	1067268	Symbol	* uv_row		1067106						
ANR	1067269	Symbol	vp		1067106						
ANR	1067270	Symbol	* vi		1067106						
ANR	1067271	Symbol	up		1067106						
ANR	1067272	Symbol	uv_row [ vi ] . ustart		1067106						
ANR	1067273	Function	LogLuv24toXYZ	928:0:24948:25421							
ANR	1067274	FunctionDef	"LogLuv24toXYZ (uint32 p , float XYZ [ 3 ])"		1067273	0					
ANR	1067275	CompoundStatement		930:0:24991:25421	1067273	0					
ANR	1067276	IdentifierDeclStatement	int Ce ;	931:1:24994:25000	1067273	0	True				
ANR	1067277	IdentifierDecl	Ce		1067273	0					
ANR	1067278	IdentifierDeclType	int		1067273	0					
ANR	1067279	Identifier	Ce		1067273	1					
ANR	1067280	IdentifierDeclStatement	"double L , u , v , s , x , y ;"	932:1:25003:25026	1067273	1	True				
ANR	1067281	IdentifierDecl	L		1067273	0					
ANR	1067282	IdentifierDeclType	double		1067273	0					
ANR	1067283	Identifier	L		1067273	1					
ANR	1067284	IdentifierDecl	u		1067273	1					
ANR	1067285	IdentifierDeclType	double		1067273	0					
ANR	1067286	Identifier	u		1067273	1					
ANR	1067287	IdentifierDecl	v		1067273	2					
ANR	1067288	IdentifierDeclType	double		1067273	0					
ANR	1067289	Identifier	v		1067273	1					
ANR	1067290	IdentifierDecl	s		1067273	3					
ANR	1067291	IdentifierDeclType	double		1067273	0					
ANR	1067292	Identifier	s		1067273	1					
ANR	1067293	IdentifierDecl	x		1067273	4					
ANR	1067294	IdentifierDeclType	double		1067273	0					
ANR	1067295	Identifier	x		1067273	1					
ANR	1067296	IdentifierDecl	y		1067273	5					
ANR	1067297	IdentifierDeclType	double		1067273	0					
ANR	1067298	Identifier	y		1067273	1					
ANR	1067299	ExpressionStatement	L = LogL10toY ( p >> 14 & 0x3ff )	934:1:25057:25085	1067273	2	True				
ANR	1067300	AssignmentExpression	L = LogL10toY ( p >> 14 & 0x3ff )		1067273	0		=			
ANR	1067301	Identifier	L		1067273	0					
ANR	1067302	CallExpression	LogL10toY ( p >> 14 & 0x3ff )		1067273	1					
ANR	1067303	Callee	LogL10toY		1067273	0					
ANR	1067304	Identifier	LogL10toY		1067273	0					
ANR	1067305	ArgumentList	p >> 14 & 0x3ff		1067273	1					
ANR	1067306	Argument	p >> 14 & 0x3ff		1067273	0					
ANR	1067307	BitAndExpression	p >> 14 & 0x3ff		1067273	0		&			
ANR	1067308	ShiftExpression	p >> 14		1067273	0		>>			
ANR	1067309	Identifier	p		1067273	0					
ANR	1067310	PrimaryExpression	14		1067273	1					
ANR	1067311	PrimaryExpression	0x3ff		1067273	1					
ANR	1067312	IfStatement	if ( L <= 0. )		1067273	3					
ANR	1067313	Condition	L <= 0.	935:5:25092:25098	1067273	0	True				
ANR	1067314	RelationalExpression	L <= 0.		1067273	0		<=			
ANR	1067315	Identifier	L		1067273	0					
ANR	1067316	PrimaryExpression	0.		1067273	1					
ANR	1067317	CompoundStatement		6:14:109:109	1067273	1					
ANR	1067318	ExpressionStatement	XYZ [ 0 ] = XYZ [ 1 ] = XYZ [ 2 ] = 0.	936:2:25105:25134	1067273	0	True				
ANR	1067319	AssignmentExpression	XYZ [ 0 ] = XYZ [ 1 ] = XYZ [ 2 ] = 0.		1067273	0		=			
ANR	1067320	ArrayIndexing	XYZ [ 0 ]		1067273	0					
ANR	1067321	Identifier	XYZ		1067273	0					
ANR	1067322	PrimaryExpression	0		1067273	1					
ANR	1067323	AssignmentExpression	XYZ [ 1 ] = XYZ [ 2 ] = 0.		1067273	1		=			
ANR	1067324	ArrayIndexing	XYZ [ 1 ]		1067273	0					
ANR	1067325	Identifier	XYZ		1067273	0					
ANR	1067326	PrimaryExpression	1		1067273	1					
ANR	1067327	AssignmentExpression	XYZ [ 2 ] = 0.		1067273	1		=			
ANR	1067328	ArrayIndexing	XYZ [ 2 ]		1067273	0					
ANR	1067329	Identifier	XYZ		1067273	0					
ANR	1067330	PrimaryExpression	2		1067273	1					
ANR	1067331	PrimaryExpression	0.		1067273	1					
ANR	1067332	ReturnStatement	return ;	937:2:25138:25144	1067273	1	True				
ANR	1067333	ExpressionStatement	Ce = p & 0x3fff	940:1:25174:25189	1067273	4	True				
ANR	1067334	AssignmentExpression	Ce = p & 0x3fff		1067273	0		=			
ANR	1067335	Identifier	Ce		1067273	0					
ANR	1067336	BitAndExpression	p & 0x3fff		1067273	1		&			
ANR	1067337	Identifier	p		1067273	0					
ANR	1067338	PrimaryExpression	0x3fff		1067273	1					
ANR	1067339	IfStatement	"if ( uv_decode ( & u , & v , Ce ) < 0 )"		1067273	5					
ANR	1067340	Condition	"uv_decode ( & u , & v , Ce ) < 0"	941:5:25196:25220	1067273	0	True				
ANR	1067341	RelationalExpression	"uv_decode ( & u , & v , Ce ) < 0"		1067273	0		<			
ANR	1067342	CallExpression	"uv_decode ( & u , & v , Ce )"		1067273	0					
ANR	1067343	Callee	uv_decode		1067273	0					
ANR	1067344	Identifier	uv_decode		1067273	0					
ANR	1067345	ArgumentList	& u		1067273	1					
ANR	1067346	Argument	& u		1067273	0					
ANR	1067347	UnaryOperationExpression	& u		1067273	0					
ANR	1067348	UnaryOperator	&		1067273	0					
ANR	1067349	Identifier	u		1067273	1					
ANR	1067350	Argument	& v		1067273	1					
ANR	1067351	UnaryOperationExpression	& v		1067273	0					
ANR	1067352	UnaryOperator	&		1067273	0					
ANR	1067353	Identifier	v		1067273	1					
ANR	1067354	Argument	Ce		1067273	2					
ANR	1067355	Identifier	Ce		1067273	0					
ANR	1067356	PrimaryExpression	0		1067273	1					
ANR	1067357	CompoundStatement		12:32:231:231	1067273	1					
ANR	1067358	ExpressionStatement	u = U_NEU	942:2:25227:25236	1067273	0	True				
ANR	1067359	AssignmentExpression	u = U_NEU		1067273	0		=			
ANR	1067360	Identifier	u		1067273	0					
ANR	1067361	Identifier	U_NEU		1067273	1					
ANR	1067362	ExpressionStatement	v = V_NEU	942:13:25238:25247	1067273	1	True				
ANR	1067363	AssignmentExpression	v = V_NEU		1067273	0		=			
ANR	1067364	Identifier	v		1067273	0					
ANR	1067365	Identifier	V_NEU		1067273	1					
ANR	1067366	ExpressionStatement	s = 1. / ( 6. * u - 16. * v + 12. )	944:1:25253:25280	1067273	6	True				
ANR	1067367	AssignmentExpression	s = 1. / ( 6. * u - 16. * v + 12. )		1067273	0		=			
ANR	1067368	Identifier	s		1067273	0					
ANR	1067369	MultiplicativeExpression	1. / ( 6. * u - 16. * v + 12. )		1067273	1		/			
ANR	1067370	PrimaryExpression	1.		1067273	0					
ANR	1067371	AdditiveExpression	6. * u - 16. * v + 12.		1067273	1		-			
ANR	1067372	MultiplicativeExpression	6. * u		1067273	0		*			
ANR	1067373	PrimaryExpression	6.		1067273	0					
ANR	1067374	Identifier	u		1067273	1					
ANR	1067375	AdditiveExpression	16. * v + 12.		1067273	1		+			
ANR	1067376	MultiplicativeExpression	16. * v		1067273	0		*			
ANR	1067377	PrimaryExpression	16.		1067273	0					
ANR	1067378	Identifier	v		1067273	1					
ANR	1067379	PrimaryExpression	12.		1067273	1					
ANR	1067380	ExpressionStatement	x = 9. * u * s	945:1:25283:25295	1067273	7	True				
ANR	1067381	AssignmentExpression	x = 9. * u * s		1067273	0		=			
ANR	1067382	Identifier	x		1067273	0					
ANR	1067383	MultiplicativeExpression	9. * u * s		1067273	1		*			
ANR	1067384	PrimaryExpression	9.		1067273	0					
ANR	1067385	MultiplicativeExpression	u * s		1067273	1		*			
ANR	1067386	Identifier	u		1067273	0					
ANR	1067387	Identifier	s		1067273	1					
ANR	1067388	ExpressionStatement	y = 4. * v * s	946:1:25298:25310	1067273	8	True				
ANR	1067389	AssignmentExpression	y = 4. * v * s		1067273	0		=			
ANR	1067390	Identifier	y		1067273	0					
ANR	1067391	MultiplicativeExpression	4. * v * s		1067273	1		*			
ANR	1067392	PrimaryExpression	4.		1067273	0					
ANR	1067393	MultiplicativeExpression	v * s		1067273	1		*			
ANR	1067394	Identifier	v		1067273	0					
ANR	1067395	Identifier	s		1067273	1					
ANR	1067396	ExpressionStatement	XYZ [ 0 ] = ( float ) ( x / y * L )	948:1:25339:25364	1067273	9	True				
ANR	1067397	AssignmentExpression	XYZ [ 0 ] = ( float ) ( x / y * L )		1067273	0		=			
ANR	1067398	ArrayIndexing	XYZ [ 0 ]		1067273	0					
ANR	1067399	Identifier	XYZ		1067273	0					
ANR	1067400	PrimaryExpression	0		1067273	1					
ANR	1067401	CastExpression	( float ) ( x / y * L )		1067273	1					
ANR	1067402	CastTarget	float		1067273	0					
ANR	1067403	MultiplicativeExpression	x / y * L		1067273	1		/			
ANR	1067404	Identifier	x		1067273	0					
ANR	1067405	MultiplicativeExpression	y * L		1067273	1		*			
ANR	1067406	Identifier	y		1067273	0					
ANR	1067407	Identifier	L		1067273	1					
ANR	1067408	ExpressionStatement	XYZ [ 1 ] = ( float ) L	949:1:25367:25384	1067273	10	True				
ANR	1067409	AssignmentExpression	XYZ [ 1 ] = ( float ) L		1067273	0		=			
ANR	1067410	ArrayIndexing	XYZ [ 1 ]		1067273	0					
ANR	1067411	Identifier	XYZ		1067273	0					
ANR	1067412	PrimaryExpression	1		1067273	1					
ANR	1067413	CastExpression	( float ) L		1067273	1					
ANR	1067414	CastTarget	float		1067273	0					
ANR	1067415	Identifier	L		1067273	1					
ANR	1067416	ExpressionStatement	XYZ [ 2 ] = ( float ) ( ( 1. - x - y ) / y * L )	950:1:25387:25419	1067273	11	True				
ANR	1067417	AssignmentExpression	XYZ [ 2 ] = ( float ) ( ( 1. - x - y ) / y * L )		1067273	0		=			
ANR	1067418	ArrayIndexing	XYZ [ 2 ]		1067273	0					
ANR	1067419	Identifier	XYZ		1067273	0					
ANR	1067420	PrimaryExpression	2		1067273	1					
ANR	1067421	CastExpression	( float ) ( ( 1. - x - y ) / y * L )		1067273	1					
ANR	1067422	CastTarget	float		1067273	0					
ANR	1067423	MultiplicativeExpression	( 1. - x - y ) / y * L		1067273	1		/			
ANR	1067424	AdditiveExpression	1. - x - y		1067273	0		-			
ANR	1067425	PrimaryExpression	1.		1067273	0					
ANR	1067426	AdditiveExpression	x - y		1067273	1		-			
ANR	1067427	Identifier	x		1067273	0					
ANR	1067428	Identifier	y		1067273	1					
ANR	1067429	MultiplicativeExpression	y * L		1067273	1		*			
ANR	1067430	Identifier	y		1067273	0					
ANR	1067431	Identifier	L		1067273	1					
ANR	1067432	ReturnType	void		1067273	1					
ANR	1067433	Identifier	LogLuv24toXYZ		1067273	2					
ANR	1067434	ParameterList	"uint32 p , float XYZ [ 3 ]"		1067273	3					
ANR	1067435	Parameter	uint32 p	929:14:24967:24974	1067273	0	True				
ANR	1067436	ParameterType	uint32		1067273	0					
ANR	1067437	Identifier	p		1067273	1					
ANR	1067438	Parameter	float XYZ [ 3 ]	929:24:24977:24988	1067273	1	True				
ANR	1067439	ParameterType	float [ 3 ]		1067273	0					
ANR	1067440	Identifier	XYZ		1067273	1					
ANR	1067441	CFGEntryNode	ENTRY		1067273		True				
ANR	1067442	CFGExitNode	EXIT		1067273		True				
ANR	1067443	Symbol	Ce		1067273						
ANR	1067444	Symbol	L		1067273						
ANR	1067445	Symbol	U_NEU		1067273						
ANR	1067446	Symbol	uv_decode		1067273						
ANR	1067447	Symbol	p		1067273						
ANR	1067448	Symbol	s		1067273						
ANR	1067449	Symbol	u		1067273						
ANR	1067450	Symbol	v		1067273						
ANR	1067451	Symbol	XYZ		1067273						
ANR	1067452	Symbol	x		1067273						
ANR	1067453	Symbol	LogL10toY		1067273						
ANR	1067454	Symbol	y		1067273						
ANR	1067455	Symbol	& u		1067273						
ANR	1067456	Symbol	* XYZ		1067273						
ANR	1067457	Symbol	& v		1067273						
ANR	1067458	Symbol	V_NEU		1067273						
ANR	1067459	Function	LogLuv24fromXYZ	956:0:25457:25930							
ANR	1067460	FunctionDef	"LogLuv24fromXYZ (float XYZ [ 3 ] , int em)"		1067459	0					
ANR	1067461	CompoundStatement		958:0:25502:25930	1067459	0					
ANR	1067462	IdentifierDeclStatement	"int Le , Ce ;"	959:1:25505:25515	1067459	0	True				
ANR	1067463	IdentifierDecl	Le		1067459	0					
ANR	1067464	IdentifierDeclType	int		1067459	0					
ANR	1067465	Identifier	Le		1067459	1					
ANR	1067466	IdentifierDecl	Ce		1067459	1					
ANR	1067467	IdentifierDeclType	int		1067459	0					
ANR	1067468	Identifier	Ce		1067459	1					
ANR	1067469	IdentifierDeclStatement	"double u , v , s ;"	960:1:25518:25532	1067459	1	True				
ANR	1067470	IdentifierDecl	u		1067459	0					
ANR	1067471	IdentifierDeclType	double		1067459	0					
ANR	1067472	Identifier	u		1067459	1					
ANR	1067473	IdentifierDecl	v		1067459	1					
ANR	1067474	IdentifierDeclType	double		1067459	0					
ANR	1067475	Identifier	v		1067459	1					
ANR	1067476	IdentifierDecl	s		1067459	2					
ANR	1067477	IdentifierDeclType	double		1067459	0					
ANR	1067478	Identifier	s		1067459	1					
ANR	1067479	ExpressionStatement	"Le = LogL10fromY ( XYZ [ 1 ] , em )"	962:1:25563:25591	1067459	2	True				
ANR	1067480	AssignmentExpression	"Le = LogL10fromY ( XYZ [ 1 ] , em )"		1067459	0		=			
ANR	1067481	Identifier	Le		1067459	0					
ANR	1067482	CallExpression	"LogL10fromY ( XYZ [ 1 ] , em )"		1067459	1					
ANR	1067483	Callee	LogL10fromY		1067459	0					
ANR	1067484	Identifier	LogL10fromY		1067459	0					
ANR	1067485	ArgumentList	XYZ [ 1 ]		1067459	1					
ANR	1067486	Argument	XYZ [ 1 ]		1067459	0					
ANR	1067487	ArrayIndexing	XYZ [ 1 ]		1067459	0					
ANR	1067488	Identifier	XYZ		1067459	0					
ANR	1067489	PrimaryExpression	1		1067459	1					
ANR	1067490	Argument	em		1067459	1					
ANR	1067491	Identifier	em		1067459	0					
ANR	1067492	ExpressionStatement	s = XYZ [ 0 ] + 15. * XYZ [ 1 ] + 3. * XYZ [ 2 ]	964:1:25618:25653	1067459	3	True				
ANR	1067493	AssignmentExpression	s = XYZ [ 0 ] + 15. * XYZ [ 1 ] + 3. * XYZ [ 2 ]		1067459	0		=			
ANR	1067494	Identifier	s		1067459	0					
ANR	1067495	AdditiveExpression	XYZ [ 0 ] + 15. * XYZ [ 1 ] + 3. * XYZ [ 2 ]		1067459	1		+			
ANR	1067496	ArrayIndexing	XYZ [ 0 ]		1067459	0					
ANR	1067497	Identifier	XYZ		1067459	0					
ANR	1067498	PrimaryExpression	0		1067459	1					
ANR	1067499	AdditiveExpression	15. * XYZ [ 1 ] + 3. * XYZ [ 2 ]		1067459	1		+			
ANR	1067500	MultiplicativeExpression	15. * XYZ [ 1 ]		1067459	0		*			
ANR	1067501	PrimaryExpression	15.		1067459	0					
ANR	1067502	ArrayIndexing	XYZ [ 1 ]		1067459	1					
ANR	1067503	Identifier	XYZ		1067459	0					
ANR	1067504	PrimaryExpression	1		1067459	1					
ANR	1067505	MultiplicativeExpression	3. * XYZ [ 2 ]		1067459	1		*			
ANR	1067506	PrimaryExpression	3.		1067459	0					
ANR	1067507	ArrayIndexing	XYZ [ 2 ]		1067459	1					
ANR	1067508	Identifier	XYZ		1067459	0					
ANR	1067509	PrimaryExpression	2		1067459	1					
ANR	1067510	IfStatement	if ( ! Le || s <= 0. )		1067459	4					
ANR	1067511	Condition	! Le || s <= 0.	965:5:25660:25673	1067459	0	True				
ANR	1067512	OrExpression	! Le || s <= 0.		1067459	0		||			
ANR	1067513	UnaryOperationExpression	! Le		1067459	0					
ANR	1067514	UnaryOperator	!		1067459	0					
ANR	1067515	Identifier	Le		1067459	1					
ANR	1067516	RelationalExpression	s <= 0.		1067459	1		<=			
ANR	1067517	Identifier	s		1067459	0					
ANR	1067518	PrimaryExpression	0.		1067459	1					
ANR	1067519	CompoundStatement		8:21:173:173	1067459	1					
ANR	1067520	ExpressionStatement	u = U_NEU	966:2:25680:25689	1067459	0	True				
ANR	1067521	AssignmentExpression	u = U_NEU		1067459	0		=			
ANR	1067522	Identifier	u		1067459	0					
ANR	1067523	Identifier	U_NEU		1067459	1					
ANR	1067524	ExpressionStatement	v = V_NEU	967:2:25693:25702	1067459	1	True				
ANR	1067525	AssignmentExpression	v = V_NEU		1067459	0		=			
ANR	1067526	Identifier	v		1067459	0					
ANR	1067527	Identifier	V_NEU		1067459	1					
ANR	1067528	ElseStatement	else		1067459	0					
ANR	1067529	CompoundStatement		11:8:209:209	1067459	0					
ANR	1067530	ExpressionStatement	u = 4. * XYZ [ 0 ] / s	969:2:25716:25733	1067459	0	True				
ANR	1067531	AssignmentExpression	u = 4. * XYZ [ 0 ] / s		1067459	0		=			
ANR	1067532	Identifier	u		1067459	0					
ANR	1067533	MultiplicativeExpression	4. * XYZ [ 0 ] / s		1067459	1		*			
ANR	1067534	PrimaryExpression	4.		1067459	0					
ANR	1067535	MultiplicativeExpression	XYZ [ 0 ] / s		1067459	1		/			
ANR	1067536	ArrayIndexing	XYZ [ 0 ]		1067459	0					
ANR	1067537	Identifier	XYZ		1067459	0					
ANR	1067538	PrimaryExpression	0		1067459	1					
ANR	1067539	Identifier	s		1067459	1					
ANR	1067540	ExpressionStatement	v = 9. * XYZ [ 1 ] / s	970:2:25737:25754	1067459	1	True				
ANR	1067541	AssignmentExpression	v = 9. * XYZ [ 1 ] / s		1067459	0		=			
ANR	1067542	Identifier	v		1067459	0					
ANR	1067543	MultiplicativeExpression	9. * XYZ [ 1 ] / s		1067459	1		*			
ANR	1067544	PrimaryExpression	9.		1067459	0					
ANR	1067545	MultiplicativeExpression	XYZ [ 1 ] / s		1067459	1		/			
ANR	1067546	ArrayIndexing	XYZ [ 1 ]		1067459	0					
ANR	1067547	Identifier	XYZ		1067459	0					
ANR	1067548	PrimaryExpression	1		1067459	1					
ANR	1067549	Identifier	s		1067459	1					
ANR	1067550	ExpressionStatement	"Ce = uv_encode ( u , v , em )"	972:1:25760:25784	1067459	5	True				
ANR	1067551	AssignmentExpression	"Ce = uv_encode ( u , v , em )"		1067459	0		=			
ANR	1067552	Identifier	Ce		1067459	0					
ANR	1067553	CallExpression	"uv_encode ( u , v , em )"		1067459	1					
ANR	1067554	Callee	uv_encode		1067459	0					
ANR	1067555	Identifier	uv_encode		1067459	0					
ANR	1067556	ArgumentList	u		1067459	1					
ANR	1067557	Argument	u		1067459	0					
ANR	1067558	Identifier	u		1067459	0					
ANR	1067559	Argument	v		1067459	1					
ANR	1067560	Identifier	v		1067459	0					
ANR	1067561	Argument	em		1067459	2					
ANR	1067562	Identifier	em		1067459	0					
ANR	1067563	IfStatement	if ( Ce < 0 )		1067459	6					
ANR	1067564	Condition	Ce < 0	973:5:25791:25796	1067459	0	True				
ANR	1067565	RelationalExpression	Ce < 0		1067459	0		<			
ANR	1067566	Identifier	Ce		1067459	0					
ANR	1067567	PrimaryExpression	0		1067459	1					
ANR	1067568	ExpressionStatement	"Ce = uv_encode ( U_NEU , V_NEU , SGILOGENCODE_NODITHER )"	974:2:25823:25874	1067459	1	True				
ANR	1067569	AssignmentExpression	"Ce = uv_encode ( U_NEU , V_NEU , SGILOGENCODE_NODITHER )"		1067459	0		=			
ANR	1067570	Identifier	Ce		1067459	0					
ANR	1067571	CallExpression	"uv_encode ( U_NEU , V_NEU , SGILOGENCODE_NODITHER )"		1067459	1					
ANR	1067572	Callee	uv_encode		1067459	0					
ANR	1067573	Identifier	uv_encode		1067459	0					
ANR	1067574	ArgumentList	U_NEU		1067459	1					
ANR	1067575	Argument	U_NEU		1067459	0					
ANR	1067576	Identifier	U_NEU		1067459	0					
ANR	1067577	Argument	V_NEU		1067459	1					
ANR	1067578	Identifier	V_NEU		1067459	0					
ANR	1067579	Argument	SGILOGENCODE_NODITHER		1067459	2					
ANR	1067580	Identifier	SGILOGENCODE_NODITHER		1067459	0					
ANR	1067581	ReturnStatement	return ( Le << 14 | Ce ) ;	976:1:25906:25928	1067459	7	True				
ANR	1067582	InclusiveOrExpression	Le << 14 | Ce		1067459	0		|			
ANR	1067583	ShiftExpression	Le << 14		1067459	0		<<			
ANR	1067584	Identifier	Le		1067459	0					
ANR	1067585	PrimaryExpression	14		1067459	1					
ANR	1067586	Identifier	Ce		1067459	1					
ANR	1067587	ReturnType	uint32		1067459	1					
ANR	1067588	Identifier	LogLuv24fromXYZ		1067459	2					
ANR	1067589	ParameterList	"float XYZ [ 3 ] , int em"		1067459	3					
ANR	1067590	Parameter	float XYZ [ 3 ]	957:16:25480:25491	1067459	0	True				
ANR	1067591	ParameterType	float [ 3 ]		1067459	0					
ANR	1067592	Identifier	XYZ		1067459	1					
ANR	1067593	Parameter	int em	957:30:25494:25499	1067459	1	True				
ANR	1067594	ParameterType	int		1067459	0					
ANR	1067595	Identifier	em		1067459	1					
ANR	1067596	CFGEntryNode	ENTRY		1067459		True				
ANR	1067597	CFGExitNode	EXIT		1067459		True				
ANR	1067598	Symbol	SGILOGENCODE_NODITHER		1067459						
ANR	1067599	Symbol	Ce		1067459						
ANR	1067600	Symbol	LogL10fromY		1067459						
ANR	1067601	Symbol	uv_encode		1067459						
ANR	1067602	Symbol	em		1067459						
ANR	1067603	Symbol	U_NEU		1067459						
ANR	1067604	Symbol	s		1067459						
ANR	1067605	Symbol	u		1067459						
ANR	1067606	Symbol	v		1067459						
ANR	1067607	Symbol	XYZ		1067459						
ANR	1067608	Symbol	Le		1067459						
ANR	1067609	Symbol	* XYZ		1067459						
ANR	1067610	Symbol	V_NEU		1067459						
ANR	1067611	Function	Luv24toXYZ	979:0:25933:26134							
ANR	1067612	FunctionDef	"Luv24toXYZ (LogLuvState * sp , uint8 * op , tmsize_t n)"		1067611	0					
ANR	1067613	CompoundStatement		981:0:25996:26134	1067611	0					
ANR	1067614	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	982:1:25999:26031	1067611	0	True				
ANR	1067615	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		1067611	0					
ANR	1067616	IdentifierDeclType	uint32 *		1067611	0					
ANR	1067617	Identifier	luv		1067611	1					
ANR	1067618	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		1067611	2		=			
ANR	1067619	Identifier	luv		1067611	0					
ANR	1067620	CastExpression	( uint32 * ) sp -> tbuf		1067611	1					
ANR	1067621	CastTarget	uint32 *		1067611	0					
ANR	1067622	PtrMemberAccess	sp -> tbuf		1067611	1					
ANR	1067623	Identifier	sp		1067611	0					
ANR	1067624	Identifier	tbuf		1067611	1					
ANR	1067625	IdentifierDeclStatement	float * xyz = ( float * ) op ;	983:1:26036:26060	1067611	1	True				
ANR	1067626	IdentifierDecl	* xyz = ( float * ) op		1067611	0					
ANR	1067627	IdentifierDeclType	float *		1067611	0					
ANR	1067628	Identifier	xyz		1067611	1					
ANR	1067629	AssignmentExpression	* xyz = ( float * ) op		1067611	2		=			
ANR	1067630	Identifier	xyz		1067611	0					
ANR	1067631	CastExpression	( float * ) op		1067611	1					
ANR	1067632	CastTarget	float *		1067611	0					
ANR	1067633	Identifier	op		1067611	1					
ANR	1067634	WhileStatement	while ( n -- > 0 )		1067611	2					
ANR	1067635	Condition	n -- > 0	985:8:26071:26077	1067611	0	True				
ANR	1067636	RelationalExpression	n -- > 0		1067611	0		>			
ANR	1067637	PostIncDecOperationExpression	n --		1067611	0					
ANR	1067638	Identifier	n		1067611	0					
ANR	1067639	IncDec	--		1067611	1					
ANR	1067640	PrimaryExpression	0		1067611	1					
ANR	1067641	CompoundStatement		5:17:83:83	1067611	1					
ANR	1067642	ExpressionStatement	"LogLuv24toXYZ ( * luv , xyz )"	986:2:26084:26108	1067611	0	True				
ANR	1067643	CallExpression	"LogLuv24toXYZ ( * luv , xyz )"		1067611	0					
ANR	1067644	Callee	LogLuv24toXYZ		1067611	0					
ANR	1067645	Identifier	LogLuv24toXYZ		1067611	0					
ANR	1067646	ArgumentList	* luv		1067611	1					
ANR	1067647	Argument	* luv		1067611	0					
ANR	1067648	UnaryOperationExpression	* luv		1067611	0					
ANR	1067649	UnaryOperator	*		1067611	0					
ANR	1067650	Identifier	luv		1067611	1					
ANR	1067651	Argument	xyz		1067611	1					
ANR	1067652	Identifier	xyz		1067611	0					
ANR	1067653	ExpressionStatement	xyz += 3	987:2:26112:26120	1067611	1	True				
ANR	1067654	AssignmentExpression	xyz += 3		1067611	0		+=			
ANR	1067655	Identifier	xyz		1067611	0					
ANR	1067656	PrimaryExpression	3		1067611	1					
ANR	1067657	ExpressionStatement	luv ++	988:2:26124:26129	1067611	2	True				
ANR	1067658	PostIncDecOperationExpression	luv ++		1067611	0					
ANR	1067659	Identifier	luv		1067611	0					
ANR	1067660	IncDec	++		1067611	1					
ANR	1067661	ReturnType	static void		1067611	1					
ANR	1067662	Identifier	Luv24toXYZ		1067611	2					
ANR	1067663	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		1067611	3					
ANR	1067664	Parameter	LogLuvState * sp	980:11:25956:25970	1067611	0	True				
ANR	1067665	ParameterType	LogLuvState *		1067611	0					
ANR	1067666	Identifier	sp		1067611	1					
ANR	1067667	Parameter	uint8 * op	980:28:25973:25981	1067611	1	True				
ANR	1067668	ParameterType	uint8 *		1067611	0					
ANR	1067669	Identifier	op		1067611	1					
ANR	1067670	Parameter	tmsize_t n	980:39:25984:25993	1067611	2	True				
ANR	1067671	ParameterType	tmsize_t		1067611	0					
ANR	1067672	Identifier	n		1067611	1					
ANR	1067673	CFGEntryNode	ENTRY		1067611		True				
ANR	1067674	CFGExitNode	EXIT		1067611		True				
ANR	1067675	Symbol	* sp		1067611						
ANR	1067676	Symbol	op		1067611						
ANR	1067677	Symbol	* luv		1067611						
ANR	1067678	Symbol	xyz		1067611						
ANR	1067679	Symbol	sp -> tbuf		1067611						
ANR	1067680	Symbol	luv		1067611						
ANR	1067681	Symbol	sp		1067611						
ANR	1067682	Symbol	n		1067611						
ANR	1067683	Function	Luv24toLuv48	992:0:26137:26514							
ANR	1067684	FunctionDef	"Luv24toLuv48 (LogLuvState * sp , uint8 * op , tmsize_t n)"		1067683	0					
ANR	1067685	CompoundStatement		994:0:26202:26514	1067683	0					
ANR	1067686	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	995:1:26205:26237	1067683	0	True				
ANR	1067687	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		1067683	0					
ANR	1067688	IdentifierDeclType	uint32 *		1067683	0					
ANR	1067689	Identifier	luv		1067683	1					
ANR	1067690	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		1067683	2		=			
ANR	1067691	Identifier	luv		1067683	0					
ANR	1067692	CastExpression	( uint32 * ) sp -> tbuf		1067683	1					
ANR	1067693	CastTarget	uint32 *		1067683	0					
ANR	1067694	PtrMemberAccess	sp -> tbuf		1067683	1					
ANR	1067695	Identifier	sp		1067683	0					
ANR	1067696	Identifier	tbuf		1067683	1					
ANR	1067697	IdentifierDeclStatement	int16 * luv3 = ( int16 * ) op ;	996:1:26242:26267	1067683	1	True				
ANR	1067698	IdentifierDecl	* luv3 = ( int16 * ) op		1067683	0					
ANR	1067699	IdentifierDeclType	int16 *		1067683	0					
ANR	1067700	Identifier	luv3		1067683	1					
ANR	1067701	AssignmentExpression	* luv3 = ( int16 * ) op		1067683	2		=			
ANR	1067702	Identifier	luv3		1067683	0					
ANR	1067703	CastExpression	( int16 * ) op		1067683	1					
ANR	1067704	CastTarget	int16 *		1067683	0					
ANR	1067705	Identifier	op		1067683	1					
ANR	1067706	WhileStatement	while ( n -- > 0 )		1067683	2					
ANR	1067707	Condition	n -- > 0	998:8:26278:26284	1067683	0	True				
ANR	1067708	RelationalExpression	n -- > 0		1067683	0		>			
ANR	1067709	PostIncDecOperationExpression	n --		1067683	0					
ANR	1067710	Identifier	n		1067683	0					
ANR	1067711	IncDec	--		1067683	1					
ANR	1067712	PrimaryExpression	0		1067683	1					
ANR	1067713	CompoundStatement		6:2:88:99	1067683	1					
ANR	1067714	IdentifierDeclStatement	"double u , v ;"	999:2:26291:26302	1067683	0	True				
ANR	1067715	IdentifierDecl	u		1067683	0					
ANR	1067716	IdentifierDeclType	double		1067683	0					
ANR	1067717	Identifier	u		1067683	1					
ANR	1067718	IdentifierDecl	v		1067683	1					
ANR	1067719	IdentifierDeclType	double		1067683	0					
ANR	1067720	Identifier	v		1067683	1					
ANR	1067721	ExpressionStatement	* luv3 ++ = ( int16 ) ( ( * luv >> 12 & 0xffd ) + 13314 )	1001:2:26307:26354	1067683	1	True				
ANR	1067722	AssignmentExpression	* luv3 ++ = ( int16 ) ( ( * luv >> 12 & 0xffd ) + 13314 )		1067683	0		=			
ANR	1067723	UnaryOperationExpression	* luv3 ++		1067683	0					
ANR	1067724	UnaryOperator	*		1067683	0					
ANR	1067725	PostIncDecOperationExpression	luv3 ++		1067683	1					
ANR	1067726	Identifier	luv3		1067683	0					
ANR	1067727	IncDec	++		1067683	1					
ANR	1067728	CastExpression	( int16 ) ( ( * luv >> 12 & 0xffd ) + 13314 )		1067683	1					
ANR	1067729	CastTarget	int16		1067683	0					
ANR	1067730	AdditiveExpression	( * luv >> 12 & 0xffd ) + 13314		1067683	1		+			
ANR	1067731	BitAndExpression	* luv >> 12 & 0xffd		1067683	0		&			
ANR	1067732	ShiftExpression	* luv >> 12		1067683	0		>>			
ANR	1067733	UnaryOperationExpression	* luv		1067683	0					
ANR	1067734	UnaryOperator	*		1067683	0					
ANR	1067735	Identifier	luv		1067683	1					
ANR	1067736	PrimaryExpression	12		1067683	1					
ANR	1067737	PrimaryExpression	0xffd		1067683	1					
ANR	1067738	PrimaryExpression	13314		1067683	1					
ANR	1067739	IfStatement	"if ( uv_decode ( & u , & v , * luv & 0x3fff ) < 0 )"		1067683	2					
ANR	1067740	Condition	"uv_decode ( & u , & v , * luv & 0x3fff ) < 0"	1002:6:26362:26395	1067683	0	True				
ANR	1067741	RelationalExpression	"uv_decode ( & u , & v , * luv & 0x3fff ) < 0"		1067683	0		<			
ANR	1067742	CallExpression	"uv_decode ( & u , & v , * luv & 0x3fff )"		1067683	0					
ANR	1067743	Callee	uv_decode		1067683	0					
ANR	1067744	Identifier	uv_decode		1067683	0					
ANR	1067745	ArgumentList	& u		1067683	1					
ANR	1067746	Argument	& u		1067683	0					
ANR	1067747	UnaryOperationExpression	& u		1067683	0					
ANR	1067748	UnaryOperator	&		1067683	0					
ANR	1067749	Identifier	u		1067683	1					
ANR	1067750	Argument	& v		1067683	1					
ANR	1067751	UnaryOperationExpression	& v		1067683	0					
ANR	1067752	UnaryOperator	&		1067683	0					
ANR	1067753	Identifier	v		1067683	1					
ANR	1067754	Argument	* luv & 0x3fff		1067683	2					
ANR	1067755	BitAndExpression	* luv & 0x3fff		1067683	0		&			
ANR	1067756	UnaryOperationExpression	* luv		1067683	0					
ANR	1067757	UnaryOperator	*		1067683	0					
ANR	1067758	Identifier	luv		1067683	1					
ANR	1067759	PrimaryExpression	0x3fff		1067683	1					
ANR	1067760	PrimaryExpression	0		1067683	1					
ANR	1067761	CompoundStatement		9:42:195:195	1067683	1					
ANR	1067762	ExpressionStatement	u = U_NEU	1003:3:26403:26412	1067683	0	True				
ANR	1067763	AssignmentExpression	u = U_NEU		1067683	0		=			
ANR	1067764	Identifier	u		1067683	0					
ANR	1067765	Identifier	U_NEU		1067683	1					
ANR	1067766	ExpressionStatement	v = V_NEU	1004:3:26417:26426	1067683	1	True				
ANR	1067767	AssignmentExpression	v = V_NEU		1067683	0		=			
ANR	1067768	Identifier	v		1067683	0					
ANR	1067769	Identifier	V_NEU		1067683	1					
ANR	1067770	ExpressionStatement	* luv3 ++ = ( int16 ) ( u * ( 1L << 15 ) )	1006:2:26434:26465	1067683	3	True				
ANR	1067771	AssignmentExpression	* luv3 ++ = ( int16 ) ( u * ( 1L << 15 ) )		1067683	0		=			
ANR	1067772	UnaryOperationExpression	* luv3 ++		1067683	0					
ANR	1067773	UnaryOperator	*		1067683	0					
ANR	1067774	PostIncDecOperationExpression	luv3 ++		1067683	1					
ANR	1067775	Identifier	luv3		1067683	0					
ANR	1067776	IncDec	++		1067683	1					
ANR	1067777	CastExpression	( int16 ) ( u * ( 1L << 15 ) )		1067683	1					
ANR	1067778	CastTarget	int16		1067683	0					
ANR	1067779	MultiplicativeExpression	u * ( 1L << 15 )		1067683	1		*			
ANR	1067780	Identifier	u		1067683	0					
ANR	1067781	ShiftExpression	1L << 15		1067683	1		<<			
ANR	1067782	PrimaryExpression	1L		1067683	0					
ANR	1067783	PrimaryExpression	15		1067683	1					
ANR	1067784	ExpressionStatement	* luv3 ++ = ( int16 ) ( v * ( 1L << 15 ) )	1007:2:26469:26500	1067683	4	True				
ANR	1067785	AssignmentExpression	* luv3 ++ = ( int16 ) ( v * ( 1L << 15 ) )		1067683	0		=			
ANR	1067786	UnaryOperationExpression	* luv3 ++		1067683	0					
ANR	1067787	UnaryOperator	*		1067683	0					
ANR	1067788	PostIncDecOperationExpression	luv3 ++		1067683	1					
ANR	1067789	Identifier	luv3		1067683	0					
ANR	1067790	IncDec	++		1067683	1					
ANR	1067791	CastExpression	( int16 ) ( v * ( 1L << 15 ) )		1067683	1					
ANR	1067792	CastTarget	int16		1067683	0					
ANR	1067793	MultiplicativeExpression	v * ( 1L << 15 )		1067683	1		*			
ANR	1067794	Identifier	v		1067683	0					
ANR	1067795	ShiftExpression	1L << 15		1067683	1		<<			
ANR	1067796	PrimaryExpression	1L		1067683	0					
ANR	1067797	PrimaryExpression	15		1067683	1					
ANR	1067798	ExpressionStatement	luv ++	1008:2:26504:26509	1067683	5	True				
ANR	1067799	PostIncDecOperationExpression	luv ++		1067683	0					
ANR	1067800	Identifier	luv		1067683	0					
ANR	1067801	IncDec	++		1067683	1					
ANR	1067802	ReturnType	static void		1067683	1					
ANR	1067803	Identifier	Luv24toLuv48		1067683	2					
ANR	1067804	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		1067683	3					
ANR	1067805	Parameter	LogLuvState * sp	993:13:26162:26176	1067683	0	True				
ANR	1067806	ParameterType	LogLuvState *		1067683	0					
ANR	1067807	Identifier	sp		1067683	1					
ANR	1067808	Parameter	uint8 * op	993:30:26179:26187	1067683	1	True				
ANR	1067809	ParameterType	uint8 *		1067683	0					
ANR	1067810	Identifier	op		1067683	1					
ANR	1067811	Parameter	tmsize_t n	993:41:26190:26199	1067683	2	True				
ANR	1067812	ParameterType	tmsize_t		1067683	0					
ANR	1067813	Identifier	n		1067683	1					
ANR	1067814	CFGEntryNode	ENTRY		1067683		True				
ANR	1067815	CFGExitNode	EXIT		1067683		True				
ANR	1067816	Symbol	* sp		1067683						
ANR	1067817	Symbol	op		1067683						
ANR	1067818	Symbol	luv		1067683						
ANR	1067819	Symbol	n		1067683						
ANR	1067820	Symbol	U_NEU		1067683						
ANR	1067821	Symbol	uv_decode		1067683						
ANR	1067822	Symbol	luv3		1067683						
ANR	1067823	Symbol	u		1067683						
ANR	1067824	Symbol	v		1067683						
ANR	1067825	Symbol	* luv		1067683						
ANR	1067826	Symbol	sp -> tbuf		1067683						
ANR	1067827	Symbol	* luv3 ++		1067683						
ANR	1067828	Symbol	& u		1067683						
ANR	1067829	Symbol	& v		1067683						
ANR	1067830	Symbol	sp		1067683						
ANR	1067831	Symbol	V_NEU		1067683						
ANR	1067832	Function	Luv24toRGB	1012:0:26517:26752							
ANR	1067833	FunctionDef	"Luv24toRGB (LogLuvState * sp , uint8 * op , tmsize_t n)"		1067832	0					
ANR	1067834	CompoundStatement		1014:0:26580:26752	1067832	0					
ANR	1067835	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1015:1:26583:26615	1067832	0	True				
ANR	1067836	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		1067832	0					
ANR	1067837	IdentifierDeclType	uint32 *		1067832	0					
ANR	1067838	Identifier	luv		1067832	1					
ANR	1067839	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		1067832	2		=			
ANR	1067840	Identifier	luv		1067832	0					
ANR	1067841	CastExpression	( uint32 * ) sp -> tbuf		1067832	1					
ANR	1067842	CastTarget	uint32 *		1067832	0					
ANR	1067843	PtrMemberAccess	sp -> tbuf		1067832	1					
ANR	1067844	Identifier	sp		1067832	0					
ANR	1067845	Identifier	tbuf		1067832	1					
ANR	1067846	IdentifierDeclStatement	uint8 * rgb = ( uint8 * ) op ;	1016:1:26620:26644	1067832	1	True				
ANR	1067847	IdentifierDecl	* rgb = ( uint8 * ) op		1067832	0					
ANR	1067848	IdentifierDeclType	uint8 *		1067832	0					
ANR	1067849	Identifier	rgb		1067832	1					
ANR	1067850	AssignmentExpression	* rgb = ( uint8 * ) op		1067832	2		=			
ANR	1067851	Identifier	rgb		1067832	0					
ANR	1067852	CastExpression	( uint8 * ) op		1067832	1					
ANR	1067853	CastTarget	uint8 *		1067832	0					
ANR	1067854	Identifier	op		1067832	1					
ANR	1067855	WhileStatement	while ( n -- > 0 )		1067832	2					
ANR	1067856	Condition	n -- > 0	1018:8:26655:26661	1067832	0	True				
ANR	1067857	RelationalExpression	n -- > 0		1067832	0		>			
ANR	1067858	PostIncDecOperationExpression	n --		1067832	0					
ANR	1067859	Identifier	n		1067832	0					
ANR	1067860	IncDec	--		1067832	1					
ANR	1067861	PrimaryExpression	0		1067832	1					
ANR	1067862	CompoundStatement		6:2:87:99	1067832	1					
ANR	1067863	IdentifierDeclStatement	float xyz [ 3 ] ;	1019:2:26668:26680	1067832	0	True				
ANR	1067864	IdentifierDecl	xyz [ 3 ]		1067832	0					
ANR	1067865	IdentifierDeclType	float [ 3 ]		1067832	0					
ANR	1067866	Identifier	xyz		1067832	1					
ANR	1067867	PrimaryExpression	3		1067832	2					
ANR	1067868	ExpressionStatement	"LogLuv24toXYZ ( * luv ++ , xyz )"	1021:2:26685:26711	1067832	1	True				
ANR	1067869	CallExpression	"LogLuv24toXYZ ( * luv ++ , xyz )"		1067832	0					
ANR	1067870	Callee	LogLuv24toXYZ		1067832	0					
ANR	1067871	Identifier	LogLuv24toXYZ		1067832	0					
ANR	1067872	ArgumentList	* luv ++		1067832	1					
ANR	1067873	Argument	* luv ++		1067832	0					
ANR	1067874	UnaryOperationExpression	* luv ++		1067832	0					
ANR	1067875	UnaryOperator	*		1067832	0					
ANR	1067876	PostIncDecOperationExpression	luv ++		1067832	1					
ANR	1067877	Identifier	luv		1067832	0					
ANR	1067878	IncDec	++		1067832	1					
ANR	1067879	Argument	xyz		1067832	1					
ANR	1067880	Identifier	xyz		1067832	0					
ANR	1067881	ExpressionStatement	"XYZtoRGB24 ( xyz , rgb )"	1022:2:26715:26735	1067832	2	True				
ANR	1067882	CallExpression	"XYZtoRGB24 ( xyz , rgb )"		1067832	0					
ANR	1067883	Callee	XYZtoRGB24		1067832	0					
ANR	1067884	Identifier	XYZtoRGB24		1067832	0					
ANR	1067885	ArgumentList	xyz		1067832	1					
ANR	1067886	Argument	xyz		1067832	0					
ANR	1067887	Identifier	xyz		1067832	0					
ANR	1067888	Argument	rgb		1067832	1					
ANR	1067889	Identifier	rgb		1067832	0					
ANR	1067890	ExpressionStatement	rgb += 3	1023:2:26739:26747	1067832	3	True				
ANR	1067891	AssignmentExpression	rgb += 3		1067832	0		+=			
ANR	1067892	Identifier	rgb		1067832	0					
ANR	1067893	PrimaryExpression	3		1067832	1					
ANR	1067894	ReturnType	static void		1067832	1					
ANR	1067895	Identifier	Luv24toRGB		1067832	2					
ANR	1067896	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		1067832	3					
ANR	1067897	Parameter	LogLuvState * sp	1013:11:26540:26554	1067832	0	True				
ANR	1067898	ParameterType	LogLuvState *		1067832	0					
ANR	1067899	Identifier	sp		1067832	1					
ANR	1067900	Parameter	uint8 * op	1013:28:26557:26565	1067832	1	True				
ANR	1067901	ParameterType	uint8 *		1067832	0					
ANR	1067902	Identifier	op		1067832	1					
ANR	1067903	Parameter	tmsize_t n	1013:39:26568:26577	1067832	2	True				
ANR	1067904	ParameterType	tmsize_t		1067832	0					
ANR	1067905	Identifier	n		1067832	1					
ANR	1067906	CFGEntryNode	ENTRY		1067832		True				
ANR	1067907	CFGExitNode	EXIT		1067832		True				
ANR	1067908	Symbol	* sp		1067832						
ANR	1067909	Symbol	op		1067832						
ANR	1067910	Symbol	* luv ++		1067832						
ANR	1067911	Symbol	xyz		1067832						
ANR	1067912	Symbol	sp -> tbuf		1067832						
ANR	1067913	Symbol	luv		1067832						
ANR	1067914	Symbol	rgb		1067832						
ANR	1067915	Symbol	sp		1067832						
ANR	1067916	Symbol	n		1067832						
ANR	1067917	Function	Luv24fromXYZ	1027:0:26755:26971							
ANR	1067918	FunctionDef	"Luv24fromXYZ (LogLuvState * sp , uint8 * op , tmsize_t n)"		1067917	0					
ANR	1067919	CompoundStatement		1029:0:26820:26971	1067917	0					
ANR	1067920	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1030:1:26823:26855	1067917	0	True				
ANR	1067921	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		1067917	0					
ANR	1067922	IdentifierDeclType	uint32 *		1067917	0					
ANR	1067923	Identifier	luv		1067917	1					
ANR	1067924	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		1067917	2		=			
ANR	1067925	Identifier	luv		1067917	0					
ANR	1067926	CastExpression	( uint32 * ) sp -> tbuf		1067917	1					
ANR	1067927	CastTarget	uint32 *		1067917	0					
ANR	1067928	PtrMemberAccess	sp -> tbuf		1067917	1					
ANR	1067929	Identifier	sp		1067917	0					
ANR	1067930	Identifier	tbuf		1067917	1					
ANR	1067931	IdentifierDeclStatement	float * xyz = ( float * ) op ;	1031:1:26860:26884	1067917	1	True				
ANR	1067932	IdentifierDecl	* xyz = ( float * ) op		1067917	0					
ANR	1067933	IdentifierDeclType	float *		1067917	0					
ANR	1067934	Identifier	xyz		1067917	1					
ANR	1067935	AssignmentExpression	* xyz = ( float * ) op		1067917	2		=			
ANR	1067936	Identifier	xyz		1067917	0					
ANR	1067937	CastExpression	( float * ) op		1067917	1					
ANR	1067938	CastTarget	float *		1067917	0					
ANR	1067939	Identifier	op		1067917	1					
ANR	1067940	WhileStatement	while ( n -- > 0 )		1067917	2					
ANR	1067941	Condition	n -- > 0	1033:8:26895:26901	1067917	0	True				
ANR	1067942	RelationalExpression	n -- > 0		1067917	0		>			
ANR	1067943	PostIncDecOperationExpression	n --		1067917	0					
ANR	1067944	Identifier	n		1067917	0					
ANR	1067945	IncDec	--		1067917	1					
ANR	1067946	PrimaryExpression	0		1067917	1					
ANR	1067947	CompoundStatement		5:17:83:83	1067917	1					
ANR	1067948	ExpressionStatement	"* luv ++ = LogLuv24fromXYZ ( xyz , sp -> encode_meth )"	1034:2:26908:26954	1067917	0	True				
ANR	1067949	AssignmentExpression	"* luv ++ = LogLuv24fromXYZ ( xyz , sp -> encode_meth )"		1067917	0		=			
ANR	1067950	UnaryOperationExpression	* luv ++		1067917	0					
ANR	1067951	UnaryOperator	*		1067917	0					
ANR	1067952	PostIncDecOperationExpression	luv ++		1067917	1					
ANR	1067953	Identifier	luv		1067917	0					
ANR	1067954	IncDec	++		1067917	1					
ANR	1067955	CallExpression	"LogLuv24fromXYZ ( xyz , sp -> encode_meth )"		1067917	1					
ANR	1067956	Callee	LogLuv24fromXYZ		1067917	0					
ANR	1067957	Identifier	LogLuv24fromXYZ		1067917	0					
ANR	1067958	ArgumentList	xyz		1067917	1					
ANR	1067959	Argument	xyz		1067917	0					
ANR	1067960	Identifier	xyz		1067917	0					
ANR	1067961	Argument	sp -> encode_meth		1067917	1					
ANR	1067962	PtrMemberAccess	sp -> encode_meth		1067917	0					
ANR	1067963	Identifier	sp		1067917	0					
ANR	1067964	Identifier	encode_meth		1067917	1					
ANR	1067965	ExpressionStatement	xyz += 3	1035:2:26958:26966	1067917	1	True				
ANR	1067966	AssignmentExpression	xyz += 3		1067917	0		+=			
ANR	1067967	Identifier	xyz		1067917	0					
ANR	1067968	PrimaryExpression	3		1067917	1					
ANR	1067969	ReturnType	static void		1067917	1					
ANR	1067970	Identifier	Luv24fromXYZ		1067917	2					
ANR	1067971	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		1067917	3					
ANR	1067972	Parameter	LogLuvState * sp	1028:13:26780:26794	1067917	0	True				
ANR	1067973	ParameterType	LogLuvState *		1067917	0					
ANR	1067974	Identifier	sp		1067917	1					
ANR	1067975	Parameter	uint8 * op	1028:30:26797:26805	1067917	1	True				
ANR	1067976	ParameterType	uint8 *		1067917	0					
ANR	1067977	Identifier	op		1067917	1					
ANR	1067978	Parameter	tmsize_t n	1028:41:26808:26817	1067917	2	True				
ANR	1067979	ParameterType	tmsize_t		1067917	0					
ANR	1067980	Identifier	n		1067917	1					
ANR	1067981	CFGEntryNode	ENTRY		1067917		True				
ANR	1067982	CFGExitNode	EXIT		1067917		True				
ANR	1067983	Symbol	* sp		1067917						
ANR	1067984	Symbol	op		1067917						
ANR	1067985	Symbol	* luv ++		1067917						
ANR	1067986	Symbol	LogLuv24fromXYZ		1067917						
ANR	1067987	Symbol	xyz		1067917						
ANR	1067988	Symbol	sp -> tbuf		1067917						
ANR	1067989	Symbol	sp -> encode_meth		1067917						
ANR	1067990	Symbol	luv		1067917						
ANR	1067991	Symbol	sp		1067917						
ANR	1067992	Symbol	n		1067917						
ANR	1067993	Function	Luv24fromLuv48	1039:0:26974:27599							
ANR	1067994	FunctionDef	"Luv24fromLuv48 (LogLuvState * sp , uint8 * op , tmsize_t n)"		1067993	0					
ANR	1067995	CompoundStatement		1041:0:27041:27599	1067993	0					
ANR	1067996	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1042:1:27044:27076	1067993	0	True				
ANR	1067997	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		1067993	0					
ANR	1067998	IdentifierDeclType	uint32 *		1067993	0					
ANR	1067999	Identifier	luv		1067993	1					
ANR	1068000	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		1067993	2		=			
ANR	1068001	Identifier	luv		1067993	0					
ANR	1068002	CastExpression	( uint32 * ) sp -> tbuf		1067993	1					
ANR	1068003	CastTarget	uint32 *		1067993	0					
ANR	1068004	PtrMemberAccess	sp -> tbuf		1067993	1					
ANR	1068005	Identifier	sp		1067993	0					
ANR	1068006	Identifier	tbuf		1067993	1					
ANR	1068007	IdentifierDeclStatement	int16 * luv3 = ( int16 * ) op ;	1043:1:27081:27106	1067993	1	True				
ANR	1068008	IdentifierDecl	* luv3 = ( int16 * ) op		1067993	0					
ANR	1068009	IdentifierDeclType	int16 *		1067993	0					
ANR	1068010	Identifier	luv3		1067993	1					
ANR	1068011	AssignmentExpression	* luv3 = ( int16 * ) op		1067993	2		=			
ANR	1068012	Identifier	luv3		1067993	0					
ANR	1068013	CastExpression	( int16 * ) op		1067993	1					
ANR	1068014	CastTarget	int16 *		1067993	0					
ANR	1068015	Identifier	op		1067993	1					
ANR	1068016	WhileStatement	while ( n -- > 0 )		1067993	2					
ANR	1068017	Condition	n -- > 0	1045:8:27117:27123	1067993	0	True				
ANR	1068018	RelationalExpression	n -- > 0		1067993	0		>			
ANR	1068019	PostIncDecOperationExpression	n --		1067993	0					
ANR	1068020	Identifier	n		1067993	0					
ANR	1068021	IncDec	--		1067993	1					
ANR	1068022	PrimaryExpression	0		1067993	1					
ANR	1068023	CompoundStatement		6:2:88:98	1067993	1					
ANR	1068024	IdentifierDeclStatement	"int Le , Ce ;"	1046:2:27130:27140	1067993	0	True				
ANR	1068025	IdentifierDecl	Le		1067993	0					
ANR	1068026	IdentifierDeclType	int		1067993	0					
ANR	1068027	Identifier	Le		1067993	1					
ANR	1068028	IdentifierDecl	Ce		1067993	1					
ANR	1068029	IdentifierDeclType	int		1067993	0					
ANR	1068030	Identifier	Ce		1067993	1					
ANR	1068031	IfStatement	if ( luv3 [ 0 ] <= 0 )		1067993	1					
ANR	1068032	Condition	luv3 [ 0 ] <= 0	1048:6:27149:27160	1067993	0	True				
ANR	1068033	RelationalExpression	luv3 [ 0 ] <= 0		1067993	0		<=			
ANR	1068034	ArrayIndexing	luv3 [ 0 ]		1067993	0					
ANR	1068035	Identifier	luv3		1067993	0					
ANR	1068036	PrimaryExpression	0		1067993	1					
ANR	1068037	PrimaryExpression	0		1067993	1					
ANR	1068038	ExpressionStatement	Le = 0	1049:3:27166:27172	1067993	1	True				
ANR	1068039	AssignmentExpression	Le = 0		1067993	0		=			
ANR	1068040	Identifier	Le		1067993	0					
ANR	1068041	PrimaryExpression	0		1067993	1					
ANR	1068042	ElseStatement	else		1067993	0					
ANR	1068043	IfStatement	if ( luv3 [ 0 ] >= ( 1 << 12 ) + 3314 )		1067993	0					
ANR	1068044	Condition	luv3 [ 0 ] >= ( 1 << 12 ) + 3314	1050:11:27185:27207	1067993	0	True				
ANR	1068045	RelationalExpression	luv3 [ 0 ] >= ( 1 << 12 ) + 3314		1067993	0		>=			
ANR	1068046	ArrayIndexing	luv3 [ 0 ]		1067993	0					
ANR	1068047	Identifier	luv3		1067993	0					
ANR	1068048	PrimaryExpression	0		1067993	1					
ANR	1068049	AdditiveExpression	( 1 << 12 ) + 3314		1067993	1		+			
ANR	1068050	ShiftExpression	1 << 12		1067993	0		<<			
ANR	1068051	PrimaryExpression	1		1067993	0					
ANR	1068052	PrimaryExpression	12		1067993	1					
ANR	1068053	PrimaryExpression	3314		1067993	1					
ANR	1068054	ExpressionStatement	Le = ( 1 << 10 ) - 1	1051:3:27213:27229	1067993	1	True				
ANR	1068055	AssignmentExpression	Le = ( 1 << 10 ) - 1		1067993	0		=			
ANR	1068056	Identifier	Le		1067993	0					
ANR	1068057	AdditiveExpression	( 1 << 10 ) - 1		1067993	1		-			
ANR	1068058	ShiftExpression	1 << 10		1067993	0		<<			
ANR	1068059	PrimaryExpression	1		1067993	0					
ANR	1068060	PrimaryExpression	10		1067993	1					
ANR	1068061	PrimaryExpression	1		1067993	1					
ANR	1068062	ElseStatement	else		1067993	0					
ANR	1068063	IfStatement	if ( sp -> encode_meth == SGILOGENCODE_NODITHER )		1067993	0					
ANR	1068064	Condition	sp -> encode_meth == SGILOGENCODE_NODITHER	1052:11:27242:27281	1067993	0	True				
ANR	1068065	EqualityExpression	sp -> encode_meth == SGILOGENCODE_NODITHER		1067993	0		==			
ANR	1068066	PtrMemberAccess	sp -> encode_meth		1067993	0					
ANR	1068067	Identifier	sp		1067993	0					
ANR	1068068	Identifier	encode_meth		1067993	1					
ANR	1068069	Identifier	SGILOGENCODE_NODITHER		1067993	1					
ANR	1068070	ExpressionStatement	Le = ( luv3 [ 0 ] - 3314 ) >> 2	1053:3:27287:27311	1067993	1	True				
ANR	1068071	AssignmentExpression	Le = ( luv3 [ 0 ] - 3314 ) >> 2		1067993	0		=			
ANR	1068072	Identifier	Le		1067993	0					
ANR	1068073	ShiftExpression	( luv3 [ 0 ] - 3314 ) >> 2		1067993	1		>>			
ANR	1068074	AdditiveExpression	luv3 [ 0 ] - 3314		1067993	0		-			
ANR	1068075	ArrayIndexing	luv3 [ 0 ]		1067993	0					
ANR	1068076	Identifier	luv3		1067993	0					
ANR	1068077	PrimaryExpression	0		1067993	1					
ANR	1068078	PrimaryExpression	3314		1067993	1					
ANR	1068079	PrimaryExpression	2		1067993	1					
ANR	1068080	ElseStatement	else		1067993	0					
ANR	1068081	ExpressionStatement	"Le = itrunc ( .25 * ( luv3 [ 0 ] - 3314. ) , sp -> encode_meth )"	1055:3:27323:27372	1067993	0	True				
ANR	1068082	AssignmentExpression	"Le = itrunc ( .25 * ( luv3 [ 0 ] - 3314. ) , sp -> encode_meth )"		1067993	0		=			
ANR	1068083	Identifier	Le		1067993	0					
ANR	1068084	CallExpression	"itrunc ( .25 * ( luv3 [ 0 ] - 3314. ) , sp -> encode_meth )"		1067993	1					
ANR	1068085	Callee	itrunc		1067993	0					
ANR	1068086	Identifier	itrunc		1067993	0					
ANR	1068087	ArgumentList	.25 * ( luv3 [ 0 ] - 3314. )		1067993	1					
ANR	1068088	Argument	.25 * ( luv3 [ 0 ] - 3314. )		1067993	0					
ANR	1068089	MultiplicativeExpression	.25 * ( luv3 [ 0 ] - 3314. )		1067993	0		*			
ANR	1068090	PrimaryExpression	.25		1067993	0					
ANR	1068091	AdditiveExpression	luv3 [ 0 ] - 3314.		1067993	1		-			
ANR	1068092	ArrayIndexing	luv3 [ 0 ]		1067993	0					
ANR	1068093	Identifier	luv3		1067993	0					
ANR	1068094	PrimaryExpression	0		1067993	1					
ANR	1068095	PrimaryExpression	3314.		1067993	1					
ANR	1068096	Argument	sp -> encode_meth		1067993	1					
ANR	1068097	PtrMemberAccess	sp -> encode_meth		1067993	0					
ANR	1068098	Identifier	sp		1067993	0					
ANR	1068099	Identifier	encode_meth		1067993	1					
ANR	1068100	ExpressionStatement	"Ce = uv_encode ( ( luv3 [ 1 ] + .5 ) / ( 1 << 15 ) , ( luv3 [ 2 ] + .5 ) / ( 1 << 15 ) , sp -> encode_meth )"	1057:2:27377:27457	1067993	2	True				
ANR	1068101	AssignmentExpression	"Ce = uv_encode ( ( luv3 [ 1 ] + .5 ) / ( 1 << 15 ) , ( luv3 [ 2 ] + .5 ) / ( 1 << 15 ) , sp -> encode_meth )"		1067993	0		=			
ANR	1068102	Identifier	Ce		1067993	0					
ANR	1068103	CallExpression	"uv_encode ( ( luv3 [ 1 ] + .5 ) / ( 1 << 15 ) , ( luv3 [ 2 ] + .5 ) / ( 1 << 15 ) , sp -> encode_meth )"		1067993	1					
ANR	1068104	Callee	uv_encode		1067993	0					
ANR	1068105	Identifier	uv_encode		1067993	0					
ANR	1068106	ArgumentList	( luv3 [ 1 ] + .5 ) / ( 1 << 15 )		1067993	1					
ANR	1068107	Argument	( luv3 [ 1 ] + .5 ) / ( 1 << 15 )		1067993	0					
ANR	1068108	MultiplicativeExpression	( luv3 [ 1 ] + .5 ) / ( 1 << 15 )		1067993	0		/			
ANR	1068109	AdditiveExpression	luv3 [ 1 ] + .5		1067993	0		+			
ANR	1068110	ArrayIndexing	luv3 [ 1 ]		1067993	0					
ANR	1068111	Identifier	luv3		1067993	0					
ANR	1068112	PrimaryExpression	1		1067993	1					
ANR	1068113	PrimaryExpression	.5		1067993	1					
ANR	1068114	ShiftExpression	1 << 15		1067993	1		<<			
ANR	1068115	PrimaryExpression	1		1067993	0					
ANR	1068116	PrimaryExpression	15		1067993	1					
ANR	1068117	Argument	( luv3 [ 2 ] + .5 ) / ( 1 << 15 )		1067993	1					
ANR	1068118	MultiplicativeExpression	( luv3 [ 2 ] + .5 ) / ( 1 << 15 )		1067993	0		/			
ANR	1068119	AdditiveExpression	luv3 [ 2 ] + .5		1067993	0		+			
ANR	1068120	ArrayIndexing	luv3 [ 2 ]		1067993	0					
ANR	1068121	Identifier	luv3		1067993	0					
ANR	1068122	PrimaryExpression	2		1067993	1					
ANR	1068123	PrimaryExpression	.5		1067993	1					
ANR	1068124	ShiftExpression	1 << 15		1067993	1		<<			
ANR	1068125	PrimaryExpression	1		1067993	0					
ANR	1068126	PrimaryExpression	15		1067993	1					
ANR	1068127	Argument	sp -> encode_meth		1067993	2					
ANR	1068128	PtrMemberAccess	sp -> encode_meth		1067993	0					
ANR	1068129	Identifier	sp		1067993	0					
ANR	1068130	Identifier	encode_meth		1067993	1					
ANR	1068131	IfStatement	if ( Ce < 0 )		1067993	3					
ANR	1068132	Condition	Ce < 0	1059:6:27465:27470	1067993	0	True				
ANR	1068133	RelationalExpression	Ce < 0		1067993	0		<			
ANR	1068134	Identifier	Ce		1067993	0					
ANR	1068135	PrimaryExpression	0		1067993	1					
ANR	1068136	ExpressionStatement	"Ce = uv_encode ( U_NEU , V_NEU , SGILOGENCODE_NODITHER )"	1060:3:27496:27547	1067993	1	True				
ANR	1068137	AssignmentExpression	"Ce = uv_encode ( U_NEU , V_NEU , SGILOGENCODE_NODITHER )"		1067993	0		=			
ANR	1068138	Identifier	Ce		1067993	0					
ANR	1068139	CallExpression	"uv_encode ( U_NEU , V_NEU , SGILOGENCODE_NODITHER )"		1067993	1					
ANR	1068140	Callee	uv_encode		1067993	0					
ANR	1068141	Identifier	uv_encode		1067993	0					
ANR	1068142	ArgumentList	U_NEU		1067993	1					
ANR	1068143	Argument	U_NEU		1067993	0					
ANR	1068144	Identifier	U_NEU		1067993	0					
ANR	1068145	Argument	V_NEU		1067993	1					
ANR	1068146	Identifier	V_NEU		1067993	0					
ANR	1068147	Argument	SGILOGENCODE_NODITHER		1067993	2					
ANR	1068148	Identifier	SGILOGENCODE_NODITHER		1067993	0					
ANR	1068149	ExpressionStatement	* luv ++ = ( uint32 ) Le << 14 | Ce	1061:2:27551:27581	1067993	4	True				
ANR	1068150	AssignmentExpression	* luv ++ = ( uint32 ) Le << 14 | Ce		1067993	0		=			
ANR	1068151	UnaryOperationExpression	* luv ++		1067993	0					
ANR	1068152	UnaryOperator	*		1067993	0					
ANR	1068153	PostIncDecOperationExpression	luv ++		1067993	1					
ANR	1068154	Identifier	luv		1067993	0					
ANR	1068155	IncDec	++		1067993	1					
ANR	1068156	InclusiveOrExpression	( uint32 ) Le << 14 | Ce		1067993	1		|			
ANR	1068157	ShiftExpression	( uint32 ) Le << 14		1067993	0		<<			
ANR	1068158	CastExpression	( uint32 ) Le		1067993	0					
ANR	1068159	CastTarget	uint32		1067993	0					
ANR	1068160	Identifier	Le		1067993	1					
ANR	1068161	PrimaryExpression	14		1067993	1					
ANR	1068162	Identifier	Ce		1067993	1					
ANR	1068163	ExpressionStatement	luv3 += 3	1062:2:27585:27594	1067993	5	True				
ANR	1068164	AssignmentExpression	luv3 += 3		1067993	0		+=			
ANR	1068165	Identifier	luv3		1067993	0					
ANR	1068166	PrimaryExpression	3		1067993	1					
ANR	1068167	ReturnType	static void		1067993	1					
ANR	1068168	Identifier	Luv24fromLuv48		1067993	2					
ANR	1068169	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		1067993	3					
ANR	1068170	Parameter	LogLuvState * sp	1040:15:27001:27015	1067993	0	True				
ANR	1068171	ParameterType	LogLuvState *		1067993	0					
ANR	1068172	Identifier	sp		1067993	1					
ANR	1068173	Parameter	uint8 * op	1040:32:27018:27026	1067993	1	True				
ANR	1068174	ParameterType	uint8 *		1067993	0					
ANR	1068175	Identifier	op		1067993	1					
ANR	1068176	Parameter	tmsize_t n	1040:43:27029:27038	1067993	2	True				
ANR	1068177	ParameterType	tmsize_t		1067993	0					
ANR	1068178	Identifier	n		1067993	1					
ANR	1068179	CFGEntryNode	ENTRY		1067993		True				
ANR	1068180	CFGExitNode	EXIT		1067993		True				
ANR	1068181	Symbol	* sp		1067993						
ANR	1068182	Symbol	op		1067993						
ANR	1068183	Symbol	SGILOGENCODE_NODITHER		1067993						
ANR	1068184	Symbol	Ce		1067993						
ANR	1068185	Symbol	* luv ++		1067993						
ANR	1068186	Symbol	uv_encode		1067993						
ANR	1068187	Symbol	itrunc		1067993						
ANR	1068188	Symbol	luv		1067993						
ANR	1068189	Symbol	n		1067993						
ANR	1068190	Symbol	U_NEU		1067993						
ANR	1068191	Symbol	luv3		1067993						
ANR	1068192	Symbol	sp -> tbuf		1067993						
ANR	1068193	Symbol	Le		1067993						
ANR	1068194	Symbol	sp -> encode_meth		1067993						
ANR	1068195	Symbol	sp		1067993						
ANR	1068196	Symbol	* luv3		1067993						
ANR	1068197	Symbol	V_NEU		1067993						
ANR	1068198	Function	LogLuv32toXYZ	1069:0:27635:28096							
ANR	1068199	FunctionDef	"LogLuv32toXYZ (uint32 p , float XYZ [ 3 ])"		1068198	0					
ANR	1068200	CompoundStatement		1071:0:27678:28096	1068198	0					
ANR	1068201	IdentifierDeclStatement	"double L , u , v , s , x , y ;"	1072:1:27681:27704	1068198	0	True				
ANR	1068202	IdentifierDecl	L		1068198	0					
ANR	1068203	IdentifierDeclType	double		1068198	0					
ANR	1068204	Identifier	L		1068198	1					
ANR	1068205	IdentifierDecl	u		1068198	1					
ANR	1068206	IdentifierDeclType	double		1068198	0					
ANR	1068207	Identifier	u		1068198	1					
ANR	1068208	IdentifierDecl	v		1068198	2					
ANR	1068209	IdentifierDeclType	double		1068198	0					
ANR	1068210	Identifier	v		1068198	1					
ANR	1068211	IdentifierDecl	s		1068198	3					
ANR	1068212	IdentifierDeclType	double		1068198	0					
ANR	1068213	Identifier	s		1068198	1					
ANR	1068214	IdentifierDecl	x		1068198	4					
ANR	1068215	IdentifierDeclType	double		1068198	0					
ANR	1068216	Identifier	x		1068198	1					
ANR	1068217	IdentifierDecl	y		1068198	5					
ANR	1068218	IdentifierDeclType	double		1068198	0					
ANR	1068219	Identifier	y		1068198	1					
ANR	1068220	ExpressionStatement	L = LogL16toY ( ( int ) p >> 16 )	1074:1:27735:27762	1068198	1	True				
ANR	1068221	AssignmentExpression	L = LogL16toY ( ( int ) p >> 16 )		1068198	0		=			
ANR	1068222	Identifier	L		1068198	0					
ANR	1068223	CallExpression	LogL16toY ( ( int ) p >> 16 )		1068198	1					
ANR	1068224	Callee	LogL16toY		1068198	0					
ANR	1068225	Identifier	LogL16toY		1068198	0					
ANR	1068226	ArgumentList	( int ) p >> 16		1068198	1					
ANR	1068227	Argument	( int ) p >> 16		1068198	0					
ANR	1068228	ShiftExpression	( int ) p >> 16		1068198	0		>>			
ANR	1068229	CastExpression	( int ) p		1068198	0					
ANR	1068230	CastTarget	int		1068198	0					
ANR	1068231	Identifier	p		1068198	1					
ANR	1068232	PrimaryExpression	16		1068198	1					
ANR	1068233	IfStatement	if ( L <= 0. )		1068198	2					
ANR	1068234	Condition	L <= 0.	1075:5:27769:27775	1068198	0	True				
ANR	1068235	RelationalExpression	L <= 0.		1068198	0		<=			
ANR	1068236	Identifier	L		1068198	0					
ANR	1068237	PrimaryExpression	0.		1068198	1					
ANR	1068238	CompoundStatement		5:14:99:99	1068198	1					
ANR	1068239	ExpressionStatement	XYZ [ 0 ] = XYZ [ 1 ] = XYZ [ 2 ] = 0.	1076:2:27782:27811	1068198	0	True				
ANR	1068240	AssignmentExpression	XYZ [ 0 ] = XYZ [ 1 ] = XYZ [ 2 ] = 0.		1068198	0		=			
ANR	1068241	ArrayIndexing	XYZ [ 0 ]		1068198	0					
ANR	1068242	Identifier	XYZ		1068198	0					
ANR	1068243	PrimaryExpression	0		1068198	1					
ANR	1068244	AssignmentExpression	XYZ [ 1 ] = XYZ [ 2 ] = 0.		1068198	1		=			
ANR	1068245	ArrayIndexing	XYZ [ 1 ]		1068198	0					
ANR	1068246	Identifier	XYZ		1068198	0					
ANR	1068247	PrimaryExpression	1		1068198	1					
ANR	1068248	AssignmentExpression	XYZ [ 2 ] = 0.		1068198	1		=			
ANR	1068249	ArrayIndexing	XYZ [ 2 ]		1068198	0					
ANR	1068250	Identifier	XYZ		1068198	0					
ANR	1068251	PrimaryExpression	2		1068198	1					
ANR	1068252	PrimaryExpression	0.		1068198	1					
ANR	1068253	ReturnStatement	return ;	1077:2:27815:27821	1068198	1	True				
ANR	1068254	ExpressionStatement	u = 1. / UVSCALE * ( ( p >> 8 & 0xff ) + .5 )	1080:1:27851:27888	1068198	3	True				
ANR	1068255	AssignmentExpression	u = 1. / UVSCALE * ( ( p >> 8 & 0xff ) + .5 )		1068198	0		=			
ANR	1068256	Identifier	u		1068198	0					
ANR	1068257	MultiplicativeExpression	1. / UVSCALE * ( ( p >> 8 & 0xff ) + .5 )		1068198	1		/			
ANR	1068258	PrimaryExpression	1.		1068198	0					
ANR	1068259	MultiplicativeExpression	UVSCALE * ( ( p >> 8 & 0xff ) + .5 )		1068198	1		*			
ANR	1068260	Identifier	UVSCALE		1068198	0					
ANR	1068261	AdditiveExpression	( p >> 8 & 0xff ) + .5		1068198	1		+			
ANR	1068262	BitAndExpression	p >> 8 & 0xff		1068198	0		&			
ANR	1068263	ShiftExpression	p >> 8		1068198	0		>>			
ANR	1068264	Identifier	p		1068198	0					
ANR	1068265	PrimaryExpression	8		1068198	1					
ANR	1068266	PrimaryExpression	0xff		1068198	1					
ANR	1068267	PrimaryExpression	.5		1068198	1					
ANR	1068268	ExpressionStatement	v = 1. / UVSCALE * ( ( p & 0xff ) + .5 )	1081:1:27891:27925	1068198	4	True				
ANR	1068269	AssignmentExpression	v = 1. / UVSCALE * ( ( p & 0xff ) + .5 )		1068198	0		=			
ANR	1068270	Identifier	v		1068198	0					
ANR	1068271	MultiplicativeExpression	1. / UVSCALE * ( ( p & 0xff ) + .5 )		1068198	1		/			
ANR	1068272	PrimaryExpression	1.		1068198	0					
ANR	1068273	MultiplicativeExpression	UVSCALE * ( ( p & 0xff ) + .5 )		1068198	1		*			
ANR	1068274	Identifier	UVSCALE		1068198	0					
ANR	1068275	AdditiveExpression	( p & 0xff ) + .5		1068198	1		+			
ANR	1068276	BitAndExpression	p & 0xff		1068198	0		&			
ANR	1068277	Identifier	p		1068198	0					
ANR	1068278	PrimaryExpression	0xff		1068198	1					
ANR	1068279	PrimaryExpression	.5		1068198	1					
ANR	1068280	ExpressionStatement	s = 1. / ( 6. * u - 16. * v + 12. )	1082:1:27928:27955	1068198	5	True				
ANR	1068281	AssignmentExpression	s = 1. / ( 6. * u - 16. * v + 12. )		1068198	0		=			
ANR	1068282	Identifier	s		1068198	0					
ANR	1068283	MultiplicativeExpression	1. / ( 6. * u - 16. * v + 12. )		1068198	1		/			
ANR	1068284	PrimaryExpression	1.		1068198	0					
ANR	1068285	AdditiveExpression	6. * u - 16. * v + 12.		1068198	1		-			
ANR	1068286	MultiplicativeExpression	6. * u		1068198	0		*			
ANR	1068287	PrimaryExpression	6.		1068198	0					
ANR	1068288	Identifier	u		1068198	1					
ANR	1068289	AdditiveExpression	16. * v + 12.		1068198	1		+			
ANR	1068290	MultiplicativeExpression	16. * v		1068198	0		*			
ANR	1068291	PrimaryExpression	16.		1068198	0					
ANR	1068292	Identifier	v		1068198	1					
ANR	1068293	PrimaryExpression	12.		1068198	1					
ANR	1068294	ExpressionStatement	x = 9. * u * s	1083:1:27958:27970	1068198	6	True				
ANR	1068295	AssignmentExpression	x = 9. * u * s		1068198	0		=			
ANR	1068296	Identifier	x		1068198	0					
ANR	1068297	MultiplicativeExpression	9. * u * s		1068198	1		*			
ANR	1068298	PrimaryExpression	9.		1068198	0					
ANR	1068299	MultiplicativeExpression	u * s		1068198	1		*			
ANR	1068300	Identifier	u		1068198	0					
ANR	1068301	Identifier	s		1068198	1					
ANR	1068302	ExpressionStatement	y = 4. * v * s	1084:1:27973:27985	1068198	7	True				
ANR	1068303	AssignmentExpression	y = 4. * v * s		1068198	0		=			
ANR	1068304	Identifier	y		1068198	0					
ANR	1068305	MultiplicativeExpression	4. * v * s		1068198	1		*			
ANR	1068306	PrimaryExpression	4.		1068198	0					
ANR	1068307	MultiplicativeExpression	v * s		1068198	1		*			
ANR	1068308	Identifier	v		1068198	0					
ANR	1068309	Identifier	s		1068198	1					
ANR	1068310	ExpressionStatement	XYZ [ 0 ] = ( float ) ( x / y * L )	1086:1:28014:28039	1068198	8	True				
ANR	1068311	AssignmentExpression	XYZ [ 0 ] = ( float ) ( x / y * L )		1068198	0		=			
ANR	1068312	ArrayIndexing	XYZ [ 0 ]		1068198	0					
ANR	1068313	Identifier	XYZ		1068198	0					
ANR	1068314	PrimaryExpression	0		1068198	1					
ANR	1068315	CastExpression	( float ) ( x / y * L )		1068198	1					
ANR	1068316	CastTarget	float		1068198	0					
ANR	1068317	MultiplicativeExpression	x / y * L		1068198	1		/			
ANR	1068318	Identifier	x		1068198	0					
ANR	1068319	MultiplicativeExpression	y * L		1068198	1		*			
ANR	1068320	Identifier	y		1068198	0					
ANR	1068321	Identifier	L		1068198	1					
ANR	1068322	ExpressionStatement	XYZ [ 1 ] = ( float ) L	1087:1:28042:28059	1068198	9	True				
ANR	1068323	AssignmentExpression	XYZ [ 1 ] = ( float ) L		1068198	0		=			
ANR	1068324	ArrayIndexing	XYZ [ 1 ]		1068198	0					
ANR	1068325	Identifier	XYZ		1068198	0					
ANR	1068326	PrimaryExpression	1		1068198	1					
ANR	1068327	CastExpression	( float ) L		1068198	1					
ANR	1068328	CastTarget	float		1068198	0					
ANR	1068329	Identifier	L		1068198	1					
ANR	1068330	ExpressionStatement	XYZ [ 2 ] = ( float ) ( ( 1. - x - y ) / y * L )	1088:1:28062:28094	1068198	10	True				
ANR	1068331	AssignmentExpression	XYZ [ 2 ] = ( float ) ( ( 1. - x - y ) / y * L )		1068198	0		=			
ANR	1068332	ArrayIndexing	XYZ [ 2 ]		1068198	0					
ANR	1068333	Identifier	XYZ		1068198	0					
ANR	1068334	PrimaryExpression	2		1068198	1					
ANR	1068335	CastExpression	( float ) ( ( 1. - x - y ) / y * L )		1068198	1					
ANR	1068336	CastTarget	float		1068198	0					
ANR	1068337	MultiplicativeExpression	( 1. - x - y ) / y * L		1068198	1		/			
ANR	1068338	AdditiveExpression	1. - x - y		1068198	0		-			
ANR	1068339	PrimaryExpression	1.		1068198	0					
ANR	1068340	AdditiveExpression	x - y		1068198	1		-			
ANR	1068341	Identifier	x		1068198	0					
ANR	1068342	Identifier	y		1068198	1					
ANR	1068343	MultiplicativeExpression	y * L		1068198	1		*			
ANR	1068344	Identifier	y		1068198	0					
ANR	1068345	Identifier	L		1068198	1					
ANR	1068346	ReturnType	void		1068198	1					
ANR	1068347	Identifier	LogLuv32toXYZ		1068198	2					
ANR	1068348	ParameterList	"uint32 p , float XYZ [ 3 ]"		1068198	3					
ANR	1068349	Parameter	uint32 p	1070:14:27654:27661	1068198	0	True				
ANR	1068350	ParameterType	uint32		1068198	0					
ANR	1068351	Identifier	p		1068198	1					
ANR	1068352	Parameter	float XYZ [ 3 ]	1070:24:27664:27675	1068198	1	True				
ANR	1068353	ParameterType	float [ 3 ]		1068198	0					
ANR	1068354	Identifier	XYZ		1068198	1					
ANR	1068355	CFGEntryNode	ENTRY		1068198		True				
ANR	1068356	CFGExitNode	EXIT		1068198		True				
ANR	1068357	Symbol	p		1068198						
ANR	1068358	Symbol	s		1068198						
ANR	1068359	Symbol	LogL16toY		1068198						
ANR	1068360	Symbol	u		1068198						
ANR	1068361	Symbol	v		1068198						
ANR	1068362	Symbol	XYZ		1068198						
ANR	1068363	Symbol	x		1068198						
ANR	1068364	Symbol	y		1068198						
ANR	1068365	Symbol	UVSCALE		1068198						
ANR	1068366	Symbol	L		1068198						
ANR	1068367	Symbol	* XYZ		1068198						
ANR	1068368	Function	LogLuv32fromXYZ	1094:0:28132:28687							
ANR	1068369	FunctionDef	"LogLuv32fromXYZ (float XYZ [ 3 ] , int em)"		1068368	0					
ANR	1068370	CompoundStatement		1096:0:28177:28687	1068368	0					
ANR	1068371	IdentifierDeclStatement	"unsigned int Le , ue , ve ;"	1097:1:28180:28203	1068368	0	True				
ANR	1068372	IdentifierDecl	Le		1068368	0					
ANR	1068373	IdentifierDeclType	unsigned int		1068368	0					
ANR	1068374	Identifier	Le		1068368	1					
ANR	1068375	IdentifierDecl	ue		1068368	1					
ANR	1068376	IdentifierDeclType	unsigned int		1068368	0					
ANR	1068377	Identifier	ue		1068368	1					
ANR	1068378	IdentifierDecl	ve		1068368	2					
ANR	1068379	IdentifierDeclType	unsigned int		1068368	0					
ANR	1068380	Identifier	ve		1068368	1					
ANR	1068381	IdentifierDeclStatement	"double u , v , s ;"	1098:1:28206:28220	1068368	1	True				
ANR	1068382	IdentifierDecl	u		1068368	0					
ANR	1068383	IdentifierDeclType	double		1068368	0					
ANR	1068384	Identifier	u		1068368	1					
ANR	1068385	IdentifierDecl	v		1068368	1					
ANR	1068386	IdentifierDeclType	double		1068368	0					
ANR	1068387	Identifier	v		1068368	1					
ANR	1068388	IdentifierDecl	s		1068368	2					
ANR	1068389	IdentifierDeclType	double		1068368	0					
ANR	1068390	Identifier	s		1068368	1					
ANR	1068391	ExpressionStatement	"Le = ( unsigned int ) LogL16fromY ( XYZ [ 1 ] , em )"	1100:1:28251:28293	1068368	2	True				
ANR	1068392	AssignmentExpression	"Le = ( unsigned int ) LogL16fromY ( XYZ [ 1 ] , em )"		1068368	0		=			
ANR	1068393	Identifier	Le		1068368	0					
ANR	1068394	CastExpression	"( unsigned int ) LogL16fromY ( XYZ [ 1 ] , em )"		1068368	1					
ANR	1068395	CastTarget	unsigned int		1068368	0					
ANR	1068396	CallExpression	"LogL16fromY ( XYZ [ 1 ] , em )"		1068368	1					
ANR	1068397	Callee	LogL16fromY		1068368	0					
ANR	1068398	Identifier	LogL16fromY		1068368	0					
ANR	1068399	ArgumentList	XYZ [ 1 ]		1068368	1					
ANR	1068400	Argument	XYZ [ 1 ]		1068368	0					
ANR	1068401	ArrayIndexing	XYZ [ 1 ]		1068368	0					
ANR	1068402	Identifier	XYZ		1068368	0					
ANR	1068403	PrimaryExpression	1		1068368	1					
ANR	1068404	Argument	em		1068368	1					
ANR	1068405	Identifier	em		1068368	0					
ANR	1068406	ExpressionStatement	s = XYZ [ 0 ] + 15. * XYZ [ 1 ] + 3. * XYZ [ 2 ]	1102:1:28320:28355	1068368	3	True				
ANR	1068407	AssignmentExpression	s = XYZ [ 0 ] + 15. * XYZ [ 1 ] + 3. * XYZ [ 2 ]		1068368	0		=			
ANR	1068408	Identifier	s		1068368	0					
ANR	1068409	AdditiveExpression	XYZ [ 0 ] + 15. * XYZ [ 1 ] + 3. * XYZ [ 2 ]		1068368	1		+			
ANR	1068410	ArrayIndexing	XYZ [ 0 ]		1068368	0					
ANR	1068411	Identifier	XYZ		1068368	0					
ANR	1068412	PrimaryExpression	0		1068368	1					
ANR	1068413	AdditiveExpression	15. * XYZ [ 1 ] + 3. * XYZ [ 2 ]		1068368	1		+			
ANR	1068414	MultiplicativeExpression	15. * XYZ [ 1 ]		1068368	0		*			
ANR	1068415	PrimaryExpression	15.		1068368	0					
ANR	1068416	ArrayIndexing	XYZ [ 1 ]		1068368	1					
ANR	1068417	Identifier	XYZ		1068368	0					
ANR	1068418	PrimaryExpression	1		1068368	1					
ANR	1068419	MultiplicativeExpression	3. * XYZ [ 2 ]		1068368	1		*			
ANR	1068420	PrimaryExpression	3.		1068368	0					
ANR	1068421	ArrayIndexing	XYZ [ 2 ]		1068368	1					
ANR	1068422	Identifier	XYZ		1068368	0					
ANR	1068423	PrimaryExpression	2		1068368	1					
ANR	1068424	IfStatement	if ( ! Le || s <= 0. )		1068368	4					
ANR	1068425	Condition	! Le || s <= 0.	1103:5:28362:28375	1068368	0	True				
ANR	1068426	OrExpression	! Le || s <= 0.		1068368	0		||			
ANR	1068427	UnaryOperationExpression	! Le		1068368	0					
ANR	1068428	UnaryOperator	!		1068368	0					
ANR	1068429	Identifier	Le		1068368	1					
ANR	1068430	RelationalExpression	s <= 0.		1068368	1		<=			
ANR	1068431	Identifier	s		1068368	0					
ANR	1068432	PrimaryExpression	0.		1068368	1					
ANR	1068433	CompoundStatement		8:21:200:200	1068368	1					
ANR	1068434	ExpressionStatement	u = U_NEU	1104:2:28382:28391	1068368	0	True				
ANR	1068435	AssignmentExpression	u = U_NEU		1068368	0		=			
ANR	1068436	Identifier	u		1068368	0					
ANR	1068437	Identifier	U_NEU		1068368	1					
ANR	1068438	ExpressionStatement	v = V_NEU	1105:2:28395:28404	1068368	1	True				
ANR	1068439	AssignmentExpression	v = V_NEU		1068368	0		=			
ANR	1068440	Identifier	v		1068368	0					
ANR	1068441	Identifier	V_NEU		1068368	1					
ANR	1068442	ElseStatement	else		1068368	0					
ANR	1068443	CompoundStatement		11:8:236:236	1068368	0					
ANR	1068444	ExpressionStatement	u = 4. * XYZ [ 0 ] / s	1107:2:28418:28435	1068368	0	True				
ANR	1068445	AssignmentExpression	u = 4. * XYZ [ 0 ] / s		1068368	0		=			
ANR	1068446	Identifier	u		1068368	0					
ANR	1068447	MultiplicativeExpression	4. * XYZ [ 0 ] / s		1068368	1		*			
ANR	1068448	PrimaryExpression	4.		1068368	0					
ANR	1068449	MultiplicativeExpression	XYZ [ 0 ] / s		1068368	1		/			
ANR	1068450	ArrayIndexing	XYZ [ 0 ]		1068368	0					
ANR	1068451	Identifier	XYZ		1068368	0					
ANR	1068452	PrimaryExpression	0		1068368	1					
ANR	1068453	Identifier	s		1068368	1					
ANR	1068454	ExpressionStatement	v = 9. * XYZ [ 1 ] / s	1108:2:28439:28456	1068368	1	True				
ANR	1068455	AssignmentExpression	v = 9. * XYZ [ 1 ] / s		1068368	0		=			
ANR	1068456	Identifier	v		1068368	0					
ANR	1068457	MultiplicativeExpression	9. * XYZ [ 1 ] / s		1068368	1		*			
ANR	1068458	PrimaryExpression	9.		1068368	0					
ANR	1068459	MultiplicativeExpression	XYZ [ 1 ] / s		1068368	1		/			
ANR	1068460	ArrayIndexing	XYZ [ 1 ]		1068368	0					
ANR	1068461	Identifier	XYZ		1068368	0					
ANR	1068462	PrimaryExpression	1		1068368	1					
ANR	1068463	Identifier	s		1068368	1					
ANR	1068464	IfStatement	if ( u <= 0. )		1068368	5					
ANR	1068465	Condition	u <= 0.	1110:5:28466:28472	1068368	0	True				
ANR	1068466	RelationalExpression	u <= 0.		1068368	0		<=			
ANR	1068467	Identifier	u		1068368	0					
ANR	1068468	PrimaryExpression	0.		1068368	1					
ANR	1068469	ExpressionStatement	ue = 0	1110:14:28475:28481	1068368	1	True				
ANR	1068470	AssignmentExpression	ue = 0		1068368	0		=			
ANR	1068471	Identifier	ue		1068368	0					
ANR	1068472	PrimaryExpression	0		1068368	1					
ANR	1068473	ElseStatement	else		1068368	0					
ANR	1068474	ExpressionStatement	"ue = itrunc ( UVSCALE * u , em )"	1111:6:28489:28515	1068368	0	True				
ANR	1068475	AssignmentExpression	"ue = itrunc ( UVSCALE * u , em )"		1068368	0		=			
ANR	1068476	Identifier	ue		1068368	0					
ANR	1068477	CallExpression	"itrunc ( UVSCALE * u , em )"		1068368	1					
ANR	1068478	Callee	itrunc		1068368	0					
ANR	1068479	Identifier	itrunc		1068368	0					
ANR	1068480	ArgumentList	UVSCALE * u		1068368	1					
ANR	1068481	Argument	UVSCALE * u		1068368	0					
ANR	1068482	MultiplicativeExpression	UVSCALE * u		1068368	0		*			
ANR	1068483	Identifier	UVSCALE		1068368	0					
ANR	1068484	Identifier	u		1068368	1					
ANR	1068485	Argument	em		1068368	1					
ANR	1068486	Identifier	em		1068368	0					
ANR	1068487	IfStatement	if ( ue > 255 )		1068368	6					
ANR	1068488	Condition	ue > 255	1112:5:28522:28529	1068368	0	True				
ANR	1068489	RelationalExpression	ue > 255		1068368	0		>			
ANR	1068490	Identifier	ue		1068368	0					
ANR	1068491	PrimaryExpression	255		1068368	1					
ANR	1068492	ExpressionStatement	ue = 255	1112:15:28532:28540	1068368	1	True				
ANR	1068493	AssignmentExpression	ue = 255		1068368	0		=			
ANR	1068494	Identifier	ue		1068368	0					
ANR	1068495	PrimaryExpression	255		1068368	1					
ANR	1068496	IfStatement	if ( v <= 0. )		1068368	7					
ANR	1068497	Condition	v <= 0.	1113:5:28547:28553	1068368	0	True				
ANR	1068498	RelationalExpression	v <= 0.		1068368	0		<=			
ANR	1068499	Identifier	v		1068368	0					
ANR	1068500	PrimaryExpression	0.		1068368	1					
ANR	1068501	ExpressionStatement	ve = 0	1113:14:28556:28562	1068368	1	True				
ANR	1068502	AssignmentExpression	ve = 0		1068368	0		=			
ANR	1068503	Identifier	ve		1068368	0					
ANR	1068504	PrimaryExpression	0		1068368	1					
ANR	1068505	ElseStatement	else		1068368	0					
ANR	1068506	ExpressionStatement	"ve = itrunc ( UVSCALE * v , em )"	1114:6:28570:28596	1068368	0	True				
ANR	1068507	AssignmentExpression	"ve = itrunc ( UVSCALE * v , em )"		1068368	0		=			
ANR	1068508	Identifier	ve		1068368	0					
ANR	1068509	CallExpression	"itrunc ( UVSCALE * v , em )"		1068368	1					
ANR	1068510	Callee	itrunc		1068368	0					
ANR	1068511	Identifier	itrunc		1068368	0					
ANR	1068512	ArgumentList	UVSCALE * v		1068368	1					
ANR	1068513	Argument	UVSCALE * v		1068368	0					
ANR	1068514	MultiplicativeExpression	UVSCALE * v		1068368	0		*			
ANR	1068515	Identifier	UVSCALE		1068368	0					
ANR	1068516	Identifier	v		1068368	1					
ANR	1068517	Argument	em		1068368	1					
ANR	1068518	Identifier	em		1068368	0					
ANR	1068519	IfStatement	if ( ve > 255 )		1068368	8					
ANR	1068520	Condition	ve > 255	1115:5:28603:28610	1068368	0	True				
ANR	1068521	RelationalExpression	ve > 255		1068368	0		>			
ANR	1068522	Identifier	ve		1068368	0					
ANR	1068523	PrimaryExpression	255		1068368	1					
ANR	1068524	ExpressionStatement	ve = 255	1115:15:28613:28621	1068368	1	True				
ANR	1068525	AssignmentExpression	ve = 255		1068368	0		=			
ANR	1068526	Identifier	ve		1068368	0					
ANR	1068527	PrimaryExpression	255		1068368	1					
ANR	1068528	ReturnStatement	return ( Le << 16 | ue << 8 | ve ) ;	1117:1:28653:28685	1068368	9	True				
ANR	1068529	InclusiveOrExpression	Le << 16 | ue << 8 | ve		1068368	0		|			
ANR	1068530	ShiftExpression	Le << 16		1068368	0		<<			
ANR	1068531	Identifier	Le		1068368	0					
ANR	1068532	PrimaryExpression	16		1068368	1					
ANR	1068533	InclusiveOrExpression	ue << 8 | ve		1068368	1		|			
ANR	1068534	ShiftExpression	ue << 8		1068368	0		<<			
ANR	1068535	Identifier	ue		1068368	0					
ANR	1068536	PrimaryExpression	8		1068368	1					
ANR	1068537	Identifier	ve		1068368	1					
ANR	1068538	ReturnType	uint32		1068368	1					
ANR	1068539	Identifier	LogLuv32fromXYZ		1068368	2					
ANR	1068540	ParameterList	"float XYZ [ 3 ] , int em"		1068368	3					
ANR	1068541	Parameter	float XYZ [ 3 ]	1095:16:28155:28166	1068368	0	True				
ANR	1068542	ParameterType	float [ 3 ]		1068368	0					
ANR	1068543	Identifier	XYZ		1068368	1					
ANR	1068544	Parameter	int em	1095:30:28169:28174	1068368	1	True				
ANR	1068545	ParameterType	int		1068368	0					
ANR	1068546	Identifier	em		1068368	1					
ANR	1068547	CFGEntryNode	ENTRY		1068368		True				
ANR	1068548	CFGExitNode	EXIT		1068368		True				
ANR	1068549	Symbol	itrunc		1068368						
ANR	1068550	Symbol	em		1068368						
ANR	1068551	Symbol	UVSCALE		1068368						
ANR	1068552	Symbol	LogL16fromY		1068368						
ANR	1068553	Symbol	U_NEU		1068368						
ANR	1068554	Symbol	ve		1068368						
ANR	1068555	Symbol	ue		1068368						
ANR	1068556	Symbol	s		1068368						
ANR	1068557	Symbol	u		1068368						
ANR	1068558	Symbol	v		1068368						
ANR	1068559	Symbol	XYZ		1068368						
ANR	1068560	Symbol	Le		1068368						
ANR	1068561	Symbol	* XYZ		1068368						
ANR	1068562	Symbol	V_NEU		1068368						
ANR	1068563	Function	Luv32toXYZ	1120:0:28690:28884							
ANR	1068564	FunctionDef	"Luv32toXYZ (LogLuvState * sp , uint8 * op , tmsize_t n)"		1068563	0					
ANR	1068565	CompoundStatement		1122:0:28753:28884	1068563	0					
ANR	1068566	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1123:1:28756:28788	1068563	0	True				
ANR	1068567	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		1068563	0					
ANR	1068568	IdentifierDeclType	uint32 *		1068563	0					
ANR	1068569	Identifier	luv		1068563	1					
ANR	1068570	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		1068563	2		=			
ANR	1068571	Identifier	luv		1068563	0					
ANR	1068572	CastExpression	( uint32 * ) sp -> tbuf		1068563	1					
ANR	1068573	CastTarget	uint32 *		1068563	0					
ANR	1068574	PtrMemberAccess	sp -> tbuf		1068563	1					
ANR	1068575	Identifier	sp		1068563	0					
ANR	1068576	Identifier	tbuf		1068563	1					
ANR	1068577	IdentifierDeclStatement	float * xyz = ( float * ) op ;	1124:1:28793:28817	1068563	1	True				
ANR	1068578	IdentifierDecl	* xyz = ( float * ) op		1068563	0					
ANR	1068579	IdentifierDeclType	float *		1068563	0					
ANR	1068580	Identifier	xyz		1068563	1					
ANR	1068581	AssignmentExpression	* xyz = ( float * ) op		1068563	2		=			
ANR	1068582	Identifier	xyz		1068563	0					
ANR	1068583	CastExpression	( float * ) op		1068563	1					
ANR	1068584	CastTarget	float *		1068563	0					
ANR	1068585	Identifier	op		1068563	1					
ANR	1068586	WhileStatement	while ( n -- > 0 )		1068563	2					
ANR	1068587	Condition	n -- > 0	1126:8:28828:28834	1068563	0	True				
ANR	1068588	RelationalExpression	n -- > 0		1068563	0		>			
ANR	1068589	PostIncDecOperationExpression	n --		1068563	0					
ANR	1068590	Identifier	n		1068563	0					
ANR	1068591	IncDec	--		1068563	1					
ANR	1068592	PrimaryExpression	0		1068563	1					
ANR	1068593	CompoundStatement		5:17:83:83	1068563	1					
ANR	1068594	ExpressionStatement	"LogLuv32toXYZ ( * luv ++ , xyz )"	1127:2:28841:28867	1068563	0	True				
ANR	1068595	CallExpression	"LogLuv32toXYZ ( * luv ++ , xyz )"		1068563	0					
ANR	1068596	Callee	LogLuv32toXYZ		1068563	0					
ANR	1068597	Identifier	LogLuv32toXYZ		1068563	0					
ANR	1068598	ArgumentList	* luv ++		1068563	1					
ANR	1068599	Argument	* luv ++		1068563	0					
ANR	1068600	UnaryOperationExpression	* luv ++		1068563	0					
ANR	1068601	UnaryOperator	*		1068563	0					
ANR	1068602	PostIncDecOperationExpression	luv ++		1068563	1					
ANR	1068603	Identifier	luv		1068563	0					
ANR	1068604	IncDec	++		1068563	1					
ANR	1068605	Argument	xyz		1068563	1					
ANR	1068606	Identifier	xyz		1068563	0					
ANR	1068607	ExpressionStatement	xyz += 3	1128:2:28871:28879	1068563	1	True				
ANR	1068608	AssignmentExpression	xyz += 3		1068563	0		+=			
ANR	1068609	Identifier	xyz		1068563	0					
ANR	1068610	PrimaryExpression	3		1068563	1					
ANR	1068611	ReturnType	static void		1068563	1					
ANR	1068612	Identifier	Luv32toXYZ		1068563	2					
ANR	1068613	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		1068563	3					
ANR	1068614	Parameter	LogLuvState * sp	1121:11:28713:28727	1068563	0	True				
ANR	1068615	ParameterType	LogLuvState *		1068563	0					
ANR	1068616	Identifier	sp		1068563	1					
ANR	1068617	Parameter	uint8 * op	1121:28:28730:28738	1068563	1	True				
ANR	1068618	ParameterType	uint8 *		1068563	0					
ANR	1068619	Identifier	op		1068563	1					
ANR	1068620	Parameter	tmsize_t n	1121:39:28741:28750	1068563	2	True				
ANR	1068621	ParameterType	tmsize_t		1068563	0					
ANR	1068622	Identifier	n		1068563	1					
ANR	1068623	CFGEntryNode	ENTRY		1068563		True				
ANR	1068624	CFGExitNode	EXIT		1068563		True				
ANR	1068625	Symbol	* sp		1068563						
ANR	1068626	Symbol	op		1068563						
ANR	1068627	Symbol	* luv ++		1068563						
ANR	1068628	Symbol	xyz		1068563						
ANR	1068629	Symbol	sp -> tbuf		1068563						
ANR	1068630	Symbol	luv		1068563						
ANR	1068631	Symbol	sp		1068563						
ANR	1068632	Symbol	n		1068563						
ANR	1068633	Function	Luv32toLuv48	1132:0:28887:29255							
ANR	1068634	FunctionDef	"Luv32toLuv48 (LogLuvState * sp , uint8 * op , tmsize_t n)"		1068633	0					
ANR	1068635	CompoundStatement		1134:0:28952:29255	1068633	0					
ANR	1068636	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1135:1:28955:28987	1068633	0	True				
ANR	1068637	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		1068633	0					
ANR	1068638	IdentifierDeclType	uint32 *		1068633	0					
ANR	1068639	Identifier	luv		1068633	1					
ANR	1068640	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		1068633	2		=			
ANR	1068641	Identifier	luv		1068633	0					
ANR	1068642	CastExpression	( uint32 * ) sp -> tbuf		1068633	1					
ANR	1068643	CastTarget	uint32 *		1068633	0					
ANR	1068644	PtrMemberAccess	sp -> tbuf		1068633	1					
ANR	1068645	Identifier	sp		1068633	0					
ANR	1068646	Identifier	tbuf		1068633	1					
ANR	1068647	IdentifierDeclStatement	int16 * luv3 = ( int16 * ) op ;	1136:1:28992:29017	1068633	1	True				
ANR	1068648	IdentifierDecl	* luv3 = ( int16 * ) op		1068633	0					
ANR	1068649	IdentifierDeclType	int16 *		1068633	0					
ANR	1068650	Identifier	luv3		1068633	1					
ANR	1068651	AssignmentExpression	* luv3 = ( int16 * ) op		1068633	2		=			
ANR	1068652	Identifier	luv3		1068633	0					
ANR	1068653	CastExpression	( int16 * ) op		1068633	1					
ANR	1068654	CastTarget	int16 *		1068633	0					
ANR	1068655	Identifier	op		1068633	1					
ANR	1068656	WhileStatement	while ( n -- > 0 )		1068633	2					
ANR	1068657	Condition	n -- > 0	1138:8:29028:29034	1068633	0	True				
ANR	1068658	RelationalExpression	n -- > 0		1068633	0		>			
ANR	1068659	PostIncDecOperationExpression	n --		1068633	0					
ANR	1068660	Identifier	n		1068633	0					
ANR	1068661	IncDec	--		1068633	1					
ANR	1068662	PrimaryExpression	0		1068633	1					
ANR	1068663	CompoundStatement		6:2:88:99	1068633	1					
ANR	1068664	IdentifierDeclStatement	"double u , v ;"	1139:2:29041:29052	1068633	0	True				
ANR	1068665	IdentifierDecl	u		1068633	0					
ANR	1068666	IdentifierDeclType	double		1068633	0					
ANR	1068667	Identifier	u		1068633	1					
ANR	1068668	IdentifierDecl	v		1068633	1					
ANR	1068669	IdentifierDeclType	double		1068633	0					
ANR	1068670	Identifier	v		1068633	1					
ANR	1068671	ExpressionStatement	* luv3 ++ = ( int16 ) ( * luv >> 16 )	1141:2:29057:29086	1068633	1	True				
ANR	1068672	AssignmentExpression	* luv3 ++ = ( int16 ) ( * luv >> 16 )		1068633	0		=			
ANR	1068673	UnaryOperationExpression	* luv3 ++		1068633	0					
ANR	1068674	UnaryOperator	*		1068633	0					
ANR	1068675	PostIncDecOperationExpression	luv3 ++		1068633	1					
ANR	1068676	Identifier	luv3		1068633	0					
ANR	1068677	IncDec	++		1068633	1					
ANR	1068678	CastExpression	( int16 ) ( * luv >> 16 )		1068633	1					
ANR	1068679	CastTarget	int16		1068633	0					
ANR	1068680	ShiftExpression	* luv >> 16		1068633	1		>>			
ANR	1068681	UnaryOperationExpression	* luv		1068633	0					
ANR	1068682	UnaryOperator	*		1068633	0					
ANR	1068683	Identifier	luv		1068633	1					
ANR	1068684	PrimaryExpression	16		1068633	1					
ANR	1068685	ExpressionStatement	u = 1. / UVSCALE * ( ( * luv >> 8 & 0xff ) + .5 )	1142:2:29090:29130	1068633	2	True				
ANR	1068686	AssignmentExpression	u = 1. / UVSCALE * ( ( * luv >> 8 & 0xff ) + .5 )		1068633	0		=			
ANR	1068687	Identifier	u		1068633	0					
ANR	1068688	MultiplicativeExpression	1. / UVSCALE * ( ( * luv >> 8 & 0xff ) + .5 )		1068633	1		/			
ANR	1068689	PrimaryExpression	1.		1068633	0					
ANR	1068690	MultiplicativeExpression	UVSCALE * ( ( * luv >> 8 & 0xff ) + .5 )		1068633	1		*			
ANR	1068691	Identifier	UVSCALE		1068633	0					
ANR	1068692	AdditiveExpression	( * luv >> 8 & 0xff ) + .5		1068633	1		+			
ANR	1068693	BitAndExpression	* luv >> 8 & 0xff		1068633	0		&			
ANR	1068694	ShiftExpression	* luv >> 8		1068633	0		>>			
ANR	1068695	UnaryOperationExpression	* luv		1068633	0					
ANR	1068696	UnaryOperator	*		1068633	0					
ANR	1068697	Identifier	luv		1068633	1					
ANR	1068698	PrimaryExpression	8		1068633	1					
ANR	1068699	PrimaryExpression	0xff		1068633	1					
ANR	1068700	PrimaryExpression	.5		1068633	1					
ANR	1068701	ExpressionStatement	v = 1. / UVSCALE * ( ( * luv & 0xff ) + .5 )	1143:2:29134:29171	1068633	3	True				
ANR	1068702	AssignmentExpression	v = 1. / UVSCALE * ( ( * luv & 0xff ) + .5 )		1068633	0		=			
ANR	1068703	Identifier	v		1068633	0					
ANR	1068704	MultiplicativeExpression	1. / UVSCALE * ( ( * luv & 0xff ) + .5 )		1068633	1		/			
ANR	1068705	PrimaryExpression	1.		1068633	0					
ANR	1068706	MultiplicativeExpression	UVSCALE * ( ( * luv & 0xff ) + .5 )		1068633	1		*			
ANR	1068707	Identifier	UVSCALE		1068633	0					
ANR	1068708	AdditiveExpression	( * luv & 0xff ) + .5		1068633	1		+			
ANR	1068709	BitAndExpression	* luv & 0xff		1068633	0		&			
ANR	1068710	UnaryOperationExpression	* luv		1068633	0					
ANR	1068711	UnaryOperator	*		1068633	0					
ANR	1068712	Identifier	luv		1068633	1					
ANR	1068713	PrimaryExpression	0xff		1068633	1					
ANR	1068714	PrimaryExpression	.5		1068633	1					
ANR	1068715	ExpressionStatement	* luv3 ++ = ( int16 ) ( u * ( 1L << 15 ) )	1144:2:29175:29206	1068633	4	True				
ANR	1068716	AssignmentExpression	* luv3 ++ = ( int16 ) ( u * ( 1L << 15 ) )		1068633	0		=			
ANR	1068717	UnaryOperationExpression	* luv3 ++		1068633	0					
ANR	1068718	UnaryOperator	*		1068633	0					
ANR	1068719	PostIncDecOperationExpression	luv3 ++		1068633	1					
ANR	1068720	Identifier	luv3		1068633	0					
ANR	1068721	IncDec	++		1068633	1					
ANR	1068722	CastExpression	( int16 ) ( u * ( 1L << 15 ) )		1068633	1					
ANR	1068723	CastTarget	int16		1068633	0					
ANR	1068724	MultiplicativeExpression	u * ( 1L << 15 )		1068633	1		*			
ANR	1068725	Identifier	u		1068633	0					
ANR	1068726	ShiftExpression	1L << 15		1068633	1		<<			
ANR	1068727	PrimaryExpression	1L		1068633	0					
ANR	1068728	PrimaryExpression	15		1068633	1					
ANR	1068729	ExpressionStatement	* luv3 ++ = ( int16 ) ( v * ( 1L << 15 ) )	1145:2:29210:29241	1068633	5	True				
ANR	1068730	AssignmentExpression	* luv3 ++ = ( int16 ) ( v * ( 1L << 15 ) )		1068633	0		=			
ANR	1068731	UnaryOperationExpression	* luv3 ++		1068633	0					
ANR	1068732	UnaryOperator	*		1068633	0					
ANR	1068733	PostIncDecOperationExpression	luv3 ++		1068633	1					
ANR	1068734	Identifier	luv3		1068633	0					
ANR	1068735	IncDec	++		1068633	1					
ANR	1068736	CastExpression	( int16 ) ( v * ( 1L << 15 ) )		1068633	1					
ANR	1068737	CastTarget	int16		1068633	0					
ANR	1068738	MultiplicativeExpression	v * ( 1L << 15 )		1068633	1		*			
ANR	1068739	Identifier	v		1068633	0					
ANR	1068740	ShiftExpression	1L << 15		1068633	1		<<			
ANR	1068741	PrimaryExpression	1L		1068633	0					
ANR	1068742	PrimaryExpression	15		1068633	1					
ANR	1068743	ExpressionStatement	luv ++	1146:2:29245:29250	1068633	6	True				
ANR	1068744	PostIncDecOperationExpression	luv ++		1068633	0					
ANR	1068745	Identifier	luv		1068633	0					
ANR	1068746	IncDec	++		1068633	1					
ANR	1068747	ReturnType	static void		1068633	1					
ANR	1068748	Identifier	Luv32toLuv48		1068633	2					
ANR	1068749	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		1068633	3					
ANR	1068750	Parameter	LogLuvState * sp	1133:13:28912:28926	1068633	0	True				
ANR	1068751	ParameterType	LogLuvState *		1068633	0					
ANR	1068752	Identifier	sp		1068633	1					
ANR	1068753	Parameter	uint8 * op	1133:30:28929:28937	1068633	1	True				
ANR	1068754	ParameterType	uint8 *		1068633	0					
ANR	1068755	Identifier	op		1068633	1					
ANR	1068756	Parameter	tmsize_t n	1133:41:28940:28949	1068633	2	True				
ANR	1068757	ParameterType	tmsize_t		1068633	0					
ANR	1068758	Identifier	n		1068633	1					
ANR	1068759	CFGEntryNode	ENTRY		1068633		True				
ANR	1068760	CFGExitNode	EXIT		1068633		True				
ANR	1068761	Symbol	* sp		1068633						
ANR	1068762	Symbol	op		1068633						
ANR	1068763	Symbol	luv3		1068633						
ANR	1068764	Symbol	u		1068633						
ANR	1068765	Symbol	v		1068633						
ANR	1068766	Symbol	* luv		1068633						
ANR	1068767	Symbol	sp -> tbuf		1068633						
ANR	1068768	Symbol	* luv3 ++		1068633						
ANR	1068769	Symbol	UVSCALE		1068633						
ANR	1068770	Symbol	luv		1068633						
ANR	1068771	Symbol	sp		1068633						
ANR	1068772	Symbol	n		1068633						
ANR	1068773	Function	Luv32toRGB	1150:0:29258:29493							
ANR	1068774	FunctionDef	"Luv32toRGB (LogLuvState * sp , uint8 * op , tmsize_t n)"		1068773	0					
ANR	1068775	CompoundStatement		1152:0:29321:29493	1068773	0					
ANR	1068776	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1153:1:29324:29356	1068773	0	True				
ANR	1068777	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		1068773	0					
ANR	1068778	IdentifierDeclType	uint32 *		1068773	0					
ANR	1068779	Identifier	luv		1068773	1					
ANR	1068780	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		1068773	2		=			
ANR	1068781	Identifier	luv		1068773	0					
ANR	1068782	CastExpression	( uint32 * ) sp -> tbuf		1068773	1					
ANR	1068783	CastTarget	uint32 *		1068773	0					
ANR	1068784	PtrMemberAccess	sp -> tbuf		1068773	1					
ANR	1068785	Identifier	sp		1068773	0					
ANR	1068786	Identifier	tbuf		1068773	1					
ANR	1068787	IdentifierDeclStatement	uint8 * rgb = ( uint8 * ) op ;	1154:1:29361:29385	1068773	1	True				
ANR	1068788	IdentifierDecl	* rgb = ( uint8 * ) op		1068773	0					
ANR	1068789	IdentifierDeclType	uint8 *		1068773	0					
ANR	1068790	Identifier	rgb		1068773	1					
ANR	1068791	AssignmentExpression	* rgb = ( uint8 * ) op		1068773	2		=			
ANR	1068792	Identifier	rgb		1068773	0					
ANR	1068793	CastExpression	( uint8 * ) op		1068773	1					
ANR	1068794	CastTarget	uint8 *		1068773	0					
ANR	1068795	Identifier	op		1068773	1					
ANR	1068796	WhileStatement	while ( n -- > 0 )		1068773	2					
ANR	1068797	Condition	n -- > 0	1156:8:29396:29402	1068773	0	True				
ANR	1068798	RelationalExpression	n -- > 0		1068773	0		>			
ANR	1068799	PostIncDecOperationExpression	n --		1068773	0					
ANR	1068800	Identifier	n		1068773	0					
ANR	1068801	IncDec	--		1068773	1					
ANR	1068802	PrimaryExpression	0		1068773	1					
ANR	1068803	CompoundStatement		6:2:87:99	1068773	1					
ANR	1068804	IdentifierDeclStatement	float xyz [ 3 ] ;	1157:2:29409:29421	1068773	0	True				
ANR	1068805	IdentifierDecl	xyz [ 3 ]		1068773	0					
ANR	1068806	IdentifierDeclType	float [ 3 ]		1068773	0					
ANR	1068807	Identifier	xyz		1068773	1					
ANR	1068808	PrimaryExpression	3		1068773	2					
ANR	1068809	ExpressionStatement	"LogLuv32toXYZ ( * luv ++ , xyz )"	1159:2:29426:29452	1068773	1	True				
ANR	1068810	CallExpression	"LogLuv32toXYZ ( * luv ++ , xyz )"		1068773	0					
ANR	1068811	Callee	LogLuv32toXYZ		1068773	0					
ANR	1068812	Identifier	LogLuv32toXYZ		1068773	0					
ANR	1068813	ArgumentList	* luv ++		1068773	1					
ANR	1068814	Argument	* luv ++		1068773	0					
ANR	1068815	UnaryOperationExpression	* luv ++		1068773	0					
ANR	1068816	UnaryOperator	*		1068773	0					
ANR	1068817	PostIncDecOperationExpression	luv ++		1068773	1					
ANR	1068818	Identifier	luv		1068773	0					
ANR	1068819	IncDec	++		1068773	1					
ANR	1068820	Argument	xyz		1068773	1					
ANR	1068821	Identifier	xyz		1068773	0					
ANR	1068822	ExpressionStatement	"XYZtoRGB24 ( xyz , rgb )"	1160:2:29456:29476	1068773	2	True				
ANR	1068823	CallExpression	"XYZtoRGB24 ( xyz , rgb )"		1068773	0					
ANR	1068824	Callee	XYZtoRGB24		1068773	0					
ANR	1068825	Identifier	XYZtoRGB24		1068773	0					
ANR	1068826	ArgumentList	xyz		1068773	1					
ANR	1068827	Argument	xyz		1068773	0					
ANR	1068828	Identifier	xyz		1068773	0					
ANR	1068829	Argument	rgb		1068773	1					
ANR	1068830	Identifier	rgb		1068773	0					
ANR	1068831	ExpressionStatement	rgb += 3	1161:2:29480:29488	1068773	3	True				
ANR	1068832	AssignmentExpression	rgb += 3		1068773	0		+=			
ANR	1068833	Identifier	rgb		1068773	0					
ANR	1068834	PrimaryExpression	3		1068773	1					
ANR	1068835	ReturnType	static void		1068773	1					
ANR	1068836	Identifier	Luv32toRGB		1068773	2					
ANR	1068837	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		1068773	3					
ANR	1068838	Parameter	LogLuvState * sp	1151:11:29281:29295	1068773	0	True				
ANR	1068839	ParameterType	LogLuvState *		1068773	0					
ANR	1068840	Identifier	sp		1068773	1					
ANR	1068841	Parameter	uint8 * op	1151:28:29298:29306	1068773	1	True				
ANR	1068842	ParameterType	uint8 *		1068773	0					
ANR	1068843	Identifier	op		1068773	1					
ANR	1068844	Parameter	tmsize_t n	1151:39:29309:29318	1068773	2	True				
ANR	1068845	ParameterType	tmsize_t		1068773	0					
ANR	1068846	Identifier	n		1068773	1					
ANR	1068847	CFGEntryNode	ENTRY		1068773		True				
ANR	1068848	CFGExitNode	EXIT		1068773		True				
ANR	1068849	Symbol	* sp		1068773						
ANR	1068850	Symbol	op		1068773						
ANR	1068851	Symbol	* luv ++		1068773						
ANR	1068852	Symbol	xyz		1068773						
ANR	1068853	Symbol	sp -> tbuf		1068773						
ANR	1068854	Symbol	luv		1068773						
ANR	1068855	Symbol	rgb		1068773						
ANR	1068856	Symbol	sp		1068773						
ANR	1068857	Symbol	n		1068773						
ANR	1068858	Function	Luv32fromXYZ	1165:0:29496:29712							
ANR	1068859	FunctionDef	"Luv32fromXYZ (LogLuvState * sp , uint8 * op , tmsize_t n)"		1068858	0					
ANR	1068860	CompoundStatement		1167:0:29561:29712	1068858	0					
ANR	1068861	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1168:1:29564:29596	1068858	0	True				
ANR	1068862	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		1068858	0					
ANR	1068863	IdentifierDeclType	uint32 *		1068858	0					
ANR	1068864	Identifier	luv		1068858	1					
ANR	1068865	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		1068858	2		=			
ANR	1068866	Identifier	luv		1068858	0					
ANR	1068867	CastExpression	( uint32 * ) sp -> tbuf		1068858	1					
ANR	1068868	CastTarget	uint32 *		1068858	0					
ANR	1068869	PtrMemberAccess	sp -> tbuf		1068858	1					
ANR	1068870	Identifier	sp		1068858	0					
ANR	1068871	Identifier	tbuf		1068858	1					
ANR	1068872	IdentifierDeclStatement	float * xyz = ( float * ) op ;	1169:1:29601:29625	1068858	1	True				
ANR	1068873	IdentifierDecl	* xyz = ( float * ) op		1068858	0					
ANR	1068874	IdentifierDeclType	float *		1068858	0					
ANR	1068875	Identifier	xyz		1068858	1					
ANR	1068876	AssignmentExpression	* xyz = ( float * ) op		1068858	2		=			
ANR	1068877	Identifier	xyz		1068858	0					
ANR	1068878	CastExpression	( float * ) op		1068858	1					
ANR	1068879	CastTarget	float *		1068858	0					
ANR	1068880	Identifier	op		1068858	1					
ANR	1068881	WhileStatement	while ( n -- > 0 )		1068858	2					
ANR	1068882	Condition	n -- > 0	1171:8:29636:29642	1068858	0	True				
ANR	1068883	RelationalExpression	n -- > 0		1068858	0		>			
ANR	1068884	PostIncDecOperationExpression	n --		1068858	0					
ANR	1068885	Identifier	n		1068858	0					
ANR	1068886	IncDec	--		1068858	1					
ANR	1068887	PrimaryExpression	0		1068858	1					
ANR	1068888	CompoundStatement		5:17:83:83	1068858	1					
ANR	1068889	ExpressionStatement	"* luv ++ = LogLuv32fromXYZ ( xyz , sp -> encode_meth )"	1172:2:29649:29695	1068858	0	True				
ANR	1068890	AssignmentExpression	"* luv ++ = LogLuv32fromXYZ ( xyz , sp -> encode_meth )"		1068858	0		=			
ANR	1068891	UnaryOperationExpression	* luv ++		1068858	0					
ANR	1068892	UnaryOperator	*		1068858	0					
ANR	1068893	PostIncDecOperationExpression	luv ++		1068858	1					
ANR	1068894	Identifier	luv		1068858	0					
ANR	1068895	IncDec	++		1068858	1					
ANR	1068896	CallExpression	"LogLuv32fromXYZ ( xyz , sp -> encode_meth )"		1068858	1					
ANR	1068897	Callee	LogLuv32fromXYZ		1068858	0					
ANR	1068898	Identifier	LogLuv32fromXYZ		1068858	0					
ANR	1068899	ArgumentList	xyz		1068858	1					
ANR	1068900	Argument	xyz		1068858	0					
ANR	1068901	Identifier	xyz		1068858	0					
ANR	1068902	Argument	sp -> encode_meth		1068858	1					
ANR	1068903	PtrMemberAccess	sp -> encode_meth		1068858	0					
ANR	1068904	Identifier	sp		1068858	0					
ANR	1068905	Identifier	encode_meth		1068858	1					
ANR	1068906	ExpressionStatement	xyz += 3	1173:2:29699:29707	1068858	1	True				
ANR	1068907	AssignmentExpression	xyz += 3		1068858	0		+=			
ANR	1068908	Identifier	xyz		1068858	0					
ANR	1068909	PrimaryExpression	3		1068858	1					
ANR	1068910	ReturnType	static void		1068858	1					
ANR	1068911	Identifier	Luv32fromXYZ		1068858	2					
ANR	1068912	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		1068858	3					
ANR	1068913	Parameter	LogLuvState * sp	1166:13:29521:29535	1068858	0	True				
ANR	1068914	ParameterType	LogLuvState *		1068858	0					
ANR	1068915	Identifier	sp		1068858	1					
ANR	1068916	Parameter	uint8 * op	1166:30:29538:29546	1068858	1	True				
ANR	1068917	ParameterType	uint8 *		1068858	0					
ANR	1068918	Identifier	op		1068858	1					
ANR	1068919	Parameter	tmsize_t n	1166:41:29549:29558	1068858	2	True				
ANR	1068920	ParameterType	tmsize_t		1068858	0					
ANR	1068921	Identifier	n		1068858	1					
ANR	1068922	CFGEntryNode	ENTRY		1068858		True				
ANR	1068923	CFGExitNode	EXIT		1068858		True				
ANR	1068924	Symbol	* sp		1068858						
ANR	1068925	Symbol	op		1068858						
ANR	1068926	Symbol	* luv ++		1068858						
ANR	1068927	Symbol	LogLuv32fromXYZ		1068858						
ANR	1068928	Symbol	xyz		1068858						
ANR	1068929	Symbol	sp -> tbuf		1068858						
ANR	1068930	Symbol	sp -> encode_meth		1068858						
ANR	1068931	Symbol	luv		1068858						
ANR	1068932	Symbol	sp		1068858						
ANR	1068933	Symbol	n		1068858						
ANR	1068934	Function	Luv32fromLuv48	1177:0:29715:30287							
ANR	1068935	FunctionDef	"Luv32fromLuv48 (LogLuvState * sp , uint8 * op , tmsize_t n)"		1068934	0					
ANR	1068936	CompoundStatement		1179:0:29782:30287	1068934	0					
ANR	1068937	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1180:1:29785:29817	1068934	0	True				
ANR	1068938	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		1068934	0					
ANR	1068939	IdentifierDeclType	uint32 *		1068934	0					
ANR	1068940	Identifier	luv		1068934	1					
ANR	1068941	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		1068934	2		=			
ANR	1068942	Identifier	luv		1068934	0					
ANR	1068943	CastExpression	( uint32 * ) sp -> tbuf		1068934	1					
ANR	1068944	CastTarget	uint32 *		1068934	0					
ANR	1068945	PtrMemberAccess	sp -> tbuf		1068934	1					
ANR	1068946	Identifier	sp		1068934	0					
ANR	1068947	Identifier	tbuf		1068934	1					
ANR	1068948	IdentifierDeclStatement	int16 * luv3 = ( int16 * ) op ;	1181:1:29820:29845	1068934	1	True				
ANR	1068949	IdentifierDecl	* luv3 = ( int16 * ) op		1068934	0					
ANR	1068950	IdentifierDeclType	int16 *		1068934	0					
ANR	1068951	Identifier	luv3		1068934	1					
ANR	1068952	AssignmentExpression	* luv3 = ( int16 * ) op		1068934	2		=			
ANR	1068953	Identifier	luv3		1068934	0					
ANR	1068954	CastExpression	( int16 * ) op		1068934	1					
ANR	1068955	CastTarget	int16 *		1068934	0					
ANR	1068956	Identifier	op		1068934	1					
ANR	1068957	IfStatement	if ( sp -> encode_meth == SGILOGENCODE_NODITHER )		1068934	2					
ANR	1068958	Condition	sp -> encode_meth == SGILOGENCODE_NODITHER	1183:5:29853:29892	1068934	0	True				
ANR	1068959	EqualityExpression	sp -> encode_meth == SGILOGENCODE_NODITHER		1068934	0		==			
ANR	1068960	PtrMemberAccess	sp -> encode_meth		1068934	0					
ANR	1068961	Identifier	sp		1068934	0					
ANR	1068962	Identifier	encode_meth		1068934	1					
ANR	1068963	Identifier	SGILOGENCODE_NODITHER		1068934	1					
ANR	1068964	CompoundStatement		5:47:112:112	1068934	1					
ANR	1068965	WhileStatement	while ( n -- > 0 )		1068934	0					
ANR	1068966	Condition	n -- > 0	1184:9:29906:29912	1068934	0	True				
ANR	1068967	RelationalExpression	n -- > 0		1068934	0		>			
ANR	1068968	PostIncDecOperationExpression	n --		1068934	0					
ANR	1068969	Identifier	n		1068934	0					
ANR	1068970	IncDec	--		1068934	1					
ANR	1068971	PrimaryExpression	0		1068934	1					
ANR	1068972	CompoundStatement		6:18:132:132	1068934	1					
ANR	1068973	ExpressionStatement	* luv ++ = ( uint32 ) luv3 [ 0 ] << 16 | ( luv3 [ 1 ] * ( uint32 ) ( UVSCALE + .5 ) >> 7 & 0xff00 ) | ( luv3 [ 2 ] * ( uint32 ) ( UVSCALE + .5 ) >> 15 & 0xff )	1185:3:29920:30051	1068934	0	True				
ANR	1068974	AssignmentExpression	* luv ++ = ( uint32 ) luv3 [ 0 ] << 16 | ( luv3 [ 1 ] * ( uint32 ) ( UVSCALE + .5 ) >> 7 & 0xff00 ) | ( luv3 [ 2 ] * ( uint32 ) ( UVSCALE + .5 ) >> 15 & 0xff )		1068934	0		=			
ANR	1068975	UnaryOperationExpression	* luv ++		1068934	0					
ANR	1068976	UnaryOperator	*		1068934	0					
ANR	1068977	PostIncDecOperationExpression	luv ++		1068934	1					
ANR	1068978	Identifier	luv		1068934	0					
ANR	1068979	IncDec	++		1068934	1					
ANR	1068980	InclusiveOrExpression	( uint32 ) luv3 [ 0 ] << 16 | ( luv3 [ 1 ] * ( uint32 ) ( UVSCALE + .5 ) >> 7 & 0xff00 ) | ( luv3 [ 2 ] * ( uint32 ) ( UVSCALE + .5 ) >> 15 & 0xff )		1068934	1		|			
ANR	1068981	ShiftExpression	( uint32 ) luv3 [ 0 ] << 16		1068934	0		<<			
ANR	1068982	CastExpression	( uint32 ) luv3 [ 0 ]		1068934	0					
ANR	1068983	CastTarget	uint32		1068934	0					
ANR	1068984	ArrayIndexing	luv3 [ 0 ]		1068934	1					
ANR	1068985	Identifier	luv3		1068934	0					
ANR	1068986	PrimaryExpression	0		1068934	1					
ANR	1068987	PrimaryExpression	16		1068934	1					
ANR	1068988	InclusiveOrExpression	( luv3 [ 1 ] * ( uint32 ) ( UVSCALE + .5 ) >> 7 & 0xff00 ) | ( luv3 [ 2 ] * ( uint32 ) ( UVSCALE + .5 ) >> 15 & 0xff )		1068934	1		|			
ANR	1068989	BitAndExpression	luv3 [ 1 ] * ( uint32 ) ( UVSCALE + .5 ) >> 7 & 0xff00		1068934	0		&			
ANR	1068990	ShiftExpression	luv3 [ 1 ] * ( uint32 ) ( UVSCALE + .5 ) >> 7		1068934	0		>>			
ANR	1068991	MultiplicativeExpression	luv3 [ 1 ] * ( uint32 ) ( UVSCALE + .5 )		1068934	0		*			
ANR	1068992	ArrayIndexing	luv3 [ 1 ]		1068934	0					
ANR	1068993	Identifier	luv3		1068934	0					
ANR	1068994	PrimaryExpression	1		1068934	1					
ANR	1068995	CastExpression	( uint32 ) ( UVSCALE + .5 )		1068934	1					
ANR	1068996	CastTarget	uint32		1068934	0					
ANR	1068997	AdditiveExpression	UVSCALE + .5		1068934	1		+			
ANR	1068998	Identifier	UVSCALE		1068934	0					
ANR	1068999	PrimaryExpression	.5		1068934	1					
ANR	1069000	PrimaryExpression	7		1068934	1					
ANR	1069001	PrimaryExpression	0xff00		1068934	1					
ANR	1069002	BitAndExpression	luv3 [ 2 ] * ( uint32 ) ( UVSCALE + .5 ) >> 15 & 0xff		1068934	1		&			
ANR	1069003	ShiftExpression	luv3 [ 2 ] * ( uint32 ) ( UVSCALE + .5 ) >> 15		1068934	0		>>			
ANR	1069004	MultiplicativeExpression	luv3 [ 2 ] * ( uint32 ) ( UVSCALE + .5 )		1068934	0		*			
ANR	1069005	ArrayIndexing	luv3 [ 2 ]		1068934	0					
ANR	1069006	Identifier	luv3		1068934	0					
ANR	1069007	PrimaryExpression	2		1068934	1					
ANR	1069008	CastExpression	( uint32 ) ( UVSCALE + .5 )		1068934	1					
ANR	1069009	CastTarget	uint32		1068934	0					
ANR	1069010	AdditiveExpression	UVSCALE + .5		1068934	1		+			
ANR	1069011	Identifier	UVSCALE		1068934	0					
ANR	1069012	PrimaryExpression	.5		1068934	1					
ANR	1069013	PrimaryExpression	15		1068934	1					
ANR	1069014	PrimaryExpression	0xff		1068934	1					
ANR	1069015	ExpressionStatement	luv3 += 3	1188:3:30056:30065	1068934	1	True				
ANR	1069016	AssignmentExpression	luv3 += 3		1068934	0		+=			
ANR	1069017	Identifier	luv3		1068934	0					
ANR	1069018	PrimaryExpression	3		1068934	1					
ANR	1069019	ReturnStatement	return ;	1190:2:30073:30079	1068934	1	True				
ANR	1069020	WhileStatement	while ( n -- > 0 )		1068934	3					
ANR	1069021	Condition	n -- > 0	1192:8:30092:30098	1068934	0	True				
ANR	1069022	RelationalExpression	n -- > 0		1068934	0		>			
ANR	1069023	PostIncDecOperationExpression	n --		1068934	0					
ANR	1069024	Identifier	n		1068934	0					
ANR	1069025	IncDec	--		1068934	1					
ANR	1069026	PrimaryExpression	0		1068934	1					
ANR	1069027	CompoundStatement		14:17:318:318	1068934	1					
ANR	1069028	ExpressionStatement	"* luv ++ = ( uint32 ) luv3 [ 0 ] << 16 | ( itrunc ( luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) << 8 & 0xff00 ) | ( itrunc ( luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) & 0xff )"	1193:2:30105:30269	1068934	0	True				
ANR	1069029	AssignmentExpression	"* luv ++ = ( uint32 ) luv3 [ 0 ] << 16 | ( itrunc ( luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) << 8 & 0xff00 ) | ( itrunc ( luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) & 0xff )"		1068934	0		=			
ANR	1069030	UnaryOperationExpression	* luv ++		1068934	0					
ANR	1069031	UnaryOperator	*		1068934	0					
ANR	1069032	PostIncDecOperationExpression	luv ++		1068934	1					
ANR	1069033	Identifier	luv		1068934	0					
ANR	1069034	IncDec	++		1068934	1					
ANR	1069035	InclusiveOrExpression	"( uint32 ) luv3 [ 0 ] << 16 | ( itrunc ( luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) << 8 & 0xff00 ) | ( itrunc ( luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) & 0xff )"		1068934	1		|			
ANR	1069036	ShiftExpression	( uint32 ) luv3 [ 0 ] << 16		1068934	0		<<			
ANR	1069037	CastExpression	( uint32 ) luv3 [ 0 ]		1068934	0					
ANR	1069038	CastTarget	uint32		1068934	0					
ANR	1069039	ArrayIndexing	luv3 [ 0 ]		1068934	1					
ANR	1069040	Identifier	luv3		1068934	0					
ANR	1069041	PrimaryExpression	0		1068934	1					
ANR	1069042	PrimaryExpression	16		1068934	1					
ANR	1069043	InclusiveOrExpression	"( itrunc ( luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) << 8 & 0xff00 ) | ( itrunc ( luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) & 0xff )"		1068934	1		|			
ANR	1069044	BitAndExpression	"itrunc ( luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) << 8 & 0xff00"		1068934	0		&			
ANR	1069045	ShiftExpression	"itrunc ( luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) << 8"		1068934	0		<<			
ANR	1069046	CallExpression	"itrunc ( luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth )"		1068934	0					
ANR	1069047	Callee	itrunc		1068934	0					
ANR	1069048	Identifier	itrunc		1068934	0					
ANR	1069049	ArgumentList	luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) )		1068934	1					
ANR	1069050	Argument	luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) )		1068934	0					
ANR	1069051	MultiplicativeExpression	luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) )		1068934	0		*			
ANR	1069052	ArrayIndexing	luv3 [ 1 ]		1068934	0					
ANR	1069053	Identifier	luv3		1068934	0					
ANR	1069054	PrimaryExpression	1		1068934	1					
ANR	1069055	MultiplicativeExpression	UVSCALE / ( 1 << 15 )		1068934	1		/			
ANR	1069056	Identifier	UVSCALE		1068934	0					
ANR	1069057	ShiftExpression	1 << 15		1068934	1		<<			
ANR	1069058	PrimaryExpression	1		1068934	0					
ANR	1069059	PrimaryExpression	15		1068934	1					
ANR	1069060	Argument	sp -> encode_meth		1068934	1					
ANR	1069061	PtrMemberAccess	sp -> encode_meth		1068934	0					
ANR	1069062	Identifier	sp		1068934	0					
ANR	1069063	Identifier	encode_meth		1068934	1					
ANR	1069064	PrimaryExpression	8		1068934	1					
ANR	1069065	PrimaryExpression	0xff00		1068934	1					
ANR	1069066	BitAndExpression	"itrunc ( luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) & 0xff"		1068934	1		&			
ANR	1069067	CallExpression	"itrunc ( luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth )"		1068934	0					
ANR	1069068	Callee	itrunc		1068934	0					
ANR	1069069	Identifier	itrunc		1068934	0					
ANR	1069070	ArgumentList	luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) )		1068934	1					
ANR	1069071	Argument	luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) )		1068934	0					
ANR	1069072	MultiplicativeExpression	luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) )		1068934	0		*			
ANR	1069073	ArrayIndexing	luv3 [ 2 ]		1068934	0					
ANR	1069074	Identifier	luv3		1068934	0					
ANR	1069075	PrimaryExpression	2		1068934	1					
ANR	1069076	MultiplicativeExpression	UVSCALE / ( 1 << 15 )		1068934	1		/			
ANR	1069077	Identifier	UVSCALE		1068934	0					
ANR	1069078	ShiftExpression	1 << 15		1068934	1		<<			
ANR	1069079	PrimaryExpression	1		1068934	0					
ANR	1069080	PrimaryExpression	15		1068934	1					
ANR	1069081	Argument	sp -> encode_meth		1068934	1					
ANR	1069082	PtrMemberAccess	sp -> encode_meth		1068934	0					
ANR	1069083	Identifier	sp		1068934	0					
ANR	1069084	Identifier	encode_meth		1068934	1					
ANR	1069085	PrimaryExpression	0xff		1068934	1					
ANR	1069086	ExpressionStatement	luv3 += 3	1196:2:30273:30282	1068934	1	True				
ANR	1069087	AssignmentExpression	luv3 += 3		1068934	0		+=			
ANR	1069088	Identifier	luv3		1068934	0					
ANR	1069089	PrimaryExpression	3		1068934	1					
ANR	1069090	ReturnType	static void		1068934	1					
ANR	1069091	Identifier	Luv32fromLuv48		1068934	2					
ANR	1069092	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		1068934	3					
ANR	1069093	Parameter	LogLuvState * sp	1178:15:29742:29756	1068934	0	True				
ANR	1069094	ParameterType	LogLuvState *		1068934	0					
ANR	1069095	Identifier	sp		1068934	1					
ANR	1069096	Parameter	uint8 * op	1178:32:29759:29767	1068934	1	True				
ANR	1069097	ParameterType	uint8 *		1068934	0					
ANR	1069098	Identifier	op		1068934	1					
ANR	1069099	Parameter	tmsize_t n	1178:43:29770:29779	1068934	2	True				
ANR	1069100	ParameterType	tmsize_t		1068934	0					
ANR	1069101	Identifier	n		1068934	1					
ANR	1069102	CFGEntryNode	ENTRY		1068934		True				
ANR	1069103	CFGExitNode	EXIT		1068934		True				
ANR	1069104	Symbol	* sp		1068934						
ANR	1069105	Symbol	op		1068934						
ANR	1069106	Symbol	SGILOGENCODE_NODITHER		1068934						
ANR	1069107	Symbol	* luv ++		1068934						
ANR	1069108	Symbol	itrunc		1068934						
ANR	1069109	Symbol	UVSCALE		1068934						
ANR	1069110	Symbol	luv		1068934						
ANR	1069111	Symbol	n		1068934						
ANR	1069112	Symbol	luv3		1068934						
ANR	1069113	Symbol	sp -> tbuf		1068934						
ANR	1069114	Symbol	sp -> encode_meth		1068934						
ANR	1069115	Symbol	sp		1068934						
ANR	1069116	Symbol	* luv3		1068934						
ANR	1069117	Function	_logLuvNop	1200:0:30290:30388							
ANR	1069118	FunctionDef	"_logLuvNop (LogLuvState * sp , uint8 * op , tmsize_t n)"		1069117	0					
ANR	1069119	CompoundStatement		1202:0:30353:30388	1069117	0					
ANR	1069120	ExpressionStatement	( void ) sp	1203:1:30356:30365	1069117	0	True				
ANR	1069121	CastExpression	( void ) sp		1069117	0					
ANR	1069122	CastTarget	void		1069117	0					
ANR	1069123	Identifier	sp		1069117	1					
ANR	1069124	ExpressionStatement	( void ) op	1203:12:30367:30376	1069117	1	True				
ANR	1069125	CastExpression	( void ) op		1069117	0					
ANR	1069126	CastTarget	void		1069117	0					
ANR	1069127	Identifier	op		1069117	1					
ANR	1069128	ExpressionStatement	( void ) n	1203:23:30378:30386	1069117	2	True				
ANR	1069129	CastExpression	( void ) n		1069117	0					
ANR	1069130	CastTarget	void		1069117	0					
ANR	1069131	Identifier	n		1069117	1					
ANR	1069132	ReturnType	static void		1069117	1					
ANR	1069133	Identifier	_logLuvNop		1069117	2					
ANR	1069134	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		1069117	3					
ANR	1069135	Parameter	LogLuvState * sp	1201:11:30313:30327	1069117	0	True				
ANR	1069136	ParameterType	LogLuvState *		1069117	0					
ANR	1069137	Identifier	sp		1069117	1					
ANR	1069138	Parameter	uint8 * op	1201:28:30330:30338	1069117	1	True				
ANR	1069139	ParameterType	uint8 *		1069117	0					
ANR	1069140	Identifier	op		1069117	1					
ANR	1069141	Parameter	tmsize_t n	1201:39:30341:30350	1069117	2	True				
ANR	1069142	ParameterType	tmsize_t		1069117	0					
ANR	1069143	Identifier	n		1069117	1					
ANR	1069144	CFGEntryNode	ENTRY		1069117		True				
ANR	1069145	CFGExitNode	EXIT		1069117		True				
ANR	1069146	Symbol	op		1069117						
ANR	1069147	Symbol	sp		1069117						
ANR	1069148	Symbol	n		1069117						
ANR	1069149	Function	LogL16GuessDataFmt	1206:0:30391:30942							
ANR	1069150	FunctionDef	LogL16GuessDataFmt (TIFFDirectory * td)		1069149	0					
ANR	1069151	CompoundStatement		1208:0:30440:30942	1069149	0					
ANR	1069152	Statement	define	1209:1:30443:30448	1069149	0	True				
ANR	1069153	Statement	PACK	1209:8:30450:30453	1069149	1	True				
ANR	1069154	Statement	(	1209:12:30454:30454	1069149	2	True				
ANR	1069155	Statement	s	1209:13:30455:30455	1069149	3	True				
ANR	1069156	Statement	","	1209:14:30456:30456	1069149	4	True				
ANR	1069157	Statement	b	1209:15:30457:30457	1069149	5	True				
ANR	1069158	Statement	","	1209:16:30458:30458	1069149	6	True				
ANR	1069159	Statement	f	1209:17:30459:30459	1069149	7	True				
ANR	1069160	Statement	)	1209:18:30460:30460	1069149	8	True				
ANR	1069161	Statement	(	1209:20:30462:30462	1069149	9	True				
ANR	1069162	Statement	(	1209:21:30463:30463	1069149	10	True				
ANR	1069163	Statement	(	1209:22:30464:30464	1069149	11	True				
ANR	1069164	Statement	b	1209:23:30465:30465	1069149	12	True				
ANR	1069165	Statement	)	1209:24:30466:30466	1069149	13	True				
ANR	1069166	Statement	<<	1209:25:30467:30468	1069149	14	True				
ANR	1069167	Statement	6	1209:27:30469:30469	1069149	15	True				
ANR	1069168	Statement	)	1209:28:30470:30470	1069149	16	True				
ANR	1069169	Statement	|	1209:29:30471:30471	1069149	17	True				
ANR	1069170	Statement	(	1209:30:30472:30472	1069149	18	True				
ANR	1069171	Statement	(	1209:31:30473:30473	1069149	19	True				
ANR	1069172	Statement	s	1209:32:30474:30474	1069149	20	True				
ANR	1069173	Statement	)	1209:33:30475:30475	1069149	21	True				
ANR	1069174	Statement	<<	1209:34:30476:30477	1069149	22	True				
ANR	1069175	Statement	3	1209:36:30478:30478	1069149	23	True				
ANR	1069176	Statement	)	1209:37:30479:30479	1069149	24	True				
ANR	1069177	Statement	|	1209:38:30480:30480	1069149	25	True				
ANR	1069178	Statement	(	1209:39:30481:30481	1069149	26	True				
ANR	1069179	Statement	f	1209:40:30482:30482	1069149	27	True				
ANR	1069180	Statement	)	1209:41:30483:30483	1069149	28	True				
ANR	1069181	Statement	)	1209:42:30484:30484	1069149	29	True				
ANR	1069182	SwitchStatement	"switch ( PACK ( td -> td_samplesperpixel , td -> td_bitspersample , td -> td_sampleformat ) )"		1069149	30					
ANR	1069183	Condition	"PACK ( td -> td_samplesperpixel , td -> td_bitspersample , td -> td_sampleformat )"	1210:9:30495:30565	1069149	0	True				
ANR	1069184	CallExpression	"PACK ( td -> td_samplesperpixel , td -> td_bitspersample , td -> td_sampleformat )"		1069149	0					
ANR	1069185	Callee	PACK		1069149	0					
ANR	1069186	Identifier	PACK		1069149	0					
ANR	1069187	ArgumentList	td -> td_samplesperpixel		1069149	1					
ANR	1069188	Argument	td -> td_samplesperpixel		1069149	0					
ANR	1069189	PtrMemberAccess	td -> td_samplesperpixel		1069149	0					
ANR	1069190	Identifier	td		1069149	0					
ANR	1069191	Identifier	td_samplesperpixel		1069149	1					
ANR	1069192	Argument	td -> td_bitspersample		1069149	1					
ANR	1069193	PtrMemberAccess	td -> td_bitspersample		1069149	0					
ANR	1069194	Identifier	td		1069149	0					
ANR	1069195	Identifier	td_bitspersample		1069149	1					
ANR	1069196	Argument	td -> td_sampleformat		1069149	2					
ANR	1069197	PtrMemberAccess	td -> td_sampleformat		1069149	0					
ANR	1069198	Identifier	td		1069149	0					
ANR	1069199	Identifier	td_sampleformat		1069149	1					
ANR	1069200	CompoundStatement		3:82:127:127	1069149	1					
ANR	1069201	Statement	case	1211:1:30571:30574	1069149	0	True				
ANR	1069202	Statement	PACK	1211:6:30576:30579	1069149	1	True				
ANR	1069203	Statement	(	1211:10:30580:30580	1069149	2	True				
ANR	1069204	Statement	1	1211:11:30581:30581	1069149	3	True				
ANR	1069205	Statement	","	1211:12:30582:30582	1069149	4	True				
ANR	1069206	Statement	32	1211:14:30584:30585	1069149	5	True				
ANR	1069207	Statement	","	1211:16:30586:30586	1069149	6	True				
ANR	1069208	Statement	SAMPLEFORMAT_IEEEFP	1211:18:30588:30606	1069149	7	True				
ANR	1069209	Statement	)	1211:37:30607:30607	1069149	8	True				
ANR	1069210	Statement	:	1211:38:30608:30608	1069149	9	True				
ANR	1069211	ReturnStatement	return ( SGILOGDATAFMT_FLOAT ) ;	1212:2:30612:30640	1069149	10	True				
ANR	1069212	Identifier	SGILOGDATAFMT_FLOAT		1069149	0					
ANR	1069213	Statement	case	1213:1:30643:30646	1069149	11	True				
ANR	1069214	Statement	PACK	1213:6:30648:30651	1069149	12	True				
ANR	1069215	Statement	(	1213:10:30652:30652	1069149	13	True				
ANR	1069216	Statement	1	1213:11:30653:30653	1069149	14	True				
ANR	1069217	Statement	","	1213:12:30654:30654	1069149	15	True				
ANR	1069218	Statement	16	1213:14:30656:30657	1069149	16	True				
ANR	1069219	Statement	","	1213:16:30658:30658	1069149	17	True				
ANR	1069220	Statement	SAMPLEFORMAT_VOID	1213:18:30660:30676	1069149	18	True				
ANR	1069221	Statement	)	1213:35:30677:30677	1069149	19	True				
ANR	1069222	Statement	:	1213:36:30678:30678	1069149	20	True				
ANR	1069223	Statement	case	1214:1:30681:30684	1069149	21	True				
ANR	1069224	Statement	PACK	1214:6:30686:30689	1069149	22	True				
ANR	1069225	Statement	(	1214:10:30690:30690	1069149	23	True				
ANR	1069226	Statement	1	1214:11:30691:30691	1069149	24	True				
ANR	1069227	Statement	","	1214:12:30692:30692	1069149	25	True				
ANR	1069228	Statement	16	1214:14:30694:30695	1069149	26	True				
ANR	1069229	Statement	","	1214:16:30696:30696	1069149	27	True				
ANR	1069230	Statement	SAMPLEFORMAT_INT	1214:18:30698:30713	1069149	28	True				
ANR	1069231	Statement	)	1214:34:30714:30714	1069149	29	True				
ANR	1069232	Statement	:	1214:35:30715:30715	1069149	30	True				
ANR	1069233	Statement	case	1215:1:30718:30721	1069149	31	True				
ANR	1069234	Statement	PACK	1215:6:30723:30726	1069149	32	True				
ANR	1069235	Statement	(	1215:10:30727:30727	1069149	33	True				
ANR	1069236	Statement	1	1215:11:30728:30728	1069149	34	True				
ANR	1069237	Statement	","	1215:12:30729:30729	1069149	35	True				
ANR	1069238	Statement	16	1215:14:30731:30732	1069149	36	True				
ANR	1069239	Statement	","	1215:16:30733:30733	1069149	37	True				
ANR	1069240	Statement	SAMPLEFORMAT_UINT	1215:18:30735:30751	1069149	38	True				
ANR	1069241	Statement	)	1215:35:30752:30752	1069149	39	True				
ANR	1069242	Statement	:	1215:36:30753:30753	1069149	40	True				
ANR	1069243	ReturnStatement	return ( SGILOGDATAFMT_16BIT ) ;	1216:2:30757:30785	1069149	41	True				
ANR	1069244	Identifier	SGILOGDATAFMT_16BIT		1069149	0					
ANR	1069245	Statement	case	1217:1:30788:30791	1069149	42	True				
ANR	1069246	Statement	PACK	1217:6:30793:30796	1069149	43	True				
ANR	1069247	Statement	(	1217:10:30797:30797	1069149	44	True				
ANR	1069248	Statement	1	1217:11:30798:30798	1069149	45	True				
ANR	1069249	Statement	","	1217:12:30799:30799	1069149	46	True				
ANR	1069250	Statement	8	1217:15:30802:30802	1069149	47	True				
ANR	1069251	Statement	","	1217:16:30803:30803	1069149	48	True				
ANR	1069252	Statement	SAMPLEFORMAT_VOID	1217:18:30805:30821	1069149	49	True				
ANR	1069253	Statement	)	1217:35:30822:30822	1069149	50	True				
ANR	1069254	Statement	:	1217:36:30823:30823	1069149	51	True				
ANR	1069255	Statement	case	1218:1:30826:30829	1069149	52	True				
ANR	1069256	Statement	PACK	1218:6:30831:30834	1069149	53	True				
ANR	1069257	Statement	(	1218:10:30835:30835	1069149	54	True				
ANR	1069258	Statement	1	1218:11:30836:30836	1069149	55	True				
ANR	1069259	Statement	","	1218:12:30837:30837	1069149	56	True				
ANR	1069260	Statement	8	1218:15:30840:30840	1069149	57	True				
ANR	1069261	Statement	","	1218:16:30841:30841	1069149	58	True				
ANR	1069262	Statement	SAMPLEFORMAT_UINT	1218:18:30843:30859	1069149	59	True				
ANR	1069263	Statement	)	1218:35:30860:30860	1069149	60	True				
ANR	1069264	Statement	:	1218:36:30861:30861	1069149	61	True				
ANR	1069265	ReturnStatement	return ( SGILOGDATAFMT_8BIT ) ;	1219:2:30865:30892	1069149	62	True				
ANR	1069266	Identifier	SGILOGDATAFMT_8BIT		1069149	0					
ANR	1069267	Statement	undef	1221:1:30898:30902	1069149	31	True				
ANR	1069268	Statement	PACK	1221:7:30904:30907	1069149	32	True				
ANR	1069269	ReturnStatement	return ( SGILOGDATAFMT_UNKNOWN ) ;	1222:1:30910:30940	1069149	33	True				
ANR	1069270	Identifier	SGILOGDATAFMT_UNKNOWN		1069149	0					
ANR	1069271	ReturnType	static int		1069149	1					
ANR	1069272	Identifier	LogL16GuessDataFmt		1069149	2					
ANR	1069273	ParameterList	TIFFDirectory * td		1069149	3					
ANR	1069274	Parameter	TIFFDirectory * td	1207:19:30421:30437	1069149	0	True				
ANR	1069275	ParameterType	TIFFDirectory *		1069149	0					
ANR	1069276	Identifier	td		1069149	1					
ANR	1069277	CFGEntryNode	ENTRY		1069149		True				
ANR	1069278	CFGExitNode	EXIT		1069149		True				
ANR	1069279	Symbol	td		1069149						
ANR	1069280	Symbol	td -> td_samplesperpixel		1069149						
ANR	1069281	Symbol	td -> td_sampleformat		1069149						
ANR	1069282	Symbol	* td		1069149						
ANR	1069283	Symbol	SGILOGDATAFMT_16BIT		1069149						
ANR	1069284	Symbol	SGILOGDATAFMT_8BIT		1069149						
ANR	1069285	Symbol	SGILOGDATAFMT_UNKNOWN		1069149						
ANR	1069286	Symbol	SGILOGDATAFMT_FLOAT		1069149						
ANR	1069287	Symbol	PACK		1069149						
ANR	1069288	Symbol	td -> td_bitspersample		1069149						
ANR	1069289	Function	multiply_ms	1225:0:30945:31087							
ANR	1069290	FunctionDef	"multiply_ms (tmsize_t m1 , tmsize_t m2)"		1069289	0					
ANR	1069291	CompoundStatement		1227:0:30999:31087	1069289	0					
ANR	1069292	IdentifierDeclStatement	tmsize_t bytes = m1 * m2 ;	1228:1:31002:31026	1069289	0	True				
ANR	1069293	IdentifierDecl	bytes = m1 * m2		1069289	0					
ANR	1069294	IdentifierDeclType	tmsize_t		1069289	0					
ANR	1069295	Identifier	bytes		1069289	1					
ANR	1069296	AssignmentExpression	bytes = m1 * m2		1069289	2		=			
ANR	1069297	Identifier	bytes		1069289	0					
ANR	1069298	MultiplicativeExpression	m1 * m2		1069289	1		*			
ANR	1069299	Identifier	m1		1069289	0					
ANR	1069300	Identifier	m2		1069289	1					
ANR	1069301	IfStatement	if ( m1 && bytes / m1 != m2 )		1069289	1					
ANR	1069302	Condition	m1 && bytes / m1 != m2	1230:5:31034:31055	1069289	0	True				
ANR	1069303	AndExpression	m1 && bytes / m1 != m2		1069289	0		&&			
ANR	1069304	Identifier	m1		1069289	0					
ANR	1069305	EqualityExpression	bytes / m1 != m2		1069289	1		!=			
ANR	1069306	MultiplicativeExpression	bytes / m1		1069289	0		/			
ANR	1069307	Identifier	bytes		1069289	0					
ANR	1069308	Identifier	m1		1069289	1					
ANR	1069309	Identifier	m2		1069289	1					
ANR	1069310	ExpressionStatement	bytes = 0	1231:2:31060:31069	1069289	1	True				
ANR	1069311	AssignmentExpression	bytes = 0		1069289	0		=			
ANR	1069312	Identifier	bytes		1069289	0					
ANR	1069313	PrimaryExpression	0		1069289	1					
ANR	1069314	ReturnStatement	return bytes ;	1233:1:31073:31085	1069289	2	True				
ANR	1069315	Identifier	bytes		1069289	0					
ANR	1069316	ReturnType	static tmsize_t		1069289	1					
ANR	1069317	Identifier	multiply_ms		1069289	2					
ANR	1069318	ParameterList	"tmsize_t m1 , tmsize_t m2"		1069289	3					
ANR	1069319	Parameter	tmsize_t m1	1226:12:30973:30983	1069289	0	True				
ANR	1069320	ParameterType	tmsize_t		1069289	0					
ANR	1069321	Identifier	m1		1069289	1					
ANR	1069322	Parameter	tmsize_t m2	1226:25:30986:30996	1069289	1	True				
ANR	1069323	ParameterType	tmsize_t		1069289	0					
ANR	1069324	Identifier	m2		1069289	1					
ANR	1069325	CFGEntryNode	ENTRY		1069289		True				
ANR	1069326	CFGExitNode	EXIT		1069289		True				
ANR	1069327	Symbol	m1		1069289						
ANR	1069328	Symbol	m2		1069289						
ANR	1069329	Symbol	bytes		1069289						
ANR	1069330	Function	LogL16InitState	1236:0:31090:32296							
ANR	1069331	FunctionDef	LogL16InitState (TIFF * tif)		1069330	0					
ANR	1069332	CompoundStatement		1238:0:31128:32296	1069330	0					
ANR	1069333	Statement	static	1239:1:31131:31136	1069330	0	True				
ANR	1069334	IdentifierDeclStatement	"const char module [ ] = ""LogL16InitState"" ;"	1239:8:31138:31177	1069330	1	True				
ANR	1069335	IdentifierDecl	"module [ ] = ""LogL16InitState"""		1069330	0					
ANR	1069336	IdentifierDeclType	const char [ ]		1069330	0					
ANR	1069337	Identifier	module		1069330	1					
ANR	1069338	AssignmentExpression	"module [ ] = ""LogL16InitState"""		1069330	2		=			
ANR	1069339	Identifier	module		1069330	0					
ANR	1069340	PrimaryExpression	"""LogL16InitState"""		1069330	1					
ANR	1069341	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	1240:1:31180:31213	1069330	2	True				
ANR	1069342	IdentifierDecl	* td = & tif -> tif_dir		1069330	0					
ANR	1069343	IdentifierDeclType	TIFFDirectory *		1069330	0					
ANR	1069344	Identifier	td		1069330	1					
ANR	1069345	AssignmentExpression	* td = & tif -> tif_dir		1069330	2		=			
ANR	1069346	Identifier	td		1069330	0					
ANR	1069347	UnaryOperationExpression	& tif -> tif_dir		1069330	1					
ANR	1069348	UnaryOperator	&		1069330	0					
ANR	1069349	PtrMemberAccess	tif -> tif_dir		1069330	1					
ANR	1069350	Identifier	tif		1069330	0					
ANR	1069351	Identifier	tif_dir		1069330	1					
ANR	1069352	IdentifierDeclStatement	LogLuvState * sp = DecoderState ( tif ) ;	1241:1:31216:31251	1069330	3	True				
ANR	1069353	IdentifierDecl	* sp = DecoderState ( tif )		1069330	0					
ANR	1069354	IdentifierDeclType	LogLuvState *		1069330	0					
ANR	1069355	Identifier	sp		1069330	1					
ANR	1069356	AssignmentExpression	* sp = DecoderState ( tif )		1069330	2		=			
ANR	1069357	Identifier	sp		1069330	0					
ANR	1069358	CallExpression	DecoderState ( tif )		1069330	1					
ANR	1069359	Callee	DecoderState		1069330	0					
ANR	1069360	Identifier	DecoderState		1069330	0					
ANR	1069361	ArgumentList	tif		1069330	1					
ANR	1069362	Argument	tif		1069330	0					
ANR	1069363	Identifier	tif		1069330	0					
ANR	1069364	ExpressionStatement	assert ( sp != NULL )	1243:1:31255:31273	1069330	4	True				
ANR	1069365	CallExpression	assert ( sp != NULL )		1069330	0					
ANR	1069366	Callee	assert		1069330	0					
ANR	1069367	Identifier	assert		1069330	0					
ANR	1069368	ArgumentList	sp != NULL		1069330	1					
ANR	1069369	Argument	sp != NULL		1069330	0					
ANR	1069370	EqualityExpression	sp != NULL		1069330	0		!=			
ANR	1069371	Identifier	sp		1069330	0					
ANR	1069372	Identifier	NULL		1069330	1					
ANR	1069373	ExpressionStatement	assert ( td -> td_photometric == PHOTOMETRIC_LOGL )	1244:1:31276:31322	1069330	5	True				
ANR	1069374	CallExpression	assert ( td -> td_photometric == PHOTOMETRIC_LOGL )		1069330	0					
ANR	1069375	Callee	assert		1069330	0					
ANR	1069376	Identifier	assert		1069330	0					
ANR	1069377	ArgumentList	td -> td_photometric == PHOTOMETRIC_LOGL		1069330	1					
ANR	1069378	Argument	td -> td_photometric == PHOTOMETRIC_LOGL		1069330	0					
ANR	1069379	EqualityExpression	td -> td_photometric == PHOTOMETRIC_LOGL		1069330	0		==			
ANR	1069380	PtrMemberAccess	td -> td_photometric		1069330	0					
ANR	1069381	Identifier	td		1069330	0					
ANR	1069382	Identifier	td_photometric		1069330	1					
ANR	1069383	Identifier	PHOTOMETRIC_LOGL		1069330	1					
ANR	1069384	IfStatement	if ( sp -> user_datafmt == SGILOGDATAFMT_UNKNOWN )		1069330	6					
ANR	1069385	Condition	sp -> user_datafmt == SGILOGDATAFMT_UNKNOWN	1247:5:31389:31429	1069330	0	True				
ANR	1069386	EqualityExpression	sp -> user_datafmt == SGILOGDATAFMT_UNKNOWN		1069330	0		==			
ANR	1069387	PtrMemberAccess	sp -> user_datafmt		1069330	0					
ANR	1069388	Identifier	sp		1069330	0					
ANR	1069389	Identifier	user_datafmt		1069330	1					
ANR	1069390	Identifier	SGILOGDATAFMT_UNKNOWN		1069330	1					
ANR	1069391	ExpressionStatement	sp -> user_datafmt = LogL16GuessDataFmt ( td )	1248:2:31434:31475	1069330	1	True				
ANR	1069392	AssignmentExpression	sp -> user_datafmt = LogL16GuessDataFmt ( td )		1069330	0		=			
ANR	1069393	PtrMemberAccess	sp -> user_datafmt		1069330	0					
ANR	1069394	Identifier	sp		1069330	0					
ANR	1069395	Identifier	user_datafmt		1069330	1					
ANR	1069396	CallExpression	LogL16GuessDataFmt ( td )		1069330	1					
ANR	1069397	Callee	LogL16GuessDataFmt		1069330	0					
ANR	1069398	Identifier	LogL16GuessDataFmt		1069330	0					
ANR	1069399	ArgumentList	td		1069330	1					
ANR	1069400	Argument	td		1069330	0					
ANR	1069401	Identifier	td		1069330	0					
ANR	1069402	SwitchStatement	switch ( sp -> user_datafmt )		1069330	7					
ANR	1069403	Condition	sp -> user_datafmt	1249:9:31486:31501	1069330	0	True				
ANR	1069404	PtrMemberAccess	sp -> user_datafmt		1069330	0					
ANR	1069405	Identifier	sp		1069330	0					
ANR	1069406	Identifier	user_datafmt		1069330	1					
ANR	1069407	CompoundStatement		12:27:375:375	1069330	1					
ANR	1069408	Label	case SGILOGDATAFMT_FLOAT :	1250:1:31507:31531	1069330	0	True				
ANR	1069409	Identifier	SGILOGDATAFMT_FLOAT		1069330	0					
ANR	1069410	ExpressionStatement	sp -> pixel_size = sizeof ( float )	1251:2:31535:31566	1069330	1	True				
ANR	1069411	AssignmentExpression	sp -> pixel_size = sizeof ( float )		1069330	0		=			
ANR	1069412	PtrMemberAccess	sp -> pixel_size		1069330	0					
ANR	1069413	Identifier	sp		1069330	0					
ANR	1069414	Identifier	pixel_size		1069330	1					
ANR	1069415	SizeofExpression	sizeof ( float )		1069330	1					
ANR	1069416	Sizeof	sizeof		1069330	0					
ANR	1069417	SizeofOperand	float		1069330	1					
ANR	1069418	BreakStatement	break ;	1252:2:31570:31575	1069330	2	True				
ANR	1069419	Label	case SGILOGDATAFMT_16BIT :	1253:1:31578:31602	1069330	3	True				
ANR	1069420	Identifier	SGILOGDATAFMT_16BIT		1069330	0					
ANR	1069421	ExpressionStatement	sp -> pixel_size = sizeof ( int16 )	1254:2:31606:31637	1069330	4	True				
ANR	1069422	AssignmentExpression	sp -> pixel_size = sizeof ( int16 )		1069330	0		=			
ANR	1069423	PtrMemberAccess	sp -> pixel_size		1069330	0					
ANR	1069424	Identifier	sp		1069330	0					
ANR	1069425	Identifier	pixel_size		1069330	1					
ANR	1069426	SizeofExpression	sizeof ( int16 )		1069330	1					
ANR	1069427	Sizeof	sizeof		1069330	0					
ANR	1069428	SizeofOperand	int16		1069330	1					
ANR	1069429	BreakStatement	break ;	1255:2:31641:31646	1069330	5	True				
ANR	1069430	Label	case SGILOGDATAFMT_8BIT :	1256:1:31649:31672	1069330	6	True				
ANR	1069431	Identifier	SGILOGDATAFMT_8BIT		1069330	0					
ANR	1069432	ExpressionStatement	sp -> pixel_size = sizeof ( uint8 )	1257:2:31676:31707	1069330	7	True				
ANR	1069433	AssignmentExpression	sp -> pixel_size = sizeof ( uint8 )		1069330	0		=			
ANR	1069434	PtrMemberAccess	sp -> pixel_size		1069330	0					
ANR	1069435	Identifier	sp		1069330	0					
ANR	1069436	Identifier	pixel_size		1069330	1					
ANR	1069437	SizeofExpression	sizeof ( uint8 )		1069330	1					
ANR	1069438	Sizeof	sizeof		1069330	0					
ANR	1069439	SizeofOperand	uint8		1069330	1					
ANR	1069440	BreakStatement	break ;	1258:2:31711:31716	1069330	8	True				
ANR	1069441	Label	default :	1259:1:31719:31726	1069330	9	True				
ANR	1069442	Identifier	default		1069330	0					
ANR	1069443	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No support for converting user data format to LogL"" )"	1260:2:31730:31831	1069330	10	True				
ANR	1069444	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No support for converting user data format to LogL"" )"		1069330	0					
ANR	1069445	Callee	TIFFErrorExt		1069330	0					
ANR	1069446	Identifier	TIFFErrorExt		1069330	0					
ANR	1069447	ArgumentList	tif -> tif_clientdata		1069330	1					
ANR	1069448	Argument	tif -> tif_clientdata		1069330	0					
ANR	1069449	PtrMemberAccess	tif -> tif_clientdata		1069330	0					
ANR	1069450	Identifier	tif		1069330	0					
ANR	1069451	Identifier	tif_clientdata		1069330	1					
ANR	1069452	Argument	module		1069330	1					
ANR	1069453	Identifier	module		1069330	0					
ANR	1069454	Argument	"""No support for converting user data format to LogL"""		1069330	2					
ANR	1069455	PrimaryExpression	"""No support for converting user data format to LogL"""		1069330	0					
ANR	1069456	ReturnStatement	return ( 0 ) ;	1262:2:31835:31845	1069330	11	True				
ANR	1069457	PrimaryExpression	0		1069330	0					
ANR	1069458	IfStatement	if ( isTiled ( tif ) )		1069330	8					
ANR	1069459	Condition	isTiled ( tif )	1264:12:31862:31873	1069330	0	True				
ANR	1069460	CallExpression	isTiled ( tif )		1069330	0					
ANR	1069461	Callee	isTiled		1069330	0					
ANR	1069462	Identifier	isTiled		1069330	0					
ANR	1069463	ArgumentList	tif		1069330	1					
ANR	1069464	Argument	tif		1069330	0					
ANR	1069465	Identifier	tif		1069330	0					
ANR	1069466	ExpressionStatement	"sp -> tbuflen = multiply_ms ( td -> td_tilewidth , td -> td_tilelength )"	1265:12:31889:31951	1069330	1	True				
ANR	1069467	AssignmentExpression	"sp -> tbuflen = multiply_ms ( td -> td_tilewidth , td -> td_tilelength )"		1069330	0		=			
ANR	1069468	PtrMemberAccess	sp -> tbuflen		1069330	0					
ANR	1069469	Identifier	sp		1069330	0					
ANR	1069470	Identifier	tbuflen		1069330	1					
ANR	1069471	CallExpression	"multiply_ms ( td -> td_tilewidth , td -> td_tilelength )"		1069330	1					
ANR	1069472	Callee	multiply_ms		1069330	0					
ANR	1069473	Identifier	multiply_ms		1069330	0					
ANR	1069474	ArgumentList	td -> td_tilewidth		1069330	1					
ANR	1069475	Argument	td -> td_tilewidth		1069330	0					
ANR	1069476	PtrMemberAccess	td -> td_tilewidth		1069330	0					
ANR	1069477	Identifier	td		1069330	0					
ANR	1069478	Identifier	td_tilewidth		1069330	1					
ANR	1069479	Argument	td -> td_tilelength		1069330	1					
ANR	1069480	PtrMemberAccess	td -> td_tilelength		1069330	0					
ANR	1069481	Identifier	td		1069330	0					
ANR	1069482	Identifier	td_tilelength		1069330	1					
ANR	1069483	ElseStatement	else		1069330	0					
ANR	1069484	ExpressionStatement	"sp -> tbuflen = multiply_ms ( td -> td_imagewidth , td -> td_rowsperstrip )"	1267:12:31978:32043	1069330	0	True				
ANR	1069485	AssignmentExpression	"sp -> tbuflen = multiply_ms ( td -> td_imagewidth , td -> td_rowsperstrip )"		1069330	0		=			
ANR	1069486	PtrMemberAccess	sp -> tbuflen		1069330	0					
ANR	1069487	Identifier	sp		1069330	0					
ANR	1069488	Identifier	tbuflen		1069330	1					
ANR	1069489	CallExpression	"multiply_ms ( td -> td_imagewidth , td -> td_rowsperstrip )"		1069330	1					
ANR	1069490	Callee	multiply_ms		1069330	0					
ANR	1069491	Identifier	multiply_ms		1069330	0					
ANR	1069492	ArgumentList	td -> td_imagewidth		1069330	1					
ANR	1069493	Argument	td -> td_imagewidth		1069330	0					
ANR	1069494	PtrMemberAccess	td -> td_imagewidth		1069330	0					
ANR	1069495	Identifier	td		1069330	0					
ANR	1069496	Identifier	td_imagewidth		1069330	1					
ANR	1069497	Argument	td -> td_rowsperstrip		1069330	1					
ANR	1069498	PtrMemberAccess	td -> td_rowsperstrip		1069330	0					
ANR	1069499	Identifier	td		1069330	0					
ANR	1069500	Identifier	td_rowsperstrip		1069330	1					
ANR	1069501	IfStatement	"if ( multiply_ms ( sp -> tbuflen , sizeof ( int16 ) ) == 0 || ( sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( int16 ) ) ) == NULL )"		1069330	9					
ANR	1069502	Condition	"multiply_ms ( sp -> tbuflen , sizeof ( int16 ) ) == 0 || ( sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( int16 ) ) ) == NULL"	1268:5:32050:32174	1069330	0	True				
ANR	1069503	OrExpression	"multiply_ms ( sp -> tbuflen , sizeof ( int16 ) ) == 0 || ( sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( int16 ) ) ) == NULL"		1069330	0		||			
ANR	1069504	EqualityExpression	"multiply_ms ( sp -> tbuflen , sizeof ( int16 ) ) == 0"		1069330	0		==			
ANR	1069505	CallExpression	"multiply_ms ( sp -> tbuflen , sizeof ( int16 ) )"		1069330	0					
ANR	1069506	Callee	multiply_ms		1069330	0					
ANR	1069507	Identifier	multiply_ms		1069330	0					
ANR	1069508	ArgumentList	sp -> tbuflen		1069330	1					
ANR	1069509	Argument	sp -> tbuflen		1069330	0					
ANR	1069510	PtrMemberAccess	sp -> tbuflen		1069330	0					
ANR	1069511	Identifier	sp		1069330	0					
ANR	1069512	Identifier	tbuflen		1069330	1					
ANR	1069513	Argument	sizeof ( int16 )		1069330	1					
ANR	1069514	SizeofExpression	sizeof ( int16 )		1069330	0					
ANR	1069515	Sizeof	sizeof		1069330	0					
ANR	1069516	SizeofOperand	int16		1069330	1					
ANR	1069517	PrimaryExpression	0		1069330	1					
ANR	1069518	EqualityExpression	( sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( int16 ) ) ) == NULL		1069330	1		==			
ANR	1069519	AssignmentExpression	sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( int16 ) )		1069330	0		=			
ANR	1069520	PtrMemberAccess	sp -> tbuf		1069330	0					
ANR	1069521	Identifier	sp		1069330	0					
ANR	1069522	Identifier	tbuf		1069330	1					
ANR	1069523	CastExpression	( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( int16 ) )		1069330	1					
ANR	1069524	CastTarget	uint8 *		1069330	0					
ANR	1069525	CallExpression	_TIFFmalloc ( sp -> tbuflen * sizeof ( int16 ) )		1069330	1					
ANR	1069526	Callee	_TIFFmalloc		1069330	0					
ANR	1069527	Identifier	_TIFFmalloc		1069330	0					
ANR	1069528	ArgumentList	sp -> tbuflen * sizeof ( int16 )		1069330	1					
ANR	1069529	Argument	sp -> tbuflen * sizeof ( int16 )		1069330	0					
ANR	1069530	MultiplicativeExpression	sp -> tbuflen * sizeof ( int16 )		1069330	0		*			
ANR	1069531	PtrMemberAccess	sp -> tbuflen		1069330	0					
ANR	1069532	Identifier	sp		1069330	0					
ANR	1069533	Identifier	tbuflen		1069330	1					
ANR	1069534	SizeofExpression	sizeof ( int16 )		1069330	1					
ANR	1069535	Sizeof	sizeof		1069330	0					
ANR	1069536	SizeofOperand	int16		1069330	1					
ANR	1069537	Identifier	NULL		1069330	1					
ANR	1069538	CompoundStatement		32:78:1048:1048	1069330	1					
ANR	1069539	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No space for SGILog translation buffer"" )"	1270:2:32181:32264	1069330	0	True				
ANR	1069540	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No space for SGILog translation buffer"" )"		1069330	0					
ANR	1069541	Callee	TIFFErrorExt		1069330	0					
ANR	1069542	Identifier	TIFFErrorExt		1069330	0					
ANR	1069543	ArgumentList	tif -> tif_clientdata		1069330	1					
ANR	1069544	Argument	tif -> tif_clientdata		1069330	0					
ANR	1069545	PtrMemberAccess	tif -> tif_clientdata		1069330	0					
ANR	1069546	Identifier	tif		1069330	0					
ANR	1069547	Identifier	tif_clientdata		1069330	1					
ANR	1069548	Argument	module		1069330	1					
ANR	1069549	Identifier	module		1069330	0					
ANR	1069550	Argument	"""No space for SGILog translation buffer"""		1069330	2					
ANR	1069551	PrimaryExpression	"""No space for SGILog translation buffer"""		1069330	0					
ANR	1069552	ReturnStatement	return ( 0 ) ;	1271:2:32268:32278	1069330	1	True				
ANR	1069553	PrimaryExpression	0		1069330	0					
ANR	1069554	ReturnStatement	return ( 1 ) ;	1273:1:32284:32294	1069330	10	True				
ANR	1069555	PrimaryExpression	1		1069330	0					
ANR	1069556	ReturnType	static int		1069330	1					
ANR	1069557	Identifier	LogL16InitState		1069330	2					
ANR	1069558	ParameterList	TIFF * tif		1069330	3					
ANR	1069559	Parameter	TIFF * tif	1237:16:31117:31125	1069330	0	True				
ANR	1069560	ParameterType	TIFF *		1069330	0					
ANR	1069561	Identifier	tif		1069330	1					
ANR	1069562	CFGEntryNode	ENTRY		1069330		True				
ANR	1069563	CFGExitNode	EXIT		1069330		True				
ANR	1069564	Symbol	* sp		1069330						
ANR	1069565	Symbol	& tif -> tif_dir		1069330						
ANR	1069566	Symbol	sp -> user_datafmt		1069330						
ANR	1069567	Symbol	td -> td_tilelength		1069330						
ANR	1069568	Symbol	tif		1069330						
ANR	1069569	Symbol	isTiled		1069330						
ANR	1069570	Symbol	sp -> tbuflen		1069330						
ANR	1069571	Symbol	LogL16GuessDataFmt		1069330						
ANR	1069572	Symbol	sp -> pixel_size		1069330						
ANR	1069573	Symbol	DecoderState		1069330						
ANR	1069574	Symbol	PHOTOMETRIC_LOGL		1069330						
ANR	1069575	Symbol	sp -> tbuf		1069330						
ANR	1069576	Symbol	SGILOGDATAFMT_UNKNOWN		1069330						
ANR	1069577	Symbol	sp		1069330						
ANR	1069578	Symbol	NULL		1069330						
ANR	1069579	Symbol	td -> td_imagewidth		1069330						
ANR	1069580	Symbol	module		1069330						
ANR	1069581	Symbol	td -> td_tilewidth		1069330						
ANR	1069582	Symbol	multiply_ms		1069330						
ANR	1069583	Symbol	tif -> tif_clientdata		1069330						
ANR	1069584	Symbol	td		1069330						
ANR	1069585	Symbol	* td		1069330						
ANR	1069586	Symbol	_TIFFmalloc		1069330						
ANR	1069587	Symbol	td -> td_photometric		1069330						
ANR	1069588	Symbol	* tif		1069330						
ANR	1069589	Symbol	td -> td_rowsperstrip		1069330						
ANR	1069590	Function	LogLuvGuessDataFmt	1276:0:32299:33422							
ANR	1069591	FunctionDef	LogLuvGuessDataFmt (TIFFDirectory * td)		1069590	0					
ANR	1069592	CompoundStatement		1278:0:32348:33422	1069590	0					
ANR	1069593	IdentifierDeclStatement	int guess ;	1279:1:32351:32360	1069590	0	True				
ANR	1069594	IdentifierDecl	guess		1069590	0					
ANR	1069595	IdentifierDeclType	int		1069590	0					
ANR	1069596	Identifier	guess		1069590	1					
ANR	1069597	Statement	define	1285:1:32467:32472	1069590	1	True				
ANR	1069598	Statement	PACK	1285:8:32474:32477	1069590	2	True				
ANR	1069599	Statement	(	1285:12:32478:32478	1069590	3	True				
ANR	1069600	Statement	a	1285:13:32479:32479	1069590	4	True				
ANR	1069601	Statement	","	1285:14:32480:32480	1069590	5	True				
ANR	1069602	Statement	b	1285:15:32481:32481	1069590	6	True				
ANR	1069603	Statement	)	1285:16:32482:32482	1069590	7	True				
ANR	1069604	Statement	(	1285:18:32484:32484	1069590	8	True				
ANR	1069605	Statement	(	1285:19:32485:32485	1069590	9	True				
ANR	1069606	Statement	(	1285:20:32486:32486	1069590	10	True				
ANR	1069607	Statement	a	1285:21:32487:32487	1069590	11	True				
ANR	1069608	Statement	)	1285:22:32488:32488	1069590	12	True				
ANR	1069609	Statement	<<	1285:23:32489:32490	1069590	13	True				
ANR	1069610	Statement	3	1285:25:32491:32491	1069590	14	True				
ANR	1069611	Statement	)	1285:26:32492:32492	1069590	15	True				
ANR	1069612	Statement	|	1285:27:32493:32493	1069590	16	True				
ANR	1069613	Statement	(	1285:28:32494:32494	1069590	17	True				
ANR	1069614	Statement	b	1285:29:32495:32495	1069590	18	True				
ANR	1069615	Statement	)	1285:30:32496:32496	1069590	19	True				
ANR	1069616	Statement	)	1285:31:32497:32497	1069590	20	True				
ANR	1069617	SwitchStatement	"switch ( PACK ( td -> td_bitspersample , td -> td_sampleformat ) )"		1069590	21					
ANR	1069618	Condition	"PACK ( td -> td_bitspersample , td -> td_sampleformat )"	1286:9:32508:32554	1069590	0	True				
ANR	1069619	CallExpression	"PACK ( td -> td_bitspersample , td -> td_sampleformat )"		1069590	0					
ANR	1069620	Callee	PACK		1069590	0					
ANR	1069621	Identifier	PACK		1069590	0					
ANR	1069622	ArgumentList	td -> td_bitspersample		1069590	1					
ANR	1069623	Argument	td -> td_bitspersample		1069590	0					
ANR	1069624	PtrMemberAccess	td -> td_bitspersample		1069590	0					
ANR	1069625	Identifier	td		1069590	0					
ANR	1069626	Identifier	td_bitspersample		1069590	1					
ANR	1069627	Argument	td -> td_sampleformat		1069590	1					
ANR	1069628	PtrMemberAccess	td -> td_sampleformat		1069590	0					
ANR	1069629	Identifier	td		1069590	0					
ANR	1069630	Identifier	td_sampleformat		1069590	1					
ANR	1069631	CompoundStatement		9:58:208:208	1069590	1					
ANR	1069632	Statement	case	1287:1:32560:32563	1069590	0	True				
ANR	1069633	Statement	PACK	1287:6:32565:32568	1069590	1	True				
ANR	1069634	Statement	(	1287:10:32569:32569	1069590	2	True				
ANR	1069635	Statement	32	1287:11:32570:32571	1069590	3	True				
ANR	1069636	Statement	","	1287:13:32572:32572	1069590	4	True				
ANR	1069637	Statement	SAMPLEFORMAT_IEEEFP	1287:15:32574:32592	1069590	5	True				
ANR	1069638	Statement	)	1287:34:32593:32593	1069590	6	True				
ANR	1069639	Statement	:	1287:35:32594:32594	1069590	7	True				
ANR	1069640	ExpressionStatement	guess = SGILOGDATAFMT_FLOAT	1288:2:32598:32625	1069590	8	True				
ANR	1069641	AssignmentExpression	guess = SGILOGDATAFMT_FLOAT		1069590	0		=			
ANR	1069642	Identifier	guess		1069590	0					
ANR	1069643	Identifier	SGILOGDATAFMT_FLOAT		1069590	1					
ANR	1069644	BreakStatement	break ;	1289:2:32629:32634	1069590	9	True				
ANR	1069645	Statement	case	1290:1:32637:32640	1069590	10	True				
ANR	1069646	Statement	PACK	1290:6:32642:32645	1069590	11	True				
ANR	1069647	Statement	(	1290:10:32646:32646	1069590	12	True				
ANR	1069648	Statement	32	1290:11:32647:32648	1069590	13	True				
ANR	1069649	Statement	","	1290:13:32649:32649	1069590	14	True				
ANR	1069650	Statement	SAMPLEFORMAT_VOID	1290:15:32651:32667	1069590	15	True				
ANR	1069651	Statement	)	1290:32:32668:32668	1069590	16	True				
ANR	1069652	Statement	:	1290:33:32669:32669	1069590	17	True				
ANR	1069653	Statement	case	1291:1:32672:32675	1069590	18	True				
ANR	1069654	Statement	PACK	1291:6:32677:32680	1069590	19	True				
ANR	1069655	Statement	(	1291:10:32681:32681	1069590	20	True				
ANR	1069656	Statement	32	1291:11:32682:32683	1069590	21	True				
ANR	1069657	Statement	","	1291:13:32684:32684	1069590	22	True				
ANR	1069658	Statement	SAMPLEFORMAT_UINT	1291:15:32686:32702	1069590	23	True				
ANR	1069659	Statement	)	1291:32:32703:32703	1069590	24	True				
ANR	1069660	Statement	:	1291:33:32704:32704	1069590	25	True				
ANR	1069661	Statement	case	1292:1:32707:32710	1069590	26	True				
ANR	1069662	Statement	PACK	1292:6:32712:32715	1069590	27	True				
ANR	1069663	Statement	(	1292:10:32716:32716	1069590	28	True				
ANR	1069664	Statement	32	1292:11:32717:32718	1069590	29	True				
ANR	1069665	Statement	","	1292:13:32719:32719	1069590	30	True				
ANR	1069666	Statement	SAMPLEFORMAT_INT	1292:15:32721:32736	1069590	31	True				
ANR	1069667	Statement	)	1292:31:32737:32737	1069590	32	True				
ANR	1069668	Statement	:	1292:32:32738:32738	1069590	33	True				
ANR	1069669	ExpressionStatement	guess = SGILOGDATAFMT_RAW	1293:2:32742:32767	1069590	34	True				
ANR	1069670	AssignmentExpression	guess = SGILOGDATAFMT_RAW		1069590	0		=			
ANR	1069671	Identifier	guess		1069590	0					
ANR	1069672	Identifier	SGILOGDATAFMT_RAW		1069590	1					
ANR	1069673	BreakStatement	break ;	1294:2:32771:32776	1069590	35	True				
ANR	1069674	Statement	case	1295:1:32779:32782	1069590	36	True				
ANR	1069675	Statement	PACK	1295:6:32784:32787	1069590	37	True				
ANR	1069676	Statement	(	1295:10:32788:32788	1069590	38	True				
ANR	1069677	Statement	16	1295:11:32789:32790	1069590	39	True				
ANR	1069678	Statement	","	1295:13:32791:32791	1069590	40	True				
ANR	1069679	Statement	SAMPLEFORMAT_VOID	1295:15:32793:32809	1069590	41	True				
ANR	1069680	Statement	)	1295:32:32810:32810	1069590	42	True				
ANR	1069681	Statement	:	1295:33:32811:32811	1069590	43	True				
ANR	1069682	Statement	case	1296:1:32814:32817	1069590	44	True				
ANR	1069683	Statement	PACK	1296:6:32819:32822	1069590	45	True				
ANR	1069684	Statement	(	1296:10:32823:32823	1069590	46	True				
ANR	1069685	Statement	16	1296:11:32824:32825	1069590	47	True				
ANR	1069686	Statement	","	1296:13:32826:32826	1069590	48	True				
ANR	1069687	Statement	SAMPLEFORMAT_INT	1296:15:32828:32843	1069590	49	True				
ANR	1069688	Statement	)	1296:31:32844:32844	1069590	50	True				
ANR	1069689	Statement	:	1296:32:32845:32845	1069590	51	True				
ANR	1069690	Statement	case	1297:1:32848:32851	1069590	52	True				
ANR	1069691	Statement	PACK	1297:6:32853:32856	1069590	53	True				
ANR	1069692	Statement	(	1297:10:32857:32857	1069590	54	True				
ANR	1069693	Statement	16	1297:11:32858:32859	1069590	55	True				
ANR	1069694	Statement	","	1297:13:32860:32860	1069590	56	True				
ANR	1069695	Statement	SAMPLEFORMAT_UINT	1297:15:32862:32878	1069590	57	True				
ANR	1069696	Statement	)	1297:32:32879:32879	1069590	58	True				
ANR	1069697	Statement	:	1297:33:32880:32880	1069590	59	True				
ANR	1069698	ExpressionStatement	guess = SGILOGDATAFMT_16BIT	1298:2:32884:32911	1069590	60	True				
ANR	1069699	AssignmentExpression	guess = SGILOGDATAFMT_16BIT		1069590	0		=			
ANR	1069700	Identifier	guess		1069590	0					
ANR	1069701	Identifier	SGILOGDATAFMT_16BIT		1069590	1					
ANR	1069702	BreakStatement	break ;	1299:2:32915:32920	1069590	61	True				
ANR	1069703	Statement	case	1300:1:32923:32926	1069590	62	True				
ANR	1069704	Statement	PACK	1300:6:32928:32931	1069590	63	True				
ANR	1069705	Statement	(	1300:10:32932:32932	1069590	64	True				
ANR	1069706	Statement	8	1300:12:32934:32934	1069590	65	True				
ANR	1069707	Statement	","	1300:13:32935:32935	1069590	66	True				
ANR	1069708	Statement	SAMPLEFORMAT_VOID	1300:15:32937:32953	1069590	67	True				
ANR	1069709	Statement	)	1300:32:32954:32954	1069590	68	True				
ANR	1069710	Statement	:	1300:33:32955:32955	1069590	69	True				
ANR	1069711	Statement	case	1301:1:32958:32961	1069590	70	True				
ANR	1069712	Statement	PACK	1301:6:32963:32966	1069590	71	True				
ANR	1069713	Statement	(	1301:10:32967:32967	1069590	72	True				
ANR	1069714	Statement	8	1301:12:32969:32969	1069590	73	True				
ANR	1069715	Statement	","	1301:13:32970:32970	1069590	74	True				
ANR	1069716	Statement	SAMPLEFORMAT_UINT	1301:15:32972:32988	1069590	75	True				
ANR	1069717	Statement	)	1301:32:32989:32989	1069590	76	True				
ANR	1069718	Statement	:	1301:33:32990:32990	1069590	77	True				
ANR	1069719	ExpressionStatement	guess = SGILOGDATAFMT_8BIT	1302:2:32994:33020	1069590	78	True				
ANR	1069720	AssignmentExpression	guess = SGILOGDATAFMT_8BIT		1069590	0		=			
ANR	1069721	Identifier	guess		1069590	0					
ANR	1069722	Identifier	SGILOGDATAFMT_8BIT		1069590	1					
ANR	1069723	BreakStatement	break ;	1303:2:33024:33029	1069590	79	True				
ANR	1069724	Label	default :	1304:1:33032:33039	1069590	80	True				
ANR	1069725	Identifier	default		1069590	0					
ANR	1069726	ExpressionStatement	guess = SGILOGDATAFMT_UNKNOWN	1305:2:33043:33072	1069590	81	True				
ANR	1069727	AssignmentExpression	guess = SGILOGDATAFMT_UNKNOWN		1069590	0		=			
ANR	1069728	Identifier	guess		1069590	0					
ANR	1069729	Identifier	SGILOGDATAFMT_UNKNOWN		1069590	1					
ANR	1069730	BreakStatement	break ;	1306:2:33076:33081	1069590	82	True				
ANR	1069731	Statement	undef	1307:1:33084:33088	1069590	83	True				
ANR	1069732	Statement	PACK	1307:7:33090:33093	1069590	84	True				
ANR	1069733	SwitchStatement	switch ( td -> td_samplesperpixel )		1069590	22					
ANR	1069734	Condition	td -> td_samplesperpixel	1312:9:33152:33173	1069590	0	True				
ANR	1069735	PtrMemberAccess	td -> td_samplesperpixel		1069590	0					
ANR	1069736	Identifier	td		1069590	0					
ANR	1069737	Identifier	td_samplesperpixel		1069590	1					
ANR	1069738	CompoundStatement		35:33:827:827	1069590	1					
ANR	1069739	Label	case 1 :	1313:1:33179:33185	1069590	0	True				
ANR	1069740	IfStatement	if ( guess != SGILOGDATAFMT_RAW )		1069590	1					
ANR	1069741	Condition	guess != SGILOGDATAFMT_RAW	1314:6:33193:33218	1069590	0	True				
ANR	1069742	EqualityExpression	guess != SGILOGDATAFMT_RAW		1069590	0		!=			
ANR	1069743	Identifier	guess		1069590	0					
ANR	1069744	Identifier	SGILOGDATAFMT_RAW		1069590	1					
ANR	1069745	ExpressionStatement	guess = SGILOGDATAFMT_UNKNOWN	1315:3:33224:33253	1069590	1	True				
ANR	1069746	AssignmentExpression	guess = SGILOGDATAFMT_UNKNOWN		1069590	0		=			
ANR	1069747	Identifier	guess		1069590	0					
ANR	1069748	Identifier	SGILOGDATAFMT_UNKNOWN		1069590	1					
ANR	1069749	BreakStatement	break ;	1316:2:33257:33262	1069590	2	True				
ANR	1069750	Label	case 3 :	1317:1:33265:33271	1069590	3	True				
ANR	1069751	IfStatement	if ( guess == SGILOGDATAFMT_RAW )		1069590	4					
ANR	1069752	Condition	guess == SGILOGDATAFMT_RAW	1318:6:33279:33304	1069590	0	True				
ANR	1069753	EqualityExpression	guess == SGILOGDATAFMT_RAW		1069590	0		==			
ANR	1069754	Identifier	guess		1069590	0					
ANR	1069755	Identifier	SGILOGDATAFMT_RAW		1069590	1					
ANR	1069756	ExpressionStatement	guess = SGILOGDATAFMT_UNKNOWN	1319:3:33310:33339	1069590	1	True				
ANR	1069757	AssignmentExpression	guess = SGILOGDATAFMT_UNKNOWN		1069590	0		=			
ANR	1069758	Identifier	guess		1069590	0					
ANR	1069759	Identifier	SGILOGDATAFMT_UNKNOWN		1069590	1					
ANR	1069760	BreakStatement	break ;	1320:2:33343:33348	1069590	5	True				
ANR	1069761	Label	default :	1321:1:33351:33358	1069590	6	True				
ANR	1069762	Identifier	default		1069590	0					
ANR	1069763	ExpressionStatement	guess = SGILOGDATAFMT_UNKNOWN	1322:2:33362:33391	1069590	7	True				
ANR	1069764	AssignmentExpression	guess = SGILOGDATAFMT_UNKNOWN		1069590	0		=			
ANR	1069765	Identifier	guess		1069590	0					
ANR	1069766	Identifier	SGILOGDATAFMT_UNKNOWN		1069590	1					
ANR	1069767	BreakStatement	break ;	1323:2:33395:33400	1069590	8	True				
ANR	1069768	ReturnStatement	return ( guess ) ;	1325:1:33406:33420	1069590	23	True				
ANR	1069769	Identifier	guess		1069590	0					
ANR	1069770	ReturnType	static int		1069590	1					
ANR	1069771	Identifier	LogLuvGuessDataFmt		1069590	2					
ANR	1069772	ParameterList	TIFFDirectory * td		1069590	3					
ANR	1069773	Parameter	TIFFDirectory * td	1277:19:32329:32345	1069590	0	True				
ANR	1069774	ParameterType	TIFFDirectory *		1069590	0					
ANR	1069775	Identifier	td		1069590	1					
ANR	1069776	CFGEntryNode	ENTRY		1069590		True				
ANR	1069777	CFGExitNode	EXIT		1069590		True				
ANR	1069778	Symbol	td		1069590						
ANR	1069779	Symbol	td -> td_samplesperpixel		1069590						
ANR	1069780	Symbol	guess		1069590						
ANR	1069781	Symbol	* td		1069590						
ANR	1069782	Symbol	td -> td_sampleformat		1069590						
ANR	1069783	Symbol	SGILOGDATAFMT_16BIT		1069590						
ANR	1069784	Symbol	SGILOGDATAFMT_8BIT		1069590						
ANR	1069785	Symbol	SGILOGDATAFMT_UNKNOWN		1069590						
ANR	1069786	Symbol	SGILOGDATAFMT_FLOAT		1069590						
ANR	1069787	Symbol	PACK		1069590						
ANR	1069788	Symbol	td -> td_bitspersample		1069590						
ANR	1069789	Symbol	SGILOGDATAFMT_RAW		1069590						
ANR	1069790	Function	LogLuvInitState	1328:0:33425:34888							
ANR	1069791	FunctionDef	LogLuvInitState (TIFF * tif)		1069790	0					
ANR	1069792	CompoundStatement		1330:0:33463:34888	1069790	0					
ANR	1069793	Statement	static	1331:1:33466:33471	1069790	0	True				
ANR	1069794	IdentifierDeclStatement	"const char module [ ] = ""LogLuvInitState"" ;"	1331:8:33473:33512	1069790	1	True				
ANR	1069795	IdentifierDecl	"module [ ] = ""LogLuvInitState"""		1069790	0					
ANR	1069796	IdentifierDeclType	const char [ ]		1069790	0					
ANR	1069797	Identifier	module		1069790	1					
ANR	1069798	AssignmentExpression	"module [ ] = ""LogLuvInitState"""		1069790	2		=			
ANR	1069799	Identifier	module		1069790	0					
ANR	1069800	PrimaryExpression	"""LogLuvInitState"""		1069790	1					
ANR	1069801	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	1332:1:33515:33548	1069790	2	True				
ANR	1069802	IdentifierDecl	* td = & tif -> tif_dir		1069790	0					
ANR	1069803	IdentifierDeclType	TIFFDirectory *		1069790	0					
ANR	1069804	Identifier	td		1069790	1					
ANR	1069805	AssignmentExpression	* td = & tif -> tif_dir		1069790	2		=			
ANR	1069806	Identifier	td		1069790	0					
ANR	1069807	UnaryOperationExpression	& tif -> tif_dir		1069790	1					
ANR	1069808	UnaryOperator	&		1069790	0					
ANR	1069809	PtrMemberAccess	tif -> tif_dir		1069790	1					
ANR	1069810	Identifier	tif		1069790	0					
ANR	1069811	Identifier	tif_dir		1069790	1					
ANR	1069812	IdentifierDeclStatement	LogLuvState * sp = DecoderState ( tif ) ;	1333:1:33551:33586	1069790	3	True				
ANR	1069813	IdentifierDecl	* sp = DecoderState ( tif )		1069790	0					
ANR	1069814	IdentifierDeclType	LogLuvState *		1069790	0					
ANR	1069815	Identifier	sp		1069790	1					
ANR	1069816	AssignmentExpression	* sp = DecoderState ( tif )		1069790	2		=			
ANR	1069817	Identifier	sp		1069790	0					
ANR	1069818	CallExpression	DecoderState ( tif )		1069790	1					
ANR	1069819	Callee	DecoderState		1069790	0					
ANR	1069820	Identifier	DecoderState		1069790	0					
ANR	1069821	ArgumentList	tif		1069790	1					
ANR	1069822	Argument	tif		1069790	0					
ANR	1069823	Identifier	tif		1069790	0					
ANR	1069824	ExpressionStatement	assert ( sp != NULL )	1335:1:33590:33608	1069790	4	True				
ANR	1069825	CallExpression	assert ( sp != NULL )		1069790	0					
ANR	1069826	Callee	assert		1069790	0					
ANR	1069827	Identifier	assert		1069790	0					
ANR	1069828	ArgumentList	sp != NULL		1069790	1					
ANR	1069829	Argument	sp != NULL		1069790	0					
ANR	1069830	EqualityExpression	sp != NULL		1069790	0		!=			
ANR	1069831	Identifier	sp		1069790	0					
ANR	1069832	Identifier	NULL		1069790	1					
ANR	1069833	ExpressionStatement	assert ( td -> td_photometric == PHOTOMETRIC_LOGLUV )	1336:1:33611:33659	1069790	5	True				
ANR	1069834	CallExpression	assert ( td -> td_photometric == PHOTOMETRIC_LOGLUV )		1069790	0					
ANR	1069835	Callee	assert		1069790	0					
ANR	1069836	Identifier	assert		1069790	0					
ANR	1069837	ArgumentList	td -> td_photometric == PHOTOMETRIC_LOGLUV		1069790	1					
ANR	1069838	Argument	td -> td_photometric == PHOTOMETRIC_LOGLUV		1069790	0					
ANR	1069839	EqualityExpression	td -> td_photometric == PHOTOMETRIC_LOGLUV		1069790	0		==			
ANR	1069840	PtrMemberAccess	td -> td_photometric		1069790	0					
ANR	1069841	Identifier	td		1069790	0					
ANR	1069842	Identifier	td_photometric		1069790	1					
ANR	1069843	Identifier	PHOTOMETRIC_LOGLUV		1069790	1					
ANR	1069844	IfStatement	if ( td -> td_planarconfig != PLANARCONFIG_CONTIG )		1069790	6					
ANR	1069845	Condition	td -> td_planarconfig != PLANARCONFIG_CONTIG	1339:5:33726:33767	1069790	0	True				
ANR	1069846	EqualityExpression	td -> td_planarconfig != PLANARCONFIG_CONTIG		1069790	0		!=			
ANR	1069847	PtrMemberAccess	td -> td_planarconfig		1069790	0					
ANR	1069848	Identifier	td		1069790	0					
ANR	1069849	Identifier	td_planarconfig		1069790	1					
ANR	1069850	Identifier	PLANARCONFIG_CONTIG		1069790	1					
ANR	1069851	CompoundStatement		10:49:306:306	1069790	1					
ANR	1069852	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""SGILog compression cannot handle non-contiguous data"" )"	1340:2:33774:33877	1069790	0	True				
ANR	1069853	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""SGILog compression cannot handle non-contiguous data"" )"		1069790	0					
ANR	1069854	Callee	TIFFErrorExt		1069790	0					
ANR	1069855	Identifier	TIFFErrorExt		1069790	0					
ANR	1069856	ArgumentList	tif -> tif_clientdata		1069790	1					
ANR	1069857	Argument	tif -> tif_clientdata		1069790	0					
ANR	1069858	PtrMemberAccess	tif -> tif_clientdata		1069790	0					
ANR	1069859	Identifier	tif		1069790	0					
ANR	1069860	Identifier	tif_clientdata		1069790	1					
ANR	1069861	Argument	module		1069790	1					
ANR	1069862	Identifier	module		1069790	0					
ANR	1069863	Argument	"""SGILog compression cannot handle non-contiguous data"""		1069790	2					
ANR	1069864	PrimaryExpression	"""SGILog compression cannot handle non-contiguous data"""		1069790	0					
ANR	1069865	ReturnStatement	return ( 0 ) ;	1342:2:33881:33891	1069790	1	True				
ANR	1069866	PrimaryExpression	0		1069790	0					
ANR	1069867	IfStatement	if ( sp -> user_datafmt == SGILOGDATAFMT_UNKNOWN )		1069790	7					
ANR	1069868	Condition	sp -> user_datafmt == SGILOGDATAFMT_UNKNOWN	1344:5:33901:33941	1069790	0	True				
ANR	1069869	EqualityExpression	sp -> user_datafmt == SGILOGDATAFMT_UNKNOWN		1069790	0		==			
ANR	1069870	PtrMemberAccess	sp -> user_datafmt		1069790	0					
ANR	1069871	Identifier	sp		1069790	0					
ANR	1069872	Identifier	user_datafmt		1069790	1					
ANR	1069873	Identifier	SGILOGDATAFMT_UNKNOWN		1069790	1					
ANR	1069874	ExpressionStatement	sp -> user_datafmt = LogLuvGuessDataFmt ( td )	1345:2:33946:33987	1069790	1	True				
ANR	1069875	AssignmentExpression	sp -> user_datafmt = LogLuvGuessDataFmt ( td )		1069790	0		=			
ANR	1069876	PtrMemberAccess	sp -> user_datafmt		1069790	0					
ANR	1069877	Identifier	sp		1069790	0					
ANR	1069878	Identifier	user_datafmt		1069790	1					
ANR	1069879	CallExpression	LogLuvGuessDataFmt ( td )		1069790	1					
ANR	1069880	Callee	LogLuvGuessDataFmt		1069790	0					
ANR	1069881	Identifier	LogLuvGuessDataFmt		1069790	0					
ANR	1069882	ArgumentList	td		1069790	1					
ANR	1069883	Argument	td		1069790	0					
ANR	1069884	Identifier	td		1069790	0					
ANR	1069885	SwitchStatement	switch ( sp -> user_datafmt )		1069790	8					
ANR	1069886	Condition	sp -> user_datafmt	1346:9:33998:34013	1069790	0	True				
ANR	1069887	PtrMemberAccess	sp -> user_datafmt		1069790	0					
ANR	1069888	Identifier	sp		1069790	0					
ANR	1069889	Identifier	user_datafmt		1069790	1					
ANR	1069890	CompoundStatement		17:27:552:552	1069790	1					
ANR	1069891	Label	case SGILOGDATAFMT_FLOAT :	1347:1:34019:34043	1069790	0	True				
ANR	1069892	Identifier	SGILOGDATAFMT_FLOAT		1069790	0					
ANR	1069893	ExpressionStatement	sp -> pixel_size = 3 * sizeof ( float )	1348:2:34047:34080	1069790	1	True				
ANR	1069894	AssignmentExpression	sp -> pixel_size = 3 * sizeof ( float )		1069790	0		=			
ANR	1069895	PtrMemberAccess	sp -> pixel_size		1069790	0					
ANR	1069896	Identifier	sp		1069790	0					
ANR	1069897	Identifier	pixel_size		1069790	1					
ANR	1069898	MultiplicativeExpression	3 * sizeof ( float )		1069790	1		*			
ANR	1069899	PrimaryExpression	3		1069790	0					
ANR	1069900	SizeofExpression	sizeof ( float )		1069790	1					
ANR	1069901	Sizeof	sizeof		1069790	0					
ANR	1069902	SizeofOperand	float		1069790	1					
ANR	1069903	BreakStatement	break ;	1349:2:34084:34089	1069790	2	True				
ANR	1069904	Label	case SGILOGDATAFMT_16BIT :	1350:1:34092:34116	1069790	3	True				
ANR	1069905	Identifier	SGILOGDATAFMT_16BIT		1069790	0					
ANR	1069906	ExpressionStatement	sp -> pixel_size = 3 * sizeof ( int16 )	1351:2:34120:34153	1069790	4	True				
ANR	1069907	AssignmentExpression	sp -> pixel_size = 3 * sizeof ( int16 )		1069790	0		=			
ANR	1069908	PtrMemberAccess	sp -> pixel_size		1069790	0					
ANR	1069909	Identifier	sp		1069790	0					
ANR	1069910	Identifier	pixel_size		1069790	1					
ANR	1069911	MultiplicativeExpression	3 * sizeof ( int16 )		1069790	1		*			
ANR	1069912	PrimaryExpression	3		1069790	0					
ANR	1069913	SizeofExpression	sizeof ( int16 )		1069790	1					
ANR	1069914	Sizeof	sizeof		1069790	0					
ANR	1069915	SizeofOperand	int16		1069790	1					
ANR	1069916	BreakStatement	break ;	1352:2:34157:34162	1069790	5	True				
ANR	1069917	Label	case SGILOGDATAFMT_RAW :	1353:1:34165:34187	1069790	6	True				
ANR	1069918	Identifier	SGILOGDATAFMT_RAW		1069790	0					
ANR	1069919	ExpressionStatement	sp -> pixel_size = sizeof ( uint32 )	1354:2:34191:34223	1069790	7	True				
ANR	1069920	AssignmentExpression	sp -> pixel_size = sizeof ( uint32 )		1069790	0		=			
ANR	1069921	PtrMemberAccess	sp -> pixel_size		1069790	0					
ANR	1069922	Identifier	sp		1069790	0					
ANR	1069923	Identifier	pixel_size		1069790	1					
ANR	1069924	SizeofExpression	sizeof ( uint32 )		1069790	1					
ANR	1069925	Sizeof	sizeof		1069790	0					
ANR	1069926	SizeofOperand	uint32		1069790	1					
ANR	1069927	BreakStatement	break ;	1355:2:34227:34232	1069790	8	True				
ANR	1069928	Label	case SGILOGDATAFMT_8BIT :	1356:1:34235:34258	1069790	9	True				
ANR	1069929	Identifier	SGILOGDATAFMT_8BIT		1069790	0					
ANR	1069930	ExpressionStatement	sp -> pixel_size = 3 * sizeof ( uint8 )	1357:2:34262:34295	1069790	10	True				
ANR	1069931	AssignmentExpression	sp -> pixel_size = 3 * sizeof ( uint8 )		1069790	0		=			
ANR	1069932	PtrMemberAccess	sp -> pixel_size		1069790	0					
ANR	1069933	Identifier	sp		1069790	0					
ANR	1069934	Identifier	pixel_size		1069790	1					
ANR	1069935	MultiplicativeExpression	3 * sizeof ( uint8 )		1069790	1		*			
ANR	1069936	PrimaryExpression	3		1069790	0					
ANR	1069937	SizeofExpression	sizeof ( uint8 )		1069790	1					
ANR	1069938	Sizeof	sizeof		1069790	0					
ANR	1069939	SizeofOperand	uint8		1069790	1					
ANR	1069940	BreakStatement	break ;	1358:2:34299:34304	1069790	11	True				
ANR	1069941	Label	default :	1359:1:34307:34314	1069790	12	True				
ANR	1069942	Identifier	default		1069790	0					
ANR	1069943	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No support for converting user data format to LogLuv"" )"	1360:2:34318:34421	1069790	13	True				
ANR	1069944	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No support for converting user data format to LogLuv"" )"		1069790	0					
ANR	1069945	Callee	TIFFErrorExt		1069790	0					
ANR	1069946	Identifier	TIFFErrorExt		1069790	0					
ANR	1069947	ArgumentList	tif -> tif_clientdata		1069790	1					
ANR	1069948	Argument	tif -> tif_clientdata		1069790	0					
ANR	1069949	PtrMemberAccess	tif -> tif_clientdata		1069790	0					
ANR	1069950	Identifier	tif		1069790	0					
ANR	1069951	Identifier	tif_clientdata		1069790	1					
ANR	1069952	Argument	module		1069790	1					
ANR	1069953	Identifier	module		1069790	0					
ANR	1069954	Argument	"""No support for converting user data format to LogLuv"""		1069790	2					
ANR	1069955	PrimaryExpression	"""No support for converting user data format to LogLuv"""		1069790	0					
ANR	1069956	ReturnStatement	return ( 0 ) ;	1362:2:34425:34435	1069790	14	True				
ANR	1069957	PrimaryExpression	0		1069790	0					
ANR	1069958	IfStatement	if ( isTiled ( tif ) )		1069790	9					
ANR	1069959	Condition	isTiled ( tif )	1364:12:34452:34463	1069790	0	True				
ANR	1069960	CallExpression	isTiled ( tif )		1069790	0					
ANR	1069961	Callee	isTiled		1069790	0					
ANR	1069962	Identifier	isTiled		1069790	0					
ANR	1069963	ArgumentList	tif		1069790	1					
ANR	1069964	Argument	tif		1069790	0					
ANR	1069965	Identifier	tif		1069790	0					
ANR	1069966	ExpressionStatement	"sp -> tbuflen = multiply_ms ( td -> td_tilewidth , td -> td_tilelength )"	1365:12:34479:34541	1069790	1	True				
ANR	1069967	AssignmentExpression	"sp -> tbuflen = multiply_ms ( td -> td_tilewidth , td -> td_tilelength )"		1069790	0		=			
ANR	1069968	PtrMemberAccess	sp -> tbuflen		1069790	0					
ANR	1069969	Identifier	sp		1069790	0					
ANR	1069970	Identifier	tbuflen		1069790	1					
ANR	1069971	CallExpression	"multiply_ms ( td -> td_tilewidth , td -> td_tilelength )"		1069790	1					
ANR	1069972	Callee	multiply_ms		1069790	0					
ANR	1069973	Identifier	multiply_ms		1069790	0					
ANR	1069974	ArgumentList	td -> td_tilewidth		1069790	1					
ANR	1069975	Argument	td -> td_tilewidth		1069790	0					
ANR	1069976	PtrMemberAccess	td -> td_tilewidth		1069790	0					
ANR	1069977	Identifier	td		1069790	0					
ANR	1069978	Identifier	td_tilewidth		1069790	1					
ANR	1069979	Argument	td -> td_tilelength		1069790	1					
ANR	1069980	PtrMemberAccess	td -> td_tilelength		1069790	0					
ANR	1069981	Identifier	td		1069790	0					
ANR	1069982	Identifier	td_tilelength		1069790	1					
ANR	1069983	ElseStatement	else		1069790	0					
ANR	1069984	ExpressionStatement	"sp -> tbuflen = multiply_ms ( td -> td_imagewidth , td -> td_rowsperstrip )"	1367:12:34568:34633	1069790	0	True				
ANR	1069985	AssignmentExpression	"sp -> tbuflen = multiply_ms ( td -> td_imagewidth , td -> td_rowsperstrip )"		1069790	0		=			
ANR	1069986	PtrMemberAccess	sp -> tbuflen		1069790	0					
ANR	1069987	Identifier	sp		1069790	0					
ANR	1069988	Identifier	tbuflen		1069790	1					
ANR	1069989	CallExpression	"multiply_ms ( td -> td_imagewidth , td -> td_rowsperstrip )"		1069790	1					
ANR	1069990	Callee	multiply_ms		1069790	0					
ANR	1069991	Identifier	multiply_ms		1069790	0					
ANR	1069992	ArgumentList	td -> td_imagewidth		1069790	1					
ANR	1069993	Argument	td -> td_imagewidth		1069790	0					
ANR	1069994	PtrMemberAccess	td -> td_imagewidth		1069790	0					
ANR	1069995	Identifier	td		1069790	0					
ANR	1069996	Identifier	td_imagewidth		1069790	1					
ANR	1069997	Argument	td -> td_rowsperstrip		1069790	1					
ANR	1069998	PtrMemberAccess	td -> td_rowsperstrip		1069790	0					
ANR	1069999	Identifier	td		1069790	0					
ANR	1070000	Identifier	td_rowsperstrip		1069790	1					
ANR	1070001	IfStatement	"if ( multiply_ms ( sp -> tbuflen , sizeof ( uint32 ) ) == 0 || ( sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( uint32 ) ) ) == NULL )"		1069790	10					
ANR	1070002	Condition	"multiply_ms ( sp -> tbuflen , sizeof ( uint32 ) ) == 0 || ( sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( uint32 ) ) ) == NULL"	1368:5:34640:34766	1069790	0	True				
ANR	1070003	OrExpression	"multiply_ms ( sp -> tbuflen , sizeof ( uint32 ) ) == 0 || ( sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( uint32 ) ) ) == NULL"		1069790	0		||			
ANR	1070004	EqualityExpression	"multiply_ms ( sp -> tbuflen , sizeof ( uint32 ) ) == 0"		1069790	0		==			
ANR	1070005	CallExpression	"multiply_ms ( sp -> tbuflen , sizeof ( uint32 ) )"		1069790	0					
ANR	1070006	Callee	multiply_ms		1069790	0					
ANR	1070007	Identifier	multiply_ms		1069790	0					
ANR	1070008	ArgumentList	sp -> tbuflen		1069790	1					
ANR	1070009	Argument	sp -> tbuflen		1069790	0					
ANR	1070010	PtrMemberAccess	sp -> tbuflen		1069790	0					
ANR	1070011	Identifier	sp		1069790	0					
ANR	1070012	Identifier	tbuflen		1069790	1					
ANR	1070013	Argument	sizeof ( uint32 )		1069790	1					
ANR	1070014	SizeofExpression	sizeof ( uint32 )		1069790	0					
ANR	1070015	Sizeof	sizeof		1069790	0					
ANR	1070016	SizeofOperand	uint32		1069790	1					
ANR	1070017	PrimaryExpression	0		1069790	1					
ANR	1070018	EqualityExpression	( sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( uint32 ) ) ) == NULL		1069790	1		==			
ANR	1070019	AssignmentExpression	sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( uint32 ) )		1069790	0		=			
ANR	1070020	PtrMemberAccess	sp -> tbuf		1069790	0					
ANR	1070021	Identifier	sp		1069790	0					
ANR	1070022	Identifier	tbuf		1069790	1					
ANR	1070023	CastExpression	( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( uint32 ) )		1069790	1					
ANR	1070024	CastTarget	uint8 *		1069790	0					
ANR	1070025	CallExpression	_TIFFmalloc ( sp -> tbuflen * sizeof ( uint32 ) )		1069790	1					
ANR	1070026	Callee	_TIFFmalloc		1069790	0					
ANR	1070027	Identifier	_TIFFmalloc		1069790	0					
ANR	1070028	ArgumentList	sp -> tbuflen * sizeof ( uint32 )		1069790	1					
ANR	1070029	Argument	sp -> tbuflen * sizeof ( uint32 )		1069790	0					
ANR	1070030	MultiplicativeExpression	sp -> tbuflen * sizeof ( uint32 )		1069790	0		*			
ANR	1070031	PtrMemberAccess	sp -> tbuflen		1069790	0					
ANR	1070032	Identifier	sp		1069790	0					
ANR	1070033	Identifier	tbuflen		1069790	1					
ANR	1070034	SizeofExpression	sizeof ( uint32 )		1069790	1					
ANR	1070035	Sizeof	sizeof		1069790	0					
ANR	1070036	SizeofOperand	uint32		1069790	1					
ANR	1070037	Identifier	NULL		1069790	1					
ANR	1070038	CompoundStatement		40:79:1305:1305	1069790	1					
ANR	1070039	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No space for SGILog translation buffer"" )"	1370:2:34773:34856	1069790	0	True				
ANR	1070040	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No space for SGILog translation buffer"" )"		1069790	0					
ANR	1070041	Callee	TIFFErrorExt		1069790	0					
ANR	1070042	Identifier	TIFFErrorExt		1069790	0					
ANR	1070043	ArgumentList	tif -> tif_clientdata		1069790	1					
ANR	1070044	Argument	tif -> tif_clientdata		1069790	0					
ANR	1070045	PtrMemberAccess	tif -> tif_clientdata		1069790	0					
ANR	1070046	Identifier	tif		1069790	0					
ANR	1070047	Identifier	tif_clientdata		1069790	1					
ANR	1070048	Argument	module		1069790	1					
ANR	1070049	Identifier	module		1069790	0					
ANR	1070050	Argument	"""No space for SGILog translation buffer"""		1069790	2					
ANR	1070051	PrimaryExpression	"""No space for SGILog translation buffer"""		1069790	0					
ANR	1070052	ReturnStatement	return ( 0 ) ;	1371:2:34860:34870	1069790	1	True				
ANR	1070053	PrimaryExpression	0		1069790	0					
ANR	1070054	ReturnStatement	return ( 1 ) ;	1373:1:34876:34886	1069790	11	True				
ANR	1070055	PrimaryExpression	1		1069790	0					
ANR	1070056	ReturnType	static int		1069790	1					
ANR	1070057	Identifier	LogLuvInitState		1069790	2					
ANR	1070058	ParameterList	TIFF * tif		1069790	3					
ANR	1070059	Parameter	TIFF * tif	1329:16:33452:33460	1069790	0	True				
ANR	1070060	ParameterType	TIFF *		1069790	0					
ANR	1070061	Identifier	tif		1069790	1					
ANR	1070062	CFGEntryNode	ENTRY		1069790		True				
ANR	1070063	CFGExitNode	EXIT		1069790		True				
ANR	1070064	Symbol	td -> td_planarconfig		1069790						
ANR	1070065	Symbol	* sp		1069790						
ANR	1070066	Symbol	& tif -> tif_dir		1069790						
ANR	1070067	Symbol	sp -> user_datafmt		1069790						
ANR	1070068	Symbol	td -> td_tilelength		1069790						
ANR	1070069	Symbol	tif		1069790						
ANR	1070070	Symbol	isTiled		1069790						
ANR	1070071	Symbol	sp -> tbuflen		1069790						
ANR	1070072	Symbol	sp -> pixel_size		1069790						
ANR	1070073	Symbol	DecoderState		1069790						
ANR	1070074	Symbol	sp -> tbuf		1069790						
ANR	1070075	Symbol	SGILOGDATAFMT_UNKNOWN		1069790						
ANR	1070076	Symbol	sp		1069790						
ANR	1070077	Symbol	PHOTOMETRIC_LOGLUV		1069790						
ANR	1070078	Symbol	NULL		1069790						
ANR	1070079	Symbol	LogLuvGuessDataFmt		1069790						
ANR	1070080	Symbol	td -> td_imagewidth		1069790						
ANR	1070081	Symbol	module		1069790						
ANR	1070082	Symbol	PLANARCONFIG_CONTIG		1069790						
ANR	1070083	Symbol	multiply_ms		1069790						
ANR	1070084	Symbol	td -> td_tilewidth		1069790						
ANR	1070085	Symbol	tif -> tif_clientdata		1069790						
ANR	1070086	Symbol	td		1069790						
ANR	1070087	Symbol	* td		1069790						
ANR	1070088	Symbol	_TIFFmalloc		1069790						
ANR	1070089	Symbol	td -> td_photometric		1069790						
ANR	1070090	Symbol	* tif		1069790						
ANR	1070091	Symbol	td -> td_rowsperstrip		1069790						
ANR	1070092	Function	LogLuvFixupTags	1376:0:34891:34957							
ANR	1070093	FunctionDef	LogLuvFixupTags (TIFF * tif)		1070092	0					
ANR	1070094	CompoundStatement		1378:0:34929:34957	1070092	0					
ANR	1070095	ExpressionStatement	( void ) tif	1379:1:34932:34942	1070092	0	True				
ANR	1070096	CastExpression	( void ) tif		1070092	0					
ANR	1070097	CastTarget	void		1070092	0					
ANR	1070098	Identifier	tif		1070092	1					
ANR	1070099	ReturnStatement	return ( 1 ) ;	1380:1:34945:34955	1070092	1	True				
ANR	1070100	PrimaryExpression	1		1070092	0					
ANR	1070101	ReturnType	static int		1070092	1					
ANR	1070102	Identifier	LogLuvFixupTags		1070092	2					
ANR	1070103	ParameterList	TIFF * tif		1070092	3					
ANR	1070104	Parameter	TIFF * tif	1377:16:34918:34926	1070092	0	True				
ANR	1070105	ParameterType	TIFF *		1070092	0					
ANR	1070106	Identifier	tif		1070092	1					
ANR	1070107	CFGEntryNode	ENTRY		1070092		True				
ANR	1070108	CFGExitNode	EXIT		1070092		True				
ANR	1070109	Symbol	tif		1070092						
ANR	1070110	Function	LogLuvSetupDecode	1383:0:34960:36403							
ANR	1070111	FunctionDef	LogLuvSetupDecode (TIFF * tif)		1070110	0					
ANR	1070112	CompoundStatement		1385:0:35000:36403	1070110	0					
ANR	1070113	Statement	static	1386:1:35003:35008	1070110	0	True				
ANR	1070114	IdentifierDeclStatement	"const char module [ ] = ""LogLuvSetupDecode"" ;"	1386:8:35010:35051	1070110	1	True				
ANR	1070115	IdentifierDecl	"module [ ] = ""LogLuvSetupDecode"""		1070110	0					
ANR	1070116	IdentifierDeclType	const char [ ]		1070110	0					
ANR	1070117	Identifier	module		1070110	1					
ANR	1070118	AssignmentExpression	"module [ ] = ""LogLuvSetupDecode"""		1070110	2		=			
ANR	1070119	Identifier	module		1070110	0					
ANR	1070120	PrimaryExpression	"""LogLuvSetupDecode"""		1070110	1					
ANR	1070121	IdentifierDeclStatement	LogLuvState * sp = DecoderState ( tif ) ;	1387:1:35054:35089	1070110	2	True				
ANR	1070122	IdentifierDecl	* sp = DecoderState ( tif )		1070110	0					
ANR	1070123	IdentifierDeclType	LogLuvState *		1070110	0					
ANR	1070124	Identifier	sp		1070110	1					
ANR	1070125	AssignmentExpression	* sp = DecoderState ( tif )		1070110	2		=			
ANR	1070126	Identifier	sp		1070110	0					
ANR	1070127	CallExpression	DecoderState ( tif )		1070110	1					
ANR	1070128	Callee	DecoderState		1070110	0					
ANR	1070129	Identifier	DecoderState		1070110	0					
ANR	1070130	ArgumentList	tif		1070110	1					
ANR	1070131	Argument	tif		1070110	0					
ANR	1070132	Identifier	tif		1070110	0					
ANR	1070133	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	1388:1:35092:35125	1070110	3	True				
ANR	1070134	IdentifierDecl	* td = & tif -> tif_dir		1070110	0					
ANR	1070135	IdentifierDeclType	TIFFDirectory *		1070110	0					
ANR	1070136	Identifier	td		1070110	1					
ANR	1070137	AssignmentExpression	* td = & tif -> tif_dir		1070110	2		=			
ANR	1070138	Identifier	td		1070110	0					
ANR	1070139	UnaryOperationExpression	& tif -> tif_dir		1070110	1					
ANR	1070140	UnaryOperator	&		1070110	0					
ANR	1070141	PtrMemberAccess	tif -> tif_dir		1070110	1					
ANR	1070142	Identifier	tif		1070110	0					
ANR	1070143	Identifier	tif_dir		1070110	1					
ANR	1070144	ExpressionStatement	tif -> tif_postdecode = _TIFFNoPostDecode	1390:1:35129:35168	1070110	4	True				
ANR	1070145	AssignmentExpression	tif -> tif_postdecode = _TIFFNoPostDecode		1070110	0		=			
ANR	1070146	PtrMemberAccess	tif -> tif_postdecode		1070110	0					
ANR	1070147	Identifier	tif		1070110	0					
ANR	1070148	Identifier	tif_postdecode		1070110	1					
ANR	1070149	Identifier	_TIFFNoPostDecode		1070110	1					
ANR	1070150	SwitchStatement	switch ( td -> td_photometric )		1070110	5					
ANR	1070151	Condition	td -> td_photometric	1391:9:35179:35196	1070110	0	True				
ANR	1070152	PtrMemberAccess	td -> td_photometric		1070110	0					
ANR	1070153	Identifier	td		1070110	0					
ANR	1070154	Identifier	td_photometric		1070110	1					
ANR	1070155	CompoundStatement		7:29:198:198	1070110	1					
ANR	1070156	Label	case PHOTOMETRIC_LOGLUV :	1392:1:35202:35225	1070110	0	True				
ANR	1070157	Identifier	PHOTOMETRIC_LOGLUV		1070110	0					
ANR	1070158	IfStatement	if ( ! LogLuvInitState ( tif ) )		1070110	1					
ANR	1070159	Condition	! LogLuvInitState ( tif )	1393:6:35233:35253	1070110	0	True				
ANR	1070160	UnaryOperationExpression	! LogLuvInitState ( tif )		1070110	0					
ANR	1070161	UnaryOperator	!		1070110	0					
ANR	1070162	CallExpression	LogLuvInitState ( tif )		1070110	1					
ANR	1070163	Callee	LogLuvInitState		1070110	0					
ANR	1070164	Identifier	LogLuvInitState		1070110	0					
ANR	1070165	ArgumentList	tif		1070110	1					
ANR	1070166	Argument	tif		1070110	0					
ANR	1070167	Identifier	tif		1070110	0					
ANR	1070168	BreakStatement	break ;	1394:3:35259:35264	1070110	1	True				
ANR	1070169	IfStatement	if ( td -> td_compression == COMPRESSION_SGILOG24 )		1070110	2					
ANR	1070170	Condition	td -> td_compression == COMPRESSION_SGILOG24	1395:6:35272:35313	1070110	0	True				
ANR	1070171	EqualityExpression	td -> td_compression == COMPRESSION_SGILOG24		1070110	0		==			
ANR	1070172	PtrMemberAccess	td -> td_compression		1070110	0					
ANR	1070173	Identifier	td		1070110	0					
ANR	1070174	Identifier	td_compression		1070110	1					
ANR	1070175	Identifier	COMPRESSION_SGILOG24		1070110	1					
ANR	1070176	CompoundStatement		11:50:315:315	1070110	1					
ANR	1070177	ExpressionStatement	tif -> tif_decoderow = LogLuvDecode24	1396:3:35321:35356	1070110	0	True				
ANR	1070178	AssignmentExpression	tif -> tif_decoderow = LogLuvDecode24		1070110	0		=			
ANR	1070179	PtrMemberAccess	tif -> tif_decoderow		1070110	0					
ANR	1070180	Identifier	tif		1070110	0					
ANR	1070181	Identifier	tif_decoderow		1070110	1					
ANR	1070182	Identifier	LogLuvDecode24		1070110	1					
ANR	1070183	SwitchStatement	switch ( sp -> user_datafmt )		1070110	1					
ANR	1070184	Condition	sp -> user_datafmt	1397:11:35369:35384	1070110	0	True				
ANR	1070185	PtrMemberAccess	sp -> user_datafmt		1070110	0					
ANR	1070186	Identifier	sp		1070110	0					
ANR	1070187	Identifier	user_datafmt		1070110	1					
ANR	1070188	CompoundStatement		13:29:386:386	1070110	1					
ANR	1070189	Label	case SGILOGDATAFMT_FLOAT :	1398:3:35392:35416	1070110	0	True				
ANR	1070190	Identifier	SGILOGDATAFMT_FLOAT		1070110	0					
ANR	1070191	ExpressionStatement	sp -> tfunc = Luv24toXYZ	1399:4:35422:35444	1070110	1	True				
ANR	1070192	AssignmentExpression	sp -> tfunc = Luv24toXYZ		1070110	0		=			
ANR	1070193	PtrMemberAccess	sp -> tfunc		1070110	0					
ANR	1070194	Identifier	sp		1070110	0					
ANR	1070195	Identifier	tfunc		1070110	1					
ANR	1070196	Identifier	Luv24toXYZ		1070110	1					
ANR	1070197	BreakStatement	break ;	1400:4:35452:35457	1070110	2	True				
ANR	1070198	Label	case SGILOGDATAFMT_16BIT :	1401:3:35462:35486	1070110	3	True				
ANR	1070199	Identifier	SGILOGDATAFMT_16BIT		1070110	0					
ANR	1070200	ExpressionStatement	sp -> tfunc = Luv24toLuv48	1402:4:35492:35516	1070110	4	True				
ANR	1070201	AssignmentExpression	sp -> tfunc = Luv24toLuv48		1070110	0		=			
ANR	1070202	PtrMemberAccess	sp -> tfunc		1070110	0					
ANR	1070203	Identifier	sp		1070110	0					
ANR	1070204	Identifier	tfunc		1070110	1					
ANR	1070205	Identifier	Luv24toLuv48		1070110	1					
ANR	1070206	BreakStatement	break ;	1403:4:35524:35529	1070110	5	True				
ANR	1070207	Label	case SGILOGDATAFMT_8BIT :	1404:3:35534:35557	1070110	6	True				
ANR	1070208	Identifier	SGILOGDATAFMT_8BIT		1070110	0					
ANR	1070209	ExpressionStatement	sp -> tfunc = Luv24toRGB	1405:4:35563:35585	1070110	7	True				
ANR	1070210	AssignmentExpression	sp -> tfunc = Luv24toRGB		1070110	0		=			
ANR	1070211	PtrMemberAccess	sp -> tfunc		1070110	0					
ANR	1070212	Identifier	sp		1070110	0					
ANR	1070213	Identifier	tfunc		1070110	1					
ANR	1070214	Identifier	Luv24toRGB		1070110	1					
ANR	1070215	BreakStatement	break ;	1406:4:35591:35596	1070110	8	True				
ANR	1070216	ElseStatement	else		1070110	0					
ANR	1070217	CompoundStatement		24:9:611:611	1070110	0					
ANR	1070218	ExpressionStatement	tif -> tif_decoderow = LogLuvDecode32	1409:3:35617:35652	1070110	0	True				
ANR	1070219	AssignmentExpression	tif -> tif_decoderow = LogLuvDecode32		1070110	0		=			
ANR	1070220	PtrMemberAccess	tif -> tif_decoderow		1070110	0					
ANR	1070221	Identifier	tif		1070110	0					
ANR	1070222	Identifier	tif_decoderow		1070110	1					
ANR	1070223	Identifier	LogLuvDecode32		1070110	1					
ANR	1070224	SwitchStatement	switch ( sp -> user_datafmt )		1070110	1					
ANR	1070225	Condition	sp -> user_datafmt	1410:11:35665:35680	1070110	0	True				
ANR	1070226	PtrMemberAccess	sp -> user_datafmt		1070110	0					
ANR	1070227	Identifier	sp		1070110	0					
ANR	1070228	Identifier	user_datafmt		1070110	1					
ANR	1070229	CompoundStatement		26:29:682:682	1070110	1					
ANR	1070230	Label	case SGILOGDATAFMT_FLOAT :	1411:3:35688:35712	1070110	0	True				
ANR	1070231	Identifier	SGILOGDATAFMT_FLOAT		1070110	0					
ANR	1070232	ExpressionStatement	sp -> tfunc = Luv32toXYZ	1412:4:35718:35740	1070110	1	True				
ANR	1070233	AssignmentExpression	sp -> tfunc = Luv32toXYZ		1070110	0		=			
ANR	1070234	PtrMemberAccess	sp -> tfunc		1070110	0					
ANR	1070235	Identifier	sp		1070110	0					
ANR	1070236	Identifier	tfunc		1070110	1					
ANR	1070237	Identifier	Luv32toXYZ		1070110	1					
ANR	1070238	BreakStatement	break ;	1413:4:35746:35751	1070110	2	True				
ANR	1070239	Label	case SGILOGDATAFMT_16BIT :	1414:3:35756:35780	1070110	3	True				
ANR	1070240	Identifier	SGILOGDATAFMT_16BIT		1070110	0					
ANR	1070241	ExpressionStatement	sp -> tfunc = Luv32toLuv48	1415:4:35786:35810	1070110	4	True				
ANR	1070242	AssignmentExpression	sp -> tfunc = Luv32toLuv48		1070110	0		=			
ANR	1070243	PtrMemberAccess	sp -> tfunc		1070110	0					
ANR	1070244	Identifier	sp		1070110	0					
ANR	1070245	Identifier	tfunc		1070110	1					
ANR	1070246	Identifier	Luv32toLuv48		1070110	1					
ANR	1070247	BreakStatement	break ;	1416:4:35816:35821	1070110	5	True				
ANR	1070248	Label	case SGILOGDATAFMT_8BIT :	1417:3:35826:35849	1070110	6	True				
ANR	1070249	Identifier	SGILOGDATAFMT_8BIT		1070110	0					
ANR	1070250	ExpressionStatement	sp -> tfunc = Luv32toRGB	1418:4:35855:35877	1070110	7	True				
ANR	1070251	AssignmentExpression	sp -> tfunc = Luv32toRGB		1070110	0		=			
ANR	1070252	PtrMemberAccess	sp -> tfunc		1070110	0					
ANR	1070253	Identifier	sp		1070110	0					
ANR	1070254	Identifier	tfunc		1070110	1					
ANR	1070255	Identifier	Luv32toRGB		1070110	1					
ANR	1070256	BreakStatement	break ;	1419:4:35883:35888	1070110	8	True				
ANR	1070257	ReturnStatement	return ( 1 ) ;	1422:2:35901:35911	1070110	3	True				
ANR	1070258	PrimaryExpression	1		1070110	0					
ANR	1070259	Label	case PHOTOMETRIC_LOGL :	1423:1:35914:35935	1070110	4	True				
ANR	1070260	Identifier	PHOTOMETRIC_LOGL		1070110	0					
ANR	1070261	IfStatement	if ( ! LogL16InitState ( tif ) )		1070110	5					
ANR	1070262	Condition	! LogL16InitState ( tif )	1424:6:35943:35963	1070110	0	True				
ANR	1070263	UnaryOperationExpression	! LogL16InitState ( tif )		1070110	0					
ANR	1070264	UnaryOperator	!		1070110	0					
ANR	1070265	CallExpression	LogL16InitState ( tif )		1070110	1					
ANR	1070266	Callee	LogL16InitState		1070110	0					
ANR	1070267	Identifier	LogL16InitState		1070110	0					
ANR	1070268	ArgumentList	tif		1070110	1					
ANR	1070269	Argument	tif		1070110	0					
ANR	1070270	Identifier	tif		1070110	0					
ANR	1070271	BreakStatement	break ;	1425:3:35969:35974	1070110	1	True				
ANR	1070272	ExpressionStatement	tif -> tif_decoderow = LogL16Decode	1426:2:35978:36011	1070110	6	True				
ANR	1070273	AssignmentExpression	tif -> tif_decoderow = LogL16Decode		1070110	0		=			
ANR	1070274	PtrMemberAccess	tif -> tif_decoderow		1070110	0					
ANR	1070275	Identifier	tif		1070110	0					
ANR	1070276	Identifier	tif_decoderow		1070110	1					
ANR	1070277	Identifier	LogL16Decode		1070110	1					
ANR	1070278	SwitchStatement	switch ( sp -> user_datafmt )		1070110	7					
ANR	1070279	Condition	sp -> user_datafmt	1427:10:36023:36038	1070110	0	True				
ANR	1070280	PtrMemberAccess	sp -> user_datafmt		1070110	0					
ANR	1070281	Identifier	sp		1070110	0					
ANR	1070282	Identifier	user_datafmt		1070110	1					
ANR	1070283	CompoundStatement		43:28:1040:1040	1070110	1					
ANR	1070284	Label	case SGILOGDATAFMT_FLOAT :	1428:2:36045:36069	1070110	0	True				
ANR	1070285	Identifier	SGILOGDATAFMT_FLOAT		1070110	0					
ANR	1070286	ExpressionStatement	sp -> tfunc = L16toY	1429:3:36074:36092	1070110	1	True				
ANR	1070287	AssignmentExpression	sp -> tfunc = L16toY		1070110	0		=			
ANR	1070288	PtrMemberAccess	sp -> tfunc		1070110	0					
ANR	1070289	Identifier	sp		1070110	0					
ANR	1070290	Identifier	tfunc		1070110	1					
ANR	1070291	Identifier	L16toY		1070110	1					
ANR	1070292	BreakStatement	break ;	1430:3:36097:36102	1070110	2	True				
ANR	1070293	Label	case SGILOGDATAFMT_8BIT :	1431:2:36106:36129	1070110	3	True				
ANR	1070294	Identifier	SGILOGDATAFMT_8BIT		1070110	0					
ANR	1070295	ExpressionStatement	sp -> tfunc = L16toGry	1432:3:36134:36154	1070110	4	True				
ANR	1070296	AssignmentExpression	sp -> tfunc = L16toGry		1070110	0		=			
ANR	1070297	PtrMemberAccess	sp -> tfunc		1070110	0					
ANR	1070298	Identifier	sp		1070110	0					
ANR	1070299	Identifier	tfunc		1070110	1					
ANR	1070300	Identifier	L16toGry		1070110	1					
ANR	1070301	BreakStatement	break ;	1433:3:36159:36164	1070110	5	True				
ANR	1070302	ReturnStatement	return ( 1 ) ;	1435:2:36172:36182	1070110	8	True				
ANR	1070303	PrimaryExpression	1		1070110	0					
ANR	1070304	Label	default :	1436:1:36185:36192	1070110	9	True				
ANR	1070305	Identifier	default		1070110	0					
ANR	1070306	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Inappropriate photometric interpretation %d for SGILog compression; %s"" , td -> td_photometric , ""must be either LogLUV or LogL"" )"	1437:2:36196:36376	1070110	10	True				
ANR	1070307	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Inappropriate photometric interpretation %d for SGILog compression; %s"" , td -> td_photometric , ""must be either LogLUV or LogL"" )"		1070110	0					
ANR	1070308	Callee	TIFFErrorExt		1070110	0					
ANR	1070309	Identifier	TIFFErrorExt		1070110	0					
ANR	1070310	ArgumentList	tif -> tif_clientdata		1070110	1					
ANR	1070311	Argument	tif -> tif_clientdata		1070110	0					
ANR	1070312	PtrMemberAccess	tif -> tif_clientdata		1070110	0					
ANR	1070313	Identifier	tif		1070110	0					
ANR	1070314	Identifier	tif_clientdata		1070110	1					
ANR	1070315	Argument	module		1070110	1					
ANR	1070316	Identifier	module		1070110	0					
ANR	1070317	Argument	"""Inappropriate photometric interpretation %d for SGILog compression; %s"""		1070110	2					
ANR	1070318	PrimaryExpression	"""Inappropriate photometric interpretation %d for SGILog compression; %s"""		1070110	0					
ANR	1070319	Argument	td -> td_photometric		1070110	3					
ANR	1070320	PtrMemberAccess	td -> td_photometric		1070110	0					
ANR	1070321	Identifier	td		1070110	0					
ANR	1070322	Identifier	td_photometric		1070110	1					
ANR	1070323	Argument	"""must be either LogLUV or LogL"""		1070110	4					
ANR	1070324	PrimaryExpression	"""must be either LogLUV or LogL"""		1070110	0					
ANR	1070325	BreakStatement	break ;	1440:2:36380:36385	1070110	11	True				
ANR	1070326	ReturnStatement	return ( 0 ) ;	1442:1:36391:36401	1070110	6	True				
ANR	1070327	PrimaryExpression	0		1070110	0					
ANR	1070328	ReturnType	static int		1070110	1					
ANR	1070329	Identifier	LogLuvSetupDecode		1070110	2					
ANR	1070330	ParameterList	TIFF * tif		1070110	3					
ANR	1070331	Parameter	TIFF * tif	1384:18:34989:34997	1070110	0	True				
ANR	1070332	ParameterType	TIFF *		1070110	0					
ANR	1070333	Identifier	tif		1070110	1					
ANR	1070334	CFGEntryNode	ENTRY		1070110		True				
ANR	1070335	CFGExitNode	EXIT		1070110		True				
ANR	1070336	Symbol	* sp		1070110						
ANR	1070337	Symbol	COMPRESSION_SGILOG24		1070110						
ANR	1070338	Symbol	& tif -> tif_dir		1070110						
ANR	1070339	Symbol	L16toGry		1070110						
ANR	1070340	Symbol	tif -> tif_postdecode		1070110						
ANR	1070341	Symbol	td -> td_compression		1070110						
ANR	1070342	Symbol	sp -> user_datafmt		1070110						
ANR	1070343	Symbol	tif		1070110						
ANR	1070344	Symbol	L16toY		1070110						
ANR	1070345	Symbol	DecoderState		1070110						
ANR	1070346	Symbol	Luv32toLuv48		1070110						
ANR	1070347	Symbol	LogLuvInitState		1070110						
ANR	1070348	Symbol	_TIFFNoPostDecode		1070110						
ANR	1070349	Symbol	LogLuvDecode24		1070110						
ANR	1070350	Symbol	tif -> tif_decoderow		1070110						
ANR	1070351	Symbol	sp -> tfunc		1070110						
ANR	1070352	Symbol	sp		1070110						
ANR	1070353	Symbol	Luv24toLuv48		1070110						
ANR	1070354	Symbol	Luv32toRGB		1070110						
ANR	1070355	Symbol	Luv24toXYZ		1070110						
ANR	1070356	Symbol	module		1070110						
ANR	1070357	Symbol	LogL16InitState		1070110						
ANR	1070358	Symbol	Luv24toRGB		1070110						
ANR	1070359	Symbol	LogL16Decode		1070110						
ANR	1070360	Symbol	tif -> tif_clientdata		1070110						
ANR	1070361	Symbol	td		1070110						
ANR	1070362	Symbol	LogLuvDecode32		1070110						
ANR	1070363	Symbol	* td		1070110						
ANR	1070364	Symbol	Luv32toXYZ		1070110						
ANR	1070365	Symbol	* tif		1070110						
ANR	1070366	Symbol	td -> td_photometric		1070110						
ANR	1070367	Function	LogLuvSetupEncode	1445:0:36406:38034							
ANR	1070368	FunctionDef	LogLuvSetupEncode (TIFF * tif)		1070367	0					
ANR	1070369	CompoundStatement		1447:0:36446:38034	1070367	0					
ANR	1070370	Statement	static	1448:1:36449:36454	1070367	0	True				
ANR	1070371	IdentifierDeclStatement	"const char module [ ] = ""LogLuvSetupEncode"" ;"	1448:8:36456:36497	1070367	1	True				
ANR	1070372	IdentifierDecl	"module [ ] = ""LogLuvSetupEncode"""		1070367	0					
ANR	1070373	IdentifierDeclType	const char [ ]		1070367	0					
ANR	1070374	Identifier	module		1070367	1					
ANR	1070375	AssignmentExpression	"module [ ] = ""LogLuvSetupEncode"""		1070367	2		=			
ANR	1070376	Identifier	module		1070367	0					
ANR	1070377	PrimaryExpression	"""LogLuvSetupEncode"""		1070367	1					
ANR	1070378	IdentifierDeclStatement	LogLuvState * sp = EncoderState ( tif ) ;	1449:1:36500:36535	1070367	2	True				
ANR	1070379	IdentifierDecl	* sp = EncoderState ( tif )		1070367	0					
ANR	1070380	IdentifierDeclType	LogLuvState *		1070367	0					
ANR	1070381	Identifier	sp		1070367	1					
ANR	1070382	AssignmentExpression	* sp = EncoderState ( tif )		1070367	2		=			
ANR	1070383	Identifier	sp		1070367	0					
ANR	1070384	CallExpression	EncoderState ( tif )		1070367	1					
ANR	1070385	Callee	EncoderState		1070367	0					
ANR	1070386	Identifier	EncoderState		1070367	0					
ANR	1070387	ArgumentList	tif		1070367	1					
ANR	1070388	Argument	tif		1070367	0					
ANR	1070389	Identifier	tif		1070367	0					
ANR	1070390	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	1450:1:36538:36571	1070367	3	True				
ANR	1070391	IdentifierDecl	* td = & tif -> tif_dir		1070367	0					
ANR	1070392	IdentifierDeclType	TIFFDirectory *		1070367	0					
ANR	1070393	Identifier	td		1070367	1					
ANR	1070394	AssignmentExpression	* td = & tif -> tif_dir		1070367	2		=			
ANR	1070395	Identifier	td		1070367	0					
ANR	1070396	UnaryOperationExpression	& tif -> tif_dir		1070367	1					
ANR	1070397	UnaryOperator	&		1070367	0					
ANR	1070398	PtrMemberAccess	tif -> tif_dir		1070367	1					
ANR	1070399	Identifier	tif		1070367	0					
ANR	1070400	Identifier	tif_dir		1070367	1					
ANR	1070401	SwitchStatement	switch ( td -> td_photometric )		1070367	4					
ANR	1070402	Condition	td -> td_photometric	1452:9:36583:36600	1070367	0	True				
ANR	1070403	PtrMemberAccess	td -> td_photometric		1070367	0					
ANR	1070404	Identifier	td		1070367	0					
ANR	1070405	Identifier	td_photometric		1070367	1					
ANR	1070406	CompoundStatement		6:29:156:156	1070367	1					
ANR	1070407	Label	case PHOTOMETRIC_LOGLUV :	1453:1:36606:36629	1070367	0	True				
ANR	1070408	Identifier	PHOTOMETRIC_LOGLUV		1070367	0					
ANR	1070409	IfStatement	if ( ! LogLuvInitState ( tif ) )		1070367	1					
ANR	1070410	Condition	! LogLuvInitState ( tif )	1454:6:36637:36657	1070367	0	True				
ANR	1070411	UnaryOperationExpression	! LogLuvInitState ( tif )		1070367	0					
ANR	1070412	UnaryOperator	!		1070367	0					
ANR	1070413	CallExpression	LogLuvInitState ( tif )		1070367	1					
ANR	1070414	Callee	LogLuvInitState		1070367	0					
ANR	1070415	Identifier	LogLuvInitState		1070367	0					
ANR	1070416	ArgumentList	tif		1070367	1					
ANR	1070417	Argument	tif		1070367	0					
ANR	1070418	Identifier	tif		1070367	0					
ANR	1070419	BreakStatement	break ;	1455:3:36663:36668	1070367	1	True				
ANR	1070420	IfStatement	if ( td -> td_compression == COMPRESSION_SGILOG24 )		1070367	2					
ANR	1070421	Condition	td -> td_compression == COMPRESSION_SGILOG24	1456:6:36676:36717	1070367	0	True				
ANR	1070422	EqualityExpression	td -> td_compression == COMPRESSION_SGILOG24		1070367	0		==			
ANR	1070423	PtrMemberAccess	td -> td_compression		1070367	0					
ANR	1070424	Identifier	td		1070367	0					
ANR	1070425	Identifier	td_compression		1070367	1					
ANR	1070426	Identifier	COMPRESSION_SGILOG24		1070367	1					
ANR	1070427	CompoundStatement		10:50:273:273	1070367	1					
ANR	1070428	ExpressionStatement	tif -> tif_encoderow = LogLuvEncode24	1457:3:36725:36760	1070367	0	True				
ANR	1070429	AssignmentExpression	tif -> tif_encoderow = LogLuvEncode24		1070367	0		=			
ANR	1070430	PtrMemberAccess	tif -> tif_encoderow		1070367	0					
ANR	1070431	Identifier	tif		1070367	0					
ANR	1070432	Identifier	tif_encoderow		1070367	1					
ANR	1070433	Identifier	LogLuvEncode24		1070367	1					
ANR	1070434	SwitchStatement	switch ( sp -> user_datafmt )		1070367	1					
ANR	1070435	Condition	sp -> user_datafmt	1458:11:36773:36788	1070367	0	True				
ANR	1070436	PtrMemberAccess	sp -> user_datafmt		1070367	0					
ANR	1070437	Identifier	sp		1070367	0					
ANR	1070438	Identifier	user_datafmt		1070367	1					
ANR	1070439	CompoundStatement		12:29:344:344	1070367	1					
ANR	1070440	Label	case SGILOGDATAFMT_FLOAT :	1459:3:36796:36820	1070367	0	True				
ANR	1070441	Identifier	SGILOGDATAFMT_FLOAT		1070367	0					
ANR	1070442	ExpressionStatement	sp -> tfunc = Luv24fromXYZ	1460:4:36826:36850	1070367	1	True				
ANR	1070443	AssignmentExpression	sp -> tfunc = Luv24fromXYZ		1070367	0		=			
ANR	1070444	PtrMemberAccess	sp -> tfunc		1070367	0					
ANR	1070445	Identifier	sp		1070367	0					
ANR	1070446	Identifier	tfunc		1070367	1					
ANR	1070447	Identifier	Luv24fromXYZ		1070367	1					
ANR	1070448	BreakStatement	break ;	1461:4:36856:36861	1070367	2	True				
ANR	1070449	Label	case SGILOGDATAFMT_16BIT :	1462:3:36866:36890	1070367	3	True				
ANR	1070450	Identifier	SGILOGDATAFMT_16BIT		1070367	0					
ANR	1070451	ExpressionStatement	sp -> tfunc = Luv24fromLuv48	1463:4:36896:36922	1070367	4	True				
ANR	1070452	AssignmentExpression	sp -> tfunc = Luv24fromLuv48		1070367	0		=			
ANR	1070453	PtrMemberAccess	sp -> tfunc		1070367	0					
ANR	1070454	Identifier	sp		1070367	0					
ANR	1070455	Identifier	tfunc		1070367	1					
ANR	1070456	Identifier	Luv24fromLuv48		1070367	1					
ANR	1070457	BreakStatement	break ;	1464:4:36930:36935	1070367	5	True				
ANR	1070458	Label	case SGILOGDATAFMT_RAW :	1465:3:36940:36962	1070367	6	True				
ANR	1070459	Identifier	SGILOGDATAFMT_RAW		1070367	0					
ANR	1070460	BreakStatement	break ;	1466:4:36968:36973	1070367	7	True				
ANR	1070461	Label	default :	1467:3:36978:36985	1070367	8	True				
ANR	1070462	Identifier	default		1070367	0					
ANR	1070463	GotoStatement	goto notsupported ;	1468:4:36991:37008	1070367	9	True				
ANR	1070464	Identifier	notsupported		1070367	0					
ANR	1070465	ElseStatement	else		1070367	0					
ANR	1070466	CompoundStatement		24:9:577:577	1070367	0					
ANR	1070467	ExpressionStatement	tif -> tif_encoderow = LogLuvEncode32	1471:3:37029:37064	1070367	0	True				
ANR	1070468	AssignmentExpression	tif -> tif_encoderow = LogLuvEncode32		1070367	0		=			
ANR	1070469	PtrMemberAccess	tif -> tif_encoderow		1070367	0					
ANR	1070470	Identifier	tif		1070367	0					
ANR	1070471	Identifier	tif_encoderow		1070367	1					
ANR	1070472	Identifier	LogLuvEncode32		1070367	1					
ANR	1070473	SwitchStatement	switch ( sp -> user_datafmt )		1070367	1					
ANR	1070474	Condition	sp -> user_datafmt	1472:11:37079:37094	1070367	0	True				
ANR	1070475	PtrMemberAccess	sp -> user_datafmt		1070367	0					
ANR	1070476	Identifier	sp		1070367	0					
ANR	1070477	Identifier	user_datafmt		1070367	1					
ANR	1070478	CompoundStatement		26:29:650:650	1070367	1					
ANR	1070479	Label	case SGILOGDATAFMT_FLOAT :	1473:3:37102:37126	1070367	0	True				
ANR	1070480	Identifier	SGILOGDATAFMT_FLOAT		1070367	0					
ANR	1070481	ExpressionStatement	sp -> tfunc = Luv32fromXYZ	1474:4:37132:37156	1070367	1	True				
ANR	1070482	AssignmentExpression	sp -> tfunc = Luv32fromXYZ		1070367	0		=			
ANR	1070483	PtrMemberAccess	sp -> tfunc		1070367	0					
ANR	1070484	Identifier	sp		1070367	0					
ANR	1070485	Identifier	tfunc		1070367	1					
ANR	1070486	Identifier	Luv32fromXYZ		1070367	1					
ANR	1070487	BreakStatement	break ;	1475:4:37164:37169	1070367	2	True				
ANR	1070488	Label	case SGILOGDATAFMT_16BIT :	1476:3:37174:37198	1070367	3	True				
ANR	1070489	Identifier	SGILOGDATAFMT_16BIT		1070367	0					
ANR	1070490	ExpressionStatement	sp -> tfunc = Luv32fromLuv48	1477:4:37204:37230	1070367	4	True				
ANR	1070491	AssignmentExpression	sp -> tfunc = Luv32fromLuv48		1070367	0		=			
ANR	1070492	PtrMemberAccess	sp -> tfunc		1070367	0					
ANR	1070493	Identifier	sp		1070367	0					
ANR	1070494	Identifier	tfunc		1070367	1					
ANR	1070495	Identifier	Luv32fromLuv48		1070367	1					
ANR	1070496	BreakStatement	break ;	1478:4:37238:37243	1070367	5	True				
ANR	1070497	Label	case SGILOGDATAFMT_RAW :	1479:3:37248:37270	1070367	6	True				
ANR	1070498	Identifier	SGILOGDATAFMT_RAW		1070367	0					
ANR	1070499	BreakStatement	break ;	1480:4:37276:37281	1070367	7	True				
ANR	1070500	Label	default :	1481:3:37286:37293	1070367	8	True				
ANR	1070501	Identifier	default		1070367	0					
ANR	1070502	GotoStatement	goto notsupported ;	1482:4:37299:37316	1070367	9	True				
ANR	1070503	Identifier	notsupported		1070367	0					
ANR	1070504	BreakStatement	break ;	1485:2:37329:37334	1070367	3	True				
ANR	1070505	Label	case PHOTOMETRIC_LOGL :	1486:1:37337:37358	1070367	4	True				
ANR	1070506	Identifier	PHOTOMETRIC_LOGL		1070367	0					
ANR	1070507	IfStatement	if ( ! LogL16InitState ( tif ) )		1070367	5					
ANR	1070508	Condition	! LogL16InitState ( tif )	1487:6:37366:37386	1070367	0	True				
ANR	1070509	UnaryOperationExpression	! LogL16InitState ( tif )		1070367	0					
ANR	1070510	UnaryOperator	!		1070367	0					
ANR	1070511	CallExpression	LogL16InitState ( tif )		1070367	1					
ANR	1070512	Callee	LogL16InitState		1070367	0					
ANR	1070513	Identifier	LogL16InitState		1070367	0					
ANR	1070514	ArgumentList	tif		1070367	1					
ANR	1070515	Argument	tif		1070367	0					
ANR	1070516	Identifier	tif		1070367	0					
ANR	1070517	BreakStatement	break ;	1488:3:37392:37397	1070367	1	True				
ANR	1070518	ExpressionStatement	tif -> tif_encoderow = LogL16Encode	1489:2:37401:37434	1070367	6	True				
ANR	1070519	AssignmentExpression	tif -> tif_encoderow = LogL16Encode		1070367	0		=			
ANR	1070520	PtrMemberAccess	tif -> tif_encoderow		1070367	0					
ANR	1070521	Identifier	tif		1070367	0					
ANR	1070522	Identifier	tif_encoderow		1070367	1					
ANR	1070523	Identifier	LogL16Encode		1070367	1					
ANR	1070524	SwitchStatement	switch ( sp -> user_datafmt )		1070367	7					
ANR	1070525	Condition	sp -> user_datafmt	1490:10:37448:37463	1070367	0	True				
ANR	1070526	PtrMemberAccess	sp -> user_datafmt		1070367	0					
ANR	1070527	Identifier	sp		1070367	0					
ANR	1070528	Identifier	user_datafmt		1070367	1					
ANR	1070529	CompoundStatement		44:28:1019:1019	1070367	1					
ANR	1070530	Label	case SGILOGDATAFMT_FLOAT :	1491:2:37470:37494	1070367	0	True				
ANR	1070531	Identifier	SGILOGDATAFMT_FLOAT		1070367	0					
ANR	1070532	ExpressionStatement	sp -> tfunc = L16fromY	1492:3:37499:37519	1070367	1	True				
ANR	1070533	AssignmentExpression	sp -> tfunc = L16fromY		1070367	0		=			
ANR	1070534	PtrMemberAccess	sp -> tfunc		1070367	0					
ANR	1070535	Identifier	sp		1070367	0					
ANR	1070536	Identifier	tfunc		1070367	1					
ANR	1070537	Identifier	L16fromY		1070367	1					
ANR	1070538	BreakStatement	break ;	1493:3:37524:37529	1070367	2	True				
ANR	1070539	Label	case SGILOGDATAFMT_16BIT :	1494:2:37533:37557	1070367	3	True				
ANR	1070540	Identifier	SGILOGDATAFMT_16BIT		1070367	0					
ANR	1070541	BreakStatement	break ;	1495:3:37562:37567	1070367	4	True				
ANR	1070542	Label	default :	1496:2:37571:37578	1070367	5	True				
ANR	1070543	Identifier	default		1070367	0					
ANR	1070544	GotoStatement	goto notsupported ;	1497:3:37583:37600	1070367	6	True				
ANR	1070545	Identifier	notsupported		1070367	0					
ANR	1070546	BreakStatement	break ;	1499:2:37608:37613	1070367	8	True				
ANR	1070547	Label	default :	1500:1:37616:37623	1070367	9	True				
ANR	1070548	Identifier	default		1070367	0					
ANR	1070549	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Inappropriate photometric interpretation %d for SGILog compression; %s"" , td -> td_photometric , ""must be either LogLUV or LogL"" )"	1501:2:37627:37807	1070367	10	True				
ANR	1070550	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Inappropriate photometric interpretation %d for SGILog compression; %s"" , td -> td_photometric , ""must be either LogLUV or LogL"" )"		1070367	0					
ANR	1070551	Callee	TIFFErrorExt		1070367	0					
ANR	1070552	Identifier	TIFFErrorExt		1070367	0					
ANR	1070553	ArgumentList	tif -> tif_clientdata		1070367	1					
ANR	1070554	Argument	tif -> tif_clientdata		1070367	0					
ANR	1070555	PtrMemberAccess	tif -> tif_clientdata		1070367	0					
ANR	1070556	Identifier	tif		1070367	0					
ANR	1070557	Identifier	tif_clientdata		1070367	1					
ANR	1070558	Argument	module		1070367	1					
ANR	1070559	Identifier	module		1070367	0					
ANR	1070560	Argument	"""Inappropriate photometric interpretation %d for SGILog compression; %s"""		1070367	2					
ANR	1070561	PrimaryExpression	"""Inappropriate photometric interpretation %d for SGILog compression; %s"""		1070367	0					
ANR	1070562	Argument	td -> td_photometric		1070367	3					
ANR	1070563	PtrMemberAccess	td -> td_photometric		1070367	0					
ANR	1070564	Identifier	td		1070367	0					
ANR	1070565	Identifier	td_photometric		1070367	1					
ANR	1070566	Argument	"""must be either LogLUV or LogL"""		1070367	4					
ANR	1070567	PrimaryExpression	"""must be either LogLUV or LogL"""		1070367	0					
ANR	1070568	BreakStatement	break ;	1504:2:37811:37816	1070367	11	True				
ANR	1070569	ReturnStatement	return ( 1 ) ;	1506:1:37822:37832	1070367	5	True				
ANR	1070570	PrimaryExpression	1		1070367	0					
ANR	1070571	Label	notsupported :	1507:0:37834:37846	1070367	6	True				
ANR	1070572	Identifier	notsupported		1070367	0					
ANR	1070573	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""SGILog compression supported only for %s, or raw data"" , td -> td_photometric == PHOTOMETRIC_LOGL ? ""Y, L"" : ""XYZ, Luv"" )"	1508:1:37849:38019	1070367	7	True				
ANR	1070574	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""SGILog compression supported only for %s, or raw data"" , td -> td_photometric == PHOTOMETRIC_LOGL ? ""Y, L"" : ""XYZ, Luv"" )"		1070367	0					
ANR	1070575	Callee	TIFFErrorExt		1070367	0					
ANR	1070576	Identifier	TIFFErrorExt		1070367	0					
ANR	1070577	ArgumentList	tif -> tif_clientdata		1070367	1					
ANR	1070578	Argument	tif -> tif_clientdata		1070367	0					
ANR	1070579	PtrMemberAccess	tif -> tif_clientdata		1070367	0					
ANR	1070580	Identifier	tif		1070367	0					
ANR	1070581	Identifier	tif_clientdata		1070367	1					
ANR	1070582	Argument	module		1070367	1					
ANR	1070583	Identifier	module		1070367	0					
ANR	1070584	Argument	"""SGILog compression supported only for %s, or raw data"""		1070367	2					
ANR	1070585	PrimaryExpression	"""SGILog compression supported only for %s, or raw data"""		1070367	0					
ANR	1070586	Argument	"td -> td_photometric == PHOTOMETRIC_LOGL ? ""Y, L"" : ""XYZ, Luv"""		1070367	3					
ANR	1070587	ConditionalExpression	"td -> td_photometric == PHOTOMETRIC_LOGL ? ""Y, L"" : ""XYZ, Luv"""		1070367	0					
ANR	1070588	Condition	td -> td_photometric == PHOTOMETRIC_LOGL		1070367	0					
ANR	1070589	EqualityExpression	td -> td_photometric == PHOTOMETRIC_LOGL		1070367	0		==			
ANR	1070590	PtrMemberAccess	td -> td_photometric		1070367	0					
ANR	1070591	Identifier	td		1070367	0					
ANR	1070592	Identifier	td_photometric		1070367	1					
ANR	1070593	Identifier	PHOTOMETRIC_LOGL		1070367	1					
ANR	1070594	PrimaryExpression	"""Y, L"""		1070367	1					
ANR	1070595	PrimaryExpression	"""XYZ, Luv"""		1070367	2					
ANR	1070596	ReturnStatement	return ( 0 ) ;	1511:1:38022:38032	1070367	8	True				
ANR	1070597	PrimaryExpression	0		1070367	0					
ANR	1070598	ReturnType	static int		1070367	1					
ANR	1070599	Identifier	LogLuvSetupEncode		1070367	2					
ANR	1070600	ParameterList	TIFF * tif		1070367	3					
ANR	1070601	Parameter	TIFF * tif	1446:18:36435:36443	1070367	0	True				
ANR	1070602	ParameterType	TIFF *		1070367	0					
ANR	1070603	Identifier	tif		1070367	1					
ANR	1070604	CFGEntryNode	ENTRY		1070367		True				
ANR	1070605	CFGExitNode	EXIT		1070367		True				
ANR	1070606	Symbol	* sp		1070367						
ANR	1070607	Symbol	COMPRESSION_SGILOG24		1070367						
ANR	1070608	Symbol	tif -> tif_encoderow		1070367						
ANR	1070609	Symbol	& tif -> tif_dir		1070367						
ANR	1070610	Symbol	td -> td_compression		1070367						
ANR	1070611	Symbol	sp -> user_datafmt		1070367						
ANR	1070612	Symbol	Luv24fromXYZ		1070367						
ANR	1070613	Symbol	Luv24fromLuv48		1070367						
ANR	1070614	Symbol	Luv32fromXYZ		1070367						
ANR	1070615	Symbol	tif		1070367						
ANR	1070616	Symbol	PHOTOMETRIC_LOGL		1070367						
ANR	1070617	Symbol	LogLuvInitState		1070367						
ANR	1070618	Symbol	sp -> tfunc		1070367						
ANR	1070619	Symbol	sp		1070367						
ANR	1070620	Symbol	EncoderState		1070367						
ANR	1070621	Symbol	LogLuvEncode32		1070367						
ANR	1070622	Symbol	module		1070367						
ANR	1070623	Symbol	LogL16InitState		1070367						
ANR	1070624	Symbol	LogL16Encode		1070367						
ANR	1070625	Symbol	tif -> tif_clientdata		1070367						
ANR	1070626	Symbol	td		1070367						
ANR	1070627	Symbol	* td		1070367						
ANR	1070628	Symbol	LogLuvEncode24		1070367						
ANR	1070629	Symbol	td -> td_photometric		1070367						
ANR	1070630	Symbol	* tif		1070367						
ANR	1070631	Symbol	Luv32fromLuv48		1070367						
ANR	1070632	Symbol	L16fromY		1070367						
ANR	1070633	Function	LogLuvClose	1514:0:38037:38577							
ANR	1070634	FunctionDef	LogLuvClose (TIFF * tif)		1070633	0					
ANR	1070635	CompoundStatement		1516:0:38072:38577	1070633	0					
ANR	1070636	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	1517:1:38075:38108	1070633	0	True				
ANR	1070637	IdentifierDecl	* td = & tif -> tif_dir		1070633	0					
ANR	1070638	IdentifierDeclType	TIFFDirectory *		1070633	0					
ANR	1070639	Identifier	td		1070633	1					
ANR	1070640	AssignmentExpression	* td = & tif -> tif_dir		1070633	2		=			
ANR	1070641	Identifier	td		1070633	0					
ANR	1070642	UnaryOperationExpression	& tif -> tif_dir		1070633	1					
ANR	1070643	UnaryOperator	&		1070633	0					
ANR	1070644	PtrMemberAccess	tif -> tif_dir		1070633	1					
ANR	1070645	Identifier	tif		1070633	0					
ANR	1070646	Identifier	tif_dir		1070633	1					
ANR	1070647	ExpressionStatement	td -> td_samplesperpixel = ( td -> td_photometric == PHOTOMETRIC_LOGL ) ? 1 : 3	1526:1:38428:38506	1070633	1	True				
ANR	1070648	AssignmentExpression	td -> td_samplesperpixel = ( td -> td_photometric == PHOTOMETRIC_LOGL ) ? 1 : 3		1070633	0		=			
ANR	1070649	PtrMemberAccess	td -> td_samplesperpixel		1070633	0					
ANR	1070650	Identifier	td		1070633	0					
ANR	1070651	Identifier	td_samplesperpixel		1070633	1					
ANR	1070652	ConditionalExpression	( td -> td_photometric == PHOTOMETRIC_LOGL ) ? 1 : 3		1070633	1					
ANR	1070653	Condition	td -> td_photometric == PHOTOMETRIC_LOGL		1070633	0					
ANR	1070654	EqualityExpression	td -> td_photometric == PHOTOMETRIC_LOGL		1070633	0		==			
ANR	1070655	PtrMemberAccess	td -> td_photometric		1070633	0					
ANR	1070656	Identifier	td		1070633	0					
ANR	1070657	Identifier	td_photometric		1070633	1					
ANR	1070658	Identifier	PHOTOMETRIC_LOGL		1070633	1					
ANR	1070659	PrimaryExpression	1		1070633	1					
ANR	1070660	PrimaryExpression	3		1070633	2					
ANR	1070661	ExpressionStatement	td -> td_bitspersample = 16	1528:1:38509:38534	1070633	2	True				
ANR	1070662	AssignmentExpression	td -> td_bitspersample = 16		1070633	0		=			
ANR	1070663	PtrMemberAccess	td -> td_bitspersample		1070633	0					
ANR	1070664	Identifier	td		1070633	0					
ANR	1070665	Identifier	td_bitspersample		1070633	1					
ANR	1070666	PrimaryExpression	16		1070633	1					
ANR	1070667	ExpressionStatement	td -> td_sampleformat = SAMPLEFORMAT_INT	1529:1:38537:38575	1070633	3	True				
ANR	1070668	AssignmentExpression	td -> td_sampleformat = SAMPLEFORMAT_INT		1070633	0		=			
ANR	1070669	PtrMemberAccess	td -> td_sampleformat		1070633	0					
ANR	1070670	Identifier	td		1070633	0					
ANR	1070671	Identifier	td_sampleformat		1070633	1					
ANR	1070672	Identifier	SAMPLEFORMAT_INT		1070633	1					
ANR	1070673	ReturnType	static void		1070633	1					
ANR	1070674	Identifier	LogLuvClose		1070633	2					
ANR	1070675	ParameterList	TIFF * tif		1070633	3					
ANR	1070676	Parameter	TIFF * tif	1515:12:38061:38069	1070633	0	True				
ANR	1070677	ParameterType	TIFF *		1070633	0					
ANR	1070678	Identifier	tif		1070633	1					
ANR	1070679	CFGEntryNode	ENTRY		1070633		True				
ANR	1070680	CFGExitNode	EXIT		1070633		True				
ANR	1070681	Symbol	tif		1070633						
ANR	1070682	Symbol	td		1070633						
ANR	1070683	Symbol	td -> td_samplesperpixel		1070633						
ANR	1070684	Symbol	& tif -> tif_dir		1070633						
ANR	1070685	Symbol	PHOTOMETRIC_LOGL		1070633						
ANR	1070686	Symbol	* td		1070633						
ANR	1070687	Symbol	td -> td_sampleformat		1070633						
ANR	1070688	Symbol	SAMPLEFORMAT_INT		1070633						
ANR	1070689	Symbol	td -> td_photometric		1070633						
ANR	1070690	Symbol	td -> td_bitspersample		1070633						
ANR	1070691	Function	LogLuvCleanup	1532:0:38580:38904							
ANR	1070692	FunctionDef	LogLuvCleanup (TIFF * tif)		1070691	0					
ANR	1070693	CompoundStatement		1534:0:38617:38904	1070691	0					
ANR	1070694	IdentifierDeclStatement	LogLuvState * sp = ( LogLuvState * ) tif -> tif_data ;	1535:1:38620:38666	1070691	0	True				
ANR	1070695	IdentifierDecl	* sp = ( LogLuvState * ) tif -> tif_data		1070691	0					
ANR	1070696	IdentifierDeclType	LogLuvState *		1070691	0					
ANR	1070697	Identifier	sp		1070691	1					
ANR	1070698	AssignmentExpression	* sp = ( LogLuvState * ) tif -> tif_data		1070691	2		=			
ANR	1070699	Identifier	sp		1070691	0					
ANR	1070700	CastExpression	( LogLuvState * ) tif -> tif_data		1070691	1					
ANR	1070701	CastTarget	LogLuvState *		1070691	0					
ANR	1070702	PtrMemberAccess	tif -> tif_data		1070691	1					
ANR	1070703	Identifier	tif		1070691	0					
ANR	1070704	Identifier	tif_data		1070691	1					
ANR	1070705	ExpressionStatement	assert ( sp != 0 )	1537:1:38670:38685	1070691	1	True				
ANR	1070706	CallExpression	assert ( sp != 0 )		1070691	0					
ANR	1070707	Callee	assert		1070691	0					
ANR	1070708	Identifier	assert		1070691	0					
ANR	1070709	ArgumentList	sp != 0		1070691	1					
ANR	1070710	Argument	sp != 0		1070691	0					
ANR	1070711	EqualityExpression	sp != 0		1070691	0		!=			
ANR	1070712	Identifier	sp		1070691	0					
ANR	1070713	PrimaryExpression	0		1070691	1					
ANR	1070714	ExpressionStatement	tif -> tif_tagmethods . vgetfield = sp -> vgetparent	1539:1:38689:38735	1070691	2	True				
ANR	1070715	AssignmentExpression	tif -> tif_tagmethods . vgetfield = sp -> vgetparent		1070691	0		=			
ANR	1070716	MemberAccess	tif -> tif_tagmethods . vgetfield		1070691	0					
ANR	1070717	PtrMemberAccess	tif -> tif_tagmethods		1070691	0					
ANR	1070718	Identifier	tif		1070691	0					
ANR	1070719	Identifier	tif_tagmethods		1070691	1					
ANR	1070720	Identifier	vgetfield		1070691	1					
ANR	1070721	PtrMemberAccess	sp -> vgetparent		1070691	1					
ANR	1070722	Identifier	sp		1070691	0					
ANR	1070723	Identifier	vgetparent		1070691	1					
ANR	1070724	ExpressionStatement	tif -> tif_tagmethods . vsetfield = sp -> vsetparent	1540:1:38738:38784	1070691	3	True				
ANR	1070725	AssignmentExpression	tif -> tif_tagmethods . vsetfield = sp -> vsetparent		1070691	0		=			
ANR	1070726	MemberAccess	tif -> tif_tagmethods . vsetfield		1070691	0					
ANR	1070727	PtrMemberAccess	tif -> tif_tagmethods		1070691	0					
ANR	1070728	Identifier	tif		1070691	0					
ANR	1070729	Identifier	tif_tagmethods		1070691	1					
ANR	1070730	Identifier	vsetfield		1070691	1					
ANR	1070731	PtrMemberAccess	sp -> vsetparent		1070691	1					
ANR	1070732	Identifier	sp		1070691	0					
ANR	1070733	Identifier	vsetparent		1070691	1					
ANR	1070734	IfStatement	if ( sp -> tbuf )		1070691	4					
ANR	1070735	Condition	sp -> tbuf	1542:5:38792:38799	1070691	0	True				
ANR	1070736	PtrMemberAccess	sp -> tbuf		1070691	0					
ANR	1070737	Identifier	sp		1070691	0					
ANR	1070738	Identifier	tbuf		1070691	1					
ANR	1070739	ExpressionStatement	_TIFFfree ( sp -> tbuf )	1543:2:38804:38823	1070691	1	True				
ANR	1070740	CallExpression	_TIFFfree ( sp -> tbuf )		1070691	0					
ANR	1070741	Callee	_TIFFfree		1070691	0					
ANR	1070742	Identifier	_TIFFfree		1070691	0					
ANR	1070743	ArgumentList	sp -> tbuf		1070691	1					
ANR	1070744	Argument	sp -> tbuf		1070691	0					
ANR	1070745	PtrMemberAccess	sp -> tbuf		1070691	0					
ANR	1070746	Identifier	sp		1070691	0					
ANR	1070747	Identifier	tbuf		1070691	1					
ANR	1070748	ExpressionStatement	_TIFFfree ( sp )	1544:1:38826:38839	1070691	5	True				
ANR	1070749	CallExpression	_TIFFfree ( sp )		1070691	0					
ANR	1070750	Callee	_TIFFfree		1070691	0					
ANR	1070751	Identifier	_TIFFfree		1070691	0					
ANR	1070752	ArgumentList	sp		1070691	1					
ANR	1070753	Argument	sp		1070691	0					
ANR	1070754	Identifier	sp		1070691	0					
ANR	1070755	ExpressionStatement	tif -> tif_data = NULL	1545:1:38842:38862	1070691	6	True				
ANR	1070756	AssignmentExpression	tif -> tif_data = NULL		1070691	0		=			
ANR	1070757	PtrMemberAccess	tif -> tif_data		1070691	0					
ANR	1070758	Identifier	tif		1070691	0					
ANR	1070759	Identifier	tif_data		1070691	1					
ANR	1070760	Identifier	NULL		1070691	1					
ANR	1070761	ExpressionStatement	_TIFFSetDefaultCompressionState ( tif )	1547:1:38866:38902	1070691	7	True				
ANR	1070762	CallExpression	_TIFFSetDefaultCompressionState ( tif )		1070691	0					
ANR	1070763	Callee	_TIFFSetDefaultCompressionState		1070691	0					
ANR	1070764	Identifier	_TIFFSetDefaultCompressionState		1070691	0					
ANR	1070765	ArgumentList	tif		1070691	1					
ANR	1070766	Argument	tif		1070691	0					
ANR	1070767	Identifier	tif		1070691	0					
ANR	1070768	ReturnType	static void		1070691	1					
ANR	1070769	Identifier	LogLuvCleanup		1070691	2					
ANR	1070770	ParameterList	TIFF * tif		1070691	3					
ANR	1070771	Parameter	TIFF * tif	1533:14:38606:38614	1070691	0	True				
ANR	1070772	ParameterType	TIFF *		1070691	0					
ANR	1070773	Identifier	tif		1070691	1					
ANR	1070774	CFGEntryNode	ENTRY		1070691		True				
ANR	1070775	CFGExitNode	EXIT		1070691		True				
ANR	1070776	Symbol	tif		1070691						
ANR	1070777	Symbol	* sp		1070691						
ANR	1070778	Symbol	tif -> tif_tagmethods . vsetfield		1070691						
ANR	1070779	Symbol	NULL		1070691						
ANR	1070780	Symbol	tif -> tif_tagmethods		1070691						
ANR	1070781	Symbol	sp -> tbuf		1070691						
ANR	1070782	Symbol	tif -> tif_tagmethods . vgetfield		1070691						
ANR	1070783	Symbol	* tif		1070691						
ANR	1070784	Symbol	sp -> vgetparent		1070691						
ANR	1070785	Symbol	sp		1070691						
ANR	1070786	Symbol	sp -> vsetparent		1070691						
ANR	1070787	Symbol	tif -> tif_data		1070691						
ANR	1070788	Function	LogLuvVSetField	1550:0:38907:40634							
ANR	1070789	FunctionDef	"LogLuvVSetField (TIFF * tif , uint32 tag , va_list ap)"		1070788	0					
ANR	1070790	CompoundStatement		1552:0:38969:40634	1070788	0					
ANR	1070791	Statement	static	1553:1:38972:38977	1070788	0	True				
ANR	1070792	IdentifierDeclStatement	"const char module [ ] = ""LogLuvVSetField"" ;"	1553:8:38979:39018	1070788	1	True				
ANR	1070793	IdentifierDecl	"module [ ] = ""LogLuvVSetField"""		1070788	0					
ANR	1070794	IdentifierDeclType	const char [ ]		1070788	0					
ANR	1070795	Identifier	module		1070788	1					
ANR	1070796	AssignmentExpression	"module [ ] = ""LogLuvVSetField"""		1070788	2		=			
ANR	1070797	Identifier	module		1070788	0					
ANR	1070798	PrimaryExpression	"""LogLuvVSetField"""		1070788	1					
ANR	1070799	IdentifierDeclStatement	LogLuvState * sp = DecoderState ( tif ) ;	1554:1:39021:39056	1070788	2	True				
ANR	1070800	IdentifierDecl	* sp = DecoderState ( tif )		1070788	0					
ANR	1070801	IdentifierDeclType	LogLuvState *		1070788	0					
ANR	1070802	Identifier	sp		1070788	1					
ANR	1070803	AssignmentExpression	* sp = DecoderState ( tif )		1070788	2		=			
ANR	1070804	Identifier	sp		1070788	0					
ANR	1070805	CallExpression	DecoderState ( tif )		1070788	1					
ANR	1070806	Callee	DecoderState		1070788	0					
ANR	1070807	Identifier	DecoderState		1070788	0					
ANR	1070808	ArgumentList	tif		1070788	1					
ANR	1070809	Argument	tif		1070788	0					
ANR	1070810	Identifier	tif		1070788	0					
ANR	1070811	IdentifierDeclStatement	"int bps , fmt ;"	1555:1:39059:39071	1070788	3	True				
ANR	1070812	IdentifierDecl	bps		1070788	0					
ANR	1070813	IdentifierDeclType	int		1070788	0					
ANR	1070814	Identifier	bps		1070788	1					
ANR	1070815	IdentifierDecl	fmt		1070788	1					
ANR	1070816	IdentifierDeclType	int		1070788	0					
ANR	1070817	Identifier	fmt		1070788	1					
ANR	1070818	SwitchStatement	switch ( tag )		1070788	4					
ANR	1070819	Condition	tag	1557:9:39083:39085	1070788	0	True				
ANR	1070820	Identifier	tag		1070788	0					
ANR	1070821	CompoundStatement		6:14:118:118	1070788	1					
ANR	1070822	Label	case TIFFTAG_SGILOGDATAFMT :	1558:1:39091:39117	1070788	0	True				
ANR	1070823	Identifier	TIFFTAG_SGILOGDATAFMT		1070788	0					
ANR	1070824	ExpressionStatement	"sp -> user_datafmt = ( int ) va_arg ( ap , int )"	1559:2:39121:39161	1070788	1	True				
ANR	1070825	AssignmentExpression	"sp -> user_datafmt = ( int ) va_arg ( ap , int )"		1070788	0		=			
ANR	1070826	PtrMemberAccess	sp -> user_datafmt		1070788	0					
ANR	1070827	Identifier	sp		1070788	0					
ANR	1070828	Identifier	user_datafmt		1070788	1					
ANR	1070829	CastExpression	"( int ) va_arg ( ap , int )"		1070788	1					
ANR	1070830	CastTarget	int		1070788	0					
ANR	1070831	CallExpression	"va_arg ( ap , int )"		1070788	1					
ANR	1070832	Callee	va_arg		1070788	0					
ANR	1070833	Identifier	va_arg		1070788	0					
ANR	1070834	ArgumentList	ap		1070788	1					
ANR	1070835	Argument	ap		1070788	0					
ANR	1070836	Identifier	ap		1070788	0					
ANR	1070837	Argument	int		1070788	1					
ANR	1070838	Identifier	int		1070788	0					
ANR	1070839	SwitchStatement	switch ( sp -> user_datafmt )		1070788	2					
ANR	1070840	Condition	sp -> user_datafmt	1566:10:39418:39433	1070788	0	True				
ANR	1070841	PtrMemberAccess	sp -> user_datafmt		1070788	0					
ANR	1070842	Identifier	sp		1070788	0					
ANR	1070843	Identifier	user_datafmt		1070788	1					
ANR	1070844	CompoundStatement		15:28:466:466	1070788	1					
ANR	1070845	Label	case SGILOGDATAFMT_FLOAT :	1567:2:39440:39464	1070788	0	True				
ANR	1070846	Identifier	SGILOGDATAFMT_FLOAT		1070788	0					
ANR	1070847	ExpressionStatement	"bps = 32 , fmt = SAMPLEFORMAT_IEEEFP"	1568:3:39469:39504	1070788	1	True				
ANR	1070848	Expression	"bps = 32 , fmt = SAMPLEFORMAT_IEEEFP"		1070788	0					
ANR	1070849	AssignmentExpression	bps = 32		1070788	0		=			
ANR	1070850	Identifier	bps		1070788	0					
ANR	1070851	PrimaryExpression	32		1070788	1					
ANR	1070852	AssignmentExpression	fmt = SAMPLEFORMAT_IEEEFP		1070788	1		=			
ANR	1070853	Identifier	fmt		1070788	0					
ANR	1070854	Identifier	SAMPLEFORMAT_IEEEFP		1070788	1					
ANR	1070855	BreakStatement	break ;	1569:3:39509:39514	1070788	2	True				
ANR	1070856	Label	case SGILOGDATAFMT_16BIT :	1570:2:39518:39542	1070788	3	True				
ANR	1070857	Identifier	SGILOGDATAFMT_16BIT		1070788	0					
ANR	1070858	ExpressionStatement	"bps = 16 , fmt = SAMPLEFORMAT_INT"	1571:3:39547:39579	1070788	4	True				
ANR	1070859	Expression	"bps = 16 , fmt = SAMPLEFORMAT_INT"		1070788	0					
ANR	1070860	AssignmentExpression	bps = 16		1070788	0		=			
ANR	1070861	Identifier	bps		1070788	0					
ANR	1070862	PrimaryExpression	16		1070788	1					
ANR	1070863	AssignmentExpression	fmt = SAMPLEFORMAT_INT		1070788	1		=			
ANR	1070864	Identifier	fmt		1070788	0					
ANR	1070865	Identifier	SAMPLEFORMAT_INT		1070788	1					
ANR	1070866	BreakStatement	break ;	1572:3:39584:39589	1070788	5	True				
ANR	1070867	Label	case SGILOGDATAFMT_RAW :	1573:2:39593:39615	1070788	6	True				
ANR	1070868	Identifier	SGILOGDATAFMT_RAW		1070788	0					
ANR	1070869	ExpressionStatement	"bps = 32 , fmt = SAMPLEFORMAT_UINT"	1574:3:39620:39653	1070788	7	True				
ANR	1070870	Expression	"bps = 32 , fmt = SAMPLEFORMAT_UINT"		1070788	0					
ANR	1070871	AssignmentExpression	bps = 32		1070788	0		=			
ANR	1070872	Identifier	bps		1070788	0					
ANR	1070873	PrimaryExpression	32		1070788	1					
ANR	1070874	AssignmentExpression	fmt = SAMPLEFORMAT_UINT		1070788	1		=			
ANR	1070875	Identifier	fmt		1070788	0					
ANR	1070876	Identifier	SAMPLEFORMAT_UINT		1070788	1					
ANR	1070877	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_SAMPLESPERPIXEL , 1 )"	1575:3:39658:39703	1070788	8	True				
ANR	1070878	CallExpression	"TIFFSetField ( tif , TIFFTAG_SAMPLESPERPIXEL , 1 )"		1070788	0					
ANR	1070879	Callee	TIFFSetField		1070788	0					
ANR	1070880	Identifier	TIFFSetField		1070788	0					
ANR	1070881	ArgumentList	tif		1070788	1					
ANR	1070882	Argument	tif		1070788	0					
ANR	1070883	Identifier	tif		1070788	0					
ANR	1070884	Argument	TIFFTAG_SAMPLESPERPIXEL		1070788	1					
ANR	1070885	Identifier	TIFFTAG_SAMPLESPERPIXEL		1070788	0					
ANR	1070886	Argument	1		1070788	2					
ANR	1070887	PrimaryExpression	1		1070788	0					
ANR	1070888	BreakStatement	break ;	1576:3:39708:39713	1070788	9	True				
ANR	1070889	Label	case SGILOGDATAFMT_8BIT :	1577:2:39717:39740	1070788	10	True				
ANR	1070890	Identifier	SGILOGDATAFMT_8BIT		1070788	0					
ANR	1070891	ExpressionStatement	"bps = 8 , fmt = SAMPLEFORMAT_UINT"	1578:3:39745:39777	1070788	11	True				
ANR	1070892	Expression	"bps = 8 , fmt = SAMPLEFORMAT_UINT"		1070788	0					
ANR	1070893	AssignmentExpression	bps = 8		1070788	0		=			
ANR	1070894	Identifier	bps		1070788	0					
ANR	1070895	PrimaryExpression	8		1070788	1					
ANR	1070896	AssignmentExpression	fmt = SAMPLEFORMAT_UINT		1070788	1		=			
ANR	1070897	Identifier	fmt		1070788	0					
ANR	1070898	Identifier	SAMPLEFORMAT_UINT		1070788	1					
ANR	1070899	BreakStatement	break ;	1579:3:39782:39787	1070788	12	True				
ANR	1070900	Label	default :	1580:2:39791:39798	1070788	13	True				
ANR	1070901	Identifier	default		1070788	0					
ANR	1070902	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , tif -> tif_name , ""Unknown data format %d for LogLuv compression"" , sp -> user_datafmt )"	1581:3:39803:39932	1070788	14	True				
ANR	1070903	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , tif -> tif_name , ""Unknown data format %d for LogLuv compression"" , sp -> user_datafmt )"		1070788	0					
ANR	1070904	Callee	TIFFErrorExt		1070788	0					
ANR	1070905	Identifier	TIFFErrorExt		1070788	0					
ANR	1070906	ArgumentList	tif -> tif_clientdata		1070788	1					
ANR	1070907	Argument	tif -> tif_clientdata		1070788	0					
ANR	1070908	PtrMemberAccess	tif -> tif_clientdata		1070788	0					
ANR	1070909	Identifier	tif		1070788	0					
ANR	1070910	Identifier	tif_clientdata		1070788	1					
ANR	1070911	Argument	tif -> tif_name		1070788	1					
ANR	1070912	PtrMemberAccess	tif -> tif_name		1070788	0					
ANR	1070913	Identifier	tif		1070788	0					
ANR	1070914	Identifier	tif_name		1070788	1					
ANR	1070915	Argument	"""Unknown data format %d for LogLuv compression"""		1070788	2					
ANR	1070916	PrimaryExpression	"""Unknown data format %d for LogLuv compression"""		1070788	0					
ANR	1070917	Argument	sp -> user_datafmt		1070788	3					
ANR	1070918	PtrMemberAccess	sp -> user_datafmt		1070788	0					
ANR	1070919	Identifier	sp		1070788	0					
ANR	1070920	Identifier	user_datafmt		1070788	1					
ANR	1070921	ReturnStatement	return ( 0 ) ;	1584:3:39937:39947	1070788	15	True				
ANR	1070922	PrimaryExpression	0		1070788	0					
ANR	1070923	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , bps )"	1586:2:39955:40000	1070788	3	True				
ANR	1070924	CallExpression	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , bps )"		1070788	0					
ANR	1070925	Callee	TIFFSetField		1070788	0					
ANR	1070926	Identifier	TIFFSetField		1070788	0					
ANR	1070927	ArgumentList	tif		1070788	1					
ANR	1070928	Argument	tif		1070788	0					
ANR	1070929	Identifier	tif		1070788	0					
ANR	1070930	Argument	TIFFTAG_BITSPERSAMPLE		1070788	1					
ANR	1070931	Identifier	TIFFTAG_BITSPERSAMPLE		1070788	0					
ANR	1070932	Argument	bps		1070788	2					
ANR	1070933	Identifier	bps		1070788	0					
ANR	1070934	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , fmt )"	1587:2:40004:40048	1070788	4	True				
ANR	1070935	CallExpression	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , fmt )"		1070788	0					
ANR	1070936	Callee	TIFFSetField		1070788	0					
ANR	1070937	Identifier	TIFFSetField		1070788	0					
ANR	1070938	ArgumentList	tif		1070788	1					
ANR	1070939	Argument	tif		1070788	0					
ANR	1070940	Identifier	tif		1070788	0					
ANR	1070941	Argument	TIFFTAG_SAMPLEFORMAT		1070788	1					
ANR	1070942	Identifier	TIFFTAG_SAMPLEFORMAT		1070788	0					
ANR	1070943	Argument	fmt		1070788	2					
ANR	1070944	Identifier	fmt		1070788	0					
ANR	1070945	ExpressionStatement	tif -> tif_tilesize = isTiled ( tif ) ? TIFFTileSize ( tif ) : ( tmsize_t ) - 1	1591:2:40118:40186	1070788	5	True				
ANR	1070946	AssignmentExpression	tif -> tif_tilesize = isTiled ( tif ) ? TIFFTileSize ( tif ) : ( tmsize_t ) - 1		1070788	0		=			
ANR	1070947	PtrMemberAccess	tif -> tif_tilesize		1070788	0					
ANR	1070948	Identifier	tif		1070788	0					
ANR	1070949	Identifier	tif_tilesize		1070788	1					
ANR	1070950	ConditionalExpression	isTiled ( tif ) ? TIFFTileSize ( tif ) : ( tmsize_t ) - 1		1070788	1					
ANR	1070951	Condition	isTiled ( tif )		1070788	0					
ANR	1070952	CallExpression	isTiled ( tif )		1070788	0					
ANR	1070953	Callee	isTiled		1070788	0					
ANR	1070954	Identifier	isTiled		1070788	0					
ANR	1070955	ArgumentList	tif		1070788	1					
ANR	1070956	Argument	tif		1070788	0					
ANR	1070957	Identifier	tif		1070788	0					
ANR	1070958	CallExpression	TIFFTileSize ( tif )		1070788	1					
ANR	1070959	Callee	TIFFTileSize		1070788	0					
ANR	1070960	Identifier	TIFFTileSize		1070788	0					
ANR	1070961	ArgumentList	tif		1070788	1					
ANR	1070962	Argument	tif		1070788	0					
ANR	1070963	Identifier	tif		1070788	0					
ANR	1070964	CastExpression	( tmsize_t ) - 1		1070788	2					
ANR	1070965	CastTarget	tmsize_t		1070788	0					
ANR	1070966	UnaryOperationExpression	- 1		1070788	1					
ANR	1070967	UnaryOperator	-		1070788	0					
ANR	1070968	PrimaryExpression	1		1070788	1					
ANR	1070969	ExpressionStatement	tif -> tif_scanlinesize = TIFFScanlineSize ( tif )	1592:2:40190:40235	1070788	6	True				
ANR	1070970	AssignmentExpression	tif -> tif_scanlinesize = TIFFScanlineSize ( tif )		1070788	0		=			
ANR	1070971	PtrMemberAccess	tif -> tif_scanlinesize		1070788	0					
ANR	1070972	Identifier	tif		1070788	0					
ANR	1070973	Identifier	tif_scanlinesize		1070788	1					
ANR	1070974	CallExpression	TIFFScanlineSize ( tif )		1070788	1					
ANR	1070975	Callee	TIFFScanlineSize		1070788	0					
ANR	1070976	Identifier	TIFFScanlineSize		1070788	0					
ANR	1070977	ArgumentList	tif		1070788	1					
ANR	1070978	Argument	tif		1070788	0					
ANR	1070979	Identifier	tif		1070788	0					
ANR	1070980	ReturnStatement	return ( 1 ) ;	1593:2:40239:40249	1070788	7	True				
ANR	1070981	PrimaryExpression	1		1070788	0					
ANR	1070982	Label	case TIFFTAG_SGILOGENCODE :	1594:1:40252:40277	1070788	8	True				
ANR	1070983	Identifier	TIFFTAG_SGILOGENCODE		1070788	0					
ANR	1070984	ExpressionStatement	"sp -> encode_meth = ( int ) va_arg ( ap , int )"	1595:2:40281:40320	1070788	9	True				
ANR	1070985	AssignmentExpression	"sp -> encode_meth = ( int ) va_arg ( ap , int )"		1070788	0		=			
ANR	1070986	PtrMemberAccess	sp -> encode_meth		1070788	0					
ANR	1070987	Identifier	sp		1070788	0					
ANR	1070988	Identifier	encode_meth		1070788	1					
ANR	1070989	CastExpression	"( int ) va_arg ( ap , int )"		1070788	1					
ANR	1070990	CastTarget	int		1070788	0					
ANR	1070991	CallExpression	"va_arg ( ap , int )"		1070788	1					
ANR	1070992	Callee	va_arg		1070788	0					
ANR	1070993	Identifier	va_arg		1070788	0					
ANR	1070994	ArgumentList	ap		1070788	1					
ANR	1070995	Argument	ap		1070788	0					
ANR	1070996	Identifier	ap		1070788	0					
ANR	1070997	Argument	int		1070788	1					
ANR	1070998	Identifier	int		1070788	0					
ANR	1070999	IfStatement	if ( sp -> encode_meth != SGILOGENCODE_NODITHER && sp -> encode_meth != SGILOGENCODE_RANDITHER )		1070788	10					
ANR	1071000	Condition	sp -> encode_meth != SGILOGENCODE_NODITHER && sp -> encode_meth != SGILOGENCODE_RANDITHER	1596:6:40328:40418	1070788	0	True				
ANR	1071001	AndExpression	sp -> encode_meth != SGILOGENCODE_NODITHER && sp -> encode_meth != SGILOGENCODE_RANDITHER		1070788	0		&&			
ANR	1071002	EqualityExpression	sp -> encode_meth != SGILOGENCODE_NODITHER		1070788	0		!=			
ANR	1071003	PtrMemberAccess	sp -> encode_meth		1070788	0					
ANR	1071004	Identifier	sp		1070788	0					
ANR	1071005	Identifier	encode_meth		1070788	1					
ANR	1071006	Identifier	SGILOGENCODE_NODITHER		1070788	1					
ANR	1071007	EqualityExpression	sp -> encode_meth != SGILOGENCODE_RANDITHER		1070788	1		!=			
ANR	1071008	PtrMemberAccess	sp -> encode_meth		1070788	0					
ANR	1071009	Identifier	sp		1070788	0					
ANR	1071010	Identifier	encode_meth		1070788	1					
ANR	1071011	Identifier	SGILOGENCODE_RANDITHER		1070788	1					
ANR	1071012	CompoundStatement		46:49:1451:1451	1070788	1					
ANR	1071013	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Unknown encoding %d for LogLuv compression"" , sp -> encode_meth )"	1598:3:40426:40544	1070788	0	True				
ANR	1071014	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Unknown encoding %d for LogLuv compression"" , sp -> encode_meth )"		1070788	0					
ANR	1071015	Callee	TIFFErrorExt		1070788	0					
ANR	1071016	Identifier	TIFFErrorExt		1070788	0					
ANR	1071017	ArgumentList	tif -> tif_clientdata		1070788	1					
ANR	1071018	Argument	tif -> tif_clientdata		1070788	0					
ANR	1071019	PtrMemberAccess	tif -> tif_clientdata		1070788	0					
ANR	1071020	Identifier	tif		1070788	0					
ANR	1071021	Identifier	tif_clientdata		1070788	1					
ANR	1071022	Argument	module		1070788	1					
ANR	1071023	Identifier	module		1070788	0					
ANR	1071024	Argument	"""Unknown encoding %d for LogLuv compression"""		1070788	2					
ANR	1071025	PrimaryExpression	"""Unknown encoding %d for LogLuv compression"""		1070788	0					
ANR	1071026	Argument	sp -> encode_meth		1070788	3					
ANR	1071027	PtrMemberAccess	sp -> encode_meth		1070788	0					
ANR	1071028	Identifier	sp		1070788	0					
ANR	1071029	Identifier	encode_meth		1070788	1					
ANR	1071030	ReturnStatement	return ( 0 ) ;	1601:3:40549:40559	1070788	1	True				
ANR	1071031	PrimaryExpression	0		1070788	0					
ANR	1071032	ReturnStatement	return ( 1 ) ;	1603:2:40567:40577	1070788	11	True				
ANR	1071033	PrimaryExpression	1		1070788	0					
ANR	1071034	Label	default :	1604:1:40580:40587	1070788	12	True				
ANR	1071035	Identifier	default		1070788	0					
ANR	1071036	ReturnStatement	"return ( * sp -> vsetparent ) ( tif , tag , ap ) ;"	1605:2:40591:40629	1070788	13	True				
ANR	1071037	CallExpression	"( * sp -> vsetparent ) ( tif , tag , ap )"		1070788	0					
ANR	1071038	Callee	* sp -> vsetparent		1070788	0					
ANR	1071039	UnaryOperationExpression	* sp -> vsetparent		1070788	0					
ANR	1071040	UnaryOperator	*		1070788	0					
ANR	1071041	PtrMemberAccess	sp -> vsetparent		1070788	1					
ANR	1071042	Identifier	sp		1070788	0					
ANR	1071043	Identifier	vsetparent		1070788	1					
ANR	1071044	ArgumentList	tif		1070788	1					
ANR	1071045	Argument	tif		1070788	0					
ANR	1071046	Identifier	tif		1070788	0					
ANR	1071047	Argument	tag		1070788	1					
ANR	1071048	Identifier	tag		1070788	0					
ANR	1071049	Argument	ap		1070788	2					
ANR	1071050	Identifier	ap		1070788	0					
ANR	1071051	ReturnType	static int		1070788	1					
ANR	1071052	Identifier	LogLuvVSetField		1070788	2					
ANR	1071053	ParameterList	"TIFF * tif , uint32 tag , va_list ap"		1070788	3					
ANR	1071054	Parameter	TIFF * tif	1551:16:38934:38942	1070788	0	True				
ANR	1071055	ParameterType	TIFF *		1070788	0					
ANR	1071056	Identifier	tif		1070788	1					
ANR	1071057	Parameter	uint32 tag	1551:27:38945:38954	1070788	1	True				
ANR	1071058	ParameterType	uint32		1070788	0					
ANR	1071059	Identifier	tag		1070788	1					
ANR	1071060	Parameter	va_list ap	1551:39:38957:38966	1070788	2	True				
ANR	1071061	ParameterType	va_list		1070788	0					
ANR	1071062	Identifier	ap		1070788	1					
ANR	1071063	CFGEntryNode	ENTRY		1070788		True				
ANR	1071064	CFGExitNode	EXIT		1070788		True				
ANR	1071065	Symbol	* sp		1070788						
ANR	1071066	Symbol	SAMPLEFORMAT_UINT		1070788						
ANR	1071067	Symbol	TIFFTAG_SAMPLEFORMAT		1070788						
ANR	1071068	Symbol	tif -> tif_tilesize		1070788						
ANR	1071069	Symbol	sp -> user_datafmt		1070788						
ANR	1071070	Symbol	TIFFTAG_SAMPLESPERPIXEL		1070788						
ANR	1071071	Symbol	* * sp		1070788						
ANR	1071072	Symbol	fmt		1070788						
ANR	1071073	Symbol	tif		1070788						
ANR	1071074	Symbol	isTiled		1070788						
ANR	1071075	Symbol	DecoderState		1070788						
ANR	1071076	Symbol	tif -> tif_scanlinesize		1070788						
ANR	1071077	Symbol	SGILOGENCODE_RANDITHER		1070788						
ANR	1071078	Symbol	tag		1070788						
ANR	1071079	Symbol	sp -> encode_meth		1070788						
ANR	1071080	Symbol	sp		1070788						
ANR	1071081	Symbol	va_arg		1070788						
ANR	1071082	Symbol	SGILOGENCODE_NODITHER		1070788						
ANR	1071083	Symbol	TIFFScanlineSize		1070788						
ANR	1071084	Symbol	* sp -> vsetparent		1070788						
ANR	1071085	Symbol	bps		1070788						
ANR	1071086	Symbol	SAMPLEFORMAT_INT		1070788						
ANR	1071087	Symbol	module		1070788						
ANR	1071088	Symbol	SAMPLEFORMAT_IEEEFP		1070788						
ANR	1071089	Symbol	sp -> vsetparent		1070788						
ANR	1071090	Symbol	int		1070788						
ANR	1071091	Symbol	ap		1070788						
ANR	1071092	Symbol	tif -> tif_clientdata		1070788						
ANR	1071093	Symbol	TIFFTAG_BITSPERSAMPLE		1070788						
ANR	1071094	Symbol	tif -> tif_name		1070788						
ANR	1071095	Symbol	* tif		1070788						
ANR	1071096	Symbol	TIFFTileSize		1070788						
ANR	1071097	Function	LogLuvVGetField	1609:0:40637:40905							
ANR	1071098	FunctionDef	"LogLuvVGetField (TIFF * tif , uint32 tag , va_list ap)"		1071097	0					
ANR	1071099	CompoundStatement		1611:0:40699:40905	1071097	0					
ANR	1071100	IdentifierDeclStatement	LogLuvState * sp = ( LogLuvState * ) tif -> tif_data ;	1612:1:40702:40748	1071097	0	True				
ANR	1071101	IdentifierDecl	* sp = ( LogLuvState * ) tif -> tif_data		1071097	0					
ANR	1071102	IdentifierDeclType	LogLuvState *		1071097	0					
ANR	1071103	Identifier	sp		1071097	1					
ANR	1071104	AssignmentExpression	* sp = ( LogLuvState * ) tif -> tif_data		1071097	2		=			
ANR	1071105	Identifier	sp		1071097	0					
ANR	1071106	CastExpression	( LogLuvState * ) tif -> tif_data		1071097	1					
ANR	1071107	CastTarget	LogLuvState *		1071097	0					
ANR	1071108	PtrMemberAccess	tif -> tif_data		1071097	1					
ANR	1071109	Identifier	tif		1071097	0					
ANR	1071110	Identifier	tif_data		1071097	1					
ANR	1071111	SwitchStatement	switch ( tag )		1071097	1					
ANR	1071112	Condition	tag	1614:9:40760:40762	1071097	0	True				
ANR	1071113	Identifier	tag		1071097	0					
ANR	1071114	CompoundStatement		4:14:65:65	1071097	1					
ANR	1071115	Label	case TIFFTAG_SGILOGDATAFMT :	1615:1:40768:40794	1071097	0	True				
ANR	1071116	Identifier	TIFFTAG_SGILOGDATAFMT		1071097	0					
ANR	1071117	Statement	*	1616:2:40798:40798	1071097	1	True				
ANR	1071118	Statement	va_arg	1616:3:40799:40804	1071097	2	True				
ANR	1071119	Statement	(	1616:9:40805:40805	1071097	3	True				
ANR	1071120	Statement	ap	1616:10:40806:40807	1071097	4	True				
ANR	1071121	Statement	","	1616:12:40808:40808	1071097	5	True				
ANR	1071122	Statement	int	1616:14:40810:40812	1071097	6	True				
ANR	1071123	Statement	*	1616:17:40813:40813	1071097	7	True				
ANR	1071124	Statement	)	1616:18:40814:40814	1071097	8	True				
ANR	1071125	Statement	=	1616:20:40816:40816	1071097	9	True				
ANR	1071126	ExpressionStatement	sp -> user_datafmt	1616:22:40818:40834	1071097	10	True				
ANR	1071127	PtrMemberAccess	sp -> user_datafmt		1071097	0					
ANR	1071128	Identifier	sp		1071097	0					
ANR	1071129	Identifier	user_datafmt		1071097	1					
ANR	1071130	ReturnStatement	return ( 1 ) ;	1617:2:40838:40848	1071097	11	True				
ANR	1071131	PrimaryExpression	1		1071097	0					
ANR	1071132	Label	default :	1618:1:40851:40858	1071097	12	True				
ANR	1071133	Identifier	default		1071097	0					
ANR	1071134	ReturnStatement	"return ( * sp -> vgetparent ) ( tif , tag , ap ) ;"	1619:2:40862:40900	1071097	13	True				
ANR	1071135	CallExpression	"( * sp -> vgetparent ) ( tif , tag , ap )"		1071097	0					
ANR	1071136	Callee	* sp -> vgetparent		1071097	0					
ANR	1071137	UnaryOperationExpression	* sp -> vgetparent		1071097	0					
ANR	1071138	UnaryOperator	*		1071097	0					
ANR	1071139	PtrMemberAccess	sp -> vgetparent		1071097	1					
ANR	1071140	Identifier	sp		1071097	0					
ANR	1071141	Identifier	vgetparent		1071097	1					
ANR	1071142	ArgumentList	tif		1071097	1					
ANR	1071143	Argument	tif		1071097	0					
ANR	1071144	Identifier	tif		1071097	0					
ANR	1071145	Argument	tag		1071097	1					
ANR	1071146	Identifier	tag		1071097	0					
ANR	1071147	Argument	ap		1071097	2					
ANR	1071148	Identifier	ap		1071097	0					
ANR	1071149	ReturnType	static int		1071097	1					
ANR	1071150	Identifier	LogLuvVGetField		1071097	2					
ANR	1071151	ParameterList	"TIFF * tif , uint32 tag , va_list ap"		1071097	3					
ANR	1071152	Parameter	TIFF * tif	1610:16:40664:40672	1071097	0	True				
ANR	1071153	ParameterType	TIFF *		1071097	0					
ANR	1071154	Identifier	tif		1071097	1					
ANR	1071155	Parameter	uint32 tag	1610:27:40675:40684	1071097	1	True				
ANR	1071156	ParameterType	uint32		1071097	0					
ANR	1071157	Identifier	tag		1071097	1					
ANR	1071158	Parameter	va_list ap	1610:39:40687:40696	1071097	2	True				
ANR	1071159	ParameterType	va_list		1071097	0					
ANR	1071160	Identifier	ap		1071097	1					
ANR	1071161	CFGEntryNode	ENTRY		1071097		True				
ANR	1071162	CFGExitNode	EXIT		1071097		True				
ANR	1071163	Symbol	tif		1071097						
ANR	1071164	Symbol	* sp		1071097						
ANR	1071165	Symbol	* sp -> vgetparent		1071097						
ANR	1071166	Symbol	tag		1071097						
ANR	1071167	Symbol	* tif		1071097						
ANR	1071168	Symbol	* * sp		1071097						
ANR	1071169	Symbol	sp -> vgetparent		1071097						
ANR	1071170	Symbol	sp		1071097						
ANR	1071171	Symbol	tif -> tif_data		1071097						
ANR	1071172	Symbol	ap		1071097						
ANR	1071173	DeclStmt									
ANR	1071174	Decl							const TIFFField	const TIFFField [ ]	LogLuvFields
ANR	1071175	Function	TIFFInitSGILog	1628:0:41233:43018							
ANR	1071176	FunctionDef	"TIFFInitSGILog (TIFF * tif , int scheme)"		1071175	0					
ANR	1071177	CompoundStatement		1630:0:41275:43018	1071175	0					
ANR	1071178	Statement	static	1631:1:41278:41283	1071175	0	True				
ANR	1071179	IdentifierDeclStatement	"const char module [ ] = ""TIFFInitSGILog"" ;"	1631:8:41285:41323	1071175	1	True				
ANR	1071180	IdentifierDecl	"module [ ] = ""TIFFInitSGILog"""		1071175	0					
ANR	1071181	IdentifierDeclType	const char [ ]		1071175	0					
ANR	1071182	Identifier	module		1071175	1					
ANR	1071183	AssignmentExpression	"module [ ] = ""TIFFInitSGILog"""		1071175	2		=			
ANR	1071184	Identifier	module		1071175	0					
ANR	1071185	PrimaryExpression	"""TIFFInitSGILog"""		1071175	1					
ANR	1071186	IdentifierDeclStatement	LogLuvState * sp ;	1632:1:41326:41341	1071175	2	True				
ANR	1071187	IdentifierDecl	* sp		1071175	0					
ANR	1071188	IdentifierDeclType	LogLuvState *		1071175	0					
ANR	1071189	Identifier	sp		1071175	1					
ANR	1071190	ExpressionStatement	assert ( scheme == COMPRESSION_SGILOG24 || scheme == COMPRESSION_SGILOG )	1634:1:41345:41415	1071175	3	True				
ANR	1071191	CallExpression	assert ( scheme == COMPRESSION_SGILOG24 || scheme == COMPRESSION_SGILOG )		1071175	0					
ANR	1071192	Callee	assert		1071175	0					
ANR	1071193	Identifier	assert		1071175	0					
ANR	1071194	ArgumentList	scheme == COMPRESSION_SGILOG24 || scheme == COMPRESSION_SGILOG		1071175	1					
ANR	1071195	Argument	scheme == COMPRESSION_SGILOG24 || scheme == COMPRESSION_SGILOG		1071175	0					
ANR	1071196	OrExpression	scheme == COMPRESSION_SGILOG24 || scheme == COMPRESSION_SGILOG		1071175	0		||			
ANR	1071197	EqualityExpression	scheme == COMPRESSION_SGILOG24		1071175	0		==			
ANR	1071198	Identifier	scheme		1071175	0					
ANR	1071199	Identifier	COMPRESSION_SGILOG24		1071175	1					
ANR	1071200	EqualityExpression	scheme == COMPRESSION_SGILOG		1071175	1		==			
ANR	1071201	Identifier	scheme		1071175	0					
ANR	1071202	Identifier	COMPRESSION_SGILOG		1071175	1					
ANR	1071203	IfStatement	"if ( ! _TIFFMergeFields ( tif , LogLuvFields , TIFFArrayCount ( LogLuvFields ) ) )"		1071175	4					
ANR	1071204	Condition	"! _TIFFMergeFields ( tif , LogLuvFields , TIFFArrayCount ( LogLuvFields ) )"	1639:5:41474:41548	1071175	0	True				
ANR	1071205	UnaryOperationExpression	"! _TIFFMergeFields ( tif , LogLuvFields , TIFFArrayCount ( LogLuvFields ) )"		1071175	0					
ANR	1071206	UnaryOperator	!		1071175	0					
ANR	1071207	CallExpression	"_TIFFMergeFields ( tif , LogLuvFields , TIFFArrayCount ( LogLuvFields ) )"		1071175	1					
ANR	1071208	Callee	_TIFFMergeFields		1071175	0					
ANR	1071209	Identifier	_TIFFMergeFields		1071175	0					
ANR	1071210	ArgumentList	tif		1071175	1					
ANR	1071211	Argument	tif		1071175	0					
ANR	1071212	Identifier	tif		1071175	0					
ANR	1071213	Argument	LogLuvFields		1071175	1					
ANR	1071214	Identifier	LogLuvFields		1071175	0					
ANR	1071215	Argument	TIFFArrayCount ( LogLuvFields )		1071175	2					
ANR	1071216	CallExpression	TIFFArrayCount ( LogLuvFields )		1071175	0					
ANR	1071217	Callee	TIFFArrayCount		1071175	0					
ANR	1071218	Identifier	TIFFArrayCount		1071175	0					
ANR	1071219	ArgumentList	LogLuvFields		1071175	1					
ANR	1071220	Argument	LogLuvFields		1071175	0					
ANR	1071221	Identifier	LogLuvFields		1071175	0					
ANR	1071222	CompoundStatement		11:40:275:275	1071175	1					
ANR	1071223	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Merging SGILog codec-specific tags failed"" )"	1641:2:41555:41647	1071175	0	True				
ANR	1071224	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Merging SGILog codec-specific tags failed"" )"		1071175	0					
ANR	1071225	Callee	TIFFErrorExt		1071175	0					
ANR	1071226	Identifier	TIFFErrorExt		1071175	0					
ANR	1071227	ArgumentList	tif -> tif_clientdata		1071175	1					
ANR	1071228	Argument	tif -> tif_clientdata		1071175	0					
ANR	1071229	PtrMemberAccess	tif -> tif_clientdata		1071175	0					
ANR	1071230	Identifier	tif		1071175	0					
ANR	1071231	Identifier	tif_clientdata		1071175	1					
ANR	1071232	Argument	module		1071175	1					
ANR	1071233	Identifier	module		1071175	0					
ANR	1071234	Argument	"""Merging SGILog codec-specific tags failed"""		1071175	2					
ANR	1071235	PrimaryExpression	"""Merging SGILog codec-specific tags failed"""		1071175	0					
ANR	1071236	ReturnStatement	return 0 ;	1643:2:41651:41659	1071175	1	True				
ANR	1071237	PrimaryExpression	0		1071175	0					
ANR	1071238	ExpressionStatement	tif -> tif_data = ( uint8 * ) _TIFFmalloc ( sizeof ( LogLuvState ) )	1649:1:41746:41804	1071175	5	True				
ANR	1071239	AssignmentExpression	tif -> tif_data = ( uint8 * ) _TIFFmalloc ( sizeof ( LogLuvState ) )		1071175	0		=			
ANR	1071240	PtrMemberAccess	tif -> tif_data		1071175	0					
ANR	1071241	Identifier	tif		1071175	0					
ANR	1071242	Identifier	tif_data		1071175	1					
ANR	1071243	CastExpression	( uint8 * ) _TIFFmalloc ( sizeof ( LogLuvState ) )		1071175	1					
ANR	1071244	CastTarget	uint8 *		1071175	0					
ANR	1071245	CallExpression	_TIFFmalloc ( sizeof ( LogLuvState ) )		1071175	1					
ANR	1071246	Callee	_TIFFmalloc		1071175	0					
ANR	1071247	Identifier	_TIFFmalloc		1071175	0					
ANR	1071248	ArgumentList	sizeof ( LogLuvState )		1071175	1					
ANR	1071249	Argument	sizeof ( LogLuvState )		1071175	0					
ANR	1071250	SizeofExpression	sizeof ( LogLuvState )		1071175	0					
ANR	1071251	Sizeof	sizeof		1071175	0					
ANR	1071252	SizeofOperand	LogLuvState		1071175	1					
ANR	1071253	IfStatement	if ( tif -> tif_data == NULL )		1071175	6					
ANR	1071254	Condition	tif -> tif_data == NULL	1650:5:41811:41831	1071175	0	True				
ANR	1071255	EqualityExpression	tif -> tif_data == NULL		1071175	0		==			
ANR	1071256	PtrMemberAccess	tif -> tif_data		1071175	0					
ANR	1071257	Identifier	tif		1071175	0					
ANR	1071258	Identifier	tif_data		1071175	1					
ANR	1071259	Identifier	NULL		1071175	1					
ANR	1071260	GotoStatement	goto bad ;	1651:2:41836:41844	1071175	1	True				
ANR	1071261	Identifier	bad		1071175	0					
ANR	1071262	ExpressionStatement	sp = ( LogLuvState * ) tif -> tif_data	1652:1:41847:41880	1071175	7	True				
ANR	1071263	AssignmentExpression	sp = ( LogLuvState * ) tif -> tif_data		1071175	0		=			
ANR	1071264	Identifier	sp		1071175	0					
ANR	1071265	CastExpression	( LogLuvState * ) tif -> tif_data		1071175	1					
ANR	1071266	CastTarget	LogLuvState *		1071175	0					
ANR	1071267	PtrMemberAccess	tif -> tif_data		1071175	1					
ANR	1071268	Identifier	tif		1071175	0					
ANR	1071269	Identifier	tif_data		1071175	1					
ANR	1071270	ExpressionStatement	"_TIFFmemset ( ( void * ) sp , 0 , sizeof ( * sp ) )"	1653:1:41883:41922	1071175	8	True				
ANR	1071271	CallExpression	"_TIFFmemset ( ( void * ) sp , 0 , sizeof ( * sp ) )"		1071175	0					
ANR	1071272	Callee	_TIFFmemset		1071175	0					
ANR	1071273	Identifier	_TIFFmemset		1071175	0					
ANR	1071274	ArgumentList	( void * ) sp		1071175	1					
ANR	1071275	Argument	( void * ) sp		1071175	0					
ANR	1071276	CastExpression	( void * ) sp		1071175	0					
ANR	1071277	CastTarget	void *		1071175	0					
ANR	1071278	Identifier	sp		1071175	1					
ANR	1071279	Argument	0		1071175	1					
ANR	1071280	PrimaryExpression	0		1071175	0					
ANR	1071281	Argument	sizeof ( * sp )		1071175	2					
ANR	1071282	SizeofExpression	sizeof ( * sp )		1071175	0					
ANR	1071283	Sizeof	sizeof		1071175	0					
ANR	1071284	UnaryOperationExpression	* sp		1071175	1					
ANR	1071285	UnaryOperator	*		1071175	0					
ANR	1071286	Identifier	sp		1071175	1					
ANR	1071287	ExpressionStatement	sp -> user_datafmt = SGILOGDATAFMT_UNKNOWN	1654:1:41925:41965	1071175	9	True				
ANR	1071288	AssignmentExpression	sp -> user_datafmt = SGILOGDATAFMT_UNKNOWN		1071175	0		=			
ANR	1071289	PtrMemberAccess	sp -> user_datafmt		1071175	0					
ANR	1071290	Identifier	sp		1071175	0					
ANR	1071291	Identifier	user_datafmt		1071175	1					
ANR	1071292	Identifier	SGILOGDATAFMT_UNKNOWN		1071175	1					
ANR	1071293	ExpressionStatement	sp -> encode_meth = ( scheme == COMPRESSION_SGILOG24 ) ? SGILOGENCODE_RANDITHER : SGILOGENCODE_NODITHER	1655:1:41968:42072	1071175	10	True				
ANR	1071294	AssignmentExpression	sp -> encode_meth = ( scheme == COMPRESSION_SGILOG24 ) ? SGILOGENCODE_RANDITHER : SGILOGENCODE_NODITHER		1071175	0		=			
ANR	1071295	PtrMemberAccess	sp -> encode_meth		1071175	0					
ANR	1071296	Identifier	sp		1071175	0					
ANR	1071297	Identifier	encode_meth		1071175	1					
ANR	1071298	ConditionalExpression	( scheme == COMPRESSION_SGILOG24 ) ? SGILOGENCODE_RANDITHER : SGILOGENCODE_NODITHER		1071175	1					
ANR	1071299	Condition	scheme == COMPRESSION_SGILOG24		1071175	0					
ANR	1071300	EqualityExpression	scheme == COMPRESSION_SGILOG24		1071175	0		==			
ANR	1071301	Identifier	scheme		1071175	0					
ANR	1071302	Identifier	COMPRESSION_SGILOG24		1071175	1					
ANR	1071303	Identifier	SGILOGENCODE_RANDITHER		1071175	1					
ANR	1071304	Identifier	SGILOGENCODE_NODITHER		1071175	2					
ANR	1071305	ExpressionStatement	sp -> tfunc = _logLuvNop	1657:1:42075:42097	1071175	11	True				
ANR	1071306	AssignmentExpression	sp -> tfunc = _logLuvNop		1071175	0		=			
ANR	1071307	PtrMemberAccess	sp -> tfunc		1071175	0					
ANR	1071308	Identifier	sp		1071175	0					
ANR	1071309	Identifier	tfunc		1071175	1					
ANR	1071310	Identifier	_logLuvNop		1071175	1					
ANR	1071311	ExpressionStatement	tif -> tif_fixuptags = LogLuvFixupTags	1664:1:42212:42248	1071175	12	True				
ANR	1071312	AssignmentExpression	tif -> tif_fixuptags = LogLuvFixupTags		1071175	0		=			
ANR	1071313	PtrMemberAccess	tif -> tif_fixuptags		1071175	0					
ANR	1071314	Identifier	tif		1071175	0					
ANR	1071315	Identifier	tif_fixuptags		1071175	1					
ANR	1071316	Identifier	LogLuvFixupTags		1071175	1					
ANR	1071317	ExpressionStatement	tif -> tif_setupdecode = LogLuvSetupDecode	1665:1:42253:42293	1071175	13	True				
ANR	1071318	AssignmentExpression	tif -> tif_setupdecode = LogLuvSetupDecode		1071175	0		=			
ANR	1071319	PtrMemberAccess	tif -> tif_setupdecode		1071175	0					
ANR	1071320	Identifier	tif		1071175	0					
ANR	1071321	Identifier	tif_setupdecode		1071175	1					
ANR	1071322	Identifier	LogLuvSetupDecode		1071175	1					
ANR	1071323	ExpressionStatement	tif -> tif_decodestrip = LogLuvDecodeStrip	1666:1:42296:42336	1071175	14	True				
ANR	1071324	AssignmentExpression	tif -> tif_decodestrip = LogLuvDecodeStrip		1071175	0		=			
ANR	1071325	PtrMemberAccess	tif -> tif_decodestrip		1071175	0					
ANR	1071326	Identifier	tif		1071175	0					
ANR	1071327	Identifier	tif_decodestrip		1071175	1					
ANR	1071328	Identifier	LogLuvDecodeStrip		1071175	1					
ANR	1071329	ExpressionStatement	tif -> tif_decodetile = LogLuvDecodeTile	1667:1:42339:42377	1071175	15	True				
ANR	1071330	AssignmentExpression	tif -> tif_decodetile = LogLuvDecodeTile		1071175	0		=			
ANR	1071331	PtrMemberAccess	tif -> tif_decodetile		1071175	0					
ANR	1071332	Identifier	tif		1071175	0					
ANR	1071333	Identifier	tif_decodetile		1071175	1					
ANR	1071334	Identifier	LogLuvDecodeTile		1071175	1					
ANR	1071335	ExpressionStatement	tif -> tif_setupencode = LogLuvSetupEncode	1668:1:42380:42420	1071175	16	True				
ANR	1071336	AssignmentExpression	tif -> tif_setupencode = LogLuvSetupEncode		1071175	0		=			
ANR	1071337	PtrMemberAccess	tif -> tif_setupencode		1071175	0					
ANR	1071338	Identifier	tif		1071175	0					
ANR	1071339	Identifier	tif_setupencode		1071175	1					
ANR	1071340	Identifier	LogLuvSetupEncode		1071175	1					
ANR	1071341	ExpressionStatement	tif -> tif_encodestrip = LogLuvEncodeStrip	1669:1:42423:42463	1071175	17	True				
ANR	1071342	AssignmentExpression	tif -> tif_encodestrip = LogLuvEncodeStrip		1071175	0		=			
ANR	1071343	PtrMemberAccess	tif -> tif_encodestrip		1071175	0					
ANR	1071344	Identifier	tif		1071175	0					
ANR	1071345	Identifier	tif_encodestrip		1071175	1					
ANR	1071346	Identifier	LogLuvEncodeStrip		1071175	1					
ANR	1071347	ExpressionStatement	tif -> tif_encodetile = LogLuvEncodeTile	1670:1:42468:42506	1071175	18	True				
ANR	1071348	AssignmentExpression	tif -> tif_encodetile = LogLuvEncodeTile		1071175	0		=			
ANR	1071349	PtrMemberAccess	tif -> tif_encodetile		1071175	0					
ANR	1071350	Identifier	tif		1071175	0					
ANR	1071351	Identifier	tif_encodetile		1071175	1					
ANR	1071352	Identifier	LogLuvEncodeTile		1071175	1					
ANR	1071353	ExpressionStatement	tif -> tif_close = LogLuvClose	1671:1:42509:42537	1071175	19	True				
ANR	1071354	AssignmentExpression	tif -> tif_close = LogLuvClose		1071175	0		=			
ANR	1071355	PtrMemberAccess	tif -> tif_close		1071175	0					
ANR	1071356	Identifier	tif		1071175	0					
ANR	1071357	Identifier	tif_close		1071175	1					
ANR	1071358	Identifier	LogLuvClose		1071175	1					
ANR	1071359	ExpressionStatement	tif -> tif_cleanup = LogLuvCleanup	1672:1:42540:42572	1071175	20	True				
ANR	1071360	AssignmentExpression	tif -> tif_cleanup = LogLuvCleanup		1071175	0		=			
ANR	1071361	PtrMemberAccess	tif -> tif_cleanup		1071175	0					
ANR	1071362	Identifier	tif		1071175	0					
ANR	1071363	Identifier	tif_cleanup		1071175	1					
ANR	1071364	Identifier	LogLuvCleanup		1071175	1					
ANR	1071365	ExpressionStatement	sp -> vgetparent = tif -> tif_tagmethods . vgetfield	1677:1:42628:42674	1071175	21	True				
ANR	1071366	AssignmentExpression	sp -> vgetparent = tif -> tif_tagmethods . vgetfield		1071175	0		=			
ANR	1071367	PtrMemberAccess	sp -> vgetparent		1071175	0					
ANR	1071368	Identifier	sp		1071175	0					
ANR	1071369	Identifier	vgetparent		1071175	1					
ANR	1071370	MemberAccess	tif -> tif_tagmethods . vgetfield		1071175	1					
ANR	1071371	PtrMemberAccess	tif -> tif_tagmethods		1071175	0					
ANR	1071372	Identifier	tif		1071175	0					
ANR	1071373	Identifier	tif_tagmethods		1071175	1					
ANR	1071374	Identifier	vgetfield		1071175	1					
ANR	1071375	ExpressionStatement	tif -> tif_tagmethods . vgetfield = LogLuvVGetField	1678:1:42677:42724	1071175	22	True				
ANR	1071376	AssignmentExpression	tif -> tif_tagmethods . vgetfield = LogLuvVGetField		1071175	0		=			
ANR	1071377	MemberAccess	tif -> tif_tagmethods . vgetfield		1071175	0					
ANR	1071378	PtrMemberAccess	tif -> tif_tagmethods		1071175	0					
ANR	1071379	Identifier	tif		1071175	0					
ANR	1071380	Identifier	tif_tagmethods		1071175	1					
ANR	1071381	Identifier	vgetfield		1071175	1					
ANR	1071382	Identifier	LogLuvVGetField		1071175	1					
ANR	1071383	ExpressionStatement	sp -> vsetparent = tif -> tif_tagmethods . vsetfield	1679:1:42755:42801	1071175	23	True				
ANR	1071384	AssignmentExpression	sp -> vsetparent = tif -> tif_tagmethods . vsetfield		1071175	0		=			
ANR	1071385	PtrMemberAccess	sp -> vsetparent		1071175	0					
ANR	1071386	Identifier	sp		1071175	0					
ANR	1071387	Identifier	vsetparent		1071175	1					
ANR	1071388	MemberAccess	tif -> tif_tagmethods . vsetfield		1071175	1					
ANR	1071389	PtrMemberAccess	tif -> tif_tagmethods		1071175	0					
ANR	1071390	Identifier	tif		1071175	0					
ANR	1071391	Identifier	tif_tagmethods		1071175	1					
ANR	1071392	Identifier	vsetfield		1071175	1					
ANR	1071393	ExpressionStatement	tif -> tif_tagmethods . vsetfield = LogLuvVSetField	1680:1:42804:42851	1071175	24	True				
ANR	1071394	AssignmentExpression	tif -> tif_tagmethods . vsetfield = LogLuvVSetField		1071175	0		=			
ANR	1071395	MemberAccess	tif -> tif_tagmethods . vsetfield		1071175	0					
ANR	1071396	PtrMemberAccess	tif -> tif_tagmethods		1071175	0					
ANR	1071397	Identifier	tif		1071175	0					
ANR	1071398	Identifier	tif_tagmethods		1071175	1					
ANR	1071399	Identifier	vsetfield		1071175	1					
ANR	1071400	Identifier	LogLuvVSetField		1071175	1					
ANR	1071401	ReturnStatement	return ( 1 ) ;	1682:1:42883:42893	1071175	25	True				
ANR	1071402	PrimaryExpression	1		1071175	0					
ANR	1071403	Label	bad :	1683:0:42895:42898	1071175	26	True				
ANR	1071404	Identifier	bad		1071175	0					
ANR	1071405	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%s: No space for LogLuv state block"" , tif -> tif_name )"	1684:1:42901:43003	1071175	27	True				
ANR	1071406	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%s: No space for LogLuv state block"" , tif -> tif_name )"		1071175	0					
ANR	1071407	Callee	TIFFErrorExt		1071175	0					
ANR	1071408	Identifier	TIFFErrorExt		1071175	0					
ANR	1071409	ArgumentList	tif -> tif_clientdata		1071175	1					
ANR	1071410	Argument	tif -> tif_clientdata		1071175	0					
ANR	1071411	PtrMemberAccess	tif -> tif_clientdata		1071175	0					
ANR	1071412	Identifier	tif		1071175	0					
ANR	1071413	Identifier	tif_clientdata		1071175	1					
ANR	1071414	Argument	module		1071175	1					
ANR	1071415	Identifier	module		1071175	0					
ANR	1071416	Argument	"""%s: No space for LogLuv state block"""		1071175	2					
ANR	1071417	PrimaryExpression	"""%s: No space for LogLuv state block"""		1071175	0					
ANR	1071418	Argument	tif -> tif_name		1071175	3					
ANR	1071419	PtrMemberAccess	tif -> tif_name		1071175	0					
ANR	1071420	Identifier	tif		1071175	0					
ANR	1071421	Identifier	tif_name		1071175	1					
ANR	1071422	ReturnStatement	return ( 0 ) ;	1686:1:43006:43016	1071175	28	True				
ANR	1071423	PrimaryExpression	0		1071175	0					
ANR	1071424	ReturnType	int		1071175	1					
ANR	1071425	Identifier	TIFFInitSGILog		1071175	2					
ANR	1071426	ParameterList	"TIFF * tif , int scheme"		1071175	3					
ANR	1071427	Parameter	TIFF * tif	1629:15:41252:41260	1071175	0	True				
ANR	1071428	ParameterType	TIFF *		1071175	0					
ANR	1071429	Identifier	tif		1071175	1					
ANR	1071430	Parameter	int scheme	1629:26:41263:41272	1071175	1	True				
ANR	1071431	ParameterType	int		1071175	0					
ANR	1071432	Identifier	scheme		1071175	1					
ANR	1071433	CFGEntryNode	ENTRY		1071175		True				
ANR	1071434	CFGExitNode	EXIT		1071175		True				
ANR	1071435	Symbol	* sp		1071175						
ANR	1071436	Symbol	COMPRESSION_SGILOG24		1071175						
ANR	1071437	Symbol	LogLuvCleanup		1071175						
ANR	1071438	Symbol	scheme		1071175						
ANR	1071439	Symbol	COMPRESSION_SGILOG		1071175						
ANR	1071440	Symbol	_TIFFMergeFields		1071175						
ANR	1071441	Symbol	sp -> user_datafmt		1071175						
ANR	1071442	Symbol	tif -> tif_encodestrip		1071175						
ANR	1071443	Symbol	sp -> vgetparent		1071175						
ANR	1071444	Symbol	tif		1071175						
ANR	1071445	Symbol	tif -> tif_cleanup		1071175						
ANR	1071446	Symbol	tif -> tif_tagmethods		1071175						
ANR	1071447	Symbol	LogLuvFields		1071175						
ANR	1071448	Symbol	LogLuvDecodeTile		1071175						
ANR	1071449	Symbol	SGILOGENCODE_RANDITHER		1071175						
ANR	1071450	Symbol	tif -> tif_fixuptags		1071175						
ANR	1071451	Symbol	tif -> tif_setupdecode		1071175						
ANR	1071452	Symbol	SGILOGDATAFMT_UNKNOWN		1071175						
ANR	1071453	Symbol	tif -> tif_tagmethods . vgetfield		1071175						
ANR	1071454	Symbol	sp -> encode_meth		1071175						
ANR	1071455	Symbol	tif -> tif_decodetile		1071175						
ANR	1071456	Symbol	_logLuvNop		1071175						
ANR	1071457	Symbol	sp -> tfunc		1071175						
ANR	1071458	Symbol	sp		1071175						
ANR	1071459	Symbol	tif -> tif_data		1071175						
ANR	1071460	Symbol	tif -> tif_decodestrip		1071175						
ANR	1071461	Symbol	LogLuvSetupDecode		1071175						
ANR	1071462	Symbol	tif -> tif_tagmethods . vsetfield		1071175						
ANR	1071463	Symbol	SGILOGENCODE_NODITHER		1071175						
ANR	1071464	Symbol	NULL		1071175						
ANR	1071465	Symbol	module		1071175						
ANR	1071466	Symbol	LogLuvEncodeTile		1071175						
ANR	1071467	Symbol	sp -> vsetparent		1071175						
ANR	1071468	Symbol	tif -> tif_clientdata		1071175						
ANR	1071469	Symbol	tif -> tif_encodetile		1071175						
ANR	1071470	Symbol	LogLuvVSetField		1071175						
ANR	1071471	Symbol	tif -> tif_setupencode		1071175						
ANR	1071472	Symbol	tif -> tif_name		1071175						
ANR	1071473	Symbol	TIFFArrayCount		1071175						
ANR	1071474	Symbol	LogLuvEncodeStrip		1071175						
ANR	1071475	Symbol	LogLuvDecodeStrip		1071175						
ANR	1071476	Symbol	_TIFFmalloc		1071175						
ANR	1071477	Symbol	tif -> tif_close		1071175						
ANR	1071478	Symbol	LogLuvVGetField		1071175						
ANR	1071479	Symbol	LogLuvFixupTags		1071175						
ANR	1071480	Symbol	LogLuvClose		1071175						
ANR	1071481	Symbol	* tif		1071175						
ANR	1071482	Symbol	LogLuvSetupEncode		1071175						
