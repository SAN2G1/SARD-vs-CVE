command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	804491	File	data/converged/CVE-2019-12973_openjpeg/thirdparty_liblcms2_src_cmsplugin.c								
ANR	804492	Function	_cmsAdjustEndianess16	37:0:1703:1972							
ANR	804493	FunctionDef	_cmsAdjustEndianess16 (cmsUInt16Number Word)		804492	0					
ANR	804494	CompoundStatement		38:0:1774:1972	804492	0					
ANR	804495	IdentifierDeclStatement	cmsUInt8Number * pByte = ( cmsUInt8Number * ) & Word ;	41:4:1808:1855	804492	0	True				
ANR	804496	IdentifierDecl	* pByte = ( cmsUInt8Number * ) & Word		804492	0					
ANR	804497	IdentifierDeclType	cmsUInt8Number *		804492	0					
ANR	804498	Identifier	pByte		804492	1					
ANR	804499	AssignmentExpression	* pByte = ( cmsUInt8Number * ) & Word		804492	2		=			
ANR	804500	Identifier	pByte		804492	0					
ANR	804501	CastExpression	( cmsUInt8Number * ) & Word		804492	1					
ANR	804502	CastTarget	cmsUInt8Number *		804492	0					
ANR	804503	UnaryOperationExpression	& Word		804492	1					
ANR	804504	UnaryOperator	&		804492	0					
ANR	804505	Identifier	Word		804492	1					
ANR	804506	IdentifierDeclStatement	cmsUInt8Number tmp ;	42:4:1861:1879	804492	1	True				
ANR	804507	IdentifierDecl	tmp		804492	0					
ANR	804508	IdentifierDeclType	cmsUInt8Number		804492	0					
ANR	804509	Identifier	tmp		804492	1					
ANR	804510	ExpressionStatement	tmp = pByte [ 0 ]	44:4:1886:1900	804492	2	True				
ANR	804511	AssignmentExpression	tmp = pByte [ 0 ]		804492	0		=			
ANR	804512	Identifier	tmp		804492	0					
ANR	804513	ArrayIndexing	pByte [ 0 ]		804492	1					
ANR	804514	Identifier	pByte		804492	0					
ANR	804515	PrimaryExpression	0		804492	1					
ANR	804516	ExpressionStatement	pByte [ 0 ] = pByte [ 1 ]	45:4:1906:1925	804492	3	True				
ANR	804517	AssignmentExpression	pByte [ 0 ] = pByte [ 1 ]		804492	0		=			
ANR	804518	ArrayIndexing	pByte [ 0 ]		804492	0					
ANR	804519	Identifier	pByte		804492	0					
ANR	804520	PrimaryExpression	0		804492	1					
ANR	804521	ArrayIndexing	pByte [ 1 ]		804492	1					
ANR	804522	Identifier	pByte		804492	0					
ANR	804523	PrimaryExpression	1		804492	1					
ANR	804524	ExpressionStatement	pByte [ 1 ] = tmp	46:4:1931:1945	804492	4	True				
ANR	804525	AssignmentExpression	pByte [ 1 ] = tmp		804492	0		=			
ANR	804526	ArrayIndexing	pByte [ 1 ]		804492	0					
ANR	804527	Identifier	pByte		804492	0					
ANR	804528	PrimaryExpression	1		804492	1					
ANR	804529	Identifier	tmp		804492	1					
ANR	804530	ReturnStatement	return Word ;	49:4:1959:1970	804492	5	True				
ANR	804531	Identifier	Word		804492	0					
ANR	804532	ReturnType	cmsUInt16Number CMSEXPORT		804492	1					
ANR	804533	Identifier	_cmsAdjustEndianess16		804492	2					
ANR	804534	ParameterList	cmsUInt16Number Word		804492	3					
ANR	804535	Parameter	cmsUInt16Number Word	37:49:1752:1771	804492	0	True				
ANR	804536	ParameterType	cmsUInt16Number		804492	0					
ANR	804537	Identifier	Word		804492	1					
ANR	804538	CFGEntryNode	ENTRY		804492		True				
ANR	804539	CFGExitNode	EXIT		804492		True				
ANR	804540	Symbol	& Word		804492						
ANR	804541	Symbol	pByte		804492						
ANR	804542	Symbol	Word		804492						
ANR	804543	Symbol	tmp		804492						
ANR	804544	Symbol	* pByte		804492						
ANR	804545	Function	_cmsAdjustEndianess32	58:0:2096:2466							
ANR	804546	FunctionDef	_cmsAdjustEndianess32 (cmsUInt32Number DWord)		804545	0					
ANR	804547	CompoundStatement		59:0:2168:2466	804545	0					
ANR	804548	IdentifierDeclStatement	cmsUInt8Number * pByte = ( cmsUInt8Number * ) & DWord ;	62:4:2202:2250	804545	0	True				
ANR	804549	IdentifierDecl	* pByte = ( cmsUInt8Number * ) & DWord		804545	0					
ANR	804550	IdentifierDeclType	cmsUInt8Number *		804545	0					
ANR	804551	Identifier	pByte		804545	1					
ANR	804552	AssignmentExpression	* pByte = ( cmsUInt8Number * ) & DWord		804545	2		=			
ANR	804553	Identifier	pByte		804545	0					
ANR	804554	CastExpression	( cmsUInt8Number * ) & DWord		804545	1					
ANR	804555	CastTarget	cmsUInt8Number *		804545	0					
ANR	804556	UnaryOperationExpression	& DWord		804545	1					
ANR	804557	UnaryOperator	&		804545	0					
ANR	804558	Identifier	DWord		804545	1					
ANR	804559	IdentifierDeclStatement	cmsUInt8Number temp1 ;	63:4:2256:2276	804545	1	True				
ANR	804560	IdentifierDecl	temp1		804545	0					
ANR	804561	IdentifierDeclType	cmsUInt8Number		804545	0					
ANR	804562	Identifier	temp1		804545	1					
ANR	804563	IdentifierDeclStatement	cmsUInt8Number temp2 ;	64:4:2282:2302	804545	2	True				
ANR	804564	IdentifierDecl	temp2		804545	0					
ANR	804565	IdentifierDeclType	cmsUInt8Number		804545	0					
ANR	804566	Identifier	temp2		804545	1					
ANR	804567	ExpressionStatement	temp1 = * pByte ++	66:4:2309:2325	804545	3	True				
ANR	804568	AssignmentExpression	temp1 = * pByte ++		804545	0		=			
ANR	804569	Identifier	temp1		804545	0					
ANR	804570	UnaryOperationExpression	* pByte ++		804545	1					
ANR	804571	UnaryOperator	*		804545	0					
ANR	804572	PostIncDecOperationExpression	pByte ++		804545	1					
ANR	804573	Identifier	pByte		804545	0					
ANR	804574	IncDec	++		804545	1					
ANR	804575	ExpressionStatement	temp2 = * pByte ++	67:4:2331:2347	804545	4	True				
ANR	804576	AssignmentExpression	temp2 = * pByte ++		804545	0		=			
ANR	804577	Identifier	temp2		804545	0					
ANR	804578	UnaryOperationExpression	* pByte ++		804545	1					
ANR	804579	UnaryOperator	*		804545	0					
ANR	804580	PostIncDecOperationExpression	pByte ++		804545	1					
ANR	804581	Identifier	pByte		804545	0					
ANR	804582	IncDec	++		804545	1					
ANR	804583	ExpressionStatement	* ( pByte - 1 ) = * pByte	68:4:2353:2372	804545	5	True				
ANR	804584	AssignmentExpression	* ( pByte - 1 ) = * pByte		804545	0		=			
ANR	804585	UnaryOperationExpression	* ( pByte - 1 )		804545	0					
ANR	804586	UnaryOperator	*		804545	0					
ANR	804587	AdditiveExpression	pByte - 1		804545	1		-			
ANR	804588	Identifier	pByte		804545	0					
ANR	804589	PrimaryExpression	1		804545	1					
ANR	804590	UnaryOperationExpression	* pByte		804545	1					
ANR	804591	UnaryOperator	*		804545	0					
ANR	804592	Identifier	pByte		804545	1					
ANR	804593	ExpressionStatement	* pByte ++ = temp2	69:4:2378:2394	804545	6	True				
ANR	804594	AssignmentExpression	* pByte ++ = temp2		804545	0		=			
ANR	804595	UnaryOperationExpression	* pByte ++		804545	0					
ANR	804596	UnaryOperator	*		804545	0					
ANR	804597	PostIncDecOperationExpression	pByte ++		804545	1					
ANR	804598	Identifier	pByte		804545	0					
ANR	804599	IncDec	++		804545	1					
ANR	804600	Identifier	temp2		804545	1					
ANR	804601	ExpressionStatement	* ( pByte - 3 ) = * pByte	70:4:2400:2419	804545	7	True				
ANR	804602	AssignmentExpression	* ( pByte - 3 ) = * pByte		804545	0		=			
ANR	804603	UnaryOperationExpression	* ( pByte - 3 )		804545	0					
ANR	804604	UnaryOperator	*		804545	0					
ANR	804605	AdditiveExpression	pByte - 3		804545	1		-			
ANR	804606	Identifier	pByte		804545	0					
ANR	804607	PrimaryExpression	3		804545	1					
ANR	804608	UnaryOperationExpression	* pByte		804545	1					
ANR	804609	UnaryOperator	*		804545	0					
ANR	804610	Identifier	pByte		804545	1					
ANR	804611	ExpressionStatement	* pByte = temp1	71:4:2425:2439	804545	8	True				
ANR	804612	AssignmentExpression	* pByte = temp1		804545	0		=			
ANR	804613	UnaryOperationExpression	* pByte		804545	0					
ANR	804614	UnaryOperator	*		804545	0					
ANR	804615	Identifier	pByte		804545	1					
ANR	804616	Identifier	temp1		804545	1					
ANR	804617	ReturnStatement	return DWord ;	73:4:2452:2464	804545	9	True				
ANR	804618	Identifier	DWord		804545	0					
ANR	804619	ReturnType	cmsUInt32Number CMSEXPORT		804545	1					
ANR	804620	Identifier	_cmsAdjustEndianess32		804545	2					
ANR	804621	ParameterList	cmsUInt32Number DWord		804545	3					
ANR	804622	Parameter	cmsUInt32Number DWord	58:49:2145:2165	804545	0	True				
ANR	804623	ParameterType	cmsUInt32Number		804545	0					
ANR	804624	Identifier	DWord		804545	1					
ANR	804625	CFGEntryNode	ENTRY		804545		True				
ANR	804626	CFGExitNode	EXIT		804545		True				
ANR	804627	Symbol	pByte		804545						
ANR	804628	Symbol	* pByte		804545						
ANR	804629	Symbol	DWord		804545						
ANR	804630	Symbol	* pByte ++		804545						
ANR	804631	Symbol	& DWord		804545						
ANR	804632	Symbol	temp2		804545						
ANR	804633	Symbol	* ( pByte - 3 )		804545						
ANR	804634	Symbol	temp1		804545						
ANR	804635	Symbol	* ( pByte - 1 )		804545						
ANR	804636	Function	_cmsAdjustEndianess64	79:0:2508:3113							
ANR	804637	FunctionDef	"_cmsAdjustEndianess64 (cmsUInt64Number * Result , cmsUInt64Number * QWord)"		804636	0					
ANR	804638	CompoundStatement		80:0:2595:3113	804636	0					
ANR	804639	IdentifierDeclStatement	cmsUInt8Number * pIn = ( cmsUInt8Number * ) QWord ;	84:4:2630:2676	804636	0	True				
ANR	804640	IdentifierDecl	* pIn = ( cmsUInt8Number * ) QWord		804636	0					
ANR	804641	IdentifierDeclType	cmsUInt8Number *		804636	0					
ANR	804642	Identifier	pIn		804636	1					
ANR	804643	AssignmentExpression	* pIn = ( cmsUInt8Number * ) QWord		804636	2		=			
ANR	804644	Identifier	pIn		804636	0					
ANR	804645	CastExpression	( cmsUInt8Number * ) QWord		804636	1					
ANR	804646	CastTarget	cmsUInt8Number *		804636	0					
ANR	804647	Identifier	QWord		804636	1					
ANR	804648	IdentifierDeclStatement	cmsUInt8Number * pOut = ( cmsUInt8Number * ) Result ;	85:4:2682:2729	804636	1	True				
ANR	804649	IdentifierDecl	* pOut = ( cmsUInt8Number * ) Result		804636	0					
ANR	804650	IdentifierDeclType	cmsUInt8Number *		804636	0					
ANR	804651	Identifier	pOut		804636	1					
ANR	804652	AssignmentExpression	* pOut = ( cmsUInt8Number * ) Result		804636	2		=			
ANR	804653	Identifier	pOut		804636	0					
ANR	804654	CastExpression	( cmsUInt8Number * ) Result		804636	1					
ANR	804655	CastTarget	cmsUInt8Number *		804636	0					
ANR	804656	Identifier	Result		804636	1					
ANR	804657	ExpressionStatement	_cmsAssert ( Result != NULL )	87:4:2736:2762	804636	2	True				
ANR	804658	CallExpression	_cmsAssert ( Result != NULL )		804636	0					
ANR	804659	Callee	_cmsAssert		804636	0					
ANR	804660	Identifier	_cmsAssert		804636	0					
ANR	804661	ArgumentList	Result != NULL		804636	1					
ANR	804662	Argument	Result != NULL		804636	0					
ANR	804663	EqualityExpression	Result != NULL		804636	0		!=			
ANR	804664	Identifier	Result		804636	0					
ANR	804665	Identifier	NULL		804636	1					
ANR	804666	ExpressionStatement	pOut [ 7 ] = pIn [ 0 ]	89:4:2769:2785	804636	3	True				
ANR	804667	AssignmentExpression	pOut [ 7 ] = pIn [ 0 ]		804636	0		=			
ANR	804668	ArrayIndexing	pOut [ 7 ]		804636	0					
ANR	804669	Identifier	pOut		804636	0					
ANR	804670	PrimaryExpression	7		804636	1					
ANR	804671	ArrayIndexing	pIn [ 0 ]		804636	1					
ANR	804672	Identifier	pIn		804636	0					
ANR	804673	PrimaryExpression	0		804636	1					
ANR	804674	ExpressionStatement	pOut [ 6 ] = pIn [ 1 ]	90:4:2791:2807	804636	4	True				
ANR	804675	AssignmentExpression	pOut [ 6 ] = pIn [ 1 ]		804636	0		=			
ANR	804676	ArrayIndexing	pOut [ 6 ]		804636	0					
ANR	804677	Identifier	pOut		804636	0					
ANR	804678	PrimaryExpression	6		804636	1					
ANR	804679	ArrayIndexing	pIn [ 1 ]		804636	1					
ANR	804680	Identifier	pIn		804636	0					
ANR	804681	PrimaryExpression	1		804636	1					
ANR	804682	ExpressionStatement	pOut [ 5 ] = pIn [ 2 ]	91:4:2813:2829	804636	5	True				
ANR	804683	AssignmentExpression	pOut [ 5 ] = pIn [ 2 ]		804636	0		=			
ANR	804684	ArrayIndexing	pOut [ 5 ]		804636	0					
ANR	804685	Identifier	pOut		804636	0					
ANR	804686	PrimaryExpression	5		804636	1					
ANR	804687	ArrayIndexing	pIn [ 2 ]		804636	1					
ANR	804688	Identifier	pIn		804636	0					
ANR	804689	PrimaryExpression	2		804636	1					
ANR	804690	ExpressionStatement	pOut [ 4 ] = pIn [ 3 ]	92:4:2835:2851	804636	6	True				
ANR	804691	AssignmentExpression	pOut [ 4 ] = pIn [ 3 ]		804636	0		=			
ANR	804692	ArrayIndexing	pOut [ 4 ]		804636	0					
ANR	804693	Identifier	pOut		804636	0					
ANR	804694	PrimaryExpression	4		804636	1					
ANR	804695	ArrayIndexing	pIn [ 3 ]		804636	1					
ANR	804696	Identifier	pIn		804636	0					
ANR	804697	PrimaryExpression	3		804636	1					
ANR	804698	ExpressionStatement	pOut [ 3 ] = pIn [ 4 ]	93:4:2857:2873	804636	7	True				
ANR	804699	AssignmentExpression	pOut [ 3 ] = pIn [ 4 ]		804636	0		=			
ANR	804700	ArrayIndexing	pOut [ 3 ]		804636	0					
ANR	804701	Identifier	pOut		804636	0					
ANR	804702	PrimaryExpression	3		804636	1					
ANR	804703	ArrayIndexing	pIn [ 4 ]		804636	1					
ANR	804704	Identifier	pIn		804636	0					
ANR	804705	PrimaryExpression	4		804636	1					
ANR	804706	ExpressionStatement	pOut [ 2 ] = pIn [ 5 ]	94:4:2879:2895	804636	8	True				
ANR	804707	AssignmentExpression	pOut [ 2 ] = pIn [ 5 ]		804636	0		=			
ANR	804708	ArrayIndexing	pOut [ 2 ]		804636	0					
ANR	804709	Identifier	pOut		804636	0					
ANR	804710	PrimaryExpression	2		804636	1					
ANR	804711	ArrayIndexing	pIn [ 5 ]		804636	1					
ANR	804712	Identifier	pIn		804636	0					
ANR	804713	PrimaryExpression	5		804636	1					
ANR	804714	ExpressionStatement	pOut [ 1 ] = pIn [ 6 ]	95:4:2901:2917	804636	9	True				
ANR	804715	AssignmentExpression	pOut [ 1 ] = pIn [ 6 ]		804636	0		=			
ANR	804716	ArrayIndexing	pOut [ 1 ]		804636	0					
ANR	804717	Identifier	pOut		804636	0					
ANR	804718	PrimaryExpression	1		804636	1					
ANR	804719	ArrayIndexing	pIn [ 6 ]		804636	1					
ANR	804720	Identifier	pIn		804636	0					
ANR	804721	PrimaryExpression	6		804636	1					
ANR	804722	ExpressionStatement	pOut [ 0 ] = pIn [ 7 ]	96:4:2923:2939	804636	10	True				
ANR	804723	AssignmentExpression	pOut [ 0 ] = pIn [ 7 ]		804636	0		=			
ANR	804724	ArrayIndexing	pOut [ 0 ]		804636	0					
ANR	804725	Identifier	pOut		804636	0					
ANR	804726	PrimaryExpression	0		804636	1					
ANR	804727	ArrayIndexing	pIn [ 7 ]		804636	1					
ANR	804728	Identifier	pIn		804636	0					
ANR	804729	PrimaryExpression	7		804636	1					
ANR	804730	ReturnType	void CMSEXPORT		804636	1					
ANR	804731	Identifier	_cmsAdjustEndianess64		804636	2					
ANR	804732	ParameterList	"cmsUInt64Number * Result , cmsUInt64Number * QWord"		804636	3					
ANR	804733	Parameter	cmsUInt64Number * Result	79:38:2546:2568	804636	0	True				
ANR	804734	ParameterType	cmsUInt64Number *		804636	0					
ANR	804735	Identifier	Result		804636	1					
ANR	804736	Parameter	cmsUInt64Number * QWord	79:63:2571:2592	804636	1	True				
ANR	804737	ParameterType	cmsUInt64Number *		804636	0					
ANR	804738	Identifier	QWord		804636	1					
ANR	804739	CFGEntryNode	ENTRY		804636		True				
ANR	804740	CFGExitNode	EXIT		804636		True				
ANR	804741	Symbol	NULL		804636						
ANR	804742	Symbol	pIn		804636						
ANR	804743	Symbol	QWord		804636						
ANR	804744	Symbol	* pOut		804636						
ANR	804745	Symbol	pOut		804636						
ANR	804746	Symbol	Result		804636						
ANR	804747	Symbol	* pIn		804636						
ANR	804748	Function	_cmsReadUInt8Number	111:0:3162:3429							
ANR	804749	FunctionDef	"_cmsReadUInt8Number (cmsIOHANDLER * io , cmsUInt8Number * n)"		804748	0					
ANR	804750	CompoundStatement		112:0:3238:3429	804748	0					
ANR	804751	IdentifierDeclStatement	cmsUInt8Number tmp ;	113:4:3244:3262	804748	0	True				
ANR	804752	IdentifierDecl	tmp		804748	0					
ANR	804753	IdentifierDeclType	cmsUInt8Number		804748	0					
ANR	804754	Identifier	tmp		804748	1					
ANR	804755	ExpressionStatement	_cmsAssert ( io != NULL )	115:4:3269:3291	804748	1	True				
ANR	804756	CallExpression	_cmsAssert ( io != NULL )		804748	0					
ANR	804757	Callee	_cmsAssert		804748	0					
ANR	804758	Identifier	_cmsAssert		804748	0					
ANR	804759	ArgumentList	io != NULL		804748	1					
ANR	804760	Argument	io != NULL		804748	0					
ANR	804761	EqualityExpression	io != NULL		804748	0		!=			
ANR	804762	Identifier	io		804748	0					
ANR	804763	Identifier	NULL		804748	1					
ANR	804764	IfStatement	"if ( io -> Read ( io , & tmp , sizeof ( cmsUInt8Number ) , 1 ) != 1 )"		804748	2					
ANR	804765	Condition	"io -> Read ( io , & tmp , sizeof ( cmsUInt8Number ) , 1 ) != 1"	117:8:3302:3353	804748	0	True				
ANR	804766	EqualityExpression	"io -> Read ( io , & tmp , sizeof ( cmsUInt8Number ) , 1 ) != 1"		804748	0		!=			
ANR	804767	CallExpression	"io -> Read ( io , & tmp , sizeof ( cmsUInt8Number ) , 1 )"		804748	0					
ANR	804768	Callee	io -> Read		804748	0					
ANR	804769	PtrMemberAccess	io -> Read		804748	0					
ANR	804770	Identifier	io		804748	0					
ANR	804771	Identifier	Read		804748	1					
ANR	804772	ArgumentList	io		804748	1					
ANR	804773	Argument	io		804748	0					
ANR	804774	Identifier	io		804748	0					
ANR	804775	Argument	& tmp		804748	1					
ANR	804776	UnaryOperationExpression	& tmp		804748	0					
ANR	804777	UnaryOperator	&		804748	0					
ANR	804778	Identifier	tmp		804748	1					
ANR	804779	Argument	sizeof ( cmsUInt8Number )		804748	2					
ANR	804780	SizeofExpression	sizeof ( cmsUInt8Number )		804748	0					
ANR	804781	Sizeof	sizeof		804748	0					
ANR	804782	SizeofOperand	cmsUInt8Number		804748	1					
ANR	804783	Argument	1		804748	3					
ANR	804784	PrimaryExpression	1		804748	0					
ANR	804785	PrimaryExpression	1		804748	1					
ANR	804786	ReturnStatement	return FALSE ;	118:12:3368:3380	804748	1	True				
ANR	804787	Identifier	FALSE		804748	0					
ANR	804788	IfStatement	if ( n != NULL )		804748	3					
ANR	804789	Condition	n != NULL	120:8:3391:3399	804748	0	True				
ANR	804790	EqualityExpression	n != NULL		804748	0		!=			
ANR	804791	Identifier	n		804748	0					
ANR	804792	Identifier	NULL		804748	1					
ANR	804793	ExpressionStatement	* n = tmp	120:19:3402:3410	804748	1	True				
ANR	804794	AssignmentExpression	* n = tmp		804748	0		=			
ANR	804795	UnaryOperationExpression	* n		804748	0					
ANR	804796	UnaryOperator	*		804748	0					
ANR	804797	Identifier	n		804748	1					
ANR	804798	Identifier	tmp		804748	1					
ANR	804799	ReturnStatement	return TRUE ;	121:4:3416:3427	804748	4	True				
ANR	804800	Identifier	TRUE		804748	0					
ANR	804801	ReturnType	cmsBool CMSEXPORT		804748	1					
ANR	804802	Identifier	_cmsReadUInt8Number		804748	2					
ANR	804803	ParameterList	"cmsIOHANDLER * io , cmsUInt8Number * n"		804748	3					
ANR	804804	Parameter	cmsIOHANDLER * io	111:39:3201:3216	804748	0	True				
ANR	804805	ParameterType	cmsIOHANDLER *		804748	0					
ANR	804806	Identifier	io		804748	1					
ANR	804807	Parameter	cmsUInt8Number * n	111:57:3219:3235	804748	1	True				
ANR	804808	ParameterType	cmsUInt8Number *		804748	0					
ANR	804809	Identifier	n		804748	1					
ANR	804810	CFGEntryNode	ENTRY		804748		True				
ANR	804811	CFGExitNode	EXIT		804748		True				
ANR	804812	Symbol	NULL		804748						
ANR	804813	Symbol	io -> Read		804748						
ANR	804814	Symbol	io		804748						
ANR	804815	Symbol	tmp		804748						
ANR	804816	Symbol	* n		804748						
ANR	804817	Symbol	TRUE		804748						
ANR	804818	Symbol	& tmp		804748						
ANR	804819	Symbol	FALSE		804748						
ANR	804820	Symbol	n		804748						
ANR	804821	Symbol	* io		804748						
ANR	804822	Function	_cmsReadUInt16Number	124:0:3432:3726							
ANR	804823	FunctionDef	"_cmsReadUInt16Number (cmsIOHANDLER * io , cmsUInt16Number * n)"		804822	0					
ANR	804824	CompoundStatement		125:0:3510:3726	804822	0					
ANR	804825	IdentifierDeclStatement	cmsUInt16Number tmp ;	126:4:3516:3535	804822	0	True				
ANR	804826	IdentifierDecl	tmp		804822	0					
ANR	804827	IdentifierDeclType	cmsUInt16Number		804822	0					
ANR	804828	Identifier	tmp		804822	1					
ANR	804829	ExpressionStatement	_cmsAssert ( io != NULL )	128:4:3542:3564	804822	1	True				
ANR	804830	CallExpression	_cmsAssert ( io != NULL )		804822	0					
ANR	804831	Callee	_cmsAssert		804822	0					
ANR	804832	Identifier	_cmsAssert		804822	0					
ANR	804833	ArgumentList	io != NULL		804822	1					
ANR	804834	Argument	io != NULL		804822	0					
ANR	804835	EqualityExpression	io != NULL		804822	0		!=			
ANR	804836	Identifier	io		804822	0					
ANR	804837	Identifier	NULL		804822	1					
ANR	804838	IfStatement	"if ( io -> Read ( io , & tmp , sizeof ( cmsUInt16Number ) , 1 ) != 1 )"		804822	2					
ANR	804839	Condition	"io -> Read ( io , & tmp , sizeof ( cmsUInt16Number ) , 1 ) != 1"	130:8:3575:3627	804822	0	True				
ANR	804840	EqualityExpression	"io -> Read ( io , & tmp , sizeof ( cmsUInt16Number ) , 1 ) != 1"		804822	0		!=			
ANR	804841	CallExpression	"io -> Read ( io , & tmp , sizeof ( cmsUInt16Number ) , 1 )"		804822	0					
ANR	804842	Callee	io -> Read		804822	0					
ANR	804843	PtrMemberAccess	io -> Read		804822	0					
ANR	804844	Identifier	io		804822	0					
ANR	804845	Identifier	Read		804822	1					
ANR	804846	ArgumentList	io		804822	1					
ANR	804847	Argument	io		804822	0					
ANR	804848	Identifier	io		804822	0					
ANR	804849	Argument	& tmp		804822	1					
ANR	804850	UnaryOperationExpression	& tmp		804822	0					
ANR	804851	UnaryOperator	&		804822	0					
ANR	804852	Identifier	tmp		804822	1					
ANR	804853	Argument	sizeof ( cmsUInt16Number )		804822	2					
ANR	804854	SizeofExpression	sizeof ( cmsUInt16Number )		804822	0					
ANR	804855	Sizeof	sizeof		804822	0					
ANR	804856	SizeofOperand	cmsUInt16Number		804822	1					
ANR	804857	Argument	1		804822	3					
ANR	804858	PrimaryExpression	1		804822	0					
ANR	804859	PrimaryExpression	1		804822	1					
ANR	804860	ReturnStatement	return FALSE ;	131:12:3642:3654	804822	1	True				
ANR	804861	Identifier	FALSE		804822	0					
ANR	804862	IfStatement	if ( n != NULL )		804822	3					
ANR	804863	Condition	n != NULL	133:8:3665:3673	804822	0	True				
ANR	804864	EqualityExpression	n != NULL		804822	0		!=			
ANR	804865	Identifier	n		804822	0					
ANR	804866	Identifier	NULL		804822	1					
ANR	804867	ExpressionStatement	* n = _cmsAdjustEndianess16 ( tmp )	133:19:3676:3707	804822	1	True				
ANR	804868	AssignmentExpression	* n = _cmsAdjustEndianess16 ( tmp )		804822	0		=			
ANR	804869	UnaryOperationExpression	* n		804822	0					
ANR	804870	UnaryOperator	*		804822	0					
ANR	804871	Identifier	n		804822	1					
ANR	804872	CallExpression	_cmsAdjustEndianess16 ( tmp )		804822	1					
ANR	804873	Callee	_cmsAdjustEndianess16		804822	0					
ANR	804874	Identifier	_cmsAdjustEndianess16		804822	0					
ANR	804875	ArgumentList	tmp		804822	1					
ANR	804876	Argument	tmp		804822	0					
ANR	804877	Identifier	tmp		804822	0					
ANR	804878	ReturnStatement	return TRUE ;	134:4:3713:3724	804822	4	True				
ANR	804879	Identifier	TRUE		804822	0					
ANR	804880	ReturnType	cmsBool CMSEXPORT		804822	1					
ANR	804881	Identifier	_cmsReadUInt16Number		804822	2					
ANR	804882	ParameterList	"cmsIOHANDLER * io , cmsUInt16Number * n"		804822	3					
ANR	804883	Parameter	cmsIOHANDLER * io	124:40:3472:3487	804822	0	True				
ANR	804884	ParameterType	cmsIOHANDLER *		804822	0					
ANR	804885	Identifier	io		804822	1					
ANR	804886	Parameter	cmsUInt16Number * n	124:58:3490:3507	804822	1	True				
ANR	804887	ParameterType	cmsUInt16Number *		804822	0					
ANR	804888	Identifier	n		804822	1					
ANR	804889	CFGEntryNode	ENTRY		804822		True				
ANR	804890	CFGExitNode	EXIT		804822		True				
ANR	804891	Symbol	NULL		804822						
ANR	804892	Symbol	io -> Read		804822						
ANR	804893	Symbol	io		804822						
ANR	804894	Symbol	tmp		804822						
ANR	804895	Symbol	* n		804822						
ANR	804896	Symbol	TRUE		804822						
ANR	804897	Symbol	& tmp		804822						
ANR	804898	Symbol	FALSE		804822						
ANR	804899	Symbol	_cmsAdjustEndianess16		804822						
ANR	804900	Symbol	n		804822						
ANR	804901	Symbol	* io		804822						
ANR	804902	Function	_cmsReadUInt16Array	137:0:3729:4132							
ANR	804903	FunctionDef	"_cmsReadUInt16Array (cmsIOHANDLER * io , cmsUInt32Number n , cmsUInt16Number * Array)"		804902	0					
ANR	804904	CompoundStatement		138:0:3829:4132	804902	0					
ANR	804905	IdentifierDeclStatement	cmsUInt32Number i ;	139:4:3835:3852	804902	0	True				
ANR	804906	IdentifierDecl	i		804902	0					
ANR	804907	IdentifierDeclType	cmsUInt32Number		804902	0					
ANR	804908	Identifier	i		804902	1					
ANR	804909	ExpressionStatement	_cmsAssert ( io != NULL )	141:4:3859:3881	804902	1	True				
ANR	804910	CallExpression	_cmsAssert ( io != NULL )		804902	0					
ANR	804911	Callee	_cmsAssert		804902	0					
ANR	804912	Identifier	_cmsAssert		804902	0					
ANR	804913	ArgumentList	io != NULL		804902	1					
ANR	804914	Argument	io != NULL		804902	0					
ANR	804915	EqualityExpression	io != NULL		804902	0		!=			
ANR	804916	Identifier	io		804902	0					
ANR	804917	Identifier	NULL		804902	1					
ANR	804918	ForStatement	for ( i = 0 ; i < n ; i ++ )		804902	2					
ANR	804919	ForInit	i = 0 ;	143:9:3893:3896	804902	0	True				
ANR	804920	AssignmentExpression	i = 0		804902	0		=			
ANR	804921	Identifier	i		804902	0					
ANR	804922	PrimaryExpression	0		804902	1					
ANR	804923	Condition	i < n	143:14:3898:3902	804902	1	True				
ANR	804924	RelationalExpression	i < n		804902	0		<			
ANR	804925	Identifier	i		804902	0					
ANR	804926	Identifier	n		804902	1					
ANR	804927	PostIncDecOperationExpression	i ++	143:21:3905:3907	804902	2	True				
ANR	804928	Identifier	i		804902	0					
ANR	804929	IncDec	++		804902	1					
ANR	804930	CompoundStatement		6:26:80:80	804902	3					
ANR	804931	IfStatement	if ( Array != NULL )		804902	0					
ANR	804932	Condition	Array != NULL	145:12:3925:3937	804902	0	True				
ANR	804933	EqualityExpression	Array != NULL		804902	0		!=			
ANR	804934	Identifier	Array		804902	0					
ANR	804935	Identifier	NULL		804902	1					
ANR	804936	CompoundStatement		8:27:110:110	804902	1					
ANR	804937	IfStatement	"if ( ! _cmsReadUInt16Number ( io , Array + i ) )"		804902	0					
ANR	804938	Condition	"! _cmsReadUInt16Number ( io , Array + i )"	146:16:3958:3993	804902	0	True				
ANR	804939	UnaryOperationExpression	"! _cmsReadUInt16Number ( io , Array + i )"		804902	0					
ANR	804940	UnaryOperator	!		804902	0					
ANR	804941	CallExpression	"_cmsReadUInt16Number ( io , Array + i )"		804902	1					
ANR	804942	Callee	_cmsReadUInt16Number		804902	0					
ANR	804943	Identifier	_cmsReadUInt16Number		804902	0					
ANR	804944	ArgumentList	io		804902	1					
ANR	804945	Argument	io		804902	0					
ANR	804946	Identifier	io		804902	0					
ANR	804947	Argument	Array + i		804902	1					
ANR	804948	AdditiveExpression	Array + i		804902	0		+			
ANR	804949	Identifier	Array		804902	0					
ANR	804950	Identifier	i		804902	1					
ANR	804951	ReturnStatement	return FALSE ;	146:54:3996:4008	804902	1	True				
ANR	804952	Identifier	FALSE		804902	0					
ANR	804953	ElseStatement	else		804902	0					
ANR	804954	CompoundStatement		11:13:203:203	804902	0					
ANR	804955	IfStatement	"if ( ! _cmsReadUInt16Number ( io , NULL ) )"		804902	0					
ANR	804956	Condition	"! _cmsReadUInt16Number ( io , NULL )"	149:16:4051:4081	804902	0	True				
ANR	804957	UnaryOperationExpression	"! _cmsReadUInt16Number ( io , NULL )"		804902	0					
ANR	804958	UnaryOperator	!		804902	0					
ANR	804959	CallExpression	"_cmsReadUInt16Number ( io , NULL )"		804902	1					
ANR	804960	Callee	_cmsReadUInt16Number		804902	0					
ANR	804961	Identifier	_cmsReadUInt16Number		804902	0					
ANR	804962	ArgumentList	io		804902	1					
ANR	804963	Argument	io		804902	0					
ANR	804964	Identifier	io		804902	0					
ANR	804965	Argument	NULL		804902	1					
ANR	804966	Identifier	NULL		804902	0					
ANR	804967	ReturnStatement	return FALSE ;	149:49:4084:4096	804902	1	True				
ANR	804968	Identifier	FALSE		804902	0					
ANR	804969	ReturnStatement	return TRUE ;	153:4:4119:4130	804902	3	True				
ANR	804970	Identifier	TRUE		804902	0					
ANR	804971	ReturnType	cmsBool CMSEXPORT		804902	1					
ANR	804972	Identifier	_cmsReadUInt16Array		804902	2					
ANR	804973	ParameterList	"cmsIOHANDLER * io , cmsUInt32Number n , cmsUInt16Number * Array"		804902	3					
ANR	804974	Parameter	cmsIOHANDLER * io	137:39:3768:3783	804902	0	True				
ANR	804975	ParameterType	cmsIOHANDLER *		804902	0					
ANR	804976	Identifier	io		804902	1					
ANR	804977	Parameter	cmsUInt32Number n	137:57:3786:3802	804902	1	True				
ANR	804978	ParameterType	cmsUInt32Number		804902	0					
ANR	804979	Identifier	n		804902	1					
ANR	804980	Parameter	cmsUInt16Number * Array	137:76:3805:3826	804902	2	True				
ANR	804981	ParameterType	cmsUInt16Number *		804902	0					
ANR	804982	Identifier	Array		804902	1					
ANR	804983	CFGEntryNode	ENTRY		804902		True				
ANR	804984	CFGExitNode	EXIT		804902		True				
ANR	804985	Symbol	Array		804902						
ANR	804986	Symbol	NULL		804902						
ANR	804987	Symbol	_cmsReadUInt16Number		804902						
ANR	804988	Symbol	io		804902						
ANR	804989	Symbol	i		804902						
ANR	804990	Symbol	TRUE		804902						
ANR	804991	Symbol	FALSE		804902						
ANR	804992	Symbol	n		804902						
ANR	804993	Function	_cmsReadUInt32Number	156:0:4135:4429							
ANR	804994	FunctionDef	"_cmsReadUInt32Number (cmsIOHANDLER * io , cmsUInt32Number * n)"		804993	0					
ANR	804995	CompoundStatement		157:0:4213:4429	804993	0					
ANR	804996	IdentifierDeclStatement	cmsUInt32Number tmp ;	158:4:4219:4238	804993	0	True				
ANR	804997	IdentifierDecl	tmp		804993	0					
ANR	804998	IdentifierDeclType	cmsUInt32Number		804993	0					
ANR	804999	Identifier	tmp		804993	1					
ANR	805000	ExpressionStatement	_cmsAssert ( io != NULL )	160:4:4245:4267	804993	1	True				
ANR	805001	CallExpression	_cmsAssert ( io != NULL )		804993	0					
ANR	805002	Callee	_cmsAssert		804993	0					
ANR	805003	Identifier	_cmsAssert		804993	0					
ANR	805004	ArgumentList	io != NULL		804993	1					
ANR	805005	Argument	io != NULL		804993	0					
ANR	805006	EqualityExpression	io != NULL		804993	0		!=			
ANR	805007	Identifier	io		804993	0					
ANR	805008	Identifier	NULL		804993	1					
ANR	805009	IfStatement	"if ( io -> Read ( io , & tmp , sizeof ( cmsUInt32Number ) , 1 ) != 1 )"		804993	2					
ANR	805010	Condition	"io -> Read ( io , & tmp , sizeof ( cmsUInt32Number ) , 1 ) != 1"	162:8:4278:4330	804993	0	True				
ANR	805011	EqualityExpression	"io -> Read ( io , & tmp , sizeof ( cmsUInt32Number ) , 1 ) != 1"		804993	0		!=			
ANR	805012	CallExpression	"io -> Read ( io , & tmp , sizeof ( cmsUInt32Number ) , 1 )"		804993	0					
ANR	805013	Callee	io -> Read		804993	0					
ANR	805014	PtrMemberAccess	io -> Read		804993	0					
ANR	805015	Identifier	io		804993	0					
ANR	805016	Identifier	Read		804993	1					
ANR	805017	ArgumentList	io		804993	1					
ANR	805018	Argument	io		804993	0					
ANR	805019	Identifier	io		804993	0					
ANR	805020	Argument	& tmp		804993	1					
ANR	805021	UnaryOperationExpression	& tmp		804993	0					
ANR	805022	UnaryOperator	&		804993	0					
ANR	805023	Identifier	tmp		804993	1					
ANR	805024	Argument	sizeof ( cmsUInt32Number )		804993	2					
ANR	805025	SizeofExpression	sizeof ( cmsUInt32Number )		804993	0					
ANR	805026	Sizeof	sizeof		804993	0					
ANR	805027	SizeofOperand	cmsUInt32Number		804993	1					
ANR	805028	Argument	1		804993	3					
ANR	805029	PrimaryExpression	1		804993	0					
ANR	805030	PrimaryExpression	1		804993	1					
ANR	805031	ReturnStatement	return FALSE ;	163:12:4345:4357	804993	1	True				
ANR	805032	Identifier	FALSE		804993	0					
ANR	805033	IfStatement	if ( n != NULL )		804993	3					
ANR	805034	Condition	n != NULL	165:8:4368:4376	804993	0	True				
ANR	805035	EqualityExpression	n != NULL		804993	0		!=			
ANR	805036	Identifier	n		804993	0					
ANR	805037	Identifier	NULL		804993	1					
ANR	805038	ExpressionStatement	* n = _cmsAdjustEndianess32 ( tmp )	165:19:4379:4410	804993	1	True				
ANR	805039	AssignmentExpression	* n = _cmsAdjustEndianess32 ( tmp )		804993	0		=			
ANR	805040	UnaryOperationExpression	* n		804993	0					
ANR	805041	UnaryOperator	*		804993	0					
ANR	805042	Identifier	n		804993	1					
ANR	805043	CallExpression	_cmsAdjustEndianess32 ( tmp )		804993	1					
ANR	805044	Callee	_cmsAdjustEndianess32		804993	0					
ANR	805045	Identifier	_cmsAdjustEndianess32		804993	0					
ANR	805046	ArgumentList	tmp		804993	1					
ANR	805047	Argument	tmp		804993	0					
ANR	805048	Identifier	tmp		804993	0					
ANR	805049	ReturnStatement	return TRUE ;	166:4:4416:4427	804993	4	True				
ANR	805050	Identifier	TRUE		804993	0					
ANR	805051	ReturnType	cmsBool CMSEXPORT		804993	1					
ANR	805052	Identifier	_cmsReadUInt32Number		804993	2					
ANR	805053	ParameterList	"cmsIOHANDLER * io , cmsUInt32Number * n"		804993	3					
ANR	805054	Parameter	cmsIOHANDLER * io	156:40:4175:4190	804993	0	True				
ANR	805055	ParameterType	cmsIOHANDLER *		804993	0					
ANR	805056	Identifier	io		804993	1					
ANR	805057	Parameter	cmsUInt32Number * n	156:58:4193:4210	804993	1	True				
ANR	805058	ParameterType	cmsUInt32Number *		804993	0					
ANR	805059	Identifier	n		804993	1					
ANR	805060	CFGEntryNode	ENTRY		804993		True				
ANR	805061	CFGExitNode	EXIT		804993		True				
ANR	805062	Symbol	NULL		804993						
ANR	805063	Symbol	io -> Read		804993						
ANR	805064	Symbol	io		804993						
ANR	805065	Symbol	tmp		804993						
ANR	805066	Symbol	* n		804993						
ANR	805067	Symbol	TRUE		804993						
ANR	805068	Symbol	& tmp		804993						
ANR	805069	Symbol	FALSE		804993						
ANR	805070	Symbol	_cmsAdjustEndianess32		804993						
ANR	805071	Symbol	n		804993						
ANR	805072	Symbol	* io		804993						
ANR	805073	Function	_cmsReadFloat32Number	169:0:4432:4794							
ANR	805074	FunctionDef	"_cmsReadFloat32Number (cmsIOHANDLER * io , cmsFloat32Number * n)"		805073	0					
ANR	805075	CompoundStatement		170:0:4512:4794	805073	0					
ANR	805076	IdentifierDeclStatement	cmsUInt32Number tmp ;	171:4:4518:4537	805073	0	True				
ANR	805077	IdentifierDecl	tmp		805073	0					
ANR	805078	IdentifierDeclType	cmsUInt32Number		805073	0					
ANR	805079	Identifier	tmp		805073	1					
ANR	805080	ExpressionStatement	_cmsAssert ( io != NULL )	173:4:4544:4566	805073	1	True				
ANR	805081	CallExpression	_cmsAssert ( io != NULL )		805073	0					
ANR	805082	Callee	_cmsAssert		805073	0					
ANR	805083	Identifier	_cmsAssert		805073	0					
ANR	805084	ArgumentList	io != NULL		805073	1					
ANR	805085	Argument	io != NULL		805073	0					
ANR	805086	EqualityExpression	io != NULL		805073	0		!=			
ANR	805087	Identifier	io		805073	0					
ANR	805088	Identifier	NULL		805073	1					
ANR	805089	IfStatement	"if ( io -> Read ( io , & tmp , sizeof ( cmsUInt32Number ) , 1 ) != 1 )"		805073	2					
ANR	805090	Condition	"io -> Read ( io , & tmp , sizeof ( cmsUInt32Number ) , 1 ) != 1"	175:8:4577:4629	805073	0	True				
ANR	805091	EqualityExpression	"io -> Read ( io , & tmp , sizeof ( cmsUInt32Number ) , 1 ) != 1"		805073	0		!=			
ANR	805092	CallExpression	"io -> Read ( io , & tmp , sizeof ( cmsUInt32Number ) , 1 )"		805073	0					
ANR	805093	Callee	io -> Read		805073	0					
ANR	805094	PtrMemberAccess	io -> Read		805073	0					
ANR	805095	Identifier	io		805073	0					
ANR	805096	Identifier	Read		805073	1					
ANR	805097	ArgumentList	io		805073	1					
ANR	805098	Argument	io		805073	0					
ANR	805099	Identifier	io		805073	0					
ANR	805100	Argument	& tmp		805073	1					
ANR	805101	UnaryOperationExpression	& tmp		805073	0					
ANR	805102	UnaryOperator	&		805073	0					
ANR	805103	Identifier	tmp		805073	1					
ANR	805104	Argument	sizeof ( cmsUInt32Number )		805073	2					
ANR	805105	SizeofExpression	sizeof ( cmsUInt32Number )		805073	0					
ANR	805106	Sizeof	sizeof		805073	0					
ANR	805107	SizeofOperand	cmsUInt32Number		805073	1					
ANR	805108	Argument	1		805073	3					
ANR	805109	PrimaryExpression	1		805073	0					
ANR	805110	PrimaryExpression	1		805073	1					
ANR	805111	ReturnStatement	return FALSE ;	176:12:4644:4656	805073	1	True				
ANR	805112	Identifier	FALSE		805073	0					
ANR	805113	IfStatement	if ( n != NULL )		805073	3					
ANR	805114	Condition	n != NULL	178:8:4667:4675	805073	0	True				
ANR	805115	EqualityExpression	n != NULL		805073	0		!=			
ANR	805116	Identifier	n		805073	0					
ANR	805117	Identifier	NULL		805073	1					
ANR	805118	CompoundStatement		9:19:165:165	805073	1					
ANR	805119	ExpressionStatement	tmp = _cmsAdjustEndianess32 ( tmp )	180:8:4689:4721	805073	0	True				
ANR	805120	AssignmentExpression	tmp = _cmsAdjustEndianess32 ( tmp )		805073	0		=			
ANR	805121	Identifier	tmp		805073	0					
ANR	805122	CallExpression	_cmsAdjustEndianess32 ( tmp )		805073	1					
ANR	805123	Callee	_cmsAdjustEndianess32		805073	0					
ANR	805124	Identifier	_cmsAdjustEndianess32		805073	0					
ANR	805125	ArgumentList	tmp		805073	1					
ANR	805126	Argument	tmp		805073	0					
ANR	805127	Identifier	tmp		805073	0					
ANR	805128	ExpressionStatement	* n = * ( cmsFloat32Number * ) ( void * ) & tmp	181:8:4731:4769	805073	1	True				
ANR	805129	AssignmentExpression	* n = * ( cmsFloat32Number * ) ( void * ) & tmp		805073	0		=			
ANR	805130	UnaryOperationExpression	* n		805073	0					
ANR	805131	UnaryOperator	*		805073	0					
ANR	805132	Identifier	n		805073	1					
ANR	805133	UnaryOperationExpression	* ( cmsFloat32Number * ) ( void * ) & tmp		805073	1					
ANR	805134	UnaryOperator	*		805073	0					
ANR	805135	CastExpression	( cmsFloat32Number * ) ( void * ) & tmp		805073	1					
ANR	805136	CastTarget	cmsFloat32Number *		805073	0					
ANR	805137	CastExpression	( void * ) & tmp		805073	1					
ANR	805138	CastTarget	void *		805073	0					
ANR	805139	UnaryOperationExpression	& tmp		805073	1					
ANR	805140	UnaryOperator	&		805073	0					
ANR	805141	Identifier	tmp		805073	1					
ANR	805142	ReturnStatement	return TRUE ;	183:4:4781:4792	805073	4	True				
ANR	805143	Identifier	TRUE		805073	0					
ANR	805144	ReturnType	cmsBool CMSEXPORT		805073	1					
ANR	805145	Identifier	_cmsReadFloat32Number		805073	2					
ANR	805146	ParameterList	"cmsIOHANDLER * io , cmsFloat32Number * n"		805073	3					
ANR	805147	Parameter	cmsIOHANDLER * io	169:41:4473:4488	805073	0	True				
ANR	805148	ParameterType	cmsIOHANDLER *		805073	0					
ANR	805149	Identifier	io		805073	1					
ANR	805150	Parameter	cmsFloat32Number * n	169:59:4491:4509	805073	1	True				
ANR	805151	ParameterType	cmsFloat32Number *		805073	0					
ANR	805152	Identifier	n		805073	1					
ANR	805153	CFGEntryNode	ENTRY		805073		True				
ANR	805154	CFGExitNode	EXIT		805073		True				
ANR	805155	Symbol	* ( cmsFloat32Number * ) ( void * ) & tmp		805073						
ANR	805156	Symbol	NULL		805073						
ANR	805157	Symbol	io -> Read		805073						
ANR	805158	Symbol	io		805073						
ANR	805159	Symbol	tmp		805073						
ANR	805160	Symbol	* n		805073						
ANR	805161	Symbol	TRUE		805073						
ANR	805162	Symbol	& tmp		805073						
ANR	805163	Symbol	FALSE		805073						
ANR	805164	Symbol	_cmsAdjustEndianess32		805073						
ANR	805165	Symbol	n		805073						
ANR	805166	Symbol	* io		805073						
ANR	805167	Function	_cmsReadUInt64Number	187:0:4798:5092							
ANR	805168	FunctionDef	"_cmsReadUInt64Number (cmsIOHANDLER * io , cmsUInt64Number * n)"		805167	0					
ANR	805169	CompoundStatement		188:0:4877:5092	805167	0					
ANR	805170	IdentifierDeclStatement	cmsUInt64Number tmp ;	189:4:4883:4902	805167	0	True				
ANR	805171	IdentifierDecl	tmp		805167	0					
ANR	805172	IdentifierDeclType	cmsUInt64Number		805167	0					
ANR	805173	Identifier	tmp		805167	1					
ANR	805174	ExpressionStatement	_cmsAssert ( io != NULL )	191:4:4909:4931	805167	1	True				
ANR	805175	CallExpression	_cmsAssert ( io != NULL )		805167	0					
ANR	805176	Callee	_cmsAssert		805167	0					
ANR	805177	Identifier	_cmsAssert		805167	0					
ANR	805178	ArgumentList	io != NULL		805167	1					
ANR	805179	Argument	io != NULL		805167	0					
ANR	805180	EqualityExpression	io != NULL		805167	0		!=			
ANR	805181	Identifier	io		805167	0					
ANR	805182	Identifier	NULL		805167	1					
ANR	805183	IfStatement	"if ( io -> Read ( io , & tmp , sizeof ( cmsUInt64Number ) , 1 ) != 1 )"		805167	2					
ANR	805184	Condition	"io -> Read ( io , & tmp , sizeof ( cmsUInt64Number ) , 1 ) != 1"	193:8:4942:4994	805167	0	True				
ANR	805185	EqualityExpression	"io -> Read ( io , & tmp , sizeof ( cmsUInt64Number ) , 1 ) != 1"		805167	0		!=			
ANR	805186	CallExpression	"io -> Read ( io , & tmp , sizeof ( cmsUInt64Number ) , 1 )"		805167	0					
ANR	805187	Callee	io -> Read		805167	0					
ANR	805188	PtrMemberAccess	io -> Read		805167	0					
ANR	805189	Identifier	io		805167	0					
ANR	805190	Identifier	Read		805167	1					
ANR	805191	ArgumentList	io		805167	1					
ANR	805192	Argument	io		805167	0					
ANR	805193	Identifier	io		805167	0					
ANR	805194	Argument	& tmp		805167	1					
ANR	805195	UnaryOperationExpression	& tmp		805167	0					
ANR	805196	UnaryOperator	&		805167	0					
ANR	805197	Identifier	tmp		805167	1					
ANR	805198	Argument	sizeof ( cmsUInt64Number )		805167	2					
ANR	805199	SizeofExpression	sizeof ( cmsUInt64Number )		805167	0					
ANR	805200	Sizeof	sizeof		805167	0					
ANR	805201	SizeofOperand	cmsUInt64Number		805167	1					
ANR	805202	Argument	1		805167	3					
ANR	805203	PrimaryExpression	1		805167	0					
ANR	805204	PrimaryExpression	1		805167	1					
ANR	805205	ReturnStatement	return FALSE ;	194:12:5009:5021	805167	1	True				
ANR	805206	Identifier	FALSE		805167	0					
ANR	805207	IfStatement	if ( n != NULL )		805167	3					
ANR	805208	Condition	n != NULL	196:8:5032:5040	805167	0	True				
ANR	805209	EqualityExpression	n != NULL		805167	0		!=			
ANR	805210	Identifier	n		805167	0					
ANR	805211	Identifier	NULL		805167	1					
ANR	805212	ExpressionStatement	"_cmsAdjustEndianess64 ( n , & tmp )"	196:19:5043:5073	805167	1	True				
ANR	805213	CallExpression	"_cmsAdjustEndianess64 ( n , & tmp )"		805167	0					
ANR	805214	Callee	_cmsAdjustEndianess64		805167	0					
ANR	805215	Identifier	_cmsAdjustEndianess64		805167	0					
ANR	805216	ArgumentList	n		805167	1					
ANR	805217	Argument	n		805167	0					
ANR	805218	Identifier	n		805167	0					
ANR	805219	Argument	& tmp		805167	1					
ANR	805220	UnaryOperationExpression	& tmp		805167	0					
ANR	805221	UnaryOperator	&		805167	0					
ANR	805222	Identifier	tmp		805167	1					
ANR	805223	ReturnStatement	return TRUE ;	197:4:5079:5090	805167	4	True				
ANR	805224	Identifier	TRUE		805167	0					
ANR	805225	ReturnType	cmsBool CMSEXPORT		805167	1					
ANR	805226	Identifier	_cmsReadUInt64Number		805167	2					
ANR	805227	ParameterList	"cmsIOHANDLER * io , cmsUInt64Number * n"		805167	3					
ANR	805228	Parameter	cmsIOHANDLER * io	187:41:4839:4854	805167	0	True				
ANR	805229	ParameterType	cmsIOHANDLER *		805167	0					
ANR	805230	Identifier	io		805167	1					
ANR	805231	Parameter	cmsUInt64Number * n	187:59:4857:4874	805167	1	True				
ANR	805232	ParameterType	cmsUInt64Number *		805167	0					
ANR	805233	Identifier	n		805167	1					
ANR	805234	CFGEntryNode	ENTRY		805167		True				
ANR	805235	CFGExitNode	EXIT		805167		True				
ANR	805236	Symbol	NULL		805167						
ANR	805237	Symbol	io -> Read		805167						
ANR	805238	Symbol	io		805167						
ANR	805239	Symbol	tmp		805167						
ANR	805240	Symbol	TRUE		805167						
ANR	805241	Symbol	& tmp		805167						
ANR	805242	Symbol	FALSE		805167						
ANR	805243	Symbol	n		805167						
ANR	805244	Symbol	* io		805167						
ANR	805245	Function	_cmsRead15Fixed16Number	201:0:5096:5434							
ANR	805246	FunctionDef	"_cmsRead15Fixed16Number (cmsIOHANDLER * io , cmsFloat64Number * n)"		805245	0					
ANR	805247	CompoundStatement		202:0:5178:5434	805245	0					
ANR	805248	IdentifierDeclStatement	cmsUInt32Number tmp ;	203:4:5184:5203	805245	0	True				
ANR	805249	IdentifierDecl	tmp		805245	0					
ANR	805250	IdentifierDeclType	cmsUInt32Number		805245	0					
ANR	805251	Identifier	tmp		805245	1					
ANR	805252	ExpressionStatement	_cmsAssert ( io != NULL )	205:4:5210:5232	805245	1	True				
ANR	805253	CallExpression	_cmsAssert ( io != NULL )		805245	0					
ANR	805254	Callee	_cmsAssert		805245	0					
ANR	805255	Identifier	_cmsAssert		805245	0					
ANR	805256	ArgumentList	io != NULL		805245	1					
ANR	805257	Argument	io != NULL		805245	0					
ANR	805258	EqualityExpression	io != NULL		805245	0		!=			
ANR	805259	Identifier	io		805245	0					
ANR	805260	Identifier	NULL		805245	1					
ANR	805261	IfStatement	"if ( io -> Read ( io , & tmp , sizeof ( cmsUInt32Number ) , 1 ) != 1 )"		805245	2					
ANR	805262	Condition	"io -> Read ( io , & tmp , sizeof ( cmsUInt32Number ) , 1 ) != 1"	207:8:5243:5295	805245	0	True				
ANR	805263	EqualityExpression	"io -> Read ( io , & tmp , sizeof ( cmsUInt32Number ) , 1 ) != 1"		805245	0		!=			
ANR	805264	CallExpression	"io -> Read ( io , & tmp , sizeof ( cmsUInt32Number ) , 1 )"		805245	0					
ANR	805265	Callee	io -> Read		805245	0					
ANR	805266	PtrMemberAccess	io -> Read		805245	0					
ANR	805267	Identifier	io		805245	0					
ANR	805268	Identifier	Read		805245	1					
ANR	805269	ArgumentList	io		805245	1					
ANR	805270	Argument	io		805245	0					
ANR	805271	Identifier	io		805245	0					
ANR	805272	Argument	& tmp		805245	1					
ANR	805273	UnaryOperationExpression	& tmp		805245	0					
ANR	805274	UnaryOperator	&		805245	0					
ANR	805275	Identifier	tmp		805245	1					
ANR	805276	Argument	sizeof ( cmsUInt32Number )		805245	2					
ANR	805277	SizeofExpression	sizeof ( cmsUInt32Number )		805245	0					
ANR	805278	Sizeof	sizeof		805245	0					
ANR	805279	SizeofOperand	cmsUInt32Number		805245	1					
ANR	805280	Argument	1		805245	3					
ANR	805281	PrimaryExpression	1		805245	0					
ANR	805282	PrimaryExpression	1		805245	1					
ANR	805283	ReturnStatement	return FALSE ;	208:12:5310:5322	805245	1	True				
ANR	805284	Identifier	FALSE		805245	0					
ANR	805285	IfStatement	if ( n != NULL )		805245	3					
ANR	805286	Condition	n != NULL	210:8:5333:5341	805245	0	True				
ANR	805287	EqualityExpression	n != NULL		805245	0		!=			
ANR	805288	Identifier	n		805245	0					
ANR	805289	Identifier	NULL		805245	1					
ANR	805290	CompoundStatement		9:19:165:165	805245	1					
ANR	805291	ExpressionStatement	* n = _cms15Fixed16toDouble ( _cmsAdjustEndianess32 ( tmp ) )	211:8:5354:5408	805245	0	True				
ANR	805292	AssignmentExpression	* n = _cms15Fixed16toDouble ( _cmsAdjustEndianess32 ( tmp ) )		805245	0		=			
ANR	805293	UnaryOperationExpression	* n		805245	0					
ANR	805294	UnaryOperator	*		805245	0					
ANR	805295	Identifier	n		805245	1					
ANR	805296	CallExpression	_cms15Fixed16toDouble ( _cmsAdjustEndianess32 ( tmp ) )		805245	1					
ANR	805297	Callee	_cms15Fixed16toDouble		805245	0					
ANR	805298	Identifier	_cms15Fixed16toDouble		805245	0					
ANR	805299	ArgumentList	_cmsAdjustEndianess32 ( tmp )		805245	1					
ANR	805300	Argument	_cmsAdjustEndianess32 ( tmp )		805245	0					
ANR	805301	CallExpression	_cmsAdjustEndianess32 ( tmp )		805245	0					
ANR	805302	Callee	_cmsAdjustEndianess32		805245	0					
ANR	805303	Identifier	_cmsAdjustEndianess32		805245	0					
ANR	805304	ArgumentList	tmp		805245	1					
ANR	805305	Argument	tmp		805245	0					
ANR	805306	Identifier	tmp		805245	0					
ANR	805307	ReturnStatement	return TRUE ;	214:4:5421:5432	805245	4	True				
ANR	805308	Identifier	TRUE		805245	0					
ANR	805309	ReturnType	cmsBool CMSEXPORT		805245	1					
ANR	805310	Identifier	_cmsRead15Fixed16Number		805245	2					
ANR	805311	ParameterList	"cmsIOHANDLER * io , cmsFloat64Number * n"		805245	3					
ANR	805312	Parameter	cmsIOHANDLER * io	201:43:5139:5154	805245	0	True				
ANR	805313	ParameterType	cmsIOHANDLER *		805245	0					
ANR	805314	Identifier	io		805245	1					
ANR	805315	Parameter	cmsFloat64Number * n	201:61:5157:5175	805245	1	True				
ANR	805316	ParameterType	cmsFloat64Number *		805245	0					
ANR	805317	Identifier	n		805245	1					
ANR	805318	CFGEntryNode	ENTRY		805245		True				
ANR	805319	CFGExitNode	EXIT		805245		True				
ANR	805320	Symbol	_cms15Fixed16toDouble		805245						
ANR	805321	Symbol	NULL		805245						
ANR	805322	Symbol	io -> Read		805245						
ANR	805323	Symbol	io		805245						
ANR	805324	Symbol	tmp		805245						
ANR	805325	Symbol	* n		805245						
ANR	805326	Symbol	TRUE		805245						
ANR	805327	Symbol	& tmp		805245						
ANR	805328	Symbol	FALSE		805245						
ANR	805329	Symbol	_cmsAdjustEndianess32		805245						
ANR	805330	Symbol	n		805245						
ANR	805331	Symbol	* io		805245						
ANR	805332	Function	_cmsReadXYZNumber	218:0:5438:5908							
ANR	805333	FunctionDef	"_cmsReadXYZNumber (cmsIOHANDLER * io , cmsCIEXYZ * XYZ)"		805332	0					
ANR	805334	CompoundStatement		219:0:5509:5908	805332	0					
ANR	805335	IdentifierDeclStatement	cmsEncodedXYZNumber xyz ;	220:4:5515:5538	805332	0	True				
ANR	805336	IdentifierDecl	xyz		805332	0					
ANR	805337	IdentifierDeclType	cmsEncodedXYZNumber		805332	0					
ANR	805338	Identifier	xyz		805332	1					
ANR	805339	ExpressionStatement	_cmsAssert ( io != NULL )	222:4:5545:5567	805332	1	True				
ANR	805340	CallExpression	_cmsAssert ( io != NULL )		805332	0					
ANR	805341	Callee	_cmsAssert		805332	0					
ANR	805342	Identifier	_cmsAssert		805332	0					
ANR	805343	ArgumentList	io != NULL		805332	1					
ANR	805344	Argument	io != NULL		805332	0					
ANR	805345	EqualityExpression	io != NULL		805332	0		!=			
ANR	805346	Identifier	io		805332	0					
ANR	805347	Identifier	NULL		805332	1					
ANR	805348	IfStatement	"if ( io -> Read ( io , & xyz , sizeof ( cmsEncodedXYZNumber ) , 1 ) != 1 )"		805332	2					
ANR	805349	Condition	"io -> Read ( io , & xyz , sizeof ( cmsEncodedXYZNumber ) , 1 ) != 1"	224:8:5578:5633	805332	0	True				
ANR	805350	EqualityExpression	"io -> Read ( io , & xyz , sizeof ( cmsEncodedXYZNumber ) , 1 ) != 1"		805332	0		!=			
ANR	805351	CallExpression	"io -> Read ( io , & xyz , sizeof ( cmsEncodedXYZNumber ) , 1 )"		805332	0					
ANR	805352	Callee	io -> Read		805332	0					
ANR	805353	PtrMemberAccess	io -> Read		805332	0					
ANR	805354	Identifier	io		805332	0					
ANR	805355	Identifier	Read		805332	1					
ANR	805356	ArgumentList	io		805332	1					
ANR	805357	Argument	io		805332	0					
ANR	805358	Identifier	io		805332	0					
ANR	805359	Argument	& xyz		805332	1					
ANR	805360	UnaryOperationExpression	& xyz		805332	0					
ANR	805361	UnaryOperator	&		805332	0					
ANR	805362	Identifier	xyz		805332	1					
ANR	805363	Argument	sizeof ( cmsEncodedXYZNumber )		805332	2					
ANR	805364	SizeofExpression	sizeof ( cmsEncodedXYZNumber )		805332	0					
ANR	805365	Sizeof	sizeof		805332	0					
ANR	805366	SizeofOperand	cmsEncodedXYZNumber		805332	1					
ANR	805367	Argument	1		805332	3					
ANR	805368	PrimaryExpression	1		805332	0					
ANR	805369	PrimaryExpression	1		805332	1					
ANR	805370	ReturnStatement	return FALSE ;	224:66:5636:5648	805332	1	True				
ANR	805371	Identifier	FALSE		805332	0					
ANR	805372	IfStatement	if ( XYZ != NULL )		805332	3					
ANR	805373	Condition	XYZ != NULL	226:8:5659:5669	805332	0	True				
ANR	805374	EqualityExpression	XYZ != NULL		805332	0		!=			
ANR	805375	Identifier	XYZ		805332	0					
ANR	805376	Identifier	NULL		805332	1					
ANR	805377	CompoundStatement		8:21:162:162	805332	1					
ANR	805378	ExpressionStatement	XYZ -> X = _cms15Fixed16toDouble ( _cmsAdjustEndianess32 ( xyz . X ) )	228:8:5683:5743	805332	0	True				
ANR	805379	AssignmentExpression	XYZ -> X = _cms15Fixed16toDouble ( _cmsAdjustEndianess32 ( xyz . X ) )		805332	0		=			
ANR	805380	PtrMemberAccess	XYZ -> X		805332	0					
ANR	805381	Identifier	XYZ		805332	0					
ANR	805382	Identifier	X		805332	1					
ANR	805383	CallExpression	_cms15Fixed16toDouble ( _cmsAdjustEndianess32 ( xyz . X ) )		805332	1					
ANR	805384	Callee	_cms15Fixed16toDouble		805332	0					
ANR	805385	Identifier	_cms15Fixed16toDouble		805332	0					
ANR	805386	ArgumentList	_cmsAdjustEndianess32 ( xyz . X )		805332	1					
ANR	805387	Argument	_cmsAdjustEndianess32 ( xyz . X )		805332	0					
ANR	805388	CallExpression	_cmsAdjustEndianess32 ( xyz . X )		805332	0					
ANR	805389	Callee	_cmsAdjustEndianess32		805332	0					
ANR	805390	Identifier	_cmsAdjustEndianess32		805332	0					
ANR	805391	ArgumentList	xyz . X		805332	1					
ANR	805392	Argument	xyz . X		805332	0					
ANR	805393	MemberAccess	xyz . X		805332	0					
ANR	805394	Identifier	xyz		805332	0					
ANR	805395	Identifier	X		805332	1					
ANR	805396	ExpressionStatement	XYZ -> Y = _cms15Fixed16toDouble ( _cmsAdjustEndianess32 ( xyz . Y ) )	229:8:5753:5813	805332	1	True				
ANR	805397	AssignmentExpression	XYZ -> Y = _cms15Fixed16toDouble ( _cmsAdjustEndianess32 ( xyz . Y ) )		805332	0		=			
ANR	805398	PtrMemberAccess	XYZ -> Y		805332	0					
ANR	805399	Identifier	XYZ		805332	0					
ANR	805400	Identifier	Y		805332	1					
ANR	805401	CallExpression	_cms15Fixed16toDouble ( _cmsAdjustEndianess32 ( xyz . Y ) )		805332	1					
ANR	805402	Callee	_cms15Fixed16toDouble		805332	0					
ANR	805403	Identifier	_cms15Fixed16toDouble		805332	0					
ANR	805404	ArgumentList	_cmsAdjustEndianess32 ( xyz . Y )		805332	1					
ANR	805405	Argument	_cmsAdjustEndianess32 ( xyz . Y )		805332	0					
ANR	805406	CallExpression	_cmsAdjustEndianess32 ( xyz . Y )		805332	0					
ANR	805407	Callee	_cmsAdjustEndianess32		805332	0					
ANR	805408	Identifier	_cmsAdjustEndianess32		805332	0					
ANR	805409	ArgumentList	xyz . Y		805332	1					
ANR	805410	Argument	xyz . Y		805332	0					
ANR	805411	MemberAccess	xyz . Y		805332	0					
ANR	805412	Identifier	xyz		805332	0					
ANR	805413	Identifier	Y		805332	1					
ANR	805414	ExpressionStatement	XYZ -> Z = _cms15Fixed16toDouble ( _cmsAdjustEndianess32 ( xyz . Z ) )	230:8:5823:5883	805332	2	True				
ANR	805415	AssignmentExpression	XYZ -> Z = _cms15Fixed16toDouble ( _cmsAdjustEndianess32 ( xyz . Z ) )		805332	0		=			
ANR	805416	PtrMemberAccess	XYZ -> Z		805332	0					
ANR	805417	Identifier	XYZ		805332	0					
ANR	805418	Identifier	Z		805332	1					
ANR	805419	CallExpression	_cms15Fixed16toDouble ( _cmsAdjustEndianess32 ( xyz . Z ) )		805332	1					
ANR	805420	Callee	_cms15Fixed16toDouble		805332	0					
ANR	805421	Identifier	_cms15Fixed16toDouble		805332	0					
ANR	805422	ArgumentList	_cmsAdjustEndianess32 ( xyz . Z )		805332	1					
ANR	805423	Argument	_cmsAdjustEndianess32 ( xyz . Z )		805332	0					
ANR	805424	CallExpression	_cmsAdjustEndianess32 ( xyz . Z )		805332	0					
ANR	805425	Callee	_cmsAdjustEndianess32		805332	0					
ANR	805426	Identifier	_cmsAdjustEndianess32		805332	0					
ANR	805427	ArgumentList	xyz . Z		805332	1					
ANR	805428	Argument	xyz . Z		805332	0					
ANR	805429	MemberAccess	xyz . Z		805332	0					
ANR	805430	Identifier	xyz		805332	0					
ANR	805431	Identifier	Z		805332	1					
ANR	805432	ReturnStatement	return TRUE ;	232:4:5895:5906	805332	4	True				
ANR	805433	Identifier	TRUE		805332	0					
ANR	805434	ReturnType	cmsBool CMSEXPORT		805332	1					
ANR	805435	Identifier	_cmsReadXYZNumber		805332	2					
ANR	805436	ParameterList	"cmsIOHANDLER * io , cmsCIEXYZ * XYZ"		805332	3					
ANR	805437	Parameter	cmsIOHANDLER * io	218:37:5475:5490	805332	0	True				
ANR	805438	ParameterType	cmsIOHANDLER *		805332	0					
ANR	805439	Identifier	io		805332	1					
ANR	805440	Parameter	cmsCIEXYZ * XYZ	218:55:5493:5506	805332	1	True				
ANR	805441	ParameterType	cmsCIEXYZ *		805332	0					
ANR	805442	Identifier	XYZ		805332	1					
ANR	805443	CFGEntryNode	ENTRY		805332		True				
ANR	805444	CFGExitNode	EXIT		805332		True				
ANR	805445	Symbol	NULL		805332						
ANR	805446	Symbol	io		805332						
ANR	805447	Symbol	TRUE		805332						
ANR	805448	Symbol	_cmsAdjustEndianess32		805332						
ANR	805449	Symbol	xyz . Y		805332						
ANR	805450	Symbol	XYZ -> Z		805332						
ANR	805451	Symbol	xyz . Z		805332						
ANR	805452	Symbol	XYZ -> X		805332						
ANR	805453	Symbol	* io		805332						
ANR	805454	Symbol	XYZ -> Y		805332						
ANR	805455	Symbol	_cms15Fixed16toDouble		805332						
ANR	805456	Symbol	xyz . X		805332						
ANR	805457	Symbol	io -> Read		805332						
ANR	805458	Symbol	XYZ		805332						
ANR	805459	Symbol	xyz		805332						
ANR	805460	Symbol	& xyz		805332						
ANR	805461	Symbol	FALSE		805332						
ANR	805462	Symbol	* XYZ		805332						
ANR	805463	Function	_cmsWriteUInt8Number	235:0:5911:6120							
ANR	805464	FunctionDef	"_cmsWriteUInt8Number (cmsIOHANDLER * io , cmsUInt8Number n)"		805463	0					
ANR	805465	CompoundStatement		236:0:5987:6120	805463	0					
ANR	805466	ExpressionStatement	_cmsAssert ( io != NULL )	237:4:5993:6015	805463	0	True				
ANR	805467	CallExpression	_cmsAssert ( io != NULL )		805463	0					
ANR	805468	Callee	_cmsAssert		805463	0					
ANR	805469	Identifier	_cmsAssert		805463	0					
ANR	805470	ArgumentList	io != NULL		805463	1					
ANR	805471	Argument	io != NULL		805463	0					
ANR	805472	EqualityExpression	io != NULL		805463	0		!=			
ANR	805473	Identifier	io		805463	0					
ANR	805474	Identifier	NULL		805463	1					
ANR	805475	IfStatement	"if ( io -> Write ( io , sizeof ( cmsUInt8Number ) , & n ) != 1 )"		805463	1					
ANR	805476	Condition	"io -> Write ( io , sizeof ( cmsUInt8Number ) , & n ) != 1"	239:8:6026:6073	805463	0	True				
ANR	805477	EqualityExpression	"io -> Write ( io , sizeof ( cmsUInt8Number ) , & n ) != 1"		805463	0		!=			
ANR	805478	CallExpression	"io -> Write ( io , sizeof ( cmsUInt8Number ) , & n )"		805463	0					
ANR	805479	Callee	io -> Write		805463	0					
ANR	805480	PtrMemberAccess	io -> Write		805463	0					
ANR	805481	Identifier	io		805463	0					
ANR	805482	Identifier	Write		805463	1					
ANR	805483	ArgumentList	io		805463	1					
ANR	805484	Argument	io		805463	0					
ANR	805485	Identifier	io		805463	0					
ANR	805486	Argument	sizeof ( cmsUInt8Number )		805463	1					
ANR	805487	SizeofExpression	sizeof ( cmsUInt8Number )		805463	0					
ANR	805488	Sizeof	sizeof		805463	0					
ANR	805489	SizeofOperand	cmsUInt8Number		805463	1					
ANR	805490	Argument	& n		805463	2					
ANR	805491	UnaryOperationExpression	& n		805463	0					
ANR	805492	UnaryOperator	&		805463	0					
ANR	805493	Identifier	n		805463	1					
ANR	805494	PrimaryExpression	1		805463	1					
ANR	805495	ReturnStatement	return FALSE ;	240:12:6088:6100	805463	1	True				
ANR	805496	Identifier	FALSE		805463	0					
ANR	805497	ReturnStatement	return TRUE ;	242:4:6107:6118	805463	2	True				
ANR	805498	Identifier	TRUE		805463	0					
ANR	805499	ReturnType	cmsBool CMSEXPORT		805463	1					
ANR	805500	Identifier	_cmsWriteUInt8Number		805463	2					
ANR	805501	ParameterList	"cmsIOHANDLER * io , cmsUInt8Number n"		805463	3					
ANR	805502	Parameter	cmsIOHANDLER * io	235:40:5951:5966	805463	0	True				
ANR	805503	ParameterType	cmsIOHANDLER *		805463	0					
ANR	805504	Identifier	io		805463	1					
ANR	805505	Parameter	cmsUInt8Number n	235:58:5969:5984	805463	1	True				
ANR	805506	ParameterType	cmsUInt8Number		805463	0					
ANR	805507	Identifier	n		805463	1					
ANR	805508	CFGEntryNode	ENTRY		805463		True				
ANR	805509	CFGExitNode	EXIT		805463		True				
ANR	805510	Symbol	NULL		805463						
ANR	805511	Symbol	& n		805463						
ANR	805512	Symbol	io		805463						
ANR	805513	Symbol	TRUE		805463						
ANR	805514	Symbol	FALSE		805463						
ANR	805515	Symbol	n		805463						
ANR	805516	Symbol	io -> Write		805463						
ANR	805517	Symbol	* io		805463						
ANR	805518	Function	_cmsWriteUInt16Number	245:0:6123:6399							
ANR	805519	FunctionDef	"_cmsWriteUInt16Number (cmsIOHANDLER * io , cmsUInt16Number n)"		805518	0					
ANR	805520	CompoundStatement		246:0:6201:6399	805518	0					
ANR	805521	IdentifierDeclStatement	cmsUInt16Number tmp ;	247:4:6207:6226	805518	0	True				
ANR	805522	IdentifierDecl	tmp		805518	0					
ANR	805523	IdentifierDeclType	cmsUInt16Number		805518	0					
ANR	805524	Identifier	tmp		805518	1					
ANR	805525	ExpressionStatement	_cmsAssert ( io != NULL )	249:4:6233:6255	805518	1	True				
ANR	805526	CallExpression	_cmsAssert ( io != NULL )		805518	0					
ANR	805527	Callee	_cmsAssert		805518	0					
ANR	805528	Identifier	_cmsAssert		805518	0					
ANR	805529	ArgumentList	io != NULL		805518	1					
ANR	805530	Argument	io != NULL		805518	0					
ANR	805531	EqualityExpression	io != NULL		805518	0		!=			
ANR	805532	Identifier	io		805518	0					
ANR	805533	Identifier	NULL		805518	1					
ANR	805534	ExpressionStatement	tmp = _cmsAdjustEndianess16 ( n )	251:4:6262:6292	805518	2	True				
ANR	805535	AssignmentExpression	tmp = _cmsAdjustEndianess16 ( n )		805518	0		=			
ANR	805536	Identifier	tmp		805518	0					
ANR	805537	CallExpression	_cmsAdjustEndianess16 ( n )		805518	1					
ANR	805538	Callee	_cmsAdjustEndianess16		805518	0					
ANR	805539	Identifier	_cmsAdjustEndianess16		805518	0					
ANR	805540	ArgumentList	n		805518	1					
ANR	805541	Argument	n		805518	0					
ANR	805542	Identifier	n		805518	0					
ANR	805543	IfStatement	"if ( io -> Write ( io , sizeof ( cmsUInt16Number ) , & tmp ) != 1 )"		805518	3					
ANR	805544	Condition	"io -> Write ( io , sizeof ( cmsUInt16Number ) , & tmp ) != 1"	252:8:6302:6352	805518	0	True				
ANR	805545	EqualityExpression	"io -> Write ( io , sizeof ( cmsUInt16Number ) , & tmp ) != 1"		805518	0		!=			
ANR	805546	CallExpression	"io -> Write ( io , sizeof ( cmsUInt16Number ) , & tmp )"		805518	0					
ANR	805547	Callee	io -> Write		805518	0					
ANR	805548	PtrMemberAccess	io -> Write		805518	0					
ANR	805549	Identifier	io		805518	0					
ANR	805550	Identifier	Write		805518	1					
ANR	805551	ArgumentList	io		805518	1					
ANR	805552	Argument	io		805518	0					
ANR	805553	Identifier	io		805518	0					
ANR	805554	Argument	sizeof ( cmsUInt16Number )		805518	1					
ANR	805555	SizeofExpression	sizeof ( cmsUInt16Number )		805518	0					
ANR	805556	Sizeof	sizeof		805518	0					
ANR	805557	SizeofOperand	cmsUInt16Number		805518	1					
ANR	805558	Argument	& tmp		805518	2					
ANR	805559	UnaryOperationExpression	& tmp		805518	0					
ANR	805560	UnaryOperator	&		805518	0					
ANR	805561	Identifier	tmp		805518	1					
ANR	805562	PrimaryExpression	1		805518	1					
ANR	805563	ReturnStatement	return FALSE ;	253:12:6367:6379	805518	1	True				
ANR	805564	Identifier	FALSE		805518	0					
ANR	805565	ReturnStatement	return TRUE ;	255:4:6386:6397	805518	4	True				
ANR	805566	Identifier	TRUE		805518	0					
ANR	805567	ReturnType	cmsBool CMSEXPORT		805518	1					
ANR	805568	Identifier	_cmsWriteUInt16Number		805518	2					
ANR	805569	ParameterList	"cmsIOHANDLER * io , cmsUInt16Number n"		805518	3					
ANR	805570	Parameter	cmsIOHANDLER * io	245:41:6164:6179	805518	0	True				
ANR	805571	ParameterType	cmsIOHANDLER *		805518	0					
ANR	805572	Identifier	io		805518	1					
ANR	805573	Parameter	cmsUInt16Number n	245:59:6182:6198	805518	1	True				
ANR	805574	ParameterType	cmsUInt16Number		805518	0					
ANR	805575	Identifier	n		805518	1					
ANR	805576	CFGEntryNode	ENTRY		805518		True				
ANR	805577	CFGExitNode	EXIT		805518		True				
ANR	805578	Symbol	NULL		805518						
ANR	805579	Symbol	io		805518						
ANR	805580	Symbol	tmp		805518						
ANR	805581	Symbol	TRUE		805518						
ANR	805582	Symbol	& tmp		805518						
ANR	805583	Symbol	FALSE		805518						
ANR	805584	Symbol	_cmsAdjustEndianess16		805518						
ANR	805585	Symbol	n		805518						
ANR	805586	Symbol	io -> Write		805518						
ANR	805587	Symbol	* io		805518						
ANR	805588	Function	_cmsWriteUInt16Array	258:0:6402:6711							
ANR	805589	FunctionDef	"_cmsWriteUInt16Array (cmsIOHANDLER * io , cmsUInt32Number n , const cmsUInt16Number * Array)"		805588	0					
ANR	805590	CompoundStatement		259:0:6509:6711	805588	0					
ANR	805591	IdentifierDeclStatement	cmsUInt32Number i ;	260:4:6515:6532	805588	0	True				
ANR	805592	IdentifierDecl	i		805588	0					
ANR	805593	IdentifierDeclType	cmsUInt32Number		805588	0					
ANR	805594	Identifier	i		805588	1					
ANR	805595	ExpressionStatement	_cmsAssert ( io != NULL )	262:4:6539:6561	805588	1	True				
ANR	805596	CallExpression	_cmsAssert ( io != NULL )		805588	0					
ANR	805597	Callee	_cmsAssert		805588	0					
ANR	805598	Identifier	_cmsAssert		805588	0					
ANR	805599	ArgumentList	io != NULL		805588	1					
ANR	805600	Argument	io != NULL		805588	0					
ANR	805601	EqualityExpression	io != NULL		805588	0		!=			
ANR	805602	Identifier	io		805588	0					
ANR	805603	Identifier	NULL		805588	1					
ANR	805604	ExpressionStatement	_cmsAssert ( Array != NULL )	263:4:6567:6592	805588	2	True				
ANR	805605	CallExpression	_cmsAssert ( Array != NULL )		805588	0					
ANR	805606	Callee	_cmsAssert		805588	0					
ANR	805607	Identifier	_cmsAssert		805588	0					
ANR	805608	ArgumentList	Array != NULL		805588	1					
ANR	805609	Argument	Array != NULL		805588	0					
ANR	805610	EqualityExpression	Array != NULL		805588	0		!=			
ANR	805611	Identifier	Array		805588	0					
ANR	805612	Identifier	NULL		805588	1					
ANR	805613	ForStatement	for ( i = 0 ; i < n ; i ++ )		805588	3					
ANR	805614	ForInit	i = 0 ;	265:9:6604:6607	805588	0	True				
ANR	805615	AssignmentExpression	i = 0		805588	0		=			
ANR	805616	Identifier	i		805588	0					
ANR	805617	PrimaryExpression	0		805588	1					
ANR	805618	Condition	i < n	265:14:6609:6613	805588	1	True				
ANR	805619	RelationalExpression	i < n		805588	0		<			
ANR	805620	Identifier	i		805588	0					
ANR	805621	Identifier	n		805588	1					
ANR	805622	PostIncDecOperationExpression	i ++	265:21:6616:6618	805588	2	True				
ANR	805623	Identifier	i		805588	0					
ANR	805624	IncDec	++		805588	1					
ANR	805625	CompoundStatement		7:26:111:111	805588	3					
ANR	805626	IfStatement	"if ( ! _cmsWriteUInt16Number ( io , Array [ i ] ) )"		805588	0					
ANR	805627	Condition	"! _cmsWriteUInt16Number ( io , Array [ i ] )"	266:12:6635:6670	805588	0	True				
ANR	805628	UnaryOperationExpression	"! _cmsWriteUInt16Number ( io , Array [ i ] )"		805588	0					
ANR	805629	UnaryOperator	!		805588	0					
ANR	805630	CallExpression	"_cmsWriteUInt16Number ( io , Array [ i ] )"		805588	1					
ANR	805631	Callee	_cmsWriteUInt16Number		805588	0					
ANR	805632	Identifier	_cmsWriteUInt16Number		805588	0					
ANR	805633	ArgumentList	io		805588	1					
ANR	805634	Argument	io		805588	0					
ANR	805635	Identifier	io		805588	0					
ANR	805636	Argument	Array [ i ]		805588	1					
ANR	805637	ArrayIndexing	Array [ i ]		805588	0					
ANR	805638	Identifier	Array		805588	0					
ANR	805639	Identifier	i		805588	1					
ANR	805640	ReturnStatement	return FALSE ;	266:50:6673:6685	805588	1	True				
ANR	805641	Identifier	FALSE		805588	0					
ANR	805642	ReturnStatement	return TRUE ;	269:4:6698:6709	805588	4	True				
ANR	805643	Identifier	TRUE		805588	0					
ANR	805644	ReturnType	cmsBool CMSEXPORT		805588	1					
ANR	805645	Identifier	_cmsWriteUInt16Array		805588	2					
ANR	805646	ParameterList	"cmsIOHANDLER * io , cmsUInt32Number n , const cmsUInt16Number * Array"		805588	3					
ANR	805647	Parameter	cmsIOHANDLER * io	258:40:6442:6457	805588	0	True				
ANR	805648	ParameterType	cmsIOHANDLER *		805588	0					
ANR	805649	Identifier	io		805588	1					
ANR	805650	Parameter	cmsUInt32Number n	258:58:6460:6476	805588	1	True				
ANR	805651	ParameterType	cmsUInt32Number		805588	0					
ANR	805652	Identifier	n		805588	1					
ANR	805653	Parameter	const cmsUInt16Number * Array	258:77:6479:6506	805588	2	True				
ANR	805654	ParameterType	const cmsUInt16Number *		805588	0					
ANR	805655	Identifier	Array		805588	1					
ANR	805656	CFGEntryNode	ENTRY		805588		True				
ANR	805657	CFGExitNode	EXIT		805588		True				
ANR	805658	Symbol	Array		805588						
ANR	805659	Symbol	NULL		805588						
ANR	805660	Symbol	* i		805588						
ANR	805661	Symbol	io		805588						
ANR	805662	Symbol	i		805588						
ANR	805663	Symbol	* Array		805588						
ANR	805664	Symbol	TRUE		805588						
ANR	805665	Symbol	_cmsWriteUInt16Number		805588						
ANR	805666	Symbol	FALSE		805588						
ANR	805667	Symbol	n		805588						
ANR	805668	Function	_cmsWriteUInt32Number	272:0:6714:6990							
ANR	805669	FunctionDef	"_cmsWriteUInt32Number (cmsIOHANDLER * io , cmsUInt32Number n)"		805668	0					
ANR	805670	CompoundStatement		273:0:6792:6990	805668	0					
ANR	805671	IdentifierDeclStatement	cmsUInt32Number tmp ;	274:4:6798:6817	805668	0	True				
ANR	805672	IdentifierDecl	tmp		805668	0					
ANR	805673	IdentifierDeclType	cmsUInt32Number		805668	0					
ANR	805674	Identifier	tmp		805668	1					
ANR	805675	ExpressionStatement	_cmsAssert ( io != NULL )	276:4:6824:6846	805668	1	True				
ANR	805676	CallExpression	_cmsAssert ( io != NULL )		805668	0					
ANR	805677	Callee	_cmsAssert		805668	0					
ANR	805678	Identifier	_cmsAssert		805668	0					
ANR	805679	ArgumentList	io != NULL		805668	1					
ANR	805680	Argument	io != NULL		805668	0					
ANR	805681	EqualityExpression	io != NULL		805668	0		!=			
ANR	805682	Identifier	io		805668	0					
ANR	805683	Identifier	NULL		805668	1					
ANR	805684	ExpressionStatement	tmp = _cmsAdjustEndianess32 ( n )	278:4:6853:6883	805668	2	True				
ANR	805685	AssignmentExpression	tmp = _cmsAdjustEndianess32 ( n )		805668	0		=			
ANR	805686	Identifier	tmp		805668	0					
ANR	805687	CallExpression	_cmsAdjustEndianess32 ( n )		805668	1					
ANR	805688	Callee	_cmsAdjustEndianess32		805668	0					
ANR	805689	Identifier	_cmsAdjustEndianess32		805668	0					
ANR	805690	ArgumentList	n		805668	1					
ANR	805691	Argument	n		805668	0					
ANR	805692	Identifier	n		805668	0					
ANR	805693	IfStatement	"if ( io -> Write ( io , sizeof ( cmsUInt32Number ) , & tmp ) != 1 )"		805668	3					
ANR	805694	Condition	"io -> Write ( io , sizeof ( cmsUInt32Number ) , & tmp ) != 1"	279:8:6893:6943	805668	0	True				
ANR	805695	EqualityExpression	"io -> Write ( io , sizeof ( cmsUInt32Number ) , & tmp ) != 1"		805668	0		!=			
ANR	805696	CallExpression	"io -> Write ( io , sizeof ( cmsUInt32Number ) , & tmp )"		805668	0					
ANR	805697	Callee	io -> Write		805668	0					
ANR	805698	PtrMemberAccess	io -> Write		805668	0					
ANR	805699	Identifier	io		805668	0					
ANR	805700	Identifier	Write		805668	1					
ANR	805701	ArgumentList	io		805668	1					
ANR	805702	Argument	io		805668	0					
ANR	805703	Identifier	io		805668	0					
ANR	805704	Argument	sizeof ( cmsUInt32Number )		805668	1					
ANR	805705	SizeofExpression	sizeof ( cmsUInt32Number )		805668	0					
ANR	805706	Sizeof	sizeof		805668	0					
ANR	805707	SizeofOperand	cmsUInt32Number		805668	1					
ANR	805708	Argument	& tmp		805668	2					
ANR	805709	UnaryOperationExpression	& tmp		805668	0					
ANR	805710	UnaryOperator	&		805668	0					
ANR	805711	Identifier	tmp		805668	1					
ANR	805712	PrimaryExpression	1		805668	1					
ANR	805713	ReturnStatement	return FALSE ;	280:12:6958:6970	805668	1	True				
ANR	805714	Identifier	FALSE		805668	0					
ANR	805715	ReturnStatement	return TRUE ;	282:4:6977:6988	805668	4	True				
ANR	805716	Identifier	TRUE		805668	0					
ANR	805717	ReturnType	cmsBool CMSEXPORT		805668	1					
ANR	805718	Identifier	_cmsWriteUInt32Number		805668	2					
ANR	805719	ParameterList	"cmsIOHANDLER * io , cmsUInt32Number n"		805668	3					
ANR	805720	Parameter	cmsIOHANDLER * io	272:41:6755:6770	805668	0	True				
ANR	805721	ParameterType	cmsIOHANDLER *		805668	0					
ANR	805722	Identifier	io		805668	1					
ANR	805723	Parameter	cmsUInt32Number n	272:59:6773:6789	805668	1	True				
ANR	805724	ParameterType	cmsUInt32Number		805668	0					
ANR	805725	Identifier	n		805668	1					
ANR	805726	CFGEntryNode	ENTRY		805668		True				
ANR	805727	CFGExitNode	EXIT		805668		True				
ANR	805728	Symbol	NULL		805668						
ANR	805729	Symbol	io		805668						
ANR	805730	Symbol	tmp		805668						
ANR	805731	Symbol	TRUE		805668						
ANR	805732	Symbol	& tmp		805668						
ANR	805733	Symbol	FALSE		805668						
ANR	805734	Symbol	_cmsAdjustEndianess32		805668						
ANR	805735	Symbol	n		805668						
ANR	805736	Symbol	io -> Write		805668						
ANR	805737	Symbol	* io		805668						
ANR	805738	Function	_cmsWriteFloat32Number	286:0:6994:7316							
ANR	805739	FunctionDef	"_cmsWriteFloat32Number (cmsIOHANDLER * io , cmsFloat32Number n)"		805738	0					
ANR	805740	CompoundStatement		287:0:7074:7316	805738	0					
ANR	805741	IdentifierDeclStatement	cmsUInt32Number tmp ;	288:4:7080:7099	805738	0	True				
ANR	805742	IdentifierDecl	tmp		805738	0					
ANR	805743	IdentifierDeclType	cmsUInt32Number		805738	0					
ANR	805744	Identifier	tmp		805738	1					
ANR	805745	ExpressionStatement	_cmsAssert ( io != NULL )	290:4:7106:7128	805738	1	True				
ANR	805746	CallExpression	_cmsAssert ( io != NULL )		805738	0					
ANR	805747	Callee	_cmsAssert		805738	0					
ANR	805748	Identifier	_cmsAssert		805738	0					
ANR	805749	ArgumentList	io != NULL		805738	1					
ANR	805750	Argument	io != NULL		805738	0					
ANR	805751	EqualityExpression	io != NULL		805738	0		!=			
ANR	805752	Identifier	io		805738	0					
ANR	805753	Identifier	NULL		805738	1					
ANR	805754	ExpressionStatement	tmp = * ( cmsUInt32Number * ) ( void * ) & n	292:4:7135:7171	805738	2	True				
ANR	805755	AssignmentExpression	tmp = * ( cmsUInt32Number * ) ( void * ) & n		805738	0		=			
ANR	805756	Identifier	tmp		805738	0					
ANR	805757	UnaryOperationExpression	* ( cmsUInt32Number * ) ( void * ) & n		805738	1					
ANR	805758	UnaryOperator	*		805738	0					
ANR	805759	CastExpression	( cmsUInt32Number * ) ( void * ) & n		805738	1					
ANR	805760	CastTarget	cmsUInt32Number *		805738	0					
ANR	805761	CastExpression	( void * ) & n		805738	1					
ANR	805762	CastTarget	void *		805738	0					
ANR	805763	UnaryOperationExpression	& n		805738	1					
ANR	805764	UnaryOperator	&		805738	0					
ANR	805765	Identifier	n		805738	1					
ANR	805766	ExpressionStatement	tmp = _cmsAdjustEndianess32 ( tmp )	293:4:7177:7209	805738	3	True				
ANR	805767	AssignmentExpression	tmp = _cmsAdjustEndianess32 ( tmp )		805738	0		=			
ANR	805768	Identifier	tmp		805738	0					
ANR	805769	CallExpression	_cmsAdjustEndianess32 ( tmp )		805738	1					
ANR	805770	Callee	_cmsAdjustEndianess32		805738	0					
ANR	805771	Identifier	_cmsAdjustEndianess32		805738	0					
ANR	805772	ArgumentList	tmp		805738	1					
ANR	805773	Argument	tmp		805738	0					
ANR	805774	Identifier	tmp		805738	0					
ANR	805775	IfStatement	"if ( io -> Write ( io , sizeof ( cmsUInt32Number ) , & tmp ) != 1 )"		805738	4					
ANR	805776	Condition	"io -> Write ( io , sizeof ( cmsUInt32Number ) , & tmp ) != 1"	294:8:7219:7269	805738	0	True				
ANR	805777	EqualityExpression	"io -> Write ( io , sizeof ( cmsUInt32Number ) , & tmp ) != 1"		805738	0		!=			
ANR	805778	CallExpression	"io -> Write ( io , sizeof ( cmsUInt32Number ) , & tmp )"		805738	0					
ANR	805779	Callee	io -> Write		805738	0					
ANR	805780	PtrMemberAccess	io -> Write		805738	0					
ANR	805781	Identifier	io		805738	0					
ANR	805782	Identifier	Write		805738	1					
ANR	805783	ArgumentList	io		805738	1					
ANR	805784	Argument	io		805738	0					
ANR	805785	Identifier	io		805738	0					
ANR	805786	Argument	sizeof ( cmsUInt32Number )		805738	1					
ANR	805787	SizeofExpression	sizeof ( cmsUInt32Number )		805738	0					
ANR	805788	Sizeof	sizeof		805738	0					
ANR	805789	SizeofOperand	cmsUInt32Number		805738	1					
ANR	805790	Argument	& tmp		805738	2					
ANR	805791	UnaryOperationExpression	& tmp		805738	0					
ANR	805792	UnaryOperator	&		805738	0					
ANR	805793	Identifier	tmp		805738	1					
ANR	805794	PrimaryExpression	1		805738	1					
ANR	805795	ReturnStatement	return FALSE ;	295:12:7284:7296	805738	1	True				
ANR	805796	Identifier	FALSE		805738	0					
ANR	805797	ReturnStatement	return TRUE ;	297:4:7303:7314	805738	5	True				
ANR	805798	Identifier	TRUE		805738	0					
ANR	805799	ReturnType	cmsBool CMSEXPORT		805738	1					
ANR	805800	Identifier	_cmsWriteFloat32Number		805738	2					
ANR	805801	ParameterList	"cmsIOHANDLER * io , cmsFloat32Number n"		805738	3					
ANR	805802	Parameter	cmsIOHANDLER * io	286:42:7036:7051	805738	0	True				
ANR	805803	ParameterType	cmsIOHANDLER *		805738	0					
ANR	805804	Identifier	io		805738	1					
ANR	805805	Parameter	cmsFloat32Number n	286:60:7054:7071	805738	1	True				
ANR	805806	ParameterType	cmsFloat32Number		805738	0					
ANR	805807	Identifier	n		805738	1					
ANR	805808	CFGEntryNode	ENTRY		805738		True				
ANR	805809	CFGExitNode	EXIT		805738		True				
ANR	805810	Symbol	NULL		805738						
ANR	805811	Symbol	& n		805738						
ANR	805812	Symbol	io		805738						
ANR	805813	Symbol	tmp		805738						
ANR	805814	Symbol	* ( cmsUInt32Number * ) ( void * ) & n		805738						
ANR	805815	Symbol	TRUE		805738						
ANR	805816	Symbol	& tmp		805738						
ANR	805817	Symbol	FALSE		805738						
ANR	805818	Symbol	_cmsAdjustEndianess32		805738						
ANR	805819	Symbol	n		805738						
ANR	805820	Symbol	io -> Write		805738						
ANR	805821	Symbol	* io		805738						
ANR	805822	Function	_cmsWriteUInt64Number	300:0:7319:7596							
ANR	805823	FunctionDef	"_cmsWriteUInt64Number (cmsIOHANDLER * io , cmsUInt64Number * n)"		805822	0					
ANR	805824	CompoundStatement		301:0:7398:7596	805822	0					
ANR	805825	IdentifierDeclStatement	cmsUInt64Number tmp ;	302:4:7404:7423	805822	0	True				
ANR	805826	IdentifierDecl	tmp		805822	0					
ANR	805827	IdentifierDeclType	cmsUInt64Number		805822	0					
ANR	805828	Identifier	tmp		805822	1					
ANR	805829	ExpressionStatement	_cmsAssert ( io != NULL )	304:4:7430:7452	805822	1	True				
ANR	805830	CallExpression	_cmsAssert ( io != NULL )		805822	0					
ANR	805831	Callee	_cmsAssert		805822	0					
ANR	805832	Identifier	_cmsAssert		805822	0					
ANR	805833	ArgumentList	io != NULL		805822	1					
ANR	805834	Argument	io != NULL		805822	0					
ANR	805835	EqualityExpression	io != NULL		805822	0		!=			
ANR	805836	Identifier	io		805822	0					
ANR	805837	Identifier	NULL		805822	1					
ANR	805838	ExpressionStatement	"_cmsAdjustEndianess64 ( & tmp , n )"	306:4:7459:7489	805822	2	True				
ANR	805839	CallExpression	"_cmsAdjustEndianess64 ( & tmp , n )"		805822	0					
ANR	805840	Callee	_cmsAdjustEndianess64		805822	0					
ANR	805841	Identifier	_cmsAdjustEndianess64		805822	0					
ANR	805842	ArgumentList	& tmp		805822	1					
ANR	805843	Argument	& tmp		805822	0					
ANR	805844	UnaryOperationExpression	& tmp		805822	0					
ANR	805845	UnaryOperator	&		805822	0					
ANR	805846	Identifier	tmp		805822	1					
ANR	805847	Argument	n		805822	1					
ANR	805848	Identifier	n		805822	0					
ANR	805849	IfStatement	"if ( io -> Write ( io , sizeof ( cmsUInt64Number ) , & tmp ) != 1 )"		805822	3					
ANR	805850	Condition	"io -> Write ( io , sizeof ( cmsUInt64Number ) , & tmp ) != 1"	307:8:7499:7549	805822	0	True				
ANR	805851	EqualityExpression	"io -> Write ( io , sizeof ( cmsUInt64Number ) , & tmp ) != 1"		805822	0		!=			
ANR	805852	CallExpression	"io -> Write ( io , sizeof ( cmsUInt64Number ) , & tmp )"		805822	0					
ANR	805853	Callee	io -> Write		805822	0					
ANR	805854	PtrMemberAccess	io -> Write		805822	0					
ANR	805855	Identifier	io		805822	0					
ANR	805856	Identifier	Write		805822	1					
ANR	805857	ArgumentList	io		805822	1					
ANR	805858	Argument	io		805822	0					
ANR	805859	Identifier	io		805822	0					
ANR	805860	Argument	sizeof ( cmsUInt64Number )		805822	1					
ANR	805861	SizeofExpression	sizeof ( cmsUInt64Number )		805822	0					
ANR	805862	Sizeof	sizeof		805822	0					
ANR	805863	SizeofOperand	cmsUInt64Number		805822	1					
ANR	805864	Argument	& tmp		805822	2					
ANR	805865	UnaryOperationExpression	& tmp		805822	0					
ANR	805866	UnaryOperator	&		805822	0					
ANR	805867	Identifier	tmp		805822	1					
ANR	805868	PrimaryExpression	1		805822	1					
ANR	805869	ReturnStatement	return FALSE ;	308:12:7564:7576	805822	1	True				
ANR	805870	Identifier	FALSE		805822	0					
ANR	805871	ReturnStatement	return TRUE ;	310:4:7583:7594	805822	4	True				
ANR	805872	Identifier	TRUE		805822	0					
ANR	805873	ReturnType	cmsBool CMSEXPORT		805822	1					
ANR	805874	Identifier	_cmsWriteUInt64Number		805822	2					
ANR	805875	ParameterList	"cmsIOHANDLER * io , cmsUInt64Number * n"		805822	3					
ANR	805876	Parameter	cmsIOHANDLER * io	300:41:7360:7375	805822	0	True				
ANR	805877	ParameterType	cmsIOHANDLER *		805822	0					
ANR	805878	Identifier	io		805822	1					
ANR	805879	Parameter	cmsUInt64Number * n	300:59:7378:7395	805822	1	True				
ANR	805880	ParameterType	cmsUInt64Number *		805822	0					
ANR	805881	Identifier	n		805822	1					
ANR	805882	CFGEntryNode	ENTRY		805822		True				
ANR	805883	CFGExitNode	EXIT		805822		True				
ANR	805884	Symbol	NULL		805822						
ANR	805885	Symbol	io		805822						
ANR	805886	Symbol	tmp		805822						
ANR	805887	Symbol	TRUE		805822						
ANR	805888	Symbol	& tmp		805822						
ANR	805889	Symbol	FALSE		805822						
ANR	805890	Symbol	n		805822						
ANR	805891	Symbol	io -> Write		805822						
ANR	805892	Symbol	* io		805822						
ANR	805893	Function	_cmsWrite15Fixed16Number	313:0:7599:7902							
ANR	805894	FunctionDef	"_cmsWrite15Fixed16Number (cmsIOHANDLER * io , cmsFloat64Number n)"		805893	0					
ANR	805895	CompoundStatement		314:0:7681:7902	805893	0					
ANR	805896	IdentifierDeclStatement	cmsUInt32Number tmp ;	315:4:7687:7706	805893	0	True				
ANR	805897	IdentifierDecl	tmp		805893	0					
ANR	805898	IdentifierDeclType	cmsUInt32Number		805893	0					
ANR	805899	Identifier	tmp		805893	1					
ANR	805900	ExpressionStatement	_cmsAssert ( io != NULL )	317:4:7713:7735	805893	1	True				
ANR	805901	CallExpression	_cmsAssert ( io != NULL )		805893	0					
ANR	805902	Callee	_cmsAssert		805893	0					
ANR	805903	Identifier	_cmsAssert		805893	0					
ANR	805904	ArgumentList	io != NULL		805893	1					
ANR	805905	Argument	io != NULL		805893	0					
ANR	805906	EqualityExpression	io != NULL		805893	0		!=			
ANR	805907	Identifier	io		805893	0					
ANR	805908	Identifier	NULL		805893	1					
ANR	805909	ExpressionStatement	tmp = _cmsAdjustEndianess32 ( _cmsDoubleTo15Fixed16 ( n ) )	319:4:7742:7795	805893	2	True				
ANR	805910	AssignmentExpression	tmp = _cmsAdjustEndianess32 ( _cmsDoubleTo15Fixed16 ( n ) )		805893	0		=			
ANR	805911	Identifier	tmp		805893	0					
ANR	805912	CallExpression	_cmsAdjustEndianess32 ( _cmsDoubleTo15Fixed16 ( n ) )		805893	1					
ANR	805913	Callee	_cmsAdjustEndianess32		805893	0					
ANR	805914	Identifier	_cmsAdjustEndianess32		805893	0					
ANR	805915	ArgumentList	_cmsDoubleTo15Fixed16 ( n )		805893	1					
ANR	805916	Argument	_cmsDoubleTo15Fixed16 ( n )		805893	0					
ANR	805917	CallExpression	_cmsDoubleTo15Fixed16 ( n )		805893	0					
ANR	805918	Callee	_cmsDoubleTo15Fixed16		805893	0					
ANR	805919	Identifier	_cmsDoubleTo15Fixed16		805893	0					
ANR	805920	ArgumentList	n		805893	1					
ANR	805921	Argument	n		805893	0					
ANR	805922	Identifier	n		805893	0					
ANR	805923	IfStatement	"if ( io -> Write ( io , sizeof ( cmsUInt32Number ) , & tmp ) != 1 )"		805893	3					
ANR	805924	Condition	"io -> Write ( io , sizeof ( cmsUInt32Number ) , & tmp ) != 1"	320:8:7805:7855	805893	0	True				
ANR	805925	EqualityExpression	"io -> Write ( io , sizeof ( cmsUInt32Number ) , & tmp ) != 1"		805893	0		!=			
ANR	805926	CallExpression	"io -> Write ( io , sizeof ( cmsUInt32Number ) , & tmp )"		805893	0					
ANR	805927	Callee	io -> Write		805893	0					
ANR	805928	PtrMemberAccess	io -> Write		805893	0					
ANR	805929	Identifier	io		805893	0					
ANR	805930	Identifier	Write		805893	1					
ANR	805931	ArgumentList	io		805893	1					
ANR	805932	Argument	io		805893	0					
ANR	805933	Identifier	io		805893	0					
ANR	805934	Argument	sizeof ( cmsUInt32Number )		805893	1					
ANR	805935	SizeofExpression	sizeof ( cmsUInt32Number )		805893	0					
ANR	805936	Sizeof	sizeof		805893	0					
ANR	805937	SizeofOperand	cmsUInt32Number		805893	1					
ANR	805938	Argument	& tmp		805893	2					
ANR	805939	UnaryOperationExpression	& tmp		805893	0					
ANR	805940	UnaryOperator	&		805893	0					
ANR	805941	Identifier	tmp		805893	1					
ANR	805942	PrimaryExpression	1		805893	1					
ANR	805943	ReturnStatement	return FALSE ;	321:12:7870:7882	805893	1	True				
ANR	805944	Identifier	FALSE		805893	0					
ANR	805945	ReturnStatement	return TRUE ;	323:4:7889:7900	805893	4	True				
ANR	805946	Identifier	TRUE		805893	0					
ANR	805947	ReturnType	cmsBool CMSEXPORT		805893	1					
ANR	805948	Identifier	_cmsWrite15Fixed16Number		805893	2					
ANR	805949	ParameterList	"cmsIOHANDLER * io , cmsFloat64Number n"		805893	3					
ANR	805950	Parameter	cmsIOHANDLER * io	313:44:7643:7658	805893	0	True				
ANR	805951	ParameterType	cmsIOHANDLER *		805893	0					
ANR	805952	Identifier	io		805893	1					
ANR	805953	Parameter	cmsFloat64Number n	313:62:7661:7678	805893	1	True				
ANR	805954	ParameterType	cmsFloat64Number		805893	0					
ANR	805955	Identifier	n		805893	1					
ANR	805956	CFGEntryNode	ENTRY		805893		True				
ANR	805957	CFGExitNode	EXIT		805893		True				
ANR	805958	Symbol	NULL		805893						
ANR	805959	Symbol	_cmsDoubleTo15Fixed16		805893						
ANR	805960	Symbol	io		805893						
ANR	805961	Symbol	tmp		805893						
ANR	805962	Symbol	TRUE		805893						
ANR	805963	Symbol	& tmp		805893						
ANR	805964	Symbol	FALSE		805893						
ANR	805965	Symbol	_cmsAdjustEndianess32		805893						
ANR	805966	Symbol	n		805893						
ANR	805967	Symbol	io -> Write		805893						
ANR	805968	Symbol	* io		805893						
ANR	805969	Function	_cmsWriteXYZNumber	326:0:7905:8336							
ANR	805970	FunctionDef	"_cmsWriteXYZNumber (cmsIOHANDLER * io , const cmsCIEXYZ * XYZ)"		805969	0					
ANR	805971	CompoundStatement		327:0:7983:8336	805969	0					
ANR	805972	IdentifierDeclStatement	cmsEncodedXYZNumber xyz ;	328:4:7989:8012	805969	0	True				
ANR	805973	IdentifierDecl	xyz		805969	0					
ANR	805974	IdentifierDeclType	cmsEncodedXYZNumber		805969	0					
ANR	805975	Identifier	xyz		805969	1					
ANR	805976	ExpressionStatement	_cmsAssert ( io != NULL )	330:4:8019:8041	805969	1	True				
ANR	805977	CallExpression	_cmsAssert ( io != NULL )		805969	0					
ANR	805978	Callee	_cmsAssert		805969	0					
ANR	805979	Identifier	_cmsAssert		805969	0					
ANR	805980	ArgumentList	io != NULL		805969	1					
ANR	805981	Argument	io != NULL		805969	0					
ANR	805982	EqualityExpression	io != NULL		805969	0		!=			
ANR	805983	Identifier	io		805969	0					
ANR	805984	Identifier	NULL		805969	1					
ANR	805985	ExpressionStatement	_cmsAssert ( XYZ != NULL )	331:4:8047:8070	805969	2	True				
ANR	805986	CallExpression	_cmsAssert ( XYZ != NULL )		805969	0					
ANR	805987	Callee	_cmsAssert		805969	0					
ANR	805988	Identifier	_cmsAssert		805969	0					
ANR	805989	ArgumentList	XYZ != NULL		805969	1					
ANR	805990	Argument	XYZ != NULL		805969	0					
ANR	805991	EqualityExpression	XYZ != NULL		805969	0		!=			
ANR	805992	Identifier	XYZ		805969	0					
ANR	805993	Identifier	NULL		805969	1					
ANR	805994	ExpressionStatement	xyz . X = _cmsAdjustEndianess32 ( _cmsDoubleTo15Fixed16 ( XYZ -> X ) )	333:4:8077:8137	805969	3	True				
ANR	805995	AssignmentExpression	xyz . X = _cmsAdjustEndianess32 ( _cmsDoubleTo15Fixed16 ( XYZ -> X ) )		805969	0		=			
ANR	805996	MemberAccess	xyz . X		805969	0					
ANR	805997	Identifier	xyz		805969	0					
ANR	805998	Identifier	X		805969	1					
ANR	805999	CallExpression	_cmsAdjustEndianess32 ( _cmsDoubleTo15Fixed16 ( XYZ -> X ) )		805969	1					
ANR	806000	Callee	_cmsAdjustEndianess32		805969	0					
ANR	806001	Identifier	_cmsAdjustEndianess32		805969	0					
ANR	806002	ArgumentList	_cmsDoubleTo15Fixed16 ( XYZ -> X )		805969	1					
ANR	806003	Argument	_cmsDoubleTo15Fixed16 ( XYZ -> X )		805969	0					
ANR	806004	CallExpression	_cmsDoubleTo15Fixed16 ( XYZ -> X )		805969	0					
ANR	806005	Callee	_cmsDoubleTo15Fixed16		805969	0					
ANR	806006	Identifier	_cmsDoubleTo15Fixed16		805969	0					
ANR	806007	ArgumentList	XYZ -> X		805969	1					
ANR	806008	Argument	XYZ -> X		805969	0					
ANR	806009	PtrMemberAccess	XYZ -> X		805969	0					
ANR	806010	Identifier	XYZ		805969	0					
ANR	806011	Identifier	X		805969	1					
ANR	806012	ExpressionStatement	xyz . Y = _cmsAdjustEndianess32 ( _cmsDoubleTo15Fixed16 ( XYZ -> Y ) )	334:4:8143:8203	805969	4	True				
ANR	806013	AssignmentExpression	xyz . Y = _cmsAdjustEndianess32 ( _cmsDoubleTo15Fixed16 ( XYZ -> Y ) )		805969	0		=			
ANR	806014	MemberAccess	xyz . Y		805969	0					
ANR	806015	Identifier	xyz		805969	0					
ANR	806016	Identifier	Y		805969	1					
ANR	806017	CallExpression	_cmsAdjustEndianess32 ( _cmsDoubleTo15Fixed16 ( XYZ -> Y ) )		805969	1					
ANR	806018	Callee	_cmsAdjustEndianess32		805969	0					
ANR	806019	Identifier	_cmsAdjustEndianess32		805969	0					
ANR	806020	ArgumentList	_cmsDoubleTo15Fixed16 ( XYZ -> Y )		805969	1					
ANR	806021	Argument	_cmsDoubleTo15Fixed16 ( XYZ -> Y )		805969	0					
ANR	806022	CallExpression	_cmsDoubleTo15Fixed16 ( XYZ -> Y )		805969	0					
ANR	806023	Callee	_cmsDoubleTo15Fixed16		805969	0					
ANR	806024	Identifier	_cmsDoubleTo15Fixed16		805969	0					
ANR	806025	ArgumentList	XYZ -> Y		805969	1					
ANR	806026	Argument	XYZ -> Y		805969	0					
ANR	806027	PtrMemberAccess	XYZ -> Y		805969	0					
ANR	806028	Identifier	XYZ		805969	0					
ANR	806029	Identifier	Y		805969	1					
ANR	806030	ExpressionStatement	xyz . Z = _cmsAdjustEndianess32 ( _cmsDoubleTo15Fixed16 ( XYZ -> Z ) )	335:4:8209:8269	805969	5	True				
ANR	806031	AssignmentExpression	xyz . Z = _cmsAdjustEndianess32 ( _cmsDoubleTo15Fixed16 ( XYZ -> Z ) )		805969	0		=			
ANR	806032	MemberAccess	xyz . Z		805969	0					
ANR	806033	Identifier	xyz		805969	0					
ANR	806034	Identifier	Z		805969	1					
ANR	806035	CallExpression	_cmsAdjustEndianess32 ( _cmsDoubleTo15Fixed16 ( XYZ -> Z ) )		805969	1					
ANR	806036	Callee	_cmsAdjustEndianess32		805969	0					
ANR	806037	Identifier	_cmsAdjustEndianess32		805969	0					
ANR	806038	ArgumentList	_cmsDoubleTo15Fixed16 ( XYZ -> Z )		805969	1					
ANR	806039	Argument	_cmsDoubleTo15Fixed16 ( XYZ -> Z )		805969	0					
ANR	806040	CallExpression	_cmsDoubleTo15Fixed16 ( XYZ -> Z )		805969	0					
ANR	806041	Callee	_cmsDoubleTo15Fixed16		805969	0					
ANR	806042	Identifier	_cmsDoubleTo15Fixed16		805969	0					
ANR	806043	ArgumentList	XYZ -> Z		805969	1					
ANR	806044	Argument	XYZ -> Z		805969	0					
ANR	806045	PtrMemberAccess	XYZ -> Z		805969	0					
ANR	806046	Identifier	XYZ		805969	0					
ANR	806047	Identifier	Z		805969	1					
ANR	806048	ReturnStatement	"return io -> Write ( io , sizeof ( cmsEncodedXYZNumber ) , & xyz ) ;"	337:4:8276:8334	805969	6	True				
ANR	806049	CallExpression	"io -> Write ( io , sizeof ( cmsEncodedXYZNumber ) , & xyz )"		805969	0					
ANR	806050	Callee	io -> Write		805969	0					
ANR	806051	PtrMemberAccess	io -> Write		805969	0					
ANR	806052	Identifier	io		805969	0					
ANR	806053	Identifier	Write		805969	1					
ANR	806054	ArgumentList	io		805969	1					
ANR	806055	Argument	io		805969	0					
ANR	806056	Identifier	io		805969	0					
ANR	806057	Argument	sizeof ( cmsEncodedXYZNumber )		805969	1					
ANR	806058	SizeofExpression	sizeof ( cmsEncodedXYZNumber )		805969	0					
ANR	806059	Sizeof	sizeof		805969	0					
ANR	806060	SizeofOperand	cmsEncodedXYZNumber		805969	1					
ANR	806061	Argument	& xyz		805969	2					
ANR	806062	UnaryOperationExpression	& xyz		805969	0					
ANR	806063	UnaryOperator	&		805969	0					
ANR	806064	Identifier	xyz		805969	1					
ANR	806065	ReturnType	cmsBool CMSEXPORT		805969	1					
ANR	806066	Identifier	_cmsWriteXYZNumber		805969	2					
ANR	806067	ParameterList	"cmsIOHANDLER * io , const cmsCIEXYZ * XYZ"		805969	3					
ANR	806068	Parameter	cmsIOHANDLER * io	326:38:7943:7958	805969	0	True				
ANR	806069	ParameterType	cmsIOHANDLER *		805969	0					
ANR	806070	Identifier	io		805969	1					
ANR	806071	Parameter	const cmsCIEXYZ * XYZ	326:56:7961:7980	805969	1	True				
ANR	806072	ParameterType	const cmsCIEXYZ *		805969	0					
ANR	806073	Identifier	XYZ		805969	1					
ANR	806074	CFGEntryNode	ENTRY		805969		True				
ANR	806075	CFGExitNode	EXIT		805969		True				
ANR	806076	Symbol	NULL		805969						
ANR	806077	Symbol	_cmsDoubleTo15Fixed16		805969						
ANR	806078	Symbol	io		805969						
ANR	806079	Symbol	_cmsAdjustEndianess32		805969						
ANR	806080	Symbol	xyz . Y		805969						
ANR	806081	Symbol	XYZ -> Z		805969						
ANR	806082	Symbol	xyz . Z		805969						
ANR	806083	Symbol	XYZ -> X		805969						
ANR	806084	Symbol	io -> Write		805969						
ANR	806085	Symbol	XYZ -> Y		805969						
ANR	806086	Symbol	* io		805969						
ANR	806087	Symbol	xyz . X		805969						
ANR	806088	Symbol	XYZ		805969						
ANR	806089	Symbol	xyz		805969						
ANR	806090	Symbol	& xyz		805969						
ANR	806091	Symbol	* XYZ		805969						
ANR	806092	Function	_cms8Fixed8toDouble	341:0:8373:8694							
ANR	806093	FunctionDef	_cms8Fixed8toDouble (cmsUInt16Number fixed8)		806092	0					
ANR	806094	CompoundStatement		342:0:8444:8694	806092	0					
ANR	806095	IdentifierDeclStatement	"cmsUInt8Number msb , lsb ;"	343:7:8453:8477	806092	0	True				
ANR	806096	IdentifierDecl	msb		806092	0					
ANR	806097	IdentifierDeclType	cmsUInt8Number		806092	0					
ANR	806098	Identifier	msb		806092	1					
ANR	806099	IdentifierDecl	lsb		806092	1					
ANR	806100	IdentifierDeclType	cmsUInt8Number		806092	0					
ANR	806101	Identifier	lsb		806092	1					
ANR	806102	ExpressionStatement	lsb = ( cmsUInt8Number ) ( fixed8 & 0xff )	345:7:8487:8525	806092	1	True				
ANR	806103	AssignmentExpression	lsb = ( cmsUInt8Number ) ( fixed8 & 0xff )		806092	0		=			
ANR	806104	Identifier	lsb		806092	0					
ANR	806105	CastExpression	( cmsUInt8Number ) ( fixed8 & 0xff )		806092	1					
ANR	806106	CastTarget	cmsUInt8Number		806092	0					
ANR	806107	BitAndExpression	fixed8 & 0xff		806092	1		&			
ANR	806108	Identifier	fixed8		806092	0					
ANR	806109	PrimaryExpression	0xff		806092	1					
ANR	806110	ExpressionStatement	msb = ( cmsUInt8Number ) ( ( ( cmsUInt16Number ) fixed8 >> 8 ) & 0xff )	346:7:8534:8597	806092	2	True				
ANR	806111	AssignmentExpression	msb = ( cmsUInt8Number ) ( ( ( cmsUInt16Number ) fixed8 >> 8 ) & 0xff )		806092	0		=			
ANR	806112	Identifier	msb		806092	0					
ANR	806113	CastExpression	( cmsUInt8Number ) ( ( ( cmsUInt16Number ) fixed8 >> 8 ) & 0xff )		806092	1					
ANR	806114	CastTarget	cmsUInt8Number		806092	0					
ANR	806115	BitAndExpression	( ( cmsUInt16Number ) fixed8 >> 8 ) & 0xff		806092	1		&			
ANR	806116	ShiftExpression	( cmsUInt16Number ) fixed8 >> 8		806092	0		>>			
ANR	806117	CastExpression	( cmsUInt16Number ) fixed8		806092	0					
ANR	806118	CastTarget	cmsUInt16Number		806092	0					
ANR	806119	Identifier	fixed8		806092	1					
ANR	806120	PrimaryExpression	8		806092	1					
ANR	806121	PrimaryExpression	0xff		806092	1					
ANR	806122	ReturnStatement	return ( cmsFloat64Number ) ( ( cmsFloat64Number ) msb + ( ( cmsFloat64Number ) lsb / 256.0 ) ) ;	348:7:8607:8692	806092	3	True				
ANR	806123	CastExpression	( cmsFloat64Number ) ( ( cmsFloat64Number ) msb + ( ( cmsFloat64Number ) lsb / 256.0 ) )		806092	0					
ANR	806124	CastTarget	cmsFloat64Number		806092	0					
ANR	806125	AdditiveExpression	( cmsFloat64Number ) msb + ( ( cmsFloat64Number ) lsb / 256.0 )		806092	1		+			
ANR	806126	CastExpression	( cmsFloat64Number ) msb		806092	0					
ANR	806127	CastTarget	cmsFloat64Number		806092	0					
ANR	806128	Identifier	msb		806092	1					
ANR	806129	MultiplicativeExpression	( cmsFloat64Number ) lsb / 256.0		806092	1		/			
ANR	806130	CastExpression	( cmsFloat64Number ) lsb		806092	0					
ANR	806131	CastTarget	cmsFloat64Number		806092	0					
ANR	806132	Identifier	lsb		806092	1					
ANR	806133	PrimaryExpression	256.0		806092	1					
ANR	806134	ReturnType	cmsFloat64Number CMSEXPORT		806092	1					
ANR	806135	Identifier	_cms8Fixed8toDouble		806092	2					
ANR	806136	ParameterList	cmsUInt16Number fixed8		806092	3					
ANR	806137	Parameter	cmsUInt16Number fixed8	341:47:8420:8441	806092	0	True				
ANR	806138	ParameterType	cmsUInt16Number		806092	0					
ANR	806139	Identifier	fixed8		806092	1					
ANR	806140	CFGEntryNode	ENTRY		806092		True				
ANR	806141	CFGExitNode	EXIT		806092		True				
ANR	806142	Symbol	fixed8		806092						
ANR	806143	Symbol	lsb		806092						
ANR	806144	Symbol	msb		806092						
ANR	806145	Function	_cmsDoubleTo8Fixed8	351:0:8697:8896							
ANR	806146	FunctionDef	_cmsDoubleTo8Fixed8 (cmsFloat64Number val)		806145	0					
ANR	806147	CompoundStatement		352:0:8765:8896	806145	0					
ANR	806148	IdentifierDeclStatement	cmsS15Fixed16Number GammaFixed32 = _cmsDoubleTo15Fixed16 ( val ) ;	353:4:8771:8832	806145	0	True				
ANR	806149	IdentifierDecl	GammaFixed32 = _cmsDoubleTo15Fixed16 ( val )		806145	0					
ANR	806150	IdentifierDeclType	cmsS15Fixed16Number		806145	0					
ANR	806151	Identifier	GammaFixed32		806145	1					
ANR	806152	AssignmentExpression	GammaFixed32 = _cmsDoubleTo15Fixed16 ( val )		806145	2		=			
ANR	806153	Identifier	GammaFixed32		806145	0					
ANR	806154	CallExpression	_cmsDoubleTo15Fixed16 ( val )		806145	1					
ANR	806155	Callee	_cmsDoubleTo15Fixed16		806145	0					
ANR	806156	Identifier	_cmsDoubleTo15Fixed16		806145	0					
ANR	806157	ArgumentList	val		806145	1					
ANR	806158	Argument	val		806145	0					
ANR	806159	Identifier	val		806145	0					
ANR	806160	ReturnStatement	return ( cmsUInt16Number ) ( ( GammaFixed32 >> 8 ) & 0xFFFF ) ;	354:4:8838:8894	806145	1	True				
ANR	806161	CastExpression	( cmsUInt16Number ) ( ( GammaFixed32 >> 8 ) & 0xFFFF )		806145	0					
ANR	806162	CastTarget	cmsUInt16Number		806145	0					
ANR	806163	BitAndExpression	( GammaFixed32 >> 8 ) & 0xFFFF		806145	1		&			
ANR	806164	ShiftExpression	GammaFixed32 >> 8		806145	0		>>			
ANR	806165	Identifier	GammaFixed32		806145	0					
ANR	806166	PrimaryExpression	8		806145	1					
ANR	806167	PrimaryExpression	0xFFFF		806145	1					
ANR	806168	ReturnType	cmsUInt16Number CMSEXPORT		806145	1					
ANR	806169	Identifier	_cmsDoubleTo8Fixed8		806145	2					
ANR	806170	ParameterList	cmsFloat64Number val		806145	3					
ANR	806171	Parameter	cmsFloat64Number val	351:46:8743:8762	806145	0	True				
ANR	806172	ParameterType	cmsFloat64Number		806145	0					
ANR	806173	Identifier	val		806145	1					
ANR	806174	CFGEntryNode	ENTRY		806145		True				
ANR	806175	CFGExitNode	EXIT		806145		True				
ANR	806176	Symbol	val		806145						
ANR	806177	Symbol	_cmsDoubleTo15Fixed16		806145						
ANR	806178	Symbol	GammaFixed32		806145						
ANR	806179	Function	_cms15Fixed16toDouble	358:0:8935:9375							
ANR	806180	FunctionDef	_cms15Fixed16toDouble (cmsS15Fixed16Number fix32)		806179	0					
ANR	806181	CompoundStatement		359:0:9011:9375	806179	0					
ANR	806182	IdentifierDeclStatement	"cmsFloat64Number floater , sign , mid ;"	360:4:9017:9052	806179	0	True				
ANR	806183	IdentifierDecl	floater		806179	0					
ANR	806184	IdentifierDeclType	cmsFloat64Number		806179	0					
ANR	806185	Identifier	floater		806179	1					
ANR	806186	IdentifierDecl	sign		806179	1					
ANR	806187	IdentifierDeclType	cmsFloat64Number		806179	0					
ANR	806188	Identifier	sign		806179	1					
ANR	806189	IdentifierDecl	mid		806179	2					
ANR	806190	IdentifierDeclType	cmsFloat64Number		806179	0					
ANR	806191	Identifier	mid		806179	1					
ANR	806192	IdentifierDeclStatement	"int Whole , FracPart ;"	361:4:9058:9077	806179	1	True				
ANR	806193	IdentifierDecl	Whole		806179	0					
ANR	806194	IdentifierDeclType	int		806179	0					
ANR	806195	Identifier	Whole		806179	1					
ANR	806196	IdentifierDecl	FracPart		806179	1					
ANR	806197	IdentifierDeclType	int		806179	0					
ANR	806198	Identifier	FracPart		806179	1					
ANR	806199	ExpressionStatement	sign = ( fix32 < 0 ? - 1 : 1 )	363:4:9084:9112	806179	2	True				
ANR	806200	AssignmentExpression	sign = ( fix32 < 0 ? - 1 : 1 )		806179	0		=			
ANR	806201	Identifier	sign		806179	0					
ANR	806202	ConditionalExpression	fix32 < 0 ? - 1 : 1		806179	1					
ANR	806203	Condition	fix32 < 0		806179	0					
ANR	806204	RelationalExpression	fix32 < 0		806179	0		<			
ANR	806205	Identifier	fix32		806179	0					
ANR	806206	PrimaryExpression	0		806179	1					
ANR	806207	UnaryOperationExpression	- 1		806179	1					
ANR	806208	UnaryOperator	-		806179	0					
ANR	806209	PrimaryExpression	1		806179	1					
ANR	806210	PrimaryExpression	1		806179	2					
ANR	806211	ExpressionStatement	fix32 = abs ( fix32 )	364:4:9118:9136	806179	3	True				
ANR	806212	AssignmentExpression	fix32 = abs ( fix32 )		806179	0		=			
ANR	806213	Identifier	fix32		806179	0					
ANR	806214	CallExpression	abs ( fix32 )		806179	1					
ANR	806215	Callee	abs		806179	0					
ANR	806216	Identifier	abs		806179	0					
ANR	806217	ArgumentList	fix32		806179	1					
ANR	806218	Argument	fix32		806179	0					
ANR	806219	Identifier	fix32		806179	0					
ANR	806220	ExpressionStatement	Whole = ( cmsUInt16Number ) ( fix32 >> 16 ) & 0xffff	366:4:9143:9194	806179	4	True				
ANR	806221	AssignmentExpression	Whole = ( cmsUInt16Number ) ( fix32 >> 16 ) & 0xffff		806179	0		=			
ANR	806222	Identifier	Whole		806179	0					
ANR	806223	BitAndExpression	( cmsUInt16Number ) ( fix32 >> 16 ) & 0xffff		806179	1		&			
ANR	806224	CastExpression	( cmsUInt16Number ) ( fix32 >> 16 )		806179	0					
ANR	806225	CastTarget	cmsUInt16Number		806179	0					
ANR	806226	ShiftExpression	fix32 >> 16		806179	1		>>			
ANR	806227	Identifier	fix32		806179	0					
ANR	806228	PrimaryExpression	16		806179	1					
ANR	806229	PrimaryExpression	0xffff		806179	1					
ANR	806230	ExpressionStatement	FracPart = ( cmsUInt16Number ) ( fix32 & 0xffff )	367:4:9200:9245	806179	5	True				
ANR	806231	AssignmentExpression	FracPart = ( cmsUInt16Number ) ( fix32 & 0xffff )		806179	0		=			
ANR	806232	Identifier	FracPart		806179	0					
ANR	806233	CastExpression	( cmsUInt16Number ) ( fix32 & 0xffff )		806179	1					
ANR	806234	CastTarget	cmsUInt16Number		806179	0					
ANR	806235	BitAndExpression	fix32 & 0xffff		806179	1		&			
ANR	806236	Identifier	fix32		806179	0					
ANR	806237	PrimaryExpression	0xffff		806179	1					
ANR	806238	ExpressionStatement	mid = ( cmsFloat64Number ) FracPart / 65536.0	369:4:9252:9299	806179	6	True				
ANR	806239	AssignmentExpression	mid = ( cmsFloat64Number ) FracPart / 65536.0		806179	0		=			
ANR	806240	Identifier	mid		806179	0					
ANR	806241	MultiplicativeExpression	( cmsFloat64Number ) FracPart / 65536.0		806179	1		/			
ANR	806242	CastExpression	( cmsFloat64Number ) FracPart		806179	0					
ANR	806243	CastTarget	cmsFloat64Number		806179	0					
ANR	806244	Identifier	FracPart		806179	1					
ANR	806245	PrimaryExpression	65536.0		806179	1					
ANR	806246	ExpressionStatement	floater = ( cmsFloat64Number ) Whole + mid	370:4:9305:9345	806179	7	True				
ANR	806247	AssignmentExpression	floater = ( cmsFloat64Number ) Whole + mid		806179	0		=			
ANR	806248	Identifier	floater		806179	0					
ANR	806249	AdditiveExpression	( cmsFloat64Number ) Whole + mid		806179	1		+			
ANR	806250	CastExpression	( cmsFloat64Number ) Whole		806179	0					
ANR	806251	CastTarget	cmsFloat64Number		806179	0					
ANR	806252	Identifier	Whole		806179	1					
ANR	806253	Identifier	mid		806179	1					
ANR	806254	ReturnStatement	return sign * floater ;	372:4:9352:9373	806179	8	True				
ANR	806255	MultiplicativeExpression	sign * floater		806179	0		*			
ANR	806256	Identifier	sign		806179	0					
ANR	806257	Identifier	floater		806179	1					
ANR	806258	ReturnType	cmsFloat64Number CMSEXPORT		806179	1					
ANR	806259	Identifier	_cms15Fixed16toDouble		806179	2					
ANR	806260	ParameterList	cmsS15Fixed16Number fix32		806179	3					
ANR	806261	Parameter	cmsS15Fixed16Number fix32	358:49:8984:9008	806179	0	True				
ANR	806262	ParameterType	cmsS15Fixed16Number		806179	0					
ANR	806263	Identifier	fix32		806179	1					
ANR	806264	CFGEntryNode	ENTRY		806179		True				
ANR	806265	CFGExitNode	EXIT		806179		True				
ANR	806266	Symbol	abs		806179						
ANR	806267	Symbol	FracPart		806179						
ANR	806268	Symbol	sign		806179						
ANR	806269	Symbol	floater		806179						
ANR	806270	Symbol	mid		806179						
ANR	806271	Symbol	fix32		806179						
ANR	806272	Symbol	Whole		806179						
ANR	806273	Function	_cmsDoubleTo15Fixed16	376:0:9414:9549							
ANR	806274	FunctionDef	_cmsDoubleTo15Fixed16 (cmsFloat64Number v)		806273	0					
ANR	806275	CompoundStatement		377:0:9486:9549	806273	0					
ANR	806276	ReturnStatement	return ( ( cmsS15Fixed16Number ) floor ( ( v ) * 65536.0 + 0.5 ) ) ;	378:4:9492:9547	806273	0	True				
ANR	806277	CastExpression	( cmsS15Fixed16Number ) floor ( ( v ) * 65536.0 + 0.5 )		806273	0					
ANR	806278	CastTarget	cmsS15Fixed16Number		806273	0					
ANR	806279	CallExpression	floor ( ( v ) * 65536.0 + 0.5 )		806273	1					
ANR	806280	Callee	floor		806273	0					
ANR	806281	Identifier	floor		806273	0					
ANR	806282	ArgumentList	( v ) * 65536.0 + 0.5		806273	1					
ANR	806283	Argument	( v ) * 65536.0 + 0.5		806273	0					
ANR	806284	AdditiveExpression	( v ) * 65536.0 + 0.5		806273	0		+			
ANR	806285	CastExpression	( v ) * 65536.0		806273	0					
ANR	806286	CastTarget	v		806273	0					
ANR	806287	UnaryOperationExpression	* 65536.0		806273	1					
ANR	806288	UnaryOperator	*		806273	0					
ANR	806289	PrimaryExpression	65536.0		806273	1					
ANR	806290	PrimaryExpression	0.5		806273	1					
ANR	806291	ReturnType	cmsS15Fixed16Number CMSEXPORT		806273	1					
ANR	806292	Identifier	_cmsDoubleTo15Fixed16		806273	2					
ANR	806293	ParameterList	cmsFloat64Number v		806273	3					
ANR	806294	Parameter	cmsFloat64Number v	376:52:9466:9483	806273	0	True				
ANR	806295	ParameterType	cmsFloat64Number		806273	0					
ANR	806296	Identifier	v		806273	1					
ANR	806297	CFGEntryNode	ENTRY		806273		True				
ANR	806298	CFGExitNode	EXIT		806273		True				
ANR	806299	Symbol	* 65536.0		806273						
ANR	806300	Symbol	v		806273						
ANR	806301	Symbol	floor		806273						
ANR	806302	Function	_cmsDecodeDateTimeNumber	383:0:9576:10172							
ANR	806303	FunctionDef	"_cmsDecodeDateTimeNumber (const cmsDateTimeNumber * Source , struct tm * Dest)"		806302	0					
ANR	806304	CompoundStatement		384:0:9666:10172	806302	0					
ANR	806305	ExpressionStatement	_cmsAssert ( Dest != NULL )	386:4:9673:9697	806302	0	True				
ANR	806306	CallExpression	_cmsAssert ( Dest != NULL )		806302	0					
ANR	806307	Callee	_cmsAssert		806302	0					
ANR	806308	Identifier	_cmsAssert		806302	0					
ANR	806309	ArgumentList	Dest != NULL		806302	1					
ANR	806310	Argument	Dest != NULL		806302	0					
ANR	806311	EqualityExpression	Dest != NULL		806302	0		!=			
ANR	806312	Identifier	Dest		806302	0					
ANR	806313	Identifier	NULL		806302	1					
ANR	806314	ExpressionStatement	_cmsAssert ( Source != NULL )	387:4:9703:9729	806302	1	True				
ANR	806315	CallExpression	_cmsAssert ( Source != NULL )		806302	0					
ANR	806316	Callee	_cmsAssert		806302	0					
ANR	806317	Identifier	_cmsAssert		806302	0					
ANR	806318	ArgumentList	Source != NULL		806302	1					
ANR	806319	Argument	Source != NULL		806302	0					
ANR	806320	EqualityExpression	Source != NULL		806302	0		!=			
ANR	806321	Identifier	Source		806302	0					
ANR	806322	Identifier	NULL		806302	1					
ANR	806323	ExpressionStatement	Dest -> tm_sec = _cmsAdjustEndianess16 ( Source -> seconds )	389:4:9736:9791	806302	2	True				
ANR	806324	AssignmentExpression	Dest -> tm_sec = _cmsAdjustEndianess16 ( Source -> seconds )		806302	0		=			
ANR	806325	PtrMemberAccess	Dest -> tm_sec		806302	0					
ANR	806326	Identifier	Dest		806302	0					
ANR	806327	Identifier	tm_sec		806302	1					
ANR	806328	CallExpression	_cmsAdjustEndianess16 ( Source -> seconds )		806302	1					
ANR	806329	Callee	_cmsAdjustEndianess16		806302	0					
ANR	806330	Identifier	_cmsAdjustEndianess16		806302	0					
ANR	806331	ArgumentList	Source -> seconds		806302	1					
ANR	806332	Argument	Source -> seconds		806302	0					
ANR	806333	PtrMemberAccess	Source -> seconds		806302	0					
ANR	806334	Identifier	Source		806302	0					
ANR	806335	Identifier	seconds		806302	1					
ANR	806336	ExpressionStatement	Dest -> tm_min = _cmsAdjustEndianess16 ( Source -> minutes )	390:4:9797:9852	806302	3	True				
ANR	806337	AssignmentExpression	Dest -> tm_min = _cmsAdjustEndianess16 ( Source -> minutes )		806302	0		=			
ANR	806338	PtrMemberAccess	Dest -> tm_min		806302	0					
ANR	806339	Identifier	Dest		806302	0					
ANR	806340	Identifier	tm_min		806302	1					
ANR	806341	CallExpression	_cmsAdjustEndianess16 ( Source -> minutes )		806302	1					
ANR	806342	Callee	_cmsAdjustEndianess16		806302	0					
ANR	806343	Identifier	_cmsAdjustEndianess16		806302	0					
ANR	806344	ArgumentList	Source -> minutes		806302	1					
ANR	806345	Argument	Source -> minutes		806302	0					
ANR	806346	PtrMemberAccess	Source -> minutes		806302	0					
ANR	806347	Identifier	Source		806302	0					
ANR	806348	Identifier	minutes		806302	1					
ANR	806349	ExpressionStatement	Dest -> tm_hour = _cmsAdjustEndianess16 ( Source -> hours )	391:4:9858:9911	806302	4	True				
ANR	806350	AssignmentExpression	Dest -> tm_hour = _cmsAdjustEndianess16 ( Source -> hours )		806302	0		=			
ANR	806351	PtrMemberAccess	Dest -> tm_hour		806302	0					
ANR	806352	Identifier	Dest		806302	0					
ANR	806353	Identifier	tm_hour		806302	1					
ANR	806354	CallExpression	_cmsAdjustEndianess16 ( Source -> hours )		806302	1					
ANR	806355	Callee	_cmsAdjustEndianess16		806302	0					
ANR	806356	Identifier	_cmsAdjustEndianess16		806302	0					
ANR	806357	ArgumentList	Source -> hours		806302	1					
ANR	806358	Argument	Source -> hours		806302	0					
ANR	806359	PtrMemberAccess	Source -> hours		806302	0					
ANR	806360	Identifier	Source		806302	0					
ANR	806361	Identifier	hours		806302	1					
ANR	806362	ExpressionStatement	Dest -> tm_mday = _cmsAdjustEndianess16 ( Source -> day )	392:4:9917:9968	806302	5	True				
ANR	806363	AssignmentExpression	Dest -> tm_mday = _cmsAdjustEndianess16 ( Source -> day )		806302	0		=			
ANR	806364	PtrMemberAccess	Dest -> tm_mday		806302	0					
ANR	806365	Identifier	Dest		806302	0					
ANR	806366	Identifier	tm_mday		806302	1					
ANR	806367	CallExpression	_cmsAdjustEndianess16 ( Source -> day )		806302	1					
ANR	806368	Callee	_cmsAdjustEndianess16		806302	0					
ANR	806369	Identifier	_cmsAdjustEndianess16		806302	0					
ANR	806370	ArgumentList	Source -> day		806302	1					
ANR	806371	Argument	Source -> day		806302	0					
ANR	806372	PtrMemberAccess	Source -> day		806302	0					
ANR	806373	Identifier	Source		806302	0					
ANR	806374	Identifier	day		806302	1					
ANR	806375	ExpressionStatement	Dest -> tm_mon = _cmsAdjustEndianess16 ( Source -> month ) - 1	393:4:9974:10031	806302	6	True				
ANR	806376	AssignmentExpression	Dest -> tm_mon = _cmsAdjustEndianess16 ( Source -> month ) - 1		806302	0		=			
ANR	806377	PtrMemberAccess	Dest -> tm_mon		806302	0					
ANR	806378	Identifier	Dest		806302	0					
ANR	806379	Identifier	tm_mon		806302	1					
ANR	806380	AdditiveExpression	_cmsAdjustEndianess16 ( Source -> month ) - 1		806302	1		-			
ANR	806381	CallExpression	_cmsAdjustEndianess16 ( Source -> month )		806302	0					
ANR	806382	Callee	_cmsAdjustEndianess16		806302	0					
ANR	806383	Identifier	_cmsAdjustEndianess16		806302	0					
ANR	806384	ArgumentList	Source -> month		806302	1					
ANR	806385	Argument	Source -> month		806302	0					
ANR	806386	PtrMemberAccess	Source -> month		806302	0					
ANR	806387	Identifier	Source		806302	0					
ANR	806388	Identifier	month		806302	1					
ANR	806389	PrimaryExpression	1		806302	1					
ANR	806390	ExpressionStatement	Dest -> tm_year = _cmsAdjustEndianess16 ( Source -> year ) - 1900	394:4:10037:10096	806302	7	True				
ANR	806391	AssignmentExpression	Dest -> tm_year = _cmsAdjustEndianess16 ( Source -> year ) - 1900		806302	0		=			
ANR	806392	PtrMemberAccess	Dest -> tm_year		806302	0					
ANR	806393	Identifier	Dest		806302	0					
ANR	806394	Identifier	tm_year		806302	1					
ANR	806395	AdditiveExpression	_cmsAdjustEndianess16 ( Source -> year ) - 1900		806302	1		-			
ANR	806396	CallExpression	_cmsAdjustEndianess16 ( Source -> year )		806302	0					
ANR	806397	Callee	_cmsAdjustEndianess16		806302	0					
ANR	806398	Identifier	_cmsAdjustEndianess16		806302	0					
ANR	806399	ArgumentList	Source -> year		806302	1					
ANR	806400	Argument	Source -> year		806302	0					
ANR	806401	PtrMemberAccess	Source -> year		806302	0					
ANR	806402	Identifier	Source		806302	0					
ANR	806403	Identifier	year		806302	1					
ANR	806404	PrimaryExpression	1900		806302	1					
ANR	806405	ExpressionStatement	Dest -> tm_wday = - 1	395:4:10102:10121	806302	8	True				
ANR	806406	AssignmentExpression	Dest -> tm_wday = - 1		806302	0		=			
ANR	806407	PtrMemberAccess	Dest -> tm_wday		806302	0					
ANR	806408	Identifier	Dest		806302	0					
ANR	806409	Identifier	tm_wday		806302	1					
ANR	806410	UnaryOperationExpression	- 1		806302	1					
ANR	806411	UnaryOperator	-		806302	0					
ANR	806412	PrimaryExpression	1		806302	1					
ANR	806413	ExpressionStatement	Dest -> tm_yday = - 1	396:4:10127:10146	806302	9	True				
ANR	806414	AssignmentExpression	Dest -> tm_yday = - 1		806302	0		=			
ANR	806415	PtrMemberAccess	Dest -> tm_yday		806302	0					
ANR	806416	Identifier	Dest		806302	0					
ANR	806417	Identifier	tm_yday		806302	1					
ANR	806418	UnaryOperationExpression	- 1		806302	1					
ANR	806419	UnaryOperator	-		806302	0					
ANR	806420	PrimaryExpression	1		806302	1					
ANR	806421	ExpressionStatement	Dest -> tm_isdst = 0	397:4:10152:10170	806302	10	True				
ANR	806422	AssignmentExpression	Dest -> tm_isdst = 0		806302	0		=			
ANR	806423	PtrMemberAccess	Dest -> tm_isdst		806302	0					
ANR	806424	Identifier	Dest		806302	0					
ANR	806425	Identifier	tm_isdst		806302	1					
ANR	806426	PrimaryExpression	0		806302	1					
ANR	806427	ReturnType	void CMSEXPORT		806302	1					
ANR	806428	Identifier	_cmsDecodeDateTimeNumber		806302	2					
ANR	806429	ParameterList	"const cmsDateTimeNumber * Source , struct tm * Dest"		806302	3					
ANR	806430	Parameter	const cmsDateTimeNumber * Source	383:40:9616:9646	806302	0	True				
ANR	806431	ParameterType	const cmsDateTimeNumber *		806302	0					
ANR	806432	Identifier	Source		806302	1					
ANR	806433	Parameter	struct tm * Dest	383:73:9649:9663	806302	1	True				
ANR	806434	ParameterType	struct tm *		806302	0					
ANR	806435	Identifier	Dest		806302	1					
ANR	806436	CFGEntryNode	ENTRY		806302		True				
ANR	806437	CFGExitNode	EXIT		806302		True				
ANR	806438	Symbol	Source -> hours		806302						
ANR	806439	Symbol	Dest		806302						
ANR	806440	Symbol	NULL		806302						
ANR	806441	Symbol	Dest -> tm_hour		806302						
ANR	806442	Symbol	Source -> minutes		806302						
ANR	806443	Symbol	Source -> day		806302						
ANR	806444	Symbol	Source -> year		806302						
ANR	806445	Symbol	_cmsAdjustEndianess16		806302						
ANR	806446	Symbol	Source		806302						
ANR	806447	Symbol	Source -> seconds		806302						
ANR	806448	Symbol	Dest -> tm_sec		806302						
ANR	806449	Symbol	Dest -> tm_min		806302						
ANR	806450	Symbol	Dest -> tm_year		806302						
ANR	806451	Symbol	* Dest		806302						
ANR	806452	Symbol	Dest -> tm_mday		806302						
ANR	806453	Symbol	Dest -> tm_mon		806302						
ANR	806454	Symbol	Dest -> tm_yday		806302						
ANR	806455	Symbol	Dest -> tm_wday		806302						
ANR	806456	Symbol	Source -> month		806302						
ANR	806457	Symbol	* Source		806302						
ANR	806458	Symbol	Dest -> tm_isdst		806302						
ANR	806459	Function	_cmsEncodeDateTimeNumber	400:0:10175:10810							
ANR	806460	FunctionDef	"_cmsEncodeDateTimeNumber (cmsDateTimeNumber * Dest , const struct tm * Source)"		806459	0					
ANR	806461	CompoundStatement		401:0:10265:10810	806459	0					
ANR	806462	ExpressionStatement	_cmsAssert ( Dest != NULL )	402:4:10271:10295	806459	0	True				
ANR	806463	CallExpression	_cmsAssert ( Dest != NULL )		806459	0					
ANR	806464	Callee	_cmsAssert		806459	0					
ANR	806465	Identifier	_cmsAssert		806459	0					
ANR	806466	ArgumentList	Dest != NULL		806459	1					
ANR	806467	Argument	Dest != NULL		806459	0					
ANR	806468	EqualityExpression	Dest != NULL		806459	0		!=			
ANR	806469	Identifier	Dest		806459	0					
ANR	806470	Identifier	NULL		806459	1					
ANR	806471	ExpressionStatement	_cmsAssert ( Source != NULL )	403:4:10301:10327	806459	1	True				
ANR	806472	CallExpression	_cmsAssert ( Source != NULL )		806459	0					
ANR	806473	Callee	_cmsAssert		806459	0					
ANR	806474	Identifier	_cmsAssert		806459	0					
ANR	806475	ArgumentList	Source != NULL		806459	1					
ANR	806476	Argument	Source != NULL		806459	0					
ANR	806477	EqualityExpression	Source != NULL		806459	0		!=			
ANR	806478	Identifier	Source		806459	0					
ANR	806479	Identifier	NULL		806459	1					
ANR	806480	ExpressionStatement	Dest -> seconds = _cmsAdjustEndianess16 ( ( cmsUInt16Number ) Source -> tm_sec )	405:4:10334:10405	806459	2	True				
ANR	806481	AssignmentExpression	Dest -> seconds = _cmsAdjustEndianess16 ( ( cmsUInt16Number ) Source -> tm_sec )		806459	0		=			
ANR	806482	PtrMemberAccess	Dest -> seconds		806459	0					
ANR	806483	Identifier	Dest		806459	0					
ANR	806484	Identifier	seconds		806459	1					
ANR	806485	CallExpression	_cmsAdjustEndianess16 ( ( cmsUInt16Number ) Source -> tm_sec )		806459	1					
ANR	806486	Callee	_cmsAdjustEndianess16		806459	0					
ANR	806487	Identifier	_cmsAdjustEndianess16		806459	0					
ANR	806488	ArgumentList	( cmsUInt16Number ) Source -> tm_sec		806459	1					
ANR	806489	Argument	( cmsUInt16Number ) Source -> tm_sec		806459	0					
ANR	806490	CastExpression	( cmsUInt16Number ) Source -> tm_sec		806459	0					
ANR	806491	CastTarget	cmsUInt16Number		806459	0					
ANR	806492	PtrMemberAccess	Source -> tm_sec		806459	1					
ANR	806493	Identifier	Source		806459	0					
ANR	806494	Identifier	tm_sec		806459	1					
ANR	806495	ExpressionStatement	Dest -> minutes = _cmsAdjustEndianess16 ( ( cmsUInt16Number ) Source -> tm_min )	406:4:10411:10482	806459	3	True				
ANR	806496	AssignmentExpression	Dest -> minutes = _cmsAdjustEndianess16 ( ( cmsUInt16Number ) Source -> tm_min )		806459	0		=			
ANR	806497	PtrMemberAccess	Dest -> minutes		806459	0					
ANR	806498	Identifier	Dest		806459	0					
ANR	806499	Identifier	minutes		806459	1					
ANR	806500	CallExpression	_cmsAdjustEndianess16 ( ( cmsUInt16Number ) Source -> tm_min )		806459	1					
ANR	806501	Callee	_cmsAdjustEndianess16		806459	0					
ANR	806502	Identifier	_cmsAdjustEndianess16		806459	0					
ANR	806503	ArgumentList	( cmsUInt16Number ) Source -> tm_min		806459	1					
ANR	806504	Argument	( cmsUInt16Number ) Source -> tm_min		806459	0					
ANR	806505	CastExpression	( cmsUInt16Number ) Source -> tm_min		806459	0					
ANR	806506	CastTarget	cmsUInt16Number		806459	0					
ANR	806507	PtrMemberAccess	Source -> tm_min		806459	1					
ANR	806508	Identifier	Source		806459	0					
ANR	806509	Identifier	tm_min		806459	1					
ANR	806510	ExpressionStatement	Dest -> hours = _cmsAdjustEndianess16 ( ( cmsUInt16Number ) Source -> tm_hour )	407:4:10488:10560	806459	4	True				
ANR	806511	AssignmentExpression	Dest -> hours = _cmsAdjustEndianess16 ( ( cmsUInt16Number ) Source -> tm_hour )		806459	0		=			
ANR	806512	PtrMemberAccess	Dest -> hours		806459	0					
ANR	806513	Identifier	Dest		806459	0					
ANR	806514	Identifier	hours		806459	1					
ANR	806515	CallExpression	_cmsAdjustEndianess16 ( ( cmsUInt16Number ) Source -> tm_hour )		806459	1					
ANR	806516	Callee	_cmsAdjustEndianess16		806459	0					
ANR	806517	Identifier	_cmsAdjustEndianess16		806459	0					
ANR	806518	ArgumentList	( cmsUInt16Number ) Source -> tm_hour		806459	1					
ANR	806519	Argument	( cmsUInt16Number ) Source -> tm_hour		806459	0					
ANR	806520	CastExpression	( cmsUInt16Number ) Source -> tm_hour		806459	0					
ANR	806521	CastTarget	cmsUInt16Number		806459	0					
ANR	806522	PtrMemberAccess	Source -> tm_hour		806459	1					
ANR	806523	Identifier	Source		806459	0					
ANR	806524	Identifier	tm_hour		806459	1					
ANR	806525	ExpressionStatement	Dest -> day = _cmsAdjustEndianess16 ( ( cmsUInt16Number ) Source -> tm_mday )	408:4:10566:10638	806459	5	True				
ANR	806526	AssignmentExpression	Dest -> day = _cmsAdjustEndianess16 ( ( cmsUInt16Number ) Source -> tm_mday )		806459	0		=			
ANR	806527	PtrMemberAccess	Dest -> day		806459	0					
ANR	806528	Identifier	Dest		806459	0					
ANR	806529	Identifier	day		806459	1					
ANR	806530	CallExpression	_cmsAdjustEndianess16 ( ( cmsUInt16Number ) Source -> tm_mday )		806459	1					
ANR	806531	Callee	_cmsAdjustEndianess16		806459	0					
ANR	806532	Identifier	_cmsAdjustEndianess16		806459	0					
ANR	806533	ArgumentList	( cmsUInt16Number ) Source -> tm_mday		806459	1					
ANR	806534	Argument	( cmsUInt16Number ) Source -> tm_mday		806459	0					
ANR	806535	CastExpression	( cmsUInt16Number ) Source -> tm_mday		806459	0					
ANR	806536	CastTarget	cmsUInt16Number		806459	0					
ANR	806537	PtrMemberAccess	Source -> tm_mday		806459	1					
ANR	806538	Identifier	Source		806459	0					
ANR	806539	Identifier	tm_mday		806459	1					
ANR	806540	ExpressionStatement	Dest -> month = _cmsAdjustEndianess16 ( ( cmsUInt16Number ) ( Source -> tm_mon + 1 ) )	409:4:10644:10721	806459	6	True				
ANR	806541	AssignmentExpression	Dest -> month = _cmsAdjustEndianess16 ( ( cmsUInt16Number ) ( Source -> tm_mon + 1 ) )		806459	0		=			
ANR	806542	PtrMemberAccess	Dest -> month		806459	0					
ANR	806543	Identifier	Dest		806459	0					
ANR	806544	Identifier	month		806459	1					
ANR	806545	CallExpression	_cmsAdjustEndianess16 ( ( cmsUInt16Number ) ( Source -> tm_mon + 1 ) )		806459	1					
ANR	806546	Callee	_cmsAdjustEndianess16		806459	0					
ANR	806547	Identifier	_cmsAdjustEndianess16		806459	0					
ANR	806548	ArgumentList	( cmsUInt16Number ) ( Source -> tm_mon + 1 )		806459	1					
ANR	806549	Argument	( cmsUInt16Number ) ( Source -> tm_mon + 1 )		806459	0					
ANR	806550	CastExpression	( cmsUInt16Number ) ( Source -> tm_mon + 1 )		806459	0					
ANR	806551	CastTarget	cmsUInt16Number		806459	0					
ANR	806552	AdditiveExpression	Source -> tm_mon + 1		806459	1		+			
ANR	806553	PtrMemberAccess	Source -> tm_mon		806459	0					
ANR	806554	Identifier	Source		806459	0					
ANR	806555	Identifier	tm_mon		806459	1					
ANR	806556	PrimaryExpression	1		806459	1					
ANR	806557	ExpressionStatement	Dest -> year = _cmsAdjustEndianess16 ( ( cmsUInt16Number ) ( Source -> tm_year + 1900 ) )	410:4:10727:10808	806459	7	True				
ANR	806558	AssignmentExpression	Dest -> year = _cmsAdjustEndianess16 ( ( cmsUInt16Number ) ( Source -> tm_year + 1900 ) )		806459	0		=			
ANR	806559	PtrMemberAccess	Dest -> year		806459	0					
ANR	806560	Identifier	Dest		806459	0					
ANR	806561	Identifier	year		806459	1					
ANR	806562	CallExpression	_cmsAdjustEndianess16 ( ( cmsUInt16Number ) ( Source -> tm_year + 1900 ) )		806459	1					
ANR	806563	Callee	_cmsAdjustEndianess16		806459	0					
ANR	806564	Identifier	_cmsAdjustEndianess16		806459	0					
ANR	806565	ArgumentList	( cmsUInt16Number ) ( Source -> tm_year + 1900 )		806459	1					
ANR	806566	Argument	( cmsUInt16Number ) ( Source -> tm_year + 1900 )		806459	0					
ANR	806567	CastExpression	( cmsUInt16Number ) ( Source -> tm_year + 1900 )		806459	0					
ANR	806568	CastTarget	cmsUInt16Number		806459	0					
ANR	806569	AdditiveExpression	Source -> tm_year + 1900		806459	1		+			
ANR	806570	PtrMemberAccess	Source -> tm_year		806459	0					
ANR	806571	Identifier	Source		806459	0					
ANR	806572	Identifier	tm_year		806459	1					
ANR	806573	PrimaryExpression	1900		806459	1					
ANR	806574	ReturnType	void CMSEXPORT		806459	1					
ANR	806575	Identifier	_cmsEncodeDateTimeNumber		806459	2					
ANR	806576	ParameterList	"cmsDateTimeNumber * Dest , const struct tm * Source"		806459	3					
ANR	806577	Parameter	cmsDateTimeNumber * Dest	400:40:10215:10237	806459	0	True				
ANR	806578	ParameterType	cmsDateTimeNumber *		806459	0					
ANR	806579	Identifier	Dest		806459	1					
ANR	806580	Parameter	const struct tm * Source	400:65:10240:10262	806459	1	True				
ANR	806581	ParameterType	const struct tm *		806459	0					
ANR	806582	Identifier	Source		806459	1					
ANR	806583	CFGEntryNode	ENTRY		806459		True				
ANR	806584	CFGExitNode	EXIT		806459		True				
ANR	806585	Symbol	Source -> tm_min		806459						
ANR	806586	Symbol	Dest -> day		806459						
ANR	806587	Symbol	Dest		806459						
ANR	806588	Symbol	NULL		806459						
ANR	806589	Symbol	Source -> tm_sec		806459						
ANR	806590	Symbol	Source -> tm_year		806459						
ANR	806591	Symbol	Dest -> seconds		806459						
ANR	806592	Symbol	Source -> tm_mon		806459						
ANR	806593	Symbol	Dest -> hours		806459						
ANR	806594	Symbol	_cmsAdjustEndianess16		806459						
ANR	806595	Symbol	Source		806459						
ANR	806596	Symbol	Dest -> month		806459						
ANR	806597	Symbol	Source -> tm_hour		806459						
ANR	806598	Symbol	* Dest		806459						
ANR	806599	Symbol	Dest -> minutes		806459						
ANR	806600	Symbol	Source -> tm_mday		806459						
ANR	806601	Symbol	Dest -> year		806459						
ANR	806602	Symbol	* Source		806459						
ANR	806603	Function	_cmsReadTypeBase	414:0:10847:11133							
ANR	806604	FunctionDef	_cmsReadTypeBase (cmsIOHANDLER * io)		806603	0					
ANR	806605	CompoundStatement		415:0:10912:11133	806603	0					
ANR	806606	IdentifierDeclStatement	_cmsTagBase Base ;	416:4:10918:10934	806603	0	True				
ANR	806607	IdentifierDecl	Base		806603	0					
ANR	806608	IdentifierDeclType	_cmsTagBase		806603	0					
ANR	806609	Identifier	Base		806603	1					
ANR	806610	ExpressionStatement	_cmsAssert ( io != NULL )	418:4:10941:10963	806603	1	True				
ANR	806611	CallExpression	_cmsAssert ( io != NULL )		806603	0					
ANR	806612	Callee	_cmsAssert		806603	0					
ANR	806613	Identifier	_cmsAssert		806603	0					
ANR	806614	ArgumentList	io != NULL		806603	1					
ANR	806615	Argument	io != NULL		806603	0					
ANR	806616	EqualityExpression	io != NULL		806603	0		!=			
ANR	806617	Identifier	io		806603	0					
ANR	806618	Identifier	NULL		806603	1					
ANR	806619	IfStatement	"if ( io -> Read ( io , & Base , sizeof ( _cmsTagBase ) , 1 ) != 1 )"		806603	2					
ANR	806620	Condition	"io -> Read ( io , & Base , sizeof ( _cmsTagBase ) , 1 ) != 1"	420:8:10974:11023	806603	0	True				
ANR	806621	EqualityExpression	"io -> Read ( io , & Base , sizeof ( _cmsTagBase ) , 1 ) != 1"		806603	0		!=			
ANR	806622	CallExpression	"io -> Read ( io , & Base , sizeof ( _cmsTagBase ) , 1 )"		806603	0					
ANR	806623	Callee	io -> Read		806603	0					
ANR	806624	PtrMemberAccess	io -> Read		806603	0					
ANR	806625	Identifier	io		806603	0					
ANR	806626	Identifier	Read		806603	1					
ANR	806627	ArgumentList	io		806603	1					
ANR	806628	Argument	io		806603	0					
ANR	806629	Identifier	io		806603	0					
ANR	806630	Argument	& Base		806603	1					
ANR	806631	UnaryOperationExpression	& Base		806603	0					
ANR	806632	UnaryOperator	&		806603	0					
ANR	806633	Identifier	Base		806603	1					
ANR	806634	Argument	sizeof ( _cmsTagBase )		806603	2					
ANR	806635	SizeofExpression	sizeof ( _cmsTagBase )		806603	0					
ANR	806636	Sizeof	sizeof		806603	0					
ANR	806637	SizeofOperand	_cmsTagBase		806603	1					
ANR	806638	Argument	1		806603	3					
ANR	806639	PrimaryExpression	1		806603	0					
ANR	806640	PrimaryExpression	1		806603	1					
ANR	806641	ReturnStatement	return ( cmsTagTypeSignature ) 0 ;	421:8:11034:11064	806603	1	True				
ANR	806642	CastExpression	( cmsTagTypeSignature ) 0		806603	0					
ANR	806643	CastTarget	cmsTagTypeSignature		806603	0					
ANR	806644	PrimaryExpression	0		806603	1					
ANR	806645	ReturnStatement	return ( cmsTagTypeSignature ) _cmsAdjustEndianess32 ( Base . sig ) ;	423:4:11071:11131	806603	3	True				
ANR	806646	CastExpression	( cmsTagTypeSignature ) _cmsAdjustEndianess32 ( Base . sig )		806603	0					
ANR	806647	CastTarget	cmsTagTypeSignature		806603	0					
ANR	806648	CallExpression	_cmsAdjustEndianess32 ( Base . sig )		806603	1					
ANR	806649	Callee	_cmsAdjustEndianess32		806603	0					
ANR	806650	Identifier	_cmsAdjustEndianess32		806603	0					
ANR	806651	ArgumentList	Base . sig		806603	1					
ANR	806652	Argument	Base . sig		806603	0					
ANR	806653	MemberAccess	Base . sig		806603	0					
ANR	806654	Identifier	Base		806603	0					
ANR	806655	Identifier	sig		806603	1					
ANR	806656	ReturnType	cmsTagTypeSignature CMSEXPORT		806603	1					
ANR	806657	Identifier	_cmsReadTypeBase		806603	2					
ANR	806658	ParameterList	cmsIOHANDLER * io		806603	3					
ANR	806659	Parameter	cmsIOHANDLER * io	414:47:10894:10909	806603	0	True				
ANR	806660	ParameterType	cmsIOHANDLER *		806603	0					
ANR	806661	Identifier	io		806603	1					
ANR	806662	CFGEntryNode	ENTRY		806603		True				
ANR	806663	CFGExitNode	EXIT		806603		True				
ANR	806664	Symbol	& Base		806603						
ANR	806665	Symbol	NULL		806603						
ANR	806666	Symbol	io -> Read		806603						
ANR	806667	Symbol	io		806603						
ANR	806668	Symbol	_cmsAdjustEndianess32		806603						
ANR	806669	Symbol	Base . sig		806603						
ANR	806670	Symbol	Base		806603						
ANR	806671	Symbol	* io		806603						
ANR	806672	Function	_cmsWriteTypeBase	427:0:11157:11467							
ANR	806673	FunctionDef	"_cmsWriteTypeBase (cmsIOHANDLER * io , cmsTagTypeSignature sig)"		806672	0					
ANR	806674	CompoundStatement		428:0:11237:11467	806672	0					
ANR	806675	IdentifierDeclStatement	_cmsTagBase Base ;	429:4:11243:11260	806672	0	True				
ANR	806676	IdentifierDecl	Base		806672	0					
ANR	806677	IdentifierDeclType	_cmsTagBase		806672	0					
ANR	806678	Identifier	Base		806672	1					
ANR	806679	ExpressionStatement	_cmsAssert ( io != NULL )	431:4:11267:11289	806672	1	True				
ANR	806680	CallExpression	_cmsAssert ( io != NULL )		806672	0					
ANR	806681	Callee	_cmsAssert		806672	0					
ANR	806682	Identifier	_cmsAssert		806672	0					
ANR	806683	ArgumentList	io != NULL		806672	1					
ANR	806684	Argument	io != NULL		806672	0					
ANR	806685	EqualityExpression	io != NULL		806672	0		!=			
ANR	806686	Identifier	io		806672	0					
ANR	806687	Identifier	NULL		806672	1					
ANR	806688	ExpressionStatement	Base . sig = ( cmsTagTypeSignature ) _cmsAdjustEndianess32 ( sig )	433:4:11296:11355	806672	2	True				
ANR	806689	AssignmentExpression	Base . sig = ( cmsTagTypeSignature ) _cmsAdjustEndianess32 ( sig )		806672	0		=			
ANR	806690	MemberAccess	Base . sig		806672	0					
ANR	806691	Identifier	Base		806672	0					
ANR	806692	Identifier	sig		806672	1					
ANR	806693	CastExpression	( cmsTagTypeSignature ) _cmsAdjustEndianess32 ( sig )		806672	1					
ANR	806694	CastTarget	cmsTagTypeSignature		806672	0					
ANR	806695	CallExpression	_cmsAdjustEndianess32 ( sig )		806672	1					
ANR	806696	Callee	_cmsAdjustEndianess32		806672	0					
ANR	806697	Identifier	_cmsAdjustEndianess32		806672	0					
ANR	806698	ArgumentList	sig		806672	1					
ANR	806699	Argument	sig		806672	0					
ANR	806700	Identifier	sig		806672	0					
ANR	806701	ExpressionStatement	"memset ( & Base . reserved , 0 , sizeof ( Base . reserved ) )"	434:4:11361:11409	806672	3	True				
ANR	806702	CallExpression	"memset ( & Base . reserved , 0 , sizeof ( Base . reserved ) )"		806672	0					
ANR	806703	Callee	memset		806672	0					
ANR	806704	Identifier	memset		806672	0					
ANR	806705	ArgumentList	& Base . reserved		806672	1					
ANR	806706	Argument	& Base . reserved		806672	0					
ANR	806707	UnaryOperationExpression	& Base . reserved		806672	0					
ANR	806708	UnaryOperator	&		806672	0					
ANR	806709	MemberAccess	Base . reserved		806672	1					
ANR	806710	Identifier	Base		806672	0					
ANR	806711	Identifier	reserved		806672	1					
ANR	806712	Argument	0		806672	1					
ANR	806713	PrimaryExpression	0		806672	0					
ANR	806714	Argument	sizeof ( Base . reserved )		806672	2					
ANR	806715	SizeofExpression	sizeof ( Base . reserved )		806672	0					
ANR	806716	Sizeof	sizeof		806672	0					
ANR	806717	MemberAccess	Base . reserved		806672	1					
ANR	806718	Identifier	Base		806672	0					
ANR	806719	Identifier	reserved		806672	1					
ANR	806720	ReturnStatement	"return io -> Write ( io , sizeof ( _cmsTagBase ) , & Base ) ;"	435:4:11415:11465	806672	4	True				
ANR	806721	CallExpression	"io -> Write ( io , sizeof ( _cmsTagBase ) , & Base )"		806672	0					
ANR	806722	Callee	io -> Write		806672	0					
ANR	806723	PtrMemberAccess	io -> Write		806672	0					
ANR	806724	Identifier	io		806672	0					
ANR	806725	Identifier	Write		806672	1					
ANR	806726	ArgumentList	io		806672	1					
ANR	806727	Argument	io		806672	0					
ANR	806728	Identifier	io		806672	0					
ANR	806729	Argument	sizeof ( _cmsTagBase )		806672	1					
ANR	806730	SizeofExpression	sizeof ( _cmsTagBase )		806672	0					
ANR	806731	Sizeof	sizeof		806672	0					
ANR	806732	SizeofOperand	_cmsTagBase		806672	1					
ANR	806733	Argument	& Base		806672	2					
ANR	806734	UnaryOperationExpression	& Base		806672	0					
ANR	806735	UnaryOperator	&		806672	0					
ANR	806736	Identifier	Base		806672	1					
ANR	806737	ReturnType	cmsBool CMSEXPORT		806672	1					
ANR	806738	Identifier	_cmsWriteTypeBase		806672	2					
ANR	806739	ParameterList	"cmsIOHANDLER * io , cmsTagTypeSignature sig"		806672	3					
ANR	806740	Parameter	cmsIOHANDLER * io	427:37:11194:11209	806672	0	True				
ANR	806741	ParameterType	cmsIOHANDLER *		806672	0					
ANR	806742	Identifier	io		806672	1					
ANR	806743	Parameter	cmsTagTypeSignature sig	427:55:11212:11234	806672	1	True				
ANR	806744	ParameterType	cmsTagTypeSignature		806672	0					
ANR	806745	Identifier	sig		806672	1					
ANR	806746	CFGEntryNode	ENTRY		806672		True				
ANR	806747	CFGExitNode	EXIT		806672		True				
ANR	806748	Symbol	sig		806672						
ANR	806749	Symbol	& Base		806672						
ANR	806750	Symbol	NULL		806672						
ANR	806751	Symbol	io		806672						
ANR	806752	Symbol	Base . reserved		806672						
ANR	806753	Symbol	_cmsAdjustEndianess32		806672						
ANR	806754	Symbol	& Base . reserved		806672						
ANR	806755	Symbol	Base . sig		806672						
ANR	806756	Symbol	Base		806672						
ANR	806757	Symbol	io -> Write		806672						
ANR	806758	Symbol	* io		806672						
ANR	806759	Function	_cmsReadAlignment	438:0:11470:11942							
ANR	806760	FunctionDef	_cmsReadAlignment (cmsIOHANDLER * io)		806759	0					
ANR	806761	CompoundStatement		439:0:11524:11942	806759	0					
ANR	806762	IdentifierDeclStatement	cmsUInt8Number Buffer [ 4 ] ;	440:4:11530:11555	806759	0	True				
ANR	806763	IdentifierDecl	Buffer [ 4 ]		806759	0					
ANR	806764	IdentifierDeclType	cmsUInt8Number [ 4 ]		806759	0					
ANR	806765	Identifier	Buffer		806759	1					
ANR	806766	PrimaryExpression	4		806759	2					
ANR	806767	IdentifierDeclStatement	"cmsUInt32Number NextAligned , At ;"	441:4:11561:11592	806759	1	True				
ANR	806768	IdentifierDecl	NextAligned		806759	0					
ANR	806769	IdentifierDeclType	cmsUInt32Number		806759	0					
ANR	806770	Identifier	NextAligned		806759	1					
ANR	806771	IdentifierDecl	At		806759	1					
ANR	806772	IdentifierDeclType	cmsUInt32Number		806759	0					
ANR	806773	Identifier	At		806759	1					
ANR	806774	IdentifierDeclStatement	cmsUInt32Number BytesToNextAlignedPos ;	442:4:11598:11635	806759	2	True				
ANR	806775	IdentifierDecl	BytesToNextAlignedPos		806759	0					
ANR	806776	IdentifierDeclType	cmsUInt32Number		806759	0					
ANR	806777	Identifier	BytesToNextAlignedPos		806759	1					
ANR	806778	ExpressionStatement	_cmsAssert ( io != NULL )	444:4:11642:11664	806759	3	True				
ANR	806779	CallExpression	_cmsAssert ( io != NULL )		806759	0					
ANR	806780	Callee	_cmsAssert		806759	0					
ANR	806781	Identifier	_cmsAssert		806759	0					
ANR	806782	ArgumentList	io != NULL		806759	1					
ANR	806783	Argument	io != NULL		806759	0					
ANR	806784	EqualityExpression	io != NULL		806759	0		!=			
ANR	806785	Identifier	io		806759	0					
ANR	806786	Identifier	NULL		806759	1					
ANR	806787	ExpressionStatement	At = io -> Tell ( io )	446:4:11671:11690	806759	4	True				
ANR	806788	AssignmentExpression	At = io -> Tell ( io )		806759	0		=			
ANR	806789	Identifier	At		806759	0					
ANR	806790	CallExpression	io -> Tell ( io )		806759	1					
ANR	806791	Callee	io -> Tell		806759	0					
ANR	806792	PtrMemberAccess	io -> Tell		806759	0					
ANR	806793	Identifier	io		806759	0					
ANR	806794	Identifier	Tell		806759	1					
ANR	806795	ArgumentList	io		806759	1					
ANR	806796	Argument	io		806759	0					
ANR	806797	Identifier	io		806759	0					
ANR	806798	ExpressionStatement	NextAligned = _cmsALIGNLONG ( At )	447:4:11696:11727	806759	5	True				
ANR	806799	AssignmentExpression	NextAligned = _cmsALIGNLONG ( At )		806759	0		=			
ANR	806800	Identifier	NextAligned		806759	0					
ANR	806801	CallExpression	_cmsALIGNLONG ( At )		806759	1					
ANR	806802	Callee	_cmsALIGNLONG		806759	0					
ANR	806803	Identifier	_cmsALIGNLONG		806759	0					
ANR	806804	ArgumentList	At		806759	1					
ANR	806805	Argument	At		806759	0					
ANR	806806	Identifier	At		806759	0					
ANR	806807	ExpressionStatement	BytesToNextAlignedPos = NextAligned - At	448:4:11733:11773	806759	6	True				
ANR	806808	AssignmentExpression	BytesToNextAlignedPos = NextAligned - At		806759	0		=			
ANR	806809	Identifier	BytesToNextAlignedPos		806759	0					
ANR	806810	AdditiveExpression	NextAligned - At		806759	1		-			
ANR	806811	Identifier	NextAligned		806759	0					
ANR	806812	Identifier	At		806759	1					
ANR	806813	IfStatement	if ( BytesToNextAlignedPos == 0 )		806759	7					
ANR	806814	Condition	BytesToNextAlignedPos == 0	449:8:11783:11808	806759	0	True				
ANR	806815	EqualityExpression	BytesToNextAlignedPos == 0		806759	0		==			
ANR	806816	Identifier	BytesToNextAlignedPos		806759	0					
ANR	806817	PrimaryExpression	0		806759	1					
ANR	806818	ReturnStatement	return TRUE ;	449:36:11811:11822	806759	1	True				
ANR	806819	Identifier	TRUE		806759	0					
ANR	806820	IfStatement	if ( BytesToNextAlignedPos > 4 )		806759	8					
ANR	806821	Condition	BytesToNextAlignedPos > 4	450:8:11832:11856	806759	0	True				
ANR	806822	RelationalExpression	BytesToNextAlignedPos > 4		806759	0		>			
ANR	806823	Identifier	BytesToNextAlignedPos		806759	0					
ANR	806824	PrimaryExpression	4		806759	1					
ANR	806825	ReturnStatement	return FALSE ;	450:36:11860:11872	806759	1	True				
ANR	806826	Identifier	FALSE		806759	0					
ANR	806827	ReturnStatement	"return ( io -> Read ( io , Buffer , BytesToNextAlignedPos , 1 ) == 1 ) ;"	452:4:11879:11940	806759	9	True				
ANR	806828	EqualityExpression	"io -> Read ( io , Buffer , BytesToNextAlignedPos , 1 ) == 1"		806759	0		==			
ANR	806829	CallExpression	"io -> Read ( io , Buffer , BytesToNextAlignedPos , 1 )"		806759	0					
ANR	806830	Callee	io -> Read		806759	0					
ANR	806831	PtrMemberAccess	io -> Read		806759	0					
ANR	806832	Identifier	io		806759	0					
ANR	806833	Identifier	Read		806759	1					
ANR	806834	ArgumentList	io		806759	1					
ANR	806835	Argument	io		806759	0					
ANR	806836	Identifier	io		806759	0					
ANR	806837	Argument	Buffer		806759	1					
ANR	806838	Identifier	Buffer		806759	0					
ANR	806839	Argument	BytesToNextAlignedPos		806759	2					
ANR	806840	Identifier	BytesToNextAlignedPos		806759	0					
ANR	806841	Argument	1		806759	3					
ANR	806842	PrimaryExpression	1		806759	0					
ANR	806843	PrimaryExpression	1		806759	1					
ANR	806844	ReturnType	cmsBool CMSEXPORT		806759	1					
ANR	806845	Identifier	_cmsReadAlignment		806759	2					
ANR	806846	ParameterList	cmsIOHANDLER * io		806759	3					
ANR	806847	Parameter	cmsIOHANDLER * io	438:36:11506:11521	806759	0	True				
ANR	806848	ParameterType	cmsIOHANDLER *		806759	0					
ANR	806849	Identifier	io		806759	1					
ANR	806850	CFGEntryNode	ENTRY		806759		True				
ANR	806851	CFGExitNode	EXIT		806759		True				
ANR	806852	Symbol	Buffer		806759						
ANR	806853	Symbol	_cmsALIGNLONG		806759						
ANR	806854	Symbol	At		806759						
ANR	806855	Symbol	NULL		806759						
ANR	806856	Symbol	io -> Read		806759						
ANR	806857	Symbol	io		806759						
ANR	806858	Symbol	BytesToNextAlignedPos		806759						
ANR	806859	Symbol	io -> Tell		806759						
ANR	806860	Symbol	TRUE		806759						
ANR	806861	Symbol	FALSE		806759						
ANR	806862	Symbol	NextAligned		806759						
ANR	806863	Symbol	* io		806759						
ANR	806864	Function	_cmsWriteAlignment	455:0:11945:12456							
ANR	806865	FunctionDef	_cmsWriteAlignment (cmsIOHANDLER * io)		806864	0					
ANR	806866	CompoundStatement		456:0:12000:12456	806864	0					
ANR	806867	IdentifierDeclStatement	cmsUInt8Number Buffer [ 4 ] ;	457:4:12006:12031	806864	0	True				
ANR	806868	IdentifierDecl	Buffer [ 4 ]		806864	0					
ANR	806869	IdentifierDeclType	cmsUInt8Number [ 4 ]		806864	0					
ANR	806870	Identifier	Buffer		806864	1					
ANR	806871	PrimaryExpression	4		806864	2					
ANR	806872	IdentifierDeclStatement	"cmsUInt32Number NextAligned , At ;"	458:4:12037:12068	806864	1	True				
ANR	806873	IdentifierDecl	NextAligned		806864	0					
ANR	806874	IdentifierDeclType	cmsUInt32Number		806864	0					
ANR	806875	Identifier	NextAligned		806864	1					
ANR	806876	IdentifierDecl	At		806864	1					
ANR	806877	IdentifierDeclType	cmsUInt32Number		806864	0					
ANR	806878	Identifier	At		806864	1					
ANR	806879	IdentifierDeclStatement	cmsUInt32Number BytesToNextAlignedPos ;	459:4:12074:12111	806864	2	True				
ANR	806880	IdentifierDecl	BytesToNextAlignedPos		806864	0					
ANR	806881	IdentifierDeclType	cmsUInt32Number		806864	0					
ANR	806882	Identifier	BytesToNextAlignedPos		806864	1					
ANR	806883	ExpressionStatement	_cmsAssert ( io != NULL )	461:4:12118:12140	806864	3	True				
ANR	806884	CallExpression	_cmsAssert ( io != NULL )		806864	0					
ANR	806885	Callee	_cmsAssert		806864	0					
ANR	806886	Identifier	_cmsAssert		806864	0					
ANR	806887	ArgumentList	io != NULL		806864	1					
ANR	806888	Argument	io != NULL		806864	0					
ANR	806889	EqualityExpression	io != NULL		806864	0		!=			
ANR	806890	Identifier	io		806864	0					
ANR	806891	Identifier	NULL		806864	1					
ANR	806892	ExpressionStatement	At = io -> Tell ( io )	463:4:12147:12166	806864	4	True				
ANR	806893	AssignmentExpression	At = io -> Tell ( io )		806864	0		=			
ANR	806894	Identifier	At		806864	0					
ANR	806895	CallExpression	io -> Tell ( io )		806864	1					
ANR	806896	Callee	io -> Tell		806864	0					
ANR	806897	PtrMemberAccess	io -> Tell		806864	0					
ANR	806898	Identifier	io		806864	0					
ANR	806899	Identifier	Tell		806864	1					
ANR	806900	ArgumentList	io		806864	1					
ANR	806901	Argument	io		806864	0					
ANR	806902	Identifier	io		806864	0					
ANR	806903	ExpressionStatement	NextAligned = _cmsALIGNLONG ( At )	464:4:12172:12203	806864	5	True				
ANR	806904	AssignmentExpression	NextAligned = _cmsALIGNLONG ( At )		806864	0		=			
ANR	806905	Identifier	NextAligned		806864	0					
ANR	806906	CallExpression	_cmsALIGNLONG ( At )		806864	1					
ANR	806907	Callee	_cmsALIGNLONG		806864	0					
ANR	806908	Identifier	_cmsALIGNLONG		806864	0					
ANR	806909	ArgumentList	At		806864	1					
ANR	806910	Argument	At		806864	0					
ANR	806911	Identifier	At		806864	0					
ANR	806912	ExpressionStatement	BytesToNextAlignedPos = NextAligned - At	465:4:12209:12249	806864	6	True				
ANR	806913	AssignmentExpression	BytesToNextAlignedPos = NextAligned - At		806864	0		=			
ANR	806914	Identifier	BytesToNextAlignedPos		806864	0					
ANR	806915	AdditiveExpression	NextAligned - At		806864	1		-			
ANR	806916	Identifier	NextAligned		806864	0					
ANR	806917	Identifier	At		806864	1					
ANR	806918	IfStatement	if ( BytesToNextAlignedPos == 0 )		806864	7					
ANR	806919	Condition	BytesToNextAlignedPos == 0	466:8:12259:12284	806864	0	True				
ANR	806920	EqualityExpression	BytesToNextAlignedPos == 0		806864	0		==			
ANR	806921	Identifier	BytesToNextAlignedPos		806864	0					
ANR	806922	PrimaryExpression	0		806864	1					
ANR	806923	ReturnStatement	return TRUE ;	466:36:12287:12298	806864	1	True				
ANR	806924	Identifier	TRUE		806864	0					
ANR	806925	IfStatement	if ( BytesToNextAlignedPos > 4 )		806864	8					
ANR	806926	Condition	BytesToNextAlignedPos > 4	467:8:12308:12332	806864	0	True				
ANR	806927	RelationalExpression	BytesToNextAlignedPos > 4		806864	0		>			
ANR	806928	Identifier	BytesToNextAlignedPos		806864	0					
ANR	806929	PrimaryExpression	4		806864	1					
ANR	806930	ReturnStatement	return FALSE ;	467:36:12336:12348	806864	1	True				
ANR	806931	Identifier	FALSE		806864	0					
ANR	806932	ExpressionStatement	"memset ( Buffer , 0 , BytesToNextAlignedPos )"	469:4:12355:12395	806864	9	True				
ANR	806933	CallExpression	"memset ( Buffer , 0 , BytesToNextAlignedPos )"		806864	0					
ANR	806934	Callee	memset		806864	0					
ANR	806935	Identifier	memset		806864	0					
ANR	806936	ArgumentList	Buffer		806864	1					
ANR	806937	Argument	Buffer		806864	0					
ANR	806938	Identifier	Buffer		806864	0					
ANR	806939	Argument	0		806864	1					
ANR	806940	PrimaryExpression	0		806864	0					
ANR	806941	Argument	BytesToNextAlignedPos		806864	2					
ANR	806942	Identifier	BytesToNextAlignedPos		806864	0					
ANR	806943	ReturnStatement	"return io -> Write ( io , BytesToNextAlignedPos , Buffer ) ;"	470:4:12401:12454	806864	10	True				
ANR	806944	CallExpression	"io -> Write ( io , BytesToNextAlignedPos , Buffer )"		806864	0					
ANR	806945	Callee	io -> Write		806864	0					
ANR	806946	PtrMemberAccess	io -> Write		806864	0					
ANR	806947	Identifier	io		806864	0					
ANR	806948	Identifier	Write		806864	1					
ANR	806949	ArgumentList	io		806864	1					
ANR	806950	Argument	io		806864	0					
ANR	806951	Identifier	io		806864	0					
ANR	806952	Argument	BytesToNextAlignedPos		806864	1					
ANR	806953	Identifier	BytesToNextAlignedPos		806864	0					
ANR	806954	Argument	Buffer		806864	2					
ANR	806955	Identifier	Buffer		806864	0					
ANR	806956	ReturnType	cmsBool CMSEXPORT		806864	1					
ANR	806957	Identifier	_cmsWriteAlignment		806864	2					
ANR	806958	ParameterList	cmsIOHANDLER * io		806864	3					
ANR	806959	Parameter	cmsIOHANDLER * io	455:37:11982:11997	806864	0	True				
ANR	806960	ParameterType	cmsIOHANDLER *		806864	0					
ANR	806961	Identifier	io		806864	1					
ANR	806962	CFGEntryNode	ENTRY		806864		True				
ANR	806963	CFGExitNode	EXIT		806864		True				
ANR	806964	Symbol	Buffer		806864						
ANR	806965	Symbol	_cmsALIGNLONG		806864						
ANR	806966	Symbol	At		806864						
ANR	806967	Symbol	NULL		806864						
ANR	806968	Symbol	io		806864						
ANR	806969	Symbol	BytesToNextAlignedPos		806864						
ANR	806970	Symbol	io -> Tell		806864						
ANR	806971	Symbol	TRUE		806864						
ANR	806972	Symbol	FALSE		806864						
ANR	806973	Symbol	NextAligned		806864						
ANR	806974	Symbol	io -> Write		806864						
ANR	806975	Symbol	* io		806864						
ANR	806976	Function	_cmsIOPrintf	475:0:12501:12982							
ANR	806977	FunctionDef	"_cmsIOPrintf (cmsIOHANDLER * io , const char * frm)"		806976	0					
ANR	806978	CompoundStatement		476:0:12572:12982	806976	0					
ANR	806979	IdentifierDeclStatement	va_list args ;	477:4:12578:12590	806976	0	True				
ANR	806980	IdentifierDecl	args		806976	0					
ANR	806981	IdentifierDeclType	va_list		806976	0					
ANR	806982	Identifier	args		806976	1					
ANR	806983	IdentifierDeclStatement	int len ;	478:4:12596:12603	806976	1	True				
ANR	806984	IdentifierDecl	len		806976	0					
ANR	806985	IdentifierDeclType	int		806976	0					
ANR	806986	Identifier	len		806976	1					
ANR	806987	IdentifierDeclStatement	cmsUInt8Number Buffer [ 2048 ] ;	479:4:12609:12636	806976	2	True				
ANR	806988	IdentifierDecl	Buffer [ 2048 ]		806976	0					
ANR	806989	IdentifierDeclType	cmsUInt8Number [ 2048 ]		806976	0					
ANR	806990	Identifier	Buffer		806976	1					
ANR	806991	PrimaryExpression	2048		806976	2					
ANR	806992	IdentifierDeclStatement	cmsBool rc ;	480:4:12642:12652	806976	3	True				
ANR	806993	IdentifierDecl	rc		806976	0					
ANR	806994	IdentifierDeclType	cmsBool		806976	0					
ANR	806995	Identifier	rc		806976	1					
ANR	806996	ExpressionStatement	_cmsAssert ( io != NULL )	482:4:12659:12681	806976	4	True				
ANR	806997	CallExpression	_cmsAssert ( io != NULL )		806976	0					
ANR	806998	Callee	_cmsAssert		806976	0					
ANR	806999	Identifier	_cmsAssert		806976	0					
ANR	807000	ArgumentList	io != NULL		806976	1					
ANR	807001	Argument	io != NULL		806976	0					
ANR	807002	EqualityExpression	io != NULL		806976	0		!=			
ANR	807003	Identifier	io		806976	0					
ANR	807004	Identifier	NULL		806976	1					
ANR	807005	ExpressionStatement	_cmsAssert ( frm != NULL )	483:4:12687:12710	806976	5	True				
ANR	807006	CallExpression	_cmsAssert ( frm != NULL )		806976	0					
ANR	807007	Callee	_cmsAssert		806976	0					
ANR	807008	Identifier	_cmsAssert		806976	0					
ANR	807009	ArgumentList	frm != NULL		806976	1					
ANR	807010	Argument	frm != NULL		806976	0					
ANR	807011	EqualityExpression	frm != NULL		806976	0		!=			
ANR	807012	Identifier	frm		806976	0					
ANR	807013	Identifier	NULL		806976	1					
ANR	807014	ExpressionStatement	"va_start ( args , frm )"	485:4:12717:12736	806976	6	True				
ANR	807015	CallExpression	"va_start ( args , frm )"		806976	0					
ANR	807016	Callee	va_start		806976	0					
ANR	807017	Identifier	va_start		806976	0					
ANR	807018	ArgumentList	args		806976	1					
ANR	807019	Argument	args		806976	0					
ANR	807020	Identifier	args		806976	0					
ANR	807021	Argument	frm		806976	1					
ANR	807022	Identifier	frm		806976	0					
ANR	807023	ExpressionStatement	"len = vsnprintf ( ( char * ) Buffer , 2047 , frm , args )"	487:4:12743:12791	806976	7	True				
ANR	807024	AssignmentExpression	"len = vsnprintf ( ( char * ) Buffer , 2047 , frm , args )"		806976	0		=			
ANR	807025	Identifier	len		806976	0					
ANR	807026	CallExpression	"vsnprintf ( ( char * ) Buffer , 2047 , frm , args )"		806976	1					
ANR	807027	Callee	vsnprintf		806976	0					
ANR	807028	Identifier	vsnprintf		806976	0					
ANR	807029	ArgumentList	( char * ) Buffer		806976	1					
ANR	807030	Argument	( char * ) Buffer		806976	0					
ANR	807031	CastExpression	( char * ) Buffer		806976	0					
ANR	807032	CastTarget	char *		806976	0					
ANR	807033	Identifier	Buffer		806976	1					
ANR	807034	Argument	2047		806976	1					
ANR	807035	PrimaryExpression	2047		806976	0					
ANR	807036	Argument	frm		806976	2					
ANR	807037	Identifier	frm		806976	0					
ANR	807038	Argument	args		806976	3					
ANR	807039	Identifier	args		806976	0					
ANR	807040	IfStatement	if ( len < 0 )		806976	8					
ANR	807041	Condition	len < 0	488:8:12801:12807	806976	0	True				
ANR	807042	RelationalExpression	len < 0		806976	0		<			
ANR	807043	Identifier	len		806976	0					
ANR	807044	PrimaryExpression	0		806976	1					
ANR	807045	CompoundStatement		13:17:237:237	806976	1					
ANR	807046	ExpressionStatement	va_end ( args )	489:8:12820:12832	806976	0	True				
ANR	807047	CallExpression	va_end ( args )		806976	0					
ANR	807048	Callee	va_end		806976	0					
ANR	807049	Identifier	va_end		806976	0					
ANR	807050	ArgumentList	args		806976	1					
ANR	807051	Argument	args		806976	0					
ANR	807052	Identifier	args		806976	0					
ANR	807053	ReturnStatement	return FALSE ;	490:8:12842:12854	806976	1	True				
ANR	807054	Identifier	FALSE		806976	0					
ANR	807055	ExpressionStatement	"rc = io -> Write ( io , len , Buffer )"	493:4:12913:12945	806976	9	True				
ANR	807056	AssignmentExpression	"rc = io -> Write ( io , len , Buffer )"		806976	0		=			
ANR	807057	Identifier	rc		806976	0					
ANR	807058	CallExpression	"io -> Write ( io , len , Buffer )"		806976	1					
ANR	807059	Callee	io -> Write		806976	0					
ANR	807060	PtrMemberAccess	io -> Write		806976	0					
ANR	807061	Identifier	io		806976	0					
ANR	807062	Identifier	Write		806976	1					
ANR	807063	ArgumentList	io		806976	1					
ANR	807064	Argument	io		806976	0					
ANR	807065	Identifier	io		806976	0					
ANR	807066	Argument	len		806976	1					
ANR	807067	Identifier	len		806976	0					
ANR	807068	Argument	Buffer		806976	2					
ANR	807069	Identifier	Buffer		806976	0					
ANR	807070	ExpressionStatement	va_end ( args )	495:4:12952:12964	806976	10	True				
ANR	807071	CallExpression	va_end ( args )		806976	0					
ANR	807072	Callee	va_end		806976	0					
ANR	807073	Identifier	va_end		806976	0					
ANR	807074	ArgumentList	args		806976	1					
ANR	807075	Argument	args		806976	0					
ANR	807076	Identifier	args		806976	0					
ANR	807077	ReturnStatement	return rc ;	497:4:12971:12980	806976	11	True				
ANR	807078	Identifier	rc		806976	0					
ANR	807079	ReturnType	cmsBool CMSEXPORT		806976	1					
ANR	807080	Identifier	_cmsIOPrintf		806976	2					
ANR	807081	ParameterList	"cmsIOHANDLER * io , const char * frm"		806976	3					
ANR	807082	Parameter	cmsIOHANDLER * io	475:31:12532:12547	806976	0	True				
ANR	807083	ParameterType	cmsIOHANDLER *		806976	0					
ANR	807084	Identifier	io		806976	1					
ANR	807085	Parameter	const char * frm	475:49:12550:12564	806976	1	True				
ANR	807086	ParameterType	const char *		806976	0					
ANR	807087	Identifier	frm		806976	1					
ANR	807088	CFGEntryNode	ENTRY		806976		True				
ANR	807089	CFGExitNode	EXIT		806976		True				
ANR	807090	Symbol	frm		806976						
ANR	807091	Symbol	args		806976						
ANR	807092	Symbol	Buffer		806976						
ANR	807093	Symbol	rc		806976						
ANR	807094	Symbol	NULL		806976						
ANR	807095	Symbol	len		806976						
ANR	807096	Symbol	io		806976						
ANR	807097	Symbol	FALSE		806976						
ANR	807098	Symbol	vsnprintf		806976						
ANR	807099	Symbol	io -> Write		806976						
ANR	807100	Symbol	* io		806976						
ANR	807101	Function	_cmsPluginMalloc	504:0:13174:13697							
ANR	807102	FunctionDef	"_cmsPluginMalloc (cmsContext ContextID , cmsUInt32Number size)"		807101	0					
ANR	807103	CompoundStatement		505:0:13241:13697	807101	0					
ANR	807104	IdentifierDeclStatement	struct _cmsContext_struct * ctx = _cmsGetContext ( ContextID ) ;	506:4:13247:13305	807101	0	True				
ANR	807105	IdentifierDecl	* ctx = _cmsGetContext ( ContextID )		807101	0					
ANR	807106	IdentifierDeclType	struct _cmsContext_struct *		807101	0					
ANR	807107	Identifier	ctx		807101	1					
ANR	807108	AssignmentExpression	* ctx = _cmsGetContext ( ContextID )		807101	2		=			
ANR	807109	Identifier	ctx		807101	0					
ANR	807110	CallExpression	_cmsGetContext ( ContextID )		807101	1					
ANR	807111	Callee	_cmsGetContext		807101	0					
ANR	807112	Identifier	_cmsGetContext		807101	0					
ANR	807113	ArgumentList	ContextID		807101	1					
ANR	807114	Argument	ContextID		807101	0					
ANR	807115	Identifier	ContextID		807101	0					
ANR	807116	IfStatement	if ( ctx -> MemPool == NULL )		807101	1					
ANR	807117	Condition	ctx -> MemPool == NULL	508:8:13316:13336	807101	0	True				
ANR	807118	EqualityExpression	ctx -> MemPool == NULL		807101	0		==			
ANR	807119	PtrMemberAccess	ctx -> MemPool		807101	0					
ANR	807120	Identifier	ctx		807101	0					
ANR	807121	Identifier	MemPool		807101	1					
ANR	807122	Identifier	NULL		807101	1					
ANR	807123	CompoundStatement		4:31:97:97	807101	1					
ANR	807124	IfStatement	if ( ContextID == NULL )		807101	0					
ANR	807125	Condition	ContextID == NULL	510:12:13354:13370	807101	0	True				
ANR	807126	EqualityExpression	ContextID == NULL		807101	0		==			
ANR	807127	Identifier	ContextID		807101	0					
ANR	807128	Identifier	NULL		807101	1					
ANR	807129	CompoundStatement		6:31:131:131	807101	1					
ANR	807130	ExpressionStatement	"ctx -> MemPool = _cmsCreateSubAlloc ( 0 , 2 * 1024 )"	512:12:13388:13432	807101	0	True				
ANR	807131	AssignmentExpression	"ctx -> MemPool = _cmsCreateSubAlloc ( 0 , 2 * 1024 )"		807101	0		=			
ANR	807132	PtrMemberAccess	ctx -> MemPool		807101	0					
ANR	807133	Identifier	ctx		807101	0					
ANR	807134	Identifier	MemPool		807101	1					
ANR	807135	CallExpression	"_cmsCreateSubAlloc ( 0 , 2 * 1024 )"		807101	1					
ANR	807136	Callee	_cmsCreateSubAlloc		807101	0					
ANR	807137	Identifier	_cmsCreateSubAlloc		807101	0					
ANR	807138	ArgumentList	0		807101	1					
ANR	807139	Argument	0		807101	0					
ANR	807140	PrimaryExpression	0		807101	0					
ANR	807141	Argument	2 * 1024		807101	1					
ANR	807142	MultiplicativeExpression	2 * 1024		807101	0		*			
ANR	807143	PrimaryExpression	2		807101	0					
ANR	807144	PrimaryExpression	1024		807101	1					
ANR	807145	IfStatement	if ( ctx -> MemPool == NULL )		807101	1					
ANR	807146	Condition	ctx -> MemPool == NULL	513:16:13450:13469	807101	0	True				
ANR	807147	EqualityExpression	ctx -> MemPool == NULL		807101	0		==			
ANR	807148	PtrMemberAccess	ctx -> MemPool		807101	0					
ANR	807149	Identifier	ctx		807101	0					
ANR	807150	Identifier	MemPool		807101	1					
ANR	807151	Identifier	NULL		807101	1					
ANR	807152	ReturnStatement	return NULL ;	513:38:13472:13483	807101	1	True				
ANR	807153	Identifier	NULL		807101	0					
ANR	807154	ElseStatement	else		807101	0					
ANR	807155	CompoundStatement		11:13:266:266	807101	0					
ANR	807156	ExpressionStatement	"cmsSignalError ( ContextID , cmsERROR_CORRUPTION_DETECTED , ""NULL memory pool on context"" )"	516:12:13522:13608	807101	0	True				
ANR	807157	CallExpression	"cmsSignalError ( ContextID , cmsERROR_CORRUPTION_DETECTED , ""NULL memory pool on context"" )"		807101	0					
ANR	807158	Callee	cmsSignalError		807101	0					
ANR	807159	Identifier	cmsSignalError		807101	0					
ANR	807160	ArgumentList	ContextID		807101	1					
ANR	807161	Argument	ContextID		807101	0					
ANR	807162	Identifier	ContextID		807101	0					
ANR	807163	Argument	cmsERROR_CORRUPTION_DETECTED		807101	1					
ANR	807164	Identifier	cmsERROR_CORRUPTION_DETECTED		807101	0					
ANR	807165	Argument	"""NULL memory pool on context"""		807101	2					
ANR	807166	PrimaryExpression	"""NULL memory pool on context"""		807101	0					
ANR	807167	ReturnStatement	return NULL ;	517:12:13622:13633	807101	1	True				
ANR	807168	Identifier	NULL		807101	0					
ANR	807169	ReturnStatement	"return _cmsSubAlloc ( ctx -> MemPool , size ) ;"	521:4:13656:13695	807101	2	True				
ANR	807170	CallExpression	"_cmsSubAlloc ( ctx -> MemPool , size )"		807101	0					
ANR	807171	Callee	_cmsSubAlloc		807101	0					
ANR	807172	Identifier	_cmsSubAlloc		807101	0					
ANR	807173	ArgumentList	ctx -> MemPool		807101	1					
ANR	807174	Argument	ctx -> MemPool		807101	0					
ANR	807175	PtrMemberAccess	ctx -> MemPool		807101	0					
ANR	807176	Identifier	ctx		807101	0					
ANR	807177	Identifier	MemPool		807101	1					
ANR	807178	Argument	size		807101	1					
ANR	807179	Identifier	size		807101	0					
ANR	807180	ReturnType	void *		807101	1					
ANR	807181	Identifier	_cmsPluginMalloc		807101	2					
ANR	807182	ParameterList	"cmsContext ContextID , cmsUInt32Number size"		807101	3					
ANR	807183	Parameter	cmsContext ContextID	504:23:13197:13216	807101	0	True				
ANR	807184	ParameterType	cmsContext		807101	0					
ANR	807185	Identifier	ContextID		807101	1					
ANR	807186	Parameter	cmsUInt32Number size	504:45:13219:13238	807101	1	True				
ANR	807187	ParameterType	cmsUInt32Number		807101	0					
ANR	807188	Identifier	size		807101	1					
ANR	807189	CFGEntryNode	ENTRY		807101		True				
ANR	807190	CFGExitNode	EXIT		807101		True				
ANR	807191	Symbol	NULL		807101						
ANR	807192	Symbol	_cmsSubAlloc		807101						
ANR	807193	Symbol	size		807101						
ANR	807194	Symbol	ctx		807101						
ANR	807195	Symbol	ContextID		807101						
ANR	807196	Symbol	ctx -> MemPool		807101						
ANR	807197	Symbol	_cmsGetContext		807101						
ANR	807198	Symbol	cmsERROR_CORRUPTION_DETECTED		807101						
ANR	807199	Symbol	* ctx		807101						
ANR	807200	Symbol	_cmsCreateSubAlloc		807101						
ANR	807201	Function	cmsPlugin	526:0:13728:13813							
ANR	807202	FunctionDef	cmsPlugin (void * Plug_in)		807201	0					
ANR	807203	CompoundStatement		527:0:13771:13813	807201	0					
ANR	807204	ReturnStatement	"return cmsPluginTHR ( NULL , Plug_in ) ;"	528:4:13777:13811	807201	0	True				
ANR	807205	CallExpression	"cmsPluginTHR ( NULL , Plug_in )"		807201	0					
ANR	807206	Callee	cmsPluginTHR		807201	0					
ANR	807207	Identifier	cmsPluginTHR		807201	0					
ANR	807208	ArgumentList	NULL		807201	1					
ANR	807209	Argument	NULL		807201	0					
ANR	807210	Identifier	NULL		807201	0					
ANR	807211	Argument	Plug_in		807201	1					
ANR	807212	Identifier	Plug_in		807201	0					
ANR	807213	ReturnType	cmsBool CMSEXPORT		807201	1					
ANR	807214	Identifier	cmsPlugin		807201	2					
ANR	807215	ParameterList	void * Plug_in		807201	3					
ANR	807216	Parameter	void * Plug_in	526:28:13756:13768	807201	0	True				
ANR	807217	ParameterType	void *		807201	0					
ANR	807218	Identifier	Plug_in		807201	1					
ANR	807219	CFGEntryNode	ENTRY		807201		True				
ANR	807220	CFGExitNode	EXIT		807201		True				
ANR	807221	Symbol	NULL		807201						
ANR	807222	Symbol	Plug_in		807201						
ANR	807223	Symbol	cmsPluginTHR		807201						
ANR	807224	Function	cmsPluginTHR	531:0:13816:16481							
ANR	807225	FunctionDef	"cmsPluginTHR (cmsContext id , void * Plug_in)"		807224	0					
ANR	807226	CompoundStatement		532:0:13877:16481	807224	0					
ANR	807227	IdentifierDeclStatement	cmsPluginBase * Plugin ;	533:4:13883:13904	807224	0	True				
ANR	807228	IdentifierDecl	* Plugin		807224	0					
ANR	807229	IdentifierDeclType	cmsPluginBase *		807224	0					
ANR	807230	Identifier	Plugin		807224	1					
ANR	807231	ForStatement	for ( Plugin = ( cmsPluginBase * ) Plug_in ; Plugin != NULL ; Plugin = Plugin -> Next )		807224	1					
ANR	807232	ForInit	Plugin = ( cmsPluginBase * ) Plug_in ;	535:9:13916:13949	807224	0	True				
ANR	807233	AssignmentExpression	Plugin = ( cmsPluginBase * ) Plug_in		807224	0		=			
ANR	807234	Identifier	Plugin		807224	0					
ANR	807235	CastExpression	( cmsPluginBase * ) Plug_in		807224	1					
ANR	807236	CastTarget	cmsPluginBase *		807224	0					
ANR	807237	Identifier	Plug_in		807224	1					
ANR	807238	Condition	Plugin != NULL	536:9:13960:13973	807224	1	True				
ANR	807239	EqualityExpression	Plugin != NULL		807224	0		!=			
ANR	807240	Identifier	Plugin		807224	0					
ANR	807241	Identifier	NULL		807224	1					
ANR	807242	AssignmentExpression	Plugin = Plugin -> Next	537:9:13985:14007	807224	2	True	=			
ANR	807243	Identifier	Plugin		807224	0					
ANR	807244	PtrMemberAccess	Plugin -> Next		807224	1					
ANR	807245	Identifier	Plugin		807224	0					
ANR	807246	Identifier	Next		807224	1					
ANR	807247	CompoundStatement		6:34:132:132	807224	3					
ANR	807248	IfStatement	if ( Plugin -> Magic != cmsPluginMagicNumber )		807224	0					
ANR	807249	Condition	Plugin -> Magic != cmsPluginMagicNumber	539:16:14029:14067	807224	0	True				
ANR	807250	EqualityExpression	Plugin -> Magic != cmsPluginMagicNumber		807224	0		!=			
ANR	807251	PtrMemberAccess	Plugin -> Magic		807224	0					
ANR	807252	Identifier	Plugin		807224	0					
ANR	807253	Identifier	Magic		807224	1					
ANR	807254	Identifier	cmsPluginMagicNumber		807224	1					
ANR	807255	CompoundStatement		8:57:192:192	807224	1					
ANR	807256	ExpressionStatement	"cmsSignalError ( id , cmsERROR_UNKNOWN_EXTENSION , ""Unrecognized plugin"" )"	540:16:14088:14157	807224	0	True				
ANR	807257	CallExpression	"cmsSignalError ( id , cmsERROR_UNKNOWN_EXTENSION , ""Unrecognized plugin"" )"		807224	0					
ANR	807258	Callee	cmsSignalError		807224	0					
ANR	807259	Identifier	cmsSignalError		807224	0					
ANR	807260	ArgumentList	id		807224	1					
ANR	807261	Argument	id		807224	0					
ANR	807262	Identifier	id		807224	0					
ANR	807263	Argument	cmsERROR_UNKNOWN_EXTENSION		807224	1					
ANR	807264	Identifier	cmsERROR_UNKNOWN_EXTENSION		807224	0					
ANR	807265	Argument	"""Unrecognized plugin"""		807224	2					
ANR	807266	PrimaryExpression	"""Unrecognized plugin"""		807224	0					
ANR	807267	ReturnStatement	return FALSE ;	541:16:14175:14187	807224	1	True				
ANR	807268	Identifier	FALSE		807224	0					
ANR	807269	IfStatement	if ( Plugin -> ExpectedVersion > LCMS_VERSION )		807224	1					
ANR	807270	Condition	Plugin -> ExpectedVersion > LCMS_VERSION	544:16:14220:14258	807224	0	True				
ANR	807271	RelationalExpression	Plugin -> ExpectedVersion > LCMS_VERSION		807224	0		>			
ANR	807272	PtrMemberAccess	Plugin -> ExpectedVersion		807224	0					
ANR	807273	Identifier	Plugin		807224	0					
ANR	807274	Identifier	ExpectedVersion		807224	1					
ANR	807275	Identifier	LCMS_VERSION		807224	1					
ANR	807276	CompoundStatement		13:57:383:383	807224	1					
ANR	807277	ExpressionStatement	"cmsSignalError ( id , cmsERROR_UNKNOWN_EXTENSION , ""plugin needs Little CMS %d, current version is %d"" , Plugin -> ExpectedVersion , LCMS_VERSION )"	545:16:14279:14438	807224	0	True				
ANR	807278	CallExpression	"cmsSignalError ( id , cmsERROR_UNKNOWN_EXTENSION , ""plugin needs Little CMS %d, current version is %d"" , Plugin -> ExpectedVersion , LCMS_VERSION )"		807224	0					
ANR	807279	Callee	cmsSignalError		807224	0					
ANR	807280	Identifier	cmsSignalError		807224	0					
ANR	807281	ArgumentList	id		807224	1					
ANR	807282	Argument	id		807224	0					
ANR	807283	Identifier	id		807224	0					
ANR	807284	Argument	cmsERROR_UNKNOWN_EXTENSION		807224	1					
ANR	807285	Identifier	cmsERROR_UNKNOWN_EXTENSION		807224	0					
ANR	807286	Argument	"""plugin needs Little CMS %d, current version is %d"""		807224	2					
ANR	807287	PrimaryExpression	"""plugin needs Little CMS %d, current version is %d"""		807224	0					
ANR	807288	Argument	Plugin -> ExpectedVersion		807224	3					
ANR	807289	PtrMemberAccess	Plugin -> ExpectedVersion		807224	0					
ANR	807290	Identifier	Plugin		807224	0					
ANR	807291	Identifier	ExpectedVersion		807224	1					
ANR	807292	Argument	LCMS_VERSION		807224	4					
ANR	807293	Identifier	LCMS_VERSION		807224	0					
ANR	807294	ReturnStatement	return FALSE ;	547:16:14456:14468	807224	1	True				
ANR	807295	Identifier	FALSE		807224	0					
ANR	807296	SwitchStatement	switch ( Plugin -> Type )		807224	2					
ANR	807297	Condition	Plugin -> Type	550:20:14505:14518	807224	0	True				
ANR	807298	PtrMemberAccess	Plugin -> Type		807224	0					
ANR	807299	Identifier	Plugin		807224	0					
ANR	807300	Identifier	Type		807224	1					
ANR	807301	CompoundStatement		19:36:643:643	807224	1					
ANR	807302	Label	case cmsPluginMemHandlerSig :	552:16:14540:14567	807224	0	True				
ANR	807303	Identifier	cmsPluginMemHandlerSig		807224	0					
ANR	807304	IfStatement	"if ( ! _cmsRegisterMemHandlerPlugin ( id , Plugin ) )"		807224	1					
ANR	807305	Condition	"! _cmsRegisterMemHandlerPlugin ( id , Plugin )"	553:24:14593:14633	807224	0	True				
ANR	807306	UnaryOperationExpression	"! _cmsRegisterMemHandlerPlugin ( id , Plugin )"		807224	0					
ANR	807307	UnaryOperator	!		807224	0					
ANR	807308	CallExpression	"_cmsRegisterMemHandlerPlugin ( id , Plugin )"		807224	1					
ANR	807309	Callee	_cmsRegisterMemHandlerPlugin		807224	0					
ANR	807310	Identifier	_cmsRegisterMemHandlerPlugin		807224	0					
ANR	807311	ArgumentList	id		807224	1					
ANR	807312	Argument	id		807224	0					
ANR	807313	Identifier	id		807224	0					
ANR	807314	Argument	Plugin		807224	1					
ANR	807315	Identifier	Plugin		807224	0					
ANR	807316	ReturnStatement	return FALSE ;	553:67:14636:14648	807224	1	True				
ANR	807317	Identifier	FALSE		807224	0					
ANR	807318	BreakStatement	break ;	554:20:14670:14675	807224	2	True				
ANR	807319	Label	case cmsPluginInterpolationSig :	556:16:14694:14724	807224	3	True				
ANR	807320	Identifier	cmsPluginInterpolationSig		807224	0					
ANR	807321	IfStatement	"if ( ! _cmsRegisterInterpPlugin ( id , Plugin ) )"		807224	4					
ANR	807322	Condition	"! _cmsRegisterInterpPlugin ( id , Plugin )"	557:24:14750:14786	807224	0	True				
ANR	807323	UnaryOperationExpression	"! _cmsRegisterInterpPlugin ( id , Plugin )"		807224	0					
ANR	807324	UnaryOperator	!		807224	0					
ANR	807325	CallExpression	"_cmsRegisterInterpPlugin ( id , Plugin )"		807224	1					
ANR	807326	Callee	_cmsRegisterInterpPlugin		807224	0					
ANR	807327	Identifier	_cmsRegisterInterpPlugin		807224	0					
ANR	807328	ArgumentList	id		807224	1					
ANR	807329	Argument	id		807224	0					
ANR	807330	Identifier	id		807224	0					
ANR	807331	Argument	Plugin		807224	1					
ANR	807332	Identifier	Plugin		807224	0					
ANR	807333	ReturnStatement	return FALSE ;	557:63:14789:14801	807224	1	True				
ANR	807334	Identifier	FALSE		807224	0					
ANR	807335	BreakStatement	break ;	558:20:14823:14828	807224	5	True				
ANR	807336	Label	case cmsPluginTagTypeSig :	560:16:14847:14871	807224	6	True				
ANR	807337	Identifier	cmsPluginTagTypeSig		807224	0					
ANR	807338	IfStatement	"if ( ! _cmsRegisterTagTypePlugin ( id , Plugin ) )"		807224	7					
ANR	807339	Condition	"! _cmsRegisterTagTypePlugin ( id , Plugin )"	561:24:14897:14934	807224	0	True				
ANR	807340	UnaryOperationExpression	"! _cmsRegisterTagTypePlugin ( id , Plugin )"		807224	0					
ANR	807341	UnaryOperator	!		807224	0					
ANR	807342	CallExpression	"_cmsRegisterTagTypePlugin ( id , Plugin )"		807224	1					
ANR	807343	Callee	_cmsRegisterTagTypePlugin		807224	0					
ANR	807344	Identifier	_cmsRegisterTagTypePlugin		807224	0					
ANR	807345	ArgumentList	id		807224	1					
ANR	807346	Argument	id		807224	0					
ANR	807347	Identifier	id		807224	0					
ANR	807348	Argument	Plugin		807224	1					
ANR	807349	Identifier	Plugin		807224	0					
ANR	807350	ReturnStatement	return FALSE ;	561:64:14937:14949	807224	1	True				
ANR	807351	Identifier	FALSE		807224	0					
ANR	807352	BreakStatement	break ;	562:20:14971:14976	807224	8	True				
ANR	807353	Label	case cmsPluginTagSig :	564:16:14995:15015	807224	9	True				
ANR	807354	Identifier	cmsPluginTagSig		807224	0					
ANR	807355	IfStatement	"if ( ! _cmsRegisterTagPlugin ( id , Plugin ) )"		807224	10					
ANR	807356	Condition	"! _cmsRegisterTagPlugin ( id , Plugin )"	565:24:15041:15074	807224	0	True				
ANR	807357	UnaryOperationExpression	"! _cmsRegisterTagPlugin ( id , Plugin )"		807224	0					
ANR	807358	UnaryOperator	!		807224	0					
ANR	807359	CallExpression	"_cmsRegisterTagPlugin ( id , Plugin )"		807224	1					
ANR	807360	Callee	_cmsRegisterTagPlugin		807224	0					
ANR	807361	Identifier	_cmsRegisterTagPlugin		807224	0					
ANR	807362	ArgumentList	id		807224	1					
ANR	807363	Argument	id		807224	0					
ANR	807364	Identifier	id		807224	0					
ANR	807365	Argument	Plugin		807224	1					
ANR	807366	Identifier	Plugin		807224	0					
ANR	807367	ReturnStatement	return FALSE ;	565:60:15077:15089	807224	1	True				
ANR	807368	Identifier	FALSE		807224	0					
ANR	807369	BreakStatement	break ;	566:20:15111:15116	807224	11	True				
ANR	807370	Label	case cmsPluginFormattersSig :	568:16:15135:15162	807224	12	True				
ANR	807371	Identifier	cmsPluginFormattersSig		807224	0					
ANR	807372	IfStatement	"if ( ! _cmsRegisterFormattersPlugin ( id , Plugin ) )"		807224	13					
ANR	807373	Condition	"! _cmsRegisterFormattersPlugin ( id , Plugin )"	569:24:15188:15228	807224	0	True				
ANR	807374	UnaryOperationExpression	"! _cmsRegisterFormattersPlugin ( id , Plugin )"		807224	0					
ANR	807375	UnaryOperator	!		807224	0					
ANR	807376	CallExpression	"_cmsRegisterFormattersPlugin ( id , Plugin )"		807224	1					
ANR	807377	Callee	_cmsRegisterFormattersPlugin		807224	0					
ANR	807378	Identifier	_cmsRegisterFormattersPlugin		807224	0					
ANR	807379	ArgumentList	id		807224	1					
ANR	807380	Argument	id		807224	0					
ANR	807381	Identifier	id		807224	0					
ANR	807382	Argument	Plugin		807224	1					
ANR	807383	Identifier	Plugin		807224	0					
ANR	807384	ReturnStatement	return FALSE ;	569:67:15231:15243	807224	1	True				
ANR	807385	Identifier	FALSE		807224	0					
ANR	807386	BreakStatement	break ;	570:20:15265:15270	807224	14	True				
ANR	807387	Label	case cmsPluginRenderingIntentSig :	572:16:15289:15321	807224	15	True				
ANR	807388	Identifier	cmsPluginRenderingIntentSig		807224	0					
ANR	807389	IfStatement	"if ( ! _cmsRegisterRenderingIntentPlugin ( id , Plugin ) )"		807224	16					
ANR	807390	Condition	"! _cmsRegisterRenderingIntentPlugin ( id , Plugin )"	573:24:15347:15392	807224	0	True				
ANR	807391	UnaryOperationExpression	"! _cmsRegisterRenderingIntentPlugin ( id , Plugin )"		807224	0					
ANR	807392	UnaryOperator	!		807224	0					
ANR	807393	CallExpression	"_cmsRegisterRenderingIntentPlugin ( id , Plugin )"		807224	1					
ANR	807394	Callee	_cmsRegisterRenderingIntentPlugin		807224	0					
ANR	807395	Identifier	_cmsRegisterRenderingIntentPlugin		807224	0					
ANR	807396	ArgumentList	id		807224	1					
ANR	807397	Argument	id		807224	0					
ANR	807398	Identifier	id		807224	0					
ANR	807399	Argument	Plugin		807224	1					
ANR	807400	Identifier	Plugin		807224	0					
ANR	807401	ReturnStatement	return FALSE ;	573:72:15395:15407	807224	1	True				
ANR	807402	Identifier	FALSE		807224	0					
ANR	807403	BreakStatement	break ;	574:20:15429:15434	807224	17	True				
ANR	807404	Label	case cmsPluginParametricCurveSig :	576:16:15453:15485	807224	18	True				
ANR	807405	Identifier	cmsPluginParametricCurveSig		807224	0					
ANR	807406	IfStatement	"if ( ! _cmsRegisterParametricCurvesPlugin ( id , Plugin ) )"		807224	19					
ANR	807407	Condition	"! _cmsRegisterParametricCurvesPlugin ( id , Plugin )"	577:24:15511:15557	807224	0	True				
ANR	807408	UnaryOperationExpression	"! _cmsRegisterParametricCurvesPlugin ( id , Plugin )"		807224	0					
ANR	807409	UnaryOperator	!		807224	0					
ANR	807410	CallExpression	"_cmsRegisterParametricCurvesPlugin ( id , Plugin )"		807224	1					
ANR	807411	Callee	_cmsRegisterParametricCurvesPlugin		807224	0					
ANR	807412	Identifier	_cmsRegisterParametricCurvesPlugin		807224	0					
ANR	807413	ArgumentList	id		807224	1					
ANR	807414	Argument	id		807224	0					
ANR	807415	Identifier	id		807224	0					
ANR	807416	Argument	Plugin		807224	1					
ANR	807417	Identifier	Plugin		807224	0					
ANR	807418	ReturnStatement	return FALSE ;	577:73:15560:15572	807224	1	True				
ANR	807419	Identifier	FALSE		807224	0					
ANR	807420	BreakStatement	break ;	578:20:15594:15599	807224	20	True				
ANR	807421	Label	case cmsPluginMultiProcessElementSig :	580:16:15618:15654	807224	21	True				
ANR	807422	Identifier	cmsPluginMultiProcessElementSig		807224	0					
ANR	807423	IfStatement	"if ( ! _cmsRegisterMultiProcessElementPlugin ( id , Plugin ) )"		807224	22					
ANR	807424	Condition	"! _cmsRegisterMultiProcessElementPlugin ( id , Plugin )"	581:24:15680:15729	807224	0	True				
ANR	807425	UnaryOperationExpression	"! _cmsRegisterMultiProcessElementPlugin ( id , Plugin )"		807224	0					
ANR	807426	UnaryOperator	!		807224	0					
ANR	807427	CallExpression	"_cmsRegisterMultiProcessElementPlugin ( id , Plugin )"		807224	1					
ANR	807428	Callee	_cmsRegisterMultiProcessElementPlugin		807224	0					
ANR	807429	Identifier	_cmsRegisterMultiProcessElementPlugin		807224	0					
ANR	807430	ArgumentList	id		807224	1					
ANR	807431	Argument	id		807224	0					
ANR	807432	Identifier	id		807224	0					
ANR	807433	Argument	Plugin		807224	1					
ANR	807434	Identifier	Plugin		807224	0					
ANR	807435	ReturnStatement	return FALSE ;	581:76:15732:15744	807224	1	True				
ANR	807436	Identifier	FALSE		807224	0					
ANR	807437	BreakStatement	break ;	582:20:15766:15771	807224	23	True				
ANR	807438	Label	case cmsPluginOptimizationSig :	584:16:15790:15819	807224	24	True				
ANR	807439	Identifier	cmsPluginOptimizationSig		807224	0					
ANR	807440	IfStatement	"if ( ! _cmsRegisterOptimizationPlugin ( id , Plugin ) )"		807224	25					
ANR	807441	Condition	"! _cmsRegisterOptimizationPlugin ( id , Plugin )"	585:24:15845:15887	807224	0	True				
ANR	807442	UnaryOperationExpression	"! _cmsRegisterOptimizationPlugin ( id , Plugin )"		807224	0					
ANR	807443	UnaryOperator	!		807224	0					
ANR	807444	CallExpression	"_cmsRegisterOptimizationPlugin ( id , Plugin )"		807224	1					
ANR	807445	Callee	_cmsRegisterOptimizationPlugin		807224	0					
ANR	807446	Identifier	_cmsRegisterOptimizationPlugin		807224	0					
ANR	807447	ArgumentList	id		807224	1					
ANR	807448	Argument	id		807224	0					
ANR	807449	Identifier	id		807224	0					
ANR	807450	Argument	Plugin		807224	1					
ANR	807451	Identifier	Plugin		807224	0					
ANR	807452	ReturnStatement	return FALSE ;	585:69:15890:15902	807224	1	True				
ANR	807453	Identifier	FALSE		807224	0					
ANR	807454	BreakStatement	break ;	586:20:15924:15929	807224	26	True				
ANR	807455	Label	case cmsPluginTransformSig :	588:16:15948:15974	807224	27	True				
ANR	807456	Identifier	cmsPluginTransformSig		807224	0					
ANR	807457	IfStatement	"if ( ! _cmsRegisterTransformPlugin ( id , Plugin ) )"		807224	28					
ANR	807458	Condition	"! _cmsRegisterTransformPlugin ( id , Plugin )"	589:24:16000:16039	807224	0	True				
ANR	807459	UnaryOperationExpression	"! _cmsRegisterTransformPlugin ( id , Plugin )"		807224	0					
ANR	807460	UnaryOperator	!		807224	0					
ANR	807461	CallExpression	"_cmsRegisterTransformPlugin ( id , Plugin )"		807224	1					
ANR	807462	Callee	_cmsRegisterTransformPlugin		807224	0					
ANR	807463	Identifier	_cmsRegisterTransformPlugin		807224	0					
ANR	807464	ArgumentList	id		807224	1					
ANR	807465	Argument	id		807224	0					
ANR	807466	Identifier	id		807224	0					
ANR	807467	Argument	Plugin		807224	1					
ANR	807468	Identifier	Plugin		807224	0					
ANR	807469	ReturnStatement	return FALSE ;	589:66:16042:16054	807224	1	True				
ANR	807470	Identifier	FALSE		807224	0					
ANR	807471	BreakStatement	break ;	590:20:16076:16081	807224	29	True				
ANR	807472	Label	case cmsPluginMutexSig :	592:16:16100:16122	807224	30	True				
ANR	807473	Identifier	cmsPluginMutexSig		807224	0					
ANR	807474	IfStatement	"if ( ! _cmsRegisterMutexPlugin ( id , Plugin ) )"		807224	31					
ANR	807475	Condition	"! _cmsRegisterMutexPlugin ( id , Plugin )"	593:24:16148:16183	807224	0	True				
ANR	807476	UnaryOperationExpression	"! _cmsRegisterMutexPlugin ( id , Plugin )"		807224	0					
ANR	807477	UnaryOperator	!		807224	0					
ANR	807478	CallExpression	"_cmsRegisterMutexPlugin ( id , Plugin )"		807224	1					
ANR	807479	Callee	_cmsRegisterMutexPlugin		807224	0					
ANR	807480	Identifier	_cmsRegisterMutexPlugin		807224	0					
ANR	807481	ArgumentList	id		807224	1					
ANR	807482	Argument	id		807224	0					
ANR	807483	Identifier	id		807224	0					
ANR	807484	Argument	Plugin		807224	1					
ANR	807485	Identifier	Plugin		807224	0					
ANR	807486	ReturnStatement	return FALSE ;	593:62:16186:16198	807224	1	True				
ANR	807487	Identifier	FALSE		807224	0					
ANR	807488	BreakStatement	break ;	594:20:16220:16225	807224	32	True				
ANR	807489	Label	default :	596:16:16244:16251	807224	33	True				
ANR	807490	Identifier	default		807224	0					
ANR	807491	ExpressionStatement	"cmsSignalError ( id , cmsERROR_UNKNOWN_EXTENSION , ""Unrecognized plugin type '%X'"" , Plugin -> Type )"	597:20:16273:16368	807224	34	True				
ANR	807492	CallExpression	"cmsSignalError ( id , cmsERROR_UNKNOWN_EXTENSION , ""Unrecognized plugin type '%X'"" , Plugin -> Type )"		807224	0					
ANR	807493	Callee	cmsSignalError		807224	0					
ANR	807494	Identifier	cmsSignalError		807224	0					
ANR	807495	ArgumentList	id		807224	1					
ANR	807496	Argument	id		807224	0					
ANR	807497	Identifier	id		807224	0					
ANR	807498	Argument	cmsERROR_UNKNOWN_EXTENSION		807224	1					
ANR	807499	Identifier	cmsERROR_UNKNOWN_EXTENSION		807224	0					
ANR	807500	Argument	"""Unrecognized plugin type '%X'"""		807224	2					
ANR	807501	PrimaryExpression	"""Unrecognized plugin type '%X'"""		807224	0					
ANR	807502	Argument	Plugin -> Type		807224	3					
ANR	807503	PtrMemberAccess	Plugin -> Type		807224	0					
ANR	807504	Identifier	Plugin		807224	0					
ANR	807505	Identifier	Type		807224	1					
ANR	807506	ReturnStatement	return FALSE ;	598:20:16390:16402	807224	35	True				
ANR	807507	Identifier	FALSE		807224	0					
ANR	807508	ReturnStatement	return TRUE ;	603:4:16468:16479	807224	2	True				
ANR	807509	Identifier	TRUE		807224	0					
ANR	807510	ReturnType	cmsBool CMSEXPORT		807224	1					
ANR	807511	Identifier	cmsPluginTHR		807224	2					
ANR	807512	ParameterList	"cmsContext id , void * Plug_in"		807224	3					
ANR	807513	Parameter	cmsContext id	531:31:13847:13859	807224	0	True				
ANR	807514	ParameterType	cmsContext		807224	0					
ANR	807515	Identifier	id		807224	1					
ANR	807516	Parameter	void * Plug_in	531:46:13862:13874	807224	1	True				
ANR	807517	ParameterType	void *		807224	0					
ANR	807518	Identifier	Plug_in		807224	1					
ANR	807519	CFGEntryNode	ENTRY		807224		True				
ANR	807520	CFGExitNode	EXIT		807224		True				
ANR	807521	Symbol	_cmsRegisterMultiProcessElementPlugin		807224						
ANR	807522	Symbol	_cmsRegisterTransformPlugin		807224						
ANR	807523	Symbol	Plug_in		807224						
ANR	807524	Symbol	_cmsRegisterParametricCurvesPlugin		807224						
ANR	807525	Symbol	_cmsRegisterOptimizationPlugin		807224						
ANR	807526	Symbol	_cmsRegisterTagTypePlugin		807224						
ANR	807527	Symbol	Plugin -> Magic		807224						
ANR	807528	Symbol	_cmsRegisterInterpPlugin		807224						
ANR	807529	Symbol	id		807224						
ANR	807530	Symbol	_cmsRegisterTagPlugin		807224						
ANR	807531	Symbol	NULL		807224						
ANR	807532	Symbol	cmsERROR_UNKNOWN_EXTENSION		807224						
ANR	807533	Symbol	TRUE		807224						
ANR	807534	Symbol	* Plugin		807224						
ANR	807535	Symbol	_cmsRegisterMutexPlugin		807224						
ANR	807536	Symbol	_cmsRegisterFormattersPlugin		807224						
ANR	807537	Symbol	Plugin -> ExpectedVersion		807224						
ANR	807538	Symbol	Plugin -> Next		807224						
ANR	807539	Symbol	_cmsRegisterMemHandlerPlugin		807224						
ANR	807540	Symbol	_cmsRegisterRenderingIntentPlugin		807224						
ANR	807541	Symbol	LCMS_VERSION		807224						
ANR	807542	Symbol	FALSE		807224						
ANR	807543	Symbol	Plugin -> Type		807224						
ANR	807544	Symbol	cmsPluginMagicNumber		807224						
ANR	807545	Symbol	Plugin		807224						
ANR	807546	Function	cmsUnregisterPlugins	608:0:16519:16598							
ANR	807547	FunctionDef	cmsUnregisterPlugins ()		807546	0					
ANR	807548	CompoundStatement		609:0:16561:16598	807546	0					
ANR	807549	ExpressionStatement	cmsUnregisterPluginsTHR ( NULL )	610:4:16567:16596	807546	0	True				
ANR	807550	CallExpression	cmsUnregisterPluginsTHR ( NULL )		807546	0					
ANR	807551	Callee	cmsUnregisterPluginsTHR		807546	0					
ANR	807552	Identifier	cmsUnregisterPluginsTHR		807546	0					
ANR	807553	ArgumentList	NULL		807546	1					
ANR	807554	Argument	NULL		807546	0					
ANR	807555	Identifier	NULL		807546	0					
ANR	807556	ReturnType	void CMSEXPORT		807546	1					
ANR	807557	Identifier	cmsUnregisterPlugins		807546	2					
ANR	807558	ParameterList			807546	3					
ANR	807559	CFGEntryNode	ENTRY		807546		True				
ANR	807560	CFGExitNode	EXIT		807546		True				
ANR	807561	Symbol	NULL		807546						
ANR	807562	DeclStmt									
ANR	807563	Decl							struct _cmsContext_struct	struct _cmsContext_struct	globalContext
ANR	807564	DeclStmt									
ANR	807565	Decl							_cmsMutex	_cmsMutex	_cmsContextPoolHeadMutex
ANR	807566	DeclStmt									
ANR	807567	Decl							struct _cmsContext_struct	struct _cmsContext_struct *	_cmsContextPoolHead
ANR	807568	Function	_cmsGetContext	647:0:18146:18651							
ANR	807569	FunctionDef	_cmsGetContext (cmsContext ContextID)		807568	0					
ANR	807570	CompoundStatement		648:0:18210:18651	807568	0					
ANR	807571	IdentifierDeclStatement	struct _cmsContext_struct * id = ( struct _cmsContext_struct * ) ContextID ;	649:4:18216:18286	807568	0	True				
ANR	807572	IdentifierDecl	* id = ( struct _cmsContext_struct * ) ContextID		807568	0					
ANR	807573	IdentifierDeclType	struct _cmsContext_struct *		807568	0					
ANR	807574	Identifier	id		807568	1					
ANR	807575	AssignmentExpression	* id = ( struct _cmsContext_struct * ) ContextID		807568	2		=			
ANR	807576	Identifier	id		807568	0					
ANR	807577	CastExpression	( struct _cmsContext_struct * ) ContextID		807568	1					
ANR	807578	CastTarget	struct _cmsContext_struct *		807568	0					
ANR	807579	Identifier	ContextID		807568	1					
ANR	807580	IdentifierDeclStatement	struct _cmsContext_struct * ctx ;	650:4:18292:18322	807568	1	True				
ANR	807581	IdentifierDecl	* ctx		807568	0					
ANR	807582	IdentifierDeclType	struct _cmsContext_struct *		807568	0					
ANR	807583	Identifier	ctx		807568	1					
ANR	807584	IfStatement	if ( id == NULL )		807568	2					
ANR	807585	Condition	id == NULL	654:8:18367:18376	807568	0	True				
ANR	807586	EqualityExpression	id == NULL		807568	0		==			
ANR	807587	Identifier	id		807568	0					
ANR	807588	Identifier	NULL		807568	1					
ANR	807589	ReturnStatement	return & globalContext ;	655:8:18388:18409	807568	1	True				
ANR	807590	UnaryOperationExpression	& globalContext		807568	0					
ANR	807591	UnaryOperator	&		807568	0					
ANR	807592	Identifier	globalContext		807568	1					
ANR	807593	ForStatement	for ( ctx = _cmsContextPoolHead ; ctx != NULL ; ctx = ctx -> Next )		807568	3					
ANR	807594	ForInit	ctx = _cmsContextPoolHead ;	658:9:18435:18460	807568	0	True				
ANR	807595	AssignmentExpression	ctx = _cmsContextPoolHead		807568	0		=			
ANR	807596	Identifier	ctx		807568	0					
ANR	807597	Identifier	_cmsContextPoolHead		807568	1					
ANR	807598	Condition	ctx != NULL	659:9:18471:18481	807568	1	True				
ANR	807599	EqualityExpression	ctx != NULL		807568	0		!=			
ANR	807600	Identifier	ctx		807568	0					
ANR	807601	Identifier	NULL		807568	1					
ANR	807602	AssignmentExpression	ctx = ctx -> Next	660:9:18493:18508	807568	2	True	=			
ANR	807603	Identifier	ctx		807568	0					
ANR	807604	PtrMemberAccess	ctx -> Next		807568	1					
ANR	807605	Identifier	ctx		807568	0					
ANR	807606	Identifier	Next		807568	1					
ANR	807607	CompoundStatement		13:27:300:300	807568	3					
ANR	807608	IfStatement	if ( id == ctx )		807568	0					
ANR	807609	Condition	id == ctx	663:16:18555:18563	807568	0	True				
ANR	807610	EqualityExpression	id == ctx		807568	0		==			
ANR	807611	Identifier	id		807568	0					
ANR	807612	Identifier	ctx		807568	1					
ANR	807613	ReturnStatement	return ctx ;	664:16:18582:18592	807568	1	True				
ANR	807614	Identifier	ctx		807568	0					
ANR	807615	ReturnStatement	return & globalContext ;	667:4:18628:18649	807568	4	True				
ANR	807616	UnaryOperationExpression	& globalContext		807568	0					
ANR	807617	UnaryOperator	&		807568	0					
ANR	807618	Identifier	globalContext		807568	1					
ANR	807619	ReturnType	struct _cmsContext_struct *		807568	1					
ANR	807620	Identifier	_cmsGetContext		807568	2					
ANR	807621	ParameterList	cmsContext ContextID		807568	3					
ANR	807622	Parameter	cmsContext ContextID	647:42:18188:18207	807568	0	True				
ANR	807623	ParameterType	cmsContext		807568	0					
ANR	807624	Identifier	ContextID		807568	1					
ANR	807625	CFGEntryNode	ENTRY		807568		True				
ANR	807626	CFGExitNode	EXIT		807568		True				
ANR	807627	Symbol	NULL		807568						
ANR	807628	Symbol	& globalContext		807568						
ANR	807629	Symbol	ctx		807568						
ANR	807630	Symbol	ctx -> Next		807568						
ANR	807631	Symbol	ContextID		807568						
ANR	807632	Symbol	_cmsContextPoolHead		807568						
ANR	807633	Symbol	id		807568						
ANR	807634	Symbol	* ctx		807568						
ANR	807635	Function	_cmsContextGetClientChunk	673:0:18796:19529							
ANR	807636	FunctionDef	"_cmsContextGetClientChunk (cmsContext ContextID , _cmsMemoryClient mc)"		807635	0					
ANR	807637	CompoundStatement		674:0:18871:19529	807635	0					
ANR	807638	IdentifierDeclStatement	struct _cmsContext_struct * ctx ;	675:4:18877:18907	807635	0	True				
ANR	807639	IdentifierDecl	* ctx		807635	0					
ANR	807640	IdentifierDeclType	struct _cmsContext_struct *		807635	0					
ANR	807641	Identifier	ctx		807635	1					
ANR	807642	IdentifierDeclStatement	void * ptr ;	676:4:18913:18922	807635	1	True				
ANR	807643	IdentifierDecl	* ptr		807635	0					
ANR	807644	IdentifierDeclType	void *		807635	0					
ANR	807645	Identifier	ptr		807635	1					
ANR	807646	IfStatement	if ( ( int ) mc < 0 || mc >= MemoryClientMax )		807635	2					
ANR	807647	Condition	( int ) mc < 0 || mc >= MemoryClientMax	678:8:18933:18969	807635	0	True				
ANR	807648	OrExpression	( int ) mc < 0 || mc >= MemoryClientMax		807635	0		||			
ANR	807649	RelationalExpression	( int ) mc < 0		807635	0		<			
ANR	807650	CastExpression	( int ) mc		807635	0					
ANR	807651	CastTarget	int		807635	0					
ANR	807652	Identifier	mc		807635	1					
ANR	807653	PrimaryExpression	0		807635	1					
ANR	807654	RelationalExpression	mc >= MemoryClientMax		807635	1		>=			
ANR	807655	Identifier	mc		807635	0					
ANR	807656	Identifier	MemoryClientMax		807635	1					
ANR	807657	CompoundStatement		5:47:100:100	807635	1					
ANR	807658	ExpressionStatement	"cmsSignalError ( ContextID , cmsERROR_INTERNAL , ""Bad context client -- possible corruption"" )"	680:11:18994:19083	807635	0	True				
ANR	807659	CallExpression	"cmsSignalError ( ContextID , cmsERROR_INTERNAL , ""Bad context client -- possible corruption"" )"		807635	0					
ANR	807660	Callee	cmsSignalError		807635	0					
ANR	807661	Identifier	cmsSignalError		807635	0					
ANR	807662	ArgumentList	ContextID		807635	1					
ANR	807663	Argument	ContextID		807635	0					
ANR	807664	Identifier	ContextID		807635	0					
ANR	807665	Argument	cmsERROR_INTERNAL		807635	1					
ANR	807666	Identifier	cmsERROR_INTERNAL		807635	0					
ANR	807667	Argument	"""Bad context client -- possible corruption"""		807635	2					
ANR	807668	PrimaryExpression	"""Bad context client -- possible corruption"""		807635	0					
ANR	807669	ExpressionStatement	_cmsAssert ( 0 )	683:11:19157:19170	807635	1	True				
ANR	807670	CallExpression	_cmsAssert ( 0 )		807635	0					
ANR	807671	Callee	_cmsAssert		807635	0					
ANR	807672	Identifier	_cmsAssert		807635	0					
ANR	807673	ArgumentList	0		807635	1					
ANR	807674	Argument	0		807635	0					
ANR	807675	PrimaryExpression	0		807635	0					
ANR	807676	ReturnStatement	return globalContext . chunks [ UserPtr ] ;	686:11:19224:19260	807635	2	True				
ANR	807677	ArrayIndexing	globalContext . chunks [ UserPtr ]		807635	0					
ANR	807678	MemberAccess	globalContext . chunks		807635	0					
ANR	807679	Identifier	globalContext		807635	0					
ANR	807680	Identifier	chunks		807635	1					
ANR	807681	Identifier	UserPtr		807635	1					
ANR	807682	ExpressionStatement	ctx = _cmsGetContext ( ContextID )	689:4:19277:19308	807635	3	True				
ANR	807683	AssignmentExpression	ctx = _cmsGetContext ( ContextID )		807635	0		=			
ANR	807684	Identifier	ctx		807635	0					
ANR	807685	CallExpression	_cmsGetContext ( ContextID )		807635	1					
ANR	807686	Callee	_cmsGetContext		807635	0					
ANR	807687	Identifier	_cmsGetContext		807635	0					
ANR	807688	ArgumentList	ContextID		807635	1					
ANR	807689	Argument	ContextID		807635	0					
ANR	807690	Identifier	ContextID		807635	0					
ANR	807691	ExpressionStatement	ptr = ctx -> chunks [ mc ]	690:4:19314:19336	807635	4	True				
ANR	807692	AssignmentExpression	ptr = ctx -> chunks [ mc ]		807635	0		=			
ANR	807693	Identifier	ptr		807635	0					
ANR	807694	ArrayIndexing	ctx -> chunks [ mc ]		807635	1					
ANR	807695	PtrMemberAccess	ctx -> chunks		807635	0					
ANR	807696	Identifier	ctx		807635	0					
ANR	807697	Identifier	chunks		807635	1					
ANR	807698	Identifier	mc		807635	1					
ANR	807699	IfStatement	if ( ptr != NULL )		807635	5					
ANR	807700	Condition	ptr != NULL	692:8:19347:19357	807635	0	True				
ANR	807701	EqualityExpression	ptr != NULL		807635	0		!=			
ANR	807702	Identifier	ptr		807635	0					
ANR	807703	Identifier	NULL		807635	1					
ANR	807704	ReturnStatement	return ptr ;	693:8:19368:19378	807635	1	True				
ANR	807705	Identifier	ptr		807635	0					
ANR	807706	ReturnStatement	return globalContext . chunks [ mc ] ;	697:4:19492:19523	807635	6	True				
ANR	807707	ArrayIndexing	globalContext . chunks [ mc ]		807635	0					
ANR	807708	MemberAccess	globalContext . chunks		807635	0					
ANR	807709	Identifier	globalContext		807635	0					
ANR	807710	Identifier	chunks		807635	1					
ANR	807711	Identifier	mc		807635	1					
ANR	807712	ReturnType	void *		807635	1					
ANR	807713	Identifier	_cmsContextGetClientChunk		807635	2					
ANR	807714	ParameterList	"cmsContext ContextID , _cmsMemoryClient mc"		807635	3					
ANR	807715	Parameter	cmsContext ContextID	673:32:18828:18847	807635	0	True				
ANR	807716	ParameterType	cmsContext		807635	0					
ANR	807717	Identifier	ContextID		807635	1					
ANR	807718	Parameter	_cmsMemoryClient mc	673:54:18850:18868	807635	1	True				
ANR	807719	ParameterType	_cmsMemoryClient		807635	0					
ANR	807720	Identifier	mc		807635	1					
ANR	807721	CFGEntryNode	ENTRY		807635		True				
ANR	807722	CFGExitNode	EXIT		807635		True				
ANR	807723	Symbol	globalContext		807635						
ANR	807724	Symbol	NULL		807635						
ANR	807725	Symbol	ctx		807635						
ANR	807726	Symbol	MemoryClientMax		807635						
ANR	807727	Symbol	_cmsGetContext		807635						
ANR	807728	Symbol	* ctx		807635						
ANR	807729	Symbol	ptr		807635						
ANR	807730	Symbol	globalContext . chunks		807635						
ANR	807731	Symbol	UserPtr		807635						
ANR	807732	Symbol	* globalContext		807635						
ANR	807733	Symbol	mc		807635						
ANR	807734	Symbol	ContextID		807635						
ANR	807735	Symbol	ctx -> chunks		807635						
ANR	807736	Symbol	cmsERROR_INTERNAL		807635						
ANR	807737	Symbol	* globalContext . chunks		807635						
ANR	807738	Symbol	* ctx -> chunks		807635						
ANR	807739	Symbol	* * ctx		807635						
ANR	807740	Symbol	* UserPtr		807635						
ANR	807741	Symbol	* mc		807635						
ANR	807742	Function	cmsUnregisterPluginsTHR	706:0:19856:20486							
ANR	807743	FunctionDef	cmsUnregisterPluginsTHR (cmsContext ContextID)		807742	0					
ANR	807744	CompoundStatement		707:0:19917:20486	807742	0					
ANR	807745	ExpressionStatement	"_cmsRegisterMemHandlerPlugin ( ContextID , NULL )"	708:4:19923:19968	807742	0	True				
ANR	807746	CallExpression	"_cmsRegisterMemHandlerPlugin ( ContextID , NULL )"		807742	0					
ANR	807747	Callee	_cmsRegisterMemHandlerPlugin		807742	0					
ANR	807748	Identifier	_cmsRegisterMemHandlerPlugin		807742	0					
ANR	807749	ArgumentList	ContextID		807742	1					
ANR	807750	Argument	ContextID		807742	0					
ANR	807751	Identifier	ContextID		807742	0					
ANR	807752	Argument	NULL		807742	1					
ANR	807753	Identifier	NULL		807742	0					
ANR	807754	ExpressionStatement	"_cmsRegisterInterpPlugin ( ContextID , NULL )"	709:4:19974:20015	807742	1	True				
ANR	807755	CallExpression	"_cmsRegisterInterpPlugin ( ContextID , NULL )"		807742	0					
ANR	807756	Callee	_cmsRegisterInterpPlugin		807742	0					
ANR	807757	Identifier	_cmsRegisterInterpPlugin		807742	0					
ANR	807758	ArgumentList	ContextID		807742	1					
ANR	807759	Argument	ContextID		807742	0					
ANR	807760	Identifier	ContextID		807742	0					
ANR	807761	Argument	NULL		807742	1					
ANR	807762	Identifier	NULL		807742	0					
ANR	807763	ExpressionStatement	"_cmsRegisterTagTypePlugin ( ContextID , NULL )"	710:4:20021:20063	807742	2	True				
ANR	807764	CallExpression	"_cmsRegisterTagTypePlugin ( ContextID , NULL )"		807742	0					
ANR	807765	Callee	_cmsRegisterTagTypePlugin		807742	0					
ANR	807766	Identifier	_cmsRegisterTagTypePlugin		807742	0					
ANR	807767	ArgumentList	ContextID		807742	1					
ANR	807768	Argument	ContextID		807742	0					
ANR	807769	Identifier	ContextID		807742	0					
ANR	807770	Argument	NULL		807742	1					
ANR	807771	Identifier	NULL		807742	0					
ANR	807772	ExpressionStatement	"_cmsRegisterTagPlugin ( ContextID , NULL )"	711:4:20069:20107	807742	3	True				
ANR	807773	CallExpression	"_cmsRegisterTagPlugin ( ContextID , NULL )"		807742	0					
ANR	807774	Callee	_cmsRegisterTagPlugin		807742	0					
ANR	807775	Identifier	_cmsRegisterTagPlugin		807742	0					
ANR	807776	ArgumentList	ContextID		807742	1					
ANR	807777	Argument	ContextID		807742	0					
ANR	807778	Identifier	ContextID		807742	0					
ANR	807779	Argument	NULL		807742	1					
ANR	807780	Identifier	NULL		807742	0					
ANR	807781	ExpressionStatement	"_cmsRegisterFormattersPlugin ( ContextID , NULL )"	712:4:20113:20158	807742	4	True				
ANR	807782	CallExpression	"_cmsRegisterFormattersPlugin ( ContextID , NULL )"		807742	0					
ANR	807783	Callee	_cmsRegisterFormattersPlugin		807742	0					
ANR	807784	Identifier	_cmsRegisterFormattersPlugin		807742	0					
ANR	807785	ArgumentList	ContextID		807742	1					
ANR	807786	Argument	ContextID		807742	0					
ANR	807787	Identifier	ContextID		807742	0					
ANR	807788	Argument	NULL		807742	1					
ANR	807789	Identifier	NULL		807742	0					
ANR	807790	ExpressionStatement	"_cmsRegisterRenderingIntentPlugin ( ContextID , NULL )"	713:4:20164:20214	807742	5	True				
ANR	807791	CallExpression	"_cmsRegisterRenderingIntentPlugin ( ContextID , NULL )"		807742	0					
ANR	807792	Callee	_cmsRegisterRenderingIntentPlugin		807742	0					
ANR	807793	Identifier	_cmsRegisterRenderingIntentPlugin		807742	0					
ANR	807794	ArgumentList	ContextID		807742	1					
ANR	807795	Argument	ContextID		807742	0					
ANR	807796	Identifier	ContextID		807742	0					
ANR	807797	Argument	NULL		807742	1					
ANR	807798	Identifier	NULL		807742	0					
ANR	807799	ExpressionStatement	"_cmsRegisterParametricCurvesPlugin ( ContextID , NULL )"	714:4:20220:20271	807742	6	True				
ANR	807800	CallExpression	"_cmsRegisterParametricCurvesPlugin ( ContextID , NULL )"		807742	0					
ANR	807801	Callee	_cmsRegisterParametricCurvesPlugin		807742	0					
ANR	807802	Identifier	_cmsRegisterParametricCurvesPlugin		807742	0					
ANR	807803	ArgumentList	ContextID		807742	1					
ANR	807804	Argument	ContextID		807742	0					
ANR	807805	Identifier	ContextID		807742	0					
ANR	807806	Argument	NULL		807742	1					
ANR	807807	Identifier	NULL		807742	0					
ANR	807808	ExpressionStatement	"_cmsRegisterMultiProcessElementPlugin ( ContextID , NULL )"	715:4:20277:20331	807742	7	True				
ANR	807809	CallExpression	"_cmsRegisterMultiProcessElementPlugin ( ContextID , NULL )"		807742	0					
ANR	807810	Callee	_cmsRegisterMultiProcessElementPlugin		807742	0					
ANR	807811	Identifier	_cmsRegisterMultiProcessElementPlugin		807742	0					
ANR	807812	ArgumentList	ContextID		807742	1					
ANR	807813	Argument	ContextID		807742	0					
ANR	807814	Identifier	ContextID		807742	0					
ANR	807815	Argument	NULL		807742	1					
ANR	807816	Identifier	NULL		807742	0					
ANR	807817	ExpressionStatement	"_cmsRegisterOptimizationPlugin ( ContextID , NULL )"	716:4:20337:20384	807742	8	True				
ANR	807818	CallExpression	"_cmsRegisterOptimizationPlugin ( ContextID , NULL )"		807742	0					
ANR	807819	Callee	_cmsRegisterOptimizationPlugin		807742	0					
ANR	807820	Identifier	_cmsRegisterOptimizationPlugin		807742	0					
ANR	807821	ArgumentList	ContextID		807742	1					
ANR	807822	Argument	ContextID		807742	0					
ANR	807823	Identifier	ContextID		807742	0					
ANR	807824	Argument	NULL		807742	1					
ANR	807825	Identifier	NULL		807742	0					
ANR	807826	ExpressionStatement	"_cmsRegisterTransformPlugin ( ContextID , NULL )"	717:4:20390:20434	807742	9	True				
ANR	807827	CallExpression	"_cmsRegisterTransformPlugin ( ContextID , NULL )"		807742	0					
ANR	807828	Callee	_cmsRegisterTransformPlugin		807742	0					
ANR	807829	Identifier	_cmsRegisterTransformPlugin		807742	0					
ANR	807830	ArgumentList	ContextID		807742	1					
ANR	807831	Argument	ContextID		807742	0					
ANR	807832	Identifier	ContextID		807742	0					
ANR	807833	Argument	NULL		807742	1					
ANR	807834	Identifier	NULL		807742	0					
ANR	807835	ExpressionStatement	"_cmsRegisterMutexPlugin ( ContextID , NULL )"	718:4:20444:20484	807742	10	True				
ANR	807836	CallExpression	"_cmsRegisterMutexPlugin ( ContextID , NULL )"		807742	0					
ANR	807837	Callee	_cmsRegisterMutexPlugin		807742	0					
ANR	807838	Identifier	_cmsRegisterMutexPlugin		807742	0					
ANR	807839	ArgumentList	ContextID		807742	1					
ANR	807840	Argument	ContextID		807742	0					
ANR	807841	Identifier	ContextID		807742	0					
ANR	807842	Argument	NULL		807742	1					
ANR	807843	Identifier	NULL		807742	0					
ANR	807844	ReturnType	void CMSEXPORT		807742	1					
ANR	807845	Identifier	cmsUnregisterPluginsTHR		807742	2					
ANR	807846	ParameterList	cmsContext ContextID		807742	3					
ANR	807847	Parameter	cmsContext ContextID	706:39:19895:19914	807742	0	True				
ANR	807848	ParameterType	cmsContext		807742	0					
ANR	807849	Identifier	ContextID		807742	1					
ANR	807850	CFGEntryNode	ENTRY		807742		True				
ANR	807851	CFGExitNode	EXIT		807742		True				
ANR	807852	Symbol	NULL		807742						
ANR	807853	Symbol	ContextID		807742						
ANR	807854	Function	_cmsFindMemoryPlugin	723:0:20561:21113							
ANR	807855	FunctionDef	_cmsFindMemoryPlugin (void * PluginBundle)		807854	0					
ANR	807856	CompoundStatement		725:0:20630:21113	807854	0					
ANR	807857	IdentifierDeclStatement	cmsPluginBase * Plugin ;	726:4:20636:20657	807854	0	True				
ANR	807858	IdentifierDecl	* Plugin		807854	0					
ANR	807859	IdentifierDeclType	cmsPluginBase *		807854	0					
ANR	807860	Identifier	Plugin		807854	1					
ANR	807861	ForStatement	for ( Plugin = ( cmsPluginBase * ) PluginBundle ; Plugin != NULL ; Plugin = Plugin -> Next )		807854	1					
ANR	807862	ForInit	Plugin = ( cmsPluginBase * ) PluginBundle ;	728:9:20669:20707	807854	0	True				
ANR	807863	AssignmentExpression	Plugin = ( cmsPluginBase * ) PluginBundle		807854	0		=			
ANR	807864	Identifier	Plugin		807854	0					
ANR	807865	CastExpression	( cmsPluginBase * ) PluginBundle		807854	1					
ANR	807866	CastTarget	cmsPluginBase *		807854	0					
ANR	807867	Identifier	PluginBundle		807854	1					
ANR	807868	Condition	Plugin != NULL	729:8:20717:20730	807854	1	True				
ANR	807869	EqualityExpression	Plugin != NULL		807854	0		!=			
ANR	807870	Identifier	Plugin		807854	0					
ANR	807871	Identifier	NULL		807854	1					
ANR	807872	AssignmentExpression	Plugin = Plugin -> Next	730:8:20741:20763	807854	2	True	=			
ANR	807873	Identifier	Plugin		807854	0					
ANR	807874	PtrMemberAccess	Plugin -> Next		807854	1					
ANR	807875	Identifier	Plugin		807854	0					
ANR	807876	Identifier	Next		807854	1					
ANR	807877	CompoundStatement		6:33:135:135	807854	3					
ANR	807878	IfStatement	if ( Plugin -> Magic == cmsPluginMagicNumber && Plugin -> ExpectedVersion <= LCMS_VERSION && Plugin -> Type == cmsPluginMemHandlerSig )		807854	0					
ANR	807879	Condition	Plugin -> Magic == cmsPluginMagicNumber && Plugin -> ExpectedVersion <= LCMS_VERSION && Plugin -> Type == cmsPluginMemHandlerSig	732:16:20785:20946	807854	0	True				
ANR	807880	AndExpression	Plugin -> Magic == cmsPluginMagicNumber && Plugin -> ExpectedVersion <= LCMS_VERSION && Plugin -> Type == cmsPluginMemHandlerSig		807854	0		&&			
ANR	807881	EqualityExpression	Plugin -> Magic == cmsPluginMagicNumber		807854	0		==			
ANR	807882	PtrMemberAccess	Plugin -> Magic		807854	0					
ANR	807883	Identifier	Plugin		807854	0					
ANR	807884	Identifier	Magic		807854	1					
ANR	807885	Identifier	cmsPluginMagicNumber		807854	1					
ANR	807886	AndExpression	Plugin -> ExpectedVersion <= LCMS_VERSION && Plugin -> Type == cmsPluginMemHandlerSig		807854	1		&&			
ANR	807887	RelationalExpression	Plugin -> ExpectedVersion <= LCMS_VERSION		807854	0		<=			
ANR	807888	PtrMemberAccess	Plugin -> ExpectedVersion		807854	0					
ANR	807889	Identifier	Plugin		807854	0					
ANR	807890	Identifier	ExpectedVersion		807854	1					
ANR	807891	Identifier	LCMS_VERSION		807854	1					
ANR	807892	EqualityExpression	Plugin -> Type == cmsPluginMemHandlerSig		807854	1		==			
ANR	807893	PtrMemberAccess	Plugin -> Type		807854	0					
ANR	807894	Identifier	Plugin		807854	0					
ANR	807895	Identifier	Type		807854	1					
ANR	807896	Identifier	cmsPluginMemHandlerSig		807854	1					
ANR	807897	CompoundStatement		10:58:318:318	807854	1					
ANR	807898	ReturnStatement	return ( cmsPluginMemHandler * ) Plugin ;	737:20:21002:21038	807854	0	True				
ANR	807899	CastExpression	( cmsPluginMemHandler * ) Plugin		807854	0					
ANR	807900	CastTarget	cmsPluginMemHandler *		807854	0					
ANR	807901	Identifier	Plugin		807854	1					
ANR	807902	ReturnStatement	return NULL ;	742:4:21100:21111	807854	2	True				
ANR	807903	Identifier	NULL		807854	0					
ANR	807904	ReturnType	static cmsPluginMemHandler *		807854	1					
ANR	807905	Identifier	_cmsFindMemoryPlugin		807854	2					
ANR	807906	ParameterList	void * PluginBundle		807854	3					
ANR	807907	Parameter	void * PluginBundle	724:42:20610:20627	807854	0	True				
ANR	807908	ParameterType	void *		807854	0					
ANR	807909	Identifier	PluginBundle		807854	1					
ANR	807910	CFGEntryNode	ENTRY		807854		True				
ANR	807911	CFGExitNode	EXIT		807854		True				
ANR	807912	Symbol	PluginBundle		807854						
ANR	807913	Symbol	Plugin -> ExpectedVersion		807854						
ANR	807914	Symbol	NULL		807854						
ANR	807915	Symbol	Plugin -> Next		807854						
ANR	807916	Symbol	cmsPluginMemHandlerSig		807854						
ANR	807917	Symbol	LCMS_VERSION		807854						
ANR	807918	Symbol	Plugin -> Type		807854						
ANR	807919	Symbol	* Plugin		807854						
ANR	807920	Symbol	cmsPluginMagicNumber		807854						
ANR	807921	Symbol	Plugin		807854						
ANR	807922	Symbol	Plugin -> Magic		807854						
ANR	807923	Function	cmsCreateContext	748:0:21293:23534							
ANR	807924	FunctionDef	"cmsCreateContext (void * Plugin , void * UserData)"		807923	0					
ANR	807925	CompoundStatement		749:0:21361:23534	807923	0					
ANR	807926	IdentifierDeclStatement	struct _cmsContext_struct * ctx ;	750:4:21367:21397	807923	0	True				
ANR	807927	IdentifierDecl	* ctx		807923	0					
ANR	807928	IdentifierDeclType	struct _cmsContext_struct *		807923	0					
ANR	807929	Identifier	ctx		807923	1					
ANR	807930	IdentifierDeclStatement	struct _cmsContext_struct fakeContext ;	751:4:21403:21441	807923	1	True				
ANR	807931	IdentifierDecl	fakeContext		807923	0					
ANR	807932	IdentifierDeclType	struct _cmsContext_struct		807923	0					
ANR	807933	Identifier	fakeContext		807923	1					
ANR	807934	ExpressionStatement	"_cmsInstallAllocFunctions ( _cmsFindMemoryPlugin ( Plugin ) , & fakeContext . DefaultMemoryManager )"	753:4:21456:21546	807923	2	True				
ANR	807935	CallExpression	"_cmsInstallAllocFunctions ( _cmsFindMemoryPlugin ( Plugin ) , & fakeContext . DefaultMemoryManager )"		807923	0					
ANR	807936	Callee	_cmsInstallAllocFunctions		807923	0					
ANR	807937	Identifier	_cmsInstallAllocFunctions		807923	0					
ANR	807938	ArgumentList	_cmsFindMemoryPlugin ( Plugin )		807923	1					
ANR	807939	Argument	_cmsFindMemoryPlugin ( Plugin )		807923	0					
ANR	807940	CallExpression	_cmsFindMemoryPlugin ( Plugin )		807923	0					
ANR	807941	Callee	_cmsFindMemoryPlugin		807923	0					
ANR	807942	Identifier	_cmsFindMemoryPlugin		807923	0					
ANR	807943	ArgumentList	Plugin		807923	1					
ANR	807944	Argument	Plugin		807923	0					
ANR	807945	Identifier	Plugin		807923	0					
ANR	807946	Argument	& fakeContext . DefaultMemoryManager		807923	1					
ANR	807947	UnaryOperationExpression	& fakeContext . DefaultMemoryManager		807923	0					
ANR	807948	UnaryOperator	&		807923	0					
ANR	807949	MemberAccess	fakeContext . DefaultMemoryManager		807923	1					
ANR	807950	Identifier	fakeContext		807923	0					
ANR	807951	Identifier	DefaultMemoryManager		807923	1					
ANR	807952	ExpressionStatement	fakeContext . chunks [ UserPtr ] = UserData	755:4:21557:21599	807923	3	True				
ANR	807953	AssignmentExpression	fakeContext . chunks [ UserPtr ] = UserData		807923	0		=			
ANR	807954	ArrayIndexing	fakeContext . chunks [ UserPtr ]		807923	0					
ANR	807955	MemberAccess	fakeContext . chunks		807923	0					
ANR	807956	Identifier	fakeContext		807923	0					
ANR	807957	Identifier	chunks		807923	1					
ANR	807958	Identifier	UserPtr		807923	1					
ANR	807959	Identifier	UserData		807923	1					
ANR	807960	ExpressionStatement	fakeContext . chunks [ MemPlugin ] = & fakeContext . DefaultMemoryManager	756:4:21605:21672	807923	4	True				
ANR	807961	AssignmentExpression	fakeContext . chunks [ MemPlugin ] = & fakeContext . DefaultMemoryManager		807923	0		=			
ANR	807962	ArrayIndexing	fakeContext . chunks [ MemPlugin ]		807923	0					
ANR	807963	MemberAccess	fakeContext . chunks		807923	0					
ANR	807964	Identifier	fakeContext		807923	0					
ANR	807965	Identifier	chunks		807923	1					
ANR	807966	Identifier	MemPlugin		807923	1					
ANR	807967	UnaryOperationExpression	& fakeContext . DefaultMemoryManager		807923	1					
ANR	807968	UnaryOperator	&		807923	0					
ANR	807969	MemberAccess	fakeContext . DefaultMemoryManager		807923	1					
ANR	807970	Identifier	fakeContext		807923	0					
ANR	807971	Identifier	DefaultMemoryManager		807923	1					
ANR	807972	ExpressionStatement	"ctx = ( struct _cmsContext_struct * ) _cmsMalloc ( & fakeContext , sizeof ( struct _cmsContext_struct ) )"	759:4:21716:21810	807923	5	True				
ANR	807973	AssignmentExpression	"ctx = ( struct _cmsContext_struct * ) _cmsMalloc ( & fakeContext , sizeof ( struct _cmsContext_struct ) )"		807923	0		=			
ANR	807974	Identifier	ctx		807923	0					
ANR	807975	CastExpression	"( struct _cmsContext_struct * ) _cmsMalloc ( & fakeContext , sizeof ( struct _cmsContext_struct ) )"		807923	1					
ANR	807976	CastTarget	struct _cmsContext_struct *		807923	0					
ANR	807977	CallExpression	"_cmsMalloc ( & fakeContext , sizeof ( struct _cmsContext_struct ) )"		807923	1					
ANR	807978	Callee	_cmsMalloc		807923	0					
ANR	807979	Identifier	_cmsMalloc		807923	0					
ANR	807980	ArgumentList	& fakeContext		807923	1					
ANR	807981	Argument	& fakeContext		807923	0					
ANR	807982	UnaryOperationExpression	& fakeContext		807923	0					
ANR	807983	UnaryOperator	&		807923	0					
ANR	807984	Identifier	fakeContext		807923	1					
ANR	807985	Argument	sizeof ( struct _cmsContext_struct )		807923	1					
ANR	807986	SizeofExpression	sizeof ( struct _cmsContext_struct )		807923	0					
ANR	807987	Sizeof	sizeof		807923	0					
ANR	807988	SizeofOperand	struct _cmsContext_struct		807923	1					
ANR	807989	IfStatement	if ( ctx == NULL )		807923	6					
ANR	807990	Condition	ctx == NULL	760:8:21820:21830	807923	0	True				
ANR	807991	EqualityExpression	ctx == NULL		807923	0		==			
ANR	807992	Identifier	ctx		807923	0					
ANR	807993	Identifier	NULL		807923	1					
ANR	807994	ReturnStatement	return NULL ;	761:8:21844:21855	807923	1	True				
ANR	807995	Identifier	NULL		807923	0					
ANR	807996	ExpressionStatement	"memset ( ctx , 0 , sizeof ( struct _cmsContext_struct ) )"	764:4:21949:21998	807923	7	True				
ANR	807997	CallExpression	"memset ( ctx , 0 , sizeof ( struct _cmsContext_struct ) )"		807923	0					
ANR	807998	Callee	memset		807923	0					
ANR	807999	Identifier	memset		807923	0					
ANR	808000	ArgumentList	ctx		807923	1					
ANR	808001	Argument	ctx		807923	0					
ANR	808002	Identifier	ctx		807923	0					
ANR	808003	Argument	0		807923	1					
ANR	808004	PrimaryExpression	0		807923	0					
ANR	808005	Argument	sizeof ( struct _cmsContext_struct )		807923	2					
ANR	808006	SizeofExpression	sizeof ( struct _cmsContext_struct )		807923	0					
ANR	808007	Sizeof	sizeof		807923	0					
ANR	808008	SizeofOperand	struct _cmsContext_struct		807923	1					
ANR	808009	ExpressionStatement	"memcpy ( & ctx -> DefaultMemoryManager , & fakeContext . DefaultMemoryManager , sizeof ( _cmsMemPluginChunk ) )"	767:4:22032:22129	807923	8	True				
ANR	808010	CallExpression	"memcpy ( & ctx -> DefaultMemoryManager , & fakeContext . DefaultMemoryManager , sizeof ( _cmsMemPluginChunk ) )"		807923	0					
ANR	808011	Callee	memcpy		807923	0					
ANR	808012	Identifier	memcpy		807923	0					
ANR	808013	ArgumentList	& ctx -> DefaultMemoryManager		807923	1					
ANR	808014	Argument	& ctx -> DefaultMemoryManager		807923	0					
ANR	808015	UnaryOperationExpression	& ctx -> DefaultMemoryManager		807923	0					
ANR	808016	UnaryOperator	&		807923	0					
ANR	808017	PtrMemberAccess	ctx -> DefaultMemoryManager		807923	1					
ANR	808018	Identifier	ctx		807923	0					
ANR	808019	Identifier	DefaultMemoryManager		807923	1					
ANR	808020	Argument	& fakeContext . DefaultMemoryManager		807923	1					
ANR	808021	UnaryOperationExpression	& fakeContext . DefaultMemoryManager		807923	0					
ANR	808022	UnaryOperator	&		807923	0					
ANR	808023	MemberAccess	fakeContext . DefaultMemoryManager		807923	1					
ANR	808024	Identifier	fakeContext		807923	0					
ANR	808025	Identifier	DefaultMemoryManager		807923	1					
ANR	808026	Argument	sizeof ( _cmsMemPluginChunk )		807923	2					
ANR	808027	SizeofExpression	sizeof ( _cmsMemPluginChunk )		807923	0					
ANR	808028	Sizeof	sizeof		807923	0					
ANR	808029	SizeofOperand	_cmsMemPluginChunk		807923	1					
ANR	808030	ExpressionStatement	_cmsEnterCriticalSectionPrimitive ( & _cmsContextPoolHeadMutex )	770:4:22194:22254	807923	9	True				
ANR	808031	CallExpression	_cmsEnterCriticalSectionPrimitive ( & _cmsContextPoolHeadMutex )		807923	0					
ANR	808032	Callee	_cmsEnterCriticalSectionPrimitive		807923	0					
ANR	808033	Identifier	_cmsEnterCriticalSectionPrimitive		807923	0					
ANR	808034	ArgumentList	& _cmsContextPoolHeadMutex		807923	1					
ANR	808035	Argument	& _cmsContextPoolHeadMutex		807923	0					
ANR	808036	UnaryOperationExpression	& _cmsContextPoolHeadMutex		807923	0					
ANR	808037	UnaryOperator	&		807923	0					
ANR	808038	Identifier	_cmsContextPoolHeadMutex		807923	1					
ANR	808039	ExpressionStatement	ctx -> Next = _cmsContextPoolHead	771:7:22263:22295	807923	10	True				
ANR	808040	AssignmentExpression	ctx -> Next = _cmsContextPoolHead		807923	0		=			
ANR	808041	PtrMemberAccess	ctx -> Next		807923	0					
ANR	808042	Identifier	ctx		807923	0					
ANR	808043	Identifier	Next		807923	1					
ANR	808044	Identifier	_cmsContextPoolHead		807923	1					
ANR	808045	ExpressionStatement	_cmsContextPoolHead = ctx	772:7:22304:22329	807923	11	True				
ANR	808046	AssignmentExpression	_cmsContextPoolHead = ctx		807923	0		=			
ANR	808047	Identifier	_cmsContextPoolHead		807923	0					
ANR	808048	Identifier	ctx		807923	1					
ANR	808049	ExpressionStatement	_cmsLeaveCriticalSectionPrimitive ( & _cmsContextPoolHeadMutex )	773:4:22335:22395	807923	12	True				
ANR	808050	CallExpression	_cmsLeaveCriticalSectionPrimitive ( & _cmsContextPoolHeadMutex )		807923	0					
ANR	808051	Callee	_cmsLeaveCriticalSectionPrimitive		807923	0					
ANR	808052	Identifier	_cmsLeaveCriticalSectionPrimitive		807923	0					
ANR	808053	ArgumentList	& _cmsContextPoolHeadMutex		807923	1					
ANR	808054	Argument	& _cmsContextPoolHeadMutex		807923	0					
ANR	808055	UnaryOperationExpression	& _cmsContextPoolHeadMutex		807923	0					
ANR	808056	UnaryOperator	&		807923	0					
ANR	808057	Identifier	_cmsContextPoolHeadMutex		807923	1					
ANR	808058	ExpressionStatement	ctx -> chunks [ UserPtr ] = UserData	775:4:22402:22438	807923	13	True				
ANR	808059	AssignmentExpression	ctx -> chunks [ UserPtr ] = UserData		807923	0		=			
ANR	808060	ArrayIndexing	ctx -> chunks [ UserPtr ]		807923	0					
ANR	808061	PtrMemberAccess	ctx -> chunks		807923	0					
ANR	808062	Identifier	ctx		807923	0					
ANR	808063	Identifier	chunks		807923	1					
ANR	808064	Identifier	UserPtr		807923	1					
ANR	808065	Identifier	UserData		807923	1					
ANR	808066	ExpressionStatement	ctx -> chunks [ MemPlugin ] = & ctx -> DefaultMemoryManager	776:4:22444:22498	807923	14	True				
ANR	808067	AssignmentExpression	ctx -> chunks [ MemPlugin ] = & ctx -> DefaultMemoryManager		807923	0		=			
ANR	808068	ArrayIndexing	ctx -> chunks [ MemPlugin ]		807923	0					
ANR	808069	PtrMemberAccess	ctx -> chunks		807923	0					
ANR	808070	Identifier	ctx		807923	0					
ANR	808071	Identifier	chunks		807923	1					
ANR	808072	Identifier	MemPlugin		807923	1					
ANR	808073	UnaryOperationExpression	& ctx -> DefaultMemoryManager		807923	1					
ANR	808074	UnaryOperator	&		807923	0					
ANR	808075	PtrMemberAccess	ctx -> DefaultMemoryManager		807923	1					
ANR	808076	Identifier	ctx		807923	0					
ANR	808077	Identifier	DefaultMemoryManager		807923	1					
ANR	808078	ExpressionStatement	"ctx -> MemPool = _cmsCreateSubAlloc ( ctx , 22 * sizeof ( void * ) )"	779:4:22576:22635	807923	15	True				
ANR	808079	AssignmentExpression	"ctx -> MemPool = _cmsCreateSubAlloc ( ctx , 22 * sizeof ( void * ) )"		807923	0		=			
ANR	808080	PtrMemberAccess	ctx -> MemPool		807923	0					
ANR	808081	Identifier	ctx		807923	0					
ANR	808082	Identifier	MemPool		807923	1					
ANR	808083	CallExpression	"_cmsCreateSubAlloc ( ctx , 22 * sizeof ( void * ) )"		807923	1					
ANR	808084	Callee	_cmsCreateSubAlloc		807923	0					
ANR	808085	Identifier	_cmsCreateSubAlloc		807923	0					
ANR	808086	ArgumentList	ctx		807923	1					
ANR	808087	Argument	ctx		807923	0					
ANR	808088	Identifier	ctx		807923	0					
ANR	808089	Argument	22 * sizeof ( void * )		807923	1					
ANR	808090	MultiplicativeExpression	22 * sizeof ( void * )		807923	0		*			
ANR	808091	PrimaryExpression	22		807923	0					
ANR	808092	SizeofExpression	sizeof ( void * )		807923	1					
ANR	808093	Sizeof	sizeof		807923	0					
ANR	808094	SizeofOperand	void *		807923	1					
ANR	808095	IfStatement	if ( ctx -> MemPool == NULL )		807923	16					
ANR	808096	Condition	ctx -> MemPool == NULL	780:8:22680:22700	807923	0	True				
ANR	808097	EqualityExpression	ctx -> MemPool == NULL		807923	0		==			
ANR	808098	PtrMemberAccess	ctx -> MemPool		807923	0					
ANR	808099	Identifier	ctx		807923	0					
ANR	808100	Identifier	MemPool		807923	1					
ANR	808101	Identifier	NULL		807923	1					
ANR	808102	CompoundStatement		32:31:1341:1341	807923	1					
ANR	808103	ExpressionStatement	cmsDeleteContext ( ctx )	782:9:22715:22736	807923	0	True				
ANR	808104	CallExpression	cmsDeleteContext ( ctx )		807923	0					
ANR	808105	Callee	cmsDeleteContext		807923	0					
ANR	808106	Identifier	cmsDeleteContext		807923	0					
ANR	808107	ArgumentList	ctx		807923	1					
ANR	808108	Argument	ctx		807923	0					
ANR	808109	Identifier	ctx		807923	0					
ANR	808110	ReturnStatement	return NULL ;	783:8:22746:22757	807923	1	True				
ANR	808111	Identifier	NULL		807923	0					
ANR	808112	ExpressionStatement	"_cmsAllocLogErrorChunk ( ctx , NULL )"	786:4:22770:22803	807923	17	True				
ANR	808113	CallExpression	"_cmsAllocLogErrorChunk ( ctx , NULL )"		807923	0					
ANR	808114	Callee	_cmsAllocLogErrorChunk		807923	0					
ANR	808115	Identifier	_cmsAllocLogErrorChunk		807923	0					
ANR	808116	ArgumentList	ctx		807923	1					
ANR	808117	Argument	ctx		807923	0					
ANR	808118	Identifier	ctx		807923	0					
ANR	808119	Argument	NULL		807923	1					
ANR	808120	Identifier	NULL		807923	0					
ANR	808121	ExpressionStatement	"_cmsAllocAlarmCodesChunk ( ctx , NULL )"	787:4:22809:22844	807923	18	True				
ANR	808122	CallExpression	"_cmsAllocAlarmCodesChunk ( ctx , NULL )"		807923	0					
ANR	808123	Callee	_cmsAllocAlarmCodesChunk		807923	0					
ANR	808124	Identifier	_cmsAllocAlarmCodesChunk		807923	0					
ANR	808125	ArgumentList	ctx		807923	1					
ANR	808126	Argument	ctx		807923	0					
ANR	808127	Identifier	ctx		807923	0					
ANR	808128	Argument	NULL		807923	1					
ANR	808129	Identifier	NULL		807923	0					
ANR	808130	ExpressionStatement	"_cmsAllocAdaptationStateChunk ( ctx , NULL )"	788:4:22850:22890	807923	19	True				
ANR	808131	CallExpression	"_cmsAllocAdaptationStateChunk ( ctx , NULL )"		807923	0					
ANR	808132	Callee	_cmsAllocAdaptationStateChunk		807923	0					
ANR	808133	Identifier	_cmsAllocAdaptationStateChunk		807923	0					
ANR	808134	ArgumentList	ctx		807923	1					
ANR	808135	Argument	ctx		807923	0					
ANR	808136	Identifier	ctx		807923	0					
ANR	808137	Argument	NULL		807923	1					
ANR	808138	Identifier	NULL		807923	0					
ANR	808139	ExpressionStatement	"_cmsAllocMemPluginChunk ( ctx , NULL )"	789:4:22896:22930	807923	20	True				
ANR	808140	CallExpression	"_cmsAllocMemPluginChunk ( ctx , NULL )"		807923	0					
ANR	808141	Callee	_cmsAllocMemPluginChunk		807923	0					
ANR	808142	Identifier	_cmsAllocMemPluginChunk		807923	0					
ANR	808143	ArgumentList	ctx		807923	1					
ANR	808144	Argument	ctx		807923	0					
ANR	808145	Identifier	ctx		807923	0					
ANR	808146	Argument	NULL		807923	1					
ANR	808147	Identifier	NULL		807923	0					
ANR	808148	ExpressionStatement	"_cmsAllocInterpPluginChunk ( ctx , NULL )"	790:4:22936:22973	807923	21	True				
ANR	808149	CallExpression	"_cmsAllocInterpPluginChunk ( ctx , NULL )"		807923	0					
ANR	808150	Callee	_cmsAllocInterpPluginChunk		807923	0					
ANR	808151	Identifier	_cmsAllocInterpPluginChunk		807923	0					
ANR	808152	ArgumentList	ctx		807923	1					
ANR	808153	Argument	ctx		807923	0					
ANR	808154	Identifier	ctx		807923	0					
ANR	808155	Argument	NULL		807923	1					
ANR	808156	Identifier	NULL		807923	0					
ANR	808157	ExpressionStatement	"_cmsAllocCurvesPluginChunk ( ctx , NULL )"	791:4:22979:23016	807923	22	True				
ANR	808158	CallExpression	"_cmsAllocCurvesPluginChunk ( ctx , NULL )"		807923	0					
ANR	808159	Callee	_cmsAllocCurvesPluginChunk		807923	0					
ANR	808160	Identifier	_cmsAllocCurvesPluginChunk		807923	0					
ANR	808161	ArgumentList	ctx		807923	1					
ANR	808162	Argument	ctx		807923	0					
ANR	808163	Identifier	ctx		807923	0					
ANR	808164	Argument	NULL		807923	1					
ANR	808165	Identifier	NULL		807923	0					
ANR	808166	ExpressionStatement	"_cmsAllocFormattersPluginChunk ( ctx , NULL )"	792:4:23022:23063	807923	23	True				
ANR	808167	CallExpression	"_cmsAllocFormattersPluginChunk ( ctx , NULL )"		807923	0					
ANR	808168	Callee	_cmsAllocFormattersPluginChunk		807923	0					
ANR	808169	Identifier	_cmsAllocFormattersPluginChunk		807923	0					
ANR	808170	ArgumentList	ctx		807923	1					
ANR	808171	Argument	ctx		807923	0					
ANR	808172	Identifier	ctx		807923	0					
ANR	808173	Argument	NULL		807923	1					
ANR	808174	Identifier	NULL		807923	0					
ANR	808175	ExpressionStatement	"_cmsAllocTagTypePluginChunk ( ctx , NULL )"	793:4:23069:23107	807923	24	True				
ANR	808176	CallExpression	"_cmsAllocTagTypePluginChunk ( ctx , NULL )"		807923	0					
ANR	808177	Callee	_cmsAllocTagTypePluginChunk		807923	0					
ANR	808178	Identifier	_cmsAllocTagTypePluginChunk		807923	0					
ANR	808179	ArgumentList	ctx		807923	1					
ANR	808180	Argument	ctx		807923	0					
ANR	808181	Identifier	ctx		807923	0					
ANR	808182	Argument	NULL		807923	1					
ANR	808183	Identifier	NULL		807923	0					
ANR	808184	ExpressionStatement	"_cmsAllocMPETypePluginChunk ( ctx , NULL )"	794:4:23113:23151	807923	25	True				
ANR	808185	CallExpression	"_cmsAllocMPETypePluginChunk ( ctx , NULL )"		807923	0					
ANR	808186	Callee	_cmsAllocMPETypePluginChunk		807923	0					
ANR	808187	Identifier	_cmsAllocMPETypePluginChunk		807923	0					
ANR	808188	ArgumentList	ctx		807923	1					
ANR	808189	Argument	ctx		807923	0					
ANR	808190	Identifier	ctx		807923	0					
ANR	808191	Argument	NULL		807923	1					
ANR	808192	Identifier	NULL		807923	0					
ANR	808193	ExpressionStatement	"_cmsAllocTagPluginChunk ( ctx , NULL )"	795:4:23157:23191	807923	26	True				
ANR	808194	CallExpression	"_cmsAllocTagPluginChunk ( ctx , NULL )"		807923	0					
ANR	808195	Callee	_cmsAllocTagPluginChunk		807923	0					
ANR	808196	Identifier	_cmsAllocTagPluginChunk		807923	0					
ANR	808197	ArgumentList	ctx		807923	1					
ANR	808198	Argument	ctx		807923	0					
ANR	808199	Identifier	ctx		807923	0					
ANR	808200	Argument	NULL		807923	1					
ANR	808201	Identifier	NULL		807923	0					
ANR	808202	ExpressionStatement	"_cmsAllocIntentsPluginChunk ( ctx , NULL )"	796:4:23197:23235	807923	27	True				
ANR	808203	CallExpression	"_cmsAllocIntentsPluginChunk ( ctx , NULL )"		807923	0					
ANR	808204	Callee	_cmsAllocIntentsPluginChunk		807923	0					
ANR	808205	Identifier	_cmsAllocIntentsPluginChunk		807923	0					
ANR	808206	ArgumentList	ctx		807923	1					
ANR	808207	Argument	ctx		807923	0					
ANR	808208	Identifier	ctx		807923	0					
ANR	808209	Argument	NULL		807923	1					
ANR	808210	Identifier	NULL		807923	0					
ANR	808211	ExpressionStatement	"_cmsAllocOptimizationPluginChunk ( ctx , NULL )"	797:4:23241:23284	807923	28	True				
ANR	808212	CallExpression	"_cmsAllocOptimizationPluginChunk ( ctx , NULL )"		807923	0					
ANR	808213	Callee	_cmsAllocOptimizationPluginChunk		807923	0					
ANR	808214	Identifier	_cmsAllocOptimizationPluginChunk		807923	0					
ANR	808215	ArgumentList	ctx		807923	1					
ANR	808216	Argument	ctx		807923	0					
ANR	808217	Identifier	ctx		807923	0					
ANR	808218	Argument	NULL		807923	1					
ANR	808219	Identifier	NULL		807923	0					
ANR	808220	ExpressionStatement	"_cmsAllocTransformPluginChunk ( ctx , NULL )"	798:4:23290:23330	807923	29	True				
ANR	808221	CallExpression	"_cmsAllocTransformPluginChunk ( ctx , NULL )"		807923	0					
ANR	808222	Callee	_cmsAllocTransformPluginChunk		807923	0					
ANR	808223	Identifier	_cmsAllocTransformPluginChunk		807923	0					
ANR	808224	ArgumentList	ctx		807923	1					
ANR	808225	Argument	ctx		807923	0					
ANR	808226	Identifier	ctx		807923	0					
ANR	808227	Argument	NULL		807923	1					
ANR	808228	Identifier	NULL		807923	0					
ANR	808229	ExpressionStatement	"_cmsAllocMutexPluginChunk ( ctx , NULL )"	799:4:23336:23372	807923	30	True				
ANR	808230	CallExpression	"_cmsAllocMutexPluginChunk ( ctx , NULL )"		807923	0					
ANR	808231	Callee	_cmsAllocMutexPluginChunk		807923	0					
ANR	808232	Identifier	_cmsAllocMutexPluginChunk		807923	0					
ANR	808233	ArgumentList	ctx		807923	1					
ANR	808234	Argument	ctx		807923	0					
ANR	808235	Identifier	ctx		807923	0					
ANR	808236	Argument	NULL		807923	1					
ANR	808237	Identifier	NULL		807923	0					
ANR	808238	IfStatement	"if ( ! cmsPluginTHR ( ctx , Plugin ) )"		807923	31					
ANR	808239	Condition	"! cmsPluginTHR ( ctx , Plugin )"	802:8:23409:23434	807923	0	True				
ANR	808240	UnaryOperationExpression	"! cmsPluginTHR ( ctx , Plugin )"		807923	0					
ANR	808241	UnaryOperator	!		807923	0					
ANR	808242	CallExpression	"cmsPluginTHR ( ctx , Plugin )"		807923	1					
ANR	808243	Callee	cmsPluginTHR		807923	0					
ANR	808244	Identifier	cmsPluginTHR		807923	0					
ANR	808245	ArgumentList	ctx		807923	1					
ANR	808246	Argument	ctx		807923	0					
ANR	808247	Identifier	ctx		807923	0					
ANR	808248	Argument	Plugin		807923	1					
ANR	808249	Identifier	Plugin		807923	0					
ANR	808250	CompoundStatement		54:36:2075:2075	807923	1					
ANR	808251	ExpressionStatement	cmsDeleteContext ( ctx )	804:8:23452:23473	807923	0	True				
ANR	808252	CallExpression	cmsDeleteContext ( ctx )		807923	0					
ANR	808253	Callee	cmsDeleteContext		807923	0					
ANR	808254	Identifier	cmsDeleteContext		807923	0					
ANR	808255	ArgumentList	ctx		807923	1					
ANR	808256	Argument	ctx		807923	0					
ANR	808257	Identifier	ctx		807923	0					
ANR	808258	ReturnStatement	return NULL ;	805:8:23483:23494	807923	1	True				
ANR	808259	Identifier	NULL		807923	0					
ANR	808260	ReturnStatement	return ( cmsContext ) ctx ;	808:4:23507:23530	807923	32	True				
ANR	808261	CastExpression	( cmsContext ) ctx		807923	0					
ANR	808262	CastTarget	cmsContext		807923	0					
ANR	808263	Identifier	ctx		807923	1					
ANR	808264	ReturnType	cmsContext CMSEXPORT		807923	1					
ANR	808265	Identifier	cmsCreateContext		807923	2					
ANR	808266	ParameterList	"void * Plugin , void * UserData"		807923	3					
ANR	808267	Parameter	void * Plugin	748:38:21331:21342	807923	0	True				
ANR	808268	ParameterType	void *		807923	0					
ANR	808269	Identifier	Plugin		807923	1					
ANR	808270	Parameter	void * UserData	748:52:21345:21358	807923	1	True				
ANR	808271	ParameterType	void *		807923	0					
ANR	808272	Identifier	UserData		807923	1					
ANR	808273	CFGEntryNode	ENTRY		807923		True				
ANR	808274	CFGExitNode	EXIT		807923		True				
ANR	808275	Symbol	* MemPlugin		807923						
ANR	808276	Symbol	* fakeContext . chunks		807923						
ANR	808277	Symbol	UserData		807923						
ANR	808278	Symbol	fakeContext		807923						
ANR	808279	Symbol	& ctx -> DefaultMemoryManager		807923						
ANR	808280	Symbol	_cmsFindMemoryPlugin		807923						
ANR	808281	Symbol	MemPlugin		807923						
ANR	808282	Symbol	& fakeContext		807923						
ANR	808283	Symbol	* UserPtr		807923						
ANR	808284	Symbol	fakeContext . chunks		807923						
ANR	808285	Symbol	_cmsMalloc		807923						
ANR	808286	Symbol	* fakeContext		807923						
ANR	808287	Symbol	NULL		807923						
ANR	808288	Symbol	ctx		807923						
ANR	808289	Symbol	cmsPluginTHR		807923						
ANR	808290	Symbol	* ctx		807923						
ANR	808291	Symbol	UserPtr		807923						
ANR	808292	Symbol	ctx -> Next		807923						
ANR	808293	Symbol	ctx -> chunks		807923						
ANR	808294	Symbol	_cmsContextPoolHead		807923						
ANR	808295	Symbol	* ctx -> chunks		807923						
ANR	808296	Symbol	* * ctx		807923						
ANR	808297	Symbol	ctx -> MemPool		807923						
ANR	808298	Symbol	& _cmsContextPoolHeadMutex		807923						
ANR	808299	Symbol	_cmsCreateSubAlloc		807923						
ANR	808300	Symbol	Plugin		807923						
ANR	808301	Symbol	& fakeContext . DefaultMemoryManager		807923						
ANR	808302	Function	cmsDupContext	814:0:23707:25688							
ANR	808303	FunctionDef	"cmsDupContext (cmsContext ContextID , void * NewUserData)"		808302	0					
ANR	808304	CompoundStatement		815:0:23783:25688	808302	0					
ANR	808305	IdentifierDeclStatement	int i ;	816:4:23789:23794	808302	0	True				
ANR	808306	IdentifierDecl	i		808302	0					
ANR	808307	IdentifierDeclType	int		808302	0					
ANR	808308	Identifier	i		808302	1					
ANR	808309	IdentifierDeclStatement	struct _cmsContext_struct * ctx ;	817:4:23800:23830	808302	1	True				
ANR	808310	IdentifierDecl	* ctx		808302	0					
ANR	808311	IdentifierDeclType	struct _cmsContext_struct *		808302	0					
ANR	808312	Identifier	ctx		808302	1					
ANR	808313	IdentifierDeclStatement	const struct _cmsContext_struct * src = _cmsGetContext ( ContextID ) ;	818:4:23836:23900	808302	2	True				
ANR	808314	IdentifierDecl	* src = _cmsGetContext ( ContextID )		808302	0					
ANR	808315	IdentifierDeclType	const struct _cmsContext_struct *		808302	0					
ANR	808316	Identifier	src		808302	1					
ANR	808317	AssignmentExpression	* src = _cmsGetContext ( ContextID )		808302	2		=			
ANR	808318	Identifier	src		808302	0					
ANR	808319	CallExpression	_cmsGetContext ( ContextID )		808302	1					
ANR	808320	Callee	_cmsGetContext		808302	0					
ANR	808321	Identifier	_cmsGetContext		808302	0					
ANR	808322	ArgumentList	ContextID		808302	1					
ANR	808323	Argument	ContextID		808302	0					
ANR	808324	Identifier	ContextID		808302	0					
ANR	808325	IdentifierDeclStatement	void * userData = ( NewUserData != NULL ) ? NewUserData : src -> chunks [ UserPtr ] ;	820:4:23907:23984	808302	3	True				
ANR	808326	IdentifierDecl	* userData = ( NewUserData != NULL ) ? NewUserData : src -> chunks [ UserPtr ]		808302	0					
ANR	808327	IdentifierDeclType	void *		808302	0					
ANR	808328	Identifier	userData		808302	1					
ANR	808329	AssignmentExpression	* userData = ( NewUserData != NULL ) ? NewUserData : src -> chunks [ UserPtr ]		808302	2		=			
ANR	808330	Identifier	userData		808302	0					
ANR	808331	ConditionalExpression	( NewUserData != NULL ) ? NewUserData : src -> chunks [ UserPtr ]		808302	1					
ANR	808332	Condition	NewUserData != NULL		808302	0					
ANR	808333	EqualityExpression	NewUserData != NULL		808302	0		!=			
ANR	808334	Identifier	NewUserData		808302	0					
ANR	808335	Identifier	NULL		808302	1					
ANR	808336	Identifier	NewUserData		808302	1					
ANR	808337	ArrayIndexing	src -> chunks [ UserPtr ]		808302	2					
ANR	808338	PtrMemberAccess	src -> chunks		808302	0					
ANR	808339	Identifier	src		808302	0					
ANR	808340	Identifier	chunks		808302	1					
ANR	808341	Identifier	UserPtr		808302	1					
ANR	808342	ExpressionStatement	"ctx = ( struct _cmsContext_struct * ) _cmsMalloc ( ContextID , sizeof ( struct _cmsContext_struct ) )"	823:4:24000:24091	808302	4	True				
ANR	808343	AssignmentExpression	"ctx = ( struct _cmsContext_struct * ) _cmsMalloc ( ContextID , sizeof ( struct _cmsContext_struct ) )"		808302	0		=			
ANR	808344	Identifier	ctx		808302	0					
ANR	808345	CastExpression	"( struct _cmsContext_struct * ) _cmsMalloc ( ContextID , sizeof ( struct _cmsContext_struct ) )"		808302	1					
ANR	808346	CastTarget	struct _cmsContext_struct *		808302	0					
ANR	808347	CallExpression	"_cmsMalloc ( ContextID , sizeof ( struct _cmsContext_struct ) )"		808302	1					
ANR	808348	Callee	_cmsMalloc		808302	0					
ANR	808349	Identifier	_cmsMalloc		808302	0					
ANR	808350	ArgumentList	ContextID		808302	1					
ANR	808351	Argument	ContextID		808302	0					
ANR	808352	Identifier	ContextID		808302	0					
ANR	808353	Argument	sizeof ( struct _cmsContext_struct )		808302	1					
ANR	808354	SizeofExpression	sizeof ( struct _cmsContext_struct )		808302	0					
ANR	808355	Sizeof	sizeof		808302	0					
ANR	808356	SizeofOperand	struct _cmsContext_struct		808302	1					
ANR	808357	IfStatement	if ( ctx == NULL )		808302	5					
ANR	808358	Condition	ctx == NULL	824:8:24101:24111	808302	0	True				
ANR	808359	EqualityExpression	ctx == NULL		808302	0		==			
ANR	808360	Identifier	ctx		808302	0					
ANR	808361	Identifier	NULL		808302	1					
ANR	808362	ReturnStatement	return NULL ;	825:8:24125:24136	808302	1	True				
ANR	808363	Identifier	NULL		808302	0					
ANR	808364	ExpressionStatement	"memcpy ( & ctx -> DefaultMemoryManager , & src -> DefaultMemoryManager , sizeof ( ctx -> DefaultMemoryManager ) )"	828:4:24219:24316	808302	6	True				
ANR	808365	CallExpression	"memcpy ( & ctx -> DefaultMemoryManager , & src -> DefaultMemoryManager , sizeof ( ctx -> DefaultMemoryManager ) )"		808302	0					
ANR	808366	Callee	memcpy		808302	0					
ANR	808367	Identifier	memcpy		808302	0					
ANR	808368	ArgumentList	& ctx -> DefaultMemoryManager		808302	1					
ANR	808369	Argument	& ctx -> DefaultMemoryManager		808302	0					
ANR	808370	UnaryOperationExpression	& ctx -> DefaultMemoryManager		808302	0					
ANR	808371	UnaryOperator	&		808302	0					
ANR	808372	PtrMemberAccess	ctx -> DefaultMemoryManager		808302	1					
ANR	808373	Identifier	ctx		808302	0					
ANR	808374	Identifier	DefaultMemoryManager		808302	1					
ANR	808375	Argument	& src -> DefaultMemoryManager		808302	1					
ANR	808376	UnaryOperationExpression	& src -> DefaultMemoryManager		808302	0					
ANR	808377	UnaryOperator	&		808302	0					
ANR	808378	PtrMemberAccess	src -> DefaultMemoryManager		808302	1					
ANR	808379	Identifier	src		808302	0					
ANR	808380	Identifier	DefaultMemoryManager		808302	1					
ANR	808381	Argument	sizeof ( ctx -> DefaultMemoryManager )		808302	2					
ANR	808382	SizeofExpression	sizeof ( ctx -> DefaultMemoryManager )		808302	0					
ANR	808383	Sizeof	sizeof		808302	0					
ANR	808384	PtrMemberAccess	ctx -> DefaultMemoryManager		808302	1					
ANR	808385	Identifier	ctx		808302	0					
ANR	808386	Identifier	DefaultMemoryManager		808302	1					
ANR	808387	ExpressionStatement	_cmsEnterCriticalSectionPrimitive ( & _cmsContextPoolHeadMutex )	831:4:24355:24415	808302	7	True				
ANR	808388	CallExpression	_cmsEnterCriticalSectionPrimitive ( & _cmsContextPoolHeadMutex )		808302	0					
ANR	808389	Callee	_cmsEnterCriticalSectionPrimitive		808302	0					
ANR	808390	Identifier	_cmsEnterCriticalSectionPrimitive		808302	0					
ANR	808391	ArgumentList	& _cmsContextPoolHeadMutex		808302	1					
ANR	808392	Argument	& _cmsContextPoolHeadMutex		808302	0					
ANR	808393	UnaryOperationExpression	& _cmsContextPoolHeadMutex		808302	0					
ANR	808394	UnaryOperator	&		808302	0					
ANR	808395	Identifier	_cmsContextPoolHeadMutex		808302	1					
ANR	808396	ExpressionStatement	ctx -> Next = _cmsContextPoolHead	832:7:24424:24456	808302	8	True				
ANR	808397	AssignmentExpression	ctx -> Next = _cmsContextPoolHead		808302	0		=			
ANR	808398	PtrMemberAccess	ctx -> Next		808302	0					
ANR	808399	Identifier	ctx		808302	0					
ANR	808400	Identifier	Next		808302	1					
ANR	808401	Identifier	_cmsContextPoolHead		808302	1					
ANR	808402	ExpressionStatement	_cmsContextPoolHead = ctx	833:7:24465:24490	808302	9	True				
ANR	808403	AssignmentExpression	_cmsContextPoolHead = ctx		808302	0		=			
ANR	808404	Identifier	_cmsContextPoolHead		808302	0					
ANR	808405	Identifier	ctx		808302	1					
ANR	808406	ExpressionStatement	_cmsLeaveCriticalSectionPrimitive ( & _cmsContextPoolHeadMutex )	834:4:24496:24556	808302	10	True				
ANR	808407	CallExpression	_cmsLeaveCriticalSectionPrimitive ( & _cmsContextPoolHeadMutex )		808302	0					
ANR	808408	Callee	_cmsLeaveCriticalSectionPrimitive		808302	0					
ANR	808409	Identifier	_cmsLeaveCriticalSectionPrimitive		808302	0					
ANR	808410	ArgumentList	& _cmsContextPoolHeadMutex		808302	1					
ANR	808411	Argument	& _cmsContextPoolHeadMutex		808302	0					
ANR	808412	UnaryOperationExpression	& _cmsContextPoolHeadMutex		808302	0					
ANR	808413	UnaryOperator	&		808302	0					
ANR	808414	Identifier	_cmsContextPoolHeadMutex		808302	1					
ANR	808415	ExpressionStatement	ctx -> chunks [ UserPtr ] = userData	836:4:24563:24598	808302	11	True				
ANR	808416	AssignmentExpression	ctx -> chunks [ UserPtr ] = userData		808302	0		=			
ANR	808417	ArrayIndexing	ctx -> chunks [ UserPtr ]		808302	0					
ANR	808418	PtrMemberAccess	ctx -> chunks		808302	0					
ANR	808419	Identifier	ctx		808302	0					
ANR	808420	Identifier	chunks		808302	1					
ANR	808421	Identifier	UserPtr		808302	1					
ANR	808422	Identifier	userData		808302	1					
ANR	808423	ExpressionStatement	ctx -> chunks [ MemPlugin ] = & ctx -> DefaultMemoryManager	837:4:24604:24657	808302	12	True				
ANR	808424	AssignmentExpression	ctx -> chunks [ MemPlugin ] = & ctx -> DefaultMemoryManager		808302	0		=			
ANR	808425	ArrayIndexing	ctx -> chunks [ MemPlugin ]		808302	0					
ANR	808426	PtrMemberAccess	ctx -> chunks		808302	0					
ANR	808427	Identifier	ctx		808302	0					
ANR	808428	Identifier	chunks		808302	1					
ANR	808429	Identifier	MemPlugin		808302	1					
ANR	808430	UnaryOperationExpression	& ctx -> DefaultMemoryManager		808302	1					
ANR	808431	UnaryOperator	&		808302	0					
ANR	808432	PtrMemberAccess	ctx -> DefaultMemoryManager		808302	1					
ANR	808433	Identifier	ctx		808302	0					
ANR	808434	Identifier	DefaultMemoryManager		808302	1					
ANR	808435	ExpressionStatement	"ctx -> MemPool = _cmsCreateSubAlloc ( ctx , 22 * sizeof ( void * ) )"	839:4:24664:24723	808302	13	True				
ANR	808436	AssignmentExpression	"ctx -> MemPool = _cmsCreateSubAlloc ( ctx , 22 * sizeof ( void * ) )"		808302	0		=			
ANR	808437	PtrMemberAccess	ctx -> MemPool		808302	0					
ANR	808438	Identifier	ctx		808302	0					
ANR	808439	Identifier	MemPool		808302	1					
ANR	808440	CallExpression	"_cmsCreateSubAlloc ( ctx , 22 * sizeof ( void * ) )"		808302	1					
ANR	808441	Callee	_cmsCreateSubAlloc		808302	0					
ANR	808442	Identifier	_cmsCreateSubAlloc		808302	0					
ANR	808443	ArgumentList	ctx		808302	1					
ANR	808444	Argument	ctx		808302	0					
ANR	808445	Identifier	ctx		808302	0					
ANR	808446	Argument	22 * sizeof ( void * )		808302	1					
ANR	808447	MultiplicativeExpression	22 * sizeof ( void * )		808302	0		*			
ANR	808448	PrimaryExpression	22		808302	0					
ANR	808449	SizeofExpression	sizeof ( void * )		808302	1					
ANR	808450	Sizeof	sizeof		808302	0					
ANR	808451	SizeofOperand	void *		808302	1					
ANR	808452	IfStatement	if ( ctx -> MemPool == NULL )		808302	14					
ANR	808453	Condition	ctx -> MemPool == NULL	840:8:24733:24753	808302	0	True				
ANR	808454	EqualityExpression	ctx -> MemPool == NULL		808302	0		==			
ANR	808455	PtrMemberAccess	ctx -> MemPool		808302	0					
ANR	808456	Identifier	ctx		808302	0					
ANR	808457	Identifier	MemPool		808302	1					
ANR	808458	Identifier	NULL		808302	1					
ANR	808459	CompoundStatement		26:31:972:972	808302	1					
ANR	808460	ExpressionStatement	cmsDeleteContext ( ctx )	842:9:24768:24789	808302	0	True				
ANR	808461	CallExpression	cmsDeleteContext ( ctx )		808302	0					
ANR	808462	Callee	cmsDeleteContext		808302	0					
ANR	808463	Identifier	cmsDeleteContext		808302	0					
ANR	808464	ArgumentList	ctx		808302	1					
ANR	808465	Argument	ctx		808302	0					
ANR	808466	Identifier	ctx		808302	0					
ANR	808467	ReturnStatement	return NULL ;	843:8:24799:24810	808302	1	True				
ANR	808468	Identifier	NULL		808302	0					
ANR	808469	ExpressionStatement	"_cmsAllocLogErrorChunk ( ctx , src )"	847:4:24860:24892	808302	15	True				
ANR	808470	CallExpression	"_cmsAllocLogErrorChunk ( ctx , src )"		808302	0					
ANR	808471	Callee	_cmsAllocLogErrorChunk		808302	0					
ANR	808472	Identifier	_cmsAllocLogErrorChunk		808302	0					
ANR	808473	ArgumentList	ctx		808302	1					
ANR	808474	Argument	ctx		808302	0					
ANR	808475	Identifier	ctx		808302	0					
ANR	808476	Argument	src		808302	1					
ANR	808477	Identifier	src		808302	0					
ANR	808478	ExpressionStatement	"_cmsAllocAlarmCodesChunk ( ctx , src )"	848:4:24898:24932	808302	16	True				
ANR	808479	CallExpression	"_cmsAllocAlarmCodesChunk ( ctx , src )"		808302	0					
ANR	808480	Callee	_cmsAllocAlarmCodesChunk		808302	0					
ANR	808481	Identifier	_cmsAllocAlarmCodesChunk		808302	0					
ANR	808482	ArgumentList	ctx		808302	1					
ANR	808483	Argument	ctx		808302	0					
ANR	808484	Identifier	ctx		808302	0					
ANR	808485	Argument	src		808302	1					
ANR	808486	Identifier	src		808302	0					
ANR	808487	ExpressionStatement	"_cmsAllocAdaptationStateChunk ( ctx , src )"	849:4:24938:24977	808302	17	True				
ANR	808488	CallExpression	"_cmsAllocAdaptationStateChunk ( ctx , src )"		808302	0					
ANR	808489	Callee	_cmsAllocAdaptationStateChunk		808302	0					
ANR	808490	Identifier	_cmsAllocAdaptationStateChunk		808302	0					
ANR	808491	ArgumentList	ctx		808302	1					
ANR	808492	Argument	ctx		808302	0					
ANR	808493	Identifier	ctx		808302	0					
ANR	808494	Argument	src		808302	1					
ANR	808495	Identifier	src		808302	0					
ANR	808496	ExpressionStatement	"_cmsAllocMemPluginChunk ( ctx , src )"	850:4:24983:25016	808302	18	True				
ANR	808497	CallExpression	"_cmsAllocMemPluginChunk ( ctx , src )"		808302	0					
ANR	808498	Callee	_cmsAllocMemPluginChunk		808302	0					
ANR	808499	Identifier	_cmsAllocMemPluginChunk		808302	0					
ANR	808500	ArgumentList	ctx		808302	1					
ANR	808501	Argument	ctx		808302	0					
ANR	808502	Identifier	ctx		808302	0					
ANR	808503	Argument	src		808302	1					
ANR	808504	Identifier	src		808302	0					
ANR	808505	ExpressionStatement	"_cmsAllocInterpPluginChunk ( ctx , src )"	851:4:25022:25058	808302	19	True				
ANR	808506	CallExpression	"_cmsAllocInterpPluginChunk ( ctx , src )"		808302	0					
ANR	808507	Callee	_cmsAllocInterpPluginChunk		808302	0					
ANR	808508	Identifier	_cmsAllocInterpPluginChunk		808302	0					
ANR	808509	ArgumentList	ctx		808302	1					
ANR	808510	Argument	ctx		808302	0					
ANR	808511	Identifier	ctx		808302	0					
ANR	808512	Argument	src		808302	1					
ANR	808513	Identifier	src		808302	0					
ANR	808514	ExpressionStatement	"_cmsAllocCurvesPluginChunk ( ctx , src )"	852:4:25064:25100	808302	20	True				
ANR	808515	CallExpression	"_cmsAllocCurvesPluginChunk ( ctx , src )"		808302	0					
ANR	808516	Callee	_cmsAllocCurvesPluginChunk		808302	0					
ANR	808517	Identifier	_cmsAllocCurvesPluginChunk		808302	0					
ANR	808518	ArgumentList	ctx		808302	1					
ANR	808519	Argument	ctx		808302	0					
ANR	808520	Identifier	ctx		808302	0					
ANR	808521	Argument	src		808302	1					
ANR	808522	Identifier	src		808302	0					
ANR	808523	ExpressionStatement	"_cmsAllocFormattersPluginChunk ( ctx , src )"	853:4:25106:25146	808302	21	True				
ANR	808524	CallExpression	"_cmsAllocFormattersPluginChunk ( ctx , src )"		808302	0					
ANR	808525	Callee	_cmsAllocFormattersPluginChunk		808302	0					
ANR	808526	Identifier	_cmsAllocFormattersPluginChunk		808302	0					
ANR	808527	ArgumentList	ctx		808302	1					
ANR	808528	Argument	ctx		808302	0					
ANR	808529	Identifier	ctx		808302	0					
ANR	808530	Argument	src		808302	1					
ANR	808531	Identifier	src		808302	0					
ANR	808532	ExpressionStatement	"_cmsAllocTagTypePluginChunk ( ctx , src )"	854:4:25152:25189	808302	22	True				
ANR	808533	CallExpression	"_cmsAllocTagTypePluginChunk ( ctx , src )"		808302	0					
ANR	808534	Callee	_cmsAllocTagTypePluginChunk		808302	0					
ANR	808535	Identifier	_cmsAllocTagTypePluginChunk		808302	0					
ANR	808536	ArgumentList	ctx		808302	1					
ANR	808537	Argument	ctx		808302	0					
ANR	808538	Identifier	ctx		808302	0					
ANR	808539	Argument	src		808302	1					
ANR	808540	Identifier	src		808302	0					
ANR	808541	ExpressionStatement	"_cmsAllocMPETypePluginChunk ( ctx , src )"	855:4:25195:25232	808302	23	True				
ANR	808542	CallExpression	"_cmsAllocMPETypePluginChunk ( ctx , src )"		808302	0					
ANR	808543	Callee	_cmsAllocMPETypePluginChunk		808302	0					
ANR	808544	Identifier	_cmsAllocMPETypePluginChunk		808302	0					
ANR	808545	ArgumentList	ctx		808302	1					
ANR	808546	Argument	ctx		808302	0					
ANR	808547	Identifier	ctx		808302	0					
ANR	808548	Argument	src		808302	1					
ANR	808549	Identifier	src		808302	0					
ANR	808550	ExpressionStatement	"_cmsAllocTagPluginChunk ( ctx , src )"	856:4:25238:25271	808302	24	True				
ANR	808551	CallExpression	"_cmsAllocTagPluginChunk ( ctx , src )"		808302	0					
ANR	808552	Callee	_cmsAllocTagPluginChunk		808302	0					
ANR	808553	Identifier	_cmsAllocTagPluginChunk		808302	0					
ANR	808554	ArgumentList	ctx		808302	1					
ANR	808555	Argument	ctx		808302	0					
ANR	808556	Identifier	ctx		808302	0					
ANR	808557	Argument	src		808302	1					
ANR	808558	Identifier	src		808302	0					
ANR	808559	ExpressionStatement	"_cmsAllocIntentsPluginChunk ( ctx , src )"	857:4:25277:25314	808302	25	True				
ANR	808560	CallExpression	"_cmsAllocIntentsPluginChunk ( ctx , src )"		808302	0					
ANR	808561	Callee	_cmsAllocIntentsPluginChunk		808302	0					
ANR	808562	Identifier	_cmsAllocIntentsPluginChunk		808302	0					
ANR	808563	ArgumentList	ctx		808302	1					
ANR	808564	Argument	ctx		808302	0					
ANR	808565	Identifier	ctx		808302	0					
ANR	808566	Argument	src		808302	1					
ANR	808567	Identifier	src		808302	0					
ANR	808568	ExpressionStatement	"_cmsAllocOptimizationPluginChunk ( ctx , src )"	858:4:25320:25362	808302	26	True				
ANR	808569	CallExpression	"_cmsAllocOptimizationPluginChunk ( ctx , src )"		808302	0					
ANR	808570	Callee	_cmsAllocOptimizationPluginChunk		808302	0					
ANR	808571	Identifier	_cmsAllocOptimizationPluginChunk		808302	0					
ANR	808572	ArgumentList	ctx		808302	1					
ANR	808573	Argument	ctx		808302	0					
ANR	808574	Identifier	ctx		808302	0					
ANR	808575	Argument	src		808302	1					
ANR	808576	Identifier	src		808302	0					
ANR	808577	ExpressionStatement	"_cmsAllocTransformPluginChunk ( ctx , src )"	859:4:25368:25407	808302	27	True				
ANR	808578	CallExpression	"_cmsAllocTransformPluginChunk ( ctx , src )"		808302	0					
ANR	808579	Callee	_cmsAllocTransformPluginChunk		808302	0					
ANR	808580	Identifier	_cmsAllocTransformPluginChunk		808302	0					
ANR	808581	ArgumentList	ctx		808302	1					
ANR	808582	Argument	ctx		808302	0					
ANR	808583	Identifier	ctx		808302	0					
ANR	808584	Argument	src		808302	1					
ANR	808585	Identifier	src		808302	0					
ANR	808586	ExpressionStatement	"_cmsAllocMutexPluginChunk ( ctx , src )"	860:4:25413:25448	808302	28	True				
ANR	808587	CallExpression	"_cmsAllocMutexPluginChunk ( ctx , src )"		808302	0					
ANR	808588	Callee	_cmsAllocMutexPluginChunk		808302	0					
ANR	808589	Identifier	_cmsAllocMutexPluginChunk		808302	0					
ANR	808590	ArgumentList	ctx		808302	1					
ANR	808591	Argument	ctx		808302	0					
ANR	808592	Identifier	ctx		808302	0					
ANR	808593	Argument	src		808302	1					
ANR	808594	Identifier	src		808302	0					
ANR	808595	ForStatement	for ( i = Logger ; i < MemoryClientMax ; i ++ )		808302	29					
ANR	808596	ForInit	i = Logger ;	863:9:25491:25499	808302	0	True				
ANR	808597	AssignmentExpression	i = Logger		808302	0		=			
ANR	808598	Identifier	i		808302	0					
ANR	808599	Identifier	Logger		808302	1					
ANR	808600	Condition	i < MemoryClientMax	863:19:25501:25519	808302	1	True				
ANR	808601	RelationalExpression	i < MemoryClientMax		808302	0		<			
ANR	808602	Identifier	i		808302	0					
ANR	808603	Identifier	MemoryClientMax		808302	1					
ANR	808604	PostIncDecOperationExpression	i ++	863:40:25522:25524	808302	2	True				
ANR	808605	Identifier	i		808302	0					
ANR	808606	IncDec	++		808302	1					
ANR	808607	CompoundStatement		49:45:1743:1743	808302	3					
ANR	808608	IfStatement	if ( src -> chunks [ i ] == NULL )		808302	0					
ANR	808609	Condition	src -> chunks [ i ] == NULL	865:12:25542:25564	808302	0	True				
ANR	808610	EqualityExpression	src -> chunks [ i ] == NULL		808302	0		==			
ANR	808611	ArrayIndexing	src -> chunks [ i ]		808302	0					
ANR	808612	PtrMemberAccess	src -> chunks		808302	0					
ANR	808613	Identifier	src		808302	0					
ANR	808614	Identifier	chunks		808302	1					
ANR	808615	Identifier	i		808302	1					
ANR	808616	Identifier	NULL		808302	1					
ANR	808617	CompoundStatement		51:37:1783:1783	808302	1					
ANR	808618	ExpressionStatement	cmsDeleteContext ( ( cmsContext ) ctx )	866:12:25581:25615	808302	0	True				
ANR	808619	CallExpression	cmsDeleteContext ( ( cmsContext ) ctx )		808302	0					
ANR	808620	Callee	cmsDeleteContext		808302	0					
ANR	808621	Identifier	cmsDeleteContext		808302	0					
ANR	808622	ArgumentList	( cmsContext ) ctx		808302	1					
ANR	808623	Argument	( cmsContext ) ctx		808302	0					
ANR	808624	CastExpression	( cmsContext ) ctx		808302	0					
ANR	808625	CastTarget	cmsContext		808302	0					
ANR	808626	Identifier	ctx		808302	1					
ANR	808627	ReturnStatement	return NULL ;	867:12:25629:25640	808302	1	True				
ANR	808628	Identifier	NULL		808302	0					
ANR	808629	ReturnStatement	return ( cmsContext ) ctx ;	871:4:25663:25686	808302	30	True				
ANR	808630	CastExpression	( cmsContext ) ctx		808302	0					
ANR	808631	CastTarget	cmsContext		808302	0					
ANR	808632	Identifier	ctx		808302	1					
ANR	808633	ReturnType	cmsContext CMSEXPORT		808302	1					
ANR	808634	Identifier	cmsDupContext		808302	2					
ANR	808635	ParameterList	"cmsContext ContextID , void * NewUserData"		808302	3					
ANR	808636	Parameter	cmsContext ContextID	814:35:23742:23761	808302	0	True				
ANR	808637	ParameterType	cmsContext		808302	0					
ANR	808638	Identifier	ContextID		808302	1					
ANR	808639	Parameter	void * NewUserData	814:57:23764:23780	808302	1	True				
ANR	808640	ParameterType	void *		808302	0					
ANR	808641	Identifier	NewUserData		808302	1					
ANR	808642	CFGEntryNode	ENTRY		808302		True				
ANR	808643	CFGExitNode	EXIT		808302		True				
ANR	808644	Symbol	* MemPlugin		808302						
ANR	808645	Symbol	userData		808302						
ANR	808646	Symbol	* src -> chunks		808302						
ANR	808647	Symbol	& ctx -> DefaultMemoryManager		808302						
ANR	808648	Symbol	_cmsGetContext		808302						
ANR	808649	Symbol	Logger		808302						
ANR	808650	Symbol	* src		808302						
ANR	808651	Symbol	ctx -> DefaultMemoryManager		808302						
ANR	808652	Symbol	MemPlugin		808302						
ANR	808653	Symbol	ContextID		808302						
ANR	808654	Symbol	NewUserData		808302						
ANR	808655	Symbol	* UserPtr		808302						
ANR	808656	Symbol	_cmsMalloc		808302						
ANR	808657	Symbol	NULL		808302						
ANR	808658	Symbol	src		808302						
ANR	808659	Symbol	ctx		808302						
ANR	808660	Symbol	i		808302						
ANR	808661	Symbol	MemoryClientMax		808302						
ANR	808662	Symbol	* ctx		808302						
ANR	808663	Symbol	UserPtr		808302						
ANR	808664	Symbol	& src -> DefaultMemoryManager		808302						
ANR	808665	Symbol	* i		808302						
ANR	808666	Symbol	src -> chunks		808302						
ANR	808667	Symbol	ctx -> Next		808302						
ANR	808668	Symbol	* * src		808302						
ANR	808669	Symbol	ctx -> chunks		808302						
ANR	808670	Symbol	_cmsContextPoolHead		808302						
ANR	808671	Symbol	* ctx -> chunks		808302						
ANR	808672	Symbol	* * ctx		808302						
ANR	808673	Symbol	ctx -> MemPool		808302						
ANR	808674	Symbol	& _cmsContextPoolHeadMutex		808302						
ANR	808675	Symbol	_cmsCreateSubAlloc		808302						
ANR	808676	Function	cmsDeleteContext	897:0:26229:27745							
ANR	808677	FunctionDef	cmsDeleteContext (cmsContext ContextID)		808676	0					
ANR	808678	CompoundStatement		898:0:26283:27745	808676	0					
ANR	808679	IfStatement	if ( ContextID != NULL )		808676	0					
ANR	808680	Condition	ContextID != NULL	899:8:26293:26309	808676	0	True				
ANR	808681	EqualityExpression	ContextID != NULL		808676	0		!=			
ANR	808682	Identifier	ContextID		808676	0					
ANR	808683	Identifier	NULL		808676	1					
ANR	808684	CompoundStatement		6:8:184:215	808676	1					
ANR	808685	IdentifierDeclStatement	struct _cmsContext_struct * ctx = ( struct _cmsContext_struct * ) ContextID ;	901:8:26323:26394	808676	0	True				
ANR	808686	IdentifierDecl	* ctx = ( struct _cmsContext_struct * ) ContextID		808676	0					
ANR	808687	IdentifierDeclType	struct _cmsContext_struct *		808676	0					
ANR	808688	Identifier	ctx		808676	1					
ANR	808689	AssignmentExpression	* ctx = ( struct _cmsContext_struct * ) ContextID		808676	2		=			
ANR	808690	Identifier	ctx		808676	0					
ANR	808691	CastExpression	( struct _cmsContext_struct * ) ContextID		808676	1					
ANR	808692	CastTarget	struct _cmsContext_struct *		808676	0					
ANR	808693	Identifier	ContextID		808676	1					
ANR	808694	IdentifierDeclStatement	struct _cmsContext_struct fakeContext ;	902:8:26418:26456	808676	1	True				
ANR	808695	IdentifierDecl	fakeContext		808676	0					
ANR	808696	IdentifierDeclType	struct _cmsContext_struct		808676	0					
ANR	808697	Identifier	fakeContext		808676	1					
ANR	808698	IdentifierDeclStatement	struct _cmsContext_struct * prev ;	903:8:26468:26499	808676	2	True				
ANR	808699	IdentifierDecl	* prev		808676	0					
ANR	808700	IdentifierDeclType	struct _cmsContext_struct *		808676	0					
ANR	808701	Identifier	prev		808676	1					
ANR	808702	ExpressionStatement	"memcpy ( & fakeContext . DefaultMemoryManager , & ctx -> DefaultMemoryManager , sizeof ( ctx -> DefaultMemoryManager ) )"	905:8:26510:26614	808676	3	True				
ANR	808703	CallExpression	"memcpy ( & fakeContext . DefaultMemoryManager , & ctx -> DefaultMemoryManager , sizeof ( ctx -> DefaultMemoryManager ) )"		808676	0					
ANR	808704	Callee	memcpy		808676	0					
ANR	808705	Identifier	memcpy		808676	0					
ANR	808706	ArgumentList	& fakeContext . DefaultMemoryManager		808676	1					
ANR	808707	Argument	& fakeContext . DefaultMemoryManager		808676	0					
ANR	808708	UnaryOperationExpression	& fakeContext . DefaultMemoryManager		808676	0					
ANR	808709	UnaryOperator	&		808676	0					
ANR	808710	MemberAccess	fakeContext . DefaultMemoryManager		808676	1					
ANR	808711	Identifier	fakeContext		808676	0					
ANR	808712	Identifier	DefaultMemoryManager		808676	1					
ANR	808713	Argument	& ctx -> DefaultMemoryManager		808676	1					
ANR	808714	UnaryOperationExpression	& ctx -> DefaultMemoryManager		808676	0					
ANR	808715	UnaryOperator	&		808676	0					
ANR	808716	PtrMemberAccess	ctx -> DefaultMemoryManager		808676	1					
ANR	808717	Identifier	ctx		808676	0					
ANR	808718	Identifier	DefaultMemoryManager		808676	1					
ANR	808719	Argument	sizeof ( ctx -> DefaultMemoryManager )		808676	2					
ANR	808720	SizeofExpression	sizeof ( ctx -> DefaultMemoryManager )		808676	0					
ANR	808721	Sizeof	sizeof		808676	0					
ANR	808722	PtrMemberAccess	ctx -> DefaultMemoryManager		808676	1					
ANR	808723	Identifier	ctx		808676	0					
ANR	808724	Identifier	DefaultMemoryManager		808676	1					
ANR	808725	ExpressionStatement	fakeContext . chunks [ UserPtr ] = ctx -> chunks [ UserPtr ]	907:8:26625:26680	808676	4	True				
ANR	808726	AssignmentExpression	fakeContext . chunks [ UserPtr ] = ctx -> chunks [ UserPtr ]		808676	0		=			
ANR	808727	ArrayIndexing	fakeContext . chunks [ UserPtr ]		808676	0					
ANR	808728	MemberAccess	fakeContext . chunks		808676	0					
ANR	808729	Identifier	fakeContext		808676	0					
ANR	808730	Identifier	chunks		808676	1					
ANR	808731	Identifier	UserPtr		808676	1					
ANR	808732	ArrayIndexing	ctx -> chunks [ UserPtr ]		808676	1					
ANR	808733	PtrMemberAccess	ctx -> chunks		808676	0					
ANR	808734	Identifier	ctx		808676	0					
ANR	808735	Identifier	chunks		808676	1					
ANR	808736	Identifier	UserPtr		808676	1					
ANR	808737	ExpressionStatement	fakeContext . chunks [ MemPlugin ] = & fakeContext . DefaultMemoryManager	908:8:26690:26757	808676	5	True				
ANR	808738	AssignmentExpression	fakeContext . chunks [ MemPlugin ] = & fakeContext . DefaultMemoryManager		808676	0		=			
ANR	808739	ArrayIndexing	fakeContext . chunks [ MemPlugin ]		808676	0					
ANR	808740	MemberAccess	fakeContext . chunks		808676	0					
ANR	808741	Identifier	fakeContext		808676	0					
ANR	808742	Identifier	chunks		808676	1					
ANR	808743	Identifier	MemPlugin		808676	1					
ANR	808744	UnaryOperationExpression	& fakeContext . DefaultMemoryManager		808676	1					
ANR	808745	UnaryOperator	&		808676	0					
ANR	808746	MemberAccess	fakeContext . DefaultMemoryManager		808676	1					
ANR	808747	Identifier	fakeContext		808676	0					
ANR	808748	Identifier	DefaultMemoryManager		808676	1					
ANR	808749	ExpressionStatement	cmsUnregisterPluginsTHR ( ContextID )	911:8:26798:26832	808676	6	True				
ANR	808750	CallExpression	cmsUnregisterPluginsTHR ( ContextID )		808676	0					
ANR	808751	Callee	cmsUnregisterPluginsTHR		808676	0					
ANR	808752	Identifier	cmsUnregisterPluginsTHR		808676	0					
ANR	808753	ArgumentList	ContextID		808676	1					
ANR	808754	Argument	ContextID		808676	0					
ANR	808755	Identifier	ContextID		808676	0					
ANR	808756	IfStatement	if ( ctx -> MemPool != NULL )		808676	7					
ANR	808757	Condition	ctx -> MemPool != NULL	914:12:26953:26974	808676	0	True				
ANR	808758	EqualityExpression	ctx -> MemPool != NULL		808676	0		!=			
ANR	808759	PtrMemberAccess	ctx -> MemPool		808676	0					
ANR	808760	Identifier	ctx		808676	0					
ANR	808761	Identifier	MemPool		808676	1					
ANR	808762	Identifier	NULL		808676	1					
ANR	808763	ExpressionStatement	_cmsSubAllocDestroy ( ctx -> MemPool )	915:14:26991:27025	808676	1	True				
ANR	808764	CallExpression	_cmsSubAllocDestroy ( ctx -> MemPool )		808676	0					
ANR	808765	Callee	_cmsSubAllocDestroy		808676	0					
ANR	808766	Identifier	_cmsSubAllocDestroy		808676	0					
ANR	808767	ArgumentList	ctx -> MemPool		808676	1					
ANR	808768	Argument	ctx -> MemPool		808676	0					
ANR	808769	PtrMemberAccess	ctx -> MemPool		808676	0					
ANR	808770	Identifier	ctx		808676	0					
ANR	808771	Identifier	MemPool		808676	1					
ANR	808772	ExpressionStatement	ctx -> MemPool = NULL	916:8:27035:27056	808676	8	True				
ANR	808773	AssignmentExpression	ctx -> MemPool = NULL		808676	0		=			
ANR	808774	PtrMemberAccess	ctx -> MemPool		808676	0					
ANR	808775	Identifier	ctx		808676	0					
ANR	808776	Identifier	MemPool		808676	1					
ANR	808777	Identifier	NULL		808676	1					
ANR	808778	ExpressionStatement	_cmsEnterCriticalSectionPrimitive ( & _cmsContextPoolHeadMutex )	919:8:27092:27152	808676	9	True				
ANR	808779	CallExpression	_cmsEnterCriticalSectionPrimitive ( & _cmsContextPoolHeadMutex )		808676	0					
ANR	808780	Callee	_cmsEnterCriticalSectionPrimitive		808676	0					
ANR	808781	Identifier	_cmsEnterCriticalSectionPrimitive		808676	0					
ANR	808782	ArgumentList	& _cmsContextPoolHeadMutex		808676	1					
ANR	808783	Argument	& _cmsContextPoolHeadMutex		808676	0					
ANR	808784	UnaryOperationExpression	& _cmsContextPoolHeadMutex		808676	0					
ANR	808785	UnaryOperator	&		808676	0					
ANR	808786	Identifier	_cmsContextPoolHeadMutex		808676	1					
ANR	808787	IfStatement	if ( _cmsContextPoolHead == ctx )		808676	10					
ANR	808788	Condition	_cmsContextPoolHead == ctx	920:12:27166:27191	808676	0	True				
ANR	808789	EqualityExpression	_cmsContextPoolHead == ctx		808676	0		==			
ANR	808790	Identifier	_cmsContextPoolHead		808676	0					
ANR	808791	Identifier	ctx		808676	1					
ANR	808792	CompoundStatement		23:40:910:910	808676	1					
ANR	808793	ExpressionStatement	_cmsContextPoolHead = ctx -> Next	922:12:27210:27241	808676	0	True				
ANR	808794	AssignmentExpression	_cmsContextPoolHead = ctx -> Next		808676	0		=			
ANR	808795	Identifier	_cmsContextPoolHead		808676	0					
ANR	808796	PtrMemberAccess	ctx -> Next		808676	1					
ANR	808797	Identifier	ctx		808676	0					
ANR	808798	Identifier	Next		808676	1					
ANR	808799	ElseStatement	else		808676	0					
ANR	808800	CompoundStatement		27:13:982:982	808676	0					
ANR	808801	ForStatement	for ( prev = _cmsContextPoolHead ; prev != NULL ; prev = prev -> Next )		808676	0					
ANR	808802	ForInit	prev = _cmsContextPoolHead ;	927:17:27321:27347	808676	0	True				
ANR	808803	AssignmentExpression	prev = _cmsContextPoolHead		808676	0		=			
ANR	808804	Identifier	prev		808676	0					
ANR	808805	Identifier	_cmsContextPoolHead		808676	1					
ANR	808806	Condition	prev != NULL	928:17:27367:27378	808676	1	True				
ANR	808807	EqualityExpression	prev != NULL		808676	0		!=			
ANR	808808	Identifier	prev		808676	0					
ANR	808809	Identifier	NULL		808676	1					
ANR	808810	AssignmentExpression	prev = prev -> Next	929:17:27398:27415	808676	2	True	=			
ANR	808811	Identifier	prev		808676	0					
ANR	808812	PtrMemberAccess	prev -> Next		808676	1					
ANR	808813	Identifier	prev		808676	0					
ANR	808814	Identifier	Next		808676	1					
ANR	808815	CompoundStatement		33:12:1146:1146	808676	3					
ANR	808816	IfStatement	if ( prev -> Next == ctx )		808676	0					
ANR	808817	Condition	prev -> Next == ctx	931:20:27452:27470	808676	0	True				
ANR	808818	EqualityExpression	prev -> Next == ctx		808676	0		==			
ANR	808819	PtrMemberAccess	prev -> Next		808676	0					
ANR	808820	Identifier	prev		808676	0					
ANR	808821	Identifier	Next		808676	1					
ANR	808822	Identifier	ctx		808676	1					
ANR	808823	CompoundStatement		34:41:1189:1189	808676	1					
ANR	808824	ExpressionStatement	prev -> Next = ctx -> Next	932:20:27495:27520	808676	0	True				
ANR	808825	AssignmentExpression	prev -> Next = ctx -> Next		808676	0		=			
ANR	808826	PtrMemberAccess	prev -> Next		808676	0					
ANR	808827	Identifier	prev		808676	0					
ANR	808828	Identifier	Next		808676	1					
ANR	808829	PtrMemberAccess	ctx -> Next		808676	1					
ANR	808830	Identifier	ctx		808676	0					
ANR	808831	Identifier	Next		808676	1					
ANR	808832	BreakStatement	break ;	933:20:27542:27547	808676	1	True				
ANR	808833	ExpressionStatement	_cmsLeaveCriticalSectionPrimitive ( & _cmsContextPoolHeadMutex )	937:8:27599:27659	808676	11	True				
ANR	808834	CallExpression	_cmsLeaveCriticalSectionPrimitive ( & _cmsContextPoolHeadMutex )		808676	0					
ANR	808835	Callee	_cmsLeaveCriticalSectionPrimitive		808676	0					
ANR	808836	Identifier	_cmsLeaveCriticalSectionPrimitive		808676	0					
ANR	808837	ArgumentList	& _cmsContextPoolHeadMutex		808676	1					
ANR	808838	Argument	& _cmsContextPoolHeadMutex		808676	0					
ANR	808839	UnaryOperationExpression	& _cmsContextPoolHeadMutex		808676	0					
ANR	808840	UnaryOperator	&		808676	0					
ANR	808841	Identifier	_cmsContextPoolHeadMutex		808676	1					
ANR	808842	ExpressionStatement	"_cmsFree ( & fakeContext , ctx )"	940:8:27710:27737	808676	12	True				
ANR	808843	CallExpression	"_cmsFree ( & fakeContext , ctx )"		808676	0					
ANR	808844	Callee	_cmsFree		808676	0					
ANR	808845	Identifier	_cmsFree		808676	0					
ANR	808846	ArgumentList	& fakeContext		808676	1					
ANR	808847	Argument	& fakeContext		808676	0					
ANR	808848	UnaryOperationExpression	& fakeContext		808676	0					
ANR	808849	UnaryOperator	&		808676	0					
ANR	808850	Identifier	fakeContext		808676	1					
ANR	808851	Argument	ctx		808676	1					
ANR	808852	Identifier	ctx		808676	0					
ANR	808853	ReturnType	void CMSEXPORT		808676	1					
ANR	808854	Identifier	cmsDeleteContext		808676	2					
ANR	808855	ParameterList	cmsContext ContextID		808676	3					
ANR	808856	Parameter	cmsContext ContextID	897:32:26261:26280	808676	0	True				
ANR	808857	ParameterType	cmsContext		808676	0					
ANR	808858	Identifier	ContextID		808676	1					
ANR	808859	CFGEntryNode	ENTRY		808676		True				
ANR	808860	CFGExitNode	EXIT		808676		True				
ANR	808861	Symbol	* MemPlugin		808676						
ANR	808862	Symbol	* fakeContext . chunks		808676						
ANR	808863	Symbol	prev		808676						
ANR	808864	Symbol	fakeContext		808676						
ANR	808865	Symbol	& ctx -> DefaultMemoryManager		808676						
ANR	808866	Symbol	* prev		808676						
ANR	808867	Symbol	ctx -> DefaultMemoryManager		808676						
ANR	808868	Symbol	prev -> Next		808676						
ANR	808869	Symbol	MemPlugin		808676						
ANR	808870	Symbol	ContextID		808676						
ANR	808871	Symbol	& fakeContext		808676						
ANR	808872	Symbol	* UserPtr		808676						
ANR	808873	Symbol	fakeContext . chunks		808676						
ANR	808874	Symbol	NULL		808676						
ANR	808875	Symbol	* fakeContext		808676						
ANR	808876	Symbol	ctx		808676						
ANR	808877	Symbol	* ctx		808676						
ANR	808878	Symbol	UserPtr		808676						
ANR	808879	Symbol	ctx -> Next		808676						
ANR	808880	Symbol	ctx -> chunks		808676						
ANR	808881	Symbol	* ctx -> chunks		808676						
ANR	808882	Symbol	_cmsContextPoolHead		808676						
ANR	808883	Symbol	* * ctx		808676						
ANR	808884	Symbol	ctx -> MemPool		808676						
ANR	808885	Symbol	& _cmsContextPoolHeadMutex		808676						
ANR	808886	Symbol	& fakeContext . DefaultMemoryManager		808676						
ANR	808887	Function	cmsGetContextUserData	945:6:27871:27985							
ANR	808888	FunctionDef	cmsGetContextUserData (cmsContext ContextID)		808887	0					
ANR	808889	CompoundStatement		946:0:27925:27985	808887	0					
ANR	808890	ReturnStatement	"return _cmsContextGetClientChunk ( ContextID , UserPtr ) ;"	947:4:27931:27983	808887	0	True				
ANR	808891	CallExpression	"_cmsContextGetClientChunk ( ContextID , UserPtr )"		808887	0					
ANR	808892	Callee	_cmsContextGetClientChunk		808887	0					
ANR	808893	Identifier	_cmsContextGetClientChunk		808887	0					
ANR	808894	ArgumentList	ContextID		808887	1					
ANR	808895	Argument	ContextID		808887	0					
ANR	808896	Identifier	ContextID		808887	0					
ANR	808897	Argument	UserPtr		808887	1					
ANR	808898	Identifier	UserPtr		808887	0					
ANR	808899	ReturnType	CMSEXPORT		808887	1					
ANR	808900	Identifier	cmsGetContextUserData		808887	2					
ANR	808901	ParameterList	cmsContext ContextID		808887	3					
ANR	808902	Parameter	cmsContext ContextID	945:38:27903:27922	808887	0	True				
ANR	808903	ParameterType	cmsContext		808887	0					
ANR	808904	Identifier	ContextID		808887	1					
ANR	808905	CFGEntryNode	ENTRY		808887		True				
ANR	808906	CFGExitNode	EXIT		808887		True				
ANR	808907	Symbol	UserPtr		808887						
ANR	808908	Symbol	_cmsContextGetClientChunk		808887						
ANR	808909	Symbol	ContextID		808887						
