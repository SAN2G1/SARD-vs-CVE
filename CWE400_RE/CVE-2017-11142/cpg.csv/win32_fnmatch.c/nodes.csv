command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2350874	File	data/converged/CVE-2017-11142_php-src/win32_fnmatch.c								
ANR	2350875	DeclStmt									
ANR	2350876	Decl							char	char [ ]	sccsid
ANR	2350877	DeclStmt									
ANR	2350878	Decl							const char	"const char * ( const char * , char , int )"	rangematch
ANR	2350879	Function	fnmatch	59:0:2393:4729							
ANR	2350880	FunctionDef	"fnmatch (const char * pattern , const char * string , int flags)"		2350879	0					
ANR	2350881	CompoundStatement		60:0:2464:4729	2350879	0					
ANR	2350882	IdentifierDeclStatement	const char * stringstart ;	61:1:2467:2490	2350879	0	True				
ANR	2350883	IdentifierDecl	* stringstart		2350879	0					
ANR	2350884	IdentifierDeclType	const char *		2350879	0					
ANR	2350885	Identifier	stringstart		2350879	1					
ANR	2350886	IdentifierDeclStatement	"char c , test ;"	62:1:2493:2505	2350879	1	True				
ANR	2350887	IdentifierDecl	c		2350879	0					
ANR	2350888	IdentifierDeclType	char		2350879	0					
ANR	2350889	Identifier	c		2350879	1					
ANR	2350890	IdentifierDecl	test		2350879	1					
ANR	2350891	IdentifierDeclType	char		2350879	0					
ANR	2350892	Identifier	test		2350879	1					
ANR	2350893	ForStatement	for ( stringstart = string ; ; )		2350879	2					
ANR	2350894	ForInit	stringstart = string ;	64:6:2514:2534	2350879	0	True				
ANR	2350895	AssignmentExpression	stringstart = string		2350879	0		=			
ANR	2350896	Identifier	stringstart		2350879	0					
ANR	2350897	Identifier	string		2350879	1					
ANR	2350898	SwitchStatement	switch ( c = * pattern ++ )		2350879	1					
ANR	2350899	Condition	c = * pattern ++	65:10:2548:2561	2350879	0	True				
ANR	2350900	AssignmentExpression	c = * pattern ++		2350879	0		=			
ANR	2350901	Identifier	c		2350879	0					
ANR	2350902	UnaryOperationExpression	* pattern ++		2350879	1					
ANR	2350903	UnaryOperator	*		2350879	0					
ANR	2350904	PostIncDecOperationExpression	pattern ++		2350879	1					
ANR	2350905	Identifier	pattern		2350879	0					
ANR	2350906	IncDec	++		2350879	1					
ANR	2350907	CompoundStatement		6:26:99:99	2350879	1					
ANR	2350908	Label	case EOS :	66:2:2568:2576	2350879	0	True				
ANR	2350909	Identifier	EOS		2350879	0					
ANR	2350910	IfStatement	if ( ( flags & FNM_LEADING_DIR ) && * string == '/' )		2350879	1					
ANR	2350911	Condition	( flags & FNM_LEADING_DIR ) && * string == '/'	67:7:2585:2627	2350879	0	True				
ANR	2350912	AndExpression	( flags & FNM_LEADING_DIR ) && * string == '/'		2350879	0		&&			
ANR	2350913	BitAndExpression	flags & FNM_LEADING_DIR		2350879	0		&			
ANR	2350914	Identifier	flags		2350879	0					
ANR	2350915	Identifier	FNM_LEADING_DIR		2350879	1					
ANR	2350916	EqualityExpression	* string == '/'		2350879	1		==			
ANR	2350917	UnaryOperationExpression	* string		2350879	0					
ANR	2350918	UnaryOperator	*		2350879	0					
ANR	2350919	Identifier	string		2350879	1					
ANR	2350920	PrimaryExpression	'/'		2350879	1					
ANR	2350921	ReturnStatement	return ( 0 ) ;	68:4:2634:2644	2350879	1	True				
ANR	2350922	PrimaryExpression	0		2350879	0					
ANR	2350923	ReturnStatement	return ( * string == EOS ? 0 : FNM_NOMATCH ) ;	69:3:2649:2690	2350879	2	True				
ANR	2350924	ConditionalExpression	* string == EOS ? 0 : FNM_NOMATCH		2350879	0					
ANR	2350925	Condition	* string == EOS		2350879	0					
ANR	2350926	EqualityExpression	* string == EOS		2350879	0		==			
ANR	2350927	UnaryOperationExpression	* string		2350879	0					
ANR	2350928	UnaryOperator	*		2350879	0					
ANR	2350929	Identifier	string		2350879	1					
ANR	2350930	Identifier	EOS		2350879	1					
ANR	2350931	PrimaryExpression	0		2350879	1					
ANR	2350932	Identifier	FNM_NOMATCH		2350879	2					
ANR	2350933	Label	case '?' :	70:2:2694:2702	2350879	3	True				
ANR	2350934	IfStatement	if ( * string == EOS )		2350879	4					
ANR	2350935	Condition	* string == EOS	71:7:2711:2724	2350879	0	True				
ANR	2350936	EqualityExpression	* string == EOS		2350879	0		==			
ANR	2350937	UnaryOperationExpression	* string		2350879	0					
ANR	2350938	UnaryOperator	*		2350879	0					
ANR	2350939	Identifier	string		2350879	1					
ANR	2350940	Identifier	EOS		2350879	1					
ANR	2350941	ReturnStatement	return ( FNM_NOMATCH ) ;	72:4:2731:2751	2350879	1	True				
ANR	2350942	Identifier	FNM_NOMATCH		2350879	0					
ANR	2350943	IfStatement	if ( * string == '/' && ( flags & FNM_PATHNAME ) )		2350879	5					
ANR	2350944	Condition	* string == '/' && ( flags & FNM_PATHNAME )	73:7:2760:2799	2350879	0	True				
ANR	2350945	AndExpression	* string == '/' && ( flags & FNM_PATHNAME )		2350879	0		&&			
ANR	2350946	EqualityExpression	* string == '/'		2350879	0		==			
ANR	2350947	UnaryOperationExpression	* string		2350879	0					
ANR	2350948	UnaryOperator	*		2350879	0					
ANR	2350949	Identifier	string		2350879	1					
ANR	2350950	PrimaryExpression	'/'		2350879	1					
ANR	2350951	BitAndExpression	flags & FNM_PATHNAME		2350879	1		&			
ANR	2350952	Identifier	flags		2350879	0					
ANR	2350953	Identifier	FNM_PATHNAME		2350879	1					
ANR	2350954	ReturnStatement	return ( FNM_NOMATCH ) ;	74:4:2806:2826	2350879	1	True				
ANR	2350955	Identifier	FNM_NOMATCH		2350879	0					
ANR	2350956	IfStatement	if ( * string == '.' && ( flags & FNM_PERIOD ) && ( string == stringstart || ( ( flags & FNM_PATHNAME ) && * ( string - 1 ) == '/' ) ) )		2350879	6					
ANR	2350957	Condition	* string == '.' && ( flags & FNM_PERIOD ) && ( string == stringstart || ( ( flags & FNM_PATHNAME ) && * ( string - 1 ) == '/' ) )	75:7:2835:2965	2350879	0	True				
ANR	2350958	AndExpression	* string == '.' && ( flags & FNM_PERIOD ) && ( string == stringstart || ( ( flags & FNM_PATHNAME ) && * ( string - 1 ) == '/' ) )		2350879	0		&&			
ANR	2350959	EqualityExpression	* string == '.'		2350879	0		==			
ANR	2350960	UnaryOperationExpression	* string		2350879	0					
ANR	2350961	UnaryOperator	*		2350879	0					
ANR	2350962	Identifier	string		2350879	1					
ANR	2350963	PrimaryExpression	'.'		2350879	1					
ANR	2350964	AndExpression	( flags & FNM_PERIOD ) && ( string == stringstart || ( ( flags & FNM_PATHNAME ) && * ( string - 1 ) == '/' ) )		2350879	1		&&			
ANR	2350965	BitAndExpression	flags & FNM_PERIOD		2350879	0		&			
ANR	2350966	Identifier	flags		2350879	0					
ANR	2350967	Identifier	FNM_PERIOD		2350879	1					
ANR	2350968	OrExpression	string == stringstart || ( ( flags & FNM_PATHNAME ) && * ( string - 1 ) == '/' )		2350879	1		||			
ANR	2350969	EqualityExpression	string == stringstart		2350879	0		==			
ANR	2350970	Identifier	string		2350879	0					
ANR	2350971	Identifier	stringstart		2350879	1					
ANR	2350972	AndExpression	( flags & FNM_PATHNAME ) && * ( string - 1 ) == '/'		2350879	1		&&			
ANR	2350973	BitAndExpression	flags & FNM_PATHNAME		2350879	0		&			
ANR	2350974	Identifier	flags		2350879	0					
ANR	2350975	Identifier	FNM_PATHNAME		2350879	1					
ANR	2350976	EqualityExpression	* ( string - 1 ) == '/'		2350879	1		==			
ANR	2350977	UnaryOperationExpression	* ( string - 1 )		2350879	0					
ANR	2350978	UnaryOperator	*		2350879	0					
ANR	2350979	AdditiveExpression	string - 1		2350879	1		-			
ANR	2350980	Identifier	string		2350879	0					
ANR	2350981	PrimaryExpression	1		2350879	1					
ANR	2350982	PrimaryExpression	'/'		2350879	1					
ANR	2350983	ReturnStatement	return ( FNM_NOMATCH ) ;	78:4:2972:2992	2350879	1	True				
ANR	2350984	Identifier	FNM_NOMATCH		2350879	0					
ANR	2350985	ExpressionStatement	++ string	79:3:2997:3005	2350879	7	True				
ANR	2350986	UnaryExpression	++ string		2350879	0					
ANR	2350987	IncDec	++		2350879	0					
ANR	2350988	Identifier	string		2350879	1					
ANR	2350989	BreakStatement	break ;	80:3:3010:3015	2350879	8	True				
ANR	2350990	Label	case '*' :	81:2:3019:3027	2350879	9	True				
ANR	2350991	ExpressionStatement	c = * pattern	82:3:3032:3044	2350879	10	True				
ANR	2350992	AssignmentExpression	c = * pattern		2350879	0		=			
ANR	2350993	Identifier	c		2350879	0					
ANR	2350994	UnaryOperationExpression	* pattern		2350879	1					
ANR	2350995	UnaryOperator	*		2350879	0					
ANR	2350996	Identifier	pattern		2350879	1					
ANR	2350997	WhileStatement	while ( c == '*' )		2350879	11					
ANR	2350998	Condition	c == '*'	84:10:3090:3097	2350879	0	True				
ANR	2350999	EqualityExpression	c == '*'		2350879	0		==			
ANR	2351000	Identifier	c		2350879	0					
ANR	2351001	PrimaryExpression	'*'		2350879	1					
ANR	2351002	ExpressionStatement	c = * ++ pattern	85:4:3104:3118	2350879	1	True				
ANR	2351003	AssignmentExpression	c = * ++ pattern		2350879	0		=			
ANR	2351004	Identifier	c		2350879	0					
ANR	2351005	UnaryOperationExpression	* ++ pattern		2350879	1					
ANR	2351006	UnaryOperator	*		2350879	0					
ANR	2351007	UnaryExpression	++ pattern		2350879	1					
ANR	2351008	IncDec	++		2350879	0					
ANR	2351009	Identifier	pattern		2350879	1					
ANR	2351010	IfStatement	if ( * string == '.' && ( flags & FNM_PERIOD ) && ( string == stringstart || ( ( flags & FNM_PATHNAME ) && * ( string - 1 ) == '/' ) ) )		2350879	12					
ANR	2351011	Condition	* string == '.' && ( flags & FNM_PERIOD ) && ( string == stringstart || ( ( flags & FNM_PATHNAME ) && * ( string - 1 ) == '/' ) )	87:7:3128:3258	2350879	0	True				
ANR	2351012	AndExpression	* string == '.' && ( flags & FNM_PERIOD ) && ( string == stringstart || ( ( flags & FNM_PATHNAME ) && * ( string - 1 ) == '/' ) )		2350879	0		&&			
ANR	2351013	EqualityExpression	* string == '.'		2350879	0		==			
ANR	2351014	UnaryOperationExpression	* string		2350879	0					
ANR	2351015	UnaryOperator	*		2350879	0					
ANR	2351016	Identifier	string		2350879	1					
ANR	2351017	PrimaryExpression	'.'		2350879	1					
ANR	2351018	AndExpression	( flags & FNM_PERIOD ) && ( string == stringstart || ( ( flags & FNM_PATHNAME ) && * ( string - 1 ) == '/' ) )		2350879	1		&&			
ANR	2351019	BitAndExpression	flags & FNM_PERIOD		2350879	0		&			
ANR	2351020	Identifier	flags		2350879	0					
ANR	2351021	Identifier	FNM_PERIOD		2350879	1					
ANR	2351022	OrExpression	string == stringstart || ( ( flags & FNM_PATHNAME ) && * ( string - 1 ) == '/' )		2350879	1		||			
ANR	2351023	EqualityExpression	string == stringstart		2350879	0		==			
ANR	2351024	Identifier	string		2350879	0					
ANR	2351025	Identifier	stringstart		2350879	1					
ANR	2351026	AndExpression	( flags & FNM_PATHNAME ) && * ( string - 1 ) == '/'		2350879	1		&&			
ANR	2351027	BitAndExpression	flags & FNM_PATHNAME		2350879	0		&			
ANR	2351028	Identifier	flags		2350879	0					
ANR	2351029	Identifier	FNM_PATHNAME		2350879	1					
ANR	2351030	EqualityExpression	* ( string - 1 ) == '/'		2350879	1		==			
ANR	2351031	UnaryOperationExpression	* ( string - 1 )		2350879	0					
ANR	2351032	UnaryOperator	*		2350879	0					
ANR	2351033	AdditiveExpression	string - 1		2350879	1		-			
ANR	2351034	Identifier	string		2350879	0					
ANR	2351035	PrimaryExpression	1		2350879	1					
ANR	2351036	PrimaryExpression	'/'		2350879	1					
ANR	2351037	ReturnStatement	return ( FNM_NOMATCH ) ;	90:4:3265:3285	2350879	1	True				
ANR	2351038	Identifier	FNM_NOMATCH		2350879	0					
ANR	2351039	IfStatement	if ( c == EOS )		2350879	13					
ANR	2351040	Condition	c == EOS	93:7:3352:3359	2350879	0	True				
ANR	2351041	EqualityExpression	c == EOS		2350879	0		==			
ANR	2351042	Identifier	c		2350879	0					
ANR	2351043	Identifier	EOS		2350879	1					
ANR	2351044	IfStatement	if ( flags & FNM_PATHNAME )		2350879	1					
ANR	2351045	Condition	flags & FNM_PATHNAME	94:8:3370:3389	2350879	0	True				
ANR	2351046	BitAndExpression	flags & FNM_PATHNAME		2350879	0		&			
ANR	2351047	Identifier	flags		2350879	0					
ANR	2351048	Identifier	FNM_PATHNAME		2350879	1					
ANR	2351049	ReturnStatement	"return ( ( flags & FNM_LEADING_DIR ) || strchr ( string , '/' ) == NULL ? 0 : FNM_NOMATCH ) ;"	95:5:3397:3498	2350879	1	True				
ANR	2351050	ConditionalExpression	"( flags & FNM_LEADING_DIR ) || strchr ( string , '/' ) == NULL ? 0 : FNM_NOMATCH"		2350879	0					
ANR	2351051	Condition	"( flags & FNM_LEADING_DIR ) || strchr ( string , '/' ) == NULL"		2350879	0					
ANR	2351052	OrExpression	"( flags & FNM_LEADING_DIR ) || strchr ( string , '/' ) == NULL"		2350879	0		||			
ANR	2351053	BitAndExpression	flags & FNM_LEADING_DIR		2350879	0		&			
ANR	2351054	Identifier	flags		2350879	0					
ANR	2351055	Identifier	FNM_LEADING_DIR		2350879	1					
ANR	2351056	EqualityExpression	"strchr ( string , '/' ) == NULL"		2350879	1		==			
ANR	2351057	CallExpression	"strchr ( string , '/' )"		2350879	0					
ANR	2351058	Callee	strchr		2350879	0					
ANR	2351059	Identifier	strchr		2350879	0					
ANR	2351060	ArgumentList	string		2350879	1					
ANR	2351061	Argument	string		2350879	0					
ANR	2351062	Identifier	string		2350879	0					
ANR	2351063	Argument	'/'		2350879	1					
ANR	2351064	PrimaryExpression	'/'		2350879	0					
ANR	2351065	Identifier	NULL		2350879	1					
ANR	2351066	PrimaryExpression	0		2350879	1					
ANR	2351067	Identifier	FNM_NOMATCH		2350879	2					
ANR	2351068	ElseStatement	else		2350879	0					
ANR	2351069	ReturnStatement	return ( 0 ) ;	99:5:3514:3524	2350879	0	True				
ANR	2351070	PrimaryExpression	0		2350879	0					
ANR	2351071	ElseStatement	else		2350879	0					
ANR	2351072	IfStatement	if ( c == '/' && flags & FNM_PATHNAME )		2350879	0					
ANR	2351073	Condition	c == '/' && flags & FNM_PATHNAME	100:12:3538:3569	2350879	0	True				
ANR	2351074	AndExpression	c == '/' && flags & FNM_PATHNAME		2350879	0		&&			
ANR	2351075	EqualityExpression	c == '/'		2350879	0		==			
ANR	2351076	Identifier	c		2350879	0					
ANR	2351077	PrimaryExpression	'/'		2350879	1					
ANR	2351078	BitAndExpression	flags & FNM_PATHNAME		2350879	1		&			
ANR	2351079	Identifier	flags		2350879	0					
ANR	2351080	Identifier	FNM_PATHNAME		2350879	1					
ANR	2351081	CompoundStatement		41:46:1107:1107	2350879	1					
ANR	2351082	IfStatement	"if ( ( string = strchr ( string , '/' ) ) == NULL )"		2350879	0					
ANR	2351083	Condition	"( string = strchr ( string , '/' ) ) == NULL"	101:8:3582:3619	2350879	0	True				
ANR	2351084	EqualityExpression	"( string = strchr ( string , '/' ) ) == NULL"		2350879	0		==			
ANR	2351085	AssignmentExpression	"string = strchr ( string , '/' )"		2350879	0		=			
ANR	2351086	Identifier	string		2350879	0					
ANR	2351087	CallExpression	"strchr ( string , '/' )"		2350879	1					
ANR	2351088	Callee	strchr		2350879	0					
ANR	2351089	Identifier	strchr		2350879	0					
ANR	2351090	ArgumentList	string		2350879	1					
ANR	2351091	Argument	string		2350879	0					
ANR	2351092	Identifier	string		2350879	0					
ANR	2351093	Argument	'/'		2350879	1					
ANR	2351094	PrimaryExpression	'/'		2350879	0					
ANR	2351095	Identifier	NULL		2350879	1					
ANR	2351096	ReturnStatement	return ( FNM_NOMATCH ) ;	102:5:3627:3647	2350879	1	True				
ANR	2351097	Identifier	FNM_NOMATCH		2350879	0					
ANR	2351098	BreakStatement	break ;	103:4:3653:3658	2350879	1	True				
ANR	2351099	WhileStatement	while ( ( test = * string ) != EOS )		2350879	14					
ANR	2351100	Condition	( test = * string ) != EOS	107:10:3714:3736	2350879	0	True				
ANR	2351101	EqualityExpression	( test = * string ) != EOS		2350879	0		!=			
ANR	2351102	AssignmentExpression	test = * string		2350879	0		=			
ANR	2351103	Identifier	test		2350879	0					
ANR	2351104	UnaryOperationExpression	* string		2350879	1					
ANR	2351105	UnaryOperator	*		2350879	0					
ANR	2351106	Identifier	string		2350879	1					
ANR	2351107	Identifier	EOS		2350879	1					
ANR	2351108	CompoundStatement		48:35:1274:1274	2350879	1					
ANR	2351109	IfStatement	"if ( ! fnmatch ( pattern , string , flags & ~FNM_PERIOD ) )"		2350879	0					
ANR	2351110	Condition	"! fnmatch ( pattern , string , flags & ~FNM_PERIOD )"	108:8:3749:3794	2350879	0	True				
ANR	2351111	UnaryOperationExpression	"! fnmatch ( pattern , string , flags & ~FNM_PERIOD )"		2350879	0					
ANR	2351112	UnaryOperator	!		2350879	0					
ANR	2351113	CallExpression	"fnmatch ( pattern , string , flags & ~FNM_PERIOD )"		2350879	1					
ANR	2351114	Callee	fnmatch		2350879	0					
ANR	2351115	Identifier	fnmatch		2350879	0					
ANR	2351116	ArgumentList	pattern		2350879	1					
ANR	2351117	Argument	pattern		2350879	0					
ANR	2351118	Identifier	pattern		2350879	0					
ANR	2351119	Argument	string		2350879	1					
ANR	2351120	Identifier	string		2350879	0					
ANR	2351121	Argument	flags & ~FNM_PERIOD		2350879	2					
ANR	2351122	BitAndExpression	flags & ~FNM_PERIOD		2350879	0		&			
ANR	2351123	Identifier	flags		2350879	0					
ANR	2351124	Identifier	~FNM_PERIOD		2350879	1					
ANR	2351125	ReturnStatement	return ( 0 ) ;	109:5:3802:3812	2350879	1	True				
ANR	2351126	PrimaryExpression	0		2350879	0					
ANR	2351127	IfStatement	if ( test == '/' && flags & FNM_PATHNAME )		2350879	1					
ANR	2351128	Condition	test == '/' && flags & FNM_PATHNAME	110:8:3822:3856	2350879	0	True				
ANR	2351129	AndExpression	test == '/' && flags & FNM_PATHNAME		2350879	0		&&			
ANR	2351130	EqualityExpression	test == '/'		2350879	0		==			
ANR	2351131	Identifier	test		2350879	0					
ANR	2351132	PrimaryExpression	'/'		2350879	1					
ANR	2351133	BitAndExpression	flags & FNM_PATHNAME		2350879	1		&			
ANR	2351134	Identifier	flags		2350879	0					
ANR	2351135	Identifier	FNM_PATHNAME		2350879	1					
ANR	2351136	BreakStatement	break ;	111:5:3864:3869	2350879	1	True				
ANR	2351137	ExpressionStatement	++ string	112:4:3875:3883	2350879	2	True				
ANR	2351138	UnaryExpression	++ string		2350879	0					
ANR	2351139	IncDec	++		2350879	0					
ANR	2351140	Identifier	string		2350879	1					
ANR	2351141	ReturnStatement	return ( FNM_NOMATCH ) ;	114:3:3893:3913	2350879	15	True				
ANR	2351142	Identifier	FNM_NOMATCH		2350879	0					
ANR	2351143	Label	case '[' :	115:2:3917:3925	2350879	16	True				
ANR	2351144	IfStatement	if ( * string == EOS )		2350879	17					
ANR	2351145	Condition	* string == EOS	116:7:3934:3947	2350879	0	True				
ANR	2351146	EqualityExpression	* string == EOS		2350879	0		==			
ANR	2351147	UnaryOperationExpression	* string		2350879	0					
ANR	2351148	UnaryOperator	*		2350879	0					
ANR	2351149	Identifier	string		2350879	1					
ANR	2351150	Identifier	EOS		2350879	1					
ANR	2351151	ReturnStatement	return ( FNM_NOMATCH ) ;	117:4:3954:3974	2350879	1	True				
ANR	2351152	Identifier	FNM_NOMATCH		2350879	0					
ANR	2351153	IfStatement	if ( * string == '/' && flags & FNM_PATHNAME )		2350879	18					
ANR	2351154	Condition	* string == '/' && flags & FNM_PATHNAME	118:7:3983:4020	2350879	0	True				
ANR	2351155	AndExpression	* string == '/' && flags & FNM_PATHNAME		2350879	0		&&			
ANR	2351156	EqualityExpression	* string == '/'		2350879	0		==			
ANR	2351157	UnaryOperationExpression	* string		2350879	0					
ANR	2351158	UnaryOperator	*		2350879	0					
ANR	2351159	Identifier	string		2350879	1					
ANR	2351160	PrimaryExpression	'/'		2350879	1					
ANR	2351161	BitAndExpression	flags & FNM_PATHNAME		2350879	1		&			
ANR	2351162	Identifier	flags		2350879	0					
ANR	2351163	Identifier	FNM_PATHNAME		2350879	1					
ANR	2351164	ReturnStatement	return ( FNM_NOMATCH ) ;	119:4:4027:4047	2350879	1	True				
ANR	2351165	Identifier	FNM_NOMATCH		2350879	0					
ANR	2351166	IfStatement	"if ( ( pattern = rangematch ( pattern , * string , flags ) ) == NULL )"		2350879	19					
ANR	2351167	Condition	"( pattern = rangematch ( pattern , * string , flags ) ) == NULL"	120:7:4056:4117	2350879	0	True				
ANR	2351168	EqualityExpression	"( pattern = rangematch ( pattern , * string , flags ) ) == NULL"		2350879	0		==			
ANR	2351169	AssignmentExpression	"pattern = rangematch ( pattern , * string , flags )"		2350879	0		=			
ANR	2351170	Identifier	pattern		2350879	0					
ANR	2351171	CallExpression	"rangematch ( pattern , * string , flags )"		2350879	1					
ANR	2351172	Callee	rangematch		2350879	0					
ANR	2351173	Identifier	rangematch		2350879	0					
ANR	2351174	ArgumentList	pattern		2350879	1					
ANR	2351175	Argument	pattern		2350879	0					
ANR	2351176	Identifier	pattern		2350879	0					
ANR	2351177	Argument	* string		2350879	1					
ANR	2351178	UnaryOperationExpression	* string		2350879	0					
ANR	2351179	UnaryOperator	*		2350879	0					
ANR	2351180	Identifier	string		2350879	1					
ANR	2351181	Argument	flags		2350879	2					
ANR	2351182	Identifier	flags		2350879	0					
ANR	2351183	Identifier	NULL		2350879	1					
ANR	2351184	ReturnStatement	return ( FNM_NOMATCH ) ;	122:4:4124:4144	2350879	1	True				
ANR	2351185	Identifier	FNM_NOMATCH		2350879	0					
ANR	2351186	ExpressionStatement	++ string	123:3:4149:4157	2350879	20	True				
ANR	2351187	UnaryExpression	++ string		2350879	0					
ANR	2351188	IncDec	++		2350879	0					
ANR	2351189	Identifier	string		2350879	1					
ANR	2351190	BreakStatement	break ;	124:3:4162:4167	2350879	21	True				
ANR	2351191	Label	case '\\\\' :	125:2:4171:4180	2350879	22	True				
ANR	2351192	IfStatement	if ( ! ( flags & FNM_NOESCAPE ) )		2350879	23					
ANR	2351193	Condition	! ( flags & FNM_NOESCAPE )	126:7:4189:4211	2350879	0	True				
ANR	2351194	UnaryOperationExpression	! ( flags & FNM_NOESCAPE )		2350879	0					
ANR	2351195	UnaryOperator	!		2350879	0					
ANR	2351196	BitAndExpression	flags & FNM_NOESCAPE		2350879	1		&			
ANR	2351197	Identifier	flags		2350879	0					
ANR	2351198	Identifier	FNM_NOESCAPE		2350879	1					
ANR	2351199	CompoundStatement		67:32:1749:1749	2350879	1					
ANR	2351200	IfStatement	if ( ( c = * pattern ++ ) == EOS )		2350879	0					
ANR	2351201	Condition	( c = * pattern ++ ) == EOS	127:8:4224:4246	2350879	0	True				
ANR	2351202	EqualityExpression	( c = * pattern ++ ) == EOS		2350879	0		==			
ANR	2351203	AssignmentExpression	c = * pattern ++		2350879	0		=			
ANR	2351204	Identifier	c		2350879	0					
ANR	2351205	UnaryOperationExpression	* pattern ++		2350879	1					
ANR	2351206	UnaryOperator	*		2350879	0					
ANR	2351207	PostIncDecOperationExpression	pattern ++		2350879	1					
ANR	2351208	Identifier	pattern		2350879	0					
ANR	2351209	IncDec	++		2350879	1					
ANR	2351210	Identifier	EOS		2350879	1					
ANR	2351211	CompoundStatement		68:33:1784:1784	2350879	1					
ANR	2351212	ExpressionStatement	c = '\\\\'	128:5:4256:4264	2350879	0	True				
ANR	2351213	AssignmentExpression	c = '\\\\'		2350879	0		=			
ANR	2351214	Identifier	c		2350879	0					
ANR	2351215	PrimaryExpression	'\\\\'		2350879	1					
ANR	2351216	ExpressionStatement	-- pattern	129:5:4271:4280	2350879	1	True				
ANR	2351217	UnaryExpression	-- pattern		2350879	0					
ANR	2351218	IncDec	--		2350879	0					
ANR	2351219	Identifier	pattern		2350879	1					
ANR	2351220	Label	default :	133:2:4316:4323	2350879	24	True				
ANR	2351221	Identifier	default		2350879	0					
ANR	2351222	IfStatement	if ( c == * string )		2350879	25					
ANR	2351223	Condition	c == * string	134:7:4332:4343	2350879	0	True				
ANR	2351224	EqualityExpression	c == * string		2350879	0		==			
ANR	2351225	Identifier	c		2350879	0					
ANR	2351226	UnaryOperationExpression	* string		2350879	1					
ANR	2351227	UnaryOperator	*		2350879	0					
ANR	2351228	Identifier	string		2350879	1					
ANR	2351229	ExpressionStatement		135:4:4350:4350	2350879	1	True				
ANR	2351230	ElseStatement	else		2350879	0					
ANR	2351231	IfStatement	if ( ( flags & FNM_CASEFOLD ) && ( tolower ( ( unsigned char ) c ) == tolower ( ( unsigned char ) * string ) ) )		2350879	0					
ANR	2351232	Condition	( flags & FNM_CASEFOLD ) && ( tolower ( ( unsigned char ) c ) == tolower ( ( unsigned char ) * string ) )	136:12:4364:4462	2350879	0	True				
ANR	2351233	AndExpression	( flags & FNM_CASEFOLD ) && ( tolower ( ( unsigned char ) c ) == tolower ( ( unsigned char ) * string ) )		2350879	0		&&			
ANR	2351234	BitAndExpression	flags & FNM_CASEFOLD		2350879	0		&			
ANR	2351235	Identifier	flags		2350879	0					
ANR	2351236	Identifier	FNM_CASEFOLD		2350879	1					
ANR	2351237	EqualityExpression	tolower ( ( unsigned char ) c ) == tolower ( ( unsigned char ) * string )		2350879	1		==			
ANR	2351238	CallExpression	tolower ( ( unsigned char ) c )		2350879	0					
ANR	2351239	Callee	tolower		2350879	0					
ANR	2351240	Identifier	tolower		2350879	0					
ANR	2351241	ArgumentList	( unsigned char ) c		2350879	1					
ANR	2351242	Argument	( unsigned char ) c		2350879	0					
ANR	2351243	CastExpression	( unsigned char ) c		2350879	0					
ANR	2351244	CastTarget	unsigned char		2350879	0					
ANR	2351245	Identifier	c		2350879	1					
ANR	2351246	CallExpression	tolower ( ( unsigned char ) * string )		2350879	1					
ANR	2351247	Callee	tolower		2350879	0					
ANR	2351248	Identifier	tolower		2350879	0					
ANR	2351249	ArgumentList	( unsigned char ) * string		2350879	1					
ANR	2351250	Argument	( unsigned char ) * string		2350879	0					
ANR	2351251	CastExpression	( unsigned char ) * string		2350879	0					
ANR	2351252	CastTarget	unsigned char		2350879	0					
ANR	2351253	UnaryOperationExpression	* string		2350879	1					
ANR	2351254	UnaryOperator	*		2350879	0					
ANR	2351255	Identifier	string		2350879	1					
ANR	2351256	ExpressionStatement		139:4:4469:4469	2350879	1	True				
ANR	2351257	ElseStatement	else		2350879	0					
ANR	2351258	IfStatement	if ( ( flags & FNM_PREFIX_DIRS ) && * string == EOS && ( c == '/' && string != stringstart || string == stringstart + 1 && * stringstart == '/' ) )		2350879	0					
ANR	2351259	Condition	( flags & FNM_PREFIX_DIRS ) && * string == EOS && ( c == '/' && string != stringstart || string == stringstart + 1 && * stringstart == '/' )	140:12:4483:4630	2350879	0	True				
ANR	2351260	AndExpression	( flags & FNM_PREFIX_DIRS ) && * string == EOS && ( c == '/' && string != stringstart || string == stringstart + 1 && * stringstart == '/' )		2350879	0		&&			
ANR	2351261	BitAndExpression	flags & FNM_PREFIX_DIRS		2350879	0		&			
ANR	2351262	Identifier	flags		2350879	0					
ANR	2351263	Identifier	FNM_PREFIX_DIRS		2350879	1					
ANR	2351264	AndExpression	* string == EOS && ( c == '/' && string != stringstart || string == stringstart + 1 && * stringstart == '/' )		2350879	1		&&			
ANR	2351265	EqualityExpression	* string == EOS		2350879	0		==			
ANR	2351266	UnaryOperationExpression	* string		2350879	0					
ANR	2351267	UnaryOperator	*		2350879	0					
ANR	2351268	Identifier	string		2350879	1					
ANR	2351269	Identifier	EOS		2350879	1					
ANR	2351270	OrExpression	c == '/' && string != stringstart || string == stringstart + 1 && * stringstart == '/'		2350879	1		||			
ANR	2351271	AndExpression	c == '/' && string != stringstart		2350879	0		&&			
ANR	2351272	EqualityExpression	c == '/'		2350879	0		==			
ANR	2351273	Identifier	c		2350879	0					
ANR	2351274	PrimaryExpression	'/'		2350879	1					
ANR	2351275	EqualityExpression	string != stringstart		2350879	1		!=			
ANR	2351276	Identifier	string		2350879	0					
ANR	2351277	Identifier	stringstart		2350879	1					
ANR	2351278	AndExpression	string == stringstart + 1 && * stringstart == '/'		2350879	1		&&			
ANR	2351279	EqualityExpression	string == stringstart + 1		2350879	0		==			
ANR	2351280	Identifier	string		2350879	0					
ANR	2351281	AdditiveExpression	stringstart + 1		2350879	1		+			
ANR	2351282	Identifier	stringstart		2350879	0					
ANR	2351283	PrimaryExpression	1		2350879	1					
ANR	2351284	EqualityExpression	* stringstart == '/'		2350879	1		==			
ANR	2351285	UnaryOperationExpression	* stringstart		2350879	0					
ANR	2351286	UnaryOperator	*		2350879	0					
ANR	2351287	Identifier	stringstart		2350879	1					
ANR	2351288	PrimaryExpression	'/'		2350879	1					
ANR	2351289	ReturnStatement	return ( 0 ) ;	143:4:4638:4648	2350879	1	True				
ANR	2351290	PrimaryExpression	0		2350879	0					
ANR	2351291	ElseStatement	else		2350879	0					
ANR	2351292	ReturnStatement	return ( FNM_NOMATCH ) ;	145:4:4662:4682	2350879	0	True				
ANR	2351293	Identifier	FNM_NOMATCH		2350879	0					
ANR	2351294	ExpressionStatement	string ++	146:3:4687:4695	2350879	26	True				
ANR	2351295	PostIncDecOperationExpression	string ++		2350879	0					
ANR	2351296	Identifier	string		2350879	0					
ANR	2351297	IncDec	++		2350879	1					
ANR	2351298	BreakStatement	break ;	147:3:4700:4705	2350879	27	True				
ANR	2351299	ReturnType	PHPAPI int		2350879	1					
ANR	2351300	Identifier	fnmatch		2350879	2					
ANR	2351301	ParameterList	"const char * pattern , const char * string , int flags"		2350879	3					
ANR	2351302	Parameter	const char * pattern	59:19:2412:2430	2350879	0	True				
ANR	2351303	ParameterType	const char *		2350879	0					
ANR	2351304	Identifier	pattern		2350879	1					
ANR	2351305	Parameter	const char * string	59:40:2433:2450	2350879	1	True				
ANR	2351306	ParameterType	const char *		2350879	0					
ANR	2351307	Identifier	string		2350879	1					
ANR	2351308	Parameter	int flags	59:60:2453:2461	2350879	2	True				
ANR	2351309	ParameterType	int		2350879	0					
ANR	2351310	Identifier	flags		2350879	1					
ANR	2351311	CFGEntryNode	ENTRY		2350879		True				
ANR	2351312	CFGExitNode	EXIT		2350879		True				
ANR	2351313	InfiniteForNode	true		2350879		True				
ANR	2351314	Symbol	string		2350879						
ANR	2351315	Symbol	FNM_LEADING_DIR		2350879						
ANR	2351316	Symbol	tolower		2350879						
ANR	2351317	Symbol	pattern		2350879						
ANR	2351318	Symbol	flags		2350879						
ANR	2351319	Symbol	* ++ pattern		2350879						
ANR	2351320	Symbol	* string		2350879						
ANR	2351321	Symbol	strchr		2350879						
ANR	2351322	Symbol	FNM_PREFIX_DIRS		2350879						
ANR	2351323	Symbol	FNM_NOMATCH		2350879						
ANR	2351324	Symbol	FNM_CASEFOLD		2350879						
ANR	2351325	Symbol	* pattern ++		2350879						
ANR	2351326	Symbol	stringstart		2350879						
ANR	2351327	Symbol	* pattern		2350879						
ANR	2351328	Symbol	c		2350879						
ANR	2351329	Symbol	NULL		2350879						
ANR	2351330	Symbol	fnmatch		2350879						
ANR	2351331	Symbol	test		2350879						
ANR	2351332	Symbol	rangematch		2350879						
ANR	2351333	Symbol	~FNM_PERIOD		2350879						
ANR	2351334	Symbol	EOS		2350879						
ANR	2351335	Symbol	FNM_PATHNAME		2350879						
ANR	2351336	Symbol	FNM_NOESCAPE		2350879						
ANR	2351337	Symbol	FNM_PERIOD		2350879						
ANR	2351338	Symbol	* ( string - 1 )		2350879						
ANR	2351339	Symbol	* stringstart		2350879						
ANR	2351340	Function	rangematch	152:0:4732:5919							
ANR	2351341	FunctionDef	"rangematch (const char * pattern , char test , int flags)"		2351340	0					
ANR	2351342	CompoundStatement		154:0:4806:5919	2351340	0					
ANR	2351343	IdentifierDeclStatement	"int negate , ok ;"	155:1:4809:4823	2351340	0	True				
ANR	2351344	IdentifierDecl	negate		2351340	0					
ANR	2351345	IdentifierDeclType	int		2351340	0					
ANR	2351346	Identifier	negate		2351340	1					
ANR	2351347	IdentifierDecl	ok		2351340	1					
ANR	2351348	IdentifierDeclType	int		2351340	0					
ANR	2351349	Identifier	ok		2351340	1					
ANR	2351350	IdentifierDeclStatement	"char c , c2 ;"	156:1:4826:4836	2351340	1	True				
ANR	2351351	IdentifierDecl	c		2351340	0					
ANR	2351352	IdentifierDeclType	char		2351340	0					
ANR	2351353	Identifier	c		2351340	1					
ANR	2351354	IdentifierDecl	c2		2351340	1					
ANR	2351355	IdentifierDeclType	char		2351340	0					
ANR	2351356	Identifier	c2		2351340	1					
ANR	2351357	IfStatement	if ( ( negate = ( * pattern == '!' || * pattern == '^' ) ) )		2351340	2					
ANR	2351358	Condition	negate = ( * pattern == '!' || * pattern == '^' )	165:6:5132:5178	2351340	0	True				
ANR	2351359	AssignmentExpression	negate = ( * pattern == '!' || * pattern == '^' )		2351340	0		=			
ANR	2351360	Identifier	negate		2351340	0					
ANR	2351361	OrExpression	* pattern == '!' || * pattern == '^'		2351340	1		||			
ANR	2351362	EqualityExpression	* pattern == '!'		2351340	0		==			
ANR	2351363	UnaryOperationExpression	* pattern		2351340	0					
ANR	2351364	UnaryOperator	*		2351340	0					
ANR	2351365	Identifier	pattern		2351340	1					
ANR	2351366	PrimaryExpression	'!'		2351340	1					
ANR	2351367	EqualityExpression	* pattern == '^'		2351340	1		==			
ANR	2351368	UnaryOperationExpression	* pattern		2351340	0					
ANR	2351369	UnaryOperator	*		2351340	0					
ANR	2351370	Identifier	pattern		2351340	1					
ANR	2351371	PrimaryExpression	'^'		2351340	1					
ANR	2351372	ExpressionStatement	++ pattern	166:2:5184:5193	2351340	1	True				
ANR	2351373	UnaryExpression	++ pattern		2351340	0					
ANR	2351374	IncDec	++		2351340	0					
ANR	2351375	Identifier	pattern		2351340	1					
ANR	2351376	IfStatement	if ( flags & FNM_CASEFOLD )		2351340	3					
ANR	2351377	Condition	flags & FNM_CASEFOLD	168:5:5201:5220	2351340	0	True				
ANR	2351378	BitAndExpression	flags & FNM_CASEFOLD		2351340	0		&			
ANR	2351379	Identifier	flags		2351340	0					
ANR	2351380	Identifier	FNM_CASEFOLD		2351340	1					
ANR	2351381	ExpressionStatement	test = tolower ( ( unsigned char ) test )	169:2:5225:5260	2351340	1	True				
ANR	2351382	AssignmentExpression	test = tolower ( ( unsigned char ) test )		2351340	0		=			
ANR	2351383	Identifier	test		2351340	0					
ANR	2351384	CallExpression	tolower ( ( unsigned char ) test )		2351340	1					
ANR	2351385	Callee	tolower		2351340	0					
ANR	2351386	Identifier	tolower		2351340	0					
ANR	2351387	ArgumentList	( unsigned char ) test		2351340	1					
ANR	2351388	Argument	( unsigned char ) test		2351340	0					
ANR	2351389	CastExpression	( unsigned char ) test		2351340	0					
ANR	2351390	CastTarget	unsigned char		2351340	0					
ANR	2351391	Identifier	test		2351340	1					
ANR	2351392	ForStatement	for ( ok = 0 ; ( c = * pattern ++ ) != ']' ; )		2351340	4					
ANR	2351393	ForInit	ok = 0 ;	171:6:5269:5275	2351340	0	True				
ANR	2351394	AssignmentExpression	ok = 0		2351340	0		=			
ANR	2351395	Identifier	ok		2351340	0					
ANR	2351396	PrimaryExpression	0		2351340	1					
ANR	2351397	Condition	( c = * pattern ++ ) != ']'	171:14:5277:5299	2351340	1	True				
ANR	2351398	EqualityExpression	( c = * pattern ++ ) != ']'		2351340	0		!=			
ANR	2351399	AssignmentExpression	c = * pattern ++		2351340	0		=			
ANR	2351400	Identifier	c		2351340	0					
ANR	2351401	UnaryOperationExpression	* pattern ++		2351340	1					
ANR	2351402	UnaryOperator	*		2351340	0					
ANR	2351403	PostIncDecOperationExpression	pattern ++		2351340	1					
ANR	2351404	Identifier	pattern		2351340	0					
ANR	2351405	IncDec	++		2351340	1					
ANR	2351406	PrimaryExpression	']'		2351340	1					
ANR	2351407	CompoundStatement		18:40:496:496	2351340	2					
ANR	2351408	IfStatement	if ( c == '\\\\' && ! ( flags & FNM_NOESCAPE ) )		2351340	0					
ANR	2351409	Condition	c == '\\\\' && ! ( flags & FNM_NOESCAPE )	172:6:5311:5346	2351340	0	True				
ANR	2351410	AndExpression	c == '\\\\' && ! ( flags & FNM_NOESCAPE )		2351340	0		&&			
ANR	2351411	EqualityExpression	c == '\\\\'		2351340	0		==			
ANR	2351412	Identifier	c		2351340	0					
ANR	2351413	PrimaryExpression	'\\\\'		2351340	1					
ANR	2351414	UnaryOperationExpression	! ( flags & FNM_NOESCAPE )		2351340	1					
ANR	2351415	UnaryOperator	!		2351340	0					
ANR	2351416	BitAndExpression	flags & FNM_NOESCAPE		2351340	1		&			
ANR	2351417	Identifier	flags		2351340	0					
ANR	2351418	Identifier	FNM_NOESCAPE		2351340	1					
ANR	2351419	ExpressionStatement	c = * pattern ++	173:3:5352:5366	2351340	1	True				
ANR	2351420	AssignmentExpression	c = * pattern ++		2351340	0		=			
ANR	2351421	Identifier	c		2351340	0					
ANR	2351422	UnaryOperationExpression	* pattern ++		2351340	1					
ANR	2351423	UnaryOperator	*		2351340	0					
ANR	2351424	PostIncDecOperationExpression	pattern ++		2351340	1					
ANR	2351425	Identifier	pattern		2351340	0					
ANR	2351426	IncDec	++		2351340	1					
ANR	2351427	IfStatement	if ( c == EOS )		2351340	1					
ANR	2351428	Condition	c == EOS	174:6:5374:5381	2351340	0	True				
ANR	2351429	EqualityExpression	c == EOS		2351340	0		==			
ANR	2351430	Identifier	c		2351340	0					
ANR	2351431	Identifier	EOS		2351340	1					
ANR	2351432	ReturnStatement	return ( NULL ) ;	175:3:5387:5400	2351340	1	True				
ANR	2351433	Identifier	NULL		2351340	0					
ANR	2351434	IfStatement	if ( flags & FNM_CASEFOLD )		2351340	2					
ANR	2351435	Condition	flags & FNM_CASEFOLD	177:6:5409:5428	2351340	0	True				
ANR	2351436	BitAndExpression	flags & FNM_CASEFOLD		2351340	0		&			
ANR	2351437	Identifier	flags		2351340	0					
ANR	2351438	Identifier	FNM_CASEFOLD		2351340	1					
ANR	2351439	ExpressionStatement	c = tolower ( ( unsigned char ) c )	178:3:5434:5463	2351340	1	True				
ANR	2351440	AssignmentExpression	c = tolower ( ( unsigned char ) c )		2351340	0		=			
ANR	2351441	Identifier	c		2351340	0					
ANR	2351442	CallExpression	tolower ( ( unsigned char ) c )		2351340	1					
ANR	2351443	Callee	tolower		2351340	0					
ANR	2351444	Identifier	tolower		2351340	0					
ANR	2351445	ArgumentList	( unsigned char ) c		2351340	1					
ANR	2351446	Argument	( unsigned char ) c		2351340	0					
ANR	2351447	CastExpression	( unsigned char ) c		2351340	0					
ANR	2351448	CastTarget	unsigned char		2351340	0					
ANR	2351449	Identifier	c		2351340	1					
ANR	2351450	IfStatement	if ( * pattern == '-' && ( c2 = * ( pattern + 1 ) ) != EOS && c2 != ']' )		2351340	3					
ANR	2351451	Condition	* pattern == '-' && ( c2 = * ( pattern + 1 ) ) != EOS && c2 != ']'	180:6:5472:5535	2351340	0	True				
ANR	2351452	AndExpression	* pattern == '-' && ( c2 = * ( pattern + 1 ) ) != EOS && c2 != ']'		2351340	0		&&			
ANR	2351453	EqualityExpression	* pattern == '-'		2351340	0		==			
ANR	2351454	UnaryOperationExpression	* pattern		2351340	0					
ANR	2351455	UnaryOperator	*		2351340	0					
ANR	2351456	Identifier	pattern		2351340	1					
ANR	2351457	PrimaryExpression	'-'		2351340	1					
ANR	2351458	AndExpression	( c2 = * ( pattern + 1 ) ) != EOS && c2 != ']'		2351340	1		&&			
ANR	2351459	EqualityExpression	( c2 = * ( pattern + 1 ) ) != EOS		2351340	0		!=			
ANR	2351460	AssignmentExpression	c2 = * ( pattern + 1 )		2351340	0		=			
ANR	2351461	Identifier	c2		2351340	0					
ANR	2351462	UnaryOperationExpression	* ( pattern + 1 )		2351340	1					
ANR	2351463	UnaryOperator	*		2351340	0					
ANR	2351464	AdditiveExpression	pattern + 1		2351340	1		+			
ANR	2351465	Identifier	pattern		2351340	0					
ANR	2351466	PrimaryExpression	1		2351340	1					
ANR	2351467	Identifier	EOS		2351340	1					
ANR	2351468	EqualityExpression	c2 != ']'		2351340	1		!=			
ANR	2351469	Identifier	c2		2351340	0					
ANR	2351470	PrimaryExpression	']'		2351340	1					
ANR	2351471	CompoundStatement		28:50:731:731	2351340	1					
ANR	2351472	ExpressionStatement	pattern += 2	182:3:5543:5555	2351340	0	True				
ANR	2351473	AssignmentExpression	pattern += 2		2351340	0		+=			
ANR	2351474	Identifier	pattern		2351340	0					
ANR	2351475	PrimaryExpression	2		2351340	1					
ANR	2351476	IfStatement	if ( c2 == '\\\\' && ! ( flags & FNM_NOESCAPE ) )		2351340	1					
ANR	2351477	Condition	c2 == '\\\\' && ! ( flags & FNM_NOESCAPE )	183:7:5564:5600	2351340	0	True				
ANR	2351478	AndExpression	c2 == '\\\\' && ! ( flags & FNM_NOESCAPE )		2351340	0		&&			
ANR	2351479	EqualityExpression	c2 == '\\\\'		2351340	0		==			
ANR	2351480	Identifier	c2		2351340	0					
ANR	2351481	PrimaryExpression	'\\\\'		2351340	1					
ANR	2351482	UnaryOperationExpression	! ( flags & FNM_NOESCAPE )		2351340	1					
ANR	2351483	UnaryOperator	!		2351340	0					
ANR	2351484	BitAndExpression	flags & FNM_NOESCAPE		2351340	1		&			
ANR	2351485	Identifier	flags		2351340	0					
ANR	2351486	Identifier	FNM_NOESCAPE		2351340	1					
ANR	2351487	ExpressionStatement	c2 = * pattern ++	184:4:5607:5622	2351340	1	True				
ANR	2351488	AssignmentExpression	c2 = * pattern ++		2351340	0		=			
ANR	2351489	Identifier	c2		2351340	0					
ANR	2351490	UnaryOperationExpression	* pattern ++		2351340	1					
ANR	2351491	UnaryOperator	*		2351340	0					
ANR	2351492	PostIncDecOperationExpression	pattern ++		2351340	1					
ANR	2351493	Identifier	pattern		2351340	0					
ANR	2351494	IncDec	++		2351340	1					
ANR	2351495	IfStatement	if ( c2 == EOS )		2351340	2					
ANR	2351496	Condition	c2 == EOS	185:7:5631:5639	2351340	0	True				
ANR	2351497	EqualityExpression	c2 == EOS		2351340	0		==			
ANR	2351498	Identifier	c2		2351340	0					
ANR	2351499	Identifier	EOS		2351340	1					
ANR	2351500	ReturnStatement	return ( NULL ) ;	186:4:5646:5659	2351340	1	True				
ANR	2351501	Identifier	NULL		2351340	0					
ANR	2351502	IfStatement	if ( flags & FNM_CASEFOLD )		2351340	3					
ANR	2351503	Condition	flags & FNM_CASEFOLD	188:7:5669:5688	2351340	0	True				
ANR	2351504	BitAndExpression	flags & FNM_CASEFOLD		2351340	0		&			
ANR	2351505	Identifier	flags		2351340	0					
ANR	2351506	Identifier	FNM_CASEFOLD		2351340	1					
ANR	2351507	ExpressionStatement	c2 = tolower ( ( unsigned char ) c2 )	189:4:5695:5726	2351340	1	True				
ANR	2351508	AssignmentExpression	c2 = tolower ( ( unsigned char ) c2 )		2351340	0		=			
ANR	2351509	Identifier	c2		2351340	0					
ANR	2351510	CallExpression	tolower ( ( unsigned char ) c2 )		2351340	1					
ANR	2351511	Callee	tolower		2351340	0					
ANR	2351512	Identifier	tolower		2351340	0					
ANR	2351513	ArgumentList	( unsigned char ) c2		2351340	1					
ANR	2351514	Argument	( unsigned char ) c2		2351340	0					
ANR	2351515	CastExpression	( unsigned char ) c2		2351340	0					
ANR	2351516	CastTarget	unsigned char		2351340	0					
ANR	2351517	Identifier	c2		2351340	1					
ANR	2351518	IfStatement	if ( ( unsigned char ) c <= ( unsigned char ) test && ( unsigned char ) test <= ( unsigned char ) c2 )		2351340	4					
ANR	2351519	Condition	( unsigned char ) c <= ( unsigned char ) test && ( unsigned char ) test <= ( unsigned char ) c2	191:7:5736:5825	2351340	0	True				
ANR	2351520	AndExpression	( unsigned char ) c <= ( unsigned char ) test && ( unsigned char ) test <= ( unsigned char ) c2		2351340	0		&&			
ANR	2351521	RelationalExpression	( unsigned char ) c <= ( unsigned char ) test		2351340	0		<=			
ANR	2351522	CastExpression	( unsigned char ) c		2351340	0					
ANR	2351523	CastTarget	unsigned char		2351340	0					
ANR	2351524	Identifier	c		2351340	1					
ANR	2351525	CastExpression	( unsigned char ) test		2351340	1					
ANR	2351526	CastTarget	unsigned char		2351340	0					
ANR	2351527	Identifier	test		2351340	1					
ANR	2351528	RelationalExpression	( unsigned char ) test <= ( unsigned char ) c2		2351340	1		<=			
ANR	2351529	CastExpression	( unsigned char ) test		2351340	0					
ANR	2351530	CastTarget	unsigned char		2351340	0					
ANR	2351531	Identifier	test		2351340	1					
ANR	2351532	CastExpression	( unsigned char ) c2		2351340	1					
ANR	2351533	CastTarget	unsigned char		2351340	0					
ANR	2351534	Identifier	c2		2351340	1					
ANR	2351535	ExpressionStatement	ok = 1	193:4:5832:5838	2351340	1	True				
ANR	2351536	AssignmentExpression	ok = 1		2351340	0		=			
ANR	2351537	Identifier	ok		2351340	0					
ANR	2351538	PrimaryExpression	1		2351340	1					
ANR	2351539	ElseStatement	else		2351340	0					
ANR	2351540	IfStatement	if ( c == test )		2351340	0					
ANR	2351541	Condition	c == test	194:13:5853:5861	2351340	0	True				
ANR	2351542	EqualityExpression	c == test		2351340	0		==			
ANR	2351543	Identifier	c		2351340	0					
ANR	2351544	Identifier	test		2351340	1					
ANR	2351545	ExpressionStatement	ok = 1	195:3:5867:5873	2351340	1	True				
ANR	2351546	AssignmentExpression	ok = 1		2351340	0		=			
ANR	2351547	Identifier	ok		2351340	0					
ANR	2351548	PrimaryExpression	1		2351340	1					
ANR	2351549	ReturnStatement	return ( ok == negate ? NULL : pattern ) ;	197:1:5879:5917	2351340	5	True				
ANR	2351550	ConditionalExpression	ok == negate ? NULL : pattern		2351340	0					
ANR	2351551	Condition	ok == negate		2351340	0					
ANR	2351552	EqualityExpression	ok == negate		2351340	0		==			
ANR	2351553	Identifier	ok		2351340	0					
ANR	2351554	Identifier	negate		2351340	1					
ANR	2351555	Identifier	NULL		2351340	1					
ANR	2351556	Identifier	pattern		2351340	2					
ANR	2351557	ReturnType	static const char *		2351340	1					
ANR	2351558	Identifier	rangematch		2351340	2					
ANR	2351559	ParameterList	"const char * pattern , char test , int flags"		2351340	3					
ANR	2351560	Parameter	const char * pattern	153:11:4763:4781	2351340	0	True				
ANR	2351561	ParameterType	const char *		2351340	0					
ANR	2351562	Identifier	pattern		2351340	1					
ANR	2351563	Parameter	char test	153:32:4784:4792	2351340	1	True				
ANR	2351564	ParameterType	char		2351340	0					
ANR	2351565	Identifier	test		2351340	1					
ANR	2351566	Parameter	int flags	153:43:4795:4803	2351340	2	True				
ANR	2351567	ParameterType	int		2351340	0					
ANR	2351568	Identifier	flags		2351340	1					
ANR	2351569	CFGEntryNode	ENTRY		2351340		True				
ANR	2351570	CFGExitNode	EXIT		2351340		True				
ANR	2351571	Symbol	* pattern		2351340						
ANR	2351572	Symbol	c		2351340						
ANR	2351573	Symbol	NULL		2351340						
ANR	2351574	Symbol	test		2351340						
ANR	2351575	Symbol	tolower		2351340						
ANR	2351576	Symbol	* ( pattern + 1 )		2351340						
ANR	2351577	Symbol	pattern		2351340						
ANR	2351578	Symbol	flags		2351340						
ANR	2351579	Symbol	EOS		2351340						
ANR	2351580	Symbol	FNM_NOESCAPE		2351340						
ANR	2351581	Symbol	c2		2351340						
ANR	2351582	Symbol	negate		2351340						
ANR	2351583	Symbol	FNM_CASEFOLD		2351340						
ANR	2351584	Symbol	ok		2351340						
ANR	2351585	Symbol	* pattern ++		2351340						
