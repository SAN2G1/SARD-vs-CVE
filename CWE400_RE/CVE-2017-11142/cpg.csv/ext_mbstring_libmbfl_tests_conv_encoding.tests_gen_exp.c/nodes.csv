command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	664728	File	data/converged/CVE-2017-11142_php-src/ext_mbstring_libmbfl_tests_conv_encoding.tests_gen_exp.c								
ANR	664729	ClassDef	mappings_entry	7:0:99:161							
ANR	664730	DeclStmt									
ANR	664731	Decl							int	int	cp_uni
ANR	664732	DeclStmt									
ANR	664733	Decl							int	int	n
ANR	664734	DeclStmt									
ANR	664735	Decl							int	int [ 16 ]	cp_932
ANR	664736	ClassDef	mappings	13:0:165:243							
ANR	664737	DeclStmt									
ANR	664738	Decl							size_t	size_t	n
ANR	664739	DeclStmt									
ANR	664740	Decl							size_t	size_t	nalloc
ANR	664741	DeclStmt									
ANR	664742	Decl							struct mappings_entry	struct mappings_entry *	entries
ANR	664743	Function	mappings_init	19:0:247:347							
ANR	664744	FunctionDef	mappings_init (struct mappings * map)		664743	0					
ANR	664745	CompoundStatement		20:0:295:347	664743	0					
ANR	664746	ExpressionStatement	map -> n = 0	21:1:298:308	664743	0	True				
ANR	664747	AssignmentExpression	map -> n = 0		664743	0		=			
ANR	664748	PtrMemberAccess	map -> n		664743	0					
ANR	664749	Identifier	map		664743	0					
ANR	664750	Identifier	n		664743	1					
ANR	664751	PrimaryExpression	0		664743	1					
ANR	664752	ExpressionStatement	map -> nalloc = 0	22:1:311:326	664743	1	True				
ANR	664753	AssignmentExpression	map -> nalloc = 0		664743	0		=			
ANR	664754	PtrMemberAccess	map -> nalloc		664743	0					
ANR	664755	Identifier	map		664743	0					
ANR	664756	Identifier	nalloc		664743	1					
ANR	664757	PrimaryExpression	0		664743	1					
ANR	664758	ExpressionStatement	map -> entries = 0	23:1:329:345	664743	2	True				
ANR	664759	AssignmentExpression	map -> entries = 0		664743	0		=			
ANR	664760	PtrMemberAccess	map -> entries		664743	0					
ANR	664761	Identifier	map		664743	0					
ANR	664762	Identifier	entries		664743	1					
ANR	664763	PrimaryExpression	0		664743	1					
ANR	664764	ReturnType	static void		664743	1					
ANR	664765	Identifier	mappings_init		664743	2					
ANR	664766	ParameterList	struct mappings * map		664743	3					
ANR	664767	Parameter	struct mappings * map	19:26:273:292	664743	0	True				
ANR	664768	ParameterType	struct mappings *		664743	0					
ANR	664769	Identifier	map		664743	1					
ANR	664770	CFGEntryNode	ENTRY		664743		True				
ANR	664771	CFGExitNode	EXIT		664743		True				
ANR	664772	Symbol	map -> n		664743						
ANR	664773	Symbol	map -> entries		664743						
ANR	664774	Symbol	* map		664743						
ANR	664775	Symbol	map		664743						
ANR	664776	Symbol	map -> nalloc		664743						
ANR	664777	Function	mappings_destroy	26:0:350:444							
ANR	664778	FunctionDef	mappings_destroy (struct mappings * map)		664777	0					
ANR	664779	CompoundStatement		27:0:401:444	664777	0					
ANR	664780	IfStatement	if ( map -> entries )		664777	0					
ANR	664781	Condition	map -> entries	28:5:408:419	664777	0	True				
ANR	664782	PtrMemberAccess	map -> entries		664777	0					
ANR	664783	Identifier	map		664777	0					
ANR	664784	Identifier	entries		664777	1					
ANR	664785	ExpressionStatement	free ( map -> entries )	29:2:424:442	664777	1	True				
ANR	664786	CallExpression	free ( map -> entries )		664777	0					
ANR	664787	Callee	free		664777	0					
ANR	664788	Identifier	free		664777	0					
ANR	664789	ArgumentList	map -> entries		664777	1					
ANR	664790	Argument	map -> entries		664777	0					
ANR	664791	PtrMemberAccess	map -> entries		664777	0					
ANR	664792	Identifier	map		664777	0					
ANR	664793	Identifier	entries		664777	1					
ANR	664794	ReturnType	static void		664777	1					
ANR	664795	Identifier	mappings_destroy		664777	2					
ANR	664796	ParameterList	struct mappings * map		664777	3					
ANR	664797	Parameter	struct mappings * map	26:29:379:398	664777	0	True				
ANR	664798	ParameterType	struct mappings *		664777	0					
ANR	664799	Identifier	map		664777	1					
ANR	664800	CFGEntryNode	ENTRY		664777		True				
ANR	664801	CFGExitNode	EXIT		664777		True				
ANR	664802	Symbol	map -> entries		664777						
ANR	664803	Symbol	* map		664777						
ANR	664804	Symbol	map		664777						
ANR	664805	Function	mappings_grow	32:0:447:881							
ANR	664806	FunctionDef	mappings_grow (struct mappings * map)		664805	0					
ANR	664807	CompoundStatement		33:0:494:881	664805	0					
ANR	664808	IfStatement	if ( map -> n >= map -> nalloc )		664805	0					
ANR	664809	Condition	map -> n >= map -> nalloc	34:5:501:521	664805	0	True				
ANR	664810	RelationalExpression	map -> n >= map -> nalloc		664805	0		>=			
ANR	664811	PtrMemberAccess	map -> n		664805	0					
ANR	664812	Identifier	map		664805	0					
ANR	664813	Identifier	n		664805	1					
ANR	664814	PtrMemberAccess	map -> nalloc		664805	1					
ANR	664815	Identifier	map		664805	0					
ANR	664816	Identifier	nalloc		664805	1					
ANR	664817	CompoundStatement		4:2:71:101	664805	1					
ANR	664818	IdentifierDeclStatement	struct mappings_entry * new_entries ;	35:2:528:562	664805	0	True				
ANR	664819	IdentifierDecl	* new_entries		664805	0					
ANR	664820	IdentifierDeclType	struct mappings_entry *		664805	0					
ANR	664821	Identifier	new_entries		664805	1					
ANR	664822	IdentifierDeclStatement	"size_t n = map -> nalloc << 1 , a ;"	36:2:566:596	664805	1	True				
ANR	664823	IdentifierDecl	n = map -> nalloc << 1		664805	0					
ANR	664824	IdentifierDeclType	size_t		664805	0					
ANR	664825	Identifier	n		664805	1					
ANR	664826	AssignmentExpression	n = map -> nalloc << 1		664805	2		=			
ANR	664827	Identifier	n		664805	0					
ANR	664828	ShiftExpression	map -> nalloc << 1		664805	1		<<			
ANR	664829	PtrMemberAccess	map -> nalloc		664805	0					
ANR	664830	Identifier	map		664805	0					
ANR	664831	Identifier	nalloc		664805	1					
ANR	664832	PrimaryExpression	1		664805	1					
ANR	664833	IdentifierDecl	a		664805	1					
ANR	664834	IdentifierDeclType	size_t		664805	0					
ANR	664835	Identifier	a		664805	1					
ANR	664836	IfStatement	if ( n == 0 )		664805	2					
ANR	664837	Condition	n == 0	37:6:604:609	664805	0	True				
ANR	664838	EqualityExpression	n == 0		664805	0		==			
ANR	664839	Identifier	n		664805	0					
ANR	664840	PrimaryExpression	0		664805	1					
ANR	664841	ExpressionStatement	n = 1	38:3:615:620	664805	1	True				
ANR	664842	AssignmentExpression	n = 1		664805	0		=			
ANR	664843	Identifier	n		664805	0					
ANR	664844	PrimaryExpression	1		664805	1					
ANR	664845	ElseStatement	else		664805	0					
ANR	664846	IfStatement	if ( n <= map -> n )		664805	0					
ANR	664847	Condition	n <= map -> n	39:11:633:643	664805	0	True				
ANR	664848	RelationalExpression	n <= map -> n		664805	0		<=			
ANR	664849	Identifier	n		664805	0					
ANR	664850	PtrMemberAccess	map -> n		664805	1					
ANR	664851	Identifier	map		664805	0					
ANR	664852	Identifier	n		664805	1					
ANR	664853	ReturnStatement	return 2 ;	40:3:649:657	664805	1	True				
ANR	664854	PrimaryExpression	2		664805	0					
ANR	664855	ExpressionStatement	a = sizeof ( * map -> entries ) * n	41:2:661:690	664805	3	True				
ANR	664856	AssignmentExpression	a = sizeof ( * map -> entries ) * n		664805	0		=			
ANR	664857	Identifier	a		664805	0					
ANR	664858	MultiplicativeExpression	sizeof ( * map -> entries ) * n		664805	1		*			
ANR	664859	SizeofExpression	sizeof ( * map -> entries )		664805	0					
ANR	664860	Sizeof	sizeof		664805	0					
ANR	664861	UnaryOperationExpression	* map -> entries		664805	1					
ANR	664862	UnaryOperator	*		664805	0					
ANR	664863	PtrMemberAccess	map -> entries		664805	1					
ANR	664864	Identifier	map		664805	0					
ANR	664865	Identifier	entries		664805	1					
ANR	664866	Identifier	n		664805	1					
ANR	664867	IfStatement	if ( a / n != sizeof ( * map -> entries ) )		664805	4					
ANR	664868	Condition	a / n != sizeof ( * map -> entries )	42:6:698:727	664805	0	True				
ANR	664869	EqualityExpression	a / n != sizeof ( * map -> entries )		664805	0		!=			
ANR	664870	MultiplicativeExpression	a / n		664805	0		/			
ANR	664871	Identifier	a		664805	0					
ANR	664872	Identifier	n		664805	1					
ANR	664873	SizeofExpression	sizeof ( * map -> entries )		664805	1					
ANR	664874	Sizeof	sizeof		664805	0					
ANR	664875	UnaryOperationExpression	* map -> entries		664805	1					
ANR	664876	UnaryOperator	*		664805	0					
ANR	664877	PtrMemberAccess	map -> entries		664805	1					
ANR	664878	Identifier	map		664805	0					
ANR	664879	Identifier	entries		664805	1					
ANR	664880	ReturnStatement	return 2 ;	43:3:733:741	664805	1	True				
ANR	664881	PrimaryExpression	2		664805	0					
ANR	664882	ExpressionStatement	"new_entries = realloc ( map -> entries , a )"	44:2:745:783	664805	5	True				
ANR	664883	AssignmentExpression	"new_entries = realloc ( map -> entries , a )"		664805	0		=			
ANR	664884	Identifier	new_entries		664805	0					
ANR	664885	CallExpression	"realloc ( map -> entries , a )"		664805	1					
ANR	664886	Callee	realloc		664805	0					
ANR	664887	Identifier	realloc		664805	0					
ANR	664888	ArgumentList	map -> entries		664805	1					
ANR	664889	Argument	map -> entries		664805	0					
ANR	664890	PtrMemberAccess	map -> entries		664805	0					
ANR	664891	Identifier	map		664805	0					
ANR	664892	Identifier	entries		664805	1					
ANR	664893	Argument	a		664805	1					
ANR	664894	Identifier	a		664805	0					
ANR	664895	IfStatement	if ( ! new_entries )		664805	6					
ANR	664896	Condition	! new_entries	45:6:791:802	664805	0	True				
ANR	664897	UnaryOperationExpression	! new_entries		664805	0					
ANR	664898	UnaryOperator	!		664805	0					
ANR	664899	Identifier	new_entries		664805	1					
ANR	664900	ReturnStatement	return 2 ;	46:3:808:816	664805	1	True				
ANR	664901	PrimaryExpression	2		664805	0					
ANR	664902	ExpressionStatement	map -> entries = new_entries	47:2:820:846	664805	7	True				
ANR	664903	AssignmentExpression	map -> entries = new_entries		664805	0		=			
ANR	664904	PtrMemberAccess	map -> entries		664805	0					
ANR	664905	Identifier	map		664805	0					
ANR	664906	Identifier	entries		664805	1					
ANR	664907	Identifier	new_entries		664805	1					
ANR	664908	ExpressionStatement	map -> nalloc = n	48:2:850:865	664805	8	True				
ANR	664909	AssignmentExpression	map -> nalloc = n		664805	0		=			
ANR	664910	PtrMemberAccess	map -> nalloc		664805	0					
ANR	664911	Identifier	map		664805	0					
ANR	664912	Identifier	nalloc		664805	1					
ANR	664913	Identifier	n		664805	1					
ANR	664914	ReturnStatement	return 0 ;	50:1:871:879	664805	1	True				
ANR	664915	PrimaryExpression	0		664805	0					
ANR	664916	ReturnType	static int		664805	1					
ANR	664917	Identifier	mappings_grow		664805	2					
ANR	664918	ParameterList	struct mappings * map		664805	3					
ANR	664919	Parameter	struct mappings * map	32:25:472:491	664805	0	True				
ANR	664920	ParameterType	struct mappings *		664805	0					
ANR	664921	Identifier	map		664805	1					
ANR	664922	CFGEntryNode	ENTRY		664805		True				
ANR	664923	CFGExitNode	EXIT		664805		True				
ANR	664924	Symbol	map -> n		664805						
ANR	664925	Symbol	* * map		664805						
ANR	664926	Symbol	new_entries		664805						
ANR	664927	Symbol	a		664805						
ANR	664928	Symbol	map -> entries		664805						
ANR	664929	Symbol	* map		664805						
ANR	664930	Symbol	* map -> entries		664805						
ANR	664931	Symbol	realloc		664805						
ANR	664932	Symbol	map		664805						
ANR	664933	Symbol	map -> nalloc		664805						
ANR	664934	Symbol	n		664805						
ANR	664935	Function	mappings_add	53:0:884:2121							
ANR	664936	FunctionDef	"mappings_add (struct mappings * map , int cp_uni , int cp_932)"		664935	0					
ANR	664937	CompoundStatement		54:0:954:2121	664935	0					
ANR	664938	IdentifierDeclStatement	size_t i ;	55:1:957:965	664935	0	True				
ANR	664939	IdentifierDecl	i		664935	0					
ANR	664940	IdentifierDeclType	size_t		664935	0					
ANR	664941	Identifier	i		664935	1					
ANR	664942	IdentifierDeclStatement	"size_t s = 0 , e = map -> n ;"	56:1:968:992	664935	1	True				
ANR	664943	IdentifierDecl	s = 0		664935	0					
ANR	664944	IdentifierDeclType	size_t		664935	0					
ANR	664945	Identifier	s		664935	1					
ANR	664946	AssignmentExpression	s = 0		664935	2		=			
ANR	664947	Identifier	s		664935	0					
ANR	664948	PrimaryExpression	0		664935	1					
ANR	664949	IdentifierDecl	e = map -> n		664935	1					
ANR	664950	IdentifierDeclType	size_t		664935	0					
ANR	664951	Identifier	e		664935	1					
ANR	664952	AssignmentExpression	e = map -> n		664935	2		=			
ANR	664953	Identifier	e		664935	0					
ANR	664954	PtrMemberAccess	map -> n		664935	1					
ANR	664955	Identifier	map		664935	0					
ANR	664956	Identifier	n		664935	1					
ANR	664957	IdentifierDeclStatement	struct mappings_entry * entry ;	57:1:995:1023	664935	2	True				
ANR	664958	IdentifierDecl	* entry		664935	0					
ANR	664959	IdentifierDeclType	struct mappings_entry *		664935	0					
ANR	664960	Identifier	entry		664935	1					
ANR	664961	ForStatement	for ( ; ; )		664935	3					
ANR	664962	CompoundStatement		6:10:81:81	664935	0					
ANR	664963	ExpressionStatement	i = ( s + e ) / 2	60:2:1040:1055	664935	0	True				
ANR	664964	AssignmentExpression	i = ( s + e ) / 2		664935	0		=			
ANR	664965	Identifier	i		664935	0					
ANR	664966	MultiplicativeExpression	( s + e ) / 2		664935	1		/			
ANR	664967	AdditiveExpression	s + e		664935	0		+			
ANR	664968	Identifier	s		664935	0					
ANR	664969	Identifier	e		664935	1					
ANR	664970	PrimaryExpression	2		664935	1					
ANR	664971	ExpressionStatement	entry = & map -> entries [ i ]	61:2:1059:1083	664935	1	True				
ANR	664972	AssignmentExpression	entry = & map -> entries [ i ]		664935	0		=			
ANR	664973	Identifier	entry		664935	0					
ANR	664974	UnaryOperationExpression	& map -> entries [ i ]		664935	1					
ANR	664975	UnaryOperator	&		664935	0					
ANR	664976	ArrayIndexing	map -> entries [ i ]		664935	1					
ANR	664977	PtrMemberAccess	map -> entries		664935	0					
ANR	664978	Identifier	map		664935	0					
ANR	664979	Identifier	entries		664935	1					
ANR	664980	Identifier	i		664935	1					
ANR	664981	IfStatement	if ( e == i || entry -> cp_uni > cp_uni )		664935	2					
ANR	664982	Condition	e == i || entry -> cp_uni > cp_uni	62:6:1091:1122	664935	0	True				
ANR	664983	OrExpression	e == i || entry -> cp_uni > cp_uni		664935	0		||			
ANR	664984	EqualityExpression	e == i		664935	0		==			
ANR	664985	Identifier	e		664935	0					
ANR	664986	Identifier	i		664935	1					
ANR	664987	RelationalExpression	entry -> cp_uni > cp_uni		664935	1		>			
ANR	664988	PtrMemberAccess	entry -> cp_uni		664935	0					
ANR	664989	Identifier	entry		664935	0					
ANR	664990	Identifier	cp_uni		664935	1					
ANR	664991	Identifier	cp_uni		664935	1					
ANR	664992	CompoundStatement		9:40:170:170	664935	1					
ANR	664993	IfStatement	if ( e == i )		664935	0					
ANR	664994	Condition	e == i	63:7:1134:1139	664935	0	True				
ANR	664995	EqualityExpression	e == i		664935	0		==			
ANR	664996	Identifier	e		664935	0					
ANR	664997	Identifier	i		664935	1					
ANR	664998	CompoundStatement		11:4:193:219	664935	1					
ANR	664999	IdentifierDeclStatement	int r = mappings_grow ( map ) ;	64:4:1148:1174	664935	0	True				
ANR	665000	IdentifierDecl	r = mappings_grow ( map )		664935	0					
ANR	665001	IdentifierDeclType	int		664935	0					
ANR	665002	Identifier	r		664935	1					
ANR	665003	AssignmentExpression	r = mappings_grow ( map )		664935	2		=			
ANR	665004	Identifier	r		664935	0					
ANR	665005	CallExpression	mappings_grow ( map )		664935	1					
ANR	665006	Callee	mappings_grow		664935	0					
ANR	665007	Identifier	mappings_grow		664935	0					
ANR	665008	ArgumentList	map		664935	1					
ANR	665009	Argument	map		664935	0					
ANR	665010	Identifier	map		664935	0					
ANR	665011	IfStatement	if ( r )		664935	1					
ANR	665012	Condition	r	65:8:1184:1184	664935	0	True				
ANR	665013	Identifier	r		664935	0					
ANR	665014	ReturnStatement	return r ;	66:5:1192:1200	664935	1	True				
ANR	665015	Identifier	r		664935	0					
ANR	665016	IfStatement	if ( map -> n > i )		664935	2					
ANR	665017	Condition	map -> n > i	67:8:1210:1219	664935	0	True				
ANR	665018	RelationalExpression	map -> n > i		664935	0		>			
ANR	665019	PtrMemberAccess	map -> n		664935	0					
ANR	665020	Identifier	map		664935	0					
ANR	665021	Identifier	n		664935	1					
ANR	665022	Identifier	i		664935	1					
ANR	665023	CompoundStatement		15:5:274:326	664935	1					
ANR	665024	IdentifierDeclStatement	"size_t n = map -> n - i , a = sizeof ( * map -> entries ) * n ;"	68:5:1229:1281	664935	0	True				
ANR	665025	IdentifierDecl	n = map -> n - i		664935	0					
ANR	665026	IdentifierDeclType	size_t		664935	0					
ANR	665027	Identifier	n		664935	1					
ANR	665028	AssignmentExpression	n = map -> n - i		664935	2		=			
ANR	665029	Identifier	n		664935	0					
ANR	665030	AdditiveExpression	map -> n - i		664935	1		-			
ANR	665031	PtrMemberAccess	map -> n		664935	0					
ANR	665032	Identifier	map		664935	0					
ANR	665033	Identifier	n		664935	1					
ANR	665034	Identifier	i		664935	1					
ANR	665035	IdentifierDecl	a = sizeof ( * map -> entries ) * n		664935	1					
ANR	665036	IdentifierDeclType	size_t		664935	0					
ANR	665037	Identifier	a		664935	1					
ANR	665038	AssignmentExpression	a = sizeof ( * map -> entries ) * n		664935	2		=			
ANR	665039	Identifier	a		664935	0					
ANR	665040	MultiplicativeExpression	sizeof ( * map -> entries ) * n		664935	1		*			
ANR	665041	SizeofExpression	sizeof ( * map -> entries )		664935	0					
ANR	665042	Sizeof	sizeof		664935	0					
ANR	665043	UnaryOperationExpression	* map -> entries		664935	1					
ANR	665044	UnaryOperator	*		664935	0					
ANR	665045	PtrMemberAccess	map -> entries		664935	1					
ANR	665046	Identifier	map		664935	0					
ANR	665047	Identifier	entries		664935	1					
ANR	665048	Identifier	n		664935	1					
ANR	665049	IfStatement	if ( a / n != sizeof ( * map -> entries ) )		664935	1					
ANR	665050	Condition	a / n != sizeof ( * map -> entries )	69:9:1292:1321	664935	0	True				
ANR	665051	EqualityExpression	a / n != sizeof ( * map -> entries )		664935	0		!=			
ANR	665052	MultiplicativeExpression	a / n		664935	0		/			
ANR	665053	Identifier	a		664935	0					
ANR	665054	Identifier	n		664935	1					
ANR	665055	SizeofExpression	sizeof ( * map -> entries )		664935	1					
ANR	665056	Sizeof	sizeof		664935	0					
ANR	665057	UnaryOperationExpression	* map -> entries		664935	1					
ANR	665058	UnaryOperator	*		664935	0					
ANR	665059	PtrMemberAccess	map -> entries		664935	1					
ANR	665060	Identifier	map		664935	0					
ANR	665061	Identifier	entries		664935	1					
ANR	665062	ReturnStatement	return 2 ;	70:6:1330:1338	664935	1	True				
ANR	665063	PrimaryExpression	2		664935	0					
ANR	665064	ExpressionStatement	"memmove ( & map -> entries [ i + 1 ] , & map -> entries [ i ] , a )"	71:5:1345:1395	664935	2	True				
ANR	665065	CallExpression	"memmove ( & map -> entries [ i + 1 ] , & map -> entries [ i ] , a )"		664935	0					
ANR	665066	Callee	memmove		664935	0					
ANR	665067	Identifier	memmove		664935	0					
ANR	665068	ArgumentList	& map -> entries [ i + 1 ]		664935	1					
ANR	665069	Argument	& map -> entries [ i + 1 ]		664935	0					
ANR	665070	UnaryOperationExpression	& map -> entries [ i + 1 ]		664935	0					
ANR	665071	UnaryOperator	&		664935	0					
ANR	665072	ArrayIndexing	map -> entries [ i + 1 ]		664935	1					
ANR	665073	PtrMemberAccess	map -> entries		664935	0					
ANR	665074	Identifier	map		664935	0					
ANR	665075	Identifier	entries		664935	1					
ANR	665076	AdditiveExpression	i + 1		664935	1		+			
ANR	665077	Identifier	i		664935	0					
ANR	665078	PrimaryExpression	1		664935	1					
ANR	665079	Argument	& map -> entries [ i ]		664935	1					
ANR	665080	UnaryOperationExpression	& map -> entries [ i ]		664935	0					
ANR	665081	UnaryOperator	&		664935	0					
ANR	665082	ArrayIndexing	map -> entries [ i ]		664935	1					
ANR	665083	PtrMemberAccess	map -> entries		664935	0					
ANR	665084	Identifier	map		664935	0					
ANR	665085	Identifier	entries		664935	1					
ANR	665086	Identifier	i		664935	1					
ANR	665087	Argument	a		664935	2					
ANR	665088	Identifier	a		664935	0					
ANR	665089	ExpressionStatement	++ map -> n	73:4:1407:1415	664935	3	True				
ANR	665090	UnaryExpression	++ map -> n		664935	0					
ANR	665091	IncDec	++		664935	0					
ANR	665092	PtrMemberAccess	map -> n		664935	1					
ANR	665093	Identifier	map		664935	0					
ANR	665094	Identifier	n		664935	1					
ANR	665095	ExpressionStatement	entry = & map -> entries [ i ]	74:4:1421:1445	664935	4	True				
ANR	665096	AssignmentExpression	entry = & map -> entries [ i ]		664935	0		=			
ANR	665097	Identifier	entry		664935	0					
ANR	665098	UnaryOperationExpression	& map -> entries [ i ]		664935	1					
ANR	665099	UnaryOperator	&		664935	0					
ANR	665100	ArrayIndexing	map -> entries [ i ]		664935	1					
ANR	665101	PtrMemberAccess	map -> entries		664935	0					
ANR	665102	Identifier	map		664935	0					
ANR	665103	Identifier	entries		664935	1					
ANR	665104	Identifier	i		664935	1					
ANR	665105	ExpressionStatement	entry -> cp_uni = cp_uni	75:4:1451:1473	664935	5	True				
ANR	665106	AssignmentExpression	entry -> cp_uni = cp_uni		664935	0		=			
ANR	665107	PtrMemberAccess	entry -> cp_uni		664935	0					
ANR	665108	Identifier	entry		664935	0					
ANR	665109	Identifier	cp_uni		664935	1					
ANR	665110	Identifier	cp_uni		664935	1					
ANR	665111	ExpressionStatement	entry -> n = 0	76:4:1479:1491	664935	6	True				
ANR	665112	AssignmentExpression	entry -> n = 0		664935	0		=			
ANR	665113	PtrMemberAccess	entry -> n		664935	0					
ANR	665114	Identifier	entry		664935	0					
ANR	665115	Identifier	n		664935	1					
ANR	665116	PrimaryExpression	0		664935	1					
ANR	665117	BreakStatement	break ;	77:4:1497:1502	664935	7	True				
ANR	665118	ExpressionStatement	e = i	79:3:1512:1517	664935	1	True				
ANR	665119	AssignmentExpression	e = i		664935	0		=			
ANR	665120	Identifier	e		664935	0					
ANR	665121	Identifier	i		664935	1					
ANR	665122	ElseStatement	else		664935	0					
ANR	665123	IfStatement	if ( entry -> cp_uni < cp_uni )		664935	0					
ANR	665124	Condition	entry -> cp_uni < cp_uni	80:13:1532:1553	664935	0	True				
ANR	665125	RelationalExpression	entry -> cp_uni < cp_uni		664935	0		<			
ANR	665126	PtrMemberAccess	entry -> cp_uni		664935	0					
ANR	665127	Identifier	entry		664935	0					
ANR	665128	Identifier	cp_uni		664935	1					
ANR	665129	Identifier	cp_uni		664935	1					
ANR	665130	CompoundStatement		27:37:601:601	664935	1					
ANR	665131	IfStatement	if ( s == i )		664935	0					
ANR	665132	Condition	s == i	81:7:1565:1570	664935	0	True				
ANR	665133	EqualityExpression	s == i		664935	0		==			
ANR	665134	Identifier	s		664935	0					
ANR	665135	Identifier	i		664935	1					
ANR	665136	CompoundStatement		29:4:624:650	664935	1					
ANR	665137	IdentifierDeclStatement	int r = mappings_grow ( map ) ;	82:4:1579:1605	664935	0	True				
ANR	665138	IdentifierDecl	r = mappings_grow ( map )		664935	0					
ANR	665139	IdentifierDeclType	int		664935	0					
ANR	665140	Identifier	r		664935	1					
ANR	665141	AssignmentExpression	r = mappings_grow ( map )		664935	2		=			
ANR	665142	Identifier	r		664935	0					
ANR	665143	CallExpression	mappings_grow ( map )		664935	1					
ANR	665144	Callee	mappings_grow		664935	0					
ANR	665145	Identifier	mappings_grow		664935	0					
ANR	665146	ArgumentList	map		664935	1					
ANR	665147	Argument	map		664935	0					
ANR	665148	Identifier	map		664935	0					
ANR	665149	IfStatement	if ( r )		664935	1					
ANR	665150	Condition	r	83:8:1615:1615	664935	0	True				
ANR	665151	Identifier	r		664935	0					
ANR	665152	ReturnStatement	return r ;	84:5:1623:1631	664935	1	True				
ANR	665153	Identifier	r		664935	0					
ANR	665154	IfStatement	if ( map -> n > i + 1 )		664935	2					
ANR	665155	Condition	map -> n > i + 1	85:8:1641:1654	664935	0	True				
ANR	665156	RelationalExpression	map -> n > i + 1		664935	0		>			
ANR	665157	PtrMemberAccess	map -> n		664935	0					
ANR	665158	Identifier	map		664935	0					
ANR	665159	Identifier	n		664935	1					
ANR	665160	AdditiveExpression	i + 1		664935	1		+			
ANR	665161	Identifier	i		664935	0					
ANR	665162	PrimaryExpression	1		664935	1					
ANR	665163	CompoundStatement		33:5:709:767	664935	1					
ANR	665164	IdentifierDeclStatement	"size_t n = ( map -> n - i - 1 ) , a = sizeof ( * map -> entries ) * n ;"	86:5:1664:1722	664935	0	True				
ANR	665165	IdentifierDecl	n = ( map -> n - i - 1 )		664935	0					
ANR	665166	IdentifierDeclType	size_t		664935	0					
ANR	665167	Identifier	n		664935	1					
ANR	665168	AssignmentExpression	n = ( map -> n - i - 1 )		664935	2		=			
ANR	665169	Identifier	n		664935	0					
ANR	665170	AdditiveExpression	map -> n - i - 1		664935	1		-			
ANR	665171	PtrMemberAccess	map -> n		664935	0					
ANR	665172	Identifier	map		664935	0					
ANR	665173	Identifier	n		664935	1					
ANR	665174	AdditiveExpression	i - 1		664935	1		-			
ANR	665175	Identifier	i		664935	0					
ANR	665176	PrimaryExpression	1		664935	1					
ANR	665177	IdentifierDecl	a = sizeof ( * map -> entries ) * n		664935	1					
ANR	665178	IdentifierDeclType	size_t		664935	0					
ANR	665179	Identifier	a		664935	1					
ANR	665180	AssignmentExpression	a = sizeof ( * map -> entries ) * n		664935	2		=			
ANR	665181	Identifier	a		664935	0					
ANR	665182	MultiplicativeExpression	sizeof ( * map -> entries ) * n		664935	1		*			
ANR	665183	SizeofExpression	sizeof ( * map -> entries )		664935	0					
ANR	665184	Sizeof	sizeof		664935	0					
ANR	665185	UnaryOperationExpression	* map -> entries		664935	1					
ANR	665186	UnaryOperator	*		664935	0					
ANR	665187	PtrMemberAccess	map -> entries		664935	1					
ANR	665188	Identifier	map		664935	0					
ANR	665189	Identifier	entries		664935	1					
ANR	665190	Identifier	n		664935	1					
ANR	665191	IfStatement	if ( a / n != sizeof ( * map -> entries ) )		664935	1					
ANR	665192	Condition	a / n != sizeof ( * map -> entries )	87:9:1733:1762	664935	0	True				
ANR	665193	EqualityExpression	a / n != sizeof ( * map -> entries )		664935	0		!=			
ANR	665194	MultiplicativeExpression	a / n		664935	0		/			
ANR	665195	Identifier	a		664935	0					
ANR	665196	Identifier	n		664935	1					
ANR	665197	SizeofExpression	sizeof ( * map -> entries )		664935	1					
ANR	665198	Sizeof	sizeof		664935	0					
ANR	665199	UnaryOperationExpression	* map -> entries		664935	1					
ANR	665200	UnaryOperator	*		664935	0					
ANR	665201	PtrMemberAccess	map -> entries		664935	1					
ANR	665202	Identifier	map		664935	0					
ANR	665203	Identifier	entries		664935	1					
ANR	665204	ReturnStatement	return 2 ;	88:6:1771:1779	664935	1	True				
ANR	665205	PrimaryExpression	2		664935	0					
ANR	665206	ExpressionStatement	"memmove ( & map -> entries [ i + 2 ] , & map -> entries [ i + 1 ] , a )"	89:5:1786:1840	664935	2	True				
ANR	665207	CallExpression	"memmove ( & map -> entries [ i + 2 ] , & map -> entries [ i + 1 ] , a )"		664935	0					
ANR	665208	Callee	memmove		664935	0					
ANR	665209	Identifier	memmove		664935	0					
ANR	665210	ArgumentList	& map -> entries [ i + 2 ]		664935	1					
ANR	665211	Argument	& map -> entries [ i + 2 ]		664935	0					
ANR	665212	UnaryOperationExpression	& map -> entries [ i + 2 ]		664935	0					
ANR	665213	UnaryOperator	&		664935	0					
ANR	665214	ArrayIndexing	map -> entries [ i + 2 ]		664935	1					
ANR	665215	PtrMemberAccess	map -> entries		664935	0					
ANR	665216	Identifier	map		664935	0					
ANR	665217	Identifier	entries		664935	1					
ANR	665218	AdditiveExpression	i + 2		664935	1		+			
ANR	665219	Identifier	i		664935	0					
ANR	665220	PrimaryExpression	2		664935	1					
ANR	665221	Argument	& map -> entries [ i + 1 ]		664935	1					
ANR	665222	UnaryOperationExpression	& map -> entries [ i + 1 ]		664935	0					
ANR	665223	UnaryOperator	&		664935	0					
ANR	665224	ArrayIndexing	map -> entries [ i + 1 ]		664935	1					
ANR	665225	PtrMemberAccess	map -> entries		664935	0					
ANR	665226	Identifier	map		664935	0					
ANR	665227	Identifier	entries		664935	1					
ANR	665228	AdditiveExpression	i + 1		664935	1		+			
ANR	665229	Identifier	i		664935	0					
ANR	665230	PrimaryExpression	1		664935	1					
ANR	665231	Argument	a		664935	2					
ANR	665232	Identifier	a		664935	0					
ANR	665233	ExpressionStatement	++ map -> n	91:4:1852:1860	664935	3	True				
ANR	665234	UnaryExpression	++ map -> n		664935	0					
ANR	665235	IncDec	++		664935	0					
ANR	665236	PtrMemberAccess	map -> n		664935	1					
ANR	665237	Identifier	map		664935	0					
ANR	665238	Identifier	n		664935	1					
ANR	665239	ExpressionStatement	entry = & map -> entries [ i + 1 ]	92:4:1866:1894	664935	4	True				
ANR	665240	AssignmentExpression	entry = & map -> entries [ i + 1 ]		664935	0		=			
ANR	665241	Identifier	entry		664935	0					
ANR	665242	UnaryOperationExpression	& map -> entries [ i + 1 ]		664935	1					
ANR	665243	UnaryOperator	&		664935	0					
ANR	665244	ArrayIndexing	map -> entries [ i + 1 ]		664935	1					
ANR	665245	PtrMemberAccess	map -> entries		664935	0					
ANR	665246	Identifier	map		664935	0					
ANR	665247	Identifier	entries		664935	1					
ANR	665248	AdditiveExpression	i + 1		664935	1		+			
ANR	665249	Identifier	i		664935	0					
ANR	665250	PrimaryExpression	1		664935	1					
ANR	665251	ExpressionStatement	entry -> cp_uni = cp_uni	93:4:1900:1922	664935	5	True				
ANR	665252	AssignmentExpression	entry -> cp_uni = cp_uni		664935	0		=			
ANR	665253	PtrMemberAccess	entry -> cp_uni		664935	0					
ANR	665254	Identifier	entry		664935	0					
ANR	665255	Identifier	cp_uni		664935	1					
ANR	665256	Identifier	cp_uni		664935	1					
ANR	665257	ExpressionStatement	entry -> n = 0	94:4:1928:1940	664935	6	True				
ANR	665258	AssignmentExpression	entry -> n = 0		664935	0		=			
ANR	665259	PtrMemberAccess	entry -> n		664935	0					
ANR	665260	Identifier	entry		664935	0					
ANR	665261	Identifier	n		664935	1					
ANR	665262	PrimaryExpression	0		664935	1					
ANR	665263	BreakStatement	break ;	95:4:1946:1951	664935	7	True				
ANR	665264	ExpressionStatement	s = i	97:3:1961:1966	664935	1	True				
ANR	665265	AssignmentExpression	s = i		664935	0		=			
ANR	665266	Identifier	s		664935	0					
ANR	665267	Identifier	i		664935	1					
ANR	665268	ElseStatement	else		664935	0					
ANR	665269	CompoundStatement		45:9:1022:1022	664935	0					
ANR	665270	BreakStatement	break ;	99:3:1982:1987	664935	0	True				
ANR	665271	IfStatement	if ( entry -> n >= sizeof ( entry -> cp_932 ) / sizeof ( * entry -> cp_932 ) )		664935	4					
ANR	665272	Condition	entry -> n >= sizeof ( entry -> cp_932 ) / sizeof ( * entry -> cp_932 )	102:5:2001:2058	664935	0	True				
ANR	665273	RelationalExpression	entry -> n >= sizeof ( entry -> cp_932 ) / sizeof ( * entry -> cp_932 )		664935	0		>=			
ANR	665274	PtrMemberAccess	entry -> n		664935	0					
ANR	665275	Identifier	entry		664935	0					
ANR	665276	Identifier	n		664935	1					
ANR	665277	MultiplicativeExpression	sizeof ( entry -> cp_932 ) / sizeof ( * entry -> cp_932 )		664935	1		/			
ANR	665278	SizeofExpression	sizeof ( entry -> cp_932 )		664935	0					
ANR	665279	Sizeof	sizeof		664935	0					
ANR	665280	PtrMemberAccess	entry -> cp_932		664935	1					
ANR	665281	Identifier	entry		664935	0					
ANR	665282	Identifier	cp_932		664935	1					
ANR	665283	SizeofExpression	sizeof ( * entry -> cp_932 )		664935	1					
ANR	665284	Sizeof	sizeof		664935	0					
ANR	665285	UnaryOperationExpression	* entry -> cp_932		664935	1					
ANR	665286	UnaryOperator	*		664935	0					
ANR	665287	PtrMemberAccess	entry -> cp_932		664935	1					
ANR	665288	Identifier	entry		664935	0					
ANR	665289	Identifier	cp_932		664935	1					
ANR	665290	ReturnStatement	return 1 ;	103:2:2063:2071	664935	1	True				
ANR	665291	PrimaryExpression	1		664935	0					
ANR	665292	ExpressionStatement	entry -> cp_932 [ entry -> n ++ ] = cp_932	104:1:2074:2108	664935	5	True				
ANR	665293	AssignmentExpression	entry -> cp_932 [ entry -> n ++ ] = cp_932		664935	0		=			
ANR	665294	ArrayIndexing	entry -> cp_932 [ entry -> n ++ ]		664935	0					
ANR	665295	PtrMemberAccess	entry -> cp_932		664935	0					
ANR	665296	Identifier	entry		664935	0					
ANR	665297	Identifier	cp_932		664935	1					
ANR	665298	PostIncDecOperationExpression	entry -> n ++		664935	1					
ANR	665299	PtrMemberAccess	entry -> n		664935	0					
ANR	665300	Identifier	entry		664935	0					
ANR	665301	Identifier	n		664935	1					
ANR	665302	IncDec	++		664935	1					
ANR	665303	Identifier	cp_932		664935	1					
ANR	665304	ReturnStatement	return 0 ;	105:1:2111:2119	664935	6	True				
ANR	665305	PrimaryExpression	0		664935	0					
ANR	665306	ReturnType	static int		664935	1					
ANR	665307	Identifier	mappings_add		664935	2					
ANR	665308	ParameterList	"struct mappings * map , int cp_uni , int cp_932"		664935	3					
ANR	665309	Parameter	struct mappings * map	53:24:908:927	664935	0	True				
ANR	665310	ParameterType	struct mappings *		664935	0					
ANR	665311	Identifier	map		664935	1					
ANR	665312	Parameter	int cp_uni	53:46:930:939	664935	1	True				
ANR	665313	ParameterType	int		664935	0					
ANR	665314	Identifier	cp_uni		664935	1					
ANR	665315	Parameter	int cp_932	53:58:942:951	664935	2	True				
ANR	665316	ParameterType	int		664935	0					
ANR	665317	Identifier	cp_932		664935	1					
ANR	665318	CFGEntryNode	ENTRY		664935		True				
ANR	665319	CFGExitNode	EXIT		664935		True				
ANR	665320	InfiniteForNode	true		664935		True				
ANR	665321	Symbol	cp_932		664935						
ANR	665322	Symbol	a		664935						
ANR	665323	Symbol	entry -> cp_uni		664935						
ANR	665324	Symbol	map -> entries		664935						
ANR	665325	Symbol	e		664935						
ANR	665326	Symbol	* * entry		664935						
ANR	665327	Symbol	* map		664935						
ANR	665328	Symbol	* entry -> cp_932		664935						
ANR	665329	Symbol	i		664935						
ANR	665330	Symbol	mappings_grow		664935						
ANR	665331	Symbol	n		664935						
ANR	665332	Symbol	entry -> n		664935						
ANR	665333	Symbol	map -> n		664935						
ANR	665334	Symbol	* * map		664935						
ANR	665335	Symbol	entry		664935						
ANR	665336	Symbol	r		664935						
ANR	665337	Symbol	s		664935						
ANR	665338	Symbol	cp_uni		664935						
ANR	665339	Symbol	* map -> entries		664935						
ANR	665340	Symbol	entry -> cp_932		664935						
ANR	665341	Symbol	map		664935						
ANR	665342	Symbol	* entry		664935						
ANR	665343	ClassDef	generator_entry	108:0:2124:2262							
ANR	665344	DeclStmt									
ANR	665345	Decl							const char	const char *	name
ANR	665346	DeclStmt									
ANR	665347	Decl							const char	const char *	prologue
ANR	665348	DeclStmt									
ANR	665349	Decl							const char	const char *	epilogue
ANR	665350	DeclStmt									
ANR	665351	Decl							void ( * ) ( const struct mappings_entry * )	void ( * ) ( const struct mappings_entry * )	visitor
ANR	665352	Function	utf32_utf8	115:0:2266:3271							
ANR	665353	FunctionDef	"utf32_utf8 (char * buf , int k)"		665352	0					
ANR	665354	CompoundStatement		116:0:2306:3271	665352	0					
ANR	665355	IdentifierDeclStatement	int retval = 0 ;	117:1:2309:2323	665352	0	True				
ANR	665356	IdentifierDecl	retval = 0		665352	0					
ANR	665357	IdentifierDeclType	int		665352	0					
ANR	665358	Identifier	retval		665352	1					
ANR	665359	AssignmentExpression	retval = 0		665352	2		=			
ANR	665360	Identifier	retval		665352	0					
ANR	665361	PrimaryExpression	0		665352	1					
ANR	665362	IfStatement	if ( k < 0x80 )		665352	1					
ANR	665363	Condition	k < 0x80	119:5:2331:2338	665352	0	True				
ANR	665364	RelationalExpression	k < 0x80		665352	0		<			
ANR	665365	Identifier	k		665352	0					
ANR	665366	PrimaryExpression	0x80		665352	1					
ANR	665367	CompoundStatement		4:15:34:34	665352	1					
ANR	665368	ExpressionStatement	buf [ 0 ] = k	120:2:2345:2355	665352	0	True				
ANR	665369	AssignmentExpression	buf [ 0 ] = k		665352	0		=			
ANR	665370	ArrayIndexing	buf [ 0 ]		665352	0					
ANR	665371	Identifier	buf		665352	0					
ANR	665372	PrimaryExpression	0		665352	1					
ANR	665373	Identifier	k		665352	1					
ANR	665374	ExpressionStatement	retval = 1	121:2:2359:2369	665352	1	True				
ANR	665375	AssignmentExpression	retval = 1		665352	0		=			
ANR	665376	Identifier	retval		665352	0					
ANR	665377	PrimaryExpression	1		665352	1					
ANR	665378	ElseStatement	else		665352	0					
ANR	665379	IfStatement	if ( k < 0x800 )		665352	0					
ANR	665380	Condition	k < 0x800	122:12:2383:2391	665352	0	True				
ANR	665381	RelationalExpression	k < 0x800		665352	0		<			
ANR	665382	Identifier	k		665352	0					
ANR	665383	PrimaryExpression	0x800		665352	1					
ANR	665384	CompoundStatement		7:23:87:87	665352	1					
ANR	665385	ExpressionStatement	buf [ 0 ] = 0xc0 | ( k >> 6 )	123:2:2398:2422	665352	0	True				
ANR	665386	AssignmentExpression	buf [ 0 ] = 0xc0 | ( k >> 6 )		665352	0		=			
ANR	665387	ArrayIndexing	buf [ 0 ]		665352	0					
ANR	665388	Identifier	buf		665352	0					
ANR	665389	PrimaryExpression	0		665352	1					
ANR	665390	InclusiveOrExpression	0xc0 | ( k >> 6 )		665352	1		|			
ANR	665391	PrimaryExpression	0xc0		665352	0					
ANR	665392	ShiftExpression	k >> 6		665352	1		>>			
ANR	665393	Identifier	k		665352	0					
ANR	665394	PrimaryExpression	6		665352	1					
ANR	665395	ExpressionStatement	buf [ 1 ] = 0x80 | ( k & 0x3f )	124:2:2426:2452	665352	1	True				
ANR	665396	AssignmentExpression	buf [ 1 ] = 0x80 | ( k & 0x3f )		665352	0		=			
ANR	665397	ArrayIndexing	buf [ 1 ]		665352	0					
ANR	665398	Identifier	buf		665352	0					
ANR	665399	PrimaryExpression	1		665352	1					
ANR	665400	InclusiveOrExpression	0x80 | ( k & 0x3f )		665352	1		|			
ANR	665401	PrimaryExpression	0x80		665352	0					
ANR	665402	BitAndExpression	k & 0x3f		665352	1		&			
ANR	665403	Identifier	k		665352	0					
ANR	665404	PrimaryExpression	0x3f		665352	1					
ANR	665405	ExpressionStatement	retval = 2	125:2:2456:2466	665352	2	True				
ANR	665406	AssignmentExpression	retval = 2		665352	0		=			
ANR	665407	Identifier	retval		665352	0					
ANR	665408	PrimaryExpression	2		665352	1					
ANR	665409	ElseStatement	else		665352	0					
ANR	665410	IfStatement	if ( k < 0x10000 )		665352	0					
ANR	665411	Condition	k < 0x10000	126:12:2480:2490	665352	0	True				
ANR	665412	RelationalExpression	k < 0x10000		665352	0		<			
ANR	665413	Identifier	k		665352	0					
ANR	665414	PrimaryExpression	0x10000		665352	1					
ANR	665415	CompoundStatement		11:25:186:186	665352	1					
ANR	665416	ExpressionStatement	buf [ 0 ] = 0xe0 | ( k >> 12 )	127:2:2497:2522	665352	0	True				
ANR	665417	AssignmentExpression	buf [ 0 ] = 0xe0 | ( k >> 12 )		665352	0		=			
ANR	665418	ArrayIndexing	buf [ 0 ]		665352	0					
ANR	665419	Identifier	buf		665352	0					
ANR	665420	PrimaryExpression	0		665352	1					
ANR	665421	InclusiveOrExpression	0xe0 | ( k >> 12 )		665352	1		|			
ANR	665422	PrimaryExpression	0xe0		665352	0					
ANR	665423	ShiftExpression	k >> 12		665352	1		>>			
ANR	665424	Identifier	k		665352	0					
ANR	665425	PrimaryExpression	12		665352	1					
ANR	665426	ExpressionStatement	buf [ 1 ] = 0x80 | ( ( k >> 6 ) & 0x3f )	128:2:2526:2559	665352	1	True				
ANR	665427	AssignmentExpression	buf [ 1 ] = 0x80 | ( ( k >> 6 ) & 0x3f )		665352	0		=			
ANR	665428	ArrayIndexing	buf [ 1 ]		665352	0					
ANR	665429	Identifier	buf		665352	0					
ANR	665430	PrimaryExpression	1		665352	1					
ANR	665431	InclusiveOrExpression	0x80 | ( ( k >> 6 ) & 0x3f )		665352	1		|			
ANR	665432	PrimaryExpression	0x80		665352	0					
ANR	665433	BitAndExpression	( k >> 6 ) & 0x3f		665352	1		&			
ANR	665434	ShiftExpression	k >> 6		665352	0		>>			
ANR	665435	Identifier	k		665352	0					
ANR	665436	PrimaryExpression	6		665352	1					
ANR	665437	PrimaryExpression	0x3f		665352	1					
ANR	665438	ExpressionStatement	buf [ 2 ] = 0x80 | ( k & 0x3f )	129:2:2563:2589	665352	2	True				
ANR	665439	AssignmentExpression	buf [ 2 ] = 0x80 | ( k & 0x3f )		665352	0		=			
ANR	665440	ArrayIndexing	buf [ 2 ]		665352	0					
ANR	665441	Identifier	buf		665352	0					
ANR	665442	PrimaryExpression	2		665352	1					
ANR	665443	InclusiveOrExpression	0x80 | ( k & 0x3f )		665352	1		|			
ANR	665444	PrimaryExpression	0x80		665352	0					
ANR	665445	BitAndExpression	k & 0x3f		665352	1		&			
ANR	665446	Identifier	k		665352	0					
ANR	665447	PrimaryExpression	0x3f		665352	1					
ANR	665448	ExpressionStatement	retval = 3	130:2:2593:2603	665352	3	True				
ANR	665449	AssignmentExpression	retval = 3		665352	0		=			
ANR	665450	Identifier	retval		665352	0					
ANR	665451	PrimaryExpression	3		665352	1					
ANR	665452	ElseStatement	else		665352	0					
ANR	665453	IfStatement	if ( k < 0x200000 )		665352	0					
ANR	665454	Condition	k < 0x200000	131:12:2617:2628	665352	0	True				
ANR	665455	RelationalExpression	k < 0x200000		665352	0		<			
ANR	665456	Identifier	k		665352	0					
ANR	665457	PrimaryExpression	0x200000		665352	1					
ANR	665458	CompoundStatement		16:26:324:324	665352	1					
ANR	665459	ExpressionStatement	buf [ 0 ] = 0xf0 | ( k >> 18 )	132:2:2635:2660	665352	0	True				
ANR	665460	AssignmentExpression	buf [ 0 ] = 0xf0 | ( k >> 18 )		665352	0		=			
ANR	665461	ArrayIndexing	buf [ 0 ]		665352	0					
ANR	665462	Identifier	buf		665352	0					
ANR	665463	PrimaryExpression	0		665352	1					
ANR	665464	InclusiveOrExpression	0xf0 | ( k >> 18 )		665352	1		|			
ANR	665465	PrimaryExpression	0xf0		665352	0					
ANR	665466	ShiftExpression	k >> 18		665352	1		>>			
ANR	665467	Identifier	k		665352	0					
ANR	665468	PrimaryExpression	18		665352	1					
ANR	665469	ExpressionStatement	buf [ 1 ] = 0x80 | ( ( k >> 12 ) & 0x3f )	133:2:2664:2698	665352	1	True				
ANR	665470	AssignmentExpression	buf [ 1 ] = 0x80 | ( ( k >> 12 ) & 0x3f )		665352	0		=			
ANR	665471	ArrayIndexing	buf [ 1 ]		665352	0					
ANR	665472	Identifier	buf		665352	0					
ANR	665473	PrimaryExpression	1		665352	1					
ANR	665474	InclusiveOrExpression	0x80 | ( ( k >> 12 ) & 0x3f )		665352	1		|			
ANR	665475	PrimaryExpression	0x80		665352	0					
ANR	665476	BitAndExpression	( k >> 12 ) & 0x3f		665352	1		&			
ANR	665477	ShiftExpression	k >> 12		665352	0		>>			
ANR	665478	Identifier	k		665352	0					
ANR	665479	PrimaryExpression	12		665352	1					
ANR	665480	PrimaryExpression	0x3f		665352	1					
ANR	665481	ExpressionStatement	buf [ 2 ] = 0x80 | ( ( k >> 6 ) & 0x3f )	134:2:2702:2735	665352	2	True				
ANR	665482	AssignmentExpression	buf [ 2 ] = 0x80 | ( ( k >> 6 ) & 0x3f )		665352	0		=			
ANR	665483	ArrayIndexing	buf [ 2 ]		665352	0					
ANR	665484	Identifier	buf		665352	0					
ANR	665485	PrimaryExpression	2		665352	1					
ANR	665486	InclusiveOrExpression	0x80 | ( ( k >> 6 ) & 0x3f )		665352	1		|			
ANR	665487	PrimaryExpression	0x80		665352	0					
ANR	665488	BitAndExpression	( k >> 6 ) & 0x3f		665352	1		&			
ANR	665489	ShiftExpression	k >> 6		665352	0		>>			
ANR	665490	Identifier	k		665352	0					
ANR	665491	PrimaryExpression	6		665352	1					
ANR	665492	PrimaryExpression	0x3f		665352	1					
ANR	665493	ExpressionStatement	buf [ 3 ] = 0x80 | ( k & 0x3f )	135:2:2739:2765	665352	3	True				
ANR	665494	AssignmentExpression	buf [ 3 ] = 0x80 | ( k & 0x3f )		665352	0		=			
ANR	665495	ArrayIndexing	buf [ 3 ]		665352	0					
ANR	665496	Identifier	buf		665352	0					
ANR	665497	PrimaryExpression	3		665352	1					
ANR	665498	InclusiveOrExpression	0x80 | ( k & 0x3f )		665352	1		|			
ANR	665499	PrimaryExpression	0x80		665352	0					
ANR	665500	BitAndExpression	k & 0x3f		665352	1		&			
ANR	665501	Identifier	k		665352	0					
ANR	665502	PrimaryExpression	0x3f		665352	1					
ANR	665503	ExpressionStatement	retval = 4	136:2:2769:2779	665352	4	True				
ANR	665504	AssignmentExpression	retval = 4		665352	0		=			
ANR	665505	Identifier	retval		665352	0					
ANR	665506	PrimaryExpression	4		665352	1					
ANR	665507	ElseStatement	else		665352	0					
ANR	665508	IfStatement	if ( k < 0x4000000 )		665352	0					
ANR	665509	Condition	k < 0x4000000	137:12:2793:2805	665352	0	True				
ANR	665510	RelationalExpression	k < 0x4000000		665352	0		<			
ANR	665511	Identifier	k		665352	0					
ANR	665512	PrimaryExpression	0x4000000		665352	1					
ANR	665513	CompoundStatement		22:27:501:501	665352	1					
ANR	665514	ExpressionStatement	buf [ 0 ] = 0xf8 | ( k >> 24 )	138:2:2812:2837	665352	0	True				
ANR	665515	AssignmentExpression	buf [ 0 ] = 0xf8 | ( k >> 24 )		665352	0		=			
ANR	665516	ArrayIndexing	buf [ 0 ]		665352	0					
ANR	665517	Identifier	buf		665352	0					
ANR	665518	PrimaryExpression	0		665352	1					
ANR	665519	InclusiveOrExpression	0xf8 | ( k >> 24 )		665352	1		|			
ANR	665520	PrimaryExpression	0xf8		665352	0					
ANR	665521	ShiftExpression	k >> 24		665352	1		>>			
ANR	665522	Identifier	k		665352	0					
ANR	665523	PrimaryExpression	24		665352	1					
ANR	665524	ExpressionStatement	buf [ 1 ] = 0x80 | ( ( k >> 18 ) & 0x3f )	139:2:2841:2875	665352	1	True				
ANR	665525	AssignmentExpression	buf [ 1 ] = 0x80 | ( ( k >> 18 ) & 0x3f )		665352	0		=			
ANR	665526	ArrayIndexing	buf [ 1 ]		665352	0					
ANR	665527	Identifier	buf		665352	0					
ANR	665528	PrimaryExpression	1		665352	1					
ANR	665529	InclusiveOrExpression	0x80 | ( ( k >> 18 ) & 0x3f )		665352	1		|			
ANR	665530	PrimaryExpression	0x80		665352	0					
ANR	665531	BitAndExpression	( k >> 18 ) & 0x3f		665352	1		&			
ANR	665532	ShiftExpression	k >> 18		665352	0		>>			
ANR	665533	Identifier	k		665352	0					
ANR	665534	PrimaryExpression	18		665352	1					
ANR	665535	PrimaryExpression	0x3f		665352	1					
ANR	665536	ExpressionStatement	buf [ 2 ] = 0x80 | ( ( k >> 12 ) & 0x3f )	140:2:2879:2913	665352	2	True				
ANR	665537	AssignmentExpression	buf [ 2 ] = 0x80 | ( ( k >> 12 ) & 0x3f )		665352	0		=			
ANR	665538	ArrayIndexing	buf [ 2 ]		665352	0					
ANR	665539	Identifier	buf		665352	0					
ANR	665540	PrimaryExpression	2		665352	1					
ANR	665541	InclusiveOrExpression	0x80 | ( ( k >> 12 ) & 0x3f )		665352	1		|			
ANR	665542	PrimaryExpression	0x80		665352	0					
ANR	665543	BitAndExpression	( k >> 12 ) & 0x3f		665352	1		&			
ANR	665544	ShiftExpression	k >> 12		665352	0		>>			
ANR	665545	Identifier	k		665352	0					
ANR	665546	PrimaryExpression	12		665352	1					
ANR	665547	PrimaryExpression	0x3f		665352	1					
ANR	665548	ExpressionStatement	buf [ 3 ] = 0x80 | ( ( k >> 6 ) & 0x3f )	141:2:2917:2950	665352	3	True				
ANR	665549	AssignmentExpression	buf [ 3 ] = 0x80 | ( ( k >> 6 ) & 0x3f )		665352	0		=			
ANR	665550	ArrayIndexing	buf [ 3 ]		665352	0					
ANR	665551	Identifier	buf		665352	0					
ANR	665552	PrimaryExpression	3		665352	1					
ANR	665553	InclusiveOrExpression	0x80 | ( ( k >> 6 ) & 0x3f )		665352	1		|			
ANR	665554	PrimaryExpression	0x80		665352	0					
ANR	665555	BitAndExpression	( k >> 6 ) & 0x3f		665352	1		&			
ANR	665556	ShiftExpression	k >> 6		665352	0		>>			
ANR	665557	Identifier	k		665352	0					
ANR	665558	PrimaryExpression	6		665352	1					
ANR	665559	PrimaryExpression	0x3f		665352	1					
ANR	665560	ExpressionStatement	buf [ 4 ] = 0x80 | ( k & 0x3f )	142:2:2954:2980	665352	4	True				
ANR	665561	AssignmentExpression	buf [ 4 ] = 0x80 | ( k & 0x3f )		665352	0		=			
ANR	665562	ArrayIndexing	buf [ 4 ]		665352	0					
ANR	665563	Identifier	buf		665352	0					
ANR	665564	PrimaryExpression	4		665352	1					
ANR	665565	InclusiveOrExpression	0x80 | ( k & 0x3f )		665352	1		|			
ANR	665566	PrimaryExpression	0x80		665352	0					
ANR	665567	BitAndExpression	k & 0x3f		665352	1		&			
ANR	665568	Identifier	k		665352	0					
ANR	665569	PrimaryExpression	0x3f		665352	1					
ANR	665570	ExpressionStatement	retval = 5	143:2:2984:2994	665352	5	True				
ANR	665571	AssignmentExpression	retval = 5		665352	0		=			
ANR	665572	Identifier	retval		665352	0					
ANR	665573	PrimaryExpression	5		665352	1					
ANR	665574	ElseStatement	else		665352	0					
ANR	665575	CompoundStatement		29:8:697:697	665352	0					
ANR	665576	ExpressionStatement	buf [ 0 ] = 0xfc | ( k >> 30 )	145:2:3008:3033	665352	0	True				
ANR	665577	AssignmentExpression	buf [ 0 ] = 0xfc | ( k >> 30 )		665352	0		=			
ANR	665578	ArrayIndexing	buf [ 0 ]		665352	0					
ANR	665579	Identifier	buf		665352	0					
ANR	665580	PrimaryExpression	0		665352	1					
ANR	665581	InclusiveOrExpression	0xfc | ( k >> 30 )		665352	1		|			
ANR	665582	PrimaryExpression	0xfc		665352	0					
ANR	665583	ShiftExpression	k >> 30		665352	1		>>			
ANR	665584	Identifier	k		665352	0					
ANR	665585	PrimaryExpression	30		665352	1					
ANR	665586	ExpressionStatement	buf [ 1 ] = 0x80 | ( ( k >> 24 ) & 0x3f )	146:2:3037:3071	665352	1	True				
ANR	665587	AssignmentExpression	buf [ 1 ] = 0x80 | ( ( k >> 24 ) & 0x3f )		665352	0		=			
ANR	665588	ArrayIndexing	buf [ 1 ]		665352	0					
ANR	665589	Identifier	buf		665352	0					
ANR	665590	PrimaryExpression	1		665352	1					
ANR	665591	InclusiveOrExpression	0x80 | ( ( k >> 24 ) & 0x3f )		665352	1		|			
ANR	665592	PrimaryExpression	0x80		665352	0					
ANR	665593	BitAndExpression	( k >> 24 ) & 0x3f		665352	1		&			
ANR	665594	ShiftExpression	k >> 24		665352	0		>>			
ANR	665595	Identifier	k		665352	0					
ANR	665596	PrimaryExpression	24		665352	1					
ANR	665597	PrimaryExpression	0x3f		665352	1					
ANR	665598	ExpressionStatement	buf [ 2 ] = 0x80 | ( ( k >> 18 ) & 0x3f )	147:2:3075:3109	665352	2	True				
ANR	665599	AssignmentExpression	buf [ 2 ] = 0x80 | ( ( k >> 18 ) & 0x3f )		665352	0		=			
ANR	665600	ArrayIndexing	buf [ 2 ]		665352	0					
ANR	665601	Identifier	buf		665352	0					
ANR	665602	PrimaryExpression	2		665352	1					
ANR	665603	InclusiveOrExpression	0x80 | ( ( k >> 18 ) & 0x3f )		665352	1		|			
ANR	665604	PrimaryExpression	0x80		665352	0					
ANR	665605	BitAndExpression	( k >> 18 ) & 0x3f		665352	1		&			
ANR	665606	ShiftExpression	k >> 18		665352	0		>>			
ANR	665607	Identifier	k		665352	0					
ANR	665608	PrimaryExpression	18		665352	1					
ANR	665609	PrimaryExpression	0x3f		665352	1					
ANR	665610	ExpressionStatement	buf [ 3 ] = 0x80 | ( ( k >> 12 ) & 0x3f )	148:2:3113:3147	665352	3	True				
ANR	665611	AssignmentExpression	buf [ 3 ] = 0x80 | ( ( k >> 12 ) & 0x3f )		665352	0		=			
ANR	665612	ArrayIndexing	buf [ 3 ]		665352	0					
ANR	665613	Identifier	buf		665352	0					
ANR	665614	PrimaryExpression	3		665352	1					
ANR	665615	InclusiveOrExpression	0x80 | ( ( k >> 12 ) & 0x3f )		665352	1		|			
ANR	665616	PrimaryExpression	0x80		665352	0					
ANR	665617	BitAndExpression	( k >> 12 ) & 0x3f		665352	1		&			
ANR	665618	ShiftExpression	k >> 12		665352	0		>>			
ANR	665619	Identifier	k		665352	0					
ANR	665620	PrimaryExpression	12		665352	1					
ANR	665621	PrimaryExpression	0x3f		665352	1					
ANR	665622	ExpressionStatement	buf [ 4 ] = 0x80 | ( ( k >> 6 ) & 0x3f )	149:2:3151:3184	665352	4	True				
ANR	665623	AssignmentExpression	buf [ 4 ] = 0x80 | ( ( k >> 6 ) & 0x3f )		665352	0		=			
ANR	665624	ArrayIndexing	buf [ 4 ]		665352	0					
ANR	665625	Identifier	buf		665352	0					
ANR	665626	PrimaryExpression	4		665352	1					
ANR	665627	InclusiveOrExpression	0x80 | ( ( k >> 6 ) & 0x3f )		665352	1		|			
ANR	665628	PrimaryExpression	0x80		665352	0					
ANR	665629	BitAndExpression	( k >> 6 ) & 0x3f		665352	1		&			
ANR	665630	ShiftExpression	k >> 6		665352	0		>>			
ANR	665631	Identifier	k		665352	0					
ANR	665632	PrimaryExpression	6		665352	1					
ANR	665633	PrimaryExpression	0x3f		665352	1					
ANR	665634	ExpressionStatement	buf [ 5 ] = 0x80 | ( k & 0x3f )	150:2:3188:3214	665352	5	True				
ANR	665635	AssignmentExpression	buf [ 5 ] = 0x80 | ( k & 0x3f )		665352	0		=			
ANR	665636	ArrayIndexing	buf [ 5 ]		665352	0					
ANR	665637	Identifier	buf		665352	0					
ANR	665638	PrimaryExpression	5		665352	1					
ANR	665639	InclusiveOrExpression	0x80 | ( k & 0x3f )		665352	1		|			
ANR	665640	PrimaryExpression	0x80		665352	0					
ANR	665641	BitAndExpression	k & 0x3f		665352	1		&			
ANR	665642	Identifier	k		665352	0					
ANR	665643	PrimaryExpression	0x3f		665352	1					
ANR	665644	ExpressionStatement	retval = 6	151:2:3218:3228	665352	6	True				
ANR	665645	AssignmentExpression	retval = 6		665352	0		=			
ANR	665646	Identifier	retval		665352	0					
ANR	665647	PrimaryExpression	6		665352	1					
ANR	665648	ExpressionStatement	buf [ retval ] = '\\0'	153:1:3234:3252	665352	2	True				
ANR	665649	AssignmentExpression	buf [ retval ] = '\\0'		665352	0		=			
ANR	665650	ArrayIndexing	buf [ retval ]		665352	0					
ANR	665651	Identifier	buf		665352	0					
ANR	665652	Identifier	retval		665352	1					
ANR	665653	PrimaryExpression	'\\0'		665352	1					
ANR	665654	ReturnStatement	return retval ;	155:1:3256:3269	665352	3	True				
ANR	665655	Identifier	retval		665352	0					
ANR	665656	ReturnType	static int		665352	1					
ANR	665657	Identifier	utf32_utf8		665352	2					
ANR	665658	ParameterList	"char * buf , int k"		665352	3					
ANR	665659	Parameter	char * buf	115:22:2288:2296	665352	0	True				
ANR	665660	ParameterType	char *		665352	0					
ANR	665661	Identifier	buf		665352	1					
ANR	665662	Parameter	int k	115:33:2299:2303	665352	1	True				
ANR	665663	ParameterType	int		665352	0					
ANR	665664	Identifier	k		665352	1					
ANR	665665	CFGEntryNode	ENTRY		665352		True				
ANR	665666	CFGExitNode	EXIT		665352		True				
ANR	665667	Symbol	* retval		665352						
ANR	665668	Symbol	buf		665352						
ANR	665669	Symbol	* buf		665352						
ANR	665670	Symbol	k		665352						
ANR	665671	Symbol	retval		665352						
ANR	665672	DeclStmt									
ANR	665673	Decl							const char	const char [ ]	epilogue
ANR	665674	DeclStmt									
ANR	665675	Decl							const char	const char [ ]	prologue_to_cp932
ANR	665676	DeclStmt									
ANR	665677	Decl							const char	const char [ ]	prologue_to_cp50220
ANR	665678	DeclStmt									
ANR	665679	Decl							const char	const char [ ]	prologue_to_cp50222
ANR	665680	DeclStmt									
ANR	665681	Decl							const char	const char [ ]	prologue_from_cp932
ANR	665682	Function	to_cp932_visitor	197:0:4183:5109							
ANR	665683	FunctionDef	to_cp932_visitor (const struct mappings_entry * entry)		665682	0					
ANR	665684	CompoundStatement		198:0:4248:5109	665682	0					
ANR	665685	IdentifierDeclStatement	"char buf_uni [ 32 ] , buf_cp932 [ 8 ] ;"	199:1:4251:4281	665682	0	True				
ANR	665686	IdentifierDecl	buf_uni [ 32 ]		665682	0					
ANR	665687	IdentifierDeclType	char [ 32 ]		665682	0					
ANR	665688	Identifier	buf_uni		665682	1					
ANR	665689	PrimaryExpression	32		665682	2					
ANR	665690	IdentifierDecl	buf_cp932 [ 8 ]		665682	1					
ANR	665691	IdentifierDeclType	char [ 8 ]		665682	0					
ANR	665692	Identifier	buf_cp932		665682	1					
ANR	665693	PrimaryExpression	8		665682	2					
ANR	665694	IdentifierDeclStatement	int i ;	200:1:4284:4289	665682	1	True				
ANR	665695	IdentifierDecl	i		665682	0					
ANR	665696	IdentifierDeclType	int		665682	0					
ANR	665697	Identifier	i		665682	1					
ANR	665698	IfStatement	if ( entry -> cp_uni < 32 || entry -> cp_uni == 127 )		665682	2					
ANR	665699	Condition	entry -> cp_uni < 32 || entry -> cp_uni == 127	202:5:4297:4338	665682	0	True				
ANR	665700	OrExpression	entry -> cp_uni < 32 || entry -> cp_uni == 127		665682	0		||			
ANR	665701	RelationalExpression	entry -> cp_uni < 32		665682	0		<			
ANR	665702	PtrMemberAccess	entry -> cp_uni		665682	0					
ANR	665703	Identifier	entry		665682	0					
ANR	665704	Identifier	cp_uni		665682	1					
ANR	665705	PrimaryExpression	32		665682	1					
ANR	665706	EqualityExpression	entry -> cp_uni == 127		665682	1		==			
ANR	665707	PtrMemberAccess	entry -> cp_uni		665682	0					
ANR	665708	Identifier	entry		665682	0					
ANR	665709	Identifier	cp_uni		665682	1					
ANR	665710	PrimaryExpression	127		665682	1					
ANR	665711	ReturnStatement	return ;	203:2:4343:4349	665682	1	True				
ANR	665712	ExpressionStatement	"i = utf32_utf8 ( buf_uni , entry -> cp_uni )"	205:1:4353:4391	665682	3	True				
ANR	665713	AssignmentExpression	"i = utf32_utf8 ( buf_uni , entry -> cp_uni )"		665682	0		=			
ANR	665714	Identifier	i		665682	0					
ANR	665715	CallExpression	"utf32_utf8 ( buf_uni , entry -> cp_uni )"		665682	1					
ANR	665716	Callee	utf32_utf8		665682	0					
ANR	665717	Identifier	utf32_utf8		665682	0					
ANR	665718	ArgumentList	buf_uni		665682	1					
ANR	665719	Argument	buf_uni		665682	0					
ANR	665720	Identifier	buf_uni		665682	0					
ANR	665721	Argument	entry -> cp_uni		665682	1					
ANR	665722	PtrMemberAccess	entry -> cp_uni		665682	0					
ANR	665723	Identifier	entry		665682	0					
ANR	665724	Identifier	cp_uni		665682	1					
ANR	665725	ExpressionStatement	buf_uni [ i * 4 ] = '\\0'	206:1:4394:4415	665682	4	True				
ANR	665726	AssignmentExpression	buf_uni [ i * 4 ] = '\\0'		665682	0		=			
ANR	665727	ArrayIndexing	buf_uni [ i * 4 ]		665682	0					
ANR	665728	Identifier	buf_uni		665682	0					
ANR	665729	MultiplicativeExpression	i * 4		665682	1		*			
ANR	665730	Identifier	i		665682	0					
ANR	665731	PrimaryExpression	4		665682	1					
ANR	665732	PrimaryExpression	'\\0'		665682	1					
ANR	665733	WhileStatement	while ( -- i >= 0 )		665682	5					
ANR	665734	Condition	-- i >= 0	207:8:4425:4432	665682	0	True				
ANR	665735	RelationalExpression	-- i >= 0		665682	0		>=			
ANR	665736	UnaryExpression	-- i		665682	0					
ANR	665737	IncDec	--		665682	0					
ANR	665738	Identifier	i		665682	1					
ANR	665739	PrimaryExpression	0		665682	1					
ANR	665740	CompoundStatement		11:2:190:237	665682	1					
ANR	665741	IdentifierDeclStatement	unsigned char c = ( ( unsigned char * ) buf_uni ) [ i ] ;	208:2:4439:4486	665682	0	True				
ANR	665742	IdentifierDecl	c = ( ( unsigned char * ) buf_uni ) [ i ]		665682	0					
ANR	665743	IdentifierDeclType	unsigned char		665682	0					
ANR	665744	Identifier	c		665682	1					
ANR	665745	AssignmentExpression	c = ( ( unsigned char * ) buf_uni ) [ i ]		665682	2		=			
ANR	665746	Identifier	c		665682	0					
ANR	665747	ArrayIndexing	( ( unsigned char * ) buf_uni ) [ i ]		665682	1					
ANR	665748	CastExpression	( unsigned char * ) buf_uni		665682	0					
ANR	665749	CastTarget	unsigned char *		665682	0					
ANR	665750	Identifier	buf_uni		665682	1					
ANR	665751	Identifier	i		665682	1					
ANR	665752	ExpressionStatement	buf_uni [ i * 4 ] = '\\\\'	209:2:4490:4511	665682	1	True				
ANR	665753	AssignmentExpression	buf_uni [ i * 4 ] = '\\\\'		665682	0		=			
ANR	665754	ArrayIndexing	buf_uni [ i * 4 ]		665682	0					
ANR	665755	Identifier	buf_uni		665682	0					
ANR	665756	MultiplicativeExpression	i * 4		665682	1		*			
ANR	665757	Identifier	i		665682	0					
ANR	665758	PrimaryExpression	4		665682	1					
ANR	665759	PrimaryExpression	'\\\\'		665682	1					
ANR	665760	ExpressionStatement	buf_uni [ i * 4 + 1 ] = 'x'	210:2:4515:4539	665682	2	True				
ANR	665761	AssignmentExpression	buf_uni [ i * 4 + 1 ] = 'x'		665682	0		=			
ANR	665762	ArrayIndexing	buf_uni [ i * 4 + 1 ]		665682	0					
ANR	665763	Identifier	buf_uni		665682	0					
ANR	665764	AdditiveExpression	i * 4 + 1		665682	1		+			
ANR	665765	MultiplicativeExpression	i * 4		665682	0		*			
ANR	665766	Identifier	i		665682	0					
ANR	665767	PrimaryExpression	4		665682	1					
ANR	665768	PrimaryExpression	1		665682	1					
ANR	665769	PrimaryExpression	'x'		665682	1					
ANR	665770	ExpressionStatement	"buf_uni [ i * 4 + 2 ] = ""0123456789abcdef"" [ c >> 4 ]"	211:2:4543:4590	665682	3	True				
ANR	665771	AssignmentExpression	"buf_uni [ i * 4 + 2 ] = ""0123456789abcdef"" [ c >> 4 ]"		665682	0		=			
ANR	665772	ArrayIndexing	buf_uni [ i * 4 + 2 ]		665682	0					
ANR	665773	Identifier	buf_uni		665682	0					
ANR	665774	AdditiveExpression	i * 4 + 2		665682	1		+			
ANR	665775	MultiplicativeExpression	i * 4		665682	0		*			
ANR	665776	Identifier	i		665682	0					
ANR	665777	PrimaryExpression	4		665682	1					
ANR	665778	PrimaryExpression	2		665682	1					
ANR	665779	ArrayIndexing	"""0123456789abcdef"" [ c >> 4 ]"		665682	1					
ANR	665780	PrimaryExpression	"""0123456789abcdef"""		665682	0					
ANR	665781	ShiftExpression	c >> 4		665682	1		>>			
ANR	665782	Identifier	c		665682	0					
ANR	665783	PrimaryExpression	4		665682	1					
ANR	665784	ExpressionStatement	"buf_uni [ i * 4 + 3 ] = ""0123456789abcdef"" [ c & 15 ]"	212:2:4594:4641	665682	4	True				
ANR	665785	AssignmentExpression	"buf_uni [ i * 4 + 3 ] = ""0123456789abcdef"" [ c & 15 ]"		665682	0		=			
ANR	665786	ArrayIndexing	buf_uni [ i * 4 + 3 ]		665682	0					
ANR	665787	Identifier	buf_uni		665682	0					
ANR	665788	AdditiveExpression	i * 4 + 3		665682	1		+			
ANR	665789	MultiplicativeExpression	i * 4		665682	0		*			
ANR	665790	Identifier	i		665682	0					
ANR	665791	PrimaryExpression	4		665682	1					
ANR	665792	PrimaryExpression	3		665682	1					
ANR	665793	ArrayIndexing	"""0123456789abcdef"" [ c & 15 ]"		665682	1					
ANR	665794	PrimaryExpression	"""0123456789abcdef"""		665682	0					
ANR	665795	BitAndExpression	c & 15		665682	1		&			
ANR	665796	Identifier	c		665682	0					
ANR	665797	PrimaryExpression	15		665682	1					
ANR	665798	Statement	printf	215:1:4648:4653	665682	6	True				
ANR	665799	Statement	(	215:7:4654:4654	665682	7	True				
ANR	665800	Statement	"""set test \\""U+%06X\\""\\n"""	215:8:4655:4677	665682	8	True				
ANR	665801	Statement	"""send -- \\""%s\\r\\""\\n"""	216:8:4687:4706	665682	9	True				
ANR	665802	Statement	"""sleep 0.001\\n"""	217:5:4713:4727	665682	10	True				
ANR	665803	Statement	"""expect {\\n"""	218:8:4737:4748	665682	11	True				
ANR	665804	Statement	","	218:20:4749:4749	665682	12	True				
ANR	665805	Statement	entry	218:22:4751:4755	665682	13	True				
ANR	665806	Statement	->	218:27:4756:4757	665682	14	True				
ANR	665807	Statement	cp_uni	218:29:4758:4763	665682	15	True				
ANR	665808	Statement	","	218:35:4764:4764	665682	16	True				
ANR	665809	Statement	buf_uni	218:37:4766:4772	665682	17	True				
ANR	665810	Statement	)	218:44:4773:4773	665682	18	True				
ANR	665811	ExpressionStatement		218:45:4774:4774	665682	19	True				
ANR	665812	ForStatement	for ( i = 0 ; i < entry -> n ; ++ i )		665682	20					
ANR	665813	ForInit	i = 0 ;	220:6:4783:4788	665682	0	True				
ANR	665814	AssignmentExpression	i = 0		665682	0		=			
ANR	665815	Identifier	i		665682	0					
ANR	665816	PrimaryExpression	0		665682	1					
ANR	665817	Condition	i < entry -> n	220:13:4790:4801	665682	1	True				
ANR	665818	RelationalExpression	i < entry -> n		665682	0		<			
ANR	665819	Identifier	i		665682	0					
ANR	665820	PtrMemberAccess	entry -> n		665682	1					
ANR	665821	Identifier	entry		665682	0					
ANR	665822	Identifier	n		665682	1					
ANR	665823	UnaryExpression	++ i	220:27:4804:4806	665682	2	True				
ANR	665824	IncDec	++		665682	0					
ANR	665825	Identifier	i		665682	1					
ANR	665826	CompoundStatement		25:2:579:609	665682	3					
ANR	665827	IdentifierDeclStatement	int len = 0 ;	221:2:4813:4824	665682	0	True				
ANR	665828	IdentifierDecl	len = 0		665682	0					
ANR	665829	IdentifierDeclType	int		665682	0					
ANR	665830	Identifier	len		665682	1					
ANR	665831	AssignmentExpression	len = 0		665682	2		=			
ANR	665832	Identifier	len		665682	0					
ANR	665833	PrimaryExpression	0		665682	1					
ANR	665834	IdentifierDeclStatement	const int c = entry -> cp_932 [ i ] ;	222:2:4828:4858	665682	1	True				
ANR	665835	IdentifierDecl	c = entry -> cp_932 [ i ]		665682	0					
ANR	665836	IdentifierDeclType	const int		665682	0					
ANR	665837	Identifier	c		665682	1					
ANR	665838	AssignmentExpression	c = entry -> cp_932 [ i ]		665682	2		=			
ANR	665839	Identifier	c		665682	0					
ANR	665840	ArrayIndexing	entry -> cp_932 [ i ]		665682	1					
ANR	665841	PtrMemberAccess	entry -> cp_932		665682	0					
ANR	665842	Identifier	entry		665682	0					
ANR	665843	Identifier	cp_932		665682	1					
ANR	665844	Identifier	i		665682	1					
ANR	665845	IfStatement	if ( c >= 0x100 )		665682	2					
ANR	665846	Condition	c >= 0x100	223:6:4866:4875	665682	0	True				
ANR	665847	RelationalExpression	c >= 0x100		665682	0		>=			
ANR	665848	Identifier	c		665682	0					
ANR	665849	PrimaryExpression	0x100		665682	1					
ANR	665850	CompoundStatement		26:18:629:629	665682	1					
ANR	665851	ExpressionStatement	len = 2	224:3:4883:4890	665682	0	True				
ANR	665852	AssignmentExpression	len = 2		665682	0		=			
ANR	665853	Identifier	len		665682	0					
ANR	665854	PrimaryExpression	2		665682	1					
ANR	665855	ExpressionStatement	"sprintf ( buf_cp932 , ""%%%02x%%%02x"" , ( c >> 8 ) & 0xff , c & 0xff )"	225:3:4895:4956	665682	1	True				
ANR	665856	CallExpression	"sprintf ( buf_cp932 , ""%%%02x%%%02x"" , ( c >> 8 ) & 0xff , c & 0xff )"		665682	0					
ANR	665857	Callee	sprintf		665682	0					
ANR	665858	Identifier	sprintf		665682	0					
ANR	665859	ArgumentList	buf_cp932		665682	1					
ANR	665860	Argument	buf_cp932		665682	0					
ANR	665861	Identifier	buf_cp932		665682	0					
ANR	665862	Argument	"""%%%02x%%%02x"""		665682	1					
ANR	665863	PrimaryExpression	"""%%%02x%%%02x"""		665682	0					
ANR	665864	Argument	( c >> 8 ) & 0xff		665682	2					
ANR	665865	BitAndExpression	( c >> 8 ) & 0xff		665682	0		&			
ANR	665866	ShiftExpression	c >> 8		665682	0		>>			
ANR	665867	Identifier	c		665682	0					
ANR	665868	PrimaryExpression	8		665682	1					
ANR	665869	PrimaryExpression	0xff		665682	1					
ANR	665870	Argument	c & 0xff		665682	3					
ANR	665871	BitAndExpression	c & 0xff		665682	0		&			
ANR	665872	Identifier	c		665682	0					
ANR	665873	PrimaryExpression	0xff		665682	1					
ANR	665874	ElseStatement	else		665682	0					
ANR	665875	CompoundStatement		29:9:718:718	665682	0					
ANR	665876	ExpressionStatement	len = 1	227:3:4972:4979	665682	0	True				
ANR	665877	AssignmentExpression	len = 1		665682	0		=			
ANR	665878	Identifier	len		665682	0					
ANR	665879	PrimaryExpression	1		665682	1					
ANR	665880	ExpressionStatement	"sprintf ( buf_cp932 , ""%%%02x"" , c )"	228:3:4984:5015	665682	1	True				
ANR	665881	CallExpression	"sprintf ( buf_cp932 , ""%%%02x"" , c )"		665682	0					
ANR	665882	Callee	sprintf		665682	0					
ANR	665883	Identifier	sprintf		665682	0					
ANR	665884	ArgumentList	buf_cp932		665682	1					
ANR	665885	Argument	buf_cp932		665682	0					
ANR	665886	Identifier	buf_cp932		665682	0					
ANR	665887	Argument	"""%%%02x"""		665682	1					
ANR	665888	PrimaryExpression	"""%%%02x"""		665682	0					
ANR	665889	Argument	c		665682	2					
ANR	665890	Identifier	c		665682	0					
ANR	665891	ExpressionStatement	"printf ( ""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"" , buf_cp932 , len )"	230:2:5023:5087	665682	3	True				
ANR	665892	CallExpression	"printf ( ""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"" , buf_cp932 , len )"		665682	0					
ANR	665893	Callee	printf		665682	0					
ANR	665894	Identifier	printf		665682	0					
ANR	665895	ArgumentList	"""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"""		665682	1					
ANR	665896	Argument	"""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"""		665682	0					
ANR	665897	PrimaryExpression	"""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"""		665682	0					
ANR	665898	Argument	buf_cp932		665682	1					
ANR	665899	Identifier	buf_cp932		665682	0					
ANR	665900	Argument	len		665682	2					
ANR	665901	Identifier	len		665682	0					
ANR	665902	ExpressionStatement	"printf ( ""}\\n"" )"	233:1:5094:5107	665682	21	True				
ANR	665903	CallExpression	"printf ( ""}\\n"" )"		665682	0					
ANR	665904	Callee	printf		665682	0					
ANR	665905	Identifier	printf		665682	0					
ANR	665906	ArgumentList	"""}\\n"""		665682	1					
ANR	665907	Argument	"""}\\n"""		665682	0					
ANR	665908	PrimaryExpression	"""}\\n"""		665682	0					
ANR	665909	ReturnType	static void		665682	1					
ANR	665910	Identifier	to_cp932_visitor		665682	2					
ANR	665911	ParameterList	const struct mappings_entry * entry		665682	3					
ANR	665912	Parameter	const struct mappings_entry * entry	197:29:4212:4245	665682	0	True				
ANR	665913	ParameterType	const struct mappings_entry *		665682	0					
ANR	665914	Identifier	entry		665682	1					
ANR	665915	CFGEntryNode	ENTRY		665682		True				
ANR	665916	CFGExitNode	EXIT		665682		True				
ANR	665917	Symbol	entry -> cp_uni		665682						
ANR	665918	Symbol	c		665682						
ANR	665919	Symbol	buf_cp932		665682						
ANR	665920	Symbol	* * entry		665682						
ANR	665921	Symbol	utf32_utf8		665682						
ANR	665922	Symbol	* entry -> cp_932		665682						
ANR	665923	Symbol	i		665682						
ANR	665924	Symbol	* c		665682						
ANR	665925	Symbol	entry -> n		665682						
ANR	665926	Symbol	buf_uni		665682						
ANR	665927	Symbol	entry		665682						
ANR	665928	Symbol	* i		665682						
ANR	665929	Symbol	len		665682						
ANR	665930	Symbol	entry -> cp_932		665682						
ANR	665931	Symbol	* buf_uni		665682						
ANR	665932	Symbol	* entry		665682						
ANR	665933	Function	from_cp932_visitor	236:0:5112:5983							
ANR	665934	FunctionDef	from_cp932_visitor (const struct mappings_entry * entry)		665933	0					
ANR	665935	CompoundStatement		237:0:5179:5983	665933	0					
ANR	665936	IdentifierDeclStatement	"char buf_uni [ 32 ] , buf_cp932 [ 8 ] ;"	238:1:5182:5212	665933	0	True				
ANR	665937	IdentifierDecl	buf_uni [ 32 ]		665933	0					
ANR	665938	IdentifierDeclType	char [ 32 ]		665933	0					
ANR	665939	Identifier	buf_uni		665933	1					
ANR	665940	PrimaryExpression	32		665933	2					
ANR	665941	IdentifierDecl	buf_cp932 [ 8 ]		665933	1					
ANR	665942	IdentifierDeclType	char [ 8 ]		665933	0					
ANR	665943	Identifier	buf_cp932		665933	1					
ANR	665944	PrimaryExpression	8		665933	2					
ANR	665945	IdentifierDeclStatement	"int i , len ;"	239:1:5215:5225	665933	1	True				
ANR	665946	IdentifierDecl	i		665933	0					
ANR	665947	IdentifierDeclType	int		665933	0					
ANR	665948	Identifier	i		665933	1					
ANR	665949	IdentifierDecl	len		665933	1					
ANR	665950	IdentifierDeclType	int		665933	0					
ANR	665951	Identifier	len		665933	1					
ANR	665952	IfStatement	if ( entry -> cp_uni < 32 || entry -> cp_uni == 127 )		665933	2					
ANR	665953	Condition	entry -> cp_uni < 32 || entry -> cp_uni == 127	241:5:5233:5274	665933	0	True				
ANR	665954	OrExpression	entry -> cp_uni < 32 || entry -> cp_uni == 127		665933	0		||			
ANR	665955	RelationalExpression	entry -> cp_uni < 32		665933	0		<			
ANR	665956	PtrMemberAccess	entry -> cp_uni		665933	0					
ANR	665957	Identifier	entry		665933	0					
ANR	665958	Identifier	cp_uni		665933	1					
ANR	665959	PrimaryExpression	32		665933	1					
ANR	665960	EqualityExpression	entry -> cp_uni == 127		665933	1		==			
ANR	665961	PtrMemberAccess	entry -> cp_uni		665933	0					
ANR	665962	Identifier	entry		665933	0					
ANR	665963	Identifier	cp_uni		665933	1					
ANR	665964	PrimaryExpression	127		665933	1					
ANR	665965	ReturnStatement	return ;	242:2:5279:5285	665933	1	True				
ANR	665966	ExpressionStatement	"len = utf32_utf8 ( buf_uni , entry -> cp_uni )"	244:1:5289:5329	665933	3	True				
ANR	665967	AssignmentExpression	"len = utf32_utf8 ( buf_uni , entry -> cp_uni )"		665933	0		=			
ANR	665968	Identifier	len		665933	0					
ANR	665969	CallExpression	"utf32_utf8 ( buf_uni , entry -> cp_uni )"		665933	1					
ANR	665970	Callee	utf32_utf8		665933	0					
ANR	665971	Identifier	utf32_utf8		665933	0					
ANR	665972	ArgumentList	buf_uni		665933	1					
ANR	665973	Argument	buf_uni		665933	0					
ANR	665974	Identifier	buf_uni		665933	0					
ANR	665975	Argument	entry -> cp_uni		665933	1					
ANR	665976	PtrMemberAccess	entry -> cp_uni		665933	0					
ANR	665977	Identifier	entry		665933	0					
ANR	665978	Identifier	cp_uni		665933	1					
ANR	665979	ExpressionStatement	buf_uni [ len * 3 ] = '\\0'	245:1:5332:5355	665933	4	True				
ANR	665980	AssignmentExpression	buf_uni [ len * 3 ] = '\\0'		665933	0		=			
ANR	665981	ArrayIndexing	buf_uni [ len * 3 ]		665933	0					
ANR	665982	Identifier	buf_uni		665933	0					
ANR	665983	MultiplicativeExpression	len * 3		665933	1		*			
ANR	665984	Identifier	len		665933	0					
ANR	665985	PrimaryExpression	3		665933	1					
ANR	665986	PrimaryExpression	'\\0'		665933	1					
ANR	665987	ExpressionStatement	i = len	246:1:5358:5365	665933	5	True				
ANR	665988	AssignmentExpression	i = len		665933	0		=			
ANR	665989	Identifier	i		665933	0					
ANR	665990	Identifier	len		665933	1					
ANR	665991	WhileStatement	while ( -- i >= 0 )		665933	6					
ANR	665992	Condition	-- i >= 0	247:8:5375:5382	665933	0	True				
ANR	665993	RelationalExpression	-- i >= 0		665933	0		>=			
ANR	665994	UnaryExpression	-- i		665933	0					
ANR	665995	IncDec	--		665933	0					
ANR	665996	Identifier	i		665933	1					
ANR	665997	PrimaryExpression	0		665933	1					
ANR	665998	CompoundStatement		12:2:209:256	665933	1					
ANR	665999	IdentifierDeclStatement	unsigned char c = ( ( unsigned char * ) buf_uni ) [ i ] ;	248:2:5389:5436	665933	0	True				
ANR	666000	IdentifierDecl	c = ( ( unsigned char * ) buf_uni ) [ i ]		665933	0					
ANR	666001	IdentifierDeclType	unsigned char		665933	0					
ANR	666002	Identifier	c		665933	1					
ANR	666003	AssignmentExpression	c = ( ( unsigned char * ) buf_uni ) [ i ]		665933	2		=			
ANR	666004	Identifier	c		665933	0					
ANR	666005	ArrayIndexing	( ( unsigned char * ) buf_uni ) [ i ]		665933	1					
ANR	666006	CastExpression	( unsigned char * ) buf_uni		665933	0					
ANR	666007	CastTarget	unsigned char *		665933	0					
ANR	666008	Identifier	buf_uni		665933	1					
ANR	666009	Identifier	i		665933	1					
ANR	666010	ExpressionStatement	buf_uni [ i * 3 ] = '%'	249:2:5440:5460	665933	1	True				
ANR	666011	AssignmentExpression	buf_uni [ i * 3 ] = '%'		665933	0		=			
ANR	666012	ArrayIndexing	buf_uni [ i * 3 ]		665933	0					
ANR	666013	Identifier	buf_uni		665933	0					
ANR	666014	MultiplicativeExpression	i * 3		665933	1		*			
ANR	666015	Identifier	i		665933	0					
ANR	666016	PrimaryExpression	3		665933	1					
ANR	666017	PrimaryExpression	'%'		665933	1					
ANR	666018	ExpressionStatement	"buf_uni [ i * 3 + 1 ] = ""0123456789abcdef"" [ c >> 4 ]"	250:2:5464:5511	665933	2	True				
ANR	666019	AssignmentExpression	"buf_uni [ i * 3 + 1 ] = ""0123456789abcdef"" [ c >> 4 ]"		665933	0		=			
ANR	666020	ArrayIndexing	buf_uni [ i * 3 + 1 ]		665933	0					
ANR	666021	Identifier	buf_uni		665933	0					
ANR	666022	AdditiveExpression	i * 3 + 1		665933	1		+			
ANR	666023	MultiplicativeExpression	i * 3		665933	0		*			
ANR	666024	Identifier	i		665933	0					
ANR	666025	PrimaryExpression	3		665933	1					
ANR	666026	PrimaryExpression	1		665933	1					
ANR	666027	ArrayIndexing	"""0123456789abcdef"" [ c >> 4 ]"		665933	1					
ANR	666028	PrimaryExpression	"""0123456789abcdef"""		665933	0					
ANR	666029	ShiftExpression	c >> 4		665933	1		>>			
ANR	666030	Identifier	c		665933	0					
ANR	666031	PrimaryExpression	4		665933	1					
ANR	666032	ExpressionStatement	"buf_uni [ i * 3 + 2 ] = ""0123456789abcdef"" [ c & 15 ]"	251:2:5515:5562	665933	3	True				
ANR	666033	AssignmentExpression	"buf_uni [ i * 3 + 2 ] = ""0123456789abcdef"" [ c & 15 ]"		665933	0		=			
ANR	666034	ArrayIndexing	buf_uni [ i * 3 + 2 ]		665933	0					
ANR	666035	Identifier	buf_uni		665933	0					
ANR	666036	AdditiveExpression	i * 3 + 2		665933	1		+			
ANR	666037	MultiplicativeExpression	i * 3		665933	0		*			
ANR	666038	Identifier	i		665933	0					
ANR	666039	PrimaryExpression	3		665933	1					
ANR	666040	PrimaryExpression	2		665933	1					
ANR	666041	ArrayIndexing	"""0123456789abcdef"" [ c & 15 ]"		665933	1					
ANR	666042	PrimaryExpression	"""0123456789abcdef"""		665933	0					
ANR	666043	BitAndExpression	c & 15		665933	1		&			
ANR	666044	Identifier	c		665933	0					
ANR	666045	PrimaryExpression	15		665933	1					
ANR	666046	ForStatement	for ( i = 0 ; i < entry -> n ; ++ i )		665933	7					
ANR	666047	ForInit	i = 0 ;	254:6:5574:5579	665933	0	True				
ANR	666048	AssignmentExpression	i = 0		665933	0		=			
ANR	666049	Identifier	i		665933	0					
ANR	666050	PrimaryExpression	0		665933	1					
ANR	666051	Condition	i < entry -> n	254:13:5581:5592	665933	1	True				
ANR	666052	RelationalExpression	i < entry -> n		665933	0		<			
ANR	666053	Identifier	i		665933	0					
ANR	666054	PtrMemberAccess	entry -> n		665933	1					
ANR	666055	Identifier	entry		665933	0					
ANR	666056	Identifier	n		665933	1					
ANR	666057	UnaryExpression	++ i	254:27:5595:5597	665933	2	True				
ANR	666058	IncDec	++		665933	0					
ANR	666059	Identifier	i		665933	1					
ANR	666060	CompoundStatement		19:2:424:454	665933	3					
ANR	666061	IdentifierDeclStatement	const int c = entry -> cp_932 [ i ] ;	255:2:5604:5634	665933	0	True				
ANR	666062	IdentifierDecl	c = entry -> cp_932 [ i ]		665933	0					
ANR	666063	IdentifierDeclType	const int		665933	0					
ANR	666064	Identifier	c		665933	1					
ANR	666065	AssignmentExpression	c = entry -> cp_932 [ i ]		665933	2		=			
ANR	666066	Identifier	c		665933	0					
ANR	666067	ArrayIndexing	entry -> cp_932 [ i ]		665933	1					
ANR	666068	PtrMemberAccess	entry -> cp_932		665933	0					
ANR	666069	Identifier	entry		665933	0					
ANR	666070	Identifier	cp_932		665933	1					
ANR	666071	Identifier	i		665933	1					
ANR	666072	IfStatement	if ( c >= 0x100 )		665933	1					
ANR	666073	Condition	c >= 0x100	256:6:5642:5651	665933	0	True				
ANR	666074	RelationalExpression	c >= 0x100		665933	0		>=			
ANR	666075	Identifier	c		665933	0					
ANR	666076	PrimaryExpression	0x100		665933	1					
ANR	666077	ExpressionStatement	"sprintf ( buf_cp932 , ""\\\\x%02x\\\\x%02x"" , ( c >> 8 ) & 0xff , c & 0xff )"	257:3:5657:5720	665933	1	True				
ANR	666078	CallExpression	"sprintf ( buf_cp932 , ""\\\\x%02x\\\\x%02x"" , ( c >> 8 ) & 0xff , c & 0xff )"		665933	0					
ANR	666079	Callee	sprintf		665933	0					
ANR	666080	Identifier	sprintf		665933	0					
ANR	666081	ArgumentList	buf_cp932		665933	1					
ANR	666082	Argument	buf_cp932		665933	0					
ANR	666083	Identifier	buf_cp932		665933	0					
ANR	666084	Argument	"""\\\\x%02x\\\\x%02x"""		665933	1					
ANR	666085	PrimaryExpression	"""\\\\x%02x\\\\x%02x"""		665933	0					
ANR	666086	Argument	( c >> 8 ) & 0xff		665933	2					
ANR	666087	BitAndExpression	( c >> 8 ) & 0xff		665933	0		&			
ANR	666088	ShiftExpression	c >> 8		665933	0		>>			
ANR	666089	Identifier	c		665933	0					
ANR	666090	PrimaryExpression	8		665933	1					
ANR	666091	PrimaryExpression	0xff		665933	1					
ANR	666092	Argument	c & 0xff		665933	3					
ANR	666093	BitAndExpression	c & 0xff		665933	0		&			
ANR	666094	Identifier	c		665933	0					
ANR	666095	PrimaryExpression	0xff		665933	1					
ANR	666096	ElseStatement	else		665933	0					
ANR	666097	ExpressionStatement	"sprintf ( buf_cp932 , ""\\\\x%02x"" , c )"	259:3:5732:5764	665933	0	True				
ANR	666098	CallExpression	"sprintf ( buf_cp932 , ""\\\\x%02x"" , c )"		665933	0					
ANR	666099	Callee	sprintf		665933	0					
ANR	666100	Identifier	sprintf		665933	0					
ANR	666101	ArgumentList	buf_cp932		665933	1					
ANR	666102	Argument	buf_cp932		665933	0					
ANR	666103	Identifier	buf_cp932		665933	0					
ANR	666104	Argument	"""\\\\x%02x"""		665933	1					
ANR	666105	PrimaryExpression	"""\\\\x%02x"""		665933	0					
ANR	666106	Argument	c		665933	2					
ANR	666107	Identifier	c		665933	0					
ANR	666108	Statement	printf	260:2:5768:5773	665933	2	True				
ANR	666109	Statement	(	260:8:5774:5774	665933	3	True				
ANR	666110	Statement	"""set test \\""U+%06X\\""\\n"""	260:9:5775:5797	665933	4	True				
ANR	666111	Statement	"""send -- \\""%s\\r\\""\\n"""	261:6:5805:5824	665933	5	True				
ANR	666112	Statement	"""sleep 0.001\\n"""	262:6:5832:5846	665933	6	True				
ANR	666113	Statement	"""expect {\\n"""	263:6:5854:5865	665933	7	True				
ANR	666114	Statement	"""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"""	264:9:5876:5915	665933	8	True				
ANR	666115	Statement	"""}\\n"""	265:9:5926:5930	665933	9	True				
ANR	666116	Statement	","	265:14:5931:5931	665933	10	True				
ANR	666117	Statement	entry	266:6:5939:5943	665933	11	True				
ANR	666118	Statement	->	266:11:5944:5945	665933	12	True				
ANR	666119	Statement	cp_uni	266:13:5946:5951	665933	13	True				
ANR	666120	Statement	","	266:19:5952:5952	665933	14	True				
ANR	666121	Statement	buf_cp932	266:21:5954:5962	665933	15	True				
ANR	666122	Statement	","	266:30:5963:5963	665933	16	True				
ANR	666123	Statement	buf_uni	266:32:5965:5971	665933	17	True				
ANR	666124	Statement	","	266:39:5972:5972	665933	18	True				
ANR	666125	Statement	len	266:41:5974:5976	665933	19	True				
ANR	666126	Statement	)	266:44:5977:5977	665933	20	True				
ANR	666127	ExpressionStatement		266:45:5978:5978	665933	21	True				
ANR	666128	ReturnType	static void		665933	1					
ANR	666129	Identifier	from_cp932_visitor		665933	2					
ANR	666130	ParameterList	const struct mappings_entry * entry		665933	3					
ANR	666131	Parameter	const struct mappings_entry * entry	236:31:5143:5176	665933	0	True				
ANR	666132	ParameterType	const struct mappings_entry *		665933	0					
ANR	666133	Identifier	entry		665933	1					
ANR	666134	CFGEntryNode	ENTRY		665933		True				
ANR	666135	CFGExitNode	EXIT		665933		True				
ANR	666136	Symbol	entry -> cp_uni		665933						
ANR	666137	Symbol	c		665933						
ANR	666138	Symbol	buf_cp932		665933						
ANR	666139	Symbol	* * entry		665933						
ANR	666140	Symbol	utf32_utf8		665933						
ANR	666141	Symbol	* entry -> cp_932		665933						
ANR	666142	Symbol	i		665933						
ANR	666143	Symbol	* c		665933						
ANR	666144	Symbol	entry -> n		665933						
ANR	666145	Symbol	buf_uni		665933						
ANR	666146	Symbol	entry		665933						
ANR	666147	Symbol	* i		665933						
ANR	666148	Symbol	len		665933						
ANR	666149	Symbol	entry -> cp_932		665933						
ANR	666150	Symbol	* buf_uni		665933						
ANR	666151	Symbol	* entry		665933						
ANR	666152	Symbol	* len		665933						
ANR	666153	Function	to_cp50220_visitor	270:0:5986:7852							
ANR	666154	FunctionDef	to_cp50220_visitor (const struct mappings_entry * entry)		666153	0					
ANR	666155	CompoundStatement		271:0:6053:7852	666153	0					
ANR	666156	IdentifierDeclStatement	"char buf_uni [ 32 ] , buf_cp50220 [ 32 ] ;"	272:1:6056:6089	666153	0	True				
ANR	666157	IdentifierDecl	buf_uni [ 32 ]		666153	0					
ANR	666158	IdentifierDeclType	char [ 32 ]		666153	0					
ANR	666159	Identifier	buf_uni		666153	1					
ANR	666160	PrimaryExpression	32		666153	2					
ANR	666161	IdentifierDecl	buf_cp50220 [ 32 ]		666153	1					
ANR	666162	IdentifierDeclType	char [ 32 ]		666153	0					
ANR	666163	Identifier	buf_cp50220		666153	1					
ANR	666164	PrimaryExpression	32		666153	2					
ANR	666165	IdentifierDeclStatement	int i ;	273:1:6092:6097	666153	1	True				
ANR	666166	IdentifierDecl	i		666153	0					
ANR	666167	IdentifierDeclType	int		666153	0					
ANR	666168	Identifier	i		666153	1					
ANR	666169	IfStatement	if ( entry -> cp_uni < 32 || entry -> cp_uni == 127 )		666153	2					
ANR	666170	Condition	entry -> cp_uni < 32 || entry -> cp_uni == 127	275:5:6105:6146	666153	0	True				
ANR	666171	OrExpression	entry -> cp_uni < 32 || entry -> cp_uni == 127		666153	0		||			
ANR	666172	RelationalExpression	entry -> cp_uni < 32		666153	0		<			
ANR	666173	PtrMemberAccess	entry -> cp_uni		666153	0					
ANR	666174	Identifier	entry		666153	0					
ANR	666175	Identifier	cp_uni		666153	1					
ANR	666176	PrimaryExpression	32		666153	1					
ANR	666177	EqualityExpression	entry -> cp_uni == 127		666153	1		==			
ANR	666178	PtrMemberAccess	entry -> cp_uni		666153	0					
ANR	666179	Identifier	entry		666153	0					
ANR	666180	Identifier	cp_uni		666153	1					
ANR	666181	PrimaryExpression	127		666153	1					
ANR	666182	ReturnStatement	return ;	276:2:6151:6157	666153	1	True				
ANR	666183	ExpressionStatement	"i = utf32_utf8 ( buf_uni , entry -> cp_uni )"	278:1:6161:6199	666153	3	True				
ANR	666184	AssignmentExpression	"i = utf32_utf8 ( buf_uni , entry -> cp_uni )"		666153	0		=			
ANR	666185	Identifier	i		666153	0					
ANR	666186	CallExpression	"utf32_utf8 ( buf_uni , entry -> cp_uni )"		666153	1					
ANR	666187	Callee	utf32_utf8		666153	0					
ANR	666188	Identifier	utf32_utf8		666153	0					
ANR	666189	ArgumentList	buf_uni		666153	1					
ANR	666190	Argument	buf_uni		666153	0					
ANR	666191	Identifier	buf_uni		666153	0					
ANR	666192	Argument	entry -> cp_uni		666153	1					
ANR	666193	PtrMemberAccess	entry -> cp_uni		666153	0					
ANR	666194	Identifier	entry		666153	0					
ANR	666195	Identifier	cp_uni		666153	1					
ANR	666196	ExpressionStatement	buf_uni [ i * 4 ] = '\\0'	279:1:6202:6223	666153	4	True				
ANR	666197	AssignmentExpression	buf_uni [ i * 4 ] = '\\0'		666153	0		=			
ANR	666198	ArrayIndexing	buf_uni [ i * 4 ]		666153	0					
ANR	666199	Identifier	buf_uni		666153	0					
ANR	666200	MultiplicativeExpression	i * 4		666153	1		*			
ANR	666201	Identifier	i		666153	0					
ANR	666202	PrimaryExpression	4		666153	1					
ANR	666203	PrimaryExpression	'\\0'		666153	1					
ANR	666204	WhileStatement	while ( -- i >= 0 )		666153	5					
ANR	666205	Condition	-- i >= 0	280:8:6233:6240	666153	0	True				
ANR	666206	RelationalExpression	-- i >= 0		666153	0		>=			
ANR	666207	UnaryExpression	-- i		666153	0					
ANR	666208	IncDec	--		666153	0					
ANR	666209	Identifier	i		666153	1					
ANR	666210	PrimaryExpression	0		666153	1					
ANR	666211	CompoundStatement		11:2:193:240	666153	1					
ANR	666212	IdentifierDeclStatement	unsigned char c = ( ( unsigned char * ) buf_uni ) [ i ] ;	281:2:6247:6294	666153	0	True				
ANR	666213	IdentifierDecl	c = ( ( unsigned char * ) buf_uni ) [ i ]		666153	0					
ANR	666214	IdentifierDeclType	unsigned char		666153	0					
ANR	666215	Identifier	c		666153	1					
ANR	666216	AssignmentExpression	c = ( ( unsigned char * ) buf_uni ) [ i ]		666153	2		=			
ANR	666217	Identifier	c		666153	0					
ANR	666218	ArrayIndexing	( ( unsigned char * ) buf_uni ) [ i ]		666153	1					
ANR	666219	CastExpression	( unsigned char * ) buf_uni		666153	0					
ANR	666220	CastTarget	unsigned char *		666153	0					
ANR	666221	Identifier	buf_uni		666153	1					
ANR	666222	Identifier	i		666153	1					
ANR	666223	ExpressionStatement	buf_uni [ i * 4 ] = '\\\\'	282:2:6298:6319	666153	1	True				
ANR	666224	AssignmentExpression	buf_uni [ i * 4 ] = '\\\\'		666153	0		=			
ANR	666225	ArrayIndexing	buf_uni [ i * 4 ]		666153	0					
ANR	666226	Identifier	buf_uni		666153	0					
ANR	666227	MultiplicativeExpression	i * 4		666153	1		*			
ANR	666228	Identifier	i		666153	0					
ANR	666229	PrimaryExpression	4		666153	1					
ANR	666230	PrimaryExpression	'\\\\'		666153	1					
ANR	666231	ExpressionStatement	buf_uni [ i * 4 + 1 ] = 'x'	283:2:6323:6347	666153	2	True				
ANR	666232	AssignmentExpression	buf_uni [ i * 4 + 1 ] = 'x'		666153	0		=			
ANR	666233	ArrayIndexing	buf_uni [ i * 4 + 1 ]		666153	0					
ANR	666234	Identifier	buf_uni		666153	0					
ANR	666235	AdditiveExpression	i * 4 + 1		666153	1		+			
ANR	666236	MultiplicativeExpression	i * 4		666153	0		*			
ANR	666237	Identifier	i		666153	0					
ANR	666238	PrimaryExpression	4		666153	1					
ANR	666239	PrimaryExpression	1		666153	1					
ANR	666240	PrimaryExpression	'x'		666153	1					
ANR	666241	ExpressionStatement	"buf_uni [ i * 4 + 2 ] = ""0123456789abcdef"" [ c >> 4 ]"	284:2:6351:6398	666153	3	True				
ANR	666242	AssignmentExpression	"buf_uni [ i * 4 + 2 ] = ""0123456789abcdef"" [ c >> 4 ]"		666153	0		=			
ANR	666243	ArrayIndexing	buf_uni [ i * 4 + 2 ]		666153	0					
ANR	666244	Identifier	buf_uni		666153	0					
ANR	666245	AdditiveExpression	i * 4 + 2		666153	1		+			
ANR	666246	MultiplicativeExpression	i * 4		666153	0		*			
ANR	666247	Identifier	i		666153	0					
ANR	666248	PrimaryExpression	4		666153	1					
ANR	666249	PrimaryExpression	2		666153	1					
ANR	666250	ArrayIndexing	"""0123456789abcdef"" [ c >> 4 ]"		666153	1					
ANR	666251	PrimaryExpression	"""0123456789abcdef"""		666153	0					
ANR	666252	ShiftExpression	c >> 4		666153	1		>>			
ANR	666253	Identifier	c		666153	0					
ANR	666254	PrimaryExpression	4		666153	1					
ANR	666255	ExpressionStatement	"buf_uni [ i * 4 + 3 ] = ""0123456789abcdef"" [ c & 15 ]"	285:2:6402:6449	666153	4	True				
ANR	666256	AssignmentExpression	"buf_uni [ i * 4 + 3 ] = ""0123456789abcdef"" [ c & 15 ]"		666153	0		=			
ANR	666257	ArrayIndexing	buf_uni [ i * 4 + 3 ]		666153	0					
ANR	666258	Identifier	buf_uni		666153	0					
ANR	666259	AdditiveExpression	i * 4 + 3		666153	1		+			
ANR	666260	MultiplicativeExpression	i * 4		666153	0		*			
ANR	666261	Identifier	i		666153	0					
ANR	666262	PrimaryExpression	4		666153	1					
ANR	666263	PrimaryExpression	3		666153	1					
ANR	666264	ArrayIndexing	"""0123456789abcdef"" [ c & 15 ]"		666153	1					
ANR	666265	PrimaryExpression	"""0123456789abcdef"""		666153	0					
ANR	666266	BitAndExpression	c & 15		666153	1		&			
ANR	666267	Identifier	c		666153	0					
ANR	666268	PrimaryExpression	15		666153	1					
ANR	666269	Statement	printf	288:1:6456:6461	666153	6	True				
ANR	666270	Statement	(	288:7:6462:6462	666153	7	True				
ANR	666271	Statement	"""set test \\""U+%06X\\""\\n"""	288:8:6463:6485	666153	8	True				
ANR	666272	Statement	"""send -- \\""%s\\r\\""\\n"""	289:8:6495:6514	666153	9	True				
ANR	666273	Statement	"""sleep 0.001\\n"""	290:5:6521:6535	666153	10	True				
ANR	666274	Statement	"""expect {\\n"""	291:8:6545:6556	666153	11	True				
ANR	666275	Statement	","	291:20:6557:6557	666153	12	True				
ANR	666276	Statement	entry	291:22:6559:6563	666153	13	True				
ANR	666277	Statement	->	291:27:6564:6565	666153	14	True				
ANR	666278	Statement	cp_uni	291:29:6566:6571	666153	15	True				
ANR	666279	Statement	","	291:35:6572:6572	666153	16	True				
ANR	666280	Statement	buf_uni	291:37:6574:6580	666153	17	True				
ANR	666281	Statement	)	291:44:6581:6581	666153	18	True				
ANR	666282	ExpressionStatement		291:45:6582:6582	666153	19	True				
ANR	666283	ForStatement	for ( i = 0 ; i < entry -> n ; ++ i )		666153	20					
ANR	666284	ForInit	i = 0 ;	293:6:6591:6596	666153	0	True				
ANR	666285	AssignmentExpression	i = 0		666153	0		=			
ANR	666286	Identifier	i		666153	0					
ANR	666287	PrimaryExpression	0		666153	1					
ANR	666288	Condition	i < entry -> n	293:13:6598:6609	666153	1	True				
ANR	666289	RelationalExpression	i < entry -> n		666153	0		<			
ANR	666290	Identifier	i		666153	0					
ANR	666291	PtrMemberAccess	entry -> n		666153	1					
ANR	666292	Identifier	entry		666153	0					
ANR	666293	Identifier	n		666153	1					
ANR	666294	UnaryExpression	++ i	293:27:6612:6614	666153	2	True				
ANR	666295	IncDec	++		666153	0					
ANR	666296	Identifier	i		666153	1					
ANR	666297	CompoundStatement		25:2:582:612	666153	3					
ANR	666298	IdentifierDeclStatement	int len = 0 ;	294:2:6621:6632	666153	0	True				
ANR	666299	IdentifierDecl	len = 0		666153	0					
ANR	666300	IdentifierDeclType	int		666153	0					
ANR	666301	Identifier	len		666153	1					
ANR	666302	AssignmentExpression	len = 0		666153	2		=			
ANR	666303	Identifier	len		666153	0					
ANR	666304	PrimaryExpression	0		666153	1					
ANR	666305	IdentifierDeclStatement	const int c = entry -> cp_932 [ i ] ;	295:2:6636:6666	666153	1	True				
ANR	666306	IdentifierDecl	c = entry -> cp_932 [ i ]		666153	0					
ANR	666307	IdentifierDeclType	const int		666153	0					
ANR	666308	Identifier	c		666153	1					
ANR	666309	AssignmentExpression	c = entry -> cp_932 [ i ]		666153	2		=			
ANR	666310	Identifier	c		666153	0					
ANR	666311	ArrayIndexing	entry -> cp_932 [ i ]		666153	1					
ANR	666312	PtrMemberAccess	entry -> cp_932		666153	0					
ANR	666313	Identifier	entry		666153	0					
ANR	666314	Identifier	cp_932		666153	1					
ANR	666315	Identifier	i		666153	1					
ANR	666316	IfStatement	if ( c >= 0xa1 && c < 0xe0 )		666153	2					
ANR	666317	Condition	c >= 0xa1 && c < 0xe0	296:6:6674:6694	666153	0	True				
ANR	666318	AndExpression	c >= 0xa1 && c < 0xe0		666153	0		&&			
ANR	666319	RelationalExpression	c >= 0xa1		666153	0		>=			
ANR	666320	Identifier	c		666153	0					
ANR	666321	PrimaryExpression	0xa1		666153	1					
ANR	666322	RelationalExpression	c < 0xe0		666153	1		<			
ANR	666323	Identifier	c		666153	0					
ANR	666324	PrimaryExpression	0xe0		666153	1					
ANR	666325	CompoundStatement		37:3:1239:1278	666153	1					
ANR	666326	Statement	static	297:3:6702:6707	666153	0	True				
ANR	666327	IdentifierDeclStatement	"const int jisx0208_tl_map [ ] = { 0x0000 , 0x2123 , 0x2156 , 0x2157 , 0x2122 , 0x2126 , 0x2572 , 0x2521 , 0x2523 , 0x2525 , 0x2527 , 0x2529 , 0x2563 , 0x2565 , 0x2567 , 0x2543 , 0x213c , 0x2522 , 0x2524 , 0x2526 , 0x2528 , 0x252a , 0x252b , 0x252d , 0x252f , 0x2531 , 0x2533 , 0x2535 , 0x2537 , 0x2539 , 0x253b , 0x253d , 0x253f , 0x2541 , 0x2544 , 0x2546 , 0x2548 , 0x254a , 0x254b , 0x254c , 0x254d , 0x254e , 0x254f , 0x2552 , 0x2555 , 0x2558 , 0x255b , 0x255e , 0x255f , 0x2560 , 0x2561 , 0x2562 , 0x2564 , 0x2566 , 0x2568 , 0x2569 , 0x256a , 0x256b , 0x256c , 0x256d , 0x256f , 0x2573 , 0x212b , 0x212c } ;"	297:10:6709:7288	666153	1	True				
ANR	666328	IdentifierDecl	"jisx0208_tl_map [ ] = { 0x0000 , 0x2123 , 0x2156 , 0x2157 , 0x2122 , 0x2126 , 0x2572 , 0x2521 , 0x2523 , 0x2525 , 0x2527 , 0x2529 , 0x2563 , 0x2565 , 0x2567 , 0x2543 , 0x213c , 0x2522 , 0x2524 , 0x2526 , 0x2528 , 0x252a , 0x252b , 0x252d , 0x252f , 0x2531 , 0x2533 , 0x2535 , 0x2537 , 0x2539 , 0x253b , 0x253d , 0x253f , 0x2541 , 0x2544 , 0x2546 , 0x2548 , 0x254a , 0x254b , 0x254c , 0x254d , 0x254e , 0x254f , 0x2552 , 0x2555 , 0x2558 , 0x255b , 0x255e , 0x255f , 0x2560 , 0x2561 , 0x2562 , 0x2564 , 0x2566 , 0x2568 , 0x2569 , 0x256a , 0x256b , 0x256c , 0x256d , 0x256f , 0x2573 , 0x212b , 0x212c }"		666153	0					
ANR	666329	IdentifierDeclType	const int [ ]		666153	0					
ANR	666330	Identifier	jisx0208_tl_map		666153	1					
ANR	666331	AssignmentExpression	"jisx0208_tl_map [ ] = { 0x0000 , 0x2123 , 0x2156 , 0x2157 , 0x2122 , 0x2126 , 0x2572 , 0x2521 , 0x2523 , 0x2525 , 0x2527 , 0x2529 , 0x2563 , 0x2565 , 0x2567 , 0x2543 , 0x213c , 0x2522 , 0x2524 , 0x2526 , 0x2528 , 0x252a , 0x252b , 0x252d , 0x252f , 0x2531 , 0x2533 , 0x2535 , 0x2537 , 0x2539 , 0x253b , 0x253d , 0x253f , 0x2541 , 0x2544 , 0x2546 , 0x2548 , 0x254a , 0x254b , 0x254c , 0x254d , 0x254e , 0x254f , 0x2552 , 0x2555 , 0x2558 , 0x255b , 0x255e , 0x255f , 0x2560 , 0x2561 , 0x2562 , 0x2564 , 0x2566 , 0x2568 , 0x2569 , 0x256a , 0x256b , 0x256c , 0x256d , 0x256f , 0x2573 , 0x212b , 0x212c }"		666153	2		=			
ANR	666332	Identifier	jisx0208_tl_map		666153	0					
ANR	666333	InitializerList	0x0000		666153	1					
ANR	666334	PrimaryExpression	0x0000		666153	0					
ANR	666335	PrimaryExpression	0x2123		666153	1					
ANR	666336	PrimaryExpression	0x2156		666153	2					
ANR	666337	PrimaryExpression	0x2157		666153	3					
ANR	666338	PrimaryExpression	0x2122		666153	4					
ANR	666339	PrimaryExpression	0x2126		666153	5					
ANR	666340	PrimaryExpression	0x2572		666153	6					
ANR	666341	PrimaryExpression	0x2521		666153	7					
ANR	666342	PrimaryExpression	0x2523		666153	8					
ANR	666343	PrimaryExpression	0x2525		666153	9					
ANR	666344	PrimaryExpression	0x2527		666153	10					
ANR	666345	PrimaryExpression	0x2529		666153	11					
ANR	666346	PrimaryExpression	0x2563		666153	12					
ANR	666347	PrimaryExpression	0x2565		666153	13					
ANR	666348	PrimaryExpression	0x2567		666153	14					
ANR	666349	PrimaryExpression	0x2543		666153	15					
ANR	666350	PrimaryExpression	0x213c		666153	16					
ANR	666351	PrimaryExpression	0x2522		666153	17					
ANR	666352	PrimaryExpression	0x2524		666153	18					
ANR	666353	PrimaryExpression	0x2526		666153	19					
ANR	666354	PrimaryExpression	0x2528		666153	20					
ANR	666355	PrimaryExpression	0x252a		666153	21					
ANR	666356	PrimaryExpression	0x252b		666153	22					
ANR	666357	PrimaryExpression	0x252d		666153	23					
ANR	666358	PrimaryExpression	0x252f		666153	24					
ANR	666359	PrimaryExpression	0x2531		666153	25					
ANR	666360	PrimaryExpression	0x2533		666153	26					
ANR	666361	PrimaryExpression	0x2535		666153	27					
ANR	666362	PrimaryExpression	0x2537		666153	28					
ANR	666363	PrimaryExpression	0x2539		666153	29					
ANR	666364	PrimaryExpression	0x253b		666153	30					
ANR	666365	PrimaryExpression	0x253d		666153	31					
ANR	666366	PrimaryExpression	0x253f		666153	32					
ANR	666367	PrimaryExpression	0x2541		666153	33					
ANR	666368	PrimaryExpression	0x2544		666153	34					
ANR	666369	PrimaryExpression	0x2546		666153	35					
ANR	666370	PrimaryExpression	0x2548		666153	36					
ANR	666371	PrimaryExpression	0x254a		666153	37					
ANR	666372	PrimaryExpression	0x254b		666153	38					
ANR	666373	PrimaryExpression	0x254c		666153	39					
ANR	666374	PrimaryExpression	0x254d		666153	40					
ANR	666375	PrimaryExpression	0x254e		666153	41					
ANR	666376	PrimaryExpression	0x254f		666153	42					
ANR	666377	PrimaryExpression	0x2552		666153	43					
ANR	666378	PrimaryExpression	0x2555		666153	44					
ANR	666379	PrimaryExpression	0x2558		666153	45					
ANR	666380	PrimaryExpression	0x255b		666153	46					
ANR	666381	PrimaryExpression	0x255e		666153	47					
ANR	666382	PrimaryExpression	0x255f		666153	48					
ANR	666383	PrimaryExpression	0x2560		666153	49					
ANR	666384	PrimaryExpression	0x2561		666153	50					
ANR	666385	PrimaryExpression	0x2562		666153	51					
ANR	666386	PrimaryExpression	0x2564		666153	52					
ANR	666387	PrimaryExpression	0x2566		666153	53					
ANR	666388	PrimaryExpression	0x2568		666153	54					
ANR	666389	PrimaryExpression	0x2569		666153	55					
ANR	666390	PrimaryExpression	0x256a		666153	56					
ANR	666391	PrimaryExpression	0x256b		666153	57					
ANR	666392	PrimaryExpression	0x256c		666153	58					
ANR	666393	PrimaryExpression	0x256d		666153	59					
ANR	666394	PrimaryExpression	0x256f		666153	60					
ANR	666395	PrimaryExpression	0x2573		666153	61					
ANR	666396	PrimaryExpression	0x212b		666153	62					
ANR	666397	PrimaryExpression	0x212c		666153	63					
ANR	666398	IdentifierDeclStatement	const int j = jisx0208_tl_map [ c - 0xa0 ] ;	307:3:7293:7332	666153	2	True				
ANR	666399	IdentifierDecl	j = jisx0208_tl_map [ c - 0xa0 ]		666153	0					
ANR	666400	IdentifierDeclType	const int		666153	0					
ANR	666401	Identifier	j		666153	1					
ANR	666402	AssignmentExpression	j = jisx0208_tl_map [ c - 0xa0 ]		666153	2		=			
ANR	666403	Identifier	j		666153	0					
ANR	666404	ArrayIndexing	jisx0208_tl_map [ c - 0xa0 ]		666153	1					
ANR	666405	Identifier	jisx0208_tl_map		666153	0					
ANR	666406	AdditiveExpression	c - 0xa0		666153	1		-			
ANR	666407	Identifier	c		666153	0					
ANR	666408	PrimaryExpression	0xa0		666153	1					
ANR	666409	ExpressionStatement	len = 8	308:3:7337:7344	666153	3	True				
ANR	666410	AssignmentExpression	len = 8		666153	0		=			
ANR	666411	Identifier	len		666153	0					
ANR	666412	PrimaryExpression	8		666153	1					
ANR	666413	ExpressionStatement	"sprintf ( buf_cp50220 , ""%%1b%%24%%42%%%02x%%%02x%%1b%%28%%42"" , j >> 8 , j & 0xff )"	309:3:7349:7427	666153	4	True				
ANR	666414	CallExpression	"sprintf ( buf_cp50220 , ""%%1b%%24%%42%%%02x%%%02x%%1b%%28%%42"" , j >> 8 , j & 0xff )"		666153	0					
ANR	666415	Callee	sprintf		666153	0					
ANR	666416	Identifier	sprintf		666153	0					
ANR	666417	ArgumentList	buf_cp50220		666153	1					
ANR	666418	Argument	buf_cp50220		666153	0					
ANR	666419	Identifier	buf_cp50220		666153	0					
ANR	666420	Argument	"""%%1b%%24%%42%%%02x%%%02x%%1b%%28%%42"""		666153	1					
ANR	666421	PrimaryExpression	"""%%1b%%24%%42%%%02x%%%02x%%1b%%28%%42"""		666153	0					
ANR	666422	Argument	j >> 8		666153	2					
ANR	666423	ShiftExpression	j >> 8		666153	0		>>			
ANR	666424	Identifier	j		666153	0					
ANR	666425	PrimaryExpression	8		666153	1					
ANR	666426	Argument	j & 0xff		666153	3					
ANR	666427	BitAndExpression	j & 0xff		666153	0		&			
ANR	666428	Identifier	j		666153	0					
ANR	666429	PrimaryExpression	0xff		666153	1					
ANR	666430	ElseStatement	else		666153	0					
ANR	666431	IfStatement	if ( c >= 0x100 )		666153	0					
ANR	666432	Condition	c >= 0x100	310:13:7442:7451	666153	0	True				
ANR	666433	RelationalExpression	c >= 0x100		666153	0		>=			
ANR	666434	Identifier	c		666153	0					
ANR	666435	PrimaryExpression	0x100		666153	1					
ANR	666436	CompoundStatement		41:3:1405:1546	666153	1					
ANR	666437	IdentifierDeclStatement	const int j = ( ( ( ( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 ) ) << 1 ) | ( ( c & 0xff ) - ( c & 0x80 ? 32 : 31 ) ) ) - ( ( c & 0xff ) >= 159 ? 94 : 0x100 ) ;	311:3:7459:7600	666153	0	True				
ANR	666438	IdentifierDecl	j = ( ( ( ( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 ) ) << 1 ) | ( ( c & 0xff ) - ( c & 0x80 ? 32 : 31 ) ) ) - ( ( c & 0xff ) >= 159 ? 94 : 0x100 )		666153	0					
ANR	666439	IdentifierDeclType	const int		666153	0					
ANR	666440	Identifier	j		666153	1					
ANR	666441	AssignmentExpression	j = ( ( ( ( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 ) ) << 1 ) | ( ( c & 0xff ) - ( c & 0x80 ? 32 : 31 ) ) ) - ( ( c & 0xff ) >= 159 ? 94 : 0x100 )		666153	2		=			
ANR	666442	Identifier	j		666153	0					
ANR	666443	AdditiveExpression	( ( ( ( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 ) ) << 1 ) | ( ( c & 0xff ) - ( c & 0x80 ? 32 : 31 ) ) ) - ( ( c & 0xff ) >= 159 ? 94 : 0x100 )		666153	1		-			
ANR	666444	InclusiveOrExpression	( ( ( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 ) ) << 1 ) | ( ( c & 0xff ) - ( c & 0x80 ? 32 : 31 ) )		666153	0		|			
ANR	666445	ShiftExpression	( ( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 ) ) << 1		666153	0		<<			
ANR	666446	AdditiveExpression	( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 )		666153	0		-			
ANR	666447	BitAndExpression	c & 0xff00		666153	0		&			
ANR	666448	Identifier	c		666153	0					
ANR	666449	PrimaryExpression	0xff00		666153	1					
ANR	666450	ConditionalExpression	c >= 0xe000 ? 0xb000 : 0x7000		666153	1					
ANR	666451	Condition	c >= 0xe000		666153	0					
ANR	666452	RelationalExpression	c >= 0xe000		666153	0		>=			
ANR	666453	Identifier	c		666153	0					
ANR	666454	PrimaryExpression	0xe000		666153	1					
ANR	666455	PrimaryExpression	0xb000		666153	1					
ANR	666456	PrimaryExpression	0x7000		666153	2					
ANR	666457	PrimaryExpression	1		666153	1					
ANR	666458	AdditiveExpression	( c & 0xff ) - ( c & 0x80 ? 32 : 31 )		666153	1		-			
ANR	666459	BitAndExpression	c & 0xff		666153	0		&			
ANR	666460	Identifier	c		666153	0					
ANR	666461	PrimaryExpression	0xff		666153	1					
ANR	666462	ConditionalExpression	c & 0x80 ? 32 : 31		666153	1					
ANR	666463	Condition	c & 0x80		666153	0					
ANR	666464	BitAndExpression	c & 0x80		666153	0		&			
ANR	666465	Identifier	c		666153	0					
ANR	666466	PrimaryExpression	0x80		666153	1					
ANR	666467	PrimaryExpression	32		666153	1					
ANR	666468	PrimaryExpression	31		666153	2					
ANR	666469	ConditionalExpression	( c & 0xff ) >= 159 ? 94 : 0x100		666153	1					
ANR	666470	Condition	( c & 0xff ) >= 159		666153	0					
ANR	666471	RelationalExpression	( c & 0xff ) >= 159		666153	0		>=			
ANR	666472	BitAndExpression	c & 0xff		666153	0		&			
ANR	666473	Identifier	c		666153	0					
ANR	666474	PrimaryExpression	0xff		666153	1					
ANR	666475	PrimaryExpression	159		666153	1					
ANR	666476	PrimaryExpression	94		666153	1					
ANR	666477	PrimaryExpression	0x100		666153	2					
ANR	666478	ExpressionStatement	len = 8	312:3:7605:7612	666153	1	True				
ANR	666479	AssignmentExpression	len = 8		666153	0		=			
ANR	666480	Identifier	len		666153	0					
ANR	666481	PrimaryExpression	8		666153	1					
ANR	666482	ExpressionStatement	"sprintf ( buf_cp50220 , ""%%1b%%24%%42%%%02x%%%02x%%1b%%28%%42"" , j >> 8 , j & 0xff )"	313:3:7617:7695	666153	2	True				
ANR	666483	CallExpression	"sprintf ( buf_cp50220 , ""%%1b%%24%%42%%%02x%%%02x%%1b%%28%%42"" , j >> 8 , j & 0xff )"		666153	0					
ANR	666484	Callee	sprintf		666153	0					
ANR	666485	Identifier	sprintf		666153	0					
ANR	666486	ArgumentList	buf_cp50220		666153	1					
ANR	666487	Argument	buf_cp50220		666153	0					
ANR	666488	Identifier	buf_cp50220		666153	0					
ANR	666489	Argument	"""%%1b%%24%%42%%%02x%%%02x%%1b%%28%%42"""		666153	1					
ANR	666490	PrimaryExpression	"""%%1b%%24%%42%%%02x%%%02x%%1b%%28%%42"""		666153	0					
ANR	666491	Argument	j >> 8		666153	2					
ANR	666492	ShiftExpression	j >> 8		666153	0		>>			
ANR	666493	Identifier	j		666153	0					
ANR	666494	PrimaryExpression	8		666153	1					
ANR	666495	Argument	j & 0xff		666153	3					
ANR	666496	BitAndExpression	j & 0xff		666153	0		&			
ANR	666497	Identifier	j		666153	0					
ANR	666498	PrimaryExpression	0xff		666153	1					
ANR	666499	ElseStatement	else		666153	0					
ANR	666500	CompoundStatement		44:9:1652:1652	666153	0					
ANR	666501	ExpressionStatement	len = 1	315:3:7711:7718	666153	0	True				
ANR	666502	AssignmentExpression	len = 1		666153	0		=			
ANR	666503	Identifier	len		666153	0					
ANR	666504	PrimaryExpression	1		666153	1					
ANR	666505	ExpressionStatement	"sprintf ( buf_cp50220 , ""%%%02x"" , c )"	316:3:7723:7756	666153	1	True				
ANR	666506	CallExpression	"sprintf ( buf_cp50220 , ""%%%02x"" , c )"		666153	0					
ANR	666507	Callee	sprintf		666153	0					
ANR	666508	Identifier	sprintf		666153	0					
ANR	666509	ArgumentList	buf_cp50220		666153	1					
ANR	666510	Argument	buf_cp50220		666153	0					
ANR	666511	Identifier	buf_cp50220		666153	0					
ANR	666512	Argument	"""%%%02x"""		666153	1					
ANR	666513	PrimaryExpression	"""%%%02x"""		666153	0					
ANR	666514	Argument	c		666153	2					
ANR	666515	Identifier	c		666153	0					
ANR	666516	ExpressionStatement	"printf ( ""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"" , buf_cp50220 , len )"	318:2:7764:7830	666153	3	True				
ANR	666517	CallExpression	"printf ( ""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"" , buf_cp50220 , len )"		666153	0					
ANR	666518	Callee	printf		666153	0					
ANR	666519	Identifier	printf		666153	0					
ANR	666520	ArgumentList	"""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"""		666153	1					
ANR	666521	Argument	"""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"""		666153	0					
ANR	666522	PrimaryExpression	"""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"""		666153	0					
ANR	666523	Argument	buf_cp50220		666153	1					
ANR	666524	Identifier	buf_cp50220		666153	0					
ANR	666525	Argument	len		666153	2					
ANR	666526	Identifier	len		666153	0					
ANR	666527	ExpressionStatement	"printf ( ""}\\n"" )"	321:1:7837:7850	666153	21	True				
ANR	666528	CallExpression	"printf ( ""}\\n"" )"		666153	0					
ANR	666529	Callee	printf		666153	0					
ANR	666530	Identifier	printf		666153	0					
ANR	666531	ArgumentList	"""}\\n"""		666153	1					
ANR	666532	Argument	"""}\\n"""		666153	0					
ANR	666533	PrimaryExpression	"""}\\n"""		666153	0					
ANR	666534	ReturnType	static void		666153	1					
ANR	666535	Identifier	to_cp50220_visitor		666153	2					
ANR	666536	ParameterList	const struct mappings_entry * entry		666153	3					
ANR	666537	Parameter	const struct mappings_entry * entry	270:31:6017:6050	666153	0	True				
ANR	666538	ParameterType	const struct mappings_entry *		666153	0					
ANR	666539	Identifier	entry		666153	1					
ANR	666540	CFGEntryNode	ENTRY		666153		True				
ANR	666541	CFGExitNode	EXIT		666153		True				
ANR	666542	Symbol	entry -> cp_uni		666153						
ANR	666543	Symbol	jisx0208_tl_map		666153						
ANR	666544	Symbol	c		666153						
ANR	666545	Symbol	* * entry		666153						
ANR	666546	Symbol	buf_cp50220		666153						
ANR	666547	Symbol	utf32_utf8		666153						
ANR	666548	Symbol	* entry -> cp_932		666153						
ANR	666549	Symbol	i		666153						
ANR	666550	Symbol	j		666153						
ANR	666551	Symbol	* c		666153						
ANR	666552	Symbol	* jisx0208_tl_map		666153						
ANR	666553	Symbol	entry -> n		666153						
ANR	666554	Symbol	buf_uni		666153						
ANR	666555	Symbol	entry		666153						
ANR	666556	Symbol	* i		666153						
ANR	666557	Symbol	len		666153						
ANR	666558	Symbol	entry -> cp_932		666153						
ANR	666559	Symbol	* buf_uni		666153						
ANR	666560	Symbol	* entry		666153						
ANR	666561	Function	to_cp50222_visitor	324:0:7855:9056							
ANR	666562	FunctionDef	to_cp50222_visitor (const struct mappings_entry * entry)		666561	0					
ANR	666563	CompoundStatement		325:0:7922:9056	666561	0					
ANR	666564	IdentifierDeclStatement	"char buf_uni [ 32 ] , buf_cp50220 [ 32 ] ;"	326:1:7925:7958	666561	0	True				
ANR	666565	IdentifierDecl	buf_uni [ 32 ]		666561	0					
ANR	666566	IdentifierDeclType	char [ 32 ]		666561	0					
ANR	666567	Identifier	buf_uni		666561	1					
ANR	666568	PrimaryExpression	32		666561	2					
ANR	666569	IdentifierDecl	buf_cp50220 [ 32 ]		666561	1					
ANR	666570	IdentifierDeclType	char [ 32 ]		666561	0					
ANR	666571	Identifier	buf_cp50220		666561	1					
ANR	666572	PrimaryExpression	32		666561	2					
ANR	666573	IdentifierDeclStatement	int i ;	327:1:7961:7966	666561	1	True				
ANR	666574	IdentifierDecl	i		666561	0					
ANR	666575	IdentifierDeclType	int		666561	0					
ANR	666576	Identifier	i		666561	1					
ANR	666577	IfStatement	if ( entry -> cp_uni < 32 || entry -> cp_uni == 127 )		666561	2					
ANR	666578	Condition	entry -> cp_uni < 32 || entry -> cp_uni == 127	329:5:7974:8015	666561	0	True				
ANR	666579	OrExpression	entry -> cp_uni < 32 || entry -> cp_uni == 127		666561	0		||			
ANR	666580	RelationalExpression	entry -> cp_uni < 32		666561	0		<			
ANR	666581	PtrMemberAccess	entry -> cp_uni		666561	0					
ANR	666582	Identifier	entry		666561	0					
ANR	666583	Identifier	cp_uni		666561	1					
ANR	666584	PrimaryExpression	32		666561	1					
ANR	666585	EqualityExpression	entry -> cp_uni == 127		666561	1		==			
ANR	666586	PtrMemberAccess	entry -> cp_uni		666561	0					
ANR	666587	Identifier	entry		666561	0					
ANR	666588	Identifier	cp_uni		666561	1					
ANR	666589	PrimaryExpression	127		666561	1					
ANR	666590	ReturnStatement	return ;	330:2:8020:8026	666561	1	True				
ANR	666591	ExpressionStatement	"i = utf32_utf8 ( buf_uni , entry -> cp_uni )"	332:1:8030:8068	666561	3	True				
ANR	666592	AssignmentExpression	"i = utf32_utf8 ( buf_uni , entry -> cp_uni )"		666561	0		=			
ANR	666593	Identifier	i		666561	0					
ANR	666594	CallExpression	"utf32_utf8 ( buf_uni , entry -> cp_uni )"		666561	1					
ANR	666595	Callee	utf32_utf8		666561	0					
ANR	666596	Identifier	utf32_utf8		666561	0					
ANR	666597	ArgumentList	buf_uni		666561	1					
ANR	666598	Argument	buf_uni		666561	0					
ANR	666599	Identifier	buf_uni		666561	0					
ANR	666600	Argument	entry -> cp_uni		666561	1					
ANR	666601	PtrMemberAccess	entry -> cp_uni		666561	0					
ANR	666602	Identifier	entry		666561	0					
ANR	666603	Identifier	cp_uni		666561	1					
ANR	666604	ExpressionStatement	buf_uni [ i * 4 ] = '\\0'	333:1:8071:8092	666561	4	True				
ANR	666605	AssignmentExpression	buf_uni [ i * 4 ] = '\\0'		666561	0		=			
ANR	666606	ArrayIndexing	buf_uni [ i * 4 ]		666561	0					
ANR	666607	Identifier	buf_uni		666561	0					
ANR	666608	MultiplicativeExpression	i * 4		666561	1		*			
ANR	666609	Identifier	i		666561	0					
ANR	666610	PrimaryExpression	4		666561	1					
ANR	666611	PrimaryExpression	'\\0'		666561	1					
ANR	666612	WhileStatement	while ( -- i >= 0 )		666561	5					
ANR	666613	Condition	-- i >= 0	334:8:8102:8109	666561	0	True				
ANR	666614	RelationalExpression	-- i >= 0		666561	0		>=			
ANR	666615	UnaryExpression	-- i		666561	0					
ANR	666616	IncDec	--		666561	0					
ANR	666617	Identifier	i		666561	1					
ANR	666618	PrimaryExpression	0		666561	1					
ANR	666619	CompoundStatement		11:2:193:240	666561	1					
ANR	666620	IdentifierDeclStatement	unsigned char c = ( ( unsigned char * ) buf_uni ) [ i ] ;	335:2:8116:8163	666561	0	True				
ANR	666621	IdentifierDecl	c = ( ( unsigned char * ) buf_uni ) [ i ]		666561	0					
ANR	666622	IdentifierDeclType	unsigned char		666561	0					
ANR	666623	Identifier	c		666561	1					
ANR	666624	AssignmentExpression	c = ( ( unsigned char * ) buf_uni ) [ i ]		666561	2		=			
ANR	666625	Identifier	c		666561	0					
ANR	666626	ArrayIndexing	( ( unsigned char * ) buf_uni ) [ i ]		666561	1					
ANR	666627	CastExpression	( unsigned char * ) buf_uni		666561	0					
ANR	666628	CastTarget	unsigned char *		666561	0					
ANR	666629	Identifier	buf_uni		666561	1					
ANR	666630	Identifier	i		666561	1					
ANR	666631	ExpressionStatement	buf_uni [ i * 4 ] = '\\\\'	336:2:8167:8188	666561	1	True				
ANR	666632	AssignmentExpression	buf_uni [ i * 4 ] = '\\\\'		666561	0		=			
ANR	666633	ArrayIndexing	buf_uni [ i * 4 ]		666561	0					
ANR	666634	Identifier	buf_uni		666561	0					
ANR	666635	MultiplicativeExpression	i * 4		666561	1		*			
ANR	666636	Identifier	i		666561	0					
ANR	666637	PrimaryExpression	4		666561	1					
ANR	666638	PrimaryExpression	'\\\\'		666561	1					
ANR	666639	ExpressionStatement	buf_uni [ i * 4 + 1 ] = 'x'	337:2:8192:8216	666561	2	True				
ANR	666640	AssignmentExpression	buf_uni [ i * 4 + 1 ] = 'x'		666561	0		=			
ANR	666641	ArrayIndexing	buf_uni [ i * 4 + 1 ]		666561	0					
ANR	666642	Identifier	buf_uni		666561	0					
ANR	666643	AdditiveExpression	i * 4 + 1		666561	1		+			
ANR	666644	MultiplicativeExpression	i * 4		666561	0		*			
ANR	666645	Identifier	i		666561	0					
ANR	666646	PrimaryExpression	4		666561	1					
ANR	666647	PrimaryExpression	1		666561	1					
ANR	666648	PrimaryExpression	'x'		666561	1					
ANR	666649	ExpressionStatement	"buf_uni [ i * 4 + 2 ] = ""0123456789abcdef"" [ c >> 4 ]"	338:2:8220:8267	666561	3	True				
ANR	666650	AssignmentExpression	"buf_uni [ i * 4 + 2 ] = ""0123456789abcdef"" [ c >> 4 ]"		666561	0		=			
ANR	666651	ArrayIndexing	buf_uni [ i * 4 + 2 ]		666561	0					
ANR	666652	Identifier	buf_uni		666561	0					
ANR	666653	AdditiveExpression	i * 4 + 2		666561	1		+			
ANR	666654	MultiplicativeExpression	i * 4		666561	0		*			
ANR	666655	Identifier	i		666561	0					
ANR	666656	PrimaryExpression	4		666561	1					
ANR	666657	PrimaryExpression	2		666561	1					
ANR	666658	ArrayIndexing	"""0123456789abcdef"" [ c >> 4 ]"		666561	1					
ANR	666659	PrimaryExpression	"""0123456789abcdef"""		666561	0					
ANR	666660	ShiftExpression	c >> 4		666561	1		>>			
ANR	666661	Identifier	c		666561	0					
ANR	666662	PrimaryExpression	4		666561	1					
ANR	666663	ExpressionStatement	"buf_uni [ i * 4 + 3 ] = ""0123456789abcdef"" [ c & 15 ]"	339:2:8271:8318	666561	4	True				
ANR	666664	AssignmentExpression	"buf_uni [ i * 4 + 3 ] = ""0123456789abcdef"" [ c & 15 ]"		666561	0		=			
ANR	666665	ArrayIndexing	buf_uni [ i * 4 + 3 ]		666561	0					
ANR	666666	Identifier	buf_uni		666561	0					
ANR	666667	AdditiveExpression	i * 4 + 3		666561	1		+			
ANR	666668	MultiplicativeExpression	i * 4		666561	0		*			
ANR	666669	Identifier	i		666561	0					
ANR	666670	PrimaryExpression	4		666561	1					
ANR	666671	PrimaryExpression	3		666561	1					
ANR	666672	ArrayIndexing	"""0123456789abcdef"" [ c & 15 ]"		666561	1					
ANR	666673	PrimaryExpression	"""0123456789abcdef"""		666561	0					
ANR	666674	BitAndExpression	c & 15		666561	1		&			
ANR	666675	Identifier	c		666561	0					
ANR	666676	PrimaryExpression	15		666561	1					
ANR	666677	Statement	printf	342:1:8325:8330	666561	6	True				
ANR	666678	Statement	(	342:7:8331:8331	666561	7	True				
ANR	666679	Statement	"""set test \\""U+%06X\\""\\n"""	342:8:8332:8354	666561	8	True				
ANR	666680	Statement	"""send -- \\""%s\\r\\""\\n"""	343:8:8364:8383	666561	9	True				
ANR	666681	Statement	"""sleep 0.001\\n"""	344:5:8390:8404	666561	10	True				
ANR	666682	Statement	"""expect {\\n"""	345:8:8414:8425	666561	11	True				
ANR	666683	Statement	","	345:20:8426:8426	666561	12	True				
ANR	666684	Statement	entry	345:22:8428:8432	666561	13	True				
ANR	666685	Statement	->	345:27:8433:8434	666561	14	True				
ANR	666686	Statement	cp_uni	345:29:8435:8440	666561	15	True				
ANR	666687	Statement	","	345:35:8441:8441	666561	16	True				
ANR	666688	Statement	buf_uni	345:37:8443:8449	666561	17	True				
ANR	666689	Statement	)	345:44:8450:8450	666561	18	True				
ANR	666690	ExpressionStatement		345:45:8451:8451	666561	19	True				
ANR	666691	ForStatement	for ( i = 0 ; i < entry -> n ; ++ i )		666561	20					
ANR	666692	ForInit	i = 0 ;	347:6:8460:8465	666561	0	True				
ANR	666693	AssignmentExpression	i = 0		666561	0		=			
ANR	666694	Identifier	i		666561	0					
ANR	666695	PrimaryExpression	0		666561	1					
ANR	666696	Condition	i < entry -> n	347:13:8467:8478	666561	1	True				
ANR	666697	RelationalExpression	i < entry -> n		666561	0		<			
ANR	666698	Identifier	i		666561	0					
ANR	666699	PtrMemberAccess	entry -> n		666561	1					
ANR	666700	Identifier	entry		666561	0					
ANR	666701	Identifier	n		666561	1					
ANR	666702	UnaryExpression	++ i	347:27:8481:8483	666561	2	True				
ANR	666703	IncDec	++		666561	0					
ANR	666704	Identifier	i		666561	1					
ANR	666705	CompoundStatement		25:2:582:612	666561	3					
ANR	666706	IdentifierDeclStatement	int len = 0 ;	348:2:8490:8501	666561	0	True				
ANR	666707	IdentifierDecl	len = 0		666561	0					
ANR	666708	IdentifierDeclType	int		666561	0					
ANR	666709	Identifier	len		666561	1					
ANR	666710	AssignmentExpression	len = 0		666561	2		=			
ANR	666711	Identifier	len		666561	0					
ANR	666712	PrimaryExpression	0		666561	1					
ANR	666713	IdentifierDeclStatement	const int c = entry -> cp_932 [ i ] ;	349:2:8505:8535	666561	1	True				
ANR	666714	IdentifierDecl	c = entry -> cp_932 [ i ]		666561	0					
ANR	666715	IdentifierDeclType	const int		666561	0					
ANR	666716	Identifier	c		666561	1					
ANR	666717	AssignmentExpression	c = entry -> cp_932 [ i ]		666561	2		=			
ANR	666718	Identifier	c		666561	0					
ANR	666719	ArrayIndexing	entry -> cp_932 [ i ]		666561	1					
ANR	666720	PtrMemberAccess	entry -> cp_932		666561	0					
ANR	666721	Identifier	entry		666561	0					
ANR	666722	Identifier	cp_932		666561	1					
ANR	666723	Identifier	i		666561	1					
ANR	666724	IfStatement	if ( c >= 0xa1 && c < 0xe0 )		666561	2					
ANR	666725	Condition	c >= 0xa1 && c < 0xe0	350:6:8543:8563	666561	0	True				
ANR	666726	AndExpression	c >= 0xa1 && c < 0xe0		666561	0		&&			
ANR	666727	RelationalExpression	c >= 0xa1		666561	0		>=			
ANR	666728	Identifier	c		666561	0					
ANR	666729	PrimaryExpression	0xa1		666561	1					
ANR	666730	RelationalExpression	c < 0xe0		666561	1		<			
ANR	666731	Identifier	c		666561	0					
ANR	666732	PrimaryExpression	0xe0		666561	1					
ANR	666733	CompoundStatement		26:29:643:643	666561	1					
ANR	666734	ExpressionStatement	len = 3	351:3:8571:8578	666561	0	True				
ANR	666735	AssignmentExpression	len = 3		666561	0		=			
ANR	666736	Identifier	len		666561	0					
ANR	666737	PrimaryExpression	3		666561	1					
ANR	666738	ExpressionStatement	"sprintf ( buf_cp50220 , ""%%0e%%%02x%%0f"" , c - 0x80 )"	352:3:8583:8631	666561	1	True				
ANR	666739	CallExpression	"sprintf ( buf_cp50220 , ""%%0e%%%02x%%0f"" , c - 0x80 )"		666561	0					
ANR	666740	Callee	sprintf		666561	0					
ANR	666741	Identifier	sprintf		666561	0					
ANR	666742	ArgumentList	buf_cp50220		666561	1					
ANR	666743	Argument	buf_cp50220		666561	0					
ANR	666744	Identifier	buf_cp50220		666561	0					
ANR	666745	Argument	"""%%0e%%%02x%%0f"""		666561	1					
ANR	666746	PrimaryExpression	"""%%0e%%%02x%%0f"""		666561	0					
ANR	666747	Argument	c - 0x80		666561	2					
ANR	666748	AdditiveExpression	c - 0x80		666561	0		-			
ANR	666749	Identifier	c		666561	0					
ANR	666750	PrimaryExpression	0x80		666561	1					
ANR	666751	ElseStatement	else		666561	0					
ANR	666752	IfStatement	if ( c >= 0x100 )		666561	0					
ANR	666753	Condition	c >= 0x100	353:13:8646:8655	666561	0	True				
ANR	666754	RelationalExpression	c >= 0x100		666561	0		>=			
ANR	666755	Identifier	c		666561	0					
ANR	666756	PrimaryExpression	0x100		666561	1					
ANR	666757	CompoundStatement		30:3:740:881	666561	1					
ANR	666758	IdentifierDeclStatement	const int j = ( ( ( ( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 ) ) << 1 ) | ( ( c & 0xff ) - ( c & 0x80 ? 32 : 31 ) ) ) - ( ( c & 0xff ) >= 159 ? 94 : 0x100 ) ;	354:3:8663:8804	666561	0	True				
ANR	666759	IdentifierDecl	j = ( ( ( ( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 ) ) << 1 ) | ( ( c & 0xff ) - ( c & 0x80 ? 32 : 31 ) ) ) - ( ( c & 0xff ) >= 159 ? 94 : 0x100 )		666561	0					
ANR	666760	IdentifierDeclType	const int		666561	0					
ANR	666761	Identifier	j		666561	1					
ANR	666762	AssignmentExpression	j = ( ( ( ( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 ) ) << 1 ) | ( ( c & 0xff ) - ( c & 0x80 ? 32 : 31 ) ) ) - ( ( c & 0xff ) >= 159 ? 94 : 0x100 )		666561	2		=			
ANR	666763	Identifier	j		666561	0					
ANR	666764	AdditiveExpression	( ( ( ( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 ) ) << 1 ) | ( ( c & 0xff ) - ( c & 0x80 ? 32 : 31 ) ) ) - ( ( c & 0xff ) >= 159 ? 94 : 0x100 )		666561	1		-			
ANR	666765	InclusiveOrExpression	( ( ( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 ) ) << 1 ) | ( ( c & 0xff ) - ( c & 0x80 ? 32 : 31 ) )		666561	0		|			
ANR	666766	ShiftExpression	( ( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 ) ) << 1		666561	0		<<			
ANR	666767	AdditiveExpression	( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 )		666561	0		-			
ANR	666768	BitAndExpression	c & 0xff00		666561	0		&			
ANR	666769	Identifier	c		666561	0					
ANR	666770	PrimaryExpression	0xff00		666561	1					
ANR	666771	ConditionalExpression	c >= 0xe000 ? 0xb000 : 0x7000		666561	1					
ANR	666772	Condition	c >= 0xe000		666561	0					
ANR	666773	RelationalExpression	c >= 0xe000		666561	0		>=			
ANR	666774	Identifier	c		666561	0					
ANR	666775	PrimaryExpression	0xe000		666561	1					
ANR	666776	PrimaryExpression	0xb000		666561	1					
ANR	666777	PrimaryExpression	0x7000		666561	2					
ANR	666778	PrimaryExpression	1		666561	1					
ANR	666779	AdditiveExpression	( c & 0xff ) - ( c & 0x80 ? 32 : 31 )		666561	1		-			
ANR	666780	BitAndExpression	c & 0xff		666561	0		&			
ANR	666781	Identifier	c		666561	0					
ANR	666782	PrimaryExpression	0xff		666561	1					
ANR	666783	ConditionalExpression	c & 0x80 ? 32 : 31		666561	1					
ANR	666784	Condition	c & 0x80		666561	0					
ANR	666785	BitAndExpression	c & 0x80		666561	0		&			
ANR	666786	Identifier	c		666561	0					
ANR	666787	PrimaryExpression	0x80		666561	1					
ANR	666788	PrimaryExpression	32		666561	1					
ANR	666789	PrimaryExpression	31		666561	2					
ANR	666790	ConditionalExpression	( c & 0xff ) >= 159 ? 94 : 0x100		666561	1					
ANR	666791	Condition	( c & 0xff ) >= 159		666561	0					
ANR	666792	RelationalExpression	( c & 0xff ) >= 159		666561	0		>=			
ANR	666793	BitAndExpression	c & 0xff		666561	0		&			
ANR	666794	Identifier	c		666561	0					
ANR	666795	PrimaryExpression	0xff		666561	1					
ANR	666796	PrimaryExpression	159		666561	1					
ANR	666797	PrimaryExpression	94		666561	1					
ANR	666798	PrimaryExpression	0x100		666561	2					
ANR	666799	ExpressionStatement	len = 8	355:3:8809:8816	666561	1	True				
ANR	666800	AssignmentExpression	len = 8		666561	0		=			
ANR	666801	Identifier	len		666561	0					
ANR	666802	PrimaryExpression	8		666561	1					
ANR	666803	ExpressionStatement	"sprintf ( buf_cp50220 , ""%%1b%%24%%42%%%02x%%%02x%%1b%%28%%42"" , j >> 8 , j & 0xff )"	356:3:8821:8899	666561	2	True				
ANR	666804	CallExpression	"sprintf ( buf_cp50220 , ""%%1b%%24%%42%%%02x%%%02x%%1b%%28%%42"" , j >> 8 , j & 0xff )"		666561	0					
ANR	666805	Callee	sprintf		666561	0					
ANR	666806	Identifier	sprintf		666561	0					
ANR	666807	ArgumentList	buf_cp50220		666561	1					
ANR	666808	Argument	buf_cp50220		666561	0					
ANR	666809	Identifier	buf_cp50220		666561	0					
ANR	666810	Argument	"""%%1b%%24%%42%%%02x%%%02x%%1b%%28%%42"""		666561	1					
ANR	666811	PrimaryExpression	"""%%1b%%24%%42%%%02x%%%02x%%1b%%28%%42"""		666561	0					
ANR	666812	Argument	j >> 8		666561	2					
ANR	666813	ShiftExpression	j >> 8		666561	0		>>			
ANR	666814	Identifier	j		666561	0					
ANR	666815	PrimaryExpression	8		666561	1					
ANR	666816	Argument	j & 0xff		666561	3					
ANR	666817	BitAndExpression	j & 0xff		666561	0		&			
ANR	666818	Identifier	j		666561	0					
ANR	666819	PrimaryExpression	0xff		666561	1					
ANR	666820	ElseStatement	else		666561	0					
ANR	666821	CompoundStatement		33:9:987:987	666561	0					
ANR	666822	ExpressionStatement	len = 1	358:3:8915:8922	666561	0	True				
ANR	666823	AssignmentExpression	len = 1		666561	0		=			
ANR	666824	Identifier	len		666561	0					
ANR	666825	PrimaryExpression	1		666561	1					
ANR	666826	ExpressionStatement	"sprintf ( buf_cp50220 , ""%%%02x"" , c )"	359:3:8927:8960	666561	1	True				
ANR	666827	CallExpression	"sprintf ( buf_cp50220 , ""%%%02x"" , c )"		666561	0					
ANR	666828	Callee	sprintf		666561	0					
ANR	666829	Identifier	sprintf		666561	0					
ANR	666830	ArgumentList	buf_cp50220		666561	1					
ANR	666831	Argument	buf_cp50220		666561	0					
ANR	666832	Identifier	buf_cp50220		666561	0					
ANR	666833	Argument	"""%%%02x"""		666561	1					
ANR	666834	PrimaryExpression	"""%%%02x"""		666561	0					
ANR	666835	Argument	c		666561	2					
ANR	666836	Identifier	c		666561	0					
ANR	666837	ExpressionStatement	"printf ( ""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"" , buf_cp50220 , len )"	361:2:8968:9034	666561	3	True				
ANR	666838	CallExpression	"printf ( ""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"" , buf_cp50220 , len )"		666561	0					
ANR	666839	Callee	printf		666561	0					
ANR	666840	Identifier	printf		666561	0					
ANR	666841	ArgumentList	"""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"""		666561	1					
ANR	666842	Argument	"""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"""		666561	0					
ANR	666843	PrimaryExpression	"""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"""		666561	0					
ANR	666844	Argument	buf_cp50220		666561	1					
ANR	666845	Identifier	buf_cp50220		666561	0					
ANR	666846	Argument	len		666561	2					
ANR	666847	Identifier	len		666561	0					
ANR	666848	ExpressionStatement	"printf ( ""}\\n"" )"	364:1:9041:9054	666561	21	True				
ANR	666849	CallExpression	"printf ( ""}\\n"" )"		666561	0					
ANR	666850	Callee	printf		666561	0					
ANR	666851	Identifier	printf		666561	0					
ANR	666852	ArgumentList	"""}\\n"""		666561	1					
ANR	666853	Argument	"""}\\n"""		666561	0					
ANR	666854	PrimaryExpression	"""}\\n"""		666561	0					
ANR	666855	ReturnType	static void		666561	1					
ANR	666856	Identifier	to_cp50222_visitor		666561	2					
ANR	666857	ParameterList	const struct mappings_entry * entry		666561	3					
ANR	666858	Parameter	const struct mappings_entry * entry	324:31:7886:7919	666561	0	True				
ANR	666859	ParameterType	const struct mappings_entry *		666561	0					
ANR	666860	Identifier	entry		666561	1					
ANR	666861	CFGEntryNode	ENTRY		666561		True				
ANR	666862	CFGExitNode	EXIT		666561		True				
ANR	666863	Symbol	entry -> cp_uni		666561						
ANR	666864	Symbol	c		666561						
ANR	666865	Symbol	* * entry		666561						
ANR	666866	Symbol	buf_cp50220		666561						
ANR	666867	Symbol	utf32_utf8		666561						
ANR	666868	Symbol	* entry -> cp_932		666561						
ANR	666869	Symbol	i		666561						
ANR	666870	Symbol	j		666561						
ANR	666871	Symbol	* c		666561						
ANR	666872	Symbol	entry -> n		666561						
ANR	666873	Symbol	buf_uni		666561						
ANR	666874	Symbol	entry		666561						
ANR	666875	Symbol	* i		666561						
ANR	666876	Symbol	len		666561						
ANR	666877	Symbol	entry -> cp_932		666561						
ANR	666878	Symbol	* buf_uni		666561						
ANR	666879	Symbol	* entry		666561						
ANR	666880	DeclStmt									
ANR	666881	Decl							struct generator_entry	struct generator_entry [ ]	entries
ANR	666882	DeclStmt									
ANR	666883	Decl							const char	const char [ ]	cp932_txt
ANR	666884	Function	main	378:0:9438:11622							
ANR	666885	FunctionDef	"main (int argc , char * * argv)"		666884	0					
ANR	666886	CompoundStatement		379:0:9470:11622	666884	0					
ANR	666887	IdentifierDeclStatement	int retval = 0 ;	380:1:9473:9487	666884	0	True				
ANR	666888	IdentifierDecl	retval = 0		666884	0					
ANR	666889	IdentifierDeclType	int		666884	0					
ANR	666890	Identifier	retval		666884	1					
ANR	666891	AssignmentExpression	retval = 0		666884	2		=			
ANR	666892	Identifier	retval		666884	0					
ANR	666893	PrimaryExpression	0		666884	1					
ANR	666894	IdentifierDeclStatement	FILE * fp ;	381:1:9490:9498	666884	1	True				
ANR	666895	IdentifierDecl	* fp		666884	0					
ANR	666896	IdentifierDeclType	FILE *		666884	0					
ANR	666897	Identifier	fp		666884	1					
ANR	666898	IdentifierDeclStatement	char buf [ 1024 ] ;	382:1:9501:9515	666884	2	True				
ANR	666899	IdentifierDecl	buf [ 1024 ]		666884	0					
ANR	666900	IdentifierDeclType	char [ 1024 ]		666884	0					
ANR	666901	Identifier	buf		666884	1					
ANR	666902	PrimaryExpression	1024		666884	2					
ANR	666903	IdentifierDeclStatement	struct generator_entry * gen ;	383:1:9518:9545	666884	3	True				
ANR	666904	IdentifierDecl	* gen		666884	0					
ANR	666905	IdentifierDeclType	struct generator_entry *		666884	0					
ANR	666906	Identifier	gen		666884	1					
ANR	666907	IdentifierDeclStatement	struct mappings map ;	384:1:9548:9567	666884	4	True				
ANR	666908	IdentifierDecl	map		666884	0					
ANR	666909	IdentifierDeclType	struct mappings		666884	0					
ANR	666910	Identifier	map		666884	1					
ANR	666911	IfStatement	if ( argc <= 1 )		666884	5					
ANR	666912	Condition	argc <= 1	386:5:9575:9583	666884	0	True				
ANR	666913	RelationalExpression	argc <= 1		666884	0		<=			
ANR	666914	Identifier	argc		666884	0					
ANR	666915	PrimaryExpression	1		666884	1					
ANR	666916	CompoundStatement		8:16:115:115	666884	1					
ANR	666917	ExpressionStatement	"fprintf ( stderr , ""usage: %s generator\\n"" , argv [ 0 ] )"	387:2:9590:9639	666884	0	True				
ANR	666918	CallExpression	"fprintf ( stderr , ""usage: %s generator\\n"" , argv [ 0 ] )"		666884	0					
ANR	666919	Callee	fprintf		666884	0					
ANR	666920	Identifier	fprintf		666884	0					
ANR	666921	ArgumentList	stderr		666884	1					
ANR	666922	Argument	stderr		666884	0					
ANR	666923	Identifier	stderr		666884	0					
ANR	666924	Argument	"""usage: %s generator\\n"""		666884	1					
ANR	666925	PrimaryExpression	"""usage: %s generator\\n"""		666884	0					
ANR	666926	Argument	argv [ 0 ]		666884	2					
ANR	666927	ArrayIndexing	argv [ 0 ]		666884	0					
ANR	666928	Identifier	argv		666884	0					
ANR	666929	PrimaryExpression	0		666884	1					
ANR	666930	ReturnStatement	return 255 ;	388:2:9643:9653	666884	1	True				
ANR	666931	PrimaryExpression	255		666884	0					
ANR	666932	ForStatement	for ( gen = entries ; ; ++ gen )		666884	6					
ANR	666933	ForInit	gen = entries ;	391:6:9665:9678	666884	0	True				
ANR	666934	AssignmentExpression	gen = entries		666884	0		=			
ANR	666935	Identifier	gen		666884	0					
ANR	666936	Identifier	entries		666884	1					
ANR	666937	UnaryExpression	++ gen	391:22:9681:9685	666884	1	True				
ANR	666938	IncDec	++		666884	0					
ANR	666939	Identifier	gen		666884	1					
ANR	666940	CompoundStatement		13:29:217:217	666884	2					
ANR	666941	IfStatement	if ( ! gen -> name )		666884	0					
ANR	666942	Condition	! gen -> name	392:6:9696:9705	666884	0	True				
ANR	666943	UnaryOperationExpression	! gen -> name		666884	0					
ANR	666944	UnaryOperator	!		666884	0					
ANR	666945	PtrMemberAccess	gen -> name		666884	1					
ANR	666946	Identifier	gen		666884	0					
ANR	666947	Identifier	name		666884	1					
ANR	666948	CompoundStatement		14:18:237:237	666884	1					
ANR	666949	ExpressionStatement	"fprintf ( stderr , ""Unknown generator: %s\\n"" , argv [ 1 ] )"	393:3:9713:9764	666884	0	True				
ANR	666950	CallExpression	"fprintf ( stderr , ""Unknown generator: %s\\n"" , argv [ 1 ] )"		666884	0					
ANR	666951	Callee	fprintf		666884	0					
ANR	666952	Identifier	fprintf		666884	0					
ANR	666953	ArgumentList	stderr		666884	1					
ANR	666954	Argument	stderr		666884	0					
ANR	666955	Identifier	stderr		666884	0					
ANR	666956	Argument	"""Unknown generator: %s\\n"""		666884	1					
ANR	666957	PrimaryExpression	"""Unknown generator: %s\\n"""		666884	0					
ANR	666958	Argument	argv [ 1 ]		666884	2					
ANR	666959	ArrayIndexing	argv [ 1 ]		666884	0					
ANR	666960	Identifier	argv		666884	0					
ANR	666961	PrimaryExpression	1		666884	1					
ANR	666962	ReturnStatement	return 1 ;	394:3:9769:9777	666884	1	True				
ANR	666963	PrimaryExpression	1		666884	0					
ANR	666964	IfStatement	"if ( strcmp ( gen -> name , argv [ 1 ] ) == 0 )"		666884	1					
ANR	666965	Condition	"strcmp ( gen -> name , argv [ 1 ] ) == 0"	396:6:9789:9819	666884	0	True				
ANR	666966	EqualityExpression	"strcmp ( gen -> name , argv [ 1 ] ) == 0"		666884	0		==			
ANR	666967	CallExpression	"strcmp ( gen -> name , argv [ 1 ] )"		666884	0					
ANR	666968	Callee	strcmp		666884	0					
ANR	666969	Identifier	strcmp		666884	0					
ANR	666970	ArgumentList	gen -> name		666884	1					
ANR	666971	Argument	gen -> name		666884	0					
ANR	666972	PtrMemberAccess	gen -> name		666884	0					
ANR	666973	Identifier	gen		666884	0					
ANR	666974	Identifier	name		666884	1					
ANR	666975	Argument	argv [ 1 ]		666884	1					
ANR	666976	ArrayIndexing	argv [ 1 ]		666884	0					
ANR	666977	Identifier	argv		666884	0					
ANR	666978	PrimaryExpression	1		666884	1					
ANR	666979	PrimaryExpression	0		666884	1					
ANR	666980	BreakStatement	break ;	397:3:9825:9830	666884	1	True				
ANR	666981	ExpressionStatement	"fp = fopen ( cp932_txt , ""r"" )"	400:4:9840:9866	666884	7	True				
ANR	666982	AssignmentExpression	"fp = fopen ( cp932_txt , ""r"" )"		666884	0		=			
ANR	666983	Identifier	fp		666884	0					
ANR	666984	CallExpression	"fopen ( cp932_txt , ""r"" )"		666884	1					
ANR	666985	Callee	fopen		666884	0					
ANR	666986	Identifier	fopen		666884	0					
ANR	666987	ArgumentList	cp932_txt		666884	1					
ANR	666988	Argument	cp932_txt		666884	0					
ANR	666989	Identifier	cp932_txt		666884	0					
ANR	666990	Argument	"""r"""		666884	1					
ANR	666991	PrimaryExpression	"""r"""		666884	0					
ANR	666992	IfStatement	if ( ! fp )		666884	8					
ANR	666993	Condition	! fp	401:5:9873:9875	666884	0	True				
ANR	666994	UnaryOperationExpression	! fp		666884	0					
ANR	666995	UnaryOperator	!		666884	0					
ANR	666996	Identifier	fp		666884	1					
ANR	666997	CompoundStatement		23:10:407:407	666884	1					
ANR	666998	ExpressionStatement	"fprintf ( stderr , ""Failed to open %s\\n"" , cp932_txt )"	402:2:9882:9931	666884	0	True				
ANR	666999	CallExpression	"fprintf ( stderr , ""Failed to open %s\\n"" , cp932_txt )"		666884	0					
ANR	667000	Callee	fprintf		666884	0					
ANR	667001	Identifier	fprintf		666884	0					
ANR	667002	ArgumentList	stderr		666884	1					
ANR	667003	Argument	stderr		666884	0					
ANR	667004	Identifier	stderr		666884	0					
ANR	667005	Argument	"""Failed to open %s\\n"""		666884	1					
ANR	667006	PrimaryExpression	"""Failed to open %s\\n"""		666884	0					
ANR	667007	Argument	cp932_txt		666884	2					
ANR	667008	Identifier	cp932_txt		666884	0					
ANR	667009	ReturnStatement	return 2 ;	403:2:9935:9943	666884	1	True				
ANR	667010	PrimaryExpression	2		666884	0					
ANR	667011	ExpressionStatement	mappings_init ( & map )	406:1:9950:9969	666884	9	True				
ANR	667012	CallExpression	mappings_init ( & map )		666884	0					
ANR	667013	Callee	mappings_init		666884	0					
ANR	667014	Identifier	mappings_init		666884	0					
ANR	667015	ArgumentList	& map		666884	1					
ANR	667016	Argument	& map		666884	0					
ANR	667017	UnaryOperationExpression	& map		666884	0					
ANR	667018	UnaryOperator	&		666884	0					
ANR	667019	Identifier	map		666884	1					
ANR	667020	WhileStatement	"while ( fgets ( buf , sizeof ( buf ) , fp ) )"		666884	10					
ANR	667021	Condition	"fgets ( buf , sizeof ( buf ) , fp )"	408:8:9980:10006	666884	0	True				
ANR	667022	CallExpression	"fgets ( buf , sizeof ( buf ) , fp )"		666884	0					
ANR	667023	Callee	fgets		666884	0					
ANR	667024	Identifier	fgets		666884	0					
ANR	667025	ArgumentList	buf		666884	1					
ANR	667026	Argument	buf		666884	0					
ANR	667027	Identifier	buf		666884	0					
ANR	667028	Argument	sizeof ( buf )		666884	1					
ANR	667029	SizeofExpression	sizeof ( buf )		666884	0					
ANR	667030	Sizeof	sizeof		666884	0					
ANR	667031	SizeofOperand	buf		666884	1					
ANR	667032	Argument	fp		666884	2					
ANR	667033	Identifier	fp		666884	0					
ANR	667034	CompoundStatement		34:2:602:620	666884	1					
ANR	667035	IdentifierDeclStatement	const char * fields [ 16 ] ;	409:2:10013:10035	666884	0	True				
ANR	667036	IdentifierDecl	* fields [ 16 ]		666884	0					
ANR	667037	IdentifierDeclType	const char * [ 16 ]		666884	0					
ANR	667038	Identifier	fields		666884	1					
ANR	667039	PrimaryExpression	16		666884	2					
ANR	667040	IdentifierDeclStatement	char * p = buf ;	410:2:10039:10052	666884	1	True				
ANR	667041	IdentifierDecl	* p = buf		666884	0					
ANR	667042	IdentifierDeclType	char *		666884	0					
ANR	667043	Identifier	p		666884	1					
ANR	667044	AssignmentExpression	* p = buf		666884	2		=			
ANR	667045	Identifier	buf		666884	0					
ANR	667046	Identifier	buf		666884	1					
ANR	667047	IdentifierDeclStatement	int field = 0 ;	411:2:10056:10069	666884	2	True				
ANR	667048	IdentifierDecl	field = 0		666884	0					
ANR	667049	IdentifierDeclType	int		666884	0					
ANR	667050	Identifier	field		666884	1					
ANR	667051	AssignmentExpression	field = 0		666884	2		=			
ANR	667052	Identifier	field		666884	0					
ANR	667053	PrimaryExpression	0		666884	1					
ANR	667054	IdentifierDeclStatement	"int cp_932 , cp_uni ;"	412:2:10073:10091	666884	3	True				
ANR	667055	IdentifierDecl	cp_932		666884	0					
ANR	667056	IdentifierDeclType	int		666884	0					
ANR	667057	Identifier	cp_932		666884	1					
ANR	667058	IdentifierDecl	cp_uni		666884	1					
ANR	667059	IdentifierDeclType	int		666884	0					
ANR	667060	Identifier	cp_uni		666884	1					
ANR	667061	ForStatement	for ( ; ; )		666884	4					
ANR	667062	CompoundStatement		37:3:654:665	666884	0					
ANR	667063	IdentifierDeclStatement	char * q = 0 ;	414:3:10109:10120	666884	0	True				
ANR	667064	IdentifierDecl	* q = 0		666884	0					
ANR	667065	IdentifierDeclType	char *		666884	0					
ANR	667066	Identifier	q		666884	1					
ANR	667067	AssignmentExpression	* q = 0		666884	2		=			
ANR	667068	Identifier	q		666884	0					
ANR	667069	PrimaryExpression	0		666884	1					
ANR	667070	IdentifierDeclStatement	int eol = 0 ;	415:3:10125:10136	666884	1	True				
ANR	667071	IdentifierDecl	eol = 0		666884	0					
ANR	667072	IdentifierDeclType	int		666884	0					
ANR	667073	Identifier	eol		666884	1					
ANR	667074	AssignmentExpression	eol = 0		666884	2		=			
ANR	667075	Identifier	eol		666884	0					
ANR	667076	PrimaryExpression	0		666884	1					
ANR	667077	IfStatement	if ( field >= sizeof ( fields ) / sizeof ( * fields ) )		666884	2					
ANR	667078	Condition	field >= sizeof ( fields ) / sizeof ( * fields )	417:7:10146:10186	666884	0	True				
ANR	667079	RelationalExpression	field >= sizeof ( fields ) / sizeof ( * fields )		666884	0		>=			
ANR	667080	Identifier	field		666884	0					
ANR	667081	MultiplicativeExpression	sizeof ( fields ) / sizeof ( * fields )		666884	1		/			
ANR	667082	SizeofExpression	sizeof ( fields )		666884	0					
ANR	667083	Sizeof	sizeof		666884	0					
ANR	667084	SizeofOperand	fields		666884	1					
ANR	667085	SizeofExpression	sizeof ( * fields )		666884	1					
ANR	667086	Sizeof	sizeof		666884	0					
ANR	667087	UnaryOperationExpression	* fields		666884	1					
ANR	667088	UnaryOperator	*		666884	0					
ANR	667089	Identifier	fields		666884	1					
ANR	667090	CompoundStatement		39:50:718:718	666884	1					
ANR	667091	ExpressionStatement	"fprintf ( stderr , ""Too many fields (incorrect file?)\\n"" )"	418:4:10195:10249	666884	0	True				
ANR	667092	CallExpression	"fprintf ( stderr , ""Too many fields (incorrect file?)\\n"" )"		666884	0					
ANR	667093	Callee	fprintf		666884	0					
ANR	667094	Identifier	fprintf		666884	0					
ANR	667095	ArgumentList	stderr		666884	1					
ANR	667096	Argument	stderr		666884	0					
ANR	667097	Identifier	stderr		666884	0					
ANR	667098	Argument	"""Too many fields (incorrect file?)\\n"""		666884	1					
ANR	667099	PrimaryExpression	"""Too many fields (incorrect file?)\\n"""		666884	0					
ANR	667100	ExpressionStatement	retval = 3	419:4:10255:10265	666884	1	True				
ANR	667101	AssignmentExpression	retval = 3		666884	0		=			
ANR	667102	Identifier	retval		666884	0					
ANR	667103	PrimaryExpression	3		666884	1					
ANR	667104	GotoStatement	goto out ;	420:4:10271:10279	666884	2	True				
ANR	667105	Identifier	out		666884	0					
ANR	667106	ForStatement	for ( ; ; )		666884	3					
ANR	667107	CompoundStatement		45:12:828:828	666884	0					
ANR	667108	IfStatement	if ( * p == '\\0' || * p == '#' || * p == 0x0a )		666884	0					
ANR	667109	Condition	* p == '\\0' || * p == '#' || * p == 0x0a	424:8:10309:10345	666884	0	True				
ANR	667110	OrExpression	* p == '\\0' || * p == '#' || * p == 0x0a		666884	0		||			
ANR	667111	EqualityExpression	* p == '\\0'		666884	0		==			
ANR	667112	UnaryOperationExpression	* p		666884	0					
ANR	667113	UnaryOperator	*		666884	0					
ANR	667114	Identifier	p		666884	1					
ANR	667115	PrimaryExpression	'\\0'		666884	1					
ANR	667116	OrExpression	* p == '#' || * p == 0x0a		666884	1		||			
ANR	667117	EqualityExpression	* p == '#'		666884	0		==			
ANR	667118	UnaryOperationExpression	* p		666884	0					
ANR	667119	UnaryOperator	*		666884	0					
ANR	667120	Identifier	p		666884	1					
ANR	667121	PrimaryExpression	'#'		666884	1					
ANR	667122	EqualityExpression	* p == 0x0a		666884	1		==			
ANR	667123	UnaryOperationExpression	* p		666884	0					
ANR	667124	UnaryOperator	*		666884	0					
ANR	667125	Identifier	p		666884	1					
ANR	667126	PrimaryExpression	0x0a		666884	1					
ANR	667127	CompoundStatement		46:47:877:877	666884	1					
ANR	667128	ExpressionStatement	eol = 1	425:5:10355:10362	666884	0	True				
ANR	667129	AssignmentExpression	eol = 1		666884	0		=			
ANR	667130	Identifier	eol		666884	0					
ANR	667131	PrimaryExpression	1		666884	1					
ANR	667132	BreakStatement	break ;	426:5:10369:10374	666884	1	True				
ANR	667133	ElseStatement	else		666884	0					
ANR	667134	IfStatement	if ( * p != ' ' && * p != '\\t' )		666884	0					
ANR	667135	Condition	* p != ' ' && * p != '\\t'	427:15:10391:10413	666884	0	True				
ANR	667136	AndExpression	* p != ' ' && * p != '\\t'		666884	0		&&			
ANR	667137	EqualityExpression	* p != ' '		666884	0		!=			
ANR	667138	UnaryOperationExpression	* p		666884	0					
ANR	667139	UnaryOperator	*		666884	0					
ANR	667140	Identifier	p		666884	1					
ANR	667141	PrimaryExpression	' '		666884	1					
ANR	667142	EqualityExpression	* p != '\\t'		666884	1		!=			
ANR	667143	UnaryOperationExpression	* p		666884	0					
ANR	667144	UnaryOperator	*		666884	0					
ANR	667145	Identifier	p		666884	1					
ANR	667146	PrimaryExpression	'\\t'		666884	1					
ANR	667147	CompoundStatement		49:40:945:945	666884	1					
ANR	667148	BreakStatement	break ;	428:5:10423:10428	666884	0	True				
ANR	667149	ExpressionStatement	++ p	430:4:10440:10443	666884	1	True				
ANR	667150	UnaryExpression	++ p		666884	0					
ANR	667151	IncDec	++		666884	0					
ANR	667152	Identifier	p		666884	1					
ANR	667153	IfStatement	if ( eol )		666884	4					
ANR	667154	Condition	eol	433:7:10458:10460	666884	0	True				
ANR	667155	Identifier	eol		666884	0					
ANR	667156	BreakStatement	break ;	434:4:10467:10472	666884	1	True				
ANR	667157	ExpressionStatement	q = p	436:3:10478:10483	666884	5	True				
ANR	667158	AssignmentExpression	q = p		666884	0		=			
ANR	667159	Identifier	q		666884	0					
ANR	667160	Identifier	p		666884	1					
ANR	667161	ForStatement	for ( ; ; )		666884	6					
ANR	667162	CompoundStatement		60:12:1027:1027	666884	0					
ANR	667163	IfStatement	if ( * p == '\\0' || * p == '#' || * p == 0x0a )		666884	0					
ANR	667164	Condition	* p == '\\0' || * p == '#' || * p == 0x0a	439:8:10508:10544	666884	0	True				
ANR	667165	OrExpression	* p == '\\0' || * p == '#' || * p == 0x0a		666884	0		||			
ANR	667166	EqualityExpression	* p == '\\0'		666884	0		==			
ANR	667167	UnaryOperationExpression	* p		666884	0					
ANR	667168	UnaryOperator	*		666884	0					
ANR	667169	Identifier	p		666884	1					
ANR	667170	PrimaryExpression	'\\0'		666884	1					
ANR	667171	OrExpression	* p == '#' || * p == 0x0a		666884	1		||			
ANR	667172	EqualityExpression	* p == '#'		666884	0		==			
ANR	667173	UnaryOperationExpression	* p		666884	0					
ANR	667174	UnaryOperator	*		666884	0					
ANR	667175	Identifier	p		666884	1					
ANR	667176	PrimaryExpression	'#'		666884	1					
ANR	667177	EqualityExpression	* p == 0x0a		666884	1		==			
ANR	667178	UnaryOperationExpression	* p		666884	0					
ANR	667179	UnaryOperator	*		666884	0					
ANR	667180	Identifier	p		666884	1					
ANR	667181	PrimaryExpression	0x0a		666884	1					
ANR	667182	CompoundStatement		61:47:1076:1076	666884	1					
ANR	667183	ExpressionStatement	eol = 1	440:5:10554:10561	666884	0	True				
ANR	667184	AssignmentExpression	eol = 1		666884	0		=			
ANR	667185	Identifier	eol		666884	0					
ANR	667186	PrimaryExpression	1		666884	1					
ANR	667187	BreakStatement	break ;	441:5:10568:10573	666884	1	True				
ANR	667188	ElseStatement	else		666884	0					
ANR	667189	IfStatement	if ( * p == ' ' || * p == '\\t' )		666884	0					
ANR	667190	Condition	* p == ' ' || * p == '\\t'	442:15:10590:10612	666884	0	True				
ANR	667191	OrExpression	* p == ' ' || * p == '\\t'		666884	0		||			
ANR	667192	EqualityExpression	* p == ' '		666884	0		==			
ANR	667193	UnaryOperationExpression	* p		666884	0					
ANR	667194	UnaryOperator	*		666884	0					
ANR	667195	Identifier	p		666884	1					
ANR	667196	PrimaryExpression	' '		666884	1					
ANR	667197	EqualityExpression	* p == '\\t'		666884	1		==			
ANR	667198	UnaryOperationExpression	* p		666884	0					
ANR	667199	UnaryOperator	*		666884	0					
ANR	667200	Identifier	p		666884	1					
ANR	667201	PrimaryExpression	'\\t'		666884	1					
ANR	667202	CompoundStatement		64:40:1144:1144	666884	1					
ANR	667203	BreakStatement	break ;	443:5:10622:10627	666884	0	True				
ANR	667204	ExpressionStatement	++ p	445:4:10639:10642	666884	1	True				
ANR	667205	UnaryExpression	++ p		666884	0					
ANR	667206	IncDec	++		666884	0					
ANR	667207	Identifier	p		666884	1					
ANR	667208	ExpressionStatement	* p = '\\0'	448:3:10653:10662	666884	7	True				
ANR	667209	AssignmentExpression	* p = '\\0'		666884	0		=			
ANR	667210	UnaryOperationExpression	* p		666884	0					
ANR	667211	UnaryOperator	*		666884	0					
ANR	667212	Identifier	p		666884	1					
ANR	667213	PrimaryExpression	'\\0'		666884	1					
ANR	667214	ExpressionStatement	fields [ field ++ ] = q	449:3:10667:10686	666884	8	True				
ANR	667215	AssignmentExpression	fields [ field ++ ] = q		666884	0		=			
ANR	667216	ArrayIndexing	fields [ field ++ ]		666884	0					
ANR	667217	Identifier	fields		666884	0					
ANR	667218	PostIncDecOperationExpression	field ++		666884	1					
ANR	667219	Identifier	field		666884	0					
ANR	667220	IncDec	++		666884	1					
ANR	667221	Identifier	q		666884	1					
ANR	667222	IfStatement	if ( eol )		666884	9					
ANR	667223	Condition	eol	451:7:10696:10698	666884	0	True				
ANR	667224	Identifier	eol		666884	0					
ANR	667225	BreakStatement	break ;	452:4:10705:10710	666884	1	True				
ANR	667226	ExpressionStatement	++ p	453:3:10715:10718	666884	10	True				
ANR	667227	UnaryExpression	++ p		666884	0					
ANR	667228	IncDec	++		666884	0					
ANR	667229	Identifier	p		666884	1					
ANR	667230	IfStatement	if ( field == 0 || field == 1 )		666884	5					
ANR	667231	Condition	field == 0 || field == 1	455:6:10730:10753	666884	0	True				
ANR	667232	OrExpression	field == 0 || field == 1		666884	0		||			
ANR	667233	EqualityExpression	field == 0		666884	0		==			
ANR	667234	Identifier	field		666884	0					
ANR	667235	PrimaryExpression	0		666884	1					
ANR	667236	EqualityExpression	field == 1		666884	1		==			
ANR	667237	Identifier	field		666884	0					
ANR	667238	PrimaryExpression	1		666884	1					
ANR	667239	CompoundStatement		77:32:1285:1285	666884	1					
ANR	667240	ContinueStatement	continue ;	456:3:10761:10769	666884	0	True				
ANR	667241	ElseStatement	else		666884	0					
ANR	667242	IfStatement	if ( field != 2 )		666884	0					
ANR	667243	Condition	field != 2	457:13:10784:10793	666884	0	True				
ANR	667244	EqualityExpression	field != 2		666884	0		!=			
ANR	667245	Identifier	field		666884	0					
ANR	667246	PrimaryExpression	2		666884	1					
ANR	667247	CompoundStatement		79:25:1325:1325	666884	1					
ANR	667248	ExpressionStatement	"fprintf ( stderr , ""Unexpected field count (expected 2, got %d)\\n"" , field )"	458:3:10801:10872	666884	0	True				
ANR	667249	CallExpression	"fprintf ( stderr , ""Unexpected field count (expected 2, got %d)\\n"" , field )"		666884	0					
ANR	667250	Callee	fprintf		666884	0					
ANR	667251	Identifier	fprintf		666884	0					
ANR	667252	ArgumentList	stderr		666884	1					
ANR	667253	Argument	stderr		666884	0					
ANR	667254	Identifier	stderr		666884	0					
ANR	667255	Argument	"""Unexpected field count (expected 2, got %d)\\n"""		666884	1					
ANR	667256	PrimaryExpression	"""Unexpected field count (expected 2, got %d)\\n"""		666884	0					
ANR	667257	Argument	field		666884	2					
ANR	667258	Identifier	field		666884	0					
ANR	667259	ExpressionStatement	retval = 3	459:3:10877:10887	666884	1	True				
ANR	667260	AssignmentExpression	retval = 3		666884	0		=			
ANR	667261	Identifier	retval		666884	0					
ANR	667262	PrimaryExpression	3		666884	1					
ANR	667263	GotoStatement	goto out ;	460:3:10892:10900	666884	2	True				
ANR	667264	Identifier	out		666884	0					
ANR	667265	ExpressionStatement	"cp_932 = strtol ( fields [ 0 ] , NULL , 0 )"	462:2:10908:10943	666884	6	True				
ANR	667266	AssignmentExpression	"cp_932 = strtol ( fields [ 0 ] , NULL , 0 )"		666884	0		=			
ANR	667267	Identifier	cp_932		666884	0					
ANR	667268	CallExpression	"strtol ( fields [ 0 ] , NULL , 0 )"		666884	1					
ANR	667269	Callee	strtol		666884	0					
ANR	667270	Identifier	strtol		666884	0					
ANR	667271	ArgumentList	fields [ 0 ]		666884	1					
ANR	667272	Argument	fields [ 0 ]		666884	0					
ANR	667273	ArrayIndexing	fields [ 0 ]		666884	0					
ANR	667274	Identifier	fields		666884	0					
ANR	667275	PrimaryExpression	0		666884	1					
ANR	667276	Argument	NULL		666884	1					
ANR	667277	Identifier	NULL		666884	0					
ANR	667278	Argument	0		666884	2					
ANR	667279	PrimaryExpression	0		666884	0					
ANR	667280	IfStatement	if ( errno == ERANGE || errno == EINVAL )		666884	7					
ANR	667281	Condition	errno == ERANGE || errno == EINVAL	463:6:10951:10984	666884	0	True				
ANR	667282	OrExpression	errno == ERANGE || errno == EINVAL		666884	0		||			
ANR	667283	EqualityExpression	errno == ERANGE		666884	0		==			
ANR	667284	Identifier	errno		666884	0					
ANR	667285	Identifier	ERANGE		666884	1					
ANR	667286	EqualityExpression	errno == EINVAL		666884	1		==			
ANR	667287	Identifier	errno		666884	0					
ANR	667288	Identifier	EINVAL		666884	1					
ANR	667289	CompoundStatement		85:42:1516:1516	666884	1					
ANR	667290	ExpressionStatement	"fprintf ( stderr , ""Malformed field value: %s\\n"" , fields [ 0 ] )"	464:3:10992:11049	666884	0	True				
ANR	667291	CallExpression	"fprintf ( stderr , ""Malformed field value: %s\\n"" , fields [ 0 ] )"		666884	0					
ANR	667292	Callee	fprintf		666884	0					
ANR	667293	Identifier	fprintf		666884	0					
ANR	667294	ArgumentList	stderr		666884	1					
ANR	667295	Argument	stderr		666884	0					
ANR	667296	Identifier	stderr		666884	0					
ANR	667297	Argument	"""Malformed field value: %s\\n"""		666884	1					
ANR	667298	PrimaryExpression	"""Malformed field value: %s\\n"""		666884	0					
ANR	667299	Argument	fields [ 0 ]		666884	2					
ANR	667300	ArrayIndexing	fields [ 0 ]		666884	0					
ANR	667301	Identifier	fields		666884	0					
ANR	667302	PrimaryExpression	0		666884	1					
ANR	667303	ExpressionStatement	retval = 4	465:3:11054:11064	666884	1	True				
ANR	667304	AssignmentExpression	retval = 4		666884	0		=			
ANR	667305	Identifier	retval		666884	0					
ANR	667306	PrimaryExpression	4		666884	1					
ANR	667307	GotoStatement	goto out ;	466:3:11069:11077	666884	2	True				
ANR	667308	Identifier	out		666884	0					
ANR	667309	ExpressionStatement	"cp_uni = strtol ( fields [ 1 ] , NULL , 0 )"	468:2:11085:11120	666884	8	True				
ANR	667310	AssignmentExpression	"cp_uni = strtol ( fields [ 1 ] , NULL , 0 )"		666884	0		=			
ANR	667311	Identifier	cp_uni		666884	0					
ANR	667312	CallExpression	"strtol ( fields [ 1 ] , NULL , 0 )"		666884	1					
ANR	667313	Callee	strtol		666884	0					
ANR	667314	Identifier	strtol		666884	0					
ANR	667315	ArgumentList	fields [ 1 ]		666884	1					
ANR	667316	Argument	fields [ 1 ]		666884	0					
ANR	667317	ArrayIndexing	fields [ 1 ]		666884	0					
ANR	667318	Identifier	fields		666884	0					
ANR	667319	PrimaryExpression	1		666884	1					
ANR	667320	Argument	NULL		666884	1					
ANR	667321	Identifier	NULL		666884	0					
ANR	667322	Argument	0		666884	2					
ANR	667323	PrimaryExpression	0		666884	0					
ANR	667324	IfStatement	if ( errno == ERANGE || errno == EINVAL )		666884	9					
ANR	667325	Condition	errno == ERANGE || errno == EINVAL	469:6:11128:11161	666884	0	True				
ANR	667326	OrExpression	errno == ERANGE || errno == EINVAL		666884	0		||			
ANR	667327	EqualityExpression	errno == ERANGE		666884	0		==			
ANR	667328	Identifier	errno		666884	0					
ANR	667329	Identifier	ERANGE		666884	1					
ANR	667330	EqualityExpression	errno == EINVAL		666884	1		==			
ANR	667331	Identifier	errno		666884	0					
ANR	667332	Identifier	EINVAL		666884	1					
ANR	667333	CompoundStatement		91:42:1693:1693	666884	1					
ANR	667334	ExpressionStatement	"fprintf ( stderr , ""Malformed field value: %s\\n"" , fields [ 1 ] )"	470:3:11169:11226	666884	0	True				
ANR	667335	CallExpression	"fprintf ( stderr , ""Malformed field value: %s\\n"" , fields [ 1 ] )"		666884	0					
ANR	667336	Callee	fprintf		666884	0					
ANR	667337	Identifier	fprintf		666884	0					
ANR	667338	ArgumentList	stderr		666884	1					
ANR	667339	Argument	stderr		666884	0					
ANR	667340	Identifier	stderr		666884	0					
ANR	667341	Argument	"""Malformed field value: %s\\n"""		666884	1					
ANR	667342	PrimaryExpression	"""Malformed field value: %s\\n"""		666884	0					
ANR	667343	Argument	fields [ 1 ]		666884	2					
ANR	667344	ArrayIndexing	fields [ 1 ]		666884	0					
ANR	667345	Identifier	fields		666884	0					
ANR	667346	PrimaryExpression	1		666884	1					
ANR	667347	ExpressionStatement	retval = 4	471:3:11231:11241	666884	1	True				
ANR	667348	AssignmentExpression	retval = 4		666884	0		=			
ANR	667349	Identifier	retval		666884	0					
ANR	667350	PrimaryExpression	4		666884	1					
ANR	667351	GotoStatement	goto out ;	472:3:11246:11254	666884	2	True				
ANR	667352	Identifier	out		666884	0					
ANR	667353	IfStatement	"if ( mappings_add ( & map , cp_uni , cp_932 ) )"		666884	10					
ANR	667354	Condition	"mappings_add ( & map , cp_uni , cp_932 )"	475:6:11267:11300	666884	0	True				
ANR	667355	CallExpression	"mappings_add ( & map , cp_uni , cp_932 )"		666884	0					
ANR	667356	Callee	mappings_add		666884	0					
ANR	667357	Identifier	mappings_add		666884	0					
ANR	667358	ArgumentList	& map		666884	1					
ANR	667359	Argument	& map		666884	0					
ANR	667360	UnaryOperationExpression	& map		666884	0					
ANR	667361	UnaryOperator	&		666884	0					
ANR	667362	Identifier	map		666884	1					
ANR	667363	Argument	cp_uni		666884	1					
ANR	667364	Identifier	cp_uni		666884	0					
ANR	667365	Argument	cp_932		666884	2					
ANR	667366	Identifier	cp_932		666884	0					
ANR	667367	CompoundStatement		97:42:1832:1832	666884	1					
ANR	667368	ExpressionStatement	"fprintf ( stderr , ""Too many mappings to the same Unicode codepoint (U+%06X)\\n"" , cp_uni )"	476:3:11308:11393	666884	0	True				
ANR	667369	CallExpression	"fprintf ( stderr , ""Too many mappings to the same Unicode codepoint (U+%06X)\\n"" , cp_uni )"		666884	0					
ANR	667370	Callee	fprintf		666884	0					
ANR	667371	Identifier	fprintf		666884	0					
ANR	667372	ArgumentList	stderr		666884	1					
ANR	667373	Argument	stderr		666884	0					
ANR	667374	Identifier	stderr		666884	0					
ANR	667375	Argument	"""Too many mappings to the same Unicode codepoint (U+%06X)\\n"""		666884	1					
ANR	667376	PrimaryExpression	"""Too many mappings to the same Unicode codepoint (U+%06X)\\n"""		666884	0					
ANR	667377	Argument	cp_uni		666884	2					
ANR	667378	Identifier	cp_uni		666884	0					
ANR	667379	ExpressionStatement	retval = 4	477:3:11398:11408	666884	1	True				
ANR	667380	AssignmentExpression	retval = 4		666884	0		=			
ANR	667381	Identifier	retval		666884	0					
ANR	667382	PrimaryExpression	4		666884	1					
ANR	667383	GotoStatement	goto out ;	478:3:11413:11421	666884	2	True				
ANR	667384	Identifier	out		666884	0					
ANR	667385	CompoundStatement		105:2:1965:1973	666884	11					
ANR	667386	IdentifierDeclStatement	size_t i ;	483:2:11436:11444	666884	0	True				
ANR	667387	IdentifierDecl	i		666884	0					
ANR	667388	IdentifierDeclType	size_t		666884	0					
ANR	667389	Identifier	i		666884	1					
ANR	667390	ExpressionStatement	"printf ( ""%s"" , gen -> prologue )"	484:2:11448:11475	666884	1	True				
ANR	667391	CallExpression	"printf ( ""%s"" , gen -> prologue )"		666884	0					
ANR	667392	Callee	printf		666884	0					
ANR	667393	Identifier	printf		666884	0					
ANR	667394	ArgumentList	"""%s"""		666884	1					
ANR	667395	Argument	"""%s"""		666884	0					
ANR	667396	PrimaryExpression	"""%s"""		666884	0					
ANR	667397	Argument	gen -> prologue		666884	1					
ANR	667398	PtrMemberAccess	gen -> prologue		666884	0					
ANR	667399	Identifier	gen		666884	0					
ANR	667400	Identifier	prologue		666884	1					
ANR	667401	ForStatement	for ( i = 0 ; i < map . n ; ++ i )		666884	2					
ANR	667402	ForInit	i = 0 ;	485:7:11484:11489	666884	0	True				
ANR	667403	AssignmentExpression	i = 0		666884	0		=			
ANR	667404	Identifier	i		666884	0					
ANR	667405	PrimaryExpression	0		666884	1					
ANR	667406	Condition	i < map . n	485:14:11491:11499	666884	1	True				
ANR	667407	RelationalExpression	i < map . n		666884	0		<			
ANR	667408	Identifier	i		666884	0					
ANR	667409	MemberAccess	map . n		666884	1					
ANR	667410	Identifier	map		666884	0					
ANR	667411	Identifier	n		666884	1					
ANR	667412	UnaryExpression	++ i	485:25:11502:11504	666884	2	True				
ANR	667413	IncDec	++		666884	0					
ANR	667414	Identifier	i		666884	1					
ANR	667415	ExpressionStatement	gen -> visitor ( & map . entries [ i ] )	486:3:11510:11539	666884	3	True				
ANR	667416	CallExpression	gen -> visitor ( & map . entries [ i ] )		666884	0					
ANR	667417	Callee	gen -> visitor		666884	0					
ANR	667418	PtrMemberAccess	gen -> visitor		666884	0					
ANR	667419	Identifier	gen		666884	0					
ANR	667420	Identifier	visitor		666884	1					
ANR	667421	ArgumentList	& map . entries [ i ]		666884	1					
ANR	667422	Argument	& map . entries [ i ]		666884	0					
ANR	667423	UnaryOperationExpression	& map . entries [ i ]		666884	0					
ANR	667424	UnaryOperator	&		666884	0					
ANR	667425	ArrayIndexing	map . entries [ i ]		666884	1					
ANR	667426	MemberAccess	map . entries		666884	0					
ANR	667427	Identifier	map		666884	0					
ANR	667428	Identifier	entries		666884	1					
ANR	667429	Identifier	i		666884	1					
ANR	667430	ExpressionStatement	"printf ( ""%s"" , gen -> epilogue )"	487:2:11543:11570	666884	3	True				
ANR	667431	CallExpression	"printf ( ""%s"" , gen -> epilogue )"		666884	0					
ANR	667432	Callee	printf		666884	0					
ANR	667433	Identifier	printf		666884	0					
ANR	667434	ArgumentList	"""%s"""		666884	1					
ANR	667435	Argument	"""%s"""		666884	0					
ANR	667436	PrimaryExpression	"""%s"""		666884	0					
ANR	667437	Argument	gen -> epilogue		666884	1					
ANR	667438	PtrMemberAccess	gen -> epilogue		666884	0					
ANR	667439	Identifier	gen		666884	0					
ANR	667440	Identifier	epilogue		666884	1					
ANR	667441	Label	out :	490:0:11576:11579	666884	12	True				
ANR	667442	Identifier	out		666884	0					
ANR	667443	ExpressionStatement	mappings_destroy ( & map )	491:1:11582:11604	666884	13	True				
ANR	667444	CallExpression	mappings_destroy ( & map )		666884	0					
ANR	667445	Callee	mappings_destroy		666884	0					
ANR	667446	Identifier	mappings_destroy		666884	0					
ANR	667447	ArgumentList	& map		666884	1					
ANR	667448	Argument	& map		666884	0					
ANR	667449	UnaryOperationExpression	& map		666884	0					
ANR	667450	UnaryOperator	&		666884	0					
ANR	667451	Identifier	map		666884	1					
ANR	667452	ReturnStatement	return retval ;	492:1:11607:11620	666884	14	True				
ANR	667453	Identifier	retval		666884	0					
ANR	667454	ReturnType	int		666884	1					
ANR	667455	Identifier	main		666884	2					
ANR	667456	ParameterList	"int argc , char * * argv"		666884	3					
ANR	667457	Parameter	int argc	378:9:9447:9454	666884	0	True				
ANR	667458	ParameterType	int		666884	0					
ANR	667459	Identifier	argc		666884	1					
ANR	667460	Parameter	char * * argv	378:19:9457:9467	666884	1	True				
ANR	667461	ParameterType	char * *		666884	0					
ANR	667462	Identifier	argv		666884	1					
ANR	667463	CFGEntryNode	ENTRY		666884		True				
ANR	667464	CFGExitNode	EXIT		666884		True				
ANR	667465	InfiniteForNode	true		666884		True				
ANR	667466	InfiniteForNode	true		666884		True				
ANR	667467	InfiniteForNode	true		666884		True				
ANR	667468	InfiniteForNode	true		666884		True				
ANR	667469	Symbol	cp_932		666884						
ANR	667470	Symbol	gen -> epilogue		666884						
ANR	667471	Symbol	eol		666884						
ANR	667472	Symbol	* gen		666884						
ANR	667473	Symbol	& map		666884						
ANR	667474	Symbol	fp		666884						
ANR	667475	Symbol	* argv		666884						
ANR	667476	Symbol	gen -> name		666884						
ANR	667477	Symbol	argv		666884						
ANR	667478	Symbol	cp932_txt		666884						
ANR	667479	Symbol	fgets		666884						
ANR	667480	Symbol	gen		666884						
ANR	667481	Symbol	* fields		666884						
ANR	667482	Symbol	strtol		666884						
ANR	667483	Symbol	ERANGE		666884						
ANR	667484	Symbol	cp_uni		666884						
ANR	667485	Symbol	map		666884						
ANR	667486	Symbol	argc		666884						
ANR	667487	Symbol	strcmp		666884						
ANR	667488	Symbol	fopen		666884						
ANR	667489	Symbol	errno		666884						
ANR	667490	Symbol	NULL		666884						
ANR	667491	Symbol	gen -> prologue		666884						
ANR	667492	Symbol	i		666884						
ANR	667493	Symbol	stderr		666884						
ANR	667494	Symbol	mappings_add		666884						
ANR	667495	Symbol	retval		666884						
ANR	667496	Symbol	p		666884						
ANR	667497	Symbol	EINVAL		666884						
ANR	667498	Symbol	q		666884						
ANR	667499	Symbol	buf		666884						
ANR	667500	Symbol	entries		666884						
ANR	667501	Symbol	map . entries		666884						
ANR	667502	Symbol	field		666884						
ANR	667503	Symbol	* p		666884						
ANR	667504	Symbol	fields		666884						
ANR	667505	Symbol	map . n		666884						
