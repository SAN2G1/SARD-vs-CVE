command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	678642	File	data/converged/CVE-2017-11142_php-src/ext_mbstring_oniguruma_enc_iso8859_15.c								
ANR	678643	DeclStmt									
ANR	678644	Decl							const UChar	const UChar [ 256 ]	EncISO_8859_15_ToLowerCaseTable
ANR	678645	DeclStmt									
ANR	678646	Decl							const unsigned short	const unsigned short [ 256 ]	EncISO_8859_15_CtypeTable
ANR	678647	DeclStmt									
ANR	678648	Decl							const UChar	const UChar *	p
ANR	678649	Function	is_mbc_ambiguous	125:0:6574:7132							
ANR	678650	FunctionDef	"is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		678649	0					
ANR	678651	CompoundStatement		128:0:6664:7132	678649	0					
ANR	678652	IdentifierDeclStatement	int v ;	129:2:6668:6673	678649	0	True				
ANR	678653	IdentifierDecl	v		678649	0					
ANR	678654	IdentifierDeclType	int		678649	0					
ANR	678655	Identifier	v		678649	1					
ANR	678656	IdentifierDeclStatement	const UChar * p = * pp ;	130:2:6677:6697	678649	1	True				
ANR	678657	IdentifierDecl	* p = * pp		678649	0					
ANR	678658	IdentifierDeclType	const UChar *		678649	0					
ANR	678659	Identifier	p		678649	1					
ANR	678660	AssignmentExpression	* p = * pp		678649	2		=			
ANR	678661	Identifier	p		678649	0					
ANR	678662	UnaryOperationExpression	* pp		678649	1					
ANR	678663	UnaryOperator	*		678649	0					
ANR	678664	Identifier	pp		678649	1					
ANR	678665	IfStatement	if ( * p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0 )		678649	2					
ANR	678666	Condition	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0	132:6:6706:6770	678649	0	True				
ANR	678667	AndExpression	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		678649	0		&&			
ANR	678668	EqualityExpression	* p == 0xdf		678649	0		==			
ANR	678669	UnaryOperationExpression	* p		678649	0					
ANR	678670	UnaryOperator	*		678649	0					
ANR	678671	Identifier	p		678649	1					
ANR	678672	PrimaryExpression	0xdf		678649	1					
ANR	678673	EqualityExpression	( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		678649	1		!=			
ANR	678674	BitAndExpression	flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		678649	0		&			
ANR	678675	Identifier	flag		678649	0					
ANR	678676	Identifier	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		678649	1					
ANR	678677	PrimaryExpression	0		678649	1					
ANR	678678	CompoundStatement		5:73:108:108	678649	1					
ANR	678679	ExpressionStatement	( * pp ) ++	133:4:6779:6786	678649	0	True				
ANR	678680	PostIncDecOperationExpression	( * pp ) ++		678649	0					
ANR	678681	UnaryOperationExpression	* pp		678649	0					
ANR	678682	UnaryOperator	*		678649	0					
ANR	678683	Identifier	pp		678649	1					
ANR	678684	IncDec	++		678649	1					
ANR	678685	ReturnStatement	return TRUE ;	134:4:6792:6803	678649	1	True				
ANR	678686	Identifier	TRUE		678649	0					
ANR	678687	ExpressionStatement	( * pp ) ++	137:2:6812:6819	678649	3	True				
ANR	678688	PostIncDecOperationExpression	( * pp ) ++		678649	0					
ANR	678689	UnaryOperationExpression	* pp		678649	0					
ANR	678690	UnaryOperator	*		678649	0					
ANR	678691	Identifier	pp		678649	1					
ANR	678692	IncDec	++		678649	1					
ANR	678693	ExpressionStatement	v = ( EncISO_8859_15_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )	138:2:6823:6896	678649	4	True				
ANR	678694	AssignmentExpression	v = ( EncISO_8859_15_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )		678649	0		=			
ANR	678695	Identifier	v		678649	0					
ANR	678696	BitAndExpression	EncISO_8859_15_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER )		678649	1		&			
ANR	678697	ArrayIndexing	EncISO_8859_15_CtypeTable [ * p ]		678649	0					
ANR	678698	Identifier	EncISO_8859_15_CtypeTable		678649	0					
ANR	678699	UnaryOperationExpression	* p		678649	1					
ANR	678700	UnaryOperator	*		678649	0					
ANR	678701	Identifier	p		678649	1					
ANR	678702	InclusiveOrExpression	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		678649	1		|			
ANR	678703	Identifier	BIT_CTYPE_UPPER		678649	0					
ANR	678704	Identifier	BIT_CTYPE_LOWER		678649	1					
ANR	678705	IfStatement	if ( ( v | BIT_CTYPE_LOWER ) != 0 )		678649	5					
ANR	678706	Condition	( v | BIT_CTYPE_LOWER ) != 0	139:6:6904:6929	678649	0	True				
ANR	678707	EqualityExpression	( v | BIT_CTYPE_LOWER ) != 0		678649	0		!=			
ANR	678708	InclusiveOrExpression	v | BIT_CTYPE_LOWER		678649	0		|			
ANR	678709	Identifier	v		678649	0					
ANR	678710	Identifier	BIT_CTYPE_LOWER		678649	1					
ANR	678711	PrimaryExpression	0		678649	1					
ANR	678712	CompoundStatement		12:34:267:267	678649	1					
ANR	678713	IfStatement	if ( * p == 0xaa || * p == 0xb5 || * p == 0xba )		678649	0					
ANR	678714	Condition	* p == 0xaa || * p == 0xb5 || * p == 0xba	141:8:7005:7042	678649	0	True				
ANR	678715	OrExpression	* p == 0xaa || * p == 0xb5 || * p == 0xba		678649	0		||			
ANR	678716	EqualityExpression	* p == 0xaa		678649	0		==			
ANR	678717	UnaryOperationExpression	* p		678649	0					
ANR	678718	UnaryOperator	*		678649	0					
ANR	678719	Identifier	p		678649	1					
ANR	678720	PrimaryExpression	0xaa		678649	1					
ANR	678721	OrExpression	* p == 0xb5 || * p == 0xba		678649	1		||			
ANR	678722	EqualityExpression	* p == 0xb5		678649	0		==			
ANR	678723	UnaryOperationExpression	* p		678649	0					
ANR	678724	UnaryOperator	*		678649	0					
ANR	678725	Identifier	p		678649	1					
ANR	678726	PrimaryExpression	0xb5		678649	1					
ANR	678727	EqualityExpression	* p == 0xba		678649	1		==			
ANR	678728	UnaryOperationExpression	* p		678649	0					
ANR	678729	UnaryOperator	*		678649	0					
ANR	678730	Identifier	p		678649	1					
ANR	678731	PrimaryExpression	0xba		678649	1					
ANR	678732	ReturnStatement	return FALSE ;	142:6:7051:7063	678649	1	True				
ANR	678733	Identifier	FALSE		678649	0					
ANR	678734	ElseStatement	else		678649	0					
ANR	678735	ReturnStatement	return TRUE ;	144:6:7080:7091	678649	0	True				
ANR	678736	Identifier	TRUE		678649	0					
ANR	678737	ReturnStatement	return ( v != 0 ? TRUE : FALSE ) ;	147:2:7100:7130	678649	6	True				
ANR	678738	ConditionalExpression	v != 0 ? TRUE : FALSE		678649	0					
ANR	678739	Condition	v != 0		678649	0					
ANR	678740	EqualityExpression	v != 0		678649	0		!=			
ANR	678741	Identifier	v		678649	0					
ANR	678742	PrimaryExpression	0		678649	1					
ANR	678743	Identifier	TRUE		678649	1					
ANR	678744	Identifier	FALSE		678649	2					
ANR	678745	ReturnType	static int		678649	1					
ANR	678746	Identifier	is_mbc_ambiguous		678649	2					
ANR	678747	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		678649	3					
ANR	678748	Parameter	OnigCaseFoldType flag	126:17:6602:6622	678649	0	True				
ANR	678749	ParameterType	OnigCaseFoldType		678649	0					
ANR	678750	Identifier	flag		678649	1					
ANR	678751	Parameter	const UChar * * pp	127:3:6628:6643	678649	1	True				
ANR	678752	ParameterType	const UChar * *		678649	0					
ANR	678753	Identifier	pp		678649	1					
ANR	678754	Parameter	const UChar * end	127:21:6646:6661	678649	2	True				
ANR	678755	ParameterType	const UChar *		678649	0					
ANR	678756	Identifier	end		678649	1					
ANR	678757	CFGEntryNode	ENTRY		678649		True				
ANR	678758	CFGExitNode	EXIT		678649		True				
ANR	678759	Symbol	pp		678649						
ANR	678760	Symbol	flag		678649						
ANR	678761	Symbol	* EncISO_8859_15_CtypeTable		678649						
ANR	678762	Symbol	* pp		678649						
ANR	678763	Symbol	TRUE		678649						
ANR	678764	Symbol	p		678649						
ANR	678765	Symbol	EncISO_8859_15_CtypeTable		678649						
ANR	678766	Symbol	v		678649						
ANR	678767	Symbol	BIT_CTYPE_LOWER		678649						
ANR	678768	Symbol	end		678649						
ANR	678769	Symbol	* p		678649						
ANR	678770	Symbol	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		678649						
ANR	678771	Symbol	BIT_CTYPE_UPPER		678649						
ANR	678772	Symbol	FALSE		678649						
ANR	678773	Symbol	* * p		678649						
ANR	678774	Function	is_code_ctype	151:0:7142:7302							
ANR	678775	FunctionDef	"is_code_ctype (OnigCodePoint code , unsigned int ctype)"		678774	0					
ANR	678776	CompoundStatement		153:0:7207:7302	678774	0					
ANR	678777	IfStatement	if ( code < 256 )		678774	0					
ANR	678778	Condition	code < 256	154:6:7215:7224	678774	0	True				
ANR	678779	RelationalExpression	code < 256		678774	0		<			
ANR	678780	Identifier	code		678774	0					
ANR	678781	PrimaryExpression	256		678774	1					
ANR	678782	ReturnStatement	"return ENC_IS_ISO_8859_15_CTYPE ( code , ctype ) ;"	155:4:7231:7275	678774	1	True				
ANR	678783	CallExpression	"ENC_IS_ISO_8859_15_CTYPE ( code , ctype )"		678774	0					
ANR	678784	Callee	ENC_IS_ISO_8859_15_CTYPE		678774	0					
ANR	678785	Identifier	ENC_IS_ISO_8859_15_CTYPE		678774	0					
ANR	678786	ArgumentList	code		678774	1					
ANR	678787	Argument	code		678774	0					
ANR	678788	Identifier	code		678774	0					
ANR	678789	Argument	ctype		678774	1					
ANR	678790	Identifier	ctype		678774	0					
ANR	678791	ElseStatement	else		678774	0					
ANR	678792	ReturnStatement	return FALSE ;	157:4:7288:7300	678774	0	True				
ANR	678793	Identifier	FALSE		678774	0					
ANR	678794	ReturnType	static int		678774	1					
ANR	678795	Identifier	is_code_ctype		678774	2					
ANR	678796	ParameterList	"OnigCodePoint code , unsigned int ctype"		678774	3					
ANR	678797	Parameter	OnigCodePoint code	152:14:7167:7184	678774	0	True				
ANR	678798	ParameterType	OnigCodePoint		678774	0					
ANR	678799	Identifier	code		678774	1					
ANR	678800	Parameter	unsigned int ctype	152:34:7187:7204	678774	1	True				
ANR	678801	ParameterType	unsigned int		678774	0					
ANR	678802	Identifier	ctype		678774	1					
ANR	678803	CFGEntryNode	ENTRY		678774		True				
ANR	678804	CFGExitNode	EXIT		678774		True				
ANR	678805	Symbol	code		678774						
ANR	678806	Symbol	ctype		678774						
ANR	678807	Symbol	ENC_IS_ISO_8859_15_CTYPE		678774						
ANR	678808	Symbol	FALSE		678774						
ANR	678809	DeclStmt									
ANR	678810	Decl							const OnigPairCaseFoldCodes	const OnigPairCaseFoldCodes [ ]	CaseFoldMap
ANR	678811	Function	apply_all_case_fold	200:0:7942:8198							
ANR	678812	FunctionDef	"apply_all_case_fold (OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg)"		678811	0					
ANR	678813	CompoundStatement		203:0:8041:8198	678811	0					
ANR	678814	ReturnStatement	"return onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg ) ;"	204:2:8045:8196	678811	0	True				
ANR	678815	CallExpression	"onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg )"		678811	0					
ANR	678816	Callee	onigenc_apply_all_case_fold_with_map		678811	0					
ANR	678817	Identifier	onigenc_apply_all_case_fold_with_map		678811	0					
ANR	678818	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		678811	1					
ANR	678819	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		678811	0					
ANR	678820	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		678811	0		/			
ANR	678821	SizeofExpression	sizeof ( CaseFoldMap )		678811	0					
ANR	678822	Sizeof	sizeof		678811	0					
ANR	678823	SizeofOperand	CaseFoldMap		678811	1					
ANR	678824	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		678811	1					
ANR	678825	Sizeof	sizeof		678811	0					
ANR	678826	SizeofOperand	OnigPairCaseFoldCodes		678811	1					
ANR	678827	Argument	CaseFoldMap		678811	1					
ANR	678828	Identifier	CaseFoldMap		678811	0					
ANR	678829	Argument	1		678811	2					
ANR	678830	PrimaryExpression	1		678811	0					
ANR	678831	Argument	flag		678811	3					
ANR	678832	Identifier	flag		678811	0					
ANR	678833	Argument	f		678811	4					
ANR	678834	Identifier	f		678811	0					
ANR	678835	Argument	arg		678811	5					
ANR	678836	Identifier	arg		678811	0					
ANR	678837	ReturnType	static int		678811	1					
ANR	678838	Identifier	apply_all_case_fold		678811	2					
ANR	678839	ParameterList	"OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg"		678811	3					
ANR	678840	Parameter	OnigCaseFoldType flag	201:20:7973:7993	678811	0	True				
ANR	678841	ParameterType	OnigCaseFoldType		678811	0					
ANR	678842	Identifier	flag		678811	1					
ANR	678843	Parameter	OnigApplyAllCaseFoldFunc f	202:6:8002:8027	678811	1	True				
ANR	678844	ParameterType	OnigApplyAllCaseFoldFunc		678811	0					
ANR	678845	Identifier	f		678811	1					
ANR	678846	Parameter	void * arg	202:34:8030:8038	678811	2	True				
ANR	678847	ParameterType	void *		678811	0					
ANR	678848	Identifier	arg		678811	1					
ANR	678849	CFGEntryNode	ENTRY		678811		True				
ANR	678850	CFGExitNode	EXIT		678811		True				
ANR	678851	Symbol	flag		678811						
ANR	678852	Symbol	f		678811						
ANR	678853	Symbol	arg		678811						
ANR	678854	Symbol	CaseFoldMap		678811						
ANR	678855	Symbol	onigenc_apply_all_case_fold_with_map		678811						
ANR	678856	Function	get_case_fold_codes_by_str	209:0:8201:8495							
ANR	678857	FunctionDef	"get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		678856	0					
ANR	678858	CompoundStatement		212:0:8338:8495	678856	0					
ANR	678859	ReturnStatement	"return onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items ) ;"	213:2:8342:8493	678856	0	True				
ANR	678860	CallExpression	"onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items )"		678856	0					
ANR	678861	Callee	onigenc_get_case_fold_codes_by_str_with_map		678856	0					
ANR	678862	Identifier	onigenc_get_case_fold_codes_by_str_with_map		678856	0					
ANR	678863	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		678856	1					
ANR	678864	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		678856	0					
ANR	678865	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		678856	0		/			
ANR	678866	SizeofExpression	sizeof ( CaseFoldMap )		678856	0					
ANR	678867	Sizeof	sizeof		678856	0					
ANR	678868	SizeofOperand	CaseFoldMap		678856	1					
ANR	678869	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		678856	1					
ANR	678870	Sizeof	sizeof		678856	0					
ANR	678871	SizeofOperand	OnigPairCaseFoldCodes		678856	1					
ANR	678872	Argument	CaseFoldMap		678856	1					
ANR	678873	Identifier	CaseFoldMap		678856	0					
ANR	678874	Argument	1		678856	2					
ANR	678875	PrimaryExpression	1		678856	0					
ANR	678876	Argument	flag		678856	3					
ANR	678877	Identifier	flag		678856	0					
ANR	678878	Argument	p		678856	4					
ANR	678879	Identifier	p		678856	0					
ANR	678880	Argument	end		678856	5					
ANR	678881	Identifier	end		678856	0					
ANR	678882	Argument	items		678856	6					
ANR	678883	Identifier	items		678856	0					
ANR	678884	ReturnType	static int		678856	1					
ANR	678885	Identifier	get_case_fold_codes_by_str		678856	2					
ANR	678886	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		678856	3					
ANR	678887	Parameter	OnigCaseFoldType flag	210:27:8239:8259	678856	0	True				
ANR	678888	ParameterType	OnigCaseFoldType		678856	0					
ANR	678889	Identifier	flag		678856	1					
ANR	678890	Parameter	const OnigUChar * p	211:4:8266:8283	678856	1	True				
ANR	678891	ParameterType	const OnigUChar *		678856	0					
ANR	678892	Identifier	p		678856	1					
ANR	678893	Parameter	const OnigUChar * end	211:24:8286:8305	678856	2	True				
ANR	678894	ParameterType	const OnigUChar *		678856	0					
ANR	678895	Identifier	end		678856	1					
ANR	678896	Parameter	OnigCaseFoldCodeItem items [ ]	211:46:8308:8335	678856	3	True				
ANR	678897	ParameterType	OnigCaseFoldCodeItem [ ]		678856	0					
ANR	678898	Identifier	items		678856	1					
ANR	678899	CFGEntryNode	ENTRY		678856		True				
ANR	678900	CFGExitNode	EXIT		678856		True				
ANR	678901	Symbol	p		678856						
ANR	678902	Symbol	flag		678856						
ANR	678903	Symbol	end		678856						
ANR	678904	Symbol	CaseFoldMap		678856						
ANR	678905	Symbol	onigenc_get_case_fold_codes_by_str_with_map		678856						
ANR	678906	Symbol	items		678856						
ANR	678907	DeclStmt									
ANR	678908	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingISO_8859_15
