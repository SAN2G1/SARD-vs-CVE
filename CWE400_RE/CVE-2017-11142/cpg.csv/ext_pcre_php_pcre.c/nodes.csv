command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1145549	File	data/converged/CVE-2017-11142_php-src/ext_pcre_php_pcre.c								
ANR	1145550	ClassDef	<unnamed>	51:0:1863:2044							
ANR	1145551	Function	pcre_handle_exec_error	64:0:2085:2648							
ANR	1145552	FunctionDef	pcre_handle_exec_error (int pcre_code TSRMLS_DC)		1145551	0					
ANR	1145553	CompoundStatement		65:0:2155:2648	1145551	0					
ANR	1145554	IdentifierDeclStatement	int preg_code = 0 ;	66:1:2158:2175	1145551	0	True				
ANR	1145555	IdentifierDecl	preg_code = 0		1145551	0					
ANR	1145556	IdentifierDeclType	int		1145551	0					
ANR	1145557	Identifier	preg_code		1145551	1					
ANR	1145558	AssignmentExpression	preg_code = 0		1145551	2		=			
ANR	1145559	Identifier	preg_code		1145551	0					
ANR	1145560	PrimaryExpression	0		1145551	1					
ANR	1145561	SwitchStatement	switch ( pcre_code )		1145551	1					
ANR	1145562	Condition	pcre_code	68:9:2187:2195	1145551	0	True				
ANR	1145563	Identifier	pcre_code		1145551	0					
ANR	1145564	CompoundStatement		4:20:42:42	1145551	1					
ANR	1145565	Label	case PCRE_ERROR_MATCHLIMIT :	69:2:2202:2228	1145551	0	True				
ANR	1145566	Identifier	PCRE_ERROR_MATCHLIMIT		1145551	0					
ANR	1145567	ExpressionStatement	preg_code = PHP_PCRE_BACKTRACK_LIMIT_ERROR	70:3:2233:2275	1145551	1	True				
ANR	1145568	AssignmentExpression	preg_code = PHP_PCRE_BACKTRACK_LIMIT_ERROR		1145551	0		=			
ANR	1145569	Identifier	preg_code		1145551	0					
ANR	1145570	Identifier	PHP_PCRE_BACKTRACK_LIMIT_ERROR		1145551	1					
ANR	1145571	BreakStatement	break ;	71:3:2280:2285	1145551	2	True				
ANR	1145572	Label	case PCRE_ERROR_RECURSIONLIMIT :	73:2:2290:2320	1145551	3	True				
ANR	1145573	Identifier	PCRE_ERROR_RECURSIONLIMIT		1145551	0					
ANR	1145574	ExpressionStatement	preg_code = PHP_PCRE_RECURSION_LIMIT_ERROR	74:3:2325:2367	1145551	4	True				
ANR	1145575	AssignmentExpression	preg_code = PHP_PCRE_RECURSION_LIMIT_ERROR		1145551	0		=			
ANR	1145576	Identifier	preg_code		1145551	0					
ANR	1145577	Identifier	PHP_PCRE_RECURSION_LIMIT_ERROR		1145551	1					
ANR	1145578	BreakStatement	break ;	75:3:2372:2377	1145551	5	True				
ANR	1145579	Label	case PCRE_ERROR_BADUTF8 :	77:2:2382:2405	1145551	6	True				
ANR	1145580	Identifier	PCRE_ERROR_BADUTF8		1145551	0					
ANR	1145581	ExpressionStatement	preg_code = PHP_PCRE_BAD_UTF8_ERROR	78:3:2410:2445	1145551	7	True				
ANR	1145582	AssignmentExpression	preg_code = PHP_PCRE_BAD_UTF8_ERROR		1145551	0		=			
ANR	1145583	Identifier	preg_code		1145551	0					
ANR	1145584	Identifier	PHP_PCRE_BAD_UTF8_ERROR		1145551	1					
ANR	1145585	BreakStatement	break ;	79:3:2450:2455	1145551	8	True				
ANR	1145586	Label	case PCRE_ERROR_BADUTF8_OFFSET :	81:2:2460:2490	1145551	9	True				
ANR	1145587	Identifier	PCRE_ERROR_BADUTF8_OFFSET		1145551	0					
ANR	1145588	ExpressionStatement	preg_code = PHP_PCRE_BAD_UTF8_OFFSET_ERROR	82:3:2495:2537	1145551	10	True				
ANR	1145589	AssignmentExpression	preg_code = PHP_PCRE_BAD_UTF8_OFFSET_ERROR		1145551	0		=			
ANR	1145590	Identifier	preg_code		1145551	0					
ANR	1145591	Identifier	PHP_PCRE_BAD_UTF8_OFFSET_ERROR		1145551	1					
ANR	1145592	BreakStatement	break ;	83:3:2542:2547	1145551	11	True				
ANR	1145593	Label	default :	85:2:2552:2559	1145551	12	True				
ANR	1145594	Identifier	default		1145551	0					
ANR	1145595	ExpressionStatement	preg_code = PHP_PCRE_INTERNAL_ERROR	86:3:2564:2599	1145551	13	True				
ANR	1145596	AssignmentExpression	preg_code = PHP_PCRE_INTERNAL_ERROR		1145551	0		=			
ANR	1145597	Identifier	preg_code		1145551	0					
ANR	1145598	Identifier	PHP_PCRE_INTERNAL_ERROR		1145551	1					
ANR	1145599	BreakStatement	break ;	87:3:2604:2609	1145551	14	True				
ANR	1145600	ExpressionStatement	PCRE_G ( error_code ) = preg_code	90:1:2616:2646	1145551	2	True				
ANR	1145601	AssignmentExpression	PCRE_G ( error_code ) = preg_code		1145551	0		=			
ANR	1145602	CallExpression	PCRE_G ( error_code )		1145551	0					
ANR	1145603	Callee	PCRE_G		1145551	0					
ANR	1145604	Identifier	PCRE_G		1145551	0					
ANR	1145605	ArgumentList	error_code		1145551	1					
ANR	1145606	Argument	error_code		1145551	0					
ANR	1145607	Identifier	error_code		1145551	0					
ANR	1145608	Identifier	preg_code		1145551	1					
ANR	1145609	ReturnType	static void		1145551	1					
ANR	1145610	Identifier	pcre_handle_exec_error		1145551	2					
ANR	1145611	ParameterList	int pcre_code TSRMLS_DC		1145551	3					
ANR	1145612	Parameter	int pcre_code TSRMLS_DC	64:35:2120:2142	1145551	0	True				
ANR	1145613	ParameterType	int pcre_code		1145551	0					
ANR	1145614	Identifier	TSRMLS_DC		1145551	1					
ANR	1145615	CFGEntryNode	ENTRY		1145551		True				
ANR	1145616	CFGExitNode	EXIT		1145551		True				
ANR	1145617	Symbol	preg_code		1145551						
ANR	1145618	Symbol	PHP_PCRE_INTERNAL_ERROR		1145551						
ANR	1145619	Symbol	PHP_PCRE_BAD_UTF8_OFFSET_ERROR		1145551						
ANR	1145620	Symbol	PCRE_G		1145551						
ANR	1145621	Symbol	PHP_PCRE_BACKTRACK_LIMIT_ERROR		1145551						
ANR	1145622	Symbol	PHP_PCRE_RECURSION_LIMIT_ERROR		1145551						
ANR	1145623	Symbol	PHP_PCRE_BAD_UTF8_ERROR		1145551						
ANR	1145624	Symbol	pcre_code		1145551						
ANR	1145625	Symbol	error_code		1145551						
ANR	1145626	Symbol	TSRMLS_DC		1145551						
ANR	1145627	Function	php_free_pcre_cache	94:0:2661:2956							
ANR	1145628	FunctionDef	php_free_pcre_cache (void * data)		1145627	0					
ANR	1145629	CompoundStatement		95:0:2715:2956	1145627	0					
ANR	1145630	IdentifierDeclStatement	pcre_cache_entry * pce = ( pcre_cache_entry * ) data ;	96:1:2718:2767	1145627	0	True				
ANR	1145631	IdentifierDecl	* pce = ( pcre_cache_entry * ) data		1145627	0					
ANR	1145632	IdentifierDeclType	pcre_cache_entry *		1145627	0					
ANR	1145633	Identifier	pce		1145627	1					
ANR	1145634	AssignmentExpression	* pce = ( pcre_cache_entry * ) data		1145627	2		=			
ANR	1145635	Identifier	pce		1145627	0					
ANR	1145636	CastExpression	( pcre_cache_entry * ) data		1145627	1					
ANR	1145637	CastTarget	pcre_cache_entry *		1145627	0					
ANR	1145638	Identifier	data		1145627	1					
ANR	1145639	IfStatement	if ( ! pce )		1145627	1					
ANR	1145640	Condition	! pce	97:5:2774:2777	1145627	0	True				
ANR	1145641	UnaryOperationExpression	! pce		1145627	0					
ANR	1145642	UnaryOperator	!		1145627	0					
ANR	1145643	Identifier	pce		1145627	1					
ANR	1145644	ReturnStatement	return ;	97:11:2780:2786	1145627	1	True				
ANR	1145645	ExpressionStatement	"pefree ( pce -> re , 1 )"	98:1:2789:2807	1145627	2	True				
ANR	1145646	CallExpression	"pefree ( pce -> re , 1 )"		1145627	0					
ANR	1145647	Callee	pefree		1145627	0					
ANR	1145648	Identifier	pefree		1145627	0					
ANR	1145649	ArgumentList	pce -> re		1145627	1					
ANR	1145650	Argument	pce -> re		1145627	0					
ANR	1145651	PtrMemberAccess	pce -> re		1145627	0					
ANR	1145652	Identifier	pce		1145627	0					
ANR	1145653	Identifier	re		1145627	1					
ANR	1145654	Argument	1		1145627	1					
ANR	1145655	PrimaryExpression	1		1145627	0					
ANR	1145656	IfStatement	if ( pce -> extra )		1145627	3					
ANR	1145657	Condition	pce -> extra	99:5:2814:2823	1145627	0	True				
ANR	1145658	PtrMemberAccess	pce -> extra		1145627	0					
ANR	1145659	Identifier	pce		1145627	0					
ANR	1145660	Identifier	extra		1145627	1					
ANR	1145661	ExpressionStatement	"pefree ( pce -> extra , 1 )"	99:17:2826:2847	1145627	1	True				
ANR	1145662	CallExpression	"pefree ( pce -> extra , 1 )"		1145627	0					
ANR	1145663	Callee	pefree		1145627	0					
ANR	1145664	Identifier	pefree		1145627	0					
ANR	1145665	ArgumentList	pce -> extra		1145627	1					
ANR	1145666	Argument	pce -> extra		1145627	0					
ANR	1145667	PtrMemberAccess	pce -> extra		1145627	0					
ANR	1145668	Identifier	pce		1145627	0					
ANR	1145669	Identifier	extra		1145627	1					
ANR	1145670	Argument	1		1145627	1					
ANR	1145671	PrimaryExpression	1		1145627	0					
ANR	1145672	IfStatement	if ( ( void * ) pce -> tables )		1145627	4					
ANR	1145673	Condition	( void * ) pce -> tables	101:5:2873:2890	1145627	0	True				
ANR	1145674	CastExpression	( void * ) pce -> tables		1145627	0					
ANR	1145675	CastTarget	void *		1145627	0					
ANR	1145676	PtrMemberAccess	pce -> tables		1145627	1					
ANR	1145677	Identifier	pce		1145627	0					
ANR	1145678	Identifier	tables		1145627	1					
ANR	1145679	ExpressionStatement	"pefree ( ( void * ) pce -> tables , 1 )"	101:25:2893:2922	1145627	1	True				
ANR	1145680	CallExpression	"pefree ( ( void * ) pce -> tables , 1 )"		1145627	0					
ANR	1145681	Callee	pefree		1145627	0					
ANR	1145682	Identifier	pefree		1145627	0					
ANR	1145683	ArgumentList	( void * ) pce -> tables		1145627	1					
ANR	1145684	Argument	( void * ) pce -> tables		1145627	0					
ANR	1145685	CastExpression	( void * ) pce -> tables		1145627	0					
ANR	1145686	CastTarget	void *		1145627	0					
ANR	1145687	PtrMemberAccess	pce -> tables		1145627	1					
ANR	1145688	Identifier	pce		1145627	0					
ANR	1145689	Identifier	tables		1145627	1					
ANR	1145690	Argument	1		1145627	1					
ANR	1145691	PrimaryExpression	1		1145627	0					
ANR	1145692	ExpressionStatement	"pefree ( pce -> locale , 1 )"	102:1:2925:2947	1145627	5	True				
ANR	1145693	CallExpression	"pefree ( pce -> locale , 1 )"		1145627	0					
ANR	1145694	Callee	pefree		1145627	0					
ANR	1145695	Identifier	pefree		1145627	0					
ANR	1145696	ArgumentList	pce -> locale		1145627	1					
ANR	1145697	Argument	pce -> locale		1145627	0					
ANR	1145698	PtrMemberAccess	pce -> locale		1145627	0					
ANR	1145699	Identifier	pce		1145627	0					
ANR	1145700	Identifier	locale		1145627	1					
ANR	1145701	Argument	1		1145627	1					
ANR	1145702	PrimaryExpression	1		1145627	0					
ANR	1145703	ReturnType	static void		1145627	1					
ANR	1145704	Identifier	php_free_pcre_cache		1145627	2					
ANR	1145705	ParameterList	void * data		1145627	3					
ANR	1145706	Parameter	void * data	94:32:2693:2702	1145627	0	True				
ANR	1145707	ParameterType	void *		1145627	0					
ANR	1145708	Identifier	data		1145627	1					
ANR	1145709	CFGEntryNode	ENTRY		1145627		True				
ANR	1145710	CFGExitNode	EXIT		1145627		True				
ANR	1145711	Symbol	pce		1145627						
ANR	1145712	Symbol	data		1145627						
ANR	1145713	Symbol	pce -> extra		1145627						
ANR	1145714	Symbol	pce -> locale		1145627						
ANR	1145715	Symbol	pce -> re		1145627						
ANR	1145716	Symbol	pce -> tables		1145627						
ANR	1145717	Symbol	* pce		1145627						
ANR	1145718	DeclStmt									
ANR	1145719	Decl							pcre_cache_entry	pcre_cache_entry *	pce
ANR	1145720	DeclStmt									
ANR	1145721	Decl							int	int *	num_clean
ANR	1145722	DeclStmt									
ANR	1145723	Decl							pcre_extra	pcre_extra *	extra
ANR	1145724	DeclStmt									
ANR	1145725	Decl							int	int	name_cnt
ANR	1145726	Decl							int	int	name_size
ANR	1145727	Decl							int	int	ni
ANR	1145728	DeclStmt									
ANR	1145729	Decl							int	int	rc
ANR	1145730	DeclStmt									
ANR	1145731	Decl							char	char *	name_table
ANR	1145732	DeclStmt									
ANR	1145733	Decl							unsigned short	unsigned short	name_idx
ANR	1145734	DeclStmt									
ANR	1145735	Decl							char	char * *	subpat_names
ANR	1145736	DeclStmt									
ANR	1145737	Decl							int	int	rc1
ANR	1145738	Decl							int	int	rc2
ANR	1145739	Function	calculate_unit_length	235:0:7472:7781							
ANR	1145740	FunctionDef	"calculate_unit_length (pcre_cache_entry * pce , char * start)"		1145739	0					
ANR	1145741	CompoundStatement		236:0:7560:7781	1145739	0					
ANR	1145742	IdentifierDeclStatement	int unit_len ;	237:1:7563:7575	1145739	0	True				
ANR	1145743	IdentifierDecl	unit_len		1145739	0					
ANR	1145744	IdentifierDeclType	int		1145739	0					
ANR	1145745	Identifier	unit_len		1145739	1					
ANR	1145746	IfStatement	if ( pce -> compile_options & PCRE_UTF8 )		1145739	1					
ANR	1145747	Condition	pce -> compile_options & PCRE_UTF8	239:5:7583:7614	1145739	0	True				
ANR	1145748	BitAndExpression	pce -> compile_options & PCRE_UTF8		1145739	0		&			
ANR	1145749	PtrMemberAccess	pce -> compile_options		1145739	0					
ANR	1145750	Identifier	pce		1145739	0					
ANR	1145751	Identifier	compile_options		1145739	1					
ANR	1145752	Identifier	PCRE_UTF8		1145739	1					
ANR	1145753	CompoundStatement		5:2:60:77	1145739	1					
ANR	1145754	IdentifierDeclStatement	char * end = start ;	240:2:7621:7638	1145739	0	True				
ANR	1145755	IdentifierDecl	* end = start		1145739	0					
ANR	1145756	IdentifierDeclType	char *		1145739	0					
ANR	1145757	Identifier	end		1145739	1					
ANR	1145758	AssignmentExpression	* end = start		1145739	2		=			
ANR	1145759	Identifier	start		1145739	0					
ANR	1145760	Identifier	start		1145739	1					
ANR	1145761	WhileStatement	while ( ( * ++ end & 0xC0 ) == 0x80 )		1145739	1					
ANR	1145762	Condition	( * ++ end & 0xC0 ) == 0x80	243:9:7682:7704	1145739	0	True				
ANR	1145763	EqualityExpression	( * ++ end & 0xC0 ) == 0x80		1145739	0		==			
ANR	1145764	BitAndExpression	* ++ end & 0xC0		1145739	0		&			
ANR	1145765	UnaryOperationExpression	* ++ end		1145739	0					
ANR	1145766	UnaryOperator	*		1145739	0					
ANR	1145767	UnaryExpression	++ end		1145739	1					
ANR	1145768	IncDec	++		1145739	0					
ANR	1145769	Identifier	end		1145739	1					
ANR	1145770	PrimaryExpression	0xC0		1145739	1					
ANR	1145771	PrimaryExpression	0x80		1145739	1					
ANR	1145772	ExpressionStatement		243:33:7706:7706	1145739	1	True				
ANR	1145773	ExpressionStatement	unit_len = end - start	244:2:7710:7732	1145739	2	True				
ANR	1145774	AssignmentExpression	unit_len = end - start		1145739	0		=			
ANR	1145775	Identifier	unit_len		1145739	0					
ANR	1145776	AdditiveExpression	end - start		1145739	1		-			
ANR	1145777	Identifier	end		1145739	0					
ANR	1145778	Identifier	start		1145739	1					
ANR	1145779	ElseStatement	else		1145739	0					
ANR	1145780	CompoundStatement		10:8:181:181	1145739	0					
ANR	1145781	ExpressionStatement	unit_len = 1	246:2:7746:7758	1145739	0	True				
ANR	1145782	AssignmentExpression	unit_len = 1		1145739	0		=			
ANR	1145783	Identifier	unit_len		1145739	0					
ANR	1145784	PrimaryExpression	1		1145739	1					
ANR	1145785	ReturnStatement	return unit_len ;	248:1:7764:7779	1145739	2	True				
ANR	1145786	Identifier	unit_len		1145739	0					
ANR	1145787	ReturnType	static zend_always_inline int		1145739	1					
ANR	1145788	Identifier	calculate_unit_length		1145739	2					
ANR	1145789	ParameterList	"pcre_cache_entry * pce , char * start"		1145739	3					
ANR	1145790	Parameter	pcre_cache_entry * pce	235:52:7524:7544	1145739	0	True				
ANR	1145791	ParameterType	pcre_cache_entry *		1145739	0					
ANR	1145792	Identifier	pce		1145739	1					
ANR	1145793	Parameter	char * start	235:75:7547:7557	1145739	1	True				
ANR	1145794	ParameterType	char *		1145739	0					
ANR	1145795	Identifier	start		1145739	1					
ANR	1145796	CFGEntryNode	ENTRY		1145739		True				
ANR	1145797	CFGExitNode	EXIT		1145739		True				
ANR	1145798	Symbol	pce		1145739						
ANR	1145799	Symbol	* ++ end		1145739						
ANR	1145800	Symbol	start		1145739						
ANR	1145801	Symbol	unit_len		1145739						
ANR	1145802	Symbol	pce -> compile_options		1145739						
ANR	1145803	Symbol	end		1145739						
ANR	1145804	Symbol	* end		1145739						
ANR	1145805	Symbol	PCRE_UTF8		1145739						
ANR	1145806	Symbol	* pce		1145739						
ANR	1145807	Function	pcre_get_compiled_regex_cache	254:0:7835:14942							
ANR	1145808	FunctionDef	"pcre_get_compiled_regex_cache (char * regex , int regex_len TSRMLS_DC)"		1145807	0					
ANR	1145809	CompoundStatement		255:0:7928:14942	1145807	0					
ANR	1145810	IdentifierDeclStatement	pcre * re = NULL ;	256:1:7931:7949	1145807	0	True				
ANR	1145811	IdentifierDecl	* re = NULL		1145807	0					
ANR	1145812	IdentifierDeclType	pcre *		1145807	0					
ANR	1145813	Identifier	re		1145807	1					
ANR	1145814	AssignmentExpression	* re = NULL		1145807	2		=			
ANR	1145815	Identifier	NULL		1145807	0					
ANR	1145816	Identifier	NULL		1145807	1					
ANR	1145817	IdentifierDeclStatement	pcre_extra * extra ;	257:1:7952:7971	1145807	1	True				
ANR	1145818	IdentifierDecl	* extra		1145807	0					
ANR	1145819	IdentifierDeclType	pcre_extra *		1145807	0					
ANR	1145820	Identifier	extra		1145807	1					
ANR	1145821	IdentifierDeclStatement	int coptions = 0 ;	258:1:7974:7995	1145807	2	True				
ANR	1145822	IdentifierDecl	coptions = 0		1145807	0					
ANR	1145823	IdentifierDeclType	int		1145807	0					
ANR	1145824	Identifier	coptions		1145807	1					
ANR	1145825	AssignmentExpression	coptions = 0		1145807	2		=			
ANR	1145826	Identifier	coptions		1145807	0					
ANR	1145827	PrimaryExpression	0		1145807	1					
ANR	1145828	IdentifierDeclStatement	int soptions = 0 ;	259:1:7998:8019	1145807	3	True				
ANR	1145829	IdentifierDecl	soptions = 0		1145807	0					
ANR	1145830	IdentifierDeclType	int		1145807	0					
ANR	1145831	Identifier	soptions		1145807	1					
ANR	1145832	AssignmentExpression	soptions = 0		1145807	2		=			
ANR	1145833	Identifier	soptions		1145807	0					
ANR	1145834	PrimaryExpression	0		1145807	1					
ANR	1145835	IdentifierDeclStatement	const char * error ;	260:1:8022:8041	1145807	4	True				
ANR	1145836	IdentifierDecl	* error		1145807	0					
ANR	1145837	IdentifierDeclType	const char *		1145807	0					
ANR	1145838	Identifier	error		1145807	1					
ANR	1145839	IdentifierDeclStatement	int erroffset ;	261:1:8044:8062	1145807	5	True				
ANR	1145840	IdentifierDecl	erroffset		1145807	0					
ANR	1145841	IdentifierDeclType	int		1145807	0					
ANR	1145842	Identifier	erroffset		1145807	1					
ANR	1145843	IdentifierDeclStatement	char delimiter ;	262:1:8065:8083	1145807	6	True				
ANR	1145844	IdentifierDecl	delimiter		1145807	0					
ANR	1145845	IdentifierDeclType	char		1145807	0					
ANR	1145846	Identifier	delimiter		1145807	1					
ANR	1145847	IdentifierDeclStatement	char start_delimiter ;	263:1:8086:8110	1145807	7	True				
ANR	1145848	IdentifierDecl	start_delimiter		1145807	0					
ANR	1145849	IdentifierDeclType	char		1145807	0					
ANR	1145850	Identifier	start_delimiter		1145807	1					
ANR	1145851	IdentifierDeclStatement	char end_delimiter ;	264:1:8113:8135	1145807	8	True				
ANR	1145852	IdentifierDecl	end_delimiter		1145807	0					
ANR	1145853	IdentifierDeclType	char		1145807	0					
ANR	1145854	Identifier	end_delimiter		1145807	1					
ANR	1145855	IdentifierDeclStatement	"char * p , * pp ;"	265:1:8138:8153	1145807	9	True				
ANR	1145856	IdentifierDecl	* p		1145807	0					
ANR	1145857	IdentifierDeclType	char *		1145807	0					
ANR	1145858	Identifier	p		1145807	1					
ANR	1145859	IdentifierDecl	* pp		1145807	1					
ANR	1145860	IdentifierDeclType	char *		1145807	0					
ANR	1145861	Identifier	pp		1145807	1					
ANR	1145862	IdentifierDeclStatement	char * pattern ;	266:1:8156:8172	1145807	10	True				
ANR	1145863	IdentifierDecl	* pattern		1145807	0					
ANR	1145864	IdentifierDeclType	char *		1145807	0					
ANR	1145865	Identifier	pattern		1145807	1					
ANR	1145866	IdentifierDeclStatement	int do_study = 0 ;	267:1:8175:8196	1145807	11	True				
ANR	1145867	IdentifierDecl	do_study = 0		1145807	0					
ANR	1145868	IdentifierDeclType	int		1145807	0					
ANR	1145869	Identifier	do_study		1145807	1					
ANR	1145870	AssignmentExpression	do_study = 0		1145807	2		=			
ANR	1145871	Identifier	do_study		1145807	0					
ANR	1145872	PrimaryExpression	0		1145807	1					
ANR	1145873	IdentifierDeclStatement	int poptions = 0 ;	268:1:8199:8220	1145807	12	True				
ANR	1145874	IdentifierDecl	poptions = 0		1145807	0					
ANR	1145875	IdentifierDeclType	int		1145807	0					
ANR	1145876	Identifier	poptions		1145807	1					
ANR	1145877	AssignmentExpression	poptions = 0		1145807	2		=			
ANR	1145878	Identifier	poptions		1145807	0					
ANR	1145879	PrimaryExpression	0		1145807	1					
ANR	1145880	IdentifierDeclStatement	int count = 0 ;	269:1:8223:8239	1145807	13	True				
ANR	1145881	IdentifierDecl	count = 0		1145807	0					
ANR	1145882	IdentifierDeclType	int		1145807	0					
ANR	1145883	Identifier	count		1145807	1					
ANR	1145884	AssignmentExpression	count = 0		1145807	2		=			
ANR	1145885	Identifier	count		1145807	0					
ANR	1145886	PrimaryExpression	0		1145807	1					
ANR	1145887	Statement	unsigned	270:1:8242:8249	1145807	14	True				
ANR	1145888	IdentifierDeclStatement	const char * tables = NULL ;	270:10:8251:8276	1145807	15	True				
ANR	1145889	IdentifierDecl	* tables = NULL		1145807	0					
ANR	1145890	IdentifierDeclType	const char *		1145807	0					
ANR	1145891	Identifier	tables		1145807	1					
ANR	1145892	AssignmentExpression	* tables = NULL		1145807	2		=			
ANR	1145893	Identifier	NULL		1145807	0					
ANR	1145894	Identifier	NULL		1145807	1					
ANR	1145895	IdentifierDeclStatement	char * locale ;	272:1:8298:8313	1145807	16	True				
ANR	1145896	IdentifierDecl	* locale		1145807	0					
ANR	1145897	IdentifierDeclType	char *		1145807	0					
ANR	1145898	Identifier	locale		1145807	1					
ANR	1145899	IdentifierDeclStatement	pcre_cache_entry * pce ;	274:1:8323:8344	1145807	17	True				
ANR	1145900	IdentifierDecl	* pce		1145807	0					
ANR	1145901	IdentifierDeclType	pcre_cache_entry *		1145807	0					
ANR	1145902	Identifier	pce		1145807	1					
ANR	1145903	IdentifierDeclStatement	pcre_cache_entry new_entry ;	275:1:8347:8374	1145807	18	True				
ANR	1145904	IdentifierDecl	new_entry		1145807	0					
ANR	1145905	IdentifierDeclType	pcre_cache_entry		1145807	0					
ANR	1145906	Identifier	new_entry		1145807	1					
ANR	1145907	IdentifierDeclStatement	char * tmp = NULL ;	276:1:8377:8408	1145807	19	True				
ANR	1145908	IdentifierDecl	* tmp = NULL		1145807	0					
ANR	1145909	IdentifierDeclType	char *		1145807	0					
ANR	1145910	Identifier	tmp		1145807	1					
ANR	1145911	AssignmentExpression	* tmp = NULL		1145807	2		=			
ANR	1145912	Identifier	NULL		1145807	0					
ANR	1145913	Identifier	NULL		1145807	1					
ANR	1145914	Statement	if	279:2:8432:8433	1145807	20	True				
ANR	1145915	Statement	defined	279:5:8435:8441	1145807	21	True				
ANR	1145916	Statement	(	279:12:8442:8442	1145807	22	True				
ANR	1145917	Statement	PHP_WIN32	279:13:8443:8451	1145807	23	True				
ANR	1145918	Statement	)	279:22:8452:8452	1145807	24	True				
ANR	1145919	Statement	&&	279:24:8454:8455	1145807	25	True				
ANR	1145920	Statement	defined	279:27:8457:8463	1145807	26	True				
ANR	1145921	ExpressionStatement	( ZTS ) _configthreadlocale ( _ENABLE_PER_THREAD_LOCALE )	279:34:8464:8517	1145807	27	True				
ANR	1145922	CastExpression	( ZTS ) _configthreadlocale ( _ENABLE_PER_THREAD_LOCALE )		1145807	0					
ANR	1145923	CastTarget	ZTS		1145807	0					
ANR	1145924	CallExpression	_configthreadlocale ( _ENABLE_PER_THREAD_LOCALE )		1145807	1					
ANR	1145925	Callee	_configthreadlocale		1145807	0					
ANR	1145926	Identifier	_configthreadlocale		1145807	0					
ANR	1145927	ArgumentList	_ENABLE_PER_THREAD_LOCALE		1145807	1					
ANR	1145928	Argument	_ENABLE_PER_THREAD_LOCALE		1145807	0					
ANR	1145929	Identifier	_ENABLE_PER_THREAD_LOCALE		1145807	0					
ANR	1145930	IdentifierDeclStatement	"endif locale = setlocale ( LC_CTYPE , NULL ) ;"	281:2:8521:8562	1145807	28	True				
ANR	1145931	IdentifierDecl	"locale = setlocale ( LC_CTYPE , NULL )"		1145807	0					
ANR	1145932	IdentifierDeclType	endif		1145807	0					
ANR	1145933	Identifier	locale		1145807	1					
ANR	1145934	AssignmentExpression	"locale = setlocale ( LC_CTYPE , NULL )"		1145807	2		=			
ANR	1145935	Identifier	locale		1145807	0					
ANR	1145936	CallExpression	"setlocale ( LC_CTYPE , NULL )"		1145807	1					
ANR	1145937	Callee	setlocale		1145807	0					
ANR	1145938	Identifier	setlocale		1145807	0					
ANR	1145939	ArgumentList	LC_CTYPE		1145807	1					
ANR	1145940	Argument	LC_CTYPE		1145807	0					
ANR	1145941	Identifier	LC_CTYPE		1145807	0					
ANR	1145942	Argument	NULL		1145807	1					
ANR	1145943	Identifier	NULL		1145807	0					
ANR	1145944	IfStatement	"if ( zend_hash_find ( & PCRE_G ( pcre_cache ) , regex , regex_len + 1 , ( void * * ) & pce ) == SUCCESS )"		1145807	29					
ANR	1145945	Condition	"zend_hash_find ( & PCRE_G ( pcre_cache ) , regex , regex_len + 1 , ( void * * ) & pce ) == SUCCESS"	287:5:8714:8794	1145807	0	True				
ANR	1145946	EqualityExpression	"zend_hash_find ( & PCRE_G ( pcre_cache ) , regex , regex_len + 1 , ( void * * ) & pce ) == SUCCESS"		1145807	0		==			
ANR	1145947	CallExpression	"zend_hash_find ( & PCRE_G ( pcre_cache ) , regex , regex_len + 1 , ( void * * ) & pce )"		1145807	0					
ANR	1145948	Callee	zend_hash_find		1145807	0					
ANR	1145949	Identifier	zend_hash_find		1145807	0					
ANR	1145950	ArgumentList	& PCRE_G ( pcre_cache )		1145807	1					
ANR	1145951	Argument	& PCRE_G ( pcre_cache )		1145807	0					
ANR	1145952	UnaryOperationExpression	& PCRE_G ( pcre_cache )		1145807	0					
ANR	1145953	UnaryOperator	&		1145807	0					
ANR	1145954	CallExpression	PCRE_G ( pcre_cache )		1145807	1					
ANR	1145955	Callee	PCRE_G		1145807	0					
ANR	1145956	Identifier	PCRE_G		1145807	0					
ANR	1145957	ArgumentList	pcre_cache		1145807	1					
ANR	1145958	Argument	pcre_cache		1145807	0					
ANR	1145959	Identifier	pcre_cache		1145807	0					
ANR	1145960	Argument	regex		1145807	1					
ANR	1145961	Identifier	regex		1145807	0					
ANR	1145962	Argument	regex_len + 1		1145807	2					
ANR	1145963	AdditiveExpression	regex_len + 1		1145807	0		+			
ANR	1145964	Identifier	regex_len		1145807	0					
ANR	1145965	PrimaryExpression	1		1145807	1					
ANR	1145966	Argument	( void * * ) & pce		1145807	3					
ANR	1145967	CastExpression	( void * * ) & pce		1145807	0					
ANR	1145968	CastTarget	void * *		1145807	0					
ANR	1145969	UnaryOperationExpression	& pce		1145807	1					
ANR	1145970	UnaryOperator	&		1145807	0					
ANR	1145971	Identifier	pce		1145807	1					
ANR	1145972	Identifier	SUCCESS		1145807	1					
ANR	1145973	CompoundStatement		33:88:868:868	1145807	1					
ANR	1145974	IfStatement	"if ( pcre_fullinfo ( pce -> re , NULL , PCRE_INFO_CAPTURECOUNT , & count ) == PCRE_ERROR_BADMAGIC )"		1145807	0					
ANR	1145975	Condition	"pcre_fullinfo ( pce -> re , NULL , PCRE_INFO_CAPTURECOUNT , & count ) == PCRE_ERROR_BADMAGIC"	292:6:8962:9044	1145807	0	True				
ANR	1145976	EqualityExpression	"pcre_fullinfo ( pce -> re , NULL , PCRE_INFO_CAPTURECOUNT , & count ) == PCRE_ERROR_BADMAGIC"		1145807	0		==			
ANR	1145977	CallExpression	"pcre_fullinfo ( pce -> re , NULL , PCRE_INFO_CAPTURECOUNT , & count )"		1145807	0					
ANR	1145978	Callee	pcre_fullinfo		1145807	0					
ANR	1145979	Identifier	pcre_fullinfo		1145807	0					
ANR	1145980	ArgumentList	pce -> re		1145807	1					
ANR	1145981	Argument	pce -> re		1145807	0					
ANR	1145982	PtrMemberAccess	pce -> re		1145807	0					
ANR	1145983	Identifier	pce		1145807	0					
ANR	1145984	Identifier	re		1145807	1					
ANR	1145985	Argument	NULL		1145807	1					
ANR	1145986	Identifier	NULL		1145807	0					
ANR	1145987	Argument	PCRE_INFO_CAPTURECOUNT		1145807	2					
ANR	1145988	Identifier	PCRE_INFO_CAPTURECOUNT		1145807	0					
ANR	1145989	Argument	& count		1145807	3					
ANR	1145990	UnaryOperationExpression	& count		1145807	0					
ANR	1145991	UnaryOperator	&		1145807	0					
ANR	1145992	Identifier	count		1145807	1					
ANR	1145993	Identifier	PCRE_ERROR_BADMAGIC		1145807	1					
ANR	1145994	CompoundStatement		38:91:1118:1118	1145807	1					
ANR	1145995	ExpressionStatement	zend_hash_clean ( & PCRE_G ( pcre_cache ) )	293:3:9052:9088	1145807	0	True				
ANR	1145996	CallExpression	zend_hash_clean ( & PCRE_G ( pcre_cache ) )		1145807	0					
ANR	1145997	Callee	zend_hash_clean		1145807	0					
ANR	1145998	Identifier	zend_hash_clean		1145807	0					
ANR	1145999	ArgumentList	& PCRE_G ( pcre_cache )		1145807	1					
ANR	1146000	Argument	& PCRE_G ( pcre_cache )		1145807	0					
ANR	1146001	UnaryOperationExpression	& PCRE_G ( pcre_cache )		1145807	0					
ANR	1146002	UnaryOperator	&		1145807	0					
ANR	1146003	CallExpression	PCRE_G ( pcre_cache )		1145807	1					
ANR	1146004	Callee	PCRE_G		1145807	0					
ANR	1146005	Identifier	PCRE_G		1145807	0					
ANR	1146006	ArgumentList	pcre_cache		1145807	1					
ANR	1146007	Argument	pcre_cache		1145807	0					
ANR	1146008	Identifier	pcre_cache		1145807	0					
ANR	1146009	ElseStatement	else		1145807	0					
ANR	1146010	CompoundStatement		40:9:1170:1170	1145807	0					
ANR	1146011	IfStatement	"if ( ! strcmp ( pce -> locale , locale ) )"		1145807	0					
ANR	1146012	Condition	"! strcmp ( pce -> locale , locale )"	296:7:9127:9154	1145807	0	True				
ANR	1146013	UnaryOperationExpression	"! strcmp ( pce -> locale , locale )"		1145807	0					
ANR	1146014	UnaryOperator	!		1145807	0					
ANR	1146015	CallExpression	"strcmp ( pce -> locale , locale )"		1145807	1					
ANR	1146016	Callee	strcmp		1145807	0					
ANR	1146017	Identifier	strcmp		1145807	0					
ANR	1146018	ArgumentList	pce -> locale		1145807	1					
ANR	1146019	Argument	pce -> locale		1145807	0					
ANR	1146020	PtrMemberAccess	pce -> locale		1145807	0					
ANR	1146021	Identifier	pce		1145807	0					
ANR	1146022	Identifier	locale		1145807	1					
ANR	1146023	Argument	locale		1145807	1					
ANR	1146024	Identifier	locale		1145807	0					
ANR	1146025	CompoundStatement		42:37:1228:1228	1145807	1					
ANR	1146026	ReturnStatement	return pce ;	298:4:9170:9180	1145807	0	True				
ANR	1146027	Identifier	pce		1145807	0					
ANR	1146028	ExpressionStatement	p = regex	305:1:9222:9231	1145807	30	True				
ANR	1146029	AssignmentExpression	p = regex		1145807	0		=			
ANR	1146030	Identifier	p		1145807	0					
ANR	1146031	Identifier	regex		1145807	1					
ANR	1146032	WhileStatement	while ( isspace ( ( int ) * ( unsigned char * ) p ) )		1145807	31					
ANR	1146033	Condition	isspace ( ( int ) * ( unsigned char * ) p )	309:8:9368:9400	1145807	0	True				
ANR	1146034	CallExpression	isspace ( ( int ) * ( unsigned char * ) p )		1145807	0					
ANR	1146035	Callee	isspace		1145807	0					
ANR	1146036	Identifier	isspace		1145807	0					
ANR	1146037	ArgumentList	( int ) * ( unsigned char * ) p		1145807	1					
ANR	1146038	Argument	( int ) * ( unsigned char * ) p		1145807	0					
ANR	1146039	CastExpression	( int ) * ( unsigned char * ) p		1145807	0					
ANR	1146040	CastTarget	int		1145807	0					
ANR	1146041	UnaryOperationExpression	* ( unsigned char * ) p		1145807	1					
ANR	1146042	UnaryOperator	*		1145807	0					
ANR	1146043	CastExpression	( unsigned char * ) p		1145807	1					
ANR	1146044	CastTarget	unsigned char *		1145807	0					
ANR	1146045	Identifier	p		1145807	1					
ANR	1146046	ExpressionStatement	p ++	309:43:9403:9406	1145807	1	True				
ANR	1146047	PostIncDecOperationExpression	p ++		1145807	0					
ANR	1146048	Identifier	p		1145807	0					
ANR	1146049	IncDec	++		1145807	1					
ANR	1146050	IfStatement	if ( * p == 0 )		1145807	32					
ANR	1146051	Condition	* p == 0	310:5:9413:9419	1145807	0	True				
ANR	1146052	EqualityExpression	* p == 0		1145807	0		==			
ANR	1146053	UnaryOperationExpression	* p		1145807	0					
ANR	1146054	UnaryOperator	*		1145807	0					
ANR	1146055	Identifier	p		1145807	1					
ANR	1146056	PrimaryExpression	0		1145807	1					
ANR	1146057	CompoundStatement		56:14:1493:1493	1145807	1					
ANR	1146058	Statement	php_error_docref	311:2:9426:9441	1145807	0	True				
ANR	1146059	Statement	(	311:18:9442:9442	1145807	1	True				
ANR	1146060	Statement	NULL	311:19:9443:9446	1145807	2	True				
ANR	1146061	Statement	TSRMLS_CC	311:24:9448:9456	1145807	3	True				
ANR	1146062	Statement	","	311:33:9457:9457	1145807	4	True				
ANR	1146063	Statement	E_WARNING	311:35:9459:9467	1145807	5	True				
ANR	1146064	Statement	","	311:44:9468:9468	1145807	6	True				
ANR	1146065	Statement	p	312:7:9477:9477	1145807	7	True				
ANR	1146066	Statement	<	312:9:9479:9479	1145807	8	True				
ANR	1146067	Statement	regex	312:11:9481:9485	1145807	9	True				
ANR	1146068	Statement	+	312:17:9487:9487	1145807	10	True				
ANR	1146069	Statement	regex_len	312:19:9489:9497	1145807	11	True				
ANR	1146070	Statement	?	312:29:9499:9499	1145807	12	True				
ANR	1146071	Statement	"""Null byte in regex"""	312:31:9501:9520	1145807	13	True				
ANR	1146072	Statement	:	312:52:9522:9522	1145807	14	True				
ANR	1146073	Statement	"""Empty regular expression"""	312:54:9524:9549	1145807	15	True				
ANR	1146074	Statement	)	312:80:9550:9550	1145807	16	True				
ANR	1146075	ExpressionStatement		312:81:9551:9551	1145807	17	True				
ANR	1146076	ReturnStatement	return NULL ;	313:2:9555:9566	1145807	18	True				
ANR	1146077	Identifier	NULL		1145807	0					
ANR	1146078	ExpressionStatement	delimiter = * p ++	318:1:9662:9678	1145807	33	True				
ANR	1146079	AssignmentExpression	delimiter = * p ++		1145807	0		=			
ANR	1146080	Identifier	delimiter		1145807	0					
ANR	1146081	UnaryOperationExpression	* p ++		1145807	1					
ANR	1146082	UnaryOperator	*		1145807	0					
ANR	1146083	PostIncDecOperationExpression	p ++		1145807	1					
ANR	1146084	Identifier	p		1145807	0					
ANR	1146085	IncDec	++		1145807	1					
ANR	1146086	IfStatement	if ( isalnum ( ( int ) * ( unsigned char * ) & delimiter ) || delimiter == '\\\\' )		1145807	34					
ANR	1146087	Condition	isalnum ( ( int ) * ( unsigned char * ) & delimiter ) || delimiter == '\\\\'	319:5:9685:9747	1145807	0	True				
ANR	1146088	OrExpression	isalnum ( ( int ) * ( unsigned char * ) & delimiter ) || delimiter == '\\\\'		1145807	0		||			
ANR	1146089	CallExpression	isalnum ( ( int ) * ( unsigned char * ) & delimiter )		1145807	0					
ANR	1146090	Callee	isalnum		1145807	0					
ANR	1146091	Identifier	isalnum		1145807	0					
ANR	1146092	ArgumentList	( int ) * ( unsigned char * ) & delimiter		1145807	1					
ANR	1146093	Argument	( int ) * ( unsigned char * ) & delimiter		1145807	0					
ANR	1146094	CastExpression	( int ) * ( unsigned char * ) & delimiter		1145807	0					
ANR	1146095	CastTarget	int		1145807	0					
ANR	1146096	UnaryOperationExpression	* ( unsigned char * ) & delimiter		1145807	1					
ANR	1146097	UnaryOperator	*		1145807	0					
ANR	1146098	CastExpression	( unsigned char * ) & delimiter		1145807	1					
ANR	1146099	CastTarget	unsigned char *		1145807	0					
ANR	1146100	UnaryOperationExpression	& delimiter		1145807	1					
ANR	1146101	UnaryOperator	&		1145807	0					
ANR	1146102	Identifier	delimiter		1145807	1					
ANR	1146103	EqualityExpression	delimiter == '\\\\'		1145807	1		==			
ANR	1146104	Identifier	delimiter		1145807	0					
ANR	1146105	PrimaryExpression	'\\\\'		1145807	1					
ANR	1146106	CompoundStatement		65:70:1821:1821	1145807	1					
ANR	1146107	Statement	php_error_docref	320:2:9754:9769	1145807	0	True				
ANR	1146108	Statement	(	320:18:9770:9770	1145807	1	True				
ANR	1146109	Statement	NULL	320:19:9771:9774	1145807	2	True				
ANR	1146110	Statement	TSRMLS_CC	320:24:9776:9784	1145807	3	True				
ANR	1146111	Statement	","	320:33:9785:9785	1145807	4	True				
ANR	1146112	Statement	E_WARNING	320:34:9786:9794	1145807	5	True				
ANR	1146113	Statement	","	320:43:9795:9795	1145807	6	True				
ANR	1146114	Statement	"""Delimiter must not be alphanumeric or backslash"""	320:45:9797:9845	1145807	7	True				
ANR	1146115	Statement	)	320:94:9846:9846	1145807	8	True				
ANR	1146116	ExpressionStatement		320:95:9847:9847	1145807	9	True				
ANR	1146117	ReturnStatement	return NULL ;	321:2:9851:9862	1145807	10	True				
ANR	1146118	Identifier	NULL		1145807	0					
ANR	1146119	ExpressionStatement	start_delimiter = delimiter	324:1:9869:9896	1145807	35	True				
ANR	1146120	AssignmentExpression	start_delimiter = delimiter		1145807	0		=			
ANR	1146121	Identifier	start_delimiter		1145807	0					
ANR	1146122	Identifier	delimiter		1145807	1					
ANR	1146123	IfStatement	"if ( ( pp = strchr ( ""([{< )]}> )]}>"" , delimiter ) ) )"		1145807	36					
ANR	1146124	Condition	"pp = strchr ( ""([{< )]}> )]}>"" , delimiter )"	325:5:9903:9944	1145807	0	True				
ANR	1146125	AssignmentExpression	"pp = strchr ( ""([{< )]}> )]}>"" , delimiter )"		1145807	0		=			
ANR	1146126	Identifier	pp		1145807	0					
ANR	1146127	CallExpression	"strchr ( ""([{< )]}> )]}>"" , delimiter )"		1145807	1					
ANR	1146128	Callee	strchr		1145807	0					
ANR	1146129	Identifier	strchr		1145807	0					
ANR	1146130	ArgumentList	"""([{< )]}> )]}>"""		1145807	1					
ANR	1146131	Argument	"""([{< )]}> )]}>"""		1145807	0					
ANR	1146132	PrimaryExpression	"""([{< )]}> )]}>"""		1145807	0					
ANR	1146133	Argument	delimiter		1145807	1					
ANR	1146134	Identifier	delimiter		1145807	0					
ANR	1146135	ExpressionStatement	delimiter = pp [ 5 ]	326:2:9949:9966	1145807	1	True				
ANR	1146136	AssignmentExpression	delimiter = pp [ 5 ]		1145807	0		=			
ANR	1146137	Identifier	delimiter		1145807	0					
ANR	1146138	ArrayIndexing	pp [ 5 ]		1145807	1					
ANR	1146139	Identifier	pp		1145807	0					
ANR	1146140	PrimaryExpression	5		1145807	1					
ANR	1146141	ExpressionStatement	end_delimiter = delimiter	327:1:9969:9994	1145807	37	True				
ANR	1146142	AssignmentExpression	end_delimiter = delimiter		1145807	0		=			
ANR	1146143	Identifier	end_delimiter		1145807	0					
ANR	1146144	Identifier	delimiter		1145807	1					
ANR	1146145	ExpressionStatement	pp = p	329:1:9998:10004	1145807	38	True				
ANR	1146146	AssignmentExpression	pp = p		1145807	0		=			
ANR	1146147	Identifier	pp		1145807	0					
ANR	1146148	Identifier	p		1145807	1					
ANR	1146149	IfStatement	if ( start_delimiter == end_delimiter )		1145807	39					
ANR	1146150	Condition	start_delimiter == end_delimiter	331:5:10012:10043	1145807	0	True				
ANR	1146151	EqualityExpression	start_delimiter == end_delimiter		1145807	0		==			
ANR	1146152	Identifier	start_delimiter		1145807	0					
ANR	1146153	Identifier	end_delimiter		1145807	1					
ANR	1146154	CompoundStatement		77:39:2117:2117	1145807	1					
ANR	1146155	WhileStatement	while ( * pp != 0 )		1145807	0					
ANR	1146156	Condition	* pp != 0	335:9:10250:10257	1145807	0	True				
ANR	1146157	EqualityExpression	* pp != 0		1145807	0		!=			
ANR	1146158	UnaryOperationExpression	* pp		1145807	0					
ANR	1146159	UnaryOperator	*		1145807	0					
ANR	1146160	Identifier	pp		1145807	1					
ANR	1146161	PrimaryExpression	0		1145807	1					
ANR	1146162	CompoundStatement		81:19:2331:2331	1145807	1					
ANR	1146163	IfStatement	if ( * pp == '\\\\' && pp [ 1 ] != 0 )		1145807	0					
ANR	1146164	Condition	* pp == '\\\\' && pp [ 1 ] != 0	336:7:10269:10293	1145807	0	True				
ANR	1146165	AndExpression	* pp == '\\\\' && pp [ 1 ] != 0		1145807	0		&&			
ANR	1146166	EqualityExpression	* pp == '\\\\'		1145807	0		==			
ANR	1146167	UnaryOperationExpression	* pp		1145807	0					
ANR	1146168	UnaryOperator	*		1145807	0					
ANR	1146169	Identifier	pp		1145807	1					
ANR	1146170	PrimaryExpression	'\\\\'		1145807	1					
ANR	1146171	EqualityExpression	pp [ 1 ] != 0		1145807	1		!=			
ANR	1146172	ArrayIndexing	pp [ 1 ]		1145807	0					
ANR	1146173	Identifier	pp		1145807	0					
ANR	1146174	PrimaryExpression	1		1145807	1					
ANR	1146175	PrimaryExpression	0		1145807	1					
ANR	1146176	ExpressionStatement	pp ++	336:34:10296:10300	1145807	1	True				
ANR	1146177	PostIncDecOperationExpression	pp ++		1145807	0					
ANR	1146178	Identifier	pp		1145807	0					
ANR	1146179	IncDec	++		1145807	1					
ANR	1146180	ElseStatement	else		1145807	0					
ANR	1146181	IfStatement	if ( * pp == delimiter )		1145807	0					
ANR	1146182	Condition	* pp == delimiter	337:12:10314:10329	1145807	0	True				
ANR	1146183	EqualityExpression	* pp == delimiter		1145807	0		==			
ANR	1146184	UnaryOperationExpression	* pp		1145807	0					
ANR	1146185	UnaryOperator	*		1145807	0					
ANR	1146186	Identifier	pp		1145807	1					
ANR	1146187	Identifier	delimiter		1145807	1					
ANR	1146188	BreakStatement	break ;	338:4:10336:10341	1145807	1	True				
ANR	1146189	ExpressionStatement	pp ++	339:3:10346:10350	1145807	1	True				
ANR	1146190	PostIncDecOperationExpression	pp ++		1145807	0					
ANR	1146191	Identifier	pp		1145807	0					
ANR	1146192	IncDec	++		1145807	1					
ANR	1146193	ElseStatement	else		1145807	0					
ANR	1146194	CompoundStatement		93:2:2733:2749	1145807	0					
ANR	1146195	IdentifierDeclStatement	int brackets = 1 ;	347:2:10662:10678	1145807	0	True				
ANR	1146196	IdentifierDecl	brackets = 1		1145807	0					
ANR	1146197	IdentifierDeclType	int		1145807	0					
ANR	1146198	Identifier	brackets		1145807	1					
ANR	1146199	AssignmentExpression	brackets = 1		1145807	2		=			
ANR	1146200	Identifier	brackets		1145807	0					
ANR	1146201	PrimaryExpression	1		1145807	1					
ANR	1146202	WhileStatement	while ( * pp != 0 )		1145807	1					
ANR	1146203	Condition	* pp != 0	348:9:10719:10726	1145807	0	True				
ANR	1146204	EqualityExpression	* pp != 0		1145807	0		!=			
ANR	1146205	UnaryOperationExpression	* pp		1145807	0					
ANR	1146206	UnaryOperator	*		1145807	0					
ANR	1146207	Identifier	pp		1145807	1					
ANR	1146208	PrimaryExpression	0		1145807	1					
ANR	1146209	CompoundStatement		94:19:2800:2800	1145807	1					
ANR	1146210	IfStatement	if ( * pp == '\\\\' && pp [ 1 ] != 0 )		1145807	0					
ANR	1146211	Condition	* pp == '\\\\' && pp [ 1 ] != 0	349:7:10738:10762	1145807	0	True				
ANR	1146212	AndExpression	* pp == '\\\\' && pp [ 1 ] != 0		1145807	0		&&			
ANR	1146213	EqualityExpression	* pp == '\\\\'		1145807	0		==			
ANR	1146214	UnaryOperationExpression	* pp		1145807	0					
ANR	1146215	UnaryOperator	*		1145807	0					
ANR	1146216	Identifier	pp		1145807	1					
ANR	1146217	PrimaryExpression	'\\\\'		1145807	1					
ANR	1146218	EqualityExpression	pp [ 1 ] != 0		1145807	1		!=			
ANR	1146219	ArrayIndexing	pp [ 1 ]		1145807	0					
ANR	1146220	Identifier	pp		1145807	0					
ANR	1146221	PrimaryExpression	1		1145807	1					
ANR	1146222	PrimaryExpression	0		1145807	1					
ANR	1146223	ExpressionStatement	pp ++	349:34:10765:10769	1145807	1	True				
ANR	1146224	PostIncDecOperationExpression	pp ++		1145807	0					
ANR	1146225	Identifier	pp		1145807	0					
ANR	1146226	IncDec	++		1145807	1					
ANR	1146227	ElseStatement	else		1145807	0					
ANR	1146228	IfStatement	if ( * pp == end_delimiter && -- brackets <= 0 )		1145807	0					
ANR	1146229	Condition	* pp == end_delimiter && -- brackets <= 0	350:12:10783:10821	1145807	0	True				
ANR	1146230	AndExpression	* pp == end_delimiter && -- brackets <= 0		1145807	0		&&			
ANR	1146231	EqualityExpression	* pp == end_delimiter		1145807	0		==			
ANR	1146232	UnaryOperationExpression	* pp		1145807	0					
ANR	1146233	UnaryOperator	*		1145807	0					
ANR	1146234	Identifier	pp		1145807	1					
ANR	1146235	Identifier	end_delimiter		1145807	1					
ANR	1146236	RelationalExpression	-- brackets <= 0		1145807	1		<=			
ANR	1146237	UnaryExpression	-- brackets		1145807	0					
ANR	1146238	IncDec	--		1145807	0					
ANR	1146239	Identifier	brackets		1145807	1					
ANR	1146240	PrimaryExpression	0		1145807	1					
ANR	1146241	BreakStatement	break ;	351:4:10828:10833	1145807	1	True				
ANR	1146242	ElseStatement	else		1145807	0					
ANR	1146243	IfStatement	if ( * pp == start_delimiter )		1145807	0					
ANR	1146244	Condition	* pp == start_delimiter	352:12:10847:10868	1145807	0	True				
ANR	1146245	EqualityExpression	* pp == start_delimiter		1145807	0		==			
ANR	1146246	UnaryOperationExpression	* pp		1145807	0					
ANR	1146247	UnaryOperator	*		1145807	0					
ANR	1146248	Identifier	pp		1145807	1					
ANR	1146249	Identifier	start_delimiter		1145807	1					
ANR	1146250	ExpressionStatement	brackets ++	353:4:10875:10885	1145807	1	True				
ANR	1146251	PostIncDecOperationExpression	brackets ++		1145807	0					
ANR	1146252	Identifier	brackets		1145807	0					
ANR	1146253	IncDec	++		1145807	1					
ANR	1146254	ExpressionStatement	pp ++	354:3:10890:10894	1145807	1	True				
ANR	1146255	PostIncDecOperationExpression	pp ++		1145807	0					
ANR	1146256	Identifier	pp		1145807	0					
ANR	1146257	IncDec	++		1145807	1					
ANR	1146258	IfStatement	if ( * pp == 0 )		1145807	40					
ANR	1146259	Condition	* pp == 0	358:5:10909:10916	1145807	0	True				
ANR	1146260	EqualityExpression	* pp == 0		1145807	0		==			
ANR	1146261	UnaryOperationExpression	* pp		1145807	0					
ANR	1146262	UnaryOperator	*		1145807	0					
ANR	1146263	Identifier	pp		1145807	1					
ANR	1146264	PrimaryExpression	0		1145807	1					
ANR	1146265	CompoundStatement		104:15:2990:2990	1145807	1					
ANR	1146266	IfStatement	if ( pp < regex + regex_len )		1145807	0					
ANR	1146267	Condition	pp < regex + regex_len	359:6:10927:10948	1145807	0	True				
ANR	1146268	RelationalExpression	pp < regex + regex_len		1145807	0		<			
ANR	1146269	Identifier	pp		1145807	0					
ANR	1146270	AdditiveExpression	regex + regex_len		1145807	1		+			
ANR	1146271	Identifier	regex		1145807	0					
ANR	1146272	Identifier	regex_len		1145807	1					
ANR	1146273	CompoundStatement		105:30:3022:3022	1145807	1					
ANR	1146274	Statement	php_error_docref	360:3:10956:10971	1145807	0	True				
ANR	1146275	Statement	(	360:19:10972:10972	1145807	1	True				
ANR	1146276	Statement	NULL	360:20:10973:10976	1145807	2	True				
ANR	1146277	Statement	TSRMLS_CC	360:25:10978:10986	1145807	3	True				
ANR	1146278	Statement	","	360:34:10987:10987	1145807	4	True				
ANR	1146279	Statement	E_WARNING	360:35:10988:10996	1145807	5	True				
ANR	1146280	Statement	","	360:44:10997:10997	1145807	6	True				
ANR	1146281	Statement	"""Null byte in regex"""	360:46:10999:11018	1145807	7	True				
ANR	1146282	Statement	)	360:66:11019:11019	1145807	8	True				
ANR	1146283	ExpressionStatement		360:67:11020:11020	1145807	9	True				
ANR	1146284	ElseStatement	else		1145807	0					
ANR	1146285	IfStatement	if ( start_delimiter == end_delimiter )		1145807	0					
ANR	1146286	Condition	start_delimiter == end_delimiter	361:13:11035:11066	1145807	0	True				
ANR	1146287	EqualityExpression	start_delimiter == end_delimiter		1145807	0		==			
ANR	1146288	Identifier	start_delimiter		1145807	0					
ANR	1146289	Identifier	end_delimiter		1145807	1					
ANR	1146290	CompoundStatement		107:47:3140:3140	1145807	1					
ANR	1146291	Statement	php_error_docref	362:3:11074:11089	1145807	0	True				
ANR	1146292	Statement	(	362:19:11090:11090	1145807	1	True				
ANR	1146293	Statement	NULL	362:20:11091:11094	1145807	2	True				
ANR	1146294	Statement	TSRMLS_CC	362:25:11096:11104	1145807	3	True				
ANR	1146295	Statement	","	362:34:11105:11105	1145807	4	True				
ANR	1146296	Statement	E_WARNING	362:35:11106:11114	1145807	5	True				
ANR	1146297	Statement	","	362:44:11115:11115	1145807	6	True				
ANR	1146298	Statement	"""No ending delimiter '%c' found"""	362:46:11117:11148	1145807	7	True				
ANR	1146299	Statement	","	362:78:11149:11149	1145807	8	True				
ANR	1146300	Statement	delimiter	362:80:11151:11159	1145807	9	True				
ANR	1146301	Statement	)	362:89:11160:11160	1145807	10	True				
ANR	1146302	ExpressionStatement		362:90:11161:11161	1145807	11	True				
ANR	1146303	ElseStatement	else		1145807	0					
ANR	1146304	CompoundStatement		109:9:3243:3243	1145807	0					
ANR	1146305	Statement	php_error_docref	364:3:11177:11192	1145807	0	True				
ANR	1146306	Statement	(	364:19:11193:11193	1145807	1	True				
ANR	1146307	Statement	NULL	364:20:11194:11197	1145807	2	True				
ANR	1146308	Statement	TSRMLS_CC	364:25:11199:11207	1145807	3	True				
ANR	1146309	Statement	","	364:34:11208:11208	1145807	4	True				
ANR	1146310	Statement	E_WARNING	364:35:11209:11217	1145807	5	True				
ANR	1146311	Statement	","	364:44:11218:11218	1145807	6	True				
ANR	1146312	Statement	"""No ending matching delimiter '%c' found"""	364:46:11220:11260	1145807	7	True				
ANR	1146313	Statement	","	364:87:11261:11261	1145807	8	True				
ANR	1146314	Statement	delimiter	364:89:11263:11271	1145807	9	True				
ANR	1146315	Statement	)	364:98:11272:11272	1145807	10	True				
ANR	1146316	ExpressionStatement		364:99:11273:11273	1145807	11	True				
ANR	1146317	ReturnStatement	return NULL ;	366:2:11281:11292	1145807	1	True				
ANR	1146318	Identifier	NULL		1145807	0					
ANR	1146319	ExpressionStatement	"pattern = estrndup ( p , pp - p )"	370:1:11341:11368	1145807	41	True				
ANR	1146320	AssignmentExpression	"pattern = estrndup ( p , pp - p )"		1145807	0		=			
ANR	1146321	Identifier	pattern		1145807	0					
ANR	1146322	CallExpression	"estrndup ( p , pp - p )"		1145807	1					
ANR	1146323	Callee	estrndup		1145807	0					
ANR	1146324	Identifier	estrndup		1145807	0					
ANR	1146325	ArgumentList	p		1145807	1					
ANR	1146326	Argument	p		1145807	0					
ANR	1146327	Identifier	p		1145807	0					
ANR	1146328	Argument	pp - p		1145807	1					
ANR	1146329	AdditiveExpression	pp - p		1145807	0		-			
ANR	1146330	Identifier	pp		1145807	0					
ANR	1146331	Identifier	p		1145807	1					
ANR	1146332	ExpressionStatement	pp ++	373:1:11402:11406	1145807	42	True				
ANR	1146333	PostIncDecOperationExpression	pp ++		1145807	0					
ANR	1146334	Identifier	pp		1145807	0					
ANR	1146335	IncDec	++		1145807	1					
ANR	1146336	WhileStatement	while ( pp < regex + regex_len )		1145807	43					
ANR	1146337	Condition	pp < regex + regex_len	377:8:11538:11559	1145807	0	True				
ANR	1146338	RelationalExpression	pp < regex + regex_len		1145807	0		<			
ANR	1146339	Identifier	pp		1145807	0					
ANR	1146340	AdditiveExpression	regex + regex_len		1145807	1		+			
ANR	1146341	Identifier	regex		1145807	0					
ANR	1146342	Identifier	regex_len		1145807	1					
ANR	1146343	CompoundStatement		123:32:3633:3633	1145807	1					
ANR	1146344	SwitchStatement	switch ( * pp ++ )		1145807	0					
ANR	1146345	Condition	* pp ++	378:10:11574:11578	1145807	0	True				
ANR	1146346	UnaryOperationExpression	* pp ++		1145807	0					
ANR	1146347	UnaryOperator	*		1145807	0					
ANR	1146348	PostIncDecOperationExpression	pp ++		1145807	1					
ANR	1146349	Identifier	pp		1145807	0					
ANR	1146350	IncDec	++		1145807	1					
ANR	1146351	CompoundStatement		124:17:3652:3652	1145807	1					
ANR	1146352	Label	case 'i' :	380:3:11619:11627	1145807	0	True				
ANR	1146353	ExpressionStatement	coptions |= PCRE_CASELESS	380:13:11629:11654	1145807	1	True				
ANR	1146354	AssignmentExpression	coptions |= PCRE_CASELESS		1145807	0		|=			
ANR	1146355	Identifier	coptions		1145807	0					
ANR	1146356	Identifier	PCRE_CASELESS		1145807	1					
ANR	1146357	BreakStatement	break ;	380:41:11657:11662	1145807	2	True				
ANR	1146358	Label	case 'm' :	381:3:11667:11675	1145807	3	True				
ANR	1146359	ExpressionStatement	coptions |= PCRE_MULTILINE	381:13:11677:11703	1145807	4	True				
ANR	1146360	AssignmentExpression	coptions |= PCRE_MULTILINE		1145807	0		|=			
ANR	1146361	Identifier	coptions		1145807	0					
ANR	1146362	Identifier	PCRE_MULTILINE		1145807	1					
ANR	1146363	BreakStatement	break ;	381:42:11706:11711	1145807	5	True				
ANR	1146364	Label	case 's' :	382:3:11716:11724	1145807	6	True				
ANR	1146365	ExpressionStatement	coptions |= PCRE_DOTALL	382:13:11726:11749	1145807	7	True				
ANR	1146366	AssignmentExpression	coptions |= PCRE_DOTALL		1145807	0		|=			
ANR	1146367	Identifier	coptions		1145807	0					
ANR	1146368	Identifier	PCRE_DOTALL		1145807	1					
ANR	1146369	BreakStatement	break ;	382:39:11752:11757	1145807	8	True				
ANR	1146370	Label	case 'x' :	383:3:11762:11770	1145807	9	True				
ANR	1146371	ExpressionStatement	coptions |= PCRE_EXTENDED	383:13:11772:11797	1145807	10	True				
ANR	1146372	AssignmentExpression	coptions |= PCRE_EXTENDED		1145807	0		|=			
ANR	1146373	Identifier	coptions		1145807	0					
ANR	1146374	Identifier	PCRE_EXTENDED		1145807	1					
ANR	1146375	BreakStatement	break ;	383:41:11800:11805	1145807	11	True				
ANR	1146376	Label	case 'A' :	386:3:11842:11850	1145807	12	True				
ANR	1146377	ExpressionStatement	coptions |= PCRE_ANCHORED	386:13:11852:11877	1145807	13	True				
ANR	1146378	AssignmentExpression	coptions |= PCRE_ANCHORED		1145807	0		|=			
ANR	1146379	Identifier	coptions		1145807	0					
ANR	1146380	Identifier	PCRE_ANCHORED		1145807	1					
ANR	1146381	BreakStatement	break ;	386:41:11880:11885	1145807	14	True				
ANR	1146382	Label	case 'D' :	387:3:11890:11898	1145807	15	True				
ANR	1146383	ExpressionStatement	coptions |= PCRE_DOLLAR_ENDONLY	387:13:11900:11931	1145807	16	True				
ANR	1146384	AssignmentExpression	coptions |= PCRE_DOLLAR_ENDONLY		1145807	0		|=			
ANR	1146385	Identifier	coptions		1145807	0					
ANR	1146386	Identifier	PCRE_DOLLAR_ENDONLY		1145807	1					
ANR	1146387	BreakStatement	break ;	387:45:11932:11937	1145807	17	True				
ANR	1146388	Label	case 'S' :	388:3:11942:11950	1145807	18	True				
ANR	1146389	ExpressionStatement	do_study = 1	388:13:11952:11965	1145807	19	True				
ANR	1146390	AssignmentExpression	do_study = 1		1145807	0		=			
ANR	1146391	Identifier	do_study		1145807	0					
ANR	1146392	PrimaryExpression	1		1145807	1					
ANR	1146393	BreakStatement	break ;	388:32:11971:11976	1145807	20	True				
ANR	1146394	Label	case 'U' :	389:3:11981:11989	1145807	21	True				
ANR	1146395	ExpressionStatement	coptions |= PCRE_UNGREEDY	389:13:11991:12016	1145807	22	True				
ANR	1146396	AssignmentExpression	coptions |= PCRE_UNGREEDY		1145807	0		|=			
ANR	1146397	Identifier	coptions		1145807	0					
ANR	1146398	Identifier	PCRE_UNGREEDY		1145807	1					
ANR	1146399	BreakStatement	break ;	389:41:12019:12024	1145807	23	True				
ANR	1146400	Label	case 'X' :	390:3:12029:12037	1145807	24	True				
ANR	1146401	ExpressionStatement	coptions |= PCRE_EXTRA	390:13:12039:12061	1145807	25	True				
ANR	1146402	AssignmentExpression	coptions |= PCRE_EXTRA		1145807	0		|=			
ANR	1146403	Identifier	coptions		1145807	0					
ANR	1146404	Identifier	PCRE_EXTRA		1145807	1					
ANR	1146405	BreakStatement	break ;	390:39:12065:12070	1145807	26	True				
ANR	1146406	Label	case 'u' :	391:3:12075:12083	1145807	27	True				
ANR	1146407	ExpressionStatement	coptions |= PCRE_UTF8	391:13:12085:12106	1145807	28	True				
ANR	1146408	AssignmentExpression	coptions |= PCRE_UTF8		1145807	0		|=			
ANR	1146409	Identifier	coptions		1145807	0					
ANR	1146410	Identifier	PCRE_UTF8		1145807	1					
ANR	1146411	ExpressionStatement	coptions |= PCRE_UCP	396:6:12316:12336	1145807	29	True				
ANR	1146412	AssignmentExpression	coptions |= PCRE_UCP		1145807	0		|=			
ANR	1146413	Identifier	coptions		1145807	0					
ANR	1146414	Identifier	PCRE_UCP		1145807	1					
ANR	1146415	BreakStatement	break ;	398:4:12349:12354	1145807	30	True				
ANR	1146416	Label	case 'J' :	399:3:12359:12367	1145807	31	True				
ANR	1146417	ExpressionStatement	coptions |= PCRE_DUPNAMES	399:13:12369:12394	1145807	32	True				
ANR	1146418	AssignmentExpression	coptions |= PCRE_DUPNAMES		1145807	0		|=			
ANR	1146419	Identifier	coptions		1145807	0					
ANR	1146420	Identifier	PCRE_DUPNAMES		1145807	1					
ANR	1146421	BreakStatement	break ;	399:41:12397:12402	1145807	33	True				
ANR	1146422	Label	case 'e' :	402:3:12437:12445	1145807	34	True				
ANR	1146423	ExpressionStatement	poptions |= PREG_REPLACE_EVAL	402:13:12447:12476	1145807	35	True				
ANR	1146424	AssignmentExpression	poptions |= PREG_REPLACE_EVAL		1145807	0		|=			
ANR	1146425	Identifier	poptions		1145807	0					
ANR	1146426	Identifier	PREG_REPLACE_EVAL		1145807	1					
ANR	1146427	BreakStatement	break ;	402:44:12478:12483	1145807	36	True				
ANR	1146428	Label	case ' ' :	404:3:12489:12497	1145807	37	True				
ANR	1146429	Label	case '\\n' :	405:3:12502:12511	1145807	38	True				
ANR	1146430	BreakStatement	break ;	406:4:12517:12522	1145807	39	True				
ANR	1146431	Label	default :	408:3:12528:12535	1145807	40	True				
ANR	1146432	Identifier	default		1145807	0					
ANR	1146433	IfStatement	if ( pp [ - 1 ] )		1145807	41					
ANR	1146434	Condition	pp [ - 1 ]	409:8:12545:12550	1145807	0	True				
ANR	1146435	ArrayIndexing	pp [ - 1 ]		1145807	0					
ANR	1146436	Identifier	pp		1145807	0					
ANR	1146437	UnaryOperationExpression	- 1		1145807	1					
ANR	1146438	UnaryOperator	-		1145807	0					
ANR	1146439	PrimaryExpression	1		1145807	1					
ANR	1146440	CompoundStatement		155:16:4624:4624	1145807	1					
ANR	1146441	Statement	php_error_docref	410:5:12560:12575	1145807	0	True				
ANR	1146442	Statement	(	410:21:12576:12576	1145807	1	True				
ANR	1146443	Statement	NULL	410:22:12577:12580	1145807	2	True				
ANR	1146444	Statement	TSRMLS_CC	410:27:12582:12590	1145807	3	True				
ANR	1146445	Statement	","	410:36:12591:12591	1145807	4	True				
ANR	1146446	Statement	E_WARNING	410:37:12592:12600	1145807	5	True				
ANR	1146447	Statement	","	410:46:12601:12601	1145807	6	True				
ANR	1146448	Statement	"""Unknown modifier '%c'"""	410:48:12603:12625	1145807	7	True				
ANR	1146449	Statement	","	410:71:12626:12626	1145807	8	True				
ANR	1146450	Statement	pp	410:73:12628:12629	1145807	9	True				
ANR	1146451	Statement	[	410:75:12630:12630	1145807	10	True				
ANR	1146452	Statement	-	410:76:12631:12631	1145807	11	True				
ANR	1146453	Statement	1	410:77:12632:12632	1145807	12	True				
ANR	1146454	Statement	]	410:78:12633:12633	1145807	13	True				
ANR	1146455	Statement	)	410:79:12634:12634	1145807	14	True				
ANR	1146456	ExpressionStatement		410:80:12635:12635	1145807	15	True				
ANR	1146457	ElseStatement	else		1145807	0					
ANR	1146458	CompoundStatement		157:11:4719:4719	1145807	0					
ANR	1146459	Statement	php_error_docref	412:5:12655:12670	1145807	0	True				
ANR	1146460	Statement	(	412:21:12671:12671	1145807	1	True				
ANR	1146461	Statement	NULL	412:22:12672:12675	1145807	2	True				
ANR	1146462	Statement	TSRMLS_CC	412:27:12677:12685	1145807	3	True				
ANR	1146463	Statement	","	412:36:12686:12686	1145807	4	True				
ANR	1146464	Statement	E_WARNING	412:37:12687:12695	1145807	5	True				
ANR	1146465	Statement	","	412:46:12696:12696	1145807	6	True				
ANR	1146466	Statement	"""Null byte in regex"""	412:48:12698:12717	1145807	7	True				
ANR	1146467	Statement	)	412:68:12718:12718	1145807	8	True				
ANR	1146468	ExpressionStatement		412:69:12719:12719	1145807	9	True				
ANR	1146469	ExpressionStatement	efree ( pattern )	414:4:12731:12745	1145807	42	True				
ANR	1146470	CallExpression	efree ( pattern )		1145807	0					
ANR	1146471	Callee	efree		1145807	0					
ANR	1146472	Identifier	efree		1145807	0					
ANR	1146473	ArgumentList	pattern		1145807	1					
ANR	1146474	Argument	pattern		1145807	0					
ANR	1146475	Identifier	pattern		1145807	0					
ANR	1146476	ReturnStatement	return NULL ;	415:4:12751:12762	1145807	43	True				
ANR	1146477	Identifier	NULL		1145807	0					
ANR	1146478	IfStatement	"if ( strcmp ( locale , ""C"" ) )"		1145807	44					
ANR	1146479	Condition	"strcmp ( locale , ""C"" )"	420:5:12796:12814	1145807	0	True				
ANR	1146480	CallExpression	"strcmp ( locale , ""C"" )"		1145807	0					
ANR	1146481	Callee	strcmp		1145807	0					
ANR	1146482	Identifier	strcmp		1145807	0					
ANR	1146483	ArgumentList	locale		1145807	1					
ANR	1146484	Argument	locale		1145807	0					
ANR	1146485	Identifier	locale		1145807	0					
ANR	1146486	Argument	"""C"""		1145807	1					
ANR	1146487	PrimaryExpression	"""C"""		1145807	0					
ANR	1146488	ExpressionStatement	tables = pcre_maketables ( )	421:2:12819:12845	1145807	1	True				
ANR	1146489	AssignmentExpression	tables = pcre_maketables ( )		1145807	0		=			
ANR	1146490	Identifier	tables		1145807	0					
ANR	1146491	CallExpression	pcre_maketables ( )		1145807	1					
ANR	1146492	Callee	pcre_maketables		1145807	0					
ANR	1146493	Identifier	pcre_maketables		1145807	0					
ANR	1146494	ArgumentList			1145807	1					
ANR	1146495	ExpressionStatement	"re = pcre_compile ( pattern , coptions , & error , & erroffset , tables )"	425:1:12924:13016	1145807	45	True				
ANR	1146496	AssignmentExpression	"re = pcre_compile ( pattern , coptions , & error , & erroffset , tables )"		1145807	0		=			
ANR	1146497	Identifier	re		1145807	0					
ANR	1146498	CallExpression	"pcre_compile ( pattern , coptions , & error , & erroffset , tables )"		1145807	1					
ANR	1146499	Callee	pcre_compile		1145807	0					
ANR	1146500	Identifier	pcre_compile		1145807	0					
ANR	1146501	ArgumentList	pattern		1145807	1					
ANR	1146502	Argument	pattern		1145807	0					
ANR	1146503	Identifier	pattern		1145807	0					
ANR	1146504	Argument	coptions		1145807	1					
ANR	1146505	Identifier	coptions		1145807	0					
ANR	1146506	Argument	& error		1145807	2					
ANR	1146507	UnaryOperationExpression	& error		1145807	0					
ANR	1146508	UnaryOperator	&		1145807	0					
ANR	1146509	Identifier	error		1145807	1					
ANR	1146510	Argument	& erroffset		1145807	3					
ANR	1146511	UnaryOperationExpression	& erroffset		1145807	0					
ANR	1146512	UnaryOperator	&		1145807	0					
ANR	1146513	Identifier	erroffset		1145807	1					
ANR	1146514	Argument	tables		1145807	4					
ANR	1146515	Identifier	tables		1145807	0					
ANR	1146516	IfStatement	if ( re == NULL )		1145807	46					
ANR	1146517	Condition	re == NULL	431:5:13024:13033	1145807	0	True				
ANR	1146518	EqualityExpression	re == NULL		1145807	0		==			
ANR	1146519	Identifier	re		1145807	0					
ANR	1146520	Identifier	NULL		1145807	1					
ANR	1146521	CompoundStatement		177:17:5107:5107	1145807	1					
ANR	1146522	Statement	php_error_docref	432:2:13040:13055	1145807	0	True				
ANR	1146523	Statement	(	432:18:13056:13056	1145807	1	True				
ANR	1146524	Statement	NULL	432:19:13057:13060	1145807	2	True				
ANR	1146525	Statement	TSRMLS_CC	432:24:13062:13070	1145807	3	True				
ANR	1146526	Statement	","	432:33:13071:13071	1145807	4	True				
ANR	1146527	Statement	E_WARNING	432:34:13072:13080	1145807	5	True				
ANR	1146528	Statement	","	432:43:13081:13081	1145807	6	True				
ANR	1146529	Statement	"""Compilation failed: %s at offset %d"""	432:45:13083:13119	1145807	7	True				
ANR	1146530	Statement	","	432:82:13120:13120	1145807	8	True				
ANR	1146531	Statement	error	432:84:13122:13126	1145807	9	True				
ANR	1146532	Statement	","	432:89:13127:13127	1145807	10	True				
ANR	1146533	Statement	erroffset	432:91:13129:13137	1145807	11	True				
ANR	1146534	Statement	)	432:100:13138:13138	1145807	12	True				
ANR	1146535	ExpressionStatement		432:101:13139:13139	1145807	13	True				
ANR	1146536	ExpressionStatement	efree ( pattern )	433:2:13143:13157	1145807	14	True				
ANR	1146537	CallExpression	efree ( pattern )		1145807	0					
ANR	1146538	Callee	efree		1145807	0					
ANR	1146539	Identifier	efree		1145807	0					
ANR	1146540	ArgumentList	pattern		1145807	1					
ANR	1146541	Argument	pattern		1145807	0					
ANR	1146542	Identifier	pattern		1145807	0					
ANR	1146543	IfStatement	if ( tables )		1145807	15					
ANR	1146544	Condition	tables	434:6:13165:13170	1145807	0	True				
ANR	1146545	Identifier	tables		1145807	0					
ANR	1146546	CompoundStatement		180:14:5244:5244	1145807	1					
ANR	1146547	ExpressionStatement	"pefree ( ( void * ) tables , 1 )"	435:3:13178:13202	1145807	0	True				
ANR	1146548	CallExpression	"pefree ( ( void * ) tables , 1 )"		1145807	0					
ANR	1146549	Callee	pefree		1145807	0					
ANR	1146550	Identifier	pefree		1145807	0					
ANR	1146551	ArgumentList	( void * ) tables		1145807	1					
ANR	1146552	Argument	( void * ) tables		1145807	0					
ANR	1146553	CastExpression	( void * ) tables		1145807	0					
ANR	1146554	CastTarget	void *		1145807	0					
ANR	1146555	Identifier	tables		1145807	1					
ANR	1146556	Argument	1		1145807	1					
ANR	1146557	PrimaryExpression	1		1145807	0					
ANR	1146558	ReturnStatement	return NULL ;	437:2:13210:13221	1145807	16	True				
ANR	1146559	Identifier	NULL		1145807	0					
ANR	1146560	IfStatement	if ( do_study )		1145807	47					
ANR	1146561	Condition	do_study	442:5:13348:13355	1145807	0	True				
ANR	1146562	Identifier	do_study		1145807	0					
ANR	1146563	CompoundStatement		188:15:5429:5429	1145807	1					
ANR	1146564	ExpressionStatement	"extra = pcre_study ( re , soptions , & error )"	443:2:13362:13402	1145807	0	True				
ANR	1146565	AssignmentExpression	"extra = pcre_study ( re , soptions , & error )"		1145807	0		=			
ANR	1146566	Identifier	extra		1145807	0					
ANR	1146567	CallExpression	"pcre_study ( re , soptions , & error )"		1145807	1					
ANR	1146568	Callee	pcre_study		1145807	0					
ANR	1146569	Identifier	pcre_study		1145807	0					
ANR	1146570	ArgumentList	re		1145807	1					
ANR	1146571	Argument	re		1145807	0					
ANR	1146572	Identifier	re		1145807	0					
ANR	1146573	Argument	soptions		1145807	1					
ANR	1146574	Identifier	soptions		1145807	0					
ANR	1146575	Argument	& error		1145807	2					
ANR	1146576	UnaryOperationExpression	& error		1145807	0					
ANR	1146577	UnaryOperator	&		1145807	0					
ANR	1146578	Identifier	error		1145807	1					
ANR	1146579	IfStatement	if ( extra )		1145807	1					
ANR	1146580	Condition	extra	444:6:13410:13414	1145807	0	True				
ANR	1146581	Identifier	extra		1145807	0					
ANR	1146582	CompoundStatement		190:13:5488:5488	1145807	1					
ANR	1146583	ExpressionStatement	extra -> flags |= PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION	445:3:13422:13495	1145807	0	True				
ANR	1146584	AssignmentExpression	extra -> flags |= PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION		1145807	0		|=			
ANR	1146585	PtrMemberAccess	extra -> flags		1145807	0					
ANR	1146586	Identifier	extra		1145807	0					
ANR	1146587	Identifier	flags		1145807	1					
ANR	1146588	InclusiveOrExpression	PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION		1145807	1		|			
ANR	1146589	Identifier	PCRE_EXTRA_MATCH_LIMIT		1145807	0					
ANR	1146590	Identifier	PCRE_EXTRA_MATCH_LIMIT_RECURSION		1145807	1					
ANR	1146591	IfStatement	if ( error != NULL )		1145807	2					
ANR	1146592	Condition	error != NULL	447:6:13507:13519	1145807	0	True				
ANR	1146593	EqualityExpression	error != NULL		1145807	0		!=			
ANR	1146594	Identifier	error		1145807	0					
ANR	1146595	Identifier	NULL		1145807	1					
ANR	1146596	CompoundStatement		193:21:5593:5593	1145807	1					
ANR	1146597	Statement	php_error_docref	448:3:13527:13542	1145807	0	True				
ANR	1146598	Statement	(	448:19:13543:13543	1145807	1	True				
ANR	1146599	Statement	NULL	448:20:13544:13547	1145807	2	True				
ANR	1146600	Statement	TSRMLS_CC	448:25:13549:13557	1145807	3	True				
ANR	1146601	Statement	","	448:34:13558:13558	1145807	4	True				
ANR	1146602	Statement	E_WARNING	448:36:13560:13568	1145807	5	True				
ANR	1146603	Statement	","	448:45:13569:13569	1145807	6	True				
ANR	1146604	Statement	"""Error while studying pattern"""	448:47:13571:13600	1145807	7	True				
ANR	1146605	Statement	)	448:77:13601:13601	1145807	8	True				
ANR	1146606	ExpressionStatement		448:78:13602:13602	1145807	9	True				
ANR	1146607	ElseStatement	else		1145807	0					
ANR	1146608	CompoundStatement		196:8:5687:5687	1145807	0					
ANR	1146609	ExpressionStatement	extra = NULL	451:2:13620:13632	1145807	0	True				
ANR	1146610	AssignmentExpression	extra = NULL		1145807	0		=			
ANR	1146611	Identifier	extra		1145807	0					
ANR	1146612	Identifier	NULL		1145807	1					
ANR	1146613	ExpressionStatement	efree ( pattern )	454:1:13639:13653	1145807	48	True				
ANR	1146614	CallExpression	efree ( pattern )		1145807	0					
ANR	1146615	Callee	efree		1145807	0					
ANR	1146616	Identifier	efree		1145807	0					
ANR	1146617	ArgumentList	pattern		1145807	1					
ANR	1146618	Argument	pattern		1145807	0					
ANR	1146619	Identifier	pattern		1145807	0					
ANR	1146620	IfStatement	if ( zend_hash_num_elements ( & PCRE_G ( pcre_cache ) ) == PCRE_CACHE_SIZE )		1145807	49					
ANR	1146621	Condition	zend_hash_num_elements ( & PCRE_G ( pcre_cache ) ) == PCRE_CACHE_SIZE	461:5:13836:13897	1145807	0	True				
ANR	1146622	EqualityExpression	zend_hash_num_elements ( & PCRE_G ( pcre_cache ) ) == PCRE_CACHE_SIZE		1145807	0		==			
ANR	1146623	CallExpression	zend_hash_num_elements ( & PCRE_G ( pcre_cache ) )		1145807	0					
ANR	1146624	Callee	zend_hash_num_elements		1145807	0					
ANR	1146625	Identifier	zend_hash_num_elements		1145807	0					
ANR	1146626	ArgumentList	& PCRE_G ( pcre_cache )		1145807	1					
ANR	1146627	Argument	& PCRE_G ( pcre_cache )		1145807	0					
ANR	1146628	UnaryOperationExpression	& PCRE_G ( pcre_cache )		1145807	0					
ANR	1146629	UnaryOperator	&		1145807	0					
ANR	1146630	CallExpression	PCRE_G ( pcre_cache )		1145807	1					
ANR	1146631	Callee	PCRE_G		1145807	0					
ANR	1146632	Identifier	PCRE_G		1145807	0					
ANR	1146633	ArgumentList	pcre_cache		1145807	1					
ANR	1146634	Argument	pcre_cache		1145807	0					
ANR	1146635	Identifier	pcre_cache		1145807	0					
ANR	1146636	Identifier	PCRE_CACHE_SIZE		1145807	1					
ANR	1146637	CompoundStatement		208:2:5975:6010	1145807	1					
ANR	1146638	IdentifierDeclStatement	int num_clean = PCRE_CACHE_SIZE / 8 ;	462:2:13904:13939	1145807	0	True				
ANR	1146639	IdentifierDecl	num_clean = PCRE_CACHE_SIZE / 8		1145807	0					
ANR	1146640	IdentifierDeclType	int		1145807	0					
ANR	1146641	Identifier	num_clean		1145807	1					
ANR	1146642	AssignmentExpression	num_clean = PCRE_CACHE_SIZE / 8		1145807	2		=			
ANR	1146643	Identifier	num_clean		1145807	0					
ANR	1146644	MultiplicativeExpression	PCRE_CACHE_SIZE / 8		1145807	1		/			
ANR	1146645	Identifier	PCRE_CACHE_SIZE		1145807	0					
ANR	1146646	PrimaryExpression	8		1145807	1					
ANR	1146647	Statement	zend_hash_apply_with_argument	463:2:13943:13971	1145807	1	True				
ANR	1146648	Statement	(	463:31:13972:13972	1145807	2	True				
ANR	1146649	Statement	&	463:32:13973:13973	1145807	3	True				
ANR	1146650	Statement	PCRE_G	463:33:13974:13979	1145807	4	True				
ANR	1146651	Statement	(	463:39:13980:13980	1145807	5	True				
ANR	1146652	Statement	pcre_cache	463:40:13981:13990	1145807	6	True				
ANR	1146653	Statement	)	463:50:13991:13991	1145807	7	True				
ANR	1146654	Statement	","	463:51:13992:13992	1145807	8	True				
ANR	1146655	Statement	pcre_clean_cache	463:53:13994:14009	1145807	9	True				
ANR	1146656	Statement	","	463:69:14010:14010	1145807	10	True				
ANR	1146657	Statement	&	463:71:14012:14012	1145807	11	True				
ANR	1146658	Statement	num_clean	463:72:14013:14021	1145807	12	True				
ANR	1146659	Statement	TSRMLS_CC	463:82:14023:14031	1145807	13	True				
ANR	1146660	Statement	)	463:91:14032:14032	1145807	14	True				
ANR	1146661	ExpressionStatement		463:92:14033:14033	1145807	15	True				
ANR	1146662	ExpressionStatement	new_entry . re = re	467:1:14103:14120	1145807	50	True				
ANR	1146663	AssignmentExpression	new_entry . re = re		1145807	0		=			
ANR	1146664	MemberAccess	new_entry . re		1145807	0					
ANR	1146665	Identifier	new_entry		1145807	0					
ANR	1146666	Identifier	re		1145807	1					
ANR	1146667	Identifier	re		1145807	1					
ANR	1146668	ExpressionStatement	new_entry . extra = extra	468:1:14123:14146	1145807	51	True				
ANR	1146669	AssignmentExpression	new_entry . extra = extra		1145807	0		=			
ANR	1146670	MemberAccess	new_entry . extra		1145807	0					
ANR	1146671	Identifier	new_entry		1145807	0					
ANR	1146672	Identifier	extra		1145807	1					
ANR	1146673	Identifier	extra		1145807	1					
ANR	1146674	ExpressionStatement	new_entry . preg_options = poptions	469:1:14149:14182	1145807	52	True				
ANR	1146675	AssignmentExpression	new_entry . preg_options = poptions		1145807	0		=			
ANR	1146676	MemberAccess	new_entry . preg_options		1145807	0					
ANR	1146677	Identifier	new_entry		1145807	0					
ANR	1146678	Identifier	preg_options		1145807	1					
ANR	1146679	Identifier	poptions		1145807	1					
ANR	1146680	ExpressionStatement	new_entry . compile_options = coptions	470:1:14185:14221	1145807	53	True				
ANR	1146681	AssignmentExpression	new_entry . compile_options = coptions		1145807	0		=			
ANR	1146682	MemberAccess	new_entry . compile_options		1145807	0					
ANR	1146683	Identifier	new_entry		1145807	0					
ANR	1146684	Identifier	compile_options		1145807	1					
ANR	1146685	Identifier	coptions		1145807	1					
ANR	1146686	ExpressionStatement	"new_entry . locale = pestrdup ( locale , 1 )"	472:1:14243:14281	1145807	54	True				
ANR	1146687	AssignmentExpression	"new_entry . locale = pestrdup ( locale , 1 )"		1145807	0		=			
ANR	1146688	MemberAccess	new_entry . locale		1145807	0					
ANR	1146689	Identifier	new_entry		1145807	0					
ANR	1146690	Identifier	locale		1145807	1					
ANR	1146691	CallExpression	"pestrdup ( locale , 1 )"		1145807	1					
ANR	1146692	Callee	pestrdup		1145807	0					
ANR	1146693	Identifier	pestrdup		1145807	0					
ANR	1146694	ArgumentList	locale		1145807	1					
ANR	1146695	Argument	locale		1145807	0					
ANR	1146696	Identifier	locale		1145807	0					
ANR	1146697	Argument	1		1145807	1					
ANR	1146698	PrimaryExpression	1		1145807	0					
ANR	1146699	ExpressionStatement	new_entry . tables = tables	473:1:14284:14309	1145807	55	True				
ANR	1146700	AssignmentExpression	new_entry . tables = tables		1145807	0		=			
ANR	1146701	MemberAccess	new_entry . tables		1145807	0					
ANR	1146702	Identifier	new_entry		1145807	0					
ANR	1146703	Identifier	tables		1145807	1					
ANR	1146704	Identifier	tables		1145807	1					
ANR	1146705	ExpressionStatement	new_entry . refcount = 0	475:1:14319:14341	1145807	56	True				
ANR	1146706	AssignmentExpression	new_entry . refcount = 0		1145807	0		=			
ANR	1146707	MemberAccess	new_entry . refcount		1145807	0					
ANR	1146708	Identifier	new_entry		1145807	0					
ANR	1146709	Identifier	refcount		1145807	1					
ANR	1146710	PrimaryExpression	0		1145807	1					
ANR	1146711	IfStatement	if ( IS_INTERNED ( regex ) )		1145807	57					
ANR	1146712	Condition	IS_INTERNED ( regex )	485:5:14702:14719	1145807	0	True				
ANR	1146713	CallExpression	IS_INTERNED ( regex )		1145807	0					
ANR	1146714	Callee	IS_INTERNED		1145807	0					
ANR	1146715	Identifier	IS_INTERNED		1145807	0					
ANR	1146716	ArgumentList	regex		1145807	1					
ANR	1146717	Argument	regex		1145807	0					
ANR	1146718	Identifier	regex		1145807	0					
ANR	1146719	CompoundStatement		231:25:6793:6793	1145807	1					
ANR	1146720	ExpressionStatement	"regex = tmp = estrndup ( regex , regex_len )"	486:2:14726:14766	1145807	0	True				
ANR	1146721	AssignmentExpression	"regex = tmp = estrndup ( regex , regex_len )"		1145807	0		=			
ANR	1146722	Identifier	regex		1145807	0					
ANR	1146723	AssignmentExpression	"tmp = estrndup ( regex , regex_len )"		1145807	1		=			
ANR	1146724	Identifier	tmp		1145807	0					
ANR	1146725	CallExpression	"estrndup ( regex , regex_len )"		1145807	1					
ANR	1146726	Callee	estrndup		1145807	0					
ANR	1146727	Identifier	estrndup		1145807	0					
ANR	1146728	ArgumentList	regex		1145807	1					
ANR	1146729	Argument	regex		1145807	0					
ANR	1146730	Identifier	regex		1145807	0					
ANR	1146731	Argument	regex_len		1145807	1					
ANR	1146732	Identifier	regex_len		1145807	0					
ANR	1146733	ExpressionStatement	"zend_hash_update ( & PCRE_G ( pcre_cache ) , regex , regex_len + 1 , ( void * ) & new_entry , sizeof ( pcre_cache_entry ) , ( void * * ) & pce )"	489:1:14773:14896	1145807	58	True				
ANR	1146734	CallExpression	"zend_hash_update ( & PCRE_G ( pcre_cache ) , regex , regex_len + 1 , ( void * ) & new_entry , sizeof ( pcre_cache_entry ) , ( void * * ) & pce )"		1145807	0					
ANR	1146735	Callee	zend_hash_update		1145807	0					
ANR	1146736	Identifier	zend_hash_update		1145807	0					
ANR	1146737	ArgumentList	& PCRE_G ( pcre_cache )		1145807	1					
ANR	1146738	Argument	& PCRE_G ( pcre_cache )		1145807	0					
ANR	1146739	UnaryOperationExpression	& PCRE_G ( pcre_cache )		1145807	0					
ANR	1146740	UnaryOperator	&		1145807	0					
ANR	1146741	CallExpression	PCRE_G ( pcre_cache )		1145807	1					
ANR	1146742	Callee	PCRE_G		1145807	0					
ANR	1146743	Identifier	PCRE_G		1145807	0					
ANR	1146744	ArgumentList	pcre_cache		1145807	1					
ANR	1146745	Argument	pcre_cache		1145807	0					
ANR	1146746	Identifier	pcre_cache		1145807	0					
ANR	1146747	Argument	regex		1145807	1					
ANR	1146748	Identifier	regex		1145807	0					
ANR	1146749	Argument	regex_len + 1		1145807	2					
ANR	1146750	AdditiveExpression	regex_len + 1		1145807	0		+			
ANR	1146751	Identifier	regex_len		1145807	0					
ANR	1146752	PrimaryExpression	1		1145807	1					
ANR	1146753	Argument	( void * ) & new_entry		1145807	3					
ANR	1146754	CastExpression	( void * ) & new_entry		1145807	0					
ANR	1146755	CastTarget	void *		1145807	0					
ANR	1146756	UnaryOperationExpression	& new_entry		1145807	1					
ANR	1146757	UnaryOperator	&		1145807	0					
ANR	1146758	Identifier	new_entry		1145807	1					
ANR	1146759	Argument	sizeof ( pcre_cache_entry )		1145807	4					
ANR	1146760	SizeofExpression	sizeof ( pcre_cache_entry )		1145807	0					
ANR	1146761	Sizeof	sizeof		1145807	0					
ANR	1146762	SizeofOperand	pcre_cache_entry		1145807	1					
ANR	1146763	Argument	( void * * ) & pce		1145807	5					
ANR	1146764	CastExpression	( void * * ) & pce		1145807	0					
ANR	1146765	CastTarget	void * *		1145807	0					
ANR	1146766	UnaryOperationExpression	& pce		1145807	1					
ANR	1146767	UnaryOperator	&		1145807	0					
ANR	1146768	Identifier	pce		1145807	1					
ANR	1146769	IfStatement	if ( tmp )		1145807	59					
ANR	1146770	Condition	tmp	492:5:14904:14906	1145807	0	True				
ANR	1146771	Identifier	tmp		1145807	0					
ANR	1146772	CompoundStatement		238:10:6980:6980	1145807	1					
ANR	1146773	ExpressionStatement	efree ( tmp )	493:2:14913:14923	1145807	0	True				
ANR	1146774	CallExpression	efree ( tmp )		1145807	0					
ANR	1146775	Callee	efree		1145807	0					
ANR	1146776	Identifier	efree		1145807	0					
ANR	1146777	ArgumentList	tmp		1145807	1					
ANR	1146778	Argument	tmp		1145807	0					
ANR	1146779	Identifier	tmp		1145807	0					
ANR	1146780	ReturnStatement	return pce ;	496:1:14930:14940	1145807	60	True				
ANR	1146781	Identifier	pce		1145807	0					
ANR	1146782	ReturnType	PHPAPI pcre_cache_entry *		1145807	1					
ANR	1146783	Identifier	pcre_get_compiled_regex_cache		1145807	2					
ANR	1146784	ParameterList	"char * regex , int regex_len TSRMLS_DC"		1145807	3					
ANR	1146785	Parameter	char * regex	254:55:7890:7900	1145807	0	True				
ANR	1146786	ParameterType	char *		1145807	0					
ANR	1146787	Identifier	regex		1145807	1					
ANR	1146788	Parameter	int regex_len TSRMLS_DC	254:68:7903:7925	1145807	1	True				
ANR	1146789	ParameterType	int regex_len		1145807	0					
ANR	1146790	Identifier	TSRMLS_DC		1145807	1					
ANR	1146791	CFGEntryNode	ENTRY		1145807		True				
ANR	1146792	CFGExitNode	EXIT		1145807		True				
ANR	1146793	Symbol	pp		1145807						
ANR	1146794	Symbol	& error		1145807						
ANR	1146795	Symbol	pce -> locale		1145807						
ANR	1146796	Symbol	strchr		1145807						
ANR	1146797	Symbol	PCRE_CACHE_SIZE		1145807						
ANR	1146798	Symbol	TSRMLS_DC		1145807						
ANR	1146799	Symbol	end_delimiter		1145807						
ANR	1146800	Symbol	PCRE_EXTENDED		1145807						
ANR	1146801	Symbol	regex_len		1145807						
ANR	1146802	Symbol	extra -> flags		1145807						
ANR	1146803	Symbol	new_entry . tables		1145807						
ANR	1146804	Symbol	zend_hash_find		1145807						
ANR	1146805	Symbol	tables		1145807						
ANR	1146806	Symbol	delimiter		1145807						
ANR	1146807	Symbol	tmp		1145807						
ANR	1146808	Symbol	pcre_cache		1145807						
ANR	1146809	Symbol	& erroffset		1145807						
ANR	1146810	Symbol	strcmp		1145807						
ANR	1146811	Symbol	NULL		1145807						
ANR	1146812	Symbol	poptions		1145807						
ANR	1146813	Symbol	isalnum		1145807						
ANR	1146814	Symbol	* pp		1145807						
ANR	1146815	Symbol	PCRE_ERROR_BADMAGIC		1145807						
ANR	1146816	Symbol	count		1145807						
ANR	1146817	Symbol	isspace		1145807						
ANR	1146818	Symbol	_ENABLE_PER_THREAD_LOCALE		1145807						
ANR	1146819	Symbol	PCRE_UNGREEDY		1145807						
ANR	1146820	Symbol	PCRE_UCP		1145807						
ANR	1146821	Symbol	start_delimiter		1145807						
ANR	1146822	Symbol	brackets		1145807						
ANR	1146823	Symbol	new_entry		1145807						
ANR	1146824	Symbol	regex		1145807						
ANR	1146825	Symbol	* extra		1145807						
ANR	1146826	Symbol	re		1145807						
ANR	1146827	Symbol	* pp ++		1145807						
ANR	1146828	Symbol	IS_INTERNED		1145807						
ANR	1146829	Symbol	pce -> re		1145807						
ANR	1146830	Symbol	erroffset		1145807						
ANR	1146831	Symbol	LC_CTYPE		1145807						
ANR	1146832	Symbol	* pce		1145807						
ANR	1146833	Symbol	new_entry . compile_options		1145807						
ANR	1146834	Symbol	& delimiter		1145807						
ANR	1146835	Symbol	coptions		1145807						
ANR	1146836	Symbol	setlocale		1145807						
ANR	1146837	Symbol	pattern		1145807						
ANR	1146838	Symbol	PREG_REPLACE_EVAL		1145807						
ANR	1146839	Symbol	num_clean		1145807						
ANR	1146840	Symbol	PCRE_EXTRA		1145807						
ANR	1146841	Symbol	error		1145807						
ANR	1146842	Symbol	locale		1145807						
ANR	1146843	Symbol	pestrdup		1145807						
ANR	1146844	Symbol	pcre_compile		1145807						
ANR	1146845	Symbol	estrndup		1145807						
ANR	1146846	Symbol	pce		1145807						
ANR	1146847	Symbol	new_entry . locale		1145807						
ANR	1146848	Symbol	extra		1145807						
ANR	1146849	Symbol	PCRE_INFO_CAPTURECOUNT		1145807						
ANR	1146850	Symbol	new_entry . preg_options		1145807						
ANR	1146851	Symbol	PCRE_CASELESS		1145807						
ANR	1146852	Symbol	new_entry . refcount		1145807						
ANR	1146853	Symbol	& new_entry		1145807						
ANR	1146854	Symbol	new_entry . extra		1145807						
ANR	1146855	Symbol	new_entry . re		1145807						
ANR	1146856	Symbol	pcre_maketables		1145807						
ANR	1146857	Symbol	SUCCESS		1145807						
ANR	1146858	Symbol	do_study		1145807						
ANR	1146859	Symbol	* ( unsigned char * ) p		1145807						
ANR	1146860	Symbol	zend_hash_num_elements		1145807						
ANR	1146861	Symbol	soptions		1145807						
ANR	1146862	Symbol	& PCRE_G		1145807						
ANR	1146863	Symbol	* p ++		1145807						
ANR	1146864	Symbol	PCRE_DOLLAR_ENDONLY		1145807						
ANR	1146865	Symbol	* ( unsigned char * ) & delimiter		1145807						
ANR	1146866	Symbol	PCRE_ANCHORED		1145807						
ANR	1146867	Symbol	pcre_study		1145807						
ANR	1146868	Symbol	PCRE_MULTILINE		1145807						
ANR	1146869	Symbol	pcre_fullinfo		1145807						
ANR	1146870	Symbol	PCRE_EXTRA_MATCH_LIMIT_RECURSION		1145807						
ANR	1146871	Symbol	p		1145807						
ANR	1146872	Symbol	PCRE_DUPNAMES		1145807						
ANR	1146873	Symbol	PCRE_DOTALL		1145807						
ANR	1146874	Symbol	PCRE_EXTRA_MATCH_LIMIT		1145807						
ANR	1146875	Symbol	& count		1145807						
ANR	1146876	Symbol	* p		1145807						
ANR	1146877	Symbol	PCRE_UTF8		1145807						
ANR	1146878	Symbol	& pce		1145807						
ANR	1146879	DeclStmt									
ANR	1146880	Decl							pcre_cache_entry	pcre_cache_entry *	pce
ANR	1146881	DeclStmt									
ANR	1146882	Decl							pcre_cache_entry	pcre_cache_entry *	pce
ANR	1146883	Function	add_offset_pair	538:0:15877:16435							
ANR	1146884	FunctionDef	"add_offset_pair (zval * result , char * str , int len , int offset , char * name)"		1146883	0					
ANR	1146885	CompoundStatement		539:0:15970:16435	1146883	0					
ANR	1146886	IdentifierDeclStatement	zval * match_pair ;	540:1:15973:15989	1146883	0	True				
ANR	1146887	IdentifierDecl	* match_pair		1146883	0					
ANR	1146888	IdentifierDeclType	zval *		1146883	0					
ANR	1146889	Identifier	match_pair		1146883	1					
ANR	1146890	ExpressionStatement	ALLOC_ZVAL ( match_pair )	542:1:15993:16015	1146883	1	True				
ANR	1146891	CallExpression	ALLOC_ZVAL ( match_pair )		1146883	0					
ANR	1146892	Callee	ALLOC_ZVAL		1146883	0					
ANR	1146893	Identifier	ALLOC_ZVAL		1146883	0					
ANR	1146894	ArgumentList	match_pair		1146883	1					
ANR	1146895	Argument	match_pair		1146883	0					
ANR	1146896	Identifier	match_pair		1146883	0					
ANR	1146897	ExpressionStatement	array_init ( match_pair )	543:1:16018:16040	1146883	2	True				
ANR	1146898	CallExpression	array_init ( match_pair )		1146883	0					
ANR	1146899	Callee	array_init		1146883	0					
ANR	1146900	Identifier	array_init		1146883	0					
ANR	1146901	ArgumentList	match_pair		1146883	1					
ANR	1146902	Argument	match_pair		1146883	0					
ANR	1146903	Identifier	match_pair		1146883	0					
ANR	1146904	ExpressionStatement	INIT_PZVAL ( match_pair )	544:1:16043:16065	1146883	3	True				
ANR	1146905	CallExpression	INIT_PZVAL ( match_pair )		1146883	0					
ANR	1146906	Callee	INIT_PZVAL		1146883	0					
ANR	1146907	Identifier	INIT_PZVAL		1146883	0					
ANR	1146908	ArgumentList	match_pair		1146883	1					
ANR	1146909	Argument	match_pair		1146883	0					
ANR	1146910	Identifier	match_pair		1146883	0					
ANR	1146911	ExpressionStatement	"add_next_index_stringl ( match_pair , str , len , 1 )"	547:1:16116:16163	1146883	4	True				
ANR	1146912	CallExpression	"add_next_index_stringl ( match_pair , str , len , 1 )"		1146883	0					
ANR	1146913	Callee	add_next_index_stringl		1146883	0					
ANR	1146914	Identifier	add_next_index_stringl		1146883	0					
ANR	1146915	ArgumentList	match_pair		1146883	1					
ANR	1146916	Argument	match_pair		1146883	0					
ANR	1146917	Identifier	match_pair		1146883	0					
ANR	1146918	Argument	str		1146883	1					
ANR	1146919	Identifier	str		1146883	0					
ANR	1146920	Argument	len		1146883	2					
ANR	1146921	Identifier	len		1146883	0					
ANR	1146922	Argument	1		1146883	3					
ANR	1146923	PrimaryExpression	1		1146883	0					
ANR	1146924	ExpressionStatement	"add_next_index_long ( match_pair , offset )"	548:1:16166:16205	1146883	5	True				
ANR	1146925	CallExpression	"add_next_index_long ( match_pair , offset )"		1146883	0					
ANR	1146926	Callee	add_next_index_long		1146883	0					
ANR	1146927	Identifier	add_next_index_long		1146883	0					
ANR	1146928	ArgumentList	match_pair		1146883	1					
ANR	1146929	Argument	match_pair		1146883	0					
ANR	1146930	Identifier	match_pair		1146883	0					
ANR	1146931	Argument	offset		1146883	1					
ANR	1146932	Identifier	offset		1146883	0					
ANR	1146933	IfStatement	if ( name )		1146883	6					
ANR	1146934	Condition	name	550:5:16213:16216	1146883	0	True				
ANR	1146935	Identifier	name		1146883	0					
ANR	1146936	CompoundStatement		12:11:248:248	1146883	1					
ANR	1146937	ExpressionStatement	zval_add_ref ( & match_pair )	551:2:16223:16248	1146883	0	True				
ANR	1146938	CallExpression	zval_add_ref ( & match_pair )		1146883	0					
ANR	1146939	Callee	zval_add_ref		1146883	0					
ANR	1146940	Identifier	zval_add_ref		1146883	0					
ANR	1146941	ArgumentList	& match_pair		1146883	1					
ANR	1146942	Argument	& match_pair		1146883	0					
ANR	1146943	UnaryOperationExpression	& match_pair		1146883	0					
ANR	1146944	UnaryOperator	&		1146883	0					
ANR	1146945	Identifier	match_pair		1146883	1					
ANR	1146946	ExpressionStatement	"zend_hash_update ( Z_ARRVAL_P ( result ) , name , strlen ( name ) + 1 , & match_pair , sizeof ( zval * ) , NULL )"	552:2:16252:16345	1146883	1	True				
ANR	1146947	CallExpression	"zend_hash_update ( Z_ARRVAL_P ( result ) , name , strlen ( name ) + 1 , & match_pair , sizeof ( zval * ) , NULL )"		1146883	0					
ANR	1146948	Callee	zend_hash_update		1146883	0					
ANR	1146949	Identifier	zend_hash_update		1146883	0					
ANR	1146950	ArgumentList	Z_ARRVAL_P ( result )		1146883	1					
ANR	1146951	Argument	Z_ARRVAL_P ( result )		1146883	0					
ANR	1146952	CallExpression	Z_ARRVAL_P ( result )		1146883	0					
ANR	1146953	Callee	Z_ARRVAL_P		1146883	0					
ANR	1146954	Identifier	Z_ARRVAL_P		1146883	0					
ANR	1146955	ArgumentList	result		1146883	1					
ANR	1146956	Argument	result		1146883	0					
ANR	1146957	Identifier	result		1146883	0					
ANR	1146958	Argument	name		1146883	1					
ANR	1146959	Identifier	name		1146883	0					
ANR	1146960	Argument	strlen ( name ) + 1		1146883	2					
ANR	1146961	AdditiveExpression	strlen ( name ) + 1		1146883	0		+			
ANR	1146962	CallExpression	strlen ( name )		1146883	0					
ANR	1146963	Callee	strlen		1146883	0					
ANR	1146964	Identifier	strlen		1146883	0					
ANR	1146965	ArgumentList	name		1146883	1					
ANR	1146966	Argument	name		1146883	0					
ANR	1146967	Identifier	name		1146883	0					
ANR	1146968	PrimaryExpression	1		1146883	1					
ANR	1146969	Argument	& match_pair		1146883	3					
ANR	1146970	UnaryOperationExpression	& match_pair		1146883	0					
ANR	1146971	UnaryOperator	&		1146883	0					
ANR	1146972	Identifier	match_pair		1146883	1					
ANR	1146973	Argument	sizeof ( zval * )		1146883	4					
ANR	1146974	SizeofExpression	sizeof ( zval * )		1146883	0					
ANR	1146975	Sizeof	sizeof		1146883	0					
ANR	1146976	SizeofOperand	zval *		1146883	1					
ANR	1146977	Argument	NULL		1146883	5					
ANR	1146978	Identifier	NULL		1146883	0					
ANR	1146979	ExpressionStatement	"zend_hash_next_index_insert ( Z_ARRVAL_P ( result ) , & match_pair , sizeof ( zval * ) , NULL )"	554:1:16351:16433	1146883	7	True				
ANR	1146980	CallExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( result ) , & match_pair , sizeof ( zval * ) , NULL )"		1146883	0					
ANR	1146981	Callee	zend_hash_next_index_insert		1146883	0					
ANR	1146982	Identifier	zend_hash_next_index_insert		1146883	0					
ANR	1146983	ArgumentList	Z_ARRVAL_P ( result )		1146883	1					
ANR	1146984	Argument	Z_ARRVAL_P ( result )		1146883	0					
ANR	1146985	CallExpression	Z_ARRVAL_P ( result )		1146883	0					
ANR	1146986	Callee	Z_ARRVAL_P		1146883	0					
ANR	1146987	Identifier	Z_ARRVAL_P		1146883	0					
ANR	1146988	ArgumentList	result		1146883	1					
ANR	1146989	Argument	result		1146883	0					
ANR	1146990	Identifier	result		1146883	0					
ANR	1146991	Argument	& match_pair		1146883	1					
ANR	1146992	UnaryOperationExpression	& match_pair		1146883	0					
ANR	1146993	UnaryOperator	&		1146883	0					
ANR	1146994	Identifier	match_pair		1146883	1					
ANR	1146995	Argument	sizeof ( zval * )		1146883	2					
ANR	1146996	SizeofExpression	sizeof ( zval * )		1146883	0					
ANR	1146997	Sizeof	sizeof		1146883	0					
ANR	1146998	SizeofOperand	zval *		1146883	1					
ANR	1146999	Argument	NULL		1146883	3					
ANR	1147000	Identifier	NULL		1146883	0					
ANR	1147001	ReturnType	static inline void		1146883	1					
ANR	1147002	Identifier	add_offset_pair		1146883	2					
ANR	1147003	ParameterList	"zval * result , char * str , int len , int offset , char * name"		1146883	3					
ANR	1147004	Parameter	zval * result	538:35:15912:15923	1146883	0	True				
ANR	1147005	ParameterType	zval *		1146883	0					
ANR	1147006	Identifier	result		1146883	1					
ANR	1147007	Parameter	char * str	538:49:15926:15934	1146883	1	True				
ANR	1147008	ParameterType	char *		1146883	0					
ANR	1147009	Identifier	str		1146883	1					
ANR	1147010	Parameter	int len	538:60:15937:15943	1146883	2	True				
ANR	1147011	ParameterType	int		1146883	0					
ANR	1147012	Identifier	len		1146883	1					
ANR	1147013	Parameter	int offset	538:69:15946:15955	1146883	3	True				
ANR	1147014	ParameterType	int		1146883	0					
ANR	1147015	Identifier	offset		1146883	1					
ANR	1147016	Parameter	char * name	538:81:15958:15967	1146883	4	True				
ANR	1147017	ParameterType	char *		1146883	0					
ANR	1147018	Identifier	name		1146883	1					
ANR	1147019	CFGEntryNode	ENTRY		1146883		True				
ANR	1147020	CFGExitNode	EXIT		1146883		True				
ANR	1147021	Symbol	result		1146883						
ANR	1147022	Symbol	str		1146883						
ANR	1147023	Symbol	strlen		1146883						
ANR	1147024	Symbol	NULL		1146883						
ANR	1147025	Symbol	len		1146883						
ANR	1147026	Symbol	offset		1146883						
ANR	1147027	Symbol	name		1146883						
ANR	1147028	Symbol	Z_ARRVAL_P		1146883						
ANR	1147029	Symbol	& match_pair		1146883						
ANR	1147030	Symbol	match_pair		1146883						
ANR	1147031	DeclStmt									
ANR	1147032	Decl							char	char *	regex
ANR	1147033	DeclStmt									
ANR	1147034	Decl							char	char *	subject
ANR	1147035	DeclStmt									
ANR	1147036	Decl							int	int	regex_len
ANR	1147037	DeclStmt									
ANR	1147038	Decl							int	int	subject_len
ANR	1147039	DeclStmt									
ANR	1147040	Decl							pcre_cache_entry	pcre_cache_entry *	pce
ANR	1147041	DeclStmt									
ANR	1147042	Decl							zval	zval *	subpats
ANR	1147043	DeclStmt									
ANR	1147044	Decl							long	long	flags
ANR	1147045	DeclStmt									
ANR	1147046	Decl							long	long	start_offset
ANR	1147047	Function	php_pcre_match_impl	588:0:17460:26738							
ANR	1147048	FunctionDef	"php_pcre_match_impl (pcre_cache_entry * pce , char * subject , int subject_len , zval * return_value , zval * subpats , int global , int use_flags , long flags , long start_offset TSRMLS_DC)"		1147047	0					
ANR	1147049	CompoundStatement		590:0:17651:26738	1147047	0					
ANR	1147050	IdentifierDeclStatement	"zval * result_set , * * match_sets = NULL ;"	591:1:17654:17768	1147047	0	True				
ANR	1147051	IdentifierDecl	* result_set		1147047	0					
ANR	1147052	IdentifierDeclType	zval *		1147047	0					
ANR	1147053	Identifier	result_set		1147047	1					
ANR	1147054	IdentifierDecl	* * match_sets = NULL		1147047	1					
ANR	1147055	IdentifierDeclType	zval * *		1147047	0					
ANR	1147056	Identifier	match_sets		1147047	1					
ANR	1147057	AssignmentExpression	* * match_sets = NULL		1147047	2		=			
ANR	1147058	Identifier	NULL		1147047	0					
ANR	1147059	Identifier	NULL		1147047	1					
ANR	1147060	IdentifierDeclStatement	pcre_extra * extra = pce -> extra ;	595:1:17859:17890	1147047	1	True				
ANR	1147061	IdentifierDecl	* extra = pce -> extra		1147047	0					
ANR	1147062	IdentifierDeclType	pcre_extra *		1147047	0					
ANR	1147063	Identifier	extra		1147047	1					
ANR	1147064	AssignmentExpression	* extra = pce -> extra		1147047	2		=			
ANR	1147065	Identifier	extra		1147047	0					
ANR	1147066	PtrMemberAccess	pce -> extra		1147047	1					
ANR	1147067	Identifier	pce		1147047	0					
ANR	1147068	Identifier	extra		1147047	1					
ANR	1147069	IdentifierDeclStatement	pcre_extra extra_data ;	596:1:17924:17947	1147047	2	True				
ANR	1147070	IdentifierDecl	extra_data		1147047	0					
ANR	1147071	IdentifierDeclType	pcre_extra		1147047	0					
ANR	1147072	Identifier	extra_data		1147047	1					
ANR	1147073	IdentifierDeclStatement	int exoptions = 0 ;	597:1:17987:18008	1147047	3	True				
ANR	1147074	IdentifierDecl	exoptions = 0		1147047	0					
ANR	1147075	IdentifierDeclType	int		1147047	0					
ANR	1147076	Identifier	exoptions		1147047	1					
ANR	1147077	AssignmentExpression	exoptions = 0		1147047	2		=			
ANR	1147078	Identifier	exoptions		1147047	0					
ANR	1147079	PrimaryExpression	0		1147047	1					
ANR	1147080	IdentifierDeclStatement	int count = 0 ;	598:1:18036:18053	1147047	4	True				
ANR	1147081	IdentifierDecl	count = 0		1147047	0					
ANR	1147082	IdentifierDeclType	int		1147047	0					
ANR	1147083	Identifier	count		1147047	1					
ANR	1147084	AssignmentExpression	count = 0		1147047	2		=			
ANR	1147085	Identifier	count		1147047	0					
ANR	1147086	PrimaryExpression	0		1147047	1					
ANR	1147087	IdentifierDeclStatement	int * offsets ;	599:1:18093:18108	1147047	5	True				
ANR	1147088	IdentifierDecl	* offsets		1147047	0					
ANR	1147089	IdentifierDeclType	int *		1147047	0					
ANR	1147090	Identifier	offsets		1147047	1					
ANR	1147091	IdentifierDeclStatement	int num_subpats ;	600:1:18147:18166	1147047	6	True				
ANR	1147092	IdentifierDecl	num_subpats		1147047	0					
ANR	1147093	IdentifierDeclType	int		1147047	0					
ANR	1147094	Identifier	num_subpats		1147047	1					
ANR	1147095	IdentifierDeclStatement	int size_offsets ;	601:1:18207:18227	1147047	7	True				
ANR	1147096	IdentifierDecl	size_offsets		1147047	0					
ANR	1147097	IdentifierDeclType	int		1147047	0					
ANR	1147098	Identifier	size_offsets		1147047	1					
ANR	1147099	IdentifierDeclStatement	int matched ;	602:1:18263:18278	1147047	8	True				
ANR	1147100	IdentifierDecl	matched		1147047	0					
ANR	1147101	IdentifierDeclType	int		1147047	0					
ANR	1147102	Identifier	matched		1147047	1					
ANR	1147103	IdentifierDeclStatement	int g_notempty = 0 ;	603:1:18310:18332	1147047	9	True				
ANR	1147104	IdentifierDecl	g_notempty = 0		1147047	0					
ANR	1147105	IdentifierDeclType	int		1147047	0					
ANR	1147106	Identifier	g_notempty		1147047	1					
ANR	1147107	AssignmentExpression	g_notempty = 0		1147047	2		=			
ANR	1147108	Identifier	g_notempty		1147047	0					
ANR	1147109	PrimaryExpression	0		1147047	1					
ANR	1147110	IdentifierDeclStatement	const char * * stringlist ;	604:1:18374:18400	1147047	10	True				
ANR	1147111	IdentifierDecl	* * stringlist		1147047	0					
ANR	1147112	IdentifierDeclType	const char * *		1147047	0					
ANR	1147113	Identifier	stringlist		1147047	1					
ANR	1147114	IdentifierDeclStatement	char * * subpat_names ;	605:1:18436:18460	1147047	11	True				
ANR	1147115	IdentifierDecl	* * subpat_names		1147047	0					
ANR	1147116	IdentifierDeclType	char * *		1147047	0					
ANR	1147117	Identifier	subpat_names		1147047	1					
ANR	1147118	IdentifierDeclStatement	"int i , rc ;"	606:1:18498:18511	1147047	12	True				
ANR	1147119	IdentifierDecl	i		1147047	0					
ANR	1147120	IdentifierDeclType	int		1147047	0					
ANR	1147121	Identifier	i		1147047	1					
ANR	1147122	IdentifierDecl	rc		1147047	1					
ANR	1147123	IdentifierDeclType	int		1147047	0					
ANR	1147124	Identifier	rc		1147047	1					
ANR	1147125	IdentifierDeclStatement	int subpats_order ;	607:1:18514:18535	1147047	13	True				
ANR	1147126	IdentifierDecl	subpats_order		1147047	0					
ANR	1147127	IdentifierDeclType	int		1147047	0					
ANR	1147128	Identifier	subpats_order		1147047	1					
ANR	1147129	IdentifierDeclStatement	int offset_capture ;	608:1:18573:18595	1147047	14	True				
ANR	1147130	IdentifierDecl	offset_capture		1147047	0					
ANR	1147131	IdentifierDeclType	int		1147047	0					
ANR	1147132	Identifier	offset_capture		1147047	1					
ANR	1147133	IdentifierDeclStatement	unsigned char * mark = NULL ;	609:1:18637:18665	1147047	15	True				
ANR	1147134	IdentifierDecl	* mark = NULL		1147047	0					
ANR	1147135	IdentifierDeclType	unsigned char *		1147047	0					
ANR	1147136	Identifier	mark		1147047	1					
ANR	1147137	AssignmentExpression	* mark = NULL		1147047	2		=			
ANR	1147138	Identifier	NULL		1147047	0					
ANR	1147139	Identifier	NULL		1147047	1					
ANR	1147140	IdentifierDeclStatement	zval * marks = NULL ;	610:1:18701:18730	1147047	16	True				
ANR	1147141	IdentifierDecl	* marks = NULL		1147047	0					
ANR	1147142	IdentifierDeclType	zval *		1147047	0					
ANR	1147143	Identifier	marks		1147047	1					
ANR	1147144	AssignmentExpression	* marks = NULL		1147047	2		=			
ANR	1147145	Identifier	NULL		1147047	0					
ANR	1147146	Identifier	NULL		1147047	1					
ANR	1147147	IfStatement	if ( subpats != NULL )		1147047	17					
ANR	1147148	Condition	subpats != NULL	613:5:18861:18875	1147047	0	True				
ANR	1147149	EqualityExpression	subpats != NULL		1147047	0		!=			
ANR	1147150	Identifier	subpats		1147047	0					
ANR	1147151	Identifier	NULL		1147047	1					
ANR	1147152	CompoundStatement		24:22:1226:1226	1147047	1					
ANR	1147153	ExpressionStatement	zval_dtor ( subpats )	614:2:18882:18900	1147047	0	True				
ANR	1147154	CallExpression	zval_dtor ( subpats )		1147047	0					
ANR	1147155	Callee	zval_dtor		1147047	0					
ANR	1147156	Identifier	zval_dtor		1147047	0					
ANR	1147157	ArgumentList	subpats		1147047	1					
ANR	1147158	Argument	subpats		1147047	0					
ANR	1147159	Identifier	subpats		1147047	0					
ANR	1147160	ExpressionStatement	array_init ( subpats )	615:2:18904:18923	1147047	1	True				
ANR	1147161	CallExpression	array_init ( subpats )		1147047	0					
ANR	1147162	Callee	array_init		1147047	0					
ANR	1147163	Identifier	array_init		1147047	0					
ANR	1147164	ArgumentList	subpats		1147047	1					
ANR	1147165	Argument	subpats		1147047	0					
ANR	1147166	Identifier	subpats		1147047	0					
ANR	1147167	ExpressionStatement	subpats_order = global ? PREG_PATTERN_ORDER : 0	618:1:18930:18977	1147047	18	True				
ANR	1147168	AssignmentExpression	subpats_order = global ? PREG_PATTERN_ORDER : 0		1147047	0		=			
ANR	1147169	Identifier	subpats_order		1147047	0					
ANR	1147170	ConditionalExpression	global ? PREG_PATTERN_ORDER : 0		1147047	1					
ANR	1147171	Condition	global		1147047	0					
ANR	1147172	Identifier	global		1147047	0					
ANR	1147173	Identifier	PREG_PATTERN_ORDER		1147047	1					
ANR	1147174	PrimaryExpression	0		1147047	2					
ANR	1147175	IfStatement	if ( use_flags )		1147047	19					
ANR	1147176	Condition	use_flags	620:5:18985:18993	1147047	0	True				
ANR	1147177	Identifier	use_flags		1147047	0					
ANR	1147178	CompoundStatement		31:16:1344:1344	1147047	1					
ANR	1147179	ExpressionStatement	offset_capture = flags & PREG_OFFSET_CAPTURE	621:2:19000:19044	1147047	0	True				
ANR	1147180	AssignmentExpression	offset_capture = flags & PREG_OFFSET_CAPTURE		1147047	0		=			
ANR	1147181	Identifier	offset_capture		1147047	0					
ANR	1147182	BitAndExpression	flags & PREG_OFFSET_CAPTURE		1147047	1		&			
ANR	1147183	Identifier	flags		1147047	0					
ANR	1147184	Identifier	PREG_OFFSET_CAPTURE		1147047	1					
ANR	1147185	IfStatement	if ( flags & 0xff )		1147047	1					
ANR	1147186	Condition	flags & 0xff	627:6:19150:19161	1147047	0	True				
ANR	1147187	BitAndExpression	flags & 0xff		1147047	0		&			
ANR	1147188	Identifier	flags		1147047	0					
ANR	1147189	PrimaryExpression	0xff		1147047	1					
ANR	1147190	CompoundStatement		38:20:1512:1512	1147047	1					
ANR	1147191	ExpressionStatement	subpats_order = flags & 0xff	628:3:19169:19197	1147047	0	True				
ANR	1147192	AssignmentExpression	subpats_order = flags & 0xff		1147047	0		=			
ANR	1147193	Identifier	subpats_order		1147047	0					
ANR	1147194	BitAndExpression	flags & 0xff		1147047	1		&			
ANR	1147195	Identifier	flags		1147047	0					
ANR	1147196	PrimaryExpression	0xff		1147047	1					
ANR	1147197	IfStatement	if ( ( global && ( subpats_order < PREG_PATTERN_ORDER || subpats_order > PREG_SET_ORDER ) ) || ( ! global && subpats_order != 0 ) )		1147047	2					
ANR	1147198	Condition	( global && ( subpats_order < PREG_PATTERN_ORDER || subpats_order > PREG_SET_ORDER ) ) || ( ! global && subpats_order != 0 )	630:6:19209:19328	1147047	0	True				
ANR	1147199	OrExpression	( global && ( subpats_order < PREG_PATTERN_ORDER || subpats_order > PREG_SET_ORDER ) ) || ( ! global && subpats_order != 0 )		1147047	0		||			
ANR	1147200	AndExpression	global && ( subpats_order < PREG_PATTERN_ORDER || subpats_order > PREG_SET_ORDER )		1147047	0		&&			
ANR	1147201	Identifier	global		1147047	0					
ANR	1147202	OrExpression	subpats_order < PREG_PATTERN_ORDER || subpats_order > PREG_SET_ORDER		1147047	1		||			
ANR	1147203	RelationalExpression	subpats_order < PREG_PATTERN_ORDER		1147047	0		<			
ANR	1147204	Identifier	subpats_order		1147047	0					
ANR	1147205	Identifier	PREG_PATTERN_ORDER		1147047	1					
ANR	1147206	RelationalExpression	subpats_order > PREG_SET_ORDER		1147047	1		>			
ANR	1147207	Identifier	subpats_order		1147047	0					
ANR	1147208	Identifier	PREG_SET_ORDER		1147047	1					
ANR	1147209	AndExpression	! global && subpats_order != 0		1147047	1		&&			
ANR	1147210	UnaryOperationExpression	! global		1147047	0					
ANR	1147211	UnaryOperator	!		1147047	0					
ANR	1147212	Identifier	global		1147047	1					
ANR	1147213	EqualityExpression	subpats_order != 0		1147047	1		!=			
ANR	1147214	Identifier	subpats_order		1147047	0					
ANR	1147215	PrimaryExpression	0		1147047	1					
ANR	1147216	CompoundStatement		42:36:1679:1679	1147047	1					
ANR	1147217	Statement	php_error_docref	632:3:19336:19351	1147047	0	True				
ANR	1147218	Statement	(	632:19:19352:19352	1147047	1	True				
ANR	1147219	Statement	NULL	632:20:19353:19356	1147047	2	True				
ANR	1147220	Statement	TSRMLS_CC	632:25:19358:19366	1147047	3	True				
ANR	1147221	Statement	","	632:34:19367:19367	1147047	4	True				
ANR	1147222	Statement	E_WARNING	632:36:19369:19377	1147047	5	True				
ANR	1147223	Statement	","	632:45:19378:19378	1147047	6	True				
ANR	1147224	Statement	"""Invalid flags specified"""	632:47:19380:19404	1147047	7	True				
ANR	1147225	Statement	)	632:72:19405:19405	1147047	8	True				
ANR	1147226	ExpressionStatement		632:73:19406:19406	1147047	9	True				
ANR	1147227	ReturnStatement	return ;	633:3:19411:19417	1147047	10	True				
ANR	1147228	ElseStatement	else		1147047	0					
ANR	1147229	CompoundStatement		46:8:1779:1779	1147047	0					
ANR	1147230	ExpressionStatement	offset_capture = 0	636:2:19435:19453	1147047	0	True				
ANR	1147231	AssignmentExpression	offset_capture = 0		1147047	0		=			
ANR	1147232	Identifier	offset_capture		1147047	0					
ANR	1147233	PrimaryExpression	0		1147047	1					
ANR	1147234	IfStatement	if ( start_offset < 0 )		1147047	20					
ANR	1147235	Condition	start_offset < 0	640:5:19522:19537	1147047	0	True				
ANR	1147236	RelationalExpression	start_offset < 0		1147047	0		<			
ANR	1147237	Identifier	start_offset		1147047	0					
ANR	1147238	PrimaryExpression	0		1147047	1					
ANR	1147239	CompoundStatement		51:23:1888:1888	1147047	1					
ANR	1147240	ExpressionStatement	start_offset = subject_len + start_offset	641:2:19544:19585	1147047	0	True				
ANR	1147241	AssignmentExpression	start_offset = subject_len + start_offset		1147047	0		=			
ANR	1147242	Identifier	start_offset		1147047	0					
ANR	1147243	AdditiveExpression	subject_len + start_offset		1147047	1		+			
ANR	1147244	Identifier	subject_len		1147047	0					
ANR	1147245	Identifier	start_offset		1147047	1					
ANR	1147246	IfStatement	if ( start_offset < 0 )		1147047	1					
ANR	1147247	Condition	start_offset < 0	642:6:19593:19608	1147047	0	True				
ANR	1147248	RelationalExpression	start_offset < 0		1147047	0		<			
ANR	1147249	Identifier	start_offset		1147047	0					
ANR	1147250	PrimaryExpression	0		1147047	1					
ANR	1147251	CompoundStatement		53:24:1959:1959	1147047	1					
ANR	1147252	ExpressionStatement	start_offset = 0	643:3:19616:19632	1147047	0	True				
ANR	1147253	AssignmentExpression	start_offset = 0		1147047	0		=			
ANR	1147254	Identifier	start_offset		1147047	0					
ANR	1147255	PrimaryExpression	0		1147047	1					
ANR	1147256	IfStatement	if ( extra == NULL )		1147047	21					
ANR	1147257	Condition	extra == NULL	647:5:19647:19659	1147047	0	True				
ANR	1147258	EqualityExpression	extra == NULL		1147047	0		==			
ANR	1147259	Identifier	extra		1147047	0					
ANR	1147260	Identifier	NULL		1147047	1					
ANR	1147261	CompoundStatement		58:20:2010:2010	1147047	1					
ANR	1147262	ExpressionStatement	extra_data . flags = PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION	648:2:19666:19742	1147047	0	True				
ANR	1147263	AssignmentExpression	extra_data . flags = PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION		1147047	0		=			
ANR	1147264	MemberAccess	extra_data . flags		1147047	0					
ANR	1147265	Identifier	extra_data		1147047	0					
ANR	1147266	Identifier	flags		1147047	1					
ANR	1147267	InclusiveOrExpression	PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION		1147047	1		|			
ANR	1147268	Identifier	PCRE_EXTRA_MATCH_LIMIT		1147047	0					
ANR	1147269	Identifier	PCRE_EXTRA_MATCH_LIMIT_RECURSION		1147047	1					
ANR	1147270	ExpressionStatement	extra = & extra_data	649:2:19746:19765	1147047	1	True				
ANR	1147271	AssignmentExpression	extra = & extra_data		1147047	0		=			
ANR	1147272	Identifier	extra		1147047	0					
ANR	1147273	UnaryOperationExpression	& extra_data		1147047	1					
ANR	1147274	UnaryOperator	&		1147047	0					
ANR	1147275	Identifier	extra_data		1147047	1					
ANR	1147276	ExpressionStatement	extra -> match_limit = PCRE_G ( backtrack_limit )	651:1:19771:19815	1147047	22	True				
ANR	1147277	AssignmentExpression	extra -> match_limit = PCRE_G ( backtrack_limit )		1147047	0		=			
ANR	1147278	PtrMemberAccess	extra -> match_limit		1147047	0					
ANR	1147279	Identifier	extra		1147047	0					
ANR	1147280	Identifier	match_limit		1147047	1					
ANR	1147281	CallExpression	PCRE_G ( backtrack_limit )		1147047	1					
ANR	1147282	Callee	PCRE_G		1147047	0					
ANR	1147283	Identifier	PCRE_G		1147047	0					
ANR	1147284	ArgumentList	backtrack_limit		1147047	1					
ANR	1147285	Argument	backtrack_limit		1147047	0					
ANR	1147286	Identifier	backtrack_limit		1147047	0					
ANR	1147287	ExpressionStatement	extra -> match_limit_recursion = PCRE_G ( recursion_limit )	652:1:19818:19872	1147047	23	True				
ANR	1147288	AssignmentExpression	extra -> match_limit_recursion = PCRE_G ( recursion_limit )		1147047	0		=			
ANR	1147289	PtrMemberAccess	extra -> match_limit_recursion		1147047	0					
ANR	1147290	Identifier	extra		1147047	0					
ANR	1147291	Identifier	match_limit_recursion		1147047	1					
ANR	1147292	CallExpression	PCRE_G ( recursion_limit )		1147047	1					
ANR	1147293	Callee	PCRE_G		1147047	0					
ANR	1147294	Identifier	PCRE_G		1147047	0					
ANR	1147295	ArgumentList	recursion_limit		1147047	1					
ANR	1147296	Argument	recursion_limit		1147047	0					
ANR	1147297	Identifier	recursion_limit		1147047	0					
ANR	1147298	ExpressionStatement	extra -> mark = & mark	654:1:19898:19917	1147047	24	True				
ANR	1147299	AssignmentExpression	extra -> mark = & mark		1147047	0		=			
ANR	1147300	PtrMemberAccess	extra -> mark		1147047	0					
ANR	1147301	Identifier	extra		1147047	0					
ANR	1147302	Identifier	mark		1147047	1					
ANR	1147303	UnaryOperationExpression	& mark		1147047	1					
ANR	1147304	UnaryOperator	&		1147047	0					
ANR	1147305	Identifier	mark		1147047	1					
ANR	1147306	ExpressionStatement	extra -> flags |= PCRE_EXTRA_MARK	655:1:19920:19951	1147047	25	True				
ANR	1147307	AssignmentExpression	extra -> flags |= PCRE_EXTRA_MARK		1147047	0		|=			
ANR	1147308	PtrMemberAccess	extra -> flags		1147047	0					
ANR	1147309	Identifier	extra		1147047	0					
ANR	1147310	Identifier	flags		1147047	1					
ANR	1147311	Identifier	PCRE_EXTRA_MARK		1147047	1					
ANR	1147312	ExpressionStatement	"rc = pcre_fullinfo ( pce -> re , extra , PCRE_INFO_CAPTURECOUNT , & num_subpats )"	659:1:20038:20110	1147047	26	True				
ANR	1147313	AssignmentExpression	"rc = pcre_fullinfo ( pce -> re , extra , PCRE_INFO_CAPTURECOUNT , & num_subpats )"		1147047	0		=			
ANR	1147314	Identifier	rc		1147047	0					
ANR	1147315	CallExpression	"pcre_fullinfo ( pce -> re , extra , PCRE_INFO_CAPTURECOUNT , & num_subpats )"		1147047	1					
ANR	1147316	Callee	pcre_fullinfo		1147047	0					
ANR	1147317	Identifier	pcre_fullinfo		1147047	0					
ANR	1147318	ArgumentList	pce -> re		1147047	1					
ANR	1147319	Argument	pce -> re		1147047	0					
ANR	1147320	PtrMemberAccess	pce -> re		1147047	0					
ANR	1147321	Identifier	pce		1147047	0					
ANR	1147322	Identifier	re		1147047	1					
ANR	1147323	Argument	extra		1147047	1					
ANR	1147324	Identifier	extra		1147047	0					
ANR	1147325	Argument	PCRE_INFO_CAPTURECOUNT		1147047	2					
ANR	1147326	Identifier	PCRE_INFO_CAPTURECOUNT		1147047	0					
ANR	1147327	Argument	& num_subpats		1147047	3					
ANR	1147328	UnaryOperationExpression	& num_subpats		1147047	0					
ANR	1147329	UnaryOperator	&		1147047	0					
ANR	1147330	Identifier	num_subpats		1147047	1					
ANR	1147331	IfStatement	if ( rc < 0 )		1147047	27					
ANR	1147332	Condition	rc < 0	660:5:20117:20122	1147047	0	True				
ANR	1147333	RelationalExpression	rc < 0		1147047	0		<			
ANR	1147334	Identifier	rc		1147047	0					
ANR	1147335	PrimaryExpression	0		1147047	1					
ANR	1147336	CompoundStatement		71:13:2473:2473	1147047	1					
ANR	1147337	Statement	php_error_docref	661:2:20129:20144	1147047	0	True				
ANR	1147338	Statement	(	661:18:20145:20145	1147047	1	True				
ANR	1147339	Statement	NULL	661:19:20146:20149	1147047	2	True				
ANR	1147340	Statement	TSRMLS_CC	661:24:20151:20159	1147047	3	True				
ANR	1147341	Statement	","	661:33:20160:20160	1147047	4	True				
ANR	1147342	Statement	E_WARNING	661:35:20162:20170	1147047	5	True				
ANR	1147343	Statement	","	661:44:20171:20171	1147047	6	True				
ANR	1147344	Statement	"""Internal pcre_fullinfo() error %d"""	661:46:20173:20207	1147047	7	True				
ANR	1147345	Statement	","	661:81:20208:20208	1147047	8	True				
ANR	1147346	Statement	rc	661:83:20210:20211	1147047	9	True				
ANR	1147347	Statement	)	661:85:20212:20212	1147047	10	True				
ANR	1147348	ExpressionStatement		661:86:20213:20213	1147047	11	True				
ANR	1147349	ExpressionStatement	RETURN_FALSE	662:2:20217:20229	1147047	12	True				
ANR	1147350	Identifier	RETURN_FALSE		1147047	0					
ANR	1147351	ExpressionStatement	num_subpats ++	664:1:20235:20248	1147047	28	True				
ANR	1147352	PostIncDecOperationExpression	num_subpats ++		1147047	0					
ANR	1147353	Identifier	num_subpats		1147047	0					
ANR	1147354	IncDec	++		1147047	1					
ANR	1147355	ExpressionStatement	size_offsets = num_subpats * 3	665:1:20251:20281	1147047	29	True				
ANR	1147356	AssignmentExpression	size_offsets = num_subpats * 3		1147047	0		=			
ANR	1147357	Identifier	size_offsets		1147047	0					
ANR	1147358	MultiplicativeExpression	num_subpats * 3		1147047	1		*			
ANR	1147359	Identifier	num_subpats		1147047	0					
ANR	1147360	PrimaryExpression	3		1147047	1					
ANR	1147361	Statement	subpat_names	672:1:20508:20519	1147047	30	True				
ANR	1147362	Statement	=	672:14:20521:20521	1147047	31	True				
ANR	1147363	Statement	make_subpats_table	672:16:20523:20540	1147047	32	True				
ANR	1147364	Statement	(	672:34:20541:20541	1147047	33	True				
ANR	1147365	Statement	num_subpats	672:35:20542:20552	1147047	34	True				
ANR	1147366	Statement	","	672:46:20553:20553	1147047	35	True				
ANR	1147367	Statement	pce	672:48:20555:20557	1147047	36	True				
ANR	1147368	Statement	TSRMLS_CC	672:52:20559:20567	1147047	37	True				
ANR	1147369	Statement	)	672:61:20568:20568	1147047	38	True				
ANR	1147370	ExpressionStatement		672:62:20569:20569	1147047	39	True				
ANR	1147371	IfStatement	if ( ! subpat_names )		1147047	40					
ANR	1147372	Condition	! subpat_names	673:5:20576:20588	1147047	0	True				
ANR	1147373	UnaryOperationExpression	! subpat_names		1147047	0					
ANR	1147374	UnaryOperator	!		1147047	0					
ANR	1147375	Identifier	subpat_names		1147047	1					
ANR	1147376	CompoundStatement		84:20:2939:2939	1147047	1					
ANR	1147377	ExpressionStatement	RETURN_FALSE	674:2:20595:20607	1147047	0	True				
ANR	1147378	Identifier	RETURN_FALSE		1147047	0					
ANR	1147379	ExpressionStatement	"offsets = ( int * ) safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"	677:1:20614:20673	1147047	41	True				
ANR	1147380	AssignmentExpression	"offsets = ( int * ) safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"		1147047	0		=			
ANR	1147381	Identifier	offsets		1147047	0					
ANR	1147382	CastExpression	"( int * ) safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"		1147047	1					
ANR	1147383	CastTarget	int *		1147047	0					
ANR	1147384	CallExpression	"safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"		1147047	1					
ANR	1147385	Callee	safe_emalloc		1147047	0					
ANR	1147386	Identifier	safe_emalloc		1147047	0					
ANR	1147387	ArgumentList	size_offsets		1147047	1					
ANR	1147388	Argument	size_offsets		1147047	0					
ANR	1147389	Identifier	size_offsets		1147047	0					
ANR	1147390	Argument	sizeof ( int )		1147047	1					
ANR	1147391	SizeofExpression	sizeof ( int )		1147047	0					
ANR	1147392	Sizeof	sizeof		1147047	0					
ANR	1147393	SizeofOperand	int		1147047	1					
ANR	1147394	Argument	0		1147047	2					
ANR	1147395	PrimaryExpression	0		1147047	0					
ANR	1147396	ExpressionStatement	"memset ( offsets , 0 , size_offsets * sizeof ( int ) )"	678:1:20676:20720	1147047	42	True				
ANR	1147397	CallExpression	"memset ( offsets , 0 , size_offsets * sizeof ( int ) )"		1147047	0					
ANR	1147398	Callee	memset		1147047	0					
ANR	1147399	Identifier	memset		1147047	0					
ANR	1147400	ArgumentList	offsets		1147047	1					
ANR	1147401	Argument	offsets		1147047	0					
ANR	1147402	Identifier	offsets		1147047	0					
ANR	1147403	Argument	0		1147047	1					
ANR	1147404	PrimaryExpression	0		1147047	0					
ANR	1147405	Argument	size_offsets * sizeof ( int )		1147047	2					
ANR	1147406	MultiplicativeExpression	size_offsets * sizeof ( int )		1147047	0		*			
ANR	1147407	Identifier	size_offsets		1147047	0					
ANR	1147408	SizeofExpression	sizeof ( int )		1147047	1					
ANR	1147409	Sizeof	sizeof		1147047	0					
ANR	1147410	SizeofOperand	int		1147047	1					
ANR	1147411	IfStatement	if ( global && subpats && subpats_order == PREG_PATTERN_ORDER )		1147047	43					
ANR	1147412	Condition	global && subpats && subpats_order == PREG_PATTERN_ORDER	680:5:20787:20842	1147047	0	True				
ANR	1147413	AndExpression	global && subpats && subpats_order == PREG_PATTERN_ORDER		1147047	0		&&			
ANR	1147414	Identifier	global		1147047	0					
ANR	1147415	AndExpression	subpats && subpats_order == PREG_PATTERN_ORDER		1147047	1		&&			
ANR	1147416	Identifier	subpats		1147047	0					
ANR	1147417	EqualityExpression	subpats_order == PREG_PATTERN_ORDER		1147047	1		==			
ANR	1147418	Identifier	subpats_order		1147047	0					
ANR	1147419	Identifier	PREG_PATTERN_ORDER		1147047	1					
ANR	1147420	CompoundStatement		91:63:3193:3193	1147047	1					
ANR	1147421	ExpressionStatement	"match_sets = ( zval * * ) safe_emalloc ( num_subpats , sizeof ( zval * ) , 0 )"	681:2:20849:20915	1147047	0	True				
ANR	1147422	AssignmentExpression	"match_sets = ( zval * * ) safe_emalloc ( num_subpats , sizeof ( zval * ) , 0 )"		1147047	0		=			
ANR	1147423	Identifier	match_sets		1147047	0					
ANR	1147424	CastExpression	"( zval * * ) safe_emalloc ( num_subpats , sizeof ( zval * ) , 0 )"		1147047	1					
ANR	1147425	CastTarget	zval * *		1147047	0					
ANR	1147426	CallExpression	"safe_emalloc ( num_subpats , sizeof ( zval * ) , 0 )"		1147047	1					
ANR	1147427	Callee	safe_emalloc		1147047	0					
ANR	1147428	Identifier	safe_emalloc		1147047	0					
ANR	1147429	ArgumentList	num_subpats		1147047	1					
ANR	1147430	Argument	num_subpats		1147047	0					
ANR	1147431	Identifier	num_subpats		1147047	0					
ANR	1147432	Argument	sizeof ( zval * )		1147047	1					
ANR	1147433	SizeofExpression	sizeof ( zval * )		1147047	0					
ANR	1147434	Sizeof	sizeof		1147047	0					
ANR	1147435	SizeofOperand	zval *		1147047	1					
ANR	1147436	Argument	0		1147047	2					
ANR	1147437	PrimaryExpression	0		1147047	0					
ANR	1147438	ForStatement	for ( i = 0 ; i < num_subpats ; i ++ )		1147047	1					
ANR	1147439	ForInit	i = 0 ;	682:7:20924:20927	1147047	0	True				
ANR	1147440	AssignmentExpression	i = 0		1147047	0		=			
ANR	1147441	Identifier	i		1147047	0					
ANR	1147442	PrimaryExpression	0		1147047	1					
ANR	1147443	Condition	i < num_subpats	682:12:20929:20941	1147047	1	True				
ANR	1147444	RelationalExpression	i < num_subpats		1147047	0		<			
ANR	1147445	Identifier	i		1147047	0					
ANR	1147446	Identifier	num_subpats		1147047	1					
ANR	1147447	PostIncDecOperationExpression	i ++	682:27:20944:20946	1147047	2	True				
ANR	1147448	Identifier	i		1147047	0					
ANR	1147449	IncDec	++		1147047	1					
ANR	1147450	CompoundStatement		93:32:3297:3297	1147047	3					
ANR	1147451	ExpressionStatement	ALLOC_ZVAL ( match_sets [ i ] )	683:3:20954:20979	1147047	0	True				
ANR	1147452	CallExpression	ALLOC_ZVAL ( match_sets [ i ] )		1147047	0					
ANR	1147453	Callee	ALLOC_ZVAL		1147047	0					
ANR	1147454	Identifier	ALLOC_ZVAL		1147047	0					
ANR	1147455	ArgumentList	match_sets [ i ]		1147047	1					
ANR	1147456	Argument	match_sets [ i ]		1147047	0					
ANR	1147457	ArrayIndexing	match_sets [ i ]		1147047	0					
ANR	1147458	Identifier	match_sets		1147047	0					
ANR	1147459	Identifier	i		1147047	1					
ANR	1147460	ExpressionStatement	array_init ( match_sets [ i ] )	684:3:20984:21009	1147047	1	True				
ANR	1147461	CallExpression	array_init ( match_sets [ i ] )		1147047	0					
ANR	1147462	Callee	array_init		1147047	0					
ANR	1147463	Identifier	array_init		1147047	0					
ANR	1147464	ArgumentList	match_sets [ i ]		1147047	1					
ANR	1147465	Argument	match_sets [ i ]		1147047	0					
ANR	1147466	ArrayIndexing	match_sets [ i ]		1147047	0					
ANR	1147467	Identifier	match_sets		1147047	0					
ANR	1147468	Identifier	i		1147047	1					
ANR	1147469	ExpressionStatement	INIT_PZVAL ( match_sets [ i ] )	685:3:21014:21039	1147047	2	True				
ANR	1147470	CallExpression	INIT_PZVAL ( match_sets [ i ] )		1147047	0					
ANR	1147471	Callee	INIT_PZVAL		1147047	0					
ANR	1147472	Identifier	INIT_PZVAL		1147047	0					
ANR	1147473	ArgumentList	match_sets [ i ]		1147047	1					
ANR	1147474	Argument	match_sets [ i ]		1147047	0					
ANR	1147475	ArrayIndexing	match_sets [ i ]		1147047	0					
ANR	1147476	Identifier	match_sets		1147047	0					
ANR	1147477	Identifier	i		1147047	1					
ANR	1147478	ExpressionStatement	matched = 0	689:1:21050:21061	1147047	44	True				
ANR	1147479	AssignmentExpression	matched = 0		1147047	0		=			
ANR	1147480	Identifier	matched		1147047	0					
ANR	1147481	PrimaryExpression	0		1147047	1					
ANR	1147482	ExpressionStatement	PCRE_G ( error_code ) = PHP_PCRE_NO_ERROR	690:1:21064:21102	1147047	45	True				
ANR	1147483	AssignmentExpression	PCRE_G ( error_code ) = PHP_PCRE_NO_ERROR		1147047	0		=			
ANR	1147484	CallExpression	PCRE_G ( error_code )		1147047	0					
ANR	1147485	Callee	PCRE_G		1147047	0					
ANR	1147486	Identifier	PCRE_G		1147047	0					
ANR	1147487	ArgumentList	error_code		1147047	1					
ANR	1147488	Argument	error_code		1147047	0					
ANR	1147489	Identifier	error_code		1147047	0					
ANR	1147490	Identifier	PHP_PCRE_NO_ERROR		1147047	1					
ANR	1147491	DoStatement	do		1147047	46					
ANR	1147492	CompoundStatement		103:4:3457:3457	1147047	0					
ANR	1147493	ExpressionStatement	"count = pcre_exec ( pce -> re , extra , subject , subject_len , start_offset , exoptions | g_notempty , offsets , size_offsets )"	694:2:21153:21275	1147047	0	True				
ANR	1147494	AssignmentExpression	"count = pcre_exec ( pce -> re , extra , subject , subject_len , start_offset , exoptions | g_notempty , offsets , size_offsets )"		1147047	0		=			
ANR	1147495	Identifier	count		1147047	0					
ANR	1147496	CallExpression	"pcre_exec ( pce -> re , extra , subject , subject_len , start_offset , exoptions | g_notempty , offsets , size_offsets )"		1147047	1					
ANR	1147497	Callee	pcre_exec		1147047	0					
ANR	1147498	Identifier	pcre_exec		1147047	0					
ANR	1147499	ArgumentList	pce -> re		1147047	1					
ANR	1147500	Argument	pce -> re		1147047	0					
ANR	1147501	PtrMemberAccess	pce -> re		1147047	0					
ANR	1147502	Identifier	pce		1147047	0					
ANR	1147503	Identifier	re		1147047	1					
ANR	1147504	Argument	extra		1147047	1					
ANR	1147505	Identifier	extra		1147047	0					
ANR	1147506	Argument	subject		1147047	2					
ANR	1147507	Identifier	subject		1147047	0					
ANR	1147508	Argument	subject_len		1147047	3					
ANR	1147509	Identifier	subject_len		1147047	0					
ANR	1147510	Argument	start_offset		1147047	4					
ANR	1147511	Identifier	start_offset		1147047	0					
ANR	1147512	Argument	exoptions | g_notempty		1147047	5					
ANR	1147513	InclusiveOrExpression	exoptions | g_notempty		1147047	0		|			
ANR	1147514	Identifier	exoptions		1147047	0					
ANR	1147515	Identifier	g_notempty		1147047	1					
ANR	1147516	Argument	offsets		1147047	6					
ANR	1147517	Identifier	offsets		1147047	0					
ANR	1147518	Argument	size_offsets		1147047	7					
ANR	1147519	Identifier	size_offsets		1147047	0					
ANR	1147520	ExpressionStatement	exoptions |= PCRE_NO_UTF8_CHECK	698:2:21336:21367	1147047	1	True				
ANR	1147521	AssignmentExpression	exoptions |= PCRE_NO_UTF8_CHECK		1147047	0		|=			
ANR	1147522	Identifier	exoptions		1147047	0					
ANR	1147523	Identifier	PCRE_NO_UTF8_CHECK		1147047	1					
ANR	1147524	IfStatement	if ( count == 0 )		1147047	2					
ANR	1147525	Condition	count == 0	701:6:21425:21434	1147047	0	True				
ANR	1147526	EqualityExpression	count == 0		1147047	0		==			
ANR	1147527	Identifier	count		1147047	0					
ANR	1147528	PrimaryExpression	0		1147047	1					
ANR	1147529	CompoundStatement		112:18:3785:3785	1147047	1					
ANR	1147530	Statement	php_error_docref	702:3:21442:21457	1147047	0	True				
ANR	1147531	Statement	(	702:19:21458:21458	1147047	1	True				
ANR	1147532	Statement	NULL	702:20:21459:21462	1147047	2	True				
ANR	1147533	Statement	TSRMLS_CC	702:25:21464:21472	1147047	3	True				
ANR	1147534	Statement	","	702:34:21473:21473	1147047	4	True				
ANR	1147535	Statement	E_NOTICE	702:36:21475:21482	1147047	5	True				
ANR	1147536	Statement	","	702:44:21483:21483	1147047	6	True				
ANR	1147537	Statement	"""Matched, but too many substrings"""	702:46:21485:21518	1147047	7	True				
ANR	1147538	Statement	)	702:80:21519:21519	1147047	8	True				
ANR	1147539	ExpressionStatement		702:81:21520:21520	1147047	9	True				
ANR	1147540	ExpressionStatement	count = size_offsets / 3	703:3:21525:21547	1147047	10	True				
ANR	1147541	AssignmentExpression	count = size_offsets / 3		1147047	0		=			
ANR	1147542	Identifier	count		1147047	0					
ANR	1147543	MultiplicativeExpression	size_offsets / 3		1147047	1		/			
ANR	1147544	Identifier	size_offsets		1147047	0					
ANR	1147545	PrimaryExpression	3		1147047	1					
ANR	1147546	IfStatement	if ( count > 0 )		1147047	3					
ANR	1147547	Condition	count > 0	707:6:21593:21601	1147047	0	True				
ANR	1147548	RelationalExpression	count > 0		1147047	0		>			
ANR	1147549	Identifier	count		1147047	0					
ANR	1147550	PrimaryExpression	0		1147047	1					
ANR	1147551	CompoundStatement		118:17:3952:3952	1147047	1					
ANR	1147552	ExpressionStatement	matched ++	708:3:21609:21618	1147047	0	True				
ANR	1147553	PostIncDecOperationExpression	matched ++		1147047	0					
ANR	1147554	Identifier	matched		1147047	0					
ANR	1147555	IncDec	++		1147047	1					
ANR	1147556	IfStatement	if ( subpats != NULL )		1147047	1					
ANR	1147557	Condition	subpats != NULL	711:7:21699:21713	1147047	0	True				
ANR	1147558	EqualityExpression	subpats != NULL		1147047	0		!=			
ANR	1147559	Identifier	subpats		1147047	0					
ANR	1147560	Identifier	NULL		1147047	1					
ANR	1147561	CompoundStatement		122:24:4064:4064	1147047	1					
ANR	1147562	IfStatement	"if ( ( offsets [ 1 ] - offsets [ 0 ] < 0 ) || pcre_get_substring_list ( subject , offsets , count , & stringlist ) < 0 )"		1147047	0					
ANR	1147563	Condition	"( offsets [ 1 ] - offsets [ 0 ] < 0 ) || pcre_get_substring_list ( subject , offsets , count , & stringlist ) < 0"	713:8:21803:21900	1147047	0	True				
ANR	1147564	OrExpression	"( offsets [ 1 ] - offsets [ 0 ] < 0 ) || pcre_get_substring_list ( subject , offsets , count , & stringlist ) < 0"		1147047	0		||			
ANR	1147565	RelationalExpression	offsets [ 1 ] - offsets [ 0 ] < 0		1147047	0		<			
ANR	1147566	AdditiveExpression	offsets [ 1 ] - offsets [ 0 ]		1147047	0		-			
ANR	1147567	ArrayIndexing	offsets [ 1 ]		1147047	0					
ANR	1147568	Identifier	offsets		1147047	0					
ANR	1147569	PrimaryExpression	1		1147047	1					
ANR	1147570	ArrayIndexing	offsets [ 0 ]		1147047	1					
ANR	1147571	Identifier	offsets		1147047	0					
ANR	1147572	PrimaryExpression	0		1147047	1					
ANR	1147573	PrimaryExpression	0		1147047	1					
ANR	1147574	RelationalExpression	"pcre_get_substring_list ( subject , offsets , count , & stringlist ) < 0"		1147047	1		<			
ANR	1147575	CallExpression	"pcre_get_substring_list ( subject , offsets , count , & stringlist )"		1147047	0					
ANR	1147576	Callee	pcre_get_substring_list		1147047	0					
ANR	1147577	Identifier	pcre_get_substring_list		1147047	0					
ANR	1147578	ArgumentList	subject		1147047	1					
ANR	1147579	Argument	subject		1147047	0					
ANR	1147580	Identifier	subject		1147047	0					
ANR	1147581	Argument	offsets		1147047	1					
ANR	1147582	Identifier	offsets		1147047	0					
ANR	1147583	Argument	count		1147047	2					
ANR	1147584	Identifier	count		1147047	0					
ANR	1147585	Argument	& stringlist		1147047	3					
ANR	1147586	UnaryOperationExpression	& stringlist		1147047	0					
ANR	1147587	UnaryOperator	&		1147047	0					
ANR	1147588	Identifier	stringlist		1147047	1					
ANR	1147589	PrimaryExpression	0		1147047	1					
ANR	1147590	CompoundStatement		124:108:4251:4251	1147047	1					
ANR	1147591	ExpressionStatement	efree ( subpat_names )	714:5:21910:21929	1147047	0	True				
ANR	1147592	CallExpression	efree ( subpat_names )		1147047	0					
ANR	1147593	Callee	efree		1147047	0					
ANR	1147594	Identifier	efree		1147047	0					
ANR	1147595	ArgumentList	subpat_names		1147047	1					
ANR	1147596	Argument	subpat_names		1147047	0					
ANR	1147597	Identifier	subpat_names		1147047	0					
ANR	1147598	ExpressionStatement	efree ( offsets )	715:5:21936:21950	1147047	1	True				
ANR	1147599	CallExpression	efree ( offsets )		1147047	0					
ANR	1147600	Callee	efree		1147047	0					
ANR	1147601	Identifier	efree		1147047	0					
ANR	1147602	ArgumentList	offsets		1147047	1					
ANR	1147603	Argument	offsets		1147047	0					
ANR	1147604	Identifier	offsets		1147047	0					
ANR	1147605	IfStatement	if ( match_sets )		1147047	2					
ANR	1147606	Condition	match_sets	716:9:21961:21970	1147047	0	True				
ANR	1147607	Identifier	match_sets		1147047	0					
ANR	1147608	ExpressionStatement	efree ( match_sets )	716:21:21973:21990	1147047	1	True				
ANR	1147609	CallExpression	efree ( match_sets )		1147047	0					
ANR	1147610	Callee	efree		1147047	0					
ANR	1147611	Identifier	efree		1147047	0					
ANR	1147612	ArgumentList	match_sets		1147047	1					
ANR	1147613	Argument	match_sets		1147047	0					
ANR	1147614	Identifier	match_sets		1147047	0					
ANR	1147615	Statement	php_error_docref	717:5:21997:22012	1147047	3	True				
ANR	1147616	Statement	(	717:21:22013:22013	1147047	4	True				
ANR	1147617	Statement	NULL	717:22:22014:22017	1147047	5	True				
ANR	1147618	Statement	TSRMLS_CC	717:27:22019:22027	1147047	6	True				
ANR	1147619	Statement	","	717:36:22028:22028	1147047	7	True				
ANR	1147620	Statement	E_WARNING	717:38:22030:22038	1147047	8	True				
ANR	1147621	Statement	","	717:47:22039:22039	1147047	9	True				
ANR	1147622	Statement	"""Get subpatterns list failed"""	717:49:22041:22069	1147047	10	True				
ANR	1147623	Statement	)	717:78:22070:22070	1147047	11	True				
ANR	1147624	ExpressionStatement		717:79:22071:22071	1147047	12	True				
ANR	1147625	ExpressionStatement	RETURN_FALSE	718:5:22078:22090	1147047	13	True				
ANR	1147626	Identifier	RETURN_FALSE		1147047	0					
ANR	1147627	IfStatement	if ( global )		1147047	1					
ANR	1147628	Condition	global	721:8:22107:22112	1147047	0	True				
ANR	1147629	Identifier	global		1147047	0					
ANR	1147630	CompoundStatement		132:16:4463:4463	1147047	1					
ANR	1147631	IfStatement	if ( subpats && subpats_order == PREG_PATTERN_ORDER )		1147047	0					
ANR	1147632	Condition	subpats && subpats_order == PREG_PATTERN_ORDER	722:9:22156:22201	1147047	0	True				
ANR	1147633	AndExpression	subpats && subpats_order == PREG_PATTERN_ORDER		1147047	0		&&			
ANR	1147634	Identifier	subpats		1147047	0					
ANR	1147635	EqualityExpression	subpats_order == PREG_PATTERN_ORDER		1147047	1		==			
ANR	1147636	Identifier	subpats_order		1147047	0					
ANR	1147637	Identifier	PREG_PATTERN_ORDER		1147047	1					
ANR	1147638	CompoundStatement		133:57:4552:4552	1147047	1					
ANR	1147639	ForStatement	for ( i = 0 ; i < count ; i ++ )		1147047	0					
ANR	1147640	ForInit	i = 0 ;	724:11:22288:22293	1147047	0	True				
ANR	1147641	AssignmentExpression	i = 0		1147047	0		=			
ANR	1147642	Identifier	i		1147047	0					
ANR	1147643	PrimaryExpression	0		1147047	1					
ANR	1147644	Condition	i < count	724:18:22295:22303	1147047	1	True				
ANR	1147645	RelationalExpression	i < count		1147047	0		<			
ANR	1147646	Identifier	i		1147047	0					
ANR	1147647	Identifier	count		1147047	1					
ANR	1147648	PostIncDecOperationExpression	i ++	724:29:22306:22308	1147047	2	True				
ANR	1147649	Identifier	i		1147047	0					
ANR	1147650	IncDec	++		1147047	1					
ANR	1147651	CompoundStatement		135:34:4659:4659	1147047	3					
ANR	1147652	IfStatement	if ( offset_capture )		1147047	0					
ANR	1147653	Condition	offset_capture	725:11:22324:22337	1147047	0	True				
ANR	1147654	Identifier	offset_capture		1147047	0					
ANR	1147655	CompoundStatement		136:27:4688:4688	1147047	1					
ANR	1147656	ExpressionStatement	"add_offset_pair ( match_sets [ i ] , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , offsets [ i << 1 ] , NULL )"	726:8:22350:22471	1147047	0	True				
ANR	1147657	CallExpression	"add_offset_pair ( match_sets [ i ] , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , offsets [ i << 1 ] , NULL )"		1147047	0					
ANR	1147658	Callee	add_offset_pair		1147047	0					
ANR	1147659	Identifier	add_offset_pair		1147047	0					
ANR	1147660	ArgumentList	match_sets [ i ]		1147047	1					
ANR	1147661	Argument	match_sets [ i ]		1147047	0					
ANR	1147662	ArrayIndexing	match_sets [ i ]		1147047	0					
ANR	1147663	Identifier	match_sets		1147047	0					
ANR	1147664	Identifier	i		1147047	1					
ANR	1147665	Argument	( char * ) stringlist [ i ]		1147047	1					
ANR	1147666	CastExpression	( char * ) stringlist [ i ]		1147047	0					
ANR	1147667	CastTarget	char *		1147047	0					
ANR	1147668	ArrayIndexing	stringlist [ i ]		1147047	1					
ANR	1147669	Identifier	stringlist		1147047	0					
ANR	1147670	Identifier	i		1147047	1					
ANR	1147671	Argument	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1147047	2					
ANR	1147672	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1147047	0		-			
ANR	1147673	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1147047	0					
ANR	1147674	Identifier	offsets		1147047	0					
ANR	1147675	AdditiveExpression	( i << 1 ) + 1		1147047	1		+			
ANR	1147676	ShiftExpression	i << 1		1147047	0		<<			
ANR	1147677	Identifier	i		1147047	0					
ANR	1147678	PrimaryExpression	1		1147047	1					
ANR	1147679	PrimaryExpression	1		1147047	1					
ANR	1147680	ArrayIndexing	offsets [ i << 1 ]		1147047	1					
ANR	1147681	Identifier	offsets		1147047	0					
ANR	1147682	ShiftExpression	i << 1		1147047	1		<<			
ANR	1147683	Identifier	i		1147047	0					
ANR	1147684	PrimaryExpression	1		1147047	1					
ANR	1147685	Argument	offsets [ i << 1 ]		1147047	3					
ANR	1147686	ArrayIndexing	offsets [ i << 1 ]		1147047	0					
ANR	1147687	Identifier	offsets		1147047	0					
ANR	1147688	ShiftExpression	i << 1		1147047	1		<<			
ANR	1147689	Identifier	i		1147047	0					
ANR	1147690	PrimaryExpression	1		1147047	1					
ANR	1147691	Argument	NULL		1147047	4					
ANR	1147692	Identifier	NULL		1147047	0					
ANR	1147693	ElseStatement	else		1147047	0					
ANR	1147694	CompoundStatement		139:14:4835:4835	1147047	0					
ANR	1147695	ExpressionStatement	"add_next_index_stringl ( match_sets [ i ] , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , 1 )"	729:8:22497:22611	1147047	0	True				
ANR	1147696	CallExpression	"add_next_index_stringl ( match_sets [ i ] , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , 1 )"		1147047	0					
ANR	1147697	Callee	add_next_index_stringl		1147047	0					
ANR	1147698	Identifier	add_next_index_stringl		1147047	0					
ANR	1147699	ArgumentList	match_sets [ i ]		1147047	1					
ANR	1147700	Argument	match_sets [ i ]		1147047	0					
ANR	1147701	ArrayIndexing	match_sets [ i ]		1147047	0					
ANR	1147702	Identifier	match_sets		1147047	0					
ANR	1147703	Identifier	i		1147047	1					
ANR	1147704	Argument	( char * ) stringlist [ i ]		1147047	1					
ANR	1147705	CastExpression	( char * ) stringlist [ i ]		1147047	0					
ANR	1147706	CastTarget	char *		1147047	0					
ANR	1147707	ArrayIndexing	stringlist [ i ]		1147047	1					
ANR	1147708	Identifier	stringlist		1147047	0					
ANR	1147709	Identifier	i		1147047	1					
ANR	1147710	Argument	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1147047	2					
ANR	1147711	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1147047	0		-			
ANR	1147712	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1147047	0					
ANR	1147713	Identifier	offsets		1147047	0					
ANR	1147714	AdditiveExpression	( i << 1 ) + 1		1147047	1		+			
ANR	1147715	ShiftExpression	i << 1		1147047	0		<<			
ANR	1147716	Identifier	i		1147047	0					
ANR	1147717	PrimaryExpression	1		1147047	1					
ANR	1147718	PrimaryExpression	1		1147047	1					
ANR	1147719	ArrayIndexing	offsets [ i << 1 ]		1147047	1					
ANR	1147720	Identifier	offsets		1147047	0					
ANR	1147721	ShiftExpression	i << 1		1147047	1		<<			
ANR	1147722	Identifier	i		1147047	0					
ANR	1147723	PrimaryExpression	1		1147047	1					
ANR	1147724	Argument	1		1147047	3					
ANR	1147725	PrimaryExpression	1		1147047	0					
ANR	1147726	IfStatement	if ( mark )		1147047	1					
ANR	1147727	Condition	mark	734:10:22675:22678	1147047	0	True				
ANR	1147728	Identifier	mark		1147047	0					
ANR	1147729	CompoundStatement		145:16:5029:5029	1147047	1					
ANR	1147730	IfStatement	if ( ! marks )		1147047	0					
ANR	1147731	Condition	! marks	735:11:22694:22699	1147047	0	True				
ANR	1147732	UnaryOperationExpression	! marks		1147047	0					
ANR	1147733	UnaryOperator	!		1147047	0					
ANR	1147734	Identifier	marks		1147047	1					
ANR	1147735	CompoundStatement		146:19:5050:5050	1147047	1					
ANR	1147736	ExpressionStatement	MAKE_STD_ZVAL ( marks )	736:8:22712:22732	1147047	0	True				
ANR	1147737	CallExpression	MAKE_STD_ZVAL ( marks )		1147047	0					
ANR	1147738	Callee	MAKE_STD_ZVAL		1147047	0					
ANR	1147739	Identifier	MAKE_STD_ZVAL		1147047	0					
ANR	1147740	ArgumentList	marks		1147047	1					
ANR	1147741	Argument	marks		1147047	0					
ANR	1147742	Identifier	marks		1147047	0					
ANR	1147743	ExpressionStatement	array_init ( marks )	737:8:22742:22759	1147047	1	True				
ANR	1147744	CallExpression	array_init ( marks )		1147047	0					
ANR	1147745	Callee	array_init		1147047	0					
ANR	1147746	Identifier	array_init		1147047	0					
ANR	1147747	ArgumentList	marks		1147047	1					
ANR	1147748	Argument	marks		1147047	0					
ANR	1147749	Identifier	marks		1147047	0					
ANR	1147750	ExpressionStatement	"add_index_string ( marks , matched - 1 , ( char * ) mark , 1 )"	739:7:22777:22831	1147047	1	True				
ANR	1147751	CallExpression	"add_index_string ( marks , matched - 1 , ( char * ) mark , 1 )"		1147047	0					
ANR	1147752	Callee	add_index_string		1147047	0					
ANR	1147753	Identifier	add_index_string		1147047	0					
ANR	1147754	ArgumentList	marks		1147047	1					
ANR	1147755	Argument	marks		1147047	0					
ANR	1147756	Identifier	marks		1147047	0					
ANR	1147757	Argument	matched - 1		1147047	1					
ANR	1147758	AdditiveExpression	matched - 1		1147047	0		-			
ANR	1147759	Identifier	matched		1147047	0					
ANR	1147760	PrimaryExpression	1		1147047	1					
ANR	1147761	Argument	( char * ) mark		1147047	2					
ANR	1147762	CastExpression	( char * ) mark		1147047	0					
ANR	1147763	CastTarget	char *		1147047	0					
ANR	1147764	Identifier	mark		1147047	1					
ANR	1147765	Argument	1		1147047	3					
ANR	1147766	PrimaryExpression	1		1147047	0					
ANR	1147767	IfStatement	if ( count < num_subpats )		1147047	2					
ANR	1147768	Condition	count < num_subpats	746:10:23029:23047	1147047	0	True				
ANR	1147769	RelationalExpression	count < num_subpats		1147047	0		<			
ANR	1147770	Identifier	count		1147047	0					
ANR	1147771	Identifier	num_subpats		1147047	1					
ANR	1147772	CompoundStatement		157:31:5398:5398	1147047	1					
ANR	1147773	ForStatement	for ( ; i < num_subpats ; i ++ )		1147047	0					
ANR	1147774	Condition	i < num_subpats	747:14:23066:23080	1147047	0	True				
ANR	1147775	RelationalExpression	i < num_subpats		1147047	0		<			
ANR	1147776	Identifier	i		1147047	0					
ANR	1147777	Identifier	num_subpats		1147047	1					
ANR	1147778	PostIncDecOperationExpression	i ++	747:31:23083:23085	1147047	1	True				
ANR	1147779	Identifier	i		1147047	0					
ANR	1147780	IncDec	++		1147047	1					
ANR	1147781	CompoundStatement		158:36:5436:5436	1147047	2					
ANR	1147782	ExpressionStatement	"add_next_index_string ( match_sets [ i ] , """" , 1 )"	748:8:23098:23141	1147047	0	True				
ANR	1147783	CallExpression	"add_next_index_string ( match_sets [ i ] , """" , 1 )"		1147047	0					
ANR	1147784	Callee	add_next_index_string		1147047	0					
ANR	1147785	Identifier	add_next_index_string		1147047	0					
ANR	1147786	ArgumentList	match_sets [ i ]		1147047	1					
ANR	1147787	Argument	match_sets [ i ]		1147047	0					
ANR	1147788	ArrayIndexing	match_sets [ i ]		1147047	0					
ANR	1147789	Identifier	match_sets		1147047	0					
ANR	1147790	Identifier	i		1147047	1					
ANR	1147791	Argument	""""""		1147047	1					
ANR	1147792	PrimaryExpression	""""""		1147047	0					
ANR	1147793	Argument	1		1147047	2					
ANR	1147794	PrimaryExpression	1		1147047	0					
ANR	1147795	ElseStatement	else		1147047	0					
ANR	1147796	CompoundStatement		162:12:5520:5520	1147047	0					
ANR	1147797	ExpressionStatement	ALLOC_ZVAL ( result_set )	753:6:23222:23244	1147047	0	True				
ANR	1147798	CallExpression	ALLOC_ZVAL ( result_set )		1147047	0					
ANR	1147799	Callee	ALLOC_ZVAL		1147047	0					
ANR	1147800	Identifier	ALLOC_ZVAL		1147047	0					
ANR	1147801	ArgumentList	result_set		1147047	1					
ANR	1147802	Argument	result_set		1147047	0					
ANR	1147803	Identifier	result_set		1147047	0					
ANR	1147804	ExpressionStatement	array_init ( result_set )	754:6:23252:23274	1147047	1	True				
ANR	1147805	CallExpression	array_init ( result_set )		1147047	0					
ANR	1147806	Callee	array_init		1147047	0					
ANR	1147807	Identifier	array_init		1147047	0					
ANR	1147808	ArgumentList	result_set		1147047	1					
ANR	1147809	Argument	result_set		1147047	0					
ANR	1147810	Identifier	result_set		1147047	0					
ANR	1147811	ExpressionStatement	INIT_PZVAL ( result_set )	755:6:23282:23304	1147047	2	True				
ANR	1147812	CallExpression	INIT_PZVAL ( result_set )		1147047	0					
ANR	1147813	Callee	INIT_PZVAL		1147047	0					
ANR	1147814	Identifier	INIT_PZVAL		1147047	0					
ANR	1147815	ArgumentList	result_set		1147047	1					
ANR	1147816	Argument	result_set		1147047	0					
ANR	1147817	Identifier	result_set		1147047	0					
ANR	1147818	ForStatement	for ( i = 0 ; i < count ; i ++ )		1147047	3					
ANR	1147819	ForInit	i = 0 ;	758:11:23360:23365	1147047	0	True				
ANR	1147820	AssignmentExpression	i = 0		1147047	0		=			
ANR	1147821	Identifier	i		1147047	0					
ANR	1147822	PrimaryExpression	0		1147047	1					
ANR	1147823	Condition	i < count	758:18:23367:23375	1147047	1	True				
ANR	1147824	RelationalExpression	i < count		1147047	0		<			
ANR	1147825	Identifier	i		1147047	0					
ANR	1147826	Identifier	count		1147047	1					
ANR	1147827	PostIncDecOperationExpression	i ++	758:29:23378:23380	1147047	2	True				
ANR	1147828	Identifier	i		1147047	0					
ANR	1147829	IncDec	++		1147047	1					
ANR	1147830	CompoundStatement		169:34:5731:5731	1147047	3					
ANR	1147831	IfStatement	if ( offset_capture )		1147047	0					
ANR	1147832	Condition	offset_capture	759:11:23396:23409	1147047	0	True				
ANR	1147833	Identifier	offset_capture		1147047	0					
ANR	1147834	CompoundStatement		170:27:5760:5760	1147047	1					
ANR	1147835	ExpressionStatement	"add_offset_pair ( result_set , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , offsets [ i << 1 ] , subpat_names [ i ] )"	760:8:23422:23551	1147047	0	True				
ANR	1147836	CallExpression	"add_offset_pair ( result_set , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , offsets [ i << 1 ] , subpat_names [ i ] )"		1147047	0					
ANR	1147837	Callee	add_offset_pair		1147047	0					
ANR	1147838	Identifier	add_offset_pair		1147047	0					
ANR	1147839	ArgumentList	result_set		1147047	1					
ANR	1147840	Argument	result_set		1147047	0					
ANR	1147841	Identifier	result_set		1147047	0					
ANR	1147842	Argument	( char * ) stringlist [ i ]		1147047	1					
ANR	1147843	CastExpression	( char * ) stringlist [ i ]		1147047	0					
ANR	1147844	CastTarget	char *		1147047	0					
ANR	1147845	ArrayIndexing	stringlist [ i ]		1147047	1					
ANR	1147846	Identifier	stringlist		1147047	0					
ANR	1147847	Identifier	i		1147047	1					
ANR	1147848	Argument	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1147047	2					
ANR	1147849	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1147047	0		-			
ANR	1147850	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1147047	0					
ANR	1147851	Identifier	offsets		1147047	0					
ANR	1147852	AdditiveExpression	( i << 1 ) + 1		1147047	1		+			
ANR	1147853	ShiftExpression	i << 1		1147047	0		<<			
ANR	1147854	Identifier	i		1147047	0					
ANR	1147855	PrimaryExpression	1		1147047	1					
ANR	1147856	PrimaryExpression	1		1147047	1					
ANR	1147857	ArrayIndexing	offsets [ i << 1 ]		1147047	1					
ANR	1147858	Identifier	offsets		1147047	0					
ANR	1147859	ShiftExpression	i << 1		1147047	1		<<			
ANR	1147860	Identifier	i		1147047	0					
ANR	1147861	PrimaryExpression	1		1147047	1					
ANR	1147862	Argument	offsets [ i << 1 ]		1147047	3					
ANR	1147863	ArrayIndexing	offsets [ i << 1 ]		1147047	0					
ANR	1147864	Identifier	offsets		1147047	0					
ANR	1147865	ShiftExpression	i << 1		1147047	1		<<			
ANR	1147866	Identifier	i		1147047	0					
ANR	1147867	PrimaryExpression	1		1147047	1					
ANR	1147868	Argument	subpat_names [ i ]		1147047	4					
ANR	1147869	ArrayIndexing	subpat_names [ i ]		1147047	0					
ANR	1147870	Identifier	subpat_names		1147047	0					
ANR	1147871	Identifier	i		1147047	1					
ANR	1147872	ElseStatement	else		1147047	0					
ANR	1147873	CompoundStatement		173:14:5915:5915	1147047	0					
ANR	1147874	IfStatement	if ( subpat_names [ i ] )		1147047	0					
ANR	1147875	Condition	subpat_names [ i ]	763:12:23581:23595	1147047	0	True				
ANR	1147876	ArrayIndexing	subpat_names [ i ]		1147047	0					
ANR	1147877	Identifier	subpat_names		1147047	0					
ANR	1147878	Identifier	i		1147047	1					
ANR	1147879	CompoundStatement		174:29:5946:5946	1147047	1					
ANR	1147880	ExpressionStatement	"add_assoc_stringl ( result_set , subpat_names [ i ] , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , 1 )"	764:9:23609:23733	1147047	0	True				
ANR	1147881	CallExpression	"add_assoc_stringl ( result_set , subpat_names [ i ] , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , 1 )"		1147047	0					
ANR	1147882	Callee	add_assoc_stringl		1147047	0					
ANR	1147883	Identifier	add_assoc_stringl		1147047	0					
ANR	1147884	ArgumentList	result_set		1147047	1					
ANR	1147885	Argument	result_set		1147047	0					
ANR	1147886	Identifier	result_set		1147047	0					
ANR	1147887	Argument	subpat_names [ i ]		1147047	1					
ANR	1147888	ArrayIndexing	subpat_names [ i ]		1147047	0					
ANR	1147889	Identifier	subpat_names		1147047	0					
ANR	1147890	Identifier	i		1147047	1					
ANR	1147891	Argument	( char * ) stringlist [ i ]		1147047	2					
ANR	1147892	CastExpression	( char * ) stringlist [ i ]		1147047	0					
ANR	1147893	CastTarget	char *		1147047	0					
ANR	1147894	ArrayIndexing	stringlist [ i ]		1147047	1					
ANR	1147895	Identifier	stringlist		1147047	0					
ANR	1147896	Identifier	i		1147047	1					
ANR	1147897	Argument	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1147047	3					
ANR	1147898	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1147047	0		-			
ANR	1147899	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1147047	0					
ANR	1147900	Identifier	offsets		1147047	0					
ANR	1147901	AdditiveExpression	( i << 1 ) + 1		1147047	1		+			
ANR	1147902	ShiftExpression	i << 1		1147047	0		<<			
ANR	1147903	Identifier	i		1147047	0					
ANR	1147904	PrimaryExpression	1		1147047	1					
ANR	1147905	PrimaryExpression	1		1147047	1					
ANR	1147906	ArrayIndexing	offsets [ i << 1 ]		1147047	1					
ANR	1147907	Identifier	offsets		1147047	0					
ANR	1147908	ShiftExpression	i << 1		1147047	1		<<			
ANR	1147909	Identifier	i		1147047	0					
ANR	1147910	PrimaryExpression	1		1147047	1					
ANR	1147911	Argument	1		1147047	4					
ANR	1147912	PrimaryExpression	1		1147047	0					
ANR	1147913	ExpressionStatement	"add_next_index_stringl ( result_set , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , 1 )"	767:8:23753:23864	1147047	1	True				
ANR	1147914	CallExpression	"add_next_index_stringl ( result_set , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , 1 )"		1147047	0					
ANR	1147915	Callee	add_next_index_stringl		1147047	0					
ANR	1147916	Identifier	add_next_index_stringl		1147047	0					
ANR	1147917	ArgumentList	result_set		1147047	1					
ANR	1147918	Argument	result_set		1147047	0					
ANR	1147919	Identifier	result_set		1147047	0					
ANR	1147920	Argument	( char * ) stringlist [ i ]		1147047	1					
ANR	1147921	CastExpression	( char * ) stringlist [ i ]		1147047	0					
ANR	1147922	CastTarget	char *		1147047	0					
ANR	1147923	ArrayIndexing	stringlist [ i ]		1147047	1					
ANR	1147924	Identifier	stringlist		1147047	0					
ANR	1147925	Identifier	i		1147047	1					
ANR	1147926	Argument	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1147047	2					
ANR	1147927	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1147047	0		-			
ANR	1147928	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1147047	0					
ANR	1147929	Identifier	offsets		1147047	0					
ANR	1147930	AdditiveExpression	( i << 1 ) + 1		1147047	1		+			
ANR	1147931	ShiftExpression	i << 1		1147047	0		<<			
ANR	1147932	Identifier	i		1147047	0					
ANR	1147933	PrimaryExpression	1		1147047	1					
ANR	1147934	PrimaryExpression	1		1147047	1					
ANR	1147935	ArrayIndexing	offsets [ i << 1 ]		1147047	1					
ANR	1147936	Identifier	offsets		1147047	0					
ANR	1147937	ShiftExpression	i << 1		1147047	1		<<			
ANR	1147938	Identifier	i		1147047	0					
ANR	1147939	PrimaryExpression	1		1147047	1					
ANR	1147940	Argument	1		1147047	3					
ANR	1147941	PrimaryExpression	1		1147047	0					
ANR	1147942	IfStatement	if ( mark )		1147047	4					
ANR	1147943	Condition	mark	772:10:23928:23931	1147047	0	True				
ANR	1147944	Identifier	mark		1147047	0					
ANR	1147945	CompoundStatement		183:16:6282:6282	1147047	1					
ANR	1147946	ExpressionStatement	"add_assoc_string ( result_set , ""MARK"" , ( char * ) mark , 1 )"	773:7:23943:23997	1147047	0	True				
ANR	1147947	CallExpression	"add_assoc_string ( result_set , ""MARK"" , ( char * ) mark , 1 )"		1147047	0					
ANR	1147948	Callee	add_assoc_string		1147047	0					
ANR	1147949	Identifier	add_assoc_string		1147047	0					
ANR	1147950	ArgumentList	result_set		1147047	1					
ANR	1147951	Argument	result_set		1147047	0					
ANR	1147952	Identifier	result_set		1147047	0					
ANR	1147953	Argument	"""MARK"""		1147047	1					
ANR	1147954	PrimaryExpression	"""MARK"""		1147047	0					
ANR	1147955	Argument	( char * ) mark		1147047	2					
ANR	1147956	CastExpression	( char * ) mark		1147047	0					
ANR	1147957	CastTarget	char *		1147047	0					
ANR	1147958	Identifier	mark		1147047	1					
ANR	1147959	Argument	1		1147047	3					
ANR	1147960	PrimaryExpression	1		1147047	0					
ANR	1147961	ExpressionStatement	"zend_hash_next_index_insert ( Z_ARRVAL_P ( subpats ) , & result_set , sizeof ( zval * ) , NULL )"	776:6:24056:24139	1147047	5	True				
ANR	1147962	CallExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( subpats ) , & result_set , sizeof ( zval * ) , NULL )"		1147047	0					
ANR	1147963	Callee	zend_hash_next_index_insert		1147047	0					
ANR	1147964	Identifier	zend_hash_next_index_insert		1147047	0					
ANR	1147965	ArgumentList	Z_ARRVAL_P ( subpats )		1147047	1					
ANR	1147966	Argument	Z_ARRVAL_P ( subpats )		1147047	0					
ANR	1147967	CallExpression	Z_ARRVAL_P ( subpats )		1147047	0					
ANR	1147968	Callee	Z_ARRVAL_P		1147047	0					
ANR	1147969	Identifier	Z_ARRVAL_P		1147047	0					
ANR	1147970	ArgumentList	subpats		1147047	1					
ANR	1147971	Argument	subpats		1147047	0					
ANR	1147972	Identifier	subpats		1147047	0					
ANR	1147973	Argument	& result_set		1147047	1					
ANR	1147974	UnaryOperationExpression	& result_set		1147047	0					
ANR	1147975	UnaryOperator	&		1147047	0					
ANR	1147976	Identifier	result_set		1147047	1					
ANR	1147977	Argument	sizeof ( zval * )		1147047	2					
ANR	1147978	SizeofExpression	sizeof ( zval * )		1147047	0					
ANR	1147979	Sizeof	sizeof		1147047	0					
ANR	1147980	SizeofOperand	zval *		1147047	1					
ANR	1147981	Argument	NULL		1147047	3					
ANR	1147982	Identifier	NULL		1147047	0					
ANR	1147983	ElseStatement	else		1147047	0					
ANR	1147984	CompoundStatement		189:11:6507:6507	1147047	0					
ANR	1147985	ForStatement	for ( i = 0 ; i < count ; i ++ )		1147047	0					
ANR	1147986	ForInit	i = 0 ;	780:10:24273:24278	1147047	0	True				
ANR	1147987	AssignmentExpression	i = 0		1147047	0		=			
ANR	1147988	Identifier	i		1147047	0					
ANR	1147989	PrimaryExpression	0		1147047	1					
ANR	1147990	Condition	i < count	780:17:24280:24288	1147047	1	True				
ANR	1147991	RelationalExpression	i < count		1147047	0		<			
ANR	1147992	Identifier	i		1147047	0					
ANR	1147993	Identifier	count		1147047	1					
ANR	1147994	PostIncDecOperationExpression	i ++	780:28:24291:24293	1147047	2	True				
ANR	1147995	Identifier	i		1147047	0					
ANR	1147996	IncDec	++		1147047	1					
ANR	1147997	CompoundStatement		191:33:6644:6644	1147047	3					
ANR	1147998	IfStatement	if ( offset_capture )		1147047	0					
ANR	1147999	Condition	offset_capture	781:10:24308:24321	1147047	0	True				
ANR	1148000	Identifier	offset_capture		1147047	0					
ANR	1148001	CompoundStatement		192:26:6672:6672	1147047	1					
ANR	1148002	ExpressionStatement	"add_offset_pair ( subpats , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , offsets [ i << 1 ] , subpat_names [ i ] )"	782:7:24333:24469	1147047	0	True				
ANR	1148003	CallExpression	"add_offset_pair ( subpats , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , offsets [ i << 1 ] , subpat_names [ i ] )"		1147047	0					
ANR	1148004	Callee	add_offset_pair		1147047	0					
ANR	1148005	Identifier	add_offset_pair		1147047	0					
ANR	1148006	ArgumentList	subpats		1147047	1					
ANR	1148007	Argument	subpats		1147047	0					
ANR	1148008	Identifier	subpats		1147047	0					
ANR	1148009	Argument	( char * ) stringlist [ i ]		1147047	1					
ANR	1148010	CastExpression	( char * ) stringlist [ i ]		1147047	0					
ANR	1148011	CastTarget	char *		1147047	0					
ANR	1148012	ArrayIndexing	stringlist [ i ]		1147047	1					
ANR	1148013	Identifier	stringlist		1147047	0					
ANR	1148014	Identifier	i		1147047	1					
ANR	1148015	Argument	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1147047	2					
ANR	1148016	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1147047	0		-			
ANR	1148017	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1147047	0					
ANR	1148018	Identifier	offsets		1147047	0					
ANR	1148019	AdditiveExpression	( i << 1 ) + 1		1147047	1		+			
ANR	1148020	ShiftExpression	i << 1		1147047	0		<<			
ANR	1148021	Identifier	i		1147047	0					
ANR	1148022	PrimaryExpression	1		1147047	1					
ANR	1148023	PrimaryExpression	1		1147047	1					
ANR	1148024	ArrayIndexing	offsets [ i << 1 ]		1147047	1					
ANR	1148025	Identifier	offsets		1147047	0					
ANR	1148026	ShiftExpression	i << 1		1147047	1		<<			
ANR	1148027	Identifier	i		1147047	0					
ANR	1148028	PrimaryExpression	1		1147047	1					
ANR	1148029	Argument	offsets [ i << 1 ]		1147047	3					
ANR	1148030	ArrayIndexing	offsets [ i << 1 ]		1147047	0					
ANR	1148031	Identifier	offsets		1147047	0					
ANR	1148032	ShiftExpression	i << 1		1147047	1		<<			
ANR	1148033	Identifier	i		1147047	0					
ANR	1148034	PrimaryExpression	1		1147047	1					
ANR	1148035	Argument	subpat_names [ i ]		1147047	4					
ANR	1148036	ArrayIndexing	subpat_names [ i ]		1147047	0					
ANR	1148037	Identifier	subpat_names		1147047	0					
ANR	1148038	Identifier	i		1147047	1					
ANR	1148039	ElseStatement	else		1147047	0					
ANR	1148040	CompoundStatement		196:13:6832:6832	1147047	0					
ANR	1148041	IfStatement	if ( subpat_names [ i ] )		1147047	0					
ANR	1148042	Condition	subpat_names [ i ]	786:11:24497:24511	1147047	0	True				
ANR	1148043	ArrayIndexing	subpat_names [ i ]		1147047	0					
ANR	1148044	Identifier	subpat_names		1147047	0					
ANR	1148045	Identifier	i		1147047	1					
ANR	1148046	CompoundStatement		197:28:6862:6862	1147047	1					
ANR	1148047	ExpressionStatement	"add_assoc_stringl ( subpats , subpat_names [ i ] , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , 1 )"	787:8:24524:24642	1147047	0	True				
ANR	1148048	CallExpression	"add_assoc_stringl ( subpats , subpat_names [ i ] , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , 1 )"		1147047	0					
ANR	1148049	Callee	add_assoc_stringl		1147047	0					
ANR	1148050	Identifier	add_assoc_stringl		1147047	0					
ANR	1148051	ArgumentList	subpats		1147047	1					
ANR	1148052	Argument	subpats		1147047	0					
ANR	1148053	Identifier	subpats		1147047	0					
ANR	1148054	Argument	subpat_names [ i ]		1147047	1					
ANR	1148055	ArrayIndexing	subpat_names [ i ]		1147047	0					
ANR	1148056	Identifier	subpat_names		1147047	0					
ANR	1148057	Identifier	i		1147047	1					
ANR	1148058	Argument	( char * ) stringlist [ i ]		1147047	2					
ANR	1148059	CastExpression	( char * ) stringlist [ i ]		1147047	0					
ANR	1148060	CastTarget	char *		1147047	0					
ANR	1148061	ArrayIndexing	stringlist [ i ]		1147047	1					
ANR	1148062	Identifier	stringlist		1147047	0					
ANR	1148063	Identifier	i		1147047	1					
ANR	1148064	Argument	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1147047	3					
ANR	1148065	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1147047	0		-			
ANR	1148066	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1147047	0					
ANR	1148067	Identifier	offsets		1147047	0					
ANR	1148068	AdditiveExpression	( i << 1 ) + 1		1147047	1		+			
ANR	1148069	ShiftExpression	i << 1		1147047	0		<<			
ANR	1148070	Identifier	i		1147047	0					
ANR	1148071	PrimaryExpression	1		1147047	1					
ANR	1148072	PrimaryExpression	1		1147047	1					
ANR	1148073	ArrayIndexing	offsets [ i << 1 ]		1147047	1					
ANR	1148074	Identifier	offsets		1147047	0					
ANR	1148075	ShiftExpression	i << 1		1147047	1		<<			
ANR	1148076	Identifier	i		1147047	0					
ANR	1148077	PrimaryExpression	1		1147047	1					
ANR	1148078	Argument	1		1147047	4					
ANR	1148079	PrimaryExpression	1		1147047	0					
ANR	1148080	ExpressionStatement	"add_next_index_stringl ( subpats , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , 1 )"	790:7:24660:24767	1147047	1	True				
ANR	1148081	CallExpression	"add_next_index_stringl ( subpats , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , 1 )"		1147047	0					
ANR	1148082	Callee	add_next_index_stringl		1147047	0					
ANR	1148083	Identifier	add_next_index_stringl		1147047	0					
ANR	1148084	ArgumentList	subpats		1147047	1					
ANR	1148085	Argument	subpats		1147047	0					
ANR	1148086	Identifier	subpats		1147047	0					
ANR	1148087	Argument	( char * ) stringlist [ i ]		1147047	1					
ANR	1148088	CastExpression	( char * ) stringlist [ i ]		1147047	0					
ANR	1148089	CastTarget	char *		1147047	0					
ANR	1148090	ArrayIndexing	stringlist [ i ]		1147047	1					
ANR	1148091	Identifier	stringlist		1147047	0					
ANR	1148092	Identifier	i		1147047	1					
ANR	1148093	Argument	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1147047	2					
ANR	1148094	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1147047	0		-			
ANR	1148095	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1147047	0					
ANR	1148096	Identifier	offsets		1147047	0					
ANR	1148097	AdditiveExpression	( i << 1 ) + 1		1147047	1		+			
ANR	1148098	ShiftExpression	i << 1		1147047	0		<<			
ANR	1148099	Identifier	i		1147047	0					
ANR	1148100	PrimaryExpression	1		1147047	1					
ANR	1148101	PrimaryExpression	1		1147047	1					
ANR	1148102	ArrayIndexing	offsets [ i << 1 ]		1147047	1					
ANR	1148103	Identifier	offsets		1147047	0					
ANR	1148104	ShiftExpression	i << 1		1147047	1		<<			
ANR	1148105	Identifier	i		1147047	0					
ANR	1148106	PrimaryExpression	1		1147047	1					
ANR	1148107	Argument	1		1147047	3					
ANR	1148108	PrimaryExpression	1		1147047	0					
ANR	1148109	IfStatement	if ( mark )		1147047	1					
ANR	1148110	Condition	mark	795:9:24827:24830	1147047	0	True				
ANR	1148111	Identifier	mark		1147047	0					
ANR	1148112	CompoundStatement		206:15:7181:7181	1147047	1					
ANR	1148113	ExpressionStatement	"add_assoc_string ( subpats , ""MARK"" , ( char * ) mark , 1 )"	796:6:24841:24892	1147047	0	True				
ANR	1148114	CallExpression	"add_assoc_string ( subpats , ""MARK"" , ( char * ) mark , 1 )"		1147047	0					
ANR	1148115	Callee	add_assoc_string		1147047	0					
ANR	1148116	Identifier	add_assoc_string		1147047	0					
ANR	1148117	ArgumentList	subpats		1147047	1					
ANR	1148118	Argument	subpats		1147047	0					
ANR	1148119	Identifier	subpats		1147047	0					
ANR	1148120	Argument	"""MARK"""		1147047	1					
ANR	1148121	PrimaryExpression	"""MARK"""		1147047	0					
ANR	1148122	Argument	( char * ) mark		1147047	2					
ANR	1148123	CastExpression	( char * ) mark		1147047	0					
ANR	1148124	CastTarget	char *		1147047	0					
ANR	1148125	Identifier	mark		1147047	1					
ANR	1148126	Argument	1		1147047	3					
ANR	1148127	PrimaryExpression	1		1147047	0					
ANR	1148128	ExpressionStatement	pcre_free ( ( void * ) stringlist )	800:4:24912:24942	1147047	2	True				
ANR	1148129	CallExpression	pcre_free ( ( void * ) stringlist )		1147047	0					
ANR	1148130	Callee	pcre_free		1147047	0					
ANR	1148131	Identifier	pcre_free		1147047	0					
ANR	1148132	ArgumentList	( void * ) stringlist		1147047	1					
ANR	1148133	Argument	( void * ) stringlist		1147047	0					
ANR	1148134	CastExpression	( void * ) stringlist		1147047	0					
ANR	1148135	CastTarget	void *		1147047	0					
ANR	1148136	Identifier	stringlist		1147047	1					
ANR	1148137	ElseStatement	else		1147047	0					
ANR	1148138	IfStatement	if ( count == PCRE_ERROR_NOMATCH )		1147047	0					
ANR	1148139	Condition	count == PCRE_ERROR_NOMATCH	802:13:24962:24988	1147047	0	True				
ANR	1148140	EqualityExpression	count == PCRE_ERROR_NOMATCH		1147047	0		==			
ANR	1148141	Identifier	count		1147047	0					
ANR	1148142	Identifier	PCRE_ERROR_NOMATCH		1147047	1					
ANR	1148143	CompoundStatement		213:42:7339:7339	1147047	1					
ANR	1148144	IfStatement	if ( g_notempty != 0 && start_offset < subject_len )		1147047	0					
ANR	1148145	Condition	g_notempty != 0 && start_offset < subject_len	807:7:25262:25306	1147047	0	True				
ANR	1148146	AndExpression	g_notempty != 0 && start_offset < subject_len		1147047	0		&&			
ANR	1148147	EqualityExpression	g_notempty != 0		1147047	0		!=			
ANR	1148148	Identifier	g_notempty		1147047	0					
ANR	1148149	PrimaryExpression	0		1147047	1					
ANR	1148150	RelationalExpression	start_offset < subject_len		1147047	1		<			
ANR	1148151	Identifier	start_offset		1147047	0					
ANR	1148152	Identifier	subject_len		1147047	1					
ANR	1148153	CompoundStatement		219:4:7663:7728	1147047	1					
ANR	1148154	IdentifierDeclStatement	"int unit_len = calculate_unit_length ( pce , subject + start_offset ) ;"	808:4:25315:25380	1147047	0	True				
ANR	1148155	IdentifierDecl	"unit_len = calculate_unit_length ( pce , subject + start_offset )"		1147047	0					
ANR	1148156	IdentifierDeclType	int		1147047	0					
ANR	1148157	Identifier	unit_len		1147047	1					
ANR	1148158	AssignmentExpression	"unit_len = calculate_unit_length ( pce , subject + start_offset )"		1147047	2		=			
ANR	1148159	Identifier	unit_len		1147047	0					
ANR	1148160	CallExpression	"calculate_unit_length ( pce , subject + start_offset )"		1147047	1					
ANR	1148161	Callee	calculate_unit_length		1147047	0					
ANR	1148162	Identifier	calculate_unit_length		1147047	0					
ANR	1148163	ArgumentList	pce		1147047	1					
ANR	1148164	Argument	pce		1147047	0					
ANR	1148165	Identifier	pce		1147047	0					
ANR	1148166	Argument	subject + start_offset		1147047	1					
ANR	1148167	AdditiveExpression	subject + start_offset		1147047	0		+			
ANR	1148168	Identifier	subject		1147047	0					
ANR	1148169	Identifier	start_offset		1147047	1					
ANR	1148170	ExpressionStatement	offsets [ 0 ] = start_offset	810:4:25387:25412	1147047	1	True				
ANR	1148171	AssignmentExpression	offsets [ 0 ] = start_offset		1147047	0		=			
ANR	1148172	ArrayIndexing	offsets [ 0 ]		1147047	0					
ANR	1148173	Identifier	offsets		1147047	0					
ANR	1148174	PrimaryExpression	0		1147047	1					
ANR	1148175	Identifier	start_offset		1147047	1					
ANR	1148176	ExpressionStatement	offsets [ 1 ] = start_offset + unit_len	811:4:25418:25454	1147047	2	True				
ANR	1148177	AssignmentExpression	offsets [ 1 ] = start_offset + unit_len		1147047	0		=			
ANR	1148178	ArrayIndexing	offsets [ 1 ]		1147047	0					
ANR	1148179	Identifier	offsets		1147047	0					
ANR	1148180	PrimaryExpression	1		1147047	1					
ANR	1148181	AdditiveExpression	start_offset + unit_len		1147047	1		+			
ANR	1148182	Identifier	start_offset		1147047	0					
ANR	1148183	Identifier	unit_len		1147047	1					
ANR	1148184	ElseStatement	else		1147047	0					
ANR	1148185	BreakStatement	break ;	813:4:25470:25475	1147047	0	True				
ANR	1148186	ElseStatement	else		1147047	0					
ANR	1148187	CompoundStatement		225:9:7834:7834	1147047	0					
ANR	1148188	Statement	pcre_handle_exec_error	815:3:25491:25512	1147047	0	True				
ANR	1148189	Statement	(	815:25:25513:25513	1147047	1	True				
ANR	1148190	Statement	count	815:26:25514:25518	1147047	2	True				
ANR	1148191	Statement	TSRMLS_CC	815:32:25520:25528	1147047	3	True				
ANR	1148192	Statement	)	815:41:25529:25529	1147047	4	True				
ANR	1148193	ExpressionStatement		815:42:25530:25530	1147047	5	True				
ANR	1148194	BreakStatement	break ;	816:3:25535:25540	1147047	6	True				
ANR	1148195	ExpressionStatement	g_notempty = ( offsets [ 1 ] == offsets [ 0 ] ) ? PCRE_NOTEMPTY_ATSTART | PCRE_ANCHORED : 0	823:2:25824:25906	1147047	4	True				
ANR	1148196	AssignmentExpression	g_notempty = ( offsets [ 1 ] == offsets [ 0 ] ) ? PCRE_NOTEMPTY_ATSTART | PCRE_ANCHORED : 0		1147047	0		=			
ANR	1148197	Identifier	g_notempty		1147047	0					
ANR	1148198	ConditionalExpression	( offsets [ 1 ] == offsets [ 0 ] ) ? PCRE_NOTEMPTY_ATSTART | PCRE_ANCHORED : 0		1147047	1					
ANR	1148199	Condition	offsets [ 1 ] == offsets [ 0 ]		1147047	0					
ANR	1148200	EqualityExpression	offsets [ 1 ] == offsets [ 0 ]		1147047	0		==			
ANR	1148201	ArrayIndexing	offsets [ 1 ]		1147047	0					
ANR	1148202	Identifier	offsets		1147047	0					
ANR	1148203	PrimaryExpression	1		1147047	1					
ANR	1148204	ArrayIndexing	offsets [ 0 ]		1147047	1					
ANR	1148205	Identifier	offsets		1147047	0					
ANR	1148206	PrimaryExpression	0		1147047	1					
ANR	1148207	InclusiveOrExpression	PCRE_NOTEMPTY_ATSTART | PCRE_ANCHORED		1147047	1		|			
ANR	1148208	Identifier	PCRE_NOTEMPTY_ATSTART		1147047	0					
ANR	1148209	Identifier	PCRE_ANCHORED		1147047	1					
ANR	1148210	PrimaryExpression	0		1147047	2					
ANR	1148211	ExpressionStatement	start_offset = offsets [ 1 ]	826:2:25975:26000	1147047	5	True				
ANR	1148212	AssignmentExpression	start_offset = offsets [ 1 ]		1147047	0		=			
ANR	1148213	Identifier	start_offset		1147047	0					
ANR	1148214	ArrayIndexing	offsets [ 1 ]		1147047	1					
ANR	1148215	Identifier	offsets		1147047	0					
ANR	1148216	PrimaryExpression	1		1147047	1					
ANR	1148217	Condition	global	827:10:26012:26017	1147047	1	True				
ANR	1148218	Identifier	global		1147047	0					
ANR	1148219	IfStatement	if ( global && subpats && subpats_order == PREG_PATTERN_ORDER )		1147047	47					
ANR	1148220	Condition	global && subpats && subpats_order == PREG_PATTERN_ORDER	830:5:26086:26141	1147047	0	True				
ANR	1148221	AndExpression	global && subpats && subpats_order == PREG_PATTERN_ORDER		1147047	0		&&			
ANR	1148222	Identifier	global		1147047	0					
ANR	1148223	AndExpression	subpats && subpats_order == PREG_PATTERN_ORDER		1147047	1		&&			
ANR	1148224	Identifier	subpats		1147047	0					
ANR	1148225	EqualityExpression	subpats_order == PREG_PATTERN_ORDER		1147047	1		==			
ANR	1148226	Identifier	subpats_order		1147047	0					
ANR	1148227	Identifier	PREG_PATTERN_ORDER		1147047	1					
ANR	1148228	CompoundStatement		241:63:8492:8492	1147047	1					
ANR	1148229	ForStatement	for ( i = 0 ; i < num_subpats ; i ++ )		1147047	0					
ANR	1148230	ForInit	i = 0 ;	831:7:26153:26158	1147047	0	True				
ANR	1148231	AssignmentExpression	i = 0		1147047	0		=			
ANR	1148232	Identifier	i		1147047	0					
ANR	1148233	PrimaryExpression	0		1147047	1					
ANR	1148234	Condition	i < num_subpats	831:14:26160:26174	1147047	1	True				
ANR	1148235	RelationalExpression	i < num_subpats		1147047	0		<			
ANR	1148236	Identifier	i		1147047	0					
ANR	1148237	Identifier	num_subpats		1147047	1					
ANR	1148238	PostIncDecOperationExpression	i ++	831:31:26177:26179	1147047	2	True				
ANR	1148239	Identifier	i		1147047	0					
ANR	1148240	IncDec	++		1147047	1					
ANR	1148241	CompoundStatement		242:36:8530:8530	1147047	3					
ANR	1148242	IfStatement	if ( subpat_names [ i ] )		1147047	0					
ANR	1148243	Condition	subpat_names [ i ]	832:7:26191:26205	1147047	0	True				
ANR	1148244	ArrayIndexing	subpat_names [ i ]		1147047	0					
ANR	1148245	Identifier	subpat_names		1147047	0					
ANR	1148246	Identifier	i		1147047	1					
ANR	1148247	CompoundStatement		243:24:8556:8556	1147047	1					
ANR	1148248	ExpressionStatement	"zend_hash_update ( Z_ARRVAL_P ( subpats ) , subpat_names [ i ] , strlen ( subpat_names [ i ] ) + 1 , & match_sets [ i ] , sizeof ( zval * ) , NULL )"	833:4:26214:26342	1147047	0	True				
ANR	1148249	CallExpression	"zend_hash_update ( Z_ARRVAL_P ( subpats ) , subpat_names [ i ] , strlen ( subpat_names [ i ] ) + 1 , & match_sets [ i ] , sizeof ( zval * ) , NULL )"		1147047	0					
ANR	1148250	Callee	zend_hash_update		1147047	0					
ANR	1148251	Identifier	zend_hash_update		1147047	0					
ANR	1148252	ArgumentList	Z_ARRVAL_P ( subpats )		1147047	1					
ANR	1148253	Argument	Z_ARRVAL_P ( subpats )		1147047	0					
ANR	1148254	CallExpression	Z_ARRVAL_P ( subpats )		1147047	0					
ANR	1148255	Callee	Z_ARRVAL_P		1147047	0					
ANR	1148256	Identifier	Z_ARRVAL_P		1147047	0					
ANR	1148257	ArgumentList	subpats		1147047	1					
ANR	1148258	Argument	subpats		1147047	0					
ANR	1148259	Identifier	subpats		1147047	0					
ANR	1148260	Argument	subpat_names [ i ]		1147047	1					
ANR	1148261	ArrayIndexing	subpat_names [ i ]		1147047	0					
ANR	1148262	Identifier	subpat_names		1147047	0					
ANR	1148263	Identifier	i		1147047	1					
ANR	1148264	Argument	strlen ( subpat_names [ i ] ) + 1		1147047	2					
ANR	1148265	AdditiveExpression	strlen ( subpat_names [ i ] ) + 1		1147047	0		+			
ANR	1148266	CallExpression	strlen ( subpat_names [ i ] )		1147047	0					
ANR	1148267	Callee	strlen		1147047	0					
ANR	1148268	Identifier	strlen		1147047	0					
ANR	1148269	ArgumentList	subpat_names [ i ]		1147047	1					
ANR	1148270	Argument	subpat_names [ i ]		1147047	0					
ANR	1148271	ArrayIndexing	subpat_names [ i ]		1147047	0					
ANR	1148272	Identifier	subpat_names		1147047	0					
ANR	1148273	Identifier	i		1147047	1					
ANR	1148274	PrimaryExpression	1		1147047	1					
ANR	1148275	Argument	& match_sets [ i ]		1147047	3					
ANR	1148276	UnaryOperationExpression	& match_sets [ i ]		1147047	0					
ANR	1148277	UnaryOperator	&		1147047	0					
ANR	1148278	ArrayIndexing	match_sets [ i ]		1147047	1					
ANR	1148279	Identifier	match_sets		1147047	0					
ANR	1148280	Identifier	i		1147047	1					
ANR	1148281	Argument	sizeof ( zval * )		1147047	4					
ANR	1148282	SizeofExpression	sizeof ( zval * )		1147047	0					
ANR	1148283	Sizeof	sizeof		1147047	0					
ANR	1148284	SizeofOperand	zval *		1147047	1					
ANR	1148285	Argument	NULL		1147047	5					
ANR	1148286	Identifier	NULL		1147047	0					
ANR	1148287	ExpressionStatement	Z_ADDREF_P ( match_sets [ i ] )	835:4:26348:26373	1147047	1	True				
ANR	1148288	CallExpression	Z_ADDREF_P ( match_sets [ i ] )		1147047	0					
ANR	1148289	Callee	Z_ADDREF_P		1147047	0					
ANR	1148290	Identifier	Z_ADDREF_P		1147047	0					
ANR	1148291	ArgumentList	match_sets [ i ]		1147047	1					
ANR	1148292	Argument	match_sets [ i ]		1147047	0					
ANR	1148293	ArrayIndexing	match_sets [ i ]		1147047	0					
ANR	1148294	Identifier	match_sets		1147047	0					
ANR	1148295	Identifier	i		1147047	1					
ANR	1148296	ExpressionStatement	"zend_hash_next_index_insert ( Z_ARRVAL_P ( subpats ) , & match_sets [ i ] , sizeof ( zval * ) , NULL )"	837:3:26383:26469	1147047	1	True				
ANR	1148297	CallExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( subpats ) , & match_sets [ i ] , sizeof ( zval * ) , NULL )"		1147047	0					
ANR	1148298	Callee	zend_hash_next_index_insert		1147047	0					
ANR	1148299	Identifier	zend_hash_next_index_insert		1147047	0					
ANR	1148300	ArgumentList	Z_ARRVAL_P ( subpats )		1147047	1					
ANR	1148301	Argument	Z_ARRVAL_P ( subpats )		1147047	0					
ANR	1148302	CallExpression	Z_ARRVAL_P ( subpats )		1147047	0					
ANR	1148303	Callee	Z_ARRVAL_P		1147047	0					
ANR	1148304	Identifier	Z_ARRVAL_P		1147047	0					
ANR	1148305	ArgumentList	subpats		1147047	1					
ANR	1148306	Argument	subpats		1147047	0					
ANR	1148307	Identifier	subpats		1147047	0					
ANR	1148308	Argument	& match_sets [ i ]		1147047	1					
ANR	1148309	UnaryOperationExpression	& match_sets [ i ]		1147047	0					
ANR	1148310	UnaryOperator	&		1147047	0					
ANR	1148311	ArrayIndexing	match_sets [ i ]		1147047	1					
ANR	1148312	Identifier	match_sets		1147047	0					
ANR	1148313	Identifier	i		1147047	1					
ANR	1148314	Argument	sizeof ( zval * )		1147047	2					
ANR	1148315	SizeofExpression	sizeof ( zval * )		1147047	0					
ANR	1148316	Sizeof	sizeof		1147047	0					
ANR	1148317	SizeofOperand	zval *		1147047	1					
ANR	1148318	Argument	NULL		1147047	3					
ANR	1148319	Identifier	NULL		1147047	0					
ANR	1148320	ExpressionStatement	efree ( match_sets )	839:2:26477:26494	1147047	1	True				
ANR	1148321	CallExpression	efree ( match_sets )		1147047	0					
ANR	1148322	Callee	efree		1147047	0					
ANR	1148323	Identifier	efree		1147047	0					
ANR	1148324	ArgumentList	match_sets		1147047	1					
ANR	1148325	Argument	match_sets		1147047	0					
ANR	1148326	Identifier	match_sets		1147047	0					
ANR	1148327	IfStatement	if ( marks )		1147047	2					
ANR	1148328	Condition	marks	841:6:26503:26507	1147047	0	True				
ANR	1148329	Identifier	marks		1147047	0					
ANR	1148330	CompoundStatement		252:13:8858:8858	1147047	1					
ANR	1148331	ExpressionStatement	"add_assoc_zval ( subpats , ""MARK"" , marks )"	842:3:26515:26553	1147047	0	True				
ANR	1148332	CallExpression	"add_assoc_zval ( subpats , ""MARK"" , marks )"		1147047	0					
ANR	1148333	Callee	add_assoc_zval		1147047	0					
ANR	1148334	Identifier	add_assoc_zval		1147047	0					
ANR	1148335	ArgumentList	subpats		1147047	1					
ANR	1148336	Argument	subpats		1147047	0					
ANR	1148337	Identifier	subpats		1147047	0					
ANR	1148338	Argument	"""MARK"""		1147047	1					
ANR	1148339	PrimaryExpression	"""MARK"""		1147047	0					
ANR	1148340	Argument	marks		1147047	2					
ANR	1148341	Identifier	marks		1147047	0					
ANR	1148342	ExpressionStatement	efree ( offsets )	846:1:26564:26578	1147047	48	True				
ANR	1148343	CallExpression	efree ( offsets )		1147047	0					
ANR	1148344	Callee	efree		1147047	0					
ANR	1148345	Identifier	efree		1147047	0					
ANR	1148346	ArgumentList	offsets		1147047	1					
ANR	1148347	Argument	offsets		1147047	0					
ANR	1148348	Identifier	offsets		1147047	0					
ANR	1148349	ExpressionStatement	efree ( subpat_names )	847:1:26581:26600	1147047	49	True				
ANR	1148350	CallExpression	efree ( subpat_names )		1147047	0					
ANR	1148351	Callee	efree		1147047	0					
ANR	1148352	Identifier	efree		1147047	0					
ANR	1148353	ArgumentList	subpat_names		1147047	1					
ANR	1148354	Argument	subpat_names		1147047	0					
ANR	1148355	Identifier	subpat_names		1147047	0					
ANR	1148356	IfStatement	if ( PCRE_G ( error_code ) == PHP_PCRE_NO_ERROR )		1147047	50					
ANR	1148357	Condition	PCRE_G ( error_code ) == PHP_PCRE_NO_ERROR	850:5:26642:26680	1147047	0	True				
ANR	1148358	EqualityExpression	PCRE_G ( error_code ) == PHP_PCRE_NO_ERROR		1147047	0		==			
ANR	1148359	CallExpression	PCRE_G ( error_code )		1147047	0					
ANR	1148360	Callee	PCRE_G		1147047	0					
ANR	1148361	Identifier	PCRE_G		1147047	0					
ANR	1148362	ArgumentList	error_code		1147047	1					
ANR	1148363	Argument	error_code		1147047	0					
ANR	1148364	Identifier	error_code		1147047	0					
ANR	1148365	Identifier	PHP_PCRE_NO_ERROR		1147047	1					
ANR	1148366	CompoundStatement		261:46:9031:9031	1147047	1					
ANR	1148367	ExpressionStatement	RETVAL_LONG ( matched )	851:2:26687:26707	1147047	0	True				
ANR	1148368	CallExpression	RETVAL_LONG ( matched )		1147047	0					
ANR	1148369	Callee	RETVAL_LONG		1147047	0					
ANR	1148370	Identifier	RETVAL_LONG		1147047	0					
ANR	1148371	ArgumentList	matched		1147047	1					
ANR	1148372	Argument	matched		1147047	0					
ANR	1148373	Identifier	matched		1147047	0					
ANR	1148374	ElseStatement	else		1147047	0					
ANR	1148375	CompoundStatement		263:8:9065:9065	1147047	0					
ANR	1148376	ExpressionStatement	RETVAL_FALSE	853:2:26721:26733	1147047	0	True				
ANR	1148377	Identifier	RETVAL_FALSE		1147047	0					
ANR	1148378	ReturnType	PHPAPI void		1147047	1					
ANR	1148379	Identifier	php_pcre_match_impl		1147047	2					
ANR	1148380	ParameterList	"pcre_cache_entry * pce , char * subject , int subject_len , zval * return_value , zval * subpats , int global , int use_flags , long flags , long start_offset TSRMLS_DC"		1147047	3					
ANR	1148381	Parameter	pcre_cache_entry * pce	588:32:17492:17512	1147047	0	True				
ANR	1148382	ParameterType	pcre_cache_entry *		1147047	0					
ANR	1148383	Identifier	pce		1147047	1					
ANR	1148384	Parameter	char * subject	588:55:17515:17527	1147047	1	True				
ANR	1148385	ParameterType	char *		1147047	0					
ANR	1148386	Identifier	subject		1147047	1					
ANR	1148387	Parameter	int subject_len	588:70:17530:17544	1147047	2	True				
ANR	1148388	ParameterType	int		1147047	0					
ANR	1148389	Identifier	subject_len		1147047	1					
ANR	1148390	Parameter	zval * return_value	588:87:17547:17564	1147047	3	True				
ANR	1148391	ParameterType	zval *		1147047	0					
ANR	1148392	Identifier	return_value		1147047	1					
ANR	1148393	Parameter	zval * subpats	589:1:17568:17580	1147047	4	True				
ANR	1148394	ParameterType	zval *		1147047	0					
ANR	1148395	Identifier	subpats		1147047	1					
ANR	1148396	Parameter	int global	589:16:17583:17592	1147047	5	True				
ANR	1148397	ParameterType	int		1147047	0					
ANR	1148398	Identifier	global		1147047	1					
ANR	1148399	Parameter	int use_flags	589:28:17595:17607	1147047	6	True				
ANR	1148400	ParameterType	int		1147047	0					
ANR	1148401	Identifier	use_flags		1147047	1					
ANR	1148402	Parameter	long flags	589:43:17610:17619	1147047	7	True				
ANR	1148403	ParameterType	long		1147047	0					
ANR	1148404	Identifier	flags		1147047	1					
ANR	1148405	Parameter	long start_offset TSRMLS_DC	589:55:17622:17648	1147047	8	True				
ANR	1148406	ParameterType	long start_offset		1147047	0					
ANR	1148407	Identifier	TSRMLS_DC		1147047	1					
ANR	1148408	CFGEntryNode	ENTRY		1147047		True				
ANR	1148409	CFGExitNode	EXIT		1147047		True				
ANR	1148410	Symbol	num_subpats		1147047						
ANR	1148411	Symbol	* subpat_names		1147047						
ANR	1148412	Symbol	pce -> extra		1147047						
ANR	1148413	Symbol	pcre_exec		1147047						
ANR	1148414	Symbol	subject		1147047						
ANR	1148415	Symbol	g_notempty		1147047						
ANR	1148416	Symbol	TSRMLS_DC		1147047						
ANR	1148417	Symbol	extra -> flags		1147047						
ANR	1148418	Symbol	strlen		1147047						
ANR	1148419	Symbol	subject_len		1147047						
ANR	1148420	Symbol	exoptions		1147047						
ANR	1148421	Symbol	pcre_get_substring_list		1147047						
ANR	1148422	Symbol	& result_set		1147047						
ANR	1148423	Symbol	NULL		1147047						
ANR	1148424	Symbol	match_sets		1147047						
ANR	1148425	Symbol	PCRE_EXTRA_MARK		1147047						
ANR	1148426	Symbol	count		1147047						
ANR	1148427	Symbol	* match_sets		1147047						
ANR	1148428	Symbol	result_set		1147047						
ANR	1148429	Symbol	subpat_names		1147047						
ANR	1148430	Symbol	rc		1147047						
ANR	1148431	Symbol	PCRE_ERROR_NOMATCH		1147047						
ANR	1148432	Symbol	& extra_data		1147047						
ANR	1148433	Symbol	* extra		1147047						
ANR	1148434	Symbol	subpats_order		1147047						
ANR	1148435	Symbol	pce -> re		1147047						
ANR	1148436	Symbol	PREG_PATTERN_ORDER		1147047						
ANR	1148437	Symbol	matched		1147047						
ANR	1148438	Symbol	error_code		1147047						
ANR	1148439	Symbol	extra_data . flags		1147047						
ANR	1148440	Symbol	* pce		1147047						
ANR	1148441	Symbol	return_value		1147047						
ANR	1148442	Symbol	offset_capture		1147047						
ANR	1148443	Symbol	backtrack_limit		1147047						
ANR	1148444	Symbol	flags		1147047						
ANR	1148445	Symbol	PREG_SET_ORDER		1147047						
ANR	1148446	Symbol	& mark		1147047						
ANR	1148447	Symbol	unit_len		1147047						
ANR	1148448	Symbol	global		1147047						
ANR	1148449	Symbol	extra -> match_limit		1147047						
ANR	1148450	Symbol	extra -> match_limit_recursion		1147047						
ANR	1148451	Symbol	pce		1147047						
ANR	1148452	Symbol	& stringlist		1147047						
ANR	1148453	Symbol	recursion_limit		1147047						
ANR	1148454	Symbol	extra -> mark		1147047						
ANR	1148455	Symbol	extra		1147047						
ANR	1148456	Symbol	PCRE_NO_UTF8_CHECK		1147047						
ANR	1148457	Symbol	PCRE_INFO_CAPTURECOUNT		1147047						
ANR	1148458	Symbol	Z_ARRVAL_P		1147047						
ANR	1148459	Symbol	subpats		1147047						
ANR	1148460	Symbol	size_offsets		1147047						
ANR	1148461	Symbol	PREG_OFFSET_CAPTURE		1147047						
ANR	1148462	Symbol	* offsets		1147047						
ANR	1148463	Symbol	use_flags		1147047						
ANR	1148464	Symbol	& num_subpats		1147047						
ANR	1148465	Symbol	* stringlist		1147047						
ANR	1148466	Symbol	stringlist		1147047						
ANR	1148467	Symbol	PHP_PCRE_NO_ERROR		1147047						
ANR	1148468	Symbol	PCRE_ANCHORED		1147047						
ANR	1148469	Symbol	i		1147047						
ANR	1148470	Symbol	marks		1147047						
ANR	1148471	Symbol	pcre_fullinfo		1147047						
ANR	1148472	Symbol	PCRE_EXTRA_MATCH_LIMIT_RECURSION		1147047						
ANR	1148473	Symbol	PCRE_NOTEMPTY_ATSTART		1147047						
ANR	1148474	Symbol	* i		1147047						
ANR	1148475	Symbol	PCRE_G		1147047						
ANR	1148476	Symbol	extra_data		1147047						
ANR	1148477	Symbol	offsets		1147047						
ANR	1148478	Symbol	calculate_unit_length		1147047						
ANR	1148479	Symbol	PCRE_EXTRA_MATCH_LIMIT		1147047						
ANR	1148480	Symbol	start_offset		1147047						
ANR	1148481	Symbol	safe_emalloc		1147047						
ANR	1148482	Symbol	mark		1147047						
ANR	1148483	Function	preg_get_backref	876:0:27330:27862							
ANR	1148484	FunctionDef	"preg_get_backref (char * * str , int * backref)"		1148483	0					
ANR	1148485	CompoundStatement		877:0:27384:27862	1148483	0					
ANR	1148486	Statement	register	878:1:27387:27394	1148483	0	True				
ANR	1148487	IdentifierDeclStatement	char in_brace = 0 ;	878:10:27396:27413	1148483	1	True				
ANR	1148488	IdentifierDecl	in_brace = 0		1148483	0					
ANR	1148489	IdentifierDeclType	char		1148483	0					
ANR	1148490	Identifier	in_brace		1148483	1					
ANR	1148491	AssignmentExpression	in_brace = 0		1148483	2		=			
ANR	1148492	Identifier	in_brace		1148483	0					
ANR	1148493	PrimaryExpression	0		1148483	1					
ANR	1148494	Statement	register	879:1:27416:27423	1148483	2	True				
ANR	1148495	IdentifierDeclStatement	char * walk = * str ;	879:10:27425:27442	1148483	3	True				
ANR	1148496	IdentifierDecl	* walk = * str		1148483	0					
ANR	1148497	IdentifierDeclType	char *		1148483	0					
ANR	1148498	Identifier	walk		1148483	1					
ANR	1148499	AssignmentExpression	* walk = * str		1148483	2		=			
ANR	1148500	Identifier	walk		1148483	0					
ANR	1148501	UnaryOperationExpression	* str		1148483	1					
ANR	1148502	UnaryOperator	*		1148483	0					
ANR	1148503	Identifier	str		1148483	1					
ANR	1148504	IfStatement	if ( walk [ 1 ] == 0 )		1148483	4					
ANR	1148505	Condition	walk [ 1 ] == 0	881:5:27450:27461	1148483	0	True				
ANR	1148506	EqualityExpression	walk [ 1 ] == 0		1148483	0		==			
ANR	1148507	ArrayIndexing	walk [ 1 ]		1148483	0					
ANR	1148508	Identifier	walk		1148483	0					
ANR	1148509	PrimaryExpression	1		1148483	1					
ANR	1148510	PrimaryExpression	0		1148483	1					
ANR	1148511	ReturnStatement	return 0 ;	882:2:27466:27474	1148483	1	True				
ANR	1148512	PrimaryExpression	0		1148483	0					
ANR	1148513	IfStatement	if ( * walk == '$' && walk [ 1 ] == '{' )		1148483	5					
ANR	1148514	Condition	* walk == '$' && walk [ 1 ] == '{'	884:5:27482:27511	1148483	0	True				
ANR	1148515	AndExpression	* walk == '$' && walk [ 1 ] == '{'		1148483	0		&&			
ANR	1148516	EqualityExpression	* walk == '$'		1148483	0		==			
ANR	1148517	UnaryOperationExpression	* walk		1148483	0					
ANR	1148518	UnaryOperator	*		1148483	0					
ANR	1148519	Identifier	walk		1148483	1					
ANR	1148520	PrimaryExpression	'$'		1148483	1					
ANR	1148521	EqualityExpression	walk [ 1 ] == '{'		1148483	1		==			
ANR	1148522	ArrayIndexing	walk [ 1 ]		1148483	0					
ANR	1148523	Identifier	walk		1148483	0					
ANR	1148524	PrimaryExpression	1		1148483	1					
ANR	1148525	PrimaryExpression	'{'		1148483	1					
ANR	1148526	CompoundStatement		8:37:129:129	1148483	1					
ANR	1148527	ExpressionStatement	in_brace = 1	885:2:27518:27530	1148483	0	True				
ANR	1148528	AssignmentExpression	in_brace = 1		1148483	0		=			
ANR	1148529	Identifier	in_brace		1148483	0					
ANR	1148530	PrimaryExpression	1		1148483	1					
ANR	1148531	ExpressionStatement	walk ++	886:2:27534:27540	1148483	1	True				
ANR	1148532	PostIncDecOperationExpression	walk ++		1148483	0					
ANR	1148533	Identifier	walk		1148483	0					
ANR	1148534	IncDec	++		1148483	1					
ANR	1148535	ExpressionStatement	walk ++	888:1:27546:27552	1148483	6	True				
ANR	1148536	PostIncDecOperationExpression	walk ++		1148483	0					
ANR	1148537	Identifier	walk		1148483	0					
ANR	1148538	IncDec	++		1148483	1					
ANR	1148539	IfStatement	if ( * walk >= '0' && * walk <= '9' )		1148483	7					
ANR	1148540	Condition	* walk >= '0' && * walk <= '9'	890:5:27560:27587	1148483	0	True				
ANR	1148541	AndExpression	* walk >= '0' && * walk <= '9'		1148483	0		&&			
ANR	1148542	RelationalExpression	* walk >= '0'		1148483	0		>=			
ANR	1148543	UnaryOperationExpression	* walk		1148483	0					
ANR	1148544	UnaryOperator	*		1148483	0					
ANR	1148545	Identifier	walk		1148483	1					
ANR	1148546	PrimaryExpression	'0'		1148483	1					
ANR	1148547	RelationalExpression	* walk <= '9'		1148483	1		<=			
ANR	1148548	UnaryOperationExpression	* walk		1148483	0					
ANR	1148549	UnaryOperator	*		1148483	0					
ANR	1148550	Identifier	walk		1148483	1					
ANR	1148551	PrimaryExpression	'9'		1148483	1					
ANR	1148552	CompoundStatement		14:35:205:205	1148483	1					
ANR	1148553	ExpressionStatement	* backref = * walk - '0'	891:2:27594:27616	1148483	0	True				
ANR	1148554	AssignmentExpression	* backref = * walk - '0'		1148483	0		=			
ANR	1148555	UnaryOperationExpression	* backref		1148483	0					
ANR	1148556	UnaryOperator	*		1148483	0					
ANR	1148557	Identifier	backref		1148483	1					
ANR	1148558	AdditiveExpression	* walk - '0'		1148483	1		-			
ANR	1148559	UnaryOperationExpression	* walk		1148483	0					
ANR	1148560	UnaryOperator	*		1148483	0					
ANR	1148561	Identifier	walk		1148483	1					
ANR	1148562	PrimaryExpression	'0'		1148483	1					
ANR	1148563	ExpressionStatement	walk ++	892:2:27620:27626	1148483	1	True				
ANR	1148564	PostIncDecOperationExpression	walk ++		1148483	0					
ANR	1148565	Identifier	walk		1148483	0					
ANR	1148566	IncDec	++		1148483	1					
ANR	1148567	ElseStatement	else		1148483	0					
ANR	1148568	ReturnStatement	return 0 ;	894:2:27638:27646	1148483	0	True				
ANR	1148569	PrimaryExpression	0		1148483	0					
ANR	1148570	IfStatement	if ( * walk && * walk >= '0' && * walk <= '9' )		1148483	8					
ANR	1148571	Condition	* walk && * walk >= '0' && * walk <= '9'	896:5:27654:27690	1148483	0	True				
ANR	1148572	AndExpression	* walk && * walk >= '0' && * walk <= '9'		1148483	0		&&			
ANR	1148573	UnaryOperationExpression	* walk		1148483	0					
ANR	1148574	UnaryOperator	*		1148483	0					
ANR	1148575	Identifier	walk		1148483	1					
ANR	1148576	AndExpression	* walk >= '0' && * walk <= '9'		1148483	1		&&			
ANR	1148577	RelationalExpression	* walk >= '0'		1148483	0		>=			
ANR	1148578	UnaryOperationExpression	* walk		1148483	0					
ANR	1148579	UnaryOperator	*		1148483	0					
ANR	1148580	Identifier	walk		1148483	1					
ANR	1148581	PrimaryExpression	'0'		1148483	1					
ANR	1148582	RelationalExpression	* walk <= '9'		1148483	1		<=			
ANR	1148583	UnaryOperationExpression	* walk		1148483	0					
ANR	1148584	UnaryOperator	*		1148483	0					
ANR	1148585	Identifier	walk		1148483	1					
ANR	1148586	PrimaryExpression	'9'		1148483	1					
ANR	1148587	CompoundStatement		20:44:308:308	1148483	1					
ANR	1148588	ExpressionStatement	* backref = * backref * 10 + * walk - '0'	897:2:27697:27735	1148483	0	True				
ANR	1148589	AssignmentExpression	* backref = * backref * 10 + * walk - '0'		1148483	0		=			
ANR	1148590	UnaryOperationExpression	* backref		1148483	0					
ANR	1148591	UnaryOperator	*		1148483	0					
ANR	1148592	Identifier	backref		1148483	1					
ANR	1148593	AdditiveExpression	* backref * 10 + * walk - '0'		1148483	1		+			
ANR	1148594	MultiplicativeExpression	* backref * 10		1148483	0		*			
ANR	1148595	UnaryOperationExpression	* backref		1148483	0					
ANR	1148596	UnaryOperator	*		1148483	0					
ANR	1148597	Identifier	backref		1148483	1					
ANR	1148598	PrimaryExpression	10		1148483	1					
ANR	1148599	AdditiveExpression	* walk - '0'		1148483	1		-			
ANR	1148600	UnaryOperationExpression	* walk		1148483	0					
ANR	1148601	UnaryOperator	*		1148483	0					
ANR	1148602	Identifier	walk		1148483	1					
ANR	1148603	PrimaryExpression	'0'		1148483	1					
ANR	1148604	ExpressionStatement	walk ++	898:2:27739:27745	1148483	1	True				
ANR	1148605	PostIncDecOperationExpression	walk ++		1148483	0					
ANR	1148606	Identifier	walk		1148483	0					
ANR	1148607	IncDec	++		1148483	1					
ANR	1148608	IfStatement	if ( in_brace )		1148483	9					
ANR	1148609	Condition	in_brace	901:5:27756:27763	1148483	0	True				
ANR	1148610	Identifier	in_brace		1148483	0					
ANR	1148611	CompoundStatement		25:15:381:381	1148483	1					
ANR	1148612	IfStatement	if ( * walk == 0 || * walk != '}' )		1148483	0					
ANR	1148613	Condition	* walk == 0 || * walk != '}'	902:6:27774:27799	1148483	0	True				
ANR	1148614	OrExpression	* walk == 0 || * walk != '}'		1148483	0		||			
ANR	1148615	EqualityExpression	* walk == 0		1148483	0		==			
ANR	1148616	UnaryOperationExpression	* walk		1148483	0					
ANR	1148617	UnaryOperator	*		1148483	0					
ANR	1148618	Identifier	walk		1148483	1					
ANR	1148619	PrimaryExpression	0		1148483	1					
ANR	1148620	EqualityExpression	* walk != '}'		1148483	1		!=			
ANR	1148621	UnaryOperationExpression	* walk		1148483	0					
ANR	1148622	UnaryOperator	*		1148483	0					
ANR	1148623	Identifier	walk		1148483	1					
ANR	1148624	PrimaryExpression	'}'		1148483	1					
ANR	1148625	ReturnStatement	return 0 ;	903:3:27805:27813	1148483	1	True				
ANR	1148626	PrimaryExpression	0		1148483	0					
ANR	1148627	ElseStatement	else		1148483	0					
ANR	1148628	ExpressionStatement	walk ++	905:3:27825:27831	1148483	0	True				
ANR	1148629	PostIncDecOperationExpression	walk ++		1148483	0					
ANR	1148630	Identifier	walk		1148483	0					
ANR	1148631	IncDec	++		1148483	1					
ANR	1148632	ExpressionStatement	* str = walk	908:1:27838:27849	1148483	10	True				
ANR	1148633	AssignmentExpression	* str = walk		1148483	0		=			
ANR	1148634	UnaryOperationExpression	* str		1148483	0					
ANR	1148635	UnaryOperator	*		1148483	0					
ANR	1148636	Identifier	str		1148483	1					
ANR	1148637	Identifier	walk		1148483	1					
ANR	1148638	ReturnStatement	return 1 ;	909:1:27852:27860	1148483	11	True				
ANR	1148639	PrimaryExpression	1		1148483	0					
ANR	1148640	ReturnType	static int		1148483	1					
ANR	1148641	Identifier	preg_get_backref		1148483	2					
ANR	1148642	ParameterList	"char * * str , int * backref"		1148483	3					
ANR	1148643	Parameter	char * * str	876:28:27358:27367	1148483	0	True				
ANR	1148644	ParameterType	char * *		1148483	0					
ANR	1148645	Identifier	str		1148483	1					
ANR	1148646	Parameter	int * backref	876:40:27370:27381	1148483	1	True				
ANR	1148647	ParameterType	int *		1148483	0					
ANR	1148648	Identifier	backref		1148483	1					
ANR	1148649	CFGEntryNode	ENTRY		1148483		True				
ANR	1148650	CFGExitNode	EXIT		1148483		True				
ANR	1148651	Symbol	str		1148483						
ANR	1148652	Symbol	backref		1148483						
ANR	1148653	Symbol	in_brace		1148483						
ANR	1148654	Symbol	* backref		1148483						
ANR	1148655	Symbol	* walk		1148483						
ANR	1148656	Symbol	* str		1148483						
ANR	1148657	Symbol	walk		1148483						
ANR	1148658	DeclStmt									
ANR	1148659	Decl							zval	zval *	retval_ptr
ANR	1148660	DeclStmt									
ANR	1148661	Decl							zval	zval * * [ 1 ]	args
ANR	1148662	DeclStmt									
ANR	1148663	Decl							zval	zval *	subpats
ANR	1148664	DeclStmt									
ANR	1148665	Decl							int	int	result_len
ANR	1148666	DeclStmt									
ANR	1148667	Decl							int	int	i
ANR	1148668	DeclStmt									
ANR	1148669	Decl							zval	zval	retval
ANR	1148670	DeclStmt									
ANR	1148671	Decl							char	char *	eval_str_end
ANR	1148672	Decl							char	char *	match
ANR	1148673	Decl							char	char *	esc_match
ANR	1148674	Decl							char	char *	walk
ANR	1148675	Decl							char	char *	segment
ANR	1148676	Decl							char	char	walk_last
ANR	1148677	DeclStmt									
ANR	1148678	Decl							int	int	match_len
ANR	1148679	DeclStmt									
ANR	1148680	Decl							int	int	esc_match_len
ANR	1148681	DeclStmt									
ANR	1148682	Decl							int	int	result_len
ANR	1148683	DeclStmt									
ANR	1148684	Decl							int	int	backref
ANR	1148685	DeclStmt									
ANR	1148686	Decl							char	char *	compiled_string_description
ANR	1148687	DeclStmt									
ANR	1148688	Decl							smart_str	smart_str	code
ANR	1148689	DeclStmt									
ANR	1148690	Decl							pcre_cache_entry	pcre_cache_entry *	pce
ANR	1148691	DeclStmt									
ANR	1148692	Decl							char	char *	result
ANR	1148693	DeclStmt									
ANR	1148694	Decl							pcre_extra	pcre_extra *	extra
ANR	1148695	DeclStmt									
ANR	1148696	Decl							pcre_extra	pcre_extra	extra_data
ANR	1148697	DeclStmt									
ANR	1148698	Decl							int	int	exoptions
ANR	1148699	DeclStmt									
ANR	1148700	Decl							int	int	count
ANR	1148701	DeclStmt									
ANR	1148702	Decl							int	int *	offsets
ANR	1148703	DeclStmt									
ANR	1148704	Decl							char	char * *	subpat_names
ANR	1148705	DeclStmt									
ANR	1148706	Decl							int	int	num_subpats
ANR	1148707	DeclStmt									
ANR	1148708	Decl							int	int	size_offsets
ANR	1148709	DeclStmt									
ANR	1148710	Decl							size_t	size_t	new_len
ANR	1148711	DeclStmt									
ANR	1148712	Decl							size_t	size_t	alloc_len
ANR	1148713	DeclStmt									
ANR	1148714	Decl							int	int	eval_result_len
ANR	1148715	DeclStmt									
ANR	1148716	Decl							int	int	match_len
ANR	1148717	DeclStmt									
ANR	1148718	Decl							int	int	backref
ANR	1148719	DeclStmt									
ANR	1148720	Decl							int	int	eval
ANR	1148721	DeclStmt									
ANR	1148722	Decl							int	int	start_offset
ANR	1148723	DeclStmt									
ANR	1148724	Decl							int	int	g_notempty
ANR	1148725	DeclStmt									
ANR	1148726	Decl							int	int	replace_len
ANR	1148727	DeclStmt									
ANR	1148728	Decl							char	char *	result
ANR	1148729	Decl							char	char *	replace
ANR	1148730	Decl							char	char *	new_buf
ANR	1148731	Decl							char	char *	walkbuf
ANR	1148732	Decl							char	char *	walk
ANR	1148733	Decl							char	char *	match
ANR	1148734	Decl							char	char *	piece
ANR	1148735	Decl							char	char *	replace_end
ANR	1148736	Decl							char	char *	eval_result
ANR	1148737	Decl							char	char	walk_last
ANR	1148738	DeclStmt									
ANR	1148739	Decl							int	int	rc
ANR	1148740	DeclStmt									
ANR	1148741	Decl							unsigned char	unsigned char *	mark
ANR	1148742	DeclStmt									
ANR	1148743	Decl							preg_options	preg_options &	PREG_REPLACE_EVAL
ANR	1148744	DeclStmt									
ANR	1148745	Decl							int	int	unit_len
ANR	1148746	DeclStmt									
ANR	1148747	Decl							zval	zval * *	regex_entry
ANR	1148748	Decl							zval	zval * *	replace_entry
ANR	1148749	Decl							zval	zval *	replace_value
ANR	1148750	Decl							zval	zval	empty_replace
ANR	1148751	DeclStmt									
ANR	1148752	Decl							char	char *	subject_value
ANR	1148753	Decl							char	char *	result
ANR	1148754	DeclStmt									
ANR	1148755	Decl							int	int	subject_len
ANR	1148756	DeclStmt									
ANR	1148757	Decl							zval	zval * *	regex
ANR	1148758	Decl							zval	zval * *	replace
ANR	1148759	Decl							zval	zval * *	subject
ANR	1148760	Decl							zval	zval * *	subject_entry
ANR	1148761	Decl							zval	zval * *	zcount
ANR	1148762	DeclStmt									
ANR	1148763	Decl							char	char *	result
ANR	1148764	DeclStmt									
ANR	1148765	Decl							int	int	result_len
ANR	1148766	DeclStmt									
ANR	1148767	Decl							int	int	limit_val
ANR	1148768	DeclStmt									
ANR	1148769	Decl							long	long	limit
ANR	1148770	DeclStmt									
ANR	1148771	Decl							char	char *	string_key
ANR	1148772	DeclStmt									
ANR	1148773	Decl							uint	uint	string_key_len
ANR	1148774	DeclStmt									
ANR	1148775	Decl							ulong	ulong	num_key
ANR	1148776	DeclStmt									
ANR	1148777	Decl							char	char *	callback_name
ANR	1148778	DeclStmt									
ANR	1148779	Decl							int	int	replace_count
ANR	1148780	Decl							int	int	old_replace_count
ANR	1148781	DeclStmt									
ANR	1148782	Decl							char	char *	regex
ANR	1148783	DeclStmt									
ANR	1148784	Decl							char	char *	subject
ANR	1148785	DeclStmt									
ANR	1148786	Decl							int	int	regex_len
ANR	1148787	DeclStmt									
ANR	1148788	Decl							int	int	subject_len
ANR	1148789	DeclStmt									
ANR	1148790	Decl							long	long	limit_val
ANR	1148791	DeclStmt									
ANR	1148792	Decl							long	long	flags
ANR	1148793	DeclStmt									
ANR	1148794	Decl							pcre_cache_entry	pcre_cache_entry *	pce
ANR	1148795	Function	php_pcre_split_impl	1565:0:49312:55115							
ANR	1148796	FunctionDef	"php_pcre_split_impl (pcre_cache_entry * pce , char * subject , int subject_len , zval * return_value , long limit_val , long flags TSRMLS_DC)"		1148795	0					
ANR	1148797	CompoundStatement		1567:0:49458:55115	1148795	0					
ANR	1148798	IdentifierDeclStatement	pcre_extra * extra = NULL ;	1568:1:49461:49486	1148795	0	True				
ANR	1148799	IdentifierDecl	* extra = NULL		1148795	0					
ANR	1148800	IdentifierDeclType	pcre_extra *		1148795	0					
ANR	1148801	Identifier	extra		1148795	1					
ANR	1148802	AssignmentExpression	* extra = NULL		1148795	2		=			
ANR	1148803	Identifier	NULL		1148795	0					
ANR	1148804	Identifier	NULL		1148795	1					
ANR	1148805	IdentifierDeclStatement	pcre * re_bump = NULL ;	1569:1:49522:49544	1148795	1	True				
ANR	1148806	IdentifierDecl	* re_bump = NULL		1148795	0					
ANR	1148807	IdentifierDeclType	pcre *		1148795	0					
ANR	1148808	Identifier	re_bump		1148795	1					
ANR	1148809	AssignmentExpression	* re_bump = NULL		1148795	2		=			
ANR	1148810	Identifier	NULL		1148795	0					
ANR	1148811	Identifier	NULL		1148795	1					
ANR	1148812	IdentifierDeclStatement	pcre_extra * extra_bump = NULL ;	1570:1:49586:49616	1148795	2	True				
ANR	1148813	IdentifierDecl	* extra_bump = NULL		1148795	0					
ANR	1148814	IdentifierDeclType	pcre_extra *		1148795	0					
ANR	1148815	Identifier	extra_bump		1148795	1					
ANR	1148816	AssignmentExpression	* extra_bump = NULL		1148795	2		=			
ANR	1148817	Identifier	NULL		1148795	0					
ANR	1148818	Identifier	NULL		1148795	1					
ANR	1148819	IdentifierDeclStatement	pcre_extra extra_data ;	1571:1:49638:49661	1148795	3	True				
ANR	1148820	IdentifierDecl	extra_data		1148795	0					
ANR	1148821	IdentifierDeclType	pcre_extra		1148795	0					
ANR	1148822	Identifier	extra_data		1148795	1					
ANR	1148823	IdentifierDeclStatement	int * offsets ;	1572:1:49701:49716	1148795	4	True				
ANR	1148824	IdentifierDecl	* offsets		1148795	0					
ANR	1148825	IdentifierDeclType	int *		1148795	0					
ANR	1148826	Identifier	offsets		1148795	1					
ANR	1148827	IdentifierDeclStatement	int size_offsets ;	1573:1:49755:49775	1148795	5	True				
ANR	1148828	IdentifierDecl	size_offsets		1148795	0					
ANR	1148829	IdentifierDeclType	int		1148795	0					
ANR	1148830	Identifier	size_offsets		1148795	1					
ANR	1148831	IdentifierDeclStatement	int exoptions = 0 ;	1574:1:49811:49832	1148795	6	True				
ANR	1148832	IdentifierDecl	exoptions = 0		1148795	0					
ANR	1148833	IdentifierDeclType	int		1148795	0					
ANR	1148834	Identifier	exoptions		1148795	1					
ANR	1148835	AssignmentExpression	exoptions = 0		1148795	2		=			
ANR	1148836	Identifier	exoptions		1148795	0					
ANR	1148837	PrimaryExpression	0		1148795	1					
ANR	1148838	IdentifierDeclStatement	int count = 0 ;	1575:1:49860:49877	1148795	7	True				
ANR	1148839	IdentifierDecl	count = 0		1148795	0					
ANR	1148840	IdentifierDeclType	int		1148795	0					
ANR	1148841	Identifier	count		1148795	1					
ANR	1148842	AssignmentExpression	count = 0		1148795	2		=			
ANR	1148843	Identifier	count		1148795	0					
ANR	1148844	PrimaryExpression	0		1148795	1					
ANR	1148845	IdentifierDeclStatement	int start_offset ;	1576:1:49917:49937	1148795	8	True				
ANR	1148846	IdentifierDecl	start_offset		1148795	0					
ANR	1148847	IdentifierDeclType	int		1148795	0					
ANR	1148848	Identifier	start_offset		1148795	1					
ANR	1148849	IdentifierDeclStatement	int next_offset ;	1577:1:49975:49994	1148795	9	True				
ANR	1148850	IdentifierDecl	next_offset		1148795	0					
ANR	1148851	IdentifierDeclType	int		1148795	0					
ANR	1148852	Identifier	next_offset		1148795	1					
ANR	1148853	IdentifierDeclStatement	int g_notempty = 0 ;	1578:1:50040:50062	1148795	10	True				
ANR	1148854	IdentifierDecl	g_notempty = 0		1148795	0					
ANR	1148855	IdentifierDeclType	int		1148795	0					
ANR	1148856	Identifier	g_notempty		1148795	1					
ANR	1148857	AssignmentExpression	g_notempty = 0		1148795	2		=			
ANR	1148858	Identifier	g_notempty		1148795	0					
ANR	1148859	PrimaryExpression	0		1148795	1					
ANR	1148860	IdentifierDeclStatement	char * last_match ;	1579:1:50104:50122	1148795	11	True				
ANR	1148861	IdentifierDecl	* last_match		1148795	0					
ANR	1148862	IdentifierDeclType	char *		1148795	0					
ANR	1148863	Identifier	last_match		1148795	1					
ANR	1148864	IdentifierDeclStatement	int rc ;	1580:1:50155:50165	1148795	12	True				
ANR	1148865	IdentifierDecl	rc		1148795	0					
ANR	1148866	IdentifierDeclType	int		1148795	0					
ANR	1148867	Identifier	rc		1148795	1					
ANR	1148868	IdentifierDeclStatement	int no_empty ;	1581:1:50168:50184	1148795	13	True				
ANR	1148869	IdentifierDecl	no_empty		1148795	0					
ANR	1148870	IdentifierDeclType	int		1148795	0					
ANR	1148871	Identifier	no_empty		1148795	1					
ANR	1148872	IdentifierDeclStatement	int delim_capture ;	1582:1:50219:50240	1148795	14	True				
ANR	1148873	IdentifierDecl	delim_capture		1148795	0					
ANR	1148874	IdentifierDeclType	int		1148795	0					
ANR	1148875	Identifier	delim_capture		1148795	1					
ANR	1148876	IdentifierDeclStatement	int offset_capture ;	1583:1:50283:50305	1148795	15	True				
ANR	1148877	IdentifierDecl	offset_capture		1148795	0					
ANR	1148878	IdentifierDeclType	int		1148795	0					
ANR	1148879	Identifier	offset_capture		1148795	1					
ANR	1148880	ExpressionStatement	no_empty = flags & PREG_SPLIT_NO_EMPTY	1585:1:50345:50383	1148795	16	True				
ANR	1148881	AssignmentExpression	no_empty = flags & PREG_SPLIT_NO_EMPTY		1148795	0		=			
ANR	1148882	Identifier	no_empty		1148795	0					
ANR	1148883	BitAndExpression	flags & PREG_SPLIT_NO_EMPTY		1148795	1		&			
ANR	1148884	Identifier	flags		1148795	0					
ANR	1148885	Identifier	PREG_SPLIT_NO_EMPTY		1148795	1					
ANR	1148886	ExpressionStatement	delim_capture = flags & PREG_SPLIT_DELIM_CAPTURE	1586:1:50386:50434	1148795	17	True				
ANR	1148887	AssignmentExpression	delim_capture = flags & PREG_SPLIT_DELIM_CAPTURE		1148795	0		=			
ANR	1148888	Identifier	delim_capture		1148795	0					
ANR	1148889	BitAndExpression	flags & PREG_SPLIT_DELIM_CAPTURE		1148795	1		&			
ANR	1148890	Identifier	flags		1148795	0					
ANR	1148891	Identifier	PREG_SPLIT_DELIM_CAPTURE		1148795	1					
ANR	1148892	ExpressionStatement	offset_capture = flags & PREG_SPLIT_OFFSET_CAPTURE	1587:1:50437:50487	1148795	18	True				
ANR	1148893	AssignmentExpression	offset_capture = flags & PREG_SPLIT_OFFSET_CAPTURE		1148795	0		=			
ANR	1148894	Identifier	offset_capture		1148795	0					
ANR	1148895	BitAndExpression	flags & PREG_SPLIT_OFFSET_CAPTURE		1148795	1		&			
ANR	1148896	Identifier	flags		1148795	0					
ANR	1148897	Identifier	PREG_SPLIT_OFFSET_CAPTURE		1148795	1					
ANR	1148898	IfStatement	if ( limit_val == 0 )		1148795	19					
ANR	1148899	Condition	limit_val == 0	1589:5:50495:50508	1148795	0	True				
ANR	1148900	EqualityExpression	limit_val == 0		1148795	0		==			
ANR	1148901	Identifier	limit_val		1148795	0					
ANR	1148902	PrimaryExpression	0		1148795	1					
ANR	1148903	CompoundStatement		23:21:1052:1052	1148795	1					
ANR	1148904	ExpressionStatement	limit_val = - 1	1590:2:50515:50529	1148795	0	True				
ANR	1148905	AssignmentExpression	limit_val = - 1		1148795	0		=			
ANR	1148906	Identifier	limit_val		1148795	0					
ANR	1148907	UnaryOperationExpression	- 1		1148795	1					
ANR	1148908	UnaryOperator	-		1148795	0					
ANR	1148909	PrimaryExpression	1		1148795	1					
ANR	1148910	IfStatement	if ( extra == NULL )		1148795	20					
ANR	1148911	Condition	extra == NULL	1593:5:50540:50552	1148795	0	True				
ANR	1148912	EqualityExpression	extra == NULL		1148795	0		==			
ANR	1148913	Identifier	extra		1148795	0					
ANR	1148914	Identifier	NULL		1148795	1					
ANR	1148915	CompoundStatement		27:20:1096:1096	1148795	1					
ANR	1148916	ExpressionStatement	extra_data . flags = PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION	1594:2:50559:50635	1148795	0	True				
ANR	1148917	AssignmentExpression	extra_data . flags = PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION		1148795	0		=			
ANR	1148918	MemberAccess	extra_data . flags		1148795	0					
ANR	1148919	Identifier	extra_data		1148795	0					
ANR	1148920	Identifier	flags		1148795	1					
ANR	1148921	InclusiveOrExpression	PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION		1148795	1		|			
ANR	1148922	Identifier	PCRE_EXTRA_MATCH_LIMIT		1148795	0					
ANR	1148923	Identifier	PCRE_EXTRA_MATCH_LIMIT_RECURSION		1148795	1					
ANR	1148924	ExpressionStatement	extra = & extra_data	1595:2:50639:50658	1148795	1	True				
ANR	1148925	AssignmentExpression	extra = & extra_data		1148795	0		=			
ANR	1148926	Identifier	extra		1148795	0					
ANR	1148927	UnaryOperationExpression	& extra_data		1148795	1					
ANR	1148928	UnaryOperator	&		1148795	0					
ANR	1148929	Identifier	extra_data		1148795	1					
ANR	1148930	ExpressionStatement	extra -> match_limit = PCRE_G ( backtrack_limit )	1597:1:50664:50708	1148795	21	True				
ANR	1148931	AssignmentExpression	extra -> match_limit = PCRE_G ( backtrack_limit )		1148795	0		=			
ANR	1148932	PtrMemberAccess	extra -> match_limit		1148795	0					
ANR	1148933	Identifier	extra		1148795	0					
ANR	1148934	Identifier	match_limit		1148795	1					
ANR	1148935	CallExpression	PCRE_G ( backtrack_limit )		1148795	1					
ANR	1148936	Callee	PCRE_G		1148795	0					
ANR	1148937	Identifier	PCRE_G		1148795	0					
ANR	1148938	ArgumentList	backtrack_limit		1148795	1					
ANR	1148939	Argument	backtrack_limit		1148795	0					
ANR	1148940	Identifier	backtrack_limit		1148795	0					
ANR	1148941	ExpressionStatement	extra -> match_limit_recursion = PCRE_G ( recursion_limit )	1598:1:50711:50765	1148795	22	True				
ANR	1148942	AssignmentExpression	extra -> match_limit_recursion = PCRE_G ( recursion_limit )		1148795	0		=			
ANR	1148943	PtrMemberAccess	extra -> match_limit_recursion		1148795	0					
ANR	1148944	Identifier	extra		1148795	0					
ANR	1148945	Identifier	match_limit_recursion		1148795	1					
ANR	1148946	CallExpression	PCRE_G ( recursion_limit )		1148795	1					
ANR	1148947	Callee	PCRE_G		1148795	0					
ANR	1148948	Identifier	PCRE_G		1148795	0					
ANR	1148949	ArgumentList	recursion_limit		1148795	1					
ANR	1148950	Argument	recursion_limit		1148795	0					
ANR	1148951	Identifier	recursion_limit		1148795	0					
ANR	1148952	ExpressionStatement	extra -> flags &= ~PCRE_EXTRA_MARK	1600:1:50791:50823	1148795	23	True				
ANR	1148953	AssignmentExpression	extra -> flags &= ~PCRE_EXTRA_MARK		1148795	0		&=			
ANR	1148954	PtrMemberAccess	extra -> flags		1148795	0					
ANR	1148955	Identifier	extra		1148795	0					
ANR	1148956	Identifier	flags		1148795	1					
ANR	1148957	Identifier	~PCRE_EXTRA_MARK		1148795	1					
ANR	1148958	ExpressionStatement	array_init ( return_value )	1604:1:50865:50889	1148795	24	True				
ANR	1148959	CallExpression	array_init ( return_value )		1148795	0					
ANR	1148960	Callee	array_init		1148795	0					
ANR	1148961	Identifier	array_init		1148795	0					
ANR	1148962	ArgumentList	return_value		1148795	1					
ANR	1148963	Argument	return_value		1148795	0					
ANR	1148964	Identifier	return_value		1148795	0					
ANR	1148965	ExpressionStatement	"rc = pcre_fullinfo ( pce -> re , extra , PCRE_INFO_CAPTURECOUNT , & size_offsets )"	1607:1:50969:51042	1148795	25	True				
ANR	1148966	AssignmentExpression	"rc = pcre_fullinfo ( pce -> re , extra , PCRE_INFO_CAPTURECOUNT , & size_offsets )"		1148795	0		=			
ANR	1148967	Identifier	rc		1148795	0					
ANR	1148968	CallExpression	"pcre_fullinfo ( pce -> re , extra , PCRE_INFO_CAPTURECOUNT , & size_offsets )"		1148795	1					
ANR	1148969	Callee	pcre_fullinfo		1148795	0					
ANR	1148970	Identifier	pcre_fullinfo		1148795	0					
ANR	1148971	ArgumentList	pce -> re		1148795	1					
ANR	1148972	Argument	pce -> re		1148795	0					
ANR	1148973	PtrMemberAccess	pce -> re		1148795	0					
ANR	1148974	Identifier	pce		1148795	0					
ANR	1148975	Identifier	re		1148795	1					
ANR	1148976	Argument	extra		1148795	1					
ANR	1148977	Identifier	extra		1148795	0					
ANR	1148978	Argument	PCRE_INFO_CAPTURECOUNT		1148795	2					
ANR	1148979	Identifier	PCRE_INFO_CAPTURECOUNT		1148795	0					
ANR	1148980	Argument	& size_offsets		1148795	3					
ANR	1148981	UnaryOperationExpression	& size_offsets		1148795	0					
ANR	1148982	UnaryOperator	&		1148795	0					
ANR	1148983	Identifier	size_offsets		1148795	1					
ANR	1148984	IfStatement	if ( rc < 0 )		1148795	26					
ANR	1148985	Condition	rc < 0	1608:5:51049:51054	1148795	0	True				
ANR	1148986	RelationalExpression	rc < 0		1148795	0		<			
ANR	1148987	Identifier	rc		1148795	0					
ANR	1148988	PrimaryExpression	0		1148795	1					
ANR	1148989	CompoundStatement		42:13:1598:1598	1148795	1					
ANR	1148990	Statement	php_error_docref	1609:2:51061:51076	1148795	0	True				
ANR	1148991	Statement	(	1609:18:51077:51077	1148795	1	True				
ANR	1148992	Statement	NULL	1609:19:51078:51081	1148795	2	True				
ANR	1148993	Statement	TSRMLS_CC	1609:24:51083:51091	1148795	3	True				
ANR	1148994	Statement	","	1609:33:51092:51092	1148795	4	True				
ANR	1148995	Statement	E_WARNING	1609:35:51094:51102	1148795	5	True				
ANR	1148996	Statement	","	1609:44:51103:51103	1148795	6	True				
ANR	1148997	Statement	"""Internal pcre_fullinfo() error %d"""	1609:46:51105:51139	1148795	7	True				
ANR	1148998	Statement	","	1609:81:51140:51140	1148795	8	True				
ANR	1148999	Statement	rc	1609:83:51142:51143	1148795	9	True				
ANR	1149000	Statement	)	1609:85:51144:51144	1148795	10	True				
ANR	1149001	ExpressionStatement		1609:86:51145:51145	1148795	11	True				
ANR	1149002	ExpressionStatement	RETURN_FALSE	1610:2:51149:51161	1148795	12	True				
ANR	1149003	Identifier	RETURN_FALSE		1148795	0					
ANR	1149004	ExpressionStatement	size_offsets = ( size_offsets + 1 ) * 3	1612:1:51167:51204	1148795	27	True				
ANR	1149005	AssignmentExpression	size_offsets = ( size_offsets + 1 ) * 3		1148795	0		=			
ANR	1149006	Identifier	size_offsets		1148795	0					
ANR	1149007	MultiplicativeExpression	( size_offsets + 1 ) * 3		1148795	1		*			
ANR	1149008	AdditiveExpression	size_offsets + 1		1148795	0		+			
ANR	1149009	Identifier	size_offsets		1148795	0					
ANR	1149010	PrimaryExpression	1		1148795	1					
ANR	1149011	PrimaryExpression	3		1148795	1					
ANR	1149012	ExpressionStatement	"offsets = ( int * ) safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"	1613:1:51207:51266	1148795	28	True				
ANR	1149013	AssignmentExpression	"offsets = ( int * ) safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"		1148795	0		=			
ANR	1149014	Identifier	offsets		1148795	0					
ANR	1149015	CastExpression	"( int * ) safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"		1148795	1					
ANR	1149016	CastTarget	int *		1148795	0					
ANR	1149017	CallExpression	"safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"		1148795	1					
ANR	1149018	Callee	safe_emalloc		1148795	0					
ANR	1149019	Identifier	safe_emalloc		1148795	0					
ANR	1149020	ArgumentList	size_offsets		1148795	1					
ANR	1149021	Argument	size_offsets		1148795	0					
ANR	1149022	Identifier	size_offsets		1148795	0					
ANR	1149023	Argument	sizeof ( int )		1148795	1					
ANR	1149024	SizeofExpression	sizeof ( int )		1148795	0					
ANR	1149025	Sizeof	sizeof		1148795	0					
ANR	1149026	SizeofOperand	int		1148795	1					
ANR	1149027	Argument	0		1148795	2					
ANR	1149028	PrimaryExpression	0		1148795	0					
ANR	1149029	ExpressionStatement	start_offset = 0	1616:1:51314:51330	1148795	29	True				
ANR	1149030	AssignmentExpression	start_offset = 0		1148795	0		=			
ANR	1149031	Identifier	start_offset		1148795	0					
ANR	1149032	PrimaryExpression	0		1148795	1					
ANR	1149033	ExpressionStatement	next_offset = 0	1617:1:51333:51348	1148795	30	True				
ANR	1149034	AssignmentExpression	next_offset = 0		1148795	0		=			
ANR	1149035	Identifier	next_offset		1148795	0					
ANR	1149036	PrimaryExpression	0		1148795	1					
ANR	1149037	ExpressionStatement	last_match = subject	1618:1:51351:51371	1148795	31	True				
ANR	1149038	AssignmentExpression	last_match = subject		1148795	0		=			
ANR	1149039	Identifier	last_match		1148795	0					
ANR	1149040	Identifier	subject		1148795	1					
ANR	1149041	ExpressionStatement	PCRE_G ( error_code ) = PHP_PCRE_NO_ERROR	1619:1:51374:51412	1148795	32	True				
ANR	1149042	AssignmentExpression	PCRE_G ( error_code ) = PHP_PCRE_NO_ERROR		1148795	0		=			
ANR	1149043	CallExpression	PCRE_G ( error_code )		1148795	0					
ANR	1149044	Callee	PCRE_G		1148795	0					
ANR	1149045	Identifier	PCRE_G		1148795	0					
ANR	1149046	ArgumentList	error_code		1148795	1					
ANR	1149047	Argument	error_code		1148795	0					
ANR	1149048	Identifier	error_code		1148795	0					
ANR	1149049	Identifier	PHP_PCRE_NO_ERROR		1148795	1					
ANR	1149050	WhileStatement	while ( ( limit_val == - 1 || limit_val > 1 ) )		1148795	33					
ANR	1149051	Condition	limit_val == - 1 || limit_val > 1	1622:8:51503:51536	1148795	0	True				
ANR	1149052	OrExpression	limit_val == - 1 || limit_val > 1		1148795	0		||			
ANR	1149053	EqualityExpression	limit_val == - 1		1148795	0		==			
ANR	1149054	Identifier	limit_val		1148795	0					
ANR	1149055	UnaryOperationExpression	- 1		1148795	1					
ANR	1149056	UnaryOperator	-		1148795	0					
ANR	1149057	PrimaryExpression	1		1148795	1					
ANR	1149058	RelationalExpression	limit_val > 1		1148795	1		>			
ANR	1149059	Identifier	limit_val		1148795	0					
ANR	1149060	PrimaryExpression	1		1148795	1					
ANR	1149061	CompoundStatement		56:44:2080:2080	1148795	1					
ANR	1149062	ExpressionStatement	"count = pcre_exec ( pce -> re , extra , subject , subject_len , start_offset , exoptions | g_notempty , offsets , size_offsets )"	1623:2:51543:51673	1148795	0	True				
ANR	1149063	AssignmentExpression	"count = pcre_exec ( pce -> re , extra , subject , subject_len , start_offset , exoptions | g_notempty , offsets , size_offsets )"		1148795	0		=			
ANR	1149064	Identifier	count		1148795	0					
ANR	1149065	CallExpression	"pcre_exec ( pce -> re , extra , subject , subject_len , start_offset , exoptions | g_notempty , offsets , size_offsets )"		1148795	1					
ANR	1149066	Callee	pcre_exec		1148795	0					
ANR	1149067	Identifier	pcre_exec		1148795	0					
ANR	1149068	ArgumentList	pce -> re		1148795	1					
ANR	1149069	Argument	pce -> re		1148795	0					
ANR	1149070	PtrMemberAccess	pce -> re		1148795	0					
ANR	1149071	Identifier	pce		1148795	0					
ANR	1149072	Identifier	re		1148795	1					
ANR	1149073	Argument	extra		1148795	1					
ANR	1149074	Identifier	extra		1148795	0					
ANR	1149075	Argument	subject		1148795	2					
ANR	1149076	Identifier	subject		1148795	0					
ANR	1149077	Argument	subject_len		1148795	3					
ANR	1149078	Identifier	subject_len		1148795	0					
ANR	1149079	Argument	start_offset		1148795	4					
ANR	1149080	Identifier	start_offset		1148795	0					
ANR	1149081	Argument	exoptions | g_notempty		1148795	5					
ANR	1149082	InclusiveOrExpression	exoptions | g_notempty		1148795	0		|			
ANR	1149083	Identifier	exoptions		1148795	0					
ANR	1149084	Identifier	g_notempty		1148795	1					
ANR	1149085	Argument	offsets		1148795	6					
ANR	1149086	Identifier	offsets		1148795	0					
ANR	1149087	Argument	size_offsets		1148795	7					
ANR	1149088	Identifier	size_offsets		1148795	0					
ANR	1149089	ExpressionStatement	exoptions |= PCRE_NO_UTF8_CHECK	1628:2:51734:51765	1148795	1	True				
ANR	1149090	AssignmentExpression	exoptions |= PCRE_NO_UTF8_CHECK		1148795	0		|=			
ANR	1149091	Identifier	exoptions		1148795	0					
ANR	1149092	Identifier	PCRE_NO_UTF8_CHECK		1148795	1					
ANR	1149093	IfStatement	if ( count == 0 )		1148795	2					
ANR	1149094	Condition	count == 0	1631:6:51823:51832	1148795	0	True				
ANR	1149095	EqualityExpression	count == 0		1148795	0		==			
ANR	1149096	Identifier	count		1148795	0					
ANR	1149097	PrimaryExpression	0		1148795	1					
ANR	1149098	CompoundStatement		65:18:2376:2376	1148795	1					
ANR	1149099	Statement	php_error_docref	1632:3:51840:51855	1148795	0	True				
ANR	1149100	Statement	(	1632:19:51856:51856	1148795	1	True				
ANR	1149101	Statement	NULL	1632:20:51857:51860	1148795	2	True				
ANR	1149102	Statement	TSRMLS_CC	1632:25:51862:51870	1148795	3	True				
ANR	1149103	Statement	","	1632:34:51871:51871	1148795	4	True				
ANR	1149104	Statement	E_NOTICE	1632:35:51872:51879	1148795	5	True				
ANR	1149105	Statement	","	1632:43:51880:51880	1148795	6	True				
ANR	1149106	Statement	"""Matched, but too many substrings"""	1632:45:51882:51915	1148795	7	True				
ANR	1149107	Statement	)	1632:79:51916:51916	1148795	8	True				
ANR	1149108	ExpressionStatement		1632:80:51917:51917	1148795	9	True				
ANR	1149109	ExpressionStatement	count = size_offsets / 3	1633:3:51922:51944	1148795	10	True				
ANR	1149110	AssignmentExpression	count = size_offsets / 3		1148795	0		=			
ANR	1149111	Identifier	count		1148795	0					
ANR	1149112	MultiplicativeExpression	size_offsets / 3		1148795	1		/			
ANR	1149113	Identifier	size_offsets		1148795	0					
ANR	1149114	PrimaryExpression	3		1148795	1					
ANR	1149115	IfStatement	if ( count > 0 && ( offsets [ 1 ] - offsets [ 0 ] >= 0 ) )		1148795	3					
ANR	1149116	Condition	count > 0 && ( offsets [ 1 ] - offsets [ 0 ] >= 0 )	1637:6:51986:52028	1148795	0	True				
ANR	1149117	AndExpression	count > 0 && ( offsets [ 1 ] - offsets [ 0 ] >= 0 )		1148795	0		&&			
ANR	1149118	RelationalExpression	count > 0		1148795	0		>			
ANR	1149119	Identifier	count		1148795	0					
ANR	1149120	PrimaryExpression	0		1148795	1					
ANR	1149121	RelationalExpression	offsets [ 1 ] - offsets [ 0 ] >= 0		1148795	1		>=			
ANR	1149122	AdditiveExpression	offsets [ 1 ] - offsets [ 0 ]		1148795	0		-			
ANR	1149123	ArrayIndexing	offsets [ 1 ]		1148795	0					
ANR	1149124	Identifier	offsets		1148795	0					
ANR	1149125	PrimaryExpression	1		1148795	1					
ANR	1149126	ArrayIndexing	offsets [ 0 ]		1148795	1					
ANR	1149127	Identifier	offsets		1148795	0					
ANR	1149128	PrimaryExpression	0		1148795	1					
ANR	1149129	PrimaryExpression	0		1148795	1					
ANR	1149130	CompoundStatement		71:51:2572:2572	1148795	1					
ANR	1149131	IfStatement	if ( ! no_empty || & subject [ offsets [ 0 ] ] != last_match )		1148795	0					
ANR	1149132	Condition	! no_empty || & subject [ offsets [ 0 ] ] != last_match	1638:7:52040:52086	1148795	0	True				
ANR	1149133	OrExpression	! no_empty || & subject [ offsets [ 0 ] ] != last_match		1148795	0		||			
ANR	1149134	UnaryOperationExpression	! no_empty		1148795	0					
ANR	1149135	UnaryOperator	!		1148795	0					
ANR	1149136	Identifier	no_empty		1148795	1					
ANR	1149137	EqualityExpression	& subject [ offsets [ 0 ] ] != last_match		1148795	1		!=			
ANR	1149138	UnaryOperationExpression	& subject [ offsets [ 0 ] ]		1148795	0					
ANR	1149139	UnaryOperator	&		1148795	0					
ANR	1149140	ArrayIndexing	subject [ offsets [ 0 ] ]		1148795	1					
ANR	1149141	Identifier	subject		1148795	0					
ANR	1149142	ArrayIndexing	offsets [ 0 ]		1148795	1					
ANR	1149143	Identifier	offsets		1148795	0					
ANR	1149144	PrimaryExpression	0		1148795	1					
ANR	1149145	Identifier	last_match		1148795	1					
ANR	1149146	CompoundStatement		72:56:2630:2630	1148795	1					
ANR	1149147	IfStatement	if ( offset_capture )		1148795	0					
ANR	1149148	Condition	offset_capture	1640:8:52100:52113	1148795	0	True				
ANR	1149149	Identifier	offset_capture		1148795	0					
ANR	1149150	CompoundStatement		74:24:2657:2657	1148795	1					
ANR	1149151	ExpressionStatement	"add_offset_pair ( return_value , last_match , & subject [ offsets [ 0 ] ] - last_match , next_offset , NULL )"	1642:5:52179:52272	1148795	0	True				
ANR	1149152	CallExpression	"add_offset_pair ( return_value , last_match , & subject [ offsets [ 0 ] ] - last_match , next_offset , NULL )"		1148795	0					
ANR	1149153	Callee	add_offset_pair		1148795	0					
ANR	1149154	Identifier	add_offset_pair		1148795	0					
ANR	1149155	ArgumentList	return_value		1148795	1					
ANR	1149156	Argument	return_value		1148795	0					
ANR	1149157	Identifier	return_value		1148795	0					
ANR	1149158	Argument	last_match		1148795	1					
ANR	1149159	Identifier	last_match		1148795	0					
ANR	1149160	Argument	& subject [ offsets [ 0 ] ] - last_match		1148795	2					
ANR	1149161	AdditiveExpression	& subject [ offsets [ 0 ] ] - last_match		1148795	0		-			
ANR	1149162	UnaryOperationExpression	& subject [ offsets [ 0 ] ]		1148795	0					
ANR	1149163	UnaryOperator	&		1148795	0					
ANR	1149164	ArrayIndexing	subject [ offsets [ 0 ] ]		1148795	1					
ANR	1149165	Identifier	subject		1148795	0					
ANR	1149166	ArrayIndexing	offsets [ 0 ]		1148795	1					
ANR	1149167	Identifier	offsets		1148795	0					
ANR	1149168	PrimaryExpression	0		1148795	1					
ANR	1149169	Identifier	last_match		1148795	1					
ANR	1149170	Argument	next_offset		1148795	3					
ANR	1149171	Identifier	next_offset		1148795	0					
ANR	1149172	Argument	NULL		1148795	4					
ANR	1149173	Identifier	NULL		1148795	0					
ANR	1149174	ElseStatement	else		1148795	0					
ANR	1149175	CompoundStatement		77:11:2826:2826	1148795	0					
ANR	1149176	ExpressionStatement	"add_next_index_stringl ( return_value , last_match , & subject [ offsets [ 0 ] ] - last_match , 1 )"	1645:5:52337:52436	1148795	0	True				
ANR	1149177	CallExpression	"add_next_index_stringl ( return_value , last_match , & subject [ offsets [ 0 ] ] - last_match , 1 )"		1148795	0					
ANR	1149178	Callee	add_next_index_stringl		1148795	0					
ANR	1149179	Identifier	add_next_index_stringl		1148795	0					
ANR	1149180	ArgumentList	return_value		1148795	1					
ANR	1149181	Argument	return_value		1148795	0					
ANR	1149182	Identifier	return_value		1148795	0					
ANR	1149183	Argument	last_match		1148795	1					
ANR	1149184	Identifier	last_match		1148795	0					
ANR	1149185	Argument	& subject [ offsets [ 0 ] ] - last_match		1148795	2					
ANR	1149186	AdditiveExpression	& subject [ offsets [ 0 ] ] - last_match		1148795	0		-			
ANR	1149187	UnaryOperationExpression	& subject [ offsets [ 0 ] ]		1148795	0					
ANR	1149188	UnaryOperator	&		1148795	0					
ANR	1149189	ArrayIndexing	subject [ offsets [ 0 ] ]		1148795	1					
ANR	1149190	Identifier	subject		1148795	0					
ANR	1149191	ArrayIndexing	offsets [ 0 ]		1148795	1					
ANR	1149192	Identifier	offsets		1148795	0					
ANR	1149193	PrimaryExpression	0		1148795	1					
ANR	1149194	Identifier	last_match		1148795	1					
ANR	1149195	Argument	1		1148795	3					
ANR	1149196	PrimaryExpression	1		1148795	0					
ANR	1149197	IfStatement	if ( limit_val != - 1 )		1148795	1					
ANR	1149198	Condition	limit_val != - 1	1650:8:52483:52497	1148795	0	True				
ANR	1149199	EqualityExpression	limit_val != - 1		1148795	0		!=			
ANR	1149200	Identifier	limit_val		1148795	0					
ANR	1149201	UnaryOperationExpression	- 1		1148795	1					
ANR	1149202	UnaryOperator	-		1148795	0					
ANR	1149203	PrimaryExpression	1		1148795	1					
ANR	1149204	ExpressionStatement	limit_val --	1651:5:52505:52516	1148795	1	True				
ANR	1149205	PostIncDecOperationExpression	limit_val --		1148795	0					
ANR	1149206	Identifier	limit_val		1148795	0					
ANR	1149207	IncDec	--		1148795	1					
ANR	1149208	ExpressionStatement	last_match = & subject [ offsets [ 1 ] ]	1654:3:52527:52560	1148795	1	True				
ANR	1149209	AssignmentExpression	last_match = & subject [ offsets [ 1 ] ]		1148795	0		=			
ANR	1149210	Identifier	last_match		1148795	0					
ANR	1149211	UnaryOperationExpression	& subject [ offsets [ 1 ] ]		1148795	1					
ANR	1149212	UnaryOperator	&		1148795	0					
ANR	1149213	ArrayIndexing	subject [ offsets [ 1 ] ]		1148795	1					
ANR	1149214	Identifier	subject		1148795	0					
ANR	1149215	ArrayIndexing	offsets [ 1 ]		1148795	1					
ANR	1149216	Identifier	offsets		1148795	0					
ANR	1149217	PrimaryExpression	1		1148795	1					
ANR	1149218	ExpressionStatement	next_offset = offsets [ 1 ]	1655:3:52565:52589	1148795	2	True				
ANR	1149219	AssignmentExpression	next_offset = offsets [ 1 ]		1148795	0		=			
ANR	1149220	Identifier	next_offset		1148795	0					
ANR	1149221	ArrayIndexing	offsets [ 1 ]		1148795	1					
ANR	1149222	Identifier	offsets		1148795	0					
ANR	1149223	PrimaryExpression	1		1148795	1					
ANR	1149224	IfStatement	if ( delim_capture )		1148795	3					
ANR	1149225	Condition	delim_capture	1657:7:52599:52611	1148795	0	True				
ANR	1149226	Identifier	delim_capture		1148795	0					
ANR	1149227	CompoundStatement		92:4:3161:3177	1148795	1					
ANR	1149228	IdentifierDeclStatement	"int i , match_len ;"	1658:4:52620:52636	1148795	0	True				
ANR	1149229	IdentifierDecl	i		1148795	0					
ANR	1149230	IdentifierDeclType	int		1148795	0					
ANR	1149231	Identifier	i		1148795	1					
ANR	1149232	IdentifierDecl	match_len		1148795	1					
ANR	1149233	IdentifierDeclType	int		1148795	0					
ANR	1149234	Identifier	match_len		1148795	1					
ANR	1149235	ForStatement	for ( i = 1 ; i < count ; i ++ )		1148795	1					
ANR	1149236	ForInit	i = 1 ;	1659:9:52647:52652	1148795	0	True				
ANR	1149237	AssignmentExpression	i = 1		1148795	0		=			
ANR	1149238	Identifier	i		1148795	0					
ANR	1149239	PrimaryExpression	1		1148795	1					
ANR	1149240	Condition	i < count	1659:16:52654:52662	1148795	1	True				
ANR	1149241	RelationalExpression	i < count		1148795	0		<			
ANR	1149242	Identifier	i		1148795	0					
ANR	1149243	Identifier	count		1148795	1					
ANR	1149244	PostIncDecOperationExpression	i ++	1659:27:52665:52667	1148795	2	True				
ANR	1149245	Identifier	i		1148795	0					
ANR	1149246	IncDec	++		1148795	1					
ANR	1149247	CompoundStatement		93:32:3211:3211	1148795	3					
ANR	1149248	ExpressionStatement	match_len = offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]	1660:5:52677:52722	1148795	0	True				
ANR	1149249	AssignmentExpression	match_len = offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1148795	0		=			
ANR	1149250	Identifier	match_len		1148795	0					
ANR	1149251	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1148795	1		-			
ANR	1149252	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1148795	0					
ANR	1149253	Identifier	offsets		1148795	0					
ANR	1149254	AdditiveExpression	( i << 1 ) + 1		1148795	1		+			
ANR	1149255	ShiftExpression	i << 1		1148795	0		<<			
ANR	1149256	Identifier	i		1148795	0					
ANR	1149257	PrimaryExpression	1		1148795	1					
ANR	1149258	PrimaryExpression	1		1148795	1					
ANR	1149259	ArrayIndexing	offsets [ i << 1 ]		1148795	1					
ANR	1149260	Identifier	offsets		1148795	0					
ANR	1149261	ShiftExpression	i << 1		1148795	1		<<			
ANR	1149262	Identifier	i		1148795	0					
ANR	1149263	PrimaryExpression	1		1148795	1					
ANR	1149264	IfStatement	if ( ! no_empty || match_len > 0 )		1148795	1					
ANR	1149265	Condition	! no_empty || match_len > 0	1662:9:52775:52800	1148795	0	True				
ANR	1149266	OrExpression	! no_empty || match_len > 0		1148795	0		||			
ANR	1149267	UnaryOperationExpression	! no_empty		1148795	0					
ANR	1149268	UnaryOperator	!		1148795	0					
ANR	1149269	Identifier	no_empty		1148795	1					
ANR	1149270	RelationalExpression	match_len > 0		1148795	1		>			
ANR	1149271	Identifier	match_len		1148795	0					
ANR	1149272	PrimaryExpression	0		1148795	1					
ANR	1149273	CompoundStatement		96:37:3344:3344	1148795	1					
ANR	1149274	IfStatement	if ( offset_capture )		1148795	0					
ANR	1149275	Condition	offset_capture	1663:10:52815:52828	1148795	0	True				
ANR	1149276	Identifier	offset_capture		1148795	0					
ANR	1149277	CompoundStatement		97:26:3372:3372	1148795	1					
ANR	1149278	ExpressionStatement	"add_offset_pair ( return_value , & subject [ offsets [ i << 1 ] ] , match_len , offsets [ i << 1 ] , NULL )"	1664:7:52840:52926	1148795	0	True				
ANR	1149279	CallExpression	"add_offset_pair ( return_value , & subject [ offsets [ i << 1 ] ] , match_len , offsets [ i << 1 ] , NULL )"		1148795	0					
ANR	1149280	Callee	add_offset_pair		1148795	0					
ANR	1149281	Identifier	add_offset_pair		1148795	0					
ANR	1149282	ArgumentList	return_value		1148795	1					
ANR	1149283	Argument	return_value		1148795	0					
ANR	1149284	Identifier	return_value		1148795	0					
ANR	1149285	Argument	& subject [ offsets [ i << 1 ] ]		1148795	1					
ANR	1149286	UnaryOperationExpression	& subject [ offsets [ i << 1 ] ]		1148795	0					
ANR	1149287	UnaryOperator	&		1148795	0					
ANR	1149288	ArrayIndexing	subject [ offsets [ i << 1 ] ]		1148795	1					
ANR	1149289	Identifier	subject		1148795	0					
ANR	1149290	ArrayIndexing	offsets [ i << 1 ]		1148795	1					
ANR	1149291	Identifier	offsets		1148795	0					
ANR	1149292	ShiftExpression	i << 1		1148795	1		<<			
ANR	1149293	Identifier	i		1148795	0					
ANR	1149294	PrimaryExpression	1		1148795	1					
ANR	1149295	Argument	match_len		1148795	2					
ANR	1149296	Identifier	match_len		1148795	0					
ANR	1149297	Argument	offsets [ i << 1 ]		1148795	3					
ANR	1149298	ArrayIndexing	offsets [ i << 1 ]		1148795	0					
ANR	1149299	Identifier	offsets		1148795	0					
ANR	1149300	ShiftExpression	i << 1		1148795	1		<<			
ANR	1149301	Identifier	i		1148795	0					
ANR	1149302	PrimaryExpression	1		1148795	1					
ANR	1149303	Argument	NULL		1148795	4					
ANR	1149304	Identifier	NULL		1148795	0					
ANR	1149305	ElseStatement	else		1148795	0					
ANR	1149306	CompoundStatement		99:13:3482:3482	1148795	0					
ANR	1149307	ExpressionStatement	"add_next_index_stringl ( return_value , & subject [ offsets [ i << 1 ] ] , match_len , 1 )"	1666:7:52950:53055	1148795	0	True				
ANR	1149308	CallExpression	"add_next_index_stringl ( return_value , & subject [ offsets [ i << 1 ] ] , match_len , 1 )"		1148795	0					
ANR	1149309	Callee	add_next_index_stringl		1148795	0					
ANR	1149310	Identifier	add_next_index_stringl		1148795	0					
ANR	1149311	ArgumentList	return_value		1148795	1					
ANR	1149312	Argument	return_value		1148795	0					
ANR	1149313	Identifier	return_value		1148795	0					
ANR	1149314	Argument	& subject [ offsets [ i << 1 ] ]		1148795	1					
ANR	1149315	UnaryOperationExpression	& subject [ offsets [ i << 1 ] ]		1148795	0					
ANR	1149316	UnaryOperator	&		1148795	0					
ANR	1149317	ArrayIndexing	subject [ offsets [ i << 1 ] ]		1148795	1					
ANR	1149318	Identifier	subject		1148795	0					
ANR	1149319	ArrayIndexing	offsets [ i << 1 ]		1148795	1					
ANR	1149320	Identifier	offsets		1148795	0					
ANR	1149321	ShiftExpression	i << 1		1148795	1		<<			
ANR	1149322	Identifier	i		1148795	0					
ANR	1149323	PrimaryExpression	1		1148795	1					
ANR	1149324	Argument	match_len		1148795	2					
ANR	1149325	Identifier	match_len		1148795	0					
ANR	1149326	Argument	1		1148795	3					
ANR	1149327	PrimaryExpression	1		1148795	0					
ANR	1149328	ElseStatement	else		1148795	0					
ANR	1149329	IfStatement	if ( count == PCRE_ERROR_NOMATCH )		1148795	0					
ANR	1149330	Condition	count == PCRE_ERROR_NOMATCH	1673:13:53096:53122	1148795	0	True				
ANR	1149331	EqualityExpression	count == PCRE_ERROR_NOMATCH		1148795	0		==			
ANR	1149332	Identifier	count		1148795	0					
ANR	1149333	Identifier	PCRE_ERROR_NOMATCH		1148795	1					
ANR	1149334	CompoundStatement		107:42:3666:3666	1148795	1					
ANR	1149335	IfStatement	if ( g_notempty != 0 && start_offset < subject_len )		1148795	0					
ANR	1149336	Condition	g_notempty != 0 && start_offset < subject_len	1678:7:53396:53440	1148795	0	True				
ANR	1149337	AndExpression	g_notempty != 0 && start_offset < subject_len		1148795	0		&&			
ANR	1149338	EqualityExpression	g_notempty != 0		1148795	0		!=			
ANR	1149339	Identifier	g_notempty		1148795	0					
ANR	1149340	PrimaryExpression	0		1148795	1					
ANR	1149341	RelationalExpression	start_offset < subject_len		1148795	1		<			
ANR	1149342	Identifier	start_offset		1148795	0					
ANR	1149343	Identifier	subject_len		1148795	1					
ANR	1149344	CompoundStatement		112:54:3984:3984	1148795	1					
ANR	1149345	IfStatement	if ( pce -> compile_options & PCRE_UTF8 )		1148795	0					
ANR	1149346	Condition	pce -> compile_options & PCRE_UTF8	1679:8:53453:53484	1148795	0	True				
ANR	1149347	BitAndExpression	pce -> compile_options & PCRE_UTF8		1148795	0		&			
ANR	1149348	PtrMemberAccess	pce -> compile_options		1148795	0					
ANR	1149349	Identifier	pce		1148795	0					
ANR	1149350	Identifier	compile_options		1148795	1					
ANR	1149351	Identifier	PCRE_UTF8		1148795	1					
ANR	1149352	CompoundStatement		113:42:4028:4028	1148795	1					
ANR	1149353	IfStatement	if ( re_bump == NULL )		1148795	0					
ANR	1149354	Condition	re_bump == NULL	1680:9:53498:53512	1148795	0	True				
ANR	1149355	EqualityExpression	re_bump == NULL		1148795	0		==			
ANR	1149356	Identifier	re_bump		1148795	0					
ANR	1149357	Identifier	NULL		1148795	1					
ANR	1149358	CompoundStatement		115:6:4064:4073	1148795	1					
ANR	1149359	IdentifierDeclStatement	int dummy ;	1681:6:53523:53532	1148795	0	True				
ANR	1149360	IdentifierDecl	dummy		1148795	0					
ANR	1149361	IdentifierDeclType	int		1148795	0					
ANR	1149362	Identifier	dummy		1148795	1					
ANR	1149363	Statement	if	1683:6:53541:53542	1148795	1	True				
ANR	1149364	Statement	(	1683:9:53544:53544	1148795	2	True				
ANR	1149365	Statement	(	1683:10:53545:53545	1148795	3	True				
ANR	1149366	Statement	re_bump	1683:11:53546:53552	1148795	4	True				
ANR	1149367	Statement	=	1683:19:53554:53554	1148795	5	True				
ANR	1149368	Statement	pcre_get_compiled_regex	1683:21:53556:53578	1148795	6	True				
ANR	1149369	Statement	(	1683:44:53579:53579	1148795	7	True				
ANR	1149370	Statement	"""/./us"""	1683:45:53580:53586	1148795	8	True				
ANR	1149371	Statement	","	1683:52:53587:53587	1148795	9	True				
ANR	1149372	Statement	&	1683:54:53589:53589	1148795	10	True				
ANR	1149373	Statement	extra_bump	1683:55:53590:53599	1148795	11	True				
ANR	1149374	Statement	","	1683:65:53600:53600	1148795	12	True				
ANR	1149375	Statement	&	1683:67:53602:53602	1148795	13	True				
ANR	1149376	Statement	dummy	1683:68:53603:53607	1148795	14	True				
ANR	1149377	Statement	TSRMLS_CC	1683:74:53609:53617	1148795	15	True				
ANR	1149378	Statement	)	1683:83:53618:53618	1148795	16	True				
ANR	1149379	Statement	)	1683:84:53619:53619	1148795	17	True				
ANR	1149380	Statement	==	1683:86:53621:53622	1148795	18	True				
ANR	1149381	Statement	NULL	1683:89:53624:53627	1148795	19	True				
ANR	1149382	Statement	)	1683:93:53628:53628	1148795	20	True				
ANR	1149383	CompoundStatement		117:95:4171:4171	1148795	21					
ANR	1149384	ExpressionStatement	RETURN_FALSE	1684:7:53639:53651	1148795	0	True				
ANR	1149385	Identifier	RETURN_FALSE		1148795	0					
ANR	1149386	ExpressionStatement	"count = pcre_exec ( re_bump , extra_bump , subject , subject_len , start_offset , exoptions , offsets , size_offsets )"	1687:5:53673:53799	1148795	1	True				
ANR	1149387	AssignmentExpression	"count = pcre_exec ( re_bump , extra_bump , subject , subject_len , start_offset , exoptions , offsets , size_offsets )"		1148795	0		=			
ANR	1149388	Identifier	count		1148795	0					
ANR	1149389	CallExpression	"pcre_exec ( re_bump , extra_bump , subject , subject_len , start_offset , exoptions , offsets , size_offsets )"		1148795	1					
ANR	1149390	Callee	pcre_exec		1148795	0					
ANR	1149391	Identifier	pcre_exec		1148795	0					
ANR	1149392	ArgumentList	re_bump		1148795	1					
ANR	1149393	Argument	re_bump		1148795	0					
ANR	1149394	Identifier	re_bump		1148795	0					
ANR	1149395	Argument	extra_bump		1148795	1					
ANR	1149396	Identifier	extra_bump		1148795	0					
ANR	1149397	Argument	subject		1148795	2					
ANR	1149398	Identifier	subject		1148795	0					
ANR	1149399	Argument	subject_len		1148795	3					
ANR	1149400	Identifier	subject_len		1148795	0					
ANR	1149401	Argument	start_offset		1148795	4					
ANR	1149402	Identifier	start_offset		1148795	0					
ANR	1149403	Argument	exoptions		1148795	5					
ANR	1149404	Identifier	exoptions		1148795	0					
ANR	1149405	Argument	offsets		1148795	6					
ANR	1149406	Identifier	offsets		1148795	0					
ANR	1149407	Argument	size_offsets		1148795	7					
ANR	1149408	Identifier	size_offsets		1148795	0					
ANR	1149409	IfStatement	if ( count < 1 )		1148795	2					
ANR	1149410	Condition	count < 1	1690:9:53810:53818	1148795	0	True				
ANR	1149411	RelationalExpression	count < 1		1148795	0		<			
ANR	1149412	Identifier	count		1148795	0					
ANR	1149413	PrimaryExpression	1		1148795	1					
ANR	1149414	CompoundStatement		124:20:4362:4362	1148795	1					
ANR	1149415	Statement	php_error_docref	1691:6:53829:53844	1148795	0	True				
ANR	1149416	Statement	(	1691:22:53845:53845	1148795	1	True				
ANR	1149417	Statement	NULL	1691:23:53846:53849	1148795	2	True				
ANR	1149418	Statement	TSRMLS_CC	1691:28:53851:53859	1148795	3	True				
ANR	1149419	Statement	","	1691:37:53860:53860	1148795	4	True				
ANR	1149420	Statement	E_WARNING	1691:39:53862:53870	1148795	5	True				
ANR	1149421	Statement	","	1691:48:53871:53871	1148795	6	True				
ANR	1149422	Statement	"""Unknown error"""	1691:50:53873:53887	1148795	7	True				
ANR	1149423	Statement	)	1691:65:53888:53888	1148795	8	True				
ANR	1149424	ExpressionStatement		1691:66:53889:53889	1148795	9	True				
ANR	1149425	ExpressionStatement	RETURN_FALSE	1692:6:53897:53909	1148795	10	True				
ANR	1149426	Identifier	RETURN_FALSE		1148795	0					
ANR	1149427	ElseStatement	else		1148795	0					
ANR	1149428	CompoundStatement		128:11:4470:4470	1148795	0					
ANR	1149429	ExpressionStatement	offsets [ 0 ] = start_offset	1695:5:53936:53961	1148795	0	True				
ANR	1149430	AssignmentExpression	offsets [ 0 ] = start_offset		1148795	0		=			
ANR	1149431	ArrayIndexing	offsets [ 0 ]		1148795	0					
ANR	1149432	Identifier	offsets		1148795	0					
ANR	1149433	PrimaryExpression	0		1148795	1					
ANR	1149434	Identifier	start_offset		1148795	1					
ANR	1149435	ExpressionStatement	offsets [ 1 ] = start_offset + 1	1696:5:53968:53997	1148795	1	True				
ANR	1149436	AssignmentExpression	offsets [ 1 ] = start_offset + 1		1148795	0		=			
ANR	1149437	ArrayIndexing	offsets [ 1 ]		1148795	0					
ANR	1149438	Identifier	offsets		1148795	0					
ANR	1149439	PrimaryExpression	1		1148795	1					
ANR	1149440	AdditiveExpression	start_offset + 1		1148795	1		+			
ANR	1149441	Identifier	start_offset		1148795	0					
ANR	1149442	PrimaryExpression	1		1148795	1					
ANR	1149443	ElseStatement	else		1148795	0					
ANR	1149444	BreakStatement	break ;	1699:4:54019:54024	1148795	0	True				
ANR	1149445	ElseStatement	else		1148795	0					
ANR	1149446	CompoundStatement		134:9:4576:4576	1148795	0					
ANR	1149447	Statement	pcre_handle_exec_error	1701:3:54040:54061	1148795	0	True				
ANR	1149448	Statement	(	1701:25:54062:54062	1148795	1	True				
ANR	1149449	Statement	count	1701:26:54063:54067	1148795	2	True				
ANR	1149450	Statement	TSRMLS_CC	1701:32:54069:54077	1148795	3	True				
ANR	1149451	Statement	)	1701:41:54078:54078	1148795	4	True				
ANR	1149452	ExpressionStatement		1701:42:54079:54079	1148795	5	True				
ANR	1149453	BreakStatement	break ;	1702:3:54084:54089	1148795	6	True				
ANR	1149454	ExpressionStatement	g_notempty = ( offsets [ 1 ] == offsets [ 0 ] ) ? PCRE_NOTEMPTY_ATSTART | PCRE_ANCHORED : 0	1709:2:54373:54455	1148795	4	True				
ANR	1149455	AssignmentExpression	g_notempty = ( offsets [ 1 ] == offsets [ 0 ] ) ? PCRE_NOTEMPTY_ATSTART | PCRE_ANCHORED : 0		1148795	0		=			
ANR	1149456	Identifier	g_notempty		1148795	0					
ANR	1149457	ConditionalExpression	( offsets [ 1 ] == offsets [ 0 ] ) ? PCRE_NOTEMPTY_ATSTART | PCRE_ANCHORED : 0		1148795	1					
ANR	1149458	Condition	offsets [ 1 ] == offsets [ 0 ]		1148795	0					
ANR	1149459	EqualityExpression	offsets [ 1 ] == offsets [ 0 ]		1148795	0		==			
ANR	1149460	ArrayIndexing	offsets [ 1 ]		1148795	0					
ANR	1149461	Identifier	offsets		1148795	0					
ANR	1149462	PrimaryExpression	1		1148795	1					
ANR	1149463	ArrayIndexing	offsets [ 0 ]		1148795	1					
ANR	1149464	Identifier	offsets		1148795	0					
ANR	1149465	PrimaryExpression	0		1148795	1					
ANR	1149466	InclusiveOrExpression	PCRE_NOTEMPTY_ATSTART | PCRE_ANCHORED		1148795	1		|			
ANR	1149467	Identifier	PCRE_NOTEMPTY_ATSTART		1148795	0					
ANR	1149468	Identifier	PCRE_ANCHORED		1148795	1					
ANR	1149469	PrimaryExpression	0		1148795	2					
ANR	1149470	ExpressionStatement	start_offset = offsets [ 1 ]	1712:2:54524:54549	1148795	5	True				
ANR	1149471	AssignmentExpression	start_offset = offsets [ 1 ]		1148795	0		=			
ANR	1149472	Identifier	start_offset		1148795	0					
ANR	1149473	ArrayIndexing	offsets [ 1 ]		1148795	1					
ANR	1149474	Identifier	offsets		1148795	0					
ANR	1149475	PrimaryExpression	1		1148795	1					
ANR	1149476	ExpressionStatement	start_offset = last_match - subject	1716:1:54557:54592	1148795	34	True				
ANR	1149477	AssignmentExpression	start_offset = last_match - subject		1148795	0		=			
ANR	1149478	Identifier	start_offset		1148795	0					
ANR	1149479	AdditiveExpression	last_match - subject		1148795	1		-			
ANR	1149480	Identifier	last_match		1148795	0					
ANR	1149481	Identifier	subject		1148795	1					
ANR	1149482	IfStatement	if ( ! no_empty || start_offset < subject_len )		1148795	35					
ANR	1149483	Condition	! no_empty || start_offset < subject_len	1718:5:54685:54723	1148795	0	True				
ANR	1149484	OrExpression	! no_empty || start_offset < subject_len		1148795	0		||			
ANR	1149485	UnaryOperationExpression	! no_empty		1148795	0					
ANR	1149486	UnaryOperator	!		1148795	0					
ANR	1149487	Identifier	no_empty		1148795	1					
ANR	1149488	RelationalExpression	start_offset < subject_len		1148795	1		<			
ANR	1149489	Identifier	start_offset		1148795	0					
ANR	1149490	Identifier	subject_len		1148795	1					
ANR	1149491	CompoundStatement		153:1:5268:5268	1148795	1					
ANR	1149492	IfStatement	if ( offset_capture )		1148795	0					
ANR	1149493	Condition	offset_capture	1720:6:54735:54748	1148795	0	True				
ANR	1149494	Identifier	offset_capture		1148795	0					
ANR	1149495	CompoundStatement		154:22:5292:5292	1148795	1					
ANR	1149496	ExpressionStatement	"add_offset_pair ( return_value , & subject [ start_offset ] , subject_len - start_offset , start_offset , NULL )"	1722:3:54819:54920	1148795	0	True				
ANR	1149497	CallExpression	"add_offset_pair ( return_value , & subject [ start_offset ] , subject_len - start_offset , start_offset , NULL )"		1148795	0					
ANR	1149498	Callee	add_offset_pair		1148795	0					
ANR	1149499	Identifier	add_offset_pair		1148795	0					
ANR	1149500	ArgumentList	return_value		1148795	1					
ANR	1149501	Argument	return_value		1148795	0					
ANR	1149502	Identifier	return_value		1148795	0					
ANR	1149503	Argument	& subject [ start_offset ]		1148795	1					
ANR	1149504	UnaryOperationExpression	& subject [ start_offset ]		1148795	0					
ANR	1149505	UnaryOperator	&		1148795	0					
ANR	1149506	ArrayIndexing	subject [ start_offset ]		1148795	1					
ANR	1149507	Identifier	subject		1148795	0					
ANR	1149508	Identifier	start_offset		1148795	1					
ANR	1149509	Argument	subject_len - start_offset		1148795	2					
ANR	1149510	AdditiveExpression	subject_len - start_offset		1148795	0		-			
ANR	1149511	Identifier	subject_len		1148795	0					
ANR	1149512	Identifier	start_offset		1148795	1					
ANR	1149513	Argument	start_offset		1148795	3					
ANR	1149514	Identifier	start_offset		1148795	0					
ANR	1149515	Argument	NULL		1148795	4					
ANR	1149516	Identifier	NULL		1148795	0					
ANR	1149517	ElseStatement	else		1148795	0					
ANR	1149518	CompoundStatement		157:9:5472:5472	1148795	0					
ANR	1149519	ExpressionStatement	"add_next_index_stringl ( return_value , last_match , subject + subject_len - last_match , 1 )"	1725:3:54984:55071	1148795	0	True				
ANR	1149520	CallExpression	"add_next_index_stringl ( return_value , last_match , subject + subject_len - last_match , 1 )"		1148795	0					
ANR	1149521	Callee	add_next_index_stringl		1148795	0					
ANR	1149522	Identifier	add_next_index_stringl		1148795	0					
ANR	1149523	ArgumentList	return_value		1148795	1					
ANR	1149524	Argument	return_value		1148795	0					
ANR	1149525	Identifier	return_value		1148795	0					
ANR	1149526	Argument	last_match		1148795	1					
ANR	1149527	Identifier	last_match		1148795	0					
ANR	1149528	Argument	subject + subject_len - last_match		1148795	2					
ANR	1149529	AdditiveExpression	subject + subject_len - last_match		1148795	0		+			
ANR	1149530	Identifier	subject		1148795	0					
ANR	1149531	AdditiveExpression	subject_len - last_match		1148795	1		-			
ANR	1149532	Identifier	subject_len		1148795	0					
ANR	1149533	Identifier	last_match		1148795	1					
ANR	1149534	Argument	1		1148795	3					
ANR	1149535	PrimaryExpression	1		1148795	0					
ANR	1149536	ExpressionStatement	efree ( offsets )	1731:1:55099:55113	1148795	36	True				
ANR	1149537	CallExpression	efree ( offsets )		1148795	0					
ANR	1149538	Callee	efree		1148795	0					
ANR	1149539	Identifier	efree		1148795	0					
ANR	1149540	ArgumentList	offsets		1148795	1					
ANR	1149541	Argument	offsets		1148795	0					
ANR	1149542	Identifier	offsets		1148795	0					
ANR	1149543	ReturnType	PHPAPI void		1148795	1					
ANR	1149544	Identifier	php_pcre_split_impl		1148795	2					
ANR	1149545	ParameterList	"pcre_cache_entry * pce , char * subject , int subject_len , zval * return_value , long limit_val , long flags TSRMLS_DC"		1148795	3					
ANR	1149546	Parameter	pcre_cache_entry * pce	1565:32:49344:49364	1148795	0	True				
ANR	1149547	ParameterType	pcre_cache_entry *		1148795	0					
ANR	1149548	Identifier	pce		1148795	1					
ANR	1149549	Parameter	char * subject	1565:55:49367:49379	1148795	1	True				
ANR	1149550	ParameterType	char *		1148795	0					
ANR	1149551	Identifier	subject		1148795	1					
ANR	1149552	Parameter	int subject_len	1565:70:49382:49396	1148795	2	True				
ANR	1149553	ParameterType	int		1148795	0					
ANR	1149554	Identifier	subject_len		1148795	1					
ANR	1149555	Parameter	zval * return_value	1565:87:49399:49416	1148795	3	True				
ANR	1149556	ParameterType	zval *		1148795	0					
ANR	1149557	Identifier	return_value		1148795	1					
ANR	1149558	Parameter	long limit_val	1566:1:49420:49433	1148795	4	True				
ANR	1149559	ParameterType	long		1148795	0					
ANR	1149560	Identifier	limit_val		1148795	1					
ANR	1149561	Parameter	long flags TSRMLS_DC	1566:17:49436:49455	1148795	5	True				
ANR	1149562	ParameterType	long flags		1148795	0					
ANR	1149563	Identifier	TSRMLS_DC		1148795	1					
ANR	1149564	CFGEntryNode	ENTRY		1148795		True				
ANR	1149565	CFGExitNode	EXIT		1148795		True				
ANR	1149566	Symbol	PREG_SPLIT_OFFSET_CAPTURE		1148795						
ANR	1149567	Symbol	pcre_exec		1148795						
ANR	1149568	Symbol	match_len		1148795						
ANR	1149569	Symbol	subject		1148795						
ANR	1149570	Symbol	g_notempty		1148795						
ANR	1149571	Symbol	pce -> compile_options		1148795						
ANR	1149572	Symbol	re_bump		1148795						
ANR	1149573	Symbol	TSRMLS_DC		1148795						
ANR	1149574	Symbol	extra_bump		1148795						
ANR	1149575	Symbol	extra -> flags		1148795						
ANR	1149576	Symbol	dummy		1148795						
ANR	1149577	Symbol	subject_len		1148795						
ANR	1149578	Symbol	& size_offsets		1148795						
ANR	1149579	Symbol	exoptions		1148795						
ANR	1149580	Symbol	NULL		1148795						
ANR	1149581	Symbol	count		1148795						
ANR	1149582	Symbol	~PCRE_EXTRA_MARK		1148795						
ANR	1149583	Symbol	rc		1148795						
ANR	1149584	Symbol	PCRE_ERROR_NOMATCH		1148795						
ANR	1149585	Symbol	& extra_data		1148795						
ANR	1149586	Symbol	* extra		1148795						
ANR	1149587	Symbol	pce -> re		1148795						
ANR	1149588	Symbol	error_code		1148795						
ANR	1149589	Symbol	extra_data . flags		1148795						
ANR	1149590	Symbol	no_empty		1148795						
ANR	1149591	Symbol	* pce		1148795						
ANR	1149592	Symbol	return_value		1148795						
ANR	1149593	Symbol	offset_capture		1148795						
ANR	1149594	Symbol	backtrack_limit		1148795						
ANR	1149595	Symbol	flags		1148795						
ANR	1149596	Symbol	extra -> match_limit		1148795						
ANR	1149597	Symbol	extra -> match_limit_recursion		1148795						
ANR	1149598	Symbol	pce		1148795						
ANR	1149599	Symbol	recursion_limit		1148795						
ANR	1149600	Symbol	extra		1148795						
ANR	1149601	Symbol	PCRE_NO_UTF8_CHECK		1148795						
ANR	1149602	Symbol	PCRE_INFO_CAPTURECOUNT		1148795						
ANR	1149603	Symbol	size_offsets		1148795						
ANR	1149604	Symbol	next_offset		1148795						
ANR	1149605	Symbol	* offsets		1148795						
ANR	1149606	Symbol	limit_val		1148795						
ANR	1149607	Symbol	PREG_SPLIT_DELIM_CAPTURE		1148795						
ANR	1149608	Symbol	PHP_PCRE_NO_ERROR		1148795						
ANR	1149609	Symbol	PCRE_ANCHORED		1148795						
ANR	1149610	Symbol	i		1148795						
ANR	1149611	Symbol	PREG_SPLIT_NO_EMPTY		1148795						
ANR	1149612	Symbol	pcre_fullinfo		1148795						
ANR	1149613	Symbol	PCRE_EXTRA_MATCH_LIMIT_RECURSION		1148795						
ANR	1149614	Symbol	PCRE_NOTEMPTY_ATSTART		1148795						
ANR	1149615	Symbol	last_match		1148795						
ANR	1149616	Symbol	* i		1148795						
ANR	1149617	Symbol	delim_capture		1148795						
ANR	1149618	Symbol	PCRE_G		1148795						
ANR	1149619	Symbol	extra_data		1148795						
ANR	1149620	Symbol	offsets		1148795						
ANR	1149621	Symbol	PCRE_EXTRA_MATCH_LIMIT		1148795						
ANR	1149622	Symbol	start_offset		1148795						
ANR	1149623	Symbol	PCRE_UTF8		1148795						
ANR	1149624	Symbol	safe_emalloc		1148795						
ANR	1149625	DeclStmt									
ANR	1149626	Decl							int	int	in_str_len
ANR	1149627	DeclStmt									
ANR	1149628	Decl							char	char *	in_str
ANR	1149629	DeclStmt									
ANR	1149630	Decl							char	char *	in_str_end
ANR	1149631	DeclStmt									
ANR	1149632	Decl							int	int	delim_len
ANR	1149633	DeclStmt									
ANR	1149634	Decl							char	char *	delim
ANR	1149635	DeclStmt									
ANR	1149636	Decl							char	char *	out_str
ANR	1149637	Decl							char	char *	p
ANR	1149638	Decl							char	char *	q
ANR	1149639	Decl							char	char	delim_char
ANR	1149640	Decl							char	char	c
ANR	1149641	DeclStmt									
ANR	1149642	Decl							zend_bool	zend_bool	quote_delim
ANR	1149643	DeclStmt									
ANR	1149644	Decl							char	char *	regex
ANR	1149645	DeclStmt									
ANR	1149646	Decl							int	int	regex_len
ANR	1149647	DeclStmt									
ANR	1149648	Decl							zval	zval *	input
ANR	1149649	DeclStmt									
ANR	1149650	Decl							long	long	flags
ANR	1149651	DeclStmt									
ANR	1149652	Decl							pcre_cache_entry	pcre_cache_entry *	pce
ANR	1149653	Function	php_pcre_grep_impl	1849:0:57931:60934							
ANR	1149654	FunctionDef	"php_pcre_grep_impl (pcre_cache_entry * pce , zval * input , zval * return_value , long flags TSRMLS_DC)"		1149653	0					
ANR	1149655	CompoundStatement		1850:0:58051:60934	1149653	0					
ANR	1149656	IdentifierDeclStatement	zval * * entry ;	1851:1:58054:58070	1149653	0	True				
ANR	1149657	IdentifierDecl	* * entry		1149653	0					
ANR	1149658	IdentifierDeclType	zval * *		1149653	0					
ANR	1149659	Identifier	entry		1149653	1					
ANR	1149660	IdentifierDeclStatement	pcre_extra * extra = pce -> extra ;	1852:1:58110:58141	1149653	1	True				
ANR	1149661	IdentifierDecl	* extra = pce -> extra		1149653	0					
ANR	1149662	IdentifierDeclType	pcre_extra *		1149653	0					
ANR	1149663	Identifier	extra		1149653	1					
ANR	1149664	AssignmentExpression	* extra = pce -> extra		1149653	2		=			
ANR	1149665	Identifier	extra		1149653	0					
ANR	1149666	PtrMemberAccess	pce -> extra		1149653	1					
ANR	1149667	Identifier	pce		1149653	0					
ANR	1149668	Identifier	extra		1149653	1					
ANR	1149669	IdentifierDeclStatement	pcre_extra extra_data ;	1853:1:58175:58198	1149653	2	True				
ANR	1149670	IdentifierDecl	extra_data		1149653	0					
ANR	1149671	IdentifierDeclType	pcre_extra		1149653	0					
ANR	1149672	Identifier	extra_data		1149653	1					
ANR	1149673	IdentifierDeclStatement	int * offsets ;	1854:1:58238:58253	1149653	3	True				
ANR	1149674	IdentifierDecl	* offsets		1149653	0					
ANR	1149675	IdentifierDeclType	int *		1149653	0					
ANR	1149676	Identifier	offsets		1149653	1					
ANR	1149677	IdentifierDeclStatement	int size_offsets ;	1855:1:58292:58312	1149653	4	True				
ANR	1149678	IdentifierDecl	size_offsets		1149653	0					
ANR	1149679	IdentifierDeclType	int		1149653	0					
ANR	1149680	Identifier	size_offsets		1149653	1					
ANR	1149681	IdentifierDeclStatement	int count = 0 ;	1856:1:58348:58365	1149653	5	True				
ANR	1149682	IdentifierDecl	count = 0		1149653	0					
ANR	1149683	IdentifierDeclType	int		1149653	0					
ANR	1149684	Identifier	count		1149653	1					
ANR	1149685	AssignmentExpression	count = 0		1149653	2		=			
ANR	1149686	Identifier	count		1149653	0					
ANR	1149687	PrimaryExpression	0		1149653	1					
ANR	1149688	IdentifierDeclStatement	char * string_key ;	1857:1:58405:58423	1149653	6	True				
ANR	1149689	IdentifierDecl	* string_key		1149653	0					
ANR	1149690	IdentifierDeclType	char *		1149653	0					
ANR	1149691	Identifier	string_key		1149653	1					
ANR	1149692	IdentifierDeclStatement	uint string_key_len ;	1858:1:58426:58448	1149653	7	True				
ANR	1149693	IdentifierDecl	string_key_len		1149653	0					
ANR	1149694	IdentifierDeclType	uint		1149653	0					
ANR	1149695	Identifier	string_key_len		1149653	1					
ANR	1149696	IdentifierDeclStatement	ulong num_key ;	1859:1:58451:58467	1149653	8	True				
ANR	1149697	IdentifierDecl	num_key		1149653	0					
ANR	1149698	IdentifierDeclType	ulong		1149653	0					
ANR	1149699	Identifier	num_key		1149653	1					
ANR	1149700	IdentifierDeclStatement	zend_bool invert ;	1860:1:58470:58488	1149653	9	True				
ANR	1149701	IdentifierDecl	invert		1149653	0					
ANR	1149702	IdentifierDeclType	zend_bool		1149653	0					
ANR	1149703	Identifier	invert		1149653	1					
ANR	1149704	IdentifierDeclStatement	int rc ;	1862:1:58551:58561	1149653	10	True				
ANR	1149705	IdentifierDecl	rc		1149653	0					
ANR	1149706	IdentifierDeclType	int		1149653	0					
ANR	1149707	Identifier	rc		1149653	1					
ANR	1149708	ExpressionStatement	invert = flags & PREG_GREP_INVERT ? 1 : 0	1864:1:58565:58606	1149653	11	True				
ANR	1149709	AssignmentExpression	invert = flags & PREG_GREP_INVERT ? 1 : 0		1149653	0		=			
ANR	1149710	Identifier	invert		1149653	0					
ANR	1149711	ConditionalExpression	flags & PREG_GREP_INVERT ? 1 : 0		1149653	1					
ANR	1149712	Condition	flags & PREG_GREP_INVERT		1149653	0					
ANR	1149713	BitAndExpression	flags & PREG_GREP_INVERT		1149653	0		&			
ANR	1149714	Identifier	flags		1149653	0					
ANR	1149715	Identifier	PREG_GREP_INVERT		1149653	1					
ANR	1149716	PrimaryExpression	1		1149653	1					
ANR	1149717	PrimaryExpression	0		1149653	2					
ANR	1149718	IfStatement	if ( extra == NULL )		1149653	12					
ANR	1149719	Condition	extra == NULL	1866:5:58614:58626	1149653	0	True				
ANR	1149720	EqualityExpression	extra == NULL		1149653	0		==			
ANR	1149721	Identifier	extra		1149653	0					
ANR	1149722	Identifier	NULL		1149653	1					
ANR	1149723	CompoundStatement		17:20:577:577	1149653	1					
ANR	1149724	ExpressionStatement	extra_data . flags = PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION	1867:2:58633:58709	1149653	0	True				
ANR	1149725	AssignmentExpression	extra_data . flags = PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION		1149653	0		=			
ANR	1149726	MemberAccess	extra_data . flags		1149653	0					
ANR	1149727	Identifier	extra_data		1149653	0					
ANR	1149728	Identifier	flags		1149653	1					
ANR	1149729	InclusiveOrExpression	PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION		1149653	1		|			
ANR	1149730	Identifier	PCRE_EXTRA_MATCH_LIMIT		1149653	0					
ANR	1149731	Identifier	PCRE_EXTRA_MATCH_LIMIT_RECURSION		1149653	1					
ANR	1149732	ExpressionStatement	extra = & extra_data	1868:2:58713:58732	1149653	1	True				
ANR	1149733	AssignmentExpression	extra = & extra_data		1149653	0		=			
ANR	1149734	Identifier	extra		1149653	0					
ANR	1149735	UnaryOperationExpression	& extra_data		1149653	1					
ANR	1149736	UnaryOperator	&		1149653	0					
ANR	1149737	Identifier	extra_data		1149653	1					
ANR	1149738	ExpressionStatement	extra -> match_limit = PCRE_G ( backtrack_limit )	1870:1:58738:58782	1149653	13	True				
ANR	1149739	AssignmentExpression	extra -> match_limit = PCRE_G ( backtrack_limit )		1149653	0		=			
ANR	1149740	PtrMemberAccess	extra -> match_limit		1149653	0					
ANR	1149741	Identifier	extra		1149653	0					
ANR	1149742	Identifier	match_limit		1149653	1					
ANR	1149743	CallExpression	PCRE_G ( backtrack_limit )		1149653	1					
ANR	1149744	Callee	PCRE_G		1149653	0					
ANR	1149745	Identifier	PCRE_G		1149653	0					
ANR	1149746	ArgumentList	backtrack_limit		1149653	1					
ANR	1149747	Argument	backtrack_limit		1149653	0					
ANR	1149748	Identifier	backtrack_limit		1149653	0					
ANR	1149749	ExpressionStatement	extra -> match_limit_recursion = PCRE_G ( recursion_limit )	1871:1:58785:58839	1149653	14	True				
ANR	1149750	AssignmentExpression	extra -> match_limit_recursion = PCRE_G ( recursion_limit )		1149653	0		=			
ANR	1149751	PtrMemberAccess	extra -> match_limit_recursion		1149653	0					
ANR	1149752	Identifier	extra		1149653	0					
ANR	1149753	Identifier	match_limit_recursion		1149653	1					
ANR	1149754	CallExpression	PCRE_G ( recursion_limit )		1149653	1					
ANR	1149755	Callee	PCRE_G		1149653	0					
ANR	1149756	Identifier	PCRE_G		1149653	0					
ANR	1149757	ArgumentList	recursion_limit		1149653	1					
ANR	1149758	Argument	recursion_limit		1149653	0					
ANR	1149759	Identifier	recursion_limit		1149653	0					
ANR	1149760	ExpressionStatement	extra -> flags &= ~PCRE_EXTRA_MARK	1873:1:58865:58897	1149653	15	True				
ANR	1149761	AssignmentExpression	extra -> flags &= ~PCRE_EXTRA_MARK		1149653	0		&=			
ANR	1149762	PtrMemberAccess	extra -> flags		1149653	0					
ANR	1149763	Identifier	extra		1149653	0					
ANR	1149764	Identifier	flags		1149653	1					
ANR	1149765	Identifier	~PCRE_EXTRA_MARK		1149653	1					
ANR	1149766	ExpressionStatement	"rc = pcre_fullinfo ( pce -> re , extra , PCRE_INFO_CAPTURECOUNT , & size_offsets )"	1877:1:58984:59057	1149653	16	True				
ANR	1149767	AssignmentExpression	"rc = pcre_fullinfo ( pce -> re , extra , PCRE_INFO_CAPTURECOUNT , & size_offsets )"		1149653	0		=			
ANR	1149768	Identifier	rc		1149653	0					
ANR	1149769	CallExpression	"pcre_fullinfo ( pce -> re , extra , PCRE_INFO_CAPTURECOUNT , & size_offsets )"		1149653	1					
ANR	1149770	Callee	pcre_fullinfo		1149653	0					
ANR	1149771	Identifier	pcre_fullinfo		1149653	0					
ANR	1149772	ArgumentList	pce -> re		1149653	1					
ANR	1149773	Argument	pce -> re		1149653	0					
ANR	1149774	PtrMemberAccess	pce -> re		1149653	0					
ANR	1149775	Identifier	pce		1149653	0					
ANR	1149776	Identifier	re		1149653	1					
ANR	1149777	Argument	extra		1149653	1					
ANR	1149778	Identifier	extra		1149653	0					
ANR	1149779	Argument	PCRE_INFO_CAPTURECOUNT		1149653	2					
ANR	1149780	Identifier	PCRE_INFO_CAPTURECOUNT		1149653	0					
ANR	1149781	Argument	& size_offsets		1149653	3					
ANR	1149782	UnaryOperationExpression	& size_offsets		1149653	0					
ANR	1149783	UnaryOperator	&		1149653	0					
ANR	1149784	Identifier	size_offsets		1149653	1					
ANR	1149785	IfStatement	if ( rc < 0 )		1149653	17					
ANR	1149786	Condition	rc < 0	1878:5:59064:59069	1149653	0	True				
ANR	1149787	RelationalExpression	rc < 0		1149653	0		<			
ANR	1149788	Identifier	rc		1149653	0					
ANR	1149789	PrimaryExpression	0		1149653	1					
ANR	1149790	CompoundStatement		29:13:1020:1020	1149653	1					
ANR	1149791	Statement	php_error_docref	1879:2:59076:59091	1149653	0	True				
ANR	1149792	Statement	(	1879:18:59092:59092	1149653	1	True				
ANR	1149793	Statement	NULL	1879:19:59093:59096	1149653	2	True				
ANR	1149794	Statement	TSRMLS_CC	1879:24:59098:59106	1149653	3	True				
ANR	1149795	Statement	","	1879:33:59107:59107	1149653	4	True				
ANR	1149796	Statement	E_WARNING	1879:35:59109:59117	1149653	5	True				
ANR	1149797	Statement	","	1879:44:59118:59118	1149653	6	True				
ANR	1149798	Statement	"""Internal pcre_fullinfo() error %d"""	1879:46:59120:59154	1149653	7	True				
ANR	1149799	Statement	","	1879:81:59155:59155	1149653	8	True				
ANR	1149800	Statement	rc	1879:83:59157:59158	1149653	9	True				
ANR	1149801	Statement	)	1879:85:59159:59159	1149653	10	True				
ANR	1149802	ExpressionStatement		1879:86:59160:59160	1149653	11	True				
ANR	1149803	ExpressionStatement	RETURN_FALSE	1880:2:59164:59176	1149653	12	True				
ANR	1149804	Identifier	RETURN_FALSE		1149653	0					
ANR	1149805	ExpressionStatement	size_offsets = ( size_offsets + 1 ) * 3	1882:1:59182:59219	1149653	18	True				
ANR	1149806	AssignmentExpression	size_offsets = ( size_offsets + 1 ) * 3		1149653	0		=			
ANR	1149807	Identifier	size_offsets		1149653	0					
ANR	1149808	MultiplicativeExpression	( size_offsets + 1 ) * 3		1149653	1		*			
ANR	1149809	AdditiveExpression	size_offsets + 1		1149653	0		+			
ANR	1149810	Identifier	size_offsets		1149653	0					
ANR	1149811	PrimaryExpression	1		1149653	1					
ANR	1149812	PrimaryExpression	3		1149653	1					
ANR	1149813	ExpressionStatement	"offsets = ( int * ) safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"	1883:1:59222:59281	1149653	19	True				
ANR	1149814	AssignmentExpression	"offsets = ( int * ) safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"		1149653	0		=			
ANR	1149815	Identifier	offsets		1149653	0					
ANR	1149816	CastExpression	"( int * ) safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"		1149653	1					
ANR	1149817	CastTarget	int *		1149653	0					
ANR	1149818	CallExpression	"safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"		1149653	1					
ANR	1149819	Callee	safe_emalloc		1149653	0					
ANR	1149820	Identifier	safe_emalloc		1149653	0					
ANR	1149821	ArgumentList	size_offsets		1149653	1					
ANR	1149822	Argument	size_offsets		1149653	0					
ANR	1149823	Identifier	size_offsets		1149653	0					
ANR	1149824	Argument	sizeof ( int )		1149653	1					
ANR	1149825	SizeofExpression	sizeof ( int )		1149653	0					
ANR	1149826	Sizeof	sizeof		1149653	0					
ANR	1149827	SizeofOperand	int		1149653	1					
ANR	1149828	Argument	0		1149653	2					
ANR	1149829	PrimaryExpression	0		1149653	0					
ANR	1149830	ExpressionStatement	array_init ( return_value )	1886:1:59316:59340	1149653	20	True				
ANR	1149831	CallExpression	array_init ( return_value )		1149653	0					
ANR	1149832	Callee	array_init		1149653	0					
ANR	1149833	Identifier	array_init		1149653	0					
ANR	1149834	ArgumentList	return_value		1149653	1					
ANR	1149835	Argument	return_value		1149653	0					
ANR	1149836	Identifier	return_value		1149653	0					
ANR	1149837	ExpressionStatement	PCRE_G ( error_code ) = PHP_PCRE_NO_ERROR	1888:1:59344:59382	1149653	21	True				
ANR	1149838	AssignmentExpression	PCRE_G ( error_code ) = PHP_PCRE_NO_ERROR		1149653	0		=			
ANR	1149839	CallExpression	PCRE_G ( error_code )		1149653	0					
ANR	1149840	Callee	PCRE_G		1149653	0					
ANR	1149841	Identifier	PCRE_G		1149653	0					
ANR	1149842	ArgumentList	error_code		1149653	1					
ANR	1149843	Argument	error_code		1149653	0					
ANR	1149844	Identifier	error_code		1149653	0					
ANR	1149845	Identifier	PHP_PCRE_NO_ERROR		1149653	1					
ANR	1149846	ExpressionStatement	zend_hash_internal_pointer_reset ( Z_ARRVAL_P ( input ) )	1891:1:59420:59471	1149653	22	True				
ANR	1149847	CallExpression	zend_hash_internal_pointer_reset ( Z_ARRVAL_P ( input ) )		1149653	0					
ANR	1149848	Callee	zend_hash_internal_pointer_reset		1149653	0					
ANR	1149849	Identifier	zend_hash_internal_pointer_reset		1149653	0					
ANR	1149850	ArgumentList	Z_ARRVAL_P ( input )		1149653	1					
ANR	1149851	Argument	Z_ARRVAL_P ( input )		1149653	0					
ANR	1149852	CallExpression	Z_ARRVAL_P ( input )		1149653	0					
ANR	1149853	Callee	Z_ARRVAL_P		1149653	0					
ANR	1149854	Identifier	Z_ARRVAL_P		1149653	0					
ANR	1149855	ArgumentList	input		1149653	1					
ANR	1149856	Argument	input		1149653	0					
ANR	1149857	Identifier	input		1149653	0					
ANR	1149858	WhileStatement	"while ( zend_hash_get_current_data ( Z_ARRVAL_P ( input ) , ( void * * ) & entry ) == SUCCESS )"		1149653	23					
ANR	1149859	Condition	"zend_hash_get_current_data ( Z_ARRVAL_P ( input ) , ( void * * ) & entry ) == SUCCESS"	1892:8:59481:59553	1149653	0	True				
ANR	1149860	EqualityExpression	"zend_hash_get_current_data ( Z_ARRVAL_P ( input ) , ( void * * ) & entry ) == SUCCESS"		1149653	0		==			
ANR	1149861	CallExpression	"zend_hash_get_current_data ( Z_ARRVAL_P ( input ) , ( void * * ) & entry )"		1149653	0					
ANR	1149862	Callee	zend_hash_get_current_data		1149653	0					
ANR	1149863	Identifier	zend_hash_get_current_data		1149653	0					
ANR	1149864	ArgumentList	Z_ARRVAL_P ( input )		1149653	1					
ANR	1149865	Argument	Z_ARRVAL_P ( input )		1149653	0					
ANR	1149866	CallExpression	Z_ARRVAL_P ( input )		1149653	0					
ANR	1149867	Callee	Z_ARRVAL_P		1149653	0					
ANR	1149868	Identifier	Z_ARRVAL_P		1149653	0					
ANR	1149869	ArgumentList	input		1149653	1					
ANR	1149870	Argument	input		1149653	0					
ANR	1149871	Identifier	input		1149653	0					
ANR	1149872	Argument	( void * * ) & entry		1149653	1					
ANR	1149873	CastExpression	( void * * ) & entry		1149653	0					
ANR	1149874	CastTarget	void * *		1149653	0					
ANR	1149875	UnaryOperationExpression	& entry		1149653	1					
ANR	1149876	UnaryOperator	&		1149653	0					
ANR	1149877	Identifier	entry		1149653	1					
ANR	1149878	Identifier	SUCCESS		1149653	1					
ANR	1149879	CompoundStatement		44:2:1508:1530	1149653	1					
ANR	1149880	IdentifierDeclStatement	zval subject = * * entry ;	1893:2:59560:59582	1149653	0	True				
ANR	1149881	IdentifierDecl	subject = * * entry		1149653	0					
ANR	1149882	IdentifierDeclType	zval		1149653	0					
ANR	1149883	Identifier	subject		1149653	1					
ANR	1149884	AssignmentExpression	subject = * * entry		1149653	2		=			
ANR	1149885	Identifier	subject		1149653	0					
ANR	1149886	UnaryOperationExpression	* * entry		1149653	1					
ANR	1149887	UnaryOperator	*		1149653	0					
ANR	1149888	UnaryOperationExpression	* entry		1149653	1					
ANR	1149889	UnaryOperator	*		1149653	0					
ANR	1149890	Identifier	entry		1149653	1					
ANR	1149891	IfStatement	if ( Z_TYPE_PP ( entry ) != IS_STRING )		1149653	1					
ANR	1149892	Condition	Z_TYPE_PP ( entry ) != IS_STRING	1895:6:59591:59619	1149653	0	True				
ANR	1149893	EqualityExpression	Z_TYPE_PP ( entry ) != IS_STRING		1149653	0		!=			
ANR	1149894	CallExpression	Z_TYPE_PP ( entry )		1149653	0					
ANR	1149895	Callee	Z_TYPE_PP		1149653	0					
ANR	1149896	Identifier	Z_TYPE_PP		1149653	0					
ANR	1149897	ArgumentList	entry		1149653	1					
ANR	1149898	Argument	entry		1149653	0					
ANR	1149899	Identifier	entry		1149653	0					
ANR	1149900	Identifier	IS_STRING		1149653	1					
ANR	1149901	CompoundStatement		46:37:1570:1570	1149653	1					
ANR	1149902	ExpressionStatement	zval_copy_ctor ( & subject )	1896:3:59627:59651	1149653	0	True				
ANR	1149903	CallExpression	zval_copy_ctor ( & subject )		1149653	0					
ANR	1149904	Callee	zval_copy_ctor		1149653	0					
ANR	1149905	Identifier	zval_copy_ctor		1149653	0					
ANR	1149906	ArgumentList	& subject		1149653	1					
ANR	1149907	Argument	& subject		1149653	0					
ANR	1149908	UnaryOperationExpression	& subject		1149653	0					
ANR	1149909	UnaryOperator	&		1149653	0					
ANR	1149910	Identifier	subject		1149653	1					
ANR	1149911	ExpressionStatement	convert_to_string ( & subject )	1897:3:59656:59683	1149653	1	True				
ANR	1149912	CallExpression	convert_to_string ( & subject )		1149653	0					
ANR	1149913	Callee	convert_to_string		1149653	0					
ANR	1149914	Identifier	convert_to_string		1149653	0					
ANR	1149915	ArgumentList	& subject		1149653	1					
ANR	1149916	Argument	& subject		1149653	0					
ANR	1149917	UnaryOperationExpression	& subject		1149653	0					
ANR	1149918	UnaryOperator	&		1149653	0					
ANR	1149919	Identifier	subject		1149653	1					
ANR	1149920	ExpressionStatement	"count = pcre_exec ( pce -> re , extra , Z_STRVAL ( subject ) , Z_STRLEN ( subject ) , 0 , 0 , offsets , size_offsets )"	1901:2:59718:59834	1149653	2	True				
ANR	1149921	AssignmentExpression	"count = pcre_exec ( pce -> re , extra , Z_STRVAL ( subject ) , Z_STRLEN ( subject ) , 0 , 0 , offsets , size_offsets )"		1149653	0		=			
ANR	1149922	Identifier	count		1149653	0					
ANR	1149923	CallExpression	"pcre_exec ( pce -> re , extra , Z_STRVAL ( subject ) , Z_STRLEN ( subject ) , 0 , 0 , offsets , size_offsets )"		1149653	1					
ANR	1149924	Callee	pcre_exec		1149653	0					
ANR	1149925	Identifier	pcre_exec		1149653	0					
ANR	1149926	ArgumentList	pce -> re		1149653	1					
ANR	1149927	Argument	pce -> re		1149653	0					
ANR	1149928	PtrMemberAccess	pce -> re		1149653	0					
ANR	1149929	Identifier	pce		1149653	0					
ANR	1149930	Identifier	re		1149653	1					
ANR	1149931	Argument	extra		1149653	1					
ANR	1149932	Identifier	extra		1149653	0					
ANR	1149933	Argument	Z_STRVAL ( subject )		1149653	2					
ANR	1149934	CallExpression	Z_STRVAL ( subject )		1149653	0					
ANR	1149935	Callee	Z_STRVAL		1149653	0					
ANR	1149936	Identifier	Z_STRVAL		1149653	0					
ANR	1149937	ArgumentList	subject		1149653	1					
ANR	1149938	Argument	subject		1149653	0					
ANR	1149939	Identifier	subject		1149653	0					
ANR	1149940	Argument	Z_STRLEN ( subject )		1149653	3					
ANR	1149941	CallExpression	Z_STRLEN ( subject )		1149653	0					
ANR	1149942	Callee	Z_STRLEN		1149653	0					
ANR	1149943	Identifier	Z_STRLEN		1149653	0					
ANR	1149944	ArgumentList	subject		1149653	1					
ANR	1149945	Argument	subject		1149653	0					
ANR	1149946	Identifier	subject		1149653	0					
ANR	1149947	Argument	0		1149653	4					
ANR	1149948	PrimaryExpression	0		1149653	0					
ANR	1149949	Argument	0		1149653	5					
ANR	1149950	PrimaryExpression	0		1149653	0					
ANR	1149951	Argument	offsets		1149653	6					
ANR	1149952	Identifier	offsets		1149653	0					
ANR	1149953	Argument	size_offsets		1149653	7					
ANR	1149954	Identifier	size_offsets		1149653	0					
ANR	1149955	IfStatement	if ( count == 0 )		1149653	3					
ANR	1149956	Condition	count == 0	1906:6:59892:59901	1149653	0	True				
ANR	1149957	EqualityExpression	count == 0		1149653	0		==			
ANR	1149958	Identifier	count		1149653	0					
ANR	1149959	PrimaryExpression	0		1149653	1					
ANR	1149960	CompoundStatement		57:18:1852:1852	1149653	1					
ANR	1149961	Statement	php_error_docref	1907:3:59909:59924	1149653	0	True				
ANR	1149962	Statement	(	1907:19:59925:59925	1149653	1	True				
ANR	1149963	Statement	NULL	1907:20:59926:59929	1149653	2	True				
ANR	1149964	Statement	TSRMLS_CC	1907:25:59931:59939	1149653	3	True				
ANR	1149965	Statement	","	1907:34:59940:59940	1149653	4	True				
ANR	1149966	Statement	E_NOTICE	1907:36:59942:59949	1149653	5	True				
ANR	1149967	Statement	","	1907:44:59950:59950	1149653	6	True				
ANR	1149968	Statement	"""Matched, but too many substrings"""	1907:46:59952:59985	1149653	7	True				
ANR	1149969	Statement	)	1907:80:59986:59986	1149653	8	True				
ANR	1149970	ExpressionStatement		1907:81:59987:59987	1149653	9	True				
ANR	1149971	ExpressionStatement	count = size_offsets / 3	1908:3:59992:60014	1149653	10	True				
ANR	1149972	AssignmentExpression	count = size_offsets / 3		1149653	0		=			
ANR	1149973	Identifier	count		1149653	0					
ANR	1149974	MultiplicativeExpression	size_offsets / 3		1149653	1		/			
ANR	1149975	Identifier	size_offsets		1149653	0					
ANR	1149976	PrimaryExpression	3		1149653	1					
ANR	1149977	ElseStatement	else		1149653	0					
ANR	1149978	IfStatement	if ( count < 0 && count != PCRE_ERROR_NOMATCH )		1149653	0					
ANR	1149979	Condition	count < 0 && count != PCRE_ERROR_NOMATCH	1909:13:60029:60068	1149653	0	True				
ANR	1149980	AndExpression	count < 0 && count != PCRE_ERROR_NOMATCH		1149653	0		&&			
ANR	1149981	RelationalExpression	count < 0		1149653	0		<			
ANR	1149982	Identifier	count		1149653	0					
ANR	1149983	PrimaryExpression	0		1149653	1					
ANR	1149984	EqualityExpression	count != PCRE_ERROR_NOMATCH		1149653	1		!=			
ANR	1149985	Identifier	count		1149653	0					
ANR	1149986	Identifier	PCRE_ERROR_NOMATCH		1149653	1					
ANR	1149987	CompoundStatement		60:55:2019:2019	1149653	1					
ANR	1149988	Statement	pcre_handle_exec_error	1910:3:60076:60097	1149653	0	True				
ANR	1149989	Statement	(	1910:25:60098:60098	1149653	1	True				
ANR	1149990	Statement	count	1910:26:60099:60103	1149653	2	True				
ANR	1149991	Statement	TSRMLS_CC	1910:32:60105:60113	1149653	3	True				
ANR	1149992	Statement	)	1910:41:60114:60114	1149653	4	True				
ANR	1149993	ExpressionStatement		1910:42:60115:60115	1149653	5	True				
ANR	1149994	BreakStatement	break ;	1911:3:60120:60125	1149653	6	True				
ANR	1149995	IfStatement	if ( ( count > 0 && ! invert ) || ( count == PCRE_ERROR_NOMATCH && invert ) )		1149653	4					
ANR	1149996	Condition	( count > 0 && ! invert ) || ( count == PCRE_ERROR_NOMATCH && invert )	1915:6:60181:60245	1149653	0	True				
ANR	1149997	OrExpression	( count > 0 && ! invert ) || ( count == PCRE_ERROR_NOMATCH && invert )		1149653	0		||			
ANR	1149998	AndExpression	count > 0 && ! invert		1149653	0		&&			
ANR	1149999	RelationalExpression	count > 0		1149653	0		>			
ANR	1150000	Identifier	count		1149653	0					
ANR	1150001	PrimaryExpression	0		1149653	1					
ANR	1150002	UnaryOperationExpression	! invert		1149653	1					
ANR	1150003	UnaryOperator	!		1149653	0					
ANR	1150004	Identifier	invert		1149653	1					
ANR	1150005	AndExpression	count == PCRE_ERROR_NOMATCH && invert		1149653	1		&&			
ANR	1150006	EqualityExpression	count == PCRE_ERROR_NOMATCH		1149653	0		==			
ANR	1150007	Identifier	count		1149653	0					
ANR	1150008	Identifier	PCRE_ERROR_NOMATCH		1149653	1					
ANR	1150009	Identifier	invert		1149653	1					
ANR	1150010	CompoundStatement		66:73:2196:2196	1149653	1					
ANR	1150011	ExpressionStatement	Z_ADDREF_PP ( entry )	1917:3:60254:60272	1149653	0	True				
ANR	1150012	CallExpression	Z_ADDREF_PP ( entry )		1149653	0					
ANR	1150013	Callee	Z_ADDREF_PP		1149653	0					
ANR	1150014	Identifier	Z_ADDREF_PP		1149653	0					
ANR	1150015	ArgumentList	entry		1149653	1					
ANR	1150016	Argument	entry		1149653	0					
ANR	1150017	Identifier	entry		1149653	0					
ANR	1150018	SwitchStatement	"switch ( zend_hash_get_current_key_ex ( Z_ARRVAL_P ( input ) , & string_key , & string_key_len , & num_key , 0 , NULL ) )"		1149653	1					
ANR	1150019	Condition	"zend_hash_get_current_key_ex ( Z_ARRVAL_P ( input ) , & string_key , & string_key_len , & num_key , 0 , NULL )"	1920:11:60315:60410	1149653	0	True				
ANR	1150020	CallExpression	"zend_hash_get_current_key_ex ( Z_ARRVAL_P ( input ) , & string_key , & string_key_len , & num_key , 0 , NULL )"		1149653	0					
ANR	1150021	Callee	zend_hash_get_current_key_ex		1149653	0					
ANR	1150022	Identifier	zend_hash_get_current_key_ex		1149653	0					
ANR	1150023	ArgumentList	Z_ARRVAL_P ( input )		1149653	1					
ANR	1150024	Argument	Z_ARRVAL_P ( input )		1149653	0					
ANR	1150025	CallExpression	Z_ARRVAL_P ( input )		1149653	0					
ANR	1150026	Callee	Z_ARRVAL_P		1149653	0					
ANR	1150027	Identifier	Z_ARRVAL_P		1149653	0					
ANR	1150028	ArgumentList	input		1149653	1					
ANR	1150029	Argument	input		1149653	0					
ANR	1150030	Identifier	input		1149653	0					
ANR	1150031	Argument	& string_key		1149653	1					
ANR	1150032	UnaryOperationExpression	& string_key		1149653	0					
ANR	1150033	UnaryOperator	&		1149653	0					
ANR	1150034	Identifier	string_key		1149653	1					
ANR	1150035	Argument	& string_key_len		1149653	2					
ANR	1150036	UnaryOperationExpression	& string_key_len		1149653	0					
ANR	1150037	UnaryOperator	&		1149653	0					
ANR	1150038	Identifier	string_key_len		1149653	1					
ANR	1150039	Argument	& num_key		1149653	3					
ANR	1150040	UnaryOperationExpression	& num_key		1149653	0					
ANR	1150041	UnaryOperator	&		1149653	0					
ANR	1150042	Identifier	num_key		1149653	1					
ANR	1150043	Argument	0		1149653	4					
ANR	1150044	PrimaryExpression	0		1149653	0					
ANR	1150045	Argument	NULL		1149653	5					
ANR	1150046	Identifier	NULL		1149653	0					
ANR	1150047	CompoundStatement		72:3:2364:2364	1149653	1					
ANR	1150048	Label	case HASH_KEY_IS_STRING :	1922:4:60422:60445	1149653	0	True				
ANR	1150049	Identifier	HASH_KEY_IS_STRING		1149653	0					
ANR	1150050	ExpressionStatement	"zend_hash_update ( Z_ARRVAL_P ( return_value ) , string_key , string_key_len , entry , sizeof ( zval * ) , NULL )"	1923:5:60452:60561	1149653	1	True				
ANR	1150051	CallExpression	"zend_hash_update ( Z_ARRVAL_P ( return_value ) , string_key , string_key_len , entry , sizeof ( zval * ) , NULL )"		1149653	0					
ANR	1150052	Callee	zend_hash_update		1149653	0					
ANR	1150053	Identifier	zend_hash_update		1149653	0					
ANR	1150054	ArgumentList	Z_ARRVAL_P ( return_value )		1149653	1					
ANR	1150055	Argument	Z_ARRVAL_P ( return_value )		1149653	0					
ANR	1150056	CallExpression	Z_ARRVAL_P ( return_value )		1149653	0					
ANR	1150057	Callee	Z_ARRVAL_P		1149653	0					
ANR	1150058	Identifier	Z_ARRVAL_P		1149653	0					
ANR	1150059	ArgumentList	return_value		1149653	1					
ANR	1150060	Argument	return_value		1149653	0					
ANR	1150061	Identifier	return_value		1149653	0					
ANR	1150062	Argument	string_key		1149653	1					
ANR	1150063	Identifier	string_key		1149653	0					
ANR	1150064	Argument	string_key_len		1149653	2					
ANR	1150065	Identifier	string_key_len		1149653	0					
ANR	1150066	Argument	entry		1149653	3					
ANR	1150067	Identifier	entry		1149653	0					
ANR	1150068	Argument	sizeof ( zval * )		1149653	4					
ANR	1150069	SizeofExpression	sizeof ( zval * )		1149653	0					
ANR	1150070	Sizeof	sizeof		1149653	0					
ANR	1150071	SizeofOperand	zval *		1149653	1					
ANR	1150072	Argument	NULL		1149653	5					
ANR	1150073	Identifier	NULL		1149653	0					
ANR	1150074	BreakStatement	break ;	1925:5:60568:60573	1149653	2	True				
ANR	1150075	Label	case HASH_KEY_IS_LONG :	1927:4:60580:60601	1149653	3	True				
ANR	1150076	Identifier	HASH_KEY_IS_LONG		1149653	0					
ANR	1150077	ExpressionStatement	"zend_hash_index_update ( Z_ARRVAL_P ( return_value ) , num_key , entry , sizeof ( zval * ) , NULL )"	1928:5:60608:60707	1149653	4	True				
ANR	1150078	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( return_value ) , num_key , entry , sizeof ( zval * ) , NULL )"		1149653	0					
ANR	1150079	Callee	zend_hash_index_update		1149653	0					
ANR	1150080	Identifier	zend_hash_index_update		1149653	0					
ANR	1150081	ArgumentList	Z_ARRVAL_P ( return_value )		1149653	1					
ANR	1150082	Argument	Z_ARRVAL_P ( return_value )		1149653	0					
ANR	1150083	CallExpression	Z_ARRVAL_P ( return_value )		1149653	0					
ANR	1150084	Callee	Z_ARRVAL_P		1149653	0					
ANR	1150085	Identifier	Z_ARRVAL_P		1149653	0					
ANR	1150086	ArgumentList	return_value		1149653	1					
ANR	1150087	Argument	return_value		1149653	0					
ANR	1150088	Identifier	return_value		1149653	0					
ANR	1150089	Argument	num_key		1149653	1					
ANR	1150090	Identifier	num_key		1149653	0					
ANR	1150091	Argument	entry		1149653	2					
ANR	1150092	Identifier	entry		1149653	0					
ANR	1150093	Argument	sizeof ( zval * )		1149653	3					
ANR	1150094	SizeofExpression	sizeof ( zval * )		1149653	0					
ANR	1150095	Sizeof	sizeof		1149653	0					
ANR	1150096	SizeofOperand	zval *		1149653	1					
ANR	1150097	Argument	NULL		1149653	4					
ANR	1150098	Identifier	NULL		1149653	0					
ANR	1150099	BreakStatement	break ;	1930:5:60714:60719	1149653	5	True				
ANR	1150100	IfStatement	if ( Z_TYPE_PP ( entry ) != IS_STRING )		1149653	5					
ANR	1150101	Condition	Z_TYPE_PP ( entry ) != IS_STRING	1934:6:60737:60765	1149653	0	True				
ANR	1150102	EqualityExpression	Z_TYPE_PP ( entry ) != IS_STRING		1149653	0		!=			
ANR	1150103	CallExpression	Z_TYPE_PP ( entry )		1149653	0					
ANR	1150104	Callee	Z_TYPE_PP		1149653	0					
ANR	1150105	Identifier	Z_TYPE_PP		1149653	0					
ANR	1150106	ArgumentList	entry		1149653	1					
ANR	1150107	Argument	entry		1149653	0					
ANR	1150108	Identifier	entry		1149653	0					
ANR	1150109	Identifier	IS_STRING		1149653	1					
ANR	1150110	CompoundStatement		85:37:2716:2716	1149653	1					
ANR	1150111	ExpressionStatement	zval_dtor ( & subject )	1935:3:60773:60792	1149653	0	True				
ANR	1150112	CallExpression	zval_dtor ( & subject )		1149653	0					
ANR	1150113	Callee	zval_dtor		1149653	0					
ANR	1150114	Identifier	zval_dtor		1149653	0					
ANR	1150115	ArgumentList	& subject		1149653	1					
ANR	1150116	Argument	& subject		1149653	0					
ANR	1150117	UnaryOperationExpression	& subject		1149653	0					
ANR	1150118	UnaryOperator	&		1149653	0					
ANR	1150119	Identifier	subject		1149653	1					
ANR	1150120	ExpressionStatement	zend_hash_move_forward ( Z_ARRVAL_P ( input ) )	1938:2:60801:60842	1149653	6	True				
ANR	1150121	CallExpression	zend_hash_move_forward ( Z_ARRVAL_P ( input ) )		1149653	0					
ANR	1150122	Callee	zend_hash_move_forward		1149653	0					
ANR	1150123	Identifier	zend_hash_move_forward		1149653	0					
ANR	1150124	ArgumentList	Z_ARRVAL_P ( input )		1149653	1					
ANR	1150125	Argument	Z_ARRVAL_P ( input )		1149653	0					
ANR	1150126	CallExpression	Z_ARRVAL_P ( input )		1149653	0					
ANR	1150127	Callee	Z_ARRVAL_P		1149653	0					
ANR	1150128	Identifier	Z_ARRVAL_P		1149653	0					
ANR	1150129	ArgumentList	input		1149653	1					
ANR	1150130	Argument	input		1149653	0					
ANR	1150131	Identifier	input		1149653	0					
ANR	1150132	ExpressionStatement	zend_hash_internal_pointer_reset ( Z_ARRVAL_P ( input ) )	1940:1:60848:60899	1149653	24	True				
ANR	1150133	CallExpression	zend_hash_internal_pointer_reset ( Z_ARRVAL_P ( input ) )		1149653	0					
ANR	1150134	Callee	zend_hash_internal_pointer_reset		1149653	0					
ANR	1150135	Identifier	zend_hash_internal_pointer_reset		1149653	0					
ANR	1150136	ArgumentList	Z_ARRVAL_P ( input )		1149653	1					
ANR	1150137	Argument	Z_ARRVAL_P ( input )		1149653	0					
ANR	1150138	CallExpression	Z_ARRVAL_P ( input )		1149653	0					
ANR	1150139	Callee	Z_ARRVAL_P		1149653	0					
ANR	1150140	Identifier	Z_ARRVAL_P		1149653	0					
ANR	1150141	ArgumentList	input		1149653	1					
ANR	1150142	Argument	input		1149653	0					
ANR	1150143	Identifier	input		1149653	0					
ANR	1150144	ExpressionStatement	efree ( offsets )	1942:1:60918:60932	1149653	25	True				
ANR	1150145	CallExpression	efree ( offsets )		1149653	0					
ANR	1150146	Callee	efree		1149653	0					
ANR	1150147	Identifier	efree		1149653	0					
ANR	1150148	ArgumentList	offsets		1149653	1					
ANR	1150149	Argument	offsets		1149653	0					
ANR	1150150	Identifier	offsets		1149653	0					
ANR	1150151	ReturnType	PHPAPI void		1149653	1					
ANR	1150152	Identifier	php_pcre_grep_impl		1149653	2					
ANR	1150153	ParameterList	"pcre_cache_entry * pce , zval * input , zval * return_value , long flags TSRMLS_DC"		1149653	3					
ANR	1150154	Parameter	pcre_cache_entry * pce	1849:32:57963:57983	1149653	0	True				
ANR	1150155	ParameterType	pcre_cache_entry *		1149653	0					
ANR	1150156	Identifier	pce		1149653	1					
ANR	1150157	Parameter	zval * input	1849:55:57986:57996	1149653	1	True				
ANR	1150158	ParameterType	zval *		1149653	0					
ANR	1150159	Identifier	input		1149653	1					
ANR	1150160	Parameter	zval * return_value	1849:68:57999:58016	1149653	2	True				
ANR	1150161	ParameterType	zval *		1149653	0					
ANR	1150162	Identifier	return_value		1149653	1					
ANR	1150163	Parameter	long flags TSRMLS_DC	1849:88:58019:58038	1149653	3	True				
ANR	1150164	ParameterType	long flags		1149653	0					
ANR	1150165	Identifier	TSRMLS_DC		1149653	1					
ANR	1150166	CFGEntryNode	ENTRY		1149653		True				
ANR	1150167	CFGExitNode	EXIT		1149653		True				
ANR	1150168	Symbol	pce -> extra		1149653						
ANR	1150169	Symbol	* * entry		1149653						
ANR	1150170	Symbol	pcre_exec		1149653						
ANR	1150171	Symbol	subject		1149653						
ANR	1150172	Symbol	TSRMLS_DC		1149653						
ANR	1150173	Symbol	extra -> flags		1149653						
ANR	1150174	Symbol	zend_hash_get_current_data		1149653						
ANR	1150175	Symbol	& size_offsets		1149653						
ANR	1150176	Symbol	IS_STRING		1149653						
ANR	1150177	Symbol	NULL		1149653						
ANR	1150178	Symbol	& num_key		1149653						
ANR	1150179	Symbol	invert		1149653						
ANR	1150180	Symbol	count		1149653						
ANR	1150181	Symbol	zend_hash_get_current_key_ex		1149653						
ANR	1150182	Symbol	~PCRE_EXTRA_MARK		1149653						
ANR	1150183	Symbol	input		1149653						
ANR	1150184	Symbol	entry		1149653						
ANR	1150185	Symbol	rc		1149653						
ANR	1150186	Symbol	PCRE_ERROR_NOMATCH		1149653						
ANR	1150187	Symbol	& extra_data		1149653						
ANR	1150188	Symbol	* extra		1149653						
ANR	1150189	Symbol	pce -> re		1149653						
ANR	1150190	Symbol	error_code		1149653						
ANR	1150191	Symbol	extra_data . flags		1149653						
ANR	1150192	Symbol	* pce		1149653						
ANR	1150193	Symbol	return_value		1149653						
ANR	1150194	Symbol	backtrack_limit		1149653						
ANR	1150195	Symbol	flags		1149653						
ANR	1150196	Symbol	extra -> match_limit		1149653						
ANR	1150197	Symbol	& subject		1149653						
ANR	1150198	Symbol	Z_STRLEN		1149653						
ANR	1150199	Symbol	extra -> match_limit_recursion		1149653						
ANR	1150200	Symbol	& string_key_len		1149653						
ANR	1150201	Symbol	Z_TYPE_PP		1149653						
ANR	1150202	Symbol	pce		1149653						
ANR	1150203	Symbol	recursion_limit		1149653						
ANR	1150204	Symbol	extra		1149653						
ANR	1150205	Symbol	Z_STRVAL		1149653						
ANR	1150206	Symbol	PCRE_INFO_CAPTURECOUNT		1149653						
ANR	1150207	Symbol	Z_ARRVAL_P		1149653						
ANR	1150208	Symbol	size_offsets		1149653						
ANR	1150209	Symbol	& string_key		1149653						
ANR	1150210	Symbol	* entry		1149653						
ANR	1150211	Symbol	SUCCESS		1149653						
ANR	1150212	Symbol	PREG_GREP_INVERT		1149653						
ANR	1150213	Symbol	num_key		1149653						
ANR	1150214	Symbol	PHP_PCRE_NO_ERROR		1149653						
ANR	1150215	Symbol	pcre_fullinfo		1149653						
ANR	1150216	Symbol	PCRE_EXTRA_MATCH_LIMIT_RECURSION		1149653						
ANR	1150217	Symbol	string_key		1149653						
ANR	1150218	Symbol	& entry		1149653						
ANR	1150219	Symbol	PCRE_G		1149653						
ANR	1150220	Symbol	extra_data		1149653						
ANR	1150221	Symbol	offsets		1149653						
ANR	1150222	Symbol	PCRE_EXTRA_MATCH_LIMIT		1149653						
ANR	1150223	Symbol	string_key_len		1149653						
ANR	1150224	Symbol	safe_emalloc		1149653						
ANR	1150225	DeclStmt									
ANR	1150226	Decl							const zend_function_entry	const zend_function_entry [ ]	pcre_functions
ANR	1150227	DeclStmt									
ANR	1150228	Decl							zend_module_entry	zend_module_entry	pcre_module_entry
