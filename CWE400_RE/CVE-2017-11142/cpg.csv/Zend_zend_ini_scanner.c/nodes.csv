command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	85279	File	data/converged/CVE-2017-11142_php-src/Zend_zend_ini_scanner.c								
ANR	85280	DeclStmt									
ANR	85281	Decl							ZEND_API ts_rsrc_id	ZEND_API ts_rsrc_id	ini_scanner_globals_id
ANR	85282	DeclStmt									
ANR	85283	Decl							ZEND_API zend_ini_scanner_globals	ZEND_API zend_ini_scanner_globals	ini_scanner_globals
ANR	85284	Function	convert_to_number	152:0:6260:6686							
ANR	85285	FunctionDef	"convert_to_number (zval * retval , const char * str , const int str_len)"		85284	0					
ANR	85286	CompoundStatement		153:0:6346:6686	85284	0					
ANR	85287	IdentifierDeclStatement	zend_uchar type ;	154:1:6349:6364	85284	0	True				
ANR	85288	IdentifierDecl	type		85284	0					
ANR	85289	IdentifierDeclType	zend_uchar		85284	0					
ANR	85290	Identifier	type		85284	1					
ANR	85291	IdentifierDeclStatement	int overflow ;	155:1:6367:6379	85284	1	True				
ANR	85292	IdentifierDecl	overflow		85284	0					
ANR	85293	IdentifierDeclType	int		85284	0					
ANR	85294	Identifier	overflow		85284	1					
ANR	85295	IdentifierDeclStatement	long lval ;	156:1:6382:6391	85284	2	True				
ANR	85296	IdentifierDecl	lval		85284	0					
ANR	85297	IdentifierDeclType	long		85284	0					
ANR	85298	Identifier	lval		85284	1					
ANR	85299	IdentifierDeclStatement	double dval ;	157:1:6394:6405	85284	3	True				
ANR	85300	IdentifierDecl	dval		85284	0					
ANR	85301	IdentifierDeclType	double		85284	0					
ANR	85302	Identifier	dval		85284	1					
ANR	85303	IfStatement	"if ( ( type = is_numeric_string_ex ( str , str_len , & lval , & dval , 0 , & overflow ) ) != 0 )"		85284	4					
ANR	85304	Condition	"( type = is_numeric_string_ex ( str , str_len , & lval , & dval , 0 , & overflow ) ) != 0"	159:5:6413:6488	85284	0	True				
ANR	85305	EqualityExpression	"( type = is_numeric_string_ex ( str , str_len , & lval , & dval , 0 , & overflow ) ) != 0"		85284	0		!=			
ANR	85306	AssignmentExpression	"type = is_numeric_string_ex ( str , str_len , & lval , & dval , 0 , & overflow )"		85284	0		=			
ANR	85307	Identifier	type		85284	0					
ANR	85308	CallExpression	"is_numeric_string_ex ( str , str_len , & lval , & dval , 0 , & overflow )"		85284	1					
ANR	85309	Callee	is_numeric_string_ex		85284	0					
ANR	85310	Identifier	is_numeric_string_ex		85284	0					
ANR	85311	ArgumentList	str		85284	1					
ANR	85312	Argument	str		85284	0					
ANR	85313	Identifier	str		85284	0					
ANR	85314	Argument	str_len		85284	1					
ANR	85315	Identifier	str_len		85284	0					
ANR	85316	Argument	& lval		85284	2					
ANR	85317	UnaryOperationExpression	& lval		85284	0					
ANR	85318	UnaryOperator	&		85284	0					
ANR	85319	Identifier	lval		85284	1					
ANR	85320	Argument	& dval		85284	3					
ANR	85321	UnaryOperationExpression	& dval		85284	0					
ANR	85322	UnaryOperator	&		85284	0					
ANR	85323	Identifier	dval		85284	1					
ANR	85324	Argument	0		85284	4					
ANR	85325	PrimaryExpression	0		85284	0					
ANR	85326	Argument	& overflow		85284	5					
ANR	85327	UnaryOperationExpression	& overflow		85284	0					
ANR	85328	UnaryOperator	&		85284	0					
ANR	85329	Identifier	overflow		85284	1					
ANR	85330	PrimaryExpression	0		85284	1					
ANR	85331	CompoundStatement		7:83:144:144	85284	1					
ANR	85332	IfStatement	if ( type == IS_LONG )		85284	0					
ANR	85333	Condition	type == IS_LONG	160:6:6499:6513	85284	0	True				
ANR	85334	EqualityExpression	type == IS_LONG		85284	0		==			
ANR	85335	Identifier	type		85284	0					
ANR	85336	Identifier	IS_LONG		85284	1					
ANR	85337	CompoundStatement		8:23:169:169	85284	1					
ANR	85338	ExpressionStatement	"ZVAL_LONG ( retval , lval )"	161:3:6521:6544	85284	0	True				
ANR	85339	CallExpression	"ZVAL_LONG ( retval , lval )"		85284	0					
ANR	85340	Callee	ZVAL_LONG		85284	0					
ANR	85341	Identifier	ZVAL_LONG		85284	0					
ANR	85342	ArgumentList	retval		85284	1					
ANR	85343	Argument	retval		85284	0					
ANR	85344	Identifier	retval		85284	0					
ANR	85345	Argument	lval		85284	1					
ANR	85346	Identifier	lval		85284	0					
ANR	85347	ReturnStatement	return SUCCESS ;	162:3:6549:6563	85284	1	True				
ANR	85348	Identifier	SUCCESS		85284	0					
ANR	85349	ElseStatement	else		85284	0					
ANR	85350	IfStatement	if ( type == IS_DOUBLE && ! overflow )		85284	0					
ANR	85351	Condition	type == IS_DOUBLE && ! overflow	163:13:6578:6607	85284	0	True				
ANR	85352	AndExpression	type == IS_DOUBLE && ! overflow		85284	0		&&			
ANR	85353	EqualityExpression	type == IS_DOUBLE		85284	0		==			
ANR	85354	Identifier	type		85284	0					
ANR	85355	Identifier	IS_DOUBLE		85284	1					
ANR	85356	UnaryOperationExpression	! overflow		85284	1					
ANR	85357	UnaryOperator	!		85284	0					
ANR	85358	Identifier	overflow		85284	1					
ANR	85359	CompoundStatement		11:45:263:263	85284	1					
ANR	85360	ExpressionStatement	"ZVAL_DOUBLE ( retval , dval )"	164:3:6615:6640	85284	0	True				
ANR	85361	CallExpression	"ZVAL_DOUBLE ( retval , dval )"		85284	0					
ANR	85362	Callee	ZVAL_DOUBLE		85284	0					
ANR	85363	Identifier	ZVAL_DOUBLE		85284	0					
ANR	85364	ArgumentList	retval		85284	1					
ANR	85365	Argument	retval		85284	0					
ANR	85366	Identifier	retval		85284	0					
ANR	85367	Argument	dval		85284	1					
ANR	85368	Identifier	dval		85284	0					
ANR	85369	ReturnStatement	return SUCCESS ;	165:3:6645:6659	85284	1	True				
ANR	85370	Identifier	SUCCESS		85284	0					
ANR	85371	ReturnStatement	return FAILURE ;	169:1:6670:6684	85284	5	True				
ANR	85372	Identifier	FAILURE		85284	0					
ANR	85373	ReturnType	static inline int		85284	1					
ANR	85374	Identifier	convert_to_number		85284	2					
ANR	85375	ParameterList	"zval * retval , const char * str , const int str_len"		85284	3					
ANR	85376	Parameter	zval * retval	152:36:6296:6307	85284	0	True				
ANR	85377	ParameterType	zval *		85284	0					
ANR	85378	Identifier	retval		85284	1					
ANR	85379	Parameter	const char * str	152:50:6310:6324	85284	1	True				
ANR	85380	ParameterType	const char *		85284	0					
ANR	85381	Identifier	str		85284	1					
ANR	85382	Parameter	const int str_len	152:67:6327:6343	85284	2	True				
ANR	85383	ParameterType	const int		85284	0					
ANR	85384	Identifier	str_len		85284	1					
ANR	85385	CFGEntryNode	ENTRY		85284		True				
ANR	85386	CFGExitNode	EXIT		85284		True				
ANR	85387	Symbol	& lval		85284						
ANR	85388	Symbol	SUCCESS		85284						
ANR	85389	Symbol	lval		85284						
ANR	85390	Symbol	type		85284						
ANR	85391	Symbol	FAILURE		85284						
ANR	85392	Symbol	retval		85284						
ANR	85393	Symbol	str		85284						
ANR	85394	Symbol	dval		85284						
ANR	85395	Symbol	overflow		85284						
ANR	85396	Symbol	str_len		85284						
ANR	85397	Symbol	IS_LONG		85284						
ANR	85398	Symbol	IS_DOUBLE		85284						
ANR	85399	Symbol	& overflow		85284						
ANR	85400	Symbol	is_numeric_string_ex		85284						
ANR	85401	Symbol	& dval		85284						
ANR	85402	Function	zend_ini_copy_typed_value	172:0:6689:7123							
ANR	85403	FunctionDef	"zend_ini_copy_typed_value (zval * retval , const int type , const char * str , int len)"		85402	0					
ANR	85404	CompoundStatement		173:0:6783:7123	85402	0					
ANR	85405	SwitchStatement	switch ( type )		85402	0					
ANR	85406	Condition	type	174:9:6794:6797	85402	0	True				
ANR	85407	Identifier	type		85402	0					
ANR	85408	CompoundStatement		2:15:16:16	85402	1					
ANR	85409	Label	case BOOL_FALSE :	175:2:6804:6819	85402	0	True				
ANR	85410	Identifier	BOOL_FALSE		85402	0					
ANR	85411	Label	case BOOL_TRUE :	176:2:6823:6837	85402	1	True				
ANR	85412	Identifier	BOOL_TRUE		85402	0					
ANR	85413	ExpressionStatement	"ZVAL_BOOL ( retval , type == BOOL_TRUE )"	177:3:6842:6878	85402	2	True				
ANR	85414	CallExpression	"ZVAL_BOOL ( retval , type == BOOL_TRUE )"		85402	0					
ANR	85415	Callee	ZVAL_BOOL		85402	0					
ANR	85416	Identifier	ZVAL_BOOL		85402	0					
ANR	85417	ArgumentList	retval		85402	1					
ANR	85418	Argument	retval		85402	0					
ANR	85419	Identifier	retval		85402	0					
ANR	85420	Argument	type == BOOL_TRUE		85402	1					
ANR	85421	EqualityExpression	type == BOOL_TRUE		85402	0		==			
ANR	85422	Identifier	type		85402	0					
ANR	85423	Identifier	BOOL_TRUE		85402	1					
ANR	85424	BreakStatement	break ;	178:3:6883:6888	85402	3	True				
ANR	85425	Label	case NULL_NULL :	180:2:6893:6907	85402	4	True				
ANR	85426	Identifier	NULL_NULL		85402	0					
ANR	85427	ExpressionStatement	ZVAL_NULL ( retval )	181:3:6912:6929	85402	5	True				
ANR	85428	CallExpression	ZVAL_NULL ( retval )		85402	0					
ANR	85429	Callee	ZVAL_NULL		85402	0					
ANR	85430	Identifier	ZVAL_NULL		85402	0					
ANR	85431	ArgumentList	retval		85402	1					
ANR	85432	Argument	retval		85402	0					
ANR	85433	Identifier	retval		85402	0					
ANR	85434	BreakStatement	break ;	182:3:6934:6939	85402	6	True				
ANR	85435	Label	case TC_NUMBER :	184:2:6944:6958	85402	7	True				
ANR	85436	Identifier	TC_NUMBER		85402	0					
ANR	85437	IfStatement	"if ( convert_to_number ( retval , str , len ) == SUCCESS )"		85402	8					
ANR	85438	Condition	"convert_to_number ( retval , str , len ) == SUCCESS"	185:7:6967:7012	85402	0	True				
ANR	85439	EqualityExpression	"convert_to_number ( retval , str , len ) == SUCCESS"		85402	0		==			
ANR	85440	CallExpression	"convert_to_number ( retval , str , len )"		85402	0					
ANR	85441	Callee	convert_to_number		85402	0					
ANR	85442	Identifier	convert_to_number		85402	0					
ANR	85443	ArgumentList	retval		85402	1					
ANR	85444	Argument	retval		85402	0					
ANR	85445	Identifier	retval		85402	0					
ANR	85446	Argument	str		85402	1					
ANR	85447	Identifier	str		85402	0					
ANR	85448	Argument	len		85402	2					
ANR	85449	Identifier	len		85402	0					
ANR	85450	Identifier	SUCCESS		85402	1					
ANR	85451	CompoundStatement		13:55:231:231	85402	1					
ANR	85452	BreakStatement	break ;	186:4:7021:7026	85402	0	True				
ANR	85453	Label	default :	189:2:7069:7076	85402	9	True				
ANR	85454	Identifier	default		85402	0					
ANR	85455	ExpressionStatement	"zend_ini_copy_value ( retval , str , len )"	190:3:7081:7118	85402	10	True				
ANR	85456	CallExpression	"zend_ini_copy_value ( retval , str , len )"		85402	0					
ANR	85457	Callee	zend_ini_copy_value		85402	0					
ANR	85458	Identifier	zend_ini_copy_value		85402	0					
ANR	85459	ArgumentList	retval		85402	1					
ANR	85460	Argument	retval		85402	0					
ANR	85461	Identifier	retval		85402	0					
ANR	85462	Argument	str		85402	1					
ANR	85463	Identifier	str		85402	0					
ANR	85464	Argument	len		85402	2					
ANR	85465	Identifier	len		85402	0					
ANR	85466	ReturnType	static void		85402	1					
ANR	85467	Identifier	zend_ini_copy_typed_value		85402	2					
ANR	85468	ParameterList	"zval * retval , const int type , const char * str , int len"		85402	3					
ANR	85469	Parameter	zval * retval	172:38:6727:6738	85402	0	True				
ANR	85470	ParameterType	zval *		85402	0					
ANR	85471	Identifier	retval		85402	1					
ANR	85472	Parameter	const int type	172:52:6741:6754	85402	1	True				
ANR	85473	ParameterType	const int		85402	0					
ANR	85474	Identifier	type		85402	1					
ANR	85475	Parameter	const char * str	172:68:6757:6771	85402	2	True				
ANR	85476	ParameterType	const char *		85402	0					
ANR	85477	Identifier	str		85402	1					
ANR	85478	Parameter	int len	172:85:6774:6780	85402	3	True				
ANR	85479	ParameterType	int		85402	0					
ANR	85480	Identifier	len		85402	1					
ANR	85481	CFGEntryNode	ENTRY		85402		True				
ANR	85482	CFGExitNode	EXIT		85402		True				
ANR	85483	Symbol	str		85402						
ANR	85484	Symbol	BOOL_TRUE		85402						
ANR	85485	Symbol	SUCCESS		85402						
ANR	85486	Symbol	len		85402						
ANR	85487	Symbol	type		85402						
ANR	85488	Symbol	retval		85402						
ANR	85489	Symbol	convert_to_number		85402						
ANR	85490	Function	_yy_push_state	194:0:7126:7287							
ANR	85491	FunctionDef	_yy_push_state (int new_state TSRMLS_DC)		85490	0					
ANR	85492	CompoundStatement		195:0:7178:7287	85490	0					
ANR	85493	ExpressionStatement	"zend_stack_push ( & SCNG ( state_stack ) , ( void * ) & YYGETCONDITION ( ) , sizeof ( int ) )"	196:1:7181:7257	85490	0	True				
ANR	85494	CallExpression	"zend_stack_push ( & SCNG ( state_stack ) , ( void * ) & YYGETCONDITION ( ) , sizeof ( int ) )"		85490	0					
ANR	85495	Callee	zend_stack_push		85490	0					
ANR	85496	Identifier	zend_stack_push		85490	0					
ANR	85497	ArgumentList	& SCNG ( state_stack )		85490	1					
ANR	85498	Argument	& SCNG ( state_stack )		85490	0					
ANR	85499	UnaryOperationExpression	& SCNG ( state_stack )		85490	0					
ANR	85500	UnaryOperator	&		85490	0					
ANR	85501	CallExpression	SCNG ( state_stack )		85490	1					
ANR	85502	Callee	SCNG		85490	0					
ANR	85503	Identifier	SCNG		85490	0					
ANR	85504	ArgumentList	state_stack		85490	1					
ANR	85505	Argument	state_stack		85490	0					
ANR	85506	Identifier	state_stack		85490	0					
ANR	85507	Argument	( void * ) & YYGETCONDITION ( )		85490	1					
ANR	85508	CastExpression	( void * ) & YYGETCONDITION ( )		85490	0					
ANR	85509	CastTarget	void *		85490	0					
ANR	85510	UnaryOperationExpression	& YYGETCONDITION ( )		85490	1					
ANR	85511	UnaryOperator	&		85490	0					
ANR	85512	CallExpression	YYGETCONDITION ( )		85490	1					
ANR	85513	Callee	YYGETCONDITION		85490	0					
ANR	85514	Identifier	YYGETCONDITION		85490	0					
ANR	85515	ArgumentList			85490	1					
ANR	85516	Argument	sizeof ( int )		85490	2					
ANR	85517	SizeofExpression	sizeof ( int )		85490	0					
ANR	85518	Sizeof	sizeof		85490	0					
ANR	85519	SizeofOperand	int		85490	1					
ANR	85520	ExpressionStatement	YYSETCONDITION ( new_state )	197:1:7260:7285	85490	1	True				
ANR	85521	CallExpression	YYSETCONDITION ( new_state )		85490	0					
ANR	85522	Callee	YYSETCONDITION		85490	0					
ANR	85523	Identifier	YYSETCONDITION		85490	0					
ANR	85524	ArgumentList	new_state		85490	1					
ANR	85525	Argument	new_state		85490	0					
ANR	85526	Identifier	new_state		85490	0					
ANR	85527	ReturnType	static void		85490	1					
ANR	85528	Identifier	_yy_push_state		85490	2					
ANR	85529	ParameterList	int new_state TSRMLS_DC		85490	3					
ANR	85530	Parameter	int new_state TSRMLS_DC	194:27:7153:7175	85490	0	True				
ANR	85531	ParameterType	int new_state		85490	0					
ANR	85532	Identifier	TSRMLS_DC		85490	1					
ANR	85533	CFGEntryNode	ENTRY		85490		True				
ANR	85534	CFGExitNode	EXIT		85490		True				
ANR	85535	Symbol	& SCNG		85490						
ANR	85536	Symbol	new_state		85490						
ANR	85537	Symbol	state_stack		85490						
ANR	85538	Symbol	TSRMLS_DC		85490						
ANR	85539	Symbol	& YYGETCONDITION		85490						
ANR	85540	DeclStmt									
ANR	85541	Decl							int	int *	stack_state
ANR	85542	Function	yy_scan_buffer	210:0:7557:7708							
ANR	85543	FunctionDef	"yy_scan_buffer (char * str , unsigned int len TSRMLS_DC)"		85542	0					
ANR	85544	CompoundStatement		211:0:7623:7708	85542	0					
ANR	85545	ExpressionStatement	YYCURSOR = ( YYCTYPE * ) str	212:1:7626:7650	85542	0	True				
ANR	85546	AssignmentExpression	YYCURSOR = ( YYCTYPE * ) str		85542	0		=			
ANR	85547	Identifier	YYCURSOR		85542	0					
ANR	85548	CastExpression	( YYCTYPE * ) str		85542	1					
ANR	85549	CastTarget	YYCTYPE *		85542	0					
ANR	85550	Identifier	str		85542	1					
ANR	85551	ExpressionStatement	SCNG ( yy_start ) = YYCURSOR	213:1:7653:7678	85542	1	True				
ANR	85552	AssignmentExpression	SCNG ( yy_start ) = YYCURSOR		85542	0		=			
ANR	85553	CallExpression	SCNG ( yy_start )		85542	0					
ANR	85554	Callee	SCNG		85542	0					
ANR	85555	Identifier	SCNG		85542	0					
ANR	85556	ArgumentList	yy_start		85542	1					
ANR	85557	Argument	yy_start		85542	0					
ANR	85558	Identifier	yy_start		85542	0					
ANR	85559	Identifier	YYCURSOR		85542	1					
ANR	85560	ExpressionStatement	YYLIMIT = YYCURSOR + len	214:1:7681:7706	85542	2	True				
ANR	85561	AssignmentExpression	YYLIMIT = YYCURSOR + len		85542	0		=			
ANR	85562	Identifier	YYLIMIT		85542	0					
ANR	85563	AdditiveExpression	YYCURSOR + len		85542	1		+			
ANR	85564	Identifier	YYCURSOR		85542	0					
ANR	85565	Identifier	len		85542	1					
ANR	85566	ReturnType	static void		85542	1					
ANR	85567	Identifier	yy_scan_buffer		85542	2					
ANR	85568	ParameterList	"char * str , unsigned int len TSRMLS_DC"		85542	3					
ANR	85569	Parameter	char * str	210:27:7584:7592	85542	0	True				
ANR	85570	ParameterType	char *		85542	0					
ANR	85571	Identifier	str		85542	1					
ANR	85572	Parameter	unsigned int len TSRMLS_DC	210:38:7595:7620	85542	1	True				
ANR	85573	ParameterType	unsigned int len		85542	0					
ANR	85574	Identifier	TSRMLS_DC		85542	1					
ANR	85575	CFGEntryNode	ENTRY		85542		True				
ANR	85576	CFGExitNode	EXIT		85542		True				
ANR	85577	Symbol	str		85542						
ANR	85578	Symbol	YYLIMIT		85542						
ANR	85579	Symbol	yy_start		85542						
ANR	85580	Symbol	len		85542						
ANR	85581	Symbol	YYCURSOR		85542						
ANR	85582	Symbol	TSRMLS_DC		85542						
ANR	85583	Symbol	SCNG		85542						
ANR	85584	Function	zend_ini_open_file_for_scanning	275:0:8848:9230							
ANR	85585	FunctionDef	"zend_ini_open_file_for_scanning (zend_file_handle * fh , int scanner_mode TSRMLS_DC)"		85584	0					
ANR	85586	CompoundStatement		276:0:8934:9230	85584	0					
ANR	85587	IdentifierDeclStatement	char * buf ;	277:1:8937:8946	85584	0	True				
ANR	85588	IdentifierDecl	* buf		85584	0					
ANR	85589	IdentifierDeclType	char *		85584	0					
ANR	85590	Identifier	buf		85584	1					
ANR	85591	IdentifierDeclStatement	size_t size ;	278:1:8949:8960	85584	1	True				
ANR	85592	IdentifierDecl	size		85584	0					
ANR	85593	IdentifierDeclType	size_t		85584	0					
ANR	85594	Identifier	size		85584	1					
ANR	85595	Statement	if	280:1:8964:8965	85584	2	True				
ANR	85596	Statement	(	280:4:8967:8967	85584	3	True				
ANR	85597	Statement	zend_stream_fixup	280:5:8968:8984	85584	4	True				
ANR	85598	Statement	(	280:22:8985:8985	85584	5	True				
ANR	85599	Statement	fh	280:23:8986:8987	85584	6	True				
ANR	85600	Statement	","	280:25:8988:8988	85584	7	True				
ANR	85601	Statement	&	280:27:8990:8990	85584	8	True				
ANR	85602	Statement	buf	280:28:8991:8993	85584	9	True				
ANR	85603	Statement	","	280:31:8994:8994	85584	10	True				
ANR	85604	Statement	&	280:33:8996:8996	85584	11	True				
ANR	85605	Statement	size	280:34:8997:9000	85584	12	True				
ANR	85606	Statement	TSRMLS_CC	280:39:9002:9010	85584	13	True				
ANR	85607	Statement	)	280:48:9011:9011	85584	14	True				
ANR	85608	Statement	==	280:50:9013:9014	85584	15	True				
ANR	85609	Statement	FAILURE	280:53:9016:9022	85584	16	True				
ANR	85610	Statement	)	280:60:9023:9023	85584	17	True				
ANR	85611	CompoundStatement		5:62:90:90	85584	18					
ANR	85612	ReturnStatement	return FAILURE ;	281:2:9029:9043	85584	0	True				
ANR	85613	Identifier	FAILURE		85584	0					
ANR	85614	Statement	if	284:1:9050:9051	85584	19	True				
ANR	85615	Statement	(	284:4:9053:9053	85584	20	True				
ANR	85616	Statement	init_ini_scanner	284:5:9054:9069	85584	21	True				
ANR	85617	Statement	(	284:21:9070:9070	85584	22	True				
ANR	85618	Statement	scanner_mode	284:22:9071:9082	85584	23	True				
ANR	85619	Statement	","	284:34:9083:9083	85584	24	True				
ANR	85620	Statement	fh	284:36:9085:9086	85584	25	True				
ANR	85621	Statement	TSRMLS_CC	284:39:9088:9096	85584	26	True				
ANR	85622	Statement	)	284:48:9097:9097	85584	27	True				
ANR	85623	Statement	==	284:50:9099:9100	85584	28	True				
ANR	85624	Statement	FAILURE	284:53:9102:9108	85584	29	True				
ANR	85625	Statement	)	284:60:9109:9109	85584	30	True				
ANR	85626	CompoundStatement		9:62:176:176	85584	31					
ANR	85627	Statement	zend_file_handle_dtor	285:2:9115:9135	85584	0	True				
ANR	85628	Statement	(	285:23:9136:9136	85584	1	True				
ANR	85629	Statement	fh	285:24:9137:9138	85584	2	True				
ANR	85630	Statement	TSRMLS_CC	285:27:9140:9148	85584	3	True				
ANR	85631	Statement	)	285:36:9149:9149	85584	4	True				
ANR	85632	ExpressionStatement		285:37:9150:9150	85584	5	True				
ANR	85633	ReturnStatement	return FAILURE ;	286:2:9154:9168	85584	6	True				
ANR	85634	Identifier	FAILURE		85584	0					
ANR	85635	Statement	yy_scan_buffer	289:1:9175:9188	85584	32	True				
ANR	85636	Statement	(	289:15:9189:9189	85584	33	True				
ANR	85637	Statement	buf	289:16:9190:9192	85584	34	True				
ANR	85638	Statement	","	289:19:9193:9193	85584	35	True				
ANR	85639	Statement	size	289:21:9195:9198	85584	36	True				
ANR	85640	Statement	TSRMLS_CC	289:26:9200:9208	85584	37	True				
ANR	85641	Statement	)	289:35:9209:9209	85584	38	True				
ANR	85642	ExpressionStatement		289:36:9210:9210	85584	39	True				
ANR	85643	ReturnStatement	return SUCCESS ;	291:1:9214:9228	85584	40	True				
ANR	85644	Identifier	SUCCESS		85584	0					
ANR	85645	ReturnType	int		85584	1					
ANR	85646	Identifier	zend_ini_open_file_for_scanning		85584	2					
ANR	85647	ParameterList	"zend_file_handle * fh , int scanner_mode TSRMLS_DC"		85584	3					
ANR	85648	Parameter	zend_file_handle * fh	275:36:8884:8903	85584	0	True				
ANR	85649	ParameterType	zend_file_handle *		85584	0					
ANR	85650	Identifier	fh		85584	1					
ANR	85651	Parameter	int scanner_mode TSRMLS_DC	275:58:8906:8931	85584	1	True				
ANR	85652	ParameterType	int scanner_mode		85584	0					
ANR	85653	Identifier	TSRMLS_DC		85584	1					
ANR	85654	CFGEntryNode	ENTRY		85584		True				
ANR	85655	CFGExitNode	EXIT		85584		True				
ANR	85656	Symbol	fh		85584						
ANR	85657	Symbol	buf		85584						
ANR	85658	Symbol	SUCCESS		85584						
ANR	85659	Symbol	size		85584						
ANR	85660	Symbol	TSRMLS_DC		85584						
ANR	85661	Symbol	FAILURE		85584						
ANR	85662	Function	zend_ini_prepare_string_for_scanning	297:0:9292:9542							
ANR	85663	FunctionDef	"zend_ini_prepare_string_for_scanning (char * str , int scanner_mode TSRMLS_DC)"		85662	0					
ANR	85664	CompoundStatement		298:0:9372:9542	85662	0					
ANR	85665	IdentifierDeclStatement	int len = strlen ( str ) ;	299:1:9375:9396	85662	0	True				
ANR	85666	IdentifierDecl	len = strlen ( str )		85662	0					
ANR	85667	IdentifierDeclType	int		85662	0					
ANR	85668	Identifier	len		85662	1					
ANR	85669	AssignmentExpression	len = strlen ( str )		85662	2		=			
ANR	85670	Identifier	len		85662	0					
ANR	85671	CallExpression	strlen ( str )		85662	1					
ANR	85672	Callee	strlen		85662	0					
ANR	85673	Identifier	strlen		85662	0					
ANR	85674	ArgumentList	str		85662	1					
ANR	85675	Argument	str		85662	0					
ANR	85676	Identifier	str		85662	0					
ANR	85677	Statement	if	301:1:9400:9401	85662	1	True				
ANR	85678	Statement	(	301:4:9403:9403	85662	2	True				
ANR	85679	Statement	init_ini_scanner	301:5:9404:9419	85662	3	True				
ANR	85680	Statement	(	301:21:9420:9420	85662	4	True				
ANR	85681	Statement	scanner_mode	301:22:9421:9432	85662	5	True				
ANR	85682	Statement	","	301:34:9433:9433	85662	6	True				
ANR	85683	Statement	NULL	301:36:9435:9438	85662	7	True				
ANR	85684	Statement	TSRMLS_CC	301:41:9440:9448	85662	8	True				
ANR	85685	Statement	)	301:50:9449:9449	85662	9	True				
ANR	85686	Statement	==	301:52:9451:9452	85662	10	True				
ANR	85687	Statement	FAILURE	301:55:9454:9460	85662	11	True				
ANR	85688	Statement	)	301:62:9461:9461	85662	12	True				
ANR	85689	CompoundStatement		4:64:90:90	85662	13					
ANR	85690	ReturnStatement	return FAILURE ;	302:2:9467:9481	85662	0	True				
ANR	85691	Identifier	FAILURE		85662	0					
ANR	85692	Statement	yy_scan_buffer	305:1:9488:9501	85662	14	True				
ANR	85693	Statement	(	305:15:9502:9502	85662	15	True				
ANR	85694	Statement	str	305:16:9503:9505	85662	16	True				
ANR	85695	Statement	","	305:19:9506:9506	85662	17	True				
ANR	85696	Statement	len	305:21:9508:9510	85662	18	True				
ANR	85697	Statement	TSRMLS_CC	305:25:9512:9520	85662	19	True				
ANR	85698	Statement	)	305:34:9521:9521	85662	20	True				
ANR	85699	ExpressionStatement		305:35:9522:9522	85662	21	True				
ANR	85700	ReturnStatement	return SUCCESS ;	307:1:9526:9540	85662	22	True				
ANR	85701	Identifier	SUCCESS		85662	0					
ANR	85702	ReturnType	int		85662	1					
ANR	85703	Identifier	zend_ini_prepare_string_for_scanning		85662	2					
ANR	85704	ParameterList	"char * str , int scanner_mode TSRMLS_DC"		85662	3					
ANR	85705	Parameter	char * str	297:41:9333:9341	85662	0	True				
ANR	85706	ParameterType	char *		85662	0					
ANR	85707	Identifier	str		85662	1					
ANR	85708	Parameter	int scanner_mode TSRMLS_DC	297:52:9344:9369	85662	1	True				
ANR	85709	ParameterType	int scanner_mode		85662	0					
ANR	85710	Identifier	TSRMLS_DC		85662	1					
ANR	85711	CFGEntryNode	ENTRY		85662		True				
ANR	85712	CFGExitNode	EXIT		85662		True				
ANR	85713	Symbol	str		85662						
ANR	85714	Symbol	strlen		85662						
ANR	85715	Symbol	SUCCESS		85662						
ANR	85716	Symbol	len		85662						
ANR	85717	Symbol	TSRMLS_DC		85662						
ANR	85718	Symbol	FAILURE		85662						
ANR	85719	Function	zend_ini_escape_string	313:0:9591:10342							
ANR	85720	FunctionDef	"zend_ini_escape_string (zval * lval , char * str , int len , char quote_type TSRMLS_DC)"		85719	0					
ANR	85721	CompoundStatement		314:0:9685:10342	85719	0					
ANR	85722	Statement	register	315:1:9688:9695	85719	0	True				
ANR	85723	IdentifierDeclStatement	"char * s , * t ;"	315:10:9697:9708	85719	1	True				
ANR	85724	IdentifierDecl	* s		85719	0					
ANR	85725	IdentifierDeclType	char *		85719	0					
ANR	85726	Identifier	s		85719	1					
ANR	85727	IdentifierDecl	* t		85719	1					
ANR	85728	IdentifierDeclType	char *		85719	0					
ANR	85729	Identifier	t		85719	1					
ANR	85730	IdentifierDeclStatement	char * end ;	316:1:9711:9720	85719	2	True				
ANR	85731	IdentifierDecl	* end		85719	0					
ANR	85732	IdentifierDeclType	char *		85719	0					
ANR	85733	Identifier	end		85719	1					
ANR	85734	ExpressionStatement	"zend_ini_copy_value ( lval , str , len )"	318:1:9724:9759	85719	3	True				
ANR	85735	CallExpression	"zend_ini_copy_value ( lval , str , len )"		85719	0					
ANR	85736	Callee	zend_ini_copy_value		85719	0					
ANR	85737	Identifier	zend_ini_copy_value		85719	0					
ANR	85738	ArgumentList	lval		85719	1					
ANR	85739	Argument	lval		85719	0					
ANR	85740	Identifier	lval		85719	0					
ANR	85741	Argument	str		85719	1					
ANR	85742	Identifier	str		85719	0					
ANR	85743	Argument	len		85719	2					
ANR	85744	Identifier	len		85719	0					
ANR	85745	ExpressionStatement	s = t = Z_STRVAL_P ( lval )	321:1:9795:9819	85719	4	True				
ANR	85746	AssignmentExpression	s = t = Z_STRVAL_P ( lval )		85719	0		=			
ANR	85747	Identifier	s		85719	0					
ANR	85748	AssignmentExpression	t = Z_STRVAL_P ( lval )		85719	1		=			
ANR	85749	Identifier	t		85719	0					
ANR	85750	CallExpression	Z_STRVAL_P ( lval )		85719	1					
ANR	85751	Callee	Z_STRVAL_P		85719	0					
ANR	85752	Identifier	Z_STRVAL_P		85719	0					
ANR	85753	ArgumentList	lval		85719	1					
ANR	85754	Argument	lval		85719	0					
ANR	85755	Identifier	lval		85719	0					
ANR	85756	ExpressionStatement	end = s + Z_STRLEN_P ( lval )	322:1:9822:9848	85719	5	True				
ANR	85757	AssignmentExpression	end = s + Z_STRLEN_P ( lval )		85719	0		=			
ANR	85758	Identifier	end		85719	0					
ANR	85759	AdditiveExpression	s + Z_STRLEN_P ( lval )		85719	1		+			
ANR	85760	Identifier	s		85719	0					
ANR	85761	CallExpression	Z_STRLEN_P ( lval )		85719	1					
ANR	85762	Callee	Z_STRLEN_P		85719	0					
ANR	85763	Identifier	Z_STRLEN_P		85719	0					
ANR	85764	ArgumentList	lval		85719	1					
ANR	85765	Argument	lval		85719	0					
ANR	85766	Identifier	lval		85719	0					
ANR	85767	WhileStatement	while ( s < end )		85719	6					
ANR	85768	Condition	s < end	324:8:9859:9865	85719	0	True				
ANR	85769	RelationalExpression	s < end		85719	0		<			
ANR	85770	Identifier	s		85719	0					
ANR	85771	Identifier	end		85719	1					
ANR	85772	CompoundStatement		11:17:182:182	85719	1					
ANR	85773	IfStatement	if ( * s == '\\\\' )		85719	0					
ANR	85774	Condition	* s == '\\\\'	325:6:9876:9885	85719	0	True				
ANR	85775	EqualityExpression	* s == '\\\\'		85719	0		==			
ANR	85776	UnaryOperationExpression	* s		85719	0					
ANR	85777	UnaryOperator	*		85719	0					
ANR	85778	Identifier	s		85719	1					
ANR	85779	PrimaryExpression	'\\\\'		85719	1					
ANR	85780	CompoundStatement		12:18:202:202	85719	1					
ANR	85781	ExpressionStatement	s ++	326:3:9893:9896	85719	0	True				
ANR	85782	PostIncDecOperationExpression	s ++		85719	0					
ANR	85783	Identifier	s		85719	0					
ANR	85784	IncDec	++		85719	1					
ANR	85785	IfStatement	if ( s >= end )		85719	1					
ANR	85786	Condition	s >= end	327:7:9905:9912	85719	0	True				
ANR	85787	RelationalExpression	s >= end		85719	0		>=			
ANR	85788	Identifier	s		85719	0					
ANR	85789	Identifier	end		85719	1					
ANR	85790	CompoundStatement		14:17:229:229	85719	1					
ANR	85791	ExpressionStatement	* t ++ = '\\\\'	328:4:9921:9932	85719	0	True				
ANR	85792	AssignmentExpression	* t ++ = '\\\\'		85719	0		=			
ANR	85793	UnaryOperationExpression	* t ++		85719	0					
ANR	85794	UnaryOperator	*		85719	0					
ANR	85795	PostIncDecOperationExpression	t ++		85719	1					
ANR	85796	Identifier	t		85719	0					
ANR	85797	IncDec	++		85719	1					
ANR	85798	PrimaryExpression	'\\\\'		85719	1					
ANR	85799	ContinueStatement	continue ;	329:4:9938:9946	85719	1	True				
ANR	85800	SwitchStatement	switch ( * s )		85719	2					
ANR	85801	Condition	* s	331:11:9964:9965	85719	0	True				
ANR	85802	UnaryOperationExpression	* s		85719	0					
ANR	85803	UnaryOperator	*		85719	0					
ANR	85804	Identifier	s		85719	1					
ANR	85805	CompoundStatement		18:15:282:282	85719	1					
ANR	85806	Label	"case '""' :"	332:4:9974:9982	85719	0	True				
ANR	85807	IfStatement	if ( * s != quote_type )		85719	1					
ANR	85808	Condition	* s != quote_type	333:9:9993:10008	85719	0	True				
ANR	85809	EqualityExpression	* s != quote_type		85719	0		!=			
ANR	85810	UnaryOperationExpression	* s		85719	0					
ANR	85811	UnaryOperator	*		85719	0					
ANR	85812	Identifier	s		85719	1					
ANR	85813	Identifier	quote_type		85719	1					
ANR	85814	CompoundStatement		20:27:325:325	85719	1					
ANR	85815	ExpressionStatement	* t ++ = '\\\\'	334:6:10019:10030	85719	0	True				
ANR	85816	AssignmentExpression	* t ++ = '\\\\'		85719	0		=			
ANR	85817	UnaryOperationExpression	* t ++		85719	0					
ANR	85818	UnaryOperator	*		85719	0					
ANR	85819	PostIncDecOperationExpression	t ++		85719	1					
ANR	85820	Identifier	t		85719	0					
ANR	85821	IncDec	++		85719	1					
ANR	85822	PrimaryExpression	'\\\\'		85719	1					
ANR	85823	ExpressionStatement	* t ++ = * s	335:6:10038:10047	85719	1	True				
ANR	85824	AssignmentExpression	* t ++ = * s		85719	0		=			
ANR	85825	UnaryOperationExpression	* t ++		85719	0					
ANR	85826	UnaryOperator	*		85719	0					
ANR	85827	PostIncDecOperationExpression	t ++		85719	1					
ANR	85828	Identifier	t		85719	0					
ANR	85829	IncDec	++		85719	1					
ANR	85830	UnaryOperationExpression	* s		85719	1					
ANR	85831	UnaryOperator	*		85719	0					
ANR	85832	Identifier	s		85719	1					
ANR	85833	BreakStatement	break ;	336:6:10055:10060	85719	2	True				
ANR	85834	Label	case '\\\\' :	338:4:10073:10082	85719	2	True				
ANR	85835	Label	case '$' :	339:4:10088:10096	85719	3	True				
ANR	85836	ExpressionStatement	* t ++ = * s	340:5:10103:10112	85719	4	True				
ANR	85837	AssignmentExpression	* t ++ = * s		85719	0		=			
ANR	85838	UnaryOperationExpression	* t ++		85719	0					
ANR	85839	UnaryOperator	*		85719	0					
ANR	85840	PostIncDecOperationExpression	t ++		85719	1					
ANR	85841	Identifier	t		85719	0					
ANR	85842	IncDec	++		85719	1					
ANR	85843	UnaryOperationExpression	* s		85719	1					
ANR	85844	UnaryOperator	*		85719	0					
ANR	85845	Identifier	s		85719	1					
ANR	85846	ExpressionStatement	Z_STRLEN_P ( lval ) --	341:5:10119:10137	85719	5	True				
ANR	85847	PostIncDecOperationExpression	Z_STRLEN_P ( lval ) --		85719	0					
ANR	85848	CallExpression	Z_STRLEN_P ( lval )		85719	0					
ANR	85849	Callee	Z_STRLEN_P		85719	0					
ANR	85850	Identifier	Z_STRLEN_P		85719	0					
ANR	85851	ArgumentList	lval		85719	1					
ANR	85852	Argument	lval		85719	0					
ANR	85853	Identifier	lval		85719	0					
ANR	85854	IncDec	--		85719	1					
ANR	85855	BreakStatement	break ;	342:5:10144:10149	85719	6	True				
ANR	85856	Label	default :	343:4:10155:10162	85719	7	True				
ANR	85857	Identifier	default		85719	0					
ANR	85858	ExpressionStatement	* t ++ = '\\\\'	344:5:10169:10180	85719	8	True				
ANR	85859	AssignmentExpression	* t ++ = '\\\\'		85719	0		=			
ANR	85860	UnaryOperationExpression	* t ++		85719	0					
ANR	85861	UnaryOperator	*		85719	0					
ANR	85862	PostIncDecOperationExpression	t ++		85719	1					
ANR	85863	Identifier	t		85719	0					
ANR	85864	IncDec	++		85719	1					
ANR	85865	PrimaryExpression	'\\\\'		85719	1					
ANR	85866	ExpressionStatement	* t ++ = * s	345:5:10187:10196	85719	9	True				
ANR	85867	AssignmentExpression	* t ++ = * s		85719	0		=			
ANR	85868	UnaryOperationExpression	* t ++		85719	0					
ANR	85869	UnaryOperator	*		85719	0					
ANR	85870	PostIncDecOperationExpression	t ++		85719	1					
ANR	85871	Identifier	t		85719	0					
ANR	85872	IncDec	++		85719	1					
ANR	85873	UnaryOperationExpression	* s		85719	1					
ANR	85874	UnaryOperator	*		85719	0					
ANR	85875	Identifier	s		85719	1					
ANR	85876	BreakStatement	break ;	346:5:10203:10208	85719	10	True				
ANR	85877	ElseStatement	else		85719	0					
ANR	85878	CompoundStatement		35:9:538:538	85719	0					
ANR	85879	ExpressionStatement	* t ++ = * s	349:3:10229:10238	85719	0	True				
ANR	85880	AssignmentExpression	* t ++ = * s		85719	0		=			
ANR	85881	UnaryOperationExpression	* t ++		85719	0					
ANR	85882	UnaryOperator	*		85719	0					
ANR	85883	PostIncDecOperationExpression	t ++		85719	1					
ANR	85884	Identifier	t		85719	0					
ANR	85885	IncDec	++		85719	1					
ANR	85886	UnaryOperationExpression	* s		85719	1					
ANR	85887	UnaryOperator	*		85719	0					
ANR	85888	Identifier	s		85719	1					
ANR	85889	IfStatement	if ( * s == '\\n' || ( * s == '\\r' && ( * ( s + 1 ) != '\\n' ) ) )		85719	1					
ANR	85890	Condition	* s == '\\n' || ( * s == '\\r' && ( * ( s + 1 ) != '\\n' ) )	351:6:10250:10295	85719	0	True				
ANR	85891	OrExpression	* s == '\\n' || ( * s == '\\r' && ( * ( s + 1 ) != '\\n' ) )		85719	0		||			
ANR	85892	EqualityExpression	* s == '\\n'		85719	0		==			
ANR	85893	UnaryOperationExpression	* s		85719	0					
ANR	85894	UnaryOperator	*		85719	0					
ANR	85895	Identifier	s		85719	1					
ANR	85896	PrimaryExpression	'\\n'		85719	1					
ANR	85897	AndExpression	* s == '\\r' && ( * ( s + 1 ) != '\\n' )		85719	1		&&			
ANR	85898	EqualityExpression	* s == '\\r'		85719	0		==			
ANR	85899	UnaryOperationExpression	* s		85719	0					
ANR	85900	UnaryOperator	*		85719	0					
ANR	85901	Identifier	s		85719	1					
ANR	85902	PrimaryExpression	'\\r'		85719	1					
ANR	85903	EqualityExpression	* ( s + 1 ) != '\\n'		85719	1		!=			
ANR	85904	UnaryOperationExpression	* ( s + 1 )		85719	0					
ANR	85905	UnaryOperator	*		85719	0					
ANR	85906	AdditiveExpression	s + 1		85719	1		+			
ANR	85907	Identifier	s		85719	0					
ANR	85908	PrimaryExpression	1		85719	1					
ANR	85909	PrimaryExpression	'\\n'		85719	1					
ANR	85910	CompoundStatement		38:54:612:612	85719	1					
ANR	85911	ExpressionStatement	SCNG ( lineno ) ++	352:3:10303:10317	85719	0	True				
ANR	85912	PostIncDecOperationExpression	SCNG ( lineno ) ++		85719	0					
ANR	85913	CallExpression	SCNG ( lineno )		85719	0					
ANR	85914	Callee	SCNG		85719	0					
ANR	85915	Identifier	SCNG		85719	0					
ANR	85916	ArgumentList	lineno		85719	1					
ANR	85917	Argument	lineno		85719	0					
ANR	85918	Identifier	lineno		85719	0					
ANR	85919	IncDec	++		85719	1					
ANR	85920	ExpressionStatement	s ++	354:2:10325:10328	85719	2	True				
ANR	85921	PostIncDecOperationExpression	s ++		85719	0					
ANR	85922	Identifier	s		85719	0					
ANR	85923	IncDec	++		85719	1					
ANR	85924	ExpressionStatement	* t = 0	356:1:10334:10340	85719	7	True				
ANR	85925	AssignmentExpression	* t = 0		85719	0		=			
ANR	85926	UnaryOperationExpression	* t		85719	0					
ANR	85927	UnaryOperator	*		85719	0					
ANR	85928	Identifier	t		85719	1					
ANR	85929	PrimaryExpression	0		85719	1					
ANR	85930	ReturnType	static void		85719	1					
ANR	85931	Identifier	zend_ini_escape_string		85719	2					
ANR	85932	ParameterList	"zval * lval , char * str , int len , char quote_type TSRMLS_DC"		85719	3					
ANR	85933	Parameter	zval * lval	313:35:9626:9635	85719	0	True				
ANR	85934	ParameterType	zval *		85719	0					
ANR	85935	Identifier	lval		85719	1					
ANR	85936	Parameter	char * str	313:47:9638:9646	85719	1	True				
ANR	85937	ParameterType	char *		85719	0					
ANR	85938	Identifier	str		85719	1					
ANR	85939	Parameter	int len	313:58:9649:9655	85719	2	True				
ANR	85940	ParameterType	int		85719	0					
ANR	85941	Identifier	len		85719	1					
ANR	85942	Parameter	char quote_type TSRMLS_DC	313:67:9658:9682	85719	3	True				
ANR	85943	ParameterType	char quote_type		85719	0					
ANR	85944	Identifier	TSRMLS_DC		85719	1					
ANR	85945	CFGEntryNode	ENTRY		85719		True				
ANR	85946	CFGExitNode	EXIT		85719		True				
ANR	85947	Symbol	* t ++		85719						
ANR	85948	Symbol	lval		85719						
ANR	85949	Symbol	quote_type		85719						
ANR	85950	Symbol	TSRMLS_DC		85719						
ANR	85951	Symbol	Z_STRVAL_P		85719						
ANR	85952	Symbol	SCNG		85719						
ANR	85953	Symbol	str		85719						
ANR	85954	Symbol	s		85719						
ANR	85955	Symbol	lineno		85719						
ANR	85956	Symbol	len		85719						
ANR	85957	Symbol	t		85719						
ANR	85958	Symbol	* ( s + 1 )		85719						
ANR	85959	Symbol	end		85719						
ANR	85960	Symbol	Z_STRLEN_P		85719						
ANR	85961	Symbol	* s		85719						
ANR	85962	Symbol	* t		85719						
ANR	85963	DeclStmt									
ANR	85964	Decl							YYCTYPE	YYCTYPE	yych
ANR	85965	DeclStmt									
ANR	85966	Decl							unsigned int	unsigned int	yyaccept
ANR	85967	DeclStmt									
ANR	85968	Decl							const unsigned char	const unsigned char [ ]	yybm
ANR	85969	DeclStmt									
ANR	85970	Decl							const unsigned char	const unsigned char [ ]	yybm
ANR	85971	DeclStmt									
ANR	85972	Decl							const unsigned char	const unsigned char [ ]	yybm
ANR	85973	DeclStmt									
ANR	85974	Decl							const unsigned char	const unsigned char [ ]	yybm
ANR	85975	DeclStmt									
ANR	85976	Decl							char	char *	sc
ANR	85977	DeclStmt									
ANR	85978	Decl							const unsigned char	const unsigned char [ ]	yybm
ANR	85979	DeclStmt									
ANR	85980	Decl							const unsigned char	const unsigned char [ ]	yybm
ANR	85981	DeclStmt									
ANR	85982	Decl							const unsigned char	const unsigned char [ ]	yybm
ANR	85983	DeclStmt									
ANR	85984	Decl							const unsigned char	const unsigned char [ ]	yybm
