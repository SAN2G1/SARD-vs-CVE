command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1312194	File	data/converged/CVE-2017-11142_php-src/ext_spl_spl_dllist.c								
ANR	1312195	DeclStmt									
ANR	1312196	Decl							zend_object_handlers	zend_object_handlers	spl_handler_SplDoublyLinkedList
ANR	1312197	DeclStmt									
ANR	1312198	Decl							PHPAPI zend_class_entry	PHPAPI zend_class_entry *	spl_ce_SplDoublyLinkedList
ANR	1312199	DeclStmt									
ANR	1312200	Decl							PHPAPI zend_class_entry	PHPAPI zend_class_entry *	spl_ce_SplQueue
ANR	1312201	DeclStmt									
ANR	1312202	Decl							PHPAPI zend_class_entry	PHPAPI zend_class_entry *	spl_ce_SplStack
ANR	1312203	ClassDef	_spl_ptr_llist_element	64:8:2436:2641							
ANR	1312204	DeclStmt									
ANR	1312205	Decl							struct _spl_ptr_llist_element	struct _spl_ptr_llist_element *	prev
ANR	1312206	DeclStmt									
ANR	1312207	Decl							struct _spl_ptr_llist_element	struct _spl_ptr_llist_element *	next
ANR	1312208	DeclStmt									
ANR	1312209	Decl							int	int	rc
ANR	1312210	DeclStmt									
ANR	1312211	Decl							void	void *	data
ANR	1312212	DeclStmt									
ANR	1312213	Decl							_spl_ptr_llist_element	_spl_ptr_llist_element	spl_ptr_llist_element
ANR	1312214	DeclStmt									
ANR	1312215	Decl							void ( * ) ( spl_ptr_llist_element * TSRMLS_DC )	void ( * ) ( spl_ptr_llist_element * TSRMLS_DC )	spl_ptr_llist_dtor_func
ANR	1312216	DeclStmt									
ANR	1312217	Decl							void ( * ) ( spl_ptr_llist_element * TSRMLS_DC )	void ( * ) ( spl_ptr_llist_element * TSRMLS_DC )	spl_ptr_llist_ctor_func
ANR	1312218	ClassDef	_spl_ptr_llist	74:8:2805:2984							
ANR	1312219	DeclStmt									
ANR	1312220	Decl							spl_ptr_llist_element	spl_ptr_llist_element *	head
ANR	1312221	DeclStmt									
ANR	1312222	Decl							spl_ptr_llist_element	spl_ptr_llist_element *	tail
ANR	1312223	DeclStmt									
ANR	1312224	Decl							spl_ptr_llist_dtor_func	spl_ptr_llist_dtor_func	dtor
ANR	1312225	DeclStmt									
ANR	1312226	Decl							spl_ptr_llist_ctor_func	spl_ptr_llist_ctor_func	ctor
ANR	1312227	DeclStmt									
ANR	1312228	Decl							int	int	count
ANR	1312229	DeclStmt									
ANR	1312230	Decl							_spl_ptr_llist	_spl_ptr_llist	spl_ptr_llist
ANR	1312231	DeclStmt									
ANR	1312232	Decl							struct _spl_dllist_object	struct _spl_dllist_object	spl_dllist_object
ANR	1312233	DeclStmt									
ANR	1312234	Decl							struct _spl_dllist_it	struct _spl_dllist_it	spl_dllist_it
ANR	1312235	ClassDef	_spl_dllist_object	85:0:3086:3599							
ANR	1312236	DeclStmt									
ANR	1312237	Decl							zend_object	zend_object	std
ANR	1312238	DeclStmt									
ANR	1312239	Decl							spl_ptr_llist	spl_ptr_llist *	llist
ANR	1312240	DeclStmt									
ANR	1312241	Decl							int	int	traverse_position
ANR	1312242	DeclStmt									
ANR	1312243	Decl							spl_ptr_llist_element	spl_ptr_llist_element *	traverse_pointer
ANR	1312244	DeclStmt									
ANR	1312245	Decl							zval	zval *	retval
ANR	1312246	DeclStmt									
ANR	1312247	Decl							int	int	flags
ANR	1312248	DeclStmt									
ANR	1312249	Decl							zend_function	zend_function *	fptr_offset_get
ANR	1312250	DeclStmt									
ANR	1312251	Decl							zend_function	zend_function *	fptr_offset_set
ANR	1312252	DeclStmt									
ANR	1312253	Decl							zend_function	zend_function *	fptr_offset_has
ANR	1312254	DeclStmt									
ANR	1312255	Decl							zend_function	zend_function *	fptr_offset_del
ANR	1312256	DeclStmt									
ANR	1312257	Decl							zend_function	zend_function *	fptr_count
ANR	1312258	DeclStmt									
ANR	1312259	Decl							zend_class_entry	zend_class_entry *	ce_get_iterator
ANR	1312260	DeclStmt									
ANR	1312261	Decl							HashTable	HashTable *	debug_info
ANR	1312262	ClassDef	_spl_dllist_it	102:0:3649:3853							
ANR	1312263	DeclStmt									
ANR	1312264	Decl							zend_user_iterator	zend_user_iterator	intern
ANR	1312265	DeclStmt									
ANR	1312266	Decl							int	int	traverse_position
ANR	1312267	DeclStmt									
ANR	1312268	Decl							spl_ptr_llist_element	spl_ptr_llist_element *	traverse_pointer
ANR	1312269	DeclStmt									
ANR	1312270	Decl							int	int	flags
ANR	1312271	DeclStmt									
ANR	1312272	Decl							spl_dllist_object	spl_dllist_object *	object
ANR	1312273	Function	spl_ptr_llist_init	123:0:4176:4469							
ANR	1312274	FunctionDef	"spl_ptr_llist_init (spl_ptr_llist_ctor_func ctor , spl_ptr_llist_dtor_func dtor)"		1312273	0					
ANR	1312275	CompoundStatement		124:0:4287:4469	1312273	0					
ANR	1312276	IdentifierDeclStatement	spl_ptr_llist * llist = emalloc ( sizeof ( spl_ptr_llist ) ) ;	125:1:4290:4343	1312273	0	True				
ANR	1312277	IdentifierDecl	* llist = emalloc ( sizeof ( spl_ptr_llist ) )		1312273	0					
ANR	1312278	IdentifierDeclType	spl_ptr_llist *		1312273	0					
ANR	1312279	Identifier	llist		1312273	1					
ANR	1312280	AssignmentExpression	* llist = emalloc ( sizeof ( spl_ptr_llist ) )		1312273	2		=			
ANR	1312281	Identifier	llist		1312273	0					
ANR	1312282	CallExpression	emalloc ( sizeof ( spl_ptr_llist ) )		1312273	1					
ANR	1312283	Callee	emalloc		1312273	0					
ANR	1312284	Identifier	emalloc		1312273	0					
ANR	1312285	ArgumentList	sizeof ( spl_ptr_llist )		1312273	1					
ANR	1312286	Argument	sizeof ( spl_ptr_llist )		1312273	0					
ANR	1312287	SizeofExpression	sizeof ( spl_ptr_llist )		1312273	0					
ANR	1312288	Sizeof	sizeof		1312273	0					
ANR	1312289	SizeofOperand	spl_ptr_llist		1312273	1					
ANR	1312290	ExpressionStatement	llist -> head = NULL	127:1:4347:4366	1312273	1	True				
ANR	1312291	AssignmentExpression	llist -> head = NULL		1312273	0		=			
ANR	1312292	PtrMemberAccess	llist -> head		1312273	0					
ANR	1312293	Identifier	llist		1312273	0					
ANR	1312294	Identifier	head		1312273	1					
ANR	1312295	Identifier	NULL		1312273	1					
ANR	1312296	ExpressionStatement	llist -> tail = NULL	128:1:4369:4388	1312273	2	True				
ANR	1312297	AssignmentExpression	llist -> tail = NULL		1312273	0		=			
ANR	1312298	PtrMemberAccess	llist -> tail		1312273	0					
ANR	1312299	Identifier	llist		1312273	0					
ANR	1312300	Identifier	tail		1312273	1					
ANR	1312301	Identifier	NULL		1312273	1					
ANR	1312302	ExpressionStatement	llist -> count = 0	129:1:4391:4407	1312273	3	True				
ANR	1312303	AssignmentExpression	llist -> count = 0		1312273	0		=			
ANR	1312304	PtrMemberAccess	llist -> count		1312273	0					
ANR	1312305	Identifier	llist		1312273	0					
ANR	1312306	Identifier	count		1312273	1					
ANR	1312307	PrimaryExpression	0		1312273	1					
ANR	1312308	ExpressionStatement	llist -> dtor = dtor	130:1:4410:4429	1312273	4	True				
ANR	1312309	AssignmentExpression	llist -> dtor = dtor		1312273	0		=			
ANR	1312310	PtrMemberAccess	llist -> dtor		1312273	0					
ANR	1312311	Identifier	llist		1312273	0					
ANR	1312312	Identifier	dtor		1312273	1					
ANR	1312313	Identifier	dtor		1312273	1					
ANR	1312314	ExpressionStatement	llist -> ctor = ctor	131:1:4432:4451	1312273	5	True				
ANR	1312315	AssignmentExpression	llist -> ctor = ctor		1312273	0		=			
ANR	1312316	PtrMemberAccess	llist -> ctor		1312273	0					
ANR	1312317	Identifier	llist		1312273	0					
ANR	1312318	Identifier	ctor		1312273	1					
ANR	1312319	Identifier	ctor		1312273	1					
ANR	1312320	ReturnStatement	return llist ;	133:1:4455:4467	1312273	6	True				
ANR	1312321	Identifier	llist		1312273	0					
ANR	1312322	ReturnType	static spl_ptr_llist *		1312273	1					
ANR	1312323	Identifier	spl_ptr_llist_init		1312273	2					
ANR	1312324	ParameterList	"spl_ptr_llist_ctor_func ctor , spl_ptr_llist_dtor_func dtor"		1312273	3					
ANR	1312325	Parameter	spl_ptr_llist_ctor_func ctor	123:41:4217:4244	1312273	0	True				
ANR	1312326	ParameterType	spl_ptr_llist_ctor_func		1312273	0					
ANR	1312327	Identifier	ctor		1312273	1					
ANR	1312328	Parameter	spl_ptr_llist_dtor_func dtor	123:71:4247:4274	1312273	1	True				
ANR	1312329	ParameterType	spl_ptr_llist_dtor_func		1312273	0					
ANR	1312330	Identifier	dtor		1312273	1					
ANR	1312331	CFGEntryNode	ENTRY		1312273		True				
ANR	1312332	CFGExitNode	EXIT		1312273		True				
ANR	1312333	Symbol	llist -> tail		1312273						
ANR	1312334	Symbol	* llist		1312273						
ANR	1312335	Symbol	emalloc		1312273						
ANR	1312336	Symbol	NULL		1312273						
ANR	1312337	Symbol	llist -> count		1312273						
ANR	1312338	Symbol	ctor		1312273						
ANR	1312339	Symbol	dtor		1312273						
ANR	1312340	Symbol	llist -> head		1312273						
ANR	1312341	Symbol	llist		1312273						
ANR	1312342	Symbol	llist -> dtor		1312273						
ANR	1312343	Symbol	llist -> ctor		1312273						
ANR	1312344	Function	spl_ptr_llist_count	137:0:4482:4576							
ANR	1312345	FunctionDef	spl_ptr_llist_count (spl_ptr_llist * llist)		1312344	0					
ANR	1312346	CompoundStatement		138:0:4546:4576	1312344	0					
ANR	1312347	ReturnStatement	return ( long ) llist -> count ;	139:1:4549:4574	1312344	0	True				
ANR	1312348	CastExpression	( long ) llist -> count		1312344	0					
ANR	1312349	CastTarget	long		1312344	0					
ANR	1312350	PtrMemberAccess	llist -> count		1312344	1					
ANR	1312351	Identifier	llist		1312344	0					
ANR	1312352	Identifier	count		1312344	1					
ANR	1312353	ReturnType	static long		1312344	1					
ANR	1312354	Identifier	spl_ptr_llist_count		1312344	2					
ANR	1312355	ParameterList	spl_ptr_llist * llist		1312344	3					
ANR	1312356	Parameter	spl_ptr_llist * llist	137:32:4514:4533	1312344	0	True				
ANR	1312357	ParameterType	spl_ptr_llist *		1312344	0					
ANR	1312358	Identifier	llist		1312344	1					
ANR	1312359	CFGEntryNode	ENTRY		1312344		True				
ANR	1312360	CFGExitNode	EXIT		1312344		True				
ANR	1312361	Symbol	* llist		1312344						
ANR	1312362	Symbol	llist -> count		1312344						
ANR	1312363	Symbol	llist		1312344						
ANR	1312364	DeclStmt									
ANR	1312365	Decl							spl_ptr_llist_element	spl_ptr_llist_element *	current
ANR	1312366	Decl							spl_ptr_llist_element	spl_ptr_llist_element *	next
ANR	1312367	DeclStmt									
ANR	1312368	Decl							spl_ptr_llist_dtor_func	spl_ptr_llist_dtor_func	dtor
ANR	1312369	Function	spl_ptr_llist_offset	161:0:4951:5347							
ANR	1312370	FunctionDef	"spl_ptr_llist_offset (spl_ptr_llist * llist , long offset , int backward)"		1312369	0					
ANR	1312371	CompoundStatement		162:0:5061:5347	1312369	0					
ANR	1312372	IdentifierDeclStatement	spl_ptr_llist_element * current ;	164:1:5065:5095	1312369	0	True				
ANR	1312373	IdentifierDecl	* current		1312369	0					
ANR	1312374	IdentifierDeclType	spl_ptr_llist_element *		1312369	0					
ANR	1312375	Identifier	current		1312369	1					
ANR	1312376	IdentifierDeclStatement	int pos = 0 ;	165:1:5098:5109	1312369	1	True				
ANR	1312377	IdentifierDecl	pos = 0		1312369	0					
ANR	1312378	IdentifierDeclType	int		1312369	0					
ANR	1312379	Identifier	pos		1312369	1					
ANR	1312380	AssignmentExpression	pos = 0		1312369	2		=			
ANR	1312381	Identifier	pos		1312369	0					
ANR	1312382	PrimaryExpression	0		1312369	1					
ANR	1312383	IfStatement	if ( backward )		1312369	2					
ANR	1312384	Condition	backward	167:5:5117:5124	1312369	0	True				
ANR	1312385	Identifier	backward		1312369	0					
ANR	1312386	CompoundStatement		6:15:65:65	1312369	1					
ANR	1312387	ExpressionStatement	current = llist -> tail	168:2:5131:5152	1312369	0	True				
ANR	1312388	AssignmentExpression	current = llist -> tail		1312369	0		=			
ANR	1312389	Identifier	current		1312369	0					
ANR	1312390	PtrMemberAccess	llist -> tail		1312369	1					
ANR	1312391	Identifier	llist		1312369	0					
ANR	1312392	Identifier	tail		1312369	1					
ANR	1312393	ElseStatement	else		1312369	0					
ANR	1312394	CompoundStatement		8:8:100:100	1312369	0					
ANR	1312395	ExpressionStatement	current = llist -> head	170:2:5166:5187	1312369	0	True				
ANR	1312396	AssignmentExpression	current = llist -> head		1312369	0		=			
ANR	1312397	Identifier	current		1312369	0					
ANR	1312398	PtrMemberAccess	llist -> head		1312369	1					
ANR	1312399	Identifier	llist		1312369	0					
ANR	1312400	Identifier	head		1312369	1					
ANR	1312401	WhileStatement	while ( current && pos < offset )		1312369	3					
ANR	1312402	Condition	current && pos < offset	173:8:5201:5223	1312369	0	True				
ANR	1312403	AndExpression	current && pos < offset		1312369	0		&&			
ANR	1312404	Identifier	current		1312369	0					
ANR	1312405	RelationalExpression	pos < offset		1312369	1		<			
ANR	1312406	Identifier	pos		1312369	0					
ANR	1312407	Identifier	offset		1312369	1					
ANR	1312408	CompoundStatement		12:33:164:164	1312369	1					
ANR	1312409	ExpressionStatement	pos ++	174:2:5230:5235	1312369	0	True				
ANR	1312410	PostIncDecOperationExpression	pos ++		1312369	0					
ANR	1312411	Identifier	pos		1312369	0					
ANR	1312412	IncDec	++		1312369	1					
ANR	1312413	IfStatement	if ( backward )		1312369	1					
ANR	1312414	Condition	backward	175:6:5243:5250	1312369	0	True				
ANR	1312415	Identifier	backward		1312369	0					
ANR	1312416	CompoundStatement		14:16:191:191	1312369	1					
ANR	1312417	ExpressionStatement	current = current -> prev	176:3:5258:5281	1312369	0	True				
ANR	1312418	AssignmentExpression	current = current -> prev		1312369	0		=			
ANR	1312419	Identifier	current		1312369	0					
ANR	1312420	PtrMemberAccess	current -> prev		1312369	1					
ANR	1312421	Identifier	current		1312369	0					
ANR	1312422	Identifier	prev		1312369	1					
ANR	1312423	ElseStatement	else		1312369	0					
ANR	1312424	CompoundStatement		16:9:230:230	1312369	0					
ANR	1312425	ExpressionStatement	current = current -> next	178:3:5297:5320	1312369	0	True				
ANR	1312426	AssignmentExpression	current = current -> next		1312369	0		=			
ANR	1312427	Identifier	current		1312369	0					
ANR	1312428	PtrMemberAccess	current -> next		1312369	1					
ANR	1312429	Identifier	current		1312369	0					
ANR	1312430	Identifier	next		1312369	1					
ANR	1312431	ReturnStatement	return current ;	182:1:5331:5345	1312369	4	True				
ANR	1312432	Identifier	current		1312369	0					
ANR	1312433	ReturnType	static spl_ptr_llist_element *		1312369	1					
ANR	1312434	Identifier	spl_ptr_llist_offset		1312369	2					
ANR	1312435	ParameterList	"spl_ptr_llist * llist , long offset , int backward"		1312369	3					
ANR	1312436	Parameter	spl_ptr_llist * llist	161:51:5002:5021	1312369	0	True				
ANR	1312437	ParameterType	spl_ptr_llist *		1312369	0					
ANR	1312438	Identifier	llist		1312369	1					
ANR	1312439	Parameter	long offset	161:73:5024:5034	1312369	1	True				
ANR	1312440	ParameterType	long		1312369	0					
ANR	1312441	Identifier	offset		1312369	1					
ANR	1312442	Parameter	int backward	161:86:5037:5048	1312369	2	True				
ANR	1312443	ParameterType	int		1312369	0					
ANR	1312444	Identifier	backward		1312369	1					
ANR	1312445	CFGEntryNode	ENTRY		1312369		True				
ANR	1312446	CFGExitNode	EXIT		1312369		True				
ANR	1312447	Symbol	llist -> tail		1312369						
ANR	1312448	Symbol	* llist		1312369						
ANR	1312449	Symbol	current		1312369						
ANR	1312450	Symbol	current -> prev		1312369						
ANR	1312451	Symbol	current -> next		1312369						
ANR	1312452	Symbol	offset		1312369						
ANR	1312453	Symbol	pos		1312369						
ANR	1312454	Symbol	* current		1312369						
ANR	1312455	Symbol	backward		1312369						
ANR	1312456	Symbol	llist -> head		1312369						
ANR	1312457	Symbol	llist		1312369						
ANR	1312458	DeclStmt									
ANR	1312459	Decl							spl_ptr_llist_element	spl_ptr_llist_element *	elem
ANR	1312460	DeclStmt									
ANR	1312461	Decl							spl_ptr_llist_element	spl_ptr_llist_element *	elem
ANR	1312462	DeclStmt									
ANR	1312463	Decl							void	void *	data
ANR	1312464	DeclStmt									
ANR	1312465	Decl							spl_ptr_llist_element	spl_ptr_llist_element *	tail
ANR	1312466	Function	spl_ptr_llist_last	265:0:6703:6884							
ANR	1312467	FunctionDef	spl_ptr_llist_last (spl_ptr_llist * llist)		1312466	0					
ANR	1312468	CompoundStatement		266:0:6767:6884	1312466	0					
ANR	1312469	IdentifierDeclStatement	spl_ptr_llist_element * tail = llist -> tail ;	267:1:6770:6811	1312466	0	True				
ANR	1312470	IdentifierDecl	* tail = llist -> tail		1312466	0					
ANR	1312471	IdentifierDeclType	spl_ptr_llist_element *		1312466	0					
ANR	1312472	Identifier	tail		1312466	1					
ANR	1312473	AssignmentExpression	* tail = llist -> tail		1312466	2		=			
ANR	1312474	Identifier	tail		1312466	0					
ANR	1312475	PtrMemberAccess	llist -> tail		1312466	1					
ANR	1312476	Identifier	llist		1312466	0					
ANR	1312477	Identifier	tail		1312466	1					
ANR	1312478	IfStatement	if ( tail == NULL )		1312466	1					
ANR	1312479	Condition	tail == NULL	269:5:6819:6830	1312466	0	True				
ANR	1312480	EqualityExpression	tail == NULL		1312466	0		==			
ANR	1312481	Identifier	tail		1312466	0					
ANR	1312482	Identifier	NULL		1312466	1					
ANR	1312483	CompoundStatement		4:19:65:65	1312466	1					
ANR	1312484	ReturnStatement	return NULL ;	270:2:6837:6848	1312466	0	True				
ANR	1312485	Identifier	NULL		1312466	0					
ANR	1312486	ElseStatement	else		1312466	0					
ANR	1312487	CompoundStatement		6:8:90:90	1312466	0					
ANR	1312488	ReturnStatement	return tail -> data ;	272:2:6862:6879	1312466	0	True				
ANR	1312489	PtrMemberAccess	tail -> data		1312466	0					
ANR	1312490	Identifier	tail		1312466	0					
ANR	1312491	Identifier	data		1312466	1					
ANR	1312492	ReturnType	static void *		1312466	1					
ANR	1312493	Identifier	spl_ptr_llist_last		1312466	2					
ANR	1312494	ParameterList	spl_ptr_llist * llist		1312466	3					
ANR	1312495	Parameter	spl_ptr_llist * llist	265:32:6735:6754	1312466	0	True				
ANR	1312496	ParameterType	spl_ptr_llist *		1312466	0					
ANR	1312497	Identifier	llist		1312466	1					
ANR	1312498	CFGEntryNode	ENTRY		1312466		True				
ANR	1312499	CFGExitNode	EXIT		1312466		True				
ANR	1312500	Symbol	llist -> tail		1312466						
ANR	1312501	Symbol	* llist		1312466						
ANR	1312502	Symbol	* tail		1312466						
ANR	1312503	Symbol	NULL		1312466						
ANR	1312504	Symbol	tail		1312466						
ANR	1312505	Symbol	tail -> data		1312466						
ANR	1312506	Symbol	llist		1312466						
ANR	1312507	Function	spl_ptr_llist_first	277:0:6897:7079							
ANR	1312508	FunctionDef	spl_ptr_llist_first (spl_ptr_llist * llist)		1312507	0					
ANR	1312509	CompoundStatement		278:0:6962:7079	1312507	0					
ANR	1312510	IdentifierDeclStatement	spl_ptr_llist_element * head = llist -> head ;	279:1:6965:7006	1312507	0	True				
ANR	1312511	IdentifierDecl	* head = llist -> head		1312507	0					
ANR	1312512	IdentifierDeclType	spl_ptr_llist_element *		1312507	0					
ANR	1312513	Identifier	head		1312507	1					
ANR	1312514	AssignmentExpression	* head = llist -> head		1312507	2		=			
ANR	1312515	Identifier	head		1312507	0					
ANR	1312516	PtrMemberAccess	llist -> head		1312507	1					
ANR	1312517	Identifier	llist		1312507	0					
ANR	1312518	Identifier	head		1312507	1					
ANR	1312519	IfStatement	if ( head == NULL )		1312507	1					
ANR	1312520	Condition	head == NULL	281:5:7014:7025	1312507	0	True				
ANR	1312521	EqualityExpression	head == NULL		1312507	0		==			
ANR	1312522	Identifier	head		1312507	0					
ANR	1312523	Identifier	NULL		1312507	1					
ANR	1312524	CompoundStatement		4:19:65:65	1312507	1					
ANR	1312525	ReturnStatement	return NULL ;	282:2:7032:7043	1312507	0	True				
ANR	1312526	Identifier	NULL		1312507	0					
ANR	1312527	ElseStatement	else		1312507	0					
ANR	1312528	CompoundStatement		6:8:90:90	1312507	0					
ANR	1312529	ReturnStatement	return head -> data ;	284:2:7057:7074	1312507	0	True				
ANR	1312530	PtrMemberAccess	head -> data		1312507	0					
ANR	1312531	Identifier	head		1312507	0					
ANR	1312532	Identifier	data		1312507	1					
ANR	1312533	ReturnType	static void *		1312507	1					
ANR	1312534	Identifier	spl_ptr_llist_first		1312507	2					
ANR	1312535	ParameterList	spl_ptr_llist * llist		1312507	3					
ANR	1312536	Parameter	spl_ptr_llist * llist	277:33:6930:6949	1312507	0	True				
ANR	1312537	ParameterType	spl_ptr_llist *		1312507	0					
ANR	1312538	Identifier	llist		1312507	1					
ANR	1312539	CFGEntryNode	ENTRY		1312507		True				
ANR	1312540	CFGExitNode	EXIT		1312507		True				
ANR	1312541	Symbol	head		1312507						
ANR	1312542	Symbol	* llist		1312507						
ANR	1312543	Symbol	NULL		1312507						
ANR	1312544	Symbol	head -> data		1312507						
ANR	1312545	Symbol	* head		1312507						
ANR	1312546	Symbol	llist -> head		1312507						
ANR	1312547	Symbol	llist		1312507						
ANR	1312548	DeclStmt									
ANR	1312549	Decl							void	void *	data
ANR	1312550	DeclStmt									
ANR	1312551	Decl							spl_ptr_llist_element	spl_ptr_llist_element *	head
ANR	1312552	DeclStmt									
ANR	1312553	Decl							spl_ptr_llist_element	spl_ptr_llist_element *	current
ANR	1312554	Decl							spl_ptr_llist_element	spl_ptr_llist_element *	next
ANR	1312555	DeclStmt									
ANR	1312556	Decl							spl_ptr_llist_ctor_func	spl_ptr_llist_ctor_func	ctor
ANR	1312557	DeclStmt									
ANR	1312558	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1312559	DeclStmt									
ANR	1312560	Decl							zval	zval *	tmp
ANR	1312561	DeclStmt									
ANR	1312562	Decl							zend_object_iterator	"zend_object_iterator * ( zend_class_entry * ce , zval * object , int by_ref TSRMLS_DC )"	spl_dllist_get_iterator
ANR	1312563	Function	spl_dllist_object_new_ex	367:0:8669:12025							
ANR	1312564	FunctionDef	"spl_dllist_object_new_ex (zend_class_entry * class_type , spl_dllist_object * * obj , zval * orig , int clone_orig TSRMLS_DC)"		1312563	0					
ANR	1312565	CompoundStatement		368:0:8822:12025	1312563	0					
ANR	1312566	IdentifierDeclStatement	zend_object_value retval = { 0 } ;	369:1:8825:8856	1312563	0	True				
ANR	1312567	IdentifierDecl	retval = { 0 }		1312563	0					
ANR	1312568	IdentifierDeclType	zend_object_value		1312563	0					
ANR	1312569	Identifier	retval		1312563	1					
ANR	1312570	AssignmentExpression	retval = { 0 }		1312563	2		=			
ANR	1312571	Identifier	retval		1312563	0					
ANR	1312572	InitializerList	0		1312563	1					
ANR	1312573	PrimaryExpression	0		1312563	0					
ANR	1312574	IdentifierDeclStatement	spl_dllist_object * intern ;	370:1:8859:8884	1312563	1	True				
ANR	1312575	IdentifierDecl	* intern		1312563	0					
ANR	1312576	IdentifierDeclType	spl_dllist_object *		1312563	0					
ANR	1312577	Identifier	intern		1312563	1					
ANR	1312578	IdentifierDeclStatement	zend_class_entry * parent = class_type ;	371:1:8887:8925	1312563	2	True				
ANR	1312579	IdentifierDecl	* parent = class_type		1312563	0					
ANR	1312580	IdentifierDeclType	zend_class_entry *		1312563	0					
ANR	1312581	Identifier	parent		1312563	1					
ANR	1312582	AssignmentExpression	* parent = class_type		1312563	2		=			
ANR	1312583	Identifier	class_type		1312563	0					
ANR	1312584	Identifier	class_type		1312563	1					
ANR	1312585	IdentifierDeclStatement	int inherited = 0 ;	372:1:8928:8960	1312563	3	True				
ANR	1312586	IdentifierDecl	inherited = 0		1312563	0					
ANR	1312587	IdentifierDeclType	int		1312563	0					
ANR	1312588	Identifier	inherited		1312563	1					
ANR	1312589	AssignmentExpression	inherited = 0		1312563	2		=			
ANR	1312590	Identifier	inherited		1312563	0					
ANR	1312591	PrimaryExpression	0		1312563	1					
ANR	1312592	ExpressionStatement	"intern = ecalloc ( 1 , sizeof ( spl_dllist_object ) )"	374:1:8964:9010	1312563	4	True				
ANR	1312593	AssignmentExpression	"intern = ecalloc ( 1 , sizeof ( spl_dllist_object ) )"		1312563	0		=			
ANR	1312594	Identifier	intern		1312563	0					
ANR	1312595	CallExpression	"ecalloc ( 1 , sizeof ( spl_dllist_object ) )"		1312563	1					
ANR	1312596	Callee	ecalloc		1312563	0					
ANR	1312597	Identifier	ecalloc		1312563	0					
ANR	1312598	ArgumentList	1		1312563	1					
ANR	1312599	Argument	1		1312563	0					
ANR	1312600	PrimaryExpression	1		1312563	0					
ANR	1312601	Argument	sizeof ( spl_dllist_object )		1312563	1					
ANR	1312602	SizeofExpression	sizeof ( spl_dllist_object )		1312563	0					
ANR	1312603	Sizeof	sizeof		1312563	0					
ANR	1312604	SizeofOperand	spl_dllist_object		1312563	1					
ANR	1312605	ExpressionStatement	* obj = intern	375:1:9013:9026	1312563	5	True				
ANR	1312606	AssignmentExpression	* obj = intern		1312563	0		=			
ANR	1312607	UnaryOperationExpression	* obj		1312563	0					
ANR	1312608	UnaryOperator	*		1312563	0					
ANR	1312609	Identifier	obj		1312563	1					
ANR	1312610	Identifier	intern		1312563	1					
ANR	1312611	ExpressionStatement	ALLOC_INIT_ZVAL ( intern -> retval )	376:1:9029:9060	1312563	6	True				
ANR	1312612	CallExpression	ALLOC_INIT_ZVAL ( intern -> retval )		1312563	0					
ANR	1312613	Callee	ALLOC_INIT_ZVAL		1312563	0					
ANR	1312614	Identifier	ALLOC_INIT_ZVAL		1312563	0					
ANR	1312615	ArgumentList	intern -> retval		1312563	1					
ANR	1312616	Argument	intern -> retval		1312563	0					
ANR	1312617	PtrMemberAccess	intern -> retval		1312563	0					
ANR	1312618	Identifier	intern		1312563	0					
ANR	1312619	Identifier	retval		1312563	1					
ANR	1312620	Statement	zend_object_std_init	378:1:9064:9083	1312563	7	True				
ANR	1312621	Statement	(	378:21:9084:9084	1312563	8	True				
ANR	1312622	Statement	&	378:22:9085:9085	1312563	9	True				
ANR	1312623	Statement	intern	378:23:9086:9091	1312563	10	True				
ANR	1312624	Statement	->	378:29:9092:9093	1312563	11	True				
ANR	1312625	Statement	std	378:31:9094:9096	1312563	12	True				
ANR	1312626	Statement	","	378:34:9097:9097	1312563	13	True				
ANR	1312627	Statement	class_type	378:36:9099:9108	1312563	14	True				
ANR	1312628	Statement	TSRMLS_CC	378:47:9110:9118	1312563	15	True				
ANR	1312629	Statement	)	378:56:9119:9119	1312563	16	True				
ANR	1312630	ExpressionStatement		378:57:9120:9120	1312563	17	True				
ANR	1312631	ExpressionStatement	"object_properties_init ( & intern -> std , class_type )"	379:1:9123:9171	1312563	18	True				
ANR	1312632	CallExpression	"object_properties_init ( & intern -> std , class_type )"		1312563	0					
ANR	1312633	Callee	object_properties_init		1312563	0					
ANR	1312634	Identifier	object_properties_init		1312563	0					
ANR	1312635	ArgumentList	& intern -> std		1312563	1					
ANR	1312636	Argument	& intern -> std		1312563	0					
ANR	1312637	UnaryOperationExpression	& intern -> std		1312563	0					
ANR	1312638	UnaryOperator	&		1312563	0					
ANR	1312639	PtrMemberAccess	intern -> std		1312563	1					
ANR	1312640	Identifier	intern		1312563	0					
ANR	1312641	Identifier	std		1312563	1					
ANR	1312642	Argument	class_type		1312563	1					
ANR	1312643	Identifier	class_type		1312563	0					
ANR	1312644	ExpressionStatement	intern -> flags = 0	381:1:9175:9192	1312563	19	True				
ANR	1312645	AssignmentExpression	intern -> flags = 0		1312563	0		=			
ANR	1312646	PtrMemberAccess	intern -> flags		1312563	0					
ANR	1312647	Identifier	intern		1312563	0					
ANR	1312648	Identifier	flags		1312563	1					
ANR	1312649	PrimaryExpression	0		1312563	1					
ANR	1312650	ExpressionStatement	intern -> traverse_position = 0	382:1:9195:9224	1312563	20	True				
ANR	1312651	AssignmentExpression	intern -> traverse_position = 0		1312563	0		=			
ANR	1312652	PtrMemberAccess	intern -> traverse_position		1312563	0					
ANR	1312653	Identifier	intern		1312563	0					
ANR	1312654	Identifier	traverse_position		1312563	1					
ANR	1312655	PrimaryExpression	0		1312563	1					
ANR	1312656	ExpressionStatement	intern -> debug_info = NULL	383:1:9227:9252	1312563	21	True				
ANR	1312657	AssignmentExpression	intern -> debug_info = NULL		1312563	0		=			
ANR	1312658	PtrMemberAccess	intern -> debug_info		1312563	0					
ANR	1312659	Identifier	intern		1312563	0					
ANR	1312660	Identifier	debug_info		1312563	1					
ANR	1312661	Identifier	NULL		1312563	1					
ANR	1312662	IfStatement	if ( orig )		1312563	22					
ANR	1312663	Condition	orig	385:5:9260:9263	1312563	0	True				
ANR	1312664	Identifier	orig		1312563	0					
ANR	1312665	CompoundStatement		18:11:443:443	1312563	1					
ANR	1312666	Statement	spl_dllist_object	386:2:9270:9286	1312563	0	True				
ANR	1312667	Statement	*	386:20:9288:9288	1312563	1	True				
ANR	1312668	Statement	other	386:21:9289:9293	1312563	2	True				
ANR	1312669	Statement	=	386:27:9295:9295	1312563	3	True				
ANR	1312670	Statement	(	386:29:9297:9297	1312563	4	True				
ANR	1312671	Statement	spl_dllist_object	386:30:9298:9314	1312563	5	True				
ANR	1312672	Statement	*	386:47:9315:9315	1312563	6	True				
ANR	1312673	Statement	)	386:48:9316:9316	1312563	7	True				
ANR	1312674	Statement	zend_object_store_get_object	386:49:9317:9344	1312563	8	True				
ANR	1312675	Statement	(	386:77:9345:9345	1312563	9	True				
ANR	1312676	Statement	orig	386:78:9346:9349	1312563	10	True				
ANR	1312677	Statement	TSRMLS_CC	386:83:9351:9359	1312563	11	True				
ANR	1312678	Statement	)	386:92:9360:9360	1312563	12	True				
ANR	1312679	ExpressionStatement		386:93:9361:9361	1312563	13	True				
ANR	1312680	ExpressionStatement	intern -> ce_get_iterator = other -> ce_get_iterator	387:2:9365:9413	1312563	14	True				
ANR	1312681	AssignmentExpression	intern -> ce_get_iterator = other -> ce_get_iterator		1312563	0		=			
ANR	1312682	PtrMemberAccess	intern -> ce_get_iterator		1312563	0					
ANR	1312683	Identifier	intern		1312563	0					
ANR	1312684	Identifier	ce_get_iterator		1312563	1					
ANR	1312685	PtrMemberAccess	other -> ce_get_iterator		1312563	1					
ANR	1312686	Identifier	other		1312563	0					
ANR	1312687	Identifier	ce_get_iterator		1312563	1					
ANR	1312688	IfStatement	if ( clone_orig )		1312563	15					
ANR	1312689	Condition	clone_orig	389:6:9422:9431	1312563	0	True				
ANR	1312690	Identifier	clone_orig		1312563	0					
ANR	1312691	CompoundStatement		22:18:611:611	1312563	1					
ANR	1312692	ExpressionStatement	"intern -> llist = ( spl_ptr_llist * ) spl_ptr_llist_init ( other -> llist -> ctor , other -> llist -> dtor )"	390:3:9439:9530	1312563	0	True				
ANR	1312693	AssignmentExpression	"intern -> llist = ( spl_ptr_llist * ) spl_ptr_llist_init ( other -> llist -> ctor , other -> llist -> dtor )"		1312563	0		=			
ANR	1312694	PtrMemberAccess	intern -> llist		1312563	0					
ANR	1312695	Identifier	intern		1312563	0					
ANR	1312696	Identifier	llist		1312563	1					
ANR	1312697	CastExpression	"( spl_ptr_llist * ) spl_ptr_llist_init ( other -> llist -> ctor , other -> llist -> dtor )"		1312563	1					
ANR	1312698	CastTarget	spl_ptr_llist *		1312563	0					
ANR	1312699	CallExpression	"spl_ptr_llist_init ( other -> llist -> ctor , other -> llist -> dtor )"		1312563	1					
ANR	1312700	Callee	spl_ptr_llist_init		1312563	0					
ANR	1312701	Identifier	spl_ptr_llist_init		1312563	0					
ANR	1312702	ArgumentList	other -> llist -> ctor		1312563	1					
ANR	1312703	Argument	other -> llist -> ctor		1312563	0					
ANR	1312704	PtrMemberAccess	other -> llist -> ctor		1312563	0					
ANR	1312705	PtrMemberAccess	other -> llist		1312563	0					
ANR	1312706	Identifier	other		1312563	0					
ANR	1312707	Identifier	llist		1312563	1					
ANR	1312708	Identifier	ctor		1312563	1					
ANR	1312709	Argument	other -> llist -> dtor		1312563	1					
ANR	1312710	PtrMemberAccess	other -> llist -> dtor		1312563	0					
ANR	1312711	PtrMemberAccess	other -> llist		1312563	0					
ANR	1312712	Identifier	other		1312563	0					
ANR	1312713	Identifier	llist		1312563	1					
ANR	1312714	Identifier	dtor		1312563	1					
ANR	1312715	Statement	spl_ptr_llist_copy	391:3:9535:9552	1312563	1	True				
ANR	1312716	Statement	(	391:21:9553:9553	1312563	2	True				
ANR	1312717	Statement	other	391:22:9554:9558	1312563	3	True				
ANR	1312718	Statement	->	391:27:9559:9560	1312563	4	True				
ANR	1312719	Statement	llist	391:29:9561:9565	1312563	5	True				
ANR	1312720	Statement	","	391:34:9566:9566	1312563	6	True				
ANR	1312721	Statement	intern	391:36:9568:9573	1312563	7	True				
ANR	1312722	Statement	->	391:42:9574:9575	1312563	8	True				
ANR	1312723	Statement	llist	391:44:9576:9580	1312563	9	True				
ANR	1312724	Statement	TSRMLS_CC	391:50:9582:9590	1312563	10	True				
ANR	1312725	Statement	)	391:59:9591:9591	1312563	11	True				
ANR	1312726	ExpressionStatement		391:60:9592:9592	1312563	12	True				
ANR	1312727	ExpressionStatement	intern -> traverse_pointer = intern -> llist -> head	392:3:9597:9644	1312563	13	True				
ANR	1312728	AssignmentExpression	intern -> traverse_pointer = intern -> llist -> head		1312563	0		=			
ANR	1312729	PtrMemberAccess	intern -> traverse_pointer		1312563	0					
ANR	1312730	Identifier	intern		1312563	0					
ANR	1312731	Identifier	traverse_pointer		1312563	1					
ANR	1312732	PtrMemberAccess	intern -> llist -> head		1312563	1					
ANR	1312733	PtrMemberAccess	intern -> llist		1312563	0					
ANR	1312734	Identifier	intern		1312563	0					
ANR	1312735	Identifier	llist		1312563	1					
ANR	1312736	Identifier	head		1312563	1					
ANR	1312737	ExpressionStatement	SPL_LLIST_CHECK_ADDREF ( intern -> traverse_pointer )	393:3:9649:9697	1312563	14	True				
ANR	1312738	CallExpression	SPL_LLIST_CHECK_ADDREF ( intern -> traverse_pointer )		1312563	0					
ANR	1312739	Callee	SPL_LLIST_CHECK_ADDREF		1312563	0					
ANR	1312740	Identifier	SPL_LLIST_CHECK_ADDREF		1312563	0					
ANR	1312741	ArgumentList	intern -> traverse_pointer		1312563	1					
ANR	1312742	Argument	intern -> traverse_pointer		1312563	0					
ANR	1312743	PtrMemberAccess	intern -> traverse_pointer		1312563	0					
ANR	1312744	Identifier	intern		1312563	0					
ANR	1312745	Identifier	traverse_pointer		1312563	1					
ANR	1312746	ElseStatement	else		1312563	0					
ANR	1312747	CompoundStatement		27:9:885:885	1312563	0					
ANR	1312748	ExpressionStatement	intern -> llist = other -> llist	395:3:9713:9741	1312563	0	True				
ANR	1312749	AssignmentExpression	intern -> llist = other -> llist		1312563	0		=			
ANR	1312750	PtrMemberAccess	intern -> llist		1312563	0					
ANR	1312751	Identifier	intern		1312563	0					
ANR	1312752	Identifier	llist		1312563	1					
ANR	1312753	PtrMemberAccess	other -> llist		1312563	1					
ANR	1312754	Identifier	other		1312563	0					
ANR	1312755	Identifier	llist		1312563	1					
ANR	1312756	ExpressionStatement	intern -> traverse_pointer = intern -> llist -> head	396:3:9746:9793	1312563	1	True				
ANR	1312757	AssignmentExpression	intern -> traverse_pointer = intern -> llist -> head		1312563	0		=			
ANR	1312758	PtrMemberAccess	intern -> traverse_pointer		1312563	0					
ANR	1312759	Identifier	intern		1312563	0					
ANR	1312760	Identifier	traverse_pointer		1312563	1					
ANR	1312761	PtrMemberAccess	intern -> llist -> head		1312563	1					
ANR	1312762	PtrMemberAccess	intern -> llist		1312563	0					
ANR	1312763	Identifier	intern		1312563	0					
ANR	1312764	Identifier	llist		1312563	1					
ANR	1312765	Identifier	head		1312563	1					
ANR	1312766	ExpressionStatement	SPL_LLIST_CHECK_ADDREF ( intern -> traverse_pointer )	397:3:9798:9846	1312563	2	True				
ANR	1312767	CallExpression	SPL_LLIST_CHECK_ADDREF ( intern -> traverse_pointer )		1312563	0					
ANR	1312768	Callee	SPL_LLIST_CHECK_ADDREF		1312563	0					
ANR	1312769	Identifier	SPL_LLIST_CHECK_ADDREF		1312563	0					
ANR	1312770	ArgumentList	intern -> traverse_pointer		1312563	1					
ANR	1312771	Argument	intern -> traverse_pointer		1312563	0					
ANR	1312772	PtrMemberAccess	intern -> traverse_pointer		1312563	0					
ANR	1312773	Identifier	intern		1312563	0					
ANR	1312774	Identifier	traverse_pointer		1312563	1					
ANR	1312775	ExpressionStatement	intern -> flags = other -> flags	400:2:9855:9883	1312563	16	True				
ANR	1312776	AssignmentExpression	intern -> flags = other -> flags		1312563	0		=			
ANR	1312777	PtrMemberAccess	intern -> flags		1312563	0					
ANR	1312778	Identifier	intern		1312563	0					
ANR	1312779	Identifier	flags		1312563	1					
ANR	1312780	PtrMemberAccess	other -> flags		1312563	1					
ANR	1312781	Identifier	other		1312563	0					
ANR	1312782	Identifier	flags		1312563	1					
ANR	1312783	ElseStatement	else		1312563	0					
ANR	1312784	CompoundStatement		34:8:1070:1070	1312563	0					
ANR	1312785	ExpressionStatement	"intern -> llist = ( spl_ptr_llist * ) spl_ptr_llist_init ( spl_ptr_llist_zval_ctor , spl_ptr_llist_zval_dtor )"	402:2:9897:9998	1312563	0	True				
ANR	1312786	AssignmentExpression	"intern -> llist = ( spl_ptr_llist * ) spl_ptr_llist_init ( spl_ptr_llist_zval_ctor , spl_ptr_llist_zval_dtor )"		1312563	0		=			
ANR	1312787	PtrMemberAccess	intern -> llist		1312563	0					
ANR	1312788	Identifier	intern		1312563	0					
ANR	1312789	Identifier	llist		1312563	1					
ANR	1312790	CastExpression	"( spl_ptr_llist * ) spl_ptr_llist_init ( spl_ptr_llist_zval_ctor , spl_ptr_llist_zval_dtor )"		1312563	1					
ANR	1312791	CastTarget	spl_ptr_llist *		1312563	0					
ANR	1312792	CallExpression	"spl_ptr_llist_init ( spl_ptr_llist_zval_ctor , spl_ptr_llist_zval_dtor )"		1312563	1					
ANR	1312793	Callee	spl_ptr_llist_init		1312563	0					
ANR	1312794	Identifier	spl_ptr_llist_init		1312563	0					
ANR	1312795	ArgumentList	spl_ptr_llist_zval_ctor		1312563	1					
ANR	1312796	Argument	spl_ptr_llist_zval_ctor		1312563	0					
ANR	1312797	Identifier	spl_ptr_llist_zval_ctor		1312563	0					
ANR	1312798	Argument	spl_ptr_llist_zval_dtor		1312563	1					
ANR	1312799	Identifier	spl_ptr_llist_zval_dtor		1312563	0					
ANR	1312800	ExpressionStatement	intern -> traverse_pointer = intern -> llist -> head	403:2:10002:10049	1312563	1	True				
ANR	1312801	AssignmentExpression	intern -> traverse_pointer = intern -> llist -> head		1312563	0		=			
ANR	1312802	PtrMemberAccess	intern -> traverse_pointer		1312563	0					
ANR	1312803	Identifier	intern		1312563	0					
ANR	1312804	Identifier	traverse_pointer		1312563	1					
ANR	1312805	PtrMemberAccess	intern -> llist -> head		1312563	1					
ANR	1312806	PtrMemberAccess	intern -> llist		1312563	0					
ANR	1312807	Identifier	intern		1312563	0					
ANR	1312808	Identifier	llist		1312563	1					
ANR	1312809	Identifier	head		1312563	1					
ANR	1312810	ExpressionStatement	SPL_LLIST_CHECK_ADDREF ( intern -> traverse_pointer )	404:2:10053:10101	1312563	2	True				
ANR	1312811	CallExpression	SPL_LLIST_CHECK_ADDREF ( intern -> traverse_pointer )		1312563	0					
ANR	1312812	Callee	SPL_LLIST_CHECK_ADDREF		1312563	0					
ANR	1312813	Identifier	SPL_LLIST_CHECK_ADDREF		1312563	0					
ANR	1312814	ArgumentList	intern -> traverse_pointer		1312563	1					
ANR	1312815	Argument	intern -> traverse_pointer		1312563	0					
ANR	1312816	PtrMemberAccess	intern -> traverse_pointer		1312563	0					
ANR	1312817	Identifier	intern		1312563	0					
ANR	1312818	Identifier	traverse_pointer		1312563	1					
ANR	1312819	WhileStatement	while ( parent )		1312563	23					
ANR	1312820	Condition	parent	407:8:10115:10120	1312563	0	True				
ANR	1312821	Identifier	parent		1312563	0					
ANR	1312822	CompoundStatement		40:16:1300:1300	1312563	1					
ANR	1312823	IfStatement	if ( parent == spl_ce_SplStack )		1312563	0					
ANR	1312824	Condition	parent == spl_ce_SplStack	408:6:10131:10155	1312563	0	True				
ANR	1312825	EqualityExpression	parent == spl_ce_SplStack		1312563	0		==			
ANR	1312826	Identifier	parent		1312563	0					
ANR	1312827	Identifier	spl_ce_SplStack		1312563	1					
ANR	1312828	CompoundStatement		41:33:1335:1335	1312563	1					
ANR	1312829	ExpressionStatement	intern -> flags |= ( SPL_DLLIST_IT_FIX | SPL_DLLIST_IT_LIFO )	409:3:10163:10220	1312563	0	True				
ANR	1312830	AssignmentExpression	intern -> flags |= ( SPL_DLLIST_IT_FIX | SPL_DLLIST_IT_LIFO )		1312563	0		|=			
ANR	1312831	PtrMemberAccess	intern -> flags		1312563	0					
ANR	1312832	Identifier	intern		1312563	0					
ANR	1312833	Identifier	flags		1312563	1					
ANR	1312834	InclusiveOrExpression	SPL_DLLIST_IT_FIX | SPL_DLLIST_IT_LIFO		1312563	1		|			
ANR	1312835	Identifier	SPL_DLLIST_IT_FIX		1312563	0					
ANR	1312836	Identifier	SPL_DLLIST_IT_LIFO		1312563	1					
ANR	1312837	ExpressionStatement	retval . handlers = & spl_handler_SplDoublyLinkedList	410:3:10225:10275	1312563	1	True				
ANR	1312838	AssignmentExpression	retval . handlers = & spl_handler_SplDoublyLinkedList		1312563	0		=			
ANR	1312839	MemberAccess	retval . handlers		1312563	0					
ANR	1312840	Identifier	retval		1312563	0					
ANR	1312841	Identifier	handlers		1312563	1					
ANR	1312842	UnaryOperationExpression	& spl_handler_SplDoublyLinkedList		1312563	1					
ANR	1312843	UnaryOperator	&		1312563	0					
ANR	1312844	Identifier	spl_handler_SplDoublyLinkedList		1312563	1					
ANR	1312845	ElseStatement	else		1312563	0					
ANR	1312846	IfStatement	if ( parent == spl_ce_SplQueue )		1312563	0					
ANR	1312847	Condition	parent == spl_ce_SplQueue	411:13:10290:10314	1312563	0	True				
ANR	1312848	EqualityExpression	parent == spl_ce_SplQueue		1312563	0		==			
ANR	1312849	Identifier	parent		1312563	0					
ANR	1312850	Identifier	spl_ce_SplQueue		1312563	1					
ANR	1312851	CompoundStatement		44:40:1494:1494	1312563	1					
ANR	1312852	ExpressionStatement	intern -> flags |= SPL_DLLIST_IT_FIX	412:3:10322:10356	1312563	0	True				
ANR	1312853	AssignmentExpression	intern -> flags |= SPL_DLLIST_IT_FIX		1312563	0		|=			
ANR	1312854	PtrMemberAccess	intern -> flags		1312563	0					
ANR	1312855	Identifier	intern		1312563	0					
ANR	1312856	Identifier	flags		1312563	1					
ANR	1312857	Identifier	SPL_DLLIST_IT_FIX		1312563	1					
ANR	1312858	ExpressionStatement	retval . handlers = & spl_handler_SplDoublyLinkedList	413:3:10361:10411	1312563	1	True				
ANR	1312859	AssignmentExpression	retval . handlers = & spl_handler_SplDoublyLinkedList		1312563	0		=			
ANR	1312860	MemberAccess	retval . handlers		1312563	0					
ANR	1312861	Identifier	retval		1312563	0					
ANR	1312862	Identifier	handlers		1312563	1					
ANR	1312863	UnaryOperationExpression	& spl_handler_SplDoublyLinkedList		1312563	1					
ANR	1312864	UnaryOperator	&		1312563	0					
ANR	1312865	Identifier	spl_handler_SplDoublyLinkedList		1312563	1					
ANR	1312866	IfStatement	if ( parent == spl_ce_SplDoublyLinkedList )		1312563	1					
ANR	1312867	Condition	parent == spl_ce_SplDoublyLinkedList	416:6:10424:10459	1312563	0	True				
ANR	1312868	EqualityExpression	parent == spl_ce_SplDoublyLinkedList		1312563	0		==			
ANR	1312869	Identifier	parent		1312563	0					
ANR	1312870	Identifier	spl_ce_SplDoublyLinkedList		1312563	1					
ANR	1312871	CompoundStatement		49:44:1639:1639	1312563	1					
ANR	1312872	ExpressionStatement	retval . handlers = & spl_handler_SplDoublyLinkedList	417:3:10467:10517	1312563	0	True				
ANR	1312873	AssignmentExpression	retval . handlers = & spl_handler_SplDoublyLinkedList		1312563	0		=			
ANR	1312874	MemberAccess	retval . handlers		1312563	0					
ANR	1312875	Identifier	retval		1312563	0					
ANR	1312876	Identifier	handlers		1312563	1					
ANR	1312877	UnaryOperationExpression	& spl_handler_SplDoublyLinkedList		1312563	1					
ANR	1312878	UnaryOperator	&		1312563	0					
ANR	1312879	Identifier	spl_handler_SplDoublyLinkedList		1312563	1					
ANR	1312880	BreakStatement	break ;	418:3:10522:10527	1312563	1	True				
ANR	1312881	ExpressionStatement	parent = parent -> parent	421:2:10536:10559	1312563	2	True				
ANR	1312882	AssignmentExpression	parent = parent -> parent		1312563	0		=			
ANR	1312883	Identifier	parent		1312563	0					
ANR	1312884	PtrMemberAccess	parent -> parent		1312563	1					
ANR	1312885	Identifier	parent		1312563	0					
ANR	1312886	Identifier	parent		1312563	1					
ANR	1312887	ExpressionStatement	inherited = 1	422:2:10563:10576	1312563	3	True				
ANR	1312888	AssignmentExpression	inherited = 1		1312563	0		=			
ANR	1312889	Identifier	inherited		1312563	0					
ANR	1312890	PrimaryExpression	1		1312563	1					
ANR	1312891	Statement	retval	425:1:10583:10588	1312563	24	True				
ANR	1312892	Statement	.	425:7:10589:10589	1312563	25	True				
ANR	1312893	Statement	handle	425:8:10590:10595	1312563	26	True				
ANR	1312894	Statement	=	425:15:10597:10597	1312563	27	True				
ANR	1312895	Statement	zend_objects_store_put	425:17:10599:10620	1312563	28	True				
ANR	1312896	Statement	(	425:39:10621:10621	1312563	29	True				
ANR	1312897	Statement	intern	425:40:10622:10627	1312563	30	True				
ANR	1312898	Statement	","	425:46:10628:10628	1312563	31	True				
ANR	1312899	Statement	(	425:48:10630:10630	1312563	32	True				
ANR	1312900	Statement	zend_objects_store_dtor_t	425:49:10631:10655	1312563	33	True				
ANR	1312901	Statement	)	425:74:10656:10656	1312563	34	True				
ANR	1312902	Statement	zend_objects_destroy_object	425:75:10657:10683	1312563	35	True				
ANR	1312903	Statement	","	425:102:10684:10684	1312563	36	True				
ANR	1312904	Statement	spl_dllist_object_free_storage	425:104:10686:10715	1312563	37	True				
ANR	1312905	Statement	","	425:134:10716:10716	1312563	38	True				
ANR	1312906	Statement	NULL	425:136:10718:10721	1312563	39	True				
ANR	1312907	Statement	TSRMLS_CC	425:141:10723:10731	1312563	40	True				
ANR	1312908	Statement	)	425:150:10732:10732	1312563	41	True				
ANR	1312909	ExpressionStatement		425:151:10733:10733	1312563	42	True				
ANR	1312910	IfStatement	if ( ! parent )		1312563	43					
ANR	1312911	Condition	! parent	427:5:10741:10747	1312563	0	True				
ANR	1312912	UnaryOperationExpression	! parent		1312563	0					
ANR	1312913	UnaryOperator	!		1312563	0					
ANR	1312914	Identifier	parent		1312563	1					
ANR	1312915	CompoundStatement		60:14:1927:1927	1312563	1					
ANR	1312916	Statement	php_error_docref	428:2:10783:10798	1312563	0	True				
ANR	1312917	Statement	(	428:18:10799:10799	1312563	1	True				
ANR	1312918	Statement	NULL	428:19:10800:10803	1312563	2	True				
ANR	1312919	Statement	TSRMLS_CC	428:24:10805:10813	1312563	3	True				
ANR	1312920	Statement	","	428:33:10814:10814	1312563	4	True				
ANR	1312921	Statement	E_COMPILE_ERROR	428:35:10816:10830	1312563	5	True				
ANR	1312922	Statement	","	428:50:10831:10831	1312563	6	True				
ANR	1312923	Statement	"""Internal compiler error, Class is not child of SplDoublyLinkedList"""	428:52:10833:10900	1312563	7	True				
ANR	1312924	Statement	)	428:120:10901:10901	1312563	8	True				
ANR	1312925	ExpressionStatement		428:121:10902:10902	1312563	9	True				
ANR	1312926	IfStatement	if ( inherited )		1312563	44					
ANR	1312927	Condition	inherited	430:5:10912:10920	1312563	0	True				
ANR	1312928	Identifier	inherited		1312563	0					
ANR	1312929	CompoundStatement		63:16:2100:2100	1312563	1					
ANR	1312930	ExpressionStatement	"zend_hash_find ( & class_type -> function_table , ""offsetget"" , sizeof ( ""offsetget"" ) , ( void * * ) & intern -> fptr_offset_get )"	431:2:10927:11046	1312563	0	True				
ANR	1312931	CallExpression	"zend_hash_find ( & class_type -> function_table , ""offsetget"" , sizeof ( ""offsetget"" ) , ( void * * ) & intern -> fptr_offset_get )"		1312563	0					
ANR	1312932	Callee	zend_hash_find		1312563	0					
ANR	1312933	Identifier	zend_hash_find		1312563	0					
ANR	1312934	ArgumentList	& class_type -> function_table		1312563	1					
ANR	1312935	Argument	& class_type -> function_table		1312563	0					
ANR	1312936	UnaryOperationExpression	& class_type -> function_table		1312563	0					
ANR	1312937	UnaryOperator	&		1312563	0					
ANR	1312938	PtrMemberAccess	class_type -> function_table		1312563	1					
ANR	1312939	Identifier	class_type		1312563	0					
ANR	1312940	Identifier	function_table		1312563	1					
ANR	1312941	Argument	"""offsetget"""		1312563	1					
ANR	1312942	PrimaryExpression	"""offsetget"""		1312563	0					
ANR	1312943	Argument	"sizeof ( ""offsetget"" )"		1312563	2					
ANR	1312944	SizeofExpression	"sizeof ( ""offsetget"" )"		1312563	0					
ANR	1312945	Sizeof	sizeof		1312563	0					
ANR	1312946	PrimaryExpression	"""offsetget"""		1312563	1					
ANR	1312947	Argument	( void * * ) & intern -> fptr_offset_get		1312563	3					
ANR	1312948	CastExpression	( void * * ) & intern -> fptr_offset_get		1312563	0					
ANR	1312949	CastTarget	void * *		1312563	0					
ANR	1312950	UnaryOperationExpression	& intern -> fptr_offset_get		1312563	1					
ANR	1312951	UnaryOperator	&		1312563	0					
ANR	1312952	PtrMemberAccess	intern -> fptr_offset_get		1312563	1					
ANR	1312953	Identifier	intern		1312563	0					
ANR	1312954	Identifier	fptr_offset_get		1312563	1					
ANR	1312955	IfStatement	if ( intern -> fptr_offset_get -> common . scope == parent )		1312563	1					
ANR	1312956	Condition	intern -> fptr_offset_get -> common . scope == parent	432:6:11054:11100	1312563	0	True				
ANR	1312957	EqualityExpression	intern -> fptr_offset_get -> common . scope == parent		1312563	0		==			
ANR	1312958	MemberAccess	intern -> fptr_offset_get -> common . scope		1312563	0					
ANR	1312959	PtrMemberAccess	intern -> fptr_offset_get -> common		1312563	0					
ANR	1312960	PtrMemberAccess	intern -> fptr_offset_get		1312563	0					
ANR	1312961	Identifier	intern		1312563	0					
ANR	1312962	Identifier	fptr_offset_get		1312563	1					
ANR	1312963	Identifier	common		1312563	1					
ANR	1312964	Identifier	scope		1312563	1					
ANR	1312965	Identifier	parent		1312563	1					
ANR	1312966	CompoundStatement		65:55:2280:2280	1312563	1					
ANR	1312967	ExpressionStatement	intern -> fptr_offset_get = NULL	433:3:11108:11138	1312563	0	True				
ANR	1312968	AssignmentExpression	intern -> fptr_offset_get = NULL		1312563	0		=			
ANR	1312969	PtrMemberAccess	intern -> fptr_offset_get		1312563	0					
ANR	1312970	Identifier	intern		1312563	0					
ANR	1312971	Identifier	fptr_offset_get		1312563	1					
ANR	1312972	Identifier	NULL		1312563	1					
ANR	1312973	ExpressionStatement	"zend_hash_find ( & class_type -> function_table , ""offsetset"" , sizeof ( ""offsetset"" ) , ( void * * ) & intern -> fptr_offset_set )"	435:2:11146:11265	1312563	2	True				
ANR	1312974	CallExpression	"zend_hash_find ( & class_type -> function_table , ""offsetset"" , sizeof ( ""offsetset"" ) , ( void * * ) & intern -> fptr_offset_set )"		1312563	0					
ANR	1312975	Callee	zend_hash_find		1312563	0					
ANR	1312976	Identifier	zend_hash_find		1312563	0					
ANR	1312977	ArgumentList	& class_type -> function_table		1312563	1					
ANR	1312978	Argument	& class_type -> function_table		1312563	0					
ANR	1312979	UnaryOperationExpression	& class_type -> function_table		1312563	0					
ANR	1312980	UnaryOperator	&		1312563	0					
ANR	1312981	PtrMemberAccess	class_type -> function_table		1312563	1					
ANR	1312982	Identifier	class_type		1312563	0					
ANR	1312983	Identifier	function_table		1312563	1					
ANR	1312984	Argument	"""offsetset"""		1312563	1					
ANR	1312985	PrimaryExpression	"""offsetset"""		1312563	0					
ANR	1312986	Argument	"sizeof ( ""offsetset"" )"		1312563	2					
ANR	1312987	SizeofExpression	"sizeof ( ""offsetset"" )"		1312563	0					
ANR	1312988	Sizeof	sizeof		1312563	0					
ANR	1312989	PrimaryExpression	"""offsetset"""		1312563	1					
ANR	1312990	Argument	( void * * ) & intern -> fptr_offset_set		1312563	3					
ANR	1312991	CastExpression	( void * * ) & intern -> fptr_offset_set		1312563	0					
ANR	1312992	CastTarget	void * *		1312563	0					
ANR	1312993	UnaryOperationExpression	& intern -> fptr_offset_set		1312563	1					
ANR	1312994	UnaryOperator	&		1312563	0					
ANR	1312995	PtrMemberAccess	intern -> fptr_offset_set		1312563	1					
ANR	1312996	Identifier	intern		1312563	0					
ANR	1312997	Identifier	fptr_offset_set		1312563	1					
ANR	1312998	IfStatement	if ( intern -> fptr_offset_set -> common . scope == parent )		1312563	3					
ANR	1312999	Condition	intern -> fptr_offset_set -> common . scope == parent	436:6:11273:11319	1312563	0	True				
ANR	1313000	EqualityExpression	intern -> fptr_offset_set -> common . scope == parent		1312563	0		==			
ANR	1313001	MemberAccess	intern -> fptr_offset_set -> common . scope		1312563	0					
ANR	1313002	PtrMemberAccess	intern -> fptr_offset_set -> common		1312563	0					
ANR	1313003	PtrMemberAccess	intern -> fptr_offset_set		1312563	0					
ANR	1313004	Identifier	intern		1312563	0					
ANR	1313005	Identifier	fptr_offset_set		1312563	1					
ANR	1313006	Identifier	common		1312563	1					
ANR	1313007	Identifier	scope		1312563	1					
ANR	1313008	Identifier	parent		1312563	1					
ANR	1313009	CompoundStatement		69:55:2499:2499	1312563	1					
ANR	1313010	ExpressionStatement	intern -> fptr_offset_set = NULL	437:3:11327:11357	1312563	0	True				
ANR	1313011	AssignmentExpression	intern -> fptr_offset_set = NULL		1312563	0		=			
ANR	1313012	PtrMemberAccess	intern -> fptr_offset_set		1312563	0					
ANR	1313013	Identifier	intern		1312563	0					
ANR	1313014	Identifier	fptr_offset_set		1312563	1					
ANR	1313015	Identifier	NULL		1312563	1					
ANR	1313016	ExpressionStatement	"zend_hash_find ( & class_type -> function_table , ""offsetexists"" , sizeof ( ""offsetexists"" ) , ( void * * ) & intern -> fptr_offset_has )"	439:2:11365:11484	1312563	4	True				
ANR	1313017	CallExpression	"zend_hash_find ( & class_type -> function_table , ""offsetexists"" , sizeof ( ""offsetexists"" ) , ( void * * ) & intern -> fptr_offset_has )"		1312563	0					
ANR	1313018	Callee	zend_hash_find		1312563	0					
ANR	1313019	Identifier	zend_hash_find		1312563	0					
ANR	1313020	ArgumentList	& class_type -> function_table		1312563	1					
ANR	1313021	Argument	& class_type -> function_table		1312563	0					
ANR	1313022	UnaryOperationExpression	& class_type -> function_table		1312563	0					
ANR	1313023	UnaryOperator	&		1312563	0					
ANR	1313024	PtrMemberAccess	class_type -> function_table		1312563	1					
ANR	1313025	Identifier	class_type		1312563	0					
ANR	1313026	Identifier	function_table		1312563	1					
ANR	1313027	Argument	"""offsetexists"""		1312563	1					
ANR	1313028	PrimaryExpression	"""offsetexists"""		1312563	0					
ANR	1313029	Argument	"sizeof ( ""offsetexists"" )"		1312563	2					
ANR	1313030	SizeofExpression	"sizeof ( ""offsetexists"" )"		1312563	0					
ANR	1313031	Sizeof	sizeof		1312563	0					
ANR	1313032	PrimaryExpression	"""offsetexists"""		1312563	1					
ANR	1313033	Argument	( void * * ) & intern -> fptr_offset_has		1312563	3					
ANR	1313034	CastExpression	( void * * ) & intern -> fptr_offset_has		1312563	0					
ANR	1313035	CastTarget	void * *		1312563	0					
ANR	1313036	UnaryOperationExpression	& intern -> fptr_offset_has		1312563	1					
ANR	1313037	UnaryOperator	&		1312563	0					
ANR	1313038	PtrMemberAccess	intern -> fptr_offset_has		1312563	1					
ANR	1313039	Identifier	intern		1312563	0					
ANR	1313040	Identifier	fptr_offset_has		1312563	1					
ANR	1313041	IfStatement	if ( intern -> fptr_offset_has -> common . scope == parent )		1312563	5					
ANR	1313042	Condition	intern -> fptr_offset_has -> common . scope == parent	440:6:11492:11538	1312563	0	True				
ANR	1313043	EqualityExpression	intern -> fptr_offset_has -> common . scope == parent		1312563	0		==			
ANR	1313044	MemberAccess	intern -> fptr_offset_has -> common . scope		1312563	0					
ANR	1313045	PtrMemberAccess	intern -> fptr_offset_has -> common		1312563	0					
ANR	1313046	PtrMemberAccess	intern -> fptr_offset_has		1312563	0					
ANR	1313047	Identifier	intern		1312563	0					
ANR	1313048	Identifier	fptr_offset_has		1312563	1					
ANR	1313049	Identifier	common		1312563	1					
ANR	1313050	Identifier	scope		1312563	1					
ANR	1313051	Identifier	parent		1312563	1					
ANR	1313052	CompoundStatement		73:55:2718:2718	1312563	1					
ANR	1313053	ExpressionStatement	intern -> fptr_offset_has = NULL	441:3:11546:11576	1312563	0	True				
ANR	1313054	AssignmentExpression	intern -> fptr_offset_has = NULL		1312563	0		=			
ANR	1313055	PtrMemberAccess	intern -> fptr_offset_has		1312563	0					
ANR	1313056	Identifier	intern		1312563	0					
ANR	1313057	Identifier	fptr_offset_has		1312563	1					
ANR	1313058	Identifier	NULL		1312563	1					
ANR	1313059	ExpressionStatement	"zend_hash_find ( & class_type -> function_table , ""offsetunset"" , sizeof ( ""offsetunset"" ) , ( void * * ) & intern -> fptr_offset_del )"	443:2:11584:11703	1312563	6	True				
ANR	1313060	CallExpression	"zend_hash_find ( & class_type -> function_table , ""offsetunset"" , sizeof ( ""offsetunset"" ) , ( void * * ) & intern -> fptr_offset_del )"		1312563	0					
ANR	1313061	Callee	zend_hash_find		1312563	0					
ANR	1313062	Identifier	zend_hash_find		1312563	0					
ANR	1313063	ArgumentList	& class_type -> function_table		1312563	1					
ANR	1313064	Argument	& class_type -> function_table		1312563	0					
ANR	1313065	UnaryOperationExpression	& class_type -> function_table		1312563	0					
ANR	1313066	UnaryOperator	&		1312563	0					
ANR	1313067	PtrMemberAccess	class_type -> function_table		1312563	1					
ANR	1313068	Identifier	class_type		1312563	0					
ANR	1313069	Identifier	function_table		1312563	1					
ANR	1313070	Argument	"""offsetunset"""		1312563	1					
ANR	1313071	PrimaryExpression	"""offsetunset"""		1312563	0					
ANR	1313072	Argument	"sizeof ( ""offsetunset"" )"		1312563	2					
ANR	1313073	SizeofExpression	"sizeof ( ""offsetunset"" )"		1312563	0					
ANR	1313074	Sizeof	sizeof		1312563	0					
ANR	1313075	PrimaryExpression	"""offsetunset"""		1312563	1					
ANR	1313076	Argument	( void * * ) & intern -> fptr_offset_del		1312563	3					
ANR	1313077	CastExpression	( void * * ) & intern -> fptr_offset_del		1312563	0					
ANR	1313078	CastTarget	void * *		1312563	0					
ANR	1313079	UnaryOperationExpression	& intern -> fptr_offset_del		1312563	1					
ANR	1313080	UnaryOperator	&		1312563	0					
ANR	1313081	PtrMemberAccess	intern -> fptr_offset_del		1312563	1					
ANR	1313082	Identifier	intern		1312563	0					
ANR	1313083	Identifier	fptr_offset_del		1312563	1					
ANR	1313084	IfStatement	if ( intern -> fptr_offset_del -> common . scope == parent )		1312563	7					
ANR	1313085	Condition	intern -> fptr_offset_del -> common . scope == parent	444:6:11711:11757	1312563	0	True				
ANR	1313086	EqualityExpression	intern -> fptr_offset_del -> common . scope == parent		1312563	0		==			
ANR	1313087	MemberAccess	intern -> fptr_offset_del -> common . scope		1312563	0					
ANR	1313088	PtrMemberAccess	intern -> fptr_offset_del -> common		1312563	0					
ANR	1313089	PtrMemberAccess	intern -> fptr_offset_del		1312563	0					
ANR	1313090	Identifier	intern		1312563	0					
ANR	1313091	Identifier	fptr_offset_del		1312563	1					
ANR	1313092	Identifier	common		1312563	1					
ANR	1313093	Identifier	scope		1312563	1					
ANR	1313094	Identifier	parent		1312563	1					
ANR	1313095	CompoundStatement		77:55:2937:2937	1312563	1					
ANR	1313096	ExpressionStatement	intern -> fptr_offset_del = NULL	445:3:11765:11795	1312563	0	True				
ANR	1313097	AssignmentExpression	intern -> fptr_offset_del = NULL		1312563	0		=			
ANR	1313098	PtrMemberAccess	intern -> fptr_offset_del		1312563	0					
ANR	1313099	Identifier	intern		1312563	0					
ANR	1313100	Identifier	fptr_offset_del		1312563	1					
ANR	1313101	Identifier	NULL		1312563	1					
ANR	1313102	ExpressionStatement	"zend_hash_find ( & class_type -> function_table , ""count"" , sizeof ( ""count"" ) , ( void * * ) & intern -> fptr_count )"	447:2:11803:11917	1312563	8	True				
ANR	1313103	CallExpression	"zend_hash_find ( & class_type -> function_table , ""count"" , sizeof ( ""count"" ) , ( void * * ) & intern -> fptr_count )"		1312563	0					
ANR	1313104	Callee	zend_hash_find		1312563	0					
ANR	1313105	Identifier	zend_hash_find		1312563	0					
ANR	1313106	ArgumentList	& class_type -> function_table		1312563	1					
ANR	1313107	Argument	& class_type -> function_table		1312563	0					
ANR	1313108	UnaryOperationExpression	& class_type -> function_table		1312563	0					
ANR	1313109	UnaryOperator	&		1312563	0					
ANR	1313110	PtrMemberAccess	class_type -> function_table		1312563	1					
ANR	1313111	Identifier	class_type		1312563	0					
ANR	1313112	Identifier	function_table		1312563	1					
ANR	1313113	Argument	"""count"""		1312563	1					
ANR	1313114	PrimaryExpression	"""count"""		1312563	0					
ANR	1313115	Argument	"sizeof ( ""count"" )"		1312563	2					
ANR	1313116	SizeofExpression	"sizeof ( ""count"" )"		1312563	0					
ANR	1313117	Sizeof	sizeof		1312563	0					
ANR	1313118	PrimaryExpression	"""count"""		1312563	1					
ANR	1313119	Argument	( void * * ) & intern -> fptr_count		1312563	3					
ANR	1313120	CastExpression	( void * * ) & intern -> fptr_count		1312563	0					
ANR	1313121	CastTarget	void * *		1312563	0					
ANR	1313122	UnaryOperationExpression	& intern -> fptr_count		1312563	1					
ANR	1313123	UnaryOperator	&		1312563	0					
ANR	1313124	PtrMemberAccess	intern -> fptr_count		1312563	1					
ANR	1313125	Identifier	intern		1312563	0					
ANR	1313126	Identifier	fptr_count		1312563	1					
ANR	1313127	IfStatement	if ( intern -> fptr_count -> common . scope == parent )		1312563	9					
ANR	1313128	Condition	intern -> fptr_count -> common . scope == parent	448:6:11925:11966	1312563	0	True				
ANR	1313129	EqualityExpression	intern -> fptr_count -> common . scope == parent		1312563	0		==			
ANR	1313130	MemberAccess	intern -> fptr_count -> common . scope		1312563	0					
ANR	1313131	PtrMemberAccess	intern -> fptr_count -> common		1312563	0					
ANR	1313132	PtrMemberAccess	intern -> fptr_count		1312563	0					
ANR	1313133	Identifier	intern		1312563	0					
ANR	1313134	Identifier	fptr_count		1312563	1					
ANR	1313135	Identifier	common		1312563	1					
ANR	1313136	Identifier	scope		1312563	1					
ANR	1313137	Identifier	parent		1312563	1					
ANR	1313138	CompoundStatement		81:50:3146:3146	1312563	1					
ANR	1313139	ExpressionStatement	intern -> fptr_count = NULL	449:3:11974:11999	1312563	0	True				
ANR	1313140	AssignmentExpression	intern -> fptr_count = NULL		1312563	0		=			
ANR	1313141	PtrMemberAccess	intern -> fptr_count		1312563	0					
ANR	1313142	Identifier	intern		1312563	0					
ANR	1313143	Identifier	fptr_count		1312563	1					
ANR	1313144	Identifier	NULL		1312563	1					
ANR	1313145	ReturnStatement	return retval ;	453:1:12010:12023	1312563	45	True				
ANR	1313146	Identifier	retval		1312563	0					
ANR	1313147	ReturnType	static zend_object_value		1312563	1					
ANR	1313148	Identifier	spl_dllist_object_new_ex		1312563	2					
ANR	1313149	ParameterList	"zend_class_entry * class_type , spl_dllist_object * * obj , zval * orig , int clone_orig TSRMLS_DC"		1312563	3					
ANR	1313150	Parameter	zend_class_entry * class_type	367:50:8719:8746	1312563	0	True				
ANR	1313151	ParameterType	zend_class_entry *		1312563	0					
ANR	1313152	Identifier	class_type		1312563	1					
ANR	1313153	Parameter	spl_dllist_object * * obj	367:80:8749:8771	1312563	1	True				
ANR	1313154	ParameterType	spl_dllist_object * *		1312563	0					
ANR	1313155	Identifier	obj		1312563	1					
ANR	1313156	Parameter	zval * orig	367:105:8774:8783	1312563	2	True				
ANR	1313157	ParameterType	zval *		1312563	0					
ANR	1313158	Identifier	orig		1312563	1					
ANR	1313159	Parameter	int clone_orig TSRMLS_DC	367:117:8786:8809	1312563	3	True				
ANR	1313160	ParameterType	int clone_orig		1312563	0					
ANR	1313161	Identifier	TSRMLS_DC		1312563	1					
ANR	1313162	CFGEntryNode	ENTRY		1312563		True				
ANR	1313163	CFGExitNode	EXIT		1312563		True				
ANR	1313164	Symbol	parent		1312563						
ANR	1313165	Symbol	* other -> llist		1312563						
ANR	1313166	Symbol	intern -> fptr_offset_has		1312563						
ANR	1313167	Symbol	* intern -> fptr_offset_del		1312563						
ANR	1313168	Symbol	* parent		1312563						
ANR	1313169	Symbol	intern -> fptr_count -> common . scope		1312563						
ANR	1313170	Symbol	spl_ce_SplDoublyLinkedList		1312563						
ANR	1313171	Symbol	intern -> fptr_offset_set -> common		1312563						
ANR	1313172	Symbol	intern -> fptr_offset_has -> common . scope		1312563						
ANR	1313173	Symbol	spl_ce_SplStack		1312563						
ANR	1313174	Symbol	TSRMLS_DC		1312563						
ANR	1313175	Symbol	intern -> fptr_offset_get -> common		1312563						
ANR	1313176	Symbol	class_type		1312563						
ANR	1313177	Symbol	parent -> parent		1312563						
ANR	1313178	Symbol	other -> llist -> dtor		1312563						
ANR	1313179	Symbol	spl_ptr_llist_init		1312563						
ANR	1313180	Symbol	intern -> fptr_offset_get -> common . scope		1312563						
ANR	1313181	Symbol	intern -> fptr_offset_set -> common . scope		1312563						
ANR	1313182	Symbol	ecalloc		1312563						
ANR	1313183	Symbol	other -> flags		1312563						
ANR	1313184	Symbol	& intern -> fptr_count		1312563						
ANR	1313185	Symbol	other -> ce_get_iterator		1312563						
ANR	1313186	Symbol	intern -> retval		1312563						
ANR	1313187	Symbol	spl_ce_SplQueue		1312563						
ANR	1313188	Symbol	NULL		1312563						
ANR	1313189	Symbol	other -> llist		1312563						
ANR	1313190	Symbol	spl_ptr_llist_zval_ctor		1312563						
ANR	1313191	Symbol	intern -> fptr_count -> common		1312563						
ANR	1313192	Symbol	* other		1312563						
ANR	1313193	Symbol	* intern -> fptr_count		1312563						
ANR	1313194	Symbol	& intern -> fptr_offset_set		1312563						
ANR	1313195	Symbol	retval		1312563						
ANR	1313196	Symbol	SPL_DLLIST_IT_FIX		1312563						
ANR	1313197	Symbol	* intern -> fptr_offset_has		1312563						
ANR	1313198	Symbol	intern -> fptr_offset_del		1312563						
ANR	1313199	Symbol	& intern -> std		1312563						
ANR	1313200	Symbol	other -> llist -> ctor		1312563						
ANR	1313201	Symbol	* * other		1312563						
ANR	1313202	Symbol	intern -> fptr_offset_del -> common . scope		1312563						
ANR	1313203	Symbol	* * intern		1312563						
ANR	1313204	Symbol	& spl_handler_SplDoublyLinkedList		1312563						
ANR	1313205	Symbol	SPL_DLLIST_IT_LIFO		1312563						
ANR	1313206	Symbol	retval . handlers		1312563						
ANR	1313207	Symbol	& intern -> fptr_offset_get		1312563						
ANR	1313208	Symbol	intern -> debug_info		1312563						
ANR	1313209	Symbol	other		1312563						
ANR	1313210	Symbol	& intern -> fptr_offset_del		1312563						
ANR	1313211	Symbol	spl_ptr_llist_zval_dtor		1312563						
ANR	1313212	Symbol	intern -> fptr_offset_get		1312563						
ANR	1313213	Symbol	intern -> fptr_offset_set		1312563						
ANR	1313214	Symbol	intern -> fptr_count		1312563						
ANR	1313215	Symbol	intern -> flags		1312563						
ANR	1313216	Symbol	intern -> ce_get_iterator		1312563						
ANR	1313217	Symbol	* intern -> llist		1312563						
ANR	1313218	Symbol	intern -> fptr_offset_del -> common		1312563						
ANR	1313219	Symbol	& class_type -> function_table		1312563						
ANR	1313220	Symbol	intern -> llist -> head		1312563						
ANR	1313221	Symbol	* obj		1312563						
ANR	1313222	Symbol	* intern		1312563						
ANR	1313223	Symbol	intern -> llist		1312563						
ANR	1313224	Symbol	intern		1312563						
ANR	1313225	Symbol	* intern -> fptr_offset_set		1312563						
ANR	1313226	Symbol	& intern -> fptr_offset_has		1312563						
ANR	1313227	Symbol	intern -> traverse_position		1312563						
ANR	1313228	Symbol	orig		1312563						
ANR	1313229	Symbol	obj		1312563						
ANR	1313230	Symbol	inherited		1312563						
ANR	1313231	Symbol	intern -> traverse_pointer		1312563						
ANR	1313232	Symbol	* intern -> fptr_offset_get		1312563						
ANR	1313233	Symbol	clone_orig		1312563						
ANR	1313234	Symbol	intern -> fptr_offset_has -> common		1312563						
ANR	1313235	DeclStmt									
ANR	1313236	Decl							spl_dllist_object	spl_dllist_object *	tmp
ANR	1313237	DeclStmt									
ANR	1313238	Decl							zend_object_value	zend_object_value	new_obj_val
ANR	1313239	DeclStmt									
ANR	1313240	Decl							zend_object	zend_object *	old_object
ANR	1313241	DeclStmt									
ANR	1313242	Decl							zend_object	zend_object *	new_object
ANR	1313243	DeclStmt									
ANR	1313244	Decl							zend_object_handle	zend_object_handle	handle
ANR	1313245	DeclStmt									
ANR	1313246	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313247	DeclStmt									
ANR	1313248	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313249	DeclStmt									
ANR	1313250	Decl							zval	zval *	rv
ANR	1313251	DeclStmt									
ANR	1313252	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313253	DeclStmt									
ANR	1313254	Decl							spl_ptr_llist_element	spl_ptr_llist_element *	current
ANR	1313255	Decl							spl_ptr_llist_element	spl_ptr_llist_element *	next
ANR	1313256	DeclStmt									
ANR	1313257	Decl							zval	zval *	tmp
ANR	1313258	Decl							zval	zval	zrv
ANR	1313259	Decl							zval	zval *	dllist_array
ANR	1313260	DeclStmt									
ANR	1313261	Decl							char	char *	pnstr
ANR	1313262	DeclStmt									
ANR	1313263	Decl							int	int	pnlen
ANR	1313264	DeclStmt									
ANR	1313265	Decl							int	int	i
ANR	1313266	DeclStmt									
ANR	1313267	Decl							zval	zval *	value
ANR	1313268	DeclStmt									
ANR	1313269	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313270	DeclStmt									
ANR	1313271	Decl							zval	zval *	value
ANR	1313272	DeclStmt									
ANR	1313273	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313274	DeclStmt									
ANR	1313275	Decl							zval	zval *	value
ANR	1313276	DeclStmt									
ANR	1313277	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313278	DeclStmt									
ANR	1313279	Decl							zval	zval *	value
ANR	1313280	DeclStmt									
ANR	1313281	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313282	DeclStmt									
ANR	1313283	Decl							zval	zval *	value
ANR	1313284	DeclStmt									
ANR	1313285	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313286	DeclStmt									
ANR	1313287	Decl							zval	zval *	value
ANR	1313288	DeclStmt									
ANR	1313289	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313290	DeclStmt									
ANR	1313291	Decl							long	long	count
ANR	1313292	DeclStmt									
ANR	1313293	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313294	DeclStmt									
ANR	1313295	Decl							long	long	count
ANR	1313296	DeclStmt									
ANR	1313297	Decl							long	long	value
ANR	1313298	DeclStmt									
ANR	1313299	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313300	DeclStmt									
ANR	1313301	Decl							value	value &	SPL_DLLIST_IT_MASK
ANR	1313302	DeclStmt									
ANR	1313303	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313304	DeclStmt									
ANR	1313305	Decl							zval	zval *	zindex
ANR	1313306	DeclStmt									
ANR	1313307	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313308	DeclStmt									
ANR	1313309	Decl							long	long	index
ANR	1313310	DeclStmt									
ANR	1313311	Decl							zval	zval *	zindex
ANR	1313312	Decl							zval	zval *	value
ANR	1313313	DeclStmt									
ANR	1313314	Decl							long	long	index
ANR	1313315	DeclStmt									
ANR	1313316	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313317	DeclStmt									
ANR	1313318	Decl							spl_ptr_llist_element	spl_ptr_llist_element *	element
ANR	1313319	DeclStmt									
ANR	1313320	Decl							zval	zval *	zindex
ANR	1313321	Decl							zval	zval *	value
ANR	1313322	DeclStmt									
ANR	1313323	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313324	DeclStmt									
ANR	1313325	Decl							long	long	index
ANR	1313326	DeclStmt									
ANR	1313327	Decl							spl_ptr_llist_element	spl_ptr_llist_element *	element
ANR	1313328	DeclStmt									
ANR	1313329	Decl							zval	zval *	zindex
ANR	1313330	DeclStmt									
ANR	1313331	Decl							long	long	index
ANR	1313332	DeclStmt									
ANR	1313333	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313334	DeclStmt									
ANR	1313335	Decl							spl_ptr_llist_element	spl_ptr_llist_element *	element
ANR	1313336	DeclStmt									
ANR	1313337	Decl							spl_ptr_llist	spl_ptr_llist *	llist
ANR	1313338	DeclStmt									
ANR	1313339	Decl							spl_dllist_it	spl_dllist_it *	iterator
ANR	1313340	Function	spl_dllist_it_helper_rewind	945:0:25102:25570							
ANR	1313341	FunctionDef	"spl_dllist_it_helper_rewind (spl_ptr_llist_element * * traverse_pointer_ptr , int * traverse_position_ptr , spl_ptr_llist * llist , int flags TSRMLS_DC)"		1313340	0					
ANR	1313342	CompoundStatement		946:0:25269:25570	1313340	0					
ANR	1313343	ExpressionStatement	SPL_LLIST_CHECK_DELREF ( * traverse_pointer_ptr )	947:1:25272:25317	1313340	0	True				
ANR	1313344	CallExpression	SPL_LLIST_CHECK_DELREF ( * traverse_pointer_ptr )		1313340	0					
ANR	1313345	Callee	SPL_LLIST_CHECK_DELREF		1313340	0					
ANR	1313346	Identifier	SPL_LLIST_CHECK_DELREF		1313340	0					
ANR	1313347	ArgumentList	* traverse_pointer_ptr		1313340	1					
ANR	1313348	Argument	* traverse_pointer_ptr		1313340	0					
ANR	1313349	UnaryOperationExpression	* traverse_pointer_ptr		1313340	0					
ANR	1313350	UnaryOperator	*		1313340	0					
ANR	1313351	Identifier	traverse_pointer_ptr		1313340	1					
ANR	1313352	IfStatement	if ( flags & SPL_DLLIST_IT_LIFO )		1313340	1					
ANR	1313353	Condition	flags & SPL_DLLIST_IT_LIFO	949:5:25325:25350	1313340	0	True				
ANR	1313354	BitAndExpression	flags & SPL_DLLIST_IT_LIFO		1313340	0		&			
ANR	1313355	Identifier	flags		1313340	0					
ANR	1313356	Identifier	SPL_DLLIST_IT_LIFO		1313340	1					
ANR	1313357	CompoundStatement		4:33:83:83	1313340	1					
ANR	1313358	ExpressionStatement	* traverse_position_ptr = llist -> count - 1	950:2:25357:25396	1313340	0	True				
ANR	1313359	AssignmentExpression	* traverse_position_ptr = llist -> count - 1		1313340	0		=			
ANR	1313360	UnaryOperationExpression	* traverse_position_ptr		1313340	0					
ANR	1313361	UnaryOperator	*		1313340	0					
ANR	1313362	Identifier	traverse_position_ptr		1313340	1					
ANR	1313363	AdditiveExpression	llist -> count - 1		1313340	1		-			
ANR	1313364	PtrMemberAccess	llist -> count		1313340	0					
ANR	1313365	Identifier	llist		1313340	0					
ANR	1313366	Identifier	count		1313340	1					
ANR	1313367	PrimaryExpression	1		1313340	1					
ANR	1313368	ExpressionStatement	* traverse_pointer_ptr = llist -> tail	951:2:25400:25436	1313340	1	True				
ANR	1313369	AssignmentExpression	* traverse_pointer_ptr = llist -> tail		1313340	0		=			
ANR	1313370	UnaryOperationExpression	* traverse_pointer_ptr		1313340	0					
ANR	1313371	UnaryOperator	*		1313340	0					
ANR	1313372	Identifier	traverse_pointer_ptr		1313340	1					
ANR	1313373	PtrMemberAccess	llist -> tail		1313340	1					
ANR	1313374	Identifier	llist		1313340	0					
ANR	1313375	Identifier	tail		1313340	1					
ANR	1313376	ElseStatement	else		1313340	0					
ANR	1313377	CompoundStatement		7:8:176:176	1313340	0					
ANR	1313378	ExpressionStatement	* traverse_position_ptr = 0	953:2:25450:25476	1313340	0	True				
ANR	1313379	AssignmentExpression	* traverse_position_ptr = 0		1313340	0		=			
ANR	1313380	UnaryOperationExpression	* traverse_position_ptr		1313340	0					
ANR	1313381	UnaryOperator	*		1313340	0					
ANR	1313382	Identifier	traverse_position_ptr		1313340	1					
ANR	1313383	PrimaryExpression	0		1313340	1					
ANR	1313384	ExpressionStatement	* traverse_pointer_ptr = llist -> head	954:2:25480:25516	1313340	1	True				
ANR	1313385	AssignmentExpression	* traverse_pointer_ptr = llist -> head		1313340	0		=			
ANR	1313386	UnaryOperationExpression	* traverse_pointer_ptr		1313340	0					
ANR	1313387	UnaryOperator	*		1313340	0					
ANR	1313388	Identifier	traverse_pointer_ptr		1313340	1					
ANR	1313389	PtrMemberAccess	llist -> head		1313340	1					
ANR	1313390	Identifier	llist		1313340	0					
ANR	1313391	Identifier	head		1313340	1					
ANR	1313392	ExpressionStatement	SPL_LLIST_CHECK_ADDREF ( * traverse_pointer_ptr )	957:1:25523:25568	1313340	2	True				
ANR	1313393	CallExpression	SPL_LLIST_CHECK_ADDREF ( * traverse_pointer_ptr )		1313340	0					
ANR	1313394	Callee	SPL_LLIST_CHECK_ADDREF		1313340	0					
ANR	1313395	Identifier	SPL_LLIST_CHECK_ADDREF		1313340	0					
ANR	1313396	ArgumentList	* traverse_pointer_ptr		1313340	1					
ANR	1313397	Argument	* traverse_pointer_ptr		1313340	0					
ANR	1313398	UnaryOperationExpression	* traverse_pointer_ptr		1313340	0					
ANR	1313399	UnaryOperator	*		1313340	0					
ANR	1313400	Identifier	traverse_pointer_ptr		1313340	1					
ANR	1313401	ReturnType	static void		1313340	1					
ANR	1313402	Identifier	spl_dllist_it_helper_rewind		1313340	2					
ANR	1313403	ParameterList	"spl_ptr_llist_element * * traverse_pointer_ptr , int * traverse_position_ptr , spl_ptr_llist * llist , int flags TSRMLS_DC"		1313340	3					
ANR	1313404	Parameter	spl_ptr_llist_element * * traverse_pointer_ptr	945:40:25142:25185	1313340	0	True				
ANR	1313405	ParameterType	spl_ptr_llist_element * *		1313340	0					
ANR	1313406	Identifier	traverse_pointer_ptr		1313340	1					
ANR	1313407	Parameter	int * traverse_position_ptr	945:86:25188:25213	1313340	1	True				
ANR	1313408	ParameterType	int *		1313340	0					
ANR	1313409	Identifier	traverse_position_ptr		1313340	1					
ANR	1313410	Parameter	spl_ptr_llist * llist	945:114:25216:25235	1313340	2	True				
ANR	1313411	ParameterType	spl_ptr_llist *		1313340	0					
ANR	1313412	Identifier	llist		1313340	1					
ANR	1313413	Parameter	int flags TSRMLS_DC	945:136:25238:25256	1313340	3	True				
ANR	1313414	ParameterType	int flags		1313340	0					
ANR	1313415	Identifier	TSRMLS_DC		1313340	1					
ANR	1313416	CFGEntryNode	ENTRY		1313340		True				
ANR	1313417	CFGExitNode	EXIT		1313340		True				
ANR	1313418	Symbol	* traverse_position_ptr		1313340						
ANR	1313419	Symbol	llist -> tail		1313340						
ANR	1313420	Symbol	traverse_position_ptr		1313340						
ANR	1313421	Symbol	* llist		1313340						
ANR	1313422	Symbol	* traverse_pointer_ptr		1313340						
ANR	1313423	Symbol	flags		1313340						
ANR	1313424	Symbol	llist -> count		1313340						
ANR	1313425	Symbol	TSRMLS_DC		1313340						
ANR	1313426	Symbol	llist -> head		1313340						
ANR	1313427	Symbol	traverse_pointer_ptr		1313340						
ANR	1313428	Symbol	llist		1313340						
ANR	1313429	Symbol	SPL_DLLIST_IT_LIFO		1313340						
ANR	1313430	Function	spl_dllist_it_helper_move_forward	961:0:25583:26455							
ANR	1313431	FunctionDef	"spl_dllist_it_helper_move_forward (spl_ptr_llist_element * * traverse_pointer_ptr , int * traverse_position_ptr , spl_ptr_llist * llist , int flags TSRMLS_DC)"		1313430	0					
ANR	1313432	CompoundStatement		962:0:25756:26455	1313430	0					
ANR	1313433	IfStatement	if ( * traverse_pointer_ptr )		1313430	0					
ANR	1313434	Condition	* traverse_pointer_ptr	963:5:25763:25783	1313430	0	True				
ANR	1313435	UnaryOperationExpression	* traverse_pointer_ptr		1313430	0					
ANR	1313436	UnaryOperator	*		1313430	0					
ANR	1313437	Identifier	traverse_pointer_ptr		1313430	1					
ANR	1313438	CompoundStatement		3:2:33:83	1313430	1					
ANR	1313439	IdentifierDeclStatement	spl_ptr_llist_element * old = * traverse_pointer_ptr ;	964:2:25790:25840	1313430	0	True				
ANR	1313440	IdentifierDecl	* old = * traverse_pointer_ptr		1313430	0					
ANR	1313441	IdentifierDeclType	spl_ptr_llist_element *		1313430	0					
ANR	1313442	Identifier	old		1313430	1					
ANR	1313443	AssignmentExpression	* old = * traverse_pointer_ptr		1313430	2		=			
ANR	1313444	Identifier	old		1313430	0					
ANR	1313445	UnaryOperationExpression	* traverse_pointer_ptr		1313430	1					
ANR	1313446	UnaryOperator	*		1313430	0					
ANR	1313447	Identifier	traverse_pointer_ptr		1313430	1					
ANR	1313448	IfStatement	if ( flags & SPL_DLLIST_IT_LIFO )		1313430	1					
ANR	1313449	Condition	flags & SPL_DLLIST_IT_LIFO	966:6:25849:25874	1313430	0	True				
ANR	1313450	BitAndExpression	flags & SPL_DLLIST_IT_LIFO		1313430	0		&			
ANR	1313451	Identifier	flags		1313430	0					
ANR	1313452	Identifier	SPL_DLLIST_IT_LIFO		1313430	1					
ANR	1313453	CompoundStatement		5:34:120:120	1313430	1					
ANR	1313454	ExpressionStatement	* traverse_pointer_ptr = old -> prev	967:3:25882:25915	1313430	0	True				
ANR	1313455	AssignmentExpression	* traverse_pointer_ptr = old -> prev		1313430	0		=			
ANR	1313456	UnaryOperationExpression	* traverse_pointer_ptr		1313430	0					
ANR	1313457	UnaryOperator	*		1313430	0					
ANR	1313458	Identifier	traverse_pointer_ptr		1313430	1					
ANR	1313459	PtrMemberAccess	old -> prev		1313430	1					
ANR	1313460	Identifier	old		1313430	0					
ANR	1313461	Identifier	prev		1313430	1					
ANR	1313462	ExpressionStatement	( * traverse_position_ptr ) --	968:3:25920:25946	1313430	1	True				
ANR	1313463	PostIncDecOperationExpression	( * traverse_position_ptr ) --		1313430	0					
ANR	1313464	UnaryOperationExpression	* traverse_position_ptr		1313430	0					
ANR	1313465	UnaryOperator	*		1313430	0					
ANR	1313466	Identifier	traverse_position_ptr		1313430	1					
ANR	1313467	IncDec	--		1313430	1					
ANR	1313468	IfStatement	if ( flags & SPL_DLLIST_IT_DELETE )		1313430	2					
ANR	1313469	Condition	flags & SPL_DLLIST_IT_DELETE	970:7:25956:25983	1313430	0	True				
ANR	1313470	BitAndExpression	flags & SPL_DLLIST_IT_DELETE		1313430	0		&			
ANR	1313471	Identifier	flags		1313430	0					
ANR	1313472	Identifier	SPL_DLLIST_IT_DELETE		1313430	1					
ANR	1313473	CompoundStatement		9:37:229:229	1313430	1					
ANR	1313474	Statement	zval	971:4:25992:25995	1313430	0	True				
ANR	1313475	Statement	*	971:9:25997:25997	1313430	1	True				
ANR	1313476	Statement	prev	971:10:25998:26001	1313430	2	True				
ANR	1313477	Statement	=	971:15:26003:26003	1313430	3	True				
ANR	1313478	Statement	(	971:17:26005:26005	1313430	4	True				
ANR	1313479	Statement	zval	971:18:26006:26009	1313430	5	True				
ANR	1313480	Statement	*	971:23:26011:26011	1313430	6	True				
ANR	1313481	Statement	)	971:24:26012:26012	1313430	7	True				
ANR	1313482	Statement	spl_ptr_llist_pop	971:25:26013:26029	1313430	8	True				
ANR	1313483	Statement	(	971:42:26030:26030	1313430	9	True				
ANR	1313484	Statement	llist	971:43:26031:26035	1313430	10	True				
ANR	1313485	Statement	TSRMLS_CC	971:49:26037:26045	1313430	11	True				
ANR	1313486	Statement	)	971:58:26046:26046	1313430	12	True				
ANR	1313487	ExpressionStatement		971:59:26047:26047	1313430	13	True				
ANR	1313488	IfStatement	if ( prev )		1313430	14					
ANR	1313489	Condition	prev	973:8:26058:26061	1313430	0	True				
ANR	1313490	Identifier	prev		1313430	0					
ANR	1313491	CompoundStatement		12:14:307:307	1313430	1					
ANR	1313492	ExpressionStatement	zval_ptr_dtor ( ( zval * * ) & prev )	974:5:26071:26100	1313430	0	True				
ANR	1313493	CallExpression	zval_ptr_dtor ( ( zval * * ) & prev )		1313430	0					
ANR	1313494	Callee	zval_ptr_dtor		1313430	0					
ANR	1313495	Identifier	zval_ptr_dtor		1313430	0					
ANR	1313496	ArgumentList	( zval * * ) & prev		1313430	1					
ANR	1313497	Argument	( zval * * ) & prev		1313430	0					
ANR	1313498	CastExpression	( zval * * ) & prev		1313430	0					
ANR	1313499	CastTarget	zval * *		1313430	0					
ANR	1313500	UnaryOperationExpression	& prev		1313430	1					
ANR	1313501	UnaryOperator	&		1313430	0					
ANR	1313502	Identifier	prev		1313430	1					
ANR	1313503	ElseStatement	else		1313430	0					
ANR	1313504	CompoundStatement		16:9:365:365	1313430	0					
ANR	1313505	ExpressionStatement	* traverse_pointer_ptr = old -> next	978:3:26127:26160	1313430	0	True				
ANR	1313506	AssignmentExpression	* traverse_pointer_ptr = old -> next		1313430	0		=			
ANR	1313507	UnaryOperationExpression	* traverse_pointer_ptr		1313430	0					
ANR	1313508	UnaryOperator	*		1313430	0					
ANR	1313509	Identifier	traverse_pointer_ptr		1313430	1					
ANR	1313510	PtrMemberAccess	old -> next		1313430	1					
ANR	1313511	Identifier	old		1313430	0					
ANR	1313512	Identifier	next		1313430	1					
ANR	1313513	IfStatement	if ( flags & SPL_DLLIST_IT_DELETE )		1313430	1					
ANR	1313514	Condition	flags & SPL_DLLIST_IT_DELETE	980:7:26170:26197	1313430	0	True				
ANR	1313515	BitAndExpression	flags & SPL_DLLIST_IT_DELETE		1313430	0		&			
ANR	1313516	Identifier	flags		1313430	0					
ANR	1313517	Identifier	SPL_DLLIST_IT_DELETE		1313430	1					
ANR	1313518	CompoundStatement		19:37:443:443	1313430	1					
ANR	1313519	Statement	zval	981:4:26206:26209	1313430	0	True				
ANR	1313520	Statement	*	981:9:26211:26211	1313430	1	True				
ANR	1313521	Statement	prev	981:10:26212:26215	1313430	2	True				
ANR	1313522	Statement	=	981:15:26217:26217	1313430	3	True				
ANR	1313523	Statement	(	981:17:26219:26219	1313430	4	True				
ANR	1313524	Statement	zval	981:18:26220:26223	1313430	5	True				
ANR	1313525	Statement	*	981:23:26225:26225	1313430	6	True				
ANR	1313526	Statement	)	981:24:26226:26226	1313430	7	True				
ANR	1313527	Statement	spl_ptr_llist_shift	981:25:26227:26245	1313430	8	True				
ANR	1313528	Statement	(	981:44:26246:26246	1313430	9	True				
ANR	1313529	Statement	llist	981:45:26247:26251	1313430	10	True				
ANR	1313530	Statement	TSRMLS_CC	981:51:26253:26261	1313430	11	True				
ANR	1313531	Statement	)	981:60:26262:26262	1313430	12	True				
ANR	1313532	ExpressionStatement		981:61:26263:26263	1313430	13	True				
ANR	1313533	IfStatement	if ( prev )		1313430	14					
ANR	1313534	Condition	prev	983:8:26274:26277	1313430	0	True				
ANR	1313535	Identifier	prev		1313430	0					
ANR	1313536	CompoundStatement		22:14:523:523	1313430	1					
ANR	1313537	ExpressionStatement	zval_ptr_dtor ( ( zval * * ) & prev )	984:5:26287:26316	1313430	0	True				
ANR	1313538	CallExpression	zval_ptr_dtor ( ( zval * * ) & prev )		1313430	0					
ANR	1313539	Callee	zval_ptr_dtor		1313430	0					
ANR	1313540	Identifier	zval_ptr_dtor		1313430	0					
ANR	1313541	ArgumentList	( zval * * ) & prev		1313430	1					
ANR	1313542	Argument	( zval * * ) & prev		1313430	0					
ANR	1313543	CastExpression	( zval * * ) & prev		1313430	0					
ANR	1313544	CastTarget	zval * *		1313430	0					
ANR	1313545	UnaryOperationExpression	& prev		1313430	1					
ANR	1313546	UnaryOperator	&		1313430	0					
ANR	1313547	Identifier	prev		1313430	1					
ANR	1313548	ElseStatement	else		1313430	0					
ANR	1313549	CompoundStatement		25:10:577:577	1313430	0					
ANR	1313550	ExpressionStatement	( * traverse_position_ptr ) ++	987:4:26340:26366	1313430	0	True				
ANR	1313551	PostIncDecOperationExpression	( * traverse_position_ptr ) ++		1313430	0					
ANR	1313552	UnaryOperationExpression	* traverse_position_ptr		1313430	0					
ANR	1313553	UnaryOperator	*		1313430	0					
ANR	1313554	Identifier	traverse_position_ptr		1313430	1					
ANR	1313555	IncDec	++		1313430	1					
ANR	1313556	ExpressionStatement	SPL_LLIST_DELREF ( old )	991:2:26380:26401	1313430	2	True				
ANR	1313557	CallExpression	SPL_LLIST_DELREF ( old )		1313430	0					
ANR	1313558	Callee	SPL_LLIST_DELREF		1313430	0					
ANR	1313559	Identifier	SPL_LLIST_DELREF		1313430	0					
ANR	1313560	ArgumentList	old		1313430	1					
ANR	1313561	Argument	old		1313430	0					
ANR	1313562	Identifier	old		1313430	0					
ANR	1313563	ExpressionStatement	SPL_LLIST_CHECK_ADDREF ( * traverse_pointer_ptr )	992:2:26405:26450	1313430	3	True				
ANR	1313564	CallExpression	SPL_LLIST_CHECK_ADDREF ( * traverse_pointer_ptr )		1313430	0					
ANR	1313565	Callee	SPL_LLIST_CHECK_ADDREF		1313430	0					
ANR	1313566	Identifier	SPL_LLIST_CHECK_ADDREF		1313430	0					
ANR	1313567	ArgumentList	* traverse_pointer_ptr		1313430	1					
ANR	1313568	Argument	* traverse_pointer_ptr		1313430	0					
ANR	1313569	UnaryOperationExpression	* traverse_pointer_ptr		1313430	0					
ANR	1313570	UnaryOperator	*		1313430	0					
ANR	1313571	Identifier	traverse_pointer_ptr		1313430	1					
ANR	1313572	ReturnType	static void		1313430	1					
ANR	1313573	Identifier	spl_dllist_it_helper_move_forward		1313430	2					
ANR	1313574	ParameterList	"spl_ptr_llist_element * * traverse_pointer_ptr , int * traverse_position_ptr , spl_ptr_llist * llist , int flags TSRMLS_DC"		1313430	3					
ANR	1313575	Parameter	spl_ptr_llist_element * * traverse_pointer_ptr	961:46:25629:25672	1313430	0	True				
ANR	1313576	ParameterType	spl_ptr_llist_element * *		1313430	0					
ANR	1313577	Identifier	traverse_pointer_ptr		1313430	1					
ANR	1313578	Parameter	int * traverse_position_ptr	961:92:25675:25700	1313430	1	True				
ANR	1313579	ParameterType	int *		1313430	0					
ANR	1313580	Identifier	traverse_position_ptr		1313430	1					
ANR	1313581	Parameter	spl_ptr_llist * llist	961:120:25703:25722	1313430	2	True				
ANR	1313582	ParameterType	spl_ptr_llist *		1313430	0					
ANR	1313583	Identifier	llist		1313430	1					
ANR	1313584	Parameter	int flags TSRMLS_DC	961:142:25725:25743	1313430	3	True				
ANR	1313585	ParameterType	int flags		1313430	0					
ANR	1313586	Identifier	TSRMLS_DC		1313430	1					
ANR	1313587	CFGEntryNode	ENTRY		1313430		True				
ANR	1313588	CFGExitNode	EXIT		1313430		True				
ANR	1313589	Symbol	traverse_position_ptr		1313430						
ANR	1313590	Symbol	& prev		1313430						
ANR	1313591	Symbol	* traverse_pointer_ptr		1313430						
ANR	1313592	Symbol	old		1313430						
ANR	1313593	Symbol	prev		1313430						
ANR	1313594	Symbol	flags		1313430						
ANR	1313595	Symbol	old -> next		1313430						
ANR	1313596	Symbol	old -> prev		1313430						
ANR	1313597	Symbol	SPL_DLLIST_IT_DELETE		1313430						
ANR	1313598	Symbol	TSRMLS_DC		1313430						
ANR	1313599	Symbol	llist		1313430						
ANR	1313600	Symbol	* traverse_position_ptr		1313430						
ANR	1313601	Symbol	* old		1313430						
ANR	1313602	Symbol	traverse_pointer_ptr		1313430						
ANR	1313603	Symbol	SPL_DLLIST_IT_LIFO		1313430						
ANR	1313604	DeclStmt									
ANR	1313605	Decl							spl_dllist_it	spl_dllist_it *	iterator
ANR	1313606	DeclStmt									
ANR	1313607	Decl							spl_dllist_object	spl_dllist_object *	object
ANR	1313608	DeclStmt									
ANR	1313609	Decl							spl_ptr_llist	spl_ptr_llist *	llist
ANR	1313610	DeclStmt									
ANR	1313611	Decl							spl_dllist_it	spl_dllist_it *	iterator
ANR	1313612	DeclStmt									
ANR	1313613	Decl							spl_ptr_llist_element	spl_ptr_llist_element *	element
ANR	1313614	DeclStmt									
ANR	1313615	Decl							spl_dllist_it	spl_dllist_it *	iterator
ANR	1313616	DeclStmt									
ANR	1313617	Decl							spl_ptr_llist_element	spl_ptr_llist_element *	element
ANR	1313618	DeclStmt									
ANR	1313619	Decl							spl_dllist_it	spl_dllist_it *	iterator
ANR	1313620	DeclStmt									
ANR	1313621	Decl							spl_dllist_it	spl_dllist_it *	iterator
ANR	1313622	DeclStmt									
ANR	1313623	Decl							spl_dllist_object	spl_dllist_object *	object
ANR	1313624	DeclStmt									
ANR	1313625	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313626	DeclStmt									
ANR	1313627	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313628	DeclStmt									
ANR	1313629	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313630	DeclStmt									
ANR	1313631	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313632	DeclStmt									
ANR	1313633	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313634	DeclStmt									
ANR	1313635	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313636	DeclStmt									
ANR	1313637	Decl							spl_ptr_llist_element	spl_ptr_llist_element *	element
ANR	1313638	DeclStmt									
ANR	1313639	Decl							zval	zval *	data
ANR	1313640	DeclStmt									
ANR	1313641	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313642	DeclStmt									
ANR	1313643	Decl							smart_str	smart_str	buf
ANR	1313644	DeclStmt									
ANR	1313645	Decl							spl_ptr_llist_element	spl_ptr_llist_element *	current
ANR	1313646	Decl							spl_ptr_llist_element	spl_ptr_llist_element *	next
ANR	1313647	DeclStmt									
ANR	1313648	Decl							zval	zval *	flags
ANR	1313649	DeclStmt									
ANR	1313650	Decl							php_serialize_data_t	php_serialize_data_t	var_hash
ANR	1313651	DeclStmt									
ANR	1313652	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313653	DeclStmt									
ANR	1313654	Decl							zval	zval *	flags
ANR	1313655	Decl							zval	zval *	elem
ANR	1313656	DeclStmt									
ANR	1313657	Decl							char	char *	buf
ANR	1313658	DeclStmt									
ANR	1313659	Decl							int	int	buf_len
ANR	1313660	DeclStmt									
ANR	1313661	Decl							const unsigned char	const unsigned char *	p
ANR	1313662	Decl							const unsigned char	const unsigned char *	s
ANR	1313663	DeclStmt									
ANR	1313664	Decl							php_unserialize_data_t	php_unserialize_data_t	var_hash
ANR	1313665	DeclStmt									
ANR	1313666	Decl							zval	zval *	zindex
ANR	1313667	Decl							zval	zval *	value
ANR	1313668	DeclStmt									
ANR	1313669	Decl							spl_dllist_object	spl_dllist_object *	intern
ANR	1313670	DeclStmt									
ANR	1313671	Decl							spl_ptr_llist_element	spl_ptr_llist_element *	element
ANR	1313672	DeclStmt									
ANR	1313673	Decl							long	long	index
ANR	1313674	DeclStmt									
ANR	1313675	Decl							spl_ptr_llist_element	spl_ptr_llist_element *	elem
ANR	1313676	DeclStmt									
ANR	1313677	Decl							zend_object_iterator_funcs	zend_object_iterator_funcs	spl_dllist_it_funcs
ANR	1313678	Function	spl_dllist_get_iterator	1306:0:34927:35941							
ANR	1313679	FunctionDef	"spl_dllist_get_iterator (zend_class_entry * ce , zval * object , int by_ref TSRMLS_DC)"		1313678	0					
ANR	1313680	CompoundStatement		1307:0:35041:35941	1313678	0					
ANR	1313681	IdentifierDeclStatement	spl_dllist_it * iterator ;	1308:1:35044:35071	1313678	0	True				
ANR	1313682	IdentifierDecl	* iterator		1313678	0					
ANR	1313683	IdentifierDeclType	spl_dllist_it *		1313678	0					
ANR	1313684	Identifier	iterator		1313678	1					
ANR	1313685	Statement	spl_dllist_object	1309:1:35074:35090	1313678	1	True				
ANR	1313686	Statement	*	1309:19:35092:35092	1313678	2	True				
ANR	1313687	Statement	dllist_object	1309:20:35093:35105	1313678	3	True				
ANR	1313688	Statement	=	1309:34:35107:35107	1313678	4	True				
ANR	1313689	Statement	(	1309:36:35109:35109	1313678	5	True				
ANR	1313690	Statement	spl_dllist_object	1309:37:35110:35126	1313678	6	True				
ANR	1313691	Statement	*	1309:54:35127:35127	1313678	7	True				
ANR	1313692	Statement	)	1309:55:35128:35128	1313678	8	True				
ANR	1313693	Statement	zend_object_store_get_object	1309:56:35129:35156	1313678	9	True				
ANR	1313694	Statement	(	1309:84:35157:35157	1313678	10	True				
ANR	1313695	Statement	object	1309:85:35158:35163	1313678	11	True				
ANR	1313696	Statement	TSRMLS_CC	1309:92:35165:35173	1313678	12	True				
ANR	1313697	Statement	)	1309:101:35174:35174	1313678	13	True				
ANR	1313698	ExpressionStatement		1309:102:35175:35175	1313678	14	True				
ANR	1313699	IfStatement	if ( by_ref )		1313678	15					
ANR	1313700	Condition	by_ref	1311:5:35183:35188	1313678	0	True				
ANR	1313701	Identifier	by_ref		1313678	0					
ANR	1313702	CompoundStatement		5:13:149:149	1313678	1					
ANR	1313703	Statement	zend_throw_exception	1312:2:35195:35214	1313678	0	True				
ANR	1313704	Statement	(	1312:22:35215:35215	1313678	1	True				
ANR	1313705	Statement	spl_ce_RuntimeException	1312:23:35216:35238	1313678	2	True				
ANR	1313706	Statement	","	1312:46:35239:35239	1313678	3	True				
ANR	1313707	Statement	"""An iterator cannot be used with foreach by reference"""	1312:48:35241:35294	1313678	4	True				
ANR	1313708	Statement	","	1312:102:35295:35295	1313678	5	True				
ANR	1313709	Statement	0	1312:104:35297:35297	1313678	6	True				
ANR	1313710	Statement	TSRMLS_CC	1312:106:35299:35307	1313678	7	True				
ANR	1313711	Statement	)	1312:115:35308:35308	1313678	8	True				
ANR	1313712	ExpressionStatement		1312:116:35309:35309	1313678	9	True				
ANR	1313713	ReturnStatement	return NULL ;	1313:2:35313:35324	1313678	10	True				
ANR	1313714	Identifier	NULL		1313678	0					
ANR	1313715	ExpressionStatement	Z_ADDREF_P ( object )	1316:1:35331:35349	1313678	16	True				
ANR	1313716	CallExpression	Z_ADDREF_P ( object )		1313678	0					
ANR	1313717	Callee	Z_ADDREF_P		1313678	0					
ANR	1313718	Identifier	Z_ADDREF_P		1313678	0					
ANR	1313719	ArgumentList	object		1313678	1					
ANR	1313720	Argument	object		1313678	0					
ANR	1313721	Identifier	object		1313678	0					
ANR	1313722	ExpressionStatement	iterator = emalloc ( sizeof ( spl_dllist_it ) )	1318:1:35353:35414	1313678	17	True				
ANR	1313723	AssignmentExpression	iterator = emalloc ( sizeof ( spl_dllist_it ) )		1313678	0		=			
ANR	1313724	Identifier	iterator		1313678	0					
ANR	1313725	CallExpression	emalloc ( sizeof ( spl_dllist_it ) )		1313678	1					
ANR	1313726	Callee	emalloc		1313678	0					
ANR	1313727	Identifier	emalloc		1313678	0					
ANR	1313728	ArgumentList	sizeof ( spl_dllist_it )		1313678	1					
ANR	1313729	Argument	sizeof ( spl_dllist_it )		1313678	0					
ANR	1313730	SizeofExpression	sizeof ( spl_dllist_it )		1313678	0					
ANR	1313731	Sizeof	sizeof		1313678	0					
ANR	1313732	SizeofOperand	spl_dllist_it		1313678	1					
ANR	1313733	ExpressionStatement	iterator -> intern . it . data = ( void * ) object	1319:1:35417:35461	1313678	18	True				
ANR	1313734	AssignmentExpression	iterator -> intern . it . data = ( void * ) object		1313678	0		=			
ANR	1313735	MemberAccess	iterator -> intern . it . data		1313678	0					
ANR	1313736	MemberAccess	iterator -> intern . it		1313678	0					
ANR	1313737	PtrMemberAccess	iterator -> intern		1313678	0					
ANR	1313738	Identifier	iterator		1313678	0					
ANR	1313739	Identifier	intern		1313678	1					
ANR	1313740	Identifier	it		1313678	1					
ANR	1313741	Identifier	data		1313678	1					
ANR	1313742	CastExpression	( void * ) object		1313678	1					
ANR	1313743	CastTarget	void *		1313678	0					
ANR	1313744	Identifier	object		1313678	1					
ANR	1313745	ExpressionStatement	iterator -> intern . it . funcs = & spl_dllist_it_funcs	1320:1:35464:35515	1313678	19	True				
ANR	1313746	AssignmentExpression	iterator -> intern . it . funcs = & spl_dllist_it_funcs		1313678	0		=			
ANR	1313747	MemberAccess	iterator -> intern . it . funcs		1313678	0					
ANR	1313748	MemberAccess	iterator -> intern . it		1313678	0					
ANR	1313749	PtrMemberAccess	iterator -> intern		1313678	0					
ANR	1313750	Identifier	iterator		1313678	0					
ANR	1313751	Identifier	intern		1313678	1					
ANR	1313752	Identifier	it		1313678	1					
ANR	1313753	Identifier	funcs		1313678	1					
ANR	1313754	UnaryOperationExpression	& spl_dllist_it_funcs		1313678	1					
ANR	1313755	UnaryOperator	&		1313678	0					
ANR	1313756	Identifier	spl_dllist_it_funcs		1313678	1					
ANR	1313757	ExpressionStatement	iterator -> intern . ce = ce	1321:1:35518:35551	1313678	20	True				
ANR	1313758	AssignmentExpression	iterator -> intern . ce = ce		1313678	0		=			
ANR	1313759	MemberAccess	iterator -> intern . ce		1313678	0					
ANR	1313760	PtrMemberAccess	iterator -> intern		1313678	0					
ANR	1313761	Identifier	iterator		1313678	0					
ANR	1313762	Identifier	intern		1313678	1					
ANR	1313763	Identifier	ce		1313678	1					
ANR	1313764	Identifier	ce		1313678	1					
ANR	1313765	ExpressionStatement	iterator -> intern . value = NULL	1322:1:35554:35589	1313678	21	True				
ANR	1313766	AssignmentExpression	iterator -> intern . value = NULL		1313678	0		=			
ANR	1313767	MemberAccess	iterator -> intern . value		1313678	0					
ANR	1313768	PtrMemberAccess	iterator -> intern		1313678	0					
ANR	1313769	Identifier	iterator		1313678	0					
ANR	1313770	Identifier	intern		1313678	1					
ANR	1313771	Identifier	value		1313678	1					
ANR	1313772	Identifier	NULL		1313678	1					
ANR	1313773	ExpressionStatement	iterator -> traverse_position = dllist_object -> traverse_position	1323:1:35592:35655	1313678	22	True				
ANR	1313774	AssignmentExpression	iterator -> traverse_position = dllist_object -> traverse_position		1313678	0		=			
ANR	1313775	PtrMemberAccess	iterator -> traverse_position		1313678	0					
ANR	1313776	Identifier	iterator		1313678	0					
ANR	1313777	Identifier	traverse_position		1313678	1					
ANR	1313778	PtrMemberAccess	dllist_object -> traverse_position		1313678	1					
ANR	1313779	Identifier	dllist_object		1313678	0					
ANR	1313780	Identifier	traverse_position		1313678	1					
ANR	1313781	ExpressionStatement	iterator -> traverse_pointer = dllist_object -> traverse_pointer	1324:1:35658:35720	1313678	23	True				
ANR	1313782	AssignmentExpression	iterator -> traverse_pointer = dllist_object -> traverse_pointer		1313678	0		=			
ANR	1313783	PtrMemberAccess	iterator -> traverse_pointer		1313678	0					
ANR	1313784	Identifier	iterator		1313678	0					
ANR	1313785	Identifier	traverse_pointer		1313678	1					
ANR	1313786	PtrMemberAccess	dllist_object -> traverse_pointer		1313678	1					
ANR	1313787	Identifier	dllist_object		1313678	0					
ANR	1313788	Identifier	traverse_pointer		1313678	1					
ANR	1313789	ExpressionStatement	iterator -> flags = dllist_object -> flags & SPL_DLLIST_IT_MASK	1325:1:35723:35795	1313678	24	True				
ANR	1313790	AssignmentExpression	iterator -> flags = dllist_object -> flags & SPL_DLLIST_IT_MASK		1313678	0		=			
ANR	1313791	PtrMemberAccess	iterator -> flags		1313678	0					
ANR	1313792	Identifier	iterator		1313678	0					
ANR	1313793	Identifier	flags		1313678	1					
ANR	1313794	BitAndExpression	dllist_object -> flags & SPL_DLLIST_IT_MASK		1313678	1		&			
ANR	1313795	PtrMemberAccess	dllist_object -> flags		1313678	0					
ANR	1313796	Identifier	dllist_object		1313678	0					
ANR	1313797	Identifier	flags		1313678	1					
ANR	1313798	Identifier	SPL_DLLIST_IT_MASK		1313678	1					
ANR	1313799	ExpressionStatement	iterator -> object = dllist_object	1326:1:35798:35842	1313678	25	True				
ANR	1313800	AssignmentExpression	iterator -> object = dllist_object		1313678	0		=			
ANR	1313801	PtrMemberAccess	iterator -> object		1313678	0					
ANR	1313802	Identifier	iterator		1313678	0					
ANR	1313803	Identifier	object		1313678	1					
ANR	1313804	Identifier	dllist_object		1313678	1					
ANR	1313805	ExpressionStatement	SPL_LLIST_CHECK_ADDREF ( iterator -> traverse_pointer )	1328:1:35846:35896	1313678	26	True				
ANR	1313806	CallExpression	SPL_LLIST_CHECK_ADDREF ( iterator -> traverse_pointer )		1313678	0					
ANR	1313807	Callee	SPL_LLIST_CHECK_ADDREF		1313678	0					
ANR	1313808	Identifier	SPL_LLIST_CHECK_ADDREF		1313678	0					
ANR	1313809	ArgumentList	iterator -> traverse_pointer		1313678	1					
ANR	1313810	Argument	iterator -> traverse_pointer		1313678	0					
ANR	1313811	PtrMemberAccess	iterator -> traverse_pointer		1313678	0					
ANR	1313812	Identifier	iterator		1313678	0					
ANR	1313813	Identifier	traverse_pointer		1313678	1					
ANR	1313814	ReturnStatement	return ( zend_object_iterator * ) iterator ;	1331:1:35901:35939	1313678	27	True				
ANR	1313815	CastExpression	( zend_object_iterator * ) iterator		1313678	0					
ANR	1313816	CastTarget	zend_object_iterator *		1313678	0					
ANR	1313817	Identifier	iterator		1313678	1					
ANR	1313818	ReturnType	zend_object_iterator *		1313678	1					
ANR	1313819	Identifier	spl_dllist_get_iterator		1313678	2					
ANR	1313820	ParameterList	"zend_class_entry * ce , zval * object , int by_ref TSRMLS_DC"		1313678	3					
ANR	1313821	Parameter	zend_class_entry * ce	1306:46:34973:34992	1313678	0	True				
ANR	1313822	ParameterType	zend_class_entry *		1313678	0					
ANR	1313823	Identifier	ce		1313678	1					
ANR	1313824	Parameter	zval * object	1306:68:34995:35006	1313678	1	True				
ANR	1313825	ParameterType	zval *		1313678	0					
ANR	1313826	Identifier	object		1313678	1					
ANR	1313827	Parameter	int by_ref TSRMLS_DC	1306:82:35009:35028	1313678	2	True				
ANR	1313828	ParameterType	int by_ref		1313678	0					
ANR	1313829	Identifier	TSRMLS_DC		1313678	1					
ANR	1313830	CFGEntryNode	ENTRY		1313678		True				
ANR	1313831	CFGExitNode	EXIT		1313678		True				
ANR	1313832	Symbol	iterator -> object		1313678						
ANR	1313833	Symbol	& spl_dllist_it_funcs		1313678						
ANR	1313834	Symbol	iterator -> intern . it . data		1313678						
ANR	1313835	Symbol	dllist_object		1313678						
ANR	1313836	Symbol	TSRMLS_DC		1313678						
ANR	1313837	Symbol	iterator		1313678						
ANR	1313838	Symbol	emalloc		1313678						
ANR	1313839	Symbol	SPL_DLLIST_IT_MASK		1313678						
ANR	1313840	Symbol	iterator -> flags		1313678						
ANR	1313841	Symbol	ce		1313678						
ANR	1313842	Symbol	iterator -> intern		1313678						
ANR	1313843	Symbol	NULL		1313678						
ANR	1313844	Symbol	dllist_object -> traverse_position		1313678						
ANR	1313845	Symbol	iterator -> intern . ce		1313678						
ANR	1313846	Symbol	* dllist_object		1313678						
ANR	1313847	Symbol	iterator -> intern . it		1313678						
ANR	1313848	Symbol	iterator -> intern . value		1313678						
ANR	1313849	Symbol	* iterator		1313678						
ANR	1313850	Symbol	dllist_object -> traverse_pointer		1313678						
ANR	1313851	Symbol	iterator -> intern . it . funcs		1313678						
ANR	1313852	Symbol	dllist_object -> flags		1313678						
ANR	1313853	Symbol	by_ref		1313678						
ANR	1313854	Symbol	iterator -> traverse_pointer		1313678						
ANR	1313855	Symbol	object		1313678						
ANR	1313856	Symbol	iterator -> traverse_position		1313678						
ANR	1313857	DeclStmt									
ANR	1313858	Decl							const zend_function_entry	const zend_function_entry [ ]	spl_funcs_SplQueue
ANR	1313859	DeclStmt									
ANR	1313860	Decl							const zend_function_entry	const zend_function_entry [ ]	spl_funcs_SplDoublyLinkedList
