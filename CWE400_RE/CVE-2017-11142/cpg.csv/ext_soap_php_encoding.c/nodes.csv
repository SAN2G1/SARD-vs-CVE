command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1222545	File	data/converged/CVE-2017-11142_php-src/ext_soap_php_encoding.c								
ANR	1222546	DeclStmt									
ANR	1222547	Decl							zval	"zval * ( encodeTypePtr type , xmlNodePtr data TSRMLS_DC )"	to_zval_double
ANR	1222548	DeclStmt									
ANR	1222549	Decl							zval	"zval * ( encodeTypePtr type , xmlNodePtr data TSRMLS_DC )"	to_zval_long
ANR	1222550	DeclStmt									
ANR	1222551	Decl							zval	"zval * ( encodeTypePtr type , xmlNodePtr data TSRMLS_DC )"	to_zval_bool
ANR	1222552	DeclStmt									
ANR	1222553	Decl							zval	"zval * ( encodeTypePtr type , xmlNodePtr data TSRMLS_DC )"	to_zval_string
ANR	1222554	DeclStmt									
ANR	1222555	Decl							zval	"zval * ( encodeTypePtr type , xmlNodePtr data TSRMLS_DC )"	to_zval_stringr
ANR	1222556	DeclStmt									
ANR	1222557	Decl							zval	"zval * ( encodeTypePtr type , xmlNodePtr data TSRMLS_DC )"	to_zval_stringc
ANR	1222558	DeclStmt									
ANR	1222559	Decl							zval	"zval * ( encodeTypePtr type , xmlNodePtr data TSRMLS_DC )"	to_zval_map
ANR	1222560	DeclStmt									
ANR	1222561	Decl							zval	"zval * ( encodeTypePtr type , xmlNodePtr data TSRMLS_DC )"	to_zval_null
ANR	1222562	DeclStmt									
ANR	1222563	Decl							zval	"zval * ( encodeTypePtr type , xmlNodePtr data TSRMLS_DC )"	to_zval_base64
ANR	1222564	DeclStmt									
ANR	1222565	Decl							zval	"zval * ( encodeTypePtr type , xmlNodePtr data TSRMLS_DC )"	to_zval_hexbin
ANR	1222566	DeclStmt									
ANR	1222567	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC )"	to_xml_long
ANR	1222568	DeclStmt									
ANR	1222569	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC )"	to_xml_double
ANR	1222570	DeclStmt									
ANR	1222571	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC )"	to_xml_bool
ANR	1222572	DeclStmt									
ANR	1222573	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC )"	to_xml_string
ANR	1222574	DeclStmt									
ANR	1222575	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC )"	to_xml_base64
ANR	1222576	DeclStmt									
ANR	1222577	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC )"	to_xml_hexbin
ANR	1222578	DeclStmt									
ANR	1222579	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC )"	to_xml_null
ANR	1222580	DeclStmt									
ANR	1222581	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC )"	guess_array_map
ANR	1222582	DeclStmt									
ANR	1222583	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC )"	to_xml_map
ANR	1222584	DeclStmt									
ANR	1222585	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr enc , zval * data , int style , xmlNodePtr parent TSRMLS_DC )"	to_xml_list
ANR	1222586	DeclStmt									
ANR	1222587	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr enc , zval * data , int style , xmlNodePtr parent TSRMLS_DC )"	to_xml_list1
ANR	1222588	DeclStmt									
ANR	1222589	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , char * format , int style , xmlNodePtr parent TSRMLS_DC )"	to_xml_datetime_ex
ANR	1222590	DeclStmt									
ANR	1222591	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC )"	to_xml_datetime
ANR	1222592	DeclStmt									
ANR	1222593	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC )"	to_xml_time
ANR	1222594	DeclStmt									
ANR	1222595	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC )"	to_xml_date
ANR	1222596	DeclStmt									
ANR	1222597	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC )"	to_xml_gyearmonth
ANR	1222598	DeclStmt									
ANR	1222599	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC )"	to_xml_gyear
ANR	1222600	DeclStmt									
ANR	1222601	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC )"	to_xml_gmonthday
ANR	1222602	DeclStmt									
ANR	1222603	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC )"	to_xml_gday
ANR	1222604	DeclStmt									
ANR	1222605	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC )"	to_xml_gmonth
ANR	1222606	DeclStmt									
ANR	1222607	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC )"	to_xml_duration
ANR	1222608	DeclStmt									
ANR	1222609	Decl							zval	"zval * ( encodeTypePtr type , xmlNodePtr data TSRMLS_DC )"	to_zval_object
ANR	1222610	DeclStmt									
ANR	1222611	Decl							zval	"zval * ( encodeTypePtr type , xmlNodePtr data TSRMLS_DC )"	to_zval_array
ANR	1222612	DeclStmt									
ANR	1222613	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC )"	to_xml_object
ANR	1222614	DeclStmt									
ANR	1222615	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC )"	to_xml_array
ANR	1222616	DeclStmt									
ANR	1222617	Decl							zval	"zval * ( encodeTypePtr type , xmlNodePtr data TSRMLS_DC )"	to_zval_any
ANR	1222618	DeclStmt									
ANR	1222619	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC )"	to_xml_any
ANR	1222620	DeclStmt									
ANR	1222621	Decl							zval	"zval * ( encodeTypePtr type , xmlNodePtr data TSRMLS_DC )"	guess_zval_convert
ANR	1222622	DeclStmt									
ANR	1222623	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC )"	guess_xml_convert
ANR	1222624	DeclStmt									
ANR	1222625	Decl							int	int ( zval * array )	is_map
ANR	1222626	DeclStmt									
ANR	1222627	Decl							xmlNodePtr	xmlNodePtr ( xmlNodePtr data )	check_and_resolve_href
ANR	1222628	DeclStmt									
ANR	1222629	Decl							void	"void ( xmlNodePtr node , char * ns , char * name , char * val )"	set_ns_prop
ANR	1222630	DeclStmt									
ANR	1222631	Decl							void	void ( xmlNodePtr node )	set_xsi_nil
ANR	1222632	DeclStmt									
ANR	1222633	Decl							void	"void ( xmlNodePtr node , char * type )"	set_xsi_type
ANR	1222634	DeclStmt									
ANR	1222635	Decl							void	"void ( xmlNodePtr node , const char * ns , const char * type , smart_str * ret )"	get_type_str
ANR	1222636	DeclStmt									
ANR	1222637	Decl							void	"void ( xmlNodePtr node , char * ns , char * type )"	set_ns_and_type_ex
ANR	1222638	DeclStmt									
ANR	1222639	Decl							void	"void ( xmlNodePtr node , encodeTypePtr type )"	set_ns_and_type
ANR	1222640	DeclStmt									
ANR	1222641	Decl							xmlAttrPtr	xmlAttrPtr	null
ANR	1222642	DeclStmt									
ANR	1222643	Decl							xmlAttrPtr	xmlAttrPtr	null
ANR	1222644	DeclStmt									
ANR	1222645	Decl							zval	zval *	ret
ANR	1222646	DeclStmt									
ANR	1222647	Decl							zval	zval *	ret
ANR	1222648	DeclStmt									
ANR	1222649	Decl							encode	encode [ ]	defaultEncoding
ANR	1222650	DeclStmt									
ANR	1222651	Decl							int	int	numDefaultEncodings
ANR	1222652	Function	whiteSpace_replace	240:0:13663:13815							
ANR	1222653	FunctionDef	whiteSpace_replace (xmlChar * str)		1222652	0					
ANR	1222654	CompoundStatement		241:0:13701:13815	1222652	0					
ANR	1222655	WhileStatement	while ( * str != '\\0' )		1222652	0					
ANR	1222656	Condition	* str != '\\0'	242:8:13711:13722	1222652	0	True				
ANR	1222657	EqualityExpression	* str != '\\0'		1222652	0		!=			
ANR	1222658	UnaryOperationExpression	* str		1222652	0					
ANR	1222659	UnaryOperator	*		1222652	0					
ANR	1222660	Identifier	str		1222652	1					
ANR	1222661	PrimaryExpression	'\\0'		1222652	1					
ANR	1222662	CompoundStatement		2:22:23:23	1222652	1					
ANR	1222663	IfStatement	if ( * str == x9 || * str == xA || * str == xD )		1222652	0					
ANR	1222664	Condition	* str == x9 || * str == xA || * str == xD	243:6:13733:13778	1222652	0	True				
ANR	1222665	OrExpression	* str == x9 || * str == xA || * str == xD		1222652	0		||			
ANR	1222666	EqualityExpression	* str == x9		1222652	0		==			
ANR	1222667	UnaryOperationExpression	* str		1222652	0					
ANR	1222668	UnaryOperator	*		1222652	0					
ANR	1222669	Identifier	str		1222652	1					
ANR	1222670	Identifier	x9		1222652	1					
ANR	1222671	OrExpression	* str == xA || * str == xD		1222652	1		||			
ANR	1222672	EqualityExpression	* str == xA		1222652	0		==			
ANR	1222673	UnaryOperationExpression	* str		1222652	0					
ANR	1222674	UnaryOperator	*		1222652	0					
ANR	1222675	Identifier	str		1222652	1					
ANR	1222676	Identifier	xA		1222652	1					
ANR	1222677	EqualityExpression	* str == xD		1222652	1		==			
ANR	1222678	UnaryOperationExpression	* str		1222652	0					
ANR	1222679	UnaryOperator	*		1222652	0					
ANR	1222680	Identifier	str		1222652	1					
ANR	1222681	Identifier	xD		1222652	1					
ANR	1222682	CompoundStatement		3:55:80:80	1222652	1					
ANR	1222683	ExpressionStatement	* str = ' '	244:3:13787:13797	1222652	0	True				
ANR	1222684	AssignmentExpression	* str = ' '		1222652	0		=			
ANR	1222685	UnaryOperationExpression	* str		1222652	0					
ANR	1222686	UnaryOperator	*		1222652	0					
ANR	1222687	Identifier	str		1222652	1					
ANR	1222688	PrimaryExpression	' '		1222652	1					
ANR	1222689	ExpressionStatement	str ++	246:2:13805:13810	1222652	1	True				
ANR	1222690	PostIncDecOperationExpression	str ++		1222652	0					
ANR	1222691	Identifier	str		1222652	0					
ANR	1222692	IncDec	++		1222652	1					
ANR	1222693	ReturnType	void		1222652	1					
ANR	1222694	Identifier	whiteSpace_replace		1222652	2					
ANR	1222695	ParameterList	xmlChar * str		1222652	3					
ANR	1222696	Parameter	xmlChar * str	240:24:13687:13698	1222652	0	True				
ANR	1222697	ParameterType	xmlChar *		1222652	0					
ANR	1222698	Identifier	str		1222652	1					
ANR	1222699	CFGEntryNode	ENTRY		1222652		True				
ANR	1222700	CFGExitNode	EXIT		1222652		True				
ANR	1222701	Symbol	str		1222652						
ANR	1222702	Symbol	x9		1222652						
ANR	1222703	Symbol	xA		1222652						
ANR	1222704	Symbol	* str		1222652						
ANR	1222705	Symbol	xD		1222652						
ANR	1222706	Function	whiteSpace_collapse	250:0:13818:14136							
ANR	1222707	FunctionDef	whiteSpace_collapse (xmlChar * str)		1222706	0					
ANR	1222708	CompoundStatement		251:0:13857:14136	1222706	0					
ANR	1222709	IdentifierDeclStatement	xmlChar * pos ;	252:1:13860:13872	1222706	0	True				
ANR	1222710	IdentifierDecl	* pos		1222706	0					
ANR	1222711	IdentifierDeclType	xmlChar *		1222706	0					
ANR	1222712	Identifier	pos		1222706	1					
ANR	1222713	IdentifierDeclStatement	xmlChar old ;	253:1:13875:13886	1222706	1	True				
ANR	1222714	IdentifierDecl	old		1222706	0					
ANR	1222715	IdentifierDeclType	xmlChar		1222706	0					
ANR	1222716	Identifier	old		1222706	1					
ANR	1222717	ExpressionStatement	pos = str	255:1:13890:13899	1222706	2	True				
ANR	1222718	AssignmentExpression	pos = str		1222706	0		=			
ANR	1222719	Identifier	pos		1222706	0					
ANR	1222720	Identifier	str		1222706	1					
ANR	1222721	ExpressionStatement	whiteSpace_replace ( str )	256:1:13902:13925	1222706	3	True				
ANR	1222722	CallExpression	whiteSpace_replace ( str )		1222706	0					
ANR	1222723	Callee	whiteSpace_replace		1222706	0					
ANR	1222724	Identifier	whiteSpace_replace		1222706	0					
ANR	1222725	ArgumentList	str		1222706	1					
ANR	1222726	Argument	str		1222706	0					
ANR	1222727	Identifier	str		1222706	0					
ANR	1222728	WhileStatement	while ( * str == ' ' )		1222706	4					
ANR	1222729	Condition	* str == ' '	257:8:13935:13945	1222706	0	True				
ANR	1222730	EqualityExpression	* str == ' '		1222706	0		==			
ANR	1222731	UnaryOperationExpression	* str		1222706	0					
ANR	1222732	UnaryOperator	*		1222706	0					
ANR	1222733	Identifier	str		1222706	1					
ANR	1222734	PrimaryExpression	' '		1222706	1					
ANR	1222735	CompoundStatement		7:21:90:90	1222706	1					
ANR	1222736	ExpressionStatement	str ++	258:2:13952:13957	1222706	0	True				
ANR	1222737	PostIncDecOperationExpression	str ++		1222706	0					
ANR	1222738	Identifier	str		1222706	0					
ANR	1222739	IncDec	++		1222706	1					
ANR	1222740	ExpressionStatement	old = '\\0'	260:1:13963:13973	1222706	5	True				
ANR	1222741	AssignmentExpression	old = '\\0'		1222706	0		=			
ANR	1222742	Identifier	old		1222706	0					
ANR	1222743	PrimaryExpression	'\\0'		1222706	1					
ANR	1222744	WhileStatement	while ( * str != '\\0' )		1222706	6					
ANR	1222745	Condition	* str != '\\0'	261:8:13983:13994	1222706	0	True				
ANR	1222746	EqualityExpression	* str != '\\0'		1222706	0		!=			
ANR	1222747	UnaryOperationExpression	* str		1222706	0					
ANR	1222748	UnaryOperator	*		1222706	0					
ANR	1222749	Identifier	str		1222706	1					
ANR	1222750	PrimaryExpression	'\\0'		1222706	1					
ANR	1222751	CompoundStatement		11:22:139:139	1222706	1					
ANR	1222752	IfStatement	if ( * str != ' ' || old != ' ' )		1222706	0					
ANR	1222753	Condition	* str != ' ' || old != ' '	262:6:14005:14029	1222706	0	True				
ANR	1222754	OrExpression	* str != ' ' || old != ' '		1222706	0		||			
ANR	1222755	EqualityExpression	* str != ' '		1222706	0		!=			
ANR	1222756	UnaryOperationExpression	* str		1222706	0					
ANR	1222757	UnaryOperator	*		1222706	0					
ANR	1222758	Identifier	str		1222706	1					
ANR	1222759	PrimaryExpression	' '		1222706	1					
ANR	1222760	EqualityExpression	old != ' '		1222706	1		!=			
ANR	1222761	Identifier	old		1222706	0					
ANR	1222762	PrimaryExpression	' '		1222706	1					
ANR	1222763	CompoundStatement		12:33:174:174	1222706	1					
ANR	1222764	ExpressionStatement	* pos = * str	263:3:14037:14048	1222706	0	True				
ANR	1222765	AssignmentExpression	* pos = * str		1222706	0		=			
ANR	1222766	UnaryOperationExpression	* pos		1222706	0					
ANR	1222767	UnaryOperator	*		1222706	0					
ANR	1222768	Identifier	pos		1222706	1					
ANR	1222769	UnaryOperationExpression	* str		1222706	1					
ANR	1222770	UnaryOperator	*		1222706	0					
ANR	1222771	Identifier	str		1222706	1					
ANR	1222772	ExpressionStatement	pos ++	264:3:14053:14058	1222706	1	True				
ANR	1222773	PostIncDecOperationExpression	pos ++		1222706	0					
ANR	1222774	Identifier	pos		1222706	0					
ANR	1222775	IncDec	++		1222706	1					
ANR	1222776	ExpressionStatement	old = * str	266:2:14066:14076	1222706	1	True				
ANR	1222777	AssignmentExpression	old = * str		1222706	0		=			
ANR	1222778	Identifier	old		1222706	0					
ANR	1222779	UnaryOperationExpression	* str		1222706	1					
ANR	1222780	UnaryOperator	*		1222706	0					
ANR	1222781	Identifier	str		1222706	1					
ANR	1222782	ExpressionStatement	str ++	267:2:14080:14085	1222706	2	True				
ANR	1222783	PostIncDecOperationExpression	str ++		1222706	0					
ANR	1222784	Identifier	str		1222706	0					
ANR	1222785	IncDec	++		1222706	1					
ANR	1222786	IfStatement	if ( old == ' ' )		1222706	7					
ANR	1222787	Condition	old == ' '	269:5:14095:14104	1222706	0	True				
ANR	1222788	EqualityExpression	old == ' '		1222706	0		==			
ANR	1222789	Identifier	old		1222706	0					
ANR	1222790	PrimaryExpression	' '		1222706	1					
ANR	1222791	CompoundStatement		19:17:249:249	1222706	1					
ANR	1222792	ExpressionStatement	-- pos	270:3:14112:14117	1222706	0	True				
ANR	1222793	UnaryExpression	-- pos		1222706	0					
ANR	1222794	IncDec	--		1222706	0					
ANR	1222795	Identifier	pos		1222706	1					
ANR	1222796	ExpressionStatement	* pos = '\\0'	272:1:14123:14134	1222706	8	True				
ANR	1222797	AssignmentExpression	* pos = '\\0'		1222706	0		=			
ANR	1222798	UnaryOperationExpression	* pos		1222706	0					
ANR	1222799	UnaryOperator	*		1222706	0					
ANR	1222800	Identifier	pos		1222706	1					
ANR	1222801	PrimaryExpression	'\\0'		1222706	1					
ANR	1222802	ReturnType	void		1222706	1					
ANR	1222803	Identifier	whiteSpace_collapse		1222706	2					
ANR	1222804	ParameterList	xmlChar * str		1222706	3					
ANR	1222805	Parameter	xmlChar * str	250:25:13843:13854	1222706	0	True				
ANR	1222806	ParameterType	xmlChar *		1222706	0					
ANR	1222807	Identifier	str		1222706	1					
ANR	1222808	CFGEntryNode	ENTRY		1222706		True				
ANR	1222809	CFGExitNode	EXIT		1222706		True				
ANR	1222810	Symbol	str		1222706						
ANR	1222811	Symbol	pos		1222706						
ANR	1222812	Symbol	old		1222706						
ANR	1222813	Symbol	* str		1222706						
ANR	1222814	Symbol	* pos		1222706						
ANR	1222815	Function	find_encoder_by_type_name	275:0:14139:14590							
ANR	1222816	FunctionDef	"find_encoder_by_type_name (sdlPtr sdl , const char * type)"		1222815	0					
ANR	1222817	CompoundStatement		276:0:14212:14590	1222815	0					
ANR	1222818	IfStatement	if ( sdl && sdl -> encoders )		1222815	0					
ANR	1222819	Condition	sdl && sdl -> encoders	277:5:14219:14238	1222815	0	True				
ANR	1222820	AndExpression	sdl && sdl -> encoders		1222815	0		&&			
ANR	1222821	Identifier	sdl		1222815	0					
ANR	1222822	PtrMemberAccess	sdl -> encoders		1222815	1					
ANR	1222823	Identifier	sdl		1222815	0					
ANR	1222824	Identifier	encoders		1222815	1					
ANR	1222825	CompoundStatement		4:2:52:66	1222815	1					
ANR	1222826	IdentifierDeclStatement	HashPosition pos ;	278:2:14245:14261	1222815	0	True				
ANR	1222827	IdentifierDecl	pos		1222815	0					
ANR	1222828	IdentifierDeclType	HashPosition		1222815	0					
ANR	1222829	Identifier	pos		1222815	1					
ANR	1222830	IdentifierDeclStatement	encodePtr * enc ;	279:2:14265:14279	1222815	1	True				
ANR	1222831	IdentifierDecl	* enc		1222815	0					
ANR	1222832	IdentifierDeclType	encodePtr *		1222815	0					
ANR	1222833	Identifier	enc		1222815	1					
ANR	1222834	ForStatement	"for ( zend_hash_internal_pointer_reset_ex ( sdl -> encoders , & pos ) ; zend_hash_get_current_data_ex ( sdl -> encoders , ( void * * ) & enc , & pos ) == SUCCESS ; zend_hash_move_forward_ex ( sdl -> encoders , & pos ) )"		1222815	2					
ANR	1222835	ForInit	"zend_hash_internal_pointer_reset_ex ( sdl -> encoders , & pos ) ;"	281:7:14289:14345	1222815	0	True				
ANR	1222836	CallExpression	"zend_hash_internal_pointer_reset_ex ( sdl -> encoders , & pos )"		1222815	0					
ANR	1222837	Callee	zend_hash_internal_pointer_reset_ex		1222815	0					
ANR	1222838	Identifier	zend_hash_internal_pointer_reset_ex		1222815	0					
ANR	1222839	ArgumentList	sdl -> encoders		1222815	1					
ANR	1222840	Argument	sdl -> encoders		1222815	0					
ANR	1222841	PtrMemberAccess	sdl -> encoders		1222815	0					
ANR	1222842	Identifier	sdl		1222815	0					
ANR	1222843	Identifier	encoders		1222815	1					
ANR	1222844	Argument	& pos		1222815	1					
ANR	1222845	UnaryOperationExpression	& pos		1222815	0					
ANR	1222846	UnaryOperator	&		1222815	0					
ANR	1222847	Identifier	pos		1222815	1					
ANR	1222848	Condition	"zend_hash_get_current_data_ex ( sdl -> encoders , ( void * * ) & enc , & pos ) == SUCCESS"	282:7:14354:14430	1222815	1	True				
ANR	1222849	EqualityExpression	"zend_hash_get_current_data_ex ( sdl -> encoders , ( void * * ) & enc , & pos ) == SUCCESS"		1222815	0		==			
ANR	1222850	CallExpression	"zend_hash_get_current_data_ex ( sdl -> encoders , ( void * * ) & enc , & pos )"		1222815	0					
ANR	1222851	Callee	zend_hash_get_current_data_ex		1222815	0					
ANR	1222852	Identifier	zend_hash_get_current_data_ex		1222815	0					
ANR	1222853	ArgumentList	sdl -> encoders		1222815	1					
ANR	1222854	Argument	sdl -> encoders		1222815	0					
ANR	1222855	PtrMemberAccess	sdl -> encoders		1222815	0					
ANR	1222856	Identifier	sdl		1222815	0					
ANR	1222857	Identifier	encoders		1222815	1					
ANR	1222858	Argument	( void * * ) & enc		1222815	1					
ANR	1222859	CastExpression	( void * * ) & enc		1222815	0					
ANR	1222860	CastTarget	void * *		1222815	0					
ANR	1222861	UnaryOperationExpression	& enc		1222815	1					
ANR	1222862	UnaryOperator	&		1222815	0					
ANR	1222863	Identifier	enc		1222815	1					
ANR	1222864	Argument	& pos		1222815	2					
ANR	1222865	UnaryOperationExpression	& pos		1222815	0					
ANR	1222866	UnaryOperator	&		1222815	0					
ANR	1222867	Identifier	pos		1222815	1					
ANR	1222868	Identifier	SUCCESS		1222815	1					
ANR	1222869	CallExpression	"zend_hash_move_forward_ex ( sdl -> encoders , & pos )"	283:7:14440:14485	1222815	2	True				
ANR	1222870	Callee	zend_hash_move_forward_ex		1222815	0					
ANR	1222871	Identifier	zend_hash_move_forward_ex		1222815	0					
ANR	1222872	ArgumentList	sdl -> encoders		1222815	1					
ANR	1222873	Argument	sdl -> encoders		1222815	0					
ANR	1222874	PtrMemberAccess	sdl -> encoders		1222815	0					
ANR	1222875	Identifier	sdl		1222815	0					
ANR	1222876	Identifier	encoders		1222815	1					
ANR	1222877	Argument	& pos		1222815	1					
ANR	1222878	UnaryOperationExpression	& pos		1222815	0					
ANR	1222879	UnaryOperator	&		1222815	0					
ANR	1222880	Identifier	pos		1222815	1					
ANR	1222881	CompoundStatement		8:55:275:275	1222815	3					
ANR	1222882	IfStatement	"if ( strcmp ( ( * enc ) -> details . type_str , type ) == 0 )"		1222815	0					
ANR	1222883	Condition	"strcmp ( ( * enc ) -> details . type_str , type ) == 0"	284:10:14500:14542	1222815	0	True				
ANR	1222884	EqualityExpression	"strcmp ( ( * enc ) -> details . type_str , type ) == 0"		1222815	0		==			
ANR	1222885	CallExpression	"strcmp ( ( * enc ) -> details . type_str , type )"		1222815	0					
ANR	1222886	Callee	strcmp		1222815	0					
ANR	1222887	Identifier	strcmp		1222815	0					
ANR	1222888	ArgumentList	( * enc ) -> details . type_str		1222815	1					
ANR	1222889	Argument	( * enc ) -> details . type_str		1222815	0					
ANR	1222890	MemberAccess	( * enc ) -> details . type_str		1222815	0					
ANR	1222891	PtrMemberAccess	( * enc ) -> details		1222815	0					
ANR	1222892	UnaryOperationExpression	* enc		1222815	0					
ANR	1222893	UnaryOperator	*		1222815	0					
ANR	1222894	Identifier	enc		1222815	1					
ANR	1222895	Identifier	details		1222815	1					
ANR	1222896	Identifier	type_str		1222815	1					
ANR	1222897	Argument	type		1222815	1					
ANR	1222898	Identifier	type		1222815	0					
ANR	1222899	PrimaryExpression	0		1222815	1					
ANR	1222900	CompoundStatement		9:55:332:332	1222815	1					
ANR	1222901	ReturnStatement	return * enc ;	285:4:14551:14562	1222815	0	True				
ANR	1222902	UnaryOperationExpression	* enc		1222815	0					
ANR	1222903	UnaryOperator	*		1222815	0					
ANR	1222904	Identifier	enc		1222815	1					
ANR	1222905	ReturnStatement	return NULL ;	289:1:14577:14588	1222815	1	True				
ANR	1222906	Identifier	NULL		1222815	0					
ANR	1222907	ReturnType	static encodePtr		1222815	1					
ANR	1222908	Identifier	find_encoder_by_type_name		1222815	2					
ANR	1222909	ParameterList	"sdlPtr sdl , const char * type"		1222815	3					
ANR	1222910	Parameter	sdlPtr sdl	275:43:14182:14191	1222815	0	True				
ANR	1222911	ParameterType	sdlPtr		1222815	0					
ANR	1222912	Identifier	sdl		1222815	1					
ANR	1222913	Parameter	const char * type	275:55:14194:14209	1222815	1	True				
ANR	1222914	ParameterType	const char *		1222815	0					
ANR	1222915	Identifier	type		1222815	1					
ANR	1222916	CFGEntryNode	ENTRY		1222815		True				
ANR	1222917	CFGExitNode	EXIT		1222815		True				
ANR	1222918	Symbol	( * enc ) -> details		1222815						
ANR	1222919	Symbol	strcmp		1222815						
ANR	1222920	Symbol	SUCCESS		1222815						
ANR	1222921	Symbol	zend_hash_get_current_data_ex		1222815						
ANR	1222922	Symbol	NULL		1222815						
ANR	1222923	Symbol	* sdl		1222815						
ANR	1222924	Symbol	& enc		1222815						
ANR	1222925	Symbol	type		1222815						
ANR	1222926	Symbol	( * enc ) -> details . type_str		1222815						
ANR	1222927	Symbol	* * enc		1222815						
ANR	1222928	Symbol	pos		1222815						
ANR	1222929	Symbol	sdl -> encoders		1222815						
ANR	1222930	Symbol	sdl		1222815						
ANR	1222931	Symbol	enc		1222815						
ANR	1222932	Symbol	* enc		1222815						
ANR	1222933	Symbol	& pos		1222815						
ANR	1222934	Function	soap_check_zval_ref	292:0:14593:16603							
ANR	1222935	FunctionDef	"soap_check_zval_ref (zval * data , xmlNodePtr node TSRMLS_DC)"		1222934	0					
ANR	1222936	CompoundStatement		292:76:14669:16603	1222934	0					
ANR	1222937	IdentifierDeclStatement	xmlNodePtr * node_ptr ;	293:1:14672:14692	1222934	0	True				
ANR	1222938	IdentifierDecl	* node_ptr		1222934	0					
ANR	1222939	IdentifierDeclType	xmlNodePtr *		1222934	0					
ANR	1222940	Identifier	node_ptr		1222934	1					
ANR	1222941	IfStatement	if ( SOAP_GLOBAL ( ref_map ) )		1222934	1					
ANR	1222942	Condition	SOAP_GLOBAL ( ref_map )	295:5:14700:14719	1222934	0	True				
ANR	1222943	CallExpression	SOAP_GLOBAL ( ref_map )		1222934	0					
ANR	1222944	Callee	SOAP_GLOBAL		1222934	0					
ANR	1222945	Identifier	SOAP_GLOBAL		1222934	0					
ANR	1222946	ArgumentList	ref_map		1222934	1					
ANR	1222947	Argument	ref_map		1222934	0					
ANR	1222948	Identifier	ref_map		1222934	0					
ANR	1222949	CompoundStatement		4:27:52:52	1222934	1					
ANR	1222950	IfStatement	if ( Z_TYPE_P ( data ) == IS_OBJECT )		1222934	0					
ANR	1222951	Condition	Z_TYPE_P ( data ) == IS_OBJECT	296:6:14730:14756	1222934	0	True				
ANR	1222952	EqualityExpression	Z_TYPE_P ( data ) == IS_OBJECT		1222934	0		==			
ANR	1222953	CallExpression	Z_TYPE_P ( data )		1222934	0					
ANR	1222954	Callee	Z_TYPE_P		1222934	0					
ANR	1222955	Identifier	Z_TYPE_P		1222934	0					
ANR	1222956	ArgumentList	data		1222934	1					
ANR	1222957	Argument	data		1222934	0					
ANR	1222958	Identifier	data		1222934	0					
ANR	1222959	Identifier	IS_OBJECT		1222934	1					
ANR	1222960	CompoundStatement		5:35:89:89	1222934	1					
ANR	1222961	Statement	data	297:3:14764:14767	1222934	0	True				
ANR	1222962	Statement	=	297:8:14769:14769	1222934	1	True				
ANR	1222963	Statement	(	297:10:14771:14771	1222934	2	True				
ANR	1222964	Statement	zval	297:11:14772:14775	1222934	3	True				
ANR	1222965	Statement	*	297:15:14776:14776	1222934	4	True				
ANR	1222966	Statement	)	297:16:14777:14777	1222934	5	True				
ANR	1222967	Statement	zend_objects_get_address	297:17:14778:14801	1222934	6	True				
ANR	1222968	Statement	(	297:41:14802:14802	1222934	7	True				
ANR	1222969	Statement	data	297:42:14803:14806	1222934	8	True				
ANR	1222970	Statement	TSRMLS_CC	297:47:14808:14816	1222934	9	True				
ANR	1222971	Statement	)	297:56:14817:14817	1222934	10	True				
ANR	1222972	ExpressionStatement		297:57:14818:14818	1222934	11	True				
ANR	1222973	IfStatement	"if ( zend_hash_index_find ( SOAP_GLOBAL ( ref_map ) , ( ulong ) data , ( void * * ) & node_ptr ) == SUCCESS )"		1222934	1					
ANR	1222974	Condition	"zend_hash_index_find ( SOAP_GLOBAL ( ref_map ) , ( ulong ) data , ( void * * ) & node_ptr ) == SUCCESS"	299:6:14830:14914	1222934	0	True				
ANR	1222975	EqualityExpression	"zend_hash_index_find ( SOAP_GLOBAL ( ref_map ) , ( ulong ) data , ( void * * ) & node_ptr ) == SUCCESS"		1222934	0		==			
ANR	1222976	CallExpression	"zend_hash_index_find ( SOAP_GLOBAL ( ref_map ) , ( ulong ) data , ( void * * ) & node_ptr )"		1222934	0					
ANR	1222977	Callee	zend_hash_index_find		1222934	0					
ANR	1222978	Identifier	zend_hash_index_find		1222934	0					
ANR	1222979	ArgumentList	SOAP_GLOBAL ( ref_map )		1222934	1					
ANR	1222980	Argument	SOAP_GLOBAL ( ref_map )		1222934	0					
ANR	1222981	CallExpression	SOAP_GLOBAL ( ref_map )		1222934	0					
ANR	1222982	Callee	SOAP_GLOBAL		1222934	0					
ANR	1222983	Identifier	SOAP_GLOBAL		1222934	0					
ANR	1222984	ArgumentList	ref_map		1222934	1					
ANR	1222985	Argument	ref_map		1222934	0					
ANR	1222986	Identifier	ref_map		1222934	0					
ANR	1222987	Argument	( ulong ) data		1222934	1					
ANR	1222988	CastExpression	( ulong ) data		1222934	0					
ANR	1222989	CastTarget	ulong		1222934	0					
ANR	1222990	Identifier	data		1222934	1					
ANR	1222991	Argument	( void * * ) & node_ptr		1222934	2					
ANR	1222992	CastExpression	( void * * ) & node_ptr		1222934	0					
ANR	1222993	CastTarget	void * *		1222934	0					
ANR	1222994	UnaryOperationExpression	& node_ptr		1222934	1					
ANR	1222995	UnaryOperator	&		1222934	0					
ANR	1222996	Identifier	node_ptr		1222934	1					
ANR	1222997	Identifier	SUCCESS		1222934	1					
ANR	1222998	CompoundStatement		11:3:311:333	1222934	1					
ANR	1222999	IdentifierDeclStatement	xmlAttrPtr attr = ( * node_ptr ) -> properties ;	300:3:14922:14963	1222934	0	True				
ANR	1223000	IdentifierDecl	attr = ( * node_ptr ) -> properties		1222934	0					
ANR	1223001	IdentifierDeclType	xmlAttrPtr		1222934	0					
ANR	1223002	Identifier	attr		1222934	1					
ANR	1223003	AssignmentExpression	attr = ( * node_ptr ) -> properties		1222934	2		=			
ANR	1223004	Identifier	attr		1222934	0					
ANR	1223005	PtrMemberAccess	( * node_ptr ) -> properties		1222934	1					
ANR	1223006	UnaryOperationExpression	* node_ptr		1222934	0					
ANR	1223007	UnaryOperator	*		1222934	0					
ANR	1223008	Identifier	node_ptr		1222934	1					
ANR	1223009	Identifier	properties		1222934	1					
ANR	1223010	IdentifierDeclStatement	char * id ;	301:3:14968:14976	1222934	1	True				
ANR	1223011	IdentifierDecl	* id		1222934	0					
ANR	1223012	IdentifierDeclType	char *		1222934	0					
ANR	1223013	Identifier	id		1222934	1					
ANR	1223014	IdentifierDeclStatement	smart_str prefix = { 0 } ;	302:3:14981:15003	1222934	2	True				
ANR	1223015	IdentifierDecl	prefix = { 0 }		1222934	0					
ANR	1223016	IdentifierDeclType	smart_str		1222934	0					
ANR	1223017	Identifier	prefix		1222934	1					
ANR	1223018	AssignmentExpression	prefix = { 0 }		1222934	2		=			
ANR	1223019	Identifier	prefix		1222934	0					
ANR	1223020	InitializerList	0		1222934	1					
ANR	1223021	PrimaryExpression	0		1222934	0					
ANR	1223022	IfStatement	if ( * node_ptr == node )		1222934	3					
ANR	1223023	Condition	* node_ptr == node	304:7:15013:15029	1222934	0	True				
ANR	1223024	EqualityExpression	* node_ptr == node		1222934	0		==			
ANR	1223025	UnaryOperationExpression	* node_ptr		1222934	0					
ANR	1223026	UnaryOperator	*		1222934	0					
ANR	1223027	Identifier	node_ptr		1222934	1					
ANR	1223028	Identifier	node		1222934	1					
ANR	1223029	CompoundStatement		13:26:362:362	1222934	1					
ANR	1223030	ReturnStatement	return 0 ;	305:4:15038:15046	1222934	0	True				
ANR	1223031	PrimaryExpression	0		1222934	0					
ANR	1223032	ExpressionStatement	"xmlNodeSetName ( node , ( * node_ptr ) -> name )"	307:3:15056:15095	1222934	4	True				
ANR	1223033	CallExpression	"xmlNodeSetName ( node , ( * node_ptr ) -> name )"		1222934	0					
ANR	1223034	Callee	xmlNodeSetName		1222934	0					
ANR	1223035	Identifier	xmlNodeSetName		1222934	0					
ANR	1223036	ArgumentList	node		1222934	1					
ANR	1223037	Argument	node		1222934	0					
ANR	1223038	Identifier	node		1222934	0					
ANR	1223039	Argument	( * node_ptr ) -> name		1222934	1					
ANR	1223040	PtrMemberAccess	( * node_ptr ) -> name		1222934	0					
ANR	1223041	UnaryOperationExpression	* node_ptr		1222934	0					
ANR	1223042	UnaryOperator	*		1222934	0					
ANR	1223043	Identifier	node_ptr		1222934	1					
ANR	1223044	Identifier	name		1222934	1					
ANR	1223045	ExpressionStatement	"xmlSetNs ( node , ( * node_ptr ) -> ns )"	308:3:15100:15131	1222934	5	True				
ANR	1223046	CallExpression	"xmlSetNs ( node , ( * node_ptr ) -> ns )"		1222934	0					
ANR	1223047	Callee	xmlSetNs		1222934	0					
ANR	1223048	Identifier	xmlSetNs		1222934	0					
ANR	1223049	ArgumentList	node		1222934	1					
ANR	1223050	Argument	node		1222934	0					
ANR	1223051	Identifier	node		1222934	0					
ANR	1223052	Argument	( * node_ptr ) -> ns		1222934	1					
ANR	1223053	PtrMemberAccess	( * node_ptr ) -> ns		1222934	0					
ANR	1223054	UnaryOperationExpression	* node_ptr		1222934	0					
ANR	1223055	UnaryOperator	*		1222934	0					
ANR	1223056	Identifier	node_ptr		1222934	1					
ANR	1223057	Identifier	ns		1222934	1					
ANR	1223058	IfStatement	if ( SOAP_GLOBAL ( soap_version ) == SOAP_1_1 )		1222934	6					
ANR	1223059	Condition	SOAP_GLOBAL ( soap_version ) == SOAP_1_1	309:7:15140:15176	1222934	0	True				
ANR	1223060	EqualityExpression	SOAP_GLOBAL ( soap_version ) == SOAP_1_1		1222934	0		==			
ANR	1223061	CallExpression	SOAP_GLOBAL ( soap_version )		1222934	0					
ANR	1223062	Callee	SOAP_GLOBAL		1222934	0					
ANR	1223063	Identifier	SOAP_GLOBAL		1222934	0					
ANR	1223064	ArgumentList	soap_version		1222934	1					
ANR	1223065	Argument	soap_version		1222934	0					
ANR	1223066	Identifier	soap_version		1222934	0					
ANR	1223067	Identifier	SOAP_1_1		1222934	1					
ANR	1223068	CompoundStatement		18:46:509:509	1222934	1					
ANR	1223069	WhileStatement	while ( 1 )		1222934	0					
ANR	1223070	Condition	1	310:11:15192:15192	1222934	0	True				
ANR	1223071	PrimaryExpression	1		1222934	0					
ANR	1223072	CompoundStatement		19:14:525:525	1222934	1					
ANR	1223073	ExpressionStatement	"attr = get_attribute ( attr , ""id"" )"	311:5:15202:15234	1222934	0	True				
ANR	1223074	AssignmentExpression	"attr = get_attribute ( attr , ""id"" )"		1222934	0		=			
ANR	1223075	Identifier	attr		1222934	0					
ANR	1223076	CallExpression	"get_attribute ( attr , ""id"" )"		1222934	1					
ANR	1223077	Callee	get_attribute		1222934	0					
ANR	1223078	Identifier	get_attribute		1222934	0					
ANR	1223079	ArgumentList	attr		1222934	1					
ANR	1223080	Argument	attr		1222934	0					
ANR	1223081	Identifier	attr		1222934	0					
ANR	1223082	Argument	"""id"""		1222934	1					
ANR	1223083	PrimaryExpression	"""id"""		1222934	0					
ANR	1223084	IfStatement	if ( attr == NULL || attr -> ns == NULL )		1222934	1					
ANR	1223085	Condition	attr == NULL || attr -> ns == NULL	312:9:15245:15276	1222934	0	True				
ANR	1223086	OrExpression	attr == NULL || attr -> ns == NULL		1222934	0		||			
ANR	1223087	EqualityExpression	attr == NULL		1222934	0		==			
ANR	1223088	Identifier	attr		1222934	0					
ANR	1223089	Identifier	NULL		1222934	1					
ANR	1223090	EqualityExpression	attr -> ns == NULL		1222934	1		==			
ANR	1223091	PtrMemberAccess	attr -> ns		1222934	0					
ANR	1223092	Identifier	attr		1222934	0					
ANR	1223093	Identifier	ns		1222934	1					
ANR	1223094	Identifier	NULL		1222934	1					
ANR	1223095	CompoundStatement		21:43:609:609	1222934	1					
ANR	1223096	BreakStatement	break ;	313:6:15287:15292	1222934	0	True				
ANR	1223097	ExpressionStatement	attr = attr -> next	315:5:15306:15323	1222934	2	True				
ANR	1223098	AssignmentExpression	attr = attr -> next		1222934	0		=			
ANR	1223099	Identifier	attr		1222934	0					
ANR	1223100	PtrMemberAccess	attr -> next		1222934	1					
ANR	1223101	Identifier	attr		1222934	0					
ANR	1223102	Identifier	next		1222934	1					
ANR	1223103	IfStatement	if ( attr )		1222934	1					
ANR	1223104	Condition	attr	317:8:15339:15342	1222934	0	True				
ANR	1223105	Identifier	attr		1222934	0					
ANR	1223106	CompoundStatement		26:14:675:675	1222934	1					
ANR	1223107	ExpressionStatement	id = ( char * ) attr -> children -> content	318:5:15352:15387	1222934	0	True				
ANR	1223108	AssignmentExpression	id = ( char * ) attr -> children -> content		1222934	0		=			
ANR	1223109	Identifier	id		1222934	0					
ANR	1223110	CastExpression	( char * ) attr -> children -> content		1222934	1					
ANR	1223111	CastTarget	char *		1222934	0					
ANR	1223112	PtrMemberAccess	attr -> children -> content		1222934	1					
ANR	1223113	PtrMemberAccess	attr -> children		1222934	0					
ANR	1223114	Identifier	attr		1222934	0					
ANR	1223115	Identifier	children		1222934	1					
ANR	1223116	Identifier	content		1222934	1					
ANR	1223117	ExpressionStatement	"smart_str_appendc ( & prefix , '#' )"	319:5:15394:15425	1222934	1	True				
ANR	1223118	CallExpression	"smart_str_appendc ( & prefix , '#' )"		1222934	0					
ANR	1223119	Callee	smart_str_appendc		1222934	0					
ANR	1223120	Identifier	smart_str_appendc		1222934	0					
ANR	1223121	ArgumentList	& prefix		1222934	1					
ANR	1223122	Argument	& prefix		1222934	0					
ANR	1223123	UnaryOperationExpression	& prefix		1222934	0					
ANR	1223124	UnaryOperator	&		1222934	0					
ANR	1223125	Identifier	prefix		1222934	1					
ANR	1223126	Argument	'#'		1222934	1					
ANR	1223127	PrimaryExpression	'#'		1222934	0					
ANR	1223128	ExpressionStatement	"smart_str_appends ( & prefix , id )"	320:5:15432:15462	1222934	2	True				
ANR	1223129	CallExpression	"smart_str_appends ( & prefix , id )"		1222934	0					
ANR	1223130	Callee	smart_str_appends		1222934	0					
ANR	1223131	Identifier	smart_str_appends		1222934	0					
ANR	1223132	ArgumentList	& prefix		1222934	1					
ANR	1223133	Argument	& prefix		1222934	0					
ANR	1223134	UnaryOperationExpression	& prefix		1222934	0					
ANR	1223135	UnaryOperator	&		1222934	0					
ANR	1223136	Identifier	prefix		1222934	1					
ANR	1223137	Argument	id		1222934	1					
ANR	1223138	Identifier	id		1222934	0					
ANR	1223139	ExpressionStatement	smart_str_0 ( & prefix )	321:5:15469:15489	1222934	3	True				
ANR	1223140	CallExpression	smart_str_0 ( & prefix )		1222934	0					
ANR	1223141	Callee	smart_str_0		1222934	0					
ANR	1223142	Identifier	smart_str_0		1222934	0					
ANR	1223143	ArgumentList	& prefix		1222934	1					
ANR	1223144	Argument	& prefix		1222934	0					
ANR	1223145	UnaryOperationExpression	& prefix		1222934	0					
ANR	1223146	UnaryOperator	&		1222934	0					
ANR	1223147	Identifier	prefix		1222934	1					
ANR	1223148	ExpressionStatement	id = prefix . c	322:5:15496:15509	1222934	4	True				
ANR	1223149	AssignmentExpression	id = prefix . c		1222934	0		=			
ANR	1223150	Identifier	id		1222934	0					
ANR	1223151	MemberAccess	prefix . c		1222934	1					
ANR	1223152	Identifier	prefix		1222934	0					
ANR	1223153	Identifier	c		1222934	1					
ANR	1223154	ElseStatement	else		1222934	0					
ANR	1223155	CompoundStatement		32:11:852:852	1222934	0					
ANR	1223156	ExpressionStatement	SOAP_GLOBAL ( cur_uniq_ref ) ++	324:5:15529:15556	1222934	0	True				
ANR	1223157	PostIncDecOperationExpression	SOAP_GLOBAL ( cur_uniq_ref ) ++		1222934	0					
ANR	1223158	CallExpression	SOAP_GLOBAL ( cur_uniq_ref )		1222934	0					
ANR	1223159	Callee	SOAP_GLOBAL		1222934	0					
ANR	1223160	Identifier	SOAP_GLOBAL		1222934	0					
ANR	1223161	ArgumentList	cur_uniq_ref		1222934	1					
ANR	1223162	Argument	cur_uniq_ref		1222934	0					
ANR	1223163	Identifier	cur_uniq_ref		1222934	0					
ANR	1223164	IncDec	++		1222934	1					
ANR	1223165	ExpressionStatement	"smart_str_appendl ( & prefix , ""#ref"" , 4 )"	325:5:15563:15600	1222934	1	True				
ANR	1223166	CallExpression	"smart_str_appendl ( & prefix , ""#ref"" , 4 )"		1222934	0					
ANR	1223167	Callee	smart_str_appendl		1222934	0					
ANR	1223168	Identifier	smart_str_appendl		1222934	0					
ANR	1223169	ArgumentList	& prefix		1222934	1					
ANR	1223170	Argument	& prefix		1222934	0					
ANR	1223171	UnaryOperationExpression	& prefix		1222934	0					
ANR	1223172	UnaryOperator	&		1222934	0					
ANR	1223173	Identifier	prefix		1222934	1					
ANR	1223174	Argument	"""#ref"""		1222934	1					
ANR	1223175	PrimaryExpression	"""#ref"""		1222934	0					
ANR	1223176	Argument	4		1222934	2					
ANR	1223177	PrimaryExpression	4		1222934	0					
ANR	1223178	ExpressionStatement	"smart_str_append_long ( & prefix , SOAP_GLOBAL ( cur_uniq_ref ) )"	326:5:15607:15664	1222934	2	True				
ANR	1223179	CallExpression	"smart_str_append_long ( & prefix , SOAP_GLOBAL ( cur_uniq_ref ) )"		1222934	0					
ANR	1223180	Callee	smart_str_append_long		1222934	0					
ANR	1223181	Identifier	smart_str_append_long		1222934	0					
ANR	1223182	ArgumentList	& prefix		1222934	1					
ANR	1223183	Argument	& prefix		1222934	0					
ANR	1223184	UnaryOperationExpression	& prefix		1222934	0					
ANR	1223185	UnaryOperator	&		1222934	0					
ANR	1223186	Identifier	prefix		1222934	1					
ANR	1223187	Argument	SOAP_GLOBAL ( cur_uniq_ref )		1222934	1					
ANR	1223188	CallExpression	SOAP_GLOBAL ( cur_uniq_ref )		1222934	0					
ANR	1223189	Callee	SOAP_GLOBAL		1222934	0					
ANR	1223190	Identifier	SOAP_GLOBAL		1222934	0					
ANR	1223191	ArgumentList	cur_uniq_ref		1222934	1					
ANR	1223192	Argument	cur_uniq_ref		1222934	0					
ANR	1223193	Identifier	cur_uniq_ref		1222934	0					
ANR	1223194	ExpressionStatement	smart_str_0 ( & prefix )	327:5:15671:15691	1222934	3	True				
ANR	1223195	CallExpression	smart_str_0 ( & prefix )		1222934	0					
ANR	1223196	Callee	smart_str_0		1222934	0					
ANR	1223197	Identifier	smart_str_0		1222934	0					
ANR	1223198	ArgumentList	& prefix		1222934	1					
ANR	1223199	Argument	& prefix		1222934	0					
ANR	1223200	UnaryOperationExpression	& prefix		1222934	0					
ANR	1223201	UnaryOperator	&		1222934	0					
ANR	1223202	Identifier	prefix		1222934	1					
ANR	1223203	ExpressionStatement	id = prefix . c	328:5:15698:15711	1222934	4	True				
ANR	1223204	AssignmentExpression	id = prefix . c		1222934	0		=			
ANR	1223205	Identifier	id		1222934	0					
ANR	1223206	MemberAccess	prefix . c		1222934	1					
ANR	1223207	Identifier	prefix		1222934	0					
ANR	1223208	Identifier	c		1222934	1					
ANR	1223209	ExpressionStatement	"xmlSetProp ( ( * node_ptr ) , BAD_CAST ( ""id"" ) , BAD_CAST ( id + 1 ) )"	329:5:15718:15773	1222934	5	True				
ANR	1223210	CallExpression	"xmlSetProp ( ( * node_ptr ) , BAD_CAST ( ""id"" ) , BAD_CAST ( id + 1 ) )"		1222934	0					
ANR	1223211	Callee	xmlSetProp		1222934	0					
ANR	1223212	Identifier	xmlSetProp		1222934	0					
ANR	1223213	ArgumentList	* node_ptr		1222934	1					
ANR	1223214	Argument	* node_ptr		1222934	0					
ANR	1223215	UnaryOperationExpression	* node_ptr		1222934	0					
ANR	1223216	UnaryOperator	*		1222934	0					
ANR	1223217	Identifier	node_ptr		1222934	1					
ANR	1223218	Argument	"BAD_CAST ( ""id"" )"		1222934	1					
ANR	1223219	CallExpression	"BAD_CAST ( ""id"" )"		1222934	0					
ANR	1223220	Callee	BAD_CAST		1222934	0					
ANR	1223221	Identifier	BAD_CAST		1222934	0					
ANR	1223222	ArgumentList	"""id"""		1222934	1					
ANR	1223223	Argument	"""id"""		1222934	0					
ANR	1223224	PrimaryExpression	"""id"""		1222934	0					
ANR	1223225	Argument	BAD_CAST ( id + 1 )		1222934	2					
ANR	1223226	CallExpression	BAD_CAST ( id + 1 )		1222934	0					
ANR	1223227	Callee	BAD_CAST		1222934	0					
ANR	1223228	Identifier	BAD_CAST		1222934	0					
ANR	1223229	ArgumentList	id + 1		1222934	1					
ANR	1223230	Argument	id + 1		1222934	0					
ANR	1223231	AdditiveExpression	id + 1		1222934	0		+			
ANR	1223232	Identifier	id		1222934	0					
ANR	1223233	PrimaryExpression	1		1222934	1					
ANR	1223234	ExpressionStatement	"xmlSetProp ( node , BAD_CAST ( ""href"" ) , BAD_CAST ( id ) )"	331:4:15785:15833	1222934	2	True				
ANR	1223235	CallExpression	"xmlSetProp ( node , BAD_CAST ( ""href"" ) , BAD_CAST ( id ) )"		1222934	0					
ANR	1223236	Callee	xmlSetProp		1222934	0					
ANR	1223237	Identifier	xmlSetProp		1222934	0					
ANR	1223238	ArgumentList	node		1222934	1					
ANR	1223239	Argument	node		1222934	0					
ANR	1223240	Identifier	node		1222934	0					
ANR	1223241	Argument	"BAD_CAST ( ""href"" )"		1222934	1					
ANR	1223242	CallExpression	"BAD_CAST ( ""href"" )"		1222934	0					
ANR	1223243	Callee	BAD_CAST		1222934	0					
ANR	1223244	Identifier	BAD_CAST		1222934	0					
ANR	1223245	ArgumentList	"""href"""		1222934	1					
ANR	1223246	Argument	"""href"""		1222934	0					
ANR	1223247	PrimaryExpression	"""href"""		1222934	0					
ANR	1223248	Argument	BAD_CAST ( id )		1222934	2					
ANR	1223249	CallExpression	BAD_CAST ( id )		1222934	0					
ANR	1223250	Callee	BAD_CAST		1222934	0					
ANR	1223251	Identifier	BAD_CAST		1222934	0					
ANR	1223252	ArgumentList	id		1222934	1					
ANR	1223253	Argument	id		1222934	0					
ANR	1223254	Identifier	id		1222934	0					
ANR	1223255	ElseStatement	else		1222934	0					
ANR	1223256	CompoundStatement		41:10:1175:1175	1222934	0					
ANR	1223257	ExpressionStatement	"attr = get_attribute_ex ( attr , ""id"" , SOAP_1_2_ENC_NAMESPACE )"	333:4:15851:15910	1222934	0	True				
ANR	1223258	AssignmentExpression	"attr = get_attribute_ex ( attr , ""id"" , SOAP_1_2_ENC_NAMESPACE )"		1222934	0		=			
ANR	1223259	Identifier	attr		1222934	0					
ANR	1223260	CallExpression	"get_attribute_ex ( attr , ""id"" , SOAP_1_2_ENC_NAMESPACE )"		1222934	1					
ANR	1223261	Callee	get_attribute_ex		1222934	0					
ANR	1223262	Identifier	get_attribute_ex		1222934	0					
ANR	1223263	ArgumentList	attr		1222934	1					
ANR	1223264	Argument	attr		1222934	0					
ANR	1223265	Identifier	attr		1222934	0					
ANR	1223266	Argument	"""id"""		1222934	1					
ANR	1223267	PrimaryExpression	"""id"""		1222934	0					
ANR	1223268	Argument	SOAP_1_2_ENC_NAMESPACE		1222934	2					
ANR	1223269	Identifier	SOAP_1_2_ENC_NAMESPACE		1222934	0					
ANR	1223270	IfStatement	if ( attr )		1222934	1					
ANR	1223271	Condition	attr	334:8:15920:15923	1222934	0	True				
ANR	1223272	Identifier	attr		1222934	0					
ANR	1223273	CompoundStatement		43:14:1256:1256	1222934	1					
ANR	1223274	ExpressionStatement	id = ( char * ) attr -> children -> content	335:5:15933:15968	1222934	0	True				
ANR	1223275	AssignmentExpression	id = ( char * ) attr -> children -> content		1222934	0		=			
ANR	1223276	Identifier	id		1222934	0					
ANR	1223277	CastExpression	( char * ) attr -> children -> content		1222934	1					
ANR	1223278	CastTarget	char *		1222934	0					
ANR	1223279	PtrMemberAccess	attr -> children -> content		1222934	1					
ANR	1223280	PtrMemberAccess	attr -> children		1222934	0					
ANR	1223281	Identifier	attr		1222934	0					
ANR	1223282	Identifier	children		1222934	1					
ANR	1223283	Identifier	content		1222934	1					
ANR	1223284	ExpressionStatement	"smart_str_appendc ( & prefix , '#' )"	336:5:15975:16006	1222934	1	True				
ANR	1223285	CallExpression	"smart_str_appendc ( & prefix , '#' )"		1222934	0					
ANR	1223286	Callee	smart_str_appendc		1222934	0					
ANR	1223287	Identifier	smart_str_appendc		1222934	0					
ANR	1223288	ArgumentList	& prefix		1222934	1					
ANR	1223289	Argument	& prefix		1222934	0					
ANR	1223290	UnaryOperationExpression	& prefix		1222934	0					
ANR	1223291	UnaryOperator	&		1222934	0					
ANR	1223292	Identifier	prefix		1222934	1					
ANR	1223293	Argument	'#'		1222934	1					
ANR	1223294	PrimaryExpression	'#'		1222934	0					
ANR	1223295	ExpressionStatement	"smart_str_appends ( & prefix , id )"	337:5:16013:16043	1222934	2	True				
ANR	1223296	CallExpression	"smart_str_appends ( & prefix , id )"		1222934	0					
ANR	1223297	Callee	smart_str_appends		1222934	0					
ANR	1223298	Identifier	smart_str_appends		1222934	0					
ANR	1223299	ArgumentList	& prefix		1222934	1					
ANR	1223300	Argument	& prefix		1222934	0					
ANR	1223301	UnaryOperationExpression	& prefix		1222934	0					
ANR	1223302	UnaryOperator	&		1222934	0					
ANR	1223303	Identifier	prefix		1222934	1					
ANR	1223304	Argument	id		1222934	1					
ANR	1223305	Identifier	id		1222934	0					
ANR	1223306	ExpressionStatement	smart_str_0 ( & prefix )	338:5:16050:16070	1222934	3	True				
ANR	1223307	CallExpression	smart_str_0 ( & prefix )		1222934	0					
ANR	1223308	Callee	smart_str_0		1222934	0					
ANR	1223309	Identifier	smart_str_0		1222934	0					
ANR	1223310	ArgumentList	& prefix		1222934	1					
ANR	1223311	Argument	& prefix		1222934	0					
ANR	1223312	UnaryOperationExpression	& prefix		1222934	0					
ANR	1223313	UnaryOperator	&		1222934	0					
ANR	1223314	Identifier	prefix		1222934	1					
ANR	1223315	ExpressionStatement	id = prefix . c	339:5:16077:16090	1222934	4	True				
ANR	1223316	AssignmentExpression	id = prefix . c		1222934	0		=			
ANR	1223317	Identifier	id		1222934	0					
ANR	1223318	MemberAccess	prefix . c		1222934	1					
ANR	1223319	Identifier	prefix		1222934	0					
ANR	1223320	Identifier	c		1222934	1					
ANR	1223321	ElseStatement	else		1222934	0					
ANR	1223322	CompoundStatement		49:11:1433:1433	1222934	0					
ANR	1223323	ExpressionStatement	SOAP_GLOBAL ( cur_uniq_ref ) ++	341:5:16110:16137	1222934	0	True				
ANR	1223324	PostIncDecOperationExpression	SOAP_GLOBAL ( cur_uniq_ref ) ++		1222934	0					
ANR	1223325	CallExpression	SOAP_GLOBAL ( cur_uniq_ref )		1222934	0					
ANR	1223326	Callee	SOAP_GLOBAL		1222934	0					
ANR	1223327	Identifier	SOAP_GLOBAL		1222934	0					
ANR	1223328	ArgumentList	cur_uniq_ref		1222934	1					
ANR	1223329	Argument	cur_uniq_ref		1222934	0					
ANR	1223330	Identifier	cur_uniq_ref		1222934	0					
ANR	1223331	IncDec	++		1222934	1					
ANR	1223332	ExpressionStatement	"smart_str_appendl ( & prefix , ""#ref"" , 4 )"	342:5:16144:16181	1222934	1	True				
ANR	1223333	CallExpression	"smart_str_appendl ( & prefix , ""#ref"" , 4 )"		1222934	0					
ANR	1223334	Callee	smart_str_appendl		1222934	0					
ANR	1223335	Identifier	smart_str_appendl		1222934	0					
ANR	1223336	ArgumentList	& prefix		1222934	1					
ANR	1223337	Argument	& prefix		1222934	0					
ANR	1223338	UnaryOperationExpression	& prefix		1222934	0					
ANR	1223339	UnaryOperator	&		1222934	0					
ANR	1223340	Identifier	prefix		1222934	1					
ANR	1223341	Argument	"""#ref"""		1222934	1					
ANR	1223342	PrimaryExpression	"""#ref"""		1222934	0					
ANR	1223343	Argument	4		1222934	2					
ANR	1223344	PrimaryExpression	4		1222934	0					
ANR	1223345	ExpressionStatement	"smart_str_append_long ( & prefix , SOAP_GLOBAL ( cur_uniq_ref ) )"	343:5:16188:16245	1222934	2	True				
ANR	1223346	CallExpression	"smart_str_append_long ( & prefix , SOAP_GLOBAL ( cur_uniq_ref ) )"		1222934	0					
ANR	1223347	Callee	smart_str_append_long		1222934	0					
ANR	1223348	Identifier	smart_str_append_long		1222934	0					
ANR	1223349	ArgumentList	& prefix		1222934	1					
ANR	1223350	Argument	& prefix		1222934	0					
ANR	1223351	UnaryOperationExpression	& prefix		1222934	0					
ANR	1223352	UnaryOperator	&		1222934	0					
ANR	1223353	Identifier	prefix		1222934	1					
ANR	1223354	Argument	SOAP_GLOBAL ( cur_uniq_ref )		1222934	1					
ANR	1223355	CallExpression	SOAP_GLOBAL ( cur_uniq_ref )		1222934	0					
ANR	1223356	Callee	SOAP_GLOBAL		1222934	0					
ANR	1223357	Identifier	SOAP_GLOBAL		1222934	0					
ANR	1223358	ArgumentList	cur_uniq_ref		1222934	1					
ANR	1223359	Argument	cur_uniq_ref		1222934	0					
ANR	1223360	Identifier	cur_uniq_ref		1222934	0					
ANR	1223361	ExpressionStatement	smart_str_0 ( & prefix )	344:5:16252:16272	1222934	3	True				
ANR	1223362	CallExpression	smart_str_0 ( & prefix )		1222934	0					
ANR	1223363	Callee	smart_str_0		1222934	0					
ANR	1223364	Identifier	smart_str_0		1222934	0					
ANR	1223365	ArgumentList	& prefix		1222934	1					
ANR	1223366	Argument	& prefix		1222934	0					
ANR	1223367	UnaryOperationExpression	& prefix		1222934	0					
ANR	1223368	UnaryOperator	&		1222934	0					
ANR	1223369	Identifier	prefix		1222934	1					
ANR	1223370	ExpressionStatement	id = prefix . c	345:5:16279:16292	1222934	4	True				
ANR	1223371	AssignmentExpression	id = prefix . c		1222934	0		=			
ANR	1223372	Identifier	id		1222934	0					
ANR	1223373	MemberAccess	prefix . c		1222934	1					
ANR	1223374	Identifier	prefix		1222934	0					
ANR	1223375	Identifier	c		1222934	1					
ANR	1223376	ExpressionStatement	"set_ns_prop ( ( * node_ptr ) , SOAP_1_2_ENC_NAMESPACE , ""id"" , id + 1 )"	346:5:16299:16359	1222934	5	True				
ANR	1223377	CallExpression	"set_ns_prop ( ( * node_ptr ) , SOAP_1_2_ENC_NAMESPACE , ""id"" , id + 1 )"		1222934	0					
ANR	1223378	Callee	set_ns_prop		1222934	0					
ANR	1223379	Identifier	set_ns_prop		1222934	0					
ANR	1223380	ArgumentList	* node_ptr		1222934	1					
ANR	1223381	Argument	* node_ptr		1222934	0					
ANR	1223382	UnaryOperationExpression	* node_ptr		1222934	0					
ANR	1223383	UnaryOperator	*		1222934	0					
ANR	1223384	Identifier	node_ptr		1222934	1					
ANR	1223385	Argument	SOAP_1_2_ENC_NAMESPACE		1222934	1					
ANR	1223386	Identifier	SOAP_1_2_ENC_NAMESPACE		1222934	0					
ANR	1223387	Argument	"""id"""		1222934	2					
ANR	1223388	PrimaryExpression	"""id"""		1222934	0					
ANR	1223389	Argument	id + 1		1222934	3					
ANR	1223390	AdditiveExpression	id + 1		1222934	0		+			
ANR	1223391	Identifier	id		1222934	0					
ANR	1223392	PrimaryExpression	1		1222934	1					
ANR	1223393	ExpressionStatement	"set_ns_prop ( node , SOAP_1_2_ENC_NAMESPACE , ""ref"" , id )"	348:4:16371:16423	1222934	2	True				
ANR	1223394	CallExpression	"set_ns_prop ( node , SOAP_1_2_ENC_NAMESPACE , ""ref"" , id )"		1222934	0					
ANR	1223395	Callee	set_ns_prop		1222934	0					
ANR	1223396	Identifier	set_ns_prop		1222934	0					
ANR	1223397	ArgumentList	node		1222934	1					
ANR	1223398	Argument	node		1222934	0					
ANR	1223399	Identifier	node		1222934	0					
ANR	1223400	Argument	SOAP_1_2_ENC_NAMESPACE		1222934	1					
ANR	1223401	Identifier	SOAP_1_2_ENC_NAMESPACE		1222934	0					
ANR	1223402	Argument	"""ref"""		1222934	2					
ANR	1223403	PrimaryExpression	"""ref"""		1222934	0					
ANR	1223404	Argument	id		1222934	3					
ANR	1223405	Identifier	id		1222934	0					
ANR	1223406	ExpressionStatement	smart_str_free ( & prefix )	350:3:16433:16456	1222934	7	True				
ANR	1223407	CallExpression	smart_str_free ( & prefix )		1222934	0					
ANR	1223408	Callee	smart_str_free		1222934	0					
ANR	1223409	Identifier	smart_str_free		1222934	0					
ANR	1223410	ArgumentList	& prefix		1222934	1					
ANR	1223411	Argument	& prefix		1222934	0					
ANR	1223412	UnaryOperationExpression	& prefix		1222934	0					
ANR	1223413	UnaryOperator	&		1222934	0					
ANR	1223414	Identifier	prefix		1222934	1					
ANR	1223415	ReturnStatement	return 1 ;	351:3:16461:16469	1222934	8	True				
ANR	1223416	PrimaryExpression	1		1222934	0					
ANR	1223417	ElseStatement	else		1222934	0					
ANR	1223418	CompoundStatement		61:9:1810:1810	1222934	0					
ANR	1223419	ExpressionStatement	"zend_hash_index_update ( SOAP_GLOBAL ( ref_map ) , ( ulong ) data , ( void * * ) & node , sizeof ( xmlNodePtr ) , NULL )"	353:3:16485:16583	1222934	0	True				
ANR	1223420	CallExpression	"zend_hash_index_update ( SOAP_GLOBAL ( ref_map ) , ( ulong ) data , ( void * * ) & node , sizeof ( xmlNodePtr ) , NULL )"		1222934	0					
ANR	1223421	Callee	zend_hash_index_update		1222934	0					
ANR	1223422	Identifier	zend_hash_index_update		1222934	0					
ANR	1223423	ArgumentList	SOAP_GLOBAL ( ref_map )		1222934	1					
ANR	1223424	Argument	SOAP_GLOBAL ( ref_map )		1222934	0					
ANR	1223425	CallExpression	SOAP_GLOBAL ( ref_map )		1222934	0					
ANR	1223426	Callee	SOAP_GLOBAL		1222934	0					
ANR	1223427	Identifier	SOAP_GLOBAL		1222934	0					
ANR	1223428	ArgumentList	ref_map		1222934	1					
ANR	1223429	Argument	ref_map		1222934	0					
ANR	1223430	Identifier	ref_map		1222934	0					
ANR	1223431	Argument	( ulong ) data		1222934	1					
ANR	1223432	CastExpression	( ulong ) data		1222934	0					
ANR	1223433	CastTarget	ulong		1222934	0					
ANR	1223434	Identifier	data		1222934	1					
ANR	1223435	Argument	( void * * ) & node		1222934	2					
ANR	1223436	CastExpression	( void * * ) & node		1222934	0					
ANR	1223437	CastTarget	void * *		1222934	0					
ANR	1223438	UnaryOperationExpression	& node		1222934	1					
ANR	1223439	UnaryOperator	&		1222934	0					
ANR	1223440	Identifier	node		1222934	1					
ANR	1223441	Argument	sizeof ( xmlNodePtr )		1222934	3					
ANR	1223442	SizeofExpression	sizeof ( xmlNodePtr )		1222934	0					
ANR	1223443	Sizeof	sizeof		1222934	0					
ANR	1223444	SizeofOperand	xmlNodePtr		1222934	1					
ANR	1223445	Argument	NULL		1222934	4					
ANR	1223446	Identifier	NULL		1222934	0					
ANR	1223447	ReturnStatement	return 0 ;	356:1:16593:16601	1222934	2	True				
ANR	1223448	PrimaryExpression	0		1222934	0					
ANR	1223449	ReturnType	static zend_bool		1222934	1					
ANR	1223450	Identifier	soap_check_zval_ref		1222934	2					
ANR	1223451	ParameterList	"zval * data , xmlNodePtr node TSRMLS_DC"		1222934	3					
ANR	1223452	Parameter	zval * data	292:37:14630:14639	1222934	0	True				
ANR	1223453	ParameterType	zval *		1222934	0					
ANR	1223454	Identifier	data		1222934	1					
ANR	1223455	Parameter	xmlNodePtr node TSRMLS_DC	292:49:14642:14666	1222934	1	True				
ANR	1223456	ParameterType	xmlNodePtr node		1222934	0					
ANR	1223457	Identifier	TSRMLS_DC		1222934	1					
ANR	1223458	CFGEntryNode	ENTRY		1222934		True				
ANR	1223459	CFGExitNode	EXIT		1222934		True				
ANR	1223460	Symbol	& node_ptr		1222934						
ANR	1223461	Symbol	attr -> next		1222934						
ANR	1223462	Symbol	data		1222934						
ANR	1223463	Symbol	node_ptr		1222934						
ANR	1223464	Symbol	get_attribute		1222934						
ANR	1223465	Symbol	& prefix		1222934						
ANR	1223466	Symbol	prefix		1222934						
ANR	1223467	Symbol	* * attr		1222934						
ANR	1223468	Symbol	( * node_ptr ) -> ns		1222934						
ANR	1223469	Symbol	* attr -> children		1222934						
ANR	1223470	Symbol	TSRMLS_DC		1222934						
ANR	1223471	Symbol	cur_uniq_ref		1222934						
ANR	1223472	Symbol	* * node_ptr		1222934						
ANR	1223473	Symbol	( * node_ptr ) -> name		1222934						
ANR	1223474	Symbol	ref_map		1222934						
ANR	1223475	Symbol	id		1222934						
ANR	1223476	Symbol	soap_version		1222934						
ANR	1223477	Symbol	attr		1222934						
ANR	1223478	Symbol	zend_hash_index_find		1222934						
ANR	1223479	Symbol	SUCCESS		1222934						
ANR	1223480	Symbol	SOAP_1_1		1222934						
ANR	1223481	Symbol	NULL		1222934						
ANR	1223482	Symbol	attr -> children -> content		1222934						
ANR	1223483	Symbol	prefix . c		1222934						
ANR	1223484	Symbol	( * node_ptr ) -> properties		1222934						
ANR	1223485	Symbol	Z_TYPE_P		1222934						
ANR	1223486	Symbol	attr -> children		1222934						
ANR	1223487	Symbol	SOAP_GLOBAL		1222934						
ANR	1223488	Symbol	node		1222934						
ANR	1223489	Symbol	& node		1222934						
ANR	1223490	Symbol	attr -> ns		1222934						
ANR	1223491	Symbol	* node_ptr		1222934						
ANR	1223492	Symbol	get_attribute_ex		1222934						
ANR	1223493	Symbol	SOAP_1_2_ENC_NAMESPACE		1222934						
ANR	1223494	Symbol	* attr		1222934						
ANR	1223495	Symbol	IS_OBJECT		1222934						
ANR	1223496	Symbol	BAD_CAST		1222934						
ANR	1223497	Function	soap_find_xml_ref	359:0:16606:16899							
ANR	1223498	FunctionDef	soap_find_xml_ref (xmlNodePtr node TSRMLS_DC)		1223497	0					
ANR	1223499	CompoundStatement		360:0:16664:16899	1223497	0					
ANR	1223500	IdentifierDeclStatement	zval * * data_ptr ;	361:1:16667:16682	1223497	0	True				
ANR	1223501	IdentifierDecl	* * data_ptr		1223497	0					
ANR	1223502	IdentifierDeclType	zval * *		1223497	0					
ANR	1223503	Identifier	data_ptr		1223497	1					
ANR	1223504	IfStatement	"if ( SOAP_GLOBAL ( ref_map ) && zend_hash_index_find ( SOAP_GLOBAL ( ref_map ) , ( ulong ) node , ( void * * ) & data_ptr ) == SUCCESS )"		1223497	1					
ANR	1223505	Condition	"SOAP_GLOBAL ( ref_map ) && zend_hash_index_find ( SOAP_GLOBAL ( ref_map ) , ( ulong ) node , ( void * * ) & data_ptr ) == SUCCESS"	363:5:16690:16804	1223497	0	True				
ANR	1223506	AndExpression	"SOAP_GLOBAL ( ref_map ) && zend_hash_index_find ( SOAP_GLOBAL ( ref_map ) , ( ulong ) node , ( void * * ) & data_ptr ) == SUCCESS"		1223497	0		&&			
ANR	1223507	CallExpression	SOAP_GLOBAL ( ref_map )		1223497	0					
ANR	1223508	Callee	SOAP_GLOBAL		1223497	0					
ANR	1223509	Identifier	SOAP_GLOBAL		1223497	0					
ANR	1223510	ArgumentList	ref_map		1223497	1					
ANR	1223511	Argument	ref_map		1223497	0					
ANR	1223512	Identifier	ref_map		1223497	0					
ANR	1223513	EqualityExpression	"zend_hash_index_find ( SOAP_GLOBAL ( ref_map ) , ( ulong ) node , ( void * * ) & data_ptr ) == SUCCESS"		1223497	1		==			
ANR	1223514	CallExpression	"zend_hash_index_find ( SOAP_GLOBAL ( ref_map ) , ( ulong ) node , ( void * * ) & data_ptr )"		1223497	0					
ANR	1223515	Callee	zend_hash_index_find		1223497	0					
ANR	1223516	Identifier	zend_hash_index_find		1223497	0					
ANR	1223517	ArgumentList	SOAP_GLOBAL ( ref_map )		1223497	1					
ANR	1223518	Argument	SOAP_GLOBAL ( ref_map )		1223497	0					
ANR	1223519	CallExpression	SOAP_GLOBAL ( ref_map )		1223497	0					
ANR	1223520	Callee	SOAP_GLOBAL		1223497	0					
ANR	1223521	Identifier	SOAP_GLOBAL		1223497	0					
ANR	1223522	ArgumentList	ref_map		1223497	1					
ANR	1223523	Argument	ref_map		1223497	0					
ANR	1223524	Identifier	ref_map		1223497	0					
ANR	1223525	Argument	( ulong ) node		1223497	1					
ANR	1223526	CastExpression	( ulong ) node		1223497	0					
ANR	1223527	CastTarget	ulong		1223497	0					
ANR	1223528	Identifier	node		1223497	1					
ANR	1223529	Argument	( void * * ) & data_ptr		1223497	2					
ANR	1223530	CastExpression	( void * * ) & data_ptr		1223497	0					
ANR	1223531	CastTarget	void * *		1223497	0					
ANR	1223532	UnaryOperationExpression	& data_ptr		1223497	1					
ANR	1223533	UnaryOperator	&		1223497	0					
ANR	1223534	Identifier	data_ptr		1223497	1					
ANR	1223535	Identifier	SUCCESS		1223497	1					
ANR	1223536	CompoundStatement		5:92:142:142	1223497	1					
ANR	1223537	ExpressionStatement	Z_SET_ISREF_PP ( data_ptr )	365:2:16811:16835	1223497	0	True				
ANR	1223538	CallExpression	Z_SET_ISREF_PP ( data_ptr )		1223497	0					
ANR	1223539	Callee	Z_SET_ISREF_PP		1223497	0					
ANR	1223540	Identifier	Z_SET_ISREF_PP		1223497	0					
ANR	1223541	ArgumentList	data_ptr		1223497	1					
ANR	1223542	Argument	data_ptr		1223497	0					
ANR	1223543	Identifier	data_ptr		1223497	0					
ANR	1223544	ExpressionStatement	Z_ADDREF_PP ( data_ptr )	366:2:16839:16860	1223497	1	True				
ANR	1223545	CallExpression	Z_ADDREF_PP ( data_ptr )		1223497	0					
ANR	1223546	Callee	Z_ADDREF_PP		1223497	0					
ANR	1223547	Identifier	Z_ADDREF_PP		1223497	0					
ANR	1223548	ArgumentList	data_ptr		1223497	1					
ANR	1223549	Argument	data_ptr		1223497	0					
ANR	1223550	Identifier	data_ptr		1223497	0					
ANR	1223551	ReturnStatement	return * data_ptr ;	367:2:16864:16880	1223497	2	True				
ANR	1223552	UnaryOperationExpression	* data_ptr		1223497	0					
ANR	1223553	UnaryOperator	*		1223497	0					
ANR	1223554	Identifier	data_ptr		1223497	1					
ANR	1223555	ReturnStatement	return NULL ;	369:1:16886:16897	1223497	2	True				
ANR	1223556	Identifier	NULL		1223497	0					
ANR	1223557	ReturnType	static zval *		1223497	1					
ANR	1223558	Identifier	soap_find_xml_ref		1223497	2					
ANR	1223559	ParameterList	xmlNodePtr node TSRMLS_DC		1223497	3					
ANR	1223560	Parameter	xmlNodePtr node TSRMLS_DC	359:31:16637:16661	1223497	0	True				
ANR	1223561	ParameterType	xmlNodePtr node		1223497	0					
ANR	1223562	Identifier	TSRMLS_DC		1223497	1					
ANR	1223563	CFGEntryNode	ENTRY		1223497		True				
ANR	1223564	CFGExitNode	EXIT		1223497		True				
ANR	1223565	Symbol	zend_hash_index_find		1223497						
ANR	1223566	Symbol	node		1223497						
ANR	1223567	Symbol	SUCCESS		1223497						
ANR	1223568	Symbol	NULL		1223497						
ANR	1223569	Symbol	ref_map		1223497						
ANR	1223570	Symbol	TSRMLS_DC		1223497						
ANR	1223571	Symbol	SOAP_GLOBAL		1223497						
ANR	1223572	Symbol	* data_ptr		1223497						
ANR	1223573	Symbol	data_ptr		1223497						
ANR	1223574	Symbol	& data_ptr		1223497						
ANR	1223575	Function	soap_check_xml_ref	372:0:16902:17394							
ANR	1223576	FunctionDef	"soap_check_xml_ref (zval * * data , xmlNodePtr node TSRMLS_DC)"		1223575	0					
ANR	1223577	CompoundStatement		373:0:16978:17394	1223575	0					
ANR	1223578	IdentifierDeclStatement	zval * * data_ptr ;	374:1:16981:16996	1223575	0	True				
ANR	1223579	IdentifierDecl	* * data_ptr		1223575	0					
ANR	1223580	IdentifierDeclType	zval * *		1223575	0					
ANR	1223581	Identifier	data_ptr		1223575	1					
ANR	1223582	IfStatement	if ( SOAP_GLOBAL ( ref_map ) )		1223575	1					
ANR	1223583	Condition	SOAP_GLOBAL ( ref_map )	376:5:17004:17023	1223575	0	True				
ANR	1223584	CallExpression	SOAP_GLOBAL ( ref_map )		1223575	0					
ANR	1223585	Callee	SOAP_GLOBAL		1223575	0					
ANR	1223586	Identifier	SOAP_GLOBAL		1223575	0					
ANR	1223587	ArgumentList	ref_map		1223575	1					
ANR	1223588	Argument	ref_map		1223575	0					
ANR	1223589	Identifier	ref_map		1223575	0					
ANR	1223590	CompoundStatement		4:27:47:47	1223575	1					
ANR	1223591	IfStatement	"if ( zend_hash_index_find ( SOAP_GLOBAL ( ref_map ) , ( ulong ) node , ( void * * ) & data_ptr ) == SUCCESS )"		1223575	0					
ANR	1223592	Condition	"zend_hash_index_find ( SOAP_GLOBAL ( ref_map ) , ( ulong ) node , ( void * * ) & data_ptr ) == SUCCESS"	377:6:17034:17118	1223575	0	True				
ANR	1223593	EqualityExpression	"zend_hash_index_find ( SOAP_GLOBAL ( ref_map ) , ( ulong ) node , ( void * * ) & data_ptr ) == SUCCESS"		1223575	0		==			
ANR	1223594	CallExpression	"zend_hash_index_find ( SOAP_GLOBAL ( ref_map ) , ( ulong ) node , ( void * * ) & data_ptr )"		1223575	0					
ANR	1223595	Callee	zend_hash_index_find		1223575	0					
ANR	1223596	Identifier	zend_hash_index_find		1223575	0					
ANR	1223597	ArgumentList	SOAP_GLOBAL ( ref_map )		1223575	1					
ANR	1223598	Argument	SOAP_GLOBAL ( ref_map )		1223575	0					
ANR	1223599	CallExpression	SOAP_GLOBAL ( ref_map )		1223575	0					
ANR	1223600	Callee	SOAP_GLOBAL		1223575	0					
ANR	1223601	Identifier	SOAP_GLOBAL		1223575	0					
ANR	1223602	ArgumentList	ref_map		1223575	1					
ANR	1223603	Argument	ref_map		1223575	0					
ANR	1223604	Identifier	ref_map		1223575	0					
ANR	1223605	Argument	( ulong ) node		1223575	1					
ANR	1223606	CastExpression	( ulong ) node		1223575	0					
ANR	1223607	CastTarget	ulong		1223575	0					
ANR	1223608	Identifier	node		1223575	1					
ANR	1223609	Argument	( void * * ) & data_ptr		1223575	2					
ANR	1223610	CastExpression	( void * * ) & data_ptr		1223575	0					
ANR	1223611	CastTarget	void * *		1223575	0					
ANR	1223612	UnaryOperationExpression	& data_ptr		1223575	1					
ANR	1223613	UnaryOperator	&		1223575	0					
ANR	1223614	Identifier	data_ptr		1223575	1					
ANR	1223615	Identifier	SUCCESS		1223575	1					
ANR	1223616	CompoundStatement		5:93:142:142	1223575	1					
ANR	1223617	IfStatement	if ( * data != * data_ptr )		1223575	0					
ANR	1223618	Condition	* data != * data_ptr	378:7:17130:17147	1223575	0	True				
ANR	1223619	EqualityExpression	* data != * data_ptr		1223575	0		!=			
ANR	1223620	UnaryOperationExpression	* data		1223575	0					
ANR	1223621	UnaryOperator	*		1223575	0					
ANR	1223622	Identifier	data		1223575	1					
ANR	1223623	UnaryOperationExpression	* data_ptr		1223575	1					
ANR	1223624	UnaryOperator	*		1223575	0					
ANR	1223625	Identifier	data_ptr		1223575	1					
ANR	1223626	CompoundStatement		6:27:171:171	1223575	1					
ANR	1223627	ExpressionStatement	zval_ptr_dtor ( data )	379:4:17156:17175	1223575	0	True				
ANR	1223628	CallExpression	zval_ptr_dtor ( data )		1223575	0					
ANR	1223629	Callee	zval_ptr_dtor		1223575	0					
ANR	1223630	Identifier	zval_ptr_dtor		1223575	0					
ANR	1223631	ArgumentList	data		1223575	1					
ANR	1223632	Argument	data		1223575	0					
ANR	1223633	Identifier	data		1223575	0					
ANR	1223634	ExpressionStatement	* data = * data_ptr	380:4:17181:17198	1223575	1	True				
ANR	1223635	AssignmentExpression	* data = * data_ptr		1223575	0		=			
ANR	1223636	UnaryOperationExpression	* data		1223575	0					
ANR	1223637	UnaryOperator	*		1223575	0					
ANR	1223638	Identifier	data		1223575	1					
ANR	1223639	UnaryOperationExpression	* data_ptr		1223575	1					
ANR	1223640	UnaryOperator	*		1223575	0					
ANR	1223641	Identifier	data_ptr		1223575	1					
ANR	1223642	ExpressionStatement	Z_SET_ISREF_PP ( data )	381:4:17204:17224	1223575	2	True				
ANR	1223643	CallExpression	Z_SET_ISREF_PP ( data )		1223575	0					
ANR	1223644	Callee	Z_SET_ISREF_PP		1223575	0					
ANR	1223645	Identifier	Z_SET_ISREF_PP		1223575	0					
ANR	1223646	ArgumentList	data		1223575	1					
ANR	1223647	Argument	data		1223575	0					
ANR	1223648	Identifier	data		1223575	0					
ANR	1223649	ExpressionStatement	Z_ADDREF_PP ( data )	382:4:17230:17247	1223575	3	True				
ANR	1223650	CallExpression	Z_ADDREF_PP ( data )		1223575	0					
ANR	1223651	Callee	Z_ADDREF_PP		1223575	0					
ANR	1223652	Identifier	Z_ADDREF_PP		1223575	0					
ANR	1223653	ArgumentList	data		1223575	1					
ANR	1223654	Argument	data		1223575	0					
ANR	1223655	Identifier	data		1223575	0					
ANR	1223656	ReturnStatement	return 1 ;	383:4:17253:17261	1223575	4	True				
ANR	1223657	PrimaryExpression	1		1223575	0					
ANR	1223658	ElseStatement	else		1223575	0					
ANR	1223659	CompoundStatement		13:9:298:298	1223575	0					
ANR	1223660	ExpressionStatement	"zend_hash_index_update ( SOAP_GLOBAL ( ref_map ) , ( ulong ) node , ( void * * ) data , sizeof ( zval * ) , NULL )"	386:3:17282:17374	1223575	0	True				
ANR	1223661	CallExpression	"zend_hash_index_update ( SOAP_GLOBAL ( ref_map ) , ( ulong ) node , ( void * * ) data , sizeof ( zval * ) , NULL )"		1223575	0					
ANR	1223662	Callee	zend_hash_index_update		1223575	0					
ANR	1223663	Identifier	zend_hash_index_update		1223575	0					
ANR	1223664	ArgumentList	SOAP_GLOBAL ( ref_map )		1223575	1					
ANR	1223665	Argument	SOAP_GLOBAL ( ref_map )		1223575	0					
ANR	1223666	CallExpression	SOAP_GLOBAL ( ref_map )		1223575	0					
ANR	1223667	Callee	SOAP_GLOBAL		1223575	0					
ANR	1223668	Identifier	SOAP_GLOBAL		1223575	0					
ANR	1223669	ArgumentList	ref_map		1223575	1					
ANR	1223670	Argument	ref_map		1223575	0					
ANR	1223671	Identifier	ref_map		1223575	0					
ANR	1223672	Argument	( ulong ) node		1223575	1					
ANR	1223673	CastExpression	( ulong ) node		1223575	0					
ANR	1223674	CastTarget	ulong		1223575	0					
ANR	1223675	Identifier	node		1223575	1					
ANR	1223676	Argument	( void * * ) data		1223575	2					
ANR	1223677	CastExpression	( void * * ) data		1223575	0					
ANR	1223678	CastTarget	void * *		1223575	0					
ANR	1223679	Identifier	data		1223575	1					
ANR	1223680	Argument	sizeof ( zval * )		1223575	3					
ANR	1223681	SizeofExpression	sizeof ( zval * )		1223575	0					
ANR	1223682	Sizeof	sizeof		1223575	0					
ANR	1223683	SizeofOperand	zval *		1223575	1					
ANR	1223684	Argument	NULL		1223575	4					
ANR	1223685	Identifier	NULL		1223575	0					
ANR	1223686	ReturnStatement	return 0 ;	389:1:17384:17392	1223575	2	True				
ANR	1223687	PrimaryExpression	0		1223575	0					
ANR	1223688	ReturnType	static zend_bool		1223575	1					
ANR	1223689	Identifier	soap_check_xml_ref		1223575	2					
ANR	1223690	ParameterList	"zval * * data , xmlNodePtr node TSRMLS_DC"		1223575	3					
ANR	1223691	Parameter	zval * * data	372:36:16938:16948	1223575	0	True				
ANR	1223692	ParameterType	zval * *		1223575	0					
ANR	1223693	Identifier	data		1223575	1					
ANR	1223694	Parameter	xmlNodePtr node TSRMLS_DC	372:49:16951:16975	1223575	1	True				
ANR	1223695	ParameterType	xmlNodePtr node		1223575	0					
ANR	1223696	Identifier	TSRMLS_DC		1223575	1					
ANR	1223697	CFGEntryNode	ENTRY		1223575		True				
ANR	1223698	CFGExitNode	EXIT		1223575		True				
ANR	1223699	Symbol	node		1223575						
ANR	1223700	Symbol	zend_hash_index_find		1223575						
ANR	1223701	Symbol	SUCCESS		1223575						
ANR	1223702	Symbol	NULL		1223575						
ANR	1223703	Symbol	data		1223575						
ANR	1223704	Symbol	ref_map		1223575						
ANR	1223705	Symbol	TSRMLS_DC		1223575						
ANR	1223706	Symbol	SOAP_GLOBAL		1223575						
ANR	1223707	Symbol	* data_ptr		1223575						
ANR	1223708	Symbol	* data		1223575						
ANR	1223709	Symbol	data_ptr		1223575						
ANR	1223710	Symbol	& data_ptr		1223575						
ANR	1223711	Function	master_to_xml_int	392:0:17397:22246							
ANR	1223712	FunctionDef	"master_to_xml_int (encodePtr encode , zval * data , int style , xmlNodePtr parent , int check_class_map TSRMLS_DC)"		1223711	0					
ANR	1223713	CompoundStatement		393:0:17524:22246	1223711	0					
ANR	1223714	IdentifierDeclStatement	xmlNodePtr node = NULL ;	394:1:17527:17549	1223711	0	True				
ANR	1223715	IdentifierDecl	node = NULL		1223711	0					
ANR	1223716	IdentifierDeclType	xmlNodePtr		1223711	0					
ANR	1223717	Identifier	node		1223711	1					
ANR	1223718	AssignmentExpression	node = NULL		1223711	2		=			
ANR	1223719	Identifier	NULL		1223711	0					
ANR	1223720	Identifier	NULL		1223711	1					
ANR	1223721	IdentifierDeclStatement	int add_type = 0 ;	395:1:17552:17568	1223711	1	True				
ANR	1223722	IdentifierDecl	add_type = 0		1223711	0					
ANR	1223723	IdentifierDeclType	int		1223711	0					
ANR	1223724	Identifier	add_type		1223711	1					
ANR	1223725	AssignmentExpression	add_type = 0		1223711	2		=			
ANR	1223726	Identifier	add_type		1223711	0					
ANR	1223727	PrimaryExpression	0		1223711	1					
ANR	1223728	IfStatement	if ( data && Z_TYPE_P ( data ) == IS_OBJECT && Z_OBJCE_P ( data ) == soap_var_class_entry )		1223711	2					
ANR	1223729	Condition	data && Z_TYPE_P ( data ) == IS_OBJECT && Z_OBJCE_P ( data ) == soap_var_class_entry	398:5:17617:17704	1223711	0	True				
ANR	1223730	AndExpression	data && Z_TYPE_P ( data ) == IS_OBJECT && Z_OBJCE_P ( data ) == soap_var_class_entry		1223711	0		&&			
ANR	1223731	Identifier	data		1223711	0					
ANR	1223732	AndExpression	Z_TYPE_P ( data ) == IS_OBJECT && Z_OBJCE_P ( data ) == soap_var_class_entry		1223711	1		&&			
ANR	1223733	EqualityExpression	Z_TYPE_P ( data ) == IS_OBJECT		1223711	0		==			
ANR	1223734	CallExpression	Z_TYPE_P ( data )		1223711	0					
ANR	1223735	Callee	Z_TYPE_P		1223711	0					
ANR	1223736	Identifier	Z_TYPE_P		1223711	0					
ANR	1223737	ArgumentList	data		1223711	1					
ANR	1223738	Argument	data		1223711	0					
ANR	1223739	Identifier	data		1223711	0					
ANR	1223740	Identifier	IS_OBJECT		1223711	1					
ANR	1223741	EqualityExpression	Z_OBJCE_P ( data ) == soap_var_class_entry		1223711	1		==			
ANR	1223742	CallExpression	Z_OBJCE_P ( data )		1223711	0					
ANR	1223743	Callee	Z_OBJCE_P		1223711	0					
ANR	1223744	Identifier	Z_OBJCE_P		1223711	0					
ANR	1223745	ArgumentList	data		1223711	1					
ANR	1223746	Argument	data		1223711	0					
ANR	1223747	Identifier	data		1223711	0					
ANR	1223748	Identifier	soap_var_class_entry		1223711	1					
ANR	1223749	CompoundStatement		11:2:272:305	1223711	1					
ANR	1223750	IdentifierDeclStatement	"zval * * ztype , * * zdata , * * zns , * * zstype , * * zname , * * znamens ;"	401:2:17711:17769	1223711	0	True				
ANR	1223751	IdentifierDecl	* * ztype		1223711	0					
ANR	1223752	IdentifierDeclType	zval * *		1223711	0					
ANR	1223753	Identifier	ztype		1223711	1					
ANR	1223754	IdentifierDecl	* * zdata		1223711	1					
ANR	1223755	IdentifierDeclType	zval * *		1223711	0					
ANR	1223756	Identifier	zdata		1223711	1					
ANR	1223757	IdentifierDecl	* * zns		1223711	2					
ANR	1223758	IdentifierDeclType	zval * *		1223711	0					
ANR	1223759	Identifier	zns		1223711	1					
ANR	1223760	IdentifierDecl	* * zstype		1223711	3					
ANR	1223761	IdentifierDeclType	zval * *		1223711	0					
ANR	1223762	Identifier	zstype		1223711	1					
ANR	1223763	IdentifierDecl	* * zname		1223711	4					
ANR	1223764	IdentifierDeclType	zval * *		1223711	0					
ANR	1223765	Identifier	zname		1223711	1					
ANR	1223766	IdentifierDecl	* * znamens		1223711	5					
ANR	1223767	IdentifierDeclType	zval * *		1223711	0					
ANR	1223768	Identifier	znamens		1223711	1					
ANR	1223769	IdentifierDeclStatement	encodePtr enc = NULL ;	402:2:17773:17793	1223711	1	True				
ANR	1223770	IdentifierDecl	enc = NULL		1223711	0					
ANR	1223771	IdentifierDeclType	encodePtr		1223711	0					
ANR	1223772	Identifier	enc		1223711	1					
ANR	1223773	AssignmentExpression	enc = NULL		1223711	2		=			
ANR	1223774	Identifier	NULL		1223711	0					
ANR	1223775	Identifier	NULL		1223711	1					
ANR	1223776	IdentifierDeclStatement	HashTable * ht = Z_OBJPROP_P ( data ) ;	403:2:17797:17830	1223711	2	True				
ANR	1223777	IdentifierDecl	* ht = Z_OBJPROP_P ( data )		1223711	0					
ANR	1223778	IdentifierDeclType	HashTable *		1223711	0					
ANR	1223779	Identifier	ht		1223711	1					
ANR	1223780	AssignmentExpression	* ht = Z_OBJPROP_P ( data )		1223711	2		=			
ANR	1223781	Identifier	ht		1223711	0					
ANR	1223782	CallExpression	Z_OBJPROP_P ( data )		1223711	1					
ANR	1223783	Callee	Z_OBJPROP_P		1223711	0					
ANR	1223784	Identifier	Z_OBJPROP_P		1223711	0					
ANR	1223785	ArgumentList	data		1223711	1					
ANR	1223786	Argument	data		1223711	0					
ANR	1223787	Identifier	data		1223711	0					
ANR	1223788	IfStatement	"if ( zend_hash_find ( ht , ""enc_type"" , sizeof ( ""enc_type"" ) , ( void * * ) & ztype ) == FAILURE || Z_TYPE_PP ( ztype ) != IS_LONG )"		1223711	3					
ANR	1223789	Condition	"zend_hash_find ( ht , ""enc_type"" , sizeof ( ""enc_type"" ) , ( void * * ) & ztype ) == FAILURE || Z_TYPE_PP ( ztype ) != IS_LONG"	405:6:17839:17953	1223711	0	True				
ANR	1223790	OrExpression	"zend_hash_find ( ht , ""enc_type"" , sizeof ( ""enc_type"" ) , ( void * * ) & ztype ) == FAILURE || Z_TYPE_PP ( ztype ) != IS_LONG"		1223711	0		||			
ANR	1223791	EqualityExpression	"zend_hash_find ( ht , ""enc_type"" , sizeof ( ""enc_type"" ) , ( void * * ) & ztype ) == FAILURE"		1223711	0		==			
ANR	1223792	CallExpression	"zend_hash_find ( ht , ""enc_type"" , sizeof ( ""enc_type"" ) , ( void * * ) & ztype )"		1223711	0					
ANR	1223793	Callee	zend_hash_find		1223711	0					
ANR	1223794	Identifier	zend_hash_find		1223711	0					
ANR	1223795	ArgumentList	ht		1223711	1					
ANR	1223796	Argument	ht		1223711	0					
ANR	1223797	Identifier	ht		1223711	0					
ANR	1223798	Argument	"""enc_type"""		1223711	1					
ANR	1223799	PrimaryExpression	"""enc_type"""		1223711	0					
ANR	1223800	Argument	"sizeof ( ""enc_type"" )"		1223711	2					
ANR	1223801	SizeofExpression	"sizeof ( ""enc_type"" )"		1223711	0					
ANR	1223802	Sizeof	sizeof		1223711	0					
ANR	1223803	PrimaryExpression	"""enc_type"""		1223711	1					
ANR	1223804	Argument	( void * * ) & ztype		1223711	3					
ANR	1223805	CastExpression	( void * * ) & ztype		1223711	0					
ANR	1223806	CastTarget	void * *		1223711	0					
ANR	1223807	UnaryOperationExpression	& ztype		1223711	1					
ANR	1223808	UnaryOperator	&		1223711	0					
ANR	1223809	Identifier	ztype		1223711	1					
ANR	1223810	Identifier	FAILURE		1223711	1					
ANR	1223811	EqualityExpression	Z_TYPE_PP ( ztype ) != IS_LONG		1223711	1		!=			
ANR	1223812	CallExpression	Z_TYPE_PP ( ztype )		1223711	0					
ANR	1223813	Callee	Z_TYPE_PP		1223711	0					
ANR	1223814	Identifier	Z_TYPE_PP		1223711	0					
ANR	1223815	ArgumentList	ztype		1223711	1					
ANR	1223816	Argument	ztype		1223711	0					
ANR	1223817	Identifier	ztype		1223711	0					
ANR	1223818	Identifier	IS_LONG		1223711	1					
ANR	1223819	CompoundStatement		14:35:431:431	1223711	1					
ANR	1223820	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: SoapVar has no 'enc_type' property"" )"	407:3:17961:18029	1223711	0	True				
ANR	1223821	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: SoapVar has no 'enc_type' property"" )"		1223711	0					
ANR	1223822	Callee	soap_error0		1223711	0					
ANR	1223823	Identifier	soap_error0		1223711	0					
ANR	1223824	ArgumentList	E_ERROR		1223711	1					
ANR	1223825	Argument	E_ERROR		1223711	0					
ANR	1223826	Identifier	E_ERROR		1223711	0					
ANR	1223827	Argument	"""Encoding: SoapVar has no 'enc_type' property"""		1223711	1					
ANR	1223828	PrimaryExpression	"""Encoding: SoapVar has no 'enc_type' property"""		1223711	0					
ANR	1223829	IfStatement	"if ( zend_hash_find ( ht , ""enc_stype"" , sizeof ( ""enc_stype"" ) , ( void * * ) & zstype ) == SUCCESS && Z_TYPE_PP ( zstype ) == IS_STRING )"		1223711	4					
ANR	1223830	Condition	"zend_hash_find ( ht , ""enc_stype"" , sizeof ( ""enc_stype"" ) , ( void * * ) & zstype ) == SUCCESS && Z_TYPE_PP ( zstype ) == IS_STRING"	410:6:18042:18162	1223711	0	True				
ANR	1223831	AndExpression	"zend_hash_find ( ht , ""enc_stype"" , sizeof ( ""enc_stype"" ) , ( void * * ) & zstype ) == SUCCESS && Z_TYPE_PP ( zstype ) == IS_STRING"		1223711	0		&&			
ANR	1223832	EqualityExpression	"zend_hash_find ( ht , ""enc_stype"" , sizeof ( ""enc_stype"" ) , ( void * * ) & zstype ) == SUCCESS"		1223711	0		==			
ANR	1223833	CallExpression	"zend_hash_find ( ht , ""enc_stype"" , sizeof ( ""enc_stype"" ) , ( void * * ) & zstype )"		1223711	0					
ANR	1223834	Callee	zend_hash_find		1223711	0					
ANR	1223835	Identifier	zend_hash_find		1223711	0					
ANR	1223836	ArgumentList	ht		1223711	1					
ANR	1223837	Argument	ht		1223711	0					
ANR	1223838	Identifier	ht		1223711	0					
ANR	1223839	Argument	"""enc_stype"""		1223711	1					
ANR	1223840	PrimaryExpression	"""enc_stype"""		1223711	0					
ANR	1223841	Argument	"sizeof ( ""enc_stype"" )"		1223711	2					
ANR	1223842	SizeofExpression	"sizeof ( ""enc_stype"" )"		1223711	0					
ANR	1223843	Sizeof	sizeof		1223711	0					
ANR	1223844	PrimaryExpression	"""enc_stype"""		1223711	1					
ANR	1223845	Argument	( void * * ) & zstype		1223711	3					
ANR	1223846	CastExpression	( void * * ) & zstype		1223711	0					
ANR	1223847	CastTarget	void * *		1223711	0					
ANR	1223848	UnaryOperationExpression	& zstype		1223711	1					
ANR	1223849	UnaryOperator	&		1223711	0					
ANR	1223850	Identifier	zstype		1223711	1					
ANR	1223851	Identifier	SUCCESS		1223711	1					
ANR	1223852	EqualityExpression	Z_TYPE_PP ( zstype ) == IS_STRING		1223711	1		==			
ANR	1223853	CallExpression	Z_TYPE_PP ( zstype )		1223711	0					
ANR	1223854	Callee	Z_TYPE_PP		1223711	0					
ANR	1223855	Identifier	Z_TYPE_PP		1223711	0					
ANR	1223856	ArgumentList	zstype		1223711	1					
ANR	1223857	Argument	zstype		1223711	0					
ANR	1223858	Identifier	zstype		1223711	0					
ANR	1223859	Identifier	IS_STRING		1223711	1					
ANR	1223860	CompoundStatement		19:38:640:640	1223711	1					
ANR	1223861	IfStatement	"if ( zend_hash_find ( ht , ""enc_ns"" , sizeof ( ""enc_ns"" ) , ( void * * ) & zns ) == SUCCESS && Z_TYPE_PP ( zns ) == IS_STRING )"		1223711	0					
ANR	1223862	Condition	"zend_hash_find ( ht , ""enc_ns"" , sizeof ( ""enc_ns"" ) , ( void * * ) & zns ) == SUCCESS && Z_TYPE_PP ( zns ) == IS_STRING"	412:7:18174:18283	1223711	0	True				
ANR	1223863	AndExpression	"zend_hash_find ( ht , ""enc_ns"" , sizeof ( ""enc_ns"" ) , ( void * * ) & zns ) == SUCCESS && Z_TYPE_PP ( zns ) == IS_STRING"		1223711	0		&&			
ANR	1223864	EqualityExpression	"zend_hash_find ( ht , ""enc_ns"" , sizeof ( ""enc_ns"" ) , ( void * * ) & zns ) == SUCCESS"		1223711	0		==			
ANR	1223865	CallExpression	"zend_hash_find ( ht , ""enc_ns"" , sizeof ( ""enc_ns"" ) , ( void * * ) & zns )"		1223711	0					
ANR	1223866	Callee	zend_hash_find		1223711	0					
ANR	1223867	Identifier	zend_hash_find		1223711	0					
ANR	1223868	ArgumentList	ht		1223711	1					
ANR	1223869	Argument	ht		1223711	0					
ANR	1223870	Identifier	ht		1223711	0					
ANR	1223871	Argument	"""enc_ns"""		1223711	1					
ANR	1223872	PrimaryExpression	"""enc_ns"""		1223711	0					
ANR	1223873	Argument	"sizeof ( ""enc_ns"" )"		1223711	2					
ANR	1223874	SizeofExpression	"sizeof ( ""enc_ns"" )"		1223711	0					
ANR	1223875	Sizeof	sizeof		1223711	0					
ANR	1223876	PrimaryExpression	"""enc_ns"""		1223711	1					
ANR	1223877	Argument	( void * * ) & zns		1223711	3					
ANR	1223878	CastExpression	( void * * ) & zns		1223711	0					
ANR	1223879	CastTarget	void * *		1223711	0					
ANR	1223880	UnaryOperationExpression	& zns		1223711	1					
ANR	1223881	UnaryOperator	&		1223711	0					
ANR	1223882	Identifier	zns		1223711	1					
ANR	1223883	Identifier	SUCCESS		1223711	1					
ANR	1223884	EqualityExpression	Z_TYPE_PP ( zns ) == IS_STRING		1223711	1		==			
ANR	1223885	CallExpression	Z_TYPE_PP ( zns )		1223711	0					
ANR	1223886	Callee	Z_TYPE_PP		1223711	0					
ANR	1223887	Identifier	Z_TYPE_PP		1223711	0					
ANR	1223888	ArgumentList	zns		1223711	1					
ANR	1223889	Argument	zns		1223711	0					
ANR	1223890	Identifier	zns		1223711	0					
ANR	1223891	Identifier	IS_STRING		1223711	1					
ANR	1223892	CompoundStatement		21:36:761:761	1223711	1					
ANR	1223893	ExpressionStatement	"enc = get_encoder ( SOAP_GLOBAL ( sdl ) , Z_STRVAL_PP ( zns ) , Z_STRVAL_PP ( zstype ) )"	414:4:18292:18366	1223711	0	True				
ANR	1223894	AssignmentExpression	"enc = get_encoder ( SOAP_GLOBAL ( sdl ) , Z_STRVAL_PP ( zns ) , Z_STRVAL_PP ( zstype ) )"		1223711	0		=			
ANR	1223895	Identifier	enc		1223711	0					
ANR	1223896	CallExpression	"get_encoder ( SOAP_GLOBAL ( sdl ) , Z_STRVAL_PP ( zns ) , Z_STRVAL_PP ( zstype ) )"		1223711	1					
ANR	1223897	Callee	get_encoder		1223711	0					
ANR	1223898	Identifier	get_encoder		1223711	0					
ANR	1223899	ArgumentList	SOAP_GLOBAL ( sdl )		1223711	1					
ANR	1223900	Argument	SOAP_GLOBAL ( sdl )		1223711	0					
ANR	1223901	CallExpression	SOAP_GLOBAL ( sdl )		1223711	0					
ANR	1223902	Callee	SOAP_GLOBAL		1223711	0					
ANR	1223903	Identifier	SOAP_GLOBAL		1223711	0					
ANR	1223904	ArgumentList	sdl		1223711	1					
ANR	1223905	Argument	sdl		1223711	0					
ANR	1223906	Identifier	sdl		1223711	0					
ANR	1223907	Argument	Z_STRVAL_PP ( zns )		1223711	1					
ANR	1223908	CallExpression	Z_STRVAL_PP ( zns )		1223711	0					
ANR	1223909	Callee	Z_STRVAL_PP		1223711	0					
ANR	1223910	Identifier	Z_STRVAL_PP		1223711	0					
ANR	1223911	ArgumentList	zns		1223711	1					
ANR	1223912	Argument	zns		1223711	0					
ANR	1223913	Identifier	zns		1223711	0					
ANR	1223914	Argument	Z_STRVAL_PP ( zstype )		1223711	2					
ANR	1223915	CallExpression	Z_STRVAL_PP ( zstype )		1223711	0					
ANR	1223916	Callee	Z_STRVAL_PP		1223711	0					
ANR	1223917	Identifier	Z_STRVAL_PP		1223711	0					
ANR	1223918	ArgumentList	zstype		1223711	1					
ANR	1223919	Argument	zstype		1223711	0					
ANR	1223920	Identifier	zstype		1223711	0					
ANR	1223921	ElseStatement	else		1223711	0					
ANR	1223922	CompoundStatement		23:10:853:853	1223711	0					
ANR	1223923	ExpressionStatement	zns = NULL	416:4:18384:18394	1223711	0	True				
ANR	1223924	AssignmentExpression	zns = NULL		1223711	0		=			
ANR	1223925	Identifier	zns		1223711	0					
ANR	1223926	Identifier	NULL		1223711	1					
ANR	1223927	ExpressionStatement	"enc = get_encoder_ex ( SOAP_GLOBAL ( sdl ) , Z_STRVAL_PP ( zstype ) , Z_STRLEN_PP ( zstype ) )"	417:4:18400:18480	1223711	1	True				
ANR	1223928	AssignmentExpression	"enc = get_encoder_ex ( SOAP_GLOBAL ( sdl ) , Z_STRVAL_PP ( zstype ) , Z_STRLEN_PP ( zstype ) )"		1223711	0		=			
ANR	1223929	Identifier	enc		1223711	0					
ANR	1223930	CallExpression	"get_encoder_ex ( SOAP_GLOBAL ( sdl ) , Z_STRVAL_PP ( zstype ) , Z_STRLEN_PP ( zstype ) )"		1223711	1					
ANR	1223931	Callee	get_encoder_ex		1223711	0					
ANR	1223932	Identifier	get_encoder_ex		1223711	0					
ANR	1223933	ArgumentList	SOAP_GLOBAL ( sdl )		1223711	1					
ANR	1223934	Argument	SOAP_GLOBAL ( sdl )		1223711	0					
ANR	1223935	CallExpression	SOAP_GLOBAL ( sdl )		1223711	0					
ANR	1223936	Callee	SOAP_GLOBAL		1223711	0					
ANR	1223937	Identifier	SOAP_GLOBAL		1223711	0					
ANR	1223938	ArgumentList	sdl		1223711	1					
ANR	1223939	Argument	sdl		1223711	0					
ANR	1223940	Identifier	sdl		1223711	0					
ANR	1223941	Argument	Z_STRVAL_PP ( zstype )		1223711	1					
ANR	1223942	CallExpression	Z_STRVAL_PP ( zstype )		1223711	0					
ANR	1223943	Callee	Z_STRVAL_PP		1223711	0					
ANR	1223944	Identifier	Z_STRVAL_PP		1223711	0					
ANR	1223945	ArgumentList	zstype		1223711	1					
ANR	1223946	Argument	zstype		1223711	0					
ANR	1223947	Identifier	zstype		1223711	0					
ANR	1223948	Argument	Z_STRLEN_PP ( zstype )		1223711	2					
ANR	1223949	CallExpression	Z_STRLEN_PP ( zstype )		1223711	0					
ANR	1223950	Callee	Z_STRLEN_PP		1223711	0					
ANR	1223951	Identifier	Z_STRLEN_PP		1223711	0					
ANR	1223952	ArgumentList	zstype		1223711	1					
ANR	1223953	Argument	zstype		1223711	0					
ANR	1223954	Identifier	zstype		1223711	0					
ANR	1223955	IfStatement	if ( enc == NULL && SOAP_GLOBAL ( typemap ) )		1223711	1					
ANR	1223956	Condition	enc == NULL && SOAP_GLOBAL ( typemap )	419:7:18494:18528	1223711	0	True				
ANR	1223957	AndExpression	enc == NULL && SOAP_GLOBAL ( typemap )		1223711	0		&&			
ANR	1223958	EqualityExpression	enc == NULL		1223711	0		==			
ANR	1223959	Identifier	enc		1223711	0					
ANR	1223960	Identifier	NULL		1223711	1					
ANR	1223961	CallExpression	SOAP_GLOBAL ( typemap )		1223711	1					
ANR	1223962	Callee	SOAP_GLOBAL		1223711	0					
ANR	1223963	Identifier	SOAP_GLOBAL		1223711	0					
ANR	1223964	ArgumentList	typemap		1223711	1					
ANR	1223965	Argument	typemap		1223711	0					
ANR	1223966	Identifier	typemap		1223711	0					
ANR	1223967	CompoundStatement		29:4:1036:1057	1223711	1					
ANR	1223968	IdentifierDeclStatement	encodePtr * new_enc ;	420:4:18537:18555	1223711	0	True				
ANR	1223969	IdentifierDecl	* new_enc		1223711	0					
ANR	1223970	IdentifierDeclType	encodePtr *		1223711	0					
ANR	1223971	Identifier	new_enc		1223711	1					
ANR	1223972	IdentifierDeclStatement	smart_str nscat = { 0 } ;	421:4:18561:18582	1223711	1	True				
ANR	1223973	IdentifierDecl	nscat = { 0 }		1223711	0					
ANR	1223974	IdentifierDeclType	smart_str		1223711	0					
ANR	1223975	Identifier	nscat		1223711	1					
ANR	1223976	AssignmentExpression	nscat = { 0 }		1223711	2		=			
ANR	1223977	Identifier	nscat		1223711	0					
ANR	1223978	InitializerList	0		1223711	1					
ANR	1223979	PrimaryExpression	0		1223711	0					
ANR	1223980	IfStatement	if ( zns != NULL )		1223711	2					
ANR	1223981	Condition	zns != NULL	423:8:18593:18603	1223711	0	True				
ANR	1223982	EqualityExpression	zns != NULL		1223711	0		!=			
ANR	1223983	Identifier	zns		1223711	0					
ANR	1223984	Identifier	NULL		1223711	1					
ANR	1223985	CompoundStatement		31:21:1081:1081	1223711	1					
ANR	1223986	ExpressionStatement	"smart_str_appendl ( & nscat , Z_STRVAL_PP ( zns ) , Z_STRLEN_PP ( zns ) )"	424:5:18613:18674	1223711	0	True				
ANR	1223987	CallExpression	"smart_str_appendl ( & nscat , Z_STRVAL_PP ( zns ) , Z_STRLEN_PP ( zns ) )"		1223711	0					
ANR	1223988	Callee	smart_str_appendl		1223711	0					
ANR	1223989	Identifier	smart_str_appendl		1223711	0					
ANR	1223990	ArgumentList	& nscat		1223711	1					
ANR	1223991	Argument	& nscat		1223711	0					
ANR	1223992	UnaryOperationExpression	& nscat		1223711	0					
ANR	1223993	UnaryOperator	&		1223711	0					
ANR	1223994	Identifier	nscat		1223711	1					
ANR	1223995	Argument	Z_STRVAL_PP ( zns )		1223711	1					
ANR	1223996	CallExpression	Z_STRVAL_PP ( zns )		1223711	0					
ANR	1223997	Callee	Z_STRVAL_PP		1223711	0					
ANR	1223998	Identifier	Z_STRVAL_PP		1223711	0					
ANR	1223999	ArgumentList	zns		1223711	1					
ANR	1224000	Argument	zns		1223711	0					
ANR	1224001	Identifier	zns		1223711	0					
ANR	1224002	Argument	Z_STRLEN_PP ( zns )		1223711	2					
ANR	1224003	CallExpression	Z_STRLEN_PP ( zns )		1223711	0					
ANR	1224004	Callee	Z_STRLEN_PP		1223711	0					
ANR	1224005	Identifier	Z_STRLEN_PP		1223711	0					
ANR	1224006	ArgumentList	zns		1223711	1					
ANR	1224007	Argument	zns		1223711	0					
ANR	1224008	Identifier	zns		1223711	0					
ANR	1224009	ExpressionStatement	"smart_str_appendc ( & nscat , ':' )"	425:5:18681:18711	1223711	1	True				
ANR	1224010	CallExpression	"smart_str_appendc ( & nscat , ':' )"		1223711	0					
ANR	1224011	Callee	smart_str_appendc		1223711	0					
ANR	1224012	Identifier	smart_str_appendc		1223711	0					
ANR	1224013	ArgumentList	& nscat		1223711	1					
ANR	1224014	Argument	& nscat		1223711	0					
ANR	1224015	UnaryOperationExpression	& nscat		1223711	0					
ANR	1224016	UnaryOperator	&		1223711	0					
ANR	1224017	Identifier	nscat		1223711	1					
ANR	1224018	Argument	':'		1223711	1					
ANR	1224019	PrimaryExpression	':'		1223711	0					
ANR	1224020	ExpressionStatement	"smart_str_appendl ( & nscat , Z_STRVAL_PP ( zstype ) , Z_STRLEN_PP ( zstype ) )"	427:4:18723:18790	1223711	3	True				
ANR	1224021	CallExpression	"smart_str_appendl ( & nscat , Z_STRVAL_PP ( zstype ) , Z_STRLEN_PP ( zstype ) )"		1223711	0					
ANR	1224022	Callee	smart_str_appendl		1223711	0					
ANR	1224023	Identifier	smart_str_appendl		1223711	0					
ANR	1224024	ArgumentList	& nscat		1223711	1					
ANR	1224025	Argument	& nscat		1223711	0					
ANR	1224026	UnaryOperationExpression	& nscat		1223711	0					
ANR	1224027	UnaryOperator	&		1223711	0					
ANR	1224028	Identifier	nscat		1223711	1					
ANR	1224029	Argument	Z_STRVAL_PP ( zstype )		1223711	1					
ANR	1224030	CallExpression	Z_STRVAL_PP ( zstype )		1223711	0					
ANR	1224031	Callee	Z_STRVAL_PP		1223711	0					
ANR	1224032	Identifier	Z_STRVAL_PP		1223711	0					
ANR	1224033	ArgumentList	zstype		1223711	1					
ANR	1224034	Argument	zstype		1223711	0					
ANR	1224035	Identifier	zstype		1223711	0					
ANR	1224036	Argument	Z_STRLEN_PP ( zstype )		1223711	2					
ANR	1224037	CallExpression	Z_STRLEN_PP ( zstype )		1223711	0					
ANR	1224038	Callee	Z_STRLEN_PP		1223711	0					
ANR	1224039	Identifier	Z_STRLEN_PP		1223711	0					
ANR	1224040	ArgumentList	zstype		1223711	1					
ANR	1224041	Argument	zstype		1223711	0					
ANR	1224042	Identifier	zstype		1223711	0					
ANR	1224043	ExpressionStatement	smart_str_0 ( & nscat )	428:4:18796:18815	1223711	4	True				
ANR	1224044	CallExpression	smart_str_0 ( & nscat )		1223711	0					
ANR	1224045	Callee	smart_str_0		1223711	0					
ANR	1224046	Identifier	smart_str_0		1223711	0					
ANR	1224047	ArgumentList	& nscat		1223711	1					
ANR	1224048	Argument	& nscat		1223711	0					
ANR	1224049	UnaryOperationExpression	& nscat		1223711	0					
ANR	1224050	UnaryOperator	&		1223711	0					
ANR	1224051	Identifier	nscat		1223711	1					
ANR	1224052	IfStatement	"if ( zend_hash_find ( SOAP_GLOBAL ( typemap ) , nscat . c , nscat . len + 1 , ( void * * ) & new_enc ) == SUCCESS )"		1223711	5					
ANR	1224053	Condition	"zend_hash_find ( SOAP_GLOBAL ( typemap ) , nscat . c , nscat . len + 1 , ( void * * ) & new_enc ) == SUCCESS"	429:8:18825:18913	1223711	0	True				
ANR	1224054	EqualityExpression	"zend_hash_find ( SOAP_GLOBAL ( typemap ) , nscat . c , nscat . len + 1 , ( void * * ) & new_enc ) == SUCCESS"		1223711	0		==			
ANR	1224055	CallExpression	"zend_hash_find ( SOAP_GLOBAL ( typemap ) , nscat . c , nscat . len + 1 , ( void * * ) & new_enc )"		1223711	0					
ANR	1224056	Callee	zend_hash_find		1223711	0					
ANR	1224057	Identifier	zend_hash_find		1223711	0					
ANR	1224058	ArgumentList	SOAP_GLOBAL ( typemap )		1223711	1					
ANR	1224059	Argument	SOAP_GLOBAL ( typemap )		1223711	0					
ANR	1224060	CallExpression	SOAP_GLOBAL ( typemap )		1223711	0					
ANR	1224061	Callee	SOAP_GLOBAL		1223711	0					
ANR	1224062	Identifier	SOAP_GLOBAL		1223711	0					
ANR	1224063	ArgumentList	typemap		1223711	1					
ANR	1224064	Argument	typemap		1223711	0					
ANR	1224065	Identifier	typemap		1223711	0					
ANR	1224066	Argument	nscat . c		1223711	1					
ANR	1224067	MemberAccess	nscat . c		1223711	0					
ANR	1224068	Identifier	nscat		1223711	0					
ANR	1224069	Identifier	c		1223711	1					
ANR	1224070	Argument	nscat . len + 1		1223711	2					
ANR	1224071	AdditiveExpression	nscat . len + 1		1223711	0		+			
ANR	1224072	MemberAccess	nscat . len		1223711	0					
ANR	1224073	Identifier	nscat		1223711	0					
ANR	1224074	Identifier	len		1223711	1					
ANR	1224075	PrimaryExpression	1		1223711	1					
ANR	1224076	Argument	( void * * ) & new_enc		1223711	3					
ANR	1224077	CastExpression	( void * * ) & new_enc		1223711	0					
ANR	1224078	CastTarget	void * *		1223711	0					
ANR	1224079	UnaryOperationExpression	& new_enc		1223711	1					
ANR	1224080	UnaryOperator	&		1223711	0					
ANR	1224081	Identifier	new_enc		1223711	1					
ANR	1224082	Identifier	SUCCESS		1223711	1					
ANR	1224083	CompoundStatement		37:99:1391:1391	1223711	1					
ANR	1224084	ExpressionStatement	enc = * new_enc	430:5:18923:18937	1223711	0	True				
ANR	1224085	AssignmentExpression	enc = * new_enc		1223711	0		=			
ANR	1224086	Identifier	enc		1223711	0					
ANR	1224087	UnaryOperationExpression	* new_enc		1223711	1					
ANR	1224088	UnaryOperator	*		1223711	0					
ANR	1224089	Identifier	new_enc		1223711	1					
ANR	1224090	ExpressionStatement	smart_str_free ( & nscat )	432:4:18949:18971	1223711	6	True				
ANR	1224091	CallExpression	smart_str_free ( & nscat )		1223711	0					
ANR	1224092	Callee	smart_str_free		1223711	0					
ANR	1224093	Identifier	smart_str_free		1223711	0					
ANR	1224094	ArgumentList	& nscat		1223711	1					
ANR	1224095	Argument	& nscat		1223711	0					
ANR	1224096	UnaryOperationExpression	& nscat		1223711	0					
ANR	1224097	UnaryOperator	&		1223711	0					
ANR	1224098	Identifier	nscat		1223711	1					
ANR	1224099	IfStatement	if ( enc == NULL )		1223711	5					
ANR	1224100	Condition	enc == NULL	435:6:18991:19001	1223711	0	True				
ANR	1224101	EqualityExpression	enc == NULL		1223711	0		==			
ANR	1224102	Identifier	enc		1223711	0					
ANR	1224103	Identifier	NULL		1223711	1					
ANR	1224104	CompoundStatement		43:19:1479:1479	1223711	1					
ANR	1224105	ExpressionStatement	enc = get_conversion ( Z_LVAL_P ( * ztype ) )	436:3:19009:19047	1223711	0	True				
ANR	1224106	AssignmentExpression	enc = get_conversion ( Z_LVAL_P ( * ztype ) )		1223711	0		=			
ANR	1224107	Identifier	enc		1223711	0					
ANR	1224108	CallExpression	get_conversion ( Z_LVAL_P ( * ztype ) )		1223711	1					
ANR	1224109	Callee	get_conversion		1223711	0					
ANR	1224110	Identifier	get_conversion		1223711	0					
ANR	1224111	ArgumentList	Z_LVAL_P ( * ztype )		1223711	1					
ANR	1224112	Argument	Z_LVAL_P ( * ztype )		1223711	0					
ANR	1224113	CallExpression	Z_LVAL_P ( * ztype )		1223711	0					
ANR	1224114	Callee	Z_LVAL_P		1223711	0					
ANR	1224115	Identifier	Z_LVAL_P		1223711	0					
ANR	1224116	ArgumentList	* ztype		1223711	1					
ANR	1224117	Argument	* ztype		1223711	0					
ANR	1224118	UnaryOperationExpression	* ztype		1223711	0					
ANR	1224119	UnaryOperator	*		1223711	0					
ANR	1224120	Identifier	ztype		1223711	1					
ANR	1224121	IfStatement	if ( enc == NULL )		1223711	6					
ANR	1224122	Condition	enc == NULL	438:6:19059:19069	1223711	0	True				
ANR	1224123	EqualityExpression	enc == NULL		1223711	0		==			
ANR	1224124	Identifier	enc		1223711	0					
ANR	1224125	Identifier	NULL		1223711	1					
ANR	1224126	CompoundStatement		46:19:1547:1547	1223711	1					
ANR	1224127	ExpressionStatement	enc = encode	439:3:19077:19089	1223711	0	True				
ANR	1224128	AssignmentExpression	enc = encode		1223711	0		=			
ANR	1224129	Identifier	enc		1223711	0					
ANR	1224130	Identifier	encode		1223711	1					
ANR	1224131	IfStatement	"if ( zend_hash_find ( ht , ""enc_value"" , sizeof ( ""enc_value"" ) , ( void * * ) & zdata ) == FAILURE )"		1223711	7					
ANR	1224132	Condition	"zend_hash_find ( ht , ""enc_value"" , sizeof ( ""enc_value"" ) , ( void * * ) & zdata ) == FAILURE"	442:6:19102:19181	1223711	0	True				
ANR	1224133	EqualityExpression	"zend_hash_find ( ht , ""enc_value"" , sizeof ( ""enc_value"" ) , ( void * * ) & zdata ) == FAILURE"		1223711	0		==			
ANR	1224134	CallExpression	"zend_hash_find ( ht , ""enc_value"" , sizeof ( ""enc_value"" ) , ( void * * ) & zdata )"		1223711	0					
ANR	1224135	Callee	zend_hash_find		1223711	0					
ANR	1224136	Identifier	zend_hash_find		1223711	0					
ANR	1224137	ArgumentList	ht		1223711	1					
ANR	1224138	Argument	ht		1223711	0					
ANR	1224139	Identifier	ht		1223711	0					
ANR	1224140	Argument	"""enc_value"""		1223711	1					
ANR	1224141	PrimaryExpression	"""enc_value"""		1223711	0					
ANR	1224142	Argument	"sizeof ( ""enc_value"" )"		1223711	2					
ANR	1224143	SizeofExpression	"sizeof ( ""enc_value"" )"		1223711	0					
ANR	1224144	Sizeof	sizeof		1223711	0					
ANR	1224145	PrimaryExpression	"""enc_value"""		1223711	1					
ANR	1224146	Argument	( void * * ) & zdata		1223711	3					
ANR	1224147	CastExpression	( void * * ) & zdata		1223711	0					
ANR	1224148	CastTarget	void * *		1223711	0					
ANR	1224149	UnaryOperationExpression	& zdata		1223711	1					
ANR	1224150	UnaryOperator	&		1223711	0					
ANR	1224151	Identifier	zdata		1223711	1					
ANR	1224152	Identifier	FAILURE		1223711	1					
ANR	1224153	CompoundStatement		50:88:1659:1659	1223711	1					
ANR	1224154	Statement	node	443:3:19189:19192	1223711	0	True				
ANR	1224155	Statement	=	443:8:19194:19194	1223711	1	True				
ANR	1224156	Statement	master_to_xml	443:10:19196:19208	1223711	2	True				
ANR	1224157	Statement	(	443:23:19209:19209	1223711	3	True				
ANR	1224158	Statement	enc	443:24:19210:19212	1223711	4	True				
ANR	1224159	Statement	","	443:27:19213:19213	1223711	5	True				
ANR	1224160	Statement	NULL	443:29:19215:19218	1223711	6	True				
ANR	1224161	Statement	","	443:33:19219:19219	1223711	7	True				
ANR	1224162	Statement	style	443:35:19221:19225	1223711	8	True				
ANR	1224163	Statement	","	443:40:19226:19226	1223711	9	True				
ANR	1224164	Statement	parent	443:42:19228:19233	1223711	10	True				
ANR	1224165	Statement	TSRMLS_CC	443:49:19235:19243	1223711	11	True				
ANR	1224166	Statement	)	443:58:19244:19244	1223711	12	True				
ANR	1224167	ExpressionStatement		443:59:19245:19245	1223711	13	True				
ANR	1224168	ElseStatement	else		1223711	0					
ANR	1224169	CompoundStatement		52:9:1731:1731	1223711	0					
ANR	1224170	Statement	node	445:3:19261:19264	1223711	0	True				
ANR	1224171	Statement	=	445:8:19266:19266	1223711	1	True				
ANR	1224172	Statement	master_to_xml	445:10:19268:19280	1223711	2	True				
ANR	1224173	Statement	(	445:23:19281:19281	1223711	3	True				
ANR	1224174	Statement	enc	445:24:19282:19284	1223711	4	True				
ANR	1224175	Statement	","	445:27:19285:19285	1223711	5	True				
ANR	1224176	Statement	*	445:29:19287:19287	1223711	6	True				
ANR	1224177	Statement	zdata	445:30:19288:19292	1223711	7	True				
ANR	1224178	Statement	","	445:35:19293:19293	1223711	8	True				
ANR	1224179	Statement	style	445:37:19295:19299	1223711	9	True				
ANR	1224180	Statement	","	445:42:19300:19300	1223711	10	True				
ANR	1224181	Statement	parent	445:44:19302:19307	1223711	11	True				
ANR	1224182	Statement	TSRMLS_CC	445:51:19309:19317	1223711	12	True				
ANR	1224183	Statement	)	445:60:19318:19318	1223711	13	True				
ANR	1224184	ExpressionStatement		445:61:19319:19319	1223711	14	True				
ANR	1224185	IfStatement	if ( style == SOAP_ENCODED || ( SOAP_GLOBAL ( sdl ) && encode != enc ) )		1223711	8					
ANR	1224186	Condition	style == SOAP_ENCODED || ( SOAP_GLOBAL ( sdl ) && encode != enc )	448:6:19332:19391	1223711	0	True				
ANR	1224187	OrExpression	style == SOAP_ENCODED || ( SOAP_GLOBAL ( sdl ) && encode != enc )		1223711	0		||			
ANR	1224188	EqualityExpression	style == SOAP_ENCODED		1223711	0		==			
ANR	1224189	Identifier	style		1223711	0					
ANR	1224190	Identifier	SOAP_ENCODED		1223711	1					
ANR	1224191	AndExpression	SOAP_GLOBAL ( sdl ) && encode != enc		1223711	1		&&			
ANR	1224192	CallExpression	SOAP_GLOBAL ( sdl )		1223711	0					
ANR	1224193	Callee	SOAP_GLOBAL		1223711	0					
ANR	1224194	Identifier	SOAP_GLOBAL		1223711	0					
ANR	1224195	ArgumentList	sdl		1223711	1					
ANR	1224196	Argument	sdl		1223711	0					
ANR	1224197	Identifier	sdl		1223711	0					
ANR	1224198	EqualityExpression	encode != enc		1223711	1		!=			
ANR	1224199	Identifier	encode		1223711	0					
ANR	1224200	Identifier	enc		1223711	1					
ANR	1224201	CompoundStatement		56:68:1869:1869	1223711	1					
ANR	1224202	IfStatement	"if ( zend_hash_find ( ht , ""enc_stype"" , sizeof ( ""enc_stype"" ) , ( void * * ) & zstype ) == SUCCESS && Z_TYPE_PP ( zstype ) == IS_STRING )"		1223711	0					
ANR	1224203	Condition	"zend_hash_find ( ht , ""enc_stype"" , sizeof ( ""enc_stype"" ) , ( void * * ) & zstype ) == SUCCESS && Z_TYPE_PP ( zstype ) == IS_STRING"	449:7:19403:19524	1223711	0	True				
ANR	1224204	AndExpression	"zend_hash_find ( ht , ""enc_stype"" , sizeof ( ""enc_stype"" ) , ( void * * ) & zstype ) == SUCCESS && Z_TYPE_PP ( zstype ) == IS_STRING"		1223711	0		&&			
ANR	1224205	EqualityExpression	"zend_hash_find ( ht , ""enc_stype"" , sizeof ( ""enc_stype"" ) , ( void * * ) & zstype ) == SUCCESS"		1223711	0		==			
ANR	1224206	CallExpression	"zend_hash_find ( ht , ""enc_stype"" , sizeof ( ""enc_stype"" ) , ( void * * ) & zstype )"		1223711	0					
ANR	1224207	Callee	zend_hash_find		1223711	0					
ANR	1224208	Identifier	zend_hash_find		1223711	0					
ANR	1224209	ArgumentList	ht		1223711	1					
ANR	1224210	Argument	ht		1223711	0					
ANR	1224211	Identifier	ht		1223711	0					
ANR	1224212	Argument	"""enc_stype"""		1223711	1					
ANR	1224213	PrimaryExpression	"""enc_stype"""		1223711	0					
ANR	1224214	Argument	"sizeof ( ""enc_stype"" )"		1223711	2					
ANR	1224215	SizeofExpression	"sizeof ( ""enc_stype"" )"		1223711	0					
ANR	1224216	Sizeof	sizeof		1223711	0					
ANR	1224217	PrimaryExpression	"""enc_stype"""		1223711	1					
ANR	1224218	Argument	( void * * ) & zstype		1223711	3					
ANR	1224219	CastExpression	( void * * ) & zstype		1223711	0					
ANR	1224220	CastTarget	void * *		1223711	0					
ANR	1224221	UnaryOperationExpression	& zstype		1223711	1					
ANR	1224222	UnaryOperator	&		1223711	0					
ANR	1224223	Identifier	zstype		1223711	1					
ANR	1224224	Identifier	SUCCESS		1223711	1					
ANR	1224225	EqualityExpression	Z_TYPE_PP ( zstype ) == IS_STRING		1223711	1		==			
ANR	1224226	CallExpression	Z_TYPE_PP ( zstype )		1223711	0					
ANR	1224227	Callee	Z_TYPE_PP		1223711	0					
ANR	1224228	Identifier	Z_TYPE_PP		1223711	0					
ANR	1224229	ArgumentList	zstype		1223711	1					
ANR	1224230	Argument	zstype		1223711	0					
ANR	1224231	Identifier	zstype		1223711	0					
ANR	1224232	Identifier	IS_STRING		1223711	1					
ANR	1224233	CompoundStatement		58:39:2002:2002	1223711	1					
ANR	1224234	IfStatement	"if ( zend_hash_find ( ht , ""enc_ns"" , sizeof ( ""enc_ns"" ) , ( void * * ) & zns ) == SUCCESS && Z_TYPE_PP ( zns ) == IS_STRING )"		1223711	0					
ANR	1224235	Condition	"zend_hash_find ( ht , ""enc_ns"" , sizeof ( ""enc_ns"" ) , ( void * * ) & zns ) == SUCCESS && Z_TYPE_PP ( zns ) == IS_STRING"	451:8:19537:19647	1223711	0	True				
ANR	1224236	AndExpression	"zend_hash_find ( ht , ""enc_ns"" , sizeof ( ""enc_ns"" ) , ( void * * ) & zns ) == SUCCESS && Z_TYPE_PP ( zns ) == IS_STRING"		1223711	0		&&			
ANR	1224237	EqualityExpression	"zend_hash_find ( ht , ""enc_ns"" , sizeof ( ""enc_ns"" ) , ( void * * ) & zns ) == SUCCESS"		1223711	0		==			
ANR	1224238	CallExpression	"zend_hash_find ( ht , ""enc_ns"" , sizeof ( ""enc_ns"" ) , ( void * * ) & zns )"		1223711	0					
ANR	1224239	Callee	zend_hash_find		1223711	0					
ANR	1224240	Identifier	zend_hash_find		1223711	0					
ANR	1224241	ArgumentList	ht		1223711	1					
ANR	1224242	Argument	ht		1223711	0					
ANR	1224243	Identifier	ht		1223711	0					
ANR	1224244	Argument	"""enc_ns"""		1223711	1					
ANR	1224245	PrimaryExpression	"""enc_ns"""		1223711	0					
ANR	1224246	Argument	"sizeof ( ""enc_ns"" )"		1223711	2					
ANR	1224247	SizeofExpression	"sizeof ( ""enc_ns"" )"		1223711	0					
ANR	1224248	Sizeof	sizeof		1223711	0					
ANR	1224249	PrimaryExpression	"""enc_ns"""		1223711	1					
ANR	1224250	Argument	( void * * ) & zns		1223711	3					
ANR	1224251	CastExpression	( void * * ) & zns		1223711	0					
ANR	1224252	CastTarget	void * *		1223711	0					
ANR	1224253	UnaryOperationExpression	& zns		1223711	1					
ANR	1224254	UnaryOperator	&		1223711	0					
ANR	1224255	Identifier	zns		1223711	1					
ANR	1224256	Identifier	SUCCESS		1223711	1					
ANR	1224257	EqualityExpression	Z_TYPE_PP ( zns ) == IS_STRING		1223711	1		==			
ANR	1224258	CallExpression	Z_TYPE_PP ( zns )		1223711	0					
ANR	1224259	Callee	Z_TYPE_PP		1223711	0					
ANR	1224260	Identifier	Z_TYPE_PP		1223711	0					
ANR	1224261	ArgumentList	zns		1223711	1					
ANR	1224262	Argument	zns		1223711	0					
ANR	1224263	Identifier	zns		1223711	0					
ANR	1224264	Identifier	IS_STRING		1223711	1					
ANR	1224265	CompoundStatement		60:37:2125:2125	1223711	1					
ANR	1224266	ExpressionStatement	"set_ns_and_type_ex ( node , Z_STRVAL_PP ( zns ) , Z_STRVAL_PP ( zstype ) )"	453:5:19657:19720	1223711	0	True				
ANR	1224267	CallExpression	"set_ns_and_type_ex ( node , Z_STRVAL_PP ( zns ) , Z_STRVAL_PP ( zstype ) )"		1223711	0					
ANR	1224268	Callee	set_ns_and_type_ex		1223711	0					
ANR	1224269	Identifier	set_ns_and_type_ex		1223711	0					
ANR	1224270	ArgumentList	node		1223711	1					
ANR	1224271	Argument	node		1223711	0					
ANR	1224272	Identifier	node		1223711	0					
ANR	1224273	Argument	Z_STRVAL_PP ( zns )		1223711	1					
ANR	1224274	CallExpression	Z_STRVAL_PP ( zns )		1223711	0					
ANR	1224275	Callee	Z_STRVAL_PP		1223711	0					
ANR	1224276	Identifier	Z_STRVAL_PP		1223711	0					
ANR	1224277	ArgumentList	zns		1223711	1					
ANR	1224278	Argument	zns		1223711	0					
ANR	1224279	Identifier	zns		1223711	0					
ANR	1224280	Argument	Z_STRVAL_PP ( zstype )		1223711	2					
ANR	1224281	CallExpression	Z_STRVAL_PP ( zstype )		1223711	0					
ANR	1224282	Callee	Z_STRVAL_PP		1223711	0					
ANR	1224283	Identifier	Z_STRVAL_PP		1223711	0					
ANR	1224284	ArgumentList	zstype		1223711	1					
ANR	1224285	Argument	zstype		1223711	0					
ANR	1224286	Identifier	zstype		1223711	0					
ANR	1224287	ElseStatement	else		1223711	0					
ANR	1224288	CompoundStatement		62:11:2208:2208	1223711	0					
ANR	1224289	ExpressionStatement	"set_ns_and_type_ex ( node , NULL , Z_STRVAL_PP ( zstype ) )"	455:5:19740:19791	1223711	0	True				
ANR	1224290	CallExpression	"set_ns_and_type_ex ( node , NULL , Z_STRVAL_PP ( zstype ) )"		1223711	0					
ANR	1224291	Callee	set_ns_and_type_ex		1223711	0					
ANR	1224292	Identifier	set_ns_and_type_ex		1223711	0					
ANR	1224293	ArgumentList	node		1223711	1					
ANR	1224294	Argument	node		1223711	0					
ANR	1224295	Identifier	node		1223711	0					
ANR	1224296	Argument	NULL		1223711	1					
ANR	1224297	Identifier	NULL		1223711	0					
ANR	1224298	Argument	Z_STRVAL_PP ( zstype )		1223711	2					
ANR	1224299	CallExpression	Z_STRVAL_PP ( zstype )		1223711	0					
ANR	1224300	Callee	Z_STRVAL_PP		1223711	0					
ANR	1224301	Identifier	Z_STRVAL_PP		1223711	0					
ANR	1224302	ArgumentList	zstype		1223711	1					
ANR	1224303	Argument	zstype		1223711	0					
ANR	1224304	Identifier	zstype		1223711	0					
ANR	1224305	IfStatement	"if ( zend_hash_find ( ht , ""enc_name"" , sizeof ( ""enc_name"" ) , ( void * * ) & zname ) == SUCCESS && Z_TYPE_PP ( zname ) == IS_STRING )"		1223711	9					
ANR	1224306	Condition	"zend_hash_find ( ht , ""enc_name"" , sizeof ( ""enc_name"" ) , ( void * * ) & zname ) == SUCCESS && Z_TYPE_PP ( zname ) == IS_STRING"	460:6:19815:19931	1223711	0	True				
ANR	1224307	AndExpression	"zend_hash_find ( ht , ""enc_name"" , sizeof ( ""enc_name"" ) , ( void * * ) & zname ) == SUCCESS && Z_TYPE_PP ( zname ) == IS_STRING"		1223711	0		&&			
ANR	1224308	EqualityExpression	"zend_hash_find ( ht , ""enc_name"" , sizeof ( ""enc_name"" ) , ( void * * ) & zname ) == SUCCESS"		1223711	0		==			
ANR	1224309	CallExpression	"zend_hash_find ( ht , ""enc_name"" , sizeof ( ""enc_name"" ) , ( void * * ) & zname )"		1223711	0					
ANR	1224310	Callee	zend_hash_find		1223711	0					
ANR	1224311	Identifier	zend_hash_find		1223711	0					
ANR	1224312	ArgumentList	ht		1223711	1					
ANR	1224313	Argument	ht		1223711	0					
ANR	1224314	Identifier	ht		1223711	0					
ANR	1224315	Argument	"""enc_name"""		1223711	1					
ANR	1224316	PrimaryExpression	"""enc_name"""		1223711	0					
ANR	1224317	Argument	"sizeof ( ""enc_name"" )"		1223711	2					
ANR	1224318	SizeofExpression	"sizeof ( ""enc_name"" )"		1223711	0					
ANR	1224319	Sizeof	sizeof		1223711	0					
ANR	1224320	PrimaryExpression	"""enc_name"""		1223711	1					
ANR	1224321	Argument	( void * * ) & zname		1223711	3					
ANR	1224322	CastExpression	( void * * ) & zname		1223711	0					
ANR	1224323	CastTarget	void * *		1223711	0					
ANR	1224324	UnaryOperationExpression	& zname		1223711	1					
ANR	1224325	UnaryOperator	&		1223711	0					
ANR	1224326	Identifier	zname		1223711	1					
ANR	1224327	Identifier	SUCCESS		1223711	1					
ANR	1224328	EqualityExpression	Z_TYPE_PP ( zname ) == IS_STRING		1223711	1		==			
ANR	1224329	CallExpression	Z_TYPE_PP ( zname )		1223711	0					
ANR	1224330	Callee	Z_TYPE_PP		1223711	0					
ANR	1224331	Identifier	Z_TYPE_PP		1223711	0					
ANR	1224332	ArgumentList	zname		1223711	1					
ANR	1224333	Argument	zname		1223711	0					
ANR	1224334	Identifier	zname		1223711	0					
ANR	1224335	Identifier	IS_STRING		1223711	1					
ANR	1224336	CompoundStatement		69:37:2409:2409	1223711	1					
ANR	1224337	ExpressionStatement	"xmlNodeSetName ( node , BAD_CAST ( Z_STRVAL_PP ( zname ) ) )"	462:3:19939:19989	1223711	0	True				
ANR	1224338	CallExpression	"xmlNodeSetName ( node , BAD_CAST ( Z_STRVAL_PP ( zname ) ) )"		1223711	0					
ANR	1224339	Callee	xmlNodeSetName		1223711	0					
ANR	1224340	Identifier	xmlNodeSetName		1223711	0					
ANR	1224341	ArgumentList	node		1223711	1					
ANR	1224342	Argument	node		1223711	0					
ANR	1224343	Identifier	node		1223711	0					
ANR	1224344	Argument	BAD_CAST ( Z_STRVAL_PP ( zname ) )		1223711	1					
ANR	1224345	CallExpression	BAD_CAST ( Z_STRVAL_PP ( zname ) )		1223711	0					
ANR	1224346	Callee	BAD_CAST		1223711	0					
ANR	1224347	Identifier	BAD_CAST		1223711	0					
ANR	1224348	ArgumentList	Z_STRVAL_PP ( zname )		1223711	1					
ANR	1224349	Argument	Z_STRVAL_PP ( zname )		1223711	0					
ANR	1224350	CallExpression	Z_STRVAL_PP ( zname )		1223711	0					
ANR	1224351	Callee	Z_STRVAL_PP		1223711	0					
ANR	1224352	Identifier	Z_STRVAL_PP		1223711	0					
ANR	1224353	ArgumentList	zname		1223711	1					
ANR	1224354	Argument	zname		1223711	0					
ANR	1224355	Identifier	zname		1223711	0					
ANR	1224356	IfStatement	"if ( zend_hash_find ( ht , ""enc_namens"" , sizeof ( ""enc_namens"" ) , ( void * * ) & znamens ) == SUCCESS && Z_TYPE_PP ( znamens ) == IS_STRING )"		1223711	10					
ANR	1224357	Condition	"zend_hash_find ( ht , ""enc_namens"" , sizeof ( ""enc_namens"" ) , ( void * * ) & znamens ) == SUCCESS && Z_TYPE_PP ( znamens ) == IS_STRING"	464:6:20001:20125	1223711	0	True				
ANR	1224358	AndExpression	"zend_hash_find ( ht , ""enc_namens"" , sizeof ( ""enc_namens"" ) , ( void * * ) & znamens ) == SUCCESS && Z_TYPE_PP ( znamens ) == IS_STRING"		1223711	0		&&			
ANR	1224359	EqualityExpression	"zend_hash_find ( ht , ""enc_namens"" , sizeof ( ""enc_namens"" ) , ( void * * ) & znamens ) == SUCCESS"		1223711	0		==			
ANR	1224360	CallExpression	"zend_hash_find ( ht , ""enc_namens"" , sizeof ( ""enc_namens"" ) , ( void * * ) & znamens )"		1223711	0					
ANR	1224361	Callee	zend_hash_find		1223711	0					
ANR	1224362	Identifier	zend_hash_find		1223711	0					
ANR	1224363	ArgumentList	ht		1223711	1					
ANR	1224364	Argument	ht		1223711	0					
ANR	1224365	Identifier	ht		1223711	0					
ANR	1224366	Argument	"""enc_namens"""		1223711	1					
ANR	1224367	PrimaryExpression	"""enc_namens"""		1223711	0					
ANR	1224368	Argument	"sizeof ( ""enc_namens"" )"		1223711	2					
ANR	1224369	SizeofExpression	"sizeof ( ""enc_namens"" )"		1223711	0					
ANR	1224370	Sizeof	sizeof		1223711	0					
ANR	1224371	PrimaryExpression	"""enc_namens"""		1223711	1					
ANR	1224372	Argument	( void * * ) & znamens		1223711	3					
ANR	1224373	CastExpression	( void * * ) & znamens		1223711	0					
ANR	1224374	CastTarget	void * *		1223711	0					
ANR	1224375	UnaryOperationExpression	& znamens		1223711	1					
ANR	1224376	UnaryOperator	&		1223711	0					
ANR	1224377	Identifier	znamens		1223711	1					
ANR	1224378	Identifier	SUCCESS		1223711	1					
ANR	1224379	EqualityExpression	Z_TYPE_PP ( znamens ) == IS_STRING		1223711	1		==			
ANR	1224380	CallExpression	Z_TYPE_PP ( znamens )		1223711	0					
ANR	1224381	Callee	Z_TYPE_PP		1223711	0					
ANR	1224382	Identifier	Z_TYPE_PP		1223711	0					
ANR	1224383	ArgumentList	znamens		1223711	1					
ANR	1224384	Argument	znamens		1223711	0					
ANR	1224385	Identifier	znamens		1223711	0					
ANR	1224386	Identifier	IS_STRING		1223711	1					
ANR	1224387	CompoundStatement		74:3:2608:2664	1223711	1					
ANR	1224388	IdentifierDeclStatement	"xmlNsPtr nsp = encode_add_ns ( node , Z_STRVAL_PP ( znamens ) ) ;"	466:3:20133:20189	1223711	0	True				
ANR	1224389	IdentifierDecl	"nsp = encode_add_ns ( node , Z_STRVAL_PP ( znamens ) )"		1223711	0					
ANR	1224390	IdentifierDeclType	xmlNsPtr		1223711	0					
ANR	1224391	Identifier	nsp		1223711	1					
ANR	1224392	AssignmentExpression	"nsp = encode_add_ns ( node , Z_STRVAL_PP ( znamens ) )"		1223711	2		=			
ANR	1224393	Identifier	nsp		1223711	0					
ANR	1224394	CallExpression	"encode_add_ns ( node , Z_STRVAL_PP ( znamens ) )"		1223711	1					
ANR	1224395	Callee	encode_add_ns		1223711	0					
ANR	1224396	Identifier	encode_add_ns		1223711	0					
ANR	1224397	ArgumentList	node		1223711	1					
ANR	1224398	Argument	node		1223711	0					
ANR	1224399	Identifier	node		1223711	0					
ANR	1224400	Argument	Z_STRVAL_PP ( znamens )		1223711	1					
ANR	1224401	CallExpression	Z_STRVAL_PP ( znamens )		1223711	0					
ANR	1224402	Callee	Z_STRVAL_PP		1223711	0					
ANR	1224403	Identifier	Z_STRVAL_PP		1223711	0					
ANR	1224404	ArgumentList	znamens		1223711	1					
ANR	1224405	Argument	znamens		1223711	0					
ANR	1224406	Identifier	znamens		1223711	0					
ANR	1224407	ExpressionStatement	"xmlSetNs ( node , nsp )"	467:3:20194:20213	1223711	1	True				
ANR	1224408	CallExpression	"xmlSetNs ( node , nsp )"		1223711	0					
ANR	1224409	Callee	xmlSetNs		1223711	0					
ANR	1224410	Identifier	xmlSetNs		1223711	0					
ANR	1224411	ArgumentList	node		1223711	1					
ANR	1224412	Argument	node		1223711	0					
ANR	1224413	Identifier	node		1223711	0					
ANR	1224414	Argument	nsp		1223711	1					
ANR	1224415	Identifier	nsp		1223711	0					
ANR	1224416	ElseStatement	else		1223711	0					
ANR	1224417	CompoundStatement		77:8:2702:2702	1223711	0					
ANR	1224418	IfStatement	if ( check_class_map && SOAP_GLOBAL ( class_map ) && data && Z_TYPE_P ( data ) == IS_OBJECT && ! Z_OBJPROP_P ( data ) -> nApplyCount )		1223711	0					
ANR	1224419	Condition	check_class_map && SOAP_GLOBAL ( class_map ) && data && Z_TYPE_P ( data ) == IS_OBJECT && ! Z_OBJPROP_P ( data ) -> nApplyCount	470:6:20235:20361	1223711	0	True				
ANR	1224420	AndExpression	check_class_map && SOAP_GLOBAL ( class_map ) && data && Z_TYPE_P ( data ) == IS_OBJECT && ! Z_OBJPROP_P ( data ) -> nApplyCount		1223711	0		&&			
ANR	1224421	Identifier	check_class_map		1223711	0					
ANR	1224422	AndExpression	SOAP_GLOBAL ( class_map ) && data && Z_TYPE_P ( data ) == IS_OBJECT && ! Z_OBJPROP_P ( data ) -> nApplyCount		1223711	1		&&			
ANR	1224423	CallExpression	SOAP_GLOBAL ( class_map )		1223711	0					
ANR	1224424	Callee	SOAP_GLOBAL		1223711	0					
ANR	1224425	Identifier	SOAP_GLOBAL		1223711	0					
ANR	1224426	ArgumentList	class_map		1223711	1					
ANR	1224427	Argument	class_map		1223711	0					
ANR	1224428	Identifier	class_map		1223711	0					
ANR	1224429	AndExpression	data && Z_TYPE_P ( data ) == IS_OBJECT && ! Z_OBJPROP_P ( data ) -> nApplyCount		1223711	1		&&			
ANR	1224430	Identifier	data		1223711	0					
ANR	1224431	AndExpression	Z_TYPE_P ( data ) == IS_OBJECT && ! Z_OBJPROP_P ( data ) -> nApplyCount		1223711	1		&&			
ANR	1224432	EqualityExpression	Z_TYPE_P ( data ) == IS_OBJECT		1223711	0		==			
ANR	1224433	CallExpression	Z_TYPE_P ( data )		1223711	0					
ANR	1224434	Callee	Z_TYPE_P		1223711	0					
ANR	1224435	Identifier	Z_TYPE_P		1223711	0					
ANR	1224436	ArgumentList	data		1223711	1					
ANR	1224437	Argument	data		1223711	0					
ANR	1224438	Identifier	data		1223711	0					
ANR	1224439	Identifier	IS_OBJECT		1223711	1					
ANR	1224440	UnaryOperationExpression	! Z_OBJPROP_P ( data ) -> nApplyCount		1223711	1					
ANR	1224441	UnaryOperator	!		1223711	0					
ANR	1224442	PtrMemberAccess	Z_OBJPROP_P ( data ) -> nApplyCount		1223711	1					
ANR	1224443	CallExpression	Z_OBJPROP_P ( data )		1223711	0					
ANR	1224444	Callee	Z_OBJPROP_P		1223711	0					
ANR	1224445	Identifier	Z_OBJPROP_P		1223711	0					
ANR	1224446	ArgumentList	data		1223711	1					
ANR	1224447	Argument	data		1223711	0					
ANR	1224448	Identifier	data		1223711	0					
ANR	1224449	Identifier	nApplyCount		1223711	1					
ANR	1224450	CompoundStatement		86:3:2968:2977	1223711	1					
ANR	1224451	IdentifierDeclStatement	zend_class_entry * ce = Z_OBJCE_P ( data ) ;	473:3:20369:20407	1223711	0	True				
ANR	1224452	IdentifierDecl	* ce = Z_OBJCE_P ( data )		1223711	0					
ANR	1224453	IdentifierDeclType	zend_class_entry *		1223711	0					
ANR	1224454	Identifier	ce		1223711	1					
ANR	1224455	AssignmentExpression	* ce = Z_OBJCE_P ( data )		1223711	2		=			
ANR	1224456	Identifier	ce		1223711	0					
ANR	1224457	CallExpression	Z_OBJCE_P ( data )		1223711	1					
ANR	1224458	Callee	Z_OBJCE_P		1223711	0					
ANR	1224459	Identifier	Z_OBJCE_P		1223711	0					
ANR	1224460	ArgumentList	data		1223711	1					
ANR	1224461	Argument	data		1223711	0					
ANR	1224462	Identifier	data		1223711	0					
ANR	1224463	IdentifierDeclStatement	HashPosition pos ;	474:3:20412:20428	1223711	1	True				
ANR	1224464	IdentifierDecl	pos		1223711	0					
ANR	1224465	IdentifierDeclType	HashPosition		1223711	0					
ANR	1224466	Identifier	pos		1223711	1					
ANR	1224467	IdentifierDeclStatement	zval * * tmp ;	475:3:20433:20443	1223711	2	True				
ANR	1224468	IdentifierDecl	* * tmp		1223711	0					
ANR	1224469	IdentifierDeclType	zval * *		1223711	0					
ANR	1224470	Identifier	tmp		1223711	1					
ANR	1224471	IdentifierDeclStatement	char * type_name = NULL ;	476:3:20448:20470	1223711	3	True				
ANR	1224472	IdentifierDecl	* type_name = NULL		1223711	0					
ANR	1224473	IdentifierDeclType	char *		1223711	0					
ANR	1224474	Identifier	type_name		1223711	1					
ANR	1224475	AssignmentExpression	* type_name = NULL		1223711	2		=			
ANR	1224476	Identifier	NULL		1223711	0					
ANR	1224477	Identifier	NULL		1223711	1					
ANR	1224478	IdentifierDeclStatement	uint type_len ;	477:3:20475:20488	1223711	4	True				
ANR	1224479	IdentifierDecl	type_len		1223711	0					
ANR	1224480	IdentifierDeclType	uint		1223711	0					
ANR	1224481	Identifier	type_len		1223711	1					
ANR	1224482	IdentifierDeclStatement	ulong idx ;	478:3:20493:20502	1223711	5	True				
ANR	1224483	IdentifierDecl	idx		1223711	0					
ANR	1224484	IdentifierDeclType	ulong		1223711	0					
ANR	1224485	Identifier	idx		1223711	1					
ANR	1224486	ForStatement	"for ( zend_hash_internal_pointer_reset_ex ( SOAP_GLOBAL ( class_map ) , & pos ) ; zend_hash_get_current_data_ex ( SOAP_GLOBAL ( class_map ) , ( void * * ) & tmp , & pos ) == SUCCESS ; zend_hash_move_forward_ex ( SOAP_GLOBAL ( class_map ) , & pos ) )"		1223711	6					
ANR	1224487	ForInit	"zend_hash_internal_pointer_reset_ex ( SOAP_GLOBAL ( class_map ) , & pos ) ;"	480:8:20513:20578	1223711	0	True				
ANR	1224488	CallExpression	"zend_hash_internal_pointer_reset_ex ( SOAP_GLOBAL ( class_map ) , & pos )"		1223711	0					
ANR	1224489	Callee	zend_hash_internal_pointer_reset_ex		1223711	0					
ANR	1224490	Identifier	zend_hash_internal_pointer_reset_ex		1223711	0					
ANR	1224491	ArgumentList	SOAP_GLOBAL ( class_map )		1223711	1					
ANR	1224492	Argument	SOAP_GLOBAL ( class_map )		1223711	0					
ANR	1224493	CallExpression	SOAP_GLOBAL ( class_map )		1223711	0					
ANR	1224494	Callee	SOAP_GLOBAL		1223711	0					
ANR	1224495	Identifier	SOAP_GLOBAL		1223711	0					
ANR	1224496	ArgumentList	class_map		1223711	1					
ANR	1224497	Argument	class_map		1223711	0					
ANR	1224498	Identifier	class_map		1223711	0					
ANR	1224499	Argument	& pos		1223711	1					
ANR	1224500	UnaryOperationExpression	& pos		1223711	0					
ANR	1224501	UnaryOperator	&		1223711	0					
ANR	1224502	Identifier	pos		1223711	1					
ANR	1224503	Condition	"zend_hash_get_current_data_ex ( SOAP_GLOBAL ( class_map ) , ( void * * ) & tmp , & pos ) == SUCCESS"	481:8:20588:20673	1223711	1	True				
ANR	1224504	EqualityExpression	"zend_hash_get_current_data_ex ( SOAP_GLOBAL ( class_map ) , ( void * * ) & tmp , & pos ) == SUCCESS"		1223711	0		==			
ANR	1224505	CallExpression	"zend_hash_get_current_data_ex ( SOAP_GLOBAL ( class_map ) , ( void * * ) & tmp , & pos )"		1223711	0					
ANR	1224506	Callee	zend_hash_get_current_data_ex		1223711	0					
ANR	1224507	Identifier	zend_hash_get_current_data_ex		1223711	0					
ANR	1224508	ArgumentList	SOAP_GLOBAL ( class_map )		1223711	1					
ANR	1224509	Argument	SOAP_GLOBAL ( class_map )		1223711	0					
ANR	1224510	CallExpression	SOAP_GLOBAL ( class_map )		1223711	0					
ANR	1224511	Callee	SOAP_GLOBAL		1223711	0					
ANR	1224512	Identifier	SOAP_GLOBAL		1223711	0					
ANR	1224513	ArgumentList	class_map		1223711	1					
ANR	1224514	Argument	class_map		1223711	0					
ANR	1224515	Identifier	class_map		1223711	0					
ANR	1224516	Argument	( void * * ) & tmp		1223711	1					
ANR	1224517	CastExpression	( void * * ) & tmp		1223711	0					
ANR	1224518	CastTarget	void * *		1223711	0					
ANR	1224519	UnaryOperationExpression	& tmp		1223711	1					
ANR	1224520	UnaryOperator	&		1223711	0					
ANR	1224521	Identifier	tmp		1223711	1					
ANR	1224522	Argument	& pos		1223711	2					
ANR	1224523	UnaryOperationExpression	& pos		1223711	0					
ANR	1224524	UnaryOperator	&		1223711	0					
ANR	1224525	Identifier	pos		1223711	1					
ANR	1224526	Identifier	SUCCESS		1223711	1					
ANR	1224527	CallExpression	"zend_hash_move_forward_ex ( SOAP_GLOBAL ( class_map ) , & pos )"	482:8:20684:20738	1223711	2	True				
ANR	1224528	Callee	zend_hash_move_forward_ex		1223711	0					
ANR	1224529	Identifier	zend_hash_move_forward_ex		1223711	0					
ANR	1224530	ArgumentList	SOAP_GLOBAL ( class_map )		1223711	1					
ANR	1224531	Argument	SOAP_GLOBAL ( class_map )		1223711	0					
ANR	1224532	CallExpression	SOAP_GLOBAL ( class_map )		1223711	0					
ANR	1224533	Callee	SOAP_GLOBAL		1223711	0					
ANR	1224534	Identifier	SOAP_GLOBAL		1223711	0					
ANR	1224535	ArgumentList	class_map		1223711	1					
ANR	1224536	Argument	class_map		1223711	0					
ANR	1224537	Identifier	class_map		1223711	0					
ANR	1224538	Argument	& pos		1223711	1					
ANR	1224539	UnaryOperationExpression	& pos		1223711	0					
ANR	1224540	UnaryOperator	&		1223711	0					
ANR	1224541	Identifier	pos		1223711	1					
ANR	1224542	CompoundStatement		90:65:3216:3216	1223711	3					
ANR	1224543	IfStatement	"if ( Z_TYPE_PP ( tmp ) == IS_STRING && ce -> name_length == Z_STRLEN_PP ( tmp ) && zend_binary_strncasecmp ( ce -> name , ce -> name_length , Z_STRVAL_PP ( tmp ) , ce -> name_length , ce -> name_length ) == 0 && zend_hash_get_current_key_ex ( SOAP_GLOBAL ( class_map ) , & type_name , & type_len , & idx , 0 , & pos ) == HASH_KEY_IS_STRING )"		1223711	0					
ANR	1224544	Condition	"Z_TYPE_PP ( tmp ) == IS_STRING && ce -> name_length == Z_STRLEN_PP ( tmp ) && zend_binary_strncasecmp ( ce -> name , ce -> name_length , Z_STRVAL_PP ( tmp ) , ce -> name_length , ce -> name_length ) == 0 && zend_hash_get_current_key_ex ( SOAP_GLOBAL ( class_map ) , & type_name , & type_len , & idx , 0 , & pos ) == HASH_KEY_IS_STRING"	483:8:20751:21067	1223711	0	True				
ANR	1224545	AndExpression	"Z_TYPE_PP ( tmp ) == IS_STRING && ce -> name_length == Z_STRLEN_PP ( tmp ) && zend_binary_strncasecmp ( ce -> name , ce -> name_length , Z_STRVAL_PP ( tmp ) , ce -> name_length , ce -> name_length ) == 0 && zend_hash_get_current_key_ex ( SOAP_GLOBAL ( class_map ) , & type_name , & type_len , & idx , 0 , & pos ) == HASH_KEY_IS_STRING"		1223711	0		&&			
ANR	1224546	EqualityExpression	Z_TYPE_PP ( tmp ) == IS_STRING		1223711	0		==			
ANR	1224547	CallExpression	Z_TYPE_PP ( tmp )		1223711	0					
ANR	1224548	Callee	Z_TYPE_PP		1223711	0					
ANR	1224549	Identifier	Z_TYPE_PP		1223711	0					
ANR	1224550	ArgumentList	tmp		1223711	1					
ANR	1224551	Argument	tmp		1223711	0					
ANR	1224552	Identifier	tmp		1223711	0					
ANR	1224553	Identifier	IS_STRING		1223711	1					
ANR	1224554	AndExpression	"ce -> name_length == Z_STRLEN_PP ( tmp ) && zend_binary_strncasecmp ( ce -> name , ce -> name_length , Z_STRVAL_PP ( tmp ) , ce -> name_length , ce -> name_length ) == 0 && zend_hash_get_current_key_ex ( SOAP_GLOBAL ( class_map ) , & type_name , & type_len , & idx , 0 , & pos ) == HASH_KEY_IS_STRING"		1223711	1		&&			
ANR	1224555	EqualityExpression	ce -> name_length == Z_STRLEN_PP ( tmp )		1223711	0		==			
ANR	1224556	PtrMemberAccess	ce -> name_length		1223711	0					
ANR	1224557	Identifier	ce		1223711	0					
ANR	1224558	Identifier	name_length		1223711	1					
ANR	1224559	CallExpression	Z_STRLEN_PP ( tmp )		1223711	1					
ANR	1224560	Callee	Z_STRLEN_PP		1223711	0					
ANR	1224561	Identifier	Z_STRLEN_PP		1223711	0					
ANR	1224562	ArgumentList	tmp		1223711	1					
ANR	1224563	Argument	tmp		1223711	0					
ANR	1224564	Identifier	tmp		1223711	0					
ANR	1224565	AndExpression	"zend_binary_strncasecmp ( ce -> name , ce -> name_length , Z_STRVAL_PP ( tmp ) , ce -> name_length , ce -> name_length ) == 0 && zend_hash_get_current_key_ex ( SOAP_GLOBAL ( class_map ) , & type_name , & type_len , & idx , 0 , & pos ) == HASH_KEY_IS_STRING"		1223711	1		&&			
ANR	1224566	EqualityExpression	"zend_binary_strncasecmp ( ce -> name , ce -> name_length , Z_STRVAL_PP ( tmp ) , ce -> name_length , ce -> name_length ) == 0"		1223711	0		==			
ANR	1224567	CallExpression	"zend_binary_strncasecmp ( ce -> name , ce -> name_length , Z_STRVAL_PP ( tmp ) , ce -> name_length , ce -> name_length )"		1223711	0					
ANR	1224568	Callee	zend_binary_strncasecmp		1223711	0					
ANR	1224569	Identifier	zend_binary_strncasecmp		1223711	0					
ANR	1224570	ArgumentList	ce -> name		1223711	1					
ANR	1224571	Argument	ce -> name		1223711	0					
ANR	1224572	PtrMemberAccess	ce -> name		1223711	0					
ANR	1224573	Identifier	ce		1223711	0					
ANR	1224574	Identifier	name		1223711	1					
ANR	1224575	Argument	ce -> name_length		1223711	1					
ANR	1224576	PtrMemberAccess	ce -> name_length		1223711	0					
ANR	1224577	Identifier	ce		1223711	0					
ANR	1224578	Identifier	name_length		1223711	1					
ANR	1224579	Argument	Z_STRVAL_PP ( tmp )		1223711	2					
ANR	1224580	CallExpression	Z_STRVAL_PP ( tmp )		1223711	0					
ANR	1224581	Callee	Z_STRVAL_PP		1223711	0					
ANR	1224582	Identifier	Z_STRVAL_PP		1223711	0					
ANR	1224583	ArgumentList	tmp		1223711	1					
ANR	1224584	Argument	tmp		1223711	0					
ANR	1224585	Identifier	tmp		1223711	0					
ANR	1224586	Argument	ce -> name_length		1223711	3					
ANR	1224587	PtrMemberAccess	ce -> name_length		1223711	0					
ANR	1224588	Identifier	ce		1223711	0					
ANR	1224589	Identifier	name_length		1223711	1					
ANR	1224590	Argument	ce -> name_length		1223711	4					
ANR	1224591	PtrMemberAccess	ce -> name_length		1223711	0					
ANR	1224592	Identifier	ce		1223711	0					
ANR	1224593	Identifier	name_length		1223711	1					
ANR	1224594	PrimaryExpression	0		1223711	1					
ANR	1224595	EqualityExpression	"zend_hash_get_current_key_ex ( SOAP_GLOBAL ( class_map ) , & type_name , & type_len , & idx , 0 , & pos ) == HASH_KEY_IS_STRING"		1223711	1		==			
ANR	1224596	CallExpression	"zend_hash_get_current_key_ex ( SOAP_GLOBAL ( class_map ) , & type_name , & type_len , & idx , 0 , & pos )"		1223711	0					
ANR	1224597	Callee	zend_hash_get_current_key_ex		1223711	0					
ANR	1224598	Identifier	zend_hash_get_current_key_ex		1223711	0					
ANR	1224599	ArgumentList	SOAP_GLOBAL ( class_map )		1223711	1					
ANR	1224600	Argument	SOAP_GLOBAL ( class_map )		1223711	0					
ANR	1224601	CallExpression	SOAP_GLOBAL ( class_map )		1223711	0					
ANR	1224602	Callee	SOAP_GLOBAL		1223711	0					
ANR	1224603	Identifier	SOAP_GLOBAL		1223711	0					
ANR	1224604	ArgumentList	class_map		1223711	1					
ANR	1224605	Argument	class_map		1223711	0					
ANR	1224606	Identifier	class_map		1223711	0					
ANR	1224607	Argument	& type_name		1223711	1					
ANR	1224608	UnaryOperationExpression	& type_name		1223711	0					
ANR	1224609	UnaryOperator	&		1223711	0					
ANR	1224610	Identifier	type_name		1223711	1					
ANR	1224611	Argument	& type_len		1223711	2					
ANR	1224612	UnaryOperationExpression	& type_len		1223711	0					
ANR	1224613	UnaryOperator	&		1223711	0					
ANR	1224614	Identifier	type_len		1223711	1					
ANR	1224615	Argument	& idx		1223711	3					
ANR	1224616	UnaryOperationExpression	& idx		1223711	0					
ANR	1224617	UnaryOperator	&		1223711	0					
ANR	1224618	Identifier	idx		1223711	1					
ANR	1224619	Argument	0		1223711	4					
ANR	1224620	PrimaryExpression	0		1223711	0					
ANR	1224621	Argument	& pos		1223711	5					
ANR	1224622	UnaryOperationExpression	& pos		1223711	0					
ANR	1224623	UnaryOperator	&		1223711	0					
ANR	1224624	Identifier	pos		1223711	1					
ANR	1224625	Identifier	HASH_KEY_IS_STRING		1223711	1					
ANR	1224626	CompoundStatement		97:5:3593:3613	1223711	1					
ANR	1224627	IdentifierDeclStatement	encodePtr enc = NULL ;	489:5:21118:21138	1223711	0	True				
ANR	1224628	IdentifierDecl	enc = NULL		1223711	0					
ANR	1224629	IdentifierDeclType	encodePtr		1223711	0					
ANR	1224630	Identifier	enc		1223711	1					
ANR	1224631	AssignmentExpression	enc = NULL		1223711	2		=			
ANR	1224632	Identifier	NULL		1223711	0					
ANR	1224633	Identifier	NULL		1223711	1					
ANR	1224634	IfStatement	if ( SOAP_GLOBAL ( sdl ) )		1223711	1					
ANR	1224635	Condition	SOAP_GLOBAL ( sdl )	490:9:21149:21164	1223711	0	True				
ANR	1224636	CallExpression	SOAP_GLOBAL ( sdl )		1223711	0					
ANR	1224637	Callee	SOAP_GLOBAL		1223711	0					
ANR	1224638	Identifier	SOAP_GLOBAL		1223711	0					
ANR	1224639	ArgumentList	sdl		1223711	1					
ANR	1224640	Argument	sdl		1223711	0					
ANR	1224641	Identifier	sdl		1223711	0					
ANR	1224642	CompoundStatement		98:27:3642:3642	1223711	1					
ANR	1224643	ExpressionStatement	"enc = get_encoder ( SOAP_GLOBAL ( sdl ) , SOAP_GLOBAL ( sdl ) -> target_ns , type_name )"	491:6:21175:21250	1223711	0	True				
ANR	1224644	AssignmentExpression	"enc = get_encoder ( SOAP_GLOBAL ( sdl ) , SOAP_GLOBAL ( sdl ) -> target_ns , type_name )"		1223711	0		=			
ANR	1224645	Identifier	enc		1223711	0					
ANR	1224646	CallExpression	"get_encoder ( SOAP_GLOBAL ( sdl ) , SOAP_GLOBAL ( sdl ) -> target_ns , type_name )"		1223711	1					
ANR	1224647	Callee	get_encoder		1223711	0					
ANR	1224648	Identifier	get_encoder		1223711	0					
ANR	1224649	ArgumentList	SOAP_GLOBAL ( sdl )		1223711	1					
ANR	1224650	Argument	SOAP_GLOBAL ( sdl )		1223711	0					
ANR	1224651	CallExpression	SOAP_GLOBAL ( sdl )		1223711	0					
ANR	1224652	Callee	SOAP_GLOBAL		1223711	0					
ANR	1224653	Identifier	SOAP_GLOBAL		1223711	0					
ANR	1224654	ArgumentList	sdl		1223711	1					
ANR	1224655	Argument	sdl		1223711	0					
ANR	1224656	Identifier	sdl		1223711	0					
ANR	1224657	Argument	SOAP_GLOBAL ( sdl ) -> target_ns		1223711	1					
ANR	1224658	PtrMemberAccess	SOAP_GLOBAL ( sdl ) -> target_ns		1223711	0					
ANR	1224659	CallExpression	SOAP_GLOBAL ( sdl )		1223711	0					
ANR	1224660	Callee	SOAP_GLOBAL		1223711	0					
ANR	1224661	Identifier	SOAP_GLOBAL		1223711	0					
ANR	1224662	ArgumentList	sdl		1223711	1					
ANR	1224663	Argument	sdl		1223711	0					
ANR	1224664	Identifier	sdl		1223711	0					
ANR	1224665	Identifier	target_ns		1223711	1					
ANR	1224666	Argument	type_name		1223711	2					
ANR	1224667	Identifier	type_name		1223711	0					
ANR	1224668	IfStatement	if ( ! enc )		1223711	1					
ANR	1224669	Condition	! enc	492:10:21262:21265	1223711	0	True				
ANR	1224670	UnaryOperationExpression	! enc		1223711	0					
ANR	1224671	UnaryOperator	!		1223711	0					
ANR	1224672	Identifier	enc		1223711	1					
ANR	1224673	CompoundStatement		100:16:3743:3743	1223711	1					
ANR	1224674	ExpressionStatement	"enc = find_encoder_by_type_name ( SOAP_GLOBAL ( sdl ) , type_name )"	493:7:21277:21337	1223711	0	True				
ANR	1224675	AssignmentExpression	"enc = find_encoder_by_type_name ( SOAP_GLOBAL ( sdl ) , type_name )"		1223711	0		=			
ANR	1224676	Identifier	enc		1223711	0					
ANR	1224677	CallExpression	"find_encoder_by_type_name ( SOAP_GLOBAL ( sdl ) , type_name )"		1223711	1					
ANR	1224678	Callee	find_encoder_by_type_name		1223711	0					
ANR	1224679	Identifier	find_encoder_by_type_name		1223711	0					
ANR	1224680	ArgumentList	SOAP_GLOBAL ( sdl )		1223711	1					
ANR	1224681	Argument	SOAP_GLOBAL ( sdl )		1223711	0					
ANR	1224682	CallExpression	SOAP_GLOBAL ( sdl )		1223711	0					
ANR	1224683	Callee	SOAP_GLOBAL		1223711	0					
ANR	1224684	Identifier	SOAP_GLOBAL		1223711	0					
ANR	1224685	ArgumentList	sdl		1223711	1					
ANR	1224686	Argument	sdl		1223711	0					
ANR	1224687	Identifier	sdl		1223711	0					
ANR	1224688	Argument	type_name		1223711	1					
ANR	1224689	Identifier	type_name		1223711	0					
ANR	1224690	IfStatement	if ( enc )		1223711	2					
ANR	1224691	Condition	enc	496:9:21363:21365	1223711	0	True				
ANR	1224692	Identifier	enc		1223711	0					
ANR	1224693	CompoundStatement		104:14:3843:3843	1223711	1					
ANR	1224694	IfStatement	if ( encode != enc && style == SOAP_LITERAL )		1223711	0					
ANR	1224695	Condition	encode != enc && style == SOAP_LITERAL	497:10:21380:21417	1223711	0	True				
ANR	1224696	AndExpression	encode != enc && style == SOAP_LITERAL		1223711	0		&&			
ANR	1224697	EqualityExpression	encode != enc		1223711	0		!=			
ANR	1224698	Identifier	encode		1223711	0					
ANR	1224699	Identifier	enc		1223711	1					
ANR	1224700	EqualityExpression	style == SOAP_LITERAL		1223711	1		==			
ANR	1224701	Identifier	style		1223711	0					
ANR	1224702	Identifier	SOAP_LITERAL		1223711	1					
ANR	1224703	CompoundStatement		105:50:3895:3895	1223711	1					
ANR	1224704	ExpressionStatement	add_type = 1	498:7:21429:21441	1223711	0	True				
ANR	1224705	AssignmentExpression	add_type = 1		1223711	0		=			
ANR	1224706	Identifier	add_type		1223711	0					
ANR	1224707	PrimaryExpression	1		1223711	1					
ANR	1224708	ExpressionStatement	encode = enc	500:6:21467:21479	1223711	1	True				
ANR	1224709	AssignmentExpression	encode = enc		1223711	0		=			
ANR	1224710	Identifier	encode		1223711	0					
ANR	1224711	Identifier	enc		1223711	1					
ANR	1224712	BreakStatement	break ;	502:5:21493:21498	1223711	3	True				
ANR	1224713	IfStatement	if ( encode == NULL )		1223711	1					
ANR	1224714	Condition	encode == NULL	507:6:21522:21535	1223711	0	True				
ANR	1224715	EqualityExpression	encode == NULL		1223711	0		==			
ANR	1224716	Identifier	encode		1223711	0					
ANR	1224717	Identifier	NULL		1223711	1					
ANR	1224718	CompoundStatement		115:22:4013:4013	1223711	1					
ANR	1224719	ExpressionStatement	encode = get_conversion ( UNKNOWN_TYPE )	508:3:21543:21580	1223711	0	True				
ANR	1224720	AssignmentExpression	encode = get_conversion ( UNKNOWN_TYPE )		1223711	0		=			
ANR	1224721	Identifier	encode		1223711	0					
ANR	1224722	CallExpression	get_conversion ( UNKNOWN_TYPE )		1223711	1					
ANR	1224723	Callee	get_conversion		1223711	0					
ANR	1224724	Identifier	get_conversion		1223711	0					
ANR	1224725	ArgumentList	UNKNOWN_TYPE		1223711	1					
ANR	1224726	Argument	UNKNOWN_TYPE		1223711	0					
ANR	1224727	Identifier	UNKNOWN_TYPE		1223711	0					
ANR	1224728	IfStatement	if ( SOAP_GLOBAL ( typemap ) && encode -> details . type_str )		1223711	2					
ANR	1224729	Condition	SOAP_GLOBAL ( typemap ) && encode -> details . type_str	510:6:21592:21639	1223711	0	True				
ANR	1224730	AndExpression	SOAP_GLOBAL ( typemap ) && encode -> details . type_str		1223711	0		&&			
ANR	1224731	CallExpression	SOAP_GLOBAL ( typemap )		1223711	0					
ANR	1224732	Callee	SOAP_GLOBAL		1223711	0					
ANR	1224733	Identifier	SOAP_GLOBAL		1223711	0					
ANR	1224734	ArgumentList	typemap		1223711	1					
ANR	1224735	Argument	typemap		1223711	0					
ANR	1224736	Identifier	typemap		1223711	0					
ANR	1224737	MemberAccess	encode -> details . type_str		1223711	1					
ANR	1224738	PtrMemberAccess	encode -> details		1223711	0					
ANR	1224739	Identifier	encode		1223711	0					
ANR	1224740	Identifier	details		1223711	1					
ANR	1224741	Identifier	type_str		1223711	1					
ANR	1224742	CompoundStatement		120:3:4148:4166	1223711	1					
ANR	1224743	IdentifierDeclStatement	smart_str nscat = { 0 } ;	511:3:21647:21668	1223711	0	True				
ANR	1224744	IdentifierDecl	nscat = { 0 }		1223711	0					
ANR	1224745	IdentifierDeclType	smart_str		1223711	0					
ANR	1224746	Identifier	nscat		1223711	1					
ANR	1224747	AssignmentExpression	nscat = { 0 }		1223711	2		=			
ANR	1224748	Identifier	nscat		1223711	0					
ANR	1224749	InitializerList	0		1223711	1					
ANR	1224750	PrimaryExpression	0		1223711	0					
ANR	1224751	IdentifierDeclStatement	encodePtr * new_enc ;	512:3:21673:21691	1223711	1	True				
ANR	1224752	IdentifierDecl	* new_enc		1223711	0					
ANR	1224753	IdentifierDeclType	encodePtr *		1223711	0					
ANR	1224754	Identifier	new_enc		1223711	1					
ANR	1224755	IfStatement	if ( encode -> details . ns )		1223711	2					
ANR	1224756	Condition	encode -> details . ns	514:7:21701:21718	1223711	0	True				
ANR	1224757	MemberAccess	encode -> details . ns		1223711	0					
ANR	1224758	PtrMemberAccess	encode -> details		1223711	0					
ANR	1224759	Identifier	encode		1223711	0					
ANR	1224760	Identifier	details		1223711	1					
ANR	1224761	Identifier	ns		1223711	1					
ANR	1224762	CompoundStatement		122:27:4196:4196	1223711	1					
ANR	1224763	ExpressionStatement	"smart_str_appends ( & nscat , encode -> details . ns )"	515:4:21727:21772	1223711	0	True				
ANR	1224764	CallExpression	"smart_str_appends ( & nscat , encode -> details . ns )"		1223711	0					
ANR	1224765	Callee	smart_str_appends		1223711	0					
ANR	1224766	Identifier	smart_str_appends		1223711	0					
ANR	1224767	ArgumentList	& nscat		1223711	1					
ANR	1224768	Argument	& nscat		1223711	0					
ANR	1224769	UnaryOperationExpression	& nscat		1223711	0					
ANR	1224770	UnaryOperator	&		1223711	0					
ANR	1224771	Identifier	nscat		1223711	1					
ANR	1224772	Argument	encode -> details . ns		1223711	1					
ANR	1224773	MemberAccess	encode -> details . ns		1223711	0					
ANR	1224774	PtrMemberAccess	encode -> details		1223711	0					
ANR	1224775	Identifier	encode		1223711	0					
ANR	1224776	Identifier	details		1223711	1					
ANR	1224777	Identifier	ns		1223711	1					
ANR	1224778	ExpressionStatement	"smart_str_appendc ( & nscat , ':' )"	516:4:21778:21808	1223711	1	True				
ANR	1224779	CallExpression	"smart_str_appendc ( & nscat , ':' )"		1223711	0					
ANR	1224780	Callee	smart_str_appendc		1223711	0					
ANR	1224781	Identifier	smart_str_appendc		1223711	0					
ANR	1224782	ArgumentList	& nscat		1223711	1					
ANR	1224783	Argument	& nscat		1223711	0					
ANR	1224784	UnaryOperationExpression	& nscat		1223711	0					
ANR	1224785	UnaryOperator	&		1223711	0					
ANR	1224786	Identifier	nscat		1223711	1					
ANR	1224787	Argument	':'		1223711	1					
ANR	1224788	PrimaryExpression	':'		1223711	0					
ANR	1224789	ExpressionStatement	"smart_str_appends ( & nscat , encode -> details . type_str )"	518:3:21818:21869	1223711	3	True				
ANR	1224790	CallExpression	"smart_str_appends ( & nscat , encode -> details . type_str )"		1223711	0					
ANR	1224791	Callee	smart_str_appends		1223711	0					
ANR	1224792	Identifier	smart_str_appends		1223711	0					
ANR	1224793	ArgumentList	& nscat		1223711	1					
ANR	1224794	Argument	& nscat		1223711	0					
ANR	1224795	UnaryOperationExpression	& nscat		1223711	0					
ANR	1224796	UnaryOperator	&		1223711	0					
ANR	1224797	Identifier	nscat		1223711	1					
ANR	1224798	Argument	encode -> details . type_str		1223711	1					
ANR	1224799	MemberAccess	encode -> details . type_str		1223711	0					
ANR	1224800	PtrMemberAccess	encode -> details		1223711	0					
ANR	1224801	Identifier	encode		1223711	0					
ANR	1224802	Identifier	details		1223711	1					
ANR	1224803	Identifier	type_str		1223711	1					
ANR	1224804	ExpressionStatement	smart_str_0 ( & nscat )	519:3:21874:21893	1223711	4	True				
ANR	1224805	CallExpression	smart_str_0 ( & nscat )		1223711	0					
ANR	1224806	Callee	smart_str_0		1223711	0					
ANR	1224807	Identifier	smart_str_0		1223711	0					
ANR	1224808	ArgumentList	& nscat		1223711	1					
ANR	1224809	Argument	& nscat		1223711	0					
ANR	1224810	UnaryOperationExpression	& nscat		1223711	0					
ANR	1224811	UnaryOperator	&		1223711	0					
ANR	1224812	Identifier	nscat		1223711	1					
ANR	1224813	IfStatement	"if ( zend_hash_find ( SOAP_GLOBAL ( typemap ) , nscat . c , nscat . len + 1 , ( void * * ) & new_enc ) == SUCCESS )"		1223711	5					
ANR	1224814	Condition	"zend_hash_find ( SOAP_GLOBAL ( typemap ) , nscat . c , nscat . len + 1 , ( void * * ) & new_enc ) == SUCCESS"	520:7:21902:21990	1223711	0	True				
ANR	1224815	EqualityExpression	"zend_hash_find ( SOAP_GLOBAL ( typemap ) , nscat . c , nscat . len + 1 , ( void * * ) & new_enc ) == SUCCESS"		1223711	0		==			
ANR	1224816	CallExpression	"zend_hash_find ( SOAP_GLOBAL ( typemap ) , nscat . c , nscat . len + 1 , ( void * * ) & new_enc )"		1223711	0					
ANR	1224817	Callee	zend_hash_find		1223711	0					
ANR	1224818	Identifier	zend_hash_find		1223711	0					
ANR	1224819	ArgumentList	SOAP_GLOBAL ( typemap )		1223711	1					
ANR	1224820	Argument	SOAP_GLOBAL ( typemap )		1223711	0					
ANR	1224821	CallExpression	SOAP_GLOBAL ( typemap )		1223711	0					
ANR	1224822	Callee	SOAP_GLOBAL		1223711	0					
ANR	1224823	Identifier	SOAP_GLOBAL		1223711	0					
ANR	1224824	ArgumentList	typemap		1223711	1					
ANR	1224825	Argument	typemap		1223711	0					
ANR	1224826	Identifier	typemap		1223711	0					
ANR	1224827	Argument	nscat . c		1223711	1					
ANR	1224828	MemberAccess	nscat . c		1223711	0					
ANR	1224829	Identifier	nscat		1223711	0					
ANR	1224830	Identifier	c		1223711	1					
ANR	1224831	Argument	nscat . len + 1		1223711	2					
ANR	1224832	AdditiveExpression	nscat . len + 1		1223711	0		+			
ANR	1224833	MemberAccess	nscat . len		1223711	0					
ANR	1224834	Identifier	nscat		1223711	0					
ANR	1224835	Identifier	len		1223711	1					
ANR	1224836	PrimaryExpression	1		1223711	1					
ANR	1224837	Argument	( void * * ) & new_enc		1223711	3					
ANR	1224838	CastExpression	( void * * ) & new_enc		1223711	0					
ANR	1224839	CastTarget	void * *		1223711	0					
ANR	1224840	UnaryOperationExpression	& new_enc		1223711	1					
ANR	1224841	UnaryOperator	&		1223711	0					
ANR	1224842	Identifier	new_enc		1223711	1					
ANR	1224843	Identifier	SUCCESS		1223711	1					
ANR	1224844	CompoundStatement		128:98:4468:4468	1223711	1					
ANR	1224845	ExpressionStatement	encode = * new_enc	521:4:21999:22016	1223711	0	True				
ANR	1224846	AssignmentExpression	encode = * new_enc		1223711	0		=			
ANR	1224847	Identifier	encode		1223711	0					
ANR	1224848	UnaryOperationExpression	* new_enc		1223711	1					
ANR	1224849	UnaryOperator	*		1223711	0					
ANR	1224850	Identifier	new_enc		1223711	1					
ANR	1224851	ExpressionStatement	smart_str_free ( & nscat )	523:3:22026:22048	1223711	6	True				
ANR	1224852	CallExpression	smart_str_free ( & nscat )		1223711	0					
ANR	1224853	Callee	smart_str_free		1223711	0					
ANR	1224854	Identifier	smart_str_free		1223711	0					
ANR	1224855	ArgumentList	& nscat		1223711	1					
ANR	1224856	Argument	& nscat		1223711	0					
ANR	1224857	UnaryOperationExpression	& nscat		1223711	0					
ANR	1224858	UnaryOperator	&		1223711	0					
ANR	1224859	Identifier	nscat		1223711	1					
ANR	1224860	IfStatement	if ( encode -> to_xml )		1223711	3					
ANR	1224861	Condition	encode -> to_xml	525:6:22063:22076	1223711	0	True				
ANR	1224862	PtrMemberAccess	encode -> to_xml		1223711	0					
ANR	1224863	Identifier	encode		1223711	0					
ANR	1224864	Identifier	to_xml		1223711	1					
ANR	1224865	CompoundStatement		133:22:4554:4554	1223711	1					
ANR	1224866	Statement	node	526:3:22084:22087	1223711	0	True				
ANR	1224867	Statement	=	526:8:22089:22089	1223711	1	True				
ANR	1224868	Statement	encode	526:10:22091:22096	1223711	2	True				
ANR	1224869	Statement	->	526:16:22097:22098	1223711	3	True				
ANR	1224870	Statement	to_xml	526:18:22099:22104	1223711	4	True				
ANR	1224871	Statement	(	526:24:22105:22105	1223711	5	True				
ANR	1224872	Statement	&	526:25:22106:22106	1223711	6	True				
ANR	1224873	Statement	encode	526:26:22107:22112	1223711	7	True				
ANR	1224874	Statement	->	526:32:22113:22114	1223711	8	True				
ANR	1224875	Statement	details	526:34:22115:22121	1223711	9	True				
ANR	1224876	Statement	","	526:41:22122:22122	1223711	10	True				
ANR	1224877	Statement	data	526:43:22124:22127	1223711	11	True				
ANR	1224878	Statement	","	526:47:22128:22128	1223711	12	True				
ANR	1224879	Statement	style	526:49:22130:22134	1223711	13	True				
ANR	1224880	Statement	","	526:54:22135:22135	1223711	14	True				
ANR	1224881	Statement	parent	526:56:22137:22142	1223711	15	True				
ANR	1224882	Statement	TSRMLS_CC	526:63:22144:22152	1223711	16	True				
ANR	1224883	Statement	)	526:72:22153:22153	1223711	17	True				
ANR	1224884	ExpressionStatement		526:73:22154:22154	1223711	18	True				
ANR	1224885	IfStatement	if ( add_type )		1223711	19					
ANR	1224886	Condition	add_type	527:7:22163:22170	1223711	0	True				
ANR	1224887	Identifier	add_type		1223711	0					
ANR	1224888	CompoundStatement		135:17:4648:4648	1223711	1					
ANR	1224889	ExpressionStatement	"set_ns_and_type ( node , & encode -> details )"	528:4:22179:22218	1223711	0	True				
ANR	1224890	CallExpression	"set_ns_and_type ( node , & encode -> details )"		1223711	0					
ANR	1224891	Callee	set_ns_and_type		1223711	0					
ANR	1224892	Identifier	set_ns_and_type		1223711	0					
ANR	1224893	ArgumentList	node		1223711	1					
ANR	1224894	Argument	node		1223711	0					
ANR	1224895	Identifier	node		1223711	0					
ANR	1224896	Argument	& encode -> details		1223711	1					
ANR	1224897	UnaryOperationExpression	& encode -> details		1223711	0					
ANR	1224898	UnaryOperator	&		1223711	0					
ANR	1224899	PtrMemberAccess	encode -> details		1223711	1					
ANR	1224900	Identifier	encode		1223711	0					
ANR	1224901	Identifier	details		1223711	1					
ANR	1224902	ReturnStatement	return node ;	532:1:22233:22244	1223711	3	True				
ANR	1224903	Identifier	node		1223711	0					
ANR	1224904	ReturnType	static xmlNodePtr		1223711	1					
ANR	1224905	Identifier	master_to_xml_int		1223711	2					
ANR	1224906	ParameterList	"encodePtr encode , zval * data , int style , xmlNodePtr parent , int check_class_map TSRMLS_DC"		1223711	3					
ANR	1224907	Parameter	encodePtr encode	392:36:17433:17448	1223711	0	True				
ANR	1224908	ParameterType	encodePtr		1223711	0					
ANR	1224909	Identifier	encode		1223711	1					
ANR	1224910	Parameter	zval * data	392:54:17451:17460	1223711	1	True				
ANR	1224911	ParameterType	zval *		1223711	0					
ANR	1224912	Identifier	data		1223711	1					
ANR	1224913	Parameter	int style	392:66:17463:17471	1223711	2	True				
ANR	1224914	ParameterType	int		1223711	0					
ANR	1224915	Identifier	style		1223711	1					
ANR	1224916	Parameter	xmlNodePtr parent	392:77:17474:17490	1223711	3	True				
ANR	1224917	ParameterType	xmlNodePtr		1223711	0					
ANR	1224918	Identifier	parent		1223711	1					
ANR	1224919	Parameter	int check_class_map TSRMLS_DC	392:96:17493:17521	1223711	4	True				
ANR	1224920	ParameterType	int check_class_map		1223711	0					
ANR	1224921	Identifier	TSRMLS_DC		1223711	1					
ANR	1224922	CFGEntryNode	ENTRY		1223711		True				
ANR	1224923	CFGExitNode	EXIT		1223711		True				
ANR	1224924	Symbol	encode		1223711						
ANR	1224925	Symbol	parent		1223711						
ANR	1224926	Symbol	ce -> name_length		1223711						
ANR	1224927	Symbol	type_name		1223711						
ANR	1224928	Symbol	* encode		1223711						
ANR	1224929	Symbol	data		1223711						
ANR	1224930	Symbol	& zdata		1223711						
ANR	1224931	Symbol	HASH_KEY_IS_STRING		1223711						
ANR	1224932	Symbol	get_conversion		1223711						
ANR	1224933	Symbol	* ce		1223711						
ANR	1224934	Symbol	ht		1223711						
ANR	1224935	Symbol	TSRMLS_DC		1223711						
ANR	1224936	Symbol	& ztype		1223711						
ANR	1224937	Symbol	& new_enc		1223711						
ANR	1224938	Symbol	UNKNOWN_TYPE		1223711						
ANR	1224939	Symbol	zend_hash_find		1223711						
ANR	1224940	Symbol	soap_var_class_entry		1223711						
ANR	1224941	Symbol	tmp		1223711						
ANR	1224942	Symbol	encode -> details		1223711						
ANR	1224943	Symbol	IS_STRING		1223711						
ANR	1224944	Symbol	ce -> name		1223711						
ANR	1224945	Symbol	find_encoder_by_type_name		1223711						
ANR	1224946	Symbol	encode -> details . type_str		1223711						
ANR	1224947	Symbol	NULL		1223711						
ANR	1224948	Symbol	encode -> details . ns		1223711						
ANR	1224949	Symbol	nscat . len		1223711						
ANR	1224950	Symbol	* new_enc		1223711						
ANR	1224951	Symbol	type_len		1223711						
ANR	1224952	Symbol	zend_hash_get_current_key_ex		1223711						
ANR	1224953	Symbol	SOAP_GLOBAL		1223711						
ANR	1224954	Symbol	Z_STRLEN_PP		1223711						
ANR	1224955	Symbol	* Z_OBJPROP_P		1223711						
ANR	1224956	Symbol	node		1223711						
ANR	1224957	Symbol	& encode -> details		1223711						
ANR	1224958	Symbol	nscat		1223711						
ANR	1224959	Symbol	SOAP_LITERAL		1223711						
ANR	1224960	Symbol	& zname		1223711						
ANR	1224961	Symbol	style		1223711						
ANR	1224962	Symbol	sdl		1223711						
ANR	1224963	Symbol	& tmp		1223711						
ANR	1224964	Symbol	new_enc		1223711						
ANR	1224965	Symbol	idx		1223711						
ANR	1224966	Symbol	zns		1223711						
ANR	1224967	Symbol	BAD_CAST		1223711						
ANR	1224968	Symbol	check_class_map		1223711						
ANR	1224969	Symbol	zdata		1223711						
ANR	1224970	Symbol	get_encoder_ex		1223711						
ANR	1224971	Symbol	& zstype		1223711						
ANR	1224972	Symbol	zend_hash_get_current_data_ex		1223711						
ANR	1224973	Symbol	typemap		1223711						
ANR	1224974	Symbol	zstype		1223711						
ANR	1224975	Symbol	Z_OBJPROP_P ( data ) -> nApplyCount		1223711						
ANR	1224976	Symbol	nsp		1223711						
ANR	1224977	Symbol	* SOAP_GLOBAL		1223711						
ANR	1224978	Symbol	nscat . c		1223711						
ANR	1224979	Symbol	add_type		1223711						
ANR	1224980	Symbol	Z_TYPE_PP		1223711						
ANR	1224981	Symbol	encode -> to_xml		1223711						
ANR	1224982	Symbol	& znamens		1223711						
ANR	1224983	Symbol	pos		1223711						
ANR	1224984	Symbol	IS_LONG		1223711						
ANR	1224985	Symbol	Z_OBJCE_P		1223711						
ANR	1224986	Symbol	Z_STRVAL_PP		1223711						
ANR	1224987	Symbol	ztype		1223711						
ANR	1224988	Symbol	SOAP_GLOBAL ( sdl ) -> target_ns		1223711						
ANR	1224989	Symbol	enc		1223711						
ANR	1224990	Symbol	& zns		1223711						
ANR	1224991	Symbol	ce		1223711						
ANR	1224992	Symbol	SUCCESS		1223711						
ANR	1224993	Symbol	& type_len		1223711						
ANR	1224994	Symbol	encode_add_ns		1223711						
ANR	1224995	Symbol	class_map		1223711						
ANR	1224996	Symbol	& idx		1223711						
ANR	1224997	Symbol	& type_name		1223711						
ANR	1224998	Symbol	Z_OBJPROP_P		1223711						
ANR	1224999	Symbol	Z_TYPE_P		1223711						
ANR	1225000	Symbol	zend_binary_strncasecmp		1223711						
ANR	1225001	Symbol	FAILURE		1223711						
ANR	1225002	Symbol	zname		1223711						
ANR	1225003	Symbol	Z_LVAL_P		1223711						
ANR	1225004	Symbol	* ztype		1223711						
ANR	1225005	Symbol	get_encoder		1223711						
ANR	1225006	Symbol	E_ERROR		1223711						
ANR	1225007	Symbol	SOAP_ENCODED		1223711						
ANR	1225008	Symbol	IS_OBJECT		1223711						
ANR	1225009	Symbol	& nscat		1223711						
ANR	1225010	Symbol	znamens		1223711						
ANR	1225011	Symbol	& pos		1223711						
ANR	1225012	Function	master_to_xml	535:0:22249:22415							
ANR	1225013	FunctionDef	"master_to_xml (encodePtr encode , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1225012	0					
ANR	1225014	CompoundStatement		536:0:22344:22415	1225012	0					
ANR	1225015	Statement	return	537:1:22347:22352	1225012	0	True				
ANR	1225016	Statement	master_to_xml_int	537:8:22354:22370	1225012	1	True				
ANR	1225017	Statement	(	537:25:22371:22371	1225012	2	True				
ANR	1225018	Statement	encode	537:26:22372:22377	1225012	3	True				
ANR	1225019	Statement	","	537:32:22378:22378	1225012	4	True				
ANR	1225020	Statement	data	537:34:22380:22383	1225012	5	True				
ANR	1225021	Statement	","	537:38:22384:22384	1225012	6	True				
ANR	1225022	Statement	style	537:40:22386:22390	1225012	7	True				
ANR	1225023	Statement	","	537:45:22391:22391	1225012	8	True				
ANR	1225024	Statement	parent	537:47:22393:22398	1225012	9	True				
ANR	1225025	Statement	","	537:53:22399:22399	1225012	10	True				
ANR	1225026	Statement	1	537:55:22401:22401	1225012	11	True				
ANR	1225027	Statement	TSRMLS_CC	537:57:22403:22411	1225012	12	True				
ANR	1225028	Statement	)	537:66:22412:22412	1225012	13	True				
ANR	1225029	ExpressionStatement		537:67:22413:22413	1225012	14	True				
ANR	1225030	ReturnType	xmlNodePtr		1225012	1					
ANR	1225031	Identifier	master_to_xml		1225012	2					
ANR	1225032	ParameterList	"encodePtr encode , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1225012	3					
ANR	1225033	Parameter	encodePtr encode	535:25:22274:22289	1225012	0	True				
ANR	1225034	ParameterType	encodePtr		1225012	0					
ANR	1225035	Identifier	encode		1225012	1					
ANR	1225036	Parameter	zval * data	535:43:22292:22301	1225012	1	True				
ANR	1225037	ParameterType	zval *		1225012	0					
ANR	1225038	Identifier	data		1225012	1					
ANR	1225039	Parameter	int style	535:55:22304:22312	1225012	2	True				
ANR	1225040	ParameterType	int		1225012	0					
ANR	1225041	Identifier	style		1225012	1					
ANR	1225042	Parameter	xmlNodePtr parent TSRMLS_DC	535:66:22315:22341	1225012	3	True				
ANR	1225043	ParameterType	xmlNodePtr parent		1225012	0					
ANR	1225044	Identifier	TSRMLS_DC		1225012	1					
ANR	1225045	CFGEntryNode	ENTRY		1225012		True				
ANR	1225046	CFGExitNode	EXIT		1225012		True				
ANR	1225047	Symbol	encode		1225012						
ANR	1225048	Symbol	data		1225012						
ANR	1225049	Symbol	style		1225012						
ANR	1225050	Symbol	TSRMLS_DC		1225012						
ANR	1225051	Function	master_to_zval_int	540:0:22418:23830							
ANR	1225052	FunctionDef	"master_to_zval_int (encodePtr encode , xmlNodePtr data TSRMLS_DC)"		1225051	0					
ANR	1225053	CompoundStatement		541:0:22495:23830	1225051	0					
ANR	1225054	IdentifierDeclStatement	zval * ret = NULL ;	542:1:22498:22514	1225051	0	True				
ANR	1225055	IdentifierDecl	* ret = NULL		1225051	0					
ANR	1225056	IdentifierDeclType	zval *		1225051	0					
ANR	1225057	Identifier	ret		1225051	1					
ANR	1225058	AssignmentExpression	* ret = NULL		1225051	2		=			
ANR	1225059	Identifier	NULL		1225051	0					
ANR	1225060	Identifier	NULL		1225051	1					
ANR	1225061	IfStatement	if ( SOAP_GLOBAL ( typemap ) )		1225051	1					
ANR	1225062	Condition	SOAP_GLOBAL ( typemap )	544:5:22522:22541	1225051	0	True				
ANR	1225063	CallExpression	SOAP_GLOBAL ( typemap )		1225051	0					
ANR	1225064	Callee	SOAP_GLOBAL		1225051	0					
ANR	1225065	Identifier	SOAP_GLOBAL		1225051	0					
ANR	1225066	ArgumentList	typemap		1225051	1					
ANR	1225067	Argument	typemap		1225051	0					
ANR	1225068	Identifier	typemap		1225051	0					
ANR	1225069	CompoundStatement		4:27:48:48	1225051	1					
ANR	1225070	IfStatement	if ( encode -> details . type_str )		1225051	0					
ANR	1225071	Condition	encode -> details . type_str	545:6:22552:22575	1225051	0	True				
ANR	1225072	MemberAccess	encode -> details . type_str		1225051	0					
ANR	1225073	PtrMemberAccess	encode -> details		1225051	0					
ANR	1225074	Identifier	encode		1225051	0					
ANR	1225075	Identifier	details		1225051	1					
ANR	1225076	Identifier	type_str		1225051	1					
ANR	1225077	CompoundStatement		7:3:113:131	1225051	1					
ANR	1225078	IdentifierDeclStatement	smart_str nscat = { 0 } ;	546:3:22583:22604	1225051	0	True				
ANR	1225079	IdentifierDecl	nscat = { 0 }		1225051	0					
ANR	1225080	IdentifierDeclType	smart_str		1225051	0					
ANR	1225081	Identifier	nscat		1225051	1					
ANR	1225082	AssignmentExpression	nscat = { 0 }		1225051	2		=			
ANR	1225083	Identifier	nscat		1225051	0					
ANR	1225084	InitializerList	0		1225051	1					
ANR	1225085	PrimaryExpression	0		1225051	0					
ANR	1225086	IdentifierDeclStatement	encodePtr * new_enc ;	547:3:22609:22627	1225051	1	True				
ANR	1225087	IdentifierDecl	* new_enc		1225051	0					
ANR	1225088	IdentifierDeclType	encodePtr *		1225051	0					
ANR	1225089	Identifier	new_enc		1225051	1					
ANR	1225090	IfStatement	if ( encode -> details . ns )		1225051	2					
ANR	1225091	Condition	encode -> details . ns	549:7:22637:22654	1225051	0	True				
ANR	1225092	MemberAccess	encode -> details . ns		1225051	0					
ANR	1225093	PtrMemberAccess	encode -> details		1225051	0					
ANR	1225094	Identifier	encode		1225051	0					
ANR	1225095	Identifier	details		1225051	1					
ANR	1225096	Identifier	ns		1225051	1					
ANR	1225097	CompoundStatement		9:27:161:161	1225051	1					
ANR	1225098	ExpressionStatement	"smart_str_appends ( & nscat , encode -> details . ns )"	550:4:22663:22708	1225051	0	True				
ANR	1225099	CallExpression	"smart_str_appends ( & nscat , encode -> details . ns )"		1225051	0					
ANR	1225100	Callee	smart_str_appends		1225051	0					
ANR	1225101	Identifier	smart_str_appends		1225051	0					
ANR	1225102	ArgumentList	& nscat		1225051	1					
ANR	1225103	Argument	& nscat		1225051	0					
ANR	1225104	UnaryOperationExpression	& nscat		1225051	0					
ANR	1225105	UnaryOperator	&		1225051	0					
ANR	1225106	Identifier	nscat		1225051	1					
ANR	1225107	Argument	encode -> details . ns		1225051	1					
ANR	1225108	MemberAccess	encode -> details . ns		1225051	0					
ANR	1225109	PtrMemberAccess	encode -> details		1225051	0					
ANR	1225110	Identifier	encode		1225051	0					
ANR	1225111	Identifier	details		1225051	1					
ANR	1225112	Identifier	ns		1225051	1					
ANR	1225113	ExpressionStatement	"smart_str_appendc ( & nscat , ':' )"	551:4:22714:22744	1225051	1	True				
ANR	1225114	CallExpression	"smart_str_appendc ( & nscat , ':' )"		1225051	0					
ANR	1225115	Callee	smart_str_appendc		1225051	0					
ANR	1225116	Identifier	smart_str_appendc		1225051	0					
ANR	1225117	ArgumentList	& nscat		1225051	1					
ANR	1225118	Argument	& nscat		1225051	0					
ANR	1225119	UnaryOperationExpression	& nscat		1225051	0					
ANR	1225120	UnaryOperator	&		1225051	0					
ANR	1225121	Identifier	nscat		1225051	1					
ANR	1225122	Argument	':'		1225051	1					
ANR	1225123	PrimaryExpression	':'		1225051	0					
ANR	1225124	ExpressionStatement	"smart_str_appends ( & nscat , encode -> details . type_str )"	553:3:22754:22805	1225051	3	True				
ANR	1225125	CallExpression	"smart_str_appends ( & nscat , encode -> details . type_str )"		1225051	0					
ANR	1225126	Callee	smart_str_appends		1225051	0					
ANR	1225127	Identifier	smart_str_appends		1225051	0					
ANR	1225128	ArgumentList	& nscat		1225051	1					
ANR	1225129	Argument	& nscat		1225051	0					
ANR	1225130	UnaryOperationExpression	& nscat		1225051	0					
ANR	1225131	UnaryOperator	&		1225051	0					
ANR	1225132	Identifier	nscat		1225051	1					
ANR	1225133	Argument	encode -> details . type_str		1225051	1					
ANR	1225134	MemberAccess	encode -> details . type_str		1225051	0					
ANR	1225135	PtrMemberAccess	encode -> details		1225051	0					
ANR	1225136	Identifier	encode		1225051	0					
ANR	1225137	Identifier	details		1225051	1					
ANR	1225138	Identifier	type_str		1225051	1					
ANR	1225139	ExpressionStatement	smart_str_0 ( & nscat )	554:3:22810:22829	1225051	4	True				
ANR	1225140	CallExpression	smart_str_0 ( & nscat )		1225051	0					
ANR	1225141	Callee	smart_str_0		1225051	0					
ANR	1225142	Identifier	smart_str_0		1225051	0					
ANR	1225143	ArgumentList	& nscat		1225051	1					
ANR	1225144	Argument	& nscat		1225051	0					
ANR	1225145	UnaryOperationExpression	& nscat		1225051	0					
ANR	1225146	UnaryOperator	&		1225051	0					
ANR	1225147	Identifier	nscat		1225051	1					
ANR	1225148	IfStatement	"if ( zend_hash_find ( SOAP_GLOBAL ( typemap ) , nscat . c , nscat . len + 1 , ( void * * ) & new_enc ) == SUCCESS )"		1225051	5					
ANR	1225149	Condition	"zend_hash_find ( SOAP_GLOBAL ( typemap ) , nscat . c , nscat . len + 1 , ( void * * ) & new_enc ) == SUCCESS"	555:7:22838:22926	1225051	0	True				
ANR	1225150	EqualityExpression	"zend_hash_find ( SOAP_GLOBAL ( typemap ) , nscat . c , nscat . len + 1 , ( void * * ) & new_enc ) == SUCCESS"		1225051	0		==			
ANR	1225151	CallExpression	"zend_hash_find ( SOAP_GLOBAL ( typemap ) , nscat . c , nscat . len + 1 , ( void * * ) & new_enc )"		1225051	0					
ANR	1225152	Callee	zend_hash_find		1225051	0					
ANR	1225153	Identifier	zend_hash_find		1225051	0					
ANR	1225154	ArgumentList	SOAP_GLOBAL ( typemap )		1225051	1					
ANR	1225155	Argument	SOAP_GLOBAL ( typemap )		1225051	0					
ANR	1225156	CallExpression	SOAP_GLOBAL ( typemap )		1225051	0					
ANR	1225157	Callee	SOAP_GLOBAL		1225051	0					
ANR	1225158	Identifier	SOAP_GLOBAL		1225051	0					
ANR	1225159	ArgumentList	typemap		1225051	1					
ANR	1225160	Argument	typemap		1225051	0					
ANR	1225161	Identifier	typemap		1225051	0					
ANR	1225162	Argument	nscat . c		1225051	1					
ANR	1225163	MemberAccess	nscat . c		1225051	0					
ANR	1225164	Identifier	nscat		1225051	0					
ANR	1225165	Identifier	c		1225051	1					
ANR	1225166	Argument	nscat . len + 1		1225051	2					
ANR	1225167	AdditiveExpression	nscat . len + 1		1225051	0		+			
ANR	1225168	MemberAccess	nscat . len		1225051	0					
ANR	1225169	Identifier	nscat		1225051	0					
ANR	1225170	Identifier	len		1225051	1					
ANR	1225171	PrimaryExpression	1		1225051	1					
ANR	1225172	Argument	( void * * ) & new_enc		1225051	3					
ANR	1225173	CastExpression	( void * * ) & new_enc		1225051	0					
ANR	1225174	CastTarget	void * *		1225051	0					
ANR	1225175	UnaryOperationExpression	& new_enc		1225051	1					
ANR	1225176	UnaryOperator	&		1225051	0					
ANR	1225177	Identifier	new_enc		1225051	1					
ANR	1225178	Identifier	SUCCESS		1225051	1					
ANR	1225179	CompoundStatement		15:98:433:433	1225051	1					
ANR	1225180	ExpressionStatement	encode = * new_enc	556:4:22935:22952	1225051	0	True				
ANR	1225181	AssignmentExpression	encode = * new_enc		1225051	0		=			
ANR	1225182	Identifier	encode		1225051	0					
ANR	1225183	UnaryOperationExpression	* new_enc		1225051	1					
ANR	1225184	UnaryOperator	*		1225051	0					
ANR	1225185	Identifier	new_enc		1225051	1					
ANR	1225186	ExpressionStatement	smart_str_free ( & nscat )	558:3:22962:22984	1225051	6	True				
ANR	1225187	CallExpression	smart_str_free ( & nscat )		1225051	0					
ANR	1225188	Callee	smart_str_free		1225051	0					
ANR	1225189	Identifier	smart_str_free		1225051	0					
ANR	1225190	ArgumentList	& nscat		1225051	1					
ANR	1225191	Argument	& nscat		1225051	0					
ANR	1225192	UnaryOperationExpression	& nscat		1225051	0					
ANR	1225193	UnaryOperator	&		1225051	0					
ANR	1225194	Identifier	nscat		1225051	1					
ANR	1225195	ElseStatement	else		1225051	0					
ANR	1225196	CompoundStatement		20:3:507:586	1225051	0					
ANR	1225197	IdentifierDeclStatement	"xmlAttrPtr type_attr = get_attribute_ex ( data -> properties , ""type"" , XSI_NAMESPACE ) ;"	560:3:23003:23082	1225051	0	True				
ANR	1225198	IdentifierDecl	"type_attr = get_attribute_ex ( data -> properties , ""type"" , XSI_NAMESPACE )"		1225051	0					
ANR	1225199	IdentifierDeclType	xmlAttrPtr		1225051	0					
ANR	1225200	Identifier	type_attr		1225051	1					
ANR	1225201	AssignmentExpression	"type_attr = get_attribute_ex ( data -> properties , ""type"" , XSI_NAMESPACE )"		1225051	2		=			
ANR	1225202	Identifier	type_attr		1225051	0					
ANR	1225203	CallExpression	"get_attribute_ex ( data -> properties , ""type"" , XSI_NAMESPACE )"		1225051	1					
ANR	1225204	Callee	get_attribute_ex		1225051	0					
ANR	1225205	Identifier	get_attribute_ex		1225051	0					
ANR	1225206	ArgumentList	data -> properties		1225051	1					
ANR	1225207	Argument	data -> properties		1225051	0					
ANR	1225208	PtrMemberAccess	data -> properties		1225051	0					
ANR	1225209	Identifier	data		1225051	0					
ANR	1225210	Identifier	properties		1225051	1					
ANR	1225211	Argument	"""type"""		1225051	1					
ANR	1225212	PrimaryExpression	"""type"""		1225051	0					
ANR	1225213	Argument	XSI_NAMESPACE		1225051	2					
ANR	1225214	Identifier	XSI_NAMESPACE		1225051	0					
ANR	1225215	IfStatement	if ( type_attr != NULL )		1225051	1					
ANR	1225216	Condition	type_attr != NULL	562:7:23092:23108	1225051	0	True				
ANR	1225217	EqualityExpression	type_attr != NULL		1225051	0		!=			
ANR	1225218	Identifier	type_attr		1225051	0					
ANR	1225219	Identifier	NULL		1225051	1					
ANR	1225220	CompoundStatement		26:4:688:709	1225051	1					
ANR	1225221	IdentifierDeclStatement	encodePtr * new_enc ;	563:4:23117:23135	1225051	0	True				
ANR	1225222	IdentifierDecl	* new_enc		1225051	0					
ANR	1225223	IdentifierDeclType	encodePtr *		1225051	0					
ANR	1225224	Identifier	new_enc		1225051	1					
ANR	1225225	IdentifierDeclStatement	xmlNsPtr nsptr ;	564:4:23141:23155	1225051	1	True				
ANR	1225226	IdentifierDecl	nsptr		1225051	0					
ANR	1225227	IdentifierDeclType	xmlNsPtr		1225051	0					
ANR	1225228	Identifier	nsptr		1225051	1					
ANR	1225229	IdentifierDeclStatement	"char * ns , * cptype ;"	565:4:23161:23178	1225051	2	True				
ANR	1225230	IdentifierDecl	* ns		1225051	0					
ANR	1225231	IdentifierDeclType	char *		1225051	0					
ANR	1225232	Identifier	ns		1225051	1					
ANR	1225233	IdentifierDecl	* cptype		1225051	1					
ANR	1225234	IdentifierDeclType	char *		1225051	0					
ANR	1225235	Identifier	cptype		1225051	1					
ANR	1225236	IdentifierDeclStatement	smart_str nscat = { 0 } ;	566:4:23184:23205	1225051	3	True				
ANR	1225237	IdentifierDecl	nscat = { 0 }		1225051	0					
ANR	1225238	IdentifierDeclType	smart_str		1225051	0					
ANR	1225239	Identifier	nscat		1225051	1					
ANR	1225240	AssignmentExpression	nscat = { 0 }		1225051	2		=			
ANR	1225241	Identifier	nscat		1225051	0					
ANR	1225242	InitializerList	0		1225051	1					
ANR	1225243	PrimaryExpression	0		1225051	0					
ANR	1225244	ExpressionStatement	"parse_namespace ( type_attr -> children -> content , & cptype , & ns )"	568:4:23212:23271	1225051	4	True				
ANR	1225245	CallExpression	"parse_namespace ( type_attr -> children -> content , & cptype , & ns )"		1225051	0					
ANR	1225246	Callee	parse_namespace		1225051	0					
ANR	1225247	Identifier	parse_namespace		1225051	0					
ANR	1225248	ArgumentList	type_attr -> children -> content		1225051	1					
ANR	1225249	Argument	type_attr -> children -> content		1225051	0					
ANR	1225250	PtrMemberAccess	type_attr -> children -> content		1225051	0					
ANR	1225251	PtrMemberAccess	type_attr -> children		1225051	0					
ANR	1225252	Identifier	type_attr		1225051	0					
ANR	1225253	Identifier	children		1225051	1					
ANR	1225254	Identifier	content		1225051	1					
ANR	1225255	Argument	& cptype		1225051	1					
ANR	1225256	UnaryOperationExpression	& cptype		1225051	0					
ANR	1225257	UnaryOperator	&		1225051	0					
ANR	1225258	Identifier	cptype		1225051	1					
ANR	1225259	Argument	& ns		1225051	2					
ANR	1225260	UnaryOperationExpression	& ns		1225051	0					
ANR	1225261	UnaryOperator	&		1225051	0					
ANR	1225262	Identifier	ns		1225051	1					
ANR	1225263	ExpressionStatement	"nsptr = xmlSearchNs ( data -> doc , data , BAD_CAST ( ns ) )"	569:4:23277:23327	1225051	5	True				
ANR	1225264	AssignmentExpression	"nsptr = xmlSearchNs ( data -> doc , data , BAD_CAST ( ns ) )"		1225051	0		=			
ANR	1225265	Identifier	nsptr		1225051	0					
ANR	1225266	CallExpression	"xmlSearchNs ( data -> doc , data , BAD_CAST ( ns ) )"		1225051	1					
ANR	1225267	Callee	xmlSearchNs		1225051	0					
ANR	1225268	Identifier	xmlSearchNs		1225051	0					
ANR	1225269	ArgumentList	data -> doc		1225051	1					
ANR	1225270	Argument	data -> doc		1225051	0					
ANR	1225271	PtrMemberAccess	data -> doc		1225051	0					
ANR	1225272	Identifier	data		1225051	0					
ANR	1225273	Identifier	doc		1225051	1					
ANR	1225274	Argument	data		1225051	1					
ANR	1225275	Identifier	data		1225051	0					
ANR	1225276	Argument	BAD_CAST ( ns )		1225051	2					
ANR	1225277	CallExpression	BAD_CAST ( ns )		1225051	0					
ANR	1225278	Callee	BAD_CAST		1225051	0					
ANR	1225279	Identifier	BAD_CAST		1225051	0					
ANR	1225280	ArgumentList	ns		1225051	1					
ANR	1225281	Argument	ns		1225051	0					
ANR	1225282	Identifier	ns		1225051	0					
ANR	1225283	IfStatement	if ( nsptr != NULL )		1225051	6					
ANR	1225284	Condition	nsptr != NULL	570:8:23337:23349	1225051	0	True				
ANR	1225285	EqualityExpression	nsptr != NULL		1225051	0		!=			
ANR	1225286	Identifier	nsptr		1225051	0					
ANR	1225287	Identifier	NULL		1225051	1					
ANR	1225288	CompoundStatement		30:23:856:856	1225051	1					
ANR	1225289	ExpressionStatement	"smart_str_appends ( & nscat , ( char * ) nsptr -> href )"	571:5:23359:23404	1225051	0	True				
ANR	1225290	CallExpression	"smart_str_appends ( & nscat , ( char * ) nsptr -> href )"		1225051	0					
ANR	1225291	Callee	smart_str_appends		1225051	0					
ANR	1225292	Identifier	smart_str_appends		1225051	0					
ANR	1225293	ArgumentList	& nscat		1225051	1					
ANR	1225294	Argument	& nscat		1225051	0					
ANR	1225295	UnaryOperationExpression	& nscat		1225051	0					
ANR	1225296	UnaryOperator	&		1225051	0					
ANR	1225297	Identifier	nscat		1225051	1					
ANR	1225298	Argument	( char * ) nsptr -> href		1225051	1					
ANR	1225299	CastExpression	( char * ) nsptr -> href		1225051	0					
ANR	1225300	CastTarget	char *		1225051	0					
ANR	1225301	PtrMemberAccess	nsptr -> href		1225051	1					
ANR	1225302	Identifier	nsptr		1225051	0					
ANR	1225303	Identifier	href		1225051	1					
ANR	1225304	ExpressionStatement	"smart_str_appendc ( & nscat , ':' )"	572:5:23411:23441	1225051	1	True				
ANR	1225305	CallExpression	"smart_str_appendc ( & nscat , ':' )"		1225051	0					
ANR	1225306	Callee	smart_str_appendc		1225051	0					
ANR	1225307	Identifier	smart_str_appendc		1225051	0					
ANR	1225308	ArgumentList	& nscat		1225051	1					
ANR	1225309	Argument	& nscat		1225051	0					
ANR	1225310	UnaryOperationExpression	& nscat		1225051	0					
ANR	1225311	UnaryOperator	&		1225051	0					
ANR	1225312	Identifier	nscat		1225051	1					
ANR	1225313	Argument	':'		1225051	1					
ANR	1225314	PrimaryExpression	':'		1225051	0					
ANR	1225315	ExpressionStatement	"smart_str_appends ( & nscat , cptype )"	574:4:23453:23486	1225051	7	True				
ANR	1225316	CallExpression	"smart_str_appends ( & nscat , cptype )"		1225051	0					
ANR	1225317	Callee	smart_str_appends		1225051	0					
ANR	1225318	Identifier	smart_str_appends		1225051	0					
ANR	1225319	ArgumentList	& nscat		1225051	1					
ANR	1225320	Argument	& nscat		1225051	0					
ANR	1225321	UnaryOperationExpression	& nscat		1225051	0					
ANR	1225322	UnaryOperator	&		1225051	0					
ANR	1225323	Identifier	nscat		1225051	1					
ANR	1225324	Argument	cptype		1225051	1					
ANR	1225325	Identifier	cptype		1225051	0					
ANR	1225326	ExpressionStatement	smart_str_0 ( & nscat )	575:4:23492:23511	1225051	8	True				
ANR	1225327	CallExpression	smart_str_0 ( & nscat )		1225051	0					
ANR	1225328	Callee	smart_str_0		1225051	0					
ANR	1225329	Identifier	smart_str_0		1225051	0					
ANR	1225330	ArgumentList	& nscat		1225051	1					
ANR	1225331	Argument	& nscat		1225051	0					
ANR	1225332	UnaryOperationExpression	& nscat		1225051	0					
ANR	1225333	UnaryOperator	&		1225051	0					
ANR	1225334	Identifier	nscat		1225051	1					
ANR	1225335	ExpressionStatement	efree ( cptype )	576:4:23517:23530	1225051	9	True				
ANR	1225336	CallExpression	efree ( cptype )		1225051	0					
ANR	1225337	Callee	efree		1225051	0					
ANR	1225338	Identifier	efree		1225051	0					
ANR	1225339	ArgumentList	cptype		1225051	1					
ANR	1225340	Argument	cptype		1225051	0					
ANR	1225341	Identifier	cptype		1225051	0					
ANR	1225342	IfStatement	if ( ns )		1225051	10					
ANR	1225343	Condition	ns	577:8:23540:23541	1225051	0	True				
ANR	1225344	Identifier	ns		1225051	0					
ANR	1225345	CompoundStatement		37:12:1048:1048	1225051	1					
ANR	1225346	ExpressionStatement	efree ( ns )	577:13:23545:23554	1225051	0	True				
ANR	1225347	CallExpression	efree ( ns )		1225051	0					
ANR	1225348	Callee	efree		1225051	0					
ANR	1225349	Identifier	efree		1225051	0					
ANR	1225350	ArgumentList	ns		1225051	1					
ANR	1225351	Argument	ns		1225051	0					
ANR	1225352	Identifier	ns		1225051	0					
ANR	1225353	IfStatement	"if ( zend_hash_find ( SOAP_GLOBAL ( typemap ) , nscat . c , nscat . len + 1 , ( void * * ) & new_enc ) == SUCCESS )"		1225051	11					
ANR	1225354	Condition	"zend_hash_find ( SOAP_GLOBAL ( typemap ) , nscat . c , nscat . len + 1 , ( void * * ) & new_enc ) == SUCCESS"	578:8:23565:23653	1225051	0	True				
ANR	1225355	EqualityExpression	"zend_hash_find ( SOAP_GLOBAL ( typemap ) , nscat . c , nscat . len + 1 , ( void * * ) & new_enc ) == SUCCESS"		1225051	0		==			
ANR	1225356	CallExpression	"zend_hash_find ( SOAP_GLOBAL ( typemap ) , nscat . c , nscat . len + 1 , ( void * * ) & new_enc )"		1225051	0					
ANR	1225357	Callee	zend_hash_find		1225051	0					
ANR	1225358	Identifier	zend_hash_find		1225051	0					
ANR	1225359	ArgumentList	SOAP_GLOBAL ( typemap )		1225051	1					
ANR	1225360	Argument	SOAP_GLOBAL ( typemap )		1225051	0					
ANR	1225361	CallExpression	SOAP_GLOBAL ( typemap )		1225051	0					
ANR	1225362	Callee	SOAP_GLOBAL		1225051	0					
ANR	1225363	Identifier	SOAP_GLOBAL		1225051	0					
ANR	1225364	ArgumentList	typemap		1225051	1					
ANR	1225365	Argument	typemap		1225051	0					
ANR	1225366	Identifier	typemap		1225051	0					
ANR	1225367	Argument	nscat . c		1225051	1					
ANR	1225368	MemberAccess	nscat . c		1225051	0					
ANR	1225369	Identifier	nscat		1225051	0					
ANR	1225370	Identifier	c		1225051	1					
ANR	1225371	Argument	nscat . len + 1		1225051	2					
ANR	1225372	AdditiveExpression	nscat . len + 1		1225051	0		+			
ANR	1225373	MemberAccess	nscat . len		1225051	0					
ANR	1225374	Identifier	nscat		1225051	0					
ANR	1225375	Identifier	len		1225051	1					
ANR	1225376	PrimaryExpression	1		1225051	1					
ANR	1225377	Argument	( void * * ) & new_enc		1225051	3					
ANR	1225378	CastExpression	( void * * ) & new_enc		1225051	0					
ANR	1225379	CastTarget	void * *		1225051	0					
ANR	1225380	UnaryOperationExpression	& new_enc		1225051	1					
ANR	1225381	UnaryOperator	&		1225051	0					
ANR	1225382	Identifier	new_enc		1225051	1					
ANR	1225383	Identifier	SUCCESS		1225051	1					
ANR	1225384	CompoundStatement		38:99:1160:1160	1225051	1					
ANR	1225385	ExpressionStatement	encode = * new_enc	579:5:23663:23680	1225051	0	True				
ANR	1225386	AssignmentExpression	encode = * new_enc		1225051	0		=			
ANR	1225387	Identifier	encode		1225051	0					
ANR	1225388	UnaryOperationExpression	* new_enc		1225051	1					
ANR	1225389	UnaryOperator	*		1225051	0					
ANR	1225390	Identifier	new_enc		1225051	1					
ANR	1225391	ExpressionStatement	smart_str_free ( & nscat )	581:4:23692:23714	1225051	12	True				
ANR	1225392	CallExpression	smart_str_free ( & nscat )		1225051	0					
ANR	1225393	Callee	smart_str_free		1225051	0					
ANR	1225394	Identifier	smart_str_free		1225051	0					
ANR	1225395	ArgumentList	& nscat		1225051	1					
ANR	1225396	Argument	& nscat		1225051	0					
ANR	1225397	UnaryOperationExpression	& nscat		1225051	0					
ANR	1225398	UnaryOperator	&		1225051	0					
ANR	1225399	Identifier	nscat		1225051	1					
ANR	1225400	IfStatement	if ( encode -> to_zval )		1225051	2					
ANR	1225401	Condition	encode -> to_zval	585:5:23736:23750	1225051	0	True				
ANR	1225402	PtrMemberAccess	encode -> to_zval		1225051	0					
ANR	1225403	Identifier	encode		1225051	0					
ANR	1225404	Identifier	to_zval		1225051	1					
ANR	1225405	CompoundStatement		45:22:1257:1257	1225051	1					
ANR	1225406	Statement	ret	586:2:23757:23759	1225051	0	True				
ANR	1225407	Statement	=	586:6:23761:23761	1225051	1	True				
ANR	1225408	Statement	encode	586:8:23763:23768	1225051	2	True				
ANR	1225409	Statement	->	586:14:23769:23770	1225051	3	True				
ANR	1225410	Statement	to_zval	586:16:23771:23777	1225051	4	True				
ANR	1225411	Statement	(	586:23:23778:23778	1225051	5	True				
ANR	1225412	Statement	&	586:24:23779:23779	1225051	6	True				
ANR	1225413	Statement	encode	586:25:23780:23785	1225051	7	True				
ANR	1225414	Statement	->	586:31:23786:23787	1225051	8	True				
ANR	1225415	Statement	details	586:33:23788:23794	1225051	9	True				
ANR	1225416	Statement	","	586:40:23795:23795	1225051	10	True				
ANR	1225417	Statement	data	586:42:23797:23800	1225051	11	True				
ANR	1225418	Statement	TSRMLS_CC	586:47:23802:23810	1225051	12	True				
ANR	1225419	Statement	)	586:56:23811:23811	1225051	13	True				
ANR	1225420	ExpressionStatement		586:57:23812:23812	1225051	14	True				
ANR	1225421	ReturnStatement	return ret ;	588:1:23818:23828	1225051	3	True				
ANR	1225422	Identifier	ret		1225051	0					
ANR	1225423	ReturnType	static zval *		1225051	1					
ANR	1225424	Identifier	master_to_zval_int		1225051	2					
ANR	1225425	ParameterList	"encodePtr encode , xmlNodePtr data TSRMLS_DC"		1225051	3					
ANR	1225426	Parameter	encodePtr encode	540:32:22450:22465	1225051	0	True				
ANR	1225427	ParameterType	encodePtr		1225051	0					
ANR	1225428	Identifier	encode		1225051	1					
ANR	1225429	Parameter	xmlNodePtr data TSRMLS_DC	540:50:22468:22492	1225051	1	True				
ANR	1225430	ParameterType	xmlNodePtr data		1225051	0					
ANR	1225431	Identifier	TSRMLS_DC		1225051	1					
ANR	1225432	CFGEntryNode	ENTRY		1225051		True				
ANR	1225433	CFGExitNode	EXIT		1225051		True				
ANR	1225434	Symbol	encode		1225051						
ANR	1225435	Symbol	* encode		1225051						
ANR	1225436	Symbol	data		1225051						
ANR	1225437	Symbol	typemap		1225051						
ANR	1225438	Symbol	ns		1225051						
ANR	1225439	Symbol	data -> properties		1225051						
ANR	1225440	Symbol	TSRMLS_DC		1225051						
ANR	1225441	Symbol	nscat . c		1225051						
ANR	1225442	Symbol	nsptr		1225051						
ANR	1225443	Symbol	& new_enc		1225051						
ANR	1225444	Symbol	zend_hash_find		1225051						
ANR	1225445	Symbol	encode -> details		1225051						
ANR	1225446	Symbol	ret		1225051						
ANR	1225447	Symbol	encode -> details . type_str		1225051						
ANR	1225448	Symbol	NULL		1225051						
ANR	1225449	Symbol	SUCCESS		1225051						
ANR	1225450	Symbol	encode -> details . ns		1225051						
ANR	1225451	Symbol	nsptr -> href		1225051						
ANR	1225452	Symbol	nscat . len		1225051						
ANR	1225453	Symbol	* new_enc		1225051						
ANR	1225454	Symbol	& cptype		1225051						
ANR	1225455	Symbol	encode -> to_zval		1225051						
ANR	1225456	Symbol	type_attr -> children		1225051						
ANR	1225457	Symbol	SOAP_GLOBAL		1225051						
ANR	1225458	Symbol	xmlSearchNs		1225051						
ANR	1225459	Symbol	& ns		1225051						
ANR	1225460	Symbol	nscat		1225051						
ANR	1225461	Symbol	* type_attr -> children		1225051						
ANR	1225462	Symbol	type_attr -> children -> content		1225051						
ANR	1225463	Symbol	data -> doc		1225051						
ANR	1225464	Symbol	get_attribute_ex		1225051						
ANR	1225465	Symbol	cptype		1225051						
ANR	1225466	Symbol	* nsptr		1225051						
ANR	1225467	Symbol	* * type_attr		1225051						
ANR	1225468	Symbol	type_attr		1225051						
ANR	1225469	Symbol	new_enc		1225051						
ANR	1225470	Symbol	& nscat		1225051						
ANR	1225471	Symbol	XSI_NAMESPACE		1225051						
ANR	1225472	Symbol	* data		1225051						
ANR	1225473	Symbol	* type_attr		1225051						
ANR	1225474	Symbol	BAD_CAST		1225051						
ANR	1225475	Function	master_to_zval	591:0:23833:24772							
ANR	1225476	FunctionDef	"master_to_zval (encodePtr encode , xmlNodePtr data TSRMLS_DC)"		1225475	0					
ANR	1225477	CompoundStatement		592:0:23899:24772	1225475	0					
ANR	1225478	ExpressionStatement	data = check_and_resolve_href ( data )	593:1:23902:23937	1225475	0	True				
ANR	1225479	AssignmentExpression	data = check_and_resolve_href ( data )		1225475	0		=			
ANR	1225480	Identifier	data		1225475	0					
ANR	1225481	CallExpression	check_and_resolve_href ( data )		1225475	1					
ANR	1225482	Callee	check_and_resolve_href		1225475	0					
ANR	1225483	Identifier	check_and_resolve_href		1225475	0					
ANR	1225484	ArgumentList	data		1225475	1					
ANR	1225485	Argument	data		1225475	0					
ANR	1225486	Identifier	data		1225475	0					
ANR	1225487	IfStatement	if ( encode == NULL )		1225475	1					
ANR	1225488	Condition	encode == NULL	595:5:23945:23958	1225475	0	True				
ANR	1225489	EqualityExpression	encode == NULL		1225475	0		==			
ANR	1225490	Identifier	encode		1225475	0					
ANR	1225491	Identifier	NULL		1225475	1					
ANR	1225492	CompoundStatement		4:21:61:61	1225475	1					
ANR	1225493	ExpressionStatement	encode = get_conversion ( UNKNOWN_TYPE )	596:2:23965:24002	1225475	0	True				
ANR	1225494	AssignmentExpression	encode = get_conversion ( UNKNOWN_TYPE )		1225475	0		=			
ANR	1225495	Identifier	encode		1225475	0					
ANR	1225496	CallExpression	get_conversion ( UNKNOWN_TYPE )		1225475	1					
ANR	1225497	Callee	get_conversion		1225475	0					
ANR	1225498	Identifier	get_conversion		1225475	0					
ANR	1225499	ArgumentList	UNKNOWN_TYPE		1225475	1					
ANR	1225500	Argument	UNKNOWN_TYPE		1225475	0					
ANR	1225501	Identifier	UNKNOWN_TYPE		1225475	0					
ANR	1225502	ElseStatement	else		1225475	0					
ANR	1225503	CompoundStatement		8:2:154:233	1225475	0					
ANR	1225504	IdentifierDeclStatement	"xmlAttrPtr type_attr = get_attribute_ex ( data -> properties , ""type"" , XSI_NAMESPACE ) ;"	599:2:24054:24133	1225475	0	True				
ANR	1225505	IdentifierDecl	"type_attr = get_attribute_ex ( data -> properties , ""type"" , XSI_NAMESPACE )"		1225475	0					
ANR	1225506	IdentifierDeclType	xmlAttrPtr		1225475	0					
ANR	1225507	Identifier	type_attr		1225475	1					
ANR	1225508	AssignmentExpression	"type_attr = get_attribute_ex ( data -> properties , ""type"" , XSI_NAMESPACE )"		1225475	2		=			
ANR	1225509	Identifier	type_attr		1225475	0					
ANR	1225510	CallExpression	"get_attribute_ex ( data -> properties , ""type"" , XSI_NAMESPACE )"		1225475	1					
ANR	1225511	Callee	get_attribute_ex		1225475	0					
ANR	1225512	Identifier	get_attribute_ex		1225475	0					
ANR	1225513	ArgumentList	data -> properties		1225475	1					
ANR	1225514	Argument	data -> properties		1225475	0					
ANR	1225515	PtrMemberAccess	data -> properties		1225475	0					
ANR	1225516	Identifier	data		1225475	0					
ANR	1225517	Identifier	properties		1225475	1					
ANR	1225518	Argument	"""type"""		1225475	1					
ANR	1225519	PrimaryExpression	"""type"""		1225475	0					
ANR	1225520	Argument	XSI_NAMESPACE		1225475	2					
ANR	1225521	Identifier	XSI_NAMESPACE		1225475	0					
ANR	1225522	IfStatement	if ( type_attr != NULL )		1225475	1					
ANR	1225523	Condition	type_attr != NULL	601:6:24142:24158	1225475	0	True				
ANR	1225524	EqualityExpression	type_attr != NULL		1225475	0		!=			
ANR	1225525	Identifier	type_attr		1225475	0					
ANR	1225526	Identifier	NULL		1225475	1					
ANR	1225527	CompoundStatement		11:3:266:360	1225475	1					
ANR	1225528	IdentifierDeclStatement	"encodePtr enc = get_encoder_from_prefix ( SOAP_GLOBAL ( sdl ) , data , type_attr -> children -> content ) ;"	602:3:24166:24260	1225475	0	True				
ANR	1225529	IdentifierDecl	"enc = get_encoder_from_prefix ( SOAP_GLOBAL ( sdl ) , data , type_attr -> children -> content )"		1225475	0					
ANR	1225530	IdentifierDeclType	encodePtr		1225475	0					
ANR	1225531	Identifier	enc		1225475	1					
ANR	1225532	AssignmentExpression	"enc = get_encoder_from_prefix ( SOAP_GLOBAL ( sdl ) , data , type_attr -> children -> content )"		1225475	2		=			
ANR	1225533	Identifier	enc		1225475	0					
ANR	1225534	CallExpression	"get_encoder_from_prefix ( SOAP_GLOBAL ( sdl ) , data , type_attr -> children -> content )"		1225475	1					
ANR	1225535	Callee	get_encoder_from_prefix		1225475	0					
ANR	1225536	Identifier	get_encoder_from_prefix		1225475	0					
ANR	1225537	ArgumentList	SOAP_GLOBAL ( sdl )		1225475	1					
ANR	1225538	Argument	SOAP_GLOBAL ( sdl )		1225475	0					
ANR	1225539	CallExpression	SOAP_GLOBAL ( sdl )		1225475	0					
ANR	1225540	Callee	SOAP_GLOBAL		1225475	0					
ANR	1225541	Identifier	SOAP_GLOBAL		1225475	0					
ANR	1225542	ArgumentList	sdl		1225475	1					
ANR	1225543	Argument	sdl		1225475	0					
ANR	1225544	Identifier	sdl		1225475	0					
ANR	1225545	Argument	data		1225475	1					
ANR	1225546	Identifier	data		1225475	0					
ANR	1225547	Argument	type_attr -> children -> content		1225475	2					
ANR	1225548	PtrMemberAccess	type_attr -> children -> content		1225475	0					
ANR	1225549	PtrMemberAccess	type_attr -> children		1225475	0					
ANR	1225550	Identifier	type_attr		1225475	0					
ANR	1225551	Identifier	children		1225475	1					
ANR	1225552	Identifier	content		1225475	1					
ANR	1225553	IfStatement	if ( enc != NULL && enc != encode )		1225475	1					
ANR	1225554	Condition	enc != NULL && enc != encode	604:7:24270:24297	1225475	0	True				
ANR	1225555	AndExpression	enc != NULL && enc != encode		1225475	0		&&			
ANR	1225556	EqualityExpression	enc != NULL		1225475	0		!=			
ANR	1225557	Identifier	enc		1225475	0					
ANR	1225558	Identifier	NULL		1225475	1					
ANR	1225559	EqualityExpression	enc != encode		1225475	1		!=			
ANR	1225560	Identifier	enc		1225475	0					
ANR	1225561	Identifier	encode		1225475	1					
ANR	1225562	CompoundStatement		14:5:407:426	1225475	1					
ANR	1225563	IdentifierDeclStatement	encodePtr tmp = enc ;	605:5:24307:24326	1225475	0	True				
ANR	1225564	IdentifierDecl	tmp = enc		1225475	0					
ANR	1225565	IdentifierDeclType	encodePtr		1225475	0					
ANR	1225566	Identifier	tmp		1225475	1					
ANR	1225567	AssignmentExpression	tmp = enc		1225475	2		=			
ANR	1225568	Identifier	enc		1225475	0					
ANR	1225569	Identifier	enc		1225475	1					
ANR	1225570	WhileStatement	while ( tmp && tmp -> details . sdl_type != NULL && tmp -> details . sdl_type -> kind != XSD_TYPEKIND_COMPLEX )		1225475	1					
ANR	1225571	Condition	tmp && tmp -> details . sdl_type != NULL && tmp -> details . sdl_type -> kind != XSD_TYPEKIND_COMPLEX	606:12:24340:24454	1225475	0	True				
ANR	1225572	AndExpression	tmp && tmp -> details . sdl_type != NULL && tmp -> details . sdl_type -> kind != XSD_TYPEKIND_COMPLEX		1225475	0		&&			
ANR	1225573	Identifier	tmp		1225475	0					
ANR	1225574	AndExpression	tmp -> details . sdl_type != NULL && tmp -> details . sdl_type -> kind != XSD_TYPEKIND_COMPLEX		1225475	1		&&			
ANR	1225575	EqualityExpression	tmp -> details . sdl_type != NULL		1225475	0		!=			
ANR	1225576	MemberAccess	tmp -> details . sdl_type		1225475	0					
ANR	1225577	PtrMemberAccess	tmp -> details		1225475	0					
ANR	1225578	Identifier	tmp		1225475	0					
ANR	1225579	Identifier	details		1225475	1					
ANR	1225580	Identifier	sdl_type		1225475	1					
ANR	1225581	Identifier	NULL		1225475	1					
ANR	1225582	EqualityExpression	tmp -> details . sdl_type -> kind != XSD_TYPEKIND_COMPLEX		1225475	1		!=			
ANR	1225583	PtrMemberAccess	tmp -> details . sdl_type -> kind		1225475	0					
ANR	1225584	MemberAccess	tmp -> details . sdl_type		1225475	0					
ANR	1225585	PtrMemberAccess	tmp -> details		1225475	0					
ANR	1225586	Identifier	tmp		1225475	0					
ANR	1225587	Identifier	details		1225475	1					
ANR	1225588	Identifier	sdl_type		1225475	1					
ANR	1225589	Identifier	kind		1225475	1					
ANR	1225590	Identifier	XSD_TYPEKIND_COMPLEX		1225475	1					
ANR	1225591	CompoundStatement		17:65:557:557	1225475	1					
ANR	1225592	IfStatement	if ( enc == tmp -> details . sdl_type -> encode || tmp == tmp -> details . sdl_type -> encode )		1225475	0					
ANR	1225593	Condition	enc == tmp -> details . sdl_type -> encode || tmp == tmp -> details . sdl_type -> encode	609:11:24470:24556	1225475	0	True				
ANR	1225594	OrExpression	enc == tmp -> details . sdl_type -> encode || tmp == tmp -> details . sdl_type -> encode		1225475	0		||			
ANR	1225595	EqualityExpression	enc == tmp -> details . sdl_type -> encode		1225475	0		==			
ANR	1225596	Identifier	enc		1225475	0					
ANR	1225597	PtrMemberAccess	tmp -> details . sdl_type -> encode		1225475	1					
ANR	1225598	MemberAccess	tmp -> details . sdl_type		1225475	0					
ANR	1225599	PtrMemberAccess	tmp -> details		1225475	0					
ANR	1225600	Identifier	tmp		1225475	0					
ANR	1225601	Identifier	details		1225475	1					
ANR	1225602	Identifier	sdl_type		1225475	1					
ANR	1225603	Identifier	encode		1225475	1					
ANR	1225604	EqualityExpression	tmp == tmp -> details . sdl_type -> encode		1225475	1		==			
ANR	1225605	Identifier	tmp		1225475	0					
ANR	1225606	PtrMemberAccess	tmp -> details . sdl_type -> encode		1225475	1					
ANR	1225607	MemberAccess	tmp -> details . sdl_type		1225475	0					
ANR	1225608	PtrMemberAccess	tmp -> details		1225475	0					
ANR	1225609	Identifier	tmp		1225475	0					
ANR	1225610	Identifier	details		1225475	1					
ANR	1225611	Identifier	sdl_type		1225475	1					
ANR	1225612	Identifier	encode		1225475	1					
ANR	1225613	CompoundStatement		19:49:659:659	1225475	1					
ANR	1225614	ExpressionStatement	enc = NULL	611:8:24569:24579	1225475	0	True				
ANR	1225615	AssignmentExpression	enc = NULL		1225475	0		=			
ANR	1225616	Identifier	enc		1225475	0					
ANR	1225617	Identifier	NULL		1225475	1					
ANR	1225618	BreakStatement	break ;	612:8:24589:24594	1225475	1	True				
ANR	1225619	ExpressionStatement	tmp = tmp -> details . sdl_type -> encode	614:7:24612:24647	1225475	1	True				
ANR	1225620	AssignmentExpression	tmp = tmp -> details . sdl_type -> encode		1225475	0		=			
ANR	1225621	Identifier	tmp		1225475	0					
ANR	1225622	PtrMemberAccess	tmp -> details . sdl_type -> encode		1225475	1					
ANR	1225623	MemberAccess	tmp -> details . sdl_type		1225475	0					
ANR	1225624	PtrMemberAccess	tmp -> details		1225475	0					
ANR	1225625	Identifier	tmp		1225475	0					
ANR	1225626	Identifier	details		1225475	1					
ANR	1225627	Identifier	sdl_type		1225475	1					
ANR	1225628	Identifier	encode		1225475	1					
ANR	1225629	IfStatement	if ( enc != NULL )		1225475	2					
ANR	1225630	Condition	enc != NULL	616:9:24665:24675	1225475	0	True				
ANR	1225631	EqualityExpression	enc != NULL		1225475	0		!=			
ANR	1225632	Identifier	enc		1225475	0					
ANR	1225633	Identifier	NULL		1225475	1					
ANR	1225634	CompoundStatement		25:22:778:778	1225475	1					
ANR	1225635	ExpressionStatement	encode = enc	617:7:24687:24699	1225475	0	True				
ANR	1225636	AssignmentExpression	encode = enc		1225475	0		=			
ANR	1225637	Identifier	encode		1225475	0					
ANR	1225638	Identifier	enc		1225475	1					
ANR	1225639	Statement	return	622:1:24721:24726	1225475	2	True				
ANR	1225640	Statement	master_to_zval_int	622:8:24728:24745	1225475	3	True				
ANR	1225641	Statement	(	622:26:24746:24746	1225475	4	True				
ANR	1225642	Statement	encode	622:27:24747:24752	1225475	5	True				
ANR	1225643	Statement	","	622:33:24753:24753	1225475	6	True				
ANR	1225644	Statement	data	622:35:24755:24758	1225475	7	True				
ANR	1225645	Statement	TSRMLS_CC	622:40:24760:24768	1225475	8	True				
ANR	1225646	Statement	)	622:49:24769:24769	1225475	9	True				
ANR	1225647	ExpressionStatement		622:50:24770:24770	1225475	10	True				
ANR	1225648	ReturnType	zval *		1225475	1					
ANR	1225649	Identifier	master_to_zval		1225475	2					
ANR	1225650	ParameterList	"encodePtr encode , xmlNodePtr data TSRMLS_DC"		1225475	3					
ANR	1225651	Parameter	encodePtr encode	591:21:23854:23869	1225475	0	True				
ANR	1225652	ParameterType	encodePtr		1225475	0					
ANR	1225653	Identifier	encode		1225475	1					
ANR	1225654	Parameter	xmlNodePtr data TSRMLS_DC	591:39:23872:23896	1225475	1	True				
ANR	1225655	ParameterType	xmlNodePtr data		1225475	0					
ANR	1225656	Identifier	TSRMLS_DC		1225475	1					
ANR	1225657	CFGEntryNode	ENTRY		1225475		True				
ANR	1225658	CFGExitNode	EXIT		1225475		True				
ANR	1225659	Symbol	encode		1225475						
ANR	1225660	Symbol	* tmp		1225475						
ANR	1225661	Symbol	data		1225475						
ANR	1225662	Symbol	tmp -> details . sdl_type -> kind		1225475						
ANR	1225663	Symbol	get_conversion		1225475						
ANR	1225664	Symbol	data -> properties		1225475						
ANR	1225665	Symbol	TSRMLS_DC		1225475						
ANR	1225666	Symbol	check_and_resolve_href		1225475						
ANR	1225667	Symbol	UNKNOWN_TYPE		1225475						
ANR	1225668	Symbol	tmp		1225475						
ANR	1225669	Symbol	enc		1225475						
ANR	1225670	Symbol	tmp -> details . sdl_type -> encode		1225475						
ANR	1225671	Symbol	tmp -> details . sdl_type		1225475						
ANR	1225672	Symbol	* tmp -> details		1225475						
ANR	1225673	Symbol	* tmp -> details . sdl_type		1225475						
ANR	1225674	Symbol	NULL		1225475						
ANR	1225675	Symbol	type_attr -> children		1225475						
ANR	1225676	Symbol	* * tmp		1225475						
ANR	1225677	Symbol	SOAP_GLOBAL		1225475						
ANR	1225678	Symbol	tmp -> details		1225475						
ANR	1225679	Symbol	* type_attr -> children		1225475						
ANR	1225680	Symbol	type_attr -> children -> content		1225475						
ANR	1225681	Symbol	XSD_TYPEKIND_COMPLEX		1225475						
ANR	1225682	Symbol	get_attribute_ex		1225475						
ANR	1225683	Symbol	get_encoder_from_prefix		1225475						
ANR	1225684	Symbol	* * type_attr		1225475						
ANR	1225685	Symbol	type_attr		1225475						
ANR	1225686	Symbol	sdl		1225475						
ANR	1225687	Symbol	XSI_NAMESPACE		1225475						
ANR	1225688	Symbol	* data		1225475						
ANR	1225689	Symbol	* type_attr		1225475						
ANR	1225690	Function	to_xml_user	625:0:24775:25647							
ANR	1225691	FunctionDef	"to_xml_user (encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1225690	0					
ANR	1225692	CompoundStatement		626:0:24870:25647	1225690	0					
ANR	1225693	IdentifierDeclStatement	xmlNodePtr ret = NULL ;	627:1:24873:24894	1225690	0	True				
ANR	1225694	IdentifierDecl	ret = NULL		1225690	0					
ANR	1225695	IdentifierDeclType	xmlNodePtr		1225690	0					
ANR	1225696	Identifier	ret		1225690	1					
ANR	1225697	AssignmentExpression	ret = NULL		1225690	2		=			
ANR	1225698	Identifier	NULL		1225690	0					
ANR	1225699	Identifier	NULL		1225690	1					
ANR	1225700	IdentifierDeclStatement	zval * return_value ;	628:1:24897:24915	1225690	1	True				
ANR	1225701	IdentifierDecl	* return_value		1225690	0					
ANR	1225702	IdentifierDeclType	zval *		1225690	0					
ANR	1225703	Identifier	return_value		1225690	1					
ANR	1225704	IfStatement	if ( type && type -> map && type -> map -> to_xml )		1225690	2					
ANR	1225705	Condition	type && type -> map && type -> map -> to_xml	630:5:24923:24960	1225690	0	True				
ANR	1225706	AndExpression	type && type -> map && type -> map -> to_xml		1225690	0		&&			
ANR	1225707	Identifier	type		1225690	0					
ANR	1225708	AndExpression	type -> map && type -> map -> to_xml		1225690	1		&&			
ANR	1225709	PtrMemberAccess	type -> map		1225690	0					
ANR	1225710	Identifier	type		1225690	0					
ANR	1225711	Identifier	map		1225690	1					
ANR	1225712	PtrMemberAccess	type -> map -> to_xml		1225690	1					
ANR	1225713	PtrMemberAccess	type -> map		1225690	0					
ANR	1225714	Identifier	type		1225690	0					
ANR	1225715	Identifier	map		1225690	1					
ANR	1225716	Identifier	to_xml		1225690	1					
ANR	1225717	CompoundStatement		5:45:92:92	1225690	1					
ANR	1225718	ExpressionStatement	MAKE_STD_ZVAL ( return_value )	631:2:24967:24994	1225690	0	True				
ANR	1225719	CallExpression	MAKE_STD_ZVAL ( return_value )		1225690	0					
ANR	1225720	Callee	MAKE_STD_ZVAL		1225690	0					
ANR	1225721	Identifier	MAKE_STD_ZVAL		1225690	0					
ANR	1225722	ArgumentList	return_value		1225690	1					
ANR	1225723	Argument	return_value		1225690	0					
ANR	1225724	Identifier	return_value		1225690	0					
ANR	1225725	Statement	if	633:2:24999:25000	1225690	1	True				
ANR	1225726	Statement	(	633:5:25002:25002	1225690	2	True				
ANR	1225727	Statement	call_user_function	633:6:25003:25020	1225690	3	True				
ANR	1225728	Statement	(	633:24:25021:25021	1225690	4	True				
ANR	1225729	Statement	EG	633:25:25022:25023	1225690	5	True				
ANR	1225730	Statement	(	633:27:25024:25024	1225690	6	True				
ANR	1225731	Statement	function_table	633:28:25025:25038	1225690	7	True				
ANR	1225732	Statement	)	633:42:25039:25039	1225690	8	True				
ANR	1225733	Statement	","	633:43:25040:25040	1225690	9	True				
ANR	1225734	Statement	NULL	633:45:25042:25045	1225690	10	True				
ANR	1225735	Statement	","	633:49:25046:25046	1225690	11	True				
ANR	1225736	Statement	type	633:51:25048:25051	1225690	12	True				
ANR	1225737	Statement	->	633:55:25052:25053	1225690	13	True				
ANR	1225738	Statement	map	633:57:25054:25056	1225690	14	True				
ANR	1225739	Statement	->	633:60:25057:25058	1225690	15	True				
ANR	1225740	Statement	to_xml	633:62:25059:25064	1225690	16	True				
ANR	1225741	Statement	","	633:68:25065:25065	1225690	17	True				
ANR	1225742	Statement	return_value	633:70:25067:25078	1225690	18	True				
ANR	1225743	Statement	","	633:82:25079:25079	1225690	19	True				
ANR	1225744	Statement	1	633:84:25081:25081	1225690	20	True				
ANR	1225745	Statement	","	633:85:25082:25082	1225690	21	True				
ANR	1225746	Statement	&	633:87:25084:25084	1225690	22	True				
ANR	1225747	Statement	data	633:88:25085:25088	1225690	23	True				
ANR	1225748	Statement	TSRMLS_CC	633:93:25090:25098	1225690	24	True				
ANR	1225749	Statement	)	633:102:25099:25099	1225690	25	True				
ANR	1225750	Statement	==	633:104:25101:25102	1225690	26	True				
ANR	1225751	Statement	FAILURE	633:107:25104:25110	1225690	27	True				
ANR	1225752	Statement	)	633:114:25111:25111	1225690	28	True				
ANR	1225753	CompoundStatement		8:116:242:242	1225690	29					
ANR	1225754	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Error calling to_xml callback"" )"	634:3:25118:25181	1225690	0	True				
ANR	1225755	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Error calling to_xml callback"" )"		1225690	0					
ANR	1225756	Callee	soap_error0		1225690	0					
ANR	1225757	Identifier	soap_error0		1225690	0					
ANR	1225758	ArgumentList	E_ERROR		1225690	1					
ANR	1225759	Argument	E_ERROR		1225690	0					
ANR	1225760	Identifier	E_ERROR		1225690	0					
ANR	1225761	Argument	"""Encoding: Error calling to_xml callback"""		1225690	1					
ANR	1225762	PrimaryExpression	"""Encoding: Error calling to_xml callback"""		1225690	0					
ANR	1225763	IfStatement	if ( Z_TYPE_P ( return_value ) == IS_STRING )		1225690	30					
ANR	1225764	Condition	Z_TYPE_P ( return_value ) == IS_STRING	636:6:25193:25227	1225690	0	True				
ANR	1225765	EqualityExpression	Z_TYPE_P ( return_value ) == IS_STRING		1225690	0		==			
ANR	1225766	CallExpression	Z_TYPE_P ( return_value )		1225690	0					
ANR	1225767	Callee	Z_TYPE_P		1225690	0					
ANR	1225768	Identifier	Z_TYPE_P		1225690	0					
ANR	1225769	ArgumentList	return_value		1225690	1					
ANR	1225770	Argument	return_value		1225690	0					
ANR	1225771	Identifier	return_value		1225690	0					
ANR	1225772	Identifier	IS_STRING		1225690	1					
ANR	1225773	CompoundStatement		12:3:366:453	1225690	1					
ANR	1225774	IdentifierDeclStatement	"xmlDocPtr doc = soap_xmlParseMemory ( Z_STRVAL_P ( return_value ) , Z_STRLEN_P ( return_value ) ) ;"	637:3:25237:25324	1225690	0	True				
ANR	1225775	IdentifierDecl	"doc = soap_xmlParseMemory ( Z_STRVAL_P ( return_value ) , Z_STRLEN_P ( return_value ) )"		1225690	0					
ANR	1225776	IdentifierDeclType	xmlDocPtr		1225690	0					
ANR	1225777	Identifier	doc		1225690	1					
ANR	1225778	AssignmentExpression	"doc = soap_xmlParseMemory ( Z_STRVAL_P ( return_value ) , Z_STRLEN_P ( return_value ) )"		1225690	2		=			
ANR	1225779	Identifier	doc		1225690	0					
ANR	1225780	CallExpression	"soap_xmlParseMemory ( Z_STRVAL_P ( return_value ) , Z_STRLEN_P ( return_value ) )"		1225690	1					
ANR	1225781	Callee	soap_xmlParseMemory		1225690	0					
ANR	1225782	Identifier	soap_xmlParseMemory		1225690	0					
ANR	1225783	ArgumentList	Z_STRVAL_P ( return_value )		1225690	1					
ANR	1225784	Argument	Z_STRVAL_P ( return_value )		1225690	0					
ANR	1225785	CallExpression	Z_STRVAL_P ( return_value )		1225690	0					
ANR	1225786	Callee	Z_STRVAL_P		1225690	0					
ANR	1225787	Identifier	Z_STRVAL_P		1225690	0					
ANR	1225788	ArgumentList	return_value		1225690	1					
ANR	1225789	Argument	return_value		1225690	0					
ANR	1225790	Identifier	return_value		1225690	0					
ANR	1225791	Argument	Z_STRLEN_P ( return_value )		1225690	1					
ANR	1225792	CallExpression	Z_STRLEN_P ( return_value )		1225690	0					
ANR	1225793	Callee	Z_STRLEN_P		1225690	0					
ANR	1225794	Identifier	Z_STRLEN_P		1225690	0					
ANR	1225795	ArgumentList	return_value		1225690	1					
ANR	1225796	Argument	return_value		1225690	0					
ANR	1225797	Identifier	return_value		1225690	0					
ANR	1225798	IfStatement	if ( doc && doc -> children )		1225690	1					
ANR	1225799	Condition	doc && doc -> children	638:7:25333:25352	1225690	0	True				
ANR	1225800	AndExpression	doc && doc -> children		1225690	0		&&			
ANR	1225801	Identifier	doc		1225690	0					
ANR	1225802	PtrMemberAccess	doc -> children		1225690	1					
ANR	1225803	Identifier	doc		1225690	0					
ANR	1225804	Identifier	children		1225690	1					
ANR	1225805	CompoundStatement		13:29:484:484	1225690	1					
ANR	1225806	ExpressionStatement	"ret = xmlDocCopyNode ( doc -> children , parent -> doc , 1 )"	639:4:25365:25416	1225690	0	True				
ANR	1225807	AssignmentExpression	"ret = xmlDocCopyNode ( doc -> children , parent -> doc , 1 )"		1225690	0		=			
ANR	1225808	Identifier	ret		1225690	0					
ANR	1225809	CallExpression	"xmlDocCopyNode ( doc -> children , parent -> doc , 1 )"		1225690	1					
ANR	1225810	Callee	xmlDocCopyNode		1225690	0					
ANR	1225811	Identifier	xmlDocCopyNode		1225690	0					
ANR	1225812	ArgumentList	doc -> children		1225690	1					
ANR	1225813	Argument	doc -> children		1225690	0					
ANR	1225814	PtrMemberAccess	doc -> children		1225690	0					
ANR	1225815	Identifier	doc		1225690	0					
ANR	1225816	Identifier	children		1225690	1					
ANR	1225817	Argument	parent -> doc		1225690	1					
ANR	1225818	PtrMemberAccess	parent -> doc		1225690	0					
ANR	1225819	Identifier	parent		1225690	0					
ANR	1225820	Identifier	doc		1225690	1					
ANR	1225821	Argument	1		1225690	2					
ANR	1225822	PrimaryExpression	1		1225690	0					
ANR	1225823	ExpressionStatement	xmlFreeDoc ( doc )	641:3:25426:25441	1225690	2	True				
ANR	1225824	CallExpression	xmlFreeDoc ( doc )		1225690	0					
ANR	1225825	Callee	xmlFreeDoc		1225690	0					
ANR	1225826	Identifier	xmlFreeDoc		1225690	0					
ANR	1225827	ArgumentList	doc		1225690	1					
ANR	1225828	Argument	doc		1225690	0					
ANR	1225829	Identifier	doc		1225690	0					
ANR	1225830	ExpressionStatement	zval_ptr_dtor ( & return_value )	644:2:25450:25478	1225690	31	True				
ANR	1225831	CallExpression	zval_ptr_dtor ( & return_value )		1225690	0					
ANR	1225832	Callee	zval_ptr_dtor		1225690	0					
ANR	1225833	Identifier	zval_ptr_dtor		1225690	0					
ANR	1225834	ArgumentList	& return_value		1225690	1					
ANR	1225835	Argument	& return_value		1225690	0					
ANR	1225836	UnaryOperationExpression	& return_value		1225690	0					
ANR	1225837	UnaryOperator	&		1225690	0					
ANR	1225838	Identifier	return_value		1225690	1					
ANR	1225839	IfStatement	if ( ! ret )		1225690	3					
ANR	1225840	Condition	! ret	646:5:25488:25491	1225690	0	True				
ANR	1225841	UnaryOperationExpression	! ret		1225690	0					
ANR	1225842	UnaryOperator	!		1225690	0					
ANR	1225843	Identifier	ret		1225690	1					
ANR	1225844	CompoundStatement		21:11:623:623	1225690	1					
ANR	1225845	ExpressionStatement	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	647:2:25498:25539	1225690	0	True				
ANR	1225846	AssignmentExpression	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1225690	0		=			
ANR	1225847	Identifier	ret		1225690	0					
ANR	1225848	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1225690	1					
ANR	1225849	Callee	xmlNewNode		1225690	0					
ANR	1225850	Identifier	xmlNewNode		1225690	0					
ANR	1225851	ArgumentList	NULL		1225690	1					
ANR	1225852	Argument	NULL		1225690	0					
ANR	1225853	Identifier	NULL		1225690	0					
ANR	1225854	Argument	"BAD_CAST ( ""BOGUS"" )"		1225690	1					
ANR	1225855	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1225690	0					
ANR	1225856	Callee	BAD_CAST		1225690	0					
ANR	1225857	Identifier	BAD_CAST		1225690	0					
ANR	1225858	ArgumentList	"""BOGUS"""		1225690	1					
ANR	1225859	Argument	"""BOGUS"""		1225690	0					
ANR	1225860	PrimaryExpression	"""BOGUS"""		1225690	0					
ANR	1225861	ExpressionStatement	"xmlAddChild ( parent , ret )"	649:1:25545:25569	1225690	4	True				
ANR	1225862	CallExpression	"xmlAddChild ( parent , ret )"		1225690	0					
ANR	1225863	Callee	xmlAddChild		1225690	0					
ANR	1225864	Identifier	xmlAddChild		1225690	0					
ANR	1225865	ArgumentList	parent		1225690	1					
ANR	1225866	Argument	parent		1225690	0					
ANR	1225867	Identifier	parent		1225690	0					
ANR	1225868	Argument	ret		1225690	1					
ANR	1225869	Identifier	ret		1225690	0					
ANR	1225870	IfStatement	if ( style == SOAP_ENCODED )		1225690	5					
ANR	1225871	Condition	style == SOAP_ENCODED	650:5:25576:25596	1225690	0	True				
ANR	1225872	EqualityExpression	style == SOAP_ENCODED		1225690	0		==			
ANR	1225873	Identifier	style		1225690	0					
ANR	1225874	Identifier	SOAP_ENCODED		1225690	1					
ANR	1225875	CompoundStatement		25:28:728:728	1225690	1					
ANR	1225876	ExpressionStatement	"set_ns_and_type ( ret , type )"	651:2:25603:25629	1225690	0	True				
ANR	1225877	CallExpression	"set_ns_and_type ( ret , type )"		1225690	0					
ANR	1225878	Callee	set_ns_and_type		1225690	0					
ANR	1225879	Identifier	set_ns_and_type		1225690	0					
ANR	1225880	ArgumentList	ret		1225690	1					
ANR	1225881	Argument	ret		1225690	0					
ANR	1225882	Identifier	ret		1225690	0					
ANR	1225883	Argument	type		1225690	1					
ANR	1225884	Identifier	type		1225690	0					
ANR	1225885	ReturnStatement	return ret ;	653:1:25635:25645	1225690	6	True				
ANR	1225886	Identifier	ret		1225690	0					
ANR	1225887	ReturnType	xmlNodePtr		1225690	1					
ANR	1225888	Identifier	to_xml_user		1225690	2					
ANR	1225889	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1225690	3					
ANR	1225890	Parameter	encodeTypePtr type	625:23:24798:24815	1225690	0	True				
ANR	1225891	ParameterType	encodeTypePtr		1225690	0					
ANR	1225892	Identifier	type		1225690	1					
ANR	1225893	Parameter	zval * data	625:43:24818:24827	1225690	1	True				
ANR	1225894	ParameterType	zval *		1225690	0					
ANR	1225895	Identifier	data		1225690	1					
ANR	1225896	Parameter	int style	625:55:24830:24838	1225690	2	True				
ANR	1225897	ParameterType	int		1225690	0					
ANR	1225898	Identifier	style		1225690	1					
ANR	1225899	Parameter	xmlNodePtr parent TSRMLS_DC	625:66:24841:24867	1225690	3	True				
ANR	1225900	ParameterType	xmlNodePtr parent		1225690	0					
ANR	1225901	Identifier	TSRMLS_DC		1225690	1					
ANR	1225902	CFGEntryNode	ENTRY		1225690		True				
ANR	1225903	CFGExitNode	EXIT		1225690		True				
ANR	1225904	Symbol	* type -> map		1225690						
ANR	1225905	Symbol	parent		1225690						
ANR	1225906	Symbol	return_value		1225690						
ANR	1225907	Symbol	* parent		1225690						
ANR	1225908	Symbol	data		1225690						
ANR	1225909	Symbol	type		1225690						
ANR	1225910	Symbol	TSRMLS_DC		1225690						
ANR	1225911	Symbol	parent -> doc		1225690						
ANR	1225912	Symbol	doc -> children		1225690						
ANR	1225913	Symbol	* type		1225690						
ANR	1225914	Symbol	type -> map -> to_xml		1225690						
ANR	1225915	Symbol	Z_STRLEN_P		1225690						
ANR	1225916	Symbol	IS_STRING		1225690						
ANR	1225917	Symbol	* doc		1225690						
ANR	1225918	Symbol	ret		1225690						
ANR	1225919	Symbol	NULL		1225690						
ANR	1225920	Symbol	xmlNewNode		1225690						
ANR	1225921	Symbol	Z_TYPE_P		1225690						
ANR	1225922	Symbol	Z_STRVAL_P		1225690						
ANR	1225923	Symbol	soap_xmlParseMemory		1225690						
ANR	1225924	Symbol	& return_value		1225690						
ANR	1225925	Symbol	E_ERROR		1225690						
ANR	1225926	Symbol	xmlDocCopyNode		1225690						
ANR	1225927	Symbol	type -> map		1225690						
ANR	1225928	Symbol	doc		1225690						
ANR	1225929	Symbol	style		1225690						
ANR	1225930	Symbol	SOAP_ENCODED		1225690						
ANR	1225931	Symbol	* * type		1225690						
ANR	1225932	Symbol	BAD_CAST		1225690						
ANR	1225933	Function	to_zval_user	656:0:25650:26380							
ANR	1225934	FunctionDef	"to_zval_user (encodeTypePtr type , xmlNodePtr node TSRMLS_DC)"		1225933	0					
ANR	1225935	CompoundStatement		657:0:25716:26380	1225933	0					
ANR	1225936	IdentifierDeclStatement	zval * return_value ;	658:1:25719:25737	1225933	0	True				
ANR	1225937	IdentifierDecl	* return_value		1225933	0					
ANR	1225938	IdentifierDeclType	zval *		1225933	0					
ANR	1225939	Identifier	return_value		1225933	1					
ANR	1225940	IfStatement	if ( type && type -> map && type -> map -> to_zval )		1225933	1					
ANR	1225941	Condition	type && type -> map && type -> map -> to_zval	660:5:25745:25783	1225933	0	True				
ANR	1225942	AndExpression	type && type -> map && type -> map -> to_zval		1225933	0		&&			
ANR	1225943	Identifier	type		1225933	0					
ANR	1225944	AndExpression	type -> map && type -> map -> to_zval		1225933	1		&&			
ANR	1225945	PtrMemberAccess	type -> map		1225933	0					
ANR	1225946	Identifier	type		1225933	0					
ANR	1225947	Identifier	map		1225933	1					
ANR	1225948	PtrMemberAccess	type -> map -> to_zval		1225933	1					
ANR	1225949	PtrMemberAccess	type -> map		1225933	0					
ANR	1225950	Identifier	type		1225933	0					
ANR	1225951	Identifier	map		1225933	1					
ANR	1225952	Identifier	to_zval		1225933	1					
ANR	1225953	CompoundStatement		7:2:107:122	1225933	1					
ANR	1225954	IdentifierDeclStatement	xmlBufferPtr buf ;	661:2:25790:25806	1225933	0	True				
ANR	1225955	IdentifierDecl	buf		1225933	0					
ANR	1225956	IdentifierDeclType	xmlBufferPtr		1225933	0					
ANR	1225957	Identifier	buf		1225933	1					
ANR	1225958	IdentifierDeclStatement	zval * data ;	662:2:25810:25820	1225933	1	True				
ANR	1225959	IdentifierDecl	* data		1225933	0					
ANR	1225960	IdentifierDeclType	zval *		1225933	0					
ANR	1225961	Identifier	data		1225933	1					
ANR	1225962	IdentifierDeclStatement	xmlNodePtr copy ;	663:2:25824:25839	1225933	2	True				
ANR	1225963	IdentifierDecl	copy		1225933	0					
ANR	1225964	IdentifierDeclType	xmlNodePtr		1225933	0					
ANR	1225965	Identifier	copy		1225933	1					
ANR	1225966	ExpressionStatement	"copy = xmlCopyNode ( node , 1 )"	665:2:25844:25871	1225933	3	True				
ANR	1225967	AssignmentExpression	"copy = xmlCopyNode ( node , 1 )"		1225933	0		=			
ANR	1225968	Identifier	copy		1225933	0					
ANR	1225969	CallExpression	"xmlCopyNode ( node , 1 )"		1225933	1					
ANR	1225970	Callee	xmlCopyNode		1225933	0					
ANR	1225971	Identifier	xmlCopyNode		1225933	0					
ANR	1225972	ArgumentList	node		1225933	1					
ANR	1225973	Argument	node		1225933	0					
ANR	1225974	Identifier	node		1225933	0					
ANR	1225975	Argument	1		1225933	1					
ANR	1225976	PrimaryExpression	1		1225933	0					
ANR	1225977	ExpressionStatement	buf = xmlBufferCreate ( )	666:2:25875:25898	1225933	4	True				
ANR	1225978	AssignmentExpression	buf = xmlBufferCreate ( )		1225933	0		=			
ANR	1225979	Identifier	buf		1225933	0					
ANR	1225980	CallExpression	xmlBufferCreate ( )		1225933	1					
ANR	1225981	Callee	xmlBufferCreate		1225933	0					
ANR	1225982	Identifier	xmlBufferCreate		1225933	0					
ANR	1225983	ArgumentList			1225933	1					
ANR	1225984	ExpressionStatement	"xmlNodeDump ( buf , NULL , copy , 0 , 0 )"	667:2:25902:25936	1225933	5	True				
ANR	1225985	CallExpression	"xmlNodeDump ( buf , NULL , copy , 0 , 0 )"		1225933	0					
ANR	1225986	Callee	xmlNodeDump		1225933	0					
ANR	1225987	Identifier	xmlNodeDump		1225933	0					
ANR	1225988	ArgumentList	buf		1225933	1					
ANR	1225989	Argument	buf		1225933	0					
ANR	1225990	Identifier	buf		1225933	0					
ANR	1225991	Argument	NULL		1225933	1					
ANR	1225992	Identifier	NULL		1225933	0					
ANR	1225993	Argument	copy		1225933	2					
ANR	1225994	Identifier	copy		1225933	0					
ANR	1225995	Argument	0		1225933	3					
ANR	1225996	PrimaryExpression	0		1225933	0					
ANR	1225997	Argument	0		1225933	4					
ANR	1225998	PrimaryExpression	0		1225933	0					
ANR	1225999	ExpressionStatement	MAKE_STD_ZVAL ( data )	668:2:25940:25959	1225933	6	True				
ANR	1226000	CallExpression	MAKE_STD_ZVAL ( data )		1225933	0					
ANR	1226001	Callee	MAKE_STD_ZVAL		1225933	0					
ANR	1226002	Identifier	MAKE_STD_ZVAL		1225933	0					
ANR	1226003	ArgumentList	data		1225933	1					
ANR	1226004	Argument	data		1225933	0					
ANR	1226005	Identifier	data		1225933	0					
ANR	1226006	ExpressionStatement	"ZVAL_STRING ( data , ( char * ) xmlBufferContent ( buf ) , 1 )"	669:2:25963:26013	1225933	7	True				
ANR	1226007	CallExpression	"ZVAL_STRING ( data , ( char * ) xmlBufferContent ( buf ) , 1 )"		1225933	0					
ANR	1226008	Callee	ZVAL_STRING		1225933	0					
ANR	1226009	Identifier	ZVAL_STRING		1225933	0					
ANR	1226010	ArgumentList	data		1225933	1					
ANR	1226011	Argument	data		1225933	0					
ANR	1226012	Identifier	data		1225933	0					
ANR	1226013	Argument	( char * ) xmlBufferContent ( buf )		1225933	1					
ANR	1226014	CastExpression	( char * ) xmlBufferContent ( buf )		1225933	0					
ANR	1226015	CastTarget	char *		1225933	0					
ANR	1226016	CallExpression	xmlBufferContent ( buf )		1225933	1					
ANR	1226017	Callee	xmlBufferContent		1225933	0					
ANR	1226018	Identifier	xmlBufferContent		1225933	0					
ANR	1226019	ArgumentList	buf		1225933	1					
ANR	1226020	Argument	buf		1225933	0					
ANR	1226021	Identifier	buf		1225933	0					
ANR	1226022	Argument	1		1225933	2					
ANR	1226023	PrimaryExpression	1		1225933	0					
ANR	1226024	ExpressionStatement	xmlBufferFree ( buf )	670:2:26017:26035	1225933	8	True				
ANR	1226025	CallExpression	xmlBufferFree ( buf )		1225933	0					
ANR	1226026	Callee	xmlBufferFree		1225933	0					
ANR	1226027	Identifier	xmlBufferFree		1225933	0					
ANR	1226028	ArgumentList	buf		1225933	1					
ANR	1226029	Argument	buf		1225933	0					
ANR	1226030	Identifier	buf		1225933	0					
ANR	1226031	ExpressionStatement	xmlFreeNode ( copy )	671:2:26039:26056	1225933	9	True				
ANR	1226032	CallExpression	xmlFreeNode ( copy )		1225933	0					
ANR	1226033	Callee	xmlFreeNode		1225933	0					
ANR	1226034	Identifier	xmlFreeNode		1225933	0					
ANR	1226035	ArgumentList	copy		1225933	1					
ANR	1226036	Argument	copy		1225933	0					
ANR	1226037	Identifier	copy		1225933	0					
ANR	1226038	ExpressionStatement	ALLOC_INIT_ZVAL ( return_value )	673:2:26061:26090	1225933	10	True				
ANR	1226039	CallExpression	ALLOC_INIT_ZVAL ( return_value )		1225933	0					
ANR	1226040	Callee	ALLOC_INIT_ZVAL		1225933	0					
ANR	1226041	Identifier	ALLOC_INIT_ZVAL		1225933	0					
ANR	1226042	ArgumentList	return_value		1225933	1					
ANR	1226043	Argument	return_value		1225933	0					
ANR	1226044	Identifier	return_value		1225933	0					
ANR	1226045	Statement	if	675:2:26097:26098	1225933	11	True				
ANR	1226046	Statement	(	675:5:26100:26100	1225933	12	True				
ANR	1226047	Statement	call_user_function	675:6:26101:26118	1225933	13	True				
ANR	1226048	Statement	(	675:24:26119:26119	1225933	14	True				
ANR	1226049	Statement	EG	675:25:26120:26121	1225933	15	True				
ANR	1226050	Statement	(	675:27:26122:26122	1225933	16	True				
ANR	1226051	Statement	function_table	675:28:26123:26136	1225933	17	True				
ANR	1226052	Statement	)	675:42:26137:26137	1225933	18	True				
ANR	1226053	Statement	","	675:43:26138:26138	1225933	19	True				
ANR	1226054	Statement	NULL	675:45:26140:26143	1225933	20	True				
ANR	1226055	Statement	","	675:49:26144:26144	1225933	21	True				
ANR	1226056	Statement	type	675:51:26146:26149	1225933	22	True				
ANR	1226057	Statement	->	675:55:26150:26151	1225933	23	True				
ANR	1226058	Statement	map	675:57:26152:26154	1225933	24	True				
ANR	1226059	Statement	->	675:60:26155:26156	1225933	25	True				
ANR	1226060	Statement	to_zval	675:62:26157:26163	1225933	26	True				
ANR	1226061	Statement	","	675:69:26164:26164	1225933	27	True				
ANR	1226062	Statement	return_value	675:71:26166:26177	1225933	28	True				
ANR	1226063	Statement	","	675:83:26178:26178	1225933	29	True				
ANR	1226064	Statement	1	675:85:26180:26180	1225933	30	True				
ANR	1226065	Statement	","	675:86:26181:26181	1225933	31	True				
ANR	1226066	Statement	&	675:88:26183:26183	1225933	32	True				
ANR	1226067	Statement	data	675:89:26184:26187	1225933	33	True				
ANR	1226068	Statement	TSRMLS_CC	675:94:26189:26197	1225933	34	True				
ANR	1226069	Statement	)	675:103:26198:26198	1225933	35	True				
ANR	1226070	Statement	==	675:105:26200:26201	1225933	36	True				
ANR	1226071	Statement	FAILURE	675:108:26203:26209	1225933	37	True				
ANR	1226072	Statement	)	675:115:26210:26210	1225933	38	True				
ANR	1226073	CompoundStatement		19:117:495:495	1225933	39					
ANR	1226074	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Error calling from_xml callback"" )"	676:3:26217:26282	1225933	0	True				
ANR	1226075	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Error calling from_xml callback"" )"		1225933	0					
ANR	1226076	Callee	soap_error0		1225933	0					
ANR	1226077	Identifier	soap_error0		1225933	0					
ANR	1226078	ArgumentList	E_ERROR		1225933	1					
ANR	1226079	Argument	E_ERROR		1225933	0					
ANR	1226080	Identifier	E_ERROR		1225933	0					
ANR	1226081	Argument	"""Encoding: Error calling from_xml callback"""		1225933	1					
ANR	1226082	PrimaryExpression	"""Encoding: Error calling from_xml callback"""		1225933	0					
ANR	1226083	ExpressionStatement	zval_ptr_dtor ( & data )	678:2:26290:26310	1225933	40	True				
ANR	1226084	CallExpression	zval_ptr_dtor ( & data )		1225933	0					
ANR	1226085	Callee	zval_ptr_dtor		1225933	0					
ANR	1226086	Identifier	zval_ptr_dtor		1225933	0					
ANR	1226087	ArgumentList	& data		1225933	1					
ANR	1226088	Argument	& data		1225933	0					
ANR	1226089	UnaryOperationExpression	& data		1225933	0					
ANR	1226090	UnaryOperator	&		1225933	0					
ANR	1226091	Identifier	data		1225933	1					
ANR	1226092	ElseStatement	else		1225933	0					
ANR	1226093	CompoundStatement		23:8:603:603	1225933	0					
ANR	1226094	ExpressionStatement	ALLOC_INIT_ZVAL ( return_value )	680:2:26324:26353	1225933	0	True				
ANR	1226095	CallExpression	ALLOC_INIT_ZVAL ( return_value )		1225933	0					
ANR	1226096	Callee	ALLOC_INIT_ZVAL		1225933	0					
ANR	1226097	Identifier	ALLOC_INIT_ZVAL		1225933	0					
ANR	1226098	ArgumentList	return_value		1225933	1					
ANR	1226099	Argument	return_value		1225933	0					
ANR	1226100	Identifier	return_value		1225933	0					
ANR	1226101	ReturnStatement	return return_value ;	682:1:26359:26378	1225933	2	True				
ANR	1226102	Identifier	return_value		1225933	0					
ANR	1226103	ReturnType	zval *		1225933	1					
ANR	1226104	Identifier	to_zval_user		1225933	2					
ANR	1226105	ParameterList	"encodeTypePtr type , xmlNodePtr node TSRMLS_DC"		1225933	3					
ANR	1226106	Parameter	encodeTypePtr type	656:19:25669:25686	1225933	0	True				
ANR	1226107	ParameterType	encodeTypePtr		1225933	0					
ANR	1226108	Identifier	type		1225933	1					
ANR	1226109	Parameter	xmlNodePtr node TSRMLS_DC	656:39:25689:25713	1225933	1	True				
ANR	1226110	ParameterType	xmlNodePtr node		1225933	0					
ANR	1226111	Identifier	TSRMLS_DC		1225933	1					
ANR	1226112	CFGEntryNode	ENTRY		1225933		True				
ANR	1226113	CFGExitNode	EXIT		1225933		True				
ANR	1226114	Symbol	* type -> map		1225933						
ANR	1226115	Symbol	return_value		1225933						
ANR	1226116	Symbol	xmlBufferCreate		1225933						
ANR	1226117	Symbol	NULL		1225933						
ANR	1226118	Symbol	data		1225933						
ANR	1226119	Symbol	xmlCopyNode		1225933						
ANR	1226120	Symbol	type		1225933						
ANR	1226121	Symbol	TSRMLS_DC		1225933						
ANR	1226122	Symbol	& data		1225933						
ANR	1226123	Symbol	xmlBufferContent		1225933						
ANR	1226124	Symbol	type -> map -> to_zval		1225933						
ANR	1226125	Symbol	node		1225933						
ANR	1226126	Symbol	buf		1225933						
ANR	1226127	Symbol	E_ERROR		1225933						
ANR	1226128	Symbol	* type		1225933						
ANR	1226129	Symbol	type -> map		1225933						
ANR	1226130	Symbol	* * type		1225933						
ANR	1226131	Symbol	copy		1225933						
ANR	1226132	Function	to_zval_string	687:0:26519:27575							
ANR	1226133	FunctionDef	"to_zval_string (encodeTypePtr type , xmlNodePtr data TSRMLS_DC)"		1226132	0					
ANR	1226134	CompoundStatement		688:0:26594:27575	1226132	0					
ANR	1226135	IdentifierDeclStatement	zval * ret ;	689:1:26597:26606	1226132	0	True				
ANR	1226136	IdentifierDecl	* ret		1226132	0					
ANR	1226137	IdentifierDeclType	zval *		1226132	0					
ANR	1226138	Identifier	ret		1226132	1					
ANR	1226139	ExpressionStatement	MAKE_STD_ZVAL ( ret )	690:1:26609:26627	1226132	1	True				
ANR	1226140	CallExpression	MAKE_STD_ZVAL ( ret )		1226132	0					
ANR	1226141	Callee	MAKE_STD_ZVAL		1226132	0					
ANR	1226142	Identifier	MAKE_STD_ZVAL		1226132	0					
ANR	1226143	ArgumentList	ret		1226132	1					
ANR	1226144	Argument	ret		1226132	0					
ANR	1226145	Identifier	ret		1226132	0					
ANR	1226146	ExpressionStatement	"FIND_XML_NULL ( data , ret )"	691:1:26630:26654	1226132	2	True				
ANR	1226147	CallExpression	"FIND_XML_NULL ( data , ret )"		1226132	0					
ANR	1226148	Callee	FIND_XML_NULL		1226132	0					
ANR	1226149	Identifier	FIND_XML_NULL		1226132	0					
ANR	1226150	ArgumentList	data		1226132	1					
ANR	1226151	Argument	data		1226132	0					
ANR	1226152	Identifier	data		1226132	0					
ANR	1226153	Argument	ret		1226132	1					
ANR	1226154	Identifier	ret		1226132	0					
ANR	1226155	IfStatement	if ( data && data -> children )		1226132	3					
ANR	1226156	Condition	data && data -> children	692:5:26661:26682	1226132	0	True				
ANR	1226157	AndExpression	data && data -> children		1226132	0		&&			
ANR	1226158	Identifier	data		1226132	0					
ANR	1226159	PtrMemberAccess	data -> children		1226132	1					
ANR	1226160	Identifier	data		1226132	0					
ANR	1226161	Identifier	children		1226132	1					
ANR	1226162	CompoundStatement		5:29:90:90	1226132	1					
ANR	1226163	IfStatement	if ( data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL )		1226132	0					
ANR	1226164	Condition	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL	693:6:26693:26761	1226132	0	True				
ANR	1226165	AndExpression	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL		1226132	0		&&			
ANR	1226166	EqualityExpression	data -> children -> type == XML_TEXT_NODE		1226132	0		==			
ANR	1226167	PtrMemberAccess	data -> children -> type		1226132	0					
ANR	1226168	PtrMemberAccess	data -> children		1226132	0					
ANR	1226169	Identifier	data		1226132	0					
ANR	1226170	Identifier	children		1226132	1					
ANR	1226171	Identifier	type		1226132	1					
ANR	1226172	Identifier	XML_TEXT_NODE		1226132	1					
ANR	1226173	EqualityExpression	data -> children -> next == NULL		1226132	1		==			
ANR	1226174	PtrMemberAccess	data -> children -> next		1226132	0					
ANR	1226175	PtrMemberAccess	data -> children		1226132	0					
ANR	1226176	Identifier	data		1226132	0					
ANR	1226177	Identifier	children		1226132	1					
ANR	1226178	Identifier	next		1226132	1					
ANR	1226179	Identifier	NULL		1226132	1					
ANR	1226180	CompoundStatement		6:77:169:169	1226132	1					
ANR	1226181	IfStatement	if ( SOAP_GLOBAL ( encoding ) != NULL )		1226132	0					
ANR	1226182	Condition	SOAP_GLOBAL ( encoding ) != NULL	694:7:26773:26801	1226132	0	True				
ANR	1226183	EqualityExpression	SOAP_GLOBAL ( encoding ) != NULL		1226132	0		!=			
ANR	1226184	CallExpression	SOAP_GLOBAL ( encoding )		1226132	0					
ANR	1226185	Callee	SOAP_GLOBAL		1226132	0					
ANR	1226186	Identifier	SOAP_GLOBAL		1226132	0					
ANR	1226187	ArgumentList	encoding		1226132	1					
ANR	1226188	Argument	encoding		1226132	0					
ANR	1226189	Identifier	encoding		1226132	0					
ANR	1226190	Identifier	NULL		1226132	1					
ANR	1226191	CompoundStatement		10:4:364:421	1226132	1					
ANR	1226192	IdentifierDeclStatement	"xmlBufferPtr in = xmlBufferCreateStatic ( data -> children -> content , xmlStrlen ( data -> children -> content ) ) ;"	695:4:26810:26911	1226132	0	True				
ANR	1226193	IdentifierDecl	"in = xmlBufferCreateStatic ( data -> children -> content , xmlStrlen ( data -> children -> content ) )"		1226132	0					
ANR	1226194	IdentifierDeclType	xmlBufferPtr		1226132	0					
ANR	1226195	Identifier	in		1226132	1					
ANR	1226196	AssignmentExpression	"in = xmlBufferCreateStatic ( data -> children -> content , xmlStrlen ( data -> children -> content ) )"		1226132	2		=			
ANR	1226197	Identifier	in		1226132	0					
ANR	1226198	CallExpression	"xmlBufferCreateStatic ( data -> children -> content , xmlStrlen ( data -> children -> content ) )"		1226132	1					
ANR	1226199	Callee	xmlBufferCreateStatic		1226132	0					
ANR	1226200	Identifier	xmlBufferCreateStatic		1226132	0					
ANR	1226201	ArgumentList	data -> children -> content		1226132	1					
ANR	1226202	Argument	data -> children -> content		1226132	0					
ANR	1226203	PtrMemberAccess	data -> children -> content		1226132	0					
ANR	1226204	PtrMemberAccess	data -> children		1226132	0					
ANR	1226205	Identifier	data		1226132	0					
ANR	1226206	Identifier	children		1226132	1					
ANR	1226207	Identifier	content		1226132	1					
ANR	1226208	Argument	xmlStrlen ( data -> children -> content )		1226132	1					
ANR	1226209	CallExpression	xmlStrlen ( data -> children -> content )		1226132	0					
ANR	1226210	Callee	xmlStrlen		1226132	0					
ANR	1226211	Identifier	xmlStrlen		1226132	0					
ANR	1226212	ArgumentList	data -> children -> content		1226132	1					
ANR	1226213	Argument	data -> children -> content		1226132	0					
ANR	1226214	PtrMemberAccess	data -> children -> content		1226132	0					
ANR	1226215	PtrMemberAccess	data -> children		1226132	0					
ANR	1226216	Identifier	data		1226132	0					
ANR	1226217	Identifier	children		1226132	1					
ANR	1226218	Identifier	content		1226132	1					
ANR	1226219	IdentifierDeclStatement	xmlBufferPtr out = xmlBufferCreate ( ) ;	696:4:26917:26953	1226132	1	True				
ANR	1226220	IdentifierDecl	out = xmlBufferCreate ( )		1226132	0					
ANR	1226221	IdentifierDeclType	xmlBufferPtr		1226132	0					
ANR	1226222	Identifier	out		1226132	1					
ANR	1226223	AssignmentExpression	out = xmlBufferCreate ( )		1226132	2		=			
ANR	1226224	Identifier	out		1226132	0					
ANR	1226225	CallExpression	xmlBufferCreate ( )		1226132	1					
ANR	1226226	Callee	xmlBufferCreate		1226132	0					
ANR	1226227	Identifier	xmlBufferCreate		1226132	0					
ANR	1226228	ArgumentList			1226132	1					
ANR	1226229	IdentifierDeclStatement	"int n = xmlCharEncOutFunc ( SOAP_GLOBAL ( encoding ) , out , in ) ;"	697:4:26959:27016	1226132	2	True				
ANR	1226230	IdentifierDecl	"n = xmlCharEncOutFunc ( SOAP_GLOBAL ( encoding ) , out , in )"		1226132	0					
ANR	1226231	IdentifierDeclType	int		1226132	0					
ANR	1226232	Identifier	n		1226132	1					
ANR	1226233	AssignmentExpression	"n = xmlCharEncOutFunc ( SOAP_GLOBAL ( encoding ) , out , in )"		1226132	2		=			
ANR	1226234	Identifier	n		1226132	0					
ANR	1226235	CallExpression	"xmlCharEncOutFunc ( SOAP_GLOBAL ( encoding ) , out , in )"		1226132	1					
ANR	1226236	Callee	xmlCharEncOutFunc		1226132	0					
ANR	1226237	Identifier	xmlCharEncOutFunc		1226132	0					
ANR	1226238	ArgumentList	SOAP_GLOBAL ( encoding )		1226132	1					
ANR	1226239	Argument	SOAP_GLOBAL ( encoding )		1226132	0					
ANR	1226240	CallExpression	SOAP_GLOBAL ( encoding )		1226132	0					
ANR	1226241	Callee	SOAP_GLOBAL		1226132	0					
ANR	1226242	Identifier	SOAP_GLOBAL		1226132	0					
ANR	1226243	ArgumentList	encoding		1226132	1					
ANR	1226244	Argument	encoding		1226132	0					
ANR	1226245	Identifier	encoding		1226132	0					
ANR	1226246	Argument	out		1226132	1					
ANR	1226247	Identifier	out		1226132	0					
ANR	1226248	Argument	in		1226132	2					
ANR	1226249	Identifier	in		1226132	0					
ANR	1226250	IfStatement	if ( n >= 0 )		1226132	3					
ANR	1226251	Condition	n >= 0	699:8:27027:27032	1226132	0	True				
ANR	1226252	RelationalExpression	n >= 0		1226132	0		>=			
ANR	1226253	Identifier	n		1226132	0					
ANR	1226254	PrimaryExpression	0		1226132	1					
ANR	1226255	CompoundStatement		12:16:440:440	1226132	1					
ANR	1226256	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) xmlBufferContent ( out ) , 1 )"	700:5:27042:27091	1226132	0	True				
ANR	1226257	CallExpression	"ZVAL_STRING ( ret , ( char * ) xmlBufferContent ( out ) , 1 )"		1226132	0					
ANR	1226258	Callee	ZVAL_STRING		1226132	0					
ANR	1226259	Identifier	ZVAL_STRING		1226132	0					
ANR	1226260	ArgumentList	ret		1226132	1					
ANR	1226261	Argument	ret		1226132	0					
ANR	1226262	Identifier	ret		1226132	0					
ANR	1226263	Argument	( char * ) xmlBufferContent ( out )		1226132	1					
ANR	1226264	CastExpression	( char * ) xmlBufferContent ( out )		1226132	0					
ANR	1226265	CastTarget	char *		1226132	0					
ANR	1226266	CallExpression	xmlBufferContent ( out )		1226132	1					
ANR	1226267	Callee	xmlBufferContent		1226132	0					
ANR	1226268	Identifier	xmlBufferContent		1226132	0					
ANR	1226269	ArgumentList	out		1226132	1					
ANR	1226270	Argument	out		1226132	0					
ANR	1226271	Identifier	out		1226132	0					
ANR	1226272	Argument	1		1226132	2					
ANR	1226273	PrimaryExpression	1		1226132	0					
ANR	1226274	ElseStatement	else		1226132	0					
ANR	1226275	CompoundStatement		14:11:509:509	1226132	0					
ANR	1226276	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) data -> children -> content , 1 )"	702:5:27111:27162	1226132	0	True				
ANR	1226277	CallExpression	"ZVAL_STRING ( ret , ( char * ) data -> children -> content , 1 )"		1226132	0					
ANR	1226278	Callee	ZVAL_STRING		1226132	0					
ANR	1226279	Identifier	ZVAL_STRING		1226132	0					
ANR	1226280	ArgumentList	ret		1226132	1					
ANR	1226281	Argument	ret		1226132	0					
ANR	1226282	Identifier	ret		1226132	0					
ANR	1226283	Argument	( char * ) data -> children -> content		1226132	1					
ANR	1226284	CastExpression	( char * ) data -> children -> content		1226132	0					
ANR	1226285	CastTarget	char *		1226132	0					
ANR	1226286	PtrMemberAccess	data -> children -> content		1226132	1					
ANR	1226287	PtrMemberAccess	data -> children		1226132	0					
ANR	1226288	Identifier	data		1226132	0					
ANR	1226289	Identifier	children		1226132	1					
ANR	1226290	Identifier	content		1226132	1					
ANR	1226291	Argument	1		1226132	2					
ANR	1226292	PrimaryExpression	1		1226132	0					
ANR	1226293	ExpressionStatement	xmlBufferFree ( out )	704:4:27174:27192	1226132	4	True				
ANR	1226294	CallExpression	xmlBufferFree ( out )		1226132	0					
ANR	1226295	Callee	xmlBufferFree		1226132	0					
ANR	1226296	Identifier	xmlBufferFree		1226132	0					
ANR	1226297	ArgumentList	out		1226132	1					
ANR	1226298	Argument	out		1226132	0					
ANR	1226299	Identifier	out		1226132	0					
ANR	1226300	ExpressionStatement	xmlBufferFree ( in )	705:4:27198:27215	1226132	5	True				
ANR	1226301	CallExpression	xmlBufferFree ( in )		1226132	0					
ANR	1226302	Callee	xmlBufferFree		1226132	0					
ANR	1226303	Identifier	xmlBufferFree		1226132	0					
ANR	1226304	ArgumentList	in		1226132	1					
ANR	1226305	Argument	in		1226132	0					
ANR	1226306	Identifier	in		1226132	0					
ANR	1226307	ElseStatement	else		1226132	0					
ANR	1226308	CompoundStatement		19:10:632:632	1226132	0					
ANR	1226309	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) data -> children -> content , 1 )"	707:4:27233:27284	1226132	0	True				
ANR	1226310	CallExpression	"ZVAL_STRING ( ret , ( char * ) data -> children -> content , 1 )"		1226132	0					
ANR	1226311	Callee	ZVAL_STRING		1226132	0					
ANR	1226312	Identifier	ZVAL_STRING		1226132	0					
ANR	1226313	ArgumentList	ret		1226132	1					
ANR	1226314	Argument	ret		1226132	0					
ANR	1226315	Identifier	ret		1226132	0					
ANR	1226316	Argument	( char * ) data -> children -> content		1226132	1					
ANR	1226317	CastExpression	( char * ) data -> children -> content		1226132	0					
ANR	1226318	CastTarget	char *		1226132	0					
ANR	1226319	PtrMemberAccess	data -> children -> content		1226132	1					
ANR	1226320	PtrMemberAccess	data -> children		1226132	0					
ANR	1226321	Identifier	data		1226132	0					
ANR	1226322	Identifier	children		1226132	1					
ANR	1226323	Identifier	content		1226132	1					
ANR	1226324	Argument	1		1226132	2					
ANR	1226325	PrimaryExpression	1		1226132	0					
ANR	1226326	ElseStatement	else		1226132	0					
ANR	1226327	IfStatement	if ( data -> children -> type == XML_CDATA_SECTION_NODE && data -> children -> next == NULL )		1226132	0					
ANR	1226328	Condition	data -> children -> type == XML_CDATA_SECTION_NODE && data -> children -> next == NULL	709:13:27304:27381	1226132	0	True				
ANR	1226329	AndExpression	data -> children -> type == XML_CDATA_SECTION_NODE && data -> children -> next == NULL		1226132	0		&&			
ANR	1226330	EqualityExpression	data -> children -> type == XML_CDATA_SECTION_NODE		1226132	0		==			
ANR	1226331	PtrMemberAccess	data -> children -> type		1226132	0					
ANR	1226332	PtrMemberAccess	data -> children		1226132	0					
ANR	1226333	Identifier	data		1226132	0					
ANR	1226334	Identifier	children		1226132	1					
ANR	1226335	Identifier	type		1226132	1					
ANR	1226336	Identifier	XML_CDATA_SECTION_NODE		1226132	1					
ANR	1226337	EqualityExpression	data -> children -> next == NULL		1226132	1		==			
ANR	1226338	PtrMemberAccess	data -> children -> next		1226132	0					
ANR	1226339	PtrMemberAccess	data -> children		1226132	0					
ANR	1226340	Identifier	data		1226132	0					
ANR	1226341	Identifier	children		1226132	1					
ANR	1226342	Identifier	next		1226132	1					
ANR	1226343	Identifier	NULL		1226132	1					
ANR	1226344	CompoundStatement		22:93:789:789	1226132	1					
ANR	1226345	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) data -> children -> content , 1 )"	710:3:27389:27440	1226132	0	True				
ANR	1226346	CallExpression	"ZVAL_STRING ( ret , ( char * ) data -> children -> content , 1 )"		1226132	0					
ANR	1226347	Callee	ZVAL_STRING		1226132	0					
ANR	1226348	Identifier	ZVAL_STRING		1226132	0					
ANR	1226349	ArgumentList	ret		1226132	1					
ANR	1226350	Argument	ret		1226132	0					
ANR	1226351	Identifier	ret		1226132	0					
ANR	1226352	Argument	( char * ) data -> children -> content		1226132	1					
ANR	1226353	CastExpression	( char * ) data -> children -> content		1226132	0					
ANR	1226354	CastTarget	char *		1226132	0					
ANR	1226355	PtrMemberAccess	data -> children -> content		1226132	1					
ANR	1226356	PtrMemberAccess	data -> children		1226132	0					
ANR	1226357	Identifier	data		1226132	0					
ANR	1226358	Identifier	children		1226132	1					
ANR	1226359	Identifier	content		1226132	1					
ANR	1226360	Argument	1		1226132	2					
ANR	1226361	PrimaryExpression	1		1226132	0					
ANR	1226362	ElseStatement	else		1226132	0					
ANR	1226363	CompoundStatement		24:9:856:856	1226132	0					
ANR	1226364	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	712:3:27456:27517	1226132	0	True				
ANR	1226365	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1226132	0					
ANR	1226366	Callee	soap_error0		1226132	0					
ANR	1226367	Identifier	soap_error0		1226132	0					
ANR	1226368	ArgumentList	E_ERROR		1226132	1					
ANR	1226369	Argument	E_ERROR		1226132	0					
ANR	1226370	Identifier	E_ERROR		1226132	0					
ANR	1226371	Argument	"""Encoding: Violation of encoding rules"""		1226132	1					
ANR	1226372	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1226132	0					
ANR	1226373	ElseStatement	else		1226132	0					
ANR	1226374	CompoundStatement		27:8:936:936	1226132	0					
ANR	1226375	ExpressionStatement	ZVAL_EMPTY_STRING ( ret )	715:2:27535:27557	1226132	0	True				
ANR	1226376	CallExpression	ZVAL_EMPTY_STRING ( ret )		1226132	0					
ANR	1226377	Callee	ZVAL_EMPTY_STRING		1226132	0					
ANR	1226378	Identifier	ZVAL_EMPTY_STRING		1226132	0					
ANR	1226379	ArgumentList	ret		1226132	1					
ANR	1226380	Argument	ret		1226132	0					
ANR	1226381	Identifier	ret		1226132	0					
ANR	1226382	ReturnStatement	return ret ;	717:1:27563:27573	1226132	4	True				
ANR	1226383	Identifier	ret		1226132	0					
ANR	1226384	ReturnType	static zval *		1226132	1					
ANR	1226385	Identifier	to_zval_string		1226132	2					
ANR	1226386	ParameterList	"encodeTypePtr type , xmlNodePtr data TSRMLS_DC"		1226132	3					
ANR	1226387	Parameter	encodeTypePtr type	687:28:26547:26564	1226132	0	True				
ANR	1226388	ParameterType	encodeTypePtr		1226132	0					
ANR	1226389	Identifier	type		1226132	1					
ANR	1226390	Parameter	xmlNodePtr data TSRMLS_DC	687:48:26567:26591	1226132	1	True				
ANR	1226391	ParameterType	xmlNodePtr data		1226132	0					
ANR	1226392	Identifier	TSRMLS_DC		1226132	1					
ANR	1226393	CFGEntryNode	ENTRY		1226132		True				
ANR	1226394	CFGExitNode	EXIT		1226132		True				
ANR	1226395	Symbol	* * data		1226132						
ANR	1226396	Symbol	data -> children -> next		1226132						
ANR	1226397	Symbol	xmlBufferCreate		1226132						
ANR	1226398	Symbol	data		1226132						
ANR	1226399	Symbol	type		1226132						
ANR	1226400	Symbol	xmlBufferCreateStatic		1226132						
ANR	1226401	Symbol	TSRMLS_DC		1226132						
ANR	1226402	Symbol	out		1226132						
ANR	1226403	Symbol	XML_TEXT_NODE		1226132						
ANR	1226404	Symbol	data -> children -> content		1226132						
ANR	1226405	Symbol	* data -> children		1226132						
ANR	1226406	Symbol	xmlCharEncOutFunc		1226132						
ANR	1226407	Symbol	ret		1226132						
ANR	1226408	Symbol	NULL		1226132						
ANR	1226409	Symbol	in		1226132						
ANR	1226410	Symbol	encoding		1226132						
ANR	1226411	Symbol	SOAP_GLOBAL		1226132						
ANR	1226412	Symbol	n		1226132						
ANR	1226413	Symbol	xmlBufferContent		1226132						
ANR	1226414	Symbol	E_ERROR		1226132						
ANR	1226415	Symbol	data -> children		1226132						
ANR	1226416	Symbol	xmlStrlen		1226132						
ANR	1226417	Symbol	XML_CDATA_SECTION_NODE		1226132						
ANR	1226418	Symbol	* data		1226132						
ANR	1226419	Symbol	data -> children -> type		1226132						
ANR	1226420	Function	to_zval_stringr	720:0:27578:28683							
ANR	1226421	FunctionDef	"to_zval_stringr (encodeTypePtr type , xmlNodePtr data TSRMLS_DC)"		1226420	0					
ANR	1226422	CompoundStatement		721:0:27654:28683	1226420	0					
ANR	1226423	IdentifierDeclStatement	zval * ret ;	722:1:27657:27666	1226420	0	True				
ANR	1226424	IdentifierDecl	* ret		1226420	0					
ANR	1226425	IdentifierDeclType	zval *		1226420	0					
ANR	1226426	Identifier	ret		1226420	1					
ANR	1226427	ExpressionStatement	MAKE_STD_ZVAL ( ret )	723:1:27669:27687	1226420	1	True				
ANR	1226428	CallExpression	MAKE_STD_ZVAL ( ret )		1226420	0					
ANR	1226429	Callee	MAKE_STD_ZVAL		1226420	0					
ANR	1226430	Identifier	MAKE_STD_ZVAL		1226420	0					
ANR	1226431	ArgumentList	ret		1226420	1					
ANR	1226432	Argument	ret		1226420	0					
ANR	1226433	Identifier	ret		1226420	0					
ANR	1226434	ExpressionStatement	"FIND_XML_NULL ( data , ret )"	724:1:27690:27714	1226420	2	True				
ANR	1226435	CallExpression	"FIND_XML_NULL ( data , ret )"		1226420	0					
ANR	1226436	Callee	FIND_XML_NULL		1226420	0					
ANR	1226437	Identifier	FIND_XML_NULL		1226420	0					
ANR	1226438	ArgumentList	data		1226420	1					
ANR	1226439	Argument	data		1226420	0					
ANR	1226440	Identifier	data		1226420	0					
ANR	1226441	Argument	ret		1226420	1					
ANR	1226442	Identifier	ret		1226420	0					
ANR	1226443	IfStatement	if ( data && data -> children )		1226420	3					
ANR	1226444	Condition	data && data -> children	725:5:27721:27742	1226420	0	True				
ANR	1226445	AndExpression	data && data -> children		1226420	0		&&			
ANR	1226446	Identifier	data		1226420	0					
ANR	1226447	PtrMemberAccess	data -> children		1226420	1					
ANR	1226448	Identifier	data		1226420	0					
ANR	1226449	Identifier	children		1226420	1					
ANR	1226450	CompoundStatement		5:29:90:90	1226420	1					
ANR	1226451	IfStatement	if ( data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL )		1226420	0					
ANR	1226452	Condition	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL	726:6:27753:27821	1226420	0	True				
ANR	1226453	AndExpression	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL		1226420	0		&&			
ANR	1226454	EqualityExpression	data -> children -> type == XML_TEXT_NODE		1226420	0		==			
ANR	1226455	PtrMemberAccess	data -> children -> type		1226420	0					
ANR	1226456	PtrMemberAccess	data -> children		1226420	0					
ANR	1226457	Identifier	data		1226420	0					
ANR	1226458	Identifier	children		1226420	1					
ANR	1226459	Identifier	type		1226420	1					
ANR	1226460	Identifier	XML_TEXT_NODE		1226420	1					
ANR	1226461	EqualityExpression	data -> children -> next == NULL		1226420	1		==			
ANR	1226462	PtrMemberAccess	data -> children -> next		1226420	0					
ANR	1226463	PtrMemberAccess	data -> children		1226420	0					
ANR	1226464	Identifier	data		1226420	0					
ANR	1226465	Identifier	children		1226420	1					
ANR	1226466	Identifier	next		1226420	1					
ANR	1226467	Identifier	NULL		1226420	1					
ANR	1226468	CompoundStatement		6:77:169:169	1226420	1					
ANR	1226469	ExpressionStatement	whiteSpace_replace ( data -> children -> content )	727:3:27829:27872	1226420	0	True				
ANR	1226470	CallExpression	whiteSpace_replace ( data -> children -> content )		1226420	0					
ANR	1226471	Callee	whiteSpace_replace		1226420	0					
ANR	1226472	Identifier	whiteSpace_replace		1226420	0					
ANR	1226473	ArgumentList	data -> children -> content		1226420	1					
ANR	1226474	Argument	data -> children -> content		1226420	0					
ANR	1226475	PtrMemberAccess	data -> children -> content		1226420	0					
ANR	1226476	PtrMemberAccess	data -> children		1226420	0					
ANR	1226477	Identifier	data		1226420	0					
ANR	1226478	Identifier	children		1226420	1					
ANR	1226479	Identifier	content		1226420	1					
ANR	1226480	IfStatement	if ( SOAP_GLOBAL ( encoding ) != NULL )		1226420	1					
ANR	1226481	Condition	SOAP_GLOBAL ( encoding ) != NULL	728:7:27881:27909	1226420	0	True				
ANR	1226482	EqualityExpression	SOAP_GLOBAL ( encoding ) != NULL		1226420	0		!=			
ANR	1226483	CallExpression	SOAP_GLOBAL ( encoding )		1226420	0					
ANR	1226484	Callee	SOAP_GLOBAL		1226420	0					
ANR	1226485	Identifier	SOAP_GLOBAL		1226420	0					
ANR	1226486	ArgumentList	encoding		1226420	1					
ANR	1226487	Argument	encoding		1226420	0					
ANR	1226488	Identifier	encoding		1226420	0					
ANR	1226489	Identifier	NULL		1226420	1					
ANR	1226490	CompoundStatement		11:4:412:469	1226420	1					
ANR	1226491	IdentifierDeclStatement	"xmlBufferPtr in = xmlBufferCreateStatic ( data -> children -> content , xmlStrlen ( data -> children -> content ) ) ;"	729:4:27918:28019	1226420	0	True				
ANR	1226492	IdentifierDecl	"in = xmlBufferCreateStatic ( data -> children -> content , xmlStrlen ( data -> children -> content ) )"		1226420	0					
ANR	1226493	IdentifierDeclType	xmlBufferPtr		1226420	0					
ANR	1226494	Identifier	in		1226420	1					
ANR	1226495	AssignmentExpression	"in = xmlBufferCreateStatic ( data -> children -> content , xmlStrlen ( data -> children -> content ) )"		1226420	2		=			
ANR	1226496	Identifier	in		1226420	0					
ANR	1226497	CallExpression	"xmlBufferCreateStatic ( data -> children -> content , xmlStrlen ( data -> children -> content ) )"		1226420	1					
ANR	1226498	Callee	xmlBufferCreateStatic		1226420	0					
ANR	1226499	Identifier	xmlBufferCreateStatic		1226420	0					
ANR	1226500	ArgumentList	data -> children -> content		1226420	1					
ANR	1226501	Argument	data -> children -> content		1226420	0					
ANR	1226502	PtrMemberAccess	data -> children -> content		1226420	0					
ANR	1226503	PtrMemberAccess	data -> children		1226420	0					
ANR	1226504	Identifier	data		1226420	0					
ANR	1226505	Identifier	children		1226420	1					
ANR	1226506	Identifier	content		1226420	1					
ANR	1226507	Argument	xmlStrlen ( data -> children -> content )		1226420	1					
ANR	1226508	CallExpression	xmlStrlen ( data -> children -> content )		1226420	0					
ANR	1226509	Callee	xmlStrlen		1226420	0					
ANR	1226510	Identifier	xmlStrlen		1226420	0					
ANR	1226511	ArgumentList	data -> children -> content		1226420	1					
ANR	1226512	Argument	data -> children -> content		1226420	0					
ANR	1226513	PtrMemberAccess	data -> children -> content		1226420	0					
ANR	1226514	PtrMemberAccess	data -> children		1226420	0					
ANR	1226515	Identifier	data		1226420	0					
ANR	1226516	Identifier	children		1226420	1					
ANR	1226517	Identifier	content		1226420	1					
ANR	1226518	IdentifierDeclStatement	xmlBufferPtr out = xmlBufferCreate ( ) ;	730:4:28025:28061	1226420	1	True				
ANR	1226519	IdentifierDecl	out = xmlBufferCreate ( )		1226420	0					
ANR	1226520	IdentifierDeclType	xmlBufferPtr		1226420	0					
ANR	1226521	Identifier	out		1226420	1					
ANR	1226522	AssignmentExpression	out = xmlBufferCreate ( )		1226420	2		=			
ANR	1226523	Identifier	out		1226420	0					
ANR	1226524	CallExpression	xmlBufferCreate ( )		1226420	1					
ANR	1226525	Callee	xmlBufferCreate		1226420	0					
ANR	1226526	Identifier	xmlBufferCreate		1226420	0					
ANR	1226527	ArgumentList			1226420	1					
ANR	1226528	IdentifierDeclStatement	"int n = xmlCharEncOutFunc ( SOAP_GLOBAL ( encoding ) , out , in ) ;"	731:4:28067:28124	1226420	2	True				
ANR	1226529	IdentifierDecl	"n = xmlCharEncOutFunc ( SOAP_GLOBAL ( encoding ) , out , in )"		1226420	0					
ANR	1226530	IdentifierDeclType	int		1226420	0					
ANR	1226531	Identifier	n		1226420	1					
ANR	1226532	AssignmentExpression	"n = xmlCharEncOutFunc ( SOAP_GLOBAL ( encoding ) , out , in )"		1226420	2		=			
ANR	1226533	Identifier	n		1226420	0					
ANR	1226534	CallExpression	"xmlCharEncOutFunc ( SOAP_GLOBAL ( encoding ) , out , in )"		1226420	1					
ANR	1226535	Callee	xmlCharEncOutFunc		1226420	0					
ANR	1226536	Identifier	xmlCharEncOutFunc		1226420	0					
ANR	1226537	ArgumentList	SOAP_GLOBAL ( encoding )		1226420	1					
ANR	1226538	Argument	SOAP_GLOBAL ( encoding )		1226420	0					
ANR	1226539	CallExpression	SOAP_GLOBAL ( encoding )		1226420	0					
ANR	1226540	Callee	SOAP_GLOBAL		1226420	0					
ANR	1226541	Identifier	SOAP_GLOBAL		1226420	0					
ANR	1226542	ArgumentList	encoding		1226420	1					
ANR	1226543	Argument	encoding		1226420	0					
ANR	1226544	Identifier	encoding		1226420	0					
ANR	1226545	Argument	out		1226420	1					
ANR	1226546	Identifier	out		1226420	0					
ANR	1226547	Argument	in		1226420	2					
ANR	1226548	Identifier	in		1226420	0					
ANR	1226549	IfStatement	if ( n >= 0 )		1226420	3					
ANR	1226550	Condition	n >= 0	733:8:28135:28140	1226420	0	True				
ANR	1226551	RelationalExpression	n >= 0		1226420	0		>=			
ANR	1226552	Identifier	n		1226420	0					
ANR	1226553	PrimaryExpression	0		1226420	1					
ANR	1226554	CompoundStatement		13:16:488:488	1226420	1					
ANR	1226555	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) xmlBufferContent ( out ) , 1 )"	734:5:28150:28199	1226420	0	True				
ANR	1226556	CallExpression	"ZVAL_STRING ( ret , ( char * ) xmlBufferContent ( out ) , 1 )"		1226420	0					
ANR	1226557	Callee	ZVAL_STRING		1226420	0					
ANR	1226558	Identifier	ZVAL_STRING		1226420	0					
ANR	1226559	ArgumentList	ret		1226420	1					
ANR	1226560	Argument	ret		1226420	0					
ANR	1226561	Identifier	ret		1226420	0					
ANR	1226562	Argument	( char * ) xmlBufferContent ( out )		1226420	1					
ANR	1226563	CastExpression	( char * ) xmlBufferContent ( out )		1226420	0					
ANR	1226564	CastTarget	char *		1226420	0					
ANR	1226565	CallExpression	xmlBufferContent ( out )		1226420	1					
ANR	1226566	Callee	xmlBufferContent		1226420	0					
ANR	1226567	Identifier	xmlBufferContent		1226420	0					
ANR	1226568	ArgumentList	out		1226420	1					
ANR	1226569	Argument	out		1226420	0					
ANR	1226570	Identifier	out		1226420	0					
ANR	1226571	Argument	1		1226420	2					
ANR	1226572	PrimaryExpression	1		1226420	0					
ANR	1226573	ElseStatement	else		1226420	0					
ANR	1226574	CompoundStatement		15:11:557:557	1226420	0					
ANR	1226575	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) data -> children -> content , 1 )"	736:5:28219:28270	1226420	0	True				
ANR	1226576	CallExpression	"ZVAL_STRING ( ret , ( char * ) data -> children -> content , 1 )"		1226420	0					
ANR	1226577	Callee	ZVAL_STRING		1226420	0					
ANR	1226578	Identifier	ZVAL_STRING		1226420	0					
ANR	1226579	ArgumentList	ret		1226420	1					
ANR	1226580	Argument	ret		1226420	0					
ANR	1226581	Identifier	ret		1226420	0					
ANR	1226582	Argument	( char * ) data -> children -> content		1226420	1					
ANR	1226583	CastExpression	( char * ) data -> children -> content		1226420	0					
ANR	1226584	CastTarget	char *		1226420	0					
ANR	1226585	PtrMemberAccess	data -> children -> content		1226420	1					
ANR	1226586	PtrMemberAccess	data -> children		1226420	0					
ANR	1226587	Identifier	data		1226420	0					
ANR	1226588	Identifier	children		1226420	1					
ANR	1226589	Identifier	content		1226420	1					
ANR	1226590	Argument	1		1226420	2					
ANR	1226591	PrimaryExpression	1		1226420	0					
ANR	1226592	ExpressionStatement	xmlBufferFree ( out )	738:4:28282:28300	1226420	4	True				
ANR	1226593	CallExpression	xmlBufferFree ( out )		1226420	0					
ANR	1226594	Callee	xmlBufferFree		1226420	0					
ANR	1226595	Identifier	xmlBufferFree		1226420	0					
ANR	1226596	ArgumentList	out		1226420	1					
ANR	1226597	Argument	out		1226420	0					
ANR	1226598	Identifier	out		1226420	0					
ANR	1226599	ExpressionStatement	xmlBufferFree ( in )	739:4:28306:28323	1226420	5	True				
ANR	1226600	CallExpression	xmlBufferFree ( in )		1226420	0					
ANR	1226601	Callee	xmlBufferFree		1226420	0					
ANR	1226602	Identifier	xmlBufferFree		1226420	0					
ANR	1226603	ArgumentList	in		1226420	1					
ANR	1226604	Argument	in		1226420	0					
ANR	1226605	Identifier	in		1226420	0					
ANR	1226606	ElseStatement	else		1226420	0					
ANR	1226607	CompoundStatement		20:10:680:680	1226420	0					
ANR	1226608	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) data -> children -> content , 1 )"	741:4:28341:28392	1226420	0	True				
ANR	1226609	CallExpression	"ZVAL_STRING ( ret , ( char * ) data -> children -> content , 1 )"		1226420	0					
ANR	1226610	Callee	ZVAL_STRING		1226420	0					
ANR	1226611	Identifier	ZVAL_STRING		1226420	0					
ANR	1226612	ArgumentList	ret		1226420	1					
ANR	1226613	Argument	ret		1226420	0					
ANR	1226614	Identifier	ret		1226420	0					
ANR	1226615	Argument	( char * ) data -> children -> content		1226420	1					
ANR	1226616	CastExpression	( char * ) data -> children -> content		1226420	0					
ANR	1226617	CastTarget	char *		1226420	0					
ANR	1226618	PtrMemberAccess	data -> children -> content		1226420	1					
ANR	1226619	PtrMemberAccess	data -> children		1226420	0					
ANR	1226620	Identifier	data		1226420	0					
ANR	1226621	Identifier	children		1226420	1					
ANR	1226622	Identifier	content		1226420	1					
ANR	1226623	Argument	1		1226420	2					
ANR	1226624	PrimaryExpression	1		1226420	0					
ANR	1226625	ElseStatement	else		1226420	0					
ANR	1226626	IfStatement	if ( data -> children -> type == XML_CDATA_SECTION_NODE && data -> children -> next == NULL )		1226420	0					
ANR	1226627	Condition	data -> children -> type == XML_CDATA_SECTION_NODE && data -> children -> next == NULL	743:13:28412:28489	1226420	0	True				
ANR	1226628	AndExpression	data -> children -> type == XML_CDATA_SECTION_NODE && data -> children -> next == NULL		1226420	0		&&			
ANR	1226629	EqualityExpression	data -> children -> type == XML_CDATA_SECTION_NODE		1226420	0		==			
ANR	1226630	PtrMemberAccess	data -> children -> type		1226420	0					
ANR	1226631	PtrMemberAccess	data -> children		1226420	0					
ANR	1226632	Identifier	data		1226420	0					
ANR	1226633	Identifier	children		1226420	1					
ANR	1226634	Identifier	type		1226420	1					
ANR	1226635	Identifier	XML_CDATA_SECTION_NODE		1226420	1					
ANR	1226636	EqualityExpression	data -> children -> next == NULL		1226420	1		==			
ANR	1226637	PtrMemberAccess	data -> children -> next		1226420	0					
ANR	1226638	PtrMemberAccess	data -> children		1226420	0					
ANR	1226639	Identifier	data		1226420	0					
ANR	1226640	Identifier	children		1226420	1					
ANR	1226641	Identifier	next		1226420	1					
ANR	1226642	Identifier	NULL		1226420	1					
ANR	1226643	CompoundStatement		23:93:837:837	1226420	1					
ANR	1226644	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) data -> children -> content , 1 )"	744:3:28497:28548	1226420	0	True				
ANR	1226645	CallExpression	"ZVAL_STRING ( ret , ( char * ) data -> children -> content , 1 )"		1226420	0					
ANR	1226646	Callee	ZVAL_STRING		1226420	0					
ANR	1226647	Identifier	ZVAL_STRING		1226420	0					
ANR	1226648	ArgumentList	ret		1226420	1					
ANR	1226649	Argument	ret		1226420	0					
ANR	1226650	Identifier	ret		1226420	0					
ANR	1226651	Argument	( char * ) data -> children -> content		1226420	1					
ANR	1226652	CastExpression	( char * ) data -> children -> content		1226420	0					
ANR	1226653	CastTarget	char *		1226420	0					
ANR	1226654	PtrMemberAccess	data -> children -> content		1226420	1					
ANR	1226655	PtrMemberAccess	data -> children		1226420	0					
ANR	1226656	Identifier	data		1226420	0					
ANR	1226657	Identifier	children		1226420	1					
ANR	1226658	Identifier	content		1226420	1					
ANR	1226659	Argument	1		1226420	2					
ANR	1226660	PrimaryExpression	1		1226420	0					
ANR	1226661	ElseStatement	else		1226420	0					
ANR	1226662	CompoundStatement		25:9:904:904	1226420	0					
ANR	1226663	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	746:3:28564:28625	1226420	0	True				
ANR	1226664	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1226420	0					
ANR	1226665	Callee	soap_error0		1226420	0					
ANR	1226666	Identifier	soap_error0		1226420	0					
ANR	1226667	ArgumentList	E_ERROR		1226420	1					
ANR	1226668	Argument	E_ERROR		1226420	0					
ANR	1226669	Identifier	E_ERROR		1226420	0					
ANR	1226670	Argument	"""Encoding: Violation of encoding rules"""		1226420	1					
ANR	1226671	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1226420	0					
ANR	1226672	ElseStatement	else		1226420	0					
ANR	1226673	CompoundStatement		28:8:984:984	1226420	0					
ANR	1226674	ExpressionStatement	ZVAL_EMPTY_STRING ( ret )	749:2:28643:28665	1226420	0	True				
ANR	1226675	CallExpression	ZVAL_EMPTY_STRING ( ret )		1226420	0					
ANR	1226676	Callee	ZVAL_EMPTY_STRING		1226420	0					
ANR	1226677	Identifier	ZVAL_EMPTY_STRING		1226420	0					
ANR	1226678	ArgumentList	ret		1226420	1					
ANR	1226679	Argument	ret		1226420	0					
ANR	1226680	Identifier	ret		1226420	0					
ANR	1226681	ReturnStatement	return ret ;	751:1:28671:28681	1226420	4	True				
ANR	1226682	Identifier	ret		1226420	0					
ANR	1226683	ReturnType	static zval *		1226420	1					
ANR	1226684	Identifier	to_zval_stringr		1226420	2					
ANR	1226685	ParameterList	"encodeTypePtr type , xmlNodePtr data TSRMLS_DC"		1226420	3					
ANR	1226686	Parameter	encodeTypePtr type	720:29:27607:27624	1226420	0	True				
ANR	1226687	ParameterType	encodeTypePtr		1226420	0					
ANR	1226688	Identifier	type		1226420	1					
ANR	1226689	Parameter	xmlNodePtr data TSRMLS_DC	720:49:27627:27651	1226420	1	True				
ANR	1226690	ParameterType	xmlNodePtr data		1226420	0					
ANR	1226691	Identifier	TSRMLS_DC		1226420	1					
ANR	1226692	CFGEntryNode	ENTRY		1226420		True				
ANR	1226693	CFGExitNode	EXIT		1226420		True				
ANR	1226694	Symbol	* * data		1226420						
ANR	1226695	Symbol	data -> children -> next		1226420						
ANR	1226696	Symbol	xmlBufferCreate		1226420						
ANR	1226697	Symbol	data		1226420						
ANR	1226698	Symbol	type		1226420						
ANR	1226699	Symbol	xmlBufferCreateStatic		1226420						
ANR	1226700	Symbol	TSRMLS_DC		1226420						
ANR	1226701	Symbol	out		1226420						
ANR	1226702	Symbol	XML_TEXT_NODE		1226420						
ANR	1226703	Symbol	data -> children -> content		1226420						
ANR	1226704	Symbol	* data -> children		1226420						
ANR	1226705	Symbol	xmlCharEncOutFunc		1226420						
ANR	1226706	Symbol	ret		1226420						
ANR	1226707	Symbol	NULL		1226420						
ANR	1226708	Symbol	in		1226420						
ANR	1226709	Symbol	encoding		1226420						
ANR	1226710	Symbol	SOAP_GLOBAL		1226420						
ANR	1226711	Symbol	n		1226420						
ANR	1226712	Symbol	xmlBufferContent		1226420						
ANR	1226713	Symbol	E_ERROR		1226420						
ANR	1226714	Symbol	data -> children		1226420						
ANR	1226715	Symbol	xmlStrlen		1226420						
ANR	1226716	Symbol	XML_CDATA_SECTION_NODE		1226420						
ANR	1226717	Symbol	* data		1226420						
ANR	1226718	Symbol	data -> children -> type		1226420						
ANR	1226719	Function	to_zval_stringc	754:0:28686:29792							
ANR	1226720	FunctionDef	"to_zval_stringc (encodeTypePtr type , xmlNodePtr data TSRMLS_DC)"		1226719	0					
ANR	1226721	CompoundStatement		755:0:28762:29792	1226719	0					
ANR	1226722	IdentifierDeclStatement	zval * ret ;	756:1:28765:28774	1226719	0	True				
ANR	1226723	IdentifierDecl	* ret		1226719	0					
ANR	1226724	IdentifierDeclType	zval *		1226719	0					
ANR	1226725	Identifier	ret		1226719	1					
ANR	1226726	ExpressionStatement	MAKE_STD_ZVAL ( ret )	757:1:28777:28795	1226719	1	True				
ANR	1226727	CallExpression	MAKE_STD_ZVAL ( ret )		1226719	0					
ANR	1226728	Callee	MAKE_STD_ZVAL		1226719	0					
ANR	1226729	Identifier	MAKE_STD_ZVAL		1226719	0					
ANR	1226730	ArgumentList	ret		1226719	1					
ANR	1226731	Argument	ret		1226719	0					
ANR	1226732	Identifier	ret		1226719	0					
ANR	1226733	ExpressionStatement	"FIND_XML_NULL ( data , ret )"	758:1:28798:28822	1226719	2	True				
ANR	1226734	CallExpression	"FIND_XML_NULL ( data , ret )"		1226719	0					
ANR	1226735	Callee	FIND_XML_NULL		1226719	0					
ANR	1226736	Identifier	FIND_XML_NULL		1226719	0					
ANR	1226737	ArgumentList	data		1226719	1					
ANR	1226738	Argument	data		1226719	0					
ANR	1226739	Identifier	data		1226719	0					
ANR	1226740	Argument	ret		1226719	1					
ANR	1226741	Identifier	ret		1226719	0					
ANR	1226742	IfStatement	if ( data && data -> children )		1226719	3					
ANR	1226743	Condition	data && data -> children	759:5:28829:28850	1226719	0	True				
ANR	1226744	AndExpression	data && data -> children		1226719	0		&&			
ANR	1226745	Identifier	data		1226719	0					
ANR	1226746	PtrMemberAccess	data -> children		1226719	1					
ANR	1226747	Identifier	data		1226719	0					
ANR	1226748	Identifier	children		1226719	1					
ANR	1226749	CompoundStatement		5:29:90:90	1226719	1					
ANR	1226750	IfStatement	if ( data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL )		1226719	0					
ANR	1226751	Condition	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL	760:6:28861:28929	1226719	0	True				
ANR	1226752	AndExpression	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL		1226719	0		&&			
ANR	1226753	EqualityExpression	data -> children -> type == XML_TEXT_NODE		1226719	0		==			
ANR	1226754	PtrMemberAccess	data -> children -> type		1226719	0					
ANR	1226755	PtrMemberAccess	data -> children		1226719	0					
ANR	1226756	Identifier	data		1226719	0					
ANR	1226757	Identifier	children		1226719	1					
ANR	1226758	Identifier	type		1226719	1					
ANR	1226759	Identifier	XML_TEXT_NODE		1226719	1					
ANR	1226760	EqualityExpression	data -> children -> next == NULL		1226719	1		==			
ANR	1226761	PtrMemberAccess	data -> children -> next		1226719	0					
ANR	1226762	PtrMemberAccess	data -> children		1226719	0					
ANR	1226763	Identifier	data		1226719	0					
ANR	1226764	Identifier	children		1226719	1					
ANR	1226765	Identifier	next		1226719	1					
ANR	1226766	Identifier	NULL		1226719	1					
ANR	1226767	CompoundStatement		6:77:169:169	1226719	1					
ANR	1226768	ExpressionStatement	whiteSpace_collapse ( data -> children -> content )	761:3:28937:28981	1226719	0	True				
ANR	1226769	CallExpression	whiteSpace_collapse ( data -> children -> content )		1226719	0					
ANR	1226770	Callee	whiteSpace_collapse		1226719	0					
ANR	1226771	Identifier	whiteSpace_collapse		1226719	0					
ANR	1226772	ArgumentList	data -> children -> content		1226719	1					
ANR	1226773	Argument	data -> children -> content		1226719	0					
ANR	1226774	PtrMemberAccess	data -> children -> content		1226719	0					
ANR	1226775	PtrMemberAccess	data -> children		1226719	0					
ANR	1226776	Identifier	data		1226719	0					
ANR	1226777	Identifier	children		1226719	1					
ANR	1226778	Identifier	content		1226719	1					
ANR	1226779	IfStatement	if ( SOAP_GLOBAL ( encoding ) != NULL )		1226719	1					
ANR	1226780	Condition	SOAP_GLOBAL ( encoding ) != NULL	762:7:28990:29018	1226719	0	True				
ANR	1226781	EqualityExpression	SOAP_GLOBAL ( encoding ) != NULL		1226719	0		!=			
ANR	1226782	CallExpression	SOAP_GLOBAL ( encoding )		1226719	0					
ANR	1226783	Callee	SOAP_GLOBAL		1226719	0					
ANR	1226784	Identifier	SOAP_GLOBAL		1226719	0					
ANR	1226785	ArgumentList	encoding		1226719	1					
ANR	1226786	Argument	encoding		1226719	0					
ANR	1226787	Identifier	encoding		1226719	0					
ANR	1226788	Identifier	NULL		1226719	1					
ANR	1226789	CompoundStatement		11:4:413:470	1226719	1					
ANR	1226790	IdentifierDeclStatement	"xmlBufferPtr in = xmlBufferCreateStatic ( data -> children -> content , xmlStrlen ( data -> children -> content ) ) ;"	763:4:29027:29128	1226719	0	True				
ANR	1226791	IdentifierDecl	"in = xmlBufferCreateStatic ( data -> children -> content , xmlStrlen ( data -> children -> content ) )"		1226719	0					
ANR	1226792	IdentifierDeclType	xmlBufferPtr		1226719	0					
ANR	1226793	Identifier	in		1226719	1					
ANR	1226794	AssignmentExpression	"in = xmlBufferCreateStatic ( data -> children -> content , xmlStrlen ( data -> children -> content ) )"		1226719	2		=			
ANR	1226795	Identifier	in		1226719	0					
ANR	1226796	CallExpression	"xmlBufferCreateStatic ( data -> children -> content , xmlStrlen ( data -> children -> content ) )"		1226719	1					
ANR	1226797	Callee	xmlBufferCreateStatic		1226719	0					
ANR	1226798	Identifier	xmlBufferCreateStatic		1226719	0					
ANR	1226799	ArgumentList	data -> children -> content		1226719	1					
ANR	1226800	Argument	data -> children -> content		1226719	0					
ANR	1226801	PtrMemberAccess	data -> children -> content		1226719	0					
ANR	1226802	PtrMemberAccess	data -> children		1226719	0					
ANR	1226803	Identifier	data		1226719	0					
ANR	1226804	Identifier	children		1226719	1					
ANR	1226805	Identifier	content		1226719	1					
ANR	1226806	Argument	xmlStrlen ( data -> children -> content )		1226719	1					
ANR	1226807	CallExpression	xmlStrlen ( data -> children -> content )		1226719	0					
ANR	1226808	Callee	xmlStrlen		1226719	0					
ANR	1226809	Identifier	xmlStrlen		1226719	0					
ANR	1226810	ArgumentList	data -> children -> content		1226719	1					
ANR	1226811	Argument	data -> children -> content		1226719	0					
ANR	1226812	PtrMemberAccess	data -> children -> content		1226719	0					
ANR	1226813	PtrMemberAccess	data -> children		1226719	0					
ANR	1226814	Identifier	data		1226719	0					
ANR	1226815	Identifier	children		1226719	1					
ANR	1226816	Identifier	content		1226719	1					
ANR	1226817	IdentifierDeclStatement	xmlBufferPtr out = xmlBufferCreate ( ) ;	764:4:29134:29170	1226719	1	True				
ANR	1226818	IdentifierDecl	out = xmlBufferCreate ( )		1226719	0					
ANR	1226819	IdentifierDeclType	xmlBufferPtr		1226719	0					
ANR	1226820	Identifier	out		1226719	1					
ANR	1226821	AssignmentExpression	out = xmlBufferCreate ( )		1226719	2		=			
ANR	1226822	Identifier	out		1226719	0					
ANR	1226823	CallExpression	xmlBufferCreate ( )		1226719	1					
ANR	1226824	Callee	xmlBufferCreate		1226719	0					
ANR	1226825	Identifier	xmlBufferCreate		1226719	0					
ANR	1226826	ArgumentList			1226719	1					
ANR	1226827	IdentifierDeclStatement	"int n = xmlCharEncOutFunc ( SOAP_GLOBAL ( encoding ) , out , in ) ;"	765:4:29176:29233	1226719	2	True				
ANR	1226828	IdentifierDecl	"n = xmlCharEncOutFunc ( SOAP_GLOBAL ( encoding ) , out , in )"		1226719	0					
ANR	1226829	IdentifierDeclType	int		1226719	0					
ANR	1226830	Identifier	n		1226719	1					
ANR	1226831	AssignmentExpression	"n = xmlCharEncOutFunc ( SOAP_GLOBAL ( encoding ) , out , in )"		1226719	2		=			
ANR	1226832	Identifier	n		1226719	0					
ANR	1226833	CallExpression	"xmlCharEncOutFunc ( SOAP_GLOBAL ( encoding ) , out , in )"		1226719	1					
ANR	1226834	Callee	xmlCharEncOutFunc		1226719	0					
ANR	1226835	Identifier	xmlCharEncOutFunc		1226719	0					
ANR	1226836	ArgumentList	SOAP_GLOBAL ( encoding )		1226719	1					
ANR	1226837	Argument	SOAP_GLOBAL ( encoding )		1226719	0					
ANR	1226838	CallExpression	SOAP_GLOBAL ( encoding )		1226719	0					
ANR	1226839	Callee	SOAP_GLOBAL		1226719	0					
ANR	1226840	Identifier	SOAP_GLOBAL		1226719	0					
ANR	1226841	ArgumentList	encoding		1226719	1					
ANR	1226842	Argument	encoding		1226719	0					
ANR	1226843	Identifier	encoding		1226719	0					
ANR	1226844	Argument	out		1226719	1					
ANR	1226845	Identifier	out		1226719	0					
ANR	1226846	Argument	in		1226719	2					
ANR	1226847	Identifier	in		1226719	0					
ANR	1226848	IfStatement	if ( n >= 0 )		1226719	3					
ANR	1226849	Condition	n >= 0	767:8:29244:29249	1226719	0	True				
ANR	1226850	RelationalExpression	n >= 0		1226719	0		>=			
ANR	1226851	Identifier	n		1226719	0					
ANR	1226852	PrimaryExpression	0		1226719	1					
ANR	1226853	CompoundStatement		13:16:489:489	1226719	1					
ANR	1226854	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) xmlBufferContent ( out ) , 1 )"	768:5:29259:29308	1226719	0	True				
ANR	1226855	CallExpression	"ZVAL_STRING ( ret , ( char * ) xmlBufferContent ( out ) , 1 )"		1226719	0					
ANR	1226856	Callee	ZVAL_STRING		1226719	0					
ANR	1226857	Identifier	ZVAL_STRING		1226719	0					
ANR	1226858	ArgumentList	ret		1226719	1					
ANR	1226859	Argument	ret		1226719	0					
ANR	1226860	Identifier	ret		1226719	0					
ANR	1226861	Argument	( char * ) xmlBufferContent ( out )		1226719	1					
ANR	1226862	CastExpression	( char * ) xmlBufferContent ( out )		1226719	0					
ANR	1226863	CastTarget	char *		1226719	0					
ANR	1226864	CallExpression	xmlBufferContent ( out )		1226719	1					
ANR	1226865	Callee	xmlBufferContent		1226719	0					
ANR	1226866	Identifier	xmlBufferContent		1226719	0					
ANR	1226867	ArgumentList	out		1226719	1					
ANR	1226868	Argument	out		1226719	0					
ANR	1226869	Identifier	out		1226719	0					
ANR	1226870	Argument	1		1226719	2					
ANR	1226871	PrimaryExpression	1		1226719	0					
ANR	1226872	ElseStatement	else		1226719	0					
ANR	1226873	CompoundStatement		15:11:558:558	1226719	0					
ANR	1226874	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) data -> children -> content , 1 )"	770:5:29328:29379	1226719	0	True				
ANR	1226875	CallExpression	"ZVAL_STRING ( ret , ( char * ) data -> children -> content , 1 )"		1226719	0					
ANR	1226876	Callee	ZVAL_STRING		1226719	0					
ANR	1226877	Identifier	ZVAL_STRING		1226719	0					
ANR	1226878	ArgumentList	ret		1226719	1					
ANR	1226879	Argument	ret		1226719	0					
ANR	1226880	Identifier	ret		1226719	0					
ANR	1226881	Argument	( char * ) data -> children -> content		1226719	1					
ANR	1226882	CastExpression	( char * ) data -> children -> content		1226719	0					
ANR	1226883	CastTarget	char *		1226719	0					
ANR	1226884	PtrMemberAccess	data -> children -> content		1226719	1					
ANR	1226885	PtrMemberAccess	data -> children		1226719	0					
ANR	1226886	Identifier	data		1226719	0					
ANR	1226887	Identifier	children		1226719	1					
ANR	1226888	Identifier	content		1226719	1					
ANR	1226889	Argument	1		1226719	2					
ANR	1226890	PrimaryExpression	1		1226719	0					
ANR	1226891	ExpressionStatement	xmlBufferFree ( out )	772:4:29391:29409	1226719	4	True				
ANR	1226892	CallExpression	xmlBufferFree ( out )		1226719	0					
ANR	1226893	Callee	xmlBufferFree		1226719	0					
ANR	1226894	Identifier	xmlBufferFree		1226719	0					
ANR	1226895	ArgumentList	out		1226719	1					
ANR	1226896	Argument	out		1226719	0					
ANR	1226897	Identifier	out		1226719	0					
ANR	1226898	ExpressionStatement	xmlBufferFree ( in )	773:4:29415:29432	1226719	5	True				
ANR	1226899	CallExpression	xmlBufferFree ( in )		1226719	0					
ANR	1226900	Callee	xmlBufferFree		1226719	0					
ANR	1226901	Identifier	xmlBufferFree		1226719	0					
ANR	1226902	ArgumentList	in		1226719	1					
ANR	1226903	Argument	in		1226719	0					
ANR	1226904	Identifier	in		1226719	0					
ANR	1226905	ElseStatement	else		1226719	0					
ANR	1226906	CompoundStatement		20:10:681:681	1226719	0					
ANR	1226907	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) data -> children -> content , 1 )"	775:4:29450:29501	1226719	0	True				
ANR	1226908	CallExpression	"ZVAL_STRING ( ret , ( char * ) data -> children -> content , 1 )"		1226719	0					
ANR	1226909	Callee	ZVAL_STRING		1226719	0					
ANR	1226910	Identifier	ZVAL_STRING		1226719	0					
ANR	1226911	ArgumentList	ret		1226719	1					
ANR	1226912	Argument	ret		1226719	0					
ANR	1226913	Identifier	ret		1226719	0					
ANR	1226914	Argument	( char * ) data -> children -> content		1226719	1					
ANR	1226915	CastExpression	( char * ) data -> children -> content		1226719	0					
ANR	1226916	CastTarget	char *		1226719	0					
ANR	1226917	PtrMemberAccess	data -> children -> content		1226719	1					
ANR	1226918	PtrMemberAccess	data -> children		1226719	0					
ANR	1226919	Identifier	data		1226719	0					
ANR	1226920	Identifier	children		1226719	1					
ANR	1226921	Identifier	content		1226719	1					
ANR	1226922	Argument	1		1226719	2					
ANR	1226923	PrimaryExpression	1		1226719	0					
ANR	1226924	ElseStatement	else		1226719	0					
ANR	1226925	IfStatement	if ( data -> children -> type == XML_CDATA_SECTION_NODE && data -> children -> next == NULL )		1226719	0					
ANR	1226926	Condition	data -> children -> type == XML_CDATA_SECTION_NODE && data -> children -> next == NULL	777:13:29521:29598	1226719	0	True				
ANR	1226927	AndExpression	data -> children -> type == XML_CDATA_SECTION_NODE && data -> children -> next == NULL		1226719	0		&&			
ANR	1226928	EqualityExpression	data -> children -> type == XML_CDATA_SECTION_NODE		1226719	0		==			
ANR	1226929	PtrMemberAccess	data -> children -> type		1226719	0					
ANR	1226930	PtrMemberAccess	data -> children		1226719	0					
ANR	1226931	Identifier	data		1226719	0					
ANR	1226932	Identifier	children		1226719	1					
ANR	1226933	Identifier	type		1226719	1					
ANR	1226934	Identifier	XML_CDATA_SECTION_NODE		1226719	1					
ANR	1226935	EqualityExpression	data -> children -> next == NULL		1226719	1		==			
ANR	1226936	PtrMemberAccess	data -> children -> next		1226719	0					
ANR	1226937	PtrMemberAccess	data -> children		1226719	0					
ANR	1226938	Identifier	data		1226719	0					
ANR	1226939	Identifier	children		1226719	1					
ANR	1226940	Identifier	next		1226719	1					
ANR	1226941	Identifier	NULL		1226719	1					
ANR	1226942	CompoundStatement		23:93:838:838	1226719	1					
ANR	1226943	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) data -> children -> content , 1 )"	778:3:29606:29657	1226719	0	True				
ANR	1226944	CallExpression	"ZVAL_STRING ( ret , ( char * ) data -> children -> content , 1 )"		1226719	0					
ANR	1226945	Callee	ZVAL_STRING		1226719	0					
ANR	1226946	Identifier	ZVAL_STRING		1226719	0					
ANR	1226947	ArgumentList	ret		1226719	1					
ANR	1226948	Argument	ret		1226719	0					
ANR	1226949	Identifier	ret		1226719	0					
ANR	1226950	Argument	( char * ) data -> children -> content		1226719	1					
ANR	1226951	CastExpression	( char * ) data -> children -> content		1226719	0					
ANR	1226952	CastTarget	char *		1226719	0					
ANR	1226953	PtrMemberAccess	data -> children -> content		1226719	1					
ANR	1226954	PtrMemberAccess	data -> children		1226719	0					
ANR	1226955	Identifier	data		1226719	0					
ANR	1226956	Identifier	children		1226719	1					
ANR	1226957	Identifier	content		1226719	1					
ANR	1226958	Argument	1		1226719	2					
ANR	1226959	PrimaryExpression	1		1226719	0					
ANR	1226960	ElseStatement	else		1226719	0					
ANR	1226961	CompoundStatement		25:9:905:905	1226719	0					
ANR	1226962	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	780:3:29673:29734	1226719	0	True				
ANR	1226963	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1226719	0					
ANR	1226964	Callee	soap_error0		1226719	0					
ANR	1226965	Identifier	soap_error0		1226719	0					
ANR	1226966	ArgumentList	E_ERROR		1226719	1					
ANR	1226967	Argument	E_ERROR		1226719	0					
ANR	1226968	Identifier	E_ERROR		1226719	0					
ANR	1226969	Argument	"""Encoding: Violation of encoding rules"""		1226719	1					
ANR	1226970	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1226719	0					
ANR	1226971	ElseStatement	else		1226719	0					
ANR	1226972	CompoundStatement		28:8:985:985	1226719	0					
ANR	1226973	ExpressionStatement	ZVAL_EMPTY_STRING ( ret )	783:2:29752:29774	1226719	0	True				
ANR	1226974	CallExpression	ZVAL_EMPTY_STRING ( ret )		1226719	0					
ANR	1226975	Callee	ZVAL_EMPTY_STRING		1226719	0					
ANR	1226976	Identifier	ZVAL_EMPTY_STRING		1226719	0					
ANR	1226977	ArgumentList	ret		1226719	1					
ANR	1226978	Argument	ret		1226719	0					
ANR	1226979	Identifier	ret		1226719	0					
ANR	1226980	ReturnStatement	return ret ;	785:1:29780:29790	1226719	4	True				
ANR	1226981	Identifier	ret		1226719	0					
ANR	1226982	ReturnType	static zval *		1226719	1					
ANR	1226983	Identifier	to_zval_stringc		1226719	2					
ANR	1226984	ParameterList	"encodeTypePtr type , xmlNodePtr data TSRMLS_DC"		1226719	3					
ANR	1226985	Parameter	encodeTypePtr type	754:29:28715:28732	1226719	0	True				
ANR	1226986	ParameterType	encodeTypePtr		1226719	0					
ANR	1226987	Identifier	type		1226719	1					
ANR	1226988	Parameter	xmlNodePtr data TSRMLS_DC	754:49:28735:28759	1226719	1	True				
ANR	1226989	ParameterType	xmlNodePtr data		1226719	0					
ANR	1226990	Identifier	TSRMLS_DC		1226719	1					
ANR	1226991	CFGEntryNode	ENTRY		1226719		True				
ANR	1226992	CFGExitNode	EXIT		1226719		True				
ANR	1226993	Symbol	* * data		1226719						
ANR	1226994	Symbol	data -> children -> next		1226719						
ANR	1226995	Symbol	xmlBufferCreate		1226719						
ANR	1226996	Symbol	data		1226719						
ANR	1226997	Symbol	type		1226719						
ANR	1226998	Symbol	xmlBufferCreateStatic		1226719						
ANR	1226999	Symbol	TSRMLS_DC		1226719						
ANR	1227000	Symbol	out		1226719						
ANR	1227001	Symbol	XML_TEXT_NODE		1226719						
ANR	1227002	Symbol	data -> children -> content		1226719						
ANR	1227003	Symbol	* data -> children		1226719						
ANR	1227004	Symbol	xmlCharEncOutFunc		1226719						
ANR	1227005	Symbol	ret		1226719						
ANR	1227006	Symbol	NULL		1226719						
ANR	1227007	Symbol	in		1226719						
ANR	1227008	Symbol	encoding		1226719						
ANR	1227009	Symbol	SOAP_GLOBAL		1226719						
ANR	1227010	Symbol	n		1226719						
ANR	1227011	Symbol	xmlBufferContent		1226719						
ANR	1227012	Symbol	E_ERROR		1226719						
ANR	1227013	Symbol	data -> children		1226719						
ANR	1227014	Symbol	xmlStrlen		1226719						
ANR	1227015	Symbol	XML_CDATA_SECTION_NODE		1226719						
ANR	1227016	Symbol	* data		1226719						
ANR	1227017	Symbol	data -> children -> type		1226719						
ANR	1227018	Function	to_zval_base64	788:0:29795:30818							
ANR	1227019	FunctionDef	"to_zval_base64 (encodeTypePtr type , xmlNodePtr data TSRMLS_DC)"		1227018	0					
ANR	1227020	CompoundStatement		789:0:29870:30818	1227018	0					
ANR	1227021	IdentifierDeclStatement	zval * ret ;	790:1:29873:29882	1227018	0	True				
ANR	1227022	IdentifierDecl	* ret		1227018	0					
ANR	1227023	IdentifierDeclType	zval *		1227018	0					
ANR	1227024	Identifier	ret		1227018	1					
ANR	1227025	IdentifierDeclStatement	char * str ;	791:1:29885:29894	1227018	1	True				
ANR	1227026	IdentifierDecl	* str		1227018	0					
ANR	1227027	IdentifierDeclType	char *		1227018	0					
ANR	1227028	Identifier	str		1227018	1					
ANR	1227029	IdentifierDeclStatement	int str_len ;	792:1:29897:29908	1227018	2	True				
ANR	1227030	IdentifierDecl	str_len		1227018	0					
ANR	1227031	IdentifierDeclType	int		1227018	0					
ANR	1227032	Identifier	str_len		1227018	1					
ANR	1227033	ExpressionStatement	MAKE_STD_ZVAL ( ret )	794:1:29912:29930	1227018	3	True				
ANR	1227034	CallExpression	MAKE_STD_ZVAL ( ret )		1227018	0					
ANR	1227035	Callee	MAKE_STD_ZVAL		1227018	0					
ANR	1227036	Identifier	MAKE_STD_ZVAL		1227018	0					
ANR	1227037	ArgumentList	ret		1227018	1					
ANR	1227038	Argument	ret		1227018	0					
ANR	1227039	Identifier	ret		1227018	0					
ANR	1227040	ExpressionStatement	"FIND_XML_NULL ( data , ret )"	795:1:29933:29957	1227018	4	True				
ANR	1227041	CallExpression	"FIND_XML_NULL ( data , ret )"		1227018	0					
ANR	1227042	Callee	FIND_XML_NULL		1227018	0					
ANR	1227043	Identifier	FIND_XML_NULL		1227018	0					
ANR	1227044	ArgumentList	data		1227018	1					
ANR	1227045	Argument	data		1227018	0					
ANR	1227046	Identifier	data		1227018	0					
ANR	1227047	Argument	ret		1227018	1					
ANR	1227048	Identifier	ret		1227018	0					
ANR	1227049	IfStatement	if ( data && data -> children )		1227018	5					
ANR	1227050	Condition	data && data -> children	796:5:29964:29985	1227018	0	True				
ANR	1227051	AndExpression	data && data -> children		1227018	0		&&			
ANR	1227052	Identifier	data		1227018	0					
ANR	1227053	PtrMemberAccess	data -> children		1227018	1					
ANR	1227054	Identifier	data		1227018	0					
ANR	1227055	Identifier	children		1227018	1					
ANR	1227056	CompoundStatement		8:29:117:117	1227018	1					
ANR	1227057	IfStatement	if ( data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL )		1227018	0					
ANR	1227058	Condition	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL	797:6:29996:30064	1227018	0	True				
ANR	1227059	AndExpression	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL		1227018	0		&&			
ANR	1227060	EqualityExpression	data -> children -> type == XML_TEXT_NODE		1227018	0		==			
ANR	1227061	PtrMemberAccess	data -> children -> type		1227018	0					
ANR	1227062	PtrMemberAccess	data -> children		1227018	0					
ANR	1227063	Identifier	data		1227018	0					
ANR	1227064	Identifier	children		1227018	1					
ANR	1227065	Identifier	type		1227018	1					
ANR	1227066	Identifier	XML_TEXT_NODE		1227018	1					
ANR	1227067	EqualityExpression	data -> children -> next == NULL		1227018	1		==			
ANR	1227068	PtrMemberAccess	data -> children -> next		1227018	0					
ANR	1227069	PtrMemberAccess	data -> children		1227018	0					
ANR	1227070	Identifier	data		1227018	0					
ANR	1227071	Identifier	children		1227018	1					
ANR	1227072	Identifier	next		1227018	1					
ANR	1227073	Identifier	NULL		1227018	1					
ANR	1227074	CompoundStatement		9:77:196:196	1227018	1					
ANR	1227075	ExpressionStatement	whiteSpace_collapse ( data -> children -> content )	798:3:30072:30116	1227018	0	True				
ANR	1227076	CallExpression	whiteSpace_collapse ( data -> children -> content )		1227018	0					
ANR	1227077	Callee	whiteSpace_collapse		1227018	0					
ANR	1227078	Identifier	whiteSpace_collapse		1227018	0					
ANR	1227079	ArgumentList	data -> children -> content		1227018	1					
ANR	1227080	Argument	data -> children -> content		1227018	0					
ANR	1227081	PtrMemberAccess	data -> children -> content		1227018	0					
ANR	1227082	PtrMemberAccess	data -> children		1227018	0					
ANR	1227083	Identifier	data		1227018	0					
ANR	1227084	Identifier	children		1227018	1					
ANR	1227085	Identifier	content		1227018	1					
ANR	1227086	ExpressionStatement	"str = ( char * ) php_base64_decode ( data -> children -> content , strlen ( ( char * ) data -> children -> content ) , & str_len )"	799:3:30121:30226	1227018	1	True				
ANR	1227087	AssignmentExpression	"str = ( char * ) php_base64_decode ( data -> children -> content , strlen ( ( char * ) data -> children -> content ) , & str_len )"		1227018	0		=			
ANR	1227088	Identifier	str		1227018	0					
ANR	1227089	CastExpression	"( char * ) php_base64_decode ( data -> children -> content , strlen ( ( char * ) data -> children -> content ) , & str_len )"		1227018	1					
ANR	1227090	CastTarget	char *		1227018	0					
ANR	1227091	CallExpression	"php_base64_decode ( data -> children -> content , strlen ( ( char * ) data -> children -> content ) , & str_len )"		1227018	1					
ANR	1227092	Callee	php_base64_decode		1227018	0					
ANR	1227093	Identifier	php_base64_decode		1227018	0					
ANR	1227094	ArgumentList	data -> children -> content		1227018	1					
ANR	1227095	Argument	data -> children -> content		1227018	0					
ANR	1227096	PtrMemberAccess	data -> children -> content		1227018	0					
ANR	1227097	PtrMemberAccess	data -> children		1227018	0					
ANR	1227098	Identifier	data		1227018	0					
ANR	1227099	Identifier	children		1227018	1					
ANR	1227100	Identifier	content		1227018	1					
ANR	1227101	Argument	strlen ( ( char * ) data -> children -> content )		1227018	1					
ANR	1227102	CallExpression	strlen ( ( char * ) data -> children -> content )		1227018	0					
ANR	1227103	Callee	strlen		1227018	0					
ANR	1227104	Identifier	strlen		1227018	0					
ANR	1227105	ArgumentList	( char * ) data -> children -> content		1227018	1					
ANR	1227106	Argument	( char * ) data -> children -> content		1227018	0					
ANR	1227107	CastExpression	( char * ) data -> children -> content		1227018	0					
ANR	1227108	CastTarget	char *		1227018	0					
ANR	1227109	PtrMemberAccess	data -> children -> content		1227018	1					
ANR	1227110	PtrMemberAccess	data -> children		1227018	0					
ANR	1227111	Identifier	data		1227018	0					
ANR	1227112	Identifier	children		1227018	1					
ANR	1227113	Identifier	content		1227018	1					
ANR	1227114	Argument	& str_len		1227018	2					
ANR	1227115	UnaryOperationExpression	& str_len		1227018	0					
ANR	1227116	UnaryOperator	&		1227018	0					
ANR	1227117	Identifier	str_len		1227018	1					
ANR	1227118	IfStatement	if ( ! str )		1227018	2					
ANR	1227119	Condition	! str	800:7:30235:30238	1227018	0	True				
ANR	1227120	UnaryOperationExpression	! str		1227018	0					
ANR	1227121	UnaryOperator	!		1227018	0					
ANR	1227122	Identifier	str		1227018	1					
ANR	1227123	CompoundStatement		12:13:370:370	1227018	1					
ANR	1227124	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	801:4:30247:30308	1227018	0	True				
ANR	1227125	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1227018	0					
ANR	1227126	Callee	soap_error0		1227018	0					
ANR	1227127	Identifier	soap_error0		1227018	0					
ANR	1227128	ArgumentList	E_ERROR		1227018	1					
ANR	1227129	Argument	E_ERROR		1227018	0					
ANR	1227130	Identifier	E_ERROR		1227018	0					
ANR	1227131	Argument	"""Encoding: Violation of encoding rules"""		1227018	1					
ANR	1227132	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1227018	0					
ANR	1227133	ExpressionStatement	"ZVAL_STRINGL ( ret , str , str_len , 0 )"	803:3:30318:30352	1227018	3	True				
ANR	1227134	CallExpression	"ZVAL_STRINGL ( ret , str , str_len , 0 )"		1227018	0					
ANR	1227135	Callee	ZVAL_STRINGL		1227018	0					
ANR	1227136	Identifier	ZVAL_STRINGL		1227018	0					
ANR	1227137	ArgumentList	ret		1227018	1					
ANR	1227138	Argument	ret		1227018	0					
ANR	1227139	Identifier	ret		1227018	0					
ANR	1227140	Argument	str		1227018	1					
ANR	1227141	Identifier	str		1227018	0					
ANR	1227142	Argument	str_len		1227018	2					
ANR	1227143	Identifier	str_len		1227018	0					
ANR	1227144	Argument	0		1227018	3					
ANR	1227145	PrimaryExpression	0		1227018	0					
ANR	1227146	ElseStatement	else		1227018	0					
ANR	1227147	IfStatement	if ( data -> children -> type == XML_CDATA_SECTION_NODE && data -> children -> next == NULL )		1227018	0					
ANR	1227148	Condition	data -> children -> type == XML_CDATA_SECTION_NODE && data -> children -> next == NULL	804:13:30367:30444	1227018	0	True				
ANR	1227149	AndExpression	data -> children -> type == XML_CDATA_SECTION_NODE && data -> children -> next == NULL		1227018	0		&&			
ANR	1227150	EqualityExpression	data -> children -> type == XML_CDATA_SECTION_NODE		1227018	0		==			
ANR	1227151	PtrMemberAccess	data -> children -> type		1227018	0					
ANR	1227152	PtrMemberAccess	data -> children		1227018	0					
ANR	1227153	Identifier	data		1227018	0					
ANR	1227154	Identifier	children		1227018	1					
ANR	1227155	Identifier	type		1227018	1					
ANR	1227156	Identifier	XML_CDATA_SECTION_NODE		1227018	1					
ANR	1227157	EqualityExpression	data -> children -> next == NULL		1227018	1		==			
ANR	1227158	PtrMemberAccess	data -> children -> next		1227018	0					
ANR	1227159	PtrMemberAccess	data -> children		1227018	0					
ANR	1227160	Identifier	data		1227018	0					
ANR	1227161	Identifier	children		1227018	1					
ANR	1227162	Identifier	next		1227018	1					
ANR	1227163	Identifier	NULL		1227018	1					
ANR	1227164	CompoundStatement		16:93:576:576	1227018	1					
ANR	1227165	ExpressionStatement	"str = ( char * ) php_base64_decode ( data -> children -> content , strlen ( ( char * ) data -> children -> content ) , & str_len )"	805:3:30452:30557	1227018	0	True				
ANR	1227166	AssignmentExpression	"str = ( char * ) php_base64_decode ( data -> children -> content , strlen ( ( char * ) data -> children -> content ) , & str_len )"		1227018	0		=			
ANR	1227167	Identifier	str		1227018	0					
ANR	1227168	CastExpression	"( char * ) php_base64_decode ( data -> children -> content , strlen ( ( char * ) data -> children -> content ) , & str_len )"		1227018	1					
ANR	1227169	CastTarget	char *		1227018	0					
ANR	1227170	CallExpression	"php_base64_decode ( data -> children -> content , strlen ( ( char * ) data -> children -> content ) , & str_len )"		1227018	1					
ANR	1227171	Callee	php_base64_decode		1227018	0					
ANR	1227172	Identifier	php_base64_decode		1227018	0					
ANR	1227173	ArgumentList	data -> children -> content		1227018	1					
ANR	1227174	Argument	data -> children -> content		1227018	0					
ANR	1227175	PtrMemberAccess	data -> children -> content		1227018	0					
ANR	1227176	PtrMemberAccess	data -> children		1227018	0					
ANR	1227177	Identifier	data		1227018	0					
ANR	1227178	Identifier	children		1227018	1					
ANR	1227179	Identifier	content		1227018	1					
ANR	1227180	Argument	strlen ( ( char * ) data -> children -> content )		1227018	1					
ANR	1227181	CallExpression	strlen ( ( char * ) data -> children -> content )		1227018	0					
ANR	1227182	Callee	strlen		1227018	0					
ANR	1227183	Identifier	strlen		1227018	0					
ANR	1227184	ArgumentList	( char * ) data -> children -> content		1227018	1					
ANR	1227185	Argument	( char * ) data -> children -> content		1227018	0					
ANR	1227186	CastExpression	( char * ) data -> children -> content		1227018	0					
ANR	1227187	CastTarget	char *		1227018	0					
ANR	1227188	PtrMemberAccess	data -> children -> content		1227018	1					
ANR	1227189	PtrMemberAccess	data -> children		1227018	0					
ANR	1227190	Identifier	data		1227018	0					
ANR	1227191	Identifier	children		1227018	1					
ANR	1227192	Identifier	content		1227018	1					
ANR	1227193	Argument	& str_len		1227018	2					
ANR	1227194	UnaryOperationExpression	& str_len		1227018	0					
ANR	1227195	UnaryOperator	&		1227018	0					
ANR	1227196	Identifier	str_len		1227018	1					
ANR	1227197	IfStatement	if ( ! str )		1227018	1					
ANR	1227198	Condition	! str	806:7:30566:30569	1227018	0	True				
ANR	1227199	UnaryOperationExpression	! str		1227018	0					
ANR	1227200	UnaryOperator	!		1227018	0					
ANR	1227201	Identifier	str		1227018	1					
ANR	1227202	CompoundStatement		18:13:701:701	1227018	1					
ANR	1227203	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	807:4:30578:30639	1227018	0	True				
ANR	1227204	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1227018	0					
ANR	1227205	Callee	soap_error0		1227018	0					
ANR	1227206	Identifier	soap_error0		1227018	0					
ANR	1227207	ArgumentList	E_ERROR		1227018	1					
ANR	1227208	Argument	E_ERROR		1227018	0					
ANR	1227209	Identifier	E_ERROR		1227018	0					
ANR	1227210	Argument	"""Encoding: Violation of encoding rules"""		1227018	1					
ANR	1227211	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1227018	0					
ANR	1227212	ExpressionStatement	"ZVAL_STRINGL ( ret , str , str_len , 0 )"	809:3:30649:30683	1227018	2	True				
ANR	1227213	CallExpression	"ZVAL_STRINGL ( ret , str , str_len , 0 )"		1227018	0					
ANR	1227214	Callee	ZVAL_STRINGL		1227018	0					
ANR	1227215	Identifier	ZVAL_STRINGL		1227018	0					
ANR	1227216	ArgumentList	ret		1227018	1					
ANR	1227217	Argument	ret		1227018	0					
ANR	1227218	Identifier	ret		1227018	0					
ANR	1227219	Argument	str		1227018	1					
ANR	1227220	Identifier	str		1227018	0					
ANR	1227221	Argument	str_len		1227018	2					
ANR	1227222	Identifier	str_len		1227018	0					
ANR	1227223	Argument	0		1227018	3					
ANR	1227224	PrimaryExpression	0		1227018	0					
ANR	1227225	ElseStatement	else		1227018	0					
ANR	1227226	CompoundStatement		22:9:823:823	1227018	0					
ANR	1227227	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	811:3:30699:30760	1227018	0	True				
ANR	1227228	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1227018	0					
ANR	1227229	Callee	soap_error0		1227018	0					
ANR	1227230	Identifier	soap_error0		1227018	0					
ANR	1227231	ArgumentList	E_ERROR		1227018	1					
ANR	1227232	Argument	E_ERROR		1227018	0					
ANR	1227233	Identifier	E_ERROR		1227018	0					
ANR	1227234	Argument	"""Encoding: Violation of encoding rules"""		1227018	1					
ANR	1227235	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1227018	0					
ANR	1227236	ElseStatement	else		1227018	0					
ANR	1227237	CompoundStatement		25:8:903:903	1227018	0					
ANR	1227238	ExpressionStatement	ZVAL_EMPTY_STRING ( ret )	814:2:30778:30800	1227018	0	True				
ANR	1227239	CallExpression	ZVAL_EMPTY_STRING ( ret )		1227018	0					
ANR	1227240	Callee	ZVAL_EMPTY_STRING		1227018	0					
ANR	1227241	Identifier	ZVAL_EMPTY_STRING		1227018	0					
ANR	1227242	ArgumentList	ret		1227018	1					
ANR	1227243	Argument	ret		1227018	0					
ANR	1227244	Identifier	ret		1227018	0					
ANR	1227245	ReturnStatement	return ret ;	816:1:30806:30816	1227018	6	True				
ANR	1227246	Identifier	ret		1227018	0					
ANR	1227247	ReturnType	static zval *		1227018	1					
ANR	1227248	Identifier	to_zval_base64		1227018	2					
ANR	1227249	ParameterList	"encodeTypePtr type , xmlNodePtr data TSRMLS_DC"		1227018	3					
ANR	1227250	Parameter	encodeTypePtr type	788:28:29823:29840	1227018	0	True				
ANR	1227251	ParameterType	encodeTypePtr		1227018	0					
ANR	1227252	Identifier	type		1227018	1					
ANR	1227253	Parameter	xmlNodePtr data TSRMLS_DC	788:48:29843:29867	1227018	1	True				
ANR	1227254	ParameterType	xmlNodePtr data		1227018	0					
ANR	1227255	Identifier	TSRMLS_DC		1227018	1					
ANR	1227256	CFGEntryNode	ENTRY		1227018		True				
ANR	1227257	CFGExitNode	EXIT		1227018		True				
ANR	1227258	Symbol	ret		1227018						
ANR	1227259	Symbol	* * data		1227018						
ANR	1227260	Symbol	data -> children -> next		1227018						
ANR	1227261	Symbol	NULL		1227018						
ANR	1227262	Symbol	data		1227018						
ANR	1227263	Symbol	type		1227018						
ANR	1227264	Symbol	TSRMLS_DC		1227018						
ANR	1227265	Symbol	& str_len		1227018						
ANR	1227266	Symbol	str		1227018						
ANR	1227267	Symbol	strlen		1227018						
ANR	1227268	Symbol	XML_TEXT_NODE		1227018						
ANR	1227269	Symbol	E_ERROR		1227018						
ANR	1227270	Symbol	data -> children		1227018						
ANR	1227271	Symbol	str_len		1227018						
ANR	1227272	Symbol	data -> children -> content		1227018						
ANR	1227273	Symbol	* data -> children		1227018						
ANR	1227274	Symbol	php_base64_decode		1227018						
ANR	1227275	Symbol	XML_CDATA_SECTION_NODE		1227018						
ANR	1227276	Symbol	* data		1227018						
ANR	1227277	Symbol	data -> children -> type		1227018						
ANR	1227278	Function	to_zval_hexbin	819:0:30821:32235							
ANR	1227279	FunctionDef	"to_zval_hexbin (encodeTypePtr type , xmlNodePtr data TSRMLS_DC)"		1227278	0					
ANR	1227280	CompoundStatement		820:0:30896:32235	1227278	0					
ANR	1227281	IdentifierDeclStatement	zval * ret ;	821:1:30899:30908	1227278	0	True				
ANR	1227282	IdentifierDecl	* ret		1227278	0					
ANR	1227283	IdentifierDeclType	zval *		1227278	0					
ANR	1227284	Identifier	ret		1227278	1					
ANR	1227285	IdentifierDeclStatement	unsigned char * str ;	822:1:30911:30929	1227278	1	True				
ANR	1227286	IdentifierDecl	* str		1227278	0					
ANR	1227287	IdentifierDeclType	unsigned char *		1227278	0					
ANR	1227288	Identifier	str		1227278	1					
ANR	1227289	IdentifierDeclStatement	"int str_len , i , j ;"	823:1:30932:30949	1227278	2	True				
ANR	1227290	IdentifierDecl	str_len		1227278	0					
ANR	1227291	IdentifierDeclType	int		1227278	0					
ANR	1227292	Identifier	str_len		1227278	1					
ANR	1227293	IdentifierDecl	i		1227278	1					
ANR	1227294	IdentifierDeclType	int		1227278	0					
ANR	1227295	Identifier	i		1227278	1					
ANR	1227296	IdentifierDecl	j		1227278	2					
ANR	1227297	IdentifierDeclType	int		1227278	0					
ANR	1227298	Identifier	j		1227278	1					
ANR	1227299	IdentifierDeclStatement	unsigned char c ;	824:1:30952:30967	1227278	3	True				
ANR	1227300	IdentifierDecl	c		1227278	0					
ANR	1227301	IdentifierDeclType	unsigned char		1227278	0					
ANR	1227302	Identifier	c		1227278	1					
ANR	1227303	ExpressionStatement	MAKE_STD_ZVAL ( ret )	826:1:30971:30989	1227278	4	True				
ANR	1227304	CallExpression	MAKE_STD_ZVAL ( ret )		1227278	0					
ANR	1227305	Callee	MAKE_STD_ZVAL		1227278	0					
ANR	1227306	Identifier	MAKE_STD_ZVAL		1227278	0					
ANR	1227307	ArgumentList	ret		1227278	1					
ANR	1227308	Argument	ret		1227278	0					
ANR	1227309	Identifier	ret		1227278	0					
ANR	1227310	ExpressionStatement	"FIND_XML_NULL ( data , ret )"	827:1:30992:31016	1227278	5	True				
ANR	1227311	CallExpression	"FIND_XML_NULL ( data , ret )"		1227278	0					
ANR	1227312	Callee	FIND_XML_NULL		1227278	0					
ANR	1227313	Identifier	FIND_XML_NULL		1227278	0					
ANR	1227314	ArgumentList	data		1227278	1					
ANR	1227315	Argument	data		1227278	0					
ANR	1227316	Identifier	data		1227278	0					
ANR	1227317	Argument	ret		1227278	1					
ANR	1227318	Identifier	ret		1227278	0					
ANR	1227319	IfStatement	if ( data && data -> children )		1227278	6					
ANR	1227320	Condition	data && data -> children	828:5:31023:31044	1227278	0	True				
ANR	1227321	AndExpression	data && data -> children		1227278	0		&&			
ANR	1227322	Identifier	data		1227278	0					
ANR	1227323	PtrMemberAccess	data -> children		1227278	1					
ANR	1227324	Identifier	data		1227278	0					
ANR	1227325	Identifier	children		1227278	1					
ANR	1227326	CompoundStatement		9:29:150:150	1227278	1					
ANR	1227327	IfStatement	if ( data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL )		1227278	0					
ANR	1227328	Condition	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL	829:6:31055:31123	1227278	0	True				
ANR	1227329	AndExpression	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL		1227278	0		&&			
ANR	1227330	EqualityExpression	data -> children -> type == XML_TEXT_NODE		1227278	0		==			
ANR	1227331	PtrMemberAccess	data -> children -> type		1227278	0					
ANR	1227332	PtrMemberAccess	data -> children		1227278	0					
ANR	1227333	Identifier	data		1227278	0					
ANR	1227334	Identifier	children		1227278	1					
ANR	1227335	Identifier	type		1227278	1					
ANR	1227336	Identifier	XML_TEXT_NODE		1227278	1					
ANR	1227337	EqualityExpression	data -> children -> next == NULL		1227278	1		==			
ANR	1227338	PtrMemberAccess	data -> children -> next		1227278	0					
ANR	1227339	PtrMemberAccess	data -> children		1227278	0					
ANR	1227340	Identifier	data		1227278	0					
ANR	1227341	Identifier	children		1227278	1					
ANR	1227342	Identifier	next		1227278	1					
ANR	1227343	Identifier	NULL		1227278	1					
ANR	1227344	CompoundStatement		10:77:229:229	1227278	1					
ANR	1227345	ExpressionStatement	whiteSpace_collapse ( data -> children -> content )	830:3:31131:31175	1227278	0	True				
ANR	1227346	CallExpression	whiteSpace_collapse ( data -> children -> content )		1227278	0					
ANR	1227347	Callee	whiteSpace_collapse		1227278	0					
ANR	1227348	Identifier	whiteSpace_collapse		1227278	0					
ANR	1227349	ArgumentList	data -> children -> content		1227278	1					
ANR	1227350	Argument	data -> children -> content		1227278	0					
ANR	1227351	PtrMemberAccess	data -> children -> content		1227278	0					
ANR	1227352	PtrMemberAccess	data -> children		1227278	0					
ANR	1227353	Identifier	data		1227278	0					
ANR	1227354	Identifier	children		1227278	1					
ANR	1227355	Identifier	content		1227278	1					
ANR	1227356	ElseStatement	else		1227278	0					
ANR	1227357	IfStatement	if ( data -> children -> type != XML_CDATA_SECTION_NODE || data -> children -> next != NULL )		1227278	0					
ANR	1227358	Condition	data -> children -> type != XML_CDATA_SECTION_NODE || data -> children -> next != NULL	831:13:31190:31267	1227278	0	True				
ANR	1227359	OrExpression	data -> children -> type != XML_CDATA_SECTION_NODE || data -> children -> next != NULL		1227278	0		||			
ANR	1227360	EqualityExpression	data -> children -> type != XML_CDATA_SECTION_NODE		1227278	0		!=			
ANR	1227361	PtrMemberAccess	data -> children -> type		1227278	0					
ANR	1227362	PtrMemberAccess	data -> children		1227278	0					
ANR	1227363	Identifier	data		1227278	0					
ANR	1227364	Identifier	children		1227278	1					
ANR	1227365	Identifier	type		1227278	1					
ANR	1227366	Identifier	XML_CDATA_SECTION_NODE		1227278	1					
ANR	1227367	EqualityExpression	data -> children -> next != NULL		1227278	1		!=			
ANR	1227368	PtrMemberAccess	data -> children -> next		1227278	0					
ANR	1227369	PtrMemberAccess	data -> children		1227278	0					
ANR	1227370	Identifier	data		1227278	0					
ANR	1227371	Identifier	children		1227278	1					
ANR	1227372	Identifier	next		1227278	1					
ANR	1227373	Identifier	NULL		1227278	1					
ANR	1227374	CompoundStatement		12:93:373:373	1227278	1					
ANR	1227375	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	832:3:31275:31336	1227278	0	True				
ANR	1227376	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1227278	0					
ANR	1227377	Callee	soap_error0		1227278	0					
ANR	1227378	Identifier	soap_error0		1227278	0					
ANR	1227379	ArgumentList	E_ERROR		1227278	1					
ANR	1227380	Argument	E_ERROR		1227278	0					
ANR	1227381	Identifier	E_ERROR		1227278	0					
ANR	1227382	Argument	"""Encoding: Violation of encoding rules"""		1227278	1					
ANR	1227383	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1227278	0					
ANR	1227384	ReturnStatement	return ret ;	833:3:31341:31351	1227278	1	True				
ANR	1227385	Identifier	ret		1227278	0					
ANR	1227386	ExpressionStatement	str_len = strlen ( ( char * ) data -> children -> content ) / 2	835:2:31359:31411	1227278	1	True				
ANR	1227387	AssignmentExpression	str_len = strlen ( ( char * ) data -> children -> content ) / 2		1227278	0		=			
ANR	1227388	Identifier	str_len		1227278	0					
ANR	1227389	MultiplicativeExpression	strlen ( ( char * ) data -> children -> content ) / 2		1227278	1		/			
ANR	1227390	CallExpression	strlen ( ( char * ) data -> children -> content )		1227278	0					
ANR	1227391	Callee	strlen		1227278	0					
ANR	1227392	Identifier	strlen		1227278	0					
ANR	1227393	ArgumentList	( char * ) data -> children -> content		1227278	1					
ANR	1227394	Argument	( char * ) data -> children -> content		1227278	0					
ANR	1227395	CastExpression	( char * ) data -> children -> content		1227278	0					
ANR	1227396	CastTarget	char *		1227278	0					
ANR	1227397	PtrMemberAccess	data -> children -> content		1227278	1					
ANR	1227398	PtrMemberAccess	data -> children		1227278	0					
ANR	1227399	Identifier	data		1227278	0					
ANR	1227400	Identifier	children		1227278	1					
ANR	1227401	Identifier	content		1227278	1					
ANR	1227402	PrimaryExpression	2		1227278	1					
ANR	1227403	ExpressionStatement	str = emalloc ( str_len + 1 )	836:2:31415:31439	1227278	2	True				
ANR	1227404	AssignmentExpression	str = emalloc ( str_len + 1 )		1227278	0		=			
ANR	1227405	Identifier	str		1227278	0					
ANR	1227406	CallExpression	emalloc ( str_len + 1 )		1227278	1					
ANR	1227407	Callee	emalloc		1227278	0					
ANR	1227408	Identifier	emalloc		1227278	0					
ANR	1227409	ArgumentList	str_len + 1		1227278	1					
ANR	1227410	Argument	str_len + 1		1227278	0					
ANR	1227411	AdditiveExpression	str_len + 1		1227278	0		+			
ANR	1227412	Identifier	str_len		1227278	0					
ANR	1227413	PrimaryExpression	1		1227278	1					
ANR	1227414	ForStatement	for ( i = j = 0 ; i < str_len ; i ++ )		1227278	3					
ANR	1227415	ForInit	i = j = 0 ;	837:7:31448:31457	1227278	0	True				
ANR	1227416	AssignmentExpression	i = j = 0		1227278	0		=			
ANR	1227417	Identifier	i		1227278	0					
ANR	1227418	AssignmentExpression	j = 0		1227278	1		=			
ANR	1227419	Identifier	j		1227278	0					
ANR	1227420	PrimaryExpression	0		1227278	1					
ANR	1227421	Condition	i < str_len	837:18:31459:31469	1227278	1	True				
ANR	1227422	RelationalExpression	i < str_len		1227278	0		<			
ANR	1227423	Identifier	i		1227278	0					
ANR	1227424	Identifier	str_len		1227278	1					
ANR	1227425	PostIncDecOperationExpression	i ++	837:31:31472:31474	1227278	2	True				
ANR	1227426	Identifier	i		1227278	0					
ANR	1227427	IncDec	++		1227278	1					
ANR	1227428	CompoundStatement		18:36:580:580	1227278	3					
ANR	1227429	ExpressionStatement	c = data -> children -> content [ j ++ ]	838:3:31482:31514	1227278	0	True				
ANR	1227430	AssignmentExpression	c = data -> children -> content [ j ++ ]		1227278	0		=			
ANR	1227431	Identifier	c		1227278	0					
ANR	1227432	ArrayIndexing	data -> children -> content [ j ++ ]		1227278	1					
ANR	1227433	PtrMemberAccess	data -> children -> content		1227278	0					
ANR	1227434	PtrMemberAccess	data -> children		1227278	0					
ANR	1227435	Identifier	data		1227278	0					
ANR	1227436	Identifier	children		1227278	1					
ANR	1227437	Identifier	content		1227278	1					
ANR	1227438	PostIncDecOperationExpression	j ++		1227278	1					
ANR	1227439	Identifier	j		1227278	0					
ANR	1227440	IncDec	++		1227278	1					
ANR	1227441	IfStatement	if ( c >= '0' && c <= '9' )		1227278	1					
ANR	1227442	Condition	c >= '0' && c <= '9'	839:7:31523:31542	1227278	0	True				
ANR	1227443	AndExpression	c >= '0' && c <= '9'		1227278	0		&&			
ANR	1227444	RelationalExpression	c >= '0'		1227278	0		>=			
ANR	1227445	Identifier	c		1227278	0					
ANR	1227446	PrimaryExpression	'0'		1227278	1					
ANR	1227447	RelationalExpression	c <= '9'		1227278	1		<=			
ANR	1227448	Identifier	c		1227278	0					
ANR	1227449	PrimaryExpression	'9'		1227278	1					
ANR	1227450	CompoundStatement		20:29:648:648	1227278	1					
ANR	1227451	ExpressionStatement	str [ i ] = ( c - '0' ) << 4	840:4:31551:31574	1227278	0	True				
ANR	1227452	AssignmentExpression	str [ i ] = ( c - '0' ) << 4		1227278	0		=			
ANR	1227453	ArrayIndexing	str [ i ]		1227278	0					
ANR	1227454	Identifier	str		1227278	0					
ANR	1227455	Identifier	i		1227278	1					
ANR	1227456	ShiftExpression	( c - '0' ) << 4		1227278	1		<<			
ANR	1227457	AdditiveExpression	c - '0'		1227278	0		-			
ANR	1227458	Identifier	c		1227278	0					
ANR	1227459	PrimaryExpression	'0'		1227278	1					
ANR	1227460	PrimaryExpression	4		1227278	1					
ANR	1227461	ElseStatement	else		1227278	0					
ANR	1227462	IfStatement	if ( c >= 'a' && c <= 'f' )		1227278	0					
ANR	1227463	Condition	c >= 'a' && c <= 'f'	841:14:31590:31609	1227278	0	True				
ANR	1227464	AndExpression	c >= 'a' && c <= 'f'		1227278	0		&&			
ANR	1227465	RelationalExpression	c >= 'a'		1227278	0		>=			
ANR	1227466	Identifier	c		1227278	0					
ANR	1227467	PrimaryExpression	'a'		1227278	1					
ANR	1227468	RelationalExpression	c <= 'f'		1227278	1		<=			
ANR	1227469	Identifier	c		1227278	0					
ANR	1227470	PrimaryExpression	'f'		1227278	1					
ANR	1227471	CompoundStatement		22:36:715:715	1227278	1					
ANR	1227472	ExpressionStatement	str [ i ] = ( c - 'a' + 10 ) << 4	842:4:31618:31646	1227278	0	True				
ANR	1227473	AssignmentExpression	str [ i ] = ( c - 'a' + 10 ) << 4		1227278	0		=			
ANR	1227474	ArrayIndexing	str [ i ]		1227278	0					
ANR	1227475	Identifier	str		1227278	0					
ANR	1227476	Identifier	i		1227278	1					
ANR	1227477	ShiftExpression	( c - 'a' + 10 ) << 4		1227278	1		<<			
ANR	1227478	AdditiveExpression	c - 'a' + 10		1227278	0		-			
ANR	1227479	Identifier	c		1227278	0					
ANR	1227480	AdditiveExpression	'a' + 10		1227278	1		+			
ANR	1227481	PrimaryExpression	'a'		1227278	0					
ANR	1227482	PrimaryExpression	10		1227278	1					
ANR	1227483	PrimaryExpression	4		1227278	1					
ANR	1227484	ElseStatement	else		1227278	0					
ANR	1227485	IfStatement	if ( c >= 'A' && c <= 'F' )		1227278	0					
ANR	1227486	Condition	c >= 'A' && c <= 'F'	843:14:31662:31681	1227278	0	True				
ANR	1227487	AndExpression	c >= 'A' && c <= 'F'		1227278	0		&&			
ANR	1227488	RelationalExpression	c >= 'A'		1227278	0		>=			
ANR	1227489	Identifier	c		1227278	0					
ANR	1227490	PrimaryExpression	'A'		1227278	1					
ANR	1227491	RelationalExpression	c <= 'F'		1227278	1		<=			
ANR	1227492	Identifier	c		1227278	0					
ANR	1227493	PrimaryExpression	'F'		1227278	1					
ANR	1227494	CompoundStatement		24:36:787:787	1227278	1					
ANR	1227495	ExpressionStatement	str [ i ] = ( c - 'A' + 10 ) << 4	844:4:31690:31718	1227278	0	True				
ANR	1227496	AssignmentExpression	str [ i ] = ( c - 'A' + 10 ) << 4		1227278	0		=			
ANR	1227497	ArrayIndexing	str [ i ]		1227278	0					
ANR	1227498	Identifier	str		1227278	0					
ANR	1227499	Identifier	i		1227278	1					
ANR	1227500	ShiftExpression	( c - 'A' + 10 ) << 4		1227278	1		<<			
ANR	1227501	AdditiveExpression	c - 'A' + 10		1227278	0		-			
ANR	1227502	Identifier	c		1227278	0					
ANR	1227503	AdditiveExpression	'A' + 10		1227278	1		+			
ANR	1227504	PrimaryExpression	'A'		1227278	0					
ANR	1227505	PrimaryExpression	10		1227278	1					
ANR	1227506	PrimaryExpression	4		1227278	1					
ANR	1227507	ElseStatement	else		1227278	0					
ANR	1227508	CompoundStatement		26:10:833:833	1227278	0					
ANR	1227509	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	846:4:31736:31797	1227278	0	True				
ANR	1227510	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1227278	0					
ANR	1227511	Callee	soap_error0		1227278	0					
ANR	1227512	Identifier	soap_error0		1227278	0					
ANR	1227513	ArgumentList	E_ERROR		1227278	1					
ANR	1227514	Argument	E_ERROR		1227278	0					
ANR	1227515	Identifier	E_ERROR		1227278	0					
ANR	1227516	Argument	"""Encoding: Violation of encoding rules"""		1227278	1					
ANR	1227517	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1227278	0					
ANR	1227518	ExpressionStatement	c = data -> children -> content [ j ++ ]	848:3:31807:31839	1227278	2	True				
ANR	1227519	AssignmentExpression	c = data -> children -> content [ j ++ ]		1227278	0		=			
ANR	1227520	Identifier	c		1227278	0					
ANR	1227521	ArrayIndexing	data -> children -> content [ j ++ ]		1227278	1					
ANR	1227522	PtrMemberAccess	data -> children -> content		1227278	0					
ANR	1227523	PtrMemberAccess	data -> children		1227278	0					
ANR	1227524	Identifier	data		1227278	0					
ANR	1227525	Identifier	children		1227278	1					
ANR	1227526	Identifier	content		1227278	1					
ANR	1227527	PostIncDecOperationExpression	j ++		1227278	1					
ANR	1227528	Identifier	j		1227278	0					
ANR	1227529	IncDec	++		1227278	1					
ANR	1227530	IfStatement	if ( c >= '0' && c <= '9' )		1227278	3					
ANR	1227531	Condition	c >= '0' && c <= '9'	849:7:31848:31867	1227278	0	True				
ANR	1227532	AndExpression	c >= '0' && c <= '9'		1227278	0		&&			
ANR	1227533	RelationalExpression	c >= '0'		1227278	0		>=			
ANR	1227534	Identifier	c		1227278	0					
ANR	1227535	PrimaryExpression	'0'		1227278	1					
ANR	1227536	RelationalExpression	c <= '9'		1227278	1		<=			
ANR	1227537	Identifier	c		1227278	0					
ANR	1227538	PrimaryExpression	'9'		1227278	1					
ANR	1227539	CompoundStatement		30:29:973:973	1227278	1					
ANR	1227540	ExpressionStatement	str [ i ] |= c - '0'	850:4:31876:31893	1227278	0	True				
ANR	1227541	AssignmentExpression	str [ i ] |= c - '0'		1227278	0		|=			
ANR	1227542	ArrayIndexing	str [ i ]		1227278	0					
ANR	1227543	Identifier	str		1227278	0					
ANR	1227544	Identifier	i		1227278	1					
ANR	1227545	AdditiveExpression	c - '0'		1227278	1		-			
ANR	1227546	Identifier	c		1227278	0					
ANR	1227547	PrimaryExpression	'0'		1227278	1					
ANR	1227548	ElseStatement	else		1227278	0					
ANR	1227549	IfStatement	if ( c >= 'a' && c <= 'f' )		1227278	0					
ANR	1227550	Condition	c >= 'a' && c <= 'f'	851:14:31909:31928	1227278	0	True				
ANR	1227551	AndExpression	c >= 'a' && c <= 'f'		1227278	0		&&			
ANR	1227552	RelationalExpression	c >= 'a'		1227278	0		>=			
ANR	1227553	Identifier	c		1227278	0					
ANR	1227554	PrimaryExpression	'a'		1227278	1					
ANR	1227555	RelationalExpression	c <= 'f'		1227278	1		<=			
ANR	1227556	Identifier	c		1227278	0					
ANR	1227557	PrimaryExpression	'f'		1227278	1					
ANR	1227558	CompoundStatement		32:36:1034:1034	1227278	1					
ANR	1227559	ExpressionStatement	str [ i ] |= c - 'a' + 10	852:4:31937:31959	1227278	0	True				
ANR	1227560	AssignmentExpression	str [ i ] |= c - 'a' + 10		1227278	0		|=			
ANR	1227561	ArrayIndexing	str [ i ]		1227278	0					
ANR	1227562	Identifier	str		1227278	0					
ANR	1227563	Identifier	i		1227278	1					
ANR	1227564	AdditiveExpression	c - 'a' + 10		1227278	1		-			
ANR	1227565	Identifier	c		1227278	0					
ANR	1227566	AdditiveExpression	'a' + 10		1227278	1		+			
ANR	1227567	PrimaryExpression	'a'		1227278	0					
ANR	1227568	PrimaryExpression	10		1227278	1					
ANR	1227569	ElseStatement	else		1227278	0					
ANR	1227570	IfStatement	if ( c >= 'A' && c <= 'F' )		1227278	0					
ANR	1227571	Condition	c >= 'A' && c <= 'F'	853:14:31975:31994	1227278	0	True				
ANR	1227572	AndExpression	c >= 'A' && c <= 'F'		1227278	0		&&			
ANR	1227573	RelationalExpression	c >= 'A'		1227278	0		>=			
ANR	1227574	Identifier	c		1227278	0					
ANR	1227575	PrimaryExpression	'A'		1227278	1					
ANR	1227576	RelationalExpression	c <= 'F'		1227278	1		<=			
ANR	1227577	Identifier	c		1227278	0					
ANR	1227578	PrimaryExpression	'F'		1227278	1					
ANR	1227579	CompoundStatement		34:36:1100:1100	1227278	1					
ANR	1227580	ExpressionStatement	str [ i ] |= c - 'A' + 10	854:4:32003:32025	1227278	0	True				
ANR	1227581	AssignmentExpression	str [ i ] |= c - 'A' + 10		1227278	0		|=			
ANR	1227582	ArrayIndexing	str [ i ]		1227278	0					
ANR	1227583	Identifier	str		1227278	0					
ANR	1227584	Identifier	i		1227278	1					
ANR	1227585	AdditiveExpression	c - 'A' + 10		1227278	1		-			
ANR	1227586	Identifier	c		1227278	0					
ANR	1227587	AdditiveExpression	'A' + 10		1227278	1		+			
ANR	1227588	PrimaryExpression	'A'		1227278	0					
ANR	1227589	PrimaryExpression	10		1227278	1					
ANR	1227590	ElseStatement	else		1227278	0					
ANR	1227591	CompoundStatement		36:10:1140:1140	1227278	0					
ANR	1227592	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	856:4:32043:32104	1227278	0	True				
ANR	1227593	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1227278	0					
ANR	1227594	Callee	soap_error0		1227278	0					
ANR	1227595	Identifier	soap_error0		1227278	0					
ANR	1227596	ArgumentList	E_ERROR		1227278	1					
ANR	1227597	Argument	E_ERROR		1227278	0					
ANR	1227598	Identifier	E_ERROR		1227278	0					
ANR	1227599	Argument	"""Encoding: Violation of encoding rules"""		1227278	1					
ANR	1227600	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1227278	0					
ANR	1227601	ExpressionStatement	str [ str_len ] = '\\0'	859:2:32117:32136	1227278	4	True				
ANR	1227602	AssignmentExpression	str [ str_len ] = '\\0'		1227278	0		=			
ANR	1227603	ArrayIndexing	str [ str_len ]		1227278	0					
ANR	1227604	Identifier	str		1227278	0					
ANR	1227605	Identifier	str_len		1227278	1					
ANR	1227606	PrimaryExpression	'\\0'		1227278	1					
ANR	1227607	ExpressionStatement	"ZVAL_STRINGL ( ret , ( char * ) str , str_len , 0 )"	860:2:32140:32181	1227278	5	True				
ANR	1227608	CallExpression	"ZVAL_STRINGL ( ret , ( char * ) str , str_len , 0 )"		1227278	0					
ANR	1227609	Callee	ZVAL_STRINGL		1227278	0					
ANR	1227610	Identifier	ZVAL_STRINGL		1227278	0					
ANR	1227611	ArgumentList	ret		1227278	1					
ANR	1227612	Argument	ret		1227278	0					
ANR	1227613	Identifier	ret		1227278	0					
ANR	1227614	Argument	( char * ) str		1227278	1					
ANR	1227615	CastExpression	( char * ) str		1227278	0					
ANR	1227616	CastTarget	char *		1227278	0					
ANR	1227617	Identifier	str		1227278	1					
ANR	1227618	Argument	str_len		1227278	2					
ANR	1227619	Identifier	str_len		1227278	0					
ANR	1227620	Argument	0		1227278	3					
ANR	1227621	PrimaryExpression	0		1227278	0					
ANR	1227622	ElseStatement	else		1227278	0					
ANR	1227623	CompoundStatement		42:8:1294:1294	1227278	0					
ANR	1227624	ExpressionStatement	ZVAL_EMPTY_STRING ( ret )	862:2:32195:32217	1227278	0	True				
ANR	1227625	CallExpression	ZVAL_EMPTY_STRING ( ret )		1227278	0					
ANR	1227626	Callee	ZVAL_EMPTY_STRING		1227278	0					
ANR	1227627	Identifier	ZVAL_EMPTY_STRING		1227278	0					
ANR	1227628	ArgumentList	ret		1227278	1					
ANR	1227629	Argument	ret		1227278	0					
ANR	1227630	Identifier	ret		1227278	0					
ANR	1227631	ReturnStatement	return ret ;	864:1:32223:32233	1227278	7	True				
ANR	1227632	Identifier	ret		1227278	0					
ANR	1227633	ReturnType	static zval *		1227278	1					
ANR	1227634	Identifier	to_zval_hexbin		1227278	2					
ANR	1227635	ParameterList	"encodeTypePtr type , xmlNodePtr data TSRMLS_DC"		1227278	3					
ANR	1227636	Parameter	encodeTypePtr type	819:28:30849:30866	1227278	0	True				
ANR	1227637	ParameterType	encodeTypePtr		1227278	0					
ANR	1227638	Identifier	type		1227278	1					
ANR	1227639	Parameter	xmlNodePtr data TSRMLS_DC	819:48:30869:30893	1227278	1	True				
ANR	1227640	ParameterType	xmlNodePtr data		1227278	0					
ANR	1227641	Identifier	TSRMLS_DC		1227278	1					
ANR	1227642	CFGEntryNode	ENTRY		1227278		True				
ANR	1227643	CFGExitNode	EXIT		1227278		True				
ANR	1227644	Symbol	* * data		1227278						
ANR	1227645	Symbol	data -> children -> next		1227278						
ANR	1227646	Symbol	data		1227278						
ANR	1227647	Symbol	type		1227278						
ANR	1227648	Symbol	TSRMLS_DC		1227278						
ANR	1227649	Symbol	strlen		1227278						
ANR	1227650	Symbol	emalloc		1227278						
ANR	1227651	Symbol	XML_TEXT_NODE		1227278						
ANR	1227652	Symbol	str_len		1227278						
ANR	1227653	Symbol	data -> children -> content		1227278						
ANR	1227654	Symbol	* data -> children		1227278						
ANR	1227655	Symbol	* str		1227278						
ANR	1227656	Symbol	* data -> children -> content		1227278						
ANR	1227657	Symbol	ret		1227278						
ANR	1227658	Symbol	* str_len		1227278						
ANR	1227659	Symbol	c		1227278						
ANR	1227660	Symbol	NULL		1227278						
ANR	1227661	Symbol	i		1227278						
ANR	1227662	Symbol	j		1227278						
ANR	1227663	Symbol	str		1227278						
ANR	1227664	Symbol	E_ERROR		1227278						
ANR	1227665	Symbol	* i		1227278						
ANR	1227666	Symbol	data -> children		1227278						
ANR	1227667	Symbol	* * data -> children		1227278						
ANR	1227668	Symbol	XML_CDATA_SECTION_NODE		1227278						
ANR	1227669	Symbol	* * * data		1227278						
ANR	1227670	Symbol	* data		1227278						
ANR	1227671	Symbol	data -> children -> type		1227278						
ANR	1227672	Function	to_xml_string	867:0:32238:34291							
ANR	1227673	FunctionDef	"to_xml_string (encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1227672	0					
ANR	1227674	CompoundStatement		868:0:32342:34291	1227672	0					
ANR	1227675	IdentifierDeclStatement	"xmlNodePtr ret , text ;"	869:1:32345:32365	1227672	0	True				
ANR	1227676	IdentifierDecl	ret		1227672	0					
ANR	1227677	IdentifierDeclType	xmlNodePtr		1227672	0					
ANR	1227678	Identifier	ret		1227672	1					
ANR	1227679	IdentifierDecl	text		1227672	1					
ANR	1227680	IdentifierDeclType	xmlNodePtr		1227672	0					
ANR	1227681	Identifier	text		1227672	1					
ANR	1227682	IdentifierDeclStatement	char * str ;	870:1:32368:32377	1227672	1	True				
ANR	1227683	IdentifierDecl	* str		1227672	0					
ANR	1227684	IdentifierDeclType	char *		1227672	0					
ANR	1227685	Identifier	str		1227672	1					
ANR	1227686	IdentifierDeclStatement	int new_len ;	871:1:32380:32391	1227672	2	True				
ANR	1227687	IdentifierDecl	new_len		1227672	0					
ANR	1227688	IdentifierDeclType	int		1227672	0					
ANR	1227689	Identifier	new_len		1227672	1					
ANR	1227690	ExpressionStatement	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	873:1:32395:32436	1227672	3	True				
ANR	1227691	AssignmentExpression	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1227672	0		=			
ANR	1227692	Identifier	ret		1227672	0					
ANR	1227693	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1227672	1					
ANR	1227694	Callee	xmlNewNode		1227672	0					
ANR	1227695	Identifier	xmlNewNode		1227672	0					
ANR	1227696	ArgumentList	NULL		1227672	1					
ANR	1227697	Argument	NULL		1227672	0					
ANR	1227698	Identifier	NULL		1227672	0					
ANR	1227699	Argument	"BAD_CAST ( ""BOGUS"" )"		1227672	1					
ANR	1227700	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1227672	0					
ANR	1227701	Callee	BAD_CAST		1227672	0					
ANR	1227702	Identifier	BAD_CAST		1227672	0					
ANR	1227703	ArgumentList	"""BOGUS"""		1227672	1					
ANR	1227704	Argument	"""BOGUS"""		1227672	0					
ANR	1227705	PrimaryExpression	"""BOGUS"""		1227672	0					
ANR	1227706	ExpressionStatement	"xmlAddChild ( parent , ret )"	874:1:32439:32463	1227672	4	True				
ANR	1227707	CallExpression	"xmlAddChild ( parent , ret )"		1227672	0					
ANR	1227708	Callee	xmlAddChild		1227672	0					
ANR	1227709	Identifier	xmlAddChild		1227672	0					
ANR	1227710	ArgumentList	parent		1227672	1					
ANR	1227711	Argument	parent		1227672	0					
ANR	1227712	Identifier	parent		1227672	0					
ANR	1227713	Argument	ret		1227672	1					
ANR	1227714	Identifier	ret		1227672	0					
ANR	1227715	ExpressionStatement	"FIND_ZVAL_NULL ( data , ret , style )"	875:1:32466:32498	1227672	5	True				
ANR	1227716	CallExpression	"FIND_ZVAL_NULL ( data , ret , style )"		1227672	0					
ANR	1227717	Callee	FIND_ZVAL_NULL		1227672	0					
ANR	1227718	Identifier	FIND_ZVAL_NULL		1227672	0					
ANR	1227719	ArgumentList	data		1227672	1					
ANR	1227720	Argument	data		1227672	0					
ANR	1227721	Identifier	data		1227672	0					
ANR	1227722	Argument	ret		1227672	1					
ANR	1227723	Identifier	ret		1227672	0					
ANR	1227724	Argument	style		1227672	2					
ANR	1227725	Identifier	style		1227672	0					
ANR	1227726	IfStatement	if ( Z_TYPE_P ( data ) == IS_STRING )		1227672	6					
ANR	1227727	Condition	Z_TYPE_P ( data ) == IS_STRING	877:5:32506:32532	1227672	0	True				
ANR	1227728	EqualityExpression	Z_TYPE_P ( data ) == IS_STRING		1227672	0		==			
ANR	1227729	CallExpression	Z_TYPE_P ( data )		1227672	0					
ANR	1227730	Callee	Z_TYPE_P		1227672	0					
ANR	1227731	Identifier	Z_TYPE_P		1227672	0					
ANR	1227732	ArgumentList	data		1227672	1					
ANR	1227733	Argument	data		1227672	0					
ANR	1227734	Identifier	data		1227672	0					
ANR	1227735	Identifier	IS_STRING		1227672	1					
ANR	1227736	CompoundStatement		10:34:192:192	1227672	1					
ANR	1227737	ExpressionStatement	"str = estrndup ( Z_STRVAL_P ( data ) , Z_STRLEN_P ( data ) )"	878:2:32539:32589	1227672	0	True				
ANR	1227738	AssignmentExpression	"str = estrndup ( Z_STRVAL_P ( data ) , Z_STRLEN_P ( data ) )"		1227672	0		=			
ANR	1227739	Identifier	str		1227672	0					
ANR	1227740	CallExpression	"estrndup ( Z_STRVAL_P ( data ) , Z_STRLEN_P ( data ) )"		1227672	1					
ANR	1227741	Callee	estrndup		1227672	0					
ANR	1227742	Identifier	estrndup		1227672	0					
ANR	1227743	ArgumentList	Z_STRVAL_P ( data )		1227672	1					
ANR	1227744	Argument	Z_STRVAL_P ( data )		1227672	0					
ANR	1227745	CallExpression	Z_STRVAL_P ( data )		1227672	0					
ANR	1227746	Callee	Z_STRVAL_P		1227672	0					
ANR	1227747	Identifier	Z_STRVAL_P		1227672	0					
ANR	1227748	ArgumentList	data		1227672	1					
ANR	1227749	Argument	data		1227672	0					
ANR	1227750	Identifier	data		1227672	0					
ANR	1227751	Argument	Z_STRLEN_P ( data )		1227672	1					
ANR	1227752	CallExpression	Z_STRLEN_P ( data )		1227672	0					
ANR	1227753	Callee	Z_STRLEN_P		1227672	0					
ANR	1227754	Identifier	Z_STRLEN_P		1227672	0					
ANR	1227755	ArgumentList	data		1227672	1					
ANR	1227756	Argument	data		1227672	0					
ANR	1227757	Identifier	data		1227672	0					
ANR	1227758	ExpressionStatement	new_len = Z_STRLEN_P ( data )	879:2:32593:32619	1227672	1	True				
ANR	1227759	AssignmentExpression	new_len = Z_STRLEN_P ( data )		1227672	0		=			
ANR	1227760	Identifier	new_len		1227672	0					
ANR	1227761	CallExpression	Z_STRLEN_P ( data )		1227672	1					
ANR	1227762	Callee	Z_STRLEN_P		1227672	0					
ANR	1227763	Identifier	Z_STRLEN_P		1227672	0					
ANR	1227764	ArgumentList	data		1227672	1					
ANR	1227765	Argument	data		1227672	0					
ANR	1227766	Identifier	data		1227672	0					
ANR	1227767	ElseStatement	else		1227672	0					
ANR	1227768	CompoundStatement		14:2:290:306	1227672	0					
ANR	1227769	IdentifierDeclStatement	zval tmp = * data ;	881:2:32633:32649	1227672	0	True				
ANR	1227770	IdentifierDecl	tmp = * data		1227672	0					
ANR	1227771	IdentifierDeclType	zval		1227672	0					
ANR	1227772	Identifier	tmp		1227672	1					
ANR	1227773	AssignmentExpression	tmp = * data		1227672	2		=			
ANR	1227774	Identifier	tmp		1227672	0					
ANR	1227775	UnaryOperationExpression	* data		1227672	1					
ANR	1227776	UnaryOperator	*		1227672	0					
ANR	1227777	Identifier	data		1227672	1					
ANR	1227778	ExpressionStatement	zval_copy_ctor ( & tmp )	883:2:32654:32674	1227672	1	True				
ANR	1227779	CallExpression	zval_copy_ctor ( & tmp )		1227672	0					
ANR	1227780	Callee	zval_copy_ctor		1227672	0					
ANR	1227781	Identifier	zval_copy_ctor		1227672	0					
ANR	1227782	ArgumentList	& tmp		1227672	1					
ANR	1227783	Argument	& tmp		1227672	0					
ANR	1227784	UnaryOperationExpression	& tmp		1227672	0					
ANR	1227785	UnaryOperator	&		1227672	0					
ANR	1227786	Identifier	tmp		1227672	1					
ANR	1227787	ExpressionStatement	convert_to_string ( & tmp )	884:2:32678:32701	1227672	2	True				
ANR	1227788	CallExpression	convert_to_string ( & tmp )		1227672	0					
ANR	1227789	Callee	convert_to_string		1227672	0					
ANR	1227790	Identifier	convert_to_string		1227672	0					
ANR	1227791	ArgumentList	& tmp		1227672	1					
ANR	1227792	Argument	& tmp		1227672	0					
ANR	1227793	UnaryOperationExpression	& tmp		1227672	0					
ANR	1227794	UnaryOperator	&		1227672	0					
ANR	1227795	Identifier	tmp		1227672	1					
ANR	1227796	ExpressionStatement	"str = estrndup ( Z_STRVAL ( tmp ) , Z_STRLEN ( tmp ) )"	885:2:32705:32749	1227672	3	True				
ANR	1227797	AssignmentExpression	"str = estrndup ( Z_STRVAL ( tmp ) , Z_STRLEN ( tmp ) )"		1227672	0		=			
ANR	1227798	Identifier	str		1227672	0					
ANR	1227799	CallExpression	"estrndup ( Z_STRVAL ( tmp ) , Z_STRLEN ( tmp ) )"		1227672	1					
ANR	1227800	Callee	estrndup		1227672	0					
ANR	1227801	Identifier	estrndup		1227672	0					
ANR	1227802	ArgumentList	Z_STRVAL ( tmp )		1227672	1					
ANR	1227803	Argument	Z_STRVAL ( tmp )		1227672	0					
ANR	1227804	CallExpression	Z_STRVAL ( tmp )		1227672	0					
ANR	1227805	Callee	Z_STRVAL		1227672	0					
ANR	1227806	Identifier	Z_STRVAL		1227672	0					
ANR	1227807	ArgumentList	tmp		1227672	1					
ANR	1227808	Argument	tmp		1227672	0					
ANR	1227809	Identifier	tmp		1227672	0					
ANR	1227810	Argument	Z_STRLEN ( tmp )		1227672	1					
ANR	1227811	CallExpression	Z_STRLEN ( tmp )		1227672	0					
ANR	1227812	Callee	Z_STRLEN		1227672	0					
ANR	1227813	Identifier	Z_STRLEN		1227672	0					
ANR	1227814	ArgumentList	tmp		1227672	1					
ANR	1227815	Argument	tmp		1227672	0					
ANR	1227816	Identifier	tmp		1227672	0					
ANR	1227817	ExpressionStatement	new_len = Z_STRLEN ( tmp )	886:2:32753:32776	1227672	4	True				
ANR	1227818	AssignmentExpression	new_len = Z_STRLEN ( tmp )		1227672	0		=			
ANR	1227819	Identifier	new_len		1227672	0					
ANR	1227820	CallExpression	Z_STRLEN ( tmp )		1227672	1					
ANR	1227821	Callee	Z_STRLEN		1227672	0					
ANR	1227822	Identifier	Z_STRLEN		1227672	0					
ANR	1227823	ArgumentList	tmp		1227672	1					
ANR	1227824	Argument	tmp		1227672	0					
ANR	1227825	Identifier	tmp		1227672	0					
ANR	1227826	ExpressionStatement	zval_dtor ( & tmp )	887:2:32780:32795	1227672	5	True				
ANR	1227827	CallExpression	zval_dtor ( & tmp )		1227672	0					
ANR	1227828	Callee	zval_dtor		1227672	0					
ANR	1227829	Identifier	zval_dtor		1227672	0					
ANR	1227830	ArgumentList	& tmp		1227672	1					
ANR	1227831	Argument	& tmp		1227672	0					
ANR	1227832	UnaryOperationExpression	& tmp		1227672	0					
ANR	1227833	UnaryOperator	&		1227672	0					
ANR	1227834	Identifier	tmp		1227672	1					
ANR	1227835	IfStatement	if ( SOAP_GLOBAL ( encoding ) != NULL )		1227672	7					
ANR	1227836	Condition	SOAP_GLOBAL ( encoding ) != NULL	890:5:32806:32834	1227672	0	True				
ANR	1227837	EqualityExpression	SOAP_GLOBAL ( encoding ) != NULL		1227672	0		!=			
ANR	1227838	CallExpression	SOAP_GLOBAL ( encoding )		1227672	0					
ANR	1227839	Callee	SOAP_GLOBAL		1227672	0					
ANR	1227840	Identifier	SOAP_GLOBAL		1227672	0					
ANR	1227841	ArgumentList	encoding		1227672	1					
ANR	1227842	Argument	encoding		1227672	0					
ANR	1227843	Identifier	encoding		1227672	0					
ANR	1227844	Identifier	NULL		1227672	1					
ANR	1227845	CompoundStatement		26:2:596:652	1227672	1					
ANR	1227846	IdentifierDeclStatement	"xmlBufferPtr in = xmlBufferCreateStatic ( str , new_len ) ;"	891:2:32841:32895	1227672	0	True				
ANR	1227847	IdentifierDecl	"in = xmlBufferCreateStatic ( str , new_len )"		1227672	0					
ANR	1227848	IdentifierDeclType	xmlBufferPtr		1227672	0					
ANR	1227849	Identifier	in		1227672	1					
ANR	1227850	AssignmentExpression	"in = xmlBufferCreateStatic ( str , new_len )"		1227672	2		=			
ANR	1227851	Identifier	in		1227672	0					
ANR	1227852	CallExpression	"xmlBufferCreateStatic ( str , new_len )"		1227672	1					
ANR	1227853	Callee	xmlBufferCreateStatic		1227672	0					
ANR	1227854	Identifier	xmlBufferCreateStatic		1227672	0					
ANR	1227855	ArgumentList	str		1227672	1					
ANR	1227856	Argument	str		1227672	0					
ANR	1227857	Identifier	str		1227672	0					
ANR	1227858	Argument	new_len		1227672	1					
ANR	1227859	Identifier	new_len		1227672	0					
ANR	1227860	IdentifierDeclStatement	xmlBufferPtr out = xmlBufferCreate ( ) ;	892:2:32899:32935	1227672	1	True				
ANR	1227861	IdentifierDecl	out = xmlBufferCreate ( )		1227672	0					
ANR	1227862	IdentifierDeclType	xmlBufferPtr		1227672	0					
ANR	1227863	Identifier	out		1227672	1					
ANR	1227864	AssignmentExpression	out = xmlBufferCreate ( )		1227672	2		=			
ANR	1227865	Identifier	out		1227672	0					
ANR	1227866	CallExpression	xmlBufferCreate ( )		1227672	1					
ANR	1227867	Callee	xmlBufferCreate		1227672	0					
ANR	1227868	Identifier	xmlBufferCreate		1227672	0					
ANR	1227869	ArgumentList			1227672	1					
ANR	1227870	IdentifierDeclStatement	"int n = xmlCharEncInFunc ( SOAP_GLOBAL ( encoding ) , out , in ) ;"	893:2:32939:32995	1227672	2	True				
ANR	1227871	IdentifierDecl	"n = xmlCharEncInFunc ( SOAP_GLOBAL ( encoding ) , out , in )"		1227672	0					
ANR	1227872	IdentifierDeclType	int		1227672	0					
ANR	1227873	Identifier	n		1227672	1					
ANR	1227874	AssignmentExpression	"n = xmlCharEncInFunc ( SOAP_GLOBAL ( encoding ) , out , in )"		1227672	2		=			
ANR	1227875	Identifier	n		1227672	0					
ANR	1227876	CallExpression	"xmlCharEncInFunc ( SOAP_GLOBAL ( encoding ) , out , in )"		1227672	1					
ANR	1227877	Callee	xmlCharEncInFunc		1227672	0					
ANR	1227878	Identifier	xmlCharEncInFunc		1227672	0					
ANR	1227879	ArgumentList	SOAP_GLOBAL ( encoding )		1227672	1					
ANR	1227880	Argument	SOAP_GLOBAL ( encoding )		1227672	0					
ANR	1227881	CallExpression	SOAP_GLOBAL ( encoding )		1227672	0					
ANR	1227882	Callee	SOAP_GLOBAL		1227672	0					
ANR	1227883	Identifier	SOAP_GLOBAL		1227672	0					
ANR	1227884	ArgumentList	encoding		1227672	1					
ANR	1227885	Argument	encoding		1227672	0					
ANR	1227886	Identifier	encoding		1227672	0					
ANR	1227887	Argument	out		1227672	1					
ANR	1227888	Identifier	out		1227672	0					
ANR	1227889	Argument	in		1227672	2					
ANR	1227890	Identifier	in		1227672	0					
ANR	1227891	IfStatement	if ( n >= 0 )		1227672	3					
ANR	1227892	Condition	n >= 0	895:6:33004:33009	1227672	0	True				
ANR	1227893	RelationalExpression	n >= 0		1227672	0		>=			
ANR	1227894	Identifier	n		1227672	0					
ANR	1227895	PrimaryExpression	0		1227672	1					
ANR	1227896	CompoundStatement		28:14:669:669	1227672	1					
ANR	1227897	ExpressionStatement	efree ( str )	896:3:33017:33027	1227672	0	True				
ANR	1227898	CallExpression	efree ( str )		1227672	0					
ANR	1227899	Callee	efree		1227672	0					
ANR	1227900	Identifier	efree		1227672	0					
ANR	1227901	ArgumentList	str		1227672	1					
ANR	1227902	Argument	str		1227672	0					
ANR	1227903	Identifier	str		1227672	0					
ANR	1227904	ExpressionStatement	str = estrdup ( ( char * ) xmlBufferContent ( out ) )	897:3:33032:33075	1227672	1	True				
ANR	1227905	AssignmentExpression	str = estrdup ( ( char * ) xmlBufferContent ( out ) )		1227672	0		=			
ANR	1227906	Identifier	str		1227672	0					
ANR	1227907	CallExpression	estrdup ( ( char * ) xmlBufferContent ( out ) )		1227672	1					
ANR	1227908	Callee	estrdup		1227672	0					
ANR	1227909	Identifier	estrdup		1227672	0					
ANR	1227910	ArgumentList	( char * ) xmlBufferContent ( out )		1227672	1					
ANR	1227911	Argument	( char * ) xmlBufferContent ( out )		1227672	0					
ANR	1227912	CastExpression	( char * ) xmlBufferContent ( out )		1227672	0					
ANR	1227913	CastTarget	char *		1227672	0					
ANR	1227914	CallExpression	xmlBufferContent ( out )		1227672	1					
ANR	1227915	Callee	xmlBufferContent		1227672	0					
ANR	1227916	Identifier	xmlBufferContent		1227672	0					
ANR	1227917	ArgumentList	out		1227672	1					
ANR	1227918	Argument	out		1227672	0					
ANR	1227919	Identifier	out		1227672	0					
ANR	1227920	ExpressionStatement	new_len = n	898:3:33080:33091	1227672	2	True				
ANR	1227921	AssignmentExpression	new_len = n		1227672	0		=			
ANR	1227922	Identifier	new_len		1227672	0					
ANR	1227923	Identifier	n		1227672	1					
ANR	1227924	ExpressionStatement	xmlBufferFree ( out )	900:2:33099:33117	1227672	4	True				
ANR	1227925	CallExpression	xmlBufferFree ( out )		1227672	0					
ANR	1227926	Callee	xmlBufferFree		1227672	0					
ANR	1227927	Identifier	xmlBufferFree		1227672	0					
ANR	1227928	ArgumentList	out		1227672	1					
ANR	1227929	Argument	out		1227672	0					
ANR	1227930	Identifier	out		1227672	0					
ANR	1227931	ExpressionStatement	xmlBufferFree ( in )	901:2:33121:33138	1227672	5	True				
ANR	1227932	CallExpression	xmlBufferFree ( in )		1227672	0					
ANR	1227933	Callee	xmlBufferFree		1227672	0					
ANR	1227934	Identifier	xmlBufferFree		1227672	0					
ANR	1227935	ArgumentList	in		1227672	1					
ANR	1227936	Argument	in		1227672	0					
ANR	1227937	Identifier	in		1227672	0					
ANR	1227938	IfStatement	if ( ! php_libxml_xmlCheckUTF8 ( BAD_CAST ( str ) ) )		1227672	8					
ANR	1227939	Condition	! php_libxml_xmlCheckUTF8 ( BAD_CAST ( str ) )	904:5:33149:33187	1227672	0	True				
ANR	1227940	UnaryOperationExpression	! php_libxml_xmlCheckUTF8 ( BAD_CAST ( str ) )		1227672	0					
ANR	1227941	UnaryOperator	!		1227672	0					
ANR	1227942	CallExpression	php_libxml_xmlCheckUTF8 ( BAD_CAST ( str ) )		1227672	1					
ANR	1227943	Callee	php_libxml_xmlCheckUTF8		1227672	0					
ANR	1227944	Identifier	php_libxml_xmlCheckUTF8		1227672	0					
ANR	1227945	ArgumentList	BAD_CAST ( str )		1227672	1					
ANR	1227946	Argument	BAD_CAST ( str )		1227672	0					
ANR	1227947	CallExpression	BAD_CAST ( str )		1227672	0					
ANR	1227948	Callee	BAD_CAST		1227672	0					
ANR	1227949	Identifier	BAD_CAST		1227672	0					
ANR	1227950	ArgumentList	str		1227672	1					
ANR	1227951	Argument	str		1227672	0					
ANR	1227952	Identifier	str		1227672	0					
ANR	1227953	CompoundStatement		40:2:897:902	1227672	1					
ANR	1227954	IdentifierDeclStatement	char * err = emalloc ( new_len + 8 ) ;	905:2:33194:33226	1227672	0	True				
ANR	1227955	IdentifierDecl	* err = emalloc ( new_len + 8 )		1227672	0					
ANR	1227956	IdentifierDeclType	char *		1227672	0					
ANR	1227957	Identifier	err		1227672	1					
ANR	1227958	AssignmentExpression	* err = emalloc ( new_len + 8 )		1227672	2		=			
ANR	1227959	Identifier	err		1227672	0					
ANR	1227960	CallExpression	emalloc ( new_len + 8 )		1227672	1					
ANR	1227961	Callee	emalloc		1227672	0					
ANR	1227962	Identifier	emalloc		1227672	0					
ANR	1227963	ArgumentList	new_len + 8		1227672	1					
ANR	1227964	Argument	new_len + 8		1227672	0					
ANR	1227965	AdditiveExpression	new_len + 8		1227672	0		+			
ANR	1227966	Identifier	new_len		1227672	0					
ANR	1227967	PrimaryExpression	8		1227672	1					
ANR	1227968	IdentifierDeclStatement	char c ;	906:2:33230:33236	1227672	1	True				
ANR	1227969	IdentifierDecl	c		1227672	0					
ANR	1227970	IdentifierDeclType	char		1227672	0					
ANR	1227971	Identifier	c		1227672	1					
ANR	1227972	IdentifierDeclStatement	int i ;	907:2:33240:33245	1227672	2	True				
ANR	1227973	IdentifierDecl	i		1227672	0					
ANR	1227974	IdentifierDeclType	int		1227672	0					
ANR	1227975	Identifier	i		1227672	1					
ANR	1227976	ExpressionStatement	"memcpy ( err , str , new_len + 1 )"	909:2:33252:33279	1227672	3	True				
ANR	1227977	CallExpression	"memcpy ( err , str , new_len + 1 )"		1227672	0					
ANR	1227978	Callee	memcpy		1227672	0					
ANR	1227979	Identifier	memcpy		1227672	0					
ANR	1227980	ArgumentList	err		1227672	1					
ANR	1227981	Argument	err		1227672	0					
ANR	1227982	Identifier	err		1227672	0					
ANR	1227983	Argument	str		1227672	1					
ANR	1227984	Identifier	str		1227672	0					
ANR	1227985	Argument	new_len + 1		1227672	2					
ANR	1227986	AdditiveExpression	new_len + 1		1227672	0		+			
ANR	1227987	Identifier	new_len		1227672	0					
ANR	1227988	PrimaryExpression	1		1227672	1					
ANR	1227989	ForStatement	for ( i = 0 ; ( c = err [ i ++ ] ) ; )		1227672	4					
ANR	1227990	ForInit	i = 0 ;	910:7:33288:33293	1227672	0	True				
ANR	1227991	AssignmentExpression	i = 0		1227672	0		=			
ANR	1227992	Identifier	i		1227672	0					
ANR	1227993	PrimaryExpression	0		1227672	1					
ANR	1227994	Condition	c = err [ i ++ ]	910:14:33295:33308	1227672	1	True				
ANR	1227995	AssignmentExpression	c = err [ i ++ ]		1227672	0		=			
ANR	1227996	Identifier	c		1227672	0					
ANR	1227997	ArrayIndexing	err [ i ++ ]		1227672	1					
ANR	1227998	Identifier	err		1227672	0					
ANR	1227999	PostIncDecOperationExpression	i ++		1227672	1					
ANR	1228000	Identifier	i		1227672	0					
ANR	1228001	IncDec	++		1227672	1					
ANR	1228002	CompoundStatement		43:31:969:969	1227672	2					
ANR	1228003	IfStatement	if ( ( c & 0x80 ) == 0 )		1227672	0					
ANR	1228004	Condition	( c & 0x80 ) == 0	911:7:33321:33335	1227672	0	True				
ANR	1228005	EqualityExpression	( c & 0x80 ) == 0		1227672	0		==			
ANR	1228006	BitAndExpression	c & 0x80		1227672	0		&			
ANR	1228007	Identifier	c		1227672	0					
ANR	1228008	PrimaryExpression	0x80		1227672	1					
ANR	1228009	PrimaryExpression	0		1227672	1					
ANR	1228010	CompoundStatement		44:24:995:995	1227672	1					
ANR	1228011	ElseStatement	else		1227672	0					
ANR	1228012	IfStatement	if ( ( c & 0xe0 ) == 0xc0 )		1227672	0					
ANR	1228013	Condition	( c & 0xe0 ) == 0xc0	912:14:33354:33371	1227672	0	True				
ANR	1228014	EqualityExpression	( c & 0xe0 ) == 0xc0		1227672	0		==			
ANR	1228015	BitAndExpression	c & 0xe0		1227672	0		&			
ANR	1228016	Identifier	c		1227672	0					
ANR	1228017	PrimaryExpression	0xe0		1227672	1					
ANR	1228018	PrimaryExpression	0xc0		1227672	1					
ANR	1228019	CompoundStatement		45:34:1031:1031	1227672	1					
ANR	1228020	IfStatement	if ( ( err [ i ] & 0xc0 ) != 0x80 )		1227672	0					
ANR	1228021	Condition	( err [ i ] & 0xc0 ) != 0x80	913:8:33384:33406	1227672	0	True				
ANR	1228022	EqualityExpression	( err [ i ] & 0xc0 ) != 0x80		1227672	0		!=			
ANR	1228023	BitAndExpression	err [ i ] & 0xc0		1227672	0		&			
ANR	1228024	ArrayIndexing	err [ i ]		1227672	0					
ANR	1228025	Identifier	err		1227672	0					
ANR	1228026	Identifier	i		1227672	1					
ANR	1228027	PrimaryExpression	0xc0		1227672	1					
ANR	1228028	PrimaryExpression	0x80		1227672	1					
ANR	1228029	CompoundStatement		46:33:1066:1066	1227672	1					
ANR	1228030	BreakStatement	break ;	914:5:33416:33421	1227672	0	True				
ANR	1228031	ExpressionStatement	i ++	916:4:33433:33436	1227672	1	True				
ANR	1228032	PostIncDecOperationExpression	i ++		1227672	0					
ANR	1228033	Identifier	i		1227672	0					
ANR	1228034	IncDec	++		1227672	1					
ANR	1228035	ElseStatement	else		1227672	0					
ANR	1228036	IfStatement	if ( ( c & 0xf0 ) == 0xe0 )		1227672	0					
ANR	1228037	Condition	( c & 0xf0 ) == 0xe0	917:14:33452:33469	1227672	0	True				
ANR	1228038	EqualityExpression	( c & 0xf0 ) == 0xe0		1227672	0		==			
ANR	1228039	BitAndExpression	c & 0xf0		1227672	0		&			
ANR	1228040	Identifier	c		1227672	0					
ANR	1228041	PrimaryExpression	0xf0		1227672	1					
ANR	1228042	PrimaryExpression	0xe0		1227672	1					
ANR	1228043	CompoundStatement		50:34:1129:1129	1227672	1					
ANR	1228044	IfStatement	if ( ( err [ i ] & 0xc0 ) != 0x80 || ( err [ i + 1 ] & 0xc0 ) != 0x80 )		1227672	0					
ANR	1228045	Condition	( err [ i ] & 0xc0 ) != 0x80 || ( err [ i + 1 ] & 0xc0 ) != 0x80	918:8:33482:33533	1227672	0	True				
ANR	1228046	OrExpression	( err [ i ] & 0xc0 ) != 0x80 || ( err [ i + 1 ] & 0xc0 ) != 0x80		1227672	0		||			
ANR	1228047	EqualityExpression	( err [ i ] & 0xc0 ) != 0x80		1227672	0		!=			
ANR	1228048	BitAndExpression	err [ i ] & 0xc0		1227672	0		&			
ANR	1228049	ArrayIndexing	err [ i ]		1227672	0					
ANR	1228050	Identifier	err		1227672	0					
ANR	1228051	Identifier	i		1227672	1					
ANR	1228052	PrimaryExpression	0xc0		1227672	1					
ANR	1228053	PrimaryExpression	0x80		1227672	1					
ANR	1228054	EqualityExpression	( err [ i + 1 ] & 0xc0 ) != 0x80		1227672	1		!=			
ANR	1228055	BitAndExpression	err [ i + 1 ] & 0xc0		1227672	0		&			
ANR	1228056	ArrayIndexing	err [ i + 1 ]		1227672	0					
ANR	1228057	Identifier	err		1227672	0					
ANR	1228058	AdditiveExpression	i + 1		1227672	1		+			
ANR	1228059	Identifier	i		1227672	0					
ANR	1228060	PrimaryExpression	1		1227672	1					
ANR	1228061	PrimaryExpression	0xc0		1227672	1					
ANR	1228062	PrimaryExpression	0x80		1227672	1					
ANR	1228063	CompoundStatement		51:62:1193:1193	1227672	1					
ANR	1228064	BreakStatement	break ;	919:5:33543:33548	1227672	0	True				
ANR	1228065	ExpressionStatement	i += 2	921:4:33560:33566	1227672	1	True				
ANR	1228066	AssignmentExpression	i += 2		1227672	0		+=			
ANR	1228067	Identifier	i		1227672	0					
ANR	1228068	PrimaryExpression	2		1227672	1					
ANR	1228069	ElseStatement	else		1227672	0					
ANR	1228070	IfStatement	if ( ( c & 0xf8 ) == 0xf0 )		1227672	0					
ANR	1228071	Condition	( c & 0xf8 ) == 0xf0	922:14:33582:33599	1227672	0	True				
ANR	1228072	EqualityExpression	( c & 0xf8 ) == 0xf0		1227672	0		==			
ANR	1228073	BitAndExpression	c & 0xf8		1227672	0		&			
ANR	1228074	Identifier	c		1227672	0					
ANR	1228075	PrimaryExpression	0xf8		1227672	1					
ANR	1228076	PrimaryExpression	0xf0		1227672	1					
ANR	1228077	CompoundStatement		55:34:1259:1259	1227672	1					
ANR	1228078	IfStatement	if ( ( err [ i ] & 0xc0 ) != 0x80 || ( err [ i + 1 ] & 0xc0 ) != 0x80 || ( err [ i + 2 ] & 0xc0 ) != 0x80 )		1227672	0					
ANR	1228079	Condition	( err [ i ] & 0xc0 ) != 0x80 || ( err [ i + 1 ] & 0xc0 ) != 0x80 || ( err [ i + 2 ] & 0xc0 ) != 0x80	923:8:33612:33692	1227672	0	True				
ANR	1228080	OrExpression	( err [ i ] & 0xc0 ) != 0x80 || ( err [ i + 1 ] & 0xc0 ) != 0x80 || ( err [ i + 2 ] & 0xc0 ) != 0x80		1227672	0		||			
ANR	1228081	EqualityExpression	( err [ i ] & 0xc0 ) != 0x80		1227672	0		!=			
ANR	1228082	BitAndExpression	err [ i ] & 0xc0		1227672	0		&			
ANR	1228083	ArrayIndexing	err [ i ]		1227672	0					
ANR	1228084	Identifier	err		1227672	0					
ANR	1228085	Identifier	i		1227672	1					
ANR	1228086	PrimaryExpression	0xc0		1227672	1					
ANR	1228087	PrimaryExpression	0x80		1227672	1					
ANR	1228088	OrExpression	( err [ i + 1 ] & 0xc0 ) != 0x80 || ( err [ i + 2 ] & 0xc0 ) != 0x80		1227672	1		||			
ANR	1228089	EqualityExpression	( err [ i + 1 ] & 0xc0 ) != 0x80		1227672	0		!=			
ANR	1228090	BitAndExpression	err [ i + 1 ] & 0xc0		1227672	0		&			
ANR	1228091	ArrayIndexing	err [ i + 1 ]		1227672	0					
ANR	1228092	Identifier	err		1227672	0					
ANR	1228093	AdditiveExpression	i + 1		1227672	1		+			
ANR	1228094	Identifier	i		1227672	0					
ANR	1228095	PrimaryExpression	1		1227672	1					
ANR	1228096	PrimaryExpression	0xc0		1227672	1					
ANR	1228097	PrimaryExpression	0x80		1227672	1					
ANR	1228098	EqualityExpression	( err [ i + 2 ] & 0xc0 ) != 0x80		1227672	1		!=			
ANR	1228099	BitAndExpression	err [ i + 2 ] & 0xc0		1227672	0		&			
ANR	1228100	ArrayIndexing	err [ i + 2 ]		1227672	0					
ANR	1228101	Identifier	err		1227672	0					
ANR	1228102	AdditiveExpression	i + 2		1227672	1		+			
ANR	1228103	Identifier	i		1227672	0					
ANR	1228104	PrimaryExpression	2		1227672	1					
ANR	1228105	PrimaryExpression	0xc0		1227672	1					
ANR	1228106	PrimaryExpression	0x80		1227672	1					
ANR	1228107	CompoundStatement		56:91:1352:1352	1227672	1					
ANR	1228108	BreakStatement	break ;	924:5:33702:33707	1227672	0	True				
ANR	1228109	ExpressionStatement	i += 3	926:4:33719:33725	1227672	1	True				
ANR	1228110	AssignmentExpression	i += 3		1227672	0		+=			
ANR	1228111	Identifier	i		1227672	0					
ANR	1228112	PrimaryExpression	3		1227672	1					
ANR	1228113	ElseStatement	else		1227672	0					
ANR	1228114	CompoundStatement		60:10:1394:1394	1227672	0					
ANR	1228115	BreakStatement	break ;	928:4:33743:33748	1227672	0	True				
ANR	1228116	IfStatement	if ( c )		1227672	5					
ANR	1228117	Condition	c	931:6:33765:33765	1227672	0	True				
ANR	1228118	Identifier	c		1227672	0					
ANR	1228119	CompoundStatement		64:9:1425:1425	1227672	1					
ANR	1228120	ExpressionStatement	err [ i - 1 ] = '\\\\'	932:3:33773:33788	1227672	0	True				
ANR	1228121	AssignmentExpression	err [ i - 1 ] = '\\\\'		1227672	0		=			
ANR	1228122	ArrayIndexing	err [ i - 1 ]		1227672	0					
ANR	1228123	Identifier	err		1227672	0					
ANR	1228124	AdditiveExpression	i - 1		1227672	1		-			
ANR	1228125	Identifier	i		1227672	0					
ANR	1228126	PrimaryExpression	1		1227672	1					
ANR	1228127	PrimaryExpression	'\\\\'		1227672	1					
ANR	1228128	ExpressionStatement	err [ i ++ ] = 'x'	933:3:33793:33807	1227672	1	True				
ANR	1228129	AssignmentExpression	err [ i ++ ] = 'x'		1227672	0		=			
ANR	1228130	ArrayIndexing	err [ i ++ ]		1227672	0					
ANR	1228131	Identifier	err		1227672	0					
ANR	1228132	PostIncDecOperationExpression	i ++		1227672	1					
ANR	1228133	Identifier	i		1227672	0					
ANR	1228134	IncDec	++		1227672	1					
ANR	1228135	PrimaryExpression	'x'		1227672	1					
ANR	1228136	ExpressionStatement	err [ i ++ ] = ( ( unsigned char ) c >> 4 ) + ( ( ( ( unsigned char ) c >> 4 ) > 9 ) ? ( 'a' - 10 ) : '0' )	934:3:33812:33899	1227672	2	True				
ANR	1228137	AssignmentExpression	err [ i ++ ] = ( ( unsigned char ) c >> 4 ) + ( ( ( ( unsigned char ) c >> 4 ) > 9 ) ? ( 'a' - 10 ) : '0' )		1227672	0		=			
ANR	1228138	ArrayIndexing	err [ i ++ ]		1227672	0					
ANR	1228139	Identifier	err		1227672	0					
ANR	1228140	PostIncDecOperationExpression	i ++		1227672	1					
ANR	1228141	Identifier	i		1227672	0					
ANR	1228142	IncDec	++		1227672	1					
ANR	1228143	AdditiveExpression	( ( unsigned char ) c >> 4 ) + ( ( ( ( unsigned char ) c >> 4 ) > 9 ) ? ( 'a' - 10 ) : '0' )		1227672	1		+			
ANR	1228144	ShiftExpression	( unsigned char ) c >> 4		1227672	0		>>			
ANR	1228145	CastExpression	( unsigned char ) c		1227672	0					
ANR	1228146	CastTarget	unsigned char		1227672	0					
ANR	1228147	Identifier	c		1227672	1					
ANR	1228148	PrimaryExpression	4		1227672	1					
ANR	1228149	ConditionalExpression	( ( ( unsigned char ) c >> 4 ) > 9 ) ? ( 'a' - 10 ) : '0'		1227672	1					
ANR	1228150	Condition	( ( unsigned char ) c >> 4 ) > 9		1227672	0					
ANR	1228151	RelationalExpression	( ( unsigned char ) c >> 4 ) > 9		1227672	0		>			
ANR	1228152	ShiftExpression	( unsigned char ) c >> 4		1227672	0		>>			
ANR	1228153	CastExpression	( unsigned char ) c		1227672	0					
ANR	1228154	CastTarget	unsigned char		1227672	0					
ANR	1228155	Identifier	c		1227672	1					
ANR	1228156	PrimaryExpression	4		1227672	1					
ANR	1228157	PrimaryExpression	9		1227672	1					
ANR	1228158	AdditiveExpression	'a' - 10		1227672	1		-			
ANR	1228159	PrimaryExpression	'a'		1227672	0					
ANR	1228160	PrimaryExpression	10		1227672	1					
ANR	1228161	PrimaryExpression	'0'		1227672	2					
ANR	1228162	ExpressionStatement	err [ i ++ ] = ( c & 15 ) + ( ( ( c & 15 ) > 9 ) ? ( 'a' - 10 ) : '0' )	935:3:33904:33961	1227672	3	True				
ANR	1228163	AssignmentExpression	err [ i ++ ] = ( c & 15 ) + ( ( ( c & 15 ) > 9 ) ? ( 'a' - 10 ) : '0' )		1227672	0		=			
ANR	1228164	ArrayIndexing	err [ i ++ ]		1227672	0					
ANR	1228165	Identifier	err		1227672	0					
ANR	1228166	PostIncDecOperationExpression	i ++		1227672	1					
ANR	1228167	Identifier	i		1227672	0					
ANR	1228168	IncDec	++		1227672	1					
ANR	1228169	AdditiveExpression	( c & 15 ) + ( ( ( c & 15 ) > 9 ) ? ( 'a' - 10 ) : '0' )		1227672	1		+			
ANR	1228170	BitAndExpression	c & 15		1227672	0		&			
ANR	1228171	Identifier	c		1227672	0					
ANR	1228172	PrimaryExpression	15		1227672	1					
ANR	1228173	ConditionalExpression	( ( c & 15 ) > 9 ) ? ( 'a' - 10 ) : '0'		1227672	1					
ANR	1228174	Condition	( c & 15 ) > 9		1227672	0					
ANR	1228175	RelationalExpression	( c & 15 ) > 9		1227672	0		>			
ANR	1228176	BitAndExpression	c & 15		1227672	0		&			
ANR	1228177	Identifier	c		1227672	0					
ANR	1228178	PrimaryExpression	15		1227672	1					
ANR	1228179	PrimaryExpression	9		1227672	1					
ANR	1228180	AdditiveExpression	'a' - 10		1227672	1		-			
ANR	1228181	PrimaryExpression	'a'		1227672	0					
ANR	1228182	PrimaryExpression	10		1227672	1					
ANR	1228183	PrimaryExpression	'0'		1227672	2					
ANR	1228184	ExpressionStatement	err [ i ++ ] = '.'	936:3:33966:33980	1227672	4	True				
ANR	1228185	AssignmentExpression	err [ i ++ ] = '.'		1227672	0		=			
ANR	1228186	ArrayIndexing	err [ i ++ ]		1227672	0					
ANR	1228187	Identifier	err		1227672	0					
ANR	1228188	PostIncDecOperationExpression	i ++		1227672	1					
ANR	1228189	Identifier	i		1227672	0					
ANR	1228190	IncDec	++		1227672	1					
ANR	1228191	PrimaryExpression	'.'		1227672	1					
ANR	1228192	ExpressionStatement	err [ i ++ ] = '.'	937:3:33985:33999	1227672	5	True				
ANR	1228193	AssignmentExpression	err [ i ++ ] = '.'		1227672	0		=			
ANR	1228194	ArrayIndexing	err [ i ++ ]		1227672	0					
ANR	1228195	Identifier	err		1227672	0					
ANR	1228196	PostIncDecOperationExpression	i ++		1227672	1					
ANR	1228197	Identifier	i		1227672	0					
ANR	1228198	IncDec	++		1227672	1					
ANR	1228199	PrimaryExpression	'.'		1227672	1					
ANR	1228200	ExpressionStatement	err [ i ++ ] = '.'	938:3:34004:34018	1227672	6	True				
ANR	1228201	AssignmentExpression	err [ i ++ ] = '.'		1227672	0		=			
ANR	1228202	ArrayIndexing	err [ i ++ ]		1227672	0					
ANR	1228203	Identifier	err		1227672	0					
ANR	1228204	PostIncDecOperationExpression	i ++		1227672	1					
ANR	1228205	Identifier	i		1227672	0					
ANR	1228206	IncDec	++		1227672	1					
ANR	1228207	PrimaryExpression	'.'		1227672	1					
ANR	1228208	ExpressionStatement	err [ i ++ ] = 0	939:3:34023:34035	1227672	7	True				
ANR	1228209	AssignmentExpression	err [ i ++ ] = 0		1227672	0		=			
ANR	1228210	ArrayIndexing	err [ i ++ ]		1227672	0					
ANR	1228211	Identifier	err		1227672	0					
ANR	1228212	PostIncDecOperationExpression	i ++		1227672	1					
ANR	1228213	Identifier	i		1227672	0					
ANR	1228214	IncDec	++		1227672	1					
ANR	1228215	PrimaryExpression	0		1227672	1					
ANR	1228216	ExpressionStatement	"soap_error1 ( E_ERROR , ""Encoding: string '%s' is not a valid utf-8 string"" , err )"	942:2:34044:34123	1227672	6	True				
ANR	1228217	CallExpression	"soap_error1 ( E_ERROR , ""Encoding: string '%s' is not a valid utf-8 string"" , err )"		1227672	0					
ANR	1228218	Callee	soap_error1		1227672	0					
ANR	1228219	Identifier	soap_error1		1227672	0					
ANR	1228220	ArgumentList	E_ERROR		1227672	1					
ANR	1228221	Argument	E_ERROR		1227672	0					
ANR	1228222	Identifier	E_ERROR		1227672	0					
ANR	1228223	Argument	"""Encoding: string '%s' is not a valid utf-8 string"""		1227672	1					
ANR	1228224	PrimaryExpression	"""Encoding: string '%s' is not a valid utf-8 string"""		1227672	0					
ANR	1228225	Argument	err		1227672	2					
ANR	1228226	Identifier	err		1227672	0					
ANR	1228227	ExpressionStatement	"text = xmlNewTextLen ( BAD_CAST ( str ) , new_len )"	945:1:34130:34174	1227672	9	True				
ANR	1228228	AssignmentExpression	"text = xmlNewTextLen ( BAD_CAST ( str ) , new_len )"		1227672	0		=			
ANR	1228229	Identifier	text		1227672	0					
ANR	1228230	CallExpression	"xmlNewTextLen ( BAD_CAST ( str ) , new_len )"		1227672	1					
ANR	1228231	Callee	xmlNewTextLen		1227672	0					
ANR	1228232	Identifier	xmlNewTextLen		1227672	0					
ANR	1228233	ArgumentList	BAD_CAST ( str )		1227672	1					
ANR	1228234	Argument	BAD_CAST ( str )		1227672	0					
ANR	1228235	CallExpression	BAD_CAST ( str )		1227672	0					
ANR	1228236	Callee	BAD_CAST		1227672	0					
ANR	1228237	Identifier	BAD_CAST		1227672	0					
ANR	1228238	ArgumentList	str		1227672	1					
ANR	1228239	Argument	str		1227672	0					
ANR	1228240	Identifier	str		1227672	0					
ANR	1228241	Argument	new_len		1227672	1					
ANR	1228242	Identifier	new_len		1227672	0					
ANR	1228243	ExpressionStatement	"xmlAddChild ( ret , text )"	946:1:34177:34199	1227672	10	True				
ANR	1228244	CallExpression	"xmlAddChild ( ret , text )"		1227672	0					
ANR	1228245	Callee	xmlAddChild		1227672	0					
ANR	1228246	Identifier	xmlAddChild		1227672	0					
ANR	1228247	ArgumentList	ret		1227672	1					
ANR	1228248	Argument	ret		1227672	0					
ANR	1228249	Identifier	ret		1227672	0					
ANR	1228250	Argument	text		1227672	1					
ANR	1228251	Identifier	text		1227672	0					
ANR	1228252	ExpressionStatement	efree ( str )	947:1:34202:34212	1227672	11	True				
ANR	1228253	CallExpression	efree ( str )		1227672	0					
ANR	1228254	Callee	efree		1227672	0					
ANR	1228255	Identifier	efree		1227672	0					
ANR	1228256	ArgumentList	str		1227672	1					
ANR	1228257	Argument	str		1227672	0					
ANR	1228258	Identifier	str		1227672	0					
ANR	1228259	IfStatement	if ( style == SOAP_ENCODED )		1227672	12					
ANR	1228260	Condition	style == SOAP_ENCODED	949:5:34220:34240	1227672	0	True				
ANR	1228261	EqualityExpression	style == SOAP_ENCODED		1227672	0		==			
ANR	1228262	Identifier	style		1227672	0					
ANR	1228263	Identifier	SOAP_ENCODED		1227672	1					
ANR	1228264	CompoundStatement		82:28:1900:1900	1227672	1					
ANR	1228265	ExpressionStatement	"set_ns_and_type ( ret , type )"	950:2:34247:34273	1227672	0	True				
ANR	1228266	CallExpression	"set_ns_and_type ( ret , type )"		1227672	0					
ANR	1228267	Callee	set_ns_and_type		1227672	0					
ANR	1228268	Identifier	set_ns_and_type		1227672	0					
ANR	1228269	ArgumentList	ret		1227672	1					
ANR	1228270	Argument	ret		1227672	0					
ANR	1228271	Identifier	ret		1227672	0					
ANR	1228272	Argument	type		1227672	1					
ANR	1228273	Identifier	type		1227672	0					
ANR	1228274	ReturnStatement	return ret ;	952:1:34279:34289	1227672	13	True				
ANR	1228275	Identifier	ret		1227672	0					
ANR	1228276	ReturnType	static xmlNodePtr		1227672	1					
ANR	1228277	Identifier	to_xml_string		1227672	2					
ANR	1228278	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1227672	3					
ANR	1228279	Parameter	encodeTypePtr type	867:32:32270:32287	1227672	0	True				
ANR	1228280	ParameterType	encodeTypePtr		1227672	0					
ANR	1228281	Identifier	type		1227672	1					
ANR	1228282	Parameter	zval * data	867:52:32290:32299	1227672	1	True				
ANR	1228283	ParameterType	zval *		1227672	0					
ANR	1228284	Identifier	data		1227672	1					
ANR	1228285	Parameter	int style	867:64:32302:32310	1227672	2	True				
ANR	1228286	ParameterType	int		1227672	0					
ANR	1228287	Identifier	style		1227672	1					
ANR	1228288	Parameter	xmlNodePtr parent TSRMLS_DC	867:75:32313:32339	1227672	3	True				
ANR	1228289	ParameterType	xmlNodePtr parent		1227672	0					
ANR	1228290	Identifier	TSRMLS_DC		1227672	1					
ANR	1228291	CFGEntryNode	ENTRY		1227672		True				
ANR	1228292	CFGExitNode	EXIT		1227672		True				
ANR	1228293	Symbol	parent		1227672						
ANR	1228294	Symbol	xmlBufferCreate		1227672						
ANR	1228295	Symbol	data		1227672						
ANR	1228296	Symbol	Z_STRLEN		1227672						
ANR	1228297	Symbol	type		1227672						
ANR	1228298	Symbol	xmlBufferCreateStatic		1227672						
ANR	1228299	Symbol	TSRMLS_DC		1227672						
ANR	1228300	Symbol	out		1227672						
ANR	1228301	Symbol	estrndup		1227672						
ANR	1228302	Symbol	emalloc		1227672						
ANR	1228303	Symbol	xmlNewTextLen		1227672						
ANR	1228304	Symbol	tmp		1227672						
ANR	1228305	Symbol	Z_STRVAL		1227672						
ANR	1228306	Symbol	Z_STRLEN_P		1227672						
ANR	1228307	Symbol	xmlCharEncInFunc		1227672						
ANR	1228308	Symbol	text		1227672						
ANR	1228309	Symbol	IS_STRING		1227672						
ANR	1228310	Symbol	ret		1227672						
ANR	1228311	Symbol	NULL		1227672						
ANR	1228312	Symbol	c		1227672						
ANR	1228313	Symbol	err		1227672						
ANR	1228314	Symbol	in		1227672						
ANR	1228315	Symbol	i		1227672						
ANR	1228316	Symbol	xmlNewNode		1227672						
ANR	1228317	Symbol	Z_TYPE_P		1227672						
ANR	1228318	Symbol	encoding		1227672						
ANR	1228319	Symbol	Z_STRVAL_P		1227672						
ANR	1228320	Symbol	SOAP_GLOBAL		1227672						
ANR	1228321	Symbol	n		1227672						
ANR	1228322	Symbol	xmlBufferContent		1227672						
ANR	1228323	Symbol	str		1227672						
ANR	1228324	Symbol	* err		1227672						
ANR	1228325	Symbol	* i		1227672						
ANR	1228326	Symbol	E_ERROR		1227672						
ANR	1228327	Symbol	new_len		1227672						
ANR	1228328	Symbol	estrdup		1227672						
ANR	1228329	Symbol	php_libxml_xmlCheckUTF8		1227672						
ANR	1228330	Symbol	style		1227672						
ANR	1228331	Symbol	& tmp		1227672						
ANR	1228332	Symbol	SOAP_ENCODED		1227672						
ANR	1228333	Symbol	* data		1227672						
ANR	1228334	Symbol	BAD_CAST		1227672						
ANR	1228335	Function	to_xml_base64	955:0:34294:35111							
ANR	1228336	FunctionDef	"to_xml_base64 (encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1228335	0					
ANR	1228337	CompoundStatement		956:0:34398:35111	1228335	0					
ANR	1228338	IdentifierDeclStatement	"xmlNodePtr ret , text ;"	957:1:34401:34421	1228335	0	True				
ANR	1228339	IdentifierDecl	ret		1228335	0					
ANR	1228340	IdentifierDeclType	xmlNodePtr		1228335	0					
ANR	1228341	Identifier	ret		1228335	1					
ANR	1228342	IdentifierDecl	text		1228335	1					
ANR	1228343	IdentifierDeclType	xmlNodePtr		1228335	0					
ANR	1228344	Identifier	text		1228335	1					
ANR	1228345	IdentifierDeclStatement	unsigned char * str ;	958:1:34424:34442	1228335	1	True				
ANR	1228346	IdentifierDecl	* str		1228335	0					
ANR	1228347	IdentifierDeclType	unsigned char *		1228335	0					
ANR	1228348	Identifier	str		1228335	1					
ANR	1228349	IdentifierDeclStatement	int str_len ;	959:1:34445:34456	1228335	2	True				
ANR	1228350	IdentifierDecl	str_len		1228335	0					
ANR	1228351	IdentifierDeclType	int		1228335	0					
ANR	1228352	Identifier	str_len		1228335	1					
ANR	1228353	ExpressionStatement	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	961:1:34460:34501	1228335	3	True				
ANR	1228354	AssignmentExpression	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1228335	0		=			
ANR	1228355	Identifier	ret		1228335	0					
ANR	1228356	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1228335	1					
ANR	1228357	Callee	xmlNewNode		1228335	0					
ANR	1228358	Identifier	xmlNewNode		1228335	0					
ANR	1228359	ArgumentList	NULL		1228335	1					
ANR	1228360	Argument	NULL		1228335	0					
ANR	1228361	Identifier	NULL		1228335	0					
ANR	1228362	Argument	"BAD_CAST ( ""BOGUS"" )"		1228335	1					
ANR	1228363	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1228335	0					
ANR	1228364	Callee	BAD_CAST		1228335	0					
ANR	1228365	Identifier	BAD_CAST		1228335	0					
ANR	1228366	ArgumentList	"""BOGUS"""		1228335	1					
ANR	1228367	Argument	"""BOGUS"""		1228335	0					
ANR	1228368	PrimaryExpression	"""BOGUS"""		1228335	0					
ANR	1228369	ExpressionStatement	"xmlAddChild ( parent , ret )"	962:1:34504:34528	1228335	4	True				
ANR	1228370	CallExpression	"xmlAddChild ( parent , ret )"		1228335	0					
ANR	1228371	Callee	xmlAddChild		1228335	0					
ANR	1228372	Identifier	xmlAddChild		1228335	0					
ANR	1228373	ArgumentList	parent		1228335	1					
ANR	1228374	Argument	parent		1228335	0					
ANR	1228375	Identifier	parent		1228335	0					
ANR	1228376	Argument	ret		1228335	1					
ANR	1228377	Identifier	ret		1228335	0					
ANR	1228378	ExpressionStatement	"FIND_ZVAL_NULL ( data , ret , style )"	963:1:34531:34563	1228335	5	True				
ANR	1228379	CallExpression	"FIND_ZVAL_NULL ( data , ret , style )"		1228335	0					
ANR	1228380	Callee	FIND_ZVAL_NULL		1228335	0					
ANR	1228381	Identifier	FIND_ZVAL_NULL		1228335	0					
ANR	1228382	ArgumentList	data		1228335	1					
ANR	1228383	Argument	data		1228335	0					
ANR	1228384	Identifier	data		1228335	0					
ANR	1228385	Argument	ret		1228335	1					
ANR	1228386	Identifier	ret		1228335	0					
ANR	1228387	Argument	style		1228335	2					
ANR	1228388	Identifier	style		1228335	0					
ANR	1228389	IfStatement	if ( Z_TYPE_P ( data ) == IS_STRING )		1228335	6					
ANR	1228390	Condition	Z_TYPE_P ( data ) == IS_STRING	965:5:34571:34597	1228335	0	True				
ANR	1228391	EqualityExpression	Z_TYPE_P ( data ) == IS_STRING		1228335	0		==			
ANR	1228392	CallExpression	Z_TYPE_P ( data )		1228335	0					
ANR	1228393	Callee	Z_TYPE_P		1228335	0					
ANR	1228394	Identifier	Z_TYPE_P		1228335	0					
ANR	1228395	ArgumentList	data		1228335	1					
ANR	1228396	Argument	data		1228335	0					
ANR	1228397	Identifier	data		1228335	0					
ANR	1228398	Identifier	IS_STRING		1228335	1					
ANR	1228399	CompoundStatement		10:34:201:201	1228335	1					
ANR	1228400	ExpressionStatement	"str = php_base64_encode ( ( unsigned char * ) Z_STRVAL_P ( data ) , Z_STRLEN_P ( data ) , & str_len )"	966:2:34604:34689	1228335	0	True				
ANR	1228401	AssignmentExpression	"str = php_base64_encode ( ( unsigned char * ) Z_STRVAL_P ( data ) , Z_STRLEN_P ( data ) , & str_len )"		1228335	0		=			
ANR	1228402	Identifier	str		1228335	0					
ANR	1228403	CallExpression	"php_base64_encode ( ( unsigned char * ) Z_STRVAL_P ( data ) , Z_STRLEN_P ( data ) , & str_len )"		1228335	1					
ANR	1228404	Callee	php_base64_encode		1228335	0					
ANR	1228405	Identifier	php_base64_encode		1228335	0					
ANR	1228406	ArgumentList	( unsigned char * ) Z_STRVAL_P ( data )		1228335	1					
ANR	1228407	Argument	( unsigned char * ) Z_STRVAL_P ( data )		1228335	0					
ANR	1228408	CastExpression	( unsigned char * ) Z_STRVAL_P ( data )		1228335	0					
ANR	1228409	CastTarget	unsigned char *		1228335	0					
ANR	1228410	CallExpression	Z_STRVAL_P ( data )		1228335	1					
ANR	1228411	Callee	Z_STRVAL_P		1228335	0					
ANR	1228412	Identifier	Z_STRVAL_P		1228335	0					
ANR	1228413	ArgumentList	data		1228335	1					
ANR	1228414	Argument	data		1228335	0					
ANR	1228415	Identifier	data		1228335	0					
ANR	1228416	Argument	Z_STRLEN_P ( data )		1228335	1					
ANR	1228417	CallExpression	Z_STRLEN_P ( data )		1228335	0					
ANR	1228418	Callee	Z_STRLEN_P		1228335	0					
ANR	1228419	Identifier	Z_STRLEN_P		1228335	0					
ANR	1228420	ArgumentList	data		1228335	1					
ANR	1228421	Argument	data		1228335	0					
ANR	1228422	Identifier	data		1228335	0					
ANR	1228423	Argument	& str_len		1228335	2					
ANR	1228424	UnaryOperationExpression	& str_len		1228335	0					
ANR	1228425	UnaryOperator	&		1228335	0					
ANR	1228426	Identifier	str_len		1228335	1					
ANR	1228427	ExpressionStatement	"text = xmlNewTextLen ( str , str_len )"	967:2:34693:34727	1228335	1	True				
ANR	1228428	AssignmentExpression	"text = xmlNewTextLen ( str , str_len )"		1228335	0		=			
ANR	1228429	Identifier	text		1228335	0					
ANR	1228430	CallExpression	"xmlNewTextLen ( str , str_len )"		1228335	1					
ANR	1228431	Callee	xmlNewTextLen		1228335	0					
ANR	1228432	Identifier	xmlNewTextLen		1228335	0					
ANR	1228433	ArgumentList	str		1228335	1					
ANR	1228434	Argument	str		1228335	0					
ANR	1228435	Identifier	str		1228335	0					
ANR	1228436	Argument	str_len		1228335	1					
ANR	1228437	Identifier	str_len		1228335	0					
ANR	1228438	ExpressionStatement	"xmlAddChild ( ret , text )"	968:2:34731:34753	1228335	2	True				
ANR	1228439	CallExpression	"xmlAddChild ( ret , text )"		1228335	0					
ANR	1228440	Callee	xmlAddChild		1228335	0					
ANR	1228441	Identifier	xmlAddChild		1228335	0					
ANR	1228442	ArgumentList	ret		1228335	1					
ANR	1228443	Argument	ret		1228335	0					
ANR	1228444	Identifier	ret		1228335	0					
ANR	1228445	Argument	text		1228335	1					
ANR	1228446	Identifier	text		1228335	0					
ANR	1228447	ExpressionStatement	efree ( str )	969:2:34757:34767	1228335	3	True				
ANR	1228448	CallExpression	efree ( str )		1228335	0					
ANR	1228449	Callee	efree		1228335	0					
ANR	1228450	Identifier	efree		1228335	0					
ANR	1228451	ArgumentList	str		1228335	1					
ANR	1228452	Argument	str		1228335	0					
ANR	1228453	Identifier	str		1228335	0					
ANR	1228454	ElseStatement	else		1228335	0					
ANR	1228455	CompoundStatement		16:2:382:398	1228335	0					
ANR	1228456	IdentifierDeclStatement	zval tmp = * data ;	971:2:34781:34797	1228335	0	True				
ANR	1228457	IdentifierDecl	tmp = * data		1228335	0					
ANR	1228458	IdentifierDeclType	zval		1228335	0					
ANR	1228459	Identifier	tmp		1228335	1					
ANR	1228460	AssignmentExpression	tmp = * data		1228335	2		=			
ANR	1228461	Identifier	tmp		1228335	0					
ANR	1228462	UnaryOperationExpression	* data		1228335	1					
ANR	1228463	UnaryOperator	*		1228335	0					
ANR	1228464	Identifier	data		1228335	1					
ANR	1228465	ExpressionStatement	zval_copy_ctor ( & tmp )	973:2:34802:34822	1228335	1	True				
ANR	1228466	CallExpression	zval_copy_ctor ( & tmp )		1228335	0					
ANR	1228467	Callee	zval_copy_ctor		1228335	0					
ANR	1228468	Identifier	zval_copy_ctor		1228335	0					
ANR	1228469	ArgumentList	& tmp		1228335	1					
ANR	1228470	Argument	& tmp		1228335	0					
ANR	1228471	UnaryOperationExpression	& tmp		1228335	0					
ANR	1228472	UnaryOperator	&		1228335	0					
ANR	1228473	Identifier	tmp		1228335	1					
ANR	1228474	ExpressionStatement	convert_to_string ( & tmp )	974:2:34826:34849	1228335	2	True				
ANR	1228475	CallExpression	convert_to_string ( & tmp )		1228335	0					
ANR	1228476	Callee	convert_to_string		1228335	0					
ANR	1228477	Identifier	convert_to_string		1228335	0					
ANR	1228478	ArgumentList	& tmp		1228335	1					
ANR	1228479	Argument	& tmp		1228335	0					
ANR	1228480	UnaryOperationExpression	& tmp		1228335	0					
ANR	1228481	UnaryOperator	&		1228335	0					
ANR	1228482	Identifier	tmp		1228335	1					
ANR	1228483	ExpressionStatement	"str = php_base64_encode ( ( unsigned char * ) Z_STRVAL ( tmp ) , Z_STRLEN ( tmp ) , & str_len )"	975:2:34853:34932	1228335	3	True				
ANR	1228484	AssignmentExpression	"str = php_base64_encode ( ( unsigned char * ) Z_STRVAL ( tmp ) , Z_STRLEN ( tmp ) , & str_len )"		1228335	0		=			
ANR	1228485	Identifier	str		1228335	0					
ANR	1228486	CallExpression	"php_base64_encode ( ( unsigned char * ) Z_STRVAL ( tmp ) , Z_STRLEN ( tmp ) , & str_len )"		1228335	1					
ANR	1228487	Callee	php_base64_encode		1228335	0					
ANR	1228488	Identifier	php_base64_encode		1228335	0					
ANR	1228489	ArgumentList	( unsigned char * ) Z_STRVAL ( tmp )		1228335	1					
ANR	1228490	Argument	( unsigned char * ) Z_STRVAL ( tmp )		1228335	0					
ANR	1228491	CastExpression	( unsigned char * ) Z_STRVAL ( tmp )		1228335	0					
ANR	1228492	CastTarget	unsigned char *		1228335	0					
ANR	1228493	CallExpression	Z_STRVAL ( tmp )		1228335	1					
ANR	1228494	Callee	Z_STRVAL		1228335	0					
ANR	1228495	Identifier	Z_STRVAL		1228335	0					
ANR	1228496	ArgumentList	tmp		1228335	1					
ANR	1228497	Argument	tmp		1228335	0					
ANR	1228498	Identifier	tmp		1228335	0					
ANR	1228499	Argument	Z_STRLEN ( tmp )		1228335	1					
ANR	1228500	CallExpression	Z_STRLEN ( tmp )		1228335	0					
ANR	1228501	Callee	Z_STRLEN		1228335	0					
ANR	1228502	Identifier	Z_STRLEN		1228335	0					
ANR	1228503	ArgumentList	tmp		1228335	1					
ANR	1228504	Argument	tmp		1228335	0					
ANR	1228505	Identifier	tmp		1228335	0					
ANR	1228506	Argument	& str_len		1228335	2					
ANR	1228507	UnaryOperationExpression	& str_len		1228335	0					
ANR	1228508	UnaryOperator	&		1228335	0					
ANR	1228509	Identifier	str_len		1228335	1					
ANR	1228510	ExpressionStatement	"text = xmlNewTextLen ( str , str_len )"	976:2:34936:34970	1228335	4	True				
ANR	1228511	AssignmentExpression	"text = xmlNewTextLen ( str , str_len )"		1228335	0		=			
ANR	1228512	Identifier	text		1228335	0					
ANR	1228513	CallExpression	"xmlNewTextLen ( str , str_len )"		1228335	1					
ANR	1228514	Callee	xmlNewTextLen		1228335	0					
ANR	1228515	Identifier	xmlNewTextLen		1228335	0					
ANR	1228516	ArgumentList	str		1228335	1					
ANR	1228517	Argument	str		1228335	0					
ANR	1228518	Identifier	str		1228335	0					
ANR	1228519	Argument	str_len		1228335	1					
ANR	1228520	Identifier	str_len		1228335	0					
ANR	1228521	ExpressionStatement	"xmlAddChild ( ret , text )"	977:2:34974:34996	1228335	5	True				
ANR	1228522	CallExpression	"xmlAddChild ( ret , text )"		1228335	0					
ANR	1228523	Callee	xmlAddChild		1228335	0					
ANR	1228524	Identifier	xmlAddChild		1228335	0					
ANR	1228525	ArgumentList	ret		1228335	1					
ANR	1228526	Argument	ret		1228335	0					
ANR	1228527	Identifier	ret		1228335	0					
ANR	1228528	Argument	text		1228335	1					
ANR	1228529	Identifier	text		1228335	0					
ANR	1228530	ExpressionStatement	efree ( str )	978:2:35000:35010	1228335	6	True				
ANR	1228531	CallExpression	efree ( str )		1228335	0					
ANR	1228532	Callee	efree		1228335	0					
ANR	1228533	Identifier	efree		1228335	0					
ANR	1228534	ArgumentList	str		1228335	1					
ANR	1228535	Argument	str		1228335	0					
ANR	1228536	Identifier	str		1228335	0					
ANR	1228537	ExpressionStatement	zval_dtor ( & tmp )	979:2:35014:35029	1228335	7	True				
ANR	1228538	CallExpression	zval_dtor ( & tmp )		1228335	0					
ANR	1228539	Callee	zval_dtor		1228335	0					
ANR	1228540	Identifier	zval_dtor		1228335	0					
ANR	1228541	ArgumentList	& tmp		1228335	1					
ANR	1228542	Argument	& tmp		1228335	0					
ANR	1228543	UnaryOperationExpression	& tmp		1228335	0					
ANR	1228544	UnaryOperator	&		1228335	0					
ANR	1228545	Identifier	tmp		1228335	1					
ANR	1228546	IfStatement	if ( style == SOAP_ENCODED )		1228335	7					
ANR	1228547	Condition	style == SOAP_ENCODED	982:5:35040:35060	1228335	0	True				
ANR	1228548	EqualityExpression	style == SOAP_ENCODED		1228335	0		==			
ANR	1228549	Identifier	style		1228335	0					
ANR	1228550	Identifier	SOAP_ENCODED		1228335	1					
ANR	1228551	CompoundStatement		27:28:664:664	1228335	1					
ANR	1228552	ExpressionStatement	"set_ns_and_type ( ret , type )"	983:2:35067:35093	1228335	0	True				
ANR	1228553	CallExpression	"set_ns_and_type ( ret , type )"		1228335	0					
ANR	1228554	Callee	set_ns_and_type		1228335	0					
ANR	1228555	Identifier	set_ns_and_type		1228335	0					
ANR	1228556	ArgumentList	ret		1228335	1					
ANR	1228557	Argument	ret		1228335	0					
ANR	1228558	Identifier	ret		1228335	0					
ANR	1228559	Argument	type		1228335	1					
ANR	1228560	Identifier	type		1228335	0					
ANR	1228561	ReturnStatement	return ret ;	985:1:35099:35109	1228335	8	True				
ANR	1228562	Identifier	ret		1228335	0					
ANR	1228563	ReturnType	static xmlNodePtr		1228335	1					
ANR	1228564	Identifier	to_xml_base64		1228335	2					
ANR	1228565	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1228335	3					
ANR	1228566	Parameter	encodeTypePtr type	955:32:34326:34343	1228335	0	True				
ANR	1228567	ParameterType	encodeTypePtr		1228335	0					
ANR	1228568	Identifier	type		1228335	1					
ANR	1228569	Parameter	zval * data	955:52:34346:34355	1228335	1	True				
ANR	1228570	ParameterType	zval *		1228335	0					
ANR	1228571	Identifier	data		1228335	1					
ANR	1228572	Parameter	int style	955:64:34358:34366	1228335	2	True				
ANR	1228573	ParameterType	int		1228335	0					
ANR	1228574	Identifier	style		1228335	1					
ANR	1228575	Parameter	xmlNodePtr parent TSRMLS_DC	955:75:34369:34395	1228335	3	True				
ANR	1228576	ParameterType	xmlNodePtr parent		1228335	0					
ANR	1228577	Identifier	TSRMLS_DC		1228335	1					
ANR	1228578	CFGEntryNode	ENTRY		1228335		True				
ANR	1228579	CFGExitNode	EXIT		1228335		True				
ANR	1228580	Symbol	parent		1228335						
ANR	1228581	Symbol	data		1228335						
ANR	1228582	Symbol	Z_STRLEN		1228335						
ANR	1228583	Symbol	type		1228335						
ANR	1228584	Symbol	TSRMLS_DC		1228335						
ANR	1228585	Symbol	xmlNewTextLen		1228335						
ANR	1228586	Symbol	str_len		1228335						
ANR	1228587	Symbol	tmp		1228335						
ANR	1228588	Symbol	Z_STRVAL		1228335						
ANR	1228589	Symbol	Z_STRLEN_P		1228335						
ANR	1228590	Symbol	text		1228335						
ANR	1228591	Symbol	IS_STRING		1228335						
ANR	1228592	Symbol	ret		1228335						
ANR	1228593	Symbol	NULL		1228335						
ANR	1228594	Symbol	xmlNewNode		1228335						
ANR	1228595	Symbol	Z_TYPE_P		1228335						
ANR	1228596	Symbol	& str_len		1228335						
ANR	1228597	Symbol	Z_STRVAL_P		1228335						
ANR	1228598	Symbol	str		1228335						
ANR	1228599	Symbol	style		1228335						
ANR	1228600	Symbol	& tmp		1228335						
ANR	1228601	Symbol	SOAP_ENCODED		1228335						
ANR	1228602	Symbol	* data		1228335						
ANR	1228603	Symbol	BAD_CAST		1228335						
ANR	1228604	Symbol	php_base64_encode		1228335						
ANR	1228605	Function	to_xml_hexbin	988:0:35114:36066							
ANR	1228606	FunctionDef	"to_xml_hexbin (encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1228605	0					
ANR	1228607	CompoundStatement		989:0:35218:36066	1228605	0					
ANR	1228608	Statement	static	990:1:35221:35226	1228605	0	True				
ANR	1228609	IdentifierDeclStatement	"char hexconvtab [ ] = ""0123456789ABCDEF"" ;"	990:8:35228:35266	1228605	1	True				
ANR	1228610	IdentifierDecl	"hexconvtab [ ] = ""0123456789ABCDEF"""		1228605	0					
ANR	1228611	IdentifierDeclType	char [ ]		1228605	0					
ANR	1228612	Identifier	hexconvtab		1228605	1					
ANR	1228613	AssignmentExpression	"hexconvtab [ ] = ""0123456789ABCDEF"""		1228605	2		=			
ANR	1228614	Identifier	hexconvtab		1228605	0					
ANR	1228615	PrimaryExpression	"""0123456789ABCDEF"""		1228605	1					
ANR	1228616	IdentifierDeclStatement	"xmlNodePtr ret , text ;"	991:1:35269:35289	1228605	2	True				
ANR	1228617	IdentifierDecl	ret		1228605	0					
ANR	1228618	IdentifierDeclType	xmlNodePtr		1228605	0					
ANR	1228619	Identifier	ret		1228605	1					
ANR	1228620	IdentifierDecl	text		1228605	1					
ANR	1228621	IdentifierDeclType	xmlNodePtr		1228605	0					
ANR	1228622	Identifier	text		1228605	1					
ANR	1228623	IdentifierDeclStatement	unsigned char * str ;	992:1:35292:35310	1228605	3	True				
ANR	1228624	IdentifierDecl	* str		1228605	0					
ANR	1228625	IdentifierDeclType	unsigned char *		1228605	0					
ANR	1228626	Identifier	str		1228605	1					
ANR	1228627	IdentifierDeclStatement	zval tmp ;	993:1:35313:35321	1228605	4	True				
ANR	1228628	IdentifierDecl	tmp		1228605	0					
ANR	1228629	IdentifierDeclType	zval		1228605	0					
ANR	1228630	Identifier	tmp		1228605	1					
ANR	1228631	IdentifierDeclStatement	"int i , j ;"	994:1:35324:35332	1228605	5	True				
ANR	1228632	IdentifierDecl	i		1228605	0					
ANR	1228633	IdentifierDeclType	int		1228605	0					
ANR	1228634	Identifier	i		1228605	1					
ANR	1228635	IdentifierDecl	j		1228605	1					
ANR	1228636	IdentifierDeclType	int		1228605	0					
ANR	1228637	Identifier	j		1228605	1					
ANR	1228638	ExpressionStatement	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	996:1:35336:35377	1228605	6	True				
ANR	1228639	AssignmentExpression	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1228605	0		=			
ANR	1228640	Identifier	ret		1228605	0					
ANR	1228641	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1228605	1					
ANR	1228642	Callee	xmlNewNode		1228605	0					
ANR	1228643	Identifier	xmlNewNode		1228605	0					
ANR	1228644	ArgumentList	NULL		1228605	1					
ANR	1228645	Argument	NULL		1228605	0					
ANR	1228646	Identifier	NULL		1228605	0					
ANR	1228647	Argument	"BAD_CAST ( ""BOGUS"" )"		1228605	1					
ANR	1228648	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1228605	0					
ANR	1228649	Callee	BAD_CAST		1228605	0					
ANR	1228650	Identifier	BAD_CAST		1228605	0					
ANR	1228651	ArgumentList	"""BOGUS"""		1228605	1					
ANR	1228652	Argument	"""BOGUS"""		1228605	0					
ANR	1228653	PrimaryExpression	"""BOGUS"""		1228605	0					
ANR	1228654	ExpressionStatement	"xmlAddChild ( parent , ret )"	997:1:35380:35404	1228605	7	True				
ANR	1228655	CallExpression	"xmlAddChild ( parent , ret )"		1228605	0					
ANR	1228656	Callee	xmlAddChild		1228605	0					
ANR	1228657	Identifier	xmlAddChild		1228605	0					
ANR	1228658	ArgumentList	parent		1228605	1					
ANR	1228659	Argument	parent		1228605	0					
ANR	1228660	Identifier	parent		1228605	0					
ANR	1228661	Argument	ret		1228605	1					
ANR	1228662	Identifier	ret		1228605	0					
ANR	1228663	ExpressionStatement	"FIND_ZVAL_NULL ( data , ret , style )"	998:1:35407:35439	1228605	8	True				
ANR	1228664	CallExpression	"FIND_ZVAL_NULL ( data , ret , style )"		1228605	0					
ANR	1228665	Callee	FIND_ZVAL_NULL		1228605	0					
ANR	1228666	Identifier	FIND_ZVAL_NULL		1228605	0					
ANR	1228667	ArgumentList	data		1228605	1					
ANR	1228668	Argument	data		1228605	0					
ANR	1228669	Identifier	data		1228605	0					
ANR	1228670	Argument	ret		1228605	1					
ANR	1228671	Identifier	ret		1228605	0					
ANR	1228672	Argument	style		1228605	2					
ANR	1228673	Identifier	style		1228605	0					
ANR	1228674	IfStatement	if ( Z_TYPE_P ( data ) != IS_STRING )		1228605	9					
ANR	1228675	Condition	Z_TYPE_P ( data ) != IS_STRING	1000:5:35447:35473	1228605	0	True				
ANR	1228676	EqualityExpression	Z_TYPE_P ( data ) != IS_STRING		1228605	0		!=			
ANR	1228677	CallExpression	Z_TYPE_P ( data )		1228605	0					
ANR	1228678	Callee	Z_TYPE_P		1228605	0					
ANR	1228679	Identifier	Z_TYPE_P		1228605	0					
ANR	1228680	ArgumentList	data		1228605	1					
ANR	1228681	Argument	data		1228605	0					
ANR	1228682	Identifier	data		1228605	0					
ANR	1228683	Identifier	IS_STRING		1228605	1					
ANR	1228684	CompoundStatement		12:34:257:257	1228605	1					
ANR	1228685	ExpressionStatement	tmp = * data	1001:2:35480:35491	1228605	0	True				
ANR	1228686	AssignmentExpression	tmp = * data		1228605	0		=			
ANR	1228687	Identifier	tmp		1228605	0					
ANR	1228688	UnaryOperationExpression	* data		1228605	1					
ANR	1228689	UnaryOperator	*		1228605	0					
ANR	1228690	Identifier	data		1228605	1					
ANR	1228691	ExpressionStatement	zval_copy_ctor ( & tmp )	1002:2:35495:35515	1228605	1	True				
ANR	1228692	CallExpression	zval_copy_ctor ( & tmp )		1228605	0					
ANR	1228693	Callee	zval_copy_ctor		1228605	0					
ANR	1228694	Identifier	zval_copy_ctor		1228605	0					
ANR	1228695	ArgumentList	& tmp		1228605	1					
ANR	1228696	Argument	& tmp		1228605	0					
ANR	1228697	UnaryOperationExpression	& tmp		1228605	0					
ANR	1228698	UnaryOperator	&		1228605	0					
ANR	1228699	Identifier	tmp		1228605	1					
ANR	1228700	ExpressionStatement	convert_to_string ( & tmp )	1003:2:35519:35542	1228605	2	True				
ANR	1228701	CallExpression	convert_to_string ( & tmp )		1228605	0					
ANR	1228702	Callee	convert_to_string		1228605	0					
ANR	1228703	Identifier	convert_to_string		1228605	0					
ANR	1228704	ArgumentList	& tmp		1228605	1					
ANR	1228705	Argument	& tmp		1228605	0					
ANR	1228706	UnaryOperationExpression	& tmp		1228605	0					
ANR	1228707	UnaryOperator	&		1228605	0					
ANR	1228708	Identifier	tmp		1228605	1					
ANR	1228709	ExpressionStatement	data = & tmp	1004:2:35546:35557	1228605	3	True				
ANR	1228710	AssignmentExpression	data = & tmp		1228605	0		=			
ANR	1228711	Identifier	data		1228605	0					
ANR	1228712	UnaryOperationExpression	& tmp		1228605	1					
ANR	1228713	UnaryOperator	&		1228605	0					
ANR	1228714	Identifier	tmp		1228605	1					
ANR	1228715	ExpressionStatement	"str = ( unsigned char * ) safe_emalloc ( Z_STRLEN_P ( data ) * 2 , sizeof ( char ) , 1 )"	1006:1:35563:35638	1228605	10	True				
ANR	1228716	AssignmentExpression	"str = ( unsigned char * ) safe_emalloc ( Z_STRLEN_P ( data ) * 2 , sizeof ( char ) , 1 )"		1228605	0		=			
ANR	1228717	Identifier	str		1228605	0					
ANR	1228718	CastExpression	"( unsigned char * ) safe_emalloc ( Z_STRLEN_P ( data ) * 2 , sizeof ( char ) , 1 )"		1228605	1					
ANR	1228719	CastTarget	unsigned char *		1228605	0					
ANR	1228720	CallExpression	"safe_emalloc ( Z_STRLEN_P ( data ) * 2 , sizeof ( char ) , 1 )"		1228605	1					
ANR	1228721	Callee	safe_emalloc		1228605	0					
ANR	1228722	Identifier	safe_emalloc		1228605	0					
ANR	1228723	ArgumentList	Z_STRLEN_P ( data ) * 2		1228605	1					
ANR	1228724	Argument	Z_STRLEN_P ( data ) * 2		1228605	0					
ANR	1228725	MultiplicativeExpression	Z_STRLEN_P ( data ) * 2		1228605	0		*			
ANR	1228726	CallExpression	Z_STRLEN_P ( data )		1228605	0					
ANR	1228727	Callee	Z_STRLEN_P		1228605	0					
ANR	1228728	Identifier	Z_STRLEN_P		1228605	0					
ANR	1228729	ArgumentList	data		1228605	1					
ANR	1228730	Argument	data		1228605	0					
ANR	1228731	Identifier	data		1228605	0					
ANR	1228732	PrimaryExpression	2		1228605	1					
ANR	1228733	Argument	sizeof ( char )		1228605	1					
ANR	1228734	SizeofExpression	sizeof ( char )		1228605	0					
ANR	1228735	Sizeof	sizeof		1228605	0					
ANR	1228736	SizeofOperand	char		1228605	1					
ANR	1228737	Argument	1		1228605	2					
ANR	1228738	PrimaryExpression	1		1228605	0					
ANR	1228739	ForStatement	for ( i = j = 0 ; i < Z_STRLEN_P ( data ) ; i ++ )		1228605	11					
ANR	1228740	ForInit	i = j = 0 ;	1008:6:35647:35656	1228605	0	True				
ANR	1228741	AssignmentExpression	i = j = 0		1228605	0		=			
ANR	1228742	Identifier	i		1228605	0					
ANR	1228743	AssignmentExpression	j = 0		1228605	1		=			
ANR	1228744	Identifier	j		1228605	0					
ANR	1228745	PrimaryExpression	0		1228605	1					
ANR	1228746	Condition	i < Z_STRLEN_P ( data )	1008:17:35658:35677	1228605	1	True				
ANR	1228747	RelationalExpression	i < Z_STRLEN_P ( data )		1228605	0		<			
ANR	1228748	Identifier	i		1228605	0					
ANR	1228749	CallExpression	Z_STRLEN_P ( data )		1228605	1					
ANR	1228750	Callee	Z_STRLEN_P		1228605	0					
ANR	1228751	Identifier	Z_STRLEN_P		1228605	0					
ANR	1228752	ArgumentList	data		1228605	1					
ANR	1228753	Argument	data		1228605	0					
ANR	1228754	Identifier	data		1228605	0					
ANR	1228755	PostIncDecOperationExpression	i ++	1008:39:35680:35682	1228605	2	True				
ANR	1228756	Identifier	i		1228605	0					
ANR	1228757	IncDec	++		1228605	1					
ANR	1228758	CompoundStatement		20:44:466:466	1228605	3					
ANR	1228759	ExpressionStatement	str [ j ++ ] = hexconvtab [ ( ( unsigned char ) Z_STRVAL_P ( data ) [ i ] ) >> 4 ]	1009:2:35689:35753	1228605	0	True				
ANR	1228760	AssignmentExpression	str [ j ++ ] = hexconvtab [ ( ( unsigned char ) Z_STRVAL_P ( data ) [ i ] ) >> 4 ]		1228605	0		=			
ANR	1228761	ArrayIndexing	str [ j ++ ]		1228605	0					
ANR	1228762	Identifier	str		1228605	0					
ANR	1228763	PostIncDecOperationExpression	j ++		1228605	1					
ANR	1228764	Identifier	j		1228605	0					
ANR	1228765	IncDec	++		1228605	1					
ANR	1228766	ArrayIndexing	hexconvtab [ ( ( unsigned char ) Z_STRVAL_P ( data ) [ i ] ) >> 4 ]		1228605	1					
ANR	1228767	Identifier	hexconvtab		1228605	0					
ANR	1228768	ShiftExpression	( ( unsigned char ) Z_STRVAL_P ( data ) [ i ] ) >> 4		1228605	1		>>			
ANR	1228769	CastExpression	( unsigned char ) Z_STRVAL_P ( data ) [ i ]		1228605	0					
ANR	1228770	CastTarget	unsigned char		1228605	0					
ANR	1228771	ArrayIndexing	Z_STRVAL_P ( data ) [ i ]		1228605	1					
ANR	1228772	CallExpression	Z_STRVAL_P ( data )		1228605	0					
ANR	1228773	Callee	Z_STRVAL_P		1228605	0					
ANR	1228774	Identifier	Z_STRVAL_P		1228605	0					
ANR	1228775	ArgumentList	data		1228605	1					
ANR	1228776	Argument	data		1228605	0					
ANR	1228777	Identifier	data		1228605	0					
ANR	1228778	Identifier	i		1228605	1					
ANR	1228779	PrimaryExpression	4		1228605	1					
ANR	1228780	ExpressionStatement	str [ j ++ ] = hexconvtab [ ( ( unsigned char ) Z_STRVAL_P ( data ) [ i ] ) & 15 ]	1010:2:35757:35821	1228605	1	True				
ANR	1228781	AssignmentExpression	str [ j ++ ] = hexconvtab [ ( ( unsigned char ) Z_STRVAL_P ( data ) [ i ] ) & 15 ]		1228605	0		=			
ANR	1228782	ArrayIndexing	str [ j ++ ]		1228605	0					
ANR	1228783	Identifier	str		1228605	0					
ANR	1228784	PostIncDecOperationExpression	j ++		1228605	1					
ANR	1228785	Identifier	j		1228605	0					
ANR	1228786	IncDec	++		1228605	1					
ANR	1228787	ArrayIndexing	hexconvtab [ ( ( unsigned char ) Z_STRVAL_P ( data ) [ i ] ) & 15 ]		1228605	1					
ANR	1228788	Identifier	hexconvtab		1228605	0					
ANR	1228789	BitAndExpression	( ( unsigned char ) Z_STRVAL_P ( data ) [ i ] ) & 15		1228605	1		&			
ANR	1228790	CastExpression	( unsigned char ) Z_STRVAL_P ( data ) [ i ]		1228605	0					
ANR	1228791	CastTarget	unsigned char		1228605	0					
ANR	1228792	ArrayIndexing	Z_STRVAL_P ( data ) [ i ]		1228605	1					
ANR	1228793	CallExpression	Z_STRVAL_P ( data )		1228605	0					
ANR	1228794	Callee	Z_STRVAL_P		1228605	0					
ANR	1228795	Identifier	Z_STRVAL_P		1228605	0					
ANR	1228796	ArgumentList	data		1228605	1					
ANR	1228797	Argument	data		1228605	0					
ANR	1228798	Identifier	data		1228605	0					
ANR	1228799	Identifier	i		1228605	1					
ANR	1228800	PrimaryExpression	15		1228605	1					
ANR	1228801	ExpressionStatement	str [ j ] = '\\0'	1012:1:35827:35840	1228605	12	True				
ANR	1228802	AssignmentExpression	str [ j ] = '\\0'		1228605	0		=			
ANR	1228803	ArrayIndexing	str [ j ]		1228605	0					
ANR	1228804	Identifier	str		1228605	0					
ANR	1228805	Identifier	j		1228605	1					
ANR	1228806	PrimaryExpression	'\\0'		1228605	1					
ANR	1228807	ExpressionStatement	"text = xmlNewTextLen ( str , Z_STRLEN_P ( data ) * 2 * sizeof ( char ) )"	1014:1:35844:35906	1228605	13	True				
ANR	1228808	AssignmentExpression	"text = xmlNewTextLen ( str , Z_STRLEN_P ( data ) * 2 * sizeof ( char ) )"		1228605	0		=			
ANR	1228809	Identifier	text		1228605	0					
ANR	1228810	CallExpression	"xmlNewTextLen ( str , Z_STRLEN_P ( data ) * 2 * sizeof ( char ) )"		1228605	1					
ANR	1228811	Callee	xmlNewTextLen		1228605	0					
ANR	1228812	Identifier	xmlNewTextLen		1228605	0					
ANR	1228813	ArgumentList	str		1228605	1					
ANR	1228814	Argument	str		1228605	0					
ANR	1228815	Identifier	str		1228605	0					
ANR	1228816	Argument	Z_STRLEN_P ( data ) * 2 * sizeof ( char )		1228605	1					
ANR	1228817	MultiplicativeExpression	Z_STRLEN_P ( data ) * 2 * sizeof ( char )		1228605	0		*			
ANR	1228818	CallExpression	Z_STRLEN_P ( data )		1228605	0					
ANR	1228819	Callee	Z_STRLEN_P		1228605	0					
ANR	1228820	Identifier	Z_STRLEN_P		1228605	0					
ANR	1228821	ArgumentList	data		1228605	1					
ANR	1228822	Argument	data		1228605	0					
ANR	1228823	Identifier	data		1228605	0					
ANR	1228824	MultiplicativeExpression	2 * sizeof ( char )		1228605	1		*			
ANR	1228825	PrimaryExpression	2		1228605	0					
ANR	1228826	SizeofExpression	sizeof ( char )		1228605	1					
ANR	1228827	Sizeof	sizeof		1228605	0					
ANR	1228828	SizeofOperand	char		1228605	1					
ANR	1228829	ExpressionStatement	"xmlAddChild ( ret , text )"	1015:1:35909:35931	1228605	14	True				
ANR	1228830	CallExpression	"xmlAddChild ( ret , text )"		1228605	0					
ANR	1228831	Callee	xmlAddChild		1228605	0					
ANR	1228832	Identifier	xmlAddChild		1228605	0					
ANR	1228833	ArgumentList	ret		1228605	1					
ANR	1228834	Argument	ret		1228605	0					
ANR	1228835	Identifier	ret		1228605	0					
ANR	1228836	Argument	text		1228605	1					
ANR	1228837	Identifier	text		1228605	0					
ANR	1228838	ExpressionStatement	efree ( str )	1016:1:35934:35944	1228605	15	True				
ANR	1228839	CallExpression	efree ( str )		1228605	0					
ANR	1228840	Callee	efree		1228605	0					
ANR	1228841	Identifier	efree		1228605	0					
ANR	1228842	ArgumentList	str		1228605	1					
ANR	1228843	Argument	str		1228605	0					
ANR	1228844	Identifier	str		1228605	0					
ANR	1228845	IfStatement	if ( data == & tmp )		1228605	16					
ANR	1228846	Condition	data == & tmp	1017:5:35951:35962	1228605	0	True				
ANR	1228847	EqualityExpression	data == & tmp		1228605	0		==			
ANR	1228848	Identifier	data		1228605	0					
ANR	1228849	UnaryOperationExpression	& tmp		1228605	1					
ANR	1228850	UnaryOperator	&		1228605	0					
ANR	1228851	Identifier	tmp		1228605	1					
ANR	1228852	CompoundStatement		29:19:746:746	1228605	1					
ANR	1228853	ExpressionStatement	zval_dtor ( & tmp )	1018:2:35969:35984	1228605	0	True				
ANR	1228854	CallExpression	zval_dtor ( & tmp )		1228605	0					
ANR	1228855	Callee	zval_dtor		1228605	0					
ANR	1228856	Identifier	zval_dtor		1228605	0					
ANR	1228857	ArgumentList	& tmp		1228605	1					
ANR	1228858	Argument	& tmp		1228605	0					
ANR	1228859	UnaryOperationExpression	& tmp		1228605	0					
ANR	1228860	UnaryOperator	&		1228605	0					
ANR	1228861	Identifier	tmp		1228605	1					
ANR	1228862	IfStatement	if ( style == SOAP_ENCODED )		1228605	17					
ANR	1228863	Condition	style == SOAP_ENCODED	1021:5:35995:36015	1228605	0	True				
ANR	1228864	EqualityExpression	style == SOAP_ENCODED		1228605	0		==			
ANR	1228865	Identifier	style		1228605	0					
ANR	1228866	Identifier	SOAP_ENCODED		1228605	1					
ANR	1228867	CompoundStatement		33:28:799:799	1228605	1					
ANR	1228868	ExpressionStatement	"set_ns_and_type ( ret , type )"	1022:2:36022:36048	1228605	0	True				
ANR	1228869	CallExpression	"set_ns_and_type ( ret , type )"		1228605	0					
ANR	1228870	Callee	set_ns_and_type		1228605	0					
ANR	1228871	Identifier	set_ns_and_type		1228605	0					
ANR	1228872	ArgumentList	ret		1228605	1					
ANR	1228873	Argument	ret		1228605	0					
ANR	1228874	Identifier	ret		1228605	0					
ANR	1228875	Argument	type		1228605	1					
ANR	1228876	Identifier	type		1228605	0					
ANR	1228877	ReturnStatement	return ret ;	1024:1:36054:36064	1228605	18	True				
ANR	1228878	Identifier	ret		1228605	0					
ANR	1228879	ReturnType	static xmlNodePtr		1228605	1					
ANR	1228880	Identifier	to_xml_hexbin		1228605	2					
ANR	1228881	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1228605	3					
ANR	1228882	Parameter	encodeTypePtr type	988:32:35146:35163	1228605	0	True				
ANR	1228883	ParameterType	encodeTypePtr		1228605	0					
ANR	1228884	Identifier	type		1228605	1					
ANR	1228885	Parameter	zval * data	988:52:35166:35175	1228605	1	True				
ANR	1228886	ParameterType	zval *		1228605	0					
ANR	1228887	Identifier	data		1228605	1					
ANR	1228888	Parameter	int style	988:64:35178:35186	1228605	2	True				
ANR	1228889	ParameterType	int		1228605	0					
ANR	1228890	Identifier	style		1228605	1					
ANR	1228891	Parameter	xmlNodePtr parent TSRMLS_DC	988:75:35189:35215	1228605	3	True				
ANR	1228892	ParameterType	xmlNodePtr parent		1228605	0					
ANR	1228893	Identifier	TSRMLS_DC		1228605	1					
ANR	1228894	CFGEntryNode	ENTRY		1228605		True				
ANR	1228895	CFGExitNode	EXIT		1228605		True				
ANR	1228896	Symbol	parent		1228605						
ANR	1228897	Symbol	data		1228605						
ANR	1228898	Symbol	* hexconvtab		1228605						
ANR	1228899	Symbol	type		1228605						
ANR	1228900	Symbol	TSRMLS_DC		1228605						
ANR	1228901	Symbol	xmlNewTextLen		1228605						
ANR	1228902	Symbol	tmp		1228605						
ANR	1228903	Symbol	* * Z_STRVAL_P		1228605						
ANR	1228904	Symbol	Z_STRLEN_P		1228605						
ANR	1228905	Symbol	text		1228605						
ANR	1228906	Symbol	IS_STRING		1228605						
ANR	1228907	Symbol	* Z_STRVAL_P		1228605						
ANR	1228908	Symbol	* str		1228605						
ANR	1228909	Symbol	ret		1228605						
ANR	1228910	Symbol	* * i		1228605						
ANR	1228911	Symbol	NULL		1228605						
ANR	1228912	Symbol	i		1228605						
ANR	1228913	Symbol	j		1228605						
ANR	1228914	Symbol	xmlNewNode		1228605						
ANR	1228915	Symbol	Z_TYPE_P		1228605						
ANR	1228916	Symbol	Z_STRVAL_P		1228605						
ANR	1228917	Symbol	str		1228605						
ANR	1228918	Symbol	* i		1228605						
ANR	1228919	Symbol	* j		1228605						
ANR	1228920	Symbol	style		1228605						
ANR	1228921	Symbol	& tmp		1228605						
ANR	1228922	Symbol	SOAP_ENCODED		1228605						
ANR	1228923	Symbol	hexconvtab		1228605						
ANR	1228924	Symbol	* data		1228605						
ANR	1228925	Symbol	safe_emalloc		1228605						
ANR	1228926	Symbol	BAD_CAST		1228605						
ANR	1228927	Function	to_zval_double	1027:0:36069:37320							
ANR	1228928	FunctionDef	"to_zval_double (encodeTypePtr type , xmlNodePtr data TSRMLS_DC)"		1228927	0					
ANR	1228929	CompoundStatement		1028:0:36144:37320	1228927	0					
ANR	1228930	IdentifierDeclStatement	zval * ret ;	1029:1:36147:36156	1228927	0	True				
ANR	1228931	IdentifierDecl	* ret		1228927	0					
ANR	1228932	IdentifierDeclType	zval *		1228927	0					
ANR	1228933	Identifier	ret		1228927	1					
ANR	1228934	ExpressionStatement	MAKE_STD_ZVAL ( ret )	1030:1:36159:36177	1228927	1	True				
ANR	1228935	CallExpression	MAKE_STD_ZVAL ( ret )		1228927	0					
ANR	1228936	Callee	MAKE_STD_ZVAL		1228927	0					
ANR	1228937	Identifier	MAKE_STD_ZVAL		1228927	0					
ANR	1228938	ArgumentList	ret		1228927	1					
ANR	1228939	Argument	ret		1228927	0					
ANR	1228940	Identifier	ret		1228927	0					
ANR	1228941	ExpressionStatement	"FIND_XML_NULL ( data , ret )"	1031:1:36180:36204	1228927	2	True				
ANR	1228942	CallExpression	"FIND_XML_NULL ( data , ret )"		1228927	0					
ANR	1228943	Callee	FIND_XML_NULL		1228927	0					
ANR	1228944	Identifier	FIND_XML_NULL		1228927	0					
ANR	1228945	ArgumentList	data		1228927	1					
ANR	1228946	Argument	data		1228927	0					
ANR	1228947	Identifier	data		1228927	0					
ANR	1228948	Argument	ret		1228927	1					
ANR	1228949	Identifier	ret		1228927	0					
ANR	1228950	IfStatement	if ( data && data -> children )		1228927	3					
ANR	1228951	Condition	data && data -> children	1033:5:36212:36233	1228927	0	True				
ANR	1228952	AndExpression	data && data -> children		1228927	0		&&			
ANR	1228953	Identifier	data		1228927	0					
ANR	1228954	PtrMemberAccess	data -> children		1228927	1					
ANR	1228955	Identifier	data		1228927	0					
ANR	1228956	Identifier	children		1228927	1					
ANR	1228957	CompoundStatement		6:29:91:91	1228927	1					
ANR	1228958	IfStatement	if ( data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL )		1228927	0					
ANR	1228959	Condition	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL	1034:6:36244:36312	1228927	0	True				
ANR	1228960	AndExpression	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL		1228927	0		&&			
ANR	1228961	EqualityExpression	data -> children -> type == XML_TEXT_NODE		1228927	0		==			
ANR	1228962	PtrMemberAccess	data -> children -> type		1228927	0					
ANR	1228963	PtrMemberAccess	data -> children		1228927	0					
ANR	1228964	Identifier	data		1228927	0					
ANR	1228965	Identifier	children		1228927	1					
ANR	1228966	Identifier	type		1228927	1					
ANR	1228967	Identifier	XML_TEXT_NODE		1228927	1					
ANR	1228968	EqualityExpression	data -> children -> next == NULL		1228927	1		==			
ANR	1228969	PtrMemberAccess	data -> children -> next		1228927	0					
ANR	1228970	PtrMemberAccess	data -> children		1228927	0					
ANR	1228971	Identifier	data		1228927	0					
ANR	1228972	Identifier	children		1228927	1					
ANR	1228973	Identifier	next		1228927	1					
ANR	1228974	Identifier	NULL		1228927	1					
ANR	1228975	CompoundStatement		9:3:189:200	1228927	1					
ANR	1228976	IdentifierDeclStatement	long lval ;	1035:3:36320:36329	1228927	0	True				
ANR	1228977	IdentifierDecl	lval		1228927	0					
ANR	1228978	IdentifierDeclType	long		1228927	0					
ANR	1228979	Identifier	lval		1228927	1					
ANR	1228980	IdentifierDeclStatement	double dval ;	1036:3:36334:36345	1228927	1	True				
ANR	1228981	IdentifierDecl	dval		1228927	0					
ANR	1228982	IdentifierDeclType	double		1228927	0					
ANR	1228983	Identifier	dval		1228927	1					
ANR	1228984	ExpressionStatement	whiteSpace_collapse ( data -> children -> content )	1038:3:36351:36395	1228927	2	True				
ANR	1228985	CallExpression	whiteSpace_collapse ( data -> children -> content )		1228927	0					
ANR	1228986	Callee	whiteSpace_collapse		1228927	0					
ANR	1228987	Identifier	whiteSpace_collapse		1228927	0					
ANR	1228988	ArgumentList	data -> children -> content		1228927	1					
ANR	1228989	Argument	data -> children -> content		1228927	0					
ANR	1228990	PtrMemberAccess	data -> children -> content		1228927	0					
ANR	1228991	PtrMemberAccess	data -> children		1228927	0					
ANR	1228992	Identifier	data		1228927	0					
ANR	1228993	Identifier	children		1228927	1					
ANR	1228994	Identifier	content		1228927	1					
ANR	1228995	SwitchStatement	"switch ( is_numeric_string ( ( char * ) data -> children -> content , strlen ( ( char * ) data -> children -> content ) , & lval , & dval , 0 ) )"		1228927	3					
ANR	1228996	Condition	"is_numeric_string ( ( char * ) data -> children -> content , strlen ( ( char * ) data -> children -> content ) , & lval , & dval , 0 )"	1039:11:36408:36513	1228927	0	True				
ANR	1228997	CallExpression	"is_numeric_string ( ( char * ) data -> children -> content , strlen ( ( char * ) data -> children -> content ) , & lval , & dval , 0 )"		1228927	0					
ANR	1228998	Callee	is_numeric_string		1228927	0					
ANR	1228999	Identifier	is_numeric_string		1228927	0					
ANR	1229000	ArgumentList	( char * ) data -> children -> content		1228927	1					
ANR	1229001	Argument	( char * ) data -> children -> content		1228927	0					
ANR	1229002	CastExpression	( char * ) data -> children -> content		1228927	0					
ANR	1229003	CastTarget	char *		1228927	0					
ANR	1229004	PtrMemberAccess	data -> children -> content		1228927	1					
ANR	1229005	PtrMemberAccess	data -> children		1228927	0					
ANR	1229006	Identifier	data		1228927	0					
ANR	1229007	Identifier	children		1228927	1					
ANR	1229008	Identifier	content		1228927	1					
ANR	1229009	Argument	strlen ( ( char * ) data -> children -> content )		1228927	1					
ANR	1229010	CallExpression	strlen ( ( char * ) data -> children -> content )		1228927	0					
ANR	1229011	Callee	strlen		1228927	0					
ANR	1229012	Identifier	strlen		1228927	0					
ANR	1229013	ArgumentList	( char * ) data -> children -> content		1228927	1					
ANR	1229014	Argument	( char * ) data -> children -> content		1228927	0					
ANR	1229015	CastExpression	( char * ) data -> children -> content		1228927	0					
ANR	1229016	CastTarget	char *		1228927	0					
ANR	1229017	PtrMemberAccess	data -> children -> content		1228927	1					
ANR	1229018	PtrMemberAccess	data -> children		1228927	0					
ANR	1229019	Identifier	data		1228927	0					
ANR	1229020	Identifier	children		1228927	1					
ANR	1229021	Identifier	content		1228927	1					
ANR	1229022	Argument	& lval		1228927	2					
ANR	1229023	UnaryOperationExpression	& lval		1228927	0					
ANR	1229024	UnaryOperator	&		1228927	0					
ANR	1229025	Identifier	lval		1228927	1					
ANR	1229026	Argument	& dval		1228927	3					
ANR	1229027	UnaryOperationExpression	& dval		1228927	0					
ANR	1229028	UnaryOperator	&		1228927	0					
ANR	1229029	Identifier	dval		1228927	1					
ANR	1229030	Argument	0		1228927	4					
ANR	1229031	PrimaryExpression	0		1228927	0					
ANR	1229032	CompoundStatement		12:119:371:371	1228927	1					
ANR	1229033	Label	case IS_LONG :	1040:4:36522:36534	1228927	0	True				
ANR	1229034	Identifier	IS_LONG		1228927	0					
ANR	1229035	ExpressionStatement	Z_TYPE_P ( ret ) = IS_DOUBLE	1041:5:36541:36566	1228927	1	True				
ANR	1229036	AssignmentExpression	Z_TYPE_P ( ret ) = IS_DOUBLE		1228927	0		=			
ANR	1229037	CallExpression	Z_TYPE_P ( ret )		1228927	0					
ANR	1229038	Callee	Z_TYPE_P		1228927	0					
ANR	1229039	Identifier	Z_TYPE_P		1228927	0					
ANR	1229040	ArgumentList	ret		1228927	1					
ANR	1229041	Argument	ret		1228927	0					
ANR	1229042	Identifier	ret		1228927	0					
ANR	1229043	Identifier	IS_DOUBLE		1228927	1					
ANR	1229044	ExpressionStatement	Z_DVAL_P ( ret ) = lval	1042:5:36573:36593	1228927	2	True				
ANR	1229045	AssignmentExpression	Z_DVAL_P ( ret ) = lval		1228927	0		=			
ANR	1229046	CallExpression	Z_DVAL_P ( ret )		1228927	0					
ANR	1229047	Callee	Z_DVAL_P		1228927	0					
ANR	1229048	Identifier	Z_DVAL_P		1228927	0					
ANR	1229049	ArgumentList	ret		1228927	1					
ANR	1229050	Argument	ret		1228927	0					
ANR	1229051	Identifier	ret		1228927	0					
ANR	1229052	Identifier	lval		1228927	1					
ANR	1229053	BreakStatement	break ;	1043:5:36600:36605	1228927	3	True				
ANR	1229054	Label	case IS_DOUBLE :	1044:4:36611:36625	1228927	4	True				
ANR	1229055	Identifier	IS_DOUBLE		1228927	0					
ANR	1229056	ExpressionStatement	Z_TYPE_P ( ret ) = IS_DOUBLE	1045:5:36632:36657	1228927	5	True				
ANR	1229057	AssignmentExpression	Z_TYPE_P ( ret ) = IS_DOUBLE		1228927	0		=			
ANR	1229058	CallExpression	Z_TYPE_P ( ret )		1228927	0					
ANR	1229059	Callee	Z_TYPE_P		1228927	0					
ANR	1229060	Identifier	Z_TYPE_P		1228927	0					
ANR	1229061	ArgumentList	ret		1228927	1					
ANR	1229062	Argument	ret		1228927	0					
ANR	1229063	Identifier	ret		1228927	0					
ANR	1229064	Identifier	IS_DOUBLE		1228927	1					
ANR	1229065	ExpressionStatement	Z_DVAL_P ( ret ) = dval	1046:5:36664:36684	1228927	6	True				
ANR	1229066	AssignmentExpression	Z_DVAL_P ( ret ) = dval		1228927	0		=			
ANR	1229067	CallExpression	Z_DVAL_P ( ret )		1228927	0					
ANR	1229068	Callee	Z_DVAL_P		1228927	0					
ANR	1229069	Identifier	Z_DVAL_P		1228927	0					
ANR	1229070	ArgumentList	ret		1228927	1					
ANR	1229071	Argument	ret		1228927	0					
ANR	1229072	Identifier	ret		1228927	0					
ANR	1229073	Identifier	dval		1228927	1					
ANR	1229074	BreakStatement	break ;	1047:5:36691:36696	1228927	7	True				
ANR	1229075	Label	default :	1048:4:36702:36709	1228927	8	True				
ANR	1229076	Identifier	default		1228927	0					
ANR	1229077	IfStatement	"if ( strncasecmp ( ( char * ) data -> children -> content , ""NaN"" , sizeof ( ""NaN"" ) - 1 ) == 0 )"		1228927	9					
ANR	1229078	Condition	"strncasecmp ( ( char * ) data -> children -> content , ""NaN"" , sizeof ( ""NaN"" ) - 1 ) == 0"	1049:9:36720:36791	1228927	0	True				
ANR	1229079	EqualityExpression	"strncasecmp ( ( char * ) data -> children -> content , ""NaN"" , sizeof ( ""NaN"" ) - 1 ) == 0"		1228927	0		==			
ANR	1229080	CallExpression	"strncasecmp ( ( char * ) data -> children -> content , ""NaN"" , sizeof ( ""NaN"" ) - 1 )"		1228927	0					
ANR	1229081	Callee	strncasecmp		1228927	0					
ANR	1229082	Identifier	strncasecmp		1228927	0					
ANR	1229083	ArgumentList	( char * ) data -> children -> content		1228927	1					
ANR	1229084	Argument	( char * ) data -> children -> content		1228927	0					
ANR	1229085	CastExpression	( char * ) data -> children -> content		1228927	0					
ANR	1229086	CastTarget	char *		1228927	0					
ANR	1229087	PtrMemberAccess	data -> children -> content		1228927	1					
ANR	1229088	PtrMemberAccess	data -> children		1228927	0					
ANR	1229089	Identifier	data		1228927	0					
ANR	1229090	Identifier	children		1228927	1					
ANR	1229091	Identifier	content		1228927	1					
ANR	1229092	Argument	"""NaN"""		1228927	1					
ANR	1229093	PrimaryExpression	"""NaN"""		1228927	0					
ANR	1229094	Argument	"sizeof ( ""NaN"" ) - 1"		1228927	2					
ANR	1229095	AdditiveExpression	"sizeof ( ""NaN"" ) - 1"		1228927	0		-			
ANR	1229096	SizeofExpression	"sizeof ( ""NaN"" )"		1228927	0					
ANR	1229097	Sizeof	sizeof		1228927	0					
ANR	1229098	PrimaryExpression	"""NaN"""		1228927	1					
ANR	1229099	PrimaryExpression	1		1228927	1					
ANR	1229100	PrimaryExpression	0		1228927	1					
ANR	1229101	CompoundStatement		22:83:649:649	1228927	1					
ANR	1229102	ExpressionStatement	"ZVAL_DOUBLE ( ret , php_get_nan ( ) )"	1050:6:36802:36833	1228927	0	True				
ANR	1229103	CallExpression	"ZVAL_DOUBLE ( ret , php_get_nan ( ) )"		1228927	0					
ANR	1229104	Callee	ZVAL_DOUBLE		1228927	0					
ANR	1229105	Identifier	ZVAL_DOUBLE		1228927	0					
ANR	1229106	ArgumentList	ret		1228927	1					
ANR	1229107	Argument	ret		1228927	0					
ANR	1229108	Identifier	ret		1228927	0					
ANR	1229109	Argument	php_get_nan ( )		1228927	1					
ANR	1229110	CallExpression	php_get_nan ( )		1228927	0					
ANR	1229111	Callee	php_get_nan		1228927	0					
ANR	1229112	Identifier	php_get_nan		1228927	0					
ANR	1229113	ArgumentList			1228927	1					
ANR	1229114	ElseStatement	else		1228927	0					
ANR	1229115	IfStatement	"if ( strncasecmp ( ( char * ) data -> children -> content , ""INF"" , sizeof ( ""INF"" ) - 1 ) == 0 )"		1228927	0					
ANR	1229116	Condition	"strncasecmp ( ( char * ) data -> children -> content , ""INF"" , sizeof ( ""INF"" ) - 1 ) == 0"	1051:16:36851:36922	1228927	0	True				
ANR	1229117	EqualityExpression	"strncasecmp ( ( char * ) data -> children -> content , ""INF"" , sizeof ( ""INF"" ) - 1 ) == 0"		1228927	0		==			
ANR	1229118	CallExpression	"strncasecmp ( ( char * ) data -> children -> content , ""INF"" , sizeof ( ""INF"" ) - 1 )"		1228927	0					
ANR	1229119	Callee	strncasecmp		1228927	0					
ANR	1229120	Identifier	strncasecmp		1228927	0					
ANR	1229121	ArgumentList	( char * ) data -> children -> content		1228927	1					
ANR	1229122	Argument	( char * ) data -> children -> content		1228927	0					
ANR	1229123	CastExpression	( char * ) data -> children -> content		1228927	0					
ANR	1229124	CastTarget	char *		1228927	0					
ANR	1229125	PtrMemberAccess	data -> children -> content		1228927	1					
ANR	1229126	PtrMemberAccess	data -> children		1228927	0					
ANR	1229127	Identifier	data		1228927	0					
ANR	1229128	Identifier	children		1228927	1					
ANR	1229129	Identifier	content		1228927	1					
ANR	1229130	Argument	"""INF"""		1228927	1					
ANR	1229131	PrimaryExpression	"""INF"""		1228927	0					
ANR	1229132	Argument	"sizeof ( ""INF"" ) - 1"		1228927	2					
ANR	1229133	AdditiveExpression	"sizeof ( ""INF"" ) - 1"		1228927	0		-			
ANR	1229134	SizeofExpression	"sizeof ( ""INF"" )"		1228927	0					
ANR	1229135	Sizeof	sizeof		1228927	0					
ANR	1229136	PrimaryExpression	"""INF"""		1228927	1					
ANR	1229137	PrimaryExpression	1		1228927	1					
ANR	1229138	PrimaryExpression	0		1228927	1					
ANR	1229139	CompoundStatement		24:90:780:780	1228927	1					
ANR	1229140	ExpressionStatement	"ZVAL_DOUBLE ( ret , php_get_inf ( ) )"	1052:6:36933:36964	1228927	0	True				
ANR	1229141	CallExpression	"ZVAL_DOUBLE ( ret , php_get_inf ( ) )"		1228927	0					
ANR	1229142	Callee	ZVAL_DOUBLE		1228927	0					
ANR	1229143	Identifier	ZVAL_DOUBLE		1228927	0					
ANR	1229144	ArgumentList	ret		1228927	1					
ANR	1229145	Argument	ret		1228927	0					
ANR	1229146	Identifier	ret		1228927	0					
ANR	1229147	Argument	php_get_inf ( )		1228927	1					
ANR	1229148	CallExpression	php_get_inf ( )		1228927	0					
ANR	1229149	Callee	php_get_inf		1228927	0					
ANR	1229150	Identifier	php_get_inf		1228927	0					
ANR	1229151	ArgumentList			1228927	1					
ANR	1229152	ElseStatement	else		1228927	0					
ANR	1229153	IfStatement	"if ( strncasecmp ( ( char * ) data -> children -> content , ""-INF"" , sizeof ( ""-INF"" ) - 1 ) == 0 )"		1228927	0					
ANR	1229154	Condition	"strncasecmp ( ( char * ) data -> children -> content , ""-INF"" , sizeof ( ""-INF"" ) - 1 ) == 0"	1053:16:36982:37055	1228927	0	True				
ANR	1229155	EqualityExpression	"strncasecmp ( ( char * ) data -> children -> content , ""-INF"" , sizeof ( ""-INF"" ) - 1 ) == 0"		1228927	0		==			
ANR	1229156	CallExpression	"strncasecmp ( ( char * ) data -> children -> content , ""-INF"" , sizeof ( ""-INF"" ) - 1 )"		1228927	0					
ANR	1229157	Callee	strncasecmp		1228927	0					
ANR	1229158	Identifier	strncasecmp		1228927	0					
ANR	1229159	ArgumentList	( char * ) data -> children -> content		1228927	1					
ANR	1229160	Argument	( char * ) data -> children -> content		1228927	0					
ANR	1229161	CastExpression	( char * ) data -> children -> content		1228927	0					
ANR	1229162	CastTarget	char *		1228927	0					
ANR	1229163	PtrMemberAccess	data -> children -> content		1228927	1					
ANR	1229164	PtrMemberAccess	data -> children		1228927	0					
ANR	1229165	Identifier	data		1228927	0					
ANR	1229166	Identifier	children		1228927	1					
ANR	1229167	Identifier	content		1228927	1					
ANR	1229168	Argument	"""-INF"""		1228927	1					
ANR	1229169	PrimaryExpression	"""-INF"""		1228927	0					
ANR	1229170	Argument	"sizeof ( ""-INF"" ) - 1"		1228927	2					
ANR	1229171	AdditiveExpression	"sizeof ( ""-INF"" ) - 1"		1228927	0		-			
ANR	1229172	SizeofExpression	"sizeof ( ""-INF"" )"		1228927	0					
ANR	1229173	Sizeof	sizeof		1228927	0					
ANR	1229174	PrimaryExpression	"""-INF"""		1228927	1					
ANR	1229175	PrimaryExpression	1		1228927	1					
ANR	1229176	PrimaryExpression	0		1228927	1					
ANR	1229177	CompoundStatement		26:92:913:913	1228927	1					
ANR	1229178	ExpressionStatement	"ZVAL_DOUBLE ( ret , - php_get_inf ( ) )"	1054:6:37066:37098	1228927	0	True				
ANR	1229179	CallExpression	"ZVAL_DOUBLE ( ret , - php_get_inf ( ) )"		1228927	0					
ANR	1229180	Callee	ZVAL_DOUBLE		1228927	0					
ANR	1229181	Identifier	ZVAL_DOUBLE		1228927	0					
ANR	1229182	ArgumentList	ret		1228927	1					
ANR	1229183	Argument	ret		1228927	0					
ANR	1229184	Identifier	ret		1228927	0					
ANR	1229185	Argument	- php_get_inf ( )		1228927	1					
ANR	1229186	UnaryOperationExpression	- php_get_inf ( )		1228927	0					
ANR	1229187	UnaryOperator	-		1228927	0					
ANR	1229188	CallExpression	php_get_inf ( )		1228927	1					
ANR	1229189	Callee	php_get_inf		1228927	0					
ANR	1229190	Identifier	php_get_inf		1228927	0					
ANR	1229191	ArgumentList			1228927	1					
ANR	1229192	ElseStatement	else		1228927	0					
ANR	1229193	CompoundStatement		28:12:967:967	1228927	0					
ANR	1229194	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	1056:6:37120:37181	1228927	0	True				
ANR	1229195	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1228927	0					
ANR	1229196	Callee	soap_error0		1228927	0					
ANR	1229197	Identifier	soap_error0		1228927	0					
ANR	1229198	ArgumentList	E_ERROR		1228927	1					
ANR	1229199	Argument	E_ERROR		1228927	0					
ANR	1229200	Identifier	E_ERROR		1228927	0					
ANR	1229201	Argument	"""Encoding: Violation of encoding rules"""		1228927	1					
ANR	1229202	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1228927	0					
ANR	1229203	ElseStatement	else		1228927	0					
ANR	1229204	CompoundStatement		32:9:1059:1059	1228927	0					
ANR	1229205	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	1060:3:37209:37270	1228927	0	True				
ANR	1229206	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1228927	0					
ANR	1229207	Callee	soap_error0		1228927	0					
ANR	1229208	Identifier	soap_error0		1228927	0					
ANR	1229209	ArgumentList	E_ERROR		1228927	1					
ANR	1229210	Argument	E_ERROR		1228927	0					
ANR	1229211	Identifier	E_ERROR		1228927	0					
ANR	1229212	Argument	"""Encoding: Violation of encoding rules"""		1228927	1					
ANR	1229213	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1228927	0					
ANR	1229214	ElseStatement	else		1228927	0					
ANR	1229215	CompoundStatement		35:8:1139:1139	1228927	0					
ANR	1229216	ExpressionStatement	ZVAL_NULL ( ret )	1063:2:37288:37302	1228927	0	True				
ANR	1229217	CallExpression	ZVAL_NULL ( ret )		1228927	0					
ANR	1229218	Callee	ZVAL_NULL		1228927	0					
ANR	1229219	Identifier	ZVAL_NULL		1228927	0					
ANR	1229220	ArgumentList	ret		1228927	1					
ANR	1229221	Argument	ret		1228927	0					
ANR	1229222	Identifier	ret		1228927	0					
ANR	1229223	ReturnStatement	return ret ;	1065:1:37308:37318	1228927	4	True				
ANR	1229224	Identifier	ret		1228927	0					
ANR	1229225	ReturnType	static zval *		1228927	1					
ANR	1229226	Identifier	to_zval_double		1228927	2					
ANR	1229227	ParameterList	"encodeTypePtr type , xmlNodePtr data TSRMLS_DC"		1228927	3					
ANR	1229228	Parameter	encodeTypePtr type	1027:28:36097:36114	1228927	0	True				
ANR	1229229	ParameterType	encodeTypePtr		1228927	0					
ANR	1229230	Identifier	type		1228927	1					
ANR	1229231	Parameter	xmlNodePtr data TSRMLS_DC	1027:48:36117:36141	1228927	1	True				
ANR	1229232	ParameterType	xmlNodePtr data		1228927	0					
ANR	1229233	Identifier	TSRMLS_DC		1228927	1					
ANR	1229234	CFGEntryNode	ENTRY		1228927		True				
ANR	1229235	CFGExitNode	EXIT		1228927		True				
ANR	1229236	Symbol	* * data		1228927						
ANR	1229237	Symbol	data -> children -> next		1228927						
ANR	1229238	Symbol	data		1228927						
ANR	1229239	Symbol	php_get_nan		1228927						
ANR	1229240	Symbol	lval		1228927						
ANR	1229241	Symbol	strncasecmp		1228927						
ANR	1229242	Symbol	type		1228927						
ANR	1229243	Symbol	TSRMLS_DC		1228927						
ANR	1229244	Symbol	strlen		1228927						
ANR	1229245	Symbol	dval		1228927						
ANR	1229246	Symbol	XML_TEXT_NODE		1228927						
ANR	1229247	Symbol	data -> children -> content		1228927						
ANR	1229248	Symbol	* data -> children		1228927						
ANR	1229249	Symbol	php_get_inf		1228927						
ANR	1229250	Symbol	ret		1228927						
ANR	1229251	Symbol	& lval		1228927						
ANR	1229252	Symbol	NULL		1228927						
ANR	1229253	Symbol	Z_TYPE_P		1228927						
ANR	1229254	Symbol	Z_DVAL_P		1228927						
ANR	1229255	Symbol	is_numeric_string		1228927						
ANR	1229256	Symbol	E_ERROR		1228927						
ANR	1229257	Symbol	data -> children		1228927						
ANR	1229258	Symbol	IS_DOUBLE		1228927						
ANR	1229259	Symbol	* data		1228927						
ANR	1229260	Symbol	& dval		1228927						
ANR	1229261	Symbol	data -> children -> type		1228927						
ANR	1229262	Function	to_zval_long	1068:0:37323:38130							
ANR	1229263	FunctionDef	"to_zval_long (encodeTypePtr type , xmlNodePtr data TSRMLS_DC)"		1229262	0					
ANR	1229264	CompoundStatement		1069:0:37396:38130	1229262	0					
ANR	1229265	IdentifierDeclStatement	zval * ret ;	1070:1:37399:37408	1229262	0	True				
ANR	1229266	IdentifierDecl	* ret		1229262	0					
ANR	1229267	IdentifierDeclType	zval *		1229262	0					
ANR	1229268	Identifier	ret		1229262	1					
ANR	1229269	ExpressionStatement	MAKE_STD_ZVAL ( ret )	1071:1:37411:37429	1229262	1	True				
ANR	1229270	CallExpression	MAKE_STD_ZVAL ( ret )		1229262	0					
ANR	1229271	Callee	MAKE_STD_ZVAL		1229262	0					
ANR	1229272	Identifier	MAKE_STD_ZVAL		1229262	0					
ANR	1229273	ArgumentList	ret		1229262	1					
ANR	1229274	Argument	ret		1229262	0					
ANR	1229275	Identifier	ret		1229262	0					
ANR	1229276	ExpressionStatement	"FIND_XML_NULL ( data , ret )"	1072:1:37432:37456	1229262	2	True				
ANR	1229277	CallExpression	"FIND_XML_NULL ( data , ret )"		1229262	0					
ANR	1229278	Callee	FIND_XML_NULL		1229262	0					
ANR	1229279	Identifier	FIND_XML_NULL		1229262	0					
ANR	1229280	ArgumentList	data		1229262	1					
ANR	1229281	Argument	data		1229262	0					
ANR	1229282	Identifier	data		1229262	0					
ANR	1229283	Argument	ret		1229262	1					
ANR	1229284	Identifier	ret		1229262	0					
ANR	1229285	IfStatement	if ( data && data -> children )		1229262	3					
ANR	1229286	Condition	data && data -> children	1074:5:37464:37485	1229262	0	True				
ANR	1229287	AndExpression	data && data -> children		1229262	0		&&			
ANR	1229288	Identifier	data		1229262	0					
ANR	1229289	PtrMemberAccess	data -> children		1229262	1					
ANR	1229290	Identifier	data		1229262	0					
ANR	1229291	Identifier	children		1229262	1					
ANR	1229292	CompoundStatement		6:29:91:91	1229262	1					
ANR	1229293	IfStatement	if ( data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL )		1229262	0					
ANR	1229294	Condition	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL	1075:6:37496:37564	1229262	0	True				
ANR	1229295	AndExpression	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL		1229262	0		&&			
ANR	1229296	EqualityExpression	data -> children -> type == XML_TEXT_NODE		1229262	0		==			
ANR	1229297	PtrMemberAccess	data -> children -> type		1229262	0					
ANR	1229298	PtrMemberAccess	data -> children		1229262	0					
ANR	1229299	Identifier	data		1229262	0					
ANR	1229300	Identifier	children		1229262	1					
ANR	1229301	Identifier	type		1229262	1					
ANR	1229302	Identifier	XML_TEXT_NODE		1229262	1					
ANR	1229303	EqualityExpression	data -> children -> next == NULL		1229262	1		==			
ANR	1229304	PtrMemberAccess	data -> children -> next		1229262	0					
ANR	1229305	PtrMemberAccess	data -> children		1229262	0					
ANR	1229306	Identifier	data		1229262	0					
ANR	1229307	Identifier	children		1229262	1					
ANR	1229308	Identifier	next		1229262	1					
ANR	1229309	Identifier	NULL		1229262	1					
ANR	1229310	CompoundStatement		9:3:189:200	1229262	1					
ANR	1229311	IdentifierDeclStatement	long lval ;	1076:3:37572:37581	1229262	0	True				
ANR	1229312	IdentifierDecl	lval		1229262	0					
ANR	1229313	IdentifierDeclType	long		1229262	0					
ANR	1229314	Identifier	lval		1229262	1					
ANR	1229315	IdentifierDeclStatement	double dval ;	1077:3:37586:37597	1229262	1	True				
ANR	1229316	IdentifierDecl	dval		1229262	0					
ANR	1229317	IdentifierDeclType	double		1229262	0					
ANR	1229318	Identifier	dval		1229262	1					
ANR	1229319	ExpressionStatement	whiteSpace_collapse ( data -> children -> content )	1079:3:37603:37647	1229262	2	True				
ANR	1229320	CallExpression	whiteSpace_collapse ( data -> children -> content )		1229262	0					
ANR	1229321	Callee	whiteSpace_collapse		1229262	0					
ANR	1229322	Identifier	whiteSpace_collapse		1229262	0					
ANR	1229323	ArgumentList	data -> children -> content		1229262	1					
ANR	1229324	Argument	data -> children -> content		1229262	0					
ANR	1229325	PtrMemberAccess	data -> children -> content		1229262	0					
ANR	1229326	PtrMemberAccess	data -> children		1229262	0					
ANR	1229327	Identifier	data		1229262	0					
ANR	1229328	Identifier	children		1229262	1					
ANR	1229329	Identifier	content		1229262	1					
ANR	1229330	ExpressionStatement	errno = 0	1080:3:37652:37661	1229262	3	True				
ANR	1229331	AssignmentExpression	errno = 0		1229262	0		=			
ANR	1229332	Identifier	errno		1229262	0					
ANR	1229333	PrimaryExpression	0		1229262	1					
ANR	1229334	SwitchStatement	"switch ( ( Z_TYPE_P ( ret ) = is_numeric_string ( ( char * ) data -> children -> content , strlen ( ( char * ) data -> children -> content ) , & lval , & dval , 0 ) ) )"		1229262	4					
ANR	1229335	Condition	"Z_TYPE_P ( ret ) = is_numeric_string ( ( char * ) data -> children -> content , strlen ( ( char * ) data -> children -> content ) , & lval , & dval , 0 )"	1082:11:37675:37798	1229262	0	True				
ANR	1229336	AssignmentExpression	"Z_TYPE_P ( ret ) = is_numeric_string ( ( char * ) data -> children -> content , strlen ( ( char * ) data -> children -> content ) , & lval , & dval , 0 )"		1229262	0		=			
ANR	1229337	CallExpression	Z_TYPE_P ( ret )		1229262	0					
ANR	1229338	Callee	Z_TYPE_P		1229262	0					
ANR	1229339	Identifier	Z_TYPE_P		1229262	0					
ANR	1229340	ArgumentList	ret		1229262	1					
ANR	1229341	Argument	ret		1229262	0					
ANR	1229342	Identifier	ret		1229262	0					
ANR	1229343	CallExpression	"is_numeric_string ( ( char * ) data -> children -> content , strlen ( ( char * ) data -> children -> content ) , & lval , & dval , 0 )"		1229262	1					
ANR	1229344	Callee	is_numeric_string		1229262	0					
ANR	1229345	Identifier	is_numeric_string		1229262	0					
ANR	1229346	ArgumentList	( char * ) data -> children -> content		1229262	1					
ANR	1229347	Argument	( char * ) data -> children -> content		1229262	0					
ANR	1229348	CastExpression	( char * ) data -> children -> content		1229262	0					
ANR	1229349	CastTarget	char *		1229262	0					
ANR	1229350	PtrMemberAccess	data -> children -> content		1229262	1					
ANR	1229351	PtrMemberAccess	data -> children		1229262	0					
ANR	1229352	Identifier	data		1229262	0					
ANR	1229353	Identifier	children		1229262	1					
ANR	1229354	Identifier	content		1229262	1					
ANR	1229355	Argument	strlen ( ( char * ) data -> children -> content )		1229262	1					
ANR	1229356	CallExpression	strlen ( ( char * ) data -> children -> content )		1229262	0					
ANR	1229357	Callee	strlen		1229262	0					
ANR	1229358	Identifier	strlen		1229262	0					
ANR	1229359	ArgumentList	( char * ) data -> children -> content		1229262	1					
ANR	1229360	Argument	( char * ) data -> children -> content		1229262	0					
ANR	1229361	CastExpression	( char * ) data -> children -> content		1229262	0					
ANR	1229362	CastTarget	char *		1229262	0					
ANR	1229363	PtrMemberAccess	data -> children -> content		1229262	1					
ANR	1229364	PtrMemberAccess	data -> children		1229262	0					
ANR	1229365	Identifier	data		1229262	0					
ANR	1229366	Identifier	children		1229262	1					
ANR	1229367	Identifier	content		1229262	1					
ANR	1229368	Argument	& lval		1229262	2					
ANR	1229369	UnaryOperationExpression	& lval		1229262	0					
ANR	1229370	UnaryOperator	&		1229262	0					
ANR	1229371	Identifier	lval		1229262	1					
ANR	1229372	Argument	& dval		1229262	3					
ANR	1229373	UnaryOperationExpression	& dval		1229262	0					
ANR	1229374	UnaryOperator	&		1229262	0					
ANR	1229375	Identifier	dval		1229262	1					
ANR	1229376	Argument	0		1229262	4					
ANR	1229377	PrimaryExpression	0		1229262	0					
ANR	1229378	CompoundStatement		14:137:404:404	1229262	1					
ANR	1229379	Label	case IS_LONG :	1083:4:37807:37819	1229262	0	True				
ANR	1229380	Identifier	IS_LONG		1229262	0					
ANR	1229381	ExpressionStatement	Z_LVAL_P ( ret ) = lval	1084:5:37826:37846	1229262	1	True				
ANR	1229382	AssignmentExpression	Z_LVAL_P ( ret ) = lval		1229262	0		=			
ANR	1229383	CallExpression	Z_LVAL_P ( ret )		1229262	0					
ANR	1229384	Callee	Z_LVAL_P		1229262	0					
ANR	1229385	Identifier	Z_LVAL_P		1229262	0					
ANR	1229386	ArgumentList	ret		1229262	1					
ANR	1229387	Argument	ret		1229262	0					
ANR	1229388	Identifier	ret		1229262	0					
ANR	1229389	Identifier	lval		1229262	1					
ANR	1229390	BreakStatement	break ;	1085:5:37853:37858	1229262	2	True				
ANR	1229391	Label	case IS_DOUBLE :	1086:4:37864:37878	1229262	3	True				
ANR	1229392	Identifier	IS_DOUBLE		1229262	0					
ANR	1229393	ExpressionStatement	Z_DVAL_P ( ret ) = dval	1087:5:37885:37905	1229262	4	True				
ANR	1229394	AssignmentExpression	Z_DVAL_P ( ret ) = dval		1229262	0		=			
ANR	1229395	CallExpression	Z_DVAL_P ( ret )		1229262	0					
ANR	1229396	Callee	Z_DVAL_P		1229262	0					
ANR	1229397	Identifier	Z_DVAL_P		1229262	0					
ANR	1229398	ArgumentList	ret		1229262	1					
ANR	1229399	Argument	ret		1229262	0					
ANR	1229400	Identifier	ret		1229262	0					
ANR	1229401	Identifier	dval		1229262	1					
ANR	1229402	BreakStatement	break ;	1088:5:37912:37917	1229262	5	True				
ANR	1229403	Label	default :	1089:4:37923:37930	1229262	6	True				
ANR	1229404	Identifier	default		1229262	0					
ANR	1229405	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	1090:5:37937:37998	1229262	7	True				
ANR	1229406	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1229262	0					
ANR	1229407	Callee	soap_error0		1229262	0					
ANR	1229408	Identifier	soap_error0		1229262	0					
ANR	1229409	ArgumentList	E_ERROR		1229262	1					
ANR	1229410	Argument	E_ERROR		1229262	0					
ANR	1229411	Identifier	E_ERROR		1229262	0					
ANR	1229412	Argument	"""Encoding: Violation of encoding rules"""		1229262	1					
ANR	1229413	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1229262	0					
ANR	1229414	ElseStatement	else		1229262	0					
ANR	1229415	CompoundStatement		24:9:617:617	1229262	0					
ANR	1229416	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	1093:3:38019:38080	1229262	0	True				
ANR	1229417	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1229262	0					
ANR	1229418	Callee	soap_error0		1229262	0					
ANR	1229419	Identifier	soap_error0		1229262	0					
ANR	1229420	ArgumentList	E_ERROR		1229262	1					
ANR	1229421	Argument	E_ERROR		1229262	0					
ANR	1229422	Identifier	E_ERROR		1229262	0					
ANR	1229423	Argument	"""Encoding: Violation of encoding rules"""		1229262	1					
ANR	1229424	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1229262	0					
ANR	1229425	ElseStatement	else		1229262	0					
ANR	1229426	CompoundStatement		27:8:697:697	1229262	0					
ANR	1229427	ExpressionStatement	ZVAL_NULL ( ret )	1096:2:38098:38112	1229262	0	True				
ANR	1229428	CallExpression	ZVAL_NULL ( ret )		1229262	0					
ANR	1229429	Callee	ZVAL_NULL		1229262	0					
ANR	1229430	Identifier	ZVAL_NULL		1229262	0					
ANR	1229431	ArgumentList	ret		1229262	1					
ANR	1229432	Argument	ret		1229262	0					
ANR	1229433	Identifier	ret		1229262	0					
ANR	1229434	ReturnStatement	return ret ;	1098:1:38118:38128	1229262	4	True				
ANR	1229435	Identifier	ret		1229262	0					
ANR	1229436	ReturnType	static zval *		1229262	1					
ANR	1229437	Identifier	to_zval_long		1229262	2					
ANR	1229438	ParameterList	"encodeTypePtr type , xmlNodePtr data TSRMLS_DC"		1229262	3					
ANR	1229439	Parameter	encodeTypePtr type	1068:26:37349:37366	1229262	0	True				
ANR	1229440	ParameterType	encodeTypePtr		1229262	0					
ANR	1229441	Identifier	type		1229262	1					
ANR	1229442	Parameter	xmlNodePtr data TSRMLS_DC	1068:46:37369:37393	1229262	1	True				
ANR	1229443	ParameterType	xmlNodePtr data		1229262	0					
ANR	1229444	Identifier	TSRMLS_DC		1229262	1					
ANR	1229445	CFGEntryNode	ENTRY		1229262		True				
ANR	1229446	CFGExitNode	EXIT		1229262		True				
ANR	1229447	Symbol	ret		1229262						
ANR	1229448	Symbol	* * data		1229262						
ANR	1229449	Symbol	data -> children -> next		1229262						
ANR	1229450	Symbol	errno		1229262						
ANR	1229451	Symbol	& lval		1229262						
ANR	1229452	Symbol	NULL		1229262						
ANR	1229453	Symbol	data		1229262						
ANR	1229454	Symbol	lval		1229262						
ANR	1229455	Symbol	type		1229262						
ANR	1229456	Symbol	Z_TYPE_P		1229262						
ANR	1229457	Symbol	TSRMLS_DC		1229262						
ANR	1229458	Symbol	Z_DVAL_P		1229262						
ANR	1229459	Symbol	Z_LVAL_P		1229262						
ANR	1229460	Symbol	strlen		1229262						
ANR	1229461	Symbol	dval		1229262						
ANR	1229462	Symbol	XML_TEXT_NODE		1229262						
ANR	1229463	Symbol	is_numeric_string		1229262						
ANR	1229464	Symbol	E_ERROR		1229262						
ANR	1229465	Symbol	data -> children		1229262						
ANR	1229466	Symbol	data -> children -> content		1229262						
ANR	1229467	Symbol	* data -> children		1229262						
ANR	1229468	Symbol	* data		1229262						
ANR	1229469	Symbol	& dval		1229262						
ANR	1229470	Symbol	data -> children -> type		1229262						
ANR	1229471	Function	to_xml_long	1101:0:38133:38822							
ANR	1229472	FunctionDef	"to_xml_long (encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1229471	0					
ANR	1229473	CompoundStatement		1102:0:38235:38822	1229471	0					
ANR	1229474	IdentifierDeclStatement	xmlNodePtr ret ;	1103:1:38238:38252	1229471	0	True				
ANR	1229475	IdentifierDecl	ret		1229471	0					
ANR	1229476	IdentifierDeclType	xmlNodePtr		1229471	0					
ANR	1229477	Identifier	ret		1229471	1					
ANR	1229478	ExpressionStatement	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1105:1:38256:38297	1229471	1	True				
ANR	1229479	AssignmentExpression	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1229471	0		=			
ANR	1229480	Identifier	ret		1229471	0					
ANR	1229481	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1229471	1					
ANR	1229482	Callee	xmlNewNode		1229471	0					
ANR	1229483	Identifier	xmlNewNode		1229471	0					
ANR	1229484	ArgumentList	NULL		1229471	1					
ANR	1229485	Argument	NULL		1229471	0					
ANR	1229486	Identifier	NULL		1229471	0					
ANR	1229487	Argument	"BAD_CAST ( ""BOGUS"" )"		1229471	1					
ANR	1229488	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1229471	0					
ANR	1229489	Callee	BAD_CAST		1229471	0					
ANR	1229490	Identifier	BAD_CAST		1229471	0					
ANR	1229491	ArgumentList	"""BOGUS"""		1229471	1					
ANR	1229492	Argument	"""BOGUS"""		1229471	0					
ANR	1229493	PrimaryExpression	"""BOGUS"""		1229471	0					
ANR	1229494	ExpressionStatement	"xmlAddChild ( parent , ret )"	1106:1:38300:38324	1229471	2	True				
ANR	1229495	CallExpression	"xmlAddChild ( parent , ret )"		1229471	0					
ANR	1229496	Callee	xmlAddChild		1229471	0					
ANR	1229497	Identifier	xmlAddChild		1229471	0					
ANR	1229498	ArgumentList	parent		1229471	1					
ANR	1229499	Argument	parent		1229471	0					
ANR	1229500	Identifier	parent		1229471	0					
ANR	1229501	Argument	ret		1229471	1					
ANR	1229502	Identifier	ret		1229471	0					
ANR	1229503	ExpressionStatement	"FIND_ZVAL_NULL ( data , ret , style )"	1107:1:38327:38359	1229471	3	True				
ANR	1229504	CallExpression	"FIND_ZVAL_NULL ( data , ret , style )"		1229471	0					
ANR	1229505	Callee	FIND_ZVAL_NULL		1229471	0					
ANR	1229506	Identifier	FIND_ZVAL_NULL		1229471	0					
ANR	1229507	ArgumentList	data		1229471	1					
ANR	1229508	Argument	data		1229471	0					
ANR	1229509	Identifier	data		1229471	0					
ANR	1229510	Argument	ret		1229471	1					
ANR	1229511	Identifier	ret		1229471	0					
ANR	1229512	Argument	style		1229471	2					
ANR	1229513	Identifier	style		1229471	0					
ANR	1229514	IfStatement	if ( Z_TYPE_P ( data ) == IS_DOUBLE )		1229471	4					
ANR	1229515	Condition	Z_TYPE_P ( data ) == IS_DOUBLE	1109:5:38367:38393	1229471	0	True				
ANR	1229516	EqualityExpression	Z_TYPE_P ( data ) == IS_DOUBLE		1229471	0		==			
ANR	1229517	CallExpression	Z_TYPE_P ( data )		1229471	0					
ANR	1229518	Callee	Z_TYPE_P		1229471	0					
ANR	1229519	Identifier	Z_TYPE_P		1229471	0					
ANR	1229520	ArgumentList	data		1229471	1					
ANR	1229521	Argument	data		1229471	0					
ANR	1229522	Identifier	data		1229471	0					
ANR	1229523	Identifier	IS_DOUBLE		1229471	1					
ANR	1229524	CompoundStatement		9:2:164:175	1229471	1					
ANR	1229525	IdentifierDeclStatement	char s [ 256 ] ;	1110:2:38400:38411	1229471	0	True				
ANR	1229526	IdentifierDecl	s [ 256 ]		1229471	0					
ANR	1229527	IdentifierDeclType	char [ 256 ]		1229471	0					
ANR	1229528	Identifier	s		1229471	1					
ANR	1229529	PrimaryExpression	256		1229471	2					
ANR	1229530	ExpressionStatement	"snprintf ( s , sizeof ( s ) , ""%0.0F"" , floor ( Z_DVAL_P ( data ) ) )"	1112:2:38416:38469	1229471	1	True				
ANR	1229531	CallExpression	"snprintf ( s , sizeof ( s ) , ""%0.0F"" , floor ( Z_DVAL_P ( data ) ) )"		1229471	0					
ANR	1229532	Callee	snprintf		1229471	0					
ANR	1229533	Identifier	snprintf		1229471	0					
ANR	1229534	ArgumentList	s		1229471	1					
ANR	1229535	Argument	s		1229471	0					
ANR	1229536	Identifier	s		1229471	0					
ANR	1229537	Argument	sizeof ( s )		1229471	1					
ANR	1229538	SizeofExpression	sizeof ( s )		1229471	0					
ANR	1229539	Sizeof	sizeof		1229471	0					
ANR	1229540	SizeofOperand	s		1229471	1					
ANR	1229541	Argument	"""%0.0F"""		1229471	2					
ANR	1229542	PrimaryExpression	"""%0.0F"""		1229471	0					
ANR	1229543	Argument	floor ( Z_DVAL_P ( data ) )		1229471	3					
ANR	1229544	CallExpression	floor ( Z_DVAL_P ( data ) )		1229471	0					
ANR	1229545	Callee	floor		1229471	0					
ANR	1229546	Identifier	floor		1229471	0					
ANR	1229547	ArgumentList	Z_DVAL_P ( data )		1229471	1					
ANR	1229548	Argument	Z_DVAL_P ( data )		1229471	0					
ANR	1229549	CallExpression	Z_DVAL_P ( data )		1229471	0					
ANR	1229550	Callee	Z_DVAL_P		1229471	0					
ANR	1229551	Identifier	Z_DVAL_P		1229471	0					
ANR	1229552	ArgumentList	data		1229471	1					
ANR	1229553	Argument	data		1229471	0					
ANR	1229554	Identifier	data		1229471	0					
ANR	1229555	ExpressionStatement	"xmlNodeSetContent ( ret , BAD_CAST ( s ) )"	1113:2:38473:38508	1229471	2	True				
ANR	1229556	CallExpression	"xmlNodeSetContent ( ret , BAD_CAST ( s ) )"		1229471	0					
ANR	1229557	Callee	xmlNodeSetContent		1229471	0					
ANR	1229558	Identifier	xmlNodeSetContent		1229471	0					
ANR	1229559	ArgumentList	ret		1229471	1					
ANR	1229560	Argument	ret		1229471	0					
ANR	1229561	Identifier	ret		1229471	0					
ANR	1229562	Argument	BAD_CAST ( s )		1229471	1					
ANR	1229563	CallExpression	BAD_CAST ( s )		1229471	0					
ANR	1229564	Callee	BAD_CAST		1229471	0					
ANR	1229565	Identifier	BAD_CAST		1229471	0					
ANR	1229566	ArgumentList	s		1229471	1					
ANR	1229567	Argument	s		1229471	0					
ANR	1229568	Identifier	s		1229471	0					
ANR	1229569	ElseStatement	else		1229471	0					
ANR	1229570	CompoundStatement		14:2:286:302	1229471	0					
ANR	1229571	IdentifierDeclStatement	zval tmp = * data ;	1115:2:38522:38538	1229471	0	True				
ANR	1229572	IdentifierDecl	tmp = * data		1229471	0					
ANR	1229573	IdentifierDeclType	zval		1229471	0					
ANR	1229574	Identifier	tmp		1229471	1					
ANR	1229575	AssignmentExpression	tmp = * data		1229471	2		=			
ANR	1229576	Identifier	tmp		1229471	0					
ANR	1229577	UnaryOperationExpression	* data		1229471	1					
ANR	1229578	UnaryOperator	*		1229471	0					
ANR	1229579	Identifier	data		1229471	1					
ANR	1229580	ExpressionStatement	zval_copy_ctor ( & tmp )	1117:2:38543:38563	1229471	1	True				
ANR	1229581	CallExpression	zval_copy_ctor ( & tmp )		1229471	0					
ANR	1229582	Callee	zval_copy_ctor		1229471	0					
ANR	1229583	Identifier	zval_copy_ctor		1229471	0					
ANR	1229584	ArgumentList	& tmp		1229471	1					
ANR	1229585	Argument	& tmp		1229471	0					
ANR	1229586	UnaryOperationExpression	& tmp		1229471	0					
ANR	1229587	UnaryOperator	&		1229471	0					
ANR	1229588	Identifier	tmp		1229471	1					
ANR	1229589	IfStatement	if ( Z_TYPE ( tmp ) != IS_LONG )		1229471	2					
ANR	1229590	Condition	Z_TYPE ( tmp ) != IS_LONG	1118:6:38571:38592	1229471	0	True				
ANR	1229591	EqualityExpression	Z_TYPE ( tmp ) != IS_LONG		1229471	0		!=			
ANR	1229592	CallExpression	Z_TYPE ( tmp )		1229471	0					
ANR	1229593	Callee	Z_TYPE		1229471	0					
ANR	1229594	Identifier	Z_TYPE		1229471	0					
ANR	1229595	ArgumentList	tmp		1229471	1					
ANR	1229596	Argument	tmp		1229471	0					
ANR	1229597	Identifier	tmp		1229471	0					
ANR	1229598	Identifier	IS_LONG		1229471	1					
ANR	1229599	CompoundStatement		17:30:359:359	1229471	1					
ANR	1229600	ExpressionStatement	convert_to_long ( & tmp )	1119:3:38600:38621	1229471	0	True				
ANR	1229601	CallExpression	convert_to_long ( & tmp )		1229471	0					
ANR	1229602	Callee	convert_to_long		1229471	0					
ANR	1229603	Identifier	convert_to_long		1229471	0					
ANR	1229604	ArgumentList	& tmp		1229471	1					
ANR	1229605	Argument	& tmp		1229471	0					
ANR	1229606	UnaryOperationExpression	& tmp		1229471	0					
ANR	1229607	UnaryOperator	&		1229471	0					
ANR	1229608	Identifier	tmp		1229471	1					
ANR	1229609	ExpressionStatement	convert_to_string ( & tmp )	1121:2:38629:38652	1229471	3	True				
ANR	1229610	CallExpression	convert_to_string ( & tmp )		1229471	0					
ANR	1229611	Callee	convert_to_string		1229471	0					
ANR	1229612	Identifier	convert_to_string		1229471	0					
ANR	1229613	ArgumentList	& tmp		1229471	1					
ANR	1229614	Argument	& tmp		1229471	0					
ANR	1229615	UnaryOperationExpression	& tmp		1229471	0					
ANR	1229616	UnaryOperator	&		1229471	0					
ANR	1229617	Identifier	tmp		1229471	1					
ANR	1229618	ExpressionStatement	"xmlNodeSetContentLen ( ret , BAD_CAST ( Z_STRVAL ( tmp ) ) , Z_STRLEN ( tmp ) )"	1122:2:38656:38721	1229471	4	True				
ANR	1229619	CallExpression	"xmlNodeSetContentLen ( ret , BAD_CAST ( Z_STRVAL ( tmp ) ) , Z_STRLEN ( tmp ) )"		1229471	0					
ANR	1229620	Callee	xmlNodeSetContentLen		1229471	0					
ANR	1229621	Identifier	xmlNodeSetContentLen		1229471	0					
ANR	1229622	ArgumentList	ret		1229471	1					
ANR	1229623	Argument	ret		1229471	0					
ANR	1229624	Identifier	ret		1229471	0					
ANR	1229625	Argument	BAD_CAST ( Z_STRVAL ( tmp ) )		1229471	1					
ANR	1229626	CallExpression	BAD_CAST ( Z_STRVAL ( tmp ) )		1229471	0					
ANR	1229627	Callee	BAD_CAST		1229471	0					
ANR	1229628	Identifier	BAD_CAST		1229471	0					
ANR	1229629	ArgumentList	Z_STRVAL ( tmp )		1229471	1					
ANR	1229630	Argument	Z_STRVAL ( tmp )		1229471	0					
ANR	1229631	CallExpression	Z_STRVAL ( tmp )		1229471	0					
ANR	1229632	Callee	Z_STRVAL		1229471	0					
ANR	1229633	Identifier	Z_STRVAL		1229471	0					
ANR	1229634	ArgumentList	tmp		1229471	1					
ANR	1229635	Argument	tmp		1229471	0					
ANR	1229636	Identifier	tmp		1229471	0					
ANR	1229637	Argument	Z_STRLEN ( tmp )		1229471	2					
ANR	1229638	CallExpression	Z_STRLEN ( tmp )		1229471	0					
ANR	1229639	Callee	Z_STRLEN		1229471	0					
ANR	1229640	Identifier	Z_STRLEN		1229471	0					
ANR	1229641	ArgumentList	tmp		1229471	1					
ANR	1229642	Argument	tmp		1229471	0					
ANR	1229643	Identifier	tmp		1229471	0					
ANR	1229644	ExpressionStatement	zval_dtor ( & tmp )	1123:2:38725:38740	1229471	5	True				
ANR	1229645	CallExpression	zval_dtor ( & tmp )		1229471	0					
ANR	1229646	Callee	zval_dtor		1229471	0					
ANR	1229647	Identifier	zval_dtor		1229471	0					
ANR	1229648	ArgumentList	& tmp		1229471	1					
ANR	1229649	Argument	& tmp		1229471	0					
ANR	1229650	UnaryOperationExpression	& tmp		1229471	0					
ANR	1229651	UnaryOperator	&		1229471	0					
ANR	1229652	Identifier	tmp		1229471	1					
ANR	1229653	IfStatement	if ( style == SOAP_ENCODED )		1229471	5					
ANR	1229654	Condition	style == SOAP_ENCODED	1126:5:38751:38771	1229471	0	True				
ANR	1229655	EqualityExpression	style == SOAP_ENCODED		1229471	0		==			
ANR	1229656	Identifier	style		1229471	0					
ANR	1229657	Identifier	SOAP_ENCODED		1229471	1					
ANR	1229658	CompoundStatement		25:28:538:538	1229471	1					
ANR	1229659	ExpressionStatement	"set_ns_and_type ( ret , type )"	1127:2:38778:38804	1229471	0	True				
ANR	1229660	CallExpression	"set_ns_and_type ( ret , type )"		1229471	0					
ANR	1229661	Callee	set_ns_and_type		1229471	0					
ANR	1229662	Identifier	set_ns_and_type		1229471	0					
ANR	1229663	ArgumentList	ret		1229471	1					
ANR	1229664	Argument	ret		1229471	0					
ANR	1229665	Identifier	ret		1229471	0					
ANR	1229666	Argument	type		1229471	1					
ANR	1229667	Identifier	type		1229471	0					
ANR	1229668	ReturnStatement	return ret ;	1129:1:38810:38820	1229471	6	True				
ANR	1229669	Identifier	ret		1229471	0					
ANR	1229670	ReturnType	static xmlNodePtr		1229471	1					
ANR	1229671	Identifier	to_xml_long		1229471	2					
ANR	1229672	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1229471	3					
ANR	1229673	Parameter	encodeTypePtr type	1101:30:38163:38180	1229471	0	True				
ANR	1229674	ParameterType	encodeTypePtr		1229471	0					
ANR	1229675	Identifier	type		1229471	1					
ANR	1229676	Parameter	zval * data	1101:50:38183:38192	1229471	1	True				
ANR	1229677	ParameterType	zval *		1229471	0					
ANR	1229678	Identifier	data		1229471	1					
ANR	1229679	Parameter	int style	1101:62:38195:38203	1229471	2	True				
ANR	1229680	ParameterType	int		1229471	0					
ANR	1229681	Identifier	style		1229471	1					
ANR	1229682	Parameter	xmlNodePtr parent TSRMLS_DC	1101:73:38206:38232	1229471	3	True				
ANR	1229683	ParameterType	xmlNodePtr parent		1229471	0					
ANR	1229684	Identifier	TSRMLS_DC		1229471	1					
ANR	1229685	CFGEntryNode	ENTRY		1229471		True				
ANR	1229686	CFGExitNode	EXIT		1229471		True				
ANR	1229687	Symbol	ret		1229471						
ANR	1229688	Symbol	parent		1229471						
ANR	1229689	Symbol	NULL		1229471						
ANR	1229690	Symbol	data		1229471						
ANR	1229691	Symbol	Z_TYPE		1229471						
ANR	1229692	Symbol	xmlNewNode		1229471						
ANR	1229693	Symbol	Z_STRLEN		1229471						
ANR	1229694	Symbol	type		1229471						
ANR	1229695	Symbol	Z_TYPE_P		1229471						
ANR	1229696	Symbol	TSRMLS_DC		1229471						
ANR	1229697	Symbol	Z_DVAL_P		1229471						
ANR	1229698	Symbol	s		1229471						
ANR	1229699	Symbol	tmp		1229471						
ANR	1229700	Symbol	IS_LONG		1229471						
ANR	1229701	Symbol	Z_STRVAL		1229471						
ANR	1229702	Symbol	IS_DOUBLE		1229471						
ANR	1229703	Symbol	style		1229471						
ANR	1229704	Symbol	& tmp		1229471						
ANR	1229705	Symbol	SOAP_ENCODED		1229471						
ANR	1229706	Symbol	floor		1229471						
ANR	1229707	Symbol	* data		1229471						
ANR	1229708	Symbol	BAD_CAST		1229471						
ANR	1229709	Function	to_xml_double	1132:0:38825:39456							
ANR	1229710	FunctionDef	"to_xml_double (encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1229709	0					
ANR	1229711	CompoundStatement		1133:0:38929:39456	1229709	0					
ANR	1229712	IdentifierDeclStatement	xmlNodePtr ret ;	1134:1:38932:38946	1229709	0	True				
ANR	1229713	IdentifierDecl	ret		1229709	0					
ANR	1229714	IdentifierDeclType	xmlNodePtr		1229709	0					
ANR	1229715	Identifier	ret		1229709	1					
ANR	1229716	IdentifierDeclStatement	zval tmp ;	1135:1:38949:38957	1229709	1	True				
ANR	1229717	IdentifierDecl	tmp		1229709	0					
ANR	1229718	IdentifierDeclType	zval		1229709	0					
ANR	1229719	Identifier	tmp		1229709	1					
ANR	1229720	IdentifierDeclStatement	char * str ;	1136:1:38960:38969	1229709	2	True				
ANR	1229721	IdentifierDecl	* str		1229709	0					
ANR	1229722	IdentifierDeclType	char *		1229709	0					
ANR	1229723	Identifier	str		1229709	1					
ANR	1229724	ExpressionStatement	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1138:1:38973:39014	1229709	3	True				
ANR	1229725	AssignmentExpression	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1229709	0		=			
ANR	1229726	Identifier	ret		1229709	0					
ANR	1229727	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1229709	1					
ANR	1229728	Callee	xmlNewNode		1229709	0					
ANR	1229729	Identifier	xmlNewNode		1229709	0					
ANR	1229730	ArgumentList	NULL		1229709	1					
ANR	1229731	Argument	NULL		1229709	0					
ANR	1229732	Identifier	NULL		1229709	0					
ANR	1229733	Argument	"BAD_CAST ( ""BOGUS"" )"		1229709	1					
ANR	1229734	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1229709	0					
ANR	1229735	Callee	BAD_CAST		1229709	0					
ANR	1229736	Identifier	BAD_CAST		1229709	0					
ANR	1229737	ArgumentList	"""BOGUS"""		1229709	1					
ANR	1229738	Argument	"""BOGUS"""		1229709	0					
ANR	1229739	PrimaryExpression	"""BOGUS"""		1229709	0					
ANR	1229740	ExpressionStatement	"xmlAddChild ( parent , ret )"	1139:1:39017:39041	1229709	4	True				
ANR	1229741	CallExpression	"xmlAddChild ( parent , ret )"		1229709	0					
ANR	1229742	Callee	xmlAddChild		1229709	0					
ANR	1229743	Identifier	xmlAddChild		1229709	0					
ANR	1229744	ArgumentList	parent		1229709	1					
ANR	1229745	Argument	parent		1229709	0					
ANR	1229746	Identifier	parent		1229709	0					
ANR	1229747	Argument	ret		1229709	1					
ANR	1229748	Identifier	ret		1229709	0					
ANR	1229749	ExpressionStatement	"FIND_ZVAL_NULL ( data , ret , style )"	1140:1:39044:39076	1229709	5	True				
ANR	1229750	CallExpression	"FIND_ZVAL_NULL ( data , ret , style )"		1229709	0					
ANR	1229751	Callee	FIND_ZVAL_NULL		1229709	0					
ANR	1229752	Identifier	FIND_ZVAL_NULL		1229709	0					
ANR	1229753	ArgumentList	data		1229709	1					
ANR	1229754	Argument	data		1229709	0					
ANR	1229755	Identifier	data		1229709	0					
ANR	1229756	Argument	ret		1229709	1					
ANR	1229757	Identifier	ret		1229709	0					
ANR	1229758	Argument	style		1229709	2					
ANR	1229759	Identifier	style		1229709	0					
ANR	1229760	ExpressionStatement	tmp = * data	1142:1:39080:39091	1229709	6	True				
ANR	1229761	AssignmentExpression	tmp = * data		1229709	0		=			
ANR	1229762	Identifier	tmp		1229709	0					
ANR	1229763	UnaryOperationExpression	* data		1229709	1					
ANR	1229764	UnaryOperator	*		1229709	0					
ANR	1229765	Identifier	data		1229709	1					
ANR	1229766	IfStatement	if ( Z_TYPE ( tmp ) != IS_DOUBLE )		1229709	7					
ANR	1229767	Condition	Z_TYPE ( tmp ) != IS_DOUBLE	1143:5:39098:39121	1229709	0	True				
ANR	1229768	EqualityExpression	Z_TYPE ( tmp ) != IS_DOUBLE		1229709	0		!=			
ANR	1229769	CallExpression	Z_TYPE ( tmp )		1229709	0					
ANR	1229770	Callee	Z_TYPE		1229709	0					
ANR	1229771	Identifier	Z_TYPE		1229709	0					
ANR	1229772	ArgumentList	tmp		1229709	1					
ANR	1229773	Argument	tmp		1229709	0					
ANR	1229774	Identifier	tmp		1229709	0					
ANR	1229775	Identifier	IS_DOUBLE		1229709	1					
ANR	1229776	CompoundStatement		11:31:194:194	1229709	1					
ANR	1229777	ExpressionStatement	zval_copy_ctor ( & tmp )	1144:2:39128:39148	1229709	0	True				
ANR	1229778	CallExpression	zval_copy_ctor ( & tmp )		1229709	0					
ANR	1229779	Callee	zval_copy_ctor		1229709	0					
ANR	1229780	Identifier	zval_copy_ctor		1229709	0					
ANR	1229781	ArgumentList	& tmp		1229709	1					
ANR	1229782	Argument	& tmp		1229709	0					
ANR	1229783	UnaryOperationExpression	& tmp		1229709	0					
ANR	1229784	UnaryOperator	&		1229709	0					
ANR	1229785	Identifier	tmp		1229709	1					
ANR	1229786	ExpressionStatement	convert_to_double ( & tmp )	1145:2:39152:39175	1229709	1	True				
ANR	1229787	CallExpression	convert_to_double ( & tmp )		1229709	0					
ANR	1229788	Callee	convert_to_double		1229709	0					
ANR	1229789	Identifier	convert_to_double		1229709	0					
ANR	1229790	ArgumentList	& tmp		1229709	1					
ANR	1229791	Argument	& tmp		1229709	0					
ANR	1229792	UnaryOperationExpression	& tmp		1229709	0					
ANR	1229793	UnaryOperator	&		1229709	0					
ANR	1229794	Identifier	tmp		1229709	1					
ANR	1229795	ExpressionStatement	"str = ( char * ) safe_emalloc ( EG ( precision ) , 1 , MAX_LENGTH_OF_DOUBLE + 1 )"	1148:1:39183:39254	1229709	8	True				
ANR	1229796	AssignmentExpression	"str = ( char * ) safe_emalloc ( EG ( precision ) , 1 , MAX_LENGTH_OF_DOUBLE + 1 )"		1229709	0		=			
ANR	1229797	Identifier	str		1229709	0					
ANR	1229798	CastExpression	"( char * ) safe_emalloc ( EG ( precision ) , 1 , MAX_LENGTH_OF_DOUBLE + 1 )"		1229709	1					
ANR	1229799	CastTarget	char *		1229709	0					
ANR	1229800	CallExpression	"safe_emalloc ( EG ( precision ) , 1 , MAX_LENGTH_OF_DOUBLE + 1 )"		1229709	1					
ANR	1229801	Callee	safe_emalloc		1229709	0					
ANR	1229802	Identifier	safe_emalloc		1229709	0					
ANR	1229803	ArgumentList	EG ( precision )		1229709	1					
ANR	1229804	Argument	EG ( precision )		1229709	0					
ANR	1229805	CallExpression	EG ( precision )		1229709	0					
ANR	1229806	Callee	EG		1229709	0					
ANR	1229807	Identifier	EG		1229709	0					
ANR	1229808	ArgumentList	precision		1229709	1					
ANR	1229809	Argument	precision		1229709	0					
ANR	1229810	Identifier	precision		1229709	0					
ANR	1229811	Argument	1		1229709	1					
ANR	1229812	PrimaryExpression	1		1229709	0					
ANR	1229813	Argument	MAX_LENGTH_OF_DOUBLE + 1		1229709	2					
ANR	1229814	AdditiveExpression	MAX_LENGTH_OF_DOUBLE + 1		1229709	0		+			
ANR	1229815	Identifier	MAX_LENGTH_OF_DOUBLE		1229709	0					
ANR	1229816	PrimaryExpression	1		1229709	1					
ANR	1229817	ExpressionStatement	"php_gcvt ( Z_DVAL ( tmp ) , EG ( precision ) , '.' , 'E' , str )"	1149:1:39257:39308	1229709	9	True				
ANR	1229818	CallExpression	"php_gcvt ( Z_DVAL ( tmp ) , EG ( precision ) , '.' , 'E' , str )"		1229709	0					
ANR	1229819	Callee	php_gcvt		1229709	0					
ANR	1229820	Identifier	php_gcvt		1229709	0					
ANR	1229821	ArgumentList	Z_DVAL ( tmp )		1229709	1					
ANR	1229822	Argument	Z_DVAL ( tmp )		1229709	0					
ANR	1229823	CallExpression	Z_DVAL ( tmp )		1229709	0					
ANR	1229824	Callee	Z_DVAL		1229709	0					
ANR	1229825	Identifier	Z_DVAL		1229709	0					
ANR	1229826	ArgumentList	tmp		1229709	1					
ANR	1229827	Argument	tmp		1229709	0					
ANR	1229828	Identifier	tmp		1229709	0					
ANR	1229829	Argument	EG ( precision )		1229709	1					
ANR	1229830	CallExpression	EG ( precision )		1229709	0					
ANR	1229831	Callee	EG		1229709	0					
ANR	1229832	Identifier	EG		1229709	0					
ANR	1229833	ArgumentList	precision		1229709	1					
ANR	1229834	Argument	precision		1229709	0					
ANR	1229835	Identifier	precision		1229709	0					
ANR	1229836	Argument	'.'		1229709	2					
ANR	1229837	PrimaryExpression	'.'		1229709	0					
ANR	1229838	Argument	'E'		1229709	3					
ANR	1229839	PrimaryExpression	'E'		1229709	0					
ANR	1229840	Argument	str		1229709	4					
ANR	1229841	Identifier	str		1229709	0					
ANR	1229842	ExpressionStatement	"xmlNodeSetContentLen ( ret , BAD_CAST ( str ) , strlen ( str ) )"	1150:1:39311:39364	1229709	10	True				
ANR	1229843	CallExpression	"xmlNodeSetContentLen ( ret , BAD_CAST ( str ) , strlen ( str ) )"		1229709	0					
ANR	1229844	Callee	xmlNodeSetContentLen		1229709	0					
ANR	1229845	Identifier	xmlNodeSetContentLen		1229709	0					
ANR	1229846	ArgumentList	ret		1229709	1					
ANR	1229847	Argument	ret		1229709	0					
ANR	1229848	Identifier	ret		1229709	0					
ANR	1229849	Argument	BAD_CAST ( str )		1229709	1					
ANR	1229850	CallExpression	BAD_CAST ( str )		1229709	0					
ANR	1229851	Callee	BAD_CAST		1229709	0					
ANR	1229852	Identifier	BAD_CAST		1229709	0					
ANR	1229853	ArgumentList	str		1229709	1					
ANR	1229854	Argument	str		1229709	0					
ANR	1229855	Identifier	str		1229709	0					
ANR	1229856	Argument	strlen ( str )		1229709	2					
ANR	1229857	CallExpression	strlen ( str )		1229709	0					
ANR	1229858	Callee	strlen		1229709	0					
ANR	1229859	Identifier	strlen		1229709	0					
ANR	1229860	ArgumentList	str		1229709	1					
ANR	1229861	Argument	str		1229709	0					
ANR	1229862	Identifier	str		1229709	0					
ANR	1229863	ExpressionStatement	efree ( str )	1151:1:39367:39377	1229709	11	True				
ANR	1229864	CallExpression	efree ( str )		1229709	0					
ANR	1229865	Callee	efree		1229709	0					
ANR	1229866	Identifier	efree		1229709	0					
ANR	1229867	ArgumentList	str		1229709	1					
ANR	1229868	Argument	str		1229709	0					
ANR	1229869	Identifier	str		1229709	0					
ANR	1229870	IfStatement	if ( style == SOAP_ENCODED )		1229709	12					
ANR	1229871	Condition	style == SOAP_ENCODED	1153:5:39385:39405	1229709	0	True				
ANR	1229872	EqualityExpression	style == SOAP_ENCODED		1229709	0		==			
ANR	1229873	Identifier	style		1229709	0					
ANR	1229874	Identifier	SOAP_ENCODED		1229709	1					
ANR	1229875	CompoundStatement		21:28:478:478	1229709	1					
ANR	1229876	ExpressionStatement	"set_ns_and_type ( ret , type )"	1154:2:39412:39438	1229709	0	True				
ANR	1229877	CallExpression	"set_ns_and_type ( ret , type )"		1229709	0					
ANR	1229878	Callee	set_ns_and_type		1229709	0					
ANR	1229879	Identifier	set_ns_and_type		1229709	0					
ANR	1229880	ArgumentList	ret		1229709	1					
ANR	1229881	Argument	ret		1229709	0					
ANR	1229882	Identifier	ret		1229709	0					
ANR	1229883	Argument	type		1229709	1					
ANR	1229884	Identifier	type		1229709	0					
ANR	1229885	ReturnStatement	return ret ;	1156:1:39444:39454	1229709	13	True				
ANR	1229886	Identifier	ret		1229709	0					
ANR	1229887	ReturnType	static xmlNodePtr		1229709	1					
ANR	1229888	Identifier	to_xml_double		1229709	2					
ANR	1229889	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1229709	3					
ANR	1229890	Parameter	encodeTypePtr type	1132:32:38857:38874	1229709	0	True				
ANR	1229891	ParameterType	encodeTypePtr		1229709	0					
ANR	1229892	Identifier	type		1229709	1					
ANR	1229893	Parameter	zval * data	1132:52:38877:38886	1229709	1	True				
ANR	1229894	ParameterType	zval *		1229709	0					
ANR	1229895	Identifier	data		1229709	1					
ANR	1229896	Parameter	int style	1132:64:38889:38897	1229709	2	True				
ANR	1229897	ParameterType	int		1229709	0					
ANR	1229898	Identifier	style		1229709	1					
ANR	1229899	Parameter	xmlNodePtr parent TSRMLS_DC	1132:75:38900:38926	1229709	3	True				
ANR	1229900	ParameterType	xmlNodePtr parent		1229709	0					
ANR	1229901	Identifier	TSRMLS_DC		1229709	1					
ANR	1229902	CFGEntryNode	ENTRY		1229709		True				
ANR	1229903	CFGExitNode	EXIT		1229709		True				
ANR	1229904	Symbol	ret		1229709						
ANR	1229905	Symbol	parent		1229709						
ANR	1229906	Symbol	EG		1229709						
ANR	1229907	Symbol	NULL		1229709						
ANR	1229908	Symbol	data		1229709						
ANR	1229909	Symbol	precision		1229709						
ANR	1229910	Symbol	Z_TYPE		1229709						
ANR	1229911	Symbol	xmlNewNode		1229709						
ANR	1229912	Symbol	type		1229709						
ANR	1229913	Symbol	TSRMLS_DC		1229709						
ANR	1229914	Symbol	Z_DVAL		1229709						
ANR	1229915	Symbol	str		1229709						
ANR	1229916	Symbol	strlen		1229709						
ANR	1229917	Symbol	tmp		1229709						
ANR	1229918	Symbol	MAX_LENGTH_OF_DOUBLE		1229709						
ANR	1229919	Symbol	IS_DOUBLE		1229709						
ANR	1229920	Symbol	style		1229709						
ANR	1229921	Symbol	& tmp		1229709						
ANR	1229922	Symbol	SOAP_ENCODED		1229709						
ANR	1229923	Symbol	* data		1229709						
ANR	1229924	Symbol	safe_emalloc		1229709						
ANR	1229925	Symbol	BAD_CAST		1229709						
ANR	1229926	Function	to_zval_bool	1159:0:39459:40388							
ANR	1229927	FunctionDef	"to_zval_bool (encodeTypePtr type , xmlNodePtr data TSRMLS_DC)"		1229926	0					
ANR	1229928	CompoundStatement		1160:0:39532:40388	1229926	0					
ANR	1229929	IdentifierDeclStatement	zval * ret ;	1161:1:39535:39544	1229926	0	True				
ANR	1229930	IdentifierDecl	* ret		1229926	0					
ANR	1229931	IdentifierDeclType	zval *		1229926	0					
ANR	1229932	Identifier	ret		1229926	1					
ANR	1229933	ExpressionStatement	MAKE_STD_ZVAL ( ret )	1162:1:39547:39565	1229926	1	True				
ANR	1229934	CallExpression	MAKE_STD_ZVAL ( ret )		1229926	0					
ANR	1229935	Callee	MAKE_STD_ZVAL		1229926	0					
ANR	1229936	Identifier	MAKE_STD_ZVAL		1229926	0					
ANR	1229937	ArgumentList	ret		1229926	1					
ANR	1229938	Argument	ret		1229926	0					
ANR	1229939	Identifier	ret		1229926	0					
ANR	1229940	ExpressionStatement	"FIND_XML_NULL ( data , ret )"	1163:1:39568:39592	1229926	2	True				
ANR	1229941	CallExpression	"FIND_XML_NULL ( data , ret )"		1229926	0					
ANR	1229942	Callee	FIND_XML_NULL		1229926	0					
ANR	1229943	Identifier	FIND_XML_NULL		1229926	0					
ANR	1229944	ArgumentList	data		1229926	1					
ANR	1229945	Argument	data		1229926	0					
ANR	1229946	Identifier	data		1229926	0					
ANR	1229947	Argument	ret		1229926	1					
ANR	1229948	Identifier	ret		1229926	0					
ANR	1229949	IfStatement	if ( data && data -> children )		1229926	3					
ANR	1229950	Condition	data && data -> children	1165:5:39600:39621	1229926	0	True				
ANR	1229951	AndExpression	data && data -> children		1229926	0		&&			
ANR	1229952	Identifier	data		1229926	0					
ANR	1229953	PtrMemberAccess	data -> children		1229926	1					
ANR	1229954	Identifier	data		1229926	0					
ANR	1229955	Identifier	children		1229926	1					
ANR	1229956	CompoundStatement		6:29:91:91	1229926	1					
ANR	1229957	IfStatement	if ( data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL )		1229926	0					
ANR	1229958	Condition	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL	1166:6:39632:39700	1229926	0	True				
ANR	1229959	AndExpression	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL		1229926	0		&&			
ANR	1229960	EqualityExpression	data -> children -> type == XML_TEXT_NODE		1229926	0		==			
ANR	1229961	PtrMemberAccess	data -> children -> type		1229926	0					
ANR	1229962	PtrMemberAccess	data -> children		1229926	0					
ANR	1229963	Identifier	data		1229926	0					
ANR	1229964	Identifier	children		1229926	1					
ANR	1229965	Identifier	type		1229926	1					
ANR	1229966	Identifier	XML_TEXT_NODE		1229926	1					
ANR	1229967	EqualityExpression	data -> children -> next == NULL		1229926	1		==			
ANR	1229968	PtrMemberAccess	data -> children -> next		1229926	0					
ANR	1229969	PtrMemberAccess	data -> children		1229926	0					
ANR	1229970	Identifier	data		1229926	0					
ANR	1229971	Identifier	children		1229926	1					
ANR	1229972	Identifier	next		1229926	1					
ANR	1229973	Identifier	NULL		1229926	1					
ANR	1229974	CompoundStatement		7:77:170:170	1229926	1					
ANR	1229975	ExpressionStatement	whiteSpace_collapse ( data -> children -> content )	1167:3:39708:39752	1229926	0	True				
ANR	1229976	CallExpression	whiteSpace_collapse ( data -> children -> content )		1229926	0					
ANR	1229977	Callee	whiteSpace_collapse		1229926	0					
ANR	1229978	Identifier	whiteSpace_collapse		1229926	0					
ANR	1229979	ArgumentList	data -> children -> content		1229926	1					
ANR	1229980	Argument	data -> children -> content		1229926	0					
ANR	1229981	PtrMemberAccess	data -> children -> content		1229926	0					
ANR	1229982	PtrMemberAccess	data -> children		1229926	0					
ANR	1229983	Identifier	data		1229926	0					
ANR	1229984	Identifier	children		1229926	1					
ANR	1229985	Identifier	content		1229926	1					
ANR	1229986	IfStatement	"if ( stricmp ( ( char * ) data -> children -> content , ""true"" ) == 0 || stricmp ( ( char * ) data -> children -> content , ""t"" ) == 0 || strcmp ( ( char * ) data -> children -> content , ""1"" ) == 0 )"		1229926	1					
ANR	1229987	Condition	"stricmp ( ( char * ) data -> children -> content , ""true"" ) == 0 || stricmp ( ( char * ) data -> children -> content , ""t"" ) == 0 || strcmp ( ( char * ) data -> children -> content , ""1"" ) == 0"	1168:7:39761:39925	1229926	0	True				
ANR	1229988	OrExpression	"stricmp ( ( char * ) data -> children -> content , ""true"" ) == 0 || stricmp ( ( char * ) data -> children -> content , ""t"" ) == 0 || strcmp ( ( char * ) data -> children -> content , ""1"" ) == 0"		1229926	0		||			
ANR	1229989	EqualityExpression	"stricmp ( ( char * ) data -> children -> content , ""true"" ) == 0"		1229926	0		==			
ANR	1229990	CallExpression	"stricmp ( ( char * ) data -> children -> content , ""true"" )"		1229926	0					
ANR	1229991	Callee	stricmp		1229926	0					
ANR	1229992	Identifier	stricmp		1229926	0					
ANR	1229993	ArgumentList	( char * ) data -> children -> content		1229926	1					
ANR	1229994	Argument	( char * ) data -> children -> content		1229926	0					
ANR	1229995	CastExpression	( char * ) data -> children -> content		1229926	0					
ANR	1229996	CastTarget	char *		1229926	0					
ANR	1229997	PtrMemberAccess	data -> children -> content		1229926	1					
ANR	1229998	PtrMemberAccess	data -> children		1229926	0					
ANR	1229999	Identifier	data		1229926	0					
ANR	1230000	Identifier	children		1229926	1					
ANR	1230001	Identifier	content		1229926	1					
ANR	1230002	Argument	"""true"""		1229926	1					
ANR	1230003	PrimaryExpression	"""true"""		1229926	0					
ANR	1230004	PrimaryExpression	0		1229926	1					
ANR	1230005	OrExpression	"stricmp ( ( char * ) data -> children -> content , ""t"" ) == 0 || strcmp ( ( char * ) data -> children -> content , ""1"" ) == 0"		1229926	1		||			
ANR	1230006	EqualityExpression	"stricmp ( ( char * ) data -> children -> content , ""t"" ) == 0"		1229926	0		==			
ANR	1230007	CallExpression	"stricmp ( ( char * ) data -> children -> content , ""t"" )"		1229926	0					
ANR	1230008	Callee	stricmp		1229926	0					
ANR	1230009	Identifier	stricmp		1229926	0					
ANR	1230010	ArgumentList	( char * ) data -> children -> content		1229926	1					
ANR	1230011	Argument	( char * ) data -> children -> content		1229926	0					
ANR	1230012	CastExpression	( char * ) data -> children -> content		1229926	0					
ANR	1230013	CastTarget	char *		1229926	0					
ANR	1230014	PtrMemberAccess	data -> children -> content		1229926	1					
ANR	1230015	PtrMemberAccess	data -> children		1229926	0					
ANR	1230016	Identifier	data		1229926	0					
ANR	1230017	Identifier	children		1229926	1					
ANR	1230018	Identifier	content		1229926	1					
ANR	1230019	Argument	"""t"""		1229926	1					
ANR	1230020	PrimaryExpression	"""t"""		1229926	0					
ANR	1230021	PrimaryExpression	0		1229926	1					
ANR	1230022	EqualityExpression	"strcmp ( ( char * ) data -> children -> content , ""1"" ) == 0"		1229926	1		==			
ANR	1230023	CallExpression	"strcmp ( ( char * ) data -> children -> content , ""1"" )"		1229926	0					
ANR	1230024	Callee	strcmp		1229926	0					
ANR	1230025	Identifier	strcmp		1229926	0					
ANR	1230026	ArgumentList	( char * ) data -> children -> content		1229926	1					
ANR	1230027	Argument	( char * ) data -> children -> content		1229926	0					
ANR	1230028	CastExpression	( char * ) data -> children -> content		1229926	0					
ANR	1230029	CastTarget	char *		1229926	0					
ANR	1230030	PtrMemberAccess	data -> children -> content		1229926	1					
ANR	1230031	PtrMemberAccess	data -> children		1229926	0					
ANR	1230032	Identifier	data		1229926	0					
ANR	1230033	Identifier	children		1229926	1					
ANR	1230034	Identifier	content		1229926	1					
ANR	1230035	Argument	"""1"""		1229926	1					
ANR	1230036	PrimaryExpression	"""1"""		1229926	0					
ANR	1230037	PrimaryExpression	0		1229926	1					
ANR	1230038	CompoundStatement		11:54:395:395	1229926	1					
ANR	1230039	ExpressionStatement	"ZVAL_BOOL ( ret , 1 )"	1171:4:39934:39951	1229926	0	True				
ANR	1230040	CallExpression	"ZVAL_BOOL ( ret , 1 )"		1229926	0					
ANR	1230041	Callee	ZVAL_BOOL		1229926	0					
ANR	1230042	Identifier	ZVAL_BOOL		1229926	0					
ANR	1230043	ArgumentList	ret		1229926	1					
ANR	1230044	Argument	ret		1229926	0					
ANR	1230045	Identifier	ret		1229926	0					
ANR	1230046	Argument	1		1229926	1					
ANR	1230047	PrimaryExpression	1		1229926	0					
ANR	1230048	ElseStatement	else		1229926	0					
ANR	1230049	IfStatement	"if ( stricmp ( ( char * ) data -> children -> content , ""false"" ) == 0 || stricmp ( ( char * ) data -> children -> content , ""f"" ) == 0 || strcmp ( ( char * ) data -> children -> content , ""0"" ) == 0 )"		1229926	0					
ANR	1230050	Condition	"stricmp ( ( char * ) data -> children -> content , ""false"" ) == 0 || stricmp ( ( char * ) data -> children -> content , ""f"" ) == 0 || strcmp ( ( char * ) data -> children -> content , ""0"" ) == 0"	1172:14:39967:40132	1229926	0	True				
ANR	1230051	OrExpression	"stricmp ( ( char * ) data -> children -> content , ""false"" ) == 0 || stricmp ( ( char * ) data -> children -> content , ""f"" ) == 0 || strcmp ( ( char * ) data -> children -> content , ""0"" ) == 0"		1229926	0		||			
ANR	1230052	EqualityExpression	"stricmp ( ( char * ) data -> children -> content , ""false"" ) == 0"		1229926	0		==			
ANR	1230053	CallExpression	"stricmp ( ( char * ) data -> children -> content , ""false"" )"		1229926	0					
ANR	1230054	Callee	stricmp		1229926	0					
ANR	1230055	Identifier	stricmp		1229926	0					
ANR	1230056	ArgumentList	( char * ) data -> children -> content		1229926	1					
ANR	1230057	Argument	( char * ) data -> children -> content		1229926	0					
ANR	1230058	CastExpression	( char * ) data -> children -> content		1229926	0					
ANR	1230059	CastTarget	char *		1229926	0					
ANR	1230060	PtrMemberAccess	data -> children -> content		1229926	1					
ANR	1230061	PtrMemberAccess	data -> children		1229926	0					
ANR	1230062	Identifier	data		1229926	0					
ANR	1230063	Identifier	children		1229926	1					
ANR	1230064	Identifier	content		1229926	1					
ANR	1230065	Argument	"""false"""		1229926	1					
ANR	1230066	PrimaryExpression	"""false"""		1229926	0					
ANR	1230067	PrimaryExpression	0		1229926	1					
ANR	1230068	OrExpression	"stricmp ( ( char * ) data -> children -> content , ""f"" ) == 0 || strcmp ( ( char * ) data -> children -> content , ""0"" ) == 0"		1229926	1		||			
ANR	1230069	EqualityExpression	"stricmp ( ( char * ) data -> children -> content , ""f"" ) == 0"		1229926	0		==			
ANR	1230070	CallExpression	"stricmp ( ( char * ) data -> children -> content , ""f"" )"		1229926	0					
ANR	1230071	Callee	stricmp		1229926	0					
ANR	1230072	Identifier	stricmp		1229926	0					
ANR	1230073	ArgumentList	( char * ) data -> children -> content		1229926	1					
ANR	1230074	Argument	( char * ) data -> children -> content		1229926	0					
ANR	1230075	CastExpression	( char * ) data -> children -> content		1229926	0					
ANR	1230076	CastTarget	char *		1229926	0					
ANR	1230077	PtrMemberAccess	data -> children -> content		1229926	1					
ANR	1230078	PtrMemberAccess	data -> children		1229926	0					
ANR	1230079	Identifier	data		1229926	0					
ANR	1230080	Identifier	children		1229926	1					
ANR	1230081	Identifier	content		1229926	1					
ANR	1230082	Argument	"""f"""		1229926	1					
ANR	1230083	PrimaryExpression	"""f"""		1229926	0					
ANR	1230084	PrimaryExpression	0		1229926	1					
ANR	1230085	EqualityExpression	"strcmp ( ( char * ) data -> children -> content , ""0"" ) == 0"		1229926	1		==			
ANR	1230086	CallExpression	"strcmp ( ( char * ) data -> children -> content , ""0"" )"		1229926	0					
ANR	1230087	Callee	strcmp		1229926	0					
ANR	1230088	Identifier	strcmp		1229926	0					
ANR	1230089	ArgumentList	( char * ) data -> children -> content		1229926	1					
ANR	1230090	Argument	( char * ) data -> children -> content		1229926	0					
ANR	1230091	CastExpression	( char * ) data -> children -> content		1229926	0					
ANR	1230092	CastTarget	char *		1229926	0					
ANR	1230093	PtrMemberAccess	data -> children -> content		1229926	1					
ANR	1230094	PtrMemberAccess	data -> children		1229926	0					
ANR	1230095	Identifier	data		1229926	0					
ANR	1230096	Identifier	children		1229926	1					
ANR	1230097	Identifier	content		1229926	1					
ANR	1230098	Argument	"""0"""		1229926	1					
ANR	1230099	PrimaryExpression	"""0"""		1229926	0					
ANR	1230100	PrimaryExpression	0		1229926	1					
ANR	1230101	CompoundStatement		15:54:602:602	1229926	1					
ANR	1230102	ExpressionStatement	"ZVAL_BOOL ( ret , 0 )"	1175:4:40141:40158	1229926	0	True				
ANR	1230103	CallExpression	"ZVAL_BOOL ( ret , 0 )"		1229926	0					
ANR	1230104	Callee	ZVAL_BOOL		1229926	0					
ANR	1230105	Identifier	ZVAL_BOOL		1229926	0					
ANR	1230106	ArgumentList	ret		1229926	1					
ANR	1230107	Argument	ret		1229926	0					
ANR	1230108	Identifier	ret		1229926	0					
ANR	1230109	Argument	0		1229926	1					
ANR	1230110	PrimaryExpression	0		1229926	0					
ANR	1230111	ElseStatement	else		1229926	0					
ANR	1230112	CompoundStatement		17:10:637:637	1229926	0					
ANR	1230113	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) data -> children -> content , 1 )"	1177:4:40176:40227	1229926	0	True				
ANR	1230114	CallExpression	"ZVAL_STRING ( ret , ( char * ) data -> children -> content , 1 )"		1229926	0					
ANR	1230115	Callee	ZVAL_STRING		1229926	0					
ANR	1230116	Identifier	ZVAL_STRING		1229926	0					
ANR	1230117	ArgumentList	ret		1229926	1					
ANR	1230118	Argument	ret		1229926	0					
ANR	1230119	Identifier	ret		1229926	0					
ANR	1230120	Argument	( char * ) data -> children -> content		1229926	1					
ANR	1230121	CastExpression	( char * ) data -> children -> content		1229926	0					
ANR	1230122	CastTarget	char *		1229926	0					
ANR	1230123	PtrMemberAccess	data -> children -> content		1229926	1					
ANR	1230124	PtrMemberAccess	data -> children		1229926	0					
ANR	1230125	Identifier	data		1229926	0					
ANR	1230126	Identifier	children		1229926	1					
ANR	1230127	Identifier	content		1229926	1					
ANR	1230128	Argument	1		1229926	2					
ANR	1230129	PrimaryExpression	1		1229926	0					
ANR	1230130	ExpressionStatement	convert_to_boolean ( ret )	1178:4:40233:40256	1229926	1	True				
ANR	1230131	CallExpression	convert_to_boolean ( ret )		1229926	0					
ANR	1230132	Callee	convert_to_boolean		1229926	0					
ANR	1230133	Identifier	convert_to_boolean		1229926	0					
ANR	1230134	ArgumentList	ret		1229926	1					
ANR	1230135	Argument	ret		1229926	0					
ANR	1230136	Identifier	ret		1229926	0					
ANR	1230137	ElseStatement	else		1229926	0					
ANR	1230138	CompoundStatement		21:9:739:739	1229926	0					
ANR	1230139	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	1181:3:40277:40338	1229926	0	True				
ANR	1230140	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1229926	0					
ANR	1230141	Callee	soap_error0		1229926	0					
ANR	1230142	Identifier	soap_error0		1229926	0					
ANR	1230143	ArgumentList	E_ERROR		1229926	1					
ANR	1230144	Argument	E_ERROR		1229926	0					
ANR	1230145	Identifier	E_ERROR		1229926	0					
ANR	1230146	Argument	"""Encoding: Violation of encoding rules"""		1229926	1					
ANR	1230147	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1229926	0					
ANR	1230148	ElseStatement	else		1229926	0					
ANR	1230149	CompoundStatement		24:8:819:819	1229926	0					
ANR	1230150	ExpressionStatement	ZVAL_NULL ( ret )	1184:2:40356:40370	1229926	0	True				
ANR	1230151	CallExpression	ZVAL_NULL ( ret )		1229926	0					
ANR	1230152	Callee	ZVAL_NULL		1229926	0					
ANR	1230153	Identifier	ZVAL_NULL		1229926	0					
ANR	1230154	ArgumentList	ret		1229926	1					
ANR	1230155	Argument	ret		1229926	0					
ANR	1230156	Identifier	ret		1229926	0					
ANR	1230157	ReturnStatement	return ret ;	1186:1:40376:40386	1229926	4	True				
ANR	1230158	Identifier	ret		1229926	0					
ANR	1230159	ReturnType	static zval *		1229926	1					
ANR	1230160	Identifier	to_zval_bool		1229926	2					
ANR	1230161	ParameterList	"encodeTypePtr type , xmlNodePtr data TSRMLS_DC"		1229926	3					
ANR	1230162	Parameter	encodeTypePtr type	1159:26:39485:39502	1229926	0	True				
ANR	1230163	ParameterType	encodeTypePtr		1229926	0					
ANR	1230164	Identifier	type		1229926	1					
ANR	1230165	Parameter	xmlNodePtr data TSRMLS_DC	1159:46:39505:39529	1229926	1	True				
ANR	1230166	ParameterType	xmlNodePtr data		1229926	0					
ANR	1230167	Identifier	TSRMLS_DC		1229926	1					
ANR	1230168	CFGEntryNode	ENTRY		1229926		True				
ANR	1230169	CFGExitNode	EXIT		1229926		True				
ANR	1230170	Symbol	ret		1229926						
ANR	1230171	Symbol	* * data		1229926						
ANR	1230172	Symbol	strcmp		1229926						
ANR	1230173	Symbol	data -> children -> next		1229926						
ANR	1230174	Symbol	NULL		1229926						
ANR	1230175	Symbol	data		1229926						
ANR	1230176	Symbol	type		1229926						
ANR	1230177	Symbol	TSRMLS_DC		1229926						
ANR	1230178	Symbol	XML_TEXT_NODE		1229926						
ANR	1230179	Symbol	E_ERROR		1229926						
ANR	1230180	Symbol	data -> children		1229926						
ANR	1230181	Symbol	data -> children -> content		1229926						
ANR	1230182	Symbol	stricmp		1229926						
ANR	1230183	Symbol	* data -> children		1229926						
ANR	1230184	Symbol	* data		1229926						
ANR	1230185	Symbol	data -> children -> type		1229926						
ANR	1230186	Function	to_xml_bool	1189:0:40391:40826							
ANR	1230187	FunctionDef	"to_xml_bool (encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1230186	0					
ANR	1230188	CompoundStatement		1190:0:40493:40826	1230186	0					
ANR	1230189	IdentifierDeclStatement	xmlNodePtr ret ;	1191:1:40496:40510	1230186	0	True				
ANR	1230190	IdentifierDecl	ret		1230186	0					
ANR	1230191	IdentifierDeclType	xmlNodePtr		1230186	0					
ANR	1230192	Identifier	ret		1230186	1					
ANR	1230193	ExpressionStatement	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1193:1:40514:40555	1230186	1	True				
ANR	1230194	AssignmentExpression	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1230186	0		=			
ANR	1230195	Identifier	ret		1230186	0					
ANR	1230196	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1230186	1					
ANR	1230197	Callee	xmlNewNode		1230186	0					
ANR	1230198	Identifier	xmlNewNode		1230186	0					
ANR	1230199	ArgumentList	NULL		1230186	1					
ANR	1230200	Argument	NULL		1230186	0					
ANR	1230201	Identifier	NULL		1230186	0					
ANR	1230202	Argument	"BAD_CAST ( ""BOGUS"" )"		1230186	1					
ANR	1230203	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1230186	0					
ANR	1230204	Callee	BAD_CAST		1230186	0					
ANR	1230205	Identifier	BAD_CAST		1230186	0					
ANR	1230206	ArgumentList	"""BOGUS"""		1230186	1					
ANR	1230207	Argument	"""BOGUS"""		1230186	0					
ANR	1230208	PrimaryExpression	"""BOGUS"""		1230186	0					
ANR	1230209	ExpressionStatement	"xmlAddChild ( parent , ret )"	1194:1:40558:40582	1230186	2	True				
ANR	1230210	CallExpression	"xmlAddChild ( parent , ret )"		1230186	0					
ANR	1230211	Callee	xmlAddChild		1230186	0					
ANR	1230212	Identifier	xmlAddChild		1230186	0					
ANR	1230213	ArgumentList	parent		1230186	1					
ANR	1230214	Argument	parent		1230186	0					
ANR	1230215	Identifier	parent		1230186	0					
ANR	1230216	Argument	ret		1230186	1					
ANR	1230217	Identifier	ret		1230186	0					
ANR	1230218	ExpressionStatement	"FIND_ZVAL_NULL ( data , ret , style )"	1195:1:40585:40617	1230186	3	True				
ANR	1230219	CallExpression	"FIND_ZVAL_NULL ( data , ret , style )"		1230186	0					
ANR	1230220	Callee	FIND_ZVAL_NULL		1230186	0					
ANR	1230221	Identifier	FIND_ZVAL_NULL		1230186	0					
ANR	1230222	ArgumentList	data		1230186	1					
ANR	1230223	Argument	data		1230186	0					
ANR	1230224	Identifier	data		1230186	0					
ANR	1230225	Argument	ret		1230186	1					
ANR	1230226	Identifier	ret		1230186	0					
ANR	1230227	Argument	style		1230186	2					
ANR	1230228	Identifier	style		1230186	0					
ANR	1230229	IfStatement	if ( zend_is_true ( data ) )		1230186	4					
ANR	1230230	Condition	zend_is_true ( data )	1197:5:40625:40642	1230186	0	True				
ANR	1230231	CallExpression	zend_is_true ( data )		1230186	0					
ANR	1230232	Callee	zend_is_true		1230186	0					
ANR	1230233	Identifier	zend_is_true		1230186	0					
ANR	1230234	ArgumentList	data		1230186	1					
ANR	1230235	Argument	data		1230186	0					
ANR	1230236	Identifier	data		1230186	0					
ANR	1230237	CompoundStatement		8:25:151:151	1230186	1					
ANR	1230238	ExpressionStatement	"xmlNodeSetContent ( ret , BAD_CAST ( ""true"" ) )"	1198:2:40649:40689	1230186	0	True				
ANR	1230239	CallExpression	"xmlNodeSetContent ( ret , BAD_CAST ( ""true"" ) )"		1230186	0					
ANR	1230240	Callee	xmlNodeSetContent		1230186	0					
ANR	1230241	Identifier	xmlNodeSetContent		1230186	0					
ANR	1230242	ArgumentList	ret		1230186	1					
ANR	1230243	Argument	ret		1230186	0					
ANR	1230244	Identifier	ret		1230186	0					
ANR	1230245	Argument	"BAD_CAST ( ""true"" )"		1230186	1					
ANR	1230246	CallExpression	"BAD_CAST ( ""true"" )"		1230186	0					
ANR	1230247	Callee	BAD_CAST		1230186	0					
ANR	1230248	Identifier	BAD_CAST		1230186	0					
ANR	1230249	ArgumentList	"""true"""		1230186	1					
ANR	1230250	Argument	"""true"""		1230186	0					
ANR	1230251	PrimaryExpression	"""true"""		1230186	0					
ANR	1230252	ElseStatement	else		1230186	0					
ANR	1230253	CompoundStatement		10:8:205:205	1230186	0					
ANR	1230254	ExpressionStatement	"xmlNodeSetContent ( ret , BAD_CAST ( ""false"" ) )"	1200:2:40703:40744	1230186	0	True				
ANR	1230255	CallExpression	"xmlNodeSetContent ( ret , BAD_CAST ( ""false"" ) )"		1230186	0					
ANR	1230256	Callee	xmlNodeSetContent		1230186	0					
ANR	1230257	Identifier	xmlNodeSetContent		1230186	0					
ANR	1230258	ArgumentList	ret		1230186	1					
ANR	1230259	Argument	ret		1230186	0					
ANR	1230260	Identifier	ret		1230186	0					
ANR	1230261	Argument	"BAD_CAST ( ""false"" )"		1230186	1					
ANR	1230262	CallExpression	"BAD_CAST ( ""false"" )"		1230186	0					
ANR	1230263	Callee	BAD_CAST		1230186	0					
ANR	1230264	Identifier	BAD_CAST		1230186	0					
ANR	1230265	ArgumentList	"""false"""		1230186	1					
ANR	1230266	Argument	"""false"""		1230186	0					
ANR	1230267	PrimaryExpression	"""false"""		1230186	0					
ANR	1230268	IfStatement	if ( style == SOAP_ENCODED )		1230186	5					
ANR	1230269	Condition	style == SOAP_ENCODED	1203:5:40755:40775	1230186	0	True				
ANR	1230270	EqualityExpression	style == SOAP_ENCODED		1230186	0		==			
ANR	1230271	Identifier	style		1230186	0					
ANR	1230272	Identifier	SOAP_ENCODED		1230186	1					
ANR	1230273	CompoundStatement		14:28:284:284	1230186	1					
ANR	1230274	ExpressionStatement	"set_ns_and_type ( ret , type )"	1204:2:40782:40808	1230186	0	True				
ANR	1230275	CallExpression	"set_ns_and_type ( ret , type )"		1230186	0					
ANR	1230276	Callee	set_ns_and_type		1230186	0					
ANR	1230277	Identifier	set_ns_and_type		1230186	0					
ANR	1230278	ArgumentList	ret		1230186	1					
ANR	1230279	Argument	ret		1230186	0					
ANR	1230280	Identifier	ret		1230186	0					
ANR	1230281	Argument	type		1230186	1					
ANR	1230282	Identifier	type		1230186	0					
ANR	1230283	ReturnStatement	return ret ;	1206:1:40814:40824	1230186	6	True				
ANR	1230284	Identifier	ret		1230186	0					
ANR	1230285	ReturnType	static xmlNodePtr		1230186	1					
ANR	1230286	Identifier	to_xml_bool		1230186	2					
ANR	1230287	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1230186	3					
ANR	1230288	Parameter	encodeTypePtr type	1189:30:40421:40438	1230186	0	True				
ANR	1230289	ParameterType	encodeTypePtr		1230186	0					
ANR	1230290	Identifier	type		1230186	1					
ANR	1230291	Parameter	zval * data	1189:50:40441:40450	1230186	1	True				
ANR	1230292	ParameterType	zval *		1230186	0					
ANR	1230293	Identifier	data		1230186	1					
ANR	1230294	Parameter	int style	1189:62:40453:40461	1230186	2	True				
ANR	1230295	ParameterType	int		1230186	0					
ANR	1230296	Identifier	style		1230186	1					
ANR	1230297	Parameter	xmlNodePtr parent TSRMLS_DC	1189:73:40464:40490	1230186	3	True				
ANR	1230298	ParameterType	xmlNodePtr parent		1230186	0					
ANR	1230299	Identifier	TSRMLS_DC		1230186	1					
ANR	1230300	CFGEntryNode	ENTRY		1230186		True				
ANR	1230301	CFGExitNode	EXIT		1230186		True				
ANR	1230302	Symbol	ret		1230186						
ANR	1230303	Symbol	parent		1230186						
ANR	1230304	Symbol	NULL		1230186						
ANR	1230305	Symbol	data		1230186						
ANR	1230306	Symbol	style		1230186						
ANR	1230307	Symbol	SOAP_ENCODED		1230186						
ANR	1230308	Symbol	xmlNewNode		1230186						
ANR	1230309	Symbol	type		1230186						
ANR	1230310	Symbol	zend_is_true		1230186						
ANR	1230311	Symbol	TSRMLS_DC		1230186						
ANR	1230312	Symbol	BAD_CAST		1230186						
ANR	1230313	Function	to_zval_null	1210:0:40854:40992							
ANR	1230314	FunctionDef	"to_zval_null (encodeTypePtr type , xmlNodePtr data TSRMLS_DC)"		1230313	0					
ANR	1230315	CompoundStatement		1211:0:40927:40992	1230313	0					
ANR	1230316	IdentifierDeclStatement	zval * ret ;	1212:1:40930:40939	1230313	0	True				
ANR	1230317	IdentifierDecl	* ret		1230313	0					
ANR	1230318	IdentifierDeclType	zval *		1230313	0					
ANR	1230319	Identifier	ret		1230313	1					
ANR	1230320	ExpressionStatement	MAKE_STD_ZVAL ( ret )	1213:1:40942:40960	1230313	1	True				
ANR	1230321	CallExpression	MAKE_STD_ZVAL ( ret )		1230313	0					
ANR	1230322	Callee	MAKE_STD_ZVAL		1230313	0					
ANR	1230323	Identifier	MAKE_STD_ZVAL		1230313	0					
ANR	1230324	ArgumentList	ret		1230313	1					
ANR	1230325	Argument	ret		1230313	0					
ANR	1230326	Identifier	ret		1230313	0					
ANR	1230327	ExpressionStatement	ZVAL_NULL ( ret )	1214:1:40963:40977	1230313	2	True				
ANR	1230328	CallExpression	ZVAL_NULL ( ret )		1230313	0					
ANR	1230329	Callee	ZVAL_NULL		1230313	0					
ANR	1230330	Identifier	ZVAL_NULL		1230313	0					
ANR	1230331	ArgumentList	ret		1230313	1					
ANR	1230332	Argument	ret		1230313	0					
ANR	1230333	Identifier	ret		1230313	0					
ANR	1230334	ReturnStatement	return ret ;	1215:1:40980:40990	1230313	3	True				
ANR	1230335	Identifier	ret		1230313	0					
ANR	1230336	ReturnType	static zval *		1230313	1					
ANR	1230337	Identifier	to_zval_null		1230313	2					
ANR	1230338	ParameterList	"encodeTypePtr type , xmlNodePtr data TSRMLS_DC"		1230313	3					
ANR	1230339	Parameter	encodeTypePtr type	1210:26:40880:40897	1230313	0	True				
ANR	1230340	ParameterType	encodeTypePtr		1230313	0					
ANR	1230341	Identifier	type		1230313	1					
ANR	1230342	Parameter	xmlNodePtr data TSRMLS_DC	1210:46:40900:40924	1230313	1	True				
ANR	1230343	ParameterType	xmlNodePtr data		1230313	0					
ANR	1230344	Identifier	TSRMLS_DC		1230313	1					
ANR	1230345	CFGEntryNode	ENTRY		1230313		True				
ANR	1230346	CFGExitNode	EXIT		1230313		True				
ANR	1230347	Symbol	ret		1230313						
ANR	1230348	Symbol	type		1230313						
ANR	1230349	Symbol	TSRMLS_DC		1230313						
ANR	1230350	Function	to_xml_null	1218:0:40995:41254							
ANR	1230351	FunctionDef	"to_xml_null (encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1230350	0					
ANR	1230352	CompoundStatement		1219:0:41097:41254	1230350	0					
ANR	1230353	IdentifierDeclStatement	xmlNodePtr ret ;	1220:1:41100:41114	1230350	0	True				
ANR	1230354	IdentifierDecl	ret		1230350	0					
ANR	1230355	IdentifierDeclType	xmlNodePtr		1230350	0					
ANR	1230356	Identifier	ret		1230350	1					
ANR	1230357	ExpressionStatement	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1222:1:41118:41159	1230350	1	True				
ANR	1230358	AssignmentExpression	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1230350	0		=			
ANR	1230359	Identifier	ret		1230350	0					
ANR	1230360	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1230350	1					
ANR	1230361	Callee	xmlNewNode		1230350	0					
ANR	1230362	Identifier	xmlNewNode		1230350	0					
ANR	1230363	ArgumentList	NULL		1230350	1					
ANR	1230364	Argument	NULL		1230350	0					
ANR	1230365	Identifier	NULL		1230350	0					
ANR	1230366	Argument	"BAD_CAST ( ""BOGUS"" )"		1230350	1					
ANR	1230367	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1230350	0					
ANR	1230368	Callee	BAD_CAST		1230350	0					
ANR	1230369	Identifier	BAD_CAST		1230350	0					
ANR	1230370	ArgumentList	"""BOGUS"""		1230350	1					
ANR	1230371	Argument	"""BOGUS"""		1230350	0					
ANR	1230372	PrimaryExpression	"""BOGUS"""		1230350	0					
ANR	1230373	ExpressionStatement	"xmlAddChild ( parent , ret )"	1223:1:41162:41186	1230350	2	True				
ANR	1230374	CallExpression	"xmlAddChild ( parent , ret )"		1230350	0					
ANR	1230375	Callee	xmlAddChild		1230350	0					
ANR	1230376	Identifier	xmlAddChild		1230350	0					
ANR	1230377	ArgumentList	parent		1230350	1					
ANR	1230378	Argument	parent		1230350	0					
ANR	1230379	Identifier	parent		1230350	0					
ANR	1230380	Argument	ret		1230350	1					
ANR	1230381	Identifier	ret		1230350	0					
ANR	1230382	IfStatement	if ( style == SOAP_ENCODED )		1230350	3					
ANR	1230383	Condition	style == SOAP_ENCODED	1224:5:41193:41213	1230350	0	True				
ANR	1230384	EqualityExpression	style == SOAP_ENCODED		1230350	0		==			
ANR	1230385	Identifier	style		1230350	0					
ANR	1230386	Identifier	SOAP_ENCODED		1230350	1					
ANR	1230387	CompoundStatement		6:28:118:118	1230350	1					
ANR	1230388	ExpressionStatement	set_xsi_nil ( ret )	1225:2:41220:41236	1230350	0	True				
ANR	1230389	CallExpression	set_xsi_nil ( ret )		1230350	0					
ANR	1230390	Callee	set_xsi_nil		1230350	0					
ANR	1230391	Identifier	set_xsi_nil		1230350	0					
ANR	1230392	ArgumentList	ret		1230350	1					
ANR	1230393	Argument	ret		1230350	0					
ANR	1230394	Identifier	ret		1230350	0					
ANR	1230395	ReturnStatement	return ret ;	1227:1:41242:41252	1230350	4	True				
ANR	1230396	Identifier	ret		1230350	0					
ANR	1230397	ReturnType	static xmlNodePtr		1230350	1					
ANR	1230398	Identifier	to_xml_null		1230350	2					
ANR	1230399	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1230350	3					
ANR	1230400	Parameter	encodeTypePtr type	1218:30:41025:41042	1230350	0	True				
ANR	1230401	ParameterType	encodeTypePtr		1230350	0					
ANR	1230402	Identifier	type		1230350	1					
ANR	1230403	Parameter	zval * data	1218:50:41045:41054	1230350	1	True				
ANR	1230404	ParameterType	zval *		1230350	0					
ANR	1230405	Identifier	data		1230350	1					
ANR	1230406	Parameter	int style	1218:62:41057:41065	1230350	2	True				
ANR	1230407	ParameterType	int		1230350	0					
ANR	1230408	Identifier	style		1230350	1					
ANR	1230409	Parameter	xmlNodePtr parent TSRMLS_DC	1218:73:41068:41094	1230350	3	True				
ANR	1230410	ParameterType	xmlNodePtr parent		1230350	0					
ANR	1230411	Identifier	TSRMLS_DC		1230350	1					
ANR	1230412	CFGEntryNode	ENTRY		1230350		True				
ANR	1230413	CFGExitNode	EXIT		1230350		True				
ANR	1230414	Symbol	ret		1230350						
ANR	1230415	Symbol	parent		1230350						
ANR	1230416	Symbol	NULL		1230350						
ANR	1230417	Symbol	data		1230350						
ANR	1230418	Symbol	style		1230350						
ANR	1230419	Symbol	SOAP_ENCODED		1230350						
ANR	1230420	Symbol	xmlNewNode		1230350						
ANR	1230421	Symbol	type		1230350						
ANR	1230422	Symbol	TSRMLS_DC		1230350						
ANR	1230423	Symbol	BAD_CAST		1230350						
ANR	1230424	DeclStmt									
ANR	1230425	Decl							zend_class_entry	zend_class_entry *	old_scope
ANR	1230426	DeclStmt									
ANR	1230427	Decl							zval	zval	member
ANR	1230428	DeclStmt									
ANR	1230429	Decl							zval	zval *	data
ANR	1230430	DeclStmt									
ANR	1230431	Decl							zend_class_entry	zend_class_entry *	old_scope
ANR	1230432	DeclStmt									
ANR	1230433	Decl							zend_property_info	zend_property_info *	property_info
ANR	1230434	DeclStmt									
ANR	1230435	Decl							zval	zval * *	data_ptr
ANR	1230436	DeclStmt									
ANR	1230437	Decl							zval	zval	member
ANR	1230438	DeclStmt									
ANR	1230439	Decl							zend_class_entry	zend_class_entry *	old_scope
ANR	1230440	Function	model_to_zval_any	1293:0:42996:44858							
ANR	1230441	FunctionDef	"model_to_zval_any (zval * ret , xmlNodePtr node TSRMLS_DC)"		1230440	0					
ANR	1230442	CompoundStatement		1294:0:43064:44858	1230440	0					
ANR	1230443	IdentifierDeclStatement	zval * any = NULL ;	1295:1:43067:43083	1230440	0	True				
ANR	1230444	IdentifierDecl	* any = NULL		1230440	0					
ANR	1230445	IdentifierDeclType	zval *		1230440	0					
ANR	1230446	Identifier	any		1230440	1					
ANR	1230447	AssignmentExpression	* any = NULL		1230440	2		=			
ANR	1230448	Identifier	NULL		1230440	0					
ANR	1230449	Identifier	NULL		1230440	1					
ANR	1230450	IdentifierDeclStatement	char * name = NULL ;	1296:1:43086:43103	1230440	1	True				
ANR	1230451	IdentifierDecl	* name = NULL		1230440	0					
ANR	1230452	IdentifierDeclType	char *		1230440	0					
ANR	1230453	Identifier	name		1230440	1					
ANR	1230454	AssignmentExpression	* name = NULL		1230440	2		=			
ANR	1230455	Identifier	NULL		1230440	0					
ANR	1230456	Identifier	NULL		1230440	1					
ANR	1230457	WhileStatement	while ( node != NULL )		1230440	2					
ANR	1230458	Condition	node != NULL	1298:8:43114:43125	1230440	0	True				
ANR	1230459	EqualityExpression	node != NULL		1230440	0		!=			
ANR	1230460	Identifier	node		1230440	0					
ANR	1230461	Identifier	NULL		1230440	1					
ANR	1230462	CompoundStatement		5:22:63:63	1230440	1					
ANR	1230463	Statement	if	1299:2:43132:43133	1230440	0	True				
ANR	1230464	Statement	(	1299:5:43135:43135	1230440	1	True				
ANR	1230465	Statement	get_zval_property	1299:6:43136:43152	1230440	2	True				
ANR	1230466	Statement	(	1299:23:43153:43153	1230440	3	True				
ANR	1230467	Statement	ret	1299:24:43154:43156	1230440	4	True				
ANR	1230468	Statement	","	1299:27:43157:43157	1230440	5	True				
ANR	1230469	Statement	(	1299:29:43159:43159	1230440	6	True				
ANR	1230470	Statement	char	1299:30:43160:43163	1230440	7	True				
ANR	1230471	Statement	*	1299:34:43164:43164	1230440	8	True				
ANR	1230472	Statement	)	1299:35:43165:43165	1230440	9	True				
ANR	1230473	Statement	node	1299:36:43166:43169	1230440	10	True				
ANR	1230474	Statement	->	1299:40:43170:43171	1230440	11	True				
ANR	1230475	Statement	name	1299:42:43172:43175	1230440	12	True				
ANR	1230476	Statement	TSRMLS_CC	1299:47:43177:43185	1230440	13	True				
ANR	1230477	Statement	)	1299:56:43186:43186	1230440	14	True				
ANR	1230478	Statement	==	1299:58:43188:43189	1230440	15	True				
ANR	1230479	Statement	NULL	1299:61:43191:43194	1230440	16	True				
ANR	1230480	Statement	)	1299:65:43195:43195	1230440	17	True				
ANR	1230481	CompoundStatement		6:67:132:132	1230440	18					
ANR	1230482	Statement	zval	1300:3:43202:43205	1230440	0	True				
ANR	1230483	Statement	*	1300:7:43206:43206	1230440	1	True				
ANR	1230484	Statement	val	1300:9:43208:43210	1230440	2	True				
ANR	1230485	Statement	=	1300:13:43212:43212	1230440	3	True				
ANR	1230486	Statement	master_to_zval	1300:15:43214:43227	1230440	4	True				
ANR	1230487	Statement	(	1300:29:43228:43228	1230440	5	True				
ANR	1230488	Statement	get_conversion	1300:30:43229:43242	1230440	6	True				
ANR	1230489	Statement	(	1300:44:43243:43243	1230440	7	True				
ANR	1230490	Statement	XSD_ANYXML	1300:45:43244:43253	1230440	8	True				
ANR	1230491	Statement	)	1300:55:43254:43254	1230440	9	True				
ANR	1230492	Statement	","	1300:56:43255:43255	1230440	10	True				
ANR	1230493	Statement	node	1300:58:43257:43260	1230440	11	True				
ANR	1230494	Statement	TSRMLS_CC	1300:63:43262:43270	1230440	12	True				
ANR	1230495	Statement	)	1300:72:43271:43271	1230440	13	True				
ANR	1230496	ExpressionStatement		1300:73:43272:43272	1230440	14	True				
ANR	1230497	IfStatement	if ( any && Z_TYPE_P ( any ) != IS_ARRAY )		1230440	15					
ANR	1230498	Condition	any && Z_TYPE_P ( any ) != IS_ARRAY	1302:7:43285:43316	1230440	0	True				
ANR	1230499	AndExpression	any && Z_TYPE_P ( any ) != IS_ARRAY		1230440	0		&&			
ANR	1230500	Identifier	any		1230440	0					
ANR	1230501	EqualityExpression	Z_TYPE_P ( any ) != IS_ARRAY		1230440	1		!=			
ANR	1230502	CallExpression	Z_TYPE_P ( any )		1230440	0					
ANR	1230503	Callee	Z_TYPE_P		1230440	0					
ANR	1230504	Identifier	Z_TYPE_P		1230440	0					
ANR	1230505	ArgumentList	any		1230440	1					
ANR	1230506	Argument	any		1230440	0					
ANR	1230507	Identifier	any		1230440	0					
ANR	1230508	Identifier	IS_ARRAY		1230440	1					
ANR	1230509	CompoundStatement		11:4:289:298	1230440	1					
ANR	1230510	IdentifierDeclStatement	zval * arr ;	1304:4:43354:43363	1230440	0	True				
ANR	1230511	IdentifierDecl	* arr		1230440	0					
ANR	1230512	IdentifierDeclType	zval *		1230440	0					
ANR	1230513	Identifier	arr		1230440	1					
ANR	1230514	ExpressionStatement	MAKE_STD_ZVAL ( arr )	1306:4:43370:43388	1230440	1	True				
ANR	1230515	CallExpression	MAKE_STD_ZVAL ( arr )		1230440	0					
ANR	1230516	Callee	MAKE_STD_ZVAL		1230440	0					
ANR	1230517	Identifier	MAKE_STD_ZVAL		1230440	0					
ANR	1230518	ArgumentList	arr		1230440	1					
ANR	1230519	Argument	arr		1230440	0					
ANR	1230520	Identifier	arr		1230440	0					
ANR	1230521	ExpressionStatement	array_init ( arr )	1307:4:43394:43409	1230440	2	True				
ANR	1230522	CallExpression	array_init ( arr )		1230440	0					
ANR	1230523	Callee	array_init		1230440	0					
ANR	1230524	Identifier	array_init		1230440	0					
ANR	1230525	ArgumentList	arr		1230440	1					
ANR	1230526	Argument	arr		1230440	0					
ANR	1230527	Identifier	arr		1230440	0					
ANR	1230528	IfStatement	if ( name )		1230440	3					
ANR	1230529	Condition	name	1308:8:43419:43422	1230440	0	True				
ANR	1230530	Identifier	name		1230440	0					
ANR	1230531	CompoundStatement		15:14:360:360	1230440	1					
ANR	1230532	ExpressionStatement	"add_assoc_zval ( arr , name , any )"	1309:5:43432:43462	1230440	0	True				
ANR	1230533	CallExpression	"add_assoc_zval ( arr , name , any )"		1230440	0					
ANR	1230534	Callee	add_assoc_zval		1230440	0					
ANR	1230535	Identifier	add_assoc_zval		1230440	0					
ANR	1230536	ArgumentList	arr		1230440	1					
ANR	1230537	Argument	arr		1230440	0					
ANR	1230538	Identifier	arr		1230440	0					
ANR	1230539	Argument	name		1230440	1					
ANR	1230540	Identifier	name		1230440	0					
ANR	1230541	Argument	any		1230440	2					
ANR	1230542	Identifier	any		1230440	0					
ANR	1230543	ElseStatement	else		1230440	0					
ANR	1230544	CompoundStatement		17:11:410:410	1230440	0					
ANR	1230545	ExpressionStatement	"add_next_index_zval ( arr , any )"	1311:5:43482:43511	1230440	0	True				
ANR	1230546	CallExpression	"add_next_index_zval ( arr , any )"		1230440	0					
ANR	1230547	Callee	add_next_index_zval		1230440	0					
ANR	1230548	Identifier	add_next_index_zval		1230440	0					
ANR	1230549	ArgumentList	arr		1230440	1					
ANR	1230550	Argument	arr		1230440	0					
ANR	1230551	Identifier	arr		1230440	0					
ANR	1230552	Argument	any		1230440	1					
ANR	1230553	Identifier	any		1230440	0					
ANR	1230554	ExpressionStatement	any = arr	1313:4:43523:43532	1230440	4	True				
ANR	1230555	AssignmentExpression	any = arr		1230440	0		=			
ANR	1230556	Identifier	any		1230440	0					
ANR	1230557	Identifier	arr		1230440	1					
ANR	1230558	IfStatement	if ( Z_TYPE_P ( val ) == IS_STRING && * Z_STRVAL_P ( val ) == '<' )		1230440	16					
ANR	1230559	Condition	Z_TYPE_P ( val ) == IS_STRING && * Z_STRVAL_P ( val ) == '<'	1316:7:43547:43599	1230440	0	True				
ANR	1230560	AndExpression	Z_TYPE_P ( val ) == IS_STRING && * Z_STRVAL_P ( val ) == '<'		1230440	0		&&			
ANR	1230561	EqualityExpression	Z_TYPE_P ( val ) == IS_STRING		1230440	0		==			
ANR	1230562	CallExpression	Z_TYPE_P ( val )		1230440	0					
ANR	1230563	Callee	Z_TYPE_P		1230440	0					
ANR	1230564	Identifier	Z_TYPE_P		1230440	0					
ANR	1230565	ArgumentList	val		1230440	1					
ANR	1230566	Argument	val		1230440	0					
ANR	1230567	Identifier	val		1230440	0					
ANR	1230568	Identifier	IS_STRING		1230440	1					
ANR	1230569	EqualityExpression	* Z_STRVAL_P ( val ) == '<'		1230440	1		==			
ANR	1230570	UnaryOperationExpression	* Z_STRVAL_P ( val )		1230440	0					
ANR	1230571	UnaryOperator	*		1230440	0					
ANR	1230572	CallExpression	Z_STRVAL_P ( val )		1230440	1					
ANR	1230573	Callee	Z_STRVAL_P		1230440	0					
ANR	1230574	Identifier	Z_STRVAL_P		1230440	0					
ANR	1230575	ArgumentList	val		1230440	1					
ANR	1230576	Argument	val		1230440	0					
ANR	1230577	Identifier	val		1230440	0					
ANR	1230578	PrimaryExpression	'<'		1230440	1					
ANR	1230579	CompoundStatement		23:62:537:537	1230440	1					
ANR	1230580	ExpressionStatement	name = NULL	1317:4:43608:43619	1230440	0	True				
ANR	1230581	AssignmentExpression	name = NULL		1230440	0		=			
ANR	1230582	Identifier	name		1230440	0					
ANR	1230583	Identifier	NULL		1230440	1					
ANR	1230584	WhileStatement	while ( node -> next != NULL )		1230440	1					
ANR	1230585	Condition	node -> next != NULL	1318:11:43632:43649	1230440	0	True				
ANR	1230586	EqualityExpression	node -> next != NULL		1230440	0		!=			
ANR	1230587	PtrMemberAccess	node -> next		1230440	0					
ANR	1230588	Identifier	node		1230440	0					
ANR	1230589	Identifier	next		1230440	1					
ANR	1230590	Identifier	NULL		1230440	1					
ANR	1230591	CompoundStatement		25:31:587:587	1230440	1					
ANR	1230592	Statement	zval	1319:5:43659:43662	1230440	0	True				
ANR	1230593	Statement	*	1319:9:43663:43663	1230440	1	True				
ANR	1230594	Statement	val2	1319:11:43665:43668	1230440	2	True				
ANR	1230595	Statement	=	1319:16:43670:43670	1230440	3	True				
ANR	1230596	Statement	master_to_zval	1319:18:43672:43685	1230440	4	True				
ANR	1230597	Statement	(	1319:32:43686:43686	1230440	5	True				
ANR	1230598	Statement	get_conversion	1319:33:43687:43700	1230440	6	True				
ANR	1230599	Statement	(	1319:47:43701:43701	1230440	7	True				
ANR	1230600	Statement	XSD_ANYXML	1319:48:43702:43711	1230440	8	True				
ANR	1230601	Statement	)	1319:58:43712:43712	1230440	9	True				
ANR	1230602	Statement	","	1319:59:43713:43713	1230440	10	True				
ANR	1230603	Statement	node	1319:61:43715:43718	1230440	11	True				
ANR	1230604	Statement	->	1319:65:43719:43720	1230440	12	True				
ANR	1230605	Statement	next	1319:67:43721:43724	1230440	13	True				
ANR	1230606	Statement	TSRMLS_CC	1319:72:43726:43734	1230440	14	True				
ANR	1230607	Statement	)	1319:81:43735:43735	1230440	15	True				
ANR	1230608	ExpressionStatement		1319:82:43736:43736	1230440	16	True				
ANR	1230609	IfStatement	if ( Z_TYPE_P ( val2 ) != IS_STRING || * Z_STRVAL_P ( val ) != '<' )		1230440	17					
ANR	1230610	Condition	Z_TYPE_P ( val2 ) != IS_STRING || * Z_STRVAL_P ( val ) != '<'	1320:9:43747:43801	1230440	0	True				
ANR	1230611	OrExpression	Z_TYPE_P ( val2 ) != IS_STRING || * Z_STRVAL_P ( val ) != '<'		1230440	0		||			
ANR	1230612	EqualityExpression	Z_TYPE_P ( val2 ) != IS_STRING		1230440	0		!=			
ANR	1230613	CallExpression	Z_TYPE_P ( val2 )		1230440	0					
ANR	1230614	Callee	Z_TYPE_P		1230440	0					
ANR	1230615	Identifier	Z_TYPE_P		1230440	0					
ANR	1230616	ArgumentList	val2		1230440	1					
ANR	1230617	Argument	val2		1230440	0					
ANR	1230618	Identifier	val2		1230440	0					
ANR	1230619	Identifier	IS_STRING		1230440	1					
ANR	1230620	EqualityExpression	* Z_STRVAL_P ( val ) != '<'		1230440	1		!=			
ANR	1230621	UnaryOperationExpression	* Z_STRVAL_P ( val )		1230440	0					
ANR	1230622	UnaryOperator	*		1230440	0					
ANR	1230623	CallExpression	Z_STRVAL_P ( val )		1230440	1					
ANR	1230624	Callee	Z_STRVAL_P		1230440	0					
ANR	1230625	Identifier	Z_STRVAL_P		1230440	0					
ANR	1230626	ArgumentList	val		1230440	1					
ANR	1230627	Argument	val		1230440	0					
ANR	1230628	Identifier	val		1230440	0					
ANR	1230629	PrimaryExpression	'<'		1230440	1					
ANR	1230630	CompoundStatement		27:66:739:739	1230440	1					
ANR	1230631	BreakStatement	break ;	1321:6:43812:43817	1230440	0	True				
ANR	1230632	ExpressionStatement	"add_string_to_string ( val , val , val2 )"	1323:5:43831:43867	1230440	18	True				
ANR	1230633	CallExpression	"add_string_to_string ( val , val , val2 )"		1230440	0					
ANR	1230634	Callee	add_string_to_string		1230440	0					
ANR	1230635	Identifier	add_string_to_string		1230440	0					
ANR	1230636	ArgumentList	val		1230440	1					
ANR	1230637	Argument	val		1230440	0					
ANR	1230638	Identifier	val		1230440	0					
ANR	1230639	Argument	val		1230440	1					
ANR	1230640	Identifier	val		1230440	0					
ANR	1230641	Argument	val2		1230440	2					
ANR	1230642	Identifier	val2		1230440	0					
ANR	1230643	ExpressionStatement	zval_ptr_dtor ( & val2 )	1324:5:43874:43894	1230440	19	True				
ANR	1230644	CallExpression	zval_ptr_dtor ( & val2 )		1230440	0					
ANR	1230645	Callee	zval_ptr_dtor		1230440	0					
ANR	1230646	Identifier	zval_ptr_dtor		1230440	0					
ANR	1230647	ArgumentList	& val2		1230440	1					
ANR	1230648	Argument	& val2		1230440	0					
ANR	1230649	UnaryOperationExpression	& val2		1230440	0					
ANR	1230650	UnaryOperator	&		1230440	0					
ANR	1230651	Identifier	val2		1230440	1					
ANR	1230652	ExpressionStatement	node = node -> next	1325:5:43901:43918	1230440	20	True				
ANR	1230653	AssignmentExpression	node = node -> next		1230440	0		=			
ANR	1230654	Identifier	node		1230440	0					
ANR	1230655	PtrMemberAccess	node -> next		1230440	1					
ANR	1230656	Identifier	node		1230440	0					
ANR	1230657	Identifier	next		1230440	1					
ANR	1230658	ElseStatement	else		1230440	0					
ANR	1230659	CompoundStatement		34:10:871:871	1230440	0					
ANR	1230660	ExpressionStatement	name = ( char * ) node -> name	1328:4:43942:43966	1230440	0	True				
ANR	1230661	AssignmentExpression	name = ( char * ) node -> name		1230440	0		=			
ANR	1230662	Identifier	name		1230440	0					
ANR	1230663	CastExpression	( char * ) node -> name		1230440	1					
ANR	1230664	CastTarget	char *		1230440	0					
ANR	1230665	PtrMemberAccess	node -> name		1230440	1					
ANR	1230666	Identifier	node		1230440	0					
ANR	1230667	Identifier	name		1230440	1					
ANR	1230668	IfStatement	if ( any == NULL )		1230440	17					
ANR	1230669	Condition	any == NULL	1331:7:43981:43991	1230440	0	True				
ANR	1230670	EqualityExpression	any == NULL		1230440	0		==			
ANR	1230671	Identifier	any		1230440	0					
ANR	1230672	Identifier	NULL		1230440	1					
ANR	1230673	CompoundStatement		38:20:929:929	1230440	1					
ANR	1230674	IfStatement	if ( name )		1230440	0					
ANR	1230675	Condition	name	1332:8:44004:44007	1230440	0	True				
ANR	1230676	Identifier	name		1230440	0					
ANR	1230677	CompoundStatement		41:5:982:991	1230440	1					
ANR	1230678	IdentifierDeclStatement	zval * arr ;	1334:5:44047:44056	1230440	0	True				
ANR	1230679	IdentifierDecl	* arr		1230440	0					
ANR	1230680	IdentifierDeclType	zval *		1230440	0					
ANR	1230681	Identifier	arr		1230440	1					
ANR	1230682	ExpressionStatement	MAKE_STD_ZVAL ( arr )	1336:5:44064:44082	1230440	1	True				
ANR	1230683	CallExpression	MAKE_STD_ZVAL ( arr )		1230440	0					
ANR	1230684	Callee	MAKE_STD_ZVAL		1230440	0					
ANR	1230685	Identifier	MAKE_STD_ZVAL		1230440	0					
ANR	1230686	ArgumentList	arr		1230440	1					
ANR	1230687	Argument	arr		1230440	0					
ANR	1230688	Identifier	arr		1230440	0					
ANR	1230689	ExpressionStatement	array_init ( arr )	1337:5:44089:44104	1230440	2	True				
ANR	1230690	CallExpression	array_init ( arr )		1230440	0					
ANR	1230691	Callee	array_init		1230440	0					
ANR	1230692	Identifier	array_init		1230440	0					
ANR	1230693	ArgumentList	arr		1230440	1					
ANR	1230694	Argument	arr		1230440	0					
ANR	1230695	Identifier	arr		1230440	0					
ANR	1230696	ExpressionStatement	"add_assoc_zval ( arr , name , val )"	1338:5:44111:44141	1230440	3	True				
ANR	1230697	CallExpression	"add_assoc_zval ( arr , name , val )"		1230440	0					
ANR	1230698	Callee	add_assoc_zval		1230440	0					
ANR	1230699	Identifier	add_assoc_zval		1230440	0					
ANR	1230700	ArgumentList	arr		1230440	1					
ANR	1230701	Argument	arr		1230440	0					
ANR	1230702	Identifier	arr		1230440	0					
ANR	1230703	Argument	name		1230440	1					
ANR	1230704	Identifier	name		1230440	0					
ANR	1230705	Argument	val		1230440	2					
ANR	1230706	Identifier	val		1230440	0					
ANR	1230707	ExpressionStatement	any = arr	1339:5:44148:44157	1230440	4	True				
ANR	1230708	AssignmentExpression	any = arr		1230440	0		=			
ANR	1230709	Identifier	any		1230440	0					
ANR	1230710	Identifier	arr		1230440	1					
ANR	1230711	ExpressionStatement	name = NULL	1340:5:44164:44175	1230440	5	True				
ANR	1230712	AssignmentExpression	name = NULL		1230440	0		=			
ANR	1230713	Identifier	name		1230440	0					
ANR	1230714	Identifier	NULL		1230440	1					
ANR	1230715	ElseStatement	else		1230440	0					
ANR	1230716	CompoundStatement		48:11:1123:1123	1230440	0					
ANR	1230717	ExpressionStatement	any = val	1342:5:44195:44204	1230440	0	True				
ANR	1230718	AssignmentExpression	any = val		1230440	0		=			
ANR	1230719	Identifier	any		1230440	0					
ANR	1230720	Identifier	val		1230440	1					
ANR	1230721	ElseStatement	else		1230440	0					
ANR	1230722	CompoundStatement		51:10:1157:1157	1230440	0					
ANR	1230723	IfStatement	if ( name )		1230440	0					
ANR	1230724	Condition	name	1346:8:44260:44263	1230440	0	True				
ANR	1230725	Identifier	name		1230440	0					
ANR	1230726	CompoundStatement		54:5:1208:1217	1230440	1					
ANR	1230727	IdentifierDeclStatement	zval * * el ;	1347:5:44273:44282	1230440	0	True				
ANR	1230728	IdentifierDecl	* * el		1230440	0					
ANR	1230729	IdentifierDeclType	zval * *		1230440	0					
ANR	1230730	Identifier	el		1230440	1					
ANR	1230731	IfStatement	"if ( zend_hash_find ( Z_ARRVAL_P ( any ) , name , strlen ( name ) + 1 , ( void * * ) & el ) == SUCCESS )"		1230440	1					
ANR	1230732	Condition	"zend_hash_find ( Z_ARRVAL_P ( any ) , name , strlen ( name ) + 1 , ( void * * ) & el ) == SUCCESS"	1348:9:44293:44369	1230440	0	True				
ANR	1230733	EqualityExpression	"zend_hash_find ( Z_ARRVAL_P ( any ) , name , strlen ( name ) + 1 , ( void * * ) & el ) == SUCCESS"		1230440	0		==			
ANR	1230734	CallExpression	"zend_hash_find ( Z_ARRVAL_P ( any ) , name , strlen ( name ) + 1 , ( void * * ) & el )"		1230440	0					
ANR	1230735	Callee	zend_hash_find		1230440	0					
ANR	1230736	Identifier	zend_hash_find		1230440	0					
ANR	1230737	ArgumentList	Z_ARRVAL_P ( any )		1230440	1					
ANR	1230738	Argument	Z_ARRVAL_P ( any )		1230440	0					
ANR	1230739	CallExpression	Z_ARRVAL_P ( any )		1230440	0					
ANR	1230740	Callee	Z_ARRVAL_P		1230440	0					
ANR	1230741	Identifier	Z_ARRVAL_P		1230440	0					
ANR	1230742	ArgumentList	any		1230440	1					
ANR	1230743	Argument	any		1230440	0					
ANR	1230744	Identifier	any		1230440	0					
ANR	1230745	Argument	name		1230440	1					
ANR	1230746	Identifier	name		1230440	0					
ANR	1230747	Argument	strlen ( name ) + 1		1230440	2					
ANR	1230748	AdditiveExpression	strlen ( name ) + 1		1230440	0		+			
ANR	1230749	CallExpression	strlen ( name )		1230440	0					
ANR	1230750	Callee	strlen		1230440	0					
ANR	1230751	Identifier	strlen		1230440	0					
ANR	1230752	ArgumentList	name		1230440	1					
ANR	1230753	Argument	name		1230440	0					
ANR	1230754	Identifier	name		1230440	0					
ANR	1230755	PrimaryExpression	1		1230440	1					
ANR	1230756	Argument	( void * * ) & el		1230440	3					
ANR	1230757	CastExpression	( void * * ) & el		1230440	0					
ANR	1230758	CastTarget	void * *		1230440	0					
ANR	1230759	UnaryOperationExpression	& el		1230440	1					
ANR	1230760	UnaryOperator	&		1230440	0					
ANR	1230761	Identifier	el		1230440	1					
ANR	1230762	Identifier	SUCCESS		1230440	1					
ANR	1230763	CompoundStatement		55:88:1307:1307	1230440	1					
ANR	1230764	IfStatement	if ( Z_TYPE_PP ( el ) != IS_ARRAY )		1230440	0					
ANR	1230765	Condition	Z_TYPE_PP ( el ) != IS_ARRAY	1349:10:44384:44408	1230440	0	True				
ANR	1230766	EqualityExpression	Z_TYPE_PP ( el ) != IS_ARRAY		1230440	0		!=			
ANR	1230767	CallExpression	Z_TYPE_PP ( el )		1230440	0					
ANR	1230768	Callee	Z_TYPE_PP		1230440	0					
ANR	1230769	Identifier	Z_TYPE_PP		1230440	0					
ANR	1230770	ArgumentList	el		1230440	1					
ANR	1230771	Argument	el		1230440	0					
ANR	1230772	Identifier	el		1230440	0					
ANR	1230773	Identifier	IS_ARRAY		1230440	1					
ANR	1230774	CompoundStatement		58:7:1387:1396	1230440	1					
ANR	1230775	IdentifierDeclStatement	zval * arr ;	1351:7:44452:44461	1230440	0	True				
ANR	1230776	IdentifierDecl	* arr		1230440	0					
ANR	1230777	IdentifierDeclType	zval *		1230440	0					
ANR	1230778	Identifier	arr		1230440	1					
ANR	1230779	ExpressionStatement	MAKE_STD_ZVAL ( arr )	1353:7:44472:44490	1230440	1	True				
ANR	1230780	CallExpression	MAKE_STD_ZVAL ( arr )		1230440	0					
ANR	1230781	Callee	MAKE_STD_ZVAL		1230440	0					
ANR	1230782	Identifier	MAKE_STD_ZVAL		1230440	0					
ANR	1230783	ArgumentList	arr		1230440	1					
ANR	1230784	Argument	arr		1230440	0					
ANR	1230785	Identifier	arr		1230440	0					
ANR	1230786	ExpressionStatement	array_init ( arr )	1354:7:44499:44514	1230440	2	True				
ANR	1230787	CallExpression	array_init ( arr )		1230440	0					
ANR	1230788	Callee	array_init		1230440	0					
ANR	1230789	Identifier	array_init		1230440	0					
ANR	1230790	ArgumentList	arr		1230440	1					
ANR	1230791	Argument	arr		1230440	0					
ANR	1230792	Identifier	arr		1230440	0					
ANR	1230793	ExpressionStatement	"add_next_index_zval ( arr , * el )"	1355:7:44523:44552	1230440	3	True				
ANR	1230794	CallExpression	"add_next_index_zval ( arr , * el )"		1230440	0					
ANR	1230795	Callee	add_next_index_zval		1230440	0					
ANR	1230796	Identifier	add_next_index_zval		1230440	0					
ANR	1230797	ArgumentList	arr		1230440	1					
ANR	1230798	Argument	arr		1230440	0					
ANR	1230799	Identifier	arr		1230440	0					
ANR	1230800	Argument	* el		1230440	1					
ANR	1230801	UnaryOperationExpression	* el		1230440	0					
ANR	1230802	UnaryOperator	*		1230440	0					
ANR	1230803	Identifier	el		1230440	1					
ANR	1230804	ExpressionStatement	* el = arr	1356:7:44561:44570	1230440	4	True				
ANR	1230805	AssignmentExpression	* el = arr		1230440	0		=			
ANR	1230806	UnaryOperationExpression	* el		1230440	0					
ANR	1230807	UnaryOperator	*		1230440	0					
ANR	1230808	Identifier	el		1230440	1					
ANR	1230809	Identifier	arr		1230440	1					
ANR	1230810	ExpressionStatement	"add_next_index_zval ( * el , val )"	1358:6:44586:44615	1230440	1	True				
ANR	1230811	CallExpression	"add_next_index_zval ( * el , val )"		1230440	0					
ANR	1230812	Callee	add_next_index_zval		1230440	0					
ANR	1230813	Identifier	add_next_index_zval		1230440	0					
ANR	1230814	ArgumentList	* el		1230440	1					
ANR	1230815	Argument	* el		1230440	0					
ANR	1230816	UnaryOperationExpression	* el		1230440	0					
ANR	1230817	UnaryOperator	*		1230440	0					
ANR	1230818	Identifier	el		1230440	1					
ANR	1230819	Argument	val		1230440	1					
ANR	1230820	Identifier	val		1230440	0					
ANR	1230821	ElseStatement	else		1230440	0					
ANR	1230822	CompoundStatement		66:12:1564:1564	1230440	0					
ANR	1230823	ExpressionStatement	"add_assoc_zval ( any , name , val )"	1360:6:44637:44667	1230440	0	True				
ANR	1230824	CallExpression	"add_assoc_zval ( any , name , val )"		1230440	0					
ANR	1230825	Callee	add_assoc_zval		1230440	0					
ANR	1230826	Identifier	add_assoc_zval		1230440	0					
ANR	1230827	ArgumentList	any		1230440	1					
ANR	1230828	Argument	any		1230440	0					
ANR	1230829	Identifier	any		1230440	0					
ANR	1230830	Argument	name		1230440	1					
ANR	1230831	Identifier	name		1230440	0					
ANR	1230832	Argument	val		1230440	2					
ANR	1230833	Identifier	val		1230440	0					
ANR	1230834	ElseStatement	else		1230440	0					
ANR	1230835	CompoundStatement		69:11:1622:1622	1230440	0					
ANR	1230836	ExpressionStatement	"add_next_index_zval ( any , val )"	1363:5:44694:44723	1230440	0	True				
ANR	1230837	CallExpression	"add_next_index_zval ( any , val )"		1230440	0					
ANR	1230838	Callee	add_next_index_zval		1230440	0					
ANR	1230839	Identifier	add_next_index_zval		1230440	0					
ANR	1230840	ArgumentList	any		1230440	1					
ANR	1230841	Argument	any		1230440	0					
ANR	1230842	Identifier	any		1230440	0					
ANR	1230843	Argument	val		1230440	1					
ANR	1230844	Identifier	val		1230440	0					
ANR	1230845	ExpressionStatement	name = NULL	1365:4:44735:44746	1230440	1	True				
ANR	1230846	AssignmentExpression	name = NULL		1230440	0		=			
ANR	1230847	Identifier	name		1230440	0					
ANR	1230848	Identifier	NULL		1230440	1					
ANR	1230849	ExpressionStatement	node = node -> next	1368:2:44759:44776	1230440	19	True				
ANR	1230850	AssignmentExpression	node = node -> next		1230440	0		=			
ANR	1230851	Identifier	node		1230440	0					
ANR	1230852	PtrMemberAccess	node -> next		1230440	1					
ANR	1230853	Identifier	node		1230440	0					
ANR	1230854	Identifier	next		1230440	1					
ANR	1230855	IfStatement	if ( any )		1230440	3					
ANR	1230856	Condition	any	1370:5:44786:44788	1230440	0	True				
ANR	1230857	Identifier	any		1230440	0					
ANR	1230858	CompoundStatement		77:10:1726:1726	1230440	1					
ANR	1230859	Statement	set_zval_property	1371:2:44795:44811	1230440	0	True				
ANR	1230860	Statement	(	1371:19:44812:44812	1230440	1	True				
ANR	1230861	Statement	ret	1371:20:44813:44815	1230440	2	True				
ANR	1230862	Statement	","	1371:23:44816:44816	1230440	3	True				
ANR	1230863	Statement	name	1371:25:44818:44821	1230440	4	True				
ANR	1230864	Statement	?	1371:30:44823:44823	1230440	5	True				
ANR	1230865	Label	name :	1371:32:44825:44830	1230440	6	True				
ANR	1230866	Identifier	name		1230440	0					
ANR	1230867	Statement	"""any"""	1371:39:44832:44836	1230440	7	True				
ANR	1230868	Statement	","	1371:44:44837:44837	1230440	8	True				
ANR	1230869	Statement	any	1371:46:44839:44841	1230440	9	True				
ANR	1230870	Statement	TSRMLS_CC	1371:50:44843:44851	1230440	10	True				
ANR	1230871	Statement	)	1371:59:44852:44852	1230440	11	True				
ANR	1230872	ExpressionStatement		1371:60:44853:44853	1230440	12	True				
ANR	1230873	ReturnType	static void		1230440	1					
ANR	1230874	Identifier	model_to_zval_any		1230440	2					
ANR	1230875	ParameterList	"zval * ret , xmlNodePtr node TSRMLS_DC"		1230440	3					
ANR	1230876	Parameter	zval * ret	1293:30:43026:43034	1230440	0	True				
ANR	1230877	ParameterType	zval *		1230440	0					
ANR	1230878	Identifier	ret		1230440	1					
ANR	1230879	Parameter	xmlNodePtr node TSRMLS_DC	1293:41:43037:43061	1230440	1	True				
ANR	1230880	ParameterType	xmlNodePtr node		1230440	0					
ANR	1230881	Identifier	TSRMLS_DC		1230440	1					
ANR	1230882	CFGEntryNode	ENTRY		1230440		True				
ANR	1230883	CFGExitNode	EXIT		1230440		True				
ANR	1230884	Symbol	val2		1230440						
ANR	1230885	Symbol	TSRMLS_DC		1230440						
ANR	1230886	Symbol	* el		1230440						
ANR	1230887	Symbol	zend_hash_find		1230440						
ANR	1230888	Symbol	strlen		1230440						
ANR	1230889	Symbol	Z_TYPE_PP		1230440						
ANR	1230890	Symbol	IS_ARRAY		1230440						
ANR	1230891	Symbol	* node		1230440						
ANR	1230892	Symbol	* Z_STRVAL_P		1230440						
ANR	1230893	Symbol	IS_STRING		1230440						
ANR	1230894	Symbol	Z_ARRVAL_P		1230440						
ANR	1230895	Symbol	ret		1230440						
ANR	1230896	Symbol	arr		1230440						
ANR	1230897	Symbol	val		1230440						
ANR	1230898	Symbol	* Z_STRVAL_P ( val )		1230440						
ANR	1230899	Symbol	NULL		1230440						
ANR	1230900	Symbol	SUCCESS		1230440						
ANR	1230901	Symbol	el		1230440						
ANR	1230902	Symbol	node -> next		1230440						
ANR	1230903	Symbol	Z_TYPE_P		1230440						
ANR	1230904	Symbol	any		1230440						
ANR	1230905	Symbol	Z_STRVAL_P		1230440						
ANR	1230906	Symbol	& el		1230440						
ANR	1230907	Symbol	node		1230440						
ANR	1230908	Symbol	node -> name		1230440						
ANR	1230909	Symbol	name		1230440						
ANR	1230910	Symbol	& val2		1230440						
ANR	1230911	Function	model_to_zval_object	1375:0:44861:48970							
ANR	1230912	FunctionDef	"model_to_zval_object (zval * ret , sdlContentModelPtr model , xmlNodePtr data , sdlPtr sdl TSRMLS_DC)"		1230911	0					
ANR	1230913	CompoundStatement		1376:0:44970:48970	1230911	0					
ANR	1230914	SwitchStatement	switch ( model -> kind )		1230911	0					
ANR	1230915	Condition	model -> kind	1377:9:44981:44991	1230911	0	True				
ANR	1230916	PtrMemberAccess	model -> kind		1230911	0					
ANR	1230917	Identifier	model		1230911	0					
ANR	1230918	Identifier	kind		1230911	1					
ANR	1230919	CompoundStatement		2:22:23:23	1230911	1					
ANR	1230920	Label	case XSD_CONTENT_ELEMENT :	1378:2:44998:45022	1230911	0	True				
ANR	1230921	Identifier	XSD_CONTENT_ELEMENT		1230911	0					
ANR	1230922	IfStatement	if ( model -> u . element -> name )		1230911	1					
ANR	1230923	Condition	model -> u . element -> name	1379:7:45031:45052	1230911	0	True				
ANR	1230924	PtrMemberAccess	model -> u . element -> name		1230911	0					
ANR	1230925	MemberAccess	model -> u . element		1230911	0					
ANR	1230926	PtrMemberAccess	model -> u		1230911	0					
ANR	1230927	Identifier	model		1230911	0					
ANR	1230928	Identifier	u		1230911	1					
ANR	1230929	Identifier	element		1230911	1					
ANR	1230930	Identifier	name		1230911	1					
ANR	1230931	CompoundStatement		5:4:90:156	1230911	1					
ANR	1230932	IdentifierDeclStatement	"xmlNodePtr node = get_node ( data -> children , model -> u . element -> name ) ;"	1380:4:45061:45127	1230911	0	True				
ANR	1230933	IdentifierDecl	"node = get_node ( data -> children , model -> u . element -> name )"		1230911	0					
ANR	1230934	IdentifierDeclType	xmlNodePtr		1230911	0					
ANR	1230935	Identifier	node		1230911	1					
ANR	1230936	AssignmentExpression	"node = get_node ( data -> children , model -> u . element -> name )"		1230911	2		=			
ANR	1230937	Identifier	node		1230911	0					
ANR	1230938	CallExpression	"get_node ( data -> children , model -> u . element -> name )"		1230911	1					
ANR	1230939	Callee	get_node		1230911	0					
ANR	1230940	Identifier	get_node		1230911	0					
ANR	1230941	ArgumentList	data -> children		1230911	1					
ANR	1230942	Argument	data -> children		1230911	0					
ANR	1230943	PtrMemberAccess	data -> children		1230911	0					
ANR	1230944	Identifier	data		1230911	0					
ANR	1230945	Identifier	children		1230911	1					
ANR	1230946	Argument	model -> u . element -> name		1230911	1					
ANR	1230947	PtrMemberAccess	model -> u . element -> name		1230911	0					
ANR	1230948	MemberAccess	model -> u . element		1230911	0					
ANR	1230949	PtrMemberAccess	model -> u		1230911	0					
ANR	1230950	Identifier	model		1230911	0					
ANR	1230951	Identifier	u		1230911	1					
ANR	1230952	Identifier	element		1230911	1					
ANR	1230953	Identifier	name		1230911	1					
ANR	1230954	IfStatement	if ( node )		1230911	1					
ANR	1230955	Condition	node	1382:8:45138:45141	1230911	0	True				
ANR	1230956	Identifier	node		1230911	0					
ANR	1230957	CompoundStatement		9:5:196:213	1230911	1					
ANR	1230958	IdentifierDeclStatement	zval * val ;	1383:5:45151:45160	1230911	0	True				
ANR	1230959	IdentifierDecl	* val		1230911	0					
ANR	1230960	IdentifierDeclType	zval *		1230911	0					
ANR	1230961	Identifier	val		1230911	1					
ANR	1230962	IdentifierDeclStatement	xmlNodePtr r_node ;	1384:5:45167:45184	1230911	1	True				
ANR	1230963	IdentifierDecl	r_node		1230911	0					
ANR	1230964	IdentifierDeclType	xmlNodePtr		1230911	0					
ANR	1230965	Identifier	r_node		1230911	1					
ANR	1230966	ExpressionStatement	r_node = check_and_resolve_href ( node )	1386:5:45192:45229	1230911	2	True				
ANR	1230967	AssignmentExpression	r_node = check_and_resolve_href ( node )		1230911	0		=			
ANR	1230968	Identifier	r_node		1230911	0					
ANR	1230969	CallExpression	check_and_resolve_href ( node )		1230911	1					
ANR	1230970	Callee	check_and_resolve_href		1230911	0					
ANR	1230971	Identifier	check_and_resolve_href		1230911	0					
ANR	1230972	ArgumentList	node		1230911	1					
ANR	1230973	Argument	node		1230911	0					
ANR	1230974	Identifier	node		1230911	0					
ANR	1230975	IfStatement	if ( r_node && r_node -> children && r_node -> children -> content )		1230911	3					
ANR	1230976	Condition	r_node && r_node -> children && r_node -> children -> content	1387:9:45240:45294	1230911	0	True				
ANR	1230977	AndExpression	r_node && r_node -> children && r_node -> children -> content		1230911	0		&&			
ANR	1230978	Identifier	r_node		1230911	0					
ANR	1230979	AndExpression	r_node -> children && r_node -> children -> content		1230911	1		&&			
ANR	1230980	PtrMemberAccess	r_node -> children		1230911	0					
ANR	1230981	Identifier	r_node		1230911	0					
ANR	1230982	Identifier	children		1230911	1					
ANR	1230983	PtrMemberAccess	r_node -> children -> content		1230911	1					
ANR	1230984	PtrMemberAccess	r_node -> children		1230911	0					
ANR	1230985	Identifier	r_node		1230911	0					
ANR	1230986	Identifier	children		1230911	1					
ANR	1230987	Identifier	content		1230911	1					
ANR	1230988	CompoundStatement		12:66:326:326	1230911	1					
ANR	1230989	IfStatement	"if ( model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) r_node -> children -> content ) != 0 )"		1230911	0					
ANR	1230990	Condition	"model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) r_node -> children -> content ) != 0"	1388:10:45309:45405	1230911	0	True				
ANR	1230991	AndExpression	"model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) r_node -> children -> content ) != 0"		1230911	0		&&			
ANR	1230992	PtrMemberAccess	model -> u . element -> fixed		1230911	0					
ANR	1230993	MemberAccess	model -> u . element		1230911	0					
ANR	1230994	PtrMemberAccess	model -> u		1230911	0					
ANR	1230995	Identifier	model		1230911	0					
ANR	1230996	Identifier	u		1230911	1					
ANR	1230997	Identifier	element		1230911	1					
ANR	1230998	Identifier	fixed		1230911	1					
ANR	1230999	EqualityExpression	"strcmp ( model -> u . element -> fixed , ( char * ) r_node -> children -> content ) != 0"		1230911	1		!=			
ANR	1231000	CallExpression	"strcmp ( model -> u . element -> fixed , ( char * ) r_node -> children -> content )"		1230911	0					
ANR	1231001	Callee	strcmp		1230911	0					
ANR	1231002	Identifier	strcmp		1230911	0					
ANR	1231003	ArgumentList	model -> u . element -> fixed		1230911	1					
ANR	1231004	Argument	model -> u . element -> fixed		1230911	0					
ANR	1231005	PtrMemberAccess	model -> u . element -> fixed		1230911	0					
ANR	1231006	MemberAccess	model -> u . element		1230911	0					
ANR	1231007	PtrMemberAccess	model -> u		1230911	0					
ANR	1231008	Identifier	model		1230911	0					
ANR	1231009	Identifier	u		1230911	1					
ANR	1231010	Identifier	element		1230911	1					
ANR	1231011	Identifier	fixed		1230911	1					
ANR	1231012	Argument	( char * ) r_node -> children -> content		1230911	1					
ANR	1231013	CastExpression	( char * ) r_node -> children -> content		1230911	0					
ANR	1231014	CastTarget	char *		1230911	0					
ANR	1231015	PtrMemberAccess	r_node -> children -> content		1230911	1					
ANR	1231016	PtrMemberAccess	r_node -> children		1230911	0					
ANR	1231017	Identifier	r_node		1230911	0					
ANR	1231018	Identifier	children		1230911	1					
ANR	1231019	Identifier	content		1230911	1					
ANR	1231020	PrimaryExpression	0		1230911	1					
ANR	1231021	CompoundStatement		13:109:437:437	1230911	1					
ANR	1231022	ExpressionStatement	"soap_error3 ( E_ERROR , ""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"" , model -> u . element -> name , model -> u . element -> fixed , r_node -> children -> content )"	1389:7:45417:45588	1230911	0	True				
ANR	1231023	CallExpression	"soap_error3 ( E_ERROR , ""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"" , model -> u . element -> name , model -> u . element -> fixed , r_node -> children -> content )"		1230911	0					
ANR	1231024	Callee	soap_error3		1230911	0					
ANR	1231025	Identifier	soap_error3		1230911	0					
ANR	1231026	ArgumentList	E_ERROR		1230911	1					
ANR	1231027	Argument	E_ERROR		1230911	0					
ANR	1231028	Identifier	E_ERROR		1230911	0					
ANR	1231029	Argument	"""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"""		1230911	1					
ANR	1231030	PrimaryExpression	"""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"""		1230911	0					
ANR	1231031	Argument	model -> u . element -> name		1230911	2					
ANR	1231032	PtrMemberAccess	model -> u . element -> name		1230911	0					
ANR	1231033	MemberAccess	model -> u . element		1230911	0					
ANR	1231034	PtrMemberAccess	model -> u		1230911	0					
ANR	1231035	Identifier	model		1230911	0					
ANR	1231036	Identifier	u		1230911	1					
ANR	1231037	Identifier	element		1230911	1					
ANR	1231038	Identifier	name		1230911	1					
ANR	1231039	Argument	model -> u . element -> fixed		1230911	3					
ANR	1231040	PtrMemberAccess	model -> u . element -> fixed		1230911	0					
ANR	1231041	MemberAccess	model -> u . element		1230911	0					
ANR	1231042	PtrMemberAccess	model -> u		1230911	0					
ANR	1231043	Identifier	model		1230911	0					
ANR	1231044	Identifier	u		1230911	1					
ANR	1231045	Identifier	element		1230911	1					
ANR	1231046	Identifier	fixed		1230911	1					
ANR	1231047	Argument	r_node -> children -> content		1230911	4					
ANR	1231048	PtrMemberAccess	r_node -> children -> content		1230911	0					
ANR	1231049	PtrMemberAccess	r_node -> children		1230911	0					
ANR	1231050	Identifier	r_node		1230911	0					
ANR	1231051	Identifier	children		1230911	1					
ANR	1231052	Identifier	content		1230911	1					
ANR	1231053	Statement	val	1391:6:45604:45606	1230911	1	True				
ANR	1231054	Statement	=	1391:10:45608:45608	1230911	2	True				
ANR	1231055	Statement	master_to_zval	1391:12:45610:45623	1230911	3	True				
ANR	1231056	Statement	(	1391:26:45624:45624	1230911	4	True				
ANR	1231057	Statement	model	1391:27:45625:45629	1230911	5	True				
ANR	1231058	Statement	->	1391:32:45630:45631	1230911	6	True				
ANR	1231059	Statement	u	1391:34:45632:45632	1230911	7	True				
ANR	1231060	Statement	.	1391:35:45633:45633	1230911	8	True				
ANR	1231061	Statement	element	1391:36:45634:45640	1230911	9	True				
ANR	1231062	Statement	->	1391:43:45641:45642	1230911	10	True				
ANR	1231063	Statement	encode	1391:45:45643:45648	1230911	11	True				
ANR	1231064	Statement	","	1391:51:45649:45649	1230911	12	True				
ANR	1231065	Statement	r_node	1391:53:45651:45656	1230911	13	True				
ANR	1231066	Statement	TSRMLS_CC	1391:60:45658:45666	1230911	14	True				
ANR	1231067	Statement	)	1391:69:45667:45667	1230911	15	True				
ANR	1231068	ExpressionStatement		1391:70:45668:45668	1230911	16	True				
ANR	1231069	ElseStatement	else		1230911	0					
ANR	1231070	IfStatement	if ( model -> u . element -> fixed )		1230911	0					
ANR	1231071	Condition	model -> u . element -> fixed	1392:16:45686:45708	1230911	0	True				
ANR	1231072	PtrMemberAccess	model -> u . element -> fixed		1230911	0					
ANR	1231073	MemberAccess	model -> u . element		1230911	0					
ANR	1231074	PtrMemberAccess	model -> u		1230911	0					
ANR	1231075	Identifier	model		1230911	0					
ANR	1231076	Identifier	u		1230911	1					
ANR	1231077	Identifier	element		1230911	1					
ANR	1231078	Identifier	fixed		1230911	1					
ANR	1231079	CompoundStatement		18:6:748:802	1230911	1					
ANR	1231080	IdentifierDeclStatement	"xmlNodePtr dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) ) ;"	1393:6:45719:45773	1230911	0	True				
ANR	1231081	IdentifierDecl	"dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1230911	0					
ANR	1231082	IdentifierDeclType	xmlNodePtr		1230911	0					
ANR	1231083	Identifier	dummy		1230911	1					
ANR	1231084	AssignmentExpression	"dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1230911	2		=			
ANR	1231085	Identifier	dummy		1230911	0					
ANR	1231086	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1230911	1					
ANR	1231087	Callee	xmlNewNode		1230911	0					
ANR	1231088	Identifier	xmlNewNode		1230911	0					
ANR	1231089	ArgumentList	NULL		1230911	1					
ANR	1231090	Argument	NULL		1230911	0					
ANR	1231091	Identifier	NULL		1230911	0					
ANR	1231092	Argument	"BAD_CAST ( ""BOGUS"" )"		1230911	1					
ANR	1231093	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1230911	0					
ANR	1231094	Callee	BAD_CAST		1230911	0					
ANR	1231095	Identifier	BAD_CAST		1230911	0					
ANR	1231096	ArgumentList	"""BOGUS"""		1230911	1					
ANR	1231097	Argument	"""BOGUS"""		1230911	0					
ANR	1231098	PrimaryExpression	"""BOGUS"""		1230911	0					
ANR	1231099	ExpressionStatement	"xmlNodeSetContent ( dummy , BAD_CAST ( model -> u . element -> fixed ) )"	1394:6:45781:45840	1230911	1	True				
ANR	1231100	CallExpression	"xmlNodeSetContent ( dummy , BAD_CAST ( model -> u . element -> fixed ) )"		1230911	0					
ANR	1231101	Callee	xmlNodeSetContent		1230911	0					
ANR	1231102	Identifier	xmlNodeSetContent		1230911	0					
ANR	1231103	ArgumentList	dummy		1230911	1					
ANR	1231104	Argument	dummy		1230911	0					
ANR	1231105	Identifier	dummy		1230911	0					
ANR	1231106	Argument	BAD_CAST ( model -> u . element -> fixed )		1230911	1					
ANR	1231107	CallExpression	BAD_CAST ( model -> u . element -> fixed )		1230911	0					
ANR	1231108	Callee	BAD_CAST		1230911	0					
ANR	1231109	Identifier	BAD_CAST		1230911	0					
ANR	1231110	ArgumentList	model -> u . element -> fixed		1230911	1					
ANR	1231111	Argument	model -> u . element -> fixed		1230911	0					
ANR	1231112	PtrMemberAccess	model -> u . element -> fixed		1230911	0					
ANR	1231113	MemberAccess	model -> u . element		1230911	0					
ANR	1231114	PtrMemberAccess	model -> u		1230911	0					
ANR	1231115	Identifier	model		1230911	0					
ANR	1231116	Identifier	u		1230911	1					
ANR	1231117	Identifier	element		1230911	1					
ANR	1231118	Identifier	fixed		1230911	1					
ANR	1231119	Statement	val	1395:6:45848:45850	1230911	2	True				
ANR	1231120	Statement	=	1395:10:45852:45852	1230911	3	True				
ANR	1231121	Statement	master_to_zval	1395:12:45854:45867	1230911	4	True				
ANR	1231122	Statement	(	1395:26:45868:45868	1230911	5	True				
ANR	1231123	Statement	model	1395:27:45869:45873	1230911	6	True				
ANR	1231124	Statement	->	1395:32:45874:45875	1230911	7	True				
ANR	1231125	Statement	u	1395:34:45876:45876	1230911	8	True				
ANR	1231126	Statement	.	1395:35:45877:45877	1230911	9	True				
ANR	1231127	Statement	element	1395:36:45878:45884	1230911	10	True				
ANR	1231128	Statement	->	1395:43:45885:45886	1230911	11	True				
ANR	1231129	Statement	encode	1395:45:45887:45892	1230911	12	True				
ANR	1231130	Statement	","	1395:51:45893:45893	1230911	13	True				
ANR	1231131	Statement	dummy	1395:53:45895:45899	1230911	14	True				
ANR	1231132	Statement	TSRMLS_CC	1395:59:45901:45909	1230911	15	True				
ANR	1231133	Statement	)	1395:68:45910:45910	1230911	16	True				
ANR	1231134	ExpressionStatement		1395:69:45911:45911	1230911	17	True				
ANR	1231135	ExpressionStatement	xmlFreeNode ( dummy )	1396:6:45919:45937	1230911	18	True				
ANR	1231136	CallExpression	xmlFreeNode ( dummy )		1230911	0					
ANR	1231137	Callee	xmlFreeNode		1230911	0					
ANR	1231138	Identifier	xmlFreeNode		1230911	0					
ANR	1231139	ArgumentList	dummy		1230911	1					
ANR	1231140	Argument	dummy		1230911	0					
ANR	1231141	Identifier	dummy		1230911	0					
ANR	1231142	ElseStatement	else		1230911	0					
ANR	1231143	IfStatement	if ( model -> u . element -> def && ! model -> u . element -> nillable )		1230911	0					
ANR	1231144	Condition	model -> u . element -> def && ! model -> u . element -> nillable	1397:16:45955:46006	1230911	0	True				
ANR	1231145	AndExpression	model -> u . element -> def && ! model -> u . element -> nillable		1230911	0		&&			
ANR	1231146	PtrMemberAccess	model -> u . element -> def		1230911	0					
ANR	1231147	MemberAccess	model -> u . element		1230911	0					
ANR	1231148	PtrMemberAccess	model -> u		1230911	0					
ANR	1231149	Identifier	model		1230911	0					
ANR	1231150	Identifier	u		1230911	1					
ANR	1231151	Identifier	element		1230911	1					
ANR	1231152	Identifier	def		1230911	1					
ANR	1231153	UnaryOperationExpression	! model -> u . element -> nillable		1230911	1					
ANR	1231154	UnaryOperator	!		1230911	0					
ANR	1231155	PtrMemberAccess	model -> u . element -> nillable		1230911	1					
ANR	1231156	MemberAccess	model -> u . element		1230911	0					
ANR	1231157	PtrMemberAccess	model -> u		1230911	0					
ANR	1231158	Identifier	model		1230911	0					
ANR	1231159	Identifier	u		1230911	1					
ANR	1231160	Identifier	element		1230911	1					
ANR	1231161	Identifier	nillable		1230911	1					
ANR	1231162	CompoundStatement		23:6:1046:1100	1230911	1					
ANR	1231163	IdentifierDeclStatement	"xmlNodePtr dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) ) ;"	1398:6:46017:46071	1230911	0	True				
ANR	1231164	IdentifierDecl	"dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1230911	0					
ANR	1231165	IdentifierDeclType	xmlNodePtr		1230911	0					
ANR	1231166	Identifier	dummy		1230911	1					
ANR	1231167	AssignmentExpression	"dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1230911	2		=			
ANR	1231168	Identifier	dummy		1230911	0					
ANR	1231169	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1230911	1					
ANR	1231170	Callee	xmlNewNode		1230911	0					
ANR	1231171	Identifier	xmlNewNode		1230911	0					
ANR	1231172	ArgumentList	NULL		1230911	1					
ANR	1231173	Argument	NULL		1230911	0					
ANR	1231174	Identifier	NULL		1230911	0					
ANR	1231175	Argument	"BAD_CAST ( ""BOGUS"" )"		1230911	1					
ANR	1231176	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1230911	0					
ANR	1231177	Callee	BAD_CAST		1230911	0					
ANR	1231178	Identifier	BAD_CAST		1230911	0					
ANR	1231179	ArgumentList	"""BOGUS"""		1230911	1					
ANR	1231180	Argument	"""BOGUS"""		1230911	0					
ANR	1231181	PrimaryExpression	"""BOGUS"""		1230911	0					
ANR	1231182	ExpressionStatement	"xmlNodeSetContent ( dummy , BAD_CAST ( model -> u . element -> def ) )"	1399:6:46079:46136	1230911	1	True				
ANR	1231183	CallExpression	"xmlNodeSetContent ( dummy , BAD_CAST ( model -> u . element -> def ) )"		1230911	0					
ANR	1231184	Callee	xmlNodeSetContent		1230911	0					
ANR	1231185	Identifier	xmlNodeSetContent		1230911	0					
ANR	1231186	ArgumentList	dummy		1230911	1					
ANR	1231187	Argument	dummy		1230911	0					
ANR	1231188	Identifier	dummy		1230911	0					
ANR	1231189	Argument	BAD_CAST ( model -> u . element -> def )		1230911	1					
ANR	1231190	CallExpression	BAD_CAST ( model -> u . element -> def )		1230911	0					
ANR	1231191	Callee	BAD_CAST		1230911	0					
ANR	1231192	Identifier	BAD_CAST		1230911	0					
ANR	1231193	ArgumentList	model -> u . element -> def		1230911	1					
ANR	1231194	Argument	model -> u . element -> def		1230911	0					
ANR	1231195	PtrMemberAccess	model -> u . element -> def		1230911	0					
ANR	1231196	MemberAccess	model -> u . element		1230911	0					
ANR	1231197	PtrMemberAccess	model -> u		1230911	0					
ANR	1231198	Identifier	model		1230911	0					
ANR	1231199	Identifier	u		1230911	1					
ANR	1231200	Identifier	element		1230911	1					
ANR	1231201	Identifier	def		1230911	1					
ANR	1231202	Statement	val	1400:6:46144:46146	1230911	2	True				
ANR	1231203	Statement	=	1400:10:46148:46148	1230911	3	True				
ANR	1231204	Statement	master_to_zval	1400:12:46150:46163	1230911	4	True				
ANR	1231205	Statement	(	1400:26:46164:46164	1230911	5	True				
ANR	1231206	Statement	model	1400:27:46165:46169	1230911	6	True				
ANR	1231207	Statement	->	1400:32:46170:46171	1230911	7	True				
ANR	1231208	Statement	u	1400:34:46172:46172	1230911	8	True				
ANR	1231209	Statement	.	1400:35:46173:46173	1230911	9	True				
ANR	1231210	Statement	element	1400:36:46174:46180	1230911	10	True				
ANR	1231211	Statement	->	1400:43:46181:46182	1230911	11	True				
ANR	1231212	Statement	encode	1400:45:46183:46188	1230911	12	True				
ANR	1231213	Statement	","	1400:51:46189:46189	1230911	13	True				
ANR	1231214	Statement	dummy	1400:53:46191:46195	1230911	14	True				
ANR	1231215	Statement	TSRMLS_CC	1400:59:46197:46205	1230911	15	True				
ANR	1231216	Statement	)	1400:68:46206:46206	1230911	16	True				
ANR	1231217	ExpressionStatement		1400:69:46207:46207	1230911	17	True				
ANR	1231218	ExpressionStatement	xmlFreeNode ( dummy )	1401:6:46215:46233	1230911	18	True				
ANR	1231219	CallExpression	xmlFreeNode ( dummy )		1230911	0					
ANR	1231220	Callee	xmlFreeNode		1230911	0					
ANR	1231221	Identifier	xmlFreeNode		1230911	0					
ANR	1231222	ArgumentList	dummy		1230911	1					
ANR	1231223	Argument	dummy		1230911	0					
ANR	1231224	Identifier	dummy		1230911	0					
ANR	1231225	ElseStatement	else		1230911	0					
ANR	1231226	CompoundStatement		27:12:1276:1276	1230911	0					
ANR	1231227	Statement	val	1403:6:46255:46257	1230911	0	True				
ANR	1231228	Statement	=	1403:10:46259:46259	1230911	1	True				
ANR	1231229	Statement	master_to_zval	1403:12:46261:46274	1230911	2	True				
ANR	1231230	Statement	(	1403:26:46275:46275	1230911	3	True				
ANR	1231231	Statement	model	1403:27:46276:46280	1230911	4	True				
ANR	1231232	Statement	->	1403:32:46281:46282	1230911	5	True				
ANR	1231233	Statement	u	1403:34:46283:46283	1230911	6	True				
ANR	1231234	Statement	.	1403:35:46284:46284	1230911	7	True				
ANR	1231235	Statement	element	1403:36:46285:46291	1230911	8	True				
ANR	1231236	Statement	->	1403:43:46292:46293	1230911	9	True				
ANR	1231237	Statement	encode	1403:45:46294:46299	1230911	10	True				
ANR	1231238	Statement	","	1403:51:46300:46300	1230911	11	True				
ANR	1231239	Statement	r_node	1403:53:46302:46307	1230911	12	True				
ANR	1231240	Statement	TSRMLS_CC	1403:60:46309:46317	1230911	13	True				
ANR	1231241	Statement	)	1403:69:46318:46318	1230911	14	True				
ANR	1231242	ExpressionStatement		1403:70:46319:46319	1230911	15	True				
ANR	1231243	IfStatement	"if ( ( node = get_node ( node -> next , model -> u . element -> name ) ) != NULL )"		1230911	4					
ANR	1231244	Condition	"( node = get_node ( node -> next , model -> u . element -> name ) ) != NULL"	1405:9:46337:46397	1230911	0	True				
ANR	1231245	EqualityExpression	"( node = get_node ( node -> next , model -> u . element -> name ) ) != NULL"		1230911	0		!=			
ANR	1231246	AssignmentExpression	"node = get_node ( node -> next , model -> u . element -> name )"		1230911	0		=			
ANR	1231247	Identifier	node		1230911	0					
ANR	1231248	CallExpression	"get_node ( node -> next , model -> u . element -> name )"		1230911	1					
ANR	1231249	Callee	get_node		1230911	0					
ANR	1231250	Identifier	get_node		1230911	0					
ANR	1231251	ArgumentList	node -> next		1230911	1					
ANR	1231252	Argument	node -> next		1230911	0					
ANR	1231253	PtrMemberAccess	node -> next		1230911	0					
ANR	1231254	Identifier	node		1230911	0					
ANR	1231255	Identifier	next		1230911	1					
ANR	1231256	Argument	model -> u . element -> name		1230911	1					
ANR	1231257	PtrMemberAccess	model -> u . element -> name		1230911	0					
ANR	1231258	MemberAccess	model -> u . element		1230911	0					
ANR	1231259	PtrMemberAccess	model -> u		1230911	0					
ANR	1231260	Identifier	model		1230911	0					
ANR	1231261	Identifier	u		1230911	1					
ANR	1231262	Identifier	element		1230911	1					
ANR	1231263	Identifier	name		1230911	1					
ANR	1231264	Identifier	NULL		1230911	1					
ANR	1231265	CompoundStatement		31:6:1437:1448	1230911	1					
ANR	1231266	IdentifierDeclStatement	zval * array ;	1406:6:46408:46419	1230911	0	True				
ANR	1231267	IdentifierDecl	* array		1230911	0					
ANR	1231268	IdentifierDeclType	zval *		1230911	0					
ANR	1231269	Identifier	array		1230911	1					
ANR	1231270	ExpressionStatement	MAKE_STD_ZVAL ( array )	1408:6:46428:46448	1230911	1	True				
ANR	1231271	CallExpression	MAKE_STD_ZVAL ( array )		1230911	0					
ANR	1231272	Callee	MAKE_STD_ZVAL		1230911	0					
ANR	1231273	Identifier	MAKE_STD_ZVAL		1230911	0					
ANR	1231274	ArgumentList	array		1230911	1					
ANR	1231275	Argument	array		1230911	0					
ANR	1231276	Identifier	array		1230911	0					
ANR	1231277	ExpressionStatement	array_init ( array )	1409:6:46456:46473	1230911	2	True				
ANR	1231278	CallExpression	array_init ( array )		1230911	0					
ANR	1231279	Callee	array_init		1230911	0					
ANR	1231280	Identifier	array_init		1230911	0					
ANR	1231281	ArgumentList	array		1230911	1					
ANR	1231282	Argument	array		1230911	0					
ANR	1231283	Identifier	array		1230911	0					
ANR	1231284	ExpressionStatement	"add_next_index_zval ( array , val )"	1410:6:46481:46512	1230911	3	True				
ANR	1231285	CallExpression	"add_next_index_zval ( array , val )"		1230911	0					
ANR	1231286	Callee	add_next_index_zval		1230911	0					
ANR	1231287	Identifier	add_next_index_zval		1230911	0					
ANR	1231288	ArgumentList	array		1230911	1					
ANR	1231289	Argument	array		1230911	0					
ANR	1231290	Identifier	array		1230911	0					
ANR	1231291	Argument	val		1230911	1					
ANR	1231292	Identifier	val		1230911	0					
ANR	1231293	DoStatement	do		1230911	4					
ANR	1231294	CompoundStatement		36:9:1552:1552	1230911	0					
ANR	1231295	IfStatement	if ( node && node -> children && node -> children -> content )		1230911	0					
ANR	1231296	Condition	node && node -> children && node -> children -> content	1412:11:46536:46584	1230911	0	True				
ANR	1231297	AndExpression	node && node -> children && node -> children -> content		1230911	0		&&			
ANR	1231298	Identifier	node		1230911	0					
ANR	1231299	AndExpression	node -> children && node -> children -> content		1230911	1		&&			
ANR	1231300	PtrMemberAccess	node -> children		1230911	0					
ANR	1231301	Identifier	node		1230911	0					
ANR	1231302	Identifier	children		1230911	1					
ANR	1231303	PtrMemberAccess	node -> children -> content		1230911	1					
ANR	1231304	PtrMemberAccess	node -> children		1230911	0					
ANR	1231305	Identifier	node		1230911	0					
ANR	1231306	Identifier	children		1230911	1					
ANR	1231307	Identifier	content		1230911	1					
ANR	1231308	CompoundStatement		37:62:1616:1616	1230911	1					
ANR	1231309	IfStatement	"if ( model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) node -> children -> content ) != 0 )"		1230911	0					
ANR	1231310	Condition	"model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) node -> children -> content ) != 0"	1413:12:46601:46695	1230911	0	True				
ANR	1231311	AndExpression	"model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) node -> children -> content ) != 0"		1230911	0		&&			
ANR	1231312	PtrMemberAccess	model -> u . element -> fixed		1230911	0					
ANR	1231313	MemberAccess	model -> u . element		1230911	0					
ANR	1231314	PtrMemberAccess	model -> u		1230911	0					
ANR	1231315	Identifier	model		1230911	0					
ANR	1231316	Identifier	u		1230911	1					
ANR	1231317	Identifier	element		1230911	1					
ANR	1231318	Identifier	fixed		1230911	1					
ANR	1231319	EqualityExpression	"strcmp ( model -> u . element -> fixed , ( char * ) node -> children -> content ) != 0"		1230911	1		!=			
ANR	1231320	CallExpression	"strcmp ( model -> u . element -> fixed , ( char * ) node -> children -> content )"		1230911	0					
ANR	1231321	Callee	strcmp		1230911	0					
ANR	1231322	Identifier	strcmp		1230911	0					
ANR	1231323	ArgumentList	model -> u . element -> fixed		1230911	1					
ANR	1231324	Argument	model -> u . element -> fixed		1230911	0					
ANR	1231325	PtrMemberAccess	model -> u . element -> fixed		1230911	0					
ANR	1231326	MemberAccess	model -> u . element		1230911	0					
ANR	1231327	PtrMemberAccess	model -> u		1230911	0					
ANR	1231328	Identifier	model		1230911	0					
ANR	1231329	Identifier	u		1230911	1					
ANR	1231330	Identifier	element		1230911	1					
ANR	1231331	Identifier	fixed		1230911	1					
ANR	1231332	Argument	( char * ) node -> children -> content		1230911	1					
ANR	1231333	CastExpression	( char * ) node -> children -> content		1230911	0					
ANR	1231334	CastTarget	char *		1230911	0					
ANR	1231335	PtrMemberAccess	node -> children -> content		1230911	1					
ANR	1231336	PtrMemberAccess	node -> children		1230911	0					
ANR	1231337	Identifier	node		1230911	0					
ANR	1231338	Identifier	children		1230911	1					
ANR	1231339	Identifier	content		1230911	1					
ANR	1231340	PrimaryExpression	0		1230911	1					
ANR	1231341	CompoundStatement		38:109:1727:1727	1230911	1					
ANR	1231342	ExpressionStatement	"soap_error3 ( E_ERROR , ""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"" , model -> u . element -> name , model -> u . element -> fixed , node -> children -> content )"	1414:9:46709:46878	1230911	0	True				
ANR	1231343	CallExpression	"soap_error3 ( E_ERROR , ""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"" , model -> u . element -> name , model -> u . element -> fixed , node -> children -> content )"		1230911	0					
ANR	1231344	Callee	soap_error3		1230911	0					
ANR	1231345	Identifier	soap_error3		1230911	0					
ANR	1231346	ArgumentList	E_ERROR		1230911	1					
ANR	1231347	Argument	E_ERROR		1230911	0					
ANR	1231348	Identifier	E_ERROR		1230911	0					
ANR	1231349	Argument	"""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"""		1230911	1					
ANR	1231350	PrimaryExpression	"""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"""		1230911	0					
ANR	1231351	Argument	model -> u . element -> name		1230911	2					
ANR	1231352	PtrMemberAccess	model -> u . element -> name		1230911	0					
ANR	1231353	MemberAccess	model -> u . element		1230911	0					
ANR	1231354	PtrMemberAccess	model -> u		1230911	0					
ANR	1231355	Identifier	model		1230911	0					
ANR	1231356	Identifier	u		1230911	1					
ANR	1231357	Identifier	element		1230911	1					
ANR	1231358	Identifier	name		1230911	1					
ANR	1231359	Argument	model -> u . element -> fixed		1230911	3					
ANR	1231360	PtrMemberAccess	model -> u . element -> fixed		1230911	0					
ANR	1231361	MemberAccess	model -> u . element		1230911	0					
ANR	1231362	PtrMemberAccess	model -> u		1230911	0					
ANR	1231363	Identifier	model		1230911	0					
ANR	1231364	Identifier	u		1230911	1					
ANR	1231365	Identifier	element		1230911	1					
ANR	1231366	Identifier	fixed		1230911	1					
ANR	1231367	Argument	node -> children -> content		1230911	4					
ANR	1231368	PtrMemberAccess	node -> children -> content		1230911	0					
ANR	1231369	PtrMemberAccess	node -> children		1230911	0					
ANR	1231370	Identifier	node		1230911	0					
ANR	1231371	Identifier	children		1230911	1					
ANR	1231372	Identifier	content		1230911	1					
ANR	1231373	Statement	val	1416:8:46898:46900	1230911	1	True				
ANR	1231374	Statement	=	1416:12:46902:46902	1230911	2	True				
ANR	1231375	Statement	master_to_zval	1416:14:46904:46917	1230911	3	True				
ANR	1231376	Statement	(	1416:28:46918:46918	1230911	4	True				
ANR	1231377	Statement	model	1416:29:46919:46923	1230911	5	True				
ANR	1231378	Statement	->	1416:34:46924:46925	1230911	6	True				
ANR	1231379	Statement	u	1416:36:46926:46926	1230911	7	True				
ANR	1231380	Statement	.	1416:37:46927:46927	1230911	8	True				
ANR	1231381	Statement	element	1416:38:46928:46934	1230911	9	True				
ANR	1231382	Statement	->	1416:45:46935:46936	1230911	10	True				
ANR	1231383	Statement	encode	1416:47:46937:46942	1230911	11	True				
ANR	1231384	Statement	","	1416:53:46943:46943	1230911	12	True				
ANR	1231385	Statement	node	1416:55:46945:46948	1230911	13	True				
ANR	1231386	Statement	TSRMLS_CC	1416:60:46950:46958	1230911	14	True				
ANR	1231387	Statement	)	1416:69:46959:46959	1230911	15	True				
ANR	1231388	ExpressionStatement		1416:70:46960:46960	1230911	16	True				
ANR	1231389	ElseStatement	else		1230911	0					
ANR	1231390	IfStatement	if ( model -> u . element -> fixed )		1230911	0					
ANR	1231391	Condition	model -> u . element -> fixed	1417:18:46980:47002	1230911	0	True				
ANR	1231392	PtrMemberAccess	model -> u . element -> fixed		1230911	0					
ANR	1231393	MemberAccess	model -> u . element		1230911	0					
ANR	1231394	PtrMemberAccess	model -> u		1230911	0					
ANR	1231395	Identifier	model		1230911	0					
ANR	1231396	Identifier	u		1230911	1					
ANR	1231397	Identifier	element		1230911	1					
ANR	1231398	Identifier	fixed		1230911	1					
ANR	1231399	CompoundStatement		43:8:2044:2098	1230911	1					
ANR	1231400	IdentifierDeclStatement	"xmlNodePtr dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) ) ;"	1418:8:47015:47069	1230911	0	True				
ANR	1231401	IdentifierDecl	"dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1230911	0					
ANR	1231402	IdentifierDeclType	xmlNodePtr		1230911	0					
ANR	1231403	Identifier	dummy		1230911	1					
ANR	1231404	AssignmentExpression	"dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1230911	2		=			
ANR	1231405	Identifier	dummy		1230911	0					
ANR	1231406	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1230911	1					
ANR	1231407	Callee	xmlNewNode		1230911	0					
ANR	1231408	Identifier	xmlNewNode		1230911	0					
ANR	1231409	ArgumentList	NULL		1230911	1					
ANR	1231410	Argument	NULL		1230911	0					
ANR	1231411	Identifier	NULL		1230911	0					
ANR	1231412	Argument	"BAD_CAST ( ""BOGUS"" )"		1230911	1					
ANR	1231413	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1230911	0					
ANR	1231414	Callee	BAD_CAST		1230911	0					
ANR	1231415	Identifier	BAD_CAST		1230911	0					
ANR	1231416	ArgumentList	"""BOGUS"""		1230911	1					
ANR	1231417	Argument	"""BOGUS"""		1230911	0					
ANR	1231418	PrimaryExpression	"""BOGUS"""		1230911	0					
ANR	1231419	ExpressionStatement	"xmlNodeSetContent ( dummy , BAD_CAST ( model -> u . element -> fixed ) )"	1419:8:47079:47138	1230911	1	True				
ANR	1231420	CallExpression	"xmlNodeSetContent ( dummy , BAD_CAST ( model -> u . element -> fixed ) )"		1230911	0					
ANR	1231421	Callee	xmlNodeSetContent		1230911	0					
ANR	1231422	Identifier	xmlNodeSetContent		1230911	0					
ANR	1231423	ArgumentList	dummy		1230911	1					
ANR	1231424	Argument	dummy		1230911	0					
ANR	1231425	Identifier	dummy		1230911	0					
ANR	1231426	Argument	BAD_CAST ( model -> u . element -> fixed )		1230911	1					
ANR	1231427	CallExpression	BAD_CAST ( model -> u . element -> fixed )		1230911	0					
ANR	1231428	Callee	BAD_CAST		1230911	0					
ANR	1231429	Identifier	BAD_CAST		1230911	0					
ANR	1231430	ArgumentList	model -> u . element -> fixed		1230911	1					
ANR	1231431	Argument	model -> u . element -> fixed		1230911	0					
ANR	1231432	PtrMemberAccess	model -> u . element -> fixed		1230911	0					
ANR	1231433	MemberAccess	model -> u . element		1230911	0					
ANR	1231434	PtrMemberAccess	model -> u		1230911	0					
ANR	1231435	Identifier	model		1230911	0					
ANR	1231436	Identifier	u		1230911	1					
ANR	1231437	Identifier	element		1230911	1					
ANR	1231438	Identifier	fixed		1230911	1					
ANR	1231439	Statement	val	1420:8:47148:47150	1230911	2	True				
ANR	1231440	Statement	=	1420:12:47152:47152	1230911	3	True				
ANR	1231441	Statement	master_to_zval	1420:14:47154:47167	1230911	4	True				
ANR	1231442	Statement	(	1420:28:47168:47168	1230911	5	True				
ANR	1231443	Statement	model	1420:29:47169:47173	1230911	6	True				
ANR	1231444	Statement	->	1420:34:47174:47175	1230911	7	True				
ANR	1231445	Statement	u	1420:36:47176:47176	1230911	8	True				
ANR	1231446	Statement	.	1420:37:47177:47177	1230911	9	True				
ANR	1231447	Statement	element	1420:38:47178:47184	1230911	10	True				
ANR	1231448	Statement	->	1420:45:47185:47186	1230911	11	True				
ANR	1231449	Statement	encode	1420:47:47187:47192	1230911	12	True				
ANR	1231450	Statement	","	1420:53:47193:47193	1230911	13	True				
ANR	1231451	Statement	dummy	1420:55:47195:47199	1230911	14	True				
ANR	1231452	Statement	TSRMLS_CC	1420:61:47201:47209	1230911	15	True				
ANR	1231453	Statement	)	1420:70:47210:47210	1230911	16	True				
ANR	1231454	ExpressionStatement		1420:71:47211:47211	1230911	17	True				
ANR	1231455	ExpressionStatement	xmlFreeNode ( dummy )	1421:8:47221:47239	1230911	18	True				
ANR	1231456	CallExpression	xmlFreeNode ( dummy )		1230911	0					
ANR	1231457	Callee	xmlFreeNode		1230911	0					
ANR	1231458	Identifier	xmlFreeNode		1230911	0					
ANR	1231459	ArgumentList	dummy		1230911	1					
ANR	1231460	Argument	dummy		1230911	0					
ANR	1231461	Identifier	dummy		1230911	0					
ANR	1231462	ElseStatement	else		1230911	0					
ANR	1231463	IfStatement	if ( model -> u . element -> def && ! model -> u . element -> nillable )		1230911	0					
ANR	1231464	Condition	model -> u . element -> def && ! model -> u . element -> nillable	1422:18:47259:47310	1230911	0	True				
ANR	1231465	AndExpression	model -> u . element -> def && ! model -> u . element -> nillable		1230911	0		&&			
ANR	1231466	PtrMemberAccess	model -> u . element -> def		1230911	0					
ANR	1231467	MemberAccess	model -> u . element		1230911	0					
ANR	1231468	PtrMemberAccess	model -> u		1230911	0					
ANR	1231469	Identifier	model		1230911	0					
ANR	1231470	Identifier	u		1230911	1					
ANR	1231471	Identifier	element		1230911	1					
ANR	1231472	Identifier	def		1230911	1					
ANR	1231473	UnaryOperationExpression	! model -> u . element -> nillable		1230911	1					
ANR	1231474	UnaryOperator	!		1230911	0					
ANR	1231475	PtrMemberAccess	model -> u . element -> nillable		1230911	1					
ANR	1231476	MemberAccess	model -> u . element		1230911	0					
ANR	1231477	PtrMemberAccess	model -> u		1230911	0					
ANR	1231478	Identifier	model		1230911	0					
ANR	1231479	Identifier	u		1230911	1					
ANR	1231480	Identifier	element		1230911	1					
ANR	1231481	Identifier	nillable		1230911	1					
ANR	1231482	CompoundStatement		48:8:2352:2406	1230911	1					
ANR	1231483	IdentifierDeclStatement	"xmlNodePtr dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) ) ;"	1423:8:47323:47377	1230911	0	True				
ANR	1231484	IdentifierDecl	"dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1230911	0					
ANR	1231485	IdentifierDeclType	xmlNodePtr		1230911	0					
ANR	1231486	Identifier	dummy		1230911	1					
ANR	1231487	AssignmentExpression	"dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1230911	2		=			
ANR	1231488	Identifier	dummy		1230911	0					
ANR	1231489	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1230911	1					
ANR	1231490	Callee	xmlNewNode		1230911	0					
ANR	1231491	Identifier	xmlNewNode		1230911	0					
ANR	1231492	ArgumentList	NULL		1230911	1					
ANR	1231493	Argument	NULL		1230911	0					
ANR	1231494	Identifier	NULL		1230911	0					
ANR	1231495	Argument	"BAD_CAST ( ""BOGUS"" )"		1230911	1					
ANR	1231496	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1230911	0					
ANR	1231497	Callee	BAD_CAST		1230911	0					
ANR	1231498	Identifier	BAD_CAST		1230911	0					
ANR	1231499	ArgumentList	"""BOGUS"""		1230911	1					
ANR	1231500	Argument	"""BOGUS"""		1230911	0					
ANR	1231501	PrimaryExpression	"""BOGUS"""		1230911	0					
ANR	1231502	ExpressionStatement	"xmlNodeSetContent ( dummy , BAD_CAST ( model -> u . element -> def ) )"	1424:8:47387:47444	1230911	1	True				
ANR	1231503	CallExpression	"xmlNodeSetContent ( dummy , BAD_CAST ( model -> u . element -> def ) )"		1230911	0					
ANR	1231504	Callee	xmlNodeSetContent		1230911	0					
ANR	1231505	Identifier	xmlNodeSetContent		1230911	0					
ANR	1231506	ArgumentList	dummy		1230911	1					
ANR	1231507	Argument	dummy		1230911	0					
ANR	1231508	Identifier	dummy		1230911	0					
ANR	1231509	Argument	BAD_CAST ( model -> u . element -> def )		1230911	1					
ANR	1231510	CallExpression	BAD_CAST ( model -> u . element -> def )		1230911	0					
ANR	1231511	Callee	BAD_CAST		1230911	0					
ANR	1231512	Identifier	BAD_CAST		1230911	0					
ANR	1231513	ArgumentList	model -> u . element -> def		1230911	1					
ANR	1231514	Argument	model -> u . element -> def		1230911	0					
ANR	1231515	PtrMemberAccess	model -> u . element -> def		1230911	0					
ANR	1231516	MemberAccess	model -> u . element		1230911	0					
ANR	1231517	PtrMemberAccess	model -> u		1230911	0					
ANR	1231518	Identifier	model		1230911	0					
ANR	1231519	Identifier	u		1230911	1					
ANR	1231520	Identifier	element		1230911	1					
ANR	1231521	Identifier	def		1230911	1					
ANR	1231522	Statement	val	1425:8:47454:47456	1230911	2	True				
ANR	1231523	Statement	=	1425:12:47458:47458	1230911	3	True				
ANR	1231524	Statement	master_to_zval	1425:14:47460:47473	1230911	4	True				
ANR	1231525	Statement	(	1425:28:47474:47474	1230911	5	True				
ANR	1231526	Statement	model	1425:29:47475:47479	1230911	6	True				
ANR	1231527	Statement	->	1425:34:47480:47481	1230911	7	True				
ANR	1231528	Statement	u	1425:36:47482:47482	1230911	8	True				
ANR	1231529	Statement	.	1425:37:47483:47483	1230911	9	True				
ANR	1231530	Statement	element	1425:38:47484:47490	1230911	10	True				
ANR	1231531	Statement	->	1425:45:47491:47492	1230911	11	True				
ANR	1231532	Statement	encode	1425:47:47493:47498	1230911	12	True				
ANR	1231533	Statement	","	1425:53:47499:47499	1230911	13	True				
ANR	1231534	Statement	dummy	1425:55:47501:47505	1230911	14	True				
ANR	1231535	Statement	TSRMLS_CC	1425:61:47507:47515	1230911	15	True				
ANR	1231536	Statement	)	1425:70:47516:47516	1230911	16	True				
ANR	1231537	ExpressionStatement		1425:71:47517:47517	1230911	17	True				
ANR	1231538	ExpressionStatement	xmlFreeNode ( dummy )	1426:8:47527:47545	1230911	18	True				
ANR	1231539	CallExpression	xmlFreeNode ( dummy )		1230911	0					
ANR	1231540	Callee	xmlFreeNode		1230911	0					
ANR	1231541	Identifier	xmlFreeNode		1230911	0					
ANR	1231542	ArgumentList	dummy		1230911	1					
ANR	1231543	Argument	dummy		1230911	0					
ANR	1231544	Identifier	dummy		1230911	0					
ANR	1231545	ElseStatement	else		1230911	0					
ANR	1231546	CompoundStatement		52:14:2590:2590	1230911	0					
ANR	1231547	Statement	val	1428:8:47571:47573	1230911	0	True				
ANR	1231548	Statement	=	1428:12:47575:47575	1230911	1	True				
ANR	1231549	Statement	master_to_zval	1428:14:47577:47590	1230911	2	True				
ANR	1231550	Statement	(	1428:28:47591:47591	1230911	3	True				
ANR	1231551	Statement	model	1428:29:47592:47596	1230911	4	True				
ANR	1231552	Statement	->	1428:34:47597:47598	1230911	5	True				
ANR	1231553	Statement	u	1428:36:47599:47599	1230911	6	True				
ANR	1231554	Statement	.	1428:37:47600:47600	1230911	7	True				
ANR	1231555	Statement	element	1428:38:47601:47607	1230911	8	True				
ANR	1231556	Statement	->	1428:45:47608:47609	1230911	9	True				
ANR	1231557	Statement	encode	1428:47:47610:47615	1230911	10	True				
ANR	1231558	Statement	","	1428:53:47616:47616	1230911	11	True				
ANR	1231559	Statement	node	1428:55:47618:47621	1230911	12	True				
ANR	1231560	Statement	TSRMLS_CC	1428:60:47623:47631	1230911	13	True				
ANR	1231561	Statement	)	1428:69:47632:47632	1230911	14	True				
ANR	1231562	ExpressionStatement		1428:70:47633:47633	1230911	15	True				
ANR	1231563	ExpressionStatement	"add_next_index_zval ( array , val )"	1430:7:47651:47682	1230911	1	True				
ANR	1231564	CallExpression	"add_next_index_zval ( array , val )"		1230911	0					
ANR	1231565	Callee	add_next_index_zval		1230911	0					
ANR	1231566	Identifier	add_next_index_zval		1230911	0					
ANR	1231567	ArgumentList	array		1230911	1					
ANR	1231568	Argument	array		1230911	0					
ANR	1231569	Identifier	array		1230911	0					
ANR	1231570	Argument	val		1230911	1					
ANR	1231571	Identifier	val		1230911	0					
ANR	1231572	Condition	"( node = get_node ( node -> next , model -> u . element -> name ) ) != NULL"	1431:15:47699:47759	1230911	1	True				
ANR	1231573	EqualityExpression	"( node = get_node ( node -> next , model -> u . element -> name ) ) != NULL"		1230911	0		!=			
ANR	1231574	AssignmentExpression	"node = get_node ( node -> next , model -> u . element -> name )"		1230911	0		=			
ANR	1231575	Identifier	node		1230911	0					
ANR	1231576	CallExpression	"get_node ( node -> next , model -> u . element -> name )"		1230911	1					
ANR	1231577	Callee	get_node		1230911	0					
ANR	1231578	Identifier	get_node		1230911	0					
ANR	1231579	ArgumentList	node -> next		1230911	1					
ANR	1231580	Argument	node -> next		1230911	0					
ANR	1231581	PtrMemberAccess	node -> next		1230911	0					
ANR	1231582	Identifier	node		1230911	0					
ANR	1231583	Identifier	next		1230911	1					
ANR	1231584	Argument	model -> u . element -> name		1230911	1					
ANR	1231585	PtrMemberAccess	model -> u . element -> name		1230911	0					
ANR	1231586	MemberAccess	model -> u . element		1230911	0					
ANR	1231587	PtrMemberAccess	model -> u		1230911	0					
ANR	1231588	Identifier	model		1230911	0					
ANR	1231589	Identifier	u		1230911	1					
ANR	1231590	Identifier	element		1230911	1					
ANR	1231591	Identifier	name		1230911	1					
ANR	1231592	Identifier	NULL		1230911	1					
ANR	1231593	ExpressionStatement	val = array	1432:6:47769:47780	1230911	5	True				
ANR	1231594	AssignmentExpression	val = array		1230911	0		=			
ANR	1231595	Identifier	val		1230911	0					
ANR	1231596	Identifier	array		1230911	1					
ANR	1231597	ElseStatement	else		1230911	0					
ANR	1231598	IfStatement	if ( ( Z_TYPE_P ( val ) != IS_NULL || ! model -> u . element -> nillable ) && ( SOAP_GLOBAL ( features ) & SOAP_SINGLE_ELEMENT_ARRAYS ) && ( model -> max_occurs == - 1 || model -> max_occurs > 1 ) )		1230911	0					
ANR	1231599	Condition	( Z_TYPE_P ( val ) != IS_NULL || ! model -> u . element -> nillable ) && ( SOAP_GLOBAL ( features ) & SOAP_SINGLE_ELEMENT_ARRAYS ) && ( model -> max_occurs == - 1 || model -> max_occurs > 1 )	1433:16:47798:47996	1230911	0	True				
ANR	1231600	AndExpression	( Z_TYPE_P ( val ) != IS_NULL || ! model -> u . element -> nillable ) && ( SOAP_GLOBAL ( features ) & SOAP_SINGLE_ELEMENT_ARRAYS ) && ( model -> max_occurs == - 1 || model -> max_occurs > 1 )		1230911	0		&&			
ANR	1231601	OrExpression	Z_TYPE_P ( val ) != IS_NULL || ! model -> u . element -> nillable		1230911	0		||			
ANR	1231602	EqualityExpression	Z_TYPE_P ( val ) != IS_NULL		1230911	0		!=			
ANR	1231603	CallExpression	Z_TYPE_P ( val )		1230911	0					
ANR	1231604	Callee	Z_TYPE_P		1230911	0					
ANR	1231605	Identifier	Z_TYPE_P		1230911	0					
ANR	1231606	ArgumentList	val		1230911	1					
ANR	1231607	Argument	val		1230911	0					
ANR	1231608	Identifier	val		1230911	0					
ANR	1231609	Identifier	IS_NULL		1230911	1					
ANR	1231610	UnaryOperationExpression	! model -> u . element -> nillable		1230911	1					
ANR	1231611	UnaryOperator	!		1230911	0					
ANR	1231612	PtrMemberAccess	model -> u . element -> nillable		1230911	1					
ANR	1231613	MemberAccess	model -> u . element		1230911	0					
ANR	1231614	PtrMemberAccess	model -> u		1230911	0					
ANR	1231615	Identifier	model		1230911	0					
ANR	1231616	Identifier	u		1230911	1					
ANR	1231617	Identifier	element		1230911	1					
ANR	1231618	Identifier	nillable		1230911	1					
ANR	1231619	AndExpression	( SOAP_GLOBAL ( features ) & SOAP_SINGLE_ELEMENT_ARRAYS ) && ( model -> max_occurs == - 1 || model -> max_occurs > 1 )		1230911	1		&&			
ANR	1231620	BitAndExpression	SOAP_GLOBAL ( features ) & SOAP_SINGLE_ELEMENT_ARRAYS		1230911	0		&			
ANR	1231621	CallExpression	SOAP_GLOBAL ( features )		1230911	0					
ANR	1231622	Callee	SOAP_GLOBAL		1230911	0					
ANR	1231623	Identifier	SOAP_GLOBAL		1230911	0					
ANR	1231624	ArgumentList	features		1230911	1					
ANR	1231625	Argument	features		1230911	0					
ANR	1231626	Identifier	features		1230911	0					
ANR	1231627	Identifier	SOAP_SINGLE_ELEMENT_ARRAYS		1230911	1					
ANR	1231628	OrExpression	model -> max_occurs == - 1 || model -> max_occurs > 1		1230911	1		||			
ANR	1231629	EqualityExpression	model -> max_occurs == - 1		1230911	0		==			
ANR	1231630	PtrMemberAccess	model -> max_occurs		1230911	0					
ANR	1231631	Identifier	model		1230911	0					
ANR	1231632	Identifier	max_occurs		1230911	1					
ANR	1231633	UnaryOperationExpression	- 1		1230911	1					
ANR	1231634	UnaryOperator	-		1230911	0					
ANR	1231635	PrimaryExpression	1		1230911	1					
ANR	1231636	RelationalExpression	model -> max_occurs > 1		1230911	1		>			
ANR	1231637	PtrMemberAccess	model -> max_occurs		1230911	0					
ANR	1231638	Identifier	model		1230911	0					
ANR	1231639	Identifier	max_occurs		1230911	1					
ANR	1231640	PrimaryExpression	1		1230911	1					
ANR	1231641	CompoundStatement		61:6:3036:3047	1230911	1					
ANR	1231642	IdentifierDeclStatement	zval * array ;	1436:6:48007:48018	1230911	0	True				
ANR	1231643	IdentifierDecl	* array		1230911	0					
ANR	1231644	IdentifierDeclType	zval *		1230911	0					
ANR	1231645	Identifier	array		1230911	1					
ANR	1231646	ExpressionStatement	MAKE_STD_ZVAL ( array )	1438:6:48027:48047	1230911	1	True				
ANR	1231647	CallExpression	MAKE_STD_ZVAL ( array )		1230911	0					
ANR	1231648	Callee	MAKE_STD_ZVAL		1230911	0					
ANR	1231649	Identifier	MAKE_STD_ZVAL		1230911	0					
ANR	1231650	ArgumentList	array		1230911	1					
ANR	1231651	Argument	array		1230911	0					
ANR	1231652	Identifier	array		1230911	0					
ANR	1231653	ExpressionStatement	array_init ( array )	1439:6:48055:48072	1230911	2	True				
ANR	1231654	CallExpression	array_init ( array )		1230911	0					
ANR	1231655	Callee	array_init		1230911	0					
ANR	1231656	Identifier	array_init		1230911	0					
ANR	1231657	ArgumentList	array		1230911	1					
ANR	1231658	Argument	array		1230911	0					
ANR	1231659	Identifier	array		1230911	0					
ANR	1231660	ExpressionStatement	"add_next_index_zval ( array , val )"	1440:6:48080:48111	1230911	3	True				
ANR	1231661	CallExpression	"add_next_index_zval ( array , val )"		1230911	0					
ANR	1231662	Callee	add_next_index_zval		1230911	0					
ANR	1231663	Identifier	add_next_index_zval		1230911	0					
ANR	1231664	ArgumentList	array		1230911	1					
ANR	1231665	Argument	array		1230911	0					
ANR	1231666	Identifier	array		1230911	0					
ANR	1231667	Argument	val		1230911	1					
ANR	1231668	Identifier	val		1230911	0					
ANR	1231669	ExpressionStatement	val = array	1441:6:48119:48130	1230911	4	True				
ANR	1231670	AssignmentExpression	val = array		1230911	0		=			
ANR	1231671	Identifier	val		1230911	0					
ANR	1231672	Identifier	array		1230911	1					
ANR	1231673	Statement	set_zval_property	1443:5:48144:48160	1230911	5	True				
ANR	1231674	Statement	(	1443:22:48161:48161	1230911	6	True				
ANR	1231675	Statement	ret	1443:23:48162:48164	1230911	7	True				
ANR	1231676	Statement	","	1443:26:48165:48165	1230911	8	True				
ANR	1231677	Statement	model	1443:28:48167:48171	1230911	9	True				
ANR	1231678	Statement	->	1443:33:48172:48173	1230911	10	True				
ANR	1231679	Statement	u	1443:35:48174:48174	1230911	11	True				
ANR	1231680	Statement	.	1443:36:48175:48175	1230911	12	True				
ANR	1231681	Statement	element	1443:37:48176:48182	1230911	13	True				
ANR	1231682	Statement	->	1443:44:48183:48184	1230911	14	True				
ANR	1231683	Statement	name	1443:46:48185:48188	1230911	15	True				
ANR	1231684	Statement	","	1443:50:48189:48189	1230911	16	True				
ANR	1231685	Statement	val	1443:52:48191:48193	1230911	17	True				
ANR	1231686	Statement	TSRMLS_CC	1443:56:48195:48203	1230911	18	True				
ANR	1231687	Statement	)	1443:65:48204:48204	1230911	19	True				
ANR	1231688	ExpressionStatement		1443:66:48205:48205	1230911	20	True				
ANR	1231689	BreakStatement	break ;	1446:3:48221:48226	1230911	2	True				
ANR	1231690	Label	case XSD_CONTENT_ALL :	1447:2:48230:48250	1230911	3	True				
ANR	1231691	Identifier	XSD_CONTENT_ALL		1230911	0					
ANR	1231692	Label	case XSD_CONTENT_SEQUENCE :	1448:2:48254:48279	1230911	4	True				
ANR	1231693	Identifier	XSD_CONTENT_SEQUENCE		1230911	0					
ANR	1231694	Label	case XSD_CONTENT_CHOICE :	1449:2:48283:48306	1230911	5	True				
ANR	1231695	Identifier	XSD_CONTENT_CHOICE		1230911	0					
ANR	1231696	CompoundStatement		77:3:3391:3420	1230911	6					
ANR	1231697	IdentifierDeclStatement	sdlContentModelPtr * tmp ;	1450:3:48313:48336	1230911	0	True				
ANR	1231698	IdentifierDecl	* tmp		1230911	0					
ANR	1231699	IdentifierDeclType	sdlContentModelPtr *		1230911	0					
ANR	1231700	Identifier	tmp		1230911	1					
ANR	1231701	IdentifierDeclStatement	HashPosition pos ;	1451:3:48341:48357	1230911	1	True				
ANR	1231702	IdentifierDecl	pos		1230911	0					
ANR	1231703	IdentifierDeclType	HashPosition		1230911	0					
ANR	1231704	Identifier	pos		1230911	1					
ANR	1231705	IdentifierDeclStatement	sdlContentModelPtr any = NULL ;	1452:3:48362:48391	1230911	2	True				
ANR	1231706	IdentifierDecl	any = NULL		1230911	0					
ANR	1231707	IdentifierDeclType	sdlContentModelPtr		1230911	0					
ANR	1231708	Identifier	any		1230911	1					
ANR	1231709	AssignmentExpression	any = NULL		1230911	2		=			
ANR	1231710	Identifier	NULL		1230911	0					
ANR	1231711	Identifier	NULL		1230911	1					
ANR	1231712	ExpressionStatement	"zend_hash_internal_pointer_reset_ex ( model -> u . content , & pos )"	1454:3:48397:48456	1230911	3	True				
ANR	1231713	CallExpression	"zend_hash_internal_pointer_reset_ex ( model -> u . content , & pos )"		1230911	0					
ANR	1231714	Callee	zend_hash_internal_pointer_reset_ex		1230911	0					
ANR	1231715	Identifier	zend_hash_internal_pointer_reset_ex		1230911	0					
ANR	1231716	ArgumentList	model -> u . content		1230911	1					
ANR	1231717	Argument	model -> u . content		1230911	0					
ANR	1231718	MemberAccess	model -> u . content		1230911	0					
ANR	1231719	PtrMemberAccess	model -> u		1230911	0					
ANR	1231720	Identifier	model		1230911	0					
ANR	1231721	Identifier	u		1230911	1					
ANR	1231722	Identifier	content		1230911	1					
ANR	1231723	Argument	& pos		1230911	1					
ANR	1231724	UnaryOperationExpression	& pos		1230911	0					
ANR	1231725	UnaryOperator	&		1230911	0					
ANR	1231726	Identifier	pos		1230911	1					
ANR	1231727	WhileStatement	"while ( zend_hash_get_current_data_ex ( model -> u . content , ( void * * ) & tmp , & pos ) == SUCCESS )"		1230911	4					
ANR	1231728	Condition	"zend_hash_get_current_data_ex ( model -> u . content , ( void * * ) & tmp , & pos ) == SUCCESS"	1455:10:48468:48545	1230911	0	True				
ANR	1231729	EqualityExpression	"zend_hash_get_current_data_ex ( model -> u . content , ( void * * ) & tmp , & pos ) == SUCCESS"		1230911	0		==			
ANR	1231730	CallExpression	"zend_hash_get_current_data_ex ( model -> u . content , ( void * * ) & tmp , & pos )"		1230911	0					
ANR	1231731	Callee	zend_hash_get_current_data_ex		1230911	0					
ANR	1231732	Identifier	zend_hash_get_current_data_ex		1230911	0					
ANR	1231733	ArgumentList	model -> u . content		1230911	1					
ANR	1231734	Argument	model -> u . content		1230911	0					
ANR	1231735	MemberAccess	model -> u . content		1230911	0					
ANR	1231736	PtrMemberAccess	model -> u		1230911	0					
ANR	1231737	Identifier	model		1230911	0					
ANR	1231738	Identifier	u		1230911	1					
ANR	1231739	Identifier	content		1230911	1					
ANR	1231740	Argument	( void * * ) & tmp		1230911	1					
ANR	1231741	CastExpression	( void * * ) & tmp		1230911	0					
ANR	1231742	CastTarget	void * *		1230911	0					
ANR	1231743	UnaryOperationExpression	& tmp		1230911	1					
ANR	1231744	UnaryOperator	&		1230911	0					
ANR	1231745	Identifier	tmp		1230911	1					
ANR	1231746	Argument	& pos		1230911	2					
ANR	1231747	UnaryOperationExpression	& pos		1230911	0					
ANR	1231748	UnaryOperator	&		1230911	0					
ANR	1231749	Identifier	pos		1230911	1					
ANR	1231750	Identifier	SUCCESS		1230911	1					
ANR	1231751	CompoundStatement		80:90:3577:3577	1230911	1					
ANR	1231752	IfStatement	if ( ( * tmp ) -> kind == XSD_CONTENT_ANY )		1230911	0					
ANR	1231753	Condition	( * tmp ) -> kind == XSD_CONTENT_ANY	1456:8:48558:48588	1230911	0	True				
ANR	1231754	EqualityExpression	( * tmp ) -> kind == XSD_CONTENT_ANY		1230911	0		==			
ANR	1231755	PtrMemberAccess	( * tmp ) -> kind		1230911	0					
ANR	1231756	UnaryOperationExpression	* tmp		1230911	0					
ANR	1231757	UnaryOperator	*		1230911	0					
ANR	1231758	Identifier	tmp		1230911	1					
ANR	1231759	Identifier	kind		1230911	1					
ANR	1231760	Identifier	XSD_CONTENT_ANY		1230911	1					
ANR	1231761	CompoundStatement		81:41:3620:3620	1230911	1					
ANR	1231762	ExpressionStatement	any = * tmp	1457:5:48598:48608	1230911	0	True				
ANR	1231763	AssignmentExpression	any = * tmp		1230911	0		=			
ANR	1231764	Identifier	any		1230911	0					
ANR	1231765	UnaryOperationExpression	* tmp		1230911	1					
ANR	1231766	UnaryOperator	*		1230911	0					
ANR	1231767	Identifier	tmp		1230911	1					
ANR	1231768	ElseStatement	else		1230911	0					
ANR	1231769	CompoundStatement		83:11:3650:3650	1230911	0					
ANR	1231770	Statement	model_to_zval_object	1459:5:48628:48647	1230911	0	True				
ANR	1231771	Statement	(	1459:25:48648:48648	1230911	1	True				
ANR	1231772	Statement	ret	1459:26:48649:48651	1230911	2	True				
ANR	1231773	Statement	","	1459:29:48652:48652	1230911	3	True				
ANR	1231774	Statement	*	1459:31:48654:48654	1230911	4	True				
ANR	1231775	Statement	tmp	1459:32:48655:48657	1230911	5	True				
ANR	1231776	Statement	","	1459:35:48658:48658	1230911	6	True				
ANR	1231777	Statement	data	1459:37:48660:48663	1230911	7	True				
ANR	1231778	Statement	","	1459:41:48664:48664	1230911	8	True				
ANR	1231779	Statement	sdl	1459:43:48666:48668	1230911	9	True				
ANR	1231780	Statement	TSRMLS_CC	1459:47:48670:48678	1230911	10	True				
ANR	1231781	Statement	)	1459:56:48679:48679	1230911	11	True				
ANR	1231782	ExpressionStatement		1459:57:48680:48680	1230911	12	True				
ANR	1231783	ExpressionStatement	"zend_hash_move_forward_ex ( model -> u . content , & pos )"	1461:4:48692:48741	1230911	1	True				
ANR	1231784	CallExpression	"zend_hash_move_forward_ex ( model -> u . content , & pos )"		1230911	0					
ANR	1231785	Callee	zend_hash_move_forward_ex		1230911	0					
ANR	1231786	Identifier	zend_hash_move_forward_ex		1230911	0					
ANR	1231787	ArgumentList	model -> u . content		1230911	1					
ANR	1231788	Argument	model -> u . content		1230911	0					
ANR	1231789	MemberAccess	model -> u . content		1230911	0					
ANR	1231790	PtrMemberAccess	model -> u		1230911	0					
ANR	1231791	Identifier	model		1230911	0					
ANR	1231792	Identifier	u		1230911	1					
ANR	1231793	Identifier	content		1230911	1					
ANR	1231794	Argument	& pos		1230911	1					
ANR	1231795	UnaryOperationExpression	& pos		1230911	0					
ANR	1231796	UnaryOperator	&		1230911	0					
ANR	1231797	Identifier	pos		1230911	1					
ANR	1231798	IfStatement	if ( any )		1230911	5					
ANR	1231799	Condition	any	1463:7:48755:48757	1230911	0	True				
ANR	1231800	Identifier	any		1230911	0					
ANR	1231801	CompoundStatement		88:12:3789:3789	1230911	1					
ANR	1231802	Statement	model_to_zval_any	1464:4:48766:48782	1230911	0	True				
ANR	1231803	Statement	(	1464:21:48783:48783	1230911	1	True				
ANR	1231804	Statement	ret	1464:22:48784:48786	1230911	2	True				
ANR	1231805	Statement	","	1464:25:48787:48787	1230911	3	True				
ANR	1231806	Statement	data	1464:27:48789:48792	1230911	4	True				
ANR	1231807	Statement	->	1464:31:48793:48794	1230911	5	True				
ANR	1231808	Statement	children	1464:33:48795:48802	1230911	6	True				
ANR	1231809	Statement	TSRMLS_CC	1464:42:48804:48812	1230911	7	True				
ANR	1231810	Statement	)	1464:51:48813:48813	1230911	8	True				
ANR	1231811	ExpressionStatement		1464:52:48814:48814	1230911	9	True				
ANR	1231812	BreakStatement	break ;	1466:3:48824:48829	1230911	6	True				
ANR	1231813	Label	case XSD_CONTENT_GROUP :	1468:2:48837:48859	1230911	7	True				
ANR	1231814	Identifier	XSD_CONTENT_GROUP		1230911	0					
ANR	1231815	Statement	model_to_zval_object	1469:3:48864:48883	1230911	8	True				
ANR	1231816	Statement	(	1469:23:48884:48884	1230911	9	True				
ANR	1231817	Statement	ret	1469:24:48885:48887	1230911	10	True				
ANR	1231818	Statement	","	1469:27:48888:48888	1230911	11	True				
ANR	1231819	Statement	model	1469:29:48890:48894	1230911	12	True				
ANR	1231820	Statement	->	1469:34:48895:48896	1230911	13	True				
ANR	1231821	Statement	u	1469:36:48897:48897	1230911	14	True				
ANR	1231822	Statement	.	1469:37:48898:48898	1230911	15	True				
ANR	1231823	Statement	group	1469:38:48899:48903	1230911	16	True				
ANR	1231824	Statement	->	1469:43:48904:48905	1230911	17	True				
ANR	1231825	Statement	model	1469:45:48906:48910	1230911	18	True				
ANR	1231826	Statement	","	1469:50:48911:48911	1230911	19	True				
ANR	1231827	Statement	data	1469:52:48913:48916	1230911	20	True				
ANR	1231828	Statement	","	1469:56:48917:48917	1230911	21	True				
ANR	1231829	Statement	sdl	1469:58:48919:48921	1230911	22	True				
ANR	1231830	Statement	TSRMLS_CC	1469:62:48923:48931	1230911	23	True				
ANR	1231831	Statement	)	1469:71:48932:48932	1230911	24	True				
ANR	1231832	ExpressionStatement		1469:72:48933:48933	1230911	25	True				
ANR	1231833	BreakStatement	break ;	1470:3:48938:48943	1230911	26	True				
ANR	1231834	Label	default :	1471:2:48947:48954	1230911	27	True				
ANR	1231835	Identifier	default		1230911	0					
ANR	1231836	BreakStatement	break ;	1472:4:48960:48965	1230911	28	True				
ANR	1231837	ReturnType	static void		1230911	1					
ANR	1231838	Identifier	model_to_zval_object		1230911	2					
ANR	1231839	ParameterList	"zval * ret , sdlContentModelPtr model , xmlNodePtr data , sdlPtr sdl TSRMLS_DC"		1230911	3					
ANR	1231840	Parameter	zval * ret	1375:33:44894:44902	1230911	0	True				
ANR	1231841	ParameterType	zval *		1230911	0					
ANR	1231842	Identifier	ret		1230911	1					
ANR	1231843	Parameter	sdlContentModelPtr model	1375:44:44905:44928	1230911	1	True				
ANR	1231844	ParameterType	sdlContentModelPtr		1230911	0					
ANR	1231845	Identifier	model		1230911	1					
ANR	1231846	Parameter	xmlNodePtr data	1375:70:44931:44945	1230911	2	True				
ANR	1231847	ParameterType	xmlNodePtr		1230911	0					
ANR	1231848	Identifier	data		1230911	1					
ANR	1231849	Parameter	sdlPtr sdl TSRMLS_DC	1375:87:44948:44967	1230911	3	True				
ANR	1231850	ParameterType	sdlPtr sdl		1230911	0					
ANR	1231851	Identifier	TSRMLS_DC		1230911	1					
ANR	1231852	CFGEntryNode	ENTRY		1230911		True				
ANR	1231853	CFGExitNode	EXIT		1230911		True				
ANR	1231854	Symbol	model -> u		1230911						
ANR	1231855	Symbol	data		1230911						
ANR	1231856	Symbol	model -> max_occurs		1230911						
ANR	1231857	Symbol	get_node		1230911						
ANR	1231858	Symbol	* model -> u		1230911						
ANR	1231859	Symbol	TSRMLS_DC		1230911						
ANR	1231860	Symbol	model -> u . content		1230911						
ANR	1231861	Symbol	check_and_resolve_href		1230911						
ANR	1231862	Symbol	dummy		1230911						
ANR	1231863	Symbol	features		1230911						
ANR	1231864	Symbol	XSD_CONTENT_ANY		1230911						
ANR	1231865	Symbol	r_node -> children -> content		1230911						
ANR	1231866	Symbol	tmp		1230911						
ANR	1231867	Symbol	model		1230911						
ANR	1231868	Symbol	* node		1230911						
ANR	1231869	Symbol	ret		1230911						
ANR	1231870	Symbol	val		1230911						
ANR	1231871	Symbol	strcmp		1230911						
ANR	1231872	Symbol	NULL		1230911						
ANR	1231873	Symbol	model -> u . element -> nillable		1230911						
ANR	1231874	Symbol	* model		1230911						
ANR	1231875	Symbol	SOAP_GLOBAL		1230911						
ANR	1231876	Symbol	SOAP_SINGLE_ELEMENT_ARRAYS		1230911						
ANR	1231877	Symbol	node		1230911						
ANR	1231878	Symbol	model -> u . element		1230911						
ANR	1231879	Symbol	model -> u . element -> def		1230911						
ANR	1231880	Symbol	* * node		1230911						
ANR	1231881	Symbol	& tmp		1230911						
ANR	1231882	Symbol	model -> u . element -> name		1230911						
ANR	1231883	Symbol	node -> children		1230911						
ANR	1231884	Symbol	BAD_CAST		1230911						
ANR	1231885	Symbol	* tmp		1230911						
ANR	1231886	Symbol	zend_hash_get_current_data_ex		1230911						
ANR	1231887	Symbol	* * model		1230911						
ANR	1231888	Symbol	* r_node		1230911						
ANR	1231889	Symbol	* * r_node		1230911						
ANR	1231890	Symbol	r_node -> children		1230911						
ANR	1231891	Symbol	IS_NULL		1230911						
ANR	1231892	Symbol	array		1230911						
ANR	1231893	Symbol	pos		1230911						
ANR	1231894	Symbol	model -> u . element -> fixed		1230911						
ANR	1231895	Symbol	r_node		1230911						
ANR	1231896	Symbol	* node -> children		1230911						
ANR	1231897	Symbol	SUCCESS		1230911						
ANR	1231898	Symbol	( * tmp ) -> kind		1230911						
ANR	1231899	Symbol	node -> children -> content		1230911						
ANR	1231900	Symbol	xmlNewNode		1230911						
ANR	1231901	Symbol	node -> next		1230911						
ANR	1231902	Symbol	* * tmp		1230911						
ANR	1231903	Symbol	Z_TYPE_P		1230911						
ANR	1231904	Symbol	any		1230911						
ANR	1231905	Symbol	model -> kind		1230911						
ANR	1231906	Symbol	E_ERROR		1230911						
ANR	1231907	Symbol	data -> children		1230911						
ANR	1231908	Symbol	* r_node -> children		1230911						
ANR	1231909	Symbol	* model -> u . element		1230911						
ANR	1231910	Symbol	* data		1230911						
ANR	1231911	Symbol	& pos		1230911						
ANR	1231912	DeclStmt									
ANR	1231913	Decl							zval	zval *	ret
ANR	1231914	DeclStmt									
ANR	1231915	Decl							xmlNodePtr	xmlNodePtr	trav
ANR	1231916	DeclStmt									
ANR	1231917	Decl							sdlPtr	sdlPtr	sdl
ANR	1231918	DeclStmt									
ANR	1231919	Decl							sdlTypePtr	sdlTypePtr	sdlType
ANR	1231920	DeclStmt									
ANR	1231921	Decl							zend_class_entry	zend_class_entry *	ce
ANR	1231922	DeclStmt									
ANR	1231923	Decl							zval	zval *	redo_any
ANR	1231924	DeclStmt									
ANR	1231925	Decl							zval	zval * *	classname
ANR	1231926	DeclStmt									
ANR	1231927	Decl							zend_class_entry	zend_class_entry *	tmp
ANR	1231928	DeclStmt									
ANR	1231929	Decl							encodePtr	encodePtr	enc
ANR	1231930	DeclStmt									
ANR	1231931	Decl							zval	zval *	base
ANR	1231932	DeclStmt									
ANR	1231933	Decl							zend_object	zend_object *	zobj
ANR	1231934	DeclStmt									
ANR	1231935	Decl							zval	zval *	base
ANR	1231936	DeclStmt									
ANR	1231937	Decl							zval	zval *	tmp
ANR	1231938	DeclStmt									
ANR	1231939	Decl							sdlAttributePtr	sdlAttributePtr *	attr
ANR	1231940	DeclStmt									
ANR	1231941	Decl							HashPosition	HashPosition	pos
ANR	1231942	DeclStmt									
ANR	1231943	Decl							xmlAttrPtr	xmlAttrPtr	val
ANR	1231944	DeclStmt									
ANR	1231945	Decl							char	char *	str_val
ANR	1231946	DeclStmt									
ANR	1231947	Decl							xmlNodePtr	xmlNodePtr	dummy
ANR	1231948	Decl							xmlNodePtr	xmlNodePtr	text
ANR	1231949	DeclStmt									
ANR	1231950	Decl							zval	zval *	data
ANR	1231951	DeclStmt									
ANR	1231952	Decl							zval	zval *	tmpVal
ANR	1231953	DeclStmt									
ANR	1231954	Decl							zval	zval *	prop
ANR	1231955	DeclStmt									
ANR	1231956	Decl							zval	zval *	arr
ANR	1231957	DeclStmt									
ANR	1231958	Decl							zval	zval *	arr
ANR	1231959	Function	to_zval_object	1690:0:55636:55768							
ANR	1231960	FunctionDef	"to_zval_object (encodeTypePtr type , xmlNodePtr data TSRMLS_DC)"		1231959	0					
ANR	1231961	CompoundStatement		1691:0:55711:55768	1231959	0					
ANR	1231962	Statement	return	1692:1:55714:55719	1231959	0	True				
ANR	1231963	Statement	to_zval_object_ex	1692:8:55721:55737	1231959	1	True				
ANR	1231964	Statement	(	1692:25:55738:55738	1231959	2	True				
ANR	1231965	Statement	type	1692:26:55739:55742	1231959	3	True				
ANR	1231966	Statement	","	1692:30:55743:55743	1231959	4	True				
ANR	1231967	Statement	data	1692:32:55745:55748	1231959	5	True				
ANR	1231968	Statement	","	1692:36:55749:55749	1231959	6	True				
ANR	1231969	Statement	NULL	1692:38:55751:55754	1231959	7	True				
ANR	1231970	Statement	TSRMLS_CC	1692:43:55756:55764	1231959	8	True				
ANR	1231971	Statement	)	1692:52:55765:55765	1231959	9	True				
ANR	1231972	ExpressionStatement		1692:53:55766:55766	1231959	10	True				
ANR	1231973	ReturnType	static zval *		1231959	1					
ANR	1231974	Identifier	to_zval_object		1231959	2					
ANR	1231975	ParameterList	"encodeTypePtr type , xmlNodePtr data TSRMLS_DC"		1231959	3					
ANR	1231976	Parameter	encodeTypePtr type	1690:28:55664:55681	1231959	0	True				
ANR	1231977	ParameterType	encodeTypePtr		1231959	0					
ANR	1231978	Identifier	type		1231959	1					
ANR	1231979	Parameter	xmlNodePtr data TSRMLS_DC	1690:48:55684:55708	1231959	1	True				
ANR	1231980	ParameterType	xmlNodePtr data		1231959	0					
ANR	1231981	Identifier	TSRMLS_DC		1231959	1					
ANR	1231982	CFGEntryNode	ENTRY		1231959		True				
ANR	1231983	CFGExitNode	EXIT		1231959		True				
ANR	1231984	Symbol	type		1231959						
ANR	1231985	Symbol	TSRMLS_DC		1231959						
ANR	1231986	Function	model_to_xml_object	1696:0:55772:61416							
ANR	1231987	FunctionDef	"model_to_xml_object (xmlNodePtr node , sdlContentModelPtr model , zval * object , int style , int strict TSRMLS_DC)"		1231986	0					
ANR	1231988	CompoundStatement		1697:0:55893:61416	1231986	0					
ANR	1231989	SwitchStatement	switch ( model -> kind )		1231986	0					
ANR	1231990	Condition	model -> kind	1698:9:55904:55914	1231986	0	True				
ANR	1231991	PtrMemberAccess	model -> kind		1231986	0					
ANR	1231992	Identifier	model		1231986	0					
ANR	1231993	Identifier	kind		1231986	1					
ANR	1231994	CompoundStatement		2:22:23:23	1231986	1					
ANR	1231995	Label	case XSD_CONTENT_ELEMENT :	1699:2:55921:55945	1231986	0	True				
ANR	1231996	Identifier	XSD_CONTENT_ELEMENT		1231986	0					
ANR	1231997	CompoundStatement		6:3:97:110	1231986	1					
ANR	1231998	IdentifierDeclStatement	zval * data ;	1700:3:55952:55962	1231986	0	True				
ANR	1231999	IdentifierDecl	* data		1231986	0					
ANR	1232000	IdentifierDeclType	zval *		1231986	0					
ANR	1232001	Identifier	data		1231986	1					
ANR	1232002	IdentifierDeclStatement	xmlNodePtr property ;	1701:3:55967:55986	1231986	1	True				
ANR	1232003	IdentifierDecl	property		1231986	0					
ANR	1232004	IdentifierDeclType	xmlNodePtr		1231986	0					
ANR	1232005	Identifier	property		1231986	1					
ANR	1232006	IdentifierDeclStatement	encodePtr enc ;	1702:3:55991:56004	1231986	2	True				
ANR	1232007	IdentifierDecl	enc		1231986	0					
ANR	1232008	IdentifierDeclType	encodePtr		1231986	0					
ANR	1232009	Identifier	enc		1231986	1					
ANR	1232010	Statement	data	1704:3:56010:56013	1231986	3	True				
ANR	1232011	Statement	=	1704:8:56015:56015	1231986	4	True				
ANR	1232012	Statement	get_zval_property	1704:10:56017:56033	1231986	5	True				
ANR	1232013	Statement	(	1704:27:56034:56034	1231986	6	True				
ANR	1232014	Statement	object	1704:28:56035:56040	1231986	7	True				
ANR	1232015	Statement	","	1704:34:56041:56041	1231986	8	True				
ANR	1232016	Statement	model	1704:36:56043:56047	1231986	9	True				
ANR	1232017	Statement	->	1704:41:56048:56049	1231986	10	True				
ANR	1232018	Statement	u	1704:43:56050:56050	1231986	11	True				
ANR	1232019	Statement	.	1704:44:56051:56051	1231986	12	True				
ANR	1232020	Statement	element	1704:45:56052:56058	1231986	13	True				
ANR	1232021	Statement	->	1704:52:56059:56060	1231986	14	True				
ANR	1232022	Statement	name	1704:54:56061:56064	1231986	15	True				
ANR	1232023	Statement	TSRMLS_CC	1704:59:56066:56074	1231986	16	True				
ANR	1232024	Statement	)	1704:68:56075:56075	1231986	17	True				
ANR	1232025	ExpressionStatement		1704:69:56076:56076	1231986	18	True				
ANR	1232026	IfStatement	if ( data && Z_TYPE_P ( data ) == IS_NULL && ! model -> u . element -> nillable && model -> min_occurs > 0 && ! strict )		1231986	19					
ANR	1232027	Condition	data && Z_TYPE_P ( data ) == IS_NULL && ! model -> u . element -> nillable && model -> min_occurs > 0 && ! strict	1705:7:56085:56212	1231986	0	True				
ANR	1232028	AndExpression	data && Z_TYPE_P ( data ) == IS_NULL && ! model -> u . element -> nillable && model -> min_occurs > 0 && ! strict		1231986	0		&&			
ANR	1232029	Identifier	data		1231986	0					
ANR	1232030	AndExpression	Z_TYPE_P ( data ) == IS_NULL && ! model -> u . element -> nillable && model -> min_occurs > 0 && ! strict		1231986	1		&&			
ANR	1232031	EqualityExpression	Z_TYPE_P ( data ) == IS_NULL		1231986	0		==			
ANR	1232032	CallExpression	Z_TYPE_P ( data )		1231986	0					
ANR	1232033	Callee	Z_TYPE_P		1231986	0					
ANR	1232034	Identifier	Z_TYPE_P		1231986	0					
ANR	1232035	ArgumentList	data		1231986	1					
ANR	1232036	Argument	data		1231986	0					
ANR	1232037	Identifier	data		1231986	0					
ANR	1232038	Identifier	IS_NULL		1231986	1					
ANR	1232039	AndExpression	! model -> u . element -> nillable && model -> min_occurs > 0 && ! strict		1231986	1		&&			
ANR	1232040	UnaryOperationExpression	! model -> u . element -> nillable		1231986	0					
ANR	1232041	UnaryOperator	!		1231986	0					
ANR	1232042	PtrMemberAccess	model -> u . element -> nillable		1231986	1					
ANR	1232043	MemberAccess	model -> u . element		1231986	0					
ANR	1232044	PtrMemberAccess	model -> u		1231986	0					
ANR	1232045	Identifier	model		1231986	0					
ANR	1232046	Identifier	u		1231986	1					
ANR	1232047	Identifier	element		1231986	1					
ANR	1232048	Identifier	nillable		1231986	1					
ANR	1232049	AndExpression	model -> min_occurs > 0 && ! strict		1231986	1		&&			
ANR	1232050	RelationalExpression	model -> min_occurs > 0		1231986	0		>			
ANR	1232051	PtrMemberAccess	model -> min_occurs		1231986	0					
ANR	1232052	Identifier	model		1231986	0					
ANR	1232053	Identifier	min_occurs		1231986	1					
ANR	1232054	PrimaryExpression	0		1231986	1					
ANR	1232055	UnaryOperationExpression	! strict		1231986	1					
ANR	1232056	UnaryOperator	!		1231986	0					
ANR	1232057	Identifier	strict		1231986	1					
ANR	1232058	CompoundStatement		13:16:321:321	1231986	1					
ANR	1232059	ReturnStatement	return 0 ;	1710:4:56221:56229	1231986	0	True				
ANR	1232060	PrimaryExpression	0		1231986	0					
ANR	1232061	IfStatement	if ( data )		1231986	20					
ANR	1232062	Condition	data	1712:7:56243:56246	1231986	0	True				
ANR	1232063	Identifier	data		1231986	0					
ANR	1232064	CompoundStatement		16:13:355:355	1231986	1					
ANR	1232065	ExpressionStatement	enc = model -> u . element -> encode	1713:4:56255:56285	1231986	0	True				
ANR	1232066	AssignmentExpression	enc = model -> u . element -> encode		1231986	0		=			
ANR	1232067	Identifier	enc		1231986	0					
ANR	1232068	PtrMemberAccess	model -> u . element -> encode		1231986	1					
ANR	1232069	MemberAccess	model -> u . element		1231986	0					
ANR	1232070	PtrMemberAccess	model -> u		1231986	0					
ANR	1232071	Identifier	model		1231986	0					
ANR	1232072	Identifier	u		1231986	1					
ANR	1232073	Identifier	element		1231986	1					
ANR	1232074	Identifier	encode		1231986	1					
ANR	1232075	IfStatement	if ( ( model -> max_occurs == - 1 || model -> max_occurs > 1 ) && Z_TYPE_P ( data ) == IS_ARRAY && ! is_map ( data ) )		1231986	1					
ANR	1232076	Condition	( model -> max_occurs == - 1 || model -> max_occurs > 1 ) && Z_TYPE_P ( data ) == IS_ARRAY && ! is_map ( data )	1714:8:56295:56407	1231986	0	True				
ANR	1232077	AndExpression	( model -> max_occurs == - 1 || model -> max_occurs > 1 ) && Z_TYPE_P ( data ) == IS_ARRAY && ! is_map ( data )		1231986	0		&&			
ANR	1232078	OrExpression	model -> max_occurs == - 1 || model -> max_occurs > 1		1231986	0		||			
ANR	1232079	EqualityExpression	model -> max_occurs == - 1		1231986	0		==			
ANR	1232080	PtrMemberAccess	model -> max_occurs		1231986	0					
ANR	1232081	Identifier	model		1231986	0					
ANR	1232082	Identifier	max_occurs		1231986	1					
ANR	1232083	UnaryOperationExpression	- 1		1231986	1					
ANR	1232084	UnaryOperator	-		1231986	0					
ANR	1232085	PrimaryExpression	1		1231986	1					
ANR	1232086	RelationalExpression	model -> max_occurs > 1		1231986	1		>			
ANR	1232087	PtrMemberAccess	model -> max_occurs		1231986	0					
ANR	1232088	Identifier	model		1231986	0					
ANR	1232089	Identifier	max_occurs		1231986	1					
ANR	1232090	PrimaryExpression	1		1231986	1					
ANR	1232091	AndExpression	Z_TYPE_P ( data ) == IS_ARRAY && ! is_map ( data )		1231986	1		&&			
ANR	1232092	EqualityExpression	Z_TYPE_P ( data ) == IS_ARRAY		1231986	0		==			
ANR	1232093	CallExpression	Z_TYPE_P ( data )		1231986	0					
ANR	1232094	Callee	Z_TYPE_P		1231986	0					
ANR	1232095	Identifier	Z_TYPE_P		1231986	0					
ANR	1232096	ArgumentList	data		1231986	1					
ANR	1232097	Argument	data		1231986	0					
ANR	1232098	Identifier	data		1231986	0					
ANR	1232099	Identifier	IS_ARRAY		1231986	1					
ANR	1232100	UnaryOperationExpression	! is_map ( data )		1231986	1					
ANR	1232101	UnaryOperator	!		1231986	0					
ANR	1232102	CallExpression	is_map ( data )		1231986	1					
ANR	1232103	Callee	is_map		1231986	0					
ANR	1232104	Identifier	is_map		1231986	0					
ANR	1232105	ArgumentList	data		1231986	1					
ANR	1232106	Argument	data		1231986	0					
ANR	1232107	Identifier	data		1231986	0					
ANR	1232108	CompoundStatement		22:5:562:572	1231986	1					
ANR	1232109	IdentifierDeclStatement	HashTable * ht = Z_ARRVAL_P ( data ) ;	1717:5:56417:56449	1231986	0	True				
ANR	1232110	IdentifierDecl	* ht = Z_ARRVAL_P ( data )		1231986	0					
ANR	1232111	IdentifierDeclType	HashTable *		1231986	0					
ANR	1232112	Identifier	ht		1231986	1					
ANR	1232113	AssignmentExpression	* ht = Z_ARRVAL_P ( data )		1231986	2		=			
ANR	1232114	Identifier	ht		1231986	0					
ANR	1232115	CallExpression	Z_ARRVAL_P ( data )		1231986	1					
ANR	1232116	Callee	Z_ARRVAL_P		1231986	0					
ANR	1232117	Identifier	Z_ARRVAL_P		1231986	0					
ANR	1232118	ArgumentList	data		1231986	1					
ANR	1232119	Argument	data		1231986	0					
ANR	1232120	Identifier	data		1231986	0					
ANR	1232121	IdentifierDeclStatement	zval * * val ;	1718:5:56456:56466	1231986	1	True				
ANR	1232122	IdentifierDecl	* * val		1231986	0					
ANR	1232123	IdentifierDeclType	zval * *		1231986	0					
ANR	1232124	Identifier	val		1231986	1					
ANR	1232125	ExpressionStatement	zend_hash_internal_pointer_reset ( ht )	1720:5:56474:56510	1231986	2	True				
ANR	1232126	CallExpression	zend_hash_internal_pointer_reset ( ht )		1231986	0					
ANR	1232127	Callee	zend_hash_internal_pointer_reset		1231986	0					
ANR	1232128	Identifier	zend_hash_internal_pointer_reset		1231986	0					
ANR	1232129	ArgumentList	ht		1231986	1					
ANR	1232130	Argument	ht		1231986	0					
ANR	1232131	Identifier	ht		1231986	0					
ANR	1232132	WhileStatement	"while ( zend_hash_get_current_data ( ht , ( void * * ) & val ) == SUCCESS )"		1231986	3					
ANR	1232133	Condition	"zend_hash_get_current_data ( ht , ( void * * ) & val ) == SUCCESS"	1721:12:56524:56577	1231986	0	True				
ANR	1232134	EqualityExpression	"zend_hash_get_current_data ( ht , ( void * * ) & val ) == SUCCESS"		1231986	0		==			
ANR	1232135	CallExpression	"zend_hash_get_current_data ( ht , ( void * * ) & val )"		1231986	0					
ANR	1232136	Callee	zend_hash_get_current_data		1231986	0					
ANR	1232137	Identifier	zend_hash_get_current_data		1231986	0					
ANR	1232138	ArgumentList	ht		1231986	1					
ANR	1232139	Argument	ht		1231986	0					
ANR	1232140	Identifier	ht		1231986	0					
ANR	1232141	Argument	( void * * ) & val		1231986	1					
ANR	1232142	CastExpression	( void * * ) & val		1231986	0					
ANR	1232143	CastTarget	void * *		1231986	0					
ANR	1232144	UnaryOperationExpression	& val		1231986	1					
ANR	1232145	UnaryOperator	&		1231986	0					
ANR	1232146	Identifier	val		1231986	1					
ANR	1232147	Identifier	SUCCESS		1231986	1					
ANR	1232148	CompoundStatement		25:68:686:686	1231986	1					
ANR	1232149	IfStatement	if ( Z_TYPE_PP ( val ) == IS_NULL && model -> u . element -> nillable )		1231986	0					
ANR	1232150	Condition	Z_TYPE_PP ( val ) == IS_NULL && model -> u . element -> nillable	1722:10:56592:56646	1231986	0	True				
ANR	1232151	AndExpression	Z_TYPE_PP ( val ) == IS_NULL && model -> u . element -> nillable		1231986	0		&&			
ANR	1232152	EqualityExpression	Z_TYPE_PP ( val ) == IS_NULL		1231986	0		==			
ANR	1232153	CallExpression	Z_TYPE_PP ( val )		1231986	0					
ANR	1232154	Callee	Z_TYPE_PP		1231986	0					
ANR	1232155	Identifier	Z_TYPE_PP		1231986	0					
ANR	1232156	ArgumentList	val		1231986	1					
ANR	1232157	Argument	val		1231986	0					
ANR	1232158	Identifier	val		1231986	0					
ANR	1232159	Identifier	IS_NULL		1231986	1					
ANR	1232160	PtrMemberAccess	model -> u . element -> nillable		1231986	1					
ANR	1232161	MemberAccess	model -> u . element		1231986	0					
ANR	1232162	PtrMemberAccess	model -> u		1231986	0					
ANR	1232163	Identifier	model		1231986	0					
ANR	1232164	Identifier	u		1231986	1					
ANR	1232165	Identifier	element		1231986	1					
ANR	1232166	Identifier	nillable		1231986	1					
ANR	1232167	CompoundStatement		26:67:755:755	1231986	1					
ANR	1232168	ExpressionStatement	"property = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1723:7:56658:56704	1231986	0	True				
ANR	1232169	AssignmentExpression	"property = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1231986	0		=			
ANR	1232170	Identifier	property		1231986	0					
ANR	1232171	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1231986	1					
ANR	1232172	Callee	xmlNewNode		1231986	0					
ANR	1232173	Identifier	xmlNewNode		1231986	0					
ANR	1232174	ArgumentList	NULL		1231986	1					
ANR	1232175	Argument	NULL		1231986	0					
ANR	1232176	Identifier	NULL		1231986	0					
ANR	1232177	Argument	"BAD_CAST ( ""BOGUS"" )"		1231986	1					
ANR	1232178	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1231986	0					
ANR	1232179	Callee	BAD_CAST		1231986	0					
ANR	1232180	Identifier	BAD_CAST		1231986	0					
ANR	1232181	ArgumentList	"""BOGUS"""		1231986	1					
ANR	1232182	Argument	"""BOGUS"""		1231986	0					
ANR	1232183	PrimaryExpression	"""BOGUS"""		1231986	0					
ANR	1232184	ExpressionStatement	"xmlAddChild ( node , property )"	1724:7:56713:56740	1231986	1	True				
ANR	1232185	CallExpression	"xmlAddChild ( node , property )"		1231986	0					
ANR	1232186	Callee	xmlAddChild		1231986	0					
ANR	1232187	Identifier	xmlAddChild		1231986	0					
ANR	1232188	ArgumentList	node		1231986	1					
ANR	1232189	Argument	node		1231986	0					
ANR	1232190	Identifier	node		1231986	0					
ANR	1232191	Argument	property		1231986	1					
ANR	1232192	Identifier	property		1231986	0					
ANR	1232193	ExpressionStatement	set_xsi_nil ( property )	1725:7:56749:56770	1231986	2	True				
ANR	1232194	CallExpression	set_xsi_nil ( property )		1231986	0					
ANR	1232195	Callee	set_xsi_nil		1231986	0					
ANR	1232196	Identifier	set_xsi_nil		1231986	0					
ANR	1232197	ArgumentList	property		1231986	1					
ANR	1232198	Argument	property		1231986	0					
ANR	1232199	Identifier	property		1231986	0					
ANR	1232200	ElseStatement	else		1231986	0					
ANR	1232201	CompoundStatement		30:13:891:891	1231986	0					
ANR	1232202	Statement	property	1727:7:56794:56801	1231986	0	True				
ANR	1232203	Statement	=	1727:16:56803:56803	1231986	1	True				
ANR	1232204	Statement	master_to_xml	1727:18:56805:56817	1231986	2	True				
ANR	1232205	Statement	(	1727:31:56818:56818	1231986	3	True				
ANR	1232206	Statement	enc	1727:32:56819:56821	1231986	4	True				
ANR	1232207	Statement	","	1727:35:56822:56822	1231986	5	True				
ANR	1232208	Statement	*	1727:37:56824:56824	1231986	6	True				
ANR	1232209	Statement	val	1727:38:56825:56827	1231986	7	True				
ANR	1232210	Statement	","	1727:41:56828:56828	1231986	8	True				
ANR	1232211	Statement	style	1727:43:56830:56834	1231986	9	True				
ANR	1232212	Statement	","	1727:48:56835:56835	1231986	10	True				
ANR	1232213	Statement	node	1727:50:56837:56840	1231986	11	True				
ANR	1232214	Statement	TSRMLS_CC	1727:55:56842:56850	1231986	12	True				
ANR	1232215	Statement	)	1727:64:56851:56851	1231986	13	True				
ANR	1232216	ExpressionStatement		1727:65:56852:56852	1231986	14	True				
ANR	1232217	IfStatement	"if ( property -> children && property -> children -> content && model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content ) != 0 )"		1231986	15					
ANR	1232218	Condition	"property -> children && property -> children -> content && model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content ) != 0"	1728:11:56865:57027	1231986	0	True				
ANR	1232219	AndExpression	"property -> children && property -> children -> content && model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content ) != 0"		1231986	0		&&			
ANR	1232220	PtrMemberAccess	property -> children		1231986	0					
ANR	1232221	Identifier	property		1231986	0					
ANR	1232222	Identifier	children		1231986	1					
ANR	1232223	AndExpression	"property -> children -> content && model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content ) != 0"		1231986	1		&&			
ANR	1232224	PtrMemberAccess	property -> children -> content		1231986	0					
ANR	1232225	PtrMemberAccess	property -> children		1231986	0					
ANR	1232226	Identifier	property		1231986	0					
ANR	1232227	Identifier	children		1231986	1					
ANR	1232228	Identifier	content		1231986	1					
ANR	1232229	AndExpression	"model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content ) != 0"		1231986	1		&&			
ANR	1232230	PtrMemberAccess	model -> u . element -> fixed		1231986	0					
ANR	1232231	MemberAccess	model -> u . element		1231986	0					
ANR	1232232	PtrMemberAccess	model -> u		1231986	0					
ANR	1232233	Identifier	model		1231986	0					
ANR	1232234	Identifier	u		1231986	1					
ANR	1232235	Identifier	element		1231986	1					
ANR	1232236	Identifier	fixed		1231986	1					
ANR	1232237	EqualityExpression	"strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content ) != 0"		1231986	1		!=			
ANR	1232238	CallExpression	"strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content )"		1231986	0					
ANR	1232239	Callee	strcmp		1231986	0					
ANR	1232240	Identifier	strcmp		1231986	0					
ANR	1232241	ArgumentList	model -> u . element -> fixed		1231986	1					
ANR	1232242	Argument	model -> u . element -> fixed		1231986	0					
ANR	1232243	PtrMemberAccess	model -> u . element -> fixed		1231986	0					
ANR	1232244	MemberAccess	model -> u . element		1231986	0					
ANR	1232245	PtrMemberAccess	model -> u		1231986	0					
ANR	1232246	Identifier	model		1231986	0					
ANR	1232247	Identifier	u		1231986	1					
ANR	1232248	Identifier	element		1231986	1					
ANR	1232249	Identifier	fixed		1231986	1					
ANR	1232250	Argument	( char * ) property -> children -> content		1231986	1					
ANR	1232251	CastExpression	( char * ) property -> children -> content		1231986	0					
ANR	1232252	CastTarget	char *		1231986	0					
ANR	1232253	PtrMemberAccess	property -> children -> content		1231986	1					
ANR	1232254	PtrMemberAccess	property -> children		1231986	0					
ANR	1232255	Identifier	property		1231986	0					
ANR	1232256	Identifier	children		1231986	1					
ANR	1232257	Identifier	content		1231986	1					
ANR	1232258	PrimaryExpression	0		1231986	1					
ANR	1232259	CompoundStatement		33:112:1136:1136	1231986	1					
ANR	1232260	ExpressionStatement	"soap_error3 ( E_ERROR , ""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"" , model -> u . element -> name , model -> u . element -> fixed , property -> children -> content )"	1730:8:57040:57213	1231986	0	True				
ANR	1232261	CallExpression	"soap_error3 ( E_ERROR , ""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"" , model -> u . element -> name , model -> u . element -> fixed , property -> children -> content )"		1231986	0					
ANR	1232262	Callee	soap_error3		1231986	0					
ANR	1232263	Identifier	soap_error3		1231986	0					
ANR	1232264	ArgumentList	E_ERROR		1231986	1					
ANR	1232265	Argument	E_ERROR		1231986	0					
ANR	1232266	Identifier	E_ERROR		1231986	0					
ANR	1232267	Argument	"""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"""		1231986	1					
ANR	1232268	PrimaryExpression	"""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"""		1231986	0					
ANR	1232269	Argument	model -> u . element -> name		1231986	2					
ANR	1232270	PtrMemberAccess	model -> u . element -> name		1231986	0					
ANR	1232271	MemberAccess	model -> u . element		1231986	0					
ANR	1232272	PtrMemberAccess	model -> u		1231986	0					
ANR	1232273	Identifier	model		1231986	0					
ANR	1232274	Identifier	u		1231986	1					
ANR	1232275	Identifier	element		1231986	1					
ANR	1232276	Identifier	name		1231986	1					
ANR	1232277	Argument	model -> u . element -> fixed		1231986	3					
ANR	1232278	PtrMemberAccess	model -> u . element -> fixed		1231986	0					
ANR	1232279	MemberAccess	model -> u . element		1231986	0					
ANR	1232280	PtrMemberAccess	model -> u		1231986	0					
ANR	1232281	Identifier	model		1231986	0					
ANR	1232282	Identifier	u		1231986	1					
ANR	1232283	Identifier	element		1231986	1					
ANR	1232284	Identifier	fixed		1231986	1					
ANR	1232285	Argument	property -> children -> content		1231986	4					
ANR	1232286	PtrMemberAccess	property -> children -> content		1231986	0					
ANR	1232287	PtrMemberAccess	property -> children		1231986	0					
ANR	1232288	Identifier	property		1231986	0					
ANR	1232289	Identifier	children		1231986	1					
ANR	1232290	Identifier	content		1231986	1					
ANR	1232291	ExpressionStatement	"xmlNodeSetName ( property , BAD_CAST ( model -> u . element -> name ) )"	1733:6:57238:57296	1231986	1	True				
ANR	1232292	CallExpression	"xmlNodeSetName ( property , BAD_CAST ( model -> u . element -> name ) )"		1231986	0					
ANR	1232293	Callee	xmlNodeSetName		1231986	0					
ANR	1232294	Identifier	xmlNodeSetName		1231986	0					
ANR	1232295	ArgumentList	property		1231986	1					
ANR	1232296	Argument	property		1231986	0					
ANR	1232297	Identifier	property		1231986	0					
ANR	1232298	Argument	BAD_CAST ( model -> u . element -> name )		1231986	1					
ANR	1232299	CallExpression	BAD_CAST ( model -> u . element -> name )		1231986	0					
ANR	1232300	Callee	BAD_CAST		1231986	0					
ANR	1232301	Identifier	BAD_CAST		1231986	0					
ANR	1232302	ArgumentList	model -> u . element -> name		1231986	1					
ANR	1232303	Argument	model -> u . element -> name		1231986	0					
ANR	1232304	PtrMemberAccess	model -> u . element -> name		1231986	0					
ANR	1232305	MemberAccess	model -> u . element		1231986	0					
ANR	1232306	PtrMemberAccess	model -> u		1231986	0					
ANR	1232307	Identifier	model		1231986	0					
ANR	1232308	Identifier	u		1231986	1					
ANR	1232309	Identifier	element		1231986	1					
ANR	1232310	Identifier	name		1231986	1					
ANR	1232311	IfStatement	if ( style == SOAP_LITERAL && model -> u . element -> namens && model -> u . element -> form == XSD_FORM_QUALIFIED )		1231986	2					
ANR	1232312	Condition	style == SOAP_LITERAL && model -> u . element -> namens && model -> u . element -> form == XSD_FORM_QUALIFIED	1734:10:57308:57424	1231986	0	True				
ANR	1232313	AndExpression	style == SOAP_LITERAL && model -> u . element -> namens && model -> u . element -> form == XSD_FORM_QUALIFIED		1231986	0		&&			
ANR	1232314	EqualityExpression	style == SOAP_LITERAL		1231986	0		==			
ANR	1232315	Identifier	style		1231986	0					
ANR	1232316	Identifier	SOAP_LITERAL		1231986	1					
ANR	1232317	AndExpression	model -> u . element -> namens && model -> u . element -> form == XSD_FORM_QUALIFIED		1231986	1		&&			
ANR	1232318	PtrMemberAccess	model -> u . element -> namens		1231986	0					
ANR	1232319	MemberAccess	model -> u . element		1231986	0					
ANR	1232320	PtrMemberAccess	model -> u		1231986	0					
ANR	1232321	Identifier	model		1231986	0					
ANR	1232322	Identifier	u		1231986	1					
ANR	1232323	Identifier	element		1231986	1					
ANR	1232324	Identifier	namens		1231986	1					
ANR	1232325	EqualityExpression	model -> u . element -> form == XSD_FORM_QUALIFIED		1231986	1		==			
ANR	1232326	PtrMemberAccess	model -> u . element -> form		1231986	0					
ANR	1232327	MemberAccess	model -> u . element		1231986	0					
ANR	1232328	PtrMemberAccess	model -> u		1231986	0					
ANR	1232329	Identifier	model		1231986	0					
ANR	1232330	Identifier	u		1231986	1					
ANR	1232331	Identifier	element		1231986	1					
ANR	1232332	Identifier	form		1231986	1					
ANR	1232333	Identifier	XSD_FORM_QUALIFIED		1231986	1					
ANR	1232334	CompoundStatement		41:7:1542:1606	1231986	1					
ANR	1232335	IdentifierDeclStatement	"xmlNsPtr nsp = encode_add_ns ( property , model -> u . element -> namens ) ;"	1737:7:57436:57500	1231986	0	True				
ANR	1232336	IdentifierDecl	"nsp = encode_add_ns ( property , model -> u . element -> namens )"		1231986	0					
ANR	1232337	IdentifierDeclType	xmlNsPtr		1231986	0					
ANR	1232338	Identifier	nsp		1231986	1					
ANR	1232339	AssignmentExpression	"nsp = encode_add_ns ( property , model -> u . element -> namens )"		1231986	2		=			
ANR	1232340	Identifier	nsp		1231986	0					
ANR	1232341	CallExpression	"encode_add_ns ( property , model -> u . element -> namens )"		1231986	1					
ANR	1232342	Callee	encode_add_ns		1231986	0					
ANR	1232343	Identifier	encode_add_ns		1231986	0					
ANR	1232344	ArgumentList	property		1231986	1					
ANR	1232345	Argument	property		1231986	0					
ANR	1232346	Identifier	property		1231986	0					
ANR	1232347	Argument	model -> u . element -> namens		1231986	1					
ANR	1232348	PtrMemberAccess	model -> u . element -> namens		1231986	0					
ANR	1232349	MemberAccess	model -> u . element		1231986	0					
ANR	1232350	PtrMemberAccess	model -> u		1231986	0					
ANR	1232351	Identifier	model		1231986	0					
ANR	1232352	Identifier	u		1231986	1					
ANR	1232353	Identifier	element		1231986	1					
ANR	1232354	Identifier	namens		1231986	1					
ANR	1232355	ExpressionStatement	"xmlSetNs ( property , nsp )"	1738:7:57509:57532	1231986	1	True				
ANR	1232356	CallExpression	"xmlSetNs ( property , nsp )"		1231986	0					
ANR	1232357	Callee	xmlSetNs		1231986	0					
ANR	1232358	Identifier	xmlSetNs		1231986	0					
ANR	1232359	ArgumentList	property		1231986	1					
ANR	1232360	Argument	property		1231986	0					
ANR	1232361	Identifier	property		1231986	0					
ANR	1232362	Argument	nsp		1231986	1					
ANR	1232363	Identifier	nsp		1231986	0					
ANR	1232364	ExpressionStatement	zend_hash_move_forward ( ht )	1740:6:57548:57574	1231986	3	True				
ANR	1232365	CallExpression	zend_hash_move_forward ( ht )		1231986	0					
ANR	1232366	Callee	zend_hash_move_forward		1231986	0					
ANR	1232367	Identifier	zend_hash_move_forward		1231986	0					
ANR	1232368	ArgumentList	ht		1231986	1					
ANR	1232369	Argument	ht		1231986	0					
ANR	1232370	Identifier	ht		1231986	0					
ANR	1232371	ElseStatement	else		1231986	0					
ANR	1232372	CompoundStatement		46:11:1700:1700	1231986	0					
ANR	1232373	IfStatement	if ( Z_TYPE_P ( data ) == IS_NULL && model -> u . element -> nillable )		1231986	0					
ANR	1232374	Condition	Z_TYPE_P ( data ) == IS_NULL && model -> u . element -> nillable	1743:9:57605:57659	1231986	0	True				
ANR	1232375	AndExpression	Z_TYPE_P ( data ) == IS_NULL && model -> u . element -> nillable		1231986	0		&&			
ANR	1232376	EqualityExpression	Z_TYPE_P ( data ) == IS_NULL		1231986	0		==			
ANR	1232377	CallExpression	Z_TYPE_P ( data )		1231986	0					
ANR	1232378	Callee	Z_TYPE_P		1231986	0					
ANR	1232379	Identifier	Z_TYPE_P		1231986	0					
ANR	1232380	ArgumentList	data		1231986	1					
ANR	1232381	Argument	data		1231986	0					
ANR	1232382	Identifier	data		1231986	0					
ANR	1232383	Identifier	IS_NULL		1231986	1					
ANR	1232384	PtrMemberAccess	model -> u . element -> nillable		1231986	1					
ANR	1232385	MemberAccess	model -> u . element		1231986	0					
ANR	1232386	PtrMemberAccess	model -> u		1231986	0					
ANR	1232387	Identifier	model		1231986	0					
ANR	1232388	Identifier	u		1231986	1					
ANR	1232389	Identifier	element		1231986	1					
ANR	1232390	Identifier	nillable		1231986	1					
ANR	1232391	CompoundStatement		47:66:1768:1768	1231986	1					
ANR	1232392	ExpressionStatement	"property = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1744:6:57670:57716	1231986	0	True				
ANR	1232393	AssignmentExpression	"property = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1231986	0		=			
ANR	1232394	Identifier	property		1231986	0					
ANR	1232395	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1231986	1					
ANR	1232396	Callee	xmlNewNode		1231986	0					
ANR	1232397	Identifier	xmlNewNode		1231986	0					
ANR	1232398	ArgumentList	NULL		1231986	1					
ANR	1232399	Argument	NULL		1231986	0					
ANR	1232400	Identifier	NULL		1231986	0					
ANR	1232401	Argument	"BAD_CAST ( ""BOGUS"" )"		1231986	1					
ANR	1232402	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1231986	0					
ANR	1232403	Callee	BAD_CAST		1231986	0					
ANR	1232404	Identifier	BAD_CAST		1231986	0					
ANR	1232405	ArgumentList	"""BOGUS"""		1231986	1					
ANR	1232406	Argument	"""BOGUS"""		1231986	0					
ANR	1232407	PrimaryExpression	"""BOGUS"""		1231986	0					
ANR	1232408	ExpressionStatement	"xmlAddChild ( node , property )"	1745:6:57724:57751	1231986	1	True				
ANR	1232409	CallExpression	"xmlAddChild ( node , property )"		1231986	0					
ANR	1232410	Callee	xmlAddChild		1231986	0					
ANR	1232411	Identifier	xmlAddChild		1231986	0					
ANR	1232412	ArgumentList	node		1231986	1					
ANR	1232413	Argument	node		1231986	0					
ANR	1232414	Identifier	node		1231986	0					
ANR	1232415	Argument	property		1231986	1					
ANR	1232416	Identifier	property		1231986	0					
ANR	1232417	ExpressionStatement	set_xsi_nil ( property )	1746:6:57759:57780	1231986	2	True				
ANR	1232418	CallExpression	set_xsi_nil ( property )		1231986	0					
ANR	1232419	Callee	set_xsi_nil		1231986	0					
ANR	1232420	Identifier	set_xsi_nil		1231986	0					
ANR	1232421	ArgumentList	property		1231986	1					
ANR	1232422	Argument	property		1231986	0					
ANR	1232423	Identifier	property		1231986	0					
ANR	1232424	ElseStatement	else		1231986	0					
ANR	1232425	IfStatement	if ( Z_TYPE_P ( data ) == IS_NULL && model -> min_occurs == 0 )		1231986	0					
ANR	1232426	Condition	Z_TYPE_P ( data ) == IS_NULL && model -> min_occurs == 0	1747:16:57798:57848	1231986	0	True				
ANR	1232427	AndExpression	Z_TYPE_P ( data ) == IS_NULL && model -> min_occurs == 0		1231986	0		&&			
ANR	1232428	EqualityExpression	Z_TYPE_P ( data ) == IS_NULL		1231986	0		==			
ANR	1232429	CallExpression	Z_TYPE_P ( data )		1231986	0					
ANR	1232430	Callee	Z_TYPE_P		1231986	0					
ANR	1232431	Identifier	Z_TYPE_P		1231986	0					
ANR	1232432	ArgumentList	data		1231986	1					
ANR	1232433	Argument	data		1231986	0					
ANR	1232434	Identifier	data		1231986	0					
ANR	1232435	Identifier	IS_NULL		1231986	1					
ANR	1232436	EqualityExpression	model -> min_occurs == 0		1231986	1		==			
ANR	1232437	PtrMemberAccess	model -> min_occurs		1231986	0					
ANR	1232438	Identifier	model		1231986	0					
ANR	1232439	Identifier	min_occurs		1231986	1					
ANR	1232440	PrimaryExpression	0		1231986	1					
ANR	1232441	CompoundStatement		51:69:1957:1957	1231986	1					
ANR	1232442	ReturnStatement	return 1 ;	1748:6:57859:57867	1231986	0	True				
ANR	1232443	PrimaryExpression	1		1231986	0					
ANR	1232444	ElseStatement	else		1231986	0					
ANR	1232445	CompoundStatement		53:12:1987:1987	1231986	0					
ANR	1232446	Statement	property	1750:6:57889:57896	1231986	0	True				
ANR	1232447	Statement	=	1750:15:57898:57898	1231986	1	True				
ANR	1232448	Statement	master_to_xml	1750:17:57900:57912	1231986	2	True				
ANR	1232449	Statement	(	1750:30:57913:57913	1231986	3	True				
ANR	1232450	Statement	enc	1750:31:57914:57916	1231986	4	True				
ANR	1232451	Statement	","	1750:34:57917:57917	1231986	5	True				
ANR	1232452	Statement	data	1750:36:57919:57922	1231986	6	True				
ANR	1232453	Statement	","	1750:40:57923:57923	1231986	7	True				
ANR	1232454	Statement	style	1750:42:57925:57929	1231986	8	True				
ANR	1232455	Statement	","	1750:47:57930:57930	1231986	9	True				
ANR	1232456	Statement	node	1750:49:57932:57935	1231986	10	True				
ANR	1232457	Statement	TSRMLS_CC	1750:54:57937:57945	1231986	11	True				
ANR	1232458	Statement	)	1750:63:57946:57946	1231986	12	True				
ANR	1232459	ExpressionStatement		1750:64:57947:57947	1231986	13	True				
ANR	1232460	IfStatement	"if ( property -> children && property -> children -> content && model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content ) != 0 )"		1231986	14					
ANR	1232461	Condition	"property -> children && property -> children -> content && model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content ) != 0"	1751:10:57959:58120	1231986	0	True				
ANR	1232462	AndExpression	"property -> children && property -> children -> content && model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content ) != 0"		1231986	0		&&			
ANR	1232463	PtrMemberAccess	property -> children		1231986	0					
ANR	1232464	Identifier	property		1231986	0					
ANR	1232465	Identifier	children		1231986	1					
ANR	1232466	AndExpression	"property -> children -> content && model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content ) != 0"		1231986	1		&&			
ANR	1232467	PtrMemberAccess	property -> children -> content		1231986	0					
ANR	1232468	PtrMemberAccess	property -> children		1231986	0					
ANR	1232469	Identifier	property		1231986	0					
ANR	1232470	Identifier	children		1231986	1					
ANR	1232471	Identifier	content		1231986	1					
ANR	1232472	AndExpression	"model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content ) != 0"		1231986	1		&&			
ANR	1232473	PtrMemberAccess	model -> u . element -> fixed		1231986	0					
ANR	1232474	MemberAccess	model -> u . element		1231986	0					
ANR	1232475	PtrMemberAccess	model -> u		1231986	0					
ANR	1232476	Identifier	model		1231986	0					
ANR	1232477	Identifier	u		1231986	1					
ANR	1232478	Identifier	element		1231986	1					
ANR	1232479	Identifier	fixed		1231986	1					
ANR	1232480	EqualityExpression	"strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content ) != 0"		1231986	1		!=			
ANR	1232481	CallExpression	"strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content )"		1231986	0					
ANR	1232482	Callee	strcmp		1231986	0					
ANR	1232483	Identifier	strcmp		1231986	0					
ANR	1232484	ArgumentList	model -> u . element -> fixed		1231986	1					
ANR	1232485	Argument	model -> u . element -> fixed		1231986	0					
ANR	1232486	PtrMemberAccess	model -> u . element -> fixed		1231986	0					
ANR	1232487	MemberAccess	model -> u . element		1231986	0					
ANR	1232488	PtrMemberAccess	model -> u		1231986	0					
ANR	1232489	Identifier	model		1231986	0					
ANR	1232490	Identifier	u		1231986	1					
ANR	1232491	Identifier	element		1231986	1					
ANR	1232492	Identifier	fixed		1231986	1					
ANR	1232493	Argument	( char * ) property -> children -> content		1231986	1					
ANR	1232494	CastExpression	( char * ) property -> children -> content		1231986	0					
ANR	1232495	CastTarget	char *		1231986	0					
ANR	1232496	PtrMemberAccess	property -> children -> content		1231986	1					
ANR	1232497	PtrMemberAccess	property -> children		1231986	0					
ANR	1232498	Identifier	property		1231986	0					
ANR	1232499	Identifier	children		1231986	1					
ANR	1232500	Identifier	content		1231986	1					
ANR	1232501	PrimaryExpression	0		1231986	1					
ANR	1232502	CompoundStatement		56:111:2229:2229	1231986	1					
ANR	1232503	ExpressionStatement	"soap_error3 ( E_ERROR , ""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"" , model -> u . element -> name , model -> u . element -> fixed , property -> children -> content )"	1753:7:58132:58305	1231986	0	True				
ANR	1232504	CallExpression	"soap_error3 ( E_ERROR , ""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"" , model -> u . element -> name , model -> u . element -> fixed , property -> children -> content )"		1231986	0					
ANR	1232505	Callee	soap_error3		1231986	0					
ANR	1232506	Identifier	soap_error3		1231986	0					
ANR	1232507	ArgumentList	E_ERROR		1231986	1					
ANR	1232508	Argument	E_ERROR		1231986	0					
ANR	1232509	Identifier	E_ERROR		1231986	0					
ANR	1232510	Argument	"""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"""		1231986	1					
ANR	1232511	PrimaryExpression	"""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"""		1231986	0					
ANR	1232512	Argument	model -> u . element -> name		1231986	2					
ANR	1232513	PtrMemberAccess	model -> u . element -> name		1231986	0					
ANR	1232514	MemberAccess	model -> u . element		1231986	0					
ANR	1232515	PtrMemberAccess	model -> u		1231986	0					
ANR	1232516	Identifier	model		1231986	0					
ANR	1232517	Identifier	u		1231986	1					
ANR	1232518	Identifier	element		1231986	1					
ANR	1232519	Identifier	name		1231986	1					
ANR	1232520	Argument	model -> u . element -> fixed		1231986	3					
ANR	1232521	PtrMemberAccess	model -> u . element -> fixed		1231986	0					
ANR	1232522	MemberAccess	model -> u . element		1231986	0					
ANR	1232523	PtrMemberAccess	model -> u		1231986	0					
ANR	1232524	Identifier	model		1231986	0					
ANR	1232525	Identifier	u		1231986	1					
ANR	1232526	Identifier	element		1231986	1					
ANR	1232527	Identifier	fixed		1231986	1					
ANR	1232528	Argument	property -> children -> content		1231986	4					
ANR	1232529	PtrMemberAccess	property -> children -> content		1231986	0					
ANR	1232530	PtrMemberAccess	property -> children		1231986	0					
ANR	1232531	Identifier	property		1231986	0					
ANR	1232532	Identifier	children		1231986	1					
ANR	1232533	Identifier	content		1231986	1					
ANR	1232534	ExpressionStatement	"xmlNodeSetName ( property , BAD_CAST ( model -> u . element -> name ) )"	1756:5:58327:58385	1231986	1	True				
ANR	1232535	CallExpression	"xmlNodeSetName ( property , BAD_CAST ( model -> u . element -> name ) )"		1231986	0					
ANR	1232536	Callee	xmlNodeSetName		1231986	0					
ANR	1232537	Identifier	xmlNodeSetName		1231986	0					
ANR	1232538	ArgumentList	property		1231986	1					
ANR	1232539	Argument	property		1231986	0					
ANR	1232540	Identifier	property		1231986	0					
ANR	1232541	Argument	BAD_CAST ( model -> u . element -> name )		1231986	1					
ANR	1232542	CallExpression	BAD_CAST ( model -> u . element -> name )		1231986	0					
ANR	1232543	Callee	BAD_CAST		1231986	0					
ANR	1232544	Identifier	BAD_CAST		1231986	0					
ANR	1232545	ArgumentList	model -> u . element -> name		1231986	1					
ANR	1232546	Argument	model -> u . element -> name		1231986	0					
ANR	1232547	PtrMemberAccess	model -> u . element -> name		1231986	0					
ANR	1232548	MemberAccess	model -> u . element		1231986	0					
ANR	1232549	PtrMemberAccess	model -> u		1231986	0					
ANR	1232550	Identifier	model		1231986	0					
ANR	1232551	Identifier	u		1231986	1					
ANR	1232552	Identifier	element		1231986	1					
ANR	1232553	Identifier	name		1231986	1					
ANR	1232554	IfStatement	if ( style == SOAP_LITERAL && model -> u . element -> namens && model -> u . element -> form == XSD_FORM_QUALIFIED )		1231986	2					
ANR	1232555	Condition	style == SOAP_LITERAL && model -> u . element -> namens && model -> u . element -> form == XSD_FORM_QUALIFIED	1757:9:58396:58510	1231986	0	True				
ANR	1232556	AndExpression	style == SOAP_LITERAL && model -> u . element -> namens && model -> u . element -> form == XSD_FORM_QUALIFIED		1231986	0		&&			
ANR	1232557	EqualityExpression	style == SOAP_LITERAL		1231986	0		==			
ANR	1232558	Identifier	style		1231986	0					
ANR	1232559	Identifier	SOAP_LITERAL		1231986	1					
ANR	1232560	AndExpression	model -> u . element -> namens && model -> u . element -> form == XSD_FORM_QUALIFIED		1231986	1		&&			
ANR	1232561	PtrMemberAccess	model -> u . element -> namens		1231986	0					
ANR	1232562	MemberAccess	model -> u . element		1231986	0					
ANR	1232563	PtrMemberAccess	model -> u		1231986	0					
ANR	1232564	Identifier	model		1231986	0					
ANR	1232565	Identifier	u		1231986	1					
ANR	1232566	Identifier	element		1231986	1					
ANR	1232567	Identifier	namens		1231986	1					
ANR	1232568	EqualityExpression	model -> u . element -> form == XSD_FORM_QUALIFIED		1231986	1		==			
ANR	1232569	PtrMemberAccess	model -> u . element -> form		1231986	0					
ANR	1232570	MemberAccess	model -> u . element		1231986	0					
ANR	1232571	PtrMemberAccess	model -> u		1231986	0					
ANR	1232572	Identifier	model		1231986	0					
ANR	1232573	Identifier	u		1231986	1					
ANR	1232574	Identifier	element		1231986	1					
ANR	1232575	Identifier	form		1231986	1					
ANR	1232576	Identifier	XSD_FORM_QUALIFIED		1231986	1					
ANR	1232577	CompoundStatement		64:6:2627:2691	1231986	1					
ANR	1232578	IdentifierDeclStatement	"xmlNsPtr nsp = encode_add_ns ( property , model -> u . element -> namens ) ;"	1760:6:58521:58585	1231986	0	True				
ANR	1232579	IdentifierDecl	"nsp = encode_add_ns ( property , model -> u . element -> namens )"		1231986	0					
ANR	1232580	IdentifierDeclType	xmlNsPtr		1231986	0					
ANR	1232581	Identifier	nsp		1231986	1					
ANR	1232582	AssignmentExpression	"nsp = encode_add_ns ( property , model -> u . element -> namens )"		1231986	2		=			
ANR	1232583	Identifier	nsp		1231986	0					
ANR	1232584	CallExpression	"encode_add_ns ( property , model -> u . element -> namens )"		1231986	1					
ANR	1232585	Callee	encode_add_ns		1231986	0					
ANR	1232586	Identifier	encode_add_ns		1231986	0					
ANR	1232587	ArgumentList	property		1231986	1					
ANR	1232588	Argument	property		1231986	0					
ANR	1232589	Identifier	property		1231986	0					
ANR	1232590	Argument	model -> u . element -> namens		1231986	1					
ANR	1232591	PtrMemberAccess	model -> u . element -> namens		1231986	0					
ANR	1232592	MemberAccess	model -> u . element		1231986	0					
ANR	1232593	PtrMemberAccess	model -> u		1231986	0					
ANR	1232594	Identifier	model		1231986	0					
ANR	1232595	Identifier	u		1231986	1					
ANR	1232596	Identifier	element		1231986	1					
ANR	1232597	Identifier	namens		1231986	1					
ANR	1232598	ExpressionStatement	"xmlSetNs ( property , nsp )"	1761:6:58593:58616	1231986	1	True				
ANR	1232599	CallExpression	"xmlSetNs ( property , nsp )"		1231986	0					
ANR	1232600	Callee	xmlSetNs		1231986	0					
ANR	1232601	Identifier	xmlSetNs		1231986	0					
ANR	1232602	ArgumentList	property		1231986	1					
ANR	1232603	Argument	property		1231986	0					
ANR	1232604	Identifier	property		1231986	0					
ANR	1232605	Argument	nsp		1231986	1					
ANR	1232606	Identifier	nsp		1231986	0					
ANR	1232607	ReturnStatement	return 1 ;	1764:4:58635:58643	1231986	2	True				
ANR	1232608	PrimaryExpression	1		1231986	0					
ANR	1232609	ElseStatement	else		1231986	0					
ANR	1232610	IfStatement	if ( strict && model -> u . element -> nillable && model -> min_occurs > 0 )		1231986	0					
ANR	1232611	Condition	strict && model -> u . element -> nillable && model -> min_occurs > 0	1765:14:58659:58719	1231986	0	True				
ANR	1232612	AndExpression	strict && model -> u . element -> nillable && model -> min_occurs > 0		1231986	0		&&			
ANR	1232613	Identifier	strict		1231986	0					
ANR	1232614	AndExpression	model -> u . element -> nillable && model -> min_occurs > 0		1231986	1		&&			
ANR	1232615	PtrMemberAccess	model -> u . element -> nillable		1231986	0					
ANR	1232616	MemberAccess	model -> u . element		1231986	0					
ANR	1232617	PtrMemberAccess	model -> u		1231986	0					
ANR	1232618	Identifier	model		1231986	0					
ANR	1232619	Identifier	u		1231986	1					
ANR	1232620	Identifier	element		1231986	1					
ANR	1232621	Identifier	nillable		1231986	1					
ANR	1232622	RelationalExpression	model -> min_occurs > 0		1231986	1		>			
ANR	1232623	PtrMemberAccess	model -> min_occurs		1231986	0					
ANR	1232624	Identifier	model		1231986	0					
ANR	1232625	Identifier	min_occurs		1231986	1					
ANR	1232626	PrimaryExpression	0		1231986	1					
ANR	1232627	CompoundStatement		69:77:2828:2828	1231986	1					
ANR	1232628	ExpressionStatement	"property = xmlNewNode ( NULL , BAD_CAST ( model -> u . element -> name ) )"	1766:4:58728:58789	1231986	0	True				
ANR	1232629	AssignmentExpression	"property = xmlNewNode ( NULL , BAD_CAST ( model -> u . element -> name ) )"		1231986	0		=			
ANR	1232630	Identifier	property		1231986	0					
ANR	1232631	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( model -> u . element -> name ) )"		1231986	1					
ANR	1232632	Callee	xmlNewNode		1231986	0					
ANR	1232633	Identifier	xmlNewNode		1231986	0					
ANR	1232634	ArgumentList	NULL		1231986	1					
ANR	1232635	Argument	NULL		1231986	0					
ANR	1232636	Identifier	NULL		1231986	0					
ANR	1232637	Argument	BAD_CAST ( model -> u . element -> name )		1231986	1					
ANR	1232638	CallExpression	BAD_CAST ( model -> u . element -> name )		1231986	0					
ANR	1232639	Callee	BAD_CAST		1231986	0					
ANR	1232640	Identifier	BAD_CAST		1231986	0					
ANR	1232641	ArgumentList	model -> u . element -> name		1231986	1					
ANR	1232642	Argument	model -> u . element -> name		1231986	0					
ANR	1232643	PtrMemberAccess	model -> u . element -> name		1231986	0					
ANR	1232644	MemberAccess	model -> u . element		1231986	0					
ANR	1232645	PtrMemberAccess	model -> u		1231986	0					
ANR	1232646	Identifier	model		1231986	0					
ANR	1232647	Identifier	u		1231986	1					
ANR	1232648	Identifier	element		1231986	1					
ANR	1232649	Identifier	name		1231986	1					
ANR	1232650	ExpressionStatement	"xmlAddChild ( node , property )"	1767:4:58795:58822	1231986	1	True				
ANR	1232651	CallExpression	"xmlAddChild ( node , property )"		1231986	0					
ANR	1232652	Callee	xmlAddChild		1231986	0					
ANR	1232653	Identifier	xmlAddChild		1231986	0					
ANR	1232654	ArgumentList	node		1231986	1					
ANR	1232655	Argument	node		1231986	0					
ANR	1232656	Identifier	node		1231986	0					
ANR	1232657	Argument	property		1231986	1					
ANR	1232658	Identifier	property		1231986	0					
ANR	1232659	ExpressionStatement	set_xsi_nil ( property )	1768:4:58828:58849	1231986	2	True				
ANR	1232660	CallExpression	set_xsi_nil ( property )		1231986	0					
ANR	1232661	Callee	set_xsi_nil		1231986	0					
ANR	1232662	Identifier	set_xsi_nil		1231986	0					
ANR	1232663	ArgumentList	property		1231986	1					
ANR	1232664	Argument	property		1231986	0					
ANR	1232665	Identifier	property		1231986	0					
ANR	1232666	IfStatement	if ( style == SOAP_LITERAL && model -> u . element -> namens && model -> u . element -> form == XSD_FORM_QUALIFIED )		1231986	3					
ANR	1232667	Condition	style == SOAP_LITERAL && model -> u . element -> namens && model -> u . element -> form == XSD_FORM_QUALIFIED	1769:8:58859:58971	1231986	0	True				
ANR	1232668	AndExpression	style == SOAP_LITERAL && model -> u . element -> namens && model -> u . element -> form == XSD_FORM_QUALIFIED		1231986	0		&&			
ANR	1232669	EqualityExpression	style == SOAP_LITERAL		1231986	0		==			
ANR	1232670	Identifier	style		1231986	0					
ANR	1232671	Identifier	SOAP_LITERAL		1231986	1					
ANR	1232672	AndExpression	model -> u . element -> namens && model -> u . element -> form == XSD_FORM_QUALIFIED		1231986	1		&&			
ANR	1232673	PtrMemberAccess	model -> u . element -> namens		1231986	0					
ANR	1232674	MemberAccess	model -> u . element		1231986	0					
ANR	1232675	PtrMemberAccess	model -> u		1231986	0					
ANR	1232676	Identifier	model		1231986	0					
ANR	1232677	Identifier	u		1231986	1					
ANR	1232678	Identifier	element		1231986	1					
ANR	1232679	Identifier	namens		1231986	1					
ANR	1232680	EqualityExpression	model -> u . element -> form == XSD_FORM_QUALIFIED		1231986	1		==			
ANR	1232681	PtrMemberAccess	model -> u . element -> form		1231986	0					
ANR	1232682	MemberAccess	model -> u . element		1231986	0					
ANR	1232683	PtrMemberAccess	model -> u		1231986	0					
ANR	1232684	Identifier	model		1231986	0					
ANR	1232685	Identifier	u		1231986	1					
ANR	1232686	Identifier	element		1231986	1					
ANR	1232687	Identifier	form		1231986	1					
ANR	1232688	Identifier	XSD_FORM_QUALIFIED		1231986	1					
ANR	1232689	CompoundStatement		76:5:3087:3151	1231986	1					
ANR	1232690	IdentifierDeclStatement	"xmlNsPtr nsp = encode_add_ns ( property , model -> u . element -> namens ) ;"	1772:5:58981:59045	1231986	0	True				
ANR	1232691	IdentifierDecl	"nsp = encode_add_ns ( property , model -> u . element -> namens )"		1231986	0					
ANR	1232692	IdentifierDeclType	xmlNsPtr		1231986	0					
ANR	1232693	Identifier	nsp		1231986	1					
ANR	1232694	AssignmentExpression	"nsp = encode_add_ns ( property , model -> u . element -> namens )"		1231986	2		=			
ANR	1232695	Identifier	nsp		1231986	0					
ANR	1232696	CallExpression	"encode_add_ns ( property , model -> u . element -> namens )"		1231986	1					
ANR	1232697	Callee	encode_add_ns		1231986	0					
ANR	1232698	Identifier	encode_add_ns		1231986	0					
ANR	1232699	ArgumentList	property		1231986	1					
ANR	1232700	Argument	property		1231986	0					
ANR	1232701	Identifier	property		1231986	0					
ANR	1232702	Argument	model -> u . element -> namens		1231986	1					
ANR	1232703	PtrMemberAccess	model -> u . element -> namens		1231986	0					
ANR	1232704	MemberAccess	model -> u . element		1231986	0					
ANR	1232705	PtrMemberAccess	model -> u		1231986	0					
ANR	1232706	Identifier	model		1231986	0					
ANR	1232707	Identifier	u		1231986	1					
ANR	1232708	Identifier	element		1231986	1					
ANR	1232709	Identifier	namens		1231986	1					
ANR	1232710	ExpressionStatement	"xmlSetNs ( property , nsp )"	1773:5:59052:59075	1231986	1	True				
ANR	1232711	CallExpression	"xmlSetNs ( property , nsp )"		1231986	0					
ANR	1232712	Callee	xmlSetNs		1231986	0					
ANR	1232713	Identifier	xmlSetNs		1231986	0					
ANR	1232714	ArgumentList	property		1231986	1					
ANR	1232715	Argument	property		1231986	0					
ANR	1232716	Identifier	property		1231986	0					
ANR	1232717	Argument	nsp		1231986	1					
ANR	1232718	Identifier	nsp		1231986	0					
ANR	1232719	ReturnStatement	return 1 ;	1775:4:59087:59095	1231986	4	True				
ANR	1232720	PrimaryExpression	1		1231986	0					
ANR	1232721	ElseStatement	else		1231986	0					
ANR	1232722	IfStatement	if ( model -> min_occurs == 0 )		1231986	0					
ANR	1232723	Condition	model -> min_occurs == 0	1776:14:59111:59132	1231986	0	True				
ANR	1232724	EqualityExpression	model -> min_occurs == 0		1231986	0		==			
ANR	1232725	PtrMemberAccess	model -> min_occurs		1231986	0					
ANR	1232726	Identifier	model		1231986	0					
ANR	1232727	Identifier	min_occurs		1231986	1					
ANR	1232728	PrimaryExpression	0		1231986	1					
ANR	1232729	CompoundStatement		80:38:3241:3241	1231986	1					
ANR	1232730	ReturnStatement	return 2 ;	1777:4:59141:59149	1231986	0	True				
ANR	1232731	PrimaryExpression	2		1231986	0					
ANR	1232732	ElseStatement	else		1231986	0					
ANR	1232733	CompoundStatement		82:10:3267:3267	1231986	0					
ANR	1232734	IfStatement	if ( strict )		1231986	0					
ANR	1232735	Condition	strict	1779:8:59171:59176	1231986	0	True				
ANR	1232736	Identifier	strict		1231986	0					
ANR	1232737	CompoundStatement		83:16:3285:3285	1231986	1					
ANR	1232738	ExpressionStatement	"soap_error1 ( E_ERROR , ""Encoding: object has no '%s' property"" , model -> u . element -> name )"	1780:5:59186:59272	1231986	0	True				
ANR	1232739	CallExpression	"soap_error1 ( E_ERROR , ""Encoding: object has no '%s' property"" , model -> u . element -> name )"		1231986	0					
ANR	1232740	Callee	soap_error1		1231986	0					
ANR	1232741	Identifier	soap_error1		1231986	0					
ANR	1232742	ArgumentList	E_ERROR		1231986	1					
ANR	1232743	Argument	E_ERROR		1231986	0					
ANR	1232744	Identifier	E_ERROR		1231986	0					
ANR	1232745	Argument	"""Encoding: object has no '%s' property"""		1231986	1					
ANR	1232746	PrimaryExpression	"""Encoding: object has no '%s' property"""		1231986	0					
ANR	1232747	Argument	model -> u . element -> name		1231986	2					
ANR	1232748	PtrMemberAccess	model -> u . element -> name		1231986	0					
ANR	1232749	MemberAccess	model -> u . element		1231986	0					
ANR	1232750	PtrMemberAccess	model -> u		1231986	0					
ANR	1232751	Identifier	model		1231986	0					
ANR	1232752	Identifier	u		1231986	1					
ANR	1232753	Identifier	element		1231986	1					
ANR	1232754	Identifier	name		1231986	1					
ANR	1232755	ReturnStatement	return 0 ;	1782:4:59284:59292	1231986	1	True				
ANR	1232756	PrimaryExpression	0		1231986	0					
ANR	1232757	BreakStatement	break ;	1784:3:59302:59307	1231986	21	True				
ANR	1232758	Label	case XSD_CONTENT_ANY :	1786:2:59315:59335	1231986	2	True				
ANR	1232759	Identifier	XSD_CONTENT_ANY		1231986	0					
ANR	1232760	CompoundStatement		93:3:3487:3500	1231986	3					
ANR	1232761	IdentifierDeclStatement	zval * data ;	1787:3:59342:59352	1231986	0	True				
ANR	1232762	IdentifierDecl	* data		1231986	0					
ANR	1232763	IdentifierDeclType	zval *		1231986	0					
ANR	1232764	Identifier	data		1231986	1					
ANR	1232765	IdentifierDeclStatement	xmlNodePtr property ;	1788:3:59357:59376	1231986	1	True				
ANR	1232766	IdentifierDecl	property		1231986	0					
ANR	1232767	IdentifierDeclType	xmlNodePtr		1231986	0					
ANR	1232768	Identifier	property		1231986	1					
ANR	1232769	IdentifierDeclStatement	encodePtr enc ;	1789:3:59381:59394	1231986	2	True				
ANR	1232770	IdentifierDecl	enc		1231986	0					
ANR	1232771	IdentifierDeclType	encodePtr		1231986	0					
ANR	1232772	Identifier	enc		1231986	1					
ANR	1232773	Statement	data	1791:3:59400:59403	1231986	3	True				
ANR	1232774	Statement	=	1791:8:59405:59405	1231986	4	True				
ANR	1232775	Statement	get_zval_property	1791:10:59407:59423	1231986	5	True				
ANR	1232776	Statement	(	1791:27:59424:59424	1231986	6	True				
ANR	1232777	Statement	object	1791:28:59425:59430	1231986	7	True				
ANR	1232778	Statement	","	1791:34:59431:59431	1231986	8	True				
ANR	1232779	Statement	"""any"""	1791:36:59433:59437	1231986	9	True				
ANR	1232780	Statement	TSRMLS_CC	1791:42:59439:59447	1231986	10	True				
ANR	1232781	Statement	)	1791:51:59448:59448	1231986	11	True				
ANR	1232782	ExpressionStatement		1791:52:59449:59449	1231986	12	True				
ANR	1232783	IfStatement	if ( data )		1231986	13					
ANR	1232784	Condition	data	1792:7:59458:59461	1231986	0	True				
ANR	1232785	Identifier	data		1231986	0					
ANR	1232786	CompoundStatement		96:13:3570:3570	1231986	1					
ANR	1232787	ExpressionStatement	enc = get_conversion ( XSD_ANYXML )	1793:4:59470:59502	1231986	0	True				
ANR	1232788	AssignmentExpression	enc = get_conversion ( XSD_ANYXML )		1231986	0		=			
ANR	1232789	Identifier	enc		1231986	0					
ANR	1232790	CallExpression	get_conversion ( XSD_ANYXML )		1231986	1					
ANR	1232791	Callee	get_conversion		1231986	0					
ANR	1232792	Identifier	get_conversion		1231986	0					
ANR	1232793	ArgumentList	XSD_ANYXML		1231986	1					
ANR	1232794	Argument	XSD_ANYXML		1231986	0					
ANR	1232795	Identifier	XSD_ANYXML		1231986	0					
ANR	1232796	IfStatement	if ( ( model -> max_occurs == - 1 || model -> max_occurs > 1 ) && Z_TYPE_P ( data ) == IS_ARRAY && ! is_map ( data ) )		1231986	1					
ANR	1232797	Condition	( model -> max_occurs == - 1 || model -> max_occurs > 1 ) && Z_TYPE_P ( data ) == IS_ARRAY && ! is_map ( data )	1794:8:59512:59624	1231986	0	True				
ANR	1232798	AndExpression	( model -> max_occurs == - 1 || model -> max_occurs > 1 ) && Z_TYPE_P ( data ) == IS_ARRAY && ! is_map ( data )		1231986	0		&&			
ANR	1232799	OrExpression	model -> max_occurs == - 1 || model -> max_occurs > 1		1231986	0		||			
ANR	1232800	EqualityExpression	model -> max_occurs == - 1		1231986	0		==			
ANR	1232801	PtrMemberAccess	model -> max_occurs		1231986	0					
ANR	1232802	Identifier	model		1231986	0					
ANR	1232803	Identifier	max_occurs		1231986	1					
ANR	1232804	UnaryOperationExpression	- 1		1231986	1					
ANR	1232805	UnaryOperator	-		1231986	0					
ANR	1232806	PrimaryExpression	1		1231986	1					
ANR	1232807	RelationalExpression	model -> max_occurs > 1		1231986	1		>			
ANR	1232808	PtrMemberAccess	model -> max_occurs		1231986	0					
ANR	1232809	Identifier	model		1231986	0					
ANR	1232810	Identifier	max_occurs		1231986	1					
ANR	1232811	PrimaryExpression	1		1231986	1					
ANR	1232812	AndExpression	Z_TYPE_P ( data ) == IS_ARRAY && ! is_map ( data )		1231986	1		&&			
ANR	1232813	EqualityExpression	Z_TYPE_P ( data ) == IS_ARRAY		1231986	0		==			
ANR	1232814	CallExpression	Z_TYPE_P ( data )		1231986	0					
ANR	1232815	Callee	Z_TYPE_P		1231986	0					
ANR	1232816	Identifier	Z_TYPE_P		1231986	0					
ANR	1232817	ArgumentList	data		1231986	1					
ANR	1232818	Argument	data		1231986	0					
ANR	1232819	Identifier	data		1231986	0					
ANR	1232820	Identifier	IS_ARRAY		1231986	1					
ANR	1232821	UnaryOperationExpression	! is_map ( data )		1231986	1					
ANR	1232822	UnaryOperator	!		1231986	0					
ANR	1232823	CallExpression	is_map ( data )		1231986	1					
ANR	1232824	Callee	is_map		1231986	0					
ANR	1232825	Identifier	is_map		1231986	0					
ANR	1232826	ArgumentList	data		1231986	1					
ANR	1232827	Argument	data		1231986	0					
ANR	1232828	Identifier	data		1231986	0					
ANR	1232829	CompoundStatement		102:5:3779:3789	1231986	1					
ANR	1232830	IdentifierDeclStatement	HashTable * ht = Z_ARRVAL_P ( data ) ;	1797:5:59634:59666	1231986	0	True				
ANR	1232831	IdentifierDecl	* ht = Z_ARRVAL_P ( data )		1231986	0					
ANR	1232832	IdentifierDeclType	HashTable *		1231986	0					
ANR	1232833	Identifier	ht		1231986	1					
ANR	1232834	AssignmentExpression	* ht = Z_ARRVAL_P ( data )		1231986	2		=			
ANR	1232835	Identifier	ht		1231986	0					
ANR	1232836	CallExpression	Z_ARRVAL_P ( data )		1231986	1					
ANR	1232837	Callee	Z_ARRVAL_P		1231986	0					
ANR	1232838	Identifier	Z_ARRVAL_P		1231986	0					
ANR	1232839	ArgumentList	data		1231986	1					
ANR	1232840	Argument	data		1231986	0					
ANR	1232841	Identifier	data		1231986	0					
ANR	1232842	IdentifierDeclStatement	zval * * val ;	1798:5:59673:59683	1231986	1	True				
ANR	1232843	IdentifierDecl	* * val		1231986	0					
ANR	1232844	IdentifierDeclType	zval * *		1231986	0					
ANR	1232845	Identifier	val		1231986	1					
ANR	1232846	ExpressionStatement	zend_hash_internal_pointer_reset ( ht )	1800:5:59691:59727	1231986	2	True				
ANR	1232847	CallExpression	zend_hash_internal_pointer_reset ( ht )		1231986	0					
ANR	1232848	Callee	zend_hash_internal_pointer_reset		1231986	0					
ANR	1232849	Identifier	zend_hash_internal_pointer_reset		1231986	0					
ANR	1232850	ArgumentList	ht		1231986	1					
ANR	1232851	Argument	ht		1231986	0					
ANR	1232852	Identifier	ht		1231986	0					
ANR	1232853	WhileStatement	"while ( zend_hash_get_current_data ( ht , ( void * * ) & val ) == SUCCESS )"		1231986	3					
ANR	1232854	Condition	"zend_hash_get_current_data ( ht , ( void * * ) & val ) == SUCCESS"	1801:12:59741:59794	1231986	0	True				
ANR	1232855	EqualityExpression	"zend_hash_get_current_data ( ht , ( void * * ) & val ) == SUCCESS"		1231986	0		==			
ANR	1232856	CallExpression	"zend_hash_get_current_data ( ht , ( void * * ) & val )"		1231986	0					
ANR	1232857	Callee	zend_hash_get_current_data		1231986	0					
ANR	1232858	Identifier	zend_hash_get_current_data		1231986	0					
ANR	1232859	ArgumentList	ht		1231986	1					
ANR	1232860	Argument	ht		1231986	0					
ANR	1232861	Identifier	ht		1231986	0					
ANR	1232862	Argument	( void * * ) & val		1231986	1					
ANR	1232863	CastExpression	( void * * ) & val		1231986	0					
ANR	1232864	CastTarget	void * *		1231986	0					
ANR	1232865	UnaryOperationExpression	& val		1231986	1					
ANR	1232866	UnaryOperator	&		1231986	0					
ANR	1232867	Identifier	val		1231986	1					
ANR	1232868	Identifier	SUCCESS		1231986	1					
ANR	1232869	CompoundStatement		105:68:3903:3903	1231986	1					
ANR	1232870	Statement	property	1802:6:59805:59812	1231986	0	True				
ANR	1232871	Statement	=	1802:15:59814:59814	1231986	1	True				
ANR	1232872	Statement	master_to_xml	1802:17:59816:59828	1231986	2	True				
ANR	1232873	Statement	(	1802:30:59829:59829	1231986	3	True				
ANR	1232874	Statement	enc	1802:31:59830:59832	1231986	4	True				
ANR	1232875	Statement	","	1802:34:59833:59833	1231986	5	True				
ANR	1232876	Statement	*	1802:36:59835:59835	1231986	6	True				
ANR	1232877	Statement	val	1802:37:59836:59838	1231986	7	True				
ANR	1232878	Statement	","	1802:40:59839:59839	1231986	8	True				
ANR	1232879	Statement	style	1802:42:59841:59845	1231986	9	True				
ANR	1232880	Statement	","	1802:47:59846:59846	1231986	10	True				
ANR	1232881	Statement	node	1802:49:59848:59851	1231986	11	True				
ANR	1232882	Statement	TSRMLS_CC	1802:54:59853:59861	1231986	12	True				
ANR	1232883	Statement	)	1802:63:59862:59862	1231986	13	True				
ANR	1232884	ExpressionStatement		1802:64:59863:59863	1231986	14	True				
ANR	1232885	ExpressionStatement	zend_hash_move_forward ( ht )	1803:6:59871:59897	1231986	15	True				
ANR	1232886	CallExpression	zend_hash_move_forward ( ht )		1231986	0					
ANR	1232887	Callee	zend_hash_move_forward		1231986	0					
ANR	1232888	Identifier	zend_hash_move_forward		1231986	0					
ANR	1232889	ArgumentList	ht		1231986	1					
ANR	1232890	Argument	ht		1231986	0					
ANR	1232891	Identifier	ht		1231986	0					
ANR	1232892	ElseStatement	else		1231986	0					
ANR	1232893	CompoundStatement		109:11:4023:4023	1231986	0					
ANR	1232894	Statement	property	1806:5:59924:59931	1231986	0	True				
ANR	1232895	Statement	=	1806:14:59933:59933	1231986	1	True				
ANR	1232896	Statement	master_to_xml	1806:16:59935:59947	1231986	2	True				
ANR	1232897	Statement	(	1806:29:59948:59948	1231986	3	True				
ANR	1232898	Statement	enc	1806:30:59949:59951	1231986	4	True				
ANR	1232899	Statement	","	1806:33:59952:59952	1231986	5	True				
ANR	1232900	Statement	data	1806:35:59954:59957	1231986	6	True				
ANR	1232901	Statement	","	1806:39:59958:59958	1231986	7	True				
ANR	1232902	Statement	style	1806:41:59960:59964	1231986	8	True				
ANR	1232903	Statement	","	1806:46:59965:59965	1231986	9	True				
ANR	1232904	Statement	node	1806:48:59967:59970	1231986	10	True				
ANR	1232905	Statement	TSRMLS_CC	1806:53:59972:59980	1231986	11	True				
ANR	1232906	Statement	)	1806:62:59981:59981	1231986	12	True				
ANR	1232907	ExpressionStatement		1806:63:59982:59982	1231986	13	True				
ANR	1232908	ReturnStatement	return 1 ;	1808:4:59994:60002	1231986	2	True				
ANR	1232909	PrimaryExpression	1		1231986	0					
ANR	1232910	ElseStatement	else		1231986	0					
ANR	1232911	IfStatement	if ( model -> min_occurs == 0 )		1231986	0					
ANR	1232912	Condition	model -> min_occurs == 0	1809:14:60018:60039	1231986	0	True				
ANR	1232913	EqualityExpression	model -> min_occurs == 0		1231986	0		==			
ANR	1232914	PtrMemberAccess	model -> min_occurs		1231986	0					
ANR	1232915	Identifier	model		1231986	0					
ANR	1232916	Identifier	min_occurs		1231986	1					
ANR	1232917	PrimaryExpression	0		1231986	1					
ANR	1232918	CompoundStatement		113:38:4148:4148	1231986	1					
ANR	1232919	ReturnStatement	return 2 ;	1810:4:60048:60056	1231986	0	True				
ANR	1232920	PrimaryExpression	2		1231986	0					
ANR	1232921	ElseStatement	else		1231986	0					
ANR	1232922	CompoundStatement		115:10:4174:4174	1231986	0					
ANR	1232923	IfStatement	if ( strict )		1231986	0					
ANR	1232924	Condition	strict	1812:8:60078:60083	1231986	0	True				
ANR	1232925	Identifier	strict		1231986	0					
ANR	1232926	CompoundStatement		116:16:4192:4192	1231986	1					
ANR	1232927	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: object has no 'any' property"" )"	1813:5:60093:60156	1231986	0	True				
ANR	1232928	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: object has no 'any' property"" )"		1231986	0					
ANR	1232929	Callee	soap_error0		1231986	0					
ANR	1232930	Identifier	soap_error0		1231986	0					
ANR	1232931	ArgumentList	E_ERROR		1231986	1					
ANR	1232932	Argument	E_ERROR		1231986	0					
ANR	1232933	Identifier	E_ERROR		1231986	0					
ANR	1232934	Argument	"""Encoding: object has no 'any' property"""		1231986	1					
ANR	1232935	PrimaryExpression	"""Encoding: object has no 'any' property"""		1231986	0					
ANR	1232936	ReturnStatement	return 0 ;	1815:4:60168:60176	1231986	1	True				
ANR	1232937	PrimaryExpression	0		1231986	0					
ANR	1232938	BreakStatement	break ;	1817:3:60186:60191	1231986	14	True				
ANR	1232939	Label	case XSD_CONTENT_SEQUENCE :	1819:2:60199:60224	1231986	4	True				
ANR	1232940	Identifier	XSD_CONTENT_SEQUENCE		1231986	0					
ANR	1232941	Label	case XSD_CONTENT_ALL :	1820:2:60228:60248	1231986	5	True				
ANR	1232942	Identifier	XSD_CONTENT_ALL		1231986	0					
ANR	1232943	CompoundStatement		126:3:4389:4405	1231986	6					
ANR	1232944	IdentifierDeclStatement	sdlContentModelPtr * tmp ;	1821:3:60255:60278	1231986	0	True				
ANR	1232945	IdentifierDecl	* tmp		1231986	0					
ANR	1232946	IdentifierDeclType	sdlContentModelPtr *		1231986	0					
ANR	1232947	Identifier	tmp		1231986	1					
ANR	1232948	IdentifierDeclStatement	HashPosition pos ;	1822:3:60283:60299	1231986	1	True				
ANR	1232949	IdentifierDecl	pos		1231986	0					
ANR	1232950	IdentifierDeclType	HashPosition		1231986	0					
ANR	1232951	Identifier	pos		1231986	1					
ANR	1232952	ExpressionStatement	"zend_hash_internal_pointer_reset_ex ( model -> u . content , & pos )"	1824:3:60305:60364	1231986	2	True				
ANR	1232953	CallExpression	"zend_hash_internal_pointer_reset_ex ( model -> u . content , & pos )"		1231986	0					
ANR	1232954	Callee	zend_hash_internal_pointer_reset_ex		1231986	0					
ANR	1232955	Identifier	zend_hash_internal_pointer_reset_ex		1231986	0					
ANR	1232956	ArgumentList	model -> u . content		1231986	1					
ANR	1232957	Argument	model -> u . content		1231986	0					
ANR	1232958	MemberAccess	model -> u . content		1231986	0					
ANR	1232959	PtrMemberAccess	model -> u		1231986	0					
ANR	1232960	Identifier	model		1231986	0					
ANR	1232961	Identifier	u		1231986	1					
ANR	1232962	Identifier	content		1231986	1					
ANR	1232963	Argument	& pos		1231986	1					
ANR	1232964	UnaryOperationExpression	& pos		1231986	0					
ANR	1232965	UnaryOperator	&		1231986	0					
ANR	1232966	Identifier	pos		1231986	1					
ANR	1232967	WhileStatement	"while ( zend_hash_get_current_data_ex ( model -> u . content , ( void * * ) & tmp , & pos ) == SUCCESS )"		1231986	3					
ANR	1232968	Condition	"zend_hash_get_current_data_ex ( model -> u . content , ( void * * ) & tmp , & pos ) == SUCCESS"	1825:10:60376:60453	1231986	0	True				
ANR	1232969	EqualityExpression	"zend_hash_get_current_data_ex ( model -> u . content , ( void * * ) & tmp , & pos ) == SUCCESS"		1231986	0		==			
ANR	1232970	CallExpression	"zend_hash_get_current_data_ex ( model -> u . content , ( void * * ) & tmp , & pos )"		1231986	0					
ANR	1232971	Callee	zend_hash_get_current_data_ex		1231986	0					
ANR	1232972	Identifier	zend_hash_get_current_data_ex		1231986	0					
ANR	1232973	ArgumentList	model -> u . content		1231986	1					
ANR	1232974	Argument	model -> u . content		1231986	0					
ANR	1232975	MemberAccess	model -> u . content		1231986	0					
ANR	1232976	PtrMemberAccess	model -> u		1231986	0					
ANR	1232977	Identifier	model		1231986	0					
ANR	1232978	Identifier	u		1231986	1					
ANR	1232979	Identifier	content		1231986	1					
ANR	1232980	Argument	( void * * ) & tmp		1231986	1					
ANR	1232981	CastExpression	( void * * ) & tmp		1231986	0					
ANR	1232982	CastTarget	void * *		1231986	0					
ANR	1232983	UnaryOperationExpression	& tmp		1231986	1					
ANR	1232984	UnaryOperator	&		1231986	0					
ANR	1232985	Identifier	tmp		1231986	1					
ANR	1232986	Argument	& pos		1231986	2					
ANR	1232987	UnaryOperationExpression	& pos		1231986	0					
ANR	1232988	UnaryOperator	&		1231986	0					
ANR	1232989	Identifier	pos		1231986	1					
ANR	1232990	Identifier	SUCCESS		1231986	1					
ANR	1232991	CompoundStatement		129:90:4562:4562	1231986	1					
ANR	1232992	Statement	if	1826:4:60462:60463	1231986	0	True				
ANR	1232993	Statement	(	1826:7:60465:60465	1231986	1	True				
ANR	1232994	Statement	!	1826:8:60466:60466	1231986	2	True				
ANR	1232995	Statement	model_to_xml_object	1826:9:60467:60485	1231986	3	True				
ANR	1232996	Statement	(	1826:28:60486:60486	1231986	4	True				
ANR	1232997	Statement	node	1826:29:60487:60490	1231986	5	True				
ANR	1232998	Statement	","	1826:33:60491:60491	1231986	6	True				
ANR	1232999	Statement	*	1826:35:60493:60493	1231986	7	True				
ANR	1233000	Statement	tmp	1826:36:60494:60496	1231986	8	True				
ANR	1233001	Statement	","	1826:39:60497:60497	1231986	9	True				
ANR	1233002	Statement	object	1826:41:60499:60504	1231986	10	True				
ANR	1233003	Statement	","	1826:47:60505:60505	1231986	11	True				
ANR	1233004	Statement	style	1826:49:60507:60511	1231986	12	True				
ANR	1233005	Statement	","	1826:54:60512:60512	1231986	13	True				
ANR	1233006	Statement	strict	1826:56:60514:60519	1231986	14	True				
ANR	1233007	Statement	&&	1826:63:60521:60522	1231986	15	True				
ANR	1233008	Statement	(	1826:66:60524:60524	1231986	16	True				
ANR	1233009	Statement	(	1826:67:60525:60525	1231986	17	True				
ANR	1233010	Statement	*	1826:68:60526:60526	1231986	18	True				
ANR	1233011	Statement	tmp	1826:69:60527:60529	1231986	19	True				
ANR	1233012	Statement	)	1826:72:60530:60530	1231986	20	True				
ANR	1233013	Statement	->	1826:73:60531:60532	1231986	21	True				
ANR	1233014	Statement	min_occurs	1826:75:60533:60542	1231986	22	True				
ANR	1233015	Statement	>	1826:86:60544:60544	1231986	23	True				
ANR	1233016	Statement	0	1826:88:60546:60546	1231986	24	True				
ANR	1233017	Statement	)	1826:89:60547:60547	1231986	25	True				
ANR	1233018	Statement	TSRMLS_CC	1826:91:60549:60557	1231986	26	True				
ANR	1233019	Statement	)	1826:100:60558:60558	1231986	27	True				
ANR	1233020	Statement	)	1826:101:60559:60559	1231986	28	True				
ANR	1233021	CompoundStatement		130:103:4667:4667	1231986	29					
ANR	1233022	IfStatement	if ( ! strict || ( * tmp ) -> min_occurs > 0 )		1231986	0					
ANR	1233023	Condition	! strict || ( * tmp ) -> min_occurs > 0	1827:9:60572:60604	1231986	0	True				
ANR	1233024	OrExpression	! strict || ( * tmp ) -> min_occurs > 0		1231986	0		||			
ANR	1233025	UnaryOperationExpression	! strict		1231986	0					
ANR	1233026	UnaryOperator	!		1231986	0					
ANR	1233027	Identifier	strict		1231986	1					
ANR	1233028	RelationalExpression	( * tmp ) -> min_occurs > 0		1231986	1		>			
ANR	1233029	PtrMemberAccess	( * tmp ) -> min_occurs		1231986	0					
ANR	1233030	UnaryOperationExpression	* tmp		1231986	0					
ANR	1233031	UnaryOperator	*		1231986	0					
ANR	1233032	Identifier	tmp		1231986	1					
ANR	1233033	Identifier	min_occurs		1231986	1					
ANR	1233034	PrimaryExpression	0		1231986	1					
ANR	1233035	CompoundStatement		131:44:4713:4713	1231986	1					
ANR	1233036	ReturnStatement	return 0 ;	1828:6:60615:60623	1231986	0	True				
ANR	1233037	PrimaryExpression	0		1231986	0					
ANR	1233038	ExpressionStatement	strict = 1	1831:4:60642:60652	1231986	30	True				
ANR	1233039	AssignmentExpression	strict = 1		1231986	0		=			
ANR	1233040	Identifier	strict		1231986	0					
ANR	1233041	PrimaryExpression	1		1231986	1					
ANR	1233042	ExpressionStatement	"zend_hash_move_forward_ex ( model -> u . content , & pos )"	1832:4:60658:60707	1231986	31	True				
ANR	1233043	CallExpression	"zend_hash_move_forward_ex ( model -> u . content , & pos )"		1231986	0					
ANR	1233044	Callee	zend_hash_move_forward_ex		1231986	0					
ANR	1233045	Identifier	zend_hash_move_forward_ex		1231986	0					
ANR	1233046	ArgumentList	model -> u . content		1231986	1					
ANR	1233047	Argument	model -> u . content		1231986	0					
ANR	1233048	MemberAccess	model -> u . content		1231986	0					
ANR	1233049	PtrMemberAccess	model -> u		1231986	0					
ANR	1233050	Identifier	model		1231986	0					
ANR	1233051	Identifier	u		1231986	1					
ANR	1233052	Identifier	content		1231986	1					
ANR	1233053	Argument	& pos		1231986	1					
ANR	1233054	UnaryOperationExpression	& pos		1231986	0					
ANR	1233055	UnaryOperator	&		1231986	0					
ANR	1233056	Identifier	pos		1231986	1					
ANR	1233057	ReturnStatement	return 1 ;	1834:3:60717:60725	1231986	4	True				
ANR	1233058	PrimaryExpression	1		1231986	0					
ANR	1233059	Label	case XSD_CONTENT_CHOICE :	1836:2:60733:60756	1231986	7	True				
ANR	1233060	Identifier	XSD_CONTENT_CHOICE		1231986	0					
ANR	1233061	CompoundStatement		143:3:4918:4929	1231986	8					
ANR	1233062	IdentifierDeclStatement	sdlContentModelPtr * tmp ;	1837:3:60763:60786	1231986	0	True				
ANR	1233063	IdentifierDecl	* tmp		1231986	0					
ANR	1233064	IdentifierDeclType	sdlContentModelPtr *		1231986	0					
ANR	1233065	Identifier	tmp		1231986	1					
ANR	1233066	IdentifierDeclStatement	HashPosition pos ;	1838:3:60791:60807	1231986	1	True				
ANR	1233067	IdentifierDecl	pos		1231986	0					
ANR	1233068	IdentifierDeclType	HashPosition		1231986	0					
ANR	1233069	Identifier	pos		1231986	1					
ANR	1233070	IdentifierDeclStatement	int ret = 0 ;	1839:3:60812:60823	1231986	2	True				
ANR	1233071	IdentifierDecl	ret = 0		1231986	0					
ANR	1233072	IdentifierDeclType	int		1231986	0					
ANR	1233073	Identifier	ret		1231986	1					
ANR	1233074	AssignmentExpression	ret = 0		1231986	2		=			
ANR	1233075	Identifier	ret		1231986	0					
ANR	1233076	PrimaryExpression	0		1231986	1					
ANR	1233077	ExpressionStatement	"zend_hash_internal_pointer_reset_ex ( model -> u . content , & pos )"	1841:3:60829:60888	1231986	3	True				
ANR	1233078	CallExpression	"zend_hash_internal_pointer_reset_ex ( model -> u . content , & pos )"		1231986	0					
ANR	1233079	Callee	zend_hash_internal_pointer_reset_ex		1231986	0					
ANR	1233080	Identifier	zend_hash_internal_pointer_reset_ex		1231986	0					
ANR	1233081	ArgumentList	model -> u . content		1231986	1					
ANR	1233082	Argument	model -> u . content		1231986	0					
ANR	1233083	MemberAccess	model -> u . content		1231986	0					
ANR	1233084	PtrMemberAccess	model -> u		1231986	0					
ANR	1233085	Identifier	model		1231986	0					
ANR	1233086	Identifier	u		1231986	1					
ANR	1233087	Identifier	content		1231986	1					
ANR	1233088	Argument	& pos		1231986	1					
ANR	1233089	UnaryOperationExpression	& pos		1231986	0					
ANR	1233090	UnaryOperator	&		1231986	0					
ANR	1233091	Identifier	pos		1231986	1					
ANR	1233092	WhileStatement	"while ( zend_hash_get_current_data_ex ( model -> u . content , ( void * * ) & tmp , & pos ) == SUCCESS )"		1231986	4					
ANR	1233093	Condition	"zend_hash_get_current_data_ex ( model -> u . content , ( void * * ) & tmp , & pos ) == SUCCESS"	1842:10:60900:60977	1231986	0	True				
ANR	1233094	EqualityExpression	"zend_hash_get_current_data_ex ( model -> u . content , ( void * * ) & tmp , & pos ) == SUCCESS"		1231986	0		==			
ANR	1233095	CallExpression	"zend_hash_get_current_data_ex ( model -> u . content , ( void * * ) & tmp , & pos )"		1231986	0					
ANR	1233096	Callee	zend_hash_get_current_data_ex		1231986	0					
ANR	1233097	Identifier	zend_hash_get_current_data_ex		1231986	0					
ANR	1233098	ArgumentList	model -> u . content		1231986	1					
ANR	1233099	Argument	model -> u . content		1231986	0					
ANR	1233100	MemberAccess	model -> u . content		1231986	0					
ANR	1233101	PtrMemberAccess	model -> u		1231986	0					
ANR	1233102	Identifier	model		1231986	0					
ANR	1233103	Identifier	u		1231986	1					
ANR	1233104	Identifier	content		1231986	1					
ANR	1233105	Argument	( void * * ) & tmp		1231986	1					
ANR	1233106	CastExpression	( void * * ) & tmp		1231986	0					
ANR	1233107	CastTarget	void * *		1231986	0					
ANR	1233108	UnaryOperationExpression	& tmp		1231986	1					
ANR	1233109	UnaryOperator	&		1231986	0					
ANR	1233110	Identifier	tmp		1231986	1					
ANR	1233111	Argument	& pos		1231986	2					
ANR	1233112	UnaryOperationExpression	& pos		1231986	0					
ANR	1233113	UnaryOperator	&		1231986	0					
ANR	1233114	Identifier	pos		1231986	1					
ANR	1233115	Identifier	SUCCESS		1231986	1					
ANR	1233116	CompoundStatement		146:90:5086:5086	1231986	1					
ANR	1233117	Statement	int	1843:4:60986:60988	1231986	0	True				
ANR	1233118	Statement	tmp_ret	1843:8:60990:60996	1231986	1	True				
ANR	1233119	Statement	=	1843:16:60998:60998	1231986	2	True				
ANR	1233120	Statement	model_to_xml_object	1843:18:61000:61018	1231986	3	True				
ANR	1233121	Statement	(	1843:37:61019:61019	1231986	4	True				
ANR	1233122	Statement	node	1843:38:61020:61023	1231986	5	True				
ANR	1233123	Statement	","	1843:42:61024:61024	1231986	6	True				
ANR	1233124	Statement	*	1843:44:61026:61026	1231986	7	True				
ANR	1233125	Statement	tmp	1843:45:61027:61029	1231986	8	True				
ANR	1233126	Statement	","	1843:48:61030:61030	1231986	9	True				
ANR	1233127	Statement	object	1843:50:61032:61037	1231986	10	True				
ANR	1233128	Statement	","	1843:56:61038:61038	1231986	11	True				
ANR	1233129	Statement	style	1843:58:61040:61044	1231986	12	True				
ANR	1233130	Statement	","	1843:63:61045:61045	1231986	13	True				
ANR	1233131	Statement	0	1843:65:61047:61047	1231986	14	True				
ANR	1233132	Statement	TSRMLS_CC	1843:67:61049:61057	1231986	15	True				
ANR	1233133	Statement	)	1843:76:61058:61058	1231986	16	True				
ANR	1233134	ExpressionStatement		1843:77:61059:61059	1231986	17	True				
ANR	1233135	IfStatement	if ( tmp_ret == 1 )		1231986	18					
ANR	1233136	Condition	tmp_ret == 1	1844:8:61069:61080	1231986	0	True				
ANR	1233137	EqualityExpression	tmp_ret == 1		1231986	0		==			
ANR	1233138	Identifier	tmp_ret		1231986	0					
ANR	1233139	PrimaryExpression	1		1231986	1					
ANR	1233140	CompoundStatement		148:22:5189:5189	1231986	1					
ANR	1233141	ReturnStatement	return 1 ;	1845:5:61090:61098	1231986	0	True				
ANR	1233142	PrimaryExpression	1		1231986	0					
ANR	1233143	ElseStatement	else		1231986	0					
ANR	1233144	IfStatement	if ( tmp_ret != 0 )		1231986	0					
ANR	1233145	Condition	tmp_ret != 0	1846:15:61115:61126	1231986	0	True				
ANR	1233146	EqualityExpression	tmp_ret != 0		1231986	0		!=			
ANR	1233147	Identifier	tmp_ret		1231986	0					
ANR	1233148	PrimaryExpression	0		1231986	1					
ANR	1233149	CompoundStatement		150:29:5235:5235	1231986	1					
ANR	1233150	ExpressionStatement	ret = 1	1847:5:61136:61143	1231986	0	True				
ANR	1233151	AssignmentExpression	ret = 1		1231986	0		=			
ANR	1233152	Identifier	ret		1231986	0					
ANR	1233153	PrimaryExpression	1		1231986	1					
ANR	1233154	ExpressionStatement	"zend_hash_move_forward_ex ( model -> u . content , & pos )"	1849:4:61155:61204	1231986	19	True				
ANR	1233155	CallExpression	"zend_hash_move_forward_ex ( model -> u . content , & pos )"		1231986	0					
ANR	1233156	Callee	zend_hash_move_forward_ex		1231986	0					
ANR	1233157	Identifier	zend_hash_move_forward_ex		1231986	0					
ANR	1233158	ArgumentList	model -> u . content		1231986	1					
ANR	1233159	Argument	model -> u . content		1231986	0					
ANR	1233160	MemberAccess	model -> u . content		1231986	0					
ANR	1233161	PtrMemberAccess	model -> u		1231986	0					
ANR	1233162	Identifier	model		1231986	0					
ANR	1233163	Identifier	u		1231986	1					
ANR	1233164	Identifier	content		1231986	1					
ANR	1233165	Argument	& pos		1231986	1					
ANR	1233166	UnaryOperationExpression	& pos		1231986	0					
ANR	1233167	UnaryOperator	&		1231986	0					
ANR	1233168	Identifier	pos		1231986	1					
ANR	1233169	ReturnStatement	return ret ;	1851:3:61214:61224	1231986	5	True				
ANR	1233170	Identifier	ret		1231986	0					
ANR	1233171	Label	case XSD_CONTENT_GROUP :	1853:2:61232:61254	1231986	9	True				
ANR	1233172	Identifier	XSD_CONTENT_GROUP		1231986	0					
ANR	1233173	CompoundStatement		157:26:5362:5362	1231986	10					
ANR	1233174	Statement	return	1854:3:61261:61266	1231986	0	True				
ANR	1233175	Statement	model_to_xml_object	1854:10:61268:61286	1231986	1	True				
ANR	1233176	Statement	(	1854:29:61287:61287	1231986	2	True				
ANR	1233177	Statement	node	1854:30:61288:61291	1231986	3	True				
ANR	1233178	Statement	","	1854:34:61292:61292	1231986	4	True				
ANR	1233179	Statement	model	1854:36:61294:61298	1231986	5	True				
ANR	1233180	Statement	->	1854:41:61299:61300	1231986	6	True				
ANR	1233181	Statement	u	1854:43:61301:61301	1231986	7	True				
ANR	1233182	Statement	.	1854:44:61302:61302	1231986	8	True				
ANR	1233183	Statement	group	1854:45:61303:61307	1231986	9	True				
ANR	1233184	Statement	->	1854:50:61308:61309	1231986	10	True				
ANR	1233185	Statement	model	1854:52:61310:61314	1231986	11	True				
ANR	1233186	Statement	","	1854:57:61315:61315	1231986	12	True				
ANR	1233187	Statement	object	1854:59:61317:61322	1231986	13	True				
ANR	1233188	Statement	","	1854:65:61323:61323	1231986	14	True				
ANR	1233189	Statement	style	1854:67:61325:61329	1231986	15	True				
ANR	1233190	Statement	","	1854:72:61330:61330	1231986	16	True				
ANR	1233191	Statement	strict	1854:74:61332:61337	1231986	17	True				
ANR	1233192	Statement	&&	1854:81:61339:61340	1231986	18	True				
ANR	1233193	Statement	model	1854:84:61342:61346	1231986	19	True				
ANR	1233194	Statement	->	1854:89:61347:61348	1231986	20	True				
ANR	1233195	Statement	min_occurs	1854:91:61349:61358	1231986	21	True				
ANR	1233196	Statement	>	1854:102:61360:61360	1231986	22	True				
ANR	1233197	Statement	0	1854:104:61362:61362	1231986	23	True				
ANR	1233198	Statement	TSRMLS_CC	1854:106:61364:61372	1231986	24	True				
ANR	1233199	Statement	)	1854:115:61373:61373	1231986	25	True				
ANR	1233200	ExpressionStatement		1854:116:61374:61374	1231986	26	True				
ANR	1233201	Label	default :	1856:2:61382:61389	1231986	11	True				
ANR	1233202	Identifier	default		1231986	0					
ANR	1233203	BreakStatement	break ;	1857:4:61395:61400	1231986	12	True				
ANR	1233204	ReturnStatement	return 1 ;	1859:1:61406:61414	1231986	1	True				
ANR	1233205	PrimaryExpression	1		1231986	0					
ANR	1233206	ReturnType	static int		1231986	1					
ANR	1233207	Identifier	model_to_xml_object		1231986	2					
ANR	1233208	ParameterList	"xmlNodePtr node , sdlContentModelPtr model , zval * object , int style , int strict TSRMLS_DC"		1231986	3					
ANR	1233209	Parameter	xmlNodePtr node	1696:31:55803:55817	1231986	0	True				
ANR	1233210	ParameterType	xmlNodePtr		1231986	0					
ANR	1233211	Identifier	node		1231986	1					
ANR	1233212	Parameter	sdlContentModelPtr model	1696:48:55820:55843	1231986	1	True				
ANR	1233213	ParameterType	sdlContentModelPtr		1231986	0					
ANR	1233214	Identifier	model		1231986	1					
ANR	1233215	Parameter	zval * object	1696:74:55846:55857	1231986	2	True				
ANR	1233216	ParameterType	zval *		1231986	0					
ANR	1233217	Identifier	object		1231986	1					
ANR	1233218	Parameter	int style	1696:88:55860:55868	1231986	3	True				
ANR	1233219	ParameterType	int		1231986	0					
ANR	1233220	Identifier	style		1231986	1					
ANR	1233221	Parameter	int strict TSRMLS_DC	1696:99:55871:55890	1231986	4	True				
ANR	1233222	ParameterType	int strict		1231986	0					
ANR	1233223	Identifier	TSRMLS_DC		1231986	1					
ANR	1233224	CFGEntryNode	ENTRY		1231986		True				
ANR	1233225	CFGExitNode	EXIT		1231986		True				
ANR	1233226	Symbol	& val		1231986						
ANR	1233227	Symbol	model -> u		1231986						
ANR	1233228	Symbol	model -> u . element -> form		1231986						
ANR	1233229	Symbol	data		1231986						
ANR	1233230	Symbol	model -> max_occurs		1231986						
ANR	1233231	Symbol	* model -> u		1231986						
ANR	1233232	Symbol	XSD_FORM_QUALIFIED		1231986						
ANR	1233233	Symbol	get_conversion		1231986						
ANR	1233234	Symbol	( * tmp ) -> min_occurs		1231986						
ANR	1233235	Symbol	ht		1231986						
ANR	1233236	Symbol	TSRMLS_DC		1231986						
ANR	1233237	Symbol	model -> u . content		1231986						
ANR	1233238	Symbol	XSD_ANYXML		1231986						
ANR	1233239	Symbol	zend_hash_get_current_data		1231986						
ANR	1233240	Symbol	tmp		1231986						
ANR	1233241	Symbol	property		1231986						
ANR	1233242	Symbol	model		1231986						
ANR	1233243	Symbol	model -> min_occurs		1231986						
ANR	1233244	Symbol	strict		1231986						
ANR	1233245	Symbol	val		1231986						
ANR	1233246	Symbol	strcmp		1231986						
ANR	1233247	Symbol	ret		1231986						
ANR	1233248	Symbol	NULL		1231986						
ANR	1233249	Symbol	model -> u . element -> nillable		1231986						
ANR	1233250	Symbol	* model		1231986						
ANR	1233251	Symbol	node		1231986						
ANR	1233252	Symbol	model -> u . element		1231986						
ANR	1233253	Symbol	SOAP_LITERAL		1231986						
ANR	1233254	Symbol	style		1231986						
ANR	1233255	Symbol	& tmp		1231986						
ANR	1233256	Symbol	model -> u . element -> name		1231986						
ANR	1233257	Symbol	object		1231986						
ANR	1233258	Symbol	BAD_CAST		1231986						
ANR	1233259	Symbol	* tmp		1231986						
ANR	1233260	Symbol	zend_hash_get_current_data_ex		1231986						
ANR	1233261	Symbol	* * model		1231986						
ANR	1233262	Symbol	nsp		1231986						
ANR	1233263	Symbol	Z_TYPE_PP		1231986						
ANR	1233264	Symbol	tmp_ret		1231986						
ANR	1233265	Symbol	IS_NULL		1231986						
ANR	1233266	Symbol	IS_ARRAY		1231986						
ANR	1233267	Symbol	pos		1231986						
ANR	1233268	Symbol	model -> u . element -> fixed		1231986						
ANR	1233269	Symbol	enc		1231986						
ANR	1233270	Symbol	property -> children		1231986						
ANR	1233271	Symbol	Z_ARRVAL_P		1231986						
ANR	1233272	Symbol	* property -> children		1231986						
ANR	1233273	Symbol	model -> u . element -> encode		1231986						
ANR	1233274	Symbol	* * property		1231986						
ANR	1233275	Symbol	SUCCESS		1231986						
ANR	1233276	Symbol	* property		1231986						
ANR	1233277	Symbol	encode_add_ns		1231986						
ANR	1233278	Symbol	is_map		1231986						
ANR	1233279	Symbol	xmlNewNode		1231986						
ANR	1233280	Symbol	* * tmp		1231986						
ANR	1233281	Symbol	Z_TYPE_P		1231986						
ANR	1233282	Symbol	model -> kind		1231986						
ANR	1233283	Symbol	E_ERROR		1231986						
ANR	1233284	Symbol	* model -> u . element		1231986						
ANR	1233285	Symbol	model -> u . element -> namens		1231986						
ANR	1233286	Symbol	property -> children -> content		1231986						
ANR	1233287	Symbol	& pos		1231986						
ANR	1233288	Function	model_array_element	1862:0:61419:62180							
ANR	1233289	FunctionDef	model_array_element (sdlContentModelPtr model)		1233288	0					
ANR	1233290	CompoundStatement		1863:0:61483:62180	1233288	0					
ANR	1233291	SwitchStatement	switch ( model -> kind )		1233288	0					
ANR	1233292	Condition	model -> kind	1864:9:61494:61504	1233288	0	True				
ANR	1233293	PtrMemberAccess	model -> kind		1233288	0					
ANR	1233294	Identifier	model		1233288	0					
ANR	1233295	Identifier	kind		1233288	1					
ANR	1233296	CompoundStatement		2:22:23:23	1233288	1					
ANR	1233297	Label	case XSD_CONTENT_ELEMENT :	1865:2:61511:61535	1233288	0	True				
ANR	1233298	Identifier	XSD_CONTENT_ELEMENT		1233288	0					
ANR	1233299	CompoundStatement		3:28:53:53	1233288	1					
ANR	1233300	IfStatement	if ( model -> max_occurs == - 1 || model -> max_occurs > 1 )		1233288	0					
ANR	1233301	Condition	model -> max_occurs == - 1 || model -> max_occurs > 1	1866:7:61546:61593	1233288	0	True				
ANR	1233302	OrExpression	model -> max_occurs == - 1 || model -> max_occurs > 1		1233288	0		||			
ANR	1233303	EqualityExpression	model -> max_occurs == - 1		1233288	0		==			
ANR	1233304	PtrMemberAccess	model -> max_occurs		1233288	0					
ANR	1233305	Identifier	model		1233288	0					
ANR	1233306	Identifier	max_occurs		1233288	1					
ANR	1233307	UnaryOperationExpression	- 1		1233288	1					
ANR	1233308	UnaryOperator	-		1233288	0					
ANR	1233309	PrimaryExpression	1		1233288	1					
ANR	1233310	RelationalExpression	model -> max_occurs > 1		1233288	1		>			
ANR	1233311	PtrMemberAccess	model -> max_occurs		1233288	0					
ANR	1233312	Identifier	model		1233288	0					
ANR	1233313	Identifier	max_occurs		1233288	1					
ANR	1233314	PrimaryExpression	1		1233288	1					
ANR	1233315	CompoundStatement		4:57:112:112	1233288	1					
ANR	1233316	ReturnStatement	return model -> u . element ;	1867:5:61603:61626	1233288	0	True				
ANR	1233317	MemberAccess	model -> u . element		1233288	0					
ANR	1233318	PtrMemberAccess	model -> u		1233288	0					
ANR	1233319	Identifier	model		1233288	0					
ANR	1233320	Identifier	u		1233288	1					
ANR	1233321	Identifier	element		1233288	1					
ANR	1233322	ElseStatement	else		1233288	0					
ANR	1233323	CompoundStatement		6:10:154:154	1233288	0					
ANR	1233324	ReturnStatement	return NULL ;	1869:5:61645:61656	1233288	0	True				
ANR	1233325	Identifier	NULL		1233288	0					
ANR	1233326	Label	case XSD_CONTENT_SEQUENCE :	1872:2:61669:61694	1233288	2	True				
ANR	1233327	Identifier	XSD_CONTENT_SEQUENCE		1233288	0					
ANR	1233328	Label	case XSD_CONTENT_ALL :	1873:2:61698:61718	1233288	3	True				
ANR	1233329	Identifier	XSD_CONTENT_ALL		1233288	0					
ANR	1233330	Label	case XSD_CONTENT_CHOICE :	1874:2:61722:61745	1233288	4	True				
ANR	1233331	Identifier	XSD_CONTENT_CHOICE		1233288	0					
ANR	1233332	CompoundStatement		14:3:296:312	1233288	5					
ANR	1233333	IdentifierDeclStatement	sdlContentModelPtr * tmp ;	1875:3:61752:61775	1233288	0	True				
ANR	1233334	IdentifierDecl	* tmp		1233288	0					
ANR	1233335	IdentifierDeclType	sdlContentModelPtr *		1233288	0					
ANR	1233336	Identifier	tmp		1233288	1					
ANR	1233337	IdentifierDeclStatement	HashPosition pos ;	1876:3:61780:61796	1233288	1	True				
ANR	1233338	IdentifierDecl	pos		1233288	0					
ANR	1233339	IdentifierDeclType	HashPosition		1233288	0					
ANR	1233340	Identifier	pos		1233288	1					
ANR	1233341	IfStatement	if ( zend_hash_num_elements ( model -> u . content ) != 1 )		1233288	2					
ANR	1233342	Condition	zend_hash_num_elements ( model -> u . content ) != 1	1878:7:61806:61850	1233288	0	True				
ANR	1233343	EqualityExpression	zend_hash_num_elements ( model -> u . content ) != 1		1233288	0		!=			
ANR	1233344	CallExpression	zend_hash_num_elements ( model -> u . content )		1233288	0					
ANR	1233345	Callee	zend_hash_num_elements		1233288	0					
ANR	1233346	Identifier	zend_hash_num_elements		1233288	0					
ANR	1233347	ArgumentList	model -> u . content		1233288	1					
ANR	1233348	Argument	model -> u . content		1233288	0					
ANR	1233349	MemberAccess	model -> u . content		1233288	0					
ANR	1233350	PtrMemberAccess	model -> u		1233288	0					
ANR	1233351	Identifier	model		1233288	0					
ANR	1233352	Identifier	u		1233288	1					
ANR	1233353	Identifier	content		1233288	1					
ANR	1233354	PrimaryExpression	1		1233288	1					
ANR	1233355	CompoundStatement		16:54:369:369	1233288	1					
ANR	1233356	ReturnStatement	return NULL ;	1879:5:61860:61871	1233288	0	True				
ANR	1233357	Identifier	NULL		1233288	0					
ANR	1233358	ExpressionStatement	"zend_hash_internal_pointer_reset_ex ( model -> u . content , & pos )"	1881:3:61881:61940	1233288	3	True				
ANR	1233359	CallExpression	"zend_hash_internal_pointer_reset_ex ( model -> u . content , & pos )"		1233288	0					
ANR	1233360	Callee	zend_hash_internal_pointer_reset_ex		1233288	0					
ANR	1233361	Identifier	zend_hash_internal_pointer_reset_ex		1233288	0					
ANR	1233362	ArgumentList	model -> u . content		1233288	1					
ANR	1233363	Argument	model -> u . content		1233288	0					
ANR	1233364	MemberAccess	model -> u . content		1233288	0					
ANR	1233365	PtrMemberAccess	model -> u		1233288	0					
ANR	1233366	Identifier	model		1233288	0					
ANR	1233367	Identifier	u		1233288	1					
ANR	1233368	Identifier	content		1233288	1					
ANR	1233369	Argument	& pos		1233288	1					
ANR	1233370	UnaryOperationExpression	& pos		1233288	0					
ANR	1233371	UnaryOperator	&		1233288	0					
ANR	1233372	Identifier	pos		1233288	1					
ANR	1233373	ExpressionStatement	"zend_hash_get_current_data_ex ( model -> u . content , ( void * * ) & tmp , & pos )"	1882:3:61945:62012	1233288	4	True				
ANR	1233374	CallExpression	"zend_hash_get_current_data_ex ( model -> u . content , ( void * * ) & tmp , & pos )"		1233288	0					
ANR	1233375	Callee	zend_hash_get_current_data_ex		1233288	0					
ANR	1233376	Identifier	zend_hash_get_current_data_ex		1233288	0					
ANR	1233377	ArgumentList	model -> u . content		1233288	1					
ANR	1233378	Argument	model -> u . content		1233288	0					
ANR	1233379	MemberAccess	model -> u . content		1233288	0					
ANR	1233380	PtrMemberAccess	model -> u		1233288	0					
ANR	1233381	Identifier	model		1233288	0					
ANR	1233382	Identifier	u		1233288	1					
ANR	1233383	Identifier	content		1233288	1					
ANR	1233384	Argument	( void * * ) & tmp		1233288	1					
ANR	1233385	CastExpression	( void * * ) & tmp		1233288	0					
ANR	1233386	CastTarget	void * *		1233288	0					
ANR	1233387	UnaryOperationExpression	& tmp		1233288	1					
ANR	1233388	UnaryOperator	&		1233288	0					
ANR	1233389	Identifier	tmp		1233288	1					
ANR	1233390	Argument	& pos		1233288	2					
ANR	1233391	UnaryOperationExpression	& pos		1233288	0					
ANR	1233392	UnaryOperator	&		1233288	0					
ANR	1233393	Identifier	pos		1233288	1					
ANR	1233394	ReturnStatement	return model_array_element ( * tmp ) ;	1883:3:62017:62049	1233288	5	True				
ANR	1233395	CallExpression	model_array_element ( * tmp )		1233288	0					
ANR	1233396	Callee	model_array_element		1233288	0					
ANR	1233397	Identifier	model_array_element		1233288	0					
ANR	1233398	ArgumentList	* tmp		1233288	1					
ANR	1233399	Argument	* tmp		1233288	0					
ANR	1233400	UnaryOperationExpression	* tmp		1233288	0					
ANR	1233401	UnaryOperator	*		1233288	0					
ANR	1233402	Identifier	tmp		1233288	1					
ANR	1233403	Label	case XSD_CONTENT_GROUP :	1885:2:62057:62079	1233288	6	True				
ANR	1233404	Identifier	XSD_CONTENT_GROUP		1233288	0					
ANR	1233405	CompoundStatement		23:26:597:597	1233288	7					
ANR	1233406	ReturnStatement	return model_array_element ( model -> u . group -> model ) ;	1886:3:62086:62135	1233288	0	True				
ANR	1233407	CallExpression	model_array_element ( model -> u . group -> model )		1233288	0					
ANR	1233408	Callee	model_array_element		1233288	0					
ANR	1233409	Identifier	model_array_element		1233288	0					
ANR	1233410	ArgumentList	model -> u . group -> model		1233288	1					
ANR	1233411	Argument	model -> u . group -> model		1233288	0					
ANR	1233412	PtrMemberAccess	model -> u . group -> model		1233288	0					
ANR	1233413	MemberAccess	model -> u . group		1233288	0					
ANR	1233414	PtrMemberAccess	model -> u		1233288	0					
ANR	1233415	Identifier	model		1233288	0					
ANR	1233416	Identifier	u		1233288	1					
ANR	1233417	Identifier	group		1233288	1					
ANR	1233418	Identifier	model		1233288	1					
ANR	1233419	Label	default :	1888:2:62143:62150	1233288	8	True				
ANR	1233420	Identifier	default		1233288	0					
ANR	1233421	BreakStatement	break ;	1889:4:62156:62161	1233288	9	True				
ANR	1233422	ReturnStatement	return NULL ;	1891:1:62167:62178	1233288	1	True				
ANR	1233423	Identifier	NULL		1233288	0					
ANR	1233424	ReturnType	static sdlTypePtr		1233288	1					
ANR	1233425	Identifier	model_array_element		1233288	2					
ANR	1233426	ParameterList	sdlContentModelPtr model		1233288	3					
ANR	1233427	Parameter	sdlContentModelPtr model	1862:38:61457:61480	1233288	0	True				
ANR	1233428	ParameterType	sdlContentModelPtr		1233288	0					
ANR	1233429	Identifier	model		1233288	1					
ANR	1233430	CFGEntryNode	ENTRY		1233288		True				
ANR	1233431	CFGExitNode	EXIT		1233288		True				
ANR	1233432	Symbol	* tmp		1233288						
ANR	1233433	Symbol	model -> u		1233288						
ANR	1233434	Symbol	NULL		1233288						
ANR	1233435	Symbol	model -> max_occurs		1233288						
ANR	1233436	Symbol	zend_hash_num_elements		1233288						
ANR	1233437	Symbol	* model		1233288						
ANR	1233438	Symbol	* model -> u		1233288						
ANR	1233439	Symbol	* * model		1233288						
ANR	1233440	Symbol	model_array_element		1233288						
ANR	1233441	Symbol	model -> u . content		1233288						
ANR	1233442	Symbol	* model -> u . group		1233288						
ANR	1233443	Symbol	model -> kind		1233288						
ANR	1233444	Symbol	model -> u . element		1233288						
ANR	1233445	Symbol	model -> u . group -> model		1233288						
ANR	1233446	Symbol	pos		1233288						
ANR	1233447	Symbol	tmp		1233288						
ANR	1233448	Symbol	model		1233288						
ANR	1233449	Symbol	& tmp		1233288						
ANR	1233450	Symbol	& pos		1233288						
ANR	1233451	Symbol	model -> u . group		1233288						
ANR	1233452	Function	to_xml_object	1894:0:62183:68666							
ANR	1233453	FunctionDef	"to_xml_object (encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1233452	0					
ANR	1233454	CompoundStatement		1895:0:62287:68666	1233452	0					
ANR	1233455	IdentifierDeclStatement	xmlNodePtr xmlParam ;	1896:1:62290:62309	1233452	0	True				
ANR	1233456	IdentifierDecl	xmlParam		1233452	0					
ANR	1233457	IdentifierDeclType	xmlNodePtr		1233452	0					
ANR	1233458	Identifier	xmlParam		1233452	1					
ANR	1233459	IdentifierDeclStatement	HashTable * prop = NULL ;	1897:1:62312:62334	1233452	1	True				
ANR	1233460	IdentifierDecl	* prop = NULL		1233452	0					
ANR	1233461	IdentifierDeclType	HashTable *		1233452	0					
ANR	1233462	Identifier	prop		1233452	1					
ANR	1233463	AssignmentExpression	* prop = NULL		1233452	2		=			
ANR	1233464	Identifier	NULL		1233452	0					
ANR	1233465	Identifier	NULL		1233452	1					
ANR	1233466	IdentifierDeclStatement	int i ;	1898:1:62337:62342	1233452	2	True				
ANR	1233467	IdentifierDecl	i		1233452	0					
ANR	1233468	IdentifierDeclType	int		1233452	0					
ANR	1233469	Identifier	i		1233452	1					
ANR	1233470	IdentifierDeclStatement	sdlTypePtr sdlType = type -> sdl_type ;	1899:1:62345:62380	1233452	3	True				
ANR	1233471	IdentifierDecl	sdlType = type -> sdl_type		1233452	0					
ANR	1233472	IdentifierDeclType	sdlTypePtr		1233452	0					
ANR	1233473	Identifier	sdlType		1233452	1					
ANR	1233474	AssignmentExpression	sdlType = type -> sdl_type		1233452	2		=			
ANR	1233475	Identifier	sdlType		1233452	0					
ANR	1233476	PtrMemberAccess	type -> sdl_type		1233452	1					
ANR	1233477	Identifier	type		1233452	0					
ANR	1233478	Identifier	sdl_type		1233452	1					
ANR	1233479	IfStatement	if ( ! data || Z_TYPE_P ( data ) == IS_NULL )		1233452	4					
ANR	1233480	Condition	! data || Z_TYPE_P ( data ) == IS_NULL	1901:5:62388:62421	1233452	0	True				
ANR	1233481	OrExpression	! data || Z_TYPE_P ( data ) == IS_NULL		1233452	0		||			
ANR	1233482	UnaryOperationExpression	! data		1233452	0					
ANR	1233483	UnaryOperator	!		1233452	0					
ANR	1233484	Identifier	data		1233452	1					
ANR	1233485	EqualityExpression	Z_TYPE_P ( data ) == IS_NULL		1233452	1		==			
ANR	1233486	CallExpression	Z_TYPE_P ( data )		1233452	0					
ANR	1233487	Callee	Z_TYPE_P		1233452	0					
ANR	1233488	Identifier	Z_TYPE_P		1233452	0					
ANR	1233489	ArgumentList	data		1233452	1					
ANR	1233490	Argument	data		1233452	0					
ANR	1233491	Identifier	data		1233452	0					
ANR	1233492	Identifier	IS_NULL		1233452	1					
ANR	1233493	CompoundStatement		7:41:136:136	1233452	1					
ANR	1233494	ExpressionStatement	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1902:2:62428:62474	1233452	0	True				
ANR	1233495	AssignmentExpression	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1233452	0		=			
ANR	1233496	Identifier	xmlParam		1233452	0					
ANR	1233497	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1233452	1					
ANR	1233498	Callee	xmlNewNode		1233452	0					
ANR	1233499	Identifier	xmlNewNode		1233452	0					
ANR	1233500	ArgumentList	NULL		1233452	1					
ANR	1233501	Argument	NULL		1233452	0					
ANR	1233502	Identifier	NULL		1233452	0					
ANR	1233503	Argument	"BAD_CAST ( ""BOGUS"" )"		1233452	1					
ANR	1233504	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1233452	0					
ANR	1233505	Callee	BAD_CAST		1233452	0					
ANR	1233506	Identifier	BAD_CAST		1233452	0					
ANR	1233507	ArgumentList	"""BOGUS"""		1233452	1					
ANR	1233508	Argument	"""BOGUS"""		1233452	0					
ANR	1233509	PrimaryExpression	"""BOGUS"""		1233452	0					
ANR	1233510	ExpressionStatement	"xmlAddChild ( parent , xmlParam )"	1903:2:62478:62507	1233452	1	True				
ANR	1233511	CallExpression	"xmlAddChild ( parent , xmlParam )"		1233452	0					
ANR	1233512	Callee	xmlAddChild		1233452	0					
ANR	1233513	Identifier	xmlAddChild		1233452	0					
ANR	1233514	ArgumentList	parent		1233452	1					
ANR	1233515	Argument	parent		1233452	0					
ANR	1233516	Identifier	parent		1233452	0					
ANR	1233517	Argument	xmlParam		1233452	1					
ANR	1233518	Identifier	xmlParam		1233452	0					
ANR	1233519	IfStatement	if ( style == SOAP_ENCODED )		1233452	2					
ANR	1233520	Condition	style == SOAP_ENCODED	1904:6:62515:62535	1233452	0	True				
ANR	1233521	EqualityExpression	style == SOAP_ENCODED		1233452	0		==			
ANR	1233522	Identifier	style		1233452	0					
ANR	1233523	Identifier	SOAP_ENCODED		1233452	1					
ANR	1233524	CompoundStatement		10:29:250:250	1233452	1					
ANR	1233525	ExpressionStatement	set_xsi_nil ( xmlParam )	1905:3:62543:62564	1233452	0	True				
ANR	1233526	CallExpression	set_xsi_nil ( xmlParam )		1233452	0					
ANR	1233527	Callee	set_xsi_nil		1233452	0					
ANR	1233528	Identifier	set_xsi_nil		1233452	0					
ANR	1233529	ArgumentList	xmlParam		1233452	1					
ANR	1233530	Argument	xmlParam		1233452	0					
ANR	1233531	Identifier	xmlParam		1233452	0					
ANR	1233532	ExpressionStatement	"set_ns_and_type ( xmlParam , type )"	1906:3:62569:62600	1233452	1	True				
ANR	1233533	CallExpression	"set_ns_and_type ( xmlParam , type )"		1233452	0					
ANR	1233534	Callee	set_ns_and_type		1233452	0					
ANR	1233535	Identifier	set_ns_and_type		1233452	0					
ANR	1233536	ArgumentList	xmlParam		1233452	1					
ANR	1233537	Argument	xmlParam		1233452	0					
ANR	1233538	Identifier	xmlParam		1233452	0					
ANR	1233539	Argument	type		1233452	1					
ANR	1233540	Identifier	type		1233452	0					
ANR	1233541	ReturnStatement	return xmlParam ;	1908:2:62608:62623	1233452	3	True				
ANR	1233542	Identifier	xmlParam		1233452	0					
ANR	1233543	IfStatement	if ( Z_TYPE_P ( data ) == IS_OBJECT )		1233452	5					
ANR	1233544	Condition	Z_TYPE_P ( data ) == IS_OBJECT	1911:5:62634:62660	1233452	0	True				
ANR	1233545	EqualityExpression	Z_TYPE_P ( data ) == IS_OBJECT		1233452	0		==			
ANR	1233546	CallExpression	Z_TYPE_P ( data )		1233452	0					
ANR	1233547	Callee	Z_TYPE_P		1233452	0					
ANR	1233548	Identifier	Z_TYPE_P		1233452	0					
ANR	1233549	ArgumentList	data		1233452	1					
ANR	1233550	Argument	data		1233452	0					
ANR	1233551	Identifier	data		1233452	0					
ANR	1233552	Identifier	IS_OBJECT		1233452	1					
ANR	1233553	CompoundStatement		17:34:375:375	1233452	1					
ANR	1233554	ExpressionStatement	prop = Z_OBJPROP_P ( data )	1912:2:62667:62691	1233452	0	True				
ANR	1233555	AssignmentExpression	prop = Z_OBJPROP_P ( data )		1233452	0		=			
ANR	1233556	Identifier	prop		1233452	0					
ANR	1233557	CallExpression	Z_OBJPROP_P ( data )		1233452	1					
ANR	1233558	Callee	Z_OBJPROP_P		1233452	0					
ANR	1233559	Identifier	Z_OBJPROP_P		1233452	0					
ANR	1233560	ArgumentList	data		1233452	1					
ANR	1233561	Argument	data		1233452	0					
ANR	1233562	Identifier	data		1233452	0					
ANR	1233563	ElseStatement	else		1233452	0					
ANR	1233564	IfStatement	if ( Z_TYPE_P ( data ) == IS_ARRAY )		1233452	0					
ANR	1233565	Condition	Z_TYPE_P ( data ) == IS_ARRAY	1913:12:62705:62730	1233452	0	True				
ANR	1233566	EqualityExpression	Z_TYPE_P ( data ) == IS_ARRAY		1233452	0		==			
ANR	1233567	CallExpression	Z_TYPE_P ( data )		1233452	0					
ANR	1233568	Callee	Z_TYPE_P		1233452	0					
ANR	1233569	Identifier	Z_TYPE_P		1233452	0					
ANR	1233570	ArgumentList	data		1233452	1					
ANR	1233571	Argument	data		1233452	0					
ANR	1233572	Identifier	data		1233452	0					
ANR	1233573	Identifier	IS_ARRAY		1233452	1					
ANR	1233574	CompoundStatement		19:40:445:445	1233452	1					
ANR	1233575	ExpressionStatement	prop = Z_ARRVAL_P ( data )	1914:2:62737:62760	1233452	0	True				
ANR	1233576	AssignmentExpression	prop = Z_ARRVAL_P ( data )		1233452	0		=			
ANR	1233577	Identifier	prop		1233452	0					
ANR	1233578	CallExpression	Z_ARRVAL_P ( data )		1233452	1					
ANR	1233579	Callee	Z_ARRVAL_P		1233452	0					
ANR	1233580	Identifier	Z_ARRVAL_P		1233452	0					
ANR	1233581	ArgumentList	data		1233452	1					
ANR	1233582	Argument	data		1233452	0					
ANR	1233583	Identifier	data		1233452	0					
ANR	1233584	IfStatement	if ( sdlType )		1233452	6					
ANR	1233585	Condition	sdlType	1917:5:62771:62777	1233452	0	True				
ANR	1233586	Identifier	sdlType		1233452	0					
ANR	1233587	CompoundStatement		23:14:492:492	1233452	1					
ANR	1233588	IfStatement	if ( sdlType -> kind == XSD_TYPEKIND_RESTRICTION && sdlType -> encode && type != & sdlType -> encode -> details )		1233452	0					
ANR	1233589	Condition	sdlType -> kind == XSD_TYPEKIND_RESTRICTION && sdlType -> encode && type != & sdlType -> encode -> details	1918:6:62788:62890	1233452	0	True				
ANR	1233590	AndExpression	sdlType -> kind == XSD_TYPEKIND_RESTRICTION && sdlType -> encode && type != & sdlType -> encode -> details		1233452	0		&&			
ANR	1233591	EqualityExpression	sdlType -> kind == XSD_TYPEKIND_RESTRICTION		1233452	0		==			
ANR	1233592	PtrMemberAccess	sdlType -> kind		1233452	0					
ANR	1233593	Identifier	sdlType		1233452	0					
ANR	1233594	Identifier	kind		1233452	1					
ANR	1233595	Identifier	XSD_TYPEKIND_RESTRICTION		1233452	1					
ANR	1233596	AndExpression	sdlType -> encode && type != & sdlType -> encode -> details		1233452	1		&&			
ANR	1233597	PtrMemberAccess	sdlType -> encode		1233452	0					
ANR	1233598	Identifier	sdlType		1233452	0					
ANR	1233599	Identifier	encode		1233452	1					
ANR	1233600	EqualityExpression	type != & sdlType -> encode -> details		1233452	1		!=			
ANR	1233601	Identifier	type		1233452	0					
ANR	1233602	UnaryOperationExpression	& sdlType -> encode -> details		1233452	1					
ANR	1233603	UnaryOperator	&		1233452	0					
ANR	1233604	PtrMemberAccess	sdlType -> encode -> details		1233452	1					
ANR	1233605	PtrMemberAccess	sdlType -> encode		1233452	0					
ANR	1233606	Identifier	sdlType		1233452	0					
ANR	1233607	Identifier	encode		1233452	1					
ANR	1233608	Identifier	details		1233452	1					
ANR	1233609	CompoundStatement		26:3:610:623	1233452	1					
ANR	1233610	IdentifierDeclStatement	encodePtr enc ;	1920:3:62898:62911	1233452	0	True				
ANR	1233611	IdentifierDecl	enc		1233452	0					
ANR	1233612	IdentifierDeclType	encodePtr		1233452	0					
ANR	1233613	Identifier	enc		1233452	1					
ANR	1233614	ExpressionStatement	enc = sdlType -> encode	1922:3:62917:62938	1233452	1	True				
ANR	1233615	AssignmentExpression	enc = sdlType -> encode		1233452	0		=			
ANR	1233616	Identifier	enc		1233452	0					
ANR	1233617	PtrMemberAccess	sdlType -> encode		1233452	1					
ANR	1233618	Identifier	sdlType		1233452	0					
ANR	1233619	Identifier	encode		1233452	1					
ANR	1233620	WhileStatement	while ( enc && enc -> details . sdl_type && enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION )		1233452	2					
ANR	1233621	Condition	enc && enc -> details . sdl_type && enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION	1923:10:62950:63166	1233452	0	True				
ANR	1233622	AndExpression	enc && enc -> details . sdl_type && enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1233452	0		&&			
ANR	1233623	Identifier	enc		1233452	0					
ANR	1233624	AndExpression	enc -> details . sdl_type && enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1233452	1		&&			
ANR	1233625	MemberAccess	enc -> details . sdl_type		1233452	0					
ANR	1233626	PtrMemberAccess	enc -> details		1233452	0					
ANR	1233627	Identifier	enc		1233452	0					
ANR	1233628	Identifier	details		1233452	1					
ANR	1233629	Identifier	sdl_type		1233452	1					
ANR	1233630	AndExpression	enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1233452	1		&&			
ANR	1233631	EqualityExpression	enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE		1233452	0		!=			
ANR	1233632	PtrMemberAccess	enc -> details . sdl_type -> kind		1233452	0					
ANR	1233633	MemberAccess	enc -> details . sdl_type		1233452	0					
ANR	1233634	PtrMemberAccess	enc -> details		1233452	0					
ANR	1233635	Identifier	enc		1233452	0					
ANR	1233636	Identifier	details		1233452	1					
ANR	1233637	Identifier	sdl_type		1233452	1					
ANR	1233638	Identifier	kind		1233452	1					
ANR	1233639	Identifier	XSD_TYPEKIND_SIMPLE		1233452	1					
ANR	1233640	AndExpression	enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1233452	1		&&			
ANR	1233641	EqualityExpression	enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST		1233452	0		!=			
ANR	1233642	PtrMemberAccess	enc -> details . sdl_type -> kind		1233452	0					
ANR	1233643	MemberAccess	enc -> details . sdl_type		1233452	0					
ANR	1233644	PtrMemberAccess	enc -> details		1233452	0					
ANR	1233645	Identifier	enc		1233452	0					
ANR	1233646	Identifier	details		1233452	1					
ANR	1233647	Identifier	sdl_type		1233452	1					
ANR	1233648	Identifier	kind		1233452	1					
ANR	1233649	Identifier	XSD_TYPEKIND_LIST		1233452	1					
ANR	1233650	EqualityExpression	enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1233452	1		!=			
ANR	1233651	PtrMemberAccess	enc -> details . sdl_type -> kind		1233452	0					
ANR	1233652	MemberAccess	enc -> details . sdl_type		1233452	0					
ANR	1233653	PtrMemberAccess	enc -> details		1233452	0					
ANR	1233654	Identifier	enc		1233452	0					
ANR	1233655	Identifier	details		1233452	1					
ANR	1233656	Identifier	sdl_type		1233452	1					
ANR	1233657	Identifier	kind		1233452	1					
ANR	1233658	Identifier	XSD_TYPEKIND_UNION		1233452	1					
ANR	1233659	CompoundStatement		32:61:881:881	1233452	1					
ANR	1233660	ExpressionStatement	enc = enc -> details . sdl_type -> encode	1927:4:63175:63210	1233452	0	True				
ANR	1233661	AssignmentExpression	enc = enc -> details . sdl_type -> encode		1233452	0		=			
ANR	1233662	Identifier	enc		1233452	0					
ANR	1233663	PtrMemberAccess	enc -> details . sdl_type -> encode		1233452	1					
ANR	1233664	MemberAccess	enc -> details . sdl_type		1233452	0					
ANR	1233665	PtrMemberAccess	enc -> details		1233452	0					
ANR	1233666	Identifier	enc		1233452	0					
ANR	1233667	Identifier	details		1233452	1					
ANR	1233668	Identifier	sdl_type		1233452	1					
ANR	1233669	Identifier	encode		1233452	1					
ANR	1233670	IfStatement	if ( enc )		1233452	3					
ANR	1233671	Condition	enc	1929:7:63224:63226	1233452	0	True				
ANR	1233672	Identifier	enc		1233452	0					
ANR	1233673	CompoundStatement		35:12:941:941	1233452	1					
ANR	1233674	Statement	zval	1930:4:63235:63238	1233452	0	True				
ANR	1233675	Statement	*	1930:9:63240:63240	1233452	1	True				
ANR	1233676	Statement	tmp	1930:10:63241:63243	1233452	2	True				
ANR	1233677	Statement	=	1930:14:63245:63245	1233452	3	True				
ANR	1233678	Statement	get_zval_property	1930:16:63247:63263	1233452	4	True				
ANR	1233679	Statement	(	1930:33:63264:63264	1233452	5	True				
ANR	1233680	Statement	data	1930:34:63265:63268	1233452	6	True				
ANR	1233681	Statement	","	1930:38:63269:63269	1233452	7	True				
ANR	1233682	Statement	"""_"""	1930:40:63271:63273	1233452	8	True				
ANR	1233683	Statement	TSRMLS_CC	1930:44:63275:63283	1233452	9	True				
ANR	1233684	Statement	)	1930:53:63284:63284	1233452	10	True				
ANR	1233685	ExpressionStatement		1930:54:63285:63285	1233452	11	True				
ANR	1233686	IfStatement	if ( tmp )		1233452	12					
ANR	1233687	Condition	tmp	1931:8:63295:63297	1233452	0	True				
ANR	1233688	Identifier	tmp		1233452	0					
ANR	1233689	CompoundStatement		37:13:1012:1012	1233452	1					
ANR	1233690	Statement	xmlParam	1932:5:63307:63314	1233452	0	True				
ANR	1233691	Statement	=	1932:14:63316:63316	1233452	1	True				
ANR	1233692	Statement	master_to_xml	1932:16:63318:63330	1233452	2	True				
ANR	1233693	Statement	(	1932:29:63331:63331	1233452	3	True				
ANR	1233694	Statement	enc	1932:30:63332:63334	1233452	4	True				
ANR	1233695	Statement	","	1932:33:63335:63335	1233452	5	True				
ANR	1233696	Statement	tmp	1932:35:63337:63339	1233452	6	True				
ANR	1233697	Statement	","	1932:38:63340:63340	1233452	7	True				
ANR	1233698	Statement	style	1932:40:63342:63346	1233452	8	True				
ANR	1233699	Statement	","	1932:45:63347:63347	1233452	9	True				
ANR	1233700	Statement	parent	1932:47:63349:63354	1233452	10	True				
ANR	1233701	Statement	TSRMLS_CC	1932:54:63356:63364	1233452	11	True				
ANR	1233702	Statement	)	1932:63:63365:63365	1233452	12	True				
ANR	1233703	ExpressionStatement		1932:64:63366:63366	1233452	13	True				
ANR	1233704	ElseStatement	else		1233452	0					
ANR	1233705	IfStatement	if ( prop == NULL )		1233452	0					
ANR	1233706	Condition	prop == NULL	1933:15:63383:63394	1233452	0	True				
ANR	1233707	EqualityExpression	prop == NULL		1233452	0		==			
ANR	1233708	Identifier	prop		1233452	0					
ANR	1233709	Identifier	NULL		1233452	1					
ANR	1233710	CompoundStatement		39:29:1109:1109	1233452	1					
ANR	1233711	Statement	xmlParam	1934:5:63404:63411	1233452	0	True				
ANR	1233712	Statement	=	1934:14:63413:63413	1233452	1	True				
ANR	1233713	Statement	master_to_xml	1934:16:63415:63427	1233452	2	True				
ANR	1233714	Statement	(	1934:29:63428:63428	1233452	3	True				
ANR	1233715	Statement	enc	1934:30:63429:63431	1233452	4	True				
ANR	1233716	Statement	","	1934:33:63432:63432	1233452	5	True				
ANR	1233717	Statement	data	1934:35:63434:63437	1233452	6	True				
ANR	1233718	Statement	","	1934:39:63438:63438	1233452	7	True				
ANR	1233719	Statement	style	1934:41:63440:63444	1233452	8	True				
ANR	1233720	Statement	","	1934:46:63445:63445	1233452	9	True				
ANR	1233721	Statement	parent	1934:48:63447:63452	1233452	10	True				
ANR	1233722	Statement	TSRMLS_CC	1934:55:63454:63462	1233452	11	True				
ANR	1233723	Statement	)	1934:64:63463:63463	1233452	12	True				
ANR	1233724	ExpressionStatement		1934:65:63464:63464	1233452	13	True				
ANR	1233725	ElseStatement	else		1233452	0					
ANR	1233726	CompoundStatement		41:11:1189:1189	1233452	0					
ANR	1233727	ExpressionStatement	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1936:5:63484:63530	1233452	0	True				
ANR	1233728	AssignmentExpression	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1233452	0		=			
ANR	1233729	Identifier	xmlParam		1233452	0					
ANR	1233730	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1233452	1					
ANR	1233731	Callee	xmlNewNode		1233452	0					
ANR	1233732	Identifier	xmlNewNode		1233452	0					
ANR	1233733	ArgumentList	NULL		1233452	1					
ANR	1233734	Argument	NULL		1233452	0					
ANR	1233735	Identifier	NULL		1233452	0					
ANR	1233736	Argument	"BAD_CAST ( ""BOGUS"" )"		1233452	1					
ANR	1233737	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1233452	0					
ANR	1233738	Callee	BAD_CAST		1233452	0					
ANR	1233739	Identifier	BAD_CAST		1233452	0					
ANR	1233740	ArgumentList	"""BOGUS"""		1233452	1					
ANR	1233741	Argument	"""BOGUS"""		1233452	0					
ANR	1233742	PrimaryExpression	"""BOGUS"""		1233452	0					
ANR	1233743	ExpressionStatement	"xmlAddChild ( parent , xmlParam )"	1937:5:63537:63566	1233452	1	True				
ANR	1233744	CallExpression	"xmlAddChild ( parent , xmlParam )"		1233452	0					
ANR	1233745	Callee	xmlAddChild		1233452	0					
ANR	1233746	Identifier	xmlAddChild		1233452	0					
ANR	1233747	ArgumentList	parent		1233452	1					
ANR	1233748	Argument	parent		1233452	0					
ANR	1233749	Identifier	parent		1233452	0					
ANR	1233750	Argument	xmlParam		1233452	1					
ANR	1233751	Identifier	xmlParam		1233452	0					
ANR	1233752	ElseStatement	else		1233452	0					
ANR	1233753	CompoundStatement		45:10:1296:1296	1233452	0					
ANR	1233754	ExpressionStatement	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1940:4:63590:63636	1233452	0	True				
ANR	1233755	AssignmentExpression	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1233452	0		=			
ANR	1233756	Identifier	xmlParam		1233452	0					
ANR	1233757	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1233452	1					
ANR	1233758	Callee	xmlNewNode		1233452	0					
ANR	1233759	Identifier	xmlNewNode		1233452	0					
ANR	1233760	ArgumentList	NULL		1233452	1					
ANR	1233761	Argument	NULL		1233452	0					
ANR	1233762	Identifier	NULL		1233452	0					
ANR	1233763	Argument	"BAD_CAST ( ""BOGUS"" )"		1233452	1					
ANR	1233764	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1233452	0					
ANR	1233765	Callee	BAD_CAST		1233452	0					
ANR	1233766	Identifier	BAD_CAST		1233452	0					
ANR	1233767	ArgumentList	"""BOGUS"""		1233452	1					
ANR	1233768	Argument	"""BOGUS"""		1233452	0					
ANR	1233769	PrimaryExpression	"""BOGUS"""		1233452	0					
ANR	1233770	ExpressionStatement	"xmlAddChild ( parent , xmlParam )"	1941:4:63642:63671	1233452	1	True				
ANR	1233771	CallExpression	"xmlAddChild ( parent , xmlParam )"		1233452	0					
ANR	1233772	Callee	xmlAddChild		1233452	0					
ANR	1233773	Identifier	xmlAddChild		1233452	0					
ANR	1233774	ArgumentList	parent		1233452	1					
ANR	1233775	Argument	parent		1233452	0					
ANR	1233776	Identifier	parent		1233452	0					
ANR	1233777	Argument	xmlParam		1233452	1					
ANR	1233778	Identifier	xmlParam		1233452	0					
ANR	1233779	ElseStatement	else		1233452	0					
ANR	1233780	IfStatement	if ( sdlType -> kind == XSD_TYPEKIND_EXTENSION && sdlType -> encode && type != & sdlType -> encode -> details )		1233452	0					
ANR	1233781	Condition	sdlType -> kind == XSD_TYPEKIND_EXTENSION && sdlType -> encode && type != & sdlType -> encode -> details	1943:13:63691:63798	1233452	0	True				
ANR	1233782	AndExpression	sdlType -> kind == XSD_TYPEKIND_EXTENSION && sdlType -> encode && type != & sdlType -> encode -> details		1233452	0		&&			
ANR	1233783	EqualityExpression	sdlType -> kind == XSD_TYPEKIND_EXTENSION		1233452	0		==			
ANR	1233784	PtrMemberAccess	sdlType -> kind		1233452	0					
ANR	1233785	Identifier	sdlType		1233452	0					
ANR	1233786	Identifier	kind		1233452	1					
ANR	1233787	Identifier	XSD_TYPEKIND_EXTENSION		1233452	1					
ANR	1233788	AndExpression	sdlType -> encode && type != & sdlType -> encode -> details		1233452	1		&&			
ANR	1233789	PtrMemberAccess	sdlType -> encode		1233452	0					
ANR	1233790	Identifier	sdlType		1233452	0					
ANR	1233791	Identifier	encode		1233452	1					
ANR	1233792	EqualityExpression	type != & sdlType -> encode -> details		1233452	1		!=			
ANR	1233793	Identifier	type		1233452	0					
ANR	1233794	UnaryOperationExpression	& sdlType -> encode -> details		1233452	1					
ANR	1233795	UnaryOperator	&		1233452	0					
ANR	1233796	PtrMemberAccess	sdlType -> encode -> details		1233452	1					
ANR	1233797	PtrMemberAccess	sdlType -> encode		1233452	0					
ANR	1233798	Identifier	sdlType		1233452	0					
ANR	1233799	Identifier	encode		1233452	1					
ANR	1233800	Identifier	details		1233452	1					
ANR	1233801	CompoundStatement		50:67:1513:1513	1233452	1					
ANR	1233802	IfStatement	if ( sdlType -> encode -> details . sdl_type && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_UNION )		1233452	0					
ANR	1233803	Condition	sdlType -> encode -> details . sdl_type && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_UNION	1945:7:63810:64058	1233452	0	True				
ANR	1233804	AndExpression	sdlType -> encode -> details . sdl_type && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1233452	0		&&			
ANR	1233805	MemberAccess	sdlType -> encode -> details . sdl_type		1233452	0					
ANR	1233806	PtrMemberAccess	sdlType -> encode -> details		1233452	0					
ANR	1233807	PtrMemberAccess	sdlType -> encode		1233452	0					
ANR	1233808	Identifier	sdlType		1233452	0					
ANR	1233809	Identifier	encode		1233452	1					
ANR	1233810	Identifier	details		1233452	1					
ANR	1233811	Identifier	sdl_type		1233452	1					
ANR	1233812	AndExpression	sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1233452	1		&&			
ANR	1233813	EqualityExpression	sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE		1233452	0		!=			
ANR	1233814	PtrMemberAccess	sdlType -> encode -> details . sdl_type -> kind		1233452	0					
ANR	1233815	MemberAccess	sdlType -> encode -> details . sdl_type		1233452	0					
ANR	1233816	PtrMemberAccess	sdlType -> encode -> details		1233452	0					
ANR	1233817	PtrMemberAccess	sdlType -> encode		1233452	0					
ANR	1233818	Identifier	sdlType		1233452	0					
ANR	1233819	Identifier	encode		1233452	1					
ANR	1233820	Identifier	details		1233452	1					
ANR	1233821	Identifier	sdl_type		1233452	1					
ANR	1233822	Identifier	kind		1233452	1					
ANR	1233823	Identifier	XSD_TYPEKIND_SIMPLE		1233452	1					
ANR	1233824	AndExpression	sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1233452	1		&&			
ANR	1233825	EqualityExpression	sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_LIST		1233452	0		!=			
ANR	1233826	PtrMemberAccess	sdlType -> encode -> details . sdl_type -> kind		1233452	0					
ANR	1233827	MemberAccess	sdlType -> encode -> details . sdl_type		1233452	0					
ANR	1233828	PtrMemberAccess	sdlType -> encode -> details		1233452	0					
ANR	1233829	PtrMemberAccess	sdlType -> encode		1233452	0					
ANR	1233830	Identifier	sdlType		1233452	0					
ANR	1233831	Identifier	encode		1233452	1					
ANR	1233832	Identifier	details		1233452	1					
ANR	1233833	Identifier	sdl_type		1233452	1					
ANR	1233834	Identifier	kind		1233452	1					
ANR	1233835	Identifier	XSD_TYPEKIND_LIST		1233452	1					
ANR	1233836	EqualityExpression	sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1233452	1		!=			
ANR	1233837	PtrMemberAccess	sdlType -> encode -> details . sdl_type -> kind		1233452	0					
ANR	1233838	MemberAccess	sdlType -> encode -> details . sdl_type		1233452	0					
ANR	1233839	PtrMemberAccess	sdlType -> encode -> details		1233452	0					
ANR	1233840	PtrMemberAccess	sdlType -> encode		1233452	0					
ANR	1233841	Identifier	sdlType		1233452	0					
ANR	1233842	Identifier	encode		1233452	1					
ANR	1233843	Identifier	details		1233452	1					
ANR	1233844	Identifier	sdl_type		1233452	1					
ANR	1233845	Identifier	kind		1233452	1					
ANR	1233846	Identifier	XSD_TYPEKIND_UNION		1233452	1					
ANR	1233847	CompoundStatement		54:70:1773:1773	1233452	1					
ANR	1233848	IfStatement	if ( prop )		1233452	0					
ANR	1233849	Condition	prop	1950:8:64072:64075	1233452	0	True				
ANR	1233850	Identifier	prop		1233452	0					
ANR	1233851	ExpressionStatement	prop -> nApplyCount ++	1950:14:64078:64097	1233452	1	True				
ANR	1233852	PostIncDecOperationExpression	prop -> nApplyCount ++		1233452	0					
ANR	1233853	PtrMemberAccess	prop -> nApplyCount		1233452	0					
ANR	1233854	Identifier	prop		1233452	0					
ANR	1233855	Identifier	nApplyCount		1233452	1					
ANR	1233856	IncDec	++		1233452	1					
ANR	1233857	Statement	xmlParam	1951:4:64103:64110	1233452	1	True				
ANR	1233858	Statement	=	1951:13:64112:64112	1233452	2	True				
ANR	1233859	Statement	master_to_xml	1951:15:64114:64126	1233452	3	True				
ANR	1233860	Statement	(	1951:28:64127:64127	1233452	4	True				
ANR	1233861	Statement	sdlType	1951:29:64128:64134	1233452	5	True				
ANR	1233862	Statement	->	1951:36:64135:64136	1233452	6	True				
ANR	1233863	Statement	encode	1951:38:64137:64142	1233452	7	True				
ANR	1233864	Statement	","	1951:44:64143:64143	1233452	8	True				
ANR	1233865	Statement	data	1951:46:64145:64148	1233452	9	True				
ANR	1233866	Statement	","	1951:50:64149:64149	1233452	10	True				
ANR	1233867	Statement	style	1951:52:64151:64155	1233452	11	True				
ANR	1233868	Statement	","	1951:57:64156:64156	1233452	12	True				
ANR	1233869	Statement	parent	1951:59:64158:64163	1233452	13	True				
ANR	1233870	Statement	TSRMLS_CC	1951:66:64165:64173	1233452	14	True				
ANR	1233871	Statement	)	1951:75:64174:64174	1233452	15	True				
ANR	1233872	ExpressionStatement		1951:76:64175:64175	1233452	16	True				
ANR	1233873	IfStatement	if ( prop )		1233452	17					
ANR	1233874	Condition	prop	1952:8:64185:64188	1233452	0	True				
ANR	1233875	Identifier	prop		1233452	0					
ANR	1233876	ExpressionStatement	prop -> nApplyCount --	1952:14:64191:64210	1233452	1	True				
ANR	1233877	PostIncDecOperationExpression	prop -> nApplyCount --		1233452	0					
ANR	1233878	PtrMemberAccess	prop -> nApplyCount		1233452	0					
ANR	1233879	Identifier	prop		1233452	0					
ANR	1233880	Identifier	nApplyCount		1233452	1					
ANR	1233881	IncDec	--		1233452	1					
ANR	1233882	ElseStatement	else		1233452	0					
ANR	1233883	CompoundStatement		59:10:1934:1934	1233452	0					
ANR	1233884	Statement	zval	1954:4:64228:64231	1233452	0	True				
ANR	1233885	Statement	*	1954:9:64233:64233	1233452	1	True				
ANR	1233886	Statement	tmp	1954:10:64234:64236	1233452	2	True				
ANR	1233887	Statement	=	1954:14:64238:64238	1233452	3	True				
ANR	1233888	Statement	get_zval_property	1954:16:64240:64256	1233452	4	True				
ANR	1233889	Statement	(	1954:33:64257:64257	1233452	5	True				
ANR	1233890	Statement	data	1954:34:64258:64261	1233452	6	True				
ANR	1233891	Statement	","	1954:38:64262:64262	1233452	7	True				
ANR	1233892	Statement	"""_"""	1954:40:64264:64266	1233452	8	True				
ANR	1233893	Statement	TSRMLS_CC	1954:44:64268:64276	1233452	9	True				
ANR	1233894	Statement	)	1954:53:64277:64277	1233452	10	True				
ANR	1233895	ExpressionStatement		1954:54:64278:64278	1233452	11	True				
ANR	1233896	IfStatement	if ( tmp )		1233452	12					
ANR	1233897	Condition	tmp	1956:8:64289:64291	1233452	0	True				
ANR	1233898	Identifier	tmp		1233452	0					
ANR	1233899	CompoundStatement		62:13:2006:2006	1233452	1					
ANR	1233900	Statement	xmlParam	1957:5:64301:64308	1233452	0	True				
ANR	1233901	Statement	=	1957:14:64310:64310	1233452	1	True				
ANR	1233902	Statement	master_to_xml	1957:16:64312:64324	1233452	2	True				
ANR	1233903	Statement	(	1957:29:64325:64325	1233452	3	True				
ANR	1233904	Statement	sdlType	1957:30:64326:64332	1233452	4	True				
ANR	1233905	Statement	->	1957:37:64333:64334	1233452	5	True				
ANR	1233906	Statement	encode	1957:39:64335:64340	1233452	6	True				
ANR	1233907	Statement	","	1957:45:64341:64341	1233452	7	True				
ANR	1233908	Statement	tmp	1957:47:64343:64345	1233452	8	True				
ANR	1233909	Statement	","	1957:50:64346:64346	1233452	9	True				
ANR	1233910	Statement	style	1957:52:64348:64352	1233452	10	True				
ANR	1233911	Statement	","	1957:57:64353:64353	1233452	11	True				
ANR	1233912	Statement	parent	1957:59:64355:64360	1233452	12	True				
ANR	1233913	Statement	TSRMLS_CC	1957:66:64362:64370	1233452	13	True				
ANR	1233914	Statement	)	1957:75:64371:64371	1233452	14	True				
ANR	1233915	ExpressionStatement		1957:76:64372:64372	1233452	15	True				
ANR	1233916	ElseStatement	else		1233452	0					
ANR	1233917	IfStatement	if ( prop == NULL )		1233452	0					
ANR	1233918	Condition	prop == NULL	1958:15:64389:64400	1233452	0	True				
ANR	1233919	EqualityExpression	prop == NULL		1233452	0		==			
ANR	1233920	Identifier	prop		1233452	0					
ANR	1233921	Identifier	NULL		1233452	1					
ANR	1233922	CompoundStatement		64:29:2115:2115	1233452	1					
ANR	1233923	Statement	xmlParam	1959:5:64410:64417	1233452	0	True				
ANR	1233924	Statement	=	1959:14:64419:64419	1233452	1	True				
ANR	1233925	Statement	master_to_xml	1959:16:64421:64433	1233452	2	True				
ANR	1233926	Statement	(	1959:29:64434:64434	1233452	3	True				
ANR	1233927	Statement	sdlType	1959:30:64435:64441	1233452	4	True				
ANR	1233928	Statement	->	1959:37:64442:64443	1233452	5	True				
ANR	1233929	Statement	encode	1959:39:64444:64449	1233452	6	True				
ANR	1233930	Statement	","	1959:45:64450:64450	1233452	7	True				
ANR	1233931	Statement	data	1959:47:64452:64455	1233452	8	True				
ANR	1233932	Statement	","	1959:51:64456:64456	1233452	9	True				
ANR	1233933	Statement	style	1959:53:64458:64462	1233452	10	True				
ANR	1233934	Statement	","	1959:58:64463:64463	1233452	11	True				
ANR	1233935	Statement	parent	1959:60:64465:64470	1233452	12	True				
ANR	1233936	Statement	TSRMLS_CC	1959:67:64472:64480	1233452	13	True				
ANR	1233937	Statement	)	1959:76:64481:64481	1233452	14	True				
ANR	1233938	ExpressionStatement		1959:77:64482:64482	1233452	15	True				
ANR	1233939	ElseStatement	else		1233452	0					
ANR	1233940	CompoundStatement		66:11:2207:2207	1233452	0					
ANR	1233941	ExpressionStatement	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1961:5:64502:64548	1233452	0	True				
ANR	1233942	AssignmentExpression	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1233452	0		=			
ANR	1233943	Identifier	xmlParam		1233452	0					
ANR	1233944	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1233452	1					
ANR	1233945	Callee	xmlNewNode		1233452	0					
ANR	1233946	Identifier	xmlNewNode		1233452	0					
ANR	1233947	ArgumentList	NULL		1233452	1					
ANR	1233948	Argument	NULL		1233452	0					
ANR	1233949	Identifier	NULL		1233452	0					
ANR	1233950	Argument	"BAD_CAST ( ""BOGUS"" )"		1233452	1					
ANR	1233951	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1233452	0					
ANR	1233952	Callee	BAD_CAST		1233452	0					
ANR	1233953	Identifier	BAD_CAST		1233452	0					
ANR	1233954	ArgumentList	"""BOGUS"""		1233452	1					
ANR	1233955	Argument	"""BOGUS"""		1233452	0					
ANR	1233956	PrimaryExpression	"""BOGUS"""		1233452	0					
ANR	1233957	ExpressionStatement	"xmlAddChild ( parent , xmlParam )"	1962:5:64555:64584	1233452	1	True				
ANR	1233958	CallExpression	"xmlAddChild ( parent , xmlParam )"		1233452	0					
ANR	1233959	Callee	xmlAddChild		1233452	0					
ANR	1233960	Identifier	xmlAddChild		1233452	0					
ANR	1233961	ArgumentList	parent		1233452	1					
ANR	1233962	Argument	parent		1233452	0					
ANR	1233963	Identifier	parent		1233452	0					
ANR	1233964	Argument	xmlParam		1233452	1					
ANR	1233965	Identifier	xmlParam		1233452	0					
ANR	1233966	ElseStatement	else		1233452	0					
ANR	1233967	CompoundStatement		71:9:2318:2318	1233452	0					
ANR	1233968	ExpressionStatement	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1966:3:64611:64657	1233452	0	True				
ANR	1233969	AssignmentExpression	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1233452	0		=			
ANR	1233970	Identifier	xmlParam		1233452	0					
ANR	1233971	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1233452	1					
ANR	1233972	Callee	xmlNewNode		1233452	0					
ANR	1233973	Identifier	xmlNewNode		1233452	0					
ANR	1233974	ArgumentList	NULL		1233452	1					
ANR	1233975	Argument	NULL		1233452	0					
ANR	1233976	Identifier	NULL		1233452	0					
ANR	1233977	Argument	"BAD_CAST ( ""BOGUS"" )"		1233452	1					
ANR	1233978	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1233452	0					
ANR	1233979	Callee	BAD_CAST		1233452	0					
ANR	1233980	Identifier	BAD_CAST		1233452	0					
ANR	1233981	ArgumentList	"""BOGUS"""		1233452	1					
ANR	1233982	Argument	"""BOGUS"""		1233452	0					
ANR	1233983	PrimaryExpression	"""BOGUS"""		1233452	0					
ANR	1233984	ExpressionStatement	"xmlAddChild ( parent , xmlParam )"	1967:3:64662:64691	1233452	1	True				
ANR	1233985	CallExpression	"xmlAddChild ( parent , xmlParam )"		1233452	0					
ANR	1233986	Callee	xmlAddChild		1233452	0					
ANR	1233987	Identifier	xmlAddChild		1233452	0					
ANR	1233988	ArgumentList	parent		1233452	1					
ANR	1233989	Argument	parent		1233452	0					
ANR	1233990	Identifier	parent		1233452	0					
ANR	1233991	Argument	xmlParam		1233452	1					
ANR	1233992	Identifier	xmlParam		1233452	0					
ANR	1233993	Statement	if	1970:2:64700:64701	1233452	1	True				
ANR	1233994	Statement	(	1970:5:64703:64703	1233452	2	True				
ANR	1233995	Statement	soap_check_zval_ref	1970:6:64704:64722	1233452	3	True				
ANR	1233996	Statement	(	1970:25:64723:64723	1233452	4	True				
ANR	1233997	Statement	data	1970:26:64724:64727	1233452	5	True				
ANR	1233998	Statement	","	1970:30:64728:64728	1233452	6	True				
ANR	1233999	Statement	xmlParam	1970:32:64730:64737	1233452	7	True				
ANR	1234000	Statement	TSRMLS_CC	1970:41:64739:64747	1233452	8	True				
ANR	1234001	Statement	)	1970:50:64748:64748	1233452	9	True				
ANR	1234002	Statement	)	1970:51:64749:64749	1233452	10	True				
ANR	1234003	CompoundStatement		76:53:2463:2463	1233452	11					
ANR	1234004	ReturnStatement	return xmlParam ;	1971:3:64756:64771	1233452	0	True				
ANR	1234005	Identifier	xmlParam		1233452	0					
ANR	1234006	IfStatement	if ( prop != NULL )		1233452	12					
ANR	1234007	Condition	prop != NULL	1973:6:64783:64794	1233452	0	True				
ANR	1234008	EqualityExpression	prop != NULL		1233452	0		!=			
ANR	1234009	Identifier	prop		1233452	0					
ANR	1234010	Identifier	NULL		1233452	1					
ANR	1234011	CompoundStatement		80:3:2514:2533	1233452	1					
ANR	1234012	IdentifierDeclStatement	sdlTypePtr array_el ;	1974:3:64802:64821	1233452	0	True				
ANR	1234013	IdentifierDecl	array_el		1233452	0					
ANR	1234014	IdentifierDeclType	sdlTypePtr		1233452	0					
ANR	1234015	Identifier	array_el		1233452	1					
ANR	1234016	IfStatement	if ( Z_TYPE_P ( data ) == IS_ARRAY && ! is_map ( data ) && sdlType -> attributes == NULL && sdlType -> model != NULL && ( array_el = model_array_element ( sdlType -> model ) ) != NULL )		1233452	1					
ANR	1234017	Condition	Z_TYPE_P ( data ) == IS_ARRAY && ! is_map ( data ) && sdlType -> attributes == NULL && sdlType -> model != NULL && ( array_el = model_array_element ( sdlType -> model ) ) != NULL	1976:7:64831:65022	1233452	0	True				
ANR	1234018	AndExpression	Z_TYPE_P ( data ) == IS_ARRAY && ! is_map ( data ) && sdlType -> attributes == NULL && sdlType -> model != NULL && ( array_el = model_array_element ( sdlType -> model ) ) != NULL		1233452	0		&&			
ANR	1234019	EqualityExpression	Z_TYPE_P ( data ) == IS_ARRAY		1233452	0		==			
ANR	1234020	CallExpression	Z_TYPE_P ( data )		1233452	0					
ANR	1234021	Callee	Z_TYPE_P		1233452	0					
ANR	1234022	Identifier	Z_TYPE_P		1233452	0					
ANR	1234023	ArgumentList	data		1233452	1					
ANR	1234024	Argument	data		1233452	0					
ANR	1234025	Identifier	data		1233452	0					
ANR	1234026	Identifier	IS_ARRAY		1233452	1					
ANR	1234027	AndExpression	! is_map ( data ) && sdlType -> attributes == NULL && sdlType -> model != NULL && ( array_el = model_array_element ( sdlType -> model ) ) != NULL		1233452	1		&&			
ANR	1234028	UnaryOperationExpression	! is_map ( data )		1233452	0					
ANR	1234029	UnaryOperator	!		1233452	0					
ANR	1234030	CallExpression	is_map ( data )		1233452	1					
ANR	1234031	Callee	is_map		1233452	0					
ANR	1234032	Identifier	is_map		1233452	0					
ANR	1234033	ArgumentList	data		1233452	1					
ANR	1234034	Argument	data		1233452	0					
ANR	1234035	Identifier	data		1233452	0					
ANR	1234036	AndExpression	sdlType -> attributes == NULL && sdlType -> model != NULL && ( array_el = model_array_element ( sdlType -> model ) ) != NULL		1233452	1		&&			
ANR	1234037	EqualityExpression	sdlType -> attributes == NULL		1233452	0		==			
ANR	1234038	PtrMemberAccess	sdlType -> attributes		1233452	0					
ANR	1234039	Identifier	sdlType		1233452	0					
ANR	1234040	Identifier	attributes		1233452	1					
ANR	1234041	Identifier	NULL		1233452	1					
ANR	1234042	AndExpression	sdlType -> model != NULL && ( array_el = model_array_element ( sdlType -> model ) ) != NULL		1233452	1		&&			
ANR	1234043	EqualityExpression	sdlType -> model != NULL		1233452	0		!=			
ANR	1234044	PtrMemberAccess	sdlType -> model		1233452	0					
ANR	1234045	Identifier	sdlType		1233452	0					
ANR	1234046	Identifier	model		1233452	1					
ANR	1234047	Identifier	NULL		1233452	1					
ANR	1234048	EqualityExpression	( array_el = model_array_element ( sdlType -> model ) ) != NULL		1233452	1		!=			
ANR	1234049	AssignmentExpression	array_el = model_array_element ( sdlType -> model )		1233452	0		=			
ANR	1234050	Identifier	array_el		1233452	0					
ANR	1234051	CallExpression	model_array_element ( sdlType -> model )		1233452	1					
ANR	1234052	Callee	model_array_element		1233452	0					
ANR	1234053	Identifier	model_array_element		1233452	0					
ANR	1234054	ArgumentList	sdlType -> model		1233452	1					
ANR	1234055	Argument	sdlType -> model		1233452	0					
ANR	1234056	PtrMemberAccess	sdlType -> model		1233452	0					
ANR	1234057	Identifier	sdlType		1233452	0					
ANR	1234058	Identifier	model		1233452	1					
ANR	1234059	Identifier	NULL		1233452	1					
ANR	1234060	CompoundStatement		87:4:2743:2753	1233452	1					
ANR	1234061	IdentifierDeclStatement	zval * * val ;	1981:4:65031:65041	1233452	0	True				
ANR	1234062	IdentifierDecl	* * val		1233452	0					
ANR	1234063	IdentifierDeclType	zval * *		1233452	0					
ANR	1234064	Identifier	val		1233452	1					
ANR	1234065	ExpressionStatement	zend_hash_internal_pointer_reset ( prop )	1983:4:65048:65086	1233452	1	True				
ANR	1234066	CallExpression	zend_hash_internal_pointer_reset ( prop )		1233452	0					
ANR	1234067	Callee	zend_hash_internal_pointer_reset		1233452	0					
ANR	1234068	Identifier	zend_hash_internal_pointer_reset		1233452	0					
ANR	1234069	ArgumentList	prop		1233452	1					
ANR	1234070	Argument	prop		1233452	0					
ANR	1234071	Identifier	prop		1233452	0					
ANR	1234072	WhileStatement	"while ( zend_hash_get_current_data ( prop , ( void * * ) & val ) == SUCCESS )"		1233452	2					
ANR	1234073	Condition	"zend_hash_get_current_data ( prop , ( void * * ) & val ) == SUCCESS"	1984:11:65099:65154	1233452	0	True				
ANR	1234074	EqualityExpression	"zend_hash_get_current_data ( prop , ( void * * ) & val ) == SUCCESS"		1233452	0		==			
ANR	1234075	CallExpression	"zend_hash_get_current_data ( prop , ( void * * ) & val )"		1233452	0					
ANR	1234076	Callee	zend_hash_get_current_data		1233452	0					
ANR	1234077	Identifier	zend_hash_get_current_data		1233452	0					
ANR	1234078	ArgumentList	prop		1233452	1					
ANR	1234079	Argument	prop		1233452	0					
ANR	1234080	Identifier	prop		1233452	0					
ANR	1234081	Argument	( void * * ) & val		1233452	1					
ANR	1234082	CastExpression	( void * * ) & val		1233452	0					
ANR	1234083	CastTarget	void * *		1233452	0					
ANR	1234084	UnaryOperationExpression	& val		1233452	1					
ANR	1234085	UnaryOperator	&		1233452	0					
ANR	1234086	Identifier	val		1233452	1					
ANR	1234087	Identifier	SUCCESS		1233452	1					
ANR	1234088	CompoundStatement		91:5:2876:2895	1233452	1					
ANR	1234089	IdentifierDeclStatement	xmlNodePtr property ;	1985:5:65164:65183	1233452	0	True				
ANR	1234090	IdentifierDecl	property		1233452	0					
ANR	1234091	IdentifierDeclType	xmlNodePtr		1233452	0					
ANR	1234092	Identifier	property		1233452	1					
ANR	1234093	IfStatement	if ( Z_TYPE_PP ( val ) == IS_NULL && array_el -> nillable )		1233452	1					
ANR	1234094	Condition	Z_TYPE_PP ( val ) == IS_NULL && array_el -> nillable	1986:9:65194:65240	1233452	0	True				
ANR	1234095	AndExpression	Z_TYPE_PP ( val ) == IS_NULL && array_el -> nillable		1233452	0		&&			
ANR	1234096	EqualityExpression	Z_TYPE_PP ( val ) == IS_NULL		1233452	0		==			
ANR	1234097	CallExpression	Z_TYPE_PP ( val )		1233452	0					
ANR	1234098	Callee	Z_TYPE_PP		1233452	0					
ANR	1234099	Identifier	Z_TYPE_PP		1233452	0					
ANR	1234100	ArgumentList	val		1233452	1					
ANR	1234101	Argument	val		1233452	0					
ANR	1234102	Identifier	val		1233452	0					
ANR	1234103	Identifier	IS_NULL		1233452	1					
ANR	1234104	PtrMemberAccess	array_el -> nillable		1233452	1					
ANR	1234105	Identifier	array_el		1233452	0					
ANR	1234106	Identifier	nillable		1233452	1					
ANR	1234107	CompoundStatement		92:58:2955:2955	1233452	1					
ANR	1234108	ExpressionStatement	"property = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1987:6:65251:65297	1233452	0	True				
ANR	1234109	AssignmentExpression	"property = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1233452	0		=			
ANR	1234110	Identifier	property		1233452	0					
ANR	1234111	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1233452	1					
ANR	1234112	Callee	xmlNewNode		1233452	0					
ANR	1234113	Identifier	xmlNewNode		1233452	0					
ANR	1234114	ArgumentList	NULL		1233452	1					
ANR	1234115	Argument	NULL		1233452	0					
ANR	1234116	Identifier	NULL		1233452	0					
ANR	1234117	Argument	"BAD_CAST ( ""BOGUS"" )"		1233452	1					
ANR	1234118	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1233452	0					
ANR	1234119	Callee	BAD_CAST		1233452	0					
ANR	1234120	Identifier	BAD_CAST		1233452	0					
ANR	1234121	ArgumentList	"""BOGUS"""		1233452	1					
ANR	1234122	Argument	"""BOGUS"""		1233452	0					
ANR	1234123	PrimaryExpression	"""BOGUS"""		1233452	0					
ANR	1234124	ExpressionStatement	"xmlAddChild ( xmlParam , property )"	1988:6:65305:65336	1233452	1	True				
ANR	1234125	CallExpression	"xmlAddChild ( xmlParam , property )"		1233452	0					
ANR	1234126	Callee	xmlAddChild		1233452	0					
ANR	1234127	Identifier	xmlAddChild		1233452	0					
ANR	1234128	ArgumentList	xmlParam		1233452	1					
ANR	1234129	Argument	xmlParam		1233452	0					
ANR	1234130	Identifier	xmlParam		1233452	0					
ANR	1234131	Argument	property		1233452	1					
ANR	1234132	Identifier	property		1233452	0					
ANR	1234133	ExpressionStatement	set_xsi_nil ( property )	1989:6:65344:65365	1233452	2	True				
ANR	1234134	CallExpression	set_xsi_nil ( property )		1233452	0					
ANR	1234135	Callee	set_xsi_nil		1233452	0					
ANR	1234136	Identifier	set_xsi_nil		1233452	0					
ANR	1234137	ArgumentList	property		1233452	1					
ANR	1234138	Argument	property		1233452	0					
ANR	1234139	Identifier	property		1233452	0					
ANR	1234140	ElseStatement	else		1233452	0					
ANR	1234141	CompoundStatement		96:12:3091:3091	1233452	0					
ANR	1234142	Statement	property	1991:6:65387:65394	1233452	0	True				
ANR	1234143	Statement	=	1991:15:65396:65396	1233452	1	True				
ANR	1234144	Statement	master_to_xml	1991:17:65398:65410	1233452	2	True				
ANR	1234145	Statement	(	1991:30:65411:65411	1233452	3	True				
ANR	1234146	Statement	array_el	1991:31:65412:65419	1233452	4	True				
ANR	1234147	Statement	->	1991:39:65420:65421	1233452	5	True				
ANR	1234148	Statement	encode	1991:41:65422:65427	1233452	6	True				
ANR	1234149	Statement	","	1991:47:65428:65428	1233452	7	True				
ANR	1234150	Statement	*	1991:49:65430:65430	1233452	8	True				
ANR	1234151	Statement	val	1991:50:65431:65433	1233452	9	True				
ANR	1234152	Statement	","	1991:53:65434:65434	1233452	10	True				
ANR	1234153	Statement	style	1991:55:65436:65440	1233452	11	True				
ANR	1234154	Statement	","	1991:60:65441:65441	1233452	12	True				
ANR	1234155	Statement	xmlParam	1991:62:65443:65450	1233452	13	True				
ANR	1234156	Statement	TSRMLS_CC	1991:71:65452:65460	1233452	14	True				
ANR	1234157	Statement	)	1991:80:65461:65461	1233452	15	True				
ANR	1234158	ExpressionStatement		1991:81:65462:65462	1233452	16	True				
ANR	1234159	ExpressionStatement	"xmlNodeSetName ( property , BAD_CAST ( array_el -> name ) )"	1993:5:65476:65526	1233452	2	True				
ANR	1234160	CallExpression	"xmlNodeSetName ( property , BAD_CAST ( array_el -> name ) )"		1233452	0					
ANR	1234161	Callee	xmlNodeSetName		1233452	0					
ANR	1234162	Identifier	xmlNodeSetName		1233452	0					
ANR	1234163	ArgumentList	property		1233452	1					
ANR	1234164	Argument	property		1233452	0					
ANR	1234165	Identifier	property		1233452	0					
ANR	1234166	Argument	BAD_CAST ( array_el -> name )		1233452	1					
ANR	1234167	CallExpression	BAD_CAST ( array_el -> name )		1233452	0					
ANR	1234168	Callee	BAD_CAST		1233452	0					
ANR	1234169	Identifier	BAD_CAST		1233452	0					
ANR	1234170	ArgumentList	array_el -> name		1233452	1					
ANR	1234171	Argument	array_el -> name		1233452	0					
ANR	1234172	PtrMemberAccess	array_el -> name		1233452	0					
ANR	1234173	Identifier	array_el		1233452	0					
ANR	1234174	Identifier	name		1233452	1					
ANR	1234175	IfStatement	if ( style == SOAP_LITERAL && array_el -> namens && array_el -> form == XSD_FORM_QUALIFIED )		1233452	3					
ANR	1234176	Condition	style == SOAP_LITERAL && array_el -> namens && array_el -> form == XSD_FORM_QUALIFIED	1994:9:65537:65633	1233452	0	True				
ANR	1234177	AndExpression	style == SOAP_LITERAL && array_el -> namens && array_el -> form == XSD_FORM_QUALIFIED		1233452	0		&&			
ANR	1234178	EqualityExpression	style == SOAP_LITERAL		1233452	0		==			
ANR	1234179	Identifier	style		1233452	0					
ANR	1234180	Identifier	SOAP_LITERAL		1233452	1					
ANR	1234181	AndExpression	array_el -> namens && array_el -> form == XSD_FORM_QUALIFIED		1233452	1		&&			
ANR	1234182	PtrMemberAccess	array_el -> namens		1233452	0					
ANR	1234183	Identifier	array_el		1233452	0					
ANR	1234184	Identifier	namens		1233452	1					
ANR	1234185	EqualityExpression	array_el -> form == XSD_FORM_QUALIFIED		1233452	1		==			
ANR	1234186	PtrMemberAccess	array_el -> form		1233452	0					
ANR	1234187	Identifier	array_el		1233452	0					
ANR	1234188	Identifier	form		1233452	1					
ANR	1234189	Identifier	XSD_FORM_QUALIFIED		1233452	1					
ANR	1234190	CompoundStatement		103:6:3356:3412	1233452	1					
ANR	1234191	IdentifierDeclStatement	"xmlNsPtr nsp = encode_add_ns ( property , array_el -> namens ) ;"	1997:6:65644:65700	1233452	0	True				
ANR	1234192	IdentifierDecl	"nsp = encode_add_ns ( property , array_el -> namens )"		1233452	0					
ANR	1234193	IdentifierDeclType	xmlNsPtr		1233452	0					
ANR	1234194	Identifier	nsp		1233452	1					
ANR	1234195	AssignmentExpression	"nsp = encode_add_ns ( property , array_el -> namens )"		1233452	2		=			
ANR	1234196	Identifier	nsp		1233452	0					
ANR	1234197	CallExpression	"encode_add_ns ( property , array_el -> namens )"		1233452	1					
ANR	1234198	Callee	encode_add_ns		1233452	0					
ANR	1234199	Identifier	encode_add_ns		1233452	0					
ANR	1234200	ArgumentList	property		1233452	1					
ANR	1234201	Argument	property		1233452	0					
ANR	1234202	Identifier	property		1233452	0					
ANR	1234203	Argument	array_el -> namens		1233452	1					
ANR	1234204	PtrMemberAccess	array_el -> namens		1233452	0					
ANR	1234205	Identifier	array_el		1233452	0					
ANR	1234206	Identifier	namens		1233452	1					
ANR	1234207	ExpressionStatement	"xmlSetNs ( property , nsp )"	1998:6:65708:65731	1233452	1	True				
ANR	1234208	CallExpression	"xmlSetNs ( property , nsp )"		1233452	0					
ANR	1234209	Callee	xmlSetNs		1233452	0					
ANR	1234210	Identifier	xmlSetNs		1233452	0					
ANR	1234211	ArgumentList	property		1233452	1					
ANR	1234212	Argument	property		1233452	0					
ANR	1234213	Identifier	property		1233452	0					
ANR	1234214	Argument	nsp		1233452	1					
ANR	1234215	Identifier	nsp		1233452	0					
ANR	1234216	ExpressionStatement	zend_hash_move_forward ( prop )	2000:5:65745:65773	1233452	4	True				
ANR	1234217	CallExpression	zend_hash_move_forward ( prop )		1233452	0					
ANR	1234218	Callee	zend_hash_move_forward		1233452	0					
ANR	1234219	Identifier	zend_hash_move_forward		1233452	0					
ANR	1234220	ArgumentList	prop		1233452	1					
ANR	1234221	Argument	prop		1233452	0					
ANR	1234222	Identifier	prop		1233452	0					
ANR	1234223	ElseStatement	else		1233452	0					
ANR	1234224	IfStatement	if ( sdlType -> model )		1233452	0					
ANR	1234225	Condition	sdlType -> model	2002:14:65795:65808	1233452	0	True				
ANR	1234226	PtrMemberAccess	sdlType -> model		1233452	0					
ANR	1234227	Identifier	sdlType		1233452	0					
ANR	1234228	Identifier	model		1233452	1					
ANR	1234229	CompoundStatement		108:30:3523:3523	1233452	1					
ANR	1234230	Statement	model_to_xml_object	2003:4:65817:65835	1233452	0	True				
ANR	1234231	Statement	(	2003:23:65836:65836	1233452	1	True				
ANR	1234232	Statement	xmlParam	2003:24:65837:65844	1233452	2	True				
ANR	1234233	Statement	","	2003:32:65845:65845	1233452	3	True				
ANR	1234234	Statement	sdlType	2003:34:65847:65853	1233452	4	True				
ANR	1234235	Statement	->	2003:41:65854:65855	1233452	5	True				
ANR	1234236	Statement	model	2003:43:65856:65860	1233452	6	True				
ANR	1234237	Statement	","	2003:48:65861:65861	1233452	7	True				
ANR	1234238	Statement	data	2003:50:65863:65866	1233452	8	True				
ANR	1234239	Statement	","	2003:54:65867:65867	1233452	9	True				
ANR	1234240	Statement	style	2003:56:65869:65873	1233452	10	True				
ANR	1234241	Statement	","	2003:61:65874:65874	1233452	11	True				
ANR	1234242	Statement	1	2003:63:65876:65876	1233452	12	True				
ANR	1234243	Statement	TSRMLS_CC	2003:65:65878:65886	1233452	13	True				
ANR	1234244	Statement	)	2003:74:65887:65887	1233452	14	True				
ANR	1234245	ExpressionStatement		2003:75:65888:65888	1233452	15	True				
ANR	1234246	IfStatement	if ( sdlType -> attributes )		1233452	2					
ANR	1234247	Condition	sdlType -> attributes	2005:7:65902:65920	1233452	0	True				
ANR	1234248	PtrMemberAccess	sdlType -> attributes		1233452	0					
ANR	1234249	Identifier	sdlType		1233452	0					
ANR	1234250	Identifier	attributes		1233452	1					
ANR	1234251	CompoundStatement		114:4:3685:3701	1233452	1					
ANR	1234252	IdentifierDeclStatement	sdlAttributePtr * attr ;	2006:4:65929:65950	1233452	0	True				
ANR	1234253	IdentifierDecl	* attr		1233452	0					
ANR	1234254	IdentifierDeclType	sdlAttributePtr *		1233452	0					
ANR	1234255	Identifier	attr		1233452	1					
ANR	1234256	IdentifierDeclStatement	zval * zattr ;	2007:4:65956:65967	1233452	1	True				
ANR	1234257	IdentifierDecl	* zattr		1233452	0					
ANR	1234258	IdentifierDeclType	zval *		1233452	0					
ANR	1234259	Identifier	zattr		1233452	1					
ANR	1234260	IdentifierDeclStatement	HashPosition pos ;	2008:4:65973:65989	1233452	2	True				
ANR	1234261	IdentifierDecl	pos		1233452	0					
ANR	1234262	IdentifierDeclType	HashPosition		1233452	0					
ANR	1234263	Identifier	pos		1233452	1					
ANR	1234264	ExpressionStatement	"zend_hash_internal_pointer_reset_ex ( sdlType -> attributes , & pos )"	2010:4:65996:66058	1233452	3	True				
ANR	1234265	CallExpression	"zend_hash_internal_pointer_reset_ex ( sdlType -> attributes , & pos )"		1233452	0					
ANR	1234266	Callee	zend_hash_internal_pointer_reset_ex		1233452	0					
ANR	1234267	Identifier	zend_hash_internal_pointer_reset_ex		1233452	0					
ANR	1234268	ArgumentList	sdlType -> attributes		1233452	1					
ANR	1234269	Argument	sdlType -> attributes		1233452	0					
ANR	1234270	PtrMemberAccess	sdlType -> attributes		1233452	0					
ANR	1234271	Identifier	sdlType		1233452	0					
ANR	1234272	Identifier	attributes		1233452	1					
ANR	1234273	Argument	& pos		1233452	1					
ANR	1234274	UnaryOperationExpression	& pos		1233452	0					
ANR	1234275	UnaryOperator	&		1233452	0					
ANR	1234276	Identifier	pos		1233452	1					
ANR	1234277	WhileStatement	"while ( zend_hash_get_current_data_ex ( sdlType -> attributes , ( void * * ) & attr , & pos ) == SUCCESS )"		1233452	4					
ANR	1234278	Condition	"zend_hash_get_current_data_ex ( sdlType -> attributes , ( void * * ) & attr , & pos ) == SUCCESS"	2011:11:66071:66152	1233452	0	True				
ANR	1234279	EqualityExpression	"zend_hash_get_current_data_ex ( sdlType -> attributes , ( void * * ) & attr , & pos ) == SUCCESS"		1233452	0		==			
ANR	1234280	CallExpression	"zend_hash_get_current_data_ex ( sdlType -> attributes , ( void * * ) & attr , & pos )"		1233452	0					
ANR	1234281	Callee	zend_hash_get_current_data_ex		1233452	0					
ANR	1234282	Identifier	zend_hash_get_current_data_ex		1233452	0					
ANR	1234283	ArgumentList	sdlType -> attributes		1233452	1					
ANR	1234284	Argument	sdlType -> attributes		1233452	0					
ANR	1234285	PtrMemberAccess	sdlType -> attributes		1233452	0					
ANR	1234286	Identifier	sdlType		1233452	0					
ANR	1234287	Identifier	attributes		1233452	1					
ANR	1234288	Argument	( void * * ) & attr		1233452	1					
ANR	1234289	CastExpression	( void * * ) & attr		1233452	0					
ANR	1234290	CastTarget	void * *		1233452	0					
ANR	1234291	UnaryOperationExpression	& attr		1233452	1					
ANR	1234292	UnaryOperator	&		1233452	0					
ANR	1234293	Identifier	attr		1233452	1					
ANR	1234294	Argument	& pos		1233452	2					
ANR	1234295	UnaryOperationExpression	& pos		1233452	0					
ANR	1234296	UnaryOperator	&		1233452	0					
ANR	1234297	Identifier	pos		1233452	1					
ANR	1234298	Identifier	SUCCESS		1233452	1					
ANR	1234299	CompoundStatement		117:95:3867:3867	1233452	1					
ANR	1234300	IfStatement	if ( ( * attr ) -> name )		1233452	0					
ANR	1234301	Condition	( * attr ) -> name	2012:9:66166:66178	1233452	0	True				
ANR	1234302	PtrMemberAccess	( * attr ) -> name		1233452	0					
ANR	1234303	UnaryOperationExpression	* attr		1233452	0					
ANR	1234304	UnaryOperator	*		1233452	0					
ANR	1234305	Identifier	attr		1233452	1					
ANR	1234306	Identifier	name		1233452	1					
ANR	1234307	CompoundStatement		118:24:3893:3893	1233452	1					
ANR	1234308	Statement	zattr	2013:6:66189:66193	1233452	0	True				
ANR	1234309	Statement	=	2013:12:66195:66195	1233452	1	True				
ANR	1234310	Statement	get_zval_property	2013:14:66197:66213	1233452	2	True				
ANR	1234311	Statement	(	2013:31:66214:66214	1233452	3	True				
ANR	1234312	Statement	data	2013:32:66215:66218	1233452	4	True				
ANR	1234313	Statement	","	2013:36:66219:66219	1233452	5	True				
ANR	1234314	Statement	(	2013:38:66221:66221	1233452	6	True				
ANR	1234315	Statement	*	2013:39:66222:66222	1233452	7	True				
ANR	1234316	Statement	attr	2013:40:66223:66226	1233452	8	True				
ANR	1234317	Statement	)	2013:44:66227:66227	1233452	9	True				
ANR	1234318	Statement	->	2013:45:66228:66229	1233452	10	True				
ANR	1234319	Statement	name	2013:47:66230:66233	1233452	11	True				
ANR	1234320	Statement	TSRMLS_CC	2013:52:66235:66243	1233452	12	True				
ANR	1234321	Statement	)	2013:61:66244:66244	1233452	13	True				
ANR	1234322	ExpressionStatement		2013:62:66245:66245	1233452	14	True				
ANR	1234323	IfStatement	if ( zattr )		1233452	15					
ANR	1234324	Condition	zattr	2014:10:66257:66261	1233452	0	True				
ANR	1234325	Identifier	zattr		1233452	0					
ANR	1234326	CompoundStatement		121:7:3985:4001	1233452	1					
ANR	1234327	IdentifierDeclStatement	xmlNodePtr dummy ;	2015:7:66273:66289	1233452	0	True				
ANR	1234328	IdentifierDecl	dummy		1233452	0					
ANR	1234329	IdentifierDeclType	xmlNodePtr		1233452	0					
ANR	1234330	Identifier	dummy		1233452	1					
ANR	1234331	Statement	dummy	2017:7:66299:66303	1233452	1	True				
ANR	1234332	Statement	=	2017:13:66305:66305	1233452	2	True				
ANR	1234333	Statement	master_to_xml	2017:15:66307:66319	1233452	3	True				
ANR	1234334	Statement	(	2017:28:66320:66320	1233452	4	True				
ANR	1234335	Statement	(	2017:29:66321:66321	1233452	5	True				
ANR	1234336	Statement	*	2017:30:66322:66322	1233452	6	True				
ANR	1234337	Statement	attr	2017:31:66323:66326	1233452	7	True				
ANR	1234338	Statement	)	2017:35:66327:66327	1233452	8	True				
ANR	1234339	Statement	->	2017:36:66328:66329	1233452	9	True				
ANR	1234340	Statement	encode	2017:38:66330:66335	1233452	10	True				
ANR	1234341	Statement	","	2017:44:66336:66336	1233452	11	True				
ANR	1234342	Statement	zattr	2017:46:66338:66342	1233452	12	True				
ANR	1234343	Statement	","	2017:51:66343:66343	1233452	13	True				
ANR	1234344	Statement	SOAP_LITERAL	2017:53:66345:66356	1233452	14	True				
ANR	1234345	Statement	","	2017:65:66357:66357	1233452	15	True				
ANR	1234346	Statement	xmlParam	2017:67:66359:66366	1233452	16	True				
ANR	1234347	Statement	TSRMLS_CC	2017:76:66368:66376	1233452	17	True				
ANR	1234348	Statement	)	2017:85:66377:66377	1233452	18	True				
ANR	1234349	ExpressionStatement		2017:86:66378:66378	1233452	19	True				
ANR	1234350	IfStatement	if ( dummy -> children && dummy -> children -> content )		1233452	20					
ANR	1234351	Condition	dummy -> children && dummy -> children -> content	2018:11:66391:66433	1233452	0	True				
ANR	1234352	AndExpression	dummy -> children && dummy -> children -> content		1233452	0		&&			
ANR	1234353	PtrMemberAccess	dummy -> children		1233452	0					
ANR	1234354	Identifier	dummy		1233452	0					
ANR	1234355	Identifier	children		1233452	1					
ANR	1234356	PtrMemberAccess	dummy -> children -> content		1233452	1					
ANR	1234357	PtrMemberAccess	dummy -> children		1233452	0					
ANR	1234358	Identifier	dummy		1233452	0					
ANR	1234359	Identifier	children		1233452	1					
ANR	1234360	Identifier	content		1233452	1					
ANR	1234361	CompoundStatement		124:56:4148:4148	1233452	1					
ANR	1234362	IfStatement	"if ( ( * attr ) -> fixed && strcmp ( ( * attr ) -> fixed , ( char * ) dummy -> children -> content ) != 0 )"		1233452	0					
ANR	1234363	Condition	"( * attr ) -> fixed && strcmp ( ( * attr ) -> fixed , ( char * ) dummy -> children -> content ) != 0"	2019:12:66450:66527	1233452	0	True				
ANR	1234364	AndExpression	"( * attr ) -> fixed && strcmp ( ( * attr ) -> fixed , ( char * ) dummy -> children -> content ) != 0"		1233452	0		&&			
ANR	1234365	PtrMemberAccess	( * attr ) -> fixed		1233452	0					
ANR	1234366	UnaryOperationExpression	* attr		1233452	0					
ANR	1234367	UnaryOperator	*		1233452	0					
ANR	1234368	Identifier	attr		1233452	1					
ANR	1234369	Identifier	fixed		1233452	1					
ANR	1234370	EqualityExpression	"strcmp ( ( * attr ) -> fixed , ( char * ) dummy -> children -> content ) != 0"		1233452	1		!=			
ANR	1234371	CallExpression	"strcmp ( ( * attr ) -> fixed , ( char * ) dummy -> children -> content )"		1233452	0					
ANR	1234372	Callee	strcmp		1233452	0					
ANR	1234373	Identifier	strcmp		1233452	0					
ANR	1234374	ArgumentList	( * attr ) -> fixed		1233452	1					
ANR	1234375	Argument	( * attr ) -> fixed		1233452	0					
ANR	1234376	PtrMemberAccess	( * attr ) -> fixed		1233452	0					
ANR	1234377	UnaryOperationExpression	* attr		1233452	0					
ANR	1234378	UnaryOperator	*		1233452	0					
ANR	1234379	Identifier	attr		1233452	1					
ANR	1234380	Identifier	fixed		1233452	1					
ANR	1234381	Argument	( char * ) dummy -> children -> content		1233452	1					
ANR	1234382	CastExpression	( char * ) dummy -> children -> content		1233452	0					
ANR	1234383	CastTarget	char *		1233452	0					
ANR	1234384	PtrMemberAccess	dummy -> children -> content		1233452	1					
ANR	1234385	PtrMemberAccess	dummy -> children		1233452	0					
ANR	1234386	Identifier	dummy		1233452	0					
ANR	1234387	Identifier	children		1233452	1					
ANR	1234388	Identifier	content		1233452	1					
ANR	1234389	PrimaryExpression	0		1233452	1					
ANR	1234390	CompoundStatement		125:92:4242:4242	1233452	1					
ANR	1234391	ExpressionStatement	"soap_error3 ( E_ERROR , ""Encoding: Attribute '%s' has fixed value '%s' (value '%s' is not allowed)"" , ( * attr ) -> name , ( * attr ) -> fixed , dummy -> children -> content )"	2020:9:66541:66695	1233452	0	True				
ANR	1234392	CallExpression	"soap_error3 ( E_ERROR , ""Encoding: Attribute '%s' has fixed value '%s' (value '%s' is not allowed)"" , ( * attr ) -> name , ( * attr ) -> fixed , dummy -> children -> content )"		1233452	0					
ANR	1234393	Callee	soap_error3		1233452	0					
ANR	1234394	Identifier	soap_error3		1233452	0					
ANR	1234395	ArgumentList	E_ERROR		1233452	1					
ANR	1234396	Argument	E_ERROR		1233452	0					
ANR	1234397	Identifier	E_ERROR		1233452	0					
ANR	1234398	Argument	"""Encoding: Attribute '%s' has fixed value '%s' (value '%s' is not allowed)"""		1233452	1					
ANR	1234399	PrimaryExpression	"""Encoding: Attribute '%s' has fixed value '%s' (value '%s' is not allowed)"""		1233452	0					
ANR	1234400	Argument	( * attr ) -> name		1233452	2					
ANR	1234401	PtrMemberAccess	( * attr ) -> name		1233452	0					
ANR	1234402	UnaryOperationExpression	* attr		1233452	0					
ANR	1234403	UnaryOperator	*		1233452	0					
ANR	1234404	Identifier	attr		1233452	1					
ANR	1234405	Identifier	name		1233452	1					
ANR	1234406	Argument	( * attr ) -> fixed		1233452	3					
ANR	1234407	PtrMemberAccess	( * attr ) -> fixed		1233452	0					
ANR	1234408	UnaryOperationExpression	* attr		1233452	0					
ANR	1234409	UnaryOperator	*		1233452	0					
ANR	1234410	Identifier	attr		1233452	1					
ANR	1234411	Identifier	fixed		1233452	1					
ANR	1234412	Argument	dummy -> children -> content		1233452	4					
ANR	1234413	PtrMemberAccess	dummy -> children -> content		1233452	0					
ANR	1234414	PtrMemberAccess	dummy -> children		1233452	0					
ANR	1234415	Identifier	dummy		1233452	0					
ANR	1234416	Identifier	children		1233452	1					
ANR	1234417	Identifier	content		1233452	1					
ANR	1234418	IfStatement	"if ( ( * attr ) -> namens && ( ! strncmp ( ( * attr ) -> namens , XML_NAMESPACE , sizeof ( XML_NAMESPACE ) ) || ( * attr ) -> form == XSD_FORM_QUALIFIED ) )"		1233452	1					
ANR	1234419	Condition	"( * attr ) -> namens && ( ! strncmp ( ( * attr ) -> namens , XML_NAMESPACE , sizeof ( XML_NAMESPACE ) ) || ( * attr ) -> form == XSD_FORM_QUALIFIED )"	2025:12:66849:66996	1233452	0	True				
ANR	1234420	AndExpression	"( * attr ) -> namens && ( ! strncmp ( ( * attr ) -> namens , XML_NAMESPACE , sizeof ( XML_NAMESPACE ) ) || ( * attr ) -> form == XSD_FORM_QUALIFIED )"		1233452	0		&&			
ANR	1234421	PtrMemberAccess	( * attr ) -> namens		1233452	0					
ANR	1234422	UnaryOperationExpression	* attr		1233452	0					
ANR	1234423	UnaryOperator	*		1233452	0					
ANR	1234424	Identifier	attr		1233452	1					
ANR	1234425	Identifier	namens		1233452	1					
ANR	1234426	OrExpression	"! strncmp ( ( * attr ) -> namens , XML_NAMESPACE , sizeof ( XML_NAMESPACE ) ) || ( * attr ) -> form == XSD_FORM_QUALIFIED"		1233452	1		||			
ANR	1234427	UnaryOperationExpression	"! strncmp ( ( * attr ) -> namens , XML_NAMESPACE , sizeof ( XML_NAMESPACE ) )"		1233452	0					
ANR	1234428	UnaryOperator	!		1233452	0					
ANR	1234429	CallExpression	"strncmp ( ( * attr ) -> namens , XML_NAMESPACE , sizeof ( XML_NAMESPACE ) )"		1233452	1					
ANR	1234430	Callee	strncmp		1233452	0					
ANR	1234431	Identifier	strncmp		1233452	0					
ANR	1234432	ArgumentList	( * attr ) -> namens		1233452	1					
ANR	1234433	Argument	( * attr ) -> namens		1233452	0					
ANR	1234434	PtrMemberAccess	( * attr ) -> namens		1233452	0					
ANR	1234435	UnaryOperationExpression	* attr		1233452	0					
ANR	1234436	UnaryOperator	*		1233452	0					
ANR	1234437	Identifier	attr		1233452	1					
ANR	1234438	Identifier	namens		1233452	1					
ANR	1234439	Argument	XML_NAMESPACE		1233452	1					
ANR	1234440	Identifier	XML_NAMESPACE		1233452	0					
ANR	1234441	Argument	sizeof ( XML_NAMESPACE )		1233452	2					
ANR	1234442	SizeofExpression	sizeof ( XML_NAMESPACE )		1233452	0					
ANR	1234443	Sizeof	sizeof		1233452	0					
ANR	1234444	SizeofOperand	XML_NAMESPACE		1233452	1					
ANR	1234445	EqualityExpression	( * attr ) -> form == XSD_FORM_QUALIFIED		1233452	1		==			
ANR	1234446	PtrMemberAccess	( * attr ) -> form		1233452	0					
ANR	1234447	UnaryOperationExpression	* attr		1233452	0					
ANR	1234448	UnaryOperator	*		1233452	0					
ANR	1234449	Identifier	attr		1233452	1					
ANR	1234450	Identifier	form		1233452	1					
ANR	1234451	Identifier	XSD_FORM_QUALIFIED		1233452	1					
ANR	1234452	CompoundStatement		134:9:4722:4777	1233452	1					
ANR	1234453	IdentifierDeclStatement	"xmlNsPtr nsp = encode_add_ns ( xmlParam , ( * attr ) -> namens ) ;"	2028:9:67010:67065	1233452	0	True				
ANR	1234454	IdentifierDecl	"nsp = encode_add_ns ( xmlParam , ( * attr ) -> namens )"		1233452	0					
ANR	1234455	IdentifierDeclType	xmlNsPtr		1233452	0					
ANR	1234456	Identifier	nsp		1233452	1					
ANR	1234457	AssignmentExpression	"nsp = encode_add_ns ( xmlParam , ( * attr ) -> namens )"		1233452	2		=			
ANR	1234458	Identifier	nsp		1233452	0					
ANR	1234459	CallExpression	"encode_add_ns ( xmlParam , ( * attr ) -> namens )"		1233452	1					
ANR	1234460	Callee	encode_add_ns		1233452	0					
ANR	1234461	Identifier	encode_add_ns		1233452	0					
ANR	1234462	ArgumentList	xmlParam		1233452	1					
ANR	1234463	Argument	xmlParam		1233452	0					
ANR	1234464	Identifier	xmlParam		1233452	0					
ANR	1234465	Argument	( * attr ) -> namens		1233452	1					
ANR	1234466	PtrMemberAccess	( * attr ) -> namens		1233452	0					
ANR	1234467	UnaryOperationExpression	* attr		1233452	0					
ANR	1234468	UnaryOperator	*		1233452	0					
ANR	1234469	Identifier	attr		1233452	1					
ANR	1234470	Identifier	namens		1233452	1					
ANR	1234471	ExpressionStatement	"xmlSetNsProp ( xmlParam , nsp , BAD_CAST ( ( * attr ) -> name ) , dummy -> children -> content )"	2030:9:67077:67155	1233452	1	True				
ANR	1234472	CallExpression	"xmlSetNsProp ( xmlParam , nsp , BAD_CAST ( ( * attr ) -> name ) , dummy -> children -> content )"		1233452	0					
ANR	1234473	Callee	xmlSetNsProp		1233452	0					
ANR	1234474	Identifier	xmlSetNsProp		1233452	0					
ANR	1234475	ArgumentList	xmlParam		1233452	1					
ANR	1234476	Argument	xmlParam		1233452	0					
ANR	1234477	Identifier	xmlParam		1233452	0					
ANR	1234478	Argument	nsp		1233452	1					
ANR	1234479	Identifier	nsp		1233452	0					
ANR	1234480	Argument	BAD_CAST ( ( * attr ) -> name )		1233452	2					
ANR	1234481	CallExpression	BAD_CAST ( ( * attr ) -> name )		1233452	0					
ANR	1234482	Callee	BAD_CAST		1233452	0					
ANR	1234483	Identifier	BAD_CAST		1233452	0					
ANR	1234484	ArgumentList	( * attr ) -> name		1233452	1					
ANR	1234485	Argument	( * attr ) -> name		1233452	0					
ANR	1234486	PtrMemberAccess	( * attr ) -> name		1233452	0					
ANR	1234487	UnaryOperationExpression	* attr		1233452	0					
ANR	1234488	UnaryOperator	*		1233452	0					
ANR	1234489	Identifier	attr		1233452	1					
ANR	1234490	Identifier	name		1233452	1					
ANR	1234491	Argument	dummy -> children -> content		1233452	3					
ANR	1234492	PtrMemberAccess	dummy -> children -> content		1233452	0					
ANR	1234493	PtrMemberAccess	dummy -> children		1233452	0					
ANR	1234494	Identifier	dummy		1233452	0					
ANR	1234495	Identifier	children		1233452	1					
ANR	1234496	Identifier	content		1233452	1					
ANR	1234497	ElseStatement	else		1233452	0					
ANR	1234498	CompoundStatement		137:15:4884:4884	1233452	0					
ANR	1234499	ExpressionStatement	"xmlSetProp ( xmlParam , BAD_CAST ( ( * attr ) -> name ) , dummy -> children -> content )"	2032:9:67183:67254	1233452	0	True				
ANR	1234500	CallExpression	"xmlSetProp ( xmlParam , BAD_CAST ( ( * attr ) -> name ) , dummy -> children -> content )"		1233452	0					
ANR	1234501	Callee	xmlSetProp		1233452	0					
ANR	1234502	Identifier	xmlSetProp		1233452	0					
ANR	1234503	ArgumentList	xmlParam		1233452	1					
ANR	1234504	Argument	xmlParam		1233452	0					
ANR	1234505	Identifier	xmlParam		1233452	0					
ANR	1234506	Argument	BAD_CAST ( ( * attr ) -> name )		1233452	1					
ANR	1234507	CallExpression	BAD_CAST ( ( * attr ) -> name )		1233452	0					
ANR	1234508	Callee	BAD_CAST		1233452	0					
ANR	1234509	Identifier	BAD_CAST		1233452	0					
ANR	1234510	ArgumentList	( * attr ) -> name		1233452	1					
ANR	1234511	Argument	( * attr ) -> name		1233452	0					
ANR	1234512	PtrMemberAccess	( * attr ) -> name		1233452	0					
ANR	1234513	UnaryOperationExpression	* attr		1233452	0					
ANR	1234514	UnaryOperator	*		1233452	0					
ANR	1234515	Identifier	attr		1233452	1					
ANR	1234516	Identifier	name		1233452	1					
ANR	1234517	Argument	dummy -> children -> content		1233452	2					
ANR	1234518	PtrMemberAccess	dummy -> children -> content		1233452	0					
ANR	1234519	PtrMemberAccess	dummy -> children		1233452	0					
ANR	1234520	Identifier	dummy		1233452	0					
ANR	1234521	Identifier	children		1233452	1					
ANR	1234522	Identifier	content		1233452	1					
ANR	1234523	ExpressionStatement	xmlUnlinkNode ( dummy )	2035:7:67282:67302	1233452	21	True				
ANR	1234524	CallExpression	xmlUnlinkNode ( dummy )		1233452	0					
ANR	1234525	Callee	xmlUnlinkNode		1233452	0					
ANR	1234526	Identifier	xmlUnlinkNode		1233452	0					
ANR	1234527	ArgumentList	dummy		1233452	1					
ANR	1234528	Argument	dummy		1233452	0					
ANR	1234529	Identifier	dummy		1233452	0					
ANR	1234530	ExpressionStatement	xmlFreeNode ( dummy )	2036:7:67311:67329	1233452	22	True				
ANR	1234531	CallExpression	xmlFreeNode ( dummy )		1233452	0					
ANR	1234532	Callee	xmlFreeNode		1233452	0					
ANR	1234533	Identifier	xmlFreeNode		1233452	0					
ANR	1234534	ArgumentList	dummy		1233452	1					
ANR	1234535	Argument	dummy		1233452	0					
ANR	1234536	Identifier	dummy		1233452	0					
ANR	1234537	ExpressionStatement	"zend_hash_move_forward_ex ( sdlType -> attributes , & pos )"	2039:5:67351:67403	1233452	1	True				
ANR	1234538	CallExpression	"zend_hash_move_forward_ex ( sdlType -> attributes , & pos )"		1233452	0					
ANR	1234539	Callee	zend_hash_move_forward_ex		1233452	0					
ANR	1234540	Identifier	zend_hash_move_forward_ex		1233452	0					
ANR	1234541	ArgumentList	sdlType -> attributes		1233452	1					
ANR	1234542	Argument	sdlType -> attributes		1233452	0					
ANR	1234543	PtrMemberAccess	sdlType -> attributes		1233452	0					
ANR	1234544	Identifier	sdlType		1233452	0					
ANR	1234545	Identifier	attributes		1233452	1					
ANR	1234546	Argument	& pos		1233452	1					
ANR	1234547	UnaryOperationExpression	& pos		1233452	0					
ANR	1234548	UnaryOperator	&		1233452	0					
ANR	1234549	Identifier	pos		1233452	1					
ANR	1234550	IfStatement	if ( style == SOAP_ENCODED )		1233452	13					
ANR	1234551	Condition	style == SOAP_ENCODED	2043:6:67426:67446	1233452	0	True				
ANR	1234552	EqualityExpression	style == SOAP_ENCODED		1233452	0		==			
ANR	1234553	Identifier	style		1233452	0					
ANR	1234554	Identifier	SOAP_ENCODED		1233452	1					
ANR	1234555	CompoundStatement		149:29:5161:5161	1233452	1					
ANR	1234556	ExpressionStatement	"set_ns_and_type ( xmlParam , type )"	2044:3:67454:67485	1233452	0	True				
ANR	1234557	CallExpression	"set_ns_and_type ( xmlParam , type )"		1233452	0					
ANR	1234558	Callee	set_ns_and_type		1233452	0					
ANR	1234559	Identifier	set_ns_and_type		1233452	0					
ANR	1234560	ArgumentList	xmlParam		1233452	1					
ANR	1234561	Argument	xmlParam		1233452	0					
ANR	1234562	Identifier	xmlParam		1233452	0					
ANR	1234563	Argument	type		1233452	1					
ANR	1234564	Identifier	type		1233452	0					
ANR	1234565	ElseStatement	else		1233452	0					
ANR	1234566	CompoundStatement		152:8:5211:5211	1233452	0					
ANR	1234567	ExpressionStatement	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	2047:2:67503:67549	1233452	0	True				
ANR	1234568	AssignmentExpression	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1233452	0		=			
ANR	1234569	Identifier	xmlParam		1233452	0					
ANR	1234570	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1233452	1					
ANR	1234571	Callee	xmlNewNode		1233452	0					
ANR	1234572	Identifier	xmlNewNode		1233452	0					
ANR	1234573	ArgumentList	NULL		1233452	1					
ANR	1234574	Argument	NULL		1233452	0					
ANR	1234575	Identifier	NULL		1233452	0					
ANR	1234576	Argument	"BAD_CAST ( ""BOGUS"" )"		1233452	1					
ANR	1234577	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1233452	0					
ANR	1234578	Callee	BAD_CAST		1233452	0					
ANR	1234579	Identifier	BAD_CAST		1233452	0					
ANR	1234580	ArgumentList	"""BOGUS"""		1233452	1					
ANR	1234581	Argument	"""BOGUS"""		1233452	0					
ANR	1234582	PrimaryExpression	"""BOGUS"""		1233452	0					
ANR	1234583	ExpressionStatement	"xmlAddChild ( parent , xmlParam )"	2048:2:67553:67582	1233452	1	True				
ANR	1234584	CallExpression	"xmlAddChild ( parent , xmlParam )"		1233452	0					
ANR	1234585	Callee	xmlAddChild		1233452	0					
ANR	1234586	Identifier	xmlAddChild		1233452	0					
ANR	1234587	ArgumentList	parent		1233452	1					
ANR	1234588	Argument	parent		1233452	0					
ANR	1234589	Identifier	parent		1233452	0					
ANR	1234590	Argument	xmlParam		1233452	1					
ANR	1234591	Identifier	xmlParam		1233452	0					
ANR	1234592	Statement	if	2050:2:67587:67588	1233452	2	True				
ANR	1234593	Statement	(	2050:5:67590:67590	1233452	3	True				
ANR	1234594	Statement	soap_check_zval_ref	2050:6:67591:67609	1233452	4	True				
ANR	1234595	Statement	(	2050:25:67610:67610	1233452	5	True				
ANR	1234596	Statement	data	2050:26:67611:67614	1233452	6	True				
ANR	1234597	Statement	","	2050:30:67615:67615	1233452	7	True				
ANR	1234598	Statement	xmlParam	2050:32:67617:67624	1233452	8	True				
ANR	1234599	Statement	TSRMLS_CC	2050:41:67626:67634	1233452	9	True				
ANR	1234600	Statement	)	2050:50:67635:67635	1233452	10	True				
ANR	1234601	Statement	)	2050:51:67636:67636	1233452	11	True				
ANR	1234602	CompoundStatement		156:53:5350:5350	1233452	12					
ANR	1234603	ReturnStatement	return xmlParam ;	2051:3:67643:67658	1233452	0	True				
ANR	1234604	Identifier	xmlParam		1233452	0					
ANR	1234605	IfStatement	if ( prop != NULL )		1233452	13					
ANR	1234606	Condition	prop != NULL	2053:6:67670:67681	1233452	0	True				
ANR	1234607	EqualityExpression	prop != NULL		1233452	0		!=			
ANR	1234608	Identifier	prop		1233452	0					
ANR	1234609	Identifier	NULL		1233452	1					
ANR	1234610	CompoundStatement		159:20:5396:5396	1233452	1					
ANR	1234611	ExpressionStatement	i = zend_hash_num_elements ( prop )	2054:3:67689:67721	1233452	0	True				
ANR	1234612	AssignmentExpression	i = zend_hash_num_elements ( prop )		1233452	0		=			
ANR	1234613	Identifier	i		1233452	0					
ANR	1234614	CallExpression	zend_hash_num_elements ( prop )		1233452	1					
ANR	1234615	Callee	zend_hash_num_elements		1233452	0					
ANR	1234616	Identifier	zend_hash_num_elements		1233452	0					
ANR	1234617	ArgumentList	prop		1233452	1					
ANR	1234618	Argument	prop		1233452	0					
ANR	1234619	Identifier	prop		1233452	0					
ANR	1234620	ExpressionStatement	zend_hash_internal_pointer_reset ( prop )	2055:3:67726:67764	1233452	1	True				
ANR	1234621	CallExpression	zend_hash_internal_pointer_reset ( prop )		1233452	0					
ANR	1234622	Callee	zend_hash_internal_pointer_reset		1233452	0					
ANR	1234623	Identifier	zend_hash_internal_pointer_reset		1233452	0					
ANR	1234624	ArgumentList	prop		1233452	1					
ANR	1234625	Argument	prop		1233452	0					
ANR	1234626	Identifier	prop		1233452	0					
ANR	1234627	ForStatement	for ( ; i > 0 ; i -- )		1233452	2					
ANR	1234628	Condition	i > 0	2057:9:67776:67780	1233452	0	True				
ANR	1234629	RelationalExpression	i > 0		1233452	0		>			
ANR	1234630	Identifier	i		1233452	0					
ANR	1234631	PrimaryExpression	0		1233452	1					
ANR	1234632	PostIncDecOperationExpression	i --	2057:15:67782:67784	1233452	1	True				
ANR	1234633	Identifier	i		1233452	0					
ANR	1234634	IncDec	--		1233452	1					
ANR	1234635	CompoundStatement		169:4:5602:5626	1233452	2					
ANR	1234636	IdentifierDeclStatement	xmlNodePtr property ;	2058:4:67793:67812	1233452	0	True				
ANR	1234637	IdentifierDecl	property		1233452	0					
ANR	1234638	IdentifierDeclType	xmlNodePtr		1233452	0					
ANR	1234639	Identifier	property		1233452	1					
ANR	1234640	IdentifierDeclStatement	zval * * zprop ;	2059:4:67818:67830	1233452	1	True				
ANR	1234641	IdentifierDecl	* * zprop		1233452	0					
ANR	1234642	IdentifierDeclType	zval * *		1233452	0					
ANR	1234643	Identifier	zprop		1233452	1					
ANR	1234644	IdentifierDeclStatement	char * str_key ;	2060:4:67836:67849	1233452	2	True				
ANR	1234645	IdentifierDecl	* str_key		1233452	0					
ANR	1234646	IdentifierDeclType	char *		1233452	0					
ANR	1234647	Identifier	str_key		1233452	1					
ANR	1234648	IdentifierDeclStatement	ulong index ;	2061:4:67855:67866	1233452	3	True				
ANR	1234649	IdentifierDecl	index		1233452	0					
ANR	1234650	IdentifierDeclType	ulong		1233452	0					
ANR	1234651	Identifier	index		1233452	1					
ANR	1234652	IdentifierDeclStatement	int key_type ;	2062:4:67872:67884	1233452	4	True				
ANR	1234653	IdentifierDecl	key_type		1233452	0					
ANR	1234654	IdentifierDeclType	int		1233452	0					
ANR	1234655	Identifier	key_type		1233452	1					
ANR	1234656	IdentifierDeclStatement	unsigned int str_key_len ;	2063:4:67890:67914	1233452	5	True				
ANR	1234657	IdentifierDecl	str_key_len		1233452	0					
ANR	1234658	IdentifierDeclType	unsigned int		1233452	0					
ANR	1234659	Identifier	str_key_len		1233452	1					
ANR	1234660	ExpressionStatement	"key_type = zend_hash_get_current_key_ex ( prop , & str_key , & str_key_len , & index , FALSE , NULL )"	2065:4:67921:68011	1233452	6	True				
ANR	1234661	AssignmentExpression	"key_type = zend_hash_get_current_key_ex ( prop , & str_key , & str_key_len , & index , FALSE , NULL )"		1233452	0		=			
ANR	1234662	Identifier	key_type		1233452	0					
ANR	1234663	CallExpression	"zend_hash_get_current_key_ex ( prop , & str_key , & str_key_len , & index , FALSE , NULL )"		1233452	1					
ANR	1234664	Callee	zend_hash_get_current_key_ex		1233452	0					
ANR	1234665	Identifier	zend_hash_get_current_key_ex		1233452	0					
ANR	1234666	ArgumentList	prop		1233452	1					
ANR	1234667	Argument	prop		1233452	0					
ANR	1234668	Identifier	prop		1233452	0					
ANR	1234669	Argument	& str_key		1233452	1					
ANR	1234670	UnaryOperationExpression	& str_key		1233452	0					
ANR	1234671	UnaryOperator	&		1233452	0					
ANR	1234672	Identifier	str_key		1233452	1					
ANR	1234673	Argument	& str_key_len		1233452	2					
ANR	1234674	UnaryOperationExpression	& str_key_len		1233452	0					
ANR	1234675	UnaryOperator	&		1233452	0					
ANR	1234676	Identifier	str_key_len		1233452	1					
ANR	1234677	Argument	& index		1233452	3					
ANR	1234678	UnaryOperationExpression	& index		1233452	0					
ANR	1234679	UnaryOperator	&		1233452	0					
ANR	1234680	Identifier	index		1233452	1					
ANR	1234681	Argument	FALSE		1233452	4					
ANR	1234682	Identifier	FALSE		1233452	0					
ANR	1234683	Argument	NULL		1233452	5					
ANR	1234684	Identifier	NULL		1233452	0					
ANR	1234685	ExpressionStatement	"zend_hash_get_current_data ( prop , ( void * * ) & zprop )"	2066:4:68017:68066	1233452	7	True				
ANR	1234686	CallExpression	"zend_hash_get_current_data ( prop , ( void * * ) & zprop )"		1233452	0					
ANR	1234687	Callee	zend_hash_get_current_data		1233452	0					
ANR	1234688	Identifier	zend_hash_get_current_data		1233452	0					
ANR	1234689	ArgumentList	prop		1233452	1					
ANR	1234690	Argument	prop		1233452	0					
ANR	1234691	Identifier	prop		1233452	0					
ANR	1234692	Argument	( void * * ) & zprop		1233452	1					
ANR	1234693	CastExpression	( void * * ) & zprop		1233452	0					
ANR	1234694	CastTarget	void * *		1233452	0					
ANR	1234695	UnaryOperationExpression	& zprop		1233452	1					
ANR	1234696	UnaryOperator	&		1233452	0					
ANR	1234697	Identifier	zprop		1233452	1					
ANR	1234698	Statement	property	2068:4:68073:68080	1233452	8	True				
ANR	1234699	Statement	=	2068:13:68082:68082	1233452	9	True				
ANR	1234700	Statement	master_to_xml	2068:15:68084:68096	1233452	10	True				
ANR	1234701	Statement	(	2068:28:68097:68097	1233452	11	True				
ANR	1234702	Statement	get_conversion	2068:29:68098:68111	1233452	12	True				
ANR	1234703	Statement	(	2068:43:68112:68112	1233452	13	True				
ANR	1234704	Statement	(	2068:44:68113:68113	1233452	14	True				
ANR	1234705	Statement	*	2068:45:68114:68114	1233452	15	True				
ANR	1234706	Statement	zprop	2068:46:68115:68119	1233452	16	True				
ANR	1234707	Statement	)	2068:51:68120:68120	1233452	17	True				
ANR	1234708	Statement	->	2068:52:68121:68122	1233452	18	True				
ANR	1234709	Statement	type	2068:54:68123:68126	1233452	19	True				
ANR	1234710	Statement	)	2068:58:68127:68127	1233452	20	True				
ANR	1234711	Statement	","	2068:59:68128:68128	1233452	21	True				
ANR	1234712	Statement	(	2068:61:68130:68130	1233452	22	True				
ANR	1234713	Statement	*	2068:62:68131:68131	1233452	23	True				
ANR	1234714	Statement	zprop	2068:63:68132:68136	1233452	24	True				
ANR	1234715	Statement	)	2068:68:68137:68137	1233452	25	True				
ANR	1234716	Statement	","	2068:69:68138:68138	1233452	26	True				
ANR	1234717	Statement	style	2068:71:68140:68144	1233452	27	True				
ANR	1234718	Statement	","	2068:76:68145:68145	1233452	28	True				
ANR	1234719	Statement	xmlParam	2068:78:68147:68154	1233452	29	True				
ANR	1234720	Statement	TSRMLS_CC	2068:87:68156:68164	1233452	30	True				
ANR	1234721	Statement	)	2068:96:68165:68165	1233452	31	True				
ANR	1234722	ExpressionStatement		2068:97:68166:68166	1233452	32	True				
ANR	1234723	IfStatement	if ( key_type == HASH_KEY_IS_STRING )		1233452	33					
ANR	1234724	Condition	key_type == HASH_KEY_IS_STRING	2070:8:68177:68206	1233452	0	True				
ANR	1234725	EqualityExpression	key_type == HASH_KEY_IS_STRING		1233452	0		==			
ANR	1234726	Identifier	key_type		1233452	0					
ANR	1234727	Identifier	HASH_KEY_IS_STRING		1233452	1					
ANR	1234728	CompoundStatement		177:5:5928:5949	1233452	1					
ANR	1234729	IdentifierDeclStatement	const char * prop_name ;	2071:5:68216:68237	1233452	0	True				
ANR	1234730	IdentifierDecl	* prop_name		1233452	0					
ANR	1234731	IdentifierDeclType	const char *		1233452	0					
ANR	1234732	Identifier	prop_name		1233452	1					
ANR	1234733	IfStatement	if ( Z_TYPE_P ( data ) == IS_OBJECT )		1233452	1					
ANR	1234734	Condition	Z_TYPE_P ( data ) == IS_OBJECT	2073:9:68249:68275	1233452	0	True				
ANR	1234735	EqualityExpression	Z_TYPE_P ( data ) == IS_OBJECT		1233452	0		==			
ANR	1234736	CallExpression	Z_TYPE_P ( data )		1233452	0					
ANR	1234737	Callee	Z_TYPE_P		1233452	0					
ANR	1234738	Identifier	Z_TYPE_P		1233452	0					
ANR	1234739	ArgumentList	data		1233452	1					
ANR	1234740	Argument	data		1233452	0					
ANR	1234741	Identifier	data		1233452	0					
ANR	1234742	Identifier	IS_OBJECT		1233452	1					
ANR	1234743	CompoundStatement		180:6:5998:6020	1233452	1					
ANR	1234744	IdentifierDeclStatement	const char * class_name ;	2074:6:68286:68308	1233452	0	True				
ANR	1234745	IdentifierDecl	* class_name		1233452	0					
ANR	1234746	IdentifierDeclType	const char *		1233452	0					
ANR	1234747	Identifier	class_name		1233452	1					
ANR	1234748	ExpressionStatement	"zend_unmangle_property_name ( str_key , str_key_len - 1 , & class_name , & prop_name )"	2076:6:68317:68393	1233452	1	True				
ANR	1234749	CallExpression	"zend_unmangle_property_name ( str_key , str_key_len - 1 , & class_name , & prop_name )"		1233452	0					
ANR	1234750	Callee	zend_unmangle_property_name		1233452	0					
ANR	1234751	Identifier	zend_unmangle_property_name		1233452	0					
ANR	1234752	ArgumentList	str_key		1233452	1					
ANR	1234753	Argument	str_key		1233452	0					
ANR	1234754	Identifier	str_key		1233452	0					
ANR	1234755	Argument	str_key_len - 1		1233452	1					
ANR	1234756	AdditiveExpression	str_key_len - 1		1233452	0		-			
ANR	1234757	Identifier	str_key_len		1233452	0					
ANR	1234758	PrimaryExpression	1		1233452	1					
ANR	1234759	Argument	& class_name		1233452	2					
ANR	1234760	UnaryOperationExpression	& class_name		1233452	0					
ANR	1234761	UnaryOperator	&		1233452	0					
ANR	1234762	Identifier	class_name		1233452	1					
ANR	1234763	Argument	& prop_name		1233452	3					
ANR	1234764	UnaryOperationExpression	& prop_name		1233452	0					
ANR	1234765	UnaryOperator	&		1233452	0					
ANR	1234766	Identifier	prop_name		1233452	1					
ANR	1234767	ElseStatement	else		1233452	0					
ANR	1234768	CompoundStatement		183:12:6119:6119	1233452	0					
ANR	1234769	ExpressionStatement	prop_name = str_key	2078:6:68415:68434	1233452	0	True				
ANR	1234770	AssignmentExpression	prop_name = str_key		1233452	0		=			
ANR	1234771	Identifier	prop_name		1233452	0					
ANR	1234772	Identifier	str_key		1233452	1					
ANR	1234773	IfStatement	if ( prop_name )		1233452	2					
ANR	1234774	Condition	prop_name	2080:9:68452:68460	1233452	0	True				
ANR	1234775	Identifier	prop_name		1233452	0					
ANR	1234776	CompoundStatement		186:20:6175:6175	1233452	1					
ANR	1234777	ExpressionStatement	"xmlNodeSetName ( property , BAD_CAST ( prop_name ) )"	2081:6:68471:68516	1233452	0	True				
ANR	1234778	CallExpression	"xmlNodeSetName ( property , BAD_CAST ( prop_name ) )"		1233452	0					
ANR	1234779	Callee	xmlNodeSetName		1233452	0					
ANR	1234780	Identifier	xmlNodeSetName		1233452	0					
ANR	1234781	ArgumentList	property		1233452	1					
ANR	1234782	Argument	property		1233452	0					
ANR	1234783	Identifier	property		1233452	0					
ANR	1234784	Argument	BAD_CAST ( prop_name )		1233452	1					
ANR	1234785	CallExpression	BAD_CAST ( prop_name )		1233452	0					
ANR	1234786	Callee	BAD_CAST		1233452	0					
ANR	1234787	Identifier	BAD_CAST		1233452	0					
ANR	1234788	ArgumentList	prop_name		1233452	1					
ANR	1234789	Argument	prop_name		1233452	0					
ANR	1234790	Identifier	prop_name		1233452	0					
ANR	1234791	ExpressionStatement	zend_hash_move_forward ( prop )	2084:4:68535:68563	1233452	34	True				
ANR	1234792	CallExpression	zend_hash_move_forward ( prop )		1233452	0					
ANR	1234793	Callee	zend_hash_move_forward		1233452	0					
ANR	1234794	Identifier	zend_hash_move_forward		1233452	0					
ANR	1234795	ArgumentList	prop		1233452	1					
ANR	1234796	Argument	prop		1233452	0					
ANR	1234797	Identifier	prop		1233452	0					
ANR	1234798	IfStatement	if ( style == SOAP_ENCODED )		1233452	14					
ANR	1234799	Condition	style == SOAP_ENCODED	2087:6:68580:68600	1233452	0	True				
ANR	1234800	EqualityExpression	style == SOAP_ENCODED		1233452	0		==			
ANR	1234801	Identifier	style		1233452	0					
ANR	1234802	Identifier	SOAP_ENCODED		1233452	1					
ANR	1234803	CompoundStatement		193:29:6315:6315	1233452	1					
ANR	1234804	ExpressionStatement	"set_ns_and_type ( xmlParam , type )"	2088:3:68608:68639	1233452	0	True				
ANR	1234805	CallExpression	"set_ns_and_type ( xmlParam , type )"		1233452	0					
ANR	1234806	Callee	set_ns_and_type		1233452	0					
ANR	1234807	Identifier	set_ns_and_type		1233452	0					
ANR	1234808	ArgumentList	xmlParam		1233452	1					
ANR	1234809	Argument	xmlParam		1233452	0					
ANR	1234810	Identifier	xmlParam		1233452	0					
ANR	1234811	Argument	type		1233452	1					
ANR	1234812	Identifier	type		1233452	0					
ANR	1234813	ReturnStatement	return xmlParam ;	2091:1:68649:68664	1233452	7	True				
ANR	1234814	Identifier	xmlParam		1233452	0					
ANR	1234815	ReturnType	static xmlNodePtr		1233452	1					
ANR	1234816	Identifier	to_xml_object		1233452	2					
ANR	1234817	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1233452	3					
ANR	1234818	Parameter	encodeTypePtr type	1894:32:62215:62232	1233452	0	True				
ANR	1234819	ParameterType	encodeTypePtr		1233452	0					
ANR	1234820	Identifier	type		1233452	1					
ANR	1234821	Parameter	zval * data	1894:52:62235:62244	1233452	1	True				
ANR	1234822	ParameterType	zval *		1233452	0					
ANR	1234823	Identifier	data		1233452	1					
ANR	1234824	Parameter	int style	1894:64:62247:62255	1233452	2	True				
ANR	1234825	ParameterType	int		1233452	0					
ANR	1234826	Identifier	style		1233452	1					
ANR	1234827	Parameter	xmlNodePtr parent TSRMLS_DC	1894:75:62258:62284	1233452	3	True				
ANR	1234828	ParameterType	xmlNodePtr parent		1233452	0					
ANR	1234829	Identifier	TSRMLS_DC		1233452	1					
ANR	1234830	CFGEntryNode	ENTRY		1233452		True				
ANR	1234831	CFGExitNode	EXIT		1233452		True				
ANR	1234832	Symbol	& val		1233452						
ANR	1234833	Symbol	parent		1233452						
ANR	1234834	Symbol	array_el -> namens		1233452						
ANR	1234835	Symbol	dummy -> children -> content		1233452						
ANR	1234836	Symbol	XSD_FORM_QUALIFIED		1233452						
ANR	1234837	Symbol	* dummy -> children		1233452						
ANR	1234838	Symbol	* array_el		1233452						
ANR	1234839	Symbol	type		1233452						
ANR	1234840	Symbol	dummy		1233452						
ANR	1234841	Symbol	strncmp		1233452						
ANR	1234842	Symbol	zend_hash_get_current_data		1233452						
ANR	1234843	Symbol	tmp		1233452						
ANR	1234844	Symbol	property		1233452						
ANR	1234845	Symbol	* sdlType -> encode -> details . sdl_type		1233452						
ANR	1234846	Symbol	val		1233452						
ANR	1234847	Symbol	index		1233452						
ANR	1234848	Symbol	zend_hash_get_current_key_ex		1233452						
ANR	1234849	Symbol	* dummy		1233452						
ANR	1234850	Symbol	sdlType -> encode -> details . sdl_type		1233452						
ANR	1234851	Symbol	& str_key_len		1233452						
ANR	1234852	Symbol	zprop		1233452						
ANR	1234853	Symbol	style		1233452						
ANR	1234854	Symbol	* prop		1233452						
ANR	1234855	Symbol	XSD_TYPEKIND_EXTENSION		1233452						
ANR	1234856	Symbol	sdlType		1233452						
ANR	1234857	Symbol	XSD_TYPEKIND_LIST		1233452						
ANR	1234858	Symbol	* * * sdlType		1233452						
ANR	1234859	Symbol	zend_hash_get_current_data_ex		1233452						
ANR	1234860	Symbol	( * attr ) -> name		1233452						
ANR	1234861	Symbol	* * dummy		1233452						
ANR	1234862	Symbol	( * attr ) -> fixed		1233452						
ANR	1234863	Symbol	* enc -> details . sdl_type		1233452						
ANR	1234864	Symbol	enc -> details		1233452						
ANR	1234865	Symbol	model_array_element		1233452						
ANR	1234866	Symbol	nsp		1233452						
ANR	1234867	Symbol	XSD_TYPEKIND_SIMPLE		1233452						
ANR	1234868	Symbol	str_key_len		1233452						
ANR	1234869	Symbol	IS_ARRAY		1233452						
ANR	1234870	Symbol	& sdlType -> encode -> details		1233452						
ANR	1234871	Symbol	pos		1233452						
ANR	1234872	Symbol	prop		1233452						
ANR	1234873	Symbol	class_name		1233452						
ANR	1234874	Symbol	* enc -> details		1233452						
ANR	1234875	Symbol	SUCCESS		1233452						
ANR	1234876	Symbol	& attr		1233452						
ANR	1234877	Symbol	enc -> details . sdl_type		1233452						
ANR	1234878	Symbol	zend_hash_num_elements		1233452						
ANR	1234879	Symbol	i		1233452						
ANR	1234880	Symbol	* sdlType -> encode		1233452						
ANR	1234881	Symbol	is_map		1233452						
ANR	1234882	Symbol	xmlNewNode		1233452						
ANR	1234883	Symbol	dummy -> children		1233452						
ANR	1234884	Symbol	array_el -> form		1233452						
ANR	1234885	Symbol	prop_name		1233452						
ANR	1234886	Symbol	E_ERROR		1233452						
ANR	1234887	Symbol	* sdlType -> encode -> details		1233452						
ANR	1234888	Symbol	& str_key		1233452						
ANR	1234889	Symbol	IS_OBJECT		1233452						
ANR	1234890	Symbol	& pos		1233452						
ANR	1234891	Symbol	type -> sdl_type		1233452						
ANR	1234892	Symbol	str_key		1233452						
ANR	1234893	Symbol	data		1233452						
ANR	1234894	Symbol	sdlType -> encode		1233452						
ANR	1234895	Symbol	* * attr		1233452						
ANR	1234896	Symbol	& class_name		1233452						
ANR	1234897	Symbol	HASH_KEY_IS_STRING		1233452						
ANR	1234898	Symbol	TSRMLS_DC		1233452						
ANR	1234899	Symbol	* * sdlType -> encode		1233452						
ANR	1234900	Symbol	zattr		1233452						
ANR	1234901	Symbol	prop -> nApplyCount		1233452						
ANR	1234902	Symbol	enc -> details . sdl_type -> kind		1233452						
ANR	1234903	Symbol	* sdlType		1233452						
ANR	1234904	Symbol	array_el -> nillable		1233452						
ANR	1234905	Symbol	* * sdlType		1233452						
ANR	1234906	Symbol	& index		1233452						
ANR	1234907	Symbol	strcmp		1233452						
ANR	1234908	Symbol	NULL		1233452						
ANR	1234909	Symbol	enc -> details . sdl_type -> encode		1233452						
ANR	1234910	Symbol	XML_NAMESPACE		1233452						
ANR	1234911	Symbol	* * enc		1233452						
ANR	1234912	Symbol	SOAP_LITERAL		1233452						
ANR	1234913	Symbol	array_el -> name		1233452						
ANR	1234914	Symbol	( * attr ) -> form		1233452						
ANR	1234915	Symbol	* enc		1233452						
ANR	1234916	Symbol	* attr		1233452						
ANR	1234917	Symbol	array_el		1233452						
ANR	1234918	Symbol	BAD_CAST		1233452						
ANR	1234919	Symbol	sdlType -> attributes		1233452						
ANR	1234920	Symbol	xmlParam		1233452						
ANR	1234921	Symbol	( * attr ) -> namens		1233452						
ANR	1234922	Symbol	key_type		1233452						
ANR	1234923	Symbol	sdlType -> kind		1233452						
ANR	1234924	Symbol	XSD_TYPEKIND_UNION		1233452						
ANR	1234925	Symbol	& zprop		1233452						
ANR	1234926	Symbol	Z_TYPE_PP		1233452						
ANR	1234927	Symbol	IS_NULL		1233452						
ANR	1234928	Symbol	* type		1233452						
ANR	1234929	Symbol	& prop_name		1233452						
ANR	1234930	Symbol	enc		1233452						
ANR	1234931	Symbol	sdlType -> model		1233452						
ANR	1234932	Symbol	Z_ARRVAL_P		1233452						
ANR	1234933	Symbol	sdlType -> encode -> details . sdl_type -> kind		1233452						
ANR	1234934	Symbol	attr		1233452						
ANR	1234935	Symbol	encode_add_ns		1233452						
ANR	1234936	Symbol	Z_OBJPROP_P		1233452						
ANR	1234937	Symbol	Z_TYPE_P		1233452						
ANR	1234938	Symbol	XSD_TYPEKIND_RESTRICTION		1233452						
ANR	1234939	Symbol	sdlType -> encode -> details		1233452						
ANR	1234940	Symbol	SOAP_ENCODED		1233452						
ANR	1234941	Symbol	FALSE		1233452						
ANR	1234942	Function	guess_array_map	2095:0:68695:69097							
ANR	1234943	FunctionDef	"guess_array_map (encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1234942	0					
ANR	1234944	CompoundStatement		2096:0:68801:69097	1234942	0					
ANR	1234945	IdentifierDeclStatement	encodePtr enc = NULL ;	2097:1:68804:68824	1234942	0	True				
ANR	1234946	IdentifierDecl	enc = NULL		1234942	0					
ANR	1234947	IdentifierDeclType	encodePtr		1234942	0					
ANR	1234948	Identifier	enc		1234942	1					
ANR	1234949	AssignmentExpression	enc = NULL		1234942	2		=			
ANR	1234950	Identifier	NULL		1234942	0					
ANR	1234951	Identifier	NULL		1234942	1					
ANR	1234952	IfStatement	if ( data && Z_TYPE_P ( data ) == IS_ARRAY )		1234942	1					
ANR	1234953	Condition	data && Z_TYPE_P ( data ) == IS_ARRAY	2099:5:68832:68865	1234942	0	True				
ANR	1234954	AndExpression	data && Z_TYPE_P ( data ) == IS_ARRAY		1234942	0		&&			
ANR	1234955	Identifier	data		1234942	0					
ANR	1234956	EqualityExpression	Z_TYPE_P ( data ) == IS_ARRAY		1234942	1		==			
ANR	1234957	CallExpression	Z_TYPE_P ( data )		1234942	0					
ANR	1234958	Callee	Z_TYPE_P		1234942	0					
ANR	1234959	Identifier	Z_TYPE_P		1234942	0					
ANR	1234960	ArgumentList	data		1234942	1					
ANR	1234961	Argument	data		1234942	0					
ANR	1234962	Identifier	data		1234942	0					
ANR	1234963	Identifier	IS_ARRAY		1234942	1					
ANR	1234964	CompoundStatement		4:41:66:66	1234942	1					
ANR	1234965	IfStatement	if ( is_map ( data ) )		1234942	0					
ANR	1234966	Condition	is_map ( data )	2100:6:68876:68887	1234942	0	True				
ANR	1234967	CallExpression	is_map ( data )		1234942	0					
ANR	1234968	Callee	is_map		1234942	0					
ANR	1234969	Identifier	is_map		1234942	0					
ANR	1234970	ArgumentList	data		1234942	1					
ANR	1234971	Argument	data		1234942	0					
ANR	1234972	Identifier	data		1234942	0					
ANR	1234973	CompoundStatement		5:20:88:88	1234942	1					
ANR	1234974	ExpressionStatement	enc = get_conversion ( APACHE_MAP )	2101:3:68895:68927	1234942	0	True				
ANR	1234975	AssignmentExpression	enc = get_conversion ( APACHE_MAP )		1234942	0		=			
ANR	1234976	Identifier	enc		1234942	0					
ANR	1234977	CallExpression	get_conversion ( APACHE_MAP )		1234942	1					
ANR	1234978	Callee	get_conversion		1234942	0					
ANR	1234979	Identifier	get_conversion		1234942	0					
ANR	1234980	ArgumentList	APACHE_MAP		1234942	1					
ANR	1234981	Argument	APACHE_MAP		1234942	0					
ANR	1234982	Identifier	APACHE_MAP		1234942	0					
ANR	1234983	ElseStatement	else		1234942	0					
ANR	1234984	CompoundStatement		7:9:136:136	1234942	0					
ANR	1234985	ExpressionStatement	enc = get_conversion ( SOAP_ENC_ARRAY )	2103:3:68943:68979	1234942	0	True				
ANR	1234986	AssignmentExpression	enc = get_conversion ( SOAP_ENC_ARRAY )		1234942	0		=			
ANR	1234987	Identifier	enc		1234942	0					
ANR	1234988	CallExpression	get_conversion ( SOAP_ENC_ARRAY )		1234942	1					
ANR	1234989	Callee	get_conversion		1234942	0					
ANR	1234990	Identifier	get_conversion		1234942	0					
ANR	1234991	ArgumentList	SOAP_ENC_ARRAY		1234942	1					
ANR	1234992	Argument	SOAP_ENC_ARRAY		1234942	0					
ANR	1234993	Identifier	SOAP_ENC_ARRAY		1234942	0					
ANR	1234994	IfStatement	if ( ! enc )		1234942	2					
ANR	1234995	Condition	! enc	2106:5:68993:68996	1234942	0	True				
ANR	1234996	UnaryOperationExpression	! enc		1234942	0					
ANR	1234997	UnaryOperator	!		1234942	0					
ANR	1234998	Identifier	enc		1234942	1					
ANR	1234999	CompoundStatement		11:11:197:197	1234942	1					
ANR	1235000	ExpressionStatement	enc = get_conversion ( IS_NULL )	2107:2:69003:69032	1234942	0	True				
ANR	1235001	AssignmentExpression	enc = get_conversion ( IS_NULL )		1234942	0		=			
ANR	1235002	Identifier	enc		1234942	0					
ANR	1235003	CallExpression	get_conversion ( IS_NULL )		1234942	1					
ANR	1235004	Callee	get_conversion		1234942	0					
ANR	1235005	Identifier	get_conversion		1234942	0					
ANR	1235006	ArgumentList	IS_NULL		1234942	1					
ANR	1235007	Argument	IS_NULL		1234942	0					
ANR	1235008	Identifier	IS_NULL		1234942	0					
ANR	1235009	Statement	return	2110:1:69039:69044	1234942	3	True				
ANR	1235010	Statement	master_to_xml	2110:8:69046:69058	1234942	4	True				
ANR	1235011	Statement	(	2110:21:69059:69059	1234942	5	True				
ANR	1235012	Statement	enc	2110:22:69060:69062	1234942	6	True				
ANR	1235013	Statement	","	2110:25:69063:69063	1234942	7	True				
ANR	1235014	Statement	data	2110:27:69065:69068	1234942	8	True				
ANR	1235015	Statement	","	2110:31:69069:69069	1234942	9	True				
ANR	1235016	Statement	style	2110:33:69071:69075	1234942	10	True				
ANR	1235017	Statement	","	2110:38:69076:69076	1234942	11	True				
ANR	1235018	Statement	parent	2110:40:69078:69083	1234942	12	True				
ANR	1235019	Statement	TSRMLS_CC	2110:47:69085:69093	1234942	13	True				
ANR	1235020	Statement	)	2110:56:69094:69094	1234942	14	True				
ANR	1235021	ExpressionStatement		2110:57:69095:69095	1234942	15	True				
ANR	1235022	ReturnType	static xmlNodePtr		1234942	1					
ANR	1235023	Identifier	guess_array_map		1234942	2					
ANR	1235024	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1234942	3					
ANR	1235025	Parameter	encodeTypePtr type	2095:34:68729:68746	1234942	0	True				
ANR	1235026	ParameterType	encodeTypePtr		1234942	0					
ANR	1235027	Identifier	type		1234942	1					
ANR	1235028	Parameter	zval * data	2095:54:68749:68758	1234942	1	True				
ANR	1235029	ParameterType	zval *		1234942	0					
ANR	1235030	Identifier	data		1234942	1					
ANR	1235031	Parameter	int style	2095:66:68761:68769	1234942	2	True				
ANR	1235032	ParameterType	int		1234942	0					
ANR	1235033	Identifier	style		1234942	1					
ANR	1235034	Parameter	xmlNodePtr parent TSRMLS_DC	2095:77:68772:68798	1234942	3	True				
ANR	1235035	ParameterType	xmlNodePtr parent		1234942	0					
ANR	1235036	Identifier	TSRMLS_DC		1234942	1					
ANR	1235037	CFGEntryNode	ENTRY		1234942		True				
ANR	1235038	CFGExitNode	EXIT		1234942		True				
ANR	1235039	Symbol	APACHE_MAP		1234942						
ANR	1235040	Symbol	NULL		1234942						
ANR	1235041	Symbol	data		1234942						
ANR	1235042	Symbol	is_map		1234942						
ANR	1235043	Symbol	get_conversion		1234942						
ANR	1235044	Symbol	type		1234942						
ANR	1235045	Symbol	Z_TYPE_P		1234942						
ANR	1235046	Symbol	TSRMLS_DC		1234942						
ANR	1235047	Symbol	SOAP_ENC_ARRAY		1234942						
ANR	1235048	Symbol	IS_NULL		1234942						
ANR	1235049	Symbol	IS_ARRAY		1234942						
ANR	1235050	Symbol	style		1234942						
ANR	1235051	Symbol	enc		1234942						
ANR	1235052	Function	calc_dimension_12	2113:0:69100:69570							
ANR	1235053	FunctionDef	calc_dimension_12 (const char * str)		1235052	0					
ANR	1235054	CompoundStatement		2114:0:69146:69570	1235052	0					
ANR	1235055	IdentifierDeclStatement	"int i = 0 , flag = 0 ;"	2115:1:69149:69168	1235052	0	True				
ANR	1235056	IdentifierDecl	i = 0		1235052	0					
ANR	1235057	IdentifierDeclType	int		1235052	0					
ANR	1235058	Identifier	i		1235052	1					
ANR	1235059	AssignmentExpression	i = 0		1235052	2		=			
ANR	1235060	Identifier	i		1235052	0					
ANR	1235061	PrimaryExpression	0		1235052	1					
ANR	1235062	IdentifierDecl	flag = 0		1235052	1					
ANR	1235063	IdentifierDeclType	int		1235052	0					
ANR	1235064	Identifier	flag		1235052	1					
ANR	1235065	AssignmentExpression	flag = 0		1235052	2		=			
ANR	1235066	Identifier	flag		1235052	0					
ANR	1235067	PrimaryExpression	0		1235052	1					
ANR	1235068	WhileStatement	while ( * str != '\\0' && ( * str < '0' || * str > '9' ) && ( * str != '*' ) )		1235052	1					
ANR	1235069	Condition	* str != '\\0' && ( * str < '0' || * str > '9' ) && ( * str != '*' )	2116:8:69178:69236	1235052	0	True				
ANR	1235070	AndExpression	* str != '\\0' && ( * str < '0' || * str > '9' ) && ( * str != '*' )		1235052	0		&&			
ANR	1235071	EqualityExpression	* str != '\\0'		1235052	0		!=			
ANR	1235072	UnaryOperationExpression	* str		1235052	0					
ANR	1235073	UnaryOperator	*		1235052	0					
ANR	1235074	Identifier	str		1235052	1					
ANR	1235075	PrimaryExpression	'\\0'		1235052	1					
ANR	1235076	AndExpression	( * str < '0' || * str > '9' ) && ( * str != '*' )		1235052	1		&&			
ANR	1235077	OrExpression	* str < '0' || * str > '9'		1235052	0		||			
ANR	1235078	RelationalExpression	* str < '0'		1235052	0		<			
ANR	1235079	UnaryOperationExpression	* str		1235052	0					
ANR	1235080	UnaryOperator	*		1235052	0					
ANR	1235081	Identifier	str		1235052	1					
ANR	1235082	PrimaryExpression	'0'		1235052	1					
ANR	1235083	RelationalExpression	* str > '9'		1235052	1		>			
ANR	1235084	UnaryOperationExpression	* str		1235052	0					
ANR	1235085	UnaryOperator	*		1235052	0					
ANR	1235086	Identifier	str		1235052	1					
ANR	1235087	PrimaryExpression	'9'		1235052	1					
ANR	1235088	EqualityExpression	* str != '*'		1235052	1		!=			
ANR	1235089	UnaryOperationExpression	* str		1235052	0					
ANR	1235090	UnaryOperator	*		1235052	0					
ANR	1235091	Identifier	str		1235052	1					
ANR	1235092	PrimaryExpression	'*'		1235052	1					
ANR	1235093	CompoundStatement		3:69:92:92	1235052	1					
ANR	1235094	ExpressionStatement	str ++	2117:2:69243:69248	1235052	0	True				
ANR	1235095	PostIncDecOperationExpression	str ++		1235052	0					
ANR	1235096	Identifier	str		1235052	0					
ANR	1235097	IncDec	++		1235052	1					
ANR	1235098	IfStatement	if ( * str == '*' )		1235052	2					
ANR	1235099	Condition	* str == '*'	2119:5:69258:69268	1235052	0	True				
ANR	1235100	EqualityExpression	* str == '*'		1235052	0		==			
ANR	1235101	UnaryOperationExpression	* str		1235052	0					
ANR	1235102	UnaryOperator	*		1235052	0					
ANR	1235103	Identifier	str		1235052	1					
ANR	1235104	PrimaryExpression	'*'		1235052	1					
ANR	1235105	CompoundStatement		6:18:124:124	1235052	1					
ANR	1235106	ExpressionStatement	i ++	2120:2:69275:69278	1235052	0	True				
ANR	1235107	PostIncDecOperationExpression	i ++		1235052	0					
ANR	1235108	Identifier	i		1235052	0					
ANR	1235109	IncDec	++		1235052	1					
ANR	1235110	ExpressionStatement	str ++	2121:2:69282:69287	1235052	1	True				
ANR	1235111	PostIncDecOperationExpression	str ++		1235052	0					
ANR	1235112	Identifier	str		1235052	0					
ANR	1235113	IncDec	++		1235052	1					
ANR	1235114	WhileStatement	while ( * str != '\\0' )		1235052	3					
ANR	1235115	Condition	* str != '\\0'	2123:8:69300:69311	1235052	0	True				
ANR	1235116	EqualityExpression	* str != '\\0'		1235052	0		!=			
ANR	1235117	UnaryOperationExpression	* str		1235052	0					
ANR	1235118	UnaryOperator	*		1235052	0					
ANR	1235119	Identifier	str		1235052	1					
ANR	1235120	PrimaryExpression	'\\0'		1235052	1					
ANR	1235121	CompoundStatement		10:22:167:167	1235052	1					
ANR	1235122	IfStatement	if ( * str >= '0' && * str <= '9' )		1235052	0					
ANR	1235123	Condition	* str >= '0' && * str <= '9'	2124:6:69322:69347	1235052	0	True				
ANR	1235124	AndExpression	* str >= '0' && * str <= '9'		1235052	0		&&			
ANR	1235125	RelationalExpression	* str >= '0'		1235052	0		>=			
ANR	1235126	UnaryOperationExpression	* str		1235052	0					
ANR	1235127	UnaryOperator	*		1235052	0					
ANR	1235128	Identifier	str		1235052	1					
ANR	1235129	PrimaryExpression	'0'		1235052	1					
ANR	1235130	RelationalExpression	* str <= '9'		1235052	1		<=			
ANR	1235131	UnaryOperationExpression	* str		1235052	0					
ANR	1235132	UnaryOperator	*		1235052	0					
ANR	1235133	Identifier	str		1235052	1					
ANR	1235134	PrimaryExpression	'9'		1235052	1					
ANR	1235135	CompoundStatement		11:34:203:203	1235052	1					
ANR	1235136	IfStatement	if ( flag == 0 )		1235052	0					
ANR	1235137	Condition	flag == 0	2125:7:69359:69367	1235052	0	True				
ANR	1235138	EqualityExpression	flag == 0		1235052	0		==			
ANR	1235139	Identifier	flag		1235052	0					
ANR	1235140	PrimaryExpression	0		1235052	1					
ANR	1235141	CompoundStatement		12:18:223:223	1235052	1					
ANR	1235142	ExpressionStatement	i ++	2126:6:69378:69381	1235052	0	True				
ANR	1235143	PostIncDecOperationExpression	i ++		1235052	0					
ANR	1235144	Identifier	i		1235052	0					
ANR	1235145	IncDec	++		1235052	1					
ANR	1235146	ExpressionStatement	flag = 1	2127:6:69389:69397	1235052	1	True				
ANR	1235147	AssignmentExpression	flag = 1		1235052	0		=			
ANR	1235148	Identifier	flag		1235052	0					
ANR	1235149	PrimaryExpression	1		1235052	1					
ANR	1235150	ElseStatement	else		1235052	0					
ANR	1235151	IfStatement	if ( * str == '*' )		1235052	0					
ANR	1235152	Condition	* str == '*'	2129:14:69420:69430	1235052	0	True				
ANR	1235153	EqualityExpression	* str == '*'		1235052	0		==			
ANR	1235154	UnaryOperationExpression	* str		1235052	0					
ANR	1235155	UnaryOperator	*		1235052	0					
ANR	1235156	Identifier	str		1235052	1					
ANR	1235157	PrimaryExpression	'*'		1235052	1					
ANR	1235158	CompoundStatement		16:27:286:286	1235052	1					
ANR	1235159	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: '*' may only be first arraySize value in list"" )"	2130:3:69438:69517	1235052	0	True				
ANR	1235160	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: '*' may only be first arraySize value in list"" )"		1235052	0					
ANR	1235161	Callee	soap_error0		1235052	0					
ANR	1235162	Identifier	soap_error0		1235052	0					
ANR	1235163	ArgumentList	E_ERROR		1235052	1					
ANR	1235164	Argument	E_ERROR		1235052	0					
ANR	1235165	Identifier	E_ERROR		1235052	0					
ANR	1235166	Argument	"""Encoding: '*' may only be first arraySize value in list"""		1235052	1					
ANR	1235167	PrimaryExpression	"""Encoding: '*' may only be first arraySize value in list"""		1235052	0					
ANR	1235168	ElseStatement	else		1235052	0					
ANR	1235169	CompoundStatement		18:9:381:381	1235052	0					
ANR	1235170	ExpressionStatement	flag = 0	2132:3:69533:69541	1235052	0	True				
ANR	1235171	AssignmentExpression	flag = 0		1235052	0		=			
ANR	1235172	Identifier	flag		1235052	0					
ANR	1235173	PrimaryExpression	0		1235052	1					
ANR	1235174	ExpressionStatement	str ++	2134:2:69549:69554	1235052	1	True				
ANR	1235175	PostIncDecOperationExpression	str ++		1235052	0					
ANR	1235176	Identifier	str		1235052	0					
ANR	1235177	IncDec	++		1235052	1					
ANR	1235178	ReturnStatement	return i ;	2136:1:69560:69568	1235052	4	True				
ANR	1235179	Identifier	i		1235052	0					
ANR	1235180	ReturnType	static int		1235052	1					
ANR	1235181	Identifier	calc_dimension_12		1235052	2					
ANR	1235182	ParameterList	const char * str		1235052	3					
ANR	1235183	Parameter	const char * str	2113:29:69129:69143	1235052	0	True				
ANR	1235184	ParameterType	const char *		1235052	0					
ANR	1235185	Identifier	str		1235052	1					
ANR	1235186	CFGEntryNode	ENTRY		1235052		True				
ANR	1235187	CFGExitNode	EXIT		1235052		True				
ANR	1235188	Symbol	str		1235052						
ANR	1235189	Symbol	flag		1235052						
ANR	1235190	Symbol	E_ERROR		1235052						
ANR	1235191	Symbol	i		1235052						
ANR	1235192	Symbol	* str		1235052						
ANR	1235193	Function	get_position_12	2139:0:69573:70188							
ANR	1235194	FunctionDef	"get_position_12 (int dimension , const char * str)"		1235193	0					
ANR	1235195	CompoundStatement		2140:0:69633:70188	1235193	0					
ANR	1235196	IdentifierDeclStatement	int * pos ;	2141:1:69636:69644	1235193	0	True				
ANR	1235197	IdentifierDecl	* pos		1235193	0					
ANR	1235198	IdentifierDeclType	int *		1235193	0					
ANR	1235199	Identifier	pos		1235193	1					
ANR	1235200	IdentifierDeclStatement	"int i = - 1 , flag = 0 ;"	2142:1:69647:69667	1235193	1	True				
ANR	1235201	IdentifierDecl	i = - 1		1235193	0					
ANR	1235202	IdentifierDeclType	int		1235193	0					
ANR	1235203	Identifier	i		1235193	1					
ANR	1235204	AssignmentExpression	i = - 1		1235193	2		=			
ANR	1235205	Identifier	i		1235193	0					
ANR	1235206	UnaryOperationExpression	- 1		1235193	1					
ANR	1235207	UnaryOperator	-		1235193	0					
ANR	1235208	PrimaryExpression	1		1235193	1					
ANR	1235209	IdentifierDecl	flag = 0		1235193	1					
ANR	1235210	IdentifierDeclType	int		1235193	0					
ANR	1235211	Identifier	flag		1235193	1					
ANR	1235212	AssignmentExpression	flag = 0		1235193	2		=			
ANR	1235213	Identifier	flag		1235193	0					
ANR	1235214	PrimaryExpression	0		1235193	1					
ANR	1235215	ExpressionStatement	"pos = safe_emalloc ( sizeof ( int ) , dimension , 0 )"	2144:1:69671:69716	1235193	2	True				
ANR	1235216	AssignmentExpression	"pos = safe_emalloc ( sizeof ( int ) , dimension , 0 )"		1235193	0		=			
ANR	1235217	Identifier	pos		1235193	0					
ANR	1235218	CallExpression	"safe_emalloc ( sizeof ( int ) , dimension , 0 )"		1235193	1					
ANR	1235219	Callee	safe_emalloc		1235193	0					
ANR	1235220	Identifier	safe_emalloc		1235193	0					
ANR	1235221	ArgumentList	sizeof ( int )		1235193	1					
ANR	1235222	Argument	sizeof ( int )		1235193	0					
ANR	1235223	SizeofExpression	sizeof ( int )		1235193	0					
ANR	1235224	Sizeof	sizeof		1235193	0					
ANR	1235225	SizeofOperand	int		1235193	1					
ANR	1235226	Argument	dimension		1235193	1					
ANR	1235227	Identifier	dimension		1235193	0					
ANR	1235228	Argument	0		1235193	2					
ANR	1235229	PrimaryExpression	0		1235193	0					
ANR	1235230	ExpressionStatement	"memset ( pos , 0 , sizeof ( int ) * dimension )"	2145:1:69719:69754	1235193	3	True				
ANR	1235231	CallExpression	"memset ( pos , 0 , sizeof ( int ) * dimension )"		1235193	0					
ANR	1235232	Callee	memset		1235193	0					
ANR	1235233	Identifier	memset		1235193	0					
ANR	1235234	ArgumentList	pos		1235193	1					
ANR	1235235	Argument	pos		1235193	0					
ANR	1235236	Identifier	pos		1235193	0					
ANR	1235237	Argument	0		1235193	1					
ANR	1235238	PrimaryExpression	0		1235193	0					
ANR	1235239	Argument	sizeof ( int ) * dimension		1235193	2					
ANR	1235240	MultiplicativeExpression	sizeof ( int ) * dimension		1235193	0		*			
ANR	1235241	SizeofExpression	sizeof ( int )		1235193	0					
ANR	1235242	Sizeof	sizeof		1235193	0					
ANR	1235243	SizeofOperand	int		1235193	1					
ANR	1235244	Identifier	dimension		1235193	1					
ANR	1235245	WhileStatement	while ( * str != '\\0' && ( * str < '0' || * str > '9' ) && ( * str != '*' ) )		1235193	4					
ANR	1235246	Condition	* str != '\\0' && ( * str < '0' || * str > '9' ) && ( * str != '*' )	2146:8:69764:69822	1235193	0	True				
ANR	1235247	AndExpression	* str != '\\0' && ( * str < '0' || * str > '9' ) && ( * str != '*' )		1235193	0		&&			
ANR	1235248	EqualityExpression	* str != '\\0'		1235193	0		!=			
ANR	1235249	UnaryOperationExpression	* str		1235193	0					
ANR	1235250	UnaryOperator	*		1235193	0					
ANR	1235251	Identifier	str		1235193	1					
ANR	1235252	PrimaryExpression	'\\0'		1235193	1					
ANR	1235253	AndExpression	( * str < '0' || * str > '9' ) && ( * str != '*' )		1235193	1		&&			
ANR	1235254	OrExpression	* str < '0' || * str > '9'		1235193	0		||			
ANR	1235255	RelationalExpression	* str < '0'		1235193	0		<			
ANR	1235256	UnaryOperationExpression	* str		1235193	0					
ANR	1235257	UnaryOperator	*		1235193	0					
ANR	1235258	Identifier	str		1235193	1					
ANR	1235259	PrimaryExpression	'0'		1235193	1					
ANR	1235260	RelationalExpression	* str > '9'		1235193	1		>			
ANR	1235261	UnaryOperationExpression	* str		1235193	0					
ANR	1235262	UnaryOperator	*		1235193	0					
ANR	1235263	Identifier	str		1235193	1					
ANR	1235264	PrimaryExpression	'9'		1235193	1					
ANR	1235265	EqualityExpression	* str != '*'		1235193	1		!=			
ANR	1235266	UnaryOperationExpression	* str		1235193	0					
ANR	1235267	UnaryOperator	*		1235193	0					
ANR	1235268	Identifier	str		1235193	1					
ANR	1235269	PrimaryExpression	'*'		1235193	1					
ANR	1235270	CompoundStatement		7:69:191:191	1235193	1					
ANR	1235271	ExpressionStatement	str ++	2147:2:69829:69834	1235193	0	True				
ANR	1235272	PostIncDecOperationExpression	str ++		1235193	0					
ANR	1235273	Identifier	str		1235193	0					
ANR	1235274	IncDec	++		1235193	1					
ANR	1235275	IfStatement	if ( * str == '*' )		1235193	5					
ANR	1235276	Condition	* str == '*'	2149:5:69844:69854	1235193	0	True				
ANR	1235277	EqualityExpression	* str == '*'		1235193	0		==			
ANR	1235278	UnaryOperationExpression	* str		1235193	0					
ANR	1235279	UnaryOperator	*		1235193	0					
ANR	1235280	Identifier	str		1235193	1					
ANR	1235281	PrimaryExpression	'*'		1235193	1					
ANR	1235282	CompoundStatement		10:18:223:223	1235193	1					
ANR	1235283	ExpressionStatement	str ++	2150:2:69861:69866	1235193	0	True				
ANR	1235284	PostIncDecOperationExpression	str ++		1235193	0					
ANR	1235285	Identifier	str		1235193	0					
ANR	1235286	IncDec	++		1235193	1					
ANR	1235287	ExpressionStatement	i ++	2151:2:69870:69873	1235193	1	True				
ANR	1235288	PostIncDecOperationExpression	i ++		1235193	0					
ANR	1235289	Identifier	i		1235193	0					
ANR	1235290	IncDec	++		1235193	1					
ANR	1235291	WhileStatement	while ( * str != '\\0' )		1235193	6					
ANR	1235292	Condition	* str != '\\0'	2153:8:69886:69897	1235193	0	True				
ANR	1235293	EqualityExpression	* str != '\\0'		1235193	0		!=			
ANR	1235294	UnaryOperationExpression	* str		1235193	0					
ANR	1235295	UnaryOperator	*		1235193	0					
ANR	1235296	Identifier	str		1235193	1					
ANR	1235297	PrimaryExpression	'\\0'		1235193	1					
ANR	1235298	CompoundStatement		14:22:266:266	1235193	1					
ANR	1235299	IfStatement	if ( * str >= '0' && * str <= '9' )		1235193	0					
ANR	1235300	Condition	* str >= '0' && * str <= '9'	2154:6:69908:69933	1235193	0	True				
ANR	1235301	AndExpression	* str >= '0' && * str <= '9'		1235193	0		&&			
ANR	1235302	RelationalExpression	* str >= '0'		1235193	0		>=			
ANR	1235303	UnaryOperationExpression	* str		1235193	0					
ANR	1235304	UnaryOperator	*		1235193	0					
ANR	1235305	Identifier	str		1235193	1					
ANR	1235306	PrimaryExpression	'0'		1235193	1					
ANR	1235307	RelationalExpression	* str <= '9'		1235193	1		<=			
ANR	1235308	UnaryOperationExpression	* str		1235193	0					
ANR	1235309	UnaryOperator	*		1235193	0					
ANR	1235310	Identifier	str		1235193	1					
ANR	1235311	PrimaryExpression	'9'		1235193	1					
ANR	1235312	CompoundStatement		15:34:302:302	1235193	1					
ANR	1235313	IfStatement	if ( flag == 0 )		1235193	0					
ANR	1235314	Condition	flag == 0	2155:7:69945:69953	1235193	0	True				
ANR	1235315	EqualityExpression	flag == 0		1235193	0		==			
ANR	1235316	Identifier	flag		1235193	0					
ANR	1235317	PrimaryExpression	0		1235193	1					
ANR	1235318	CompoundStatement		16:18:322:322	1235193	1					
ANR	1235319	ExpressionStatement	i ++	2156:4:69962:69965	1235193	0	True				
ANR	1235320	PostIncDecOperationExpression	i ++		1235193	0					
ANR	1235321	Identifier	i		1235193	0					
ANR	1235322	IncDec	++		1235193	1					
ANR	1235323	ExpressionStatement	flag = 1	2157:4:69971:69979	1235193	1	True				
ANR	1235324	AssignmentExpression	flag = 1		1235193	0		=			
ANR	1235325	Identifier	flag		1235193	0					
ANR	1235326	PrimaryExpression	1		1235193	1					
ANR	1235327	ExpressionStatement	pos [ i ] = ( pos [ i ] * 10 ) + ( * str - '0' )	2159:3:69989:70020	1235193	1	True				
ANR	1235328	AssignmentExpression	pos [ i ] = ( pos [ i ] * 10 ) + ( * str - '0' )		1235193	0		=			
ANR	1235329	ArrayIndexing	pos [ i ]		1235193	0					
ANR	1235330	Identifier	pos		1235193	0					
ANR	1235331	Identifier	i		1235193	1					
ANR	1235332	AdditiveExpression	( pos [ i ] * 10 ) + ( * str - '0' )		1235193	1		+			
ANR	1235333	MultiplicativeExpression	pos [ i ] * 10		1235193	0		*			
ANR	1235334	ArrayIndexing	pos [ i ]		1235193	0					
ANR	1235335	Identifier	pos		1235193	0					
ANR	1235336	Identifier	i		1235193	1					
ANR	1235337	PrimaryExpression	10		1235193	1					
ANR	1235338	AdditiveExpression	* str - '0'		1235193	1		-			
ANR	1235339	UnaryOperationExpression	* str		1235193	0					
ANR	1235340	UnaryOperator	*		1235193	0					
ANR	1235341	Identifier	str		1235193	1					
ANR	1235342	PrimaryExpression	'0'		1235193	1					
ANR	1235343	ElseStatement	else		1235193	0					
ANR	1235344	IfStatement	if ( * str == '*' )		1235193	0					
ANR	1235345	Condition	* str == '*'	2160:13:70035:70045	1235193	0	True				
ANR	1235346	EqualityExpression	* str == '*'		1235193	0		==			
ANR	1235347	UnaryOperationExpression	* str		1235193	0					
ANR	1235348	UnaryOperator	*		1235193	0					
ANR	1235349	Identifier	str		1235193	1					
ANR	1235350	PrimaryExpression	'*'		1235193	1					
ANR	1235351	CompoundStatement		21:26:414:414	1235193	1					
ANR	1235352	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: '*' may only be first arraySize value in list"" )"	2161:3:70053:70132	1235193	0	True				
ANR	1235353	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: '*' may only be first arraySize value in list"" )"		1235193	0					
ANR	1235354	Callee	soap_error0		1235193	0					
ANR	1235355	Identifier	soap_error0		1235193	0					
ANR	1235356	ArgumentList	E_ERROR		1235193	1					
ANR	1235357	Argument	E_ERROR		1235193	0					
ANR	1235358	Identifier	E_ERROR		1235193	0					
ANR	1235359	Argument	"""Encoding: '*' may only be first arraySize value in list"""		1235193	1					
ANR	1235360	PrimaryExpression	"""Encoding: '*' may only be first arraySize value in list"""		1235193	0					
ANR	1235361	ElseStatement	else		1235193	0					
ANR	1235362	CompoundStatement		23:9:509:509	1235193	0					
ANR	1235363	ExpressionStatement	flag = 0	2163:4:70149:70157	1235193	0	True				
ANR	1235364	AssignmentExpression	flag = 0		1235193	0		=			
ANR	1235365	Identifier	flag		1235193	0					
ANR	1235366	PrimaryExpression	0		1235193	1					
ANR	1235367	ExpressionStatement	str ++	2165:2:70165:70170	1235193	1	True				
ANR	1235368	PostIncDecOperationExpression	str ++		1235193	0					
ANR	1235369	Identifier	str		1235193	0					
ANR	1235370	IncDec	++		1235193	1					
ANR	1235371	ReturnStatement	return pos ;	2167:1:70176:70186	1235193	7	True				
ANR	1235372	Identifier	pos		1235193	0					
ANR	1235373	ReturnType	static int *		1235193	1					
ANR	1235374	Identifier	get_position_12		1235193	2					
ANR	1235375	ParameterList	"int dimension , const char * str"		1235193	3					
ANR	1235376	Parameter	int dimension	2139:28:69601:69613	1235193	0	True				
ANR	1235377	ParameterType	int		1235193	0					
ANR	1235378	Identifier	dimension		1235193	1					
ANR	1235379	Parameter	const char * str	2139:43:69616:69630	1235193	1	True				
ANR	1235380	ParameterType	const char *		1235193	0					
ANR	1235381	Identifier	str		1235193	1					
ANR	1235382	CFGEntryNode	ENTRY		1235193		True				
ANR	1235383	CFGExitNode	EXIT		1235193		True				
ANR	1235384	Symbol	str		1235193						
ANR	1235385	Symbol	flag		1235193						
ANR	1235386	Symbol	* i		1235193						
ANR	1235387	Symbol	E_ERROR		1235193						
ANR	1235388	Symbol	pos		1235193						
ANR	1235389	Symbol	i		1235193						
ANR	1235390	Symbol	* str		1235193						
ANR	1235391	Symbol	dimension		1235193						
ANR	1235392	Symbol	safe_emalloc		1235193						
ANR	1235393	Symbol	* pos		1235193						
ANR	1235394	Function	calc_dimension	2170:0:70191:70346							
ANR	1235395	FunctionDef	calc_dimension (const char * str)		1235394	0					
ANR	1235396	CompoundStatement		2171:0:70234:70346	1235394	0					
ANR	1235397	IdentifierDeclStatement	int i = 1 ;	2172:1:70237:70246	1235394	0	True				
ANR	1235398	IdentifierDecl	i = 1		1235394	0					
ANR	1235399	IdentifierDeclType	int		1235394	0					
ANR	1235400	Identifier	i		1235394	1					
ANR	1235401	AssignmentExpression	i = 1		1235394	2		=			
ANR	1235402	Identifier	i		1235394	0					
ANR	1235403	PrimaryExpression	1		1235394	1					
ANR	1235404	WhileStatement	while ( * str != ']' && * str != '\\0' )		1235394	1					
ANR	1235405	Condition	* str != ']' && * str != '\\0'	2173:8:70256:70282	1235394	0	True				
ANR	1235406	AndExpression	* str != ']' && * str != '\\0'		1235394	0		&&			
ANR	1235407	EqualityExpression	* str != ']'		1235394	0		!=			
ANR	1235408	UnaryOperationExpression	* str		1235394	0					
ANR	1235409	UnaryOperator	*		1235394	0					
ANR	1235410	Identifier	str		1235394	1					
ANR	1235411	PrimaryExpression	']'		1235394	1					
ANR	1235412	EqualityExpression	* str != '\\0'		1235394	1		!=			
ANR	1235413	UnaryOperationExpression	* str		1235394	0					
ANR	1235414	UnaryOperator	*		1235394	0					
ANR	1235415	Identifier	str		1235394	1					
ANR	1235416	PrimaryExpression	'\\0'		1235394	1					
ANR	1235417	CompoundStatement		3:37:50:50	1235394	1					
ANR	1235418	IfStatement	"if ( * str == ',' )"		1235394	0					
ANR	1235419	Condition	"* str == ','"	2174:6:70293:70303	1235394	0	True				
ANR	1235420	EqualityExpression	"* str == ','"		1235394	0		==			
ANR	1235421	UnaryOperationExpression	* str		1235394	0					
ANR	1235422	UnaryOperator	*		1235394	0					
ANR	1235423	Identifier	str		1235394	1					
ANR	1235424	PrimaryExpression	"','"		1235394	1					
ANR	1235425	CompoundStatement		4:19:71:71	1235394	1					
ANR	1235426	ExpressionStatement	i ++	2175:6:70314:70317	1235394	0	True				
ANR	1235427	PostIncDecOperationExpression	i ++		1235394	0					
ANR	1235428	Identifier	i		1235394	0					
ANR	1235429	IncDec	++		1235394	1					
ANR	1235430	ExpressionStatement	str ++	2177:2:70325:70330	1235394	1	True				
ANR	1235431	PostIncDecOperationExpression	str ++		1235394	0					
ANR	1235432	Identifier	str		1235394	0					
ANR	1235433	IncDec	++		1235394	1					
ANR	1235434	ReturnStatement	return i ;	2179:1:70336:70344	1235394	2	True				
ANR	1235435	Identifier	i		1235394	0					
ANR	1235436	ReturnType	static int		1235394	1					
ANR	1235437	Identifier	calc_dimension		1235394	2					
ANR	1235438	ParameterList	const char * str		1235394	3					
ANR	1235439	Parameter	const char * str	2170:26:70217:70231	1235394	0	True				
ANR	1235440	ParameterType	const char *		1235394	0					
ANR	1235441	Identifier	str		1235394	1					
ANR	1235442	CFGEntryNode	ENTRY		1235394		True				
ANR	1235443	CFGExitNode	EXIT		1235394		True				
ANR	1235444	Symbol	str		1235394						
ANR	1235445	Symbol	i		1235394						
ANR	1235446	Symbol	* str		1235394						
ANR	1235447	Function	get_position_ex	2182:0:70349:70660							
ANR	1235448	FunctionDef	"get_position_ex (int dimension , const char * str , int * * pos)"		1235447	0					
ANR	1235449	CompoundStatement		2183:0:70420:70660	1235447	0					
ANR	1235450	IdentifierDeclStatement	int i = 0 ;	2184:1:70423:70432	1235447	0	True				
ANR	1235451	IdentifierDecl	i = 0		1235447	0					
ANR	1235452	IdentifierDeclType	int		1235447	0					
ANR	1235453	Identifier	i		1235447	1					
ANR	1235454	AssignmentExpression	i = 0		1235447	2		=			
ANR	1235455	Identifier	i		1235447	0					
ANR	1235456	PrimaryExpression	0		1235447	1					
ANR	1235457	ExpressionStatement	"memset ( * pos , 0 , sizeof ( int ) * dimension )"	2186:1:70436:70472	1235447	1	True				
ANR	1235458	CallExpression	"memset ( * pos , 0 , sizeof ( int ) * dimension )"		1235447	0					
ANR	1235459	Callee	memset		1235447	0					
ANR	1235460	Identifier	memset		1235447	0					
ANR	1235461	ArgumentList	* pos		1235447	1					
ANR	1235462	Argument	* pos		1235447	0					
ANR	1235463	UnaryOperationExpression	* pos		1235447	0					
ANR	1235464	UnaryOperator	*		1235447	0					
ANR	1235465	Identifier	pos		1235447	1					
ANR	1235466	Argument	0		1235447	1					
ANR	1235467	PrimaryExpression	0		1235447	0					
ANR	1235468	Argument	sizeof ( int ) * dimension		1235447	2					
ANR	1235469	MultiplicativeExpression	sizeof ( int ) * dimension		1235447	0		*			
ANR	1235470	SizeofExpression	sizeof ( int )		1235447	0					
ANR	1235471	Sizeof	sizeof		1235447	0					
ANR	1235472	SizeofOperand	int		1235447	1					
ANR	1235473	Identifier	dimension		1235447	1					
ANR	1235474	WhileStatement	while ( * str != ']' && * str != '\\0' && i < dimension )		1235447	2					
ANR	1235475	Condition	* str != ']' && * str != '\\0' && i < dimension	2187:8:70482:70525	1235447	0	True				
ANR	1235476	AndExpression	* str != ']' && * str != '\\0' && i < dimension		1235447	0		&&			
ANR	1235477	EqualityExpression	* str != ']'		1235447	0		!=			
ANR	1235478	UnaryOperationExpression	* str		1235447	0					
ANR	1235479	UnaryOperator	*		1235447	0					
ANR	1235480	Identifier	str		1235447	1					
ANR	1235481	PrimaryExpression	']'		1235447	1					
ANR	1235482	AndExpression	* str != '\\0' && i < dimension		1235447	1		&&			
ANR	1235483	EqualityExpression	* str != '\\0'		1235447	0		!=			
ANR	1235484	UnaryOperationExpression	* str		1235447	0					
ANR	1235485	UnaryOperator	*		1235447	0					
ANR	1235486	Identifier	str		1235447	1					
ANR	1235487	PrimaryExpression	'\\0'		1235447	1					
ANR	1235488	RelationalExpression	i < dimension		1235447	1		<			
ANR	1235489	Identifier	i		1235447	0					
ANR	1235490	Identifier	dimension		1235447	1					
ANR	1235491	CompoundStatement		5:54:107:107	1235447	1					
ANR	1235492	IfStatement	if ( * str >= '0' && * str <= '9' )		1235447	0					
ANR	1235493	Condition	* str >= '0' && * str <= '9'	2188:6:70536:70561	1235447	0	True				
ANR	1235494	AndExpression	* str >= '0' && * str <= '9'		1235447	0		&&			
ANR	1235495	RelationalExpression	* str >= '0'		1235447	0		>=			
ANR	1235496	UnaryOperationExpression	* str		1235447	0					
ANR	1235497	UnaryOperator	*		1235447	0					
ANR	1235498	Identifier	str		1235447	1					
ANR	1235499	PrimaryExpression	'0'		1235447	1					
ANR	1235500	RelationalExpression	* str <= '9'		1235447	1		<=			
ANR	1235501	UnaryOperationExpression	* str		1235447	0					
ANR	1235502	UnaryOperator	*		1235447	0					
ANR	1235503	Identifier	str		1235447	1					
ANR	1235504	PrimaryExpression	'9'		1235447	1					
ANR	1235505	CompoundStatement		6:34:143:143	1235447	1					
ANR	1235506	ExpressionStatement	( * pos ) [ i ] = ( ( * pos ) [ i ] * 10 ) + ( * str - '0' )	2189:3:70569:70606	1235447	0	True				
ANR	1235507	AssignmentExpression	( * pos ) [ i ] = ( ( * pos ) [ i ] * 10 ) + ( * str - '0' )		1235447	0		=			
ANR	1235508	ArrayIndexing	( * pos ) [ i ]		1235447	0					
ANR	1235509	UnaryOperationExpression	* pos		1235447	0					
ANR	1235510	UnaryOperator	*		1235447	0					
ANR	1235511	Identifier	pos		1235447	1					
ANR	1235512	Identifier	i		1235447	1					
ANR	1235513	AdditiveExpression	( ( * pos ) [ i ] * 10 ) + ( * str - '0' )		1235447	1		+			
ANR	1235514	MultiplicativeExpression	( * pos ) [ i ] * 10		1235447	0		*			
ANR	1235515	ArrayIndexing	( * pos ) [ i ]		1235447	0					
ANR	1235516	UnaryOperationExpression	* pos		1235447	0					
ANR	1235517	UnaryOperator	*		1235447	0					
ANR	1235518	Identifier	pos		1235447	1					
ANR	1235519	Identifier	i		1235447	1					
ANR	1235520	PrimaryExpression	10		1235447	1					
ANR	1235521	AdditiveExpression	* str - '0'		1235447	1		-			
ANR	1235522	UnaryOperationExpression	* str		1235447	0					
ANR	1235523	UnaryOperator	*		1235447	0					
ANR	1235524	Identifier	str		1235447	1					
ANR	1235525	PrimaryExpression	'0'		1235447	1					
ANR	1235526	ElseStatement	else		1235447	0					
ANR	1235527	IfStatement	"if ( * str == ',' )"		1235447	0					
ANR	1235528	Condition	"* str == ','"	2190:13:70621:70631	1235447	0	True				
ANR	1235529	EqualityExpression	"* str == ','"		1235447	0		==			
ANR	1235530	UnaryOperationExpression	* str		1235447	0					
ANR	1235531	UnaryOperator	*		1235447	0					
ANR	1235532	Identifier	str		1235447	1					
ANR	1235533	PrimaryExpression	"','"		1235447	1					
ANR	1235534	CompoundStatement		8:26:213:213	1235447	1					
ANR	1235535	ExpressionStatement	i ++	2191:3:70639:70642	1235447	0	True				
ANR	1235536	PostIncDecOperationExpression	i ++		1235447	0					
ANR	1235537	Identifier	i		1235447	0					
ANR	1235538	IncDec	++		1235447	1					
ANR	1235539	ExpressionStatement	str ++	2193:2:70650:70655	1235447	1	True				
ANR	1235540	PostIncDecOperationExpression	str ++		1235447	0					
ANR	1235541	Identifier	str		1235447	0					
ANR	1235542	IncDec	++		1235447	1					
ANR	1235543	ReturnType	static void		1235447	1					
ANR	1235544	Identifier	get_position_ex		1235447	2					
ANR	1235545	ParameterList	"int dimension , const char * str , int * * pos"		1235447	3					
ANR	1235546	Parameter	int dimension	2182:28:70377:70389	1235447	0	True				
ANR	1235547	ParameterType	int		1235447	0					
ANR	1235548	Identifier	dimension		1235447	1					
ANR	1235549	Parameter	const char * str	2182:43:70392:70406	1235447	1	True				
ANR	1235550	ParameterType	const char *		1235447	0					
ANR	1235551	Identifier	str		1235447	1					
ANR	1235552	Parameter	int * * pos	2182:60:70409:70417	1235447	2	True				
ANR	1235553	ParameterType	int * *		1235447	0					
ANR	1235554	Identifier	pos		1235447	1					
ANR	1235555	CFGEntryNode	ENTRY		1235447		True				
ANR	1235556	CFGExitNode	EXIT		1235447		True				
ANR	1235557	Symbol	str		1235447						
ANR	1235558	Symbol	* i		1235447						
ANR	1235559	Symbol	pos		1235447						
ANR	1235560	Symbol	* * pos		1235447						
ANR	1235561	Symbol	i		1235447						
ANR	1235562	Symbol	* str		1235447						
ANR	1235563	Symbol	dimension		1235447						
ANR	1235564	Symbol	* pos		1235447						
ANR	1235565	Function	get_position	2197:0:70663:70835							
ANR	1235566	FunctionDef	"get_position (int dimension , const char * str)"		1235565	0					
ANR	1235567	CompoundStatement		2198:0:70720:70835	1235565	0					
ANR	1235568	IdentifierDeclStatement	int * pos ;	2199:1:70723:70731	1235565	0	True				
ANR	1235569	IdentifierDecl	* pos		1235565	0					
ANR	1235570	IdentifierDeclType	int *		1235565	0					
ANR	1235571	Identifier	pos		1235565	1					
ANR	1235572	ExpressionStatement	"pos = safe_emalloc ( sizeof ( int ) , dimension , 0 )"	2201:1:70735:70780	1235565	1	True				
ANR	1235573	AssignmentExpression	"pos = safe_emalloc ( sizeof ( int ) , dimension , 0 )"		1235565	0		=			
ANR	1235574	Identifier	pos		1235565	0					
ANR	1235575	CallExpression	"safe_emalloc ( sizeof ( int ) , dimension , 0 )"		1235565	1					
ANR	1235576	Callee	safe_emalloc		1235565	0					
ANR	1235577	Identifier	safe_emalloc		1235565	0					
ANR	1235578	ArgumentList	sizeof ( int )		1235565	1					
ANR	1235579	Argument	sizeof ( int )		1235565	0					
ANR	1235580	SizeofExpression	sizeof ( int )		1235565	0					
ANR	1235581	Sizeof	sizeof		1235565	0					
ANR	1235582	SizeofOperand	int		1235565	1					
ANR	1235583	Argument	dimension		1235565	1					
ANR	1235584	Identifier	dimension		1235565	0					
ANR	1235585	Argument	0		1235565	2					
ANR	1235586	PrimaryExpression	0		1235565	0					
ANR	1235587	ExpressionStatement	"get_position_ex ( dimension , str , & pos )"	2202:1:70783:70820	1235565	2	True				
ANR	1235588	CallExpression	"get_position_ex ( dimension , str , & pos )"		1235565	0					
ANR	1235589	Callee	get_position_ex		1235565	0					
ANR	1235590	Identifier	get_position_ex		1235565	0					
ANR	1235591	ArgumentList	dimension		1235565	1					
ANR	1235592	Argument	dimension		1235565	0					
ANR	1235593	Identifier	dimension		1235565	0					
ANR	1235594	Argument	str		1235565	1					
ANR	1235595	Identifier	str		1235565	0					
ANR	1235596	Argument	& pos		1235565	2					
ANR	1235597	UnaryOperationExpression	& pos		1235565	0					
ANR	1235598	UnaryOperator	&		1235565	0					
ANR	1235599	Identifier	pos		1235565	1					
ANR	1235600	ReturnStatement	return pos ;	2203:1:70823:70833	1235565	3	True				
ANR	1235601	Identifier	pos		1235565	0					
ANR	1235602	ReturnType	static int *		1235565	1					
ANR	1235603	Identifier	get_position		1235565	2					
ANR	1235604	ParameterList	"int dimension , const char * str"		1235565	3					
ANR	1235605	Parameter	int dimension	2197:25:70688:70700	1235565	0	True				
ANR	1235606	ParameterType	int		1235565	0					
ANR	1235607	Identifier	dimension		1235565	1					
ANR	1235608	Parameter	const char * str	2197:40:70703:70717	1235565	1	True				
ANR	1235609	ParameterType	const char *		1235565	0					
ANR	1235610	Identifier	str		1235565	1					
ANR	1235611	CFGEntryNode	ENTRY		1235565		True				
ANR	1235612	CFGExitNode	EXIT		1235565		True				
ANR	1235613	Symbol	str		1235565						
ANR	1235614	Symbol	pos		1235565						
ANR	1235615	Symbol	dimension		1235565						
ANR	1235616	Symbol	safe_emalloc		1235565						
ANR	1235617	Symbol	& pos		1235565						
ANR	1235618	Function	add_xml_array_elements	2206:0:70838:73151							
ANR	1235619	FunctionDef	"add_xml_array_elements (xmlNodePtr xmlParam , sdlTypePtr type , encodePtr enc , xmlNsPtr ns , int dimension , int * dims , zval * data , int style TSRMLS_DC)"		1235618	0					
ANR	1235620	CompoundStatement		2215:0:71279:73151	1235618	0					
ANR	1235621	IdentifierDeclStatement	int j ;	2216:1:71282:71287	1235618	0	True				
ANR	1235622	IdentifierDecl	j		1235618	0					
ANR	1235623	IdentifierDeclType	int		1235618	0					
ANR	1235624	Identifier	j		1235618	1					
ANR	1235625	IfStatement	if ( data && Z_TYPE_P ( data ) == IS_ARRAY )		1235618	1					
ANR	1235626	Condition	data && Z_TYPE_P ( data ) == IS_ARRAY	2218:5:71295:71328	1235618	0	True				
ANR	1235627	AndExpression	data && Z_TYPE_P ( data ) == IS_ARRAY		1235618	0		&&			
ANR	1235628	Identifier	data		1235618	0					
ANR	1235629	EqualityExpression	Z_TYPE_P ( data ) == IS_ARRAY		1235618	1		==			
ANR	1235630	CallExpression	Z_TYPE_P ( data )		1235618	0					
ANR	1235631	Callee	Z_TYPE_P		1235618	0					
ANR	1235632	Identifier	Z_TYPE_P		1235618	0					
ANR	1235633	ArgumentList	data		1235618	1					
ANR	1235634	Argument	data		1235618	0					
ANR	1235635	Identifier	data		1235618	0					
ANR	1235636	Identifier	IS_ARRAY		1235618	1					
ANR	1235637	CompoundStatement		4:41:51:51	1235618	1					
ANR	1235638	ExpressionStatement	zend_hash_internal_pointer_reset ( data -> value . ht )	2219:3:71336:71384	1235618	0	True				
ANR	1235639	CallExpression	zend_hash_internal_pointer_reset ( data -> value . ht )		1235618	0					
ANR	1235640	Callee	zend_hash_internal_pointer_reset		1235618	0					
ANR	1235641	Identifier	zend_hash_internal_pointer_reset		1235618	0					
ANR	1235642	ArgumentList	data -> value . ht		1235618	1					
ANR	1235643	Argument	data -> value . ht		1235618	0					
ANR	1235644	MemberAccess	data -> value . ht		1235618	0					
ANR	1235645	PtrMemberAccess	data -> value		1235618	0					
ANR	1235646	Identifier	data		1235618	0					
ANR	1235647	Identifier	value		1235618	1					
ANR	1235648	Identifier	ht		1235618	1					
ANR	1235649	ForStatement	for ( j = 0 ; j < dims [ 0 ] ; j ++ )		1235618	1					
ANR	1235650	ForInit	j = 0 ;	2220:7:71393:71396	1235618	0	True				
ANR	1235651	AssignmentExpression	j = 0		1235618	0		=			
ANR	1235652	Identifier	j		1235618	0					
ANR	1235653	PrimaryExpression	0		1235618	1					
ANR	1235654	Condition	j < dims [ 0 ]	2220:12:71398:71406	1235618	1	True				
ANR	1235655	RelationalExpression	j < dims [ 0 ]		1235618	0		<			
ANR	1235656	Identifier	j		1235618	0					
ANR	1235657	ArrayIndexing	dims [ 0 ]		1235618	1					
ANR	1235658	Identifier	dims		1235618	0					
ANR	1235659	PrimaryExpression	0		1235618	1					
ANR	1235660	PostIncDecOperationExpression	j ++	2220:23:71409:71411	1235618	2	True				
ANR	1235661	Identifier	j		1235618	0					
ANR	1235662	IncDec	++		1235618	1					
ANR	1235663	CompoundStatement		7:4:140:152	1235618	3					
ANR	1235664	IdentifierDeclStatement	zval * * zdata ;	2221:4:71420:71432	1235618	0	True				
ANR	1235665	IdentifierDecl	* * zdata		1235618	0					
ANR	1235666	IdentifierDeclType	zval * *		1235618	0					
ANR	1235667	Identifier	zdata		1235618	1					
ANR	1235668	IfStatement	"if ( zend_hash_get_current_data ( data -> value . ht , ( void * * ) & zdata ) != SUCCESS )"		1235618	1					
ANR	1235669	Condition	"zend_hash_get_current_data ( data -> value . ht , ( void * * ) & zdata ) != SUCCESS"	2223:8:71443:71512	1235618	0	True				
ANR	1235670	EqualityExpression	"zend_hash_get_current_data ( data -> value . ht , ( void * * ) & zdata ) != SUCCESS"		1235618	0		!=			
ANR	1235671	CallExpression	"zend_hash_get_current_data ( data -> value . ht , ( void * * ) & zdata )"		1235618	0					
ANR	1235672	Callee	zend_hash_get_current_data		1235618	0					
ANR	1235673	Identifier	zend_hash_get_current_data		1235618	0					
ANR	1235674	ArgumentList	data -> value . ht		1235618	1					
ANR	1235675	Argument	data -> value . ht		1235618	0					
ANR	1235676	MemberAccess	data -> value . ht		1235618	0					
ANR	1235677	PtrMemberAccess	data -> value		1235618	0					
ANR	1235678	Identifier	data		1235618	0					
ANR	1235679	Identifier	value		1235618	1					
ANR	1235680	Identifier	ht		1235618	1					
ANR	1235681	Argument	( void * * ) & zdata		1235618	1					
ANR	1235682	CastExpression	( void * * ) & zdata		1235618	0					
ANR	1235683	CastTarget	void * *		1235618	0					
ANR	1235684	UnaryOperationExpression	& zdata		1235618	1					
ANR	1235685	UnaryOperator	&		1235618	0					
ANR	1235686	Identifier	zdata		1235618	1					
ANR	1235687	Identifier	SUCCESS		1235618	1					
ANR	1235688	CompoundStatement		9:80:235:235	1235618	1					
ANR	1235689	ExpressionStatement	zdata = NULL	2224:5:71522:71534	1235618	0	True				
ANR	1235690	AssignmentExpression	zdata = NULL		1235618	0		=			
ANR	1235691	Identifier	zdata		1235618	0					
ANR	1235692	Identifier	NULL		1235618	1					
ANR	1235693	IfStatement	if ( dimension == 1 )		1235618	2					
ANR	1235694	Condition	dimension == 1	2226:8:71550:71563	1235618	0	True				
ANR	1235695	EqualityExpression	dimension == 1		1235618	0		==			
ANR	1235696	Identifier	dimension		1235618	0					
ANR	1235697	PrimaryExpression	1		1235618	1					
ANR	1235698	CompoundStatement		13:5:293:310	1235618	1					
ANR	1235699	IdentifierDeclStatement	xmlNodePtr xparam ;	2227:5:71573:71590	1235618	0	True				
ANR	1235700	IdentifierDecl	xparam		1235618	0					
ANR	1235701	IdentifierDeclType	xmlNodePtr		1235618	0					
ANR	1235702	Identifier	xparam		1235618	1					
ANR	1235703	IfStatement	if ( zdata )		1235618	1					
ANR	1235704	Condition	zdata	2229:9:71602:71606	1235618	0	True				
ANR	1235705	Identifier	zdata		1235618	0					
ANR	1235706	CompoundStatement		15:16:329:329	1235618	1					
ANR	1235707	IfStatement	if ( enc == NULL )		1235618	0					
ANR	1235708	Condition	enc == NULL	2230:10:71621:71631	1235618	0	True				
ANR	1235709	EqualityExpression	enc == NULL		1235618	0		==			
ANR	1235710	Identifier	enc		1235618	0					
ANR	1235711	Identifier	NULL		1235618	1					
ANR	1235712	CompoundStatement		16:23:354:354	1235618	1					
ANR	1235713	Statement	xparam	2231:7:71643:71648	1235618	0	True				
ANR	1235714	Statement	=	2231:14:71650:71650	1235618	1	True				
ANR	1235715	Statement	master_to_xml	2231:16:71652:71664	1235618	2	True				
ANR	1235716	Statement	(	2231:29:71665:71665	1235618	3	True				
ANR	1235717	Statement	get_conversion	2231:30:71666:71679	1235618	4	True				
ANR	1235718	Statement	(	2231:44:71680:71680	1235618	5	True				
ANR	1235719	Statement	(	2231:45:71681:71681	1235618	6	True				
ANR	1235720	Statement	*	2231:46:71682:71682	1235618	7	True				
ANR	1235721	Statement	zdata	2231:47:71683:71687	1235618	8	True				
ANR	1235722	Statement	)	2231:52:71688:71688	1235618	9	True				
ANR	1235723	Statement	->	2231:53:71689:71690	1235618	10	True				
ANR	1235724	Statement	type	2231:55:71691:71694	1235618	11	True				
ANR	1235725	Statement	)	2231:59:71695:71695	1235618	12	True				
ANR	1235726	Statement	","	2231:60:71696:71696	1235618	13	True				
ANR	1235727	Statement	(	2231:62:71698:71698	1235618	14	True				
ANR	1235728	Statement	*	2231:63:71699:71699	1235618	15	True				
ANR	1235729	Statement	zdata	2231:64:71700:71704	1235618	16	True				
ANR	1235730	Statement	)	2231:69:71705:71705	1235618	17	True				
ANR	1235731	Statement	","	2231:70:71706:71706	1235618	18	True				
ANR	1235732	Statement	style	2231:72:71708:71712	1235618	19	True				
ANR	1235733	Statement	","	2231:77:71713:71713	1235618	20	True				
ANR	1235734	Statement	xmlParam	2231:79:71715:71722	1235618	21	True				
ANR	1235735	Statement	TSRMLS_CC	2231:88:71724:71732	1235618	22	True				
ANR	1235736	Statement	)	2231:97:71733:71733	1235618	23	True				
ANR	1235737	ExpressionStatement		2231:98:71734:71734	1235618	24	True				
ANR	1235738	ElseStatement	else		1235618	0					
ANR	1235739	CompoundStatement		18:13:469:469	1235618	0					
ANR	1235740	Statement	xparam	2233:7:71758:71763	1235618	0	True				
ANR	1235741	Statement	=	2233:14:71765:71765	1235618	1	True				
ANR	1235742	Statement	master_to_xml	2233:16:71767:71779	1235618	2	True				
ANR	1235743	Statement	(	2233:29:71780:71780	1235618	3	True				
ANR	1235744	Statement	enc	2233:30:71781:71783	1235618	4	True				
ANR	1235745	Statement	","	2233:33:71784:71784	1235618	5	True				
ANR	1235746	Statement	(	2233:35:71786:71786	1235618	6	True				
ANR	1235747	Statement	*	2233:36:71787:71787	1235618	7	True				
ANR	1235748	Statement	zdata	2233:37:71788:71792	1235618	8	True				
ANR	1235749	Statement	)	2233:42:71793:71793	1235618	9	True				
ANR	1235750	Statement	","	2233:43:71794:71794	1235618	10	True				
ANR	1235751	Statement	style	2233:45:71796:71800	1235618	11	True				
ANR	1235752	Statement	","	2233:50:71801:71801	1235618	12	True				
ANR	1235753	Statement	xmlParam	2233:52:71803:71810	1235618	13	True				
ANR	1235754	Statement	TSRMLS_CC	2233:61:71812:71820	1235618	14	True				
ANR	1235755	Statement	)	2233:70:71821:71821	1235618	15	True				
ANR	1235756	ExpressionStatement		2233:71:71822:71822	1235618	16	True				
ANR	1235757	ElseStatement	else		1235618	0					
ANR	1235758	CompoundStatement		21:12:564:564	1235618	0					
ANR	1235759	ExpressionStatement	"xparam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	2236:5:71851:71895	1235618	0	True				
ANR	1235760	AssignmentExpression	"xparam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1235618	0		=			
ANR	1235761	Identifier	xparam		1235618	0					
ANR	1235762	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1235618	1					
ANR	1235763	Callee	xmlNewNode		1235618	0					
ANR	1235764	Identifier	xmlNewNode		1235618	0					
ANR	1235765	ArgumentList	NULL		1235618	1					
ANR	1235766	Argument	NULL		1235618	0					
ANR	1235767	Identifier	NULL		1235618	0					
ANR	1235768	Argument	"BAD_CAST ( ""BOGUS"" )"		1235618	1					
ANR	1235769	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1235618	0					
ANR	1235770	Callee	BAD_CAST		1235618	0					
ANR	1235771	Identifier	BAD_CAST		1235618	0					
ANR	1235772	ArgumentList	"""BOGUS"""		1235618	1					
ANR	1235773	Argument	"""BOGUS"""		1235618	0					
ANR	1235774	PrimaryExpression	"""BOGUS"""		1235618	0					
ANR	1235775	ExpressionStatement	"xmlAddChild ( xmlParam , xparam )"	2237:5:71902:71931	1235618	1	True				
ANR	1235776	CallExpression	"xmlAddChild ( xmlParam , xparam )"		1235618	0					
ANR	1235777	Callee	xmlAddChild		1235618	0					
ANR	1235778	Identifier	xmlAddChild		1235618	0					
ANR	1235779	ArgumentList	xmlParam		1235618	1					
ANR	1235780	Argument	xmlParam		1235618	0					
ANR	1235781	Identifier	xmlParam		1235618	0					
ANR	1235782	Argument	xparam		1235618	1					
ANR	1235783	Identifier	xparam		1235618	0					
ANR	1235784	IfStatement	if ( type )		1235618	2					
ANR	1235785	Condition	type	2240:9:71950:71953	1235618	0	True				
ANR	1235786	Identifier	type		1235618	0					
ANR	1235787	CompoundStatement		26:15:676:676	1235618	1					
ANR	1235788	ExpressionStatement	"xmlNodeSetName ( xparam , BAD_CAST ( type -> name ) )"	2241:6:71964:72008	1235618	0	True				
ANR	1235789	CallExpression	"xmlNodeSetName ( xparam , BAD_CAST ( type -> name ) )"		1235618	0					
ANR	1235790	Callee	xmlNodeSetName		1235618	0					
ANR	1235791	Identifier	xmlNodeSetName		1235618	0					
ANR	1235792	ArgumentList	xparam		1235618	1					
ANR	1235793	Argument	xparam		1235618	0					
ANR	1235794	Identifier	xparam		1235618	0					
ANR	1235795	Argument	BAD_CAST ( type -> name )		1235618	1					
ANR	1235796	CallExpression	BAD_CAST ( type -> name )		1235618	0					
ANR	1235797	Callee	BAD_CAST		1235618	0					
ANR	1235798	Identifier	BAD_CAST		1235618	0					
ANR	1235799	ArgumentList	type -> name		1235618	1					
ANR	1235800	Argument	type -> name		1235618	0					
ANR	1235801	PtrMemberAccess	type -> name		1235618	0					
ANR	1235802	Identifier	type		1235618	0					
ANR	1235803	Identifier	name		1235618	1					
ANR	1235804	ElseStatement	else		1235618	0					
ANR	1235805	IfStatement	if ( style == SOAP_LITERAL && enc && enc -> details . type_str )		1235618	0					
ANR	1235806	Condition	style == SOAP_LITERAL && enc && enc -> details . type_str	2242:16:72026:72078	1235618	0	True				
ANR	1235807	AndExpression	style == SOAP_LITERAL && enc && enc -> details . type_str		1235618	0		&&			
ANR	1235808	EqualityExpression	style == SOAP_LITERAL		1235618	0		==			
ANR	1235809	Identifier	style		1235618	0					
ANR	1235810	Identifier	SOAP_LITERAL		1235618	1					
ANR	1235811	AndExpression	enc && enc -> details . type_str		1235618	1		&&			
ANR	1235812	Identifier	enc		1235618	0					
ANR	1235813	MemberAccess	enc -> details . type_str		1235618	1					
ANR	1235814	PtrMemberAccess	enc -> details		1235618	0					
ANR	1235815	Identifier	enc		1235618	0					
ANR	1235816	Identifier	details		1235618	1					
ANR	1235817	Identifier	type_str		1235618	1					
ANR	1235818	CompoundStatement		28:71:801:801	1235618	1					
ANR	1235819	ExpressionStatement	"xmlNodeSetName ( xparam , BAD_CAST ( enc -> details . type_str ) )"	2243:5:72088:72143	1235618	0	True				
ANR	1235820	CallExpression	"xmlNodeSetName ( xparam , BAD_CAST ( enc -> details . type_str ) )"		1235618	0					
ANR	1235821	Callee	xmlNodeSetName		1235618	0					
ANR	1235822	Identifier	xmlNodeSetName		1235618	0					
ANR	1235823	ArgumentList	xparam		1235618	1					
ANR	1235824	Argument	xparam		1235618	0					
ANR	1235825	Identifier	xparam		1235618	0					
ANR	1235826	Argument	BAD_CAST ( enc -> details . type_str )		1235618	1					
ANR	1235827	CallExpression	BAD_CAST ( enc -> details . type_str )		1235618	0					
ANR	1235828	Callee	BAD_CAST		1235618	0					
ANR	1235829	Identifier	BAD_CAST		1235618	0					
ANR	1235830	ArgumentList	enc -> details . type_str		1235618	1					
ANR	1235831	Argument	enc -> details . type_str		1235618	0					
ANR	1235832	MemberAccess	enc -> details . type_str		1235618	0					
ANR	1235833	PtrMemberAccess	enc -> details		1235618	0					
ANR	1235834	Identifier	enc		1235618	0					
ANR	1235835	Identifier	details		1235618	1					
ANR	1235836	Identifier	type_str		1235618	1					
ANR	1235837	ExpressionStatement	"xmlSetNs ( xparam , ns )"	2244:5:72150:72170	1235618	1	True				
ANR	1235838	CallExpression	"xmlSetNs ( xparam , ns )"		1235618	0					
ANR	1235839	Callee	xmlSetNs		1235618	0					
ANR	1235840	Identifier	xmlSetNs		1235618	0					
ANR	1235841	ArgumentList	xparam		1235618	1					
ANR	1235842	Argument	xparam		1235618	0					
ANR	1235843	Identifier	xparam		1235618	0					
ANR	1235844	Argument	ns		1235618	1					
ANR	1235845	Identifier	ns		1235618	0					
ANR	1235846	ElseStatement	else		1235618	0					
ANR	1235847	CompoundStatement		31:11:903:903	1235618	0					
ANR	1235848	ExpressionStatement	"xmlNodeSetName ( xparam , BAD_CAST ( ""item"" ) )"	2246:6:72191:72231	1235618	0	True				
ANR	1235849	CallExpression	"xmlNodeSetName ( xparam , BAD_CAST ( ""item"" ) )"		1235618	0					
ANR	1235850	Callee	xmlNodeSetName		1235618	0					
ANR	1235851	Identifier	xmlNodeSetName		1235618	0					
ANR	1235852	ArgumentList	xparam		1235618	1					
ANR	1235853	Argument	xparam		1235618	0					
ANR	1235854	Identifier	xparam		1235618	0					
ANR	1235855	Argument	"BAD_CAST ( ""item"" )"		1235618	1					
ANR	1235856	CallExpression	"BAD_CAST ( ""item"" )"		1235618	0					
ANR	1235857	Callee	BAD_CAST		1235618	0					
ANR	1235858	Identifier	BAD_CAST		1235618	0					
ANR	1235859	ArgumentList	"""item"""		1235618	1					
ANR	1235860	Argument	"""item"""		1235618	0					
ANR	1235861	PrimaryExpression	"""item"""		1235618	0					
ANR	1235862	ElseStatement	else		1235618	0					
ANR	1235863	CompoundStatement		34:11:971:971	1235618	0					
ANR	1235864	IfStatement	if ( zdata )		1235618	0					
ANR	1235865	Condition	zdata	2249:9:72262:72266	1235618	0	True				
ANR	1235866	Identifier	zdata		1235618	0					
ANR	1235867	CompoundStatement		35:16:989:989	1235618	1					
ANR	1235868	Statement	add_xml_array_elements	2250:7:72278:72299	1235618	0	True				
ANR	1235869	Statement	(	2250:29:72300:72300	1235618	1	True				
ANR	1235870	Statement	xmlParam	2250:30:72301:72308	1235618	2	True				
ANR	1235871	Statement	","	2250:38:72309:72309	1235618	3	True				
ANR	1235872	Statement	type	2250:40:72311:72314	1235618	4	True				
ANR	1235873	Statement	","	2250:44:72315:72315	1235618	5	True				
ANR	1235874	Statement	enc	2250:46:72317:72319	1235618	6	True				
ANR	1235875	Statement	","	2250:49:72320:72320	1235618	7	True				
ANR	1235876	Statement	ns	2250:51:72322:72323	1235618	8	True				
ANR	1235877	Statement	","	2250:53:72324:72324	1235618	9	True				
ANR	1235878	Statement	dimension	2250:55:72326:72334	1235618	10	True				
ANR	1235879	Statement	-	2250:64:72335:72335	1235618	11	True				
ANR	1235880	Statement	1	2250:65:72336:72336	1235618	12	True				
ANR	1235881	Statement	","	2250:66:72337:72337	1235618	13	True				
ANR	1235882	Statement	dims	2250:68:72339:72342	1235618	14	True				
ANR	1235883	Statement	+	2250:72:72343:72343	1235618	15	True				
ANR	1235884	Statement	1	2250:73:72344:72344	1235618	16	True				
ANR	1235885	Statement	","	2250:74:72345:72345	1235618	17	True				
ANR	1235886	Statement	*	2250:76:72347:72347	1235618	18	True				
ANR	1235887	Statement	zdata	2250:77:72348:72352	1235618	19	True				
ANR	1235888	Statement	","	2250:82:72353:72353	1235618	20	True				
ANR	1235889	Statement	style	2250:84:72355:72359	1235618	21	True				
ANR	1235890	Statement	TSRMLS_CC	2250:90:72361:72369	1235618	22	True				
ANR	1235891	Statement	)	2250:99:72370:72370	1235618	23	True				
ANR	1235892	ExpressionStatement		2250:100:72371:72371	1235618	24	True				
ANR	1235893	ElseStatement	else		1235618	0					
ANR	1235894	CompoundStatement		37:12:1105:1105	1235618	0					
ANR	1235895	Statement	add_xml_array_elements	2252:7:72394:72415	1235618	0	True				
ANR	1235896	Statement	(	2252:29:72416:72416	1235618	1	True				
ANR	1235897	Statement	xmlParam	2252:30:72417:72424	1235618	2	True				
ANR	1235898	Statement	","	2252:38:72425:72425	1235618	3	True				
ANR	1235899	Statement	type	2252:40:72427:72430	1235618	4	True				
ANR	1235900	Statement	","	2252:44:72431:72431	1235618	5	True				
ANR	1235901	Statement	enc	2252:46:72433:72435	1235618	6	True				
ANR	1235902	Statement	","	2252:49:72436:72436	1235618	7	True				
ANR	1235903	Statement	ns	2252:51:72438:72439	1235618	8	True				
ANR	1235904	Statement	","	2252:53:72440:72440	1235618	9	True				
ANR	1235905	Statement	dimension	2252:55:72442:72450	1235618	10	True				
ANR	1235906	Statement	-	2252:64:72451:72451	1235618	11	True				
ANR	1235907	Statement	1	2252:65:72452:72452	1235618	12	True				
ANR	1235908	Statement	","	2252:66:72453:72453	1235618	13	True				
ANR	1235909	Statement	dims	2252:68:72455:72458	1235618	14	True				
ANR	1235910	Statement	+	2252:72:72459:72459	1235618	15	True				
ANR	1235911	Statement	1	2252:73:72460:72460	1235618	16	True				
ANR	1235912	Statement	","	2252:74:72461:72461	1235618	17	True				
ANR	1235913	Statement	NULL	2252:76:72463:72466	1235618	18	True				
ANR	1235914	Statement	","	2252:80:72467:72467	1235618	19	True				
ANR	1235915	Statement	style	2252:82:72469:72473	1235618	20	True				
ANR	1235916	Statement	TSRMLS_CC	2252:88:72475:72483	1235618	21	True				
ANR	1235917	Statement	)	2252:97:72484:72484	1235618	22	True				
ANR	1235918	ExpressionStatement		2252:98:72485:72485	1235618	23	True				
ANR	1235919	ExpressionStatement	zend_hash_move_forward ( data -> value . ht )	2255:4:72504:72542	1235618	3	True				
ANR	1235920	CallExpression	zend_hash_move_forward ( data -> value . ht )		1235618	0					
ANR	1235921	Callee	zend_hash_move_forward		1235618	0					
ANR	1235922	Identifier	zend_hash_move_forward		1235618	0					
ANR	1235923	ArgumentList	data -> value . ht		1235618	1					
ANR	1235924	Argument	data -> value . ht		1235618	0					
ANR	1235925	MemberAccess	data -> value . ht		1235618	0					
ANR	1235926	PtrMemberAccess	data -> value		1235618	0					
ANR	1235927	Identifier	data		1235618	0					
ANR	1235928	Identifier	value		1235618	1					
ANR	1235929	Identifier	ht		1235618	1					
ANR	1235930	ElseStatement	else		1235618	0					
ANR	1235931	CompoundStatement		43:9:1278:1278	1235618	0					
ANR	1235932	ForStatement	for ( j = 0 ; j < dims [ 0 ] ; j ++ )		1235618	0					
ANR	1235933	ForInit	j = 0 ;	2258:7:72567:72570	1235618	0	True				
ANR	1235934	AssignmentExpression	j = 0		1235618	0		=			
ANR	1235935	Identifier	j		1235618	0					
ANR	1235936	PrimaryExpression	0		1235618	1					
ANR	1235937	Condition	j < dims [ 0 ]	2258:12:72572:72580	1235618	1	True				
ANR	1235938	RelationalExpression	j < dims [ 0 ]		1235618	0		<			
ANR	1235939	Identifier	j		1235618	0					
ANR	1235940	ArrayIndexing	dims [ 0 ]		1235618	1					
ANR	1235941	Identifier	dims		1235618	0					
ANR	1235942	PrimaryExpression	0		1235618	1					
ANR	1235943	PostIncDecOperationExpression	j ++	2258:23:72583:72585	1235618	2	True				
ANR	1235944	Identifier	j		1235618	0					
ANR	1235945	IncDec	++		1235618	1					
ANR	1235946	CompoundStatement		44:28:1308:1308	1235618	3					
ANR	1235947	IfStatement	if ( dimension == 1 )		1235618	0					
ANR	1235948	Condition	dimension == 1	2259:8:72598:72611	1235618	0	True				
ANR	1235949	EqualityExpression	dimension == 1		1235618	0		==			
ANR	1235950	Identifier	dimension		1235618	0					
ANR	1235951	PrimaryExpression	1		1235618	1					
ANR	1235952	CompoundStatement		46:5:1341:1358	1235618	1					
ANR	1235953	IdentifierDeclStatement	xmlNodePtr xparam ;	2260:5:72621:72638	1235618	0	True				
ANR	1235954	IdentifierDecl	xparam		1235618	0					
ANR	1235955	IdentifierDeclType	xmlNodePtr		1235618	0					
ANR	1235956	Identifier	xparam		1235618	1					
ANR	1235957	ExpressionStatement	"xparam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	2262:4:72645:72689	1235618	1	True				
ANR	1235958	AssignmentExpression	"xparam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1235618	0		=			
ANR	1235959	Identifier	xparam		1235618	0					
ANR	1235960	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1235618	1					
ANR	1235961	Callee	xmlNewNode		1235618	0					
ANR	1235962	Identifier	xmlNewNode		1235618	0					
ANR	1235963	ArgumentList	NULL		1235618	1					
ANR	1235964	Argument	NULL		1235618	0					
ANR	1235965	Identifier	NULL		1235618	0					
ANR	1235966	Argument	"BAD_CAST ( ""BOGUS"" )"		1235618	1					
ANR	1235967	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1235618	0					
ANR	1235968	Callee	BAD_CAST		1235618	0					
ANR	1235969	Identifier	BAD_CAST		1235618	0					
ANR	1235970	ArgumentList	"""BOGUS"""		1235618	1					
ANR	1235971	Argument	"""BOGUS"""		1235618	0					
ANR	1235972	PrimaryExpression	"""BOGUS"""		1235618	0					
ANR	1235973	ExpressionStatement	"xmlAddChild ( xmlParam , xparam )"	2263:4:72695:72724	1235618	2	True				
ANR	1235974	CallExpression	"xmlAddChild ( xmlParam , xparam )"		1235618	0					
ANR	1235975	Callee	xmlAddChild		1235618	0					
ANR	1235976	Identifier	xmlAddChild		1235618	0					
ANR	1235977	ArgumentList	xmlParam		1235618	1					
ANR	1235978	Argument	xmlParam		1235618	0					
ANR	1235979	Identifier	xmlParam		1235618	0					
ANR	1235980	Argument	xparam		1235618	1					
ANR	1235981	Identifier	xparam		1235618	0					
ANR	1235982	IfStatement	if ( type )		1235618	3					
ANR	1235983	Condition	type	2264:9:72735:72738	1235618	0	True				
ANR	1235984	Identifier	type		1235618	0					
ANR	1235985	CompoundStatement		50:15:1461:1461	1235618	1					
ANR	1235986	ExpressionStatement	"xmlNodeSetName ( xparam , BAD_CAST ( type -> name ) )"	2265:6:72749:72793	1235618	0	True				
ANR	1235987	CallExpression	"xmlNodeSetName ( xparam , BAD_CAST ( type -> name ) )"		1235618	0					
ANR	1235988	Callee	xmlNodeSetName		1235618	0					
ANR	1235989	Identifier	xmlNodeSetName		1235618	0					
ANR	1235990	ArgumentList	xparam		1235618	1					
ANR	1235991	Argument	xparam		1235618	0					
ANR	1235992	Identifier	xparam		1235618	0					
ANR	1235993	Argument	BAD_CAST ( type -> name )		1235618	1					
ANR	1235994	CallExpression	BAD_CAST ( type -> name )		1235618	0					
ANR	1235995	Callee	BAD_CAST		1235618	0					
ANR	1235996	Identifier	BAD_CAST		1235618	0					
ANR	1235997	ArgumentList	type -> name		1235618	1					
ANR	1235998	Argument	type -> name		1235618	0					
ANR	1235999	PtrMemberAccess	type -> name		1235618	0					
ANR	1236000	Identifier	type		1235618	0					
ANR	1236001	Identifier	name		1235618	1					
ANR	1236002	ElseStatement	else		1235618	0					
ANR	1236003	IfStatement	if ( style == SOAP_LITERAL && enc && enc -> details . type_str )		1235618	0					
ANR	1236004	Condition	style == SOAP_LITERAL && enc && enc -> details . type_str	2266:16:72811:72863	1235618	0	True				
ANR	1236005	AndExpression	style == SOAP_LITERAL && enc && enc -> details . type_str		1235618	0		&&			
ANR	1236006	EqualityExpression	style == SOAP_LITERAL		1235618	0		==			
ANR	1236007	Identifier	style		1235618	0					
ANR	1236008	Identifier	SOAP_LITERAL		1235618	1					
ANR	1236009	AndExpression	enc && enc -> details . type_str		1235618	1		&&			
ANR	1236010	Identifier	enc		1235618	0					
ANR	1236011	MemberAccess	enc -> details . type_str		1235618	1					
ANR	1236012	PtrMemberAccess	enc -> details		1235618	0					
ANR	1236013	Identifier	enc		1235618	0					
ANR	1236014	Identifier	details		1235618	1					
ANR	1236015	Identifier	type_str		1235618	1					
ANR	1236016	CompoundStatement		52:71:1586:1586	1235618	1					
ANR	1236017	ExpressionStatement	"xmlNodeSetName ( xparam , BAD_CAST ( enc -> details . type_str ) )"	2267:5:72873:72928	1235618	0	True				
ANR	1236018	CallExpression	"xmlNodeSetName ( xparam , BAD_CAST ( enc -> details . type_str ) )"		1235618	0					
ANR	1236019	Callee	xmlNodeSetName		1235618	0					
ANR	1236020	Identifier	xmlNodeSetName		1235618	0					
ANR	1236021	ArgumentList	xparam		1235618	1					
ANR	1236022	Argument	xparam		1235618	0					
ANR	1236023	Identifier	xparam		1235618	0					
ANR	1236024	Argument	BAD_CAST ( enc -> details . type_str )		1235618	1					
ANR	1236025	CallExpression	BAD_CAST ( enc -> details . type_str )		1235618	0					
ANR	1236026	Callee	BAD_CAST		1235618	0					
ANR	1236027	Identifier	BAD_CAST		1235618	0					
ANR	1236028	ArgumentList	enc -> details . type_str		1235618	1					
ANR	1236029	Argument	enc -> details . type_str		1235618	0					
ANR	1236030	MemberAccess	enc -> details . type_str		1235618	0					
ANR	1236031	PtrMemberAccess	enc -> details		1235618	0					
ANR	1236032	Identifier	enc		1235618	0					
ANR	1236033	Identifier	details		1235618	1					
ANR	1236034	Identifier	type_str		1235618	1					
ANR	1236035	ExpressionStatement	"xmlSetNs ( xparam , ns )"	2268:5:72935:72955	1235618	1	True				
ANR	1236036	CallExpression	"xmlSetNs ( xparam , ns )"		1235618	0					
ANR	1236037	Callee	xmlSetNs		1235618	0					
ANR	1236038	Identifier	xmlSetNs		1235618	0					
ANR	1236039	ArgumentList	xparam		1235618	1					
ANR	1236040	Argument	xparam		1235618	0					
ANR	1236041	Identifier	xparam		1235618	0					
ANR	1236042	Argument	ns		1235618	1					
ANR	1236043	Identifier	ns		1235618	0					
ANR	1236044	ElseStatement	else		1235618	0					
ANR	1236045	CompoundStatement		55:11:1688:1688	1235618	0					
ANR	1236046	ExpressionStatement	"xmlNodeSetName ( xparam , BAD_CAST ( ""item"" ) )"	2270:6:72976:73016	1235618	0	True				
ANR	1236047	CallExpression	"xmlNodeSetName ( xparam , BAD_CAST ( ""item"" ) )"		1235618	0					
ANR	1236048	Callee	xmlNodeSetName		1235618	0					
ANR	1236049	Identifier	xmlNodeSetName		1235618	0					
ANR	1236050	ArgumentList	xparam		1235618	1					
ANR	1236051	Argument	xparam		1235618	0					
ANR	1236052	Identifier	xparam		1235618	0					
ANR	1236053	Argument	"BAD_CAST ( ""item"" )"		1235618	1					
ANR	1236054	CallExpression	"BAD_CAST ( ""item"" )"		1235618	0					
ANR	1236055	Callee	BAD_CAST		1235618	0					
ANR	1236056	Identifier	BAD_CAST		1235618	0					
ANR	1236057	ArgumentList	"""item"""		1235618	1					
ANR	1236058	Argument	"""item"""		1235618	0					
ANR	1236059	PrimaryExpression	"""item"""		1235618	0					
ANR	1236060	ElseStatement	else		1235618	0					
ANR	1236061	CompoundStatement		58:11:1756:1756	1235618	0					
ANR	1236062	Statement	add_xml_array_elements	2273:6:73044:73065	1235618	0	True				
ANR	1236063	Statement	(	2273:28:73066:73066	1235618	1	True				
ANR	1236064	Statement	xmlParam	2273:29:73067:73074	1235618	2	True				
ANR	1236065	Statement	","	2273:37:73075:73075	1235618	3	True				
ANR	1236066	Statement	type	2273:39:73077:73080	1235618	4	True				
ANR	1236067	Statement	","	2273:43:73081:73081	1235618	5	True				
ANR	1236068	Statement	enc	2273:45:73083:73085	1235618	6	True				
ANR	1236069	Statement	","	2273:48:73086:73086	1235618	7	True				
ANR	1236070	Statement	ns	2273:50:73088:73089	1235618	8	True				
ANR	1236071	Statement	","	2273:52:73090:73090	1235618	9	True				
ANR	1236072	Statement	dimension	2273:54:73092:73100	1235618	10	True				
ANR	1236073	Statement	-	2273:63:73101:73101	1235618	11	True				
ANR	1236074	Statement	1	2273:64:73102:73102	1235618	12	True				
ANR	1236075	Statement	","	2273:65:73103:73103	1235618	13	True				
ANR	1236076	Statement	dims	2273:67:73105:73108	1235618	14	True				
ANR	1236077	Statement	+	2273:71:73109:73109	1235618	15	True				
ANR	1236078	Statement	1	2273:72:73110:73110	1235618	16	True				
ANR	1236079	Statement	","	2273:73:73111:73111	1235618	17	True				
ANR	1236080	Statement	NULL	2273:75:73113:73116	1235618	18	True				
ANR	1236081	Statement	","	2273:79:73117:73117	1235618	19	True				
ANR	1236082	Statement	style	2273:81:73119:73123	1235618	20	True				
ANR	1236083	Statement	TSRMLS_CC	2273:87:73125:73133	1235618	21	True				
ANR	1236084	Statement	)	2273:96:73134:73134	1235618	22	True				
ANR	1236085	ExpressionStatement		2273:97:73135:73135	1235618	23	True				
ANR	1236086	ReturnType	static void		1235618	1					
ANR	1236087	Identifier	add_xml_array_elements		1235618	2					
ANR	1236088	ParameterList	"xmlNodePtr xmlParam , sdlTypePtr type , encodePtr enc , xmlNsPtr ns , int dimension , int * dims , zval * data , int style TSRMLS_DC"		1235618	3					
ANR	1236089	Parameter	xmlNodePtr xmlParam	2206:35:70873:70891	1235618	0	True				
ANR	1236090	ParameterType	xmlNodePtr		1235618	0					
ANR	1236091	Identifier	xmlParam		1235618	1					
ANR	1236092	Parameter	sdlTypePtr type	2207:35:70929:70943	1235618	1	True				
ANR	1236093	ParameterType	sdlTypePtr		1235618	0					
ANR	1236094	Identifier	type		1235618	1					
ANR	1236095	Parameter	encodePtr enc	2208:35:70981:70993	1235618	2	True				
ANR	1236096	ParameterType	encodePtr		1235618	0					
ANR	1236097	Identifier	enc		1235618	1					
ANR	1236098	Parameter	xmlNsPtr ns	2209:35:71031:71041	1235618	3	True				
ANR	1236099	ParameterType	xmlNsPtr		1235618	0					
ANR	1236100	Identifier	ns		1235618	1					
ANR	1236101	Parameter	int dimension	2210:35:71079:71091	1235618	4	True				
ANR	1236102	ParameterType	int		1235618	0					
ANR	1236103	Identifier	dimension		1235618	1					
ANR	1236104	Parameter	int * dims	2211:35:71130:71138	1235618	5	True				
ANR	1236105	ParameterType	int *		1235618	0					
ANR	1236106	Identifier	dims		1235618	1					
ANR	1236107	Parameter	zval * data	2212:35:71176:71185	1235618	6	True				
ANR	1236108	ParameterType	zval *		1235618	0					
ANR	1236109	Identifier	data		1235618	1					
ANR	1236110	Parameter	int style TSRMLS_DC	2213:35:71223:71276	1235618	7	True				
ANR	1236111	ParameterType	int style		1235618	0					
ANR	1236112	Identifier	TSRMLS_DC		1235618	1					
ANR	1236113	CFGEntryNode	ENTRY		1235618		True				
ANR	1236114	CFGExitNode	EXIT		1235618		True				
ANR	1236115	Symbol	xmlParam		1235618						
ANR	1236116	Symbol	zdata		1235618						
ANR	1236117	Symbol	data -> value . ht		1235618						
ANR	1236118	Symbol	dims		1235618						
ANR	1236119	Symbol	data		1235618						
ANR	1236120	Symbol	& zdata		1235618						
ANR	1236121	Symbol	ns		1235618						
ANR	1236122	Symbol	xparam		1235618						
ANR	1236123	Symbol	enc -> details		1235618						
ANR	1236124	Symbol	type		1235618						
ANR	1236125	Symbol	TSRMLS_DC		1235618						
ANR	1236126	Symbol	enc -> details . type_str		1235618						
ANR	1236127	Symbol	zend_hash_get_current_data		1235618						
ANR	1236128	Symbol	IS_ARRAY		1235618						
ANR	1236129	Symbol	* type		1235618						
ANR	1236130	Symbol	enc		1235618						
ANR	1236131	Symbol	dimension		1235618						
ANR	1236132	Symbol	SUCCESS		1235618						
ANR	1236133	Symbol	NULL		1235618						
ANR	1236134	Symbol	data -> value		1235618						
ANR	1236135	Symbol	j		1235618						
ANR	1236136	Symbol	xmlNewNode		1235618						
ANR	1236137	Symbol	Z_TYPE_P		1235618						
ANR	1236138	Symbol	type -> name		1235618						
ANR	1236139	Symbol	SOAP_LITERAL		1235618						
ANR	1236140	Symbol	style		1235618						
ANR	1236141	Symbol	* enc		1235618						
ANR	1236142	Symbol	* dims		1235618						
ANR	1236143	Symbol	* data		1235618						
ANR	1236144	Symbol	BAD_CAST		1235618						
ANR	1236145	Function	array_num_elements	2279:0:73154:73307							
ANR	1236146	FunctionDef	array_num_elements (HashTable * ht)		1236145	0					
ANR	1236147	CompoundStatement		2280:0:73206:73307	1236145	0					
ANR	1236148	IfStatement	if ( ht -> pListTail && ht -> pListTail -> nKeyLength == 0 )		1236145	0					
ANR	1236149	Condition	ht -> pListTail && ht -> pListTail -> nKeyLength == 0	2281:5:73213:73259	1236145	0	True				
ANR	1236150	AndExpression	ht -> pListTail && ht -> pListTail -> nKeyLength == 0		1236145	0		&&			
ANR	1236151	PtrMemberAccess	ht -> pListTail		1236145	0					
ANR	1236152	Identifier	ht		1236145	0					
ANR	1236153	Identifier	pListTail		1236145	1					
ANR	1236154	EqualityExpression	ht -> pListTail -> nKeyLength == 0		1236145	1		==			
ANR	1236155	PtrMemberAccess	ht -> pListTail -> nKeyLength		1236145	0					
ANR	1236156	PtrMemberAccess	ht -> pListTail		1236145	0					
ANR	1236157	Identifier	ht		1236145	0					
ANR	1236158	Identifier	pListTail		1236145	1					
ANR	1236159	Identifier	nKeyLength		1236145	1					
ANR	1236160	PrimaryExpression	0		1236145	1					
ANR	1236161	CompoundStatement		2:54:55:55	1236145	1					
ANR	1236162	ReturnStatement	return ht -> pListTail -> h - 1 ;	2282:2:73266:73291	1236145	0	True				
ANR	1236163	AdditiveExpression	ht -> pListTail -> h - 1		1236145	0		-			
ANR	1236164	PtrMemberAccess	ht -> pListTail -> h		1236145	0					
ANR	1236165	PtrMemberAccess	ht -> pListTail		1236145	0					
ANR	1236166	Identifier	ht		1236145	0					
ANR	1236167	Identifier	pListTail		1236145	1					
ANR	1236168	Identifier	h		1236145	1					
ANR	1236169	PrimaryExpression	1		1236145	1					
ANR	1236170	ReturnStatement	return 0 ;	2284:1:73297:73305	1236145	1	True				
ANR	1236171	PrimaryExpression	0		1236145	0					
ANR	1236172	ReturnType	static inline int		1236145	1					
ANR	1236173	Identifier	array_num_elements		1236145	2					
ANR	1236174	ParameterList	HashTable * ht		1236145	3					
ANR	1236175	Parameter	HashTable * ht	2279:37:73191:73203	1236145	0	True				
ANR	1236176	ParameterType	HashTable *		1236145	0					
ANR	1236177	Identifier	ht		1236145	1					
ANR	1236178	CFGEntryNode	ENTRY		1236145		True				
ANR	1236179	CFGExitNode	EXIT		1236145		True				
ANR	1236180	Symbol	* ht		1236145						
ANR	1236181	Symbol	* ht -> pListTail		1236145						
ANR	1236182	Symbol	ht -> pListTail -> h		1236145						
ANR	1236183	Symbol	* * ht		1236145						
ANR	1236184	Symbol	ht		1236145						
ANR	1236185	Symbol	ht -> pListTail -> nKeyLength		1236145						
ANR	1236186	Symbol	ht -> pListTail		1236145						
ANR	1236187	Function	to_xml_array	2287:0:73310:82394							
ANR	1236188	FunctionDef	"to_xml_array (encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1236187	0					
ANR	1236189	CompoundStatement		2288:0:73413:82394	1236187	0					
ANR	1236190	IdentifierDeclStatement	sdlTypePtr sdl_type = type -> sdl_type ;	2289:1:73416:73452	1236187	0	True				
ANR	1236191	IdentifierDecl	sdl_type = type -> sdl_type		1236187	0					
ANR	1236192	IdentifierDeclType	sdlTypePtr		1236187	0					
ANR	1236193	Identifier	sdl_type		1236187	1					
ANR	1236194	AssignmentExpression	sdl_type = type -> sdl_type		1236187	2		=			
ANR	1236195	Identifier	sdl_type		1236187	0					
ANR	1236196	PtrMemberAccess	type -> sdl_type		1236187	1					
ANR	1236197	Identifier	type		1236187	0					
ANR	1236198	Identifier	sdl_type		1236187	1					
ANR	1236199	IdentifierDeclStatement	sdlTypePtr element_type = NULL ;	2290:1:73455:73485	1236187	1	True				
ANR	1236200	IdentifierDecl	element_type = NULL		1236187	0					
ANR	1236201	IdentifierDeclType	sdlTypePtr		1236187	0					
ANR	1236202	Identifier	element_type		1236187	1					
ANR	1236203	AssignmentExpression	element_type = NULL		1236187	2		=			
ANR	1236204	Identifier	NULL		1236187	0					
ANR	1236205	Identifier	NULL		1236187	1					
ANR	1236206	IdentifierDeclStatement	"smart_str array_type = { 0 } , array_size = { 0 } ;"	2291:1:73488:73532	1236187	2	True				
ANR	1236207	IdentifierDecl	array_type = { 0 }		1236187	0					
ANR	1236208	IdentifierDeclType	smart_str		1236187	0					
ANR	1236209	Identifier	array_type		1236187	1					
ANR	1236210	AssignmentExpression	array_type = { 0 }		1236187	2		=			
ANR	1236211	Identifier	array_type		1236187	0					
ANR	1236212	InitializerList	0		1236187	1					
ANR	1236213	PrimaryExpression	0		1236187	0					
ANR	1236214	IdentifierDecl	array_size = { 0 }		1236187	1					
ANR	1236215	IdentifierDeclType	smart_str		1236187	0					
ANR	1236216	Identifier	array_size		1236187	1					
ANR	1236217	AssignmentExpression	array_size = { 0 }		1236187	2		=			
ANR	1236218	Identifier	array_size		1236187	0					
ANR	1236219	InitializerList	0		1236187	1					
ANR	1236220	PrimaryExpression	0		1236187	0					
ANR	1236221	IdentifierDeclStatement	int i ;	2292:1:73535:73540	1236187	3	True				
ANR	1236222	IdentifierDecl	i		1236187	0					
ANR	1236223	IdentifierDeclType	int		1236187	0					
ANR	1236224	Identifier	i		1236187	1					
ANR	1236225	IdentifierDeclStatement	xmlNodePtr xmlParam ;	2293:1:73543:73562	1236187	4	True				
ANR	1236226	IdentifierDecl	xmlParam		1236187	0					
ANR	1236227	IdentifierDeclType	xmlNodePtr		1236187	0					
ANR	1236228	Identifier	xmlParam		1236187	1					
ANR	1236229	IdentifierDeclStatement	encodePtr enc = NULL ;	2294:1:73565:73585	1236187	5	True				
ANR	1236230	IdentifierDecl	enc = NULL		1236187	0					
ANR	1236231	IdentifierDeclType	encodePtr		1236187	0					
ANR	1236232	Identifier	enc		1236187	1					
ANR	1236233	AssignmentExpression	enc = NULL		1236187	2		=			
ANR	1236234	Identifier	NULL		1236187	0					
ANR	1236235	Identifier	NULL		1236187	1					
ANR	1236236	IdentifierDeclStatement	int dimension = 1 ;	2295:1:73588:73605	1236187	6	True				
ANR	1236237	IdentifierDecl	dimension = 1		1236187	0					
ANR	1236238	IdentifierDeclType	int		1236187	0					
ANR	1236239	Identifier	dimension		1236187	1					
ANR	1236240	AssignmentExpression	dimension = 1		1236187	2		=			
ANR	1236241	Identifier	dimension		1236187	0					
ANR	1236242	PrimaryExpression	1		1236187	1					
ANR	1236243	IdentifierDeclStatement	int * dims ;	2296:1:73608:73617	1236187	7	True				
ANR	1236244	IdentifierDecl	* dims		1236187	0					
ANR	1236245	IdentifierDeclType	int *		1236187	0					
ANR	1236246	Identifier	dims		1236187	1					
ANR	1236247	IdentifierDeclStatement	int soap_version ;	2297:1:73620:73636	1236187	8	True				
ANR	1236248	IdentifierDecl	soap_version		1236187	0					
ANR	1236249	IdentifierDeclType	int		1236187	0					
ANR	1236250	Identifier	soap_version		1236187	1					
ANR	1236251	IdentifierDeclStatement	zval * array_copy = NULL ;	2298:1:73639:73662	1236187	9	True				
ANR	1236252	IdentifierDecl	* array_copy = NULL		1236187	0					
ANR	1236253	IdentifierDeclType	zval *		1236187	0					
ANR	1236254	Identifier	array_copy		1236187	1					
ANR	1236255	AssignmentExpression	* array_copy = NULL		1236187	2		=			
ANR	1236256	Identifier	NULL		1236187	0					
ANR	1236257	Identifier	NULL		1236187	1					
ANR	1236258	ExpressionStatement	soap_version = SOAP_GLOBAL ( soap_version )	2300:1:73666:73706	1236187	10	True				
ANR	1236259	AssignmentExpression	soap_version = SOAP_GLOBAL ( soap_version )		1236187	0		=			
ANR	1236260	Identifier	soap_version		1236187	0					
ANR	1236261	CallExpression	SOAP_GLOBAL ( soap_version )		1236187	1					
ANR	1236262	Callee	SOAP_GLOBAL		1236187	0					
ANR	1236263	Identifier	SOAP_GLOBAL		1236187	0					
ANR	1236264	ArgumentList	soap_version		1236187	1					
ANR	1236265	Argument	soap_version		1236187	0					
ANR	1236266	Identifier	soap_version		1236187	0					
ANR	1236267	ExpressionStatement	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	2302:1:73710:73756	1236187	11	True				
ANR	1236268	AssignmentExpression	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1236187	0		=			
ANR	1236269	Identifier	xmlParam		1236187	0					
ANR	1236270	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1236187	1					
ANR	1236271	Callee	xmlNewNode		1236187	0					
ANR	1236272	Identifier	xmlNewNode		1236187	0					
ANR	1236273	ArgumentList	NULL		1236187	1					
ANR	1236274	Argument	NULL		1236187	0					
ANR	1236275	Identifier	NULL		1236187	0					
ANR	1236276	Argument	"BAD_CAST ( ""BOGUS"" )"		1236187	1					
ANR	1236277	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1236187	0					
ANR	1236278	Callee	BAD_CAST		1236187	0					
ANR	1236279	Identifier	BAD_CAST		1236187	0					
ANR	1236280	ArgumentList	"""BOGUS"""		1236187	1					
ANR	1236281	Argument	"""BOGUS"""		1236187	0					
ANR	1236282	PrimaryExpression	"""BOGUS"""		1236187	0					
ANR	1236283	ExpressionStatement	"xmlAddChild ( parent , xmlParam )"	2303:1:73759:73788	1236187	12	True				
ANR	1236284	CallExpression	"xmlAddChild ( parent , xmlParam )"		1236187	0					
ANR	1236285	Callee	xmlAddChild		1236187	0					
ANR	1236286	Identifier	xmlAddChild		1236187	0					
ANR	1236287	ArgumentList	parent		1236187	1					
ANR	1236288	Argument	parent		1236187	0					
ANR	1236289	Identifier	parent		1236187	0					
ANR	1236290	Argument	xmlParam		1236187	1					
ANR	1236291	Identifier	xmlParam		1236187	0					
ANR	1236292	IfStatement	if ( ! data || Z_TYPE_P ( data ) == IS_NULL )		1236187	13					
ANR	1236293	Condition	! data || Z_TYPE_P ( data ) == IS_NULL	2305:5:73796:73829	1236187	0	True				
ANR	1236294	OrExpression	! data || Z_TYPE_P ( data ) == IS_NULL		1236187	0		||			
ANR	1236295	UnaryOperationExpression	! data		1236187	0					
ANR	1236296	UnaryOperator	!		1236187	0					
ANR	1236297	Identifier	data		1236187	1					
ANR	1236298	EqualityExpression	Z_TYPE_P ( data ) == IS_NULL		1236187	1		==			
ANR	1236299	CallExpression	Z_TYPE_P ( data )		1236187	0					
ANR	1236300	Callee	Z_TYPE_P		1236187	0					
ANR	1236301	Identifier	Z_TYPE_P		1236187	0					
ANR	1236302	ArgumentList	data		1236187	1					
ANR	1236303	Argument	data		1236187	0					
ANR	1236304	Identifier	data		1236187	0					
ANR	1236305	Identifier	IS_NULL		1236187	1					
ANR	1236306	CompoundStatement		18:41:418:418	1236187	1					
ANR	1236307	IfStatement	if ( style == SOAP_ENCODED )		1236187	0					
ANR	1236308	Condition	style == SOAP_ENCODED	2306:6:73840:73860	1236187	0	True				
ANR	1236309	EqualityExpression	style == SOAP_ENCODED		1236187	0		==			
ANR	1236310	Identifier	style		1236187	0					
ANR	1236311	Identifier	SOAP_ENCODED		1236187	1					
ANR	1236312	CompoundStatement		19:29:449:449	1236187	1					
ANR	1236313	ExpressionStatement	set_xsi_nil ( xmlParam )	2307:3:73868:73889	1236187	0	True				
ANR	1236314	CallExpression	set_xsi_nil ( xmlParam )		1236187	0					
ANR	1236315	Callee	set_xsi_nil		1236187	0					
ANR	1236316	Identifier	set_xsi_nil		1236187	0					
ANR	1236317	ArgumentList	xmlParam		1236187	1					
ANR	1236318	Argument	xmlParam		1236187	0					
ANR	1236319	Identifier	xmlParam		1236187	0					
ANR	1236320	IfStatement	if ( SOAP_GLOBAL ( features ) & SOAP_USE_XSI_ARRAY_TYPE )		1236187	1					
ANR	1236321	Condition	SOAP_GLOBAL ( features ) & SOAP_USE_XSI_ARRAY_TYPE	2308:7:73898:73944	1236187	0	True				
ANR	1236322	BitAndExpression	SOAP_GLOBAL ( features ) & SOAP_USE_XSI_ARRAY_TYPE		1236187	0		&			
ANR	1236323	CallExpression	SOAP_GLOBAL ( features )		1236187	0					
ANR	1236324	Callee	SOAP_GLOBAL		1236187	0					
ANR	1236325	Identifier	SOAP_GLOBAL		1236187	0					
ANR	1236326	ArgumentList	features		1236187	1					
ANR	1236327	Argument	features		1236187	0					
ANR	1236328	Identifier	features		1236187	0					
ANR	1236329	Identifier	SOAP_USE_XSI_ARRAY_TYPE		1236187	1					
ANR	1236330	CompoundStatement		21:56:533:533	1236187	1					
ANR	1236331	ExpressionStatement	"set_ns_and_type_ex ( xmlParam , ( soap_version == SOAP_1_1 ) ? SOAP_1_1_ENC_NAMESPACE : SOAP_1_2_ENC_NAMESPACE , ""Array"" )"	2309:4:73953:74068	1236187	0	True				
ANR	1236332	CallExpression	"set_ns_and_type_ex ( xmlParam , ( soap_version == SOAP_1_1 ) ? SOAP_1_1_ENC_NAMESPACE : SOAP_1_2_ENC_NAMESPACE , ""Array"" )"		1236187	0					
ANR	1236333	Callee	set_ns_and_type_ex		1236187	0					
ANR	1236334	Identifier	set_ns_and_type_ex		1236187	0					
ANR	1236335	ArgumentList	xmlParam		1236187	1					
ANR	1236336	Argument	xmlParam		1236187	0					
ANR	1236337	Identifier	xmlParam		1236187	0					
ANR	1236338	Argument	( soap_version == SOAP_1_1 ) ? SOAP_1_1_ENC_NAMESPACE : SOAP_1_2_ENC_NAMESPACE		1236187	1					
ANR	1236339	ConditionalExpression	( soap_version == SOAP_1_1 ) ? SOAP_1_1_ENC_NAMESPACE : SOAP_1_2_ENC_NAMESPACE		1236187	0					
ANR	1236340	Condition	soap_version == SOAP_1_1		1236187	0					
ANR	1236341	EqualityExpression	soap_version == SOAP_1_1		1236187	0		==			
ANR	1236342	Identifier	soap_version		1236187	0					
ANR	1236343	Identifier	SOAP_1_1		1236187	1					
ANR	1236344	Identifier	SOAP_1_1_ENC_NAMESPACE		1236187	1					
ANR	1236345	Identifier	SOAP_1_2_ENC_NAMESPACE		1236187	2					
ANR	1236346	Argument	"""Array"""		1236187	2					
ANR	1236347	PrimaryExpression	"""Array"""		1236187	0					
ANR	1236348	ElseStatement	else		1236187	0					
ANR	1236349	CompoundStatement		23:10:666:666	1236187	0					
ANR	1236350	ExpressionStatement	"set_ns_and_type ( xmlParam , type )"	2311:4:74086:74117	1236187	0	True				
ANR	1236351	CallExpression	"set_ns_and_type ( xmlParam , type )"		1236187	0					
ANR	1236352	Callee	set_ns_and_type		1236187	0					
ANR	1236353	Identifier	set_ns_and_type		1236187	0					
ANR	1236354	ArgumentList	xmlParam		1236187	1					
ANR	1236355	Argument	xmlParam		1236187	0					
ANR	1236356	Identifier	xmlParam		1236187	0					
ANR	1236357	Argument	type		1236187	1					
ANR	1236358	Identifier	type		1236187	0					
ANR	1236359	ReturnStatement	return xmlParam ;	2314:2:74130:74145	1236187	1	True				
ANR	1236360	Identifier	xmlParam		1236187	0					
ANR	1236361	ElseStatement	else		1236187	0					
ANR	1236362	CompoundStatement		173:10:5162:5162	1236187	0					
ANR	1236363	ExpressionStatement	dims = emalloc ( sizeof ( int ) )	2461:4:78582:78609	1236187	0	True				
ANR	1236364	AssignmentExpression	dims = emalloc ( sizeof ( int ) )		1236187	0		=			
ANR	1236365	Identifier	dims		1236187	0					
ANR	1236366	CallExpression	emalloc ( sizeof ( int ) )		1236187	1					
ANR	1236367	Callee	emalloc		1236187	0					
ANR	1236368	Identifier	emalloc		1236187	0					
ANR	1236369	ArgumentList	sizeof ( int )		1236187	1					
ANR	1236370	Argument	sizeof ( int )		1236187	0					
ANR	1236371	SizeofExpression	sizeof ( int )		1236187	0					
ANR	1236372	Sizeof	sizeof		1236187	0					
ANR	1236373	SizeofOperand	int		1236187	1					
ANR	1236374	ExpressionStatement	* dims = 0	2462:4:78615:78624	1236187	1	True				
ANR	1236375	AssignmentExpression	* dims = 0		1236187	0		=			
ANR	1236376	UnaryOperationExpression	* dims		1236187	0					
ANR	1236377	UnaryOperator	*		1236187	0					
ANR	1236378	Identifier	dims		1236187	1					
ANR	1236379	PrimaryExpression	0		1236187	1					
ANR	1236380	ExpressionStatement	"smart_str_append_long ( & array_size , i )"	2463:4:78630:78667	1236187	2	True				
ANR	1236381	CallExpression	"smart_str_append_long ( & array_size , i )"		1236187	0					
ANR	1236382	Callee	smart_str_append_long		1236187	0					
ANR	1236383	Identifier	smart_str_append_long		1236187	0					
ANR	1236384	ArgumentList	& array_size		1236187	1					
ANR	1236385	Argument	& array_size		1236187	0					
ANR	1236386	UnaryOperationExpression	& array_size		1236187	0					
ANR	1236387	UnaryOperator	&		1236187	0					
ANR	1236388	Identifier	array_size		1236187	1					
ANR	1236389	Argument	i		1236187	1					
ANR	1236390	Identifier	i		1236187	0					
ANR	1236391	Statement	if	2317:1:74152:74153	1236187	14	True				
ANR	1236392	Statement	(	2317:4:74155:74155	1236187	15	True				
ANR	1236393	Statement	Z_TYPE_P	2317:5:74156:74163	1236187	16	True				
ANR	1236394	Statement	(	2317:13:74164:74164	1236187	17	True				
ANR	1236395	Statement	data	2317:14:74165:74168	1236187	18	True				
ANR	1236396	Statement	)	2317:18:74169:74169	1236187	19	True				
ANR	1236397	Statement	==	2317:20:74171:74172	1236187	20	True				
ANR	1236398	Statement	IS_OBJECT	2317:23:74174:74182	1236187	21	True				
ANR	1236399	Statement	&&	2317:33:74184:74185	1236187	22	True				
ANR	1236400	Statement	instanceof_function	2317:36:74187:74205	1236187	23	True				
ANR	1236401	Statement	(	2317:55:74206:74206	1236187	24	True				
ANR	1236402	Statement	Z_OBJCE_P	2317:56:74207:74215	1236187	25	True				
ANR	1236403	Statement	(	2317:65:74216:74216	1236187	26	True				
ANR	1236404	Statement	data	2317:66:74217:74220	1236187	27	True				
ANR	1236405	Statement	)	2317:70:74221:74221	1236187	28	True				
ANR	1236406	Statement	","	2317:71:74222:74222	1236187	29	True				
ANR	1236407	Statement	zend_ce_traversable	2317:73:74224:74242	1236187	30	True				
ANR	1236408	Statement	TSRMLS_CC	2317:93:74244:74252	1236187	31	True				
ANR	1236409	Statement	)	2317:102:74253:74253	1236187	32	True				
ANR	1236410	Statement	)	2317:103:74254:74254	1236187	33	True				
ANR	1236411	CompoundStatement		33:2:926:953	1236187	34					
ANR	1236412	IdentifierDeclStatement	zend_object_iterator * iter ;	2318:2:74260:74288	1236187	0	True				
ANR	1236413	IdentifierDecl	* iter		1236187	0					
ANR	1236414	IdentifierDeclType	zend_object_iterator *		1236187	0					
ANR	1236415	Identifier	iter		1236187	1					
ANR	1236416	IdentifierDeclStatement	zend_class_entry * ce = Z_OBJCE_P ( data ) ;	2319:2:74292:74336	1236187	1	True				
ANR	1236417	IdentifierDecl	* ce = Z_OBJCE_P ( data )		1236187	0					
ANR	1236418	IdentifierDeclType	zend_class_entry *		1236187	0					
ANR	1236419	Identifier	ce		1236187	1					
ANR	1236420	AssignmentExpression	* ce = Z_OBJCE_P ( data )		1236187	2		=			
ANR	1236421	Identifier	ce		1236187	0					
ANR	1236422	CallExpression	Z_OBJCE_P ( data )		1236187	1					
ANR	1236423	Callee	Z_OBJCE_P		1236187	0					
ANR	1236424	Identifier	Z_OBJCE_P		1236187	0					
ANR	1236425	ArgumentList	data		1236187	1					
ANR	1236426	Argument	data		1236187	0					
ANR	1236427	Identifier	data		1236187	0					
ANR	1236428	IdentifierDeclStatement	zval * * val ;	2320:2:74340:74367	1236187	2	True				
ANR	1236429	IdentifierDecl	* * val		1236187	0					
ANR	1236430	IdentifierDeclType	zval * *		1236187	0					
ANR	1236431	Identifier	val		1236187	1					
ANR	1236432	ExpressionStatement	ALLOC_ZVAL ( array_copy )	2322:2:74372:74394	1236187	3	True				
ANR	1236433	CallExpression	ALLOC_ZVAL ( array_copy )		1236187	0					
ANR	1236434	Callee	ALLOC_ZVAL		1236187	0					
ANR	1236435	Identifier	ALLOC_ZVAL		1236187	0					
ANR	1236436	ArgumentList	array_copy		1236187	1					
ANR	1236437	Argument	array_copy		1236187	0					
ANR	1236438	Identifier	array_copy		1236187	0					
ANR	1236439	ExpressionStatement	INIT_PZVAL ( array_copy )	2323:2:74398:74420	1236187	4	True				
ANR	1236440	CallExpression	INIT_PZVAL ( array_copy )		1236187	0					
ANR	1236441	Callee	INIT_PZVAL		1236187	0					
ANR	1236442	Identifier	INIT_PZVAL		1236187	0					
ANR	1236443	ArgumentList	array_copy		1236187	1					
ANR	1236444	Argument	array_copy		1236187	0					
ANR	1236445	Identifier	array_copy		1236187	0					
ANR	1236446	ExpressionStatement	array_init ( array_copy )	2324:2:74424:74446	1236187	5	True				
ANR	1236447	CallExpression	array_init ( array_copy )		1236187	0					
ANR	1236448	Callee	array_init		1236187	0					
ANR	1236449	Identifier	array_init		1236187	0					
ANR	1236450	ArgumentList	array_copy		1236187	1					
ANR	1236451	Argument	array_copy		1236187	0					
ANR	1236452	Identifier	array_copy		1236187	0					
ANR	1236453	Statement	iter	2326:2:74451:74454	1236187	6	True				
ANR	1236454	Statement	=	2326:7:74456:74456	1236187	7	True				
ANR	1236455	Statement	ce	2326:9:74458:74459	1236187	8	True				
ANR	1236456	Statement	->	2326:11:74460:74461	1236187	9	True				
ANR	1236457	Statement	get_iterator	2326:13:74462:74473	1236187	10	True				
ANR	1236458	Statement	(	2326:25:74474:74474	1236187	11	True				
ANR	1236459	Statement	ce	2326:26:74475:74476	1236187	12	True				
ANR	1236460	Statement	","	2326:28:74477:74477	1236187	13	True				
ANR	1236461	Statement	data	2326:30:74479:74482	1236187	14	True				
ANR	1236462	Statement	","	2326:34:74483:74483	1236187	15	True				
ANR	1236463	Statement	0	2326:36:74485:74485	1236187	16	True				
ANR	1236464	Statement	TSRMLS_CC	2326:38:74487:74495	1236187	17	True				
ANR	1236465	Statement	)	2326:47:74496:74496	1236187	18	True				
ANR	1236466	ExpressionStatement		2326:48:74497:74497	1236187	19	True				
ANR	1236467	IfStatement	if ( EG ( exception ) )		1236187	20					
ANR	1236468	Condition	EG ( exception )	2328:6:74506:74518	1236187	0	True				
ANR	1236469	CallExpression	EG ( exception )		1236187	0					
ANR	1236470	Callee	EG		1236187	0					
ANR	1236471	Identifier	EG		1236187	0					
ANR	1236472	ArgumentList	exception		1236187	1					
ANR	1236473	Argument	exception		1236187	0					
ANR	1236474	Identifier	exception		1236187	0					
ANR	1236475	CompoundStatement		41:21:1107:1107	1236187	1					
ANR	1236476	GotoStatement	goto iterator_done ;	2329:3:74526:74544	1236187	0	True				
ANR	1236477	Identifier	iterator_done		1236187	0					
ANR	1236478	IfStatement	if ( iter -> funcs -> rewind )		1236187	21					
ANR	1236479	Condition	iter -> funcs -> rewind	2332:6:74557:74575	1236187	0	True				
ANR	1236480	PtrMemberAccess	iter -> funcs -> rewind		1236187	0					
ANR	1236481	PtrMemberAccess	iter -> funcs		1236187	0					
ANR	1236482	Identifier	iter		1236187	0					
ANR	1236483	Identifier	funcs		1236187	1					
ANR	1236484	Identifier	rewind		1236187	1					
ANR	1236485	CompoundStatement		45:27:1164:1164	1236187	1					
ANR	1236486	Statement	iter	2333:3:74583:74586	1236187	0	True				
ANR	1236487	Statement	->	2333:7:74587:74588	1236187	1	True				
ANR	1236488	Statement	funcs	2333:9:74589:74593	1236187	2	True				
ANR	1236489	Statement	->	2333:14:74594:74595	1236187	3	True				
ANR	1236490	Statement	rewind	2333:16:74596:74601	1236187	4	True				
ANR	1236491	Statement	(	2333:22:74602:74602	1236187	5	True				
ANR	1236492	Statement	iter	2333:23:74603:74606	1236187	6	True				
ANR	1236493	Statement	TSRMLS_CC	2333:28:74608:74616	1236187	7	True				
ANR	1236494	Statement	)	2333:37:74617:74617	1236187	8	True				
ANR	1236495	ExpressionStatement		2333:38:74618:74618	1236187	9	True				
ANR	1236496	IfStatement	if ( EG ( exception ) )		1236187	10					
ANR	1236497	Condition	EG ( exception )	2334:7:74627:74639	1236187	0	True				
ANR	1236498	CallExpression	EG ( exception )		1236187	0					
ANR	1236499	Callee	EG		1236187	0					
ANR	1236500	Identifier	EG		1236187	0					
ANR	1236501	ArgumentList	exception		1236187	1					
ANR	1236502	Argument	exception		1236187	0					
ANR	1236503	Identifier	exception		1236187	0					
ANR	1236504	CompoundStatement		47:22:1228:1228	1236187	1					
ANR	1236505	GotoStatement	goto iterator_done ;	2335:4:74648:74666	1236187	0	True				
ANR	1236506	Identifier	iterator_done		1236187	0					
ANR	1236507	Statement	while	2339:2:74680:74684	1236187	22	True				
ANR	1236508	Statement	(	2339:8:74686:74686	1236187	23	True				
ANR	1236509	Statement	iter	2339:9:74687:74690	1236187	24	True				
ANR	1236510	Statement	->	2339:13:74691:74692	1236187	25	True				
ANR	1236511	Statement	funcs	2339:15:74693:74697	1236187	26	True				
ANR	1236512	Statement	->	2339:20:74698:74699	1236187	27	True				
ANR	1236513	Statement	valid	2339:22:74700:74704	1236187	28	True				
ANR	1236514	Statement	(	2339:27:74705:74705	1236187	29	True				
ANR	1236515	Statement	iter	2339:28:74706:74709	1236187	30	True				
ANR	1236516	Statement	TSRMLS_CC	2339:33:74711:74719	1236187	31	True				
ANR	1236517	Statement	)	2339:42:74720:74720	1236187	32	True				
ANR	1236518	Statement	==	2339:44:74722:74723	1236187	33	True				
ANR	1236519	Statement	SUCCESS	2339:47:74725:74731	1236187	34	True				
ANR	1236520	Statement	)	2339:54:74732:74732	1236187	35	True				
ANR	1236521	CompoundStatement		52:56:1320:1320	1236187	36					
ANR	1236522	IfStatement	if ( EG ( exception ) )		1236187	0					
ANR	1236523	Condition	EG ( exception )	2340:7:74743:74755	1236187	0	True				
ANR	1236524	CallExpression	EG ( exception )		1236187	0					
ANR	1236525	Callee	EG		1236187	0					
ANR	1236526	Identifier	EG		1236187	0					
ANR	1236527	ArgumentList	exception		1236187	1					
ANR	1236528	Argument	exception		1236187	0					
ANR	1236529	Identifier	exception		1236187	0					
ANR	1236530	CompoundStatement		53:22:1344:1344	1236187	1					
ANR	1236531	GotoStatement	goto iterator_done ;	2341:4:74764:74782	1236187	0	True				
ANR	1236532	Identifier	iterator_done		1236187	0					
ANR	1236533	Statement	iter	2344:3:74793:74796	1236187	1	True				
ANR	1236534	Statement	->	2344:7:74797:74798	1236187	2	True				
ANR	1236535	Statement	funcs	2344:9:74799:74803	1236187	3	True				
ANR	1236536	Statement	->	2344:14:74804:74805	1236187	4	True				
ANR	1236537	Statement	get_current_data	2344:16:74806:74821	1236187	5	True				
ANR	1236538	Statement	(	2344:32:74822:74822	1236187	6	True				
ANR	1236539	Statement	iter	2344:33:74823:74826	1236187	7	True				
ANR	1236540	Statement	","	2344:37:74827:74827	1236187	8	True				
ANR	1236541	Statement	&	2344:39:74829:74829	1236187	9	True				
ANR	1236542	Statement	val	2344:40:74830:74832	1236187	10	True				
ANR	1236543	Statement	TSRMLS_CC	2344:44:74834:74842	1236187	11	True				
ANR	1236544	Statement	)	2344:53:74843:74843	1236187	12	True				
ANR	1236545	ExpressionStatement		2344:54:74844:74844	1236187	13	True				
ANR	1236546	IfStatement	if ( EG ( exception ) )		1236187	14					
ANR	1236547	Condition	EG ( exception )	2345:7:74853:74865	1236187	0	True				
ANR	1236548	CallExpression	EG ( exception )		1236187	0					
ANR	1236549	Callee	EG		1236187	0					
ANR	1236550	Identifier	EG		1236187	0					
ANR	1236551	ArgumentList	exception		1236187	1					
ANR	1236552	Argument	exception		1236187	0					
ANR	1236553	Identifier	exception		1236187	0					
ANR	1236554	CompoundStatement		58:22:1454:1454	1236187	1					
ANR	1236555	GotoStatement	goto iterator_done ;	2346:4:74874:74892	1236187	0	True				
ANR	1236556	Identifier	iterator_done		1236187	0					
ANR	1236557	IfStatement	if ( iter -> funcs -> get_current_key )		1236187	15					
ANR	1236558	Condition	iter -> funcs -> get_current_key	2348:7:74906:74933	1236187	0	True				
ANR	1236559	PtrMemberAccess	iter -> funcs -> get_current_key		1236187	0					
ANR	1236560	PtrMemberAccess	iter -> funcs		1236187	0					
ANR	1236561	Identifier	iter		1236187	0					
ANR	1236562	Identifier	funcs		1236187	1					
ANR	1236563	Identifier	get_current_key		1236187	1					
ANR	1236564	CompoundStatement		62:4:1528:1536	1236187	1					
ANR	1236565	IdentifierDeclStatement	zval key ;	2349:4:74942:74950	1236187	0	True				
ANR	1236566	IdentifierDecl	key		1236187	0					
ANR	1236567	IdentifierDeclType	zval		1236187	0					
ANR	1236568	Identifier	key		1236187	1					
ANR	1236569	Statement	iter	2350:4:74956:74959	1236187	1	True				
ANR	1236570	Statement	->	2350:8:74960:74961	1236187	2	True				
ANR	1236571	Statement	funcs	2350:10:74962:74966	1236187	3	True				
ANR	1236572	Statement	->	2350:15:74967:74968	1236187	4	True				
ANR	1236573	Statement	get_current_key	2350:17:74969:74983	1236187	5	True				
ANR	1236574	Statement	(	2350:32:74984:74984	1236187	6	True				
ANR	1236575	Statement	iter	2350:33:74985:74988	1236187	7	True				
ANR	1236576	Statement	","	2350:37:74989:74989	1236187	8	True				
ANR	1236577	Statement	&	2350:39:74991:74991	1236187	9	True				
ANR	1236578	Statement	key	2350:40:74992:74994	1236187	10	True				
ANR	1236579	Statement	TSRMLS_CC	2350:44:74996:75004	1236187	11	True				
ANR	1236580	Statement	)	2350:53:75005:75005	1236187	12	True				
ANR	1236581	ExpressionStatement		2350:54:75006:75006	1236187	13	True				
ANR	1236582	IfStatement	if ( EG ( exception ) )		1236187	14					
ANR	1236583	Condition	EG ( exception )	2351:8:75016:75028	1236187	0	True				
ANR	1236584	CallExpression	EG ( exception )		1236187	0					
ANR	1236585	Callee	EG		1236187	0					
ANR	1236586	Identifier	EG		1236187	0					
ANR	1236587	ArgumentList	exception		1236187	1					
ANR	1236588	Argument	exception		1236187	0					
ANR	1236589	Identifier	exception		1236187	0					
ANR	1236590	CompoundStatement		64:23:1617:1617	1236187	1					
ANR	1236591	GotoStatement	goto iterator_done ;	2352:5:75038:75056	1236187	0	True				
ANR	1236592	Identifier	iterator_done		1236187	0					
ANR	1236593	ExpressionStatement	"array_set_zval_key ( Z_ARRVAL_P ( array_copy ) , & key , * val )"	2354:4:75068:75122	1236187	15	True				
ANR	1236594	CallExpression	"array_set_zval_key ( Z_ARRVAL_P ( array_copy ) , & key , * val )"		1236187	0					
ANR	1236595	Callee	array_set_zval_key		1236187	0					
ANR	1236596	Identifier	array_set_zval_key		1236187	0					
ANR	1236597	ArgumentList	Z_ARRVAL_P ( array_copy )		1236187	1					
ANR	1236598	Argument	Z_ARRVAL_P ( array_copy )		1236187	0					
ANR	1236599	CallExpression	Z_ARRVAL_P ( array_copy )		1236187	0					
ANR	1236600	Callee	Z_ARRVAL_P		1236187	0					
ANR	1236601	Identifier	Z_ARRVAL_P		1236187	0					
ANR	1236602	ArgumentList	array_copy		1236187	1					
ANR	1236603	Argument	array_copy		1236187	0					
ANR	1236604	Identifier	array_copy		1236187	0					
ANR	1236605	Argument	& key		1236187	1					
ANR	1236606	UnaryOperationExpression	& key		1236187	0					
ANR	1236607	UnaryOperator	&		1236187	0					
ANR	1236608	Identifier	key		1236187	1					
ANR	1236609	Argument	* val		1236187	2					
ANR	1236610	UnaryOperationExpression	* val		1236187	0					
ANR	1236611	UnaryOperator	*		1236187	0					
ANR	1236612	Identifier	val		1236187	1					
ANR	1236613	ExpressionStatement	zval_ptr_dtor ( val )	2355:4:75128:75146	1236187	16	True				
ANR	1236614	CallExpression	zval_ptr_dtor ( val )		1236187	0					
ANR	1236615	Callee	zval_ptr_dtor		1236187	0					
ANR	1236616	Identifier	zval_ptr_dtor		1236187	0					
ANR	1236617	ArgumentList	val		1236187	1					
ANR	1236618	Argument	val		1236187	0					
ANR	1236619	Identifier	val		1236187	0					
ANR	1236620	ExpressionStatement	zval_dtor ( & key )	2356:4:75152:75167	1236187	17	True				
ANR	1236621	CallExpression	zval_dtor ( & key )		1236187	0					
ANR	1236622	Callee	zval_dtor		1236187	0					
ANR	1236623	Identifier	zval_dtor		1236187	0					
ANR	1236624	ArgumentList	& key		1236187	1					
ANR	1236625	Argument	& key		1236187	0					
ANR	1236626	UnaryOperationExpression	& key		1236187	0					
ANR	1236627	UnaryOperator	&		1236187	0					
ANR	1236628	Identifier	key		1236187	1					
ANR	1236629	ElseStatement	else		1236187	0					
ANR	1236630	CompoundStatement		70:10:1765:1765	1236187	0					
ANR	1236631	ExpressionStatement	"add_next_index_zval ( array_copy , * val )"	2358:4:75185:75222	1236187	0	True				
ANR	1236632	CallExpression	"add_next_index_zval ( array_copy , * val )"		1236187	0					
ANR	1236633	Callee	add_next_index_zval		1236187	0					
ANR	1236634	Identifier	add_next_index_zval		1236187	0					
ANR	1236635	ArgumentList	array_copy		1236187	1					
ANR	1236636	Argument	array_copy		1236187	0					
ANR	1236637	Identifier	array_copy		1236187	0					
ANR	1236638	Argument	* val		1236187	1					
ANR	1236639	UnaryOperationExpression	* val		1236187	0					
ANR	1236640	UnaryOperator	*		1236187	0					
ANR	1236641	Identifier	val		1236187	1					
ANR	1236642	ExpressionStatement	Z_ADDREF_PP ( val )	2360:3:75232:75248	1236187	16	True				
ANR	1236643	CallExpression	Z_ADDREF_PP ( val )		1236187	0					
ANR	1236644	Callee	Z_ADDREF_PP		1236187	0					
ANR	1236645	Identifier	Z_ADDREF_PP		1236187	0					
ANR	1236646	ArgumentList	val		1236187	1					
ANR	1236647	Argument	val		1236187	0					
ANR	1236648	Identifier	val		1236187	0					
ANR	1236649	Statement	iter	2362:3:75254:75257	1236187	17	True				
ANR	1236650	Statement	->	2362:7:75258:75259	1236187	18	True				
ANR	1236651	Statement	funcs	2362:9:75260:75264	1236187	19	True				
ANR	1236652	Statement	->	2362:14:75265:75266	1236187	20	True				
ANR	1236653	Statement	move_forward	2362:16:75267:75278	1236187	21	True				
ANR	1236654	Statement	(	2362:28:75279:75279	1236187	22	True				
ANR	1236655	Statement	iter	2362:29:75280:75283	1236187	23	True				
ANR	1236656	Statement	TSRMLS_CC	2362:34:75285:75293	1236187	24	True				
ANR	1236657	Statement	)	2362:43:75294:75294	1236187	25	True				
ANR	1236658	ExpressionStatement		2362:44:75295:75295	1236187	26	True				
ANR	1236659	IfStatement	if ( EG ( exception ) )		1236187	27					
ANR	1236660	Condition	EG ( exception )	2363:7:75304:75316	1236187	0	True				
ANR	1236661	CallExpression	EG ( exception )		1236187	0					
ANR	1236662	Callee	EG		1236187	0					
ANR	1236663	Identifier	EG		1236187	0					
ANR	1236664	ArgumentList	exception		1236187	1					
ANR	1236665	Argument	exception		1236187	0					
ANR	1236666	Identifier	exception		1236187	0					
ANR	1236667	CompoundStatement		76:22:1905:1905	1236187	1					
ANR	1236668	GotoStatement	goto iterator_done ;	2364:4:75325:75343	1236187	0	True				
ANR	1236669	Identifier	iterator_done		1236187	0					
ANR	1236670	Label	iterator_done :	2367:0:75354:75367	1236187	37	True				
ANR	1236671	Identifier	iterator_done		1236187	0					
ANR	1236672	Statement	iter	2368:2:75371:75374	1236187	38	True				
ANR	1236673	Statement	->	2368:6:75375:75376	1236187	39	True				
ANR	1236674	Statement	funcs	2368:8:75377:75381	1236187	40	True				
ANR	1236675	Statement	->	2368:13:75382:75383	1236187	41	True				
ANR	1236676	Statement	dtor	2368:15:75384:75387	1236187	42	True				
ANR	1236677	Statement	(	2368:19:75388:75388	1236187	43	True				
ANR	1236678	Statement	iter	2368:20:75389:75392	1236187	44	True				
ANR	1236679	Statement	TSRMLS_CC	2368:25:75394:75402	1236187	45	True				
ANR	1236680	Statement	)	2368:34:75403:75403	1236187	46	True				
ANR	1236681	ExpressionStatement		2368:35:75404:75404	1236187	47	True				
ANR	1236682	IfStatement	if ( EG ( exception ) )		1236187	48					
ANR	1236683	Condition	EG ( exception )	2369:6:75412:75424	1236187	0	True				
ANR	1236684	CallExpression	EG ( exception )		1236187	0					
ANR	1236685	Callee	EG		1236187	0					
ANR	1236686	Identifier	EG		1236187	0					
ANR	1236687	ArgumentList	exception		1236187	1					
ANR	1236688	Argument	exception		1236187	0					
ANR	1236689	Identifier	exception		1236187	0					
ANR	1236690	CompoundStatement		82:21:2013:2013	1236187	1					
ANR	1236691	ExpressionStatement	zval_ptr_dtor ( & array_copy )	2370:3:75432:75458	1236187	0	True				
ANR	1236692	CallExpression	zval_ptr_dtor ( & array_copy )		1236187	0					
ANR	1236693	Callee	zval_ptr_dtor		1236187	0					
ANR	1236694	Identifier	zval_ptr_dtor		1236187	0					
ANR	1236695	ArgumentList	& array_copy		1236187	1					
ANR	1236696	Argument	& array_copy		1236187	0					
ANR	1236697	UnaryOperationExpression	& array_copy		1236187	0					
ANR	1236698	UnaryOperator	&		1236187	0					
ANR	1236699	Identifier	array_copy		1236187	1					
ANR	1236700	ExpressionStatement	array_copy = NULL	2371:3:75463:75480	1236187	1	True				
ANR	1236701	AssignmentExpression	array_copy = NULL		1236187	0		=			
ANR	1236702	Identifier	array_copy		1236187	0					
ANR	1236703	Identifier	NULL		1236187	1					
ANR	1236704	ElseStatement	else		1236187	0					
ANR	1236705	CompoundStatement		85:9:2077:2077	1236187	0					
ANR	1236706	ExpressionStatement	data = array_copy	2373:3:75496:75513	1236187	0	True				
ANR	1236707	AssignmentExpression	data = array_copy		1236187	0		=			
ANR	1236708	Identifier	data		1236187	0					
ANR	1236709	Identifier	array_copy		1236187	1					
ANR	1236710	ReturnType	static xmlNodePtr		1236187	1					
ANR	1236711	Identifier	to_xml_array		1236187	2					
ANR	1236712	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1236187	3					
ANR	1236713	Parameter	encodeTypePtr type	2287:31:73341:73358	1236187	0	True				
ANR	1236714	ParameterType	encodeTypePtr		1236187	0					
ANR	1236715	Identifier	type		1236187	1					
ANR	1236716	Parameter	zval * data	2287:51:73361:73370	1236187	1	True				
ANR	1236717	ParameterType	zval *		1236187	0					
ANR	1236718	Identifier	data		1236187	1					
ANR	1236719	Parameter	int style	2287:63:73373:73381	1236187	2	True				
ANR	1236720	ParameterType	int		1236187	0					
ANR	1236721	Identifier	style		1236187	1					
ANR	1236722	Parameter	xmlNodePtr parent TSRMLS_DC	2287:74:73384:73410	1236187	3	True				
ANR	1236723	ParameterType	xmlNodePtr parent		1236187	0					
ANR	1236724	Identifier	TSRMLS_DC		1236187	1					
ANR	1236725	CFGEntryNode	ENTRY		1236187		True				
ANR	1236726	CFGExitNode	EXIT		1236187		True				
ANR	1236727	Symbol	exception		1236187						
ANR	1236728	Symbol	parent		1236187						
ANR	1236729	Symbol	data		1236187						
ANR	1236730	Symbol	iter -> funcs -> get_current_key		1236187						
ANR	1236731	Symbol	type		1236187						
ANR	1236732	Symbol	TSRMLS_DC		1236187						
ANR	1236733	Symbol	features		1236187						
ANR	1236734	Symbol	soap_version		1236187						
ANR	1236735	Symbol	array_size		1236187						
ANR	1236736	Symbol	val		1236187						
ANR	1236737	Symbol	EG		1236187						
ANR	1236738	Symbol	NULL		1236187						
ANR	1236739	Symbol	array_copy		1236187						
ANR	1236740	Symbol	iter		1236187						
ANR	1236741	Symbol	* iter -> funcs		1236187						
ANR	1236742	Symbol	SOAP_GLOBAL		1236187						
ANR	1236743	Symbol	style		1236187						
ANR	1236744	Symbol	* dims		1236187						
ANR	1236745	Symbol	BAD_CAST		1236187						
ANR	1236746	Symbol	xmlParam		1236187						
ANR	1236747	Symbol	& key		1236187						
ANR	1236748	Symbol	dims		1236187						
ANR	1236749	Symbol	element_type		1236187						
ANR	1236750	Symbol	* val		1236187						
ANR	1236751	Symbol	& array_size		1236187						
ANR	1236752	Symbol	* iter		1236187						
ANR	1236753	Symbol	emalloc		1236187						
ANR	1236754	Symbol	IS_NULL		1236187						
ANR	1236755	Symbol	* type		1236187						
ANR	1236756	Symbol	Z_OBJCE_P		1236187						
ANR	1236757	Symbol	SOAP_USE_XSI_ARRAY_TYPE		1236187						
ANR	1236758	Symbol	array_type		1236187						
ANR	1236759	Symbol	enc		1236187						
ANR	1236760	Symbol	* * iter		1236187						
ANR	1236761	Symbol	Z_ARRVAL_P		1236187						
ANR	1236762	Symbol	dimension		1236187						
ANR	1236763	Symbol	key		1236187						
ANR	1236764	Symbol	ce		1236187						
ANR	1236765	Symbol	SOAP_1_1		1236187						
ANR	1236766	Symbol	SOAP_1_1_ENC_NAMESPACE		1236187						
ANR	1236767	Symbol	i		1236187						
ANR	1236768	Symbol	xmlNewNode		1236187						
ANR	1236769	Symbol	sdl_type		1236187						
ANR	1236770	Symbol	Z_TYPE_P		1236187						
ANR	1236771	Symbol	iter -> funcs -> rewind		1236187						
ANR	1236772	Symbol	iter -> funcs		1236187						
ANR	1236773	Symbol	SOAP_ENCODED		1236187						
ANR	1236774	Symbol	SOAP_1_2_ENC_NAMESPACE		1236187						
ANR	1236775	Symbol	& array_copy		1236187						
ANR	1236776	Symbol	type -> sdl_type		1236187						
ANR	1236777	Function	to_zval_array	2562:0:82397:89497							
ANR	1236778	FunctionDef	"to_zval_array (encodeTypePtr type , xmlNodePtr data TSRMLS_DC)"		1236777	0					
ANR	1236779	CompoundStatement		2563:0:82471:89497	1236777	0					
ANR	1236780	IdentifierDeclStatement	zval * ret ;	2564:1:82474:82483	1236777	0	True				
ANR	1236781	IdentifierDecl	* ret		1236777	0					
ANR	1236782	IdentifierDeclType	zval *		1236777	0					
ANR	1236783	Identifier	ret		1236777	1					
ANR	1236784	IdentifierDeclStatement	xmlNodePtr trav ;	2565:1:82486:82501	1236777	1	True				
ANR	1236785	IdentifierDecl	trav		1236777	0					
ANR	1236786	IdentifierDeclType	xmlNodePtr		1236777	0					
ANR	1236787	Identifier	trav		1236777	1					
ANR	1236788	IdentifierDeclStatement	encodePtr enc = NULL ;	2566:1:82504:82524	1236777	2	True				
ANR	1236789	IdentifierDecl	enc = NULL		1236777	0					
ANR	1236790	IdentifierDeclType	encodePtr		1236777	0					
ANR	1236791	Identifier	enc		1236777	1					
ANR	1236792	AssignmentExpression	enc = NULL		1236777	2		=			
ANR	1236793	Identifier	NULL		1236777	0					
ANR	1236794	Identifier	NULL		1236777	1					
ANR	1236795	IdentifierDeclStatement	int dimension = 1 ;	2567:1:82527:82544	1236777	3	True				
ANR	1236796	IdentifierDecl	dimension = 1		1236777	0					
ANR	1236797	IdentifierDeclType	int		1236777	0					
ANR	1236798	Identifier	dimension		1236777	1					
ANR	1236799	AssignmentExpression	dimension = 1		1236777	2		=			
ANR	1236800	Identifier	dimension		1236777	0					
ANR	1236801	PrimaryExpression	1		1236777	1					
ANR	1236802	IdentifierDeclStatement	int * dims = NULL ;	2568:1:82547:82563	1236777	4	True				
ANR	1236803	IdentifierDecl	* dims = NULL		1236777	0					
ANR	1236804	IdentifierDeclType	int *		1236777	0					
ANR	1236805	Identifier	dims		1236777	1					
ANR	1236806	AssignmentExpression	* dims = NULL		1236777	2		=			
ANR	1236807	Identifier	NULL		1236777	0					
ANR	1236808	Identifier	NULL		1236777	1					
ANR	1236809	IdentifierDeclStatement	int * pos = NULL ;	2569:1:82566:82581	1236777	5	True				
ANR	1236810	IdentifierDecl	* pos = NULL		1236777	0					
ANR	1236811	IdentifierDeclType	int *		1236777	0					
ANR	1236812	Identifier	pos		1236777	1					
ANR	1236813	AssignmentExpression	* pos = NULL		1236777	2		=			
ANR	1236814	Identifier	NULL		1236777	0					
ANR	1236815	Identifier	NULL		1236777	1					
ANR	1236816	IdentifierDeclStatement	xmlAttrPtr attr ;	2570:1:82584:82599	1236777	6	True				
ANR	1236817	IdentifierDecl	attr		1236777	0					
ANR	1236818	IdentifierDeclType	xmlAttrPtr		1236777	0					
ANR	1236819	Identifier	attr		1236777	1					
ANR	1236820	IdentifierDeclStatement	sdlPtr sdl ;	2571:1:82602:82612	1236777	7	True				
ANR	1236821	IdentifierDecl	sdl		1236777	0					
ANR	1236822	IdentifierDeclType	sdlPtr		1236777	0					
ANR	1236823	Identifier	sdl		1236777	1					
ANR	1236824	IdentifierDeclStatement	sdlAttributePtr * arrayType ;	2572:1:82615:82641	1236777	8	True				
ANR	1236825	IdentifierDecl	* arrayType		1236777	0					
ANR	1236826	IdentifierDeclType	sdlAttributePtr *		1236777	0					
ANR	1236827	Identifier	arrayType		1236777	1					
ANR	1236828	IdentifierDeclStatement	sdlExtraAttributePtr * ext ;	2573:1:82644:82669	1236777	9	True				
ANR	1236829	IdentifierDecl	* ext		1236777	0					
ANR	1236830	IdentifierDeclType	sdlExtraAttributePtr *		1236777	0					
ANR	1236831	Identifier	ext		1236777	1					
ANR	1236832	IdentifierDeclStatement	sdlTypePtr elementType ;	2574:1:82672:82694	1236777	10	True				
ANR	1236833	IdentifierDecl	elementType		1236777	0					
ANR	1236834	IdentifierDeclType	sdlTypePtr		1236777	0					
ANR	1236835	Identifier	elementType		1236777	1					
ANR	1236836	ExpressionStatement	MAKE_STD_ZVAL ( ret )	2576:1:82698:82716	1236777	11	True				
ANR	1236837	CallExpression	MAKE_STD_ZVAL ( ret )		1236777	0					
ANR	1236838	Callee	MAKE_STD_ZVAL		1236777	0					
ANR	1236839	Identifier	MAKE_STD_ZVAL		1236777	0					
ANR	1236840	ArgumentList	ret		1236777	1					
ANR	1236841	Argument	ret		1236777	0					
ANR	1236842	Identifier	ret		1236777	0					
ANR	1236843	ExpressionStatement	"FIND_XML_NULL ( data , ret )"	2577:1:82719:82743	1236777	12	True				
ANR	1236844	CallExpression	"FIND_XML_NULL ( data , ret )"		1236777	0					
ANR	1236845	Callee	FIND_XML_NULL		1236777	0					
ANR	1236846	Identifier	FIND_XML_NULL		1236777	0					
ANR	1236847	ArgumentList	data		1236777	1					
ANR	1236848	Argument	data		1236777	0					
ANR	1236849	Identifier	data		1236777	0					
ANR	1236850	Argument	ret		1236777	1					
ANR	1236851	Identifier	ret		1236777	0					
ANR	1236852	ExpressionStatement	sdl = SOAP_GLOBAL ( sdl )	2578:1:82746:82768	1236777	13	True				
ANR	1236853	AssignmentExpression	sdl = SOAP_GLOBAL ( sdl )		1236777	0		=			
ANR	1236854	Identifier	sdl		1236777	0					
ANR	1236855	CallExpression	SOAP_GLOBAL ( sdl )		1236777	1					
ANR	1236856	Callee	SOAP_GLOBAL		1236777	0					
ANR	1236857	Identifier	SOAP_GLOBAL		1236777	0					
ANR	1236858	ArgumentList	sdl		1236777	1					
ANR	1236859	Argument	sdl		1236777	0					
ANR	1236860	Identifier	sdl		1236777	0					
ANR	1236861	IfStatement	"if ( data && ( attr = get_attribute ( data -> properties , ""arrayType"" ) ) && attr -> children && attr -> children -> content )"		1236777	14					
ANR	1236862	Condition	"data && ( attr = get_attribute ( data -> properties , ""arrayType"" ) ) && attr -> children && attr -> children -> content"	2580:5:82776:82890	1236777	0	True				
ANR	1236863	AndExpression	"data && ( attr = get_attribute ( data -> properties , ""arrayType"" ) ) && attr -> children && attr -> children -> content"		1236777	0		&&			
ANR	1236864	Identifier	data		1236777	0					
ANR	1236865	AndExpression	"( attr = get_attribute ( data -> properties , ""arrayType"" ) ) && attr -> children && attr -> children -> content"		1236777	1		&&			
ANR	1236866	AssignmentExpression	"attr = get_attribute ( data -> properties , ""arrayType"" )"		1236777	0		=			
ANR	1236867	Identifier	attr		1236777	0					
ANR	1236868	CallExpression	"get_attribute ( data -> properties , ""arrayType"" )"		1236777	1					
ANR	1236869	Callee	get_attribute		1236777	0					
ANR	1236870	Identifier	get_attribute		1236777	0					
ANR	1236871	ArgumentList	data -> properties		1236777	1					
ANR	1236872	Argument	data -> properties		1236777	0					
ANR	1236873	PtrMemberAccess	data -> properties		1236777	0					
ANR	1236874	Identifier	data		1236777	0					
ANR	1236875	Identifier	properties		1236777	1					
ANR	1236876	Argument	"""arrayType"""		1236777	1					
ANR	1236877	PrimaryExpression	"""arrayType"""		1236777	0					
ANR	1236878	AndExpression	attr -> children && attr -> children -> content		1236777	1		&&			
ANR	1236879	PtrMemberAccess	attr -> children		1236777	0					
ANR	1236880	Identifier	attr		1236777	0					
ANR	1236881	Identifier	children		1236777	1					
ANR	1236882	PtrMemberAccess	attr -> children -> content		1236777	1					
ANR	1236883	PtrMemberAccess	attr -> children		1236777	0					
ANR	1236884	Identifier	attr		1236777	0					
ANR	1236885	Identifier	children		1236777	1					
ANR	1236886	Identifier	content		1236777	1					
ANR	1236887	CompoundStatement		22:2:450:464	1236777	1					
ANR	1236888	IdentifierDeclStatement	"char * type , * end , * ns ;"	2583:2:82897:82918	1236777	0	True				
ANR	1236889	IdentifierDecl	* type		1236777	0					
ANR	1236890	IdentifierDeclType	char *		1236777	0					
ANR	1236891	Identifier	type		1236777	1					
ANR	1236892	IdentifierDecl	* end		1236777	1					
ANR	1236893	IdentifierDeclType	char *		1236777	0					
ANR	1236894	Identifier	end		1236777	1					
ANR	1236895	IdentifierDecl	* ns		1236777	2					
ANR	1236896	IdentifierDeclType	char *		1236777	0					
ANR	1236897	Identifier	ns		1236777	1					
ANR	1236898	IdentifierDeclStatement	xmlNsPtr nsptr ;	2584:2:82922:82936	1236777	1	True				
ANR	1236899	IdentifierDecl	nsptr		1236777	0					
ANR	1236900	IdentifierDeclType	xmlNsPtr		1236777	0					
ANR	1236901	Identifier	nsptr		1236777	1					
ANR	1236902	ExpressionStatement	"parse_namespace ( attr -> children -> content , & type , & ns )"	2586:2:82941:82993	1236777	2	True				
ANR	1236903	CallExpression	"parse_namespace ( attr -> children -> content , & type , & ns )"		1236777	0					
ANR	1236904	Callee	parse_namespace		1236777	0					
ANR	1236905	Identifier	parse_namespace		1236777	0					
ANR	1236906	ArgumentList	attr -> children -> content		1236777	1					
ANR	1236907	Argument	attr -> children -> content		1236777	0					
ANR	1236908	PtrMemberAccess	attr -> children -> content		1236777	0					
ANR	1236909	PtrMemberAccess	attr -> children		1236777	0					
ANR	1236910	Identifier	attr		1236777	0					
ANR	1236911	Identifier	children		1236777	1					
ANR	1236912	Identifier	content		1236777	1					
ANR	1236913	Argument	& type		1236777	1					
ANR	1236914	UnaryOperationExpression	& type		1236777	0					
ANR	1236915	UnaryOperator	&		1236777	0					
ANR	1236916	Identifier	type		1236777	1					
ANR	1236917	Argument	& ns		1236777	2					
ANR	1236918	UnaryOperationExpression	& ns		1236777	0					
ANR	1236919	UnaryOperator	&		1236777	0					
ANR	1236920	Identifier	ns		1236777	1					
ANR	1236921	ExpressionStatement	"nsptr = xmlSearchNs ( attr -> doc , attr -> parent , BAD_CAST ( ns ) )"	2587:2:82997:83055	1236777	3	True				
ANR	1236922	AssignmentExpression	"nsptr = xmlSearchNs ( attr -> doc , attr -> parent , BAD_CAST ( ns ) )"		1236777	0		=			
ANR	1236923	Identifier	nsptr		1236777	0					
ANR	1236924	CallExpression	"xmlSearchNs ( attr -> doc , attr -> parent , BAD_CAST ( ns ) )"		1236777	1					
ANR	1236925	Callee	xmlSearchNs		1236777	0					
ANR	1236926	Identifier	xmlSearchNs		1236777	0					
ANR	1236927	ArgumentList	attr -> doc		1236777	1					
ANR	1236928	Argument	attr -> doc		1236777	0					
ANR	1236929	PtrMemberAccess	attr -> doc		1236777	0					
ANR	1236930	Identifier	attr		1236777	0					
ANR	1236931	Identifier	doc		1236777	1					
ANR	1236932	Argument	attr -> parent		1236777	1					
ANR	1236933	PtrMemberAccess	attr -> parent		1236777	0					
ANR	1236934	Identifier	attr		1236777	0					
ANR	1236935	Identifier	parent		1236777	1					
ANR	1236936	Argument	BAD_CAST ( ns )		1236777	2					
ANR	1236937	CallExpression	BAD_CAST ( ns )		1236777	0					
ANR	1236938	Callee	BAD_CAST		1236777	0					
ANR	1236939	Identifier	BAD_CAST		1236777	0					
ANR	1236940	ArgumentList	ns		1236777	1					
ANR	1236941	Argument	ns		1236777	0					
ANR	1236942	Identifier	ns		1236777	0					
ANR	1236943	ExpressionStatement	"end = strrchr ( type , '[' )"	2589:2:83060:83083	1236777	4	True				
ANR	1236944	AssignmentExpression	"end = strrchr ( type , '[' )"		1236777	0		=			
ANR	1236945	Identifier	end		1236777	0					
ANR	1236946	CallExpression	"strrchr ( type , '[' )"		1236777	1					
ANR	1236947	Callee	strrchr		1236777	0					
ANR	1236948	Identifier	strrchr		1236777	0					
ANR	1236949	ArgumentList	type		1236777	1					
ANR	1236950	Argument	type		1236777	0					
ANR	1236951	Identifier	type		1236777	0					
ANR	1236952	Argument	'['		1236777	1					
ANR	1236953	PrimaryExpression	'['		1236777	0					
ANR	1236954	IfStatement	if ( end )		1236777	5					
ANR	1236955	Condition	end	2590:6:83091:83093	1236777	0	True				
ANR	1236956	Identifier	end		1236777	0					
ANR	1236957	CompoundStatement		28:11:624:624	1236777	1					
ANR	1236958	ExpressionStatement	* end = '\\0'	2591:3:83101:83112	1236777	0	True				
ANR	1236959	AssignmentExpression	* end = '\\0'		1236777	0		=			
ANR	1236960	UnaryOperationExpression	* end		1236777	0					
ANR	1236961	UnaryOperator	*		1236777	0					
ANR	1236962	Identifier	end		1236777	1					
ANR	1236963	PrimaryExpression	'\\0'		1236777	1					
ANR	1236964	ExpressionStatement	dimension = calc_dimension ( end + 1 )	2592:3:83117:83150	1236777	1	True				
ANR	1236965	AssignmentExpression	dimension = calc_dimension ( end + 1 )		1236777	0		=			
ANR	1236966	Identifier	dimension		1236777	0					
ANR	1236967	CallExpression	calc_dimension ( end + 1 )		1236777	1					
ANR	1236968	Callee	calc_dimension		1236777	0					
ANR	1236969	Identifier	calc_dimension		1236777	0					
ANR	1236970	ArgumentList	end + 1		1236777	1					
ANR	1236971	Argument	end + 1		1236777	0					
ANR	1236972	AdditiveExpression	end + 1		1236777	0		+			
ANR	1236973	Identifier	end		1236777	0					
ANR	1236974	PrimaryExpression	1		1236777	1					
ANR	1236975	ExpressionStatement	"dims = get_position ( dimension , end + 1 )"	2593:3:83155:83192	1236777	2	True				
ANR	1236976	AssignmentExpression	"dims = get_position ( dimension , end + 1 )"		1236777	0		=			
ANR	1236977	Identifier	dims		1236777	0					
ANR	1236978	CallExpression	"get_position ( dimension , end + 1 )"		1236777	1					
ANR	1236979	Callee	get_position		1236777	0					
ANR	1236980	Identifier	get_position		1236777	0					
ANR	1236981	ArgumentList	dimension		1236777	1					
ANR	1236982	Argument	dimension		1236777	0					
ANR	1236983	Identifier	dimension		1236777	0					
ANR	1236984	Argument	end + 1		1236777	1					
ANR	1236985	AdditiveExpression	end + 1		1236777	0		+			
ANR	1236986	Identifier	end		1236777	0					
ANR	1236987	PrimaryExpression	1		1236777	1					
ANR	1236988	IfStatement	if ( nsptr != NULL )		1236777	6					
ANR	1236989	Condition	nsptr != NULL	2595:6:83204:83216	1236777	0	True				
ANR	1236990	EqualityExpression	nsptr != NULL		1236777	0		!=			
ANR	1236991	Identifier	nsptr		1236777	0					
ANR	1236992	Identifier	NULL		1236777	1					
ANR	1236993	CompoundStatement		33:21:747:747	1236777	1					
ANR	1236994	ExpressionStatement	"enc = get_encoder ( SOAP_GLOBAL ( sdl ) , ( char * ) nsptr -> href , type )"	2596:3:83224:83285	1236777	0	True				
ANR	1236995	AssignmentExpression	"enc = get_encoder ( SOAP_GLOBAL ( sdl ) , ( char * ) nsptr -> href , type )"		1236777	0		=			
ANR	1236996	Identifier	enc		1236777	0					
ANR	1236997	CallExpression	"get_encoder ( SOAP_GLOBAL ( sdl ) , ( char * ) nsptr -> href , type )"		1236777	1					
ANR	1236998	Callee	get_encoder		1236777	0					
ANR	1236999	Identifier	get_encoder		1236777	0					
ANR	1237000	ArgumentList	SOAP_GLOBAL ( sdl )		1236777	1					
ANR	1237001	Argument	SOAP_GLOBAL ( sdl )		1236777	0					
ANR	1237002	CallExpression	SOAP_GLOBAL ( sdl )		1236777	0					
ANR	1237003	Callee	SOAP_GLOBAL		1236777	0					
ANR	1237004	Identifier	SOAP_GLOBAL		1236777	0					
ANR	1237005	ArgumentList	sdl		1236777	1					
ANR	1237006	Argument	sdl		1236777	0					
ANR	1237007	Identifier	sdl		1236777	0					
ANR	1237008	Argument	( char * ) nsptr -> href		1236777	1					
ANR	1237009	CastExpression	( char * ) nsptr -> href		1236777	0					
ANR	1237010	CastTarget	char *		1236777	0					
ANR	1237011	PtrMemberAccess	nsptr -> href		1236777	1					
ANR	1237012	Identifier	nsptr		1236777	0					
ANR	1237013	Identifier	href		1236777	1					
ANR	1237014	Argument	type		1236777	2					
ANR	1237015	Identifier	type		1236777	0					
ANR	1237016	ExpressionStatement	efree ( type )	2598:2:83293:83304	1236777	7	True				
ANR	1237017	CallExpression	efree ( type )		1236777	0					
ANR	1237018	Callee	efree		1236777	0					
ANR	1237019	Identifier	efree		1236777	0					
ANR	1237020	ArgumentList	type		1236777	1					
ANR	1237021	Argument	type		1236777	0					
ANR	1237022	Identifier	type		1236777	0					
ANR	1237023	IfStatement	if ( ns )		1236777	8					
ANR	1237024	Condition	ns	2599:6:83312:83313	1236777	0	True				
ANR	1237025	Identifier	ns		1236777	0					
ANR	1237026	CompoundStatement		37:10:844:844	1236777	1					
ANR	1237027	ExpressionStatement	efree ( ns )	2599:11:83317:83326	1236777	0	True				
ANR	1237028	CallExpression	efree ( ns )		1236777	0					
ANR	1237029	Callee	efree		1236777	0					
ANR	1237030	Identifier	efree		1236777	0					
ANR	1237031	ArgumentList	ns		1236777	1					
ANR	1237032	Argument	ns		1236777	0					
ANR	1237033	Identifier	ns		1236777	0					
ANR	1237034	ElseStatement	else		1236777	0					
ANR	1237035	IfStatement	"if ( ( attr = get_attribute ( data -> properties , ""itemType"" ) ) && attr -> children && attr -> children -> content )"		1236777	0					
ANR	1237036	Condition	"( attr = get_attribute ( data -> properties , ""itemType"" ) ) && attr -> children && attr -> children -> content"	2601:12:83342:83447	1236777	0	True				
ANR	1237037	AndExpression	"( attr = get_attribute ( data -> properties , ""itemType"" ) ) && attr -> children && attr -> children -> content"		1236777	0		&&			
ANR	1237038	AssignmentExpression	"attr = get_attribute ( data -> properties , ""itemType"" )"		1236777	0		=			
ANR	1237039	Identifier	attr		1236777	0					
ANR	1237040	CallExpression	"get_attribute ( data -> properties , ""itemType"" )"		1236777	1					
ANR	1237041	Callee	get_attribute		1236777	0					
ANR	1237042	Identifier	get_attribute		1236777	0					
ANR	1237043	ArgumentList	data -> properties		1236777	1					
ANR	1237044	Argument	data -> properties		1236777	0					
ANR	1237045	PtrMemberAccess	data -> properties		1236777	0					
ANR	1237046	Identifier	data		1236777	0					
ANR	1237047	Identifier	properties		1236777	1					
ANR	1237048	Argument	"""itemType"""		1236777	1					
ANR	1237049	PrimaryExpression	"""itemType"""		1236777	0					
ANR	1237050	AndExpression	attr -> children && attr -> children -> content		1236777	1		&&			
ANR	1237051	PtrMemberAccess	attr -> children		1236777	0					
ANR	1237052	Identifier	attr		1236777	0					
ANR	1237053	Identifier	children		1236777	1					
ANR	1237054	PtrMemberAccess	attr -> children -> content		1236777	1					
ANR	1237055	PtrMemberAccess	attr -> children		1236777	0					
ANR	1237056	Identifier	attr		1236777	0					
ANR	1237057	Identifier	children		1236777	1					
ANR	1237058	Identifier	content		1236777	1					
ANR	1237059	CompoundStatement		43:2:1001:1015	1236777	1					
ANR	1237060	IdentifierDeclStatement	"char * type , * ns ;"	2604:2:83454:83469	1236777	0	True				
ANR	1237061	IdentifierDecl	* type		1236777	0					
ANR	1237062	IdentifierDeclType	char *		1236777	0					
ANR	1237063	Identifier	type		1236777	1					
ANR	1237064	IdentifierDecl	* ns		1236777	1					
ANR	1237065	IdentifierDeclType	char *		1236777	0					
ANR	1237066	Identifier	ns		1236777	1					
ANR	1237067	IdentifierDeclStatement	xmlNsPtr nsptr ;	2605:2:83473:83487	1236777	1	True				
ANR	1237068	IdentifierDecl	nsptr		1236777	0					
ANR	1237069	IdentifierDeclType	xmlNsPtr		1236777	0					
ANR	1237070	Identifier	nsptr		1236777	1					
ANR	1237071	ExpressionStatement	"parse_namespace ( attr -> children -> content , & type , & ns )"	2607:2:83492:83544	1236777	2	True				
ANR	1237072	CallExpression	"parse_namespace ( attr -> children -> content , & type , & ns )"		1236777	0					
ANR	1237073	Callee	parse_namespace		1236777	0					
ANR	1237074	Identifier	parse_namespace		1236777	0					
ANR	1237075	ArgumentList	attr -> children -> content		1236777	1					
ANR	1237076	Argument	attr -> children -> content		1236777	0					
ANR	1237077	PtrMemberAccess	attr -> children -> content		1236777	0					
ANR	1237078	PtrMemberAccess	attr -> children		1236777	0					
ANR	1237079	Identifier	attr		1236777	0					
ANR	1237080	Identifier	children		1236777	1					
ANR	1237081	Identifier	content		1236777	1					
ANR	1237082	Argument	& type		1236777	1					
ANR	1237083	UnaryOperationExpression	& type		1236777	0					
ANR	1237084	UnaryOperator	&		1236777	0					
ANR	1237085	Identifier	type		1236777	1					
ANR	1237086	Argument	& ns		1236777	2					
ANR	1237087	UnaryOperationExpression	& ns		1236777	0					
ANR	1237088	UnaryOperator	&		1236777	0					
ANR	1237089	Identifier	ns		1236777	1					
ANR	1237090	ExpressionStatement	"nsptr = xmlSearchNs ( attr -> doc , attr -> parent , BAD_CAST ( ns ) )"	2608:2:83548:83606	1236777	3	True				
ANR	1237091	AssignmentExpression	"nsptr = xmlSearchNs ( attr -> doc , attr -> parent , BAD_CAST ( ns ) )"		1236777	0		=			
ANR	1237092	Identifier	nsptr		1236777	0					
ANR	1237093	CallExpression	"xmlSearchNs ( attr -> doc , attr -> parent , BAD_CAST ( ns ) )"		1236777	1					
ANR	1237094	Callee	xmlSearchNs		1236777	0					
ANR	1237095	Identifier	xmlSearchNs		1236777	0					
ANR	1237096	ArgumentList	attr -> doc		1236777	1					
ANR	1237097	Argument	attr -> doc		1236777	0					
ANR	1237098	PtrMemberAccess	attr -> doc		1236777	0					
ANR	1237099	Identifier	attr		1236777	0					
ANR	1237100	Identifier	doc		1236777	1					
ANR	1237101	Argument	attr -> parent		1236777	1					
ANR	1237102	PtrMemberAccess	attr -> parent		1236777	0					
ANR	1237103	Identifier	attr		1236777	0					
ANR	1237104	Identifier	parent		1236777	1					
ANR	1237105	Argument	BAD_CAST ( ns )		1236777	2					
ANR	1237106	CallExpression	BAD_CAST ( ns )		1236777	0					
ANR	1237107	Callee	BAD_CAST		1236777	0					
ANR	1237108	Identifier	BAD_CAST		1236777	0					
ANR	1237109	ArgumentList	ns		1236777	1					
ANR	1237110	Argument	ns		1236777	0					
ANR	1237111	Identifier	ns		1236777	0					
ANR	1237112	IfStatement	if ( nsptr != NULL )		1236777	4					
ANR	1237113	Condition	nsptr != NULL	2609:6:83614:83626	1236777	0	True				
ANR	1237114	EqualityExpression	nsptr != NULL		1236777	0		!=			
ANR	1237115	Identifier	nsptr		1236777	0					
ANR	1237116	Identifier	NULL		1236777	1					
ANR	1237117	CompoundStatement		47:21:1157:1157	1236777	1					
ANR	1237118	ExpressionStatement	"enc = get_encoder ( SOAP_GLOBAL ( sdl ) , ( char * ) nsptr -> href , type )"	2610:3:83634:83695	1236777	0	True				
ANR	1237119	AssignmentExpression	"enc = get_encoder ( SOAP_GLOBAL ( sdl ) , ( char * ) nsptr -> href , type )"		1236777	0		=			
ANR	1237120	Identifier	enc		1236777	0					
ANR	1237121	CallExpression	"get_encoder ( SOAP_GLOBAL ( sdl ) , ( char * ) nsptr -> href , type )"		1236777	1					
ANR	1237122	Callee	get_encoder		1236777	0					
ANR	1237123	Identifier	get_encoder		1236777	0					
ANR	1237124	ArgumentList	SOAP_GLOBAL ( sdl )		1236777	1					
ANR	1237125	Argument	SOAP_GLOBAL ( sdl )		1236777	0					
ANR	1237126	CallExpression	SOAP_GLOBAL ( sdl )		1236777	0					
ANR	1237127	Callee	SOAP_GLOBAL		1236777	0					
ANR	1237128	Identifier	SOAP_GLOBAL		1236777	0					
ANR	1237129	ArgumentList	sdl		1236777	1					
ANR	1237130	Argument	sdl		1236777	0					
ANR	1237131	Identifier	sdl		1236777	0					
ANR	1237132	Argument	( char * ) nsptr -> href		1236777	1					
ANR	1237133	CastExpression	( char * ) nsptr -> href		1236777	0					
ANR	1237134	CastTarget	char *		1236777	0					
ANR	1237135	PtrMemberAccess	nsptr -> href		1236777	1					
ANR	1237136	Identifier	nsptr		1236777	0					
ANR	1237137	Identifier	href		1236777	1					
ANR	1237138	Argument	type		1236777	2					
ANR	1237139	Identifier	type		1236777	0					
ANR	1237140	ExpressionStatement	efree ( type )	2612:2:83703:83714	1236777	5	True				
ANR	1237141	CallExpression	efree ( type )		1236777	0					
ANR	1237142	Callee	efree		1236777	0					
ANR	1237143	Identifier	efree		1236777	0					
ANR	1237144	ArgumentList	type		1236777	1					
ANR	1237145	Argument	type		1236777	0					
ANR	1237146	Identifier	type		1236777	0					
ANR	1237147	IfStatement	if ( ns )		1236777	6					
ANR	1237148	Condition	ns	2613:6:83722:83723	1236777	0	True				
ANR	1237149	Identifier	ns		1236777	0					
ANR	1237150	CompoundStatement		51:10:1254:1254	1236777	1					
ANR	1237151	ExpressionStatement	efree ( ns )	2613:11:83727:83736	1236777	0	True				
ANR	1237152	CallExpression	efree ( ns )		1236777	0					
ANR	1237153	Callee	efree		1236777	0					
ANR	1237154	Identifier	efree		1236777	0					
ANR	1237155	ArgumentList	ns		1236777	1					
ANR	1237156	Argument	ns		1236777	0					
ANR	1237157	Identifier	ns		1236777	0					
ANR	1237158	IfStatement	"if ( ( attr = get_attribute ( data -> properties , ""arraySize"" ) ) && attr -> children && attr -> children -> content )"		1236777	7					
ANR	1237159	Condition	"( attr = get_attribute ( data -> properties , ""arraySize"" ) ) && attr -> children && attr -> children -> content"	2615:6:83746:83848	1236777	0	True				
ANR	1237160	AndExpression	"( attr = get_attribute ( data -> properties , ""arraySize"" ) ) && attr -> children && attr -> children -> content"		1236777	0		&&			
ANR	1237161	AssignmentExpression	"attr = get_attribute ( data -> properties , ""arraySize"" )"		1236777	0		=			
ANR	1237162	Identifier	attr		1236777	0					
ANR	1237163	CallExpression	"get_attribute ( data -> properties , ""arraySize"" )"		1236777	1					
ANR	1237164	Callee	get_attribute		1236777	0					
ANR	1237165	Identifier	get_attribute		1236777	0					
ANR	1237166	ArgumentList	data -> properties		1236777	1					
ANR	1237167	Argument	data -> properties		1236777	0					
ANR	1237168	PtrMemberAccess	data -> properties		1236777	0					
ANR	1237169	Identifier	data		1236777	0					
ANR	1237170	Identifier	properties		1236777	1					
ANR	1237171	Argument	"""arraySize"""		1236777	1					
ANR	1237172	PrimaryExpression	"""arraySize"""		1236777	0					
ANR	1237173	AndExpression	attr -> children && attr -> children -> content		1236777	1		&&			
ANR	1237174	PtrMemberAccess	attr -> children		1236777	0					
ANR	1237175	Identifier	attr		1236777	0					
ANR	1237176	Identifier	children		1236777	1					
ANR	1237177	PtrMemberAccess	attr -> children -> content		1236777	1					
ANR	1237178	PtrMemberAccess	attr -> children		1236777	0					
ANR	1237179	Identifier	attr		1236777	0					
ANR	1237180	Identifier	children		1236777	1					
ANR	1237181	Identifier	content		1236777	1					
ANR	1237182	CompoundStatement		54:49:1379:1379	1236777	1					
ANR	1237183	ExpressionStatement	dimension = calc_dimension_12 ( ( char * ) attr -> children -> content )	2617:3:83856:83917	1236777	0	True				
ANR	1237184	AssignmentExpression	dimension = calc_dimension_12 ( ( char * ) attr -> children -> content )		1236777	0		=			
ANR	1237185	Identifier	dimension		1236777	0					
ANR	1237186	CallExpression	calc_dimension_12 ( ( char * ) attr -> children -> content )		1236777	1					
ANR	1237187	Callee	calc_dimension_12		1236777	0					
ANR	1237188	Identifier	calc_dimension_12		1236777	0					
ANR	1237189	ArgumentList	( char * ) attr -> children -> content		1236777	1					
ANR	1237190	Argument	( char * ) attr -> children -> content		1236777	0					
ANR	1237191	CastExpression	( char * ) attr -> children -> content		1236777	0					
ANR	1237192	CastTarget	char *		1236777	0					
ANR	1237193	PtrMemberAccess	attr -> children -> content		1236777	1					
ANR	1237194	PtrMemberAccess	attr -> children		1236777	0					
ANR	1237195	Identifier	attr		1236777	0					
ANR	1237196	Identifier	children		1236777	1					
ANR	1237197	Identifier	content		1236777	1					
ANR	1237198	ExpressionStatement	"dims = get_position_12 ( dimension , ( char * ) attr -> children -> content )"	2618:3:83922:83987	1236777	1	True				
ANR	1237199	AssignmentExpression	"dims = get_position_12 ( dimension , ( char * ) attr -> children -> content )"		1236777	0		=			
ANR	1237200	Identifier	dims		1236777	0					
ANR	1237201	CallExpression	"get_position_12 ( dimension , ( char * ) attr -> children -> content )"		1236777	1					
ANR	1237202	Callee	get_position_12		1236777	0					
ANR	1237203	Identifier	get_position_12		1236777	0					
ANR	1237204	ArgumentList	dimension		1236777	1					
ANR	1237205	Argument	dimension		1236777	0					
ANR	1237206	Identifier	dimension		1236777	0					
ANR	1237207	Argument	( char * ) attr -> children -> content		1236777	1					
ANR	1237208	CastExpression	( char * ) attr -> children -> content		1236777	0					
ANR	1237209	CastTarget	char *		1236777	0					
ANR	1237210	PtrMemberAccess	attr -> children -> content		1236777	1					
ANR	1237211	PtrMemberAccess	attr -> children		1236777	0					
ANR	1237212	Identifier	attr		1236777	0					
ANR	1237213	Identifier	children		1236777	1					
ANR	1237214	Identifier	content		1236777	1					
ANR	1237215	ElseStatement	else		1236777	0					
ANR	1237216	CompoundStatement		57:9:1526:1526	1236777	0					
ANR	1237217	ExpressionStatement	dims = emalloc ( sizeof ( int ) )	2620:3:84003:84030	1236777	0	True				
ANR	1237218	AssignmentExpression	dims = emalloc ( sizeof ( int ) )		1236777	0		=			
ANR	1237219	Identifier	dims		1236777	0					
ANR	1237220	CallExpression	emalloc ( sizeof ( int ) )		1236777	1					
ANR	1237221	Callee	emalloc		1236777	0					
ANR	1237222	Identifier	emalloc		1236777	0					
ANR	1237223	ArgumentList	sizeof ( int )		1236777	1					
ANR	1237224	Argument	sizeof ( int )		1236777	0					
ANR	1237225	SizeofExpression	sizeof ( int )		1236777	0					
ANR	1237226	Sizeof	sizeof		1236777	0					
ANR	1237227	SizeofOperand	int		1236777	1					
ANR	1237228	ExpressionStatement	* dims = 0	2621:3:84035:84044	1236777	1	True				
ANR	1237229	AssignmentExpression	* dims = 0		1236777	0		=			
ANR	1237230	UnaryOperationExpression	* dims		1236777	0					
ANR	1237231	UnaryOperator	*		1236777	0					
ANR	1237232	Identifier	dims		1236777	1					
ANR	1237233	PrimaryExpression	0		1236777	1					
ANR	1237234	ElseStatement	else		1236777	0					
ANR	1237235	IfStatement	"if ( ( attr = get_attribute ( data -> properties , ""arraySize"" ) ) && attr -> children && attr -> children -> content )"		1236777	0					
ANR	1237236	Condition	"( attr = get_attribute ( data -> properties , ""arraySize"" ) ) && attr -> children && attr -> children -> content"	2624:12:84063:84164	1236777	0	True				
ANR	1237237	AndExpression	"( attr = get_attribute ( data -> properties , ""arraySize"" ) ) && attr -> children && attr -> children -> content"		1236777	0		&&			
ANR	1237238	AssignmentExpression	"attr = get_attribute ( data -> properties , ""arraySize"" )"		1236777	0		=			
ANR	1237239	Identifier	attr		1236777	0					
ANR	1237240	CallExpression	"get_attribute ( data -> properties , ""arraySize"" )"		1236777	1					
ANR	1237241	Callee	get_attribute		1236777	0					
ANR	1237242	Identifier	get_attribute		1236777	0					
ANR	1237243	ArgumentList	data -> properties		1236777	1					
ANR	1237244	Argument	data -> properties		1236777	0					
ANR	1237245	PtrMemberAccess	data -> properties		1236777	0					
ANR	1237246	Identifier	data		1236777	0					
ANR	1237247	Identifier	properties		1236777	1					
ANR	1237248	Argument	"""arraySize"""		1236777	1					
ANR	1237249	PrimaryExpression	"""arraySize"""		1236777	0					
ANR	1237250	AndExpression	attr -> children && attr -> children -> content		1236777	1		&&			
ANR	1237251	PtrMemberAccess	attr -> children		1236777	0					
ANR	1237252	Identifier	attr		1236777	0					
ANR	1237253	Identifier	children		1236777	1					
ANR	1237254	PtrMemberAccess	attr -> children -> content		1236777	1					
ANR	1237255	PtrMemberAccess	attr -> children		1236777	0					
ANR	1237256	Identifier	attr		1236777	0					
ANR	1237257	Identifier	children		1236777	1					
ANR	1237258	Identifier	content		1236777	1					
ANR	1237259	CompoundStatement		63:48:1695:1695	1236777	1					
ANR	1237260	ExpressionStatement	dimension = calc_dimension_12 ( ( char * ) attr -> children -> content )	2627:2:84172:84233	1236777	0	True				
ANR	1237261	AssignmentExpression	dimension = calc_dimension_12 ( ( char * ) attr -> children -> content )		1236777	0		=			
ANR	1237262	Identifier	dimension		1236777	0					
ANR	1237263	CallExpression	calc_dimension_12 ( ( char * ) attr -> children -> content )		1236777	1					
ANR	1237264	Callee	calc_dimension_12		1236777	0					
ANR	1237265	Identifier	calc_dimension_12		1236777	0					
ANR	1237266	ArgumentList	( char * ) attr -> children -> content		1236777	1					
ANR	1237267	Argument	( char * ) attr -> children -> content		1236777	0					
ANR	1237268	CastExpression	( char * ) attr -> children -> content		1236777	0					
ANR	1237269	CastTarget	char *		1236777	0					
ANR	1237270	PtrMemberAccess	attr -> children -> content		1236777	1					
ANR	1237271	PtrMemberAccess	attr -> children		1236777	0					
ANR	1237272	Identifier	attr		1236777	0					
ANR	1237273	Identifier	children		1236777	1					
ANR	1237274	Identifier	content		1236777	1					
ANR	1237275	ExpressionStatement	"dims = get_position_12 ( dimension , ( char * ) attr -> children -> content )"	2628:2:84237:84302	1236777	1	True				
ANR	1237276	AssignmentExpression	"dims = get_position_12 ( dimension , ( char * ) attr -> children -> content )"		1236777	0		=			
ANR	1237277	Identifier	dims		1236777	0					
ANR	1237278	CallExpression	"get_position_12 ( dimension , ( char * ) attr -> children -> content )"		1236777	1					
ANR	1237279	Callee	get_position_12		1236777	0					
ANR	1237280	Identifier	get_position_12		1236777	0					
ANR	1237281	ArgumentList	dimension		1236777	1					
ANR	1237282	Argument	dimension		1236777	0					
ANR	1237283	Identifier	dimension		1236777	0					
ANR	1237284	Argument	( char * ) attr -> children -> content		1236777	1					
ANR	1237285	CastExpression	( char * ) attr -> children -> content		1236777	0					
ANR	1237286	CastTarget	char *		1236777	0					
ANR	1237287	PtrMemberAccess	attr -> children -> content		1236777	1					
ANR	1237288	PtrMemberAccess	attr -> children		1236777	0					
ANR	1237289	Identifier	attr		1236777	0					
ANR	1237290	Identifier	children		1236777	1					
ANR	1237291	Identifier	content		1236777	1					
ANR	1237292	ElseStatement	else		1236777	0					
ANR	1237293	Statement	if	2630:8:84313:84314	1236777	0	True				
ANR	1237294	Statement	(	2630:11:84316:84316	1236777	15	True				
ANR	1237295	Statement	type	2630:12:84317:84320	1236777	16	True				
ANR	1237296	Statement	->	2630:16:84321:84322	1236777	17	True				
ANR	1237297	Statement	sdl_type	2630:18:84323:84330	1236777	18	True				
ANR	1237298	Statement	!=	2630:27:84332:84333	1236777	19	True				
ANR	1237299	Statement	NULL	2630:30:84335:84338	1236777	20	True				
ANR	1237300	Statement	&&	2630:35:84340:84341	1236777	21	True				
ANR	1237301	Statement	type	2631:12:84355:84358	1236777	22	True				
ANR	1237302	Statement	->	2631:16:84359:84360	1236777	23	True				
ANR	1237303	Statement	sdl_type	2631:18:84361:84368	1236777	24	True				
ANR	1237304	Statement	->	2631:26:84369:84370	1236777	25	True				
ANR	1237305	Statement	attributes	2631:28:84371:84380	1236777	26	True				
ANR	1237306	Statement	!=	2631:39:84382:84383	1236777	27	True				
ANR	1237307	Statement	NULL	2631:42:84385:84388	1236777	28	True				
ANR	1237308	Statement	&&	2631:47:84390:84391	1236777	29	True				
ANR	1237309	Statement	zend_hash_find	2632:12:84405:84418	1236777	30	True				
ANR	1237310	Statement	(	2632:26:84419:84419	1236777	31	True				
ANR	1237311	Statement	type	2632:27:84420:84423	1236777	32	True				
ANR	1237312	Statement	->	2632:31:84424:84425	1236777	33	True				
ANR	1237313	Statement	sdl_type	2632:33:84426:84433	1236777	34	True				
ANR	1237314	Statement	->	2632:41:84434:84435	1236777	35	True				
ANR	1237315	Statement	attributes	2632:43:84436:84445	1236777	36	True				
ANR	1237316	Statement	","	2632:53:84446:84446	1236777	37	True				
ANR	1237317	Statement	SOAP_1_1_ENC_NAMESPACE	2632:55:84448:84469	1236777	38	True				
ANR	1237318	Statement	""":arrayType"""	2632:77:84470:84481	1236777	39	True				
ANR	1237319	Statement	","	2632:89:84482:84482	1236777	40	True				
ANR	1237320	Statement	sizeof	2633:27:84511:84516	1236777	41	True				
ANR	1237321	Statement	(	2633:33:84517:84517	1236777	42	True				
ANR	1237322	Statement	SOAP_1_1_ENC_NAMESPACE	2633:34:84518:84539	1236777	43	True				
ANR	1237323	Statement	""":arrayType"""	2633:56:84540:84551	1236777	44	True				
ANR	1237324	Statement	)	2633:68:84552:84552	1236777	45	True				
ANR	1237325	Statement	","	2633:69:84553:84553	1236777	46	True				
ANR	1237326	Statement	(	2634:27:84582:84582	1236777	47	True				
ANR	1237327	Statement	void	2634:28:84583:84586	1236777	48	True				
ANR	1237328	Statement	*	2634:33:84588:84588	1236777	49	True				
ANR	1237329	Statement	*	2634:34:84589:84589	1236777	50	True				
ANR	1237330	Statement	)	2634:35:84590:84590	1236777	51	True				
ANR	1237331	Statement	&	2634:36:84591:84591	1236777	52	True				
ANR	1237332	Statement	arrayType	2634:37:84592:84600	1236777	53	True				
ANR	1237333	Statement	)	2634:46:84601:84601	1236777	54	True				
ANR	1237334	Statement	==	2634:48:84603:84604	1236777	55	True				
ANR	1237335	Statement	SUCCESS	2634:51:84606:84612	1236777	56	True				
ANR	1237336	Statement	&&	2634:59:84614:84615	1236777	57	True				
ANR	1237337	Statement	(	2635:12:84629:84629	1236777	58	True				
ANR	1237338	Statement	*	2635:13:84630:84630	1236777	59	True				
ANR	1237339	Statement	arrayType	2635:14:84631:84639	1236777	60	True				
ANR	1237340	Statement	)	2635:23:84640:84640	1236777	61	True				
ANR	1237341	Statement	->	2635:24:84641:84642	1236777	62	True				
ANR	1237342	Statement	extraAttributes	2635:26:84643:84657	1236777	63	True				
ANR	1237343	Statement	&&	2635:42:84659:84660	1236777	64	True				
ANR	1237344	Statement	zend_hash_find	2636:12:84674:84687	1236777	65	True				
ANR	1237345	Statement	(	2636:26:84688:84688	1236777	66	True				
ANR	1237346	Statement	(	2636:27:84689:84689	1236777	67	True				
ANR	1237347	Statement	*	2636:28:84690:84690	1236777	68	True				
ANR	1237348	Statement	arrayType	2636:29:84691:84699	1236777	69	True				
ANR	1237349	Statement	)	2636:38:84700:84700	1236777	70	True				
ANR	1237350	Statement	->	2636:39:84701:84702	1236777	71	True				
ANR	1237351	Statement	extraAttributes	2636:41:84703:84717	1236777	72	True				
ANR	1237352	Statement	","	2636:56:84718:84718	1236777	73	True				
ANR	1237353	Statement	WSDL_NAMESPACE	2636:58:84720:84733	1236777	74	True				
ANR	1237354	Statement	""":arrayType"""	2636:72:84734:84745	1236777	75	True				
ANR	1237355	Statement	","	2636:84:84746:84746	1236777	76	True				
ANR	1237356	Statement	sizeof	2636:86:84748:84753	1236777	77	True				
ANR	1237357	Statement	(	2636:92:84754:84754	1236777	78	True				
ANR	1237358	Statement	WSDL_NAMESPACE	2636:93:84755:84768	1236777	79	True				
ANR	1237359	Statement	""":arrayType"""	2636:107:84769:84780	1236777	80	True				
ANR	1237360	Statement	)	2636:119:84781:84781	1236777	81	True				
ANR	1237361	Statement	","	2636:120:84782:84782	1236777	82	True				
ANR	1237362	Statement	(	2636:122:84784:84784	1236777	83	True				
ANR	1237363	Statement	void	2636:123:84785:84788	1236777	84	True				
ANR	1237364	Statement	*	2636:128:84790:84790	1236777	85	True				
ANR	1237365	Statement	*	2636:129:84791:84791	1236777	86	True				
ANR	1237366	Statement	)	2636:130:84792:84792	1236777	87	True				
ANR	1237367	Statement	&	2636:131:84793:84793	1236777	88	True				
ANR	1237368	Statement	ext	2636:132:84794:84796	1236777	89	True				
ANR	1237369	Statement	)	2636:135:84797:84797	1236777	90	True				
ANR	1237370	Statement	==	2636:137:84799:84800	1236777	91	True				
ANR	1237371	Statement	SUCCESS	2636:140:84802:84808	1236777	92	True				
ANR	1237372	Statement	)	2636:147:84809:84809	1236777	93	True				
ANR	1237373	CompoundStatement		75:2:2343:2359	1236777	94					
ANR	1237374	IdentifierDeclStatement	"char * type , * end ;"	2637:2:84815:84831	1236777	0	True				
ANR	1237375	IdentifierDecl	* type		1236777	0					
ANR	1237376	IdentifierDeclType	char *		1236777	0					
ANR	1237377	Identifier	type		1236777	1					
ANR	1237378	IdentifierDecl	* end		1236777	1					
ANR	1237379	IdentifierDeclType	char *		1236777	0					
ANR	1237380	Identifier	end		1236777	1					
ANR	1237381	ExpressionStatement	type = estrdup ( ( * ext ) -> val )	2639:2:84836:84863	1236777	1	True				
ANR	1237382	AssignmentExpression	type = estrdup ( ( * ext ) -> val )		1236777	0		=			
ANR	1237383	Identifier	type		1236777	0					
ANR	1237384	CallExpression	estrdup ( ( * ext ) -> val )		1236777	1					
ANR	1237385	Callee	estrdup		1236777	0					
ANR	1237386	Identifier	estrdup		1236777	0					
ANR	1237387	ArgumentList	( * ext ) -> val		1236777	1					
ANR	1237388	Argument	( * ext ) -> val		1236777	0					
ANR	1237389	PtrMemberAccess	( * ext ) -> val		1236777	0					
ANR	1237390	UnaryOperationExpression	* ext		1236777	0					
ANR	1237391	UnaryOperator	*		1236777	0					
ANR	1237392	Identifier	ext		1236777	1					
ANR	1237393	Identifier	val		1236777	1					
ANR	1237394	ExpressionStatement	"end = strrchr ( type , '[' )"	2640:2:84867:84890	1236777	2	True				
ANR	1237395	AssignmentExpression	"end = strrchr ( type , '[' )"		1236777	0		=			
ANR	1237396	Identifier	end		1236777	0					
ANR	1237397	CallExpression	"strrchr ( type , '[' )"		1236777	1					
ANR	1237398	Callee	strrchr		1236777	0					
ANR	1237399	Identifier	strrchr		1236777	0					
ANR	1237400	ArgumentList	type		1236777	1					
ANR	1237401	Argument	type		1236777	0					
ANR	1237402	Identifier	type		1236777	0					
ANR	1237403	Argument	'['		1236777	1					
ANR	1237404	PrimaryExpression	'['		1236777	0					
ANR	1237405	IfStatement	if ( end )		1236777	3					
ANR	1237406	Condition	end	2641:6:84898:84900	1236777	0	True				
ANR	1237407	Identifier	end		1236777	0					
ANR	1237408	CompoundStatement		79:11:2431:2431	1236777	1					
ANR	1237409	ExpressionStatement	* end = '\\0'	2642:3:84908:84919	1236777	0	True				
ANR	1237410	AssignmentExpression	* end = '\\0'		1236777	0		=			
ANR	1237411	UnaryOperationExpression	* end		1236777	0					
ANR	1237412	UnaryOperator	*		1236777	0					
ANR	1237413	Identifier	end		1236777	1					
ANR	1237414	PrimaryExpression	'\\0'		1236777	1					
ANR	1237415	IfStatement	if ( ( * ext ) -> ns != NULL )		1236777	4					
ANR	1237416	Condition	( * ext ) -> ns != NULL	2644:6:84931:84948	1236777	0	True				
ANR	1237417	EqualityExpression	( * ext ) -> ns != NULL		1236777	0		!=			
ANR	1237418	PtrMemberAccess	( * ext ) -> ns		1236777	0					
ANR	1237419	UnaryOperationExpression	* ext		1236777	0					
ANR	1237420	UnaryOperator	*		1236777	0					
ANR	1237421	Identifier	ext		1236777	1					
ANR	1237422	Identifier	ns		1236777	1					
ANR	1237423	Identifier	NULL		1236777	1					
ANR	1237424	CompoundStatement		82:26:2479:2479	1236777	1					
ANR	1237425	ExpressionStatement	"enc = get_encoder ( SOAP_GLOBAL ( sdl ) , ( * ext ) -> ns , type )"	2645:3:84956:85009	1236777	0	True				
ANR	1237426	AssignmentExpression	"enc = get_encoder ( SOAP_GLOBAL ( sdl ) , ( * ext ) -> ns , type )"		1236777	0		=			
ANR	1237427	Identifier	enc		1236777	0					
ANR	1237428	CallExpression	"get_encoder ( SOAP_GLOBAL ( sdl ) , ( * ext ) -> ns , type )"		1236777	1					
ANR	1237429	Callee	get_encoder		1236777	0					
ANR	1237430	Identifier	get_encoder		1236777	0					
ANR	1237431	ArgumentList	SOAP_GLOBAL ( sdl )		1236777	1					
ANR	1237432	Argument	SOAP_GLOBAL ( sdl )		1236777	0					
ANR	1237433	CallExpression	SOAP_GLOBAL ( sdl )		1236777	0					
ANR	1237434	Callee	SOAP_GLOBAL		1236777	0					
ANR	1237435	Identifier	SOAP_GLOBAL		1236777	0					
ANR	1237436	ArgumentList	sdl		1236777	1					
ANR	1237437	Argument	sdl		1236777	0					
ANR	1237438	Identifier	sdl		1236777	0					
ANR	1237439	Argument	( * ext ) -> ns		1236777	1					
ANR	1237440	PtrMemberAccess	( * ext ) -> ns		1236777	0					
ANR	1237441	UnaryOperationExpression	* ext		1236777	0					
ANR	1237442	UnaryOperator	*		1236777	0					
ANR	1237443	Identifier	ext		1236777	1					
ANR	1237444	Identifier	ns		1236777	1					
ANR	1237445	Argument	type		1236777	2					
ANR	1237446	Identifier	type		1236777	0					
ANR	1237447	ExpressionStatement	efree ( type )	2647:2:85017:85028	1236777	5	True				
ANR	1237448	CallExpression	efree ( type )		1236777	0					
ANR	1237449	Callee	efree		1236777	0					
ANR	1237450	Identifier	efree		1236777	0					
ANR	1237451	ArgumentList	type		1236777	1					
ANR	1237452	Argument	type		1236777	0					
ANR	1237453	Identifier	type		1236777	0					
ANR	1237454	ExpressionStatement	dims = emalloc ( sizeof ( int ) )	2649:2:85033:85060	1236777	6	True				
ANR	1237455	AssignmentExpression	dims = emalloc ( sizeof ( int ) )		1236777	0		=			
ANR	1237456	Identifier	dims		1236777	0					
ANR	1237457	CallExpression	emalloc ( sizeof ( int ) )		1236777	1					
ANR	1237458	Callee	emalloc		1236777	0					
ANR	1237459	Identifier	emalloc		1236777	0					
ANR	1237460	ArgumentList	sizeof ( int )		1236777	1					
ANR	1237461	Argument	sizeof ( int )		1236777	0					
ANR	1237462	SizeofExpression	sizeof ( int )		1236777	0					
ANR	1237463	Sizeof	sizeof		1236777	0					
ANR	1237464	SizeofOperand	int		1236777	1					
ANR	1237465	ExpressionStatement	* dims = 0	2650:2:85064:85073	1236777	7	True				
ANR	1237466	AssignmentExpression	* dims = 0		1236777	0		=			
ANR	1237467	UnaryOperationExpression	* dims		1236777	0					
ANR	1237468	UnaryOperator	*		1236777	0					
ANR	1237469	Identifier	dims		1236777	1					
ANR	1237470	PrimaryExpression	0		1236777	1					
ANR	1237471	ReturnType	static zval *		1236777	1					
ANR	1237472	Identifier	to_zval_array		1236777	2					
ANR	1237473	ParameterList	"encodeTypePtr type , xmlNodePtr data TSRMLS_DC"		1236777	3					
ANR	1237474	Parameter	encodeTypePtr type	2562:27:82424:82441	1236777	0	True				
ANR	1237475	ParameterType	encodeTypePtr		1236777	0					
ANR	1237476	Identifier	type		1236777	1					
ANR	1237477	Parameter	xmlNodePtr data TSRMLS_DC	2562:47:82444:82468	1236777	1	True				
ANR	1237478	ParameterType	xmlNodePtr data		1236777	0					
ANR	1237479	Identifier	TSRMLS_DC		1236777	1					
ANR	1237480	CFGEntryNode	ENTRY		1236777		True				
ANR	1237481	CFGExitNode	EXIT		1236777		True				
ANR	1237482	Symbol	get_position		1236777						
ANR	1237483	Symbol	data		1236777						
ANR	1237484	Symbol	get_attribute		1236777						
ANR	1237485	Symbol	trav		1236777						
ANR	1237486	Symbol	* * attr		1236777						
ANR	1237487	Symbol	type		1236777						
ANR	1237488	Symbol	TSRMLS_DC		1236777						
ANR	1237489	Symbol	attr -> doc		1236777						
ANR	1237490	Symbol	ret		1236777						
ANR	1237491	Symbol	ext		1236777						
ANR	1237492	Symbol	arrayType		1236777						
ANR	1237493	Symbol	NULL		1236777						
ANR	1237494	Symbol	& type		1236777						
ANR	1237495	Symbol	SOAP_GLOBAL		1236777						
ANR	1237496	Symbol	calc_dimension		1236777						
ANR	1237497	Symbol	* nsptr		1236777						
ANR	1237498	Symbol	sdl		1236777						
ANR	1237499	Symbol	* end		1236777						
ANR	1237500	Symbol	* attr		1236777						
ANR	1237501	Symbol	* dims		1236777						
ANR	1237502	Symbol	BAD_CAST		1236777						
ANR	1237503	Symbol	dims		1236777						
ANR	1237504	Symbol	ns		1236777						
ANR	1237505	Symbol	calc_dimension_12		1236777						
ANR	1237506	Symbol	* attr -> children		1236777						
ANR	1237507	Symbol	data -> properties		1236777						
ANR	1237508	Symbol	nsptr		1236777						
ANR	1237509	Symbol	emalloc		1236777						
ANR	1237510	Symbol	pos		1236777						
ANR	1237511	Symbol	end		1236777						
ANR	1237512	Symbol	enc		1236777						
ANR	1237513	Symbol	attr		1236777						
ANR	1237514	Symbol	dimension		1236777						
ANR	1237515	Symbol	( * ext ) -> val		1236777						
ANR	1237516	Symbol	nsptr -> href		1236777						
ANR	1237517	Symbol	attr -> parent		1236777						
ANR	1237518	Symbol	( * ext ) -> ns		1236777						
ANR	1237519	Symbol	attr -> children -> content		1236777						
ANR	1237520	Symbol	attr -> children		1236777						
ANR	1237521	Symbol	get_position_12		1236777						
ANR	1237522	Symbol	xmlSearchNs		1236777						
ANR	1237523	Symbol	& ns		1236777						
ANR	1237524	Symbol	get_encoder		1236777						
ANR	1237525	Symbol	* ext		1236777						
ANR	1237526	Symbol	* * ext		1236777						
ANR	1237527	Symbol	strrchr		1236777						
ANR	1237528	Symbol	estrdup		1236777						
ANR	1237529	Symbol	elementType		1236777						
ANR	1237530	Symbol	* data		1236777						
ANR	1237531	Function	to_xml_map	2778:0:89524:91033							
ANR	1237532	FunctionDef	"to_xml_map (encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1237531	0					
ANR	1237533	CompoundStatement		2779:0:89625:91033	1237531	0					
ANR	1237534	IdentifierDeclStatement	xmlNodePtr xmlParam ;	2780:1:89628:89647	1237531	0	True				
ANR	1237535	IdentifierDecl	xmlParam		1237531	0					
ANR	1237536	IdentifierDeclType	xmlNodePtr		1237531	0					
ANR	1237537	Identifier	xmlParam		1237531	1					
ANR	1237538	IdentifierDeclStatement	int i ;	2781:1:89650:89655	1237531	1	True				
ANR	1237539	IdentifierDecl	i		1237531	0					
ANR	1237540	IdentifierDeclType	int		1237531	0					
ANR	1237541	Identifier	i		1237531	1					
ANR	1237542	ExpressionStatement	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	2783:1:89659:89705	1237531	2	True				
ANR	1237543	AssignmentExpression	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1237531	0		=			
ANR	1237544	Identifier	xmlParam		1237531	0					
ANR	1237545	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1237531	1					
ANR	1237546	Callee	xmlNewNode		1237531	0					
ANR	1237547	Identifier	xmlNewNode		1237531	0					
ANR	1237548	ArgumentList	NULL		1237531	1					
ANR	1237549	Argument	NULL		1237531	0					
ANR	1237550	Identifier	NULL		1237531	0					
ANR	1237551	Argument	"BAD_CAST ( ""BOGUS"" )"		1237531	1					
ANR	1237552	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1237531	0					
ANR	1237553	Callee	BAD_CAST		1237531	0					
ANR	1237554	Identifier	BAD_CAST		1237531	0					
ANR	1237555	ArgumentList	"""BOGUS"""		1237531	1					
ANR	1237556	Argument	"""BOGUS"""		1237531	0					
ANR	1237557	PrimaryExpression	"""BOGUS"""		1237531	0					
ANR	1237558	ExpressionStatement	"xmlAddChild ( parent , xmlParam )"	2784:1:89708:89737	1237531	3	True				
ANR	1237559	CallExpression	"xmlAddChild ( parent , xmlParam )"		1237531	0					
ANR	1237560	Callee	xmlAddChild		1237531	0					
ANR	1237561	Identifier	xmlAddChild		1237531	0					
ANR	1237562	ArgumentList	parent		1237531	1					
ANR	1237563	Argument	parent		1237531	0					
ANR	1237564	Identifier	parent		1237531	0					
ANR	1237565	Argument	xmlParam		1237531	1					
ANR	1237566	Identifier	xmlParam		1237531	0					
ANR	1237567	ExpressionStatement	"FIND_ZVAL_NULL ( data , xmlParam , style )"	2785:1:89740:89777	1237531	4	True				
ANR	1237568	CallExpression	"FIND_ZVAL_NULL ( data , xmlParam , style )"		1237531	0					
ANR	1237569	Callee	FIND_ZVAL_NULL		1237531	0					
ANR	1237570	Identifier	FIND_ZVAL_NULL		1237531	0					
ANR	1237571	ArgumentList	data		1237531	1					
ANR	1237572	Argument	data		1237531	0					
ANR	1237573	Identifier	data		1237531	0					
ANR	1237574	Argument	xmlParam		1237531	1					
ANR	1237575	Identifier	xmlParam		1237531	0					
ANR	1237576	Argument	style		1237531	2					
ANR	1237577	Identifier	style		1237531	0					
ANR	1237578	IfStatement	if ( Z_TYPE_P ( data ) == IS_ARRAY )		1237531	5					
ANR	1237579	Condition	Z_TYPE_P ( data ) == IS_ARRAY	2787:5:89785:89810	1237531	0	True				
ANR	1237580	EqualityExpression	Z_TYPE_P ( data ) == IS_ARRAY		1237531	0		==			
ANR	1237581	CallExpression	Z_TYPE_P ( data )		1237531	0					
ANR	1237582	Callee	Z_TYPE_P		1237531	0					
ANR	1237583	Identifier	Z_TYPE_P		1237531	0					
ANR	1237584	ArgumentList	data		1237531	1					
ANR	1237585	Argument	data		1237531	0					
ANR	1237586	Identifier	data		1237531	0					
ANR	1237587	Identifier	IS_ARRAY		1237531	1					
ANR	1237588	CompoundStatement		9:33:187:187	1237531	1					
ANR	1237589	ExpressionStatement	i = zend_hash_num_elements ( Z_ARRVAL_P ( data ) )	2788:2:89817:89861	1237531	0	True				
ANR	1237590	AssignmentExpression	i = zend_hash_num_elements ( Z_ARRVAL_P ( data ) )		1237531	0		=			
ANR	1237591	Identifier	i		1237531	0					
ANR	1237592	CallExpression	zend_hash_num_elements ( Z_ARRVAL_P ( data ) )		1237531	1					
ANR	1237593	Callee	zend_hash_num_elements		1237531	0					
ANR	1237594	Identifier	zend_hash_num_elements		1237531	0					
ANR	1237595	ArgumentList	Z_ARRVAL_P ( data )		1237531	1					
ANR	1237596	Argument	Z_ARRVAL_P ( data )		1237531	0					
ANR	1237597	CallExpression	Z_ARRVAL_P ( data )		1237531	0					
ANR	1237598	Callee	Z_ARRVAL_P		1237531	0					
ANR	1237599	Identifier	Z_ARRVAL_P		1237531	0					
ANR	1237600	ArgumentList	data		1237531	1					
ANR	1237601	Argument	data		1237531	0					
ANR	1237602	Identifier	data		1237531	0					
ANR	1237603	ExpressionStatement	zend_hash_internal_pointer_reset ( data -> value . ht )	2789:2:89865:89913	1237531	1	True				
ANR	1237604	CallExpression	zend_hash_internal_pointer_reset ( data -> value . ht )		1237531	0					
ANR	1237605	Callee	zend_hash_internal_pointer_reset		1237531	0					
ANR	1237606	Identifier	zend_hash_internal_pointer_reset		1237531	0					
ANR	1237607	ArgumentList	data -> value . ht		1237531	1					
ANR	1237608	Argument	data -> value . ht		1237531	0					
ANR	1237609	MemberAccess	data -> value . ht		1237531	0					
ANR	1237610	PtrMemberAccess	data -> value		1237531	0					
ANR	1237611	Identifier	data		1237531	0					
ANR	1237612	Identifier	value		1237531	1					
ANR	1237613	Identifier	ht		1237531	1					
ANR	1237614	ForStatement	for ( ; i > 0 ; i -- )		1237531	2					
ANR	1237615	Condition	i > 0	2790:8:89923:89927	1237531	0	True				
ANR	1237616	RelationalExpression	i > 0		1237531	0		>			
ANR	1237617	Identifier	i		1237531	0					
ANR	1237618	PrimaryExpression	0		1237531	1					
ANR	1237619	PostIncDecOperationExpression	i --	2790:14:89929:89931	1237531	1	True				
ANR	1237620	Identifier	i		1237531	0					
ANR	1237621	IncDec	--		1237531	1					
ANR	1237622	CompoundStatement		17:3:399:412	1237531	2					
ANR	1237623	IdentifierDeclStatement	"xmlNodePtr xparam , item ;"	2791:3:89939:89962	1237531	0	True				
ANR	1237624	IdentifierDecl	xparam		1237531	0					
ANR	1237625	IdentifierDeclType	xmlNodePtr		1237531	0					
ANR	1237626	Identifier	xparam		1237531	1					
ANR	1237627	IdentifierDecl	item		1237531	1					
ANR	1237628	IdentifierDeclType	xmlNodePtr		1237531	0					
ANR	1237629	Identifier	item		1237531	1					
ANR	1237630	IdentifierDeclStatement	xmlNodePtr key ;	2792:3:89967:89981	1237531	1	True				
ANR	1237631	IdentifierDecl	key		1237531	0					
ANR	1237632	IdentifierDeclType	xmlNodePtr		1237531	0					
ANR	1237633	Identifier	key		1237531	1					
ANR	1237634	IdentifierDeclStatement	zval * * temp_data ;	2793:3:89986:90002	1237531	2	True				
ANR	1237635	IdentifierDecl	* * temp_data		1237531	0					
ANR	1237636	IdentifierDeclType	zval * *		1237531	0					
ANR	1237637	Identifier	temp_data		1237531	1					
ANR	1237638	IdentifierDeclStatement	char * key_val ;	2794:3:90007:90020	1237531	3	True				
ANR	1237639	IdentifierDecl	* key_val		1237531	0					
ANR	1237640	IdentifierDeclType	char *		1237531	0					
ANR	1237641	Identifier	key_val		1237531	1					
ANR	1237642	IdentifierDeclStatement	ulong int_val ;	2795:3:90025:90038	1237531	4	True				
ANR	1237643	IdentifierDecl	int_val		1237531	0					
ANR	1237644	IdentifierDeclType	ulong		1237531	0					
ANR	1237645	Identifier	int_val		1237531	1					
ANR	1237646	ExpressionStatement	"zend_hash_get_current_data ( data -> value . ht , ( void * * ) & temp_data )"	2797:3:90044:90107	1237531	5	True				
ANR	1237647	CallExpression	"zend_hash_get_current_data ( data -> value . ht , ( void * * ) & temp_data )"		1237531	0					
ANR	1237648	Callee	zend_hash_get_current_data		1237531	0					
ANR	1237649	Identifier	zend_hash_get_current_data		1237531	0					
ANR	1237650	ArgumentList	data -> value . ht		1237531	1					
ANR	1237651	Argument	data -> value . ht		1237531	0					
ANR	1237652	MemberAccess	data -> value . ht		1237531	0					
ANR	1237653	PtrMemberAccess	data -> value		1237531	0					
ANR	1237654	Identifier	data		1237531	0					
ANR	1237655	Identifier	value		1237531	1					
ANR	1237656	Identifier	ht		1237531	1					
ANR	1237657	Argument	( void * * ) & temp_data		1237531	1					
ANR	1237658	CastExpression	( void * * ) & temp_data		1237531	0					
ANR	1237659	CastTarget	void * *		1237531	0					
ANR	1237660	UnaryOperationExpression	& temp_data		1237531	1					
ANR	1237661	UnaryOperator	&		1237531	0					
ANR	1237662	Identifier	temp_data		1237531	1					
ANR	1237663	ExpressionStatement	"item = xmlNewNode ( NULL , BAD_CAST ( ""item"" ) )"	2798:3:90112:90153	1237531	6	True				
ANR	1237664	AssignmentExpression	"item = xmlNewNode ( NULL , BAD_CAST ( ""item"" ) )"		1237531	0		=			
ANR	1237665	Identifier	item		1237531	0					
ANR	1237666	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""item"" ) )"		1237531	1					
ANR	1237667	Callee	xmlNewNode		1237531	0					
ANR	1237668	Identifier	xmlNewNode		1237531	0					
ANR	1237669	ArgumentList	NULL		1237531	1					
ANR	1237670	Argument	NULL		1237531	0					
ANR	1237671	Identifier	NULL		1237531	0					
ANR	1237672	Argument	"BAD_CAST ( ""item"" )"		1237531	1					
ANR	1237673	CallExpression	"BAD_CAST ( ""item"" )"		1237531	0					
ANR	1237674	Callee	BAD_CAST		1237531	0					
ANR	1237675	Identifier	BAD_CAST		1237531	0					
ANR	1237676	ArgumentList	"""item"""		1237531	1					
ANR	1237677	Argument	"""item"""		1237531	0					
ANR	1237678	PrimaryExpression	"""item"""		1237531	0					
ANR	1237679	ExpressionStatement	"xmlAddChild ( xmlParam , item )"	2799:3:90158:90185	1237531	7	True				
ANR	1237680	CallExpression	"xmlAddChild ( xmlParam , item )"		1237531	0					
ANR	1237681	Callee	xmlAddChild		1237531	0					
ANR	1237682	Identifier	xmlAddChild		1237531	0					
ANR	1237683	ArgumentList	xmlParam		1237531	1					
ANR	1237684	Argument	xmlParam		1237531	0					
ANR	1237685	Identifier	xmlParam		1237531	0					
ANR	1237686	Argument	item		1237531	1					
ANR	1237687	Identifier	item		1237531	0					
ANR	1237688	ExpressionStatement	"key = xmlNewNode ( NULL , BAD_CAST ( ""key"" ) )"	2800:3:90190:90229	1237531	8	True				
ANR	1237689	AssignmentExpression	"key = xmlNewNode ( NULL , BAD_CAST ( ""key"" ) )"		1237531	0		=			
ANR	1237690	Identifier	key		1237531	0					
ANR	1237691	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""key"" ) )"		1237531	1					
ANR	1237692	Callee	xmlNewNode		1237531	0					
ANR	1237693	Identifier	xmlNewNode		1237531	0					
ANR	1237694	ArgumentList	NULL		1237531	1					
ANR	1237695	Argument	NULL		1237531	0					
ANR	1237696	Identifier	NULL		1237531	0					
ANR	1237697	Argument	"BAD_CAST ( ""key"" )"		1237531	1					
ANR	1237698	CallExpression	"BAD_CAST ( ""key"" )"		1237531	0					
ANR	1237699	Callee	BAD_CAST		1237531	0					
ANR	1237700	Identifier	BAD_CAST		1237531	0					
ANR	1237701	ArgumentList	"""key"""		1237531	1					
ANR	1237702	Argument	"""key"""		1237531	0					
ANR	1237703	PrimaryExpression	"""key"""		1237531	0					
ANR	1237704	ExpressionStatement	"xmlAddChild ( item , key )"	2801:3:90234:90255	1237531	9	True				
ANR	1237705	CallExpression	"xmlAddChild ( item , key )"		1237531	0					
ANR	1237706	Callee	xmlAddChild		1237531	0					
ANR	1237707	Identifier	xmlAddChild		1237531	0					
ANR	1237708	ArgumentList	item		1237531	1					
ANR	1237709	Argument	item		1237531	0					
ANR	1237710	Identifier	item		1237531	0					
ANR	1237711	Argument	key		1237531	1					
ANR	1237712	Identifier	key		1237531	0					
ANR	1237713	IfStatement	"if ( zend_hash_get_current_key ( data -> value . ht , & key_val , & int_val , FALSE ) == HASH_KEY_IS_STRING )"		1237531	10					
ANR	1237714	Condition	"zend_hash_get_current_key ( data -> value . ht , & key_val , & int_val , FALSE ) == HASH_KEY_IS_STRING"	2802:7:90264:90353	1237531	0	True				
ANR	1237715	EqualityExpression	"zend_hash_get_current_key ( data -> value . ht , & key_val , & int_val , FALSE ) == HASH_KEY_IS_STRING"		1237531	0		==			
ANR	1237716	CallExpression	"zend_hash_get_current_key ( data -> value . ht , & key_val , & int_val , FALSE )"		1237531	0					
ANR	1237717	Callee	zend_hash_get_current_key		1237531	0					
ANR	1237718	Identifier	zend_hash_get_current_key		1237531	0					
ANR	1237719	ArgumentList	data -> value . ht		1237531	1					
ANR	1237720	Argument	data -> value . ht		1237531	0					
ANR	1237721	MemberAccess	data -> value . ht		1237531	0					
ANR	1237722	PtrMemberAccess	data -> value		1237531	0					
ANR	1237723	Identifier	data		1237531	0					
ANR	1237724	Identifier	value		1237531	1					
ANR	1237725	Identifier	ht		1237531	1					
ANR	1237726	Argument	& key_val		1237531	1					
ANR	1237727	UnaryOperationExpression	& key_val		1237531	0					
ANR	1237728	UnaryOperator	&		1237531	0					
ANR	1237729	Identifier	key_val		1237531	1					
ANR	1237730	Argument	& int_val		1237531	2					
ANR	1237731	UnaryOperationExpression	& int_val		1237531	0					
ANR	1237732	UnaryOperator	&		1237531	0					
ANR	1237733	Identifier	int_val		1237531	1					
ANR	1237734	Argument	FALSE		1237531	3					
ANR	1237735	Identifier	FALSE		1237531	0					
ANR	1237736	Identifier	HASH_KEY_IS_STRING		1237531	1					
ANR	1237737	CompoundStatement		24:99:730:730	1237531	1					
ANR	1237738	IfStatement	if ( style == SOAP_ENCODED )		1237531	0					
ANR	1237739	Condition	style == SOAP_ENCODED	2803:8:90366:90386	1237531	0	True				
ANR	1237740	EqualityExpression	style == SOAP_ENCODED		1237531	0		==			
ANR	1237741	Identifier	style		1237531	0					
ANR	1237742	Identifier	SOAP_ENCODED		1237531	1					
ANR	1237743	CompoundStatement		25:31:763:763	1237531	1					
ANR	1237744	ExpressionStatement	"set_xsi_type ( key , ""xsd:string"" )"	2804:5:90396:90427	1237531	0	True				
ANR	1237745	CallExpression	"set_xsi_type ( key , ""xsd:string"" )"		1237531	0					
ANR	1237746	Callee	set_xsi_type		1237531	0					
ANR	1237747	Identifier	set_xsi_type		1237531	0					
ANR	1237748	ArgumentList	key		1237531	1					
ANR	1237749	Argument	key		1237531	0					
ANR	1237750	Identifier	key		1237531	0					
ANR	1237751	Argument	"""xsd:string"""		1237531	1					
ANR	1237752	PrimaryExpression	"""xsd:string"""		1237531	0					
ANR	1237753	ExpressionStatement	"xmlNodeSetContent ( key , BAD_CAST ( key_val ) )"	2806:4:90439:90480	1237531	1	True				
ANR	1237754	CallExpression	"xmlNodeSetContent ( key , BAD_CAST ( key_val ) )"		1237531	0					
ANR	1237755	Callee	xmlNodeSetContent		1237531	0					
ANR	1237756	Identifier	xmlNodeSetContent		1237531	0					
ANR	1237757	ArgumentList	key		1237531	1					
ANR	1237758	Argument	key		1237531	0					
ANR	1237759	Identifier	key		1237531	0					
ANR	1237760	Argument	BAD_CAST ( key_val )		1237531	1					
ANR	1237761	CallExpression	BAD_CAST ( key_val )		1237531	0					
ANR	1237762	Callee	BAD_CAST		1237531	0					
ANR	1237763	Identifier	BAD_CAST		1237531	0					
ANR	1237764	ArgumentList	key_val		1237531	1					
ANR	1237765	Argument	key_val		1237531	0					
ANR	1237766	Identifier	key_val		1237531	0					
ANR	1237767	ElseStatement	else		1237531	0					
ANR	1237768	CompoundStatement		30:4:872:891	1237531	0					
ANR	1237769	IdentifierDeclStatement	smart_str tmp = { 0 } ;	2808:4:90498:90517	1237531	0	True				
ANR	1237770	IdentifierDecl	tmp = { 0 }		1237531	0					
ANR	1237771	IdentifierDeclType	smart_str		1237531	0					
ANR	1237772	Identifier	tmp		1237531	1					
ANR	1237773	AssignmentExpression	tmp = { 0 }		1237531	2		=			
ANR	1237774	Identifier	tmp		1237531	0					
ANR	1237775	InitializerList	0		1237531	1					
ANR	1237776	PrimaryExpression	0		1237531	0					
ANR	1237777	ExpressionStatement	"smart_str_append_long ( & tmp , int_val )"	2809:4:90523:90559	1237531	1	True				
ANR	1237778	CallExpression	"smart_str_append_long ( & tmp , int_val )"		1237531	0					
ANR	1237779	Callee	smart_str_append_long		1237531	0					
ANR	1237780	Identifier	smart_str_append_long		1237531	0					
ANR	1237781	ArgumentList	& tmp		1237531	1					
ANR	1237782	Argument	& tmp		1237531	0					
ANR	1237783	UnaryOperationExpression	& tmp		1237531	0					
ANR	1237784	UnaryOperator	&		1237531	0					
ANR	1237785	Identifier	tmp		1237531	1					
ANR	1237786	Argument	int_val		1237531	1					
ANR	1237787	Identifier	int_val		1237531	0					
ANR	1237788	ExpressionStatement	smart_str_0 ( & tmp )	2810:4:90565:90582	1237531	2	True				
ANR	1237789	CallExpression	smart_str_0 ( & tmp )		1237531	0					
ANR	1237790	Callee	smart_str_0		1237531	0					
ANR	1237791	Identifier	smart_str_0		1237531	0					
ANR	1237792	ArgumentList	& tmp		1237531	1					
ANR	1237793	Argument	& tmp		1237531	0					
ANR	1237794	UnaryOperationExpression	& tmp		1237531	0					
ANR	1237795	UnaryOperator	&		1237531	0					
ANR	1237796	Identifier	tmp		1237531	1					
ANR	1237797	IfStatement	if ( style == SOAP_ENCODED )		1237531	3					
ANR	1237798	Condition	style == SOAP_ENCODED	2812:8:90593:90613	1237531	0	True				
ANR	1237799	EqualityExpression	style == SOAP_ENCODED		1237531	0		==			
ANR	1237800	Identifier	style		1237531	0					
ANR	1237801	Identifier	SOAP_ENCODED		1237531	1					
ANR	1237802	CompoundStatement		34:31:990:990	1237531	1					
ANR	1237803	ExpressionStatement	"set_xsi_type ( key , ""xsd:int"" )"	2813:5:90623:90651	1237531	0	True				
ANR	1237804	CallExpression	"set_xsi_type ( key , ""xsd:int"" )"		1237531	0					
ANR	1237805	Callee	set_xsi_type		1237531	0					
ANR	1237806	Identifier	set_xsi_type		1237531	0					
ANR	1237807	ArgumentList	key		1237531	1					
ANR	1237808	Argument	key		1237531	0					
ANR	1237809	Identifier	key		1237531	0					
ANR	1237810	Argument	"""xsd:int"""		1237531	1					
ANR	1237811	PrimaryExpression	"""xsd:int"""		1237531	0					
ANR	1237812	ExpressionStatement	"xmlNodeSetContentLen ( key , BAD_CAST ( tmp . c ) , tmp . len )"	2815:4:90663:90714	1237531	4	True				
ANR	1237813	CallExpression	"xmlNodeSetContentLen ( key , BAD_CAST ( tmp . c ) , tmp . len )"		1237531	0					
ANR	1237814	Callee	xmlNodeSetContentLen		1237531	0					
ANR	1237815	Identifier	xmlNodeSetContentLen		1237531	0					
ANR	1237816	ArgumentList	key		1237531	1					
ANR	1237817	Argument	key		1237531	0					
ANR	1237818	Identifier	key		1237531	0					
ANR	1237819	Argument	BAD_CAST ( tmp . c )		1237531	1					
ANR	1237820	CallExpression	BAD_CAST ( tmp . c )		1237531	0					
ANR	1237821	Callee	BAD_CAST		1237531	0					
ANR	1237822	Identifier	BAD_CAST		1237531	0					
ANR	1237823	ArgumentList	tmp . c		1237531	1					
ANR	1237824	Argument	tmp . c		1237531	0					
ANR	1237825	MemberAccess	tmp . c		1237531	0					
ANR	1237826	Identifier	tmp		1237531	0					
ANR	1237827	Identifier	c		1237531	1					
ANR	1237828	Argument	tmp . len		1237531	2					
ANR	1237829	MemberAccess	tmp . len		1237531	0					
ANR	1237830	Identifier	tmp		1237531	0					
ANR	1237831	Identifier	len		1237531	1					
ANR	1237832	ExpressionStatement	smart_str_free ( & tmp )	2817:4:90721:90741	1237531	5	True				
ANR	1237833	CallExpression	smart_str_free ( & tmp )		1237531	0					
ANR	1237834	Callee	smart_str_free		1237531	0					
ANR	1237835	Identifier	smart_str_free		1237531	0					
ANR	1237836	ArgumentList	& tmp		1237531	1					
ANR	1237837	Argument	& tmp		1237531	0					
ANR	1237838	UnaryOperationExpression	& tmp		1237531	0					
ANR	1237839	UnaryOperator	&		1237531	0					
ANR	1237840	Identifier	tmp		1237531	1					
ANR	1237841	Statement	xparam	2820:3:90752:90757	1237531	11	True				
ANR	1237842	Statement	=	2820:10:90759:90759	1237531	12	True				
ANR	1237843	Statement	master_to_xml	2820:12:90761:90773	1237531	13	True				
ANR	1237844	Statement	(	2820:25:90774:90774	1237531	14	True				
ANR	1237845	Statement	get_conversion	2820:26:90775:90788	1237531	15	True				
ANR	1237846	Statement	(	2820:40:90789:90789	1237531	16	True				
ANR	1237847	Statement	(	2820:41:90790:90790	1237531	17	True				
ANR	1237848	Statement	*	2820:42:90791:90791	1237531	18	True				
ANR	1237849	Statement	temp_data	2820:43:90792:90800	1237531	19	True				
ANR	1237850	Statement	)	2820:52:90801:90801	1237531	20	True				
ANR	1237851	Statement	->	2820:53:90802:90803	1237531	21	True				
ANR	1237852	Statement	type	2820:55:90804:90807	1237531	22	True				
ANR	1237853	Statement	)	2820:59:90808:90808	1237531	23	True				
ANR	1237854	Statement	","	2820:60:90809:90809	1237531	24	True				
ANR	1237855	Statement	(	2820:62:90811:90811	1237531	25	True				
ANR	1237856	Statement	*	2820:63:90812:90812	1237531	26	True				
ANR	1237857	Statement	temp_data	2820:64:90813:90821	1237531	27	True				
ANR	1237858	Statement	)	2820:73:90822:90822	1237531	28	True				
ANR	1237859	Statement	","	2820:74:90823:90823	1237531	29	True				
ANR	1237860	Statement	style	2820:76:90825:90829	1237531	30	True				
ANR	1237861	Statement	","	2820:81:90830:90830	1237531	31	True				
ANR	1237862	Statement	item	2820:83:90832:90835	1237531	32	True				
ANR	1237863	Statement	TSRMLS_CC	2820:88:90837:90845	1237531	33	True				
ANR	1237864	Statement	)	2820:97:90846:90846	1237531	34	True				
ANR	1237865	ExpressionStatement		2820:98:90847:90847	1237531	35	True				
ANR	1237866	ExpressionStatement	"xmlNodeSetName ( xparam , BAD_CAST ( ""value"" ) )"	2821:3:90852:90893	1237531	36	True				
ANR	1237867	CallExpression	"xmlNodeSetName ( xparam , BAD_CAST ( ""value"" ) )"		1237531	0					
ANR	1237868	Callee	xmlNodeSetName		1237531	0					
ANR	1237869	Identifier	xmlNodeSetName		1237531	0					
ANR	1237870	ArgumentList	xparam		1237531	1					
ANR	1237871	Argument	xparam		1237531	0					
ANR	1237872	Identifier	xparam		1237531	0					
ANR	1237873	Argument	"BAD_CAST ( ""value"" )"		1237531	1					
ANR	1237874	CallExpression	"BAD_CAST ( ""value"" )"		1237531	0					
ANR	1237875	Callee	BAD_CAST		1237531	0					
ANR	1237876	Identifier	BAD_CAST		1237531	0					
ANR	1237877	ArgumentList	"""value"""		1237531	1					
ANR	1237878	Argument	"""value"""		1237531	0					
ANR	1237879	PrimaryExpression	"""value"""		1237531	0					
ANR	1237880	ExpressionStatement	zend_hash_move_forward ( data -> value . ht )	2823:3:90899:90937	1237531	37	True				
ANR	1237881	CallExpression	zend_hash_move_forward ( data -> value . ht )		1237531	0					
ANR	1237882	Callee	zend_hash_move_forward		1237531	0					
ANR	1237883	Identifier	zend_hash_move_forward		1237531	0					
ANR	1237884	ArgumentList	data -> value . ht		1237531	1					
ANR	1237885	Argument	data -> value . ht		1237531	0					
ANR	1237886	MemberAccess	data -> value . ht		1237531	0					
ANR	1237887	PtrMemberAccess	data -> value		1237531	0					
ANR	1237888	Identifier	data		1237531	0					
ANR	1237889	Identifier	value		1237531	1					
ANR	1237890	Identifier	ht		1237531	1					
ANR	1237891	IfStatement	if ( style == SOAP_ENCODED )		1237531	6					
ANR	1237892	Condition	style == SOAP_ENCODED	2826:5:90951:90971	1237531	0	True				
ANR	1237893	EqualityExpression	style == SOAP_ENCODED		1237531	0		==			
ANR	1237894	Identifier	style		1237531	0					
ANR	1237895	Identifier	SOAP_ENCODED		1237531	1					
ANR	1237896	CompoundStatement		48:28:1348:1348	1237531	1					
ANR	1237897	ExpressionStatement	"set_ns_and_type ( xmlParam , type )"	2827:2:90978:91009	1237531	0	True				
ANR	1237898	CallExpression	"set_ns_and_type ( xmlParam , type )"		1237531	0					
ANR	1237899	Callee	set_ns_and_type		1237531	0					
ANR	1237900	Identifier	set_ns_and_type		1237531	0					
ANR	1237901	ArgumentList	xmlParam		1237531	1					
ANR	1237902	Argument	xmlParam		1237531	0					
ANR	1237903	Identifier	xmlParam		1237531	0					
ANR	1237904	Argument	type		1237531	1					
ANR	1237905	Identifier	type		1237531	0					
ANR	1237906	ReturnStatement	return xmlParam ;	2830:1:91016:91031	1237531	7	True				
ANR	1237907	Identifier	xmlParam		1237531	0					
ANR	1237908	ReturnType	static xmlNodePtr		1237531	1					
ANR	1237909	Identifier	to_xml_map		1237531	2					
ANR	1237910	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1237531	3					
ANR	1237911	Parameter	encodeTypePtr type	2778:29:89553:89570	1237531	0	True				
ANR	1237912	ParameterType	encodeTypePtr		1237531	0					
ANR	1237913	Identifier	type		1237531	1					
ANR	1237914	Parameter	zval * data	2778:49:89573:89582	1237531	1	True				
ANR	1237915	ParameterType	zval *		1237531	0					
ANR	1237916	Identifier	data		1237531	1					
ANR	1237917	Parameter	int style	2778:61:89585:89593	1237531	2	True				
ANR	1237918	ParameterType	int		1237531	0					
ANR	1237919	Identifier	style		1237531	1					
ANR	1237920	Parameter	xmlNodePtr parent TSRMLS_DC	2778:72:89596:89622	1237531	3	True				
ANR	1237921	ParameterType	xmlNodePtr parent		1237531	0					
ANR	1237922	Identifier	TSRMLS_DC		1237531	1					
ANR	1237923	CFGEntryNode	ENTRY		1237531		True				
ANR	1237924	CFGExitNode	EXIT		1237531		True				
ANR	1237925	Symbol	parent		1237531						
ANR	1237926	Symbol	xmlParam		1237531						
ANR	1237927	Symbol	data -> value . ht		1237531						
ANR	1237928	Symbol	data		1237531						
ANR	1237929	Symbol	zend_hash_get_current_key		1237531						
ANR	1237930	Symbol	xparam		1237531						
ANR	1237931	Symbol	HASH_KEY_IS_STRING		1237531						
ANR	1237932	Symbol	type		1237531						
ANR	1237933	Symbol	TSRMLS_DC		1237531						
ANR	1237934	Symbol	IS_ARRAY		1237531						
ANR	1237935	Symbol	tmp . len		1237531						
ANR	1237936	Symbol	& int_val		1237531						
ANR	1237937	Symbol	tmp		1237531						
ANR	1237938	Symbol	Z_ARRVAL_P		1237531						
ANR	1237939	Symbol	temp_data		1237531						
ANR	1237940	Symbol	key		1237531						
ANR	1237941	Symbol	item		1237531						
ANR	1237942	Symbol	NULL		1237531						
ANR	1237943	Symbol	int_val		1237531						
ANR	1237944	Symbol	tmp . c		1237531						
ANR	1237945	Symbol	zend_hash_num_elements		1237531						
ANR	1237946	Symbol	data -> value		1237531						
ANR	1237947	Symbol	i		1237531						
ANR	1237948	Symbol	xmlNewNode		1237531						
ANR	1237949	Symbol	key_val		1237531						
ANR	1237950	Symbol	Z_TYPE_P		1237531						
ANR	1237951	Symbol	& temp_data		1237531						
ANR	1237952	Symbol	style		1237531						
ANR	1237953	Symbol	FALSE		1237531						
ANR	1237954	Symbol	SOAP_ENCODED		1237531						
ANR	1237955	Symbol	& tmp		1237531						
ANR	1237956	Symbol	* data		1237531						
ANR	1237957	Symbol	BAD_CAST		1237531						
ANR	1237958	Symbol	& key_val		1237531						
ANR	1237959	Function	to_zval_map	2833:0:91036:92261							
ANR	1237960	FunctionDef	"to_zval_map (encodeTypePtr type , xmlNodePtr data TSRMLS_DC)"		1237959	0					
ANR	1237961	CompoundStatement		2834:0:91108:92261	1237959	0					
ANR	1237962	IdentifierDeclStatement	"zval * ret , * key , * value ;"	2835:1:91111:91134	1237959	0	True				
ANR	1237963	IdentifierDecl	* ret		1237959	0					
ANR	1237964	IdentifierDeclType	zval *		1237959	0					
ANR	1237965	Identifier	ret		1237959	1					
ANR	1237966	IdentifierDecl	* key		1237959	1					
ANR	1237967	IdentifierDeclType	zval *		1237959	0					
ANR	1237968	Identifier	key		1237959	1					
ANR	1237969	IdentifierDecl	* value		1237959	2					
ANR	1237970	IdentifierDeclType	zval *		1237959	0					
ANR	1237971	Identifier	value		1237959	1					
ANR	1237972	IdentifierDeclStatement	"xmlNodePtr trav , item , xmlKey , xmlValue ;"	2836:1:91137:91176	1237959	1	True				
ANR	1237973	IdentifierDecl	trav		1237959	0					
ANR	1237974	IdentifierDeclType	xmlNodePtr		1237959	0					
ANR	1237975	Identifier	trav		1237959	1					
ANR	1237976	IdentifierDecl	item		1237959	1					
ANR	1237977	IdentifierDeclType	xmlNodePtr		1237959	0					
ANR	1237978	Identifier	item		1237959	1					
ANR	1237979	IdentifierDecl	xmlKey		1237959	2					
ANR	1237980	IdentifierDeclType	xmlNodePtr		1237959	0					
ANR	1237981	Identifier	xmlKey		1237959	1					
ANR	1237982	IdentifierDecl	xmlValue		1237959	3					
ANR	1237983	IdentifierDeclType	xmlNodePtr		1237959	0					
ANR	1237984	Identifier	xmlValue		1237959	1					
ANR	1237985	ExpressionStatement	MAKE_STD_ZVAL ( ret )	2838:1:91180:91198	1237959	2	True				
ANR	1237986	CallExpression	MAKE_STD_ZVAL ( ret )		1237959	0					
ANR	1237987	Callee	MAKE_STD_ZVAL		1237959	0					
ANR	1237988	Identifier	MAKE_STD_ZVAL		1237959	0					
ANR	1237989	ArgumentList	ret		1237959	1					
ANR	1237990	Argument	ret		1237959	0					
ANR	1237991	Identifier	ret		1237959	0					
ANR	1237992	ExpressionStatement	"FIND_XML_NULL ( data , ret )"	2839:1:91201:91225	1237959	3	True				
ANR	1237993	CallExpression	"FIND_XML_NULL ( data , ret )"		1237959	0					
ANR	1237994	Callee	FIND_XML_NULL		1237959	0					
ANR	1237995	Identifier	FIND_XML_NULL		1237959	0					
ANR	1237996	ArgumentList	data		1237959	1					
ANR	1237997	Argument	data		1237959	0					
ANR	1237998	Identifier	data		1237959	0					
ANR	1237999	Argument	ret		1237959	1					
ANR	1238000	Identifier	ret		1237959	0					
ANR	1238001	IfStatement	if ( data && data -> children )		1237959	4					
ANR	1238002	Condition	data && data -> children	2841:5:91233:91254	1237959	0	True				
ANR	1238003	AndExpression	data && data -> children		1237959	0		&&			
ANR	1238004	Identifier	data		1237959	0					
ANR	1238005	PtrMemberAccess	data -> children		1237959	1					
ANR	1238006	Identifier	data		1237959	0					
ANR	1238007	Identifier	children		1237959	1					
ANR	1238008	CompoundStatement		8:29:148:148	1237959	1					
ANR	1238009	ExpressionStatement	array_init ( ret )	2842:2:91261:91276	1237959	0	True				
ANR	1238010	CallExpression	array_init ( ret )		1237959	0					
ANR	1238011	Callee	array_init		1237959	0					
ANR	1238012	Identifier	array_init		1237959	0					
ANR	1238013	ArgumentList	ret		1237959	1					
ANR	1238014	Argument	ret		1237959	0					
ANR	1238015	Identifier	ret		1237959	0					
ANR	1238016	ExpressionStatement	trav = data -> children	2843:2:91280:91301	1237959	1	True				
ANR	1238017	AssignmentExpression	trav = data -> children		1237959	0		=			
ANR	1238018	Identifier	trav		1237959	0					
ANR	1238019	PtrMemberAccess	data -> children		1237959	1					
ANR	1238020	Identifier	data		1237959	0					
ANR	1238021	Identifier	children		1237959	1					
ANR	1238022	ExpressionStatement	trav = data -> children	2845:2:91306:91327	1237959	2	True				
ANR	1238023	AssignmentExpression	trav = data -> children		1237959	0		=			
ANR	1238024	Identifier	trav		1237959	0					
ANR	1238025	PtrMemberAccess	data -> children		1237959	1					
ANR	1238026	Identifier	data		1237959	0					
ANR	1238027	Identifier	children		1237959	1					
ANR	1238028	Statement	FOREACHNODE	2846:2:91331:91341	1237959	3	True				
ANR	1238029	Statement	(	2846:13:91342:91342	1237959	4	True				
ANR	1238030	Statement	trav	2846:14:91343:91346	1237959	5	True				
ANR	1238031	Statement	","	2846:18:91347:91347	1237959	6	True				
ANR	1238032	Statement	"""item"""	2846:20:91349:91354	1237959	7	True				
ANR	1238033	Statement	","	2846:26:91355:91355	1237959	8	True				
ANR	1238034	Statement	item	2846:28:91357:91360	1237959	9	True				
ANR	1238035	Statement	)	2846:32:91361:91361	1237959	10	True				
ANR	1238036	CompoundStatement		13:34:254:254	1237959	11					
ANR	1238037	ExpressionStatement	"xmlKey = get_node ( item -> children , ""key"" )"	2847:3:91368:91408	1237959	0	True				
ANR	1238038	AssignmentExpression	"xmlKey = get_node ( item -> children , ""key"" )"		1237959	0		=			
ANR	1238039	Identifier	xmlKey		1237959	0					
ANR	1238040	CallExpression	"get_node ( item -> children , ""key"" )"		1237959	1					
ANR	1238041	Callee	get_node		1237959	0					
ANR	1238042	Identifier	get_node		1237959	0					
ANR	1238043	ArgumentList	item -> children		1237959	1					
ANR	1238044	Argument	item -> children		1237959	0					
ANR	1238045	PtrMemberAccess	item -> children		1237959	0					
ANR	1238046	Identifier	item		1237959	0					
ANR	1238047	Identifier	children		1237959	1					
ANR	1238048	Argument	"""key"""		1237959	1					
ANR	1238049	PrimaryExpression	"""key"""		1237959	0					
ANR	1238050	IfStatement	if ( ! xmlKey )		1237959	1					
ANR	1238051	Condition	! xmlKey	2848:7:91417:91423	1237959	0	True				
ANR	1238052	UnaryOperationExpression	! xmlKey		1237959	0					
ANR	1238053	UnaryOperator	!		1237959	0					
ANR	1238054	Identifier	xmlKey		1237959	1					
ANR	1238055	CompoundStatement		15:16:317:317	1237959	1					
ANR	1238056	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Can't decode apache map, missing key"" )"	2849:4:91432:91503	1237959	0	True				
ANR	1238057	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Can't decode apache map, missing key"" )"		1237959	0					
ANR	1238058	Callee	soap_error0		1237959	0					
ANR	1238059	Identifier	soap_error0		1237959	0					
ANR	1238060	ArgumentList	E_ERROR		1237959	1					
ANR	1238061	Argument	E_ERROR		1237959	0					
ANR	1238062	Identifier	E_ERROR		1237959	0					
ANR	1238063	Argument	"""Encoding: Can't decode apache map, missing key"""		1237959	1					
ANR	1238064	PrimaryExpression	"""Encoding: Can't decode apache map, missing key"""		1237959	0					
ANR	1238065	ExpressionStatement	"xmlValue = get_node ( item -> children , ""value"" )"	2852:3:91514:91558	1237959	2	True				
ANR	1238066	AssignmentExpression	"xmlValue = get_node ( item -> children , ""value"" )"		1237959	0		=			
ANR	1238067	Identifier	xmlValue		1237959	0					
ANR	1238068	CallExpression	"get_node ( item -> children , ""value"" )"		1237959	1					
ANR	1238069	Callee	get_node		1237959	0					
ANR	1238070	Identifier	get_node		1237959	0					
ANR	1238071	ArgumentList	item -> children		1237959	1					
ANR	1238072	Argument	item -> children		1237959	0					
ANR	1238073	PtrMemberAccess	item -> children		1237959	0					
ANR	1238074	Identifier	item		1237959	0					
ANR	1238075	Identifier	children		1237959	1					
ANR	1238076	Argument	"""value"""		1237959	1					
ANR	1238077	PrimaryExpression	"""value"""		1237959	0					
ANR	1238078	IfStatement	if ( ! xmlKey )		1237959	3					
ANR	1238079	Condition	! xmlKey	2853:7:91567:91573	1237959	0	True				
ANR	1238080	UnaryOperationExpression	! xmlKey		1237959	0					
ANR	1238081	UnaryOperator	!		1237959	0					
ANR	1238082	Identifier	xmlKey		1237959	1					
ANR	1238083	CompoundStatement		20:16:467:467	1237959	1					
ANR	1238084	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Can't decode apache map, missing value"" )"	2854:4:91582:91655	1237959	0	True				
ANR	1238085	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Can't decode apache map, missing value"" )"		1237959	0					
ANR	1238086	Callee	soap_error0		1237959	0					
ANR	1238087	Identifier	soap_error0		1237959	0					
ANR	1238088	ArgumentList	E_ERROR		1237959	1					
ANR	1238089	Argument	E_ERROR		1237959	0					
ANR	1238090	Identifier	E_ERROR		1237959	0					
ANR	1238091	Argument	"""Encoding: Can't decode apache map, missing value"""		1237959	1					
ANR	1238092	PrimaryExpression	"""Encoding: Can't decode apache map, missing value"""		1237959	0					
ANR	1238093	Statement	key	2857:3:91666:91668	1237959	4	True				
ANR	1238094	Statement	=	2857:7:91670:91670	1237959	5	True				
ANR	1238095	Statement	master_to_zval	2857:9:91672:91685	1237959	6	True				
ANR	1238096	Statement	(	2857:23:91686:91686	1237959	7	True				
ANR	1238097	Statement	NULL	2857:24:91687:91690	1237959	8	True				
ANR	1238098	Statement	","	2857:28:91691:91691	1237959	9	True				
ANR	1238099	Statement	xmlKey	2857:30:91693:91698	1237959	10	True				
ANR	1238100	Statement	TSRMLS_CC	2857:37:91700:91708	1237959	11	True				
ANR	1238101	Statement	)	2857:46:91709:91709	1237959	12	True				
ANR	1238102	ExpressionStatement		2857:47:91710:91710	1237959	13	True				
ANR	1238103	Statement	value	2858:3:91715:91719	1237959	14	True				
ANR	1238104	Statement	=	2858:9:91721:91721	1237959	15	True				
ANR	1238105	Statement	master_to_zval	2858:11:91723:91736	1237959	16	True				
ANR	1238106	Statement	(	2858:25:91737:91737	1237959	17	True				
ANR	1238107	Statement	NULL	2858:26:91738:91741	1237959	18	True				
ANR	1238108	Statement	","	2858:30:91742:91742	1237959	19	True				
ANR	1238109	Statement	xmlValue	2858:32:91744:91751	1237959	20	True				
ANR	1238110	Statement	TSRMLS_CC	2858:41:91753:91761	1237959	21	True				
ANR	1238111	Statement	)	2858:50:91762:91762	1237959	22	True				
ANR	1238112	ExpressionStatement		2858:51:91763:91763	1237959	23	True				
ANR	1238113	IfStatement	if ( Z_TYPE_P ( key ) == IS_STRING )		1237959	24					
ANR	1238114	Condition	Z_TYPE_P ( key ) == IS_STRING	2860:7:91773:91798	1237959	0	True				
ANR	1238115	EqualityExpression	Z_TYPE_P ( key ) == IS_STRING		1237959	0		==			
ANR	1238116	CallExpression	Z_TYPE_P ( key )		1237959	0					
ANR	1238117	Callee	Z_TYPE_P		1237959	0					
ANR	1238118	Identifier	Z_TYPE_P		1237959	0					
ANR	1238119	ArgumentList	key		1237959	1					
ANR	1238120	Argument	key		1237959	0					
ANR	1238121	Identifier	key		1237959	0					
ANR	1238122	Identifier	IS_STRING		1237959	1					
ANR	1238123	CompoundStatement		27:35:692:692	1237959	1					
ANR	1238124	ExpressionStatement	"zend_symtable_update ( Z_ARRVAL_P ( ret ) , Z_STRVAL_P ( key ) , Z_STRLEN_P ( key ) + 1 , & value , sizeof ( zval * ) , NULL )"	2861:4:91807:91912	1237959	0	True				
ANR	1238125	CallExpression	"zend_symtable_update ( Z_ARRVAL_P ( ret ) , Z_STRVAL_P ( key ) , Z_STRLEN_P ( key ) + 1 , & value , sizeof ( zval * ) , NULL )"		1237959	0					
ANR	1238126	Callee	zend_symtable_update		1237959	0					
ANR	1238127	Identifier	zend_symtable_update		1237959	0					
ANR	1238128	ArgumentList	Z_ARRVAL_P ( ret )		1237959	1					
ANR	1238129	Argument	Z_ARRVAL_P ( ret )		1237959	0					
ANR	1238130	CallExpression	Z_ARRVAL_P ( ret )		1237959	0					
ANR	1238131	Callee	Z_ARRVAL_P		1237959	0					
ANR	1238132	Identifier	Z_ARRVAL_P		1237959	0					
ANR	1238133	ArgumentList	ret		1237959	1					
ANR	1238134	Argument	ret		1237959	0					
ANR	1238135	Identifier	ret		1237959	0					
ANR	1238136	Argument	Z_STRVAL_P ( key )		1237959	1					
ANR	1238137	CallExpression	Z_STRVAL_P ( key )		1237959	0					
ANR	1238138	Callee	Z_STRVAL_P		1237959	0					
ANR	1238139	Identifier	Z_STRVAL_P		1237959	0					
ANR	1238140	ArgumentList	key		1237959	1					
ANR	1238141	Argument	key		1237959	0					
ANR	1238142	Identifier	key		1237959	0					
ANR	1238143	Argument	Z_STRLEN_P ( key ) + 1		1237959	2					
ANR	1238144	AdditiveExpression	Z_STRLEN_P ( key ) + 1		1237959	0		+			
ANR	1238145	CallExpression	Z_STRLEN_P ( key )		1237959	0					
ANR	1238146	Callee	Z_STRLEN_P		1237959	0					
ANR	1238147	Identifier	Z_STRLEN_P		1237959	0					
ANR	1238148	ArgumentList	key		1237959	1					
ANR	1238149	Argument	key		1237959	0					
ANR	1238150	Identifier	key		1237959	0					
ANR	1238151	PrimaryExpression	1		1237959	1					
ANR	1238152	Argument	& value		1237959	3					
ANR	1238153	UnaryOperationExpression	& value		1237959	0					
ANR	1238154	UnaryOperator	&		1237959	0					
ANR	1238155	Identifier	value		1237959	1					
ANR	1238156	Argument	sizeof ( zval * )		1237959	4					
ANR	1238157	SizeofExpression	sizeof ( zval * )		1237959	0					
ANR	1238158	Sizeof	sizeof		1237959	0					
ANR	1238159	SizeofOperand	zval *		1237959	1					
ANR	1238160	Argument	NULL		1237959	5					
ANR	1238161	Identifier	NULL		1237959	0					
ANR	1238162	ElseStatement	else		1237959	0					
ANR	1238163	IfStatement	if ( Z_TYPE_P ( key ) == IS_LONG )		1237959	0					
ANR	1238164	Condition	Z_TYPE_P ( key ) == IS_LONG	2862:14:91928:91951	1237959	0	True				
ANR	1238165	EqualityExpression	Z_TYPE_P ( key ) == IS_LONG		1237959	0		==			
ANR	1238166	CallExpression	Z_TYPE_P ( key )		1237959	0					
ANR	1238167	Callee	Z_TYPE_P		1237959	0					
ANR	1238168	Identifier	Z_TYPE_P		1237959	0					
ANR	1238169	ArgumentList	key		1237959	1					
ANR	1238170	Argument	key		1237959	0					
ANR	1238171	Identifier	key		1237959	0					
ANR	1238172	Identifier	IS_LONG		1237959	1					
ANR	1238173	CompoundStatement		29:40:845:845	1237959	1					
ANR	1238174	ExpressionStatement	"zend_hash_index_update ( Z_ARRVAL_P ( ret ) , Z_LVAL_P ( key ) , & value , sizeof ( zval * ) , NULL )"	2863:4:91960:92044	1237959	0	True				
ANR	1238175	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( ret ) , Z_LVAL_P ( key ) , & value , sizeof ( zval * ) , NULL )"		1237959	0					
ANR	1238176	Callee	zend_hash_index_update		1237959	0					
ANR	1238177	Identifier	zend_hash_index_update		1237959	0					
ANR	1238178	ArgumentList	Z_ARRVAL_P ( ret )		1237959	1					
ANR	1238179	Argument	Z_ARRVAL_P ( ret )		1237959	0					
ANR	1238180	CallExpression	Z_ARRVAL_P ( ret )		1237959	0					
ANR	1238181	Callee	Z_ARRVAL_P		1237959	0					
ANR	1238182	Identifier	Z_ARRVAL_P		1237959	0					
ANR	1238183	ArgumentList	ret		1237959	1					
ANR	1238184	Argument	ret		1237959	0					
ANR	1238185	Identifier	ret		1237959	0					
ANR	1238186	Argument	Z_LVAL_P ( key )		1237959	1					
ANR	1238187	CallExpression	Z_LVAL_P ( key )		1237959	0					
ANR	1238188	Callee	Z_LVAL_P		1237959	0					
ANR	1238189	Identifier	Z_LVAL_P		1237959	0					
ANR	1238190	ArgumentList	key		1237959	1					
ANR	1238191	Argument	key		1237959	0					
ANR	1238192	Identifier	key		1237959	0					
ANR	1238193	Argument	& value		1237959	2					
ANR	1238194	UnaryOperationExpression	& value		1237959	0					
ANR	1238195	UnaryOperator	&		1237959	0					
ANR	1238196	Identifier	value		1237959	1					
ANR	1238197	Argument	sizeof ( zval * )		1237959	3					
ANR	1238198	SizeofExpression	sizeof ( zval * )		1237959	0					
ANR	1238199	Sizeof	sizeof		1237959	0					
ANR	1238200	SizeofOperand	zval *		1237959	1					
ANR	1238201	Argument	NULL		1237959	4					
ANR	1238202	Identifier	NULL		1237959	0					
ANR	1238203	ElseStatement	else		1237959	0					
ANR	1238204	CompoundStatement		31:10:947:947	1237959	0					
ANR	1238205	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Can't decode apache map, only Strings or Longs are allowd as keys"" )"	2865:4:92062:92162	1237959	0	True				
ANR	1238206	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Can't decode apache map, only Strings or Longs are allowd as keys"" )"		1237959	0					
ANR	1238207	Callee	soap_error0		1237959	0					
ANR	1238208	Identifier	soap_error0		1237959	0					
ANR	1238209	ArgumentList	E_ERROR		1237959	1					
ANR	1238210	Argument	E_ERROR		1237959	0					
ANR	1238211	Identifier	E_ERROR		1237959	0					
ANR	1238212	Argument	"""Encoding: Can't decode apache map, only Strings or Longs are allowd as keys"""		1237959	1					
ANR	1238213	PrimaryExpression	"""Encoding: Can't decode apache map, only Strings or Longs are allowd as keys"""		1237959	0					
ANR	1238214	ExpressionStatement	zval_ptr_dtor ( & key )	2867:3:92172:92191	1237959	25	True				
ANR	1238215	CallExpression	zval_ptr_dtor ( & key )		1237959	0					
ANR	1238216	Callee	zval_ptr_dtor		1237959	0					
ANR	1238217	Identifier	zval_ptr_dtor		1237959	0					
ANR	1238218	ArgumentList	& key		1237959	1					
ANR	1238219	Argument	& key		1237959	0					
ANR	1238220	UnaryOperationExpression	& key		1237959	0					
ANR	1238221	UnaryOperator	&		1237959	0					
ANR	1238222	Identifier	key		1237959	1					
ANR	1238223	ExpressionStatement	ENDFOREACH ( trav )	2869:2:92199:92215	1237959	12	True				
ANR	1238224	CallExpression	ENDFOREACH ( trav )		1237959	0					
ANR	1238225	Callee	ENDFOREACH		1237959	0					
ANR	1238226	Identifier	ENDFOREACH		1237959	0					
ANR	1238227	ArgumentList	trav		1237959	1					
ANR	1238228	Argument	trav		1237959	0					
ANR	1238229	Identifier	trav		1237959	0					
ANR	1238230	ElseStatement	else		1237959	0					
ANR	1238231	CompoundStatement		37:8:1116:1116	1237959	0					
ANR	1238232	ExpressionStatement	ZVAL_NULL ( ret )	2871:2:92229:92243	1237959	0	True				
ANR	1238233	CallExpression	ZVAL_NULL ( ret )		1237959	0					
ANR	1238234	Callee	ZVAL_NULL		1237959	0					
ANR	1238235	Identifier	ZVAL_NULL		1237959	0					
ANR	1238236	ArgumentList	ret		1237959	1					
ANR	1238237	Argument	ret		1237959	0					
ANR	1238238	Identifier	ret		1237959	0					
ANR	1238239	ReturnStatement	return ret ;	2873:1:92249:92259	1237959	5	True				
ANR	1238240	Identifier	ret		1237959	0					
ANR	1238241	ReturnType	static zval *		1237959	1					
ANR	1238242	Identifier	to_zval_map		1237959	2					
ANR	1238243	ParameterList	"encodeTypePtr type , xmlNodePtr data TSRMLS_DC"		1237959	3					
ANR	1238244	Parameter	encodeTypePtr type	2833:25:91061:91078	1237959	0	True				
ANR	1238245	ParameterType	encodeTypePtr		1237959	0					
ANR	1238246	Identifier	type		1237959	1					
ANR	1238247	Parameter	xmlNodePtr data TSRMLS_DC	2833:45:91081:91105	1237959	1	True				
ANR	1238248	ParameterType	xmlNodePtr data		1237959	0					
ANR	1238249	Identifier	TSRMLS_DC		1237959	1					
ANR	1238250	CFGEntryNode	ENTRY		1237959		True				
ANR	1238251	CFGExitNode	EXIT		1237959		True				
ANR	1238252	Symbol	& key		1237959						
ANR	1238253	Symbol	& value		1237959						
ANR	1238254	Symbol	data		1237959						
ANR	1238255	Symbol	trav		1237959						
ANR	1238256	Symbol	get_node		1237959						
ANR	1238257	Symbol	type		1237959						
ANR	1238258	Symbol	TSRMLS_DC		1237959						
ANR	1238259	Symbol	xmlValue		1237959						
ANR	1238260	Symbol	* item		1237959						
ANR	1238261	Symbol	IS_LONG		1237959						
ANR	1238262	Symbol	Z_STRLEN_P		1237959						
ANR	1238263	Symbol	IS_STRING		1237959						
ANR	1238264	Symbol	Z_ARRVAL_P		1237959						
ANR	1238265	Symbol	value		1237959						
ANR	1238266	Symbol	key		1237959						
ANR	1238267	Symbol	ret		1237959						
ANR	1238268	Symbol	item		1237959						
ANR	1238269	Symbol	NULL		1237959						
ANR	1238270	Symbol	Z_TYPE_P		1237959						
ANR	1238271	Symbol	Z_STRVAL_P		1237959						
ANR	1238272	Symbol	Z_LVAL_P		1237959						
ANR	1238273	Symbol	E_ERROR		1237959						
ANR	1238274	Symbol	data -> children		1237959						
ANR	1238275	Symbol	item -> children		1237959						
ANR	1238276	Symbol	* data		1237959						
ANR	1238277	Symbol	xmlKey		1237959						
ANR	1238278	Function	guess_xml_convert	2877:0:92292:92708							
ANR	1238279	FunctionDef	"guess_xml_convert (encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1238278	0					
ANR	1238280	CompoundStatement		2878:0:92400:92708	1238278	0					
ANR	1238281	IdentifierDeclStatement	encodePtr enc ;	2879:1:92403:92417	1238278	0	True				
ANR	1238282	IdentifierDecl	enc		1238278	0					
ANR	1238283	IdentifierDeclType	encodePtr		1238278	0					
ANR	1238284	Identifier	enc		1238278	1					
ANR	1238285	IdentifierDeclStatement	xmlNodePtr ret ;	2880:1:92420:92434	1238278	1	True				
ANR	1238286	IdentifierDecl	ret		1238278	0					
ANR	1238287	IdentifierDeclType	xmlNodePtr		1238278	0					
ANR	1238288	Identifier	ret		1238278	1					
ANR	1238289	IfStatement	if ( data )		1238278	2					
ANR	1238290	Condition	data	2882:5:92442:92445	1238278	0	True				
ANR	1238291	Identifier	data		1238278	0					
ANR	1238292	CompoundStatement		5:11:47:47	1238278	1					
ANR	1238293	ExpressionStatement	enc = get_conversion ( data -> type )	2883:2:92452:92484	1238278	0	True				
ANR	1238294	AssignmentExpression	enc = get_conversion ( data -> type )		1238278	0		=			
ANR	1238295	Identifier	enc		1238278	0					
ANR	1238296	CallExpression	get_conversion ( data -> type )		1238278	1					
ANR	1238297	Callee	get_conversion		1238278	0					
ANR	1238298	Identifier	get_conversion		1238278	0					
ANR	1238299	ArgumentList	data -> type		1238278	1					
ANR	1238300	Argument	data -> type		1238278	0					
ANR	1238301	PtrMemberAccess	data -> type		1238278	0					
ANR	1238302	Identifier	data		1238278	0					
ANR	1238303	Identifier	type		1238278	1					
ANR	1238304	ElseStatement	else		1238278	0					
ANR	1238305	CompoundStatement		7:8:93:93	1238278	0					
ANR	1238306	ExpressionStatement	enc = get_conversion ( IS_NULL )	2885:2:92498:92527	1238278	0	True				
ANR	1238307	AssignmentExpression	enc = get_conversion ( IS_NULL )		1238278	0		=			
ANR	1238308	Identifier	enc		1238278	0					
ANR	1238309	CallExpression	get_conversion ( IS_NULL )		1238278	1					
ANR	1238310	Callee	get_conversion		1238278	0					
ANR	1238311	Identifier	get_conversion		1238278	0					
ANR	1238312	ArgumentList	IS_NULL		1238278	1					
ANR	1238313	Argument	IS_NULL		1238278	0					
ANR	1238314	Identifier	IS_NULL		1238278	0					
ANR	1238315	Statement	ret	2887:1:92533:92535	1238278	3	True				
ANR	1238316	Statement	=	2887:5:92537:92537	1238278	4	True				
ANR	1238317	Statement	master_to_xml_int	2887:7:92539:92555	1238278	5	True				
ANR	1238318	Statement	(	2887:24:92556:92556	1238278	6	True				
ANR	1238319	Statement	enc	2887:25:92557:92559	1238278	7	True				
ANR	1238320	Statement	","	2887:28:92560:92560	1238278	8	True				
ANR	1238321	Statement	data	2887:30:92562:92565	1238278	9	True				
ANR	1238322	Statement	","	2887:34:92566:92566	1238278	10	True				
ANR	1238323	Statement	style	2887:36:92568:92572	1238278	11	True				
ANR	1238324	Statement	","	2887:41:92573:92573	1238278	12	True				
ANR	1238325	Statement	parent	2887:43:92575:92580	1238278	13	True				
ANR	1238326	Statement	","	2887:49:92581:92581	1238278	14	True				
ANR	1238327	Statement	0	2887:51:92583:92583	1238278	15	True				
ANR	1238328	Statement	TSRMLS_CC	2887:53:92585:92593	1238278	16	True				
ANR	1238329	Statement	)	2887:62:92594:92594	1238278	17	True				
ANR	1238330	ExpressionStatement		2887:63:92595:92595	1238278	18	True				
ANR	1238331	ReturnStatement	return ret ;	2893:1:92696:92706	1238278	19	True				
ANR	1238332	Identifier	ret		1238278	0					
ANR	1238333	ReturnType	static xmlNodePtr		1238278	1					
ANR	1238334	Identifier	guess_xml_convert		1238278	2					
ANR	1238335	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1238278	3					
ANR	1238336	Parameter	encodeTypePtr type	2877:36:92328:92345	1238278	0	True				
ANR	1238337	ParameterType	encodeTypePtr		1238278	0					
ANR	1238338	Identifier	type		1238278	1					
ANR	1238339	Parameter	zval * data	2877:56:92348:92357	1238278	1	True				
ANR	1238340	ParameterType	zval *		1238278	0					
ANR	1238341	Identifier	data		1238278	1					
ANR	1238342	Parameter	int style	2877:68:92360:92368	1238278	2	True				
ANR	1238343	ParameterType	int		1238278	0					
ANR	1238344	Identifier	style		1238278	1					
ANR	1238345	Parameter	xmlNodePtr parent TSRMLS_DC	2877:79:92371:92397	1238278	3	True				
ANR	1238346	ParameterType	xmlNodePtr parent		1238278	0					
ANR	1238347	Identifier	TSRMLS_DC		1238278	1					
ANR	1238348	CFGEntryNode	ENTRY		1238278		True				
ANR	1238349	CFGExitNode	EXIT		1238278		True				
ANR	1238350	Symbol	ret		1238278						
ANR	1238351	Symbol	data		1238278						
ANR	1238352	Symbol	IS_NULL		1238278						
ANR	1238353	Symbol	data -> type		1238278						
ANR	1238354	Symbol	style		1238278						
ANR	1238355	Symbol	enc		1238278						
ANR	1238356	Symbol	get_conversion		1238278						
ANR	1238357	Symbol	type		1238278						
ANR	1238358	Symbol	TSRMLS_DC		1238278						
ANR	1238359	Symbol	* data		1238278						
ANR	1238360	Function	guess_zval_convert	2896:0:92711:95065							
ANR	1238361	FunctionDef	"guess_zval_convert (encodeTypePtr type , xmlNodePtr data TSRMLS_DC)"		1238360	0					
ANR	1238362	CompoundStatement		2897:0:92790:95065	1238360	0					
ANR	1238363	IdentifierDeclStatement	encodePtr enc = NULL ;	2898:1:92793:92813	1238360	0	True				
ANR	1238364	IdentifierDecl	enc = NULL		1238360	0					
ANR	1238365	IdentifierDeclType	encodePtr		1238360	0					
ANR	1238366	Identifier	enc		1238360	1					
ANR	1238367	AssignmentExpression	enc = NULL		1238360	2		=			
ANR	1238368	Identifier	NULL		1238360	0					
ANR	1238369	Identifier	NULL		1238360	1					
ANR	1238370	IdentifierDeclStatement	xmlAttrPtr tmpattr ;	2899:1:92816:92834	1238360	1	True				
ANR	1238371	IdentifierDecl	tmpattr		1238360	0					
ANR	1238372	IdentifierDeclType	xmlAttrPtr		1238360	0					
ANR	1238373	Identifier	tmpattr		1238360	1					
ANR	1238374	IdentifierDeclStatement	xmlChar * type_name = NULL ;	2900:1:92837:92862	1238360	2	True				
ANR	1238375	IdentifierDecl	* type_name = NULL		1238360	0					
ANR	1238376	IdentifierDeclType	xmlChar *		1238360	0					
ANR	1238377	Identifier	type_name		1238360	1					
ANR	1238378	AssignmentExpression	* type_name = NULL		1238360	2		=			
ANR	1238379	Identifier	NULL		1238360	0					
ANR	1238380	Identifier	NULL		1238360	1					
ANR	1238381	IdentifierDeclStatement	zval * ret ;	2901:1:92865:92874	1238360	3	True				
ANR	1238382	IdentifierDecl	* ret		1238360	0					
ANR	1238383	IdentifierDeclType	zval *		1238360	0					
ANR	1238384	Identifier	ret		1238360	1					
ANR	1238385	ExpressionStatement	data = check_and_resolve_href ( data )	2903:1:92878:92913	1238360	4	True				
ANR	1238386	AssignmentExpression	data = check_and_resolve_href ( data )		1238360	0		=			
ANR	1238387	Identifier	data		1238360	0					
ANR	1238388	CallExpression	check_and_resolve_href ( data )		1238360	1					
ANR	1238389	Callee	check_and_resolve_href		1238360	0					
ANR	1238390	Identifier	check_and_resolve_href		1238360	0					
ANR	1238391	ArgumentList	data		1238360	1					
ANR	1238392	Argument	data		1238360	0					
ANR	1238393	Identifier	data		1238360	0					
ANR	1238394	IfStatement	if ( data == NULL )		1238360	5					
ANR	1238395	Condition	data == NULL	2905:5:92921:92932	1238360	0	True				
ANR	1238396	EqualityExpression	data == NULL		1238360	0		==			
ANR	1238397	Identifier	data		1238360	0					
ANR	1238398	Identifier	NULL		1238360	1					
ANR	1238399	CompoundStatement		9:19:144:144	1238360	1					
ANR	1238400	ExpressionStatement	enc = get_conversion ( IS_NULL )	2906:2:92939:92968	1238360	0	True				
ANR	1238401	AssignmentExpression	enc = get_conversion ( IS_NULL )		1238360	0		=			
ANR	1238402	Identifier	enc		1238360	0					
ANR	1238403	CallExpression	get_conversion ( IS_NULL )		1238360	1					
ANR	1238404	Callee	get_conversion		1238360	0					
ANR	1238405	Identifier	get_conversion		1238360	0					
ANR	1238406	ArgumentList	IS_NULL		1238360	1					
ANR	1238407	Argument	IS_NULL		1238360	0					
ANR	1238408	Identifier	IS_NULL		1238360	0					
ANR	1238409	ElseStatement	else		1238360	0					
ANR	1238410	IfStatement	"if ( data -> properties && get_attribute_ex ( data -> properties , ""nil"" , XSI_NAMESPACE ) )"		1238360	0					
ANR	1238411	Condition	"data -> properties && get_attribute_ex ( data -> properties , ""nil"" , XSI_NAMESPACE )"	2907:12:92982:93057	1238360	0	True				
ANR	1238412	AndExpression	"data -> properties && get_attribute_ex ( data -> properties , ""nil"" , XSI_NAMESPACE )"		1238360	0		&&			
ANR	1238413	PtrMemberAccess	data -> properties		1238360	0					
ANR	1238414	Identifier	data		1238360	0					
ANR	1238415	Identifier	properties		1238360	1					
ANR	1238416	CallExpression	"get_attribute_ex ( data -> properties , ""nil"" , XSI_NAMESPACE )"		1238360	1					
ANR	1238417	Callee	get_attribute_ex		1238360	0					
ANR	1238418	Identifier	get_attribute_ex		1238360	0					
ANR	1238419	ArgumentList	data -> properties		1238360	1					
ANR	1238420	Argument	data -> properties		1238360	0					
ANR	1238421	PtrMemberAccess	data -> properties		1238360	0					
ANR	1238422	Identifier	data		1238360	0					
ANR	1238423	Identifier	properties		1238360	1					
ANR	1238424	Argument	"""nil"""		1238360	1					
ANR	1238425	PrimaryExpression	"""nil"""		1238360	0					
ANR	1238426	Argument	XSI_NAMESPACE		1238360	2					
ANR	1238427	Identifier	XSI_NAMESPACE		1238360	0					
ANR	1238428	CompoundStatement		11:90:269:269	1238360	1					
ANR	1238429	ExpressionStatement	enc = get_conversion ( IS_NULL )	2908:2:93064:93093	1238360	0	True				
ANR	1238430	AssignmentExpression	enc = get_conversion ( IS_NULL )		1238360	0		=			
ANR	1238431	Identifier	enc		1238360	0					
ANR	1238432	CallExpression	get_conversion ( IS_NULL )		1238360	1					
ANR	1238433	Callee	get_conversion		1238360	0					
ANR	1238434	Identifier	get_conversion		1238360	0					
ANR	1238435	ArgumentList	IS_NULL		1238360	1					
ANR	1238436	Argument	IS_NULL		1238360	0					
ANR	1238437	Identifier	IS_NULL		1238360	0					
ANR	1238438	ElseStatement	else		1238360	0					
ANR	1238439	CompoundStatement		13:8:312:312	1238360	0					
ANR	1238440	ExpressionStatement	"tmpattr = get_attribute_ex ( data -> properties , ""type"" , XSI_NAMESPACE )"	2910:2:93107:93173	1238360	0	True				
ANR	1238441	AssignmentExpression	"tmpattr = get_attribute_ex ( data -> properties , ""type"" , XSI_NAMESPACE )"		1238360	0		=			
ANR	1238442	Identifier	tmpattr		1238360	0					
ANR	1238443	CallExpression	"get_attribute_ex ( data -> properties , ""type"" , XSI_NAMESPACE )"		1238360	1					
ANR	1238444	Callee	get_attribute_ex		1238360	0					
ANR	1238445	Identifier	get_attribute_ex		1238360	0					
ANR	1238446	ArgumentList	data -> properties		1238360	1					
ANR	1238447	Argument	data -> properties		1238360	0					
ANR	1238448	PtrMemberAccess	data -> properties		1238360	0					
ANR	1238449	Identifier	data		1238360	0					
ANR	1238450	Identifier	properties		1238360	1					
ANR	1238451	Argument	"""type"""		1238360	1					
ANR	1238452	PrimaryExpression	"""type"""		1238360	0					
ANR	1238453	Argument	XSI_NAMESPACE		1238360	2					
ANR	1238454	Identifier	XSI_NAMESPACE		1238360	0					
ANR	1238455	IfStatement	if ( tmpattr != NULL )		1238360	1					
ANR	1238456	Condition	tmpattr != NULL	2911:6:93181:93195	1238360	0	True				
ANR	1238457	EqualityExpression	tmpattr != NULL		1238360	0		!=			
ANR	1238458	Identifier	tmpattr		1238360	0					
ANR	1238459	Identifier	NULL		1238360	1					
ANR	1238460	CompoundStatement		15:23:407:407	1238360	1					
ANR	1238461	ExpressionStatement	type_name = tmpattr -> children -> content	2912:4:93204:93242	1238360	0	True				
ANR	1238462	AssignmentExpression	type_name = tmpattr -> children -> content		1238360	0		=			
ANR	1238463	Identifier	type_name		1238360	0					
ANR	1238464	PtrMemberAccess	tmpattr -> children -> content		1238360	1					
ANR	1238465	PtrMemberAccess	tmpattr -> children		1238360	0					
ANR	1238466	Identifier	tmpattr		1238360	0					
ANR	1238467	Identifier	children		1238360	1					
ANR	1238468	Identifier	content		1238360	1					
ANR	1238469	ExpressionStatement	"enc = get_encoder_from_prefix ( SOAP_GLOBAL ( sdl ) , data , tmpattr -> children -> content )"	2913:3:93247:93328	1238360	1	True				
ANR	1238470	AssignmentExpression	"enc = get_encoder_from_prefix ( SOAP_GLOBAL ( sdl ) , data , tmpattr -> children -> content )"		1238360	0		=			
ANR	1238471	Identifier	enc		1238360	0					
ANR	1238472	CallExpression	"get_encoder_from_prefix ( SOAP_GLOBAL ( sdl ) , data , tmpattr -> children -> content )"		1238360	1					
ANR	1238473	Callee	get_encoder_from_prefix		1238360	0					
ANR	1238474	Identifier	get_encoder_from_prefix		1238360	0					
ANR	1238475	ArgumentList	SOAP_GLOBAL ( sdl )		1238360	1					
ANR	1238476	Argument	SOAP_GLOBAL ( sdl )		1238360	0					
ANR	1238477	CallExpression	SOAP_GLOBAL ( sdl )		1238360	0					
ANR	1238478	Callee	SOAP_GLOBAL		1238360	0					
ANR	1238479	Identifier	SOAP_GLOBAL		1238360	0					
ANR	1238480	ArgumentList	sdl		1238360	1					
ANR	1238481	Argument	sdl		1238360	0					
ANR	1238482	Identifier	sdl		1238360	0					
ANR	1238483	Argument	data		1238360	1					
ANR	1238484	Identifier	data		1238360	0					
ANR	1238485	Argument	tmpattr -> children -> content		1238360	2					
ANR	1238486	PtrMemberAccess	tmpattr -> children -> content		1238360	0					
ANR	1238487	PtrMemberAccess	tmpattr -> children		1238360	0					
ANR	1238488	Identifier	tmpattr		1238360	0					
ANR	1238489	Identifier	children		1238360	1					
ANR	1238490	Identifier	content		1238360	1					
ANR	1238491	IfStatement	if ( enc && type == & enc -> details )		1238360	2					
ANR	1238492	Condition	enc && type == & enc -> details	2914:7:93337:93364	1238360	0	True				
ANR	1238493	AndExpression	enc && type == & enc -> details		1238360	0		&&			
ANR	1238494	Identifier	enc		1238360	0					
ANR	1238495	EqualityExpression	type == & enc -> details		1238360	1		==			
ANR	1238496	Identifier	type		1238360	0					
ANR	1238497	UnaryOperationExpression	& enc -> details		1238360	1					
ANR	1238498	UnaryOperator	&		1238360	0					
ANR	1238499	PtrMemberAccess	enc -> details		1238360	1					
ANR	1238500	Identifier	enc		1238360	0					
ANR	1238501	Identifier	details		1238360	1					
ANR	1238502	CompoundStatement		18:37:576:576	1238360	1					
ANR	1238503	ExpressionStatement	enc = NULL	2915:4:93373:93383	1238360	0	True				
ANR	1238504	AssignmentExpression	enc = NULL		1238360	0		=			
ANR	1238505	Identifier	enc		1238360	0					
ANR	1238506	Identifier	NULL		1238360	1					
ANR	1238507	IfStatement	if ( enc != NULL )		1238360	3					
ANR	1238508	Condition	enc != NULL	2917:7:93397:93407	1238360	0	True				
ANR	1238509	EqualityExpression	enc != NULL		1238360	0		!=			
ANR	1238510	Identifier	enc		1238360	0					
ANR	1238511	Identifier	NULL		1238360	1					
ANR	1238512	CompoundStatement		22:5:626:645	1238360	1					
ANR	1238513	IdentifierDeclStatement	encodePtr tmp = enc ;	2918:5:93417:93436	1238360	0	True				
ANR	1238514	IdentifierDecl	tmp = enc		1238360	0					
ANR	1238515	IdentifierDeclType	encodePtr		1238360	0					
ANR	1238516	Identifier	tmp		1238360	1					
ANR	1238517	AssignmentExpression	tmp = enc		1238360	2		=			
ANR	1238518	Identifier	enc		1238360	0					
ANR	1238519	Identifier	enc		1238360	1					
ANR	1238520	WhileStatement	while ( tmp && tmp -> details . sdl_type != NULL && tmp -> details . sdl_type -> kind != XSD_TYPEKIND_COMPLEX )		1238360	1					
ANR	1238521	Condition	tmp && tmp -> details . sdl_type != NULL && tmp -> details . sdl_type -> kind != XSD_TYPEKIND_COMPLEX	2919:12:93450:93564	1238360	0	True				
ANR	1238522	AndExpression	tmp && tmp -> details . sdl_type != NULL && tmp -> details . sdl_type -> kind != XSD_TYPEKIND_COMPLEX		1238360	0		&&			
ANR	1238523	Identifier	tmp		1238360	0					
ANR	1238524	AndExpression	tmp -> details . sdl_type != NULL && tmp -> details . sdl_type -> kind != XSD_TYPEKIND_COMPLEX		1238360	1		&&			
ANR	1238525	EqualityExpression	tmp -> details . sdl_type != NULL		1238360	0		!=			
ANR	1238526	MemberAccess	tmp -> details . sdl_type		1238360	0					
ANR	1238527	PtrMemberAccess	tmp -> details		1238360	0					
ANR	1238528	Identifier	tmp		1238360	0					
ANR	1238529	Identifier	details		1238360	1					
ANR	1238530	Identifier	sdl_type		1238360	1					
ANR	1238531	Identifier	NULL		1238360	1					
ANR	1238532	EqualityExpression	tmp -> details . sdl_type -> kind != XSD_TYPEKIND_COMPLEX		1238360	1		!=			
ANR	1238533	PtrMemberAccess	tmp -> details . sdl_type -> kind		1238360	0					
ANR	1238534	MemberAccess	tmp -> details . sdl_type		1238360	0					
ANR	1238535	PtrMemberAccess	tmp -> details		1238360	0					
ANR	1238536	Identifier	tmp		1238360	0					
ANR	1238537	Identifier	details		1238360	1					
ANR	1238538	Identifier	sdl_type		1238360	1					
ANR	1238539	Identifier	kind		1238360	1					
ANR	1238540	Identifier	XSD_TYPEKIND_COMPLEX		1238360	1					
ANR	1238541	CompoundStatement		25:65:776:776	1238360	1					
ANR	1238542	IfStatement	if ( enc == tmp -> details . sdl_type -> encode || tmp == tmp -> details . sdl_type -> encode )		1238360	0					
ANR	1238543	Condition	enc == tmp -> details . sdl_type -> encode || tmp == tmp -> details . sdl_type -> encode	2922:11:93580:93666	1238360	0	True				
ANR	1238544	OrExpression	enc == tmp -> details . sdl_type -> encode || tmp == tmp -> details . sdl_type -> encode		1238360	0		||			
ANR	1238545	EqualityExpression	enc == tmp -> details . sdl_type -> encode		1238360	0		==			
ANR	1238546	Identifier	enc		1238360	0					
ANR	1238547	PtrMemberAccess	tmp -> details . sdl_type -> encode		1238360	1					
ANR	1238548	MemberAccess	tmp -> details . sdl_type		1238360	0					
ANR	1238549	PtrMemberAccess	tmp -> details		1238360	0					
ANR	1238550	Identifier	tmp		1238360	0					
ANR	1238551	Identifier	details		1238360	1					
ANR	1238552	Identifier	sdl_type		1238360	1					
ANR	1238553	Identifier	encode		1238360	1					
ANR	1238554	EqualityExpression	tmp == tmp -> details . sdl_type -> encode		1238360	1		==			
ANR	1238555	Identifier	tmp		1238360	0					
ANR	1238556	PtrMemberAccess	tmp -> details . sdl_type -> encode		1238360	1					
ANR	1238557	MemberAccess	tmp -> details . sdl_type		1238360	0					
ANR	1238558	PtrMemberAccess	tmp -> details		1238360	0					
ANR	1238559	Identifier	tmp		1238360	0					
ANR	1238560	Identifier	details		1238360	1					
ANR	1238561	Identifier	sdl_type		1238360	1					
ANR	1238562	Identifier	encode		1238360	1					
ANR	1238563	CompoundStatement		27:49:878:878	1238360	1					
ANR	1238564	ExpressionStatement	enc = NULL	2924:8:93679:93689	1238360	0	True				
ANR	1238565	AssignmentExpression	enc = NULL		1238360	0		=			
ANR	1238566	Identifier	enc		1238360	0					
ANR	1238567	Identifier	NULL		1238360	1					
ANR	1238568	BreakStatement	break ;	2925:8:93699:93704	1238360	1	True				
ANR	1238569	ExpressionStatement	tmp = tmp -> details . sdl_type -> encode	2927:7:93722:93757	1238360	1	True				
ANR	1238570	AssignmentExpression	tmp = tmp -> details . sdl_type -> encode		1238360	0		=			
ANR	1238571	Identifier	tmp		1238360	0					
ANR	1238572	PtrMemberAccess	tmp -> details . sdl_type -> encode		1238360	1					
ANR	1238573	MemberAccess	tmp -> details . sdl_type		1238360	0					
ANR	1238574	PtrMemberAccess	tmp -> details		1238360	0					
ANR	1238575	Identifier	tmp		1238360	0					
ANR	1238576	Identifier	details		1238360	1					
ANR	1238577	Identifier	sdl_type		1238360	1					
ANR	1238578	Identifier	encode		1238360	1					
ANR	1238579	IfStatement	if ( enc == NULL )		1238360	2					
ANR	1238580	Condition	enc == NULL	2932:6:93782:93792	1238360	0	True				
ANR	1238581	EqualityExpression	enc == NULL		1238360	0		==			
ANR	1238582	Identifier	enc		1238360	0					
ANR	1238583	Identifier	NULL		1238360	1					
ANR	1238584	CompoundStatement		39:3:1113:1128	1238360	1					
ANR	1238585	IdentifierDeclStatement	xmlNodePtr trav ;	2935:3:93904:93919	1238360	0	True				
ANR	1238586	IdentifierDecl	trav		1238360	0					
ANR	1238587	IdentifierDeclType	xmlNodePtr		1238360	0					
ANR	1238588	Identifier	trav		1238360	1					
ANR	1238589	IfStatement	"if ( get_attribute ( data -> properties , ""arrayType"" ) || get_attribute ( data -> properties , ""itemType"" ) || get_attribute ( data -> properties , ""arraySize"" ) )"		1238360	1					
ANR	1238590	Condition	"get_attribute ( data -> properties , ""arrayType"" ) || get_attribute ( data -> properties , ""itemType"" ) || get_attribute ( data -> properties , ""arraySize"" )"	2937:7:93929:94081	1238360	0	True				
ANR	1238591	OrExpression	"get_attribute ( data -> properties , ""arrayType"" ) || get_attribute ( data -> properties , ""itemType"" ) || get_attribute ( data -> properties , ""arraySize"" )"		1238360	0		||			
ANR	1238592	CallExpression	"get_attribute ( data -> properties , ""arrayType"" )"		1238360	0					
ANR	1238593	Callee	get_attribute		1238360	0					
ANR	1238594	Identifier	get_attribute		1238360	0					
ANR	1238595	ArgumentList	data -> properties		1238360	1					
ANR	1238596	Argument	data -> properties		1238360	0					
ANR	1238597	PtrMemberAccess	data -> properties		1238360	0					
ANR	1238598	Identifier	data		1238360	0					
ANR	1238599	Identifier	properties		1238360	1					
ANR	1238600	Argument	"""arrayType"""		1238360	1					
ANR	1238601	PrimaryExpression	"""arrayType"""		1238360	0					
ANR	1238602	OrExpression	"get_attribute ( data -> properties , ""itemType"" ) || get_attribute ( data -> properties , ""arraySize"" )"		1238360	1		||			
ANR	1238603	CallExpression	"get_attribute ( data -> properties , ""itemType"" )"		1238360	0					
ANR	1238604	Callee	get_attribute		1238360	0					
ANR	1238605	Identifier	get_attribute		1238360	0					
ANR	1238606	ArgumentList	data -> properties		1238360	1					
ANR	1238607	Argument	data -> properties		1238360	0					
ANR	1238608	PtrMemberAccess	data -> properties		1238360	0					
ANR	1238609	Identifier	data		1238360	0					
ANR	1238610	Identifier	properties		1238360	1					
ANR	1238611	Argument	"""itemType"""		1238360	1					
ANR	1238612	PrimaryExpression	"""itemType"""		1238360	0					
ANR	1238613	CallExpression	"get_attribute ( data -> properties , ""arraySize"" )"		1238360	1					
ANR	1238614	Callee	get_attribute		1238360	0					
ANR	1238615	Identifier	get_attribute		1238360	0					
ANR	1238616	ArgumentList	data -> properties		1238360	1					
ANR	1238617	Argument	data -> properties		1238360	0					
ANR	1238618	PtrMemberAccess	data -> properties		1238360	0					
ANR	1238619	Identifier	data		1238360	0					
ANR	1238620	Identifier	properties		1238360	1					
ANR	1238621	Argument	"""arraySize"""		1238360	1					
ANR	1238622	PrimaryExpression	"""arraySize"""		1238360	0					
ANR	1238623	CompoundStatement		43:53:1293:1293	1238360	1					
ANR	1238624	ExpressionStatement	enc = get_conversion ( SOAP_ENC_ARRAY )	2940:4:94090:94126	1238360	0	True				
ANR	1238625	AssignmentExpression	enc = get_conversion ( SOAP_ENC_ARRAY )		1238360	0		=			
ANR	1238626	Identifier	enc		1238360	0					
ANR	1238627	CallExpression	get_conversion ( SOAP_ENC_ARRAY )		1238360	1					
ANR	1238628	Callee	get_conversion		1238360	0					
ANR	1238629	Identifier	get_conversion		1238360	0					
ANR	1238630	ArgumentList	SOAP_ENC_ARRAY		1238360	1					
ANR	1238631	Argument	SOAP_ENC_ARRAY		1238360	0					
ANR	1238632	Identifier	SOAP_ENC_ARRAY		1238360	0					
ANR	1238633	ElseStatement	else		1238360	0					
ANR	1238634	CompoundStatement		45:10:1347:1347	1238360	0					
ANR	1238635	ExpressionStatement	enc = get_conversion ( XSD_STRING )	2942:4:94144:94176	1238360	0	True				
ANR	1238636	AssignmentExpression	enc = get_conversion ( XSD_STRING )		1238360	0		=			
ANR	1238637	Identifier	enc		1238360	0					
ANR	1238638	CallExpression	get_conversion ( XSD_STRING )		1238360	1					
ANR	1238639	Callee	get_conversion		1238360	0					
ANR	1238640	Identifier	get_conversion		1238360	0					
ANR	1238641	ArgumentList	XSD_STRING		1238360	1					
ANR	1238642	Argument	XSD_STRING		1238360	0					
ANR	1238643	Identifier	XSD_STRING		1238360	0					
ANR	1238644	ExpressionStatement	trav = data -> children	2943:4:94182:94203	1238360	1	True				
ANR	1238645	AssignmentExpression	trav = data -> children		1238360	0		=			
ANR	1238646	Identifier	trav		1238360	0					
ANR	1238647	PtrMemberAccess	data -> children		1238360	1					
ANR	1238648	Identifier	data		1238360	0					
ANR	1238649	Identifier	children		1238360	1					
ANR	1238650	WhileStatement	while ( trav != NULL )		1238360	2					
ANR	1238651	Condition	trav != NULL	2944:11:94216:94227	1238360	0	True				
ANR	1238652	EqualityExpression	trav != NULL		1238360	0		!=			
ANR	1238653	Identifier	trav		1238360	0					
ANR	1238654	Identifier	NULL		1238360	1					
ANR	1238655	CompoundStatement		48:25:1439:1439	1238360	1					
ANR	1238656	IfStatement	if ( trav -> type == XML_ELEMENT_NODE )		1238360	0					
ANR	1238657	Condition	trav -> type == XML_ELEMENT_NODE	2945:9:94241:94270	1238360	0	True				
ANR	1238658	EqualityExpression	trav -> type == XML_ELEMENT_NODE		1238360	0		==			
ANR	1238659	PtrMemberAccess	trav -> type		1238360	0					
ANR	1238660	Identifier	trav		1238360	0					
ANR	1238661	Identifier	type		1238360	1					
ANR	1238662	Identifier	XML_ELEMENT_NODE		1238360	1					
ANR	1238663	CompoundStatement		49:41:1482:1482	1238360	1					
ANR	1238664	ExpressionStatement	enc = get_conversion ( SOAP_ENC_OBJECT )	2946:6:94281:94318	1238360	0	True				
ANR	1238665	AssignmentExpression	enc = get_conversion ( SOAP_ENC_OBJECT )		1238360	0		=			
ANR	1238666	Identifier	enc		1238360	0					
ANR	1238667	CallExpression	get_conversion ( SOAP_ENC_OBJECT )		1238360	1					
ANR	1238668	Callee	get_conversion		1238360	0					
ANR	1238669	Identifier	get_conversion		1238360	0					
ANR	1238670	ArgumentList	SOAP_ENC_OBJECT		1238360	1					
ANR	1238671	Argument	SOAP_ENC_OBJECT		1238360	0					
ANR	1238672	Identifier	SOAP_ENC_OBJECT		1238360	0					
ANR	1238673	BreakStatement	break ;	2947:6:94326:94331	1238360	1	True				
ANR	1238674	ExpressionStatement	trav = trav -> next	2949:5:94345:94362	1238360	1	True				
ANR	1238675	AssignmentExpression	trav = trav -> next		1238360	0		=			
ANR	1238676	Identifier	trav		1238360	0					
ANR	1238677	PtrMemberAccess	trav -> next		1238360	1					
ANR	1238678	Identifier	trav		1238360	0					
ANR	1238679	Identifier	next		1238360	1					
ANR	1238680	Statement	ret	2954:1:94383:94385	1238360	6	True				
ANR	1238681	Statement	=	2954:5:94387:94387	1238360	7	True				
ANR	1238682	Statement	master_to_zval_int	2954:7:94389:94406	1238360	8	True				
ANR	1238683	Statement	(	2954:25:94407:94407	1238360	9	True				
ANR	1238684	Statement	enc	2954:26:94408:94410	1238360	10	True				
ANR	1238685	Statement	","	2954:29:94411:94411	1238360	11	True				
ANR	1238686	Statement	data	2954:31:94413:94416	1238360	12	True				
ANR	1238687	Statement	TSRMLS_CC	2954:36:94418:94426	1238360	13	True				
ANR	1238688	Statement	)	2954:45:94427:94427	1238360	14	True				
ANR	1238689	ExpressionStatement		2954:46:94428:94428	1238360	15	True				
ANR	1238690	IfStatement	if ( SOAP_GLOBAL ( sdl ) && type_name && enc -> details . sdl_type )		1238360	16					
ANR	1238691	Condition	SOAP_GLOBAL ( sdl ) && type_name && enc -> details . sdl_type	2955:5:94435:94488	1238360	0	True				
ANR	1238692	AndExpression	SOAP_GLOBAL ( sdl ) && type_name && enc -> details . sdl_type		1238360	0		&&			
ANR	1238693	CallExpression	SOAP_GLOBAL ( sdl )		1238360	0					
ANR	1238694	Callee	SOAP_GLOBAL		1238360	0					
ANR	1238695	Identifier	SOAP_GLOBAL		1238360	0					
ANR	1238696	ArgumentList	sdl		1238360	1					
ANR	1238697	Argument	sdl		1238360	0					
ANR	1238698	Identifier	sdl		1238360	0					
ANR	1238699	AndExpression	type_name && enc -> details . sdl_type		1238360	1		&&			
ANR	1238700	Identifier	type_name		1238360	0					
ANR	1238701	MemberAccess	enc -> details . sdl_type		1238360	1					
ANR	1238702	PtrMemberAccess	enc -> details		1238360	0					
ANR	1238703	Identifier	enc		1238360	0					
ANR	1238704	Identifier	details		1238360	1					
ANR	1238705	Identifier	sdl_type		1238360	1					
ANR	1238706	CompoundStatement		62:2:1742:1756	1238360	1					
ANR	1238707	IdentifierDeclStatement	zval * soapvar ;	2956:2:94495:94508	1238360	0	True				
ANR	1238708	IdentifierDecl	* soapvar		1238360	0					
ANR	1238709	IdentifierDeclType	zval *		1238360	0					
ANR	1238710	Identifier	soapvar		1238360	1					
ANR	1238711	IdentifierDeclStatement	"char * ns , * cptype ;"	2957:2:94512:94529	1238360	1	True				
ANR	1238712	IdentifierDecl	* ns		1238360	0					
ANR	1238713	IdentifierDeclType	char *		1238360	0					
ANR	1238714	Identifier	ns		1238360	1					
ANR	1238715	IdentifierDecl	* cptype		1238360	1					
ANR	1238716	IdentifierDeclType	char *		1238360	0					
ANR	1238717	Identifier	cptype		1238360	1					
ANR	1238718	IdentifierDeclStatement	xmlNsPtr nsptr ;	2958:2:94533:94547	1238360	2	True				
ANR	1238719	IdentifierDecl	nsptr		1238360	0					
ANR	1238720	IdentifierDeclType	xmlNsPtr		1238360	0					
ANR	1238721	Identifier	nsptr		1238360	1					
ANR	1238722	ExpressionStatement	MAKE_STD_ZVAL ( soapvar )	2960:2:94552:94574	1238360	3	True				
ANR	1238723	CallExpression	MAKE_STD_ZVAL ( soapvar )		1238360	0					
ANR	1238724	Callee	MAKE_STD_ZVAL		1238360	0					
ANR	1238725	Identifier	MAKE_STD_ZVAL		1238360	0					
ANR	1238726	ArgumentList	soapvar		1238360	1					
ANR	1238727	Argument	soapvar		1238360	0					
ANR	1238728	Identifier	soapvar		1238360	0					
ANR	1238729	ExpressionStatement	"object_init_ex ( soapvar , soap_var_class_entry )"	2961:2:94578:94623	1238360	4	True				
ANR	1238730	CallExpression	"object_init_ex ( soapvar , soap_var_class_entry )"		1238360	0					
ANR	1238731	Callee	object_init_ex		1238360	0					
ANR	1238732	Identifier	object_init_ex		1238360	0					
ANR	1238733	ArgumentList	soapvar		1238360	1					
ANR	1238734	Argument	soapvar		1238360	0					
ANR	1238735	Identifier	soapvar		1238360	0					
ANR	1238736	Argument	soap_var_class_entry		1238360	1					
ANR	1238737	Identifier	soap_var_class_entry		1238360	0					
ANR	1238738	ExpressionStatement	"add_property_long ( soapvar , ""enc_type"" , enc -> details . type )"	2962:2:94627:94684	1238360	5	True				
ANR	1238739	CallExpression	"add_property_long ( soapvar , ""enc_type"" , enc -> details . type )"		1238360	0					
ANR	1238740	Callee	add_property_long		1238360	0					
ANR	1238741	Identifier	add_property_long		1238360	0					
ANR	1238742	ArgumentList	soapvar		1238360	1					
ANR	1238743	Argument	soapvar		1238360	0					
ANR	1238744	Identifier	soapvar		1238360	0					
ANR	1238745	Argument	"""enc_type"""		1238360	1					
ANR	1238746	PrimaryExpression	"""enc_type"""		1238360	0					
ANR	1238747	Argument	enc -> details . type		1238360	2					
ANR	1238748	MemberAccess	enc -> details . type		1238360	0					
ANR	1238749	PtrMemberAccess	enc -> details		1238360	0					
ANR	1238750	Identifier	enc		1238360	0					
ANR	1238751	Identifier	details		1238360	1					
ANR	1238752	Identifier	type		1238360	1					
ANR	1238753	ExpressionStatement	Z_DELREF_P ( ret )	2963:2:94688:94703	1238360	6	True				
ANR	1238754	CallExpression	Z_DELREF_P ( ret )		1238360	0					
ANR	1238755	Callee	Z_DELREF_P		1238360	0					
ANR	1238756	Identifier	Z_DELREF_P		1238360	0					
ANR	1238757	ArgumentList	ret		1238360	1					
ANR	1238758	Argument	ret		1238360	0					
ANR	1238759	Identifier	ret		1238360	0					
ANR	1238760	ExpressionStatement	"add_property_zval ( soapvar , ""enc_value"" , ret )"	2964:2:94707:94751	1238360	7	True				
ANR	1238761	CallExpression	"add_property_zval ( soapvar , ""enc_value"" , ret )"		1238360	0					
ANR	1238762	Callee	add_property_zval		1238360	0					
ANR	1238763	Identifier	add_property_zval		1238360	0					
ANR	1238764	ArgumentList	soapvar		1238360	1					
ANR	1238765	Argument	soapvar		1238360	0					
ANR	1238766	Identifier	soapvar		1238360	0					
ANR	1238767	Argument	"""enc_value"""		1238360	1					
ANR	1238768	PrimaryExpression	"""enc_value"""		1238360	0					
ANR	1238769	Argument	ret		1238360	2					
ANR	1238770	Identifier	ret		1238360	0					
ANR	1238771	ExpressionStatement	"parse_namespace ( type_name , & cptype , & ns )"	2965:2:94755:94795	1238360	8	True				
ANR	1238772	CallExpression	"parse_namespace ( type_name , & cptype , & ns )"		1238360	0					
ANR	1238773	Callee	parse_namespace		1238360	0					
ANR	1238774	Identifier	parse_namespace		1238360	0					
ANR	1238775	ArgumentList	type_name		1238360	1					
ANR	1238776	Argument	type_name		1238360	0					
ANR	1238777	Identifier	type_name		1238360	0					
ANR	1238778	Argument	& cptype		1238360	1					
ANR	1238779	UnaryOperationExpression	& cptype		1238360	0					
ANR	1238780	UnaryOperator	&		1238360	0					
ANR	1238781	Identifier	cptype		1238360	1					
ANR	1238782	Argument	& ns		1238360	2					
ANR	1238783	UnaryOperationExpression	& ns		1238360	0					
ANR	1238784	UnaryOperator	&		1238360	0					
ANR	1238785	Identifier	ns		1238360	1					
ANR	1238786	ExpressionStatement	"nsptr = xmlSearchNs ( data -> doc , data , BAD_CAST ( ns ) )"	2966:2:94799:94849	1238360	9	True				
ANR	1238787	AssignmentExpression	"nsptr = xmlSearchNs ( data -> doc , data , BAD_CAST ( ns ) )"		1238360	0		=			
ANR	1238788	Identifier	nsptr		1238360	0					
ANR	1238789	CallExpression	"xmlSearchNs ( data -> doc , data , BAD_CAST ( ns ) )"		1238360	1					
ANR	1238790	Callee	xmlSearchNs		1238360	0					
ANR	1238791	Identifier	xmlSearchNs		1238360	0					
ANR	1238792	ArgumentList	data -> doc		1238360	1					
ANR	1238793	Argument	data -> doc		1238360	0					
ANR	1238794	PtrMemberAccess	data -> doc		1238360	0					
ANR	1238795	Identifier	data		1238360	0					
ANR	1238796	Identifier	doc		1238360	1					
ANR	1238797	Argument	data		1238360	1					
ANR	1238798	Identifier	data		1238360	0					
ANR	1238799	Argument	BAD_CAST ( ns )		1238360	2					
ANR	1238800	CallExpression	BAD_CAST ( ns )		1238360	0					
ANR	1238801	Callee	BAD_CAST		1238360	0					
ANR	1238802	Identifier	BAD_CAST		1238360	0					
ANR	1238803	ArgumentList	ns		1238360	1					
ANR	1238804	Argument	ns		1238360	0					
ANR	1238805	Identifier	ns		1238360	0					
ANR	1238806	ExpressionStatement	"add_property_string ( soapvar , ""enc_stype"" , cptype , 1 )"	2967:2:94853:94905	1238360	10	True				
ANR	1238807	CallExpression	"add_property_string ( soapvar , ""enc_stype"" , cptype , 1 )"		1238360	0					
ANR	1238808	Callee	add_property_string		1238360	0					
ANR	1238809	Identifier	add_property_string		1238360	0					
ANR	1238810	ArgumentList	soapvar		1238360	1					
ANR	1238811	Argument	soapvar		1238360	0					
ANR	1238812	Identifier	soapvar		1238360	0					
ANR	1238813	Argument	"""enc_stype"""		1238360	1					
ANR	1238814	PrimaryExpression	"""enc_stype"""		1238360	0					
ANR	1238815	Argument	cptype		1238360	2					
ANR	1238816	Identifier	cptype		1238360	0					
ANR	1238817	Argument	1		1238360	3					
ANR	1238818	PrimaryExpression	1		1238360	0					
ANR	1238819	IfStatement	if ( nsptr )		1238360	11					
ANR	1238820	Condition	nsptr	2968:6:94913:94917	1238360	0	True				
ANR	1238821	Identifier	nsptr		1238360	0					
ANR	1238822	CompoundStatement		72:13:2129:2129	1238360	1					
ANR	1238823	ExpressionStatement	"add_property_string ( soapvar , ""enc_ns"" , ( char * ) nsptr -> href , 1 )"	2969:3:94925:94986	1238360	0	True				
ANR	1238824	CallExpression	"add_property_string ( soapvar , ""enc_ns"" , ( char * ) nsptr -> href , 1 )"		1238360	0					
ANR	1238825	Callee	add_property_string		1238360	0					
ANR	1238826	Identifier	add_property_string		1238360	0					
ANR	1238827	ArgumentList	soapvar		1238360	1					
ANR	1238828	Argument	soapvar		1238360	0					
ANR	1238829	Identifier	soapvar		1238360	0					
ANR	1238830	Argument	"""enc_ns"""		1238360	1					
ANR	1238831	PrimaryExpression	"""enc_ns"""		1238360	0					
ANR	1238832	Argument	( char * ) nsptr -> href		1238360	2					
ANR	1238833	CastExpression	( char * ) nsptr -> href		1238360	0					
ANR	1238834	CastTarget	char *		1238360	0					
ANR	1238835	PtrMemberAccess	nsptr -> href		1238360	1					
ANR	1238836	Identifier	nsptr		1238360	0					
ANR	1238837	Identifier	href		1238360	1					
ANR	1238838	Argument	1		1238360	3					
ANR	1238839	PrimaryExpression	1		1238360	0					
ANR	1238840	ExpressionStatement	efree ( cptype )	2971:2:94994:95007	1238360	12	True				
ANR	1238841	CallExpression	efree ( cptype )		1238360	0					
ANR	1238842	Callee	efree		1238360	0					
ANR	1238843	Identifier	efree		1238360	0					
ANR	1238844	ArgumentList	cptype		1238360	1					
ANR	1238845	Argument	cptype		1238360	0					
ANR	1238846	Identifier	cptype		1238360	0					
ANR	1238847	IfStatement	if ( ns )		1238360	13					
ANR	1238848	Condition	ns	2972:6:95015:95016	1238360	0	True				
ANR	1238849	Identifier	ns		1238360	0					
ANR	1238850	CompoundStatement		76:10:2228:2228	1238360	1					
ANR	1238851	ExpressionStatement	efree ( ns )	2972:11:95020:95029	1238360	0	True				
ANR	1238852	CallExpression	efree ( ns )		1238360	0					
ANR	1238853	Callee	efree		1238360	0					
ANR	1238854	Identifier	efree		1238360	0					
ANR	1238855	ArgumentList	ns		1238360	1					
ANR	1238856	Argument	ns		1238360	0					
ANR	1238857	Identifier	ns		1238360	0					
ANR	1238858	ExpressionStatement	ret = soapvar	2973:2:95034:95047	1238360	14	True				
ANR	1238859	AssignmentExpression	ret = soapvar		1238360	0		=			
ANR	1238860	Identifier	ret		1238360	0					
ANR	1238861	Identifier	soapvar		1238360	1					
ANR	1238862	ReturnStatement	return ret ;	2975:1:95053:95063	1238360	17	True				
ANR	1238863	Identifier	ret		1238360	0					
ANR	1238864	ReturnType	static zval *		1238360	1					
ANR	1238865	Identifier	guess_zval_convert		1238360	2					
ANR	1238866	ParameterList	"encodeTypePtr type , xmlNodePtr data TSRMLS_DC"		1238360	3					
ANR	1238867	Parameter	encodeTypePtr type	2896:32:92743:92760	1238360	0	True				
ANR	1238868	ParameterType	encodeTypePtr		1238360	0					
ANR	1238869	Identifier	type		1238360	1					
ANR	1238870	Parameter	xmlNodePtr data TSRMLS_DC	2896:52:92763:92787	1238360	1	True				
ANR	1238871	ParameterType	xmlNodePtr data		1238360	0					
ANR	1238872	Identifier	TSRMLS_DC		1238360	1					
ANR	1238873	CFGEntryNode	ENTRY		1238360		True				
ANR	1238874	CFGExitNode	EXIT		1238360		True				
ANR	1238875	Symbol	type_name		1238360						
ANR	1238876	Symbol	XML_ELEMENT_NODE		1238360						
ANR	1238877	Symbol	trav -> next		1238360						
ANR	1238878	Symbol	data		1238360						
ANR	1238879	Symbol	get_attribute		1238360						
ANR	1238880	Symbol	trav		1238360						
ANR	1238881	Symbol	get_conversion		1238360						
ANR	1238882	Symbol	type		1238360						
ANR	1238883	Symbol	TSRMLS_DC		1238360						
ANR	1238884	Symbol	check_and_resolve_href		1238360						
ANR	1238885	Symbol	SOAP_ENC_ARRAY		1238360						
ANR	1238886	Symbol	soap_var_class_entry		1238360						
ANR	1238887	Symbol	enc -> details . type		1238360						
ANR	1238888	Symbol	tmp		1238360						
ANR	1238889	Symbol	* tmpattr		1238360						
ANR	1238890	Symbol	tmp -> details . sdl_type -> encode		1238360						
ANR	1238891	Symbol	ret		1238360						
ANR	1238892	Symbol	* * tmpattr		1238360						
ANR	1238893	Symbol	NULL		1238360						
ANR	1238894	Symbol	tmpattr		1238360						
ANR	1238895	Symbol	tmpattr -> children		1238360						
ANR	1238896	Symbol	* tmpattr -> children		1238360						
ANR	1238897	Symbol	SOAP_GLOBAL		1238360						
ANR	1238898	Symbol	XSD_TYPEKIND_COMPLEX		1238360						
ANR	1238899	Symbol	tmpattr -> children -> content		1238360						
ANR	1238900	Symbol	& enc -> details		1238360						
ANR	1238901	Symbol	get_attribute_ex		1238360						
ANR	1238902	Symbol	* nsptr		1238360						
ANR	1238903	Symbol	sdl		1238360						
ANR	1238904	Symbol	* enc		1238360						
ANR	1238905	Symbol	XSI_NAMESPACE		1238360						
ANR	1238906	Symbol	BAD_CAST		1238360						
ANR	1238907	Symbol	* tmp		1238360						
ANR	1238908	Symbol	trav -> type		1238360						
ANR	1238909	Symbol	ns		1238360						
ANR	1238910	Symbol	tmp -> details . sdl_type -> kind		1238360						
ANR	1238911	Symbol	enc -> details		1238360						
ANR	1238912	Symbol	SOAP_ENC_OBJECT		1238360						
ANR	1238913	Symbol	data -> properties		1238360						
ANR	1238914	Symbol	* trav		1238360						
ANR	1238915	Symbol	nsptr		1238360						
ANR	1238916	Symbol	IS_NULL		1238360						
ANR	1238917	Symbol	enc		1238360						
ANR	1238918	Symbol	tmp -> details . sdl_type		1238360						
ANR	1238919	Symbol	soapvar		1238360						
ANR	1238920	Symbol	* tmp -> details		1238360						
ANR	1238921	Symbol	* tmp -> details . sdl_type		1238360						
ANR	1238922	Symbol	nsptr -> href		1238360						
ANR	1238923	Symbol	enc -> details . sdl_type		1238360						
ANR	1238924	Symbol	& cptype		1238360						
ANR	1238925	Symbol	* * tmp		1238360						
ANR	1238926	Symbol	xmlSearchNs		1238360						
ANR	1238927	Symbol	tmp -> details		1238360						
ANR	1238928	Symbol	& ns		1238360						
ANR	1238929	Symbol	XSD_STRING		1238360						
ANR	1238930	Symbol	data -> children		1238360						
ANR	1238931	Symbol	data -> doc		1238360						
ANR	1238932	Symbol	get_encoder_from_prefix		1238360						
ANR	1238933	Symbol	cptype		1238360						
ANR	1238934	Symbol	* data		1238360						
ANR	1238935	Function	to_xml_datetime_ex	2979:0:95093:97206							
ANR	1238936	FunctionDef	"to_xml_datetime_ex (encodeTypePtr type , zval * data , char * format , int style , xmlNodePtr parent TSRMLS_DC)"		1238935	0					
ANR	1238937	CompoundStatement		2980:0:95216:97206	1238935	0					
ANR	1238938	IdentifierDeclStatement	"struct tm * ta , tmbuf ;"	2982:1:95268:95288	1238935	0	True				
ANR	1238939	IdentifierDecl	* ta		1238935	0					
ANR	1238940	IdentifierDeclType	struct tm *		1238935	0					
ANR	1238941	Identifier	ta		1238935	1					
ANR	1238942	IdentifierDecl	tmbuf		1238935	1					
ANR	1238943	IdentifierDeclType	struct tm		1238935	0					
ANR	1238944	Identifier	tmbuf		1238935	1					
ANR	1238945	IdentifierDeclStatement	time_t timestamp ;	2983:1:95291:95307	1238935	1	True				
ANR	1238946	IdentifierDecl	timestamp		1238935	0					
ANR	1238947	IdentifierDeclType	time_t		1238935	0					
ANR	1238948	Identifier	timestamp		1238935	1					
ANR	1238949	IdentifierDeclStatement	int max_reallocs = 5 ;	2984:1:95310:95330	1238935	2	True				
ANR	1238950	IdentifierDecl	max_reallocs = 5		1238935	0					
ANR	1238951	IdentifierDeclType	int		1238935	0					
ANR	1238952	Identifier	max_reallocs		1238935	1					
ANR	1238953	AssignmentExpression	max_reallocs = 5		1238935	2		=			
ANR	1238954	Identifier	max_reallocs		1238935	0					
ANR	1238955	PrimaryExpression	5		1238935	1					
ANR	1238956	IdentifierDeclStatement	"size_t buf_len = 64 , real_len ;"	2985:1:95333:95360	1238935	3	True				
ANR	1238957	IdentifierDecl	buf_len = 64		1238935	0					
ANR	1238958	IdentifierDeclType	size_t		1238935	0					
ANR	1238959	Identifier	buf_len		1238935	1					
ANR	1238960	AssignmentExpression	buf_len = 64		1238935	2		=			
ANR	1238961	Identifier	buf_len		1238935	0					
ANR	1238962	PrimaryExpression	64		1238935	1					
ANR	1238963	IdentifierDecl	real_len		1238935	1					
ANR	1238964	IdentifierDeclType	size_t		1238935	0					
ANR	1238965	Identifier	real_len		1238935	1					
ANR	1238966	IdentifierDeclStatement	char * buf ;	2986:1:95363:95372	1238935	4	True				
ANR	1238967	IdentifierDecl	* buf		1238935	0					
ANR	1238968	IdentifierDeclType	char *		1238935	0					
ANR	1238969	Identifier	buf		1238935	1					
ANR	1238970	IdentifierDeclStatement	char tzbuf [ 8 ] ;	2987:1:95375:95388	1238935	5	True				
ANR	1238971	IdentifierDecl	tzbuf [ 8 ]		1238935	0					
ANR	1238972	IdentifierDeclType	char [ 8 ]		1238935	0					
ANR	1238973	Identifier	tzbuf		1238935	1					
ANR	1238974	PrimaryExpression	8		1238935	2					
ANR	1238975	IdentifierDeclStatement	xmlNodePtr xmlParam ;	2989:1:95392:95411	1238935	6	True				
ANR	1238976	IdentifierDecl	xmlParam		1238935	0					
ANR	1238977	IdentifierDeclType	xmlNodePtr		1238935	0					
ANR	1238978	Identifier	xmlParam		1238935	1					
ANR	1238979	ExpressionStatement	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	2991:1:95415:95461	1238935	7	True				
ANR	1238980	AssignmentExpression	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1238935	0		=			
ANR	1238981	Identifier	xmlParam		1238935	0					
ANR	1238982	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1238935	1					
ANR	1238983	Callee	xmlNewNode		1238935	0					
ANR	1238984	Identifier	xmlNewNode		1238935	0					
ANR	1238985	ArgumentList	NULL		1238935	1					
ANR	1238986	Argument	NULL		1238935	0					
ANR	1238987	Identifier	NULL		1238935	0					
ANR	1238988	Argument	"BAD_CAST ( ""BOGUS"" )"		1238935	1					
ANR	1238989	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1238935	0					
ANR	1238990	Callee	BAD_CAST		1238935	0					
ANR	1238991	Identifier	BAD_CAST		1238935	0					
ANR	1238992	ArgumentList	"""BOGUS"""		1238935	1					
ANR	1238993	Argument	"""BOGUS"""		1238935	0					
ANR	1238994	PrimaryExpression	"""BOGUS"""		1238935	0					
ANR	1238995	ExpressionStatement	"xmlAddChild ( parent , xmlParam )"	2992:1:95464:95493	1238935	8	True				
ANR	1238996	CallExpression	"xmlAddChild ( parent , xmlParam )"		1238935	0					
ANR	1238997	Callee	xmlAddChild		1238935	0					
ANR	1238998	Identifier	xmlAddChild		1238935	0					
ANR	1238999	ArgumentList	parent		1238935	1					
ANR	1239000	Argument	parent		1238935	0					
ANR	1239001	Identifier	parent		1238935	0					
ANR	1239002	Argument	xmlParam		1238935	1					
ANR	1239003	Identifier	xmlParam		1238935	0					
ANR	1239004	ExpressionStatement	"FIND_ZVAL_NULL ( data , xmlParam , style )"	2993:1:95496:95533	1238935	9	True				
ANR	1239005	CallExpression	"FIND_ZVAL_NULL ( data , xmlParam , style )"		1238935	0					
ANR	1239006	Callee	FIND_ZVAL_NULL		1238935	0					
ANR	1239007	Identifier	FIND_ZVAL_NULL		1238935	0					
ANR	1239008	ArgumentList	data		1238935	1					
ANR	1239009	Argument	data		1238935	0					
ANR	1239010	Identifier	data		1238935	0					
ANR	1239011	Argument	xmlParam		1238935	1					
ANR	1239012	Identifier	xmlParam		1238935	0					
ANR	1239013	Argument	style		1238935	2					
ANR	1239014	Identifier	style		1238935	0					
ANR	1239015	IfStatement	if ( Z_TYPE_P ( data ) == IS_LONG )		1238935	10					
ANR	1239016	Condition	Z_TYPE_P ( data ) == IS_LONG	2995:5:95541:95565	1238935	0	True				
ANR	1239017	EqualityExpression	Z_TYPE_P ( data ) == IS_LONG		1238935	0		==			
ANR	1239018	CallExpression	Z_TYPE_P ( data )		1238935	0					
ANR	1239019	Callee	Z_TYPE_P		1238935	0					
ANR	1239020	Identifier	Z_TYPE_P		1238935	0					
ANR	1239021	ArgumentList	data		1238935	1					
ANR	1239022	Argument	data		1238935	0					
ANR	1239023	Identifier	data		1238935	0					
ANR	1239024	Identifier	IS_LONG		1238935	1					
ANR	1239025	CompoundStatement		16:32:351:351	1238935	1					
ANR	1239026	ExpressionStatement	timestamp = Z_LVAL_P ( data )	2996:2:95572:95598	1238935	0	True				
ANR	1239027	AssignmentExpression	timestamp = Z_LVAL_P ( data )		1238935	0		=			
ANR	1239028	Identifier	timestamp		1238935	0					
ANR	1239029	CallExpression	Z_LVAL_P ( data )		1238935	1					
ANR	1239030	Callee	Z_LVAL_P		1238935	0					
ANR	1239031	Identifier	Z_LVAL_P		1238935	0					
ANR	1239032	ArgumentList	data		1238935	1					
ANR	1239033	Argument	data		1238935	0					
ANR	1239034	Identifier	data		1238935	0					
ANR	1239035	ExpressionStatement	"ta = php_localtime_r ( & timestamp , & tmbuf )"	2997:2:95602:95642	1238935	1	True				
ANR	1239036	AssignmentExpression	"ta = php_localtime_r ( & timestamp , & tmbuf )"		1238935	0		=			
ANR	1239037	Identifier	ta		1238935	0					
ANR	1239038	CallExpression	"php_localtime_r ( & timestamp , & tmbuf )"		1238935	1					
ANR	1239039	Callee	php_localtime_r		1238935	0					
ANR	1239040	Identifier	php_localtime_r		1238935	0					
ANR	1239041	ArgumentList	& timestamp		1238935	1					
ANR	1239042	Argument	& timestamp		1238935	0					
ANR	1239043	UnaryOperationExpression	& timestamp		1238935	0					
ANR	1239044	UnaryOperator	&		1238935	0					
ANR	1239045	Identifier	timestamp		1238935	1					
ANR	1239046	Argument	& tmbuf		1238935	1					
ANR	1239047	UnaryOperationExpression	& tmbuf		1238935	0					
ANR	1239048	UnaryOperator	&		1238935	0					
ANR	1239049	Identifier	tmbuf		1238935	1					
ANR	1239050	IfStatement	if ( ! ta )		1238935	2					
ANR	1239051	Condition	! ta	2999:6:95695:95697	1238935	0	True				
ANR	1239052	UnaryOperationExpression	! ta		1238935	0					
ANR	1239053	UnaryOperator	!		1238935	0					
ANR	1239054	Identifier	ta		1238935	1					
ANR	1239055	CompoundStatement		20:11:483:483	1238935	1					
ANR	1239056	ExpressionStatement	"soap_error1 ( E_ERROR , ""Encoding: Invalid timestamp %ld"" , Z_LVAL_P ( data ) )"	3000:3:95705:95776	1238935	0	True				
ANR	1239057	CallExpression	"soap_error1 ( E_ERROR , ""Encoding: Invalid timestamp %ld"" , Z_LVAL_P ( data ) )"		1238935	0					
ANR	1239058	Callee	soap_error1		1238935	0					
ANR	1239059	Identifier	soap_error1		1238935	0					
ANR	1239060	ArgumentList	E_ERROR		1238935	1					
ANR	1239061	Argument	E_ERROR		1238935	0					
ANR	1239062	Identifier	E_ERROR		1238935	0					
ANR	1239063	Argument	"""Encoding: Invalid timestamp %ld"""		1238935	1					
ANR	1239064	PrimaryExpression	"""Encoding: Invalid timestamp %ld"""		1238935	0					
ANR	1239065	Argument	Z_LVAL_P ( data )		1238935	2					
ANR	1239066	CallExpression	Z_LVAL_P ( data )		1238935	0					
ANR	1239067	Callee	Z_LVAL_P		1238935	0					
ANR	1239068	Identifier	Z_LVAL_P		1238935	0					
ANR	1239069	ArgumentList	data		1238935	1					
ANR	1239070	Argument	data		1238935	0					
ANR	1239071	Identifier	data		1238935	0					
ANR	1239072	ExpressionStatement	buf = ( char * ) emalloc ( buf_len )	3003:2:95785:95816	1238935	3	True				
ANR	1239073	AssignmentExpression	buf = ( char * ) emalloc ( buf_len )		1238935	0		=			
ANR	1239074	Identifier	buf		1238935	0					
ANR	1239075	CastExpression	( char * ) emalloc ( buf_len )		1238935	1					
ANR	1239076	CastTarget	char *		1238935	0					
ANR	1239077	CallExpression	emalloc ( buf_len )		1238935	1					
ANR	1239078	Callee	emalloc		1238935	0					
ANR	1239079	Identifier	emalloc		1238935	0					
ANR	1239080	ArgumentList	buf_len		1238935	1					
ANR	1239081	Argument	buf_len		1238935	0					
ANR	1239082	Identifier	buf_len		1238935	0					
ANR	1239083	WhileStatement	"while ( ( real_len = strftime ( buf , buf_len , format , ta ) ) == buf_len || real_len == 0 )"		1238935	4					
ANR	1239084	Condition	"( real_len = strftime ( buf , buf_len , format , ta ) ) == buf_len || real_len == 0"	3004:9:95827:95901	1238935	0	True				
ANR	1239085	OrExpression	"( real_len = strftime ( buf , buf_len , format , ta ) ) == buf_len || real_len == 0"		1238935	0		||			
ANR	1239086	EqualityExpression	"( real_len = strftime ( buf , buf_len , format , ta ) ) == buf_len"		1238935	0		==			
ANR	1239087	AssignmentExpression	"real_len = strftime ( buf , buf_len , format , ta )"		1238935	0		=			
ANR	1239088	Identifier	real_len		1238935	0					
ANR	1239089	CallExpression	"strftime ( buf , buf_len , format , ta )"		1238935	1					
ANR	1239090	Callee	strftime		1238935	0					
ANR	1239091	Identifier	strftime		1238935	0					
ANR	1239092	ArgumentList	buf		1238935	1					
ANR	1239093	Argument	buf		1238935	0					
ANR	1239094	Identifier	buf		1238935	0					
ANR	1239095	Argument	buf_len		1238935	1					
ANR	1239096	Identifier	buf_len		1238935	0					
ANR	1239097	Argument	format		1238935	2					
ANR	1239098	Identifier	format		1238935	0					
ANR	1239099	Argument	ta		1238935	3					
ANR	1239100	Identifier	ta		1238935	0					
ANR	1239101	Identifier	buf_len		1238935	1					
ANR	1239102	EqualityExpression	real_len == 0		1238935	1		==			
ANR	1239103	Identifier	real_len		1238935	0					
ANR	1239104	PrimaryExpression	0		1238935	1					
ANR	1239105	CompoundStatement		25:86:687:687	1238935	1					
ANR	1239106	ExpressionStatement	buf_len *= 2	3005:3:95909:95921	1238935	0	True				
ANR	1239107	AssignmentExpression	buf_len *= 2		1238935	0		*=			
ANR	1239108	Identifier	buf_len		1238935	0					
ANR	1239109	PrimaryExpression	2		1238935	1					
ANR	1239110	ExpressionStatement	"buf = ( char * ) erealloc ( buf , buf_len )"	3006:3:95926:95963	1238935	1	True				
ANR	1239111	AssignmentExpression	"buf = ( char * ) erealloc ( buf , buf_len )"		1238935	0		=			
ANR	1239112	Identifier	buf		1238935	0					
ANR	1239113	CastExpression	"( char * ) erealloc ( buf , buf_len )"		1238935	1					
ANR	1239114	CastTarget	char *		1238935	0					
ANR	1239115	CallExpression	"erealloc ( buf , buf_len )"		1238935	1					
ANR	1239116	Callee	erealloc		1238935	0					
ANR	1239117	Identifier	erealloc		1238935	0					
ANR	1239118	ArgumentList	buf		1238935	1					
ANR	1239119	Argument	buf		1238935	0					
ANR	1239120	Identifier	buf		1238935	0					
ANR	1239121	Argument	buf_len		1238935	1					
ANR	1239122	Identifier	buf_len		1238935	0					
ANR	1239123	IfStatement	if ( ! -- max_reallocs )		1238935	2					
ANR	1239124	Condition	! -- max_reallocs	3007:7:95972:95986	1238935	0	True				
ANR	1239125	UnaryOperationExpression	! -- max_reallocs		1238935	0					
ANR	1239126	UnaryOperator	!		1238935	0					
ANR	1239127	UnaryExpression	-- max_reallocs		1238935	1					
ANR	1239128	IncDec	--		1238935	0					
ANR	1239129	Identifier	max_reallocs		1238935	1					
ANR	1239130	BreakStatement	break ;	3007:24:95989:95994	1238935	1	True				
ANR	1239131	ExpressionStatement	"snprintf ( tzbuf , sizeof ( tzbuf ) , ""%c%02d:%02d"" , ( ta -> tm_gmtoff < 0 ) ? '-' : '+' , abs ( ta -> tm_gmtoff / 3600 ) , abs ( ( ta -> tm_gmtoff % 3600 ) / 60 ) )"	3012:2:96051:96192	1238935	5	True				
ANR	1239132	CallExpression	"snprintf ( tzbuf , sizeof ( tzbuf ) , ""%c%02d:%02d"" , ( ta -> tm_gmtoff < 0 ) ? '-' : '+' , abs ( ta -> tm_gmtoff / 3600 ) , abs ( ( ta -> tm_gmtoff % 3600 ) / 60 ) )"		1238935	0					
ANR	1239133	Callee	snprintf		1238935	0					
ANR	1239134	Identifier	snprintf		1238935	0					
ANR	1239135	ArgumentList	tzbuf		1238935	1					
ANR	1239136	Argument	tzbuf		1238935	0					
ANR	1239137	Identifier	tzbuf		1238935	0					
ANR	1239138	Argument	sizeof ( tzbuf )		1238935	1					
ANR	1239139	SizeofExpression	sizeof ( tzbuf )		1238935	0					
ANR	1239140	Sizeof	sizeof		1238935	0					
ANR	1239141	SizeofOperand	tzbuf		1238935	1					
ANR	1239142	Argument	"""%c%02d:%02d"""		1238935	2					
ANR	1239143	PrimaryExpression	"""%c%02d:%02d"""		1238935	0					
ANR	1239144	Argument	( ta -> tm_gmtoff < 0 ) ? '-' : '+'		1238935	3					
ANR	1239145	ConditionalExpression	( ta -> tm_gmtoff < 0 ) ? '-' : '+'		1238935	0					
ANR	1239146	Condition	ta -> tm_gmtoff < 0		1238935	0					
ANR	1239147	RelationalExpression	ta -> tm_gmtoff < 0		1238935	0		<			
ANR	1239148	PtrMemberAccess	ta -> tm_gmtoff		1238935	0					
ANR	1239149	Identifier	ta		1238935	0					
ANR	1239150	Identifier	tm_gmtoff		1238935	1					
ANR	1239151	PrimaryExpression	0		1238935	1					
ANR	1239152	PrimaryExpression	'-'		1238935	1					
ANR	1239153	PrimaryExpression	'+'		1238935	2					
ANR	1239154	Argument	abs ( ta -> tm_gmtoff / 3600 )		1238935	4					
ANR	1239155	CallExpression	abs ( ta -> tm_gmtoff / 3600 )		1238935	0					
ANR	1239156	Callee	abs		1238935	0					
ANR	1239157	Identifier	abs		1238935	0					
ANR	1239158	ArgumentList	ta -> tm_gmtoff / 3600		1238935	1					
ANR	1239159	Argument	ta -> tm_gmtoff / 3600		1238935	0					
ANR	1239160	MultiplicativeExpression	ta -> tm_gmtoff / 3600		1238935	0		/			
ANR	1239161	PtrMemberAccess	ta -> tm_gmtoff		1238935	0					
ANR	1239162	Identifier	ta		1238935	0					
ANR	1239163	Identifier	tm_gmtoff		1238935	1					
ANR	1239164	PrimaryExpression	3600		1238935	1					
ANR	1239165	Argument	abs ( ( ta -> tm_gmtoff % 3600 ) / 60 )		1238935	5					
ANR	1239166	CallExpression	abs ( ( ta -> tm_gmtoff % 3600 ) / 60 )		1238935	0					
ANR	1239167	Callee	abs		1238935	0					
ANR	1239168	Identifier	abs		1238935	0					
ANR	1239169	ArgumentList	( ta -> tm_gmtoff % 3600 ) / 60		1238935	1					
ANR	1239170	Argument	( ta -> tm_gmtoff % 3600 ) / 60		1238935	0					
ANR	1239171	MultiplicativeExpression	( ta -> tm_gmtoff % 3600 ) / 60		1238935	0		/			
ANR	1239172	MultiplicativeExpression	ta -> tm_gmtoff % 3600		1238935	0		%			
ANR	1239173	PtrMemberAccess	ta -> tm_gmtoff		1238935	0					
ANR	1239174	Identifier	ta		1238935	0					
ANR	1239175	Identifier	tm_gmtoff		1238935	1					
ANR	1239176	PrimaryExpression	3600		1238935	1					
ANR	1239177	PrimaryExpression	60		1238935	1					
ANR	1239178	IfStatement	"if ( strcmp ( tzbuf , ""+00:00"" ) == 0 )"		1238935	6					
ANR	1239179	Condition	"strcmp ( tzbuf , ""+00:00"" ) == 0"	3020:6:96729:96755	1238935	0	True				
ANR	1239180	EqualityExpression	"strcmp ( tzbuf , ""+00:00"" ) == 0"		1238935	0		==			
ANR	1239181	CallExpression	"strcmp ( tzbuf , ""+00:00"" )"		1238935	0					
ANR	1239182	Callee	strcmp		1238935	0					
ANR	1239183	Identifier	strcmp		1238935	0					
ANR	1239184	ArgumentList	tzbuf		1238935	1					
ANR	1239185	Argument	tzbuf		1238935	0					
ANR	1239186	Identifier	tzbuf		1238935	0					
ANR	1239187	Argument	"""+00:00"""		1238935	1					
ANR	1239188	PrimaryExpression	"""+00:00"""		1238935	0					
ANR	1239189	PrimaryExpression	0		1238935	1					
ANR	1239190	CompoundStatement		41:35:1541:1541	1238935	1					
ANR	1239191	ExpressionStatement	"strcpy ( tzbuf , ""Z"" )"	3021:4:96764:96781	1238935	0	True				
ANR	1239192	CallExpression	"strcpy ( tzbuf , ""Z"" )"		1238935	0					
ANR	1239193	Callee	strcpy		1238935	0					
ANR	1239194	Identifier	strcpy		1238935	0					
ANR	1239195	ArgumentList	tzbuf		1238935	1					
ANR	1239196	Argument	tzbuf		1238935	0					
ANR	1239197	Identifier	tzbuf		1238935	0					
ANR	1239198	Argument	"""Z"""		1238935	1					
ANR	1239199	PrimaryExpression	"""Z"""		1238935	0					
ANR	1239200	ExpressionStatement	real_len ++	3022:4:96787:96797	1238935	1	True				
ANR	1239201	PostIncDecOperationExpression	real_len ++		1238935	0					
ANR	1239202	Identifier	real_len		1238935	0					
ANR	1239203	IncDec	++		1238935	1					
ANR	1239204	ElseStatement	else		1238935	0					
ANR	1239205	CompoundStatement		44:9:1591:1591	1238935	0					
ANR	1239206	ExpressionStatement	real_len += 6	3024:3:96813:96826	1238935	0	True				
ANR	1239207	AssignmentExpression	real_len += 6		1238935	0		+=			
ANR	1239208	Identifier	real_len		1238935	0					
ANR	1239209	PrimaryExpression	6		1238935	1					
ANR	1239210	IfStatement	if ( real_len >= buf_len )		1238935	7					
ANR	1239211	Condition	real_len >= buf_len	3026:6:96838:96856	1238935	0	True				
ANR	1239212	RelationalExpression	real_len >= buf_len		1238935	0		>=			
ANR	1239213	Identifier	real_len		1238935	0					
ANR	1239214	Identifier	buf_len		1238935	1					
ANR	1239215	CompoundStatement		47:27:1642:1642	1238935	1					
ANR	1239216	ExpressionStatement	"buf = ( char * ) erealloc ( buf , real_len + 1 )"	3027:3:96864:96904	1238935	0	True				
ANR	1239217	AssignmentExpression	"buf = ( char * ) erealloc ( buf , real_len + 1 )"		1238935	0		=			
ANR	1239218	Identifier	buf		1238935	0					
ANR	1239219	CastExpression	"( char * ) erealloc ( buf , real_len + 1 )"		1238935	1					
ANR	1239220	CastTarget	char *		1238935	0					
ANR	1239221	CallExpression	"erealloc ( buf , real_len + 1 )"		1238935	1					
ANR	1239222	Callee	erealloc		1238935	0					
ANR	1239223	Identifier	erealloc		1238935	0					
ANR	1239224	ArgumentList	buf		1238935	1					
ANR	1239225	Argument	buf		1238935	0					
ANR	1239226	Identifier	buf		1238935	0					
ANR	1239227	Argument	real_len + 1		1238935	1					
ANR	1239228	AdditiveExpression	real_len + 1		1238935	0		+			
ANR	1239229	Identifier	real_len		1238935	0					
ANR	1239230	PrimaryExpression	1		1238935	1					
ANR	1239231	ExpressionStatement	"strcat ( buf , tzbuf )"	3029:2:96912:96930	1238935	8	True				
ANR	1239232	CallExpression	"strcat ( buf , tzbuf )"		1238935	0					
ANR	1239233	Callee	strcat		1238935	0					
ANR	1239234	Identifier	strcat		1238935	0					
ANR	1239235	ArgumentList	buf		1238935	1					
ANR	1239236	Argument	buf		1238935	0					
ANR	1239237	Identifier	buf		1238935	0					
ANR	1239238	Argument	tzbuf		1238935	1					
ANR	1239239	Identifier	tzbuf		1238935	0					
ANR	1239240	ExpressionStatement	"xmlNodeSetContent ( xmlParam , BAD_CAST ( buf ) )"	3031:2:96935:96977	1238935	9	True				
ANR	1239241	CallExpression	"xmlNodeSetContent ( xmlParam , BAD_CAST ( buf ) )"		1238935	0					
ANR	1239242	Callee	xmlNodeSetContent		1238935	0					
ANR	1239243	Identifier	xmlNodeSetContent		1238935	0					
ANR	1239244	ArgumentList	xmlParam		1238935	1					
ANR	1239245	Argument	xmlParam		1238935	0					
ANR	1239246	Identifier	xmlParam		1238935	0					
ANR	1239247	Argument	BAD_CAST ( buf )		1238935	1					
ANR	1239248	CallExpression	BAD_CAST ( buf )		1238935	0					
ANR	1239249	Callee	BAD_CAST		1238935	0					
ANR	1239250	Identifier	BAD_CAST		1238935	0					
ANR	1239251	ArgumentList	buf		1238935	1					
ANR	1239252	Argument	buf		1238935	0					
ANR	1239253	Identifier	buf		1238935	0					
ANR	1239254	ExpressionStatement	efree ( buf )	3032:2:96981:96991	1238935	10	True				
ANR	1239255	CallExpression	efree ( buf )		1238935	0					
ANR	1239256	Callee	efree		1238935	0					
ANR	1239257	Identifier	efree		1238935	0					
ANR	1239258	ArgumentList	buf		1238935	1					
ANR	1239259	Argument	buf		1238935	0					
ANR	1239260	Identifier	buf		1238935	0					
ANR	1239261	ElseStatement	else		1238935	0					
ANR	1239262	IfStatement	if ( Z_TYPE_P ( data ) == IS_STRING )		1238935	0					
ANR	1239263	Condition	Z_TYPE_P ( data ) == IS_STRING	3033:12:97005:97031	1238935	0	True				
ANR	1239264	EqualityExpression	Z_TYPE_P ( data ) == IS_STRING		1238935	0		==			
ANR	1239265	CallExpression	Z_TYPE_P ( data )		1238935	0					
ANR	1239266	Callee	Z_TYPE_P		1238935	0					
ANR	1239267	Identifier	Z_TYPE_P		1238935	0					
ANR	1239268	ArgumentList	data		1238935	1					
ANR	1239269	Argument	data		1238935	0					
ANR	1239270	Identifier	data		1238935	0					
ANR	1239271	Identifier	IS_STRING		1238935	1					
ANR	1239272	CompoundStatement		54:41:1817:1817	1238935	1					
ANR	1239273	ExpressionStatement	"xmlNodeSetContentLen ( xmlParam , BAD_CAST ( Z_STRVAL_P ( data ) ) , Z_STRLEN_P ( data ) )"	3034:2:97038:97114	1238935	0	True				
ANR	1239274	CallExpression	"xmlNodeSetContentLen ( xmlParam , BAD_CAST ( Z_STRVAL_P ( data ) ) , Z_STRLEN_P ( data ) )"		1238935	0					
ANR	1239275	Callee	xmlNodeSetContentLen		1238935	0					
ANR	1239276	Identifier	xmlNodeSetContentLen		1238935	0					
ANR	1239277	ArgumentList	xmlParam		1238935	1					
ANR	1239278	Argument	xmlParam		1238935	0					
ANR	1239279	Identifier	xmlParam		1238935	0					
ANR	1239280	Argument	BAD_CAST ( Z_STRVAL_P ( data ) )		1238935	1					
ANR	1239281	CallExpression	BAD_CAST ( Z_STRVAL_P ( data ) )		1238935	0					
ANR	1239282	Callee	BAD_CAST		1238935	0					
ANR	1239283	Identifier	BAD_CAST		1238935	0					
ANR	1239284	ArgumentList	Z_STRVAL_P ( data )		1238935	1					
ANR	1239285	Argument	Z_STRVAL_P ( data )		1238935	0					
ANR	1239286	CallExpression	Z_STRVAL_P ( data )		1238935	0					
ANR	1239287	Callee	Z_STRVAL_P		1238935	0					
ANR	1239288	Identifier	Z_STRVAL_P		1238935	0					
ANR	1239289	ArgumentList	data		1238935	1					
ANR	1239290	Argument	data		1238935	0					
ANR	1239291	Identifier	data		1238935	0					
ANR	1239292	Argument	Z_STRLEN_P ( data )		1238935	2					
ANR	1239293	CallExpression	Z_STRLEN_P ( data )		1238935	0					
ANR	1239294	Callee	Z_STRLEN_P		1238935	0					
ANR	1239295	Identifier	Z_STRLEN_P		1238935	0					
ANR	1239296	ArgumentList	data		1238935	1					
ANR	1239297	Argument	data		1238935	0					
ANR	1239298	Identifier	data		1238935	0					
ANR	1239299	IfStatement	if ( style == SOAP_ENCODED )		1238935	11					
ANR	1239300	Condition	style == SOAP_ENCODED	3037:5:97125:97145	1238935	0	True				
ANR	1239301	EqualityExpression	style == SOAP_ENCODED		1238935	0		==			
ANR	1239302	Identifier	style		1238935	0					
ANR	1239303	Identifier	SOAP_ENCODED		1238935	1					
ANR	1239304	CompoundStatement		58:28:1931:1931	1238935	1					
ANR	1239305	ExpressionStatement	"set_ns_and_type ( xmlParam , type )"	3038:2:97152:97183	1238935	0	True				
ANR	1239306	CallExpression	"set_ns_and_type ( xmlParam , type )"		1238935	0					
ANR	1239307	Callee	set_ns_and_type		1238935	0					
ANR	1239308	Identifier	set_ns_and_type		1238935	0					
ANR	1239309	ArgumentList	xmlParam		1238935	1					
ANR	1239310	Argument	xmlParam		1238935	0					
ANR	1239311	Identifier	xmlParam		1238935	0					
ANR	1239312	Argument	type		1238935	1					
ANR	1239313	Identifier	type		1238935	0					
ANR	1239314	ReturnStatement	return xmlParam ;	3040:1:97189:97204	1238935	12	True				
ANR	1239315	Identifier	xmlParam		1238935	0					
ANR	1239316	ReturnType	static xmlNodePtr		1238935	1					
ANR	1239317	Identifier	to_xml_datetime_ex		1238935	2					
ANR	1239318	ParameterList	"encodeTypePtr type , zval * data , char * format , int style , xmlNodePtr parent TSRMLS_DC"		1238935	3					
ANR	1239319	Parameter	encodeTypePtr type	2979:37:95130:95147	1238935	0	True				
ANR	1239320	ParameterType	encodeTypePtr		1238935	0					
ANR	1239321	Identifier	type		1238935	1					
ANR	1239322	Parameter	zval * data	2979:57:95150:95159	1238935	1	True				
ANR	1239323	ParameterType	zval *		1238935	0					
ANR	1239324	Identifier	data		1238935	1					
ANR	1239325	Parameter	char * format	2979:69:95162:95173	1238935	2	True				
ANR	1239326	ParameterType	char *		1238935	0					
ANR	1239327	Identifier	format		1238935	1					
ANR	1239328	Parameter	int style	2979:83:95176:95184	1238935	3	True				
ANR	1239329	ParameterType	int		1238935	0					
ANR	1239330	Identifier	style		1238935	1					
ANR	1239331	Parameter	xmlNodePtr parent TSRMLS_DC	2979:94:95187:95213	1238935	4	True				
ANR	1239332	ParameterType	xmlNodePtr parent		1238935	0					
ANR	1239333	Identifier	TSRMLS_DC		1238935	1					
ANR	1239334	CFGEntryNode	ENTRY		1238935		True				
ANR	1239335	CFGExitNode	EXIT		1238935		True				
ANR	1239336	Symbol	parent		1238935						
ANR	1239337	Symbol	xmlParam		1238935						
ANR	1239338	Symbol	data		1238935						
ANR	1239339	Symbol	type		1238935						
ANR	1239340	Symbol	TSRMLS_DC		1238935						
ANR	1239341	Symbol	tmbuf		1238935						
ANR	1239342	Symbol	emalloc		1238935						
ANR	1239343	Symbol	IS_LONG		1238935						
ANR	1239344	Symbol	buf_len		1238935						
ANR	1239345	Symbol	Z_STRLEN_P		1238935						
ANR	1239346	Symbol	IS_STRING		1238935						
ANR	1239347	Symbol	erealloc		1238935						
ANR	1239348	Symbol	timestamp		1238935						
ANR	1239349	Symbol	strcmp		1238935						
ANR	1239350	Symbol	NULL		1238935						
ANR	1239351	Symbol	php_localtime_r		1238935						
ANR	1239352	Symbol	ta -> tm_gmtoff		1238935						
ANR	1239353	Symbol	format		1238935						
ANR	1239354	Symbol	xmlNewNode		1238935						
ANR	1239355	Symbol	Z_TYPE_P		1238935						
ANR	1239356	Symbol	ta		1238935						
ANR	1239357	Symbol	Z_STRVAL_P		1238935						
ANR	1239358	Symbol	max_reallocs		1238935						
ANR	1239359	Symbol	Z_LVAL_P		1238935						
ANR	1239360	Symbol	* ta		1238935						
ANR	1239361	Symbol	buf		1238935						
ANR	1239362	Symbol	E_ERROR		1238935						
ANR	1239363	Symbol	abs		1238935						
ANR	1239364	Symbol	real_len		1238935						
ANR	1239365	Symbol	strftime		1238935						
ANR	1239366	Symbol	& timestamp		1238935						
ANR	1239367	Symbol	tzbuf		1238935						
ANR	1239368	Symbol	style		1238935						
ANR	1239369	Symbol	SOAP_ENCODED		1238935						
ANR	1239370	Symbol	& tmbuf		1238935						
ANR	1239371	Symbol	BAD_CAST		1238935						
ANR	1239372	Function	to_xml_duration	3043:0:97209:97457							
ANR	1239373	FunctionDef	"to_xml_duration (encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1239372	0					
ANR	1239374	CompoundStatement		3044:0:97315:97457	1239372	0					
ANR	1239375	Statement	return	3046:1:97398:97403	1239372	0	True				
ANR	1239376	Statement	to_xml_string	3046:8:97405:97417	1239372	1	True				
ANR	1239377	Statement	(	3046:21:97418:97418	1239372	2	True				
ANR	1239378	Statement	type	3046:22:97419:97422	1239372	3	True				
ANR	1239379	Statement	","	3046:26:97423:97423	1239372	4	True				
ANR	1239380	Statement	data	3046:28:97425:97428	1239372	5	True				
ANR	1239381	Statement	","	3046:32:97429:97429	1239372	6	True				
ANR	1239382	Statement	style	3046:34:97431:97435	1239372	7	True				
ANR	1239383	Statement	","	3046:39:97436:97436	1239372	8	True				
ANR	1239384	Statement	parent	3046:41:97438:97443	1239372	9	True				
ANR	1239385	Statement	TSRMLS_CC	3046:48:97445:97453	1239372	10	True				
ANR	1239386	Statement	)	3046:57:97454:97454	1239372	11	True				
ANR	1239387	ExpressionStatement		3046:58:97455:97455	1239372	12	True				
ANR	1239388	ReturnType	static xmlNodePtr		1239372	1					
ANR	1239389	Identifier	to_xml_duration		1239372	2					
ANR	1239390	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1239372	3					
ANR	1239391	Parameter	encodeTypePtr type	3043:34:97243:97260	1239372	0	True				
ANR	1239392	ParameterType	encodeTypePtr		1239372	0					
ANR	1239393	Identifier	type		1239372	1					
ANR	1239394	Parameter	zval * data	3043:54:97263:97272	1239372	1	True				
ANR	1239395	ParameterType	zval *		1239372	0					
ANR	1239396	Identifier	data		1239372	1					
ANR	1239397	Parameter	int style	3043:66:97275:97283	1239372	2	True				
ANR	1239398	ParameterType	int		1239372	0					
ANR	1239399	Identifier	style		1239372	1					
ANR	1239400	Parameter	xmlNodePtr parent TSRMLS_DC	3043:77:97286:97312	1239372	3	True				
ANR	1239401	ParameterType	xmlNodePtr parent		1239372	0					
ANR	1239402	Identifier	TSRMLS_DC		1239372	1					
ANR	1239403	CFGEntryNode	ENTRY		1239372		True				
ANR	1239404	CFGExitNode	EXIT		1239372		True				
ANR	1239405	Symbol	data		1239372						
ANR	1239406	Symbol	style		1239372						
ANR	1239407	Symbol	type		1239372						
ANR	1239408	Symbol	TSRMLS_DC		1239372						
ANR	1239409	Function	to_xml_datetime	3049:0:97460:97654							
ANR	1239410	FunctionDef	"to_xml_datetime (encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1239409	0					
ANR	1239411	CompoundStatement		3050:0:97566:97654	1239409	0					
ANR	1239412	Statement	return	3051:1:97569:97574	1239409	0	True				
ANR	1239413	Statement	to_xml_datetime_ex	3051:8:97576:97593	1239409	1	True				
ANR	1239414	Statement	(	3051:26:97594:97594	1239409	2	True				
ANR	1239415	Statement	type	3051:27:97595:97598	1239409	3	True				
ANR	1239416	Statement	","	3051:31:97599:97599	1239409	4	True				
ANR	1239417	Statement	data	3051:33:97601:97604	1239409	5	True				
ANR	1239418	Statement	","	3051:37:97605:97605	1239409	6	True				
ANR	1239419	Statement	"""%Y-%m-%dT%H:%M:%S"""	3051:39:97607:97625	1239409	7	True				
ANR	1239420	Statement	","	3051:58:97626:97626	1239409	8	True				
ANR	1239421	Statement	style	3051:60:97628:97632	1239409	9	True				
ANR	1239422	Statement	","	3051:65:97633:97633	1239409	10	True				
ANR	1239423	Statement	parent	3051:67:97635:97640	1239409	11	True				
ANR	1239424	Statement	TSRMLS_CC	3051:74:97642:97650	1239409	12	True				
ANR	1239425	Statement	)	3051:83:97651:97651	1239409	13	True				
ANR	1239426	ExpressionStatement		3051:84:97652:97652	1239409	14	True				
ANR	1239427	ReturnType	static xmlNodePtr		1239409	1					
ANR	1239428	Identifier	to_xml_datetime		1239409	2					
ANR	1239429	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1239409	3					
ANR	1239430	Parameter	encodeTypePtr type	3049:34:97494:97511	1239409	0	True				
ANR	1239431	ParameterType	encodeTypePtr		1239409	0					
ANR	1239432	Identifier	type		1239409	1					
ANR	1239433	Parameter	zval * data	3049:54:97514:97523	1239409	1	True				
ANR	1239434	ParameterType	zval *		1239409	0					
ANR	1239435	Identifier	data		1239409	1					
ANR	1239436	Parameter	int style	3049:66:97526:97534	1239409	2	True				
ANR	1239437	ParameterType	int		1239409	0					
ANR	1239438	Identifier	style		1239409	1					
ANR	1239439	Parameter	xmlNodePtr parent TSRMLS_DC	3049:77:97537:97563	1239409	3	True				
ANR	1239440	ParameterType	xmlNodePtr parent		1239409	0					
ANR	1239441	Identifier	TSRMLS_DC		1239409	1					
ANR	1239442	CFGEntryNode	ENTRY		1239409		True				
ANR	1239443	CFGExitNode	EXIT		1239409		True				
ANR	1239444	Symbol	data		1239409						
ANR	1239445	Symbol	style		1239409						
ANR	1239446	Symbol	type		1239409						
ANR	1239447	Symbol	TSRMLS_DC		1239409						
ANR	1239448	Function	to_xml_time	3054:0:97657:97865							
ANR	1239449	FunctionDef	"to_xml_time (encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1239448	0					
ANR	1239450	CompoundStatement		3055:0:97759:97865	1239448	0					
ANR	1239451	Statement	return	3057:1:97789:97794	1239448	0	True				
ANR	1239452	Statement	to_xml_datetime_ex	3057:8:97796:97813	1239448	1	True				
ANR	1239453	Statement	(	3057:26:97814:97814	1239448	2	True				
ANR	1239454	Statement	type	3057:27:97815:97818	1239448	3	True				
ANR	1239455	Statement	","	3057:31:97819:97819	1239448	4	True				
ANR	1239456	Statement	data	3057:33:97821:97824	1239448	5	True				
ANR	1239457	Statement	","	3057:37:97825:97825	1239448	6	True				
ANR	1239458	Statement	"""%H:%M:%S"""	3057:39:97827:97836	1239448	7	True				
ANR	1239459	Statement	","	3057:49:97837:97837	1239448	8	True				
ANR	1239460	Statement	style	3057:51:97839:97843	1239448	9	True				
ANR	1239461	Statement	","	3057:56:97844:97844	1239448	10	True				
ANR	1239462	Statement	parent	3057:58:97846:97851	1239448	11	True				
ANR	1239463	Statement	TSRMLS_CC	3057:65:97853:97861	1239448	12	True				
ANR	1239464	Statement	)	3057:74:97862:97862	1239448	13	True				
ANR	1239465	ExpressionStatement		3057:75:97863:97863	1239448	14	True				
ANR	1239466	ReturnType	static xmlNodePtr		1239448	1					
ANR	1239467	Identifier	to_xml_time		1239448	2					
ANR	1239468	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1239448	3					
ANR	1239469	Parameter	encodeTypePtr type	3054:30:97687:97704	1239448	0	True				
ANR	1239470	ParameterType	encodeTypePtr		1239448	0					
ANR	1239471	Identifier	type		1239448	1					
ANR	1239472	Parameter	zval * data	3054:50:97707:97716	1239448	1	True				
ANR	1239473	ParameterType	zval *		1239448	0					
ANR	1239474	Identifier	data		1239448	1					
ANR	1239475	Parameter	int style	3054:62:97719:97727	1239448	2	True				
ANR	1239476	ParameterType	int		1239448	0					
ANR	1239477	Identifier	style		1239448	1					
ANR	1239478	Parameter	xmlNodePtr parent TSRMLS_DC	3054:73:97730:97756	1239448	3	True				
ANR	1239479	ParameterType	xmlNodePtr parent		1239448	0					
ANR	1239480	Identifier	TSRMLS_DC		1239448	1					
ANR	1239481	CFGEntryNode	ENTRY		1239448		True				
ANR	1239482	CFGExitNode	EXIT		1239448		True				
ANR	1239483	Symbol	data		1239448						
ANR	1239484	Symbol	style		1239448						
ANR	1239485	Symbol	type		1239448						
ANR	1239486	Symbol	TSRMLS_DC		1239448						
ANR	1239487	Function	to_xml_date	3060:0:97868:98049							
ANR	1239488	FunctionDef	"to_xml_date (encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1239487	0					
ANR	1239489	CompoundStatement		3061:0:97970:98049	1239487	0					
ANR	1239490	Statement	return	3062:1:97973:97978	1239487	0	True				
ANR	1239491	Statement	to_xml_datetime_ex	3062:8:97980:97997	1239487	1	True				
ANR	1239492	Statement	(	3062:26:97998:97998	1239487	2	True				
ANR	1239493	Statement	type	3062:27:97999:98002	1239487	3	True				
ANR	1239494	Statement	","	3062:31:98003:98003	1239487	4	True				
ANR	1239495	Statement	data	3062:33:98005:98008	1239487	5	True				
ANR	1239496	Statement	","	3062:37:98009:98009	1239487	6	True				
ANR	1239497	Statement	"""%Y-%m-%d"""	3062:39:98011:98020	1239487	7	True				
ANR	1239498	Statement	","	3062:49:98021:98021	1239487	8	True				
ANR	1239499	Statement	style	3062:51:98023:98027	1239487	9	True				
ANR	1239500	Statement	","	3062:56:98028:98028	1239487	10	True				
ANR	1239501	Statement	parent	3062:58:98030:98035	1239487	11	True				
ANR	1239502	Statement	TSRMLS_CC	3062:65:98037:98045	1239487	12	True				
ANR	1239503	Statement	)	3062:74:98046:98046	1239487	13	True				
ANR	1239504	ExpressionStatement		3062:75:98047:98047	1239487	14	True				
ANR	1239505	ReturnType	static xmlNodePtr		1239487	1					
ANR	1239506	Identifier	to_xml_date		1239487	2					
ANR	1239507	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1239487	3					
ANR	1239508	Parameter	encodeTypePtr type	3060:30:97898:97915	1239487	0	True				
ANR	1239509	ParameterType	encodeTypePtr		1239487	0					
ANR	1239510	Identifier	type		1239487	1					
ANR	1239511	Parameter	zval * data	3060:50:97918:97927	1239487	1	True				
ANR	1239512	ParameterType	zval *		1239487	0					
ANR	1239513	Identifier	data		1239487	1					
ANR	1239514	Parameter	int style	3060:62:97930:97938	1239487	2	True				
ANR	1239515	ParameterType	int		1239487	0					
ANR	1239516	Identifier	style		1239487	1					
ANR	1239517	Parameter	xmlNodePtr parent TSRMLS_DC	3060:73:97941:97967	1239487	3	True				
ANR	1239518	ParameterType	xmlNodePtr parent		1239487	0					
ANR	1239519	Identifier	TSRMLS_DC		1239487	1					
ANR	1239520	CFGEntryNode	ENTRY		1239487		True				
ANR	1239521	CFGExitNode	EXIT		1239487		True				
ANR	1239522	Symbol	data		1239487						
ANR	1239523	Symbol	style		1239487						
ANR	1239524	Symbol	type		1239487						
ANR	1239525	Symbol	TSRMLS_DC		1239487						
ANR	1239526	Function	to_xml_gyearmonth	3065:0:98052:98236							
ANR	1239527	FunctionDef	"to_xml_gyearmonth (encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1239526	0					
ANR	1239528	CompoundStatement		3066:0:98160:98236	1239526	0					
ANR	1239529	Statement	return	3067:1:98163:98168	1239526	0	True				
ANR	1239530	Statement	to_xml_datetime_ex	3067:8:98170:98187	1239526	1	True				
ANR	1239531	Statement	(	3067:26:98188:98188	1239526	2	True				
ANR	1239532	Statement	type	3067:27:98189:98192	1239526	3	True				
ANR	1239533	Statement	","	3067:31:98193:98193	1239526	4	True				
ANR	1239534	Statement	data	3067:33:98195:98198	1239526	5	True				
ANR	1239535	Statement	","	3067:37:98199:98199	1239526	6	True				
ANR	1239536	Statement	"""%Y-%m"""	3067:39:98201:98207	1239526	7	True				
ANR	1239537	Statement	","	3067:46:98208:98208	1239526	8	True				
ANR	1239538	Statement	style	3067:48:98210:98214	1239526	9	True				
ANR	1239539	Statement	","	3067:53:98215:98215	1239526	10	True				
ANR	1239540	Statement	parent	3067:55:98217:98222	1239526	11	True				
ANR	1239541	Statement	TSRMLS_CC	3067:62:98224:98232	1239526	12	True				
ANR	1239542	Statement	)	3067:71:98233:98233	1239526	13	True				
ANR	1239543	ExpressionStatement		3067:72:98234:98234	1239526	14	True				
ANR	1239544	ReturnType	static xmlNodePtr		1239526	1					
ANR	1239545	Identifier	to_xml_gyearmonth		1239526	2					
ANR	1239546	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1239526	3					
ANR	1239547	Parameter	encodeTypePtr type	3065:36:98088:98105	1239526	0	True				
ANR	1239548	ParameterType	encodeTypePtr		1239526	0					
ANR	1239549	Identifier	type		1239526	1					
ANR	1239550	Parameter	zval * data	3065:56:98108:98117	1239526	1	True				
ANR	1239551	ParameterType	zval *		1239526	0					
ANR	1239552	Identifier	data		1239526	1					
ANR	1239553	Parameter	int style	3065:68:98120:98128	1239526	2	True				
ANR	1239554	ParameterType	int		1239526	0					
ANR	1239555	Identifier	style		1239526	1					
ANR	1239556	Parameter	xmlNodePtr parent TSRMLS_DC	3065:79:98131:98157	1239526	3	True				
ANR	1239557	ParameterType	xmlNodePtr parent		1239526	0					
ANR	1239558	Identifier	TSRMLS_DC		1239526	1					
ANR	1239559	CFGEntryNode	ENTRY		1239526		True				
ANR	1239560	CFGExitNode	EXIT		1239526		True				
ANR	1239561	Symbol	data		1239526						
ANR	1239562	Symbol	style		1239526						
ANR	1239563	Symbol	type		1239526						
ANR	1239564	Symbol	TSRMLS_DC		1239526						
ANR	1239565	Function	to_xml_gyear	3070:0:98239:98415							
ANR	1239566	FunctionDef	"to_xml_gyear (encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1239565	0					
ANR	1239567	CompoundStatement		3071:0:98342:98415	1239565	0					
ANR	1239568	Statement	return	3072:1:98345:98350	1239565	0	True				
ANR	1239569	Statement	to_xml_datetime_ex	3072:8:98352:98369	1239565	1	True				
ANR	1239570	Statement	(	3072:26:98370:98370	1239565	2	True				
ANR	1239571	Statement	type	3072:27:98371:98374	1239565	3	True				
ANR	1239572	Statement	","	3072:31:98375:98375	1239565	4	True				
ANR	1239573	Statement	data	3072:33:98377:98380	1239565	5	True				
ANR	1239574	Statement	","	3072:37:98381:98381	1239565	6	True				
ANR	1239575	Statement	"""%Y"""	3072:39:98383:98386	1239565	7	True				
ANR	1239576	Statement	","	3072:43:98387:98387	1239565	8	True				
ANR	1239577	Statement	style	3072:45:98389:98393	1239565	9	True				
ANR	1239578	Statement	","	3072:50:98394:98394	1239565	10	True				
ANR	1239579	Statement	parent	3072:52:98396:98401	1239565	11	True				
ANR	1239580	Statement	TSRMLS_CC	3072:59:98403:98411	1239565	12	True				
ANR	1239581	Statement	)	3072:68:98412:98412	1239565	13	True				
ANR	1239582	ExpressionStatement		3072:69:98413:98413	1239565	14	True				
ANR	1239583	ReturnType	static xmlNodePtr		1239565	1					
ANR	1239584	Identifier	to_xml_gyear		1239565	2					
ANR	1239585	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1239565	3					
ANR	1239586	Parameter	encodeTypePtr type	3070:31:98270:98287	1239565	0	True				
ANR	1239587	ParameterType	encodeTypePtr		1239565	0					
ANR	1239588	Identifier	type		1239565	1					
ANR	1239589	Parameter	zval * data	3070:51:98290:98299	1239565	1	True				
ANR	1239590	ParameterType	zval *		1239565	0					
ANR	1239591	Identifier	data		1239565	1					
ANR	1239592	Parameter	int style	3070:63:98302:98310	1239565	2	True				
ANR	1239593	ParameterType	int		1239565	0					
ANR	1239594	Identifier	style		1239565	1					
ANR	1239595	Parameter	xmlNodePtr parent TSRMLS_DC	3070:74:98313:98339	1239565	3	True				
ANR	1239596	ParameterType	xmlNodePtr parent		1239565	0					
ANR	1239597	Identifier	TSRMLS_DC		1239565	1					
ANR	1239598	CFGEntryNode	ENTRY		1239565		True				
ANR	1239599	CFGExitNode	EXIT		1239565		True				
ANR	1239600	Symbol	data		1239565						
ANR	1239601	Symbol	style		1239565						
ANR	1239602	Symbol	type		1239565						
ANR	1239603	Symbol	TSRMLS_DC		1239565						
ANR	1239604	Function	to_xml_gmonthday	3075:0:98418:98603							
ANR	1239605	FunctionDef	"to_xml_gmonthday (encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1239604	0					
ANR	1239606	CompoundStatement		3076:0:98525:98603	1239604	0					
ANR	1239607	Statement	return	3077:1:98528:98533	1239604	0	True				
ANR	1239608	Statement	to_xml_datetime_ex	3077:8:98535:98552	1239604	1	True				
ANR	1239609	Statement	(	3077:26:98553:98553	1239604	2	True				
ANR	1239610	Statement	type	3077:27:98554:98557	1239604	3	True				
ANR	1239611	Statement	","	3077:31:98558:98558	1239604	4	True				
ANR	1239612	Statement	data	3077:33:98560:98563	1239604	5	True				
ANR	1239613	Statement	","	3077:37:98564:98564	1239604	6	True				
ANR	1239614	Statement	"""--%m-%d"""	3077:39:98566:98574	1239604	7	True				
ANR	1239615	Statement	","	3077:48:98575:98575	1239604	8	True				
ANR	1239616	Statement	style	3077:50:98577:98581	1239604	9	True				
ANR	1239617	Statement	","	3077:55:98582:98582	1239604	10	True				
ANR	1239618	Statement	parent	3077:57:98584:98589	1239604	11	True				
ANR	1239619	Statement	TSRMLS_CC	3077:64:98591:98599	1239604	12	True				
ANR	1239620	Statement	)	3077:73:98600:98600	1239604	13	True				
ANR	1239621	ExpressionStatement		3077:74:98601:98601	1239604	14	True				
ANR	1239622	ReturnType	static xmlNodePtr		1239604	1					
ANR	1239623	Identifier	to_xml_gmonthday		1239604	2					
ANR	1239624	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1239604	3					
ANR	1239625	Parameter	encodeTypePtr type	3075:35:98453:98470	1239604	0	True				
ANR	1239626	ParameterType	encodeTypePtr		1239604	0					
ANR	1239627	Identifier	type		1239604	1					
ANR	1239628	Parameter	zval * data	3075:55:98473:98482	1239604	1	True				
ANR	1239629	ParameterType	zval *		1239604	0					
ANR	1239630	Identifier	data		1239604	1					
ANR	1239631	Parameter	int style	3075:67:98485:98493	1239604	2	True				
ANR	1239632	ParameterType	int		1239604	0					
ANR	1239633	Identifier	style		1239604	1					
ANR	1239634	Parameter	xmlNodePtr parent TSRMLS_DC	3075:78:98496:98522	1239604	3	True				
ANR	1239635	ParameterType	xmlNodePtr parent		1239604	0					
ANR	1239636	Identifier	TSRMLS_DC		1239604	1					
ANR	1239637	CFGEntryNode	ENTRY		1239604		True				
ANR	1239638	CFGExitNode	EXIT		1239604		True				
ANR	1239639	Symbol	data		1239604						
ANR	1239640	Symbol	style		1239604						
ANR	1239641	Symbol	type		1239604						
ANR	1239642	Symbol	TSRMLS_DC		1239604						
ANR	1239643	Function	to_xml_gday	3080:0:98606:98784							
ANR	1239644	FunctionDef	"to_xml_gday (encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1239643	0					
ANR	1239645	CompoundStatement		3081:0:98708:98784	1239643	0					
ANR	1239646	Statement	return	3082:1:98711:98716	1239643	0	True				
ANR	1239647	Statement	to_xml_datetime_ex	3082:8:98718:98735	1239643	1	True				
ANR	1239648	Statement	(	3082:26:98736:98736	1239643	2	True				
ANR	1239649	Statement	type	3082:27:98737:98740	1239643	3	True				
ANR	1239650	Statement	","	3082:31:98741:98741	1239643	4	True				
ANR	1239651	Statement	data	3082:33:98743:98746	1239643	5	True				
ANR	1239652	Statement	","	3082:37:98747:98747	1239643	6	True				
ANR	1239653	Statement	"""---%d"""	3082:39:98749:98755	1239643	7	True				
ANR	1239654	Statement	","	3082:46:98756:98756	1239643	8	True				
ANR	1239655	Statement	style	3082:48:98758:98762	1239643	9	True				
ANR	1239656	Statement	","	3082:53:98763:98763	1239643	10	True				
ANR	1239657	Statement	parent	3082:55:98765:98770	1239643	11	True				
ANR	1239658	Statement	TSRMLS_CC	3082:62:98772:98780	1239643	12	True				
ANR	1239659	Statement	)	3082:71:98781:98781	1239643	13	True				
ANR	1239660	ExpressionStatement		3082:72:98782:98782	1239643	14	True				
ANR	1239661	ReturnType	static xmlNodePtr		1239643	1					
ANR	1239662	Identifier	to_xml_gday		1239643	2					
ANR	1239663	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1239643	3					
ANR	1239664	Parameter	encodeTypePtr type	3080:30:98636:98653	1239643	0	True				
ANR	1239665	ParameterType	encodeTypePtr		1239643	0					
ANR	1239666	Identifier	type		1239643	1					
ANR	1239667	Parameter	zval * data	3080:50:98656:98665	1239643	1	True				
ANR	1239668	ParameterType	zval *		1239643	0					
ANR	1239669	Identifier	data		1239643	1					
ANR	1239670	Parameter	int style	3080:62:98668:98676	1239643	2	True				
ANR	1239671	ParameterType	int		1239643	0					
ANR	1239672	Identifier	style		1239643	1					
ANR	1239673	Parameter	xmlNodePtr parent TSRMLS_DC	3080:73:98679:98705	1239643	3	True				
ANR	1239674	ParameterType	xmlNodePtr parent		1239643	0					
ANR	1239675	Identifier	TSRMLS_DC		1239643	1					
ANR	1239676	CFGEntryNode	ENTRY		1239643		True				
ANR	1239677	CFGExitNode	EXIT		1239643		True				
ANR	1239678	Symbol	data		1239643						
ANR	1239679	Symbol	style		1239643						
ANR	1239680	Symbol	type		1239643						
ANR	1239681	Symbol	TSRMLS_DC		1239643						
ANR	1239682	Function	to_xml_gmonth	3085:0:98787:98968							
ANR	1239683	FunctionDef	"to_xml_gmonth (encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1239682	0					
ANR	1239684	CompoundStatement		3086:0:98891:98968	1239682	0					
ANR	1239685	Statement	return	3087:1:98894:98899	1239682	0	True				
ANR	1239686	Statement	to_xml_datetime_ex	3087:8:98901:98918	1239682	1	True				
ANR	1239687	Statement	(	3087:26:98919:98919	1239682	2	True				
ANR	1239688	Statement	type	3087:27:98920:98923	1239682	3	True				
ANR	1239689	Statement	","	3087:31:98924:98924	1239682	4	True				
ANR	1239690	Statement	data	3087:33:98926:98929	1239682	5	True				
ANR	1239691	Statement	","	3087:37:98930:98930	1239682	6	True				
ANR	1239692	Statement	"""--%m--"""	3087:39:98932:98939	1239682	7	True				
ANR	1239693	Statement	","	3087:47:98940:98940	1239682	8	True				
ANR	1239694	Statement	style	3087:49:98942:98946	1239682	9	True				
ANR	1239695	Statement	","	3087:54:98947:98947	1239682	10	True				
ANR	1239696	Statement	parent	3087:56:98949:98954	1239682	11	True				
ANR	1239697	Statement	TSRMLS_CC	3087:63:98956:98964	1239682	12	True				
ANR	1239698	Statement	)	3087:72:98965:98965	1239682	13	True				
ANR	1239699	ExpressionStatement		3087:73:98966:98966	1239682	14	True				
ANR	1239700	ReturnType	static xmlNodePtr		1239682	1					
ANR	1239701	Identifier	to_xml_gmonth		1239682	2					
ANR	1239702	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1239682	3					
ANR	1239703	Parameter	encodeTypePtr type	3085:32:98819:98836	1239682	0	True				
ANR	1239704	ParameterType	encodeTypePtr		1239682	0					
ANR	1239705	Identifier	type		1239682	1					
ANR	1239706	Parameter	zval * data	3085:52:98839:98848	1239682	1	True				
ANR	1239707	ParameterType	zval *		1239682	0					
ANR	1239708	Identifier	data		1239682	1					
ANR	1239709	Parameter	int style	3085:64:98851:98859	1239682	2	True				
ANR	1239710	ParameterType	int		1239682	0					
ANR	1239711	Identifier	style		1239682	1					
ANR	1239712	Parameter	xmlNodePtr parent TSRMLS_DC	3085:75:98862:98888	1239682	3	True				
ANR	1239713	ParameterType	xmlNodePtr parent		1239682	0					
ANR	1239714	Identifier	TSRMLS_DC		1239682	1					
ANR	1239715	CFGEntryNode	ENTRY		1239682		True				
ANR	1239716	CFGExitNode	EXIT		1239682		True				
ANR	1239717	Symbol	data		1239682						
ANR	1239718	Symbol	style		1239682						
ANR	1239719	Symbol	type		1239682						
ANR	1239720	Symbol	TSRMLS_DC		1239682						
ANR	1239721	Function	to_zval_list	3090:0:98971:99102							
ANR	1239722	FunctionDef	"to_zval_list (encodeTypePtr enc , xmlNodePtr data TSRMLS_DC)"		1239721	0					
ANR	1239723	CompoundStatement		3090:72:99043:99102	1239721	0					
ANR	1239724	Statement	return	3092:1:99057:99062	1239721	0	True				
ANR	1239725	Statement	to_zval_stringc	3092:8:99064:99078	1239721	1	True				
ANR	1239726	Statement	(	3092:23:99079:99079	1239721	2	True				
ANR	1239727	Statement	enc	3092:24:99080:99082	1239721	3	True				
ANR	1239728	Statement	","	3092:27:99083:99083	1239721	4	True				
ANR	1239729	Statement	data	3092:29:99085:99088	1239721	5	True				
ANR	1239730	Statement	TSRMLS_CC	3092:34:99090:99098	1239721	6	True				
ANR	1239731	Statement	)	3092:43:99099:99099	1239721	7	True				
ANR	1239732	ExpressionStatement		3092:44:99100:99100	1239721	8	True				
ANR	1239733	ReturnType	static zval *		1239721	1					
ANR	1239734	Identifier	to_zval_list		1239721	2					
ANR	1239735	ParameterList	"encodeTypePtr enc , xmlNodePtr data TSRMLS_DC"		1239721	3					
ANR	1239736	Parameter	encodeTypePtr enc	3090:26:98997:99013	1239721	0	True				
ANR	1239737	ParameterType	encodeTypePtr		1239721	0					
ANR	1239738	Identifier	enc		1239721	1					
ANR	1239739	Parameter	xmlNodePtr data TSRMLS_DC	3090:45:99016:99040	1239721	1	True				
ANR	1239740	ParameterType	xmlNodePtr data		1239721	0					
ANR	1239741	Identifier	TSRMLS_DC		1239721	1					
ANR	1239742	CFGEntryNode	ENTRY		1239721		True				
ANR	1239743	CFGExitNode	EXIT		1239721		True				
ANR	1239744	Symbol	enc		1239721						
ANR	1239745	Symbol	TSRMLS_DC		1239721						
ANR	1239746	Function	to_xml_list	3095:0:99105:101537							
ANR	1239747	FunctionDef	"to_xml_list (encodeTypePtr enc , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1239746	0					
ANR	1239748	CompoundStatement		3095:101:99206:101537	1239746	0					
ANR	1239749	IdentifierDeclStatement	xmlNodePtr ret ;	3096:1:99209:99223	1239746	0	True				
ANR	1239750	IdentifierDecl	ret		1239746	0					
ANR	1239751	IdentifierDeclType	xmlNodePtr		1239746	0					
ANR	1239752	Identifier	ret		1239746	1					
ANR	1239753	IdentifierDeclStatement	encodePtr list_enc = NULL ;	3097:1:99226:99251	1239746	1	True				
ANR	1239754	IdentifierDecl	list_enc = NULL		1239746	0					
ANR	1239755	IdentifierDeclType	encodePtr		1239746	0					
ANR	1239756	Identifier	list_enc		1239746	1					
ANR	1239757	AssignmentExpression	list_enc = NULL		1239746	2		=			
ANR	1239758	Identifier	NULL		1239746	0					
ANR	1239759	Identifier	NULL		1239746	1					
ANR	1239760	IfStatement	if ( enc -> sdl_type && enc -> sdl_type -> kind == XSD_TYPEKIND_LIST && enc -> sdl_type -> elements )		1239746	2					
ANR	1239761	Condition	enc -> sdl_type && enc -> sdl_type -> kind == XSD_TYPEKIND_LIST && enc -> sdl_type -> elements	3099:5:99259:99342	1239746	0	True				
ANR	1239762	AndExpression	enc -> sdl_type && enc -> sdl_type -> kind == XSD_TYPEKIND_LIST && enc -> sdl_type -> elements		1239746	0		&&			
ANR	1239763	PtrMemberAccess	enc -> sdl_type		1239746	0					
ANR	1239764	Identifier	enc		1239746	0					
ANR	1239765	Identifier	sdl_type		1239746	1					
ANR	1239766	AndExpression	enc -> sdl_type -> kind == XSD_TYPEKIND_LIST && enc -> sdl_type -> elements		1239746	1		&&			
ANR	1239767	EqualityExpression	enc -> sdl_type -> kind == XSD_TYPEKIND_LIST		1239746	0		==			
ANR	1239768	PtrMemberAccess	enc -> sdl_type -> kind		1239746	0					
ANR	1239769	PtrMemberAccess	enc -> sdl_type		1239746	0					
ANR	1239770	Identifier	enc		1239746	0					
ANR	1239771	Identifier	sdl_type		1239746	1					
ANR	1239772	Identifier	kind		1239746	1					
ANR	1239773	Identifier	XSD_TYPEKIND_LIST		1239746	1					
ANR	1239774	PtrMemberAccess	enc -> sdl_type -> elements		1239746	1					
ANR	1239775	PtrMemberAccess	enc -> sdl_type		1239746	0					
ANR	1239776	Identifier	enc		1239746	0					
ANR	1239777	Identifier	sdl_type		1239746	1					
ANR	1239778	Identifier	elements		1239746	1					
ANR	1239779	CompoundStatement		6:2:142:158	1239746	1					
ANR	1239780	IdentifierDeclStatement	sdlTypePtr * type ;	3100:2:99349:99365	1239746	0	True				
ANR	1239781	IdentifierDecl	* type		1239746	0					
ANR	1239782	IdentifierDeclType	sdlTypePtr *		1239746	0					
ANR	1239783	Identifier	type		1239746	1					
ANR	1239784	ExpressionStatement	zend_hash_internal_pointer_reset ( enc -> sdl_type -> elements )	3102:2:99370:99427	1239746	1	True				
ANR	1239785	CallExpression	zend_hash_internal_pointer_reset ( enc -> sdl_type -> elements )		1239746	0					
ANR	1239786	Callee	zend_hash_internal_pointer_reset		1239746	0					
ANR	1239787	Identifier	zend_hash_internal_pointer_reset		1239746	0					
ANR	1239788	ArgumentList	enc -> sdl_type -> elements		1239746	1					
ANR	1239789	Argument	enc -> sdl_type -> elements		1239746	0					
ANR	1239790	PtrMemberAccess	enc -> sdl_type -> elements		1239746	0					
ANR	1239791	PtrMemberAccess	enc -> sdl_type		1239746	0					
ANR	1239792	Identifier	enc		1239746	0					
ANR	1239793	Identifier	sdl_type		1239746	1					
ANR	1239794	Identifier	elements		1239746	1					
ANR	1239795	IfStatement	"if ( zend_hash_get_current_data ( enc -> sdl_type -> elements , ( void * * ) & type ) == SUCCESS )"		1239746	2					
ANR	1239796	Condition	"zend_hash_get_current_data ( enc -> sdl_type -> elements , ( void * * ) & type ) == SUCCESS"	3103:6:99435:99511	1239746	0	True				
ANR	1239797	EqualityExpression	"zend_hash_get_current_data ( enc -> sdl_type -> elements , ( void * * ) & type ) == SUCCESS"		1239746	0		==			
ANR	1239798	CallExpression	"zend_hash_get_current_data ( enc -> sdl_type -> elements , ( void * * ) & type )"		1239746	0					
ANR	1239799	Callee	zend_hash_get_current_data		1239746	0					
ANR	1239800	Identifier	zend_hash_get_current_data		1239746	0					
ANR	1239801	ArgumentList	enc -> sdl_type -> elements		1239746	1					
ANR	1239802	Argument	enc -> sdl_type -> elements		1239746	0					
ANR	1239803	PtrMemberAccess	enc -> sdl_type -> elements		1239746	0					
ANR	1239804	PtrMemberAccess	enc -> sdl_type		1239746	0					
ANR	1239805	Identifier	enc		1239746	0					
ANR	1239806	Identifier	sdl_type		1239746	1					
ANR	1239807	Identifier	elements		1239746	1					
ANR	1239808	Argument	( void * * ) & type		1239746	1					
ANR	1239809	CastExpression	( void * * ) & type		1239746	0					
ANR	1239810	CastTarget	void * *		1239746	0					
ANR	1239811	UnaryOperationExpression	& type		1239746	1					
ANR	1239812	UnaryOperator	&		1239746	0					
ANR	1239813	Identifier	type		1239746	1					
ANR	1239814	Identifier	SUCCESS		1239746	1					
ANR	1239815	CompoundStatement		9:85:307:307	1239746	1					
ANR	1239816	ExpressionStatement	list_enc = ( * type ) -> encode	3104:3:99519:99545	1239746	0	True				
ANR	1239817	AssignmentExpression	list_enc = ( * type ) -> encode		1239746	0		=			
ANR	1239818	Identifier	list_enc		1239746	0					
ANR	1239819	PtrMemberAccess	( * type ) -> encode		1239746	1					
ANR	1239820	UnaryOperationExpression	* type		1239746	0					
ANR	1239821	UnaryOperator	*		1239746	0					
ANR	1239822	Identifier	type		1239746	1					
ANR	1239823	Identifier	encode		1239746	1					
ANR	1239824	ExpressionStatement	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	3108:1:99556:99597	1239746	3	True				
ANR	1239825	AssignmentExpression	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1239746	0		=			
ANR	1239826	Identifier	ret		1239746	0					
ANR	1239827	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1239746	1					
ANR	1239828	Callee	xmlNewNode		1239746	0					
ANR	1239829	Identifier	xmlNewNode		1239746	0					
ANR	1239830	ArgumentList	NULL		1239746	1					
ANR	1239831	Argument	NULL		1239746	0					
ANR	1239832	Identifier	NULL		1239746	0					
ANR	1239833	Argument	"BAD_CAST ( ""BOGUS"" )"		1239746	1					
ANR	1239834	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1239746	0					
ANR	1239835	Callee	BAD_CAST		1239746	0					
ANR	1239836	Identifier	BAD_CAST		1239746	0					
ANR	1239837	ArgumentList	"""BOGUS"""		1239746	1					
ANR	1239838	Argument	"""BOGUS"""		1239746	0					
ANR	1239839	PrimaryExpression	"""BOGUS"""		1239746	0					
ANR	1239840	ExpressionStatement	"xmlAddChild ( parent , ret )"	3109:1:99600:99624	1239746	4	True				
ANR	1239841	CallExpression	"xmlAddChild ( parent , ret )"		1239746	0					
ANR	1239842	Callee	xmlAddChild		1239746	0					
ANR	1239843	Identifier	xmlAddChild		1239746	0					
ANR	1239844	ArgumentList	parent		1239746	1					
ANR	1239845	Argument	parent		1239746	0					
ANR	1239846	Identifier	parent		1239746	0					
ANR	1239847	Argument	ret		1239746	1					
ANR	1239848	Identifier	ret		1239746	0					
ANR	1239849	ExpressionStatement	"FIND_ZVAL_NULL ( data , ret , style )"	3110:1:99627:99659	1239746	5	True				
ANR	1239850	CallExpression	"FIND_ZVAL_NULL ( data , ret , style )"		1239746	0					
ANR	1239851	Callee	FIND_ZVAL_NULL		1239746	0					
ANR	1239852	Identifier	FIND_ZVAL_NULL		1239746	0					
ANR	1239853	ArgumentList	data		1239746	1					
ANR	1239854	Argument	data		1239746	0					
ANR	1239855	Identifier	data		1239746	0					
ANR	1239856	Argument	ret		1239746	1					
ANR	1239857	Identifier	ret		1239746	0					
ANR	1239858	Argument	style		1239746	2					
ANR	1239859	Identifier	style		1239746	0					
ANR	1239860	IfStatement	if ( Z_TYPE_P ( data ) == IS_ARRAY )		1239746	6					
ANR	1239861	Condition	Z_TYPE_P ( data ) == IS_ARRAY	3111:5:99666:99691	1239746	0	True				
ANR	1239862	EqualityExpression	Z_TYPE_P ( data ) == IS_ARRAY		1239746	0		==			
ANR	1239863	CallExpression	Z_TYPE_P ( data )		1239746	0					
ANR	1239864	Callee	Z_TYPE_P		1239746	0					
ANR	1239865	Identifier	Z_TYPE_P		1239746	0					
ANR	1239866	ArgumentList	data		1239746	1					
ANR	1239867	Argument	data		1239746	0					
ANR	1239868	Identifier	data		1239746	0					
ANR	1239869	Identifier	IS_ARRAY		1239746	1					
ANR	1239870	CompoundStatement		20:2:529:561	1239746	1					
ANR	1239871	IdentifierDeclStatement	zval * * tmp ;	3112:2:99698:99708	1239746	0	True				
ANR	1239872	IdentifierDecl	* * tmp		1239746	0					
ANR	1239873	IdentifierDeclType	zval * *		1239746	0					
ANR	1239874	Identifier	tmp		1239746	1					
ANR	1239875	IdentifierDeclStatement	smart_str list = { 0 } ;	3113:2:99712:99732	1239746	1	True				
ANR	1239876	IdentifierDecl	list = { 0 }		1239746	0					
ANR	1239877	IdentifierDeclType	smart_str		1239746	0					
ANR	1239878	Identifier	list		1239746	1					
ANR	1239879	AssignmentExpression	list = { 0 }		1239746	2		=			
ANR	1239880	Identifier	list		1239746	0					
ANR	1239881	InitializerList	0		1239746	1					
ANR	1239882	PrimaryExpression	0		1239746	0					
ANR	1239883	IdentifierDeclStatement	HashTable * ht = Z_ARRVAL_P ( data ) ;	3114:2:99736:99768	1239746	2	True				
ANR	1239884	IdentifierDecl	* ht = Z_ARRVAL_P ( data )		1239746	0					
ANR	1239885	IdentifierDeclType	HashTable *		1239746	0					
ANR	1239886	Identifier	ht		1239746	1					
ANR	1239887	AssignmentExpression	* ht = Z_ARRVAL_P ( data )		1239746	2		=			
ANR	1239888	Identifier	ht		1239746	0					
ANR	1239889	CallExpression	Z_ARRVAL_P ( data )		1239746	1					
ANR	1239890	Callee	Z_ARRVAL_P		1239746	0					
ANR	1239891	Identifier	Z_ARRVAL_P		1239746	0					
ANR	1239892	ArgumentList	data		1239746	1					
ANR	1239893	Argument	data		1239746	0					
ANR	1239894	Identifier	data		1239746	0					
ANR	1239895	ExpressionStatement	zend_hash_internal_pointer_reset ( ht )	3116:2:99773:99809	1239746	3	True				
ANR	1239896	CallExpression	zend_hash_internal_pointer_reset ( ht )		1239746	0					
ANR	1239897	Callee	zend_hash_internal_pointer_reset		1239746	0					
ANR	1239898	Identifier	zend_hash_internal_pointer_reset		1239746	0					
ANR	1239899	ArgumentList	ht		1239746	1					
ANR	1239900	Argument	ht		1239746	0					
ANR	1239901	Identifier	ht		1239746	0					
ANR	1239902	WhileStatement	"while ( zend_hash_get_current_data ( ht , ( void * * ) & tmp ) == SUCCESS )"		1239746	4					
ANR	1239903	Condition	"zend_hash_get_current_data ( ht , ( void * * ) & tmp ) == SUCCESS"	3117:9:99820:99874	1239746	0	True				
ANR	1239904	EqualityExpression	"zend_hash_get_current_data ( ht , ( void * * ) & tmp ) == SUCCESS"		1239746	0		==			
ANR	1239905	CallExpression	"zend_hash_get_current_data ( ht , ( void * * ) & tmp )"		1239746	0					
ANR	1239906	Callee	zend_hash_get_current_data		1239746	0					
ANR	1239907	Identifier	zend_hash_get_current_data		1239746	0					
ANR	1239908	ArgumentList	ht		1239746	1					
ANR	1239909	Argument	ht		1239746	0					
ANR	1239910	Identifier	ht		1239746	0					
ANR	1239911	Argument	( void * * ) & tmp		1239746	1					
ANR	1239912	CastExpression	( void * * ) & tmp		1239746	0					
ANR	1239913	CastTarget	void * *		1239746	0					
ANR	1239914	UnaryOperationExpression	& tmp		1239746	1					
ANR	1239915	UnaryOperator	&		1239746	0					
ANR	1239916	Identifier	tmp		1239746	1					
ANR	1239917	Identifier	SUCCESS		1239746	1					
ANR	1239918	CompoundStatement		23:66:670:670	1239746	1					
ANR	1239919	Statement	xmlNodePtr	3118:3:99882:99891	1239746	0	True				
ANR	1239920	Statement	dummy	3118:14:99893:99897	1239746	1	True				
ANR	1239921	Statement	=	3118:20:99899:99899	1239746	2	True				
ANR	1239922	Statement	master_to_xml	3118:22:99901:99913	1239746	3	True				
ANR	1239923	Statement	(	3118:35:99914:99914	1239746	4	True				
ANR	1239924	Statement	list_enc	3118:36:99915:99922	1239746	5	True				
ANR	1239925	Statement	","	3118:44:99923:99923	1239746	6	True				
ANR	1239926	Statement	*	3118:46:99925:99925	1239746	7	True				
ANR	1239927	Statement	tmp	3118:47:99926:99928	1239746	8	True				
ANR	1239928	Statement	","	3118:50:99929:99929	1239746	9	True				
ANR	1239929	Statement	SOAP_LITERAL	3118:52:99931:99942	1239746	10	True				
ANR	1239930	Statement	","	3118:64:99943:99943	1239746	11	True				
ANR	1239931	Statement	ret	3118:66:99945:99947	1239746	12	True				
ANR	1239932	Statement	TSRMLS_CC	3118:70:99949:99957	1239746	13	True				
ANR	1239933	Statement	)	3118:79:99958:99958	1239746	14	True				
ANR	1239934	ExpressionStatement		3118:80:99959:99959	1239746	15	True				
ANR	1239935	IfStatement	if ( dummy && dummy -> children && dummy -> children -> content )		1239746	16					
ANR	1239936	Condition	dummy && dummy -> children && dummy -> children -> content	3119:7:99968:100019	1239746	0	True				
ANR	1239937	AndExpression	dummy && dummy -> children && dummy -> children -> content		1239746	0		&&			
ANR	1239938	Identifier	dummy		1239746	0					
ANR	1239939	AndExpression	dummy -> children && dummy -> children -> content		1239746	1		&&			
ANR	1239940	PtrMemberAccess	dummy -> children		1239746	0					
ANR	1239941	Identifier	dummy		1239746	0					
ANR	1239942	Identifier	children		1239746	1					
ANR	1239943	PtrMemberAccess	dummy -> children -> content		1239746	1					
ANR	1239944	PtrMemberAccess	dummy -> children		1239746	0					
ANR	1239945	Identifier	dummy		1239746	0					
ANR	1239946	Identifier	children		1239746	1					
ANR	1239947	Identifier	content		1239746	1					
ANR	1239948	CompoundStatement		25:61:815:815	1239746	1					
ANR	1239949	IfStatement	if ( list . len != 0 )		1239746	0					
ANR	1239950	Condition	list . len != 0	3120:8:100032:100044	1239746	0	True				
ANR	1239951	EqualityExpression	list . len != 0		1239746	0		!=			
ANR	1239952	MemberAccess	list . len		1239746	0					
ANR	1239953	Identifier	list		1239746	0					
ANR	1239954	Identifier	len		1239746	1					
ANR	1239955	PrimaryExpression	0		1239746	1					
ANR	1239956	CompoundStatement		26:23:840:840	1239746	1					
ANR	1239957	ExpressionStatement	"smart_str_appendc ( & list , ' ' )"	3121:5:100054:100083	1239746	0	True				
ANR	1239958	CallExpression	"smart_str_appendc ( & list , ' ' )"		1239746	0					
ANR	1239959	Callee	smart_str_appendc		1239746	0					
ANR	1239960	Identifier	smart_str_appendc		1239746	0					
ANR	1239961	ArgumentList	& list		1239746	1					
ANR	1239962	Argument	& list		1239746	0					
ANR	1239963	UnaryOperationExpression	& list		1239746	0					
ANR	1239964	UnaryOperator	&		1239746	0					
ANR	1239965	Identifier	list		1239746	1					
ANR	1239966	Argument	' '		1239746	1					
ANR	1239967	PrimaryExpression	' '		1239746	0					
ANR	1239968	ExpressionStatement	"smart_str_appends ( & list , ( char * ) dummy -> children -> content )"	3123:4:100095:100152	1239746	1	True				
ANR	1239969	CallExpression	"smart_str_appends ( & list , ( char * ) dummy -> children -> content )"		1239746	0					
ANR	1239970	Callee	smart_str_appends		1239746	0					
ANR	1239971	Identifier	smart_str_appends		1239746	0					
ANR	1239972	ArgumentList	& list		1239746	1					
ANR	1239973	Argument	& list		1239746	0					
ANR	1239974	UnaryOperationExpression	& list		1239746	0					
ANR	1239975	UnaryOperator	&		1239746	0					
ANR	1239976	Identifier	list		1239746	1					
ANR	1239977	Argument	( char * ) dummy -> children -> content		1239746	1					
ANR	1239978	CastExpression	( char * ) dummy -> children -> content		1239746	0					
ANR	1239979	CastTarget	char *		1239746	0					
ANR	1239980	PtrMemberAccess	dummy -> children -> content		1239746	1					
ANR	1239981	PtrMemberAccess	dummy -> children		1239746	0					
ANR	1239982	Identifier	dummy		1239746	0					
ANR	1239983	Identifier	children		1239746	1					
ANR	1239984	Identifier	content		1239746	1					
ANR	1239985	ElseStatement	else		1239746	0					
ANR	1239986	CompoundStatement		30:10:957:957	1239746	0					
ANR	1239987	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	3125:4:100170:100231	1239746	0	True				
ANR	1239988	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1239746	0					
ANR	1239989	Callee	soap_error0		1239746	0					
ANR	1239990	Identifier	soap_error0		1239746	0					
ANR	1239991	ArgumentList	E_ERROR		1239746	1					
ANR	1239992	Argument	E_ERROR		1239746	0					
ANR	1239993	Identifier	E_ERROR		1239746	0					
ANR	1239994	Argument	"""Encoding: Violation of encoding rules"""		1239746	1					
ANR	1239995	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1239746	0					
ANR	1239996	ExpressionStatement	xmlUnlinkNode ( dummy )	3127:3:100241:100261	1239746	17	True				
ANR	1239997	CallExpression	xmlUnlinkNode ( dummy )		1239746	0					
ANR	1239998	Callee	xmlUnlinkNode		1239746	0					
ANR	1239999	Identifier	xmlUnlinkNode		1239746	0					
ANR	1240000	ArgumentList	dummy		1239746	1					
ANR	1240001	Argument	dummy		1239746	0					
ANR	1240002	Identifier	dummy		1239746	0					
ANR	1240003	ExpressionStatement	xmlFreeNode ( dummy )	3128:3:100266:100284	1239746	18	True				
ANR	1240004	CallExpression	xmlFreeNode ( dummy )		1239746	0					
ANR	1240005	Callee	xmlFreeNode		1239746	0					
ANR	1240006	Identifier	xmlFreeNode		1239746	0					
ANR	1240007	ArgumentList	dummy		1239746	1					
ANR	1240008	Argument	dummy		1239746	0					
ANR	1240009	Identifier	dummy		1239746	0					
ANR	1240010	ExpressionStatement	zend_hash_move_forward ( ht )	3129:3:100289:100315	1239746	19	True				
ANR	1240011	CallExpression	zend_hash_move_forward ( ht )		1239746	0					
ANR	1240012	Callee	zend_hash_move_forward		1239746	0					
ANR	1240013	Identifier	zend_hash_move_forward		1239746	0					
ANR	1240014	ArgumentList	ht		1239746	1					
ANR	1240015	Argument	ht		1239746	0					
ANR	1240016	Identifier	ht		1239746	0					
ANR	1240017	ExpressionStatement	smart_str_0 ( & list )	3131:2:100323:100341	1239746	5	True				
ANR	1240018	CallExpression	smart_str_0 ( & list )		1239746	0					
ANR	1240019	Callee	smart_str_0		1239746	0					
ANR	1240020	Identifier	smart_str_0		1239746	0					
ANR	1240021	ArgumentList	& list		1239746	1					
ANR	1240022	Argument	& list		1239746	0					
ANR	1240023	UnaryOperationExpression	& list		1239746	0					
ANR	1240024	UnaryOperator	&		1239746	0					
ANR	1240025	Identifier	list		1239746	1					
ANR	1240026	ExpressionStatement	"xmlNodeSetContentLen ( ret , BAD_CAST ( list . c ) , list . len )"	3132:2:100345:100398	1239746	6	True				
ANR	1240027	CallExpression	"xmlNodeSetContentLen ( ret , BAD_CAST ( list . c ) , list . len )"		1239746	0					
ANR	1240028	Callee	xmlNodeSetContentLen		1239746	0					
ANR	1240029	Identifier	xmlNodeSetContentLen		1239746	0					
ANR	1240030	ArgumentList	ret		1239746	1					
ANR	1240031	Argument	ret		1239746	0					
ANR	1240032	Identifier	ret		1239746	0					
ANR	1240033	Argument	BAD_CAST ( list . c )		1239746	1					
ANR	1240034	CallExpression	BAD_CAST ( list . c )		1239746	0					
ANR	1240035	Callee	BAD_CAST		1239746	0					
ANR	1240036	Identifier	BAD_CAST		1239746	0					
ANR	1240037	ArgumentList	list . c		1239746	1					
ANR	1240038	Argument	list . c		1239746	0					
ANR	1240039	MemberAccess	list . c		1239746	0					
ANR	1240040	Identifier	list		1239746	0					
ANR	1240041	Identifier	c		1239746	1					
ANR	1240042	Argument	list . len		1239746	2					
ANR	1240043	MemberAccess	list . len		1239746	0					
ANR	1240044	Identifier	list		1239746	0					
ANR	1240045	Identifier	len		1239746	1					
ANR	1240046	ExpressionStatement	smart_str_free ( & list )	3133:2:100402:100423	1239746	7	True				
ANR	1240047	CallExpression	smart_str_free ( & list )		1239746	0					
ANR	1240048	Callee	smart_str_free		1239746	0					
ANR	1240049	Identifier	smart_str_free		1239746	0					
ANR	1240050	ArgumentList	& list		1239746	1					
ANR	1240051	Argument	& list		1239746	0					
ANR	1240052	UnaryOperationExpression	& list		1239746	0					
ANR	1240053	UnaryOperator	&		1239746	0					
ANR	1240054	Identifier	list		1239746	1					
ANR	1240055	ElseStatement	else		1239746	0					
ANR	1240056	CompoundStatement		43:2:1278:1298	1239746	0					
ANR	1240057	IdentifierDeclStatement	zval tmp = * data ;	3135:2:100437:100453	1239746	0	True				
ANR	1240058	IdentifierDecl	tmp = * data		1239746	0					
ANR	1240059	IdentifierDeclType	zval		1239746	0					
ANR	1240060	Identifier	tmp		1239746	1					
ANR	1240061	AssignmentExpression	tmp = * data		1239746	2		=			
ANR	1240062	Identifier	tmp		1239746	0					
ANR	1240063	UnaryOperationExpression	* data		1239746	1					
ANR	1240064	UnaryOperator	*		1239746	0					
ANR	1240065	Identifier	data		1239746	1					
ANR	1240066	IdentifierDeclStatement	"char * str , * start , * next ;"	3136:2:100457:100481	1239746	1	True				
ANR	1240067	IdentifierDecl	* str		1239746	0					
ANR	1240068	IdentifierDeclType	char *		1239746	0					
ANR	1240069	Identifier	str		1239746	1					
ANR	1240070	IdentifierDecl	* start		1239746	1					
ANR	1240071	IdentifierDeclType	char *		1239746	0					
ANR	1240072	Identifier	start		1239746	1					
ANR	1240073	IdentifierDecl	* next		1239746	2					
ANR	1240074	IdentifierDeclType	char *		1239746	0					
ANR	1240075	Identifier	next		1239746	1					
ANR	1240076	IdentifierDeclStatement	smart_str list = { 0 } ;	3137:2:100485:100505	1239746	2	True				
ANR	1240077	IdentifierDecl	list = { 0 }		1239746	0					
ANR	1240078	IdentifierDeclType	smart_str		1239746	0					
ANR	1240079	Identifier	list		1239746	1					
ANR	1240080	AssignmentExpression	list = { 0 }		1239746	2		=			
ANR	1240081	Identifier	list		1239746	0					
ANR	1240082	InitializerList	0		1239746	1					
ANR	1240083	PrimaryExpression	0		1239746	0					
ANR	1240084	IfStatement	if ( Z_TYPE_P ( data ) != IS_STRING )		1239746	3					
ANR	1240085	Condition	Z_TYPE_P ( data ) != IS_STRING	3139:6:100514:100540	1239746	0	True				
ANR	1240086	EqualityExpression	Z_TYPE_P ( data ) != IS_STRING		1239746	0		!=			
ANR	1240087	CallExpression	Z_TYPE_P ( data )		1239746	0					
ANR	1240088	Callee	Z_TYPE_P		1239746	0					
ANR	1240089	Identifier	Z_TYPE_P		1239746	0					
ANR	1240090	ArgumentList	data		1239746	1					
ANR	1240091	Argument	data		1239746	0					
ANR	1240092	Identifier	data		1239746	0					
ANR	1240093	Identifier	IS_STRING		1239746	1					
ANR	1240094	CompoundStatement		45:35:1336:1336	1239746	1					
ANR	1240095	ExpressionStatement	zval_copy_ctor ( & tmp )	3140:3:100548:100568	1239746	0	True				
ANR	1240096	CallExpression	zval_copy_ctor ( & tmp )		1239746	0					
ANR	1240097	Callee	zval_copy_ctor		1239746	0					
ANR	1240098	Identifier	zval_copy_ctor		1239746	0					
ANR	1240099	ArgumentList	& tmp		1239746	1					
ANR	1240100	Argument	& tmp		1239746	0					
ANR	1240101	UnaryOperationExpression	& tmp		1239746	0					
ANR	1240102	UnaryOperator	&		1239746	0					
ANR	1240103	Identifier	tmp		1239746	1					
ANR	1240104	ExpressionStatement	convert_to_string ( & tmp )	3141:3:100573:100596	1239746	1	True				
ANR	1240105	CallExpression	convert_to_string ( & tmp )		1239746	0					
ANR	1240106	Callee	convert_to_string		1239746	0					
ANR	1240107	Identifier	convert_to_string		1239746	0					
ANR	1240108	ArgumentList	& tmp		1239746	1					
ANR	1240109	Argument	& tmp		1239746	0					
ANR	1240110	UnaryOperationExpression	& tmp		1239746	0					
ANR	1240111	UnaryOperator	&		1239746	0					
ANR	1240112	Identifier	tmp		1239746	1					
ANR	1240113	ExpressionStatement	data = & tmp	3142:3:100601:100612	1239746	2	True				
ANR	1240114	AssignmentExpression	data = & tmp		1239746	0		=			
ANR	1240115	Identifier	data		1239746	0					
ANR	1240116	UnaryOperationExpression	& tmp		1239746	1					
ANR	1240117	UnaryOperator	&		1239746	0					
ANR	1240118	Identifier	tmp		1239746	1					
ANR	1240119	ExpressionStatement	"str = estrndup ( Z_STRVAL_P ( data ) , Z_STRLEN_P ( data ) )"	3144:2:100620:100670	1239746	4	True				
ANR	1240120	AssignmentExpression	"str = estrndup ( Z_STRVAL_P ( data ) , Z_STRLEN_P ( data ) )"		1239746	0		=			
ANR	1240121	Identifier	str		1239746	0					
ANR	1240122	CallExpression	"estrndup ( Z_STRVAL_P ( data ) , Z_STRLEN_P ( data ) )"		1239746	1					
ANR	1240123	Callee	estrndup		1239746	0					
ANR	1240124	Identifier	estrndup		1239746	0					
ANR	1240125	ArgumentList	Z_STRVAL_P ( data )		1239746	1					
ANR	1240126	Argument	Z_STRVAL_P ( data )		1239746	0					
ANR	1240127	CallExpression	Z_STRVAL_P ( data )		1239746	0					
ANR	1240128	Callee	Z_STRVAL_P		1239746	0					
ANR	1240129	Identifier	Z_STRVAL_P		1239746	0					
ANR	1240130	ArgumentList	data		1239746	1					
ANR	1240131	Argument	data		1239746	0					
ANR	1240132	Identifier	data		1239746	0					
ANR	1240133	Argument	Z_STRLEN_P ( data )		1239746	1					
ANR	1240134	CallExpression	Z_STRLEN_P ( data )		1239746	0					
ANR	1240135	Callee	Z_STRLEN_P		1239746	0					
ANR	1240136	Identifier	Z_STRLEN_P		1239746	0					
ANR	1240137	ArgumentList	data		1239746	1					
ANR	1240138	Argument	data		1239746	0					
ANR	1240139	Identifier	data		1239746	0					
ANR	1240140	ExpressionStatement	whiteSpace_collapse ( BAD_CAST ( str ) )	3145:2:100674:100708	1239746	5	True				
ANR	1240141	CallExpression	whiteSpace_collapse ( BAD_CAST ( str ) )		1239746	0					
ANR	1240142	Callee	whiteSpace_collapse		1239746	0					
ANR	1240143	Identifier	whiteSpace_collapse		1239746	0					
ANR	1240144	ArgumentList	BAD_CAST ( str )		1239746	1					
ANR	1240145	Argument	BAD_CAST ( str )		1239746	0					
ANR	1240146	CallExpression	BAD_CAST ( str )		1239746	0					
ANR	1240147	Callee	BAD_CAST		1239746	0					
ANR	1240148	Identifier	BAD_CAST		1239746	0					
ANR	1240149	ArgumentList	str		1239746	1					
ANR	1240150	Argument	str		1239746	0					
ANR	1240151	Identifier	str		1239746	0					
ANR	1240152	ExpressionStatement	start = str	3146:2:100712:100723	1239746	6	True				
ANR	1240153	AssignmentExpression	start = str		1239746	0		=			
ANR	1240154	Identifier	start		1239746	0					
ANR	1240155	Identifier	str		1239746	1					
ANR	1240156	WhileStatement	while ( start != NULL && * start != '\\0' )		1239746	7					
ANR	1240157	Condition	start != NULL && * start != '\\0'	3147:9:100734:100764	1239746	0	True				
ANR	1240158	AndExpression	start != NULL && * start != '\\0'		1239746	0		&&			
ANR	1240159	EqualityExpression	start != NULL		1239746	0		!=			
ANR	1240160	Identifier	start		1239746	0					
ANR	1240161	Identifier	NULL		1239746	1					
ANR	1240162	EqualityExpression	* start != '\\0'		1239746	1		!=			
ANR	1240163	UnaryOperationExpression	* start		1239746	0					
ANR	1240164	UnaryOperator	*		1239746	0					
ANR	1240165	Identifier	start		1239746	1					
ANR	1240166	PrimaryExpression	'\\0'		1239746	1					
ANR	1240167	CompoundStatement		55:3:1586:1601	1239746	1					
ANR	1240168	IdentifierDeclStatement	xmlNodePtr dummy ;	3148:3:100772:100788	1239746	0	True				
ANR	1240169	IdentifierDecl	dummy		1239746	0					
ANR	1240170	IdentifierDeclType	xmlNodePtr		1239746	0					
ANR	1240171	Identifier	dummy		1239746	1					
ANR	1240172	IdentifierDeclStatement	zval dummy_zval ;	3149:3:100793:100808	1239746	1	True				
ANR	1240173	IdentifierDecl	dummy_zval		1239746	0					
ANR	1240174	IdentifierDeclType	zval		1239746	0					
ANR	1240175	Identifier	dummy_zval		1239746	1					
ANR	1240176	ExpressionStatement	"next = strchr ( start , ' ' )"	3151:3:100814:100838	1239746	2	True				
ANR	1240177	AssignmentExpression	"next = strchr ( start , ' ' )"		1239746	0		=			
ANR	1240178	Identifier	next		1239746	0					
ANR	1240179	CallExpression	"strchr ( start , ' ' )"		1239746	1					
ANR	1240180	Callee	strchr		1239746	0					
ANR	1240181	Identifier	strchr		1239746	0					
ANR	1240182	ArgumentList	start		1239746	1					
ANR	1240183	Argument	start		1239746	0					
ANR	1240184	Identifier	start		1239746	0					
ANR	1240185	Argument	' '		1239746	1					
ANR	1240186	PrimaryExpression	' '		1239746	0					
ANR	1240187	IfStatement	if ( next != NULL )		1239746	3					
ANR	1240188	Condition	next != NULL	3152:7:100847:100858	1239746	0	True				
ANR	1240189	EqualityExpression	next != NULL		1239746	0		!=			
ANR	1240190	Identifier	next		1239746	0					
ANR	1240191	Identifier	NULL		1239746	1					
ANR	1240192	CompoundStatement		58:21:1654:1654	1239746	1					
ANR	1240193	ExpressionStatement	* next = '\\0'	3153:5:100868:100880	1239746	0	True				
ANR	1240194	AssignmentExpression	* next = '\\0'		1239746	0		=			
ANR	1240195	UnaryOperationExpression	* next		1239746	0					
ANR	1240196	UnaryOperator	*		1239746	0					
ANR	1240197	Identifier	next		1239746	1					
ANR	1240198	PrimaryExpression	'\\0'		1239746	1					
ANR	1240199	ExpressionStatement	next ++	3154:5:100887:100893	1239746	1	True				
ANR	1240200	PostIncDecOperationExpression	next ++		1239746	0					
ANR	1240201	Identifier	next		1239746	0					
ANR	1240202	IncDec	++		1239746	1					
ANR	1240203	ExpressionStatement	"ZVAL_STRING ( & dummy_zval , start , 0 )"	3156:3:100903:100937	1239746	4	True				
ANR	1240204	CallExpression	"ZVAL_STRING ( & dummy_zval , start , 0 )"		1239746	0					
ANR	1240205	Callee	ZVAL_STRING		1239746	0					
ANR	1240206	Identifier	ZVAL_STRING		1239746	0					
ANR	1240207	ArgumentList	& dummy_zval		1239746	1					
ANR	1240208	Argument	& dummy_zval		1239746	0					
ANR	1240209	UnaryOperationExpression	& dummy_zval		1239746	0					
ANR	1240210	UnaryOperator	&		1239746	0					
ANR	1240211	Identifier	dummy_zval		1239746	1					
ANR	1240212	Argument	start		1239746	1					
ANR	1240213	Identifier	start		1239746	0					
ANR	1240214	Argument	0		1239746	2					
ANR	1240215	PrimaryExpression	0		1239746	0					
ANR	1240216	Statement	dummy	3157:3:100942:100946	1239746	5	True				
ANR	1240217	Statement	=	3157:9:100948:100948	1239746	6	True				
ANR	1240218	Statement	master_to_xml	3157:11:100950:100962	1239746	7	True				
ANR	1240219	Statement	(	3157:24:100963:100963	1239746	8	True				
ANR	1240220	Statement	list_enc	3157:25:100964:100971	1239746	9	True				
ANR	1240221	Statement	","	3157:33:100972:100972	1239746	10	True				
ANR	1240222	Statement	&	3157:35:100974:100974	1239746	11	True				
ANR	1240223	Statement	dummy_zval	3157:36:100975:100984	1239746	12	True				
ANR	1240224	Statement	","	3157:46:100985:100985	1239746	13	True				
ANR	1240225	Statement	SOAP_LITERAL	3157:48:100987:100998	1239746	14	True				
ANR	1240226	Statement	","	3157:60:100999:100999	1239746	15	True				
ANR	1240227	Statement	ret	3157:62:101001:101003	1239746	16	True				
ANR	1240228	Statement	TSRMLS_CC	3157:66:101005:101013	1239746	17	True				
ANR	1240229	Statement	)	3157:75:101014:101014	1239746	18	True				
ANR	1240230	ExpressionStatement		3157:76:101015:101015	1239746	19	True				
ANR	1240231	IfStatement	if ( dummy && dummy -> children && dummy -> children -> content )		1239746	20					
ANR	1240232	Condition	dummy && dummy -> children && dummy -> children -> content	3158:7:101024:101075	1239746	0	True				
ANR	1240233	AndExpression	dummy && dummy -> children && dummy -> children -> content		1239746	0		&&			
ANR	1240234	Identifier	dummy		1239746	0					
ANR	1240235	AndExpression	dummy -> children && dummy -> children -> content		1239746	1		&&			
ANR	1240236	PtrMemberAccess	dummy -> children		1239746	0					
ANR	1240237	Identifier	dummy		1239746	0					
ANR	1240238	Identifier	children		1239746	1					
ANR	1240239	PtrMemberAccess	dummy -> children -> content		1239746	1					
ANR	1240240	PtrMemberAccess	dummy -> children		1239746	0					
ANR	1240241	Identifier	dummy		1239746	0					
ANR	1240242	Identifier	children		1239746	1					
ANR	1240243	Identifier	content		1239746	1					
ANR	1240244	CompoundStatement		64:61:1871:1871	1239746	1					
ANR	1240245	IfStatement	if ( list . len != 0 )		1239746	0					
ANR	1240246	Condition	list . len != 0	3159:8:101088:101100	1239746	0	True				
ANR	1240247	EqualityExpression	list . len != 0		1239746	0		!=			
ANR	1240248	MemberAccess	list . len		1239746	0					
ANR	1240249	Identifier	list		1239746	0					
ANR	1240250	Identifier	len		1239746	1					
ANR	1240251	PrimaryExpression	0		1239746	1					
ANR	1240252	CompoundStatement		65:23:1896:1896	1239746	1					
ANR	1240253	ExpressionStatement	"smart_str_appendc ( & list , ' ' )"	3160:5:101110:101139	1239746	0	True				
ANR	1240254	CallExpression	"smart_str_appendc ( & list , ' ' )"		1239746	0					
ANR	1240255	Callee	smart_str_appendc		1239746	0					
ANR	1240256	Identifier	smart_str_appendc		1239746	0					
ANR	1240257	ArgumentList	& list		1239746	1					
ANR	1240258	Argument	& list		1239746	0					
ANR	1240259	UnaryOperationExpression	& list		1239746	0					
ANR	1240260	UnaryOperator	&		1239746	0					
ANR	1240261	Identifier	list		1239746	1					
ANR	1240262	Argument	' '		1239746	1					
ANR	1240263	PrimaryExpression	' '		1239746	0					
ANR	1240264	ExpressionStatement	"smart_str_appends ( & list , ( char * ) dummy -> children -> content )"	3162:4:101151:101208	1239746	1	True				
ANR	1240265	CallExpression	"smart_str_appends ( & list , ( char * ) dummy -> children -> content )"		1239746	0					
ANR	1240266	Callee	smart_str_appends		1239746	0					
ANR	1240267	Identifier	smart_str_appends		1239746	0					
ANR	1240268	ArgumentList	& list		1239746	1					
ANR	1240269	Argument	& list		1239746	0					
ANR	1240270	UnaryOperationExpression	& list		1239746	0					
ANR	1240271	UnaryOperator	&		1239746	0					
ANR	1240272	Identifier	list		1239746	1					
ANR	1240273	Argument	( char * ) dummy -> children -> content		1239746	1					
ANR	1240274	CastExpression	( char * ) dummy -> children -> content		1239746	0					
ANR	1240275	CastTarget	char *		1239746	0					
ANR	1240276	PtrMemberAccess	dummy -> children -> content		1239746	1					
ANR	1240277	PtrMemberAccess	dummy -> children		1239746	0					
ANR	1240278	Identifier	dummy		1239746	0					
ANR	1240279	Identifier	children		1239746	1					
ANR	1240280	Identifier	content		1239746	1					
ANR	1240281	ElseStatement	else		1239746	0					
ANR	1240282	CompoundStatement		69:10:2013:2013	1239746	0					
ANR	1240283	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	3164:4:101226:101287	1239746	0	True				
ANR	1240284	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1239746	0					
ANR	1240285	Callee	soap_error0		1239746	0					
ANR	1240286	Identifier	soap_error0		1239746	0					
ANR	1240287	ArgumentList	E_ERROR		1239746	1					
ANR	1240288	Argument	E_ERROR		1239746	0					
ANR	1240289	Identifier	E_ERROR		1239746	0					
ANR	1240290	Argument	"""Encoding: Violation of encoding rules"""		1239746	1					
ANR	1240291	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1239746	0					
ANR	1240292	ExpressionStatement	xmlUnlinkNode ( dummy )	3166:3:101297:101317	1239746	21	True				
ANR	1240293	CallExpression	xmlUnlinkNode ( dummy )		1239746	0					
ANR	1240294	Callee	xmlUnlinkNode		1239746	0					
ANR	1240295	Identifier	xmlUnlinkNode		1239746	0					
ANR	1240296	ArgumentList	dummy		1239746	1					
ANR	1240297	Argument	dummy		1239746	0					
ANR	1240298	Identifier	dummy		1239746	0					
ANR	1240299	ExpressionStatement	xmlFreeNode ( dummy )	3167:3:101322:101340	1239746	22	True				
ANR	1240300	CallExpression	xmlFreeNode ( dummy )		1239746	0					
ANR	1240301	Callee	xmlFreeNode		1239746	0					
ANR	1240302	Identifier	xmlFreeNode		1239746	0					
ANR	1240303	ArgumentList	dummy		1239746	1					
ANR	1240304	Argument	dummy		1239746	0					
ANR	1240305	Identifier	dummy		1239746	0					
ANR	1240306	ExpressionStatement	start = next	3169:3:101346:101358	1239746	23	True				
ANR	1240307	AssignmentExpression	start = next		1239746	0		=			
ANR	1240308	Identifier	start		1239746	0					
ANR	1240309	Identifier	next		1239746	1					
ANR	1240310	ExpressionStatement	smart_str_0 ( & list )	3171:2:101366:101384	1239746	8	True				
ANR	1240311	CallExpression	smart_str_0 ( & list )		1239746	0					
ANR	1240312	Callee	smart_str_0		1239746	0					
ANR	1240313	Identifier	smart_str_0		1239746	0					
ANR	1240314	ArgumentList	& list		1239746	1					
ANR	1240315	Argument	& list		1239746	0					
ANR	1240316	UnaryOperationExpression	& list		1239746	0					
ANR	1240317	UnaryOperator	&		1239746	0					
ANR	1240318	Identifier	list		1239746	1					
ANR	1240319	ExpressionStatement	"xmlNodeSetContentLen ( ret , BAD_CAST ( list . c ) , list . len )"	3172:2:101388:101441	1239746	9	True				
ANR	1240320	CallExpression	"xmlNodeSetContentLen ( ret , BAD_CAST ( list . c ) , list . len )"		1239746	0					
ANR	1240321	Callee	xmlNodeSetContentLen		1239746	0					
ANR	1240322	Identifier	xmlNodeSetContentLen		1239746	0					
ANR	1240323	ArgumentList	ret		1239746	1					
ANR	1240324	Argument	ret		1239746	0					
ANR	1240325	Identifier	ret		1239746	0					
ANR	1240326	Argument	BAD_CAST ( list . c )		1239746	1					
ANR	1240327	CallExpression	BAD_CAST ( list . c )		1239746	0					
ANR	1240328	Callee	BAD_CAST		1239746	0					
ANR	1240329	Identifier	BAD_CAST		1239746	0					
ANR	1240330	ArgumentList	list . c		1239746	1					
ANR	1240331	Argument	list . c		1239746	0					
ANR	1240332	MemberAccess	list . c		1239746	0					
ANR	1240333	Identifier	list		1239746	0					
ANR	1240334	Identifier	c		1239746	1					
ANR	1240335	Argument	list . len		1239746	2					
ANR	1240336	MemberAccess	list . len		1239746	0					
ANR	1240337	Identifier	list		1239746	0					
ANR	1240338	Identifier	len		1239746	1					
ANR	1240339	ExpressionStatement	smart_str_free ( & list )	3173:2:101445:101466	1239746	10	True				
ANR	1240340	CallExpression	smart_str_free ( & list )		1239746	0					
ANR	1240341	Callee	smart_str_free		1239746	0					
ANR	1240342	Identifier	smart_str_free		1239746	0					
ANR	1240343	ArgumentList	& list		1239746	1					
ANR	1240344	Argument	& list		1239746	0					
ANR	1240345	UnaryOperationExpression	& list		1239746	0					
ANR	1240346	UnaryOperator	&		1239746	0					
ANR	1240347	Identifier	list		1239746	1					
ANR	1240348	ExpressionStatement	efree ( str )	3174:2:101470:101480	1239746	11	True				
ANR	1240349	CallExpression	efree ( str )		1239746	0					
ANR	1240350	Callee	efree		1239746	0					
ANR	1240351	Identifier	efree		1239746	0					
ANR	1240352	ArgumentList	str		1239746	1					
ANR	1240353	Argument	str		1239746	0					
ANR	1240354	Identifier	str		1239746	0					
ANR	1240355	IfStatement	if ( data == & tmp )		1239746	12					
ANR	1240356	Condition	data == & tmp	3175:6:101488:101499	1239746	0	True				
ANR	1240357	EqualityExpression	data == & tmp		1239746	0		==			
ANR	1240358	Identifier	data		1239746	0					
ANR	1240359	UnaryOperationExpression	& tmp		1239746	1					
ANR	1240360	UnaryOperator	&		1239746	0					
ANR	1240361	Identifier	tmp		1239746	1					
ANR	1240362	CompoundStatement		81:20:2295:2295	1239746	1					
ANR	1240363	ExpressionStatement	zval_dtor ( & tmp )	3175:21:101503:101518	1239746	0	True				
ANR	1240364	CallExpression	zval_dtor ( & tmp )		1239746	0					
ANR	1240365	Callee	zval_dtor		1239746	0					
ANR	1240366	Identifier	zval_dtor		1239746	0					
ANR	1240367	ArgumentList	& tmp		1239746	1					
ANR	1240368	Argument	& tmp		1239746	0					
ANR	1240369	UnaryOperationExpression	& tmp		1239746	0					
ANR	1240370	UnaryOperator	&		1239746	0					
ANR	1240371	Identifier	tmp		1239746	1					
ANR	1240372	ReturnStatement	return ret ;	3177:1:101525:101535	1239746	7	True				
ANR	1240373	Identifier	ret		1239746	0					
ANR	1240374	ReturnType	static xmlNodePtr		1239746	1					
ANR	1240375	Identifier	to_xml_list		1239746	2					
ANR	1240376	ParameterList	"encodeTypePtr enc , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1239746	3					
ANR	1240377	Parameter	encodeTypePtr enc	3095:30:99135:99151	1239746	0	True				
ANR	1240378	ParameterType	encodeTypePtr		1239746	0					
ANR	1240379	Identifier	enc		1239746	1					
ANR	1240380	Parameter	zval * data	3095:49:99154:99163	1239746	1	True				
ANR	1240381	ParameterType	zval *		1239746	0					
ANR	1240382	Identifier	data		1239746	1					
ANR	1240383	Parameter	int style	3095:61:99166:99174	1239746	2	True				
ANR	1240384	ParameterType	int		1239746	0					
ANR	1240385	Identifier	style		1239746	1					
ANR	1240386	Parameter	xmlNodePtr parent TSRMLS_DC	3095:72:99177:99203	1239746	3	True				
ANR	1240387	ParameterType	xmlNodePtr parent		1239746	0					
ANR	1240388	Identifier	TSRMLS_DC		1239746	1					
ANR	1240389	CFGEntryNode	ENTRY		1239746		True				
ANR	1240390	CFGExitNode	EXIT		1239746		True				
ANR	1240391	Symbol	list_enc		1239746						
ANR	1240392	Symbol	parent		1239746						
ANR	1240393	Symbol	data		1239746						
ANR	1240394	Symbol	dummy -> children -> content		1239746						
ANR	1240395	Symbol	* start		1239746						
ANR	1240396	Symbol	* dummy -> children		1239746						
ANR	1240397	Symbol	strchr		1239746						
ANR	1240398	Symbol	* next		1239746						
ANR	1240399	Symbol	type		1239746						
ANR	1240400	Symbol	ht		1239746						
ANR	1240401	Symbol	TSRMLS_DC		1239746						
ANR	1240402	Symbol	dummy		1239746						
ANR	1240403	Symbol	zend_hash_get_current_data		1239746						
ANR	1240404	Symbol	& list		1239746						
ANR	1240405	Symbol	tmp		1239746						
ANR	1240406	Symbol	& dummy_zval		1239746						
ANR	1240407	Symbol	list . len		1239746						
ANR	1240408	Symbol	IS_STRING		1239746						
ANR	1240409	Symbol	enc -> sdl_type		1239746						
ANR	1240410	Symbol	ret		1239746						
ANR	1240411	Symbol	NULL		1239746						
ANR	1240412	Symbol	* enc -> sdl_type		1239746						
ANR	1240413	Symbol	& type		1239746						
ANR	1240414	Symbol	* dummy		1239746						
ANR	1240415	Symbol	list		1239746						
ANR	1240416	Symbol	* * enc		1239746						
ANR	1240417	Symbol	str		1239746						
ANR	1240418	Symbol	style		1239746						
ANR	1240419	Symbol	& tmp		1239746						
ANR	1240420	Symbol	* enc		1239746						
ANR	1240421	Symbol	BAD_CAST		1239746						
ANR	1240422	Symbol	XSD_TYPEKIND_LIST		1239746						
ANR	1240423	Symbol	next		1239746						
ANR	1240424	Symbol	* * dummy		1239746						
ANR	1240425	Symbol	( * type ) -> encode		1239746						
ANR	1240426	Symbol	estrndup		1239746						
ANR	1240427	Symbol	dummy_zval		1239746						
ANR	1240428	Symbol	* type		1239746						
ANR	1240429	Symbol	IS_ARRAY		1239746						
ANR	1240430	Symbol	Z_STRLEN_P		1239746						
ANR	1240431	Symbol	enc		1239746						
ANR	1240432	Symbol	Z_ARRVAL_P		1239746						
ANR	1240433	Symbol	SUCCESS		1239746						
ANR	1240434	Symbol	start		1239746						
ANR	1240435	Symbol	xmlNewNode		1239746						
ANR	1240436	Symbol	Z_TYPE_P		1239746						
ANR	1240437	Symbol	Z_STRVAL_P		1239746						
ANR	1240438	Symbol	dummy -> children		1239746						
ANR	1240439	Symbol	E_ERROR		1239746						
ANR	1240440	Symbol	list . c		1239746						
ANR	1240441	Symbol	enc -> sdl_type -> kind		1239746						
ANR	1240442	Symbol	enc -> sdl_type -> elements		1239746						
ANR	1240443	Symbol	* * type		1239746						
ANR	1240444	Symbol	* data		1239746						
ANR	1240445	Function	to_xml_list1	3180:0:101540:101724							
ANR	1240446	FunctionDef	"to_xml_list1 (encodeTypePtr enc , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1240445	0					
ANR	1240447	CompoundStatement		3180:102:101642:101724	1240445	0					
ANR	1240448	Statement	return	3182:1:101670:101675	1240445	0	True				
ANR	1240449	Statement	to_xml_list	3182:8:101677:101687	1240445	1	True				
ANR	1240450	Statement	(	3182:19:101688:101688	1240445	2	True				
ANR	1240451	Statement	enc	3182:20:101689:101691	1240445	3	True				
ANR	1240452	Statement	","	3182:23:101692:101692	1240445	4	True				
ANR	1240453	Statement	data	3182:24:101693:101696	1240445	5	True				
ANR	1240454	Statement	","	3182:28:101697:101697	1240445	6	True				
ANR	1240455	Statement	style	3182:29:101698:101702	1240445	7	True				
ANR	1240456	Statement	","	3182:34:101703:101703	1240445	8	True				
ANR	1240457	Statement	parent	3182:36:101705:101710	1240445	9	True				
ANR	1240458	Statement	TSRMLS_CC	3182:43:101712:101720	1240445	10	True				
ANR	1240459	Statement	)	3182:52:101721:101721	1240445	11	True				
ANR	1240460	ExpressionStatement		3182:53:101722:101722	1240445	12	True				
ANR	1240461	ReturnType	static xmlNodePtr		1240445	1					
ANR	1240462	Identifier	to_xml_list1		1240445	2					
ANR	1240463	ParameterList	"encodeTypePtr enc , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1240445	3					
ANR	1240464	Parameter	encodeTypePtr enc	3180:31:101571:101587	1240445	0	True				
ANR	1240465	ParameterType	encodeTypePtr		1240445	0					
ANR	1240466	Identifier	enc		1240445	1					
ANR	1240467	Parameter	zval * data	3180:50:101590:101599	1240445	1	True				
ANR	1240468	ParameterType	zval *		1240445	0					
ANR	1240469	Identifier	data		1240445	1					
ANR	1240470	Parameter	int style	3180:62:101602:101610	1240445	2	True				
ANR	1240471	ParameterType	int		1240445	0					
ANR	1240472	Identifier	style		1240445	1					
ANR	1240473	Parameter	xmlNodePtr parent TSRMLS_DC	3180:73:101613:101639	1240445	3	True				
ANR	1240474	ParameterType	xmlNodePtr parent		1240445	0					
ANR	1240475	Identifier	TSRMLS_DC		1240445	1					
ANR	1240476	CFGEntryNode	ENTRY		1240445		True				
ANR	1240477	CFGExitNode	EXIT		1240445		True				
ANR	1240478	Symbol	data		1240445						
ANR	1240479	Symbol	style		1240445						
ANR	1240480	Symbol	enc		1240445						
ANR	1240481	Symbol	TSRMLS_DC		1240445						
ANR	1240482	Function	to_zval_union	3185:0:101727:101856							
ANR	1240483	FunctionDef	"to_zval_union (encodeTypePtr enc , xmlNodePtr data TSRMLS_DC)"		1240482	0					
ANR	1240484	CompoundStatement		3185:73:101800:101856	1240482	0					
ANR	1240485	Statement	return	3187:1:101814:101819	1240482	0	True				
ANR	1240486	Statement	to_zval_list	3187:8:101821:101832	1240482	1	True				
ANR	1240487	Statement	(	3187:20:101833:101833	1240482	2	True				
ANR	1240488	Statement	enc	3187:21:101834:101836	1240482	3	True				
ANR	1240489	Statement	","	3187:24:101837:101837	1240482	4	True				
ANR	1240490	Statement	data	3187:26:101839:101842	1240482	5	True				
ANR	1240491	Statement	TSRMLS_CC	3187:31:101844:101852	1240482	6	True				
ANR	1240492	Statement	)	3187:40:101853:101853	1240482	7	True				
ANR	1240493	ExpressionStatement		3187:41:101854:101854	1240482	8	True				
ANR	1240494	ReturnType	static zval *		1240482	1					
ANR	1240495	Identifier	to_zval_union		1240482	2					
ANR	1240496	ParameterList	"encodeTypePtr enc , xmlNodePtr data TSRMLS_DC"		1240482	3					
ANR	1240497	Parameter	encodeTypePtr enc	3185:27:101754:101770	1240482	0	True				
ANR	1240498	ParameterType	encodeTypePtr		1240482	0					
ANR	1240499	Identifier	enc		1240482	1					
ANR	1240500	Parameter	xmlNodePtr data TSRMLS_DC	3185:46:101773:101797	1240482	1	True				
ANR	1240501	ParameterType	xmlNodePtr data		1240482	0					
ANR	1240502	Identifier	TSRMLS_DC		1240482	1					
ANR	1240503	CFGEntryNode	ENTRY		1240482		True				
ANR	1240504	CFGExitNode	EXIT		1240482		True				
ANR	1240505	Symbol	enc		1240482						
ANR	1240506	Symbol	TSRMLS_DC		1240482						
ANR	1240507	Function	to_xml_union	3190:0:101859:102029							
ANR	1240508	FunctionDef	"to_xml_union (encodeTypePtr enc , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1240507	0					
ANR	1240509	CompoundStatement		3190:102:101961:102029	1240507	0					
ANR	1240510	Statement	return	3192:1:101975:101980	1240507	0	True				
ANR	1240511	Statement	to_xml_list	3192:8:101982:101992	1240507	1	True				
ANR	1240512	Statement	(	3192:19:101993:101993	1240507	2	True				
ANR	1240513	Statement	enc	3192:20:101994:101996	1240507	3	True				
ANR	1240514	Statement	","	3192:23:101997:101997	1240507	4	True				
ANR	1240515	Statement	data	3192:24:101998:102001	1240507	5	True				
ANR	1240516	Statement	","	3192:28:102002:102002	1240507	6	True				
ANR	1240517	Statement	style	3192:29:102003:102007	1240507	7	True				
ANR	1240518	Statement	","	3192:34:102008:102008	1240507	8	True				
ANR	1240519	Statement	parent	3192:36:102010:102015	1240507	9	True				
ANR	1240520	Statement	TSRMLS_CC	3192:43:102017:102025	1240507	10	True				
ANR	1240521	Statement	)	3192:52:102026:102026	1240507	11	True				
ANR	1240522	ExpressionStatement		3192:53:102027:102027	1240507	12	True				
ANR	1240523	ReturnType	static xmlNodePtr		1240507	1					
ANR	1240524	Identifier	to_xml_union		1240507	2					
ANR	1240525	ParameterList	"encodeTypePtr enc , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1240507	3					
ANR	1240526	Parameter	encodeTypePtr enc	3190:31:101890:101906	1240507	0	True				
ANR	1240527	ParameterType	encodeTypePtr		1240507	0					
ANR	1240528	Identifier	enc		1240507	1					
ANR	1240529	Parameter	zval * data	3190:50:101909:101918	1240507	1	True				
ANR	1240530	ParameterType	zval *		1240507	0					
ANR	1240531	Identifier	data		1240507	1					
ANR	1240532	Parameter	int style	3190:62:101921:101929	1240507	2	True				
ANR	1240533	ParameterType	int		1240507	0					
ANR	1240534	Identifier	style		1240507	1					
ANR	1240535	Parameter	xmlNodePtr parent TSRMLS_DC	3190:73:101932:101958	1240507	3	True				
ANR	1240536	ParameterType	xmlNodePtr parent		1240507	0					
ANR	1240537	Identifier	TSRMLS_DC		1240507	1					
ANR	1240538	CFGEntryNode	ENTRY		1240507		True				
ANR	1240539	CFGExitNode	EXIT		1240507		True				
ANR	1240540	Symbol	data		1240507						
ANR	1240541	Symbol	style		1240507						
ANR	1240542	Symbol	enc		1240507						
ANR	1240543	Symbol	TSRMLS_DC		1240507						
ANR	1240544	Function	to_zval_any	3195:0:102032:102896							
ANR	1240545	FunctionDef	"to_zval_any (encodeTypePtr type , xmlNodePtr data TSRMLS_DC)"		1240544	0					
ANR	1240546	CompoundStatement		3196:0:102104:102896	1240544	0					
ANR	1240547	IdentifierDeclStatement	xmlBufferPtr buf ;	3197:1:102107:102123	1240544	0	True				
ANR	1240548	IdentifierDecl	buf		1240544	0					
ANR	1240549	IdentifierDeclType	xmlBufferPtr		1240544	0					
ANR	1240550	Identifier	buf		1240544	1					
ANR	1240551	IdentifierDeclStatement	zval * ret ;	3198:1:102126:102135	1240544	1	True				
ANR	1240552	IdentifierDecl	* ret		1240544	0					
ANR	1240553	IdentifierDeclType	zval *		1240544	0					
ANR	1240554	Identifier	ret		1240544	1					
ANR	1240555	IfStatement	if ( SOAP_GLOBAL ( sdl ) && SOAP_GLOBAL ( sdl ) -> elements && data -> name )		1240544	2					
ANR	1240556	Condition	SOAP_GLOBAL ( sdl ) && SOAP_GLOBAL ( sdl ) -> elements && data -> name	3200:5:102143:102202	1240544	0	True				
ANR	1240557	AndExpression	SOAP_GLOBAL ( sdl ) && SOAP_GLOBAL ( sdl ) -> elements && data -> name		1240544	0		&&			
ANR	1240558	CallExpression	SOAP_GLOBAL ( sdl )		1240544	0					
ANR	1240559	Callee	SOAP_GLOBAL		1240544	0					
ANR	1240560	Identifier	SOAP_GLOBAL		1240544	0					
ANR	1240561	ArgumentList	sdl		1240544	1					
ANR	1240562	Argument	sdl		1240544	0					
ANR	1240563	Identifier	sdl		1240544	0					
ANR	1240564	AndExpression	SOAP_GLOBAL ( sdl ) -> elements && data -> name		1240544	1		&&			
ANR	1240565	PtrMemberAccess	SOAP_GLOBAL ( sdl ) -> elements		1240544	0					
ANR	1240566	CallExpression	SOAP_GLOBAL ( sdl )		1240544	0					
ANR	1240567	Callee	SOAP_GLOBAL		1240544	0					
ANR	1240568	Identifier	SOAP_GLOBAL		1240544	0					
ANR	1240569	ArgumentList	sdl		1240544	1					
ANR	1240570	Argument	sdl		1240544	0					
ANR	1240571	Identifier	sdl		1240544	0					
ANR	1240572	Identifier	elements		1240544	1					
ANR	1240573	PtrMemberAccess	data -> name		1240544	1					
ANR	1240574	Identifier	data		1240544	0					
ANR	1240575	Identifier	name		1240544	1					
ANR	1240576	CompoundStatement		7:2:131:151	1240544	1					
ANR	1240577	IdentifierDeclStatement	smart_str nscat = { 0 } ;	3201:2:102209:102230	1240544	0	True				
ANR	1240578	IdentifierDecl	nscat = { 0 }		1240544	0					
ANR	1240579	IdentifierDeclType	smart_str		1240544	0					
ANR	1240580	Identifier	nscat		1240544	1					
ANR	1240581	AssignmentExpression	nscat = { 0 }		1240544	2		=			
ANR	1240582	Identifier	nscat		1240544	0					
ANR	1240583	InitializerList	0		1240544	1					
ANR	1240584	PrimaryExpression	0		1240544	0					
ANR	1240585	IdentifierDeclStatement	sdlTypePtr * sdl_type ;	3202:2:102236:102256	1240544	1	True				
ANR	1240586	IdentifierDecl	* sdl_type		1240544	0					
ANR	1240587	IdentifierDeclType	sdlTypePtr *		1240544	0					
ANR	1240588	Identifier	sdl_type		1240544	1					
ANR	1240589	IfStatement	if ( data -> ns && data -> ns -> href )		1240544	2					
ANR	1240590	Condition	data -> ns && data -> ns -> href	3204:6:102265:102290	1240544	0	True				
ANR	1240591	AndExpression	data -> ns && data -> ns -> href		1240544	0		&&			
ANR	1240592	PtrMemberAccess	data -> ns		1240544	0					
ANR	1240593	Identifier	data		1240544	0					
ANR	1240594	Identifier	ns		1240544	1					
ANR	1240595	PtrMemberAccess	data -> ns -> href		1240544	1					
ANR	1240596	PtrMemberAccess	data -> ns		1240544	0					
ANR	1240597	Identifier	data		1240544	0					
ANR	1240598	Identifier	ns		1240544	1					
ANR	1240599	Identifier	href		1240544	1					
ANR	1240600	CompoundStatement		9:34:188:188	1240544	1					
ANR	1240601	ExpressionStatement	"smart_str_appends ( & nscat , ( char * ) data -> ns -> href )"	3205:3:102298:102346	1240544	0	True				
ANR	1240602	CallExpression	"smart_str_appends ( & nscat , ( char * ) data -> ns -> href )"		1240544	0					
ANR	1240603	Callee	smart_str_appends		1240544	0					
ANR	1240604	Identifier	smart_str_appends		1240544	0					
ANR	1240605	ArgumentList	& nscat		1240544	1					
ANR	1240606	Argument	& nscat		1240544	0					
ANR	1240607	UnaryOperationExpression	& nscat		1240544	0					
ANR	1240608	UnaryOperator	&		1240544	0					
ANR	1240609	Identifier	nscat		1240544	1					
ANR	1240610	Argument	( char * ) data -> ns -> href		1240544	1					
ANR	1240611	CastExpression	( char * ) data -> ns -> href		1240544	0					
ANR	1240612	CastTarget	char *		1240544	0					
ANR	1240613	PtrMemberAccess	data -> ns -> href		1240544	1					
ANR	1240614	PtrMemberAccess	data -> ns		1240544	0					
ANR	1240615	Identifier	data		1240544	0					
ANR	1240616	Identifier	ns		1240544	1					
ANR	1240617	Identifier	href		1240544	1					
ANR	1240618	ExpressionStatement	"smart_str_appendc ( & nscat , ':' )"	3206:3:102351:102381	1240544	1	True				
ANR	1240619	CallExpression	"smart_str_appendc ( & nscat , ':' )"		1240544	0					
ANR	1240620	Callee	smart_str_appendc		1240544	0					
ANR	1240621	Identifier	smart_str_appendc		1240544	0					
ANR	1240622	ArgumentList	& nscat		1240544	1					
ANR	1240623	Argument	& nscat		1240544	0					
ANR	1240624	UnaryOperationExpression	& nscat		1240544	0					
ANR	1240625	UnaryOperator	&		1240544	0					
ANR	1240626	Identifier	nscat		1240544	1					
ANR	1240627	Argument	':'		1240544	1					
ANR	1240628	PrimaryExpression	':'		1240544	0					
ANR	1240629	ExpressionStatement	"smart_str_appends ( & nscat , ( char * ) data -> name )"	3208:2:102392:102436	1240544	3	True				
ANR	1240630	CallExpression	"smart_str_appends ( & nscat , ( char * ) data -> name )"		1240544	0					
ANR	1240631	Callee	smart_str_appends		1240544	0					
ANR	1240632	Identifier	smart_str_appends		1240544	0					
ANR	1240633	ArgumentList	& nscat		1240544	1					
ANR	1240634	Argument	& nscat		1240544	0					
ANR	1240635	UnaryOperationExpression	& nscat		1240544	0					
ANR	1240636	UnaryOperator	&		1240544	0					
ANR	1240637	Identifier	nscat		1240544	1					
ANR	1240638	Argument	( char * ) data -> name		1240544	1					
ANR	1240639	CastExpression	( char * ) data -> name		1240544	0					
ANR	1240640	CastTarget	char *		1240544	0					
ANR	1240641	PtrMemberAccess	data -> name		1240544	1					
ANR	1240642	Identifier	data		1240544	0					
ANR	1240643	Identifier	name		1240544	1					
ANR	1240644	ExpressionStatement	smart_str_0 ( & nscat )	3209:2:102440:102459	1240544	4	True				
ANR	1240645	CallExpression	smart_str_0 ( & nscat )		1240544	0					
ANR	1240646	Callee	smart_str_0		1240544	0					
ANR	1240647	Identifier	smart_str_0		1240544	0					
ANR	1240648	ArgumentList	& nscat		1240544	1					
ANR	1240649	Argument	& nscat		1240544	0					
ANR	1240650	UnaryOperationExpression	& nscat		1240544	0					
ANR	1240651	UnaryOperator	&		1240544	0					
ANR	1240652	Identifier	nscat		1240544	1					
ANR	1240653	IfStatement	"if ( zend_hash_find ( SOAP_GLOBAL ( sdl ) -> elements , nscat . c , nscat . len + 1 , ( void * * ) & sdl_type ) == SUCCESS && ( * sdl_type ) -> encode )"		1240544	5					
ANR	1240654	Condition	"zend_hash_find ( SOAP_GLOBAL ( sdl ) -> elements , nscat . c , nscat . len + 1 , ( void * * ) & sdl_type ) == SUCCESS && ( * sdl_type ) -> encode"	3211:6:102468:102591	1240544	0	True				
ANR	1240655	AndExpression	"zend_hash_find ( SOAP_GLOBAL ( sdl ) -> elements , nscat . c , nscat . len + 1 , ( void * * ) & sdl_type ) == SUCCESS && ( * sdl_type ) -> encode"		1240544	0		&&			
ANR	1240656	EqualityExpression	"zend_hash_find ( SOAP_GLOBAL ( sdl ) -> elements , nscat . c , nscat . len + 1 , ( void * * ) & sdl_type ) == SUCCESS"		1240544	0		==			
ANR	1240657	CallExpression	"zend_hash_find ( SOAP_GLOBAL ( sdl ) -> elements , nscat . c , nscat . len + 1 , ( void * * ) & sdl_type )"		1240544	0					
ANR	1240658	Callee	zend_hash_find		1240544	0					
ANR	1240659	Identifier	zend_hash_find		1240544	0					
ANR	1240660	ArgumentList	SOAP_GLOBAL ( sdl ) -> elements		1240544	1					
ANR	1240661	Argument	SOAP_GLOBAL ( sdl ) -> elements		1240544	0					
ANR	1240662	PtrMemberAccess	SOAP_GLOBAL ( sdl ) -> elements		1240544	0					
ANR	1240663	CallExpression	SOAP_GLOBAL ( sdl )		1240544	0					
ANR	1240664	Callee	SOAP_GLOBAL		1240544	0					
ANR	1240665	Identifier	SOAP_GLOBAL		1240544	0					
ANR	1240666	ArgumentList	sdl		1240544	1					
ANR	1240667	Argument	sdl		1240544	0					
ANR	1240668	Identifier	sdl		1240544	0					
ANR	1240669	Identifier	elements		1240544	1					
ANR	1240670	Argument	nscat . c		1240544	1					
ANR	1240671	MemberAccess	nscat . c		1240544	0					
ANR	1240672	Identifier	nscat		1240544	0					
ANR	1240673	Identifier	c		1240544	1					
ANR	1240674	Argument	nscat . len + 1		1240544	2					
ANR	1240675	AdditiveExpression	nscat . len + 1		1240544	0		+			
ANR	1240676	MemberAccess	nscat . len		1240544	0					
ANR	1240677	Identifier	nscat		1240544	0					
ANR	1240678	Identifier	len		1240544	1					
ANR	1240679	PrimaryExpression	1		1240544	1					
ANR	1240680	Argument	( void * * ) & sdl_type		1240544	3					
ANR	1240681	CastExpression	( void * * ) & sdl_type		1240544	0					
ANR	1240682	CastTarget	void * *		1240544	0					
ANR	1240683	UnaryOperationExpression	& sdl_type		1240544	1					
ANR	1240684	UnaryOperator	&		1240544	0					
ANR	1240685	Identifier	sdl_type		1240544	1					
ANR	1240686	Identifier	SUCCESS		1240544	1					
ANR	1240687	PtrMemberAccess	( * sdl_type ) -> encode		1240544	1					
ANR	1240688	UnaryOperationExpression	* sdl_type		1240544	0					
ANR	1240689	UnaryOperator	*		1240544	0					
ANR	1240690	Identifier	sdl_type		1240544	1					
ANR	1240691	Identifier	encode		1240544	1					
ANR	1240692	CompoundStatement		17:27:489:489	1240544	1					
ANR	1240693	ExpressionStatement	smart_str_free ( & nscat )	3213:3:102599:102621	1240544	0	True				
ANR	1240694	CallExpression	smart_str_free ( & nscat )		1240544	0					
ANR	1240695	Callee	smart_str_free		1240544	0					
ANR	1240696	Identifier	smart_str_free		1240544	0					
ANR	1240697	ArgumentList	& nscat		1240544	1					
ANR	1240698	Argument	& nscat		1240544	0					
ANR	1240699	UnaryOperationExpression	& nscat		1240544	0					
ANR	1240700	UnaryOperator	&		1240544	0					
ANR	1240701	Identifier	nscat		1240544	1					
ANR	1240702	Statement	return	3214:3:102626:102631	1240544	1	True				
ANR	1240703	Statement	master_to_zval_int	3214:10:102633:102650	1240544	2	True				
ANR	1240704	Statement	(	3214:28:102651:102651	1240544	3	True				
ANR	1240705	Statement	(	3214:29:102652:102652	1240544	4	True				
ANR	1240706	Statement	*	3214:30:102653:102653	1240544	5	True				
ANR	1240707	Statement	sdl_type	3214:31:102654:102661	1240544	6	True				
ANR	1240708	Statement	)	3214:39:102662:102662	1240544	7	True				
ANR	1240709	Statement	->	3214:40:102663:102664	1240544	8	True				
ANR	1240710	Statement	encode	3214:42:102665:102670	1240544	9	True				
ANR	1240711	Statement	","	3214:48:102671:102671	1240544	10	True				
ANR	1240712	Statement	data	3214:50:102673:102676	1240544	11	True				
ANR	1240713	Statement	TSRMLS_CC	3214:55:102678:102686	1240544	12	True				
ANR	1240714	Statement	)	3214:64:102687:102687	1240544	13	True				
ANR	1240715	ExpressionStatement		3214:65:102688:102688	1240544	14	True				
ANR	1240716	ExpressionStatement	smart_str_free ( & nscat )	3216:2:102698:102720	1240544	6	True				
ANR	1240717	CallExpression	smart_str_free ( & nscat )		1240544	0					
ANR	1240718	Callee	smart_str_free		1240544	0					
ANR	1240719	Identifier	smart_str_free		1240544	0					
ANR	1240720	ArgumentList	& nscat		1240544	1					
ANR	1240721	Argument	& nscat		1240544	0					
ANR	1240722	UnaryOperationExpression	& nscat		1240544	0					
ANR	1240723	UnaryOperator	&		1240544	0					
ANR	1240724	Identifier	nscat		1240544	1					
ANR	1240725	ExpressionStatement	buf = xmlBufferCreate ( )	3219:1:102727:102750	1240544	3	True				
ANR	1240726	AssignmentExpression	buf = xmlBufferCreate ( )		1240544	0		=			
ANR	1240727	Identifier	buf		1240544	0					
ANR	1240728	CallExpression	xmlBufferCreate ( )		1240544	1					
ANR	1240729	Callee	xmlBufferCreate		1240544	0					
ANR	1240730	Identifier	xmlBufferCreate		1240544	0					
ANR	1240731	ArgumentList			1240544	1					
ANR	1240732	ExpressionStatement	"xmlNodeDump ( buf , NULL , data , 0 , 0 )"	3220:1:102753:102787	1240544	4	True				
ANR	1240733	CallExpression	"xmlNodeDump ( buf , NULL , data , 0 , 0 )"		1240544	0					
ANR	1240734	Callee	xmlNodeDump		1240544	0					
ANR	1240735	Identifier	xmlNodeDump		1240544	0					
ANR	1240736	ArgumentList	buf		1240544	1					
ANR	1240737	Argument	buf		1240544	0					
ANR	1240738	Identifier	buf		1240544	0					
ANR	1240739	Argument	NULL		1240544	1					
ANR	1240740	Identifier	NULL		1240544	0					
ANR	1240741	Argument	data		1240544	2					
ANR	1240742	Identifier	data		1240544	0					
ANR	1240743	Argument	0		1240544	3					
ANR	1240744	PrimaryExpression	0		1240544	0					
ANR	1240745	Argument	0		1240544	4					
ANR	1240746	PrimaryExpression	0		1240544	0					
ANR	1240747	ExpressionStatement	MAKE_STD_ZVAL ( ret )	3221:1:102790:102808	1240544	5	True				
ANR	1240748	CallExpression	MAKE_STD_ZVAL ( ret )		1240544	0					
ANR	1240749	Callee	MAKE_STD_ZVAL		1240544	0					
ANR	1240750	Identifier	MAKE_STD_ZVAL		1240544	0					
ANR	1240751	ArgumentList	ret		1240544	1					
ANR	1240752	Argument	ret		1240544	0					
ANR	1240753	Identifier	ret		1240544	0					
ANR	1240754	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) xmlBufferContent ( buf ) , 1 )"	3222:1:102811:102860	1240544	6	True				
ANR	1240755	CallExpression	"ZVAL_STRING ( ret , ( char * ) xmlBufferContent ( buf ) , 1 )"		1240544	0					
ANR	1240756	Callee	ZVAL_STRING		1240544	0					
ANR	1240757	Identifier	ZVAL_STRING		1240544	0					
ANR	1240758	ArgumentList	ret		1240544	1					
ANR	1240759	Argument	ret		1240544	0					
ANR	1240760	Identifier	ret		1240544	0					
ANR	1240761	Argument	( char * ) xmlBufferContent ( buf )		1240544	1					
ANR	1240762	CastExpression	( char * ) xmlBufferContent ( buf )		1240544	0					
ANR	1240763	CastTarget	char *		1240544	0					
ANR	1240764	CallExpression	xmlBufferContent ( buf )		1240544	1					
ANR	1240765	Callee	xmlBufferContent		1240544	0					
ANR	1240766	Identifier	xmlBufferContent		1240544	0					
ANR	1240767	ArgumentList	buf		1240544	1					
ANR	1240768	Argument	buf		1240544	0					
ANR	1240769	Identifier	buf		1240544	0					
ANR	1240770	Argument	1		1240544	2					
ANR	1240771	PrimaryExpression	1		1240544	0					
ANR	1240772	ExpressionStatement	xmlBufferFree ( buf )	3223:1:102863:102881	1240544	7	True				
ANR	1240773	CallExpression	xmlBufferFree ( buf )		1240544	0					
ANR	1240774	Callee	xmlBufferFree		1240544	0					
ANR	1240775	Identifier	xmlBufferFree		1240544	0					
ANR	1240776	ArgumentList	buf		1240544	1					
ANR	1240777	Argument	buf		1240544	0					
ANR	1240778	Identifier	buf		1240544	0					
ANR	1240779	ReturnStatement	return ret ;	3224:1:102884:102894	1240544	8	True				
ANR	1240780	Identifier	ret		1240544	0					
ANR	1240781	ReturnType	static zval *		1240544	1					
ANR	1240782	Identifier	to_zval_any		1240544	2					
ANR	1240783	ParameterList	"encodeTypePtr type , xmlNodePtr data TSRMLS_DC"		1240544	3					
ANR	1240784	Parameter	encodeTypePtr type	3195:25:102057:102074	1240544	0	True				
ANR	1240785	ParameterType	encodeTypePtr		1240544	0					
ANR	1240786	Identifier	type		1240544	1					
ANR	1240787	Parameter	xmlNodePtr data TSRMLS_DC	3195:45:102077:102101	1240544	1	True				
ANR	1240788	ParameterType	xmlNodePtr data		1240544	0					
ANR	1240789	Identifier	TSRMLS_DC		1240544	1					
ANR	1240790	CFGEntryNode	ENTRY		1240544		True				
ANR	1240791	CFGExitNode	EXIT		1240544		True				
ANR	1240792	Symbol	* * data		1240544						
ANR	1240793	Symbol	* * sdl_type		1240544						
ANR	1240794	Symbol	xmlBufferCreate		1240544						
ANR	1240795	Symbol	data		1240544						
ANR	1240796	Symbol	* data -> ns		1240544						
ANR	1240797	Symbol	data -> name		1240544						
ANR	1240798	Symbol	data -> ns		1240544						
ANR	1240799	Symbol	type		1240544						
ANR	1240800	Symbol	* SOAP_GLOBAL		1240544						
ANR	1240801	Symbol	TSRMLS_DC		1240544						
ANR	1240802	Symbol	nscat . c		1240544						
ANR	1240803	Symbol	zend_hash_find		1240544						
ANR	1240804	Symbol	* sdl_type		1240544						
ANR	1240805	Symbol	ret		1240544						
ANR	1240806	Symbol	SUCCESS		1240544						
ANR	1240807	Symbol	NULL		1240544						
ANR	1240808	Symbol	data -> ns -> href		1240544						
ANR	1240809	Symbol	nscat . len		1240544						
ANR	1240810	Symbol	( * sdl_type ) -> encode		1240544						
ANR	1240811	Symbol	sdl_type		1240544						
ANR	1240812	Symbol	SOAP_GLOBAL		1240544						
ANR	1240813	Symbol	xmlBufferContent		1240544						
ANR	1240814	Symbol	buf		1240544						
ANR	1240815	Symbol	nscat		1240544						
ANR	1240816	Symbol	sdl		1240544						
ANR	1240817	Symbol	& nscat		1240544						
ANR	1240818	Symbol	* data		1240544						
ANR	1240819	Symbol	SOAP_GLOBAL ( sdl ) -> elements		1240544						
ANR	1240820	Symbol	& sdl_type		1240544						
ANR	1240821	Function	to_xml_any	3227:0:102899:104231							
ANR	1240822	FunctionDef	"to_xml_any (encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1240821	0					
ANR	1240823	CompoundStatement		3228:0:103000:104231	1240821	0					
ANR	1240824	IdentifierDeclStatement	xmlNodePtr ret = NULL ;	3229:1:103003:103024	1240821	0	True				
ANR	1240825	IdentifierDecl	ret = NULL		1240821	0					
ANR	1240826	IdentifierDeclType	xmlNodePtr		1240821	0					
ANR	1240827	Identifier	ret		1240821	1					
ANR	1240828	AssignmentExpression	ret = NULL		1240821	2		=			
ANR	1240829	Identifier	NULL		1240821	0					
ANR	1240830	Identifier	NULL		1240821	1					
ANR	1240831	IfStatement	if ( Z_TYPE_P ( data ) == IS_ARRAY )		1240821	1					
ANR	1240832	Condition	Z_TYPE_P ( data ) == IS_ARRAY	3231:5:103032:103057	1240821	0	True				
ANR	1240833	EqualityExpression	Z_TYPE_P ( data ) == IS_ARRAY		1240821	0		==			
ANR	1240834	CallExpression	Z_TYPE_P ( data )		1240821	0					
ANR	1240835	Callee	Z_TYPE_P		1240821	0					
ANR	1240836	Identifier	Z_TYPE_P		1240821	0					
ANR	1240837	ArgumentList	data		1240821	1					
ANR	1240838	Argument	data		1240821	0					
ANR	1240839	Identifier	data		1240821	0					
ANR	1240840	Identifier	IS_ARRAY		1240821	1					
ANR	1240841	CompoundStatement		10:2:173:182	1240821	1					
ANR	1240842	IdentifierDeclStatement	HashPosition pos ;	3232:2:103064:103080	1240821	0	True				
ANR	1240843	IdentifierDecl	pos		1240821	0					
ANR	1240844	IdentifierDeclType	HashPosition		1240821	0					
ANR	1240845	Identifier	pos		1240821	1					
ANR	1240846	IdentifierDeclStatement	zval * * el ;	3233:2:103084:103093	1240821	1	True				
ANR	1240847	IdentifierDecl	* * el		1240821	0					
ANR	1240848	IdentifierDeclType	zval * *		1240821	0					
ANR	1240849	Identifier	el		1240821	1					
ANR	1240850	IdentifierDeclStatement	encodePtr enc = get_conversion ( XSD_ANYXML ) ;	3234:2:103097:103139	1240821	2	True				
ANR	1240851	IdentifierDecl	enc = get_conversion ( XSD_ANYXML )		1240821	0					
ANR	1240852	IdentifierDeclType	encodePtr		1240821	0					
ANR	1240853	Identifier	enc		1240821	1					
ANR	1240854	AssignmentExpression	enc = get_conversion ( XSD_ANYXML )		1240821	2		=			
ANR	1240855	Identifier	enc		1240821	0					
ANR	1240856	CallExpression	get_conversion ( XSD_ANYXML )		1240821	1					
ANR	1240857	Callee	get_conversion		1240821	0					
ANR	1240858	Identifier	get_conversion		1240821	0					
ANR	1240859	ArgumentList	XSD_ANYXML		1240821	1					
ANR	1240860	Argument	XSD_ANYXML		1240821	0					
ANR	1240861	Identifier	XSD_ANYXML		1240821	0					
ANR	1240862	IdentifierDeclStatement	char * name ;	3235:2:103143:103153	1240821	3	True				
ANR	1240863	IdentifierDecl	* name		1240821	0					
ANR	1240864	IdentifierDeclType	char *		1240821	0					
ANR	1240865	Identifier	name		1240821	1					
ANR	1240866	IdentifierDeclStatement	uint name_len ;	3236:2:103157:103170	1240821	4	True				
ANR	1240867	IdentifierDecl	name_len		1240821	0					
ANR	1240868	IdentifierDeclType	uint		1240821	0					
ANR	1240869	Identifier	name_len		1240821	1					
ANR	1240870	IdentifierDeclStatement	ulong idx ;	3237:2:103174:103183	1240821	5	True				
ANR	1240871	IdentifierDecl	idx		1240821	0					
ANR	1240872	IdentifierDeclType	ulong		1240821	0					
ANR	1240873	Identifier	idx		1240821	1					
ANR	1240874	ForStatement	"for ( zend_hash_internal_pointer_reset_ex ( Z_ARRVAL_P ( data ) , & pos ) ; zend_hash_get_current_data_ex ( Z_ARRVAL_P ( data ) , ( void * * ) & el , & pos ) == SUCCESS ; zend_hash_move_forward_ex ( Z_ARRVAL_P ( data ) , & pos ) )"		1240821	6					
ANR	1240875	ForInit	"zend_hash_internal_pointer_reset_ex ( Z_ARRVAL_P ( data ) , & pos ) ;"	3239:7:103193:103252	1240821	0	True				
ANR	1240876	CallExpression	"zend_hash_internal_pointer_reset_ex ( Z_ARRVAL_P ( data ) , & pos )"		1240821	0					
ANR	1240877	Callee	zend_hash_internal_pointer_reset_ex		1240821	0					
ANR	1240878	Identifier	zend_hash_internal_pointer_reset_ex		1240821	0					
ANR	1240879	ArgumentList	Z_ARRVAL_P ( data )		1240821	1					
ANR	1240880	Argument	Z_ARRVAL_P ( data )		1240821	0					
ANR	1240881	CallExpression	Z_ARRVAL_P ( data )		1240821	0					
ANR	1240882	Callee	Z_ARRVAL_P		1240821	0					
ANR	1240883	Identifier	Z_ARRVAL_P		1240821	0					
ANR	1240884	ArgumentList	data		1240821	1					
ANR	1240885	Argument	data		1240821	0					
ANR	1240886	Identifier	data		1240821	0					
ANR	1240887	Argument	& pos		1240821	1					
ANR	1240888	UnaryOperationExpression	& pos		1240821	0					
ANR	1240889	UnaryOperator	&		1240821	0					
ANR	1240890	Identifier	pos		1240821	1					
ANR	1240891	Condition	"zend_hash_get_current_data_ex ( Z_ARRVAL_P ( data ) , ( void * * ) & el , & pos ) == SUCCESS"	3240:7:103261:103339	1240821	1	True				
ANR	1240892	EqualityExpression	"zend_hash_get_current_data_ex ( Z_ARRVAL_P ( data ) , ( void * * ) & el , & pos ) == SUCCESS"		1240821	0		==			
ANR	1240893	CallExpression	"zend_hash_get_current_data_ex ( Z_ARRVAL_P ( data ) , ( void * * ) & el , & pos )"		1240821	0					
ANR	1240894	Callee	zend_hash_get_current_data_ex		1240821	0					
ANR	1240895	Identifier	zend_hash_get_current_data_ex		1240821	0					
ANR	1240896	ArgumentList	Z_ARRVAL_P ( data )		1240821	1					
ANR	1240897	Argument	Z_ARRVAL_P ( data )		1240821	0					
ANR	1240898	CallExpression	Z_ARRVAL_P ( data )		1240821	0					
ANR	1240899	Callee	Z_ARRVAL_P		1240821	0					
ANR	1240900	Identifier	Z_ARRVAL_P		1240821	0					
ANR	1240901	ArgumentList	data		1240821	1					
ANR	1240902	Argument	data		1240821	0					
ANR	1240903	Identifier	data		1240821	0					
ANR	1240904	Argument	( void * * ) & el		1240821	1					
ANR	1240905	CastExpression	( void * * ) & el		1240821	0					
ANR	1240906	CastTarget	void * *		1240821	0					
ANR	1240907	UnaryOperationExpression	& el		1240821	1					
ANR	1240908	UnaryOperator	&		1240821	0					
ANR	1240909	Identifier	el		1240821	1					
ANR	1240910	Argument	& pos		1240821	2					
ANR	1240911	UnaryOperationExpression	& pos		1240821	0					
ANR	1240912	UnaryOperator	&		1240821	0					
ANR	1240913	Identifier	pos		1240821	1					
ANR	1240914	Identifier	SUCCESS		1240821	1					
ANR	1240915	CallExpression	"zend_hash_move_forward_ex ( Z_ARRVAL_P ( data ) , & pos )"	3241:7:103349:103397	1240821	2	True				
ANR	1240916	Callee	zend_hash_move_forward_ex		1240821	0					
ANR	1240917	Identifier	zend_hash_move_forward_ex		1240821	0					
ANR	1240918	ArgumentList	Z_ARRVAL_P ( data )		1240821	1					
ANR	1240919	Argument	Z_ARRVAL_P ( data )		1240821	0					
ANR	1240920	CallExpression	Z_ARRVAL_P ( data )		1240821	0					
ANR	1240921	Callee	Z_ARRVAL_P		1240821	0					
ANR	1240922	Identifier	Z_ARRVAL_P		1240821	0					
ANR	1240923	ArgumentList	data		1240821	1					
ANR	1240924	Argument	data		1240821	0					
ANR	1240925	Identifier	data		1240821	0					
ANR	1240926	Argument	& pos		1240821	1					
ANR	1240927	UnaryOperationExpression	& pos		1240821	0					
ANR	1240928	UnaryOperator	&		1240821	0					
ANR	1240929	Identifier	pos		1240821	1					
ANR	1240930	CompoundStatement		14:58:399:399	1240821	3					
ANR	1240931	Statement	ret	3242:3:103405:103407	1240821	0	True				
ANR	1240932	Statement	=	3242:7:103409:103409	1240821	1	True				
ANR	1240933	Statement	master_to_xml	3242:9:103411:103423	1240821	2	True				
ANR	1240934	Statement	(	3242:22:103424:103424	1240821	3	True				
ANR	1240935	Statement	enc	3242:23:103425:103427	1240821	4	True				
ANR	1240936	Statement	","	3242:26:103428:103428	1240821	5	True				
ANR	1240937	Statement	*	3242:28:103430:103430	1240821	6	True				
ANR	1240938	Statement	el	3242:29:103431:103432	1240821	7	True				
ANR	1240939	Statement	","	3242:31:103433:103433	1240821	8	True				
ANR	1240940	Statement	style	3242:33:103435:103439	1240821	9	True				
ANR	1240941	Statement	","	3242:38:103440:103440	1240821	10	True				
ANR	1240942	Statement	parent	3242:40:103442:103447	1240821	11	True				
ANR	1240943	Statement	TSRMLS_CC	3242:47:103449:103457	1240821	12	True				
ANR	1240944	Statement	)	3242:56:103458:103458	1240821	13	True				
ANR	1240945	ExpressionStatement		3242:57:103459:103459	1240821	14	True				
ANR	1240946	IfStatement	"if ( ret && ret -> name != xmlStringTextNoenc && zend_hash_get_current_key_ex ( Z_ARRVAL_P ( data ) , & name , & name_len , & idx , 0 , & pos ) == HASH_KEY_IS_STRING )"		1240821	15					
ANR	1240947	Condition	"ret && ret -> name != xmlStringTextNoenc && zend_hash_get_current_key_ex ( Z_ARRVAL_P ( data ) , & name , & name_len , & idx , 0 , & pos ) == HASH_KEY_IS_STRING"	3243:10:103471:103633	1240821	0	True				
ANR	1240948	AndExpression	"ret && ret -> name != xmlStringTextNoenc && zend_hash_get_current_key_ex ( Z_ARRVAL_P ( data ) , & name , & name_len , & idx , 0 , & pos ) == HASH_KEY_IS_STRING"		1240821	0		&&			
ANR	1240949	Identifier	ret		1240821	0					
ANR	1240950	AndExpression	"ret -> name != xmlStringTextNoenc && zend_hash_get_current_key_ex ( Z_ARRVAL_P ( data ) , & name , & name_len , & idx , 0 , & pos ) == HASH_KEY_IS_STRING"		1240821	1		&&			
ANR	1240951	EqualityExpression	ret -> name != xmlStringTextNoenc		1240821	0		!=			
ANR	1240952	PtrMemberAccess	ret -> name		1240821	0					
ANR	1240953	Identifier	ret		1240821	0					
ANR	1240954	Identifier	name		1240821	1					
ANR	1240955	Identifier	xmlStringTextNoenc		1240821	1					
ANR	1240956	EqualityExpression	"zend_hash_get_current_key_ex ( Z_ARRVAL_P ( data ) , & name , & name_len , & idx , 0 , & pos ) == HASH_KEY_IS_STRING"		1240821	1		==			
ANR	1240957	CallExpression	"zend_hash_get_current_key_ex ( Z_ARRVAL_P ( data ) , & name , & name_len , & idx , 0 , & pos )"		1240821	0					
ANR	1240958	Callee	zend_hash_get_current_key_ex		1240821	0					
ANR	1240959	Identifier	zend_hash_get_current_key_ex		1240821	0					
ANR	1240960	ArgumentList	Z_ARRVAL_P ( data )		1240821	1					
ANR	1240961	Argument	Z_ARRVAL_P ( data )		1240821	0					
ANR	1240962	CallExpression	Z_ARRVAL_P ( data )		1240821	0					
ANR	1240963	Callee	Z_ARRVAL_P		1240821	0					
ANR	1240964	Identifier	Z_ARRVAL_P		1240821	0					
ANR	1240965	ArgumentList	data		1240821	1					
ANR	1240966	Argument	data		1240821	0					
ANR	1240967	Identifier	data		1240821	0					
ANR	1240968	Argument	& name		1240821	1					
ANR	1240969	UnaryOperationExpression	& name		1240821	0					
ANR	1240970	UnaryOperator	&		1240821	0					
ANR	1240971	Identifier	name		1240821	1					
ANR	1240972	Argument	& name_len		1240821	2					
ANR	1240973	UnaryOperationExpression	& name_len		1240821	0					
ANR	1240974	UnaryOperator	&		1240821	0					
ANR	1240975	Identifier	name_len		1240821	1					
ANR	1240976	Argument	& idx		1240821	3					
ANR	1240977	UnaryOperationExpression	& idx		1240821	0					
ANR	1240978	UnaryOperator	&		1240821	0					
ANR	1240979	Identifier	idx		1240821	1					
ANR	1240980	Argument	0		1240821	4					
ANR	1240981	PrimaryExpression	0		1240821	0					
ANR	1240982	Argument	& pos		1240821	5					
ANR	1240983	UnaryOperationExpression	& pos		1240821	0					
ANR	1240984	UnaryOperator	&		1240821	0					
ANR	1240985	Identifier	pos		1240821	1					
ANR	1240986	Identifier	HASH_KEY_IS_STRING		1240821	1					
ANR	1240987	CompoundStatement		18:113:635:635	1240821	1					
ANR	1240988	ExpressionStatement	"xmlNodeSetName ( ret , BAD_CAST ( name ) )"	3246:4:103642:103677	1240821	0	True				
ANR	1240989	CallExpression	"xmlNodeSetName ( ret , BAD_CAST ( name ) )"		1240821	0					
ANR	1240990	Callee	xmlNodeSetName		1240821	0					
ANR	1240991	Identifier	xmlNodeSetName		1240821	0					
ANR	1240992	ArgumentList	ret		1240821	1					
ANR	1240993	Argument	ret		1240821	0					
ANR	1240994	Identifier	ret		1240821	0					
ANR	1240995	Argument	BAD_CAST ( name )		1240821	1					
ANR	1240996	CallExpression	BAD_CAST ( name )		1240821	0					
ANR	1240997	Callee	BAD_CAST		1240821	0					
ANR	1240998	Identifier	BAD_CAST		1240821	0					
ANR	1240999	ArgumentList	name		1240821	1					
ANR	1241000	Argument	name		1240821	0					
ANR	1241001	Identifier	name		1240821	0					
ANR	1241002	ReturnStatement	return ret ;	3249:2:103693:103703	1240821	7	True				
ANR	1241003	Identifier	ret		1240821	0					
ANR	1241004	IfStatement	if ( Z_TYPE_P ( data ) == IS_STRING )		1240821	2					
ANR	1241005	Condition	Z_TYPE_P ( data ) == IS_STRING	3251:5:103713:103739	1240821	0	True				
ANR	1241006	EqualityExpression	Z_TYPE_P ( data ) == IS_STRING		1240821	0		==			
ANR	1241007	CallExpression	Z_TYPE_P ( data )		1240821	0					
ANR	1241008	Callee	Z_TYPE_P		1240821	0					
ANR	1241009	Identifier	Z_TYPE_P		1240821	0					
ANR	1241010	ArgumentList	data		1240821	1					
ANR	1241011	Argument	data		1240821	0					
ANR	1241012	Identifier	data		1240821	0					
ANR	1241013	Identifier	IS_STRING		1240821	1					
ANR	1241014	CompoundStatement		24:34:741:741	1240821	1					
ANR	1241015	ExpressionStatement	"ret = xmlNewTextLen ( BAD_CAST ( Z_STRVAL_P ( data ) ) , Z_STRLEN_P ( data ) )"	3252:2:103746:103811	1240821	0	True				
ANR	1241016	AssignmentExpression	"ret = xmlNewTextLen ( BAD_CAST ( Z_STRVAL_P ( data ) ) , Z_STRLEN_P ( data ) )"		1240821	0		=			
ANR	1241017	Identifier	ret		1240821	0					
ANR	1241018	CallExpression	"xmlNewTextLen ( BAD_CAST ( Z_STRVAL_P ( data ) ) , Z_STRLEN_P ( data ) )"		1240821	1					
ANR	1241019	Callee	xmlNewTextLen		1240821	0					
ANR	1241020	Identifier	xmlNewTextLen		1240821	0					
ANR	1241021	ArgumentList	BAD_CAST ( Z_STRVAL_P ( data ) )		1240821	1					
ANR	1241022	Argument	BAD_CAST ( Z_STRVAL_P ( data ) )		1240821	0					
ANR	1241023	CallExpression	BAD_CAST ( Z_STRVAL_P ( data ) )		1240821	0					
ANR	1241024	Callee	BAD_CAST		1240821	0					
ANR	1241025	Identifier	BAD_CAST		1240821	0					
ANR	1241026	ArgumentList	Z_STRVAL_P ( data )		1240821	1					
ANR	1241027	Argument	Z_STRVAL_P ( data )		1240821	0					
ANR	1241028	CallExpression	Z_STRVAL_P ( data )		1240821	0					
ANR	1241029	Callee	Z_STRVAL_P		1240821	0					
ANR	1241030	Identifier	Z_STRVAL_P		1240821	0					
ANR	1241031	ArgumentList	data		1240821	1					
ANR	1241032	Argument	data		1240821	0					
ANR	1241033	Identifier	data		1240821	0					
ANR	1241034	Argument	Z_STRLEN_P ( data )		1240821	1					
ANR	1241035	CallExpression	Z_STRLEN_P ( data )		1240821	0					
ANR	1241036	Callee	Z_STRLEN_P		1240821	0					
ANR	1241037	Identifier	Z_STRLEN_P		1240821	0					
ANR	1241038	ArgumentList	data		1240821	1					
ANR	1241039	Argument	data		1240821	0					
ANR	1241040	Identifier	data		1240821	0					
ANR	1241041	ElseStatement	else		1240821	0					
ANR	1241042	CompoundStatement		27:2:824:840	1240821	0					
ANR	1241043	IdentifierDeclStatement	zval tmp = * data ;	3254:2:103825:103841	1240821	0	True				
ANR	1241044	IdentifierDecl	tmp = * data		1240821	0					
ANR	1241045	IdentifierDeclType	zval		1240821	0					
ANR	1241046	Identifier	tmp		1240821	1					
ANR	1241047	AssignmentExpression	tmp = * data		1240821	2		=			
ANR	1241048	Identifier	tmp		1240821	0					
ANR	1241049	UnaryOperationExpression	* data		1240821	1					
ANR	1241050	UnaryOperator	*		1240821	0					
ANR	1241051	Identifier	data		1240821	1					
ANR	1241052	ExpressionStatement	zval_copy_ctor ( & tmp )	3256:2:103846:103866	1240821	1	True				
ANR	1241053	CallExpression	zval_copy_ctor ( & tmp )		1240821	0					
ANR	1241054	Callee	zval_copy_ctor		1240821	0					
ANR	1241055	Identifier	zval_copy_ctor		1240821	0					
ANR	1241056	ArgumentList	& tmp		1240821	1					
ANR	1241057	Argument	& tmp		1240821	0					
ANR	1241058	UnaryOperationExpression	& tmp		1240821	0					
ANR	1241059	UnaryOperator	&		1240821	0					
ANR	1241060	Identifier	tmp		1240821	1					
ANR	1241061	ExpressionStatement	convert_to_string ( & tmp )	3257:2:103870:103893	1240821	2	True				
ANR	1241062	CallExpression	convert_to_string ( & tmp )		1240821	0					
ANR	1241063	Callee	convert_to_string		1240821	0					
ANR	1241064	Identifier	convert_to_string		1240821	0					
ANR	1241065	ArgumentList	& tmp		1240821	1					
ANR	1241066	Argument	& tmp		1240821	0					
ANR	1241067	UnaryOperationExpression	& tmp		1240821	0					
ANR	1241068	UnaryOperator	&		1240821	0					
ANR	1241069	Identifier	tmp		1240821	1					
ANR	1241070	ExpressionStatement	"ret = xmlNewTextLen ( BAD_CAST ( Z_STRVAL ( tmp ) ) , Z_STRLEN ( tmp ) )"	3258:2:103897:103956	1240821	3	True				
ANR	1241071	AssignmentExpression	"ret = xmlNewTextLen ( BAD_CAST ( Z_STRVAL ( tmp ) ) , Z_STRLEN ( tmp ) )"		1240821	0		=			
ANR	1241072	Identifier	ret		1240821	0					
ANR	1241073	CallExpression	"xmlNewTextLen ( BAD_CAST ( Z_STRVAL ( tmp ) ) , Z_STRLEN ( tmp ) )"		1240821	1					
ANR	1241074	Callee	xmlNewTextLen		1240821	0					
ANR	1241075	Identifier	xmlNewTextLen		1240821	0					
ANR	1241076	ArgumentList	BAD_CAST ( Z_STRVAL ( tmp ) )		1240821	1					
ANR	1241077	Argument	BAD_CAST ( Z_STRVAL ( tmp ) )		1240821	0					
ANR	1241078	CallExpression	BAD_CAST ( Z_STRVAL ( tmp ) )		1240821	0					
ANR	1241079	Callee	BAD_CAST		1240821	0					
ANR	1241080	Identifier	BAD_CAST		1240821	0					
ANR	1241081	ArgumentList	Z_STRVAL ( tmp )		1240821	1					
ANR	1241082	Argument	Z_STRVAL ( tmp )		1240821	0					
ANR	1241083	CallExpression	Z_STRVAL ( tmp )		1240821	0					
ANR	1241084	Callee	Z_STRVAL		1240821	0					
ANR	1241085	Identifier	Z_STRVAL		1240821	0					
ANR	1241086	ArgumentList	tmp		1240821	1					
ANR	1241087	Argument	tmp		1240821	0					
ANR	1241088	Identifier	tmp		1240821	0					
ANR	1241089	Argument	Z_STRLEN ( tmp )		1240821	1					
ANR	1241090	CallExpression	Z_STRLEN ( tmp )		1240821	0					
ANR	1241091	Callee	Z_STRLEN		1240821	0					
ANR	1241092	Identifier	Z_STRLEN		1240821	0					
ANR	1241093	ArgumentList	tmp		1240821	1					
ANR	1241094	Argument	tmp		1240821	0					
ANR	1241095	Identifier	tmp		1240821	0					
ANR	1241096	ExpressionStatement	zval_dtor ( & tmp )	3259:2:103960:103975	1240821	4	True				
ANR	1241097	CallExpression	zval_dtor ( & tmp )		1240821	0					
ANR	1241098	Callee	zval_dtor		1240821	0					
ANR	1241099	Identifier	zval_dtor		1240821	0					
ANR	1241100	ArgumentList	& tmp		1240821	1					
ANR	1241101	Argument	& tmp		1240821	0					
ANR	1241102	UnaryOperationExpression	& tmp		1240821	0					
ANR	1241103	UnaryOperator	&		1240821	0					
ANR	1241104	Identifier	tmp		1240821	1					
ANR	1241105	ExpressionStatement	ret -> name = xmlStringTextNoenc	3262:1:103982:104012	1240821	3	True				
ANR	1241106	AssignmentExpression	ret -> name = xmlStringTextNoenc		1240821	0		=			
ANR	1241107	PtrMemberAccess	ret -> name		1240821	0					
ANR	1241108	Identifier	ret		1240821	0					
ANR	1241109	Identifier	name		1240821	1					
ANR	1241110	Identifier	xmlStringTextNoenc		1240821	1					
ANR	1241111	ExpressionStatement	ret -> parent = parent	3263:1:104015:104035	1240821	4	True				
ANR	1241112	AssignmentExpression	ret -> parent = parent		1240821	0		=			
ANR	1241113	PtrMemberAccess	ret -> parent		1240821	0					
ANR	1241114	Identifier	ret		1240821	0					
ANR	1241115	Identifier	parent		1240821	1					
ANR	1241116	Identifier	parent		1240821	1					
ANR	1241117	ExpressionStatement	ret -> doc = parent -> doc	3264:1:104038:104060	1240821	5	True				
ANR	1241118	AssignmentExpression	ret -> doc = parent -> doc		1240821	0		=			
ANR	1241119	PtrMemberAccess	ret -> doc		1240821	0					
ANR	1241120	Identifier	ret		1240821	0					
ANR	1241121	Identifier	doc		1240821	1					
ANR	1241122	PtrMemberAccess	parent -> doc		1240821	1					
ANR	1241123	Identifier	parent		1240821	0					
ANR	1241124	Identifier	doc		1240821	1					
ANR	1241125	ExpressionStatement	ret -> prev = parent -> last	3265:1:104063:104087	1240821	6	True				
ANR	1241126	AssignmentExpression	ret -> prev = parent -> last		1240821	0		=			
ANR	1241127	PtrMemberAccess	ret -> prev		1240821	0					
ANR	1241128	Identifier	ret		1240821	0					
ANR	1241129	Identifier	prev		1240821	1					
ANR	1241130	PtrMemberAccess	parent -> last		1240821	1					
ANR	1241131	Identifier	parent		1240821	0					
ANR	1241132	Identifier	last		1240821	1					
ANR	1241133	ExpressionStatement	ret -> next = NULL	3266:1:104090:104106	1240821	7	True				
ANR	1241134	AssignmentExpression	ret -> next = NULL		1240821	0		=			
ANR	1241135	PtrMemberAccess	ret -> next		1240821	0					
ANR	1241136	Identifier	ret		1240821	0					
ANR	1241137	Identifier	next		1240821	1					
ANR	1241138	Identifier	NULL		1240821	1					
ANR	1241139	IfStatement	if ( parent -> last )		1240821	8					
ANR	1241140	Condition	parent -> last	3267:5:104113:104124	1240821	0	True				
ANR	1241141	PtrMemberAccess	parent -> last		1240821	0					
ANR	1241142	Identifier	parent		1240821	0					
ANR	1241143	Identifier	last		1240821	1					
ANR	1241144	CompoundStatement		40:19:1126:1126	1240821	1					
ANR	1241145	ExpressionStatement	parent -> last -> next = ret	3268:2:104131:104155	1240821	0	True				
ANR	1241146	AssignmentExpression	parent -> last -> next = ret		1240821	0		=			
ANR	1241147	PtrMemberAccess	parent -> last -> next		1240821	0					
ANR	1241148	PtrMemberAccess	parent -> last		1240821	0					
ANR	1241149	Identifier	parent		1240821	0					
ANR	1241150	Identifier	last		1240821	1					
ANR	1241151	Identifier	next		1240821	1					
ANR	1241152	Identifier	ret		1240821	1					
ANR	1241153	ElseStatement	else		1240821	0					
ANR	1241154	CompoundStatement		42:8:1164:1164	1240821	0					
ANR	1241155	ExpressionStatement	parent -> children = ret	3270:2:104169:104191	1240821	0	True				
ANR	1241156	AssignmentExpression	parent -> children = ret		1240821	0		=			
ANR	1241157	PtrMemberAccess	parent -> children		1240821	0					
ANR	1241158	Identifier	parent		1240821	0					
ANR	1241159	Identifier	children		1240821	1					
ANR	1241160	Identifier	ret		1240821	1					
ANR	1241161	ExpressionStatement	parent -> last = ret	3272:1:104197:104215	1240821	9	True				
ANR	1241162	AssignmentExpression	parent -> last = ret		1240821	0		=			
ANR	1241163	PtrMemberAccess	parent -> last		1240821	0					
ANR	1241164	Identifier	parent		1240821	0					
ANR	1241165	Identifier	last		1240821	1					
ANR	1241166	Identifier	ret		1240821	1					
ANR	1241167	ReturnStatement	return ret ;	3274:1:104219:104229	1240821	10	True				
ANR	1241168	Identifier	ret		1240821	0					
ANR	1241169	ReturnType	static xmlNodePtr		1240821	1					
ANR	1241170	Identifier	to_xml_any		1240821	2					
ANR	1241171	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1240821	3					
ANR	1241172	Parameter	encodeTypePtr type	3227:29:102928:102945	1240821	0	True				
ANR	1241173	ParameterType	encodeTypePtr		1240821	0					
ANR	1241174	Identifier	type		1240821	1					
ANR	1241175	Parameter	zval * data	3227:49:102948:102957	1240821	1	True				
ANR	1241176	ParameterType	zval *		1240821	0					
ANR	1241177	Identifier	data		1240821	1					
ANR	1241178	Parameter	int style	3227:61:102960:102968	1240821	2	True				
ANR	1241179	ParameterType	int		1240821	0					
ANR	1241180	Identifier	style		1240821	1					
ANR	1241181	Parameter	xmlNodePtr parent TSRMLS_DC	3227:72:102971:102997	1240821	3	True				
ANR	1241182	ParameterType	xmlNodePtr parent		1240821	0					
ANR	1241183	Identifier	TSRMLS_DC		1240821	1					
ANR	1241184	CFGEntryNode	ENTRY		1240821		True				
ANR	1241185	CFGExitNode	EXIT		1240821		True				
ANR	1241186	Symbol	parent		1240821						
ANR	1241187	Symbol	* parent		1240821						
ANR	1241188	Symbol	data		1240821						
ANR	1241189	Symbol	HASH_KEY_IS_STRING		1240821						
ANR	1241190	Symbol	get_conversion		1240821						
ANR	1241191	Symbol	& name		1240821						
ANR	1241192	Symbol	type		1240821						
ANR	1241193	Symbol	TSRMLS_DC		1240821						
ANR	1241194	Symbol	XSD_ANYXML		1240821						
ANR	1241195	Symbol	parent -> doc		1240821						
ANR	1241196	Symbol	parent -> children		1240821						
ANR	1241197	Symbol	xmlNewTextLen		1240821						
ANR	1241198	Symbol	tmp		1240821						
ANR	1241199	Symbol	IS_STRING		1240821						
ANR	1241200	Symbol	ret		1240821						
ANR	1241201	Symbol	NULL		1240821						
ANR	1241202	Symbol	el		1240821						
ANR	1241203	Symbol	zend_hash_get_current_key_ex		1240821						
ANR	1241204	Symbol	ret -> name		1240821						
ANR	1241205	Symbol	& name_len		1240821						
ANR	1241206	Symbol	xmlStringTextNoenc		1240821						
ANR	1241207	Symbol	* parent -> last		1240821						
ANR	1241208	Symbol	ret -> next		1240821						
ANR	1241209	Symbol	name		1240821						
ANR	1241210	Symbol	style		1240821						
ANR	1241211	Symbol	& tmp		1240821						
ANR	1241212	Symbol	idx		1240821						
ANR	1241213	Symbol	BAD_CAST		1240821						
ANR	1241214	Symbol	zend_hash_get_current_data_ex		1240821						
ANR	1241215	Symbol	* ret		1240821						
ANR	1241216	Symbol	Z_STRLEN		1240821						
ANR	1241217	Symbol	IS_ARRAY		1240821						
ANR	1241218	Symbol	pos		1240821						
ANR	1241219	Symbol	Z_STRVAL		1240821						
ANR	1241220	Symbol	parent -> last -> next		1240821						
ANR	1241221	Symbol	Z_STRLEN_P		1240821						
ANR	1241222	Symbol	enc		1240821						
ANR	1241223	Symbol	name_len		1240821						
ANR	1241224	Symbol	parent -> last		1240821						
ANR	1241225	Symbol	Z_ARRVAL_P		1240821						
ANR	1241226	Symbol	SUCCESS		1240821						
ANR	1241227	Symbol	& idx		1240821						
ANR	1241228	Symbol	* * parent		1240821						
ANR	1241229	Symbol	Z_TYPE_P		1240821						
ANR	1241230	Symbol	Z_STRVAL_P		1240821						
ANR	1241231	Symbol	ret -> doc		1240821						
ANR	1241232	Symbol	& el		1240821						
ANR	1241233	Symbol	ret -> prev		1240821						
ANR	1241234	Symbol	ret -> parent		1240821						
ANR	1241235	Symbol	& pos		1240821						
ANR	1241236	Symbol	* data		1240821						
ANR	1241237	Function	sdl_guess_convert_zval	3277:0:104234:106627							
ANR	1241238	FunctionDef	"sdl_guess_convert_zval (encodeTypePtr enc , xmlNodePtr data TSRMLS_DC)"		1241237	0					
ANR	1241239	CompoundStatement		3278:0:104309:106627	1241237	0					
ANR	1241240	IdentifierDeclStatement	sdlTypePtr type ;	3279:1:104312:104327	1241237	0	True				
ANR	1241241	IdentifierDecl	type		1241237	0					
ANR	1241242	IdentifierDeclType	sdlTypePtr		1241237	0					
ANR	1241243	Identifier	type		1241237	1					
ANR	1241244	ExpressionStatement	type = enc -> sdl_type	3281:1:104331:104351	1241237	1	True				
ANR	1241245	AssignmentExpression	type = enc -> sdl_type		1241237	0		=			
ANR	1241246	Identifier	type		1241237	0					
ANR	1241247	PtrMemberAccess	enc -> sdl_type		1241237	1					
ANR	1241248	Identifier	enc		1241237	0					
ANR	1241249	Identifier	sdl_type		1241237	1					
ANR	1241250	IfStatement	if ( type == NULL )		1241237	2					
ANR	1241251	Condition	type == NULL	3282:5:104358:104369	1241237	0	True				
ANR	1241252	EqualityExpression	type == NULL		1241237	0		==			
ANR	1241253	Identifier	type		1241237	0					
ANR	1241254	Identifier	NULL		1241237	1					
ANR	1241255	CompoundStatement		5:19:62:62	1241237	1					
ANR	1241256	Statement	return	3283:2:104376:104381	1241237	0	True				
ANR	1241257	Statement	guess_zval_convert	3283:9:104383:104400	1241237	1	True				
ANR	1241258	Statement	(	3283:27:104401:104401	1241237	2	True				
ANR	1241259	Statement	enc	3283:28:104402:104404	1241237	3	True				
ANR	1241260	Statement	","	3283:31:104405:104405	1241237	4	True				
ANR	1241261	Statement	data	3283:33:104407:104410	1241237	5	True				
ANR	1241262	Statement	TSRMLS_CC	3283:38:104412:104420	1241237	6	True				
ANR	1241263	Statement	)	3283:47:104421:104421	1241237	7	True				
ANR	1241264	ExpressionStatement		3283:48:104422:104422	1241237	8	True				
ANR	1241265	SwitchStatement	switch ( type -> kind )		1241237	3					
ANR	1241266	Condition	type -> kind	3314:9:105804:105813	1241237	0	True				
ANR	1241267	PtrMemberAccess	type -> kind		1241237	0					
ANR	1241268	Identifier	type		1241237	0					
ANR	1241269	Identifier	kind		1241237	1					
ANR	1241270	CompoundStatement		37:21:1506:1506	1241237	1					
ANR	1241271	Label	case XSD_TYPEKIND_SIMPLE :	3315:2:105820:105844	1241237	0	True				
ANR	1241272	Identifier	XSD_TYPEKIND_SIMPLE		1241237	0					
ANR	1241273	IfStatement	if ( type -> encode && enc != & type -> encode -> details )		1241237	1					
ANR	1241274	Condition	type -> encode && enc != & type -> encode -> details	3316:7:105853:105897	1241237	0	True				
ANR	1241275	AndExpression	type -> encode && enc != & type -> encode -> details		1241237	0		&&			
ANR	1241276	PtrMemberAccess	type -> encode		1241237	0					
ANR	1241277	Identifier	type		1241237	0					
ANR	1241278	Identifier	encode		1241237	1					
ANR	1241279	EqualityExpression	enc != & type -> encode -> details		1241237	1		!=			
ANR	1241280	Identifier	enc		1241237	0					
ANR	1241281	UnaryOperationExpression	& type -> encode -> details		1241237	1					
ANR	1241282	UnaryOperator	&		1241237	0					
ANR	1241283	PtrMemberAccess	type -> encode -> details		1241237	1					
ANR	1241284	PtrMemberAccess	type -> encode		1241237	0					
ANR	1241285	Identifier	type		1241237	0					
ANR	1241286	Identifier	encode		1241237	1					
ANR	1241287	Identifier	details		1241237	1					
ANR	1241288	CompoundStatement		39:54:1590:1590	1241237	1					
ANR	1241289	Statement	return	3317:4:105906:105911	1241237	0	True				
ANR	1241290	Statement	master_to_zval_int	3317:11:105913:105930	1241237	1	True				
ANR	1241291	Statement	(	3317:29:105931:105931	1241237	2	True				
ANR	1241292	Statement	type	3317:30:105932:105935	1241237	3	True				
ANR	1241293	Statement	->	3317:34:105936:105937	1241237	4	True				
ANR	1241294	Statement	encode	3317:36:105938:105943	1241237	5	True				
ANR	1241295	Statement	","	3317:42:105944:105944	1241237	6	True				
ANR	1241296	Statement	data	3317:44:105946:105949	1241237	7	True				
ANR	1241297	Statement	TSRMLS_CC	3317:49:105951:105959	1241237	8	True				
ANR	1241298	Statement	)	3317:58:105960:105960	1241237	9	True				
ANR	1241299	ExpressionStatement		3317:59:105961:105961	1241237	10	True				
ANR	1241300	ElseStatement	else		1241237	0					
ANR	1241301	CompoundStatement		41:10:1663:1663	1241237	0					
ANR	1241302	Statement	return	3319:4:105979:105984	1241237	0	True				
ANR	1241303	Statement	guess_zval_convert	3319:11:105986:106003	1241237	1	True				
ANR	1241304	Statement	(	3319:29:106004:106004	1241237	2	True				
ANR	1241305	Statement	enc	3319:30:106005:106007	1241237	3	True				
ANR	1241306	Statement	","	3319:33:106008:106008	1241237	4	True				
ANR	1241307	Statement	data	3319:35:106010:106013	1241237	5	True				
ANR	1241308	Statement	TSRMLS_CC	3319:40:106015:106023	1241237	6	True				
ANR	1241309	Statement	)	3319:49:106024:106024	1241237	7	True				
ANR	1241310	ExpressionStatement		3319:50:106025:106025	1241237	8	True				
ANR	1241311	BreakStatement	break ;	3321:3:106035:106040	1241237	2	True				
ANR	1241312	Label	case XSD_TYPEKIND_LIST :	3322:2:106044:106066	1241237	3	True				
ANR	1241313	Identifier	XSD_TYPEKIND_LIST		1241237	0					
ANR	1241314	Statement	return	3323:3:106071:106076	1241237	4	True				
ANR	1241315	Statement	to_zval_list	3323:10:106078:106089	1241237	5	True				
ANR	1241316	Statement	(	3323:22:106090:106090	1241237	6	True				
ANR	1241317	Statement	enc	3323:23:106091:106093	1241237	7	True				
ANR	1241318	Statement	","	3323:26:106094:106094	1241237	8	True				
ANR	1241319	Statement	data	3323:28:106096:106099	1241237	9	True				
ANR	1241320	Statement	TSRMLS_CC	3323:33:106101:106109	1241237	10	True				
ANR	1241321	Statement	)	3323:42:106110:106110	1241237	11	True				
ANR	1241322	ExpressionStatement		3323:43:106111:106111	1241237	12	True				
ANR	1241323	Label	case XSD_TYPEKIND_UNION :	3324:2:106115:106138	1241237	13	True				
ANR	1241324	Identifier	XSD_TYPEKIND_UNION		1241237	0					
ANR	1241325	Statement	return	3325:3:106143:106148	1241237	14	True				
ANR	1241326	Statement	to_zval_union	3325:10:106150:106162	1241237	15	True				
ANR	1241327	Statement	(	3325:23:106163:106163	1241237	16	True				
ANR	1241328	Statement	enc	3325:24:106164:106166	1241237	17	True				
ANR	1241329	Statement	","	3325:27:106167:106167	1241237	18	True				
ANR	1241330	Statement	data	3325:29:106169:106172	1241237	19	True				
ANR	1241331	Statement	TSRMLS_CC	3325:34:106174:106182	1241237	20	True				
ANR	1241332	Statement	)	3325:43:106183:106183	1241237	21	True				
ANR	1241333	ExpressionStatement		3325:44:106184:106184	1241237	22	True				
ANR	1241334	Label	case XSD_TYPEKIND_COMPLEX :	3326:2:106188:106213	1241237	23	True				
ANR	1241335	Identifier	XSD_TYPEKIND_COMPLEX		1241237	0					
ANR	1241336	Label	case XSD_TYPEKIND_RESTRICTION :	3327:2:106217:106246	1241237	24	True				
ANR	1241337	Identifier	XSD_TYPEKIND_RESTRICTION		1241237	0					
ANR	1241338	Label	case XSD_TYPEKIND_EXTENSION :	3328:2:106250:106277	1241237	25	True				
ANR	1241339	Identifier	XSD_TYPEKIND_EXTENSION		1241237	0					
ANR	1241340	IfStatement	if ( type -> encode && ( type -> encode -> details . type == IS_ARRAY || type -> encode -> details . type == SOAP_ENC_ARRAY ) )		1241237	26					
ANR	1241341	Condition	type -> encode && ( type -> encode -> details . type == IS_ARRAY || type -> encode -> details . type == SOAP_ENC_ARRAY )	3329:7:106286:106404	1241237	0	True				
ANR	1241342	AndExpression	type -> encode && ( type -> encode -> details . type == IS_ARRAY || type -> encode -> details . type == SOAP_ENC_ARRAY )		1241237	0		&&			
ANR	1241343	PtrMemberAccess	type -> encode		1241237	0					
ANR	1241344	Identifier	type		1241237	0					
ANR	1241345	Identifier	encode		1241237	1					
ANR	1241346	OrExpression	type -> encode -> details . type == IS_ARRAY || type -> encode -> details . type == SOAP_ENC_ARRAY		1241237	1		||			
ANR	1241347	EqualityExpression	type -> encode -> details . type == IS_ARRAY		1241237	0		==			
ANR	1241348	MemberAccess	type -> encode -> details . type		1241237	0					
ANR	1241349	PtrMemberAccess	type -> encode -> details		1241237	0					
ANR	1241350	PtrMemberAccess	type -> encode		1241237	0					
ANR	1241351	Identifier	type		1241237	0					
ANR	1241352	Identifier	encode		1241237	1					
ANR	1241353	Identifier	details		1241237	1					
ANR	1241354	Identifier	type		1241237	1					
ANR	1241355	Identifier	IS_ARRAY		1241237	1					
ANR	1241356	EqualityExpression	type -> encode -> details . type == SOAP_ENC_ARRAY		1241237	1		==			
ANR	1241357	MemberAccess	type -> encode -> details . type		1241237	0					
ANR	1241358	PtrMemberAccess	type -> encode -> details		1241237	0					
ANR	1241359	PtrMemberAccess	type -> encode		1241237	0					
ANR	1241360	Identifier	type		1241237	0					
ANR	1241361	Identifier	encode		1241237	1					
ANR	1241362	Identifier	details		1241237	1					
ANR	1241363	Identifier	type		1241237	1					
ANR	1241364	Identifier	SOAP_ENC_ARRAY		1241237	1					
ANR	1241365	CompoundStatement		54:55:2097:2097	1241237	1					
ANR	1241366	Statement	return	3332:4:106413:106418	1241237	0	True				
ANR	1241367	Statement	to_zval_array	3332:11:106420:106432	1241237	1	True				
ANR	1241368	Statement	(	3332:24:106433:106433	1241237	2	True				
ANR	1241369	Statement	enc	3332:25:106434:106436	1241237	3	True				
ANR	1241370	Statement	","	3332:28:106437:106437	1241237	4	True				
ANR	1241371	Statement	data	3332:30:106439:106442	1241237	5	True				
ANR	1241372	Statement	TSRMLS_CC	3332:35:106444:106452	1241237	6	True				
ANR	1241373	Statement	)	3332:44:106453:106453	1241237	7	True				
ANR	1241374	ExpressionStatement		3332:45:106454:106454	1241237	8	True				
ANR	1241375	Statement	return	3334:3:106464:106469	1241237	27	True				
ANR	1241376	Statement	to_zval_object	3334:10:106471:106484	1241237	28	True				
ANR	1241377	Statement	(	3334:24:106485:106485	1241237	29	True				
ANR	1241378	Statement	enc	3334:25:106486:106488	1241237	30	True				
ANR	1241379	Statement	","	3334:28:106489:106489	1241237	31	True				
ANR	1241380	Statement	data	3334:30:106491:106494	1241237	32	True				
ANR	1241381	Statement	TSRMLS_CC	3334:35:106496:106504	1241237	33	True				
ANR	1241382	Statement	)	3334:44:106505:106505	1241237	34	True				
ANR	1241383	ExpressionStatement		3334:45:106506:106506	1241237	35	True				
ANR	1241384	Label	default :	3335:2:106510:106517	1241237	36	True				
ANR	1241385	Identifier	default		1241237	0					
ANR	1241386	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Internal Error"" )"	3336:4:106523:106571	1241237	37	True				
ANR	1241387	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Internal Error"" )"		1241237	0					
ANR	1241388	Callee	soap_error0		1241237	0					
ANR	1241389	Identifier	soap_error0		1241237	0					
ANR	1241390	ArgumentList	E_ERROR		1241237	1					
ANR	1241391	Argument	E_ERROR		1241237	0					
ANR	1241392	Identifier	E_ERROR		1241237	0					
ANR	1241393	Argument	"""Encoding: Internal Error"""		1241237	1					
ANR	1241394	PrimaryExpression	"""Encoding: Internal Error"""		1241237	0					
ANR	1241395	Statement	return	3337:3:106576:106581	1241237	38	True				
ANR	1241396	Statement	guess_zval_convert	3337:10:106583:106600	1241237	39	True				
ANR	1241397	Statement	(	3337:28:106601:106601	1241237	40	True				
ANR	1241398	Statement	enc	3337:29:106602:106604	1241237	41	True				
ANR	1241399	Statement	","	3337:32:106605:106605	1241237	42	True				
ANR	1241400	Statement	data	3337:34:106607:106610	1241237	43	True				
ANR	1241401	Statement	TSRMLS_CC	3337:39:106612:106620	1241237	44	True				
ANR	1241402	Statement	)	3337:48:106621:106621	1241237	45	True				
ANR	1241403	ExpressionStatement		3337:49:106622:106622	1241237	46	True				
ANR	1241404	ReturnType	zval *		1241237	1					
ANR	1241405	Identifier	sdl_guess_convert_zval		1241237	2					
ANR	1241406	ParameterList	"encodeTypePtr enc , xmlNodePtr data TSRMLS_DC"		1241237	3					
ANR	1241407	Parameter	encodeTypePtr enc	3277:29:104263:104279	1241237	0	True				
ANR	1241408	ParameterType	encodeTypePtr		1241237	0					
ANR	1241409	Identifier	enc		1241237	1					
ANR	1241410	Parameter	xmlNodePtr data TSRMLS_DC	3277:48:104282:104306	1241237	1	True				
ANR	1241411	ParameterType	xmlNodePtr data		1241237	0					
ANR	1241412	Identifier	TSRMLS_DC		1241237	1					
ANR	1241413	CFGEntryNode	ENTRY		1241237		True				
ANR	1241414	CFGExitNode	EXIT		1241237		True				
ANR	1241415	Symbol	NULL		1241237						
ANR	1241416	Symbol	type -> encode		1241237						
ANR	1241417	Symbol	type -> kind		1241237						
ANR	1241418	Symbol	type -> encode -> details		1241237						
ANR	1241419	Symbol	type		1241237						
ANR	1241420	Symbol	TSRMLS_DC		1241237						
ANR	1241421	Symbol	* type -> encode		1241237						
ANR	1241422	Symbol	SOAP_ENC_ARRAY		1241237						
ANR	1241423	Symbol	E_ERROR		1241237						
ANR	1241424	Symbol	* type		1241237						
ANR	1241425	Symbol	IS_ARRAY		1241237						
ANR	1241426	Symbol	type -> encode -> details . type		1241237						
ANR	1241427	Symbol	enc		1241237						
ANR	1241428	Symbol	* enc		1241237						
ANR	1241429	Symbol	* * type		1241237						
ANR	1241430	Symbol	enc -> sdl_type		1241237						
ANR	1241431	Symbol	& type -> encode -> details		1241237						
ANR	1241432	Function	sdl_guess_convert_xml	3341:0:106630:108908							
ANR	1241433	FunctionDef	"sdl_guess_convert_xml (encodeTypePtr enc , zval * data , int style , xmlNodePtr parent TSRMLS_DC)"		1241432	0					
ANR	1241434	CompoundStatement		3342:0:106734:108908	1241432	0					
ANR	1241435	IdentifierDeclStatement	sdlTypePtr type ;	3343:1:106737:106752	1241432	0	True				
ANR	1241436	IdentifierDecl	type		1241432	0					
ANR	1241437	IdentifierDeclType	sdlTypePtr		1241432	0					
ANR	1241438	Identifier	type		1241432	1					
ANR	1241439	IdentifierDeclStatement	xmlNodePtr ret = NULL ;	3344:1:106755:106776	1241432	1	True				
ANR	1241440	IdentifierDecl	ret = NULL		1241432	0					
ANR	1241441	IdentifierDeclType	xmlNodePtr		1241432	0					
ANR	1241442	Identifier	ret		1241432	1					
ANR	1241443	AssignmentExpression	ret = NULL		1241432	2		=			
ANR	1241444	Identifier	NULL		1241432	0					
ANR	1241445	Identifier	NULL		1241432	1					
ANR	1241446	ExpressionStatement	type = enc -> sdl_type	3346:1:106780:106800	1241432	2	True				
ANR	1241447	AssignmentExpression	type = enc -> sdl_type		1241432	0		=			
ANR	1241448	Identifier	type		1241432	0					
ANR	1241449	PtrMemberAccess	enc -> sdl_type		1241432	1					
ANR	1241450	Identifier	enc		1241432	0					
ANR	1241451	Identifier	sdl_type		1241432	1					
ANR	1241452	IfStatement	if ( type == NULL )		1241432	3					
ANR	1241453	Condition	type == NULL	3348:5:106808:106819	1241432	0	True				
ANR	1241454	EqualityExpression	type == NULL		1241432	0		==			
ANR	1241455	Identifier	type		1241432	0					
ANR	1241456	Identifier	NULL		1241432	1					
ANR	1241457	CompoundStatement		7:19:87:87	1241432	1					
ANR	1241458	Statement	ret	3349:2:106826:106828	1241432	0	True				
ANR	1241459	Statement	=	3349:6:106830:106830	1241432	1	True				
ANR	1241460	Statement	guess_xml_convert	3349:8:106832:106848	1241432	2	True				
ANR	1241461	Statement	(	3349:25:106849:106849	1241432	3	True				
ANR	1241462	Statement	enc	3349:26:106850:106852	1241432	4	True				
ANR	1241463	Statement	","	3349:29:106853:106853	1241432	5	True				
ANR	1241464	Statement	data	3349:31:106855:106858	1241432	6	True				
ANR	1241465	Statement	","	3349:35:106859:106859	1241432	7	True				
ANR	1241466	Statement	style	3349:37:106861:106865	1241432	8	True				
ANR	1241467	Statement	","	3349:42:106866:106866	1241432	9	True				
ANR	1241468	Statement	parent	3349:44:106868:106873	1241432	10	True				
ANR	1241469	Statement	TSRMLS_CC	3349:51:106875:106883	1241432	11	True				
ANR	1241470	Statement	)	3349:60:106884:106884	1241432	12	True				
ANR	1241471	ExpressionStatement		3349:61:106885:106885	1241432	13	True				
ANR	1241472	IfStatement	if ( style == SOAP_ENCODED )		1241432	14					
ANR	1241473	Condition	style == SOAP_ENCODED	3350:6:106893:106913	1241432	0	True				
ANR	1241474	EqualityExpression	style == SOAP_ENCODED		1241432	0		==			
ANR	1241475	Identifier	style		1241432	0					
ANR	1241476	Identifier	SOAP_ENCODED		1241432	1					
ANR	1241477	CompoundStatement		9:29:181:181	1241432	1					
ANR	1241478	ExpressionStatement	"set_ns_and_type ( ret , enc )"	3351:3:106921:106946	1241432	0	True				
ANR	1241479	CallExpression	"set_ns_and_type ( ret , enc )"		1241432	0					
ANR	1241480	Callee	set_ns_and_type		1241432	0					
ANR	1241481	Identifier	set_ns_and_type		1241432	0					
ANR	1241482	ArgumentList	ret		1241432	1					
ANR	1241483	Argument	ret		1241432	0					
ANR	1241484	Identifier	ret		1241432	0					
ANR	1241485	Argument	enc		1241432	1					
ANR	1241486	Identifier	enc		1241432	0					
ANR	1241487	ReturnStatement	return ret ;	3353:2:106954:106964	1241432	15	True				
ANR	1241488	Identifier	ret		1241432	0					
ANR	1241489	SwitchStatement	switch ( type -> kind )		1241432	4					
ANR	1241490	Condition	type -> kind	3378:8:107932:107941	1241432	0	True				
ANR	1241491	PtrMemberAccess	type -> kind		1241432	0					
ANR	1241492	Identifier	type		1241432	0					
ANR	1241493	Identifier	kind		1241432	1					
ANR	1241494	CompoundStatement		37:20:1209:1209	1241432	1					
ANR	1241495	Label	case XSD_TYPEKIND_SIMPLE :	3379:2:107948:107972	1241432	0	True				
ANR	1241496	Identifier	XSD_TYPEKIND_SIMPLE		1241432	0					
ANR	1241497	IfStatement	if ( type -> encode && enc != & type -> encode -> details )		1241432	1					
ANR	1241498	Condition	type -> encode && enc != & type -> encode -> details	3380:7:107981:108025	1241432	0	True				
ANR	1241499	AndExpression	type -> encode && enc != & type -> encode -> details		1241432	0		&&			
ANR	1241500	PtrMemberAccess	type -> encode		1241432	0					
ANR	1241501	Identifier	type		1241432	0					
ANR	1241502	Identifier	encode		1241432	1					
ANR	1241503	EqualityExpression	enc != & type -> encode -> details		1241432	1		!=			
ANR	1241504	Identifier	enc		1241432	0					
ANR	1241505	UnaryOperationExpression	& type -> encode -> details		1241432	1					
ANR	1241506	UnaryOperator	&		1241432	0					
ANR	1241507	PtrMemberAccess	type -> encode -> details		1241432	1					
ANR	1241508	PtrMemberAccess	type -> encode		1241432	0					
ANR	1241509	Identifier	type		1241432	0					
ANR	1241510	Identifier	encode		1241432	1					
ANR	1241511	Identifier	details		1241432	1					
ANR	1241512	CompoundStatement		39:54:1293:1293	1241432	1					
ANR	1241513	Statement	ret	3381:4:108034:108036	1241432	0	True				
ANR	1241514	Statement	=	3381:8:108038:108038	1241432	1	True				
ANR	1241515	Statement	master_to_xml	3381:10:108040:108052	1241432	2	True				
ANR	1241516	Statement	(	3381:23:108053:108053	1241432	3	True				
ANR	1241517	Statement	type	3381:24:108054:108057	1241432	4	True				
ANR	1241518	Statement	->	3381:28:108058:108059	1241432	5	True				
ANR	1241519	Statement	encode	3381:30:108060:108065	1241432	6	True				
ANR	1241520	Statement	","	3381:36:108066:108066	1241432	7	True				
ANR	1241521	Statement	data	3381:38:108068:108071	1241432	8	True				
ANR	1241522	Statement	","	3381:42:108072:108072	1241432	9	True				
ANR	1241523	Statement	style	3381:44:108074:108078	1241432	10	True				
ANR	1241524	Statement	","	3381:49:108079:108079	1241432	11	True				
ANR	1241525	Statement	parent	3381:51:108081:108086	1241432	12	True				
ANR	1241526	Statement	TSRMLS_CC	3381:58:108088:108096	1241432	13	True				
ANR	1241527	Statement	)	3381:67:108097:108097	1241432	14	True				
ANR	1241528	ExpressionStatement		3381:68:108098:108098	1241432	15	True				
ANR	1241529	ElseStatement	else		1241432	0					
ANR	1241530	CompoundStatement		41:10:1375:1375	1241432	0					
ANR	1241531	Statement	ret	3383:4:108116:108118	1241432	0	True				
ANR	1241532	Statement	=	3383:8:108120:108120	1241432	1	True				
ANR	1241533	Statement	guess_xml_convert	3383:10:108122:108138	1241432	2	True				
ANR	1241534	Statement	(	3383:27:108139:108139	1241432	3	True				
ANR	1241535	Statement	enc	3383:28:108140:108142	1241432	4	True				
ANR	1241536	Statement	","	3383:31:108143:108143	1241432	5	True				
ANR	1241537	Statement	data	3383:33:108145:108148	1241432	6	True				
ANR	1241538	Statement	","	3383:37:108149:108149	1241432	7	True				
ANR	1241539	Statement	style	3383:39:108151:108155	1241432	8	True				
ANR	1241540	Statement	","	3383:44:108156:108156	1241432	9	True				
ANR	1241541	Statement	parent	3383:46:108158:108163	1241432	10	True				
ANR	1241542	Statement	TSRMLS_CC	3383:53:108165:108173	1241432	11	True				
ANR	1241543	Statement	)	3383:62:108174:108174	1241432	12	True				
ANR	1241544	ExpressionStatement		3383:63:108175:108175	1241432	13	True				
ANR	1241545	BreakStatement	break ;	3385:3:108185:108190	1241432	2	True				
ANR	1241546	Label	case XSD_TYPEKIND_LIST :	3386:2:108194:108216	1241432	3	True				
ANR	1241547	Identifier	XSD_TYPEKIND_LIST		1241432	0					
ANR	1241548	Statement	ret	3387:3:108221:108223	1241432	4	True				
ANR	1241549	Statement	=	3387:7:108225:108225	1241432	5	True				
ANR	1241550	Statement	to_xml_list	3387:9:108227:108237	1241432	6	True				
ANR	1241551	Statement	(	3387:20:108238:108238	1241432	7	True				
ANR	1241552	Statement	enc	3387:21:108239:108241	1241432	8	True				
ANR	1241553	Statement	","	3387:24:108242:108242	1241432	9	True				
ANR	1241554	Statement	data	3387:26:108244:108247	1241432	10	True				
ANR	1241555	Statement	","	3387:30:108248:108248	1241432	11	True				
ANR	1241556	Statement	style	3387:32:108250:108254	1241432	12	True				
ANR	1241557	Statement	","	3387:37:108255:108255	1241432	13	True				
ANR	1241558	Statement	parent	3387:39:108257:108262	1241432	14	True				
ANR	1241559	Statement	TSRMLS_CC	3387:46:108264:108272	1241432	15	True				
ANR	1241560	Statement	)	3387:55:108273:108273	1241432	16	True				
ANR	1241561	ExpressionStatement		3387:56:108274:108274	1241432	17	True				
ANR	1241562	BreakStatement	break ;	3388:3:108279:108284	1241432	18	True				
ANR	1241563	Label	case XSD_TYPEKIND_UNION :	3389:2:108288:108311	1241432	19	True				
ANR	1241564	Identifier	XSD_TYPEKIND_UNION		1241432	0					
ANR	1241565	Statement	ret	3390:3:108316:108318	1241432	20	True				
ANR	1241566	Statement	=	3390:7:108320:108320	1241432	21	True				
ANR	1241567	Statement	to_xml_union	3390:9:108322:108333	1241432	22	True				
ANR	1241568	Statement	(	3390:21:108334:108334	1241432	23	True				
ANR	1241569	Statement	enc	3390:22:108335:108337	1241432	24	True				
ANR	1241570	Statement	","	3390:25:108338:108338	1241432	25	True				
ANR	1241571	Statement	data	3390:27:108340:108343	1241432	26	True				
ANR	1241572	Statement	","	3390:31:108344:108344	1241432	27	True				
ANR	1241573	Statement	style	3390:33:108346:108350	1241432	28	True				
ANR	1241574	Statement	","	3390:38:108351:108351	1241432	29	True				
ANR	1241575	Statement	parent	3390:40:108353:108358	1241432	30	True				
ANR	1241576	Statement	TSRMLS_CC	3390:47:108360:108368	1241432	31	True				
ANR	1241577	Statement	)	3390:56:108369:108369	1241432	32	True				
ANR	1241578	ExpressionStatement		3390:57:108370:108370	1241432	33	True				
ANR	1241579	BreakStatement	break ;	3391:3:108375:108380	1241432	34	True				
ANR	1241580	Label	case XSD_TYPEKIND_COMPLEX :	3392:2:108384:108409	1241432	35	True				
ANR	1241581	Identifier	XSD_TYPEKIND_COMPLEX		1241432	0					
ANR	1241582	Label	case XSD_TYPEKIND_RESTRICTION :	3393:2:108413:108442	1241432	36	True				
ANR	1241583	Identifier	XSD_TYPEKIND_RESTRICTION		1241432	0					
ANR	1241584	Label	case XSD_TYPEKIND_EXTENSION :	3394:2:108446:108473	1241432	37	True				
ANR	1241585	Identifier	XSD_TYPEKIND_EXTENSION		1241432	0					
ANR	1241586	IfStatement	if ( type -> encode && ( type -> encode -> details . type == IS_ARRAY || type -> encode -> details . type == SOAP_ENC_ARRAY ) )		1241432	38					
ANR	1241587	Condition	type -> encode && ( type -> encode -> details . type == IS_ARRAY || type -> encode -> details . type == SOAP_ENC_ARRAY )	3395:7:108482:108600	1241432	0	True				
ANR	1241588	AndExpression	type -> encode && ( type -> encode -> details . type == IS_ARRAY || type -> encode -> details . type == SOAP_ENC_ARRAY )		1241432	0		&&			
ANR	1241589	PtrMemberAccess	type -> encode		1241432	0					
ANR	1241590	Identifier	type		1241432	0					
ANR	1241591	Identifier	encode		1241432	1					
ANR	1241592	OrExpression	type -> encode -> details . type == IS_ARRAY || type -> encode -> details . type == SOAP_ENC_ARRAY		1241432	1		||			
ANR	1241593	EqualityExpression	type -> encode -> details . type == IS_ARRAY		1241432	0		==			
ANR	1241594	MemberAccess	type -> encode -> details . type		1241432	0					
ANR	1241595	PtrMemberAccess	type -> encode -> details		1241432	0					
ANR	1241596	PtrMemberAccess	type -> encode		1241432	0					
ANR	1241597	Identifier	type		1241432	0					
ANR	1241598	Identifier	encode		1241432	1					
ANR	1241599	Identifier	details		1241432	1					
ANR	1241600	Identifier	type		1241432	1					
ANR	1241601	Identifier	IS_ARRAY		1241432	1					
ANR	1241602	EqualityExpression	type -> encode -> details . type == SOAP_ENC_ARRAY		1241432	1		==			
ANR	1241603	MemberAccess	type -> encode -> details . type		1241432	0					
ANR	1241604	PtrMemberAccess	type -> encode -> details		1241432	0					
ANR	1241605	PtrMemberAccess	type -> encode		1241432	0					
ANR	1241606	Identifier	type		1241432	0					
ANR	1241607	Identifier	encode		1241432	1					
ANR	1241608	Identifier	details		1241432	1					
ANR	1241609	Identifier	type		1241432	1					
ANR	1241610	Identifier	SOAP_ENC_ARRAY		1241432	1					
ANR	1241611	CompoundStatement		56:55:1868:1868	1241432	1					
ANR	1241612	Statement	return	3398:4:108609:108614	1241432	0	True				
ANR	1241613	Statement	to_xml_array	3398:11:108616:108627	1241432	1	True				
ANR	1241614	Statement	(	3398:23:108628:108628	1241432	2	True				
ANR	1241615	Statement	enc	3398:24:108629:108631	1241432	3	True				
ANR	1241616	Statement	","	3398:27:108632:108632	1241432	4	True				
ANR	1241617	Statement	data	3398:29:108634:108637	1241432	5	True				
ANR	1241618	Statement	","	3398:33:108638:108638	1241432	6	True				
ANR	1241619	Statement	style	3398:35:108640:108644	1241432	7	True				
ANR	1241620	Statement	","	3398:40:108645:108645	1241432	8	True				
ANR	1241621	Statement	parent	3398:42:108647:108652	1241432	9	True				
ANR	1241622	Statement	TSRMLS_CC	3398:49:108654:108662	1241432	10	True				
ANR	1241623	Statement	)	3398:58:108663:108663	1241432	11	True				
ANR	1241624	ExpressionStatement		3398:59:108664:108664	1241432	12	True				
ANR	1241625	ElseStatement	else		1241432	0					
ANR	1241626	CompoundStatement		58:10:1941:1941	1241432	0					
ANR	1241627	Statement	return	3400:4:108682:108687	1241432	0	True				
ANR	1241628	Statement	to_xml_object	3400:11:108689:108701	1241432	1	True				
ANR	1241629	Statement	(	3400:24:108702:108702	1241432	2	True				
ANR	1241630	Statement	enc	3400:25:108703:108705	1241432	3	True				
ANR	1241631	Statement	","	3400:28:108706:108706	1241432	4	True				
ANR	1241632	Statement	data	3400:30:108708:108711	1241432	5	True				
ANR	1241633	Statement	","	3400:34:108712:108712	1241432	6	True				
ANR	1241634	Statement	style	3400:36:108714:108718	1241432	7	True				
ANR	1241635	Statement	","	3400:41:108719:108719	1241432	8	True				
ANR	1241636	Statement	parent	3400:43:108721:108726	1241432	9	True				
ANR	1241637	Statement	TSRMLS_CC	3400:50:108728:108736	1241432	10	True				
ANR	1241638	Statement	)	3400:59:108737:108737	1241432	11	True				
ANR	1241639	ExpressionStatement		3400:60:108738:108738	1241432	12	True				
ANR	1241640	BreakStatement	break ;	3402:3:108748:108753	1241432	39	True				
ANR	1241641	Label	default :	3403:2:108757:108764	1241432	40	True				
ANR	1241642	Identifier	default		1241432	0					
ANR	1241643	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Internal Error"" )"	3404:4:108770:108818	1241432	41	True				
ANR	1241644	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Internal Error"" )"		1241432	0					
ANR	1241645	Callee	soap_error0		1241432	0					
ANR	1241646	Identifier	soap_error0		1241432	0					
ANR	1241647	ArgumentList	E_ERROR		1241432	1					
ANR	1241648	Argument	E_ERROR		1241432	0					
ANR	1241649	Identifier	E_ERROR		1241432	0					
ANR	1241650	Argument	"""Encoding: Internal Error"""		1241432	1					
ANR	1241651	PrimaryExpression	"""Encoding: Internal Error"""		1241432	0					
ANR	1241652	BreakStatement	break ;	3405:3:108823:108828	1241432	42	True				
ANR	1241653	IfStatement	if ( style == SOAP_ENCODED )		1241432	5					
ANR	1241654	Condition	style == SOAP_ENCODED	3407:5:108838:108858	1241432	0	True				
ANR	1241655	EqualityExpression	style == SOAP_ENCODED		1241432	0		==			
ANR	1241656	Identifier	style		1241432	0					
ANR	1241657	Identifier	SOAP_ENCODED		1241432	1					
ANR	1241658	CompoundStatement		66:28:2126:2126	1241432	1					
ANR	1241659	ExpressionStatement	"set_ns_and_type ( ret , enc )"	3408:2:108865:108890	1241432	0	True				
ANR	1241660	CallExpression	"set_ns_and_type ( ret , enc )"		1241432	0					
ANR	1241661	Callee	set_ns_and_type		1241432	0					
ANR	1241662	Identifier	set_ns_and_type		1241432	0					
ANR	1241663	ArgumentList	ret		1241432	1					
ANR	1241664	Argument	ret		1241432	0					
ANR	1241665	Identifier	ret		1241432	0					
ANR	1241666	Argument	enc		1241432	1					
ANR	1241667	Identifier	enc		1241432	0					
ANR	1241668	ReturnStatement	return ret ;	3410:1:108896:108906	1241432	6	True				
ANR	1241669	Identifier	ret		1241432	0					
ANR	1241670	ReturnType	xmlNodePtr		1241432	1					
ANR	1241671	Identifier	sdl_guess_convert_xml		1241432	2					
ANR	1241672	ParameterList	"encodeTypePtr enc , zval * data , int style , xmlNodePtr parent TSRMLS_DC"		1241432	3					
ANR	1241673	Parameter	encodeTypePtr enc	3341:33:106663:106679	1241432	0	True				
ANR	1241674	ParameterType	encodeTypePtr		1241432	0					
ANR	1241675	Identifier	enc		1241432	1					
ANR	1241676	Parameter	zval * data	3341:52:106682:106691	1241432	1	True				
ANR	1241677	ParameterType	zval *		1241432	0					
ANR	1241678	Identifier	data		1241432	1					
ANR	1241679	Parameter	int style	3341:64:106694:106702	1241432	2	True				
ANR	1241680	ParameterType	int		1241432	0					
ANR	1241681	Identifier	style		1241432	1					
ANR	1241682	Parameter	xmlNodePtr parent TSRMLS_DC	3341:75:106705:106731	1241432	3	True				
ANR	1241683	ParameterType	xmlNodePtr parent		1241432	0					
ANR	1241684	Identifier	TSRMLS_DC		1241432	1					
ANR	1241685	CFGEntryNode	ENTRY		1241432		True				
ANR	1241686	CFGExitNode	EXIT		1241432		True				
ANR	1241687	Symbol	ret		1241432						
ANR	1241688	Symbol	NULL		1241432						
ANR	1241689	Symbol	type -> encode		1241432						
ANR	1241690	Symbol	data		1241432						
ANR	1241691	Symbol	type -> kind		1241432						
ANR	1241692	Symbol	type -> encode -> details		1241432						
ANR	1241693	Symbol	type		1241432						
ANR	1241694	Symbol	TSRMLS_DC		1241432						
ANR	1241695	Symbol	* type -> encode		1241432						
ANR	1241696	Symbol	SOAP_ENC_ARRAY		1241432						
ANR	1241697	Symbol	E_ERROR		1241432						
ANR	1241698	Symbol	* type		1241432						
ANR	1241699	Symbol	IS_ARRAY		1241432						
ANR	1241700	Symbol	type -> encode -> details . type		1241432						
ANR	1241701	Symbol	style		1241432						
ANR	1241702	Symbol	SOAP_ENCODED		1241432						
ANR	1241703	Symbol	enc		1241432						
ANR	1241704	Symbol	* enc		1241432						
ANR	1241705	Symbol	* * type		1241432						
ANR	1241706	Symbol	enc -> sdl_type		1241432						
ANR	1241707	Symbol	& type -> encode -> details		1241432						
ANR	1241708	Function	check_and_resolve_href	3413:0:108911:110375							
ANR	1241709	FunctionDef	check_and_resolve_href (xmlNodePtr data)		1241708	0					
ANR	1241710	CompoundStatement		3414:0:108969:110375	1241708	0					
ANR	1241711	IfStatement	if ( data && data -> properties )		1241708	0					
ANR	1241712	Condition	data && data -> properties	3415:5:108976:108999	1241708	0	True				
ANR	1241713	AndExpression	data && data -> properties		1241708	0		&&			
ANR	1241714	Identifier	data		1241708	0					
ANR	1241715	PtrMemberAccess	data -> properties		1241708	1					
ANR	1241716	Identifier	data		1241708	0					
ANR	1241717	Identifier	properties		1241708	1					
ANR	1241718	CompoundStatement		3:2:36:51	1241708	1					
ANR	1241719	IdentifierDeclStatement	xmlAttrPtr href ;	3416:2:109006:109021	1241708	0	True				
ANR	1241720	IdentifierDecl	href		1241708	0					
ANR	1241721	IdentifierDeclType	xmlAttrPtr		1241708	0					
ANR	1241722	Identifier	href		1241708	1					
ANR	1241723	ExpressionStatement	href = data -> properties	3418:2:109026:109049	1241708	1	True				
ANR	1241724	AssignmentExpression	href = data -> properties		1241708	0		=			
ANR	1241725	Identifier	href		1241708	0					
ANR	1241726	PtrMemberAccess	data -> properties		1241708	1					
ANR	1241727	Identifier	data		1241708	0					
ANR	1241728	Identifier	properties		1241708	1					
ANR	1241729	WhileStatement	while ( 1 )		1241708	2					
ANR	1241730	Condition	1	3419:9:109060:109060	1241708	0	True				
ANR	1241731	PrimaryExpression	1		1241708	0					
ANR	1241732	CompoundStatement		6:12:93:93	1241708	1					
ANR	1241733	ExpressionStatement	"href = get_attribute ( href , ""href"" )"	3420:3:109068:109102	1241708	0	True				
ANR	1241734	AssignmentExpression	"href = get_attribute ( href , ""href"" )"		1241708	0		=			
ANR	1241735	Identifier	href		1241708	0					
ANR	1241736	CallExpression	"get_attribute ( href , ""href"" )"		1241708	1					
ANR	1241737	Callee	get_attribute		1241708	0					
ANR	1241738	Identifier	get_attribute		1241708	0					
ANR	1241739	ArgumentList	href		1241708	1					
ANR	1241740	Argument	href		1241708	0					
ANR	1241741	Identifier	href		1241708	0					
ANR	1241742	Argument	"""href"""		1241708	1					
ANR	1241743	PrimaryExpression	"""href"""		1241708	0					
ANR	1241744	IfStatement	if ( href == NULL || href -> ns == NULL )		1241708	1					
ANR	1241745	Condition	href == NULL || href -> ns == NULL	3421:7:109111:109142	1241708	0	True				
ANR	1241746	OrExpression	href == NULL || href -> ns == NULL		1241708	0		||			
ANR	1241747	EqualityExpression	href == NULL		1241708	0		==			
ANR	1241748	Identifier	href		1241708	0					
ANR	1241749	Identifier	NULL		1241708	1					
ANR	1241750	EqualityExpression	href -> ns == NULL		1241708	1		==			
ANR	1241751	PtrMemberAccess	href -> ns		1241708	0					
ANR	1241752	Identifier	href		1241708	0					
ANR	1241753	Identifier	ns		1241708	1					
ANR	1241754	Identifier	NULL		1241708	1					
ANR	1241755	CompoundStatement		8:41:175:175	1241708	1					
ANR	1241756	BreakStatement	break ;	3421:42:109146:109151	1241708	0	True				
ANR	1241757	ExpressionStatement	href = href -> next	3422:3:109157:109174	1241708	2	True				
ANR	1241758	AssignmentExpression	href = href -> next		1241708	0		=			
ANR	1241759	Identifier	href		1241708	0					
ANR	1241760	PtrMemberAccess	href -> next		1241708	1					
ANR	1241761	Identifier	href		1241708	0					
ANR	1241762	Identifier	next		1241708	1					
ANR	1241763	IfStatement	if ( href )		1241708	3					
ANR	1241764	Condition	href	3424:6:109186:109189	1241708	0	True				
ANR	1241765	Identifier	href		1241708	0					
ANR	1241766	CompoundStatement		11:12:222:222	1241708	1					
ANR	1241767	IfStatement	if ( href -> children -> content [ 0 ] == '#' )		1241708	0					
ANR	1241768	Condition	href -> children -> content [ 0 ] == '#'	3426:7:109243:109275	1241708	0	True				
ANR	1241769	EqualityExpression	href -> children -> content [ 0 ] == '#'		1241708	0		==			
ANR	1241770	ArrayIndexing	href -> children -> content [ 0 ]		1241708	0					
ANR	1241771	PtrMemberAccess	href -> children -> content		1241708	0					
ANR	1241772	PtrMemberAccess	href -> children		1241708	0					
ANR	1241773	Identifier	href		1241708	0					
ANR	1241774	Identifier	children		1241708	1					
ANR	1241775	Identifier	content		1241708	1					
ANR	1241776	PrimaryExpression	0		1241708	1					
ANR	1241777	PrimaryExpression	'#'		1241708	1					
ANR	1241778	CompoundStatement		14:4:314:433	1241708	1					
ANR	1241779	IdentifierDeclStatement	"xmlNodePtr ret = get_node_with_attribute_recursive ( data -> doc -> children , NULL , ""id"" , ( char * ) & href -> children -> content [ 1 ] ) ;"	3427:4:109284:109403	1241708	0	True				
ANR	1241780	IdentifierDecl	"ret = get_node_with_attribute_recursive ( data -> doc -> children , NULL , ""id"" , ( char * ) & href -> children -> content [ 1 ] )"		1241708	0					
ANR	1241781	IdentifierDeclType	xmlNodePtr		1241708	0					
ANR	1241782	Identifier	ret		1241708	1					
ANR	1241783	AssignmentExpression	"ret = get_node_with_attribute_recursive ( data -> doc -> children , NULL , ""id"" , ( char * ) & href -> children -> content [ 1 ] )"		1241708	2		=			
ANR	1241784	Identifier	ret		1241708	0					
ANR	1241785	CallExpression	"get_node_with_attribute_recursive ( data -> doc -> children , NULL , ""id"" , ( char * ) & href -> children -> content [ 1 ] )"		1241708	1					
ANR	1241786	Callee	get_node_with_attribute_recursive		1241708	0					
ANR	1241787	Identifier	get_node_with_attribute_recursive		1241708	0					
ANR	1241788	ArgumentList	data -> doc -> children		1241708	1					
ANR	1241789	Argument	data -> doc -> children		1241708	0					
ANR	1241790	PtrMemberAccess	data -> doc -> children		1241708	0					
ANR	1241791	PtrMemberAccess	data -> doc		1241708	0					
ANR	1241792	Identifier	data		1241708	0					
ANR	1241793	Identifier	doc		1241708	1					
ANR	1241794	Identifier	children		1241708	1					
ANR	1241795	Argument	NULL		1241708	1					
ANR	1241796	Identifier	NULL		1241708	0					
ANR	1241797	Argument	"""id"""		1241708	2					
ANR	1241798	PrimaryExpression	"""id"""		1241708	0					
ANR	1241799	Argument	( char * ) & href -> children -> content [ 1 ]		1241708	3					
ANR	1241800	CastExpression	( char * ) & href -> children -> content [ 1 ]		1241708	0					
ANR	1241801	CastTarget	char *		1241708	0					
ANR	1241802	UnaryOperationExpression	& href -> children -> content [ 1 ]		1241708	1					
ANR	1241803	UnaryOperator	&		1241708	0					
ANR	1241804	ArrayIndexing	href -> children -> content [ 1 ]		1241708	1					
ANR	1241805	PtrMemberAccess	href -> children -> content		1241708	0					
ANR	1241806	PtrMemberAccess	href -> children		1241708	0					
ANR	1241807	Identifier	href		1241708	0					
ANR	1241808	Identifier	children		1241708	1					
ANR	1241809	Identifier	content		1241708	1					
ANR	1241810	PrimaryExpression	1		1241708	1					
ANR	1241811	IfStatement	if ( ! ret )		1241708	1					
ANR	1241812	Condition	! ret	3428:8:109413:109416	1241708	0	True				
ANR	1241813	UnaryOperationExpression	! ret		1241708	0					
ANR	1241814	UnaryOperator	!		1241708	0					
ANR	1241815	Identifier	ret		1241708	1					
ANR	1241816	CompoundStatement		15:14:449:449	1241708	1					
ANR	1241817	ExpressionStatement	"soap_error1 ( E_ERROR , ""Encoding: Unresolved reference '%s'"" , href -> children -> content )"	3429:5:109426:109510	1241708	0	True				
ANR	1241818	CallExpression	"soap_error1 ( E_ERROR , ""Encoding: Unresolved reference '%s'"" , href -> children -> content )"		1241708	0					
ANR	1241819	Callee	soap_error1		1241708	0					
ANR	1241820	Identifier	soap_error1		1241708	0					
ANR	1241821	ArgumentList	E_ERROR		1241708	1					
ANR	1241822	Argument	E_ERROR		1241708	0					
ANR	1241823	Identifier	E_ERROR		1241708	0					
ANR	1241824	Argument	"""Encoding: Unresolved reference '%s'"""		1241708	1					
ANR	1241825	PrimaryExpression	"""Encoding: Unresolved reference '%s'"""		1241708	0					
ANR	1241826	Argument	href -> children -> content		1241708	2					
ANR	1241827	PtrMemberAccess	href -> children -> content		1241708	0					
ANR	1241828	PtrMemberAccess	href -> children		1241708	0					
ANR	1241829	Identifier	href		1241708	0					
ANR	1241830	Identifier	children		1241708	1					
ANR	1241831	Identifier	content		1241708	1					
ANR	1241832	ReturnStatement	return ret ;	3431:4:109522:109532	1241708	2	True				
ANR	1241833	Identifier	ret		1241708	0					
ANR	1241834	ElseStatement	else		1241708	0					
ANR	1241835	CompoundStatement		19:10:574:574	1241708	0					
ANR	1241836	ExpressionStatement	"soap_error1 ( E_ERROR , ""Encoding: External reference '%s'"" , href -> children -> content )"	3434:4:109586:109668	1241708	0	True				
ANR	1241837	CallExpression	"soap_error1 ( E_ERROR , ""Encoding: External reference '%s'"" , href -> children -> content )"		1241708	0					
ANR	1241838	Callee	soap_error1		1241708	0					
ANR	1241839	Identifier	soap_error1		1241708	0					
ANR	1241840	ArgumentList	E_ERROR		1241708	1					
ANR	1241841	Argument	E_ERROR		1241708	0					
ANR	1241842	Identifier	E_ERROR		1241708	0					
ANR	1241843	Argument	"""Encoding: External reference '%s'"""		1241708	1					
ANR	1241844	PrimaryExpression	"""Encoding: External reference '%s'"""		1241708	0					
ANR	1241845	Argument	href -> children -> content		1241708	2					
ANR	1241846	PtrMemberAccess	href -> children -> content		1241708	0					
ANR	1241847	PtrMemberAccess	href -> children		1241708	0					
ANR	1241848	Identifier	href		1241708	0					
ANR	1241849	Identifier	children		1241708	1					
ANR	1241850	Identifier	content		1241708	1					
ANR	1241851	ExpressionStatement	"href = get_attribute_ex ( data -> properties , ""ref"" , SOAP_1_2_ENC_NAMESPACE )"	3438:2:109713:109785	1241708	4	True				
ANR	1241852	AssignmentExpression	"href = get_attribute_ex ( data -> properties , ""ref"" , SOAP_1_2_ENC_NAMESPACE )"		1241708	0		=			
ANR	1241853	Identifier	href		1241708	0					
ANR	1241854	CallExpression	"get_attribute_ex ( data -> properties , ""ref"" , SOAP_1_2_ENC_NAMESPACE )"		1241708	1					
ANR	1241855	Callee	get_attribute_ex		1241708	0					
ANR	1241856	Identifier	get_attribute_ex		1241708	0					
ANR	1241857	ArgumentList	data -> properties		1241708	1					
ANR	1241858	Argument	data -> properties		1241708	0					
ANR	1241859	PtrMemberAccess	data -> properties		1241708	0					
ANR	1241860	Identifier	data		1241708	0					
ANR	1241861	Identifier	properties		1241708	1					
ANR	1241862	Argument	"""ref"""		1241708	1					
ANR	1241863	PrimaryExpression	"""ref"""		1241708	0					
ANR	1241864	Argument	SOAP_1_2_ENC_NAMESPACE		1241708	2					
ANR	1241865	Identifier	SOAP_1_2_ENC_NAMESPACE		1241708	0					
ANR	1241866	IfStatement	if ( href )		1241708	5					
ANR	1241867	Condition	href	3439:6:109793:109796	1241708	0	True				
ANR	1241868	Identifier	href		1241708	0					
ANR	1241869	CompoundStatement		28:3:850:864	1241708	1					
ANR	1241870	IdentifierDeclStatement	xmlChar * id ;	3440:3:109804:109815	1241708	0	True				
ANR	1241871	IdentifierDecl	* id		1241708	0					
ANR	1241872	IdentifierDeclType	xmlChar *		1241708	0					
ANR	1241873	Identifier	id		1241708	1					
ANR	1241874	IdentifierDeclStatement	xmlNodePtr ret ;	3441:3:109820:109834	1241708	1	True				
ANR	1241875	IdentifierDecl	ret		1241708	0					
ANR	1241876	IdentifierDeclType	xmlNodePtr		1241708	0					
ANR	1241877	Identifier	ret		1241708	1					
ANR	1241878	IfStatement	if ( href -> children -> content [ 0 ] == '#' )		1241708	2					
ANR	1241879	Condition	href -> children -> content [ 0 ] == '#'	3443:7:109844:109876	1241708	0	True				
ANR	1241880	EqualityExpression	href -> children -> content [ 0 ] == '#'		1241708	0		==			
ANR	1241881	ArrayIndexing	href -> children -> content [ 0 ]		1241708	0					
ANR	1241882	PtrMemberAccess	href -> children -> content		1241708	0					
ANR	1241883	PtrMemberAccess	href -> children		1241708	0					
ANR	1241884	Identifier	href		1241708	0					
ANR	1241885	Identifier	children		1241708	1					
ANR	1241886	Identifier	content		1241708	1					
ANR	1241887	PrimaryExpression	0		1241708	1					
ANR	1241888	PrimaryExpression	'#'		1241708	1					
ANR	1241889	CompoundStatement		30:42:909:909	1241708	1					
ANR	1241890	ExpressionStatement	id = href -> children -> content + 1	3444:4:109885:109915	1241708	0	True				
ANR	1241891	AssignmentExpression	id = href -> children -> content + 1		1241708	0		=			
ANR	1241892	Identifier	id		1241708	0					
ANR	1241893	AdditiveExpression	href -> children -> content + 1		1241708	1		+			
ANR	1241894	PtrMemberAccess	href -> children -> content		1241708	0					
ANR	1241895	PtrMemberAccess	href -> children		1241708	0					
ANR	1241896	Identifier	href		1241708	0					
ANR	1241897	Identifier	children		1241708	1					
ANR	1241898	Identifier	content		1241708	1					
ANR	1241899	PrimaryExpression	1		1241708	1					
ANR	1241900	ElseStatement	else		1241708	0					
ANR	1241901	CompoundStatement		32:10:957:957	1241708	0					
ANR	1241902	ExpressionStatement	id = href -> children -> content	3446:4:109933:109961	1241708	0	True				
ANR	1241903	AssignmentExpression	id = href -> children -> content		1241708	0		=			
ANR	1241904	Identifier	id		1241708	0					
ANR	1241905	PtrMemberAccess	href -> children -> content		1241708	1					
ANR	1241906	PtrMemberAccess	href -> children		1241708	0					
ANR	1241907	Identifier	href		1241708	0					
ANR	1241908	Identifier	children		1241708	1					
ANR	1241909	Identifier	content		1241708	1					
ANR	1241910	ExpressionStatement	"ret = get_node_with_attribute_recursive_ex ( data -> doc -> children , NULL , NULL , ""id"" , ( char * ) id , SOAP_1_2_ENC_NAMESPACE )"	3448:3:109971:110087	1241708	3	True				
ANR	1241911	AssignmentExpression	"ret = get_node_with_attribute_recursive_ex ( data -> doc -> children , NULL , NULL , ""id"" , ( char * ) id , SOAP_1_2_ENC_NAMESPACE )"		1241708	0		=			
ANR	1241912	Identifier	ret		1241708	0					
ANR	1241913	CallExpression	"get_node_with_attribute_recursive_ex ( data -> doc -> children , NULL , NULL , ""id"" , ( char * ) id , SOAP_1_2_ENC_NAMESPACE )"		1241708	1					
ANR	1241914	Callee	get_node_with_attribute_recursive_ex		1241708	0					
ANR	1241915	Identifier	get_node_with_attribute_recursive_ex		1241708	0					
ANR	1241916	ArgumentList	data -> doc -> children		1241708	1					
ANR	1241917	Argument	data -> doc -> children		1241708	0					
ANR	1241918	PtrMemberAccess	data -> doc -> children		1241708	0					
ANR	1241919	PtrMemberAccess	data -> doc		1241708	0					
ANR	1241920	Identifier	data		1241708	0					
ANR	1241921	Identifier	doc		1241708	1					
ANR	1241922	Identifier	children		1241708	1					
ANR	1241923	Argument	NULL		1241708	1					
ANR	1241924	Identifier	NULL		1241708	0					
ANR	1241925	Argument	NULL		1241708	2					
ANR	1241926	Identifier	NULL		1241708	0					
ANR	1241927	Argument	"""id"""		1241708	3					
ANR	1241928	PrimaryExpression	"""id"""		1241708	0					
ANR	1241929	Argument	( char * ) id		1241708	4					
ANR	1241930	CastExpression	( char * ) id		1241708	0					
ANR	1241931	CastTarget	char *		1241708	0					
ANR	1241932	Identifier	id		1241708	1					
ANR	1241933	Argument	SOAP_1_2_ENC_NAMESPACE		1241708	5					
ANR	1241934	Identifier	SOAP_1_2_ENC_NAMESPACE		1241708	0					
ANR	1241935	IfStatement	if ( ! ret )		1241708	4					
ANR	1241936	Condition	! ret	3449:7:110096:110099	1241708	0	True				
ANR	1241937	UnaryOperationExpression	! ret		1241708	0					
ANR	1241938	UnaryOperator	!		1241708	0					
ANR	1241939	Identifier	ret		1241708	1					
ANR	1241940	CompoundStatement		36:13:1132:1132	1241708	1					
ANR	1241941	ExpressionStatement	"soap_error1 ( E_ERROR , ""Encoding: Unresolved reference '%s'"" , href -> children -> content )"	3450:4:110108:110192	1241708	0	True				
ANR	1241942	CallExpression	"soap_error1 ( E_ERROR , ""Encoding: Unresolved reference '%s'"" , href -> children -> content )"		1241708	0					
ANR	1241943	Callee	soap_error1		1241708	0					
ANR	1241944	Identifier	soap_error1		1241708	0					
ANR	1241945	ArgumentList	E_ERROR		1241708	1					
ANR	1241946	Argument	E_ERROR		1241708	0					
ANR	1241947	Identifier	E_ERROR		1241708	0					
ANR	1241948	Argument	"""Encoding: Unresolved reference '%s'"""		1241708	1					
ANR	1241949	PrimaryExpression	"""Encoding: Unresolved reference '%s'"""		1241708	0					
ANR	1241950	Argument	href -> children -> content		1241708	2					
ANR	1241951	PtrMemberAccess	href -> children -> content		1241708	0					
ANR	1241952	PtrMemberAccess	href -> children		1241708	0					
ANR	1241953	Identifier	href		1241708	0					
ANR	1241954	Identifier	children		1241708	1					
ANR	1241955	Identifier	content		1241708	1					
ANR	1241956	ElseStatement	else		1241708	0					
ANR	1241957	IfStatement	if ( ret == data )		1241708	0					
ANR	1241958	Condition	ret == data	3451:14:110208:110218	1241708	0	True				
ANR	1241959	EqualityExpression	ret == data		1241708	0		==			
ANR	1241960	Identifier	ret		1241708	0					
ANR	1241961	Identifier	data		1241708	1					
ANR	1241962	CompoundStatement		38:27:1251:1251	1241708	1					
ANR	1241963	ExpressionStatement	"soap_error1 ( E_ERROR , ""Encoding: Violation of id and ref information items '%s'"" , href -> children -> content )"	3452:4:110227:110332	1241708	0	True				
ANR	1241964	CallExpression	"soap_error1 ( E_ERROR , ""Encoding: Violation of id and ref information items '%s'"" , href -> children -> content )"		1241708	0					
ANR	1241965	Callee	soap_error1		1241708	0					
ANR	1241966	Identifier	soap_error1		1241708	0					
ANR	1241967	ArgumentList	E_ERROR		1241708	1					
ANR	1241968	Argument	E_ERROR		1241708	0					
ANR	1241969	Identifier	E_ERROR		1241708	0					
ANR	1241970	Argument	"""Encoding: Violation of id and ref information items '%s'"""		1241708	1					
ANR	1241971	PrimaryExpression	"""Encoding: Violation of id and ref information items '%s'"""		1241708	0					
ANR	1241972	Argument	href -> children -> content		1241708	2					
ANR	1241973	PtrMemberAccess	href -> children -> content		1241708	0					
ANR	1241974	PtrMemberAccess	href -> children		1241708	0					
ANR	1241975	Identifier	href		1241708	0					
ANR	1241976	Identifier	children		1241708	1					
ANR	1241977	Identifier	content		1241708	1					
ANR	1241978	ReturnStatement	return ret ;	3454:3:110342:110352	1241708	5	True				
ANR	1241979	Identifier	ret		1241708	0					
ANR	1241980	ReturnStatement	return data ;	3457:1:110362:110373	1241708	1	True				
ANR	1241981	Identifier	data		1241708	0					
ANR	1241982	ReturnType	static xmlNodePtr		1241708	1					
ANR	1241983	Identifier	check_and_resolve_href		1241708	2					
ANR	1241984	ParameterList	xmlNodePtr data		1241708	3					
ANR	1241985	Parameter	xmlNodePtr data	3413:41:108952:108966	1241708	0	True				
ANR	1241986	ParameterType	xmlNodePtr		1241708	0					
ANR	1241987	Identifier	data		1241708	1					
ANR	1241988	CFGEntryNode	ENTRY		1241708		True				
ANR	1241989	CFGExitNode	EXIT		1241708		True				
ANR	1241990	Symbol	* * data		1241708						
ANR	1241991	Symbol	data		1241708						
ANR	1241992	Symbol	get_attribute		1241708						
ANR	1241993	Symbol	data -> properties		1241708						
ANR	1241994	Symbol	href -> ns		1241708						
ANR	1241995	Symbol	* href -> children		1241708						
ANR	1241996	Symbol	* * href		1241708						
ANR	1241997	Symbol	href -> children		1241708						
ANR	1241998	Symbol	href		1241708						
ANR	1241999	Symbol	href -> children -> content		1241708						
ANR	1242000	Symbol	id		1241708						
ANR	1242001	Symbol	* href -> children -> content		1241708						
ANR	1242002	Symbol	* * href -> children		1241708						
ANR	1242003	Symbol	data -> doc -> children		1241708						
ANR	1242004	Symbol	ret		1241708						
ANR	1242005	Symbol	NULL		1241708						
ANR	1242006	Symbol	get_node_with_attribute_recursive_ex		1241708						
ANR	1242007	Symbol	get_node_with_attribute_recursive		1241708						
ANR	1242008	Symbol	href -> next		1241708						
ANR	1242009	Symbol	E_ERROR		1241708						
ANR	1242010	Symbol	* data -> doc		1241708						
ANR	1242011	Symbol	data -> doc		1241708						
ANR	1242012	Symbol	get_attribute_ex		1241708						
ANR	1242013	Symbol	SOAP_1_2_ENC_NAMESPACE		1241708						
ANR	1242014	Symbol	* data		1241708						
ANR	1242015	Symbol	* href		1241708						
ANR	1242016	Symbol	* * * href		1241708						
ANR	1242017	Function	set_ns_and_type	3460:0:110378:110498							
ANR	1242018	FunctionDef	"set_ns_and_type (xmlNodePtr node , encodeTypePtr type)"		1242017	0					
ANR	1242019	CompoundStatement		3461:0:110443:110498	1242017	0					
ANR	1242020	ExpressionStatement	"set_ns_and_type_ex ( node , type -> ns , type -> type_str )"	3462:1:110446:110496	1242017	0	True				
ANR	1242021	CallExpression	"set_ns_and_type_ex ( node , type -> ns , type -> type_str )"		1242017	0					
ANR	1242022	Callee	set_ns_and_type_ex		1242017	0					
ANR	1242023	Identifier	set_ns_and_type_ex		1242017	0					
ANR	1242024	ArgumentList	node		1242017	1					
ANR	1242025	Argument	node		1242017	0					
ANR	1242026	Identifier	node		1242017	0					
ANR	1242027	Argument	type -> ns		1242017	1					
ANR	1242028	PtrMemberAccess	type -> ns		1242017	0					
ANR	1242029	Identifier	type		1242017	0					
ANR	1242030	Identifier	ns		1242017	1					
ANR	1242031	Argument	type -> type_str		1242017	2					
ANR	1242032	PtrMemberAccess	type -> type_str		1242017	0					
ANR	1242033	Identifier	type		1242017	0					
ANR	1242034	Identifier	type_str		1242017	1					
ANR	1242035	ReturnType	static void		1242017	1					
ANR	1242036	Identifier	set_ns_and_type		1242017	2					
ANR	1242037	ParameterList	"xmlNodePtr node , encodeTypePtr type"		1242017	3					
ANR	1242038	Parameter	xmlNodePtr node	3460:28:110406:110420	1242017	0	True				
ANR	1242039	ParameterType	xmlNodePtr		1242017	0					
ANR	1242040	Identifier	node		1242017	1					
ANR	1242041	Parameter	encodeTypePtr type	3460:45:110423:110440	1242017	1	True				
ANR	1242042	ParameterType	encodeTypePtr		1242017	0					
ANR	1242043	Identifier	type		1242017	1					
ANR	1242044	CFGEntryNode	ENTRY		1242017		True				
ANR	1242045	CFGExitNode	EXIT		1242017		True				
ANR	1242046	Symbol	node		1242017						
ANR	1242047	Symbol	type -> ns		1242017						
ANR	1242048	Symbol	* type		1242017						
ANR	1242049	Symbol	type -> type_str		1242017						
ANR	1242050	Symbol	type		1242017						
ANR	1242051	Function	set_ns_and_type_ex	3465:0:110501:110695							
ANR	1242052	FunctionDef	"set_ns_and_type_ex (xmlNodePtr node , char * ns , char * type)"		1242051	0					
ANR	1242053	CompoundStatement		3466:0:110571:110695	1242051	0					
ANR	1242054	IdentifierDeclStatement	smart_str nstype = { 0 } ;	3467:1:110574:110596	1242051	0	True				
ANR	1242055	IdentifierDecl	nstype = { 0 }		1242051	0					
ANR	1242056	IdentifierDeclType	smart_str		1242051	0					
ANR	1242057	Identifier	nstype		1242051	1					
ANR	1242058	AssignmentExpression	nstype = { 0 }		1242051	2		=			
ANR	1242059	Identifier	nstype		1242051	0					
ANR	1242060	InitializerList	0		1242051	1					
ANR	1242061	PrimaryExpression	0		1242051	0					
ANR	1242062	ExpressionStatement	"get_type_str ( node , ns , type , & nstype )"	3468:1:110599:110636	1242051	1	True				
ANR	1242063	CallExpression	"get_type_str ( node , ns , type , & nstype )"		1242051	0					
ANR	1242064	Callee	get_type_str		1242051	0					
ANR	1242065	Identifier	get_type_str		1242051	0					
ANR	1242066	ArgumentList	node		1242051	1					
ANR	1242067	Argument	node		1242051	0					
ANR	1242068	Identifier	node		1242051	0					
ANR	1242069	Argument	ns		1242051	1					
ANR	1242070	Identifier	ns		1242051	0					
ANR	1242071	Argument	type		1242051	2					
ANR	1242072	Identifier	type		1242051	0					
ANR	1242073	Argument	& nstype		1242051	3					
ANR	1242074	UnaryOperationExpression	& nstype		1242051	0					
ANR	1242075	UnaryOperator	&		1242051	0					
ANR	1242076	Identifier	nstype		1242051	1					
ANR	1242077	ExpressionStatement	"set_xsi_type ( node , nstype . c )"	3469:1:110639:110667	1242051	2	True				
ANR	1242078	CallExpression	"set_xsi_type ( node , nstype . c )"		1242051	0					
ANR	1242079	Callee	set_xsi_type		1242051	0					
ANR	1242080	Identifier	set_xsi_type		1242051	0					
ANR	1242081	ArgumentList	node		1242051	1					
ANR	1242082	Argument	node		1242051	0					
ANR	1242083	Identifier	node		1242051	0					
ANR	1242084	Argument	nstype . c		1242051	1					
ANR	1242085	MemberAccess	nstype . c		1242051	0					
ANR	1242086	Identifier	nstype		1242051	0					
ANR	1242087	Identifier	c		1242051	1					
ANR	1242088	ExpressionStatement	smart_str_free ( & nstype )	3470:1:110670:110693	1242051	3	True				
ANR	1242089	CallExpression	smart_str_free ( & nstype )		1242051	0					
ANR	1242090	Callee	smart_str_free		1242051	0					
ANR	1242091	Identifier	smart_str_free		1242051	0					
ANR	1242092	ArgumentList	& nstype		1242051	1					
ANR	1242093	Argument	& nstype		1242051	0					
ANR	1242094	UnaryOperationExpression	& nstype		1242051	0					
ANR	1242095	UnaryOperator	&		1242051	0					
ANR	1242096	Identifier	nstype		1242051	1					
ANR	1242097	ReturnType	static void		1242051	1					
ANR	1242098	Identifier	set_ns_and_type_ex		1242051	2					
ANR	1242099	ParameterList	"xmlNodePtr node , char * ns , char * type"		1242051	3					
ANR	1242100	Parameter	xmlNodePtr node	3465:31:110532:110546	1242051	0	True				
ANR	1242101	ParameterType	xmlNodePtr		1242051	0					
ANR	1242102	Identifier	node		1242051	1					
ANR	1242103	Parameter	char * ns	3465:48:110549:110556	1242051	1	True				
ANR	1242104	ParameterType	char *		1242051	0					
ANR	1242105	Identifier	ns		1242051	1					
ANR	1242106	Parameter	char * type	3465:58:110559:110568	1242051	2	True				
ANR	1242107	ParameterType	char *		1242051	0					
ANR	1242108	Identifier	type		1242051	1					
ANR	1242109	CFGEntryNode	ENTRY		1242051		True				
ANR	1242110	CFGExitNode	EXIT		1242051		True				
ANR	1242111	Symbol	node		1242051						
ANR	1242112	Symbol	nstype . c		1242051						
ANR	1242113	Symbol	ns		1242051						
ANR	1242114	Symbol	type		1242051						
ANR	1242115	Symbol	& nstype		1242051						
ANR	1242116	Symbol	nstype		1242051						
ANR	1242117	Function	xmlSearchNsPrefixByHref	3473:0:110698:111543							
ANR	1242118	FunctionDef	"xmlSearchNsPrefixByHref (xmlDocPtr doc , xmlNodePtr node , const xmlChar * href)"		1242117	0					
ANR	1242119	CompoundStatement		3474:0:110792:111543	1242117	0					
ANR	1242120	IdentifierDeclStatement	xmlNsPtr cur ;	3475:1:110795:110807	1242117	0	True				
ANR	1242121	IdentifierDecl	cur		1242117	0					
ANR	1242122	IdentifierDeclType	xmlNsPtr		1242117	0					
ANR	1242123	Identifier	cur		1242117	1					
ANR	1242124	IdentifierDeclStatement	xmlNodePtr orig = node ;	3476:1:110810:110832	1242117	1	True				
ANR	1242125	IdentifierDecl	orig = node		1242117	0					
ANR	1242126	IdentifierDeclType	xmlNodePtr		1242117	0					
ANR	1242127	Identifier	orig		1242117	1					
ANR	1242128	AssignmentExpression	orig = node		1242117	2		=			
ANR	1242129	Identifier	node		1242117	0					
ANR	1242130	Identifier	node		1242117	1					
ANR	1242131	WhileStatement	while ( node )		1242117	2					
ANR	1242132	Condition	node	3478:8:110843:110846	1242117	0	True				
ANR	1242133	Identifier	node		1242117	0					
ANR	1242134	CompoundStatement		5:14:56:56	1242117	1					
ANR	1242135	IfStatement	if ( node -> type == XML_ENTITY_REF_NODE || node -> type == XML_ENTITY_NODE || node -> type == XML_ENTITY_DECL )		1242117	0					
ANR	1242136	Condition	node -> type == XML_ENTITY_REF_NODE || node -> type == XML_ENTITY_NODE || node -> type == XML_ENTITY_DECL	3479:6:110857:110967	1242117	0	True				
ANR	1242137	OrExpression	node -> type == XML_ENTITY_REF_NODE || node -> type == XML_ENTITY_NODE || node -> type == XML_ENTITY_DECL		1242117	0		||			
ANR	1242138	EqualityExpression	node -> type == XML_ENTITY_REF_NODE		1242117	0		==			
ANR	1242139	PtrMemberAccess	node -> type		1242117	0					
ANR	1242140	Identifier	node		1242117	0					
ANR	1242141	Identifier	type		1242117	1					
ANR	1242142	Identifier	XML_ENTITY_REF_NODE		1242117	1					
ANR	1242143	OrExpression	node -> type == XML_ENTITY_NODE || node -> type == XML_ENTITY_DECL		1242117	1		||			
ANR	1242144	EqualityExpression	node -> type == XML_ENTITY_NODE		1242117	0		==			
ANR	1242145	PtrMemberAccess	node -> type		1242117	0					
ANR	1242146	Identifier	node		1242117	0					
ANR	1242147	Identifier	type		1242117	1					
ANR	1242148	Identifier	XML_ENTITY_NODE		1242117	1					
ANR	1242149	EqualityExpression	node -> type == XML_ENTITY_DECL		1242117	1		==			
ANR	1242150	PtrMemberAccess	node -> type		1242117	0					
ANR	1242151	Identifier	node		1242117	0					
ANR	1242152	Identifier	type		1242117	1					
ANR	1242153	Identifier	XML_ENTITY_DECL		1242117	1					
ANR	1242154	CompoundStatement		8:37:177:177	1242117	1					
ANR	1242155	ReturnStatement	return NULL ;	3482:3:110975:110986	1242117	0	True				
ANR	1242156	Identifier	NULL		1242117	0					
ANR	1242157	IfStatement	if ( node -> type == XML_ELEMENT_NODE )		1242117	1					
ANR	1242158	Condition	node -> type == XML_ELEMENT_NODE	3484:6:110998:111027	1242117	0	True				
ANR	1242159	EqualityExpression	node -> type == XML_ELEMENT_NODE		1242117	0		==			
ANR	1242160	PtrMemberAccess	node -> type		1242117	0					
ANR	1242161	Identifier	node		1242117	0					
ANR	1242162	Identifier	type		1242117	1					
ANR	1242163	Identifier	XML_ELEMENT_NODE		1242117	1					
ANR	1242164	CompoundStatement		11:38:237:237	1242117	1					
ANR	1242165	ExpressionStatement	cur = node -> nsDef	3485:3:111035:111052	1242117	0	True				
ANR	1242166	AssignmentExpression	cur = node -> nsDef		1242117	0		=			
ANR	1242167	Identifier	cur		1242117	0					
ANR	1242168	PtrMemberAccess	node -> nsDef		1242117	1					
ANR	1242169	Identifier	node		1242117	0					
ANR	1242170	Identifier	nsDef		1242117	1					
ANR	1242171	WhileStatement	while ( cur != NULL )		1242117	1					
ANR	1242172	Condition	cur != NULL	3486:10:111064:111074	1242117	0	True				
ANR	1242173	EqualityExpression	cur != NULL		1242117	0		!=			
ANR	1242174	Identifier	cur		1242117	0					
ANR	1242175	Identifier	NULL		1242117	1					
ANR	1242176	CompoundStatement		13:23:284:284	1242117	1					
ANR	1242177	IfStatement	"if ( cur -> prefix && cur -> href && xmlStrEqual ( cur -> href , href ) )"		1242117	0					
ANR	1242178	Condition	"cur -> prefix && cur -> href && xmlStrEqual ( cur -> href , href )"	3487:8:111087:111142	1242117	0	True				
ANR	1242179	AndExpression	"cur -> prefix && cur -> href && xmlStrEqual ( cur -> href , href )"		1242117	0		&&			
ANR	1242180	PtrMemberAccess	cur -> prefix		1242117	0					
ANR	1242181	Identifier	cur		1242117	0					
ANR	1242182	Identifier	prefix		1242117	1					
ANR	1242183	AndExpression	"cur -> href && xmlStrEqual ( cur -> href , href )"		1242117	1		&&			
ANR	1242184	PtrMemberAccess	cur -> href		1242117	0					
ANR	1242185	Identifier	cur		1242117	0					
ANR	1242186	Identifier	href		1242117	1					
ANR	1242187	CallExpression	"xmlStrEqual ( cur -> href , href )"		1242117	1					
ANR	1242188	Callee	xmlStrEqual		1242117	0					
ANR	1242189	Identifier	xmlStrEqual		1242117	0					
ANR	1242190	ArgumentList	cur -> href		1242117	1					
ANR	1242191	Argument	cur -> href		1242117	0					
ANR	1242192	PtrMemberAccess	cur -> href		1242117	0					
ANR	1242193	Identifier	cur		1242117	0					
ANR	1242194	Identifier	href		1242117	1					
ANR	1242195	Argument	href		1242117	1					
ANR	1242196	Identifier	href		1242117	0					
ANR	1242197	CompoundStatement		14:66:352:352	1242117	1					
ANR	1242198	IfStatement	"if ( xmlSearchNs ( doc , node , cur -> prefix ) == cur )"		1242117	0					
ANR	1242199	Condition	"xmlSearchNs ( doc , node , cur -> prefix ) == cur"	3488:9:111156:111197	1242117	0	True				
ANR	1242200	EqualityExpression	"xmlSearchNs ( doc , node , cur -> prefix ) == cur"		1242117	0		==			
ANR	1242201	CallExpression	"xmlSearchNs ( doc , node , cur -> prefix )"		1242117	0					
ANR	1242202	Callee	xmlSearchNs		1242117	0					
ANR	1242203	Identifier	xmlSearchNs		1242117	0					
ANR	1242204	ArgumentList	doc		1242117	1					
ANR	1242205	Argument	doc		1242117	0					
ANR	1242206	Identifier	doc		1242117	0					
ANR	1242207	Argument	node		1242117	1					
ANR	1242208	Identifier	node		1242117	0					
ANR	1242209	Argument	cur -> prefix		1242117	2					
ANR	1242210	PtrMemberAccess	cur -> prefix		1242117	0					
ANR	1242211	Identifier	cur		1242117	0					
ANR	1242212	Identifier	prefix		1242117	1					
ANR	1242213	Identifier	cur		1242117	1					
ANR	1242214	CompoundStatement		15:53:407:407	1242117	1					
ANR	1242215	ReturnStatement	return cur ;	3489:6:111208:111218	1242117	0	True				
ANR	1242216	Identifier	cur		1242117	0					
ANR	1242217	ExpressionStatement	cur = cur -> next	3492:4:111237:111252	1242117	1	True				
ANR	1242218	AssignmentExpression	cur = cur -> next		1242117	0		=			
ANR	1242219	Identifier	cur		1242117	0					
ANR	1242220	PtrMemberAccess	cur -> next		1242117	1					
ANR	1242221	Identifier	cur		1242117	0					
ANR	1242222	Identifier	next		1242117	1					
ANR	1242223	IfStatement	if ( orig != node )		1242117	2					
ANR	1242224	Condition	orig != node	3494:7:111266:111277	1242117	0	True				
ANR	1242225	EqualityExpression	orig != node		1242117	0		!=			
ANR	1242226	Identifier	orig		1242117	0					
ANR	1242227	Identifier	node		1242117	1					
ANR	1242228	CompoundStatement		21:21:487:487	1242117	1					
ANR	1242229	ExpressionStatement	cur = node -> ns	3495:4:111286:111300	1242117	0	True				
ANR	1242230	AssignmentExpression	cur = node -> ns		1242117	0		=			
ANR	1242231	Identifier	cur		1242117	0					
ANR	1242232	PtrMemberAccess	node -> ns		1242117	1					
ANR	1242233	Identifier	node		1242117	0					
ANR	1242234	Identifier	ns		1242117	1					
ANR	1242235	IfStatement	if ( cur != NULL )		1242117	1					
ANR	1242236	Condition	cur != NULL	3496:8:111310:111320	1242117	0	True				
ANR	1242237	EqualityExpression	cur != NULL		1242117	0		!=			
ANR	1242238	Identifier	cur		1242117	0					
ANR	1242239	Identifier	NULL		1242117	1					
ANR	1242240	CompoundStatement		23:21:530:530	1242117	1					
ANR	1242241	IfStatement	"if ( cur -> prefix && cur -> href && xmlStrEqual ( cur -> href , href ) )"		1242117	0					
ANR	1242242	Condition	"cur -> prefix && cur -> href && xmlStrEqual ( cur -> href , href )"	3497:9:111334:111389	1242117	0	True				
ANR	1242243	AndExpression	"cur -> prefix && cur -> href && xmlStrEqual ( cur -> href , href )"		1242117	0		&&			
ANR	1242244	PtrMemberAccess	cur -> prefix		1242117	0					
ANR	1242245	Identifier	cur		1242117	0					
ANR	1242246	Identifier	prefix		1242117	1					
ANR	1242247	AndExpression	"cur -> href && xmlStrEqual ( cur -> href , href )"		1242117	1		&&			
ANR	1242248	PtrMemberAccess	cur -> href		1242117	0					
ANR	1242249	Identifier	cur		1242117	0					
ANR	1242250	Identifier	href		1242117	1					
ANR	1242251	CallExpression	"xmlStrEqual ( cur -> href , href )"		1242117	1					
ANR	1242252	Callee	xmlStrEqual		1242117	0					
ANR	1242253	Identifier	xmlStrEqual		1242117	0					
ANR	1242254	ArgumentList	cur -> href		1242117	1					
ANR	1242255	Argument	cur -> href		1242117	0					
ANR	1242256	PtrMemberAccess	cur -> href		1242117	0					
ANR	1242257	Identifier	cur		1242117	0					
ANR	1242258	Identifier	href		1242117	1					
ANR	1242259	Argument	href		1242117	1					
ANR	1242260	Identifier	href		1242117	0					
ANR	1242261	CompoundStatement		24:67:599:599	1242117	1					
ANR	1242262	IfStatement	"if ( xmlSearchNs ( doc , node , cur -> prefix ) == cur )"		1242117	0					
ANR	1242263	Condition	"xmlSearchNs ( doc , node , cur -> prefix ) == cur"	3498:10:111404:111445	1242117	0	True				
ANR	1242264	EqualityExpression	"xmlSearchNs ( doc , node , cur -> prefix ) == cur"		1242117	0		==			
ANR	1242265	CallExpression	"xmlSearchNs ( doc , node , cur -> prefix )"		1242117	0					
ANR	1242266	Callee	xmlSearchNs		1242117	0					
ANR	1242267	Identifier	xmlSearchNs		1242117	0					
ANR	1242268	ArgumentList	doc		1242117	1					
ANR	1242269	Argument	doc		1242117	0					
ANR	1242270	Identifier	doc		1242117	0					
ANR	1242271	Argument	node		1242117	1					
ANR	1242272	Identifier	node		1242117	0					
ANR	1242273	Argument	cur -> prefix		1242117	2					
ANR	1242274	PtrMemberAccess	cur -> prefix		1242117	0					
ANR	1242275	Identifier	cur		1242117	0					
ANR	1242276	Identifier	prefix		1242117	1					
ANR	1242277	Identifier	cur		1242117	1					
ANR	1242278	CompoundStatement		25:54:655:655	1242117	1					
ANR	1242279	ReturnStatement	return cur ;	3499:7:111457:111467	1242117	0	True				
ANR	1242280	Identifier	cur		1242117	0					
ANR	1242281	ExpressionStatement	node = node -> parent	3505:2:111505:111524	1242117	2	True				
ANR	1242282	AssignmentExpression	node = node -> parent		1242117	0		=			
ANR	1242283	Identifier	node		1242117	0					
ANR	1242284	PtrMemberAccess	node -> parent		1242117	1					
ANR	1242285	Identifier	node		1242117	0					
ANR	1242286	Identifier	parent		1242117	1					
ANR	1242287	ReturnStatement	return NULL ;	3507:1:111530:111541	1242117	3	True				
ANR	1242288	Identifier	NULL		1242117	0					
ANR	1242289	ReturnType	static xmlNsPtr		1242117	1					
ANR	1242290	Identifier	xmlSearchNsPrefixByHref		1242117	2					
ANR	1242291	ParameterList	"xmlDocPtr doc , xmlNodePtr node , const xmlChar * href"		1242117	3					
ANR	1242292	Parameter	xmlDocPtr doc	3473:40:110738:110750	1242117	0	True				
ANR	1242293	ParameterType	xmlDocPtr		1242117	0					
ANR	1242294	Identifier	doc		1242117	1					
ANR	1242295	Parameter	xmlNodePtr node	3473:55:110753:110767	1242117	1	True				
ANR	1242296	ParameterType	xmlNodePtr		1242117	0					
ANR	1242297	Identifier	node		1242117	1					
ANR	1242298	Parameter	const xmlChar * href	3473:72:110770:110789	1242117	2	True				
ANR	1242299	ParameterType	const xmlChar *		1242117	0					
ANR	1242300	Identifier	href		1242117	1					
ANR	1242301	CFGEntryNode	ENTRY		1242117		True				
ANR	1242302	CFGExitNode	EXIT		1242117		True				
ANR	1242303	Symbol	cur		1242117						
ANR	1242304	Symbol	node -> ns		1242117						
ANR	1242305	Symbol	XML_ELEMENT_NODE		1242117						
ANR	1242306	Symbol	NULL		1242117						
ANR	1242307	Symbol	cur -> href		1242117						
ANR	1242308	Symbol	node -> nsDef		1242117						
ANR	1242309	Symbol	xmlStrEqual		1242117						
ANR	1242310	Symbol	xmlSearchNs		1242117						
ANR	1242311	Symbol	cur -> prefix		1242117						
ANR	1242312	Symbol	node		1242117						
ANR	1242313	Symbol	orig		1242117						
ANR	1242314	Symbol	* cur		1242117						
ANR	1242315	Symbol	XML_ENTITY_DECL		1242117						
ANR	1242316	Symbol	node -> parent		1242117						
ANR	1242317	Symbol	doc		1242117						
ANR	1242318	Symbol	node -> type		1242117						
ANR	1242319	Symbol	* node		1242117						
ANR	1242320	Symbol	XML_ENTITY_REF_NODE		1242117						
ANR	1242321	Symbol	href		1242117						
ANR	1242322	Symbol	XML_ENTITY_NODE		1242117						
ANR	1242323	Symbol	cur -> next		1242117						
ANR	1242324	Function	encode_add_ns	3510:0:111546:112599							
ANR	1242325	FunctionDef	"encode_add_ns (xmlNodePtr node , const char * ns)"		1242324	0					
ANR	1242326	CompoundStatement		3511:0:111602:112599	1242324	0					
ANR	1242327	IdentifierDeclStatement	xmlNsPtr xmlns ;	3512:1:111605:111619	1242324	0	True				
ANR	1242328	IdentifierDecl	xmlns		1242324	0					
ANR	1242329	IdentifierDeclType	xmlNsPtr		1242324	0					
ANR	1242330	Identifier	xmlns		1242324	1					
ANR	1242331	IfStatement	if ( ns == NULL )		1242324	1					
ANR	1242332	Condition	ns == NULL	3514:5:111627:111636	1242324	0	True				
ANR	1242333	EqualityExpression	ns == NULL		1242324	0		==			
ANR	1242334	Identifier	ns		1242324	0					
ANR	1242335	Identifier	NULL		1242324	1					
ANR	1242336	CompoundStatement		4:17:36:36	1242324	1					
ANR	1242337	ReturnStatement	return NULL ;	3515:3:111644:111655	1242324	0	True				
ANR	1242338	Identifier	NULL		1242324	0					
ANR	1242339	ExpressionStatement	"xmlns = xmlSearchNsByHref ( node -> doc , node , BAD_CAST ( ns ) )"	3518:1:111662:111718	1242324	2	True				
ANR	1242340	AssignmentExpression	"xmlns = xmlSearchNsByHref ( node -> doc , node , BAD_CAST ( ns ) )"		1242324	0		=			
ANR	1242341	Identifier	xmlns		1242324	0					
ANR	1242342	CallExpression	"xmlSearchNsByHref ( node -> doc , node , BAD_CAST ( ns ) )"		1242324	1					
ANR	1242343	Callee	xmlSearchNsByHref		1242324	0					
ANR	1242344	Identifier	xmlSearchNsByHref		1242324	0					
ANR	1242345	ArgumentList	node -> doc		1242324	1					
ANR	1242346	Argument	node -> doc		1242324	0					
ANR	1242347	PtrMemberAccess	node -> doc		1242324	0					
ANR	1242348	Identifier	node		1242324	0					
ANR	1242349	Identifier	doc		1242324	1					
ANR	1242350	Argument	node		1242324	1					
ANR	1242351	Identifier	node		1242324	0					
ANR	1242352	Argument	BAD_CAST ( ns )		1242324	2					
ANR	1242353	CallExpression	BAD_CAST ( ns )		1242324	0					
ANR	1242354	Callee	BAD_CAST		1242324	0					
ANR	1242355	Identifier	BAD_CAST		1242324	0					
ANR	1242356	ArgumentList	ns		1242324	1					
ANR	1242357	Argument	ns		1242324	0					
ANR	1242358	Identifier	ns		1242324	0					
ANR	1242359	IfStatement	if ( xmlns != NULL && xmlns -> prefix == NULL )		1242324	3					
ANR	1242360	Condition	xmlns != NULL && xmlns -> prefix == NULL	3519:5:111725:111762	1242324	0	True				
ANR	1242361	AndExpression	xmlns != NULL && xmlns -> prefix == NULL		1242324	0		&&			
ANR	1242362	EqualityExpression	xmlns != NULL		1242324	0		!=			
ANR	1242363	Identifier	xmlns		1242324	0					
ANR	1242364	Identifier	NULL		1242324	1					
ANR	1242365	EqualityExpression	xmlns -> prefix == NULL		1242324	1		==			
ANR	1242366	PtrMemberAccess	xmlns -> prefix		1242324	0					
ANR	1242367	Identifier	xmlns		1242324	0					
ANR	1242368	Identifier	prefix		1242324	1					
ANR	1242369	Identifier	NULL		1242324	1					
ANR	1242370	CompoundStatement		9:45:162:162	1242324	1					
ANR	1242371	ExpressionStatement	"xmlns = xmlSearchNsPrefixByHref ( node -> doc , node , BAD_CAST ( ns ) )"	3520:2:111769:111831	1242324	0	True				
ANR	1242372	AssignmentExpression	"xmlns = xmlSearchNsPrefixByHref ( node -> doc , node , BAD_CAST ( ns ) )"		1242324	0		=			
ANR	1242373	Identifier	xmlns		1242324	0					
ANR	1242374	CallExpression	"xmlSearchNsPrefixByHref ( node -> doc , node , BAD_CAST ( ns ) )"		1242324	1					
ANR	1242375	Callee	xmlSearchNsPrefixByHref		1242324	0					
ANR	1242376	Identifier	xmlSearchNsPrefixByHref		1242324	0					
ANR	1242377	ArgumentList	node -> doc		1242324	1					
ANR	1242378	Argument	node -> doc		1242324	0					
ANR	1242379	PtrMemberAccess	node -> doc		1242324	0					
ANR	1242380	Identifier	node		1242324	0					
ANR	1242381	Identifier	doc		1242324	1					
ANR	1242382	Argument	node		1242324	1					
ANR	1242383	Identifier	node		1242324	0					
ANR	1242384	Argument	BAD_CAST ( ns )		1242324	2					
ANR	1242385	CallExpression	BAD_CAST ( ns )		1242324	0					
ANR	1242386	Callee	BAD_CAST		1242324	0					
ANR	1242387	Identifier	BAD_CAST		1242324	0					
ANR	1242388	ArgumentList	ns		1242324	1					
ANR	1242389	Argument	ns		1242324	0					
ANR	1242390	Identifier	ns		1242324	0					
ANR	1242391	IfStatement	if ( xmlns == NULL )		1242324	4					
ANR	1242392	Condition	xmlns == NULL	3522:5:111841:111853	1242324	0	True				
ANR	1242393	EqualityExpression	xmlns == NULL		1242324	0		==			
ANR	1242394	Identifier	xmlns		1242324	0					
ANR	1242395	Identifier	NULL		1242324	1					
ANR	1242396	CompoundStatement		13:2:257:272	1242324	1					
ANR	1242397	IdentifierDeclStatement	xmlChar * prefix ;	3523:2:111860:111875	1242324	0	True				
ANR	1242398	IdentifierDecl	* prefix		1242324	0					
ANR	1242399	IdentifierDeclType	xmlChar *		1242324	0					
ANR	1242400	Identifier	prefix		1242324	1					
ANR	1242401	ExpressionStatement	TSRMLS_FETCH ( )	3524:8:111885:111899	1242324	1	True				
ANR	1242402	CallExpression	TSRMLS_FETCH ( )		1242324	0					
ANR	1242403	Callee	TSRMLS_FETCH		1242324	0					
ANR	1242404	Identifier	TSRMLS_FETCH		1242324	0					
ANR	1242405	ArgumentList			1242324	1					
ANR	1242406	IfStatement	"if ( zend_hash_find ( & SOAP_GLOBAL ( defEncNs ) , ( char * ) ns , strlen ( ns ) + 1 , ( void * * ) & prefix ) == SUCCESS )"		1242324	2					
ANR	1242407	Condition	"zend_hash_find ( & SOAP_GLOBAL ( defEncNs ) , ( char * ) ns , strlen ( ns ) + 1 , ( void * * ) & prefix ) == SUCCESS"	3526:6:111908:112001	1242324	0	True				
ANR	1242408	EqualityExpression	"zend_hash_find ( & SOAP_GLOBAL ( defEncNs ) , ( char * ) ns , strlen ( ns ) + 1 , ( void * * ) & prefix ) == SUCCESS"		1242324	0		==			
ANR	1242409	CallExpression	"zend_hash_find ( & SOAP_GLOBAL ( defEncNs ) , ( char * ) ns , strlen ( ns ) + 1 , ( void * * ) & prefix )"		1242324	0					
ANR	1242410	Callee	zend_hash_find		1242324	0					
ANR	1242411	Identifier	zend_hash_find		1242324	0					
ANR	1242412	ArgumentList	& SOAP_GLOBAL ( defEncNs )		1242324	1					
ANR	1242413	Argument	& SOAP_GLOBAL ( defEncNs )		1242324	0					
ANR	1242414	UnaryOperationExpression	& SOAP_GLOBAL ( defEncNs )		1242324	0					
ANR	1242415	UnaryOperator	&		1242324	0					
ANR	1242416	CallExpression	SOAP_GLOBAL ( defEncNs )		1242324	1					
ANR	1242417	Callee	SOAP_GLOBAL		1242324	0					
ANR	1242418	Identifier	SOAP_GLOBAL		1242324	0					
ANR	1242419	ArgumentList	defEncNs		1242324	1					
ANR	1242420	Argument	defEncNs		1242324	0					
ANR	1242421	Identifier	defEncNs		1242324	0					
ANR	1242422	Argument	( char * ) ns		1242324	1					
ANR	1242423	CastExpression	( char * ) ns		1242324	0					
ANR	1242424	CastTarget	char *		1242324	0					
ANR	1242425	Identifier	ns		1242324	1					
ANR	1242426	Argument	strlen ( ns ) + 1		1242324	2					
ANR	1242427	AdditiveExpression	strlen ( ns ) + 1		1242324	0		+			
ANR	1242428	CallExpression	strlen ( ns )		1242324	0					
ANR	1242429	Callee	strlen		1242324	0					
ANR	1242430	Identifier	strlen		1242324	0					
ANR	1242431	ArgumentList	ns		1242324	1					
ANR	1242432	Argument	ns		1242324	0					
ANR	1242433	Identifier	ns		1242324	0					
ANR	1242434	PrimaryExpression	1		1242324	1					
ANR	1242435	Argument	( void * * ) & prefix		1242324	3					
ANR	1242436	CastExpression	( void * * ) & prefix		1242324	0					
ANR	1242437	CastTarget	void * *		1242324	0					
ANR	1242438	UnaryOperationExpression	& prefix		1242324	1					
ANR	1242439	UnaryOperator	&		1242324	0					
ANR	1242440	Identifier	prefix		1242324	1					
ANR	1242441	Identifier	SUCCESS		1242324	1					
ANR	1242442	CompoundStatement		16:102:401:401	1242324	1					
ANR	1242443	ExpressionStatement	"xmlns = xmlNewNs ( node -> doc -> children , BAD_CAST ( ns ) , prefix )"	3527:3:112009:112068	1242324	0	True				
ANR	1242444	AssignmentExpression	"xmlns = xmlNewNs ( node -> doc -> children , BAD_CAST ( ns ) , prefix )"		1242324	0		=			
ANR	1242445	Identifier	xmlns		1242324	0					
ANR	1242446	CallExpression	"xmlNewNs ( node -> doc -> children , BAD_CAST ( ns ) , prefix )"		1242324	1					
ANR	1242447	Callee	xmlNewNs		1242324	0					
ANR	1242448	Identifier	xmlNewNs		1242324	0					
ANR	1242449	ArgumentList	node -> doc -> children		1242324	1					
ANR	1242450	Argument	node -> doc -> children		1242324	0					
ANR	1242451	PtrMemberAccess	node -> doc -> children		1242324	0					
ANR	1242452	PtrMemberAccess	node -> doc		1242324	0					
ANR	1242453	Identifier	node		1242324	0					
ANR	1242454	Identifier	doc		1242324	1					
ANR	1242455	Identifier	children		1242324	1					
ANR	1242456	Argument	BAD_CAST ( ns )		1242324	1					
ANR	1242457	CallExpression	BAD_CAST ( ns )		1242324	0					
ANR	1242458	Callee	BAD_CAST		1242324	0					
ANR	1242459	Identifier	BAD_CAST		1242324	0					
ANR	1242460	ArgumentList	ns		1242324	1					
ANR	1242461	Argument	ns		1242324	0					
ANR	1242462	Identifier	ns		1242324	0					
ANR	1242463	Argument	prefix		1242324	2					
ANR	1242464	Identifier	prefix		1242324	0					
ANR	1242465	ElseStatement	else		1242324	0					
ANR	1242466	CompoundStatement		20:3:508:544	1242324	0					
ANR	1242467	IdentifierDeclStatement	smart_str prefix = { 0 } ;	3529:3:112084:112106	1242324	0	True				
ANR	1242468	IdentifierDecl	prefix = { 0 }		1242324	0					
ANR	1242469	IdentifierDeclType	smart_str		1242324	0					
ANR	1242470	Identifier	prefix		1242324	1					
ANR	1242471	AssignmentExpression	prefix = { 0 }		1242324	2		=			
ANR	1242472	Identifier	prefix		1242324	0					
ANR	1242473	InitializerList	0		1242324	1					
ANR	1242474	PrimaryExpression	0		1242324	0					
ANR	1242475	IdentifierDeclStatement	int num = ++ SOAP_GLOBAL ( cur_uniq_ns ) ;	3530:3:112111:112147	1242324	1	True				
ANR	1242476	IdentifierDecl	num = ++ SOAP_GLOBAL ( cur_uniq_ns )		1242324	0					
ANR	1242477	IdentifierDeclType	int		1242324	0					
ANR	1242478	Identifier	num		1242324	1					
ANR	1242479	AssignmentExpression	num = ++ SOAP_GLOBAL ( cur_uniq_ns )		1242324	2		=			
ANR	1242480	Identifier	num		1242324	0					
ANR	1242481	UnaryExpression	++ SOAP_GLOBAL ( cur_uniq_ns )		1242324	1					
ANR	1242482	IncDec	++		1242324	0					
ANR	1242483	CallExpression	SOAP_GLOBAL ( cur_uniq_ns )		1242324	1					
ANR	1242484	Callee	SOAP_GLOBAL		1242324	0					
ANR	1242485	Identifier	SOAP_GLOBAL		1242324	0					
ANR	1242486	ArgumentList	cur_uniq_ns		1242324	1					
ANR	1242487	Argument	cur_uniq_ns		1242324	0					
ANR	1242488	Identifier	cur_uniq_ns		1242324	0					
ANR	1242489	WhileStatement	while ( 1 )		1242324	2					
ANR	1242490	Condition	1	3532:10:112160:112160	1242324	0	True				
ANR	1242491	PrimaryExpression	1		1242324	0					
ANR	1242492	CompoundStatement		22:13:560:560	1242324	1					
ANR	1242493	ExpressionStatement	"smart_str_appendl ( & prefix , ""ns"" , 2 )"	3533:4:112169:112204	1242324	0	True				
ANR	1242494	CallExpression	"smart_str_appendl ( & prefix , ""ns"" , 2 )"		1242324	0					
ANR	1242495	Callee	smart_str_appendl		1242324	0					
ANR	1242496	Identifier	smart_str_appendl		1242324	0					
ANR	1242497	ArgumentList	& prefix		1242324	1					
ANR	1242498	Argument	& prefix		1242324	0					
ANR	1242499	UnaryOperationExpression	& prefix		1242324	0					
ANR	1242500	UnaryOperator	&		1242324	0					
ANR	1242501	Identifier	prefix		1242324	1					
ANR	1242502	Argument	"""ns"""		1242324	1					
ANR	1242503	PrimaryExpression	"""ns"""		1242324	0					
ANR	1242504	Argument	2		1242324	2					
ANR	1242505	PrimaryExpression	2		1242324	0					
ANR	1242506	ExpressionStatement	"smart_str_append_long ( & prefix , num )"	3534:4:112210:112245	1242324	1	True				
ANR	1242507	CallExpression	"smart_str_append_long ( & prefix , num )"		1242324	0					
ANR	1242508	Callee	smart_str_append_long		1242324	0					
ANR	1242509	Identifier	smart_str_append_long		1242324	0					
ANR	1242510	ArgumentList	& prefix		1242324	1					
ANR	1242511	Argument	& prefix		1242324	0					
ANR	1242512	UnaryOperationExpression	& prefix		1242324	0					
ANR	1242513	UnaryOperator	&		1242324	0					
ANR	1242514	Identifier	prefix		1242324	1					
ANR	1242515	Argument	num		1242324	1					
ANR	1242516	Identifier	num		1242324	0					
ANR	1242517	ExpressionStatement	smart_str_0 ( & prefix )	3535:4:112251:112271	1242324	2	True				
ANR	1242518	CallExpression	smart_str_0 ( & prefix )		1242324	0					
ANR	1242519	Callee	smart_str_0		1242324	0					
ANR	1242520	Identifier	smart_str_0		1242324	0					
ANR	1242521	ArgumentList	& prefix		1242324	1					
ANR	1242522	Argument	& prefix		1242324	0					
ANR	1242523	UnaryOperationExpression	& prefix		1242324	0					
ANR	1242524	UnaryOperator	&		1242324	0					
ANR	1242525	Identifier	prefix		1242324	1					
ANR	1242526	IfStatement	"if ( xmlSearchNs ( node -> doc , node , BAD_CAST ( prefix . c ) ) == NULL )"		1242324	3					
ANR	1242527	Condition	"xmlSearchNs ( node -> doc , node , BAD_CAST ( prefix . c ) ) == NULL"	3536:8:112281:112336	1242324	0	True				
ANR	1242528	EqualityExpression	"xmlSearchNs ( node -> doc , node , BAD_CAST ( prefix . c ) ) == NULL"		1242324	0		==			
ANR	1242529	CallExpression	"xmlSearchNs ( node -> doc , node , BAD_CAST ( prefix . c ) )"		1242324	0					
ANR	1242530	Callee	xmlSearchNs		1242324	0					
ANR	1242531	Identifier	xmlSearchNs		1242324	0					
ANR	1242532	ArgumentList	node -> doc		1242324	1					
ANR	1242533	Argument	node -> doc		1242324	0					
ANR	1242534	PtrMemberAccess	node -> doc		1242324	0					
ANR	1242535	Identifier	node		1242324	0					
ANR	1242536	Identifier	doc		1242324	1					
ANR	1242537	Argument	node		1242324	1					
ANR	1242538	Identifier	node		1242324	0					
ANR	1242539	Argument	BAD_CAST ( prefix . c )		1242324	2					
ANR	1242540	CallExpression	BAD_CAST ( prefix . c )		1242324	0					
ANR	1242541	Callee	BAD_CAST		1242324	0					
ANR	1242542	Identifier	BAD_CAST		1242324	0					
ANR	1242543	ArgumentList	prefix . c		1242324	1					
ANR	1242544	Argument	prefix . c		1242324	0					
ANR	1242545	MemberAccess	prefix . c		1242324	0					
ANR	1242546	Identifier	prefix		1242324	0					
ANR	1242547	Identifier	c		1242324	1					
ANR	1242548	Identifier	NULL		1242324	1					
ANR	1242549	CompoundStatement		26:66:736:736	1242324	1					
ANR	1242550	BreakStatement	break ;	3537:5:112346:112351	1242324	0	True				
ANR	1242551	ExpressionStatement	smart_str_free ( & prefix )	3539:4:112363:112386	1242324	4	True				
ANR	1242552	CallExpression	smart_str_free ( & prefix )		1242324	0					
ANR	1242553	Callee	smart_str_free		1242324	0					
ANR	1242554	Identifier	smart_str_free		1242324	0					
ANR	1242555	ArgumentList	& prefix		1242324	1					
ANR	1242556	Argument	& prefix		1242324	0					
ANR	1242557	UnaryOperationExpression	& prefix		1242324	0					
ANR	1242558	UnaryOperator	&		1242324	0					
ANR	1242559	Identifier	prefix		1242324	1					
ANR	1242560	ExpressionStatement	prefix . c = NULL	3540:4:112392:112407	1242324	5	True				
ANR	1242561	AssignmentExpression	prefix . c = NULL		1242324	0		=			
ANR	1242562	MemberAccess	prefix . c		1242324	0					
ANR	1242563	Identifier	prefix		1242324	0					
ANR	1242564	Identifier	c		1242324	1					
ANR	1242565	Identifier	NULL		1242324	1					
ANR	1242566	ExpressionStatement	prefix . len = 0	3541:4:112413:112427	1242324	6	True				
ANR	1242567	AssignmentExpression	prefix . len = 0		1242324	0		=			
ANR	1242568	MemberAccess	prefix . len		1242324	0					
ANR	1242569	Identifier	prefix		1242324	0					
ANR	1242570	Identifier	len		1242324	1					
ANR	1242571	PrimaryExpression	0		1242324	1					
ANR	1242572	ExpressionStatement	num = ++ SOAP_GLOBAL ( cur_uniq_ns )	3542:4:112433:112465	1242324	7	True				
ANR	1242573	AssignmentExpression	num = ++ SOAP_GLOBAL ( cur_uniq_ns )		1242324	0		=			
ANR	1242574	Identifier	num		1242324	0					
ANR	1242575	UnaryExpression	++ SOAP_GLOBAL ( cur_uniq_ns )		1242324	1					
ANR	1242576	IncDec	++		1242324	0					
ANR	1242577	CallExpression	SOAP_GLOBAL ( cur_uniq_ns )		1242324	1					
ANR	1242578	Callee	SOAP_GLOBAL		1242324	0					
ANR	1242579	Identifier	SOAP_GLOBAL		1242324	0					
ANR	1242580	ArgumentList	cur_uniq_ns		1242324	1					
ANR	1242581	Argument	cur_uniq_ns		1242324	0					
ANR	1242582	Identifier	cur_uniq_ns		1242324	0					
ANR	1242583	ExpressionStatement	"xmlns = xmlNewNs ( node -> doc -> children , BAD_CAST ( ns ) , BAD_CAST ( prefix . c ) )"	3545:3:112476:112547	1242324	3	True				
ANR	1242584	AssignmentExpression	"xmlns = xmlNewNs ( node -> doc -> children , BAD_CAST ( ns ) , BAD_CAST ( prefix . c ) )"		1242324	0		=			
ANR	1242585	Identifier	xmlns		1242324	0					
ANR	1242586	CallExpression	"xmlNewNs ( node -> doc -> children , BAD_CAST ( ns ) , BAD_CAST ( prefix . c ) )"		1242324	1					
ANR	1242587	Callee	xmlNewNs		1242324	0					
ANR	1242588	Identifier	xmlNewNs		1242324	0					
ANR	1242589	ArgumentList	node -> doc -> children		1242324	1					
ANR	1242590	Argument	node -> doc -> children		1242324	0					
ANR	1242591	PtrMemberAccess	node -> doc -> children		1242324	0					
ANR	1242592	PtrMemberAccess	node -> doc		1242324	0					
ANR	1242593	Identifier	node		1242324	0					
ANR	1242594	Identifier	doc		1242324	1					
ANR	1242595	Identifier	children		1242324	1					
ANR	1242596	Argument	BAD_CAST ( ns )		1242324	1					
ANR	1242597	CallExpression	BAD_CAST ( ns )		1242324	0					
ANR	1242598	Callee	BAD_CAST		1242324	0					
ANR	1242599	Identifier	BAD_CAST		1242324	0					
ANR	1242600	ArgumentList	ns		1242324	1					
ANR	1242601	Argument	ns		1242324	0					
ANR	1242602	Identifier	ns		1242324	0					
ANR	1242603	Argument	BAD_CAST ( prefix . c )		1242324	2					
ANR	1242604	CallExpression	BAD_CAST ( prefix . c )		1242324	0					
ANR	1242605	Callee	BAD_CAST		1242324	0					
ANR	1242606	Identifier	BAD_CAST		1242324	0					
ANR	1242607	ArgumentList	prefix . c		1242324	1					
ANR	1242608	Argument	prefix . c		1242324	0					
ANR	1242609	MemberAccess	prefix . c		1242324	0					
ANR	1242610	Identifier	prefix		1242324	0					
ANR	1242611	Identifier	c		1242324	1					
ANR	1242612	ExpressionStatement	smart_str_free ( & prefix )	3546:3:112552:112575	1242324	4	True				
ANR	1242613	CallExpression	smart_str_free ( & prefix )		1242324	0					
ANR	1242614	Callee	smart_str_free		1242324	0					
ANR	1242615	Identifier	smart_str_free		1242324	0					
ANR	1242616	ArgumentList	& prefix		1242324	1					
ANR	1242617	Argument	& prefix		1242324	0					
ANR	1242618	UnaryOperationExpression	& prefix		1242324	0					
ANR	1242619	UnaryOperator	&		1242324	0					
ANR	1242620	Identifier	prefix		1242324	1					
ANR	1242621	ReturnStatement	return xmlns ;	3549:1:112585:112597	1242324	5	True				
ANR	1242622	Identifier	xmlns		1242324	0					
ANR	1242623	ReturnType	xmlNsPtr		1242324	1					
ANR	1242624	Identifier	encode_add_ns		1242324	2					
ANR	1242625	ParameterList	"xmlNodePtr node , const char * ns"		1242324	3					
ANR	1242626	Parameter	xmlNodePtr node	3510:23:111569:111583	1242324	0	True				
ANR	1242627	ParameterType	xmlNodePtr		1242324	0					
ANR	1242628	Identifier	node		1242324	1					
ANR	1242629	Parameter	const char * ns	3510:40:111586:111599	1242324	1	True				
ANR	1242630	ParameterType	const char *		1242324	0					
ANR	1242631	Identifier	ns		1242324	1					
ANR	1242632	CFGEntryNode	ENTRY		1242324		True				
ANR	1242633	CFGExitNode	EXIT		1242324		True				
ANR	1242634	Symbol	& prefix		1242324						
ANR	1242635	Symbol	ns		1242324						
ANR	1242636	Symbol	prefix		1242324						
ANR	1242637	Symbol	num		1242324						
ANR	1242638	Symbol	* xmlns		1242324						
ANR	1242639	Symbol	strlen		1242324						
ANR	1242640	Symbol	zend_hash_find		1242324						
ANR	1242641	Symbol	xmlns		1242324						
ANR	1242642	Symbol	* node		1242324						
ANR	1242643	Symbol	* node -> doc		1242324						
ANR	1242644	Symbol	node -> doc		1242324						
ANR	1242645	Symbol	prefix . len		1242324						
ANR	1242646	Symbol	NULL		1242324						
ANR	1242647	Symbol	xmlSearchNsPrefixByHref		1242324						
ANR	1242648	Symbol	defEncNs		1242324						
ANR	1242649	Symbol	SUCCESS		1242324						
ANR	1242650	Symbol	xmlns -> prefix		1242324						
ANR	1242651	Symbol	prefix . c		1242324						
ANR	1242652	Symbol	SOAP_GLOBAL		1242324						
ANR	1242653	Symbol	xmlSearchNs		1242324						
ANR	1242654	Symbol	node		1242324						
ANR	1242655	Symbol	cur_uniq_ns		1242324						
ANR	1242656	Symbol	xmlSearchNsByHref		1242324						
ANR	1242657	Symbol	* * node		1242324						
ANR	1242658	Symbol	xmlNewNs		1242324						
ANR	1242659	Symbol	& SOAP_GLOBAL		1242324						
ANR	1242660	Symbol	BAD_CAST		1242324						
ANR	1242661	Symbol	node -> doc -> children		1242324						
ANR	1242662	Function	set_ns_prop	3552:0:112602:112755							
ANR	1242663	FunctionDef	"set_ns_prop (xmlNodePtr node , char * ns , char * name , char * val)"		1242662	0					
ANR	1242664	CompoundStatement		3553:0:112676:112755	1242662	0					
ANR	1242665	ExpressionStatement	"xmlSetNsProp ( node , encode_add_ns ( node , ns ) , BAD_CAST ( name ) , BAD_CAST ( val ) )"	3554:1:112679:112753	1242662	0	True				
ANR	1242666	CallExpression	"xmlSetNsProp ( node , encode_add_ns ( node , ns ) , BAD_CAST ( name ) , BAD_CAST ( val ) )"		1242662	0					
ANR	1242667	Callee	xmlSetNsProp		1242662	0					
ANR	1242668	Identifier	xmlSetNsProp		1242662	0					
ANR	1242669	ArgumentList	node		1242662	1					
ANR	1242670	Argument	node		1242662	0					
ANR	1242671	Identifier	node		1242662	0					
ANR	1242672	Argument	"encode_add_ns ( node , ns )"		1242662	1					
ANR	1242673	CallExpression	"encode_add_ns ( node , ns )"		1242662	0					
ANR	1242674	Callee	encode_add_ns		1242662	0					
ANR	1242675	Identifier	encode_add_ns		1242662	0					
ANR	1242676	ArgumentList	node		1242662	1					
ANR	1242677	Argument	node		1242662	0					
ANR	1242678	Identifier	node		1242662	0					
ANR	1242679	Argument	ns		1242662	1					
ANR	1242680	Identifier	ns		1242662	0					
ANR	1242681	Argument	BAD_CAST ( name )		1242662	2					
ANR	1242682	CallExpression	BAD_CAST ( name )		1242662	0					
ANR	1242683	Callee	BAD_CAST		1242662	0					
ANR	1242684	Identifier	BAD_CAST		1242662	0					
ANR	1242685	ArgumentList	name		1242662	1					
ANR	1242686	Argument	name		1242662	0					
ANR	1242687	Identifier	name		1242662	0					
ANR	1242688	Argument	BAD_CAST ( val )		1242662	3					
ANR	1242689	CallExpression	BAD_CAST ( val )		1242662	0					
ANR	1242690	Callee	BAD_CAST		1242662	0					
ANR	1242691	Identifier	BAD_CAST		1242662	0					
ANR	1242692	ArgumentList	val		1242662	1					
ANR	1242693	Argument	val		1242662	0					
ANR	1242694	Identifier	val		1242662	0					
ANR	1242695	ReturnType	static void		1242662	1					
ANR	1242696	Identifier	set_ns_prop		1242662	2					
ANR	1242697	ParameterList	"xmlNodePtr node , char * ns , char * name , char * val"		1242662	3					
ANR	1242698	Parameter	xmlNodePtr node	3552:24:112626:112640	1242662	0	True				
ANR	1242699	ParameterType	xmlNodePtr		1242662	0					
ANR	1242700	Identifier	node		1242662	1					
ANR	1242701	Parameter	char * ns	3552:41:112643:112650	1242662	1	True				
ANR	1242702	ParameterType	char *		1242662	0					
ANR	1242703	Identifier	ns		1242662	1					
ANR	1242704	Parameter	char * name	3552:51:112653:112662	1242662	2	True				
ANR	1242705	ParameterType	char *		1242662	0					
ANR	1242706	Identifier	name		1242662	1					
ANR	1242707	Parameter	char * val	3552:63:112665:112673	1242662	3	True				
ANR	1242708	ParameterType	char *		1242662	0					
ANR	1242709	Identifier	val		1242662	1					
ANR	1242710	CFGEntryNode	ENTRY		1242662		True				
ANR	1242711	CFGExitNode	EXIT		1242662		True				
ANR	1242712	Symbol	val		1242662						
ANR	1242713	Symbol	node		1242662						
ANR	1242714	Symbol	encode_add_ns		1242662						
ANR	1242715	Symbol	ns		1242662						
ANR	1242716	Symbol	name		1242662						
ANR	1242717	Symbol	BAD_CAST		1242662						
ANR	1242718	Function	set_xsi_nil	3557:0:112758:112851							
ANR	1242719	FunctionDef	set_xsi_nil (xmlNodePtr node)		1242718	0					
ANR	1242720	CompoundStatement		3558:0:112799:112851	1242718	0					
ANR	1242721	ExpressionStatement	"set_ns_prop ( node , XSI_NAMESPACE , ""nil"" , ""true"" )"	3559:1:112802:112849	1242718	0	True				
ANR	1242722	CallExpression	"set_ns_prop ( node , XSI_NAMESPACE , ""nil"" , ""true"" )"		1242718	0					
ANR	1242723	Callee	set_ns_prop		1242718	0					
ANR	1242724	Identifier	set_ns_prop		1242718	0					
ANR	1242725	ArgumentList	node		1242718	1					
ANR	1242726	Argument	node		1242718	0					
ANR	1242727	Identifier	node		1242718	0					
ANR	1242728	Argument	XSI_NAMESPACE		1242718	1					
ANR	1242729	Identifier	XSI_NAMESPACE		1242718	0					
ANR	1242730	Argument	"""nil"""		1242718	2					
ANR	1242731	PrimaryExpression	"""nil"""		1242718	0					
ANR	1242732	Argument	"""true"""		1242718	3					
ANR	1242733	PrimaryExpression	"""true"""		1242718	0					
ANR	1242734	ReturnType	static void		1242718	1					
ANR	1242735	Identifier	set_xsi_nil		1242718	2					
ANR	1242736	ParameterList	xmlNodePtr node		1242718	3					
ANR	1242737	Parameter	xmlNodePtr node	3557:24:112782:112796	1242718	0	True				
ANR	1242738	ParameterType	xmlNodePtr		1242718	0					
ANR	1242739	Identifier	node		1242718	1					
ANR	1242740	CFGEntryNode	ENTRY		1242718		True				
ANR	1242741	CFGExitNode	EXIT		1242718		True				
ANR	1242742	Symbol	node		1242718						
ANR	1242743	Symbol	XSI_NAMESPACE		1242718						
ANR	1242744	Function	set_xsi_type	3562:0:112854:112959							
ANR	1242745	FunctionDef	"set_xsi_type (xmlNodePtr node , char * type)"		1242744	0					
ANR	1242746	CompoundStatement		3563:0:112908:112959	1242744	0					
ANR	1242747	ExpressionStatement	"set_ns_prop ( node , XSI_NAMESPACE , ""type"" , type )"	3564:1:112911:112957	1242744	0	True				
ANR	1242748	CallExpression	"set_ns_prop ( node , XSI_NAMESPACE , ""type"" , type )"		1242744	0					
ANR	1242749	Callee	set_ns_prop		1242744	0					
ANR	1242750	Identifier	set_ns_prop		1242744	0					
ANR	1242751	ArgumentList	node		1242744	1					
ANR	1242752	Argument	node		1242744	0					
ANR	1242753	Identifier	node		1242744	0					
ANR	1242754	Argument	XSI_NAMESPACE		1242744	1					
ANR	1242755	Identifier	XSI_NAMESPACE		1242744	0					
ANR	1242756	Argument	"""type"""		1242744	2					
ANR	1242757	PrimaryExpression	"""type"""		1242744	0					
ANR	1242758	Argument	type		1242744	3					
ANR	1242759	Identifier	type		1242744	0					
ANR	1242760	ReturnType	static void		1242744	1					
ANR	1242761	Identifier	set_xsi_type		1242744	2					
ANR	1242762	ParameterList	"xmlNodePtr node , char * type"		1242744	3					
ANR	1242763	Parameter	xmlNodePtr node	3562:25:112879:112893	1242744	0	True				
ANR	1242764	ParameterType	xmlNodePtr		1242744	0					
ANR	1242765	Identifier	node		1242744	1					
ANR	1242766	Parameter	char * type	3562:42:112896:112905	1242744	1	True				
ANR	1242767	ParameterType	char *		1242744	0					
ANR	1242768	Identifier	type		1242744	1					
ANR	1242769	CFGEntryNode	ENTRY		1242744		True				
ANR	1242770	CFGExitNode	EXIT		1242744		True				
ANR	1242771	Symbol	node		1242744						
ANR	1242772	Symbol	type		1242744						
ANR	1242773	Symbol	XSI_NAMESPACE		1242744						
ANR	1242774	Function	encode_reset_ns	3567:0:112962:113262							
ANR	1242775	FunctionDef	encode_reset_ns ()		1242774	0					
ANR	1242776	CompoundStatement		3568:0:112985:113262	1242774	0					
ANR	1242777	ExpressionStatement	TSRMLS_FETCH ( )	3569:1:112988:113002	1242774	0	True				
ANR	1242778	CallExpression	TSRMLS_FETCH ( )		1242774	0					
ANR	1242779	Callee	TSRMLS_FETCH		1242774	0					
ANR	1242780	Identifier	TSRMLS_FETCH		1242774	0					
ANR	1242781	ArgumentList			1242774	1					
ANR	1242782	ExpressionStatement	SOAP_GLOBAL ( cur_uniq_ns ) = 0	3570:1:113005:113033	1242774	1	True				
ANR	1242783	AssignmentExpression	SOAP_GLOBAL ( cur_uniq_ns ) = 0		1242774	0		=			
ANR	1242784	CallExpression	SOAP_GLOBAL ( cur_uniq_ns )		1242774	0					
ANR	1242785	Callee	SOAP_GLOBAL		1242774	0					
ANR	1242786	Identifier	SOAP_GLOBAL		1242774	0					
ANR	1242787	ArgumentList	cur_uniq_ns		1242774	1					
ANR	1242788	Argument	cur_uniq_ns		1242774	0					
ANR	1242789	Identifier	cur_uniq_ns		1242774	0					
ANR	1242790	PrimaryExpression	0		1242774	1					
ANR	1242791	ExpressionStatement	SOAP_GLOBAL ( cur_uniq_ref ) = 0	3571:1:113036:113065	1242774	2	True				
ANR	1242792	AssignmentExpression	SOAP_GLOBAL ( cur_uniq_ref ) = 0		1242774	0		=			
ANR	1242793	CallExpression	SOAP_GLOBAL ( cur_uniq_ref )		1242774	0					
ANR	1242794	Callee	SOAP_GLOBAL		1242774	0					
ANR	1242795	Identifier	SOAP_GLOBAL		1242774	0					
ANR	1242796	ArgumentList	cur_uniq_ref		1242774	1					
ANR	1242797	Argument	cur_uniq_ref		1242774	0					
ANR	1242798	Identifier	cur_uniq_ref		1242774	0					
ANR	1242799	PrimaryExpression	0		1242774	1					
ANR	1242800	IfStatement	if ( SOAP_GLOBAL ( ref_map ) )		1242774	3					
ANR	1242801	Condition	SOAP_GLOBAL ( ref_map )	3572:5:113072:113091	1242774	0	True				
ANR	1242802	CallExpression	SOAP_GLOBAL ( ref_map )		1242774	0					
ANR	1242803	Callee	SOAP_GLOBAL		1242774	0					
ANR	1242804	Identifier	SOAP_GLOBAL		1242774	0					
ANR	1242805	ArgumentList	ref_map		1242774	1					
ANR	1242806	Argument	ref_map		1242774	0					
ANR	1242807	Identifier	ref_map		1242774	0					
ANR	1242808	CompoundStatement		5:27:108:108	1242774	1					
ANR	1242809	ExpressionStatement	zend_hash_destroy ( SOAP_GLOBAL ( ref_map ) )	3573:2:113098:113137	1242774	0	True				
ANR	1242810	CallExpression	zend_hash_destroy ( SOAP_GLOBAL ( ref_map ) )		1242774	0					
ANR	1242811	Callee	zend_hash_destroy		1242774	0					
ANR	1242812	Identifier	zend_hash_destroy		1242774	0					
ANR	1242813	ArgumentList	SOAP_GLOBAL ( ref_map )		1242774	1					
ANR	1242814	Argument	SOAP_GLOBAL ( ref_map )		1242774	0					
ANR	1242815	CallExpression	SOAP_GLOBAL ( ref_map )		1242774	0					
ANR	1242816	Callee	SOAP_GLOBAL		1242774	0					
ANR	1242817	Identifier	SOAP_GLOBAL		1242774	0					
ANR	1242818	ArgumentList	ref_map		1242774	1					
ANR	1242819	Argument	ref_map		1242774	0					
ANR	1242820	Identifier	ref_map		1242774	0					
ANR	1242821	ElseStatement	else		1242774	0					
ANR	1242822	CompoundStatement		7:8:161:161	1242774	0					
ANR	1242823	ExpressionStatement	SOAP_GLOBAL ( ref_map ) = emalloc ( sizeof ( HashTable ) )	3575:2:113151:113200	1242774	0	True				
ANR	1242824	AssignmentExpression	SOAP_GLOBAL ( ref_map ) = emalloc ( sizeof ( HashTable ) )		1242774	0		=			
ANR	1242825	CallExpression	SOAP_GLOBAL ( ref_map )		1242774	0					
ANR	1242826	Callee	SOAP_GLOBAL		1242774	0					
ANR	1242827	Identifier	SOAP_GLOBAL		1242774	0					
ANR	1242828	ArgumentList	ref_map		1242774	1					
ANR	1242829	Argument	ref_map		1242774	0					
ANR	1242830	Identifier	ref_map		1242774	0					
ANR	1242831	CallExpression	emalloc ( sizeof ( HashTable ) )		1242774	1					
ANR	1242832	Callee	emalloc		1242774	0					
ANR	1242833	Identifier	emalloc		1242774	0					
ANR	1242834	ArgumentList	sizeof ( HashTable )		1242774	1					
ANR	1242835	Argument	sizeof ( HashTable )		1242774	0					
ANR	1242836	SizeofExpression	sizeof ( HashTable )		1242774	0					
ANR	1242837	Sizeof	sizeof		1242774	0					
ANR	1242838	SizeofOperand	HashTable		1242774	1					
ANR	1242839	ExpressionStatement	"zend_hash_init ( SOAP_GLOBAL ( ref_map ) , 0 , NULL , NULL , 0 )"	3577:1:113206:113260	1242774	4	True				
ANR	1242840	CallExpression	"zend_hash_init ( SOAP_GLOBAL ( ref_map ) , 0 , NULL , NULL , 0 )"		1242774	0					
ANR	1242841	Callee	zend_hash_init		1242774	0					
ANR	1242842	Identifier	zend_hash_init		1242774	0					
ANR	1242843	ArgumentList	SOAP_GLOBAL ( ref_map )		1242774	1					
ANR	1242844	Argument	SOAP_GLOBAL ( ref_map )		1242774	0					
ANR	1242845	CallExpression	SOAP_GLOBAL ( ref_map )		1242774	0					
ANR	1242846	Callee	SOAP_GLOBAL		1242774	0					
ANR	1242847	Identifier	SOAP_GLOBAL		1242774	0					
ANR	1242848	ArgumentList	ref_map		1242774	1					
ANR	1242849	Argument	ref_map		1242774	0					
ANR	1242850	Identifier	ref_map		1242774	0					
ANR	1242851	Argument	0		1242774	1					
ANR	1242852	PrimaryExpression	0		1242774	0					
ANR	1242853	Argument	NULL		1242774	2					
ANR	1242854	Identifier	NULL		1242774	0					
ANR	1242855	Argument	NULL		1242774	3					
ANR	1242856	Identifier	NULL		1242774	0					
ANR	1242857	Argument	0		1242774	4					
ANR	1242858	PrimaryExpression	0		1242774	0					
ANR	1242859	ReturnType	void		1242774	1					
ANR	1242860	Identifier	encode_reset_ns		1242774	2					
ANR	1242861	ParameterList			1242774	3					
ANR	1242862	CFGEntryNode	ENTRY		1242774		True				
ANR	1242863	CFGExitNode	EXIT		1242774		True				
ANR	1242864	Symbol	cur_uniq_ns		1242774						
ANR	1242865	Symbol	emalloc		1242774						
ANR	1242866	Symbol	NULL		1242774						
ANR	1242867	Symbol	ref_map		1242774						
ANR	1242868	Symbol	SOAP_GLOBAL		1242774						
ANR	1242869	Symbol	cur_uniq_ref		1242774						
ANR	1242870	Function	encode_finish	3580:0:113265:113505							
ANR	1242871	FunctionDef	encode_finish ()		1242870	0					
ANR	1242872	CompoundStatement		3581:0:113286:113505	1242870	0					
ANR	1242873	ExpressionStatement	TSRMLS_FETCH ( )	3582:1:113289:113303	1242870	0	True				
ANR	1242874	CallExpression	TSRMLS_FETCH ( )		1242870	0					
ANR	1242875	Callee	TSRMLS_FETCH		1242870	0					
ANR	1242876	Identifier	TSRMLS_FETCH		1242870	0					
ANR	1242877	ArgumentList			1242870	1					
ANR	1242878	ExpressionStatement	SOAP_GLOBAL ( cur_uniq_ns ) = 0	3583:1:113306:113334	1242870	1	True				
ANR	1242879	AssignmentExpression	SOAP_GLOBAL ( cur_uniq_ns ) = 0		1242870	0		=			
ANR	1242880	CallExpression	SOAP_GLOBAL ( cur_uniq_ns )		1242870	0					
ANR	1242881	Callee	SOAP_GLOBAL		1242870	0					
ANR	1242882	Identifier	SOAP_GLOBAL		1242870	0					
ANR	1242883	ArgumentList	cur_uniq_ns		1242870	1					
ANR	1242884	Argument	cur_uniq_ns		1242870	0					
ANR	1242885	Identifier	cur_uniq_ns		1242870	0					
ANR	1242886	PrimaryExpression	0		1242870	1					
ANR	1242887	ExpressionStatement	SOAP_GLOBAL ( cur_uniq_ref ) = 0	3584:1:113337:113366	1242870	2	True				
ANR	1242888	AssignmentExpression	SOAP_GLOBAL ( cur_uniq_ref ) = 0		1242870	0		=			
ANR	1242889	CallExpression	SOAP_GLOBAL ( cur_uniq_ref )		1242870	0					
ANR	1242890	Callee	SOAP_GLOBAL		1242870	0					
ANR	1242891	Identifier	SOAP_GLOBAL		1242870	0					
ANR	1242892	ArgumentList	cur_uniq_ref		1242870	1					
ANR	1242893	Argument	cur_uniq_ref		1242870	0					
ANR	1242894	Identifier	cur_uniq_ref		1242870	0					
ANR	1242895	PrimaryExpression	0		1242870	1					
ANR	1242896	IfStatement	if ( SOAP_GLOBAL ( ref_map ) )		1242870	3					
ANR	1242897	Condition	SOAP_GLOBAL ( ref_map )	3585:5:113373:113392	1242870	0	True				
ANR	1242898	CallExpression	SOAP_GLOBAL ( ref_map )		1242870	0					
ANR	1242899	Callee	SOAP_GLOBAL		1242870	0					
ANR	1242900	Identifier	SOAP_GLOBAL		1242870	0					
ANR	1242901	ArgumentList	ref_map		1242870	1					
ANR	1242902	Argument	ref_map		1242870	0					
ANR	1242903	Identifier	ref_map		1242870	0					
ANR	1242904	CompoundStatement		5:27:108:108	1242870	1					
ANR	1242905	ExpressionStatement	zend_hash_destroy ( SOAP_GLOBAL ( ref_map ) )	3586:2:113399:113438	1242870	0	True				
ANR	1242906	CallExpression	zend_hash_destroy ( SOAP_GLOBAL ( ref_map ) )		1242870	0					
ANR	1242907	Callee	zend_hash_destroy		1242870	0					
ANR	1242908	Identifier	zend_hash_destroy		1242870	0					
ANR	1242909	ArgumentList	SOAP_GLOBAL ( ref_map )		1242870	1					
ANR	1242910	Argument	SOAP_GLOBAL ( ref_map )		1242870	0					
ANR	1242911	CallExpression	SOAP_GLOBAL ( ref_map )		1242870	0					
ANR	1242912	Callee	SOAP_GLOBAL		1242870	0					
ANR	1242913	Identifier	SOAP_GLOBAL		1242870	0					
ANR	1242914	ArgumentList	ref_map		1242870	1					
ANR	1242915	Argument	ref_map		1242870	0					
ANR	1242916	Identifier	ref_map		1242870	0					
ANR	1242917	ExpressionStatement	efree ( SOAP_GLOBAL ( ref_map ) )	3587:2:113442:113469	1242870	1	True				
ANR	1242918	CallExpression	efree ( SOAP_GLOBAL ( ref_map ) )		1242870	0					
ANR	1242919	Callee	efree		1242870	0					
ANR	1242920	Identifier	efree		1242870	0					
ANR	1242921	ArgumentList	SOAP_GLOBAL ( ref_map )		1242870	1					
ANR	1242922	Argument	SOAP_GLOBAL ( ref_map )		1242870	0					
ANR	1242923	CallExpression	SOAP_GLOBAL ( ref_map )		1242870	0					
ANR	1242924	Callee	SOAP_GLOBAL		1242870	0					
ANR	1242925	Identifier	SOAP_GLOBAL		1242870	0					
ANR	1242926	ArgumentList	ref_map		1242870	1					
ANR	1242927	Argument	ref_map		1242870	0					
ANR	1242928	Identifier	ref_map		1242870	0					
ANR	1242929	ExpressionStatement	SOAP_GLOBAL ( ref_map ) = NULL	3588:2:113473:113500	1242870	2	True				
ANR	1242930	AssignmentExpression	SOAP_GLOBAL ( ref_map ) = NULL		1242870	0		=			
ANR	1242931	CallExpression	SOAP_GLOBAL ( ref_map )		1242870	0					
ANR	1242932	Callee	SOAP_GLOBAL		1242870	0					
ANR	1242933	Identifier	SOAP_GLOBAL		1242870	0					
ANR	1242934	ArgumentList	ref_map		1242870	1					
ANR	1242935	Argument	ref_map		1242870	0					
ANR	1242936	Identifier	ref_map		1242870	0					
ANR	1242937	Identifier	NULL		1242870	1					
ANR	1242938	ReturnType	void		1242870	1					
ANR	1242939	Identifier	encode_finish		1242870	2					
ANR	1242940	ParameterList			1242870	3					
ANR	1242941	CFGEntryNode	ENTRY		1242870		True				
ANR	1242942	CFGExitNode	EXIT		1242870		True				
ANR	1242943	Symbol	cur_uniq_ns		1242870						
ANR	1242944	Symbol	NULL		1242870						
ANR	1242945	Symbol	ref_map		1242870						
ANR	1242946	Symbol	SOAP_GLOBAL		1242870						
ANR	1242947	Symbol	cur_uniq_ref		1242870						
ANR	1242948	Function	get_conversion	3592:0:113508:113781							
ANR	1242949	FunctionDef	get_conversion (int encode)		1242948	0					
ANR	1242950	CompoundStatement		3593:0:113545:113781	1242948	0					
ANR	1242951	IdentifierDeclStatement	encodePtr * enc = NULL ;	3594:1:113548:113569	1242948	0	True				
ANR	1242952	IdentifierDecl	* enc = NULL		1242948	0					
ANR	1242953	IdentifierDeclType	encodePtr *		1242948	0					
ANR	1242954	Identifier	enc		1242948	1					
ANR	1242955	AssignmentExpression	* enc = NULL		1242948	2		=			
ANR	1242956	Identifier	NULL		1242948	0					
ANR	1242957	Identifier	NULL		1242948	1					
ANR	1242958	ExpressionStatement	TSRMLS_FETCH ( )	3595:1:113572:113586	1242948	1	True				
ANR	1242959	CallExpression	TSRMLS_FETCH ( )		1242948	0					
ANR	1242960	Callee	TSRMLS_FETCH		1242948	0					
ANR	1242961	Identifier	TSRMLS_FETCH		1242948	0					
ANR	1242962	ArgumentList			1242948	1					
ANR	1242963	IfStatement	"if ( zend_hash_index_find ( & SOAP_GLOBAL ( defEncIndex ) , encode , ( void * * ) & enc ) == FAILURE )"		1242948	2					
ANR	1242964	Condition	"zend_hash_index_find ( & SOAP_GLOBAL ( defEncIndex ) , encode , ( void * * ) & enc ) == FAILURE"	3597:5:113594:113674	1242948	0	True				
ANR	1242965	EqualityExpression	"zend_hash_index_find ( & SOAP_GLOBAL ( defEncIndex ) , encode , ( void * * ) & enc ) == FAILURE"		1242948	0		==			
ANR	1242966	CallExpression	"zend_hash_index_find ( & SOAP_GLOBAL ( defEncIndex ) , encode , ( void * * ) & enc )"		1242948	0					
ANR	1242967	Callee	zend_hash_index_find		1242948	0					
ANR	1242968	Identifier	zend_hash_index_find		1242948	0					
ANR	1242969	ArgumentList	& SOAP_GLOBAL ( defEncIndex )		1242948	1					
ANR	1242970	Argument	& SOAP_GLOBAL ( defEncIndex )		1242948	0					
ANR	1242971	UnaryOperationExpression	& SOAP_GLOBAL ( defEncIndex )		1242948	0					
ANR	1242972	UnaryOperator	&		1242948	0					
ANR	1242973	CallExpression	SOAP_GLOBAL ( defEncIndex )		1242948	1					
ANR	1242974	Callee	SOAP_GLOBAL		1242948	0					
ANR	1242975	Identifier	SOAP_GLOBAL		1242948	0					
ANR	1242976	ArgumentList	defEncIndex		1242948	1					
ANR	1242977	Argument	defEncIndex		1242948	0					
ANR	1242978	Identifier	defEncIndex		1242948	0					
ANR	1242979	Argument	encode		1242948	1					
ANR	1242980	Identifier	encode		1242948	0					
ANR	1242981	Argument	( void * * ) & enc		1242948	2					
ANR	1242982	CastExpression	( void * * ) & enc		1242948	0					
ANR	1242983	CastTarget	void * *		1242948	0					
ANR	1242984	UnaryOperationExpression	& enc		1242948	1					
ANR	1242985	UnaryOperator	&		1242948	0					
ANR	1242986	Identifier	enc		1242948	1					
ANR	1242987	Identifier	FAILURE		1242948	1					
ANR	1242988	CompoundStatement		5:88:131:131	1242948	1					
ANR	1242989	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Cannot find encoding"" )"	3598:2:113681:113736	1242948	0	True				
ANR	1242990	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Cannot find encoding"" )"		1242948	0					
ANR	1242991	Callee	soap_error0		1242948	0					
ANR	1242992	Identifier	soap_error0		1242948	0					
ANR	1242993	ArgumentList	E_ERROR		1242948	1					
ANR	1242994	Argument	E_ERROR		1242948	0					
ANR	1242995	Identifier	E_ERROR		1242948	0					
ANR	1242996	Argument	"""Encoding: Cannot find encoding"""		1242948	1					
ANR	1242997	PrimaryExpression	"""Encoding: Cannot find encoding"""		1242948	0					
ANR	1242998	ReturnStatement	return NULL ;	3599:2:113740:113751	1242948	1	True				
ANR	1242999	Identifier	NULL		1242948	0					
ANR	1243000	ElseStatement	else		1242948	0					
ANR	1243001	CompoundStatement		8:8:215:215	1242948	0					
ANR	1243002	ReturnStatement	return * enc ;	3601:2:113765:113776	1242948	0	True				
ANR	1243003	UnaryOperationExpression	* enc		1242948	0					
ANR	1243004	UnaryOperator	*		1242948	0					
ANR	1243005	Identifier	enc		1242948	1					
ANR	1243006	ReturnType	encodePtr		1242948	1					
ANR	1243007	Identifier	get_conversion		1242948	2					
ANR	1243008	ParameterList	int encode		1242948	3					
ANR	1243009	Parameter	int encode	3592:25:113533:113542	1242948	0	True				
ANR	1243010	ParameterType	int		1242948	0					
ANR	1243011	Identifier	encode		1242948	1					
ANR	1243012	CFGEntryNode	ENTRY		1242948		True				
ANR	1243013	CFGExitNode	EXIT		1242948		True				
ANR	1243014	Symbol	encode		1242948						
ANR	1243015	Symbol	zend_hash_index_find		1242948						
ANR	1243016	Symbol	NULL		1242948						
ANR	1243017	Symbol	E_ERROR		1242948						
ANR	1243018	Symbol	defEncIndex		1242948						
ANR	1243019	Symbol	& enc		1242948						
ANR	1243020	Symbol	enc		1242948						
ANR	1243021	Symbol	* enc		1242948						
ANR	1243022	Symbol	& SOAP_GLOBAL		1242948						
ANR	1243023	Symbol	FAILURE		1242948						
ANR	1243024	Function	is_map	3605:0:113784:114211							
ANR	1243025	FunctionDef	is_map (zval * array)		1243024	0					
ANR	1243026	CompoundStatement		3606:0:113815:114211	1243024	0					
ANR	1243027	IdentifierDeclStatement	"int i , count = zend_hash_num_elements ( Z_ARRVAL_P ( array ) ) ;"	3607:1:113818:113874	1243024	0	True				
ANR	1243028	IdentifierDecl	i		1243024	0					
ANR	1243029	IdentifierDeclType	int		1243024	0					
ANR	1243030	Identifier	i		1243024	1					
ANR	1243031	IdentifierDecl	count = zend_hash_num_elements ( Z_ARRVAL_P ( array ) )		1243024	1					
ANR	1243032	IdentifierDeclType	int		1243024	0					
ANR	1243033	Identifier	count		1243024	1					
ANR	1243034	AssignmentExpression	count = zend_hash_num_elements ( Z_ARRVAL_P ( array ) )		1243024	2		=			
ANR	1243035	Identifier	count		1243024	0					
ANR	1243036	CallExpression	zend_hash_num_elements ( Z_ARRVAL_P ( array ) )		1243024	1					
ANR	1243037	Callee	zend_hash_num_elements		1243024	0					
ANR	1243038	Identifier	zend_hash_num_elements		1243024	0					
ANR	1243039	ArgumentList	Z_ARRVAL_P ( array )		1243024	1					
ANR	1243040	Argument	Z_ARRVAL_P ( array )		1243024	0					
ANR	1243041	CallExpression	Z_ARRVAL_P ( array )		1243024	0					
ANR	1243042	Callee	Z_ARRVAL_P		1243024	0					
ANR	1243043	Identifier	Z_ARRVAL_P		1243024	0					
ANR	1243044	ArgumentList	array		1243024	1					
ANR	1243045	Argument	array		1243024	0					
ANR	1243046	Identifier	array		1243024	0					
ANR	1243047	ExpressionStatement	zend_hash_internal_pointer_reset ( Z_ARRVAL_P ( array ) )	3609:1:113878:113929	1243024	1	True				
ANR	1243048	CallExpression	zend_hash_internal_pointer_reset ( Z_ARRVAL_P ( array ) )		1243024	0					
ANR	1243049	Callee	zend_hash_internal_pointer_reset		1243024	0					
ANR	1243050	Identifier	zend_hash_internal_pointer_reset		1243024	0					
ANR	1243051	ArgumentList	Z_ARRVAL_P ( array )		1243024	1					
ANR	1243052	Argument	Z_ARRVAL_P ( array )		1243024	0					
ANR	1243053	CallExpression	Z_ARRVAL_P ( array )		1243024	0					
ANR	1243054	Callee	Z_ARRVAL_P		1243024	0					
ANR	1243055	Identifier	Z_ARRVAL_P		1243024	0					
ANR	1243056	ArgumentList	array		1243024	1					
ANR	1243057	Argument	array		1243024	0					
ANR	1243058	Identifier	array		1243024	0					
ANR	1243059	ForStatement	for ( i = 0 ; i < count ; i ++ )		1243024	2					
ANR	1243060	ForInit	i = 0 ;	3610:6:113937:113942	1243024	0	True				
ANR	1243061	AssignmentExpression	i = 0		1243024	0		=			
ANR	1243062	Identifier	i		1243024	0					
ANR	1243063	PrimaryExpression	0		1243024	1					
ANR	1243064	Condition	i < count	3610:13:113944:113952	1243024	1	True				
ANR	1243065	RelationalExpression	i < count		1243024	0		<			
ANR	1243066	Identifier	i		1243024	0					
ANR	1243067	Identifier	count		1243024	1					
ANR	1243068	PostIncDecOperationExpression	i ++	3610:24:113955:113957	1243024	2	True				
ANR	1243069	Identifier	i		1243024	0					
ANR	1243070	IncDec	++		1243024	1					
ANR	1243071	CompoundStatement		7:2:167:182	1243024	3					
ANR	1243072	IdentifierDeclStatement	char * str_index ;	3611:2:113964:113979	1243024	0	True				
ANR	1243073	IdentifierDecl	* str_index		1243024	0					
ANR	1243074	IdentifierDeclType	char *		1243024	0					
ANR	1243075	Identifier	str_index		1243024	1					
ANR	1243076	IdentifierDeclStatement	ulong num_index ;	3612:2:113983:113998	1243024	1	True				
ANR	1243077	IdentifierDecl	num_index		1243024	0					
ANR	1243078	IdentifierDeclType	ulong		1243024	0					
ANR	1243079	Identifier	num_index		1243024	1					
ANR	1243080	IfStatement	"if ( zend_hash_get_current_key ( Z_ARRVAL_P ( array ) , & str_index , & num_index , 0 ) == HASH_KEY_IS_STRING || num_index != i )"		1243024	2					
ANR	1243081	Condition	"zend_hash_get_current_key ( Z_ARRVAL_P ( array ) , & str_index , & num_index , 0 ) == HASH_KEY_IS_STRING || num_index != i"	3614:6:114007:114123	1243024	0	True				
ANR	1243082	OrExpression	"zend_hash_get_current_key ( Z_ARRVAL_P ( array ) , & str_index , & num_index , 0 ) == HASH_KEY_IS_STRING || num_index != i"		1243024	0		||			
ANR	1243083	EqualityExpression	"zend_hash_get_current_key ( Z_ARRVAL_P ( array ) , & str_index , & num_index , 0 ) == HASH_KEY_IS_STRING"		1243024	0		==			
ANR	1243084	CallExpression	"zend_hash_get_current_key ( Z_ARRVAL_P ( array ) , & str_index , & num_index , 0 )"		1243024	0					
ANR	1243085	Callee	zend_hash_get_current_key		1243024	0					
ANR	1243086	Identifier	zend_hash_get_current_key		1243024	0					
ANR	1243087	ArgumentList	Z_ARRVAL_P ( array )		1243024	1					
ANR	1243088	Argument	Z_ARRVAL_P ( array )		1243024	0					
ANR	1243089	CallExpression	Z_ARRVAL_P ( array )		1243024	0					
ANR	1243090	Callee	Z_ARRVAL_P		1243024	0					
ANR	1243091	Identifier	Z_ARRVAL_P		1243024	0					
ANR	1243092	ArgumentList	array		1243024	1					
ANR	1243093	Argument	array		1243024	0					
ANR	1243094	Identifier	array		1243024	0					
ANR	1243095	Argument	& str_index		1243024	1					
ANR	1243096	UnaryOperationExpression	& str_index		1243024	0					
ANR	1243097	UnaryOperator	&		1243024	0					
ANR	1243098	Identifier	str_index		1243024	1					
ANR	1243099	Argument	& num_index		1243024	2					
ANR	1243100	UnaryOperationExpression	& num_index		1243024	0					
ANR	1243101	UnaryOperator	&		1243024	0					
ANR	1243102	Identifier	num_index		1243024	1					
ANR	1243103	Argument	0		1243024	3					
ANR	1243104	PrimaryExpression	0		1243024	0					
ANR	1243105	Identifier	HASH_KEY_IS_STRING		1243024	1					
ANR	1243106	EqualityExpression	num_index != i		1243024	1		!=			
ANR	1243107	Identifier	num_index		1243024	0					
ANR	1243108	Identifier	i		1243024	1					
ANR	1243109	CompoundStatement		10:22:310:310	1243024	1					
ANR	1243110	ReturnStatement	return TRUE ;	3616:3:114131:114142	1243024	0	True				
ANR	1243111	Identifier	TRUE		1243024	0					
ANR	1243112	ExpressionStatement	zend_hash_move_forward ( Z_ARRVAL_P ( array ) )	3618:2:114150:114191	1243024	3	True				
ANR	1243113	CallExpression	zend_hash_move_forward ( Z_ARRVAL_P ( array ) )		1243024	0					
ANR	1243114	Callee	zend_hash_move_forward		1243024	0					
ANR	1243115	Identifier	zend_hash_move_forward		1243024	0					
ANR	1243116	ArgumentList	Z_ARRVAL_P ( array )		1243024	1					
ANR	1243117	Argument	Z_ARRVAL_P ( array )		1243024	0					
ANR	1243118	CallExpression	Z_ARRVAL_P ( array )		1243024	0					
ANR	1243119	Callee	Z_ARRVAL_P		1243024	0					
ANR	1243120	Identifier	Z_ARRVAL_P		1243024	0					
ANR	1243121	ArgumentList	array		1243024	1					
ANR	1243122	Argument	array		1243024	0					
ANR	1243123	Identifier	array		1243024	0					
ANR	1243124	ReturnStatement	return FALSE ;	3620:1:114197:114209	1243024	3	True				
ANR	1243125	Identifier	FALSE		1243024	0					
ANR	1243126	ReturnType	static int		1243024	1					
ANR	1243127	Identifier	is_map		1243024	2					
ANR	1243128	ParameterList	zval * array		1243024	3					
ANR	1243129	Parameter	zval * array	3605:18:113802:113812	1243024	0	True				
ANR	1243130	ParameterType	zval *		1243024	0					
ANR	1243131	Identifier	array		1243024	1					
ANR	1243132	CFGEntryNode	ENTRY		1243024		True				
ANR	1243133	CFGExitNode	EXIT		1243024		True				
ANR	1243134	Symbol	str_index		1243024						
ANR	1243135	Symbol	zend_hash_num_elements		1243024						
ANR	1243136	Symbol	zend_hash_get_current_key		1243024						
ANR	1243137	Symbol	count		1243024						
ANR	1243138	Symbol	i		1243024						
ANR	1243139	Symbol	HASH_KEY_IS_STRING		1243024						
ANR	1243140	Symbol	TRUE		1243024						
ANR	1243141	Symbol	& str_index		1243024						
ANR	1243142	Symbol	& num_index		1243024						
ANR	1243143	Symbol	array		1243024						
ANR	1243144	Symbol	num_index		1243024						
ANR	1243145	Symbol	FALSE		1243024						
ANR	1243146	Symbol	Z_ARRVAL_P		1243024						
ANR	1243147	DeclStmt									
ANR	1243148	Decl							HashTable	HashTable *	ht
ANR	1243149	DeclStmt									
ANR	1243150	Decl							int	int	i
ANR	1243151	Decl							int	int	count
ANR	1243152	Decl							int	int	cur_type
ANR	1243153	Decl							int	int	prev_type
ANR	1243154	Decl							int	int	different
ANR	1243155	DeclStmt									
ANR	1243156	Decl							zval	zval * *	tmp
ANR	1243157	DeclStmt									
ANR	1243158	Decl							char	char *	prev_stype
ANR	1243159	Decl							char	char *	cur_stype
ANR	1243160	Decl							char	char *	prev_ns
ANR	1243161	Decl							char	char *	cur_ns
ANR	1243162	DeclStmt									
ANR	1243163	Decl							zval	zval * *	ztype
ANR	1243164	DeclStmt									
ANR	1243165	Decl							encodePtr	encodePtr	enc
ANR	1243166	DeclStmt									
ANR	1243167	Decl							smart_str	smart_str	array_type
ANR	1243168	DeclStmt									
ANR	1243169	Decl							xmlNsPtr	xmlNsPtr	ns
ANR	1243170	Function	get_type_str	3728:0:117165:117759							
ANR	1243171	FunctionDef	"get_type_str (xmlNodePtr node , const char * ns , const char * type , smart_str * ret)"		1243170	0					
ANR	1243172	CompoundStatement		3729:0:117257:117759	1243170	0					
ANR	1243173	ExpressionStatement	TSRMLS_FETCH ( )	3730:1:117260:117274	1243170	0	True				
ANR	1243174	CallExpression	TSRMLS_FETCH ( )		1243170	0					
ANR	1243175	Callee	TSRMLS_FETCH		1243170	0					
ANR	1243176	Identifier	TSRMLS_FETCH		1243170	0					
ANR	1243177	ArgumentList			1243170	1					
ANR	1243178	IfStatement	if ( ns )		1243170	1					
ANR	1243179	Condition	ns	3732:5:117282:117283	1243170	0	True				
ANR	1243180	Identifier	ns		1243170	0					
ANR	1243181	CompoundStatement		5:2:32:46	1243170	1					
ANR	1243182	IdentifierDeclStatement	xmlNsPtr xmlns ;	3733:2:117290:117304	1243170	0	True				
ANR	1243183	IdentifierDecl	xmlns		1243170	0					
ANR	1243184	IdentifierDeclType	xmlNsPtr		1243170	0					
ANR	1243185	Identifier	xmlns		1243170	1					
ANR	1243186	IfStatement	"if ( SOAP_GLOBAL ( soap_version ) == SOAP_1_2 && strcmp ( ns , SOAP_1_1_ENC_NAMESPACE ) == 0 )"		1243170	1					
ANR	1243187	Condition	"SOAP_GLOBAL ( soap_version ) == SOAP_1_2 && strcmp ( ns , SOAP_1_1_ENC_NAMESPACE ) == 0"	3734:6:117312:117396	1243170	0	True				
ANR	1243188	AndExpression	"SOAP_GLOBAL ( soap_version ) == SOAP_1_2 && strcmp ( ns , SOAP_1_1_ENC_NAMESPACE ) == 0"		1243170	0		&&			
ANR	1243189	EqualityExpression	SOAP_GLOBAL ( soap_version ) == SOAP_1_2		1243170	0		==			
ANR	1243190	CallExpression	SOAP_GLOBAL ( soap_version )		1243170	0					
ANR	1243191	Callee	SOAP_GLOBAL		1243170	0					
ANR	1243192	Identifier	SOAP_GLOBAL		1243170	0					
ANR	1243193	ArgumentList	soap_version		1243170	1					
ANR	1243194	Argument	soap_version		1243170	0					
ANR	1243195	Identifier	soap_version		1243170	0					
ANR	1243196	Identifier	SOAP_1_2		1243170	1					
ANR	1243197	EqualityExpression	"strcmp ( ns , SOAP_1_1_ENC_NAMESPACE ) == 0"		1243170	1		==			
ANR	1243198	CallExpression	"strcmp ( ns , SOAP_1_1_ENC_NAMESPACE )"		1243170	0					
ANR	1243199	Callee	strcmp		1243170	0					
ANR	1243200	Identifier	strcmp		1243170	0					
ANR	1243201	ArgumentList	ns		1243170	1					
ANR	1243202	Argument	ns		1243170	0					
ANR	1243203	Identifier	ns		1243170	0					
ANR	1243204	Argument	SOAP_1_1_ENC_NAMESPACE		1243170	1					
ANR	1243205	Identifier	SOAP_1_1_ENC_NAMESPACE		1243170	0					
ANR	1243206	PrimaryExpression	0		1243170	1					
ANR	1243207	CompoundStatement		7:46:141:141	1243170	1					
ANR	1243208	ExpressionStatement	ns = SOAP_1_2_ENC_NAMESPACE	3736:3:117404:117431	1243170	0	True				
ANR	1243209	AssignmentExpression	ns = SOAP_1_2_ENC_NAMESPACE		1243170	0		=			
ANR	1243210	Identifier	ns		1243170	0					
ANR	1243211	Identifier	SOAP_1_2_ENC_NAMESPACE		1243170	1					
ANR	1243212	ElseStatement	else		1243170	0					
ANR	1243213	IfStatement	"if ( SOAP_GLOBAL ( soap_version ) == SOAP_1_1 && strcmp ( ns , SOAP_1_2_ENC_NAMESPACE ) == 0 )"		1243170	0					
ANR	1243214	Condition	"SOAP_GLOBAL ( soap_version ) == SOAP_1_1 && strcmp ( ns , SOAP_1_2_ENC_NAMESPACE ) == 0"	3737:13:117446:117537	1243170	0	True				
ANR	1243215	AndExpression	"SOAP_GLOBAL ( soap_version ) == SOAP_1_1 && strcmp ( ns , SOAP_1_2_ENC_NAMESPACE ) == 0"		1243170	0		&&			
ANR	1243216	EqualityExpression	SOAP_GLOBAL ( soap_version ) == SOAP_1_1		1243170	0		==			
ANR	1243217	CallExpression	SOAP_GLOBAL ( soap_version )		1243170	0					
ANR	1243218	Callee	SOAP_GLOBAL		1243170	0					
ANR	1243219	Identifier	SOAP_GLOBAL		1243170	0					
ANR	1243220	ArgumentList	soap_version		1243170	1					
ANR	1243221	Argument	soap_version		1243170	0					
ANR	1243222	Identifier	soap_version		1243170	0					
ANR	1243223	Identifier	SOAP_1_1		1243170	1					
ANR	1243224	EqualityExpression	"strcmp ( ns , SOAP_1_2_ENC_NAMESPACE ) == 0"		1243170	1		==			
ANR	1243225	CallExpression	"strcmp ( ns , SOAP_1_2_ENC_NAMESPACE )"		1243170	0					
ANR	1243226	Callee	strcmp		1243170	0					
ANR	1243227	Identifier	strcmp		1243170	0					
ANR	1243228	ArgumentList	ns		1243170	1					
ANR	1243229	Argument	ns		1243170	0					
ANR	1243230	Identifier	ns		1243170	0					
ANR	1243231	Argument	SOAP_1_2_ENC_NAMESPACE		1243170	1					
ANR	1243232	Identifier	SOAP_1_2_ENC_NAMESPACE		1243170	0					
ANR	1243233	PrimaryExpression	0		1243170	1					
ANR	1243234	CompoundStatement		10:53:282:282	1243170	1					
ANR	1243235	ExpressionStatement	ns = SOAP_1_1_ENC_NAMESPACE	3739:3:117545:117572	1243170	0	True				
ANR	1243236	AssignmentExpression	ns = SOAP_1_1_ENC_NAMESPACE		1243170	0		=			
ANR	1243237	Identifier	ns		1243170	0					
ANR	1243238	Identifier	SOAP_1_1_ENC_NAMESPACE		1243170	1					
ANR	1243239	ExpressionStatement	"xmlns = encode_add_ns ( node , ns )"	3741:2:117580:117611	1243170	2	True				
ANR	1243240	AssignmentExpression	"xmlns = encode_add_ns ( node , ns )"		1243170	0		=			
ANR	1243241	Identifier	xmlns		1243170	0					
ANR	1243242	CallExpression	"encode_add_ns ( node , ns )"		1243170	1					
ANR	1243243	Callee	encode_add_ns		1243170	0					
ANR	1243244	Identifier	encode_add_ns		1243170	0					
ANR	1243245	ArgumentList	node		1243170	1					
ANR	1243246	Argument	node		1243170	0					
ANR	1243247	Identifier	node		1243170	0					
ANR	1243248	Argument	ns		1243170	1					
ANR	1243249	Identifier	ns		1243170	0					
ANR	1243250	ExpressionStatement	"smart_str_appends ( ret , ( char * ) xmlns -> prefix )"	3742:2:117615:117659	1243170	3	True				
ANR	1243251	CallExpression	"smart_str_appends ( ret , ( char * ) xmlns -> prefix )"		1243170	0					
ANR	1243252	Callee	smart_str_appends		1243170	0					
ANR	1243253	Identifier	smart_str_appends		1243170	0					
ANR	1243254	ArgumentList	ret		1243170	1					
ANR	1243255	Argument	ret		1243170	0					
ANR	1243256	Identifier	ret		1243170	0					
ANR	1243257	Argument	( char * ) xmlns -> prefix		1243170	1					
ANR	1243258	CastExpression	( char * ) xmlns -> prefix		1243170	0					
ANR	1243259	CastTarget	char *		1243170	0					
ANR	1243260	PtrMemberAccess	xmlns -> prefix		1243170	1					
ANR	1243261	Identifier	xmlns		1243170	0					
ANR	1243262	Identifier	prefix		1243170	1					
ANR	1243263	ExpressionStatement	"smart_str_appendc ( ret , ':' )"	3743:2:117663:117690	1243170	4	True				
ANR	1243264	CallExpression	"smart_str_appendc ( ret , ':' )"		1243170	0					
ANR	1243265	Callee	smart_str_appendc		1243170	0					
ANR	1243266	Identifier	smart_str_appendc		1243170	0					
ANR	1243267	ArgumentList	ret		1243170	1					
ANR	1243268	Argument	ret		1243170	0					
ANR	1243269	Identifier	ret		1243170	0					
ANR	1243270	Argument	':'		1243170	1					
ANR	1243271	PrimaryExpression	':'		1243170	0					
ANR	1243272	ExpressionStatement	"smart_str_appendl ( ret , type , strlen ( type ) )"	3745:1:117696:117738	1243170	2	True				
ANR	1243273	CallExpression	"smart_str_appendl ( ret , type , strlen ( type ) )"		1243170	0					
ANR	1243274	Callee	smart_str_appendl		1243170	0					
ANR	1243275	Identifier	smart_str_appendl		1243170	0					
ANR	1243276	ArgumentList	ret		1243170	1					
ANR	1243277	Argument	ret		1243170	0					
ANR	1243278	Identifier	ret		1243170	0					
ANR	1243279	Argument	type		1243170	1					
ANR	1243280	Identifier	type		1243170	0					
ANR	1243281	Argument	strlen ( type )		1243170	2					
ANR	1243282	CallExpression	strlen ( type )		1243170	0					
ANR	1243283	Callee	strlen		1243170	0					
ANR	1243284	Identifier	strlen		1243170	0					
ANR	1243285	ArgumentList	type		1243170	1					
ANR	1243286	Argument	type		1243170	0					
ANR	1243287	Identifier	type		1243170	0					
ANR	1243288	ExpressionStatement	smart_str_0 ( ret )	3746:1:117741:117757	1243170	3	True				
ANR	1243289	CallExpression	smart_str_0 ( ret )		1243170	0					
ANR	1243290	Callee	smart_str_0		1243170	0					
ANR	1243291	Identifier	smart_str_0		1243170	0					
ANR	1243292	ArgumentList	ret		1243170	1					
ANR	1243293	Argument	ret		1243170	0					
ANR	1243294	Identifier	ret		1243170	0					
ANR	1243295	ReturnType	static void		1243170	1					
ANR	1243296	Identifier	get_type_str		1243170	2					
ANR	1243297	ParameterList	"xmlNodePtr node , const char * ns , const char * type , smart_str * ret"		1243170	3					
ANR	1243298	Parameter	xmlNodePtr node	3728:25:117190:117204	1243170	0	True				
ANR	1243299	ParameterType	xmlNodePtr		1243170	0					
ANR	1243300	Identifier	node		1243170	1					
ANR	1243301	Parameter	const char * ns	3728:42:117207:117220	1243170	1	True				
ANR	1243302	ParameterType	const char *		1243170	0					
ANR	1243303	Identifier	ns		1243170	1					
ANR	1243304	Parameter	const char * type	3728:58:117223:117238	1243170	2	True				
ANR	1243305	ParameterType	const char *		1243170	0					
ANR	1243306	Identifier	type		1243170	1					
ANR	1243307	Parameter	smart_str * ret	3728:76:117241:117254	1243170	3	True				
ANR	1243308	ParameterType	smart_str *		1243170	0					
ANR	1243309	Identifier	ret		1243170	1					
ANR	1243310	CFGEntryNode	ENTRY		1243170		True				
ANR	1243311	CFGExitNode	EXIT		1243170		True				
ANR	1243312	Symbol	ret		1243170						
ANR	1243313	Symbol	strcmp		1243170						
ANR	1243314	Symbol	SOAP_1_1		1243170						
ANR	1243315	Symbol	SOAP_1_1_ENC_NAMESPACE		1243170						
ANR	1243316	Symbol	encode_add_ns		1243170						
ANR	1243317	Symbol	ns		1243170						
ANR	1243318	Symbol	xmlns -> prefix		1243170						
ANR	1243319	Symbol	* xmlns		1243170						
ANR	1243320	Symbol	type		1243170						
ANR	1243321	Symbol	SOAP_GLOBAL		1243170						
ANR	1243322	Symbol	node		1243170						
ANR	1243323	Symbol	strlen		1243170						
ANR	1243324	Symbol	xmlns		1243170						
ANR	1243325	Symbol	SOAP_1_2_ENC_NAMESPACE		1243170						
ANR	1243326	Symbol	soap_version		1243170						
ANR	1243327	Symbol	SOAP_1_2		1243170						
ANR	1243328	Function	delete_mapping	3749:0:117762:117971							
ANR	1243329	FunctionDef	delete_mapping (void * data)		1243328	0					
ANR	1243330	CompoundStatement		3750:0:117801:117971	1243328	0					
ANR	1243331	IdentifierDeclStatement	soapMappingPtr map = ( soapMappingPtr ) data ;	3751:1:117804:117845	1243328	0	True				
ANR	1243332	IdentifierDecl	map = ( soapMappingPtr ) data		1243328	0					
ANR	1243333	IdentifierDeclType	soapMappingPtr		1243328	0					
ANR	1243334	Identifier	map		1243328	1					
ANR	1243335	AssignmentExpression	map = ( soapMappingPtr ) data		1243328	2		=			
ANR	1243336	Identifier	map		1243328	0					
ANR	1243337	CastExpression	( soapMappingPtr ) data		1243328	1					
ANR	1243338	CastTarget	soapMappingPtr		1243328	0					
ANR	1243339	Identifier	data		1243328	1					
ANR	1243340	IfStatement	if ( map -> to_xml )		1243328	1					
ANR	1243341	Condition	map -> to_xml	3753:5:117853:117863	1243328	0	True				
ANR	1243342	PtrMemberAccess	map -> to_xml		1243328	0					
ANR	1243343	Identifier	map		1243328	0					
ANR	1243344	Identifier	to_xml		1243328	1					
ANR	1243345	CompoundStatement		4:18:64:64	1243328	1					
ANR	1243346	ExpressionStatement	zval_ptr_dtor ( & map -> to_xml )	3754:2:117870:117897	1243328	0	True				
ANR	1243347	CallExpression	zval_ptr_dtor ( & map -> to_xml )		1243328	0					
ANR	1243348	Callee	zval_ptr_dtor		1243328	0					
ANR	1243349	Identifier	zval_ptr_dtor		1243328	0					
ANR	1243350	ArgumentList	& map -> to_xml		1243328	1					
ANR	1243351	Argument	& map -> to_xml		1243328	0					
ANR	1243352	UnaryOperationExpression	& map -> to_xml		1243328	0					
ANR	1243353	UnaryOperator	&		1243328	0					
ANR	1243354	PtrMemberAccess	map -> to_xml		1243328	1					
ANR	1243355	Identifier	map		1243328	0					
ANR	1243356	Identifier	to_xml		1243328	1					
ANR	1243357	IfStatement	if ( map -> to_zval )		1243328	2					
ANR	1243358	Condition	map -> to_zval	3756:5:117907:117918	1243328	0	True				
ANR	1243359	PtrMemberAccess	map -> to_zval		1243328	0					
ANR	1243360	Identifier	map		1243328	0					
ANR	1243361	Identifier	to_zval		1243328	1					
ANR	1243362	CompoundStatement		7:19:119:119	1243328	1					
ANR	1243363	ExpressionStatement	zval_ptr_dtor ( & map -> to_zval )	3757:2:117925:117953	1243328	0	True				
ANR	1243364	CallExpression	zval_ptr_dtor ( & map -> to_zval )		1243328	0					
ANR	1243365	Callee	zval_ptr_dtor		1243328	0					
ANR	1243366	Identifier	zval_ptr_dtor		1243328	0					
ANR	1243367	ArgumentList	& map -> to_zval		1243328	1					
ANR	1243368	Argument	& map -> to_zval		1243328	0					
ANR	1243369	UnaryOperationExpression	& map -> to_zval		1243328	0					
ANR	1243370	UnaryOperator	&		1243328	0					
ANR	1243371	PtrMemberAccess	map -> to_zval		1243328	1					
ANR	1243372	Identifier	map		1243328	0					
ANR	1243373	Identifier	to_zval		1243328	1					
ANR	1243374	ExpressionStatement	efree ( map )	3759:1:117959:117969	1243328	3	True				
ANR	1243375	CallExpression	efree ( map )		1243328	0					
ANR	1243376	Callee	efree		1243328	0					
ANR	1243377	Identifier	efree		1243328	0					
ANR	1243378	ArgumentList	map		1243328	1					
ANR	1243379	Argument	map		1243328	0					
ANR	1243380	Identifier	map		1243328	0					
ANR	1243381	ReturnType	static void		1243328	1					
ANR	1243382	Identifier	delete_mapping		1243328	2					
ANR	1243383	ParameterList	void * data		1243328	3					
ANR	1243384	Parameter	void * data	3749:27:117789:117798	1243328	0	True				
ANR	1243385	ParameterType	void *		1243328	0					
ANR	1243386	Identifier	data		1243328	1					
ANR	1243387	CFGEntryNode	ENTRY		1243328		True				
ANR	1243388	CFGExitNode	EXIT		1243328		True				
ANR	1243389	Symbol	& map -> to_zval		1243328						
ANR	1243390	Symbol	data		1243328						
ANR	1243391	Symbol	map -> to_zval		1243328						
ANR	1243392	Symbol	* map		1243328						
ANR	1243393	Symbol	map -> to_xml		1243328						
ANR	1243394	Symbol	& map -> to_xml		1243328						
ANR	1243395	Symbol	map		1243328						
ANR	1243396	Function	delete_encoder	3762:0:117974:118229							
ANR	1243397	FunctionDef	delete_encoder (void * encode)		1243396	0					
ANR	1243398	CompoundStatement		3763:0:118008:118229	1243396	0					
ANR	1243399	IdentifierDeclStatement	encodePtr t = * ( ( encodePtr * ) encode ) ;	3764:1:118011:118046	1243396	0	True				
ANR	1243400	IdentifierDecl	t = * ( ( encodePtr * ) encode )		1243396	0					
ANR	1243401	IdentifierDeclType	encodePtr		1243396	0					
ANR	1243402	Identifier	t		1243396	1					
ANR	1243403	AssignmentExpression	t = * ( ( encodePtr * ) encode )		1243396	2		=			
ANR	1243404	Identifier	t		1243396	0					
ANR	1243405	UnaryOperationExpression	* ( ( encodePtr * ) encode )		1243396	1					
ANR	1243406	UnaryOperator	*		1243396	0					
ANR	1243407	CastExpression	( encodePtr * ) encode		1243396	1					
ANR	1243408	CastTarget	encodePtr *		1243396	0					
ANR	1243409	Identifier	encode		1243396	1					
ANR	1243410	IfStatement	if ( t -> details . ns )		1243396	1					
ANR	1243411	Condition	t -> details . ns	3765:5:118053:118065	1243396	0	True				
ANR	1243412	MemberAccess	t -> details . ns		1243396	0					
ANR	1243413	PtrMemberAccess	t -> details		1243396	0					
ANR	1243414	Identifier	t		1243396	0					
ANR	1243415	Identifier	details		1243396	1					
ANR	1243416	Identifier	ns		1243396	1					
ANR	1243417	CompoundStatement		3:20:59:59	1243396	1					
ANR	1243418	ExpressionStatement	efree ( t -> details . ns )	3766:2:118072:118092	1243396	0	True				
ANR	1243419	CallExpression	efree ( t -> details . ns )		1243396	0					
ANR	1243420	Callee	efree		1243396	0					
ANR	1243421	Identifier	efree		1243396	0					
ANR	1243422	ArgumentList	t -> details . ns		1243396	1					
ANR	1243423	Argument	t -> details . ns		1243396	0					
ANR	1243424	MemberAccess	t -> details . ns		1243396	0					
ANR	1243425	PtrMemberAccess	t -> details		1243396	0					
ANR	1243426	Identifier	t		1243396	0					
ANR	1243427	Identifier	details		1243396	1					
ANR	1243428	Identifier	ns		1243396	1					
ANR	1243429	IfStatement	if ( t -> details . type_str )		1243396	2					
ANR	1243430	Condition	t -> details . type_str	3768:5:118102:118120	1243396	0	True				
ANR	1243431	MemberAccess	t -> details . type_str		1243396	0					
ANR	1243432	PtrMemberAccess	t -> details		1243396	0					
ANR	1243433	Identifier	t		1243396	0					
ANR	1243434	Identifier	details		1243396	1					
ANR	1243435	Identifier	type_str		1243396	1					
ANR	1243436	CompoundStatement		6:26:114:114	1243396	1					
ANR	1243437	ExpressionStatement	efree ( t -> details . type_str )	3769:2:118127:118153	1243396	0	True				
ANR	1243438	CallExpression	efree ( t -> details . type_str )		1243396	0					
ANR	1243439	Callee	efree		1243396	0					
ANR	1243440	Identifier	efree		1243396	0					
ANR	1243441	ArgumentList	t -> details . type_str		1243396	1					
ANR	1243442	Argument	t -> details . type_str		1243396	0					
ANR	1243443	MemberAccess	t -> details . type_str		1243396	0					
ANR	1243444	PtrMemberAccess	t -> details		1243396	0					
ANR	1243445	Identifier	t		1243396	0					
ANR	1243446	Identifier	details		1243396	1					
ANR	1243447	Identifier	type_str		1243396	1					
ANR	1243448	IfStatement	if ( t -> details . map )		1243396	3					
ANR	1243449	Condition	t -> details . map	3771:5:118163:118176	1243396	0	True				
ANR	1243450	MemberAccess	t -> details . map		1243396	0					
ANR	1243451	PtrMemberAccess	t -> details		1243396	0					
ANR	1243452	Identifier	t		1243396	0					
ANR	1243453	Identifier	details		1243396	1					
ANR	1243454	Identifier	map		1243396	1					
ANR	1243455	CompoundStatement		9:21:170:170	1243396	1					
ANR	1243456	ExpressionStatement	delete_mapping ( t -> details . map )	3772:2:118183:118213	1243396	0	True				
ANR	1243457	CallExpression	delete_mapping ( t -> details . map )		1243396	0					
ANR	1243458	Callee	delete_mapping		1243396	0					
ANR	1243459	Identifier	delete_mapping		1243396	0					
ANR	1243460	ArgumentList	t -> details . map		1243396	1					
ANR	1243461	Argument	t -> details . map		1243396	0					
ANR	1243462	MemberAccess	t -> details . map		1243396	0					
ANR	1243463	PtrMemberAccess	t -> details		1243396	0					
ANR	1243464	Identifier	t		1243396	0					
ANR	1243465	Identifier	details		1243396	1					
ANR	1243466	Identifier	map		1243396	1					
ANR	1243467	ExpressionStatement	efree ( t )	3774:1:118219:118227	1243396	4	True				
ANR	1243468	CallExpression	efree ( t )		1243396	0					
ANR	1243469	Callee	efree		1243396	0					
ANR	1243470	Identifier	efree		1243396	0					
ANR	1243471	ArgumentList	t		1243396	1					
ANR	1243472	Argument	t		1243396	0					
ANR	1243473	Identifier	t		1243396	0					
ANR	1243474	ReturnType	void		1243396	1					
ANR	1243475	Identifier	delete_encoder		1243396	2					
ANR	1243476	ParameterList	void * encode		1243396	3					
ANR	1243477	Parameter	void * encode	3762:20:117994:118005	1243396	0	True				
ANR	1243478	ParameterType	void *		1243396	0					
ANR	1243479	Identifier	encode		1243396	1					
ANR	1243480	CFGEntryNode	ENTRY		1243396		True				
ANR	1243481	CFGExitNode	EXIT		1243396		True				
ANR	1243482	Symbol	encode		1243396						
ANR	1243483	Symbol	t -> details		1243396						
ANR	1243484	Symbol	* encode		1243396						
ANR	1243485	Symbol	t		1243396						
ANR	1243486	Symbol	* ( ( encodePtr * ) encode )		1243396						
ANR	1243487	Symbol	t -> details . map		1243396						
ANR	1243488	Symbol	t -> details . type_str		1243396						
ANR	1243489	Symbol	t -> details . ns		1243396						
ANR	1243490	Symbol	* t		1243396						
ANR	1243491	Function	delete_encoder_persistent	3777:0:118232:118526							
ANR	1243492	FunctionDef	delete_encoder_persistent (void * encode)		1243491	0					
ANR	1243493	CompoundStatement		3778:0:118277:118526	1243491	0					
ANR	1243494	IdentifierDeclStatement	encodePtr t = * ( ( encodePtr * ) encode ) ;	3779:1:118280:118315	1243491	0	True				
ANR	1243495	IdentifierDecl	t = * ( ( encodePtr * ) encode )		1243491	0					
ANR	1243496	IdentifierDeclType	encodePtr		1243491	0					
ANR	1243497	Identifier	t		1243491	1					
ANR	1243498	AssignmentExpression	t = * ( ( encodePtr * ) encode )		1243491	2		=			
ANR	1243499	Identifier	t		1243491	0					
ANR	1243500	UnaryOperationExpression	* ( ( encodePtr * ) encode )		1243491	1					
ANR	1243501	UnaryOperator	*		1243491	0					
ANR	1243502	CastExpression	( encodePtr * ) encode		1243491	1					
ANR	1243503	CastTarget	encodePtr *		1243491	0					
ANR	1243504	Identifier	encode		1243491	1					
ANR	1243505	IfStatement	if ( t -> details . ns )		1243491	1					
ANR	1243506	Condition	t -> details . ns	3780:5:118322:118334	1243491	0	True				
ANR	1243507	MemberAccess	t -> details . ns		1243491	0					
ANR	1243508	PtrMemberAccess	t -> details		1243491	0					
ANR	1243509	Identifier	t		1243491	0					
ANR	1243510	Identifier	details		1243491	1					
ANR	1243511	Identifier	ns		1243491	1					
ANR	1243512	CompoundStatement		3:20:59:59	1243491	1					
ANR	1243513	ExpressionStatement	free ( t -> details . ns )	3781:2:118341:118360	1243491	0	True				
ANR	1243514	CallExpression	free ( t -> details . ns )		1243491	0					
ANR	1243515	Callee	free		1243491	0					
ANR	1243516	Identifier	free		1243491	0					
ANR	1243517	ArgumentList	t -> details . ns		1243491	1					
ANR	1243518	Argument	t -> details . ns		1243491	0					
ANR	1243519	MemberAccess	t -> details . ns		1243491	0					
ANR	1243520	PtrMemberAccess	t -> details		1243491	0					
ANR	1243521	Identifier	t		1243491	0					
ANR	1243522	Identifier	details		1243491	1					
ANR	1243523	Identifier	ns		1243491	1					
ANR	1243524	IfStatement	if ( t -> details . type_str )		1243491	2					
ANR	1243525	Condition	t -> details . type_str	3783:5:118370:118388	1243491	0	True				
ANR	1243526	MemberAccess	t -> details . type_str		1243491	0					
ANR	1243527	PtrMemberAccess	t -> details		1243491	0					
ANR	1243528	Identifier	t		1243491	0					
ANR	1243529	Identifier	details		1243491	1					
ANR	1243530	Identifier	type_str		1243491	1					
ANR	1243531	CompoundStatement		6:26:113:113	1243491	1					
ANR	1243532	ExpressionStatement	free ( t -> details . type_str )	3784:2:118395:118420	1243491	0	True				
ANR	1243533	CallExpression	free ( t -> details . type_str )		1243491	0					
ANR	1243534	Callee	free		1243491	0					
ANR	1243535	Identifier	free		1243491	0					
ANR	1243536	ArgumentList	t -> details . type_str		1243491	1					
ANR	1243537	Argument	t -> details . type_str		1243491	0					
ANR	1243538	MemberAccess	t -> details . type_str		1243491	0					
ANR	1243539	PtrMemberAccess	t -> details		1243491	0					
ANR	1243540	Identifier	t		1243491	0					
ANR	1243541	Identifier	details		1243491	1					
ANR	1243542	Identifier	type_str		1243491	1					
ANR	1243543	ExpressionStatement	assert ( t -> details . map == NULL )	3787:1:118484:118514	1243491	3	True				
ANR	1243544	CallExpression	assert ( t -> details . map == NULL )		1243491	0					
ANR	1243545	Callee	assert		1243491	0					
ANR	1243546	Identifier	assert		1243491	0					
ANR	1243547	ArgumentList	t -> details . map == NULL		1243491	1					
ANR	1243548	Argument	t -> details . map == NULL		1243491	0					
ANR	1243549	EqualityExpression	t -> details . map == NULL		1243491	0		==			
ANR	1243550	MemberAccess	t -> details . map		1243491	0					
ANR	1243551	PtrMemberAccess	t -> details		1243491	0					
ANR	1243552	Identifier	t		1243491	0					
ANR	1243553	Identifier	details		1243491	1					
ANR	1243554	Identifier	map		1243491	1					
ANR	1243555	Identifier	NULL		1243491	1					
ANR	1243556	ExpressionStatement	free ( t )	3788:1:118517:118524	1243491	4	True				
ANR	1243557	CallExpression	free ( t )		1243491	0					
ANR	1243558	Callee	free		1243491	0					
ANR	1243559	Identifier	free		1243491	0					
ANR	1243560	ArgumentList	t		1243491	1					
ANR	1243561	Argument	t		1243491	0					
ANR	1243562	Identifier	t		1243491	0					
ANR	1243563	ReturnType	void		1243491	1					
ANR	1243564	Identifier	delete_encoder_persistent		1243491	2					
ANR	1243565	ParameterList	void * encode		1243491	3					
ANR	1243566	Parameter	void * encode	3777:31:118263:118274	1243491	0	True				
ANR	1243567	ParameterType	void *		1243491	0					
ANR	1243568	Identifier	encode		1243491	1					
ANR	1243569	CFGEntryNode	ENTRY		1243491		True				
ANR	1243570	CFGExitNode	EXIT		1243491		True				
ANR	1243571	Symbol	encode		1243491						
ANR	1243572	Symbol	t -> details		1243491						
ANR	1243573	Symbol	* encode		1243491						
ANR	1243574	Symbol	NULL		1243491						
ANR	1243575	Symbol	t		1243491						
ANR	1243576	Symbol	* ( ( encodePtr * ) encode )		1243491						
ANR	1243577	Symbol	t -> details . map		1243491						
ANR	1243578	Symbol	t -> details . type_str		1243491						
ANR	1243579	Symbol	t -> details . ns		1243491						
ANR	1243580	Symbol	* t		1243491						
