command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1968893	File	data/converged/CVE-2017-11142_php-src/ext_standard_formatted_print.c								
ANR	1968894	DeclStmt									
ANR	1968895	Decl							char	char [ ]	hexchars
ANR	1968896	DeclStmt									
ANR	1968897	Decl							char	char [ ]	HEXCHARS
ANR	1968898	Function	php_sprintf_appendchar	59:0:2000:2378							
ANR	1968899	FunctionDef	"php_sprintf_appendchar (char * * buffer , int * pos , int * size , char add TSRMLS_DC)"		1968898	0					
ANR	1968900	CompoundStatement		61:0:2098:2378	1968898	0					
ANR	1968901	IfStatement	if ( ( * pos + 1 ) >= * size )		1968898	0					
ANR	1968902	Condition	( * pos + 1 ) >= * size	62:5:2105:2123	1968898	0	True				
ANR	1968903	RelationalExpression	( * pos + 1 ) >= * size		1968898	0		>=			
ANR	1968904	AdditiveExpression	* pos + 1		1968898	0		+			
ANR	1968905	UnaryOperationExpression	* pos		1968898	0					
ANR	1968906	UnaryOperator	*		1968898	0					
ANR	1968907	Identifier	pos		1968898	1					
ANR	1968908	PrimaryExpression	1		1968898	1					
ANR	1968909	UnaryOperationExpression	* size		1968898	1					
ANR	1968910	UnaryOperator	*		1968898	0					
ANR	1968911	Identifier	size		1968898	1					
ANR	1968912	CompoundStatement		2:26:27:27	1968898	1					
ANR	1968913	ExpressionStatement	* size <<= 1	63:2:2130:2141	1968898	0	True				
ANR	1968914	AssignmentExpression	* size <<= 1		1968898	0		<<=			
ANR	1968915	UnaryOperationExpression	* size		1968898	0					
ANR	1968916	UnaryOperator	*		1968898	0					
ANR	1968917	Identifier	size		1968898	1					
ANR	1968918	PrimaryExpression	1		1968898	1					
ANR	1968919	ExpressionStatement	"PRINTF_DEBUG ( ( ""%s(): ereallocing buffer to %d bytes\\n"" , get_active_function_name ( TSRMLS_C ) , * size ) )"	64:2:2145:2244	1968898	1	True				
ANR	1968920	CallExpression	"PRINTF_DEBUG ( ( ""%s(): ereallocing buffer to %d bytes\\n"" , get_active_function_name ( TSRMLS_C ) , * size ) )"		1968898	0					
ANR	1968921	Callee	PRINTF_DEBUG		1968898	0					
ANR	1968922	Identifier	PRINTF_DEBUG		1968898	0					
ANR	1968923	ArgumentList	"""%s(): ereallocing buffer to %d bytes\\n"" , get_active_function_name ( TSRMLS_C ) , * size"		1968898	1					
ANR	1968924	Argument	"""%s(): ereallocing buffer to %d bytes\\n"" , get_active_function_name ( TSRMLS_C ) , * size"		1968898	0					
ANR	1968925	Expression	"""%s(): ereallocing buffer to %d bytes\\n"" , get_active_function_name ( TSRMLS_C ) , * size"		1968898	0					
ANR	1968926	PrimaryExpression	"""%s(): ereallocing buffer to %d bytes\\n"""		1968898	0					
ANR	1968927	Expression	"get_active_function_name ( TSRMLS_C ) , * size"		1968898	1					
ANR	1968928	CallExpression	get_active_function_name ( TSRMLS_C )		1968898	0					
ANR	1968929	Callee	get_active_function_name		1968898	0					
ANR	1968930	Identifier	get_active_function_name		1968898	0					
ANR	1968931	ArgumentList	TSRMLS_C		1968898	1					
ANR	1968932	Argument	TSRMLS_C		1968898	0					
ANR	1968933	Identifier	TSRMLS_C		1968898	0					
ANR	1968934	UnaryOperationExpression	* size		1968898	1					
ANR	1968935	UnaryOperator	*		1968898	0					
ANR	1968936	Identifier	size		1968898	1					
ANR	1968937	ExpressionStatement	"* buffer = erealloc ( * buffer , * size )"	65:2:2248:2282	1968898	2	True				
ANR	1968938	AssignmentExpression	"* buffer = erealloc ( * buffer , * size )"		1968898	0		=			
ANR	1968939	UnaryOperationExpression	* buffer		1968898	0					
ANR	1968940	UnaryOperator	*		1968898	0					
ANR	1968941	Identifier	buffer		1968898	1					
ANR	1968942	CallExpression	"erealloc ( * buffer , * size )"		1968898	1					
ANR	1968943	Callee	erealloc		1968898	0					
ANR	1968944	Identifier	erealloc		1968898	0					
ANR	1968945	ArgumentList	* buffer		1968898	1					
ANR	1968946	Argument	* buffer		1968898	0					
ANR	1968947	UnaryOperationExpression	* buffer		1968898	0					
ANR	1968948	UnaryOperator	*		1968898	0					
ANR	1968949	Identifier	buffer		1968898	1					
ANR	1968950	Argument	* size		1968898	1					
ANR	1968951	UnaryOperationExpression	* size		1968898	0					
ANR	1968952	UnaryOperator	*		1968898	0					
ANR	1968953	Identifier	size		1968898	1					
ANR	1968954	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: appending '%c', pos=\\n"" , add , * pos ) )"	67:1:2288:2348	1968898	1	True				
ANR	1968955	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: appending '%c', pos=\\n"" , add , * pos ) )"		1968898	0					
ANR	1968956	Callee	PRINTF_DEBUG		1968898	0					
ANR	1968957	Identifier	PRINTF_DEBUG		1968898	0					
ANR	1968958	ArgumentList	"""sprintf: appending '%c', pos=\\n"" , add , * pos"		1968898	1					
ANR	1968959	Argument	"""sprintf: appending '%c', pos=\\n"" , add , * pos"		1968898	0					
ANR	1968960	Expression	"""sprintf: appending '%c', pos=\\n"" , add , * pos"		1968898	0					
ANR	1968961	PrimaryExpression	"""sprintf: appending '%c', pos=\\n"""		1968898	0					
ANR	1968962	Expression	"add , * pos"		1968898	1					
ANR	1968963	Identifier	add		1968898	0					
ANR	1968964	UnaryOperationExpression	* pos		1968898	1					
ANR	1968965	UnaryOperator	*		1968898	0					
ANR	1968966	Identifier	pos		1968898	1					
ANR	1968967	ExpressionStatement	( * buffer ) [ ( * pos ) ++ ] = add	68:1:2351:2376	1968898	2	True				
ANR	1968968	AssignmentExpression	( * buffer ) [ ( * pos ) ++ ] = add		1968898	0		=			
ANR	1968969	ArrayIndexing	( * buffer ) [ ( * pos ) ++ ]		1968898	0					
ANR	1968970	UnaryOperationExpression	* buffer		1968898	0					
ANR	1968971	UnaryOperator	*		1968898	0					
ANR	1968972	Identifier	buffer		1968898	1					
ANR	1968973	PostIncDecOperationExpression	( * pos ) ++		1968898	1					
ANR	1968974	UnaryOperationExpression	* pos		1968898	0					
ANR	1968975	UnaryOperator	*		1968898	0					
ANR	1968976	Identifier	pos		1968898	1					
ANR	1968977	IncDec	++		1968898	1					
ANR	1968978	Identifier	add		1968898	1					
ANR	1968979	ReturnType	inline static void		1968898	1					
ANR	1968980	Identifier	php_sprintf_appendchar		1968898	2					
ANR	1968981	ParameterList	"char * * buffer , int * pos , int * size , char add TSRMLS_DC"		1968898	3					
ANR	1968982	Parameter	char * * buffer	60:23:2042:2054	1968898	0	True				
ANR	1968983	ParameterType	char * *		1968898	0					
ANR	1968984	Identifier	buffer		1968898	1					
ANR	1968985	Parameter	int * pos	60:38:2057:2064	1968898	1	True				
ANR	1968986	ParameterType	int *		1968898	0					
ANR	1968987	Identifier	pos		1968898	1					
ANR	1968988	Parameter	int * size	60:48:2067:2075	1968898	2	True				
ANR	1968989	ParameterType	int *		1968898	0					
ANR	1968990	Identifier	size		1968898	1					
ANR	1968991	Parameter	char add TSRMLS_DC	60:59:2078:2095	1968898	3	True				
ANR	1968992	ParameterType	char add		1968898	0					
ANR	1968993	Identifier	TSRMLS_DC		1968898	1					
ANR	1968994	CFGEntryNode	ENTRY		1968898		True				
ANR	1968995	CFGExitNode	EXIT		1968898		True				
ANR	1968996	Symbol	add		1968898						
ANR	1968997	Symbol	* buffer		1968898						
ANR	1968998	Symbol	* * buffer		1968898						
ANR	1968999	Symbol	* size		1968898						
ANR	1969000	Symbol	TSRMLS_C		1968898						
ANR	1969001	Symbol	size		1968898						
ANR	1969002	Symbol	pos		1968898						
ANR	1969003	Symbol	get_active_function_name		1968898						
ANR	1969004	Symbol	buffer		1968898						
ANR	1969005	Symbol	TSRMLS_DC		1968898						
ANR	1969006	Symbol	erealloc		1968898						
ANR	1969007	Symbol	* pos		1968898						
ANR	1969008	Function	php_sprintf_appendstring	73:0:2427:3877							
ANR	1969009	FunctionDef	"php_sprintf_appendstring (char * * buffer , int * pos , int * size , char * add , int min_width , int max_width , char padding , int alignment , int len , int neg , int expprec , int always_sign)"		1969008	0					
ANR	1969010	CompoundStatement		77:0:2643:3877	1969008	0					
ANR	1969011	Statement	register	78:1:2646:2653	1969008	0	True				
ANR	1969012	IdentifierDeclStatement	int npad ;	78:10:2655:2663	1969008	1	True				
ANR	1969013	IdentifierDecl	npad		1969008	0					
ANR	1969014	IdentifierDeclType	int		1969008	0					
ANR	1969015	Identifier	npad		1969008	1					
ANR	1969016	IdentifierDeclStatement	int req_size ;	79:1:2666:2678	1969008	2	True				
ANR	1969017	IdentifierDecl	req_size		1969008	0					
ANR	1969018	IdentifierDeclType	int		1969008	0					
ANR	1969019	Identifier	req_size		1969008	1					
ANR	1969020	IdentifierDeclStatement	int copy_len ;	80:1:2681:2693	1969008	3	True				
ANR	1969021	IdentifierDecl	copy_len		1969008	0					
ANR	1969022	IdentifierDeclType	int		1969008	0					
ANR	1969023	Identifier	copy_len		1969008	1					
ANR	1969024	IdentifierDeclStatement	int m_width ;	81:1:2696:2707	1969008	4	True				
ANR	1969025	IdentifierDecl	m_width		1969008	0					
ANR	1969026	IdentifierDeclType	int		1969008	0					
ANR	1969027	Identifier	m_width		1969008	1					
ANR	1969028	ExpressionStatement	"copy_len = ( expprec ? MIN ( max_width , len ) : len )"	83:1:2711:2759	1969008	5	True				
ANR	1969029	AssignmentExpression	"copy_len = ( expprec ? MIN ( max_width , len ) : len )"		1969008	0		=			
ANR	1969030	Identifier	copy_len		1969008	0					
ANR	1969031	ConditionalExpression	"expprec ? MIN ( max_width , len ) : len"		1969008	1					
ANR	1969032	Condition	expprec		1969008	0					
ANR	1969033	Identifier	expprec		1969008	0					
ANR	1969034	CallExpression	"MIN ( max_width , len )"		1969008	1					
ANR	1969035	Callee	MIN		1969008	0					
ANR	1969036	Identifier	MIN		1969008	0					
ANR	1969037	ArgumentList	max_width		1969008	1					
ANR	1969038	Argument	max_width		1969008	0					
ANR	1969039	Identifier	max_width		1969008	0					
ANR	1969040	Argument	len		1969008	1					
ANR	1969041	Identifier	len		1969008	0					
ANR	1969042	Identifier	len		1969008	2					
ANR	1969043	ExpressionStatement	npad = min_width - copy_len	84:1:2762:2789	1969008	6	True				
ANR	1969044	AssignmentExpression	npad = min_width - copy_len		1969008	0		=			
ANR	1969045	Identifier	npad		1969008	0					
ANR	1969046	AdditiveExpression	min_width - copy_len		1969008	1		-			
ANR	1969047	Identifier	min_width		1969008	0					
ANR	1969048	Identifier	copy_len		1969008	1					
ANR	1969049	IfStatement	if ( npad < 0 )		1969008	7					
ANR	1969050	Condition	npad < 0	86:5:2797:2804	1969008	0	True				
ANR	1969051	RelationalExpression	npad < 0		1969008	0		<			
ANR	1969052	Identifier	npad		1969008	0					
ANR	1969053	PrimaryExpression	0		1969008	1					
ANR	1969054	CompoundStatement		10:15:163:163	1969008	1					
ANR	1969055	ExpressionStatement	npad = 0	87:2:2811:2819	1969008	0	True				
ANR	1969056	AssignmentExpression	npad = 0		1969008	0		=			
ANR	1969057	Identifier	npad		1969008	0					
ANR	1969058	PrimaryExpression	0		1969008	1					
ANR	1969059	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: appendstring(%x, %d, %d, \\""%s\\"", %d, '%c', %d)\\n"" , * buffer , * pos , * size , add , min_width , padding , alignment ) )"	90:1:2827:2966	1969008	8	True				
ANR	1969060	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: appendstring(%x, %d, %d, \\""%s\\"", %d, '%c', %d)\\n"" , * buffer , * pos , * size , add , min_width , padding , alignment ) )"		1969008	0					
ANR	1969061	Callee	PRINTF_DEBUG		1969008	0					
ANR	1969062	Identifier	PRINTF_DEBUG		1969008	0					
ANR	1969063	ArgumentList	"""sprintf: appendstring(%x, %d, %d, \\""%s\\"", %d, '%c', %d)\\n"" , * buffer , * pos , * size , add , min_width , padding , alignment"		1969008	1					
ANR	1969064	Argument	"""sprintf: appendstring(%x, %d, %d, \\""%s\\"", %d, '%c', %d)\\n"" , * buffer , * pos , * size , add , min_width , padding , alignment"		1969008	0					
ANR	1969065	Expression	"""sprintf: appendstring(%x, %d, %d, \\""%s\\"", %d, '%c', %d)\\n"" , * buffer , * pos , * size , add , min_width , padding , alignment"		1969008	0					
ANR	1969066	PrimaryExpression	"""sprintf: appendstring(%x, %d, %d, \\""%s\\"", %d, '%c', %d)\\n"""		1969008	0					
ANR	1969067	Expression	"* buffer , * pos , * size , add , min_width , padding , alignment"		1969008	1					
ANR	1969068	UnaryOperationExpression	* buffer		1969008	0					
ANR	1969069	UnaryOperator	*		1969008	0					
ANR	1969070	Identifier	buffer		1969008	1					
ANR	1969071	Expression	"* pos , * size , add , min_width , padding , alignment"		1969008	1					
ANR	1969072	UnaryOperationExpression	* pos		1969008	0					
ANR	1969073	UnaryOperator	*		1969008	0					
ANR	1969074	Identifier	pos		1969008	1					
ANR	1969075	Expression	"* size , add , min_width , padding , alignment"		1969008	1					
ANR	1969076	UnaryOperationExpression	* size		1969008	0					
ANR	1969077	UnaryOperator	*		1969008	0					
ANR	1969078	Identifier	size		1969008	1					
ANR	1969079	Expression	"add , min_width , padding , alignment"		1969008	1					
ANR	1969080	Identifier	add		1969008	0					
ANR	1969081	Expression	"min_width , padding , alignment"		1969008	1					
ANR	1969082	Identifier	min_width		1969008	0					
ANR	1969083	Expression	"padding , alignment"		1969008	1					
ANR	1969084	Identifier	padding		1969008	0					
ANR	1969085	Identifier	alignment		1969008	1					
ANR	1969086	ExpressionStatement	"m_width = MAX ( min_width , copy_len )"	92:1:2969:3003	1969008	9	True				
ANR	1969087	AssignmentExpression	"m_width = MAX ( min_width , copy_len )"		1969008	0		=			
ANR	1969088	Identifier	m_width		1969008	0					
ANR	1969089	CallExpression	"MAX ( min_width , copy_len )"		1969008	1					
ANR	1969090	Callee	MAX		1969008	0					
ANR	1969091	Identifier	MAX		1969008	0					
ANR	1969092	ArgumentList	min_width		1969008	1					
ANR	1969093	Argument	min_width		1969008	0					
ANR	1969094	Identifier	min_width		1969008	0					
ANR	1969095	Argument	copy_len		1969008	1					
ANR	1969096	Identifier	copy_len		1969008	0					
ANR	1969097	IfStatement	if ( m_width > INT_MAX - * pos - 1 )		1969008	10					
ANR	1969098	Condition	m_width > INT_MAX - * pos - 1	94:4:3010:3037	1969008	0	True				
ANR	1969099	RelationalExpression	m_width > INT_MAX - * pos - 1		1969008	0		>			
ANR	1969100	Identifier	m_width		1969008	0					
ANR	1969101	AdditiveExpression	INT_MAX - * pos - 1		1969008	1		-			
ANR	1969102	Identifier	INT_MAX		1969008	0					
ANR	1969103	AdditiveExpression	* pos - 1		1969008	1		-			
ANR	1969104	UnaryOperationExpression	* pos		1969008	0					
ANR	1969105	UnaryOperator	*		1969008	0					
ANR	1969106	Identifier	pos		1969008	1					
ANR	1969107	PrimaryExpression	1		1969008	1					
ANR	1969108	CompoundStatement		18:34:396:396	1969008	1					
ANR	1969109	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Field width %d is too long"" , m_width )"	95:2:3044:3111	1969008	0	True				
ANR	1969110	CallExpression	"zend_error_noreturn ( E_ERROR , ""Field width %d is too long"" , m_width )"		1969008	0					
ANR	1969111	Callee	zend_error_noreturn		1969008	0					
ANR	1969112	Identifier	zend_error_noreturn		1969008	0					
ANR	1969113	ArgumentList	E_ERROR		1969008	1					
ANR	1969114	Argument	E_ERROR		1969008	0					
ANR	1969115	Identifier	E_ERROR		1969008	0					
ANR	1969116	Argument	"""Field width %d is too long"""		1969008	1					
ANR	1969117	PrimaryExpression	"""Field width %d is too long"""		1969008	0					
ANR	1969118	Argument	m_width		1969008	2					
ANR	1969119	Identifier	m_width		1969008	0					
ANR	1969120	ExpressionStatement	req_size = * pos + m_width + 1	98:1:3118:3147	1969008	11	True				
ANR	1969121	AssignmentExpression	req_size = * pos + m_width + 1		1969008	0		=			
ANR	1969122	Identifier	req_size		1969008	0					
ANR	1969123	AdditiveExpression	* pos + m_width + 1		1969008	1		+			
ANR	1969124	UnaryOperationExpression	* pos		1969008	0					
ANR	1969125	UnaryOperator	*		1969008	0					
ANR	1969126	Identifier	pos		1969008	1					
ANR	1969127	AdditiveExpression	m_width + 1		1969008	1		+			
ANR	1969128	Identifier	m_width		1969008	0					
ANR	1969129	PrimaryExpression	1		1969008	1					
ANR	1969130	IfStatement	if ( req_size > * size )		1969008	12					
ANR	1969131	Condition	req_size > * size	100:5:3155:3170	1969008	0	True				
ANR	1969132	RelationalExpression	req_size > * size		1969008	0		>			
ANR	1969133	Identifier	req_size		1969008	0					
ANR	1969134	UnaryOperationExpression	* size		1969008	1					
ANR	1969135	UnaryOperator	*		1969008	0					
ANR	1969136	Identifier	size		1969008	1					
ANR	1969137	CompoundStatement		24:23:529:529	1969008	1					
ANR	1969138	WhileStatement	while ( req_size > * size )		1969008	0					
ANR	1969139	Condition	req_size > * size	101:9:3184:3199	1969008	0	True				
ANR	1969140	RelationalExpression	req_size > * size		1969008	0		>			
ANR	1969141	Identifier	req_size		1969008	0					
ANR	1969142	UnaryOperationExpression	* size		1969008	1					
ANR	1969143	UnaryOperator	*		1969008	0					
ANR	1969144	Identifier	size		1969008	1					
ANR	1969145	CompoundStatement		25:27:558:558	1969008	1					
ANR	1969146	IfStatement	if ( * size > INT_MAX / 2 )		1969008	0					
ANR	1969147	Condition	* size > INT_MAX / 2	102:6:3210:3226	1969008	0	True				
ANR	1969148	RelationalExpression	* size > INT_MAX / 2		1969008	0		>			
ANR	1969149	UnaryOperationExpression	* size		1969008	0					
ANR	1969150	UnaryOperator	*		1969008	0					
ANR	1969151	Identifier	size		1969008	1					
ANR	1969152	MultiplicativeExpression	INT_MAX / 2		1969008	1		/			
ANR	1969153	Identifier	INT_MAX		1969008	0					
ANR	1969154	PrimaryExpression	2		1969008	1					
ANR	1969155	CompoundStatement		26:25:585:585	1969008	1					
ANR	1969156	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Field width %d is too long"" , req_size )"	103:4:3235:3303	1969008	0	True				
ANR	1969157	CallExpression	"zend_error_noreturn ( E_ERROR , ""Field width %d is too long"" , req_size )"		1969008	0					
ANR	1969158	Callee	zend_error_noreturn		1969008	0					
ANR	1969159	Identifier	zend_error_noreturn		1969008	0					
ANR	1969160	ArgumentList	E_ERROR		1969008	1					
ANR	1969161	Argument	E_ERROR		1969008	0					
ANR	1969162	Identifier	E_ERROR		1969008	0					
ANR	1969163	Argument	"""Field width %d is too long"""		1969008	1					
ANR	1969164	PrimaryExpression	"""Field width %d is too long"""		1969008	0					
ANR	1969165	Argument	req_size		1969008	2					
ANR	1969166	Identifier	req_size		1969008	0					
ANR	1969167	ExpressionStatement	* size <<= 1	105:3:3314:3325	1969008	1	True				
ANR	1969168	AssignmentExpression	* size <<= 1		1969008	0		<<=			
ANR	1969169	UnaryOperationExpression	* size		1969008	0					
ANR	1969170	UnaryOperator	*		1969008	0					
ANR	1969171	Identifier	size		1969008	1					
ANR	1969172	PrimaryExpression	1		1969008	1					
ANR	1969173	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf ereallocing buffer to %d bytes\\n"" , * size ) )"	107:2:3333:3398	1969008	1	True				
ANR	1969174	CallExpression	"PRINTF_DEBUG ( ( ""sprintf ereallocing buffer to %d bytes\\n"" , * size ) )"		1969008	0					
ANR	1969175	Callee	PRINTF_DEBUG		1969008	0					
ANR	1969176	Identifier	PRINTF_DEBUG		1969008	0					
ANR	1969177	ArgumentList	"""sprintf ereallocing buffer to %d bytes\\n"" , * size"		1969008	1					
ANR	1969178	Argument	"""sprintf ereallocing buffer to %d bytes\\n"" , * size"		1969008	0					
ANR	1969179	Expression	"""sprintf ereallocing buffer to %d bytes\\n"" , * size"		1969008	0					
ANR	1969180	PrimaryExpression	"""sprintf ereallocing buffer to %d bytes\\n"""		1969008	0					
ANR	1969181	UnaryOperationExpression	* size		1969008	1					
ANR	1969182	UnaryOperator	*		1969008	0					
ANR	1969183	Identifier	size		1969008	1					
ANR	1969184	ExpressionStatement	"* buffer = erealloc ( * buffer , * size )"	108:2:3402:3436	1969008	2	True				
ANR	1969185	AssignmentExpression	"* buffer = erealloc ( * buffer , * size )"		1969008	0		=			
ANR	1969186	UnaryOperationExpression	* buffer		1969008	0					
ANR	1969187	UnaryOperator	*		1969008	0					
ANR	1969188	Identifier	buffer		1969008	1					
ANR	1969189	CallExpression	"erealloc ( * buffer , * size )"		1969008	1					
ANR	1969190	Callee	erealloc		1969008	0					
ANR	1969191	Identifier	erealloc		1969008	0					
ANR	1969192	ArgumentList	* buffer		1969008	1					
ANR	1969193	Argument	* buffer		1969008	0					
ANR	1969194	UnaryOperationExpression	* buffer		1969008	0					
ANR	1969195	UnaryOperator	*		1969008	0					
ANR	1969196	Identifier	buffer		1969008	1					
ANR	1969197	Argument	* size		1969008	1					
ANR	1969198	UnaryOperationExpression	* size		1969008	0					
ANR	1969199	UnaryOperator	*		1969008	0					
ANR	1969200	Identifier	size		1969008	1					
ANR	1969201	IfStatement	if ( alignment == ALIGN_RIGHT )		1969008	13					
ANR	1969202	Condition	alignment == ALIGN_RIGHT	110:5:3446:3469	1969008	0	True				
ANR	1969203	EqualityExpression	alignment == ALIGN_RIGHT		1969008	0		==			
ANR	1969204	Identifier	alignment		1969008	0					
ANR	1969205	Identifier	ALIGN_RIGHT		1969008	1					
ANR	1969206	CompoundStatement		34:31:828:828	1969008	1					
ANR	1969207	IfStatement	if ( ( neg || always_sign ) && padding == '0' )		1969008	0					
ANR	1969208	Condition	( neg || always_sign ) && padding == '0'	111:6:3480:3515	1969008	0	True				
ANR	1969209	AndExpression	( neg || always_sign ) && padding == '0'		1969008	0		&&			
ANR	1969210	OrExpression	neg || always_sign		1969008	0		||			
ANR	1969211	Identifier	neg		1969008	0					
ANR	1969212	Identifier	always_sign		1969008	1					
ANR	1969213	EqualityExpression	padding == '0'		1969008	1		==			
ANR	1969214	Identifier	padding		1969008	0					
ANR	1969215	PrimaryExpression	'0'		1969008	1					
ANR	1969216	CompoundStatement		35:44:874:874	1969008	1					
ANR	1969217	ExpressionStatement	( * buffer ) [ ( * pos ) ++ ] = ( neg ) ? '-' : '+'	112:3:3523:3562	1969008	0	True				
ANR	1969218	AssignmentExpression	( * buffer ) [ ( * pos ) ++ ] = ( neg ) ? '-' : '+'		1969008	0		=			
ANR	1969219	ArrayIndexing	( * buffer ) [ ( * pos ) ++ ]		1969008	0					
ANR	1969220	UnaryOperationExpression	* buffer		1969008	0					
ANR	1969221	UnaryOperator	*		1969008	0					
ANR	1969222	Identifier	buffer		1969008	1					
ANR	1969223	PostIncDecOperationExpression	( * pos ) ++		1969008	1					
ANR	1969224	UnaryOperationExpression	* pos		1969008	0					
ANR	1969225	UnaryOperator	*		1969008	0					
ANR	1969226	Identifier	pos		1969008	1					
ANR	1969227	IncDec	++		1969008	1					
ANR	1969228	ConditionalExpression	( neg ) ? '-' : '+'		1969008	1					
ANR	1969229	Condition	neg		1969008	0					
ANR	1969230	Identifier	neg		1969008	0					
ANR	1969231	PrimaryExpression	'-'		1969008	1					
ANR	1969232	PrimaryExpression	'+'		1969008	2					
ANR	1969233	ExpressionStatement	add ++	113:3:3567:3572	1969008	1	True				
ANR	1969234	PostIncDecOperationExpression	add ++		1969008	0					
ANR	1969235	Identifier	add		1969008	0					
ANR	1969236	IncDec	++		1969008	1					
ANR	1969237	ExpressionStatement	len --	114:3:3577:3582	1969008	2	True				
ANR	1969238	PostIncDecOperationExpression	len --		1969008	0					
ANR	1969239	Identifier	len		1969008	0					
ANR	1969240	IncDec	--		1969008	1					
ANR	1969241	ExpressionStatement	copy_len --	115:3:3587:3597	1969008	3	True				
ANR	1969242	PostIncDecOperationExpression	copy_len --		1969008	0					
ANR	1969243	Identifier	copy_len		1969008	0					
ANR	1969244	IncDec	--		1969008	1					
ANR	1969245	WhileStatement	while ( npad -- > 0 )		1969008	1					
ANR	1969246	Condition	npad -- > 0	117:9:3612:3621	1969008	0	True				
ANR	1969247	RelationalExpression	npad -- > 0		1969008	0		>			
ANR	1969248	PostIncDecOperationExpression	npad --		1969008	0					
ANR	1969249	Identifier	npad		1969008	0					
ANR	1969250	IncDec	--		1969008	1					
ANR	1969251	PrimaryExpression	0		1969008	1					
ANR	1969252	CompoundStatement		41:21:980:980	1969008	1					
ANR	1969253	ExpressionStatement	( * buffer ) [ ( * pos ) ++ ] = padding	118:3:3629:3658	1969008	0	True				
ANR	1969254	AssignmentExpression	( * buffer ) [ ( * pos ) ++ ] = padding		1969008	0		=			
ANR	1969255	ArrayIndexing	( * buffer ) [ ( * pos ) ++ ]		1969008	0					
ANR	1969256	UnaryOperationExpression	* buffer		1969008	0					
ANR	1969257	UnaryOperator	*		1969008	0					
ANR	1969258	Identifier	buffer		1969008	1					
ANR	1969259	PostIncDecOperationExpression	( * pos ) ++		1969008	1					
ANR	1969260	UnaryOperationExpression	* pos		1969008	0					
ANR	1969261	UnaryOperator	*		1969008	0					
ANR	1969262	Identifier	pos		1969008	1					
ANR	1969263	IncDec	++		1969008	1					
ANR	1969264	Identifier	padding		1969008	1					
ANR	1969265	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: appending \\""%s\\""\\n"" , add ) )"	121:1:3668:3718	1969008	14	True				
ANR	1969266	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: appending \\""%s\\""\\n"" , add ) )"		1969008	0					
ANR	1969267	Callee	PRINTF_DEBUG		1969008	0					
ANR	1969268	Identifier	PRINTF_DEBUG		1969008	0					
ANR	1969269	ArgumentList	"""sprintf: appending \\""%s\\""\\n"" , add"		1969008	1					
ANR	1969270	Argument	"""sprintf: appending \\""%s\\""\\n"" , add"		1969008	0					
ANR	1969271	Expression	"""sprintf: appending \\""%s\\""\\n"" , add"		1969008	0					
ANR	1969272	PrimaryExpression	"""sprintf: appending \\""%s\\""\\n"""		1969008	0					
ANR	1969273	Identifier	add		1969008	1					
ANR	1969274	ExpressionStatement	"memcpy ( & ( * buffer ) [ * pos ] , add , copy_len + 1 )"	122:1:3721:3764	1969008	15	True				
ANR	1969275	CallExpression	"memcpy ( & ( * buffer ) [ * pos ] , add , copy_len + 1 )"		1969008	0					
ANR	1969276	Callee	memcpy		1969008	0					
ANR	1969277	Identifier	memcpy		1969008	0					
ANR	1969278	ArgumentList	& ( * buffer ) [ * pos ]		1969008	1					
ANR	1969279	Argument	& ( * buffer ) [ * pos ]		1969008	0					
ANR	1969280	UnaryOperationExpression	& ( * buffer ) [ * pos ]		1969008	0					
ANR	1969281	UnaryOperator	&		1969008	0					
ANR	1969282	ArrayIndexing	( * buffer ) [ * pos ]		1969008	1					
ANR	1969283	UnaryOperationExpression	* buffer		1969008	0					
ANR	1969284	UnaryOperator	*		1969008	0					
ANR	1969285	Identifier	buffer		1969008	1					
ANR	1969286	UnaryOperationExpression	* pos		1969008	1					
ANR	1969287	UnaryOperator	*		1969008	0					
ANR	1969288	Identifier	pos		1969008	1					
ANR	1969289	Argument	add		1969008	1					
ANR	1969290	Identifier	add		1969008	0					
ANR	1969291	Argument	copy_len + 1		1969008	2					
ANR	1969292	AdditiveExpression	copy_len + 1		1969008	0		+			
ANR	1969293	Identifier	copy_len		1969008	0					
ANR	1969294	PrimaryExpression	1		1969008	1					
ANR	1969295	ExpressionStatement	* pos += copy_len	123:1:3767:3783	1969008	16	True				
ANR	1969296	AssignmentExpression	* pos += copy_len		1969008	0		+=			
ANR	1969297	UnaryOperationExpression	* pos		1969008	0					
ANR	1969298	UnaryOperator	*		1969008	0					
ANR	1969299	Identifier	pos		1969008	1					
ANR	1969300	Identifier	copy_len		1969008	1					
ANR	1969301	IfStatement	if ( alignment == ALIGN_LEFT )		1969008	17					
ANR	1969302	Condition	alignment == ALIGN_LEFT	124:5:3790:3812	1969008	0	True				
ANR	1969303	EqualityExpression	alignment == ALIGN_LEFT		1969008	0		==			
ANR	1969304	Identifier	alignment		1969008	0					
ANR	1969305	Identifier	ALIGN_LEFT		1969008	1					
ANR	1969306	CompoundStatement		48:30:1171:1171	1969008	1					
ANR	1969307	WhileStatement	while ( npad -- )		1969008	0					
ANR	1969308	Condition	npad --	125:9:3826:3831	1969008	0	True				
ANR	1969309	PostIncDecOperationExpression	npad --		1969008	0					
ANR	1969310	Identifier	npad		1969008	0					
ANR	1969311	IncDec	--		1969008	1					
ANR	1969312	CompoundStatement		49:17:1190:1190	1969008	1					
ANR	1969313	ExpressionStatement	( * buffer ) [ ( * pos ) ++ ] = padding	126:3:3839:3868	1969008	0	True				
ANR	1969314	AssignmentExpression	( * buffer ) [ ( * pos ) ++ ] = padding		1969008	0		=			
ANR	1969315	ArrayIndexing	( * buffer ) [ ( * pos ) ++ ]		1969008	0					
ANR	1969316	UnaryOperationExpression	* buffer		1969008	0					
ANR	1969317	UnaryOperator	*		1969008	0					
ANR	1969318	Identifier	buffer		1969008	1					
ANR	1969319	PostIncDecOperationExpression	( * pos ) ++		1969008	1					
ANR	1969320	UnaryOperationExpression	* pos		1969008	0					
ANR	1969321	UnaryOperator	*		1969008	0					
ANR	1969322	Identifier	pos		1969008	1					
ANR	1969323	IncDec	++		1969008	1					
ANR	1969324	Identifier	padding		1969008	1					
ANR	1969325	ReturnType	inline static void		1969008	1					
ANR	1969326	Identifier	php_sprintf_appendstring		1969008	2					
ANR	1969327	ParameterList	"char * * buffer , int * pos , int * size , char * add , int min_width , int max_width , char padding , int alignment , int len , int neg , int expprec , int always_sign"		1969008	3					
ANR	1969328	Parameter	char * * buffer	74:25:2471:2483	1969008	0	True				
ANR	1969329	ParameterType	char * *		1969008	0					
ANR	1969330	Identifier	buffer		1969008	1					
ANR	1969331	Parameter	int * pos	74:40:2486:2493	1969008	1	True				
ANR	1969332	ParameterType	int *		1969008	0					
ANR	1969333	Identifier	pos		1969008	1					
ANR	1969334	Parameter	int * size	74:50:2496:2504	1969008	2	True				
ANR	1969335	ParameterType	int *		1969008	0					
ANR	1969336	Identifier	size		1969008	1					
ANR	1969337	Parameter	char * add	74:61:2507:2515	1969008	3	True				
ANR	1969338	ParameterType	char *		1969008	0					
ANR	1969339	Identifier	add		1969008	1					
ANR	1969340	Parameter	int min_width	75:9:2527:2539	1969008	4	True				
ANR	1969341	ParameterType	int		1969008	0					
ANR	1969342	Identifier	min_width		1969008	1					
ANR	1969343	Parameter	int max_width	75:24:2542:2554	1969008	5	True				
ANR	1969344	ParameterType	int		1969008	0					
ANR	1969345	Identifier	max_width		1969008	1					
ANR	1969346	Parameter	char padding	75:39:2557:2568	1969008	6	True				
ANR	1969347	ParameterType	char		1969008	0					
ANR	1969348	Identifier	padding		1969008	1					
ANR	1969349	Parameter	int alignment	76:9:2580:2592	1969008	7	True				
ANR	1969350	ParameterType	int		1969008	0					
ANR	1969351	Identifier	alignment		1969008	1					
ANR	1969352	Parameter	int len	76:24:2595:2601	1969008	8	True				
ANR	1969353	ParameterType	int		1969008	0					
ANR	1969354	Identifier	len		1969008	1					
ANR	1969355	Parameter	int neg	76:33:2604:2610	1969008	9	True				
ANR	1969356	ParameterType	int		1969008	0					
ANR	1969357	Identifier	neg		1969008	1					
ANR	1969358	Parameter	int expprec	76:42:2613:2623	1969008	10	True				
ANR	1969359	ParameterType	int		1969008	0					
ANR	1969360	Identifier	expprec		1969008	1					
ANR	1969361	Parameter	int always_sign	76:55:2626:2640	1969008	11	True				
ANR	1969362	ParameterType	int		1969008	0					
ANR	1969363	Identifier	always_sign		1969008	1					
ANR	1969364	CFGEntryNode	ENTRY		1969008		True				
ANR	1969365	CFGExitNode	EXIT		1969008		True				
ANR	1969366	Symbol	* * buffer		1969008						
ANR	1969367	Symbol	expprec		1969008						
ANR	1969368	Symbol	MAX		1969008						
ANR	1969369	Symbol	max_width		1969008						
ANR	1969370	Symbol	neg		1969008						
ANR	1969371	Symbol	* size		1969008						
ANR	1969372	Symbol	len		1969008						
ANR	1969373	Symbol	pos		1969008						
ANR	1969374	Symbol	m_width		1969008						
ANR	1969375	Symbol	npad		1969008						
ANR	1969376	Symbol	copy_len		1969008						
ANR	1969377	Symbol	INT_MAX		1969008						
ANR	1969378	Symbol	buffer		1969008						
ANR	1969379	Symbol	ALIGN_RIGHT		1969008						
ANR	1969380	Symbol	req_size		1969008						
ANR	1969381	Symbol	erealloc		1969008						
ANR	1969382	Symbol	ALIGN_LEFT		1969008						
ANR	1969383	Symbol	min_width		1969008						
ANR	1969384	Symbol	add		1969008						
ANR	1969385	Symbol	padding		1969008						
ANR	1969386	Symbol	* buffer		1969008						
ANR	1969387	Symbol	always_sign		1969008						
ANR	1969388	Symbol	MIN		1969008						
ANR	1969389	Symbol	E_ERROR		1969008						
ANR	1969390	Symbol	size		1969008						
ANR	1969391	Symbol	alignment		1969008						
ANR	1969392	Symbol	* pos		1969008						
ANR	1969393	Function	php_sprintf_appendint	133:0:3923:5024							
ANR	1969394	FunctionDef	"php_sprintf_appendint (char * * buffer , int * pos , int * size , long number , int width , char padding , int alignment , int always_sign)"		1969393	0					
ANR	1969395	CompoundStatement		137:0:4083:5024	1969393	0					
ANR	1969396	IdentifierDeclStatement	char numbuf [ NUM_BUF_SIZE ] ;	138:1:4086:4111	1969393	0	True				
ANR	1969397	IdentifierDecl	numbuf [ NUM_BUF_SIZE ]		1969393	0					
ANR	1969398	IdentifierDeclType	char [ NUM_BUF_SIZE ]		1969393	0					
ANR	1969399	Identifier	numbuf		1969393	1					
ANR	1969400	Identifier	NUM_BUF_SIZE		1969393	2					
ANR	1969401	Statement	register	139:1:4114:4121	1969393	1	True				
ANR	1969402	IdentifierDeclStatement	"unsigned long magn , nmagn ;"	139:10:4123:4148	1969393	2	True				
ANR	1969403	IdentifierDecl	magn		1969393	0					
ANR	1969404	IdentifierDeclType	unsigned long		1969393	0					
ANR	1969405	Identifier	magn		1969393	1					
ANR	1969406	IdentifierDecl	nmagn		1969393	1					
ANR	1969407	IdentifierDeclType	unsigned long		1969393	0					
ANR	1969408	Identifier	nmagn		1969393	1					
ANR	1969409	Statement	register	140:1:4151:4158	1969393	3	True				
ANR	1969410	IdentifierDeclStatement	"unsigned int i = NUM_BUF_SIZE - 1 , neg = 0 ;"	140:10:4160:4202	1969393	4	True				
ANR	1969411	IdentifierDecl	i = NUM_BUF_SIZE - 1		1969393	0					
ANR	1969412	IdentifierDeclType	unsigned int		1969393	0					
ANR	1969413	Identifier	i		1969393	1					
ANR	1969414	AssignmentExpression	i = NUM_BUF_SIZE - 1		1969393	2		=			
ANR	1969415	Identifier	i		1969393	0					
ANR	1969416	AdditiveExpression	NUM_BUF_SIZE - 1		1969393	1		-			
ANR	1969417	Identifier	NUM_BUF_SIZE		1969393	0					
ANR	1969418	PrimaryExpression	1		1969393	1					
ANR	1969419	IdentifierDecl	neg = 0		1969393	1					
ANR	1969420	IdentifierDeclType	unsigned int		1969393	0					
ANR	1969421	Identifier	neg		1969393	1					
ANR	1969422	AssignmentExpression	neg = 0		1969393	2		=			
ANR	1969423	Identifier	neg		1969393	0					
ANR	1969424	PrimaryExpression	0		1969393	1					
ANR	1969425	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: appendint(%x, %x, %x, %d, %d, '%c', %d)\\n"" , * buffer , pos , size , number , width , padding , alignment ) )"	142:1:4206:4335	1969393	5	True				
ANR	1969426	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: appendint(%x, %x, %x, %d, %d, '%c', %d)\\n"" , * buffer , pos , size , number , width , padding , alignment ) )"		1969393	0					
ANR	1969427	Callee	PRINTF_DEBUG		1969393	0					
ANR	1969428	Identifier	PRINTF_DEBUG		1969393	0					
ANR	1969429	ArgumentList	"""sprintf: appendint(%x, %x, %x, %d, %d, '%c', %d)\\n"" , * buffer , pos , size , number , width , padding , alignment"		1969393	1					
ANR	1969430	Argument	"""sprintf: appendint(%x, %x, %x, %d, %d, '%c', %d)\\n"" , * buffer , pos , size , number , width , padding , alignment"		1969393	0					
ANR	1969431	Expression	"""sprintf: appendint(%x, %x, %x, %d, %d, '%c', %d)\\n"" , * buffer , pos , size , number , width , padding , alignment"		1969393	0					
ANR	1969432	PrimaryExpression	"""sprintf: appendint(%x, %x, %x, %d, %d, '%c', %d)\\n"""		1969393	0					
ANR	1969433	Expression	"* buffer , pos , size , number , width , padding , alignment"		1969393	1					
ANR	1969434	UnaryOperationExpression	* buffer		1969393	0					
ANR	1969435	UnaryOperator	*		1969393	0					
ANR	1969436	Identifier	buffer		1969393	1					
ANR	1969437	Expression	"pos , size , number , width , padding , alignment"		1969393	1					
ANR	1969438	Identifier	pos		1969393	0					
ANR	1969439	Expression	"size , number , width , padding , alignment"		1969393	1					
ANR	1969440	Identifier	size		1969393	0					
ANR	1969441	Expression	"number , width , padding , alignment"		1969393	1					
ANR	1969442	Identifier	number		1969393	0					
ANR	1969443	Expression	"width , padding , alignment"		1969393	1					
ANR	1969444	Identifier	width		1969393	0					
ANR	1969445	Expression	"padding , alignment"		1969393	1					
ANR	1969446	Identifier	padding		1969393	0					
ANR	1969447	Identifier	alignment		1969393	1					
ANR	1969448	IfStatement	if ( number < 0 )		1969393	6					
ANR	1969449	Condition	number < 0	144:5:4342:4351	1969393	0	True				
ANR	1969450	RelationalExpression	number < 0		1969393	0		<			
ANR	1969451	Identifier	number		1969393	0					
ANR	1969452	PrimaryExpression	0		1969393	1					
ANR	1969453	CompoundStatement		8:17:270:270	1969393	1					
ANR	1969454	ExpressionStatement	neg = 1	145:2:4358:4365	1969393	0	True				
ANR	1969455	AssignmentExpression	neg = 1		1969393	0		=			
ANR	1969456	Identifier	neg		1969393	0					
ANR	1969457	PrimaryExpression	1		1969393	1					
ANR	1969458	ExpressionStatement	magn = ( ( unsigned long ) - ( number + 1 ) ) + 1	146:2:4369:4411	1969393	1	True				
ANR	1969459	AssignmentExpression	magn = ( ( unsigned long ) - ( number + 1 ) ) + 1		1969393	0		=			
ANR	1969460	Identifier	magn		1969393	0					
ANR	1969461	AdditiveExpression	( ( unsigned long ) - ( number + 1 ) ) + 1		1969393	1		+			
ANR	1969462	CastExpression	( unsigned long ) - ( number + 1 )		1969393	0					
ANR	1969463	CastTarget	unsigned long		1969393	0					
ANR	1969464	UnaryOperationExpression	- ( number + 1 )		1969393	1					
ANR	1969465	UnaryOperator	-		1969393	0					
ANR	1969466	AdditiveExpression	number + 1		1969393	1		+			
ANR	1969467	Identifier	number		1969393	0					
ANR	1969468	PrimaryExpression	1		1969393	1					
ANR	1969469	PrimaryExpression	1		1969393	1					
ANR	1969470	ElseStatement	else		1969393	0					
ANR	1969471	CompoundStatement		11:8:337:337	1969393	0					
ANR	1969472	ExpressionStatement	magn = ( unsigned long ) number	148:2:4425:4454	1969393	0	True				
ANR	1969473	AssignmentExpression	magn = ( unsigned long ) number		1969393	0		=			
ANR	1969474	Identifier	magn		1969393	0					
ANR	1969475	CastExpression	( unsigned long ) number		1969393	1					
ANR	1969476	CastTarget	unsigned long		1969393	0					
ANR	1969477	Identifier	number		1969393	1					
ANR	1969478	IfStatement	if ( alignment == 0 && padding == '0' )		1969393	7					
ANR	1969479	Condition	alignment == 0 && padding == '0'	152:4:4503:4530	1969393	0	True				
ANR	1969480	AndExpression	alignment == 0 && padding == '0'		1969393	0		&&			
ANR	1969481	EqualityExpression	alignment == 0		1969393	0		==			
ANR	1969482	Identifier	alignment		1969393	0					
ANR	1969483	PrimaryExpression	0		1969393	1					
ANR	1969484	EqualityExpression	padding == '0'		1969393	1		==			
ANR	1969485	Identifier	padding		1969393	0					
ANR	1969486	PrimaryExpression	'0'		1969393	1					
ANR	1969487	ExpressionStatement	padding = ' '	152:34:4533:4544	1969393	1	True				
ANR	1969488	AssignmentExpression	padding = ' '		1969393	0		=			
ANR	1969489	Identifier	padding		1969393	0					
ANR	1969490	PrimaryExpression	' '		1969393	1					
ANR	1969491	ExpressionStatement	numbuf [ i ] = '\\0'	154:1:4548:4564	1969393	8	True				
ANR	1969492	AssignmentExpression	numbuf [ i ] = '\\0'		1969393	0		=			
ANR	1969493	ArrayIndexing	numbuf [ i ]		1969393	0					
ANR	1969494	Identifier	numbuf		1969393	0					
ANR	1969495	Identifier	i		1969393	1					
ANR	1969496	PrimaryExpression	'\\0'		1969393	1					
ANR	1969497	DoStatement	do		1969393	9					
ANR	1969498	CompoundStatement		20:4:487:487	1969393	0					
ANR	1969499	ExpressionStatement	nmagn = magn / 10	157:2:4575:4592	1969393	0	True				
ANR	1969500	AssignmentExpression	nmagn = magn / 10		1969393	0		=			
ANR	1969501	Identifier	nmagn		1969393	0					
ANR	1969502	MultiplicativeExpression	magn / 10		1969393	1		/			
ANR	1969503	Identifier	magn		1969393	0					
ANR	1969504	PrimaryExpression	10		1969393	1					
ANR	1969505	ExpressionStatement	numbuf [ -- i ] = ( unsigned char ) ( magn - ( nmagn * 10 ) ) + '0'	159:2:4597:4653	1969393	1	True				
ANR	1969506	AssignmentExpression	numbuf [ -- i ] = ( unsigned char ) ( magn - ( nmagn * 10 ) ) + '0'		1969393	0		=			
ANR	1969507	ArrayIndexing	numbuf [ -- i ]		1969393	0					
ANR	1969508	Identifier	numbuf		1969393	0					
ANR	1969509	UnaryExpression	-- i		1969393	1					
ANR	1969510	IncDec	--		1969393	0					
ANR	1969511	Identifier	i		1969393	1					
ANR	1969512	AdditiveExpression	( unsigned char ) ( magn - ( nmagn * 10 ) ) + '0'		1969393	1		+			
ANR	1969513	CastExpression	( unsigned char ) ( magn - ( nmagn * 10 ) )		1969393	0					
ANR	1969514	CastTarget	unsigned char		1969393	0					
ANR	1969515	AdditiveExpression	magn - ( nmagn * 10 )		1969393	1		-			
ANR	1969516	Identifier	magn		1969393	0					
ANR	1969517	MultiplicativeExpression	nmagn * 10		1969393	1		*			
ANR	1969518	Identifier	nmagn		1969393	0					
ANR	1969519	PrimaryExpression	10		1969393	1					
ANR	1969520	PrimaryExpression	'0'		1969393	1					
ANR	1969521	ExpressionStatement	magn = nmagn	160:2:4657:4669	1969393	2	True				
ANR	1969522	AssignmentExpression	magn = nmagn		1969393	0		=			
ANR	1969523	Identifier	magn		1969393	0					
ANR	1969524	Identifier	nmagn		1969393	1					
ANR	1969525	Condition	magn > 0 && i > 0	162:8:4682:4698	1969393	1	True				
ANR	1969526	AndExpression	magn > 0 && i > 0		1969393	0		&&			
ANR	1969527	RelationalExpression	magn > 0		1969393	0		>			
ANR	1969528	Identifier	magn		1969393	0					
ANR	1969529	PrimaryExpression	0		1969393	1					
ANR	1969530	RelationalExpression	i > 0		1969393	1		>			
ANR	1969531	Identifier	i		1969393	0					
ANR	1969532	PrimaryExpression	0		1969393	1					
ANR	1969533	IfStatement	if ( neg )		1969393	10					
ANR	1969534	Condition	neg	163:5:4707:4709	1969393	0	True				
ANR	1969535	Identifier	neg		1969393	0					
ANR	1969536	CompoundStatement		27:10:628:628	1969393	1					
ANR	1969537	ExpressionStatement	numbuf [ -- i ] = '-'	164:2:4716:4733	1969393	0	True				
ANR	1969538	AssignmentExpression	numbuf [ -- i ] = '-'		1969393	0		=			
ANR	1969539	ArrayIndexing	numbuf [ -- i ]		1969393	0					
ANR	1969540	Identifier	numbuf		1969393	0					
ANR	1969541	UnaryExpression	-- i		1969393	1					
ANR	1969542	IncDec	--		1969393	0					
ANR	1969543	Identifier	i		1969393	1					
ANR	1969544	PrimaryExpression	'-'		1969393	1					
ANR	1969545	ElseStatement	else		1969393	0					
ANR	1969546	IfStatement	if ( always_sign )		1969393	0					
ANR	1969547	Condition	always_sign	165:12:4747:4757	1969393	0	True				
ANR	1969548	Identifier	always_sign		1969393	0					
ANR	1969549	CompoundStatement		29:25:676:676	1969393	1					
ANR	1969550	ExpressionStatement	numbuf [ -- i ] = '+'	166:2:4764:4781	1969393	0	True				
ANR	1969551	AssignmentExpression	numbuf [ -- i ] = '+'		1969393	0		=			
ANR	1969552	ArrayIndexing	numbuf [ -- i ]		1969393	0					
ANR	1969553	Identifier	numbuf		1969393	0					
ANR	1969554	UnaryExpression	-- i		1969393	1					
ANR	1969555	IncDec	--		1969393	0					
ANR	1969556	Identifier	i		1969393	1					
ANR	1969557	PrimaryExpression	'+'		1969393	1					
ANR	1969558	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: appending %d as \\""%s\\"", i=%d\\n"" , number , & numbuf [ i ] , i ) )"	168:1:4787:4873	1969393	11	True				
ANR	1969559	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: appending %d as \\""%s\\"", i=%d\\n"" , number , & numbuf [ i ] , i ) )"		1969393	0					
ANR	1969560	Callee	PRINTF_DEBUG		1969393	0					
ANR	1969561	Identifier	PRINTF_DEBUG		1969393	0					
ANR	1969562	ArgumentList	"""sprintf: appending %d as \\""%s\\"", i=%d\\n"" , number , & numbuf [ i ] , i"		1969393	1					
ANR	1969563	Argument	"""sprintf: appending %d as \\""%s\\"", i=%d\\n"" , number , & numbuf [ i ] , i"		1969393	0					
ANR	1969564	Expression	"""sprintf: appending %d as \\""%s\\"", i=%d\\n"" , number , & numbuf [ i ] , i"		1969393	0					
ANR	1969565	PrimaryExpression	"""sprintf: appending %d as \\""%s\\"", i=%d\\n"""		1969393	0					
ANR	1969566	Expression	"number , & numbuf [ i ] , i"		1969393	1					
ANR	1969567	Identifier	number		1969393	0					
ANR	1969568	Expression	"& numbuf [ i ] , i"		1969393	1					
ANR	1969569	UnaryOperationExpression	& numbuf [ i ]		1969393	0					
ANR	1969570	UnaryOperator	&		1969393	0					
ANR	1969571	ArrayIndexing	numbuf [ i ]		1969393	1					
ANR	1969572	Identifier	numbuf		1969393	0					
ANR	1969573	Identifier	i		1969393	1					
ANR	1969574	Identifier	i		1969393	1					
ANR	1969575	ExpressionStatement	"php_sprintf_appendstring ( buffer , pos , size , & numbuf [ i ] , width , 0 , padding , alignment , ( NUM_BUF_SIZE - 1 ) - i , neg , 0 , always_sign )"	170:1:4876:5022	1969393	12	True				
ANR	1969576	CallExpression	"php_sprintf_appendstring ( buffer , pos , size , & numbuf [ i ] , width , 0 , padding , alignment , ( NUM_BUF_SIZE - 1 ) - i , neg , 0 , always_sign )"		1969393	0					
ANR	1969577	Callee	php_sprintf_appendstring		1969393	0					
ANR	1969578	Identifier	php_sprintf_appendstring		1969393	0					
ANR	1969579	ArgumentList	buffer		1969393	1					
ANR	1969580	Argument	buffer		1969393	0					
ANR	1969581	Identifier	buffer		1969393	0					
ANR	1969582	Argument	pos		1969393	1					
ANR	1969583	Identifier	pos		1969393	0					
ANR	1969584	Argument	size		1969393	2					
ANR	1969585	Identifier	size		1969393	0					
ANR	1969586	Argument	& numbuf [ i ]		1969393	3					
ANR	1969587	UnaryOperationExpression	& numbuf [ i ]		1969393	0					
ANR	1969588	UnaryOperator	&		1969393	0					
ANR	1969589	ArrayIndexing	numbuf [ i ]		1969393	1					
ANR	1969590	Identifier	numbuf		1969393	0					
ANR	1969591	Identifier	i		1969393	1					
ANR	1969592	Argument	width		1969393	4					
ANR	1969593	Identifier	width		1969393	0					
ANR	1969594	Argument	0		1969393	5					
ANR	1969595	PrimaryExpression	0		1969393	0					
ANR	1969596	Argument	padding		1969393	6					
ANR	1969597	Identifier	padding		1969393	0					
ANR	1969598	Argument	alignment		1969393	7					
ANR	1969599	Identifier	alignment		1969393	0					
ANR	1969600	Argument	( NUM_BUF_SIZE - 1 ) - i		1969393	8					
ANR	1969601	AdditiveExpression	( NUM_BUF_SIZE - 1 ) - i		1969393	0		-			
ANR	1969602	AdditiveExpression	NUM_BUF_SIZE - 1		1969393	0		-			
ANR	1969603	Identifier	NUM_BUF_SIZE		1969393	0					
ANR	1969604	PrimaryExpression	1		1969393	1					
ANR	1969605	Identifier	i		1969393	1					
ANR	1969606	Argument	neg		1969393	9					
ANR	1969607	Identifier	neg		1969393	0					
ANR	1969608	Argument	0		1969393	10					
ANR	1969609	PrimaryExpression	0		1969393	0					
ANR	1969610	Argument	always_sign		1969393	11					
ANR	1969611	Identifier	always_sign		1969393	0					
ANR	1969612	ReturnType	inline static void		1969393	1					
ANR	1969613	Identifier	php_sprintf_appendint		1969393	2					
ANR	1969614	ParameterList	"char * * buffer , int * pos , int * size , long number , int width , char padding , int alignment , int always_sign"		1969393	3					
ANR	1969615	Parameter	char * * buffer	134:22:3964:3976	1969393	0	True				
ANR	1969616	ParameterType	char * *		1969393	0					
ANR	1969617	Identifier	buffer		1969393	1					
ANR	1969618	Parameter	int * pos	134:37:3979:3986	1969393	1	True				
ANR	1969619	ParameterType	int *		1969393	0					
ANR	1969620	Identifier	pos		1969393	1					
ANR	1969621	Parameter	int * size	134:47:3989:3997	1969393	2	True				
ANR	1969622	ParameterType	int *		1969393	0					
ANR	1969623	Identifier	size		1969393	1					
ANR	1969624	Parameter	long number	134:58:4000:4010	1969393	3	True				
ANR	1969625	ParameterType	long		1969393	0					
ANR	1969626	Identifier	number		1969393	1					
ANR	1969627	Parameter	int width	135:6:4019:4027	1969393	4	True				
ANR	1969628	ParameterType	int		1969393	0					
ANR	1969629	Identifier	width		1969393	1					
ANR	1969630	Parameter	char padding	135:17:4030:4041	1969393	5	True				
ANR	1969631	ParameterType	char		1969393	0					
ANR	1969632	Identifier	padding		1969393	1					
ANR	1969633	Parameter	int alignment	135:31:4044:4056	1969393	6	True				
ANR	1969634	ParameterType	int		1969393	0					
ANR	1969635	Identifier	alignment		1969393	1					
ANR	1969636	Parameter	int always_sign	136:6:4066:4080	1969393	7	True				
ANR	1969637	ParameterType	int		1969393	0					
ANR	1969638	Identifier	always_sign		1969393	1					
ANR	1969639	CFGEntryNode	ENTRY		1969393		True				
ANR	1969640	CFGExitNode	EXIT		1969393		True				
ANR	1969641	Symbol	padding		1969393						
ANR	1969642	Symbol	* buffer		1969393						
ANR	1969643	Symbol	nmagn		1969393						
ANR	1969644	Symbol	magn		1969393						
ANR	1969645	Symbol	always_sign		1969393						
ANR	1969646	Symbol	i		1969393						
ANR	1969647	Symbol	number		1969393						
ANR	1969648	Symbol	neg		1969393						
ANR	1969649	Symbol	* numbuf		1969393						
ANR	1969650	Symbol	* i		1969393						
ANR	1969651	Symbol	size		1969393						
ANR	1969652	Symbol	pos		1969393						
ANR	1969653	Symbol	numbuf		1969393						
ANR	1969654	Symbol	width		1969393						
ANR	1969655	Symbol	NUM_BUF_SIZE		1969393						
ANR	1969656	Symbol	buffer		1969393						
ANR	1969657	Symbol	alignment		1969393						
ANR	1969658	Function	php_sprintf_appenduint	177:0:5071:5967							
ANR	1969659	FunctionDef	"php_sprintf_appenduint (char * * buffer , int * pos , int * size , unsigned long number , int width , char padding , int alignment)"		1969658	0					
ANR	1969660	CompoundStatement		181:0:5227:5967	1969658	0					
ANR	1969661	IdentifierDeclStatement	char numbuf [ NUM_BUF_SIZE ] ;	182:1:5230:5255	1969658	0	True				
ANR	1969662	IdentifierDecl	numbuf [ NUM_BUF_SIZE ]		1969658	0					
ANR	1969663	IdentifierDeclType	char [ NUM_BUF_SIZE ]		1969658	0					
ANR	1969664	Identifier	numbuf		1969658	1					
ANR	1969665	Identifier	NUM_BUF_SIZE		1969658	2					
ANR	1969666	Statement	register	183:1:5258:5265	1969658	1	True				
ANR	1969667	IdentifierDeclStatement	"unsigned long magn , nmagn ;"	183:10:5267:5292	1969658	2	True				
ANR	1969668	IdentifierDecl	magn		1969658	0					
ANR	1969669	IdentifierDeclType	unsigned long		1969658	0					
ANR	1969670	Identifier	magn		1969658	1					
ANR	1969671	IdentifierDecl	nmagn		1969658	1					
ANR	1969672	IdentifierDeclType	unsigned long		1969658	0					
ANR	1969673	Identifier	nmagn		1969658	1					
ANR	1969674	Statement	register	184:1:5295:5302	1969658	3	True				
ANR	1969675	IdentifierDeclStatement	unsigned int i = NUM_BUF_SIZE - 1 ;	184:10:5304:5337	1969658	4	True				
ANR	1969676	IdentifierDecl	i = NUM_BUF_SIZE - 1		1969658	0					
ANR	1969677	IdentifierDeclType	unsigned int		1969658	0					
ANR	1969678	Identifier	i		1969658	1					
ANR	1969679	AssignmentExpression	i = NUM_BUF_SIZE - 1		1969658	2		=			
ANR	1969680	Identifier	i		1969658	0					
ANR	1969681	AdditiveExpression	NUM_BUF_SIZE - 1		1969658	1		-			
ANR	1969682	Identifier	NUM_BUF_SIZE		1969658	0					
ANR	1969683	PrimaryExpression	1		1969658	1					
ANR	1969684	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: appenduint(%x, %x, %x, %d, %d, '%c', %d)\\n"" , * buffer , pos , size , number , width , padding , alignment ) )"	186:1:5341:5471	1969658	5	True				
ANR	1969685	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: appenduint(%x, %x, %x, %d, %d, '%c', %d)\\n"" , * buffer , pos , size , number , width , padding , alignment ) )"		1969658	0					
ANR	1969686	Callee	PRINTF_DEBUG		1969658	0					
ANR	1969687	Identifier	PRINTF_DEBUG		1969658	0					
ANR	1969688	ArgumentList	"""sprintf: appenduint(%x, %x, %x, %d, %d, '%c', %d)\\n"" , * buffer , pos , size , number , width , padding , alignment"		1969658	1					
ANR	1969689	Argument	"""sprintf: appenduint(%x, %x, %x, %d, %d, '%c', %d)\\n"" , * buffer , pos , size , number , width , padding , alignment"		1969658	0					
ANR	1969690	Expression	"""sprintf: appenduint(%x, %x, %x, %d, %d, '%c', %d)\\n"" , * buffer , pos , size , number , width , padding , alignment"		1969658	0					
ANR	1969691	PrimaryExpression	"""sprintf: appenduint(%x, %x, %x, %d, %d, '%c', %d)\\n"""		1969658	0					
ANR	1969692	Expression	"* buffer , pos , size , number , width , padding , alignment"		1969658	1					
ANR	1969693	UnaryOperationExpression	* buffer		1969658	0					
ANR	1969694	UnaryOperator	*		1969658	0					
ANR	1969695	Identifier	buffer		1969658	1					
ANR	1969696	Expression	"pos , size , number , width , padding , alignment"		1969658	1					
ANR	1969697	Identifier	pos		1969658	0					
ANR	1969698	Expression	"size , number , width , padding , alignment"		1969658	1					
ANR	1969699	Identifier	size		1969658	0					
ANR	1969700	Expression	"number , width , padding , alignment"		1969658	1					
ANR	1969701	Identifier	number		1969658	0					
ANR	1969702	Expression	"width , padding , alignment"		1969658	1					
ANR	1969703	Identifier	width		1969658	0					
ANR	1969704	Expression	"padding , alignment"		1969658	1					
ANR	1969705	Identifier	padding		1969658	0					
ANR	1969706	Identifier	alignment		1969658	1					
ANR	1969707	ExpressionStatement	magn = ( unsigned long ) number	188:1:5474:5503	1969658	6	True				
ANR	1969708	AssignmentExpression	magn = ( unsigned long ) number		1969658	0		=			
ANR	1969709	Identifier	magn		1969658	0					
ANR	1969710	CastExpression	( unsigned long ) number		1969658	1					
ANR	1969711	CastTarget	unsigned long		1969658	0					
ANR	1969712	Identifier	number		1969658	1					
ANR	1969713	IfStatement	if ( alignment == 0 && padding == '0' )		1969658	7					
ANR	1969714	Condition	alignment == 0 && padding == '0'	191:5:5550:5581	1969658	0	True				
ANR	1969715	AndExpression	alignment == 0 && padding == '0'		1969658	0		&&			
ANR	1969716	EqualityExpression	alignment == 0		1969658	0		==			
ANR	1969717	Identifier	alignment		1969658	0					
ANR	1969718	PrimaryExpression	0		1969658	1					
ANR	1969719	EqualityExpression	padding == '0'		1969658	1		==			
ANR	1969720	Identifier	padding		1969658	0					
ANR	1969721	PrimaryExpression	'0'		1969658	1					
ANR	1969722	ExpressionStatement	padding = ' '	191:39:5584:5597	1969658	1	True				
ANR	1969723	AssignmentExpression	padding = ' '		1969658	0		=			
ANR	1969724	Identifier	padding		1969658	0					
ANR	1969725	PrimaryExpression	' '		1969658	1					
ANR	1969726	ExpressionStatement	numbuf [ i ] = '\\0'	193:1:5601:5617	1969658	8	True				
ANR	1969727	AssignmentExpression	numbuf [ i ] = '\\0'		1969658	0		=			
ANR	1969728	ArrayIndexing	numbuf [ i ]		1969658	0					
ANR	1969729	Identifier	numbuf		1969658	0					
ANR	1969730	Identifier	i		1969658	1					
ANR	1969731	PrimaryExpression	'\\0'		1969658	1					
ANR	1969732	DoStatement	do		1969658	9					
ANR	1969733	CompoundStatement		15:4:396:396	1969658	0					
ANR	1969734	ExpressionStatement	nmagn = magn / 10	196:2:5628:5645	1969658	0	True				
ANR	1969735	AssignmentExpression	nmagn = magn / 10		1969658	0		=			
ANR	1969736	Identifier	nmagn		1969658	0					
ANR	1969737	MultiplicativeExpression	magn / 10		1969658	1		/			
ANR	1969738	Identifier	magn		1969658	0					
ANR	1969739	PrimaryExpression	10		1969658	1					
ANR	1969740	ExpressionStatement	numbuf [ -- i ] = ( unsigned char ) ( magn - ( nmagn * 10 ) ) + '0'	198:2:5650:5706	1969658	1	True				
ANR	1969741	AssignmentExpression	numbuf [ -- i ] = ( unsigned char ) ( magn - ( nmagn * 10 ) ) + '0'		1969658	0		=			
ANR	1969742	ArrayIndexing	numbuf [ -- i ]		1969658	0					
ANR	1969743	Identifier	numbuf		1969658	0					
ANR	1969744	UnaryExpression	-- i		1969658	1					
ANR	1969745	IncDec	--		1969658	0					
ANR	1969746	Identifier	i		1969658	1					
ANR	1969747	AdditiveExpression	( unsigned char ) ( magn - ( nmagn * 10 ) ) + '0'		1969658	1		+			
ANR	1969748	CastExpression	( unsigned char ) ( magn - ( nmagn * 10 ) )		1969658	0					
ANR	1969749	CastTarget	unsigned char		1969658	0					
ANR	1969750	AdditiveExpression	magn - ( nmagn * 10 )		1969658	1		-			
ANR	1969751	Identifier	magn		1969658	0					
ANR	1969752	MultiplicativeExpression	nmagn * 10		1969658	1		*			
ANR	1969753	Identifier	nmagn		1969658	0					
ANR	1969754	PrimaryExpression	10		1969658	1					
ANR	1969755	PrimaryExpression	'0'		1969658	1					
ANR	1969756	ExpressionStatement	magn = nmagn	199:2:5710:5722	1969658	2	True				
ANR	1969757	AssignmentExpression	magn = nmagn		1969658	0		=			
ANR	1969758	Identifier	magn		1969658	0					
ANR	1969759	Identifier	nmagn		1969658	1					
ANR	1969760	Condition	magn > 0 && i > 0	200:10:5734:5750	1969658	1	True				
ANR	1969761	AndExpression	magn > 0 && i > 0		1969658	0		&&			
ANR	1969762	RelationalExpression	magn > 0		1969658	0		>			
ANR	1969763	Identifier	magn		1969658	0					
ANR	1969764	PrimaryExpression	0		1969658	1					
ANR	1969765	RelationalExpression	i > 0		1969658	1		>			
ANR	1969766	Identifier	i		1969658	0					
ANR	1969767	PrimaryExpression	0		1969658	1					
ANR	1969768	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: appending %d as \\""%s\\"", i=%d\\n"" , number , & numbuf [ i ] , i ) )"	202:1:5756:5836	1969658	10	True				
ANR	1969769	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: appending %d as \\""%s\\"", i=%d\\n"" , number , & numbuf [ i ] , i ) )"		1969658	0					
ANR	1969770	Callee	PRINTF_DEBUG		1969658	0					
ANR	1969771	Identifier	PRINTF_DEBUG		1969658	0					
ANR	1969772	ArgumentList	"""sprintf: appending %d as \\""%s\\"", i=%d\\n"" , number , & numbuf [ i ] , i"		1969658	1					
ANR	1969773	Argument	"""sprintf: appending %d as \\""%s\\"", i=%d\\n"" , number , & numbuf [ i ] , i"		1969658	0					
ANR	1969774	Expression	"""sprintf: appending %d as \\""%s\\"", i=%d\\n"" , number , & numbuf [ i ] , i"		1969658	0					
ANR	1969775	PrimaryExpression	"""sprintf: appending %d as \\""%s\\"", i=%d\\n"""		1969658	0					
ANR	1969776	Expression	"number , & numbuf [ i ] , i"		1969658	1					
ANR	1969777	Identifier	number		1969658	0					
ANR	1969778	Expression	"& numbuf [ i ] , i"		1969658	1					
ANR	1969779	UnaryOperationExpression	& numbuf [ i ]		1969658	0					
ANR	1969780	UnaryOperator	&		1969658	0					
ANR	1969781	ArrayIndexing	numbuf [ i ]		1969658	1					
ANR	1969782	Identifier	numbuf		1969658	0					
ANR	1969783	Identifier	i		1969658	1					
ANR	1969784	Identifier	i		1969658	1					
ANR	1969785	ExpressionStatement	"php_sprintf_appendstring ( buffer , pos , size , & numbuf [ i ] , width , 0 , padding , alignment , ( NUM_BUF_SIZE - 1 ) - i , 0 , 0 , 0 )"	203:1:5839:5965	1969658	11	True				
ANR	1969786	CallExpression	"php_sprintf_appendstring ( buffer , pos , size , & numbuf [ i ] , width , 0 , padding , alignment , ( NUM_BUF_SIZE - 1 ) - i , 0 , 0 , 0 )"		1969658	0					
ANR	1969787	Callee	php_sprintf_appendstring		1969658	0					
ANR	1969788	Identifier	php_sprintf_appendstring		1969658	0					
ANR	1969789	ArgumentList	buffer		1969658	1					
ANR	1969790	Argument	buffer		1969658	0					
ANR	1969791	Identifier	buffer		1969658	0					
ANR	1969792	Argument	pos		1969658	1					
ANR	1969793	Identifier	pos		1969658	0					
ANR	1969794	Argument	size		1969658	2					
ANR	1969795	Identifier	size		1969658	0					
ANR	1969796	Argument	& numbuf [ i ]		1969658	3					
ANR	1969797	UnaryOperationExpression	& numbuf [ i ]		1969658	0					
ANR	1969798	UnaryOperator	&		1969658	0					
ANR	1969799	ArrayIndexing	numbuf [ i ]		1969658	1					
ANR	1969800	Identifier	numbuf		1969658	0					
ANR	1969801	Identifier	i		1969658	1					
ANR	1969802	Argument	width		1969658	4					
ANR	1969803	Identifier	width		1969658	0					
ANR	1969804	Argument	0		1969658	5					
ANR	1969805	PrimaryExpression	0		1969658	0					
ANR	1969806	Argument	padding		1969658	6					
ANR	1969807	Identifier	padding		1969658	0					
ANR	1969808	Argument	alignment		1969658	7					
ANR	1969809	Identifier	alignment		1969658	0					
ANR	1969810	Argument	( NUM_BUF_SIZE - 1 ) - i		1969658	8					
ANR	1969811	AdditiveExpression	( NUM_BUF_SIZE - 1 ) - i		1969658	0		-			
ANR	1969812	AdditiveExpression	NUM_BUF_SIZE - 1		1969658	0		-			
ANR	1969813	Identifier	NUM_BUF_SIZE		1969658	0					
ANR	1969814	PrimaryExpression	1		1969658	1					
ANR	1969815	Identifier	i		1969658	1					
ANR	1969816	Argument	0		1969658	9					
ANR	1969817	PrimaryExpression	0		1969658	0					
ANR	1969818	Argument	0		1969658	10					
ANR	1969819	PrimaryExpression	0		1969658	0					
ANR	1969820	Argument	0		1969658	11					
ANR	1969821	PrimaryExpression	0		1969658	0					
ANR	1969822	ReturnType	inline static void		1969658	1					
ANR	1969823	Identifier	php_sprintf_appenduint		1969658	2					
ANR	1969824	ParameterList	"char * * buffer , int * pos , int * size , unsigned long number , int width , char padding , int alignment"		1969658	3					
ANR	1969825	Parameter	char * * buffer	178:23:5113:5125	1969658	0	True				
ANR	1969826	ParameterType	char * *		1969658	0					
ANR	1969827	Identifier	buffer		1969658	1					
ANR	1969828	Parameter	int * pos	178:38:5128:5135	1969658	1	True				
ANR	1969829	ParameterType	int *		1969658	0					
ANR	1969830	Identifier	pos		1969658	1					
ANR	1969831	Parameter	int * size	178:48:5138:5146	1969658	2	True				
ANR	1969832	ParameterType	int *		1969658	0					
ANR	1969833	Identifier	size		1969658	1					
ANR	1969834	Parameter	unsigned long number	179:8:5157:5176	1969658	3	True				
ANR	1969835	ParameterType	unsigned long		1969658	0					
ANR	1969836	Identifier	number		1969658	1					
ANR	1969837	Parameter	int width	180:8:5187:5195	1969658	4	True				
ANR	1969838	ParameterType	int		1969658	0					
ANR	1969839	Identifier	width		1969658	1					
ANR	1969840	Parameter	char padding	180:19:5198:5209	1969658	5	True				
ANR	1969841	ParameterType	char		1969658	0					
ANR	1969842	Identifier	padding		1969658	1					
ANR	1969843	Parameter	int alignment	180:33:5212:5224	1969658	6	True				
ANR	1969844	ParameterType	int		1969658	0					
ANR	1969845	Identifier	alignment		1969658	1					
ANR	1969846	CFGEntryNode	ENTRY		1969658		True				
ANR	1969847	CFGExitNode	EXIT		1969658		True				
ANR	1969848	Symbol	padding		1969658						
ANR	1969849	Symbol	* buffer		1969658						
ANR	1969850	Symbol	magn		1969658						
ANR	1969851	Symbol	nmagn		1969658						
ANR	1969852	Symbol	i		1969658						
ANR	1969853	Symbol	number		1969658						
ANR	1969854	Symbol	* numbuf		1969658						
ANR	1969855	Symbol	* i		1969658						
ANR	1969856	Symbol	size		1969658						
ANR	1969857	Symbol	pos		1969658						
ANR	1969858	Symbol	numbuf		1969658						
ANR	1969859	Symbol	width		1969658						
ANR	1969860	Symbol	NUM_BUF_SIZE		1969658						
ANR	1969861	Symbol	buffer		1969658						
ANR	1969862	Symbol	alignment		1969658						
ANR	1969863	Function	php_sprintf_appenddouble	209:0:6016:8411							
ANR	1969864	FunctionDef	"php_sprintf_appenddouble (char * * buffer , int * pos , int * size , double number , int width , char padding , int alignment , int precision , int adjust , char fmt , int always_sign TSRMLS_DC)"		1969863	0					
ANR	1969865	CompoundStatement		217:0:6257:8411	1969863	0					
ANR	1969866	IdentifierDeclStatement	char num_buf [ NUM_BUF_SIZE ] ;	218:1:6260:6286	1969863	0	True				
ANR	1969867	IdentifierDecl	num_buf [ NUM_BUF_SIZE ]		1969863	0					
ANR	1969868	IdentifierDeclType	char [ NUM_BUF_SIZE ]		1969863	0					
ANR	1969869	Identifier	num_buf		1969863	1					
ANR	1969870	Identifier	NUM_BUF_SIZE		1969863	2					
ANR	1969871	IdentifierDeclStatement	char * s = NULL ;	219:1:6289:6303	1969863	1	True				
ANR	1969872	IdentifierDecl	* s = NULL		1969863	0					
ANR	1969873	IdentifierDeclType	char *		1969863	0					
ANR	1969874	Identifier	s		1969863	1					
ANR	1969875	AssignmentExpression	* s = NULL		1969863	2		=			
ANR	1969876	Identifier	NULL		1969863	0					
ANR	1969877	Identifier	NULL		1969863	1					
ANR	1969878	IdentifierDeclStatement	"int s_len = 0 , is_negative = 0 ;"	220:1:6306:6336	1969863	2	True				
ANR	1969879	IdentifierDecl	s_len = 0		1969863	0					
ANR	1969880	IdentifierDeclType	int		1969863	0					
ANR	1969881	Identifier	s_len		1969863	1					
ANR	1969882	AssignmentExpression	s_len = 0		1969863	2		=			
ANR	1969883	Identifier	s_len		1969863	0					
ANR	1969884	PrimaryExpression	0		1969863	1					
ANR	1969885	IdentifierDecl	is_negative = 0		1969863	1					
ANR	1969886	IdentifierDeclType	int		1969863	0					
ANR	1969887	Identifier	is_negative		1969863	1					
ANR	1969888	AssignmentExpression	is_negative = 0		1969863	2		=			
ANR	1969889	Identifier	is_negative		1969863	0					
ANR	1969890	PrimaryExpression	0		1969863	1					
ANR	1969891	IdentifierDeclStatement	struct lconv lconv ;	223:1:6371:6389	1969863	3	True				
ANR	1969892	IdentifierDecl	lconv		1969863	0					
ANR	1969893	IdentifierDeclType	struct lconv		1969863	0					
ANR	1969894	Identifier	lconv		1969863	1					
ANR	1969895	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: appenddouble(%x, %x, %x, %f, %d, '%c', %d, %c)\\n"" , * buffer , pos , size , number , width , padding , alignment , fmt ) )"	229:1:6435:6576	1969863	4	True				
ANR	1969896	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: appenddouble(%x, %x, %x, %f, %d, '%c', %d, %c)\\n"" , * buffer , pos , size , number , width , padding , alignment , fmt ) )"		1969863	0					
ANR	1969897	Callee	PRINTF_DEBUG		1969863	0					
ANR	1969898	Identifier	PRINTF_DEBUG		1969863	0					
ANR	1969899	ArgumentList	"""sprintf: appenddouble(%x, %x, %x, %f, %d, '%c', %d, %c)\\n"" , * buffer , pos , size , number , width , padding , alignment , fmt"		1969863	1					
ANR	1969900	Argument	"""sprintf: appenddouble(%x, %x, %x, %f, %d, '%c', %d, %c)\\n"" , * buffer , pos , size , number , width , padding , alignment , fmt"		1969863	0					
ANR	1969901	Expression	"""sprintf: appenddouble(%x, %x, %x, %f, %d, '%c', %d, %c)\\n"" , * buffer , pos , size , number , width , padding , alignment , fmt"		1969863	0					
ANR	1969902	PrimaryExpression	"""sprintf: appenddouble(%x, %x, %x, %f, %d, '%c', %d, %c)\\n"""		1969863	0					
ANR	1969903	Expression	"* buffer , pos , size , number , width , padding , alignment , fmt"		1969863	1					
ANR	1969904	UnaryOperationExpression	* buffer		1969863	0					
ANR	1969905	UnaryOperator	*		1969863	0					
ANR	1969906	Identifier	buffer		1969863	1					
ANR	1969907	Expression	"pos , size , number , width , padding , alignment , fmt"		1969863	1					
ANR	1969908	Identifier	pos		1969863	0					
ANR	1969909	Expression	"size , number , width , padding , alignment , fmt"		1969863	1					
ANR	1969910	Identifier	size		1969863	0					
ANR	1969911	Expression	"number , width , padding , alignment , fmt"		1969863	1					
ANR	1969912	Identifier	number		1969863	0					
ANR	1969913	Expression	"width , padding , alignment , fmt"		1969863	1					
ANR	1969914	Identifier	width		1969863	0					
ANR	1969915	Expression	"padding , alignment , fmt"		1969863	1					
ANR	1969916	Identifier	padding		1969863	0					
ANR	1969917	Expression	"alignment , fmt"		1969863	1					
ANR	1969918	Identifier	alignment		1969863	0					
ANR	1969919	Identifier	fmt		1969863	1					
ANR	1969920	IfStatement	if ( ( adjust & ADJ_PRECISION ) == 0 )		1969863	5					
ANR	1969921	Condition	( adjust & ADJ_PRECISION ) == 0	231:5:6583:6611	1969863	0	True				
ANR	1969922	EqualityExpression	( adjust & ADJ_PRECISION ) == 0		1969863	0		==			
ANR	1969923	BitAndExpression	adjust & ADJ_PRECISION		1969863	0		&			
ANR	1969924	Identifier	adjust		1969863	0					
ANR	1969925	Identifier	ADJ_PRECISION		1969863	1					
ANR	1969926	PrimaryExpression	0		1969863	1					
ANR	1969927	CompoundStatement		15:36:356:356	1969863	1					
ANR	1969928	ExpressionStatement	precision = FLOAT_PRECISION	232:2:6618:6645	1969863	0	True				
ANR	1969929	AssignmentExpression	precision = FLOAT_PRECISION		1969863	0		=			
ANR	1969930	Identifier	precision		1969863	0					
ANR	1969931	Identifier	FLOAT_PRECISION		1969863	1					
ANR	1969932	ElseStatement	else		1969863	0					
ANR	1969933	IfStatement	if ( precision > MAX_FLOAT_PRECISION )		1969863	0					
ANR	1969934	Condition	precision > MAX_FLOAT_PRECISION	233:12:6659:6689	1969863	0	True				
ANR	1969935	RelationalExpression	precision > MAX_FLOAT_PRECISION		1969863	0		>			
ANR	1969936	Identifier	precision		1969863	0					
ANR	1969937	Identifier	MAX_FLOAT_PRECISION		1969863	1					
ANR	1969938	CompoundStatement		17:45:434:434	1969863	1					
ANR	1969939	Statement	php_error_docref	234:2:6696:6711	1969863	0	True				
ANR	1969940	Statement	(	234:18:6712:6712	1969863	1	True				
ANR	1969941	Statement	NULL	234:19:6713:6716	1969863	2	True				
ANR	1969942	Statement	TSRMLS_CC	234:24:6718:6726	1969863	3	True				
ANR	1969943	Statement	","	234:33:6727:6727	1969863	4	True				
ANR	1969944	Statement	E_NOTICE	234:35:6729:6736	1969863	5	True				
ANR	1969945	Statement	","	234:43:6737:6737	1969863	6	True				
ANR	1969946	Statement	"""Requested precision of %d digits was truncated to PHP maximum of %d digits"""	234:45:6739:6814	1969863	7	True				
ANR	1969947	Statement	","	234:121:6815:6815	1969863	8	True				
ANR	1969948	Statement	precision	234:123:6817:6825	1969863	9	True				
ANR	1969949	Statement	","	234:132:6826:6826	1969863	10	True				
ANR	1969950	Statement	MAX_FLOAT_PRECISION	234:134:6828:6846	1969863	11	True				
ANR	1969951	Statement	)	234:153:6847:6847	1969863	12	True				
ANR	1969952	ExpressionStatement		234:154:6848:6848	1969863	13	True				
ANR	1969953	ExpressionStatement	precision = MAX_FLOAT_PRECISION	235:2:6852:6883	1969863	14	True				
ANR	1969954	AssignmentExpression	precision = MAX_FLOAT_PRECISION		1969863	0		=			
ANR	1969955	Identifier	precision		1969863	0					
ANR	1969956	Identifier	MAX_FLOAT_PRECISION		1969863	1					
ANR	1969957	IfStatement	if ( zend_isnan ( number ) )		1969863	6					
ANR	1969958	Condition	zend_isnan ( number )	238:5:6895:6912	1969863	0	True				
ANR	1969959	CallExpression	zend_isnan ( number )		1969863	0					
ANR	1969960	Callee	zend_isnan		1969863	0					
ANR	1969961	Identifier	zend_isnan		1969863	0					
ANR	1969962	ArgumentList	number		1969863	1					
ANR	1969963	Argument	number		1969863	0					
ANR	1969964	Identifier	number		1969863	0					
ANR	1969965	CompoundStatement		22:25:657:657	1969863	1					
ANR	1969966	ExpressionStatement	is_negative = ( number < 0 )	239:2:6919:6943	1969863	0	True				
ANR	1969967	AssignmentExpression	is_negative = ( number < 0 )		1969863	0		=			
ANR	1969968	Identifier	is_negative		1969863	0					
ANR	1969969	RelationalExpression	number < 0		1969863	1		<			
ANR	1969970	Identifier	number		1969863	0					
ANR	1969971	PrimaryExpression	0		1969863	1					
ANR	1969972	ExpressionStatement	"php_sprintf_appendstring ( buffer , pos , size , ""NaN"" , 3 , 0 , padding , alignment , 3 , is_negative , 0 , always_sign )"	240:2:6947:7064	1969863	1	True				
ANR	1969973	CallExpression	"php_sprintf_appendstring ( buffer , pos , size , ""NaN"" , 3 , 0 , padding , alignment , 3 , is_negative , 0 , always_sign )"		1969863	0					
ANR	1969974	Callee	php_sprintf_appendstring		1969863	0					
ANR	1969975	Identifier	php_sprintf_appendstring		1969863	0					
ANR	1969976	ArgumentList	buffer		1969863	1					
ANR	1969977	Argument	buffer		1969863	0					
ANR	1969978	Identifier	buffer		1969863	0					
ANR	1969979	Argument	pos		1969863	1					
ANR	1969980	Identifier	pos		1969863	0					
ANR	1969981	Argument	size		1969863	2					
ANR	1969982	Identifier	size		1969863	0					
ANR	1969983	Argument	"""NaN"""		1969863	3					
ANR	1969984	PrimaryExpression	"""NaN"""		1969863	0					
ANR	1969985	Argument	3		1969863	4					
ANR	1969986	PrimaryExpression	3		1969863	0					
ANR	1969987	Argument	0		1969863	5					
ANR	1969988	PrimaryExpression	0		1969863	0					
ANR	1969989	Argument	padding		1969863	6					
ANR	1969990	Identifier	padding		1969863	0					
ANR	1969991	Argument	alignment		1969863	7					
ANR	1969992	Identifier	alignment		1969863	0					
ANR	1969993	Argument	3		1969863	8					
ANR	1969994	PrimaryExpression	3		1969863	0					
ANR	1969995	Argument	is_negative		1969863	9					
ANR	1969996	Identifier	is_negative		1969863	0					
ANR	1969997	Argument	0		1969863	10					
ANR	1969998	PrimaryExpression	0		1969863	0					
ANR	1969999	Argument	always_sign		1969863	11					
ANR	1970000	Identifier	always_sign		1969863	0					
ANR	1970001	ReturnStatement	return ;	242:2:7068:7074	1969863	2	True				
ANR	1970002	IfStatement	if ( zend_isinf ( number ) )		1969863	7					
ANR	1970003	Condition	zend_isinf ( number )	245:5:7085:7102	1969863	0	True				
ANR	1970004	CallExpression	zend_isinf ( number )		1969863	0					
ANR	1970005	Callee	zend_isinf		1969863	0					
ANR	1970006	Identifier	zend_isinf		1969863	0					
ANR	1970007	ArgumentList	number		1969863	1					
ANR	1970008	Argument	number		1969863	0					
ANR	1970009	Identifier	number		1969863	0					
ANR	1970010	CompoundStatement		29:25:847:847	1969863	1					
ANR	1970011	ExpressionStatement	is_negative = ( number < 0 )	246:2:7109:7133	1969863	0	True				
ANR	1970012	AssignmentExpression	is_negative = ( number < 0 )		1969863	0		=			
ANR	1970013	Identifier	is_negative		1969863	0					
ANR	1970014	RelationalExpression	number < 0		1969863	1		<			
ANR	1970015	Identifier	number		1969863	0					
ANR	1970016	PrimaryExpression	0		1969863	1					
ANR	1970017	ExpressionStatement	"php_sprintf_appendstring ( buffer , pos , size , ""INF"" , 3 , 0 , padding , alignment , 3 , is_negative , 0 , always_sign )"	247:2:7137:7254	1969863	1	True				
ANR	1970018	CallExpression	"php_sprintf_appendstring ( buffer , pos , size , ""INF"" , 3 , 0 , padding , alignment , 3 , is_negative , 0 , always_sign )"		1969863	0					
ANR	1970019	Callee	php_sprintf_appendstring		1969863	0					
ANR	1970020	Identifier	php_sprintf_appendstring		1969863	0					
ANR	1970021	ArgumentList	buffer		1969863	1					
ANR	1970022	Argument	buffer		1969863	0					
ANR	1970023	Identifier	buffer		1969863	0					
ANR	1970024	Argument	pos		1969863	1					
ANR	1970025	Identifier	pos		1969863	0					
ANR	1970026	Argument	size		1969863	2					
ANR	1970027	Identifier	size		1969863	0					
ANR	1970028	Argument	"""INF"""		1969863	3					
ANR	1970029	PrimaryExpression	"""INF"""		1969863	0					
ANR	1970030	Argument	3		1969863	4					
ANR	1970031	PrimaryExpression	3		1969863	0					
ANR	1970032	Argument	0		1969863	5					
ANR	1970033	PrimaryExpression	0		1969863	0					
ANR	1970034	Argument	padding		1969863	6					
ANR	1970035	Identifier	padding		1969863	0					
ANR	1970036	Argument	alignment		1969863	7					
ANR	1970037	Identifier	alignment		1969863	0					
ANR	1970038	Argument	3		1969863	8					
ANR	1970039	PrimaryExpression	3		1969863	0					
ANR	1970040	Argument	is_negative		1969863	9					
ANR	1970041	Identifier	is_negative		1969863	0					
ANR	1970042	Argument	0		1969863	10					
ANR	1970043	PrimaryExpression	0		1969863	0					
ANR	1970044	Argument	always_sign		1969863	11					
ANR	1970045	Identifier	always_sign		1969863	0					
ANR	1970046	ReturnStatement	return ;	249:2:7258:7264	1969863	2	True				
ANR	1970047	SwitchStatement	switch ( fmt )		1969863	8					
ANR	1970048	Condition	fmt	252:9:7279:7281	1969863	0	True				
ANR	1970049	Identifier	fmt		1969863	0					
ANR	1970050	CompoundStatement		36:14:1026:1026	1969863	1					
ANR	1970051	Label	case 'e' :	253:2:7291:7299	1969863	0	True				
ANR	1970052	Label	case 'E' :	254:2:7303:7311	1969863	1	True				
ANR	1970053	Label	case 'f' :	255:2:7315:7323	1969863	2	True				
ANR	1970054	Label	case 'F' :	256:2:7327:7335	1969863	3	True				
ANR	1970055	ExpressionStatement	localeconv_r ( & lconv )	259:3:7372:7392	1969863	4	True				
ANR	1970056	CallExpression	localeconv_r ( & lconv )		1969863	0					
ANR	1970057	Callee	localeconv_r		1969863	0					
ANR	1970058	Identifier	localeconv_r		1969863	0					
ANR	1970059	ArgumentList	& lconv		1969863	1					
ANR	1970060	Argument	& lconv		1969863	0					
ANR	1970061	UnaryOperationExpression	& lconv		1969863	0					
ANR	1970062	UnaryOperator	&		1969863	0					
ANR	1970063	Identifier	lconv		1969863	1					
ANR	1970064	ExpressionStatement	"s = php_conv_fp ( ( fmt == 'f' ) ? 'F' : fmt , number , 0 , precision , ( fmt == 'f' ) ? LCONV_DECIMAL_POINT : '.' , & is_negative , & num_buf [ 1 ] , & s_len )"	264:3:7442:7586	1969863	5	True				
ANR	1970065	AssignmentExpression	"s = php_conv_fp ( ( fmt == 'f' ) ? 'F' : fmt , number , 0 , precision , ( fmt == 'f' ) ? LCONV_DECIMAL_POINT : '.' , & is_negative , & num_buf [ 1 ] , & s_len )"		1969863	0		=			
ANR	1970066	Identifier	s		1969863	0					
ANR	1970067	CallExpression	"php_conv_fp ( ( fmt == 'f' ) ? 'F' : fmt , number , 0 , precision , ( fmt == 'f' ) ? LCONV_DECIMAL_POINT : '.' , & is_negative , & num_buf [ 1 ] , & s_len )"		1969863	1					
ANR	1970068	Callee	php_conv_fp		1969863	0					
ANR	1970069	Identifier	php_conv_fp		1969863	0					
ANR	1970070	ArgumentList	( fmt == 'f' ) ? 'F' : fmt		1969863	1					
ANR	1970071	Argument	( fmt == 'f' ) ? 'F' : fmt		1969863	0					
ANR	1970072	ConditionalExpression	( fmt == 'f' ) ? 'F' : fmt		1969863	0					
ANR	1970073	Condition	fmt == 'f'		1969863	0					
ANR	1970074	EqualityExpression	fmt == 'f'		1969863	0		==			
ANR	1970075	Identifier	fmt		1969863	0					
ANR	1970076	PrimaryExpression	'f'		1969863	1					
ANR	1970077	PrimaryExpression	'F'		1969863	1					
ANR	1970078	Identifier	fmt		1969863	2					
ANR	1970079	Argument	number		1969863	1					
ANR	1970080	Identifier	number		1969863	0					
ANR	1970081	Argument	0		1969863	2					
ANR	1970082	PrimaryExpression	0		1969863	0					
ANR	1970083	Argument	precision		1969863	3					
ANR	1970084	Identifier	precision		1969863	0					
ANR	1970085	Argument	( fmt == 'f' ) ? LCONV_DECIMAL_POINT : '.'		1969863	4					
ANR	1970086	ConditionalExpression	( fmt == 'f' ) ? LCONV_DECIMAL_POINT : '.'		1969863	0					
ANR	1970087	Condition	fmt == 'f'		1969863	0					
ANR	1970088	EqualityExpression	fmt == 'f'		1969863	0		==			
ANR	1970089	Identifier	fmt		1969863	0					
ANR	1970090	PrimaryExpression	'f'		1969863	1					
ANR	1970091	Identifier	LCONV_DECIMAL_POINT		1969863	1					
ANR	1970092	PrimaryExpression	'.'		1969863	2					
ANR	1970093	Argument	& is_negative		1969863	5					
ANR	1970094	UnaryOperationExpression	& is_negative		1969863	0					
ANR	1970095	UnaryOperator	&		1969863	0					
ANR	1970096	Identifier	is_negative		1969863	1					
ANR	1970097	Argument	& num_buf [ 1 ]		1969863	6					
ANR	1970098	UnaryOperationExpression	& num_buf [ 1 ]		1969863	0					
ANR	1970099	UnaryOperator	&		1969863	0					
ANR	1970100	ArrayIndexing	num_buf [ 1 ]		1969863	1					
ANR	1970101	Identifier	num_buf		1969863	0					
ANR	1970102	PrimaryExpression	1		1969863	1					
ANR	1970103	Argument	& s_len		1969863	7					
ANR	1970104	UnaryOperationExpression	& s_len		1969863	0					
ANR	1970105	UnaryOperator	&		1969863	0					
ANR	1970106	Identifier	s_len		1969863	1					
ANR	1970107	IfStatement	if ( is_negative )		1969863	6					
ANR	1970108	Condition	is_negative	267:7:7595:7605	1969863	0	True				
ANR	1970109	Identifier	is_negative		1969863	0					
ANR	1970110	CompoundStatement		51:20:1350:1350	1969863	1					
ANR	1970111	ExpressionStatement	num_buf [ 0 ] = '-'	268:4:7614:7630	1969863	0	True				
ANR	1970112	AssignmentExpression	num_buf [ 0 ] = '-'		1969863	0		=			
ANR	1970113	ArrayIndexing	num_buf [ 0 ]		1969863	0					
ANR	1970114	Identifier	num_buf		1969863	0					
ANR	1970115	PrimaryExpression	0		1969863	1					
ANR	1970116	PrimaryExpression	'-'		1969863	1					
ANR	1970117	ExpressionStatement	s = num_buf	269:4:7636:7647	1969863	1	True				
ANR	1970118	AssignmentExpression	s = num_buf		1969863	0		=			
ANR	1970119	Identifier	s		1969863	0					
ANR	1970120	Identifier	num_buf		1969863	1					
ANR	1970121	ExpressionStatement	s_len ++	270:4:7653:7660	1969863	2	True				
ANR	1970122	PostIncDecOperationExpression	s_len ++		1969863	0					
ANR	1970123	Identifier	s_len		1969863	0					
ANR	1970124	IncDec	++		1969863	1					
ANR	1970125	ElseStatement	else		1969863	0					
ANR	1970126	IfStatement	if ( always_sign )		1969863	0					
ANR	1970127	Condition	always_sign	271:14:7676:7686	1969863	0	True				
ANR	1970128	Identifier	always_sign		1969863	0					
ANR	1970129	CompoundStatement		55:27:1431:1431	1969863	1					
ANR	1970130	ExpressionStatement	num_buf [ 0 ] = '+'	272:4:7695:7711	1969863	0	True				
ANR	1970131	AssignmentExpression	num_buf [ 0 ] = '+'		1969863	0		=			
ANR	1970132	ArrayIndexing	num_buf [ 0 ]		1969863	0					
ANR	1970133	Identifier	num_buf		1969863	0					
ANR	1970134	PrimaryExpression	0		1969863	1					
ANR	1970135	PrimaryExpression	'+'		1969863	1					
ANR	1970136	ExpressionStatement	s = num_buf	273:4:7717:7728	1969863	1	True				
ANR	1970137	AssignmentExpression	s = num_buf		1969863	0		=			
ANR	1970138	Identifier	s		1969863	0					
ANR	1970139	Identifier	num_buf		1969863	1					
ANR	1970140	ExpressionStatement	s_len ++	274:4:7734:7741	1969863	2	True				
ANR	1970141	PostIncDecOperationExpression	s_len ++		1969863	0					
ANR	1970142	Identifier	s_len		1969863	0					
ANR	1970143	IncDec	++		1969863	1					
ANR	1970144	BreakStatement	break ;	276:3:7751:7756	1969863	7	True				
ANR	1970145	Label	case 'g' :	278:2:7761:7769	1969863	8	True				
ANR	1970146	Label	case 'G' :	279:2:7773:7781	1969863	9	True				
ANR	1970147	IfStatement	if ( precision == 0 )		1969863	10					
ANR	1970148	Condition	precision == 0	280:7:7790:7803	1969863	0	True				
ANR	1970149	EqualityExpression	precision == 0		1969863	0		==			
ANR	1970150	Identifier	precision		1969863	0					
ANR	1970151	PrimaryExpression	0		1969863	1					
ANR	1970152	ExpressionStatement	precision = 1	281:4:7810:7823	1969863	1	True				
ANR	1970153	AssignmentExpression	precision = 1		1969863	0		=			
ANR	1970154	Identifier	precision		1969863	0					
ANR	1970155	PrimaryExpression	1		1969863	1					
ANR	1970156	ExpressionStatement	localeconv_r ( & lconv )	287:3:7937:7957	1969863	11	True				
ANR	1970157	CallExpression	localeconv_r ( & lconv )		1969863	0					
ANR	1970158	Callee	localeconv_r		1969863	0					
ANR	1970159	Identifier	localeconv_r		1969863	0					
ANR	1970160	ArgumentList	& lconv		1969863	1					
ANR	1970161	Argument	& lconv		1969863	0					
ANR	1970162	UnaryOperationExpression	& lconv		1969863	0					
ANR	1970163	UnaryOperator	&		1969863	0					
ANR	1970164	Identifier	lconv		1969863	1					
ANR	1970165	ExpressionStatement	"s = php_gcvt ( number , precision , LCONV_DECIMAL_POINT , ( fmt == 'G' ) ? 'E' : 'e' , & num_buf [ 1 ] )"	292:3:8007:8094	1969863	12	True				
ANR	1970166	AssignmentExpression	"s = php_gcvt ( number , precision , LCONV_DECIMAL_POINT , ( fmt == 'G' ) ? 'E' : 'e' , & num_buf [ 1 ] )"		1969863	0		=			
ANR	1970167	Identifier	s		1969863	0					
ANR	1970168	CallExpression	"php_gcvt ( number , precision , LCONV_DECIMAL_POINT , ( fmt == 'G' ) ? 'E' : 'e' , & num_buf [ 1 ] )"		1969863	1					
ANR	1970169	Callee	php_gcvt		1969863	0					
ANR	1970170	Identifier	php_gcvt		1969863	0					
ANR	1970171	ArgumentList	number		1969863	1					
ANR	1970172	Argument	number		1969863	0					
ANR	1970173	Identifier	number		1969863	0					
ANR	1970174	Argument	precision		1969863	1					
ANR	1970175	Identifier	precision		1969863	0					
ANR	1970176	Argument	LCONV_DECIMAL_POINT		1969863	2					
ANR	1970177	Identifier	LCONV_DECIMAL_POINT		1969863	0					
ANR	1970178	Argument	( fmt == 'G' ) ? 'E' : 'e'		1969863	3					
ANR	1970179	ConditionalExpression	( fmt == 'G' ) ? 'E' : 'e'		1969863	0					
ANR	1970180	Condition	fmt == 'G'		1969863	0					
ANR	1970181	EqualityExpression	fmt == 'G'		1969863	0		==			
ANR	1970182	Identifier	fmt		1969863	0					
ANR	1970183	PrimaryExpression	'G'		1969863	1					
ANR	1970184	PrimaryExpression	'E'		1969863	1					
ANR	1970185	PrimaryExpression	'e'		1969863	2					
ANR	1970186	Argument	& num_buf [ 1 ]		1969863	4					
ANR	1970187	UnaryOperationExpression	& num_buf [ 1 ]		1969863	0					
ANR	1970188	UnaryOperator	&		1969863	0					
ANR	1970189	ArrayIndexing	num_buf [ 1 ]		1969863	1					
ANR	1970190	Identifier	num_buf		1969863	0					
ANR	1970191	PrimaryExpression	1		1969863	1					
ANR	1970192	ExpressionStatement	is_negative = 0	293:3:8099:8114	1969863	13	True				
ANR	1970193	AssignmentExpression	is_negative = 0		1969863	0		=			
ANR	1970194	Identifier	is_negative		1969863	0					
ANR	1970195	PrimaryExpression	0		1969863	1					
ANR	1970196	IfStatement	if ( * s == '-' )		1969863	14					
ANR	1970197	Condition	* s == '-'	294:7:8123:8131	1969863	0	True				
ANR	1970198	EqualityExpression	* s == '-'		1969863	0		==			
ANR	1970199	UnaryOperationExpression	* s		1969863	0					
ANR	1970200	UnaryOperator	*		1969863	0					
ANR	1970201	Identifier	s		1969863	1					
ANR	1970202	PrimaryExpression	'-'		1969863	1					
ANR	1970203	CompoundStatement		78:18:1876:1876	1969863	1					
ANR	1970204	ExpressionStatement	is_negative = 1	295:4:8140:8155	1969863	0	True				
ANR	1970205	AssignmentExpression	is_negative = 1		1969863	0		=			
ANR	1970206	Identifier	is_negative		1969863	0					
ANR	1970207	PrimaryExpression	1		1969863	1					
ANR	1970208	ExpressionStatement	s = & num_buf [ 1 ]	296:4:8161:8176	1969863	1	True				
ANR	1970209	AssignmentExpression	s = & num_buf [ 1 ]		1969863	0		=			
ANR	1970210	Identifier	s		1969863	0					
ANR	1970211	UnaryOperationExpression	& num_buf [ 1 ]		1969863	1					
ANR	1970212	UnaryOperator	&		1969863	0					
ANR	1970213	ArrayIndexing	num_buf [ 1 ]		1969863	1					
ANR	1970214	Identifier	num_buf		1969863	0					
ANR	1970215	PrimaryExpression	1		1969863	1					
ANR	1970216	ElseStatement	else		1969863	0					
ANR	1970217	IfStatement	if ( always_sign )		1969863	0					
ANR	1970218	Condition	always_sign	297:14:8192:8202	1969863	0	True				
ANR	1970219	Identifier	always_sign		1969863	0					
ANR	1970220	CompoundStatement		81:27:1947:1947	1969863	1					
ANR	1970221	ExpressionStatement	num_buf [ 0 ] = '+'	298:4:8211:8227	1969863	0	True				
ANR	1970222	AssignmentExpression	num_buf [ 0 ] = '+'		1969863	0		=			
ANR	1970223	ArrayIndexing	num_buf [ 0 ]		1969863	0					
ANR	1970224	Identifier	num_buf		1969863	0					
ANR	1970225	PrimaryExpression	0		1969863	1					
ANR	1970226	PrimaryExpression	'+'		1969863	1					
ANR	1970227	ExpressionStatement	s = num_buf	299:4:8233:8244	1969863	1	True				
ANR	1970228	AssignmentExpression	s = num_buf		1969863	0		=			
ANR	1970229	Identifier	s		1969863	0					
ANR	1970230	Identifier	num_buf		1969863	1					
ANR	1970231	ExpressionStatement	s_len = strlen ( s )	302:3:8255:8272	1969863	15	True				
ANR	1970232	AssignmentExpression	s_len = strlen ( s )		1969863	0		=			
ANR	1970233	Identifier	s_len		1969863	0					
ANR	1970234	CallExpression	strlen ( s )		1969863	1					
ANR	1970235	Callee	strlen		1969863	0					
ANR	1970236	Identifier	strlen		1969863	0					
ANR	1970237	ArgumentList	s		1969863	1					
ANR	1970238	Argument	s		1969863	0					
ANR	1970239	Identifier	s		1969863	0					
ANR	1970240	BreakStatement	break ;	303:3:8277:8282	1969863	16	True				
ANR	1970241	ExpressionStatement	"php_sprintf_appendstring ( buffer , pos , size , s , width , 0 , padding , alignment , s_len , is_negative , 0 , always_sign )"	306:1:8289:8409	1969863	9	True				
ANR	1970242	CallExpression	"php_sprintf_appendstring ( buffer , pos , size , s , width , 0 , padding , alignment , s_len , is_negative , 0 , always_sign )"		1969863	0					
ANR	1970243	Callee	php_sprintf_appendstring		1969863	0					
ANR	1970244	Identifier	php_sprintf_appendstring		1969863	0					
ANR	1970245	ArgumentList	buffer		1969863	1					
ANR	1970246	Argument	buffer		1969863	0					
ANR	1970247	Identifier	buffer		1969863	0					
ANR	1970248	Argument	pos		1969863	1					
ANR	1970249	Identifier	pos		1969863	0					
ANR	1970250	Argument	size		1969863	2					
ANR	1970251	Identifier	size		1969863	0					
ANR	1970252	Argument	s		1969863	3					
ANR	1970253	Identifier	s		1969863	0					
ANR	1970254	Argument	width		1969863	4					
ANR	1970255	Identifier	width		1969863	0					
ANR	1970256	Argument	0		1969863	5					
ANR	1970257	PrimaryExpression	0		1969863	0					
ANR	1970258	Argument	padding		1969863	6					
ANR	1970259	Identifier	padding		1969863	0					
ANR	1970260	Argument	alignment		1969863	7					
ANR	1970261	Identifier	alignment		1969863	0					
ANR	1970262	Argument	s_len		1969863	8					
ANR	1970263	Identifier	s_len		1969863	0					
ANR	1970264	Argument	is_negative		1969863	9					
ANR	1970265	Identifier	is_negative		1969863	0					
ANR	1970266	Argument	0		1969863	10					
ANR	1970267	PrimaryExpression	0		1969863	0					
ANR	1970268	Argument	always_sign		1969863	11					
ANR	1970269	Identifier	always_sign		1969863	0					
ANR	1970270	ReturnType	inline static void		1969863	1					
ANR	1970271	Identifier	php_sprintf_appenddouble		1969863	2					
ANR	1970272	ParameterList	"char * * buffer , int * pos , int * size , double number , int width , char padding , int alignment , int precision , int adjust , char fmt , int always_sign TSRMLS_DC"		1969863	3					
ANR	1970273	Parameter	char * * buffer	210:25:6060:6072	1969863	0	True				
ANR	1970274	ParameterType	char * *		1969863	0					
ANR	1970275	Identifier	buffer		1969863	1					
ANR	1970276	Parameter	int * pos	210:40:6075:6082	1969863	1	True				
ANR	1970277	ParameterType	int *		1969863	0					
ANR	1970278	Identifier	pos		1969863	1					
ANR	1970279	Parameter	int * size	211:7:6092:6100	1969863	2	True				
ANR	1970280	ParameterType	int *		1969863	0					
ANR	1970281	Identifier	size		1969863	1					
ANR	1970282	Parameter	double number	211:18:6103:6115	1969863	3	True				
ANR	1970283	ParameterType	double		1969863	0					
ANR	1970284	Identifier	number		1969863	1					
ANR	1970285	Parameter	int width	212:7:6125:6133	1969863	4	True				
ANR	1970286	ParameterType	int		1969863	0					
ANR	1970287	Identifier	width		1969863	1					
ANR	1970288	Parameter	char padding	212:18:6136:6147	1969863	5	True				
ANR	1970289	ParameterType	char		1969863	0					
ANR	1970290	Identifier	padding		1969863	1					
ANR	1970291	Parameter	int alignment	213:7:6157:6169	1969863	6	True				
ANR	1970292	ParameterType	int		1969863	0					
ANR	1970293	Identifier	alignment		1969863	1					
ANR	1970294	Parameter	int precision	213:22:6172:6184	1969863	7	True				
ANR	1970295	ParameterType	int		1969863	0					
ANR	1970296	Identifier	precision		1969863	1					
ANR	1970297	Parameter	int adjust	214:7:6194:6203	1969863	8	True				
ANR	1970298	ParameterType	int		1969863	0					
ANR	1970299	Identifier	adjust		1969863	1					
ANR	1970300	Parameter	char fmt	214:19:6206:6213	1969863	9	True				
ANR	1970301	ParameterType	char		1969863	0					
ANR	1970302	Identifier	fmt		1969863	1					
ANR	1970303	Parameter	int always_sign TSRMLS_DC	215:7:6223:6254	1969863	10	True				
ANR	1970304	ParameterType	int always_sign		1969863	0					
ANR	1970305	Identifier	TSRMLS_DC		1969863	1					
ANR	1970306	CFGEntryNode	ENTRY		1969863		True				
ANR	1970307	CFGExitNode	EXIT		1969863		True				
ANR	1970308	Symbol	lconv		1969863						
ANR	1970309	Symbol	LCONV_DECIMAL_POINT		1969863						
ANR	1970310	Symbol	ADJ_PRECISION		1969863						
ANR	1970311	Symbol	& s_len		1969863						
ANR	1970312	Symbol	precision		1969863						
ANR	1970313	Symbol	s_len		1969863						
ANR	1970314	Symbol	fmt		1969863						
ANR	1970315	Symbol	TSRMLS_DC		1969863						
ANR	1970316	Symbol	& lconv		1969863						
ANR	1970317	Symbol	& is_negative		1969863						
ANR	1970318	Symbol	number		1969863						
ANR	1970319	Symbol	strlen		1969863						
ANR	1970320	Symbol	zend_isinf		1969863						
ANR	1970321	Symbol	php_gcvt		1969863						
ANR	1970322	Symbol	pos		1969863						
ANR	1970323	Symbol	zend_isnan		1969863						
ANR	1970324	Symbol	buffer		1969863						
ANR	1970325	Symbol	padding		1969863						
ANR	1970326	Symbol	* buffer		1969863						
ANR	1970327	Symbol	NULL		1969863						
ANR	1970328	Symbol	* num_buf		1969863						
ANR	1970329	Symbol	FLOAT_PRECISION		1969863						
ANR	1970330	Symbol	always_sign		1969863						
ANR	1970331	Symbol	MAX_FLOAT_PRECISION		1969863						
ANR	1970332	Symbol	php_conv_fp		1969863						
ANR	1970333	Symbol	s		1969863						
ANR	1970334	Symbol	size		1969863						
ANR	1970335	Symbol	adjust		1969863						
ANR	1970336	Symbol	width		1969863						
ANR	1970337	Symbol	num_buf		1969863						
ANR	1970338	Symbol	alignment		1969863						
ANR	1970339	Symbol	is_negative		1969863						
ANR	1970340	Symbol	* s		1969863						
ANR	1970341	Function	php_sprintf_append2n	312:0:8457:9286							
ANR	1970342	FunctionDef	"php_sprintf_append2n (char * * buffer , int * pos , int * size , long number , int width , char padding , int alignment , int n , char * chartable , int expprec)"		1970341	0					
ANR	1970343	CompoundStatement		316:0:8635:9286	1970341	0					
ANR	1970344	IdentifierDeclStatement	char numbuf [ NUM_BUF_SIZE ] ;	317:1:8638:8663	1970341	0	True				
ANR	1970345	IdentifierDecl	numbuf [ NUM_BUF_SIZE ]		1970341	0					
ANR	1970346	IdentifierDeclType	char [ NUM_BUF_SIZE ]		1970341	0					
ANR	1970347	Identifier	numbuf		1970341	1					
ANR	1970348	Identifier	NUM_BUF_SIZE		1970341	2					
ANR	1970349	Statement	register	318:1:8666:8673	1970341	1	True				
ANR	1970350	IdentifierDeclStatement	unsigned long num ;	318:10:8675:8692	1970341	2	True				
ANR	1970351	IdentifierDecl	num		1970341	0					
ANR	1970352	IdentifierDeclType	unsigned long		1970341	0					
ANR	1970353	Identifier	num		1970341	1					
ANR	1970354	Statement	register	319:1:8695:8702	1970341	3	True				
ANR	1970355	IdentifierDeclStatement	unsigned int i = NUM_BUF_SIZE - 1 ;	319:10:8704:8738	1970341	4	True				
ANR	1970356	IdentifierDecl	i = NUM_BUF_SIZE - 1		1970341	0					
ANR	1970357	IdentifierDeclType	unsigned int		1970341	0					
ANR	1970358	Identifier	i		1970341	1					
ANR	1970359	AssignmentExpression	i = NUM_BUF_SIZE - 1		1970341	2		=			
ANR	1970360	Identifier	i		1970341	0					
ANR	1970361	AdditiveExpression	NUM_BUF_SIZE - 1		1970341	1		-			
ANR	1970362	Identifier	NUM_BUF_SIZE		1970341	0					
ANR	1970363	PrimaryExpression	1		1970341	1					
ANR	1970364	Statement	register	320:1:8741:8748	1970341	5	True				
ANR	1970365	IdentifierDeclStatement	int andbits = ( 1 << n ) - 1 ;	320:10:8750:8776	1970341	6	True				
ANR	1970366	IdentifierDecl	andbits = ( 1 << n ) - 1		1970341	0					
ANR	1970367	IdentifierDeclType	int		1970341	0					
ANR	1970368	Identifier	andbits		1970341	1					
ANR	1970369	AssignmentExpression	andbits = ( 1 << n ) - 1		1970341	2		=			
ANR	1970370	Identifier	andbits		1970341	0					
ANR	1970371	AdditiveExpression	( 1 << n ) - 1		1970341	1		-			
ANR	1970372	ShiftExpression	1 << n		1970341	0		<<			
ANR	1970373	PrimaryExpression	1		1970341	0					
ANR	1970374	Identifier	n		1970341	1					
ANR	1970375	PrimaryExpression	1		1970341	1					
ANR	1970376	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: append2n(%x, %x, %x, %d, %d, '%c', %d, %d, %x)\\n"" , * buffer , pos , size , number , width , padding , alignment , n , chartable ) )"	322:1:8780:8936	1970341	7	True				
ANR	1970377	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: append2n(%x, %x, %x, %d, %d, '%c', %d, %d, %x)\\n"" , * buffer , pos , size , number , width , padding , alignment , n , chartable ) )"		1970341	0					
ANR	1970378	Callee	PRINTF_DEBUG		1970341	0					
ANR	1970379	Identifier	PRINTF_DEBUG		1970341	0					
ANR	1970380	ArgumentList	"""sprintf: append2n(%x, %x, %x, %d, %d, '%c', %d, %d, %x)\\n"" , * buffer , pos , size , number , width , padding , alignment , n , chartable"		1970341	1					
ANR	1970381	Argument	"""sprintf: append2n(%x, %x, %x, %d, %d, '%c', %d, %d, %x)\\n"" , * buffer , pos , size , number , width , padding , alignment , n , chartable"		1970341	0					
ANR	1970382	Expression	"""sprintf: append2n(%x, %x, %x, %d, %d, '%c', %d, %d, %x)\\n"" , * buffer , pos , size , number , width , padding , alignment , n , chartable"		1970341	0					
ANR	1970383	PrimaryExpression	"""sprintf: append2n(%x, %x, %x, %d, %d, '%c', %d, %d, %x)\\n"""		1970341	0					
ANR	1970384	Expression	"* buffer , pos , size , number , width , padding , alignment , n , chartable"		1970341	1					
ANR	1970385	UnaryOperationExpression	* buffer		1970341	0					
ANR	1970386	UnaryOperator	*		1970341	0					
ANR	1970387	Identifier	buffer		1970341	1					
ANR	1970388	Expression	"pos , size , number , width , padding , alignment , n , chartable"		1970341	1					
ANR	1970389	Identifier	pos		1970341	0					
ANR	1970390	Expression	"size , number , width , padding , alignment , n , chartable"		1970341	1					
ANR	1970391	Identifier	size		1970341	0					
ANR	1970392	Expression	"number , width , padding , alignment , n , chartable"		1970341	1					
ANR	1970393	Identifier	number		1970341	0					
ANR	1970394	Expression	"width , padding , alignment , n , chartable"		1970341	1					
ANR	1970395	Identifier	width		1970341	0					
ANR	1970396	Expression	"padding , alignment , n , chartable"		1970341	1					
ANR	1970397	Identifier	padding		1970341	0					
ANR	1970398	Expression	"alignment , n , chartable"		1970341	1					
ANR	1970399	Identifier	alignment		1970341	0					
ANR	1970400	Expression	"n , chartable"		1970341	1					
ANR	1970401	Identifier	n		1970341	0					
ANR	1970402	Identifier	chartable		1970341	1					
ANR	1970403	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: append2n 2^%d andbits=%x\\n"" , n , andbits ) )"	325:1:8939:9004	1970341	8	True				
ANR	1970404	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: append2n 2^%d andbits=%x\\n"" , n , andbits ) )"		1970341	0					
ANR	1970405	Callee	PRINTF_DEBUG		1970341	0					
ANR	1970406	Identifier	PRINTF_DEBUG		1970341	0					
ANR	1970407	ArgumentList	"""sprintf: append2n 2^%d andbits=%x\\n"" , n , andbits"		1970341	1					
ANR	1970408	Argument	"""sprintf: append2n 2^%d andbits=%x\\n"" , n , andbits"		1970341	0					
ANR	1970409	Expression	"""sprintf: append2n 2^%d andbits=%x\\n"" , n , andbits"		1970341	0					
ANR	1970410	PrimaryExpression	"""sprintf: append2n 2^%d andbits=%x\\n"""		1970341	0					
ANR	1970411	Expression	"n , andbits"		1970341	1					
ANR	1970412	Identifier	n		1970341	0					
ANR	1970413	Identifier	andbits		1970341	1					
ANR	1970414	ExpressionStatement	num = ( unsigned long ) number	327:1:9008:9036	1970341	9	True				
ANR	1970415	AssignmentExpression	num = ( unsigned long ) number		1970341	0		=			
ANR	1970416	Identifier	num		1970341	0					
ANR	1970417	CastExpression	( unsigned long ) number		1970341	1					
ANR	1970418	CastTarget	unsigned long		1970341	0					
ANR	1970419	Identifier	number		1970341	1					
ANR	1970420	ExpressionStatement	numbuf [ i ] = '\\0'	328:1:9039:9055	1970341	10	True				
ANR	1970421	AssignmentExpression	numbuf [ i ] = '\\0'		1970341	0		=			
ANR	1970422	ArrayIndexing	numbuf [ i ]		1970341	0					
ANR	1970423	Identifier	numbuf		1970341	0					
ANR	1970424	Identifier	i		1970341	1					
ANR	1970425	PrimaryExpression	'\\0'		1970341	1					
ANR	1970426	DoStatement	do		1970341	11					
ANR	1970427	CompoundStatement		15:4:426:426	1970341	0					
ANR	1970428	ExpressionStatement	numbuf [ -- i ] = chartable [ ( num & andbits ) ]	331:2:9066:9106	1970341	0	True				
ANR	1970429	AssignmentExpression	numbuf [ -- i ] = chartable [ ( num & andbits ) ]		1970341	0		=			
ANR	1970430	ArrayIndexing	numbuf [ -- i ]		1970341	0					
ANR	1970431	Identifier	numbuf		1970341	0					
ANR	1970432	UnaryExpression	-- i		1970341	1					
ANR	1970433	IncDec	--		1970341	0					
ANR	1970434	Identifier	i		1970341	1					
ANR	1970435	ArrayIndexing	chartable [ ( num & andbits ) ]		1970341	1					
ANR	1970436	Identifier	chartable		1970341	0					
ANR	1970437	BitAndExpression	num & andbits		1970341	1		&			
ANR	1970438	Identifier	num		1970341	0					
ANR	1970439	Identifier	andbits		1970341	1					
ANR	1970440	ExpressionStatement	num >>= n	332:2:9110:9119	1970341	1	True				
ANR	1970441	AssignmentExpression	num >>= n		1970341	0		>>=			
ANR	1970442	Identifier	num		1970341	0					
ANR	1970443	Identifier	n		1970341	1					
ANR	1970444	Condition	num > 0	334:8:9132:9138	1970341	1	True				
ANR	1970445	RelationalExpression	num > 0		1970341	0		>			
ANR	1970446	Identifier	num		1970341	0					
ANR	1970447	PrimaryExpression	0		1970341	1					
ANR	1970448	ExpressionStatement	"php_sprintf_appendstring ( buffer , pos , size , & numbuf [ i ] , width , 0 , padding , alignment , ( NUM_BUF_SIZE - 1 ) - i , 0 , expprec , 0 )"	336:1:9144:9284	1970341	12	True				
ANR	1970449	CallExpression	"php_sprintf_appendstring ( buffer , pos , size , & numbuf [ i ] , width , 0 , padding , alignment , ( NUM_BUF_SIZE - 1 ) - i , 0 , expprec , 0 )"		1970341	0					
ANR	1970450	Callee	php_sprintf_appendstring		1970341	0					
ANR	1970451	Identifier	php_sprintf_appendstring		1970341	0					
ANR	1970452	ArgumentList	buffer		1970341	1					
ANR	1970453	Argument	buffer		1970341	0					
ANR	1970454	Identifier	buffer		1970341	0					
ANR	1970455	Argument	pos		1970341	1					
ANR	1970456	Identifier	pos		1970341	0					
ANR	1970457	Argument	size		1970341	2					
ANR	1970458	Identifier	size		1970341	0					
ANR	1970459	Argument	& numbuf [ i ]		1970341	3					
ANR	1970460	UnaryOperationExpression	& numbuf [ i ]		1970341	0					
ANR	1970461	UnaryOperator	&		1970341	0					
ANR	1970462	ArrayIndexing	numbuf [ i ]		1970341	1					
ANR	1970463	Identifier	numbuf		1970341	0					
ANR	1970464	Identifier	i		1970341	1					
ANR	1970465	Argument	width		1970341	4					
ANR	1970466	Identifier	width		1970341	0					
ANR	1970467	Argument	0		1970341	5					
ANR	1970468	PrimaryExpression	0		1970341	0					
ANR	1970469	Argument	padding		1970341	6					
ANR	1970470	Identifier	padding		1970341	0					
ANR	1970471	Argument	alignment		1970341	7					
ANR	1970472	Identifier	alignment		1970341	0					
ANR	1970473	Argument	( NUM_BUF_SIZE - 1 ) - i		1970341	8					
ANR	1970474	AdditiveExpression	( NUM_BUF_SIZE - 1 ) - i		1970341	0		-			
ANR	1970475	AdditiveExpression	NUM_BUF_SIZE - 1		1970341	0		-			
ANR	1970476	Identifier	NUM_BUF_SIZE		1970341	0					
ANR	1970477	PrimaryExpression	1		1970341	1					
ANR	1970478	Identifier	i		1970341	1					
ANR	1970479	Argument	0		1970341	9					
ANR	1970480	PrimaryExpression	0		1970341	0					
ANR	1970481	Argument	expprec		1970341	10					
ANR	1970482	Identifier	expprec		1970341	0					
ANR	1970483	Argument	0		1970341	11					
ANR	1970484	PrimaryExpression	0		1970341	0					
ANR	1970485	ReturnType	inline static void		1970341	1					
ANR	1970486	Identifier	php_sprintf_append2n		1970341	2					
ANR	1970487	ParameterList	"char * * buffer , int * pos , int * size , long number , int width , char padding , int alignment , int n , char * chartable , int expprec"		1970341	3					
ANR	1970488	Parameter	char * * buffer	313:21:8497:8509	1970341	0	True				
ANR	1970489	ParameterType	char * *		1970341	0					
ANR	1970490	Identifier	buffer		1970341	1					
ANR	1970491	Parameter	int * pos	313:36:8512:8519	1970341	1	True				
ANR	1970492	ParameterType	int *		1970341	0					
ANR	1970493	Identifier	pos		1970341	1					
ANR	1970494	Parameter	int * size	313:46:8522:8530	1970341	2	True				
ANR	1970495	ParameterType	int *		1970341	0					
ANR	1970496	Identifier	size		1970341	1					
ANR	1970497	Parameter	long number	313:57:8533:8543	1970341	3	True				
ANR	1970498	ParameterType	long		1970341	0					
ANR	1970499	Identifier	number		1970341	1					
ANR	1970500	Parameter	int width	314:6:8552:8560	1970341	4	True				
ANR	1970501	ParameterType	int		1970341	0					
ANR	1970502	Identifier	width		1970341	1					
ANR	1970503	Parameter	char padding	314:17:8563:8574	1970341	5	True				
ANR	1970504	ParameterType	char		1970341	0					
ANR	1970505	Identifier	padding		1970341	1					
ANR	1970506	Parameter	int alignment	314:31:8577:8589	1970341	6	True				
ANR	1970507	ParameterType	int		1970341	0					
ANR	1970508	Identifier	alignment		1970341	1					
ANR	1970509	Parameter	int n	314:46:8592:8596	1970341	7	True				
ANR	1970510	ParameterType	int		1970341	0					
ANR	1970511	Identifier	n		1970341	1					
ANR	1970512	Parameter	char * chartable	315:6:8605:8619	1970341	8	True				
ANR	1970513	ParameterType	char *		1970341	0					
ANR	1970514	Identifier	chartable		1970341	1					
ANR	1970515	Parameter	int expprec	315:23:8622:8632	1970341	9	True				
ANR	1970516	ParameterType	int		1970341	0					
ANR	1970517	Identifier	expprec		1970341	1					
ANR	1970518	CFGEntryNode	ENTRY		1970341		True				
ANR	1970519	CFGExitNode	EXIT		1970341		True				
ANR	1970520	Symbol	padding		1970341						
ANR	1970521	Symbol	* buffer		1970341						
ANR	1970522	Symbol	expprec		1970341						
ANR	1970523	Symbol	num		1970341						
ANR	1970524	Symbol	* andbits		1970341						
ANR	1970525	Symbol	i		1970341						
ANR	1970526	Symbol	n		1970341						
ANR	1970527	Symbol	* num		1970341						
ANR	1970528	Symbol	number		1970341						
ANR	1970529	Symbol	* numbuf		1970341						
ANR	1970530	Symbol	* i		1970341						
ANR	1970531	Symbol	size		1970341						
ANR	1970532	Symbol	pos		1970341						
ANR	1970533	Symbol	numbuf		1970341						
ANR	1970534	Symbol	width		1970341						
ANR	1970535	Symbol	NUM_BUF_SIZE		1970341						
ANR	1970536	Symbol	buffer		1970341						
ANR	1970537	Symbol	* chartable		1970341						
ANR	1970538	Symbol	alignment		1970341						
ANR	1970539	Symbol	andbits		1970341						
ANR	1970540	Symbol	chartable		1970341						
ANR	1970541	Function	php_sprintf_getnumber	343:0:9332:9712							
ANR	1970542	FunctionDef	"php_sprintf_getnumber (char * buffer , int * pos)"		1970541	0					
ANR	1970543	CompoundStatement		345:0:9396:9712	1970541	0					
ANR	1970544	IdentifierDeclStatement	char * endptr ;	346:1:9399:9411	1970541	0	True				
ANR	1970545	IdentifierDecl	* endptr		1970541	0					
ANR	1970546	IdentifierDeclType	char *		1970541	0					
ANR	1970547	Identifier	endptr		1970541	1					
ANR	1970548	Statement	register	347:1:9414:9421	1970541	1	True				
ANR	1970549	IdentifierDeclStatement	"long num = strtol ( & buffer [ * pos ] , & endptr , 10 ) ;"	347:10:9423:9468	1970541	2	True				
ANR	1970550	IdentifierDecl	"num = strtol ( & buffer [ * pos ] , & endptr , 10 )"		1970541	0					
ANR	1970551	IdentifierDeclType	long		1970541	0					
ANR	1970552	Identifier	num		1970541	1					
ANR	1970553	AssignmentExpression	"num = strtol ( & buffer [ * pos ] , & endptr , 10 )"		1970541	2		=			
ANR	1970554	Identifier	num		1970541	0					
ANR	1970555	CallExpression	"strtol ( & buffer [ * pos ] , & endptr , 10 )"		1970541	1					
ANR	1970556	Callee	strtol		1970541	0					
ANR	1970557	Identifier	strtol		1970541	0					
ANR	1970558	ArgumentList	& buffer [ * pos ]		1970541	1					
ANR	1970559	Argument	& buffer [ * pos ]		1970541	0					
ANR	1970560	UnaryOperationExpression	& buffer [ * pos ]		1970541	0					
ANR	1970561	UnaryOperator	&		1970541	0					
ANR	1970562	ArrayIndexing	buffer [ * pos ]		1970541	1					
ANR	1970563	Identifier	buffer		1970541	0					
ANR	1970564	UnaryOperationExpression	* pos		1970541	1					
ANR	1970565	UnaryOperator	*		1970541	0					
ANR	1970566	Identifier	pos		1970541	1					
ANR	1970567	Argument	& endptr		1970541	1					
ANR	1970568	UnaryOperationExpression	& endptr		1970541	0					
ANR	1970569	UnaryOperator	&		1970541	0					
ANR	1970570	Identifier	endptr		1970541	1					
ANR	1970571	Argument	10		1970541	2					
ANR	1970572	PrimaryExpression	10		1970541	0					
ANR	1970573	Statement	register	348:1:9471:9478	1970541	3	True				
ANR	1970574	IdentifierDeclStatement	int i = 0 ;	348:10:9480:9489	1970541	4	True				
ANR	1970575	IdentifierDecl	i = 0		1970541	0					
ANR	1970576	IdentifierDeclType	int		1970541	0					
ANR	1970577	Identifier	i		1970541	1					
ANR	1970578	AssignmentExpression	i = 0		1970541	2		=			
ANR	1970579	Identifier	i		1970541	0					
ANR	1970580	PrimaryExpression	0		1970541	1					
ANR	1970581	IfStatement	if ( endptr != NULL )		1970541	5					
ANR	1970582	Condition	endptr != NULL	350:5:9497:9510	1970541	0	True				
ANR	1970583	EqualityExpression	endptr != NULL		1970541	0		!=			
ANR	1970584	Identifier	endptr		1970541	0					
ANR	1970585	Identifier	NULL		1970541	1					
ANR	1970586	CompoundStatement		6:21:116:116	1970541	1					
ANR	1970587	ExpressionStatement	i = ( endptr - & buffer [ * pos ] )	351:2:9517:9545	1970541	0	True				
ANR	1970588	AssignmentExpression	i = ( endptr - & buffer [ * pos ] )		1970541	0		=			
ANR	1970589	Identifier	i		1970541	0					
ANR	1970590	AdditiveExpression	endptr - & buffer [ * pos ]		1970541	1		-			
ANR	1970591	Identifier	endptr		1970541	0					
ANR	1970592	UnaryOperationExpression	& buffer [ * pos ]		1970541	1					
ANR	1970593	UnaryOperator	&		1970541	0					
ANR	1970594	ArrayIndexing	buffer [ * pos ]		1970541	1					
ANR	1970595	Identifier	buffer		1970541	0					
ANR	1970596	UnaryOperationExpression	* pos		1970541	1					
ANR	1970597	UnaryOperator	*		1970541	0					
ANR	1970598	Identifier	pos		1970541	1					
ANR	1970599	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf_getnumber: number was %d bytes long\\n"" , i ) )"	353:1:9551:9617	1970541	6	True				
ANR	1970600	CallExpression	"PRINTF_DEBUG ( ( ""sprintf_getnumber: number was %d bytes long\\n"" , i ) )"		1970541	0					
ANR	1970601	Callee	PRINTF_DEBUG		1970541	0					
ANR	1970602	Identifier	PRINTF_DEBUG		1970541	0					
ANR	1970603	ArgumentList	"""sprintf_getnumber: number was %d bytes long\\n"" , i"		1970541	1					
ANR	1970604	Argument	"""sprintf_getnumber: number was %d bytes long\\n"" , i"		1970541	0					
ANR	1970605	Expression	"""sprintf_getnumber: number was %d bytes long\\n"" , i"		1970541	0					
ANR	1970606	PrimaryExpression	"""sprintf_getnumber: number was %d bytes long\\n"""		1970541	0					
ANR	1970607	Identifier	i		1970541	1					
ANR	1970608	ExpressionStatement	* pos += i	354:1:9620:9629	1970541	7	True				
ANR	1970609	AssignmentExpression	* pos += i		1970541	0		+=			
ANR	1970610	UnaryOperationExpression	* pos		1970541	0					
ANR	1970611	UnaryOperator	*		1970541	0					
ANR	1970612	Identifier	pos		1970541	1					
ANR	1970613	Identifier	i		1970541	1					
ANR	1970614	IfStatement	if ( num >= INT_MAX || num < 0 )		1970541	8					
ANR	1970615	Condition	num >= INT_MAX || num < 0	356:5:9637:9661	1970541	0	True				
ANR	1970616	OrExpression	num >= INT_MAX || num < 0		1970541	0		||			
ANR	1970617	RelationalExpression	num >= INT_MAX		1970541	0		>=			
ANR	1970618	Identifier	num		1970541	0					
ANR	1970619	Identifier	INT_MAX		1970541	1					
ANR	1970620	RelationalExpression	num < 0		1970541	1		<			
ANR	1970621	Identifier	num		1970541	0					
ANR	1970622	PrimaryExpression	0		1970541	1					
ANR	1970623	CompoundStatement		12:32:267:267	1970541	1					
ANR	1970624	ReturnStatement	return - 1 ;	357:2:9668:9677	1970541	0	True				
ANR	1970625	UnaryOperationExpression	- 1		1970541	0					
ANR	1970626	UnaryOperator	-		1970541	0					
ANR	1970627	PrimaryExpression	1		1970541	1					
ANR	1970628	ElseStatement	else		1970541	0					
ANR	1970629	CompoundStatement		14:8:290:290	1970541	0					
ANR	1970630	ReturnStatement	return ( int ) num ;	359:2:9691:9707	1970541	0	True				
ANR	1970631	CastExpression	( int ) num		1970541	0					
ANR	1970632	CastTarget	int		1970541	0					
ANR	1970633	Identifier	num		1970541	1					
ANR	1970634	ReturnType	inline static int		1970541	1					
ANR	1970635	Identifier	php_sprintf_getnumber		1970541	2					
ANR	1970636	ParameterList	"char * buffer , int * pos"		1970541	3					
ANR	1970637	Parameter	char * buffer	344:22:9372:9383	1970541	0	True				
ANR	1970638	ParameterType	char *		1970541	0					
ANR	1970639	Identifier	buffer		1970541	1					
ANR	1970640	Parameter	int * pos	344:36:9386:9393	1970541	1	True				
ANR	1970641	ParameterType	int *		1970541	0					
ANR	1970642	Identifier	pos		1970541	1					
ANR	1970643	CFGEntryNode	ENTRY		1970541		True				
ANR	1970644	CFGExitNode	EXIT		1970541		True				
ANR	1970645	Symbol	NULL		1970541						
ANR	1970646	Symbol	pos		1970541						
ANR	1970647	Symbol	endptr		1970541						
ANR	1970648	Symbol	strtol		1970541						
ANR	1970649	Symbol	num		1970541						
ANR	1970650	Symbol	& endptr		1970541						
ANR	1970651	Symbol	INT_MAX		1970541						
ANR	1970652	Symbol	i		1970541						
ANR	1970653	Symbol	buffer		1970541						
ANR	1970654	Symbol	* pos		1970541						
ANR	1970655	Function	php_formatted_print	388:0:10451:18188							
ANR	1970656	FunctionDef	"php_formatted_print (int ht , int * len , int use_array , int format_offset TSRMLS_DC)"		1970655	0					
ANR	1970657	CompoundStatement		390:0:10547:18188	1970655	0					
ANR	1970658	IdentifierDeclStatement	"zval * * * args , * * z_format ;"	391:1:10550:10574	1970655	0	True				
ANR	1970659	IdentifierDecl	* * * args		1970655	0					
ANR	1970660	IdentifierDeclType	zval * * *		1970655	0					
ANR	1970661	Identifier	args		1970655	1					
ANR	1970662	IdentifierDecl	* * z_format		1970655	1					
ANR	1970663	IdentifierDeclType	zval * *		1970655	0					
ANR	1970664	Identifier	z_format		1970655	1					
ANR	1970665	IdentifierDeclStatement	"int argc , size = 240 , inpos = 0 , outpos = 0 , temppos ;"	392:1:10577:10629	1970655	1	True				
ANR	1970666	IdentifierDecl	argc		1970655	0					
ANR	1970667	IdentifierDeclType	int		1970655	0					
ANR	1970668	Identifier	argc		1970655	1					
ANR	1970669	IdentifierDecl	size = 240		1970655	1					
ANR	1970670	IdentifierDeclType	int		1970655	0					
ANR	1970671	Identifier	size		1970655	1					
ANR	1970672	AssignmentExpression	size = 240		1970655	2		=			
ANR	1970673	Identifier	size		1970655	0					
ANR	1970674	PrimaryExpression	240		1970655	1					
ANR	1970675	IdentifierDecl	inpos = 0		1970655	2					
ANR	1970676	IdentifierDeclType	int		1970655	0					
ANR	1970677	Identifier	inpos		1970655	1					
ANR	1970678	AssignmentExpression	inpos = 0		1970655	2		=			
ANR	1970679	Identifier	inpos		1970655	0					
ANR	1970680	PrimaryExpression	0		1970655	1					
ANR	1970681	IdentifierDecl	outpos = 0		1970655	3					
ANR	1970682	IdentifierDeclType	int		1970655	0					
ANR	1970683	Identifier	outpos		1970655	1					
ANR	1970684	AssignmentExpression	outpos = 0		1970655	2		=			
ANR	1970685	Identifier	outpos		1970655	0					
ANR	1970686	PrimaryExpression	0		1970655	1					
ANR	1970687	IdentifierDecl	temppos		1970655	4					
ANR	1970688	IdentifierDeclType	int		1970655	0					
ANR	1970689	Identifier	temppos		1970655	1					
ANR	1970690	IdentifierDeclStatement	"int alignment , currarg , adjusting , argnum , width , precision ;"	393:1:10632:10691	1970655	2	True				
ANR	1970691	IdentifierDecl	alignment		1970655	0					
ANR	1970692	IdentifierDeclType	int		1970655	0					
ANR	1970693	Identifier	alignment		1970655	1					
ANR	1970694	IdentifierDecl	currarg		1970655	1					
ANR	1970695	IdentifierDeclType	int		1970655	0					
ANR	1970696	Identifier	currarg		1970655	1					
ANR	1970697	IdentifierDecl	adjusting		1970655	2					
ANR	1970698	IdentifierDeclType	int		1970655	0					
ANR	1970699	Identifier	adjusting		1970655	1					
ANR	1970700	IdentifierDecl	argnum		1970655	3					
ANR	1970701	IdentifierDeclType	int		1970655	0					
ANR	1970702	Identifier	argnum		1970655	1					
ANR	1970703	IdentifierDecl	width		1970655	4					
ANR	1970704	IdentifierDeclType	int		1970655	0					
ANR	1970705	Identifier	width		1970655	1					
ANR	1970706	IdentifierDecl	precision		1970655	5					
ANR	1970707	IdentifierDeclType	int		1970655	0					
ANR	1970708	Identifier	precision		1970655	1					
ANR	1970709	IdentifierDeclStatement	"char * format , * result , padding ;"	394:1:10694:10724	1970655	3	True				
ANR	1970710	IdentifierDecl	* format		1970655	0					
ANR	1970711	IdentifierDeclType	char *		1970655	0					
ANR	1970712	Identifier	format		1970655	1					
ANR	1970713	IdentifierDecl	* result		1970655	1					
ANR	1970714	IdentifierDeclType	char *		1970655	0					
ANR	1970715	Identifier	result		1970655	1					
ANR	1970716	IdentifierDecl	padding		1970655	2					
ANR	1970717	IdentifierDeclType	char		1970655	0					
ANR	1970718	Identifier	padding		1970655	1					
ANR	1970719	IdentifierDeclStatement	int always_sign ;	395:1:10727:10742	1970655	4	True				
ANR	1970720	IdentifierDecl	always_sign		1970655	0					
ANR	1970721	IdentifierDeclType	int		1970655	0					
ANR	1970722	Identifier	always_sign		1970655	1					
ANR	1970723	IdentifierDeclStatement	int format_len ;	396:1:10745:10759	1970655	5	True				
ANR	1970724	IdentifierDecl	format_len		1970655	0					
ANR	1970725	IdentifierDeclType	int		1970655	0					
ANR	1970726	Identifier	format_len		1970655	1					
ANR	1970727	Statement	if	398:1:10763:10764	1970655	6	True				
ANR	1970728	Statement	(	398:4:10766:10766	1970655	7	True				
ANR	1970729	Statement	zend_parse_parameters	398:5:10767:10787	1970655	8	True				
ANR	1970730	Statement	(	398:26:10788:10788	1970655	9	True				
ANR	1970731	Statement	ZEND_NUM_ARGS	398:27:10789:10801	1970655	10	True				
ANR	1970732	Statement	(	398:40:10802:10802	1970655	11	True				
ANR	1970733	Statement	)	398:41:10803:10803	1970655	12	True				
ANR	1970734	Statement	TSRMLS_CC	398:43:10805:10813	1970655	13	True				
ANR	1970735	Statement	","	398:52:10814:10814	1970655	14	True				
ANR	1970736	Statement	"""+"""	398:54:10816:10818	1970655	15	True				
ANR	1970737	Statement	","	398:57:10819:10819	1970655	16	True				
ANR	1970738	Statement	&	398:59:10821:10821	1970655	17	True				
ANR	1970739	Statement	args	398:60:10822:10825	1970655	18	True				
ANR	1970740	Statement	","	398:64:10826:10826	1970655	19	True				
ANR	1970741	Statement	&	398:66:10828:10828	1970655	20	True				
ANR	1970742	Statement	argc	398:67:10829:10832	1970655	21	True				
ANR	1970743	Statement	)	398:71:10833:10833	1970655	22	True				
ANR	1970744	Statement	==	398:73:10835:10836	1970655	23	True				
ANR	1970745	Statement	FAILURE	398:76:10838:10844	1970655	24	True				
ANR	1970746	Statement	)	398:83:10845:10845	1970655	25	True				
ANR	1970747	CompoundStatement		9:85:299:299	1970655	26					
ANR	1970748	ReturnStatement	return NULL ;	399:2:10851:10862	1970655	0	True				
ANR	1970749	Identifier	NULL		1970655	0					
ANR	1970750	IfStatement	if ( ( use_array && argc != ( 2 + format_offset ) ) || ( ! use_array && argc < ( 1 + format_offset ) ) )		1970655	27					
ANR	1970751	Condition	( use_array && argc != ( 2 + format_offset ) ) || ( ! use_array && argc < ( 1 + format_offset ) )	403:5:10906:10997	1970655	0	True				
ANR	1970752	OrExpression	( use_array && argc != ( 2 + format_offset ) ) || ( ! use_array && argc < ( 1 + format_offset ) )		1970655	0		||			
ANR	1970753	AndExpression	use_array && argc != ( 2 + format_offset )		1970655	0		&&			
ANR	1970754	Identifier	use_array		1970655	0					
ANR	1970755	EqualityExpression	argc != ( 2 + format_offset )		1970655	1		!=			
ANR	1970756	Identifier	argc		1970655	0					
ANR	1970757	AdditiveExpression	2 + format_offset		1970655	1		+			
ANR	1970758	PrimaryExpression	2		1970655	0					
ANR	1970759	Identifier	format_offset		1970655	1					
ANR	1970760	AndExpression	! use_array && argc < ( 1 + format_offset )		1970655	1		&&			
ANR	1970761	UnaryOperationExpression	! use_array		1970655	0					
ANR	1970762	UnaryOperator	!		1970655	0					
ANR	1970763	Identifier	use_array		1970655	1					
ANR	1970764	RelationalExpression	argc < ( 1 + format_offset )		1970655	1		<			
ANR	1970765	Identifier	argc		1970655	0					
ANR	1970766	AdditiveExpression	1 + format_offset		1970655	1		+			
ANR	1970767	PrimaryExpression	1		1970655	0					
ANR	1970768	Identifier	format_offset		1970655	1					
ANR	1970769	CompoundStatement		15:50:452:452	1970655	1					
ANR	1970770	ExpressionStatement	efree ( args )	405:2:11004:11015	1970655	0	True				
ANR	1970771	CallExpression	efree ( args )		1970655	0					
ANR	1970772	Callee	efree		1970655	0					
ANR	1970773	Identifier	efree		1970655	0					
ANR	1970774	ArgumentList	args		1970655	1					
ANR	1970775	Argument	args		1970655	0					
ANR	1970776	Identifier	args		1970655	0					
ANR	1970777	ExpressionStatement	WRONG_PARAM_COUNT_WITH_RETVAL ( NULL )	406:2:11019:11054	1970655	1	True				
ANR	1970778	CallExpression	WRONG_PARAM_COUNT_WITH_RETVAL ( NULL )		1970655	0					
ANR	1970779	Callee	WRONG_PARAM_COUNT_WITH_RETVAL		1970655	0					
ANR	1970780	Identifier	WRONG_PARAM_COUNT_WITH_RETVAL		1970655	0					
ANR	1970781	ArgumentList	NULL		1970655	1					
ANR	1970782	Argument	NULL		1970655	0					
ANR	1970783	Identifier	NULL		1970655	0					
ANR	1970784	IfStatement	if ( use_array )		1970655	28					
ANR	1970785	Condition	use_array	409:5:11066:11074	1970655	0	True				
ANR	1970786	Identifier	use_array		1970655	0					
ANR	1970787	CompoundStatement		23:2:565:577	1970655	1					
ANR	1970788	IdentifierDeclStatement	int i = 1 ;	410:2:11081:11090	1970655	0	True				
ANR	1970789	IdentifierDecl	i = 1		1970655	0					
ANR	1970790	IdentifierDeclType	int		1970655	0					
ANR	1970791	Identifier	i		1970655	1					
ANR	1970792	AssignmentExpression	i = 1		1970655	2		=			
ANR	1970793	Identifier	i		1970655	0					
ANR	1970794	PrimaryExpression	1		1970655	1					
ANR	1970795	IdentifierDeclStatement	zval * * * newargs ;	411:2:11094:11109	1970655	1	True				
ANR	1970796	IdentifierDecl	* * * newargs		1970655	0					
ANR	1970797	IdentifierDeclType	zval * * *		1970655	0					
ANR	1970798	Identifier	newargs		1970655	1					
ANR	1970799	IdentifierDeclStatement	zval * * array ;	412:2:11113:11125	1970655	2	True				
ANR	1970800	IdentifierDecl	* * array		1970655	0					
ANR	1970801	IdentifierDeclType	zval * *		1970655	0					
ANR	1970802	Identifier	array		1970655	1					
ANR	1970803	ExpressionStatement	z_format = args [ format_offset ]	414:2:11130:11160	1970655	3	True				
ANR	1970804	AssignmentExpression	z_format = args [ format_offset ]		1970655	0		=			
ANR	1970805	Identifier	z_format		1970655	0					
ANR	1970806	ArrayIndexing	args [ format_offset ]		1970655	1					
ANR	1970807	Identifier	args		1970655	0					
ANR	1970808	Identifier	format_offset		1970655	1					
ANR	1970809	ExpressionStatement	array = args [ 1 + format_offset ]	415:2:11164:11195	1970655	4	True				
ANR	1970810	AssignmentExpression	array = args [ 1 + format_offset ]		1970655	0		=			
ANR	1970811	Identifier	array		1970655	0					
ANR	1970812	ArrayIndexing	args [ 1 + format_offset ]		1970655	1					
ANR	1970813	Identifier	args		1970655	0					
ANR	1970814	AdditiveExpression	1 + format_offset		1970655	1		+			
ANR	1970815	PrimaryExpression	1		1970655	0					
ANR	1970816	Identifier	format_offset		1970655	1					
ANR	1970817	ExpressionStatement	SEPARATE_ZVAL ( array )	417:2:11202:11222	1970655	5	True				
ANR	1970818	CallExpression	SEPARATE_ZVAL ( array )		1970655	0					
ANR	1970819	Callee	SEPARATE_ZVAL		1970655	0					
ANR	1970820	Identifier	SEPARATE_ZVAL		1970655	0					
ANR	1970821	ArgumentList	array		1970655	1					
ANR	1970822	Argument	array		1970655	0					
ANR	1970823	Identifier	array		1970655	0					
ANR	1970824	ExpressionStatement	convert_to_array_ex ( array )	418:2:11226:11252	1970655	6	True				
ANR	1970825	CallExpression	convert_to_array_ex ( array )		1970655	0					
ANR	1970826	Callee	convert_to_array_ex		1970655	0					
ANR	1970827	Identifier	convert_to_array_ex		1970655	0					
ANR	1970828	ArgumentList	array		1970655	1					
ANR	1970829	Argument	array		1970655	0					
ANR	1970830	Identifier	array		1970655	0					
ANR	1970831	ExpressionStatement	argc = 1 + zend_hash_num_elements ( Z_ARRVAL_PP ( array ) )	420:2:11259:11312	1970655	7	True				
ANR	1970832	AssignmentExpression	argc = 1 + zend_hash_num_elements ( Z_ARRVAL_PP ( array ) )		1970655	0		=			
ANR	1970833	Identifier	argc		1970655	0					
ANR	1970834	AdditiveExpression	1 + zend_hash_num_elements ( Z_ARRVAL_PP ( array ) )		1970655	1		+			
ANR	1970835	PrimaryExpression	1		1970655	0					
ANR	1970836	CallExpression	zend_hash_num_elements ( Z_ARRVAL_PP ( array ) )		1970655	1					
ANR	1970837	Callee	zend_hash_num_elements		1970655	0					
ANR	1970838	Identifier	zend_hash_num_elements		1970655	0					
ANR	1970839	ArgumentList	Z_ARRVAL_PP ( array )		1970655	1					
ANR	1970840	Argument	Z_ARRVAL_PP ( array )		1970655	0					
ANR	1970841	CallExpression	Z_ARRVAL_PP ( array )		1970655	0					
ANR	1970842	Callee	Z_ARRVAL_PP		1970655	0					
ANR	1970843	Identifier	Z_ARRVAL_PP		1970655	0					
ANR	1970844	ArgumentList	array		1970655	1					
ANR	1970845	Argument	array		1970655	0					
ANR	1970846	Identifier	array		1970655	0					
ANR	1970847	ExpressionStatement	"newargs = ( zval * * * ) safe_emalloc ( argc , sizeof ( zval * ) , 0 )"	421:2:11316:11373	1970655	8	True				
ANR	1970848	AssignmentExpression	"newargs = ( zval * * * ) safe_emalloc ( argc , sizeof ( zval * ) , 0 )"		1970655	0		=			
ANR	1970849	Identifier	newargs		1970655	0					
ANR	1970850	CastExpression	"( zval * * * ) safe_emalloc ( argc , sizeof ( zval * ) , 0 )"		1970655	1					
ANR	1970851	CastTarget	zval * * *		1970655	0					
ANR	1970852	CallExpression	"safe_emalloc ( argc , sizeof ( zval * ) , 0 )"		1970655	1					
ANR	1970853	Callee	safe_emalloc		1970655	0					
ANR	1970854	Identifier	safe_emalloc		1970655	0					
ANR	1970855	ArgumentList	argc		1970655	1					
ANR	1970856	Argument	argc		1970655	0					
ANR	1970857	Identifier	argc		1970655	0					
ANR	1970858	Argument	sizeof ( zval * )		1970655	1					
ANR	1970859	SizeofExpression	sizeof ( zval * )		1970655	0					
ANR	1970860	Sizeof	sizeof		1970655	0					
ANR	1970861	SizeofOperand	zval *		1970655	1					
ANR	1970862	Argument	0		1970655	2					
ANR	1970863	PrimaryExpression	0		1970655	0					
ANR	1970864	ExpressionStatement	newargs [ 0 ] = z_format	422:2:11377:11398	1970655	9	True				
ANR	1970865	AssignmentExpression	newargs [ 0 ] = z_format		1970655	0		=			
ANR	1970866	ArrayIndexing	newargs [ 0 ]		1970655	0					
ANR	1970867	Identifier	newargs		1970655	0					
ANR	1970868	PrimaryExpression	0		1970655	1					
ANR	1970869	Identifier	z_format		1970655	1					
ANR	1970870	ForStatement	"for ( zend_hash_internal_pointer_reset ( Z_ARRVAL_PP ( array ) ) ; zend_hash_get_current_data ( Z_ARRVAL_PP ( array ) , ( void * * ) & newargs [ i ++ ] ) == SUCCESS ; zend_hash_move_forward ( Z_ARRVAL_PP ( array ) ) )"		1970655	10					
ANR	1970871	ForInit	zend_hash_internal_pointer_reset ( Z_ARRVAL_PP ( array ) ) ;	424:7:11410:11462	1970655	0	True				
ANR	1970872	CallExpression	zend_hash_internal_pointer_reset ( Z_ARRVAL_PP ( array ) )		1970655	0					
ANR	1970873	Callee	zend_hash_internal_pointer_reset		1970655	0					
ANR	1970874	Identifier	zend_hash_internal_pointer_reset		1970655	0					
ANR	1970875	ArgumentList	Z_ARRVAL_PP ( array )		1970655	1					
ANR	1970876	Argument	Z_ARRVAL_PP ( array )		1970655	0					
ANR	1970877	CallExpression	Z_ARRVAL_PP ( array )		1970655	0					
ANR	1970878	Callee	Z_ARRVAL_PP		1970655	0					
ANR	1970879	Identifier	Z_ARRVAL_PP		1970655	0					
ANR	1970880	ArgumentList	array		1970655	1					
ANR	1970881	Argument	array		1970655	0					
ANR	1970882	Identifier	array		1970655	0					
ANR	1970883	Condition	"zend_hash_get_current_data ( Z_ARRVAL_PP ( array ) , ( void * * ) & newargs [ i ++ ] ) == SUCCESS"	425:4:11468:11548	1970655	1	True				
ANR	1970884	EqualityExpression	"zend_hash_get_current_data ( Z_ARRVAL_PP ( array ) , ( void * * ) & newargs [ i ++ ] ) == SUCCESS"		1970655	0		==			
ANR	1970885	CallExpression	"zend_hash_get_current_data ( Z_ARRVAL_PP ( array ) , ( void * * ) & newargs [ i ++ ] )"		1970655	0					
ANR	1970886	Callee	zend_hash_get_current_data		1970655	0					
ANR	1970887	Identifier	zend_hash_get_current_data		1970655	0					
ANR	1970888	ArgumentList	Z_ARRVAL_PP ( array )		1970655	1					
ANR	1970889	Argument	Z_ARRVAL_PP ( array )		1970655	0					
ANR	1970890	CallExpression	Z_ARRVAL_PP ( array )		1970655	0					
ANR	1970891	Callee	Z_ARRVAL_PP		1970655	0					
ANR	1970892	Identifier	Z_ARRVAL_PP		1970655	0					
ANR	1970893	ArgumentList	array		1970655	1					
ANR	1970894	Argument	array		1970655	0					
ANR	1970895	Identifier	array		1970655	0					
ANR	1970896	Argument	( void * * ) & newargs [ i ++ ]		1970655	1					
ANR	1970897	CastExpression	( void * * ) & newargs [ i ++ ]		1970655	0					
ANR	1970898	CastTarget	void * *		1970655	0					
ANR	1970899	UnaryOperationExpression	& newargs [ i ++ ]		1970655	1					
ANR	1970900	UnaryOperator	&		1970655	0					
ANR	1970901	ArrayIndexing	newargs [ i ++ ]		1970655	1					
ANR	1970902	Identifier	newargs		1970655	0					
ANR	1970903	PostIncDecOperationExpression	i ++		1970655	1					
ANR	1970904	Identifier	i		1970655	0					
ANR	1970905	IncDec	++		1970655	1					
ANR	1970906	Identifier	SUCCESS		1970655	1					
ANR	1970907	CallExpression	zend_hash_move_forward ( Z_ARRVAL_PP ( array ) )	426:4:11555:11596	1970655	2	True				
ANR	1970908	Callee	zend_hash_move_forward		1970655	0					
ANR	1970909	Identifier	zend_hash_move_forward		1970655	0					
ANR	1970910	ArgumentList	Z_ARRVAL_PP ( array )		1970655	1					
ANR	1970911	Argument	Z_ARRVAL_PP ( array )		1970655	0					
ANR	1970912	CallExpression	Z_ARRVAL_PP ( array )		1970655	0					
ANR	1970913	Callee	Z_ARRVAL_PP		1970655	0					
ANR	1970914	Identifier	Z_ARRVAL_PP		1970655	0					
ANR	1970915	ArgumentList	array		1970655	1					
ANR	1970916	Argument	array		1970655	0					
ANR	1970917	Identifier	array		1970655	0					
ANR	1970918	ExpressionStatement		426:47:11598:11598	1970655	3	True				
ANR	1970919	ExpressionStatement	efree ( args )	428:2:11603:11614	1970655	11	True				
ANR	1970920	CallExpression	efree ( args )		1970655	0					
ANR	1970921	Callee	efree		1970655	0					
ANR	1970922	Identifier	efree		1970655	0					
ANR	1970923	ArgumentList	args		1970655	1					
ANR	1970924	Argument	args		1970655	0					
ANR	1970925	Identifier	args		1970655	0					
ANR	1970926	ExpressionStatement	args = newargs	429:2:11618:11632	1970655	12	True				
ANR	1970927	AssignmentExpression	args = newargs		1970655	0		=			
ANR	1970928	Identifier	args		1970655	0					
ANR	1970929	Identifier	newargs		1970655	1					
ANR	1970930	ExpressionStatement	format_offset = 0	430:2:11636:11653	1970655	13	True				
ANR	1970931	AssignmentExpression	format_offset = 0		1970655	0		=			
ANR	1970932	Identifier	format_offset		1970655	0					
ANR	1970933	PrimaryExpression	0		1970655	1					
ANR	1970934	ExpressionStatement	convert_to_string_ex ( args [ format_offset ] )	433:1:11661:11702	1970655	29	True				
ANR	1970935	CallExpression	convert_to_string_ex ( args [ format_offset ] )		1970655	0					
ANR	1970936	Callee	convert_to_string_ex		1970655	0					
ANR	1970937	Identifier	convert_to_string_ex		1970655	0					
ANR	1970938	ArgumentList	args [ format_offset ]		1970655	1					
ANR	1970939	Argument	args [ format_offset ]		1970655	0					
ANR	1970940	ArrayIndexing	args [ format_offset ]		1970655	0					
ANR	1970941	Identifier	args		1970655	0					
ANR	1970942	Identifier	format_offset		1970655	1					
ANR	1970943	ExpressionStatement	format = Z_STRVAL_PP ( args [ format_offset ] )	434:1:11705:11746	1970655	30	True				
ANR	1970944	AssignmentExpression	format = Z_STRVAL_PP ( args [ format_offset ] )		1970655	0		=			
ANR	1970945	Identifier	format		1970655	0					
ANR	1970946	CallExpression	Z_STRVAL_PP ( args [ format_offset ] )		1970655	1					
ANR	1970947	Callee	Z_STRVAL_PP		1970655	0					
ANR	1970948	Identifier	Z_STRVAL_PP		1970655	0					
ANR	1970949	ArgumentList	args [ format_offset ]		1970655	1					
ANR	1970950	Argument	args [ format_offset ]		1970655	0					
ANR	1970951	ArrayIndexing	args [ format_offset ]		1970655	0					
ANR	1970952	Identifier	args		1970655	0					
ANR	1970953	Identifier	format_offset		1970655	1					
ANR	1970954	ExpressionStatement	format_len = Z_STRLEN_PP ( args [ format_offset ] )	435:1:11749:11794	1970655	31	True				
ANR	1970955	AssignmentExpression	format_len = Z_STRLEN_PP ( args [ format_offset ] )		1970655	0		=			
ANR	1970956	Identifier	format_len		1970655	0					
ANR	1970957	CallExpression	Z_STRLEN_PP ( args [ format_offset ] )		1970655	1					
ANR	1970958	Callee	Z_STRLEN_PP		1970655	0					
ANR	1970959	Identifier	Z_STRLEN_PP		1970655	0					
ANR	1970960	ArgumentList	args [ format_offset ]		1970655	1					
ANR	1970961	Argument	args [ format_offset ]		1970655	0					
ANR	1970962	ArrayIndexing	args [ format_offset ]		1970655	0					
ANR	1970963	Identifier	args		1970655	0					
ANR	1970964	Identifier	format_offset		1970655	1					
ANR	1970965	ExpressionStatement	result = emalloc ( size )	436:1:11797:11819	1970655	32	True				
ANR	1970966	AssignmentExpression	result = emalloc ( size )		1970655	0		=			
ANR	1970967	Identifier	result		1970655	0					
ANR	1970968	CallExpression	emalloc ( size )		1970655	1					
ANR	1970969	Callee	emalloc		1970655	0					
ANR	1970970	Identifier	emalloc		1970655	0					
ANR	1970971	ArgumentList	size		1970655	1					
ANR	1970972	Argument	size		1970655	0					
ANR	1970973	Identifier	size		1970655	0					
ANR	1970974	ExpressionStatement	currarg = 1	438:1:11823:11834	1970655	33	True				
ANR	1970975	AssignmentExpression	currarg = 1		1970655	0		=			
ANR	1970976	Identifier	currarg		1970655	0					
ANR	1970977	PrimaryExpression	1		1970655	1					
ANR	1970978	WhileStatement	while ( inpos < format_len )		1970655	34					
ANR	1970979	Condition	inpos < format_len	440:8:11845:11860	1970655	0	True				
ANR	1970980	RelationalExpression	inpos < format_len		1970655	0		<			
ANR	1970981	Identifier	inpos		1970655	0					
ANR	1970982	Identifier	format_len		1970655	1					
ANR	1970983	CompoundStatement		53:2:1352:1361	1970655	1					
ANR	1970984	IdentifierDeclStatement	"int expprec = 0 , multiuse = 0 ;"	441:2:11867:11896	1970655	0	True				
ANR	1970985	IdentifierDecl	expprec = 0		1970655	0					
ANR	1970986	IdentifierDeclType	int		1970655	0					
ANR	1970987	Identifier	expprec		1970655	1					
ANR	1970988	AssignmentExpression	expprec = 0		1970655	2		=			
ANR	1970989	Identifier	expprec		1970655	0					
ANR	1970990	PrimaryExpression	0		1970655	1					
ANR	1970991	IdentifierDecl	multiuse = 0		1970655	1					
ANR	1970992	IdentifierDeclType	int		1970655	0					
ANR	1970993	Identifier	multiuse		1970655	1					
ANR	1970994	AssignmentExpression	multiuse = 0		1970655	2		=			
ANR	1970995	Identifier	multiuse		1970655	0					
ANR	1970996	PrimaryExpression	0		1970655	1					
ANR	1970997	IdentifierDeclStatement	zval * tmp ;	442:2:11900:11909	1970655	1	True				
ANR	1970998	IdentifierDecl	* tmp		1970655	0					
ANR	1970999	IdentifierDeclType	zval *		1970655	0					
ANR	1971000	Identifier	tmp		1970655	1					
ANR	1971001	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: format[%d]='%c'\\n"" , inpos , format [ inpos ] ) )"	444:2:11914:11980	1970655	2	True				
ANR	1971002	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: format[%d]='%c'\\n"" , inpos , format [ inpos ] ) )"		1970655	0					
ANR	1971003	Callee	PRINTF_DEBUG		1970655	0					
ANR	1971004	Identifier	PRINTF_DEBUG		1970655	0					
ANR	1971005	ArgumentList	"""sprintf: format[%d]='%c'\\n"" , inpos , format [ inpos ]"		1970655	1					
ANR	1971006	Argument	"""sprintf: format[%d]='%c'\\n"" , inpos , format [ inpos ]"		1970655	0					
ANR	1971007	Expression	"""sprintf: format[%d]='%c'\\n"" , inpos , format [ inpos ]"		1970655	0					
ANR	1971008	PrimaryExpression	"""sprintf: format[%d]='%c'\\n"""		1970655	0					
ANR	1971009	Expression	"inpos , format [ inpos ]"		1970655	1					
ANR	1971010	Identifier	inpos		1970655	0					
ANR	1971011	ArrayIndexing	format [ inpos ]		1970655	1					
ANR	1971012	Identifier	format		1970655	0					
ANR	1971013	Identifier	inpos		1970655	1					
ANR	1971014	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: outpos=%d\\n"" , outpos ) )"	445:2:11984:12030	1970655	3	True				
ANR	1971015	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: outpos=%d\\n"" , outpos ) )"		1970655	0					
ANR	1971016	Callee	PRINTF_DEBUG		1970655	0					
ANR	1971017	Identifier	PRINTF_DEBUG		1970655	0					
ANR	1971018	ArgumentList	"""sprintf: outpos=%d\\n"" , outpos"		1970655	1					
ANR	1971019	Argument	"""sprintf: outpos=%d\\n"" , outpos"		1970655	0					
ANR	1971020	Expression	"""sprintf: outpos=%d\\n"" , outpos"		1970655	0					
ANR	1971021	PrimaryExpression	"""sprintf: outpos=%d\\n"""		1970655	0					
ANR	1971022	Identifier	outpos		1970655	1					
ANR	1971023	IfStatement	if ( format [ inpos ] != '%' )		1970655	4					
ANR	1971024	Condition	format [ inpos ] != '%'	446:6:12038:12057	1970655	0	True				
ANR	1971025	EqualityExpression	format [ inpos ] != '%'		1970655	0		!=			
ANR	1971026	ArrayIndexing	format [ inpos ]		1970655	0					
ANR	1971027	Identifier	format		1970655	0					
ANR	1971028	Identifier	inpos		1970655	1					
ANR	1971029	PrimaryExpression	'%'		1970655	1					
ANR	1971030	CompoundStatement		57:28:1512:1512	1970655	1					
ANR	1971031	Statement	php_sprintf_appendchar	447:3:12065:12086	1970655	0	True				
ANR	1971032	Statement	(	447:25:12087:12087	1970655	1	True				
ANR	1971033	Statement	&	447:26:12088:12088	1970655	2	True				
ANR	1971034	Statement	result	447:27:12089:12094	1970655	3	True				
ANR	1971035	Statement	","	447:33:12095:12095	1970655	4	True				
ANR	1971036	Statement	&	447:35:12097:12097	1970655	5	True				
ANR	1971037	Statement	outpos	447:36:12098:12103	1970655	6	True				
ANR	1971038	Statement	","	447:42:12104:12104	1970655	7	True				
ANR	1971039	Statement	&	447:44:12106:12106	1970655	8	True				
ANR	1971040	Statement	size	447:45:12107:12110	1970655	9	True				
ANR	1971041	Statement	","	447:49:12111:12111	1970655	10	True				
ANR	1971042	Statement	format	447:51:12113:12118	1970655	11	True				
ANR	1971043	Statement	[	447:57:12119:12119	1970655	12	True				
ANR	1971044	Statement	inpos	447:58:12120:12124	1970655	13	True				
ANR	1971045	Statement	++	447:63:12125:12126	1970655	14	True				
ANR	1971046	Statement	]	447:65:12127:12127	1970655	15	True				
ANR	1971047	Statement	TSRMLS_CC	447:67:12129:12137	1970655	16	True				
ANR	1971048	Statement	)	447:76:12138:12138	1970655	17	True				
ANR	1971049	ExpressionStatement		447:77:12139:12139	1970655	18	True				
ANR	1971050	ElseStatement	else		1970655	0					
ANR	1971051	IfStatement	if ( format [ inpos + 1 ] == '%' )		1970655	0					
ANR	1971052	Condition	format [ inpos + 1 ] == '%'	448:13:12154:12177	1970655	0	True				
ANR	1971053	EqualityExpression	format [ inpos + 1 ] == '%'		1970655	0		==			
ANR	1971054	ArrayIndexing	format [ inpos + 1 ]		1970655	0					
ANR	1971055	Identifier	format		1970655	0					
ANR	1971056	AdditiveExpression	inpos + 1		1970655	1		+			
ANR	1971057	Identifier	inpos		1970655	0					
ANR	1971058	PrimaryExpression	1		1970655	1					
ANR	1971059	PrimaryExpression	'%'		1970655	1					
ANR	1971060	CompoundStatement		59:39:1632:1632	1970655	1					
ANR	1971061	Statement	php_sprintf_appendchar	449:3:12185:12206	1970655	0	True				
ANR	1971062	Statement	(	449:25:12207:12207	1970655	1	True				
ANR	1971063	Statement	&	449:26:12208:12208	1970655	2	True				
ANR	1971064	Statement	result	449:27:12209:12214	1970655	3	True				
ANR	1971065	Statement	","	449:33:12215:12215	1970655	4	True				
ANR	1971066	Statement	&	449:35:12217:12217	1970655	5	True				
ANR	1971067	Statement	outpos	449:36:12218:12223	1970655	6	True				
ANR	1971068	Statement	","	449:42:12224:12224	1970655	7	True				
ANR	1971069	Statement	&	449:44:12226:12226	1970655	8	True				
ANR	1971070	Statement	size	449:45:12227:12230	1970655	9	True				
ANR	1971071	Statement	","	449:49:12231:12231	1970655	10	True				
ANR	1971072	Statement	'%'	449:51:12233:12235	1970655	11	True				
ANR	1971073	Statement	TSRMLS_CC	449:55:12237:12245	1970655	12	True				
ANR	1971074	Statement	)	449:64:12246:12246	1970655	13	True				
ANR	1971075	ExpressionStatement		449:65:12247:12247	1970655	14	True				
ANR	1971076	ExpressionStatement	inpos += 2	450:3:12252:12262	1970655	15	True				
ANR	1971077	AssignmentExpression	inpos += 2		1970655	0		+=			
ANR	1971078	Identifier	inpos		1970655	0					
ANR	1971079	PrimaryExpression	2		1970655	1					
ANR	1971080	ElseStatement	else		1970655	0					
ANR	1971081	CompoundStatement		62:9:1725:1725	1970655	0					
ANR	1971082	ExpressionStatement	alignment = ALIGN_RIGHT	453:3:12336:12359	1970655	0	True				
ANR	1971083	AssignmentExpression	alignment = ALIGN_RIGHT		1970655	0		=			
ANR	1971084	Identifier	alignment		1970655	0					
ANR	1971085	Identifier	ALIGN_RIGHT		1970655	1					
ANR	1971086	ExpressionStatement	adjusting = 0	454:3:12364:12377	1970655	1	True				
ANR	1971087	AssignmentExpression	adjusting = 0		1970655	0		=			
ANR	1971088	Identifier	adjusting		1970655	0					
ANR	1971089	PrimaryExpression	0		1970655	1					
ANR	1971090	ExpressionStatement	padding = ' '	455:3:12382:12395	1970655	2	True				
ANR	1971091	AssignmentExpression	padding = ' '		1970655	0		=			
ANR	1971092	Identifier	padding		1970655	0					
ANR	1971093	PrimaryExpression	' '		1970655	1					
ANR	1971094	ExpressionStatement	always_sign = 0	456:3:12400:12415	1970655	3	True				
ANR	1971095	AssignmentExpression	always_sign = 0		1970655	0		=			
ANR	1971096	Identifier	always_sign		1970655	0					
ANR	1971097	PrimaryExpression	0		1970655	1					
ANR	1971098	ExpressionStatement	inpos ++	457:3:12420:12427	1970655	4	True				
ANR	1971099	PostIncDecOperationExpression	inpos ++		1970655	0					
ANR	1971100	Identifier	inpos		1970655	0					
ANR	1971101	IncDec	++		1970655	1					
ANR	1971102	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: first looking at '%c', inpos=%d\\n"" , format [ inpos ] , inpos ) )"	459:3:12454:12544	1970655	5	True				
ANR	1971103	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: first looking at '%c', inpos=%d\\n"" , format [ inpos ] , inpos ) )"		1970655	0					
ANR	1971104	Callee	PRINTF_DEBUG		1970655	0					
ANR	1971105	Identifier	PRINTF_DEBUG		1970655	0					
ANR	1971106	ArgumentList	"""sprintf: first looking at '%c', inpos=%d\\n"" , format [ inpos ] , inpos"		1970655	1					
ANR	1971107	Argument	"""sprintf: first looking at '%c', inpos=%d\\n"" , format [ inpos ] , inpos"		1970655	0					
ANR	1971108	Expression	"""sprintf: first looking at '%c', inpos=%d\\n"" , format [ inpos ] , inpos"		1970655	0					
ANR	1971109	PrimaryExpression	"""sprintf: first looking at '%c', inpos=%d\\n"""		1970655	0					
ANR	1971110	Expression	"format [ inpos ] , inpos"		1970655	1					
ANR	1971111	ArrayIndexing	format [ inpos ]		1970655	0					
ANR	1971112	Identifier	format		1970655	0					
ANR	1971113	Identifier	inpos		1970655	1					
ANR	1971114	Identifier	inpos		1970655	1					
ANR	1971115	IfStatement	if ( isascii ( ( int ) format [ inpos ] ) && ! isalpha ( ( int ) format [ inpos ] ) )		1970655	6					
ANR	1971116	Condition	isascii ( ( int ) format [ inpos ] ) && ! isalpha ( ( int ) format [ inpos ] )	461:7:12553:12611	1970655	0	True				
ANR	1971117	AndExpression	isascii ( ( int ) format [ inpos ] ) && ! isalpha ( ( int ) format [ inpos ] )		1970655	0		&&			
ANR	1971118	CallExpression	isascii ( ( int ) format [ inpos ] )		1970655	0					
ANR	1971119	Callee	isascii		1970655	0					
ANR	1971120	Identifier	isascii		1970655	0					
ANR	1971121	ArgumentList	( int ) format [ inpos ]		1970655	1					
ANR	1971122	Argument	( int ) format [ inpos ]		1970655	0					
ANR	1971123	CastExpression	( int ) format [ inpos ]		1970655	0					
ANR	1971124	CastTarget	int		1970655	0					
ANR	1971125	ArrayIndexing	format [ inpos ]		1970655	1					
ANR	1971126	Identifier	format		1970655	0					
ANR	1971127	Identifier	inpos		1970655	1					
ANR	1971128	UnaryOperationExpression	! isalpha ( ( int ) format [ inpos ] )		1970655	1					
ANR	1971129	UnaryOperator	!		1970655	0					
ANR	1971130	CallExpression	isalpha ( ( int ) format [ inpos ] )		1970655	1					
ANR	1971131	Callee	isalpha		1970655	0					
ANR	1971132	Identifier	isalpha		1970655	0					
ANR	1971133	ArgumentList	( int ) format [ inpos ]		1970655	1					
ANR	1971134	Argument	( int ) format [ inpos ]		1970655	0					
ANR	1971135	CastExpression	( int ) format [ inpos ]		1970655	0					
ANR	1971136	CastTarget	int		1970655	0					
ANR	1971137	ArrayIndexing	format [ inpos ]		1970655	1					
ANR	1971138	Identifier	format		1970655	0					
ANR	1971139	Identifier	inpos		1970655	1					
ANR	1971140	CompoundStatement		72:68:2066:2066	1970655	1					
ANR	1971141	ExpressionStatement	temppos = inpos	463:4:12652:12667	1970655	0	True				
ANR	1971142	AssignmentExpression	temppos = inpos		1970655	0		=			
ANR	1971143	Identifier	temppos		1970655	0					
ANR	1971144	Identifier	inpos		1970655	1					
ANR	1971145	WhileStatement	while ( isdigit ( ( int ) format [ temppos ] ) )		1970655	1					
ANR	1971146	Condition	isdigit ( ( int ) format [ temppos ] )	464:11:12680:12708	1970655	0	True				
ANR	1971147	CallExpression	isdigit ( ( int ) format [ temppos ] )		1970655	0					
ANR	1971148	Callee	isdigit		1970655	0					
ANR	1971149	Identifier	isdigit		1970655	0					
ANR	1971150	ArgumentList	( int ) format [ temppos ]		1970655	1					
ANR	1971151	Argument	( int ) format [ temppos ]		1970655	0					
ANR	1971152	CastExpression	( int ) format [ temppos ]		1970655	0					
ANR	1971153	CastTarget	int		1970655	0					
ANR	1971154	ArrayIndexing	format [ temppos ]		1970655	1					
ANR	1971155	Identifier	format		1970655	0					
ANR	1971156	Identifier	temppos		1970655	1					
ANR	1971157	ExpressionStatement	temppos ++	464:42:12711:12720	1970655	1	True				
ANR	1971158	PostIncDecOperationExpression	temppos ++		1970655	0					
ANR	1971159	Identifier	temppos		1970655	0					
ANR	1971160	IncDec	++		1970655	1					
ANR	1971161	IfStatement	if ( format [ temppos ] == '$' )		1970655	2					
ANR	1971162	Condition	format [ temppos ] == '$'	465:8:12730:12751	1970655	0	True				
ANR	1971163	EqualityExpression	format [ temppos ] == '$'		1970655	0		==			
ANR	1971164	ArrayIndexing	format [ temppos ]		1970655	0					
ANR	1971165	Identifier	format		1970655	0					
ANR	1971166	Identifier	temppos		1970655	1					
ANR	1971167	PrimaryExpression	'$'		1970655	1					
ANR	1971168	CompoundStatement		76:32:2206:2206	1970655	1					
ANR	1971169	ExpressionStatement	"argnum = php_sprintf_getnumber ( format , & inpos )"	466:5:12761:12807	1970655	0	True				
ANR	1971170	AssignmentExpression	"argnum = php_sprintf_getnumber ( format , & inpos )"		1970655	0		=			
ANR	1971171	Identifier	argnum		1970655	0					
ANR	1971172	CallExpression	"php_sprintf_getnumber ( format , & inpos )"		1970655	1					
ANR	1971173	Callee	php_sprintf_getnumber		1970655	0					
ANR	1971174	Identifier	php_sprintf_getnumber		1970655	0					
ANR	1971175	ArgumentList	format		1970655	1					
ANR	1971176	Argument	format		1970655	0					
ANR	1971177	Identifier	format		1970655	0					
ANR	1971178	Argument	& inpos		1970655	1					
ANR	1971179	UnaryOperationExpression	& inpos		1970655	0					
ANR	1971180	UnaryOperator	&		1970655	0					
ANR	1971181	Identifier	inpos		1970655	1					
ANR	1971182	IfStatement	if ( argnum <= 0 )		1970655	1					
ANR	1971183	Condition	argnum <= 0	468:9:12819:12829	1970655	0	True				
ANR	1971184	RelationalExpression	argnum <= 0		1970655	0		<=			
ANR	1971185	Identifier	argnum		1970655	0					
ANR	1971186	PrimaryExpression	0		1970655	1					
ANR	1971187	CompoundStatement		79:22:2284:2284	1970655	1					
ANR	1971188	ExpressionStatement	efree ( result )	469:6:12840:12853	1970655	0	True				
ANR	1971189	CallExpression	efree ( result )		1970655	0					
ANR	1971190	Callee	efree		1970655	0					
ANR	1971191	Identifier	efree		1970655	0					
ANR	1971192	ArgumentList	result		1970655	1					
ANR	1971193	Argument	result		1970655	0					
ANR	1971194	Identifier	result		1970655	0					
ANR	1971195	ExpressionStatement	efree ( args )	470:6:12861:12872	1970655	1	True				
ANR	1971196	CallExpression	efree ( args )		1970655	0					
ANR	1971197	Callee	efree		1970655	0					
ANR	1971198	Identifier	efree		1970655	0					
ANR	1971199	ArgumentList	args		1970655	1					
ANR	1971200	Argument	args		1970655	0					
ANR	1971201	Identifier	args		1970655	0					
ANR	1971202	Statement	php_error_docref	471:6:12880:12895	1970655	2	True				
ANR	1971203	Statement	(	471:22:12896:12896	1970655	3	True				
ANR	1971204	Statement	NULL	471:23:12897:12900	1970655	4	True				
ANR	1971205	Statement	TSRMLS_CC	471:28:12902:12910	1970655	5	True				
ANR	1971206	Statement	","	471:37:12911:12911	1970655	6	True				
ANR	1971207	Statement	E_WARNING	471:39:12913:12921	1970655	7	True				
ANR	1971208	Statement	","	471:48:12922:12922	1970655	8	True				
ANR	1971209	Statement	"""Argument number must be greater than zero"""	471:50:12924:12966	1970655	9	True				
ANR	1971210	Statement	)	471:93:12967:12967	1970655	10	True				
ANR	1971211	ExpressionStatement		471:94:12968:12968	1970655	11	True				
ANR	1971212	ReturnStatement	return NULL ;	472:6:12976:12987	1970655	12	True				
ANR	1971213	Identifier	NULL		1970655	0					
ANR	1971214	ExpressionStatement	multiuse = 1	475:5:13002:13014	1970655	2	True				
ANR	1971215	AssignmentExpression	multiuse = 1		1970655	0		=			
ANR	1971216	Identifier	multiuse		1970655	0					
ANR	1971217	PrimaryExpression	1		1970655	1					
ANR	1971218	ExpressionStatement	inpos ++	476:5:13021:13028	1970655	3	True				
ANR	1971219	PostIncDecOperationExpression	inpos ++		1970655	0					
ANR	1971220	Identifier	inpos		1970655	0					
ANR	1971221	IncDec	++		1970655	1					
ANR	1971222	ElseStatement	else		1970655	0					
ANR	1971223	CompoundStatement		88:11:2513:2513	1970655	0					
ANR	1971224	ExpressionStatement	argnum = currarg ++	478:5:13068:13086	1970655	0	True				
ANR	1971225	AssignmentExpression	argnum = currarg ++		1970655	0		=			
ANR	1971226	Identifier	argnum		1970655	0					
ANR	1971227	PostIncDecOperationExpression	currarg ++		1970655	1					
ANR	1971228	Identifier	currarg		1970655	0					
ANR	1971229	IncDec	++		1970655	1					
ANR	1971230	ExpressionStatement	argnum += format_offset	481:4:13099:13122	1970655	3	True				
ANR	1971231	AssignmentExpression	argnum += format_offset		1970655	0		+=			
ANR	1971232	Identifier	argnum		1970655	0					
ANR	1971233	Identifier	format_offset		1970655	1					
ANR	1971234	Statement	PRINTF_DEBUG	484:4:13168:13179	1970655	4	True				
ANR	1971235	Statement	(	484:16:13180:13180	1970655	5	True				
ANR	1971236	Statement	(	484:17:13181:13181	1970655	6	True				
ANR	1971237	Statement	"""sprintf: looking for modifiers\\n"""	484:18:13182:13215	1970655	7	True				
ANR	1971238	Statement	"""sprintf: now looking at '%c', inpos=%d\\n"""	485:9:13226:13267	1970655	8	True				
ANR	1971239	Statement	","	485:51:13268:13268	1970655	9	True				
ANR	1971240	Statement	format	486:9:13279:13284	1970655	10	True				
ANR	1971241	Statement	[	486:15:13285:13285	1970655	11	True				
ANR	1971242	Statement	inpos	486:16:13286:13290	1970655	12	True				
ANR	1971243	Statement	]	486:21:13291:13291	1970655	13	True				
ANR	1971244	Statement	","	486:22:13292:13292	1970655	14	True				
ANR	1971245	Statement	inpos	486:24:13294:13298	1970655	15	True				
ANR	1971246	Statement	)	486:29:13299:13299	1970655	16	True				
ANR	1971247	Statement	)	486:30:13300:13300	1970655	17	True				
ANR	1971248	ExpressionStatement		486:31:13301:13301	1970655	18	True				
ANR	1971249	ForStatement	for ( ; ; inpos ++ )		1970655	19					
ANR	1971250	PostIncDecOperationExpression	inpos ++	487:12:13315:13321	1970655	0	True				
ANR	1971251	Identifier	inpos		1970655	0					
ANR	1971252	IncDec	++		1970655	1					
ANR	1971253	CompoundStatement		98:21:2776:2776	1970655	1					
ANR	1971254	IfStatement	if ( format [ inpos ] == ' ' || format [ inpos ] == '0' )		1970655	0					
ANR	1971255	Condition	format [ inpos ] == ' ' || format [ inpos ] == '0'	488:9:13335:13378	1970655	0	True				
ANR	1971256	OrExpression	format [ inpos ] == ' ' || format [ inpos ] == '0'		1970655	0		||			
ANR	1971257	EqualityExpression	format [ inpos ] == ' '		1970655	0		==			
ANR	1971258	ArrayIndexing	format [ inpos ]		1970655	0					
ANR	1971259	Identifier	format		1970655	0					
ANR	1971260	Identifier	inpos		1970655	1					
ANR	1971261	PrimaryExpression	' '		1970655	1					
ANR	1971262	EqualityExpression	format [ inpos ] == '0'		1970655	1		==			
ANR	1971263	ArrayIndexing	format [ inpos ]		1970655	0					
ANR	1971264	Identifier	format		1970655	0					
ANR	1971265	Identifier	inpos		1970655	1					
ANR	1971266	PrimaryExpression	'0'		1970655	1					
ANR	1971267	CompoundStatement		99:55:2833:2833	1970655	1					
ANR	1971268	ExpressionStatement	padding = format [ inpos ]	489:6:13389:13412	1970655	0	True				
ANR	1971269	AssignmentExpression	padding = format [ inpos ]		1970655	0		=			
ANR	1971270	Identifier	padding		1970655	0					
ANR	1971271	ArrayIndexing	format [ inpos ]		1970655	1					
ANR	1971272	Identifier	format		1970655	0					
ANR	1971273	Identifier	inpos		1970655	1					
ANR	1971274	ElseStatement	else		1970655	0					
ANR	1971275	IfStatement	if ( format [ inpos ] == '-' )		1970655	0					
ANR	1971276	Condition	format [ inpos ] == '-'	490:16:13430:13449	1970655	0	True				
ANR	1971277	EqualityExpression	format [ inpos ] == '-'		1970655	0		==			
ANR	1971278	ArrayIndexing	format [ inpos ]		1970655	0					
ANR	1971279	Identifier	format		1970655	0					
ANR	1971280	Identifier	inpos		1970655	1					
ANR	1971281	PrimaryExpression	'-'		1970655	1					
ANR	1971282	CompoundStatement		101:38:2904:2904	1970655	1					
ANR	1971283	ExpressionStatement	alignment = ALIGN_LEFT	491:6:13460:13482	1970655	0	True				
ANR	1971284	AssignmentExpression	alignment = ALIGN_LEFT		1970655	0		=			
ANR	1971285	Identifier	alignment		1970655	0					
ANR	1971286	Identifier	ALIGN_LEFT		1970655	1					
ANR	1971287	ElseStatement	else		1970655	0					
ANR	1971288	IfStatement	if ( format [ inpos ] == '+' )		1970655	0					
ANR	1971289	Condition	format [ inpos ] == '+'	493:16:13539:13558	1970655	0	True				
ANR	1971290	EqualityExpression	format [ inpos ] == '+'		1970655	0		==			
ANR	1971291	ArrayIndexing	format [ inpos ]		1970655	0					
ANR	1971292	Identifier	format		1970655	0					
ANR	1971293	Identifier	inpos		1970655	1					
ANR	1971294	PrimaryExpression	'+'		1970655	1					
ANR	1971295	CompoundStatement		104:38:3013:3013	1970655	1					
ANR	1971296	ExpressionStatement	always_sign = 1	494:6:13569:13584	1970655	0	True				
ANR	1971297	AssignmentExpression	always_sign = 1		1970655	0		=			
ANR	1971298	Identifier	always_sign		1970655	0					
ANR	1971299	PrimaryExpression	1		1970655	1					
ANR	1971300	ElseStatement	else		1970655	0					
ANR	1971301	IfStatement	if ( format [ inpos ] == '\\'' && inpos + 1 < format_len )		1970655	0					
ANR	1971302	Condition	format [ inpos ] == '\\'' && inpos + 1 < format_len	495:16:13602:13644	1970655	0	True				
ANR	1971303	AndExpression	format [ inpos ] == '\\'' && inpos + 1 < format_len		1970655	0		&&			
ANR	1971304	EqualityExpression	format [ inpos ] == '\\''		1970655	0		==			
ANR	1971305	ArrayIndexing	format [ inpos ]		1970655	0					
ANR	1971306	Identifier	format		1970655	0					
ANR	1971307	Identifier	inpos		1970655	1					
ANR	1971308	PrimaryExpression	'\\''		1970655	1					
ANR	1971309	RelationalExpression	inpos + 1 < format_len		1970655	1		<			
ANR	1971310	AdditiveExpression	inpos + 1		1970655	0		+			
ANR	1971311	Identifier	inpos		1970655	0					
ANR	1971312	PrimaryExpression	1		1970655	1					
ANR	1971313	Identifier	format_len		1970655	1					
ANR	1971314	CompoundStatement		106:61:3099:3099	1970655	1					
ANR	1971315	ExpressionStatement	padding = format [ ++ inpos ]	496:6:13655:13680	1970655	0	True				
ANR	1971316	AssignmentExpression	padding = format [ ++ inpos ]		1970655	0		=			
ANR	1971317	Identifier	padding		1970655	0					
ANR	1971318	ArrayIndexing	format [ ++ inpos ]		1970655	1					
ANR	1971319	Identifier	format		1970655	0					
ANR	1971320	UnaryExpression	++ inpos		1970655	1					
ANR	1971321	IncDec	++		1970655	0					
ANR	1971322	Identifier	inpos		1970655	1					
ANR	1971323	ElseStatement	else		1970655	0					
ANR	1971324	CompoundStatement		108:12:3146:3146	1970655	0					
ANR	1971325	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: end of modifiers\\n"" ) )"	498:6:13702:13747	1970655	0	True				
ANR	1971326	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: end of modifiers\\n"" ) )"		1970655	0					
ANR	1971327	Callee	PRINTF_DEBUG		1970655	0					
ANR	1971328	Identifier	PRINTF_DEBUG		1970655	0					
ANR	1971329	ArgumentList	"""sprintf: end of modifiers\\n"""		1970655	1					
ANR	1971330	Argument	"""sprintf: end of modifiers\\n"""		1970655	0					
ANR	1971331	PrimaryExpression	"""sprintf: end of modifiers\\n"""		1970655	0					
ANR	1971332	BreakStatement	break ;	499:6:13755:13760	1970655	1	True				
ANR	1971333	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: padding='%c'\\n"" , padding ) )"	502:4:13779:13829	1970655	20	True				
ANR	1971334	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: padding='%c'\\n"" , padding ) )"		1970655	0					
ANR	1971335	Callee	PRINTF_DEBUG		1970655	0					
ANR	1971336	Identifier	PRINTF_DEBUG		1970655	0					
ANR	1971337	ArgumentList	"""sprintf: padding='%c'\\n"" , padding"		1970655	1					
ANR	1971338	Argument	"""sprintf: padding='%c'\\n"" , padding"		1970655	0					
ANR	1971339	Expression	"""sprintf: padding='%c'\\n"" , padding"		1970655	0					
ANR	1971340	PrimaryExpression	"""sprintf: padding='%c'\\n"""		1970655	0					
ANR	1971341	Identifier	padding		1970655	1					
ANR	1971342	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: alignment=%s\\n"" , ( alignment == ALIGN_LEFT ) ? ""left"" : ""right"" ) )"	503:4:13835:13931	1970655	21	True				
ANR	1971343	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: alignment=%s\\n"" , ( alignment == ALIGN_LEFT ) ? ""left"" : ""right"" ) )"		1970655	0					
ANR	1971344	Callee	PRINTF_DEBUG		1970655	0					
ANR	1971345	Identifier	PRINTF_DEBUG		1970655	0					
ANR	1971346	ArgumentList	"""sprintf: alignment=%s\\n"" , ( alignment == ALIGN_LEFT ) ? ""left"" : ""right"""		1970655	1					
ANR	1971347	Argument	"""sprintf: alignment=%s\\n"" , ( alignment == ALIGN_LEFT ) ? ""left"" : ""right"""		1970655	0					
ANR	1971348	Expression	"""sprintf: alignment=%s\\n"" , ( alignment == ALIGN_LEFT ) ? ""left"" : ""right"""		1970655	0					
ANR	1971349	PrimaryExpression	"""sprintf: alignment=%s\\n"""		1970655	0					
ANR	1971350	ConditionalExpression	"( alignment == ALIGN_LEFT ) ? ""left"" : ""right"""		1970655	1					
ANR	1971351	Condition	alignment == ALIGN_LEFT		1970655	0					
ANR	1971352	EqualityExpression	alignment == ALIGN_LEFT		1970655	0		==			
ANR	1971353	Identifier	alignment		1970655	0					
ANR	1971354	Identifier	ALIGN_LEFT		1970655	1					
ANR	1971355	PrimaryExpression	"""left"""		1970655	1					
ANR	1971356	PrimaryExpression	"""right"""		1970655	2					
ANR	1971357	IfStatement	if ( isdigit ( ( int ) format [ inpos ] ) )		1970655	22					
ANR	1971358	Condition	isdigit ( ( int ) format [ inpos ] )	508:8:13981:14007	1970655	0	True				
ANR	1971359	CallExpression	isdigit ( ( int ) format [ inpos ] )		1970655	0					
ANR	1971360	Callee	isdigit		1970655	0					
ANR	1971361	Identifier	isdigit		1970655	0					
ANR	1971362	ArgumentList	( int ) format [ inpos ]		1970655	1					
ANR	1971363	Argument	( int ) format [ inpos ]		1970655	0					
ANR	1971364	CastExpression	( int ) format [ inpos ]		1970655	0					
ANR	1971365	CastTarget	int		1970655	0					
ANR	1971366	ArrayIndexing	format [ inpos ]		1970655	1					
ANR	1971367	Identifier	format		1970655	0					
ANR	1971368	Identifier	inpos		1970655	1					
ANR	1971369	CompoundStatement		119:37:3462:3462	1970655	1					
ANR	1971370	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: getting width\\n"" ) )"	509:5:14017:14059	1970655	0	True				
ANR	1971371	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: getting width\\n"" ) )"		1970655	0					
ANR	1971372	Callee	PRINTF_DEBUG		1970655	0					
ANR	1971373	Identifier	PRINTF_DEBUG		1970655	0					
ANR	1971374	ArgumentList	"""sprintf: getting width\\n"""		1970655	1					
ANR	1971375	Argument	"""sprintf: getting width\\n"""		1970655	0					
ANR	1971376	PrimaryExpression	"""sprintf: getting width\\n"""		1970655	0					
ANR	1971377	IfStatement	"if ( ( width = php_sprintf_getnumber ( format , & inpos ) ) < 0 )"		1970655	1					
ANR	1971378	Condition	"( width = php_sprintf_getnumber ( format , & inpos ) ) < 0"	510:9:14070:14120	1970655	0	True				
ANR	1971379	RelationalExpression	"( width = php_sprintf_getnumber ( format , & inpos ) ) < 0"		1970655	0		<			
ANR	1971380	AssignmentExpression	"width = php_sprintf_getnumber ( format , & inpos )"		1970655	0		=			
ANR	1971381	Identifier	width		1970655	0					
ANR	1971382	CallExpression	"php_sprintf_getnumber ( format , & inpos )"		1970655	1					
ANR	1971383	Callee	php_sprintf_getnumber		1970655	0					
ANR	1971384	Identifier	php_sprintf_getnumber		1970655	0					
ANR	1971385	ArgumentList	format		1970655	1					
ANR	1971386	Argument	format		1970655	0					
ANR	1971387	Identifier	format		1970655	0					
ANR	1971388	Argument	& inpos		1970655	1					
ANR	1971389	UnaryOperationExpression	& inpos		1970655	0					
ANR	1971390	UnaryOperator	&		1970655	0					
ANR	1971391	Identifier	inpos		1970655	1					
ANR	1971392	PrimaryExpression	0		1970655	1					
ANR	1971393	CompoundStatement		121:62:3575:3575	1970655	1					
ANR	1971394	ExpressionStatement	efree ( result )	511:6:14131:14144	1970655	0	True				
ANR	1971395	CallExpression	efree ( result )		1970655	0					
ANR	1971396	Callee	efree		1970655	0					
ANR	1971397	Identifier	efree		1970655	0					
ANR	1971398	ArgumentList	result		1970655	1					
ANR	1971399	Argument	result		1970655	0					
ANR	1971400	Identifier	result		1970655	0					
ANR	1971401	ExpressionStatement	efree ( args )	512:6:14152:14163	1970655	1	True				
ANR	1971402	CallExpression	efree ( args )		1970655	0					
ANR	1971403	Callee	efree		1970655	0					
ANR	1971404	Identifier	efree		1970655	0					
ANR	1971405	ArgumentList	args		1970655	1					
ANR	1971406	Argument	args		1970655	0					
ANR	1971407	Identifier	args		1970655	0					
ANR	1971408	Statement	php_error_docref	513:6:14171:14186	1970655	2	True				
ANR	1971409	Statement	(	513:22:14187:14187	1970655	3	True				
ANR	1971410	Statement	NULL	513:23:14188:14191	1970655	4	True				
ANR	1971411	Statement	TSRMLS_CC	513:28:14193:14201	1970655	5	True				
ANR	1971412	Statement	","	513:37:14202:14202	1970655	6	True				
ANR	1971413	Statement	E_WARNING	513:39:14204:14212	1970655	7	True				
ANR	1971414	Statement	","	513:48:14213:14213	1970655	8	True				
ANR	1971415	Statement	"""Width must be greater than zero and less than %d"""	513:50:14215:14264	1970655	9	True				
ANR	1971416	Statement	","	513:100:14265:14265	1970655	10	True				
ANR	1971417	Statement	INT_MAX	513:102:14267:14273	1970655	11	True				
ANR	1971418	Statement	)	513:109:14274:14274	1970655	12	True				
ANR	1971419	ExpressionStatement		513:110:14275:14275	1970655	13	True				
ANR	1971420	ReturnStatement	return NULL ;	514:6:14283:14294	1970655	14	True				
ANR	1971421	Identifier	NULL		1970655	0					
ANR	1971422	ExpressionStatement	adjusting |= ADJ_WIDTH	516:5:14308:14330	1970655	2	True				
ANR	1971423	AssignmentExpression	adjusting |= ADJ_WIDTH		1970655	0		|=			
ANR	1971424	Identifier	adjusting		1970655	0					
ANR	1971425	Identifier	ADJ_WIDTH		1970655	1					
ANR	1971426	ElseStatement	else		1970655	0					
ANR	1971427	CompoundStatement		128:11:3795:3795	1970655	0					
ANR	1971428	ExpressionStatement	width = 0	518:5:14350:14359	1970655	0	True				
ANR	1971429	AssignmentExpression	width = 0		1970655	0		=			
ANR	1971430	Identifier	width		1970655	0					
ANR	1971431	PrimaryExpression	0		1970655	1					
ANR	1971432	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: width=%d\\n"" , width ) )"	520:4:14371:14415	1970655	23	True				
ANR	1971433	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: width=%d\\n"" , width ) )"		1970655	0					
ANR	1971434	Callee	PRINTF_DEBUG		1970655	0					
ANR	1971435	Identifier	PRINTF_DEBUG		1970655	0					
ANR	1971436	ArgumentList	"""sprintf: width=%d\\n"" , width"		1970655	1					
ANR	1971437	Argument	"""sprintf: width=%d\\n"" , width"		1970655	0					
ANR	1971438	Expression	"""sprintf: width=%d\\n"" , width"		1970655	0					
ANR	1971439	PrimaryExpression	"""sprintf: width=%d\\n"""		1970655	0					
ANR	1971440	Identifier	width		1970655	1					
ANR	1971441	IfStatement	if ( format [ inpos ] == '.' )		1970655	24					
ANR	1971442	Condition	format [ inpos ] == '.'	523:8:14475:14494	1970655	0	True				
ANR	1971443	EqualityExpression	format [ inpos ] == '.'		1970655	0		==			
ANR	1971444	ArrayIndexing	format [ inpos ]		1970655	0					
ANR	1971445	Identifier	format		1970655	0					
ANR	1971446	Identifier	inpos		1970655	1					
ANR	1971447	PrimaryExpression	'.'		1970655	1					
ANR	1971448	CompoundStatement		134:30:3949:3949	1970655	1					
ANR	1971449	ExpressionStatement	inpos ++	524:5:14504:14511	1970655	0	True				
ANR	1971450	PostIncDecOperationExpression	inpos ++		1970655	0					
ANR	1971451	Identifier	inpos		1970655	0					
ANR	1971452	IncDec	++		1970655	1					
ANR	1971453	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: getting precision\\n"" ) )"	525:5:14518:14564	1970655	1	True				
ANR	1971454	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: getting precision\\n"" ) )"		1970655	0					
ANR	1971455	Callee	PRINTF_DEBUG		1970655	0					
ANR	1971456	Identifier	PRINTF_DEBUG		1970655	0					
ANR	1971457	ArgumentList	"""sprintf: getting precision\\n"""		1970655	1					
ANR	1971458	Argument	"""sprintf: getting precision\\n"""		1970655	0					
ANR	1971459	PrimaryExpression	"""sprintf: getting precision\\n"""		1970655	0					
ANR	1971460	IfStatement	if ( isdigit ( ( int ) format [ inpos ] ) )		1970655	2					
ANR	1971461	Condition	isdigit ( ( int ) format [ inpos ] )	526:9:14575:14601	1970655	0	True				
ANR	1971462	CallExpression	isdigit ( ( int ) format [ inpos ] )		1970655	0					
ANR	1971463	Callee	isdigit		1970655	0					
ANR	1971464	Identifier	isdigit		1970655	0					
ANR	1971465	ArgumentList	( int ) format [ inpos ]		1970655	1					
ANR	1971466	Argument	( int ) format [ inpos ]		1970655	0					
ANR	1971467	CastExpression	( int ) format [ inpos ]		1970655	0					
ANR	1971468	CastTarget	int		1970655	0					
ANR	1971469	ArrayIndexing	format [ inpos ]		1970655	1					
ANR	1971470	Identifier	format		1970655	0					
ANR	1971471	Identifier	inpos		1970655	1					
ANR	1971472	CompoundStatement		137:38:4056:4056	1970655	1					
ANR	1971473	IfStatement	"if ( ( precision = php_sprintf_getnumber ( format , & inpos ) ) < 0 )"		1970655	0					
ANR	1971474	Condition	"( precision = php_sprintf_getnumber ( format , & inpos ) ) < 0"	527:10:14616:14670	1970655	0	True				
ANR	1971475	RelationalExpression	"( precision = php_sprintf_getnumber ( format , & inpos ) ) < 0"		1970655	0		<			
ANR	1971476	AssignmentExpression	"precision = php_sprintf_getnumber ( format , & inpos )"		1970655	0		=			
ANR	1971477	Identifier	precision		1970655	0					
ANR	1971478	CallExpression	"php_sprintf_getnumber ( format , & inpos )"		1970655	1					
ANR	1971479	Callee	php_sprintf_getnumber		1970655	0					
ANR	1971480	Identifier	php_sprintf_getnumber		1970655	0					
ANR	1971481	ArgumentList	format		1970655	1					
ANR	1971482	Argument	format		1970655	0					
ANR	1971483	Identifier	format		1970655	0					
ANR	1971484	Argument	& inpos		1970655	1					
ANR	1971485	UnaryOperationExpression	& inpos		1970655	0					
ANR	1971486	UnaryOperator	&		1970655	0					
ANR	1971487	Identifier	inpos		1970655	1					
ANR	1971488	PrimaryExpression	0		1970655	1					
ANR	1971489	CompoundStatement		138:67:4125:4125	1970655	1					
ANR	1971490	ExpressionStatement	efree ( result )	528:7:14682:14695	1970655	0	True				
ANR	1971491	CallExpression	efree ( result )		1970655	0					
ANR	1971492	Callee	efree		1970655	0					
ANR	1971493	Identifier	efree		1970655	0					
ANR	1971494	ArgumentList	result		1970655	1					
ANR	1971495	Argument	result		1970655	0					
ANR	1971496	Identifier	result		1970655	0					
ANR	1971497	ExpressionStatement	efree ( args )	529:7:14704:14715	1970655	1	True				
ANR	1971498	CallExpression	efree ( args )		1970655	0					
ANR	1971499	Callee	efree		1970655	0					
ANR	1971500	Identifier	efree		1970655	0					
ANR	1971501	ArgumentList	args		1970655	1					
ANR	1971502	Argument	args		1970655	0					
ANR	1971503	Identifier	args		1970655	0					
ANR	1971504	Statement	php_error_docref	530:7:14724:14739	1970655	2	True				
ANR	1971505	Statement	(	530:23:14740:14740	1970655	3	True				
ANR	1971506	Statement	NULL	530:24:14741:14744	1970655	4	True				
ANR	1971507	Statement	TSRMLS_CC	530:29:14746:14754	1970655	5	True				
ANR	1971508	Statement	","	530:38:14755:14755	1970655	6	True				
ANR	1971509	Statement	E_WARNING	530:40:14757:14765	1970655	7	True				
ANR	1971510	Statement	","	530:49:14766:14766	1970655	8	True				
ANR	1971511	Statement	"""Precision must be greater than zero and less than %d"""	530:51:14768:14821	1970655	9	True				
ANR	1971512	Statement	","	530:105:14822:14822	1970655	10	True				
ANR	1971513	Statement	INT_MAX	530:107:14824:14830	1970655	11	True				
ANR	1971514	Statement	)	530:114:14831:14831	1970655	12	True				
ANR	1971515	ExpressionStatement		530:115:14832:14832	1970655	13	True				
ANR	1971516	ReturnStatement	return NULL ;	531:7:14841:14852	1970655	14	True				
ANR	1971517	Identifier	NULL		1970655	0					
ANR	1971518	ExpressionStatement	adjusting |= ADJ_PRECISION	533:6:14868:14894	1970655	1	True				
ANR	1971519	AssignmentExpression	adjusting |= ADJ_PRECISION		1970655	0		|=			
ANR	1971520	Identifier	adjusting		1970655	0					
ANR	1971521	Identifier	ADJ_PRECISION		1970655	1					
ANR	1971522	ExpressionStatement	expprec = 1	534:6:14902:14913	1970655	2	True				
ANR	1971523	AssignmentExpression	expprec = 1		1970655	0		=			
ANR	1971524	Identifier	expprec		1970655	0					
ANR	1971525	PrimaryExpression	1		1970655	1					
ANR	1971526	ElseStatement	else		1970655	0					
ANR	1971527	CompoundStatement		146:12:4379:4379	1970655	0					
ANR	1971528	ExpressionStatement	precision = 0	536:6:14935:14948	1970655	0	True				
ANR	1971529	AssignmentExpression	precision = 0		1970655	0		=			
ANR	1971530	Identifier	precision		1970655	0					
ANR	1971531	PrimaryExpression	0		1970655	1					
ANR	1971532	ElseStatement	else		1970655	0					
ANR	1971533	CompoundStatement		149:11:4420:4420	1970655	0					
ANR	1971534	ExpressionStatement	precision = 0	539:5:14975:14988	1970655	0	True				
ANR	1971535	AssignmentExpression	precision = 0		1970655	0		=			
ANR	1971536	Identifier	precision		1970655	0					
ANR	1971537	PrimaryExpression	0		1970655	1					
ANR	1971538	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: precision=%d\\n"" , precision ) )"	541:4:15000:15052	1970655	25	True				
ANR	1971539	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: precision=%d\\n"" , precision ) )"		1970655	0					
ANR	1971540	Callee	PRINTF_DEBUG		1970655	0					
ANR	1971541	Identifier	PRINTF_DEBUG		1970655	0					
ANR	1971542	ArgumentList	"""sprintf: precision=%d\\n"" , precision"		1970655	1					
ANR	1971543	Argument	"""sprintf: precision=%d\\n"" , precision"		1970655	0					
ANR	1971544	Expression	"""sprintf: precision=%d\\n"" , precision"		1970655	0					
ANR	1971545	PrimaryExpression	"""sprintf: precision=%d\\n"""		1970655	0					
ANR	1971546	Identifier	precision		1970655	1					
ANR	1971547	ElseStatement	else		1970655	0					
ANR	1971548	CompoundStatement		153:10:4516:4516	1970655	0					
ANR	1971549	ExpressionStatement	width = precision = 0	543:4:15070:15091	1970655	0	True				
ANR	1971550	AssignmentExpression	width = precision = 0		1970655	0		=			
ANR	1971551	Identifier	width		1970655	0					
ANR	1971552	AssignmentExpression	precision = 0		1970655	1		=			
ANR	1971553	Identifier	precision		1970655	0					
ANR	1971554	PrimaryExpression	0		1970655	1					
ANR	1971555	ExpressionStatement	argnum = currarg ++ + format_offset	544:4:15097:15131	1970655	1	True				
ANR	1971556	AssignmentExpression	argnum = currarg ++ + format_offset		1970655	0		=			
ANR	1971557	Identifier	argnum		1970655	0					
ANR	1971558	AdditiveExpression	currarg ++ + format_offset		1970655	1		+			
ANR	1971559	PostIncDecOperationExpression	currarg ++		1970655	0					
ANR	1971560	Identifier	currarg		1970655	0					
ANR	1971561	IncDec	++		1970655	1					
ANR	1971562	Identifier	format_offset		1970655	1					
ANR	1971563	IfStatement	if ( argnum >= argc )		1970655	7					
ANR	1971564	Condition	argnum >= argc	547:7:15146:15159	1970655	0	True				
ANR	1971565	RelationalExpression	argnum >= argc		1970655	0		>=			
ANR	1971566	Identifier	argnum		1970655	0					
ANR	1971567	Identifier	argc		1970655	1					
ANR	1971568	CompoundStatement		158:23:4614:4614	1970655	1					
ANR	1971569	ExpressionStatement	efree ( result )	548:4:15168:15181	1970655	0	True				
ANR	1971570	CallExpression	efree ( result )		1970655	0					
ANR	1971571	Callee	efree		1970655	0					
ANR	1971572	Identifier	efree		1970655	0					
ANR	1971573	ArgumentList	result		1970655	1					
ANR	1971574	Argument	result		1970655	0					
ANR	1971575	Identifier	result		1970655	0					
ANR	1971576	ExpressionStatement	efree ( args )	549:4:15187:15198	1970655	1	True				
ANR	1971577	CallExpression	efree ( args )		1970655	0					
ANR	1971578	Callee	efree		1970655	0					
ANR	1971579	Identifier	efree		1970655	0					
ANR	1971580	ArgumentList	args		1970655	1					
ANR	1971581	Argument	args		1970655	0					
ANR	1971582	Identifier	args		1970655	0					
ANR	1971583	Statement	php_error_docref	550:4:15204:15219	1970655	2	True				
ANR	1971584	Statement	(	550:20:15220:15220	1970655	3	True				
ANR	1971585	Statement	NULL	550:21:15221:15224	1970655	4	True				
ANR	1971586	Statement	TSRMLS_CC	550:26:15226:15234	1970655	5	True				
ANR	1971587	Statement	","	550:35:15235:15235	1970655	6	True				
ANR	1971588	Statement	E_WARNING	550:37:15237:15245	1970655	7	True				
ANR	1971589	Statement	","	550:46:15246:15246	1970655	8	True				
ANR	1971590	Statement	"""Too few arguments"""	550:48:15248:15266	1970655	9	True				
ANR	1971591	Statement	)	550:67:15267:15267	1970655	10	True				
ANR	1971592	ExpressionStatement		550:68:15268:15268	1970655	11	True				
ANR	1971593	ReturnStatement	return NULL ;	551:4:15274:15285	1970655	12	True				
ANR	1971594	Identifier	NULL		1970655	0					
ANR	1971595	IfStatement	if ( format [ inpos ] == 'l' )		1970655	8					
ANR	1971596	Condition	format [ inpos ] == 'l'	554:7:15300:15319	1970655	0	True				
ANR	1971597	EqualityExpression	format [ inpos ] == 'l'		1970655	0		==			
ANR	1971598	ArrayIndexing	format [ inpos ]		1970655	0					
ANR	1971599	Identifier	format		1970655	0					
ANR	1971600	Identifier	inpos		1970655	1					
ANR	1971601	PrimaryExpression	'l'		1970655	1					
ANR	1971602	CompoundStatement		165:29:4774:4774	1970655	1					
ANR	1971603	ExpressionStatement	inpos ++	555:4:15328:15335	1970655	0	True				
ANR	1971604	PostIncDecOperationExpression	inpos ++		1970655	0					
ANR	1971605	Identifier	inpos		1970655	0					
ANR	1971606	IncDec	++		1970655	1					
ANR	1971607	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: format character='%c'\\n"" , format [ inpos ] ) )"	557:3:15345:15410	1970655	9	True				
ANR	1971608	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: format character='%c'\\n"" , format [ inpos ] ) )"		1970655	0					
ANR	1971609	Callee	PRINTF_DEBUG		1970655	0					
ANR	1971610	Identifier	PRINTF_DEBUG		1970655	0					
ANR	1971611	ArgumentList	"""sprintf: format character='%c'\\n"" , format [ inpos ]"		1970655	1					
ANR	1971612	Argument	"""sprintf: format character='%c'\\n"" , format [ inpos ]"		1970655	0					
ANR	1971613	Expression	"""sprintf: format character='%c'\\n"" , format [ inpos ]"		1970655	0					
ANR	1971614	PrimaryExpression	"""sprintf: format character='%c'\\n"""		1970655	0					
ANR	1971615	ArrayIndexing	format [ inpos ]		1970655	1					
ANR	1971616	Identifier	format		1970655	0					
ANR	1971617	Identifier	inpos		1970655	1					
ANR	1971618	IfStatement	if ( multiuse )		1970655	10					
ANR	1971619	Condition	multiuse	559:7:15467:15474	1970655	0	True				
ANR	1971620	Identifier	multiuse		1970655	0					
ANR	1971621	CompoundStatement		170:17:4929:4929	1970655	1					
ANR	1971622	ExpressionStatement	MAKE_STD_ZVAL ( tmp )	560:4:15483:15501	1970655	0	True				
ANR	1971623	CallExpression	MAKE_STD_ZVAL ( tmp )		1970655	0					
ANR	1971624	Callee	MAKE_STD_ZVAL		1970655	0					
ANR	1971625	Identifier	MAKE_STD_ZVAL		1970655	0					
ANR	1971626	ArgumentList	tmp		1970655	1					
ANR	1971627	Argument	tmp		1970655	0					
ANR	1971628	Identifier	tmp		1970655	0					
ANR	1971629	ExpressionStatement	* tmp = * * ( args [ argnum ] )	561:4:15507:15530	1970655	1	True				
ANR	1971630	AssignmentExpression	* tmp = * * ( args [ argnum ] )		1970655	0		=			
ANR	1971631	UnaryOperationExpression	* tmp		1970655	0					
ANR	1971632	UnaryOperator	*		1970655	0					
ANR	1971633	Identifier	tmp		1970655	1					
ANR	1971634	UnaryOperationExpression	* * ( args [ argnum ] )		1970655	1					
ANR	1971635	UnaryOperator	*		1970655	0					
ANR	1971636	UnaryOperationExpression	* ( args [ argnum ] )		1970655	1					
ANR	1971637	UnaryOperator	*		1970655	0					
ANR	1971638	ArrayIndexing	args [ argnum ]		1970655	1					
ANR	1971639	Identifier	args		1970655	0					
ANR	1971640	Identifier	argnum		1970655	1					
ANR	1971641	ExpressionStatement	INIT_PZVAL ( tmp )	562:4:15536:15551	1970655	2	True				
ANR	1971642	CallExpression	INIT_PZVAL ( tmp )		1970655	0					
ANR	1971643	Callee	INIT_PZVAL		1970655	0					
ANR	1971644	Identifier	INIT_PZVAL		1970655	0					
ANR	1971645	ArgumentList	tmp		1970655	1					
ANR	1971646	Argument	tmp		1970655	0					
ANR	1971647	Identifier	tmp		1970655	0					
ANR	1971648	ExpressionStatement	zval_copy_ctor ( tmp )	563:4:15557:15576	1970655	3	True				
ANR	1971649	CallExpression	zval_copy_ctor ( tmp )		1970655	0					
ANR	1971650	Callee	zval_copy_ctor		1970655	0					
ANR	1971651	Identifier	zval_copy_ctor		1970655	0					
ANR	1971652	ArgumentList	tmp		1970655	1					
ANR	1971653	Argument	tmp		1970655	0					
ANR	1971654	Identifier	tmp		1970655	0					
ANR	1971655	ElseStatement	else		1970655	0					
ANR	1971656	CompoundStatement		175:10:5040:5040	1970655	0					
ANR	1971657	ExpressionStatement	SEPARATE_ZVAL ( args [ argnum ] )	565:4:15594:15621	1970655	0	True				
ANR	1971658	CallExpression	SEPARATE_ZVAL ( args [ argnum ] )		1970655	0					
ANR	1971659	Callee	SEPARATE_ZVAL		1970655	0					
ANR	1971660	Identifier	SEPARATE_ZVAL		1970655	0					
ANR	1971661	ArgumentList	args [ argnum ]		1970655	1					
ANR	1971662	Argument	args [ argnum ]		1970655	0					
ANR	1971663	ArrayIndexing	args [ argnum ]		1970655	0					
ANR	1971664	Identifier	args		1970655	0					
ANR	1971665	Identifier	argnum		1970655	1					
ANR	1971666	ExpressionStatement	tmp = * ( args [ argnum ] )	566:4:15627:15648	1970655	1	True				
ANR	1971667	AssignmentExpression	tmp = * ( args [ argnum ] )		1970655	0		=			
ANR	1971668	Identifier	tmp		1970655	0					
ANR	1971669	UnaryOperationExpression	* ( args [ argnum ] )		1970655	1					
ANR	1971670	UnaryOperator	*		1970655	0					
ANR	1971671	ArrayIndexing	args [ argnum ]		1970655	1					
ANR	1971672	Identifier	args		1970655	0					
ANR	1971673	Identifier	argnum		1970655	1					
ANR	1971674	SwitchStatement	switch ( format [ inpos ] )		1970655	11					
ANR	1971675	Condition	format [ inpos ]	569:11:15667:15679	1970655	0	True				
ANR	1971676	ArrayIndexing	format [ inpos ]		1970655	0					
ANR	1971677	Identifier	format		1970655	0					
ANR	1971678	Identifier	inpos		1970655	1					
ANR	1971679	CompoundStatement		180:26:5134:5134	1970655	1					
ANR	1971680	Label	case 's' :	570:4:15688:15696	1970655	0	True				
ANR	1971681	CompoundStatement		183:5:5183:5195	1970655	1					
ANR	1971682	IdentifierDeclStatement	"zval * var , var_copy ;"	571:5:15705:15724	1970655	0	True				
ANR	1971683	IdentifierDecl	* var		1970655	0					
ANR	1971684	IdentifierDeclType	zval *		1970655	0					
ANR	1971685	Identifier	var		1970655	1					
ANR	1971686	IdentifierDecl	var_copy		1970655	1					
ANR	1971687	IdentifierDeclType	zval		1970655	0					
ANR	1971688	Identifier	var_copy		1970655	1					
ANR	1971689	IdentifierDeclStatement	int use_copy ;	572:5:15731:15743	1970655	1	True				
ANR	1971690	IdentifierDecl	use_copy		1970655	0					
ANR	1971691	IdentifierDeclType	int		1970655	0					
ANR	1971692	Identifier	use_copy		1970655	1					
ANR	1971693	ExpressionStatement	"zend_make_printable_zval ( tmp , & var_copy , & use_copy )"	574:5:15751:15802	1970655	2	True				
ANR	1971694	CallExpression	"zend_make_printable_zval ( tmp , & var_copy , & use_copy )"		1970655	0					
ANR	1971695	Callee	zend_make_printable_zval		1970655	0					
ANR	1971696	Identifier	zend_make_printable_zval		1970655	0					
ANR	1971697	ArgumentList	tmp		1970655	1					
ANR	1971698	Argument	tmp		1970655	0					
ANR	1971699	Identifier	tmp		1970655	0					
ANR	1971700	Argument	& var_copy		1970655	1					
ANR	1971701	UnaryOperationExpression	& var_copy		1970655	0					
ANR	1971702	UnaryOperator	&		1970655	0					
ANR	1971703	Identifier	var_copy		1970655	1					
ANR	1971704	Argument	& use_copy		1970655	2					
ANR	1971705	UnaryOperationExpression	& use_copy		1970655	0					
ANR	1971706	UnaryOperator	&		1970655	0					
ANR	1971707	Identifier	use_copy		1970655	1					
ANR	1971708	IfStatement	if ( use_copy )		1970655	3					
ANR	1971709	Condition	use_copy	575:9:15813:15820	1970655	0	True				
ANR	1971710	Identifier	use_copy		1970655	0					
ANR	1971711	CompoundStatement		186:19:5275:5275	1970655	1					
ANR	1971712	ExpressionStatement	var = & var_copy	576:6:15831:15846	1970655	0	True				
ANR	1971713	AssignmentExpression	var = & var_copy		1970655	0		=			
ANR	1971714	Identifier	var		1970655	0					
ANR	1971715	UnaryOperationExpression	& var_copy		1970655	1					
ANR	1971716	UnaryOperator	&		1970655	0					
ANR	1971717	Identifier	var_copy		1970655	1					
ANR	1971718	ElseStatement	else		1970655	0					
ANR	1971719	CompoundStatement		188:12:5312:5312	1970655	0					
ANR	1971720	ExpressionStatement	var = tmp	578:6:15868:15877	1970655	0	True				
ANR	1971721	AssignmentExpression	var = tmp		1970655	0		=			
ANR	1971722	Identifier	var		1970655	0					
ANR	1971723	Identifier	tmp		1970655	1					
ANR	1971724	ExpressionStatement	"php_sprintf_appendstring ( & result , & outpos , & size , Z_STRVAL_P ( var ) , width , precision , padding , alignment , Z_STRLEN_P ( var ) , 0 , expprec , 0 )"	580:5:15891:16087	1970655	4	True				
ANR	1971725	CallExpression	"php_sprintf_appendstring ( & result , & outpos , & size , Z_STRVAL_P ( var ) , width , precision , padding , alignment , Z_STRLEN_P ( var ) , 0 , expprec , 0 )"		1970655	0					
ANR	1971726	Callee	php_sprintf_appendstring		1970655	0					
ANR	1971727	Identifier	php_sprintf_appendstring		1970655	0					
ANR	1971728	ArgumentList	& result		1970655	1					
ANR	1971729	Argument	& result		1970655	0					
ANR	1971730	UnaryOperationExpression	& result		1970655	0					
ANR	1971731	UnaryOperator	&		1970655	0					
ANR	1971732	Identifier	result		1970655	1					
ANR	1971733	Argument	& outpos		1970655	1					
ANR	1971734	UnaryOperationExpression	& outpos		1970655	0					
ANR	1971735	UnaryOperator	&		1970655	0					
ANR	1971736	Identifier	outpos		1970655	1					
ANR	1971737	Argument	& size		1970655	2					
ANR	1971738	UnaryOperationExpression	& size		1970655	0					
ANR	1971739	UnaryOperator	&		1970655	0					
ANR	1971740	Identifier	size		1970655	1					
ANR	1971741	Argument	Z_STRVAL_P ( var )		1970655	3					
ANR	1971742	CallExpression	Z_STRVAL_P ( var )		1970655	0					
ANR	1971743	Callee	Z_STRVAL_P		1970655	0					
ANR	1971744	Identifier	Z_STRVAL_P		1970655	0					
ANR	1971745	ArgumentList	var		1970655	1					
ANR	1971746	Argument	var		1970655	0					
ANR	1971747	Identifier	var		1970655	0					
ANR	1971748	Argument	width		1970655	4					
ANR	1971749	Identifier	width		1970655	0					
ANR	1971750	Argument	precision		1970655	5					
ANR	1971751	Identifier	precision		1970655	0					
ANR	1971752	Argument	padding		1970655	6					
ANR	1971753	Identifier	padding		1970655	0					
ANR	1971754	Argument	alignment		1970655	7					
ANR	1971755	Identifier	alignment		1970655	0					
ANR	1971756	Argument	Z_STRLEN_P ( var )		1970655	8					
ANR	1971757	CallExpression	Z_STRLEN_P ( var )		1970655	0					
ANR	1971758	Callee	Z_STRLEN_P		1970655	0					
ANR	1971759	Identifier	Z_STRLEN_P		1970655	0					
ANR	1971760	ArgumentList	var		1970655	1					
ANR	1971761	Argument	var		1970655	0					
ANR	1971762	Identifier	var		1970655	0					
ANR	1971763	Argument	0		1970655	9					
ANR	1971764	PrimaryExpression	0		1970655	0					
ANR	1971765	Argument	expprec		1970655	10					
ANR	1971766	Identifier	expprec		1970655	0					
ANR	1971767	Argument	0		1970655	11					
ANR	1971768	PrimaryExpression	0		1970655	0					
ANR	1971769	IfStatement	if ( use_copy )		1970655	5					
ANR	1971770	Condition	use_copy	586:9:16098:16105	1970655	0	True				
ANR	1971771	Identifier	use_copy		1970655	0					
ANR	1971772	CompoundStatement		197:19:5560:5560	1970655	1					
ANR	1971773	ExpressionStatement	zval_dtor ( & var_copy )	587:6:16116:16136	1970655	0	True				
ANR	1971774	CallExpression	zval_dtor ( & var_copy )		1970655	0					
ANR	1971775	Callee	zval_dtor		1970655	0					
ANR	1971776	Identifier	zval_dtor		1970655	0					
ANR	1971777	ArgumentList	& var_copy		1970655	1					
ANR	1971778	Argument	& var_copy		1970655	0					
ANR	1971779	UnaryOperationExpression	& var_copy		1970655	0					
ANR	1971780	UnaryOperator	&		1970655	0					
ANR	1971781	Identifier	var_copy		1970655	1					
ANR	1971782	BreakStatement	break ;	589:5:16150:16155	1970655	6	True				
ANR	1971783	Label	case 'd' :	592:4:16168:16176	1970655	2	True				
ANR	1971784	ExpressionStatement	convert_to_long ( tmp )	593:5:16183:16203	1970655	3	True				
ANR	1971785	CallExpression	convert_to_long ( tmp )		1970655	0					
ANR	1971786	Callee	convert_to_long		1970655	0					
ANR	1971787	Identifier	convert_to_long		1970655	0					
ANR	1971788	ArgumentList	tmp		1970655	1					
ANR	1971789	Argument	tmp		1970655	0					
ANR	1971790	Identifier	tmp		1970655	0					
ANR	1971791	ExpressionStatement	"php_sprintf_appendint ( & result , & outpos , & size , Z_LVAL_P ( tmp ) , width , padding , alignment , always_sign )"	594:5:16210:16347	1970655	4	True				
ANR	1971792	CallExpression	"php_sprintf_appendint ( & result , & outpos , & size , Z_LVAL_P ( tmp ) , width , padding , alignment , always_sign )"		1970655	0					
ANR	1971793	Callee	php_sprintf_appendint		1970655	0					
ANR	1971794	Identifier	php_sprintf_appendint		1970655	0					
ANR	1971795	ArgumentList	& result		1970655	1					
ANR	1971796	Argument	& result		1970655	0					
ANR	1971797	UnaryOperationExpression	& result		1970655	0					
ANR	1971798	UnaryOperator	&		1970655	0					
ANR	1971799	Identifier	result		1970655	1					
ANR	1971800	Argument	& outpos		1970655	1					
ANR	1971801	UnaryOperationExpression	& outpos		1970655	0					
ANR	1971802	UnaryOperator	&		1970655	0					
ANR	1971803	Identifier	outpos		1970655	1					
ANR	1971804	Argument	& size		1970655	2					
ANR	1971805	UnaryOperationExpression	& size		1970655	0					
ANR	1971806	UnaryOperator	&		1970655	0					
ANR	1971807	Identifier	size		1970655	1					
ANR	1971808	Argument	Z_LVAL_P ( tmp )		1970655	3					
ANR	1971809	CallExpression	Z_LVAL_P ( tmp )		1970655	0					
ANR	1971810	Callee	Z_LVAL_P		1970655	0					
ANR	1971811	Identifier	Z_LVAL_P		1970655	0					
ANR	1971812	ArgumentList	tmp		1970655	1					
ANR	1971813	Argument	tmp		1970655	0					
ANR	1971814	Identifier	tmp		1970655	0					
ANR	1971815	Argument	width		1970655	4					
ANR	1971816	Identifier	width		1970655	0					
ANR	1971817	Argument	padding		1970655	5					
ANR	1971818	Identifier	padding		1970655	0					
ANR	1971819	Argument	alignment		1970655	6					
ANR	1971820	Identifier	alignment		1970655	0					
ANR	1971821	Argument	always_sign		1970655	7					
ANR	1971822	Identifier	always_sign		1970655	0					
ANR	1971823	BreakStatement	break ;	598:5:16354:16359	1970655	5	True				
ANR	1971824	Label	case 'u' :	600:4:16366:16374	1970655	6	True				
ANR	1971825	ExpressionStatement	convert_to_long ( tmp )	601:5:16381:16401	1970655	7	True				
ANR	1971826	CallExpression	convert_to_long ( tmp )		1970655	0					
ANR	1971827	Callee	convert_to_long		1970655	0					
ANR	1971828	Identifier	convert_to_long		1970655	0					
ANR	1971829	ArgumentList	tmp		1970655	1					
ANR	1971830	Argument	tmp		1970655	0					
ANR	1971831	Identifier	tmp		1970655	0					
ANR	1971832	ExpressionStatement	"php_sprintf_appenduint ( & result , & outpos , & size , Z_LVAL_P ( tmp ) , width , padding , alignment )"	602:5:16408:16521	1970655	8	True				
ANR	1971833	CallExpression	"php_sprintf_appenduint ( & result , & outpos , & size , Z_LVAL_P ( tmp ) , width , padding , alignment )"		1970655	0					
ANR	1971834	Callee	php_sprintf_appenduint		1970655	0					
ANR	1971835	Identifier	php_sprintf_appenduint		1970655	0					
ANR	1971836	ArgumentList	& result		1970655	1					
ANR	1971837	Argument	& result		1970655	0					
ANR	1971838	UnaryOperationExpression	& result		1970655	0					
ANR	1971839	UnaryOperator	&		1970655	0					
ANR	1971840	Identifier	result		1970655	1					
ANR	1971841	Argument	& outpos		1970655	1					
ANR	1971842	UnaryOperationExpression	& outpos		1970655	0					
ANR	1971843	UnaryOperator	&		1970655	0					
ANR	1971844	Identifier	outpos		1970655	1					
ANR	1971845	Argument	& size		1970655	2					
ANR	1971846	UnaryOperationExpression	& size		1970655	0					
ANR	1971847	UnaryOperator	&		1970655	0					
ANR	1971848	Identifier	size		1970655	1					
ANR	1971849	Argument	Z_LVAL_P ( tmp )		1970655	3					
ANR	1971850	CallExpression	Z_LVAL_P ( tmp )		1970655	0					
ANR	1971851	Callee	Z_LVAL_P		1970655	0					
ANR	1971852	Identifier	Z_LVAL_P		1970655	0					
ANR	1971853	ArgumentList	tmp		1970655	1					
ANR	1971854	Argument	tmp		1970655	0					
ANR	1971855	Identifier	tmp		1970655	0					
ANR	1971856	Argument	width		1970655	4					
ANR	1971857	Identifier	width		1970655	0					
ANR	1971858	Argument	padding		1970655	5					
ANR	1971859	Identifier	padding		1970655	0					
ANR	1971860	Argument	alignment		1970655	6					
ANR	1971861	Identifier	alignment		1970655	0					
ANR	1971862	BreakStatement	break ;	605:5:16528:16533	1970655	9	True				
ANR	1971863	Label	case 'g' :	607:4:16540:16548	1970655	10	True				
ANR	1971864	Label	case 'G' :	608:4:16554:16562	1970655	11	True				
ANR	1971865	Label	case 'e' :	609:4:16568:16576	1970655	12	True				
ANR	1971866	Label	case 'E' :	610:4:16582:16590	1970655	13	True				
ANR	1971867	Label	case 'f' :	611:4:16596:16604	1970655	14	True				
ANR	1971868	Label	case 'F' :	612:4:16610:16618	1970655	15	True				
ANR	1971869	ExpressionStatement	convert_to_double ( tmp )	613:5:16625:16647	1970655	16	True				
ANR	1971870	CallExpression	convert_to_double ( tmp )		1970655	0					
ANR	1971871	Callee	convert_to_double		1970655	0					
ANR	1971872	Identifier	convert_to_double		1970655	0					
ANR	1971873	ArgumentList	tmp		1970655	1					
ANR	1971874	Argument	tmp		1970655	0					
ANR	1971875	Identifier	tmp		1970655	0					
ANR	1971876	Statement	php_sprintf_appenddouble	614:5:16654:16677	1970655	17	True				
ANR	1971877	Statement	(	614:29:16678:16678	1970655	18	True				
ANR	1971878	Statement	&	614:30:16679:16679	1970655	19	True				
ANR	1971879	Statement	result	614:31:16680:16685	1970655	20	True				
ANR	1971880	Statement	","	614:37:16686:16686	1970655	21	True				
ANR	1971881	Statement	&	614:39:16688:16688	1970655	22	True				
ANR	1971882	Statement	outpos	614:40:16689:16694	1970655	23	True				
ANR	1971883	Statement	","	614:46:16695:16695	1970655	24	True				
ANR	1971884	Statement	&	614:48:16697:16697	1970655	25	True				
ANR	1971885	Statement	size	614:49:16698:16701	1970655	26	True				
ANR	1971886	Statement	","	614:53:16702:16702	1970655	27	True				
ANR	1971887	Statement	Z_DVAL_P	615:12:16716:16723	1970655	28	True				
ANR	1971888	Statement	(	615:20:16724:16724	1970655	29	True				
ANR	1971889	Statement	tmp	615:21:16725:16727	1970655	30	True				
ANR	1971890	Statement	)	615:24:16728:16728	1970655	31	True				
ANR	1971891	Statement	","	615:25:16729:16729	1970655	32	True				
ANR	1971892	Statement	width	616:12:16743:16747	1970655	33	True				
ANR	1971893	Statement	","	616:17:16748:16748	1970655	34	True				
ANR	1971894	Statement	padding	616:19:16750:16756	1970655	35	True				
ANR	1971895	Statement	","	616:26:16757:16757	1970655	36	True				
ANR	1971896	Statement	alignment	616:28:16759:16767	1970655	37	True				
ANR	1971897	Statement	","	616:37:16768:16768	1970655	38	True				
ANR	1971898	Statement	precision	617:12:16782:16790	1970655	39	True				
ANR	1971899	Statement	","	617:21:16791:16791	1970655	40	True				
ANR	1971900	Statement	adjusting	617:23:16793:16801	1970655	41	True				
ANR	1971901	Statement	","	617:32:16802:16802	1970655	42	True				
ANR	1971902	Statement	format	618:12:16816:16821	1970655	43	True				
ANR	1971903	Statement	[	618:18:16822:16822	1970655	44	True				
ANR	1971904	Statement	inpos	618:19:16823:16827	1970655	45	True				
ANR	1971905	Statement	]	618:24:16828:16828	1970655	46	True				
ANR	1971906	Statement	","	618:25:16829:16829	1970655	47	True				
ANR	1971907	Statement	always_sign	618:27:16831:16841	1970655	48	True				
ANR	1971908	Statement	TSRMLS_CC	619:12:16855:16863	1970655	49	True				
ANR	1971909	Statement	)	619:21:16864:16864	1970655	50	True				
ANR	1971910	ExpressionStatement		619:22:16865:16865	1970655	51	True				
ANR	1971911	BreakStatement	break ;	620:5:16872:16877	1970655	52	True				
ANR	1971912	Label	case 'c' :	622:4:16889:16897	1970655	53	True				
ANR	1971913	ExpressionStatement	convert_to_long ( tmp )	623:5:16904:16924	1970655	54	True				
ANR	1971914	CallExpression	convert_to_long ( tmp )		1970655	0					
ANR	1971915	Callee	convert_to_long		1970655	0					
ANR	1971916	Identifier	convert_to_long		1970655	0					
ANR	1971917	ArgumentList	tmp		1970655	1					
ANR	1971918	Argument	tmp		1970655	0					
ANR	1971919	Identifier	tmp		1970655	0					
ANR	1971920	Statement	php_sprintf_appendchar	624:5:16931:16952	1970655	55	True				
ANR	1971921	Statement	(	624:27:16953:16953	1970655	56	True				
ANR	1971922	Statement	&	624:28:16954:16954	1970655	57	True				
ANR	1971923	Statement	result	624:29:16955:16960	1970655	58	True				
ANR	1971924	Statement	","	624:35:16961:16961	1970655	59	True				
ANR	1971925	Statement	&	624:37:16963:16963	1970655	60	True				
ANR	1971926	Statement	outpos	624:38:16964:16969	1970655	61	True				
ANR	1971927	Statement	","	624:44:16970:16970	1970655	62	True				
ANR	1971928	Statement	&	624:46:16972:16972	1970655	63	True				
ANR	1971929	Statement	size	624:47:16973:16976	1970655	64	True				
ANR	1971930	Statement	","	624:51:16977:16977	1970655	65	True				
ANR	1971931	Statement	(	625:10:16989:16989	1970655	66	True				
ANR	1971932	Statement	char	625:11:16990:16993	1970655	67	True				
ANR	1971933	Statement	)	625:15:16994:16994	1970655	68	True				
ANR	1971934	Statement	Z_LVAL_P	625:17:16996:17003	1970655	69	True				
ANR	1971935	Statement	(	625:25:17004:17004	1970655	70	True				
ANR	1971936	Statement	tmp	625:26:17005:17007	1970655	71	True				
ANR	1971937	Statement	)	625:29:17008:17008	1970655	72	True				
ANR	1971938	Statement	TSRMLS_CC	625:31:17010:17018	1970655	73	True				
ANR	1971939	Statement	)	625:40:17019:17019	1970655	74	True				
ANR	1971940	ExpressionStatement		625:41:17020:17020	1970655	75	True				
ANR	1971941	BreakStatement	break ;	626:5:17027:17032	1970655	76	True				
ANR	1971942	Label	case 'o' :	628:4:17039:17047	1970655	77	True				
ANR	1971943	ExpressionStatement	convert_to_long ( tmp )	629:5:17054:17074	1970655	78	True				
ANR	1971944	CallExpression	convert_to_long ( tmp )		1970655	0					
ANR	1971945	Callee	convert_to_long		1970655	0					
ANR	1971946	Identifier	convert_to_long		1970655	0					
ANR	1971947	ArgumentList	tmp		1970655	1					
ANR	1971948	Argument	tmp		1970655	0					
ANR	1971949	Identifier	tmp		1970655	0					
ANR	1971950	ExpressionStatement	"php_sprintf_append2n ( & result , & outpos , & size , Z_LVAL_P ( tmp ) , width , padding , alignment , 3 , hexchars , expprec )"	630:5:17081:17223	1970655	79	True				
ANR	1971951	CallExpression	"php_sprintf_append2n ( & result , & outpos , & size , Z_LVAL_P ( tmp ) , width , padding , alignment , 3 , hexchars , expprec )"		1970655	0					
ANR	1971952	Callee	php_sprintf_append2n		1970655	0					
ANR	1971953	Identifier	php_sprintf_append2n		1970655	0					
ANR	1971954	ArgumentList	& result		1970655	1					
ANR	1971955	Argument	& result		1970655	0					
ANR	1971956	UnaryOperationExpression	& result		1970655	0					
ANR	1971957	UnaryOperator	&		1970655	0					
ANR	1971958	Identifier	result		1970655	1					
ANR	1971959	Argument	& outpos		1970655	1					
ANR	1971960	UnaryOperationExpression	& outpos		1970655	0					
ANR	1971961	UnaryOperator	&		1970655	0					
ANR	1971962	Identifier	outpos		1970655	1					
ANR	1971963	Argument	& size		1970655	2					
ANR	1971964	UnaryOperationExpression	& size		1970655	0					
ANR	1971965	UnaryOperator	&		1970655	0					
ANR	1971966	Identifier	size		1970655	1					
ANR	1971967	Argument	Z_LVAL_P ( tmp )		1970655	3					
ANR	1971968	CallExpression	Z_LVAL_P ( tmp )		1970655	0					
ANR	1971969	Callee	Z_LVAL_P		1970655	0					
ANR	1971970	Identifier	Z_LVAL_P		1970655	0					
ANR	1971971	ArgumentList	tmp		1970655	1					
ANR	1971972	Argument	tmp		1970655	0					
ANR	1971973	Identifier	tmp		1970655	0					
ANR	1971974	Argument	width		1970655	4					
ANR	1971975	Identifier	width		1970655	0					
ANR	1971976	Argument	padding		1970655	5					
ANR	1971977	Identifier	padding		1970655	0					
ANR	1971978	Argument	alignment		1970655	6					
ANR	1971979	Identifier	alignment		1970655	0					
ANR	1971980	Argument	3		1970655	7					
ANR	1971981	PrimaryExpression	3		1970655	0					
ANR	1971982	Argument	hexchars		1970655	8					
ANR	1971983	Identifier	hexchars		1970655	0					
ANR	1971984	Argument	expprec		1970655	9					
ANR	1971985	Identifier	expprec		1970655	0					
ANR	1971986	BreakStatement	break ;	634:5:17230:17235	1970655	80	True				
ANR	1971987	Label	case 'x' :	636:4:17242:17250	1970655	81	True				
ANR	1971988	ExpressionStatement	convert_to_long ( tmp )	637:5:17257:17277	1970655	82	True				
ANR	1971989	CallExpression	convert_to_long ( tmp )		1970655	0					
ANR	1971990	Callee	convert_to_long		1970655	0					
ANR	1971991	Identifier	convert_to_long		1970655	0					
ANR	1971992	ArgumentList	tmp		1970655	1					
ANR	1971993	Argument	tmp		1970655	0					
ANR	1971994	Identifier	tmp		1970655	0					
ANR	1971995	ExpressionStatement	"php_sprintf_append2n ( & result , & outpos , & size , Z_LVAL_P ( tmp ) , width , padding , alignment , 4 , hexchars , expprec )"	638:5:17284:17426	1970655	83	True				
ANR	1971996	CallExpression	"php_sprintf_append2n ( & result , & outpos , & size , Z_LVAL_P ( tmp ) , width , padding , alignment , 4 , hexchars , expprec )"		1970655	0					
ANR	1971997	Callee	php_sprintf_append2n		1970655	0					
ANR	1971998	Identifier	php_sprintf_append2n		1970655	0					
ANR	1971999	ArgumentList	& result		1970655	1					
ANR	1972000	Argument	& result		1970655	0					
ANR	1972001	UnaryOperationExpression	& result		1970655	0					
ANR	1972002	UnaryOperator	&		1970655	0					
ANR	1972003	Identifier	result		1970655	1					
ANR	1972004	Argument	& outpos		1970655	1					
ANR	1972005	UnaryOperationExpression	& outpos		1970655	0					
ANR	1972006	UnaryOperator	&		1970655	0					
ANR	1972007	Identifier	outpos		1970655	1					
ANR	1972008	Argument	& size		1970655	2					
ANR	1972009	UnaryOperationExpression	& size		1970655	0					
ANR	1972010	UnaryOperator	&		1970655	0					
ANR	1972011	Identifier	size		1970655	1					
ANR	1972012	Argument	Z_LVAL_P ( tmp )		1970655	3					
ANR	1972013	CallExpression	Z_LVAL_P ( tmp )		1970655	0					
ANR	1972014	Callee	Z_LVAL_P		1970655	0					
ANR	1972015	Identifier	Z_LVAL_P		1970655	0					
ANR	1972016	ArgumentList	tmp		1970655	1					
ANR	1972017	Argument	tmp		1970655	0					
ANR	1972018	Identifier	tmp		1970655	0					
ANR	1972019	Argument	width		1970655	4					
ANR	1972020	Identifier	width		1970655	0					
ANR	1972021	Argument	padding		1970655	5					
ANR	1972022	Identifier	padding		1970655	0					
ANR	1972023	Argument	alignment		1970655	6					
ANR	1972024	Identifier	alignment		1970655	0					
ANR	1972025	Argument	4		1970655	7					
ANR	1972026	PrimaryExpression	4		1970655	0					
ANR	1972027	Argument	hexchars		1970655	8					
ANR	1972028	Identifier	hexchars		1970655	0					
ANR	1972029	Argument	expprec		1970655	9					
ANR	1972030	Identifier	expprec		1970655	0					
ANR	1972031	BreakStatement	break ;	642:5:17433:17438	1970655	84	True				
ANR	1972032	Label	case 'X' :	644:4:17445:17453	1970655	85	True				
ANR	1972033	ExpressionStatement	convert_to_long ( tmp )	645:5:17460:17480	1970655	86	True				
ANR	1972034	CallExpression	convert_to_long ( tmp )		1970655	0					
ANR	1972035	Callee	convert_to_long		1970655	0					
ANR	1972036	Identifier	convert_to_long		1970655	0					
ANR	1972037	ArgumentList	tmp		1970655	1					
ANR	1972038	Argument	tmp		1970655	0					
ANR	1972039	Identifier	tmp		1970655	0					
ANR	1972040	ExpressionStatement	"php_sprintf_append2n ( & result , & outpos , & size , Z_LVAL_P ( tmp ) , width , padding , alignment , 4 , HEXCHARS , expprec )"	646:5:17487:17629	1970655	87	True				
ANR	1972041	CallExpression	"php_sprintf_append2n ( & result , & outpos , & size , Z_LVAL_P ( tmp ) , width , padding , alignment , 4 , HEXCHARS , expprec )"		1970655	0					
ANR	1972042	Callee	php_sprintf_append2n		1970655	0					
ANR	1972043	Identifier	php_sprintf_append2n		1970655	0					
ANR	1972044	ArgumentList	& result		1970655	1					
ANR	1972045	Argument	& result		1970655	0					
ANR	1972046	UnaryOperationExpression	& result		1970655	0					
ANR	1972047	UnaryOperator	&		1970655	0					
ANR	1972048	Identifier	result		1970655	1					
ANR	1972049	Argument	& outpos		1970655	1					
ANR	1972050	UnaryOperationExpression	& outpos		1970655	0					
ANR	1972051	UnaryOperator	&		1970655	0					
ANR	1972052	Identifier	outpos		1970655	1					
ANR	1972053	Argument	& size		1970655	2					
ANR	1972054	UnaryOperationExpression	& size		1970655	0					
ANR	1972055	UnaryOperator	&		1970655	0					
ANR	1972056	Identifier	size		1970655	1					
ANR	1972057	Argument	Z_LVAL_P ( tmp )		1970655	3					
ANR	1972058	CallExpression	Z_LVAL_P ( tmp )		1970655	0					
ANR	1972059	Callee	Z_LVAL_P		1970655	0					
ANR	1972060	Identifier	Z_LVAL_P		1970655	0					
ANR	1972061	ArgumentList	tmp		1970655	1					
ANR	1972062	Argument	tmp		1970655	0					
ANR	1972063	Identifier	tmp		1970655	0					
ANR	1972064	Argument	width		1970655	4					
ANR	1972065	Identifier	width		1970655	0					
ANR	1972066	Argument	padding		1970655	5					
ANR	1972067	Identifier	padding		1970655	0					
ANR	1972068	Argument	alignment		1970655	6					
ANR	1972069	Identifier	alignment		1970655	0					
ANR	1972070	Argument	4		1970655	7					
ANR	1972071	PrimaryExpression	4		1970655	0					
ANR	1972072	Argument	HEXCHARS		1970655	8					
ANR	1972073	Identifier	HEXCHARS		1970655	0					
ANR	1972074	Argument	expprec		1970655	9					
ANR	1972075	Identifier	expprec		1970655	0					
ANR	1972076	BreakStatement	break ;	650:5:17636:17641	1970655	88	True				
ANR	1972077	Label	case 'b' :	652:4:17648:17656	1970655	89	True				
ANR	1972078	ExpressionStatement	convert_to_long ( tmp )	653:5:17663:17683	1970655	90	True				
ANR	1972079	CallExpression	convert_to_long ( tmp )		1970655	0					
ANR	1972080	Callee	convert_to_long		1970655	0					
ANR	1972081	Identifier	convert_to_long		1970655	0					
ANR	1972082	ArgumentList	tmp		1970655	1					
ANR	1972083	Argument	tmp		1970655	0					
ANR	1972084	Identifier	tmp		1970655	0					
ANR	1972085	ExpressionStatement	"php_sprintf_append2n ( & result , & outpos , & size , Z_LVAL_P ( tmp ) , width , padding , alignment , 1 , hexchars , expprec )"	654:5:17690:17832	1970655	91	True				
ANR	1972086	CallExpression	"php_sprintf_append2n ( & result , & outpos , & size , Z_LVAL_P ( tmp ) , width , padding , alignment , 1 , hexchars , expprec )"		1970655	0					
ANR	1972087	Callee	php_sprintf_append2n		1970655	0					
ANR	1972088	Identifier	php_sprintf_append2n		1970655	0					
ANR	1972089	ArgumentList	& result		1970655	1					
ANR	1972090	Argument	& result		1970655	0					
ANR	1972091	UnaryOperationExpression	& result		1970655	0					
ANR	1972092	UnaryOperator	&		1970655	0					
ANR	1972093	Identifier	result		1970655	1					
ANR	1972094	Argument	& outpos		1970655	1					
ANR	1972095	UnaryOperationExpression	& outpos		1970655	0					
ANR	1972096	UnaryOperator	&		1970655	0					
ANR	1972097	Identifier	outpos		1970655	1					
ANR	1972098	Argument	& size		1970655	2					
ANR	1972099	UnaryOperationExpression	& size		1970655	0					
ANR	1972100	UnaryOperator	&		1970655	0					
ANR	1972101	Identifier	size		1970655	1					
ANR	1972102	Argument	Z_LVAL_P ( tmp )		1970655	3					
ANR	1972103	CallExpression	Z_LVAL_P ( tmp )		1970655	0					
ANR	1972104	Callee	Z_LVAL_P		1970655	0					
ANR	1972105	Identifier	Z_LVAL_P		1970655	0					
ANR	1972106	ArgumentList	tmp		1970655	1					
ANR	1972107	Argument	tmp		1970655	0					
ANR	1972108	Identifier	tmp		1970655	0					
ANR	1972109	Argument	width		1970655	4					
ANR	1972110	Identifier	width		1970655	0					
ANR	1972111	Argument	padding		1970655	5					
ANR	1972112	Identifier	padding		1970655	0					
ANR	1972113	Argument	alignment		1970655	6					
ANR	1972114	Identifier	alignment		1970655	0					
ANR	1972115	Argument	1		1970655	7					
ANR	1972116	PrimaryExpression	1		1970655	0					
ANR	1972117	Argument	hexchars		1970655	8					
ANR	1972118	Identifier	hexchars		1970655	0					
ANR	1972119	Argument	expprec		1970655	9					
ANR	1972120	Identifier	expprec		1970655	0					
ANR	1972121	BreakStatement	break ;	658:5:17839:17844	1970655	92	True				
ANR	1972122	Label	case '%' :	660:4:17851:17859	1970655	93	True				
ANR	1972123	Statement	php_sprintf_appendchar	661:5:17866:17887	1970655	94	True				
ANR	1972124	Statement	(	661:27:17888:17888	1970655	95	True				
ANR	1972125	Statement	&	661:28:17889:17889	1970655	96	True				
ANR	1972126	Statement	result	661:29:17890:17895	1970655	97	True				
ANR	1972127	Statement	","	661:35:17896:17896	1970655	98	True				
ANR	1972128	Statement	&	661:37:17898:17898	1970655	99	True				
ANR	1972129	Statement	outpos	661:38:17899:17904	1970655	100	True				
ANR	1972130	Statement	","	661:44:17905:17905	1970655	101	True				
ANR	1972131	Statement	&	661:46:17907:17907	1970655	102	True				
ANR	1972132	Statement	size	661:47:17908:17911	1970655	103	True				
ANR	1972133	Statement	","	661:51:17912:17912	1970655	104	True				
ANR	1972134	Statement	'%'	661:53:17914:17916	1970655	105	True				
ANR	1972135	Statement	TSRMLS_CC	661:57:17918:17926	1970655	106	True				
ANR	1972136	Statement	)	661:66:17927:17927	1970655	107	True				
ANR	1972137	ExpressionStatement		661:67:17928:17928	1970655	108	True				
ANR	1972138	BreakStatement	break ;	663:5:17936:17941	1970655	109	True				
ANR	1972139	Label	default :	664:4:17947:17954	1970655	110	True				
ANR	1972140	Identifier	default		1970655	0					
ANR	1972141	BreakStatement	break ;	665:5:17961:17966	1970655	111	True				
ANR	1972142	IfStatement	if ( multiuse )		1970655	12					
ANR	1972143	Condition	multiuse	667:7:17980:17987	1970655	0	True				
ANR	1972144	Identifier	multiuse		1970655	0					
ANR	1972145	CompoundStatement		278:17:7442:7442	1970655	1					
ANR	1972146	ExpressionStatement	zval_ptr_dtor ( & tmp )	668:4:17996:18015	1970655	0	True				
ANR	1972147	CallExpression	zval_ptr_dtor ( & tmp )		1970655	0					
ANR	1972148	Callee	zval_ptr_dtor		1970655	0					
ANR	1972149	Identifier	zval_ptr_dtor		1970655	0					
ANR	1972150	ArgumentList	& tmp		1970655	1					
ANR	1972151	Argument	& tmp		1970655	0					
ANR	1972152	UnaryOperationExpression	& tmp		1970655	0					
ANR	1972153	UnaryOperator	&		1970655	0					
ANR	1972154	Identifier	tmp		1970655	1					
ANR	1972155	ExpressionStatement	inpos ++	670:3:18025:18032	1970655	13	True				
ANR	1972156	PostIncDecOperationExpression	inpos ++		1970655	0					
ANR	1972157	Identifier	inpos		1970655	0					
ANR	1972158	IncDec	++		1970655	1					
ANR	1972159	ExpressionStatement	efree ( args )	674:1:18044:18055	1970655	35	True				
ANR	1972160	CallExpression	efree ( args )		1970655	0					
ANR	1972161	Callee	efree		1970655	0					
ANR	1972162	Identifier	efree		1970655	0					
ANR	1972163	ArgumentList	args		1970655	1					
ANR	1972164	Argument	args		1970655	0					
ANR	1972165	Identifier	args		1970655	0					
ANR	1972166	ExpressionStatement	result [ outpos ] = 0	677:1:18137:18153	1970655	36	True				
ANR	1972167	AssignmentExpression	result [ outpos ] = 0		1970655	0		=			
ANR	1972168	ArrayIndexing	result [ outpos ]		1970655	0					
ANR	1972169	Identifier	result		1970655	0					
ANR	1972170	Identifier	outpos		1970655	1					
ANR	1972171	PrimaryExpression	0		1970655	1					
ANR	1972172	ExpressionStatement	* len = outpos	678:1:18156:18169	1970655	37	True				
ANR	1972173	AssignmentExpression	* len = outpos		1970655	0		=			
ANR	1972174	UnaryOperationExpression	* len		1970655	0					
ANR	1972175	UnaryOperator	*		1970655	0					
ANR	1972176	Identifier	len		1970655	1					
ANR	1972177	Identifier	outpos		1970655	1					
ANR	1972178	ReturnStatement	return result ;	679:1:18173:18186	1970655	38	True				
ANR	1972179	Identifier	result		1970655	0					
ANR	1972180	ReturnType	static char *		1970655	1					
ANR	1972181	Identifier	php_formatted_print		1970655	2					
ANR	1972182	ParameterList	"int ht , int * len , int use_array , int format_offset TSRMLS_DC"		1970655	3					
ANR	1972183	Parameter	int ht	389:20:10485:10490	1970655	0	True				
ANR	1972184	ParameterType	int		1970655	0					
ANR	1972185	Identifier	ht		1970655	1					
ANR	1972186	Parameter	int * len	389:28:10493:10500	1970655	1	True				
ANR	1972187	ParameterType	int *		1970655	0					
ANR	1972188	Identifier	len		1970655	1					
ANR	1972189	Parameter	int use_array	389:38:10503:10515	1970655	2	True				
ANR	1972190	ParameterType	int		1970655	0					
ANR	1972191	Identifier	use_array		1970655	1					
ANR	1972192	Parameter	int format_offset TSRMLS_DC	389:53:10518:10544	1970655	3	True				
ANR	1972193	ParameterType	int format_offset		1970655	0					
ANR	1972194	Identifier	TSRMLS_DC		1970655	1					
ANR	1972195	CFGEntryNode	ENTRY		1970655		True				
ANR	1972196	CFGExitNode	EXIT		1970655		True				
ANR	1972197	InfiniteForNode	true		1970655		True				
ANR	1972198	Symbol	precision		1970655						
ANR	1972199	Symbol	ht		1970655						
ANR	1972200	Symbol	* * argnum		1970655						
ANR	1972201	Symbol	TSRMLS_DC		1970655						
ANR	1972202	Symbol	argnum		1970655						
ANR	1972203	Symbol	* args		1970655						
ANR	1972204	Symbol	* * * args		1970655						
ANR	1972205	Symbol	zend_hash_get_current_data		1970655						
ANR	1972206	Symbol	* argnum		1970655						
ANR	1972207	Symbol	len		1970655						
ANR	1972208	Symbol	tmp		1970655						
ANR	1972209	Symbol	adjusting		1970655						
ANR	1972210	Symbol	* * * argnum		1970655						
ANR	1972211	Symbol	hexchars		1970655						
ANR	1972212	Symbol	format_len		1970655						
ANR	1972213	Symbol	ALIGN_RIGHT		1970655						
ANR	1972214	Symbol	* * args		1970655						
ANR	1972215	Symbol	isdigit		1970655						
ANR	1972216	Symbol	NULL		1970655						
ANR	1972217	Symbol	var		1970655						
ANR	1972218	Symbol	format		1970655						
ANR	1972219	Symbol	always_sign		1970655						
ANR	1972220	Symbol	& var_copy		1970655						
ANR	1972221	Symbol	ADJ_WIDTH		1970655						
ANR	1972222	Symbol	Z_STRLEN_PP		1970655						
ANR	1972223	Symbol	format_offset		1970655						
ANR	1972224	Symbol	size		1970655						
ANR	1972225	Symbol	* format		1970655						
ANR	1972226	Symbol	use_copy		1970655						
ANR	1972227	Symbol	* outpos		1970655						
ANR	1972228	Symbol	* * ( args [ argnum ] )		1970655						
ANR	1972229	Symbol	Z_ARRVAL_PP		1970655						
ANR	1972230	Symbol	& tmp		1970655						
ANR	1972231	Symbol	alignment		1970655						
ANR	1972232	Symbol	isalpha		1970655						
ANR	1972233	Symbol	* tmp		1970655						
ANR	1972234	Symbol	* ( args [ argnum ] )		1970655						
ANR	1972235	Symbol	z_format		1970655						
ANR	1972236	Symbol	expprec		1970655						
ANR	1972237	Symbol	ADJ_PRECISION		1970655						
ANR	1972238	Symbol	* inpos		1970655						
ANR	1972239	Symbol	& outpos		1970655						
ANR	1972240	Symbol	* temppos		1970655						
ANR	1972241	Symbol	* format_offset		1970655						
ANR	1972242	Symbol	use_array		1970655						
ANR	1972243	Symbol	currarg		1970655						
ANR	1972244	Symbol	result		1970655						
ANR	1972245	Symbol	emalloc		1970655						
ANR	1972246	Symbol	array		1970655						
ANR	1972247	Symbol	* result		1970655						
ANR	1972248	Symbol	multiuse		1970655						
ANR	1972249	Symbol	& inpos		1970655						
ANR	1972250	Symbol	& result		1970655						
ANR	1972251	Symbol	outpos		1970655						
ANR	1972252	Symbol	Z_STRVAL_PP		1970655						
ANR	1972253	Symbol	Z_STRLEN_P		1970655						
ANR	1972254	Symbol	ALIGN_LEFT		1970655						
ANR	1972255	Symbol	isascii		1970655						
ANR	1972256	Symbol	argc		1970655						
ANR	1972257	Symbol	temppos		1970655						
ANR	1972258	Symbol	padding		1970655						
ANR	1972259	Symbol	SUCCESS		1970655						
ANR	1972260	Symbol	zend_hash_num_elements		1970655						
ANR	1972261	Symbol	* newargs		1970655						
ANR	1972262	Symbol	i		1970655						
ANR	1972263	Symbol	& use_copy		1970655						
ANR	1972264	Symbol	& size		1970655						
ANR	1972265	Symbol	Z_STRVAL_P		1970655						
ANR	1972266	Symbol	Z_LVAL_P		1970655						
ANR	1972267	Symbol	args		1970655						
ANR	1972268	Symbol	inpos		1970655						
ANR	1972269	Symbol	var_copy		1970655						
ANR	1972270	Symbol	width		1970655						
ANR	1972271	Symbol	newargs		1970655						
ANR	1972272	Symbol	HEXCHARS		1970655						
ANR	1972273	Symbol	safe_emalloc		1970655						
ANR	1972274	Symbol	php_sprintf_getnumber		1970655						
ANR	1972275	Symbol	* len		1970655						
ANR	1972276	DeclStmt									
ANR	1972277	Decl							char	char *	result
ANR	1972278	DeclStmt									
ANR	1972279	Decl							int	int	len
ANR	1972280	DeclStmt									
ANR	1972281	Decl							char	char *	result
ANR	1972282	DeclStmt									
ANR	1972283	Decl							int	int	len
ANR	1972284	DeclStmt									
ANR	1972285	Decl							char	char *	result
ANR	1972286	DeclStmt									
ANR	1972287	Decl							int	int	len
ANR	1972288	Decl							int	int	rlen
ANR	1972289	DeclStmt									
ANR	1972290	Decl							char	char *	result
ANR	1972291	DeclStmt									
ANR	1972292	Decl							int	int	len
ANR	1972293	Decl							int	int	rlen
ANR	1972294	DeclStmt									
ANR	1972295	Decl							php_stream	php_stream *	stream
ANR	1972296	DeclStmt									
ANR	1972297	Decl							zval	zval *	arg1
ANR	1972298	DeclStmt									
ANR	1972299	Decl							char	char *	result
ANR	1972300	DeclStmt									
ANR	1972301	Decl							int	int	len
ANR	1972302	DeclStmt									
ANR	1972303	Decl							php_stream	php_stream *	stream
ANR	1972304	DeclStmt									
ANR	1972305	Decl							zval	zval *	arg1
ANR	1972306	DeclStmt									
ANR	1972307	Decl							char	char *	result
ANR	1972308	DeclStmt									
ANR	1972309	Decl							int	int	len
