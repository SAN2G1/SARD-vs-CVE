command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1949011	File	data/converged/CVE-2017-11142_php-src/ext_standard_crypt_sha512.c								
ANR	1949012	ClassDef	<unnamed>	16:38:418:447							
ANR	1949013	DeclStmt									
ANR	1949014	Decl							char	char	c
ANR	1949015	DeclStmt									
ANR	1949016	Decl							type	type	member
ANR	1949017	DeclStmt									
ANR	1949018	Decl							extern void	"extern void * ( void * dst , const void * src , size_t len )"	__php_mempcpy
ANR	1949019	DeclStmt									
ANR	1949020	Decl							extern char	"extern char * ( char * dst , const char * src , size_t len )"	__php_stpncpy
ANR	1949021	ClassDef	sha512_ctx	56:0:1251:1395							
ANR	1949022	DeclStmt									
ANR	1949023	Decl							uint64_t	uint64_t [ 8 ]	H
ANR	1949024	DeclStmt									
ANR	1949025	Decl							uint64_t	uint64_t [ 2 ]	total
ANR	1949026	DeclStmt									
ANR	1949027	Decl							uint64_t	uint64_t	buflen
ANR	1949028	DeclStmt									
ANR	1949029	Decl							char	char [ 256 ]	buffer
ANR	1949030	DeclStmt									
ANR	1949031	Decl							const unsigned char	const unsigned char [ 128 ]	fillbuf
ANR	1949032	DeclStmt									
ANR	1949033	Decl							const uint64_t	const uint64_t [ 80 ]	K
ANR	1949034	Function	sha512_process_block	131:0:4642:7147							
ANR	1949035	FunctionDef	"sha512_process_block (const void * buffer , size_t len , struct sha512_ctx * ctx)"		1949034	0					
ANR	1949036	CompoundStatement		132:77:4731:7147	1949034	0					
ANR	1949037	IdentifierDeclStatement	const uint64_t * words = buffer ;	133:1:4734:4764	1949034	0	True				
ANR	1949038	IdentifierDecl	* words = buffer		1949034	0					
ANR	1949039	IdentifierDeclType	const uint64_t *		1949034	0					
ANR	1949040	Identifier	words		1949034	1					
ANR	1949041	AssignmentExpression	* words = buffer		1949034	2		=			
ANR	1949042	Identifier	buffer		1949034	0					
ANR	1949043	Identifier	buffer		1949034	1					
ANR	1949044	IdentifierDeclStatement	size_t nwords = len / sizeof ( uint64_t ) ;	134:1:4767:4805	1949034	1	True				
ANR	1949045	IdentifierDecl	nwords = len / sizeof ( uint64_t )		1949034	0					
ANR	1949046	IdentifierDeclType	size_t		1949034	0					
ANR	1949047	Identifier	nwords		1949034	1					
ANR	1949048	AssignmentExpression	nwords = len / sizeof ( uint64_t )		1949034	2		=			
ANR	1949049	Identifier	nwords		1949034	0					
ANR	1949050	MultiplicativeExpression	len / sizeof ( uint64_t )		1949034	1		/			
ANR	1949051	Identifier	len		1949034	0					
ANR	1949052	SizeofExpression	sizeof ( uint64_t )		1949034	1					
ANR	1949053	Sizeof	sizeof		1949034	0					
ANR	1949054	SizeofOperand	uint64_t		1949034	1					
ANR	1949055	IdentifierDeclStatement	uint64_t a = ctx -> H [ 0 ] ;	135:1:4808:4830	1949034	2	True				
ANR	1949056	IdentifierDecl	a = ctx -> H [ 0 ]		1949034	0					
ANR	1949057	IdentifierDeclType	uint64_t		1949034	0					
ANR	1949058	Identifier	a		1949034	1					
ANR	1949059	AssignmentExpression	a = ctx -> H [ 0 ]		1949034	2		=			
ANR	1949060	Identifier	a		1949034	0					
ANR	1949061	ArrayIndexing	ctx -> H [ 0 ]		1949034	1					
ANR	1949062	PtrMemberAccess	ctx -> H		1949034	0					
ANR	1949063	Identifier	ctx		1949034	0					
ANR	1949064	Identifier	H		1949034	1					
ANR	1949065	PrimaryExpression	0		1949034	1					
ANR	1949066	IdentifierDeclStatement	uint64_t b = ctx -> H [ 1 ] ;	136:1:4833:4855	1949034	3	True				
ANR	1949067	IdentifierDecl	b = ctx -> H [ 1 ]		1949034	0					
ANR	1949068	IdentifierDeclType	uint64_t		1949034	0					
ANR	1949069	Identifier	b		1949034	1					
ANR	1949070	AssignmentExpression	b = ctx -> H [ 1 ]		1949034	2		=			
ANR	1949071	Identifier	b		1949034	0					
ANR	1949072	ArrayIndexing	ctx -> H [ 1 ]		1949034	1					
ANR	1949073	PtrMemberAccess	ctx -> H		1949034	0					
ANR	1949074	Identifier	ctx		1949034	0					
ANR	1949075	Identifier	H		1949034	1					
ANR	1949076	PrimaryExpression	1		1949034	1					
ANR	1949077	IdentifierDeclStatement	uint64_t c = ctx -> H [ 2 ] ;	137:1:4858:4880	1949034	4	True				
ANR	1949078	IdentifierDecl	c = ctx -> H [ 2 ]		1949034	0					
ANR	1949079	IdentifierDeclType	uint64_t		1949034	0					
ANR	1949080	Identifier	c		1949034	1					
ANR	1949081	AssignmentExpression	c = ctx -> H [ 2 ]		1949034	2		=			
ANR	1949082	Identifier	c		1949034	0					
ANR	1949083	ArrayIndexing	ctx -> H [ 2 ]		1949034	1					
ANR	1949084	PtrMemberAccess	ctx -> H		1949034	0					
ANR	1949085	Identifier	ctx		1949034	0					
ANR	1949086	Identifier	H		1949034	1					
ANR	1949087	PrimaryExpression	2		1949034	1					
ANR	1949088	IdentifierDeclStatement	uint64_t d = ctx -> H [ 3 ] ;	138:1:4883:4905	1949034	5	True				
ANR	1949089	IdentifierDecl	d = ctx -> H [ 3 ]		1949034	0					
ANR	1949090	IdentifierDeclType	uint64_t		1949034	0					
ANR	1949091	Identifier	d		1949034	1					
ANR	1949092	AssignmentExpression	d = ctx -> H [ 3 ]		1949034	2		=			
ANR	1949093	Identifier	d		1949034	0					
ANR	1949094	ArrayIndexing	ctx -> H [ 3 ]		1949034	1					
ANR	1949095	PtrMemberAccess	ctx -> H		1949034	0					
ANR	1949096	Identifier	ctx		1949034	0					
ANR	1949097	Identifier	H		1949034	1					
ANR	1949098	PrimaryExpression	3		1949034	1					
ANR	1949099	IdentifierDeclStatement	uint64_t e = ctx -> H [ 4 ] ;	139:1:4908:4930	1949034	6	True				
ANR	1949100	IdentifierDecl	e = ctx -> H [ 4 ]		1949034	0					
ANR	1949101	IdentifierDeclType	uint64_t		1949034	0					
ANR	1949102	Identifier	e		1949034	1					
ANR	1949103	AssignmentExpression	e = ctx -> H [ 4 ]		1949034	2		=			
ANR	1949104	Identifier	e		1949034	0					
ANR	1949105	ArrayIndexing	ctx -> H [ 4 ]		1949034	1					
ANR	1949106	PtrMemberAccess	ctx -> H		1949034	0					
ANR	1949107	Identifier	ctx		1949034	0					
ANR	1949108	Identifier	H		1949034	1					
ANR	1949109	PrimaryExpression	4		1949034	1					
ANR	1949110	IdentifierDeclStatement	uint64_t f = ctx -> H [ 5 ] ;	140:1:4933:4955	1949034	7	True				
ANR	1949111	IdentifierDecl	f = ctx -> H [ 5 ]		1949034	0					
ANR	1949112	IdentifierDeclType	uint64_t		1949034	0					
ANR	1949113	Identifier	f		1949034	1					
ANR	1949114	AssignmentExpression	f = ctx -> H [ 5 ]		1949034	2		=			
ANR	1949115	Identifier	f		1949034	0					
ANR	1949116	ArrayIndexing	ctx -> H [ 5 ]		1949034	1					
ANR	1949117	PtrMemberAccess	ctx -> H		1949034	0					
ANR	1949118	Identifier	ctx		1949034	0					
ANR	1949119	Identifier	H		1949034	1					
ANR	1949120	PrimaryExpression	5		1949034	1					
ANR	1949121	IdentifierDeclStatement	uint64_t g = ctx -> H [ 6 ] ;	141:1:4958:4980	1949034	8	True				
ANR	1949122	IdentifierDecl	g = ctx -> H [ 6 ]		1949034	0					
ANR	1949123	IdentifierDeclType	uint64_t		1949034	0					
ANR	1949124	Identifier	g		1949034	1					
ANR	1949125	AssignmentExpression	g = ctx -> H [ 6 ]		1949034	2		=			
ANR	1949126	Identifier	g		1949034	0					
ANR	1949127	ArrayIndexing	ctx -> H [ 6 ]		1949034	1					
ANR	1949128	PtrMemberAccess	ctx -> H		1949034	0					
ANR	1949129	Identifier	ctx		1949034	0					
ANR	1949130	Identifier	H		1949034	1					
ANR	1949131	PrimaryExpression	6		1949034	1					
ANR	1949132	IdentifierDeclStatement	uint64_t h = ctx -> H [ 7 ] ;	142:1:4983:5005	1949034	9	True				
ANR	1949133	IdentifierDecl	h = ctx -> H [ 7 ]		1949034	0					
ANR	1949134	IdentifierDeclType	uint64_t		1949034	0					
ANR	1949135	Identifier	h		1949034	1					
ANR	1949136	AssignmentExpression	h = ctx -> H [ 7 ]		1949034	2		=			
ANR	1949137	Identifier	h		1949034	0					
ANR	1949138	ArrayIndexing	ctx -> H [ 7 ]		1949034	1					
ANR	1949139	PtrMemberAccess	ctx -> H		1949034	0					
ANR	1949140	Identifier	ctx		1949034	0					
ANR	1949141	Identifier	H		1949034	1					
ANR	1949142	PrimaryExpression	7		1949034	1					
ANR	1949143	ExpressionStatement	ctx -> total [ 0 ] += len	147:1:5198:5218	1949034	10	True				
ANR	1949144	AssignmentExpression	ctx -> total [ 0 ] += len		1949034	0		+=			
ANR	1949145	ArrayIndexing	ctx -> total [ 0 ]		1949034	0					
ANR	1949146	PtrMemberAccess	ctx -> total		1949034	0					
ANR	1949147	Identifier	ctx		1949034	0					
ANR	1949148	Identifier	total		1949034	1					
ANR	1949149	PrimaryExpression	0		1949034	1					
ANR	1949150	Identifier	len		1949034	1					
ANR	1949151	IfStatement	if ( ctx -> total [ 0 ] < len )		1949034	11					
ANR	1949152	Condition	ctx -> total [ 0 ] < len	148:5:5225:5243	1949034	0	True				
ANR	1949153	RelationalExpression	ctx -> total [ 0 ] < len		1949034	0		<			
ANR	1949154	ArrayIndexing	ctx -> total [ 0 ]		1949034	0					
ANR	1949155	PtrMemberAccess	ctx -> total		1949034	0					
ANR	1949156	Identifier	ctx		1949034	0					
ANR	1949157	Identifier	total		1949034	1					
ANR	1949158	PrimaryExpression	0		1949034	1					
ANR	1949159	Identifier	len		1949034	1					
ANR	1949160	CompoundStatement		17:26:514:514	1949034	1					
ANR	1949161	ExpressionStatement	++ ctx -> total [ 1 ]	149:2:5250:5265	1949034	0	True				
ANR	1949162	UnaryExpression	++ ctx -> total [ 1 ]		1949034	0					
ANR	1949163	IncDec	++		1949034	0					
ANR	1949164	ArrayIndexing	ctx -> total [ 1 ]		1949034	1					
ANR	1949165	PtrMemberAccess	ctx -> total		1949034	0					
ANR	1949166	Identifier	ctx		1949034	0					
ANR	1949167	Identifier	total		1949034	1					
ANR	1949168	PrimaryExpression	1		1949034	1					
ANR	1949169	WhileStatement	while ( nwords > 0 )		1949034	12					
ANR	1949170	Condition	nwords > 0	154:8:5363:5372	1949034	0	True				
ANR	1949171	RelationalExpression	nwords > 0		1949034	0		>			
ANR	1949172	Identifier	nwords		1949034	0					
ANR	1949173	PrimaryExpression	0		1949034	1					
ANR	1949174	CompoundStatement		33:2:849:863	1949034	1					
ANR	1949175	IdentifierDeclStatement	uint64_t W [ 80 ] ;	155:2:5379:5393	1949034	0	True				
ANR	1949176	IdentifierDecl	W [ 80 ]		1949034	0					
ANR	1949177	IdentifierDeclType	uint64_t [ 80 ]		1949034	0					
ANR	1949178	Identifier	W		1949034	1					
ANR	1949179	PrimaryExpression	80		1949034	2					
ANR	1949180	IdentifierDeclStatement	uint64_t a_save = a ;	156:2:5397:5416	1949034	1	True				
ANR	1949181	IdentifierDecl	a_save = a		1949034	0					
ANR	1949182	IdentifierDeclType	uint64_t		1949034	0					
ANR	1949183	Identifier	a_save		1949034	1					
ANR	1949184	AssignmentExpression	a_save = a		1949034	2		=			
ANR	1949185	Identifier	a		1949034	0					
ANR	1949186	Identifier	a		1949034	1					
ANR	1949187	IdentifierDeclStatement	uint64_t b_save = b ;	157:2:5420:5439	1949034	2	True				
ANR	1949188	IdentifierDecl	b_save = b		1949034	0					
ANR	1949189	IdentifierDeclType	uint64_t		1949034	0					
ANR	1949190	Identifier	b_save		1949034	1					
ANR	1949191	AssignmentExpression	b_save = b		1949034	2		=			
ANR	1949192	Identifier	b		1949034	0					
ANR	1949193	Identifier	b		1949034	1					
ANR	1949194	IdentifierDeclStatement	uint64_t c_save = c ;	158:2:5443:5462	1949034	3	True				
ANR	1949195	IdentifierDecl	c_save = c		1949034	0					
ANR	1949196	IdentifierDeclType	uint64_t		1949034	0					
ANR	1949197	Identifier	c_save		1949034	1					
ANR	1949198	AssignmentExpression	c_save = c		1949034	2		=			
ANR	1949199	Identifier	c		1949034	0					
ANR	1949200	Identifier	c		1949034	1					
ANR	1949201	IdentifierDeclStatement	uint64_t d_save = d ;	159:2:5466:5485	1949034	4	True				
ANR	1949202	IdentifierDecl	d_save = d		1949034	0					
ANR	1949203	IdentifierDeclType	uint64_t		1949034	0					
ANR	1949204	Identifier	d_save		1949034	1					
ANR	1949205	AssignmentExpression	d_save = d		1949034	2		=			
ANR	1949206	Identifier	d		1949034	0					
ANR	1949207	Identifier	d		1949034	1					
ANR	1949208	IdentifierDeclStatement	uint64_t e_save = e ;	160:2:5489:5508	1949034	5	True				
ANR	1949209	IdentifierDecl	e_save = e		1949034	0					
ANR	1949210	IdentifierDeclType	uint64_t		1949034	0					
ANR	1949211	Identifier	e_save		1949034	1					
ANR	1949212	AssignmentExpression	e_save = e		1949034	2		=			
ANR	1949213	Identifier	e		1949034	0					
ANR	1949214	Identifier	e		1949034	1					
ANR	1949215	IdentifierDeclStatement	uint64_t f_save = f ;	161:2:5512:5531	1949034	6	True				
ANR	1949216	IdentifierDecl	f_save = f		1949034	0					
ANR	1949217	IdentifierDeclType	uint64_t		1949034	0					
ANR	1949218	Identifier	f_save		1949034	1					
ANR	1949219	AssignmentExpression	f_save = f		1949034	2		=			
ANR	1949220	Identifier	f		1949034	0					
ANR	1949221	Identifier	f		1949034	1					
ANR	1949222	IdentifierDeclStatement	uint64_t g_save = g ;	162:2:5535:5554	1949034	7	True				
ANR	1949223	IdentifierDecl	g_save = g		1949034	0					
ANR	1949224	IdentifierDeclType	uint64_t		1949034	0					
ANR	1949225	Identifier	g_save		1949034	1					
ANR	1949226	AssignmentExpression	g_save = g		1949034	2		=			
ANR	1949227	Identifier	g		1949034	0					
ANR	1949228	Identifier	g		1949034	1					
ANR	1949229	IdentifierDeclStatement	uint64_t h_save = h ;	163:2:5558:5577	1949034	8	True				
ANR	1949230	IdentifierDecl	h_save = h		1949034	0					
ANR	1949231	IdentifierDeclType	uint64_t		1949034	0					
ANR	1949232	Identifier	h_save		1949034	1					
ANR	1949233	AssignmentExpression	h_save = h		1949034	2		=			
ANR	1949234	Identifier	h		1949034	0					
ANR	1949235	Identifier	h		1949034	1					
ANR	1949236	IdentifierDeclStatement	unsigned int t ;	164:2:5581:5595	1949034	9	True				
ANR	1949237	IdentifierDecl	t		1949034	0					
ANR	1949238	IdentifierDeclType	unsigned int		1949034	0					
ANR	1949239	Identifier	t		1949034	1					
ANR	1949240	Statement	define	167:1:5645:5650	1949034	10	True				
ANR	1949241	Statement	Ch	167:8:5652:5653	1949034	11	True				
ANR	1949242	Statement	(	167:10:5654:5654	1949034	12	True				
ANR	1949243	Statement	x	167:11:5655:5655	1949034	13	True				
ANR	1949244	Statement	","	167:12:5656:5656	1949034	14	True				
ANR	1949245	Statement	y	167:14:5658:5658	1949034	15	True				
ANR	1949246	Statement	","	167:15:5659:5659	1949034	16	True				
ANR	1949247	Statement	z	167:17:5661:5661	1949034	17	True				
ANR	1949248	Statement	)	167:18:5662:5662	1949034	18	True				
ANR	1949249	Statement	(	167:20:5664:5664	1949034	19	True				
ANR	1949250	Statement	(	167:21:5665:5665	1949034	20	True				
ANR	1949251	Statement	x	167:22:5666:5666	1949034	21	True				
ANR	1949252	Statement	&	167:24:5668:5668	1949034	22	True				
ANR	1949253	Statement	y	167:26:5670:5670	1949034	23	True				
ANR	1949254	Statement	)	167:27:5671:5671	1949034	24	True				
ANR	1949255	Statement	^	167:29:5673:5673	1949034	25	True				
ANR	1949256	Statement	(	167:31:5675:5675	1949034	26	True				
ANR	1949257	Statement	~x	167:32:5676:5677	1949034	27	True				
ANR	1949258	Statement	&	167:35:5679:5679	1949034	28	True				
ANR	1949259	Statement	z	167:37:5681:5681	1949034	29	True				
ANR	1949260	Statement	)	167:38:5682:5682	1949034	30	True				
ANR	1949261	Statement	)	167:39:5683:5683	1949034	31	True				
ANR	1949262	Statement	define	168:1:5686:5691	1949034	32	True				
ANR	1949263	Statement	Maj	168:8:5693:5695	1949034	33	True				
ANR	1949264	Statement	(	168:11:5696:5696	1949034	34	True				
ANR	1949265	Statement	x	168:12:5697:5697	1949034	35	True				
ANR	1949266	Statement	","	168:13:5698:5698	1949034	36	True				
ANR	1949267	Statement	y	168:15:5700:5700	1949034	37	True				
ANR	1949268	Statement	","	168:16:5701:5701	1949034	38	True				
ANR	1949269	Statement	z	168:18:5703:5703	1949034	39	True				
ANR	1949270	Statement	)	168:19:5704:5704	1949034	40	True				
ANR	1949271	Statement	(	168:21:5706:5706	1949034	41	True				
ANR	1949272	Statement	(	168:22:5707:5707	1949034	42	True				
ANR	1949273	Statement	x	168:23:5708:5708	1949034	43	True				
ANR	1949274	Statement	&	168:25:5710:5710	1949034	44	True				
ANR	1949275	Statement	y	168:27:5712:5712	1949034	45	True				
ANR	1949276	Statement	)	168:28:5713:5713	1949034	46	True				
ANR	1949277	Statement	^	168:30:5715:5715	1949034	47	True				
ANR	1949278	Statement	(	168:32:5717:5717	1949034	48	True				
ANR	1949279	Statement	x	168:33:5718:5718	1949034	49	True				
ANR	1949280	Statement	&	168:35:5720:5720	1949034	50	True				
ANR	1949281	Statement	z	168:37:5722:5722	1949034	51	True				
ANR	1949282	Statement	)	168:38:5723:5723	1949034	52	True				
ANR	1949283	Statement	^	168:40:5725:5725	1949034	53	True				
ANR	1949284	Statement	(	168:42:5727:5727	1949034	54	True				
ANR	1949285	Statement	y	168:43:5728:5728	1949034	55	True				
ANR	1949286	Statement	&	168:45:5730:5730	1949034	56	True				
ANR	1949287	Statement	z	168:47:5732:5732	1949034	57	True				
ANR	1949288	Statement	)	168:48:5733:5733	1949034	58	True				
ANR	1949289	Statement	)	168:49:5734:5734	1949034	59	True				
ANR	1949290	Statement	define	169:1:5737:5742	1949034	60	True				
ANR	1949291	Statement	S0	169:8:5744:5745	1949034	61	True				
ANR	1949292	Statement	(	169:10:5746:5746	1949034	62	True				
ANR	1949293	Statement	x	169:11:5747:5747	1949034	63	True				
ANR	1949294	Statement	)	169:12:5748:5748	1949034	64	True				
ANR	1949295	Statement	(	169:14:5750:5750	1949034	65	True				
ANR	1949296	Statement	CYCLIC	169:15:5751:5756	1949034	66	True				
ANR	1949297	Statement	(	169:22:5758:5758	1949034	67	True				
ANR	1949298	Statement	x	169:23:5759:5759	1949034	68	True				
ANR	1949299	Statement	","	169:24:5760:5760	1949034	69	True				
ANR	1949300	Statement	28	169:26:5762:5763	1949034	70	True				
ANR	1949301	Statement	)	169:28:5764:5764	1949034	71	True				
ANR	1949302	Statement	^	169:30:5766:5766	1949034	72	True				
ANR	1949303	Statement	CYCLIC	169:32:5768:5773	1949034	73	True				
ANR	1949304	Statement	(	169:39:5775:5775	1949034	74	True				
ANR	1949305	Statement	x	169:40:5776:5776	1949034	75	True				
ANR	1949306	Statement	","	169:41:5777:5777	1949034	76	True				
ANR	1949307	Statement	34	169:43:5779:5780	1949034	77	True				
ANR	1949308	Statement	)	169:45:5781:5781	1949034	78	True				
ANR	1949309	Statement	^	169:47:5783:5783	1949034	79	True				
ANR	1949310	Statement	CYCLIC	169:49:5785:5790	1949034	80	True				
ANR	1949311	Statement	(	169:56:5792:5792	1949034	81	True				
ANR	1949312	Statement	x	169:57:5793:5793	1949034	82	True				
ANR	1949313	Statement	","	169:58:5794:5794	1949034	83	True				
ANR	1949314	Statement	39	169:60:5796:5797	1949034	84	True				
ANR	1949315	Statement	)	169:62:5798:5798	1949034	85	True				
ANR	1949316	Statement	)	169:63:5799:5799	1949034	86	True				
ANR	1949317	Statement	define	170:1:5802:5807	1949034	87	True				
ANR	1949318	Statement	S1	170:8:5809:5810	1949034	88	True				
ANR	1949319	Statement	(	170:10:5811:5811	1949034	89	True				
ANR	1949320	Statement	x	170:11:5812:5812	1949034	90	True				
ANR	1949321	Statement	)	170:12:5813:5813	1949034	91	True				
ANR	1949322	Statement	(	170:14:5815:5815	1949034	92	True				
ANR	1949323	Statement	CYCLIC	170:15:5816:5821	1949034	93	True				
ANR	1949324	Statement	(	170:22:5823:5823	1949034	94	True				
ANR	1949325	Statement	x	170:23:5824:5824	1949034	95	True				
ANR	1949326	Statement	","	170:24:5825:5825	1949034	96	True				
ANR	1949327	Statement	14	170:26:5827:5828	1949034	97	True				
ANR	1949328	Statement	)	170:28:5829:5829	1949034	98	True				
ANR	1949329	Statement	^	170:30:5831:5831	1949034	99	True				
ANR	1949330	Statement	CYCLIC	170:32:5833:5838	1949034	100	True				
ANR	1949331	Statement	(	170:39:5840:5840	1949034	101	True				
ANR	1949332	Statement	x	170:40:5841:5841	1949034	102	True				
ANR	1949333	Statement	","	170:41:5842:5842	1949034	103	True				
ANR	1949334	Statement	18	170:43:5844:5845	1949034	104	True				
ANR	1949335	Statement	)	170:45:5846:5846	1949034	105	True				
ANR	1949336	Statement	^	170:47:5848:5848	1949034	106	True				
ANR	1949337	Statement	CYCLIC	170:49:5850:5855	1949034	107	True				
ANR	1949338	Statement	(	170:56:5857:5857	1949034	108	True				
ANR	1949339	Statement	x	170:57:5858:5858	1949034	109	True				
ANR	1949340	Statement	","	170:58:5859:5859	1949034	110	True				
ANR	1949341	Statement	41	170:60:5861:5862	1949034	111	True				
ANR	1949342	Statement	)	170:62:5863:5863	1949034	112	True				
ANR	1949343	Statement	)	170:63:5864:5864	1949034	113	True				
ANR	1949344	Statement	define	171:1:5867:5872	1949034	114	True				
ANR	1949345	Statement	R0	171:8:5874:5875	1949034	115	True				
ANR	1949346	Statement	(	171:10:5876:5876	1949034	116	True				
ANR	1949347	Statement	x	171:11:5877:5877	1949034	117	True				
ANR	1949348	Statement	)	171:12:5878:5878	1949034	118	True				
ANR	1949349	Statement	(	171:14:5880:5880	1949034	119	True				
ANR	1949350	Statement	CYCLIC	171:15:5881:5886	1949034	120	True				
ANR	1949351	Statement	(	171:22:5888:5888	1949034	121	True				
ANR	1949352	Statement	x	171:23:5889:5889	1949034	122	True				
ANR	1949353	Statement	","	171:24:5890:5890	1949034	123	True				
ANR	1949354	Statement	1	171:26:5892:5892	1949034	124	True				
ANR	1949355	Statement	)	171:27:5893:5893	1949034	125	True				
ANR	1949356	Statement	^	171:29:5895:5895	1949034	126	True				
ANR	1949357	Statement	CYCLIC	171:31:5897:5902	1949034	127	True				
ANR	1949358	Statement	(	171:38:5904:5904	1949034	128	True				
ANR	1949359	Statement	x	171:39:5905:5905	1949034	129	True				
ANR	1949360	Statement	","	171:40:5906:5906	1949034	130	True				
ANR	1949361	Statement	8	171:42:5908:5908	1949034	131	True				
ANR	1949362	Statement	)	171:43:5909:5909	1949034	132	True				
ANR	1949363	Statement	^	171:45:5911:5911	1949034	133	True				
ANR	1949364	Statement	(	171:47:5913:5913	1949034	134	True				
ANR	1949365	Statement	x	171:48:5914:5914	1949034	135	True				
ANR	1949366	Statement	>>	171:50:5916:5917	1949034	136	True				
ANR	1949367	Statement	7	171:53:5919:5919	1949034	137	True				
ANR	1949368	Statement	)	171:54:5920:5920	1949034	138	True				
ANR	1949369	Statement	)	171:55:5921:5921	1949034	139	True				
ANR	1949370	Statement	define	172:1:5924:5929	1949034	140	True				
ANR	1949371	Statement	R1	172:8:5931:5932	1949034	141	True				
ANR	1949372	Statement	(	172:10:5933:5933	1949034	142	True				
ANR	1949373	Statement	x	172:11:5934:5934	1949034	143	True				
ANR	1949374	Statement	)	172:12:5935:5935	1949034	144	True				
ANR	1949375	Statement	(	172:14:5937:5937	1949034	145	True				
ANR	1949376	Statement	CYCLIC	172:15:5938:5943	1949034	146	True				
ANR	1949377	Statement	(	172:22:5945:5945	1949034	147	True				
ANR	1949378	Statement	x	172:23:5946:5946	1949034	148	True				
ANR	1949379	Statement	","	172:24:5947:5947	1949034	149	True				
ANR	1949380	Statement	19	172:26:5949:5950	1949034	150	True				
ANR	1949381	Statement	)	172:28:5951:5951	1949034	151	True				
ANR	1949382	Statement	^	172:30:5953:5953	1949034	152	True				
ANR	1949383	Statement	CYCLIC	172:32:5955:5960	1949034	153	True				
ANR	1949384	Statement	(	172:39:5962:5962	1949034	154	True				
ANR	1949385	Statement	x	172:40:5963:5963	1949034	155	True				
ANR	1949386	Statement	","	172:41:5964:5964	1949034	156	True				
ANR	1949387	Statement	61	172:43:5966:5967	1949034	157	True				
ANR	1949388	Statement	)	172:45:5968:5968	1949034	158	True				
ANR	1949389	Statement	^	172:47:5970:5970	1949034	159	True				
ANR	1949390	Statement	(	172:49:5972:5972	1949034	160	True				
ANR	1949391	Statement	x	172:50:5973:5973	1949034	161	True				
ANR	1949392	Statement	>>	172:52:5975:5976	1949034	162	True				
ANR	1949393	Statement	6	172:55:5978:5978	1949034	163	True				
ANR	1949394	Statement	)	172:56:5979:5979	1949034	164	True				
ANR	1949395	Statement	)	172:57:5980:5980	1949034	165	True				
ANR	1949396	Statement	define	176:1:6111:6116	1949034	166	True				
ANR	1949397	Statement	CYCLIC	176:8:6118:6123	1949034	167	True				
ANR	1949398	Statement	(	176:14:6124:6124	1949034	168	True				
ANR	1949399	Statement	w	176:15:6125:6125	1949034	169	True				
ANR	1949400	Statement	","	176:16:6126:6126	1949034	170	True				
ANR	1949401	Statement	s	176:18:6128:6128	1949034	171	True				
ANR	1949402	Statement	)	176:19:6129:6129	1949034	172	True				
ANR	1949403	Statement	(	176:21:6131:6131	1949034	173	True				
ANR	1949404	Statement	(	176:22:6132:6132	1949034	174	True				
ANR	1949405	Statement	w	176:23:6133:6133	1949034	175	True				
ANR	1949406	Statement	>>	176:25:6135:6136	1949034	176	True				
ANR	1949407	Statement	s	176:28:6138:6138	1949034	177	True				
ANR	1949408	Statement	)	176:29:6139:6139	1949034	178	True				
ANR	1949409	Statement	|	176:31:6141:6141	1949034	179	True				
ANR	1949410	Statement	(	176:33:6143:6143	1949034	180	True				
ANR	1949411	Statement	w	176:34:6144:6144	1949034	181	True				
ANR	1949412	Statement	<<	176:36:6146:6147	1949034	182	True				
ANR	1949413	Statement	(	176:39:6149:6149	1949034	183	True				
ANR	1949414	Statement	64	176:40:6150:6151	1949034	184	True				
ANR	1949415	Statement	-	176:43:6153:6153	1949034	185	True				
ANR	1949416	Statement	s	176:45:6155:6155	1949034	186	True				
ANR	1949417	Statement	)	176:46:6156:6156	1949034	187	True				
ANR	1949418	Statement	)	176:47:6157:6157	1949034	188	True				
ANR	1949419	Statement	)	176:48:6158:6158	1949034	189	True				
ANR	1949420	ForStatement	for ( t = 0 ; t < 16 ; ++ t )		1949034	190					
ANR	1949421	ForInit	t = 0 ;	179:7:6244:6249	1949034	0	True				
ANR	1949422	AssignmentExpression	t = 0		1949034	0		=			
ANR	1949423	Identifier	t		1949034	0					
ANR	1949424	PrimaryExpression	0		1949034	1					
ANR	1949425	Condition	t < 16	179:14:6251:6256	1949034	1	True				
ANR	1949426	RelationalExpression	t < 16		1949034	0		<			
ANR	1949427	Identifier	t		1949034	0					
ANR	1949428	PrimaryExpression	16		1949034	1					
ANR	1949429	UnaryExpression	++ t	179:22:6259:6261	1949034	2	True				
ANR	1949430	IncDec	++		1949034	0					
ANR	1949431	Identifier	t		1949034	1					
ANR	1949432	CompoundStatement		48:27:1532:1532	1949034	3					
ANR	1949433	ExpressionStatement	W [ t ] = SWAP ( * words )	180:3:6269:6289	1949034	0	True				
ANR	1949434	AssignmentExpression	W [ t ] = SWAP ( * words )		1949034	0		=			
ANR	1949435	ArrayIndexing	W [ t ]		1949034	0					
ANR	1949436	Identifier	W		1949034	0					
ANR	1949437	Identifier	t		1949034	1					
ANR	1949438	CallExpression	SWAP ( * words )		1949034	1					
ANR	1949439	Callee	SWAP		1949034	0					
ANR	1949440	Identifier	SWAP		1949034	0					
ANR	1949441	ArgumentList	* words		1949034	1					
ANR	1949442	Argument	* words		1949034	0					
ANR	1949443	UnaryOperationExpression	* words		1949034	0					
ANR	1949444	UnaryOperator	*		1949034	0					
ANR	1949445	Identifier	words		1949034	1					
ANR	1949446	ExpressionStatement	++ words	181:3:6294:6301	1949034	1	True				
ANR	1949447	UnaryExpression	++ words		1949034	0					
ANR	1949448	IncDec	++		1949034	0					
ANR	1949449	Identifier	words		1949034	1					
ANR	1949450	ForStatement	for ( t = 16 ; t < 80 ; ++ t )		1949034	191					
ANR	1949451	ForInit	t = 16 ;	184:7:6315:6321	1949034	0	True				
ANR	1949452	AssignmentExpression	t = 16		1949034	0		=			
ANR	1949453	Identifier	t		1949034	0					
ANR	1949454	PrimaryExpression	16		1949034	1					
ANR	1949455	Condition	t < 80	184:15:6323:6328	1949034	1	True				
ANR	1949456	RelationalExpression	t < 80		1949034	0		<			
ANR	1949457	Identifier	t		1949034	0					
ANR	1949458	PrimaryExpression	80		1949034	1					
ANR	1949459	UnaryExpression	++ t	184:23:6331:6333	1949034	2	True				
ANR	1949460	IncDec	++		1949034	0					
ANR	1949461	Identifier	t		1949034	1					
ANR	1949462	CompoundStatement		53:28:1604:1604	1949034	3					
ANR	1949463	ExpressionStatement	W [ t ] = R1 ( W [ t - 2 ] ) + W [ t - 7 ] + R0 ( W [ t - 15 ] ) + W [ t - 16 ]	185:3:6341:6401	1949034	0	True				
ANR	1949464	AssignmentExpression	W [ t ] = R1 ( W [ t - 2 ] ) + W [ t - 7 ] + R0 ( W [ t - 15 ] ) + W [ t - 16 ]		1949034	0		=			
ANR	1949465	ArrayIndexing	W [ t ]		1949034	0					
ANR	1949466	Identifier	W		1949034	0					
ANR	1949467	Identifier	t		1949034	1					
ANR	1949468	AdditiveExpression	R1 ( W [ t - 2 ] ) + W [ t - 7 ] + R0 ( W [ t - 15 ] ) + W [ t - 16 ]		1949034	1		+			
ANR	1949469	CallExpression	R1 ( W [ t - 2 ] )		1949034	0					
ANR	1949470	Callee	R1		1949034	0					
ANR	1949471	Identifier	R1		1949034	0					
ANR	1949472	ArgumentList	W [ t - 2 ]		1949034	1					
ANR	1949473	Argument	W [ t - 2 ]		1949034	0					
ANR	1949474	ArrayIndexing	W [ t - 2 ]		1949034	0					
ANR	1949475	Identifier	W		1949034	0					
ANR	1949476	AdditiveExpression	t - 2		1949034	1		-			
ANR	1949477	Identifier	t		1949034	0					
ANR	1949478	PrimaryExpression	2		1949034	1					
ANR	1949479	AdditiveExpression	W [ t - 7 ] + R0 ( W [ t - 15 ] ) + W [ t - 16 ]		1949034	1		+			
ANR	1949480	ArrayIndexing	W [ t - 7 ]		1949034	0					
ANR	1949481	Identifier	W		1949034	0					
ANR	1949482	AdditiveExpression	t - 7		1949034	1		-			
ANR	1949483	Identifier	t		1949034	0					
ANR	1949484	PrimaryExpression	7		1949034	1					
ANR	1949485	AdditiveExpression	R0 ( W [ t - 15 ] ) + W [ t - 16 ]		1949034	1		+			
ANR	1949486	CallExpression	R0 ( W [ t - 15 ] )		1949034	0					
ANR	1949487	Callee	R0		1949034	0					
ANR	1949488	Identifier	R0		1949034	0					
ANR	1949489	ArgumentList	W [ t - 15 ]		1949034	1					
ANR	1949490	Argument	W [ t - 15 ]		1949034	0					
ANR	1949491	ArrayIndexing	W [ t - 15 ]		1949034	0					
ANR	1949492	Identifier	W		1949034	0					
ANR	1949493	AdditiveExpression	t - 15		1949034	1		-			
ANR	1949494	Identifier	t		1949034	0					
ANR	1949495	PrimaryExpression	15		1949034	1					
ANR	1949496	ArrayIndexing	W [ t - 16 ]		1949034	1					
ANR	1949497	Identifier	W		1949034	0					
ANR	1949498	AdditiveExpression	t - 16		1949034	1		-			
ANR	1949499	Identifier	t		1949034	0					
ANR	1949500	PrimaryExpression	16		1949034	1					
ANR	1949501	ForStatement	for ( t = 0 ; t < 80 ; ++ t )		1949034	192					
ANR	1949502	ForInit	t = 0 ;	189:7:6485:6490	1949034	0	True				
ANR	1949503	AssignmentExpression	t = 0		1949034	0		=			
ANR	1949504	Identifier	t		1949034	0					
ANR	1949505	PrimaryExpression	0		1949034	1					
ANR	1949506	Condition	t < 80	189:14:6492:6497	1949034	1	True				
ANR	1949507	RelationalExpression	t < 80		1949034	0		<			
ANR	1949508	Identifier	t		1949034	0					
ANR	1949509	PrimaryExpression	80		1949034	1					
ANR	1949510	UnaryExpression	++ t	189:22:6500:6502	1949034	2	True				
ANR	1949511	IncDec	++		1949034	0					
ANR	1949512	Identifier	t		1949034	1					
ANR	1949513	CompoundStatement		60:3:1836:1872	1949034	3					
ANR	1949514	IdentifierDeclStatement	"uint64_t T1 = h + S1 ( e ) + Ch ( e , f , g ) + K [ t ] + W [ t ] ;"	190:3:6510:6563	1949034	0	True				
ANR	1949515	IdentifierDecl	"T1 = h + S1 ( e ) + Ch ( e , f , g ) + K [ t ] + W [ t ]"		1949034	0					
ANR	1949516	IdentifierDeclType	uint64_t		1949034	0					
ANR	1949517	Identifier	T1		1949034	1					
ANR	1949518	AssignmentExpression	"T1 = h + S1 ( e ) + Ch ( e , f , g ) + K [ t ] + W [ t ]"		1949034	2		=			
ANR	1949519	Identifier	T1		1949034	0					
ANR	1949520	AdditiveExpression	"h + S1 ( e ) + Ch ( e , f , g ) + K [ t ] + W [ t ]"		1949034	1		+			
ANR	1949521	Identifier	h		1949034	0					
ANR	1949522	AdditiveExpression	"S1 ( e ) + Ch ( e , f , g ) + K [ t ] + W [ t ]"		1949034	1		+			
ANR	1949523	CallExpression	S1 ( e )		1949034	0					
ANR	1949524	Callee	S1		1949034	0					
ANR	1949525	Identifier	S1		1949034	0					
ANR	1949526	ArgumentList	e		1949034	1					
ANR	1949527	Argument	e		1949034	0					
ANR	1949528	Identifier	e		1949034	0					
ANR	1949529	AdditiveExpression	"Ch ( e , f , g ) + K [ t ] + W [ t ]"		1949034	1		+			
ANR	1949530	CallExpression	"Ch ( e , f , g )"		1949034	0					
ANR	1949531	Callee	Ch		1949034	0					
ANR	1949532	Identifier	Ch		1949034	0					
ANR	1949533	ArgumentList	e		1949034	1					
ANR	1949534	Argument	e		1949034	0					
ANR	1949535	Identifier	e		1949034	0					
ANR	1949536	Argument	f		1949034	1					
ANR	1949537	Identifier	f		1949034	0					
ANR	1949538	Argument	g		1949034	2					
ANR	1949539	Identifier	g		1949034	0					
ANR	1949540	AdditiveExpression	K [ t ] + W [ t ]		1949034	1		+			
ANR	1949541	ArrayIndexing	K [ t ]		1949034	0					
ANR	1949542	Identifier	K		1949034	0					
ANR	1949543	Identifier	t		1949034	1					
ANR	1949544	ArrayIndexing	W [ t ]		1949034	1					
ANR	1949545	Identifier	W		1949034	0					
ANR	1949546	Identifier	t		1949034	1					
ANR	1949547	IdentifierDeclStatement	"uint64_t T2 = S0 ( a ) + Maj ( a , b , c ) ;"	191:3:6568:6604	1949034	1	True				
ANR	1949548	IdentifierDecl	"T2 = S0 ( a ) + Maj ( a , b , c )"		1949034	0					
ANR	1949549	IdentifierDeclType	uint64_t		1949034	0					
ANR	1949550	Identifier	T2		1949034	1					
ANR	1949551	AssignmentExpression	"T2 = S0 ( a ) + Maj ( a , b , c )"		1949034	2		=			
ANR	1949552	Identifier	T2		1949034	0					
ANR	1949553	AdditiveExpression	"S0 ( a ) + Maj ( a , b , c )"		1949034	1		+			
ANR	1949554	CallExpression	S0 ( a )		1949034	0					
ANR	1949555	Callee	S0		1949034	0					
ANR	1949556	Identifier	S0		1949034	0					
ANR	1949557	ArgumentList	a		1949034	1					
ANR	1949558	Argument	a		1949034	0					
ANR	1949559	Identifier	a		1949034	0					
ANR	1949560	CallExpression	"Maj ( a , b , c )"		1949034	1					
ANR	1949561	Callee	Maj		1949034	0					
ANR	1949562	Identifier	Maj		1949034	0					
ANR	1949563	ArgumentList	a		1949034	1					
ANR	1949564	Argument	a		1949034	0					
ANR	1949565	Identifier	a		1949034	0					
ANR	1949566	Argument	b		1949034	1					
ANR	1949567	Identifier	b		1949034	0					
ANR	1949568	Argument	c		1949034	2					
ANR	1949569	Identifier	c		1949034	0					
ANR	1949570	ExpressionStatement	h = g	192:3:6609:6614	1949034	2	True				
ANR	1949571	AssignmentExpression	h = g		1949034	0		=			
ANR	1949572	Identifier	h		1949034	0					
ANR	1949573	Identifier	g		1949034	1					
ANR	1949574	ExpressionStatement	g = f	193:3:6619:6624	1949034	3	True				
ANR	1949575	AssignmentExpression	g = f		1949034	0		=			
ANR	1949576	Identifier	g		1949034	0					
ANR	1949577	Identifier	f		1949034	1					
ANR	1949578	ExpressionStatement	f = e	194:3:6629:6634	1949034	4	True				
ANR	1949579	AssignmentExpression	f = e		1949034	0		=			
ANR	1949580	Identifier	f		1949034	0					
ANR	1949581	Identifier	e		1949034	1					
ANR	1949582	ExpressionStatement	e = d + T1	195:3:6639:6649	1949034	5	True				
ANR	1949583	AssignmentExpression	e = d + T1		1949034	0		=			
ANR	1949584	Identifier	e		1949034	0					
ANR	1949585	AdditiveExpression	d + T1		1949034	1		+			
ANR	1949586	Identifier	d		1949034	0					
ANR	1949587	Identifier	T1		1949034	1					
ANR	1949588	ExpressionStatement	d = c	196:3:6654:6659	1949034	6	True				
ANR	1949589	AssignmentExpression	d = c		1949034	0		=			
ANR	1949590	Identifier	d		1949034	0					
ANR	1949591	Identifier	c		1949034	1					
ANR	1949592	ExpressionStatement	c = b	197:3:6664:6669	1949034	7	True				
ANR	1949593	AssignmentExpression	c = b		1949034	0		=			
ANR	1949594	Identifier	c		1949034	0					
ANR	1949595	Identifier	b		1949034	1					
ANR	1949596	ExpressionStatement	b = a	198:3:6674:6679	1949034	8	True				
ANR	1949597	AssignmentExpression	b = a		1949034	0		=			
ANR	1949598	Identifier	b		1949034	0					
ANR	1949599	Identifier	a		1949034	1					
ANR	1949600	ExpressionStatement	a = T1 + T2	199:3:6684:6695	1949034	9	True				
ANR	1949601	AssignmentExpression	a = T1 + T2		1949034	0		=			
ANR	1949602	Identifier	a		1949034	0					
ANR	1949603	AdditiveExpression	T1 + T2		1949034	1		+			
ANR	1949604	Identifier	T1		1949034	0					
ANR	1949605	Identifier	T2		1949034	1					
ANR	1949606	ExpressionStatement	a += a_save	204:2:6792:6803	1949034	193	True				
ANR	1949607	AssignmentExpression	a += a_save		1949034	0		+=			
ANR	1949608	Identifier	a		1949034	0					
ANR	1949609	Identifier	a_save		1949034	1					
ANR	1949610	ExpressionStatement	b += b_save	205:2:6807:6818	1949034	194	True				
ANR	1949611	AssignmentExpression	b += b_save		1949034	0		+=			
ANR	1949612	Identifier	b		1949034	0					
ANR	1949613	Identifier	b_save		1949034	1					
ANR	1949614	ExpressionStatement	c += c_save	206:2:6822:6833	1949034	195	True				
ANR	1949615	AssignmentExpression	c += c_save		1949034	0		+=			
ANR	1949616	Identifier	c		1949034	0					
ANR	1949617	Identifier	c_save		1949034	1					
ANR	1949618	ExpressionStatement	d += d_save	207:2:6837:6848	1949034	196	True				
ANR	1949619	AssignmentExpression	d += d_save		1949034	0		+=			
ANR	1949620	Identifier	d		1949034	0					
ANR	1949621	Identifier	d_save		1949034	1					
ANR	1949622	ExpressionStatement	e += e_save	208:2:6852:6863	1949034	197	True				
ANR	1949623	AssignmentExpression	e += e_save		1949034	0		+=			
ANR	1949624	Identifier	e		1949034	0					
ANR	1949625	Identifier	e_save		1949034	1					
ANR	1949626	ExpressionStatement	f += f_save	209:2:6867:6878	1949034	198	True				
ANR	1949627	AssignmentExpression	f += f_save		1949034	0		+=			
ANR	1949628	Identifier	f		1949034	0					
ANR	1949629	Identifier	f_save		1949034	1					
ANR	1949630	ExpressionStatement	g += g_save	210:2:6882:6893	1949034	199	True				
ANR	1949631	AssignmentExpression	g += g_save		1949034	0		+=			
ANR	1949632	Identifier	g		1949034	0					
ANR	1949633	Identifier	g_save		1949034	1					
ANR	1949634	ExpressionStatement	h += h_save	211:2:6897:6908	1949034	200	True				
ANR	1949635	AssignmentExpression	h += h_save		1949034	0		+=			
ANR	1949636	Identifier	h		1949034	0					
ANR	1949637	Identifier	h_save		1949034	1					
ANR	1949638	ExpressionStatement	nwords -= 16	214:2:6950:6962	1949034	201	True				
ANR	1949639	AssignmentExpression	nwords -= 16		1949034	0		-=			
ANR	1949640	Identifier	nwords		1949034	0					
ANR	1949641	PrimaryExpression	16		1949034	1					
ANR	1949642	ExpressionStatement	ctx -> H [ 0 ] = a	218:1:7020:7033	1949034	13	True				
ANR	1949643	AssignmentExpression	ctx -> H [ 0 ] = a		1949034	0		=			
ANR	1949644	ArrayIndexing	ctx -> H [ 0 ]		1949034	0					
ANR	1949645	PtrMemberAccess	ctx -> H		1949034	0					
ANR	1949646	Identifier	ctx		1949034	0					
ANR	1949647	Identifier	H		1949034	1					
ANR	1949648	PrimaryExpression	0		1949034	1					
ANR	1949649	Identifier	a		1949034	1					
ANR	1949650	ExpressionStatement	ctx -> H [ 1 ] = b	219:1:7036:7049	1949034	14	True				
ANR	1949651	AssignmentExpression	ctx -> H [ 1 ] = b		1949034	0		=			
ANR	1949652	ArrayIndexing	ctx -> H [ 1 ]		1949034	0					
ANR	1949653	PtrMemberAccess	ctx -> H		1949034	0					
ANR	1949654	Identifier	ctx		1949034	0					
ANR	1949655	Identifier	H		1949034	1					
ANR	1949656	PrimaryExpression	1		1949034	1					
ANR	1949657	Identifier	b		1949034	1					
ANR	1949658	ExpressionStatement	ctx -> H [ 2 ] = c	220:1:7052:7065	1949034	15	True				
ANR	1949659	AssignmentExpression	ctx -> H [ 2 ] = c		1949034	0		=			
ANR	1949660	ArrayIndexing	ctx -> H [ 2 ]		1949034	0					
ANR	1949661	PtrMemberAccess	ctx -> H		1949034	0					
ANR	1949662	Identifier	ctx		1949034	0					
ANR	1949663	Identifier	H		1949034	1					
ANR	1949664	PrimaryExpression	2		1949034	1					
ANR	1949665	Identifier	c		1949034	1					
ANR	1949666	ExpressionStatement	ctx -> H [ 3 ] = d	221:1:7068:7081	1949034	16	True				
ANR	1949667	AssignmentExpression	ctx -> H [ 3 ] = d		1949034	0		=			
ANR	1949668	ArrayIndexing	ctx -> H [ 3 ]		1949034	0					
ANR	1949669	PtrMemberAccess	ctx -> H		1949034	0					
ANR	1949670	Identifier	ctx		1949034	0					
ANR	1949671	Identifier	H		1949034	1					
ANR	1949672	PrimaryExpression	3		1949034	1					
ANR	1949673	Identifier	d		1949034	1					
ANR	1949674	ExpressionStatement	ctx -> H [ 4 ] = e	222:1:7084:7097	1949034	17	True				
ANR	1949675	AssignmentExpression	ctx -> H [ 4 ] = e		1949034	0		=			
ANR	1949676	ArrayIndexing	ctx -> H [ 4 ]		1949034	0					
ANR	1949677	PtrMemberAccess	ctx -> H		1949034	0					
ANR	1949678	Identifier	ctx		1949034	0					
ANR	1949679	Identifier	H		1949034	1					
ANR	1949680	PrimaryExpression	4		1949034	1					
ANR	1949681	Identifier	e		1949034	1					
ANR	1949682	ExpressionStatement	ctx -> H [ 5 ] = f	223:1:7100:7113	1949034	18	True				
ANR	1949683	AssignmentExpression	ctx -> H [ 5 ] = f		1949034	0		=			
ANR	1949684	ArrayIndexing	ctx -> H [ 5 ]		1949034	0					
ANR	1949685	PtrMemberAccess	ctx -> H		1949034	0					
ANR	1949686	Identifier	ctx		1949034	0					
ANR	1949687	Identifier	H		1949034	1					
ANR	1949688	PrimaryExpression	5		1949034	1					
ANR	1949689	Identifier	f		1949034	1					
ANR	1949690	ExpressionStatement	ctx -> H [ 6 ] = g	224:1:7116:7129	1949034	19	True				
ANR	1949691	AssignmentExpression	ctx -> H [ 6 ] = g		1949034	0		=			
ANR	1949692	ArrayIndexing	ctx -> H [ 6 ]		1949034	0					
ANR	1949693	PtrMemberAccess	ctx -> H		1949034	0					
ANR	1949694	Identifier	ctx		1949034	0					
ANR	1949695	Identifier	H		1949034	1					
ANR	1949696	PrimaryExpression	6		1949034	1					
ANR	1949697	Identifier	g		1949034	1					
ANR	1949698	ExpressionStatement	ctx -> H [ 7 ] = h	225:1:7132:7145	1949034	20	True				
ANR	1949699	AssignmentExpression	ctx -> H [ 7 ] = h		1949034	0		=			
ANR	1949700	ArrayIndexing	ctx -> H [ 7 ]		1949034	0					
ANR	1949701	PtrMemberAccess	ctx -> H		1949034	0					
ANR	1949702	Identifier	ctx		1949034	0					
ANR	1949703	Identifier	H		1949034	1					
ANR	1949704	PrimaryExpression	7		1949034	1					
ANR	1949705	Identifier	h		1949034	1					
ANR	1949706	ReturnType	static void		1949034	1					
ANR	1949707	Identifier	sha512_process_block		1949034	2					
ANR	1949708	ParameterList	"const void * buffer , size_t len , struct sha512_ctx * ctx"		1949034	3					
ANR	1949709	Parameter	const void * buffer	132:21:4675:4692	1949034	0	True				
ANR	1949710	ParameterType	const void *		1949034	0					
ANR	1949711	Identifier	buffer		1949034	1					
ANR	1949712	Parameter	size_t len	132:41:4695:4704	1949034	1	True				
ANR	1949713	ParameterType	size_t		1949034	0					
ANR	1949714	Identifier	len		1949034	1					
ANR	1949715	Parameter	struct sha512_ctx * ctx	132:53:4707:4728	1949034	2	True				
ANR	1949716	ParameterType	struct sha512_ctx *		1949034	0					
ANR	1949717	Identifier	ctx		1949034	1					
ANR	1949718	CFGEntryNode	ENTRY		1949034		True				
ANR	1949719	CFGExitNode	EXIT		1949034		True				
ANR	1949720	Symbol	Ch		1949034						
ANR	1949721	Symbol	f_save		1949034						
ANR	1949722	Symbol	K		1949034						
ANR	1949723	Symbol	nwords		1949034						
ANR	1949724	Symbol	b_save		1949034						
ANR	1949725	Symbol	* words		1949034						
ANR	1949726	Symbol	len		1949034						
ANR	1949727	Symbol	* K		1949034						
ANR	1949728	Symbol	W		1949034						
ANR	1949729	Symbol	buffer		1949034						
ANR	1949730	Symbol	h_save		1949034						
ANR	1949731	Symbol	T1		1949034						
ANR	1949732	Symbol	e_save		1949034						
ANR	1949733	Symbol	R0		1949034						
ANR	1949734	Symbol	T2		1949034						
ANR	1949735	Symbol	R1		1949034						
ANR	1949736	Symbol	a		1949034						
ANR	1949737	Symbol	* W		1949034						
ANR	1949738	Symbol	b		1949034						
ANR	1949739	Symbol	c		1949034						
ANR	1949740	Symbol	d		1949034						
ANR	1949741	Symbol	e		1949034						
ANR	1949742	Symbol	ctx		1949034						
ANR	1949743	Symbol	f		1949034						
ANR	1949744	Symbol	g_save		1949034						
ANR	1949745	Symbol	g		1949034						
ANR	1949746	Symbol	words		1949034						
ANR	1949747	Symbol	h		1949034						
ANR	1949748	Symbol	a_save		1949034						
ANR	1949749	Symbol	d_save		1949034						
ANR	1949750	Symbol	* ctx		1949034						
ANR	1949751	Symbol	t		1949034						
ANR	1949752	Symbol	SWAP		1949034						
ANR	1949753	Symbol	ctx -> total		1949034						
ANR	1949754	Symbol	ctx -> H		1949034						
ANR	1949755	Symbol	* ctx -> H		1949034						
ANR	1949756	Symbol	Maj		1949034						
ANR	1949757	Symbol	c_save		1949034						
ANR	1949758	Symbol	* * ctx		1949034						
ANR	1949759	Symbol	S0		1949034						
ANR	1949760	Symbol	* t		1949034						
ANR	1949761	Symbol	S1		1949034						
ANR	1949762	Symbol	* ctx -> total		1949034						
ANR	1949763	Function	sha512_init_ctx	231:0:7234:7696							
ANR	1949764	FunctionDef	sha512_init_ctx (struct sha512_ctx * ctx)		1949763	0					
ANR	1949765	CompoundStatement		231:53:7287:7696	1949763	0					
ANR	1949766	ExpressionStatement	ctx -> H [ 0 ] = UINT64_C ( 0x6a09e667f3bcc908 )	232:1:7290:7331	1949763	0	True				
ANR	1949767	AssignmentExpression	ctx -> H [ 0 ] = UINT64_C ( 0x6a09e667f3bcc908 )		1949763	0		=			
ANR	1949768	ArrayIndexing	ctx -> H [ 0 ]		1949763	0					
ANR	1949769	PtrMemberAccess	ctx -> H		1949763	0					
ANR	1949770	Identifier	ctx		1949763	0					
ANR	1949771	Identifier	H		1949763	1					
ANR	1949772	PrimaryExpression	0		1949763	1					
ANR	1949773	CallExpression	UINT64_C ( 0x6a09e667f3bcc908 )		1949763	1					
ANR	1949774	Callee	UINT64_C		1949763	0					
ANR	1949775	Identifier	UINT64_C		1949763	0					
ANR	1949776	ArgumentList	0x6a09e667f3bcc908		1949763	1					
ANR	1949777	Argument	0x6a09e667f3bcc908		1949763	0					
ANR	1949778	PrimaryExpression	0x6a09e667f3bcc908		1949763	0					
ANR	1949779	ExpressionStatement	ctx -> H [ 1 ] = UINT64_C ( 0xbb67ae8584caa73b )	233:1:7334:7375	1949763	1	True				
ANR	1949780	AssignmentExpression	ctx -> H [ 1 ] = UINT64_C ( 0xbb67ae8584caa73b )		1949763	0		=			
ANR	1949781	ArrayIndexing	ctx -> H [ 1 ]		1949763	0					
ANR	1949782	PtrMemberAccess	ctx -> H		1949763	0					
ANR	1949783	Identifier	ctx		1949763	0					
ANR	1949784	Identifier	H		1949763	1					
ANR	1949785	PrimaryExpression	1		1949763	1					
ANR	1949786	CallExpression	UINT64_C ( 0xbb67ae8584caa73b )		1949763	1					
ANR	1949787	Callee	UINT64_C		1949763	0					
ANR	1949788	Identifier	UINT64_C		1949763	0					
ANR	1949789	ArgumentList	0xbb67ae8584caa73b		1949763	1					
ANR	1949790	Argument	0xbb67ae8584caa73b		1949763	0					
ANR	1949791	PrimaryExpression	0xbb67ae8584caa73b		1949763	0					
ANR	1949792	ExpressionStatement	ctx -> H [ 2 ] = UINT64_C ( 0x3c6ef372fe94f82b )	234:1:7378:7419	1949763	2	True				
ANR	1949793	AssignmentExpression	ctx -> H [ 2 ] = UINT64_C ( 0x3c6ef372fe94f82b )		1949763	0		=			
ANR	1949794	ArrayIndexing	ctx -> H [ 2 ]		1949763	0					
ANR	1949795	PtrMemberAccess	ctx -> H		1949763	0					
ANR	1949796	Identifier	ctx		1949763	0					
ANR	1949797	Identifier	H		1949763	1					
ANR	1949798	PrimaryExpression	2		1949763	1					
ANR	1949799	CallExpression	UINT64_C ( 0x3c6ef372fe94f82b )		1949763	1					
ANR	1949800	Callee	UINT64_C		1949763	0					
ANR	1949801	Identifier	UINT64_C		1949763	0					
ANR	1949802	ArgumentList	0x3c6ef372fe94f82b		1949763	1					
ANR	1949803	Argument	0x3c6ef372fe94f82b		1949763	0					
ANR	1949804	PrimaryExpression	0x3c6ef372fe94f82b		1949763	0					
ANR	1949805	ExpressionStatement	ctx -> H [ 3 ] = UINT64_C ( 0xa54ff53a5f1d36f1 )	235:1:7422:7463	1949763	3	True				
ANR	1949806	AssignmentExpression	ctx -> H [ 3 ] = UINT64_C ( 0xa54ff53a5f1d36f1 )		1949763	0		=			
ANR	1949807	ArrayIndexing	ctx -> H [ 3 ]		1949763	0					
ANR	1949808	PtrMemberAccess	ctx -> H		1949763	0					
ANR	1949809	Identifier	ctx		1949763	0					
ANR	1949810	Identifier	H		1949763	1					
ANR	1949811	PrimaryExpression	3		1949763	1					
ANR	1949812	CallExpression	UINT64_C ( 0xa54ff53a5f1d36f1 )		1949763	1					
ANR	1949813	Callee	UINT64_C		1949763	0					
ANR	1949814	Identifier	UINT64_C		1949763	0					
ANR	1949815	ArgumentList	0xa54ff53a5f1d36f1		1949763	1					
ANR	1949816	Argument	0xa54ff53a5f1d36f1		1949763	0					
ANR	1949817	PrimaryExpression	0xa54ff53a5f1d36f1		1949763	0					
ANR	1949818	ExpressionStatement	ctx -> H [ 4 ] = UINT64_C ( 0x510e527fade682d1 )	236:1:7466:7507	1949763	4	True				
ANR	1949819	AssignmentExpression	ctx -> H [ 4 ] = UINT64_C ( 0x510e527fade682d1 )		1949763	0		=			
ANR	1949820	ArrayIndexing	ctx -> H [ 4 ]		1949763	0					
ANR	1949821	PtrMemberAccess	ctx -> H		1949763	0					
ANR	1949822	Identifier	ctx		1949763	0					
ANR	1949823	Identifier	H		1949763	1					
ANR	1949824	PrimaryExpression	4		1949763	1					
ANR	1949825	CallExpression	UINT64_C ( 0x510e527fade682d1 )		1949763	1					
ANR	1949826	Callee	UINT64_C		1949763	0					
ANR	1949827	Identifier	UINT64_C		1949763	0					
ANR	1949828	ArgumentList	0x510e527fade682d1		1949763	1					
ANR	1949829	Argument	0x510e527fade682d1		1949763	0					
ANR	1949830	PrimaryExpression	0x510e527fade682d1		1949763	0					
ANR	1949831	ExpressionStatement	ctx -> H [ 5 ] = UINT64_C ( 0x9b05688c2b3e6c1f )	237:1:7510:7551	1949763	5	True				
ANR	1949832	AssignmentExpression	ctx -> H [ 5 ] = UINT64_C ( 0x9b05688c2b3e6c1f )		1949763	0		=			
ANR	1949833	ArrayIndexing	ctx -> H [ 5 ]		1949763	0					
ANR	1949834	PtrMemberAccess	ctx -> H		1949763	0					
ANR	1949835	Identifier	ctx		1949763	0					
ANR	1949836	Identifier	H		1949763	1					
ANR	1949837	PrimaryExpression	5		1949763	1					
ANR	1949838	CallExpression	UINT64_C ( 0x9b05688c2b3e6c1f )		1949763	1					
ANR	1949839	Callee	UINT64_C		1949763	0					
ANR	1949840	Identifier	UINT64_C		1949763	0					
ANR	1949841	ArgumentList	0x9b05688c2b3e6c1f		1949763	1					
ANR	1949842	Argument	0x9b05688c2b3e6c1f		1949763	0					
ANR	1949843	PrimaryExpression	0x9b05688c2b3e6c1f		1949763	0					
ANR	1949844	ExpressionStatement	ctx -> H [ 6 ] = UINT64_C ( 0x1f83d9abfb41bd6b )	238:1:7554:7595	1949763	6	True				
ANR	1949845	AssignmentExpression	ctx -> H [ 6 ] = UINT64_C ( 0x1f83d9abfb41bd6b )		1949763	0		=			
ANR	1949846	ArrayIndexing	ctx -> H [ 6 ]		1949763	0					
ANR	1949847	PtrMemberAccess	ctx -> H		1949763	0					
ANR	1949848	Identifier	ctx		1949763	0					
ANR	1949849	Identifier	H		1949763	1					
ANR	1949850	PrimaryExpression	6		1949763	1					
ANR	1949851	CallExpression	UINT64_C ( 0x1f83d9abfb41bd6b )		1949763	1					
ANR	1949852	Callee	UINT64_C		1949763	0					
ANR	1949853	Identifier	UINT64_C		1949763	0					
ANR	1949854	ArgumentList	0x1f83d9abfb41bd6b		1949763	1					
ANR	1949855	Argument	0x1f83d9abfb41bd6b		1949763	0					
ANR	1949856	PrimaryExpression	0x1f83d9abfb41bd6b		1949763	0					
ANR	1949857	ExpressionStatement	ctx -> H [ 7 ] = UINT64_C ( 0x5be0cd19137e2179 )	239:1:7598:7639	1949763	7	True				
ANR	1949858	AssignmentExpression	ctx -> H [ 7 ] = UINT64_C ( 0x5be0cd19137e2179 )		1949763	0		=			
ANR	1949859	ArrayIndexing	ctx -> H [ 7 ]		1949763	0					
ANR	1949860	PtrMemberAccess	ctx -> H		1949763	0					
ANR	1949861	Identifier	ctx		1949763	0					
ANR	1949862	Identifier	H		1949763	1					
ANR	1949863	PrimaryExpression	7		1949763	1					
ANR	1949864	CallExpression	UINT64_C ( 0x5be0cd19137e2179 )		1949763	1					
ANR	1949865	Callee	UINT64_C		1949763	0					
ANR	1949866	Identifier	UINT64_C		1949763	0					
ANR	1949867	ArgumentList	0x5be0cd19137e2179		1949763	1					
ANR	1949868	Argument	0x5be0cd19137e2179		1949763	0					
ANR	1949869	PrimaryExpression	0x5be0cd19137e2179		1949763	0					
ANR	1949870	ExpressionStatement	ctx -> total [ 0 ] = ctx -> total [ 1 ] = 0	241:1:7643:7676	1949763	8	True				
ANR	1949871	AssignmentExpression	ctx -> total [ 0 ] = ctx -> total [ 1 ] = 0		1949763	0		=			
ANR	1949872	ArrayIndexing	ctx -> total [ 0 ]		1949763	0					
ANR	1949873	PtrMemberAccess	ctx -> total		1949763	0					
ANR	1949874	Identifier	ctx		1949763	0					
ANR	1949875	Identifier	total		1949763	1					
ANR	1949876	PrimaryExpression	0		1949763	1					
ANR	1949877	AssignmentExpression	ctx -> total [ 1 ] = 0		1949763	1		=			
ANR	1949878	ArrayIndexing	ctx -> total [ 1 ]		1949763	0					
ANR	1949879	PtrMemberAccess	ctx -> total		1949763	0					
ANR	1949880	Identifier	ctx		1949763	0					
ANR	1949881	Identifier	total		1949763	1					
ANR	1949882	PrimaryExpression	1		1949763	1					
ANR	1949883	PrimaryExpression	0		1949763	1					
ANR	1949884	ExpressionStatement	ctx -> buflen = 0	242:1:7679:7694	1949763	9	True				
ANR	1949885	AssignmentExpression	ctx -> buflen = 0		1949763	0		=			
ANR	1949886	PtrMemberAccess	ctx -> buflen		1949763	0					
ANR	1949887	Identifier	ctx		1949763	0					
ANR	1949888	Identifier	buflen		1949763	1					
ANR	1949889	PrimaryExpression	0		1949763	1					
ANR	1949890	ReturnType	static void		1949763	1					
ANR	1949891	Identifier	sha512_init_ctx		1949763	2					
ANR	1949892	ParameterList	struct sha512_ctx * ctx		1949763	3					
ANR	1949893	Parameter	struct sha512_ctx * ctx	231:29:7263:7284	1949763	0	True				
ANR	1949894	ParameterType	struct sha512_ctx *		1949763	0					
ANR	1949895	Identifier	ctx		1949763	1					
ANR	1949896	CFGEntryNode	ENTRY		1949763		True				
ANR	1949897	CFGExitNode	EXIT		1949763		True				
ANR	1949898	Symbol	UINT64_C		1949763						
ANR	1949899	Symbol	ctx		1949763						
ANR	1949900	Symbol	ctx -> total		1949763						
ANR	1949901	Symbol	ctx -> H		1949763						
ANR	1949902	Symbol	* ctx -> H		1949763						
ANR	1949903	Symbol	ctx -> buflen		1949763						
ANR	1949904	Symbol	* * ctx		1949763						
ANR	1949905	Symbol	* ctx		1949763						
ANR	1949906	Symbol	* ctx -> total		1949763						
ANR	1949907	Function	sha512_finish_ctx	251:0:7936:8851							
ANR	1949908	FunctionDef	"sha512_finish_ctx (struct sha512_ctx * ctx , void * resbuf)"		1949907	0					
ANR	1949909	CompoundStatement		251:71:8007:8851	1949907	0					
ANR	1949910	IdentifierDeclStatement	uint64_t bytes = ctx -> buflen ;	253:1:8059:8087	1949907	0	True				
ANR	1949911	IdentifierDecl	bytes = ctx -> buflen		1949907	0					
ANR	1949912	IdentifierDeclType	uint64_t		1949907	0					
ANR	1949913	Identifier	bytes		1949907	1					
ANR	1949914	AssignmentExpression	bytes = ctx -> buflen		1949907	2		=			
ANR	1949915	Identifier	bytes		1949907	0					
ANR	1949916	PtrMemberAccess	ctx -> buflen		1949907	1					
ANR	1949917	Identifier	ctx		1949907	0					
ANR	1949918	Identifier	buflen		1949907	1					
ANR	1949919	IdentifierDeclStatement	size_t pad ;	254:1:8090:8100	1949907	1	True				
ANR	1949920	IdentifierDecl	pad		1949907	0					
ANR	1949921	IdentifierDeclType	size_t		1949907	0					
ANR	1949922	Identifier	pad		1949907	1					
ANR	1949923	IdentifierDeclStatement	unsigned int i ;	255:1:8103:8117	1949907	2	True				
ANR	1949924	IdentifierDecl	i		1949907	0					
ANR	1949925	IdentifierDeclType	unsigned int		1949907	0					
ANR	1949926	Identifier	i		1949907	1					
ANR	1949927	ExpressionStatement	ctx -> total [ 0 ] += bytes	258:1:8156:8178	1949907	3	True				
ANR	1949928	AssignmentExpression	ctx -> total [ 0 ] += bytes		1949907	0		+=			
ANR	1949929	ArrayIndexing	ctx -> total [ 0 ]		1949907	0					
ANR	1949930	PtrMemberAccess	ctx -> total		1949907	0					
ANR	1949931	Identifier	ctx		1949907	0					
ANR	1949932	Identifier	total		1949907	1					
ANR	1949933	PrimaryExpression	0		1949907	1					
ANR	1949934	Identifier	bytes		1949907	1					
ANR	1949935	IfStatement	if ( ctx -> total [ 0 ] < bytes )		1949907	4					
ANR	1949936	Condition	ctx -> total [ 0 ] < bytes	259:5:8185:8205	1949907	0	True				
ANR	1949937	RelationalExpression	ctx -> total [ 0 ] < bytes		1949907	0		<			
ANR	1949938	ArrayIndexing	ctx -> total [ 0 ]		1949907	0					
ANR	1949939	PtrMemberAccess	ctx -> total		1949907	0					
ANR	1949940	Identifier	ctx		1949907	0					
ANR	1949941	Identifier	total		1949907	1					
ANR	1949942	PrimaryExpression	0		1949907	1					
ANR	1949943	Identifier	bytes		1949907	1					
ANR	1949944	CompoundStatement		9:28:200:200	1949907	1					
ANR	1949945	ExpressionStatement	++ ctx -> total [ 1 ]	260:2:8212:8227	1949907	0	True				
ANR	1949946	UnaryExpression	++ ctx -> total [ 1 ]		1949907	0					
ANR	1949947	IncDec	++		1949907	0					
ANR	1949948	ArrayIndexing	ctx -> total [ 1 ]		1949907	1					
ANR	1949949	PtrMemberAccess	ctx -> total		1949907	0					
ANR	1949950	Identifier	ctx		1949907	0					
ANR	1949951	Identifier	total		1949907	1					
ANR	1949952	PrimaryExpression	1		1949907	1					
ANR	1949953	ExpressionStatement	pad = bytes >= 112 ? 128 + 112 - ( size_t ) bytes : 112 - ( size_t ) bytes	263:1:8234:8302	1949907	5	True				
ANR	1949954	AssignmentExpression	pad = bytes >= 112 ? 128 + 112 - ( size_t ) bytes : 112 - ( size_t ) bytes		1949907	0		=			
ANR	1949955	Identifier	pad		1949907	0					
ANR	1949956	ConditionalExpression	bytes >= 112 ? 128 + 112 - ( size_t ) bytes : 112 - ( size_t ) bytes		1949907	1					
ANR	1949957	Condition	bytes >= 112		1949907	0					
ANR	1949958	RelationalExpression	bytes >= 112		1949907	0		>=			
ANR	1949959	Identifier	bytes		1949907	0					
ANR	1949960	PrimaryExpression	112		1949907	1					
ANR	1949961	AdditiveExpression	128 + 112 - ( size_t ) bytes		1949907	1		+			
ANR	1949962	PrimaryExpression	128		1949907	0					
ANR	1949963	AdditiveExpression	112 - ( size_t ) bytes		1949907	1		-			
ANR	1949964	PrimaryExpression	112		1949907	0					
ANR	1949965	CastExpression	( size_t ) bytes		1949907	1					
ANR	1949966	CastTarget	size_t		1949907	0					
ANR	1949967	Identifier	bytes		1949907	1					
ANR	1949968	AdditiveExpression	112 - ( size_t ) bytes		1949907	2		-			
ANR	1949969	PrimaryExpression	112		1949907	0					
ANR	1949970	CastExpression	( size_t ) bytes		1949907	1					
ANR	1949971	CastTarget	size_t		1949907	0					
ANR	1949972	Identifier	bytes		1949907	1					
ANR	1949973	ExpressionStatement	"memcpy ( & ctx -> buffer [ bytes ] , fillbuf , pad )"	264:1:8305:8346	1949907	6	True				
ANR	1949974	CallExpression	"memcpy ( & ctx -> buffer [ bytes ] , fillbuf , pad )"		1949907	0					
ANR	1949975	Callee	memcpy		1949907	0					
ANR	1949976	Identifier	memcpy		1949907	0					
ANR	1949977	ArgumentList	& ctx -> buffer [ bytes ]		1949907	1					
ANR	1949978	Argument	& ctx -> buffer [ bytes ]		1949907	0					
ANR	1949979	UnaryOperationExpression	& ctx -> buffer [ bytes ]		1949907	0					
ANR	1949980	UnaryOperator	&		1949907	0					
ANR	1949981	ArrayIndexing	ctx -> buffer [ bytes ]		1949907	1					
ANR	1949982	PtrMemberAccess	ctx -> buffer		1949907	0					
ANR	1949983	Identifier	ctx		1949907	0					
ANR	1949984	Identifier	buffer		1949907	1					
ANR	1949985	Identifier	bytes		1949907	1					
ANR	1949986	Argument	fillbuf		1949907	1					
ANR	1949987	Identifier	fillbuf		1949907	0					
ANR	1949988	Argument	pad		1949907	2					
ANR	1949989	Identifier	pad		1949907	0					
ANR	1949990	ExpressionStatement	* ( uint64_t * ) & ctx -> buffer [ bytes + pad + 8 ] = SWAP ( ctx -> total [ 0 ] << 3 )	267:1:8422:8492	1949907	7	True				
ANR	1949991	AssignmentExpression	* ( uint64_t * ) & ctx -> buffer [ bytes + pad + 8 ] = SWAP ( ctx -> total [ 0 ] << 3 )		1949907	0		=			
ANR	1949992	UnaryOperationExpression	* ( uint64_t * ) & ctx -> buffer [ bytes + pad + 8 ]		1949907	0					
ANR	1949993	UnaryOperator	*		1949907	0					
ANR	1949994	CastExpression	( uint64_t * ) & ctx -> buffer [ bytes + pad + 8 ]		1949907	1					
ANR	1949995	CastTarget	uint64_t *		1949907	0					
ANR	1949996	UnaryOperationExpression	& ctx -> buffer [ bytes + pad + 8 ]		1949907	1					
ANR	1949997	UnaryOperator	&		1949907	0					
ANR	1949998	ArrayIndexing	ctx -> buffer [ bytes + pad + 8 ]		1949907	1					
ANR	1949999	PtrMemberAccess	ctx -> buffer		1949907	0					
ANR	1950000	Identifier	ctx		1949907	0					
ANR	1950001	Identifier	buffer		1949907	1					
ANR	1950002	AdditiveExpression	bytes + pad + 8		1949907	1		+			
ANR	1950003	Identifier	bytes		1949907	0					
ANR	1950004	AdditiveExpression	pad + 8		1949907	1		+			
ANR	1950005	Identifier	pad		1949907	0					
ANR	1950006	PrimaryExpression	8		1949907	1					
ANR	1950007	CallExpression	SWAP ( ctx -> total [ 0 ] << 3 )		1949907	1					
ANR	1950008	Callee	SWAP		1949907	0					
ANR	1950009	Identifier	SWAP		1949907	0					
ANR	1950010	ArgumentList	ctx -> total [ 0 ] << 3		1949907	1					
ANR	1950011	Argument	ctx -> total [ 0 ] << 3		1949907	0					
ANR	1950012	ShiftExpression	ctx -> total [ 0 ] << 3		1949907	0		<<			
ANR	1950013	ArrayIndexing	ctx -> total [ 0 ]		1949907	0					
ANR	1950014	PtrMemberAccess	ctx -> total		1949907	0					
ANR	1950015	Identifier	ctx		1949907	0					
ANR	1950016	Identifier	total		1949907	1					
ANR	1950017	PrimaryExpression	0		1949907	1					
ANR	1950018	PrimaryExpression	3		1949907	1					
ANR	1950019	ExpressionStatement	* ( uint64_t * ) & ctx -> buffer [ bytes + pad ] = SWAP ( ( ctx -> total [ 1 ] << 3 ) | ( ctx -> total [ 0 ] >> 61 ) )	268:1:8495:8593	1949907	8	True				
ANR	1950020	AssignmentExpression	* ( uint64_t * ) & ctx -> buffer [ bytes + pad ] = SWAP ( ( ctx -> total [ 1 ] << 3 ) | ( ctx -> total [ 0 ] >> 61 ) )		1949907	0		=			
ANR	1950021	UnaryOperationExpression	* ( uint64_t * ) & ctx -> buffer [ bytes + pad ]		1949907	0					
ANR	1950022	UnaryOperator	*		1949907	0					
ANR	1950023	CastExpression	( uint64_t * ) & ctx -> buffer [ bytes + pad ]		1949907	1					
ANR	1950024	CastTarget	uint64_t *		1949907	0					
ANR	1950025	UnaryOperationExpression	& ctx -> buffer [ bytes + pad ]		1949907	1					
ANR	1950026	UnaryOperator	&		1949907	0					
ANR	1950027	ArrayIndexing	ctx -> buffer [ bytes + pad ]		1949907	1					
ANR	1950028	PtrMemberAccess	ctx -> buffer		1949907	0					
ANR	1950029	Identifier	ctx		1949907	0					
ANR	1950030	Identifier	buffer		1949907	1					
ANR	1950031	AdditiveExpression	bytes + pad		1949907	1		+			
ANR	1950032	Identifier	bytes		1949907	0					
ANR	1950033	Identifier	pad		1949907	1					
ANR	1950034	CallExpression	SWAP ( ( ctx -> total [ 1 ] << 3 ) | ( ctx -> total [ 0 ] >> 61 ) )		1949907	1					
ANR	1950035	Callee	SWAP		1949907	0					
ANR	1950036	Identifier	SWAP		1949907	0					
ANR	1950037	ArgumentList	( ctx -> total [ 1 ] << 3 ) | ( ctx -> total [ 0 ] >> 61 )		1949907	1					
ANR	1950038	Argument	( ctx -> total [ 1 ] << 3 ) | ( ctx -> total [ 0 ] >> 61 )		1949907	0					
ANR	1950039	InclusiveOrExpression	( ctx -> total [ 1 ] << 3 ) | ( ctx -> total [ 0 ] >> 61 )		1949907	0		|			
ANR	1950040	ShiftExpression	ctx -> total [ 1 ] << 3		1949907	0		<<			
ANR	1950041	ArrayIndexing	ctx -> total [ 1 ]		1949907	0					
ANR	1950042	PtrMemberAccess	ctx -> total		1949907	0					
ANR	1950043	Identifier	ctx		1949907	0					
ANR	1950044	Identifier	total		1949907	1					
ANR	1950045	PrimaryExpression	1		1949907	1					
ANR	1950046	PrimaryExpression	3		1949907	1					
ANR	1950047	ShiftExpression	ctx -> total [ 0 ] >> 61		1949907	1		>>			
ANR	1950048	ArrayIndexing	ctx -> total [ 0 ]		1949907	0					
ANR	1950049	PtrMemberAccess	ctx -> total		1949907	0					
ANR	1950050	Identifier	ctx		1949907	0					
ANR	1950051	Identifier	total		1949907	1					
ANR	1950052	PrimaryExpression	0		1949907	1					
ANR	1950053	PrimaryExpression	61		1949907	1					
ANR	1950054	ExpressionStatement	"sha512_process_block ( ctx -> buffer , ( size_t ) ( bytes + pad + 16 ) , ctx )"	272:1:8625:8691	1949907	9	True				
ANR	1950055	CallExpression	"sha512_process_block ( ctx -> buffer , ( size_t ) ( bytes + pad + 16 ) , ctx )"		1949907	0					
ANR	1950056	Callee	sha512_process_block		1949907	0					
ANR	1950057	Identifier	sha512_process_block		1949907	0					
ANR	1950058	ArgumentList	ctx -> buffer		1949907	1					
ANR	1950059	Argument	ctx -> buffer		1949907	0					
ANR	1950060	PtrMemberAccess	ctx -> buffer		1949907	0					
ANR	1950061	Identifier	ctx		1949907	0					
ANR	1950062	Identifier	buffer		1949907	1					
ANR	1950063	Argument	( size_t ) ( bytes + pad + 16 )		1949907	1					
ANR	1950064	CastExpression	( size_t ) ( bytes + pad + 16 )		1949907	0					
ANR	1950065	CastTarget	size_t		1949907	0					
ANR	1950066	AdditiveExpression	bytes + pad + 16		1949907	1		+			
ANR	1950067	Identifier	bytes		1949907	0					
ANR	1950068	AdditiveExpression	pad + 16		1949907	1		+			
ANR	1950069	Identifier	pad		1949907	0					
ANR	1950070	PrimaryExpression	16		1949907	1					
ANR	1950071	Argument	ctx		1949907	2					
ANR	1950072	Identifier	ctx		1949907	0					
ANR	1950073	ForStatement	for ( i = 0 ; i < 8 ; ++ i )		1949907	10					
ANR	1950074	ForInit	i = 0 ;	275:6:8764:8769	1949907	0	True				
ANR	1950075	AssignmentExpression	i = 0		1949907	0		=			
ANR	1950076	Identifier	i		1949907	0					
ANR	1950077	PrimaryExpression	0		1949907	1					
ANR	1950078	Condition	i < 8	275:13:8771:8775	1949907	1	True				
ANR	1950079	RelationalExpression	i < 8		1949907	0		<			
ANR	1950080	Identifier	i		1949907	0					
ANR	1950081	PrimaryExpression	8		1949907	1					
ANR	1950082	UnaryExpression	++ i	275:20:8778:8780	1949907	2	True				
ANR	1950083	IncDec	++		1949907	0					
ANR	1950084	Identifier	i		1949907	1					
ANR	1950085	CompoundStatement		25:25:775:775	1949907	3					
ANR	1950086	ExpressionStatement	( ( uint64_t * ) resbuf ) [ i ] = SWAP ( ctx -> H [ i ] )	276:2:8787:8829	1949907	0	True				
ANR	1950087	AssignmentExpression	( ( uint64_t * ) resbuf ) [ i ] = SWAP ( ctx -> H [ i ] )		1949907	0		=			
ANR	1950088	ArrayIndexing	( ( uint64_t * ) resbuf ) [ i ]		1949907	0					
ANR	1950089	CastExpression	( uint64_t * ) resbuf		1949907	0					
ANR	1950090	CastTarget	uint64_t *		1949907	0					
ANR	1950091	Identifier	resbuf		1949907	1					
ANR	1950092	Identifier	i		1949907	1					
ANR	1950093	CallExpression	SWAP ( ctx -> H [ i ] )		1949907	1					
ANR	1950094	Callee	SWAP		1949907	0					
ANR	1950095	Identifier	SWAP		1949907	0					
ANR	1950096	ArgumentList	ctx -> H [ i ]		1949907	1					
ANR	1950097	Argument	ctx -> H [ i ]		1949907	0					
ANR	1950098	ArrayIndexing	ctx -> H [ i ]		1949907	0					
ANR	1950099	PtrMemberAccess	ctx -> H		1949907	0					
ANR	1950100	Identifier	ctx		1949907	0					
ANR	1950101	Identifier	H		1949907	1					
ANR	1950102	Identifier	i		1949907	1					
ANR	1950103	ReturnStatement	return resbuf ;	279:1:8836:8849	1949907	11	True				
ANR	1950104	Identifier	resbuf		1949907	0					
ANR	1950105	ReturnType	static void *		1949907	1					
ANR	1950106	Identifier	sha512_finish_ctx		1949907	2					
ANR	1950107	ParameterList	"struct sha512_ctx * ctx , void * resbuf"		1949907	3					
ANR	1950108	Parameter	struct sha512_ctx * ctx	251:33:7969:7990	1949907	0	True				
ANR	1950109	ParameterType	struct sha512_ctx *		1949907	0					
ANR	1950110	Identifier	ctx		1949907	1					
ANR	1950111	Parameter	void * resbuf	251:57:7993:8004	1949907	1	True				
ANR	1950112	ParameterType	void *		1949907	0					
ANR	1950113	Identifier	resbuf		1949907	1					
ANR	1950114	CFGEntryNode	ENTRY		1949907		True				
ANR	1950115	CFGExitNode	EXIT		1949907		True				
ANR	1950116	Symbol	* ( uint64_t * ) & ctx -> buffer [ bytes + pad ]		1949907						
ANR	1950117	Symbol	ctx		1949907						
ANR	1950118	Symbol	ctx -> buflen		1949907						
ANR	1950119	Symbol	i		1949907						
ANR	1950120	Symbol	ctx -> buffer		1949907						
ANR	1950121	Symbol	* bytes		1949907						
ANR	1950122	Symbol	* ( uint64_t * ) & ctx -> buffer [ bytes + pad + 8 ]		1949907						
ANR	1950123	Symbol	* ctx		1949907						
ANR	1950124	Symbol	* resbuf		1949907						
ANR	1950125	Symbol	pad		1949907						
ANR	1950126	Symbol	* i		1949907						
ANR	1950127	Symbol	SWAP		1949907						
ANR	1950128	Symbol	bytes		1949907						
ANR	1950129	Symbol	ctx -> total		1949907						
ANR	1950130	Symbol	ctx -> H		1949907						
ANR	1950131	Symbol	* ctx -> H		1949907						
ANR	1950132	Symbol	* ctx -> buffer		1949907						
ANR	1950133	Symbol	* * ctx		1949907						
ANR	1950134	Symbol	fillbuf		1949907						
ANR	1950135	Symbol	* pad		1949907						
ANR	1950136	Symbol	resbuf		1949907						
ANR	1950137	Symbol	* ctx -> total		1949907						
ANR	1950138	Function	sha512_process_bytes	282:0:8854:10627							
ANR	1950139	FunctionDef	"sha512_process_bytes (const void * buffer , size_t len , struct sha512_ctx * ctx)"		1950138	0					
ANR	1950140	CompoundStatement		283:77:8943:10627	1950138	0					
ANR	1950141	IfStatement	if ( ctx -> buflen != 0 )		1950138	0					
ANR	1950142	Condition	ctx -> buflen != 0	286:5:9045:9060	1950138	0	True				
ANR	1950143	EqualityExpression	ctx -> buflen != 0		1950138	0		!=			
ANR	1950144	PtrMemberAccess	ctx -> buflen		1950138	0					
ANR	1950145	Identifier	ctx		1950138	0					
ANR	1950146	Identifier	buflen		1950138	1					
ANR	1950147	PrimaryExpression	0		1950138	1					
ANR	1950148	CompoundStatement		6:2:165:233	1950138	1					
ANR	1950149	IdentifierDeclStatement	size_t left_over = ( size_t ) ctx -> buflen ;	287:2:9067:9105	1950138	0	True				
ANR	1950150	IdentifierDecl	left_over = ( size_t ) ctx -> buflen		1950138	0					
ANR	1950151	IdentifierDeclType	size_t		1950138	0					
ANR	1950152	Identifier	left_over		1950138	1					
ANR	1950153	AssignmentExpression	left_over = ( size_t ) ctx -> buflen		1950138	2		=			
ANR	1950154	Identifier	left_over		1950138	0					
ANR	1950155	CastExpression	( size_t ) ctx -> buflen		1950138	1					
ANR	1950156	CastTarget	size_t		1950138	0					
ANR	1950157	PtrMemberAccess	ctx -> buflen		1950138	1					
ANR	1950158	Identifier	ctx		1950138	0					
ANR	1950159	Identifier	buflen		1950138	1					
ANR	1950160	IdentifierDeclStatement	size_t add = ( size_t ) ( 256 - left_over > len ? len : 256 - left_over ) ;	288:2:9109:9177	1950138	1	True				
ANR	1950161	IdentifierDecl	add = ( size_t ) ( 256 - left_over > len ? len : 256 - left_over )		1950138	0					
ANR	1950162	IdentifierDeclType	size_t		1950138	0					
ANR	1950163	Identifier	add		1950138	1					
ANR	1950164	AssignmentExpression	add = ( size_t ) ( 256 - left_over > len ? len : 256 - left_over )		1950138	2		=			
ANR	1950165	Identifier	add		1950138	0					
ANR	1950166	CastExpression	( size_t ) ( 256 - left_over > len ? len : 256 - left_over )		1950138	1					
ANR	1950167	CastTarget	size_t		1950138	0					
ANR	1950168	ConditionalExpression	256 - left_over > len ? len : 256 - left_over		1950138	1					
ANR	1950169	Condition	256 - left_over > len		1950138	0					
ANR	1950170	RelationalExpression	256 - left_over > len		1950138	0		>			
ANR	1950171	AdditiveExpression	256 - left_over		1950138	0		-			
ANR	1950172	PrimaryExpression	256		1950138	0					
ANR	1950173	Identifier	left_over		1950138	1					
ANR	1950174	Identifier	len		1950138	1					
ANR	1950175	Identifier	len		1950138	1					
ANR	1950176	AdditiveExpression	256 - left_over		1950138	2		-			
ANR	1950177	PrimaryExpression	256		1950138	0					
ANR	1950178	Identifier	left_over		1950138	1					
ANR	1950179	ExpressionStatement	"memcpy ( & ctx -> buffer [ left_over ] , buffer , add )"	290:2:9182:9226	1950138	2	True				
ANR	1950180	CallExpression	"memcpy ( & ctx -> buffer [ left_over ] , buffer , add )"		1950138	0					
ANR	1950181	Callee	memcpy		1950138	0					
ANR	1950182	Identifier	memcpy		1950138	0					
ANR	1950183	ArgumentList	& ctx -> buffer [ left_over ]		1950138	1					
ANR	1950184	Argument	& ctx -> buffer [ left_over ]		1950138	0					
ANR	1950185	UnaryOperationExpression	& ctx -> buffer [ left_over ]		1950138	0					
ANR	1950186	UnaryOperator	&		1950138	0					
ANR	1950187	ArrayIndexing	ctx -> buffer [ left_over ]		1950138	1					
ANR	1950188	PtrMemberAccess	ctx -> buffer		1950138	0					
ANR	1950189	Identifier	ctx		1950138	0					
ANR	1950190	Identifier	buffer		1950138	1					
ANR	1950191	Identifier	left_over		1950138	1					
ANR	1950192	Argument	buffer		1950138	1					
ANR	1950193	Identifier	buffer		1950138	0					
ANR	1950194	Argument	add		1950138	2					
ANR	1950195	Identifier	add		1950138	0					
ANR	1950196	ExpressionStatement	ctx -> buflen += add	291:2:9230:9248	1950138	3	True				
ANR	1950197	AssignmentExpression	ctx -> buflen += add		1950138	0		+=			
ANR	1950198	PtrMemberAccess	ctx -> buflen		1950138	0					
ANR	1950199	Identifier	ctx		1950138	0					
ANR	1950200	Identifier	buflen		1950138	1					
ANR	1950201	Identifier	add		1950138	1					
ANR	1950202	IfStatement	if ( ctx -> buflen > 128 )		1950138	4					
ANR	1950203	Condition	ctx -> buflen > 128	293:6:9257:9273	1950138	0	True				
ANR	1950204	RelationalExpression	ctx -> buflen > 128		1950138	0		>			
ANR	1950205	PtrMemberAccess	ctx -> buflen		1950138	0					
ANR	1950206	Identifier	ctx		1950138	0					
ANR	1950207	Identifier	buflen		1950138	1					
ANR	1950208	PrimaryExpression	128		1950138	1					
ANR	1950209	CompoundStatement		11:25:332:332	1950138	1					
ANR	1950210	ExpressionStatement	"sha512_process_block ( ctx -> buffer , ctx -> buflen & ~127 , ctx )"	294:3:9281:9339	1950138	0	True				
ANR	1950211	CallExpression	"sha512_process_block ( ctx -> buffer , ctx -> buflen & ~127 , ctx )"		1950138	0					
ANR	1950212	Callee	sha512_process_block		1950138	0					
ANR	1950213	Identifier	sha512_process_block		1950138	0					
ANR	1950214	ArgumentList	ctx -> buffer		1950138	1					
ANR	1950215	Argument	ctx -> buffer		1950138	0					
ANR	1950216	PtrMemberAccess	ctx -> buffer		1950138	0					
ANR	1950217	Identifier	ctx		1950138	0					
ANR	1950218	Identifier	buffer		1950138	1					
ANR	1950219	Argument	ctx -> buflen & ~127		1950138	1					
ANR	1950220	BitAndExpression	ctx -> buflen & ~127		1950138	0		&			
ANR	1950221	PtrMemberAccess	ctx -> buflen		1950138	0					
ANR	1950222	Identifier	ctx		1950138	0					
ANR	1950223	Identifier	buflen		1950138	1					
ANR	1950224	Identifier	~127		1950138	1					
ANR	1950225	Argument	ctx		1950138	2					
ANR	1950226	Identifier	ctx		1950138	0					
ANR	1950227	ExpressionStatement	ctx -> buflen &= 127	296:3:9345:9363	1950138	1	True				
ANR	1950228	AssignmentExpression	ctx -> buflen &= 127		1950138	0		&=			
ANR	1950229	PtrMemberAccess	ctx -> buflen		1950138	0					
ANR	1950230	Identifier	ctx		1950138	0					
ANR	1950231	Identifier	buflen		1950138	1					
ANR	1950232	PrimaryExpression	127		1950138	1					
ANR	1950233	ExpressionStatement	"memcpy ( ctx -> buffer , & ctx -> buffer [ ( left_over + add ) & ~127 ] , ( size_t ) ctx -> buflen )"	298:3:9438:9523	1950138	2	True				
ANR	1950234	CallExpression	"memcpy ( ctx -> buffer , & ctx -> buffer [ ( left_over + add ) & ~127 ] , ( size_t ) ctx -> buflen )"		1950138	0					
ANR	1950235	Callee	memcpy		1950138	0					
ANR	1950236	Identifier	memcpy		1950138	0					
ANR	1950237	ArgumentList	ctx -> buffer		1950138	1					
ANR	1950238	Argument	ctx -> buffer		1950138	0					
ANR	1950239	PtrMemberAccess	ctx -> buffer		1950138	0					
ANR	1950240	Identifier	ctx		1950138	0					
ANR	1950241	Identifier	buffer		1950138	1					
ANR	1950242	Argument	& ctx -> buffer [ ( left_over + add ) & ~127 ]		1950138	1					
ANR	1950243	UnaryOperationExpression	& ctx -> buffer [ ( left_over + add ) & ~127 ]		1950138	0					
ANR	1950244	UnaryOperator	&		1950138	0					
ANR	1950245	ArrayIndexing	ctx -> buffer [ ( left_over + add ) & ~127 ]		1950138	1					
ANR	1950246	PtrMemberAccess	ctx -> buffer		1950138	0					
ANR	1950247	Identifier	ctx		1950138	0					
ANR	1950248	Identifier	buffer		1950138	1					
ANR	1950249	BitAndExpression	( left_over + add ) & ~127		1950138	1		&			
ANR	1950250	AdditiveExpression	left_over + add		1950138	0		+			
ANR	1950251	Identifier	left_over		1950138	0					
ANR	1950252	Identifier	add		1950138	1					
ANR	1950253	Identifier	~127		1950138	1					
ANR	1950254	Argument	( size_t ) ctx -> buflen		1950138	2					
ANR	1950255	CastExpression	( size_t ) ctx -> buflen		1950138	0					
ANR	1950256	CastTarget	size_t		1950138	0					
ANR	1950257	PtrMemberAccess	ctx -> buflen		1950138	1					
ANR	1950258	Identifier	ctx		1950138	0					
ANR	1950259	Identifier	buflen		1950138	1					
ANR	1950260	ExpressionStatement	buffer = ( const char * ) buffer + add	302:2:9532:9568	1950138	5	True				
ANR	1950261	AssignmentExpression	buffer = ( const char * ) buffer + add		1950138	0		=			
ANR	1950262	Identifier	buffer		1950138	0					
ANR	1950263	AdditiveExpression	( const char * ) buffer + add		1950138	1		+			
ANR	1950264	CastExpression	( const char * ) buffer		1950138	0					
ANR	1950265	CastTarget	const char *		1950138	0					
ANR	1950266	Identifier	buffer		1950138	1					
ANR	1950267	Identifier	add		1950138	1					
ANR	1950268	ExpressionStatement	len -= add	303:2:9572:9582	1950138	6	True				
ANR	1950269	AssignmentExpression	len -= add		1950138	0		-=			
ANR	1950270	Identifier	len		1950138	0					
ANR	1950271	Identifier	add		1950138	1					
ANR	1950272	IfStatement	if ( len >= 128 )		1950138	1					
ANR	1950273	Condition	len >= 128	307:5:9636:9645	1950138	0	True				
ANR	1950274	RelationalExpression	len >= 128		1950138	0		>=			
ANR	1950275	Identifier	len		1950138	0					
ANR	1950276	PrimaryExpression	128		1950138	1					
ANR	1950277	CompoundStatement		25:17:704:704	1950138	1					
ANR	1950278	Statement	if	311:2:9766:9767	1950138	0	True				
ANR	1950279	Statement	__GNUC__	311:5:9769:9776	1950138	1	True				
ANR	1950280	Statement	>=	311:14:9778:9779	1950138	2	True				
ANR	1950281	Statement	2	311:17:9781:9781	1950138	3	True				
ANR	1950282	Statement	define	312:3:9786:9791	1950138	4	True				
ANR	1950283	Statement	UNALIGNED_P	312:10:9793:9803	1950138	5	True				
ANR	1950284	Statement	(	312:21:9804:9804	1950138	6	True				
ANR	1950285	Statement	p	312:22:9805:9805	1950138	7	True				
ANR	1950286	Statement	)	312:23:9806:9806	1950138	8	True				
ANR	1950287	Statement	(	312:25:9808:9808	1950138	9	True				
ANR	1950288	Statement	(	312:26:9809:9809	1950138	10	True				
ANR	1950289	Statement	(	312:27:9810:9810	1950138	11	True				
ANR	1950290	Statement	uintptr_t	312:28:9811:9819	1950138	12	True				
ANR	1950291	Statement	)	312:37:9820:9820	1950138	13	True				
ANR	1950292	Statement	p	312:39:9822:9822	1950138	14	True				
ANR	1950293	Statement	)	312:40:9823:9823	1950138	15	True				
ANR	1950294	Statement	%	312:42:9825:9825	1950138	16	True				
ANR	1950295	Statement	__alignof__	312:44:9827:9837	1950138	17	True				
ANR	1950296	Statement	(	312:56:9839:9839	1950138	18	True				
ANR	1950297	Statement	uint64_t	312:57:9840:9847	1950138	19	True				
ANR	1950298	Statement	)	312:65:9848:9848	1950138	20	True				
ANR	1950299	Statement	!=	312:67:9850:9851	1950138	21	True				
ANR	1950300	Statement	0	312:70:9853:9853	1950138	22	True				
ANR	1950301	Statement	)	312:71:9854:9854	1950138	23	True				
ANR	1950302	Statement	UNALIGNED_P	314:10:9873:9883	1950138	24	True				
ANR	1950303	Statement	(	314:21:9884:9884	1950138	25	True				
ANR	1950304	Statement	p	314:22:9885:9885	1950138	26	True				
ANR	1950305	Statement	)	314:23:9886:9886	1950138	27	True				
ANR	1950306	Statement	(	314:25:9888:9888	1950138	28	True				
ANR	1950307	Statement	(	314:26:9889:9889	1950138	29	True				
ANR	1950308	Statement	(	314:27:9890:9890	1950138	30	True				
ANR	1950309	Statement	uintptr_t	314:28:9891:9899	1950138	31	True				
ANR	1950310	Statement	)	314:37:9900:9900	1950138	32	True				
ANR	1950311	Statement	p	314:39:9902:9902	1950138	33	True				
ANR	1950312	Statement	)	314:40:9903:9903	1950138	34	True				
ANR	1950313	Statement	%	314:42:9905:9905	1950138	35	True				
ANR	1950314	Statement	sizeof	314:44:9907:9912	1950138	36	True				
ANR	1950315	Statement	(	314:50:9913:9913	1950138	37	True				
ANR	1950316	Statement	uint64_t	314:51:9914:9921	1950138	38	True				
ANR	1950317	Statement	)	314:59:9922:9922	1950138	39	True				
ANR	1950318	Statement	!=	314:61:9924:9925	1950138	40	True				
ANR	1950319	Statement	0	314:64:9927:9927	1950138	41	True				
ANR	1950320	Statement	)	314:65:9928:9928	1950138	42	True				
ANR	1950321	Statement	endif	315:2:9932:9936	1950138	43	True				
ANR	1950322	IfStatement	if ( UNALIGNED_P ( buffer ) )		1950138	44					
ANR	1950323	Condition	UNALIGNED_P ( buffer )	316:6:9944:9962	1950138	0	True				
ANR	1950324	CallExpression	UNALIGNED_P ( buffer )		1950138	0					
ANR	1950325	Callee	UNALIGNED_P		1950138	0					
ANR	1950326	Identifier	UNALIGNED_P		1950138	0					
ANR	1950327	ArgumentList	buffer		1950138	1					
ANR	1950328	Argument	buffer		1950138	0					
ANR	1950329	Identifier	buffer		1950138	0					
ANR	1950330	WhileStatement	while ( len > 128 )		1950138	1					
ANR	1950331	Condition	len > 128	317:10:9975:9983	1950138	0	True				
ANR	1950332	RelationalExpression	len > 128		1950138	0		>			
ANR	1950333	Identifier	len		1950138	0					
ANR	1950334	PrimaryExpression	128		1950138	1					
ANR	1950335	CompoundStatement		35:21:1042:1042	1950138	1					
ANR	1950336	ExpressionStatement	"sha512_process_block ( memcpy ( ctx -> buffer , buffer , 128 ) , 128 , ctx )"	318:4:9992:10056	1950138	0	True				
ANR	1950337	CallExpression	"sha512_process_block ( memcpy ( ctx -> buffer , buffer , 128 ) , 128 , ctx )"		1950138	0					
ANR	1950338	Callee	sha512_process_block		1950138	0					
ANR	1950339	Identifier	sha512_process_block		1950138	0					
ANR	1950340	ArgumentList	"memcpy ( ctx -> buffer , buffer , 128 )"		1950138	1					
ANR	1950341	Argument	"memcpy ( ctx -> buffer , buffer , 128 )"		1950138	0					
ANR	1950342	CallExpression	"memcpy ( ctx -> buffer , buffer , 128 )"		1950138	0					
ANR	1950343	Callee	memcpy		1950138	0					
ANR	1950344	Identifier	memcpy		1950138	0					
ANR	1950345	ArgumentList	ctx -> buffer		1950138	1					
ANR	1950346	Argument	ctx -> buffer		1950138	0					
ANR	1950347	PtrMemberAccess	ctx -> buffer		1950138	0					
ANR	1950348	Identifier	ctx		1950138	0					
ANR	1950349	Identifier	buffer		1950138	1					
ANR	1950350	Argument	buffer		1950138	1					
ANR	1950351	Identifier	buffer		1950138	0					
ANR	1950352	Argument	128		1950138	2					
ANR	1950353	PrimaryExpression	128		1950138	0					
ANR	1950354	Argument	128		1950138	1					
ANR	1950355	PrimaryExpression	128		1950138	0					
ANR	1950356	Argument	ctx		1950138	2					
ANR	1950357	Identifier	ctx		1950138	0					
ANR	1950358	ExpressionStatement	buffer = ( const char * ) buffer + 128	319:4:10062:10098	1950138	1	True				
ANR	1950359	AssignmentExpression	buffer = ( const char * ) buffer + 128		1950138	0		=			
ANR	1950360	Identifier	buffer		1950138	0					
ANR	1950361	AdditiveExpression	( const char * ) buffer + 128		1950138	1		+			
ANR	1950362	CastExpression	( const char * ) buffer		1950138	0					
ANR	1950363	CastTarget	const char *		1950138	0					
ANR	1950364	Identifier	buffer		1950138	1					
ANR	1950365	PrimaryExpression	128		1950138	1					
ANR	1950366	ExpressionStatement	len -= 128	320:4:10104:10114	1950138	2	True				
ANR	1950367	AssignmentExpression	len -= 128		1950138	0		-=			
ANR	1950368	Identifier	len		1950138	0					
ANR	1950369	PrimaryExpression	128		1950138	1					
ANR	1950370	ElseStatement	else		1950138	0					
ANR	1950371	CompoundStatement		42:2:1193:1193	1950138	0					
ANR	1950372	ExpressionStatement	"sha512_process_block ( buffer , len & ~127 , ctx )"	325:4:10143:10188	1950138	0	True				
ANR	1950373	CallExpression	"sha512_process_block ( buffer , len & ~127 , ctx )"		1950138	0					
ANR	1950374	Callee	sha512_process_block		1950138	0					
ANR	1950375	Identifier	sha512_process_block		1950138	0					
ANR	1950376	ArgumentList	buffer		1950138	1					
ANR	1950377	Argument	buffer		1950138	0					
ANR	1950378	Identifier	buffer		1950138	0					
ANR	1950379	Argument	len & ~127		1950138	1					
ANR	1950380	BitAndExpression	len & ~127		1950138	0		&			
ANR	1950381	Identifier	len		1950138	0					
ANR	1950382	Identifier	~127		1950138	1					
ANR	1950383	Argument	ctx		1950138	2					
ANR	1950384	Identifier	ctx		1950138	0					
ANR	1950385	ExpressionStatement	buffer = ( const char * ) buffer + ( len & ~127 )	326:4:10194:10239	1950138	1	True				
ANR	1950386	AssignmentExpression	buffer = ( const char * ) buffer + ( len & ~127 )		1950138	0		=			
ANR	1950387	Identifier	buffer		1950138	0					
ANR	1950388	AdditiveExpression	( const char * ) buffer + ( len & ~127 )		1950138	1		+			
ANR	1950389	CastExpression	( const char * ) buffer		1950138	0					
ANR	1950390	CastTarget	const char *		1950138	0					
ANR	1950391	Identifier	buffer		1950138	1					
ANR	1950392	BitAndExpression	len & ~127		1950138	1		&			
ANR	1950393	Identifier	len		1950138	0					
ANR	1950394	Identifier	~127		1950138	1					
ANR	1950395	ExpressionStatement	len &= 127	327:4:10245:10255	1950138	2	True				
ANR	1950396	AssignmentExpression	len &= 127		1950138	0		&=			
ANR	1950397	Identifier	len		1950138	0					
ANR	1950398	PrimaryExpression	127		1950138	1					
ANR	1950399	ElseStatement	else		1950138	0					
ANR	1950400	Statement	define	314:3:9866:9871	1950138	0	True				
ANR	1950401	IfStatement	if ( len > 0 )		1950138	2					
ANR	1950402	Condition	len > 0	332:5:10322:10328	1950138	0	True				
ANR	1950403	RelationalExpression	len > 0		1950138	0		>			
ANR	1950404	Identifier	len		1950138	0					
ANR	1950405	PrimaryExpression	0		1950138	1					
ANR	1950406	CompoundStatement		51:2:1391:1429	1950138	1					
ANR	1950407	IdentifierDeclStatement	size_t left_over = ( size_t ) ctx -> buflen ;	333:2:10335:10373	1950138	0	True				
ANR	1950408	IdentifierDecl	left_over = ( size_t ) ctx -> buflen		1950138	0					
ANR	1950409	IdentifierDeclType	size_t		1950138	0					
ANR	1950410	Identifier	left_over		1950138	1					
ANR	1950411	AssignmentExpression	left_over = ( size_t ) ctx -> buflen		1950138	2		=			
ANR	1950412	Identifier	left_over		1950138	0					
ANR	1950413	CastExpression	( size_t ) ctx -> buflen		1950138	1					
ANR	1950414	CastTarget	size_t		1950138	0					
ANR	1950415	PtrMemberAccess	ctx -> buflen		1950138	1					
ANR	1950416	Identifier	ctx		1950138	0					
ANR	1950417	Identifier	buflen		1950138	1					
ANR	1950418	ExpressionStatement	"memcpy ( & ctx -> buffer [ left_over ] , buffer , len )"	335:2:10378:10422	1950138	1	True				
ANR	1950419	CallExpression	"memcpy ( & ctx -> buffer [ left_over ] , buffer , len )"		1950138	0					
ANR	1950420	Callee	memcpy		1950138	0					
ANR	1950421	Identifier	memcpy		1950138	0					
ANR	1950422	ArgumentList	& ctx -> buffer [ left_over ]		1950138	1					
ANR	1950423	Argument	& ctx -> buffer [ left_over ]		1950138	0					
ANR	1950424	UnaryOperationExpression	& ctx -> buffer [ left_over ]		1950138	0					
ANR	1950425	UnaryOperator	&		1950138	0					
ANR	1950426	ArrayIndexing	ctx -> buffer [ left_over ]		1950138	1					
ANR	1950427	PtrMemberAccess	ctx -> buffer		1950138	0					
ANR	1950428	Identifier	ctx		1950138	0					
ANR	1950429	Identifier	buffer		1950138	1					
ANR	1950430	Identifier	left_over		1950138	1					
ANR	1950431	Argument	buffer		1950138	1					
ANR	1950432	Identifier	buffer		1950138	0					
ANR	1950433	Argument	len		1950138	2					
ANR	1950434	Identifier	len		1950138	0					
ANR	1950435	ExpressionStatement	left_over += len	336:2:10426:10442	1950138	2	True				
ANR	1950436	AssignmentExpression	left_over += len		1950138	0		+=			
ANR	1950437	Identifier	left_over		1950138	0					
ANR	1950438	Identifier	len		1950138	1					
ANR	1950439	IfStatement	if ( left_over >= 128 )		1950138	3					
ANR	1950440	Condition	left_over >= 128	337:6:10450:10465	1950138	0	True				
ANR	1950441	RelationalExpression	left_over >= 128		1950138	0		>=			
ANR	1950442	Identifier	left_over		1950138	0					
ANR	1950443	PrimaryExpression	128		1950138	1					
ANR	1950444	CompoundStatement		55:24:1524:1524	1950138	1					
ANR	1950445	ExpressionStatement	"sha512_process_block ( ctx -> buffer , 128 , ctx )"	338:3:10473:10516	1950138	0	True				
ANR	1950446	CallExpression	"sha512_process_block ( ctx -> buffer , 128 , ctx )"		1950138	0					
ANR	1950447	Callee	sha512_process_block		1950138	0					
ANR	1950448	Identifier	sha512_process_block		1950138	0					
ANR	1950449	ArgumentList	ctx -> buffer		1950138	1					
ANR	1950450	Argument	ctx -> buffer		1950138	0					
ANR	1950451	PtrMemberAccess	ctx -> buffer		1950138	0					
ANR	1950452	Identifier	ctx		1950138	0					
ANR	1950453	Identifier	buffer		1950138	1					
ANR	1950454	Argument	128		1950138	1					
ANR	1950455	PrimaryExpression	128		1950138	0					
ANR	1950456	Argument	ctx		1950138	2					
ANR	1950457	Identifier	ctx		1950138	0					
ANR	1950458	ExpressionStatement	left_over -= 128	339:3:10521:10537	1950138	1	True				
ANR	1950459	AssignmentExpression	left_over -= 128		1950138	0		-=			
ANR	1950460	Identifier	left_over		1950138	0					
ANR	1950461	PrimaryExpression	128		1950138	1					
ANR	1950462	ExpressionStatement	"memcpy ( ctx -> buffer , & ctx -> buffer [ 128 ] , left_over )"	340:3:10542:10591	1950138	2	True				
ANR	1950463	CallExpression	"memcpy ( ctx -> buffer , & ctx -> buffer [ 128 ] , left_over )"		1950138	0					
ANR	1950464	Callee	memcpy		1950138	0					
ANR	1950465	Identifier	memcpy		1950138	0					
ANR	1950466	ArgumentList	ctx -> buffer		1950138	1					
ANR	1950467	Argument	ctx -> buffer		1950138	0					
ANR	1950468	PtrMemberAccess	ctx -> buffer		1950138	0					
ANR	1950469	Identifier	ctx		1950138	0					
ANR	1950470	Identifier	buffer		1950138	1					
ANR	1950471	Argument	& ctx -> buffer [ 128 ]		1950138	1					
ANR	1950472	UnaryOperationExpression	& ctx -> buffer [ 128 ]		1950138	0					
ANR	1950473	UnaryOperator	&		1950138	0					
ANR	1950474	ArrayIndexing	ctx -> buffer [ 128 ]		1950138	1					
ANR	1950475	PtrMemberAccess	ctx -> buffer		1950138	0					
ANR	1950476	Identifier	ctx		1950138	0					
ANR	1950477	Identifier	buffer		1950138	1					
ANR	1950478	PrimaryExpression	128		1950138	1					
ANR	1950479	Argument	left_over		1950138	2					
ANR	1950480	Identifier	left_over		1950138	0					
ANR	1950481	ExpressionStatement	ctx -> buflen = left_over	342:2:10599:10622	1950138	4	True				
ANR	1950482	AssignmentExpression	ctx -> buflen = left_over		1950138	0		=			
ANR	1950483	PtrMemberAccess	ctx -> buflen		1950138	0					
ANR	1950484	Identifier	ctx		1950138	0					
ANR	1950485	Identifier	buflen		1950138	1					
ANR	1950486	Identifier	left_over		1950138	1					
ANR	1950487	ReturnType	static void		1950138	1					
ANR	1950488	Identifier	sha512_process_bytes		1950138	2					
ANR	1950489	ParameterList	"const void * buffer , size_t len , struct sha512_ctx * ctx"		1950138	3					
ANR	1950490	Parameter	const void * buffer	283:21:8887:8904	1950138	0	True				
ANR	1950491	ParameterType	const void *		1950138	0					
ANR	1950492	Identifier	buffer		1950138	1					
ANR	1950493	Parameter	size_t len	283:41:8907:8916	1950138	1	True				
ANR	1950494	ParameterType	size_t		1950138	0					
ANR	1950495	Identifier	len		1950138	1					
ANR	1950496	Parameter	struct sha512_ctx * ctx	283:53:8919:8940	1950138	2	True				
ANR	1950497	ParameterType	struct sha512_ctx *		1950138	0					
ANR	1950498	Identifier	ctx		1950138	1					
ANR	1950499	CFGEntryNode	ENTRY		1950138		True				
ANR	1950500	CFGExitNode	EXIT		1950138		True				
ANR	1950501	Symbol	add		1950138						
ANR	1950502	Symbol	~127		1950138						
ANR	1950503	Symbol	len		1950138						
ANR	1950504	Symbol	memcpy		1950138						
ANR	1950505	Symbol	ctx		1950138						
ANR	1950506	Symbol	ctx -> buflen		1950138						
ANR	1950507	Symbol	ctx -> buffer		1950138						
ANR	1950508	Symbol	buffer		1950138						
ANR	1950509	Symbol	* ctx		1950138						
ANR	1950510	Symbol	left_over		1950138						
ANR	1950511	Symbol	UNALIGNED_P		1950138						
ANR	1950512	DeclStmt									
ANR	1950513	Decl							const char	const char [ ]	sha512_salt_prefix
ANR	1950514	DeclStmt									
ANR	1950515	Decl							const char	const char [ ]	sha512_rounds_prefix
ANR	1950516	DeclStmt									
ANR	1950517	Decl							const char	const char [ 64 ]	b64t
ANR	1950518	Function	php_sha512_crypt_r	368:0:11291:19834							
ANR	1950519	FunctionDef	"php_sha512_crypt_r (const char * key , const char * salt , char * buffer , int buflen)"		1950518	0					
ANR	1950520	CompoundStatement		369:80:11378:19834	1950518	0					
ANR	1950521	Statement	if	371:2:11399:11400	1950518	0	True				
ANR	1950522	Statement	_MSC	371:5:11402:11405	1950518	1	True				
ANR	1950523	Statement	<=	371:10:11407:11408	1950518	2	True				
ANR	1950524	Statement	1300	371:13:11410:11413	1950518	3	True				
ANR	1950525	Statement	pragma	372:3:11418:11423	1950518	4	True				
ANR	1950526	Statement	pack	372:10:11425:11428	1950518	5	True				
ANR	1950527	Statement	(	372:14:11429:11429	1950518	6	True				
ANR	1950528	Statement	push	372:15:11430:11433	1950518	7	True				
ANR	1950529	Statement	","	372:19:11434:11434	1950518	8	True				
ANR	1950530	Statement	16	372:21:11436:11437	1950518	9	True				
ANR	1950531	Statement	)	372:23:11438:11438	1950518	10	True				
ANR	1950532	IdentifierDeclStatement	unsigned char alt_result [ 64 ] ;	373:1:11441:11469	1950518	11	True				
ANR	1950533	IdentifierDecl	alt_result [ 64 ]		1950518	0					
ANR	1950534	IdentifierDeclType	unsigned char [ 64 ]		1950518	0					
ANR	1950535	Identifier	alt_result		1950518	1					
ANR	1950536	PrimaryExpression	64		1950518	2					
ANR	1950537	IdentifierDeclStatement	unsigned char temp_result [ 64 ] ;	374:1:11472:11501	1950518	12	True				
ANR	1950538	IdentifierDecl	temp_result [ 64 ]		1950518	0					
ANR	1950539	IdentifierDeclType	unsigned char [ 64 ]		1950518	0					
ANR	1950540	Identifier	temp_result		1950518	1					
ANR	1950541	PrimaryExpression	64		1950518	2					
ANR	1950542	Statement	pragma	375:3:11506:11511	1950518	13	True				
ANR	1950543	Statement	pack	375:10:11513:11516	1950518	14	True				
ANR	1950544	Statement	(	375:14:11517:11517	1950518	15	True				
ANR	1950545	Statement	pop	375:15:11518:11520	1950518	16	True				
ANR	1950546	Statement	)	375:18:11521:11521	1950518	17	True				
ANR	1950547	ReturnType	char *		1950518	1					
ANR	1950548	Identifier	php_sha512_crypt_r		1950518	2					
ANR	1950549	ParameterList	"const char * key , const char * salt , char * buffer , int buflen"		1950518	3					
ANR	1950550	Parameter	const char * key	369:19:11317:11331	1950518	0	True				
ANR	1950551	ParameterType	const char *		1950518	0					
ANR	1950552	Identifier	key		1950518	1					
ANR	1950553	Parameter	const char * salt	369:36:11334:11349	1950518	1	True				
ANR	1950554	ParameterType	const char *		1950518	0					
ANR	1950555	Identifier	salt		1950518	1					
ANR	1950556	Parameter	char * buffer	369:54:11352:11363	1950518	2	True				
ANR	1950557	ParameterType	char *		1950518	0					
ANR	1950558	Identifier	buffer		1950518	1					
ANR	1950559	Parameter	int buflen	369:68:11366:11375	1950518	3	True				
ANR	1950560	ParameterType	int		1950518	0					
ANR	1950561	Identifier	buflen		1950518	1					
ANR	1950562	CFGEntryNode	ENTRY		1950518		True				
ANR	1950563	CFGExitNode	EXIT		1950518		True				
ANR	1950564	Symbol	salt		1950518						
ANR	1950565	Symbol	temp_result		1950518						
ANR	1950566	Symbol	buflen		1950518						
ANR	1950567	Symbol	buffer		1950518						
ANR	1950568	Symbol	alt_result		1950518						
ANR	1950569	Symbol	key		1950518						
ANR	1950570	Function	php_sha512_crypt	640:0:19918:20591							
ANR	1950571	FunctionDef	"php_sha512_crypt (const char * key , const char * salt)"		1950570	0					
ANR	1950572	CompoundStatement		641:52:19977:20591	1950570	0					
ANR	1950573	Statement	static	646:1:20195:20200	1950570	0	True				
ANR	1950574	IdentifierDeclStatement	char * buffer ;	646:8:20202:20214	1950570	1	True				
ANR	1950575	IdentifierDecl	* buffer		1950570	0					
ANR	1950576	IdentifierDeclType	char *		1950570	0					
ANR	1950577	Identifier	buffer		1950570	1					
ANR	1950578	Statement	static	647:1:20217:20222	1950570	2	True				
ANR	1950579	IdentifierDeclStatement	int buflen ;	647:8:20224:20234	1950570	3	True				
ANR	1950580	IdentifierDecl	buflen		1950570	0					
ANR	1950581	IdentifierDeclType	int		1950570	0					
ANR	1950582	Identifier	buflen		1950570	1					
ANR	1950583	IdentifierDeclStatement	int needed = ( int ) ( sizeof ( sha512_salt_prefix ) - 1 + sizeof ( sha512_rounds_prefix ) + 9 + 1 + strlen ( salt ) + 1 + 86 + 1 ) ;	648:1:20237:20358	1950570	4	True				
ANR	1950584	IdentifierDecl	needed = ( int ) ( sizeof ( sha512_salt_prefix ) - 1 + sizeof ( sha512_rounds_prefix ) + 9 + 1 + strlen ( salt ) + 1 + 86 + 1 )		1950570	0					
ANR	1950585	IdentifierDeclType	int		1950570	0					
ANR	1950586	Identifier	needed		1950570	1					
ANR	1950587	AssignmentExpression	needed = ( int ) ( sizeof ( sha512_salt_prefix ) - 1 + sizeof ( sha512_rounds_prefix ) + 9 + 1 + strlen ( salt ) + 1 + 86 + 1 )		1950570	2		=			
ANR	1950588	Identifier	needed		1950570	0					
ANR	1950589	CastExpression	( int ) ( sizeof ( sha512_salt_prefix ) - 1 + sizeof ( sha512_rounds_prefix ) + 9 + 1 + strlen ( salt ) + 1 + 86 + 1 )		1950570	1					
ANR	1950590	CastTarget	int		1950570	0					
ANR	1950591	AdditiveExpression	sizeof ( sha512_salt_prefix ) - 1 + sizeof ( sha512_rounds_prefix ) + 9 + 1 + strlen ( salt ) + 1 + 86 + 1		1950570	1		-			
ANR	1950592	SizeofExpression	sizeof ( sha512_salt_prefix )		1950570	0					
ANR	1950593	Sizeof	sizeof		1950570	0					
ANR	1950594	SizeofOperand	sha512_salt_prefix		1950570	1					
ANR	1950595	AdditiveExpression	1 + sizeof ( sha512_rounds_prefix ) + 9 + 1 + strlen ( salt ) + 1 + 86 + 1		1950570	1		+			
ANR	1950596	PrimaryExpression	1		1950570	0					
ANR	1950597	AdditiveExpression	sizeof ( sha512_rounds_prefix ) + 9 + 1 + strlen ( salt ) + 1 + 86 + 1		1950570	1		+			
ANR	1950598	SizeofExpression	sizeof ( sha512_rounds_prefix )		1950570	0					
ANR	1950599	Sizeof	sizeof		1950570	0					
ANR	1950600	SizeofOperand	sha512_rounds_prefix		1950570	1					
ANR	1950601	AdditiveExpression	9 + 1 + strlen ( salt ) + 1 + 86 + 1		1950570	1		+			
ANR	1950602	PrimaryExpression	9		1950570	0					
ANR	1950603	AdditiveExpression	1 + strlen ( salt ) + 1 + 86 + 1		1950570	1		+			
ANR	1950604	PrimaryExpression	1		1950570	0					
ANR	1950605	AdditiveExpression	strlen ( salt ) + 1 + 86 + 1		1950570	1		+			
ANR	1950606	CallExpression	strlen ( salt )		1950570	0					
ANR	1950607	Callee	strlen		1950570	0					
ANR	1950608	Identifier	strlen		1950570	0					
ANR	1950609	ArgumentList	salt		1950570	1					
ANR	1950610	Argument	salt		1950570	0					
ANR	1950611	Identifier	salt		1950570	0					
ANR	1950612	AdditiveExpression	1 + 86 + 1		1950570	1		+			
ANR	1950613	PrimaryExpression	1		1950570	0					
ANR	1950614	AdditiveExpression	86 + 1		1950570	1		+			
ANR	1950615	PrimaryExpression	86		1950570	0					
ANR	1950616	PrimaryExpression	1		1950570	1					
ANR	1950617	IfStatement	if ( buflen < needed )		1950570	5					
ANR	1950618	Condition	buflen < needed	652:5:20366:20380	1950570	0	True				
ANR	1950619	RelationalExpression	buflen < needed		1950570	0		<			
ANR	1950620	Identifier	buflen		1950570	0					
ANR	1950621	Identifier	needed		1950570	1					
ANR	1950622	CompoundStatement		13:2:409:460	1950570	1					
ANR	1950623	IdentifierDeclStatement	"char * new_buffer = ( char * ) realloc ( buffer , needed ) ;"	653:2:20387:20438	1950570	0	True				
ANR	1950624	IdentifierDecl	"* new_buffer = ( char * ) realloc ( buffer , needed )"		1950570	0					
ANR	1950625	IdentifierDeclType	char *		1950570	0					
ANR	1950626	Identifier	new_buffer		1950570	1					
ANR	1950627	AssignmentExpression	"* new_buffer = ( char * ) realloc ( buffer , needed )"		1950570	2		=			
ANR	1950628	Identifier	new_buffer		1950570	0					
ANR	1950629	CastExpression	"( char * ) realloc ( buffer , needed )"		1950570	1					
ANR	1950630	CastTarget	char *		1950570	0					
ANR	1950631	CallExpression	"realloc ( buffer , needed )"		1950570	1					
ANR	1950632	Callee	realloc		1950570	0					
ANR	1950633	Identifier	realloc		1950570	0					
ANR	1950634	ArgumentList	buffer		1950570	1					
ANR	1950635	Argument	buffer		1950570	0					
ANR	1950636	Identifier	buffer		1950570	0					
ANR	1950637	Argument	needed		1950570	1					
ANR	1950638	Identifier	needed		1950570	0					
ANR	1950639	IfStatement	if ( new_buffer == NULL )		1950570	1					
ANR	1950640	Condition	new_buffer == NULL	654:6:20446:20463	1950570	0	True				
ANR	1950641	EqualityExpression	new_buffer == NULL		1950570	0		==			
ANR	1950642	Identifier	new_buffer		1950570	0					
ANR	1950643	Identifier	NULL		1950570	1					
ANR	1950644	CompoundStatement		14:26:488:488	1950570	1					
ANR	1950645	ReturnStatement	return NULL ;	655:3:20471:20482	1950570	0	True				
ANR	1950646	Identifier	NULL		1950570	0					
ANR	1950647	ExpressionStatement	buffer = new_buffer	658:2:20491:20510	1950570	2	True				
ANR	1950648	AssignmentExpression	buffer = new_buffer		1950570	0		=			
ANR	1950649	Identifier	buffer		1950570	0					
ANR	1950650	Identifier	new_buffer		1950570	1					
ANR	1950651	ExpressionStatement	buflen = needed	659:2:20514:20529	1950570	3	True				
ANR	1950652	AssignmentExpression	buflen = needed		1950570	0		=			
ANR	1950653	Identifier	buflen		1950570	0					
ANR	1950654	Identifier	needed		1950570	1					
ANR	1950655	ReturnStatement	"return php_sha512_crypt_r ( key , salt , buffer , buflen ) ;"	662:1:20536:20589	1950570	6	True				
ANR	1950656	CallExpression	"php_sha512_crypt_r ( key , salt , buffer , buflen )"		1950570	0					
ANR	1950657	Callee	php_sha512_crypt_r		1950570	0					
ANR	1950658	Identifier	php_sha512_crypt_r		1950570	0					
ANR	1950659	ArgumentList	key		1950570	1					
ANR	1950660	Argument	key		1950570	0					
ANR	1950661	Identifier	key		1950570	0					
ANR	1950662	Argument	salt		1950570	1					
ANR	1950663	Identifier	salt		1950570	0					
ANR	1950664	Argument	buffer		1950570	2					
ANR	1950665	Identifier	buffer		1950570	0					
ANR	1950666	Argument	buflen		1950570	3					
ANR	1950667	Identifier	buflen		1950570	0					
ANR	1950668	ReturnType	char *		1950570	1					
ANR	1950669	Identifier	php_sha512_crypt		1950570	2					
ANR	1950670	ParameterList	"const char * key , const char * salt"		1950570	3					
ANR	1950671	Parameter	const char * key	641:17:19942:19956	1950570	0	True				
ANR	1950672	ParameterType	const char *		1950570	0					
ANR	1950673	Identifier	key		1950570	1					
ANR	1950674	Parameter	const char * salt	641:34:19959:19974	1950570	1	True				
ANR	1950675	ParameterType	const char *		1950570	0					
ANR	1950676	Identifier	salt		1950570	1					
ANR	1950677	CFGEntryNode	ENTRY		1950570		True				
ANR	1950678	CFGExitNode	EXIT		1950570		True				
ANR	1950679	Symbol	strlen		1950570						
ANR	1950680	Symbol	php_sha512_crypt_r		1950570						
ANR	1950681	Symbol	salt		1950570						
ANR	1950682	Symbol	NULL		1950570						
ANR	1950683	Symbol	needed		1950570						
ANR	1950684	Symbol	buflen		1950570						
ANR	1950685	Symbol	new_buffer		1950570						
ANR	1950686	Symbol	buffer		1950570						
ANR	1950687	Symbol	realloc		1950570						
ANR	1950688	Symbol	key		1950570						
ANR	1950689	ClassDef	<unnamed>	666:13:20619:23815							
ANR	1950690	DeclStmt									
ANR	1950691	Decl							const char	const char *	input
ANR	1950692	DeclStmt									
ANR	1950693	Decl							const char	const char [ 64 ]	result
ANR	1950694	DeclStmt									
ANR	1950695	Decl								 [ ]	tests
ANR	1950696	ClassDef	<unnamed>	725:13:23884:25352							
ANR	1950697	DeclStmt									
ANR	1950698	Decl							const char	const char *	salt
ANR	1950699	DeclStmt									
ANR	1950700	Decl							const char	const char *	input
ANR	1950701	DeclStmt									
ANR	1950702	Decl							const char	const char *	expected
ANR	1950703	DeclStmt									
ANR	1950704	Decl								 [ ]	tests2
ANR	1950705	Function	main	759:0:25411:27073							
ANR	1950706	FunctionDef	main ()		1950705	0					
ANR	1950707	CompoundStatement		759:16:25427:27073	1950705	0					
ANR	1950708	IdentifierDeclStatement	struct sha512_ctx ctx ;	760:1:25430:25451	1950705	0	True				
ANR	1950709	IdentifierDecl	ctx		1950705	0					
ANR	1950710	IdentifierDeclType	struct sha512_ctx		1950705	0					
ANR	1950711	Identifier	ctx		1950705	1					
ANR	1950712	IdentifierDeclStatement	char sum [ 64 ] ;	761:1:25454:25466	1950705	1	True				
ANR	1950713	IdentifierDecl	sum [ 64 ]		1950705	0					
ANR	1950714	IdentifierDeclType	char [ 64 ]		1950705	0					
ANR	1950715	Identifier	sum		1950705	1					
ANR	1950716	PrimaryExpression	64		1950705	2					
ANR	1950717	IdentifierDeclStatement	int result = 0 ;	762:1:25469:25483	1950705	2	True				
ANR	1950718	IdentifierDecl	result = 0		1950705	0					
ANR	1950719	IdentifierDeclType	int		1950705	0					
ANR	1950720	Identifier	result		1950705	1					
ANR	1950721	AssignmentExpression	result = 0		1950705	2		=			
ANR	1950722	Identifier	result		1950705	0					
ANR	1950723	PrimaryExpression	0		1950705	1					
ANR	1950724	IdentifierDeclStatement	int cnt ;	763:1:25486:25493	1950705	3	True				
ANR	1950725	IdentifierDecl	cnt		1950705	0					
ANR	1950726	IdentifierDeclType	int		1950705	0					
ANR	1950727	Identifier	cnt		1950705	1					
ANR	1950728	IdentifierDeclStatement	int i ;	764:1:25496:25501	1950705	4	True				
ANR	1950729	IdentifierDecl	i		1950705	0					
ANR	1950730	IdentifierDeclType	int		1950705	0					
ANR	1950731	Identifier	i		1950705	1					
ANR	1950732	IdentifierDeclStatement	char buf [ 1000 ] ;	765:1:25504:25518	1950705	5	True				
ANR	1950733	IdentifierDecl	buf [ 1000 ]		1950705	0					
ANR	1950734	IdentifierDeclType	char [ 1000 ]		1950705	0					
ANR	1950735	Identifier	buf		1950705	1					
ANR	1950736	PrimaryExpression	1000		1950705	2					
ANR	1950737	Statement	static	766:1:25521:25526	1950705	6	True				
ANR	1950738	Statement	const	766:8:25528:25532	1950705	7	True				
ANR	1950739	Statement	char	766:14:25534:25537	1950705	8	True				
ANR	1950740	Statement	expected	766:19:25539:25546	1950705	9	True				
ANR	1950741	Statement	[	766:27:25547:25547	1950705	10	True				
ANR	1950742	Statement	64	766:28:25548:25549	1950705	11	True				
ANR	1950743	Statement	]	766:30:25550:25550	1950705	12	True				
ANR	1950744	Statement	=	766:32:25552:25552	1950705	13	True				
ANR	1950745	Statement	"""\\xe7\\x18\\x48\\x3d\\x0c\\xe7\\x69\\x64\\x4e\\x2e\\x42\\xc7\\xbc\\x15\\xb4\\x63"""	767:2:25556:25621	1950705	14	True				
ANR	1950746	Statement	"""\\x8e\\x1f\\x98\\xb1\\x3b\\x20\\x44\\x28\\x56\\x32\\xa8\\x03\\xaf\\xa9\\x73\\xeb"""	768:2:25625:25690	1950705	15	True				
ANR	1950747	Statement	"""\\xde\\x0f\\xf2\\x44\\x87\\x7e\\xa6\\x0a\\x4c\\xb0\\x43\\x2c\\xe5\\x77\\xc3\\x1b"""	769:2:25694:25759	1950705	16	True				
ANR	1950748	ExpressionStatement	"""\\xeb\\x00\\x9c\\x5c\\x2c\\x49\\xaa\\x2e\\x4e\\xad\\xb2\\x17\\xad\\x8c\\xc0\\x9b"""	770:2:25763:25829	1950705	17	True				
ANR	1950749	PrimaryExpression	"""\\xeb\\x00\\x9c\\x5c\\x2c\\x49\\xaa\\x2e\\x4e\\xad\\xb2\\x17\\xad\\x8c\\xc0\\x9b"""		1950705	0					
ANR	1950750	ForStatement	for ( cnt = 0 ; cnt < ( int ) ntests ; ++ cnt )		1950705	18					
ANR	1950751	ForInit	cnt = 0 ;	772:6:25838:25845	1950705	0	True				
ANR	1950752	AssignmentExpression	cnt = 0		1950705	0		=			
ANR	1950753	Identifier	cnt		1950705	0					
ANR	1950754	PrimaryExpression	0		1950705	1					
ANR	1950755	Condition	cnt < ( int ) ntests	772:15:25847:25864	1950705	1	True				
ANR	1950756	RelationalExpression	cnt < ( int ) ntests		1950705	0		<			
ANR	1950757	Identifier	cnt		1950705	0					
ANR	1950758	CastExpression	( int ) ntests		1950705	1					
ANR	1950759	CastTarget	int		1950705	0					
ANR	1950760	Identifier	ntests		1950705	1					
ANR	1950761	UnaryExpression	++ cnt	772:35:25867:25871	1950705	2	True				
ANR	1950762	IncDec	++		1950705	0					
ANR	1950763	Identifier	cnt		1950705	1					
ANR	1950764	CompoundStatement		14:42:446:446	1950705	3					
ANR	1950765	ExpressionStatement	sha512_init_ctx ( & ctx )	773:2:25878:25900	1950705	0	True				
ANR	1950766	CallExpression	sha512_init_ctx ( & ctx )		1950705	0					
ANR	1950767	Callee	sha512_init_ctx		1950705	0					
ANR	1950768	Identifier	sha512_init_ctx		1950705	0					
ANR	1950769	ArgumentList	& ctx		1950705	1					
ANR	1950770	Argument	& ctx		1950705	0					
ANR	1950771	UnaryOperationExpression	& ctx		1950705	0					
ANR	1950772	UnaryOperator	&		1950705	0					
ANR	1950773	Identifier	ctx		1950705	1					
ANR	1950774	ExpressionStatement	"sha512_process_bytes ( tests [ cnt ] . input , strlen ( tests [ cnt ] . input ) , & ctx )"	774:2:25904:25976	1950705	1	True				
ANR	1950775	CallExpression	"sha512_process_bytes ( tests [ cnt ] . input , strlen ( tests [ cnt ] . input ) , & ctx )"		1950705	0					
ANR	1950776	Callee	sha512_process_bytes		1950705	0					
ANR	1950777	Identifier	sha512_process_bytes		1950705	0					
ANR	1950778	ArgumentList	tests [ cnt ] . input		1950705	1					
ANR	1950779	Argument	tests [ cnt ] . input		1950705	0					
ANR	1950780	MemberAccess	tests [ cnt ] . input		1950705	0					
ANR	1950781	ArrayIndexing	tests [ cnt ]		1950705	0					
ANR	1950782	Identifier	tests		1950705	0					
ANR	1950783	Identifier	cnt		1950705	1					
ANR	1950784	Identifier	input		1950705	1					
ANR	1950785	Argument	strlen ( tests [ cnt ] . input )		1950705	1					
ANR	1950786	CallExpression	strlen ( tests [ cnt ] . input )		1950705	0					
ANR	1950787	Callee	strlen		1950705	0					
ANR	1950788	Identifier	strlen		1950705	0					
ANR	1950789	ArgumentList	tests [ cnt ] . input		1950705	1					
ANR	1950790	Argument	tests [ cnt ] . input		1950705	0					
ANR	1950791	MemberAccess	tests [ cnt ] . input		1950705	0					
ANR	1950792	ArrayIndexing	tests [ cnt ]		1950705	0					
ANR	1950793	Identifier	tests		1950705	0					
ANR	1950794	Identifier	cnt		1950705	1					
ANR	1950795	Identifier	input		1950705	1					
ANR	1950796	Argument	& ctx		1950705	2					
ANR	1950797	UnaryOperationExpression	& ctx		1950705	0					
ANR	1950798	UnaryOperator	&		1950705	0					
ANR	1950799	Identifier	ctx		1950705	1					
ANR	1950800	ExpressionStatement	"sha512_finish_ctx ( & ctx , sum )"	775:2:25980:26009	1950705	2	True				
ANR	1950801	CallExpression	"sha512_finish_ctx ( & ctx , sum )"		1950705	0					
ANR	1950802	Callee	sha512_finish_ctx		1950705	0					
ANR	1950803	Identifier	sha512_finish_ctx		1950705	0					
ANR	1950804	ArgumentList	& ctx		1950705	1					
ANR	1950805	Argument	& ctx		1950705	0					
ANR	1950806	UnaryOperationExpression	& ctx		1950705	0					
ANR	1950807	UnaryOperator	&		1950705	0					
ANR	1950808	Identifier	ctx		1950705	1					
ANR	1950809	Argument	sum		1950705	1					
ANR	1950810	Identifier	sum		1950705	0					
ANR	1950811	IfStatement	"if ( memcmp ( tests [ cnt ] . result , sum , 64 ) != 0 )"		1950705	3					
ANR	1950812	Condition	"memcmp ( tests [ cnt ] . result , sum , 64 ) != 0"	776:6:26017:26056	1950705	0	True				
ANR	1950813	EqualityExpression	"memcmp ( tests [ cnt ] . result , sum , 64 ) != 0"		1950705	0		!=			
ANR	1950814	CallExpression	"memcmp ( tests [ cnt ] . result , sum , 64 )"		1950705	0					
ANR	1950815	Callee	memcmp		1950705	0					
ANR	1950816	Identifier	memcmp		1950705	0					
ANR	1950817	ArgumentList	tests [ cnt ] . result		1950705	1					
ANR	1950818	Argument	tests [ cnt ] . result		1950705	0					
ANR	1950819	MemberAccess	tests [ cnt ] . result		1950705	0					
ANR	1950820	ArrayIndexing	tests [ cnt ]		1950705	0					
ANR	1950821	Identifier	tests		1950705	0					
ANR	1950822	Identifier	cnt		1950705	1					
ANR	1950823	Identifier	result		1950705	1					
ANR	1950824	Argument	sum		1950705	1					
ANR	1950825	Identifier	sum		1950705	0					
ANR	1950826	Argument	64		1950705	2					
ANR	1950827	PrimaryExpression	64		1950705	0					
ANR	1950828	PrimaryExpression	0		1950705	1					
ANR	1950829	CompoundStatement		18:48:631:631	1950705	1					
ANR	1950830	ExpressionStatement	"printf ( ""test %d run %d failed\\n"" , cnt , 1 )"	777:3:26064:26106	1950705	0	True				
ANR	1950831	CallExpression	"printf ( ""test %d run %d failed\\n"" , cnt , 1 )"		1950705	0					
ANR	1950832	Callee	printf		1950705	0					
ANR	1950833	Identifier	printf		1950705	0					
ANR	1950834	ArgumentList	"""test %d run %d failed\\n"""		1950705	1					
ANR	1950835	Argument	"""test %d run %d failed\\n"""		1950705	0					
ANR	1950836	PrimaryExpression	"""test %d run %d failed\\n"""		1950705	0					
ANR	1950837	Argument	cnt		1950705	1					
ANR	1950838	Identifier	cnt		1950705	0					
ANR	1950839	Argument	1		1950705	2					
ANR	1950840	PrimaryExpression	1		1950705	0					
ANR	1950841	ExpressionStatement	result = 1	778:3:26111:26121	1950705	1	True				
ANR	1950842	AssignmentExpression	result = 1		1950705	0		=			
ANR	1950843	Identifier	result		1950705	0					
ANR	1950844	PrimaryExpression	1		1950705	1					
ANR	1950845	ExpressionStatement	sha512_init_ctx ( & ctx )	781:2:26130:26152	1950705	4	True				
ANR	1950846	CallExpression	sha512_init_ctx ( & ctx )		1950705	0					
ANR	1950847	Callee	sha512_init_ctx		1950705	0					
ANR	1950848	Identifier	sha512_init_ctx		1950705	0					
ANR	1950849	ArgumentList	& ctx		1950705	1					
ANR	1950850	Argument	& ctx		1950705	0					
ANR	1950851	UnaryOperationExpression	& ctx		1950705	0					
ANR	1950852	UnaryOperator	&		1950705	0					
ANR	1950853	Identifier	ctx		1950705	1					
ANR	1950854	ForStatement	for ( i = 0 ; tests [ cnt ] . input [ i ] != '\\0' ; ++ i )		1950705	5					
ANR	1950855	ForInit	i = 0 ;	782:7:26161:26166	1950705	0	True				
ANR	1950856	AssignmentExpression	i = 0		1950705	0		=			
ANR	1950857	Identifier	i		1950705	0					
ANR	1950858	PrimaryExpression	0		1950705	1					
ANR	1950859	Condition	tests [ cnt ] . input [ i ] != '\\0'	782:14:26168:26194	1950705	1	True				
ANR	1950860	EqualityExpression	tests [ cnt ] . input [ i ] != '\\0'		1950705	0		!=			
ANR	1950861	ArrayIndexing	tests [ cnt ] . input [ i ]		1950705	0					
ANR	1950862	MemberAccess	tests [ cnt ] . input		1950705	0					
ANR	1950863	ArrayIndexing	tests [ cnt ]		1950705	0					
ANR	1950864	Identifier	tests		1950705	0					
ANR	1950865	Identifier	cnt		1950705	1					
ANR	1950866	Identifier	input		1950705	1					
ANR	1950867	Identifier	i		1950705	1					
ANR	1950868	PrimaryExpression	'\\0'		1950705	1					
ANR	1950869	UnaryExpression	++ i	782:43:26197:26199	1950705	2	True				
ANR	1950870	IncDec	++		1950705	0					
ANR	1950871	Identifier	i		1950705	1					
ANR	1950872	CompoundStatement		24:48:774:774	1950705	3					
ANR	1950873	ExpressionStatement	"sha512_process_bytes ( & tests [ cnt ] . input [ i ] , 1 , & ctx )"	783:3:26207:26259	1950705	0	True				
ANR	1950874	CallExpression	"sha512_process_bytes ( & tests [ cnt ] . input [ i ] , 1 , & ctx )"		1950705	0					
ANR	1950875	Callee	sha512_process_bytes		1950705	0					
ANR	1950876	Identifier	sha512_process_bytes		1950705	0					
ANR	1950877	ArgumentList	& tests [ cnt ] . input [ i ]		1950705	1					
ANR	1950878	Argument	& tests [ cnt ] . input [ i ]		1950705	0					
ANR	1950879	UnaryOperationExpression	& tests [ cnt ] . input [ i ]		1950705	0					
ANR	1950880	UnaryOperator	&		1950705	0					
ANR	1950881	ArrayIndexing	tests [ cnt ] . input [ i ]		1950705	1					
ANR	1950882	MemberAccess	tests [ cnt ] . input		1950705	0					
ANR	1950883	ArrayIndexing	tests [ cnt ]		1950705	0					
ANR	1950884	Identifier	tests		1950705	0					
ANR	1950885	Identifier	cnt		1950705	1					
ANR	1950886	Identifier	input		1950705	1					
ANR	1950887	Identifier	i		1950705	1					
ANR	1950888	Argument	1		1950705	1					
ANR	1950889	PrimaryExpression	1		1950705	0					
ANR	1950890	Argument	& ctx		1950705	2					
ANR	1950891	UnaryOperationExpression	& ctx		1950705	0					
ANR	1950892	UnaryOperator	&		1950705	0					
ANR	1950893	Identifier	ctx		1950705	1					
ANR	1950894	ExpressionStatement	"sha512_finish_ctx ( & ctx , sum )"	785:2:26267:26296	1950705	6	True				
ANR	1950895	CallExpression	"sha512_finish_ctx ( & ctx , sum )"		1950705	0					
ANR	1950896	Callee	sha512_finish_ctx		1950705	0					
ANR	1950897	Identifier	sha512_finish_ctx		1950705	0					
ANR	1950898	ArgumentList	& ctx		1950705	1					
ANR	1950899	Argument	& ctx		1950705	0					
ANR	1950900	UnaryOperationExpression	& ctx		1950705	0					
ANR	1950901	UnaryOperator	&		1950705	0					
ANR	1950902	Identifier	ctx		1950705	1					
ANR	1950903	Argument	sum		1950705	1					
ANR	1950904	Identifier	sum		1950705	0					
ANR	1950905	IfStatement	"if ( memcmp ( tests [ cnt ] . result , sum , 64 ) != 0 )"		1950705	7					
ANR	1950906	Condition	"memcmp ( tests [ cnt ] . result , sum , 64 ) != 0"	786:6:26304:26343	1950705	0	True				
ANR	1950907	EqualityExpression	"memcmp ( tests [ cnt ] . result , sum , 64 ) != 0"		1950705	0		!=			
ANR	1950908	CallExpression	"memcmp ( tests [ cnt ] . result , sum , 64 )"		1950705	0					
ANR	1950909	Callee	memcmp		1950705	0					
ANR	1950910	Identifier	memcmp		1950705	0					
ANR	1950911	ArgumentList	tests [ cnt ] . result		1950705	1					
ANR	1950912	Argument	tests [ cnt ] . result		1950705	0					
ANR	1950913	MemberAccess	tests [ cnt ] . result		1950705	0					
ANR	1950914	ArrayIndexing	tests [ cnt ]		1950705	0					
ANR	1950915	Identifier	tests		1950705	0					
ANR	1950916	Identifier	cnt		1950705	1					
ANR	1950917	Identifier	result		1950705	1					
ANR	1950918	Argument	sum		1950705	1					
ANR	1950919	Identifier	sum		1950705	0					
ANR	1950920	Argument	64		1950705	2					
ANR	1950921	PrimaryExpression	64		1950705	0					
ANR	1950922	PrimaryExpression	0		1950705	1					
ANR	1950923	CompoundStatement		28:48:918:918	1950705	1					
ANR	1950924	ExpressionStatement	"printf ( ""test %d run %d failed\\n"" , cnt , 2 )"	787:3:26351:26393	1950705	0	True				
ANR	1950925	CallExpression	"printf ( ""test %d run %d failed\\n"" , cnt , 2 )"		1950705	0					
ANR	1950926	Callee	printf		1950705	0					
ANR	1950927	Identifier	printf		1950705	0					
ANR	1950928	ArgumentList	"""test %d run %d failed\\n"""		1950705	1					
ANR	1950929	Argument	"""test %d run %d failed\\n"""		1950705	0					
ANR	1950930	PrimaryExpression	"""test %d run %d failed\\n"""		1950705	0					
ANR	1950931	Argument	cnt		1950705	1					
ANR	1950932	Identifier	cnt		1950705	0					
ANR	1950933	Argument	2		1950705	2					
ANR	1950934	PrimaryExpression	2		1950705	0					
ANR	1950935	ExpressionStatement	result = 1	788:3:26398:26408	1950705	1	True				
ANR	1950936	AssignmentExpression	result = 1		1950705	0		=			
ANR	1950937	Identifier	result		1950705	0					
ANR	1950938	PrimaryExpression	1		1950705	1					
ANR	1950939	ExpressionStatement	"memset ( buf , 'a' , sizeof ( buf ) )"	794:1:26471:26502	1950705	19	True				
ANR	1950940	CallExpression	"memset ( buf , 'a' , sizeof ( buf ) )"		1950705	0					
ANR	1950941	Callee	memset		1950705	0					
ANR	1950942	Identifier	memset		1950705	0					
ANR	1950943	ArgumentList	buf		1950705	1					
ANR	1950944	Argument	buf		1950705	0					
ANR	1950945	Identifier	buf		1950705	0					
ANR	1950946	Argument	'a'		1950705	1					
ANR	1950947	PrimaryExpression	'a'		1950705	0					
ANR	1950948	Argument	sizeof ( buf )		1950705	2					
ANR	1950949	SizeofExpression	sizeof ( buf )		1950705	0					
ANR	1950950	Sizeof	sizeof		1950705	0					
ANR	1950951	SizeofOperand	buf		1950705	1					
ANR	1950952	ExpressionStatement	sha512_init_ctx ( & ctx )	795:1:26505:26527	1950705	20	True				
ANR	1950953	CallExpression	sha512_init_ctx ( & ctx )		1950705	0					
ANR	1950954	Callee	sha512_init_ctx		1950705	0					
ANR	1950955	Identifier	sha512_init_ctx		1950705	0					
ANR	1950956	ArgumentList	& ctx		1950705	1					
ANR	1950957	Argument	& ctx		1950705	0					
ANR	1950958	UnaryOperationExpression	& ctx		1950705	0					
ANR	1950959	UnaryOperator	&		1950705	0					
ANR	1950960	Identifier	ctx		1950705	1					
ANR	1950961	ForStatement	for ( i = 0 ; i < 1000 ; ++ i )		1950705	21					
ANR	1950962	ForInit	i = 0 ;	796:6:26535:26540	1950705	0	True				
ANR	1950963	AssignmentExpression	i = 0		1950705	0		=			
ANR	1950964	Identifier	i		1950705	0					
ANR	1950965	PrimaryExpression	0		1950705	1					
ANR	1950966	Condition	i < 1000	796:13:26542:26549	1950705	1	True				
ANR	1950967	RelationalExpression	i < 1000		1950705	0		<			
ANR	1950968	Identifier	i		1950705	0					
ANR	1950969	PrimaryExpression	1000		1950705	1					
ANR	1950970	UnaryExpression	++ i	796:23:26552:26554	1950705	2	True				
ANR	1950971	IncDec	++		1950705	0					
ANR	1950972	Identifier	i		1950705	1					
ANR	1950973	CompoundStatement		38:28:1129:1129	1950705	3					
ANR	1950974	ExpressionStatement	"sha512_process_bytes ( buf , sizeof ( buf ) , & ctx )"	797:2:26561:26607	1950705	0	True				
ANR	1950975	CallExpression	"sha512_process_bytes ( buf , sizeof ( buf ) , & ctx )"		1950705	0					
ANR	1950976	Callee	sha512_process_bytes		1950705	0					
ANR	1950977	Identifier	sha512_process_bytes		1950705	0					
ANR	1950978	ArgumentList	buf		1950705	1					
ANR	1950979	Argument	buf		1950705	0					
ANR	1950980	Identifier	buf		1950705	0					
ANR	1950981	Argument	sizeof ( buf )		1950705	1					
ANR	1950982	SizeofExpression	sizeof ( buf )		1950705	0					
ANR	1950983	Sizeof	sizeof		1950705	0					
ANR	1950984	SizeofOperand	buf		1950705	1					
ANR	1950985	Argument	& ctx		1950705	2					
ANR	1950986	UnaryOperationExpression	& ctx		1950705	0					
ANR	1950987	UnaryOperator	&		1950705	0					
ANR	1950988	Identifier	ctx		1950705	1					
ANR	1950989	ExpressionStatement	"sha512_finish_ctx ( & ctx , sum )"	800:1:26614:26643	1950705	22	True				
ANR	1950990	CallExpression	"sha512_finish_ctx ( & ctx , sum )"		1950705	0					
ANR	1950991	Callee	sha512_finish_ctx		1950705	0					
ANR	1950992	Identifier	sha512_finish_ctx		1950705	0					
ANR	1950993	ArgumentList	& ctx		1950705	1					
ANR	1950994	Argument	& ctx		1950705	0					
ANR	1950995	UnaryOperationExpression	& ctx		1950705	0					
ANR	1950996	UnaryOperator	&		1950705	0					
ANR	1950997	Identifier	ctx		1950705	1					
ANR	1950998	Argument	sum		1950705	1					
ANR	1950999	Identifier	sum		1950705	0					
ANR	1951000	IfStatement	"if ( memcmp ( expected , sum , 64 ) != 0 )"		1950705	23					
ANR	1951001	Condition	"memcmp ( expected , sum , 64 ) != 0"	801:5:26650:26680	1950705	0	True				
ANR	1951002	EqualityExpression	"memcmp ( expected , sum , 64 ) != 0"		1950705	0		!=			
ANR	1951003	CallExpression	"memcmp ( expected , sum , 64 )"		1950705	0					
ANR	1951004	Callee	memcmp		1950705	0					
ANR	1951005	Identifier	memcmp		1950705	0					
ANR	1951006	ArgumentList	expected		1950705	1					
ANR	1951007	Argument	expected		1950705	0					
ANR	1951008	Identifier	expected		1950705	0					
ANR	1951009	Argument	sum		1950705	1					
ANR	1951010	Identifier	sum		1950705	0					
ANR	1951011	Argument	64		1950705	2					
ANR	1951012	PrimaryExpression	64		1950705	0					
ANR	1951013	PrimaryExpression	0		1950705	1					
ANR	1951014	CompoundStatement		43:38:1255:1255	1950705	1					
ANR	1951015	ExpressionStatement	"printf ( ""test %d failed\\n"" , cnt )"	802:2:26687:26719	1950705	0	True				
ANR	1951016	CallExpression	"printf ( ""test %d failed\\n"" , cnt )"		1950705	0					
ANR	1951017	Callee	printf		1950705	0					
ANR	1951018	Identifier	printf		1950705	0					
ANR	1951019	ArgumentList	"""test %d failed\\n"""		1950705	1					
ANR	1951020	Argument	"""test %d failed\\n"""		1950705	0					
ANR	1951021	PrimaryExpression	"""test %d failed\\n"""		1950705	0					
ANR	1951022	Argument	cnt		1950705	1					
ANR	1951023	Identifier	cnt		1950705	0					
ANR	1951024	ExpressionStatement	result = 1	803:2:26723:26733	1950705	1	True				
ANR	1951025	AssignmentExpression	result = 1		1950705	0		=			
ANR	1951026	Identifier	result		1950705	0					
ANR	1951027	PrimaryExpression	1		1950705	1					
ANR	1951028	ForStatement	for ( cnt = 0 ; cnt < ntests2 ; ++ cnt )		1950705	24					
ANR	1951029	ForInit	cnt = 0 ;	806:6:26745:26752	1950705	0	True				
ANR	1951030	AssignmentExpression	cnt = 0		1950705	0		=			
ANR	1951031	Identifier	cnt		1950705	0					
ANR	1951032	PrimaryExpression	0		1950705	1					
ANR	1951033	Condition	cnt < ntests2	806:15:26754:26766	1950705	1	True				
ANR	1951034	RelationalExpression	cnt < ntests2		1950705	0		<			
ANR	1951035	Identifier	cnt		1950705	0					
ANR	1951036	Identifier	ntests2		1950705	1					
ANR	1951037	UnaryExpression	++ cnt	806:30:26769:26773	1950705	2	True				
ANR	1951038	IncDec	++		1950705	0					
ANR	1951039	Identifier	cnt		1950705	1					
ANR	1951040	CompoundStatement		49:2:1352:1416	1950705	3					
ANR	1951041	IdentifierDeclStatement	"char * cp = php_sha512_crypt ( tests2 [ cnt ] . input , tests2 [ cnt ] . salt ) ;"	807:2:26780:26844	1950705	0	True				
ANR	1951042	IdentifierDecl	"* cp = php_sha512_crypt ( tests2 [ cnt ] . input , tests2 [ cnt ] . salt )"		1950705	0					
ANR	1951043	IdentifierDeclType	char *		1950705	0					
ANR	1951044	Identifier	cp		1950705	1					
ANR	1951045	AssignmentExpression	"* cp = php_sha512_crypt ( tests2 [ cnt ] . input , tests2 [ cnt ] . salt )"		1950705	2		=			
ANR	1951046	Identifier	cp		1950705	0					
ANR	1951047	CallExpression	"php_sha512_crypt ( tests2 [ cnt ] . input , tests2 [ cnt ] . salt )"		1950705	1					
ANR	1951048	Callee	php_sha512_crypt		1950705	0					
ANR	1951049	Identifier	php_sha512_crypt		1950705	0					
ANR	1951050	ArgumentList	tests2 [ cnt ] . input		1950705	1					
ANR	1951051	Argument	tests2 [ cnt ] . input		1950705	0					
ANR	1951052	MemberAccess	tests2 [ cnt ] . input		1950705	0					
ANR	1951053	ArrayIndexing	tests2 [ cnt ]		1950705	0					
ANR	1951054	Identifier	tests2		1950705	0					
ANR	1951055	Identifier	cnt		1950705	1					
ANR	1951056	Identifier	input		1950705	1					
ANR	1951057	Argument	tests2 [ cnt ] . salt		1950705	1					
ANR	1951058	MemberAccess	tests2 [ cnt ] . salt		1950705	0					
ANR	1951059	ArrayIndexing	tests2 [ cnt ]		1950705	0					
ANR	1951060	Identifier	tests2		1950705	0					
ANR	1951061	Identifier	cnt		1950705	1					
ANR	1951062	Identifier	salt		1950705	1					
ANR	1951063	IfStatement	"if ( strcmp ( cp , tests2 [ cnt ] . expected ) != 0 )"		1950705	1					
ANR	1951064	Condition	"strcmp ( cp , tests2 [ cnt ] . expected ) != 0"	809:6:26853:26890	1950705	0	True				
ANR	1951065	EqualityExpression	"strcmp ( cp , tests2 [ cnt ] . expected ) != 0"		1950705	0		!=			
ANR	1951066	CallExpression	"strcmp ( cp , tests2 [ cnt ] . expected )"		1950705	0					
ANR	1951067	Callee	strcmp		1950705	0					
ANR	1951068	Identifier	strcmp		1950705	0					
ANR	1951069	ArgumentList	cp		1950705	1					
ANR	1951070	Argument	cp		1950705	0					
ANR	1951071	Identifier	cp		1950705	0					
ANR	1951072	Argument	tests2 [ cnt ] . expected		1950705	1					
ANR	1951073	MemberAccess	tests2 [ cnt ] . expected		1950705	0					
ANR	1951074	ArrayIndexing	tests2 [ cnt ]		1950705	0					
ANR	1951075	Identifier	tests2		1950705	0					
ANR	1951076	Identifier	cnt		1950705	1					
ANR	1951077	Identifier	expected		1950705	1					
ANR	1951078	PrimaryExpression	0		1950705	1					
ANR	1951079	CompoundStatement		51:46:1465:1465	1950705	1					
ANR	1951080	ExpressionStatement	"printf ( ""test %d: expected \\""%s\\"", got \\""%s\\""\\n"" , cnt , tests2 [ cnt ] . expected , cp )"	810:3:26898:26983	1950705	0	True				
ANR	1951081	CallExpression	"printf ( ""test %d: expected \\""%s\\"", got \\""%s\\""\\n"" , cnt , tests2 [ cnt ] . expected , cp )"		1950705	0					
ANR	1951082	Callee	printf		1950705	0					
ANR	1951083	Identifier	printf		1950705	0					
ANR	1951084	ArgumentList	"""test %d: expected \\""%s\\"", got \\""%s\\""\\n"""		1950705	1					
ANR	1951085	Argument	"""test %d: expected \\""%s\\"", got \\""%s\\""\\n"""		1950705	0					
ANR	1951086	PrimaryExpression	"""test %d: expected \\""%s\\"", got \\""%s\\""\\n"""		1950705	0					
ANR	1951087	Argument	cnt		1950705	1					
ANR	1951088	Identifier	cnt		1950705	0					
ANR	1951089	Argument	tests2 [ cnt ] . expected		1950705	2					
ANR	1951090	MemberAccess	tests2 [ cnt ] . expected		1950705	0					
ANR	1951091	ArrayIndexing	tests2 [ cnt ]		1950705	0					
ANR	1951092	Identifier	tests2		1950705	0					
ANR	1951093	Identifier	cnt		1950705	1					
ANR	1951094	Identifier	expected		1950705	1					
ANR	1951095	Argument	cp		1950705	3					
ANR	1951096	Identifier	cp		1950705	0					
ANR	1951097	ExpressionStatement	result = 1	812:3:26988:26998	1950705	1	True				
ANR	1951098	AssignmentExpression	result = 1		1950705	0		=			
ANR	1951099	Identifier	result		1950705	0					
ANR	1951100	PrimaryExpression	1		1950705	1					
ANR	1951101	IfStatement	if ( result == 0 )		1950705	25					
ANR	1951102	Condition	result == 0	816:5:27013:27023	1950705	0	True				
ANR	1951103	EqualityExpression	result == 0		1950705	0		==			
ANR	1951104	Identifier	result		1950705	0					
ANR	1951105	PrimaryExpression	0		1950705	1					
ANR	1951106	CompoundStatement		58:18:1598:1598	1950705	1					
ANR	1951107	ExpressionStatement	"puts ( ""all tests OK"" )"	817:2:27030:27051	1950705	0	True				
ANR	1951108	CallExpression	"puts ( ""all tests OK"" )"		1950705	0					
ANR	1951109	Callee	puts		1950705	0					
ANR	1951110	Identifier	puts		1950705	0					
ANR	1951111	ArgumentList	"""all tests OK"""		1950705	1					
ANR	1951112	Argument	"""all tests OK"""		1950705	0					
ANR	1951113	PrimaryExpression	"""all tests OK"""		1950705	0					
ANR	1951114	ReturnStatement	return result ;	820:1:27058:27071	1950705	26	True				
ANR	1951115	Identifier	result		1950705	0					
ANR	1951116	ReturnType	int		1950705	1					
ANR	1951117	Identifier	main		1950705	2					
ANR	1951118	ParameterList			1950705	3					
ANR	1951119	CFGEntryNode	ENTRY		1950705		True				
ANR	1951120	CFGExitNode	EXIT		1950705		True				
ANR	1951121	Symbol	tests2		1950705						
ANR	1951122	Symbol	sum		1950705						
ANR	1951123	Symbol	& ctx		1950705						
ANR	1951124	Symbol	tests [ cnt ] . input		1950705						
ANR	1951125	Symbol	result		1950705						
ANR	1951126	Symbol	strlen		1950705						
ANR	1951127	Symbol	memcmp		1950705						
ANR	1951128	Symbol	* tests [ cnt ] . input		1950705						
ANR	1951129	Symbol	* tests2		1950705						
ANR	1951130	Symbol	* tests		1950705						
ANR	1951131	Symbol	tests [ cnt ] . result		1950705						
ANR	1951132	Symbol	strcmp		1950705						
ANR	1951133	Symbol	tests2 [ cnt ] . salt		1950705						
ANR	1951134	Symbol	tests2 [ cnt ] . input		1950705						
ANR	1951135	Symbol	ctx		1950705						
ANR	1951136	Symbol	php_sha512_crypt		1950705						
ANR	1951137	Symbol	* * tests		1950705						
ANR	1951138	Symbol	expected		1950705						
ANR	1951139	Symbol	cnt		1950705						
ANR	1951140	Symbol	i		1950705						
ANR	1951141	Symbol	* cnt		1950705						
ANR	1951142	Symbol	cp		1950705						
ANR	1951143	Symbol	buf		1950705						
ANR	1951144	Symbol	tests		1950705						
ANR	1951145	Symbol	* i		1950705						
ANR	1951146	Symbol	ntests		1950705						
ANR	1951147	Symbol	ntests2		1950705						
ANR	1951148	Symbol	* * cnt		1950705						
ANR	1951149	Symbol	tests2 [ cnt ] . expected		1950705						
