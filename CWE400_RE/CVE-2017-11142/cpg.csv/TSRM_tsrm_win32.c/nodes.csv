command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3890	File	data/converged/CVE-2017-11142_php-src/TSRM_tsrm_win32.c								
ANR	3891	DeclStmt									
ANR	3892	Decl							ts_rsrc_id	ts_rsrc_id	win32_globals_id
ANR	3893	DeclStmt									
ANR	3894	Decl							tsrm_win32_globals	tsrm_win32_globals	win32_globals
ANR	3895	DeclStmt									
ANR	3896	Decl							shm_pair	shm_pair *	ptr
ANR	3897	Function	tsrm_win32_startup	90:0:2855:3098							
ANR	3898	FunctionDef	tsrm_win32_startup ()		3897	0					
ANR	3899	CompoundStatement		91:0:2894:3098	3897	0					
ANR	3900	ExpressionStatement	"ts_allocate_id ( & win32_globals_id , sizeof ( tsrm_win32_globals ) , ( ts_allocate_ctor ) tsrm_win32_ctor , ( ts_allocate_ctor ) tsrm_win32_dtor )"	93:1:2908:3039	3897	0	True				
ANR	3901	CallExpression	"ts_allocate_id ( & win32_globals_id , sizeof ( tsrm_win32_globals ) , ( ts_allocate_ctor ) tsrm_win32_ctor , ( ts_allocate_ctor ) tsrm_win32_dtor )"		3897	0					
ANR	3902	Callee	ts_allocate_id		3897	0					
ANR	3903	Identifier	ts_allocate_id		3897	0					
ANR	3904	ArgumentList	& win32_globals_id		3897	1					
ANR	3905	Argument	& win32_globals_id		3897	0					
ANR	3906	UnaryOperationExpression	& win32_globals_id		3897	0					
ANR	3907	UnaryOperator	&		3897	0					
ANR	3908	Identifier	win32_globals_id		3897	1					
ANR	3909	Argument	sizeof ( tsrm_win32_globals )		3897	1					
ANR	3910	SizeofExpression	sizeof ( tsrm_win32_globals )		3897	0					
ANR	3911	Sizeof	sizeof		3897	0					
ANR	3912	SizeofOperand	tsrm_win32_globals		3897	1					
ANR	3913	Argument	( ts_allocate_ctor ) tsrm_win32_ctor		3897	2					
ANR	3914	CastExpression	( ts_allocate_ctor ) tsrm_win32_ctor		3897	0					
ANR	3915	CastTarget	ts_allocate_ctor		3897	0					
ANR	3916	Identifier	tsrm_win32_ctor		3897	1					
ANR	3917	Argument	( ts_allocate_ctor ) tsrm_win32_dtor		3897	3					
ANR	3918	CastExpression	( ts_allocate_ctor ) tsrm_win32_dtor		3897	0					
ANR	3919	CastTarget	ts_allocate_ctor		3897	0					
ANR	3920	Identifier	tsrm_win32_dtor		3897	1					
ANR	3921	ReturnType	TSRM_API void		3897	1					
ANR	3922	Identifier	tsrm_win32_startup		3897	2					
ANR	3923	ParameterList			3897	3					
ANR	3924	CFGEntryNode	ENTRY		3897		True				
ANR	3925	CFGExitNode	EXIT		3897		True				
ANR	3926	Symbol	tsrm_win32_dtor		3897						
ANR	3927	Symbol	tsrm_win32_ctor		3897						
ANR	3928	Symbol	& win32_globals_id		3897						
ANR	3929	Function	tsrm_win32_shutdown	99:0:3101:3206							
ANR	3930	FunctionDef	tsrm_win32_shutdown ()		3929	0					
ANR	3931	CompoundStatement		100:0:3141:3206	3929	0					
ANR	3932	Statement	tsrm_win32_dtor	102:1:3156:3170	3929	0	True				
ANR	3933	Statement	(	102:16:3171:3171	3929	1	True				
ANR	3934	Statement	&	102:17:3172:3172	3929	2	True				
ANR	3935	Statement	win32_globals	102:18:3173:3185	3929	3	True				
ANR	3936	Statement	TSRMLS_CC	102:32:3187:3195	3929	4	True				
ANR	3937	Statement	)	102:41:3196:3196	3929	5	True				
ANR	3938	ExpressionStatement		102:42:3197:3197	3929	6	True				
ANR	3939	ReturnType	TSRM_API void		3929	1					
ANR	3940	Identifier	tsrm_win32_shutdown		3929	2					
ANR	3941	ParameterList			3929	3					
ANR	3942	CFGEntryNode	ENTRY		3929		True				
ANR	3943	CFGExitNode	EXIT		3929		True				
ANR	3944	DeclStmt									
ANR	3945	Decl							PSID	PSID	pSid
ANR	3946	DeclStmt									
ANR	3947	Decl							DWORD	DWORD	sid_len
ANR	3948	DeclStmt									
ANR	3949	Decl							TCHAR	TCHAR *	ptcSid
ANR	3950	DeclStmt									
ANR	3951	Decl							char	char *	bucket_key
ANR	3952	Function	tsrm_win32_get_token_sid	140:0:4034:5259							
ANR	3953	FunctionDef	tsrm_win32_get_token_sid (HANDLE hToken)		3952	0					
ANR	3954	CompoundStatement		141:0:4079:5259	3952	0					
ANR	3955	IdentifierDeclStatement	BOOL bSuccess = FALSE ;	142:1:4082:4103	3952	0	True				
ANR	3956	IdentifierDecl	bSuccess = FALSE		3952	0					
ANR	3957	IdentifierDeclType	BOOL		3952	0					
ANR	3958	Identifier	bSuccess		3952	1					
ANR	3959	AssignmentExpression	bSuccess = FALSE		3952	2		=			
ANR	3960	Identifier	FALSE		3952	0					
ANR	3961	Identifier	FALSE		3952	1					
ANR	3962	IdentifierDeclStatement	DWORD dwLength = 0 ;	143:1:4106:4124	3952	1	True				
ANR	3963	IdentifierDecl	dwLength = 0		3952	0					
ANR	3964	IdentifierDeclType	DWORD		3952	0					
ANR	3965	Identifier	dwLength		3952	1					
ANR	3966	AssignmentExpression	dwLength = 0		3952	2		=			
ANR	3967	Identifier	dwLength		3952	0					
ANR	3968	PrimaryExpression	0		3952	1					
ANR	3969	IdentifierDeclStatement	PTOKEN_USER pTokenUser = NULL ;	144:1:4127:4156	3952	2	True				
ANR	3970	IdentifierDecl	pTokenUser = NULL		3952	0					
ANR	3971	IdentifierDeclType	PTOKEN_USER		3952	0					
ANR	3972	Identifier	pTokenUser		3952	1					
ANR	3973	AssignmentExpression	pTokenUser = NULL		3952	2		=			
ANR	3974	Identifier	NULL		3952	0					
ANR	3975	Identifier	NULL		3952	1					
ANR	3976	IdentifierDeclStatement	PSID sid ;	145:1:4159:4167	3952	3	True				
ANR	3977	IdentifierDecl	sid		3952	0					
ANR	3978	IdentifierDeclType	PSID		3952	0					
ANR	3979	Identifier	sid		3952	1					
ANR	3980	IdentifierDeclStatement	PSID * ppsid = & sid ;	146:1:4170:4188	3952	4	True				
ANR	3981	IdentifierDecl	* ppsid = & sid		3952	0					
ANR	3982	IdentifierDeclType	PSID *		3952	0					
ANR	3983	Identifier	ppsid		3952	1					
ANR	3984	AssignmentExpression	* ppsid = & sid		3952	2		=			
ANR	3985	Identifier	ppsid		3952	0					
ANR	3986	UnaryOperationExpression	& sid		3952	1					
ANR	3987	UnaryOperator	&		3952	0					
ANR	3988	Identifier	sid		3952	1					
ANR	3989	IdentifierDeclStatement	DWORD sid_len ;	147:1:4191:4204	3952	5	True				
ANR	3990	IdentifierDecl	sid_len		3952	0					
ANR	3991	IdentifierDeclType	DWORD		3952	0					
ANR	3992	Identifier	sid_len		3952	1					
ANR	3993	IdentifierDeclStatement	PSID pResultSid = NULL ;	148:1:4207:4229	3952	6	True				
ANR	3994	IdentifierDecl	pResultSid = NULL		3952	0					
ANR	3995	IdentifierDeclType	PSID		3952	0					
ANR	3996	Identifier	pResultSid		3952	1					
ANR	3997	AssignmentExpression	pResultSid = NULL		3952	2		=			
ANR	3998	Identifier	NULL		3952	0					
ANR	3999	Identifier	NULL		3952	1					
ANR	4000	IfStatement	"if ( ! GetTokenInformation ( hToken , TokenUser , ( LPVOID ) pTokenUser , 0 , & dwLength ) )"		3952	7					
ANR	4001	Condition	"! GetTokenInformation ( hToken , TokenUser , ( LPVOID ) pTokenUser , 0 , & dwLength )"	151:5:4291:4368	3952	0	True				
ANR	4002	UnaryOperationExpression	"! GetTokenInformation ( hToken , TokenUser , ( LPVOID ) pTokenUser , 0 , & dwLength )"		3952	0					
ANR	4003	UnaryOperator	!		3952	0					
ANR	4004	CallExpression	"GetTokenInformation ( hToken , TokenUser , ( LPVOID ) pTokenUser , 0 , & dwLength )"		3952	1					
ANR	4005	Callee	GetTokenInformation		3952	0					
ANR	4006	Identifier	GetTokenInformation		3952	0					
ANR	4007	ArgumentList	hToken		3952	1					
ANR	4008	Argument	hToken		3952	0					
ANR	4009	Identifier	hToken		3952	0					
ANR	4010	Argument	TokenUser		3952	1					
ANR	4011	Identifier	TokenUser		3952	0					
ANR	4012	Argument	( LPVOID ) pTokenUser		3952	2					
ANR	4013	CastExpression	( LPVOID ) pTokenUser		3952	0					
ANR	4014	CastTarget	LPVOID		3952	0					
ANR	4015	Identifier	pTokenUser		3952	1					
ANR	4016	Argument	0		3952	3					
ANR	4017	PrimaryExpression	0		3952	0					
ANR	4018	Argument	& dwLength		3952	4					
ANR	4019	UnaryOperationExpression	& dwLength		3952	0					
ANR	4020	UnaryOperator	&		3952	0					
ANR	4021	Identifier	dwLength		3952	1					
ANR	4022	CompoundStatement		12:59:292:292	3952	1					
ANR	4023	IfStatement	if ( GetLastError ( ) != ERROR_INSUFFICIENT_BUFFER )		3952	0					
ANR	4024	Condition	GetLastError ( ) != ERROR_INSUFFICIENT_BUFFER	153:6:4380:4422	3952	0	True				
ANR	4025	EqualityExpression	GetLastError ( ) != ERROR_INSUFFICIENT_BUFFER		3952	0		!=			
ANR	4026	CallExpression	GetLastError ( )		3952	0					
ANR	4027	Callee	GetLastError		3952	0					
ANR	4028	Identifier	GetLastError		3952	0					
ANR	4029	ArgumentList			3952	1					
ANR	4030	Identifier	ERROR_INSUFFICIENT_BUFFER		3952	1					
ANR	4031	CompoundStatement		13:51:345:345	3952	1					
ANR	4032	GotoStatement	goto Finished ;	154:3:4430:4443	3952	0	True				
ANR	4033	Identifier	Finished		3952	0					
ANR	4034	ExpressionStatement	"pTokenUser = ( PTOKEN_USER ) HeapAlloc ( GetProcessHeap ( ) , HEAP_ZERO_MEMORY , dwLength )"	157:2:4452:4533	3952	1	True				
ANR	4035	AssignmentExpression	"pTokenUser = ( PTOKEN_USER ) HeapAlloc ( GetProcessHeap ( ) , HEAP_ZERO_MEMORY , dwLength )"		3952	0		=			
ANR	4036	Identifier	pTokenUser		3952	0					
ANR	4037	CastExpression	"( PTOKEN_USER ) HeapAlloc ( GetProcessHeap ( ) , HEAP_ZERO_MEMORY , dwLength )"		3952	1					
ANR	4038	CastTarget	PTOKEN_USER		3952	0					
ANR	4039	CallExpression	"HeapAlloc ( GetProcessHeap ( ) , HEAP_ZERO_MEMORY , dwLength )"		3952	1					
ANR	4040	Callee	HeapAlloc		3952	0					
ANR	4041	Identifier	HeapAlloc		3952	0					
ANR	4042	ArgumentList	GetProcessHeap ( )		3952	1					
ANR	4043	Argument	GetProcessHeap ( )		3952	0					
ANR	4044	CallExpression	GetProcessHeap ( )		3952	0					
ANR	4045	Callee	GetProcessHeap		3952	0					
ANR	4046	Identifier	GetProcessHeap		3952	0					
ANR	4047	ArgumentList			3952	1					
ANR	4048	Argument	HEAP_ZERO_MEMORY		3952	1					
ANR	4049	Identifier	HEAP_ZERO_MEMORY		3952	0					
ANR	4050	Argument	dwLength		3952	2					
ANR	4051	Identifier	dwLength		3952	0					
ANR	4052	IfStatement	if ( pTokenUser == NULL )		3952	2					
ANR	4053	Condition	pTokenUser == NULL	158:6:4541:4558	3952	0	True				
ANR	4054	EqualityExpression	pTokenUser == NULL		3952	0		==			
ANR	4055	Identifier	pTokenUser		3952	0					
ANR	4056	Identifier	NULL		3952	1					
ANR	4057	CompoundStatement		18:26:481:481	3952	1					
ANR	4058	GotoStatement	goto Finished ;	159:3:4566:4579	3952	0	True				
ANR	4059	Identifier	Finished		3952	0					
ANR	4060	IfStatement	"if ( ! GetTokenInformation ( hToken , TokenUser , ( LPVOID ) pTokenUser , dwLength , & dwLength ) )"		3952	8					
ANR	4061	Condition	"! GetTokenInformation ( hToken , TokenUser , ( LPVOID ) pTokenUser , dwLength , & dwLength )"	164:5:4618:4701	3952	0	True				
ANR	4062	UnaryOperationExpression	"! GetTokenInformation ( hToken , TokenUser , ( LPVOID ) pTokenUser , dwLength , & dwLength )"		3952	0					
ANR	4063	UnaryOperator	!		3952	0					
ANR	4064	CallExpression	"GetTokenInformation ( hToken , TokenUser , ( LPVOID ) pTokenUser , dwLength , & dwLength )"		3952	1					
ANR	4065	Callee	GetTokenInformation		3952	0					
ANR	4066	Identifier	GetTokenInformation		3952	0					
ANR	4067	ArgumentList	hToken		3952	1					
ANR	4068	Argument	hToken		3952	0					
ANR	4069	Identifier	hToken		3952	0					
ANR	4070	Argument	TokenUser		3952	1					
ANR	4071	Identifier	TokenUser		3952	0					
ANR	4072	Argument	( LPVOID ) pTokenUser		3952	2					
ANR	4073	CastExpression	( LPVOID ) pTokenUser		3952	0					
ANR	4074	CastTarget	LPVOID		3952	0					
ANR	4075	Identifier	pTokenUser		3952	1					
ANR	4076	Argument	dwLength		3952	3					
ANR	4077	Identifier	dwLength		3952	0					
ANR	4078	Argument	& dwLength		3952	4					
ANR	4079	UnaryOperationExpression	& dwLength		3952	0					
ANR	4080	UnaryOperator	&		3952	0					
ANR	4081	Identifier	dwLength		3952	1					
ANR	4082	CompoundStatement		25:64:624:624	3952	1					
ANR	4083	GotoStatement	goto Finished ;	166:2:4708:4721	3952	0	True				
ANR	4084	Identifier	Finished		3952	0					
ANR	4085	ExpressionStatement	sid_len = GetLengthSid ( pTokenUser -> User . Sid )	169:1:4728:4772	3952	9	True				
ANR	4086	AssignmentExpression	sid_len = GetLengthSid ( pTokenUser -> User . Sid )		3952	0		=			
ANR	4087	Identifier	sid_len		3952	0					
ANR	4088	CallExpression	GetLengthSid ( pTokenUser -> User . Sid )		3952	1					
ANR	4089	Callee	GetLengthSid		3952	0					
ANR	4090	Identifier	GetLengthSid		3952	0					
ANR	4091	ArgumentList	pTokenUser -> User . Sid		3952	1					
ANR	4092	Argument	pTokenUser -> User . Sid		3952	0					
ANR	4093	MemberAccess	pTokenUser -> User . Sid		3952	0					
ANR	4094	PtrMemberAccess	pTokenUser -> User		3952	0					
ANR	4095	Identifier	pTokenUser		3952	0					
ANR	4096	Identifier	User		3952	1					
ANR	4097	Identifier	Sid		3952	1					
ANR	4098	ExpressionStatement	pResultSid = malloc ( sid_len )	172:1:4842:4870	3952	10	True				
ANR	4099	AssignmentExpression	pResultSid = malloc ( sid_len )		3952	0		=			
ANR	4100	Identifier	pResultSid		3952	0					
ANR	4101	CallExpression	malloc ( sid_len )		3952	1					
ANR	4102	Callee	malloc		3952	0					
ANR	4103	Identifier	malloc		3952	0					
ANR	4104	ArgumentList	sid_len		3952	1					
ANR	4105	Argument	sid_len		3952	0					
ANR	4106	Identifier	sid_len		3952	0					
ANR	4107	IfStatement	if ( ! pResultSid )		3952	11					
ANR	4108	Condition	! pResultSid	173:5:4877:4887	3952	0	True				
ANR	4109	UnaryOperationExpression	! pResultSid		3952	0					
ANR	4110	UnaryOperator	!		3952	0					
ANR	4111	Identifier	pResultSid		3952	1					
ANR	4112	CompoundStatement		33:18:810:810	3952	1					
ANR	4113	GotoStatement	goto Finished ;	174:2:4894:4907	3952	0	True				
ANR	4114	Identifier	Finished		3952	0					
ANR	4115	IfStatement	"if ( ! CopySid ( sid_len , pResultSid , pTokenUser -> User . Sid ) )"		3952	12					
ANR	4116	Condition	"! CopySid ( sid_len , pResultSid , pTokenUser -> User . Sid )"	176:5:4917:4967	3952	0	True				
ANR	4117	UnaryOperationExpression	"! CopySid ( sid_len , pResultSid , pTokenUser -> User . Sid )"		3952	0					
ANR	4118	UnaryOperator	!		3952	0					
ANR	4119	CallExpression	"CopySid ( sid_len , pResultSid , pTokenUser -> User . Sid )"		3952	1					
ANR	4120	Callee	CopySid		3952	0					
ANR	4121	Identifier	CopySid		3952	0					
ANR	4122	ArgumentList	sid_len		3952	1					
ANR	4123	Argument	sid_len		3952	0					
ANR	4124	Identifier	sid_len		3952	0					
ANR	4125	Argument	pResultSid		3952	1					
ANR	4126	Identifier	pResultSid		3952	0					
ANR	4127	Argument	pTokenUser -> User . Sid		3952	2					
ANR	4128	MemberAccess	pTokenUser -> User . Sid		3952	0					
ANR	4129	PtrMemberAccess	pTokenUser -> User		3952	0					
ANR	4130	Identifier	pTokenUser		3952	0					
ANR	4131	Identifier	User		3952	1					
ANR	4132	Identifier	Sid		3952	1					
ANR	4133	CompoundStatement		36:58:890:890	3952	1					
ANR	4134	GotoStatement	goto Finished ;	177:2:4974:4987	3952	0	True				
ANR	4135	Identifier	Finished		3952	0					
ANR	4136	ExpressionStatement	"HeapFree ( GetProcessHeap ( ) , 0 , ( LPVOID ) pTokenUser )"	179:1:4993:5042	3952	13	True				
ANR	4137	CallExpression	"HeapFree ( GetProcessHeap ( ) , 0 , ( LPVOID ) pTokenUser )"		3952	0					
ANR	4138	Callee	HeapFree		3952	0					
ANR	4139	Identifier	HeapFree		3952	0					
ANR	4140	ArgumentList	GetProcessHeap ( )		3952	1					
ANR	4141	Argument	GetProcessHeap ( )		3952	0					
ANR	4142	CallExpression	GetProcessHeap ( )		3952	0					
ANR	4143	Callee	GetProcessHeap		3952	0					
ANR	4144	Identifier	GetProcessHeap		3952	0					
ANR	4145	ArgumentList			3952	1					
ANR	4146	Argument	0		3952	1					
ANR	4147	PrimaryExpression	0		3952	0					
ANR	4148	Argument	( LPVOID ) pTokenUser		3952	2					
ANR	4149	CastExpression	( LPVOID ) pTokenUser		3952	0					
ANR	4150	CastTarget	LPVOID		3952	0					
ANR	4151	Identifier	pTokenUser		3952	1					
ANR	4152	ReturnStatement	return pResultSid ;	180:1:5045:5062	3952	14	True				
ANR	4153	Identifier	pResultSid		3952	0					
ANR	4154	Label	Finished :	182:0:5065:5073	3952	15	True				
ANR	4155	Identifier	Finished		3952	0					
ANR	4156	IfStatement	if ( pResultSid )		3952	16					
ANR	4157	Condition	pResultSid	183:5:5080:5089	3952	0	True				
ANR	4158	Identifier	pResultSid		3952	0					
ANR	4159	CompoundStatement		43:17:1012:1012	3952	1					
ANR	4160	ExpressionStatement	free ( pResultSid )	184:2:5096:5112	3952	0	True				
ANR	4161	CallExpression	free ( pResultSid )		3952	0					
ANR	4162	Callee	free		3952	0					
ANR	4163	Identifier	free		3952	0					
ANR	4164	ArgumentList	pResultSid		3952	1					
ANR	4165	Argument	pResultSid		3952	0					
ANR	4166	Identifier	pResultSid		3952	0					
ANR	4167	IfStatement	if ( pTokenUser != NULL )		3952	17					
ANR	4168	Condition	pTokenUser != NULL	187:5:5167:5184	3952	0	True				
ANR	4169	EqualityExpression	pTokenUser != NULL		3952	0		!=			
ANR	4170	Identifier	pTokenUser		3952	0					
ANR	4171	Identifier	NULL		3952	1					
ANR	4172	CompoundStatement		47:25:1107:1107	3952	1					
ANR	4173	ExpressionStatement	"HeapFree ( GetProcessHeap ( ) , 0 , ( LPVOID ) pTokenUser )"	188:2:5191:5240	3952	0	True				
ANR	4174	CallExpression	"HeapFree ( GetProcessHeap ( ) , 0 , ( LPVOID ) pTokenUser )"		3952	0					
ANR	4175	Callee	HeapFree		3952	0					
ANR	4176	Identifier	HeapFree		3952	0					
ANR	4177	ArgumentList	GetProcessHeap ( )		3952	1					
ANR	4178	Argument	GetProcessHeap ( )		3952	0					
ANR	4179	CallExpression	GetProcessHeap ( )		3952	0					
ANR	4180	Callee	GetProcessHeap		3952	0					
ANR	4181	Identifier	GetProcessHeap		3952	0					
ANR	4182	ArgumentList			3952	1					
ANR	4183	Argument	0		3952	1					
ANR	4184	PrimaryExpression	0		3952	0					
ANR	4185	Argument	( LPVOID ) pTokenUser		3952	2					
ANR	4186	CastExpression	( LPVOID ) pTokenUser		3952	0					
ANR	4187	CastTarget	LPVOID		3952	0					
ANR	4188	Identifier	pTokenUser		3952	1					
ANR	4189	ReturnStatement	return NULL ;	190:1:5246:5257	3952	18	True				
ANR	4190	Identifier	NULL		3952	0					
ANR	4191	ReturnType	PSID		3952	1					
ANR	4192	Identifier	tsrm_win32_get_token_sid		3952	2					
ANR	4193	ParameterList	HANDLE hToken		3952	3					
ANR	4194	Parameter	HANDLE hToken	140:30:4064:4076	3952	0	True				
ANR	4195	ParameterType	HANDLE		3952	0					
ANR	4196	Identifier	hToken		3952	1					
ANR	4197	CFGEntryNode	ENTRY		3952		True				
ANR	4198	CFGExitNode	EXIT		3952		True				
ANR	4199	Symbol	GetLengthSid		3952						
ANR	4200	Symbol	ERROR_INSUFFICIENT_BUFFER		3952						
ANR	4201	Symbol	GetTokenInformation		3952						
ANR	4202	Symbol	GetProcessHeap		3952						
ANR	4203	Symbol	sid		3952						
ANR	4204	Symbol	ppsid		3952						
ANR	4205	Symbol	pTokenUser		3952						
ANR	4206	Symbol	HEAP_ZERO_MEMORY		3952						
ANR	4207	Symbol	bSuccess		3952						
ANR	4208	Symbol	malloc		3952						
ANR	4209	Symbol	NULL		3952						
ANR	4210	Symbol	sid_len		3952						
ANR	4211	Symbol	TokenUser		3952						
ANR	4212	Symbol	& dwLength		3952						
ANR	4213	Symbol	& sid		3952						
ANR	4214	Symbol	* pTokenUser		3952						
ANR	4215	Symbol	CopySid		3952						
ANR	4216	Symbol	GetLastError		3952						
ANR	4217	Symbol	dwLength		3952						
ANR	4218	Symbol	pTokenUser -> User . Sid		3952						
ANR	4219	Symbol	hToken		3952						
ANR	4220	Symbol	FALSE		3952						
ANR	4221	Symbol	pTokenUser -> User		3952						
ANR	4222	Symbol	pResultSid		3952						
ANR	4223	Symbol	HeapAlloc		3952						
ANR	4224	Function	tsrm_win32_access	193:0:5262:10959							
ANR	4225	FunctionDef	"tsrm_win32_access (const char * pathname , int mode TSRMLS_DC)"		4224	0					
ANR	4226	CompoundStatement		194:0:5335:10959	4224	0					
ANR	4227	IdentifierDeclStatement	time_t t ;	195:1:5338:5346	4224	0	True				
ANR	4228	IdentifierDecl	t		4224	0					
ANR	4229	IdentifierDeclType	time_t		4224	0					
ANR	4230	Identifier	t		4224	1					
ANR	4231	IdentifierDeclStatement	HANDLE thread_token = NULL ;	196:1:5349:5375	4224	1	True				
ANR	4232	IdentifierDecl	thread_token = NULL		4224	0					
ANR	4233	IdentifierDeclType	HANDLE		4224	0					
ANR	4234	Identifier	thread_token		4224	1					
ANR	4235	AssignmentExpression	thread_token = NULL		4224	2		=			
ANR	4236	Identifier	NULL		4224	0					
ANR	4237	Identifier	NULL		4224	1					
ANR	4238	IdentifierDeclStatement	PSID token_sid ;	197:1:5378:5392	4224	2	True				
ANR	4239	IdentifierDecl	token_sid		4224	0					
ANR	4240	IdentifierDeclType	PSID		4224	0					
ANR	4241	Identifier	token_sid		4224	1					
ANR	4242	IdentifierDeclStatement	SECURITY_INFORMATION sec_info = OWNER_SECURITY_INFORMATION | GROUP_SECURITY_INFORMATION | DACL_SECURITY_INFORMATION ;	198:1:5395:5510	4224	3	True				
ANR	4243	IdentifierDecl	sec_info = OWNER_SECURITY_INFORMATION | GROUP_SECURITY_INFORMATION | DACL_SECURITY_INFORMATION		4224	0					
ANR	4244	IdentifierDeclType	SECURITY_INFORMATION		4224	0					
ANR	4245	Identifier	sec_info		4224	1					
ANR	4246	AssignmentExpression	sec_info = OWNER_SECURITY_INFORMATION | GROUP_SECURITY_INFORMATION | DACL_SECURITY_INFORMATION		4224	2		=			
ANR	4247	Identifier	sec_info		4224	0					
ANR	4248	InclusiveOrExpression	OWNER_SECURITY_INFORMATION | GROUP_SECURITY_INFORMATION | DACL_SECURITY_INFORMATION		4224	1		|			
ANR	4249	Identifier	OWNER_SECURITY_INFORMATION		4224	0					
ANR	4250	InclusiveOrExpression	GROUP_SECURITY_INFORMATION | DACL_SECURITY_INFORMATION		4224	1		|			
ANR	4251	Identifier	GROUP_SECURITY_INFORMATION		4224	0					
ANR	4252	Identifier	DACL_SECURITY_INFORMATION		4224	1					
ANR	4253	IdentifierDeclStatement	"GENERIC_MAPPING gen_map = { FILE_GENERIC_READ , FILE_GENERIC_WRITE , FILE_GENERIC_EXECUTE , FILE_ALL_ACCESS } ;"	199:1:5513:5619	4224	4	True				
ANR	4254	IdentifierDecl	"gen_map = { FILE_GENERIC_READ , FILE_GENERIC_WRITE , FILE_GENERIC_EXECUTE , FILE_ALL_ACCESS }"		4224	0					
ANR	4255	IdentifierDeclType	GENERIC_MAPPING		4224	0					
ANR	4256	Identifier	gen_map		4224	1					
ANR	4257	AssignmentExpression	"gen_map = { FILE_GENERIC_READ , FILE_GENERIC_WRITE , FILE_GENERIC_EXECUTE , FILE_ALL_ACCESS }"		4224	2		=			
ANR	4258	Identifier	gen_map		4224	0					
ANR	4259	InitializerList	FILE_GENERIC_READ		4224	1					
ANR	4260	Identifier	FILE_GENERIC_READ		4224	0					
ANR	4261	Identifier	FILE_GENERIC_WRITE		4224	1					
ANR	4262	Identifier	FILE_GENERIC_EXECUTE		4224	2					
ANR	4263	Identifier	FILE_ALL_ACCESS		4224	3					
ANR	4264	IdentifierDeclStatement	DWORD priv_set_length = sizeof ( PRIVILEGE_SET ) ;	200:1:5622:5667	4224	5	True				
ANR	4265	IdentifierDecl	priv_set_length = sizeof ( PRIVILEGE_SET )		4224	0					
ANR	4266	IdentifierDeclType	DWORD		4224	0					
ANR	4267	Identifier	priv_set_length		4224	1					
ANR	4268	AssignmentExpression	priv_set_length = sizeof ( PRIVILEGE_SET )		4224	2		=			
ANR	4269	Identifier	priv_set_length		4224	0					
ANR	4270	SizeofExpression	sizeof ( PRIVILEGE_SET )		4224	1					
ANR	4271	Sizeof	sizeof		4224	0					
ANR	4272	SizeofOperand	PRIVILEGE_SET		4224	1					
ANR	4273	IdentifierDeclStatement	PRIVILEGE_SET privilege_set = { 0 } ;	202:1:5671:5704	4224	6	True				
ANR	4274	IdentifierDecl	privilege_set = { 0 }		4224	0					
ANR	4275	IdentifierDeclType	PRIVILEGE_SET		4224	0					
ANR	4276	Identifier	privilege_set		4224	1					
ANR	4277	AssignmentExpression	privilege_set = { 0 }		4224	2		=			
ANR	4278	Identifier	privilege_set		4224	0					
ANR	4279	InitializerList	0		4224	1					
ANR	4280	PrimaryExpression	0		4224	0					
ANR	4281	IdentifierDeclStatement	"DWORD sec_desc_length = 0 , desired_access = 0 , granted_access = 0 ;"	203:1:5707:5772	4224	7	True				
ANR	4282	IdentifierDecl	sec_desc_length = 0		4224	0					
ANR	4283	IdentifierDeclType	DWORD		4224	0					
ANR	4284	Identifier	sec_desc_length		4224	1					
ANR	4285	AssignmentExpression	sec_desc_length = 0		4224	2		=			
ANR	4286	Identifier	sec_desc_length		4224	0					
ANR	4287	PrimaryExpression	0		4224	1					
ANR	4288	IdentifierDecl	desired_access = 0		4224	1					
ANR	4289	IdentifierDeclType	DWORD		4224	0					
ANR	4290	Identifier	desired_access		4224	1					
ANR	4291	AssignmentExpression	desired_access = 0		4224	2		=			
ANR	4292	Identifier	desired_access		4224	0					
ANR	4293	PrimaryExpression	0		4224	1					
ANR	4294	IdentifierDecl	granted_access = 0		4224	2					
ANR	4295	IdentifierDeclType	DWORD		4224	0					
ANR	4296	Identifier	granted_access		4224	1					
ANR	4297	AssignmentExpression	granted_access = 0		4224	2		=			
ANR	4298	Identifier	granted_access		4224	0					
ANR	4299	PrimaryExpression	0		4224	1					
ANR	4300	IdentifierDeclStatement	BYTE * psec_desc = NULL ;	204:1:5775:5798	4224	8	True				
ANR	4301	IdentifierDecl	* psec_desc = NULL		4224	0					
ANR	4302	IdentifierDeclType	BYTE *		4224	0					
ANR	4303	Identifier	psec_desc		4224	1					
ANR	4304	AssignmentExpression	* psec_desc = NULL		4224	2		=			
ANR	4305	Identifier	NULL		4224	0					
ANR	4306	Identifier	NULL		4224	1					
ANR	4307	IdentifierDeclStatement	BOOL fAccess = FALSE ;	205:1:5801:5821	4224	9	True				
ANR	4308	IdentifierDecl	fAccess = FALSE		4224	0					
ANR	4309	IdentifierDeclType	BOOL		4224	0					
ANR	4310	Identifier	fAccess		4224	1					
ANR	4311	AssignmentExpression	fAccess = FALSE		4224	2		=			
ANR	4312	Identifier	FALSE		4224	0					
ANR	4313	Identifier	FALSE		4224	1					
ANR	4314	IdentifierDeclStatement	BOOL bucket_key_alloc = FALSE ;	207:1:5825:5854	4224	10	True				
ANR	4315	IdentifierDecl	bucket_key_alloc = FALSE		4224	0					
ANR	4316	IdentifierDeclType	BOOL		4224	0					
ANR	4317	Identifier	bucket_key_alloc		4224	1					
ANR	4318	AssignmentExpression	bucket_key_alloc = FALSE		4224	2		=			
ANR	4319	Identifier	FALSE		4224	0					
ANR	4320	Identifier	FALSE		4224	1					
ANR	4321	IdentifierDeclStatement	realpath_cache_bucket * bucket = NULL ;	208:1:5857:5894	4224	11	True				
ANR	4322	IdentifierDecl	* bucket = NULL		4224	0					
ANR	4323	IdentifierDeclType	realpath_cache_bucket *		4224	0					
ANR	4324	Identifier	bucket		4224	1					
ANR	4325	AssignmentExpression	* bucket = NULL		4224	2		=			
ANR	4326	Identifier	NULL		4224	0					
ANR	4327	Identifier	NULL		4224	1					
ANR	4328	IdentifierDeclStatement	char * real_path = NULL ;	209:1:5897:5920	4224	12	True				
ANR	4329	IdentifierDecl	* real_path = NULL		4224	0					
ANR	4330	IdentifierDeclType	char *		4224	0					
ANR	4331	Identifier	real_path		4224	1					
ANR	4332	AssignmentExpression	* real_path = NULL		4224	2		=			
ANR	4333	Identifier	NULL		4224	0					
ANR	4334	Identifier	NULL		4224	1					
ANR	4335	IfStatement	if ( mode == 1 )		4224	13					
ANR	4336	Condition	mode == 1	211:5:5928:5936	4224	0	True				
ANR	4337	EqualityExpression	mode == 1		4224	0		==			
ANR	4338	Identifier	mode		4224	0					
ANR	4339	PrimaryExpression	1		4224	1					
ANR	4340	CompoundStatement		19:2:616:626	4224	1					
ANR	4341	IdentifierDeclStatement	DWORD type ;	212:2:5952:5962	4224	0	True				
ANR	4342	IdentifierDecl	type		4224	0					
ANR	4343	IdentifierDeclType	DWORD		4224	0					
ANR	4344	Identifier	type		4224	1					
ANR	4345	ReturnStatement	"return GetBinaryType ( pathname , & type ) ? 0 : - 1 ;"	213:2:5966:6012	4224	1	True				
ANR	4346	ConditionalExpression	"GetBinaryType ( pathname , & type ) ? 0 : - 1"		4224	0					
ANR	4347	Condition	"GetBinaryType ( pathname , & type )"		4224	0					
ANR	4348	CallExpression	"GetBinaryType ( pathname , & type )"		4224	0					
ANR	4349	Callee	GetBinaryType		4224	0					
ANR	4350	Identifier	GetBinaryType		4224	0					
ANR	4351	ArgumentList	pathname		4224	1					
ANR	4352	Argument	pathname		4224	0					
ANR	4353	Identifier	pathname		4224	0					
ANR	4354	Argument	& type		4224	1					
ANR	4355	UnaryOperationExpression	& type		4224	0					
ANR	4356	UnaryOperator	&		4224	0					
ANR	4357	Identifier	type		4224	1					
ANR	4358	PrimaryExpression	0		4224	1					
ANR	4359	UnaryOperationExpression	- 1		4224	2					
ANR	4360	UnaryOperator	-		4224	0					
ANR	4361	PrimaryExpression	1		4224	1					
ANR	4362	ElseStatement	else		4224	0					
ANR	4363	CompoundStatement		21:8:686:686	4224	0					
ANR	4364	IfStatement	"if ( ! IS_ABSOLUTE_PATH ( pathname , strlen ( pathname ) + 1 ) )"		4224	0					
ANR	4365	Condition	"! IS_ABSOLUTE_PATH ( pathname , strlen ( pathname ) + 1 )"	215:5:6029:6075	4224	0	True				
ANR	4366	UnaryOperationExpression	"! IS_ABSOLUTE_PATH ( pathname , strlen ( pathname ) + 1 )"		4224	0					
ANR	4367	UnaryOperator	!		4224	0					
ANR	4368	CallExpression	"IS_ABSOLUTE_PATH ( pathname , strlen ( pathname ) + 1 )"		4224	1					
ANR	4369	Callee	IS_ABSOLUTE_PATH		4224	0					
ANR	4370	Identifier	IS_ABSOLUTE_PATH		4224	0					
ANR	4371	ArgumentList	pathname		4224	1					
ANR	4372	Argument	pathname		4224	0					
ANR	4373	Identifier	pathname		4224	0					
ANR	4374	Argument	strlen ( pathname ) + 1		4224	1					
ANR	4375	AdditiveExpression	strlen ( pathname ) + 1		4224	0		+			
ANR	4376	CallExpression	strlen ( pathname )		4224	0					
ANR	4377	Callee	strlen		4224	0					
ANR	4378	Identifier	strlen		4224	0					
ANR	4379	ArgumentList	pathname		4224	1					
ANR	4380	Argument	pathname		4224	0					
ANR	4381	Identifier	pathname		4224	0					
ANR	4382	PrimaryExpression	1		4224	1					
ANR	4383	CompoundStatement		22:54:742:742	4224	1					
ANR	4384	ExpressionStatement	real_path = ( char * ) malloc ( MAX_PATH )	216:3:6083:6119	4224	0	True				
ANR	4385	AssignmentExpression	real_path = ( char * ) malloc ( MAX_PATH )		4224	0		=			
ANR	4386	Identifier	real_path		4224	0					
ANR	4387	CastExpression	( char * ) malloc ( MAX_PATH )		4224	1					
ANR	4388	CastTarget	char *		4224	0					
ANR	4389	CallExpression	malloc ( MAX_PATH )		4224	1					
ANR	4390	Callee	malloc		4224	0					
ANR	4391	Identifier	malloc		4224	0					
ANR	4392	ArgumentList	MAX_PATH		4224	1					
ANR	4393	Argument	MAX_PATH		4224	0					
ANR	4394	Identifier	MAX_PATH		4224	0					
ANR	4395	Statement	if	217:3:6124:6125	4224	1	True				
ANR	4396	Statement	(	217:5:6126:6126	4224	2	True				
ANR	4397	Statement	tsrm_realpath	217:6:6127:6139	4224	3	True				
ANR	4398	Statement	(	217:19:6140:6140	4224	4	True				
ANR	4399	Statement	pathname	217:20:6141:6148	4224	5	True				
ANR	4400	Statement	","	217:28:6149:6149	4224	6	True				
ANR	4401	Statement	real_path	217:30:6151:6159	4224	7	True				
ANR	4402	Statement	TSRMLS_CC	217:40:6161:6169	4224	8	True				
ANR	4403	Statement	)	217:49:6170:6170	4224	9	True				
ANR	4404	Statement	==	217:51:6172:6173	4224	10	True				
ANR	4405	Statement	NULL	217:54:6175:6178	4224	11	True				
ANR	4406	Statement	)	217:58:6179:6179	4224	12	True				
ANR	4407	CompoundStatement		24:60:845:845	4224	13					
ANR	4408	GotoStatement	goto Finished ;	218:4:6187:6200	4224	0	True				
ANR	4409	Identifier	Finished		4224	0					
ANR	4410	ExpressionStatement	pathname = real_path	220:3:6210:6230	4224	14	True				
ANR	4411	AssignmentExpression	pathname = real_path		4224	0		=			
ANR	4412	Identifier	pathname		4224	0					
ANR	4413	Identifier	real_path		4224	1					
ANR	4414	IfStatement	"if ( access ( pathname , mode ) )"		4224	1					
ANR	4415	Condition	"access ( pathname , mode )"	223:5:6243:6264	4224	0	True				
ANR	4416	CallExpression	"access ( pathname , mode )"		4224	0					
ANR	4417	Callee	access		4224	0					
ANR	4418	Identifier	access		4224	0					
ANR	4419	ArgumentList	pathname		4224	1					
ANR	4420	Argument	pathname		4224	0					
ANR	4421	Identifier	pathname		4224	0					
ANR	4422	Argument	mode		4224	1					
ANR	4423	Identifier	mode		4224	0					
ANR	4424	CompoundStatement		30:29:931:931	4224	1					
ANR	4425	ExpressionStatement	free ( real_path )	224:3:6272:6287	4224	0	True				
ANR	4426	CallExpression	free ( real_path )		4224	0					
ANR	4427	Callee	free		4224	0					
ANR	4428	Identifier	free		4224	0					
ANR	4429	ArgumentList	real_path		4224	1					
ANR	4430	Argument	real_path		4224	0					
ANR	4431	Identifier	real_path		4224	0					
ANR	4432	ReturnStatement	return errno ;	225:3:6292:6304	4224	1	True				
ANR	4433	Identifier	errno		4224	0					
ANR	4434	IfStatement	if ( mode == 0 )		4224	2					
ANR	4435	Condition	mode == 0	229:7:6371:6379	4224	0	True				
ANR	4436	EqualityExpression	mode == 0		4224	0		==			
ANR	4437	Identifier	mode		4224	0					
ANR	4438	PrimaryExpression	0		4224	1					
ANR	4439	CompoundStatement		36:18:1046:1046	4224	1					
ANR	4440	ExpressionStatement	free ( real_path )	230:3:6387:6402	4224	0	True				
ANR	4441	CallExpression	free ( real_path )		4224	0					
ANR	4442	Callee	free		4224	0					
ANR	4443	Identifier	free		4224	0					
ANR	4444	ArgumentList	real_path		4224	1					
ANR	4445	Argument	real_path		4224	0					
ANR	4446	Identifier	real_path		4224	0					
ANR	4447	ReturnStatement	return 0 ;	231:3:6407:6415	4224	1	True				
ANR	4448	PrimaryExpression	0		4224	0					
ANR	4449	IfStatement	"if ( ! OpenThreadToken ( GetCurrentThread ( ) , TOKEN_ALL_ACCESS , TRUE , & thread_token ) )"		4224	3					
ANR	4450	Condition	"! OpenThreadToken ( GetCurrentThread ( ) , TOKEN_ALL_ACCESS , TRUE , & thread_token )"	244:5:6917:6991	4224	0	True				
ANR	4451	UnaryOperationExpression	"! OpenThreadToken ( GetCurrentThread ( ) , TOKEN_ALL_ACCESS , TRUE , & thread_token )"		4224	0					
ANR	4452	UnaryOperator	!		4224	0					
ANR	4453	CallExpression	"OpenThreadToken ( GetCurrentThread ( ) , TOKEN_ALL_ACCESS , TRUE , & thread_token )"		4224	1					
ANR	4454	Callee	OpenThreadToken		4224	0					
ANR	4455	Identifier	OpenThreadToken		4224	0					
ANR	4456	ArgumentList	GetCurrentThread ( )		4224	1					
ANR	4457	Argument	GetCurrentThread ( )		4224	0					
ANR	4458	CallExpression	GetCurrentThread ( )		4224	0					
ANR	4459	Callee	GetCurrentThread		4224	0					
ANR	4460	Identifier	GetCurrentThread		4224	0					
ANR	4461	ArgumentList			4224	1					
ANR	4462	Argument	TOKEN_ALL_ACCESS		4224	1					
ANR	4463	Identifier	TOKEN_ALL_ACCESS		4224	0					
ANR	4464	Argument	TRUE		4224	2					
ANR	4465	Identifier	TRUE		4224	0					
ANR	4466	Argument	& thread_token		4224	3					
ANR	4467	UnaryOperationExpression	& thread_token		4224	0					
ANR	4468	UnaryOperator	&		4224	0					
ANR	4469	Identifier	thread_token		4224	1					
ANR	4470	CompoundStatement		52:3:1663:1689	4224	1					
ANR	4471	IdentifierDeclStatement	DWORD err = GetLastError ( ) ;	245:3:6999:7025	4224	0	True				
ANR	4472	IdentifierDecl	err = GetLastError ( )		4224	0					
ANR	4473	IdentifierDeclType	DWORD		4224	0					
ANR	4474	Identifier	err		4224	1					
ANR	4475	AssignmentExpression	err = GetLastError ( )		4224	2		=			
ANR	4476	Identifier	err		4224	0					
ANR	4477	CallExpression	GetLastError ( )		4224	1					
ANR	4478	Callee	GetLastError		4224	0					
ANR	4479	Identifier	GetLastError		4224	0					
ANR	4480	ArgumentList			4224	1					
ANR	4481	IfStatement	if ( GetLastError ( ) == ERROR_NO_TOKEN )		4224	1					
ANR	4482	Condition	GetLastError ( ) == ERROR_NO_TOKEN	246:7:7034:7065	4224	0	True				
ANR	4483	EqualityExpression	GetLastError ( ) == ERROR_NO_TOKEN		4224	0		==			
ANR	4484	CallExpression	GetLastError ( )		4224	0					
ANR	4485	Callee	GetLastError		4224	0					
ANR	4486	Identifier	GetLastError		4224	0					
ANR	4487	ArgumentList			4224	1					
ANR	4488	Identifier	ERROR_NO_TOKEN		4224	1					
ANR	4489	CompoundStatement		53:41:1732:1732	4224	1					
ANR	4490	IfStatement	"if ( ! OpenProcessToken ( GetCurrentProcess ( ) , TOKEN_ALL_ACCESS , & thread_token ) )"		4224	0					
ANR	4491	Condition	"! OpenProcessToken ( GetCurrentProcess ( ) , TOKEN_ALL_ACCESS , & thread_token )"	247:8:7078:7148	4224	0	True				
ANR	4492	UnaryOperationExpression	"! OpenProcessToken ( GetCurrentProcess ( ) , TOKEN_ALL_ACCESS , & thread_token )"		4224	0					
ANR	4493	UnaryOperator	!		4224	0					
ANR	4494	CallExpression	"OpenProcessToken ( GetCurrentProcess ( ) , TOKEN_ALL_ACCESS , & thread_token )"		4224	1					
ANR	4495	Callee	OpenProcessToken		4224	0					
ANR	4496	Identifier	OpenProcessToken		4224	0					
ANR	4497	ArgumentList	GetCurrentProcess ( )		4224	1					
ANR	4498	Argument	GetCurrentProcess ( )		4224	0					
ANR	4499	CallExpression	GetCurrentProcess ( )		4224	0					
ANR	4500	Callee	GetCurrentProcess		4224	0					
ANR	4501	Identifier	GetCurrentProcess		4224	0					
ANR	4502	ArgumentList			4224	1					
ANR	4503	Argument	TOKEN_ALL_ACCESS		4224	1					
ANR	4504	Identifier	TOKEN_ALL_ACCESS		4224	0					
ANR	4505	Argument	& thread_token		4224	2					
ANR	4506	UnaryOperationExpression	& thread_token		4224	0					
ANR	4507	UnaryOperator	&		4224	0					
ANR	4508	Identifier	thread_token		4224	1					
ANR	4509	CompoundStatement		54:81:1815:1815	4224	1					
ANR	4510	ExpressionStatement	TWG ( impersonation_token ) = NULL	248:6:7159:7190	4224	0	True				
ANR	4511	AssignmentExpression	TWG ( impersonation_token ) = NULL		4224	0		=			
ANR	4512	CallExpression	TWG ( impersonation_token )		4224	0					
ANR	4513	Callee	TWG		4224	0					
ANR	4514	Identifier	TWG		4224	0					
ANR	4515	ArgumentList	impersonation_token		4224	1					
ANR	4516	Argument	impersonation_token		4224	0					
ANR	4517	Identifier	impersonation_token		4224	0					
ANR	4518	Identifier	NULL		4224	1					
ANR	4519	GotoStatement	goto Finished ;	249:6:7198:7211	4224	1	True				
ANR	4520	Identifier	Finished		4224	0					
ANR	4521	ExpressionStatement	token_sid = tsrm_win32_get_token_sid ( thread_token )	255:2:7282:7332	4224	4	True				
ANR	4522	AssignmentExpression	token_sid = tsrm_win32_get_token_sid ( thread_token )		4224	0		=			
ANR	4523	Identifier	token_sid		4224	0					
ANR	4524	CallExpression	tsrm_win32_get_token_sid ( thread_token )		4224	1					
ANR	4525	Callee	tsrm_win32_get_token_sid		4224	0					
ANR	4526	Identifier	tsrm_win32_get_token_sid		4224	0					
ANR	4527	ArgumentList	thread_token		4224	1					
ANR	4528	Argument	thread_token		4224	0					
ANR	4529	Identifier	thread_token		4224	0					
ANR	4530	IfStatement	if ( ! token_sid )		4224	5					
ANR	4531	Condition	! token_sid	256:6:7340:7349	4224	0	True				
ANR	4532	UnaryOperationExpression	! token_sid		4224	0					
ANR	4533	UnaryOperator	!		4224	0					
ANR	4534	Identifier	token_sid		4224	1					
ANR	4535	CompoundStatement		63:18:2016:2016	4224	1					
ANR	4536	IfStatement	if ( TWG ( impersonation_token_sid ) )		4224	0					
ANR	4537	Condition	TWG ( impersonation_token_sid )	257:7:7361:7388	4224	0	True				
ANR	4538	CallExpression	TWG ( impersonation_token_sid )		4224	0					
ANR	4539	Callee	TWG		4224	0					
ANR	4540	Identifier	TWG		4224	0					
ANR	4541	ArgumentList	impersonation_token_sid		4224	1					
ANR	4542	Argument	impersonation_token_sid		4224	0					
ANR	4543	Identifier	impersonation_token_sid		4224	0					
ANR	4544	CompoundStatement		64:37:2055:2055	4224	1					
ANR	4545	ExpressionStatement	free ( TWG ( impersonation_token_sid ) )	258:4:7397:7431	4224	0	True				
ANR	4546	CallExpression	free ( TWG ( impersonation_token_sid ) )		4224	0					
ANR	4547	Callee	free		4224	0					
ANR	4548	Identifier	free		4224	0					
ANR	4549	ArgumentList	TWG ( impersonation_token_sid )		4224	1					
ANR	4550	Argument	TWG ( impersonation_token_sid )		4224	0					
ANR	4551	CallExpression	TWG ( impersonation_token_sid )		4224	0					
ANR	4552	Callee	TWG		4224	0					
ANR	4553	Identifier	TWG		4224	0					
ANR	4554	ArgumentList	impersonation_token_sid		4224	1					
ANR	4555	Argument	impersonation_token_sid		4224	0					
ANR	4556	Identifier	impersonation_token_sid		4224	0					
ANR	4557	ExpressionStatement	TWG ( impersonation_token_sid ) = NULL	260:3:7441:7476	4224	1	True				
ANR	4558	AssignmentExpression	TWG ( impersonation_token_sid ) = NULL		4224	0		=			
ANR	4559	CallExpression	TWG ( impersonation_token_sid )		4224	0					
ANR	4560	Callee	TWG		4224	0					
ANR	4561	Identifier	TWG		4224	0					
ANR	4562	ArgumentList	impersonation_token_sid		4224	1					
ANR	4563	Argument	impersonation_token_sid		4224	0					
ANR	4564	Identifier	impersonation_token_sid		4224	0					
ANR	4565	Identifier	NULL		4224	1					
ANR	4566	GotoStatement	goto Finished ;	261:3:7481:7494	4224	2	True				
ANR	4567	Identifier	Finished		4224	0					
ANR	4568	IfStatement	"if ( ! TWG ( impersonation_token_sid ) || ! EqualSid ( token_sid , TWG ( impersonation_token_sid ) ) )"		4224	6					
ANR	4569	Condition	"! TWG ( impersonation_token_sid ) || ! EqualSid ( token_sid , TWG ( impersonation_token_sid ) )"	265:6:7577:7659	4224	0	True				
ANR	4570	OrExpression	"! TWG ( impersonation_token_sid ) || ! EqualSid ( token_sid , TWG ( impersonation_token_sid ) )"		4224	0		||			
ANR	4571	UnaryOperationExpression	! TWG ( impersonation_token_sid )		4224	0					
ANR	4572	UnaryOperator	!		4224	0					
ANR	4573	CallExpression	TWG ( impersonation_token_sid )		4224	1					
ANR	4574	Callee	TWG		4224	0					
ANR	4575	Identifier	TWG		4224	0					
ANR	4576	ArgumentList	impersonation_token_sid		4224	1					
ANR	4577	Argument	impersonation_token_sid		4224	0					
ANR	4578	Identifier	impersonation_token_sid		4224	0					
ANR	4579	UnaryOperationExpression	"! EqualSid ( token_sid , TWG ( impersonation_token_sid ) )"		4224	1					
ANR	4580	UnaryOperator	!		4224	0					
ANR	4581	CallExpression	"EqualSid ( token_sid , TWG ( impersonation_token_sid ) )"		4224	1					
ANR	4582	Callee	EqualSid		4224	0					
ANR	4583	Identifier	EqualSid		4224	0					
ANR	4584	ArgumentList	token_sid		4224	1					
ANR	4585	Argument	token_sid		4224	0					
ANR	4586	Identifier	token_sid		4224	0					
ANR	4587	Argument	TWG ( impersonation_token_sid )		4224	1					
ANR	4588	CallExpression	TWG ( impersonation_token_sid )		4224	0					
ANR	4589	Callee	TWG		4224	0					
ANR	4590	Identifier	TWG		4224	0					
ANR	4591	ArgumentList	impersonation_token_sid		4224	1					
ANR	4592	Argument	impersonation_token_sid		4224	0					
ANR	4593	Identifier	impersonation_token_sid		4224	0					
ANR	4594	CompoundStatement		72:91:2326:2326	4224	1					
ANR	4595	IfStatement	if ( TWG ( impersonation_token_sid ) )		4224	0					
ANR	4596	Condition	TWG ( impersonation_token_sid )	266:7:7671:7698	4224	0	True				
ANR	4597	CallExpression	TWG ( impersonation_token_sid )		4224	0					
ANR	4598	Callee	TWG		4224	0					
ANR	4599	Identifier	TWG		4224	0					
ANR	4600	ArgumentList	impersonation_token_sid		4224	1					
ANR	4601	Argument	impersonation_token_sid		4224	0					
ANR	4602	Identifier	impersonation_token_sid		4224	0					
ANR	4603	CompoundStatement		73:37:2365:2365	4224	1					
ANR	4604	ExpressionStatement	free ( TWG ( impersonation_token_sid ) )	267:4:7707:7741	4224	0	True				
ANR	4605	CallExpression	free ( TWG ( impersonation_token_sid ) )		4224	0					
ANR	4606	Callee	free		4224	0					
ANR	4607	Identifier	free		4224	0					
ANR	4608	ArgumentList	TWG ( impersonation_token_sid )		4224	1					
ANR	4609	Argument	TWG ( impersonation_token_sid )		4224	0					
ANR	4610	CallExpression	TWG ( impersonation_token_sid )		4224	0					
ANR	4611	Callee	TWG		4224	0					
ANR	4612	Identifier	TWG		4224	0					
ANR	4613	ArgumentList	impersonation_token_sid		4224	1					
ANR	4614	Argument	impersonation_token_sid		4224	0					
ANR	4615	Identifier	impersonation_token_sid		4224	0					
ANR	4616	ExpressionStatement	TWG ( impersonation_token_sid ) = token_sid	269:3:7751:7791	4224	1	True				
ANR	4617	AssignmentExpression	TWG ( impersonation_token_sid ) = token_sid		4224	0		=			
ANR	4618	CallExpression	TWG ( impersonation_token_sid )		4224	0					
ANR	4619	Callee	TWG		4224	0					
ANR	4620	Identifier	TWG		4224	0					
ANR	4621	ArgumentList	impersonation_token_sid		4224	1					
ANR	4622	Argument	impersonation_token_sid		4224	0					
ANR	4623	Identifier	impersonation_token_sid		4224	0					
ANR	4624	Identifier	token_sid		4224	1					
ANR	4625	IfStatement	"if ( ! DuplicateToken ( thread_token , SecurityImpersonation , & TWG ( impersonation_token ) ) )"		4224	2					
ANR	4626	Condition	"! DuplicateToken ( thread_token , SecurityImpersonation , & TWG ( impersonation_token ) )"	272:7:7852:7930	4224	0	True				
ANR	4627	UnaryOperationExpression	"! DuplicateToken ( thread_token , SecurityImpersonation , & TWG ( impersonation_token ) )"		4224	0					
ANR	4628	UnaryOperator	!		4224	0					
ANR	4629	CallExpression	"DuplicateToken ( thread_token , SecurityImpersonation , & TWG ( impersonation_token ) )"		4224	1					
ANR	4630	Callee	DuplicateToken		4224	0					
ANR	4631	Identifier	DuplicateToken		4224	0					
ANR	4632	ArgumentList	thread_token		4224	1					
ANR	4633	Argument	thread_token		4224	0					
ANR	4634	Identifier	thread_token		4224	0					
ANR	4635	Argument	SecurityImpersonation		4224	1					
ANR	4636	Identifier	SecurityImpersonation		4224	0					
ANR	4637	Argument	& TWG ( impersonation_token )		4224	2					
ANR	4638	UnaryOperationExpression	& TWG ( impersonation_token )		4224	0					
ANR	4639	UnaryOperator	&		4224	0					
ANR	4640	CallExpression	TWG ( impersonation_token )		4224	1					
ANR	4641	Callee	TWG		4224	0					
ANR	4642	Identifier	TWG		4224	0					
ANR	4643	ArgumentList	impersonation_token		4224	1					
ANR	4644	Argument	impersonation_token		4224	0					
ANR	4645	Identifier	impersonation_token		4224	0					
ANR	4646	CompoundStatement		79:88:2597:2597	4224	1					
ANR	4647	GotoStatement	goto Finished ;	273:4:7939:7952	4224	0	True				
ANR	4648	Identifier	Finished		4224	0					
ANR	4649	ElseStatement	else		4224	0					
ANR	4650	CompoundStatement		82:9:2632:2632	4224	0					
ANR	4651	ExpressionStatement	free ( token_sid )	277:3:8015:8030	4224	0	True				
ANR	4652	CallExpression	free ( token_sid )		4224	0					
ANR	4653	Callee	free		4224	0					
ANR	4654	Identifier	free		4224	0					
ANR	4655	ArgumentList	token_sid		4224	1					
ANR	4656	Argument	token_sid		4224	0					
ANR	4657	Identifier	token_sid		4224	0					
ANR	4658	IfStatement	if ( CWDG ( realpath_cache_size_limit ) )		4224	7					
ANR	4659	Condition	CWDG ( realpath_cache_size_limit )	280:6:8043:8073	4224	0	True				
ANR	4660	CallExpression	CWDG ( realpath_cache_size_limit )		4224	0					
ANR	4661	Callee	CWDG		4224	0					
ANR	4662	Identifier	CWDG		4224	0					
ANR	4663	ArgumentList	realpath_cache_size_limit		4224	1					
ANR	4664	Argument	realpath_cache_size_limit		4224	0					
ANR	4665	Identifier	realpath_cache_size_limit		4224	0					
ANR	4666	CompoundStatement		87:39:2740:2740	4224	1					
ANR	4667	ExpressionStatement	t = time ( 0 )	281:3:8081:8092	4224	0	True				
ANR	4668	AssignmentExpression	t = time ( 0 )		4224	0		=			
ANR	4669	Identifier	t		4224	0					
ANR	4670	CallExpression	time ( 0 )		4224	1					
ANR	4671	Callee	time		4224	0					
ANR	4672	Identifier	time		4224	0					
ANR	4673	ArgumentList	0		4224	1					
ANR	4674	Argument	0		4224	0					
ANR	4675	PrimaryExpression	0		4224	0					
ANR	4676	Statement	bucket	282:3:8097:8102	4224	1	True				
ANR	4677	Statement	=	282:10:8104:8104	4224	2	True				
ANR	4678	Statement	realpath_cache_lookup	282:12:8106:8126	4224	3	True				
ANR	4679	Statement	(	282:33:8127:8127	4224	4	True				
ANR	4680	Statement	pathname	282:34:8128:8135	4224	5	True				
ANR	4681	Statement	","	282:42:8136:8136	4224	6	True				
ANR	4682	Statement	strlen	282:44:8138:8143	4224	7	True				
ANR	4683	Statement	(	282:50:8144:8144	4224	8	True				
ANR	4684	Statement	pathname	282:51:8145:8152	4224	9	True				
ANR	4685	Statement	)	282:59:8153:8153	4224	10	True				
ANR	4686	Statement	","	282:60:8154:8154	4224	11	True				
ANR	4687	Statement	t	282:62:8156:8156	4224	12	True				
ANR	4688	Statement	TSRMLS_CC	282:64:8158:8166	4224	13	True				
ANR	4689	Statement	)	282:73:8167:8167	4224	14	True				
ANR	4690	ExpressionStatement		282:74:8168:8168	4224	15	True				
ANR	4691	IfStatement	if ( bucket == NULL && real_path == NULL )		4224	16					
ANR	4692	Condition	bucket == NULL && real_path == NULL	283:6:8176:8210	4224	0	True				
ANR	4693	AndExpression	bucket == NULL && real_path == NULL		4224	0		&&			
ANR	4694	EqualityExpression	bucket == NULL		4224	0		==			
ANR	4695	Identifier	bucket		4224	0					
ANR	4696	Identifier	NULL		4224	1					
ANR	4697	EqualityExpression	real_path == NULL		4224	1		==			
ANR	4698	Identifier	real_path		4224	0					
ANR	4699	Identifier	NULL		4224	1					
ANR	4700	CompoundStatement		90:43:2877:2877	4224	1					
ANR	4701	ExpressionStatement	real_path = ( char * ) malloc ( MAX_PATH )	286:4:8332:8368	4224	0	True				
ANR	4702	AssignmentExpression	real_path = ( char * ) malloc ( MAX_PATH )		4224	0		=			
ANR	4703	Identifier	real_path		4224	0					
ANR	4704	CastExpression	( char * ) malloc ( MAX_PATH )		4224	1					
ANR	4705	CastTarget	char *		4224	0					
ANR	4706	CallExpression	malloc ( MAX_PATH )		4224	1					
ANR	4707	Callee	malloc		4224	0					
ANR	4708	Identifier	malloc		4224	0					
ANR	4709	ArgumentList	MAX_PATH		4224	1					
ANR	4710	Argument	MAX_PATH		4224	0					
ANR	4711	Identifier	MAX_PATH		4224	0					
ANR	4712	Statement	if	287:4:8374:8375	4224	1	True				
ANR	4713	Statement	(	287:6:8376:8376	4224	2	True				
ANR	4714	Statement	tsrm_realpath	287:7:8377:8389	4224	3	True				
ANR	4715	Statement	(	287:20:8390:8390	4224	4	True				
ANR	4716	Statement	pathname	287:21:8391:8398	4224	5	True				
ANR	4717	Statement	","	287:29:8399:8399	4224	6	True				
ANR	4718	Statement	real_path	287:31:8401:8409	4224	7	True				
ANR	4719	Statement	TSRMLS_CC	287:41:8411:8419	4224	8	True				
ANR	4720	Statement	)	287:50:8420:8420	4224	9	True				
ANR	4721	Statement	!=	287:52:8422:8423	4224	10	True				
ANR	4722	Statement	NULL	287:55:8425:8428	4224	11	True				
ANR	4723	Statement	)	287:59:8429:8429	4224	12	True				
ANR	4724	CompoundStatement		94:61:3095:3095	4224	13					
ANR	4725	ExpressionStatement	pathname = real_path	288:5:8438:8458	4224	0	True				
ANR	4726	AssignmentExpression	pathname = real_path		4224	0		=			
ANR	4727	Identifier	pathname		4224	0					
ANR	4728	Identifier	real_path		4224	1					
ANR	4729	Statement	bucket	289:5:8465:8470	4224	1	True				
ANR	4730	Statement	=	289:12:8472:8472	4224	2	True				
ANR	4731	Statement	realpath_cache_lookup	289:14:8474:8494	4224	3	True				
ANR	4732	Statement	(	289:35:8495:8495	4224	4	True				
ANR	4733	Statement	pathname	289:36:8496:8503	4224	5	True				
ANR	4734	Statement	","	289:44:8504:8504	4224	6	True				
ANR	4735	Statement	strlen	289:46:8506:8511	4224	7	True				
ANR	4736	Statement	(	289:52:8512:8512	4224	8	True				
ANR	4737	Statement	pathname	289:53:8513:8520	4224	9	True				
ANR	4738	Statement	)	289:61:8521:8521	4224	10	True				
ANR	4739	Statement	","	289:62:8522:8522	4224	11	True				
ANR	4740	Statement	t	289:64:8524:8524	4224	12	True				
ANR	4741	Statement	TSRMLS_CC	289:66:8526:8534	4224	13	True				
ANR	4742	Statement	)	289:75:8535:8535	4224	14	True				
ANR	4743	ExpressionStatement		289:76:8536:8536	4224	15	True				
ANR	4744	IfStatement	if ( mode == 0 || mode > 6 )		4224	8					
ANR	4745	Condition	mode == 0 || mode > 6	295:6:8646:8666	4224	0	True				
ANR	4746	OrExpression	mode == 0 || mode > 6		4224	0		||			
ANR	4747	EqualityExpression	mode == 0		4224	0		==			
ANR	4748	Identifier	mode		4224	0					
ANR	4749	PrimaryExpression	0		4224	1					
ANR	4750	RelationalExpression	mode > 6		4224	1		>			
ANR	4751	Identifier	mode		4224	0					
ANR	4752	PrimaryExpression	6		4224	1					
ANR	4753	CompoundStatement		102:29:3333:3333	4224	1					
ANR	4754	IfStatement	if ( bucket != NULL && bucket -> is_rvalid )		4224	0					
ANR	4755	Condition	bucket != NULL && bucket -> is_rvalid	296:6:8677:8711	4224	0	True				
ANR	4756	AndExpression	bucket != NULL && bucket -> is_rvalid		4224	0		&&			
ANR	4757	EqualityExpression	bucket != NULL		4224	0		!=			
ANR	4758	Identifier	bucket		4224	0					
ANR	4759	Identifier	NULL		4224	1					
ANR	4760	PtrMemberAccess	bucket -> is_rvalid		4224	1					
ANR	4761	Identifier	bucket		4224	0					
ANR	4762	Identifier	is_rvalid		4224	1					
ANR	4763	CompoundStatement		103:43:3378:3378	4224	1					
ANR	4764	ExpressionStatement	fAccess = bucket -> is_readable	297:4:8720:8749	4224	0	True				
ANR	4765	AssignmentExpression	fAccess = bucket -> is_readable		4224	0		=			
ANR	4766	Identifier	fAccess		4224	0					
ANR	4767	PtrMemberAccess	bucket -> is_readable		4224	1					
ANR	4768	Identifier	bucket		4224	0					
ANR	4769	Identifier	is_readable		4224	1					
ANR	4770	GotoStatement	goto Finished ;	298:4:8755:8768	4224	1	True				
ANR	4771	Identifier	Finished		4224	0					
ANR	4772	ExpressionStatement	desired_access = FILE_GENERIC_READ	300:4:8779:8813	4224	1	True				
ANR	4773	AssignmentExpression	desired_access = FILE_GENERIC_READ		4224	0		=			
ANR	4774	Identifier	desired_access		4224	0					
ANR	4775	Identifier	FILE_GENERIC_READ		4224	1					
ANR	4776	ElseStatement	else		4224	0					
ANR	4777	IfStatement	if ( mode <= 2 )		4224	0					
ANR	4778	Condition	mode <= 2	301:13:8828:8836	4224	0	True				
ANR	4779	RelationalExpression	mode <= 2		4224	0		<=			
ANR	4780	Identifier	mode		4224	0					
ANR	4781	PrimaryExpression	2		4224	1					
ANR	4782	CompoundStatement		108:24:3503:3503	4224	1					
ANR	4783	IfStatement	if ( bucket != NULL && bucket -> is_wvalid )		4224	0					
ANR	4784	Condition	bucket != NULL && bucket -> is_wvalid	302:6:8847:8881	4224	0	True				
ANR	4785	AndExpression	bucket != NULL && bucket -> is_wvalid		4224	0		&&			
ANR	4786	EqualityExpression	bucket != NULL		4224	0		!=			
ANR	4787	Identifier	bucket		4224	0					
ANR	4788	Identifier	NULL		4224	1					
ANR	4789	PtrMemberAccess	bucket -> is_wvalid		4224	1					
ANR	4790	Identifier	bucket		4224	0					
ANR	4791	Identifier	is_wvalid		4224	1					
ANR	4792	CompoundStatement		109:43:3548:3548	4224	1					
ANR	4793	ExpressionStatement	fAccess = bucket -> is_writable	303:4:8890:8919	4224	0	True				
ANR	4794	AssignmentExpression	fAccess = bucket -> is_writable		4224	0		=			
ANR	4795	Identifier	fAccess		4224	0					
ANR	4796	PtrMemberAccess	bucket -> is_writable		4224	1					
ANR	4797	Identifier	bucket		4224	0					
ANR	4798	Identifier	is_writable		4224	1					
ANR	4799	GotoStatement	goto Finished ;	304:4:8925:8938	4224	1	True				
ANR	4800	Identifier	Finished		4224	0					
ANR	4801	ExpressionStatement	desired_access = FILE_GENERIC_WRITE	306:3:8948:8983	4224	1	True				
ANR	4802	AssignmentExpression	desired_access = FILE_GENERIC_WRITE		4224	0		=			
ANR	4803	Identifier	desired_access		4224	0					
ANR	4804	Identifier	FILE_GENERIC_WRITE		4224	1					
ANR	4805	ElseStatement	else		4224	0					
ANR	4806	IfStatement	if ( mode <= 4 )		4224	0					
ANR	4807	Condition	mode <= 4	307:13:8998:9006	4224	0	True				
ANR	4808	RelationalExpression	mode <= 4		4224	0		<=			
ANR	4809	Identifier	mode		4224	0					
ANR	4810	PrimaryExpression	4		4224	1					
ANR	4811	CompoundStatement		114:24:3673:3673	4224	1					
ANR	4812	IfStatement	if ( bucket != NULL && bucket -> is_rvalid )		4224	0					
ANR	4813	Condition	bucket != NULL && bucket -> is_rvalid	308:6:9017:9051	4224	0	True				
ANR	4814	AndExpression	bucket != NULL && bucket -> is_rvalid		4224	0		&&			
ANR	4815	EqualityExpression	bucket != NULL		4224	0		!=			
ANR	4816	Identifier	bucket		4224	0					
ANR	4817	Identifier	NULL		4224	1					
ANR	4818	PtrMemberAccess	bucket -> is_rvalid		4224	1					
ANR	4819	Identifier	bucket		4224	0					
ANR	4820	Identifier	is_rvalid		4224	1					
ANR	4821	CompoundStatement		115:43:3718:3718	4224	1					
ANR	4822	ExpressionStatement	fAccess = bucket -> is_readable	309:4:9060:9089	4224	0	True				
ANR	4823	AssignmentExpression	fAccess = bucket -> is_readable		4224	0		=			
ANR	4824	Identifier	fAccess		4224	0					
ANR	4825	PtrMemberAccess	bucket -> is_readable		4224	1					
ANR	4826	Identifier	bucket		4224	0					
ANR	4827	Identifier	is_readable		4224	1					
ANR	4828	GotoStatement	goto Finished ;	310:4:9095:9108	4224	1	True				
ANR	4829	Identifier	Finished		4224	0					
ANR	4830	ExpressionStatement	desired_access = FILE_GENERIC_READ | FILE_FLAG_BACKUP_SEMANTICS	312:3:9118:9179	4224	1	True				
ANR	4831	AssignmentExpression	desired_access = FILE_GENERIC_READ | FILE_FLAG_BACKUP_SEMANTICS		4224	0		=			
ANR	4832	Identifier	desired_access		4224	0					
ANR	4833	InclusiveOrExpression	FILE_GENERIC_READ | FILE_FLAG_BACKUP_SEMANTICS		4224	1		|			
ANR	4834	Identifier	FILE_GENERIC_READ		4224	0					
ANR	4835	Identifier	FILE_FLAG_BACKUP_SEMANTICS		4224	1					
ANR	4836	ElseStatement	else		4224	0					
ANR	4837	CompoundStatement		120:10:3855:3855	4224	0					
ANR	4838	IfStatement	if ( bucket != NULL && bucket -> is_rvalid && bucket -> is_wvalid )		4224	0					
ANR	4839	Condition	bucket != NULL && bucket -> is_rvalid && bucket -> is_wvalid	314:6:9216:9271	4224	0	True				
ANR	4840	AndExpression	bucket != NULL && bucket -> is_rvalid && bucket -> is_wvalid		4224	0		&&			
ANR	4841	EqualityExpression	bucket != NULL		4224	0		!=			
ANR	4842	Identifier	bucket		4224	0					
ANR	4843	Identifier	NULL		4224	1					
ANR	4844	AndExpression	bucket -> is_rvalid && bucket -> is_wvalid		4224	1		&&			
ANR	4845	PtrMemberAccess	bucket -> is_rvalid		4224	0					
ANR	4846	Identifier	bucket		4224	0					
ANR	4847	Identifier	is_rvalid		4224	1					
ANR	4848	PtrMemberAccess	bucket -> is_wvalid		4224	1					
ANR	4849	Identifier	bucket		4224	0					
ANR	4850	Identifier	is_wvalid		4224	1					
ANR	4851	CompoundStatement		121:64:3938:3938	4224	1					
ANR	4852	ExpressionStatement	fAccess = bucket -> is_readable & bucket -> is_writable	315:4:9280:9331	4224	0	True				
ANR	4853	AssignmentExpression	fAccess = bucket -> is_readable & bucket -> is_writable		4224	0		=			
ANR	4854	Identifier	fAccess		4224	0					
ANR	4855	BitAndExpression	bucket -> is_readable & bucket -> is_writable		4224	1		&			
ANR	4856	PtrMemberAccess	bucket -> is_readable		4224	0					
ANR	4857	Identifier	bucket		4224	0					
ANR	4858	Identifier	is_readable		4224	1					
ANR	4859	PtrMemberAccess	bucket -> is_writable		4224	1					
ANR	4860	Identifier	bucket		4224	0					
ANR	4861	Identifier	is_writable		4224	1					
ANR	4862	GotoStatement	goto Finished ;	316:4:9337:9350	4224	1	True				
ANR	4863	Identifier	Finished		4224	0					
ANR	4864	ExpressionStatement	desired_access = FILE_GENERIC_READ | FILE_GENERIC_WRITE	318:3:9360:9415	4224	1	True				
ANR	4865	AssignmentExpression	desired_access = FILE_GENERIC_READ | FILE_GENERIC_WRITE		4224	0		=			
ANR	4866	Identifier	desired_access		4224	0					
ANR	4867	InclusiveOrExpression	FILE_GENERIC_READ | FILE_GENERIC_WRITE		4224	1		|			
ANR	4868	Identifier	FILE_GENERIC_READ		4224	0					
ANR	4869	Identifier	FILE_GENERIC_WRITE		4224	1					
ANR	4870	IfStatement	if ( TWG ( impersonation_token ) == NULL )		4224	9					
ANR	4871	Condition	TWG ( impersonation_token ) == NULL	321:5:9428:9459	4224	0	True				
ANR	4872	EqualityExpression	TWG ( impersonation_token ) == NULL		4224	0		==			
ANR	4873	CallExpression	TWG ( impersonation_token )		4224	0					
ANR	4874	Callee	TWG		4224	0					
ANR	4875	Identifier	TWG		4224	0					
ANR	4876	ArgumentList	impersonation_token		4224	1					
ANR	4877	Argument	impersonation_token		4224	0					
ANR	4878	Identifier	impersonation_token		4224	0					
ANR	4879	Identifier	NULL		4224	1					
ANR	4880	CompoundStatement		128:39:4126:4126	4224	1					
ANR	4881	GotoStatement	goto Finished ;	322:3:9467:9480	4224	0	True				
ANR	4882	Identifier	Finished		4224	0					
ANR	4883	IfStatement	"if ( GetFileSecurity ( pathname , sec_info , NULL , 0 , & sec_desc_length ) )"		4224	10					
ANR	4884	Condition	"GetFileSecurity ( pathname , sec_info , NULL , 0 , & sec_desc_length )"	326:5:9554:9615	4224	0	True				
ANR	4885	CallExpression	"GetFileSecurity ( pathname , sec_info , NULL , 0 , & sec_desc_length )"		4224	0					
ANR	4886	Callee	GetFileSecurity		4224	0					
ANR	4887	Identifier	GetFileSecurity		4224	0					
ANR	4888	ArgumentList	pathname		4224	1					
ANR	4889	Argument	pathname		4224	0					
ANR	4890	Identifier	pathname		4224	0					
ANR	4891	Argument	sec_info		4224	1					
ANR	4892	Identifier	sec_info		4224	0					
ANR	4893	Argument	NULL		4224	2					
ANR	4894	Identifier	NULL		4224	0					
ANR	4895	Argument	0		4224	3					
ANR	4896	PrimaryExpression	0		4224	0					
ANR	4897	Argument	& sec_desc_length		4224	4					
ANR	4898	UnaryOperationExpression	& sec_desc_length		4224	0					
ANR	4899	UnaryOperator	&		4224	0					
ANR	4900	Identifier	sec_desc_length		4224	1					
ANR	4901	CompoundStatement		133:69:4282:4282	4224	1					
ANR	4902	GotoStatement	goto Finished ;	327:3:9623:9636	4224	0	True				
ANR	4903	Identifier	Finished		4224	0					
ANR	4904	ExpressionStatement	psec_desc = ( BYTE * ) malloc ( sec_desc_length )	330:2:9645:9688	4224	11	True				
ANR	4905	AssignmentExpression	psec_desc = ( BYTE * ) malloc ( sec_desc_length )		4224	0		=			
ANR	4906	Identifier	psec_desc		4224	0					
ANR	4907	CastExpression	( BYTE * ) malloc ( sec_desc_length )		4224	1					
ANR	4908	CastTarget	BYTE *		4224	0					
ANR	4909	CallExpression	malloc ( sec_desc_length )		4224	1					
ANR	4910	Callee	malloc		4224	0					
ANR	4911	Identifier	malloc		4224	0					
ANR	4912	ArgumentList	sec_desc_length		4224	1					
ANR	4913	Argument	sec_desc_length		4224	0					
ANR	4914	Identifier	sec_desc_length		4224	0					
ANR	4915	IfStatement	"if ( psec_desc == NULL || ! GetFileSecurity ( pathname , sec_info , ( PSECURITY_DESCRIPTOR ) psec_desc , sec_desc_length , & sec_desc_length ) )"		4224	12					
ANR	4916	Condition	"psec_desc == NULL || ! GetFileSecurity ( pathname , sec_info , ( PSECURITY_DESCRIPTOR ) psec_desc , sec_desc_length , & sec_desc_length )"	331:5:9695:9823	4224	0	True				
ANR	4917	OrExpression	"psec_desc == NULL || ! GetFileSecurity ( pathname , sec_info , ( PSECURITY_DESCRIPTOR ) psec_desc , sec_desc_length , & sec_desc_length )"		4224	0		||			
ANR	4918	EqualityExpression	psec_desc == NULL		4224	0		==			
ANR	4919	Identifier	psec_desc		4224	0					
ANR	4920	Identifier	NULL		4224	1					
ANR	4921	UnaryOperationExpression	"! GetFileSecurity ( pathname , sec_info , ( PSECURITY_DESCRIPTOR ) psec_desc , sec_desc_length , & sec_desc_length )"		4224	1					
ANR	4922	UnaryOperator	!		4224	0					
ANR	4923	CallExpression	"GetFileSecurity ( pathname , sec_info , ( PSECURITY_DESCRIPTOR ) psec_desc , sec_desc_length , & sec_desc_length )"		4224	1					
ANR	4924	Callee	GetFileSecurity		4224	0					
ANR	4925	Identifier	GetFileSecurity		4224	0					
ANR	4926	ArgumentList	pathname		4224	1					
ANR	4927	Argument	pathname		4224	0					
ANR	4928	Identifier	pathname		4224	0					
ANR	4929	Argument	sec_info		4224	1					
ANR	4930	Identifier	sec_info		4224	0					
ANR	4931	Argument	( PSECURITY_DESCRIPTOR ) psec_desc		4224	2					
ANR	4932	CastExpression	( PSECURITY_DESCRIPTOR ) psec_desc		4224	0					
ANR	4933	CastTarget	PSECURITY_DESCRIPTOR		4224	0					
ANR	4934	Identifier	psec_desc		4224	1					
ANR	4935	Argument	sec_desc_length		4224	3					
ANR	4936	Identifier	sec_desc_length		4224	0					
ANR	4937	Argument	& sec_desc_length		4224	4					
ANR	4938	UnaryOperationExpression	& sec_desc_length		4224	0					
ANR	4939	UnaryOperator	&		4224	0					
ANR	4940	Identifier	sec_desc_length		4224	1					
ANR	4941	CompoundStatement		139:110:4490:4490	4224	1					
ANR	4942	GotoStatement	goto Finished ;	333:3:9831:9844	4224	0	True				
ANR	4943	Identifier	Finished		4224	0					
ANR	4944	ExpressionStatement	"MapGenericMask ( & desired_access , & gen_map )"	336:2:9853:9894	4224	13	True				
ANR	4945	CallExpression	"MapGenericMask ( & desired_access , & gen_map )"		4224	0					
ANR	4946	Callee	MapGenericMask		4224	0					
ANR	4947	Identifier	MapGenericMask		4224	0					
ANR	4948	ArgumentList	& desired_access		4224	1					
ANR	4949	Argument	& desired_access		4224	0					
ANR	4950	UnaryOperationExpression	& desired_access		4224	0					
ANR	4951	UnaryOperator	&		4224	0					
ANR	4952	Identifier	desired_access		4224	1					
ANR	4953	Argument	& gen_map		4224	1					
ANR	4954	UnaryOperationExpression	& gen_map		4224	0					
ANR	4955	UnaryOperator	&		4224	0					
ANR	4956	Identifier	gen_map		4224	1					
ANR	4957	IfStatement	"if ( ! AccessCheck ( ( PSECURITY_DESCRIPTOR ) psec_desc , TWG ( impersonation_token ) , desired_access , & gen_map , & privilege_set , & priv_set_length , & granted_access , & fAccess ) )"		4224	14					
ANR	4958	Condition	"! AccessCheck ( ( PSECURITY_DESCRIPTOR ) psec_desc , TWG ( impersonation_token ) , desired_access , & gen_map , & privilege_set , & priv_set_length , & granted_access , & fAccess )"	338:5:9902:10059	4224	0	True				
ANR	4959	UnaryOperationExpression	"! AccessCheck ( ( PSECURITY_DESCRIPTOR ) psec_desc , TWG ( impersonation_token ) , desired_access , & gen_map , & privilege_set , & priv_set_length , & granted_access , & fAccess )"		4224	0					
ANR	4960	UnaryOperator	!		4224	0					
ANR	4961	CallExpression	"AccessCheck ( ( PSECURITY_DESCRIPTOR ) psec_desc , TWG ( impersonation_token ) , desired_access , & gen_map , & privilege_set , & priv_set_length , & granted_access , & fAccess )"		4224	1					
ANR	4962	Callee	AccessCheck		4224	0					
ANR	4963	Identifier	AccessCheck		4224	0					
ANR	4964	ArgumentList	( PSECURITY_DESCRIPTOR ) psec_desc		4224	1					
ANR	4965	Argument	( PSECURITY_DESCRIPTOR ) psec_desc		4224	0					
ANR	4966	CastExpression	( PSECURITY_DESCRIPTOR ) psec_desc		4224	0					
ANR	4967	CastTarget	PSECURITY_DESCRIPTOR		4224	0					
ANR	4968	Identifier	psec_desc		4224	1					
ANR	4969	Argument	TWG ( impersonation_token )		4224	1					
ANR	4970	CallExpression	TWG ( impersonation_token )		4224	0					
ANR	4971	Callee	TWG		4224	0					
ANR	4972	Identifier	TWG		4224	0					
ANR	4973	ArgumentList	impersonation_token		4224	1					
ANR	4974	Argument	impersonation_token		4224	0					
ANR	4975	Identifier	impersonation_token		4224	0					
ANR	4976	Argument	desired_access		4224	2					
ANR	4977	Identifier	desired_access		4224	0					
ANR	4978	Argument	& gen_map		4224	3					
ANR	4979	UnaryOperationExpression	& gen_map		4224	0					
ANR	4980	UnaryOperator	&		4224	0					
ANR	4981	Identifier	gen_map		4224	1					
ANR	4982	Argument	& privilege_set		4224	4					
ANR	4983	UnaryOperationExpression	& privilege_set		4224	0					
ANR	4984	UnaryOperator	&		4224	0					
ANR	4985	Identifier	privilege_set		4224	1					
ANR	4986	Argument	& priv_set_length		4224	5					
ANR	4987	UnaryOperationExpression	& priv_set_length		4224	0					
ANR	4988	UnaryOperator	&		4224	0					
ANR	4989	Identifier	priv_set_length		4224	1					
ANR	4990	Argument	& granted_access		4224	6					
ANR	4991	UnaryOperationExpression	& granted_access		4224	0					
ANR	4992	UnaryOperator	&		4224	0					
ANR	4993	Identifier	granted_access		4224	1					
ANR	4994	Argument	& fAccess		4224	7					
ANR	4995	UnaryOperationExpression	& fAccess		4224	0					
ANR	4996	UnaryOperator	&		4224	0					
ANR	4997	Identifier	fAccess		4224	1					
ANR	4998	CompoundStatement		145:165:4726:4726	4224	1					
ANR	4999	GotoStatement	goto Finished_Impersonate ;	339:3:10067:10092	4224	0	True				
ANR	5000	Identifier	Finished_Impersonate		4224	0					
ANR	5001	IfStatement	if ( bucket != NULL )		4224	15					
ANR	5002	Condition	bucket != NULL	343:5:10146:10159	4224	0	True				
ANR	5003	EqualityExpression	bucket != NULL		4224	0		!=			
ANR	5004	Identifier	bucket		4224	0					
ANR	5005	Identifier	NULL		4224	1					
ANR	5006	CompoundStatement		150:21:4826:4826	4224	1					
ANR	5007	IfStatement	if ( desired_access == ( FILE_GENERIC_READ | FILE_FLAG_BACKUP_SEMANTICS ) )		4224	0					
ANR	5008	Condition	desired_access == ( FILE_GENERIC_READ | FILE_FLAG_BACKUP_SEMANTICS )	344:6:10170:10233	4224	0	True				
ANR	5009	EqualityExpression	desired_access == ( FILE_GENERIC_READ | FILE_FLAG_BACKUP_SEMANTICS )		4224	0		==			
ANR	5010	Identifier	desired_access		4224	0					
ANR	5011	InclusiveOrExpression	FILE_GENERIC_READ | FILE_FLAG_BACKUP_SEMANTICS		4224	1		|			
ANR	5012	Identifier	FILE_GENERIC_READ		4224	0					
ANR	5013	Identifier	FILE_FLAG_BACKUP_SEMANTICS		4224	1					
ANR	5014	CompoundStatement		151:72:4900:4900	4224	1					
ANR	5015	ExpressionStatement	bucket -> is_rvalid = 1	345:4:10242:10263	4224	0	True				
ANR	5016	AssignmentExpression	bucket -> is_rvalid = 1		4224	0		=			
ANR	5017	PtrMemberAccess	bucket -> is_rvalid		4224	0					
ANR	5018	Identifier	bucket		4224	0					
ANR	5019	Identifier	is_rvalid		4224	1					
ANR	5020	PrimaryExpression	1		4224	1					
ANR	5021	ExpressionStatement	bucket -> is_readable = fAccess	346:4:10269:10298	4224	1	True				
ANR	5022	AssignmentExpression	bucket -> is_readable = fAccess		4224	0		=			
ANR	5023	PtrMemberAccess	bucket -> is_readable		4224	0					
ANR	5024	Identifier	bucket		4224	0					
ANR	5025	Identifier	is_readable		4224	1					
ANR	5026	Identifier	fAccess		4224	1					
ANR	5027	ElseStatement	else		4224	0					
ANR	5028	IfStatement	if ( desired_access == FILE_GENERIC_WRITE )		4224	0					
ANR	5029	Condition	desired_access == FILE_GENERIC_WRITE	348:11:10316:10351	4224	0	True				
ANR	5030	EqualityExpression	desired_access == FILE_GENERIC_WRITE		4224	0		==			
ANR	5031	Identifier	desired_access		4224	0					
ANR	5032	Identifier	FILE_GENERIC_WRITE		4224	1					
ANR	5033	CompoundStatement		155:49:5018:5018	4224	1					
ANR	5034	ExpressionStatement	bucket -> is_wvalid = 1	349:4:10360:10381	4224	0	True				
ANR	5035	AssignmentExpression	bucket -> is_wvalid = 1		4224	0		=			
ANR	5036	PtrMemberAccess	bucket -> is_wvalid		4224	0					
ANR	5037	Identifier	bucket		4224	0					
ANR	5038	Identifier	is_wvalid		4224	1					
ANR	5039	PrimaryExpression	1		4224	1					
ANR	5040	ExpressionStatement	bucket -> is_writable = fAccess	350:4:10387:10416	4224	1	True				
ANR	5041	AssignmentExpression	bucket -> is_writable = fAccess		4224	0		=			
ANR	5042	PtrMemberAccess	bucket -> is_writable		4224	0					
ANR	5043	Identifier	bucket		4224	0					
ANR	5044	Identifier	is_writable		4224	1					
ANR	5045	Identifier	fAccess		4224	1					
ANR	5046	ElseStatement	else		4224	0					
ANR	5047	IfStatement	if ( desired_access == ( FILE_GENERIC_READ | FILE_GENERIC_WRITE ) )		4224	0					
ANR	5048	Condition	desired_access == ( FILE_GENERIC_READ | FILE_GENERIC_WRITE )	351:14:10432:10489	4224	0	True				
ANR	5049	EqualityExpression	desired_access == ( FILE_GENERIC_READ | FILE_GENERIC_WRITE )		4224	0		==			
ANR	5050	Identifier	desired_access		4224	0					
ANR	5051	InclusiveOrExpression	FILE_GENERIC_READ | FILE_GENERIC_WRITE		4224	1		|			
ANR	5052	Identifier	FILE_GENERIC_READ		4224	0					
ANR	5053	Identifier	FILE_GENERIC_WRITE		4224	1					
ANR	5054	CompoundStatement		158:74:5156:5156	4224	1					
ANR	5055	ExpressionStatement	bucket -> is_rvalid = 1	352:4:10498:10519	4224	0	True				
ANR	5056	AssignmentExpression	bucket -> is_rvalid = 1		4224	0		=			
ANR	5057	PtrMemberAccess	bucket -> is_rvalid		4224	0					
ANR	5058	Identifier	bucket		4224	0					
ANR	5059	Identifier	is_rvalid		4224	1					
ANR	5060	PrimaryExpression	1		4224	1					
ANR	5061	ExpressionStatement	bucket -> is_readable = fAccess	353:4:10525:10554	4224	1	True				
ANR	5062	AssignmentExpression	bucket -> is_readable = fAccess		4224	0		=			
ANR	5063	PtrMemberAccess	bucket -> is_readable		4224	0					
ANR	5064	Identifier	bucket		4224	0					
ANR	5065	Identifier	is_readable		4224	1					
ANR	5066	Identifier	fAccess		4224	1					
ANR	5067	ExpressionStatement	bucket -> is_wvalid = 1	354:4:10560:10581	4224	2	True				
ANR	5068	AssignmentExpression	bucket -> is_wvalid = 1		4224	0		=			
ANR	5069	PtrMemberAccess	bucket -> is_wvalid		4224	0					
ANR	5070	Identifier	bucket		4224	0					
ANR	5071	Identifier	is_wvalid		4224	1					
ANR	5072	PrimaryExpression	1		4224	1					
ANR	5073	ExpressionStatement	bucket -> is_writable = fAccess	355:4:10587:10616	4224	3	True				
ANR	5074	AssignmentExpression	bucket -> is_writable = fAccess		4224	0		=			
ANR	5075	PtrMemberAccess	bucket -> is_writable		4224	0					
ANR	5076	Identifier	bucket		4224	0					
ANR	5077	Identifier	is_writable		4224	1					
ANR	5078	Identifier	fAccess		4224	1					
ANR	5079	Label	Finished_Impersonate :	359:0:10628:10648	4224	16	True				
ANR	5080	Identifier	Finished_Impersonate		4224	0					
ANR	5081	IfStatement	if ( psec_desc != NULL )		4224	17					
ANR	5082	Condition	psec_desc != NULL	360:5:10655:10671	4224	0	True				
ANR	5083	EqualityExpression	psec_desc != NULL		4224	0		!=			
ANR	5084	Identifier	psec_desc		4224	0					
ANR	5085	Identifier	NULL		4224	1					
ANR	5086	CompoundStatement		167:24:5338:5338	4224	1					
ANR	5087	ExpressionStatement	free ( psec_desc )	361:3:10679:10694	4224	0	True				
ANR	5088	CallExpression	free ( psec_desc )		4224	0					
ANR	5089	Callee	free		4224	0					
ANR	5090	Identifier	free		4224	0					
ANR	5091	ArgumentList	psec_desc		4224	1					
ANR	5092	Argument	psec_desc		4224	0					
ANR	5093	Identifier	psec_desc		4224	0					
ANR	5094	ExpressionStatement	psec_desc = NULL	362:3:10699:10715	4224	1	True				
ANR	5095	AssignmentExpression	psec_desc = NULL		4224	0		=			
ANR	5096	Identifier	psec_desc		4224	0					
ANR	5097	Identifier	NULL		4224	1					
ANR	5098	Label	Finished :	365:0:10722:10730	4224	18	True				
ANR	5099	Identifier	Finished		4224	0					
ANR	5100	IfStatement	if ( thread_token != NULL )		4224	19					
ANR	5101	Condition	thread_token != NULL	366:5:10737:10756	4224	0	True				
ANR	5102	EqualityExpression	thread_token != NULL		4224	0		!=			
ANR	5103	Identifier	thread_token		4224	0					
ANR	5104	Identifier	NULL		4224	1					
ANR	5105	CompoundStatement		173:27:5423:5423	4224	1					
ANR	5106	ExpressionStatement	CloseHandle ( thread_token )	367:3:10764:10789	4224	0	True				
ANR	5107	CallExpression	CloseHandle ( thread_token )		4224	0					
ANR	5108	Callee	CloseHandle		4224	0					
ANR	5109	Identifier	CloseHandle		4224	0					
ANR	5110	ArgumentList	thread_token		4224	1					
ANR	5111	Argument	thread_token		4224	0					
ANR	5112	Identifier	thread_token		4224	0					
ANR	5113	IfStatement	if ( real_path != NULL )		4224	20					
ANR	5114	Condition	real_path != NULL	369:5:10800:10816	4224	0	True				
ANR	5115	EqualityExpression	real_path != NULL		4224	0		!=			
ANR	5116	Identifier	real_path		4224	0					
ANR	5117	Identifier	NULL		4224	1					
ANR	5118	CompoundStatement		176:24:5483:5483	4224	1					
ANR	5119	ExpressionStatement	free ( real_path )	370:3:10824:10839	4224	0	True				
ANR	5120	CallExpression	free ( real_path )		4224	0					
ANR	5121	Callee	free		4224	0					
ANR	5122	Identifier	free		4224	0					
ANR	5123	ArgumentList	real_path		4224	1					
ANR	5124	Argument	real_path		4224	0					
ANR	5125	Identifier	real_path		4224	0					
ANR	5126	ExpressionStatement	real_path = NULL	371:3:10844:10860	4224	1	True				
ANR	5127	AssignmentExpression	real_path = NULL		4224	0		=			
ANR	5128	Identifier	real_path		4224	0					
ANR	5129	Identifier	NULL		4224	1					
ANR	5130	IfStatement	if ( fAccess == FALSE )		4224	21					
ANR	5131	Condition	fAccess == FALSE	374:5:10872:10887	4224	0	True				
ANR	5132	EqualityExpression	fAccess == FALSE		4224	0		==			
ANR	5133	Identifier	fAccess		4224	0					
ANR	5134	Identifier	FALSE		4224	1					
ANR	5135	CompoundStatement		181:23:5554:5554	4224	1					
ANR	5136	ExpressionStatement	errno = EACCES	375:3:10895:10909	4224	0	True				
ANR	5137	AssignmentExpression	errno = EACCES		4224	0		=			
ANR	5138	Identifier	errno		4224	0					
ANR	5139	Identifier	EACCES		4224	1					
ANR	5140	ReturnStatement	return errno ;	376:3:10914:10926	4224	1	True				
ANR	5141	Identifier	errno		4224	0					
ANR	5142	ElseStatement	else		4224	0					
ANR	5143	CompoundStatement		184:9:5601:5601	4224	0					
ANR	5144	ReturnStatement	return 0 ;	378:3:10942:10950	4224	0	True				
ANR	5145	PrimaryExpression	0		4224	0					
ANR	5146	ReturnType	TSRM_API int		4224	1					
ANR	5147	Identifier	tsrm_win32_access		4224	2					
ANR	5148	ParameterList	"const char * pathname , int mode TSRMLS_DC"		4224	3					
ANR	5149	Parameter	const char * pathname	193:31:5293:5312	4224	0	True				
ANR	5150	ParameterType	const char *		4224	0					
ANR	5151	Identifier	pathname		4224	1					
ANR	5152	Parameter	int mode TSRMLS_DC	193:53:5315:5332	4224	1	True				
ANR	5153	ParameterType	int mode		4224	0					
ANR	5154	Identifier	TSRMLS_DC		4224	1					
ANR	5155	CFGEntryNode	ENTRY		4224		True				
ANR	5156	CFGExitNode	EXIT		4224		True				
ANR	5157	Symbol	GROUP_SECURITY_INFORMATION		4224						
ANR	5158	Symbol	FILE_GENERIC_WRITE		4224						
ANR	5159	Symbol	sec_info		4224						
ANR	5160	Symbol	impersonation_token		4224						
ANR	5161	Symbol	thread_token		4224						
ANR	5162	Symbol	type		4224						
ANR	5163	Symbol	tsrm_win32_get_token_sid		4224						
ANR	5164	Symbol	TSRMLS_DC		4224						
ANR	5165	Symbol	& TWG		4224						
ANR	5166	Symbol	impersonation_token_sid		4224						
ANR	5167	Symbol	mode		4224						
ANR	5168	Symbol	strlen		4224						
ANR	5169	Symbol	granted_access		4224						
ANR	5170	Symbol	desired_access		4224						
ANR	5171	Symbol	OpenProcessToken		4224						
ANR	5172	Symbol	EqualSid		4224						
ANR	5173	Symbol	& privilege_set		4224						
ANR	5174	Symbol	OWNER_SECURITY_INFORMATION		4224						
ANR	5175	Symbol	fAccess		4224						
ANR	5176	Symbol	errno		4224						
ANR	5177	Symbol	NULL		4224						
ANR	5178	Symbol	& type		4224						
ANR	5179	Symbol	TWG		4224						
ANR	5180	Symbol	& desired_access		4224						
ANR	5181	Symbol	GetCurrentThread		4224						
ANR	5182	Symbol	TRUE		4224						
ANR	5183	Symbol	GetCurrentProcess		4224						
ANR	5184	Symbol	DuplicateToken		4224						
ANR	5185	Symbol	pathname		4224						
ANR	5186	Symbol	privilege_set		4224						
ANR	5187	Symbol	sec_desc_length		4224						
ANR	5188	Symbol	bucket		4224						
ANR	5189	Symbol	GetFileSecurity		4224						
ANR	5190	Symbol	IS_ABSOLUTE_PATH		4224						
ANR	5191	Symbol	* bucket		4224						
ANR	5192	Symbol	& granted_access		4224						
ANR	5193	Symbol	AccessCheck		4224						
ANR	5194	Symbol	bucket -> is_readable		4224						
ANR	5195	Symbol	GetLastError		4224						
ANR	5196	Symbol	priv_set_length		4224						
ANR	5197	Symbol	FILE_FLAG_BACKUP_SEMANTICS		4224						
ANR	5198	Symbol	access		4224						
ANR	5199	Symbol	FILE_GENERIC_EXECUTE		4224						
ANR	5200	Symbol	bucket_key_alloc		4224						
ANR	5201	Symbol	FILE_GENERIC_READ		4224						
ANR	5202	Symbol	& priv_set_length		4224						
ANR	5203	Symbol	bucket -> is_wvalid		4224						
ANR	5204	Symbol	GetBinaryType		4224						
ANR	5205	Symbol	& sec_desc_length		4224						
ANR	5206	Symbol	gen_map		4224						
ANR	5207	Symbol	FILE_ALL_ACCESS		4224						
ANR	5208	Symbol	EACCES		4224						
ANR	5209	Symbol	TOKEN_ALL_ACCESS		4224						
ANR	5210	Symbol	realpath_cache_size_limit		4224						
ANR	5211	Symbol	DACL_SECURITY_INFORMATION		4224						
ANR	5212	Symbol	real_path		4224						
ANR	5213	Symbol	malloc		4224						
ANR	5214	Symbol	& thread_token		4224						
ANR	5215	Symbol	err		4224						
ANR	5216	Symbol	SecurityImpersonation		4224						
ANR	5217	Symbol	bucket -> is_writable		4224						
ANR	5218	Symbol	& fAccess		4224						
ANR	5219	Symbol	CWDG		4224						
ANR	5220	Symbol	psec_desc		4224						
ANR	5221	Symbol	bucket -> is_rvalid		4224						
ANR	5222	Symbol	OpenThreadToken		4224						
ANR	5223	Symbol	t		4224						
ANR	5224	Symbol	& gen_map		4224						
ANR	5225	Symbol	FALSE		4224						
ANR	5226	Symbol	MAX_PATH		4224						
ANR	5227	Symbol	time		4224						
ANR	5228	Symbol	token_sid		4224						
ANR	5229	Symbol	ERROR_NO_TOKEN		4224						
ANR	5230	DeclStmt									
ANR	5231	Decl							process_pair	process_pair *	ptr
ANR	5232	DeclStmt									
ANR	5233	Decl							process_pair	process_pair *	newptr
ANR	5234	Function	shm_get	410:0:11497:12089							
ANR	5235	FunctionDef	"shm_get (int key , void * addr)"		5234	0					
ANR	5236	CompoundStatement		411:0:11543:12089	5234	0					
ANR	5237	IdentifierDeclStatement	shm_pair * ptr ;	412:1:11546:11559	5234	0	True				
ANR	5238	IdentifierDecl	* ptr		5234	0					
ANR	5239	IdentifierDeclType	shm_pair *		5234	0					
ANR	5240	Identifier	ptr		5234	1					
ANR	5241	IdentifierDeclStatement	shm_pair * newptr ;	413:1:11562:11578	5234	1	True				
ANR	5242	IdentifierDecl	* newptr		5234	0					
ANR	5243	IdentifierDeclType	shm_pair *		5234	0					
ANR	5244	Identifier	newptr		5234	1					
ANR	5245	ExpressionStatement	TSRMLS_FETCH ( )	414:1:11581:11595	5234	2	True				
ANR	5246	CallExpression	TSRMLS_FETCH ( )		5234	0					
ANR	5247	Callee	TSRMLS_FETCH		5234	0					
ANR	5248	Identifier	TSRMLS_FETCH		5234	0					
ANR	5249	ArgumentList			5234	1					
ANR	5250	ForStatement	for ( ptr = TWG ( shm ) ; ptr < ( TWG ( shm ) + TWG ( shm_size ) ) ; ptr ++ )		5234	3					
ANR	5251	ForInit	ptr = TWG ( shm ) ;	416:6:11604:11618	5234	0	True				
ANR	5252	AssignmentExpression	ptr = TWG ( shm )		5234	0		=			
ANR	5253	Identifier	ptr		5234	0					
ANR	5254	CallExpression	TWG ( shm )		5234	1					
ANR	5255	Callee	TWG		5234	0					
ANR	5256	Identifier	TWG		5234	0					
ANR	5257	ArgumentList	shm		5234	1					
ANR	5258	Argument	shm		5234	0					
ANR	5259	Identifier	shm		5234	0					
ANR	5260	Condition	ptr < ( TWG ( shm ) + TWG ( shm_size ) )	416:22:11620:11651	5234	1	True				
ANR	5261	RelationalExpression	ptr < ( TWG ( shm ) + TWG ( shm_size ) )		5234	0		<			
ANR	5262	Identifier	ptr		5234	0					
ANR	5263	AdditiveExpression	TWG ( shm ) + TWG ( shm_size )		5234	1		+			
ANR	5264	CallExpression	TWG ( shm )		5234	0					
ANR	5265	Callee	TWG		5234	0					
ANR	5266	Identifier	TWG		5234	0					
ANR	5267	ArgumentList	shm		5234	1					
ANR	5268	Argument	shm		5234	0					
ANR	5269	Identifier	shm		5234	0					
ANR	5270	CallExpression	TWG ( shm_size )		5234	1					
ANR	5271	Callee	TWG		5234	0					
ANR	5272	Identifier	TWG		5234	0					
ANR	5273	ArgumentList	shm_size		5234	1					
ANR	5274	Argument	shm_size		5234	0					
ANR	5275	Identifier	shm_size		5234	0					
ANR	5276	PostIncDecOperationExpression	ptr ++	416:56:11654:11658	5234	2	True				
ANR	5277	Identifier	ptr		5234	0					
ANR	5278	IncDec	++		5234	1					
ANR	5279	CompoundStatement		6:63:117:117	5234	3					
ANR	5280	IfStatement	if ( ! ptr -> descriptor )		5234	0					
ANR	5281	Condition	! ptr -> descriptor	417:6:11669:11684	5234	0	True				
ANR	5282	UnaryOperationExpression	! ptr -> descriptor		5234	0					
ANR	5283	UnaryOperator	!		5234	0					
ANR	5284	PtrMemberAccess	ptr -> descriptor		5234	1					
ANR	5285	Identifier	ptr		5234	0					
ANR	5286	Identifier	descriptor		5234	1					
ANR	5287	CompoundStatement		7:24:143:143	5234	1					
ANR	5288	ContinueStatement	continue ;	418:3:11692:11700	5234	0	True				
ANR	5289	IfStatement	if ( ! addr && ptr -> descriptor -> shm_perm . key == key )		5234	1					
ANR	5290	Condition	! addr && ptr -> descriptor -> shm_perm . key == key	420:6:11712:11756	5234	0	True				
ANR	5291	AndExpression	! addr && ptr -> descriptor -> shm_perm . key == key		5234	0		&&			
ANR	5292	UnaryOperationExpression	! addr		5234	0					
ANR	5293	UnaryOperator	!		5234	0					
ANR	5294	Identifier	addr		5234	1					
ANR	5295	EqualityExpression	ptr -> descriptor -> shm_perm . key == key		5234	1		==			
ANR	5296	MemberAccess	ptr -> descriptor -> shm_perm . key		5234	0					
ANR	5297	PtrMemberAccess	ptr -> descriptor -> shm_perm		5234	0					
ANR	5298	PtrMemberAccess	ptr -> descriptor		5234	0					
ANR	5299	Identifier	ptr		5234	0					
ANR	5300	Identifier	descriptor		5234	1					
ANR	5301	Identifier	shm_perm		5234	1					
ANR	5302	Identifier	key		5234	1					
ANR	5303	Identifier	key		5234	1					
ANR	5304	CompoundStatement		10:53:215:215	5234	1					
ANR	5305	BreakStatement	break ;	421:3:11764:11769	5234	0	True				
ANR	5306	ElseStatement	else		5234	0					
ANR	5307	IfStatement	if ( ptr -> addr == addr )		5234	0					
ANR	5308	Condition	ptr -> addr == addr	422:13:11784:11800	5234	0	True				
ANR	5309	EqualityExpression	ptr -> addr == addr		5234	0		==			
ANR	5310	PtrMemberAccess	ptr -> addr		5234	0					
ANR	5311	Identifier	ptr		5234	0					
ANR	5312	Identifier	addr		5234	1					
ANR	5313	Identifier	addr		5234	1					
ANR	5314	CompoundStatement		12:32:259:259	5234	1					
ANR	5315	BreakStatement	break ;	423:3:11808:11813	5234	0	True				
ANR	5316	IfStatement	if ( ptr < ( TWG ( shm ) + TWG ( shm_size ) ) )		5234	4					
ANR	5317	Condition	ptr < ( TWG ( shm ) + TWG ( shm_size ) )	427:5:11828:11859	5234	0	True				
ANR	5318	RelationalExpression	ptr < ( TWG ( shm ) + TWG ( shm_size ) )		5234	0		<			
ANR	5319	Identifier	ptr		5234	0					
ANR	5320	AdditiveExpression	TWG ( shm ) + TWG ( shm_size )		5234	1		+			
ANR	5321	CallExpression	TWG ( shm )		5234	0					
ANR	5322	Callee	TWG		5234	0					
ANR	5323	Identifier	TWG		5234	0					
ANR	5324	ArgumentList	shm		5234	1					
ANR	5325	Argument	shm		5234	0					
ANR	5326	Identifier	shm		5234	0					
ANR	5327	CallExpression	TWG ( shm_size )		5234	1					
ANR	5328	Callee	TWG		5234	0					
ANR	5329	Identifier	TWG		5234	0					
ANR	5330	ArgumentList	shm_size		5234	1					
ANR	5331	Argument	shm_size		5234	0					
ANR	5332	Identifier	shm_size		5234	0					
ANR	5333	CompoundStatement		17:39:318:318	5234	1					
ANR	5334	ReturnStatement	return ptr ;	428:2:11866:11876	5234	0	True				
ANR	5335	Identifier	ptr		5234	0					
ANR	5336	ExpressionStatement	"newptr = ( shm_pair * ) realloc ( ( void * ) TWG ( shm ) , ( TWG ( shm_size ) + 1 ) * sizeof ( shm_pair ) )"	431:1:11883:11963	5234	5	True				
ANR	5337	AssignmentExpression	"newptr = ( shm_pair * ) realloc ( ( void * ) TWG ( shm ) , ( TWG ( shm_size ) + 1 ) * sizeof ( shm_pair ) )"		5234	0		=			
ANR	5338	Identifier	newptr		5234	0					
ANR	5339	CastExpression	"( shm_pair * ) realloc ( ( void * ) TWG ( shm ) , ( TWG ( shm_size ) + 1 ) * sizeof ( shm_pair ) )"		5234	1					
ANR	5340	CastTarget	shm_pair *		5234	0					
ANR	5341	CallExpression	"realloc ( ( void * ) TWG ( shm ) , ( TWG ( shm_size ) + 1 ) * sizeof ( shm_pair ) )"		5234	1					
ANR	5342	Callee	realloc		5234	0					
ANR	5343	Identifier	realloc		5234	0					
ANR	5344	ArgumentList	( void * ) TWG ( shm )		5234	1					
ANR	5345	Argument	( void * ) TWG ( shm )		5234	0					
ANR	5346	CastExpression	( void * ) TWG ( shm )		5234	0					
ANR	5347	CastTarget	void *		5234	0					
ANR	5348	CallExpression	TWG ( shm )		5234	1					
ANR	5349	Callee	TWG		5234	0					
ANR	5350	Identifier	TWG		5234	0					
ANR	5351	ArgumentList	shm		5234	1					
ANR	5352	Argument	shm		5234	0					
ANR	5353	Identifier	shm		5234	0					
ANR	5354	Argument	( TWG ( shm_size ) + 1 ) * sizeof ( shm_pair )		5234	1					
ANR	5355	MultiplicativeExpression	( TWG ( shm_size ) + 1 ) * sizeof ( shm_pair )		5234	0		*			
ANR	5356	AdditiveExpression	TWG ( shm_size ) + 1		5234	0		+			
ANR	5357	CallExpression	TWG ( shm_size )		5234	0					
ANR	5358	Callee	TWG		5234	0					
ANR	5359	Identifier	TWG		5234	0					
ANR	5360	ArgumentList	shm_size		5234	1					
ANR	5361	Argument	shm_size		5234	0					
ANR	5362	Identifier	shm_size		5234	0					
ANR	5363	PrimaryExpression	1		5234	1					
ANR	5364	SizeofExpression	sizeof ( shm_pair )		5234	1					
ANR	5365	Sizeof	sizeof		5234	0					
ANR	5366	SizeofOperand	shm_pair		5234	1					
ANR	5367	IfStatement	if ( newptr == NULL )		5234	6					
ANR	5368	Condition	newptr == NULL	432:5:11970:11983	5234	0	True				
ANR	5369	EqualityExpression	newptr == NULL		5234	0		==			
ANR	5370	Identifier	newptr		5234	0					
ANR	5371	Identifier	NULL		5234	1					
ANR	5372	CompoundStatement		22:21:442:442	5234	1					
ANR	5373	ReturnStatement	return NULL ;	433:2:11990:12001	5234	0	True				
ANR	5374	Identifier	NULL		5234	0					
ANR	5375	ExpressionStatement	TWG ( shm ) = newptr	436:1:12008:12025	5234	7	True				
ANR	5376	AssignmentExpression	TWG ( shm ) = newptr		5234	0		=			
ANR	5377	CallExpression	TWG ( shm )		5234	0					
ANR	5378	Callee	TWG		5234	0					
ANR	5379	Identifier	TWG		5234	0					
ANR	5380	ArgumentList	shm		5234	1					
ANR	5381	Argument	shm		5234	0					
ANR	5382	Identifier	shm		5234	0					
ANR	5383	Identifier	newptr		5234	1					
ANR	5384	ExpressionStatement	ptr = newptr + TWG ( shm_size )	437:1:12028:12056	5234	8	True				
ANR	5385	AssignmentExpression	ptr = newptr + TWG ( shm_size )		5234	0		=			
ANR	5386	Identifier	ptr		5234	0					
ANR	5387	AdditiveExpression	newptr + TWG ( shm_size )		5234	1		+			
ANR	5388	Identifier	newptr		5234	0					
ANR	5389	CallExpression	TWG ( shm_size )		5234	1					
ANR	5390	Callee	TWG		5234	0					
ANR	5391	Identifier	TWG		5234	0					
ANR	5392	ArgumentList	shm_size		5234	1					
ANR	5393	Argument	shm_size		5234	0					
ANR	5394	Identifier	shm_size		5234	0					
ANR	5395	ExpressionStatement	TWG ( shm_size ) ++	438:1:12059:12074	5234	9	True				
ANR	5396	PostIncDecOperationExpression	TWG ( shm_size ) ++		5234	0					
ANR	5397	CallExpression	TWG ( shm_size )		5234	0					
ANR	5398	Callee	TWG		5234	0					
ANR	5399	Identifier	TWG		5234	0					
ANR	5400	ArgumentList	shm_size		5234	1					
ANR	5401	Argument	shm_size		5234	0					
ANR	5402	Identifier	shm_size		5234	0					
ANR	5403	IncDec	++		5234	1					
ANR	5404	ReturnStatement	return ptr ;	439:1:12077:12087	5234	10	True				
ANR	5405	Identifier	ptr		5234	0					
ANR	5406	ReturnType	static shm_pair *		5234	1					
ANR	5407	Identifier	shm_get		5234	2					
ANR	5408	ParameterList	"int key , void * addr"		5234	3					
ANR	5409	Parameter	int key	410:25:11522:11528	5234	0	True				
ANR	5410	ParameterType	int		5234	0					
ANR	5411	Identifier	key		5234	1					
ANR	5412	Parameter	void * addr	410:34:11531:11540	5234	1	True				
ANR	5413	ParameterType	void *		5234	0					
ANR	5414	Identifier	addr		5234	1					
ANR	5415	CFGEntryNode	ENTRY		5234		True				
ANR	5416	CFGExitNode	EXIT		5234		True				
ANR	5417	Symbol	* * ptr		5234						
ANR	5418	Symbol	NULL		5234						
ANR	5419	Symbol	ptr -> descriptor -> shm_perm . key		5234						
ANR	5420	Symbol	TWG		5234						
ANR	5421	Symbol	* ptr -> descriptor		5234						
ANR	5422	Symbol	ptr -> addr		5234						
ANR	5423	Symbol	shm_size		5234						
ANR	5424	Symbol	realloc		5234						
ANR	5425	Symbol	ptr -> descriptor		5234						
ANR	5426	Symbol	ptr		5234						
ANR	5427	Symbol	newptr		5234						
ANR	5428	Symbol	* ptr		5234						
ANR	5429	Symbol	shm		5234						
ANR	5430	Symbol	addr		5234						
ANR	5431	Symbol	ptr -> descriptor -> shm_perm		5234						
ANR	5432	Symbol	key		5234						
ANR	5433	Function	dupHandle	442:0:12092:12323							
ANR	5434	FunctionDef	"dupHandle (HANDLE fh , BOOL inherit)"		5433	0					
ANR	5435	CompoundStatement		442:49:12141:12323	5433	0					
ANR	5436	IdentifierDeclStatement	"HANDLE copy , self = GetCurrentProcess ( ) ;"	443:1:12144:12183	5433	0	True				
ANR	5437	IdentifierDecl	copy		5433	0					
ANR	5438	IdentifierDeclType	HANDLE		5433	0					
ANR	5439	Identifier	copy		5433	1					
ANR	5440	IdentifierDecl	self = GetCurrentProcess ( )		5433	1					
ANR	5441	IdentifierDeclType	HANDLE		5433	0					
ANR	5442	Identifier	self		5433	1					
ANR	5443	AssignmentExpression	self = GetCurrentProcess ( )		5433	2		=			
ANR	5444	Identifier	self		5433	0					
ANR	5445	CallExpression	GetCurrentProcess ( )		5433	1					
ANR	5446	Callee	GetCurrentProcess		5433	0					
ANR	5447	Identifier	GetCurrentProcess		5433	0					
ANR	5448	ArgumentList			5433	1					
ANR	5449	IfStatement	"if ( ! DuplicateHandle ( self , fh , self , & copy , 0 , inherit , DUPLICATE_SAME_ACCESS | DUPLICATE_CLOSE_SOURCE ) )"		5433	1					
ANR	5450	Condition	"! DuplicateHandle ( self , fh , self , & copy , 0 , inherit , DUPLICATE_SAME_ACCESS | DUPLICATE_CLOSE_SOURCE )"	444:5:12190:12286	5433	0	True				
ANR	5451	UnaryOperationExpression	"! DuplicateHandle ( self , fh , self , & copy , 0 , inherit , DUPLICATE_SAME_ACCESS | DUPLICATE_CLOSE_SOURCE )"		5433	0					
ANR	5452	UnaryOperator	!		5433	0					
ANR	5453	CallExpression	"DuplicateHandle ( self , fh , self , & copy , 0 , inherit , DUPLICATE_SAME_ACCESS | DUPLICATE_CLOSE_SOURCE )"		5433	1					
ANR	5454	Callee	DuplicateHandle		5433	0					
ANR	5455	Identifier	DuplicateHandle		5433	0					
ANR	5456	ArgumentList	self		5433	1					
ANR	5457	Argument	self		5433	0					
ANR	5458	Identifier	self		5433	0					
ANR	5459	Argument	fh		5433	1					
ANR	5460	Identifier	fh		5433	0					
ANR	5461	Argument	self		5433	2					
ANR	5462	Identifier	self		5433	0					
ANR	5463	Argument	& copy		5433	3					
ANR	5464	UnaryOperationExpression	& copy		5433	0					
ANR	5465	UnaryOperator	&		5433	0					
ANR	5466	Identifier	copy		5433	1					
ANR	5467	Argument	0		5433	4					
ANR	5468	PrimaryExpression	0		5433	0					
ANR	5469	Argument	inherit		5433	5					
ANR	5470	Identifier	inherit		5433	0					
ANR	5471	Argument	DUPLICATE_SAME_ACCESS | DUPLICATE_CLOSE_SOURCE		5433	6					
ANR	5472	InclusiveOrExpression	DUPLICATE_SAME_ACCESS | DUPLICATE_CLOSE_SOURCE		5433	0		|			
ANR	5473	Identifier	DUPLICATE_SAME_ACCESS		5433	0					
ANR	5474	Identifier	DUPLICATE_CLOSE_SOURCE		5433	1					
ANR	5475	CompoundStatement		3:104:147:147	5433	1					
ANR	5476	ReturnStatement	return NULL ;	445:2:12293:12304	5433	0	True				
ANR	5477	Identifier	NULL		5433	0					
ANR	5478	ReturnStatement	return copy ;	447:1:12310:12321	5433	2	True				
ANR	5479	Identifier	copy		5433	0					
ANR	5480	ReturnType	static HANDLE		5433	1					
ANR	5481	Identifier	dupHandle		5433	2					
ANR	5482	ParameterList	"HANDLE fh , BOOL inherit"		5433	3					
ANR	5483	Parameter	HANDLE fh	442:24:12116:12124	5433	0	True				
ANR	5484	ParameterType	HANDLE		5433	0					
ANR	5485	Identifier	fh		5433	1					
ANR	5486	Parameter	BOOL inherit	442:35:12127:12138	5433	1	True				
ANR	5487	ParameterType	BOOL		5433	0					
ANR	5488	Identifier	inherit		5433	1					
ANR	5489	CFGEntryNode	ENTRY		5433		True				
ANR	5490	CFGExitNode	EXIT		5433		True				
ANR	5491	Symbol	DUPLICATE_CLOSE_SOURCE		5433						
ANR	5492	Symbol	fh		5433						
ANR	5493	Symbol	DuplicateHandle		5433						
ANR	5494	Symbol	NULL		5433						
ANR	5495	Symbol	& copy		5433						
ANR	5496	Symbol	inherit		5433						
ANR	5497	Symbol	DUPLICATE_SAME_ACCESS		5433						
ANR	5498	Symbol	GetCurrentProcess		5433						
ANR	5499	Symbol	self		5433						
ANR	5500	Symbol	copy		5433						
ANR	5501	Function	popen	450:0:12326:12461							
ANR	5502	FunctionDef	"popen (const char * command , const char * type)"		5501	0					
ANR	5503	CompoundStatement		451:0:12386:12461	5501	0					
ANR	5504	ExpressionStatement	TSRMLS_FETCH ( )	452:1:12389:12403	5501	0	True				
ANR	5505	CallExpression	TSRMLS_FETCH ( )		5501	0					
ANR	5506	Callee	TSRMLS_FETCH		5501	0					
ANR	5507	Identifier	TSRMLS_FETCH		5501	0					
ANR	5508	ArgumentList			5501	1					
ANR	5509	Statement	return	454:1:12407:12412	5501	1	True				
ANR	5510	Statement	popen_ex	454:8:12414:12421	5501	2	True				
ANR	5511	Statement	(	454:16:12422:12422	5501	3	True				
ANR	5512	Statement	command	454:17:12423:12429	5501	4	True				
ANR	5513	Statement	","	454:24:12430:12430	5501	5	True				
ANR	5514	Statement	type	454:26:12432:12435	5501	6	True				
ANR	5515	Statement	","	454:30:12436:12436	5501	7	True				
ANR	5516	Statement	NULL	454:32:12438:12441	5501	8	True				
ANR	5517	Statement	","	454:36:12442:12442	5501	9	True				
ANR	5518	Statement	NULL	454:38:12444:12447	5501	10	True				
ANR	5519	Statement	TSRMLS_CC	454:43:12449:12457	5501	11	True				
ANR	5520	Statement	)	454:52:12458:12458	5501	12	True				
ANR	5521	ExpressionStatement		454:53:12459:12459	5501	13	True				
ANR	5522	ReturnType	TSRM_API FILE *		5501	1					
ANR	5523	Identifier	popen		5501	2					
ANR	5524	ParameterList	"const char * command , const char * type"		5501	3					
ANR	5525	Parameter	const char * command	450:21:12347:12365	5501	0	True				
ANR	5526	ParameterType	const char *		5501	0					
ANR	5527	Identifier	command		5501	1					
ANR	5528	Parameter	const char * type	450:42:12368:12383	5501	1	True				
ANR	5529	ParameterType	const char *		5501	0					
ANR	5530	Identifier	type		5501	1					
ANR	5531	CFGEntryNode	ENTRY		5501		True				
ANR	5532	CFGExitNode	EXIT		5501		True				
ANR	5533	Symbol	type		5501						
ANR	5534	Symbol	command		5501						
ANR	5535	DeclStmt									
ANR	5536	Decl							FILE	FILE *	stream
ANR	5537	DeclStmt									
ANR	5538	Decl							int	int	fno
ANR	5539	Decl							int	int	type_len
ANR	5540	Decl							int	int	read
ANR	5541	Decl							int	int	mode
ANR	5542	DeclStmt									
ANR	5543	Decl							STARTUPINFO	STARTUPINFO	startup
ANR	5544	DeclStmt									
ANR	5545	Decl							PROCESS_INFORMATION	PROCESS_INFORMATION	process
ANR	5546	DeclStmt									
ANR	5547	Decl							SECURITY_ATTRIBUTES	SECURITY_ATTRIBUTES	security
ANR	5548	DeclStmt									
ANR	5549	Decl							HANDLE	HANDLE	in
ANR	5550	Decl							HANDLE	HANDLE	out
ANR	5551	DeclStmt									
ANR	5552	Decl							DWORD	DWORD	dwCreateFlags
ANR	5553	DeclStmt									
ANR	5554	Decl							BOOL	BOOL	res
ANR	5555	DeclStmt									
ANR	5556	Decl							process_pair	process_pair *	proc
ANR	5557	DeclStmt									
ANR	5558	Decl							char	char *	cmd
ANR	5559	DeclStmt									
ANR	5560	Decl							int	int	i
ANR	5561	DeclStmt									
ANR	5562	Decl							char	char *	ptype
ANR	5563	DeclStmt									
ANR	5564	Decl							HANDLE	HANDLE	thread_token
ANR	5565	DeclStmt									
ANR	5566	Decl							HANDLE	HANDLE	token_user
ANR	5567	DeclStmt									
ANR	5568	Decl							BOOL	BOOL	asuser
ANR	5569	DeclStmt									
ANR	5570	Decl							DWORD	DWORD	err
ANR	5571	Function	pclose	570:0:15413:15815							
ANR	5572	FunctionDef	pclose (FILE * stream)		5571	0					
ANR	5573	CompoundStatement		571:0:15447:15815	5571	0					
ANR	5574	IdentifierDeclStatement	DWORD termstat = 0 ;	572:1:15450:15468	5571	0	True				
ANR	5575	IdentifierDecl	termstat = 0		5571	0					
ANR	5576	IdentifierDeclType	DWORD		5571	0					
ANR	5577	Identifier	termstat		5571	1					
ANR	5578	AssignmentExpression	termstat = 0		5571	2		=			
ANR	5579	Identifier	termstat		5571	0					
ANR	5580	PrimaryExpression	0		5571	1					
ANR	5581	IdentifierDeclStatement	process_pair * process ;	573:1:15471:15492	5571	1	True				
ANR	5582	IdentifierDecl	* process		5571	0					
ANR	5583	IdentifierDeclType	process_pair *		5571	0					
ANR	5584	Identifier	process		5571	1					
ANR	5585	ExpressionStatement	TSRMLS_FETCH ( )	574:1:15495:15509	5571	2	True				
ANR	5586	CallExpression	TSRMLS_FETCH ( )		5571	0					
ANR	5587	Callee	TSRMLS_FETCH		5571	0					
ANR	5588	Identifier	TSRMLS_FETCH		5571	0					
ANR	5589	ArgumentList			5571	1					
ANR	5590	Statement	if	576:1:15513:15514	5571	3	True				
ANR	5591	Statement	(	576:4:15516:15516	5571	4	True				
ANR	5592	Statement	(	576:5:15517:15517	5571	5	True				
ANR	5593	Statement	process	576:6:15518:15524	5571	6	True				
ANR	5594	Statement	=	576:14:15526:15526	5571	7	True				
ANR	5595	Statement	process_get	576:16:15528:15538	5571	8	True				
ANR	5596	Statement	(	576:27:15539:15539	5571	9	True				
ANR	5597	Statement	stream	576:28:15540:15545	5571	10	True				
ANR	5598	Statement	TSRMLS_CC	576:35:15547:15555	5571	11	True				
ANR	5599	Statement	)	576:44:15556:15556	5571	12	True				
ANR	5600	Statement	)	576:45:15557:15557	5571	13	True				
ANR	5601	Statement	==	576:47:15559:15560	5571	14	True				
ANR	5602	Statement	NULL	576:50:15562:15565	5571	15	True				
ANR	5603	Statement	)	576:54:15566:15566	5571	16	True				
ANR	5604	CompoundStatement		6:56:120:120	5571	17					
ANR	5605	ReturnStatement	return 0 ;	577:2:15572:15580	5571	0	True				
ANR	5606	PrimaryExpression	0		5571	0					
ANR	5607	ExpressionStatement	fflush ( process -> stream )	580:1:15587:15610	5571	18	True				
ANR	5608	CallExpression	fflush ( process -> stream )		5571	0					
ANR	5609	Callee	fflush		5571	0					
ANR	5610	Identifier	fflush		5571	0					
ANR	5611	ArgumentList	process -> stream		5571	1					
ANR	5612	Argument	process -> stream		5571	0					
ANR	5613	PtrMemberAccess	process -> stream		5571	0					
ANR	5614	Identifier	process		5571	0					
ANR	5615	Identifier	stream		5571	1					
ANR	5616	ExpressionStatement	fclose ( process -> stream )	581:1:15613:15636	5571	19	True				
ANR	5617	CallExpression	fclose ( process -> stream )		5571	0					
ANR	5618	Callee	fclose		5571	0					
ANR	5619	Identifier	fclose		5571	0					
ANR	5620	ArgumentList	process -> stream		5571	1					
ANR	5621	Argument	process -> stream		5571	0					
ANR	5622	PtrMemberAccess	process -> stream		5571	0					
ANR	5623	Identifier	process		5571	0					
ANR	5624	Identifier	stream		5571	1					
ANR	5625	ExpressionStatement	"WaitForSingleObject ( process -> prochnd , INFINITE )"	583:1:15640:15687	5571	20	True				
ANR	5626	CallExpression	"WaitForSingleObject ( process -> prochnd , INFINITE )"		5571	0					
ANR	5627	Callee	WaitForSingleObject		5571	0					
ANR	5628	Identifier	WaitForSingleObject		5571	0					
ANR	5629	ArgumentList	process -> prochnd		5571	1					
ANR	5630	Argument	process -> prochnd		5571	0					
ANR	5631	PtrMemberAccess	process -> prochnd		5571	0					
ANR	5632	Identifier	process		5571	0					
ANR	5633	Identifier	prochnd		5571	1					
ANR	5634	Argument	INFINITE		5571	1					
ANR	5635	Identifier	INFINITE		5571	0					
ANR	5636	ExpressionStatement	"GetExitCodeProcess ( process -> prochnd , & termstat )"	584:1:15690:15737	5571	21	True				
ANR	5637	CallExpression	"GetExitCodeProcess ( process -> prochnd , & termstat )"		5571	0					
ANR	5638	Callee	GetExitCodeProcess		5571	0					
ANR	5639	Identifier	GetExitCodeProcess		5571	0					
ANR	5640	ArgumentList	process -> prochnd		5571	1					
ANR	5641	Argument	process -> prochnd		5571	0					
ANR	5642	PtrMemberAccess	process -> prochnd		5571	0					
ANR	5643	Identifier	process		5571	0					
ANR	5644	Identifier	prochnd		5571	1					
ANR	5645	Argument	& termstat		5571	1					
ANR	5646	UnaryOperationExpression	& termstat		5571	0					
ANR	5647	UnaryOperator	&		5571	0					
ANR	5648	Identifier	termstat		5571	1					
ANR	5649	ExpressionStatement	process -> stream = NULL	585:1:15740:15762	5571	22	True				
ANR	5650	AssignmentExpression	process -> stream = NULL		5571	0		=			
ANR	5651	PtrMemberAccess	process -> stream		5571	0					
ANR	5652	Identifier	process		5571	0					
ANR	5653	Identifier	stream		5571	1					
ANR	5654	Identifier	NULL		5571	1					
ANR	5655	ExpressionStatement	CloseHandle ( process -> prochnd )	586:1:15765:15794	5571	23	True				
ANR	5656	CallExpression	CloseHandle ( process -> prochnd )		5571	0					
ANR	5657	Callee	CloseHandle		5571	0					
ANR	5658	Identifier	CloseHandle		5571	0					
ANR	5659	ArgumentList	process -> prochnd		5571	1					
ANR	5660	Argument	process -> prochnd		5571	0					
ANR	5661	PtrMemberAccess	process -> prochnd		5571	0					
ANR	5662	Identifier	process		5571	0					
ANR	5663	Identifier	prochnd		5571	1					
ANR	5664	ReturnStatement	return termstat ;	588:1:15798:15813	5571	24	True				
ANR	5665	Identifier	termstat		5571	0					
ANR	5666	ReturnType	TSRM_API int		5571	1					
ANR	5667	Identifier	pclose		5571	2					
ANR	5668	ParameterList	FILE * stream		5571	3					
ANR	5669	Parameter	FILE * stream	570:20:15433:15444	5571	0	True				
ANR	5670	ParameterType	FILE *		5571	0					
ANR	5671	Identifier	stream		5571	1					
ANR	5672	CFGEntryNode	ENTRY		5571		True				
ANR	5673	CFGExitNode	EXIT		5571		True				
ANR	5674	Symbol	process		5571						
ANR	5675	Symbol	NULL		5571						
ANR	5676	Symbol	stream		5571						
ANR	5677	Symbol	* process		5571						
ANR	5678	Symbol	process -> prochnd		5571						
ANR	5679	Symbol	process -> stream		5571						
ANR	5680	Symbol	& termstat		5571						
ANR	5681	Symbol	termstat		5571						
ANR	5682	Symbol	INFINITE		5571						
ANR	5683	Function	shmget	591:0:15818:17818							
ANR	5684	FunctionDef	"shmget (int key , int size , int flags)"		5683	0					
ANR	5685	CompoundStatement		592:0:15868:17818	5683	0					
ANR	5686	IdentifierDeclStatement	shm_pair * shm ;	593:1:15871:15884	5683	0	True				
ANR	5687	IdentifierDecl	* shm		5683	0					
ANR	5688	IdentifierDeclType	shm_pair *		5683	0					
ANR	5689	Identifier	shm		5683	1					
ANR	5690	IdentifierDeclStatement	"char shm_segment [ 26 ] , shm_info [ 29 ] ;"	594:1:15887:15921	5683	1	True				
ANR	5691	IdentifierDecl	shm_segment [ 26 ]		5683	0					
ANR	5692	IdentifierDeclType	char [ 26 ]		5683	0					
ANR	5693	Identifier	shm_segment		5683	1					
ANR	5694	PrimaryExpression	26		5683	2					
ANR	5695	IdentifierDecl	shm_info [ 29 ]		5683	1					
ANR	5696	IdentifierDeclType	char [ 29 ]		5683	0					
ANR	5697	Identifier	shm_info		5683	1					
ANR	5698	PrimaryExpression	29		5683	2					
ANR	5699	IdentifierDeclStatement	"HANDLE shm_handle , info_handle ;"	595:1:15924:15954	5683	2	True				
ANR	5700	IdentifierDecl	shm_handle		5683	0					
ANR	5701	IdentifierDeclType	HANDLE		5683	0					
ANR	5702	Identifier	shm_handle		5683	1					
ANR	5703	IdentifierDecl	info_handle		5683	1					
ANR	5704	IdentifierDeclType	HANDLE		5683	0					
ANR	5705	Identifier	info_handle		5683	1					
ANR	5706	IdentifierDeclStatement	BOOL created = FALSE ;	596:1:15957:15977	5683	3	True				
ANR	5707	IdentifierDecl	created = FALSE		5683	0					
ANR	5708	IdentifierDeclType	BOOL		5683	0					
ANR	5709	Identifier	created		5683	1					
ANR	5710	AssignmentExpression	created = FALSE		5683	2		=			
ANR	5711	Identifier	FALSE		5683	0					
ANR	5712	Identifier	FALSE		5683	1					
ANR	5713	IfStatement	if ( size < 0 )		5683	4					
ANR	5714	Condition	size < 0	598:5:15985:15992	5683	0	True				
ANR	5715	RelationalExpression	size < 0		5683	0		<			
ANR	5716	Identifier	size		5683	0					
ANR	5717	PrimaryExpression	0		5683	1					
ANR	5718	CompoundStatement		7:15:126:126	5683	1					
ANR	5719	ReturnStatement	return - 1 ;	599:2:15999:16008	5683	0	True				
ANR	5720	UnaryOperationExpression	- 1		5683	0					
ANR	5721	UnaryOperator	-		5683	0					
ANR	5722	PrimaryExpression	1		5683	1					
ANR	5723	ExpressionStatement	"sprintf ( shm_segment , ""TSRM_SHM_SEGMENT:%d"" , key )"	602:1:16015:16063	5683	5	True				
ANR	5724	CallExpression	"sprintf ( shm_segment , ""TSRM_SHM_SEGMENT:%d"" , key )"		5683	0					
ANR	5725	Callee	sprintf		5683	0					
ANR	5726	Identifier	sprintf		5683	0					
ANR	5727	ArgumentList	shm_segment		5683	1					
ANR	5728	Argument	shm_segment		5683	0					
ANR	5729	Identifier	shm_segment		5683	0					
ANR	5730	Argument	"""TSRM_SHM_SEGMENT:%d"""		5683	1					
ANR	5731	PrimaryExpression	"""TSRM_SHM_SEGMENT:%d"""		5683	0					
ANR	5732	Argument	key		5683	2					
ANR	5733	Identifier	key		5683	0					
ANR	5734	ExpressionStatement	"sprintf ( shm_info , ""TSRM_SHM_DESCRIPTOR:%d"" , key )"	603:1:16066:16114	5683	6	True				
ANR	5735	CallExpression	"sprintf ( shm_info , ""TSRM_SHM_DESCRIPTOR:%d"" , key )"		5683	0					
ANR	5736	Callee	sprintf		5683	0					
ANR	5737	Identifier	sprintf		5683	0					
ANR	5738	ArgumentList	shm_info		5683	1					
ANR	5739	Argument	shm_info		5683	0					
ANR	5740	Identifier	shm_info		5683	0					
ANR	5741	Argument	"""TSRM_SHM_DESCRIPTOR:%d"""		5683	1					
ANR	5742	PrimaryExpression	"""TSRM_SHM_DESCRIPTOR:%d"""		5683	0					
ANR	5743	Argument	key		5683	2					
ANR	5744	Identifier	key		5683	0					
ANR	5745	ExpressionStatement	"shm_handle = OpenFileMapping ( FILE_MAP_ALL_ACCESS , FALSE , shm_segment )"	605:1:16118:16188	5683	7	True				
ANR	5746	AssignmentExpression	"shm_handle = OpenFileMapping ( FILE_MAP_ALL_ACCESS , FALSE , shm_segment )"		5683	0		=			
ANR	5747	Identifier	shm_handle		5683	0					
ANR	5748	CallExpression	"OpenFileMapping ( FILE_MAP_ALL_ACCESS , FALSE , shm_segment )"		5683	1					
ANR	5749	Callee	OpenFileMapping		5683	0					
ANR	5750	Identifier	OpenFileMapping		5683	0					
ANR	5751	ArgumentList	FILE_MAP_ALL_ACCESS		5683	1					
ANR	5752	Argument	FILE_MAP_ALL_ACCESS		5683	0					
ANR	5753	Identifier	FILE_MAP_ALL_ACCESS		5683	0					
ANR	5754	Argument	FALSE		5683	1					
ANR	5755	Identifier	FALSE		5683	0					
ANR	5756	Argument	shm_segment		5683	2					
ANR	5757	Identifier	shm_segment		5683	0					
ANR	5758	ExpressionStatement	"info_handle = OpenFileMapping ( FILE_MAP_ALL_ACCESS , FALSE , shm_info )"	606:1:16191:16258	5683	8	True				
ANR	5759	AssignmentExpression	"info_handle = OpenFileMapping ( FILE_MAP_ALL_ACCESS , FALSE , shm_info )"		5683	0		=			
ANR	5760	Identifier	info_handle		5683	0					
ANR	5761	CallExpression	"OpenFileMapping ( FILE_MAP_ALL_ACCESS , FALSE , shm_info )"		5683	1					
ANR	5762	Callee	OpenFileMapping		5683	0					
ANR	5763	Identifier	OpenFileMapping		5683	0					
ANR	5764	ArgumentList	FILE_MAP_ALL_ACCESS		5683	1					
ANR	5765	Argument	FILE_MAP_ALL_ACCESS		5683	0					
ANR	5766	Identifier	FILE_MAP_ALL_ACCESS		5683	0					
ANR	5767	Argument	FALSE		5683	1					
ANR	5768	Identifier	FALSE		5683	0					
ANR	5769	Argument	shm_info		5683	2					
ANR	5770	Identifier	shm_info		5683	0					
ANR	5771	IfStatement	if ( ( ! shm_handle && ! info_handle ) )		5683	9					
ANR	5772	Condition	! shm_handle && ! info_handle	608:5:16266:16294	5683	0	True				
ANR	5773	AndExpression	! shm_handle && ! info_handle		5683	0		&&			
ANR	5774	UnaryOperationExpression	! shm_handle		5683	0					
ANR	5775	UnaryOperator	!		5683	0					
ANR	5776	Identifier	shm_handle		5683	1					
ANR	5777	UnaryOperationExpression	! info_handle		5683	1					
ANR	5778	UnaryOperator	!		5683	0					
ANR	5779	Identifier	info_handle		5683	1					
ANR	5780	CompoundStatement		17:36:428:428	5683	1					
ANR	5781	IfStatement	if ( flags & IPC_CREAT )		5683	0					
ANR	5782	Condition	flags & IPC_CREAT	609:6:16305:16321	5683	0	True				
ANR	5783	BitAndExpression	flags & IPC_CREAT		5683	0		&			
ANR	5784	Identifier	flags		5683	0					
ANR	5785	Identifier	IPC_CREAT		5683	1					
ANR	5786	CompoundStatement		18:25:455:455	5683	1					
ANR	5787	ExpressionStatement	"shm_handle = CreateFileMapping ( INVALID_HANDLE_VALUE , NULL , PAGE_READWRITE , 0 , size , shm_segment )"	610:3:16329:16425	5683	0	True				
ANR	5788	AssignmentExpression	"shm_handle = CreateFileMapping ( INVALID_HANDLE_VALUE , NULL , PAGE_READWRITE , 0 , size , shm_segment )"		5683	0		=			
ANR	5789	Identifier	shm_handle		5683	0					
ANR	5790	CallExpression	"CreateFileMapping ( INVALID_HANDLE_VALUE , NULL , PAGE_READWRITE , 0 , size , shm_segment )"		5683	1					
ANR	5791	Callee	CreateFileMapping		5683	0					
ANR	5792	Identifier	CreateFileMapping		5683	0					
ANR	5793	ArgumentList	INVALID_HANDLE_VALUE		5683	1					
ANR	5794	Argument	INVALID_HANDLE_VALUE		5683	0					
ANR	5795	Identifier	INVALID_HANDLE_VALUE		5683	0					
ANR	5796	Argument	NULL		5683	1					
ANR	5797	Identifier	NULL		5683	0					
ANR	5798	Argument	PAGE_READWRITE		5683	2					
ANR	5799	Identifier	PAGE_READWRITE		5683	0					
ANR	5800	Argument	0		5683	3					
ANR	5801	PrimaryExpression	0		5683	0					
ANR	5802	Argument	size		5683	4					
ANR	5803	Identifier	size		5683	0					
ANR	5804	Argument	shm_segment		5683	5					
ANR	5805	Identifier	shm_segment		5683	0					
ANR	5806	ExpressionStatement	"info_handle = CreateFileMapping ( INVALID_HANDLE_VALUE , NULL , PAGE_READWRITE , 0 , sizeof ( shm -> descriptor ) , shm_info )"	611:3:16430:16543	5683	1	True				
ANR	5807	AssignmentExpression	"info_handle = CreateFileMapping ( INVALID_HANDLE_VALUE , NULL , PAGE_READWRITE , 0 , sizeof ( shm -> descriptor ) , shm_info )"		5683	0		=			
ANR	5808	Identifier	info_handle		5683	0					
ANR	5809	CallExpression	"CreateFileMapping ( INVALID_HANDLE_VALUE , NULL , PAGE_READWRITE , 0 , sizeof ( shm -> descriptor ) , shm_info )"		5683	1					
ANR	5810	Callee	CreateFileMapping		5683	0					
ANR	5811	Identifier	CreateFileMapping		5683	0					
ANR	5812	ArgumentList	INVALID_HANDLE_VALUE		5683	1					
ANR	5813	Argument	INVALID_HANDLE_VALUE		5683	0					
ANR	5814	Identifier	INVALID_HANDLE_VALUE		5683	0					
ANR	5815	Argument	NULL		5683	1					
ANR	5816	Identifier	NULL		5683	0					
ANR	5817	Argument	PAGE_READWRITE		5683	2					
ANR	5818	Identifier	PAGE_READWRITE		5683	0					
ANR	5819	Argument	0		5683	3					
ANR	5820	PrimaryExpression	0		5683	0					
ANR	5821	Argument	sizeof ( shm -> descriptor )		5683	4					
ANR	5822	SizeofExpression	sizeof ( shm -> descriptor )		5683	0					
ANR	5823	Sizeof	sizeof		5683	0					
ANR	5824	PtrMemberAccess	shm -> descriptor		5683	1					
ANR	5825	Identifier	shm		5683	0					
ANR	5826	Identifier	descriptor		5683	1					
ANR	5827	Argument	shm_info		5683	5					
ANR	5828	Identifier	shm_info		5683	0					
ANR	5829	ExpressionStatement	created = TRUE	612:3:16548:16563	5683	2	True				
ANR	5830	AssignmentExpression	created = TRUE		5683	0		=			
ANR	5831	Identifier	created		5683	0					
ANR	5832	Identifier	TRUE		5683	1					
ANR	5833	IfStatement	if ( ( ! shm_handle || ! info_handle ) )		5683	1					
ANR	5834	Condition	! shm_handle || ! info_handle	614:6:16575:16603	5683	0	True				
ANR	5835	OrExpression	! shm_handle || ! info_handle		5683	0		||			
ANR	5836	UnaryOperationExpression	! shm_handle		5683	0					
ANR	5837	UnaryOperator	!		5683	0					
ANR	5838	Identifier	shm_handle		5683	1					
ANR	5839	UnaryOperationExpression	! info_handle		5683	1					
ANR	5840	UnaryOperator	!		5683	0					
ANR	5841	Identifier	info_handle		5683	1					
ANR	5842	CompoundStatement		23:37:737:737	5683	1					
ANR	5843	ReturnStatement	return - 1 ;	615:3:16611:16620	5683	0	True				
ANR	5844	UnaryOperationExpression	- 1		5683	0					
ANR	5845	UnaryOperator	-		5683	0					
ANR	5846	PrimaryExpression	1		5683	1					
ANR	5847	ElseStatement	else		5683	0					
ANR	5848	CompoundStatement		26:8:765:765	5683	0					
ANR	5849	IfStatement	if ( flags & IPC_EXCL )		5683	0					
ANR	5850	Condition	flags & IPC_EXCL	618:6:16642:16657	5683	0	True				
ANR	5851	BitAndExpression	flags & IPC_EXCL		5683	0		&			
ANR	5852	Identifier	flags		5683	0					
ANR	5853	Identifier	IPC_EXCL		5683	1					
ANR	5854	CompoundStatement		27:24:791:791	5683	1					
ANR	5855	IfStatement	if ( shm_handle )		5683	0					
ANR	5856	Condition	shm_handle	619:7:16669:16678	5683	0	True				
ANR	5857	Identifier	shm_handle		5683	0					
ANR	5858	CompoundStatement		28:19:812:812	5683	1					
ANR	5859	ExpressionStatement	CloseHandle ( shm_handle )	620:4:16687:16710	5683	0	True				
ANR	5860	CallExpression	CloseHandle ( shm_handle )		5683	0					
ANR	5861	Callee	CloseHandle		5683	0					
ANR	5862	Identifier	CloseHandle		5683	0					
ANR	5863	ArgumentList	shm_handle		5683	1					
ANR	5864	Argument	shm_handle		5683	0					
ANR	5865	Identifier	shm_handle		5683	0					
ANR	5866	IfStatement	if ( info_handle )		5683	1					
ANR	5867	Condition	info_handle	622:7:16724:16734	5683	0	True				
ANR	5868	Identifier	info_handle		5683	0					
ANR	5869	CompoundStatement		31:20:868:868	5683	1					
ANR	5870	ExpressionStatement	CloseHandle ( info_handle )	623:4:16743:16767	5683	0	True				
ANR	5871	CallExpression	CloseHandle ( info_handle )		5683	0					
ANR	5872	Callee	CloseHandle		5683	0					
ANR	5873	Identifier	CloseHandle		5683	0					
ANR	5874	ArgumentList	info_handle		5683	1					
ANR	5875	Argument	info_handle		5683	0					
ANR	5876	Identifier	info_handle		5683	0					
ANR	5877	ReturnStatement	return - 1 ;	625:3:16777:16786	5683	2	True				
ANR	5878	UnaryOperationExpression	- 1		5683	0					
ANR	5879	UnaryOperator	-		5683	0					
ANR	5880	PrimaryExpression	1		5683	1					
ANR	5881	ExpressionStatement	"shm = shm_get ( key , NULL )"	629:1:16797:16821	5683	10	True				
ANR	5882	AssignmentExpression	"shm = shm_get ( key , NULL )"		5683	0		=			
ANR	5883	Identifier	shm		5683	0					
ANR	5884	CallExpression	"shm_get ( key , NULL )"		5683	1					
ANR	5885	Callee	shm_get		5683	0					
ANR	5886	Identifier	shm_get		5683	0					
ANR	5887	ArgumentList	key		5683	1					
ANR	5888	Argument	key		5683	0					
ANR	5889	Identifier	key		5683	0					
ANR	5890	Argument	NULL		5683	1					
ANR	5891	Identifier	NULL		5683	0					
ANR	5892	ExpressionStatement	shm -> segment = shm_handle	630:1:16824:16849	5683	11	True				
ANR	5893	AssignmentExpression	shm -> segment = shm_handle		5683	0		=			
ANR	5894	PtrMemberAccess	shm -> segment		5683	0					
ANR	5895	Identifier	shm		5683	0					
ANR	5896	Identifier	segment		5683	1					
ANR	5897	Identifier	shm_handle		5683	1					
ANR	5898	ExpressionStatement	shm -> info = info_handle	631:1:16852:16876	5683	12	True				
ANR	5899	AssignmentExpression	shm -> info = info_handle		5683	0		=			
ANR	5900	PtrMemberAccess	shm -> info		5683	0					
ANR	5901	Identifier	shm		5683	0					
ANR	5902	Identifier	info		5683	1					
ANR	5903	Identifier	info_handle		5683	1					
ANR	5904	ExpressionStatement	"shm -> descriptor = MapViewOfFileEx ( shm -> info , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , NULL )"	632:1:16879:16959	5683	13	True				
ANR	5905	AssignmentExpression	"shm -> descriptor = MapViewOfFileEx ( shm -> info , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , NULL )"		5683	0		=			
ANR	5906	PtrMemberAccess	shm -> descriptor		5683	0					
ANR	5907	Identifier	shm		5683	0					
ANR	5908	Identifier	descriptor		5683	1					
ANR	5909	CallExpression	"MapViewOfFileEx ( shm -> info , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , NULL )"		5683	1					
ANR	5910	Callee	MapViewOfFileEx		5683	0					
ANR	5911	Identifier	MapViewOfFileEx		5683	0					
ANR	5912	ArgumentList	shm -> info		5683	1					
ANR	5913	Argument	shm -> info		5683	0					
ANR	5914	PtrMemberAccess	shm -> info		5683	0					
ANR	5915	Identifier	shm		5683	0					
ANR	5916	Identifier	info		5683	1					
ANR	5917	Argument	FILE_MAP_ALL_ACCESS		5683	1					
ANR	5918	Identifier	FILE_MAP_ALL_ACCESS		5683	0					
ANR	5919	Argument	0		5683	2					
ANR	5920	PrimaryExpression	0		5683	0					
ANR	5921	Argument	0		5683	3					
ANR	5922	PrimaryExpression	0		5683	0					
ANR	5923	Argument	0		5683	4					
ANR	5924	PrimaryExpression	0		5683	0					
ANR	5925	Argument	NULL		5683	5					
ANR	5926	Identifier	NULL		5683	0					
ANR	5927	IfStatement	if ( NULL != shm -> descriptor && created )		5683	14					
ANR	5928	Condition	NULL != shm -> descriptor && created	634:5:16967:17000	5683	0	True				
ANR	5929	AndExpression	NULL != shm -> descriptor && created		5683	0		&&			
ANR	5930	EqualityExpression	NULL != shm -> descriptor		5683	0		!=			
ANR	5931	Identifier	NULL		5683	0					
ANR	5932	PtrMemberAccess	shm -> descriptor		5683	1					
ANR	5933	Identifier	shm		5683	0					
ANR	5934	Identifier	descriptor		5683	1					
ANR	5935	Identifier	created		5683	1					
ANR	5936	CompoundStatement		43:41:1134:1134	5683	1					
ANR	5937	ExpressionStatement	shm -> descriptor -> shm_perm . key = key	635:2:17007:17042	5683	0	True				
ANR	5938	AssignmentExpression	shm -> descriptor -> shm_perm . key = key		5683	0		=			
ANR	5939	MemberAccess	shm -> descriptor -> shm_perm . key		5683	0					
ANR	5940	PtrMemberAccess	shm -> descriptor -> shm_perm		5683	0					
ANR	5941	PtrMemberAccess	shm -> descriptor		5683	0					
ANR	5942	Identifier	shm		5683	0					
ANR	5943	Identifier	descriptor		5683	1					
ANR	5944	Identifier	shm_perm		5683	1					
ANR	5945	Identifier	key		5683	1					
ANR	5946	Identifier	key		5683	1					
ANR	5947	ExpressionStatement	shm -> descriptor -> shm_segsz = size	636:2:17046:17080	5683	1	True				
ANR	5948	AssignmentExpression	shm -> descriptor -> shm_segsz = size		5683	0		=			
ANR	5949	PtrMemberAccess	shm -> descriptor -> shm_segsz		5683	0					
ANR	5950	PtrMemberAccess	shm -> descriptor		5683	0					
ANR	5951	Identifier	shm		5683	0					
ANR	5952	Identifier	descriptor		5683	1					
ANR	5953	Identifier	shm_segsz		5683	1					
ANR	5954	Identifier	size		5683	1					
ANR	5955	ExpressionStatement	shm -> descriptor -> shm_ctime = time ( NULL )	637:2:17084:17124	5683	2	True				
ANR	5956	AssignmentExpression	shm -> descriptor -> shm_ctime = time ( NULL )		5683	0		=			
ANR	5957	PtrMemberAccess	shm -> descriptor -> shm_ctime		5683	0					
ANR	5958	PtrMemberAccess	shm -> descriptor		5683	0					
ANR	5959	Identifier	shm		5683	0					
ANR	5960	Identifier	descriptor		5683	1					
ANR	5961	Identifier	shm_ctime		5683	1					
ANR	5962	CallExpression	time ( NULL )		5683	1					
ANR	5963	Callee	time		5683	0					
ANR	5964	Identifier	time		5683	0					
ANR	5965	ArgumentList	NULL		5683	1					
ANR	5966	Argument	NULL		5683	0					
ANR	5967	Identifier	NULL		5683	0					
ANR	5968	ExpressionStatement	shm -> descriptor -> shm_cpid = getpid ( )	638:2:17128:17165	5683	3	True				
ANR	5969	AssignmentExpression	shm -> descriptor -> shm_cpid = getpid ( )		5683	0		=			
ANR	5970	PtrMemberAccess	shm -> descriptor -> shm_cpid		5683	0					
ANR	5971	PtrMemberAccess	shm -> descriptor		5683	0					
ANR	5972	Identifier	shm		5683	0					
ANR	5973	Identifier	descriptor		5683	1					
ANR	5974	Identifier	shm_cpid		5683	1					
ANR	5975	CallExpression	getpid ( )		5683	1					
ANR	5976	Callee	getpid		5683	0					
ANR	5977	Identifier	getpid		5683	0					
ANR	5978	ArgumentList			5683	1					
ANR	5979	ExpressionStatement	shm -> descriptor -> shm_perm . mode = flags	639:2:17169:17207	5683	4	True				
ANR	5980	AssignmentExpression	shm -> descriptor -> shm_perm . mode = flags		5683	0		=			
ANR	5981	MemberAccess	shm -> descriptor -> shm_perm . mode		5683	0					
ANR	5982	PtrMemberAccess	shm -> descriptor -> shm_perm		5683	0					
ANR	5983	PtrMemberAccess	shm -> descriptor		5683	0					
ANR	5984	Identifier	shm		5683	0					
ANR	5985	Identifier	descriptor		5683	1					
ANR	5986	Identifier	shm_perm		5683	1					
ANR	5987	Identifier	mode		5683	1					
ANR	5988	Identifier	flags		5683	1					
ANR	5989	ExpressionStatement	shm -> descriptor -> shm_perm . cuid = shm -> descriptor -> shm_perm . cgid = 0	641:2:17212:17278	5683	5	True				
ANR	5990	AssignmentExpression	shm -> descriptor -> shm_perm . cuid = shm -> descriptor -> shm_perm . cgid = 0		5683	0		=			
ANR	5991	MemberAccess	shm -> descriptor -> shm_perm . cuid		5683	0					
ANR	5992	PtrMemberAccess	shm -> descriptor -> shm_perm		5683	0					
ANR	5993	PtrMemberAccess	shm -> descriptor		5683	0					
ANR	5994	Identifier	shm		5683	0					
ANR	5995	Identifier	descriptor		5683	1					
ANR	5996	Identifier	shm_perm		5683	1					
ANR	5997	Identifier	cuid		5683	1					
ANR	5998	AssignmentExpression	shm -> descriptor -> shm_perm . cgid = 0		5683	1		=			
ANR	5999	MemberAccess	shm -> descriptor -> shm_perm . cgid		5683	0					
ANR	6000	PtrMemberAccess	shm -> descriptor -> shm_perm		5683	0					
ANR	6001	PtrMemberAccess	shm -> descriptor		5683	0					
ANR	6002	Identifier	shm		5683	0					
ANR	6003	Identifier	descriptor		5683	1					
ANR	6004	Identifier	shm_perm		5683	1					
ANR	6005	Identifier	cgid		5683	1					
ANR	6006	PrimaryExpression	0		5683	1					
ANR	6007	ExpressionStatement	shm -> descriptor -> shm_perm . gid = shm -> descriptor -> shm_perm . uid = 0	642:2:17282:17347	5683	6	True				
ANR	6008	AssignmentExpression	shm -> descriptor -> shm_perm . gid = shm -> descriptor -> shm_perm . uid = 0		5683	0		=			
ANR	6009	MemberAccess	shm -> descriptor -> shm_perm . gid		5683	0					
ANR	6010	PtrMemberAccess	shm -> descriptor -> shm_perm		5683	0					
ANR	6011	PtrMemberAccess	shm -> descriptor		5683	0					
ANR	6012	Identifier	shm		5683	0					
ANR	6013	Identifier	descriptor		5683	1					
ANR	6014	Identifier	shm_perm		5683	1					
ANR	6015	Identifier	gid		5683	1					
ANR	6016	AssignmentExpression	shm -> descriptor -> shm_perm . uid = 0		5683	1		=			
ANR	6017	MemberAccess	shm -> descriptor -> shm_perm . uid		5683	0					
ANR	6018	PtrMemberAccess	shm -> descriptor -> shm_perm		5683	0					
ANR	6019	PtrMemberAccess	shm -> descriptor		5683	0					
ANR	6020	Identifier	shm		5683	0					
ANR	6021	Identifier	descriptor		5683	1					
ANR	6022	Identifier	shm_perm		5683	1					
ANR	6023	Identifier	uid		5683	1					
ANR	6024	PrimaryExpression	0		5683	1					
ANR	6025	ExpressionStatement	shm -> descriptor -> shm_atime = shm -> descriptor -> shm_dtime = 0	643:2:17351:17411	5683	7	True				
ANR	6026	AssignmentExpression	shm -> descriptor -> shm_atime = shm -> descriptor -> shm_dtime = 0		5683	0		=			
ANR	6027	PtrMemberAccess	shm -> descriptor -> shm_atime		5683	0					
ANR	6028	PtrMemberAccess	shm -> descriptor		5683	0					
ANR	6029	Identifier	shm		5683	0					
ANR	6030	Identifier	descriptor		5683	1					
ANR	6031	Identifier	shm_atime		5683	1					
ANR	6032	AssignmentExpression	shm -> descriptor -> shm_dtime = 0		5683	1		=			
ANR	6033	PtrMemberAccess	shm -> descriptor -> shm_dtime		5683	0					
ANR	6034	PtrMemberAccess	shm -> descriptor		5683	0					
ANR	6035	Identifier	shm		5683	0					
ANR	6036	Identifier	descriptor		5683	1					
ANR	6037	Identifier	shm_dtime		5683	1					
ANR	6038	PrimaryExpression	0		5683	1					
ANR	6039	ExpressionStatement	shm -> descriptor -> shm_lpid = shm -> descriptor -> shm_nattch = 0	644:2:17415:17475	5683	8	True				
ANR	6040	AssignmentExpression	shm -> descriptor -> shm_lpid = shm -> descriptor -> shm_nattch = 0		5683	0		=			
ANR	6041	PtrMemberAccess	shm -> descriptor -> shm_lpid		5683	0					
ANR	6042	PtrMemberAccess	shm -> descriptor		5683	0					
ANR	6043	Identifier	shm		5683	0					
ANR	6044	Identifier	descriptor		5683	1					
ANR	6045	Identifier	shm_lpid		5683	1					
ANR	6046	AssignmentExpression	shm -> descriptor -> shm_nattch = 0		5683	1		=			
ANR	6047	PtrMemberAccess	shm -> descriptor -> shm_nattch		5683	0					
ANR	6048	PtrMemberAccess	shm -> descriptor		5683	0					
ANR	6049	Identifier	shm		5683	0					
ANR	6050	Identifier	descriptor		5683	1					
ANR	6051	Identifier	shm_nattch		5683	1					
ANR	6052	PrimaryExpression	0		5683	1					
ANR	6053	ExpressionStatement	shm -> descriptor -> shm_perm . mode = shm -> descriptor -> shm_perm . seq = 0	645:2:17479:17545	5683	9	True				
ANR	6054	AssignmentExpression	shm -> descriptor -> shm_perm . mode = shm -> descriptor -> shm_perm . seq = 0		5683	0		=			
ANR	6055	MemberAccess	shm -> descriptor -> shm_perm . mode		5683	0					
ANR	6056	PtrMemberAccess	shm -> descriptor -> shm_perm		5683	0					
ANR	6057	PtrMemberAccess	shm -> descriptor		5683	0					
ANR	6058	Identifier	shm		5683	0					
ANR	6059	Identifier	descriptor		5683	1					
ANR	6060	Identifier	shm_perm		5683	1					
ANR	6061	Identifier	mode		5683	1					
ANR	6062	AssignmentExpression	shm -> descriptor -> shm_perm . seq = 0		5683	1		=			
ANR	6063	MemberAccess	shm -> descriptor -> shm_perm . seq		5683	0					
ANR	6064	PtrMemberAccess	shm -> descriptor -> shm_perm		5683	0					
ANR	6065	PtrMemberAccess	shm -> descriptor		5683	0					
ANR	6066	Identifier	shm		5683	0					
ANR	6067	Identifier	descriptor		5683	1					
ANR	6068	Identifier	shm_perm		5683	1					
ANR	6069	Identifier	seq		5683	1					
ANR	6070	PrimaryExpression	0		5683	1					
ANR	6071	IfStatement	if ( NULL != shm -> descriptor && ( shm -> descriptor -> shm_perm . key != key || size > shm -> descriptor -> shm_segsz ) )		5683	15					
ANR	6072	Condition	NULL != shm -> descriptor && ( shm -> descriptor -> shm_perm . key != key || size > shm -> descriptor -> shm_segsz )	648:5:17556:17657	5683	0	True				
ANR	6073	AndExpression	NULL != shm -> descriptor && ( shm -> descriptor -> shm_perm . key != key || size > shm -> descriptor -> shm_segsz )		5683	0		&&			
ANR	6074	EqualityExpression	NULL != shm -> descriptor		5683	0		!=			
ANR	6075	Identifier	NULL		5683	0					
ANR	6076	PtrMemberAccess	shm -> descriptor		5683	1					
ANR	6077	Identifier	shm		5683	0					
ANR	6078	Identifier	descriptor		5683	1					
ANR	6079	OrExpression	shm -> descriptor -> shm_perm . key != key || size > shm -> descriptor -> shm_segsz		5683	1		||			
ANR	6080	EqualityExpression	shm -> descriptor -> shm_perm . key != key		5683	0		!=			
ANR	6081	MemberAccess	shm -> descriptor -> shm_perm . key		5683	0					
ANR	6082	PtrMemberAccess	shm -> descriptor -> shm_perm		5683	0					
ANR	6083	PtrMemberAccess	shm -> descriptor		5683	0					
ANR	6084	Identifier	shm		5683	0					
ANR	6085	Identifier	descriptor		5683	1					
ANR	6086	Identifier	shm_perm		5683	1					
ANR	6087	Identifier	key		5683	1					
ANR	6088	Identifier	key		5683	1					
ANR	6089	RelationalExpression	size > shm -> descriptor -> shm_segsz		5683	1		>			
ANR	6090	Identifier	size		5683	0					
ANR	6091	PtrMemberAccess	shm -> descriptor -> shm_segsz		5683	1					
ANR	6092	PtrMemberAccess	shm -> descriptor		5683	0					
ANR	6093	Identifier	shm		5683	0					
ANR	6094	Identifier	descriptor		5683	1					
ANR	6095	Identifier	shm_segsz		5683	1					
ANR	6096	CompoundStatement		57:109:1791:1791	5683	1					
ANR	6097	IfStatement	if ( NULL != shm -> segment )		5683	0					
ANR	6098	Condition	NULL != shm -> segment	649:6:17668:17687	5683	0	True				
ANR	6099	EqualityExpression	NULL != shm -> segment		5683	0		!=			
ANR	6100	Identifier	NULL		5683	0					
ANR	6101	PtrMemberAccess	shm -> segment		5683	1					
ANR	6102	Identifier	shm		5683	0					
ANR	6103	Identifier	segment		5683	1					
ANR	6104	CompoundStatement		58:28:1821:1821	5683	1					
ANR	6105	ExpressionStatement	CloseHandle ( shm -> segment )	650:3:17695:17720	5683	0	True				
ANR	6106	CallExpression	CloseHandle ( shm -> segment )		5683	0					
ANR	6107	Callee	CloseHandle		5683	0					
ANR	6108	Identifier	CloseHandle		5683	0					
ANR	6109	ArgumentList	shm -> segment		5683	1					
ANR	6110	Argument	shm -> segment		5683	0					
ANR	6111	PtrMemberAccess	shm -> segment		5683	0					
ANR	6112	Identifier	shm		5683	0					
ANR	6113	Identifier	segment		5683	1					
ANR	6114	ExpressionStatement	UnmapViewOfFile ( shm -> descriptor )	652:2:17728:17760	5683	1	True				
ANR	6115	CallExpression	UnmapViewOfFile ( shm -> descriptor )		5683	0					
ANR	6116	Callee	UnmapViewOfFile		5683	0					
ANR	6117	Identifier	UnmapViewOfFile		5683	0					
ANR	6118	ArgumentList	shm -> descriptor		5683	1					
ANR	6119	Argument	shm -> descriptor		5683	0					
ANR	6120	PtrMemberAccess	shm -> descriptor		5683	0					
ANR	6121	Identifier	shm		5683	0					
ANR	6122	Identifier	descriptor		5683	1					
ANR	6123	ExpressionStatement	CloseHandle ( shm -> info )	653:2:17764:17786	5683	2	True				
ANR	6124	CallExpression	CloseHandle ( shm -> info )		5683	0					
ANR	6125	Callee	CloseHandle		5683	0					
ANR	6126	Identifier	CloseHandle		5683	0					
ANR	6127	ArgumentList	shm -> info		5683	1					
ANR	6128	Argument	shm -> info		5683	0					
ANR	6129	PtrMemberAccess	shm -> info		5683	0					
ANR	6130	Identifier	shm		5683	0					
ANR	6131	Identifier	info		5683	1					
ANR	6132	ReturnStatement	return - 1 ;	654:2:17790:17799	5683	3	True				
ANR	6133	UnaryOperationExpression	- 1		5683	0					
ANR	6134	UnaryOperator	-		5683	0					
ANR	6135	PrimaryExpression	1		5683	1					
ANR	6136	ReturnStatement	return key ;	657:1:17806:17816	5683	16	True				
ANR	6137	Identifier	key		5683	0					
ANR	6138	ReturnType	TSRM_API int		5683	1					
ANR	6139	Identifier	shmget		5683	2					
ANR	6140	ParameterList	"int key , int size , int flags"		5683	3					
ANR	6141	Parameter	int key	591:20:15838:15844	5683	0	True				
ANR	6142	ParameterType	int		5683	0					
ANR	6143	Identifier	key		5683	1					
ANR	6144	Parameter	int size	591:29:15847:15854	5683	1	True				
ANR	6145	ParameterType	int		5683	0					
ANR	6146	Identifier	size		5683	1					
ANR	6147	Parameter	int flags	591:39:15857:15865	5683	2	True				
ANR	6148	ParameterType	int		5683	0					
ANR	6149	Identifier	flags		5683	1					
ANR	6150	CFGEntryNode	ENTRY		5683		True				
ANR	6151	CFGExitNode	EXIT		5683		True				
ANR	6152	Symbol	shm -> info		5683						
ANR	6153	Symbol	shm -> descriptor -> shm_cpid		5683						
ANR	6154	Symbol	shm_segment		5683						
ANR	6155	Symbol	flags		5683						
ANR	6156	Symbol	shm -> descriptor -> shm_perm . uid		5683						
ANR	6157	Symbol	shm -> descriptor -> shm_atime		5683						
ANR	6158	Symbol	* * shm		5683						
ANR	6159	Symbol	CreateFileMapping		5683						
ANR	6160	Symbol	shm_info		5683						
ANR	6161	Symbol	* shm -> descriptor		5683						
ANR	6162	Symbol	shm -> descriptor -> shm_segsz		5683						
ANR	6163	Symbol	shm_handle		5683						
ANR	6164	Symbol	shm -> descriptor -> shm_perm . cgid		5683						
ANR	6165	Symbol	FILE_MAP_ALL_ACCESS		5683						
ANR	6166	Symbol	shm -> descriptor -> shm_nattch		5683						
ANR	6167	Symbol	shm -> descriptor -> shm_perm . gid		5683						
ANR	6168	Symbol	key		5683						
ANR	6169	Symbol	shm_get		5683						
ANR	6170	Symbol	shm -> descriptor -> shm_perm		5683						
ANR	6171	Symbol	* shm		5683						
ANR	6172	Symbol	MapViewOfFileEx		5683						
ANR	6173	Symbol	shm -> descriptor -> shm_ctime		5683						
ANR	6174	Symbol	NULL		5683						
ANR	6175	Symbol	shm -> descriptor -> shm_perm . cuid		5683						
ANR	6176	Symbol	created		5683						
ANR	6177	Symbol	IPC_EXCL		5683						
ANR	6178	Symbol	shm -> descriptor		5683						
ANR	6179	Symbol	TRUE		5683						
ANR	6180	Symbol	info_handle		5683						
ANR	6181	Symbol	INVALID_HANDLE_VALUE		5683						
ANR	6182	Symbol	OpenFileMapping		5683						
ANR	6183	Symbol	IPC_CREAT		5683						
ANR	6184	Symbol	PAGE_READWRITE		5683						
ANR	6185	Symbol	shm -> descriptor -> shm_dtime		5683						
ANR	6186	Symbol	shm -> descriptor -> shm_lpid		5683						
ANR	6187	Symbol	shm -> descriptor -> shm_perm . mode		5683						
ANR	6188	Symbol	size		5683						
ANR	6189	Symbol	shm -> segment		5683						
ANR	6190	Symbol	shm -> descriptor -> shm_perm . key		5683						
ANR	6191	Symbol	shm -> descriptor -> shm_perm . seq		5683						
ANR	6192	Symbol	shm		5683						
ANR	6193	Symbol	FALSE		5683						
ANR	6194	Symbol	time		5683						
ANR	6195	Symbol	getpid		5683						
ANR	6196	Function	shmat	660:0:17821:18346							
ANR	6197	FunctionDef	"shmat (int key , const void * shmaddr , int flags)"		6196	0					
ANR	6198	CompoundStatement		661:0:17883:18346	6196	0					
ANR	6199	IdentifierDeclStatement	"shm_pair * shm = shm_get ( key , NULL ) ;"	662:1:17886:17920	6196	0	True				
ANR	6200	IdentifierDecl	"* shm = shm_get ( key , NULL )"		6196	0					
ANR	6201	IdentifierDeclType	shm_pair *		6196	0					
ANR	6202	Identifier	shm		6196	1					
ANR	6203	AssignmentExpression	"* shm = shm_get ( key , NULL )"		6196	2		=			
ANR	6204	Identifier	shm		6196	0					
ANR	6205	CallExpression	"shm_get ( key , NULL )"		6196	1					
ANR	6206	Callee	shm_get		6196	0					
ANR	6207	Identifier	shm_get		6196	0					
ANR	6208	ArgumentList	key		6196	1					
ANR	6209	Argument	key		6196	0					
ANR	6210	Identifier	key		6196	0					
ANR	6211	Argument	NULL		6196	1					
ANR	6212	Identifier	NULL		6196	0					
ANR	6213	IdentifierDeclStatement	int err ;	663:1:17923:17930	6196	1	True				
ANR	6214	IdentifierDecl	err		6196	0					
ANR	6215	IdentifierDeclType	int		6196	0					
ANR	6216	Identifier	err		6196	1					
ANR	6217	IfStatement	if ( ! shm -> segment )		6196	2					
ANR	6218	Condition	! shm -> segment	665:5:17938:17950	6196	0	True				
ANR	6219	UnaryOperationExpression	! shm -> segment		6196	0					
ANR	6220	UnaryOperator	!		6196	0					
ANR	6221	PtrMemberAccess	shm -> segment		6196	1					
ANR	6222	Identifier	shm		6196	0					
ANR	6223	Identifier	segment		6196	1					
ANR	6224	CompoundStatement		5:20:69:69	6196	1					
ANR	6225	ReturnStatement	return ( void * ) - 1 ;	666:2:17957:17973	6196	0	True				
ANR	6226	CastExpression	( void * ) - 1		6196	0					
ANR	6227	CastTarget	void *		6196	0					
ANR	6228	UnaryOperationExpression	- 1		6196	1					
ANR	6229	UnaryOperator	-		6196	0					
ANR	6230	PrimaryExpression	1		6196	1					
ANR	6231	ExpressionStatement	"shm -> addr = MapViewOfFileEx ( shm -> segment , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , NULL )"	669:1:17980:18057	6196	3	True				
ANR	6232	AssignmentExpression	"shm -> addr = MapViewOfFileEx ( shm -> segment , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , NULL )"		6196	0		=			
ANR	6233	PtrMemberAccess	shm -> addr		6196	0					
ANR	6234	Identifier	shm		6196	0					
ANR	6235	Identifier	addr		6196	1					
ANR	6236	CallExpression	"MapViewOfFileEx ( shm -> segment , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , NULL )"		6196	1					
ANR	6237	Callee	MapViewOfFileEx		6196	0					
ANR	6238	Identifier	MapViewOfFileEx		6196	0					
ANR	6239	ArgumentList	shm -> segment		6196	1					
ANR	6240	Argument	shm -> segment		6196	0					
ANR	6241	PtrMemberAccess	shm -> segment		6196	0					
ANR	6242	Identifier	shm		6196	0					
ANR	6243	Identifier	segment		6196	1					
ANR	6244	Argument	FILE_MAP_ALL_ACCESS		6196	1					
ANR	6245	Identifier	FILE_MAP_ALL_ACCESS		6196	0					
ANR	6246	Argument	0		6196	2					
ANR	6247	PrimaryExpression	0		6196	0					
ANR	6248	Argument	0		6196	3					
ANR	6249	PrimaryExpression	0		6196	0					
ANR	6250	Argument	0		6196	4					
ANR	6251	PrimaryExpression	0		6196	0					
ANR	6252	Argument	NULL		6196	5					
ANR	6253	Identifier	NULL		6196	0					
ANR	6254	ExpressionStatement	err = GetLastError ( )	671:1:18061:18081	6196	4	True				
ANR	6255	AssignmentExpression	err = GetLastError ( )		6196	0		=			
ANR	6256	Identifier	err		6196	0					
ANR	6257	CallExpression	GetLastError ( )		6196	1					
ANR	6258	Callee	GetLastError		6196	0					
ANR	6259	Identifier	GetLastError		6196	0					
ANR	6260	ArgumentList			6196	1					
ANR	6261	IfStatement	if ( err )		6196	5					
ANR	6262	Condition	err	672:5:18088:18090	6196	0	True				
ANR	6263	Identifier	err		6196	0					
ANR	6264	CompoundStatement		12:10:209:209	6196	1					
ANR	6265	IfStatement	if ( ERROR_NOT_ENOUGH_MEMORY == err )		6196	0					
ANR	6266	Condition	ERROR_NOT_ENOUGH_MEMORY == err	674:6:18127:18156	6196	0	True				
ANR	6267	EqualityExpression	ERROR_NOT_ENOUGH_MEMORY == err		6196	0		==			
ANR	6268	Identifier	ERROR_NOT_ENOUGH_MEMORY		6196	0					
ANR	6269	Identifier	err		6196	1					
ANR	6270	CompoundStatement		14:38:275:275	6196	1					
ANR	6271	ExpressionStatement	_set_errno ( ENOMEM )	675:3:18164:18182	6196	0	True				
ANR	6272	CallExpression	_set_errno ( ENOMEM )		6196	0					
ANR	6273	Callee	_set_errno		6196	0					
ANR	6274	Identifier	_set_errno		6196	0					
ANR	6275	ArgumentList	ENOMEM		6196	1					
ANR	6276	Argument	ENOMEM		6196	0					
ANR	6277	Identifier	ENOMEM		6196	0					
ANR	6278	ReturnStatement	return ( void * ) - 1 ;	677:2:18190:18206	6196	1	True				
ANR	6279	CastExpression	( void * ) - 1		6196	0					
ANR	6280	CastTarget	void *		6196	0					
ANR	6281	UnaryOperationExpression	- 1		6196	1					
ANR	6282	UnaryOperator	-		6196	0					
ANR	6283	PrimaryExpression	1		6196	1					
ANR	6284	ExpressionStatement	shm -> descriptor -> shm_atime = time ( NULL )	680:1:18213:18252	6196	6	True				
ANR	6285	AssignmentExpression	shm -> descriptor -> shm_atime = time ( NULL )		6196	0		=			
ANR	6286	PtrMemberAccess	shm -> descriptor -> shm_atime		6196	0					
ANR	6287	PtrMemberAccess	shm -> descriptor		6196	0					
ANR	6288	Identifier	shm		6196	0					
ANR	6289	Identifier	descriptor		6196	1					
ANR	6290	Identifier	shm_atime		6196	1					
ANR	6291	CallExpression	time ( NULL )		6196	1					
ANR	6292	Callee	time		6196	0					
ANR	6293	Identifier	time		6196	0					
ANR	6294	ArgumentList	NULL		6196	1					
ANR	6295	Argument	NULL		6196	0					
ANR	6296	Identifier	NULL		6196	0					
ANR	6297	ExpressionStatement	shm -> descriptor -> shm_lpid = getpid ( )	681:1:18255:18292	6196	7	True				
ANR	6298	AssignmentExpression	shm -> descriptor -> shm_lpid = getpid ( )		6196	0		=			
ANR	6299	PtrMemberAccess	shm -> descriptor -> shm_lpid		6196	0					
ANR	6300	PtrMemberAccess	shm -> descriptor		6196	0					
ANR	6301	Identifier	shm		6196	0					
ANR	6302	Identifier	descriptor		6196	1					
ANR	6303	Identifier	shm_lpid		6196	1					
ANR	6304	CallExpression	getpid ( )		6196	1					
ANR	6305	Callee	getpid		6196	0					
ANR	6306	Identifier	getpid		6196	0					
ANR	6307	ArgumentList			6196	1					
ANR	6308	ExpressionStatement	shm -> descriptor -> shm_nattch ++	682:1:18295:18324	6196	8	True				
ANR	6309	PostIncDecOperationExpression	shm -> descriptor -> shm_nattch ++		6196	0					
ANR	6310	PtrMemberAccess	shm -> descriptor -> shm_nattch		6196	0					
ANR	6311	PtrMemberAccess	shm -> descriptor		6196	0					
ANR	6312	Identifier	shm		6196	0					
ANR	6313	Identifier	descriptor		6196	1					
ANR	6314	Identifier	shm_nattch		6196	1					
ANR	6315	IncDec	++		6196	1					
ANR	6316	ReturnStatement	return shm -> addr ;	684:1:18328:18344	6196	9	True				
ANR	6317	PtrMemberAccess	shm -> addr		6196	0					
ANR	6318	Identifier	shm		6196	0					
ANR	6319	Identifier	addr		6196	1					
ANR	6320	ReturnType	TSRM_API void *		6196	1					
ANR	6321	Identifier	shmat		6196	2					
ANR	6322	ParameterList	"int key , const void * shmaddr , int flags"		6196	3					
ANR	6323	Parameter	int key	660:21:17842:17848	6196	0	True				
ANR	6324	ParameterType	int		6196	0					
ANR	6325	Identifier	key		6196	1					
ANR	6326	Parameter	const void * shmaddr	660:30:17851:17869	6196	1	True				
ANR	6327	ParameterType	const void *		6196	0					
ANR	6328	Identifier	shmaddr		6196	1					
ANR	6329	Parameter	int flags	660:51:17872:17880	6196	2	True				
ANR	6330	ParameterType	int		6196	0					
ANR	6331	Identifier	flags		6196	1					
ANR	6332	CFGEntryNode	ENTRY		6196		True				
ANR	6333	CFGExitNode	EXIT		6196		True				
ANR	6334	Symbol	ENOMEM		6196						
ANR	6335	Symbol	* shm		6196						
ANR	6336	Symbol	MapViewOfFileEx		6196						
ANR	6337	Symbol	NULL		6196						
ANR	6338	Symbol	err		6196						
ANR	6339	Symbol	flags		6196						
ANR	6340	Symbol	shm -> addr		6196						
ANR	6341	Symbol	shm -> descriptor -> shm_atime		6196						
ANR	6342	Symbol	shm -> descriptor		6196						
ANR	6343	Symbol	ERROR_NOT_ENOUGH_MEMORY		6196						
ANR	6344	Symbol	* * shm		6196						
ANR	6345	Symbol	* shm -> descriptor		6196						
ANR	6346	Symbol	shm -> descriptor -> shm_lpid		6196						
ANR	6347	Symbol	GetLastError		6196						
ANR	6348	Symbol	shm -> segment		6196						
ANR	6349	Symbol	shm		6196						
ANR	6350	Symbol	FILE_MAP_ALL_ACCESS		6196						
ANR	6351	Symbol	shm -> descriptor -> shm_nattch		6196						
ANR	6352	Symbol	shmaddr		6196						
ANR	6353	Symbol	time		6196						
ANR	6354	Symbol	getpid		6196						
ANR	6355	Symbol	key		6196						
ANR	6356	Symbol	shm_get		6196						
ANR	6357	Function	shmdt	687:0:18349:18636							
ANR	6358	FunctionDef	shmdt (const void * shmaddr)		6357	0					
ANR	6359	CompoundStatement		688:0:18389:18636	6357	0					
ANR	6360	IdentifierDeclStatement	"shm_pair * shm = shm_get ( 0 , ( void * ) shmaddr ) ;"	689:1:18392:18434	6357	0	True				
ANR	6361	IdentifierDecl	"* shm = shm_get ( 0 , ( void * ) shmaddr )"		6357	0					
ANR	6362	IdentifierDeclType	shm_pair *		6357	0					
ANR	6363	Identifier	shm		6357	1					
ANR	6364	AssignmentExpression	"* shm = shm_get ( 0 , ( void * ) shmaddr )"		6357	2		=			
ANR	6365	Identifier	shm		6357	0					
ANR	6366	CallExpression	"shm_get ( 0 , ( void * ) shmaddr )"		6357	1					
ANR	6367	Callee	shm_get		6357	0					
ANR	6368	Identifier	shm_get		6357	0					
ANR	6369	ArgumentList	0		6357	1					
ANR	6370	Argument	0		6357	0					
ANR	6371	PrimaryExpression	0		6357	0					
ANR	6372	Argument	( void * ) shmaddr		6357	1					
ANR	6373	CastExpression	( void * ) shmaddr		6357	0					
ANR	6374	CastTarget	void *		6357	0					
ANR	6375	Identifier	shmaddr		6357	1					
ANR	6376	IfStatement	if ( ! shm -> segment )		6357	1					
ANR	6377	Condition	! shm -> segment	691:5:18442:18454	6357	0	True				
ANR	6378	UnaryOperationExpression	! shm -> segment		6357	0					
ANR	6379	UnaryOperator	!		6357	0					
ANR	6380	PtrMemberAccess	shm -> segment		6357	1					
ANR	6381	Identifier	shm		6357	0					
ANR	6382	Identifier	segment		6357	1					
ANR	6383	CompoundStatement		4:20:67:67	6357	1					
ANR	6384	ReturnStatement	return - 1 ;	692:2:18461:18470	6357	0	True				
ANR	6385	UnaryOperationExpression	- 1		6357	0					
ANR	6386	UnaryOperator	-		6357	0					
ANR	6387	PrimaryExpression	1		6357	1					
ANR	6388	ExpressionStatement	shm -> descriptor -> shm_dtime = time ( NULL )	695:1:18477:18516	6357	2	True				
ANR	6389	AssignmentExpression	shm -> descriptor -> shm_dtime = time ( NULL )		6357	0		=			
ANR	6390	PtrMemberAccess	shm -> descriptor -> shm_dtime		6357	0					
ANR	6391	PtrMemberAccess	shm -> descriptor		6357	0					
ANR	6392	Identifier	shm		6357	0					
ANR	6393	Identifier	descriptor		6357	1					
ANR	6394	Identifier	shm_dtime		6357	1					
ANR	6395	CallExpression	time ( NULL )		6357	1					
ANR	6396	Callee	time		6357	0					
ANR	6397	Identifier	time		6357	0					
ANR	6398	ArgumentList	NULL		6357	1					
ANR	6399	Argument	NULL		6357	0					
ANR	6400	Identifier	NULL		6357	0					
ANR	6401	ExpressionStatement	shm -> descriptor -> shm_lpid = getpid ( )	696:1:18519:18556	6357	3	True				
ANR	6402	AssignmentExpression	shm -> descriptor -> shm_lpid = getpid ( )		6357	0		=			
ANR	6403	PtrMemberAccess	shm -> descriptor -> shm_lpid		6357	0					
ANR	6404	PtrMemberAccess	shm -> descriptor		6357	0					
ANR	6405	Identifier	shm		6357	0					
ANR	6406	Identifier	descriptor		6357	1					
ANR	6407	Identifier	shm_lpid		6357	1					
ANR	6408	CallExpression	getpid ( )		6357	1					
ANR	6409	Callee	getpid		6357	0					
ANR	6410	Identifier	getpid		6357	0					
ANR	6411	ArgumentList			6357	1					
ANR	6412	ExpressionStatement	shm -> descriptor -> shm_nattch --	697:1:18559:18588	6357	4	True				
ANR	6413	PostIncDecOperationExpression	shm -> descriptor -> shm_nattch --		6357	0					
ANR	6414	PtrMemberAccess	shm -> descriptor -> shm_nattch		6357	0					
ANR	6415	PtrMemberAccess	shm -> descriptor		6357	0					
ANR	6416	Identifier	shm		6357	0					
ANR	6417	Identifier	descriptor		6357	1					
ANR	6418	Identifier	shm_nattch		6357	1					
ANR	6419	IncDec	--		6357	1					
ANR	6420	ReturnStatement	return UnmapViewOfFile ( shm -> addr ) ? 0 : - 1 ;	699:1:18592:18634	6357	5	True				
ANR	6421	ConditionalExpression	UnmapViewOfFile ( shm -> addr ) ? 0 : - 1		6357	0					
ANR	6422	Condition	UnmapViewOfFile ( shm -> addr )		6357	0					
ANR	6423	CallExpression	UnmapViewOfFile ( shm -> addr )		6357	0					
ANR	6424	Callee	UnmapViewOfFile		6357	0					
ANR	6425	Identifier	UnmapViewOfFile		6357	0					
ANR	6426	ArgumentList	shm -> addr		6357	1					
ANR	6427	Argument	shm -> addr		6357	0					
ANR	6428	PtrMemberAccess	shm -> addr		6357	0					
ANR	6429	Identifier	shm		6357	0					
ANR	6430	Identifier	addr		6357	1					
ANR	6431	PrimaryExpression	0		6357	1					
ANR	6432	UnaryOperationExpression	- 1		6357	2					
ANR	6433	UnaryOperator	-		6357	0					
ANR	6434	PrimaryExpression	1		6357	1					
ANR	6435	ReturnType	TSRM_API int		6357	1					
ANR	6436	Identifier	shmdt		6357	2					
ANR	6437	ParameterList	const void * shmaddr		6357	3					
ANR	6438	Parameter	const void * shmaddr	687:19:18368:18386	6357	0	True				
ANR	6439	ParameterType	const void *		6357	0					
ANR	6440	Identifier	shmaddr		6357	1					
ANR	6441	CFGEntryNode	ENTRY		6357		True				
ANR	6442	CFGExitNode	EXIT		6357		True				
ANR	6443	Symbol	* shm		6357						
ANR	6444	Symbol	NULL		6357						
ANR	6445	Symbol	shm -> addr		6357						
ANR	6446	Symbol	shm -> descriptor		6357						
ANR	6447	Symbol	* * shm		6357						
ANR	6448	Symbol	UnmapViewOfFile		6357						
ANR	6449	Symbol	* shm -> descriptor		6357						
ANR	6450	Symbol	shm -> descriptor -> shm_dtime		6357						
ANR	6451	Symbol	shm -> descriptor -> shm_lpid		6357						
ANR	6452	Symbol	shm -> segment		6357						
ANR	6453	Symbol	shm		6357						
ANR	6454	Symbol	shm -> descriptor -> shm_nattch		6357						
ANR	6455	Symbol	shmaddr		6357						
ANR	6456	Symbol	time		6357						
ANR	6457	Symbol	getpid		6357						
ANR	6458	Symbol	shm_get		6357						
ANR	6459	Function	shmctl	702:0:18639:19268							
ANR	6460	FunctionDef	"shmctl (int key , int cmd , struct shmid_ds * buf)"		6459	0					
ANR	6461	CompoundStatement		702:60:18699:19268	6459	0					
ANR	6462	IdentifierDeclStatement	"shm_pair * shm = shm_get ( key , NULL ) ;"	703:1:18702:18736	6459	0	True				
ANR	6463	IdentifierDecl	"* shm = shm_get ( key , NULL )"		6459	0					
ANR	6464	IdentifierDeclType	shm_pair *		6459	0					
ANR	6465	Identifier	shm		6459	1					
ANR	6466	AssignmentExpression	"* shm = shm_get ( key , NULL )"		6459	2		=			
ANR	6467	Identifier	shm		6459	0					
ANR	6468	CallExpression	"shm_get ( key , NULL )"		6459	1					
ANR	6469	Callee	shm_get		6459	0					
ANR	6470	Identifier	shm_get		6459	0					
ANR	6471	ArgumentList	key		6459	1					
ANR	6472	Argument	key		6459	0					
ANR	6473	Identifier	key		6459	0					
ANR	6474	Argument	NULL		6459	1					
ANR	6475	Identifier	NULL		6459	0					
ANR	6476	IfStatement	if ( ! shm -> segment )		6459	1					
ANR	6477	Condition	! shm -> segment	705:5:18744:18756	6459	0	True				
ANR	6478	UnaryOperationExpression	! shm -> segment		6459	0					
ANR	6479	UnaryOperator	!		6459	0					
ANR	6480	PtrMemberAccess	shm -> segment		6459	1					
ANR	6481	Identifier	shm		6459	0					
ANR	6482	Identifier	segment		6459	1					
ANR	6483	CompoundStatement		4:20:59:59	6459	1					
ANR	6484	ReturnStatement	return - 1 ;	706:2:18763:18772	6459	0	True				
ANR	6485	UnaryOperationExpression	- 1		6459	0					
ANR	6486	UnaryOperator	-		6459	0					
ANR	6487	PrimaryExpression	1		6459	1					
ANR	6488	SwitchStatement	switch ( cmd )		6459	2					
ANR	6489	Condition	cmd	709:9:18787:18789	6459	0	True				
ANR	6490	Identifier	cmd		6459	0					
ANR	6491	CompoundStatement		8:14:92:92	6459	1					
ANR	6492	Label	case IPC_STAT :	710:2:18796:18809	6459	0	True				
ANR	6493	Identifier	IPC_STAT		6459	0					
ANR	6494	ExpressionStatement	"memcpy ( buf , shm -> descriptor , sizeof ( struct shmid_ds ) )"	711:3:18814:18867	6459	1	True				
ANR	6495	CallExpression	"memcpy ( buf , shm -> descriptor , sizeof ( struct shmid_ds ) )"		6459	0					
ANR	6496	Callee	memcpy		6459	0					
ANR	6497	Identifier	memcpy		6459	0					
ANR	6498	ArgumentList	buf		6459	1					
ANR	6499	Argument	buf		6459	0					
ANR	6500	Identifier	buf		6459	0					
ANR	6501	Argument	shm -> descriptor		6459	1					
ANR	6502	PtrMemberAccess	shm -> descriptor		6459	0					
ANR	6503	Identifier	shm		6459	0					
ANR	6504	Identifier	descriptor		6459	1					
ANR	6505	Argument	sizeof ( struct shmid_ds )		6459	2					
ANR	6506	SizeofExpression	sizeof ( struct shmid_ds )		6459	0					
ANR	6507	Sizeof	sizeof		6459	0					
ANR	6508	SizeofOperand	struct shmid_ds		6459	1					
ANR	6509	ReturnStatement	return 0 ;	712:3:18872:18880	6459	2	True				
ANR	6510	PrimaryExpression	0		6459	0					
ANR	6511	Label	case IPC_SET :	714:2:18885:18897	6459	3	True				
ANR	6512	Identifier	IPC_SET		6459	0					
ANR	6513	ExpressionStatement	shm -> descriptor -> shm_ctime = time ( NULL )	715:3:18902:18942	6459	4	True				
ANR	6514	AssignmentExpression	shm -> descriptor -> shm_ctime = time ( NULL )		6459	0		=			
ANR	6515	PtrMemberAccess	shm -> descriptor -> shm_ctime		6459	0					
ANR	6516	PtrMemberAccess	shm -> descriptor		6459	0					
ANR	6517	Identifier	shm		6459	0					
ANR	6518	Identifier	descriptor		6459	1					
ANR	6519	Identifier	shm_ctime		6459	1					
ANR	6520	CallExpression	time ( NULL )		6459	1					
ANR	6521	Callee	time		6459	0					
ANR	6522	Identifier	time		6459	0					
ANR	6523	ArgumentList	NULL		6459	1					
ANR	6524	Argument	NULL		6459	0					
ANR	6525	Identifier	NULL		6459	0					
ANR	6526	ExpressionStatement	shm -> descriptor -> shm_perm . uid = buf -> shm_perm . uid	716:3:18947:18996	6459	5	True				
ANR	6527	AssignmentExpression	shm -> descriptor -> shm_perm . uid = buf -> shm_perm . uid		6459	0		=			
ANR	6528	MemberAccess	shm -> descriptor -> shm_perm . uid		6459	0					
ANR	6529	PtrMemberAccess	shm -> descriptor -> shm_perm		6459	0					
ANR	6530	PtrMemberAccess	shm -> descriptor		6459	0					
ANR	6531	Identifier	shm		6459	0					
ANR	6532	Identifier	descriptor		6459	1					
ANR	6533	Identifier	shm_perm		6459	1					
ANR	6534	Identifier	uid		6459	1					
ANR	6535	MemberAccess	buf -> shm_perm . uid		6459	1					
ANR	6536	PtrMemberAccess	buf -> shm_perm		6459	0					
ANR	6537	Identifier	buf		6459	0					
ANR	6538	Identifier	shm_perm		6459	1					
ANR	6539	Identifier	uid		6459	1					
ANR	6540	ExpressionStatement	shm -> descriptor -> shm_perm . gid = buf -> shm_perm . gid	717:3:19001:19050	6459	6	True				
ANR	6541	AssignmentExpression	shm -> descriptor -> shm_perm . gid = buf -> shm_perm . gid		6459	0		=			
ANR	6542	MemberAccess	shm -> descriptor -> shm_perm . gid		6459	0					
ANR	6543	PtrMemberAccess	shm -> descriptor -> shm_perm		6459	0					
ANR	6544	PtrMemberAccess	shm -> descriptor		6459	0					
ANR	6545	Identifier	shm		6459	0					
ANR	6546	Identifier	descriptor		6459	1					
ANR	6547	Identifier	shm_perm		6459	1					
ANR	6548	Identifier	gid		6459	1					
ANR	6549	MemberAccess	buf -> shm_perm . gid		6459	1					
ANR	6550	PtrMemberAccess	buf -> shm_perm		6459	0					
ANR	6551	Identifier	buf		6459	0					
ANR	6552	Identifier	shm_perm		6459	1					
ANR	6553	Identifier	gid		6459	1					
ANR	6554	ExpressionStatement	shm -> descriptor -> shm_perm . mode = buf -> shm_perm . mode	718:3:19055:19106	6459	7	True				
ANR	6555	AssignmentExpression	shm -> descriptor -> shm_perm . mode = buf -> shm_perm . mode		6459	0		=			
ANR	6556	MemberAccess	shm -> descriptor -> shm_perm . mode		6459	0					
ANR	6557	PtrMemberAccess	shm -> descriptor -> shm_perm		6459	0					
ANR	6558	PtrMemberAccess	shm -> descriptor		6459	0					
ANR	6559	Identifier	shm		6459	0					
ANR	6560	Identifier	descriptor		6459	1					
ANR	6561	Identifier	shm_perm		6459	1					
ANR	6562	Identifier	mode		6459	1					
ANR	6563	MemberAccess	buf -> shm_perm . mode		6459	1					
ANR	6564	PtrMemberAccess	buf -> shm_perm		6459	0					
ANR	6565	Identifier	buf		6459	0					
ANR	6566	Identifier	shm_perm		6459	1					
ANR	6567	Identifier	mode		6459	1					
ANR	6568	ReturnStatement	return 0 ;	719:3:19111:19119	6459	8	True				
ANR	6569	PrimaryExpression	0		6459	0					
ANR	6570	Label	case IPC_RMID :	721:2:19124:19137	6459	9	True				
ANR	6571	Identifier	IPC_RMID		6459	0					
ANR	6572	IfStatement	if ( shm -> descriptor -> shm_nattch < 1 )		6459	10					
ANR	6573	Condition	shm -> descriptor -> shm_nattch < 1	722:7:19146:19176	6459	0	True				
ANR	6574	RelationalExpression	shm -> descriptor -> shm_nattch < 1		6459	0		<			
ANR	6575	PtrMemberAccess	shm -> descriptor -> shm_nattch		6459	0					
ANR	6576	PtrMemberAccess	shm -> descriptor		6459	0					
ANR	6577	Identifier	shm		6459	0					
ANR	6578	Identifier	descriptor		6459	1					
ANR	6579	Identifier	shm_nattch		6459	1					
ANR	6580	PrimaryExpression	1		6459	1					
ANR	6581	CompoundStatement		21:40:479:479	6459	1					
ANR	6582	ExpressionStatement	shm -> descriptor -> shm_perm . key = - 1	723:4:19185:19219	6459	0	True				
ANR	6583	AssignmentExpression	shm -> descriptor -> shm_perm . key = - 1		6459	0		=			
ANR	6584	MemberAccess	shm -> descriptor -> shm_perm . key		6459	0					
ANR	6585	PtrMemberAccess	shm -> descriptor -> shm_perm		6459	0					
ANR	6586	PtrMemberAccess	shm -> descriptor		6459	0					
ANR	6587	Identifier	shm		6459	0					
ANR	6588	Identifier	descriptor		6459	1					
ANR	6589	Identifier	shm_perm		6459	1					
ANR	6590	Identifier	key		6459	1					
ANR	6591	UnaryOperationExpression	- 1		6459	1					
ANR	6592	UnaryOperator	-		6459	0					
ANR	6593	PrimaryExpression	1		6459	1					
ANR	6594	ReturnStatement	return 0 ;	725:3:19229:19237	6459	11	True				
ANR	6595	PrimaryExpression	0		6459	0					
ANR	6596	Label	default :	727:2:19242:19249	6459	12	True				
ANR	6597	Identifier	default		6459	0					
ANR	6598	ReturnStatement	return - 1 ;	728:3:19254:19263	6459	13	True				
ANR	6599	UnaryOperationExpression	- 1		6459	0					
ANR	6600	UnaryOperator	-		6459	0					
ANR	6601	PrimaryExpression	1		6459	1					
ANR	6602	ReturnType	TSRM_API int		6459	1					
ANR	6603	Identifier	shmctl		6459	2					
ANR	6604	ParameterList	"int key , int cmd , struct shmid_ds * buf"		6459	3					
ANR	6605	Parameter	int key	702:20:18659:18665	6459	0	True				
ANR	6606	ParameterType	int		6459	0					
ANR	6607	Identifier	key		6459	1					
ANR	6608	Parameter	int cmd	702:29:18668:18674	6459	1	True				
ANR	6609	ParameterType	int		6459	0					
ANR	6610	Identifier	cmd		6459	1					
ANR	6611	Parameter	struct shmid_ds * buf	702:38:18677:18696	6459	2	True				
ANR	6612	ParameterType	struct shmid_ds *		6459	0					
ANR	6613	Identifier	buf		6459	1					
ANR	6614	CFGEntryNode	ENTRY		6459		True				
ANR	6615	CFGExitNode	EXIT		6459		True				
ANR	6616	Symbol	shm -> descriptor -> shm_perm		6459						
ANR	6617	Symbol	* shm		6459						
ANR	6618	Symbol	shm -> descriptor -> shm_ctime		6459						
ANR	6619	Symbol	* buf		6459						
ANR	6620	Symbol	NULL		6459						
ANR	6621	Symbol	shm -> descriptor -> shm_perm . uid		6459						
ANR	6622	Symbol	buf -> shm_perm . gid		6459						
ANR	6623	Symbol	shm -> descriptor		6459						
ANR	6624	Symbol	* * shm		6459						
ANR	6625	Symbol	* shm -> descriptor		6459						
ANR	6626	Symbol	buf		6459						
ANR	6627	Symbol	shm -> descriptor -> shm_perm . mode		6459						
ANR	6628	Symbol	buf -> shm_perm . uid		6459						
ANR	6629	Symbol	shm -> segment		6459						
ANR	6630	Symbol	buf -> shm_perm		6459						
ANR	6631	Symbol	buf -> shm_perm . mode		6459						
ANR	6632	Symbol	shm -> descriptor -> shm_perm . key		6459						
ANR	6633	Symbol	shm		6459						
ANR	6634	Symbol	shm -> descriptor -> shm_nattch		6459						
ANR	6635	Symbol	cmd		6459						
ANR	6636	Symbol	time		6459						
ANR	6637	Symbol	shm -> descriptor -> shm_perm . gid		6459						
ANR	6638	Symbol	key		6459						
ANR	6639	Symbol	shm_get		6459						
ANR	6640	Function	realpath	732:0:19271:19457							
ANR	6641	FunctionDef	"realpath (char * orig_path , char * buffer)"		6640	0					
ANR	6642	CompoundStatement		733:0:19326:19457	6640	0					
ANR	6643	IdentifierDeclStatement	"int ret = GetFullPathName ( orig_path , _MAX_PATH , buffer , NULL ) ;"	734:1:19329:19390	6640	0	True				
ANR	6644	IdentifierDecl	"ret = GetFullPathName ( orig_path , _MAX_PATH , buffer , NULL )"		6640	0					
ANR	6645	IdentifierDeclType	int		6640	0					
ANR	6646	Identifier	ret		6640	1					
ANR	6647	AssignmentExpression	"ret = GetFullPathName ( orig_path , _MAX_PATH , buffer , NULL )"		6640	2		=			
ANR	6648	Identifier	ret		6640	0					
ANR	6649	CallExpression	"GetFullPathName ( orig_path , _MAX_PATH , buffer , NULL )"		6640	1					
ANR	6650	Callee	GetFullPathName		6640	0					
ANR	6651	Identifier	GetFullPathName		6640	0					
ANR	6652	ArgumentList	orig_path		6640	1					
ANR	6653	Argument	orig_path		6640	0					
ANR	6654	Identifier	orig_path		6640	0					
ANR	6655	Argument	_MAX_PATH		6640	1					
ANR	6656	Identifier	_MAX_PATH		6640	0					
ANR	6657	Argument	buffer		6640	2					
ANR	6658	Identifier	buffer		6640	0					
ANR	6659	Argument	NULL		6640	3					
ANR	6660	Identifier	NULL		6640	0					
ANR	6661	IfStatement	if ( ! ret || ret > _MAX_PATH )		6640	1					
ANR	6662	Condition	! ret || ret > _MAX_PATH	735:4:19396:19418	6640	0	True				
ANR	6663	OrExpression	! ret || ret > _MAX_PATH		6640	0		||			
ANR	6664	UnaryOperationExpression	! ret		6640	0					
ANR	6665	UnaryOperator	!		6640	0					
ANR	6666	Identifier	ret		6640	1					
ANR	6667	RelationalExpression	ret > _MAX_PATH		6640	1		>			
ANR	6668	Identifier	ret		6640	0					
ANR	6669	Identifier	_MAX_PATH		6640	1					
ANR	6670	CompoundStatement		3:29:94:94	6640	1					
ANR	6671	ReturnStatement	return NULL ;	736:2:19425:19436	6640	0	True				
ANR	6672	Identifier	NULL		6640	0					
ANR	6673	ReturnStatement	return buffer ;	738:1:19442:19455	6640	2	True				
ANR	6674	Identifier	buffer		6640	0					
ANR	6675	ReturnType	TSRM_API char *		6640	1					
ANR	6676	Identifier	realpath		6640	2					
ANR	6677	ParameterList	"char * orig_path , char * buffer"		6640	3					
ANR	6678	Parameter	char * orig_path	732:24:19295:19309	6640	0	True				
ANR	6679	ParameterType	char *		6640	0					
ANR	6680	Identifier	orig_path		6640	1					
ANR	6681	Parameter	char * buffer	732:41:19312:19323	6640	1	True				
ANR	6682	ParameterType	char *		6640	0					
ANR	6683	Identifier	buffer		6640	1					
ANR	6684	CFGEntryNode	ENTRY		6640		True				
ANR	6685	CFGExitNode	EXIT		6640		True				
ANR	6686	Symbol	_MAX_PATH		6640						
ANR	6687	Symbol	ret		6640						
ANR	6688	Symbol	orig_path		6640						
ANR	6689	Symbol	NULL		6640						
ANR	6690	Symbol	buffer		6640						
ANR	6691	Symbol	GetFullPathName		6640						
