command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2105176	File	data/converged/CVE-2017-11142_php-src/ext_zip_lib_zip_extra_field.c								
ANR	2105177	Function	_zip_ef_clone	44:0:1716:2286							
ANR	2105178	FunctionDef	"_zip_ef_clone (const struct zip_extra_field * ef , struct zip_error * error)"		2105177	0					
ANR	2105179	CompoundStatement		46:0:1814:2286	2105177	0					
ANR	2105180	IdentifierDeclStatement	"struct zip_extra_field * head , * prev , * def ;"	47:4:1820:1861	2105177	0	True				
ANR	2105181	IdentifierDecl	* head		2105177	0					
ANR	2105182	IdentifierDeclType	struct zip_extra_field *		2105177	0					
ANR	2105183	Identifier	head		2105177	1					
ANR	2105184	IdentifierDecl	* prev		2105177	1					
ANR	2105185	IdentifierDeclType	struct zip_extra_field *		2105177	0					
ANR	2105186	Identifier	prev		2105177	1					
ANR	2105187	IdentifierDecl	* def		2105177	2					
ANR	2105188	IdentifierDeclType	struct zip_extra_field *		2105177	0					
ANR	2105189	Identifier	def		2105177	1					
ANR	2105190	ExpressionStatement	head = prev = NULL	49:4:1872:1890	2105177	1	True				
ANR	2105191	AssignmentExpression	head = prev = NULL		2105177	0		=			
ANR	2105192	Identifier	head		2105177	0					
ANR	2105193	AssignmentExpression	prev = NULL		2105177	1		=			
ANR	2105194	Identifier	prev		2105177	0					
ANR	2105195	Identifier	NULL		2105177	1					
ANR	2105196	WhileStatement	while ( ef )		2105177	2					
ANR	2105197	Condition	ef	51:11:1908:1909	2105177	0	True				
ANR	2105198	Identifier	ef		2105177	0					
ANR	2105199	CompoundStatement		6:15:97:97	2105177	1					
ANR	2105200	IfStatement	"if ( ( def = _zip_ef_new ( ef -> id , ef -> size , ef -> data , ef -> flags ) ) == NULL )"		2105177	0					
ANR	2105201	Condition	"( def = _zip_ef_new ( ef -> id , ef -> size , ef -> data , ef -> flags ) ) == NULL"	52:12:1926:1989	2105177	0	True				
ANR	2105202	EqualityExpression	"( def = _zip_ef_new ( ef -> id , ef -> size , ef -> data , ef -> flags ) ) == NULL"		2105177	0		==			
ANR	2105203	AssignmentExpression	"def = _zip_ef_new ( ef -> id , ef -> size , ef -> data , ef -> flags )"		2105177	0		=			
ANR	2105204	Identifier	def		2105177	0					
ANR	2105205	CallExpression	"_zip_ef_new ( ef -> id , ef -> size , ef -> data , ef -> flags )"		2105177	1					
ANR	2105206	Callee	_zip_ef_new		2105177	0					
ANR	2105207	Identifier	_zip_ef_new		2105177	0					
ANR	2105208	ArgumentList	ef -> id		2105177	1					
ANR	2105209	Argument	ef -> id		2105177	0					
ANR	2105210	PtrMemberAccess	ef -> id		2105177	0					
ANR	2105211	Identifier	ef		2105177	0					
ANR	2105212	Identifier	id		2105177	1					
ANR	2105213	Argument	ef -> size		2105177	1					
ANR	2105214	PtrMemberAccess	ef -> size		2105177	0					
ANR	2105215	Identifier	ef		2105177	0					
ANR	2105216	Identifier	size		2105177	1					
ANR	2105217	Argument	ef -> data		2105177	2					
ANR	2105218	PtrMemberAccess	ef -> data		2105177	0					
ANR	2105219	Identifier	ef		2105177	0					
ANR	2105220	Identifier	data		2105177	1					
ANR	2105221	Argument	ef -> flags		2105177	3					
ANR	2105222	PtrMemberAccess	ef -> flags		2105177	0					
ANR	2105223	Identifier	ef		2105177	0					
ANR	2105224	Identifier	flags		2105177	1					
ANR	2105225	Identifier	NULL		2105177	1					
ANR	2105226	CompoundStatement		7:78:177:177	2105177	1					
ANR	2105227	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"	53:12:2006:2045	2105177	0	True				
ANR	2105228	CallExpression	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"		2105177	0					
ANR	2105229	Callee	_zip_error_set		2105177	0					
ANR	2105230	Identifier	_zip_error_set		2105177	0					
ANR	2105231	ArgumentList	error		2105177	1					
ANR	2105232	Argument	error		2105177	0					
ANR	2105233	Identifier	error		2105177	0					
ANR	2105234	Argument	ZIP_ER_MEMORY		2105177	1					
ANR	2105235	Identifier	ZIP_ER_MEMORY		2105177	0					
ANR	2105236	Argument	0		2105177	2					
ANR	2105237	PrimaryExpression	0		2105177	0					
ANR	2105238	ExpressionStatement	_zip_ef_free ( head )	54:12:2059:2077	2105177	1	True				
ANR	2105239	CallExpression	_zip_ef_free ( head )		2105177	0					
ANR	2105240	Callee	_zip_ef_free		2105177	0					
ANR	2105241	Identifier	_zip_ef_free		2105177	0					
ANR	2105242	ArgumentList	head		2105177	1					
ANR	2105243	Argument	head		2105177	0					
ANR	2105244	Identifier	head		2105177	0					
ANR	2105245	ReturnStatement	return NULL ;	55:12:2091:2102	2105177	2	True				
ANR	2105246	Identifier	NULL		2105177	0					
ANR	2105247	IfStatement	if ( head == NULL )		2105177	1					
ANR	2105248	Condition	head == NULL	58:12:2135:2146	2105177	0	True				
ANR	2105249	EqualityExpression	head == NULL		2105177	0		==			
ANR	2105250	Identifier	head		2105177	0					
ANR	2105251	Identifier	NULL		2105177	1					
ANR	2105252	ExpressionStatement	head = def	59:12:2161:2171	2105177	1	True				
ANR	2105253	AssignmentExpression	head = def		2105177	0		=			
ANR	2105254	Identifier	head		2105177	0					
ANR	2105255	Identifier	def		2105177	1					
ANR	2105256	IfStatement	if ( prev )		2105177	2					
ANR	2105257	Condition	prev	60:12:2185:2188	2105177	0	True				
ANR	2105258	Identifier	prev		2105177	0					
ANR	2105259	ExpressionStatement	prev -> next = def	61:12:2203:2219	2105177	1	True				
ANR	2105260	AssignmentExpression	prev -> next = def		2105177	0		=			
ANR	2105261	PtrMemberAccess	prev -> next		2105177	0					
ANR	2105262	Identifier	prev		2105177	0					
ANR	2105263	Identifier	next		2105177	1					
ANR	2105264	Identifier	def		2105177	1					
ANR	2105265	ExpressionStatement	prev = def	62:8:2229:2239	2105177	3	True				
ANR	2105266	AssignmentExpression	prev = def		2105177	0		=			
ANR	2105267	Identifier	prev		2105177	0					
ANR	2105268	Identifier	def		2105177	1					
ANR	2105269	ExpressionStatement	ef = ef -> next	64:1:2243:2256	2105177	4	True				
ANR	2105270	AssignmentExpression	ef = ef -> next		2105177	0		=			
ANR	2105271	Identifier	ef		2105177	0					
ANR	2105272	PtrMemberAccess	ef -> next		2105177	1					
ANR	2105273	Identifier	ef		2105177	0					
ANR	2105274	Identifier	next		2105177	1					
ANR	2105275	ReturnStatement	return head ;	67:4:2273:2284	2105177	3	True				
ANR	2105276	Identifier	head		2105177	0					
ANR	2105277	ReturnType	struct zip_extra_field *		2105177	1					
ANR	2105278	Identifier	_zip_ef_clone		2105177	2					
ANR	2105279	ParameterList	"const struct zip_extra_field * ef , struct zip_error * error"		2105177	3					
ANR	2105280	Parameter	const struct zip_extra_field * ef	45:14:1755:1786	2105177	0	True				
ANR	2105281	ParameterType	const struct zip_extra_field *		2105177	0					
ANR	2105282	Identifier	ef		2105177	1					
ANR	2105283	Parameter	struct zip_error * error	45:48:1789:1811	2105177	1	True				
ANR	2105284	ParameterType	struct zip_error *		2105177	0					
ANR	2105285	Identifier	error		2105177	1					
ANR	2105286	CFGEntryNode	ENTRY		2105177		True				
ANR	2105287	CFGExitNode	EXIT		2105177		True				
ANR	2105288	Symbol	ef -> data		2105177						
ANR	2105289	Symbol	prev -> next		2105177						
ANR	2105290	Symbol	ef		2105177						
ANR	2105291	Symbol	NULL		2105177						
ANR	2105292	Symbol	def		2105177						
ANR	2105293	Symbol	* ef		2105177						
ANR	2105294	Symbol	prev		2105177						
ANR	2105295	Symbol	* prev		2105177						
ANR	2105296	Symbol	error		2105177						
ANR	2105297	Symbol	ef -> id		2105177						
ANR	2105298	Symbol	head		2105177						
ANR	2105299	Symbol	ef -> size		2105177						
ANR	2105300	Symbol	_zip_ef_new		2105177						
ANR	2105301	Symbol	ef -> flags		2105177						
ANR	2105302	Symbol	ZIP_ER_MEMORY		2105177						
ANR	2105303	Symbol	ef -> next		2105177						
ANR	2105304	Function	_zip_ef_delete_by_id	71:0:2290:3067							
ANR	2105305	FunctionDef	"_zip_ef_delete_by_id (struct zip_extra_field * ef , zip_uint16_t id , zip_uint16_t id_idx , zip_flags_t flags)"		2105304	0					
ANR	2105306	CompoundStatement		73:0:2421:3067	2105304	0					
ANR	2105307	IdentifierDeclStatement	"struct zip_extra_field * head , * prev ;"	74:4:2427:2462	2105304	0	True				
ANR	2105308	IdentifierDecl	* head		2105304	0					
ANR	2105309	IdentifierDeclType	struct zip_extra_field *		2105304	0					
ANR	2105310	Identifier	head		2105304	1					
ANR	2105311	IdentifierDecl	* prev		2105304	1					
ANR	2105312	IdentifierDeclType	struct zip_extra_field *		2105304	0					
ANR	2105313	Identifier	prev		2105304	1					
ANR	2105314	IdentifierDeclStatement	int i ;	75:4:2468:2473	2105304	1	True				
ANR	2105315	IdentifierDecl	i		2105304	0					
ANR	2105316	IdentifierDeclType	int		2105304	0					
ANR	2105317	Identifier	i		2105304	1					
ANR	2105318	ExpressionStatement	i = 0	77:4:2480:2485	2105304	2	True				
ANR	2105319	AssignmentExpression	i = 0		2105304	0		=			
ANR	2105320	Identifier	i		2105304	0					
ANR	2105321	PrimaryExpression	0		2105304	1					
ANR	2105322	ExpressionStatement	head = ef	78:4:2491:2500	2105304	3	True				
ANR	2105323	AssignmentExpression	head = ef		2105304	0		=			
ANR	2105324	Identifier	head		2105304	0					
ANR	2105325	Identifier	ef		2105304	1					
ANR	2105326	ExpressionStatement	prev = NULL	79:4:2506:2517	2105304	4	True				
ANR	2105327	AssignmentExpression	prev = NULL		2105304	0		=			
ANR	2105328	Identifier	prev		2105304	0					
ANR	2105329	Identifier	NULL		2105304	1					
ANR	2105330	ForStatement	for ( ; ef ; ef = ( prev ? prev -> next : head ) )		2105304	5					
ANR	2105331	Condition	ef	80:11:2530:2531	2105304	0	True				
ANR	2105332	Identifier	ef		2105304	0					
ANR	2105333	AssignmentExpression	ef = ( prev ? prev -> next : head )	80:15:2534:2562	2105304	1	True	=			
ANR	2105334	Identifier	ef		2105304	0					
ANR	2105335	ConditionalExpression	prev ? prev -> next : head		2105304	1					
ANR	2105336	Condition	prev		2105304	0					
ANR	2105337	Identifier	prev		2105304	0					
ANR	2105338	PtrMemberAccess	prev -> next		2105304	1					
ANR	2105339	Identifier	prev		2105304	0					
ANR	2105340	Identifier	next		2105304	1					
ANR	2105341	Identifier	head		2105304	2					
ANR	2105342	CompoundStatement		8:46:143:143	2105304	2					
ANR	2105343	IfStatement	if ( ( ef -> flags & flags & ZIP_EF_BOTH ) && ( ( ef -> id == id ) || ( id == ZIP_EXTRA_FIELD_ALL ) ) )		2105304	0					
ANR	2105344	Condition	( ef -> flags & flags & ZIP_EF_BOTH ) && ( ( ef -> id == id ) || ( id == ZIP_EXTRA_FIELD_ALL ) )	81:5:2572:2655	2105304	0	True				
ANR	2105345	AndExpression	( ef -> flags & flags & ZIP_EF_BOTH ) && ( ( ef -> id == id ) || ( id == ZIP_EXTRA_FIELD_ALL ) )		2105304	0		&&			
ANR	2105346	BitAndExpression	ef -> flags & flags & ZIP_EF_BOTH		2105304	0		&			
ANR	2105347	PtrMemberAccess	ef -> flags		2105304	0					
ANR	2105348	Identifier	ef		2105304	0					
ANR	2105349	Identifier	flags		2105304	1					
ANR	2105350	BitAndExpression	flags & ZIP_EF_BOTH		2105304	1		&			
ANR	2105351	Identifier	flags		2105304	0					
ANR	2105352	Identifier	ZIP_EF_BOTH		2105304	1					
ANR	2105353	OrExpression	( ef -> id == id ) || ( id == ZIP_EXTRA_FIELD_ALL )		2105304	1		||			
ANR	2105354	EqualityExpression	ef -> id == id		2105304	0		==			
ANR	2105355	PtrMemberAccess	ef -> id		2105304	0					
ANR	2105356	Identifier	ef		2105304	0					
ANR	2105357	Identifier	id		2105304	1					
ANR	2105358	Identifier	id		2105304	1					
ANR	2105359	EqualityExpression	id == ZIP_EXTRA_FIELD_ALL		2105304	1		==			
ANR	2105360	Identifier	id		2105304	0					
ANR	2105361	Identifier	ZIP_EXTRA_FIELD_ALL		2105304	1					
ANR	2105362	CompoundStatement		9:91:236:236	2105304	1					
ANR	2105363	IfStatement	if ( id_idx == ZIP_EXTRA_FIELD_ALL || i == id_idx )		2105304	0					
ANR	2105364	Condition	id_idx == ZIP_EXTRA_FIELD_ALL || i == id_idx	82:9:2669:2712	2105304	0	True				
ANR	2105365	OrExpression	id_idx == ZIP_EXTRA_FIELD_ALL || i == id_idx		2105304	0		||			
ANR	2105366	EqualityExpression	id_idx == ZIP_EXTRA_FIELD_ALL		2105304	0		==			
ANR	2105367	Identifier	id_idx		2105304	0					
ANR	2105368	Identifier	ZIP_EXTRA_FIELD_ALL		2105304	1					
ANR	2105369	EqualityExpression	i == id_idx		2105304	1		==			
ANR	2105370	Identifier	i		2105304	0					
ANR	2105371	Identifier	id_idx		2105304	1					
ANR	2105372	CompoundStatement		10:55:293:293	2105304	1					
ANR	2105373	ExpressionStatement	ef -> flags &= ~ ( flags & ZIP_EF_BOTH )	83:2:2719:2754	2105304	0	True				
ANR	2105374	AssignmentExpression	ef -> flags &= ~ ( flags & ZIP_EF_BOTH )		2105304	0		&=			
ANR	2105375	PtrMemberAccess	ef -> flags		2105304	0					
ANR	2105376	Identifier	ef		2105304	0					
ANR	2105377	Identifier	flags		2105304	1					
ANR	2105378	UnaryOperationExpression	~ ( flags & ZIP_EF_BOTH )		2105304	1					
ANR	2105379	UnaryOperator	~		2105304	0					
ANR	2105380	BitAndExpression	flags & ZIP_EF_BOTH		2105304	1		&			
ANR	2105381	Identifier	flags		2105304	0					
ANR	2105382	Identifier	ZIP_EF_BOTH		2105304	1					
ANR	2105383	IfStatement	if ( ( ef -> flags & ZIP_EF_BOTH ) == 0 )		2105304	1					
ANR	2105384	Condition	( ef -> flags & ZIP_EF_BOTH ) == 0	84:6:2762:2791	2105304	0	True				
ANR	2105385	EqualityExpression	( ef -> flags & ZIP_EF_BOTH ) == 0		2105304	0		==			
ANR	2105386	BitAndExpression	ef -> flags & ZIP_EF_BOTH		2105304	0		&			
ANR	2105387	PtrMemberAccess	ef -> flags		2105304	0					
ANR	2105388	Identifier	ef		2105304	0					
ANR	2105389	Identifier	flags		2105304	1					
ANR	2105390	Identifier	ZIP_EF_BOTH		2105304	1					
ANR	2105391	PrimaryExpression	0		2105304	1					
ANR	2105392	CompoundStatement		12:38:372:372	2105304	1					
ANR	2105393	IfStatement	if ( prev )		2105304	0					
ANR	2105394	Condition	prev	85:10:2806:2809	2105304	0	True				
ANR	2105395	Identifier	prev		2105304	0					
ANR	2105396	ExpressionStatement	prev -> next = ef -> next	86:3:2815:2836	2105304	1	True				
ANR	2105397	AssignmentExpression	prev -> next = ef -> next		2105304	0		=			
ANR	2105398	PtrMemberAccess	prev -> next		2105304	0					
ANR	2105399	Identifier	prev		2105304	0					
ANR	2105400	Identifier	next		2105304	1					
ANR	2105401	PtrMemberAccess	ef -> next		2105304	1					
ANR	2105402	Identifier	ef		2105304	0					
ANR	2105403	Identifier	next		2105304	1					
ANR	2105404	ElseStatement	else		2105304	0					
ANR	2105405	ExpressionStatement	head = ef -> next	88:3:2852:2867	2105304	0	True				
ANR	2105406	AssignmentExpression	head = ef -> next		2105304	0		=			
ANR	2105407	Identifier	head		2105304	0					
ANR	2105408	PtrMemberAccess	ef -> next		2105304	1					
ANR	2105409	Identifier	ef		2105304	0					
ANR	2105410	Identifier	next		2105304	1					
ANR	2105411	ExpressionStatement	ef -> next = NULL	89:6:2875:2890	2105304	1	True				
ANR	2105412	AssignmentExpression	ef -> next = NULL		2105304	0		=			
ANR	2105413	PtrMemberAccess	ef -> next		2105304	0					
ANR	2105414	Identifier	ef		2105304	0					
ANR	2105415	Identifier	next		2105304	1					
ANR	2105416	Identifier	NULL		2105304	1					
ANR	2105417	ExpressionStatement	_zip_ef_free ( ef )	90:6:2898:2914	2105304	2	True				
ANR	2105418	CallExpression	_zip_ef_free ( ef )		2105304	0					
ANR	2105419	Callee	_zip_ef_free		2105304	0					
ANR	2105420	Identifier	_zip_ef_free		2105304	0					
ANR	2105421	ArgumentList	ef		2105304	1					
ANR	2105422	Argument	ef		2105304	0					
ANR	2105423	Identifier	ef		2105304	0					
ANR	2105424	IfStatement	if ( id_idx == ZIP_EXTRA_FIELD_ALL )		2105304	3					
ANR	2105425	Condition	id_idx == ZIP_EXTRA_FIELD_ALL	92:10:2927:2955	2105304	0	True				
ANR	2105426	EqualityExpression	id_idx == ZIP_EXTRA_FIELD_ALL		2105304	0		==			
ANR	2105427	Identifier	id_idx		2105304	0					
ANR	2105428	Identifier	ZIP_EXTRA_FIELD_ALL		2105304	1					
ANR	2105429	ContinueStatement	continue ;	93:3:2961:2969	2105304	1	True				
ANR	2105430	ExpressionStatement	i ++	97:5:2993:2996	2105304	1	True				
ANR	2105431	PostIncDecOperationExpression	i ++		2105304	0					
ANR	2105432	Identifier	i		2105304	0					
ANR	2105433	IncDec	++		2105304	1					
ANR	2105434	IfStatement	if ( i > id_idx )		2105304	2					
ANR	2105435	Condition	i > id_idx	98:9:3007:3016	2105304	0	True				
ANR	2105436	RelationalExpression	i > id_idx		2105304	0		>			
ANR	2105437	Identifier	i		2105304	0					
ANR	2105438	Identifier	id_idx		2105304	1					
ANR	2105439	BreakStatement	break ;	99:2:3021:3026	2105304	1	True				
ANR	2105440	ExpressionStatement	prev = ef	101:1:3032:3041	2105304	1	True				
ANR	2105441	AssignmentExpression	prev = ef		2105304	0		=			
ANR	2105442	Identifier	prev		2105304	0					
ANR	2105443	Identifier	ef		2105304	1					
ANR	2105444	ReturnStatement	return head ;	104:4:3054:3065	2105304	6	True				
ANR	2105445	Identifier	head		2105304	0					
ANR	2105446	ReturnType	struct zip_extra_field *		2105304	1					
ANR	2105447	Identifier	_zip_ef_delete_by_id		2105304	2					
ANR	2105448	ParameterList	"struct zip_extra_field * ef , zip_uint16_t id , zip_uint16_t id_idx , zip_flags_t flags"		2105304	3					
ANR	2105449	Parameter	struct zip_extra_field * ef	72:21:2336:2361	2105304	0	True				
ANR	2105450	ParameterType	struct zip_extra_field *		2105304	0					
ANR	2105451	Identifier	ef		2105304	1					
ANR	2105452	Parameter	zip_uint16_t id	72:49:2364:2378	2105304	1	True				
ANR	2105453	ParameterType	zip_uint16_t		2105304	0					
ANR	2105454	Identifier	id		2105304	1					
ANR	2105455	Parameter	zip_uint16_t id_idx	72:66:2381:2399	2105304	2	True				
ANR	2105456	ParameterType	zip_uint16_t		2105304	0					
ANR	2105457	Identifier	id_idx		2105304	1					
ANR	2105458	Parameter	zip_flags_t flags	72:87:2402:2418	2105304	3	True				
ANR	2105459	ParameterType	zip_flags_t		2105304	0					
ANR	2105460	Identifier	flags		2105304	1					
ANR	2105461	CFGEntryNode	ENTRY		2105304		True				
ANR	2105462	CFGExitNode	EXIT		2105304		True				
ANR	2105463	Symbol	prev -> next		2105304						
ANR	2105464	Symbol	ef		2105304						
ANR	2105465	Symbol	id_idx		2105304						
ANR	2105466	Symbol	NULL		2105304						
ANR	2105467	Symbol	* ef		2105304						
ANR	2105468	Symbol	ZIP_EF_BOTH		2105304						
ANR	2105469	Symbol	prev		2105304						
ANR	2105470	Symbol	flags		2105304						
ANR	2105471	Symbol	i		2105304						
ANR	2105472	Symbol	* prev		2105304						
ANR	2105473	Symbol	ZIP_EXTRA_FIELD_ALL		2105304						
ANR	2105474	Symbol	ef -> id		2105304						
ANR	2105475	Symbol	head		2105304						
ANR	2105476	Symbol	ef -> flags		2105304						
ANR	2105477	Symbol	id		2105304						
ANR	2105478	Symbol	ef -> next		2105304						
ANR	2105479	Function	_zip_ef_free	110:0:3074:3235							
ANR	2105480	FunctionDef	_zip_ef_free (struct zip_extra_field * ef)		2105479	0					
ANR	2105481	CompoundStatement		112:0:3120:3235	2105479	0					
ANR	2105482	IdentifierDeclStatement	struct zip_extra_field * ef2 ;	113:4:3126:3153	2105479	0	True				
ANR	2105483	IdentifierDecl	* ef2		2105479	0					
ANR	2105484	IdentifierDeclType	struct zip_extra_field *		2105479	0					
ANR	2105485	Identifier	ef2		2105479	1					
ANR	2105486	WhileStatement	while ( ef )		2105479	1					
ANR	2105487	Condition	ef	115:11:3167:3168	2105479	0	True				
ANR	2105488	Identifier	ef		2105479	0					
ANR	2105489	CompoundStatement		4:15:50:50	2105479	1					
ANR	2105490	ExpressionStatement	ef2 = ef -> next	116:1:3174:3188	2105479	0	True				
ANR	2105491	AssignmentExpression	ef2 = ef -> next		2105479	0		=			
ANR	2105492	Identifier	ef2		2105479	0					
ANR	2105493	PtrMemberAccess	ef -> next		2105479	1					
ANR	2105494	Identifier	ef		2105479	0					
ANR	2105495	Identifier	next		2105479	1					
ANR	2105496	ExpressionStatement	free ( ef -> data )	117:1:3191:3205	2105479	1	True				
ANR	2105497	CallExpression	free ( ef -> data )		2105479	0					
ANR	2105498	Callee	free		2105479	0					
ANR	2105499	Identifier	free		2105479	0					
ANR	2105500	ArgumentList	ef -> data		2105479	1					
ANR	2105501	Argument	ef -> data		2105479	0					
ANR	2105502	PtrMemberAccess	ef -> data		2105479	0					
ANR	2105503	Identifier	ef		2105479	0					
ANR	2105504	Identifier	data		2105479	1					
ANR	2105505	ExpressionStatement	free ( ef )	118:1:3208:3216	2105479	2	True				
ANR	2105506	CallExpression	free ( ef )		2105479	0					
ANR	2105507	Callee	free		2105479	0					
ANR	2105508	Identifier	free		2105479	0					
ANR	2105509	ArgumentList	ef		2105479	1					
ANR	2105510	Argument	ef		2105479	0					
ANR	2105511	Identifier	ef		2105479	0					
ANR	2105512	ExpressionStatement	ef = ef2	119:1:3219:3227	2105479	3	True				
ANR	2105513	AssignmentExpression	ef = ef2		2105479	0		=			
ANR	2105514	Identifier	ef		2105479	0					
ANR	2105515	Identifier	ef2		2105479	1					
ANR	2105516	ReturnType	void		2105479	1					
ANR	2105517	Identifier	_zip_ef_free		2105479	2					
ANR	2105518	ParameterList	struct zip_extra_field * ef		2105479	3					
ANR	2105519	Parameter	struct zip_extra_field * ef	111:13:3092:3117	2105479	0	True				
ANR	2105520	ParameterType	struct zip_extra_field *		2105479	0					
ANR	2105521	Identifier	ef		2105479	1					
ANR	2105522	CFGEntryNode	ENTRY		2105479		True				
ANR	2105523	CFGExitNode	EXIT		2105479		True				
ANR	2105524	Symbol	ef2		2105479						
ANR	2105525	Symbol	ef -> data		2105479						
ANR	2105526	Symbol	ef		2105479						
ANR	2105527	Symbol	* ef		2105479						
ANR	2105528	Symbol	ef -> next		2105479						
ANR	2105529	Function	_zip_ef_get_by_id	125:0:3241:3807							
ANR	2105530	FunctionDef	"_zip_ef_get_by_id (const struct zip_extra_field * ef , zip_uint16_t * lenp , zip_uint16_t id , zip_uint16_t id_idx , zip_flags_t flags , struct zip_error * error)"		2105529	0					
ANR	2105531	CompoundStatement		127:0:3415:3807	2105529	0					
ANR	2105532	Statement	static	128:4:3421:3426	2105529	0	True				
ANR	2105533	IdentifierDeclStatement	const zip_uint8_t empty [ 1 ] = { '\\0' } ;	128:11:3428:3465	2105529	1	True				
ANR	2105534	IdentifierDecl	empty [ 1 ] = { '\\0' }		2105529	0					
ANR	2105535	IdentifierDeclType	const zip_uint8_t [ 1 ]		2105529	0					
ANR	2105536	Identifier	empty		2105529	1					
ANR	2105537	PrimaryExpression	1		2105529	2					
ANR	2105538	AssignmentExpression	empty [ 1 ] = { '\\0' }		2105529	3		=			
ANR	2105539	Identifier	empty		2105529	0					
ANR	2105540	InitializerList	'\\0'		2105529	1					
ANR	2105541	PrimaryExpression	'\\0'		2105529	0					
ANR	2105542	IdentifierDeclStatement	int i ;	130:4:3476:3481	2105529	2	True				
ANR	2105543	IdentifierDecl	i		2105529	0					
ANR	2105544	IdentifierDeclType	int		2105529	0					
ANR	2105545	Identifier	i		2105529	1					
ANR	2105546	ExpressionStatement	i = 0	132:4:3488:3493	2105529	3	True				
ANR	2105547	AssignmentExpression	i = 0		2105529	0		=			
ANR	2105548	Identifier	i		2105529	0					
ANR	2105549	PrimaryExpression	0		2105529	1					
ANR	2105550	ForStatement	for ( ; ef ; ef = ef -> next )		2105529	4					
ANR	2105551	Condition	ef	133:11:3506:3507	2105529	0	True				
ANR	2105552	Identifier	ef		2105529	0					
ANR	2105553	AssignmentExpression	ef = ef -> next	133:15:3510:3520	2105529	1	True	=			
ANR	2105554	Identifier	ef		2105529	0					
ANR	2105555	PtrMemberAccess	ef -> next		2105529	1					
ANR	2105556	Identifier	ef		2105529	0					
ANR	2105557	Identifier	next		2105529	1					
ANR	2105558	CompoundStatement		7:28:107:107	2105529	2					
ANR	2105559	IfStatement	if ( ef -> id == id && ( ef -> flags & flags & ZIP_EF_BOTH ) )		2105529	0					
ANR	2105560	Condition	ef -> id == id && ( ef -> flags & flags & ZIP_EF_BOTH )	134:5:3530:3578	2105529	0	True				
ANR	2105561	AndExpression	ef -> id == id && ( ef -> flags & flags & ZIP_EF_BOTH )		2105529	0		&&			
ANR	2105562	EqualityExpression	ef -> id == id		2105529	0		==			
ANR	2105563	PtrMemberAccess	ef -> id		2105529	0					
ANR	2105564	Identifier	ef		2105529	0					
ANR	2105565	Identifier	id		2105529	1					
ANR	2105566	Identifier	id		2105529	1					
ANR	2105567	BitAndExpression	ef -> flags & flags & ZIP_EF_BOTH		2105529	1		&			
ANR	2105568	PtrMemberAccess	ef -> flags		2105529	0					
ANR	2105569	Identifier	ef		2105529	0					
ANR	2105570	Identifier	flags		2105529	1					
ANR	2105571	BitAndExpression	flags & ZIP_EF_BOTH		2105529	1		&			
ANR	2105572	Identifier	flags		2105529	0					
ANR	2105573	Identifier	ZIP_EF_BOTH		2105529	1					
ANR	2105574	CompoundStatement		8:56:165:165	2105529	1					
ANR	2105575	IfStatement	if ( i < id_idx )		2105529	0					
ANR	2105576	Condition	i < id_idx	135:9:3592:3601	2105529	0	True				
ANR	2105577	RelationalExpression	i < id_idx		2105529	0		<			
ANR	2105578	Identifier	i		2105529	0					
ANR	2105579	Identifier	id_idx		2105529	1					
ANR	2105580	CompoundStatement		9:21:188:188	2105529	1					
ANR	2105581	ExpressionStatement	i ++	136:2:3608:3611	2105529	0	True				
ANR	2105582	PostIncDecOperationExpression	i ++		2105529	0					
ANR	2105583	Identifier	i		2105529	0					
ANR	2105584	IncDec	++		2105529	1					
ANR	2105585	ContinueStatement	continue ;	137:2:3615:3623	2105529	1	True				
ANR	2105586	IfStatement	if ( lenp )		2105529	1					
ANR	2105587	Condition	lenp	140:9:3642:3645	2105529	0	True				
ANR	2105588	Identifier	lenp		2105529	0					
ANR	2105589	ExpressionStatement	* lenp = ef -> size	141:2:3650:3666	2105529	1	True				
ANR	2105590	AssignmentExpression	* lenp = ef -> size		2105529	0		=			
ANR	2105591	UnaryOperationExpression	* lenp		2105529	0					
ANR	2105592	UnaryOperator	*		2105529	0					
ANR	2105593	Identifier	lenp		2105529	1					
ANR	2105594	PtrMemberAccess	ef -> size		2105529	1					
ANR	2105595	Identifier	ef		2105529	0					
ANR	2105596	Identifier	size		2105529	1					
ANR	2105597	IfStatement	if ( ef -> size > 0 )		2105529	2					
ANR	2105598	Condition	ef -> size > 0	142:9:3677:3688	2105529	0	True				
ANR	2105599	RelationalExpression	ef -> size > 0		2105529	0		>			
ANR	2105600	PtrMemberAccess	ef -> size		2105529	0					
ANR	2105601	Identifier	ef		2105529	0					
ANR	2105602	Identifier	size		2105529	1					
ANR	2105603	PrimaryExpression	0		2105529	1					
ANR	2105604	ReturnStatement	return ef -> data ;	143:2:3693:3708	2105529	1	True				
ANR	2105605	PtrMemberAccess	ef -> data		2105529	0					
ANR	2105606	Identifier	ef		2105529	0					
ANR	2105607	Identifier	data		2105529	1					
ANR	2105608	ElseStatement	else		2105529	0					
ANR	2105609	ReturnStatement	return empty ;	145:2:3722:3734	2105529	0	True				
ANR	2105610	Identifier	empty		2105529	0					
ANR	2105611	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_NOENT , 0 )"	149:4:3750:3788	2105529	5	True				
ANR	2105612	CallExpression	"_zip_error_set ( error , ZIP_ER_NOENT , 0 )"		2105529	0					
ANR	2105613	Callee	_zip_error_set		2105529	0					
ANR	2105614	Identifier	_zip_error_set		2105529	0					
ANR	2105615	ArgumentList	error		2105529	1					
ANR	2105616	Argument	error		2105529	0					
ANR	2105617	Identifier	error		2105529	0					
ANR	2105618	Argument	ZIP_ER_NOENT		2105529	1					
ANR	2105619	Identifier	ZIP_ER_NOENT		2105529	0					
ANR	2105620	Argument	0		2105529	2					
ANR	2105621	PrimaryExpression	0		2105529	0					
ANR	2105622	ReturnStatement	return NULL ;	150:4:3794:3805	2105529	6	True				
ANR	2105623	Identifier	NULL		2105529	0					
ANR	2105624	ReturnType	const zip_uint8_t *		2105529	1					
ANR	2105625	Identifier	_zip_ef_get_by_id		2105529	2					
ANR	2105626	ParameterList	"const struct zip_extra_field * ef , zip_uint16_t * lenp , zip_uint16_t id , zip_uint16_t id_idx , zip_flags_t flags , struct zip_error * error"		2105529	3					
ANR	2105627	Parameter	const struct zip_extra_field * ef	126:18:3279:3310	2105529	0	True				
ANR	2105628	ParameterType	const struct zip_extra_field *		2105529	0					
ANR	2105629	Identifier	ef		2105529	1					
ANR	2105630	Parameter	zip_uint16_t * lenp	126:52:3313:3330	2105529	1	True				
ANR	2105631	ParameterType	zip_uint16_t *		2105529	0					
ANR	2105632	Identifier	lenp		2105529	1					
ANR	2105633	Parameter	zip_uint16_t id	126:72:3333:3347	2105529	2	True				
ANR	2105634	ParameterType	zip_uint16_t		2105529	0					
ANR	2105635	Identifier	id		2105529	1					
ANR	2105636	Parameter	zip_uint16_t id_idx	126:89:3350:3368	2105529	3	True				
ANR	2105637	ParameterType	zip_uint16_t		2105529	0					
ANR	2105638	Identifier	id_idx		2105529	1					
ANR	2105639	Parameter	zip_flags_t flags	126:110:3371:3387	2105529	4	True				
ANR	2105640	ParameterType	zip_flags_t		2105529	0					
ANR	2105641	Identifier	flags		2105529	1					
ANR	2105642	Parameter	struct zip_error * error	126:129:3390:3412	2105529	5	True				
ANR	2105643	ParameterType	struct zip_error *		2105529	0					
ANR	2105644	Identifier	error		2105529	1					
ANR	2105645	CFGEntryNode	ENTRY		2105529		True				
ANR	2105646	CFGExitNode	EXIT		2105529		True				
ANR	2105647	Symbol	ef -> data		2105529						
ANR	2105648	Symbol	ef		2105529						
ANR	2105649	Symbol	id_idx		2105529						
ANR	2105650	Symbol	NULL		2105529						
ANR	2105651	Symbol	* ef		2105529						
ANR	2105652	Symbol	ZIP_EF_BOTH		2105529						
ANR	2105653	Symbol	flags		2105529						
ANR	2105654	Symbol	lenp		2105529						
ANR	2105655	Symbol	i		2105529						
ANR	2105656	Symbol	error		2105529						
ANR	2105657	Symbol	empty		2105529						
ANR	2105658	Symbol	ef -> id		2105529						
ANR	2105659	Symbol	* lenp		2105529						
ANR	2105660	Symbol	ef -> size		2105529						
ANR	2105661	Symbol	ZIP_ER_NOENT		2105529						
ANR	2105662	Symbol	ef -> flags		2105529						
ANR	2105663	Symbol	id		2105529						
ANR	2105664	Symbol	ef -> next		2105529						
ANR	2105665	Function	_zip_ef_merge	155:0:3813:4465							
ANR	2105666	FunctionDef	"_zip_ef_merge (struct zip_extra_field * to , struct zip_extra_field * from)"		2105665	0					
ANR	2105667	CompoundStatement		157:0:3910:4465	2105665	0					
ANR	2105668	IdentifierDeclStatement	"struct zip_extra_field * ef2 , * tt , * tail ;"	158:4:3916:3955	2105665	0	True				
ANR	2105669	IdentifierDecl	* ef2		2105665	0					
ANR	2105670	IdentifierDeclType	struct zip_extra_field *		2105665	0					
ANR	2105671	Identifier	ef2		2105665	1					
ANR	2105672	IdentifierDecl	* tt		2105665	1					
ANR	2105673	IdentifierDeclType	struct zip_extra_field *		2105665	0					
ANR	2105674	Identifier	tt		2105665	1					
ANR	2105675	IdentifierDecl	* tail		2105665	2					
ANR	2105676	IdentifierDeclType	struct zip_extra_field *		2105665	0					
ANR	2105677	Identifier	tail		2105665	1					
ANR	2105678	IdentifierDeclStatement	int duplicate ;	159:4:3961:3974	2105665	1	True				
ANR	2105679	IdentifierDecl	duplicate		2105665	0					
ANR	2105680	IdentifierDeclType	int		2105665	0					
ANR	2105681	Identifier	duplicate		2105665	1					
ANR	2105682	IfStatement	if ( to == NULL )		2105665	2					
ANR	2105683	Condition	to == NULL	161:8:3985:3994	2105665	0	True				
ANR	2105684	EqualityExpression	to == NULL		2105665	0		==			
ANR	2105685	Identifier	to		2105665	0					
ANR	2105686	Identifier	NULL		2105665	1					
ANR	2105687	ReturnStatement	return from ;	162:1:3998:4009	2105665	1	True				
ANR	2105688	Identifier	from		2105665	0					
ANR	2105689	ForStatement	for ( tail = to ; tail -> next ; tail = tail -> next )		2105665	3					
ANR	2105690	ForInit	tail = to ;	164:9:4021:4028	2105665	0	True				
ANR	2105691	AssignmentExpression	tail = to		2105665	0		=			
ANR	2105692	Identifier	tail		2105665	0					
ANR	2105693	Identifier	to		2105665	1					
ANR	2105694	Condition	tail -> next	164:18:4030:4039	2105665	1	True				
ANR	2105695	PtrMemberAccess	tail -> next		2105665	0					
ANR	2105696	Identifier	tail		2105665	0					
ANR	2105697	Identifier	next		2105665	1					
ANR	2105698	AssignmentExpression	tail = tail -> next	164:30:4042:4056	2105665	2	True	=			
ANR	2105699	Identifier	tail		2105665	0					
ANR	2105700	PtrMemberAccess	tail -> next		2105665	1					
ANR	2105701	Identifier	tail		2105665	0					
ANR	2105702	Identifier	next		2105665	1					
ANR	2105703	ExpressionStatement		165:1:4060:4060	2105665	3	True				
ANR	2105704	ForStatement	for ( ; from ; from = ef2 )		2105665	4					
ANR	2105705	Condition	from	167:11:4074:4077	2105665	0	True				
ANR	2105706	Identifier	from		2105665	0					
ANR	2105707	AssignmentExpression	from = ef2	167:17:4080:4087	2105665	1	True	=			
ANR	2105708	Identifier	from		2105665	0					
ANR	2105709	Identifier	ef2		2105665	1					
ANR	2105710	CompoundStatement		11:27:179:179	2105665	2					
ANR	2105711	ExpressionStatement	ef2 = from -> next	168:1:4093:4109	2105665	0	True				
ANR	2105712	AssignmentExpression	ef2 = from -> next		2105665	0		=			
ANR	2105713	Identifier	ef2		2105665	0					
ANR	2105714	PtrMemberAccess	from -> next		2105665	1					
ANR	2105715	Identifier	from		2105665	0					
ANR	2105716	Identifier	next		2105665	1					
ANR	2105717	ExpressionStatement	duplicate = 0	170:1:4113:4126	2105665	1	True				
ANR	2105718	AssignmentExpression	duplicate = 0		2105665	0		=			
ANR	2105719	Identifier	duplicate		2105665	0					
ANR	2105720	PrimaryExpression	0		2105665	1					
ANR	2105721	ForStatement	for ( tt = to ; tt ; tt = tt -> next )		2105665	2					
ANR	2105722	ForInit	tt = to ;	171:6:4134:4139	2105665	0	True				
ANR	2105723	AssignmentExpression	tt = to		2105665	0		=			
ANR	2105724	Identifier	tt		2105665	0					
ANR	2105725	Identifier	to		2105665	1					
ANR	2105726	Condition	tt	171:13:4141:4142	2105665	1	True				
ANR	2105727	Identifier	tt		2105665	0					
ANR	2105728	AssignmentExpression	tt = tt -> next	171:17:4145:4155	2105665	2	True	=			
ANR	2105729	Identifier	tt		2105665	0					
ANR	2105730	PtrMemberAccess	tt -> next		2105665	1					
ANR	2105731	Identifier	tt		2105665	0					
ANR	2105732	Identifier	next		2105665	1					
ANR	2105733	CompoundStatement		15:30:247:247	2105665	3					
ANR	2105734	IfStatement	"if ( tt -> id == from -> id && tt -> size == from -> size && memcmp ( tt -> data , from -> data , tt -> size ) == 0 )"		2105665	0					
ANR	2105735	Condition	"tt -> id == from -> id && tt -> size == from -> size && memcmp ( tt -> data , from -> data , tt -> size ) == 0"	172:9:4169:4259	2105665	0	True				
ANR	2105736	AndExpression	"tt -> id == from -> id && tt -> size == from -> size && memcmp ( tt -> data , from -> data , tt -> size ) == 0"		2105665	0		&&			
ANR	2105737	EqualityExpression	tt -> id == from -> id		2105665	0		==			
ANR	2105738	PtrMemberAccess	tt -> id		2105665	0					
ANR	2105739	Identifier	tt		2105665	0					
ANR	2105740	Identifier	id		2105665	1					
ANR	2105741	PtrMemberAccess	from -> id		2105665	1					
ANR	2105742	Identifier	from		2105665	0					
ANR	2105743	Identifier	id		2105665	1					
ANR	2105744	AndExpression	"tt -> size == from -> size && memcmp ( tt -> data , from -> data , tt -> size ) == 0"		2105665	1		&&			
ANR	2105745	EqualityExpression	tt -> size == from -> size		2105665	0		==			
ANR	2105746	PtrMemberAccess	tt -> size		2105665	0					
ANR	2105747	Identifier	tt		2105665	0					
ANR	2105748	Identifier	size		2105665	1					
ANR	2105749	PtrMemberAccess	from -> size		2105665	1					
ANR	2105750	Identifier	from		2105665	0					
ANR	2105751	Identifier	size		2105665	1					
ANR	2105752	EqualityExpression	"memcmp ( tt -> data , from -> data , tt -> size ) == 0"		2105665	1		==			
ANR	2105753	CallExpression	"memcmp ( tt -> data , from -> data , tt -> size )"		2105665	0					
ANR	2105754	Callee	memcmp		2105665	0					
ANR	2105755	Identifier	memcmp		2105665	0					
ANR	2105756	ArgumentList	tt -> data		2105665	1					
ANR	2105757	Argument	tt -> data		2105665	0					
ANR	2105758	PtrMemberAccess	tt -> data		2105665	0					
ANR	2105759	Identifier	tt		2105665	0					
ANR	2105760	Identifier	data		2105665	1					
ANR	2105761	Argument	from -> data		2105665	1					
ANR	2105762	PtrMemberAccess	from -> data		2105665	0					
ANR	2105763	Identifier	from		2105665	0					
ANR	2105764	Identifier	data		2105665	1					
ANR	2105765	Argument	tt -> size		2105665	2					
ANR	2105766	PtrMemberAccess	tt -> size		2105665	0					
ANR	2105767	Identifier	tt		2105665	0					
ANR	2105768	Identifier	size		2105665	1					
ANR	2105769	PrimaryExpression	0		2105665	1					
ANR	2105770	CompoundStatement		16:102:351:351	2105665	1					
ANR	2105771	ExpressionStatement	tt -> flags |= ( from -> flags & ZIP_EF_BOTH )	173:2:4266:4306	2105665	0	True				
ANR	2105772	AssignmentExpression	tt -> flags |= ( from -> flags & ZIP_EF_BOTH )		2105665	0		|=			
ANR	2105773	PtrMemberAccess	tt -> flags		2105665	0					
ANR	2105774	Identifier	tt		2105665	0					
ANR	2105775	Identifier	flags		2105665	1					
ANR	2105776	BitAndExpression	from -> flags & ZIP_EF_BOTH		2105665	1		&			
ANR	2105777	PtrMemberAccess	from -> flags		2105665	0					
ANR	2105778	Identifier	from		2105665	0					
ANR	2105779	Identifier	flags		2105665	1					
ANR	2105780	Identifier	ZIP_EF_BOTH		2105665	1					
ANR	2105781	ExpressionStatement	duplicate = 1	174:2:4310:4323	2105665	1	True				
ANR	2105782	AssignmentExpression	duplicate = 1		2105665	0		=			
ANR	2105783	Identifier	duplicate		2105665	0					
ANR	2105784	PrimaryExpression	1		2105665	1					
ANR	2105785	BreakStatement	break ;	175:2:4327:4332	2105665	2	True				
ANR	2105786	ExpressionStatement	from -> next = NULL	179:1:4346:4363	2105665	3	True				
ANR	2105787	AssignmentExpression	from -> next = NULL		2105665	0		=			
ANR	2105788	PtrMemberAccess	from -> next		2105665	0					
ANR	2105789	Identifier	from		2105665	0					
ANR	2105790	Identifier	next		2105665	1					
ANR	2105791	Identifier	NULL		2105665	1					
ANR	2105792	IfStatement	if ( duplicate )		2105665	4					
ANR	2105793	Condition	duplicate	180:5:4370:4378	2105665	0	True				
ANR	2105794	Identifier	duplicate		2105665	0					
ANR	2105795	ExpressionStatement	_zip_ef_free ( from )	181:5:4386:4404	2105665	1	True				
ANR	2105796	CallExpression	_zip_ef_free ( from )		2105665	0					
ANR	2105797	Callee	_zip_ef_free		2105665	0					
ANR	2105798	Identifier	_zip_ef_free		2105665	0					
ANR	2105799	ArgumentList	from		2105665	1					
ANR	2105800	Argument	from		2105665	0					
ANR	2105801	Identifier	from		2105665	0					
ANR	2105802	ElseStatement	else		2105665	0					
ANR	2105803	ExpressionStatement	tail = tail -> next = from	183:5:4417:4441	2105665	0	True				
ANR	2105804	AssignmentExpression	tail = tail -> next = from		2105665	0		=			
ANR	2105805	Identifier	tail		2105665	0					
ANR	2105806	AssignmentExpression	tail -> next = from		2105665	1		=			
ANR	2105807	PtrMemberAccess	tail -> next		2105665	0					
ANR	2105808	Identifier	tail		2105665	0					
ANR	2105809	Identifier	next		2105665	1					
ANR	2105810	Identifier	from		2105665	1					
ANR	2105811	ReturnStatement	return to ;	186:4:4454:4463	2105665	5	True				
ANR	2105812	Identifier	to		2105665	0					
ANR	2105813	ReturnType	struct zip_extra_field *		2105665	1					
ANR	2105814	Identifier	_zip_ef_merge		2105665	2					
ANR	2105815	ParameterList	"struct zip_extra_field * to , struct zip_extra_field * from"		2105665	3					
ANR	2105816	Parameter	struct zip_extra_field * to	156:14:3852:3877	2105665	0	True				
ANR	2105817	ParameterType	struct zip_extra_field *		2105665	0					
ANR	2105818	Identifier	to		2105665	1					
ANR	2105819	Parameter	struct zip_extra_field * from	156:42:3880:3907	2105665	1	True				
ANR	2105820	ParameterType	struct zip_extra_field *		2105665	0					
ANR	2105821	Identifier	from		2105665	1					
ANR	2105822	CFGEntryNode	ENTRY		2105665		True				
ANR	2105823	CFGExitNode	EXIT		2105665		True				
ANR	2105824	Symbol	tt		2105665						
ANR	2105825	Symbol	tt -> flags		2105665						
ANR	2105826	Symbol	from -> flags		2105665						
ANR	2105827	Symbol	* tail		2105665						
ANR	2105828	Symbol	NULL		2105665						
ANR	2105829	Symbol	from -> size		2105665						
ANR	2105830	Symbol	ZIP_EF_BOTH		2105665						
ANR	2105831	Symbol	* tt		2105665						
ANR	2105832	Symbol	tail		2105665						
ANR	2105833	Symbol	tt -> id		2105665						
ANR	2105834	Symbol	tt -> next		2105665						
ANR	2105835	Symbol	duplicate		2105665						
ANR	2105836	Symbol	from -> id		2105665						
ANR	2105837	Symbol	ef2		2105665						
ANR	2105838	Symbol	memcmp		2105665						
ANR	2105839	Symbol	from -> data		2105665						
ANR	2105840	Symbol	tail -> next		2105665						
ANR	2105841	Symbol	from -> next		2105665						
ANR	2105842	Symbol	from		2105665						
ANR	2105843	Symbol	to		2105665						
ANR	2105844	Symbol	tt -> size		2105665						
ANR	2105845	Symbol	tt -> data		2105665						
ANR	2105846	Symbol	* from		2105665						
ANR	2105847	Function	_zip_ef_new	191:0:4471:4965							
ANR	2105848	FunctionDef	"_zip_ef_new (zip_uint16_t id , zip_uint16_t size , const zip_uint8_t * data , zip_flags_t flags)"		2105847	0					
ANR	2105849	CompoundStatement		193:0:4588:4965	2105847	0					
ANR	2105850	IdentifierDeclStatement	struct zip_extra_field * ef ;	194:4:4594:4620	2105847	0	True				
ANR	2105851	IdentifierDecl	* ef		2105847	0					
ANR	2105852	IdentifierDeclType	struct zip_extra_field *		2105847	0					
ANR	2105853	Identifier	ef		2105847	1					
ANR	2105854	IfStatement	if ( ( ef = ( struct zip_extra_field * ) malloc ( sizeof ( * ef ) ) ) == NULL )		2105847	1					
ANR	2105855	Condition	( ef = ( struct zip_extra_field * ) malloc ( sizeof ( * ef ) ) ) == NULL	196:8:4631:4688	2105847	0	True				
ANR	2105856	EqualityExpression	( ef = ( struct zip_extra_field * ) malloc ( sizeof ( * ef ) ) ) == NULL		2105847	0		==			
ANR	2105857	AssignmentExpression	ef = ( struct zip_extra_field * ) malloc ( sizeof ( * ef ) )		2105847	0		=			
ANR	2105858	Identifier	ef		2105847	0					
ANR	2105859	CastExpression	( struct zip_extra_field * ) malloc ( sizeof ( * ef ) )		2105847	1					
ANR	2105860	CastTarget	struct zip_extra_field *		2105847	0					
ANR	2105861	CallExpression	malloc ( sizeof ( * ef ) )		2105847	1					
ANR	2105862	Callee	malloc		2105847	0					
ANR	2105863	Identifier	malloc		2105847	0					
ANR	2105864	ArgumentList	sizeof ( * ef )		2105847	1					
ANR	2105865	Argument	sizeof ( * ef )		2105847	0					
ANR	2105866	SizeofExpression	sizeof ( * ef )		2105847	0					
ANR	2105867	Sizeof	sizeof		2105847	0					
ANR	2105868	UnaryOperationExpression	* ef		2105847	1					
ANR	2105869	UnaryOperator	*		2105847	0					
ANR	2105870	Identifier	ef		2105847	1					
ANR	2105871	Identifier	NULL		2105847	1					
ANR	2105872	ReturnStatement	return NULL ;	197:1:4692:4703	2105847	1	True				
ANR	2105873	Identifier	NULL		2105847	0					
ANR	2105874	ExpressionStatement	ef -> next = NULL	199:4:4710:4725	2105847	2	True				
ANR	2105875	AssignmentExpression	ef -> next = NULL		2105847	0		=			
ANR	2105876	PtrMemberAccess	ef -> next		2105847	0					
ANR	2105877	Identifier	ef		2105847	0					
ANR	2105878	Identifier	next		2105847	1					
ANR	2105879	Identifier	NULL		2105847	1					
ANR	2105880	ExpressionStatement	ef -> flags = flags	200:4:4731:4748	2105847	3	True				
ANR	2105881	AssignmentExpression	ef -> flags = flags		2105847	0		=			
ANR	2105882	PtrMemberAccess	ef -> flags		2105847	0					
ANR	2105883	Identifier	ef		2105847	0					
ANR	2105884	Identifier	flags		2105847	1					
ANR	2105885	Identifier	flags		2105847	1					
ANR	2105886	ExpressionStatement	ef -> id = id	201:4:4754:4765	2105847	4	True				
ANR	2105887	AssignmentExpression	ef -> id = id		2105847	0		=			
ANR	2105888	PtrMemberAccess	ef -> id		2105847	0					
ANR	2105889	Identifier	ef		2105847	0					
ANR	2105890	Identifier	id		2105847	1					
ANR	2105891	Identifier	id		2105847	1					
ANR	2105892	ExpressionStatement	ef -> size = size	202:4:4771:4786	2105847	5	True				
ANR	2105893	AssignmentExpression	ef -> size = size		2105847	0		=			
ANR	2105894	PtrMemberAccess	ef -> size		2105847	0					
ANR	2105895	Identifier	ef		2105847	0					
ANR	2105896	Identifier	size		2105847	1					
ANR	2105897	Identifier	size		2105847	1					
ANR	2105898	IfStatement	if ( size > 0 )		2105847	6					
ANR	2105899	Condition	size > 0	203:8:4796:4803	2105847	0	True				
ANR	2105900	RelationalExpression	size > 0		2105847	0		>			
ANR	2105901	Identifier	size		2105847	0					
ANR	2105902	PrimaryExpression	0		2105847	1					
ANR	2105903	CompoundStatement		11:18:217:217	2105847	1					
ANR	2105904	IfStatement	"if ( ( ef -> data = ( zip_uint8_t * ) _zip_memdup ( data , size , NULL ) ) == NULL )"		2105847	0					
ANR	2105905	Condition	"( ef -> data = ( zip_uint8_t * ) _zip_memdup ( data , size , NULL ) ) == NULL"	204:5:4813:4875	2105847	0	True				
ANR	2105906	EqualityExpression	"( ef -> data = ( zip_uint8_t * ) _zip_memdup ( data , size , NULL ) ) == NULL"		2105847	0		==			
ANR	2105907	AssignmentExpression	"ef -> data = ( zip_uint8_t * ) _zip_memdup ( data , size , NULL )"		2105847	0		=			
ANR	2105908	PtrMemberAccess	ef -> data		2105847	0					
ANR	2105909	Identifier	ef		2105847	0					
ANR	2105910	Identifier	data		2105847	1					
ANR	2105911	CastExpression	"( zip_uint8_t * ) _zip_memdup ( data , size , NULL )"		2105847	1					
ANR	2105912	CastTarget	zip_uint8_t *		2105847	0					
ANR	2105913	CallExpression	"_zip_memdup ( data , size , NULL )"		2105847	1					
ANR	2105914	Callee	_zip_memdup		2105847	0					
ANR	2105915	Identifier	_zip_memdup		2105847	0					
ANR	2105916	ArgumentList	data		2105847	1					
ANR	2105917	Argument	data		2105847	0					
ANR	2105918	Identifier	data		2105847	0					
ANR	2105919	Argument	size		2105847	1					
ANR	2105920	Identifier	size		2105847	0					
ANR	2105921	Argument	NULL		2105847	2					
ANR	2105922	Identifier	NULL		2105847	0					
ANR	2105923	Identifier	NULL		2105847	1					
ANR	2105924	CompoundStatement		12:70:289:289	2105847	1					
ANR	2105925	ExpressionStatement	free ( ef )	205:5:4885:4893	2105847	0	True				
ANR	2105926	CallExpression	free ( ef )		2105847	0					
ANR	2105927	Callee	free		2105847	0					
ANR	2105928	Identifier	free		2105847	0					
ANR	2105929	ArgumentList	ef		2105847	1					
ANR	2105930	Argument	ef		2105847	0					
ANR	2105931	Identifier	ef		2105847	0					
ANR	2105932	ReturnStatement	return NULL ;	206:5:4900:4911	2105847	1	True				
ANR	2105933	Identifier	NULL		2105847	0					
ANR	2105934	ElseStatement	else		2105847	0					
ANR	2105935	ExpressionStatement	ef -> data = NULL	210:1:4932:4947	2105847	0	True				
ANR	2105936	AssignmentExpression	ef -> data = NULL		2105847	0		=			
ANR	2105937	PtrMemberAccess	ef -> data		2105847	0					
ANR	2105938	Identifier	ef		2105847	0					
ANR	2105939	Identifier	data		2105847	1					
ANR	2105940	Identifier	NULL		2105847	1					
ANR	2105941	ReturnStatement	return ef ;	212:4:4954:4963	2105847	7	True				
ANR	2105942	Identifier	ef		2105847	0					
ANR	2105943	ReturnType	struct zip_extra_field *		2105847	1					
ANR	2105944	Identifier	_zip_ef_new		2105847	2					
ANR	2105945	ParameterList	"zip_uint16_t id , zip_uint16_t size , const zip_uint8_t * data , zip_flags_t flags"		2105847	3					
ANR	2105946	Parameter	zip_uint16_t id	192:12:4508:4522	2105847	0	True				
ANR	2105947	ParameterType	zip_uint16_t		2105847	0					
ANR	2105948	Identifier	id		2105847	1					
ANR	2105949	Parameter	zip_uint16_t size	192:29:4525:4541	2105847	1	True				
ANR	2105950	ParameterType	zip_uint16_t		2105847	0					
ANR	2105951	Identifier	size		2105847	1					
ANR	2105952	Parameter	const zip_uint8_t * data	192:48:4544:4566	2105847	2	True				
ANR	2105953	ParameterType	const zip_uint8_t *		2105847	0					
ANR	2105954	Identifier	data		2105847	1					
ANR	2105955	Parameter	zip_flags_t flags	192:73:4569:4585	2105847	3	True				
ANR	2105956	ParameterType	zip_flags_t		2105847	0					
ANR	2105957	Identifier	flags		2105847	1					
ANR	2105958	CFGEntryNode	ENTRY		2105847		True				
ANR	2105959	CFGExitNode	EXIT		2105847		True				
ANR	2105960	Symbol	ef -> data		2105847						
ANR	2105961	Symbol	ef		2105847						
ANR	2105962	Symbol	malloc		2105847						
ANR	2105963	Symbol	_zip_memdup		2105847						
ANR	2105964	Symbol	NULL		2105847						
ANR	2105965	Symbol	data		2105847						
ANR	2105966	Symbol	* ef		2105847						
ANR	2105967	Symbol	flags		2105847						
ANR	2105968	Symbol	ef -> id		2105847						
ANR	2105969	Symbol	ef -> size		2105847						
ANR	2105970	Symbol	size		2105847						
ANR	2105971	Symbol	ef -> flags		2105847						
ANR	2105972	Symbol	id		2105847						
ANR	2105973	Symbol	ef -> next		2105847						
ANR	2105974	Function	_zip_ef_parse	217:0:4971:5815							
ANR	2105975	FunctionDef	"_zip_ef_parse (const zip_uint8_t * data , zip_uint16_t len , zip_flags_t flags , struct zip_error * error)"		2105974	0					
ANR	2105976	CompoundStatement		219:0:5097:5815	2105974	0					
ANR	2105977	IdentifierDeclStatement	"struct zip_extra_field * ef , * ef2 , * ef_head ;"	220:4:5103:5145	2105974	0	True				
ANR	2105978	IdentifierDecl	* ef		2105974	0					
ANR	2105979	IdentifierDeclType	struct zip_extra_field *		2105974	0					
ANR	2105980	Identifier	ef		2105974	1					
ANR	2105981	IdentifierDecl	* ef2		2105974	1					
ANR	2105982	IdentifierDeclType	struct zip_extra_field *		2105974	0					
ANR	2105983	Identifier	ef2		2105974	1					
ANR	2105984	IdentifierDecl	* ef_head		2105974	2					
ANR	2105985	IdentifierDeclType	struct zip_extra_field *		2105974	0					
ANR	2105986	Identifier	ef_head		2105974	1					
ANR	2105987	IdentifierDeclStatement	const zip_uint8_t * p ;	221:4:5151:5171	2105974	1	True				
ANR	2105988	IdentifierDecl	* p		2105974	0					
ANR	2105989	IdentifierDeclType	const zip_uint8_t *		2105974	0					
ANR	2105990	Identifier	p		2105974	1					
ANR	2105991	IdentifierDeclStatement	"zip_uint16_t fid , flen ;"	222:4:5177:5199	2105974	2	True				
ANR	2105992	IdentifierDecl	fid		2105974	0					
ANR	2105993	IdentifierDeclType	zip_uint16_t		2105974	0					
ANR	2105994	Identifier	fid		2105974	1					
ANR	2105995	IdentifierDecl	flen		2105974	1					
ANR	2105996	IdentifierDeclType	zip_uint16_t		2105974	0					
ANR	2105997	Identifier	flen		2105974	1					
ANR	2105998	ExpressionStatement	ef_head = NULL	224:4:5206:5220	2105974	3	True				
ANR	2105999	AssignmentExpression	ef_head = NULL		2105974	0		=			
ANR	2106000	Identifier	ef_head		2105974	0					
ANR	2106001	Identifier	NULL		2105974	1					
ANR	2106002	ForStatement	for ( p = data ; p < data + len ; p += flen )		2105974	4					
ANR	2106003	ForInit	p = data ;	225:9:5231:5237	2105974	0	True				
ANR	2106004	AssignmentExpression	p = data		2105974	0		=			
ANR	2106005	Identifier	p		2105974	0					
ANR	2106006	Identifier	data		2105974	1					
ANR	2106007	Condition	p < data + len	225:17:5239:5248	2105974	1	True				
ANR	2106008	RelationalExpression	p < data + len		2105974	0		<			
ANR	2106009	Identifier	p		2105974	0					
ANR	2106010	AdditiveExpression	data + len		2105974	1		+			
ANR	2106011	Identifier	data		2105974	0					
ANR	2106012	Identifier	len		2105974	1					
ANR	2106013	AssignmentExpression	p += flen	225:29:5251:5257	2105974	2	True	+=			
ANR	2106014	Identifier	p		2105974	0					
ANR	2106015	Identifier	flen		2105974	1					
ANR	2106016	CompoundStatement		7:38:162:162	2105974	3					
ANR	2106017	IfStatement	if ( p + 4 > data + len )		2105974	0					
ANR	2106018	Condition	p + 4 > data + len	226:5:5267:5280	2105974	0	True				
ANR	2106019	RelationalExpression	p + 4 > data + len		2105974	0		>			
ANR	2106020	AdditiveExpression	p + 4		2105974	0		+			
ANR	2106021	Identifier	p		2105974	0					
ANR	2106022	PrimaryExpression	4		2105974	1					
ANR	2106023	AdditiveExpression	data + len		2105974	1		+			
ANR	2106024	Identifier	data		2105974	0					
ANR	2106025	Identifier	len		2105974	1					
ANR	2106026	CompoundStatement		8:21:185:185	2105974	1					
ANR	2106027	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"	227:5:5290:5329	2105974	0	True				
ANR	2106028	CallExpression	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"		2105974	0					
ANR	2106029	Callee	_zip_error_set		2105974	0					
ANR	2106030	Identifier	_zip_error_set		2105974	0					
ANR	2106031	ArgumentList	error		2105974	1					
ANR	2106032	Argument	error		2105974	0					
ANR	2106033	Identifier	error		2105974	0					
ANR	2106034	Argument	ZIP_ER_INCONS		2105974	1					
ANR	2106035	Identifier	ZIP_ER_INCONS		2105974	0					
ANR	2106036	Argument	0		2105974	2					
ANR	2106037	PrimaryExpression	0		2105974	0					
ANR	2106038	ExpressionStatement	_zip_ef_free ( ef_head )	228:5:5336:5357	2105974	1	True				
ANR	2106039	CallExpression	_zip_ef_free ( ef_head )		2105974	0					
ANR	2106040	Callee	_zip_ef_free		2105974	0					
ANR	2106041	Identifier	_zip_ef_free		2105974	0					
ANR	2106042	ArgumentList	ef_head		2105974	1					
ANR	2106043	Argument	ef_head		2105974	0					
ANR	2106044	Identifier	ef_head		2105974	0					
ANR	2106045	ReturnStatement	return NULL ;	229:5:5364:5375	2105974	2	True				
ANR	2106046	Identifier	NULL		2105974	0					
ANR	2106047	ExpressionStatement	fid = _zip_read2 ( & p )	232:1:5382:5402	2105974	1	True				
ANR	2106048	AssignmentExpression	fid = _zip_read2 ( & p )		2105974	0		=			
ANR	2106049	Identifier	fid		2105974	0					
ANR	2106050	CallExpression	_zip_read2 ( & p )		2105974	1					
ANR	2106051	Callee	_zip_read2		2105974	0					
ANR	2106052	Identifier	_zip_read2		2105974	0					
ANR	2106053	ArgumentList	& p		2105974	1					
ANR	2106054	Argument	& p		2105974	0					
ANR	2106055	UnaryOperationExpression	& p		2105974	0					
ANR	2106056	UnaryOperator	&		2105974	0					
ANR	2106057	Identifier	p		2105974	1					
ANR	2106058	ExpressionStatement	flen = _zip_read2 ( & p )	233:1:5405:5426	2105974	2	True				
ANR	2106059	AssignmentExpression	flen = _zip_read2 ( & p )		2105974	0		=			
ANR	2106060	Identifier	flen		2105974	0					
ANR	2106061	CallExpression	_zip_read2 ( & p )		2105974	1					
ANR	2106062	Callee	_zip_read2		2105974	0					
ANR	2106063	Identifier	_zip_read2		2105974	0					
ANR	2106064	ArgumentList	& p		2105974	1					
ANR	2106065	Argument	& p		2105974	0					
ANR	2106066	UnaryOperationExpression	& p		2105974	0					
ANR	2106067	UnaryOperator	&		2105974	0					
ANR	2106068	Identifier	p		2105974	1					
ANR	2106069	IfStatement	if ( p + flen > data + len )		2105974	3					
ANR	2106070	Condition	p + flen > data + len	235:5:5434:5450	2105974	0	True				
ANR	2106071	RelationalExpression	p + flen > data + len		2105974	0		>			
ANR	2106072	AdditiveExpression	p + flen		2105974	0		+			
ANR	2106073	Identifier	p		2105974	0					
ANR	2106074	Identifier	flen		2105974	1					
ANR	2106075	AdditiveExpression	data + len		2105974	1		+			
ANR	2106076	Identifier	data		2105974	0					
ANR	2106077	Identifier	len		2105974	1					
ANR	2106078	CompoundStatement		17:24:355:355	2105974	1					
ANR	2106079	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"	236:5:5460:5499	2105974	0	True				
ANR	2106080	CallExpression	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"		2105974	0					
ANR	2106081	Callee	_zip_error_set		2105974	0					
ANR	2106082	Identifier	_zip_error_set		2105974	0					
ANR	2106083	ArgumentList	error		2105974	1					
ANR	2106084	Argument	error		2105974	0					
ANR	2106085	Identifier	error		2105974	0					
ANR	2106086	Argument	ZIP_ER_INCONS		2105974	1					
ANR	2106087	Identifier	ZIP_ER_INCONS		2105974	0					
ANR	2106088	Argument	0		2105974	2					
ANR	2106089	PrimaryExpression	0		2105974	0					
ANR	2106090	ExpressionStatement	_zip_ef_free ( ef_head )	237:5:5506:5527	2105974	1	True				
ANR	2106091	CallExpression	_zip_ef_free ( ef_head )		2105974	0					
ANR	2106092	Callee	_zip_ef_free		2105974	0					
ANR	2106093	Identifier	_zip_ef_free		2105974	0					
ANR	2106094	ArgumentList	ef_head		2105974	1					
ANR	2106095	Argument	ef_head		2105974	0					
ANR	2106096	Identifier	ef_head		2105974	0					
ANR	2106097	ReturnStatement	return NULL ;	238:5:5534:5545	2105974	2	True				
ANR	2106098	Identifier	NULL		2105974	0					
ANR	2106099	IfStatement	"if ( ( ef2 = _zip_ef_new ( fid , flen , p , flags ) ) == NULL )"		2105974	4					
ANR	2106100	Condition	"( ef2 = _zip_ef_new ( fid , flen , p , flags ) ) == NULL"	241:5:5556:5601	2105974	0	True				
ANR	2106101	EqualityExpression	"( ef2 = _zip_ef_new ( fid , flen , p , flags ) ) == NULL"		2105974	0		==			
ANR	2106102	AssignmentExpression	"ef2 = _zip_ef_new ( fid , flen , p , flags )"		2105974	0		=			
ANR	2106103	Identifier	ef2		2105974	0					
ANR	2106104	CallExpression	"_zip_ef_new ( fid , flen , p , flags )"		2105974	1					
ANR	2106105	Callee	_zip_ef_new		2105974	0					
ANR	2106106	Identifier	_zip_ef_new		2105974	0					
ANR	2106107	ArgumentList	fid		2105974	1					
ANR	2106108	Argument	fid		2105974	0					
ANR	2106109	Identifier	fid		2105974	0					
ANR	2106110	Argument	flen		2105974	1					
ANR	2106111	Identifier	flen		2105974	0					
ANR	2106112	Argument	p		2105974	2					
ANR	2106113	Identifier	p		2105974	0					
ANR	2106114	Argument	flags		2105974	3					
ANR	2106115	Identifier	flags		2105974	0					
ANR	2106116	Identifier	NULL		2105974	1					
ANR	2106117	CompoundStatement		23:53:506:506	2105974	1					
ANR	2106118	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"	242:5:5611:5650	2105974	0	True				
ANR	2106119	CallExpression	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"		2105974	0					
ANR	2106120	Callee	_zip_error_set		2105974	0					
ANR	2106121	Identifier	_zip_error_set		2105974	0					
ANR	2106122	ArgumentList	error		2105974	1					
ANR	2106123	Argument	error		2105974	0					
ANR	2106124	Identifier	error		2105974	0					
ANR	2106125	Argument	ZIP_ER_MEMORY		2105974	1					
ANR	2106126	Identifier	ZIP_ER_MEMORY		2105974	0					
ANR	2106127	Argument	0		2105974	2					
ANR	2106128	PrimaryExpression	0		2105974	0					
ANR	2106129	ExpressionStatement	_zip_ef_free ( ef_head )	243:5:5657:5678	2105974	1	True				
ANR	2106130	CallExpression	_zip_ef_free ( ef_head )		2105974	0					
ANR	2106131	Callee	_zip_ef_free		2105974	0					
ANR	2106132	Identifier	_zip_ef_free		2105974	0					
ANR	2106133	ArgumentList	ef_head		2105974	1					
ANR	2106134	Argument	ef_head		2105974	0					
ANR	2106135	Identifier	ef_head		2105974	0					
ANR	2106136	ReturnStatement	return NULL ;	244:5:5685:5696	2105974	2	True				
ANR	2106137	Identifier	NULL		2105974	0					
ANR	2106138	IfStatement	if ( ef_head )		2105974	5					
ANR	2106139	Condition	ef_head	247:5:5707:5713	2105974	0	True				
ANR	2106140	Identifier	ef_head		2105974	0					
ANR	2106141	CompoundStatement		29:14:618:618	2105974	1					
ANR	2106142	ExpressionStatement	ef -> next = ef2	248:5:5723:5737	2105974	0	True				
ANR	2106143	AssignmentExpression	ef -> next = ef2		2105974	0		=			
ANR	2106144	PtrMemberAccess	ef -> next		2105974	0					
ANR	2106145	Identifier	ef		2105974	0					
ANR	2106146	Identifier	next		2105974	1					
ANR	2106147	Identifier	ef2		2105974	1					
ANR	2106148	ExpressionStatement	ef = ef2	249:5:5744:5752	2105974	1	True				
ANR	2106149	AssignmentExpression	ef = ef2		2105974	0		=			
ANR	2106150	Identifier	ef		2105974	0					
ANR	2106151	Identifier	ef2		2105974	1					
ANR	2106152	ElseStatement	else		2105974	0					
ANR	2106153	ExpressionStatement	ef_head = ef = ef2	252:5:5768:5786	2105974	0	True				
ANR	2106154	AssignmentExpression	ef_head = ef = ef2		2105974	0		=			
ANR	2106155	Identifier	ef_head		2105974	0					
ANR	2106156	AssignmentExpression	ef = ef2		2105974	1		=			
ANR	2106157	Identifier	ef		2105974	0					
ANR	2106158	Identifier	ef2		2105974	1					
ANR	2106159	ReturnStatement	return ef_head ;	255:4:5799:5813	2105974	5	True				
ANR	2106160	Identifier	ef_head		2105974	0					
ANR	2106161	ReturnType	struct zip_extra_field *		2105974	1					
ANR	2106162	Identifier	_zip_ef_parse		2105974	2					
ANR	2106163	ParameterList	"const zip_uint8_t * data , zip_uint16_t len , zip_flags_t flags , struct zip_error * error"		2105974	3					
ANR	2106164	Parameter	const zip_uint8_t * data	218:14:5010:5032	2105974	0	True				
ANR	2106165	ParameterType	const zip_uint8_t *		2105974	0					
ANR	2106166	Identifier	data		2105974	1					
ANR	2106167	Parameter	zip_uint16_t len	218:39:5035:5050	2105974	1	True				
ANR	2106168	ParameterType	zip_uint16_t		2105974	0					
ANR	2106169	Identifier	len		2105974	1					
ANR	2106170	Parameter	zip_flags_t flags	218:57:5053:5069	2105974	2	True				
ANR	2106171	ParameterType	zip_flags_t		2105974	0					
ANR	2106172	Identifier	flags		2105974	1					
ANR	2106173	Parameter	struct zip_error * error	218:76:5072:5094	2105974	3	True				
ANR	2106174	ParameterType	struct zip_error *		2105974	0					
ANR	2106175	Identifier	error		2105974	1					
ANR	2106176	CFGEntryNode	ENTRY		2105974		True				
ANR	2106177	CFGExitNode	EXIT		2105974		True				
ANR	2106178	Symbol	flen		2105974						
ANR	2106179	Symbol	fid		2105974						
ANR	2106180	Symbol	ef		2105974						
ANR	2106181	Symbol	NULL		2105974						
ANR	2106182	Symbol	data		2105974						
ANR	2106183	Symbol	* ef		2105974						
ANR	2106184	Symbol	flags		2105974						
ANR	2106185	Symbol	error		2105974						
ANR	2106186	Symbol	ef2		2105974						
ANR	2106187	Symbol	p		2105974						
ANR	2106188	Symbol	ef_head		2105974						
ANR	2106189	Symbol	len		2105974						
ANR	2106190	Symbol	& p		2105974						
ANR	2106191	Symbol	_zip_ef_new		2105974						
ANR	2106192	Symbol	ZIP_ER_INCONS		2105974						
ANR	2106193	Symbol	_zip_read2		2105974						
ANR	2106194	Symbol	ZIP_ER_MEMORY		2105974						
ANR	2106195	Symbol	ef -> next		2105974						
ANR	2106196	Function	_zip_ef_remove_internal	260:0:5821:6429							
ANR	2106197	FunctionDef	_zip_ef_remove_internal (struct zip_extra_field * ef)		2106196	0					
ANR	2106198	CompoundStatement		262:0:5898:6429	2106196	0					
ANR	2106199	IdentifierDeclStatement	struct zip_extra_field * ef_head ;	263:4:5904:5935	2106196	0	True				
ANR	2106200	IdentifierDecl	* ef_head		2106196	0					
ANR	2106201	IdentifierDeclType	struct zip_extra_field *		2106196	0					
ANR	2106202	Identifier	ef_head		2106196	1					
ANR	2106203	IdentifierDeclStatement	"struct zip_extra_field * prev , * next ;"	264:4:5941:5976	2106196	1	True				
ANR	2106204	IdentifierDecl	* prev		2106196	0					
ANR	2106205	IdentifierDeclType	struct zip_extra_field *		2106196	0					
ANR	2106206	Identifier	prev		2106196	1					
ANR	2106207	IdentifierDecl	* next		2106196	1					
ANR	2106208	IdentifierDeclType	struct zip_extra_field *		2106196	0					
ANR	2106209	Identifier	next		2106196	1					
ANR	2106210	ExpressionStatement	ef_head = ef	266:4:5987:5999	2106196	2	True				
ANR	2106211	AssignmentExpression	ef_head = ef		2106196	0		=			
ANR	2106212	Identifier	ef_head		2106196	0					
ANR	2106213	Identifier	ef		2106196	1					
ANR	2106214	ExpressionStatement	prev = NULL	267:4:6005:6016	2106196	3	True				
ANR	2106215	AssignmentExpression	prev = NULL		2106196	0		=			
ANR	2106216	Identifier	prev		2106196	0					
ANR	2106217	Identifier	NULL		2106196	1					
ANR	2106218	WhileStatement	while ( ef )		2106196	4					
ANR	2106219	Condition	ef	269:11:6034:6035	2106196	0	True				
ANR	2106220	Identifier	ef		2106196	0					
ANR	2106221	CompoundStatement		8:15:139:139	2106196	1					
ANR	2106222	IfStatement	if ( ZIP_EF_IS_INTERNAL ( ef -> id ) )		2106196	0					
ANR	2106223	Condition	ZIP_EF_IS_INTERNAL ( ef -> id )	270:12:6052:6077	2106196	0	True				
ANR	2106224	CallExpression	ZIP_EF_IS_INTERNAL ( ef -> id )		2106196	0					
ANR	2106225	Callee	ZIP_EF_IS_INTERNAL		2106196	0					
ANR	2106226	Identifier	ZIP_EF_IS_INTERNAL		2106196	0					
ANR	2106227	ArgumentList	ef -> id		2106196	1					
ANR	2106228	Argument	ef -> id		2106196	0					
ANR	2106229	PtrMemberAccess	ef -> id		2106196	0					
ANR	2106230	Identifier	ef		2106196	0					
ANR	2106231	Identifier	id		2106196	1					
ANR	2106232	CompoundStatement		9:40:181:181	2106196	1					
ANR	2106233	ExpressionStatement	next = ef -> next	271:12:6094:6109	2106196	0	True				
ANR	2106234	AssignmentExpression	next = ef -> next		2106196	0		=			
ANR	2106235	Identifier	next		2106196	0					
ANR	2106236	PtrMemberAccess	ef -> next		2106196	1					
ANR	2106237	Identifier	ef		2106196	0					
ANR	2106238	Identifier	next		2106196	1					
ANR	2106239	IfStatement	if ( ef_head == ef )		2106196	1					
ANR	2106240	Condition	ef_head == ef	272:16:6127:6139	2106196	0	True				
ANR	2106241	EqualityExpression	ef_head == ef		2106196	0		==			
ANR	2106242	Identifier	ef_head		2106196	0					
ANR	2106243	Identifier	ef		2106196	1					
ANR	2106244	ExpressionStatement	ef_head = next	273:16:6158:6172	2106196	1	True				
ANR	2106245	AssignmentExpression	ef_head = next		2106196	0		=			
ANR	2106246	Identifier	ef_head		2106196	0					
ANR	2106247	Identifier	next		2106196	1					
ANR	2106248	ExpressionStatement	ef -> next = NULL	274:12:6186:6201	2106196	2	True				
ANR	2106249	AssignmentExpression	ef -> next = NULL		2106196	0		=			
ANR	2106250	PtrMemberAccess	ef -> next		2106196	0					
ANR	2106251	Identifier	ef		2106196	0					
ANR	2106252	Identifier	next		2106196	1					
ANR	2106253	Identifier	NULL		2106196	1					
ANR	2106254	ExpressionStatement	_zip_ef_free ( ef )	275:12:6215:6231	2106196	3	True				
ANR	2106255	CallExpression	_zip_ef_free ( ef )		2106196	0					
ANR	2106256	Callee	_zip_ef_free		2106196	0					
ANR	2106257	Identifier	_zip_ef_free		2106196	0					
ANR	2106258	ArgumentList	ef		2106196	1					
ANR	2106259	Argument	ef		2106196	0					
ANR	2106260	Identifier	ef		2106196	0					
ANR	2106261	IfStatement	if ( prev )		2106196	4					
ANR	2106262	Condition	prev	276:16:6249:6252	2106196	0	True				
ANR	2106263	Identifier	prev		2106196	0					
ANR	2106264	ExpressionStatement	prev -> next = next	277:16:6271:6288	2106196	1	True				
ANR	2106265	AssignmentExpression	prev -> next = next		2106196	0		=			
ANR	2106266	PtrMemberAccess	prev -> next		2106196	0					
ANR	2106267	Identifier	prev		2106196	0					
ANR	2106268	Identifier	next		2106196	1					
ANR	2106269	Identifier	next		2106196	1					
ANR	2106270	ExpressionStatement	ef = next	278:12:6302:6311	2106196	5	True				
ANR	2106271	AssignmentExpression	ef = next		2106196	0		=			
ANR	2106272	Identifier	ef		2106196	0					
ANR	2106273	Identifier	next		2106196	1					
ANR	2106274	ElseStatement	else		2106196	0					
ANR	2106275	CompoundStatement		19:13:437:437	2106196	0					
ANR	2106276	ExpressionStatement	prev = ef	281:12:6350:6359	2106196	0	True				
ANR	2106277	AssignmentExpression	prev = ef		2106196	0		=			
ANR	2106278	Identifier	prev		2106196	0					
ANR	2106279	Identifier	ef		2106196	1					
ANR	2106280	ExpressionStatement	ef = ef -> next	282:12:6373:6386	2106196	1	True				
ANR	2106281	AssignmentExpression	ef = ef -> next		2106196	0		=			
ANR	2106282	Identifier	ef		2106196	0					
ANR	2106283	PtrMemberAccess	ef -> next		2106196	1					
ANR	2106284	Identifier	ef		2106196	0					
ANR	2106285	Identifier	next		2106196	1					
ANR	2106286	ReturnStatement	return ef_head ;	286:4:6413:6427	2106196	5	True				
ANR	2106287	Identifier	ef_head		2106196	0					
ANR	2106288	ReturnType	struct zip_extra_field *		2106196	1					
ANR	2106289	Identifier	_zip_ef_remove_internal		2106196	2					
ANR	2106290	ParameterList	struct zip_extra_field * ef		2106196	3					
ANR	2106291	Parameter	struct zip_extra_field * ef	261:24:5870:5895	2106196	0	True				
ANR	2106292	ParameterType	struct zip_extra_field *		2106196	0					
ANR	2106293	Identifier	ef		2106196	1					
ANR	2106294	CFGEntryNode	ENTRY		2106196		True				
ANR	2106295	CFGExitNode	EXIT		2106196		True				
ANR	2106296	Symbol	next		2106196						
ANR	2106297	Symbol	prev -> next		2106196						
ANR	2106298	Symbol	ef		2106196						
ANR	2106299	Symbol	ef_head		2106196						
ANR	2106300	Symbol	NULL		2106196						
ANR	2106301	Symbol	* ef		2106196						
ANR	2106302	Symbol	ZIP_EF_IS_INTERNAL		2106196						
ANR	2106303	Symbol	prev		2106196						
ANR	2106304	Symbol	* prev		2106196						
ANR	2106305	Symbol	ef -> next		2106196						
ANR	2106306	Symbol	ef -> id		2106196						
ANR	2106307	Function	_zip_ef_size	290:0:6433:6669							
ANR	2106308	FunctionDef	"_zip_ef_size (const struct zip_extra_field * ef , zip_flags_t flags)"		2106307	0					
ANR	2106309	CompoundStatement		292:0:6512:6669	2106307	0					
ANR	2106310	IdentifierDeclStatement	zip_uint16_t size ;	293:4:6518:6535	2106307	0	True				
ANR	2106311	IdentifierDecl	size		2106307	0					
ANR	2106312	IdentifierDeclType	zip_uint16_t		2106307	0					
ANR	2106313	Identifier	size		2106307	1					
ANR	2106314	ExpressionStatement	size = 0	295:4:6542:6550	2106307	1	True				
ANR	2106315	AssignmentExpression	size = 0		2106307	0		=			
ANR	2106316	Identifier	size		2106307	0					
ANR	2106317	PrimaryExpression	0		2106307	1					
ANR	2106318	ForStatement	for ( ; ef ; ef = ef -> next )		2106307	2					
ANR	2106319	Condition	ef	296:11:6563:6564	2106307	0	True				
ANR	2106320	Identifier	ef		2106307	0					
ANR	2106321	AssignmentExpression	ef = ef -> next	296:15:6567:6577	2106307	1	True	=			
ANR	2106322	Identifier	ef		2106307	0					
ANR	2106323	PtrMemberAccess	ef -> next		2106307	1					
ANR	2106324	Identifier	ef		2106307	0					
ANR	2106325	Identifier	next		2106307	1					
ANR	2106326	CompoundStatement		5:28:67:67	2106307	2					
ANR	2106327	IfStatement	if ( ef -> flags & flags & ZIP_EF_BOTH )		2106307	0					
ANR	2106328	Condition	ef -> flags & flags & ZIP_EF_BOTH	297:5:6587:6617	2106307	0	True				
ANR	2106329	BitAndExpression	ef -> flags & flags & ZIP_EF_BOTH		2106307	0		&			
ANR	2106330	PtrMemberAccess	ef -> flags		2106307	0					
ANR	2106331	Identifier	ef		2106307	0					
ANR	2106332	Identifier	flags		2106307	1					
ANR	2106333	BitAndExpression	flags & ZIP_EF_BOTH		2106307	1		&			
ANR	2106334	Identifier	flags		2106307	0					
ANR	2106335	Identifier	ZIP_EF_BOTH		2106307	1					
ANR	2106336	ExpressionStatement	size += 4 + ef -> size	298:5:6625:6643	2106307	1	True				
ANR	2106337	AssignmentExpression	size += 4 + ef -> size		2106307	0		+=			
ANR	2106338	Identifier	size		2106307	0					
ANR	2106339	AdditiveExpression	4 + ef -> size		2106307	1		+			
ANR	2106340	PrimaryExpression	4		2106307	0					
ANR	2106341	PtrMemberAccess	ef -> size		2106307	1					
ANR	2106342	Identifier	ef		2106307	0					
ANR	2106343	Identifier	size		2106307	1					
ANR	2106344	ReturnStatement	return size ;	301:4:6656:6667	2106307	3	True				
ANR	2106345	Identifier	size		2106307	0					
ANR	2106346	ReturnType	zip_uint16_t		2106307	1					
ANR	2106347	Identifier	_zip_ef_size		2106307	2					
ANR	2106348	ParameterList	"const struct zip_extra_field * ef , zip_flags_t flags"		2106307	3					
ANR	2106349	Parameter	const struct zip_extra_field * ef	291:13:6459:6490	2106307	0	True				
ANR	2106350	ParameterType	const struct zip_extra_field *		2106307	0					
ANR	2106351	Identifier	ef		2106307	1					
ANR	2106352	Parameter	zip_flags_t flags	291:47:6493:6509	2106307	1	True				
ANR	2106353	ParameterType	zip_flags_t		2106307	0					
ANR	2106354	Identifier	flags		2106307	1					
ANR	2106355	CFGEntryNode	ENTRY		2106307		True				
ANR	2106356	CFGExitNode	EXIT		2106307		True				
ANR	2106357	Symbol	ef -> size		2106307						
ANR	2106358	Symbol	ef		2106307						
ANR	2106359	Symbol	size		2106307						
ANR	2106360	Symbol	* ef		2106307						
ANR	2106361	Symbol	ZIP_EF_BOTH		2106307						
ANR	2106362	Symbol	flags		2106307						
ANR	2106363	Symbol	ef -> flags		2106307						
ANR	2106364	Symbol	ef -> next		2106307						
ANR	2106365	Function	_zip_ef_write	306:0:6675:6956							
ANR	2106366	FunctionDef	"_zip_ef_write (const struct zip_extra_field * ef , zip_flags_t flags , FILE * f)"		2106365	0					
ANR	2106367	CompoundStatement		308:0:6756:6956	2106365	0					
ANR	2106368	ForStatement	for ( ; ef ; ef = ef -> next )		2106365	0					
ANR	2106369	Condition	ef	309:11:6769:6770	2106365	0	True				
ANR	2106370	Identifier	ef		2106365	0					
ANR	2106371	AssignmentExpression	ef = ef -> next	309:15:6773:6783	2106365	1	True	=			
ANR	2106372	Identifier	ef		2106365	0					
ANR	2106373	PtrMemberAccess	ef -> next		2106365	1					
ANR	2106374	Identifier	ef		2106365	0					
ANR	2106375	Identifier	next		2106365	1					
ANR	2106376	CompoundStatement		2:28:29:29	2106365	2					
ANR	2106377	IfStatement	if ( ef -> flags & flags & ZIP_EF_BOTH )		2106365	0					
ANR	2106378	Condition	ef -> flags & flags & ZIP_EF_BOTH	310:5:6793:6823	2106365	0	True				
ANR	2106379	BitAndExpression	ef -> flags & flags & ZIP_EF_BOTH		2106365	0		&			
ANR	2106380	PtrMemberAccess	ef -> flags		2106365	0					
ANR	2106381	Identifier	ef		2106365	0					
ANR	2106382	Identifier	flags		2106365	1					
ANR	2106383	BitAndExpression	flags & ZIP_EF_BOTH		2106365	1		&			
ANR	2106384	Identifier	flags		2106365	0					
ANR	2106385	Identifier	ZIP_EF_BOTH		2106365	1					
ANR	2106386	CompoundStatement		3:38:69:69	2106365	1					
ANR	2106387	ExpressionStatement	"_zip_write2 ( ef -> id , f )"	311:5:6833:6855	2106365	0	True				
ANR	2106388	CallExpression	"_zip_write2 ( ef -> id , f )"		2106365	0					
ANR	2106389	Callee	_zip_write2		2106365	0					
ANR	2106390	Identifier	_zip_write2		2106365	0					
ANR	2106391	ArgumentList	ef -> id		2106365	1					
ANR	2106392	Argument	ef -> id		2106365	0					
ANR	2106393	PtrMemberAccess	ef -> id		2106365	0					
ANR	2106394	Identifier	ef		2106365	0					
ANR	2106395	Identifier	id		2106365	1					
ANR	2106396	Argument	f		2106365	1					
ANR	2106397	Identifier	f		2106365	0					
ANR	2106398	ExpressionStatement	"_zip_write2 ( ef -> size , f )"	312:5:6862:6886	2106365	1	True				
ANR	2106399	CallExpression	"_zip_write2 ( ef -> size , f )"		2106365	0					
ANR	2106400	Callee	_zip_write2		2106365	0					
ANR	2106401	Identifier	_zip_write2		2106365	0					
ANR	2106402	ArgumentList	ef -> size		2106365	1					
ANR	2106403	Argument	ef -> size		2106365	0					
ANR	2106404	PtrMemberAccess	ef -> size		2106365	0					
ANR	2106405	Identifier	ef		2106365	0					
ANR	2106406	Identifier	size		2106365	1					
ANR	2106407	Argument	f		2106365	1					
ANR	2106408	Identifier	f		2106365	0					
ANR	2106409	IfStatement	if ( ef -> size > 0 )		2106365	2					
ANR	2106410	Condition	ef -> size > 0	313:9:6897:6908	2106365	0	True				
ANR	2106411	RelationalExpression	ef -> size > 0		2106365	0		>			
ANR	2106412	PtrMemberAccess	ef -> size		2106365	0					
ANR	2106413	Identifier	ef		2106365	0					
ANR	2106414	Identifier	size		2106365	1					
ANR	2106415	PrimaryExpression	0		2106365	1					
ANR	2106416	ExpressionStatement	"fwrite ( ef -> data , ef -> size , 1 , f )"	314:2:6913:6945	2106365	1	True				
ANR	2106417	CallExpression	"fwrite ( ef -> data , ef -> size , 1 , f )"		2106365	0					
ANR	2106418	Callee	fwrite		2106365	0					
ANR	2106419	Identifier	fwrite		2106365	0					
ANR	2106420	ArgumentList	ef -> data		2106365	1					
ANR	2106421	Argument	ef -> data		2106365	0					
ANR	2106422	PtrMemberAccess	ef -> data		2106365	0					
ANR	2106423	Identifier	ef		2106365	0					
ANR	2106424	Identifier	data		2106365	1					
ANR	2106425	Argument	ef -> size		2106365	1					
ANR	2106426	PtrMemberAccess	ef -> size		2106365	0					
ANR	2106427	Identifier	ef		2106365	0					
ANR	2106428	Identifier	size		2106365	1					
ANR	2106429	Argument	1		2106365	2					
ANR	2106430	PrimaryExpression	1		2106365	0					
ANR	2106431	Argument	f		2106365	3					
ANR	2106432	Identifier	f		2106365	0					
ANR	2106433	ReturnType	void		2106365	1					
ANR	2106434	Identifier	_zip_ef_write		2106365	2					
ANR	2106435	ParameterList	"const struct zip_extra_field * ef , zip_flags_t flags , FILE * f"		2106365	3					
ANR	2106436	Parameter	const struct zip_extra_field * ef	307:14:6694:6725	2106365	0	True				
ANR	2106437	ParameterType	const struct zip_extra_field *		2106365	0					
ANR	2106438	Identifier	ef		2106365	1					
ANR	2106439	Parameter	zip_flags_t flags	307:48:6728:6744	2106365	1	True				
ANR	2106440	ParameterType	zip_flags_t		2106365	0					
ANR	2106441	Identifier	flags		2106365	1					
ANR	2106442	Parameter	FILE * f	307:67:6747:6753	2106365	2	True				
ANR	2106443	ParameterType	FILE *		2106365	0					
ANR	2106444	Identifier	f		2106365	1					
ANR	2106445	CFGEntryNode	ENTRY		2106365		True				
ANR	2106446	CFGExitNode	EXIT		2106365		True				
ANR	2106447	Symbol	ef -> size		2106365						
ANR	2106448	Symbol	ef -> data		2106365						
ANR	2106449	Symbol	ef		2106365						
ANR	2106450	Symbol	* ef		2106365						
ANR	2106451	Symbol	ZIP_EF_BOTH		2106365						
ANR	2106452	Symbol	f		2106365						
ANR	2106453	Symbol	flags		2106365						
ANR	2106454	Symbol	ef -> flags		2106365						
ANR	2106455	Symbol	ef -> next		2106365						
ANR	2106456	Symbol	ef -> id		2106365						
ANR	2106457	Function	_zip_read_local_ef	321:0:6962:8425							
ANR	2106458	FunctionDef	"_zip_read_local_ef (struct zip * za , zip_uint64_t idx)"		2106457	0					
ANR	2106459	CompoundStatement		323:0:7019:8425	2106457	0					
ANR	2106460	IdentifierDeclStatement	struct zip_entry * e ;	324:4:7025:7044	2106457	0	True				
ANR	2106461	IdentifierDecl	* e		2106457	0					
ANR	2106462	IdentifierDeclType	struct zip_entry *		2106457	0					
ANR	2106463	Identifier	e		2106457	1					
ANR	2106464	IdentifierDeclStatement	unsigned char b [ 4 ] ;	325:4:7050:7068	2106457	1	True				
ANR	2106465	IdentifierDecl	b [ 4 ]		2106457	0					
ANR	2106466	IdentifierDeclType	unsigned char [ 4 ]		2106457	0					
ANR	2106467	Identifier	b		2106457	1					
ANR	2106468	PrimaryExpression	4		2106457	2					
ANR	2106469	IdentifierDeclStatement	const unsigned char * p ;	326:4:7074:7096	2106457	2	True				
ANR	2106470	IdentifierDecl	* p		2106457	0					
ANR	2106471	IdentifierDeclType	const unsigned char *		2106457	0					
ANR	2106472	Identifier	p		2106457	1					
ANR	2106473	IdentifierDeclStatement	"zip_uint16_t fname_len , ef_len ;"	327:4:7102:7132	2106457	3	True				
ANR	2106474	IdentifierDecl	fname_len		2106457	0					
ANR	2106475	IdentifierDeclType	zip_uint16_t		2106457	0					
ANR	2106476	Identifier	fname_len		2106457	1					
ANR	2106477	IdentifierDecl	ef_len		2106457	1					
ANR	2106478	IdentifierDeclType	zip_uint16_t		2106457	0					
ANR	2106479	Identifier	ef_len		2106457	1					
ANR	2106480	IfStatement	if ( idx >= za -> nentry )		2106457	4					
ANR	2106481	Condition	idx >= za -> nentry	329:8:7143:7159	2106457	0	True				
ANR	2106482	RelationalExpression	idx >= za -> nentry		2106457	0		>=			
ANR	2106483	Identifier	idx		2106457	0					
ANR	2106484	PtrMemberAccess	za -> nentry		2106457	1					
ANR	2106485	Identifier	za		2106457	0					
ANR	2106486	Identifier	nentry		2106457	1					
ANR	2106487	CompoundStatement		7:27:142:142	2106457	1					
ANR	2106488	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_INVAL , 0 )"	330:1:7165:7208	2106457	0	True				
ANR	2106489	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_INVAL , 0 )"		2106457	0					
ANR	2106490	Callee	_zip_error_set		2106457	0					
ANR	2106491	Identifier	_zip_error_set		2106457	0					
ANR	2106492	ArgumentList	& za -> error		2106457	1					
ANR	2106493	Argument	& za -> error		2106457	0					
ANR	2106494	UnaryOperationExpression	& za -> error		2106457	0					
ANR	2106495	UnaryOperator	&		2106457	0					
ANR	2106496	PtrMemberAccess	za -> error		2106457	1					
ANR	2106497	Identifier	za		2106457	0					
ANR	2106498	Identifier	error		2106457	1					
ANR	2106499	Argument	ZIP_ER_INVAL		2106457	1					
ANR	2106500	Identifier	ZIP_ER_INVAL		2106457	0					
ANR	2106501	Argument	0		2106457	2					
ANR	2106502	PrimaryExpression	0		2106457	0					
ANR	2106503	ReturnStatement	return - 1 ;	331:1:7211:7220	2106457	1	True				
ANR	2106504	UnaryOperationExpression	- 1		2106457	0					
ANR	2106505	UnaryOperator	-		2106457	0					
ANR	2106506	PrimaryExpression	1		2106457	1					
ANR	2106507	ExpressionStatement	e = za -> entry + idx	334:4:7233:7250	2106457	5	True				
ANR	2106508	AssignmentExpression	e = za -> entry + idx		2106457	0		=			
ANR	2106509	Identifier	e		2106457	0					
ANR	2106510	AdditiveExpression	za -> entry + idx		2106457	1		+			
ANR	2106511	PtrMemberAccess	za -> entry		2106457	0					
ANR	2106512	Identifier	za		2106457	0					
ANR	2106513	Identifier	entry		2106457	1					
ANR	2106514	Identifier	idx		2106457	1					
ANR	2106515	IfStatement	if ( e -> orig == NULL || e -> orig -> local_extra_fields_read )		2106457	6					
ANR	2106516	Condition	e -> orig == NULL || e -> orig -> local_extra_fields_read	336:8:7261:7311	2106457	0	True				
ANR	2106517	OrExpression	e -> orig == NULL || e -> orig -> local_extra_fields_read		2106457	0		||			
ANR	2106518	EqualityExpression	e -> orig == NULL		2106457	0		==			
ANR	2106519	PtrMemberAccess	e -> orig		2106457	0					
ANR	2106520	Identifier	e		2106457	0					
ANR	2106521	Identifier	orig		2106457	1					
ANR	2106522	Identifier	NULL		2106457	1					
ANR	2106523	PtrMemberAccess	e -> orig -> local_extra_fields_read		2106457	1					
ANR	2106524	PtrMemberAccess	e -> orig		2106457	0					
ANR	2106525	Identifier	e		2106457	0					
ANR	2106526	Identifier	orig		2106457	1					
ANR	2106527	Identifier	local_extra_fields_read		2106457	1					
ANR	2106528	ReturnStatement	return 0 ;	337:1:7315:7323	2106457	1	True				
ANR	2106529	PrimaryExpression	0		2106457	0					
ANR	2106530	IfStatement	"if ( fseeko ( za -> zp , ( off_t ) ( e -> orig -> offset + 26 ) , SEEK_SET ) < 0 )"		2106457	7					
ANR	2106531	Condition	"fseeko ( za -> zp , ( off_t ) ( e -> orig -> offset + 26 ) , SEEK_SET ) < 0"	340:8:7335:7393	2106457	0	True				
ANR	2106532	RelationalExpression	"fseeko ( za -> zp , ( off_t ) ( e -> orig -> offset + 26 ) , SEEK_SET ) < 0"		2106457	0		<			
ANR	2106533	CallExpression	"fseeko ( za -> zp , ( off_t ) ( e -> orig -> offset + 26 ) , SEEK_SET )"		2106457	0					
ANR	2106534	Callee	fseeko		2106457	0					
ANR	2106535	Identifier	fseeko		2106457	0					
ANR	2106536	ArgumentList	za -> zp		2106457	1					
ANR	2106537	Argument	za -> zp		2106457	0					
ANR	2106538	PtrMemberAccess	za -> zp		2106457	0					
ANR	2106539	Identifier	za		2106457	0					
ANR	2106540	Identifier	zp		2106457	1					
ANR	2106541	Argument	( off_t ) ( e -> orig -> offset + 26 )		2106457	1					
ANR	2106542	CastExpression	( off_t ) ( e -> orig -> offset + 26 )		2106457	0					
ANR	2106543	CastTarget	off_t		2106457	0					
ANR	2106544	AdditiveExpression	e -> orig -> offset + 26		2106457	1		+			
ANR	2106545	PtrMemberAccess	e -> orig -> offset		2106457	0					
ANR	2106546	PtrMemberAccess	e -> orig		2106457	0					
ANR	2106547	Identifier	e		2106457	0					
ANR	2106548	Identifier	orig		2106457	1					
ANR	2106549	Identifier	offset		2106457	1					
ANR	2106550	PrimaryExpression	26		2106457	1					
ANR	2106551	Argument	SEEK_SET		2106457	2					
ANR	2106552	Identifier	SEEK_SET		2106457	0					
ANR	2106553	PrimaryExpression	0		2106457	1					
ANR	2106554	CompoundStatement		18:69:376:376	2106457	1					
ANR	2106555	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"	341:1:7399:7445	2106457	0	True				
ANR	2106556	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"		2106457	0					
ANR	2106557	Callee	_zip_error_set		2106457	0					
ANR	2106558	Identifier	_zip_error_set		2106457	0					
ANR	2106559	ArgumentList	& za -> error		2106457	1					
ANR	2106560	Argument	& za -> error		2106457	0					
ANR	2106561	UnaryOperationExpression	& za -> error		2106457	0					
ANR	2106562	UnaryOperator	&		2106457	0					
ANR	2106563	PtrMemberAccess	za -> error		2106457	1					
ANR	2106564	Identifier	za		2106457	0					
ANR	2106565	Identifier	error		2106457	1					
ANR	2106566	Argument	ZIP_ER_SEEK		2106457	1					
ANR	2106567	Identifier	ZIP_ER_SEEK		2106457	0					
ANR	2106568	Argument	errno		2106457	2					
ANR	2106569	Identifier	errno		2106457	0					
ANR	2106570	ReturnStatement	return - 1 ;	342:1:7448:7457	2106457	1	True				
ANR	2106571	UnaryOperationExpression	- 1		2106457	0					
ANR	2106572	UnaryOperator	-		2106457	0					
ANR	2106573	PrimaryExpression	1		2106457	1					
ANR	2106574	IfStatement	"if ( fread ( b , sizeof ( b ) , 1 , za -> zp ) != 1 )"		2106457	8					
ANR	2106575	Condition	"fread ( b , sizeof ( b ) , 1 , za -> zp ) != 1"	345:8:7474:7508	2106457	0	True				
ANR	2106576	EqualityExpression	"fread ( b , sizeof ( b ) , 1 , za -> zp ) != 1"		2106457	0		!=			
ANR	2106577	CallExpression	"fread ( b , sizeof ( b ) , 1 , za -> zp )"		2106457	0					
ANR	2106578	Callee	fread		2106457	0					
ANR	2106579	Identifier	fread		2106457	0					
ANR	2106580	ArgumentList	b		2106457	1					
ANR	2106581	Argument	b		2106457	0					
ANR	2106582	Identifier	b		2106457	0					
ANR	2106583	Argument	sizeof ( b )		2106457	1					
ANR	2106584	SizeofExpression	sizeof ( b )		2106457	0					
ANR	2106585	Sizeof	sizeof		2106457	0					
ANR	2106586	SizeofOperand	b		2106457	1					
ANR	2106587	Argument	1		2106457	2					
ANR	2106588	PrimaryExpression	1		2106457	0					
ANR	2106589	Argument	za -> zp		2106457	3					
ANR	2106590	PtrMemberAccess	za -> zp		2106457	0					
ANR	2106591	Identifier	za		2106457	0					
ANR	2106592	Identifier	zp		2106457	1					
ANR	2106593	PrimaryExpression	1		2106457	1					
ANR	2106594	CompoundStatement		23:45:491:491	2106457	1					
ANR	2106595	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_READ , errno )"	346:1:7514:7560	2106457	0	True				
ANR	2106596	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_READ , errno )"		2106457	0					
ANR	2106597	Callee	_zip_error_set		2106457	0					
ANR	2106598	Identifier	_zip_error_set		2106457	0					
ANR	2106599	ArgumentList	& za -> error		2106457	1					
ANR	2106600	Argument	& za -> error		2106457	0					
ANR	2106601	UnaryOperationExpression	& za -> error		2106457	0					
ANR	2106602	UnaryOperator	&		2106457	0					
ANR	2106603	PtrMemberAccess	za -> error		2106457	1					
ANR	2106604	Identifier	za		2106457	0					
ANR	2106605	Identifier	error		2106457	1					
ANR	2106606	Argument	ZIP_ER_READ		2106457	1					
ANR	2106607	Identifier	ZIP_ER_READ		2106457	0					
ANR	2106608	Argument	errno		2106457	2					
ANR	2106609	Identifier	errno		2106457	0					
ANR	2106610	ReturnStatement	return - 1 ;	347:1:7563:7572	2106457	1	True				
ANR	2106611	UnaryOperationExpression	- 1		2106457	0					
ANR	2106612	UnaryOperator	-		2106457	0					
ANR	2106613	PrimaryExpression	1		2106457	1					
ANR	2106614	ExpressionStatement	p = b	350:4:7585:7590	2106457	9	True				
ANR	2106615	AssignmentExpression	p = b		2106457	0		=			
ANR	2106616	Identifier	p		2106457	0					
ANR	2106617	Identifier	b		2106457	1					
ANR	2106618	ExpressionStatement	fname_len = _zip_read2 ( & p )	351:4:7596:7622	2106457	10	True				
ANR	2106619	AssignmentExpression	fname_len = _zip_read2 ( & p )		2106457	0		=			
ANR	2106620	Identifier	fname_len		2106457	0					
ANR	2106621	CallExpression	_zip_read2 ( & p )		2106457	1					
ANR	2106622	Callee	_zip_read2		2106457	0					
ANR	2106623	Identifier	_zip_read2		2106457	0					
ANR	2106624	ArgumentList	& p		2106457	1					
ANR	2106625	Argument	& p		2106457	0					
ANR	2106626	UnaryOperationExpression	& p		2106457	0					
ANR	2106627	UnaryOperator	&		2106457	0					
ANR	2106628	Identifier	p		2106457	1					
ANR	2106629	ExpressionStatement	ef_len = _zip_read2 ( & p )	352:4:7628:7651	2106457	11	True				
ANR	2106630	AssignmentExpression	ef_len = _zip_read2 ( & p )		2106457	0		=			
ANR	2106631	Identifier	ef_len		2106457	0					
ANR	2106632	CallExpression	_zip_read2 ( & p )		2106457	1					
ANR	2106633	Callee	_zip_read2		2106457	0					
ANR	2106634	Identifier	_zip_read2		2106457	0					
ANR	2106635	ArgumentList	& p		2106457	1					
ANR	2106636	Argument	& p		2106457	0					
ANR	2106637	UnaryOperationExpression	& p		2106457	0					
ANR	2106638	UnaryOperator	&		2106457	0					
ANR	2106639	Identifier	p		2106457	1					
ANR	2106640	IfStatement	if ( ef_len > 0 )		2106457	12					
ANR	2106641	Condition	ef_len > 0	354:8:7662:7671	2106457	0	True				
ANR	2106642	RelationalExpression	ef_len > 0		2106457	0		>			
ANR	2106643	Identifier	ef_len		2106457	0					
ANR	2106644	PrimaryExpression	0		2106457	1					
ANR	2106645	CompoundStatement		34:1:686:705	2106457	1					
ANR	2106646	IdentifierDeclStatement	struct zip_extra_field * ef ;	355:1:7677:7703	2106457	0	True				
ANR	2106647	IdentifierDecl	* ef		2106457	0					
ANR	2106648	IdentifierDeclType	struct zip_extra_field *		2106457	0					
ANR	2106649	Identifier	ef		2106457	1					
ANR	2106650	IdentifierDeclStatement	zip_uint8_t * ef_raw ;	356:1:7706:7725	2106457	1	True				
ANR	2106651	IdentifierDecl	* ef_raw		2106457	0					
ANR	2106652	IdentifierDeclType	zip_uint8_t *		2106457	0					
ANR	2106653	Identifier	ef_raw		2106457	1					
ANR	2106654	IfStatement	"if ( fseek ( za -> zp , fname_len , SEEK_CUR ) < 0 )"		2106457	2					
ANR	2106655	Condition	"fseek ( za -> zp , fname_len , SEEK_CUR ) < 0"	358:5:7733:7770	2106457	0	True				
ANR	2106656	RelationalExpression	"fseek ( za -> zp , fname_len , SEEK_CUR ) < 0"		2106457	0		<			
ANR	2106657	CallExpression	"fseek ( za -> zp , fname_len , SEEK_CUR )"		2106457	0					
ANR	2106658	Callee	fseek		2106457	0					
ANR	2106659	Identifier	fseek		2106457	0					
ANR	2106660	ArgumentList	za -> zp		2106457	1					
ANR	2106661	Argument	za -> zp		2106457	0					
ANR	2106662	PtrMemberAccess	za -> zp		2106457	0					
ANR	2106663	Identifier	za		2106457	0					
ANR	2106664	Identifier	zp		2106457	1					
ANR	2106665	Argument	fname_len		2106457	1					
ANR	2106666	Identifier	fname_len		2106457	0					
ANR	2106667	Argument	SEEK_CUR		2106457	2					
ANR	2106668	Identifier	SEEK_CUR		2106457	0					
ANR	2106669	PrimaryExpression	0		2106457	1					
ANR	2106670	CompoundStatement		36:45:753:753	2106457	1					
ANR	2106671	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"	359:5:7780:7826	2106457	0	True				
ANR	2106672	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"		2106457	0					
ANR	2106673	Callee	_zip_error_set		2106457	0					
ANR	2106674	Identifier	_zip_error_set		2106457	0					
ANR	2106675	ArgumentList	& za -> error		2106457	1					
ANR	2106676	Argument	& za -> error		2106457	0					
ANR	2106677	UnaryOperationExpression	& za -> error		2106457	0					
ANR	2106678	UnaryOperator	&		2106457	0					
ANR	2106679	PtrMemberAccess	za -> error		2106457	1					
ANR	2106680	Identifier	za		2106457	0					
ANR	2106681	Identifier	error		2106457	1					
ANR	2106682	Argument	ZIP_ER_SEEK		2106457	1					
ANR	2106683	Identifier	ZIP_ER_SEEK		2106457	0					
ANR	2106684	Argument	errno		2106457	2					
ANR	2106685	Identifier	errno		2106457	0					
ANR	2106686	ReturnStatement	return - 1 ;	360:5:7833:7842	2106457	1	True				
ANR	2106687	UnaryOperationExpression	- 1		2106457	0					
ANR	2106688	UnaryOperator	-		2106457	0					
ANR	2106689	PrimaryExpression	1		2106457	1					
ANR	2106690	ExpressionStatement	"ef_raw = _zip_read_data ( NULL , za -> zp , ef_len , 0 , & za -> error )"	363:1:7849:7909	2106457	3	True				
ANR	2106691	AssignmentExpression	"ef_raw = _zip_read_data ( NULL , za -> zp , ef_len , 0 , & za -> error )"		2106457	0		=			
ANR	2106692	Identifier	ef_raw		2106457	0					
ANR	2106693	CallExpression	"_zip_read_data ( NULL , za -> zp , ef_len , 0 , & za -> error )"		2106457	1					
ANR	2106694	Callee	_zip_read_data		2106457	0					
ANR	2106695	Identifier	_zip_read_data		2106457	0					
ANR	2106696	ArgumentList	NULL		2106457	1					
ANR	2106697	Argument	NULL		2106457	0					
ANR	2106698	Identifier	NULL		2106457	0					
ANR	2106699	Argument	za -> zp		2106457	1					
ANR	2106700	PtrMemberAccess	za -> zp		2106457	0					
ANR	2106701	Identifier	za		2106457	0					
ANR	2106702	Identifier	zp		2106457	1					
ANR	2106703	Argument	ef_len		2106457	2					
ANR	2106704	Identifier	ef_len		2106457	0					
ANR	2106705	Argument	0		2106457	3					
ANR	2106706	PrimaryExpression	0		2106457	0					
ANR	2106707	Argument	& za -> error		2106457	4					
ANR	2106708	UnaryOperationExpression	& za -> error		2106457	0					
ANR	2106709	UnaryOperator	&		2106457	0					
ANR	2106710	PtrMemberAccess	za -> error		2106457	1					
ANR	2106711	Identifier	za		2106457	0					
ANR	2106712	Identifier	error		2106457	1					
ANR	2106713	IfStatement	if ( ef_raw == NULL )		2106457	4					
ANR	2106714	Condition	ef_raw == NULL	365:5:7917:7930	2106457	0	True				
ANR	2106715	EqualityExpression	ef_raw == NULL		2106457	0		==			
ANR	2106716	Identifier	ef_raw		2106457	0					
ANR	2106717	Identifier	NULL		2106457	1					
ANR	2106718	ReturnStatement	return - 1 ;	366:5:7938:7947	2106457	1	True				
ANR	2106719	UnaryOperationExpression	- 1		2106457	0					
ANR	2106720	UnaryOperator	-		2106457	0					
ANR	2106721	PrimaryExpression	1		2106457	1					
ANR	2106722	IfStatement	"if ( ( ef = _zip_ef_parse ( ef_raw , ef_len , ZIP_EF_LOCAL , & za -> error ) ) == NULL )"		2106457	5					
ANR	2106723	Condition	"( ef = _zip_ef_parse ( ef_raw , ef_len , ZIP_EF_LOCAL , & za -> error ) ) == NULL"	368:5:7955:8022	2106457	0	True				
ANR	2106724	EqualityExpression	"( ef = _zip_ef_parse ( ef_raw , ef_len , ZIP_EF_LOCAL , & za -> error ) ) == NULL"		2106457	0		==			
ANR	2106725	AssignmentExpression	"ef = _zip_ef_parse ( ef_raw , ef_len , ZIP_EF_LOCAL , & za -> error )"		2106457	0		=			
ANR	2106726	Identifier	ef		2106457	0					
ANR	2106727	CallExpression	"_zip_ef_parse ( ef_raw , ef_len , ZIP_EF_LOCAL , & za -> error )"		2106457	1					
ANR	2106728	Callee	_zip_ef_parse		2106457	0					
ANR	2106729	Identifier	_zip_ef_parse		2106457	0					
ANR	2106730	ArgumentList	ef_raw		2106457	1					
ANR	2106731	Argument	ef_raw		2106457	0					
ANR	2106732	Identifier	ef_raw		2106457	0					
ANR	2106733	Argument	ef_len		2106457	1					
ANR	2106734	Identifier	ef_len		2106457	0					
ANR	2106735	Argument	ZIP_EF_LOCAL		2106457	2					
ANR	2106736	Identifier	ZIP_EF_LOCAL		2106457	0					
ANR	2106737	Argument	& za -> error		2106457	3					
ANR	2106738	UnaryOperationExpression	& za -> error		2106457	0					
ANR	2106739	UnaryOperator	&		2106457	0					
ANR	2106740	PtrMemberAccess	za -> error		2106457	1					
ANR	2106741	Identifier	za		2106457	0					
ANR	2106742	Identifier	error		2106457	1					
ANR	2106743	Identifier	NULL		2106457	1					
ANR	2106744	CompoundStatement		46:75:1005:1005	2106457	1					
ANR	2106745	ExpressionStatement	free ( ef_raw )	369:5:8032:8044	2106457	0	True				
ANR	2106746	CallExpression	free ( ef_raw )		2106457	0					
ANR	2106747	Callee	free		2106457	0					
ANR	2106748	Identifier	free		2106457	0					
ANR	2106749	ArgumentList	ef_raw		2106457	1					
ANR	2106750	Argument	ef_raw		2106457	0					
ANR	2106751	Identifier	ef_raw		2106457	0					
ANR	2106752	ReturnStatement	return - 1 ;	370:5:8051:8060	2106457	1	True				
ANR	2106753	UnaryOperationExpression	- 1		2106457	0					
ANR	2106754	UnaryOperator	-		2106457	0					
ANR	2106755	PrimaryExpression	1		2106457	1					
ANR	2106756	ExpressionStatement	free ( ef_raw )	372:1:8066:8078	2106457	6	True				
ANR	2106757	CallExpression	free ( ef_raw )		2106457	0					
ANR	2106758	Callee	free		2106457	0					
ANR	2106759	Identifier	free		2106457	0					
ANR	2106760	ArgumentList	ef_raw		2106457	1					
ANR	2106761	Argument	ef_raw		2106457	0					
ANR	2106762	Identifier	ef_raw		2106457	0					
ANR	2106763	ExpressionStatement	ef = _zip_ef_remove_internal ( ef )	374:8:8090:8122	2106457	7	True				
ANR	2106764	AssignmentExpression	ef = _zip_ef_remove_internal ( ef )		2106457	0		=			
ANR	2106765	Identifier	ef		2106457	0					
ANR	2106766	CallExpression	_zip_ef_remove_internal ( ef )		2106457	1					
ANR	2106767	Callee	_zip_ef_remove_internal		2106457	0					
ANR	2106768	Identifier	_zip_ef_remove_internal		2106457	0					
ANR	2106769	ArgumentList	ef		2106457	1					
ANR	2106770	Argument	ef		2106457	0					
ANR	2106771	Identifier	ef		2106457	0					
ANR	2106772	ExpressionStatement	"e -> orig -> extra_fields = _zip_ef_merge ( e -> orig -> extra_fields , ef )"	375:1:8125:8189	2106457	8	True				
ANR	2106773	AssignmentExpression	"e -> orig -> extra_fields = _zip_ef_merge ( e -> orig -> extra_fields , ef )"		2106457	0		=			
ANR	2106774	PtrMemberAccess	e -> orig -> extra_fields		2106457	0					
ANR	2106775	PtrMemberAccess	e -> orig		2106457	0					
ANR	2106776	Identifier	e		2106457	0					
ANR	2106777	Identifier	orig		2106457	1					
ANR	2106778	Identifier	extra_fields		2106457	1					
ANR	2106779	CallExpression	"_zip_ef_merge ( e -> orig -> extra_fields , ef )"		2106457	1					
ANR	2106780	Callee	_zip_ef_merge		2106457	0					
ANR	2106781	Identifier	_zip_ef_merge		2106457	0					
ANR	2106782	ArgumentList	e -> orig -> extra_fields		2106457	1					
ANR	2106783	Argument	e -> orig -> extra_fields		2106457	0					
ANR	2106784	PtrMemberAccess	e -> orig -> extra_fields		2106457	0					
ANR	2106785	PtrMemberAccess	e -> orig		2106457	0					
ANR	2106786	Identifier	e		2106457	0					
ANR	2106787	Identifier	orig		2106457	1					
ANR	2106788	Identifier	extra_fields		2106457	1					
ANR	2106789	Argument	ef		2106457	1					
ANR	2106790	Identifier	ef		2106457	0					
ANR	2106791	ExpressionStatement	e -> orig -> local_extra_fields_read = 1	378:4:8202:8238	2106457	13	True				
ANR	2106792	AssignmentExpression	e -> orig -> local_extra_fields_read = 1		2106457	0		=			
ANR	2106793	PtrMemberAccess	e -> orig -> local_extra_fields_read		2106457	0					
ANR	2106794	PtrMemberAccess	e -> orig		2106457	0					
ANR	2106795	Identifier	e		2106457	0					
ANR	2106796	Identifier	orig		2106457	1					
ANR	2106797	Identifier	local_extra_fields_read		2106457	1					
ANR	2106798	PrimaryExpression	1		2106457	1					
ANR	2106799	IfStatement	if ( e -> changes && e -> changes -> local_extra_fields_read == 0 )		2106457	14					
ANR	2106800	Condition	e -> changes && e -> changes -> local_extra_fields_read == 0	380:8:8253:8306	2106457	0	True				
ANR	2106801	AndExpression	e -> changes && e -> changes -> local_extra_fields_read == 0		2106457	0		&&			
ANR	2106802	PtrMemberAccess	e -> changes		2106457	0					
ANR	2106803	Identifier	e		2106457	0					
ANR	2106804	Identifier	changes		2106457	1					
ANR	2106805	EqualityExpression	e -> changes -> local_extra_fields_read == 0		2106457	1		==			
ANR	2106806	PtrMemberAccess	e -> changes -> local_extra_fields_read		2106457	0					
ANR	2106807	PtrMemberAccess	e -> changes		2106457	0					
ANR	2106808	Identifier	e		2106457	0					
ANR	2106809	Identifier	changes		2106457	1					
ANR	2106810	Identifier	local_extra_fields_read		2106457	1					
ANR	2106811	PrimaryExpression	0		2106457	1					
ANR	2106812	CompoundStatement		58:64:1289:1289	2106457	1					
ANR	2106813	ExpressionStatement	e -> changes -> extra_fields = e -> orig -> extra_fields	381:1:8312:8360	2106457	0	True				
ANR	2106814	AssignmentExpression	e -> changes -> extra_fields = e -> orig -> extra_fields		2106457	0		=			
ANR	2106815	PtrMemberAccess	e -> changes -> extra_fields		2106457	0					
ANR	2106816	PtrMemberAccess	e -> changes		2106457	0					
ANR	2106817	Identifier	e		2106457	0					
ANR	2106818	Identifier	changes		2106457	1					
ANR	2106819	Identifier	extra_fields		2106457	1					
ANR	2106820	PtrMemberAccess	e -> orig -> extra_fields		2106457	1					
ANR	2106821	PtrMemberAccess	e -> orig		2106457	0					
ANR	2106822	Identifier	e		2106457	0					
ANR	2106823	Identifier	orig		2106457	1					
ANR	2106824	Identifier	extra_fields		2106457	1					
ANR	2106825	ExpressionStatement	e -> changes -> local_extra_fields_read = 1	382:1:8363:8402	2106457	1	True				
ANR	2106826	AssignmentExpression	e -> changes -> local_extra_fields_read = 1		2106457	0		=			
ANR	2106827	PtrMemberAccess	e -> changes -> local_extra_fields_read		2106457	0					
ANR	2106828	PtrMemberAccess	e -> changes		2106457	0					
ANR	2106829	Identifier	e		2106457	0					
ANR	2106830	Identifier	changes		2106457	1					
ANR	2106831	Identifier	local_extra_fields_read		2106457	1					
ANR	2106832	PrimaryExpression	1		2106457	1					
ANR	2106833	ReturnStatement	return 0 ;	385:4:8415:8423	2106457	15	True				
ANR	2106834	PrimaryExpression	0		2106457	0					
ANR	2106835	ReturnType	int		2106457	1					
ANR	2106836	Identifier	_zip_read_local_ef		2106457	2					
ANR	2106837	ParameterList	"struct zip * za , zip_uint64_t idx"		2106457	3					
ANR	2106838	Parameter	struct zip * za	322:19:6985:6998	2106457	0	True				
ANR	2106839	ParameterType	struct zip *		2106457	0					
ANR	2106840	Identifier	za		2106457	1					
ANR	2106841	Parameter	zip_uint64_t idx	322:35:7001:7016	2106457	1	True				
ANR	2106842	ParameterType	zip_uint64_t		2106457	0					
ANR	2106843	Identifier	idx		2106457	1					
ANR	2106844	CFGEntryNode	ENTRY		2106457		True				
ANR	2106845	CFGExitNode	EXIT		2106457		True				
ANR	2106846	Symbol	fseeko		2106457						
ANR	2106847	Symbol	SEEK_CUR		2106457						
ANR	2106848	Symbol	& za -> error		2106457						
ANR	2106849	Symbol	za -> entry		2106457						
ANR	2106850	Symbol	* e -> orig		2106457						
ANR	2106851	Symbol	ZIP_ER_READ		2106457						
ANR	2106852	Symbol	fseek		2106457						
ANR	2106853	Symbol	* za		2106457						
ANR	2106854	Symbol	ZIP_ER_INVAL		2106457						
ANR	2106855	Symbol	_zip_read_data		2106457						
ANR	2106856	Symbol	ef_len		2106457						
ANR	2106857	Symbol	za -> nentry		2106457						
ANR	2106858	Symbol	SEEK_SET		2106457						
ANR	2106859	Symbol	ef		2106457						
ANR	2106860	Symbol	b		2106457						
ANR	2106861	Symbol	errno		2106457						
ANR	2106862	Symbol	NULL		2106457						
ANR	2106863	Symbol	_zip_ef_remove_internal		2106457						
ANR	2106864	Symbol	e -> orig -> offset		2106457						
ANR	2106865	Symbol	e		2106457						
ANR	2106866	Symbol	* * e		2106457						
ANR	2106867	Symbol	e -> orig -> extra_fields		2106457						
ANR	2106868	Symbol	e -> changes -> local_extra_fields_read		2106457						
ANR	2106869	Symbol	za		2106457						
ANR	2106870	Symbol	ef_raw		2106457						
ANR	2106871	Symbol	ZIP_ER_SEEK		2106457						
ANR	2106872	Symbol	e -> orig -> local_extra_fields_read		2106457						
ANR	2106873	Symbol	_zip_ef_merge		2106457						
ANR	2106874	Symbol	fread		2106457						
ANR	2106875	Symbol	* e		2106457						
ANR	2106876	Symbol	p		2106457						
ANR	2106877	Symbol	za -> zp		2106457						
ANR	2106878	Symbol	_zip_ef_parse		2106457						
ANR	2106879	Symbol	ZIP_EF_LOCAL		2106457						
ANR	2106880	Symbol	e -> changes -> extra_fields		2106457						
ANR	2106881	Symbol	e -> orig		2106457						
ANR	2106882	Symbol	& p		2106457						
ANR	2106883	Symbol	e -> changes		2106457						
ANR	2106884	Symbol	* e -> changes		2106457						
ANR	2106885	Symbol	fname_len		2106457						
ANR	2106886	Symbol	_zip_read2		2106457						
ANR	2106887	Symbol	idx		2106457						
