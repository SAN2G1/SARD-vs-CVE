command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	89429	File	data/converged/CVE-2017-11142_php-src/Zend_zend_llist.c								
ANR	89430	Function	zend_llist_init	26:0:1303:1529							
ANR	89431	FunctionDef	"zend_llist_init (zend_llist * l , size_t size , llist_dtor_func_t dtor , unsigned char persistent)"		89430	0					
ANR	89432	CompoundStatement		27:0:1411:1529	89430	0					
ANR	89433	ExpressionStatement	l -> head = NULL	28:1:1414:1429	89430	0	True				
ANR	89434	AssignmentExpression	l -> head = NULL		89430	0		=			
ANR	89435	PtrMemberAccess	l -> head		89430	0					
ANR	89436	Identifier	l		89430	0					
ANR	89437	Identifier	head		89430	1					
ANR	89438	Identifier	NULL		89430	1					
ANR	89439	ExpressionStatement	l -> tail = NULL	29:1:1432:1447	89430	1	True				
ANR	89440	AssignmentExpression	l -> tail = NULL		89430	0		=			
ANR	89441	PtrMemberAccess	l -> tail		89430	0					
ANR	89442	Identifier	l		89430	0					
ANR	89443	Identifier	tail		89430	1					
ANR	89444	Identifier	NULL		89430	1					
ANR	89445	ExpressionStatement	l -> count = 0	30:1:1450:1462	89430	2	True				
ANR	89446	AssignmentExpression	l -> count = 0		89430	0		=			
ANR	89447	PtrMemberAccess	l -> count		89430	0					
ANR	89448	Identifier	l		89430	0					
ANR	89449	Identifier	count		89430	1					
ANR	89450	PrimaryExpression	0		89430	1					
ANR	89451	ExpressionStatement	l -> size = size	31:1:1465:1480	89430	3	True				
ANR	89452	AssignmentExpression	l -> size = size		89430	0		=			
ANR	89453	PtrMemberAccess	l -> size		89430	0					
ANR	89454	Identifier	l		89430	0					
ANR	89455	Identifier	size		89430	1					
ANR	89456	Identifier	size		89430	1					
ANR	89457	ExpressionStatement	l -> dtor = dtor	32:1:1483:1498	89430	4	True				
ANR	89458	AssignmentExpression	l -> dtor = dtor		89430	0		=			
ANR	89459	PtrMemberAccess	l -> dtor		89430	0					
ANR	89460	Identifier	l		89430	0					
ANR	89461	Identifier	dtor		89430	1					
ANR	89462	Identifier	dtor		89430	1					
ANR	89463	ExpressionStatement	l -> persistent = persistent	33:1:1501:1527	89430	5	True				
ANR	89464	AssignmentExpression	l -> persistent = persistent		89430	0		=			
ANR	89465	PtrMemberAccess	l -> persistent		89430	0					
ANR	89466	Identifier	l		89430	0					
ANR	89467	Identifier	persistent		89430	1					
ANR	89468	Identifier	persistent		89430	1					
ANR	89469	ReturnType	ZEND_API void		89430	1					
ANR	89470	Identifier	zend_llist_init		89430	2					
ANR	89471	ParameterList	"zend_llist * l , size_t size , llist_dtor_func_t dtor , unsigned char persistent"		89430	3					
ANR	89472	Parameter	zend_llist * l	26:30:1333:1345	89430	0	True				
ANR	89473	ParameterType	zend_llist *		89430	0					
ANR	89474	Identifier	l		89430	1					
ANR	89475	Parameter	size_t size	26:45:1348:1358	89430	1	True				
ANR	89476	ParameterType	size_t		89430	0					
ANR	89477	Identifier	size		89430	1					
ANR	89478	Parameter	llist_dtor_func_t dtor	26:58:1361:1382	89430	2	True				
ANR	89479	ParameterType	llist_dtor_func_t		89430	0					
ANR	89480	Identifier	dtor		89430	1					
ANR	89481	Parameter	unsigned char persistent	26:82:1385:1408	89430	3	True				
ANR	89482	ParameterType	unsigned char		89430	0					
ANR	89483	Identifier	persistent		89430	1					
ANR	89484	CFGEntryNode	ENTRY		89430		True				
ANR	89485	CFGExitNode	EXIT		89430		True				
ANR	89486	Symbol	NULL		89430						
ANR	89487	Symbol	size		89430						
ANR	89488	Symbol	l -> dtor		89430						
ANR	89489	Symbol	* l		89430						
ANR	89490	Symbol	l -> head		89430						
ANR	89491	Symbol	l -> count		89430						
ANR	89492	Symbol	l -> persistent		89430						
ANR	89493	Symbol	l -> tail		89430						
ANR	89494	Symbol	l		89430						
ANR	89495	Symbol	dtor		89430						
ANR	89496	Symbol	persistent		89430						
ANR	89497	Symbol	l -> size		89430						
ANR	89498	Function	zend_llist_add_element	37:0:1533:1871							
ANR	89499	FunctionDef	"zend_llist_add_element (zend_llist * l , void * element)"		89498	0					
ANR	89500	CompoundStatement		38:0:1600:1871	89498	0					
ANR	89501	IdentifierDeclStatement	"zend_llist_element * tmp = pemalloc ( sizeof ( zend_llist_element ) + l -> size - 1 , l -> persistent ) ;"	39:1:1603:1690	89498	0	True				
ANR	89502	IdentifierDecl	"* tmp = pemalloc ( sizeof ( zend_llist_element ) + l -> size - 1 , l -> persistent )"		89498	0					
ANR	89503	IdentifierDeclType	zend_llist_element *		89498	0					
ANR	89504	Identifier	tmp		89498	1					
ANR	89505	AssignmentExpression	"* tmp = pemalloc ( sizeof ( zend_llist_element ) + l -> size - 1 , l -> persistent )"		89498	2		=			
ANR	89506	Identifier	tmp		89498	0					
ANR	89507	CallExpression	"pemalloc ( sizeof ( zend_llist_element ) + l -> size - 1 , l -> persistent )"		89498	1					
ANR	89508	Callee	pemalloc		89498	0					
ANR	89509	Identifier	pemalloc		89498	0					
ANR	89510	ArgumentList	sizeof ( zend_llist_element ) + l -> size - 1		89498	1					
ANR	89511	Argument	sizeof ( zend_llist_element ) + l -> size - 1		89498	0					
ANR	89512	AdditiveExpression	sizeof ( zend_llist_element ) + l -> size - 1		89498	0		+			
ANR	89513	SizeofExpression	sizeof ( zend_llist_element )		89498	0					
ANR	89514	Sizeof	sizeof		89498	0					
ANR	89515	SizeofOperand	zend_llist_element		89498	1					
ANR	89516	AdditiveExpression	l -> size - 1		89498	1		-			
ANR	89517	PtrMemberAccess	l -> size		89498	0					
ANR	89518	Identifier	l		89498	0					
ANR	89519	Identifier	size		89498	1					
ANR	89520	PrimaryExpression	1		89498	1					
ANR	89521	Argument	l -> persistent		89498	1					
ANR	89522	PtrMemberAccess	l -> persistent		89498	0					
ANR	89523	Identifier	l		89498	0					
ANR	89524	Identifier	persistent		89498	1					
ANR	89525	ExpressionStatement	tmp -> prev = l -> tail	41:1:1694:1713	89498	1	True				
ANR	89526	AssignmentExpression	tmp -> prev = l -> tail		89498	0		=			
ANR	89527	PtrMemberAccess	tmp -> prev		89498	0					
ANR	89528	Identifier	tmp		89498	0					
ANR	89529	Identifier	prev		89498	1					
ANR	89530	PtrMemberAccess	l -> tail		89498	1					
ANR	89531	Identifier	l		89498	0					
ANR	89532	Identifier	tail		89498	1					
ANR	89533	ExpressionStatement	tmp -> next = NULL	42:1:1716:1732	89498	2	True				
ANR	89534	AssignmentExpression	tmp -> next = NULL		89498	0		=			
ANR	89535	PtrMemberAccess	tmp -> next		89498	0					
ANR	89536	Identifier	tmp		89498	0					
ANR	89537	Identifier	next		89498	1					
ANR	89538	Identifier	NULL		89498	1					
ANR	89539	IfStatement	if ( l -> tail )		89498	3					
ANR	89540	Condition	l -> tail	43:5:1739:1745	89498	0	True				
ANR	89541	PtrMemberAccess	l -> tail		89498	0					
ANR	89542	Identifier	l		89498	0					
ANR	89543	Identifier	tail		89498	1					
ANR	89544	CompoundStatement		6:14:147:147	89498	1					
ANR	89545	ExpressionStatement	l -> tail -> next = tmp	44:2:1752:1771	89498	0	True				
ANR	89546	AssignmentExpression	l -> tail -> next = tmp		89498	0		=			
ANR	89547	PtrMemberAccess	l -> tail -> next		89498	0					
ANR	89548	PtrMemberAccess	l -> tail		89498	0					
ANR	89549	Identifier	l		89498	0					
ANR	89550	Identifier	tail		89498	1					
ANR	89551	Identifier	next		89498	1					
ANR	89552	Identifier	tmp		89498	1					
ANR	89553	ElseStatement	else		89498	0					
ANR	89554	CompoundStatement		8:8:180:180	89498	0					
ANR	89555	ExpressionStatement	l -> head = tmp	46:2:1785:1798	89498	0	True				
ANR	89556	AssignmentExpression	l -> head = tmp		89498	0		=			
ANR	89557	PtrMemberAccess	l -> head		89498	0					
ANR	89558	Identifier	l		89498	0					
ANR	89559	Identifier	head		89498	1					
ANR	89560	Identifier	tmp		89498	1					
ANR	89561	ExpressionStatement	l -> tail = tmp	48:1:1804:1817	89498	4	True				
ANR	89562	AssignmentExpression	l -> tail = tmp		89498	0		=			
ANR	89563	PtrMemberAccess	l -> tail		89498	0					
ANR	89564	Identifier	l		89498	0					
ANR	89565	Identifier	tail		89498	1					
ANR	89566	Identifier	tmp		89498	1					
ANR	89567	ExpressionStatement	"memcpy ( tmp -> data , element , l -> size )"	49:1:1820:1855	89498	5	True				
ANR	89568	CallExpression	"memcpy ( tmp -> data , element , l -> size )"		89498	0					
ANR	89569	Callee	memcpy		89498	0					
ANR	89570	Identifier	memcpy		89498	0					
ANR	89571	ArgumentList	tmp -> data		89498	1					
ANR	89572	Argument	tmp -> data		89498	0					
ANR	89573	PtrMemberAccess	tmp -> data		89498	0					
ANR	89574	Identifier	tmp		89498	0					
ANR	89575	Identifier	data		89498	1					
ANR	89576	Argument	element		89498	1					
ANR	89577	Identifier	element		89498	0					
ANR	89578	Argument	l -> size		89498	2					
ANR	89579	PtrMemberAccess	l -> size		89498	0					
ANR	89580	Identifier	l		89498	0					
ANR	89581	Identifier	size		89498	1					
ANR	89582	ExpressionStatement	++ l -> count	51:1:1859:1869	89498	6	True				
ANR	89583	UnaryExpression	++ l -> count		89498	0					
ANR	89584	IncDec	++		89498	0					
ANR	89585	PtrMemberAccess	l -> count		89498	1					
ANR	89586	Identifier	l		89498	0					
ANR	89587	Identifier	count		89498	1					
ANR	89588	ReturnType	ZEND_API void		89498	1					
ANR	89589	Identifier	zend_llist_add_element		89498	2					
ANR	89590	ParameterList	"zend_llist * l , void * element"		89498	3					
ANR	89591	Parameter	zend_llist * l	37:37:1570:1582	89498	0	True				
ANR	89592	ParameterType	zend_llist *		89498	0					
ANR	89593	Identifier	l		89498	1					
ANR	89594	Parameter	void * element	37:52:1585:1597	89498	1	True				
ANR	89595	ParameterType	void *		89498	0					
ANR	89596	Identifier	element		89498	1					
ANR	89597	CFGEntryNode	ENTRY		89498		True				
ANR	89598	CFGExitNode	EXIT		89498		True				
ANR	89599	Symbol	* l -> tail		89498						
ANR	89600	Symbol	tmp -> prev		89498						
ANR	89601	Symbol	* tmp		89498						
ANR	89602	Symbol	NULL		89498						
ANR	89603	Symbol	tmp -> data		89498						
ANR	89604	Symbol	l -> head		89498						
ANR	89605	Symbol	l -> persistent		89498						
ANR	89606	Symbol	l -> tail		89498						
ANR	89607	Symbol	l		89498						
ANR	89608	Symbol	tmp -> next		89498						
ANR	89609	Symbol	* l		89498						
ANR	89610	Symbol	tmp		89498						
ANR	89611	Symbol	l -> tail -> next		89498						
ANR	89612	Symbol	l -> size		89498						
ANR	89613	Symbol	element		89498						
ANR	89614	Symbol	pemalloc		89498						
ANR	89615	Symbol	* * l		89498						
ANR	89616	Function	zend_llist_prepend_element	55:0:1875:2217							
ANR	89617	FunctionDef	"zend_llist_prepend_element (zend_llist * l , void * element)"		89616	0					
ANR	89618	CompoundStatement		56:0:1946:2217	89616	0					
ANR	89619	IdentifierDeclStatement	"zend_llist_element * tmp = pemalloc ( sizeof ( zend_llist_element ) + l -> size - 1 , l -> persistent ) ;"	57:1:1949:2036	89616	0	True				
ANR	89620	IdentifierDecl	"* tmp = pemalloc ( sizeof ( zend_llist_element ) + l -> size - 1 , l -> persistent )"		89616	0					
ANR	89621	IdentifierDeclType	zend_llist_element *		89616	0					
ANR	89622	Identifier	tmp		89616	1					
ANR	89623	AssignmentExpression	"* tmp = pemalloc ( sizeof ( zend_llist_element ) + l -> size - 1 , l -> persistent )"		89616	2		=			
ANR	89624	Identifier	tmp		89616	0					
ANR	89625	CallExpression	"pemalloc ( sizeof ( zend_llist_element ) + l -> size - 1 , l -> persistent )"		89616	1					
ANR	89626	Callee	pemalloc		89616	0					
ANR	89627	Identifier	pemalloc		89616	0					
ANR	89628	ArgumentList	sizeof ( zend_llist_element ) + l -> size - 1		89616	1					
ANR	89629	Argument	sizeof ( zend_llist_element ) + l -> size - 1		89616	0					
ANR	89630	AdditiveExpression	sizeof ( zend_llist_element ) + l -> size - 1		89616	0		+			
ANR	89631	SizeofExpression	sizeof ( zend_llist_element )		89616	0					
ANR	89632	Sizeof	sizeof		89616	0					
ANR	89633	SizeofOperand	zend_llist_element		89616	1					
ANR	89634	AdditiveExpression	l -> size - 1		89616	1		-			
ANR	89635	PtrMemberAccess	l -> size		89616	0					
ANR	89636	Identifier	l		89616	0					
ANR	89637	Identifier	size		89616	1					
ANR	89638	PrimaryExpression	1		89616	1					
ANR	89639	Argument	l -> persistent		89616	1					
ANR	89640	PtrMemberAccess	l -> persistent		89616	0					
ANR	89641	Identifier	l		89616	0					
ANR	89642	Identifier	persistent		89616	1					
ANR	89643	ExpressionStatement	tmp -> next = l -> head	59:1:2040:2059	89616	1	True				
ANR	89644	AssignmentExpression	tmp -> next = l -> head		89616	0		=			
ANR	89645	PtrMemberAccess	tmp -> next		89616	0					
ANR	89646	Identifier	tmp		89616	0					
ANR	89647	Identifier	next		89616	1					
ANR	89648	PtrMemberAccess	l -> head		89616	1					
ANR	89649	Identifier	l		89616	0					
ANR	89650	Identifier	head		89616	1					
ANR	89651	ExpressionStatement	tmp -> prev = NULL	60:1:2062:2078	89616	2	True				
ANR	89652	AssignmentExpression	tmp -> prev = NULL		89616	0		=			
ANR	89653	PtrMemberAccess	tmp -> prev		89616	0					
ANR	89654	Identifier	tmp		89616	0					
ANR	89655	Identifier	prev		89616	1					
ANR	89656	Identifier	NULL		89616	1					
ANR	89657	IfStatement	if ( l -> head )		89616	3					
ANR	89658	Condition	l -> head	61:5:2085:2091	89616	0	True				
ANR	89659	PtrMemberAccess	l -> head		89616	0					
ANR	89660	Identifier	l		89616	0					
ANR	89661	Identifier	head		89616	1					
ANR	89662	CompoundStatement		6:14:147:147	89616	1					
ANR	89663	ExpressionStatement	l -> head -> prev = tmp	62:2:2098:2117	89616	0	True				
ANR	89664	AssignmentExpression	l -> head -> prev = tmp		89616	0		=			
ANR	89665	PtrMemberAccess	l -> head -> prev		89616	0					
ANR	89666	PtrMemberAccess	l -> head		89616	0					
ANR	89667	Identifier	l		89616	0					
ANR	89668	Identifier	head		89616	1					
ANR	89669	Identifier	prev		89616	1					
ANR	89670	Identifier	tmp		89616	1					
ANR	89671	ElseStatement	else		89616	0					
ANR	89672	CompoundStatement		8:8:180:180	89616	0					
ANR	89673	ExpressionStatement	l -> tail = tmp	64:2:2131:2144	89616	0	True				
ANR	89674	AssignmentExpression	l -> tail = tmp		89616	0		=			
ANR	89675	PtrMemberAccess	l -> tail		89616	0					
ANR	89676	Identifier	l		89616	0					
ANR	89677	Identifier	tail		89616	1					
ANR	89678	Identifier	tmp		89616	1					
ANR	89679	ExpressionStatement	l -> head = tmp	66:1:2150:2163	89616	4	True				
ANR	89680	AssignmentExpression	l -> head = tmp		89616	0		=			
ANR	89681	PtrMemberAccess	l -> head		89616	0					
ANR	89682	Identifier	l		89616	0					
ANR	89683	Identifier	head		89616	1					
ANR	89684	Identifier	tmp		89616	1					
ANR	89685	ExpressionStatement	"memcpy ( tmp -> data , element , l -> size )"	67:1:2166:2201	89616	5	True				
ANR	89686	CallExpression	"memcpy ( tmp -> data , element , l -> size )"		89616	0					
ANR	89687	Callee	memcpy		89616	0					
ANR	89688	Identifier	memcpy		89616	0					
ANR	89689	ArgumentList	tmp -> data		89616	1					
ANR	89690	Argument	tmp -> data		89616	0					
ANR	89691	PtrMemberAccess	tmp -> data		89616	0					
ANR	89692	Identifier	tmp		89616	0					
ANR	89693	Identifier	data		89616	1					
ANR	89694	Argument	element		89616	1					
ANR	89695	Identifier	element		89616	0					
ANR	89696	Argument	l -> size		89616	2					
ANR	89697	PtrMemberAccess	l -> size		89616	0					
ANR	89698	Identifier	l		89616	0					
ANR	89699	Identifier	size		89616	1					
ANR	89700	ExpressionStatement	++ l -> count	69:1:2205:2215	89616	6	True				
ANR	89701	UnaryExpression	++ l -> count		89616	0					
ANR	89702	IncDec	++		89616	0					
ANR	89703	PtrMemberAccess	l -> count		89616	1					
ANR	89704	Identifier	l		89616	0					
ANR	89705	Identifier	count		89616	1					
ANR	89706	ReturnType	ZEND_API void		89616	1					
ANR	89707	Identifier	zend_llist_prepend_element		89616	2					
ANR	89708	ParameterList	"zend_llist * l , void * element"		89616	3					
ANR	89709	Parameter	zend_llist * l	55:41:1916:1928	89616	0	True				
ANR	89710	ParameterType	zend_llist *		89616	0					
ANR	89711	Identifier	l		89616	1					
ANR	89712	Parameter	void * element	55:56:1931:1943	89616	1	True				
ANR	89713	ParameterType	void *		89616	0					
ANR	89714	Identifier	element		89616	1					
ANR	89715	CFGEntryNode	ENTRY		89616		True				
ANR	89716	CFGExitNode	EXIT		89616		True				
ANR	89717	Symbol	* tmp		89616						
ANR	89718	Symbol	tmp -> prev		89616						
ANR	89719	Symbol	NULL		89616						
ANR	89720	Symbol	tmp -> data		89616						
ANR	89721	Symbol	l -> head		89616						
ANR	89722	Symbol	l -> persistent		89616						
ANR	89723	Symbol	l -> tail		89616						
ANR	89724	Symbol	l		89616						
ANR	89725	Symbol	tmp -> next		89616						
ANR	89726	Symbol	* l -> head		89616						
ANR	89727	Symbol	* l		89616						
ANR	89728	Symbol	tmp		89616						
ANR	89729	Symbol	l -> head -> prev		89616						
ANR	89730	Symbol	l -> size		89616						
ANR	89731	Symbol	element		89616						
ANR	89732	Symbol	pemalloc		89616						
ANR	89733	Symbol	* * l		89616						
ANR	89734	Function	zend_llist_del_element	91:0:2630:2924							
ANR	89735	FunctionDef	"zend_llist_del_element (zend_llist * l , void * element , int ( * compare ) ( void * element1 , void * element2 ))"		89734	0					
ANR	89736	CompoundStatement		92:0:2745:2924	89734	0					
ANR	89737	IdentifierDeclStatement	zend_llist_element * current = l -> head ;	93:1:2748:2783	89734	0	True				
ANR	89738	IdentifierDecl	* current = l -> head		89734	0					
ANR	89739	IdentifierDeclType	zend_llist_element *		89734	0					
ANR	89740	Identifier	current		89734	1					
ANR	89741	AssignmentExpression	* current = l -> head		89734	2		=			
ANR	89742	Identifier	current		89734	0					
ANR	89743	PtrMemberAccess	l -> head		89734	1					
ANR	89744	Identifier	l		89734	0					
ANR	89745	Identifier	head		89734	1					
ANR	89746	WhileStatement	while ( current )		89734	1					
ANR	89747	Condition	current	95:8:2794:2800	89734	0	True				
ANR	89748	Identifier	current		89734	0					
ANR	89749	CompoundStatement		4:17:57:57	89734	1					
ANR	89750	IfStatement	"if ( compare ( current -> data , element ) )"		89734	0					
ANR	89751	Condition	"compare ( current -> data , element )"	96:6:2811:2841	89734	0	True				
ANR	89752	CallExpression	"compare ( current -> data , element )"		89734	0					
ANR	89753	Callee	compare		89734	0					
ANR	89754	Identifier	compare		89734	0					
ANR	89755	ArgumentList	current -> data		89734	1					
ANR	89756	Argument	current -> data		89734	0					
ANR	89757	PtrMemberAccess	current -> data		89734	0					
ANR	89758	Identifier	current		89734	0					
ANR	89759	Identifier	data		89734	1					
ANR	89760	Argument	element		89734	1					
ANR	89761	Identifier	element		89734	0					
ANR	89762	CompoundStatement		5:39:98:98	89734	1					
ANR	89763	ExpressionStatement	"DEL_LLIST_ELEMENT ( current , l )"	97:3:2849:2878	89734	0	True				
ANR	89764	CallExpression	"DEL_LLIST_ELEMENT ( current , l )"		89734	0					
ANR	89765	Callee	DEL_LLIST_ELEMENT		89734	0					
ANR	89766	Identifier	DEL_LLIST_ELEMENT		89734	0					
ANR	89767	ArgumentList	current		89734	1					
ANR	89768	Argument	current		89734	0					
ANR	89769	Identifier	current		89734	0					
ANR	89770	Argument	l		89734	1					
ANR	89771	Identifier	l		89734	0					
ANR	89772	BreakStatement	break ;	98:3:2883:2888	89734	1	True				
ANR	89773	ExpressionStatement	current = current -> next	100:2:2896:2919	89734	1	True				
ANR	89774	AssignmentExpression	current = current -> next		89734	0		=			
ANR	89775	Identifier	current		89734	0					
ANR	89776	PtrMemberAccess	current -> next		89734	1					
ANR	89777	Identifier	current		89734	0					
ANR	89778	Identifier	next		89734	1					
ANR	89779	ReturnType	ZEND_API void		89734	1					
ANR	89780	Identifier	zend_llist_del_element		89734	2					
ANR	89781	ParameterList	"zend_llist * l , void * element , int ( * compare ) ( void * element1 , void * element2 )"		89734	3					
ANR	89782	Parameter	zend_llist * l	91:37:2667:2679	89734	0	True				
ANR	89783	ParameterType	zend_llist *		89734	0					
ANR	89784	Identifier	l		89734	1					
ANR	89785	Parameter	void * element	91:52:2682:2694	89734	1	True				
ANR	89786	ParameterType	void *		89734	0					
ANR	89787	Identifier	element		89734	1					
ANR	89788	Parameter	"int ( * compare ) ( void * element1 , void * element2 )"	91:67:2697:2742	89734	2	True				
ANR	89789	ParameterType	"(( void * element1 , void * element2 ) int) *"		89734	0					
ANR	89790	Identifier	compare		89734	1					
ANR	89791	CFGEntryNode	ENTRY		89734		True				
ANR	89792	CFGExitNode	EXIT		89734		True				
ANR	89793	Symbol	current -> data		89734						
ANR	89794	Symbol	compare		89734						
ANR	89795	Symbol	current		89734						
ANR	89796	Symbol	current -> next		89734						
ANR	89797	Symbol	l -> head		89734						
ANR	89798	Symbol	* l		89734						
ANR	89799	Symbol	* current		89734						
ANR	89800	Symbol	l		89734						
ANR	89801	Symbol	element		89734						
ANR	89802	Function	zend_llist_destroy	105:0:2928:3187							
ANR	89803	FunctionDef	zend_llist_destroy (zend_llist * l)		89802	0					
ANR	89804	CompoundStatement		106:0:2976:3187	89802	0					
ANR	89805	IdentifierDeclStatement	"zend_llist_element * current = l -> head , * next ;"	107:1:2979:3021	89802	0	True				
ANR	89806	IdentifierDecl	* current = l -> head		89802	0					
ANR	89807	IdentifierDeclType	zend_llist_element *		89802	0					
ANR	89808	Identifier	current		89802	1					
ANR	89809	AssignmentExpression	* current = l -> head		89802	2		=			
ANR	89810	Identifier	current		89802	0					
ANR	89811	PtrMemberAccess	l -> head		89802	1					
ANR	89812	Identifier	l		89802	0					
ANR	89813	Identifier	head		89802	1					
ANR	89814	IdentifierDecl	* next		89802	1					
ANR	89815	IdentifierDeclType	zend_llist_element *		89802	0					
ANR	89816	Identifier	next		89802	1					
ANR	89817	WhileStatement	while ( current )		89802	1					
ANR	89818	Condition	current	109:8:3033:3039	89802	0	True				
ANR	89819	Identifier	current		89802	0					
ANR	89820	CompoundStatement		4:17:65:65	89802	1					
ANR	89821	ExpressionStatement	next = current -> next	110:2:3046:3066	89802	0	True				
ANR	89822	AssignmentExpression	next = current -> next		89802	0		=			
ANR	89823	Identifier	next		89802	0					
ANR	89824	PtrMemberAccess	current -> next		89802	1					
ANR	89825	Identifier	current		89802	0					
ANR	89826	Identifier	next		89802	1					
ANR	89827	IfStatement	if ( l -> dtor )		89802	1					
ANR	89828	Condition	l -> dtor	111:6:3074:3080	89802	0	True				
ANR	89829	PtrMemberAccess	l -> dtor		89802	0					
ANR	89830	Identifier	l		89802	0					
ANR	89831	Identifier	dtor		89802	1					
ANR	89832	CompoundStatement		6:15:106:106	89802	1					
ANR	89833	ExpressionStatement	l -> dtor ( current -> data )	112:3:3088:3110	89802	0	True				
ANR	89834	CallExpression	l -> dtor ( current -> data )		89802	0					
ANR	89835	Callee	l -> dtor		89802	0					
ANR	89836	PtrMemberAccess	l -> dtor		89802	0					
ANR	89837	Identifier	l		89802	0					
ANR	89838	Identifier	dtor		89802	1					
ANR	89839	ArgumentList	current -> data		89802	1					
ANR	89840	Argument	current -> data		89802	0					
ANR	89841	PtrMemberAccess	current -> data		89802	0					
ANR	89842	Identifier	current		89802	0					
ANR	89843	Identifier	data		89802	1					
ANR	89844	ExpressionStatement	"pefree ( current , l -> persistent )"	114:2:3118:3148	89802	2	True				
ANR	89845	CallExpression	"pefree ( current , l -> persistent )"		89802	0					
ANR	89846	Callee	pefree		89802	0					
ANR	89847	Identifier	pefree		89802	0					
ANR	89848	ArgumentList	current		89802	1					
ANR	89849	Argument	current		89802	0					
ANR	89850	Identifier	current		89802	0					
ANR	89851	Argument	l -> persistent		89802	1					
ANR	89852	PtrMemberAccess	l -> persistent		89802	0					
ANR	89853	Identifier	l		89802	0					
ANR	89854	Identifier	persistent		89802	1					
ANR	89855	ExpressionStatement	current = next	115:2:3152:3166	89802	3	True				
ANR	89856	AssignmentExpression	current = next		89802	0		=			
ANR	89857	Identifier	current		89802	0					
ANR	89858	Identifier	next		89802	1					
ANR	89859	ExpressionStatement	l -> count = 0	118:1:3173:3185	89802	2	True				
ANR	89860	AssignmentExpression	l -> count = 0		89802	0		=			
ANR	89861	PtrMemberAccess	l -> count		89802	0					
ANR	89862	Identifier	l		89802	0					
ANR	89863	Identifier	count		89802	1					
ANR	89864	PrimaryExpression	0		89802	1					
ANR	89865	ReturnType	ZEND_API void		89802	1					
ANR	89866	Identifier	zend_llist_destroy		89802	2					
ANR	89867	ParameterList	zend_llist * l		89802	3					
ANR	89868	Parameter	zend_llist * l	105:33:2961:2973	89802	0	True				
ANR	89869	ParameterType	zend_llist *		89802	0					
ANR	89870	Identifier	l		89802	1					
ANR	89871	CFGEntryNode	ENTRY		89802		True				
ANR	89872	CFGExitNode	EXIT		89802		True				
ANR	89873	Symbol	next		89802						
ANR	89874	Symbol	current -> data		89802						
ANR	89875	Symbol	current		89802						
ANR	89876	Symbol	current -> next		89802						
ANR	89877	Symbol	l -> dtor		89802						
ANR	89878	Symbol	* l		89802						
ANR	89879	Symbol	l -> head		89802						
ANR	89880	Symbol	l -> count		89802						
ANR	89881	Symbol	* current		89802						
ANR	89882	Symbol	l -> persistent		89802						
ANR	89883	Symbol	l		89802						
ANR	89884	Function	zend_llist_clean	122:0:3191:3290							
ANR	89885	FunctionDef	zend_llist_clean (zend_llist * l)		89884	0					
ANR	89886	CompoundStatement		123:0:3237:3290	89884	0					
ANR	89887	ExpressionStatement	zend_llist_destroy ( l )	124:1:3240:3261	89884	0	True				
ANR	89888	CallExpression	zend_llist_destroy ( l )		89884	0					
ANR	89889	Callee	zend_llist_destroy		89884	0					
ANR	89890	Identifier	zend_llist_destroy		89884	0					
ANR	89891	ArgumentList	l		89884	1					
ANR	89892	Argument	l		89884	0					
ANR	89893	Identifier	l		89884	0					
ANR	89894	ExpressionStatement	l -> head = l -> tail = NULL	125:1:3264:3288	89884	1	True				
ANR	89895	AssignmentExpression	l -> head = l -> tail = NULL		89884	0		=			
ANR	89896	PtrMemberAccess	l -> head		89884	0					
ANR	89897	Identifier	l		89884	0					
ANR	89898	Identifier	head		89884	1					
ANR	89899	AssignmentExpression	l -> tail = NULL		89884	1		=			
ANR	89900	PtrMemberAccess	l -> tail		89884	0					
ANR	89901	Identifier	l		89884	0					
ANR	89902	Identifier	tail		89884	1					
ANR	89903	Identifier	NULL		89884	1					
ANR	89904	ReturnType	ZEND_API void		89884	1					
ANR	89905	Identifier	zend_llist_clean		89884	2					
ANR	89906	ParameterList	zend_llist * l		89884	3					
ANR	89907	Parameter	zend_llist * l	122:31:3222:3234	89884	0	True				
ANR	89908	ParameterType	zend_llist *		89884	0					
ANR	89909	Identifier	l		89884	1					
ANR	89910	CFGEntryNode	ENTRY		89884		True				
ANR	89911	CFGExitNode	EXIT		89884		True				
ANR	89912	Symbol	NULL		89884						
ANR	89913	Symbol	l -> head		89884						
ANR	89914	Symbol	* l		89884						
ANR	89915	Symbol	l -> tail		89884						
ANR	89916	Symbol	l		89884						
ANR	89917	Function	zend_llist_remove_tail	129:0:3294:3699							
ANR	89918	FunctionDef	zend_llist_remove_tail (zend_llist * l)		89917	0					
ANR	89919	CompoundStatement		130:0:3347:3699	89917	0					
ANR	89920	IdentifierDeclStatement	zend_llist_element * old_tail ;	131:1:3350:3378	89917	0	True				
ANR	89921	IdentifierDecl	* old_tail		89917	0					
ANR	89922	IdentifierDeclType	zend_llist_element *		89917	0					
ANR	89923	Identifier	old_tail		89917	1					
ANR	89924	IdentifierDeclStatement	void * data ;	132:1:3381:3391	89917	1	True				
ANR	89925	IdentifierDecl	* data		89917	0					
ANR	89926	IdentifierDeclType	void *		89917	0					
ANR	89927	Identifier	data		89917	1					
ANR	89928	IfStatement	if ( ( old_tail = l -> tail ) )		89917	2					
ANR	89929	Condition	old_tail = l -> tail	134:5:3399:3418	89917	0	True				
ANR	89930	AssignmentExpression	old_tail = l -> tail		89917	0		=			
ANR	89931	Identifier	old_tail		89917	0					
ANR	89932	PtrMemberAccess	l -> tail		89917	1					
ANR	89933	Identifier	l		89917	0					
ANR	89934	Identifier	tail		89917	1					
ANR	89935	CompoundStatement		5:27:73:73	89917	1					
ANR	89936	IfStatement	if ( old_tail -> prev )		89917	0					
ANR	89937	Condition	old_tail -> prev	135:6:3429:3442	89917	0	True				
ANR	89938	PtrMemberAccess	old_tail -> prev		89917	0					
ANR	89939	Identifier	old_tail		89917	0					
ANR	89940	Identifier	prev		89917	1					
ANR	89941	CompoundStatement		6:22:97:97	89917	1					
ANR	89942	ExpressionStatement	old_tail -> prev -> next = NULL	136:3:3450:3477	89917	0	True				
ANR	89943	AssignmentExpression	old_tail -> prev -> next = NULL		89917	0		=			
ANR	89944	PtrMemberAccess	old_tail -> prev -> next		89917	0					
ANR	89945	PtrMemberAccess	old_tail -> prev		89917	0					
ANR	89946	Identifier	old_tail		89917	0					
ANR	89947	Identifier	prev		89917	1					
ANR	89948	Identifier	next		89917	1					
ANR	89949	Identifier	NULL		89917	1					
ANR	89950	ElseStatement	else		89917	0					
ANR	89951	CompoundStatement		8:9:140:140	89917	0					
ANR	89952	ExpressionStatement	l -> head = NULL	138:3:3493:3507	89917	0	True				
ANR	89953	AssignmentExpression	l -> head = NULL		89917	0		=			
ANR	89954	PtrMemberAccess	l -> head		89917	0					
ANR	89955	Identifier	l		89917	0					
ANR	89956	Identifier	head		89917	1					
ANR	89957	Identifier	NULL		89917	1					
ANR	89958	ExpressionStatement	data = old_tail -> data	141:2:3524:3545	89917	1	True				
ANR	89959	AssignmentExpression	data = old_tail -> data		89917	0		=			
ANR	89960	Identifier	data		89917	0					
ANR	89961	PtrMemberAccess	old_tail -> data		89917	1					
ANR	89962	Identifier	old_tail		89917	0					
ANR	89963	Identifier	data		89917	1					
ANR	89964	ExpressionStatement	l -> tail = old_tail -> prev	143:2:3550:3574	89917	2	True				
ANR	89965	AssignmentExpression	l -> tail = old_tail -> prev		89917	0		=			
ANR	89966	PtrMemberAccess	l -> tail		89917	0					
ANR	89967	Identifier	l		89917	0					
ANR	89968	Identifier	tail		89917	1					
ANR	89969	PtrMemberAccess	old_tail -> prev		89917	1					
ANR	89970	Identifier	old_tail		89917	0					
ANR	89971	Identifier	prev		89917	1					
ANR	89972	IfStatement	if ( l -> dtor )		89917	3					
ANR	89973	Condition	l -> dtor	144:6:3582:3588	89917	0	True				
ANR	89974	PtrMemberAccess	l -> dtor		89917	0					
ANR	89975	Identifier	l		89917	0					
ANR	89976	Identifier	dtor		89917	1					
ANR	89977	CompoundStatement		15:15:243:243	89917	1					
ANR	89978	ExpressionStatement	l -> dtor ( data )	145:3:3596:3609	89917	0	True				
ANR	89979	CallExpression	l -> dtor ( data )		89917	0					
ANR	89980	Callee	l -> dtor		89917	0					
ANR	89981	PtrMemberAccess	l -> dtor		89917	0					
ANR	89982	Identifier	l		89917	0					
ANR	89983	Identifier	dtor		89917	1					
ANR	89984	ArgumentList	data		89917	1					
ANR	89985	Argument	data		89917	0					
ANR	89986	Identifier	data		89917	0					
ANR	89987	ExpressionStatement	"pefree ( old_tail , l -> persistent )"	147:2:3617:3648	89917	4	True				
ANR	89988	CallExpression	"pefree ( old_tail , l -> persistent )"		89917	0					
ANR	89989	Callee	pefree		89917	0					
ANR	89990	Identifier	pefree		89917	0					
ANR	89991	ArgumentList	old_tail		89917	1					
ANR	89992	Argument	old_tail		89917	0					
ANR	89993	Identifier	old_tail		89917	0					
ANR	89994	Argument	l -> persistent		89917	1					
ANR	89995	PtrMemberAccess	l -> persistent		89917	0					
ANR	89996	Identifier	l		89917	0					
ANR	89997	Identifier	persistent		89917	1					
ANR	89998	ExpressionStatement	-- l -> count	149:2:3653:3663	89917	5	True				
ANR	89999	UnaryExpression	-- l -> count		89917	0					
ANR	90000	IncDec	--		89917	0					
ANR	90001	PtrMemberAccess	l -> count		89917	1					
ANR	90002	Identifier	l		89917	0					
ANR	90003	Identifier	count		89917	1					
ANR	90004	ReturnStatement	return data ;	151:2:3668:3679	89917	6	True				
ANR	90005	Identifier	data		89917	0					
ANR	90006	ReturnStatement	return NULL ;	154:1:3686:3697	89917	3	True				
ANR	90007	Identifier	NULL		89917	0					
ANR	90008	ReturnType	ZEND_API void *		89917	1					
ANR	90009	Identifier	zend_llist_remove_tail		89917	2					
ANR	90010	ParameterList	zend_llist * l		89917	3					
ANR	90011	Parameter	zend_llist * l	129:38:3332:3344	89917	0	True				
ANR	90012	ParameterType	zend_llist *		89917	0					
ANR	90013	Identifier	l		89917	1					
ANR	90014	CFGEntryNode	ENTRY		89917		True				
ANR	90015	CFGExitNode	EXIT		89917		True				
ANR	90016	Symbol	* old_tail -> prev		89917						
ANR	90017	Symbol	NULL		89917						
ANR	90018	Symbol	data		89917						
ANR	90019	Symbol	l -> head		89917						
ANR	90020	Symbol	l -> persistent		89917						
ANR	90021	Symbol	l -> tail		89917						
ANR	90022	Symbol	l		89917						
ANR	90023	Symbol	* old_tail		89917						
ANR	90024	Symbol	old_tail		89917						
ANR	90025	Symbol	old_tail -> data		89917						
ANR	90026	Symbol	old_tail -> prev		89917						
ANR	90027	Symbol	l -> dtor		89917						
ANR	90028	Symbol	* l		89917						
ANR	90029	Symbol	* * old_tail		89917						
ANR	90030	Symbol	old_tail -> prev -> next		89917						
ANR	90031	Function	zend_llist_copy	158:0:3703:3955							
ANR	90032	FunctionDef	"zend_llist_copy (zend_llist * dst , zend_llist * src)"		90031	0					
ANR	90033	CompoundStatement		159:0:3767:3955	90031	0					
ANR	90034	IdentifierDeclStatement	zend_llist_element * ptr ;	160:1:3770:3793	90031	0	True				
ANR	90035	IdentifierDecl	* ptr		90031	0					
ANR	90036	IdentifierDeclType	zend_llist_element *		90031	0					
ANR	90037	Identifier	ptr		90031	1					
ANR	90038	ExpressionStatement	"zend_llist_init ( dst , src -> size , src -> dtor , src -> persistent )"	162:1:3797:3856	90031	1	True				
ANR	90039	CallExpression	"zend_llist_init ( dst , src -> size , src -> dtor , src -> persistent )"		90031	0					
ANR	90040	Callee	zend_llist_init		90031	0					
ANR	90041	Identifier	zend_llist_init		90031	0					
ANR	90042	ArgumentList	dst		90031	1					
ANR	90043	Argument	dst		90031	0					
ANR	90044	Identifier	dst		90031	0					
ANR	90045	Argument	src -> size		90031	1					
ANR	90046	PtrMemberAccess	src -> size		90031	0					
ANR	90047	Identifier	src		90031	0					
ANR	90048	Identifier	size		90031	1					
ANR	90049	Argument	src -> dtor		90031	2					
ANR	90050	PtrMemberAccess	src -> dtor		90031	0					
ANR	90051	Identifier	src		90031	0					
ANR	90052	Identifier	dtor		90031	1					
ANR	90053	Argument	src -> persistent		90031	3					
ANR	90054	PtrMemberAccess	src -> persistent		90031	0					
ANR	90055	Identifier	src		90031	0					
ANR	90056	Identifier	persistent		90031	1					
ANR	90057	ExpressionStatement	ptr = src -> head	163:1:3859:3874	90031	2	True				
ANR	90058	AssignmentExpression	ptr = src -> head		90031	0		=			
ANR	90059	Identifier	ptr		90031	0					
ANR	90060	PtrMemberAccess	src -> head		90031	1					
ANR	90061	Identifier	src		90031	0					
ANR	90062	Identifier	head		90031	1					
ANR	90063	WhileStatement	while ( ptr )		90031	3					
ANR	90064	Condition	ptr	164:8:3884:3886	90031	0	True				
ANR	90065	Identifier	ptr		90031	0					
ANR	90066	CompoundStatement		6:13:121:121	90031	1					
ANR	90067	ExpressionStatement	"zend_llist_add_element ( dst , ptr -> data )"	165:2:3893:3931	90031	0	True				
ANR	90068	CallExpression	"zend_llist_add_element ( dst , ptr -> data )"		90031	0					
ANR	90069	Callee	zend_llist_add_element		90031	0					
ANR	90070	Identifier	zend_llist_add_element		90031	0					
ANR	90071	ArgumentList	dst		90031	1					
ANR	90072	Argument	dst		90031	0					
ANR	90073	Identifier	dst		90031	0					
ANR	90074	Argument	ptr -> data		90031	1					
ANR	90075	PtrMemberAccess	ptr -> data		90031	0					
ANR	90076	Identifier	ptr		90031	0					
ANR	90077	Identifier	data		90031	1					
ANR	90078	ExpressionStatement	ptr = ptr -> next	166:2:3935:3950	90031	1	True				
ANR	90079	AssignmentExpression	ptr = ptr -> next		90031	0		=			
ANR	90080	Identifier	ptr		90031	0					
ANR	90081	PtrMemberAccess	ptr -> next		90031	1					
ANR	90082	Identifier	ptr		90031	0					
ANR	90083	Identifier	next		90031	1					
ANR	90084	ReturnType	ZEND_API void		90031	1					
ANR	90085	Identifier	zend_llist_copy		90031	2					
ANR	90086	ParameterList	"zend_llist * dst , zend_llist * src"		90031	3					
ANR	90087	Parameter	zend_llist * dst	158:30:3733:3747	90031	0	True				
ANR	90088	ParameterType	zend_llist *		90031	0					
ANR	90089	Identifier	dst		90031	1					
ANR	90090	Parameter	zend_llist * src	158:47:3750:3764	90031	1	True				
ANR	90091	ParameterType	zend_llist *		90031	0					
ANR	90092	Identifier	src		90031	1					
ANR	90093	CFGEntryNode	ENTRY		90031		True				
ANR	90094	CFGExitNode	EXIT		90031		True				
ANR	90095	Symbol	src -> dtor		90031						
ANR	90096	Symbol	dst		90031						
ANR	90097	Symbol	src		90031						
ANR	90098	Symbol	src -> head		90031						
ANR	90099	Symbol	* ptr		90031						
ANR	90100	Symbol	src -> persistent		90031						
ANR	90101	Symbol	ptr -> data		90031						
ANR	90102	Symbol	src -> size		90031						
ANR	90103	Symbol	* src		90031						
ANR	90104	Symbol	ptr		90031						
ANR	90105	Symbol	ptr -> next		90031						
ANR	90106	Function	zend_llist_apply_with_del	171:0:3959:4228							
ANR	90107	FunctionDef	"zend_llist_apply_with_del (zend_llist * l , int ( * func ) ( void * data ))"		90106	0					
ANR	90108	CompoundStatement		172:0:4039:4228	90106	0					
ANR	90109	IdentifierDeclStatement	"zend_llist_element * element , * next ;"	173:1:4042:4076	90106	0	True				
ANR	90110	IdentifierDecl	* element		90106	0					
ANR	90111	IdentifierDeclType	zend_llist_element *		90106	0					
ANR	90112	Identifier	element		90106	1					
ANR	90113	IdentifierDecl	* next		90106	1					
ANR	90114	IdentifierDeclType	zend_llist_element *		90106	0					
ANR	90115	Identifier	next		90106	1					
ANR	90116	ExpressionStatement	element = l -> head	175:1:4080:4095	90106	1	True				
ANR	90117	AssignmentExpression	element = l -> head		90106	0		=			
ANR	90118	Identifier	element		90106	0					
ANR	90119	PtrMemberAccess	l -> head		90106	1					
ANR	90120	Identifier	l		90106	0					
ANR	90121	Identifier	head		90106	1					
ANR	90122	WhileStatement	while ( element )		90106	2					
ANR	90123	Condition	element	176:8:4105:4111	90106	0	True				
ANR	90124	Identifier	element		90106	0					
ANR	90125	CompoundStatement		5:17:74:74	90106	1					
ANR	90126	ExpressionStatement	next = element -> next	177:2:4118:4138	90106	0	True				
ANR	90127	AssignmentExpression	next = element -> next		90106	0		=			
ANR	90128	Identifier	next		90106	0					
ANR	90129	PtrMemberAccess	element -> next		90106	1					
ANR	90130	Identifier	element		90106	0					
ANR	90131	Identifier	next		90106	1					
ANR	90132	IfStatement	if ( func ( element -> data ) )		90106	1					
ANR	90133	Condition	func ( element -> data )	178:6:4146:4164	90106	0	True				
ANR	90134	CallExpression	func ( element -> data )		90106	0					
ANR	90135	Callee	func		90106	0					
ANR	90136	Identifier	func		90106	0					
ANR	90137	ArgumentList	element -> data		90106	1					
ANR	90138	Argument	element -> data		90106	0					
ANR	90139	PtrMemberAccess	element -> data		90106	0					
ANR	90140	Identifier	element		90106	0					
ANR	90141	Identifier	data		90106	1					
ANR	90142	CompoundStatement		7:27:127:127	90106	1					
ANR	90143	ExpressionStatement	"DEL_LLIST_ELEMENT ( element , l )"	179:3:4172:4201	90106	0	True				
ANR	90144	CallExpression	"DEL_LLIST_ELEMENT ( element , l )"		90106	0					
ANR	90145	Callee	DEL_LLIST_ELEMENT		90106	0					
ANR	90146	Identifier	DEL_LLIST_ELEMENT		90106	0					
ANR	90147	ArgumentList	element		90106	1					
ANR	90148	Argument	element		90106	0					
ANR	90149	Identifier	element		90106	0					
ANR	90150	Argument	l		90106	1					
ANR	90151	Identifier	l		90106	0					
ANR	90152	ExpressionStatement	element = next	181:2:4209:4223	90106	2	True				
ANR	90153	AssignmentExpression	element = next		90106	0		=			
ANR	90154	Identifier	element		90106	0					
ANR	90155	Identifier	next		90106	1					
ANR	90156	ReturnType	ZEND_API void		90106	1					
ANR	90157	Identifier	zend_llist_apply_with_del		90106	2					
ANR	90158	ParameterList	"zend_llist * l , int ( * func ) ( void * data )"		90106	3					
ANR	90159	Parameter	zend_llist * l	171:40:3999:4011	90106	0	True				
ANR	90160	ParameterType	zend_llist *		90106	0					
ANR	90161	Identifier	l		90106	1					
ANR	90162	Parameter	int ( * func ) ( void * data )	171:55:4014:4036	90106	1	True				
ANR	90163	ParameterType	(( void * data ) int) *		90106	0					
ANR	90164	Identifier	func		90106	1					
ANR	90165	CFGEntryNode	ENTRY		90106		True				
ANR	90166	CFGExitNode	EXIT		90106		True				
ANR	90167	Symbol	next		90106						
ANR	90168	Symbol	func		90106						
ANR	90169	Symbol	* element		90106						
ANR	90170	Symbol	l -> head		90106						
ANR	90171	Symbol	* l		90106						
ANR	90172	Symbol	element -> data		90106						
ANR	90173	Symbol	l		90106						
ANR	90174	Symbol	element -> next		90106						
ANR	90175	Symbol	element		90106						
ANR	90176	Function	zend_llist_apply	186:0:4232:4439							
ANR	90177	FunctionDef	"zend_llist_apply (zend_llist * l , llist_apply_func_t func TSRMLS_DC)"		90176	0					
ANR	90178	CompoundStatement		187:0:4313:4439	90176	0					
ANR	90179	IdentifierDeclStatement	zend_llist_element * element ;	188:1:4316:4343	90176	0	True				
ANR	90180	IdentifierDecl	* element		90176	0					
ANR	90181	IdentifierDeclType	zend_llist_element *		90176	0					
ANR	90182	Identifier	element		90176	1					
ANR	90183	ForStatement	for ( element = l -> head ; element ; element = element -> next )		90176	1					
ANR	90184	ForInit	element = l -> head ;	190:6:4352:4367	90176	0	True				
ANR	90185	AssignmentExpression	element = l -> head		90176	0		=			
ANR	90186	Identifier	element		90176	0					
ANR	90187	PtrMemberAccess	l -> head		90176	1					
ANR	90188	Identifier	l		90176	0					
ANR	90189	Identifier	head		90176	1					
ANR	90190	Condition	element	190:23:4369:4375	90176	1	True				
ANR	90191	Identifier	element		90176	0					
ANR	90192	AssignmentExpression	element = element -> next	190:32:4378:4398	90176	2	True	=			
ANR	90193	Identifier	element		90176	0					
ANR	90194	PtrMemberAccess	element -> next		90176	1					
ANR	90195	Identifier	element		90176	0					
ANR	90196	Identifier	next		90176	1					
ANR	90197	CompoundStatement		4:55:87:87	90176	3					
ANR	90198	Statement	func	191:2:4405:4408	90176	0	True				
ANR	90199	Statement	(	191:6:4409:4409	90176	1	True				
ANR	90200	Statement	element	191:7:4410:4416	90176	2	True				
ANR	90201	Statement	->	191:14:4417:4418	90176	3	True				
ANR	90202	Statement	data	191:16:4419:4422	90176	4	True				
ANR	90203	Statement	TSRMLS_CC	191:21:4424:4432	90176	5	True				
ANR	90204	Statement	)	191:30:4433:4433	90176	6	True				
ANR	90205	ExpressionStatement		191:31:4434:4434	90176	7	True				
ANR	90206	ReturnType	ZEND_API void		90176	1					
ANR	90207	Identifier	zend_llist_apply		90176	2					
ANR	90208	ParameterList	"zend_llist * l , llist_apply_func_t func TSRMLS_DC"		90176	3					
ANR	90209	Parameter	zend_llist * l	186:31:4263:4275	90176	0	True				
ANR	90210	ParameterType	zend_llist *		90176	0					
ANR	90211	Identifier	l		90176	1					
ANR	90212	Parameter	llist_apply_func_t func TSRMLS_DC	186:46:4278:4310	90176	1	True				
ANR	90213	ParameterType	llist_apply_func_t func		90176	0					
ANR	90214	Identifier	TSRMLS_DC		90176	1					
ANR	90215	CFGEntryNode	ENTRY		90176		True				
ANR	90216	CFGExitNode	EXIT		90176		True				
ANR	90217	Symbol	* element		90176						
ANR	90218	Symbol	* l		90176						
ANR	90219	Symbol	l -> head		90176						
ANR	90220	Symbol	l		90176						
ANR	90221	Symbol	TSRMLS_DC		90176						
ANR	90222	Symbol	element -> next		90176						
ANR	90223	Symbol	element		90176						
ANR	90224	Function	zend_llist_sort	195:0:4442:5177							
ANR	90225	FunctionDef	"zend_llist_sort (zend_llist * l , llist_compare_func_t comp_func TSRMLS_DC)"		90224	0					
ANR	90226	CompoundStatement		196:0:4529:5177	90224	0					
ANR	90227	IdentifierDeclStatement	size_t i ;	197:1:4532:4540	90224	0	True				
ANR	90228	IdentifierDecl	i		90224	0					
ANR	90229	IdentifierDeclType	size_t		90224	0					
ANR	90230	Identifier	i		90224	1					
ANR	90231	IdentifierDeclStatement	zend_llist_element * * elements ;	199:1:4544:4573	90224	1	True				
ANR	90232	IdentifierDecl	* * elements		90224	0					
ANR	90233	IdentifierDeclType	zend_llist_element * *		90224	0					
ANR	90234	Identifier	elements		90224	1					
ANR	90235	IdentifierDeclStatement	"zend_llist_element * element , * * ptr ;"	200:1:4576:4610	90224	2	True				
ANR	90236	IdentifierDecl	* element		90224	0					
ANR	90237	IdentifierDeclType	zend_llist_element *		90224	0					
ANR	90238	Identifier	element		90224	1					
ANR	90239	IdentifierDecl	* * ptr		90224	1					
ANR	90240	IdentifierDeclType	zend_llist_element * *		90224	0					
ANR	90241	Identifier	ptr		90224	1					
ANR	90242	IfStatement	if ( l -> count <= 0 )		90224	3					
ANR	90243	Condition	l -> count <= 0	202:5:4618:4630	90224	0	True				
ANR	90244	RelationalExpression	l -> count <= 0		90224	0		<=			
ANR	90245	PtrMemberAccess	l -> count		90224	0					
ANR	90246	Identifier	l		90224	0					
ANR	90247	Identifier	count		90224	1					
ANR	90248	PrimaryExpression	0		90224	1					
ANR	90249	CompoundStatement		7:20:103:103	90224	1					
ANR	90250	ReturnStatement	return ;	203:2:4637:4643	90224	0	True				
ANR	90251	ExpressionStatement	elements = ( zend_llist_element * * ) emalloc ( l -> count * sizeof ( zend_llist_element * ) )	206:1:4650:4733	90224	4	True				
ANR	90252	AssignmentExpression	elements = ( zend_llist_element * * ) emalloc ( l -> count * sizeof ( zend_llist_element * ) )		90224	0		=			
ANR	90253	Identifier	elements		90224	0					
ANR	90254	CastExpression	( zend_llist_element * * ) emalloc ( l -> count * sizeof ( zend_llist_element * ) )		90224	1					
ANR	90255	CastTarget	zend_llist_element * *		90224	0					
ANR	90256	CallExpression	emalloc ( l -> count * sizeof ( zend_llist_element * ) )		90224	1					
ANR	90257	Callee	emalloc		90224	0					
ANR	90258	Identifier	emalloc		90224	0					
ANR	90259	ArgumentList	l -> count * sizeof ( zend_llist_element * )		90224	1					
ANR	90260	Argument	l -> count * sizeof ( zend_llist_element * )		90224	0					
ANR	90261	MultiplicativeExpression	l -> count * sizeof ( zend_llist_element * )		90224	0		*			
ANR	90262	PtrMemberAccess	l -> count		90224	0					
ANR	90263	Identifier	l		90224	0					
ANR	90264	Identifier	count		90224	1					
ANR	90265	SizeofExpression	sizeof ( zend_llist_element * )		90224	1					
ANR	90266	Sizeof	sizeof		90224	0					
ANR	90267	SizeofOperand	zend_llist_element *		90224	1					
ANR	90268	ExpressionStatement	ptr = & elements [ 0 ]	208:1:4737:4755	90224	5	True				
ANR	90269	AssignmentExpression	ptr = & elements [ 0 ]		90224	0		=			
ANR	90270	Identifier	ptr		90224	0					
ANR	90271	UnaryOperationExpression	& elements [ 0 ]		90224	1					
ANR	90272	UnaryOperator	&		90224	0					
ANR	90273	ArrayIndexing	elements [ 0 ]		90224	1					
ANR	90274	Identifier	elements		90224	0					
ANR	90275	PrimaryExpression	0		90224	1					
ANR	90276	ForStatement	for ( element = l -> head ; element ; element = element -> next )		90224	6					
ANR	90277	ForInit	element = l -> head ;	210:6:4764:4779	90224	0	True				
ANR	90278	AssignmentExpression	element = l -> head		90224	0		=			
ANR	90279	Identifier	element		90224	0					
ANR	90280	PtrMemberAccess	l -> head		90224	1					
ANR	90281	Identifier	l		90224	0					
ANR	90282	Identifier	head		90224	1					
ANR	90283	Condition	element	210:23:4781:4787	90224	1	True				
ANR	90284	Identifier	element		90224	0					
ANR	90285	AssignmentExpression	element = element -> next	210:32:4790:4810	90224	2	True	=			
ANR	90286	Identifier	element		90224	0					
ANR	90287	PtrMemberAccess	element -> next		90224	1					
ANR	90288	Identifier	element		90224	0					
ANR	90289	Identifier	next		90224	1					
ANR	90290	CompoundStatement		15:55:283:283	90224	3					
ANR	90291	ExpressionStatement	* ptr ++ = element	211:2:4817:4833	90224	0	True				
ANR	90292	AssignmentExpression	* ptr ++ = element		90224	0		=			
ANR	90293	UnaryOperationExpression	* ptr ++		90224	0					
ANR	90294	UnaryOperator	*		90224	0					
ANR	90295	PostIncDecOperationExpression	ptr ++		90224	1					
ANR	90296	Identifier	ptr		90224	0					
ANR	90297	IncDec	++		90224	1					
ANR	90298	Identifier	element		90224	1					
ANR	90299	Statement	zend_qsort	214:1:4840:4849	90224	7	True				
ANR	90300	Statement	(	214:11:4850:4850	90224	8	True				
ANR	90301	Statement	elements	214:12:4851:4858	90224	9	True				
ANR	90302	Statement	","	214:20:4859:4859	90224	10	True				
ANR	90303	Statement	l	214:22:4861:4861	90224	11	True				
ANR	90304	Statement	->	214:23:4862:4863	90224	12	True				
ANR	90305	Statement	count	214:25:4864:4868	90224	13	True				
ANR	90306	Statement	","	214:30:4869:4869	90224	14	True				
ANR	90307	Statement	sizeof	214:32:4871:4876	90224	15	True				
ANR	90308	Statement	(	214:38:4877:4877	90224	16	True				
ANR	90309	Statement	zend_llist_element	214:39:4878:4895	90224	17	True				
ANR	90310	Statement	*	214:58:4897:4897	90224	18	True				
ANR	90311	Statement	)	214:59:4898:4898	90224	19	True				
ANR	90312	Statement	","	214:60:4899:4899	90224	20	True				
ANR	90313	Statement	(	214:62:4901:4901	90224	21	True				
ANR	90314	Statement	compare_func_t	214:63:4902:4915	90224	22	True				
ANR	90315	Statement	)	214:77:4916:4916	90224	23	True				
ANR	90316	Statement	comp_func	214:79:4918:4926	90224	24	True				
ANR	90317	Statement	TSRMLS_CC	214:89:4928:4936	90224	25	True				
ANR	90318	Statement	)	214:98:4937:4937	90224	26	True				
ANR	90319	ExpressionStatement		214:99:4938:4938	90224	27	True				
ANR	90320	ExpressionStatement	l -> head = elements [ 0 ]	216:1:4942:4963	90224	28	True				
ANR	90321	AssignmentExpression	l -> head = elements [ 0 ]		90224	0		=			
ANR	90322	PtrMemberAccess	l -> head		90224	0					
ANR	90323	Identifier	l		90224	0					
ANR	90324	Identifier	head		90224	1					
ANR	90325	ArrayIndexing	elements [ 0 ]		90224	1					
ANR	90326	Identifier	elements		90224	0					
ANR	90327	PrimaryExpression	0		90224	1					
ANR	90328	ExpressionStatement	elements [ 0 ] -> prev = NULL	217:1:4966:4990	90224	29	True				
ANR	90329	AssignmentExpression	elements [ 0 ] -> prev = NULL		90224	0		=			
ANR	90330	PtrMemberAccess	elements [ 0 ] -> prev		90224	0					
ANR	90331	ArrayIndexing	elements [ 0 ]		90224	0					
ANR	90332	Identifier	elements		90224	0					
ANR	90333	PrimaryExpression	0		90224	1					
ANR	90334	Identifier	prev		90224	1					
ANR	90335	Identifier	NULL		90224	1					
ANR	90336	ForStatement	for ( i = 1 ; i < l -> count ; i ++ )		90224	30					
ANR	90337	ForInit	i = 1 ;	219:6:4999:5004	90224	0	True				
ANR	90338	AssignmentExpression	i = 1		90224	0		=			
ANR	90339	Identifier	i		90224	0					
ANR	90340	PrimaryExpression	1		90224	1					
ANR	90341	Condition	i < l -> count	219:13:5006:5017	90224	1	True				
ANR	90342	RelationalExpression	i < l -> count		90224	0		<			
ANR	90343	Identifier	i		90224	0					
ANR	90344	PtrMemberAccess	l -> count		90224	1					
ANR	90345	Identifier	l		90224	0					
ANR	90346	Identifier	count		90224	1					
ANR	90347	PostIncDecOperationExpression	i ++	219:27:5020:5022	90224	2	True				
ANR	90348	Identifier	i		90224	0					
ANR	90349	IncDec	++		90224	1					
ANR	90350	CompoundStatement		24:32:495:495	90224	3					
ANR	90351	ExpressionStatement	elements [ i ] -> prev = elements [ i - 1 ]	220:2:5029:5062	90224	0	True				
ANR	90352	AssignmentExpression	elements [ i ] -> prev = elements [ i - 1 ]		90224	0		=			
ANR	90353	PtrMemberAccess	elements [ i ] -> prev		90224	0					
ANR	90354	ArrayIndexing	elements [ i ]		90224	0					
ANR	90355	Identifier	elements		90224	0					
ANR	90356	Identifier	i		90224	1					
ANR	90357	Identifier	prev		90224	1					
ANR	90358	ArrayIndexing	elements [ i - 1 ]		90224	1					
ANR	90359	Identifier	elements		90224	0					
ANR	90360	AdditiveExpression	i - 1		90224	1		-			
ANR	90361	Identifier	i		90224	0					
ANR	90362	PrimaryExpression	1		90224	1					
ANR	90363	ExpressionStatement	elements [ i - 1 ] -> next = elements [ i ]	221:2:5066:5099	90224	1	True				
ANR	90364	AssignmentExpression	elements [ i - 1 ] -> next = elements [ i ]		90224	0		=			
ANR	90365	PtrMemberAccess	elements [ i - 1 ] -> next		90224	0					
ANR	90366	ArrayIndexing	elements [ i - 1 ]		90224	0					
ANR	90367	Identifier	elements		90224	0					
ANR	90368	AdditiveExpression	i - 1		90224	1		-			
ANR	90369	Identifier	i		90224	0					
ANR	90370	PrimaryExpression	1		90224	1					
ANR	90371	Identifier	next		90224	1					
ANR	90372	ArrayIndexing	elements [ i ]		90224	1					
ANR	90373	Identifier	elements		90224	0					
ANR	90374	Identifier	i		90224	1					
ANR	90375	ExpressionStatement	elements [ i - 1 ] -> next = NULL	223:1:5105:5131	90224	31	True				
ANR	90376	AssignmentExpression	elements [ i - 1 ] -> next = NULL		90224	0		=			
ANR	90377	PtrMemberAccess	elements [ i - 1 ] -> next		90224	0					
ANR	90378	ArrayIndexing	elements [ i - 1 ]		90224	0					
ANR	90379	Identifier	elements		90224	0					
ANR	90380	AdditiveExpression	i - 1		90224	1		-			
ANR	90381	Identifier	i		90224	0					
ANR	90382	PrimaryExpression	1		90224	1					
ANR	90383	Identifier	next		90224	1					
ANR	90384	Identifier	NULL		90224	1					
ANR	90385	ExpressionStatement	l -> tail = elements [ i - 1 ]	224:1:5134:5157	90224	32	True				
ANR	90386	AssignmentExpression	l -> tail = elements [ i - 1 ]		90224	0		=			
ANR	90387	PtrMemberAccess	l -> tail		90224	0					
ANR	90388	Identifier	l		90224	0					
ANR	90389	Identifier	tail		90224	1					
ANR	90390	ArrayIndexing	elements [ i - 1 ]		90224	1					
ANR	90391	Identifier	elements		90224	0					
ANR	90392	AdditiveExpression	i - 1		90224	1		-			
ANR	90393	Identifier	i		90224	0					
ANR	90394	PrimaryExpression	1		90224	1					
ANR	90395	ExpressionStatement	efree ( elements )	225:1:5160:5175	90224	33	True				
ANR	90396	CallExpression	efree ( elements )		90224	0					
ANR	90397	Callee	efree		90224	0					
ANR	90398	Identifier	efree		90224	0					
ANR	90399	ArgumentList	elements		90224	1					
ANR	90400	Argument	elements		90224	0					
ANR	90401	Identifier	elements		90224	0					
ANR	90402	ReturnType	ZEND_API void		90224	1					
ANR	90403	Identifier	zend_llist_sort		90224	2					
ANR	90404	ParameterList	"zend_llist * l , llist_compare_func_t comp_func TSRMLS_DC"		90224	3					
ANR	90405	Parameter	zend_llist * l	195:30:4472:4484	90224	0	True				
ANR	90406	ParameterType	zend_llist *		90224	0					
ANR	90407	Identifier	l		90224	1					
ANR	90408	Parameter	llist_compare_func_t comp_func TSRMLS_DC	195:45:4487:4526	90224	1	True				
ANR	90409	ParameterType	llist_compare_func_t comp_func		90224	0					
ANR	90410	Identifier	TSRMLS_DC		90224	1					
ANR	90411	CFGEntryNode	ENTRY		90224		True				
ANR	90412	CFGExitNode	EXIT		90224		True				
ANR	90413	Symbol	* * i		90224						
ANR	90414	Symbol	NULL		90224						
ANR	90415	Symbol	* element		90224						
ANR	90416	Symbol	elements [ i ] -> prev		90224						
ANR	90417	Symbol	l -> head		90224						
ANR	90418	Symbol	* ptr ++		90224						
ANR	90419	Symbol	i		90224						
ANR	90420	Symbol	l -> tail		90224						
ANR	90421	Symbol	l		90224						
ANR	90422	Symbol	TSRMLS_DC		90224						
ANR	90423	Symbol	elements [ i - 1 ] -> next		90224						
ANR	90424	Symbol	ptr		90224						
ANR	90425	Symbol	emalloc		90224						
ANR	90426	Symbol	elements [ 0 ] -> prev		90224						
ANR	90427	Symbol	* i		90224						
ANR	90428	Symbol	* * elements		90224						
ANR	90429	Symbol	* l		90224						
ANR	90430	Symbol	* elements		90224						
ANR	90431	Symbol	elements		90224						
ANR	90432	Symbol	l -> count		90224						
ANR	90433	Symbol	element -> next		90224						
ANR	90434	Symbol	element		90224						
ANR	90435	DeclStmt									
ANR	90436	Decl							zend_llist_element	zend_llist_element *	element
ANR	90437	Function	zend_llist_apply_with_arguments	239:0:5431:5755							
ANR	90438	FunctionDef	"zend_llist_apply_with_arguments (zend_llist * l , llist_apply_with_args_func_t func TSRMLS_DC , int num_args)"		90437	0					
ANR	90439	CompoundStatement		240:0:5556:5755	90437	0					
ANR	90440	IdentifierDeclStatement	zend_llist_element * element ;	241:1:5559:5586	90437	0	True				
ANR	90441	IdentifierDecl	* element		90437	0					
ANR	90442	IdentifierDeclType	zend_llist_element *		90437	0					
ANR	90443	Identifier	element		90437	1					
ANR	90444	IdentifierDeclStatement	va_list args ;	242:1:5589:5601	90437	1	True				
ANR	90445	IdentifierDecl	args		90437	0					
ANR	90446	IdentifierDeclType	va_list		90437	0					
ANR	90447	Identifier	args		90437	1					
ANR	90448	ExpressionStatement	"va_start ( args , num_args )"	244:1:5605:5629	90437	2	True				
ANR	90449	CallExpression	"va_start ( args , num_args )"		90437	0					
ANR	90450	Callee	va_start		90437	0					
ANR	90451	Identifier	va_start		90437	0					
ANR	90452	ArgumentList	args		90437	1					
ANR	90453	Argument	args		90437	0					
ANR	90454	Identifier	args		90437	0					
ANR	90455	Argument	num_args		90437	1					
ANR	90456	Identifier	num_args		90437	0					
ANR	90457	ForStatement	for ( element = l -> head ; element ; element = element -> next )		90437	3					
ANR	90458	ForInit	element = l -> head ;	245:6:5637:5652	90437	0	True				
ANR	90459	AssignmentExpression	element = l -> head		90437	0		=			
ANR	90460	Identifier	element		90437	0					
ANR	90461	PtrMemberAccess	l -> head		90437	1					
ANR	90462	Identifier	l		90437	0					
ANR	90463	Identifier	head		90437	1					
ANR	90464	Condition	element	245:23:5654:5660	90437	1	True				
ANR	90465	Identifier	element		90437	0					
ANR	90466	AssignmentExpression	element = element -> next	245:32:5663:5683	90437	2	True	=			
ANR	90467	Identifier	element		90437	0					
ANR	90468	PtrMemberAccess	element -> next		90437	1					
ANR	90469	Identifier	element		90437	0					
ANR	90470	Identifier	next		90437	1					
ANR	90471	CompoundStatement		6:55:129:129	90437	3					
ANR	90472	Statement	func	246:2:5690:5693	90437	0	True				
ANR	90473	Statement	(	246:6:5694:5694	90437	1	True				
ANR	90474	Statement	element	246:7:5695:5701	90437	2	True				
ANR	90475	Statement	->	246:14:5702:5703	90437	3	True				
ANR	90476	Statement	data	246:16:5704:5707	90437	4	True				
ANR	90477	Statement	","	246:20:5708:5708	90437	5	True				
ANR	90478	Statement	num_args	246:22:5710:5717	90437	6	True				
ANR	90479	Statement	","	246:30:5718:5718	90437	7	True				
ANR	90480	Statement	args	246:32:5720:5723	90437	8	True				
ANR	90481	Statement	TSRMLS_CC	246:37:5725:5733	90437	9	True				
ANR	90482	Statement	)	246:46:5734:5734	90437	10	True				
ANR	90483	ExpressionStatement		246:47:5735:5735	90437	11	True				
ANR	90484	ExpressionStatement	va_end ( args )	248:1:5741:5753	90437	4	True				
ANR	90485	CallExpression	va_end ( args )		90437	0					
ANR	90486	Callee	va_end		90437	0					
ANR	90487	Identifier	va_end		90437	0					
ANR	90488	ArgumentList	args		90437	1					
ANR	90489	Argument	args		90437	0					
ANR	90490	Identifier	args		90437	0					
ANR	90491	ReturnType	ZEND_API void		90437	1					
ANR	90492	Identifier	zend_llist_apply_with_arguments		90437	2					
ANR	90493	ParameterList	"zend_llist * l , llist_apply_with_args_func_t func TSRMLS_DC , int num_args"		90437	3					
ANR	90494	Parameter	zend_llist * l	239:46:5477:5489	90437	0	True				
ANR	90495	ParameterType	zend_llist *		90437	0					
ANR	90496	Identifier	l		90437	1					
ANR	90497	Parameter	llist_apply_with_args_func_t func TSRMLS_DC	239:61:5492:5534	90437	1	True				
ANR	90498	ParameterType	llist_apply_with_args_func_t func		90437	0					
ANR	90499	Identifier	TSRMLS_DC		90437	1					
ANR	90500	Parameter	int num_args	239:106:5537:5548	90437	2	True				
ANR	90501	ParameterType	int		90437	0					
ANR	90502	Identifier	num_args		90437	1					
ANR	90503	CFGEntryNode	ENTRY		90437		True				
ANR	90504	CFGExitNode	EXIT		90437		True				
ANR	90505	Symbol	args		90437						
ANR	90506	Symbol	* element		90437						
ANR	90507	Symbol	num_args		90437						
ANR	90508	Symbol	* l		90437						
ANR	90509	Symbol	l -> head		90437						
ANR	90510	Symbol	l		90437						
ANR	90511	Symbol	TSRMLS_DC		90437						
ANR	90512	Symbol	element -> next		90437						
ANR	90513	Symbol	element		90437						
ANR	90514	Function	zend_llist_count	252:0:5759:5824							
ANR	90515	FunctionDef	zend_llist_count (zend_llist * l)		90514	0					
ANR	90516	CompoundStatement		253:0:5804:5824	90514	0					
ANR	90517	ReturnStatement	return l -> count ;	254:1:5807:5822	90514	0	True				
ANR	90518	PtrMemberAccess	l -> count		90514	0					
ANR	90519	Identifier	l		90514	0					
ANR	90520	Identifier	count		90514	1					
ANR	90521	ReturnType	ZEND_API int		90514	1					
ANR	90522	Identifier	zend_llist_count		90514	2					
ANR	90523	ParameterList	zend_llist * l		90514	3					
ANR	90524	Parameter	zend_llist * l	252:30:5789:5801	90514	0	True				
ANR	90525	ParameterType	zend_llist *		90514	0					
ANR	90526	Identifier	l		90514	1					
ANR	90527	CFGEntryNode	ENTRY		90514		True				
ANR	90528	CFGExitNode	EXIT		90514		True				
ANR	90529	Symbol	* l		90514						
ANR	90530	Symbol	l -> count		90514						
ANR	90531	Symbol	l		90514						
ANR	90532	Function	zend_llist_get_first_ex	258:0:5828:6066							
ANR	90533	FunctionDef	"zend_llist_get_first_ex (zend_llist * l , zend_llist_position * pos)"		90532	0					
ANR	90534	CompoundStatement		259:0:5908:6066	90532	0					
ANR	90535	IdentifierDeclStatement	zend_llist_position * current = pos ? pos : & l -> traverse_ptr ;	260:1:5911:5970	90532	0	True				
ANR	90536	IdentifierDecl	* current = pos ? pos : & l -> traverse_ptr		90532	0					
ANR	90537	IdentifierDeclType	zend_llist_position *		90532	0					
ANR	90538	Identifier	current		90532	1					
ANR	90539	AssignmentExpression	* current = pos ? pos : & l -> traverse_ptr		90532	2		=			
ANR	90540	Identifier	current		90532	0					
ANR	90541	ConditionalExpression	pos ? pos : & l -> traverse_ptr		90532	1					
ANR	90542	Condition	pos		90532	0					
ANR	90543	Identifier	pos		90532	0					
ANR	90544	Identifier	pos		90532	1					
ANR	90545	UnaryOperationExpression	& l -> traverse_ptr		90532	2					
ANR	90546	UnaryOperator	&		90532	0					
ANR	90547	PtrMemberAccess	l -> traverse_ptr		90532	1					
ANR	90548	Identifier	l		90532	0					
ANR	90549	Identifier	traverse_ptr		90532	1					
ANR	90550	ExpressionStatement	* current = l -> head	262:1:5974:5992	90532	1	True				
ANR	90551	AssignmentExpression	* current = l -> head		90532	0		=			
ANR	90552	UnaryOperationExpression	* current		90532	0					
ANR	90553	UnaryOperator	*		90532	0					
ANR	90554	Identifier	current		90532	1					
ANR	90555	PtrMemberAccess	l -> head		90532	1					
ANR	90556	Identifier	l		90532	0					
ANR	90557	Identifier	head		90532	1					
ANR	90558	IfStatement	if ( * current )		90532	2					
ANR	90559	Condition	* current	263:5:5999:6006	90532	0	True				
ANR	90560	UnaryOperationExpression	* current		90532	0					
ANR	90561	UnaryOperator	*		90532	0					
ANR	90562	Identifier	current		90532	1					
ANR	90563	CompoundStatement		5:15:100:100	90532	1					
ANR	90564	ReturnStatement	return ( * current ) -> data ;	264:2:6013:6036	90532	0	True				
ANR	90565	PtrMemberAccess	( * current ) -> data		90532	0					
ANR	90566	UnaryOperationExpression	* current		90532	0					
ANR	90567	UnaryOperator	*		90532	0					
ANR	90568	Identifier	current		90532	1					
ANR	90569	Identifier	data		90532	1					
ANR	90570	ElseStatement	else		90532	0					
ANR	90571	CompoundStatement		7:8:137:137	90532	0					
ANR	90572	ReturnStatement	return NULL ;	266:2:6050:6061	90532	0	True				
ANR	90573	Identifier	NULL		90532	0					
ANR	90574	ReturnType	ZEND_API void *		90532	1					
ANR	90575	Identifier	zend_llist_get_first_ex		90532	2					
ANR	90576	ParameterList	"zend_llist * l , zend_llist_position * pos"		90532	3					
ANR	90577	Parameter	zend_llist * l	258:39:5867:5879	90532	0	True				
ANR	90578	ParameterType	zend_llist *		90532	0					
ANR	90579	Identifier	l		90532	1					
ANR	90580	Parameter	zend_llist_position * pos	258:54:5882:5905	90532	1	True				
ANR	90581	ParameterType	zend_llist_position *		90532	0					
ANR	90582	Identifier	pos		90532	1					
ANR	90583	CFGEntryNode	ENTRY		90532		True				
ANR	90584	CFGExitNode	EXIT		90532		True				
ANR	90585	Symbol	( * current ) -> data		90532						
ANR	90586	Symbol	current		90532						
ANR	90587	Symbol	* * current		90532						
ANR	90588	Symbol	& l -> traverse_ptr		90532						
ANR	90589	Symbol	NULL		90532						
ANR	90590	Symbol	pos		90532						
ANR	90591	Symbol	l -> head		90532						
ANR	90592	Symbol	* l		90532						
ANR	90593	Symbol	* current		90532						
ANR	90594	Symbol	l		90532						
ANR	90595	Function	zend_llist_get_last_ex	271:0:6070:6307							
ANR	90596	FunctionDef	"zend_llist_get_last_ex (zend_llist * l , zend_llist_position * pos)"		90595	0					
ANR	90597	CompoundStatement		272:0:6149:6307	90595	0					
ANR	90598	IdentifierDeclStatement	zend_llist_position * current = pos ? pos : & l -> traverse_ptr ;	273:1:6152:6211	90595	0	True				
ANR	90599	IdentifierDecl	* current = pos ? pos : & l -> traverse_ptr		90595	0					
ANR	90600	IdentifierDeclType	zend_llist_position *		90595	0					
ANR	90601	Identifier	current		90595	1					
ANR	90602	AssignmentExpression	* current = pos ? pos : & l -> traverse_ptr		90595	2		=			
ANR	90603	Identifier	current		90595	0					
ANR	90604	ConditionalExpression	pos ? pos : & l -> traverse_ptr		90595	1					
ANR	90605	Condition	pos		90595	0					
ANR	90606	Identifier	pos		90595	0					
ANR	90607	Identifier	pos		90595	1					
ANR	90608	UnaryOperationExpression	& l -> traverse_ptr		90595	2					
ANR	90609	UnaryOperator	&		90595	0					
ANR	90610	PtrMemberAccess	l -> traverse_ptr		90595	1					
ANR	90611	Identifier	l		90595	0					
ANR	90612	Identifier	traverse_ptr		90595	1					
ANR	90613	ExpressionStatement	* current = l -> tail	275:1:6215:6233	90595	1	True				
ANR	90614	AssignmentExpression	* current = l -> tail		90595	0		=			
ANR	90615	UnaryOperationExpression	* current		90595	0					
ANR	90616	UnaryOperator	*		90595	0					
ANR	90617	Identifier	current		90595	1					
ANR	90618	PtrMemberAccess	l -> tail		90595	1					
ANR	90619	Identifier	l		90595	0					
ANR	90620	Identifier	tail		90595	1					
ANR	90621	IfStatement	if ( * current )		90595	2					
ANR	90622	Condition	* current	276:5:6240:6247	90595	0	True				
ANR	90623	UnaryOperationExpression	* current		90595	0					
ANR	90624	UnaryOperator	*		90595	0					
ANR	90625	Identifier	current		90595	1					
ANR	90626	CompoundStatement		5:15:100:100	90595	1					
ANR	90627	ReturnStatement	return ( * current ) -> data ;	277:2:6254:6277	90595	0	True				
ANR	90628	PtrMemberAccess	( * current ) -> data		90595	0					
ANR	90629	UnaryOperationExpression	* current		90595	0					
ANR	90630	UnaryOperator	*		90595	0					
ANR	90631	Identifier	current		90595	1					
ANR	90632	Identifier	data		90595	1					
ANR	90633	ElseStatement	else		90595	0					
ANR	90634	CompoundStatement		7:8:137:137	90595	0					
ANR	90635	ReturnStatement	return NULL ;	279:2:6291:6302	90595	0	True				
ANR	90636	Identifier	NULL		90595	0					
ANR	90637	ReturnType	ZEND_API void *		90595	1					
ANR	90638	Identifier	zend_llist_get_last_ex		90595	2					
ANR	90639	ParameterList	"zend_llist * l , zend_llist_position * pos"		90595	3					
ANR	90640	Parameter	zend_llist * l	271:38:6108:6120	90595	0	True				
ANR	90641	ParameterType	zend_llist *		90595	0					
ANR	90642	Identifier	l		90595	1					
ANR	90643	Parameter	zend_llist_position * pos	271:53:6123:6146	90595	1	True				
ANR	90644	ParameterType	zend_llist_position *		90595	0					
ANR	90645	Identifier	pos		90595	1					
ANR	90646	CFGEntryNode	ENTRY		90595		True				
ANR	90647	CFGExitNode	EXIT		90595		True				
ANR	90648	Symbol	( * current ) -> data		90595						
ANR	90649	Symbol	current		90595						
ANR	90650	Symbol	* * current		90595						
ANR	90651	Symbol	& l -> traverse_ptr		90595						
ANR	90652	Symbol	NULL		90595						
ANR	90653	Symbol	pos		90595						
ANR	90654	Symbol	* l		90595						
ANR	90655	Symbol	* current		90595						
ANR	90656	Symbol	l -> tail		90595						
ANR	90657	Symbol	l		90595						
ANR	90658	Function	zend_llist_get_next_ex	284:0:6311:6570							
ANR	90659	FunctionDef	"zend_llist_get_next_ex (zend_llist * l , zend_llist_position * pos)"		90658	0					
ANR	90660	CompoundStatement		285:0:6390:6570	90658	0					
ANR	90661	IdentifierDeclStatement	zend_llist_position * current = pos ? pos : & l -> traverse_ptr ;	286:1:6393:6452	90658	0	True				
ANR	90662	IdentifierDecl	* current = pos ? pos : & l -> traverse_ptr		90658	0					
ANR	90663	IdentifierDeclType	zend_llist_position *		90658	0					
ANR	90664	Identifier	current		90658	1					
ANR	90665	AssignmentExpression	* current = pos ? pos : & l -> traverse_ptr		90658	2		=			
ANR	90666	Identifier	current		90658	0					
ANR	90667	ConditionalExpression	pos ? pos : & l -> traverse_ptr		90658	1					
ANR	90668	Condition	pos		90658	0					
ANR	90669	Identifier	pos		90658	0					
ANR	90670	Identifier	pos		90658	1					
ANR	90671	UnaryOperationExpression	& l -> traverse_ptr		90658	2					
ANR	90672	UnaryOperator	&		90658	0					
ANR	90673	PtrMemberAccess	l -> traverse_ptr		90658	1					
ANR	90674	Identifier	l		90658	0					
ANR	90675	Identifier	traverse_ptr		90658	1					
ANR	90676	IfStatement	if ( * current )		90658	1					
ANR	90677	Condition	* current	288:5:6460:6467	90658	0	True				
ANR	90678	UnaryOperationExpression	* current		90658	0					
ANR	90679	UnaryOperator	*		90658	0					
ANR	90680	Identifier	current		90658	1					
ANR	90681	CompoundStatement		4:15:79:79	90658	1					
ANR	90682	ExpressionStatement	* current = ( * current ) -> next	289:2:6474:6501	90658	0	True				
ANR	90683	AssignmentExpression	* current = ( * current ) -> next		90658	0		=			
ANR	90684	UnaryOperationExpression	* current		90658	0					
ANR	90685	UnaryOperator	*		90658	0					
ANR	90686	Identifier	current		90658	1					
ANR	90687	PtrMemberAccess	( * current ) -> next		90658	1					
ANR	90688	UnaryOperationExpression	* current		90658	0					
ANR	90689	UnaryOperator	*		90658	0					
ANR	90690	Identifier	current		90658	1					
ANR	90691	Identifier	next		90658	1					
ANR	90692	IfStatement	if ( * current )		90658	1					
ANR	90693	Condition	* current	290:6:6509:6516	90658	0	True				
ANR	90694	UnaryOperationExpression	* current		90658	0					
ANR	90695	UnaryOperator	*		90658	0					
ANR	90696	Identifier	current		90658	1					
ANR	90697	CompoundStatement		6:16:128:128	90658	1					
ANR	90698	ReturnStatement	return ( * current ) -> data ;	291:3:6524:6547	90658	0	True				
ANR	90699	PtrMemberAccess	( * current ) -> data		90658	0					
ANR	90700	UnaryOperationExpression	* current		90658	0					
ANR	90701	UnaryOperator	*		90658	0					
ANR	90702	Identifier	current		90658	1					
ANR	90703	Identifier	data		90658	1					
ANR	90704	ReturnStatement	return NULL ;	294:1:6557:6568	90658	2	True				
ANR	90705	Identifier	NULL		90658	0					
ANR	90706	ReturnType	ZEND_API void *		90658	1					
ANR	90707	Identifier	zend_llist_get_next_ex		90658	2					
ANR	90708	ParameterList	"zend_llist * l , zend_llist_position * pos"		90658	3					
ANR	90709	Parameter	zend_llist * l	284:38:6349:6361	90658	0	True				
ANR	90710	ParameterType	zend_llist *		90658	0					
ANR	90711	Identifier	l		90658	1					
ANR	90712	Parameter	zend_llist_position * pos	284:53:6364:6387	90658	1	True				
ANR	90713	ParameterType	zend_llist_position *		90658	0					
ANR	90714	Identifier	pos		90658	1					
ANR	90715	CFGEntryNode	ENTRY		90658		True				
ANR	90716	CFGExitNode	EXIT		90658		True				
ANR	90717	Symbol	( * current ) -> data		90658						
ANR	90718	Symbol	current		90658						
ANR	90719	Symbol	* * current		90658						
ANR	90720	Symbol	& l -> traverse_ptr		90658						
ANR	90721	Symbol	NULL		90658						
ANR	90722	Symbol	( * current ) -> next		90658						
ANR	90723	Symbol	pos		90658						
ANR	90724	Symbol	* current		90658						
ANR	90725	Symbol	l		90658						
ANR	90726	Function	zend_llist_get_prev_ex	298:0:6574:6833							
ANR	90727	FunctionDef	"zend_llist_get_prev_ex (zend_llist * l , zend_llist_position * pos)"		90726	0					
ANR	90728	CompoundStatement		299:0:6653:6833	90726	0					
ANR	90729	IdentifierDeclStatement	zend_llist_position * current = pos ? pos : & l -> traverse_ptr ;	300:1:6656:6715	90726	0	True				
ANR	90730	IdentifierDecl	* current = pos ? pos : & l -> traverse_ptr		90726	0					
ANR	90731	IdentifierDeclType	zend_llist_position *		90726	0					
ANR	90732	Identifier	current		90726	1					
ANR	90733	AssignmentExpression	* current = pos ? pos : & l -> traverse_ptr		90726	2		=			
ANR	90734	Identifier	current		90726	0					
ANR	90735	ConditionalExpression	pos ? pos : & l -> traverse_ptr		90726	1					
ANR	90736	Condition	pos		90726	0					
ANR	90737	Identifier	pos		90726	0					
ANR	90738	Identifier	pos		90726	1					
ANR	90739	UnaryOperationExpression	& l -> traverse_ptr		90726	2					
ANR	90740	UnaryOperator	&		90726	0					
ANR	90741	PtrMemberAccess	l -> traverse_ptr		90726	1					
ANR	90742	Identifier	l		90726	0					
ANR	90743	Identifier	traverse_ptr		90726	1					
ANR	90744	IfStatement	if ( * current )		90726	1					
ANR	90745	Condition	* current	302:5:6723:6730	90726	0	True				
ANR	90746	UnaryOperationExpression	* current		90726	0					
ANR	90747	UnaryOperator	*		90726	0					
ANR	90748	Identifier	current		90726	1					
ANR	90749	CompoundStatement		4:15:79:79	90726	1					
ANR	90750	ExpressionStatement	* current = ( * current ) -> prev	303:2:6737:6764	90726	0	True				
ANR	90751	AssignmentExpression	* current = ( * current ) -> prev		90726	0		=			
ANR	90752	UnaryOperationExpression	* current		90726	0					
ANR	90753	UnaryOperator	*		90726	0					
ANR	90754	Identifier	current		90726	1					
ANR	90755	PtrMemberAccess	( * current ) -> prev		90726	1					
ANR	90756	UnaryOperationExpression	* current		90726	0					
ANR	90757	UnaryOperator	*		90726	0					
ANR	90758	Identifier	current		90726	1					
ANR	90759	Identifier	prev		90726	1					
ANR	90760	IfStatement	if ( * current )		90726	1					
ANR	90761	Condition	* current	304:6:6772:6779	90726	0	True				
ANR	90762	UnaryOperationExpression	* current		90726	0					
ANR	90763	UnaryOperator	*		90726	0					
ANR	90764	Identifier	current		90726	1					
ANR	90765	CompoundStatement		6:16:128:128	90726	1					
ANR	90766	ReturnStatement	return ( * current ) -> data ;	305:3:6787:6810	90726	0	True				
ANR	90767	PtrMemberAccess	( * current ) -> data		90726	0					
ANR	90768	UnaryOperationExpression	* current		90726	0					
ANR	90769	UnaryOperator	*		90726	0					
ANR	90770	Identifier	current		90726	1					
ANR	90771	Identifier	data		90726	1					
ANR	90772	ReturnStatement	return NULL ;	308:1:6820:6831	90726	2	True				
ANR	90773	Identifier	NULL		90726	0					
ANR	90774	ReturnType	ZEND_API void *		90726	1					
ANR	90775	Identifier	zend_llist_get_prev_ex		90726	2					
ANR	90776	ParameterList	"zend_llist * l , zend_llist_position * pos"		90726	3					
ANR	90777	Parameter	zend_llist * l	298:38:6612:6624	90726	0	True				
ANR	90778	ParameterType	zend_llist *		90726	0					
ANR	90779	Identifier	l		90726	1					
ANR	90780	Parameter	zend_llist_position * pos	298:53:6627:6650	90726	1	True				
ANR	90781	ParameterType	zend_llist_position *		90726	0					
ANR	90782	Identifier	pos		90726	1					
ANR	90783	CFGEntryNode	ENTRY		90726		True				
ANR	90784	CFGExitNode	EXIT		90726		True				
ANR	90785	Symbol	( * current ) -> data		90726						
ANR	90786	Symbol	current		90726						
ANR	90787	Symbol	* * current		90726						
ANR	90788	Symbol	& l -> traverse_ptr		90726						
ANR	90789	Symbol	NULL		90726						
ANR	90790	Symbol	pos		90726						
ANR	90791	Symbol	( * current ) -> prev		90726						
ANR	90792	Symbol	* current		90726						
ANR	90793	Symbol	l		90726						
