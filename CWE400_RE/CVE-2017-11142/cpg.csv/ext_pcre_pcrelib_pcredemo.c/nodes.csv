command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	996688	File	data/converged/CVE-2017-11142_php-src/ext_pcre_pcrelib_pcredemo.c								
ANR	996689	Function	main	46:0:1697:15495							
ANR	996690	FunctionDef	"main (int argc , char * * argv)"		996689	0					
ANR	996691	CompoundStatement		47:0:1729:15495	996689	0					
ANR	996692	IdentifierDeclStatement	pcre * re ;	48:0:1731:1739	996689	0	True				
ANR	996693	IdentifierDecl	* re		996689	0					
ANR	996694	IdentifierDeclType	pcre *		996689	0					
ANR	996695	Identifier	re		996689	1					
ANR	996696	IdentifierDeclStatement	const char * error ;	49:0:1741:1758	996689	1	True				
ANR	996697	IdentifierDecl	* error		996689	0					
ANR	996698	IdentifierDeclType	const char *		996689	0					
ANR	996699	Identifier	error		996689	1					
ANR	996700	IdentifierDeclStatement	char * pattern ;	50:0:1760:1773	996689	2	True				
ANR	996701	IdentifierDecl	* pattern		996689	0					
ANR	996702	IdentifierDeclType	char *		996689	0					
ANR	996703	Identifier	pattern		996689	1					
ANR	996704	IdentifierDeclStatement	char * subject ;	51:0:1775:1788	996689	3	True				
ANR	996705	IdentifierDecl	* subject		996689	0					
ANR	996706	IdentifierDeclType	char *		996689	0					
ANR	996707	Identifier	subject		996689	1					
ANR	996708	IdentifierDeclStatement	unsigned char * name_table ;	52:0:1790:1815	996689	4	True				
ANR	996709	IdentifierDecl	* name_table		996689	0					
ANR	996710	IdentifierDeclType	unsigned char *		996689	0					
ANR	996711	Identifier	name_table		996689	1					
ANR	996712	IdentifierDeclStatement	unsigned int option_bits ;	53:0:1817:1841	996689	5	True				
ANR	996713	IdentifierDecl	option_bits		996689	0					
ANR	996714	IdentifierDeclType	unsigned int		996689	0					
ANR	996715	Identifier	option_bits		996689	1					
ANR	996716	IdentifierDeclStatement	int erroffset ;	54:0:1843:1856	996689	6	True				
ANR	996717	IdentifierDecl	erroffset		996689	0					
ANR	996718	IdentifierDeclType	int		996689	0					
ANR	996719	Identifier	erroffset		996689	1					
ANR	996720	IdentifierDeclStatement	int find_all ;	55:0:1858:1870	996689	7	True				
ANR	996721	IdentifierDecl	find_all		996689	0					
ANR	996722	IdentifierDeclType	int		996689	0					
ANR	996723	Identifier	find_all		996689	1					
ANR	996724	IdentifierDeclStatement	int crlf_is_newline ;	56:0:1872:1891	996689	8	True				
ANR	996725	IdentifierDecl	crlf_is_newline		996689	0					
ANR	996726	IdentifierDeclType	int		996689	0					
ANR	996727	Identifier	crlf_is_newline		996689	1					
ANR	996728	IdentifierDeclStatement	int namecount ;	57:0:1893:1906	996689	9	True				
ANR	996729	IdentifierDecl	namecount		996689	0					
ANR	996730	IdentifierDeclType	int		996689	0					
ANR	996731	Identifier	namecount		996689	1					
ANR	996732	IdentifierDeclStatement	int name_entry_size ;	58:0:1908:1927	996689	10	True				
ANR	996733	IdentifierDecl	name_entry_size		996689	0					
ANR	996734	IdentifierDeclType	int		996689	0					
ANR	996735	Identifier	name_entry_size		996689	1					
ANR	996736	IdentifierDeclStatement	int ovector [ OVECCOUNT ] ;	59:0:1929:1951	996689	11	True				
ANR	996737	IdentifierDecl	ovector [ OVECCOUNT ]		996689	0					
ANR	996738	IdentifierDeclType	int [ OVECCOUNT ]		996689	0					
ANR	996739	Identifier	ovector		996689	1					
ANR	996740	Identifier	OVECCOUNT		996689	2					
ANR	996741	IdentifierDeclStatement	int subject_length ;	60:0:1953:1971	996689	12	True				
ANR	996742	IdentifierDecl	subject_length		996689	0					
ANR	996743	IdentifierDeclType	int		996689	0					
ANR	996744	Identifier	subject_length		996689	1					
ANR	996745	IdentifierDeclStatement	"int rc , i ;"	61:0:1973:1982	996689	13	True				
ANR	996746	IdentifierDecl	rc		996689	0					
ANR	996747	IdentifierDeclType	int		996689	0					
ANR	996748	Identifier	rc		996689	1					
ANR	996749	IdentifierDecl	i		996689	1					
ANR	996750	IdentifierDeclType	int		996689	0					
ANR	996751	Identifier	i		996689	1					
ANR	996752	IdentifierDeclStatement	int utf8 ;	62:0:1984:1992	996689	14	True				
ANR	996753	IdentifierDecl	utf8		996689	0					
ANR	996754	IdentifierDeclType	int		996689	0					
ANR	996755	Identifier	utf8		996689	1					
ANR	996756	ExpressionStatement	find_all = 0	73:0:2529:2541	996689	15	True				
ANR	996757	AssignmentExpression	find_all = 0		996689	0		=			
ANR	996758	Identifier	find_all		996689	0					
ANR	996759	PrimaryExpression	0		996689	1					
ANR	996760	ForStatement	for ( i = 1 ; i < argc ; i ++ )		996689	16					
ANR	996761	ForInit	i = 1 ;	74:5:2548:2553	996689	0	True				
ANR	996762	AssignmentExpression	i = 1		996689	0		=			
ANR	996763	Identifier	i		996689	0					
ANR	996764	PrimaryExpression	1		996689	1					
ANR	996765	Condition	i < argc	74:12:2555:2562	996689	1	True				
ANR	996766	RelationalExpression	i < argc		996689	0		<			
ANR	996767	Identifier	i		996689	0					
ANR	996768	Identifier	argc		996689	1					
ANR	996769	PostIncDecOperationExpression	i ++	74:22:2565:2567	996689	2	True				
ANR	996770	Identifier	i		996689	0					
ANR	996771	IncDec	++		996689	1					
ANR	996772	CompoundStatement		29:2:842:842	996689	3					
ANR	996773	IfStatement	"if ( strcmp ( argv [ i ] , ""-g"" ) == 0 )"		996689	0					
ANR	996774	Condition	"strcmp ( argv [ i ] , ""-g"" ) == 0"	76:6:2580:2605	996689	0	True				
ANR	996775	EqualityExpression	"strcmp ( argv [ i ] , ""-g"" ) == 0"		996689	0		==			
ANR	996776	CallExpression	"strcmp ( argv [ i ] , ""-g"" )"		996689	0					
ANR	996777	Callee	strcmp		996689	0					
ANR	996778	Identifier	strcmp		996689	0					
ANR	996779	ArgumentList	argv [ i ]		996689	1					
ANR	996780	Argument	argv [ i ]		996689	0					
ANR	996781	ArrayIndexing	argv [ i ]		996689	0					
ANR	996782	Identifier	argv		996689	0					
ANR	996783	Identifier	i		996689	1					
ANR	996784	Argument	"""-g"""		996689	1					
ANR	996785	PrimaryExpression	"""-g"""		996689	0					
ANR	996786	PrimaryExpression	0		996689	1					
ANR	996787	ExpressionStatement	find_all = 1	76:34:2608:2620	996689	1	True				
ANR	996788	AssignmentExpression	find_all = 1		996689	0		=			
ANR	996789	Identifier	find_all		996689	0					
ANR	996790	PrimaryExpression	1		996689	1					
ANR	996791	ElseStatement	else		996689	0					
ANR	996792	BreakStatement	break ;	77:9:2631:2636	996689	0	True				
ANR	996793	IfStatement	if ( argc - i != 2 )		996689	17					
ANR	996794	Condition	argc - i != 2	83:4:2754:2766	996689	0	True				
ANR	996795	EqualityExpression	argc - i != 2		996689	0		!=			
ANR	996796	AdditiveExpression	argc - i		996689	0		-			
ANR	996797	Identifier	argc		996689	0					
ANR	996798	Identifier	i		996689	1					
ANR	996799	PrimaryExpression	2		996689	1					
ANR	996800	CompoundStatement		38:2:1041:1041	996689	1					
ANR	996801	ExpressionStatement	"printf ( ""Two arguments required: a regex and a subject string\\n"" )"	85:2:2775:2839	996689	0	True				
ANR	996802	CallExpression	"printf ( ""Two arguments required: a regex and a subject string\\n"" )"		996689	0					
ANR	996803	Callee	printf		996689	0					
ANR	996804	Identifier	printf		996689	0					
ANR	996805	ArgumentList	"""Two arguments required: a regex and a subject string\\n"""		996689	1					
ANR	996806	Argument	"""Two arguments required: a regex and a subject string\\n"""		996689	0					
ANR	996807	PrimaryExpression	"""Two arguments required: a regex and a subject string\\n"""		996689	0					
ANR	996808	ReturnStatement	return 1 ;	86:2:2843:2851	996689	1	True				
ANR	996809	PrimaryExpression	1		996689	0					
ANR	996810	ExpressionStatement	pattern = argv [ i ]	89:0:2858:2875	996689	18	True				
ANR	996811	AssignmentExpression	pattern = argv [ i ]		996689	0		=			
ANR	996812	Identifier	pattern		996689	0					
ANR	996813	ArrayIndexing	argv [ i ]		996689	1					
ANR	996814	Identifier	argv		996689	0					
ANR	996815	Identifier	i		996689	1					
ANR	996816	ExpressionStatement	subject = argv [ i + 1 ]	90:0:2877:2896	996689	19	True				
ANR	996817	AssignmentExpression	subject = argv [ i + 1 ]		996689	0		=			
ANR	996818	Identifier	subject		996689	0					
ANR	996819	ArrayIndexing	argv [ i + 1 ]		996689	1					
ANR	996820	Identifier	argv		996689	0					
ANR	996821	AdditiveExpression	i + 1		996689	1		+			
ANR	996822	Identifier	i		996689	0					
ANR	996823	PrimaryExpression	1		996689	1					
ANR	996824	ExpressionStatement	subject_length = ( int ) strlen ( subject )	91:0:2898:2935	996689	20	True				
ANR	996825	AssignmentExpression	subject_length = ( int ) strlen ( subject )		996689	0		=			
ANR	996826	Identifier	subject_length		996689	0					
ANR	996827	CastExpression	( int ) strlen ( subject )		996689	1					
ANR	996828	CastTarget	int		996689	0					
ANR	996829	CallExpression	strlen ( subject )		996689	1					
ANR	996830	Callee	strlen		996689	0					
ANR	996831	Identifier	strlen		996689	0					
ANR	996832	ArgumentList	subject		996689	1					
ANR	996833	Argument	subject		996689	0					
ANR	996834	Identifier	subject		996689	0					
ANR	996835	ExpressionStatement	"re = pcre_compile ( pattern , 0 , & error , & erroffset , NULL )"	99:0:3240:3449	996689	21	True				
ANR	996836	AssignmentExpression	"re = pcre_compile ( pattern , 0 , & error , & erroffset , NULL )"		996689	0		=			
ANR	996837	Identifier	re		996689	0					
ANR	996838	CallExpression	"pcre_compile ( pattern , 0 , & error , & erroffset , NULL )"		996689	1					
ANR	996839	Callee	pcre_compile		996689	0					
ANR	996840	Identifier	pcre_compile		996689	0					
ANR	996841	ArgumentList	pattern		996689	1					
ANR	996842	Argument	pattern		996689	0					
ANR	996843	Identifier	pattern		996689	0					
ANR	996844	Argument	0		996689	1					
ANR	996845	PrimaryExpression	0		996689	0					
ANR	996846	Argument	& error		996689	2					
ANR	996847	UnaryOperationExpression	& error		996689	0					
ANR	996848	UnaryOperator	&		996689	0					
ANR	996849	Identifier	error		996689	1					
ANR	996850	Argument	& erroffset		996689	3					
ANR	996851	UnaryOperationExpression	& erroffset		996689	0					
ANR	996852	UnaryOperator	&		996689	0					
ANR	996853	Identifier	erroffset		996689	1					
ANR	996854	Argument	NULL		996689	4					
ANR	996855	Identifier	NULL		996689	0					
ANR	996856	IfStatement	if ( re == NULL )		996689	22					
ANR	996857	Condition	re == NULL	108:4:3566:3575	996689	0	True				
ANR	996858	EqualityExpression	re == NULL		996689	0		==			
ANR	996859	Identifier	re		996689	0					
ANR	996860	Identifier	NULL		996689	1					
ANR	996861	CompoundStatement		63:2:1850:1850	996689	1					
ANR	996862	ExpressionStatement	"printf ( ""PCRE compilation failed at offset %d: %s\\n"" , erroffset , error )"	110:2:3584:3654	996689	0	True				
ANR	996863	CallExpression	"printf ( ""PCRE compilation failed at offset %d: %s\\n"" , erroffset , error )"		996689	0					
ANR	996864	Callee	printf		996689	0					
ANR	996865	Identifier	printf		996689	0					
ANR	996866	ArgumentList	"""PCRE compilation failed at offset %d: %s\\n"""		996689	1					
ANR	996867	Argument	"""PCRE compilation failed at offset %d: %s\\n"""		996689	0					
ANR	996868	PrimaryExpression	"""PCRE compilation failed at offset %d: %s\\n"""		996689	0					
ANR	996869	Argument	erroffset		996689	1					
ANR	996870	Identifier	erroffset		996689	0					
ANR	996871	Argument	error		996689	2					
ANR	996872	Identifier	error		996689	0					
ANR	996873	ReturnStatement	return 1 ;	111:2:3658:3666	996689	1	True				
ANR	996874	PrimaryExpression	1		996689	0					
ANR	996875	ExpressionStatement	"rc = pcre_exec ( re , NULL , subject , subject_length , 0 , 0 , ovector , OVECCOUNT )"	121:0:4050:4487	996689	23	True				
ANR	996876	AssignmentExpression	"rc = pcre_exec ( re , NULL , subject , subject_length , 0 , 0 , ovector , OVECCOUNT )"		996689	0		=			
ANR	996877	Identifier	rc		996689	0					
ANR	996878	CallExpression	"pcre_exec ( re , NULL , subject , subject_length , 0 , 0 , ovector , OVECCOUNT )"		996689	1					
ANR	996879	Callee	pcre_exec		996689	0					
ANR	996880	Identifier	pcre_exec		996689	0					
ANR	996881	ArgumentList	re		996689	1					
ANR	996882	Argument	re		996689	0					
ANR	996883	Identifier	re		996689	0					
ANR	996884	Argument	NULL		996689	1					
ANR	996885	Identifier	NULL		996689	0					
ANR	996886	Argument	subject		996689	2					
ANR	996887	Identifier	subject		996689	0					
ANR	996888	Argument	subject_length		996689	3					
ANR	996889	Identifier	subject_length		996689	0					
ANR	996890	Argument	0		996689	4					
ANR	996891	PrimaryExpression	0		996689	0					
ANR	996892	Argument	0		996689	5					
ANR	996893	PrimaryExpression	0		996689	0					
ANR	996894	Argument	ovector		996689	6					
ANR	996895	Identifier	ovector		996689	0					
ANR	996896	Argument	OVECCOUNT		996689	7					
ANR	996897	Identifier	OVECCOUNT		996689	0					
ANR	996898	IfStatement	if ( rc < 0 )		996689	24					
ANR	996899	Condition	rc < 0	133:4:4593:4598	996689	0	True				
ANR	996900	RelationalExpression	rc < 0		996689	0		<			
ANR	996901	Identifier	rc		996689	0					
ANR	996902	PrimaryExpression	0		996689	1					
ANR	996903	CompoundStatement		88:2:2873:2873	996689	1					
ANR	996904	SwitchStatement	switch ( rc )		996689	0					
ANR	996905	Condition	rc	135:9:4614:4615	996689	0	True				
ANR	996906	Identifier	rc		996689	0					
ANR	996907	CompoundStatement		90:4:2892:2892	996689	1					
ANR	996908	Label	case PCRE_ERROR_NOMATCH :	137:4:4628:4651	996689	0	True				
ANR	996909	Identifier	PCRE_ERROR_NOMATCH		996689	0					
ANR	996910	ExpressionStatement	"printf ( ""No match\\n"" )"	137:29:4653:4673	996689	1	True				
ANR	996911	CallExpression	"printf ( ""No match\\n"" )"		996689	0					
ANR	996912	Callee	printf		996689	0					
ANR	996913	Identifier	printf		996689	0					
ANR	996914	ArgumentList	"""No match\\n"""		996689	1					
ANR	996915	Argument	"""No match\\n"""		996689	0					
ANR	996916	PrimaryExpression	"""No match\\n"""		996689	0					
ANR	996917	BreakStatement	break ;	137:51:4675:4680	996689	2	True				
ANR	996918	Label	default :	141:4:4743:4750	996689	3	True				
ANR	996919	Identifier	default		996689	0					
ANR	996920	ExpressionStatement	"printf ( ""Matching error %d\\n"" , rc )"	141:13:4752:4785	996689	4	True				
ANR	996921	CallExpression	"printf ( ""Matching error %d\\n"" , rc )"		996689	0					
ANR	996922	Callee	printf		996689	0					
ANR	996923	Identifier	printf		996689	0					
ANR	996924	ArgumentList	"""Matching error %d\\n"""		996689	1					
ANR	996925	Argument	"""Matching error %d\\n"""		996689	0					
ANR	996926	PrimaryExpression	"""Matching error %d\\n"""		996689	0					
ANR	996927	Argument	rc		996689	1					
ANR	996928	Identifier	rc		996689	0					
ANR	996929	BreakStatement	break ;	141:48:4787:4792	996689	5	True				
ANR	996930	ExpressionStatement	pcre_free ( re )	143:2:4802:4815	996689	1	True				
ANR	996931	CallExpression	pcre_free ( re )		996689	0					
ANR	996932	Callee	pcre_free		996689	0					
ANR	996933	Identifier	pcre_free		996689	0					
ANR	996934	ArgumentList	re		996689	1					
ANR	996935	Argument	re		996689	0					
ANR	996936	Identifier	re		996689	0					
ANR	996937	ReturnStatement	return 1 ;	144:2:4874:4882	996689	2	True				
ANR	996938	PrimaryExpression	1		996689	0					
ANR	996939	ExpressionStatement	"printf ( ""\\nMatch succeeded at offset %d\\n"" , ovector [ 0 ] )"	149:0:4912:4966	996689	25	True				
ANR	996940	CallExpression	"printf ( ""\\nMatch succeeded at offset %d\\n"" , ovector [ 0 ] )"		996689	0					
ANR	996941	Callee	printf		996689	0					
ANR	996942	Identifier	printf		996689	0					
ANR	996943	ArgumentList	"""\\nMatch succeeded at offset %d\\n"""		996689	1					
ANR	996944	Argument	"""\\nMatch succeeded at offset %d\\n"""		996689	0					
ANR	996945	PrimaryExpression	"""\\nMatch succeeded at offset %d\\n"""		996689	0					
ANR	996946	Argument	ovector [ 0 ]		996689	1					
ANR	996947	ArrayIndexing	ovector [ 0 ]		996689	0					
ANR	996948	Identifier	ovector		996689	0					
ANR	996949	PrimaryExpression	0		996689	1					
ANR	996950	IfStatement	if ( rc == 0 )		996689	26					
ANR	996951	Condition	rc == 0	160:4:5393:5399	996689	0	True				
ANR	996952	EqualityExpression	rc == 0		996689	0		==			
ANR	996953	Identifier	rc		996689	0					
ANR	996954	PrimaryExpression	0		996689	1					
ANR	996955	CompoundStatement		115:2:3674:3674	996689	1					
ANR	996956	ExpressionStatement	rc = OVECCOUNT / 3	162:2:5408:5424	996689	0	True				
ANR	996957	AssignmentExpression	rc = OVECCOUNT / 3		996689	0		=			
ANR	996958	Identifier	rc		996689	0					
ANR	996959	MultiplicativeExpression	OVECCOUNT / 3		996689	1		/			
ANR	996960	Identifier	OVECCOUNT		996689	0					
ANR	996961	PrimaryExpression	3		996689	1					
ANR	996962	ExpressionStatement	"printf ( ""ovector only has room for %d captured substrings\\n"" , rc - 1 )"	163:2:5428:5496	996689	1	True				
ANR	996963	CallExpression	"printf ( ""ovector only has room for %d captured substrings\\n"" , rc - 1 )"		996689	0					
ANR	996964	Callee	printf		996689	0					
ANR	996965	Identifier	printf		996689	0					
ANR	996966	ArgumentList	"""ovector only has room for %d captured substrings\\n"""		996689	1					
ANR	996967	Argument	"""ovector only has room for %d captured substrings\\n"""		996689	0					
ANR	996968	PrimaryExpression	"""ovector only has room for %d captured substrings\\n"""		996689	0					
ANR	996969	Argument	rc - 1		996689	1					
ANR	996970	AdditiveExpression	rc - 1		996689	0		-			
ANR	996971	Identifier	rc		996689	0					
ANR	996972	PrimaryExpression	1		996689	1					
ANR	996973	ForStatement	for ( i = 0 ; i < rc ; i ++ )		996689	27					
ANR	996974	ForInit	i = 0 ;	169:5:5654:5659	996689	0	True				
ANR	996975	AssignmentExpression	i = 0		996689	0		=			
ANR	996976	Identifier	i		996689	0					
ANR	996977	PrimaryExpression	0		996689	1					
ANR	996978	Condition	i < rc	169:12:5661:5666	996689	1	True				
ANR	996979	RelationalExpression	i < rc		996689	0		<			
ANR	996980	Identifier	i		996689	0					
ANR	996981	Identifier	rc		996689	1					
ANR	996982	PostIncDecOperationExpression	i ++	169:20:5669:5671	996689	2	True				
ANR	996983	Identifier	i		996689	0					
ANR	996984	IncDec	++		996689	1					
ANR	996985	CompoundStatement		126:2:4000:4052	996689	3					
ANR	996986	IdentifierDeclStatement	char * substring_start = subject + ovector [ 2 * i ] ;	171:2:5680:5726	996689	0	True				
ANR	996987	IdentifierDecl	* substring_start = subject + ovector [ 2 * i ]		996689	0					
ANR	996988	IdentifierDeclType	char *		996689	0					
ANR	996989	Identifier	substring_start		996689	1					
ANR	996990	AssignmentExpression	* substring_start = subject + ovector [ 2 * i ]		996689	2		=			
ANR	996991	Identifier	substring_start		996689	0					
ANR	996992	AdditiveExpression	subject + ovector [ 2 * i ]		996689	1		+			
ANR	996993	Identifier	subject		996689	0					
ANR	996994	ArrayIndexing	ovector [ 2 * i ]		996689	1					
ANR	996995	Identifier	ovector		996689	0					
ANR	996996	MultiplicativeExpression	2 * i		996689	1		*			
ANR	996997	PrimaryExpression	2		996689	0					
ANR	996998	Identifier	i		996689	1					
ANR	996999	IdentifierDeclStatement	int substring_length = ovector [ 2 * i + 1 ] - ovector [ 2 * i ] ;	172:2:5730:5782	996689	1	True				
ANR	997000	IdentifierDecl	substring_length = ovector [ 2 * i + 1 ] - ovector [ 2 * i ]		996689	0					
ANR	997001	IdentifierDeclType	int		996689	0					
ANR	997002	Identifier	substring_length		996689	1					
ANR	997003	AssignmentExpression	substring_length = ovector [ 2 * i + 1 ] - ovector [ 2 * i ]		996689	2		=			
ANR	997004	Identifier	substring_length		996689	0					
ANR	997005	AdditiveExpression	ovector [ 2 * i + 1 ] - ovector [ 2 * i ]		996689	1		-			
ANR	997006	ArrayIndexing	ovector [ 2 * i + 1 ]		996689	0					
ANR	997007	Identifier	ovector		996689	0					
ANR	997008	AdditiveExpression	2 * i + 1		996689	1		+			
ANR	997009	MultiplicativeExpression	2 * i		996689	0		*			
ANR	997010	PrimaryExpression	2		996689	0					
ANR	997011	Identifier	i		996689	1					
ANR	997012	PrimaryExpression	1		996689	1					
ANR	997013	ArrayIndexing	ovector [ 2 * i ]		996689	1					
ANR	997014	Identifier	ovector		996689	0					
ANR	997015	MultiplicativeExpression	2 * i		996689	1		*			
ANR	997016	PrimaryExpression	2		996689	0					
ANR	997017	Identifier	i		996689	1					
ANR	997018	ExpressionStatement	"printf ( ""%2d: %.*s\\n"" , i , substring_length , substring_start )"	173:2:5786:5845	996689	2	True				
ANR	997019	CallExpression	"printf ( ""%2d: %.*s\\n"" , i , substring_length , substring_start )"		996689	0					
ANR	997020	Callee	printf		996689	0					
ANR	997021	Identifier	printf		996689	0					
ANR	997022	ArgumentList	"""%2d: %.*s\\n"""		996689	1					
ANR	997023	Argument	"""%2d: %.*s\\n"""		996689	0					
ANR	997024	PrimaryExpression	"""%2d: %.*s\\n"""		996689	0					
ANR	997025	Argument	i		996689	1					
ANR	997026	Identifier	i		996689	0					
ANR	997027	Argument	substring_length		996689	2					
ANR	997028	Identifier	substring_length		996689	0					
ANR	997029	Argument	substring_start		996689	3					
ANR	997030	Identifier	substring_start		996689	0					
ANR	997031	ExpressionStatement	"( void ) pcre_fullinfo ( re , NULL , PCRE_INFO_NAMECOUNT , & namecount )"	187:0:6460:6676	996689	28	True				
ANR	997032	CastExpression	"( void ) pcre_fullinfo ( re , NULL , PCRE_INFO_NAMECOUNT , & namecount )"		996689	0					
ANR	997033	CastTarget	void		996689	0					
ANR	997034	CallExpression	"pcre_fullinfo ( re , NULL , PCRE_INFO_NAMECOUNT , & namecount )"		996689	1					
ANR	997035	Callee	pcre_fullinfo		996689	0					
ANR	997036	Identifier	pcre_fullinfo		996689	0					
ANR	997037	ArgumentList	re		996689	1					
ANR	997038	Argument	re		996689	0					
ANR	997039	Identifier	re		996689	0					
ANR	997040	Argument	NULL		996689	1					
ANR	997041	Identifier	NULL		996689	0					
ANR	997042	Argument	PCRE_INFO_NAMECOUNT		996689	2					
ANR	997043	Identifier	PCRE_INFO_NAMECOUNT		996689	0					
ANR	997044	Argument	& namecount		996689	3					
ANR	997045	UnaryOperationExpression	& namecount		996689	0					
ANR	997046	UnaryOperator	&		996689	0					
ANR	997047	Identifier	namecount		996689	1					
ANR	997048	IfStatement	if ( namecount <= 0 )		996689	29					
ANR	997049	Condition	namecount <= 0	193:4:6722:6735	996689	0	True				
ANR	997050	RelationalExpression	namecount <= 0		996689	0		<=			
ANR	997051	Identifier	namecount		996689	0					
ANR	997052	PrimaryExpression	0		996689	1					
ANR	997053	ExpressionStatement	"printf ( ""No named substrings\\n"" )"	193:20:6738:6769	996689	1	True				
ANR	997054	CallExpression	"printf ( ""No named substrings\\n"" )"		996689	0					
ANR	997055	Callee	printf		996689	0					
ANR	997056	Identifier	printf		996689	0					
ANR	997057	ArgumentList	"""No named substrings\\n"""		996689	1					
ANR	997058	Argument	"""No named substrings\\n"""		996689	0					
ANR	997059	PrimaryExpression	"""No named substrings\\n"""		996689	0					
ANR	997060	ElseStatement	else		996689	0					
ANR	997061	CompoundStatement		149:2:5052:5073	996689	0					
ANR	997062	IdentifierDeclStatement	unsigned char * tabptr ;	195:2:6782:6803	996689	0	True				
ANR	997063	IdentifierDecl	* tabptr		996689	0					
ANR	997064	IdentifierDeclType	unsigned char *		996689	0					
ANR	997065	Identifier	tabptr		996689	1					
ANR	997066	ExpressionStatement	"printf ( ""Named substrings\\n"" )"	196:2:6807:6835	996689	1	True				
ANR	997067	CallExpression	"printf ( ""Named substrings\\n"" )"		996689	0					
ANR	997068	Callee	printf		996689	0					
ANR	997069	Identifier	printf		996689	0					
ANR	997070	ArgumentList	"""Named substrings\\n"""		996689	1					
ANR	997071	Argument	"""Named substrings\\n"""		996689	0					
ANR	997072	PrimaryExpression	"""Named substrings\\n"""		996689	0					
ANR	997073	ExpressionStatement	"( void ) pcre_fullinfo ( re , NULL , PCRE_INFO_NAMETABLE , & name_table )"	201:2:6989:7220	996689	2	True				
ANR	997074	CastExpression	"( void ) pcre_fullinfo ( re , NULL , PCRE_INFO_NAMETABLE , & name_table )"		996689	0					
ANR	997075	CastTarget	void		996689	0					
ANR	997076	CallExpression	"pcre_fullinfo ( re , NULL , PCRE_INFO_NAMETABLE , & name_table )"		996689	1					
ANR	997077	Callee	pcre_fullinfo		996689	0					
ANR	997078	Identifier	pcre_fullinfo		996689	0					
ANR	997079	ArgumentList	re		996689	1					
ANR	997080	Argument	re		996689	0					
ANR	997081	Identifier	re		996689	0					
ANR	997082	Argument	NULL		996689	1					
ANR	997083	Identifier	NULL		996689	0					
ANR	997084	Argument	PCRE_INFO_NAMETABLE		996689	2					
ANR	997085	Identifier	PCRE_INFO_NAMETABLE		996689	0					
ANR	997086	Argument	& name_table		996689	3					
ANR	997087	UnaryOperationExpression	& name_table		996689	0					
ANR	997088	UnaryOperator	&		996689	0					
ANR	997089	Identifier	name_table		996689	1					
ANR	997090	ExpressionStatement	"( void ) pcre_fullinfo ( re , NULL , PCRE_INFO_NAMEENTRYSIZE , & name_entry_size )"	207:2:7267:7514	996689	3	True				
ANR	997091	CastExpression	"( void ) pcre_fullinfo ( re , NULL , PCRE_INFO_NAMEENTRYSIZE , & name_entry_size )"		996689	0					
ANR	997092	CastTarget	void		996689	0					
ANR	997093	CallExpression	"pcre_fullinfo ( re , NULL , PCRE_INFO_NAMEENTRYSIZE , & name_entry_size )"		996689	1					
ANR	997094	Callee	pcre_fullinfo		996689	0					
ANR	997095	Identifier	pcre_fullinfo		996689	0					
ANR	997096	ArgumentList	re		996689	1					
ANR	997097	Argument	re		996689	0					
ANR	997098	Identifier	re		996689	0					
ANR	997099	Argument	NULL		996689	1					
ANR	997100	Identifier	NULL		996689	0					
ANR	997101	Argument	PCRE_INFO_NAMEENTRYSIZE		996689	2					
ANR	997102	Identifier	PCRE_INFO_NAMEENTRYSIZE		996689	0					
ANR	997103	Argument	& name_entry_size		996689	3					
ANR	997104	UnaryOperationExpression	& name_entry_size		996689	0					
ANR	997105	UnaryOperator	&		996689	0					
ANR	997106	Identifier	name_entry_size		996689	1					
ANR	997107	ExpressionStatement	tabptr = name_table	216:2:7668:7687	996689	4	True				
ANR	997108	AssignmentExpression	tabptr = name_table		996689	0		=			
ANR	997109	Identifier	tabptr		996689	0					
ANR	997110	Identifier	name_table		996689	1					
ANR	997111	ForStatement	for ( i = 0 ; i < namecount ; i ++ )		996689	5					
ANR	997112	ForInit	i = 0 ;	217:7:7696:7701	996689	0	True				
ANR	997113	AssignmentExpression	i = 0		996689	0		=			
ANR	997114	Identifier	i		996689	0					
ANR	997115	PrimaryExpression	0		996689	1					
ANR	997116	Condition	i < namecount	217:14:7703:7715	996689	1	True				
ANR	997117	RelationalExpression	i < namecount		996689	0		<			
ANR	997118	Identifier	i		996689	0					
ANR	997119	Identifier	namecount		996689	1					
ANR	997120	PostIncDecOperationExpression	i ++	217:29:7718:7720	996689	2	True				
ANR	997121	Identifier	i		996689	0					
ANR	997122	IncDec	++		996689	1					
ANR	997123	CompoundStatement		173:4:6003:6039	996689	3					
ANR	997124	IdentifierDeclStatement	int n = ( tabptr [ 0 ] << 8 ) | tabptr [ 1 ] ;	219:4:7733:7769	996689	0	True				
ANR	997125	IdentifierDecl	n = ( tabptr [ 0 ] << 8 ) | tabptr [ 1 ]		996689	0					
ANR	997126	IdentifierDeclType	int		996689	0					
ANR	997127	Identifier	n		996689	1					
ANR	997128	AssignmentExpression	n = ( tabptr [ 0 ] << 8 ) | tabptr [ 1 ]		996689	2		=			
ANR	997129	Identifier	n		996689	0					
ANR	997130	InclusiveOrExpression	( tabptr [ 0 ] << 8 ) | tabptr [ 1 ]		996689	1		|			
ANR	997131	ShiftExpression	tabptr [ 0 ] << 8		996689	0		<<			
ANR	997132	ArrayIndexing	tabptr [ 0 ]		996689	0					
ANR	997133	Identifier	tabptr		996689	0					
ANR	997134	PrimaryExpression	0		996689	1					
ANR	997135	PrimaryExpression	8		996689	1					
ANR	997136	ArrayIndexing	tabptr [ 1 ]		996689	1					
ANR	997137	Identifier	tabptr		996689	0					
ANR	997138	PrimaryExpression	1		996689	1					
ANR	997139	ExpressionStatement	"printf ( ""(%d) %*s: %.*s\\n"" , n , name_entry_size - 3 , tabptr + 2 , ovector [ 2 * n + 1 ] - ovector [ 2 * n ] , subject + ovector [ 2 * n ] )"	220:4:7775:7898	996689	1	True				
ANR	997140	CallExpression	"printf ( ""(%d) %*s: %.*s\\n"" , n , name_entry_size - 3 , tabptr + 2 , ovector [ 2 * n + 1 ] - ovector [ 2 * n ] , subject + ovector [ 2 * n ] )"		996689	0					
ANR	997141	Callee	printf		996689	0					
ANR	997142	Identifier	printf		996689	0					
ANR	997143	ArgumentList	"""(%d) %*s: %.*s\\n"""		996689	1					
ANR	997144	Argument	"""(%d) %*s: %.*s\\n"""		996689	0					
ANR	997145	PrimaryExpression	"""(%d) %*s: %.*s\\n"""		996689	0					
ANR	997146	Argument	n		996689	1					
ANR	997147	Identifier	n		996689	0					
ANR	997148	Argument	name_entry_size - 3		996689	2					
ANR	997149	AdditiveExpression	name_entry_size - 3		996689	0		-			
ANR	997150	Identifier	name_entry_size		996689	0					
ANR	997151	PrimaryExpression	3		996689	1					
ANR	997152	Argument	tabptr + 2		996689	3					
ANR	997153	AdditiveExpression	tabptr + 2		996689	0		+			
ANR	997154	Identifier	tabptr		996689	0					
ANR	997155	PrimaryExpression	2		996689	1					
ANR	997156	Argument	ovector [ 2 * n + 1 ] - ovector [ 2 * n ]		996689	4					
ANR	997157	AdditiveExpression	ovector [ 2 * n + 1 ] - ovector [ 2 * n ]		996689	0		-			
ANR	997158	ArrayIndexing	ovector [ 2 * n + 1 ]		996689	0					
ANR	997159	Identifier	ovector		996689	0					
ANR	997160	AdditiveExpression	2 * n + 1		996689	1		+			
ANR	997161	MultiplicativeExpression	2 * n		996689	0		*			
ANR	997162	PrimaryExpression	2		996689	0					
ANR	997163	Identifier	n		996689	1					
ANR	997164	PrimaryExpression	1		996689	1					
ANR	997165	ArrayIndexing	ovector [ 2 * n ]		996689	1					
ANR	997166	Identifier	ovector		996689	0					
ANR	997167	MultiplicativeExpression	2 * n		996689	1		*			
ANR	997168	PrimaryExpression	2		996689	0					
ANR	997169	Identifier	n		996689	1					
ANR	997170	Argument	subject + ovector [ 2 * n ]		996689	5					
ANR	997171	AdditiveExpression	subject + ovector [ 2 * n ]		996689	0		+			
ANR	997172	Identifier	subject		996689	0					
ANR	997173	ArrayIndexing	ovector [ 2 * n ]		996689	1					
ANR	997174	Identifier	ovector		996689	0					
ANR	997175	MultiplicativeExpression	2 * n		996689	1		*			
ANR	997176	PrimaryExpression	2		996689	0					
ANR	997177	Identifier	n		996689	1					
ANR	997178	ExpressionStatement	tabptr += name_entry_size	222:4:7904:7929	996689	2	True				
ANR	997179	AssignmentExpression	tabptr += name_entry_size		996689	0		+=			
ANR	997180	Identifier	tabptr		996689	0					
ANR	997181	Identifier	name_entry_size		996689	1					
ANR	997182	IfStatement	if ( ! find_all )		996689	30					
ANR	997183	Condition	! find_all	256:4:10048:10056	996689	0	True				
ANR	997184	UnaryOperationExpression	! find_all		996689	0					
ANR	997185	UnaryOperator	!		996689	0					
ANR	997186	Identifier	find_all		996689	1					
ANR	997187	CompoundStatement		211:2:8354:8354	996689	1					
ANR	997188	ExpressionStatement	pcre_free ( re )	258:2:10088:10101	996689	0	True				
ANR	997189	CallExpression	pcre_free ( re )		996689	0					
ANR	997190	Callee	pcre_free		996689	0					
ANR	997191	Identifier	pcre_free		996689	0					
ANR	997192	ArgumentList	re		996689	1					
ANR	997193	Argument	re		996689	0					
ANR	997194	Identifier	re		996689	0					
ANR	997195	ReturnStatement	return 0 ;	259:2:10162:10170	996689	1	True				
ANR	997196	PrimaryExpression	0		996689	0					
ANR	997197	ExpressionStatement	"( void ) pcre_fullinfo ( re , NULL , PCRE_INFO_OPTIONS , & option_bits )"	266:0:10437:10499	996689	31	True				
ANR	997198	CastExpression	"( void ) pcre_fullinfo ( re , NULL , PCRE_INFO_OPTIONS , & option_bits )"		996689	0					
ANR	997199	CastTarget	void		996689	0					
ANR	997200	CallExpression	"pcre_fullinfo ( re , NULL , PCRE_INFO_OPTIONS , & option_bits )"		996689	1					
ANR	997201	Callee	pcre_fullinfo		996689	0					
ANR	997202	Identifier	pcre_fullinfo		996689	0					
ANR	997203	ArgumentList	re		996689	1					
ANR	997204	Argument	re		996689	0					
ANR	997205	Identifier	re		996689	0					
ANR	997206	Argument	NULL		996689	1					
ANR	997207	Identifier	NULL		996689	0					
ANR	997208	Argument	PCRE_INFO_OPTIONS		996689	2					
ANR	997209	Identifier	PCRE_INFO_OPTIONS		996689	0					
ANR	997210	Argument	& option_bits		996689	3					
ANR	997211	UnaryOperationExpression	& option_bits		996689	0					
ANR	997212	UnaryOperator	&		996689	0					
ANR	997213	Identifier	option_bits		996689	1					
ANR	997214	ExpressionStatement	utf8 = option_bits & PCRE_UTF8	267:0:10501:10531	996689	32	True				
ANR	997215	AssignmentExpression	utf8 = option_bits & PCRE_UTF8		996689	0		=			
ANR	997216	Identifier	utf8		996689	0					
ANR	997217	BitAndExpression	option_bits & PCRE_UTF8		996689	1		&			
ANR	997218	Identifier	option_bits		996689	0					
ANR	997219	Identifier	PCRE_UTF8		996689	1					
ANR	997220	ExpressionStatement	option_bits &= PCRE_NEWLINE_CR | PCRE_NEWLINE_LF | PCRE_NEWLINE_CRLF | PCRE_NEWLINE_ANY | PCRE_NEWLINE_ANYCRLF	268:0:10533:10651	996689	33	True				
ANR	997221	AssignmentExpression	option_bits &= PCRE_NEWLINE_CR | PCRE_NEWLINE_LF | PCRE_NEWLINE_CRLF | PCRE_NEWLINE_ANY | PCRE_NEWLINE_ANYCRLF		996689	0		&=			
ANR	997222	Identifier	option_bits		996689	0					
ANR	997223	InclusiveOrExpression	PCRE_NEWLINE_CR | PCRE_NEWLINE_LF | PCRE_NEWLINE_CRLF | PCRE_NEWLINE_ANY | PCRE_NEWLINE_ANYCRLF		996689	1		|			
ANR	997224	Identifier	PCRE_NEWLINE_CR		996689	0					
ANR	997225	InclusiveOrExpression	PCRE_NEWLINE_LF | PCRE_NEWLINE_CRLF | PCRE_NEWLINE_ANY | PCRE_NEWLINE_ANYCRLF		996689	1		|			
ANR	997226	Identifier	PCRE_NEWLINE_LF		996689	0					
ANR	997227	InclusiveOrExpression	PCRE_NEWLINE_CRLF | PCRE_NEWLINE_ANY | PCRE_NEWLINE_ANYCRLF		996689	1		|			
ANR	997228	Identifier	PCRE_NEWLINE_CRLF		996689	0					
ANR	997229	InclusiveOrExpression	PCRE_NEWLINE_ANY | PCRE_NEWLINE_ANYCRLF		996689	1		|			
ANR	997230	Identifier	PCRE_NEWLINE_ANY		996689	0					
ANR	997231	Identifier	PCRE_NEWLINE_ANYCRLF		996689	1					
ANR	997232	IfStatement	if ( option_bits == 0 )		996689	34					
ANR	997233	Condition	option_bits == 0	274:4:10763:10778	996689	0	True				
ANR	997234	EqualityExpression	option_bits == 0		996689	0		==			
ANR	997235	Identifier	option_bits		996689	0					
ANR	997236	PrimaryExpression	0		996689	1					
ANR	997237	CompoundStatement		230:2:9057:9062	996689	1					
ANR	997238	IdentifierDeclStatement	int d ;	276:2:10787:10792	996689	0	True				
ANR	997239	IdentifierDecl	d		996689	0					
ANR	997240	IdentifierDeclType	int		996689	0					
ANR	997241	Identifier	d		996689	1					
ANR	997242	ExpressionStatement	"( void ) pcre_config ( PCRE_CONFIG_NEWLINE , & d )"	277:2:10796:10838	996689	1	True				
ANR	997243	CastExpression	"( void ) pcre_config ( PCRE_CONFIG_NEWLINE , & d )"		996689	0					
ANR	997244	CastTarget	void		996689	0					
ANR	997245	CallExpression	"pcre_config ( PCRE_CONFIG_NEWLINE , & d )"		996689	1					
ANR	997246	Callee	pcre_config		996689	0					
ANR	997247	Identifier	pcre_config		996689	0					
ANR	997248	ArgumentList	PCRE_CONFIG_NEWLINE		996689	1					
ANR	997249	Argument	PCRE_CONFIG_NEWLINE		996689	0					
ANR	997250	Identifier	PCRE_CONFIG_NEWLINE		996689	0					
ANR	997251	Argument	& d		996689	1					
ANR	997252	UnaryOperationExpression	& d		996689	0					
ANR	997253	UnaryOperator	&		996689	0					
ANR	997254	Identifier	d		996689	1					
ANR	997255	ExpressionStatement	option_bits = ( d == 13 ) ? PCRE_NEWLINE_CR : ( d == 10 ) ? PCRE_NEWLINE_LF : ( d == ( 13 << 8 | 10 ) ) ? PCRE_NEWLINE_CRLF : ( d == - 2 ) ? PCRE_NEWLINE_ANYCRLF : ( d == - 1 ) ? PCRE_NEWLINE_ANY : 0	280:2:10949:11167	996689	2	True				
ANR	997256	AssignmentExpression	option_bits = ( d == 13 ) ? PCRE_NEWLINE_CR : ( d == 10 ) ? PCRE_NEWLINE_LF : ( d == ( 13 << 8 | 10 ) ) ? PCRE_NEWLINE_CRLF : ( d == - 2 ) ? PCRE_NEWLINE_ANYCRLF : ( d == - 1 ) ? PCRE_NEWLINE_ANY : 0		996689	0		=			
ANR	997257	Identifier	option_bits		996689	0					
ANR	997258	ConditionalExpression	( d == 13 ) ? PCRE_NEWLINE_CR : ( d == 10 ) ? PCRE_NEWLINE_LF : ( d == ( 13 << 8 | 10 ) ) ? PCRE_NEWLINE_CRLF : ( d == - 2 ) ? PCRE_NEWLINE_ANYCRLF : ( d == - 1 ) ? PCRE_NEWLINE_ANY : 0		996689	1					
ANR	997259	Condition	d == 13		996689	0					
ANR	997260	EqualityExpression	d == 13		996689	0		==			
ANR	997261	Identifier	d		996689	0					
ANR	997262	PrimaryExpression	13		996689	1					
ANR	997263	Identifier	PCRE_NEWLINE_CR		996689	1					
ANR	997264	ConditionalExpression	( d == 10 ) ? PCRE_NEWLINE_LF : ( d == ( 13 << 8 | 10 ) ) ? PCRE_NEWLINE_CRLF : ( d == - 2 ) ? PCRE_NEWLINE_ANYCRLF : ( d == - 1 ) ? PCRE_NEWLINE_ANY : 0		996689	2					
ANR	997265	Condition	d == 10		996689	0					
ANR	997266	EqualityExpression	d == 10		996689	0		==			
ANR	997267	Identifier	d		996689	0					
ANR	997268	PrimaryExpression	10		996689	1					
ANR	997269	Identifier	PCRE_NEWLINE_LF		996689	1					
ANR	997270	ConditionalExpression	( d == ( 13 << 8 | 10 ) ) ? PCRE_NEWLINE_CRLF : ( d == - 2 ) ? PCRE_NEWLINE_ANYCRLF : ( d == - 1 ) ? PCRE_NEWLINE_ANY : 0		996689	2					
ANR	997271	Condition	d == ( 13 << 8 | 10 )		996689	0					
ANR	997272	EqualityExpression	d == ( 13 << 8 | 10 )		996689	0		==			
ANR	997273	Identifier	d		996689	0					
ANR	997274	InclusiveOrExpression	13 << 8 | 10		996689	1		|			
ANR	997275	ShiftExpression	13 << 8		996689	0		<<			
ANR	997276	PrimaryExpression	13		996689	0					
ANR	997277	PrimaryExpression	8		996689	1					
ANR	997278	PrimaryExpression	10		996689	1					
ANR	997279	Identifier	PCRE_NEWLINE_CRLF		996689	1					
ANR	997280	ConditionalExpression	( d == - 2 ) ? PCRE_NEWLINE_ANYCRLF : ( d == - 1 ) ? PCRE_NEWLINE_ANY : 0		996689	2					
ANR	997281	Condition	d == - 2		996689	0					
ANR	997282	EqualityExpression	d == - 2		996689	0		==			
ANR	997283	Identifier	d		996689	0					
ANR	997284	UnaryOperationExpression	- 2		996689	1					
ANR	997285	UnaryOperator	-		996689	0					
ANR	997286	PrimaryExpression	2		996689	1					
ANR	997287	Identifier	PCRE_NEWLINE_ANYCRLF		996689	1					
ANR	997288	ConditionalExpression	( d == - 1 ) ? PCRE_NEWLINE_ANY : 0		996689	2					
ANR	997289	Condition	d == - 1		996689	0					
ANR	997290	EqualityExpression	d == - 1		996689	0		==			
ANR	997291	Identifier	d		996689	0					
ANR	997292	UnaryOperationExpression	- 1		996689	1					
ANR	997293	UnaryOperator	-		996689	0					
ANR	997294	PrimaryExpression	1		996689	1					
ANR	997295	Identifier	PCRE_NEWLINE_ANY		996689	1					
ANR	997296	PrimaryExpression	0		996689	2					
ANR	997297	ExpressionStatement	crlf_is_newline = option_bits == PCRE_NEWLINE_ANY || option_bits == PCRE_NEWLINE_CRLF || option_bits == PCRE_NEWLINE_ANYCRLF	289:0:11222:11361	996689	35	True				
ANR	997298	AssignmentExpression	crlf_is_newline = option_bits == PCRE_NEWLINE_ANY || option_bits == PCRE_NEWLINE_CRLF || option_bits == PCRE_NEWLINE_ANYCRLF		996689	0		=			
ANR	997299	Identifier	crlf_is_newline		996689	0					
ANR	997300	OrExpression	option_bits == PCRE_NEWLINE_ANY || option_bits == PCRE_NEWLINE_CRLF || option_bits == PCRE_NEWLINE_ANYCRLF		996689	1		||			
ANR	997301	EqualityExpression	option_bits == PCRE_NEWLINE_ANY		996689	0		==			
ANR	997302	Identifier	option_bits		996689	0					
ANR	997303	Identifier	PCRE_NEWLINE_ANY		996689	1					
ANR	997304	OrExpression	option_bits == PCRE_NEWLINE_CRLF || option_bits == PCRE_NEWLINE_ANYCRLF		996689	1		||			
ANR	997305	EqualityExpression	option_bits == PCRE_NEWLINE_CRLF		996689	0		==			
ANR	997306	Identifier	option_bits		996689	0					
ANR	997307	Identifier	PCRE_NEWLINE_CRLF		996689	1					
ANR	997308	EqualityExpression	option_bits == PCRE_NEWLINE_ANYCRLF		996689	1		==			
ANR	997309	Identifier	option_bits		996689	0					
ANR	997310	Identifier	PCRE_NEWLINE_ANYCRLF		996689	1					
ANR	997311	ForStatement	for ( ; ; )		996689	36					
ANR	997312	CompoundStatement		253:2:9756:9785	996689	0					
ANR	997313	IdentifierDeclStatement	int options = 0 ;	298:2:11425:11440	996689	0	True				
ANR	997314	IdentifierDecl	options = 0		996689	0					
ANR	997315	IdentifierDeclType	int		996689	0					
ANR	997316	Identifier	options		996689	1					
ANR	997317	AssignmentExpression	options = 0		996689	2		=			
ANR	997318	Identifier	options		996689	0					
ANR	997319	PrimaryExpression	0		996689	1					
ANR	997320	IdentifierDeclStatement	int start_offset = ovector [ 1 ] ;	299:2:11486:11515	996689	1	True				
ANR	997321	IdentifierDecl	start_offset = ovector [ 1 ]		996689	0					
ANR	997322	IdentifierDeclType	int		996689	0					
ANR	997323	Identifier	start_offset		996689	1					
ANR	997324	AssignmentExpression	start_offset = ovector [ 1 ]		996689	2		=			
ANR	997325	Identifier	start_offset		996689	0					
ANR	997326	ArrayIndexing	ovector [ 1 ]		996689	1					
ANR	997327	Identifier	ovector		996689	0					
ANR	997328	PrimaryExpression	1		996689	1					
ANR	997329	IfStatement	if ( ovector [ 0 ] == ovector [ 1 ] )		996689	2					
ANR	997330	Condition	ovector [ 0 ] == ovector [ 1 ]	305:6:11776:11799	996689	0	True				
ANR	997331	EqualityExpression	ovector [ 0 ] == ovector [ 1 ]		996689	0		==			
ANR	997332	ArrayIndexing	ovector [ 0 ]		996689	0					
ANR	997333	Identifier	ovector		996689	0					
ANR	997334	PrimaryExpression	0		996689	1					
ANR	997335	ArrayIndexing	ovector [ 1 ]		996689	1					
ANR	997336	Identifier	ovector		996689	0					
ANR	997337	PrimaryExpression	1		996689	1					
ANR	997338	CompoundStatement		260:4:10076:10076	996689	1					
ANR	997339	IfStatement	if ( ovector [ 0 ] == subject_length )		996689	0					
ANR	997340	Condition	ovector [ 0 ] == subject_length	307:8:11816:11843	996689	0	True				
ANR	997341	EqualityExpression	ovector [ 0 ] == subject_length		996689	0		==			
ANR	997342	ArrayIndexing	ovector [ 0 ]		996689	0					
ANR	997343	Identifier	ovector		996689	0					
ANR	997344	PrimaryExpression	0		996689	1					
ANR	997345	Identifier	subject_length		996689	1					
ANR	997346	BreakStatement	break ;	307:38:11846:11851	996689	1	True				
ANR	997347	ExpressionStatement	options = PCRE_NOTEMPTY_ATSTART | PCRE_ANCHORED	308:4:11857:11904	996689	1	True				
ANR	997348	AssignmentExpression	options = PCRE_NOTEMPTY_ATSTART | PCRE_ANCHORED		996689	0		=			
ANR	997349	Identifier	options		996689	0					
ANR	997350	InclusiveOrExpression	PCRE_NOTEMPTY_ATSTART | PCRE_ANCHORED		996689	1		|			
ANR	997351	Identifier	PCRE_NOTEMPTY_ATSTART		996689	0					
ANR	997352	Identifier	PCRE_ANCHORED		996689	1					
ANR	997353	ExpressionStatement	"rc = pcre_exec ( re , NULL , subject , subject_length , start_offset , options , ovector , OVECCOUNT )"	313:2:11956:12399	996689	3	True				
ANR	997354	AssignmentExpression	"rc = pcre_exec ( re , NULL , subject , subject_length , start_offset , options , ovector , OVECCOUNT )"		996689	0		=			
ANR	997355	Identifier	rc		996689	0					
ANR	997356	CallExpression	"pcre_exec ( re , NULL , subject , subject_length , start_offset , options , ovector , OVECCOUNT )"		996689	1					
ANR	997357	Callee	pcre_exec		996689	0					
ANR	997358	Identifier	pcre_exec		996689	0					
ANR	997359	ArgumentList	re		996689	1					
ANR	997360	Argument	re		996689	0					
ANR	997361	Identifier	re		996689	0					
ANR	997362	Argument	NULL		996689	1					
ANR	997363	Identifier	NULL		996689	0					
ANR	997364	Argument	subject		996689	2					
ANR	997365	Identifier	subject		996689	0					
ANR	997366	Argument	subject_length		996689	3					
ANR	997367	Identifier	subject_length		996689	0					
ANR	997368	Argument	start_offset		996689	4					
ANR	997369	Identifier	start_offset		996689	0					
ANR	997370	Argument	options		996689	5					
ANR	997371	Identifier	options		996689	0					
ANR	997372	Argument	ovector		996689	6					
ANR	997373	Identifier	ovector		996689	0					
ANR	997374	Argument	OVECCOUNT		996689	7					
ANR	997375	Identifier	OVECCOUNT		996689	0					
ANR	997376	IfStatement	if ( rc == PCRE_ERROR_NOMATCH )		996689	4					
ANR	997377	Condition	rc == PCRE_ERROR_NOMATCH	336:6:13248:13271	996689	0	True				
ANR	997378	EqualityExpression	rc == PCRE_ERROR_NOMATCH		996689	0		==			
ANR	997379	Identifier	rc		996689	0					
ANR	997380	Identifier	PCRE_ERROR_NOMATCH		996689	1					
ANR	997381	CompoundStatement		291:4:11548:11548	996689	1					
ANR	997382	IfStatement	if ( options == 0 )		996689	0					
ANR	997383	Condition	options == 0	338:8:13288:13299	996689	0	True				
ANR	997384	EqualityExpression	options == 0		996689	0		==			
ANR	997385	Identifier	options		996689	0					
ANR	997386	PrimaryExpression	0		996689	1					
ANR	997387	BreakStatement	break ;	338:22:13302:13307	996689	1	True				
ANR	997388	ExpressionStatement	ovector [ 1 ] = start_offset + 1	339:4:13356:13385	996689	1	True				
ANR	997389	AssignmentExpression	ovector [ 1 ] = start_offset + 1		996689	0		=			
ANR	997390	ArrayIndexing	ovector [ 1 ]		996689	0					
ANR	997391	Identifier	ovector		996689	0					
ANR	997392	PrimaryExpression	1		996689	1					
ANR	997393	AdditiveExpression	start_offset + 1		996689	1		+			
ANR	997394	Identifier	start_offset		996689	0					
ANR	997395	PrimaryExpression	1		996689	1					
ANR	997396	IfStatement	if ( crlf_is_newline && start_offset < subject_length - 1 && subject [ start_offset ] == '\\r' && subject [ start_offset + 1 ] == '\\n' )		996689	2					
ANR	997397	Condition	crlf_is_newline && start_offset < subject_length - 1 && subject [ start_offset ] == '\\r' && subject [ start_offset + 1 ] == '\\n'	340:8:13431:13649	996689	0	True				
ANR	997398	AndExpression	crlf_is_newline && start_offset < subject_length - 1 && subject [ start_offset ] == '\\r' && subject [ start_offset + 1 ] == '\\n'		996689	0		&&			
ANR	997399	Identifier	crlf_is_newline		996689	0					
ANR	997400	AndExpression	start_offset < subject_length - 1 && subject [ start_offset ] == '\\r' && subject [ start_offset + 1 ] == '\\n'		996689	1		&&			
ANR	997401	RelationalExpression	start_offset < subject_length - 1		996689	0		<			
ANR	997402	Identifier	start_offset		996689	0					
ANR	997403	AdditiveExpression	subject_length - 1		996689	1		-			
ANR	997404	Identifier	subject_length		996689	0					
ANR	997405	PrimaryExpression	1		996689	1					
ANR	997406	AndExpression	subject [ start_offset ] == '\\r' && subject [ start_offset + 1 ] == '\\n'		996689	1		&&			
ANR	997407	EqualityExpression	subject [ start_offset ] == '\\r'		996689	0		==			
ANR	997408	ArrayIndexing	subject [ start_offset ]		996689	0					
ANR	997409	Identifier	subject		996689	0					
ANR	997410	Identifier	start_offset		996689	1					
ANR	997411	PrimaryExpression	'\\r'		996689	1					
ANR	997412	EqualityExpression	subject [ start_offset + 1 ] == '\\n'		996689	1		==			
ANR	997413	ArrayIndexing	subject [ start_offset + 1 ]		996689	0					
ANR	997414	Identifier	subject		996689	0					
ANR	997415	AdditiveExpression	start_offset + 1		996689	1		+			
ANR	997416	Identifier	start_offset		996689	0					
ANR	997417	PrimaryExpression	1		996689	1					
ANR	997418	PrimaryExpression	'\\n'		996689	1					
ANR	997419	ExpressionStatement	ovector [ 1 ] += 1	344:6:13658:13673	996689	1	True				
ANR	997420	AssignmentExpression	ovector [ 1 ] += 1		996689	0		+=			
ANR	997421	ArrayIndexing	ovector [ 1 ]		996689	0					
ANR	997422	Identifier	ovector		996689	0					
ANR	997423	PrimaryExpression	1		996689	1					
ANR	997424	PrimaryExpression	1		996689	1					
ANR	997425	ElseStatement	else		996689	0					
ANR	997426	IfStatement	if ( utf8 )		996689	0					
ANR	997427	Condition	utf8	345:13:13740:13743	996689	0	True				
ANR	997428	Identifier	utf8		996689	0					
ANR	997429	CompoundStatement		300:6:12078:12078	996689	1					
ANR	997430	WhileStatement	while ( ovector [ 1 ] < subject_length )		996689	0					
ANR	997431	Condition	ovector [ 1 ] < subject_length	347:13:13891:13917	996689	0	True				
ANR	997432	RelationalExpression	ovector [ 1 ] < subject_length		996689	0		<			
ANR	997433	ArrayIndexing	ovector [ 1 ]		996689	0					
ANR	997434	Identifier	ovector		996689	0					
ANR	997435	PrimaryExpression	1		996689	1					
ANR	997436	Identifier	subject_length		996689	1					
ANR	997437	CompoundStatement		302:8:12221:12221	996689	1					
ANR	997438	IfStatement	if ( ( subject [ ovector [ 1 ] ] & 0xc0 ) != 0x80 )		996689	0					
ANR	997439	Condition	( subject [ ovector [ 1 ] ] & 0xc0 ) != 0x80	349:12:13965:14000	996689	0	True				
ANR	997440	EqualityExpression	( subject [ ovector [ 1 ] ] & 0xc0 ) != 0x80		996689	0		!=			
ANR	997441	BitAndExpression	subject [ ovector [ 1 ] ] & 0xc0		996689	0		&			
ANR	997442	ArrayIndexing	subject [ ovector [ 1 ] ]		996689	0					
ANR	997443	Identifier	subject		996689	0					
ANR	997444	ArrayIndexing	ovector [ 1 ]		996689	1					
ANR	997445	Identifier	ovector		996689	0					
ANR	997446	PrimaryExpression	1		996689	1					
ANR	997447	PrimaryExpression	0xc0		996689	1					
ANR	997448	PrimaryExpression	0x80		996689	1					
ANR	997449	BreakStatement	break ;	349:50:14003:14008	996689	1	True				
ANR	997450	ExpressionStatement	ovector [ 1 ] += 1	350:8:14018:14033	996689	1	True				
ANR	997451	AssignmentExpression	ovector [ 1 ] += 1		996689	0		+=			
ANR	997452	ArrayIndexing	ovector [ 1 ]		996689	0					
ANR	997453	Identifier	ovector		996689	0					
ANR	997454	PrimaryExpression	1		996689	1					
ANR	997455	PrimaryExpression	1		996689	1					
ANR	997456	ContinueStatement	continue ;	353:4:14057:14065	996689	3	True				
ANR	997457	IfStatement	if ( rc < 0 )		996689	5					
ANR	997458	Condition	rc < 0	358:6:14165:14170	996689	0	True				
ANR	997459	RelationalExpression	rc < 0		996689	0		<			
ANR	997460	Identifier	rc		996689	0					
ANR	997461	PrimaryExpression	0		996689	1					
ANR	997462	CompoundStatement		313:4:12447:12447	996689	1					
ANR	997463	ExpressionStatement	"printf ( ""Matching error %d\\n"" , rc )"	360:4:14183:14216	996689	0	True				
ANR	997464	CallExpression	"printf ( ""Matching error %d\\n"" , rc )"		996689	0					
ANR	997465	Callee	printf		996689	0					
ANR	997466	Identifier	printf		996689	0					
ANR	997467	ArgumentList	"""Matching error %d\\n"""		996689	1					
ANR	997468	Argument	"""Matching error %d\\n"""		996689	0					
ANR	997469	PrimaryExpression	"""Matching error %d\\n"""		996689	0					
ANR	997470	Argument	rc		996689	1					
ANR	997471	Identifier	rc		996689	0					
ANR	997472	ExpressionStatement	pcre_free ( re )	361:4:14222:14235	996689	1	True				
ANR	997473	CallExpression	pcre_free ( re )		996689	0					
ANR	997474	Callee	pcre_free		996689	0					
ANR	997475	Identifier	pcre_free		996689	0					
ANR	997476	ArgumentList	re		996689	1					
ANR	997477	Argument	re		996689	0					
ANR	997478	Identifier	re		996689	0					
ANR	997479	ReturnStatement	return 1 ;	362:4:14295:14303	996689	2	True				
ANR	997480	PrimaryExpression	1		996689	0					
ANR	997481	ExpressionStatement	"printf ( ""\\nMatch succeeded again at offset %d\\n"" , ovector [ 0 ] )"	367:2:14339:14399	996689	6	True				
ANR	997482	CallExpression	"printf ( ""\\nMatch succeeded again at offset %d\\n"" , ovector [ 0 ] )"		996689	0					
ANR	997483	Callee	printf		996689	0					
ANR	997484	Identifier	printf		996689	0					
ANR	997485	ArgumentList	"""\\nMatch succeeded again at offset %d\\n"""		996689	1					
ANR	997486	Argument	"""\\nMatch succeeded again at offset %d\\n"""		996689	0					
ANR	997487	PrimaryExpression	"""\\nMatch succeeded again at offset %d\\n"""		996689	0					
ANR	997488	Argument	ovector [ 0 ]		996689	1					
ANR	997489	ArrayIndexing	ovector [ 0 ]		996689	0					
ANR	997490	Identifier	ovector		996689	0					
ANR	997491	PrimaryExpression	0		996689	1					
ANR	997492	IfStatement	if ( rc == 0 )		996689	7					
ANR	997493	Condition	rc == 0	371:6:14479:14485	996689	0	True				
ANR	997494	EqualityExpression	rc == 0		996689	0		==			
ANR	997495	Identifier	rc		996689	0					
ANR	997496	PrimaryExpression	0		996689	1					
ANR	997497	CompoundStatement		326:4:12762:12762	996689	1					
ANR	997498	ExpressionStatement	rc = OVECCOUNT / 3	373:4:14498:14514	996689	0	True				
ANR	997499	AssignmentExpression	rc = OVECCOUNT / 3		996689	0		=			
ANR	997500	Identifier	rc		996689	0					
ANR	997501	MultiplicativeExpression	OVECCOUNT / 3		996689	1		/			
ANR	997502	Identifier	OVECCOUNT		996689	0					
ANR	997503	PrimaryExpression	3		996689	1					
ANR	997504	ExpressionStatement	"printf ( ""ovector only has room for %d captured substrings\\n"" , rc - 1 )"	374:4:14520:14588	996689	1	True				
ANR	997505	CallExpression	"printf ( ""ovector only has room for %d captured substrings\\n"" , rc - 1 )"		996689	0					
ANR	997506	Callee	printf		996689	0					
ANR	997507	Identifier	printf		996689	0					
ANR	997508	ArgumentList	"""ovector only has room for %d captured substrings\\n"""		996689	1					
ANR	997509	Argument	"""ovector only has room for %d captured substrings\\n"""		996689	0					
ANR	997510	PrimaryExpression	"""ovector only has room for %d captured substrings\\n"""		996689	0					
ANR	997511	Argument	rc - 1		996689	1					
ANR	997512	AdditiveExpression	rc - 1		996689	0		-			
ANR	997513	Identifier	rc		996689	0					
ANR	997514	PrimaryExpression	1		996689	1					
ANR	997515	ForStatement	for ( i = 0 ; i < rc ; i ++ )		996689	8					
ANR	997516	ForInit	i = 0 ;	380:7:14717:14722	996689	0	True				
ANR	997517	AssignmentExpression	i = 0		996689	0		=			
ANR	997518	Identifier	i		996689	0					
ANR	997519	PrimaryExpression	0		996689	1					
ANR	997520	Condition	i < rc	380:14:14724:14729	996689	1	True				
ANR	997521	RelationalExpression	i < rc		996689	0		<			
ANR	997522	Identifier	i		996689	0					
ANR	997523	Identifier	rc		996689	1					
ANR	997524	PostIncDecOperationExpression	i ++	380:22:14732:14734	996689	2	True				
ANR	997525	Identifier	i		996689	0					
ANR	997526	IncDec	++		996689	1					
ANR	997527	CompoundStatement		337:4:13069:13121	996689	3					
ANR	997528	IdentifierDeclStatement	char * substring_start = subject + ovector [ 2 * i ] ;	382:4:14747:14793	996689	0	True				
ANR	997529	IdentifierDecl	* substring_start = subject + ovector [ 2 * i ]		996689	0					
ANR	997530	IdentifierDeclType	char *		996689	0					
ANR	997531	Identifier	substring_start		996689	1					
ANR	997532	AssignmentExpression	* substring_start = subject + ovector [ 2 * i ]		996689	2		=			
ANR	997533	Identifier	substring_start		996689	0					
ANR	997534	AdditiveExpression	subject + ovector [ 2 * i ]		996689	1		+			
ANR	997535	Identifier	subject		996689	0					
ANR	997536	ArrayIndexing	ovector [ 2 * i ]		996689	1					
ANR	997537	Identifier	ovector		996689	0					
ANR	997538	MultiplicativeExpression	2 * i		996689	1		*			
ANR	997539	PrimaryExpression	2		996689	0					
ANR	997540	Identifier	i		996689	1					
ANR	997541	IdentifierDeclStatement	int substring_length = ovector [ 2 * i + 1 ] - ovector [ 2 * i ] ;	383:4:14799:14851	996689	1	True				
ANR	997542	IdentifierDecl	substring_length = ovector [ 2 * i + 1 ] - ovector [ 2 * i ]		996689	0					
ANR	997543	IdentifierDeclType	int		996689	0					
ANR	997544	Identifier	substring_length		996689	1					
ANR	997545	AssignmentExpression	substring_length = ovector [ 2 * i + 1 ] - ovector [ 2 * i ]		996689	2		=			
ANR	997546	Identifier	substring_length		996689	0					
ANR	997547	AdditiveExpression	ovector [ 2 * i + 1 ] - ovector [ 2 * i ]		996689	1		-			
ANR	997548	ArrayIndexing	ovector [ 2 * i + 1 ]		996689	0					
ANR	997549	Identifier	ovector		996689	0					
ANR	997550	AdditiveExpression	2 * i + 1		996689	1		+			
ANR	997551	MultiplicativeExpression	2 * i		996689	0		*			
ANR	997552	PrimaryExpression	2		996689	0					
ANR	997553	Identifier	i		996689	1					
ANR	997554	PrimaryExpression	1		996689	1					
ANR	997555	ArrayIndexing	ovector [ 2 * i ]		996689	1					
ANR	997556	Identifier	ovector		996689	0					
ANR	997557	MultiplicativeExpression	2 * i		996689	1		*			
ANR	997558	PrimaryExpression	2		996689	0					
ANR	997559	Identifier	i		996689	1					
ANR	997560	ExpressionStatement	"printf ( ""%2d: %.*s\\n"" , i , substring_length , substring_start )"	384:4:14857:14916	996689	2	True				
ANR	997561	CallExpression	"printf ( ""%2d: %.*s\\n"" , i , substring_length , substring_start )"		996689	0					
ANR	997562	Callee	printf		996689	0					
ANR	997563	Identifier	printf		996689	0					
ANR	997564	ArgumentList	"""%2d: %.*s\\n"""		996689	1					
ANR	997565	Argument	"""%2d: %.*s\\n"""		996689	0					
ANR	997566	PrimaryExpression	"""%2d: %.*s\\n"""		996689	0					
ANR	997567	Argument	i		996689	1					
ANR	997568	Identifier	i		996689	0					
ANR	997569	Argument	substring_length		996689	2					
ANR	997570	Identifier	substring_length		996689	0					
ANR	997571	Argument	substring_start		996689	3					
ANR	997572	Identifier	substring_start		996689	0					
ANR	997573	IfStatement	if ( namecount <= 0 )		996689	9					
ANR	997574	Condition	namecount <= 0	387:6:14931:14944	996689	0	True				
ANR	997575	RelationalExpression	namecount <= 0		996689	0		<=			
ANR	997576	Identifier	namecount		996689	0					
ANR	997577	PrimaryExpression	0		996689	1					
ANR	997578	ExpressionStatement	"printf ( ""No named substrings\\n"" )"	387:22:14947:14978	996689	1	True				
ANR	997579	CallExpression	"printf ( ""No named substrings\\n"" )"		996689	0					
ANR	997580	Callee	printf		996689	0					
ANR	997581	Identifier	printf		996689	0					
ANR	997582	ArgumentList	"""No named substrings\\n"""		996689	1					
ANR	997583	Argument	"""No named substrings\\n"""		996689	0					
ANR	997584	PrimaryExpression	"""No named substrings\\n"""		996689	0					
ANR	997585	ElseStatement	else		996689	0					
ANR	997586	CompoundStatement		343:4:13265:13299	996689	0					
ANR	997587	IdentifierDeclStatement	unsigned char * tabptr = name_table ;	389:4:14995:15029	996689	0	True				
ANR	997588	IdentifierDecl	* tabptr = name_table		996689	0					
ANR	997589	IdentifierDeclType	unsigned char *		996689	0					
ANR	997590	Identifier	tabptr		996689	1					
ANR	997591	AssignmentExpression	* tabptr = name_table		996689	2		=			
ANR	997592	Identifier	name_table		996689	0					
ANR	997593	Identifier	name_table		996689	1					
ANR	997594	ExpressionStatement	"printf ( ""Named substrings\\n"" )"	390:4:15035:15063	996689	1	True				
ANR	997595	CallExpression	"printf ( ""Named substrings\\n"" )"		996689	0					
ANR	997596	Callee	printf		996689	0					
ANR	997597	Identifier	printf		996689	0					
ANR	997598	ArgumentList	"""Named substrings\\n"""		996689	1					
ANR	997599	Argument	"""Named substrings\\n"""		996689	0					
ANR	997600	PrimaryExpression	"""Named substrings\\n"""		996689	0					
ANR	997601	ForStatement	for ( i = 0 ; i < namecount ; i ++ )		996689	2					
ANR	997602	ForInit	i = 0 ;	391:9:15074:15079	996689	0	True				
ANR	997603	AssignmentExpression	i = 0		996689	0		=			
ANR	997604	Identifier	i		996689	0					
ANR	997605	PrimaryExpression	0		996689	1					
ANR	997606	Condition	i < namecount	391:16:15081:15093	996689	1	True				
ANR	997607	RelationalExpression	i < namecount		996689	0		<			
ANR	997608	Identifier	i		996689	0					
ANR	997609	Identifier	namecount		996689	1					
ANR	997610	PostIncDecOperationExpression	i ++	391:31:15096:15098	996689	2	True				
ANR	997611	Identifier	i		996689	0					
ANR	997612	IncDec	++		996689	1					
ANR	997613	CompoundStatement		347:6:13385:13421	996689	3					
ANR	997614	IdentifierDeclStatement	int n = ( tabptr [ 0 ] << 8 ) | tabptr [ 1 ] ;	393:6:15115:15151	996689	0	True				
ANR	997615	IdentifierDecl	n = ( tabptr [ 0 ] << 8 ) | tabptr [ 1 ]		996689	0					
ANR	997616	IdentifierDeclType	int		996689	0					
ANR	997617	Identifier	n		996689	1					
ANR	997618	AssignmentExpression	n = ( tabptr [ 0 ] << 8 ) | tabptr [ 1 ]		996689	2		=			
ANR	997619	Identifier	n		996689	0					
ANR	997620	InclusiveOrExpression	( tabptr [ 0 ] << 8 ) | tabptr [ 1 ]		996689	1		|			
ANR	997621	ShiftExpression	tabptr [ 0 ] << 8		996689	0		<<			
ANR	997622	ArrayIndexing	tabptr [ 0 ]		996689	0					
ANR	997623	Identifier	tabptr		996689	0					
ANR	997624	PrimaryExpression	0		996689	1					
ANR	997625	PrimaryExpression	8		996689	1					
ANR	997626	ArrayIndexing	tabptr [ 1 ]		996689	1					
ANR	997627	Identifier	tabptr		996689	0					
ANR	997628	PrimaryExpression	1		996689	1					
ANR	997629	ExpressionStatement	"printf ( ""(%d) %*s: %.*s\\n"" , n , name_entry_size - 3 , tabptr + 2 , ovector [ 2 * n + 1 ] - ovector [ 2 * n ] , subject + ovector [ 2 * n ] )"	394:6:15159:15284	996689	1	True				
ANR	997630	CallExpression	"printf ( ""(%d) %*s: %.*s\\n"" , n , name_entry_size - 3 , tabptr + 2 , ovector [ 2 * n + 1 ] - ovector [ 2 * n ] , subject + ovector [ 2 * n ] )"		996689	0					
ANR	997631	Callee	printf		996689	0					
ANR	997632	Identifier	printf		996689	0					
ANR	997633	ArgumentList	"""(%d) %*s: %.*s\\n"""		996689	1					
ANR	997634	Argument	"""(%d) %*s: %.*s\\n"""		996689	0					
ANR	997635	PrimaryExpression	"""(%d) %*s: %.*s\\n"""		996689	0					
ANR	997636	Argument	n		996689	1					
ANR	997637	Identifier	n		996689	0					
ANR	997638	Argument	name_entry_size - 3		996689	2					
ANR	997639	AdditiveExpression	name_entry_size - 3		996689	0		-			
ANR	997640	Identifier	name_entry_size		996689	0					
ANR	997641	PrimaryExpression	3		996689	1					
ANR	997642	Argument	tabptr + 2		996689	3					
ANR	997643	AdditiveExpression	tabptr + 2		996689	0		+			
ANR	997644	Identifier	tabptr		996689	0					
ANR	997645	PrimaryExpression	2		996689	1					
ANR	997646	Argument	ovector [ 2 * n + 1 ] - ovector [ 2 * n ]		996689	4					
ANR	997647	AdditiveExpression	ovector [ 2 * n + 1 ] - ovector [ 2 * n ]		996689	0		-			
ANR	997648	ArrayIndexing	ovector [ 2 * n + 1 ]		996689	0					
ANR	997649	Identifier	ovector		996689	0					
ANR	997650	AdditiveExpression	2 * n + 1		996689	1		+			
ANR	997651	MultiplicativeExpression	2 * n		996689	0		*			
ANR	997652	PrimaryExpression	2		996689	0					
ANR	997653	Identifier	n		996689	1					
ANR	997654	PrimaryExpression	1		996689	1					
ANR	997655	ArrayIndexing	ovector [ 2 * n ]		996689	1					
ANR	997656	Identifier	ovector		996689	0					
ANR	997657	MultiplicativeExpression	2 * n		996689	1		*			
ANR	997658	PrimaryExpression	2		996689	0					
ANR	997659	Identifier	n		996689	1					
ANR	997660	Argument	subject + ovector [ 2 * n ]		996689	5					
ANR	997661	AdditiveExpression	subject + ovector [ 2 * n ]		996689	0		+			
ANR	997662	Identifier	subject		996689	0					
ANR	997663	ArrayIndexing	ovector [ 2 * n ]		996689	1					
ANR	997664	Identifier	ovector		996689	0					
ANR	997665	MultiplicativeExpression	2 * n		996689	1		*			
ANR	997666	PrimaryExpression	2		996689	0					
ANR	997667	Identifier	n		996689	1					
ANR	997668	ExpressionStatement	tabptr += name_entry_size	396:6:15292:15317	996689	2	True				
ANR	997669	AssignmentExpression	tabptr += name_entry_size		996689	0		+=			
ANR	997670	Identifier	tabptr		996689	0					
ANR	997671	Identifier	name_entry_size		996689	1					
ANR	997672	ExpressionStatement	"printf ( ""\\n"" )"	401:0:15399:15411	996689	37	True				
ANR	997673	CallExpression	"printf ( ""\\n"" )"		996689	0					
ANR	997674	Callee	printf		996689	0					
ANR	997675	Identifier	printf		996689	0					
ANR	997676	ArgumentList	"""\\n"""		996689	1					
ANR	997677	Argument	"""\\n"""		996689	0					
ANR	997678	PrimaryExpression	"""\\n"""		996689	0					
ANR	997679	ExpressionStatement	pcre_free ( re )	402:0:15413:15426	996689	38	True				
ANR	997680	CallExpression	pcre_free ( re )		996689	0					
ANR	997681	Callee	pcre_free		996689	0					
ANR	997682	Identifier	pcre_free		996689	0					
ANR	997683	ArgumentList	re		996689	1					
ANR	997684	Argument	re		996689	0					
ANR	997685	Identifier	re		996689	0					
ANR	997686	ReturnStatement	return 0 ;	403:0:15485:15493	996689	39	True				
ANR	997687	PrimaryExpression	0		996689	0					
ANR	997688	ReturnType	int		996689	1					
ANR	997689	Identifier	main		996689	2					
ANR	997690	ParameterList	"int argc , char * * argv"		996689	3					
ANR	997691	Parameter	int argc	46:9:1706:1713	996689	0	True				
ANR	997692	ParameterType	int		996689	0					
ANR	997693	Identifier	argc		996689	1					
ANR	997694	Parameter	char * * argv	46:19:1716:1726	996689	1	True				
ANR	997695	ParameterType	char * *		996689	0					
ANR	997696	Identifier	argv		996689	1					
ANR	997697	CFGEntryNode	ENTRY		996689		True				
ANR	997698	CFGExitNode	EXIT		996689		True				
ANR	997699	InfiniteForNode	true		996689		True				
ANR	997700	Symbol	& error		996689						
ANR	997701	Symbol	pcre_exec		996689						
ANR	997702	Symbol	subject		996689						
ANR	997703	Symbol	* * ovector		996689						
ANR	997704	Symbol	& name_table		996689						
ANR	997705	Symbol	name_entry_size		996689						
ANR	997706	Symbol	& namecount		996689						
ANR	997707	Symbol	option_bits		996689						
ANR	997708	Symbol	* argv		996689						
ANR	997709	Symbol	strlen		996689						
ANR	997710	Symbol	find_all		996689						
ANR	997711	Symbol	substring_length		996689						
ANR	997712	Symbol	PCRE_INFO_NAMECOUNT		996689						
ANR	997713	Symbol	PCRE_NEWLINE_CR		996689						
ANR	997714	Symbol	PCRE_INFO_NAMEENTRYSIZE		996689						
ANR	997715	Symbol	options		996689						
ANR	997716	Symbol	& erroffset		996689						
ANR	997717	Symbol	PCRE_NEWLINE_LF		996689						
ANR	997718	Symbol	ovector		996689						
ANR	997719	Symbol	strcmp		996689						
ANR	997720	Symbol	substring_start		996689						
ANR	997721	Symbol	NULL		996689						
ANR	997722	Symbol	namecount		996689						
ANR	997723	Symbol	crlf_is_newline		996689						
ANR	997724	Symbol	PCRE_NEWLINE_ANY		996689						
ANR	997725	Symbol	rc		996689						
ANR	997726	Symbol	OVECCOUNT		996689						
ANR	997727	Symbol	* ovector		996689						
ANR	997728	Symbol	PCRE_ERROR_NOMATCH		996689						
ANR	997729	Symbol	PCRE_NEWLINE_ANYCRLF		996689						
ANR	997730	Symbol	re		996689						
ANR	997731	Symbol	& name_entry_size		996689						
ANR	997732	Symbol	erroffset		996689						
ANR	997733	Symbol	* subject		996689						
ANR	997734	Symbol	PCRE_NEWLINE_CRLF		996689						
ANR	997735	Symbol	name_table		996689						
ANR	997736	Symbol	utf8		996689						
ANR	997737	Symbol	pattern		996689						
ANR	997738	Symbol	error		996689						
ANR	997739	Symbol	PCRE_INFO_NAMETABLE		996689						
ANR	997740	Symbol	argv		996689						
ANR	997741	Symbol	pcre_compile		996689						
ANR	997742	Symbol	tabptr		996689						
ANR	997743	Symbol	& option_bits		996689						
ANR	997744	Symbol	* tabptr		996689						
ANR	997745	Symbol	argc		996689						
ANR	997746	Symbol	d		996689						
ANR	997747	Symbol	PCRE_ANCHORED		996689						
ANR	997748	Symbol	i		996689						
ANR	997749	Symbol	* start_offset		996689						
ANR	997750	Symbol	& d		996689						
ANR	997751	Symbol	n		996689						
ANR	997752	Symbol	PCRE_NOTEMPTY_ATSTART		996689						
ANR	997753	Symbol	* i		996689						
ANR	997754	Symbol	subject_length		996689						
ANR	997755	Symbol	PCRE_CONFIG_NEWLINE		996689						
ANR	997756	Symbol	* n		996689						
ANR	997757	Symbol	PCRE_INFO_OPTIONS		996689						
ANR	997758	Symbol	PCRE_UTF8		996689						
ANR	997759	Symbol	start_offset		996689						
