command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6782	File	data/converged/CVE-2017-11142_php-src/Zend_zend.c								
ANR	6783	DeclStmt									
ANR	6784	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry *	zend_standard_class_def
ANR	6785	DeclStmt									
ANR	6786	Decl							ZEND_API zend_write_func_t	ZEND_API zend_write_func_t	zend_write
ANR	6787	DeclStmt									
ANR	6788	Decl							ZEND_API void ( * ) ( void )	ZEND_API void ( * ) ( void )	zend_block_interruptions
ANR	6789	DeclStmt									
ANR	6790	Decl							ZEND_API void ( * ) ( void )	ZEND_API void ( * ) ( void )	zend_unblock_interruptions
ANR	6791	DeclStmt									
ANR	6792	Decl							ZEND_API void ( * ) ( int ticks )	ZEND_API void ( * ) ( int ticks )	zend_ticks_function
ANR	6793	DeclStmt									
ANR	6794	Decl							"ZEND_API void ( * ) ( int type , const char * error_filename , const uint error_lineno , const char * format , va_list args )"	"ZEND_API void ( * ) ( int type , const char * error_filename , const uint error_lineno , const char * format , va_list args )"	zend_error_cb
ANR	6795	DeclStmt									
ANR	6796	Decl							"int ( * ) ( char * * pbuf , size_t max_len , const char * format , va_list ap )"	"int ( * ) ( char * * pbuf , size_t max_len , const char * format , va_list ap )"	zend_vspprintf
ANR	6797	DeclStmt									
ANR	6798	Decl							"ZEND_API char * ( * ) ( char * name , size_t name_len TSRMLS_DC )"	"ZEND_API char * ( * ) ( char * name , size_t name_len TSRMLS_DC )"	zend_getenv
ANR	6799	DeclStmt									
ANR	6800	Decl							"ZEND_API char * ( * ) ( const char * filename , int filename_len TSRMLS_DC )"	"ZEND_API char * ( * ) ( const char * filename , int filename_len TSRMLS_DC )"	zend_resolve_path
ANR	6801	DeclStmt									
ANR	6802	Decl							void ( * ) ( int seconds TSRMLS_DC )	void ( * ) ( int seconds TSRMLS_DC )	zend_on_timeout
ANR	6803	DeclStmt									
ANR	6804	Decl							"int ( * ) ( const char * name , uint name_length , zval * contents )"	"int ( * ) ( const char * name , uint name_length , zval * contents )"	zend_get_configuration_directive_p
ANR	6805	DeclStmt									
ANR	6806	Decl							~E_STRICT	~E_STRICT &	~E_DEPRECATED
ANR	6807	DeclStmt									
ANR	6808	Decl							ZEND_API int	ZEND_API int	compiler_globals_id
ANR	6809	DeclStmt									
ANR	6810	Decl							ZEND_API int	ZEND_API int	executor_globals_id
ANR	6811	DeclStmt									
ANR	6812	Decl							HashTable	HashTable *	global_function_table
ANR	6813	DeclStmt									
ANR	6814	Decl							HashTable	HashTable *	global_class_table
ANR	6815	DeclStmt									
ANR	6816	Decl							HashTable	HashTable *	global_constants_table
ANR	6817	DeclStmt									
ANR	6818	Decl							HashTable	HashTable *	global_auto_globals_table
ANR	6819	DeclStmt									
ANR	6820	Decl							HashTable	HashTable *	global_persistent_list
ANR	6821	DeclStmt									
ANR	6822	Decl							ZEND_API zend_utility_values	ZEND_API zend_utility_values	zend_uv
ANR	6823	DeclStmt									
ANR	6824	Decl							ZEND_API zval	ZEND_API zval	zval_used_for_init
ANR	6825	DeclStmt									
ANR	6826	Decl							char	char *	zend_version_info
ANR	6827	DeclStmt									
ANR	6828	Decl							uint	uint	zend_version_info_length
ANR	6829	Function	print_hash	134:0:5290:6921							
ANR	6830	FunctionDef	"print_hash (zend_write_func_t write_func , HashTable * ht , int indent , zend_bool is_object TSRMLS_DC)"		6829	0					
ANR	6831	CompoundStatement		135:0:5411:6921	6829	0					
ANR	6832	IdentifierDeclStatement	zval * * tmp ;	136:1:5414:5424	6829	0	True				
ANR	6833	IdentifierDecl	* * tmp		6829	0					
ANR	6834	IdentifierDeclType	zval * *		6829	0					
ANR	6835	Identifier	tmp		6829	1					
ANR	6836	IdentifierDeclStatement	char * string_key ;	137:1:5427:5443	6829	1	True				
ANR	6837	IdentifierDecl	* string_key		6829	0					
ANR	6838	IdentifierDeclType	char *		6829	0					
ANR	6839	Identifier	string_key		6829	1					
ANR	6840	IdentifierDeclStatement	HashPosition iterator ;	138:1:5446:5467	6829	2	True				
ANR	6841	IdentifierDecl	iterator		6829	0					
ANR	6842	IdentifierDeclType	HashPosition		6829	0					
ANR	6843	Identifier	iterator		6829	1					
ANR	6844	IdentifierDeclStatement	ulong num_key ;	139:1:5470:5483	6829	3	True				
ANR	6845	IdentifierDecl	num_key		6829	0					
ANR	6846	IdentifierDeclType	ulong		6829	0					
ANR	6847	Identifier	num_key		6829	1					
ANR	6848	IdentifierDeclStatement	uint str_len ;	140:1:5486:5498	6829	4	True				
ANR	6849	IdentifierDecl	str_len		6829	0					
ANR	6850	IdentifierDeclType	uint		6829	0					
ANR	6851	Identifier	str_len		6829	1					
ANR	6852	IdentifierDeclStatement	int i ;	141:1:5501:5506	6829	5	True				
ANR	6853	IdentifierDecl	i		6829	0					
ANR	6854	IdentifierDeclType	int		6829	0					
ANR	6855	Identifier	i		6829	1					
ANR	6856	ForStatement	for ( i = 0 ; i < indent ; i ++ )		6829	6					
ANR	6857	ForInit	i = 0 ;	143:6:5515:5520	6829	0	True				
ANR	6858	AssignmentExpression	i = 0		6829	0		=			
ANR	6859	Identifier	i		6829	0					
ANR	6860	PrimaryExpression	0		6829	1					
ANR	6861	Condition	i < indent	143:13:5522:5531	6829	1	True				
ANR	6862	RelationalExpression	i < indent		6829	0		<			
ANR	6863	Identifier	i		6829	0					
ANR	6864	Identifier	indent		6829	1					
ANR	6865	PostIncDecOperationExpression	i ++	143:25:5534:5536	6829	2	True				
ANR	6866	Identifier	i		6829	0					
ANR	6867	IncDec	++		6829	1					
ANR	6868	CompoundStatement		9:30:127:127	6829	3					
ANR	6869	ExpressionStatement	"ZEND_PUTS_EX ( "" "" )"	144:2:5543:5560	6829	0	True				
ANR	6870	CallExpression	"ZEND_PUTS_EX ( "" "" )"		6829	0					
ANR	6871	Callee	ZEND_PUTS_EX		6829	0					
ANR	6872	Identifier	ZEND_PUTS_EX		6829	0					
ANR	6873	ArgumentList	""" """		6829	1					
ANR	6874	Argument	""" """		6829	0					
ANR	6875	PrimaryExpression	""" """		6829	0					
ANR	6876	ExpressionStatement	"ZEND_PUTS_EX ( ""(\\n"" )"	146:1:5566:5585	6829	7	True				
ANR	6877	CallExpression	"ZEND_PUTS_EX ( ""(\\n"" )"		6829	0					
ANR	6878	Callee	ZEND_PUTS_EX		6829	0					
ANR	6879	Identifier	ZEND_PUTS_EX		6829	0					
ANR	6880	ArgumentList	"""(\\n"""		6829	1					
ANR	6881	Argument	"""(\\n"""		6829	0					
ANR	6882	PrimaryExpression	"""(\\n"""		6829	0					
ANR	6883	ExpressionStatement	indent += PRINT_ZVAL_INDENT	147:1:5588:5615	6829	8	True				
ANR	6884	AssignmentExpression	indent += PRINT_ZVAL_INDENT		6829	0		+=			
ANR	6885	Identifier	indent		6829	0					
ANR	6886	Identifier	PRINT_ZVAL_INDENT		6829	1					
ANR	6887	ExpressionStatement	"zend_hash_internal_pointer_reset_ex ( ht , & iterator )"	148:1:5618:5668	6829	9	True				
ANR	6888	CallExpression	"zend_hash_internal_pointer_reset_ex ( ht , & iterator )"		6829	0					
ANR	6889	Callee	zend_hash_internal_pointer_reset_ex		6829	0					
ANR	6890	Identifier	zend_hash_internal_pointer_reset_ex		6829	0					
ANR	6891	ArgumentList	ht		6829	1					
ANR	6892	Argument	ht		6829	0					
ANR	6893	Identifier	ht		6829	0					
ANR	6894	Argument	& iterator		6829	1					
ANR	6895	UnaryOperationExpression	& iterator		6829	0					
ANR	6896	UnaryOperator	&		6829	0					
ANR	6897	Identifier	iterator		6829	1					
ANR	6898	WhileStatement	"while ( zend_hash_get_current_data_ex ( ht , ( void * * ) & tmp , & iterator ) == SUCCESS )"		6829	10					
ANR	6899	Condition	"zend_hash_get_current_data_ex ( ht , ( void * * ) & tmp , & iterator ) == SUCCESS"	149:8:5678:5748	6829	0	True				
ANR	6900	EqualityExpression	"zend_hash_get_current_data_ex ( ht , ( void * * ) & tmp , & iterator ) == SUCCESS"		6829	0		==			
ANR	6901	CallExpression	"zend_hash_get_current_data_ex ( ht , ( void * * ) & tmp , & iterator )"		6829	0					
ANR	6902	Callee	zend_hash_get_current_data_ex		6829	0					
ANR	6903	Identifier	zend_hash_get_current_data_ex		6829	0					
ANR	6904	ArgumentList	ht		6829	1					
ANR	6905	Argument	ht		6829	0					
ANR	6906	Identifier	ht		6829	0					
ANR	6907	Argument	( void * * ) & tmp		6829	1					
ANR	6908	CastExpression	( void * * ) & tmp		6829	0					
ANR	6909	CastTarget	void * *		6829	0					
ANR	6910	UnaryOperationExpression	& tmp		6829	1					
ANR	6911	UnaryOperator	&		6829	0					
ANR	6912	Identifier	tmp		6829	1					
ANR	6913	Argument	& iterator		6829	2					
ANR	6914	UnaryOperationExpression	& iterator		6829	0					
ANR	6915	UnaryOperator	&		6829	0					
ANR	6916	Identifier	iterator		6829	1					
ANR	6917	Identifier	SUCCESS		6829	1					
ANR	6918	CompoundStatement		15:81:339:339	6829	1					
ANR	6919	ForStatement	for ( i = 0 ; i < indent ; i ++ )		6829	0					
ANR	6920	ForInit	i = 0 ;	150:7:5760:5765	6829	0	True				
ANR	6921	AssignmentExpression	i = 0		6829	0		=			
ANR	6922	Identifier	i		6829	0					
ANR	6923	PrimaryExpression	0		6829	1					
ANR	6924	Condition	i < indent	150:14:5767:5776	6829	1	True				
ANR	6925	RelationalExpression	i < indent		6829	0		<			
ANR	6926	Identifier	i		6829	0					
ANR	6927	Identifier	indent		6829	1					
ANR	6928	PostIncDecOperationExpression	i ++	150:26:5779:5781	6829	2	True				
ANR	6929	Identifier	i		6829	0					
ANR	6930	IncDec	++		6829	1					
ANR	6931	CompoundStatement		16:31:372:372	6829	3					
ANR	6932	ExpressionStatement	"ZEND_PUTS_EX ( "" "" )"	151:3:5789:5806	6829	0	True				
ANR	6933	CallExpression	"ZEND_PUTS_EX ( "" "" )"		6829	0					
ANR	6934	Callee	ZEND_PUTS_EX		6829	0					
ANR	6935	Identifier	ZEND_PUTS_EX		6829	0					
ANR	6936	ArgumentList	""" """		6829	1					
ANR	6937	Argument	""" """		6829	0					
ANR	6938	PrimaryExpression	""" """		6829	0					
ANR	6939	ExpressionStatement	"ZEND_PUTS_EX ( ""["" )"	153:2:5814:5831	6829	1	True				
ANR	6940	CallExpression	"ZEND_PUTS_EX ( ""["" )"		6829	0					
ANR	6941	Callee	ZEND_PUTS_EX		6829	0					
ANR	6942	Identifier	ZEND_PUTS_EX		6829	0					
ANR	6943	ArgumentList	"""["""		6829	1					
ANR	6944	Argument	"""["""		6829	0					
ANR	6945	PrimaryExpression	"""["""		6829	0					
ANR	6946	SwitchStatement	"switch ( zend_hash_get_current_key_ex ( ht , & string_key , & str_len , & num_key , 0 , & iterator ) )"		6829	2					
ANR	6947	Condition	"zend_hash_get_current_key_ex ( ht , & string_key , & str_len , & num_key , 0 , & iterator )"	154:10:5843:5921	6829	0	True				
ANR	6948	CallExpression	"zend_hash_get_current_key_ex ( ht , & string_key , & str_len , & num_key , 0 , & iterator )"		6829	0					
ANR	6949	Callee	zend_hash_get_current_key_ex		6829	0					
ANR	6950	Identifier	zend_hash_get_current_key_ex		6829	0					
ANR	6951	ArgumentList	ht		6829	1					
ANR	6952	Argument	ht		6829	0					
ANR	6953	Identifier	ht		6829	0					
ANR	6954	Argument	& string_key		6829	1					
ANR	6955	UnaryOperationExpression	& string_key		6829	0					
ANR	6956	UnaryOperator	&		6829	0					
ANR	6957	Identifier	string_key		6829	1					
ANR	6958	Argument	& str_len		6829	2					
ANR	6959	UnaryOperationExpression	& str_len		6829	0					
ANR	6960	UnaryOperator	&		6829	0					
ANR	6961	Identifier	str_len		6829	1					
ANR	6962	Argument	& num_key		6829	3					
ANR	6963	UnaryOperationExpression	& num_key		6829	0					
ANR	6964	UnaryOperator	&		6829	0					
ANR	6965	Identifier	num_key		6829	1					
ANR	6966	Argument	0		6829	4					
ANR	6967	PrimaryExpression	0		6829	0					
ANR	6968	Argument	& iterator		6829	5					
ANR	6969	UnaryOperationExpression	& iterator		6829	0					
ANR	6970	UnaryOperator	&		6829	0					
ANR	6971	Identifier	iterator		6829	1					
ANR	6972	CompoundStatement		20:91:512:512	6829	1					
ANR	6973	Label	case HASH_KEY_IS_STRING :	155:3:5929:5952	6829	0	True				
ANR	6974	Identifier	HASH_KEY_IS_STRING		6829	0					
ANR	6975	IfStatement	if ( is_object )		6829	1					
ANR	6976	Condition	is_object	156:8:5962:5970	6829	0	True				
ANR	6977	Identifier	is_object		6829	0					
ANR	6978	CompoundStatement		25:5:628:733	6829	1					
ANR	6979	IdentifierDeclStatement	"const char * prop_name , * class_name ;"	157:5:5980:6014	6829	0	True				
ANR	6980	IdentifierDecl	* prop_name		6829	0					
ANR	6981	IdentifierDeclType	const char *		6829	0					
ANR	6982	Identifier	prop_name		6829	1					
ANR	6983	IdentifierDecl	* class_name		6829	1					
ANR	6984	IdentifierDeclType	const char *		6829	0					
ANR	6985	Identifier	class_name		6829	1					
ANR	6986	IdentifierDeclStatement	int prop_len ;	158:5:6021:6033	6829	1	True				
ANR	6987	IdentifierDecl	prop_len		6829	0					
ANR	6988	IdentifierDeclType	int		6829	0					
ANR	6989	Identifier	prop_len		6829	1					
ANR	6990	IdentifierDeclStatement	"int mangled = zend_unmangle_property_name_ex ( string_key , str_len - 1 , & class_name , & prop_name , & prop_len ) ;"	159:5:6040:6145	6829	2	True				
ANR	6991	IdentifierDecl	"mangled = zend_unmangle_property_name_ex ( string_key , str_len - 1 , & class_name , & prop_name , & prop_len )"		6829	0					
ANR	6992	IdentifierDeclType	int		6829	0					
ANR	6993	Identifier	mangled		6829	1					
ANR	6994	AssignmentExpression	"mangled = zend_unmangle_property_name_ex ( string_key , str_len - 1 , & class_name , & prop_name , & prop_len )"		6829	2		=			
ANR	6995	Identifier	mangled		6829	0					
ANR	6996	CallExpression	"zend_unmangle_property_name_ex ( string_key , str_len - 1 , & class_name , & prop_name , & prop_len )"		6829	1					
ANR	6997	Callee	zend_unmangle_property_name_ex		6829	0					
ANR	6998	Identifier	zend_unmangle_property_name_ex		6829	0					
ANR	6999	ArgumentList	string_key		6829	1					
ANR	7000	Argument	string_key		6829	0					
ANR	7001	Identifier	string_key		6829	0					
ANR	7002	Argument	str_len - 1		6829	1					
ANR	7003	AdditiveExpression	str_len - 1		6829	0		-			
ANR	7004	Identifier	str_len		6829	0					
ANR	7005	PrimaryExpression	1		6829	1					
ANR	7006	Argument	& class_name		6829	2					
ANR	7007	UnaryOperationExpression	& class_name		6829	0					
ANR	7008	UnaryOperator	&		6829	0					
ANR	7009	Identifier	class_name		6829	1					
ANR	7010	Argument	& prop_name		6829	3					
ANR	7011	UnaryOperationExpression	& prop_name		6829	0					
ANR	7012	UnaryOperator	&		6829	0					
ANR	7013	Identifier	prop_name		6829	1					
ANR	7014	Argument	& prop_len		6829	4					
ANR	7015	UnaryOperationExpression	& prop_len		6829	0					
ANR	7016	UnaryOperator	&		6829	0					
ANR	7017	Identifier	prop_len		6829	1					
ANR	7018	ExpressionStatement	"ZEND_WRITE_EX ( prop_name , prop_len )"	161:5:6153:6187	6829	3	True				
ANR	7019	CallExpression	"ZEND_WRITE_EX ( prop_name , prop_len )"		6829	0					
ANR	7020	Callee	ZEND_WRITE_EX		6829	0					
ANR	7021	Identifier	ZEND_WRITE_EX		6829	0					
ANR	7022	ArgumentList	prop_name		6829	1					
ANR	7023	Argument	prop_name		6829	0					
ANR	7024	Identifier	prop_name		6829	0					
ANR	7025	Argument	prop_len		6829	1					
ANR	7026	Identifier	prop_len		6829	0					
ANR	7027	IfStatement	if ( class_name && mangled == SUCCESS )		6829	4					
ANR	7028	Condition	class_name && mangled == SUCCESS	162:9:6198:6229	6829	0	True				
ANR	7029	AndExpression	class_name && mangled == SUCCESS		6829	0		&&			
ANR	7030	Identifier	class_name		6829	0					
ANR	7031	EqualityExpression	mangled == SUCCESS		6829	1		==			
ANR	7032	Identifier	mangled		6829	0					
ANR	7033	Identifier	SUCCESS		6829	1					
ANR	7034	CompoundStatement		28:43:820:820	6829	1					
ANR	7035	IfStatement	if ( class_name [ 0 ] == '*' )		6829	0					
ANR	7036	Condition	class_name [ 0 ] == '*'	163:10:6244:6261	6829	0	True				
ANR	7037	EqualityExpression	class_name [ 0 ] == '*'		6829	0		==			
ANR	7038	ArrayIndexing	class_name [ 0 ]		6829	0					
ANR	7039	Identifier	class_name		6829	0					
ANR	7040	PrimaryExpression	0		6829	1					
ANR	7041	PrimaryExpression	'*'		6829	1					
ANR	7042	CompoundStatement		29:30:852:852	6829	1					
ANR	7043	ExpressionStatement	"ZEND_PUTS_EX ( "":protected"" )"	164:7:6273:6299	6829	0	True				
ANR	7044	CallExpression	"ZEND_PUTS_EX ( "":protected"" )"		6829	0					
ANR	7045	Callee	ZEND_PUTS_EX		6829	0					
ANR	7046	Identifier	ZEND_PUTS_EX		6829	0					
ANR	7047	ArgumentList	""":protected"""		6829	1					
ANR	7048	Argument	""":protected"""		6829	0					
ANR	7049	PrimaryExpression	""":protected"""		6829	0					
ANR	7050	ElseStatement	else		6829	0					
ANR	7051	CompoundStatement		31:13:902:902	6829	0					
ANR	7052	ExpressionStatement	"ZEND_PUTS_EX ( "":"" )"	166:7:6323:6340	6829	0	True				
ANR	7053	CallExpression	"ZEND_PUTS_EX ( "":"" )"		6829	0					
ANR	7054	Callee	ZEND_PUTS_EX		6829	0					
ANR	7055	Identifier	ZEND_PUTS_EX		6829	0					
ANR	7056	ArgumentList	""":"""		6829	1					
ANR	7057	Argument	""":"""		6829	0					
ANR	7058	PrimaryExpression	""":"""		6829	0					
ANR	7059	ExpressionStatement	ZEND_PUTS_EX ( class_name )	167:7:6349:6373	6829	1	True				
ANR	7060	CallExpression	ZEND_PUTS_EX ( class_name )		6829	0					
ANR	7061	Callee	ZEND_PUTS_EX		6829	0					
ANR	7062	Identifier	ZEND_PUTS_EX		6829	0					
ANR	7063	ArgumentList	class_name		6829	1					
ANR	7064	Argument	class_name		6829	0					
ANR	7065	Identifier	class_name		6829	0					
ANR	7066	ExpressionStatement	"ZEND_PUTS_EX ( "":private"" )"	168:7:6382:6406	6829	2	True				
ANR	7067	CallExpression	"ZEND_PUTS_EX ( "":private"" )"		6829	0					
ANR	7068	Callee	ZEND_PUTS_EX		6829	0					
ANR	7069	Identifier	ZEND_PUTS_EX		6829	0					
ANR	7070	ArgumentList	""":private"""		6829	1					
ANR	7071	Argument	""":private"""		6829	0					
ANR	7072	PrimaryExpression	""":private"""		6829	0					
ANR	7073	ElseStatement	else		6829	0					
ANR	7074	CompoundStatement		37:11:1022:1022	6829	0					
ANR	7075	ExpressionStatement	"ZEND_WRITE_EX ( string_key , str_len - 1 )"	172:5:6441:6477	6829	0	True				
ANR	7076	CallExpression	"ZEND_WRITE_EX ( string_key , str_len - 1 )"		6829	0					
ANR	7077	Callee	ZEND_WRITE_EX		6829	0					
ANR	7078	Identifier	ZEND_WRITE_EX		6829	0					
ANR	7079	ArgumentList	string_key		6829	1					
ANR	7080	Argument	string_key		6829	0					
ANR	7081	Identifier	string_key		6829	0					
ANR	7082	Argument	str_len - 1		6829	1					
ANR	7083	AdditiveExpression	str_len - 1		6829	0		-			
ANR	7084	Identifier	str_len		6829	0					
ANR	7085	PrimaryExpression	1		6829	1					
ANR	7086	BreakStatement	break ;	174:4:6489:6494	6829	2	True				
ANR	7087	Label	case HASH_KEY_IS_LONG :	175:3:6499:6520	6829	3	True				
ANR	7088	Identifier	HASH_KEY_IS_LONG		6829	0					
ANR	7089	CompoundStatement		43:5:1121:1133	6829	4					
ANR	7090	IdentifierDeclStatement	char key [ 25 ] ;	177:5:6533:6545	6829	0	True				
ANR	7091	IdentifierDecl	key [ 25 ]		6829	0					
ANR	7092	IdentifierDeclType	char [ 25 ]		6829	0					
ANR	7093	Identifier	key		6829	1					
ANR	7094	PrimaryExpression	25		6829	2					
ANR	7095	ExpressionStatement	"snprintf ( key , sizeof ( key ) , ""%ld"" , num_key )"	178:5:6552:6594	6829	1	True				
ANR	7096	CallExpression	"snprintf ( key , sizeof ( key ) , ""%ld"" , num_key )"		6829	0					
ANR	7097	Callee	snprintf		6829	0					
ANR	7098	Identifier	snprintf		6829	0					
ANR	7099	ArgumentList	key		6829	1					
ANR	7100	Argument	key		6829	0					
ANR	7101	Identifier	key		6829	0					
ANR	7102	Argument	sizeof ( key )		6829	1					
ANR	7103	SizeofExpression	sizeof ( key )		6829	0					
ANR	7104	Sizeof	sizeof		6829	0					
ANR	7105	SizeofOperand	key		6829	1					
ANR	7106	Argument	"""%ld"""		6829	2					
ANR	7107	PrimaryExpression	"""%ld"""		6829	0					
ANR	7108	Argument	num_key		6829	3					
ANR	7109	Identifier	num_key		6829	0					
ANR	7110	ExpressionStatement	ZEND_PUTS_EX ( key )	179:5:6601:6618	6829	2	True				
ANR	7111	CallExpression	ZEND_PUTS_EX ( key )		6829	0					
ANR	7112	Callee	ZEND_PUTS_EX		6829	0					
ANR	7113	Identifier	ZEND_PUTS_EX		6829	0					
ANR	7114	ArgumentList	key		6829	1					
ANR	7115	Argument	key		6829	0					
ANR	7116	Identifier	key		6829	0					
ANR	7117	BreakStatement	break ;	181:4:6630:6635	6829	5	True				
ANR	7118	ExpressionStatement	"ZEND_PUTS_EX ( ""] => "" )"	183:2:6643:6664	6829	3	True				
ANR	7119	CallExpression	"ZEND_PUTS_EX ( ""] => "" )"		6829	0					
ANR	7120	Callee	ZEND_PUTS_EX		6829	0					
ANR	7121	Identifier	ZEND_PUTS_EX		6829	0					
ANR	7122	ArgumentList	"""] => """		6829	1					
ANR	7123	Argument	"""] => """		6829	0					
ANR	7124	PrimaryExpression	"""] => """		6829	0					
ANR	7125	Statement	zend_print_zval_r_ex	184:2:6668:6687	6829	4	True				
ANR	7126	Statement	(	184:22:6688:6688	6829	5	True				
ANR	7127	Statement	write_func	184:23:6689:6698	6829	6	True				
ANR	7128	Statement	","	184:33:6699:6699	6829	7	True				
ANR	7129	Statement	*	184:35:6701:6701	6829	8	True				
ANR	7130	Statement	tmp	184:36:6702:6704	6829	9	True				
ANR	7131	Statement	","	184:39:6705:6705	6829	10	True				
ANR	7132	Statement	indent	184:41:6707:6712	6829	11	True				
ANR	7133	Statement	+	184:47:6713:6713	6829	12	True				
ANR	7134	Statement	PRINT_ZVAL_INDENT	184:48:6714:6730	6829	13	True				
ANR	7135	Statement	TSRMLS_CC	184:66:6732:6740	6829	14	True				
ANR	7136	Statement	)	184:75:6741:6741	6829	15	True				
ANR	7137	ExpressionStatement		184:76:6742:6742	6829	16	True				
ANR	7138	ExpressionStatement	"ZEND_PUTS_EX ( ""\\n"" )"	185:2:6746:6764	6829	17	True				
ANR	7139	CallExpression	"ZEND_PUTS_EX ( ""\\n"" )"		6829	0					
ANR	7140	Callee	ZEND_PUTS_EX		6829	0					
ANR	7141	Identifier	ZEND_PUTS_EX		6829	0					
ANR	7142	ArgumentList	"""\\n"""		6829	1					
ANR	7143	Argument	"""\\n"""		6829	0					
ANR	7144	PrimaryExpression	"""\\n"""		6829	0					
ANR	7145	ExpressionStatement	"zend_hash_move_forward_ex ( ht , & iterator )"	186:2:6768:6808	6829	18	True				
ANR	7146	CallExpression	"zend_hash_move_forward_ex ( ht , & iterator )"		6829	0					
ANR	7147	Callee	zend_hash_move_forward_ex		6829	0					
ANR	7148	Identifier	zend_hash_move_forward_ex		6829	0					
ANR	7149	ArgumentList	ht		6829	1					
ANR	7150	Argument	ht		6829	0					
ANR	7151	Identifier	ht		6829	0					
ANR	7152	Argument	& iterator		6829	1					
ANR	7153	UnaryOperationExpression	& iterator		6829	0					
ANR	7154	UnaryOperator	&		6829	0					
ANR	7155	Identifier	iterator		6829	1					
ANR	7156	ExpressionStatement	indent -= PRINT_ZVAL_INDENT	188:1:6814:6841	6829	11	True				
ANR	7157	AssignmentExpression	indent -= PRINT_ZVAL_INDENT		6829	0		-=			
ANR	7158	Identifier	indent		6829	0					
ANR	7159	Identifier	PRINT_ZVAL_INDENT		6829	1					
ANR	7160	ForStatement	for ( i = 0 ; i < indent ; i ++ )		6829	12					
ANR	7161	ForInit	i = 0 ;	189:6:6849:6854	6829	0	True				
ANR	7162	AssignmentExpression	i = 0		6829	0		=			
ANR	7163	Identifier	i		6829	0					
ANR	7164	PrimaryExpression	0		6829	1					
ANR	7165	Condition	i < indent	189:13:6856:6865	6829	1	True				
ANR	7166	RelationalExpression	i < indent		6829	0		<			
ANR	7167	Identifier	i		6829	0					
ANR	7168	Identifier	indent		6829	1					
ANR	7169	PostIncDecOperationExpression	i ++	189:25:6868:6870	6829	2	True				
ANR	7170	Identifier	i		6829	0					
ANR	7171	IncDec	++		6829	1					
ANR	7172	CompoundStatement		55:30:1461:1461	6829	3					
ANR	7173	ExpressionStatement	"ZEND_PUTS_EX ( "" "" )"	190:2:6877:6894	6829	0	True				
ANR	7174	CallExpression	"ZEND_PUTS_EX ( "" "" )"		6829	0					
ANR	7175	Callee	ZEND_PUTS_EX		6829	0					
ANR	7176	Identifier	ZEND_PUTS_EX		6829	0					
ANR	7177	ArgumentList	""" """		6829	1					
ANR	7178	Argument	""" """		6829	0					
ANR	7179	PrimaryExpression	""" """		6829	0					
ANR	7180	ExpressionStatement	"ZEND_PUTS_EX ( "")\\n"" )"	192:1:6900:6919	6829	13	True				
ANR	7181	CallExpression	"ZEND_PUTS_EX ( "")\\n"" )"		6829	0					
ANR	7182	Callee	ZEND_PUTS_EX		6829	0					
ANR	7183	Identifier	ZEND_PUTS_EX		6829	0					
ANR	7184	ArgumentList	""")\\n"""		6829	1					
ANR	7185	Argument	""")\\n"""		6829	0					
ANR	7186	PrimaryExpression	""")\\n"""		6829	0					
ANR	7187	ReturnType	static void		6829	1					
ANR	7188	Identifier	print_hash		6829	2					
ANR	7189	ParameterList	"zend_write_func_t write_func , HashTable * ht , int indent , zend_bool is_object TSRMLS_DC"		6829	3					
ANR	7190	Parameter	zend_write_func_t write_func	134:23:5313:5340	6829	0	True				
ANR	7191	ParameterType	zend_write_func_t		6829	0					
ANR	7192	Identifier	write_func		6829	1					
ANR	7193	Parameter	HashTable * ht	134:53:5343:5355	6829	1	True				
ANR	7194	ParameterType	HashTable *		6829	0					
ANR	7195	Identifier	ht		6829	1					
ANR	7196	Parameter	int indent	134:68:5358:5367	6829	2	True				
ANR	7197	ParameterType	int		6829	0					
ANR	7198	Identifier	indent		6829	1					
ANR	7199	Parameter	zend_bool is_object TSRMLS_DC	134:80:5370:5398	6829	3	True				
ANR	7200	ParameterType	zend_bool is_object		6829	0					
ANR	7201	Identifier	TSRMLS_DC		6829	1					
ANR	7202	CFGEntryNode	ENTRY		6829		True				
ANR	7203	CFGExitNode	EXIT		6829		True				
ANR	7204	Symbol	zend_hash_get_current_data_ex		6829						
ANR	7205	Symbol	* class_name		6829						
ANR	7206	Symbol	PRINT_ZVAL_INDENT		6829						
ANR	7207	Symbol	indent		6829						
ANR	7208	Symbol	& class_name		6829						
ANR	7209	Symbol	ht		6829						
ANR	7210	Symbol	& prop_len		6829						
ANR	7211	Symbol	TSRMLS_DC		6829						
ANR	7212	Symbol	iterator		6829						
ANR	7213	Symbol	str_len		6829						
ANR	7214	Symbol	mangled		6829						
ANR	7215	Symbol	tmp		6829						
ANR	7216	Symbol	& iterator		6829						
ANR	7217	Symbol	& prop_name		6829						
ANR	7218	Symbol	& string_key		6829						
ANR	7219	Symbol	is_object		6829						
ANR	7220	Symbol	class_name		6829						
ANR	7221	Symbol	key		6829						
ANR	7222	Symbol	SUCCESS		6829						
ANR	7223	Symbol	& num_key		6829						
ANR	7224	Symbol	num_key		6829						
ANR	7225	Symbol	i		6829						
ANR	7226	Symbol	zend_hash_get_current_key_ex		6829						
ANR	7227	Symbol	write_func		6829						
ANR	7228	Symbol	& str_len		6829						
ANR	7229	Symbol	string_key		6829						
ANR	7230	Symbol	prop_name		6829						
ANR	7231	Symbol	prop_len		6829						
ANR	7232	Symbol	zend_unmangle_property_name_ex		6829						
ANR	7233	Symbol	& tmp		6829						
ANR	7234	DeclStmt									
ANR	7235	Decl							zval	zval * *	tmp
ANR	7236	DeclStmt									
ANR	7237	Decl							char	char *	string_key
ANR	7238	DeclStmt									
ANR	7239	Decl							HashPosition	HashPosition	iterator
ANR	7240	DeclStmt									
ANR	7241	Decl							ulong	ulong	num_key
ANR	7242	DeclStmt									
ANR	7243	Decl							uint	uint	str_len
ANR	7244	DeclStmt									
ANR	7245	Decl							int	int	i
ANR	7246	Function	zend_make_printable_zval	226:0:7650:10069							
ANR	7247	FunctionDef	"zend_make_printable_zval (zval * expr , zval * expr_copy , int * use_copy)"		7246	0					
ANR	7248	CompoundStatement		227:0:7743:10069	7246	0					
ANR	7249	IfStatement	if ( Z_TYPE_P ( expr ) == IS_STRING )		7246	0					
ANR	7250	Condition	Z_TYPE_P ( expr ) == IS_STRING	228:5:7750:7774	7246	0	True				
ANR	7251	EqualityExpression	Z_TYPE_P ( expr ) == IS_STRING		7246	0		==			
ANR	7252	CallExpression	Z_TYPE_P ( expr )		7246	0					
ANR	7253	Callee	Z_TYPE_P		7246	0					
ANR	7254	Identifier	Z_TYPE_P		7246	0					
ANR	7255	ArgumentList	expr		7246	1					
ANR	7256	Argument	expr		7246	0					
ANR	7257	Identifier	expr		7246	0					
ANR	7258	Identifier	IS_STRING		7246	1					
ANR	7259	CompoundStatement		2:32:33:33	7246	1					
ANR	7260	ExpressionStatement	* use_copy = 0	229:2:7781:7794	7246	0	True				
ANR	7261	AssignmentExpression	* use_copy = 0		7246	0		=			
ANR	7262	UnaryOperationExpression	* use_copy		7246	0					
ANR	7263	UnaryOperator	*		7246	0					
ANR	7264	Identifier	use_copy		7246	1					
ANR	7265	PrimaryExpression	0		7246	1					
ANR	7266	ReturnStatement	return ;	230:2:7798:7804	7246	1	True				
ANR	7267	SwitchStatement	switch ( Z_TYPE_P ( expr ) )		7246	1					
ANR	7268	Condition	Z_TYPE_P ( expr )	232:9:7818:7831	7246	0	True				
ANR	7269	CallExpression	Z_TYPE_P ( expr )		7246	0					
ANR	7270	Callee	Z_TYPE_P		7246	0					
ANR	7271	Identifier	Z_TYPE_P		7246	0					
ANR	7272	ArgumentList	expr		7246	1					
ANR	7273	Argument	expr		7246	0					
ANR	7274	Identifier	expr		7246	0					
ANR	7275	CompoundStatement		6:25:90:90	7246	1					
ANR	7276	Label	case IS_NULL :	233:2:7838:7850	7246	0	True				
ANR	7277	Identifier	IS_NULL		7246	0					
ANR	7278	ExpressionStatement	Z_STRLEN_P ( expr_copy ) = 0	234:3:7855:7880	7246	1	True				
ANR	7279	AssignmentExpression	Z_STRLEN_P ( expr_copy ) = 0		7246	0		=			
ANR	7280	CallExpression	Z_STRLEN_P ( expr_copy )		7246	0					
ANR	7281	Callee	Z_STRLEN_P		7246	0					
ANR	7282	Identifier	Z_STRLEN_P		7246	0					
ANR	7283	ArgumentList	expr_copy		7246	1					
ANR	7284	Argument	expr_copy		7246	0					
ANR	7285	Identifier	expr_copy		7246	0					
ANR	7286	PrimaryExpression	0		7246	1					
ANR	7287	ExpressionStatement	Z_STRVAL_P ( expr_copy ) = STR_EMPTY_ALLOC ( )	235:3:7885:7926	7246	2	True				
ANR	7288	AssignmentExpression	Z_STRVAL_P ( expr_copy ) = STR_EMPTY_ALLOC ( )		7246	0		=			
ANR	7289	CallExpression	Z_STRVAL_P ( expr_copy )		7246	0					
ANR	7290	Callee	Z_STRVAL_P		7246	0					
ANR	7291	Identifier	Z_STRVAL_P		7246	0					
ANR	7292	ArgumentList	expr_copy		7246	1					
ANR	7293	Argument	expr_copy		7246	0					
ANR	7294	Identifier	expr_copy		7246	0					
ANR	7295	CallExpression	STR_EMPTY_ALLOC ( )		7246	1					
ANR	7296	Callee	STR_EMPTY_ALLOC		7246	0					
ANR	7297	Identifier	STR_EMPTY_ALLOC		7246	0					
ANR	7298	ArgumentList			7246	1					
ANR	7299	BreakStatement	break ;	236:3:7931:7936	7246	3	True				
ANR	7300	Label	case IS_BOOL :	237:2:7940:7952	7246	4	True				
ANR	7301	Identifier	IS_BOOL		7246	0					
ANR	7302	IfStatement	if ( Z_LVAL_P ( expr ) )		7246	5					
ANR	7303	Condition	Z_LVAL_P ( expr )	238:7:7961:7974	7246	0	True				
ANR	7304	CallExpression	Z_LVAL_P ( expr )		7246	0					
ANR	7305	Callee	Z_LVAL_P		7246	0					
ANR	7306	Identifier	Z_LVAL_P		7246	0					
ANR	7307	ArgumentList	expr		7246	1					
ANR	7308	Argument	expr		7246	0					
ANR	7309	Identifier	expr		7246	0					
ANR	7310	CompoundStatement		12:23:233:233	7246	1					
ANR	7311	ExpressionStatement	Z_STRLEN_P ( expr_copy ) = 1	239:4:7983:8008	7246	0	True				
ANR	7312	AssignmentExpression	Z_STRLEN_P ( expr_copy ) = 1		7246	0		=			
ANR	7313	CallExpression	Z_STRLEN_P ( expr_copy )		7246	0					
ANR	7314	Callee	Z_STRLEN_P		7246	0					
ANR	7315	Identifier	Z_STRLEN_P		7246	0					
ANR	7316	ArgumentList	expr_copy		7246	1					
ANR	7317	Argument	expr_copy		7246	0					
ANR	7318	Identifier	expr_copy		7246	0					
ANR	7319	PrimaryExpression	1		7246	1					
ANR	7320	ExpressionStatement	"Z_STRVAL_P ( expr_copy ) = estrndup ( ""1"" , 1 )"	240:4:8014:8054	7246	1	True				
ANR	7321	AssignmentExpression	"Z_STRVAL_P ( expr_copy ) = estrndup ( ""1"" , 1 )"		7246	0		=			
ANR	7322	CallExpression	Z_STRVAL_P ( expr_copy )		7246	0					
ANR	7323	Callee	Z_STRVAL_P		7246	0					
ANR	7324	Identifier	Z_STRVAL_P		7246	0					
ANR	7325	ArgumentList	expr_copy		7246	1					
ANR	7326	Argument	expr_copy		7246	0					
ANR	7327	Identifier	expr_copy		7246	0					
ANR	7328	CallExpression	"estrndup ( ""1"" , 1 )"		7246	1					
ANR	7329	Callee	estrndup		7246	0					
ANR	7330	Identifier	estrndup		7246	0					
ANR	7331	ArgumentList	"""1"""		7246	1					
ANR	7332	Argument	"""1"""		7246	0					
ANR	7333	PrimaryExpression	"""1"""		7246	0					
ANR	7334	Argument	1		7246	1					
ANR	7335	PrimaryExpression	1		7246	0					
ANR	7336	ElseStatement	else		7246	0					
ANR	7337	CompoundStatement		15:10:322:322	7246	0					
ANR	7338	ExpressionStatement	Z_STRLEN_P ( expr_copy ) = 0	242:4:8072:8097	7246	0	True				
ANR	7339	AssignmentExpression	Z_STRLEN_P ( expr_copy ) = 0		7246	0		=			
ANR	7340	CallExpression	Z_STRLEN_P ( expr_copy )		7246	0					
ANR	7341	Callee	Z_STRLEN_P		7246	0					
ANR	7342	Identifier	Z_STRLEN_P		7246	0					
ANR	7343	ArgumentList	expr_copy		7246	1					
ANR	7344	Argument	expr_copy		7246	0					
ANR	7345	Identifier	expr_copy		7246	0					
ANR	7346	PrimaryExpression	0		7246	1					
ANR	7347	ExpressionStatement	Z_STRVAL_P ( expr_copy ) = STR_EMPTY_ALLOC ( )	243:4:8103:8144	7246	1	True				
ANR	7348	AssignmentExpression	Z_STRVAL_P ( expr_copy ) = STR_EMPTY_ALLOC ( )		7246	0		=			
ANR	7349	CallExpression	Z_STRVAL_P ( expr_copy )		7246	0					
ANR	7350	Callee	Z_STRVAL_P		7246	0					
ANR	7351	Identifier	Z_STRVAL_P		7246	0					
ANR	7352	ArgumentList	expr_copy		7246	1					
ANR	7353	Argument	expr_copy		7246	0					
ANR	7354	Identifier	expr_copy		7246	0					
ANR	7355	CallExpression	STR_EMPTY_ALLOC ( )		7246	1					
ANR	7356	Callee	STR_EMPTY_ALLOC		7246	0					
ANR	7357	Identifier	STR_EMPTY_ALLOC		7246	0					
ANR	7358	ArgumentList			7246	1					
ANR	7359	BreakStatement	break ;	245:3:8154:8159	7246	6	True				
ANR	7360	Label	case IS_RESOURCE :	246:2:8163:8179	7246	7	True				
ANR	7361	Identifier	IS_RESOURCE		7246	0					
ANR	7362	ExpressionStatement	"Z_STRVAL_P ( expr_copy ) = ( char * ) emalloc ( sizeof ( ""Resource id #"" ) - 1 + MAX_LENGTH_OF_LONG )"	247:3:8184:8274	7246	8	True				
ANR	7363	AssignmentExpression	"Z_STRVAL_P ( expr_copy ) = ( char * ) emalloc ( sizeof ( ""Resource id #"" ) - 1 + MAX_LENGTH_OF_LONG )"		7246	0		=			
ANR	7364	CallExpression	Z_STRVAL_P ( expr_copy )		7246	0					
ANR	7365	Callee	Z_STRVAL_P		7246	0					
ANR	7366	Identifier	Z_STRVAL_P		7246	0					
ANR	7367	ArgumentList	expr_copy		7246	1					
ANR	7368	Argument	expr_copy		7246	0					
ANR	7369	Identifier	expr_copy		7246	0					
ANR	7370	CastExpression	"( char * ) emalloc ( sizeof ( ""Resource id #"" ) - 1 + MAX_LENGTH_OF_LONG )"		7246	1					
ANR	7371	CastTarget	char *		7246	0					
ANR	7372	CallExpression	"emalloc ( sizeof ( ""Resource id #"" ) - 1 + MAX_LENGTH_OF_LONG )"		7246	1					
ANR	7373	Callee	emalloc		7246	0					
ANR	7374	Identifier	emalloc		7246	0					
ANR	7375	ArgumentList	"sizeof ( ""Resource id #"" ) - 1 + MAX_LENGTH_OF_LONG"		7246	1					
ANR	7376	Argument	"sizeof ( ""Resource id #"" ) - 1 + MAX_LENGTH_OF_LONG"		7246	0					
ANR	7377	AdditiveExpression	"sizeof ( ""Resource id #"" ) - 1 + MAX_LENGTH_OF_LONG"		7246	0		-			
ANR	7378	SizeofExpression	"sizeof ( ""Resource id #"" )"		7246	0					
ANR	7379	Sizeof	sizeof		7246	0					
ANR	7380	PrimaryExpression	"""Resource id #"""		7246	1					
ANR	7381	AdditiveExpression	1 + MAX_LENGTH_OF_LONG		7246	1		+			
ANR	7382	PrimaryExpression	1		7246	0					
ANR	7383	Identifier	MAX_LENGTH_OF_LONG		7246	1					
ANR	7384	ExpressionStatement	"Z_STRLEN_P ( expr_copy ) = snprintf ( Z_STRVAL_P ( expr_copy ) , sizeof ( ""Resource id #"" ) - 1 + MAX_LENGTH_OF_LONG , ""Resource id #%ld"" , Z_LVAL_P ( expr ) )"	248:3:8279:8420	7246	9	True				
ANR	7385	AssignmentExpression	"Z_STRLEN_P ( expr_copy ) = snprintf ( Z_STRVAL_P ( expr_copy ) , sizeof ( ""Resource id #"" ) - 1 + MAX_LENGTH_OF_LONG , ""Resource id #%ld"" , Z_LVAL_P ( expr ) )"		7246	0		=			
ANR	7386	CallExpression	Z_STRLEN_P ( expr_copy )		7246	0					
ANR	7387	Callee	Z_STRLEN_P		7246	0					
ANR	7388	Identifier	Z_STRLEN_P		7246	0					
ANR	7389	ArgumentList	expr_copy		7246	1					
ANR	7390	Argument	expr_copy		7246	0					
ANR	7391	Identifier	expr_copy		7246	0					
ANR	7392	CallExpression	"snprintf ( Z_STRVAL_P ( expr_copy ) , sizeof ( ""Resource id #"" ) - 1 + MAX_LENGTH_OF_LONG , ""Resource id #%ld"" , Z_LVAL_P ( expr ) )"		7246	1					
ANR	7393	Callee	snprintf		7246	0					
ANR	7394	Identifier	snprintf		7246	0					
ANR	7395	ArgumentList	Z_STRVAL_P ( expr_copy )		7246	1					
ANR	7396	Argument	Z_STRVAL_P ( expr_copy )		7246	0					
ANR	7397	CallExpression	Z_STRVAL_P ( expr_copy )		7246	0					
ANR	7398	Callee	Z_STRVAL_P		7246	0					
ANR	7399	Identifier	Z_STRVAL_P		7246	0					
ANR	7400	ArgumentList	expr_copy		7246	1					
ANR	7401	Argument	expr_copy		7246	0					
ANR	7402	Identifier	expr_copy		7246	0					
ANR	7403	Argument	"sizeof ( ""Resource id #"" ) - 1 + MAX_LENGTH_OF_LONG"		7246	1					
ANR	7404	AdditiveExpression	"sizeof ( ""Resource id #"" ) - 1 + MAX_LENGTH_OF_LONG"		7246	0		-			
ANR	7405	SizeofExpression	"sizeof ( ""Resource id #"" )"		7246	0					
ANR	7406	Sizeof	sizeof		7246	0					
ANR	7407	PrimaryExpression	"""Resource id #"""		7246	1					
ANR	7408	AdditiveExpression	1 + MAX_LENGTH_OF_LONG		7246	1		+			
ANR	7409	PrimaryExpression	1		7246	0					
ANR	7410	Identifier	MAX_LENGTH_OF_LONG		7246	1					
ANR	7411	Argument	"""Resource id #%ld"""		7246	2					
ANR	7412	PrimaryExpression	"""Resource id #%ld"""		7246	0					
ANR	7413	Argument	Z_LVAL_P ( expr )		7246	3					
ANR	7414	CallExpression	Z_LVAL_P ( expr )		7246	0					
ANR	7415	Callee	Z_LVAL_P		7246	0					
ANR	7416	Identifier	Z_LVAL_P		7246	0					
ANR	7417	ArgumentList	expr		7246	1					
ANR	7418	Argument	expr		7246	0					
ANR	7419	Identifier	expr		7246	0					
ANR	7420	BreakStatement	break ;	249:3:8425:8430	7246	10	True				
ANR	7421	Label	case IS_ARRAY :	250:2:8434:8447	7246	11	True				
ANR	7422	Identifier	IS_ARRAY		7246	0					
ANR	7423	ExpressionStatement	"zend_error ( E_NOTICE , ""Array to string conversion"" )"	251:3:8452:8502	7246	12	True				
ANR	7424	CallExpression	"zend_error ( E_NOTICE , ""Array to string conversion"" )"		7246	0					
ANR	7425	Callee	zend_error		7246	0					
ANR	7426	Identifier	zend_error		7246	0					
ANR	7427	ArgumentList	E_NOTICE		7246	1					
ANR	7428	Argument	E_NOTICE		7246	0					
ANR	7429	Identifier	E_NOTICE		7246	0					
ANR	7430	Argument	"""Array to string conversion"""		7246	1					
ANR	7431	PrimaryExpression	"""Array to string conversion"""		7246	0					
ANR	7432	ExpressionStatement	"Z_STRLEN_P ( expr_copy ) = sizeof ( ""Array"" ) - 1"	252:3:8507:8550	7246	13	True				
ANR	7433	AssignmentExpression	"Z_STRLEN_P ( expr_copy ) = sizeof ( ""Array"" ) - 1"		7246	0		=			
ANR	7434	CallExpression	Z_STRLEN_P ( expr_copy )		7246	0					
ANR	7435	Callee	Z_STRLEN_P		7246	0					
ANR	7436	Identifier	Z_STRLEN_P		7246	0					
ANR	7437	ArgumentList	expr_copy		7246	1					
ANR	7438	Argument	expr_copy		7246	0					
ANR	7439	Identifier	expr_copy		7246	0					
ANR	7440	AdditiveExpression	"sizeof ( ""Array"" ) - 1"		7246	1		-			
ANR	7441	SizeofExpression	"sizeof ( ""Array"" )"		7246	0					
ANR	7442	Sizeof	sizeof		7246	0					
ANR	7443	PrimaryExpression	"""Array"""		7246	1					
ANR	7444	PrimaryExpression	1		7246	1					
ANR	7445	ExpressionStatement	"Z_STRVAL_P ( expr_copy ) = estrndup ( ""Array"" , Z_STRLEN_P ( expr_copy ) )"	253:3:8555:8619	7246	14	True				
ANR	7446	AssignmentExpression	"Z_STRVAL_P ( expr_copy ) = estrndup ( ""Array"" , Z_STRLEN_P ( expr_copy ) )"		7246	0		=			
ANR	7447	CallExpression	Z_STRVAL_P ( expr_copy )		7246	0					
ANR	7448	Callee	Z_STRVAL_P		7246	0					
ANR	7449	Identifier	Z_STRVAL_P		7246	0					
ANR	7450	ArgumentList	expr_copy		7246	1					
ANR	7451	Argument	expr_copy		7246	0					
ANR	7452	Identifier	expr_copy		7246	0					
ANR	7453	CallExpression	"estrndup ( ""Array"" , Z_STRLEN_P ( expr_copy ) )"		7246	1					
ANR	7454	Callee	estrndup		7246	0					
ANR	7455	Identifier	estrndup		7246	0					
ANR	7456	ArgumentList	"""Array"""		7246	1					
ANR	7457	Argument	"""Array"""		7246	0					
ANR	7458	PrimaryExpression	"""Array"""		7246	0					
ANR	7459	Argument	Z_STRLEN_P ( expr_copy )		7246	1					
ANR	7460	CallExpression	Z_STRLEN_P ( expr_copy )		7246	0					
ANR	7461	Callee	Z_STRLEN_P		7246	0					
ANR	7462	Identifier	Z_STRLEN_P		7246	0					
ANR	7463	ArgumentList	expr_copy		7246	1					
ANR	7464	Argument	expr_copy		7246	0					
ANR	7465	Identifier	expr_copy		7246	0					
ANR	7466	BreakStatement	break ;	254:3:8624:8629	7246	15	True				
ANR	7467	Label	case IS_OBJECT :	255:2:8633:8647	7246	16	True				
ANR	7468	Identifier	IS_OBJECT		7246	0					
ANR	7469	CompoundStatement		30:3:908:908	7246	17					
ANR	7470	ExpressionStatement	TSRMLS_FETCH ( )	257:4:8658:8672	7246	0	True				
ANR	7471	CallExpression	TSRMLS_FETCH ( )		7246	0					
ANR	7472	Callee	TSRMLS_FETCH		7246	0					
ANR	7473	Identifier	TSRMLS_FETCH		7246	0					
ANR	7474	ArgumentList			7246	1					
ANR	7475	Statement	if	259:4:8679:8680	7246	1	True				
ANR	7476	Statement	(	259:7:8682:8682	7246	2	True				
ANR	7477	Statement	zend_std_cast_object_tostring	259:8:8683:8711	7246	3	True				
ANR	7478	Statement	(	259:37:8712:8712	7246	4	True				
ANR	7479	Statement	expr	259:38:8713:8716	7246	5	True				
ANR	7480	Statement	","	259:42:8717:8717	7246	6	True				
ANR	7481	Statement	expr_copy	259:44:8719:8727	7246	7	True				
ANR	7482	Statement	","	259:53:8728:8728	7246	8	True				
ANR	7483	Statement	IS_STRING	259:55:8730:8738	7246	9	True				
ANR	7484	Statement	TSRMLS_CC	259:65:8740:8748	7246	10	True				
ANR	7485	Statement	)	259:74:8749:8749	7246	11	True				
ANR	7486	Statement	==	259:76:8751:8752	7246	12	True				
ANR	7487	Statement	SUCCESS	259:79:8754:8760	7246	13	True				
ANR	7488	Statement	)	259:86:8761:8761	7246	14	True				
ANR	7489	CompoundStatement		33:88:1019:1019	7246	15					
ANR	7490	BreakStatement	break ;	260:5:8770:8775	7246	0	True				
ANR	7491	IfStatement	"if ( Z_OBJ_HANDLER_P ( expr , cast_object ) )"		7246	16					
ANR	7492	Condition	"Z_OBJ_HANDLER_P ( expr , cast_object )"	262:8:8791:8824	7246	0	True				
ANR	7493	CallExpression	"Z_OBJ_HANDLER_P ( expr , cast_object )"		7246	0					
ANR	7494	Callee	Z_OBJ_HANDLER_P		7246	0					
ANR	7495	Identifier	Z_OBJ_HANDLER_P		7246	0					
ANR	7496	ArgumentList	expr		7246	1					
ANR	7497	Argument	expr		7246	0					
ANR	7498	Identifier	expr		7246	0					
ANR	7499	Argument	cast_object		7246	1					
ANR	7500	Identifier	cast_object		7246	0					
ANR	7501	CompoundStatement		37:5:1090:1099	7246	1					
ANR	7502	IdentifierDeclStatement	zval * val ;	263:5:8834:8843	7246	0	True				
ANR	7503	IdentifierDecl	* val		7246	0					
ANR	7504	IdentifierDeclType	zval *		7246	0					
ANR	7505	Identifier	val		7246	1					
ANR	7506	ExpressionStatement	ALLOC_ZVAL ( val )	265:5:8851:8866	7246	1	True				
ANR	7507	CallExpression	ALLOC_ZVAL ( val )		7246	0					
ANR	7508	Callee	ALLOC_ZVAL		7246	0					
ANR	7509	Identifier	ALLOC_ZVAL		7246	0					
ANR	7510	ArgumentList	val		7246	1					
ANR	7511	Argument	val		7246	0					
ANR	7512	Identifier	val		7246	0					
ANR	7513	ExpressionStatement	"INIT_PZVAL_COPY ( val , expr )"	266:5:8873:8899	7246	2	True				
ANR	7514	CallExpression	"INIT_PZVAL_COPY ( val , expr )"		7246	0					
ANR	7515	Callee	INIT_PZVAL_COPY		7246	0					
ANR	7516	Identifier	INIT_PZVAL_COPY		7246	0					
ANR	7517	ArgumentList	val		7246	1					
ANR	7518	Argument	val		7246	0					
ANR	7519	Identifier	val		7246	0					
ANR	7520	Argument	expr		7246	1					
ANR	7521	Identifier	expr		7246	0					
ANR	7522	ExpressionStatement	zval_copy_ctor ( val )	267:5:8906:8925	7246	3	True				
ANR	7523	CallExpression	zval_copy_ctor ( val )		7246	0					
ANR	7524	Callee	zval_copy_ctor		7246	0					
ANR	7525	Identifier	zval_copy_ctor		7246	0					
ANR	7526	ArgumentList	val		7246	1					
ANR	7527	Argument	val		7246	0					
ANR	7528	Identifier	val		7246	0					
ANR	7529	Statement	if	268:5:8932:8933	7246	4	True				
ANR	7530	Statement	(	268:8:8935:8935	7246	5	True				
ANR	7531	Statement	Z_OBJ_HANDLER_P	268:9:8936:8950	7246	6	True				
ANR	7532	Statement	(	268:24:8951:8951	7246	7	True				
ANR	7533	Statement	expr	268:25:8952:8955	7246	8	True				
ANR	7534	Statement	","	268:29:8956:8956	7246	9	True				
ANR	7535	Statement	cast_object	268:31:8958:8968	7246	10	True				
ANR	7536	Statement	)	268:42:8969:8969	7246	11	True				
ANR	7537	Statement	(	268:43:8970:8970	7246	12	True				
ANR	7538	Statement	val	268:44:8971:8973	7246	13	True				
ANR	7539	Statement	","	268:47:8974:8974	7246	14	True				
ANR	7540	Statement	expr_copy	268:49:8976:8984	7246	15	True				
ANR	7541	Statement	","	268:58:8985:8985	7246	16	True				
ANR	7542	Statement	IS_STRING	268:60:8987:8995	7246	17	True				
ANR	7543	Statement	TSRMLS_CC	268:70:8997:9005	7246	18	True				
ANR	7544	Statement	)	268:79:9006:9006	7246	19	True				
ANR	7545	Statement	==	268:81:9008:9009	7246	20	True				
ANR	7546	Statement	SUCCESS	268:84:9011:9017	7246	21	True				
ANR	7547	Statement	)	268:91:9018:9018	7246	22	True				
ANR	7548	CompoundStatement		42:93:1276:1276	7246	23					
ANR	7549	ExpressionStatement	zval_ptr_dtor ( & val )	269:6:9028:9047	7246	0	True				
ANR	7550	CallExpression	zval_ptr_dtor ( & val )		7246	0					
ANR	7551	Callee	zval_ptr_dtor		7246	0					
ANR	7552	Identifier	zval_ptr_dtor		7246	0					
ANR	7553	ArgumentList	& val		7246	1					
ANR	7554	Argument	& val		7246	0					
ANR	7555	UnaryOperationExpression	& val		7246	0					
ANR	7556	UnaryOperator	&		7246	0					
ANR	7557	Identifier	val		7246	1					
ANR	7558	BreakStatement	break ;	270:6:9055:9060	7246	1	True				
ANR	7559	ExpressionStatement	zval_ptr_dtor ( & val )	272:5:9074:9093	7246	24	True				
ANR	7560	CallExpression	zval_ptr_dtor ( & val )		7246	0					
ANR	7561	Callee	zval_ptr_dtor		7246	0					
ANR	7562	Identifier	zval_ptr_dtor		7246	0					
ANR	7563	ArgumentList	& val		7246	1					
ANR	7564	Argument	& val		7246	0					
ANR	7565	UnaryOperationExpression	& val		7246	0					
ANR	7566	UnaryOperator	&		7246	0					
ANR	7567	Identifier	val		7246	1					
ANR	7568	IfStatement	"if ( ! Z_OBJ_HANDLER_P ( expr , cast_object ) && Z_OBJ_HANDLER_P ( expr , get ) )"		7246	17					
ANR	7569	Condition	"! Z_OBJ_HANDLER_P ( expr , cast_object ) && Z_OBJ_HANDLER_P ( expr , get )"	274:8:9109:9173	7246	0	True				
ANR	7570	AndExpression	"! Z_OBJ_HANDLER_P ( expr , cast_object ) && Z_OBJ_HANDLER_P ( expr , get )"		7246	0		&&			
ANR	7571	UnaryOperationExpression	"! Z_OBJ_HANDLER_P ( expr , cast_object )"		7246	0					
ANR	7572	UnaryOperator	!		7246	0					
ANR	7573	CallExpression	"Z_OBJ_HANDLER_P ( expr , cast_object )"		7246	1					
ANR	7574	Callee	Z_OBJ_HANDLER_P		7246	0					
ANR	7575	Identifier	Z_OBJ_HANDLER_P		7246	0					
ANR	7576	ArgumentList	expr		7246	1					
ANR	7577	Argument	expr		7246	0					
ANR	7578	Identifier	expr		7246	0					
ANR	7579	Argument	cast_object		7246	1					
ANR	7580	Identifier	cast_object		7246	0					
ANR	7581	CallExpression	"Z_OBJ_HANDLER_P ( expr , get )"		7246	1					
ANR	7582	Callee	Z_OBJ_HANDLER_P		7246	0					
ANR	7583	Identifier	Z_OBJ_HANDLER_P		7246	0					
ANR	7584	ArgumentList	expr		7246	1					
ANR	7585	Argument	expr		7246	0					
ANR	7586	Identifier	expr		7246	0					
ANR	7587	Argument	get		7246	1					
ANR	7588	Identifier	get		7246	0					
ANR	7589	CompoundStatement		48:75:1432:1432	7246	1					
ANR	7590	Statement	zval	275:5:9183:9186	7246	0	True				
ANR	7591	Statement	*	275:10:9188:9188	7246	1	True				
ANR	7592	Statement	z	275:11:9189:9189	7246	2	True				
ANR	7593	Statement	=	275:13:9191:9191	7246	3	True				
ANR	7594	Statement	Z_OBJ_HANDLER_P	275:15:9193:9207	7246	4	True				
ANR	7595	Statement	(	275:30:9208:9208	7246	5	True				
ANR	7596	Statement	expr	275:31:9209:9212	7246	6	True				
ANR	7597	Statement	","	275:35:9213:9213	7246	7	True				
ANR	7598	Statement	get	275:37:9215:9217	7246	8	True				
ANR	7599	Statement	)	275:40:9218:9218	7246	9	True				
ANR	7600	Statement	(	275:41:9219:9219	7246	10	True				
ANR	7601	Statement	expr	275:42:9220:9223	7246	11	True				
ANR	7602	Statement	TSRMLS_CC	275:47:9225:9233	7246	12	True				
ANR	7603	Statement	)	275:56:9234:9234	7246	13	True				
ANR	7604	ExpressionStatement		275:57:9235:9235	7246	14	True				
ANR	7605	ExpressionStatement	Z_ADDREF_P ( z )	277:5:9243:9256	7246	15	True				
ANR	7606	CallExpression	Z_ADDREF_P ( z )		7246	0					
ANR	7607	Callee	Z_ADDREF_P		7246	0					
ANR	7608	Identifier	Z_ADDREF_P		7246	0					
ANR	7609	ArgumentList	z		7246	1					
ANR	7610	Argument	z		7246	0					
ANR	7611	Identifier	z		7246	0					
ANR	7612	IfStatement	if ( Z_TYPE_P ( z ) != IS_OBJECT )		7246	16					
ANR	7613	Condition	Z_TYPE_P ( z ) != IS_OBJECT	278:9:9267:9290	7246	0	True				
ANR	7614	EqualityExpression	Z_TYPE_P ( z ) != IS_OBJECT		7246	0		!=			
ANR	7615	CallExpression	Z_TYPE_P ( z )		7246	0					
ANR	7616	Callee	Z_TYPE_P		7246	0					
ANR	7617	Identifier	Z_TYPE_P		7246	0					
ANR	7618	ArgumentList	z		7246	1					
ANR	7619	Argument	z		7246	0					
ANR	7620	Identifier	z		7246	0					
ANR	7621	Identifier	IS_OBJECT		7246	1					
ANR	7622	CompoundStatement		52:35:1549:1549	7246	1					
ANR	7623	ExpressionStatement	"zend_make_printable_zval ( z , expr_copy , use_copy )"	279:6:9301:9349	7246	0	True				
ANR	7624	CallExpression	"zend_make_printable_zval ( z , expr_copy , use_copy )"		7246	0					
ANR	7625	Callee	zend_make_printable_zval		7246	0					
ANR	7626	Identifier	zend_make_printable_zval		7246	0					
ANR	7627	ArgumentList	z		7246	1					
ANR	7628	Argument	z		7246	0					
ANR	7629	Identifier	z		7246	0					
ANR	7630	Argument	expr_copy		7246	1					
ANR	7631	Identifier	expr_copy		7246	0					
ANR	7632	Argument	use_copy		7246	2					
ANR	7633	Identifier	use_copy		7246	0					
ANR	7634	IfStatement	if ( * use_copy )		7246	1					
ANR	7635	Condition	* use_copy	280:10:9361:9369	7246	0	True				
ANR	7636	UnaryOperationExpression	* use_copy		7246	0					
ANR	7637	UnaryOperator	*		7246	0					
ANR	7638	Identifier	use_copy		7246	1					
ANR	7639	CompoundStatement		54:21:1628:1628	7246	1					
ANR	7640	ExpressionStatement	zval_ptr_dtor ( & z )	281:7:9381:9398	7246	0	True				
ANR	7641	CallExpression	zval_ptr_dtor ( & z )		7246	0					
ANR	7642	Callee	zval_ptr_dtor		7246	0					
ANR	7643	Identifier	zval_ptr_dtor		7246	0					
ANR	7644	ArgumentList	& z		7246	1					
ANR	7645	Argument	& z		7246	0					
ANR	7646	UnaryOperationExpression	& z		7246	0					
ANR	7647	UnaryOperator	&		7246	0					
ANR	7648	Identifier	z		7246	1					
ANR	7649	ElseStatement	else		7246	0					
ANR	7650	CompoundStatement		56:13:1669:1669	7246	0					
ANR	7651	ExpressionStatement	"ZVAL_ZVAL ( expr_copy , z , 0 , 1 )"	283:7:9422:9451	7246	0	True				
ANR	7652	CallExpression	"ZVAL_ZVAL ( expr_copy , z , 0 , 1 )"		7246	0					
ANR	7653	Callee	ZVAL_ZVAL		7246	0					
ANR	7654	Identifier	ZVAL_ZVAL		7246	0					
ANR	7655	ArgumentList	expr_copy		7246	1					
ANR	7656	Argument	expr_copy		7246	0					
ANR	7657	Identifier	expr_copy		7246	0					
ANR	7658	Argument	z		7246	1					
ANR	7659	Identifier	z		7246	0					
ANR	7660	Argument	0		7246	2					
ANR	7661	PrimaryExpression	0		7246	0					
ANR	7662	Argument	1		7246	3					
ANR	7663	PrimaryExpression	1		7246	0					
ANR	7664	ExpressionStatement	* use_copy = 1	284:7:9460:9473	7246	1	True				
ANR	7665	AssignmentExpression	* use_copy = 1		7246	0		=			
ANR	7666	UnaryOperationExpression	* use_copy		7246	0					
ANR	7667	UnaryOperator	*		7246	0					
ANR	7668	Identifier	use_copy		7246	1					
ANR	7669	PrimaryExpression	1		7246	1					
ANR	7670	ReturnStatement	return ;	286:6:9489:9495	7246	2	True				
ANR	7671	ExpressionStatement	zval_ptr_dtor ( & z )	288:5:9509:9526	7246	17	True				
ANR	7672	CallExpression	zval_ptr_dtor ( & z )		7246	0					
ANR	7673	Callee	zval_ptr_dtor		7246	0					
ANR	7674	Identifier	zval_ptr_dtor		7246	0					
ANR	7675	ArgumentList	& z		7246	1					
ANR	7676	Argument	& z		7246	0					
ANR	7677	UnaryOperationExpression	& z		7246	0					
ANR	7678	UnaryOperator	&		7246	0					
ANR	7679	Identifier	z		7246	1					
ANR	7680	ExpressionStatement	"zend_error ( EG ( exception ) ? E_ERROR : E_RECOVERABLE_ERROR , ""Object of class %s could not be converted to string"" , Z_OBJCE_P ( expr ) -> name )"	290:4:9538:9673	7246	18	True				
ANR	7681	CallExpression	"zend_error ( EG ( exception ) ? E_ERROR : E_RECOVERABLE_ERROR , ""Object of class %s could not be converted to string"" , Z_OBJCE_P ( expr ) -> name )"		7246	0					
ANR	7682	Callee	zend_error		7246	0					
ANR	7683	Identifier	zend_error		7246	0					
ANR	7684	ArgumentList	EG ( exception ) ? E_ERROR : E_RECOVERABLE_ERROR		7246	1					
ANR	7685	Argument	EG ( exception ) ? E_ERROR : E_RECOVERABLE_ERROR		7246	0					
ANR	7686	ConditionalExpression	EG ( exception ) ? E_ERROR : E_RECOVERABLE_ERROR		7246	0					
ANR	7687	Condition	EG ( exception )		7246	0					
ANR	7688	CallExpression	EG ( exception )		7246	0					
ANR	7689	Callee	EG		7246	0					
ANR	7690	Identifier	EG		7246	0					
ANR	7691	ArgumentList	exception		7246	1					
ANR	7692	Argument	exception		7246	0					
ANR	7693	Identifier	exception		7246	0					
ANR	7694	Identifier	E_ERROR		7246	1					
ANR	7695	Identifier	E_RECOVERABLE_ERROR		7246	2					
ANR	7696	Argument	"""Object of class %s could not be converted to string"""		7246	1					
ANR	7697	PrimaryExpression	"""Object of class %s could not be converted to string"""		7246	0					
ANR	7698	Argument	Z_OBJCE_P ( expr ) -> name		7246	2					
ANR	7699	PtrMemberAccess	Z_OBJCE_P ( expr ) -> name		7246	0					
ANR	7700	CallExpression	Z_OBJCE_P ( expr )		7246	0					
ANR	7701	Callee	Z_OBJCE_P		7246	0					
ANR	7702	Identifier	Z_OBJCE_P		7246	0					
ANR	7703	ArgumentList	expr		7246	1					
ANR	7704	Argument	expr		7246	0					
ANR	7705	Identifier	expr		7246	0					
ANR	7706	Identifier	name		7246	1					
ANR	7707	ExpressionStatement	Z_STRLEN_P ( expr_copy ) = 0	291:4:9679:9704	7246	19	True				
ANR	7708	AssignmentExpression	Z_STRLEN_P ( expr_copy ) = 0		7246	0		=			
ANR	7709	CallExpression	Z_STRLEN_P ( expr_copy )		7246	0					
ANR	7710	Callee	Z_STRLEN_P		7246	0					
ANR	7711	Identifier	Z_STRLEN_P		7246	0					
ANR	7712	ArgumentList	expr_copy		7246	1					
ANR	7713	Argument	expr_copy		7246	0					
ANR	7714	Identifier	expr_copy		7246	0					
ANR	7715	PrimaryExpression	0		7246	1					
ANR	7716	ExpressionStatement	Z_STRVAL_P ( expr_copy ) = STR_EMPTY_ALLOC ( )	292:4:9710:9751	7246	20	True				
ANR	7717	AssignmentExpression	Z_STRVAL_P ( expr_copy ) = STR_EMPTY_ALLOC ( )		7246	0		=			
ANR	7718	CallExpression	Z_STRVAL_P ( expr_copy )		7246	0					
ANR	7719	Callee	Z_STRVAL_P		7246	0					
ANR	7720	Identifier	Z_STRVAL_P		7246	0					
ANR	7721	ArgumentList	expr_copy		7246	1					
ANR	7722	Argument	expr_copy		7246	0					
ANR	7723	Identifier	expr_copy		7246	0					
ANR	7724	CallExpression	STR_EMPTY_ALLOC ( )		7246	1					
ANR	7725	Callee	STR_EMPTY_ALLOC		7246	0					
ANR	7726	Identifier	STR_EMPTY_ALLOC		7246	0					
ANR	7727	ArgumentList			7246	1					
ANR	7728	BreakStatement	break ;	294:3:9761:9766	7246	18	True				
ANR	7729	Label	case IS_DOUBLE :	295:2:9770:9784	7246	19	True				
ANR	7730	Identifier	IS_DOUBLE		7246	0					
ANR	7731	ExpressionStatement	* expr_copy = * expr	296:3:9789:9807	7246	20	True				
ANR	7732	AssignmentExpression	* expr_copy = * expr		7246	0		=			
ANR	7733	UnaryOperationExpression	* expr_copy		7246	0					
ANR	7734	UnaryOperator	*		7246	0					
ANR	7735	Identifier	expr_copy		7246	1					
ANR	7736	UnaryOperationExpression	* expr		7246	1					
ANR	7737	UnaryOperator	*		7246	0					
ANR	7738	Identifier	expr		7246	1					
ANR	7739	ExpressionStatement	zval_copy_ctor ( expr_copy )	297:3:9812:9837	7246	21	True				
ANR	7740	CallExpression	zval_copy_ctor ( expr_copy )		7246	0					
ANR	7741	Callee	zval_copy_ctor		7246	0					
ANR	7742	Identifier	zval_copy_ctor		7246	0					
ANR	7743	ArgumentList	expr_copy		7246	1					
ANR	7744	Argument	expr_copy		7246	0					
ANR	7745	Identifier	expr_copy		7246	0					
ANR	7746	Statement	zend_locale_sprintf_double	298:3:9842:9867	7246	22	True				
ANR	7747	Statement	(	298:29:9868:9868	7246	23	True				
ANR	7748	Statement	expr_copy	298:30:9869:9877	7246	24	True				
ANR	7749	Statement	ZEND_FILE_LINE_CC	298:40:9879:9895	7246	25	True				
ANR	7750	Statement	)	298:57:9896:9896	7246	26	True				
ANR	7751	ExpressionStatement		298:58:9897:9897	7246	27	True				
ANR	7752	BreakStatement	break ;	299:3:9902:9907	7246	28	True				
ANR	7753	Label	default :	300:2:9911:9918	7246	29	True				
ANR	7754	Identifier	default		7246	0					
ANR	7755	ExpressionStatement	* expr_copy = * expr	301:3:9923:9941	7246	30	True				
ANR	7756	AssignmentExpression	* expr_copy = * expr		7246	0		=			
ANR	7757	UnaryOperationExpression	* expr_copy		7246	0					
ANR	7758	UnaryOperator	*		7246	0					
ANR	7759	Identifier	expr_copy		7246	1					
ANR	7760	UnaryOperationExpression	* expr		7246	1					
ANR	7761	UnaryOperator	*		7246	0					
ANR	7762	Identifier	expr		7246	1					
ANR	7763	ExpressionStatement	zval_copy_ctor ( expr_copy )	302:3:9946:9971	7246	31	True				
ANR	7764	CallExpression	zval_copy_ctor ( expr_copy )		7246	0					
ANR	7765	Callee	zval_copy_ctor		7246	0					
ANR	7766	Identifier	zval_copy_ctor		7246	0					
ANR	7767	ArgumentList	expr_copy		7246	1					
ANR	7768	Argument	expr_copy		7246	0					
ANR	7769	Identifier	expr_copy		7246	0					
ANR	7770	ExpressionStatement	convert_to_string ( expr_copy )	303:3:9976:10004	7246	32	True				
ANR	7771	CallExpression	convert_to_string ( expr_copy )		7246	0					
ANR	7772	Callee	convert_to_string		7246	0					
ANR	7773	Identifier	convert_to_string		7246	0					
ANR	7774	ArgumentList	expr_copy		7246	1					
ANR	7775	Argument	expr_copy		7246	0					
ANR	7776	Identifier	expr_copy		7246	0					
ANR	7777	BreakStatement	break ;	304:3:10009:10014	7246	33	True				
ANR	7778	ExpressionStatement	Z_TYPE_P ( expr_copy ) = IS_STRING	306:1:10020:10051	7246	2	True				
ANR	7779	AssignmentExpression	Z_TYPE_P ( expr_copy ) = IS_STRING		7246	0		=			
ANR	7780	CallExpression	Z_TYPE_P ( expr_copy )		7246	0					
ANR	7781	Callee	Z_TYPE_P		7246	0					
ANR	7782	Identifier	Z_TYPE_P		7246	0					
ANR	7783	ArgumentList	expr_copy		7246	1					
ANR	7784	Argument	expr_copy		7246	0					
ANR	7785	Identifier	expr_copy		7246	0					
ANR	7786	Identifier	IS_STRING		7246	1					
ANR	7787	ExpressionStatement	* use_copy = 1	307:1:10054:10067	7246	3	True				
ANR	7788	AssignmentExpression	* use_copy = 1		7246	0		=			
ANR	7789	UnaryOperationExpression	* use_copy		7246	0					
ANR	7790	UnaryOperator	*		7246	0					
ANR	7791	Identifier	use_copy		7246	1					
ANR	7792	PrimaryExpression	1		7246	1					
ANR	7793	ReturnType	ZEND_API void		7246	1					
ANR	7794	Identifier	zend_make_printable_zval		7246	2					
ANR	7795	ParameterList	"zval * expr , zval * expr_copy , int * use_copy"		7246	3					
ANR	7796	Parameter	zval * expr	226:39:7689:7698	7246	0	True				
ANR	7797	ParameterType	zval *		7246	0					
ANR	7798	Identifier	expr		7246	1					
ANR	7799	Parameter	zval * expr_copy	226:51:7701:7715	7246	1	True				
ANR	7800	ParameterType	zval *		7246	0					
ANR	7801	Identifier	expr_copy		7246	1					
ANR	7802	Parameter	int * use_copy	226:68:7718:7730	7246	2	True				
ANR	7803	ParameterType	int *		7246	0					
ANR	7804	Identifier	use_copy		7246	1					
ANR	7805	CFGEntryNode	ENTRY		7246		True				
ANR	7806	CFGExitNode	EXIT		7246		True				
ANR	7807	Symbol	& val		7246						
ANR	7808	Symbol	& z		7246						
ANR	7809	Symbol	exception		7246						
ANR	7810	Symbol	E_RECOVERABLE_ERROR		7246						
ANR	7811	Symbol	cast_object		7246						
ANR	7812	Symbol	expr_copy		7246						
ANR	7813	Symbol	* use_copy		7246						
ANR	7814	Symbol	estrndup		7246						
ANR	7815	Symbol	emalloc		7246						
ANR	7816	Symbol	get		7246						
ANR	7817	Symbol	Z_OBJCE_P		7246						
ANR	7818	Symbol	expr		7246						
ANR	7819	Symbol	Z_STRLEN_P		7246						
ANR	7820	Symbol	Z_OBJ_HANDLER_P		7246						
ANR	7821	Symbol	IS_STRING		7246						
ANR	7822	Symbol	snprintf		7246						
ANR	7823	Symbol	* Z_OBJCE_P		7246						
ANR	7824	Symbol	val		7246						
ANR	7825	Symbol	EG		7246						
ANR	7826	Symbol	* expr_copy		7246						
ANR	7827	Symbol	Z_OBJCE_P ( expr ) -> name		7246						
ANR	7828	Symbol	MAX_LENGTH_OF_LONG		7246						
ANR	7829	Symbol	E_NOTICE		7246						
ANR	7830	Symbol	Z_TYPE_P		7246						
ANR	7831	Symbol	Z_STRVAL_P		7246						
ANR	7832	Symbol	Z_LVAL_P		7246						
ANR	7833	Symbol	E_ERROR		7246						
ANR	7834	Symbol	use_copy		7246						
ANR	7835	Symbol	* expr		7246						
ANR	7836	Symbol	STR_EMPTY_ALLOC		7246						
ANR	7837	Symbol	z		7246						
ANR	7838	Symbol	IS_OBJECT		7246						
ANR	7839	Function	zend_print_zval	311:0:10082:10201							
ANR	7840	FunctionDef	"zend_print_zval (zval * expr , int indent)"		7839	0					
ANR	7841	CompoundStatement		312:0:10145:10201	7839	0					
ANR	7842	ReturnStatement	"return zend_print_zval_ex ( zend_write , expr , indent ) ;"	313:1:10148:10199	7839	0	True				
ANR	7843	CallExpression	"zend_print_zval_ex ( zend_write , expr , indent )"		7839	0					
ANR	7844	Callee	zend_print_zval_ex		7839	0					
ANR	7845	Identifier	zend_print_zval_ex		7839	0					
ANR	7846	ArgumentList	zend_write		7839	1					
ANR	7847	Argument	zend_write		7839	0					
ANR	7848	Identifier	zend_write		7839	0					
ANR	7849	Argument	expr		7839	1					
ANR	7850	Identifier	expr		7839	0					
ANR	7851	Argument	indent		7839	2					
ANR	7852	Identifier	indent		7839	0					
ANR	7853	ReturnType	ZEND_API int		7839	1					
ANR	7854	Identifier	zend_print_zval		7839	2					
ANR	7855	ParameterList	"zval * expr , int indent"		7839	3					
ANR	7856	Parameter	zval * expr	311:29:10111:10120	7839	0	True				
ANR	7857	ParameterType	zval *		7839	0					
ANR	7858	Identifier	expr		7839	1					
ANR	7859	Parameter	int indent	311:41:10123:10132	7839	1	True				
ANR	7860	ParameterType	int		7839	0					
ANR	7861	Identifier	indent		7839	1					
ANR	7862	CFGEntryNode	ENTRY		7839		True				
ANR	7863	CFGExitNode	EXIT		7839		True				
ANR	7864	Symbol	indent		7839						
ANR	7865	Symbol	expr		7839						
ANR	7866	Symbol	zend_print_zval_ex		7839						
ANR	7867	Symbol	zend_write		7839						
ANR	7868	Function	zend_print_zval_ex	317:0:10214:10677							
ANR	7869	FunctionDef	"zend_print_zval_ex (zend_write_func_t write_func , zval * expr , int indent)"		7868	0					
ANR	7870	CompoundStatement		318:0:10310:10677	7868	0					
ANR	7871	IdentifierDeclStatement	zval expr_copy ;	319:1:10313:10327	7868	0	True				
ANR	7872	IdentifierDecl	expr_copy		7868	0					
ANR	7873	IdentifierDeclType	zval		7868	0					
ANR	7874	Identifier	expr_copy		7868	1					
ANR	7875	IdentifierDeclStatement	int use_copy ;	320:1:10330:10342	7868	1	True				
ANR	7876	IdentifierDecl	use_copy		7868	0					
ANR	7877	IdentifierDeclType	int		7868	0					
ANR	7878	Identifier	use_copy		7868	1					
ANR	7879	ExpressionStatement	"zend_make_printable_zval ( expr , & expr_copy , & use_copy )"	322:1:10346:10399	7868	2	True				
ANR	7880	CallExpression	"zend_make_printable_zval ( expr , & expr_copy , & use_copy )"		7868	0					
ANR	7881	Callee	zend_make_printable_zval		7868	0					
ANR	7882	Identifier	zend_make_printable_zval		7868	0					
ANR	7883	ArgumentList	expr		7868	1					
ANR	7884	Argument	expr		7868	0					
ANR	7885	Identifier	expr		7868	0					
ANR	7886	Argument	& expr_copy		7868	1					
ANR	7887	UnaryOperationExpression	& expr_copy		7868	0					
ANR	7888	UnaryOperator	&		7868	0					
ANR	7889	Identifier	expr_copy		7868	1					
ANR	7890	Argument	& use_copy		7868	2					
ANR	7891	UnaryOperationExpression	& use_copy		7868	0					
ANR	7892	UnaryOperator	&		7868	0					
ANR	7893	Identifier	use_copy		7868	1					
ANR	7894	IfStatement	if ( use_copy )		7868	3					
ANR	7895	Condition	use_copy	323:5:10406:10413	7868	0	True				
ANR	7896	Identifier	use_copy		7868	0					
ANR	7897	CompoundStatement		6:15:105:105	7868	1					
ANR	7898	ExpressionStatement	expr = & expr_copy	324:2:10420:10437	7868	0	True				
ANR	7899	AssignmentExpression	expr = & expr_copy		7868	0		=			
ANR	7900	Identifier	expr		7868	0					
ANR	7901	UnaryOperationExpression	& expr_copy		7868	1					
ANR	7902	UnaryOperator	&		7868	0					
ANR	7903	Identifier	expr_copy		7868	1					
ANR	7904	IfStatement	if ( Z_STRLEN_P ( expr ) == 0 )		7868	4					
ANR	7905	Condition	Z_STRLEN_P ( expr ) == 0	326:5:10447:10467	7868	0	True				
ANR	7906	EqualityExpression	Z_STRLEN_P ( expr ) == 0		7868	0		==			
ANR	7907	CallExpression	Z_STRLEN_P ( expr )		7868	0					
ANR	7908	Callee	Z_STRLEN_P		7868	0					
ANR	7909	Identifier	Z_STRLEN_P		7868	0					
ANR	7910	ArgumentList	expr		7868	1					
ANR	7911	Argument	expr		7868	0					
ANR	7912	Identifier	expr		7868	0					
ANR	7913	PrimaryExpression	0		7868	1					
ANR	7914	CompoundStatement		9:28:159:159	7868	1					
ANR	7915	IfStatement	if ( use_copy )		7868	0					
ANR	7916	Condition	use_copy	327:6:10512:10519	7868	0	True				
ANR	7917	Identifier	use_copy		7868	0					
ANR	7918	CompoundStatement		10:16:211:211	7868	1					
ANR	7919	ExpressionStatement	zval_dtor ( expr )	328:3:10527:10542	7868	0	True				
ANR	7920	CallExpression	zval_dtor ( expr )		7868	0					
ANR	7921	Callee	zval_dtor		7868	0					
ANR	7922	Identifier	zval_dtor		7868	0					
ANR	7923	ArgumentList	expr		7868	1					
ANR	7924	Argument	expr		7868	0					
ANR	7925	Identifier	expr		7868	0					
ANR	7926	ReturnStatement	return 0 ;	330:2:10550:10558	7868	1	True				
ANR	7927	PrimaryExpression	0		7868	0					
ANR	7928	ExpressionStatement	"write_func ( Z_STRVAL_P ( expr ) , Z_STRLEN_P ( expr ) )"	332:1:10564:10610	7868	5	True				
ANR	7929	CallExpression	"write_func ( Z_STRVAL_P ( expr ) , Z_STRLEN_P ( expr ) )"		7868	0					
ANR	7930	Callee	write_func		7868	0					
ANR	7931	Identifier	write_func		7868	0					
ANR	7932	ArgumentList	Z_STRVAL_P ( expr )		7868	1					
ANR	7933	Argument	Z_STRVAL_P ( expr )		7868	0					
ANR	7934	CallExpression	Z_STRVAL_P ( expr )		7868	0					
ANR	7935	Callee	Z_STRVAL_P		7868	0					
ANR	7936	Identifier	Z_STRVAL_P		7868	0					
ANR	7937	ArgumentList	expr		7868	1					
ANR	7938	Argument	expr		7868	0					
ANR	7939	Identifier	expr		7868	0					
ANR	7940	Argument	Z_STRLEN_P ( expr )		7868	1					
ANR	7941	CallExpression	Z_STRLEN_P ( expr )		7868	0					
ANR	7942	Callee	Z_STRLEN_P		7868	0					
ANR	7943	Identifier	Z_STRLEN_P		7868	0					
ANR	7944	ArgumentList	expr		7868	1					
ANR	7945	Argument	expr		7868	0					
ANR	7946	Identifier	expr		7868	0					
ANR	7947	IfStatement	if ( use_copy )		7868	6					
ANR	7948	Condition	use_copy	333:5:10617:10624	7868	0	True				
ANR	7949	Identifier	use_copy		7868	0					
ANR	7950	CompoundStatement		16:15:316:316	7868	1					
ANR	7951	ExpressionStatement	zval_dtor ( expr )	334:2:10631:10646	7868	0	True				
ANR	7952	CallExpression	zval_dtor ( expr )		7868	0					
ANR	7953	Callee	zval_dtor		7868	0					
ANR	7954	Identifier	zval_dtor		7868	0					
ANR	7955	ArgumentList	expr		7868	1					
ANR	7956	Argument	expr		7868	0					
ANR	7957	Identifier	expr		7868	0					
ANR	7958	ReturnStatement	return Z_STRLEN_P ( expr ) ;	336:1:10652:10675	7868	7	True				
ANR	7959	CallExpression	Z_STRLEN_P ( expr )		7868	0					
ANR	7960	Callee	Z_STRLEN_P		7868	0					
ANR	7961	Identifier	Z_STRLEN_P		7868	0					
ANR	7962	ArgumentList	expr		7868	1					
ANR	7963	Argument	expr		7868	0					
ANR	7964	Identifier	expr		7868	0					
ANR	7965	ReturnType	ZEND_API int		7868	1					
ANR	7966	Identifier	zend_print_zval_ex		7868	2					
ANR	7967	ParameterList	"zend_write_func_t write_func , zval * expr , int indent"		7868	3					
ANR	7968	Parameter	zend_write_func_t write_func	317:32:10246:10273	7868	0	True				
ANR	7969	ParameterType	zend_write_func_t		7868	0					
ANR	7970	Identifier	write_func		7868	1					
ANR	7971	Parameter	zval * expr	317:62:10276:10285	7868	1	True				
ANR	7972	ParameterType	zval *		7868	0					
ANR	7973	Identifier	expr		7868	1					
ANR	7974	Parameter	int indent	317:74:10288:10297	7868	2	True				
ANR	7975	ParameterType	int		7868	0					
ANR	7976	Identifier	indent		7868	1					
ANR	7977	CFGEntryNode	ENTRY		7868		True				
ANR	7978	CFGExitNode	EXIT		7868		True				
ANR	7979	Symbol	indent		7868						
ANR	7980	Symbol	use_copy		7868						
ANR	7981	Symbol	expr_copy		7868						
ANR	7982	Symbol	expr		7868						
ANR	7983	Symbol	& use_copy		7868						
ANR	7984	Symbol	Z_STRLEN_P		7868						
ANR	7985	Symbol	write_func		7868						
ANR	7986	Symbol	& expr_copy		7868						
ANR	7987	Symbol	Z_STRVAL_P		7868						
ANR	7988	DeclStmt									
ANR	7989	Decl							HashTable	HashTable *	properties
ANR	7990	DeclStmt									
ANR	7991	Decl							const char	const char *	class_name
ANR	7992	DeclStmt									
ANR	7993	Decl							zend_uint	zend_uint	clen
ANR	7994	Function	zend_print_zval_r	393:0:11914:12051							
ANR	7995	FunctionDef	"zend_print_zval_r (zval * expr , int indent TSRMLS_DC)"		7994	0					
ANR	7996	CompoundStatement		394:0:11990:12051	7994	0					
ANR	7997	Statement	zend_print_zval_r_ex	395:1:11993:12012	7994	0	True				
ANR	7998	Statement	(	395:21:12013:12013	7994	1	True				
ANR	7999	Statement	zend_write	395:22:12014:12023	7994	2	True				
ANR	8000	Statement	","	395:32:12024:12024	7994	3	True				
ANR	8001	Statement	expr	395:34:12026:12029	7994	4	True				
ANR	8002	Statement	","	395:38:12030:12030	7994	5	True				
ANR	8003	Statement	indent	395:40:12032:12037	7994	6	True				
ANR	8004	Statement	TSRMLS_CC	395:47:12039:12047	7994	7	True				
ANR	8005	Statement	)	395:56:12048:12048	7994	8	True				
ANR	8006	ExpressionStatement		395:57:12049:12049	7994	9	True				
ANR	8007	ReturnType	ZEND_API void		7994	1					
ANR	8008	Identifier	zend_print_zval_r		7994	2					
ANR	8009	ParameterList	"zval * expr , int indent TSRMLS_DC"		7994	3					
ANR	8010	Parameter	zval * expr	393:32:11946:11955	7994	0	True				
ANR	8011	ParameterType	zval *		7994	0					
ANR	8012	Identifier	expr		7994	1					
ANR	8013	Parameter	int indent TSRMLS_DC	393:44:11958:11977	7994	1	True				
ANR	8014	ParameterType	int indent		7994	0					
ANR	8015	Identifier	TSRMLS_DC		7994	1					
ANR	8016	CFGEntryNode	ENTRY		7994		True				
ANR	8017	CFGExitNode	EXIT		7994		True				
ANR	8018	Symbol	expr		7994						
ANR	8019	Symbol	TSRMLS_DC		7994						
ANR	8020	Function	zend_print_zval_r_ex	399:0:12064:13421							
ANR	8021	FunctionDef	"zend_print_zval_r_ex (zend_write_func_t write_func , zval * expr , int indent TSRMLS_DC)"		8020	0					
ANR	8022	CompoundStatement		400:0:12173:13421	8020	0					
ANR	8023	SwitchStatement	switch ( Z_TYPE_P ( expr ) )		8020	0					
ANR	8024	Condition	Z_TYPE_P ( expr )	401:9:12184:12197	8020	0	True				
ANR	8025	CallExpression	Z_TYPE_P ( expr )		8020	0					
ANR	8026	Callee	Z_TYPE_P		8020	0					
ANR	8027	Identifier	Z_TYPE_P		8020	0					
ANR	8028	ArgumentList	expr		8020	1					
ANR	8029	Argument	expr		8020	0					
ANR	8030	Identifier	expr		8020	0					
ANR	8031	CompoundStatement		2:25:26:26	8020	1					
ANR	8032	Label	case IS_ARRAY :	402:2:12204:12217	8020	0	True				
ANR	8033	Identifier	IS_ARRAY		8020	0					
ANR	8034	ExpressionStatement	"ZEND_PUTS_EX ( ""Array\\n"" )"	403:3:12222:12245	8020	1	True				
ANR	8035	CallExpression	"ZEND_PUTS_EX ( ""Array\\n"" )"		8020	0					
ANR	8036	Callee	ZEND_PUTS_EX		8020	0					
ANR	8037	Identifier	ZEND_PUTS_EX		8020	0					
ANR	8038	ArgumentList	"""Array\\n"""		8020	1					
ANR	8039	Argument	"""Array\\n"""		8020	0					
ANR	8040	PrimaryExpression	"""Array\\n"""		8020	0					
ANR	8041	IfStatement	if ( ++ Z_ARRVAL_P ( expr ) -> nApplyCount > 1 )		8020	2					
ANR	8042	Condition	++ Z_ARRVAL_P ( expr ) -> nApplyCount > 1	404:7:12254:12286	8020	0	True				
ANR	8043	RelationalExpression	++ Z_ARRVAL_P ( expr ) -> nApplyCount > 1		8020	0		>			
ANR	8044	UnaryExpression	++ Z_ARRVAL_P ( expr ) -> nApplyCount		8020	0					
ANR	8045	IncDec	++		8020	0					
ANR	8046	PtrMemberAccess	Z_ARRVAL_P ( expr ) -> nApplyCount		8020	1					
ANR	8047	CallExpression	Z_ARRVAL_P ( expr )		8020	0					
ANR	8048	Callee	Z_ARRVAL_P		8020	0					
ANR	8049	Identifier	Z_ARRVAL_P		8020	0					
ANR	8050	ArgumentList	expr		8020	1					
ANR	8051	Argument	expr		8020	0					
ANR	8052	Identifier	expr		8020	0					
ANR	8053	Identifier	nApplyCount		8020	1					
ANR	8054	PrimaryExpression	1		8020	1					
ANR	8055	CompoundStatement		5:42:115:115	8020	1					
ANR	8056	ExpressionStatement	"ZEND_PUTS_EX ( "" *RECURSION*"" )"	405:4:12295:12323	8020	0	True				
ANR	8057	CallExpression	"ZEND_PUTS_EX ( "" *RECURSION*"" )"		8020	0					
ANR	8058	Callee	ZEND_PUTS_EX		8020	0					
ANR	8059	Identifier	ZEND_PUTS_EX		8020	0					
ANR	8060	ArgumentList	""" *RECURSION*"""		8020	1					
ANR	8061	Argument	""" *RECURSION*"""		8020	0					
ANR	8062	PrimaryExpression	""" *RECURSION*"""		8020	0					
ANR	8063	ExpressionStatement	Z_ARRVAL_P ( expr ) -> nApplyCount --	406:4:12329:12360	8020	1	True				
ANR	8064	PostIncDecOperationExpression	Z_ARRVAL_P ( expr ) -> nApplyCount --		8020	0					
ANR	8065	PtrMemberAccess	Z_ARRVAL_P ( expr ) -> nApplyCount		8020	0					
ANR	8066	CallExpression	Z_ARRVAL_P ( expr )		8020	0					
ANR	8067	Callee	Z_ARRVAL_P		8020	0					
ANR	8068	Identifier	Z_ARRVAL_P		8020	0					
ANR	8069	ArgumentList	expr		8020	1					
ANR	8070	Argument	expr		8020	0					
ANR	8071	Identifier	expr		8020	0					
ANR	8072	Identifier	nApplyCount		8020	1					
ANR	8073	IncDec	--		8020	1					
ANR	8074	ReturnStatement	return ;	407:4:12366:12372	8020	2	True				
ANR	8075	Statement	print_hash	409:3:12382:12391	8020	3	True				
ANR	8076	Statement	(	409:13:12392:12392	8020	4	True				
ANR	8077	Statement	write_func	409:14:12393:12402	8020	5	True				
ANR	8078	Statement	","	409:24:12403:12403	8020	6	True				
ANR	8079	Statement	Z_ARRVAL_P	409:26:12405:12414	8020	7	True				
ANR	8080	Statement	(	409:36:12415:12415	8020	8	True				
ANR	8081	Statement	expr	409:37:12416:12419	8020	9	True				
ANR	8082	Statement	)	409:41:12420:12420	8020	10	True				
ANR	8083	Statement	","	409:42:12421:12421	8020	11	True				
ANR	8084	Statement	indent	409:44:12423:12428	8020	12	True				
ANR	8085	Statement	","	409:50:12429:12429	8020	13	True				
ANR	8086	Statement	0	409:52:12431:12431	8020	14	True				
ANR	8087	Statement	TSRMLS_CC	409:54:12433:12441	8020	15	True				
ANR	8088	Statement	)	409:63:12442:12442	8020	16	True				
ANR	8089	ExpressionStatement		409:64:12443:12443	8020	17	True				
ANR	8090	ExpressionStatement	Z_ARRVAL_P ( expr ) -> nApplyCount --	410:3:12448:12479	8020	18	True				
ANR	8091	PostIncDecOperationExpression	Z_ARRVAL_P ( expr ) -> nApplyCount --		8020	0					
ANR	8092	PtrMemberAccess	Z_ARRVAL_P ( expr ) -> nApplyCount		8020	0					
ANR	8093	CallExpression	Z_ARRVAL_P ( expr )		8020	0					
ANR	8094	Callee	Z_ARRVAL_P		8020	0					
ANR	8095	Identifier	Z_ARRVAL_P		8020	0					
ANR	8096	ArgumentList	expr		8020	1					
ANR	8097	Argument	expr		8020	0					
ANR	8098	Identifier	expr		8020	0					
ANR	8099	Identifier	nApplyCount		8020	1					
ANR	8100	IncDec	--		8020	1					
ANR	8101	BreakStatement	break ;	411:3:12484:12489	8020	19	True				
ANR	8102	Label	case IS_OBJECT :	412:2:12493:12507	8020	20	True				
ANR	8103	Identifier	IS_OBJECT		8020	0					
ANR	8104	CompoundStatement		18:4:426:437	8020	21					
ANR	8105	IdentifierDeclStatement	HashTable * properties ;	414:4:12518:12539	8020	0	True				
ANR	8106	IdentifierDecl	* properties		8020	0					
ANR	8107	IdentifierDeclType	HashTable *		8020	0					
ANR	8108	Identifier	properties		8020	1					
ANR	8109	IdentifierDeclStatement	const char * class_name = NULL ;	415:4:12545:12574	8020	1	True				
ANR	8110	IdentifierDecl	* class_name = NULL		8020	0					
ANR	8111	IdentifierDeclType	const char *		8020	0					
ANR	8112	Identifier	class_name		8020	1					
ANR	8113	AssignmentExpression	* class_name = NULL		8020	2		=			
ANR	8114	Identifier	NULL		8020	0					
ANR	8115	Identifier	NULL		8020	1					
ANR	8116	IdentifierDeclStatement	zend_uint clen ;	416:4:12580:12594	8020	2	True				
ANR	8117	IdentifierDecl	clen		8020	0					
ANR	8118	IdentifierDeclType	zend_uint		8020	0					
ANR	8119	Identifier	clen		8020	1					
ANR	8120	IdentifierDeclStatement	int is_temp ;	417:4:12600:12611	8020	3	True				
ANR	8121	IdentifierDecl	is_temp		8020	0					
ANR	8122	IdentifierDeclType	int		8020	0					
ANR	8123	Identifier	is_temp		8020	1					
ANR	8124	IfStatement	"if ( Z_OBJ_HANDLER_P ( expr , get_class_name ) )"		8020	4					
ANR	8125	Condition	"Z_OBJ_HANDLER_P ( expr , get_class_name )"	419:8:12622:12658	8020	0	True				
ANR	8126	CallExpression	"Z_OBJ_HANDLER_P ( expr , get_class_name )"		8020	0					
ANR	8127	Callee	Z_OBJ_HANDLER_P		8020	0					
ANR	8128	Identifier	Z_OBJ_HANDLER_P		8020	0					
ANR	8129	ArgumentList	expr		8020	1					
ANR	8130	Argument	expr		8020	0					
ANR	8131	Identifier	expr		8020	0					
ANR	8132	Argument	get_class_name		8020	1					
ANR	8133	Identifier	get_class_name		8020	0					
ANR	8134	CompoundStatement		20:47:487:487	8020	1					
ANR	8135	Statement	Z_OBJ_HANDLER_P	420:5:12668:12682	8020	0	True				
ANR	8136	Statement	(	420:20:12683:12683	8020	1	True				
ANR	8137	Statement	expr	420:21:12684:12687	8020	2	True				
ANR	8138	Statement	","	420:25:12688:12688	8020	3	True				
ANR	8139	Statement	get_class_name	420:27:12690:12703	8020	4	True				
ANR	8140	Statement	)	420:41:12704:12704	8020	5	True				
ANR	8141	Statement	(	420:42:12705:12705	8020	6	True				
ANR	8142	Statement	expr	420:43:12706:12709	8020	7	True				
ANR	8143	Statement	","	420:47:12710:12710	8020	8	True				
ANR	8144	Statement	&	420:49:12712:12712	8020	9	True				
ANR	8145	Statement	class_name	420:50:12713:12722	8020	10	True				
ANR	8146	Statement	","	420:60:12723:12723	8020	11	True				
ANR	8147	Statement	&	420:62:12725:12725	8020	12	True				
ANR	8148	Statement	clen	420:63:12726:12729	8020	13	True				
ANR	8149	Statement	","	420:67:12730:12730	8020	14	True				
ANR	8150	Statement	0	420:69:12732:12732	8020	15	True				
ANR	8151	Statement	TSRMLS_CC	420:71:12734:12742	8020	16	True				
ANR	8152	Statement	)	420:80:12743:12743	8020	17	True				
ANR	8153	ExpressionStatement		420:81:12744:12744	8020	18	True				
ANR	8154	IfStatement	if ( class_name )		8020	5					
ANR	8155	Condition	class_name	422:8:12760:12769	8020	0	True				
ANR	8156	Identifier	class_name		8020	0					
ANR	8157	CompoundStatement		23:20:598:598	8020	1					
ANR	8158	ExpressionStatement	ZEND_PUTS_EX ( class_name )	423:5:12779:12803	8020	0	True				
ANR	8159	CallExpression	ZEND_PUTS_EX ( class_name )		8020	0					
ANR	8160	Callee	ZEND_PUTS_EX		8020	0					
ANR	8161	Identifier	ZEND_PUTS_EX		8020	0					
ANR	8162	ArgumentList	class_name		8020	1					
ANR	8163	Argument	class_name		8020	0					
ANR	8164	Identifier	class_name		8020	0					
ANR	8165	ElseStatement	else		8020	0					
ANR	8166	CompoundStatement		25:11:642:642	8020	0					
ANR	8167	ExpressionStatement	"ZEND_PUTS_EX ( ""Unknown Class"" )"	425:5:12823:12852	8020	0	True				
ANR	8168	CallExpression	"ZEND_PUTS_EX ( ""Unknown Class"" )"		8020	0					
ANR	8169	Callee	ZEND_PUTS_EX		8020	0					
ANR	8170	Identifier	ZEND_PUTS_EX		8020	0					
ANR	8171	ArgumentList	"""Unknown Class"""		8020	1					
ANR	8172	Argument	"""Unknown Class"""		8020	0					
ANR	8173	PrimaryExpression	"""Unknown Class"""		8020	0					
ANR	8174	ExpressionStatement	"ZEND_PUTS_EX ( "" Object\\n"" )"	427:4:12864:12889	8020	6	True				
ANR	8175	CallExpression	"ZEND_PUTS_EX ( "" Object\\n"" )"		8020	0					
ANR	8176	Callee	ZEND_PUTS_EX		8020	0					
ANR	8177	Identifier	ZEND_PUTS_EX		8020	0					
ANR	8178	ArgumentList	""" Object\\n"""		8020	1					
ANR	8179	Argument	""" Object\\n"""		8020	0					
ANR	8180	PrimaryExpression	""" Object\\n"""		8020	0					
ANR	8181	IfStatement	if ( class_name )		8020	7					
ANR	8182	Condition	class_name	428:8:12899:12908	8020	0	True				
ANR	8183	Identifier	class_name		8020	0					
ANR	8184	CompoundStatement		29:20:737:737	8020	1					
ANR	8185	ExpressionStatement	efree ( ( char * ) class_name )	429:5:12918:12942	8020	0	True				
ANR	8186	CallExpression	efree ( ( char * ) class_name )		8020	0					
ANR	8187	Callee	efree		8020	0					
ANR	8188	Identifier	efree		8020	0					
ANR	8189	ArgumentList	( char * ) class_name		8020	1					
ANR	8190	Argument	( char * ) class_name		8020	0					
ANR	8191	CastExpression	( char * ) class_name		8020	0					
ANR	8192	CastTarget	char *		8020	0					
ANR	8193	Identifier	class_name		8020	1					
ANR	8194	IfStatement	"if ( ( properties = Z_OBJDEBUG_P ( expr , is_temp ) ) == NULL )"		8020	8					
ANR	8195	Condition	"( properties = Z_OBJDEBUG_P ( expr , is_temp ) ) == NULL"	431:8:12958:13007	8020	0	True				
ANR	8196	EqualityExpression	"( properties = Z_OBJDEBUG_P ( expr , is_temp ) ) == NULL"		8020	0		==			
ANR	8197	AssignmentExpression	"properties = Z_OBJDEBUG_P ( expr , is_temp )"		8020	0		=			
ANR	8198	Identifier	properties		8020	0					
ANR	8199	CallExpression	"Z_OBJDEBUG_P ( expr , is_temp )"		8020	1					
ANR	8200	Callee	Z_OBJDEBUG_P		8020	0					
ANR	8201	Identifier	Z_OBJDEBUG_P		8020	0					
ANR	8202	ArgumentList	expr		8020	1					
ANR	8203	Argument	expr		8020	0					
ANR	8204	Identifier	expr		8020	0					
ANR	8205	Argument	is_temp		8020	1					
ANR	8206	Identifier	is_temp		8020	0					
ANR	8207	Identifier	NULL		8020	1					
ANR	8208	CompoundStatement		32:60:836:836	8020	1					
ANR	8209	BreakStatement	break ;	432:5:13017:13022	8020	0	True				
ANR	8210	IfStatement	if ( ++ properties -> nApplyCount > 1 )		8020	9					
ANR	8211	Condition	++ properties -> nApplyCount > 1	434:8:13038:13064	8020	0	True				
ANR	8212	RelationalExpression	++ properties -> nApplyCount > 1		8020	0		>			
ANR	8213	UnaryExpression	++ properties -> nApplyCount		8020	0					
ANR	8214	IncDec	++		8020	0					
ANR	8215	PtrMemberAccess	properties -> nApplyCount		8020	1					
ANR	8216	Identifier	properties		8020	0					
ANR	8217	Identifier	nApplyCount		8020	1					
ANR	8218	PrimaryExpression	1		8020	1					
ANR	8219	CompoundStatement		35:37:893:893	8020	1					
ANR	8220	ExpressionStatement	"ZEND_PUTS_EX ( "" *RECURSION*"" )"	435:5:13074:13102	8020	0	True				
ANR	8221	CallExpression	"ZEND_PUTS_EX ( "" *RECURSION*"" )"		8020	0					
ANR	8222	Callee	ZEND_PUTS_EX		8020	0					
ANR	8223	Identifier	ZEND_PUTS_EX		8020	0					
ANR	8224	ArgumentList	""" *RECURSION*"""		8020	1					
ANR	8225	Argument	""" *RECURSION*"""		8020	0					
ANR	8226	PrimaryExpression	""" *RECURSION*"""		8020	0					
ANR	8227	ExpressionStatement	properties -> nApplyCount --	436:5:13109:13134	8020	1	True				
ANR	8228	PostIncDecOperationExpression	properties -> nApplyCount --		8020	0					
ANR	8229	PtrMemberAccess	properties -> nApplyCount		8020	0					
ANR	8230	Identifier	properties		8020	0					
ANR	8231	Identifier	nApplyCount		8020	1					
ANR	8232	IncDec	--		8020	1					
ANR	8233	ReturnStatement	return ;	437:5:13141:13147	8020	2	True				
ANR	8234	Statement	print_hash	439:4:13159:13168	8020	10	True				
ANR	8235	Statement	(	439:14:13169:13169	8020	11	True				
ANR	8236	Statement	write_func	439:15:13170:13179	8020	12	True				
ANR	8237	Statement	","	439:25:13180:13180	8020	13	True				
ANR	8238	Statement	properties	439:27:13182:13191	8020	14	True				
ANR	8239	Statement	","	439:37:13192:13192	8020	15	True				
ANR	8240	Statement	indent	439:39:13194:13199	8020	16	True				
ANR	8241	Statement	","	439:45:13200:13200	8020	17	True				
ANR	8242	Statement	1	439:47:13202:13202	8020	18	True				
ANR	8243	Statement	TSRMLS_CC	439:49:13204:13212	8020	19	True				
ANR	8244	Statement	)	439:58:13213:13213	8020	20	True				
ANR	8245	ExpressionStatement		439:59:13214:13214	8020	21	True				
ANR	8246	ExpressionStatement	properties -> nApplyCount --	440:4:13220:13245	8020	22	True				
ANR	8247	PostIncDecOperationExpression	properties -> nApplyCount --		8020	0					
ANR	8248	PtrMemberAccess	properties -> nApplyCount		8020	0					
ANR	8249	Identifier	properties		8020	0					
ANR	8250	Identifier	nApplyCount		8020	1					
ANR	8251	IncDec	--		8020	1					
ANR	8252	IfStatement	if ( is_temp )		8020	23					
ANR	8253	Condition	is_temp	441:8:13255:13261	8020	0	True				
ANR	8254	Identifier	is_temp		8020	0					
ANR	8255	CompoundStatement		42:17:1090:1090	8020	1					
ANR	8256	ExpressionStatement	zend_hash_destroy ( properties )	442:5:13271:13300	8020	0	True				
ANR	8257	CallExpression	zend_hash_destroy ( properties )		8020	0					
ANR	8258	Callee	zend_hash_destroy		8020	0					
ANR	8259	Identifier	zend_hash_destroy		8020	0					
ANR	8260	ArgumentList	properties		8020	1					
ANR	8261	Argument	properties		8020	0					
ANR	8262	Identifier	properties		8020	0					
ANR	8263	ExpressionStatement	efree ( properties )	443:5:13307:13324	8020	1	True				
ANR	8264	CallExpression	efree ( properties )		8020	0					
ANR	8265	Callee	efree		8020	0					
ANR	8266	Identifier	efree		8020	0					
ANR	8267	ArgumentList	properties		8020	1					
ANR	8268	Argument	properties		8020	0					
ANR	8269	Identifier	properties		8020	0					
ANR	8270	BreakStatement	break ;	445:4:13336:13341	8020	24	True				
ANR	8271	Label	default :	447:2:13350:13357	8020	22	True				
ANR	8272	Identifier	default		8020	0					
ANR	8273	ExpressionStatement	"zend_print_zval_ex ( write_func , expr , indent )"	448:3:13362:13406	8020	23	True				
ANR	8274	CallExpression	"zend_print_zval_ex ( write_func , expr , indent )"		8020	0					
ANR	8275	Callee	zend_print_zval_ex		8020	0					
ANR	8276	Identifier	zend_print_zval_ex		8020	0					
ANR	8277	ArgumentList	write_func		8020	1					
ANR	8278	Argument	write_func		8020	0					
ANR	8279	Identifier	write_func		8020	0					
ANR	8280	Argument	expr		8020	1					
ANR	8281	Identifier	expr		8020	0					
ANR	8282	Argument	indent		8020	2					
ANR	8283	Identifier	indent		8020	0					
ANR	8284	BreakStatement	break ;	449:3:13411:13416	8020	24	True				
ANR	8285	ReturnType	ZEND_API void		8020	1					
ANR	8286	Identifier	zend_print_zval_r_ex		8020	2					
ANR	8287	ParameterList	"zend_write_func_t write_func , zval * expr , int indent TSRMLS_DC"		8020	3					
ANR	8288	Parameter	zend_write_func_t write_func	399:35:12099:12126	8020	0	True				
ANR	8289	ParameterType	zend_write_func_t		8020	0					
ANR	8290	Identifier	write_func		8020	1					
ANR	8291	Parameter	zval * expr	399:65:12129:12138	8020	1	True				
ANR	8292	ParameterType	zval *		8020	0					
ANR	8293	Identifier	expr		8020	1					
ANR	8294	Parameter	int indent TSRMLS_DC	399:77:12141:12160	8020	2	True				
ANR	8295	ParameterType	int indent		8020	0					
ANR	8296	Identifier	TSRMLS_DC		8020	1					
ANR	8297	CFGEntryNode	ENTRY		8020		True				
ANR	8298	CFGExitNode	EXIT		8020		True				
ANR	8299	Symbol	* properties		8020						
ANR	8300	Symbol	get_class_name		8020						
ANR	8301	Symbol	Z_ARRVAL_P ( expr ) -> nApplyCount		8020						
ANR	8302	Symbol	NULL		8020						
ANR	8303	Symbol	properties -> nApplyCount		8020						
ANR	8304	Symbol	indent		8020						
ANR	8305	Symbol	* Z_ARRVAL_P		8020						
ANR	8306	Symbol	write_func		8020						
ANR	8307	Symbol	Z_TYPE_P		8020						
ANR	8308	Symbol	TSRMLS_DC		8020						
ANR	8309	Symbol	is_temp		8020						
ANR	8310	Symbol	Z_OBJDEBUG_P		8020						
ANR	8311	Symbol	expr		8020						
ANR	8312	Symbol	Z_OBJ_HANDLER_P		8020						
ANR	8313	Symbol	Z_ARRVAL_P		8020						
ANR	8314	Symbol	clen		8020						
ANR	8315	Symbol	class_name		8020						
ANR	8316	Symbol	properties		8020						
ANR	8317	DeclStmt									
ANR	8318	Decl							zend_bool	zend_bool	asp_tags_default
ANR	8319	DeclStmt									
ANR	8320	Decl							zend_bool	zend_bool	short_tags_default
ANR	8321	DeclStmt									
ANR	8322	Decl							zend_uint	zend_uint	compiler_options_default
ANR	8323	DeclStmt									
ANR	8324	Decl							zend_function	zend_function	tmp_func
ANR	8325	DeclStmt									
ANR	8326	Decl							zend_class_entry	zend_class_entry *	tmp_class
ANR	8327	Function	zend_new_thread_end_handler	596:0:18403:18603							
ANR	8328	FunctionDef	zend_new_thread_end_handler (THREAD_T thread_id TSRMLS_DC)		8327	0					
ANR	8329	CompoundStatement		597:0:18483:18603	8327	0					
ANR	8330	IfStatement	if ( zend_copy_ini_directives ( TSRMLS_C ) == SUCCESS )		8327	0					
ANR	8331	Condition	zend_copy_ini_directives ( TSRMLS_C ) == SUCCESS	598:5:18490:18534	8327	0	True				
ANR	8332	EqualityExpression	zend_copy_ini_directives ( TSRMLS_C ) == SUCCESS		8327	0		==			
ANR	8333	CallExpression	zend_copy_ini_directives ( TSRMLS_C )		8327	0					
ANR	8334	Callee	zend_copy_ini_directives		8327	0					
ANR	8335	Identifier	zend_copy_ini_directives		8327	0					
ANR	8336	ArgumentList	TSRMLS_C		8327	1					
ANR	8337	Argument	TSRMLS_C		8327	0					
ANR	8338	Identifier	TSRMLS_C		8327	0					
ANR	8339	Identifier	SUCCESS		8327	1					
ANR	8340	CompoundStatement		2:52:53:53	8327	1					
ANR	8341	Statement	zend_ini_refresh_caches	599:2:18541:18563	8327	0	True				
ANR	8342	Statement	(	599:25:18564:18564	8327	1	True				
ANR	8343	Statement	ZEND_INI_STAGE_STARTUP	599:26:18565:18586	8327	2	True				
ANR	8344	Statement	TSRMLS_CC	599:49:18588:18596	8327	3	True				
ANR	8345	Statement	)	599:58:18597:18597	8327	4	True				
ANR	8346	ExpressionStatement		599:59:18598:18598	8327	5	True				
ANR	8347	ReturnType	static void		8327	1					
ANR	8348	Identifier	zend_new_thread_end_handler		8327	2					
ANR	8349	ParameterList	THREAD_T thread_id TSRMLS_DC		8327	3					
ANR	8350	Parameter	THREAD_T thread_id TSRMLS_DC	596:40:18443:18470	8327	0	True				
ANR	8351	ParameterType	THREAD_T thread_id		8327	0					
ANR	8352	Identifier	TSRMLS_DC		8327	1					
ANR	8353	CFGEntryNode	ENTRY		8327		True				
ANR	8354	CFGExitNode	EXIT		8327		True				
ANR	8355	Symbol	zend_copy_ini_directives		8327						
ANR	8356	Symbol	SUCCESS		8327						
ANR	8357	Symbol	TSRMLS_C		8327						
ANR	8358	Symbol	TSRMLS_DC		8327						
ANR	8359	DeclStmt									
ANR	8360	Decl							void	void ( void )	zend_init_opcodes_handlers
ANR	8361	Function	php_auto_globals_create_globals	624:0:19158:19531							
ANR	8362	FunctionDef	"php_auto_globals_create_globals (const char * name , uint name_len TSRMLS_DC)"		8361	0					
ANR	8363	CompoundStatement		625:0:19260:19531	8361	0					
ANR	8364	IdentifierDeclStatement	zval * globals ;	626:1:19263:19276	8361	0	True				
ANR	8365	IdentifierDecl	* globals		8361	0					
ANR	8366	IdentifierDeclType	zval *		8361	0					
ANR	8367	Identifier	globals		8361	1					
ANR	8368	ExpressionStatement	ALLOC_ZVAL ( globals )	628:1:19280:19299	8361	1	True				
ANR	8369	CallExpression	ALLOC_ZVAL ( globals )		8361	0					
ANR	8370	Callee	ALLOC_ZVAL		8361	0					
ANR	8371	Identifier	ALLOC_ZVAL		8361	0					
ANR	8372	ArgumentList	globals		8361	1					
ANR	8373	Argument	globals		8361	0					
ANR	8374	Identifier	globals		8361	0					
ANR	8375	ExpressionStatement	"Z_SET_REFCOUNT_P ( globals , 1 )"	629:1:19302:19330	8361	2	True				
ANR	8376	CallExpression	"Z_SET_REFCOUNT_P ( globals , 1 )"		8361	0					
ANR	8377	Callee	Z_SET_REFCOUNT_P		8361	0					
ANR	8378	Identifier	Z_SET_REFCOUNT_P		8361	0					
ANR	8379	ArgumentList	globals		8361	1					
ANR	8380	Argument	globals		8361	0					
ANR	8381	Identifier	globals		8361	0					
ANR	8382	Argument	1		8361	1					
ANR	8383	PrimaryExpression	1		8361	0					
ANR	8384	ExpressionStatement	Z_SET_ISREF_P ( globals )	630:1:19333:19355	8361	3	True				
ANR	8385	CallExpression	Z_SET_ISREF_P ( globals )		8361	0					
ANR	8386	Callee	Z_SET_ISREF_P		8361	0					
ANR	8387	Identifier	Z_SET_ISREF_P		8361	0					
ANR	8388	ArgumentList	globals		8361	1					
ANR	8389	Argument	globals		8361	0					
ANR	8390	Identifier	globals		8361	0					
ANR	8391	ExpressionStatement	Z_TYPE_P ( globals ) = IS_ARRAY	631:1:19358:19386	8361	4	True				
ANR	8392	AssignmentExpression	Z_TYPE_P ( globals ) = IS_ARRAY		8361	0		=			
ANR	8393	CallExpression	Z_TYPE_P ( globals )		8361	0					
ANR	8394	Callee	Z_TYPE_P		8361	0					
ANR	8395	Identifier	Z_TYPE_P		8361	0					
ANR	8396	ArgumentList	globals		8361	1					
ANR	8397	Argument	globals		8361	0					
ANR	8398	Identifier	globals		8361	0					
ANR	8399	Identifier	IS_ARRAY		8361	1					
ANR	8400	ExpressionStatement	Z_ARRVAL_P ( globals ) = & EG ( symbol_table )	632:1:19389:19428	8361	5	True				
ANR	8401	AssignmentExpression	Z_ARRVAL_P ( globals ) = & EG ( symbol_table )		8361	0		=			
ANR	8402	CallExpression	Z_ARRVAL_P ( globals )		8361	0					
ANR	8403	Callee	Z_ARRVAL_P		8361	0					
ANR	8404	Identifier	Z_ARRVAL_P		8361	0					
ANR	8405	ArgumentList	globals		8361	1					
ANR	8406	Argument	globals		8361	0					
ANR	8407	Identifier	globals		8361	0					
ANR	8408	UnaryOperationExpression	& EG ( symbol_table )		8361	1					
ANR	8409	UnaryOperator	&		8361	0					
ANR	8410	CallExpression	EG ( symbol_table )		8361	1					
ANR	8411	Callee	EG		8361	0					
ANR	8412	Identifier	EG		8361	0					
ANR	8413	ArgumentList	symbol_table		8361	1					
ANR	8414	Argument	symbol_table		8361	0					
ANR	8415	Identifier	symbol_table		8361	0					
ANR	8416	ExpressionStatement	"zend_hash_update ( & EG ( symbol_table ) , name , name_len + 1 , & globals , sizeof ( zval * ) , NULL )"	633:1:19431:19518	8361	6	True				
ANR	8417	CallExpression	"zend_hash_update ( & EG ( symbol_table ) , name , name_len + 1 , & globals , sizeof ( zval * ) , NULL )"		8361	0					
ANR	8418	Callee	zend_hash_update		8361	0					
ANR	8419	Identifier	zend_hash_update		8361	0					
ANR	8420	ArgumentList	& EG ( symbol_table )		8361	1					
ANR	8421	Argument	& EG ( symbol_table )		8361	0					
ANR	8422	UnaryOperationExpression	& EG ( symbol_table )		8361	0					
ANR	8423	UnaryOperator	&		8361	0					
ANR	8424	CallExpression	EG ( symbol_table )		8361	1					
ANR	8425	Callee	EG		8361	0					
ANR	8426	Identifier	EG		8361	0					
ANR	8427	ArgumentList	symbol_table		8361	1					
ANR	8428	Argument	symbol_table		8361	0					
ANR	8429	Identifier	symbol_table		8361	0					
ANR	8430	Argument	name		8361	1					
ANR	8431	Identifier	name		8361	0					
ANR	8432	Argument	name_len + 1		8361	2					
ANR	8433	AdditiveExpression	name_len + 1		8361	0		+			
ANR	8434	Identifier	name_len		8361	0					
ANR	8435	PrimaryExpression	1		8361	1					
ANR	8436	Argument	& globals		8361	3					
ANR	8437	UnaryOperationExpression	& globals		8361	0					
ANR	8438	UnaryOperator	&		8361	0					
ANR	8439	Identifier	globals		8361	1					
ANR	8440	Argument	sizeof ( zval * )		8361	4					
ANR	8441	SizeofExpression	sizeof ( zval * )		8361	0					
ANR	8442	Sizeof	sizeof		8361	0					
ANR	8443	SizeofOperand	zval *		8361	1					
ANR	8444	Argument	NULL		8361	5					
ANR	8445	Identifier	NULL		8361	0					
ANR	8446	ReturnStatement	return 0 ;	634:1:19521:19529	8361	7	True				
ANR	8447	PrimaryExpression	0		8361	0					
ANR	8448	ReturnType	static zend_bool		8361	1					
ANR	8449	Identifier	php_auto_globals_create_globals		8361	2					
ANR	8450	ParameterList	"const char * name , uint name_len TSRMLS_DC"		8361	3					
ANR	8451	Parameter	const char * name	624:49:19207:19222	8361	0	True				
ANR	8452	ParameterType	const char *		8361	0					
ANR	8453	Identifier	name		8361	1					
ANR	8454	Parameter	uint name_len TSRMLS_DC	624:67:19225:19247	8361	1	True				
ANR	8455	ParameterType	uint name_len		8361	0					
ANR	8456	Identifier	TSRMLS_DC		8361	1					
ANR	8457	CFGEntryNode	ENTRY		8361		True				
ANR	8458	CFGExitNode	EXIT		8361		True				
ANR	8459	Symbol	& globals		8361						
ANR	8460	Symbol	NULL		8361						
ANR	8461	Symbol	IS_ARRAY		8361						
ANR	8462	Symbol	globals		8361						
ANR	8463	Symbol	name		8361						
ANR	8464	Symbol	symbol_table		8361						
ANR	8465	Symbol	name_len		8361						
ANR	8466	Symbol	Z_TYPE_P		8361						
ANR	8467	Symbol	Z_ARRVAL_P		8361						
ANR	8468	Symbol	TSRMLS_DC		8361						
ANR	8469	Symbol	& EG		8361						
ANR	8470	DeclStmt									
ANR	8471	Decl							zend_compiler_globals	zend_compiler_globals *	compiler_globals
ANR	8472	DeclStmt									
ANR	8473	Decl							zend_executor_globals	zend_executor_globals *	executor_globals
ANR	8474	DeclStmt									
ANR	8475	Decl							extern ZEND_API ts_rsrc_id	extern ZEND_API ts_rsrc_id	ini_scanner_globals_id
ANR	8476	DeclStmt									
ANR	8477	Decl							extern ZEND_API ts_rsrc_id	extern ZEND_API ts_rsrc_id	language_scanner_globals_id
ANR	8478	DeclStmt									
ANR	8479	Decl							extern zend_ini_scanner_globals	extern zend_ini_scanner_globals	ini_scanner_globals
ANR	8480	DeclStmt									
ANR	8481	Decl							extern zend_php_scanner_globals	extern zend_php_scanner_globals	language_scanner_globals
ANR	8482	DeclStmt									
ANR	8483	Decl							int	int	module_number
ANR	8484	DeclStmt									
ANR	8485	Decl							zend_encoding	zend_encoding * *	script_encoding_list
ANR	8486	DeclStmt									
ANR	8487	Decl							zend_compiler_globals	zend_compiler_globals *	compiler_globals
ANR	8488	DeclStmt									
ANR	8489	Decl							zend_executor_globals	zend_executor_globals *	executor_globals
ANR	8490	Function	zend_set_utility_values	869:0:27631:27814							
ANR	8491	FunctionDef	zend_set_utility_values (zend_utility_values * utility_values)		8490	0					
ANR	8492	CompoundStatement		870:0:27707:27814	8490	0					
ANR	8493	ExpressionStatement	zend_uv = * utility_values	871:1:27710:27735	8490	0	True				
ANR	8494	AssignmentExpression	zend_uv = * utility_values		8490	0		=			
ANR	8495	Identifier	zend_uv		8490	0					
ANR	8496	UnaryOperationExpression	* utility_values		8490	1					
ANR	8497	UnaryOperator	*		8490	0					
ANR	8498	Identifier	utility_values		8490	1					
ANR	8499	ExpressionStatement	zend_uv . import_use_extension_length = strlen ( zend_uv . import_use_extension )	872:1:27738:27812	8490	1	True				
ANR	8500	AssignmentExpression	zend_uv . import_use_extension_length = strlen ( zend_uv . import_use_extension )		8490	0		=			
ANR	8501	MemberAccess	zend_uv . import_use_extension_length		8490	0					
ANR	8502	Identifier	zend_uv		8490	0					
ANR	8503	Identifier	import_use_extension_length		8490	1					
ANR	8504	CallExpression	strlen ( zend_uv . import_use_extension )		8490	1					
ANR	8505	Callee	strlen		8490	0					
ANR	8506	Identifier	strlen		8490	0					
ANR	8507	ArgumentList	zend_uv . import_use_extension		8490	1					
ANR	8508	Argument	zend_uv . import_use_extension		8490	0					
ANR	8509	MemberAccess	zend_uv . import_use_extension		8490	0					
ANR	8510	Identifier	zend_uv		8490	0					
ANR	8511	Identifier	import_use_extension		8490	1					
ANR	8512	ReturnType	void		8490	1					
ANR	8513	Identifier	zend_set_utility_values		8490	2					
ANR	8514	ParameterList	zend_utility_values * utility_values		8490	3					
ANR	8515	Parameter	zend_utility_values * utility_values	869:29:27660:27694	8490	0	True				
ANR	8516	ParameterType	zend_utility_values *		8490	0					
ANR	8517	Identifier	utility_values		8490	1					
ANR	8518	CFGEntryNode	ENTRY		8490		True				
ANR	8519	CFGExitNode	EXIT		8490		True				
ANR	8520	Symbol	zend_uv . import_use_extension_length		8490						
ANR	8521	Symbol	zend_uv		8490						
ANR	8522	Symbol	strlen		8490						
ANR	8523	Symbol	zend_uv . import_use_extension		8490						
ANR	8524	Symbol	utility_values		8490						
ANR	8525	Symbol	* utility_values		8490						
ANR	8526	Function	zenderror	877:0:27887:27968							
ANR	8527	FunctionDef	zenderror (const char * error)		8526	0					
ANR	8528	CompoundStatement		878:0:27931:27968	8526	0					
ANR	8529	ExpressionStatement	"zend_error ( E_PARSE , ""%s"" , error )"	879:1:27934:27966	8526	0	True				
ANR	8530	CallExpression	"zend_error ( E_PARSE , ""%s"" , error )"		8526	0					
ANR	8531	Callee	zend_error		8526	0					
ANR	8532	Identifier	zend_error		8526	0					
ANR	8533	ArgumentList	E_PARSE		8526	1					
ANR	8534	Argument	E_PARSE		8526	0					
ANR	8535	Identifier	E_PARSE		8526	0					
ANR	8536	Argument	"""%s"""		8526	1					
ANR	8537	PrimaryExpression	"""%s"""		8526	0					
ANR	8538	Argument	error		8526	2					
ANR	8539	Identifier	error		8526	0					
ANR	8540	ReturnType	void		8526	1					
ANR	8541	Identifier	zenderror		8526	2					
ANR	8542	ParameterList	const char * error		8526	3					
ANR	8543	Parameter	const char * error	877:15:27902:27918	8526	0	True				
ANR	8544	ParameterType	const char *		8526	0					
ANR	8545	Identifier	error		8526	1					
ANR	8546	CFGEntryNode	ENTRY		8526		True				
ANR	8547	CFGExitNode	EXIT		8526		True				
ANR	8548	Symbol	E_PARSE		8526						
ANR	8549	Symbol	error		8526						
ANR	8550	Function	_zend_bailout	884:0:27998:28390							
ANR	8551	FunctionDef	"_zend_bailout (char * filename , uint lineno)"		8550	0					
ANR	8552	CompoundStatement		885:0:28065:28390	8550	0					
ANR	8553	ExpressionStatement	TSRMLS_FETCH ( )	886:1:28068:28082	8550	0	True				
ANR	8554	CallExpression	TSRMLS_FETCH ( )		8550	0					
ANR	8555	Callee	TSRMLS_FETCH		8550	0					
ANR	8556	Identifier	TSRMLS_FETCH		8550	0					
ANR	8557	ArgumentList			8550	1					
ANR	8558	IfStatement	if ( ! EG ( bailout ) )		8550	1					
ANR	8559	Condition	! EG ( bailout )	888:5:28090:28101	8550	0	True				
ANR	8560	UnaryOperationExpression	! EG ( bailout )		8550	0					
ANR	8561	UnaryOperator	!		8550	0					
ANR	8562	CallExpression	EG ( bailout )		8550	1					
ANR	8563	Callee	EG		8550	0					
ANR	8564	Identifier	EG		8550	0					
ANR	8565	ArgumentList	bailout		8550	1					
ANR	8566	Argument	bailout		8550	0					
ANR	8567	Identifier	bailout		8550	0					
ANR	8568	CompoundStatement		4:19:38:38	8550	1					
ANR	8569	ExpressionStatement	"zend_output_debug_string ( 1 , ""%s(%d) : Bailed out without a bailout address!"" , filename , lineno )"	889:2:28108:28203	8550	0	True				
ANR	8570	CallExpression	"zend_output_debug_string ( 1 , ""%s(%d) : Bailed out without a bailout address!"" , filename , lineno )"		8550	0					
ANR	8571	Callee	zend_output_debug_string		8550	0					
ANR	8572	Identifier	zend_output_debug_string		8550	0					
ANR	8573	ArgumentList	1		8550	1					
ANR	8574	Argument	1		8550	0					
ANR	8575	PrimaryExpression	1		8550	0					
ANR	8576	Argument	"""%s(%d) : Bailed out without a bailout address!"""		8550	1					
ANR	8577	PrimaryExpression	"""%s(%d) : Bailed out without a bailout address!"""		8550	0					
ANR	8578	Argument	filename		8550	2					
ANR	8579	Identifier	filename		8550	0					
ANR	8580	Argument	lineno		8550	3					
ANR	8581	Identifier	lineno		8550	0					
ANR	8582	ExpressionStatement	exit ( - 1 )	890:2:28207:28215	8550	1	True				
ANR	8583	CallExpression	exit ( - 1 )		8550	0					
ANR	8584	Callee	exit		8550	0					
ANR	8585	Identifier	exit		8550	0					
ANR	8586	ArgumentList	- 1		8550	1					
ANR	8587	Argument	- 1		8550	0					
ANR	8588	UnaryOperationExpression	- 1		8550	0					
ANR	8589	UnaryOperator	-		8550	0					
ANR	8590	PrimaryExpression	1		8550	1					
ANR	8591	ExpressionStatement	CG ( unclean_shutdown ) = 1	892:1:28221:28245	8550	2	True				
ANR	8592	AssignmentExpression	CG ( unclean_shutdown ) = 1		8550	0		=			
ANR	8593	CallExpression	CG ( unclean_shutdown )		8550	0					
ANR	8594	Callee	CG		8550	0					
ANR	8595	Identifier	CG		8550	0					
ANR	8596	ArgumentList	unclean_shutdown		8550	1					
ANR	8597	Argument	unclean_shutdown		8550	0					
ANR	8598	Identifier	unclean_shutdown		8550	0					
ANR	8599	PrimaryExpression	1		8550	1					
ANR	8600	ExpressionStatement	CG ( active_class_entry ) = NULL	893:1:28248:28277	8550	3	True				
ANR	8601	AssignmentExpression	CG ( active_class_entry ) = NULL		8550	0		=			
ANR	8602	CallExpression	CG ( active_class_entry )		8550	0					
ANR	8603	Callee	CG		8550	0					
ANR	8604	Identifier	CG		8550	0					
ANR	8605	ArgumentList	active_class_entry		8550	1					
ANR	8606	Argument	active_class_entry		8550	0					
ANR	8607	Identifier	active_class_entry		8550	0					
ANR	8608	Identifier	NULL		8550	1					
ANR	8609	ExpressionStatement	CG ( in_compilation ) = EG ( in_execution ) = 0	894:1:28280:28321	8550	4	True				
ANR	8610	AssignmentExpression	CG ( in_compilation ) = EG ( in_execution ) = 0		8550	0		=			
ANR	8611	CallExpression	CG ( in_compilation )		8550	0					
ANR	8612	Callee	CG		8550	0					
ANR	8613	Identifier	CG		8550	0					
ANR	8614	ArgumentList	in_compilation		8550	1					
ANR	8615	Argument	in_compilation		8550	0					
ANR	8616	Identifier	in_compilation		8550	0					
ANR	8617	AssignmentExpression	EG ( in_execution ) = 0		8550	1		=			
ANR	8618	CallExpression	EG ( in_execution )		8550	0					
ANR	8619	Callee	EG		8550	0					
ANR	8620	Identifier	EG		8550	0					
ANR	8621	ArgumentList	in_execution		8550	1					
ANR	8622	Argument	in_execution		8550	0					
ANR	8623	Identifier	in_execution		8550	0					
ANR	8624	PrimaryExpression	0		8550	1					
ANR	8625	ExpressionStatement	EG ( current_execute_data ) = NULL	895:1:28324:28355	8550	5	True				
ANR	8626	AssignmentExpression	EG ( current_execute_data ) = NULL		8550	0		=			
ANR	8627	CallExpression	EG ( current_execute_data )		8550	0					
ANR	8628	Callee	EG		8550	0					
ANR	8629	Identifier	EG		8550	0					
ANR	8630	ArgumentList	current_execute_data		8550	1					
ANR	8631	Argument	current_execute_data		8550	0					
ANR	8632	Identifier	current_execute_data		8550	0					
ANR	8633	Identifier	NULL		8550	1					
ANR	8634	ExpressionStatement	"LONGJMP ( * EG ( bailout ) , FAILURE )"	896:1:28358:28388	8550	6	True				
ANR	8635	CallExpression	"LONGJMP ( * EG ( bailout ) , FAILURE )"		8550	0					
ANR	8636	Callee	LONGJMP		8550	0					
ANR	8637	Identifier	LONGJMP		8550	0					
ANR	8638	ArgumentList	* EG ( bailout )		8550	1					
ANR	8639	Argument	* EG ( bailout )		8550	0					
ANR	8640	UnaryOperationExpression	* EG ( bailout )		8550	0					
ANR	8641	UnaryOperator	*		8550	0					
ANR	8642	CallExpression	EG ( bailout )		8550	1					
ANR	8643	Callee	EG		8550	0					
ANR	8644	Identifier	EG		8550	0					
ANR	8645	ArgumentList	bailout		8550	1					
ANR	8646	Argument	bailout		8550	0					
ANR	8647	Identifier	bailout		8550	0					
ANR	8648	Argument	FAILURE		8550	1					
ANR	8649	Identifier	FAILURE		8550	0					
ANR	8650	ReturnType	ZEND_API void		8550	1					
ANR	8651	Identifier	_zend_bailout		8550	2					
ANR	8652	ParameterList	"char * filename , uint lineno"		8550	3					
ANR	8653	Parameter	char * filename	884:28:28026:28039	8550	0	True				
ANR	8654	ParameterType	char *		8550	0					
ANR	8655	Identifier	filename		8550	1					
ANR	8656	Parameter	uint lineno	884:44:28042:28052	8550	1	True				
ANR	8657	ParameterType	uint		8550	0					
ANR	8658	Identifier	lineno		8550	1					
ANR	8659	CFGEntryNode	ENTRY		8550		True				
ANR	8660	CFGExitNode	EXIT		8550		True				
ANR	8661	Symbol	EG		8550						
ANR	8662	Symbol	NULL		8550						
ANR	8663	Symbol	CG		8550						
ANR	8664	Symbol	in_execution		8550						
ANR	8665	Symbol	active_class_entry		8550						
ANR	8666	Symbol	current_execute_data		8550						
ANR	8667	Symbol	* EG		8550						
ANR	8668	Symbol	FAILURE		8550						
ANR	8669	Symbol	in_compilation		8550						
ANR	8670	Symbol	bailout		8550						
ANR	8671	Symbol	unclean_shutdown		8550						
ANR	8672	Symbol	filename		8550						
ANR	8673	Symbol	lineno		8550						
ANR	8674	Symbol	* EG ( bailout )		8550						
ANR	8675	Function	zend_append_version_info	901:0:28418:29156							
ANR	8676	FunctionDef	zend_append_version_info (const zend_extension * extension)		8675	0					
ANR	8677	CompoundStatement		902:0:28500:29156	8675	0					
ANR	8678	IdentifierDeclStatement	char * new_info ;	903:1:28503:28517	8675	0	True				
ANR	8679	IdentifierDecl	* new_info		8675	0					
ANR	8680	IdentifierDeclType	char *		8675	0					
ANR	8681	Identifier	new_info		8675	1					
ANR	8682	IdentifierDeclStatement	uint new_info_length ;	904:1:28520:28540	8675	1	True				
ANR	8683	IdentifierDecl	new_info_length		8675	0					
ANR	8684	IdentifierDeclType	uint		8675	0					
ANR	8685	Identifier	new_info_length		8675	1					
ANR	8686	ExpressionStatement	"new_info_length = sizeof ( ""    with  v, , by \\n"" ) + strlen ( extension -> name ) + strlen ( extension -> version ) + strlen ( extension -> copyright ) + strlen ( extension -> author )"	906:1:28544:28730	8675	2	True				
ANR	8687	AssignmentExpression	"new_info_length = sizeof ( ""    with  v, , by \\n"" ) + strlen ( extension -> name ) + strlen ( extension -> version ) + strlen ( extension -> copyright ) + strlen ( extension -> author )"		8675	0		=			
ANR	8688	Identifier	new_info_length		8675	0					
ANR	8689	AdditiveExpression	"sizeof ( ""    with  v, , by \\n"" ) + strlen ( extension -> name ) + strlen ( extension -> version ) + strlen ( extension -> copyright ) + strlen ( extension -> author )"		8675	1		+			
ANR	8690	SizeofExpression	"sizeof ( ""    with  v, , by \\n"" )"		8675	0					
ANR	8691	Sizeof	sizeof		8675	0					
ANR	8692	PrimaryExpression	"""    with  v, , by \\n"""		8675	1					
ANR	8693	AdditiveExpression	strlen ( extension -> name ) + strlen ( extension -> version ) + strlen ( extension -> copyright ) + strlen ( extension -> author )		8675	1		+			
ANR	8694	CallExpression	strlen ( extension -> name )		8675	0					
ANR	8695	Callee	strlen		8675	0					
ANR	8696	Identifier	strlen		8675	0					
ANR	8697	ArgumentList	extension -> name		8675	1					
ANR	8698	Argument	extension -> name		8675	0					
ANR	8699	PtrMemberAccess	extension -> name		8675	0					
ANR	8700	Identifier	extension		8675	0					
ANR	8701	Identifier	name		8675	1					
ANR	8702	AdditiveExpression	strlen ( extension -> version ) + strlen ( extension -> copyright ) + strlen ( extension -> author )		8675	1		+			
ANR	8703	CallExpression	strlen ( extension -> version )		8675	0					
ANR	8704	Callee	strlen		8675	0					
ANR	8705	Identifier	strlen		8675	0					
ANR	8706	ArgumentList	extension -> version		8675	1					
ANR	8707	Argument	extension -> version		8675	0					
ANR	8708	PtrMemberAccess	extension -> version		8675	0					
ANR	8709	Identifier	extension		8675	0					
ANR	8710	Identifier	version		8675	1					
ANR	8711	AdditiveExpression	strlen ( extension -> copyright ) + strlen ( extension -> author )		8675	1		+			
ANR	8712	CallExpression	strlen ( extension -> copyright )		8675	0					
ANR	8713	Callee	strlen		8675	0					
ANR	8714	Identifier	strlen		8675	0					
ANR	8715	ArgumentList	extension -> copyright		8675	1					
ANR	8716	Argument	extension -> copyright		8675	0					
ANR	8717	PtrMemberAccess	extension -> copyright		8675	0					
ANR	8718	Identifier	extension		8675	0					
ANR	8719	Identifier	copyright		8675	1					
ANR	8720	CallExpression	strlen ( extension -> author )		8675	1					
ANR	8721	Callee	strlen		8675	0					
ANR	8722	Identifier	strlen		8675	0					
ANR	8723	ArgumentList	extension -> author		8675	1					
ANR	8724	Argument	extension -> author		8675	0					
ANR	8725	PtrMemberAccess	extension -> author		8675	0					
ANR	8726	Identifier	extension		8675	0					
ANR	8727	Identifier	author		8675	1					
ANR	8728	ExpressionStatement	new_info = ( char * ) malloc ( new_info_length + 1 )	912:1:28734:28781	8675	3	True				
ANR	8729	AssignmentExpression	new_info = ( char * ) malloc ( new_info_length + 1 )		8675	0		=			
ANR	8730	Identifier	new_info		8675	0					
ANR	8731	CastExpression	( char * ) malloc ( new_info_length + 1 )		8675	1					
ANR	8732	CastTarget	char *		8675	0					
ANR	8733	CallExpression	malloc ( new_info_length + 1 )		8675	1					
ANR	8734	Callee	malloc		8675	0					
ANR	8735	Identifier	malloc		8675	0					
ANR	8736	ArgumentList	new_info_length + 1		8675	1					
ANR	8737	Argument	new_info_length + 1		8675	0					
ANR	8738	AdditiveExpression	new_info_length + 1		8675	0		+			
ANR	8739	Identifier	new_info_length		8675	0					
ANR	8740	PrimaryExpression	1		8675	1					
ANR	8741	ExpressionStatement	"snprintf ( new_info , new_info_length , ""    with %s v%s, %s, by %s\\n"" , extension -> name , extension -> version , extension -> copyright , extension -> author )"	914:1:28785:28930	8675	4	True				
ANR	8742	CallExpression	"snprintf ( new_info , new_info_length , ""    with %s v%s, %s, by %s\\n"" , extension -> name , extension -> version , extension -> copyright , extension -> author )"		8675	0					
ANR	8743	Callee	snprintf		8675	0					
ANR	8744	Identifier	snprintf		8675	0					
ANR	8745	ArgumentList	new_info		8675	1					
ANR	8746	Argument	new_info		8675	0					
ANR	8747	Identifier	new_info		8675	0					
ANR	8748	Argument	new_info_length		8675	1					
ANR	8749	Identifier	new_info_length		8675	0					
ANR	8750	Argument	"""    with %s v%s, %s, by %s\\n"""		8675	2					
ANR	8751	PrimaryExpression	"""    with %s v%s, %s, by %s\\n"""		8675	0					
ANR	8752	Argument	extension -> name		8675	3					
ANR	8753	PtrMemberAccess	extension -> name		8675	0					
ANR	8754	Identifier	extension		8675	0					
ANR	8755	Identifier	name		8675	1					
ANR	8756	Argument	extension -> version		8675	4					
ANR	8757	PtrMemberAccess	extension -> version		8675	0					
ANR	8758	Identifier	extension		8675	0					
ANR	8759	Identifier	version		8675	1					
ANR	8760	Argument	extension -> copyright		8675	5					
ANR	8761	PtrMemberAccess	extension -> copyright		8675	0					
ANR	8762	Identifier	extension		8675	0					
ANR	8763	Identifier	copyright		8675	1					
ANR	8764	Argument	extension -> author		8675	6					
ANR	8765	PtrMemberAccess	extension -> author		8675	0					
ANR	8766	Identifier	extension		8675	0					
ANR	8767	Identifier	author		8675	1					
ANR	8768	ExpressionStatement	"zend_version_info = ( char * ) realloc ( zend_version_info , zend_version_info_length + new_info_length + 1 )"	916:1:28934:29035	8675	5	True				
ANR	8769	AssignmentExpression	"zend_version_info = ( char * ) realloc ( zend_version_info , zend_version_info_length + new_info_length + 1 )"		8675	0		=			
ANR	8770	Identifier	zend_version_info		8675	0					
ANR	8771	CastExpression	"( char * ) realloc ( zend_version_info , zend_version_info_length + new_info_length + 1 )"		8675	1					
ANR	8772	CastTarget	char *		8675	0					
ANR	8773	CallExpression	"realloc ( zend_version_info , zend_version_info_length + new_info_length + 1 )"		8675	1					
ANR	8774	Callee	realloc		8675	0					
ANR	8775	Identifier	realloc		8675	0					
ANR	8776	ArgumentList	zend_version_info		8675	1					
ANR	8777	Argument	zend_version_info		8675	0					
ANR	8778	Identifier	zend_version_info		8675	0					
ANR	8779	Argument	zend_version_info_length + new_info_length + 1		8675	1					
ANR	8780	AdditiveExpression	zend_version_info_length + new_info_length + 1		8675	0		+			
ANR	8781	Identifier	zend_version_info_length		8675	0					
ANR	8782	AdditiveExpression	new_info_length + 1		8675	1		+			
ANR	8783	Identifier	new_info_length		8675	0					
ANR	8784	PrimaryExpression	1		8675	1					
ANR	8785	ExpressionStatement	"strncat ( zend_version_info , new_info , new_info_length )"	917:1:29038:29091	8675	6	True				
ANR	8786	CallExpression	"strncat ( zend_version_info , new_info , new_info_length )"		8675	0					
ANR	8787	Callee	strncat		8675	0					
ANR	8788	Identifier	strncat		8675	0					
ANR	8789	ArgumentList	zend_version_info		8675	1					
ANR	8790	Argument	zend_version_info		8675	0					
ANR	8791	Identifier	zend_version_info		8675	0					
ANR	8792	Argument	new_info		8675	1					
ANR	8793	Identifier	new_info		8675	0					
ANR	8794	Argument	new_info_length		8675	2					
ANR	8795	Identifier	new_info_length		8675	0					
ANR	8796	ExpressionStatement	zend_version_info_length += new_info_length	918:1:29094:29137	8675	7	True				
ANR	8797	AssignmentExpression	zend_version_info_length += new_info_length		8675	0		+=			
ANR	8798	Identifier	zend_version_info_length		8675	0					
ANR	8799	Identifier	new_info_length		8675	1					
ANR	8800	ExpressionStatement	free ( new_info )	919:1:29140:29154	8675	8	True				
ANR	8801	CallExpression	free ( new_info )		8675	0					
ANR	8802	Callee	free		8675	0					
ANR	8803	Identifier	free		8675	0					
ANR	8804	ArgumentList	new_info		8675	1					
ANR	8805	Argument	new_info		8675	0					
ANR	8806	Identifier	new_info		8675	0					
ANR	8807	ReturnType	ZEND_API void		8675	1					
ANR	8808	Identifier	zend_append_version_info		8675	2					
ANR	8809	ParameterList	const zend_extension * extension		8675	3					
ANR	8810	Parameter	const zend_extension * extension	901:39:28457:28487	8675	0	True				
ANR	8811	ParameterType	const zend_extension *		8675	0					
ANR	8812	Identifier	extension		8675	1					
ANR	8813	CFGEntryNode	ENTRY		8675		True				
ANR	8814	CFGExitNode	EXIT		8675		True				
ANR	8815	Symbol	extension -> name		8675						
ANR	8816	Symbol	malloc		8675						
ANR	8817	Symbol	extension		8675						
ANR	8818	Symbol	new_info_length		8675						
ANR	8819	Symbol	zend_version_info_length		8675						
ANR	8820	Symbol	realloc		8675						
ANR	8821	Symbol	extension -> copyright		8675						
ANR	8822	Symbol	strlen		8675						
ANR	8823	Symbol	extension -> version		8675						
ANR	8824	Symbol	* extension		8675						
ANR	8825	Symbol	zend_version_info		8675						
ANR	8826	Symbol	extension -> author		8675						
ANR	8827	Symbol	new_info		8675						
ANR	8828	Function	get_zend_version	923:0:29169:29246							
ANR	8829	FunctionDef	get_zend_version ()		8828	0					
ANR	8830	CompoundStatement		924:0:29217:29246	8828	0					
ANR	8831	ReturnStatement	return zend_version_info ;	925:1:29220:29244	8828	0	True				
ANR	8832	Identifier	zend_version_info		8828	0					
ANR	8833	ReturnType	ZEND_API char *		8828	1					
ANR	8834	Identifier	get_zend_version		8828	2					
ANR	8835	ParameterList			8828	3					
ANR	8836	CFGEntryNode	ENTRY		8828		True				
ANR	8837	CFGExitNode	EXIT		8828		True				
ANR	8838	Symbol	zend_version_info		8828						
ANR	8839	Function	zend_get_configuration_directive	1004:0:31305:31563							
ANR	8840	FunctionDef	"zend_get_configuration_directive (const char * name , uint name_length , zval * contents)"		8839	0					
ANR	8841	CompoundStatement		1005:0:31413:31563	8839	0					
ANR	8842	IfStatement	if ( zend_get_configuration_directive_p )		8839	0					
ANR	8843	Condition	zend_get_configuration_directive_p	1006:5:31420:31453	8839	0	True				
ANR	8844	Identifier	zend_get_configuration_directive_p		8839	0					
ANR	8845	CompoundStatement		2:41:42:42	8839	1					
ANR	8846	ReturnStatement	"return zend_get_configuration_directive_p ( name , name_length , contents ) ;"	1007:2:31460:31530	8839	0	True				
ANR	8847	CallExpression	"zend_get_configuration_directive_p ( name , name_length , contents )"		8839	0					
ANR	8848	Callee	zend_get_configuration_directive_p		8839	0					
ANR	8849	Identifier	zend_get_configuration_directive_p		8839	0					
ANR	8850	ArgumentList	name		8839	1					
ANR	8851	Argument	name		8839	0					
ANR	8852	Identifier	name		8839	0					
ANR	8853	Argument	name_length		8839	1					
ANR	8854	Identifier	name_length		8839	0					
ANR	8855	Argument	contents		8839	2					
ANR	8856	Identifier	contents		8839	0					
ANR	8857	ElseStatement	else		8839	0					
ANR	8858	CompoundStatement		4:8:126:126	8839	0					
ANR	8859	ReturnStatement	return FAILURE ;	1009:2:31544:31558	8839	0	True				
ANR	8860	Identifier	FAILURE		8839	0					
ANR	8861	ReturnType	ZEND_API int		8839	1					
ANR	8862	Identifier	zend_get_configuration_directive		8839	2					
ANR	8863	ParameterList	"const char * name , uint name_length , zval * contents"		8839	3					
ANR	8864	Parameter	const char * name	1004:46:31351:31366	8839	0	True				
ANR	8865	ParameterType	const char *		8839	0					
ANR	8866	Identifier	name		8839	1					
ANR	8867	Parameter	uint name_length	1004:64:31369:31384	8839	1	True				
ANR	8868	ParameterType	uint		8839	0					
ANR	8869	Identifier	name_length		8839	1					
ANR	8870	Parameter	zval * contents	1004:82:31387:31400	8839	2	True				
ANR	8871	ParameterType	zval *		8839	0					
ANR	8872	Identifier	contents		8839	1					
ANR	8873	CFGEntryNode	ENTRY		8839		True				
ANR	8874	CFGExitNode	EXIT		8839		True				
ANR	8875	Symbol	contents		8839						
ANR	8876	Symbol	zend_get_configuration_directive_p		8839						
ANR	8877	Symbol	name		8839						
ANR	8878	Symbol	name_length		8839						
ANR	8879	Symbol	FAILURE		8839						
ANR	8880	Function	zend_error	1031:0:31979:38939							
ANR	8881	FunctionDef	"zend_error (int type , const char * format)"		8880	0					
ANR	8882	CompoundStatement		1032:0:32049:38939	8880	0					
ANR	8883	IdentifierDeclStatement	va_list args ;	1033:1:32052:32064	8880	0	True				
ANR	8884	IdentifierDecl	args		8880	0					
ANR	8885	IdentifierDeclType	va_list		8880	0					
ANR	8886	Identifier	args		8880	1					
ANR	8887	IdentifierDeclStatement	va_list usr_copy ;	1034:1:32067:32083	8880	1	True				
ANR	8888	IdentifierDecl	usr_copy		8880	0					
ANR	8889	IdentifierDeclType	va_list		8880	0					
ANR	8890	Identifier	usr_copy		8880	1					
ANR	8891	IdentifierDeclStatement	zval * * * params ;	1035:1:32086:32100	8880	2	True				
ANR	8892	IdentifierDecl	* * * params		8880	0					
ANR	8893	IdentifierDeclType	zval * * *		8880	0					
ANR	8894	Identifier	params		8880	1					
ANR	8895	IdentifierDeclStatement	zval * retval ;	1036:1:32103:32115	8880	3	True				
ANR	8896	IdentifierDecl	* retval		8880	0					
ANR	8897	IdentifierDeclType	zval *		8880	0					
ANR	8898	Identifier	retval		8880	1					
ANR	8899	IdentifierDeclStatement	"zval * z_error_type , * z_error_message , * z_error_filename , * z_error_lineno , * z_context ;"	1037:1:32118:32202	8880	4	True				
ANR	8900	IdentifierDecl	* z_error_type		8880	0					
ANR	8901	IdentifierDeclType	zval *		8880	0					
ANR	8902	Identifier	z_error_type		8880	1					
ANR	8903	IdentifierDecl	* z_error_message		8880	1					
ANR	8904	IdentifierDeclType	zval *		8880	0					
ANR	8905	Identifier	z_error_message		8880	1					
ANR	8906	IdentifierDecl	* z_error_filename		8880	2					
ANR	8907	IdentifierDeclType	zval *		8880	0					
ANR	8908	Identifier	z_error_filename		8880	1					
ANR	8909	IdentifierDecl	* z_error_lineno		8880	3					
ANR	8910	IdentifierDeclType	zval *		8880	0					
ANR	8911	Identifier	z_error_lineno		8880	1					
ANR	8912	IdentifierDecl	* z_context		8880	4					
ANR	8913	IdentifierDeclType	zval *		8880	0					
ANR	8914	Identifier	z_context		8880	1					
ANR	8915	IdentifierDeclStatement	const char * error_filename ;	1038:1:32205:32231	8880	5	True				
ANR	8916	IdentifierDecl	* error_filename		8880	0					
ANR	8917	IdentifierDeclType	const char *		8880	0					
ANR	8918	Identifier	error_filename		8880	1					
ANR	8919	IdentifierDeclStatement	uint error_lineno ;	1039:1:32234:32251	8880	6	True				
ANR	8920	IdentifierDecl	error_lineno		8880	0					
ANR	8921	IdentifierDeclType	uint		8880	0					
ANR	8922	Identifier	error_lineno		8880	1					
ANR	8923	IdentifierDeclStatement	zval * orig_user_error_handler ;	1040:1:32254:32283	8880	7	True				
ANR	8924	IdentifierDecl	* orig_user_error_handler		8880	0					
ANR	8925	IdentifierDeclType	zval *		8880	0					
ANR	8926	Identifier	orig_user_error_handler		8880	1					
ANR	8927	IdentifierDeclStatement	zend_bool in_compilation ;	1041:1:32286:32310	8880	8	True				
ANR	8928	IdentifierDecl	in_compilation		8880	0					
ANR	8929	IdentifierDeclType	zend_bool		8880	0					
ANR	8930	Identifier	in_compilation		8880	1					
ANR	8931	IdentifierDeclStatement	zend_class_entry * saved_class_entry ;	1042:1:32313:32348	8880	9	True				
ANR	8932	IdentifierDecl	* saved_class_entry		8880	0					
ANR	8933	IdentifierDeclType	zend_class_entry *		8880	0					
ANR	8934	Identifier	saved_class_entry		8880	1					
ANR	8935	IdentifierDeclStatement	zend_stack bp_stack ;	1043:1:32351:32370	8880	10	True				
ANR	8936	IdentifierDecl	bp_stack		8880	0					
ANR	8937	IdentifierDeclType	zend_stack		8880	0					
ANR	8938	Identifier	bp_stack		8880	1					
ANR	8939	IdentifierDeclStatement	zend_stack function_call_stack ;	1044:1:32373:32403	8880	11	True				
ANR	8940	IdentifierDecl	function_call_stack		8880	0					
ANR	8941	IdentifierDeclType	zend_stack		8880	0					
ANR	8942	Identifier	function_call_stack		8880	1					
ANR	8943	IdentifierDeclStatement	zend_stack switch_cond_stack ;	1045:1:32406:32434	8880	12	True				
ANR	8944	IdentifierDecl	switch_cond_stack		8880	0					
ANR	8945	IdentifierDeclType	zend_stack		8880	0					
ANR	8946	Identifier	switch_cond_stack		8880	1					
ANR	8947	IdentifierDeclStatement	zend_stack foreach_copy_stack ;	1046:1:32437:32466	8880	13	True				
ANR	8948	IdentifierDecl	foreach_copy_stack		8880	0					
ANR	8949	IdentifierDeclType	zend_stack		8880	0					
ANR	8950	Identifier	foreach_copy_stack		8880	1					
ANR	8951	IdentifierDeclStatement	zend_stack object_stack ;	1047:1:32469:32492	8880	14	True				
ANR	8952	IdentifierDecl	object_stack		8880	0					
ANR	8953	IdentifierDeclType	zend_stack		8880	0					
ANR	8954	Identifier	object_stack		8880	1					
ANR	8955	IdentifierDeclStatement	zend_stack declare_stack ;	1048:1:32495:32519	8880	15	True				
ANR	8956	IdentifierDecl	declare_stack		8880	0					
ANR	8957	IdentifierDeclType	zend_stack		8880	0					
ANR	8958	Identifier	declare_stack		8880	1					
ANR	8959	IdentifierDeclStatement	zend_stack list_stack ;	1049:1:32522:32543	8880	16	True				
ANR	8960	IdentifierDecl	list_stack		8880	0					
ANR	8961	IdentifierDeclType	zend_stack		8880	0					
ANR	8962	Identifier	list_stack		8880	1					
ANR	8963	IdentifierDeclStatement	zend_stack context_stack ;	1050:1:32546:32570	8880	17	True				
ANR	8964	IdentifierDecl	context_stack		8880	0					
ANR	8965	IdentifierDeclType	zend_stack		8880	0					
ANR	8966	Identifier	context_stack		8880	1					
ANR	8967	ExpressionStatement	TSRMLS_FETCH ( )	1051:1:32573:32587	8880	18	True				
ANR	8968	CallExpression	TSRMLS_FETCH ( )		8880	0					
ANR	8969	Callee	TSRMLS_FETCH		8880	0					
ANR	8970	Identifier	TSRMLS_FETCH		8880	0					
ANR	8971	ArgumentList			8880	1					
ANR	8972	IfStatement	if ( EG ( exception ) )		8880	19					
ANR	8973	Condition	EG ( exception )	1054:5:32658:32670	8880	0	True				
ANR	8974	CallExpression	EG ( exception )		8880	0					
ANR	8975	Callee	EG		8880	0					
ANR	8976	Identifier	EG		8880	0					
ANR	8977	ArgumentList	exception		8880	1					
ANR	8978	Argument	exception		8880	0					
ANR	8979	Identifier	exception		8880	0					
ANR	8980	CompoundStatement		23:20:623:623	8880	1					
ANR	8981	SwitchStatement	switch ( type )		8880	0					
ANR	8982	Condition	type	1055:10:32685:32688	8880	0	True				
ANR	8983	Identifier	type		8880	0					
ANR	8984	CompoundStatement		24:16:641:641	8880	1					
ANR	8985	Label	case E_CORE_ERROR :	1056:3:32696:32713	8880	0	True				
ANR	8986	Identifier	E_CORE_ERROR		8880	0					
ANR	8987	Label	case E_ERROR :	1057:3:32718:32730	8880	1	True				
ANR	8988	Identifier	E_ERROR		8880	0					
ANR	8989	Label	case E_RECOVERABLE_ERROR :	1058:3:32735:32759	8880	2	True				
ANR	8990	Identifier	E_RECOVERABLE_ERROR		8880	0					
ANR	8991	Label	case E_PARSE :	1059:3:32764:32776	8880	3	True				
ANR	8992	Identifier	E_PARSE		8880	0					
ANR	8993	Label	case E_COMPILE_ERROR :	1060:3:32781:32801	8880	4	True				
ANR	8994	Identifier	E_COMPILE_ERROR		8880	0					
ANR	8995	Label	case E_USER_ERROR :	1061:3:32806:32823	8880	5	True				
ANR	8996	Identifier	E_USER_ERROR		8880	0					
ANR	8997	IfStatement	if ( zend_is_executing ( TSRMLS_C ) )		8880	6					
ANR	8998	Condition	zend_is_executing ( TSRMLS_C )	1062:8:32833:32859	8880	0	True				
ANR	8999	CallExpression	zend_is_executing ( TSRMLS_C )		8880	0					
ANR	9000	Callee	zend_is_executing		8880	0					
ANR	9001	Identifier	zend_is_executing		8880	0					
ANR	9002	ArgumentList	TSRMLS_C		8880	1					
ANR	9003	Argument	TSRMLS_C		8880	0					
ANR	9004	Identifier	TSRMLS_C		8880	0					
ANR	9005	CompoundStatement		31:37:812:812	8880	1					
ANR	9006	ExpressionStatement	error_lineno = zend_get_executed_lineno ( TSRMLS_C )	1063:5:32869:32918	8880	0	True				
ANR	9007	AssignmentExpression	error_lineno = zend_get_executed_lineno ( TSRMLS_C )		8880	0		=			
ANR	9008	Identifier	error_lineno		8880	0					
ANR	9009	CallExpression	zend_get_executed_lineno ( TSRMLS_C )		8880	1					
ANR	9010	Callee	zend_get_executed_lineno		8880	0					
ANR	9011	Identifier	zend_get_executed_lineno		8880	0					
ANR	9012	ArgumentList	TSRMLS_C		8880	1					
ANR	9013	Argument	TSRMLS_C		8880	0					
ANR	9014	Identifier	TSRMLS_C		8880	0					
ANR	9015	Statement	zend_exception_error	1065:4:32930:32949	8880	7	True				
ANR	9016	Statement	(	1065:24:32950:32950	8880	8	True				
ANR	9017	Statement	EG	1065:25:32951:32952	8880	9	True				
ANR	9018	Statement	(	1065:27:32953:32953	8880	10	True				
ANR	9019	Statement	exception	1065:28:32954:32962	8880	11	True				
ANR	9020	Statement	)	1065:37:32963:32963	8880	12	True				
ANR	9021	Statement	","	1065:38:32964:32964	8880	13	True				
ANR	9022	Statement	E_WARNING	1065:40:32966:32974	8880	14	True				
ANR	9023	Statement	TSRMLS_CC	1065:50:32976:32984	8880	15	True				
ANR	9024	Statement	)	1065:59:32985:32985	8880	16	True				
ANR	9025	ExpressionStatement		1065:60:32986:32986	8880	17	True				
ANR	9026	ExpressionStatement	EG ( exception ) = NULL	1066:4:32992:33012	8880	18	True				
ANR	9027	AssignmentExpression	EG ( exception ) = NULL		8880	0		=			
ANR	9028	CallExpression	EG ( exception )		8880	0					
ANR	9029	Callee	EG		8880	0					
ANR	9030	Identifier	EG		8880	0					
ANR	9031	ArgumentList	exception		8880	1					
ANR	9032	Argument	exception		8880	0					
ANR	9033	Identifier	exception		8880	0					
ANR	9034	Identifier	NULL		8880	1					
ANR	9035	IfStatement	if ( zend_is_executing ( TSRMLS_C ) && EG ( opline_ptr ) )		8880	19					
ANR	9036	Condition	zend_is_executing ( TSRMLS_C ) && EG ( opline_ptr )	1067:8:33022:33066	8880	0	True				
ANR	9037	AndExpression	zend_is_executing ( TSRMLS_C ) && EG ( opline_ptr )		8880	0		&&			
ANR	9038	CallExpression	zend_is_executing ( TSRMLS_C )		8880	0					
ANR	9039	Callee	zend_is_executing		8880	0					
ANR	9040	Identifier	zend_is_executing		8880	0					
ANR	9041	ArgumentList	TSRMLS_C		8880	1					
ANR	9042	Argument	TSRMLS_C		8880	0					
ANR	9043	Identifier	TSRMLS_C		8880	0					
ANR	9044	CallExpression	EG ( opline_ptr )		8880	1					
ANR	9045	Callee	EG		8880	0					
ANR	9046	Identifier	EG		8880	0					
ANR	9047	ArgumentList	opline_ptr		8880	1					
ANR	9048	Argument	opline_ptr		8880	0					
ANR	9049	Identifier	opline_ptr		8880	0					
ANR	9050	CompoundStatement		36:55:1019:1019	8880	1					
ANR	9051	ExpressionStatement	active_opline -> lineno = error_lineno	1068:5:33076:33112	8880	0	True				
ANR	9052	AssignmentExpression	active_opline -> lineno = error_lineno		8880	0		=			
ANR	9053	PtrMemberAccess	active_opline -> lineno		8880	0					
ANR	9054	Identifier	active_opline		8880	0					
ANR	9055	Identifier	lineno		8880	1					
ANR	9056	Identifier	error_lineno		8880	1					
ANR	9057	BreakStatement	break ;	1070:4:33124:33129	8880	20	True				
ANR	9058	Label	default :	1071:3:33134:33141	8880	21	True				
ANR	9059	Identifier	default		8880	0					
ANR	9060	BreakStatement	break ;	1072:4:33147:33152	8880	22	True				
ANR	9061	SwitchStatement	switch ( type )		8880	20					
ANR	9062	Condition	type	1077:9:33214:33217	8880	0	True				
ANR	9063	Identifier	type		8880	0					
ANR	9064	CompoundStatement		46:15:1170:1170	8880	1					
ANR	9065	Label	case E_CORE_ERROR :	1078:2:33224:33241	8880	0	True				
ANR	9066	Identifier	E_CORE_ERROR		8880	0					
ANR	9067	Label	case E_CORE_WARNING :	1079:2:33245:33264	8880	1	True				
ANR	9068	Identifier	E_CORE_WARNING		8880	0					
ANR	9069	ExpressionStatement	error_filename = NULL	1080:3:33269:33290	8880	2	True				
ANR	9070	AssignmentExpression	error_filename = NULL		8880	0		=			
ANR	9071	Identifier	error_filename		8880	0					
ANR	9072	Identifier	NULL		8880	1					
ANR	9073	ExpressionStatement	error_lineno = 0	1081:3:33295:33311	8880	3	True				
ANR	9074	AssignmentExpression	error_lineno = 0		8880	0		=			
ANR	9075	Identifier	error_lineno		8880	0					
ANR	9076	PrimaryExpression	0		8880	1					
ANR	9077	BreakStatement	break ;	1082:3:33316:33321	8880	4	True				
ANR	9078	Label	case E_PARSE :	1083:2:33325:33337	8880	5	True				
ANR	9079	Identifier	E_PARSE		8880	0					
ANR	9080	Label	case E_COMPILE_ERROR :	1084:2:33341:33361	8880	6	True				
ANR	9081	Identifier	E_COMPILE_ERROR		8880	0					
ANR	9082	Label	case E_COMPILE_WARNING :	1085:2:33365:33387	8880	7	True				
ANR	9083	Identifier	E_COMPILE_WARNING		8880	0					
ANR	9084	Label	case E_ERROR :	1086:2:33391:33403	8880	8	True				
ANR	9085	Identifier	E_ERROR		8880	0					
ANR	9086	Label	case E_NOTICE :	1087:2:33407:33420	8880	9	True				
ANR	9087	Identifier	E_NOTICE		8880	0					
ANR	9088	Label	case E_STRICT :	1088:2:33424:33437	8880	10	True				
ANR	9089	Identifier	E_STRICT		8880	0					
ANR	9090	Label	case E_DEPRECATED :	1089:2:33441:33458	8880	11	True				
ANR	9091	Identifier	E_DEPRECATED		8880	0					
ANR	9092	Label	case E_WARNING :	1090:2:33462:33476	8880	12	True				
ANR	9093	Identifier	E_WARNING		8880	0					
ANR	9094	Label	case E_USER_ERROR :	1091:2:33480:33497	8880	13	True				
ANR	9095	Identifier	E_USER_ERROR		8880	0					
ANR	9096	Label	case E_USER_WARNING :	1092:2:33501:33520	8880	14	True				
ANR	9097	Identifier	E_USER_WARNING		8880	0					
ANR	9098	Label	case E_USER_NOTICE :	1093:2:33524:33542	8880	15	True				
ANR	9099	Identifier	E_USER_NOTICE		8880	0					
ANR	9100	Label	case E_USER_DEPRECATED :	1094:2:33546:33568	8880	16	True				
ANR	9101	Identifier	E_USER_DEPRECATED		8880	0					
ANR	9102	Label	case E_RECOVERABLE_ERROR :	1095:2:33572:33596	8880	17	True				
ANR	9103	Identifier	E_RECOVERABLE_ERROR		8880	0					
ANR	9104	IfStatement	if ( zend_is_compiling ( TSRMLS_C ) )		8880	18					
ANR	9105	Condition	zend_is_compiling ( TSRMLS_C )	1096:7:33605:33631	8880	0	True				
ANR	9106	CallExpression	zend_is_compiling ( TSRMLS_C )		8880	0					
ANR	9107	Callee	zend_is_compiling		8880	0					
ANR	9108	Identifier	zend_is_compiling		8880	0					
ANR	9109	ArgumentList	TSRMLS_C		8880	1					
ANR	9110	Argument	TSRMLS_C		8880	0					
ANR	9111	Identifier	TSRMLS_C		8880	0					
ANR	9112	CompoundStatement		65:36:1584:1584	8880	1					
ANR	9113	ExpressionStatement	error_filename = zend_get_compiled_filename ( TSRMLS_C )	1097:4:33640:33693	8880	0	True				
ANR	9114	AssignmentExpression	error_filename = zend_get_compiled_filename ( TSRMLS_C )		8880	0		=			
ANR	9115	Identifier	error_filename		8880	0					
ANR	9116	CallExpression	zend_get_compiled_filename ( TSRMLS_C )		8880	1					
ANR	9117	Callee	zend_get_compiled_filename		8880	0					
ANR	9118	Identifier	zend_get_compiled_filename		8880	0					
ANR	9119	ArgumentList	TSRMLS_C		8880	1					
ANR	9120	Argument	TSRMLS_C		8880	0					
ANR	9121	Identifier	TSRMLS_C		8880	0					
ANR	9122	ExpressionStatement	error_lineno = zend_get_compiled_lineno ( TSRMLS_C )	1098:4:33699:33748	8880	1	True				
ANR	9123	AssignmentExpression	error_lineno = zend_get_compiled_lineno ( TSRMLS_C )		8880	0		=			
ANR	9124	Identifier	error_lineno		8880	0					
ANR	9125	CallExpression	zend_get_compiled_lineno ( TSRMLS_C )		8880	1					
ANR	9126	Callee	zend_get_compiled_lineno		8880	0					
ANR	9127	Identifier	zend_get_compiled_lineno		8880	0					
ANR	9128	ArgumentList	TSRMLS_C		8880	1					
ANR	9129	Argument	TSRMLS_C		8880	0					
ANR	9130	Identifier	TSRMLS_C		8880	0					
ANR	9131	ElseStatement	else		8880	0					
ANR	9132	IfStatement	if ( zend_is_executing ( TSRMLS_C ) )		8880	0					
ANR	9133	Condition	zend_is_executing ( TSRMLS_C )	1099:14:33764:33790	8880	0	True				
ANR	9134	CallExpression	zend_is_executing ( TSRMLS_C )		8880	0					
ANR	9135	Callee	zend_is_executing		8880	0					
ANR	9136	Identifier	zend_is_executing		8880	0					
ANR	9137	ArgumentList	TSRMLS_C		8880	1					
ANR	9138	Argument	TSRMLS_C		8880	0					
ANR	9139	Identifier	TSRMLS_C		8880	0					
ANR	9140	CompoundStatement		68:43:1743:1743	8880	1					
ANR	9141	ExpressionStatement	error_filename = zend_get_executed_filename ( TSRMLS_C )	1100:4:33799:33852	8880	0	True				
ANR	9142	AssignmentExpression	error_filename = zend_get_executed_filename ( TSRMLS_C )		8880	0		=			
ANR	9143	Identifier	error_filename		8880	0					
ANR	9144	CallExpression	zend_get_executed_filename ( TSRMLS_C )		8880	1					
ANR	9145	Callee	zend_get_executed_filename		8880	0					
ANR	9146	Identifier	zend_get_executed_filename		8880	0					
ANR	9147	ArgumentList	TSRMLS_C		8880	1					
ANR	9148	Argument	TSRMLS_C		8880	0					
ANR	9149	Identifier	TSRMLS_C		8880	0					
ANR	9150	ExpressionStatement	error_lineno = zend_get_executed_lineno ( TSRMLS_C )	1101:4:33858:33907	8880	1	True				
ANR	9151	AssignmentExpression	error_lineno = zend_get_executed_lineno ( TSRMLS_C )		8880	0		=			
ANR	9152	Identifier	error_lineno		8880	0					
ANR	9153	CallExpression	zend_get_executed_lineno ( TSRMLS_C )		8880	1					
ANR	9154	Callee	zend_get_executed_lineno		8880	0					
ANR	9155	Identifier	zend_get_executed_lineno		8880	0					
ANR	9156	ArgumentList	TSRMLS_C		8880	1					
ANR	9157	Argument	TSRMLS_C		8880	0					
ANR	9158	Identifier	TSRMLS_C		8880	0					
ANR	9159	ElseStatement	else		8880	0					
ANR	9160	CompoundStatement		71:10:1869:1869	8880	0					
ANR	9161	ExpressionStatement	error_filename = NULL	1103:4:33925:33946	8880	0	True				
ANR	9162	AssignmentExpression	error_filename = NULL		8880	0		=			
ANR	9163	Identifier	error_filename		8880	0					
ANR	9164	Identifier	NULL		8880	1					
ANR	9165	ExpressionStatement	error_lineno = 0	1104:4:33952:33968	8880	1	True				
ANR	9166	AssignmentExpression	error_lineno = 0		8880	0		=			
ANR	9167	Identifier	error_lineno		8880	0					
ANR	9168	PrimaryExpression	0		8880	1					
ANR	9169	BreakStatement	break ;	1106:3:33978:33983	8880	19	True				
ANR	9170	Label	default :	1107:2:33987:33994	8880	20	True				
ANR	9171	Identifier	default		8880	0					
ANR	9172	ExpressionStatement	error_filename = NULL	1108:3:33999:34020	8880	21	True				
ANR	9173	AssignmentExpression	error_filename = NULL		8880	0		=			
ANR	9174	Identifier	error_filename		8880	0					
ANR	9175	Identifier	NULL		8880	1					
ANR	9176	ExpressionStatement	error_lineno = 0	1109:3:34025:34041	8880	22	True				
ANR	9177	AssignmentExpression	error_lineno = 0		8880	0		=			
ANR	9178	Identifier	error_lineno		8880	0					
ANR	9179	PrimaryExpression	0		8880	1					
ANR	9180	BreakStatement	break ;	1110:3:34046:34051	8880	23	True				
ANR	9181	IfStatement	if ( ! error_filename )		8880	21					
ANR	9182	Condition	! error_filename	1112:5:34061:34075	8880	0	True				
ANR	9183	UnaryOperationExpression	! error_filename		8880	0					
ANR	9184	UnaryOperator	!		8880	0					
ANR	9185	Identifier	error_filename		8880	1					
ANR	9186	CompoundStatement		81:22:2028:2028	8880	1					
ANR	9187	ExpressionStatement	"error_filename = ""Unknown"""	1113:2:34082:34108	8880	0	True				
ANR	9188	AssignmentExpression	"error_filename = ""Unknown"""		8880	0		=			
ANR	9189	Identifier	error_filename		8880	0					
ANR	9190	PrimaryExpression	"""Unknown"""		8880	1					
ANR	9191	IfStatement	if ( DTRACE_ERROR_ENABLED ( ) )		8880	22					
ANR	9192	Condition	DTRACE_ERROR_ENABLED ( )	1117:4:34137:34158	8880	0	True				
ANR	9193	CallExpression	DTRACE_ERROR_ENABLED ( )		8880	0					
ANR	9194	Callee	DTRACE_ERROR_ENABLED		8880	0					
ANR	9195	Identifier	DTRACE_ERROR_ENABLED		8880	0					
ANR	9196	ArgumentList			8880	1					
ANR	9197	CompoundStatement		87:2:2115:2140	8880	1					
ANR	9198	IdentifierDeclStatement	char * dtrace_error_buffer ;	1118:2:34165:34190	8880	0	True				
ANR	9199	IdentifierDecl	* dtrace_error_buffer		8880	0					
ANR	9200	IdentifierDeclType	char *		8880	0					
ANR	9201	Identifier	dtrace_error_buffer		8880	1					
ANR	9202	ExpressionStatement	"va_start ( args , format )"	1119:2:34194:34216	8880	1	True				
ANR	9203	CallExpression	"va_start ( args , format )"		8880	0					
ANR	9204	Callee	va_start		8880	0					
ANR	9205	Identifier	va_start		8880	0					
ANR	9206	ArgumentList	args		8880	1					
ANR	9207	Argument	args		8880	0					
ANR	9208	Identifier	args		8880	0					
ANR	9209	Argument	format		8880	1					
ANR	9210	Identifier	format		8880	0					
ANR	9211	ExpressionStatement	"zend_vspprintf ( & dtrace_error_buffer , 0 , format , args )"	1120:2:34220:34273	8880	2	True				
ANR	9212	CallExpression	"zend_vspprintf ( & dtrace_error_buffer , 0 , format , args )"		8880	0					
ANR	9213	Callee	zend_vspprintf		8880	0					
ANR	9214	Identifier	zend_vspprintf		8880	0					
ANR	9215	ArgumentList	& dtrace_error_buffer		8880	1					
ANR	9216	Argument	& dtrace_error_buffer		8880	0					
ANR	9217	UnaryOperationExpression	& dtrace_error_buffer		8880	0					
ANR	9218	UnaryOperator	&		8880	0					
ANR	9219	Identifier	dtrace_error_buffer		8880	1					
ANR	9220	Argument	0		8880	1					
ANR	9221	PrimaryExpression	0		8880	0					
ANR	9222	Argument	format		8880	2					
ANR	9223	Identifier	format		8880	0					
ANR	9224	Argument	args		8880	3					
ANR	9225	Identifier	args		8880	0					
ANR	9226	ExpressionStatement	"DTRACE_ERROR ( dtrace_error_buffer , ( char * ) error_filename , error_lineno )"	1121:2:34277:34348	8880	3	True				
ANR	9227	CallExpression	"DTRACE_ERROR ( dtrace_error_buffer , ( char * ) error_filename , error_lineno )"		8880	0					
ANR	9228	Callee	DTRACE_ERROR		8880	0					
ANR	9229	Identifier	DTRACE_ERROR		8880	0					
ANR	9230	ArgumentList	dtrace_error_buffer		8880	1					
ANR	9231	Argument	dtrace_error_buffer		8880	0					
ANR	9232	Identifier	dtrace_error_buffer		8880	0					
ANR	9233	Argument	( char * ) error_filename		8880	1					
ANR	9234	CastExpression	( char * ) error_filename		8880	0					
ANR	9235	CastTarget	char *		8880	0					
ANR	9236	Identifier	error_filename		8880	1					
ANR	9237	Argument	error_lineno		8880	2					
ANR	9238	Identifier	error_lineno		8880	0					
ANR	9239	ExpressionStatement	efree ( dtrace_error_buffer )	1122:2:34352:34378	8880	4	True				
ANR	9240	CallExpression	efree ( dtrace_error_buffer )		8880	0					
ANR	9241	Callee	efree		8880	0					
ANR	9242	Identifier	efree		8880	0					
ANR	9243	ArgumentList	dtrace_error_buffer		8880	1					
ANR	9244	Argument	dtrace_error_buffer		8880	0					
ANR	9245	Identifier	dtrace_error_buffer		8880	0					
ANR	9246	ExpressionStatement	va_end ( args )	1123:2:34382:34394	8880	5	True				
ANR	9247	CallExpression	va_end ( args )		8880	0					
ANR	9248	Callee	va_end		8880	0					
ANR	9249	Identifier	va_end		8880	0					
ANR	9250	ArgumentList	args		8880	1					
ANR	9251	Argument	args		8880	0					
ANR	9252	Identifier	args		8880	0					
ANR	9253	ElseStatement	else		8880	0					
ANR	9254	SwitchStatement	switch ( type )		8880	0					
ANR	9255	Condition	type	1134:16:34710:34713	8880	0	True				
ANR	9256	Identifier	type		8880	0					
ANR	9257	CompoundStatement		103:22:2666:2666	8880	1					
ANR	9258	Label	case E_ERROR :	1135:2:34720:34732	8880	0	True				
ANR	9259	Identifier	E_ERROR		8880	0					
ANR	9260	Label	case E_PARSE :	1136:2:34736:34748	8880	1	True				
ANR	9261	Identifier	E_PARSE		8880	0					
ANR	9262	Label	case E_CORE_ERROR :	1137:2:34752:34769	8880	2	True				
ANR	9263	Identifier	E_CORE_ERROR		8880	0					
ANR	9264	Label	case E_CORE_WARNING :	1138:2:34773:34792	8880	3	True				
ANR	9265	Identifier	E_CORE_WARNING		8880	0					
ANR	9266	Label	case E_COMPILE_ERROR :	1139:2:34796:34816	8880	4	True				
ANR	9267	Identifier	E_COMPILE_ERROR		8880	0					
ANR	9268	Label	case E_COMPILE_WARNING :	1140:2:34820:34842	8880	5	True				
ANR	9269	Identifier	E_COMPILE_WARNING		8880	0					
ANR	9270	ExpressionStatement	"zend_error_cb ( type , error_filename , error_lineno , format , args )"	1142:3:34906:34969	8880	6	True				
ANR	9271	CallExpression	"zend_error_cb ( type , error_filename , error_lineno , format , args )"		8880	0					
ANR	9272	Callee	zend_error_cb		8880	0					
ANR	9273	Identifier	zend_error_cb		8880	0					
ANR	9274	ArgumentList	type		8880	1					
ANR	9275	Argument	type		8880	0					
ANR	9276	Identifier	type		8880	0					
ANR	9277	Argument	error_filename		8880	1					
ANR	9278	Identifier	error_filename		8880	0					
ANR	9279	Argument	error_lineno		8880	2					
ANR	9280	Identifier	error_lineno		8880	0					
ANR	9281	Argument	format		8880	3					
ANR	9282	Identifier	format		8880	0					
ANR	9283	Argument	args		8880	4					
ANR	9284	Identifier	args		8880	0					
ANR	9285	BreakStatement	break ;	1143:3:34974:34979	8880	7	True				
ANR	9286	Label	default :	1144:2:34983:34990	8880	8	True				
ANR	9287	Identifier	default		8880	0					
ANR	9288	ExpressionStatement	ALLOC_INIT_ZVAL ( z_error_message )	1146:3:35035:35067	8880	9	True				
ANR	9289	CallExpression	ALLOC_INIT_ZVAL ( z_error_message )		8880	0					
ANR	9290	Callee	ALLOC_INIT_ZVAL		8880	0					
ANR	9291	Identifier	ALLOC_INIT_ZVAL		8880	0					
ANR	9292	ArgumentList	z_error_message		8880	1					
ANR	9293	Argument	z_error_message		8880	0					
ANR	9294	Identifier	z_error_message		8880	0					
ANR	9295	ExpressionStatement	ALLOC_INIT_ZVAL ( z_error_type )	1147:3:35072:35101	8880	10	True				
ANR	9296	CallExpression	ALLOC_INIT_ZVAL ( z_error_type )		8880	0					
ANR	9297	Callee	ALLOC_INIT_ZVAL		8880	0					
ANR	9298	Identifier	ALLOC_INIT_ZVAL		8880	0					
ANR	9299	ArgumentList	z_error_type		8880	1					
ANR	9300	Argument	z_error_type		8880	0					
ANR	9301	Identifier	z_error_type		8880	0					
ANR	9302	ExpressionStatement	ALLOC_INIT_ZVAL ( z_error_filename )	1148:3:35106:35139	8880	11	True				
ANR	9303	CallExpression	ALLOC_INIT_ZVAL ( z_error_filename )		8880	0					
ANR	9304	Callee	ALLOC_INIT_ZVAL		8880	0					
ANR	9305	Identifier	ALLOC_INIT_ZVAL		8880	0					
ANR	9306	ArgumentList	z_error_filename		8880	1					
ANR	9307	Argument	z_error_filename		8880	0					
ANR	9308	Identifier	z_error_filename		8880	0					
ANR	9309	ExpressionStatement	ALLOC_INIT_ZVAL ( z_error_lineno )	1149:3:35144:35175	8880	12	True				
ANR	9310	CallExpression	ALLOC_INIT_ZVAL ( z_error_lineno )		8880	0					
ANR	9311	Callee	ALLOC_INIT_ZVAL		8880	0					
ANR	9312	Identifier	ALLOC_INIT_ZVAL		8880	0					
ANR	9313	ArgumentList	z_error_lineno		8880	1					
ANR	9314	Argument	z_error_lineno		8880	0					
ANR	9315	Identifier	z_error_lineno		8880	0					
ANR	9316	ExpressionStatement	ALLOC_INIT_ZVAL ( z_context )	1150:3:35180:35206	8880	13	True				
ANR	9317	CallExpression	ALLOC_INIT_ZVAL ( z_context )		8880	0					
ANR	9318	Callee	ALLOC_INIT_ZVAL		8880	0					
ANR	9319	Identifier	ALLOC_INIT_ZVAL		8880	0					
ANR	9320	ArgumentList	z_context		8880	1					
ANR	9321	Argument	z_context		8880	0					
ANR	9322	Identifier	z_context		8880	0					
ANR	9323	Statement	ifdef	1157:2:35391:35395	8880	14	True				
ANR	9324	Statement	__va_copy	1157:8:35397:35405	8880	15	True				
ANR	9325	Statement	define	1158:3:35410:35415	8880	16	True				
ANR	9326	Statement	va_copy	1158:10:35417:35423	8880	17	True				
ANR	9327	Statement	(	1158:17:35424:35424	8880	18	True				
ANR	9328	Statement	dest	1158:18:35425:35428	8880	19	True				
ANR	9329	Statement	","	1158:22:35429:35429	8880	20	True				
ANR	9330	Statement	src	1158:24:35431:35433	8880	21	True				
ANR	9331	Statement	)	1158:27:35434:35434	8880	22	True				
ANR	9332	Statement	__va_copy	1158:29:35436:35444	8880	23	True				
ANR	9333	Statement	(	1158:38:35445:35445	8880	24	True				
ANR	9334	Statement	(	1158:39:35446:35446	8880	25	True				
ANR	9335	Statement	dest	1158:40:35447:35450	8880	26	True				
ANR	9336	Statement	)	1158:44:35451:35451	8880	27	True				
ANR	9337	Statement	","	1158:45:35452:35452	8880	28	True				
ANR	9338	Statement	(	1158:47:35454:35454	8880	29	True				
ANR	9339	Statement	src	1158:48:35455:35457	8880	30	True				
ANR	9340	Statement	)	1158:51:35458:35458	8880	31	True				
ANR	9341	Statement	)	1158:52:35459:35459	8880	32	True				
ANR	9342	Statement	va_copy	1160:10:35478:35484	8880	33	True				
ANR	9343	Statement	(	1160:17:35485:35485	8880	34	True				
ANR	9344	Statement	dest	1160:18:35486:35489	8880	35	True				
ANR	9345	Statement	","	1160:22:35490:35490	8880	36	True				
ANR	9346	Statement	src	1160:24:35492:35494	8880	37	True				
ANR	9347	Statement	)	1160:27:35495:35495	8880	38	True				
ANR	9348	Statement	memcpy	1160:29:35497:35502	8880	39	True				
ANR	9349	Statement	(	1160:35:35503:35503	8880	40	True				
ANR	9350	Statement	&	1160:36:35504:35504	8880	41	True				
ANR	9351	Statement	(	1160:37:35505:35505	8880	42	True				
ANR	9352	Statement	dest	1160:38:35506:35509	8880	43	True				
ANR	9353	Statement	)	1160:42:35510:35510	8880	44	True				
ANR	9354	Statement	","	1160:43:35511:35511	8880	45	True				
ANR	9355	Statement	&	1160:45:35513:35513	8880	46	True				
ANR	9356	Statement	(	1160:46:35514:35514	8880	47	True				
ANR	9357	Statement	src	1160:47:35515:35517	8880	48	True				
ANR	9358	Statement	)	1160:50:35518:35518	8880	49	True				
ANR	9359	Statement	","	1160:51:35519:35519	8880	50	True				
ANR	9360	Statement	sizeof	1160:53:35521:35526	8880	51	True				
ANR	9361	Statement	(	1160:59:35527:35527	8880	52	True				
ANR	9362	Statement	va_list	1160:60:35528:35534	8880	53	True				
ANR	9363	Statement	)	1160:67:35535:35535	8880	54	True				
ANR	9364	Statement	)	1160:68:35536:35536	8880	55	True				
ANR	9365	Statement	endif	1161:2:35540:35544	8880	56	True				
ANR	9366	ExpressionStatement	"va_copy ( usr_copy , args )"	1163:3:35556:35579	8880	57	True				
ANR	9367	CallExpression	"va_copy ( usr_copy , args )"		8880	0					
ANR	9368	Callee	va_copy		8880	0					
ANR	9369	Identifier	va_copy		8880	0					
ANR	9370	ArgumentList	usr_copy		8880	1					
ANR	9371	Argument	usr_copy		8880	0					
ANR	9372	Identifier	usr_copy		8880	0					
ANR	9373	Argument	args		8880	1					
ANR	9374	Identifier	args		8880	0					
ANR	9375	ExpressionStatement	"Z_STRLEN_P ( z_error_message ) = zend_vspprintf ( & Z_STRVAL_P ( z_error_message ) , 0 , format , usr_copy )"	1164:3:35584:35679	8880	58	True				
ANR	9376	AssignmentExpression	"Z_STRLEN_P ( z_error_message ) = zend_vspprintf ( & Z_STRVAL_P ( z_error_message ) , 0 , format , usr_copy )"		8880	0		=			
ANR	9377	CallExpression	Z_STRLEN_P ( z_error_message )		8880	0					
ANR	9378	Callee	Z_STRLEN_P		8880	0					
ANR	9379	Identifier	Z_STRLEN_P		8880	0					
ANR	9380	ArgumentList	z_error_message		8880	1					
ANR	9381	Argument	z_error_message		8880	0					
ANR	9382	Identifier	z_error_message		8880	0					
ANR	9383	CallExpression	"zend_vspprintf ( & Z_STRVAL_P ( z_error_message ) , 0 , format , usr_copy )"		8880	1					
ANR	9384	Callee	zend_vspprintf		8880	0					
ANR	9385	Identifier	zend_vspprintf		8880	0					
ANR	9386	ArgumentList	& Z_STRVAL_P ( z_error_message )		8880	1					
ANR	9387	Argument	& Z_STRVAL_P ( z_error_message )		8880	0					
ANR	9388	UnaryOperationExpression	& Z_STRVAL_P ( z_error_message )		8880	0					
ANR	9389	UnaryOperator	&		8880	0					
ANR	9390	CallExpression	Z_STRVAL_P ( z_error_message )		8880	1					
ANR	9391	Callee	Z_STRVAL_P		8880	0					
ANR	9392	Identifier	Z_STRVAL_P		8880	0					
ANR	9393	ArgumentList	z_error_message		8880	1					
ANR	9394	Argument	z_error_message		8880	0					
ANR	9395	Identifier	z_error_message		8880	0					
ANR	9396	Argument	0		8880	1					
ANR	9397	PrimaryExpression	0		8880	0					
ANR	9398	Argument	format		8880	2					
ANR	9399	Identifier	format		8880	0					
ANR	9400	Argument	usr_copy		8880	3					
ANR	9401	Identifier	usr_copy		8880	0					
ANR	9402	ExpressionStatement	va_end ( usr_copy )	1166:3:35699:35715	8880	59	True				
ANR	9403	CallExpression	va_end ( usr_copy )		8880	0					
ANR	9404	Callee	va_end		8880	0					
ANR	9405	Identifier	va_end		8880	0					
ANR	9406	ArgumentList	usr_copy		8880	1					
ANR	9407	Argument	usr_copy		8880	0					
ANR	9408	Identifier	usr_copy		8880	0					
ANR	9409	ExpressionStatement	Z_TYPE_P ( z_error_message ) = IS_STRING	1168:3:35727:35764	8880	60	True				
ANR	9410	AssignmentExpression	Z_TYPE_P ( z_error_message ) = IS_STRING		8880	0		=			
ANR	9411	CallExpression	Z_TYPE_P ( z_error_message )		8880	0					
ANR	9412	Callee	Z_TYPE_P		8880	0					
ANR	9413	Identifier	Z_TYPE_P		8880	0					
ANR	9414	ArgumentList	z_error_message		8880	1					
ANR	9415	Argument	z_error_message		8880	0					
ANR	9416	Identifier	z_error_message		8880	0					
ANR	9417	Identifier	IS_STRING		8880	1					
ANR	9418	ExpressionStatement	Z_LVAL_P ( z_error_type ) = type	1170:3:35770:35799	8880	61	True				
ANR	9419	AssignmentExpression	Z_LVAL_P ( z_error_type ) = type		8880	0		=			
ANR	9420	CallExpression	Z_LVAL_P ( z_error_type )		8880	0					
ANR	9421	Callee	Z_LVAL_P		8880	0					
ANR	9422	Identifier	Z_LVAL_P		8880	0					
ANR	9423	ArgumentList	z_error_type		8880	1					
ANR	9424	Argument	z_error_type		8880	0					
ANR	9425	Identifier	z_error_type		8880	0					
ANR	9426	Identifier	type		8880	1					
ANR	9427	ExpressionStatement	Z_TYPE_P ( z_error_type ) = IS_LONG	1171:3:35804:35836	8880	62	True				
ANR	9428	AssignmentExpression	Z_TYPE_P ( z_error_type ) = IS_LONG		8880	0		=			
ANR	9429	CallExpression	Z_TYPE_P ( z_error_type )		8880	0					
ANR	9430	Callee	Z_TYPE_P		8880	0					
ANR	9431	Identifier	Z_TYPE_P		8880	0					
ANR	9432	ArgumentList	z_error_type		8880	1					
ANR	9433	Argument	z_error_type		8880	0					
ANR	9434	Identifier	z_error_type		8880	0					
ANR	9435	Identifier	IS_LONG		8880	1					
ANR	9436	IfStatement	if ( error_filename )		8880	63					
ANR	9437	Condition	error_filename	1173:7:35846:35859	8880	0	True				
ANR	9438	Identifier	error_filename		8880	0					
ANR	9439	CompoundStatement		142:23:3812:3812	8880	1					
ANR	9440	ExpressionStatement	"ZVAL_STRING ( z_error_filename , error_filename , 1 )"	1174:4:35868:35916	8880	0	True				
ANR	9441	CallExpression	"ZVAL_STRING ( z_error_filename , error_filename , 1 )"		8880	0					
ANR	9442	Callee	ZVAL_STRING		8880	0					
ANR	9443	Identifier	ZVAL_STRING		8880	0					
ANR	9444	ArgumentList	z_error_filename		8880	1					
ANR	9445	Argument	z_error_filename		8880	0					
ANR	9446	Identifier	z_error_filename		8880	0					
ANR	9447	Argument	error_filename		8880	1					
ANR	9448	Identifier	error_filename		8880	0					
ANR	9449	Argument	1		8880	2					
ANR	9450	PrimaryExpression	1		8880	0					
ANR	9451	ExpressionStatement	Z_LVAL_P ( z_error_lineno ) = error_lineno	1177:3:35927:35966	8880	64	True				
ANR	9452	AssignmentExpression	Z_LVAL_P ( z_error_lineno ) = error_lineno		8880	0		=			
ANR	9453	CallExpression	Z_LVAL_P ( z_error_lineno )		8880	0					
ANR	9454	Callee	Z_LVAL_P		8880	0					
ANR	9455	Identifier	Z_LVAL_P		8880	0					
ANR	9456	ArgumentList	z_error_lineno		8880	1					
ANR	9457	Argument	z_error_lineno		8880	0					
ANR	9458	Identifier	z_error_lineno		8880	0					
ANR	9459	Identifier	error_lineno		8880	1					
ANR	9460	ExpressionStatement	Z_TYPE_P ( z_error_lineno ) = IS_LONG	1178:3:35971:36005	8880	65	True				
ANR	9461	AssignmentExpression	Z_TYPE_P ( z_error_lineno ) = IS_LONG		8880	0		=			
ANR	9462	CallExpression	Z_TYPE_P ( z_error_lineno )		8880	0					
ANR	9463	Callee	Z_TYPE_P		8880	0					
ANR	9464	Identifier	Z_TYPE_P		8880	0					
ANR	9465	ArgumentList	z_error_lineno		8880	1					
ANR	9466	Argument	z_error_lineno		8880	0					
ANR	9467	Identifier	z_error_lineno		8880	0					
ANR	9468	Identifier	IS_LONG		8880	1					
ANR	9469	IfStatement	if ( ! EG ( active_symbol_table ) )		8880	66					
ANR	9470	Condition	! EG ( active_symbol_table )	1180:7:36015:36038	8880	0	True				
ANR	9471	UnaryOperationExpression	! EG ( active_symbol_table )		8880	0					
ANR	9472	UnaryOperator	!		8880	0					
ANR	9473	CallExpression	EG ( active_symbol_table )		8880	1					
ANR	9474	Callee	EG		8880	0					
ANR	9475	Identifier	EG		8880	0					
ANR	9476	ArgumentList	active_symbol_table		8880	1					
ANR	9477	Argument	active_symbol_table		8880	0					
ANR	9478	Identifier	active_symbol_table		8880	0					
ANR	9479	CompoundStatement		149:33:3991:3991	8880	1					
ANR	9480	ExpressionStatement	zend_rebuild_symbol_table ( TSRMLS_C )	1181:4:36047:36082	8880	0	True				
ANR	9481	CallExpression	zend_rebuild_symbol_table ( TSRMLS_C )		8880	0					
ANR	9482	Callee	zend_rebuild_symbol_table		8880	0					
ANR	9483	Identifier	zend_rebuild_symbol_table		8880	0					
ANR	9484	ArgumentList	TSRMLS_C		8880	1					
ANR	9485	Argument	TSRMLS_C		8880	0					
ANR	9486	Identifier	TSRMLS_C		8880	0					
ANR	9487	IfStatement	if ( ! EG ( active_symbol_table ) )		8880	67					
ANR	9488	Condition	! EG ( active_symbol_table )	1185:7:36163:36186	8880	0	True				
ANR	9489	UnaryOperationExpression	! EG ( active_symbol_table )		8880	0					
ANR	9490	UnaryOperator	!		8880	0					
ANR	9491	CallExpression	EG ( active_symbol_table )		8880	1					
ANR	9492	Callee	EG		8880	0					
ANR	9493	Identifier	EG		8880	0					
ANR	9494	ArgumentList	active_symbol_table		8880	1					
ANR	9495	Argument	active_symbol_table		8880	0					
ANR	9496	Identifier	active_symbol_table		8880	0					
ANR	9497	CompoundStatement		154:33:4139:4139	8880	1					
ANR	9498	ExpressionStatement	Z_TYPE_P ( z_context ) = IS_NULL	1186:4:36195:36224	8880	0	True				
ANR	9499	AssignmentExpression	Z_TYPE_P ( z_context ) = IS_NULL		8880	0		=			
ANR	9500	CallExpression	Z_TYPE_P ( z_context )		8880	0					
ANR	9501	Callee	Z_TYPE_P		8880	0					
ANR	9502	Identifier	Z_TYPE_P		8880	0					
ANR	9503	ArgumentList	z_context		8880	1					
ANR	9504	Argument	z_context		8880	0					
ANR	9505	Identifier	z_context		8880	0					
ANR	9506	Identifier	IS_NULL		8880	1					
ANR	9507	ElseStatement	else		8880	0					
ANR	9508	CompoundStatement		156:10:4186:4186	8880	0					
ANR	9509	ExpressionStatement	Z_ARRVAL_P ( z_context ) = EG ( active_symbol_table )	1188:4:36242:36289	8880	0	True				
ANR	9510	AssignmentExpression	Z_ARRVAL_P ( z_context ) = EG ( active_symbol_table )		8880	0		=			
ANR	9511	CallExpression	Z_ARRVAL_P ( z_context )		8880	0					
ANR	9512	Callee	Z_ARRVAL_P		8880	0					
ANR	9513	Identifier	Z_ARRVAL_P		8880	0					
ANR	9514	ArgumentList	z_context		8880	1					
ANR	9515	Argument	z_context		8880	0					
ANR	9516	Identifier	z_context		8880	0					
ANR	9517	CallExpression	EG ( active_symbol_table )		8880	1					
ANR	9518	Callee	EG		8880	0					
ANR	9519	Identifier	EG		8880	0					
ANR	9520	ArgumentList	active_symbol_table		8880	1					
ANR	9521	Argument	active_symbol_table		8880	0					
ANR	9522	Identifier	active_symbol_table		8880	0					
ANR	9523	ExpressionStatement	Z_TYPE_P ( z_context ) = IS_ARRAY	1189:4:36295:36325	8880	1	True				
ANR	9524	AssignmentExpression	Z_TYPE_P ( z_context ) = IS_ARRAY		8880	0		=			
ANR	9525	CallExpression	Z_TYPE_P ( z_context )		8880	0					
ANR	9526	Callee	Z_TYPE_P		8880	0					
ANR	9527	Identifier	Z_TYPE_P		8880	0					
ANR	9528	ArgumentList	z_context		8880	1					
ANR	9529	Argument	z_context		8880	0					
ANR	9530	Identifier	z_context		8880	0					
ANR	9531	Identifier	IS_ARRAY		8880	1					
ANR	9532	ExpressionStatement	zval_copy_ctor ( z_context )	1190:4:36331:36356	8880	2	True				
ANR	9533	CallExpression	zval_copy_ctor ( z_context )		8880	0					
ANR	9534	Callee	zval_copy_ctor		8880	0					
ANR	9535	Identifier	zval_copy_ctor		8880	0					
ANR	9536	ArgumentList	z_context		8880	1					
ANR	9537	Argument	z_context		8880	0					
ANR	9538	Identifier	z_context		8880	0					
ANR	9539	ExpressionStatement	params = ( zval * * * ) emalloc ( sizeof ( zval * * ) * 5 )	1193:3:36367:36413	8880	68	True				
ANR	9540	AssignmentExpression	params = ( zval * * * ) emalloc ( sizeof ( zval * * ) * 5 )		8880	0		=			
ANR	9541	Identifier	params		8880	0					
ANR	9542	CastExpression	( zval * * * ) emalloc ( sizeof ( zval * * ) * 5 )		8880	1					
ANR	9543	CastTarget	zval * * *		8880	0					
ANR	9544	CallExpression	emalloc ( sizeof ( zval * * ) * 5 )		8880	1					
ANR	9545	Callee	emalloc		8880	0					
ANR	9546	Identifier	emalloc		8880	0					
ANR	9547	ArgumentList	sizeof ( zval * * ) * 5		8880	1					
ANR	9548	Argument	sizeof ( zval * * ) * 5		8880	0					
ANR	9549	MultiplicativeExpression	sizeof ( zval * * ) * 5		8880	0		*			
ANR	9550	SizeofExpression	sizeof ( zval * * )		8880	0					
ANR	9551	Sizeof	sizeof		8880	0					
ANR	9552	SizeofOperand	zval * *		8880	1					
ANR	9553	PrimaryExpression	5		8880	1					
ANR	9554	ExpressionStatement	params [ 0 ] = & z_error_type	1194:3:36418:36443	8880	69	True				
ANR	9555	AssignmentExpression	params [ 0 ] = & z_error_type		8880	0		=			
ANR	9556	ArrayIndexing	params [ 0 ]		8880	0					
ANR	9557	Identifier	params		8880	0					
ANR	9558	PrimaryExpression	0		8880	1					
ANR	9559	UnaryOperationExpression	& z_error_type		8880	1					
ANR	9560	UnaryOperator	&		8880	0					
ANR	9561	Identifier	z_error_type		8880	1					
ANR	9562	ExpressionStatement	params [ 1 ] = & z_error_message	1195:3:36448:36476	8880	70	True				
ANR	9563	AssignmentExpression	params [ 1 ] = & z_error_message		8880	0		=			
ANR	9564	ArrayIndexing	params [ 1 ]		8880	0					
ANR	9565	Identifier	params		8880	0					
ANR	9566	PrimaryExpression	1		8880	1					
ANR	9567	UnaryOperationExpression	& z_error_message		8880	1					
ANR	9568	UnaryOperator	&		8880	0					
ANR	9569	Identifier	z_error_message		8880	1					
ANR	9570	ExpressionStatement	params [ 2 ] = & z_error_filename	1196:3:36481:36510	8880	71	True				
ANR	9571	AssignmentExpression	params [ 2 ] = & z_error_filename		8880	0		=			
ANR	9572	ArrayIndexing	params [ 2 ]		8880	0					
ANR	9573	Identifier	params		8880	0					
ANR	9574	PrimaryExpression	2		8880	1					
ANR	9575	UnaryOperationExpression	& z_error_filename		8880	1					
ANR	9576	UnaryOperator	&		8880	0					
ANR	9577	Identifier	z_error_filename		8880	1					
ANR	9578	ExpressionStatement	params [ 3 ] = & z_error_lineno	1197:3:36515:36542	8880	72	True				
ANR	9579	AssignmentExpression	params [ 3 ] = & z_error_lineno		8880	0		=			
ANR	9580	ArrayIndexing	params [ 3 ]		8880	0					
ANR	9581	Identifier	params		8880	0					
ANR	9582	PrimaryExpression	3		8880	1					
ANR	9583	UnaryOperationExpression	& z_error_lineno		8880	1					
ANR	9584	UnaryOperator	&		8880	0					
ANR	9585	Identifier	z_error_lineno		8880	1					
ANR	9586	ExpressionStatement	params [ 4 ] = & z_context	1198:3:36547:36569	8880	73	True				
ANR	9587	AssignmentExpression	params [ 4 ] = & z_context		8880	0		=			
ANR	9588	ArrayIndexing	params [ 4 ]		8880	0					
ANR	9589	Identifier	params		8880	0					
ANR	9590	PrimaryExpression	4		8880	1					
ANR	9591	UnaryOperationExpression	& z_context		8880	1					
ANR	9592	UnaryOperator	&		8880	0					
ANR	9593	Identifier	z_context		8880	1					
ANR	9594	ExpressionStatement	orig_user_error_handler = EG ( user_error_handler )	1200:3:36575:36623	8880	74	True				
ANR	9595	AssignmentExpression	orig_user_error_handler = EG ( user_error_handler )		8880	0		=			
ANR	9596	Identifier	orig_user_error_handler		8880	0					
ANR	9597	CallExpression	EG ( user_error_handler )		8880	1					
ANR	9598	Callee	EG		8880	0					
ANR	9599	Identifier	EG		8880	0					
ANR	9600	ArgumentList	user_error_handler		8880	1					
ANR	9601	Argument	user_error_handler		8880	0					
ANR	9602	Identifier	user_error_handler		8880	0					
ANR	9603	ExpressionStatement	EG ( user_error_handler ) = NULL	1201:3:36628:36657	8880	75	True				
ANR	9604	AssignmentExpression	EG ( user_error_handler ) = NULL		8880	0		=			
ANR	9605	CallExpression	EG ( user_error_handler )		8880	0					
ANR	9606	Callee	EG		8880	0					
ANR	9607	Identifier	EG		8880	0					
ANR	9608	ArgumentList	user_error_handler		8880	1					
ANR	9609	Argument	user_error_handler		8880	0					
ANR	9610	Identifier	user_error_handler		8880	0					
ANR	9611	Identifier	NULL		8880	1					
ANR	9612	ExpressionStatement	in_compilation = CG ( in_compilation )	1208:3:36876:36911	8880	76	True				
ANR	9613	AssignmentExpression	in_compilation = CG ( in_compilation )		8880	0		=			
ANR	9614	Identifier	in_compilation		8880	0					
ANR	9615	CallExpression	CG ( in_compilation )		8880	1					
ANR	9616	Callee	CG		8880	0					
ANR	9617	Identifier	CG		8880	0					
ANR	9618	ArgumentList	in_compilation		8880	1					
ANR	9619	Argument	in_compilation		8880	0					
ANR	9620	Identifier	in_compilation		8880	0					
ANR	9621	IfStatement	if ( in_compilation )		8880	77					
ANR	9622	Condition	in_compilation	1209:7:36920:36933	8880	0	True				
ANR	9623	Identifier	in_compilation		8880	0					
ANR	9624	CompoundStatement		178:23:4886:4886	8880	1					
ANR	9625	ExpressionStatement	saved_class_entry = CG ( active_class_entry )	1210:4:36942:36984	8880	0	True				
ANR	9626	AssignmentExpression	saved_class_entry = CG ( active_class_entry )		8880	0		=			
ANR	9627	Identifier	saved_class_entry		8880	0					
ANR	9628	CallExpression	CG ( active_class_entry )		8880	1					
ANR	9629	Callee	CG		8880	0					
ANR	9630	Identifier	CG		8880	0					
ANR	9631	ArgumentList	active_class_entry		8880	1					
ANR	9632	Argument	active_class_entry		8880	0					
ANR	9633	Identifier	active_class_entry		8880	0					
ANR	9634	ExpressionStatement	CG ( active_class_entry ) = NULL	1211:4:36990:37019	8880	1	True				
ANR	9635	AssignmentExpression	CG ( active_class_entry ) = NULL		8880	0		=			
ANR	9636	CallExpression	CG ( active_class_entry )		8880	0					
ANR	9637	Callee	CG		8880	0					
ANR	9638	Identifier	CG		8880	0					
ANR	9639	ArgumentList	active_class_entry		8880	1					
ANR	9640	Argument	active_class_entry		8880	0					
ANR	9641	Identifier	active_class_entry		8880	0					
ANR	9642	Identifier	NULL		8880	1					
ANR	9643	ExpressionStatement	SAVE_STACK ( bp_stack )	1212:4:37025:37045	8880	2	True				
ANR	9644	CallExpression	SAVE_STACK ( bp_stack )		8880	0					
ANR	9645	Callee	SAVE_STACK		8880	0					
ANR	9646	Identifier	SAVE_STACK		8880	0					
ANR	9647	ArgumentList	bp_stack		8880	1					
ANR	9648	Argument	bp_stack		8880	0					
ANR	9649	Identifier	bp_stack		8880	0					
ANR	9650	ExpressionStatement	SAVE_STACK ( function_call_stack )	1213:4:37051:37082	8880	3	True				
ANR	9651	CallExpression	SAVE_STACK ( function_call_stack )		8880	0					
ANR	9652	Callee	SAVE_STACK		8880	0					
ANR	9653	Identifier	SAVE_STACK		8880	0					
ANR	9654	ArgumentList	function_call_stack		8880	1					
ANR	9655	Argument	function_call_stack		8880	0					
ANR	9656	Identifier	function_call_stack		8880	0					
ANR	9657	ExpressionStatement	SAVE_STACK ( switch_cond_stack )	1214:4:37088:37117	8880	4	True				
ANR	9658	CallExpression	SAVE_STACK ( switch_cond_stack )		8880	0					
ANR	9659	Callee	SAVE_STACK		8880	0					
ANR	9660	Identifier	SAVE_STACK		8880	0					
ANR	9661	ArgumentList	switch_cond_stack		8880	1					
ANR	9662	Argument	switch_cond_stack		8880	0					
ANR	9663	Identifier	switch_cond_stack		8880	0					
ANR	9664	ExpressionStatement	SAVE_STACK ( foreach_copy_stack )	1215:4:37123:37153	8880	5	True				
ANR	9665	CallExpression	SAVE_STACK ( foreach_copy_stack )		8880	0					
ANR	9666	Callee	SAVE_STACK		8880	0					
ANR	9667	Identifier	SAVE_STACK		8880	0					
ANR	9668	ArgumentList	foreach_copy_stack		8880	1					
ANR	9669	Argument	foreach_copy_stack		8880	0					
ANR	9670	Identifier	foreach_copy_stack		8880	0					
ANR	9671	ExpressionStatement	SAVE_STACK ( object_stack )	1216:4:37159:37183	8880	6	True				
ANR	9672	CallExpression	SAVE_STACK ( object_stack )		8880	0					
ANR	9673	Callee	SAVE_STACK		8880	0					
ANR	9674	Identifier	SAVE_STACK		8880	0					
ANR	9675	ArgumentList	object_stack		8880	1					
ANR	9676	Argument	object_stack		8880	0					
ANR	9677	Identifier	object_stack		8880	0					
ANR	9678	ExpressionStatement	SAVE_STACK ( declare_stack )	1217:4:37189:37214	8880	7	True				
ANR	9679	CallExpression	SAVE_STACK ( declare_stack )		8880	0					
ANR	9680	Callee	SAVE_STACK		8880	0					
ANR	9681	Identifier	SAVE_STACK		8880	0					
ANR	9682	ArgumentList	declare_stack		8880	1					
ANR	9683	Argument	declare_stack		8880	0					
ANR	9684	Identifier	declare_stack		8880	0					
ANR	9685	ExpressionStatement	SAVE_STACK ( list_stack )	1218:4:37220:37242	8880	8	True				
ANR	9686	CallExpression	SAVE_STACK ( list_stack )		8880	0					
ANR	9687	Callee	SAVE_STACK		8880	0					
ANR	9688	Identifier	SAVE_STACK		8880	0					
ANR	9689	ArgumentList	list_stack		8880	1					
ANR	9690	Argument	list_stack		8880	0					
ANR	9691	Identifier	list_stack		8880	0					
ANR	9692	ExpressionStatement	SAVE_STACK ( context_stack )	1219:4:37248:37273	8880	9	True				
ANR	9693	CallExpression	SAVE_STACK ( context_stack )		8880	0					
ANR	9694	Callee	SAVE_STACK		8880	0					
ANR	9695	Identifier	SAVE_STACK		8880	0					
ANR	9696	ArgumentList	context_stack		8880	1					
ANR	9697	Argument	context_stack		8880	0					
ANR	9698	Identifier	context_stack		8880	0					
ANR	9699	ExpressionStatement	CG ( in_compilation ) = 0	1220:4:37279:37301	8880	10	True				
ANR	9700	AssignmentExpression	CG ( in_compilation ) = 0		8880	0		=			
ANR	9701	CallExpression	CG ( in_compilation )		8880	0					
ANR	9702	Callee	CG		8880	0					
ANR	9703	Identifier	CG		8880	0					
ANR	9704	ArgumentList	in_compilation		8880	1					
ANR	9705	Argument	in_compilation		8880	0					
ANR	9706	Identifier	in_compilation		8880	0					
ANR	9707	PrimaryExpression	0		8880	1					
ANR	9708	ElseStatement	else		8880	0					
ANR	9709	IfStatement	if ( ! EG ( exception ) )		8880	0					
ANR	9710	Condition	! EG ( exception )	1230:14:37652:37665	8880	0	True				
ANR	9711	UnaryOperationExpression	! EG ( exception )		8880	0					
ANR	9712	UnaryOperator	!		8880	0					
ANR	9713	CallExpression	EG ( exception )		8880	1					
ANR	9714	Callee	EG		8880	0					
ANR	9715	Identifier	EG		8880	0					
ANR	9716	ArgumentList	exception		8880	1					
ANR	9717	Argument	exception		8880	0					
ANR	9718	Identifier	exception		8880	0					
ANR	9719	CompoundStatement		199:30:5618:5618	8880	1					
ANR	9720	ExpressionStatement	"zend_error_cb ( type , error_filename , error_lineno , format , args )"	1232:4:37742:37805	8880	0	True				
ANR	9721	CallExpression	"zend_error_cb ( type , error_filename , error_lineno , format , args )"		8880	0					
ANR	9722	Callee	zend_error_cb		8880	0					
ANR	9723	Identifier	zend_error_cb		8880	0					
ANR	9724	ArgumentList	type		8880	1					
ANR	9725	Argument	type		8880	0					
ANR	9726	Identifier	type		8880	0					
ANR	9727	Argument	error_filename		8880	1					
ANR	9728	Identifier	error_filename		8880	0					
ANR	9729	Argument	error_lineno		8880	2					
ANR	9730	Identifier	error_lineno		8880	0					
ANR	9731	Argument	format		8880	3					
ANR	9732	Identifier	format		8880	0					
ANR	9733	Argument	args		8880	4					
ANR	9734	Identifier	args		8880	0					
ANR	9735	Statement	if	1223:3:37312:37313	8880	78	True				
ANR	9736	Statement	(	1223:6:37315:37315	8880	79	True				
ANR	9737	Statement	call_user_function_ex	1223:7:37316:37336	8880	80	True				
ANR	9738	Statement	(	1223:28:37337:37337	8880	81	True				
ANR	9739	Statement	CG	1223:29:37338:37339	8880	82	True				
ANR	9740	Statement	(	1223:31:37340:37340	8880	83	True				
ANR	9741	Statement	function_table	1223:32:37341:37354	8880	84	True				
ANR	9742	Statement	)	1223:46:37355:37355	8880	85	True				
ANR	9743	Statement	","	1223:47:37356:37356	8880	86	True				
ANR	9744	Statement	NULL	1223:49:37358:37361	8880	87	True				
ANR	9745	Statement	","	1223:53:37362:37362	8880	88	True				
ANR	9746	Statement	orig_user_error_handler	1223:55:37364:37386	8880	89	True				
ANR	9747	Statement	","	1223:78:37387:37387	8880	90	True				
ANR	9748	Statement	&	1223:80:37389:37389	8880	91	True				
ANR	9749	Statement	retval	1223:81:37390:37395	8880	92	True				
ANR	9750	Statement	","	1223:87:37396:37396	8880	93	True				
ANR	9751	Statement	5	1223:89:37398:37398	8880	94	True				
ANR	9752	Statement	","	1223:90:37399:37399	8880	95	True				
ANR	9753	Statement	params	1223:92:37401:37406	8880	96	True				
ANR	9754	Statement	","	1223:98:37407:37407	8880	97	True				
ANR	9755	Statement	1	1223:100:37409:37409	8880	98	True				
ANR	9756	Statement	","	1223:101:37410:37410	8880	99	True				
ANR	9757	Statement	NULL	1223:103:37412:37415	8880	100	True				
ANR	9758	Statement	TSRMLS_CC	1223:108:37417:37425	8880	101	True				
ANR	9759	Statement	)	1223:117:37426:37426	8880	102	True				
ANR	9760	Statement	==	1223:119:37428:37429	8880	103	True				
ANR	9761	Statement	SUCCESS	1223:122:37431:37437	8880	104	True				
ANR	9762	Statement	)	1223:129:37438:37438	8880	105	True				
ANR	9763	CompoundStatement		192:131:5390:5390	8880	106					
ANR	9764	IfStatement	if ( retval )		8880	0					
ANR	9765	Condition	retval	1224:8:37450:37455	8880	0	True				
ANR	9766	Identifier	retval		8880	0					
ANR	9767	CompoundStatement		193:16:5408:5408	8880	1					
ANR	9768	IfStatement	if ( Z_TYPE_P ( retval ) == IS_BOOL && Z_LVAL_P ( retval ) == 0 )		8880	0					
ANR	9769	Condition	Z_TYPE_P ( retval ) == IS_BOOL && Z_LVAL_P ( retval ) == 0	1225:9:37469:37520	8880	0	True				
ANR	9770	AndExpression	Z_TYPE_P ( retval ) == IS_BOOL && Z_LVAL_P ( retval ) == 0		8880	0		&&			
ANR	9771	EqualityExpression	Z_TYPE_P ( retval ) == IS_BOOL		8880	0		==			
ANR	9772	CallExpression	Z_TYPE_P ( retval )		8880	0					
ANR	9773	Callee	Z_TYPE_P		8880	0					
ANR	9774	Identifier	Z_TYPE_P		8880	0					
ANR	9775	ArgumentList	retval		8880	1					
ANR	9776	Argument	retval		8880	0					
ANR	9777	Identifier	retval		8880	0					
ANR	9778	Identifier	IS_BOOL		8880	1					
ANR	9779	EqualityExpression	Z_LVAL_P ( retval ) == 0		8880	1		==			
ANR	9780	CallExpression	Z_LVAL_P ( retval )		8880	0					
ANR	9781	Callee	Z_LVAL_P		8880	0					
ANR	9782	Identifier	Z_LVAL_P		8880	0					
ANR	9783	ArgumentList	retval		8880	1					
ANR	9784	Argument	retval		8880	0					
ANR	9785	Identifier	retval		8880	0					
ANR	9786	PrimaryExpression	0		8880	1					
ANR	9787	CompoundStatement		194:63:5473:5473	8880	1					
ANR	9788	ExpressionStatement	"zend_error_cb ( type , error_filename , error_lineno , format , args )"	1226:6:37531:37594	8880	0	True				
ANR	9789	CallExpression	"zend_error_cb ( type , error_filename , error_lineno , format , args )"		8880	0					
ANR	9790	Callee	zend_error_cb		8880	0					
ANR	9791	Identifier	zend_error_cb		8880	0					
ANR	9792	ArgumentList	type		8880	1					
ANR	9793	Argument	type		8880	0					
ANR	9794	Identifier	type		8880	0					
ANR	9795	Argument	error_filename		8880	1					
ANR	9796	Identifier	error_filename		8880	0					
ANR	9797	Argument	error_lineno		8880	2					
ANR	9798	Identifier	error_lineno		8880	0					
ANR	9799	Argument	format		8880	3					
ANR	9800	Identifier	format		8880	0					
ANR	9801	Argument	args		8880	4					
ANR	9802	Identifier	args		8880	0					
ANR	9803	ExpressionStatement	zval_ptr_dtor ( & retval )	1228:5:37608:37630	8880	1	True				
ANR	9804	CallExpression	zval_ptr_dtor ( & retval )		8880	0					
ANR	9805	Callee	zval_ptr_dtor		8880	0					
ANR	9806	Identifier	zval_ptr_dtor		8880	0					
ANR	9807	ArgumentList	& retval		8880	1					
ANR	9808	Argument	& retval		8880	0					
ANR	9809	UnaryOperationExpression	& retval		8880	0					
ANR	9810	UnaryOperator	&		8880	0					
ANR	9811	Identifier	retval		8880	1					
ANR	9812	IfStatement	if ( in_compilation )		8880	107					
ANR	9813	Condition	in_compilation	1235:7:37820:37833	8880	0	True				
ANR	9814	Identifier	in_compilation		8880	0					
ANR	9815	CompoundStatement		204:23:5786:5786	8880	1					
ANR	9816	ExpressionStatement	CG ( active_class_entry ) = saved_class_entry	1236:4:37842:37884	8880	0	True				
ANR	9817	AssignmentExpression	CG ( active_class_entry ) = saved_class_entry		8880	0		=			
ANR	9818	CallExpression	CG ( active_class_entry )		8880	0					
ANR	9819	Callee	CG		8880	0					
ANR	9820	Identifier	CG		8880	0					
ANR	9821	ArgumentList	active_class_entry		8880	1					
ANR	9822	Argument	active_class_entry		8880	0					
ANR	9823	Identifier	active_class_entry		8880	0					
ANR	9824	Identifier	saved_class_entry		8880	1					
ANR	9825	ExpressionStatement	RESTORE_STACK ( bp_stack )	1237:4:37890:37913	8880	1	True				
ANR	9826	CallExpression	RESTORE_STACK ( bp_stack )		8880	0					
ANR	9827	Callee	RESTORE_STACK		8880	0					
ANR	9828	Identifier	RESTORE_STACK		8880	0					
ANR	9829	ArgumentList	bp_stack		8880	1					
ANR	9830	Argument	bp_stack		8880	0					
ANR	9831	Identifier	bp_stack		8880	0					
ANR	9832	ExpressionStatement	RESTORE_STACK ( function_call_stack )	1238:4:37919:37953	8880	2	True				
ANR	9833	CallExpression	RESTORE_STACK ( function_call_stack )		8880	0					
ANR	9834	Callee	RESTORE_STACK		8880	0					
ANR	9835	Identifier	RESTORE_STACK		8880	0					
ANR	9836	ArgumentList	function_call_stack		8880	1					
ANR	9837	Argument	function_call_stack		8880	0					
ANR	9838	Identifier	function_call_stack		8880	0					
ANR	9839	ExpressionStatement	RESTORE_STACK ( switch_cond_stack )	1239:4:37959:37991	8880	3	True				
ANR	9840	CallExpression	RESTORE_STACK ( switch_cond_stack )		8880	0					
ANR	9841	Callee	RESTORE_STACK		8880	0					
ANR	9842	Identifier	RESTORE_STACK		8880	0					
ANR	9843	ArgumentList	switch_cond_stack		8880	1					
ANR	9844	Argument	switch_cond_stack		8880	0					
ANR	9845	Identifier	switch_cond_stack		8880	0					
ANR	9846	ExpressionStatement	RESTORE_STACK ( foreach_copy_stack )	1240:4:37997:38030	8880	4	True				
ANR	9847	CallExpression	RESTORE_STACK ( foreach_copy_stack )		8880	0					
ANR	9848	Callee	RESTORE_STACK		8880	0					
ANR	9849	Identifier	RESTORE_STACK		8880	0					
ANR	9850	ArgumentList	foreach_copy_stack		8880	1					
ANR	9851	Argument	foreach_copy_stack		8880	0					
ANR	9852	Identifier	foreach_copy_stack		8880	0					
ANR	9853	ExpressionStatement	RESTORE_STACK ( object_stack )	1241:4:38036:38063	8880	5	True				
ANR	9854	CallExpression	RESTORE_STACK ( object_stack )		8880	0					
ANR	9855	Callee	RESTORE_STACK		8880	0					
ANR	9856	Identifier	RESTORE_STACK		8880	0					
ANR	9857	ArgumentList	object_stack		8880	1					
ANR	9858	Argument	object_stack		8880	0					
ANR	9859	Identifier	object_stack		8880	0					
ANR	9860	ExpressionStatement	RESTORE_STACK ( declare_stack )	1242:4:38069:38097	8880	6	True				
ANR	9861	CallExpression	RESTORE_STACK ( declare_stack )		8880	0					
ANR	9862	Callee	RESTORE_STACK		8880	0					
ANR	9863	Identifier	RESTORE_STACK		8880	0					
ANR	9864	ArgumentList	declare_stack		8880	1					
ANR	9865	Argument	declare_stack		8880	0					
ANR	9866	Identifier	declare_stack		8880	0					
ANR	9867	ExpressionStatement	RESTORE_STACK ( list_stack )	1243:4:38103:38128	8880	7	True				
ANR	9868	CallExpression	RESTORE_STACK ( list_stack )		8880	0					
ANR	9869	Callee	RESTORE_STACK		8880	0					
ANR	9870	Identifier	RESTORE_STACK		8880	0					
ANR	9871	ArgumentList	list_stack		8880	1					
ANR	9872	Argument	list_stack		8880	0					
ANR	9873	Identifier	list_stack		8880	0					
ANR	9874	ExpressionStatement	RESTORE_STACK ( context_stack )	1244:4:38134:38162	8880	8	True				
ANR	9875	CallExpression	RESTORE_STACK ( context_stack )		8880	0					
ANR	9876	Callee	RESTORE_STACK		8880	0					
ANR	9877	Identifier	RESTORE_STACK		8880	0					
ANR	9878	ArgumentList	context_stack		8880	1					
ANR	9879	Argument	context_stack		8880	0					
ANR	9880	Identifier	context_stack		8880	0					
ANR	9881	ExpressionStatement	CG ( in_compilation ) = 1	1245:4:38168:38190	8880	9	True				
ANR	9882	AssignmentExpression	CG ( in_compilation ) = 1		8880	0		=			
ANR	9883	CallExpression	CG ( in_compilation )		8880	0					
ANR	9884	Callee	CG		8880	0					
ANR	9885	Identifier	CG		8880	0					
ANR	9886	ArgumentList	in_compilation		8880	1					
ANR	9887	Argument	in_compilation		8880	0					
ANR	9888	Identifier	in_compilation		8880	0					
ANR	9889	PrimaryExpression	1		8880	1					
ANR	9890	IfStatement	if ( ! EG ( user_error_handler ) )		8880	108					
ANR	9891	Condition	! EG ( user_error_handler )	1248:7:38205:38227	8880	0	True				
ANR	9892	UnaryOperationExpression	! EG ( user_error_handler )		8880	0					
ANR	9893	UnaryOperator	!		8880	0					
ANR	9894	CallExpression	EG ( user_error_handler )		8880	1					
ANR	9895	Callee	EG		8880	0					
ANR	9896	Identifier	EG		8880	0					
ANR	9897	ArgumentList	user_error_handler		8880	1					
ANR	9898	Argument	user_error_handler		8880	0					
ANR	9899	Identifier	user_error_handler		8880	0					
ANR	9900	CompoundStatement		217:32:6180:6180	8880	1					
ANR	9901	ExpressionStatement	EG ( user_error_handler ) = orig_user_error_handler	1249:4:38236:38284	8880	0	True				
ANR	9902	AssignmentExpression	EG ( user_error_handler ) = orig_user_error_handler		8880	0		=			
ANR	9903	CallExpression	EG ( user_error_handler )		8880	0					
ANR	9904	Callee	EG		8880	0					
ANR	9905	Identifier	EG		8880	0					
ANR	9906	ArgumentList	user_error_handler		8880	1					
ANR	9907	Argument	user_error_handler		8880	0					
ANR	9908	Identifier	user_error_handler		8880	0					
ANR	9909	Identifier	orig_user_error_handler		8880	1					
ANR	9910	ElseStatement	else		8880	0					
ANR	9911	CompoundStatement		220:8:6249:6249	8880	0					
ANR	9912	ExpressionStatement	zval_ptr_dtor ( & orig_user_error_handler )	1252:4:38305:38344	8880	0	True				
ANR	9913	CallExpression	zval_ptr_dtor ( & orig_user_error_handler )		8880	0					
ANR	9914	Callee	zval_ptr_dtor		8880	0					
ANR	9915	Identifier	zval_ptr_dtor		8880	0					
ANR	9916	ArgumentList	& orig_user_error_handler		8880	1					
ANR	9917	Argument	& orig_user_error_handler		8880	0					
ANR	9918	UnaryOperationExpression	& orig_user_error_handler		8880	0					
ANR	9919	UnaryOperator	&		8880	0					
ANR	9920	Identifier	orig_user_error_handler		8880	1					
ANR	9921	ExpressionStatement	efree ( params )	1255:3:38355:38368	8880	109	True				
ANR	9922	CallExpression	efree ( params )		8880	0					
ANR	9923	Callee	efree		8880	0					
ANR	9924	Identifier	efree		8880	0					
ANR	9925	ArgumentList	params		8880	1					
ANR	9926	Argument	params		8880	0					
ANR	9927	Identifier	params		8880	0					
ANR	9928	ExpressionStatement	zval_ptr_dtor ( & z_error_message )	1256:3:38373:38404	8880	110	True				
ANR	9929	CallExpression	zval_ptr_dtor ( & z_error_message )		8880	0					
ANR	9930	Callee	zval_ptr_dtor		8880	0					
ANR	9931	Identifier	zval_ptr_dtor		8880	0					
ANR	9932	ArgumentList	& z_error_message		8880	1					
ANR	9933	Argument	& z_error_message		8880	0					
ANR	9934	UnaryOperationExpression	& z_error_message		8880	0					
ANR	9935	UnaryOperator	&		8880	0					
ANR	9936	Identifier	z_error_message		8880	1					
ANR	9937	ExpressionStatement	zval_ptr_dtor ( & z_error_type )	1257:3:38409:38437	8880	111	True				
ANR	9938	CallExpression	zval_ptr_dtor ( & z_error_type )		8880	0					
ANR	9939	Callee	zval_ptr_dtor		8880	0					
ANR	9940	Identifier	zval_ptr_dtor		8880	0					
ANR	9941	ArgumentList	& z_error_type		8880	1					
ANR	9942	Argument	& z_error_type		8880	0					
ANR	9943	UnaryOperationExpression	& z_error_type		8880	0					
ANR	9944	UnaryOperator	&		8880	0					
ANR	9945	Identifier	z_error_type		8880	1					
ANR	9946	ExpressionStatement	zval_ptr_dtor ( & z_error_filename )	1258:3:38442:38474	8880	112	True				
ANR	9947	CallExpression	zval_ptr_dtor ( & z_error_filename )		8880	0					
ANR	9948	Callee	zval_ptr_dtor		8880	0					
ANR	9949	Identifier	zval_ptr_dtor		8880	0					
ANR	9950	ArgumentList	& z_error_filename		8880	1					
ANR	9951	Argument	& z_error_filename		8880	0					
ANR	9952	UnaryOperationExpression	& z_error_filename		8880	0					
ANR	9953	UnaryOperator	&		8880	0					
ANR	9954	Identifier	z_error_filename		8880	1					
ANR	9955	ExpressionStatement	zval_ptr_dtor ( & z_error_lineno )	1259:3:38479:38509	8880	113	True				
ANR	9956	CallExpression	zval_ptr_dtor ( & z_error_lineno )		8880	0					
ANR	9957	Callee	zval_ptr_dtor		8880	0					
ANR	9958	Identifier	zval_ptr_dtor		8880	0					
ANR	9959	ArgumentList	& z_error_lineno		8880	1					
ANR	9960	Argument	& z_error_lineno		8880	0					
ANR	9961	UnaryOperationExpression	& z_error_lineno		8880	0					
ANR	9962	UnaryOperator	&		8880	0					
ANR	9963	Identifier	z_error_lineno		8880	1					
ANR	9964	ExpressionStatement	zval_ptr_dtor ( & z_context )	1260:3:38514:38539	8880	114	True				
ANR	9965	CallExpression	zval_ptr_dtor ( & z_context )		8880	0					
ANR	9966	Callee	zval_ptr_dtor		8880	0					
ANR	9967	Identifier	zval_ptr_dtor		8880	0					
ANR	9968	ArgumentList	& z_context		8880	1					
ANR	9969	Argument	& z_context		8880	0					
ANR	9970	UnaryOperationExpression	& z_context		8880	0					
ANR	9971	UnaryOperator	&		8880	0					
ANR	9972	Identifier	z_context		8880	1					
ANR	9973	BreakStatement	break ;	1261:3:38544:38549	8880	115	True				
ANR	9974	ExpressionStatement	"va_start ( args , format )"	1127:1:34426:34448	8880	23	True				
ANR	9975	CallExpression	"va_start ( args , format )"		8880	0					
ANR	9976	Callee	va_start		8880	0					
ANR	9977	Identifier	va_start		8880	0					
ANR	9978	ArgumentList	args		8880	1					
ANR	9979	Argument	args		8880	0					
ANR	9980	Identifier	args		8880	0					
ANR	9981	Argument	format		8880	1					
ANR	9982	Identifier	format		8880	0					
ANR	9983	IfStatement	if ( ! EG ( user_error_handler ) || ! ( EG ( user_error_handler_error_reporting ) & type ) || EG ( error_handling ) != EH_NORMAL )		8880	24					
ANR	9984	Condition	! EG ( user_error_handler ) || ! ( EG ( user_error_handler_error_reporting ) & type ) || EG ( error_handling ) != EH_NORMAL	1130:5:34509:34622	8880	0	True				
ANR	9985	OrExpression	! EG ( user_error_handler ) || ! ( EG ( user_error_handler_error_reporting ) & type ) || EG ( error_handling ) != EH_NORMAL		8880	0		||			
ANR	9986	UnaryOperationExpression	! EG ( user_error_handler )		8880	0					
ANR	9987	UnaryOperator	!		8880	0					
ANR	9988	CallExpression	EG ( user_error_handler )		8880	1					
ANR	9989	Callee	EG		8880	0					
ANR	9990	Identifier	EG		8880	0					
ANR	9991	ArgumentList	user_error_handler		8880	1					
ANR	9992	Argument	user_error_handler		8880	0					
ANR	9993	Identifier	user_error_handler		8880	0					
ANR	9994	OrExpression	! ( EG ( user_error_handler_error_reporting ) & type ) || EG ( error_handling ) != EH_NORMAL		8880	1		||			
ANR	9995	UnaryOperationExpression	! ( EG ( user_error_handler_error_reporting ) & type )		8880	0					
ANR	9996	UnaryOperator	!		8880	0					
ANR	9997	BitAndExpression	EG ( user_error_handler_error_reporting ) & type		8880	1		&			
ANR	9998	CallExpression	EG ( user_error_handler_error_reporting )		8880	0					
ANR	9999	Callee	EG		8880	0					
ANR	10000	Identifier	EG		8880	0					
ANR	10001	ArgumentList	user_error_handler_error_reporting		8880	1					
ANR	10002	Argument	user_error_handler_error_reporting		8880	0					
ANR	10003	Identifier	user_error_handler_error_reporting		8880	0					
ANR	10004	Identifier	type		8880	1					
ANR	10005	EqualityExpression	EG ( error_handling ) != EH_NORMAL		8880	1		!=			
ANR	10006	CallExpression	EG ( error_handling )		8880	0					
ANR	10007	Callee	EG		8880	0					
ANR	10008	Identifier	EG		8880	0					
ANR	10009	ArgumentList	error_handling		8880	1					
ANR	10010	Argument	error_handling		8880	0					
ANR	10011	Identifier	error_handling		8880	0					
ANR	10012	Identifier	EH_NORMAL		8880	1					
ANR	10013	CompoundStatement		101:38:2575:2575	8880	1					
ANR	10014	ExpressionStatement	"zend_error_cb ( type , error_filename , error_lineno , format , args )"	1133:2:34629:34692	8880	0	True				
ANR	10015	CallExpression	"zend_error_cb ( type , error_filename , error_lineno , format , args )"		8880	0					
ANR	10016	Callee	zend_error_cb		8880	0					
ANR	10017	Identifier	zend_error_cb		8880	0					
ANR	10018	ArgumentList	type		8880	1					
ANR	10019	Argument	type		8880	0					
ANR	10020	Identifier	type		8880	0					
ANR	10021	Argument	error_filename		8880	1					
ANR	10022	Identifier	error_filename		8880	0					
ANR	10023	Argument	error_lineno		8880	2					
ANR	10024	Identifier	error_lineno		8880	0					
ANR	10025	Argument	format		8880	3					
ANR	10026	Identifier	format		8880	0					
ANR	10027	Argument	args		8880	4					
ANR	10028	Identifier	args		8880	0					
ANR	10029	ElseStatement	else		8880	0					
ANR	10030	Statement	define	1160:3:35471:35476	8880	0	True				
ANR	10031	ExpressionStatement	va_end ( args )	1264:1:38556:38568	8880	25	True				
ANR	10032	CallExpression	va_end ( args )		8880	0					
ANR	10033	Callee	va_end		8880	0					
ANR	10034	Identifier	va_end		8880	0					
ANR	10035	ArgumentList	args		8880	1					
ANR	10036	Argument	args		8880	0					
ANR	10037	Identifier	args		8880	0					
ANR	10038	IfStatement	if ( type == E_PARSE )		8880	26					
ANR	10039	Condition	type == E_PARSE	1266:5:38576:38590	8880	0	True				
ANR	10040	EqualityExpression	type == E_PARSE		8880	0		==			
ANR	10041	Identifier	type		8880	0					
ANR	10042	Identifier	E_PARSE		8880	1					
ANR	10043	CompoundStatement		235:22:6543:6543	8880	1					
ANR	10044	IfStatement	if ( ! ( EG ( current_execute_data ) && EG ( current_execute_data ) -> opline && EG ( current_execute_data ) -> opline -> opcode == ZEND_INCLUDE_OR_EVAL && EG ( current_execute_data ) -> opline -> extended_value == ZEND_EVAL ) )		8880	0					
ANR	10045	Condition	! ( EG ( current_execute_data ) && EG ( current_execute_data ) -> opline && EG ( current_execute_data ) -> opline -> opcode == ZEND_INCLUDE_OR_EVAL && EG ( current_execute_data ) -> opline -> extended_value == ZEND_EVAL )	1268:6:38649:38853	8880	0	True				
ANR	10046	UnaryOperationExpression	! ( EG ( current_execute_data ) && EG ( current_execute_data ) -> opline && EG ( current_execute_data ) -> opline -> opcode == ZEND_INCLUDE_OR_EVAL && EG ( current_execute_data ) -> opline -> extended_value == ZEND_EVAL )		8880	0					
ANR	10047	UnaryOperator	!		8880	0					
ANR	10048	AndExpression	EG ( current_execute_data ) && EG ( current_execute_data ) -> opline && EG ( current_execute_data ) -> opline -> opcode == ZEND_INCLUDE_OR_EVAL && EG ( current_execute_data ) -> opline -> extended_value == ZEND_EVAL		8880	1		&&			
ANR	10049	CallExpression	EG ( current_execute_data )		8880	0					
ANR	10050	Callee	EG		8880	0					
ANR	10051	Identifier	EG		8880	0					
ANR	10052	ArgumentList	current_execute_data		8880	1					
ANR	10053	Argument	current_execute_data		8880	0					
ANR	10054	Identifier	current_execute_data		8880	0					
ANR	10055	AndExpression	EG ( current_execute_data ) -> opline && EG ( current_execute_data ) -> opline -> opcode == ZEND_INCLUDE_OR_EVAL && EG ( current_execute_data ) -> opline -> extended_value == ZEND_EVAL		8880	1		&&			
ANR	10056	PtrMemberAccess	EG ( current_execute_data ) -> opline		8880	0					
ANR	10057	CallExpression	EG ( current_execute_data )		8880	0					
ANR	10058	Callee	EG		8880	0					
ANR	10059	Identifier	EG		8880	0					
ANR	10060	ArgumentList	current_execute_data		8880	1					
ANR	10061	Argument	current_execute_data		8880	0					
ANR	10062	Identifier	current_execute_data		8880	0					
ANR	10063	Identifier	opline		8880	1					
ANR	10064	AndExpression	EG ( current_execute_data ) -> opline -> opcode == ZEND_INCLUDE_OR_EVAL && EG ( current_execute_data ) -> opline -> extended_value == ZEND_EVAL		8880	1		&&			
ANR	10065	EqualityExpression	EG ( current_execute_data ) -> opline -> opcode == ZEND_INCLUDE_OR_EVAL		8880	0		==			
ANR	10066	PtrMemberAccess	EG ( current_execute_data ) -> opline -> opcode		8880	0					
ANR	10067	PtrMemberAccess	EG ( current_execute_data ) -> opline		8880	0					
ANR	10068	CallExpression	EG ( current_execute_data )		8880	0					
ANR	10069	Callee	EG		8880	0					
ANR	10070	Identifier	EG		8880	0					
ANR	10071	ArgumentList	current_execute_data		8880	1					
ANR	10072	Argument	current_execute_data		8880	0					
ANR	10073	Identifier	current_execute_data		8880	0					
ANR	10074	Identifier	opline		8880	1					
ANR	10075	Identifier	opcode		8880	1					
ANR	10076	Identifier	ZEND_INCLUDE_OR_EVAL		8880	1					
ANR	10077	EqualityExpression	EG ( current_execute_data ) -> opline -> extended_value == ZEND_EVAL		8880	1		==			
ANR	10078	PtrMemberAccess	EG ( current_execute_data ) -> opline -> extended_value		8880	0					
ANR	10079	PtrMemberAccess	EG ( current_execute_data ) -> opline		8880	0					
ANR	10080	CallExpression	EG ( current_execute_data )		8880	0					
ANR	10081	Callee	EG		8880	0					
ANR	10082	Identifier	EG		8880	0					
ANR	10083	ArgumentList	current_execute_data		8880	1					
ANR	10084	Argument	current_execute_data		8880	0					
ANR	10085	Identifier	current_execute_data		8880	0					
ANR	10086	Identifier	opline		8880	1					
ANR	10087	Identifier	extended_value		8880	1					
ANR	10088	Identifier	ZEND_EVAL		8880	1					
ANR	10089	CompoundStatement		240:67:6806:6806	8880	1					
ANR	10090	ExpressionStatement	EG ( exit_status ) = 255	1272:3:38861:38882	8880	0	True				
ANR	10091	AssignmentExpression	EG ( exit_status ) = 255		8880	0		=			
ANR	10092	CallExpression	EG ( exit_status )		8880	0					
ANR	10093	Callee	EG		8880	0					
ANR	10094	Identifier	EG		8880	0					
ANR	10095	ArgumentList	exit_status		8880	1					
ANR	10096	Argument	exit_status		8880	0					
ANR	10097	Identifier	exit_status		8880	0					
ANR	10098	PrimaryExpression	255		8880	1					
ANR	10099	ExpressionStatement	zend_init_compiler_data_structures ( TSRMLS_C )	1274:2:38890:38934	8880	1	True				
ANR	10100	CallExpression	zend_init_compiler_data_structures ( TSRMLS_C )		8880	0					
ANR	10101	Callee	zend_init_compiler_data_structures		8880	0					
ANR	10102	Identifier	zend_init_compiler_data_structures		8880	0					
ANR	10103	ArgumentList	TSRMLS_C		8880	1					
ANR	10104	Argument	TSRMLS_C		8880	0					
ANR	10105	Identifier	TSRMLS_C		8880	0					
ANR	10106	ReturnType	ZEND_API void		8880	1					
ANR	10107	Identifier	zend_error		8880	2					
ANR	10108	ParameterList	"int type , const char * format"		8880	3					
ANR	10109	Parameter	int type	1031:25:32004:32011	8880	0	True				
ANR	10110	ParameterType	int		8880	0					
ANR	10111	Identifier	type		8880	1					
ANR	10112	Parameter	const char * format	1031:35:32014:32031	8880	1	True				
ANR	10113	ParameterType	const char *		8880	0					
ANR	10114	Identifier	format		8880	1					
ANR	10115	CFGEntryNode	ENTRY		8880		True				
ANR	10116	CFGExitNode	EXIT		8880		True				
ANR	10117	Symbol	exception		8880						
ANR	10118	Symbol	object_stack		8880						
ANR	10119	Symbol	z_error_message		8880						
ANR	10120	Symbol	error_lineno		8880						
ANR	10121	Symbol	usr_copy		8880						
ANR	10122	Symbol	active_class_entry		8880						
ANR	10123	Symbol	current_execute_data		8880						
ANR	10124	Symbol	z_context		8880						
ANR	10125	Symbol	list_stack		8880						
ANR	10126	Symbol	type		8880						
ANR	10127	Symbol	* * EG		8880						
ANR	10128	Symbol	declare_stack		8880						
ANR	10129	Symbol	saved_class_entry		8880						
ANR	10130	Symbol	& z_error_message		8880						
ANR	10131	Symbol	& retval		8880						
ANR	10132	Symbol	dtrace_error_buffer		8880						
ANR	10133	Symbol	IS_STRING		8880						
ANR	10134	Symbol	& z_error_lineno		8880						
ANR	10135	Symbol	zend_vspprintf		8880						
ANR	10136	Symbol	z_error_filename		8880						
ANR	10137	Symbol	active_opline		8880						
ANR	10138	Symbol	& dtrace_error_buffer		8880						
ANR	10139	Symbol	& Z_STRVAL_P		8880						
ANR	10140	Symbol	EG		8880						
ANR	10141	Symbol	orig_user_error_handler		8880						
ANR	10142	Symbol	NULL		8880						
ANR	10143	Symbol	opline_ptr		8880						
ANR	10144	Symbol	zend_is_compiling		8880						
ANR	10145	Symbol	zend_is_executing		8880						
ANR	10146	Symbol	format		8880						
ANR	10147	Symbol	active_opline -> lineno		8880						
ANR	10148	Symbol	E_PARSE		8880						
ANR	10149	Symbol	* EG ( current_execute_data ) -> opline		8880						
ANR	10150	Symbol	params		8880						
ANR	10151	Symbol	switch_cond_stack		8880						
ANR	10152	Symbol	retval		8880						
ANR	10153	Symbol	zend_get_compiled_filename		8880						
ANR	10154	Symbol	ZEND_EVAL		8880						
ANR	10155	Symbol	error_filename		8880						
ANR	10156	Symbol	DTRACE_ERROR_ENABLED		8880						
ANR	10157	Symbol	context_stack		8880						
ANR	10158	Symbol	& orig_user_error_handler		8880						
ANR	10159	Symbol	& z_error_filename		8880						
ANR	10160	Symbol	bp_stack		8880						
ANR	10161	Symbol	user_error_handler		8880						
ANR	10162	Symbol	foreach_copy_stack		8880						
ANR	10163	Symbol	* EG		8880						
ANR	10164	Symbol	EG ( current_execute_data ) -> opline		8880						
ANR	10165	Symbol	exit_status		8880						
ANR	10166	Symbol	in_compilation		8880						
ANR	10167	Symbol	EG ( current_execute_data ) -> opline -> extended_value		8880						
ANR	10168	Symbol	* active_opline		8880						
ANR	10169	Symbol	emalloc		8880						
ANR	10170	Symbol	TSRMLS_C		8880						
ANR	10171	Symbol	EH_NORMAL		8880						
ANR	10172	Symbol	IS_NULL		8880						
ANR	10173	Symbol	IS_ARRAY		8880						
ANR	10174	Symbol	function_call_stack		8880						
ANR	10175	Symbol	zend_get_executed_filename		8880						
ANR	10176	Symbol	IS_LONG		8880						
ANR	10177	Symbol	active_symbol_table		8880						
ANR	10178	Symbol	zend_get_compiled_lineno		8880						
ANR	10179	Symbol	Z_STRLEN_P		8880						
ANR	10180	Symbol	ZEND_INCLUDE_OR_EVAL		8880						
ANR	10181	Symbol	Z_ARRVAL_P		8880						
ANR	10182	Symbol	* params		8880						
ANR	10183	Symbol	CG		8880						
ANR	10184	Symbol	EG ( current_execute_data ) -> opline -> opcode		8880						
ANR	10185	Symbol	& z_error_type		8880						
ANR	10186	Symbol	error_handling		8880						
ANR	10187	Symbol	Z_TYPE_P		8880						
ANR	10188	Symbol	z_error_lineno		8880						
ANR	10189	Symbol	Z_LVAL_P		8880						
ANR	10190	Symbol	args		8880						
ANR	10191	Symbol	zend_get_executed_lineno		8880						
ANR	10192	Symbol	& z_context		8880						
ANR	10193	Symbol	user_error_handler_error_reporting		8880						
ANR	10194	Symbol	z_error_type		8880						
ANR	10195	Symbol	IS_BOOL		8880						
ANR	10196	Function	zend_output_debug_string	1283:0:39216:39690							
ANR	10197	FunctionDef	"zend_output_debug_string (zend_bool trigger_break , const char * format)"		10196	0					
ANR	10198	CompoundStatement		1284:0:39315:39690	10196	0					
ANR	10199	IdentifierDeclStatement	va_list args ;	1286:1:39333:39345	10196	0	True				
ANR	10200	IdentifierDecl	args		10196	0					
ANR	10201	IdentifierDeclType	va_list		10196	0					
ANR	10202	Identifier	args		10196	1					
ANR	10203	ExpressionStatement	"va_start ( args , format )"	1288:1:39349:39371	10196	1	True				
ANR	10204	CallExpression	"va_start ( args , format )"		10196	0					
ANR	10205	Callee	va_start		10196	0					
ANR	10206	Identifier	va_start		10196	0					
ANR	10207	ArgumentList	args		10196	1					
ANR	10208	Argument	args		10196	0					
ANR	10209	Identifier	args		10196	0					
ANR	10210	Argument	format		10196	1					
ANR	10211	Identifier	format		10196	0					
ANR	10212	Statement	ifdef	1289:2:39375:39379	10196	2	True				
ANR	10213	Statement	ZEND_WIN32	1289:8:39381:39390	10196	3	True				
ANR	10214	CompoundStatement		8:2:81:102	10196	4					
ANR	10215	IdentifierDeclStatement	char output_buf [ 1024 ] ;	1291:2:39397:39418	10196	0	True				
ANR	10216	IdentifierDecl	output_buf [ 1024 ]		10196	0					
ANR	10217	IdentifierDeclType	char [ 1024 ]		10196	0					
ANR	10218	Identifier	output_buf		10196	1					
ANR	10219	PrimaryExpression	1024		10196	2					
ANR	10220	ExpressionStatement	"vsnprintf ( output_buf , 1024 , format , args )"	1293:2:39423:39464	10196	1	True				
ANR	10221	CallExpression	"vsnprintf ( output_buf , 1024 , format , args )"		10196	0					
ANR	10222	Callee	vsnprintf		10196	0					
ANR	10223	Identifier	vsnprintf		10196	0					
ANR	10224	ArgumentList	output_buf		10196	1					
ANR	10225	Argument	output_buf		10196	0					
ANR	10226	Identifier	output_buf		10196	0					
ANR	10227	Argument	1024		10196	1					
ANR	10228	PrimaryExpression	1024		10196	0					
ANR	10229	Argument	format		10196	2					
ANR	10230	Identifier	format		10196	0					
ANR	10231	Argument	args		10196	3					
ANR	10232	Identifier	args		10196	0					
ANR	10233	ExpressionStatement	OutputDebugString ( output_buf )	1294:2:39468:39497	10196	2	True				
ANR	10234	CallExpression	OutputDebugString ( output_buf )		10196	0					
ANR	10235	Callee	OutputDebugString		10196	0					
ANR	10236	Identifier	OutputDebugString		10196	0					
ANR	10237	ArgumentList	output_buf		10196	1					
ANR	10238	Argument	output_buf		10196	0					
ANR	10239	Identifier	output_buf		10196	0					
ANR	10240	ExpressionStatement	"OutputDebugString ( ""\\n"" )"	1295:2:39501:39524	10196	3	True				
ANR	10241	CallExpression	"OutputDebugString ( ""\\n"" )"		10196	0					
ANR	10242	Callee	OutputDebugString		10196	0					
ANR	10243	Identifier	OutputDebugString		10196	0					
ANR	10244	ArgumentList	"""\\n"""		10196	1					
ANR	10245	Argument	"""\\n"""		10196	0					
ANR	10246	PrimaryExpression	"""\\n"""		10196	0					
ANR	10247	IfStatement	if ( trigger_break && IsDebuggerPresent ( ) )		10196	4					
ANR	10248	Condition	trigger_break && IsDebuggerPresent ( )	1296:6:39532:39567	10196	0	True				
ANR	10249	AndExpression	trigger_break && IsDebuggerPresent ( )		10196	0		&&			
ANR	10250	Identifier	trigger_break		10196	0					
ANR	10251	CallExpression	IsDebuggerPresent ( )		10196	1					
ANR	10252	Callee	IsDebuggerPresent		10196	0					
ANR	10253	Identifier	IsDebuggerPresent		10196	0					
ANR	10254	ArgumentList			10196	1					
ANR	10255	CompoundStatement		13:44:254:254	10196	1					
ANR	10256	ExpressionStatement	DebugBreak ( )	1297:3:39575:39587	10196	0	True				
ANR	10257	CallExpression	DebugBreak ( )		10196	0					
ANR	10258	Callee	DebugBreak		10196	0					
ANR	10259	Identifier	DebugBreak		10196	0					
ANR	10260	ArgumentList			10196	1					
ANR	10261	ReturnType	ZEND_API void		10196	1					
ANR	10262	Identifier	zend_output_debug_string		10196	2					
ANR	10263	ParameterList	"zend_bool trigger_break , const char * format"		10196	3					
ANR	10264	Parameter	zend_bool trigger_break	1283:39:39255:39277	10196	0	True				
ANR	10265	ParameterType	zend_bool		10196	0					
ANR	10266	Identifier	trigger_break		10196	1					
ANR	10267	Parameter	const char * format	1283:64:39280:39297	10196	1	True				
ANR	10268	ParameterType	const char *		10196	0					
ANR	10269	Identifier	format		10196	1					
ANR	10270	CFGEntryNode	ENTRY		10196		True				
ANR	10271	CFGExitNode	EXIT		10196		True				
ANR	10272	Symbol	args		10196						
ANR	10273	Symbol	output_buf		10196						
ANR	10274	Symbol	trigger_break		10196						
ANR	10275	Symbol	format		10196						
ANR	10276	Symbol	IsDebuggerPresent		10196						
ANR	10277	Function	zend_execute_scripts	1309:0:39703:42221							
ANR	10278	FunctionDef	"zend_execute_scripts (int type TSRMLS_DC , zval * * retval , int file_count)"		10277	0					
ANR	10279	CompoundStatement		1310:0:39803:42221	10277	0					
ANR	10280	IdentifierDeclStatement	va_list files ;	1311:1:39806:39819	10277	0	True				
ANR	10281	IdentifierDecl	files		10277	0					
ANR	10282	IdentifierDeclType	va_list		10277	0					
ANR	10283	Identifier	files		10277	1					
ANR	10284	IdentifierDeclStatement	int i ;	1312:1:39822:39827	10277	1	True				
ANR	10285	IdentifierDecl	i		10277	0					
ANR	10286	IdentifierDeclType	int		10277	0					
ANR	10287	Identifier	i		10277	1					
ANR	10288	IdentifierDeclStatement	zend_file_handle * file_handle ;	1313:1:39830:39859	10277	2	True				
ANR	10289	IdentifierDecl	* file_handle		10277	0					
ANR	10290	IdentifierDeclType	zend_file_handle *		10277	0					
ANR	10291	Identifier	file_handle		10277	1					
ANR	10292	IdentifierDeclStatement	zend_op_array * orig_op_array = EG ( active_op_array ) ;	1314:1:39862:39912	10277	3	True				
ANR	10293	IdentifierDecl	* orig_op_array = EG ( active_op_array )		10277	0					
ANR	10294	IdentifierDeclType	zend_op_array *		10277	0					
ANR	10295	Identifier	orig_op_array		10277	1					
ANR	10296	AssignmentExpression	* orig_op_array = EG ( active_op_array )		10277	2		=			
ANR	10297	Identifier	orig_op_array		10277	0					
ANR	10298	CallExpression	EG ( active_op_array )		10277	1					
ANR	10299	Callee	EG		10277	0					
ANR	10300	Identifier	EG		10277	0					
ANR	10301	ArgumentList	active_op_array		10277	1					
ANR	10302	Argument	active_op_array		10277	0					
ANR	10303	Identifier	active_op_array		10277	0					
ANR	10304	IdentifierDeclStatement	zval * * orig_retval_ptr_ptr = EG ( return_value_ptr_ptr ) ;	1315:1:39915:39968	10277	4	True				
ANR	10305	IdentifierDecl	* * orig_retval_ptr_ptr = EG ( return_value_ptr_ptr )		10277	0					
ANR	10306	IdentifierDeclType	zval * *		10277	0					
ANR	10307	Identifier	orig_retval_ptr_ptr		10277	1					
ANR	10308	AssignmentExpression	* * orig_retval_ptr_ptr = EG ( return_value_ptr_ptr )		10277	2		=			
ANR	10309	Identifier	orig_retval_ptr_ptr		10277	0					
ANR	10310	CallExpression	EG ( return_value_ptr_ptr )		10277	1					
ANR	10311	Callee	EG		10277	0					
ANR	10312	Identifier	EG		10277	0					
ANR	10313	ArgumentList	return_value_ptr_ptr		10277	1					
ANR	10314	Argument	return_value_ptr_ptr		10277	0					
ANR	10315	Identifier	return_value_ptr_ptr		10277	0					
ANR	10316	IdentifierDeclStatement	long orig_interactive = CG ( interactive ) ;	1316:4:39974:40013	10277	5	True				
ANR	10317	IdentifierDecl	orig_interactive = CG ( interactive )		10277	0					
ANR	10318	IdentifierDeclType	long		10277	0					
ANR	10319	Identifier	orig_interactive		10277	1					
ANR	10320	AssignmentExpression	orig_interactive = CG ( interactive )		10277	2		=			
ANR	10321	Identifier	orig_interactive		10277	0					
ANR	10322	CallExpression	CG ( interactive )		10277	1					
ANR	10323	Callee	CG		10277	0					
ANR	10324	Identifier	CG		10277	0					
ANR	10325	ArgumentList	interactive		10277	1					
ANR	10326	Argument	interactive		10277	0					
ANR	10327	Identifier	interactive		10277	0					
ANR	10328	ExpressionStatement	"va_start ( files , file_count )"	1318:1:40017:40044	10277	6	True				
ANR	10329	CallExpression	"va_start ( files , file_count )"		10277	0					
ANR	10330	Callee	va_start		10277	0					
ANR	10331	Identifier	va_start		10277	0					
ANR	10332	ArgumentList	files		10277	1					
ANR	10333	Argument	files		10277	0					
ANR	10334	Identifier	files		10277	0					
ANR	10335	Argument	file_count		10277	1					
ANR	10336	Identifier	file_count		10277	0					
ANR	10337	ForStatement	for ( i = 0 ; i < file_count ; i ++ )		10277	7					
ANR	10338	ForInit	i = 0 ;	1319:6:40052:40057	10277	0	True				
ANR	10339	AssignmentExpression	i = 0		10277	0		=			
ANR	10340	Identifier	i		10277	0					
ANR	10341	PrimaryExpression	0		10277	1					
ANR	10342	Condition	i < file_count	1319:13:40059:40072	10277	1	True				
ANR	10343	RelationalExpression	i < file_count		10277	0		<			
ANR	10344	Identifier	i		10277	0					
ANR	10345	Identifier	file_count		10277	1					
ANR	10346	PostIncDecOperationExpression	i ++	1319:29:40075:40077	10277	2	True				
ANR	10347	Identifier	i		10277	0					
ANR	10348	IncDec	++		10277	1					
ANR	10349	CompoundStatement		10:34:276:276	10277	3					
ANR	10350	Statement	file_handle	1320:2:40084:40094	10277	0	True				
ANR	10351	Statement	=	1320:14:40096:40096	10277	1	True				
ANR	10352	Statement	va_arg	1320:16:40098:40103	10277	2	True				
ANR	10353	Statement	(	1320:22:40104:40104	10277	3	True				
ANR	10354	Statement	files	1320:23:40105:40109	10277	4	True				
ANR	10355	Statement	","	1320:28:40110:40110	10277	5	True				
ANR	10356	Statement	zend_file_handle	1320:30:40112:40127	10277	6	True				
ANR	10357	Statement	*	1320:47:40129:40129	10277	7	True				
ANR	10358	Statement	)	1320:48:40130:40130	10277	8	True				
ANR	10359	ExpressionStatement		1320:49:40131:40131	10277	9	True				
ANR	10360	IfStatement	if ( ! file_handle )		10277	10					
ANR	10361	Condition	! file_handle	1321:6:40139:40150	10277	0	True				
ANR	10362	UnaryOperationExpression	! file_handle		10277	0					
ANR	10363	UnaryOperator	!		10277	0					
ANR	10364	Identifier	file_handle		10277	1					
ANR	10365	CompoundStatement		12:20:349:349	10277	1					
ANR	10366	ContinueStatement	continue ;	1322:3:40158:40166	10277	0	True				
ANR	10367	IfStatement	if ( orig_interactive )		10277	11					
ANR	10368	Condition	orig_interactive	1325:12:40185:40200	10277	0	True				
ANR	10369	Identifier	orig_interactive		10277	0					
ANR	10370	CompoundStatement		16:30:399:399	10277	1					
ANR	10371	IfStatement	if ( file_handle -> filename [ 0 ] != '-' || file_handle -> filename [ 1 ] )		10277	0					
ANR	10372	Condition	file_handle -> filename [ 0 ] != '-' || file_handle -> filename [ 1 ]	1326:16:40221:40279	10277	0	True				
ANR	10373	OrExpression	file_handle -> filename [ 0 ] != '-' || file_handle -> filename [ 1 ]		10277	0		||			
ANR	10374	EqualityExpression	file_handle -> filename [ 0 ] != '-'		10277	0		!=			
ANR	10375	ArrayIndexing	file_handle -> filename [ 0 ]		10277	0					
ANR	10376	PtrMemberAccess	file_handle -> filename		10277	0					
ANR	10377	Identifier	file_handle		10277	0					
ANR	10378	Identifier	filename		10277	1					
ANR	10379	PrimaryExpression	0		10277	1					
ANR	10380	PrimaryExpression	'-'		10277	1					
ANR	10381	ArrayIndexing	file_handle -> filename [ 1 ]		10277	1					
ANR	10382	PtrMemberAccess	file_handle -> filename		10277	0					
ANR	10383	Identifier	file_handle		10277	0					
ANR	10384	Identifier	filename		10277	1					
ANR	10385	PrimaryExpression	1		10277	1					
ANR	10386	CompoundStatement		17:77:478:478	10277	1					
ANR	10387	ExpressionStatement	CG ( interactive ) = 0	1327:16:40300:40319	10277	0	True				
ANR	10388	AssignmentExpression	CG ( interactive ) = 0		10277	0		=			
ANR	10389	CallExpression	CG ( interactive )		10277	0					
ANR	10390	Callee	CG		10277	0					
ANR	10391	Identifier	CG		10277	0					
ANR	10392	ArgumentList	interactive		10277	1					
ANR	10393	Argument	interactive		10277	0					
ANR	10394	Identifier	interactive		10277	0					
ANR	10395	PrimaryExpression	0		10277	1					
ANR	10396	ElseStatement	else		10277	0					
ANR	10397	CompoundStatement		19:19:536:536	10277	0					
ANR	10398	ExpressionStatement	CG ( interactive ) = 1	1329:16:40358:40377	10277	0	True				
ANR	10399	AssignmentExpression	CG ( interactive ) = 1		10277	0		=			
ANR	10400	CallExpression	CG ( interactive )		10277	0					
ANR	10401	Callee	CG		10277	0					
ANR	10402	Identifier	CG		10277	0					
ANR	10403	ArgumentList	interactive		10277	1					
ANR	10404	Argument	interactive		10277	0					
ANR	10405	Identifier	interactive		10277	0					
ANR	10406	PrimaryExpression	1		10277	1					
ANR	10407	Statement	EG	1333:2:40413:40414	10277	12	True				
ANR	10408	Statement	(	1333:4:40415:40415	10277	13	True				
ANR	10409	Statement	active_op_array	1333:5:40416:40430	10277	14	True				
ANR	10410	Statement	)	1333:20:40431:40431	10277	15	True				
ANR	10411	Statement	=	1333:22:40433:40433	10277	16	True				
ANR	10412	Statement	zend_compile_file	1333:24:40435:40451	10277	17	True				
ANR	10413	Statement	(	1333:41:40452:40452	10277	18	True				
ANR	10414	Statement	file_handle	1333:42:40453:40463	10277	19	True				
ANR	10415	Statement	","	1333:53:40464:40464	10277	20	True				
ANR	10416	Statement	type	1333:55:40466:40469	10277	21	True				
ANR	10417	Statement	TSRMLS_CC	1333:60:40471:40479	10277	22	True				
ANR	10418	Statement	)	1333:69:40480:40480	10277	23	True				
ANR	10419	ExpressionStatement		1333:70:40481:40481	10277	24	True				
ANR	10420	IfStatement	if ( file_handle -> opened_path )		10277	25					
ANR	10421	Condition	file_handle -> opened_path	1334:6:40489:40512	10277	0	True				
ANR	10422	PtrMemberAccess	file_handle -> opened_path		10277	0					
ANR	10423	Identifier	file_handle		10277	0					
ANR	10424	Identifier	opened_path		10277	1					
ANR	10425	CompoundStatement		26:3:716:729	10277	1					
ANR	10426	IdentifierDeclStatement	int dummy = 1 ;	1335:3:40520:40533	10277	0	True				
ANR	10427	IdentifierDecl	dummy = 1		10277	0					
ANR	10428	IdentifierDeclType	int		10277	0					
ANR	10429	Identifier	dummy		10277	1					
ANR	10430	AssignmentExpression	dummy = 1		10277	2		=			
ANR	10431	Identifier	dummy		10277	0					
ANR	10432	PrimaryExpression	1		10277	1					
ANR	10433	ExpressionStatement	"zend_hash_add ( & EG ( included_files ) , file_handle -> opened_path , strlen ( file_handle -> opened_path ) + 1 , ( void * ) & dummy , sizeof ( int ) , NULL )"	1336:3:40538:40671	10277	1	True				
ANR	10434	CallExpression	"zend_hash_add ( & EG ( included_files ) , file_handle -> opened_path , strlen ( file_handle -> opened_path ) + 1 , ( void * ) & dummy , sizeof ( int ) , NULL )"		10277	0					
ANR	10435	Callee	zend_hash_add		10277	0					
ANR	10436	Identifier	zend_hash_add		10277	0					
ANR	10437	ArgumentList	& EG ( included_files )		10277	1					
ANR	10438	Argument	& EG ( included_files )		10277	0					
ANR	10439	UnaryOperationExpression	& EG ( included_files )		10277	0					
ANR	10440	UnaryOperator	&		10277	0					
ANR	10441	CallExpression	EG ( included_files )		10277	1					
ANR	10442	Callee	EG		10277	0					
ANR	10443	Identifier	EG		10277	0					
ANR	10444	ArgumentList	included_files		10277	1					
ANR	10445	Argument	included_files		10277	0					
ANR	10446	Identifier	included_files		10277	0					
ANR	10447	Argument	file_handle -> opened_path		10277	1					
ANR	10448	PtrMemberAccess	file_handle -> opened_path		10277	0					
ANR	10449	Identifier	file_handle		10277	0					
ANR	10450	Identifier	opened_path		10277	1					
ANR	10451	Argument	strlen ( file_handle -> opened_path ) + 1		10277	2					
ANR	10452	AdditiveExpression	strlen ( file_handle -> opened_path ) + 1		10277	0		+			
ANR	10453	CallExpression	strlen ( file_handle -> opened_path )		10277	0					
ANR	10454	Callee	strlen		10277	0					
ANR	10455	Identifier	strlen		10277	0					
ANR	10456	ArgumentList	file_handle -> opened_path		10277	1					
ANR	10457	Argument	file_handle -> opened_path		10277	0					
ANR	10458	PtrMemberAccess	file_handle -> opened_path		10277	0					
ANR	10459	Identifier	file_handle		10277	0					
ANR	10460	Identifier	opened_path		10277	1					
ANR	10461	PrimaryExpression	1		10277	1					
ANR	10462	Argument	( void * ) & dummy		10277	3					
ANR	10463	CastExpression	( void * ) & dummy		10277	0					
ANR	10464	CastTarget	void *		10277	0					
ANR	10465	UnaryOperationExpression	& dummy		10277	1					
ANR	10466	UnaryOperator	&		10277	0					
ANR	10467	Identifier	dummy		10277	1					
ANR	10468	Argument	sizeof ( int )		10277	4					
ANR	10469	SizeofExpression	sizeof ( int )		10277	0					
ANR	10470	Sizeof	sizeof		10277	0					
ANR	10471	SizeofOperand	int		10277	1					
ANR	10472	Argument	NULL		10277	5					
ANR	10473	Identifier	NULL		10277	0					
ANR	10474	Statement	zend_destroy_file_handle	1338:2:40679:40702	10277	26	True				
ANR	10475	Statement	(	1338:26:40703:40703	10277	27	True				
ANR	10476	Statement	file_handle	1338:27:40704:40714	10277	28	True				
ANR	10477	Statement	TSRMLS_CC	1338:39:40716:40724	10277	29	True				
ANR	10478	Statement	)	1338:48:40725:40725	10277	30	True				
ANR	10479	ExpressionStatement		1338:49:40726:40726	10277	31	True				
ANR	10480	IfStatement	if ( EG ( active_op_array ) )		10277	32					
ANR	10481	Condition	EG ( active_op_array )	1339:6:40734:40752	10277	0	True				
ANR	10482	CallExpression	EG ( active_op_array )		10277	0					
ANR	10483	Callee	EG		10277	0					
ANR	10484	Identifier	EG		10277	0					
ANR	10485	ArgumentList	active_op_array		10277	1					
ANR	10486	Argument	active_op_array		10277	0					
ANR	10487	Identifier	active_op_array		10277	0					
ANR	10488	CompoundStatement		30:27:951:951	10277	1					
ANR	10489	ExpressionStatement	EG ( return_value_ptr_ptr ) = retval ? retval : NULL	1340:3:40760:40809	10277	0	True				
ANR	10490	AssignmentExpression	EG ( return_value_ptr_ptr ) = retval ? retval : NULL		10277	0		=			
ANR	10491	CallExpression	EG ( return_value_ptr_ptr )		10277	0					
ANR	10492	Callee	EG		10277	0					
ANR	10493	Identifier	EG		10277	0					
ANR	10494	ArgumentList	return_value_ptr_ptr		10277	1					
ANR	10495	Argument	return_value_ptr_ptr		10277	0					
ANR	10496	Identifier	return_value_ptr_ptr		10277	0					
ANR	10497	ConditionalExpression	retval ? retval : NULL		10277	1					
ANR	10498	Condition	retval		10277	0					
ANR	10499	Identifier	retval		10277	0					
ANR	10500	Identifier	retval		10277	1					
ANR	10501	Identifier	NULL		10277	2					
ANR	10502	Statement	zend_execute	1341:3:40814:40825	10277	1	True				
ANR	10503	Statement	(	1341:15:40826:40826	10277	2	True				
ANR	10504	Statement	EG	1341:16:40827:40828	10277	3	True				
ANR	10505	Statement	(	1341:18:40829:40829	10277	4	True				
ANR	10506	Statement	active_op_array	1341:19:40830:40844	10277	5	True				
ANR	10507	Statement	)	1341:34:40845:40845	10277	6	True				
ANR	10508	Statement	TSRMLS_CC	1341:36:40847:40855	10277	7	True				
ANR	10509	Statement	)	1341:45:40856:40856	10277	8	True				
ANR	10510	ExpressionStatement		1341:46:40857:40857	10277	9	True				
ANR	10511	ExpressionStatement	zend_exception_restore ( TSRMLS_C )	1342:3:40862:40894	10277	10	True				
ANR	10512	CallExpression	zend_exception_restore ( TSRMLS_C )		10277	0					
ANR	10513	Callee	zend_exception_restore		10277	0					
ANR	10514	Identifier	zend_exception_restore		10277	0					
ANR	10515	ArgumentList	TSRMLS_C		10277	1					
ANR	10516	Argument	TSRMLS_C		10277	0					
ANR	10517	Identifier	TSRMLS_C		10277	0					
ANR	10518	IfStatement	if ( EG ( exception ) )		10277	11					
ANR	10519	Condition	EG ( exception )	1343:7:40903:40915	10277	0	True				
ANR	10520	CallExpression	EG ( exception )		10277	0					
ANR	10521	Callee	EG		10277	0					
ANR	10522	Identifier	EG		10277	0					
ANR	10523	ArgumentList	exception		10277	1					
ANR	10524	Argument	exception		10277	0					
ANR	10525	Identifier	exception		10277	0					
ANR	10526	CompoundStatement		34:22:1114:1114	10277	1					
ANR	10527	IfStatement	if ( EG ( user_exception_handler ) )		10277	0					
ANR	10528	Condition	EG ( user_exception_handler )	1344:8:40928:40953	10277	0	True				
ANR	10529	CallExpression	EG ( user_exception_handler )		10277	0					
ANR	10530	Callee	EG		10277	0					
ANR	10531	Identifier	EG		10277	0					
ANR	10532	ArgumentList	user_exception_handler		10277	1					
ANR	10533	Argument	user_exception_handler		10277	0					
ANR	10534	Identifier	user_exception_handler		10277	0					
ANR	10535	CompoundStatement		37:5:1199:1241	10277	1					
ANR	10536	IdentifierDeclStatement	zval * orig_user_exception_handler ;	1345:5:40963:40996	10277	0	True				
ANR	10537	IdentifierDecl	* orig_user_exception_handler		10277	0					
ANR	10538	IdentifierDeclType	zval *		10277	0					
ANR	10539	Identifier	orig_user_exception_handler		10277	1					
ANR	10540	IdentifierDeclStatement	"zval * * params [ 1 ] , * retval2 , * old_exception ;"	1346:5:41003:41045	10277	1	True				
ANR	10541	IdentifierDecl	* * params [ 1 ]		10277	0					
ANR	10542	IdentifierDeclType	zval * * [ 1 ]		10277	0					
ANR	10543	Identifier	params		10277	1					
ANR	10544	PrimaryExpression	1		10277	2					
ANR	10545	IdentifierDecl	* retval2		10277	1					
ANR	10546	IdentifierDeclType	zval *		10277	0					
ANR	10547	Identifier	retval2		10277	1					
ANR	10548	IdentifierDecl	* old_exception		10277	2					
ANR	10549	IdentifierDeclType	zval *		10277	0					
ANR	10550	Identifier	old_exception		10277	1					
ANR	10551	ExpressionStatement	old_exception = EG ( exception )	1347:5:41052:41081	10277	2	True				
ANR	10552	AssignmentExpression	old_exception = EG ( exception )		10277	0		=			
ANR	10553	Identifier	old_exception		10277	0					
ANR	10554	CallExpression	EG ( exception )		10277	1					
ANR	10555	Callee	EG		10277	0					
ANR	10556	Identifier	EG		10277	0					
ANR	10557	ArgumentList	exception		10277	1					
ANR	10558	Argument	exception		10277	0					
ANR	10559	Identifier	exception		10277	0					
ANR	10560	ExpressionStatement	EG ( exception ) = NULL	1348:5:41088:41108	10277	3	True				
ANR	10561	AssignmentExpression	EG ( exception ) = NULL		10277	0		=			
ANR	10562	CallExpression	EG ( exception )		10277	0					
ANR	10563	Callee	EG		10277	0					
ANR	10564	Identifier	EG		10277	0					
ANR	10565	ArgumentList	exception		10277	1					
ANR	10566	Argument	exception		10277	0					
ANR	10567	Identifier	exception		10277	0					
ANR	10568	Identifier	NULL		10277	1					
ANR	10569	ExpressionStatement	params [ 0 ] = & old_exception	1349:5:41115:41141	10277	4	True				
ANR	10570	AssignmentExpression	params [ 0 ] = & old_exception		10277	0		=			
ANR	10571	ArrayIndexing	params [ 0 ]		10277	0					
ANR	10572	Identifier	params		10277	0					
ANR	10573	PrimaryExpression	0		10277	1					
ANR	10574	UnaryOperationExpression	& old_exception		10277	1					
ANR	10575	UnaryOperator	&		10277	0					
ANR	10576	Identifier	old_exception		10277	1					
ANR	10577	ExpressionStatement	orig_user_exception_handler = EG ( user_exception_handler )	1350:5:41148:41204	10277	5	True				
ANR	10578	AssignmentExpression	orig_user_exception_handler = EG ( user_exception_handler )		10277	0		=			
ANR	10579	Identifier	orig_user_exception_handler		10277	0					
ANR	10580	CallExpression	EG ( user_exception_handler )		10277	1					
ANR	10581	Callee	EG		10277	0					
ANR	10582	Identifier	EG		10277	0					
ANR	10583	ArgumentList	user_exception_handler		10277	1					
ANR	10584	Argument	user_exception_handler		10277	0					
ANR	10585	Identifier	user_exception_handler		10277	0					
ANR	10586	Statement	if	1351:5:41211:41212	10277	6	True				
ANR	10587	Statement	(	1351:8:41214:41214	10277	7	True				
ANR	10588	Statement	call_user_function_ex	1351:9:41215:41235	10277	8	True				
ANR	10589	Statement	(	1351:30:41236:41236	10277	9	True				
ANR	10590	Statement	CG	1351:31:41237:41238	10277	10	True				
ANR	10591	Statement	(	1351:33:41239:41239	10277	11	True				
ANR	10592	Statement	function_table	1351:34:41240:41253	10277	12	True				
ANR	10593	Statement	)	1351:48:41254:41254	10277	13	True				
ANR	10594	Statement	","	1351:49:41255:41255	10277	14	True				
ANR	10595	Statement	NULL	1351:51:41257:41260	10277	15	True				
ANR	10596	Statement	","	1351:55:41261:41261	10277	16	True				
ANR	10597	Statement	orig_user_exception_handler	1351:57:41263:41289	10277	17	True				
ANR	10598	Statement	","	1351:84:41290:41290	10277	18	True				
ANR	10599	Statement	&	1351:86:41292:41292	10277	19	True				
ANR	10600	Statement	retval2	1351:87:41293:41299	10277	20	True				
ANR	10601	Statement	","	1351:94:41300:41300	10277	21	True				
ANR	10602	Statement	1	1351:96:41302:41302	10277	22	True				
ANR	10603	Statement	","	1351:97:41303:41303	10277	23	True				
ANR	10604	Statement	params	1351:99:41305:41310	10277	24	True				
ANR	10605	Statement	","	1351:105:41311:41311	10277	25	True				
ANR	10606	Statement	1	1351:107:41313:41313	10277	26	True				
ANR	10607	Statement	","	1351:108:41314:41314	10277	27	True				
ANR	10608	Statement	NULL	1351:110:41316:41319	10277	28	True				
ANR	10609	Statement	TSRMLS_CC	1351:115:41321:41329	10277	29	True				
ANR	10610	Statement	)	1351:124:41330:41330	10277	30	True				
ANR	10611	Statement	==	1351:126:41332:41333	10277	31	True				
ANR	10612	Statement	SUCCESS	1351:129:41335:41341	10277	32	True				
ANR	10613	Statement	)	1351:136:41342:41342	10277	33	True				
ANR	10614	CompoundStatement		42:138:1540:1540	10277	34					
ANR	10615	IfStatement	if ( retval2 != NULL )		10277	0					
ANR	10616	Condition	retval2 != NULL	1352:10:41356:41370	10277	0	True				
ANR	10617	EqualityExpression	retval2 != NULL		10277	0		!=			
ANR	10618	Identifier	retval2		10277	0					
ANR	10619	Identifier	NULL		10277	1					
ANR	10620	CompoundStatement		43:27:1569:1569	10277	1					
ANR	10621	ExpressionStatement	zval_ptr_dtor ( & retval2 )	1353:7:41382:41405	10277	0	True				
ANR	10622	CallExpression	zval_ptr_dtor ( & retval2 )		10277	0					
ANR	10623	Callee	zval_ptr_dtor		10277	0					
ANR	10624	Identifier	zval_ptr_dtor		10277	0					
ANR	10625	ArgumentList	& retval2		10277	1					
ANR	10626	Argument	& retval2		10277	0					
ANR	10627	UnaryOperationExpression	& retval2		10277	0					
ANR	10628	UnaryOperator	&		10277	0					
ANR	10629	Identifier	retval2		10277	1					
ANR	10630	IfStatement	if ( EG ( exception ) )		10277	1					
ANR	10631	Condition	EG ( exception )	1355:10:41425:41437	10277	0	True				
ANR	10632	CallExpression	EG ( exception )		10277	0					
ANR	10633	Callee	EG		10277	0					
ANR	10634	Identifier	EG		10277	0					
ANR	10635	ArgumentList	exception		10277	1					
ANR	10636	Argument	exception		10277	0					
ANR	10637	Identifier	exception		10277	0					
ANR	10638	CompoundStatement		46:25:1636:1636	10277	1					
ANR	10639	ExpressionStatement	zval_ptr_dtor ( & EG ( exception ) )	1356:7:41449:41478	10277	0	True				
ANR	10640	CallExpression	zval_ptr_dtor ( & EG ( exception ) )		10277	0					
ANR	10641	Callee	zval_ptr_dtor		10277	0					
ANR	10642	Identifier	zval_ptr_dtor		10277	0					
ANR	10643	ArgumentList	& EG ( exception )		10277	1					
ANR	10644	Argument	& EG ( exception )		10277	0					
ANR	10645	UnaryOperationExpression	& EG ( exception )		10277	0					
ANR	10646	UnaryOperator	&		10277	0					
ANR	10647	CallExpression	EG ( exception )		10277	1					
ANR	10648	Callee	EG		10277	0					
ANR	10649	Identifier	EG		10277	0					
ANR	10650	ArgumentList	exception		10277	1					
ANR	10651	Argument	exception		10277	0					
ANR	10652	Identifier	exception		10277	0					
ANR	10653	ExpressionStatement	EG ( exception ) = NULL	1357:7:41487:41507	10277	1	True				
ANR	10654	AssignmentExpression	EG ( exception ) = NULL		10277	0		=			
ANR	10655	CallExpression	EG ( exception )		10277	0					
ANR	10656	Callee	EG		10277	0					
ANR	10657	Identifier	EG		10277	0					
ANR	10658	ArgumentList	exception		10277	1					
ANR	10659	Argument	exception		10277	0					
ANR	10660	Identifier	exception		10277	0					
ANR	10661	Identifier	NULL		10277	1					
ANR	10662	ExpressionStatement	zval_ptr_dtor ( & old_exception )	1359:6:41523:41552	10277	2	True				
ANR	10663	CallExpression	zval_ptr_dtor ( & old_exception )		10277	0					
ANR	10664	Callee	zval_ptr_dtor		10277	0					
ANR	10665	Identifier	zval_ptr_dtor		10277	0					
ANR	10666	ArgumentList	& old_exception		10277	1					
ANR	10667	Argument	& old_exception		10277	0					
ANR	10668	UnaryOperationExpression	& old_exception		10277	0					
ANR	10669	UnaryOperator	&		10277	0					
ANR	10670	Identifier	old_exception		10277	1					
ANR	10671	ElseStatement	else		10277	0					
ANR	10672	CompoundStatement		51:12:1762:1762	10277	0					
ANR	10673	ExpressionStatement	EG ( exception ) = old_exception	1361:6:41574:41603	10277	0	True				
ANR	10674	AssignmentExpression	EG ( exception ) = old_exception		10277	0		=			
ANR	10675	CallExpression	EG ( exception )		10277	0					
ANR	10676	Callee	EG		10277	0					
ANR	10677	Identifier	EG		10277	0					
ANR	10678	ArgumentList	exception		10277	1					
ANR	10679	Argument	exception		10277	0					
ANR	10680	Identifier	exception		10277	0					
ANR	10681	Identifier	old_exception		10277	1					
ANR	10682	Statement	zend_exception_error	1362:6:41611:41630	10277	1	True				
ANR	10683	Statement	(	1362:26:41631:41631	10277	2	True				
ANR	10684	Statement	EG	1362:27:41632:41633	10277	3	True				
ANR	10685	Statement	(	1362:29:41634:41634	10277	4	True				
ANR	10686	Statement	exception	1362:30:41635:41643	10277	5	True				
ANR	10687	Statement	)	1362:39:41644:41644	10277	6	True				
ANR	10688	Statement	","	1362:40:41645:41645	10277	7	True				
ANR	10689	Statement	E_ERROR	1362:42:41647:41653	10277	8	True				
ANR	10690	Statement	TSRMLS_CC	1362:50:41655:41663	10277	9	True				
ANR	10691	Statement	)	1362:59:41664:41664	10277	10	True				
ANR	10692	ExpressionStatement		1362:60:41665:41665	10277	11	True				
ANR	10693	ElseStatement	else		10277	0					
ANR	10694	CompoundStatement		55:11:1881:1881	10277	0					
ANR	10695	Statement	zend_exception_error	1365:5:41692:41711	10277	0	True				
ANR	10696	Statement	(	1365:25:41712:41712	10277	1	True				
ANR	10697	Statement	EG	1365:26:41713:41714	10277	2	True				
ANR	10698	Statement	(	1365:28:41715:41715	10277	3	True				
ANR	10699	Statement	exception	1365:29:41716:41724	10277	4	True				
ANR	10700	Statement	)	1365:38:41725:41725	10277	5	True				
ANR	10701	Statement	","	1365:39:41726:41726	10277	6	True				
ANR	10702	Statement	E_ERROR	1365:41:41728:41734	10277	7	True				
ANR	10703	Statement	TSRMLS_CC	1365:49:41736:41744	10277	8	True				
ANR	10704	Statement	)	1365:58:41745:41745	10277	9	True				
ANR	10705	ExpressionStatement		1365:59:41746:41746	10277	10	True				
ANR	10706	Statement	destroy_op_array	1368:3:41762:41777	10277	12	True				
ANR	10707	Statement	(	1368:19:41778:41778	10277	13	True				
ANR	10708	Statement	EG	1368:20:41779:41780	10277	14	True				
ANR	10709	Statement	(	1368:22:41781:41781	10277	15	True				
ANR	10710	Statement	active_op_array	1368:23:41782:41796	10277	16	True				
ANR	10711	Statement	)	1368:38:41797:41797	10277	17	True				
ANR	10712	Statement	TSRMLS_CC	1368:40:41799:41807	10277	18	True				
ANR	10713	Statement	)	1368:49:41808:41808	10277	19	True				
ANR	10714	ExpressionStatement		1368:50:41809:41809	10277	20	True				
ANR	10715	ExpressionStatement	efree ( EG ( active_op_array ) )	1369:3:41814:41840	10277	21	True				
ANR	10716	CallExpression	efree ( EG ( active_op_array ) )		10277	0					
ANR	10717	Callee	efree		10277	0					
ANR	10718	Identifier	efree		10277	0					
ANR	10719	ArgumentList	EG ( active_op_array )		10277	1					
ANR	10720	Argument	EG ( active_op_array )		10277	0					
ANR	10721	CallExpression	EG ( active_op_array )		10277	0					
ANR	10722	Callee	EG		10277	0					
ANR	10723	Identifier	EG		10277	0					
ANR	10724	ArgumentList	active_op_array		10277	1					
ANR	10725	Argument	active_op_array		10277	0					
ANR	10726	Identifier	active_op_array		10277	0					
ANR	10727	ElseStatement	else		10277	0					
ANR	10728	IfStatement	if ( type == ZEND_REQUIRE )		10277	0					
ANR	10729	Condition	type == ZEND_REQUIRE	1370:13:41855:41872	10277	0	True				
ANR	10730	EqualityExpression	type == ZEND_REQUIRE		10277	0		==			
ANR	10731	Identifier	type		10277	0					
ANR	10732	Identifier	ZEND_REQUIRE		10277	1					
ANR	10733	CompoundStatement		61:33:2071:2071	10277	1					
ANR	10734	ExpressionStatement	va_end ( files )	1371:3:41880:41893	10277	0	True				
ANR	10735	CallExpression	va_end ( files )		10277	0					
ANR	10736	Callee	va_end		10277	0					
ANR	10737	Identifier	va_end		10277	0					
ANR	10738	ArgumentList	files		10277	1					
ANR	10739	Argument	files		10277	0					
ANR	10740	Identifier	files		10277	0					
ANR	10741	ExpressionStatement	EG ( active_op_array ) = orig_op_array	1372:3:41898:41933	10277	1	True				
ANR	10742	AssignmentExpression	EG ( active_op_array ) = orig_op_array		10277	0		=			
ANR	10743	CallExpression	EG ( active_op_array )		10277	0					
ANR	10744	Callee	EG		10277	0					
ANR	10745	Identifier	EG		10277	0					
ANR	10746	ArgumentList	active_op_array		10277	1					
ANR	10747	Argument	active_op_array		10277	0					
ANR	10748	Identifier	active_op_array		10277	0					
ANR	10749	Identifier	orig_op_array		10277	1					
ANR	10750	ExpressionStatement	EG ( return_value_ptr_ptr ) = orig_retval_ptr_ptr	1373:3:41938:41984	10277	2	True				
ANR	10751	AssignmentExpression	EG ( return_value_ptr_ptr ) = orig_retval_ptr_ptr		10277	0		=			
ANR	10752	CallExpression	EG ( return_value_ptr_ptr )		10277	0					
ANR	10753	Callee	EG		10277	0					
ANR	10754	Identifier	EG		10277	0					
ANR	10755	ArgumentList	return_value_ptr_ptr		10277	1					
ANR	10756	Argument	return_value_ptr_ptr		10277	0					
ANR	10757	Identifier	return_value_ptr_ptr		10277	0					
ANR	10758	Identifier	orig_retval_ptr_ptr		10277	1					
ANR	10759	ExpressionStatement	CG ( interactive ) = orig_interactive	1374:12:41998:42032	10277	3	True				
ANR	10760	AssignmentExpression	CG ( interactive ) = orig_interactive		10277	0		=			
ANR	10761	CallExpression	CG ( interactive )		10277	0					
ANR	10762	Callee	CG		10277	0					
ANR	10763	Identifier	CG		10277	0					
ANR	10764	ArgumentList	interactive		10277	1					
ANR	10765	Argument	interactive		10277	0					
ANR	10766	Identifier	interactive		10277	0					
ANR	10767	Identifier	orig_interactive		10277	1					
ANR	10768	ReturnStatement	return FAILURE ;	1375:3:42037:42051	10277	4	True				
ANR	10769	Identifier	FAILURE		10277	0					
ANR	10770	ExpressionStatement	va_end ( files )	1378:1:42061:42074	10277	8	True				
ANR	10771	CallExpression	va_end ( files )		10277	0					
ANR	10772	Callee	va_end		10277	0					
ANR	10773	Identifier	va_end		10277	0					
ANR	10774	ArgumentList	files		10277	1					
ANR	10775	Argument	files		10277	0					
ANR	10776	Identifier	files		10277	0					
ANR	10777	ExpressionStatement	EG ( active_op_array ) = orig_op_array	1379:1:42077:42112	10277	9	True				
ANR	10778	AssignmentExpression	EG ( active_op_array ) = orig_op_array		10277	0		=			
ANR	10779	CallExpression	EG ( active_op_array )		10277	0					
ANR	10780	Callee	EG		10277	0					
ANR	10781	Identifier	EG		10277	0					
ANR	10782	ArgumentList	active_op_array		10277	1					
ANR	10783	Argument	active_op_array		10277	0					
ANR	10784	Identifier	active_op_array		10277	0					
ANR	10785	Identifier	orig_op_array		10277	1					
ANR	10786	ExpressionStatement	EG ( return_value_ptr_ptr ) = orig_retval_ptr_ptr	1380:1:42115:42161	10277	10	True				
ANR	10787	AssignmentExpression	EG ( return_value_ptr_ptr ) = orig_retval_ptr_ptr		10277	0		=			
ANR	10788	CallExpression	EG ( return_value_ptr_ptr )		10277	0					
ANR	10789	Callee	EG		10277	0					
ANR	10790	Identifier	EG		10277	0					
ANR	10791	ArgumentList	return_value_ptr_ptr		10277	1					
ANR	10792	Argument	return_value_ptr_ptr		10277	0					
ANR	10793	Identifier	return_value_ptr_ptr		10277	0					
ANR	10794	Identifier	orig_retval_ptr_ptr		10277	1					
ANR	10795	ExpressionStatement	CG ( interactive ) = orig_interactive	1381:4:42167:42201	10277	11	True				
ANR	10796	AssignmentExpression	CG ( interactive ) = orig_interactive		10277	0		=			
ANR	10797	CallExpression	CG ( interactive )		10277	0					
ANR	10798	Callee	CG		10277	0					
ANR	10799	Identifier	CG		10277	0					
ANR	10800	ArgumentList	interactive		10277	1					
ANR	10801	Argument	interactive		10277	0					
ANR	10802	Identifier	interactive		10277	0					
ANR	10803	Identifier	orig_interactive		10277	1					
ANR	10804	ReturnStatement	return SUCCESS ;	1383:1:42205:42219	10277	12	True				
ANR	10805	Identifier	SUCCESS		10277	0					
ANR	10806	ReturnType	ZEND_API int		10277	1					
ANR	10807	Identifier	zend_execute_scripts		10277	2					
ANR	10808	ParameterList	"int type TSRMLS_DC , zval * * retval , int file_count"		10277	3					
ANR	10809	Parameter	int type TSRMLS_DC	1309:34:39737:39754	10277	0	True				
ANR	10810	ParameterType	int type		10277	0					
ANR	10811	Identifier	TSRMLS_DC		10277	1					
ANR	10812	Parameter	zval * * retval	1309:54:39757:39769	10277	1	True				
ANR	10813	ParameterType	zval * *		10277	0					
ANR	10814	Identifier	retval		10277	1					
ANR	10815	Parameter	int file_count	1309:69:39772:39785	10277	2	True				
ANR	10816	ParameterType	int		10277	0					
ANR	10817	Identifier	file_count		10277	1					
ANR	10818	CFGEntryNode	ENTRY		10277		True				
ANR	10819	CFGExitNode	EXIT		10277		True				
ANR	10820	Symbol	return_value_ptr_ptr		10277						
ANR	10821	Symbol	exception		10277						
ANR	10822	Symbol	interactive		10277						
ANR	10823	Symbol	orig_user_exception_handler		10277						
ANR	10824	Symbol	type		10277						
ANR	10825	Symbol	TSRMLS_DC		10277						
ANR	10826	Symbol	* * file_handle		10277						
ANR	10827	Symbol	& EG		10277						
ANR	10828	Symbol	& old_exception		10277						
ANR	10829	Symbol	* file_handle		10277						
ANR	10830	Symbol	user_exception_handler		10277						
ANR	10831	Symbol	dummy		10277						
ANR	10832	Symbol	strlen		10277						
ANR	10833	Symbol	& dummy		10277						
ANR	10834	Symbol	TSRMLS_C		10277						
ANR	10835	Symbol	orig_op_array		10277						
ANR	10836	Symbol	* file_handle -> filename		10277						
ANR	10837	Symbol	included_files		10277						
ANR	10838	Symbol	orig_retval_ptr_ptr		10277						
ANR	10839	Symbol	orig_interactive		10277						
ANR	10840	Symbol	old_exception		10277						
ANR	10841	Symbol	* params		10277						
ANR	10842	Symbol	& retval2		10277						
ANR	10843	Symbol	file_count		10277						
ANR	10844	Symbol	EG		10277						
ANR	10845	Symbol	NULL		10277						
ANR	10846	Symbol	SUCCESS		10277						
ANR	10847	Symbol	CG		10277						
ANR	10848	Symbol	active_op_array		10277						
ANR	10849	Symbol	i		10277						
ANR	10850	Symbol	retval2		10277						
ANR	10851	Symbol	params		10277						
ANR	10852	Symbol	file_handle		10277						
ANR	10853	Symbol	FAILURE		10277						
ANR	10854	Symbol	retval		10277						
ANR	10855	Symbol	file_handle -> opened_path		10277						
ANR	10856	Symbol	file_handle -> filename		10277						
ANR	10857	Symbol	ZEND_REQUIRE		10277						
ANR	10858	Symbol	files		10277						
ANR	10859	DeclStmt									
ANR	10860	Decl							const char	const char *	cur_filename
ANR	10861	DeclStmt									
ANR	10862	Decl							int	int	cur_lineno
ANR	10863	DeclStmt									
ANR	10864	Decl							char	char *	compiled_string_description
ANR	10865	Function	free_estring	1411:0:42984:43044							
ANR	10866	FunctionDef	free_estring (char * * str_p)		10865	0					
ANR	10867	CompoundStatement		1412:0:43026:43044	10865	0					
ANR	10868	ExpressionStatement	efree ( * str_p )	1413:1:43029:43042	10865	0	True				
ANR	10869	CallExpression	efree ( * str_p )		10865	0					
ANR	10870	Callee	efree		10865	0					
ANR	10871	Identifier	efree		10865	0					
ANR	10872	ArgumentList	* str_p		10865	1					
ANR	10873	Argument	* str_p		10865	0					
ANR	10874	UnaryOperationExpression	* str_p		10865	0					
ANR	10875	UnaryOperator	*		10865	0					
ANR	10876	Identifier	str_p		10865	1					
ANR	10877	ReturnType	void		10865	1					
ANR	10878	Identifier	free_estring		10865	2					
ANR	10879	ParameterList	char * * str_p		10865	3					
ANR	10880	Parameter	char * * str_p	1411:18:43002:43013	10865	0	True				
ANR	10881	ParameterType	char * *		10865	0					
ANR	10882	Identifier	str_p		10865	1					
ANR	10883	CFGEntryNode	ENTRY		10865		True				
ANR	10884	CFGExitNode	EXIT		10865		True				
ANR	10885	Symbol	* str_p		10865						
ANR	10886	Symbol	str_p		10865						
