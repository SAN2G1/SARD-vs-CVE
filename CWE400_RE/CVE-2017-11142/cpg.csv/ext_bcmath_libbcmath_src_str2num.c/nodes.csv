command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	141637	File	data/converged/CVE-2017-11142_php-src/ext_bcmath_libbcmath_src_str2num.c								
ANR	141638	Function	bc_str2num	43:0:1467:2945							
ANR	141639	FunctionDef	"bc_str2num (bc_num * num , char * str , int scale TSRMLS_DC)"		141638	0					
ANR	141640	CompoundStatement		45:0:1529:2945	141638	0					
ANR	141641	IdentifierDeclStatement	"int digits , strscale ;"	46:2:1533:1553	141638	0	True				
ANR	141642	IdentifierDecl	digits		141638	0					
ANR	141643	IdentifierDeclType	int		141638	0					
ANR	141644	Identifier	digits		141638	1					
ANR	141645	IdentifierDecl	strscale		141638	1					
ANR	141646	IdentifierDeclType	int		141638	0					
ANR	141647	Identifier	strscale		141638	1					
ANR	141648	IdentifierDeclStatement	"char * ptr , * nptr ;"	47:2:1557:1573	141638	1	True				
ANR	141649	IdentifierDecl	* ptr		141638	0					
ANR	141650	IdentifierDeclType	char *		141638	0					
ANR	141651	Identifier	ptr		141638	1					
ANR	141652	IdentifierDecl	* nptr		141638	1					
ANR	141653	IdentifierDeclType	char *		141638	0					
ANR	141654	Identifier	nptr		141638	1					
ANR	141655	IdentifierDeclStatement	char zero_int ;	48:2:1577:1590	141638	2	True				
ANR	141656	IdentifierDecl	zero_int		141638	0					
ANR	141657	IdentifierDeclType	char		141638	0					
ANR	141658	Identifier	zero_int		141638	1					
ANR	141659	ExpressionStatement	bc_free_num ( num )	51:2:1616:1633	141638	3	True				
ANR	141660	CallExpression	bc_free_num ( num )		141638	0					
ANR	141661	Callee	bc_free_num		141638	0					
ANR	141662	Identifier	bc_free_num		141638	0					
ANR	141663	ArgumentList	num		141638	1					
ANR	141664	Argument	num		141638	0					
ANR	141665	Identifier	num		141638	0					
ANR	141666	ExpressionStatement	ptr = str	54:2:1687:1696	141638	4	True				
ANR	141667	AssignmentExpression	ptr = str		141638	0		=			
ANR	141668	Identifier	ptr		141638	0					
ANR	141669	Identifier	str		141638	1					
ANR	141670	ExpressionStatement	digits = 0	55:2:1700:1710	141638	5	True				
ANR	141671	AssignmentExpression	digits = 0		141638	0		=			
ANR	141672	Identifier	digits		141638	0					
ANR	141673	PrimaryExpression	0		141638	1					
ANR	141674	ExpressionStatement	strscale = 0	56:2:1714:1726	141638	6	True				
ANR	141675	AssignmentExpression	strscale = 0		141638	0		=			
ANR	141676	Identifier	strscale		141638	0					
ANR	141677	PrimaryExpression	0		141638	1					
ANR	141678	ExpressionStatement	zero_int = FALSE	57:2:1730:1746	141638	7	True				
ANR	141679	AssignmentExpression	zero_int = FALSE		141638	0		=			
ANR	141680	Identifier	zero_int		141638	0					
ANR	141681	Identifier	FALSE		141638	1					
ANR	141682	IfStatement	if ( ( * ptr == '+' ) || ( * ptr == '-' ) )		141638	8					
ANR	141683	Condition	( * ptr == '+' ) || ( * ptr == '-' )	58:7:1755:1784	141638	0	True				
ANR	141684	OrExpression	( * ptr == '+' ) || ( * ptr == '-' )		141638	0		||			
ANR	141685	EqualityExpression	* ptr == '+'		141638	0		==			
ANR	141686	UnaryOperationExpression	* ptr		141638	0					
ANR	141687	UnaryOperator	*		141638	0					
ANR	141688	Identifier	ptr		141638	1					
ANR	141689	PrimaryExpression	'+'		141638	1					
ANR	141690	EqualityExpression	* ptr == '-'		141638	1		==			
ANR	141691	UnaryOperationExpression	* ptr		141638	0					
ANR	141692	UnaryOperator	*		141638	0					
ANR	141693	Identifier	ptr		141638	1					
ANR	141694	PrimaryExpression	'-'		141638	1					
ANR	141695	ExpressionStatement	ptr ++	58:40:1788:1793	141638	1	True				
ANR	141696	PostIncDecOperationExpression	ptr ++		141638	0					
ANR	141697	Identifier	ptr		141638	0					
ANR	141698	IncDec	++		141638	1					
ANR	141699	WhileStatement	while ( * ptr == '0' )		141638	9					
ANR	141700	Condition	* ptr == '0'	59:9:1816:1826	141638	0	True				
ANR	141701	EqualityExpression	* ptr == '0'		141638	0		==			
ANR	141702	UnaryOperationExpression	* ptr		141638	0					
ANR	141703	UnaryOperator	*		141638	0					
ANR	141704	Identifier	ptr		141638	1					
ANR	141705	PrimaryExpression	'0'		141638	1					
ANR	141706	ExpressionStatement	ptr ++	59:22:1829:1834	141638	1	True				
ANR	141707	PostIncDecOperationExpression	ptr ++		141638	0					
ANR	141708	Identifier	ptr		141638	0					
ANR	141709	IncDec	++		141638	1					
ANR	141710	WhileStatement	while ( isdigit ( ( int ) * ptr ) )		141638	10					
ANR	141711	Condition	isdigit ( ( int ) * ptr )	60:9:1873:1890	141638	0	True				
ANR	141712	CallExpression	isdigit ( ( int ) * ptr )		141638	0					
ANR	141713	Callee	isdigit		141638	0					
ANR	141714	Identifier	isdigit		141638	0					
ANR	141715	ArgumentList	( int ) * ptr		141638	1					
ANR	141716	Argument	( int ) * ptr		141638	0					
ANR	141717	CastExpression	( int ) * ptr		141638	0					
ANR	141718	CastTarget	int		141638	0					
ANR	141719	UnaryOperationExpression	* ptr		141638	1					
ANR	141720	UnaryOperator	*		141638	0					
ANR	141721	Identifier	ptr		141638	1					
ANR	141722	ExpressionStatement	"ptr ++ , digits ++"	60:29:1893:1908	141638	1	True				
ANR	141723	Expression	"ptr ++ , digits ++"		141638	0					
ANR	141724	PostIncDecOperationExpression	ptr ++		141638	0					
ANR	141725	Identifier	ptr		141638	0					
ANR	141726	IncDec	++		141638	1					
ANR	141727	PostIncDecOperationExpression	digits ++		141638	1					
ANR	141728	Identifier	digits		141638	0					
ANR	141729	IncDec	++		141638	1					
ANR	141730	IfStatement	if ( * ptr == '.' )		141638	11					
ANR	141731	Condition	* ptr == '.'	61:6:1929:1939	141638	0	True				
ANR	141732	EqualityExpression	* ptr == '.'		141638	0		==			
ANR	141733	UnaryOperationExpression	* ptr		141638	0					
ANR	141734	UnaryOperator	*		141638	0					
ANR	141735	Identifier	ptr		141638	1					
ANR	141736	PrimaryExpression	'.'		141638	1					
ANR	141737	ExpressionStatement	ptr ++	61:19:1942:1947	141638	1	True				
ANR	141738	PostIncDecOperationExpression	ptr ++		141638	0					
ANR	141739	Identifier	ptr		141638	0					
ANR	141740	IncDec	++		141638	1					
ANR	141741	WhileStatement	while ( isdigit ( ( int ) * ptr ) )		141638	12					
ANR	141742	Condition	isdigit ( ( int ) * ptr )	62:9:1980:1997	141638	0	True				
ANR	141743	CallExpression	isdigit ( ( int ) * ptr )		141638	0					
ANR	141744	Callee	isdigit		141638	0					
ANR	141745	Identifier	isdigit		141638	0					
ANR	141746	ArgumentList	( int ) * ptr		141638	1					
ANR	141747	Argument	( int ) * ptr		141638	0					
ANR	141748	CastExpression	( int ) * ptr		141638	0					
ANR	141749	CastTarget	int		141638	0					
ANR	141750	UnaryOperationExpression	* ptr		141638	1					
ANR	141751	UnaryOperator	*		141638	0					
ANR	141752	Identifier	ptr		141638	1					
ANR	141753	ExpressionStatement	"ptr ++ , strscale ++"	62:29:2000:2017	141638	1	True				
ANR	141754	Expression	"ptr ++ , strscale ++"		141638	0					
ANR	141755	PostIncDecOperationExpression	ptr ++		141638	0					
ANR	141756	Identifier	ptr		141638	0					
ANR	141757	IncDec	++		141638	1					
ANR	141758	PostIncDecOperationExpression	strscale ++		141638	1					
ANR	141759	Identifier	strscale		141638	0					
ANR	141760	IncDec	++		141638	1					
ANR	141761	IfStatement	if ( ( * ptr != '\\0' ) || ( digits + strscale == 0 ) )		141638	13					
ANR	141762	Condition	( * ptr != '\\0' ) || ( digits + strscale == 0 )	63:6:2038:2077	141638	0	True				
ANR	141763	OrExpression	( * ptr != '\\0' ) || ( digits + strscale == 0 )		141638	0		||			
ANR	141764	EqualityExpression	* ptr != '\\0'		141638	0		!=			
ANR	141765	UnaryOperationExpression	* ptr		141638	0					
ANR	141766	UnaryOperator	*		141638	0					
ANR	141767	Identifier	ptr		141638	1					
ANR	141768	PrimaryExpression	'\\0'		141638	1					
ANR	141769	EqualityExpression	digits + strscale == 0		141638	1		==			
ANR	141770	AdditiveExpression	digits + strscale		141638	0		+			
ANR	141771	Identifier	digits		141638	0					
ANR	141772	Identifier	strscale		141638	1					
ANR	141773	PrimaryExpression	0		141638	1					
ANR	141774	CompoundStatement		20:4:554:554	141638	1					
ANR	141775	ExpressionStatement	* num = bc_copy_num ( BCG ( _zero_ ) )	65:6:2092:2124	141638	0	True				
ANR	141776	AssignmentExpression	* num = bc_copy_num ( BCG ( _zero_ ) )		141638	0		=			
ANR	141777	UnaryOperationExpression	* num		141638	0					
ANR	141778	UnaryOperator	*		141638	0					
ANR	141779	Identifier	num		141638	1					
ANR	141780	CallExpression	bc_copy_num ( BCG ( _zero_ ) )		141638	1					
ANR	141781	Callee	bc_copy_num		141638	0					
ANR	141782	Identifier	bc_copy_num		141638	0					
ANR	141783	ArgumentList	BCG ( _zero_ )		141638	1					
ANR	141784	Argument	BCG ( _zero_ )		141638	0					
ANR	141785	CallExpression	BCG ( _zero_ )		141638	0					
ANR	141786	Callee	BCG		141638	0					
ANR	141787	Identifier	BCG		141638	0					
ANR	141788	ArgumentList	_zero_		141638	1					
ANR	141789	Argument	_zero_		141638	0					
ANR	141790	Identifier	_zero_		141638	0					
ANR	141791	ReturnStatement	return ;	66:6:2132:2138	141638	1	True				
ANR	141792	ExpressionStatement	"strscale = MIN ( strscale , scale )"	70:2:2216:2247	141638	14	True				
ANR	141793	AssignmentExpression	"strscale = MIN ( strscale , scale )"		141638	0		=			
ANR	141794	Identifier	strscale		141638	0					
ANR	141795	CallExpression	"MIN ( strscale , scale )"		141638	1					
ANR	141796	Callee	MIN		141638	0					
ANR	141797	Identifier	MIN		141638	0					
ANR	141798	ArgumentList	strscale		141638	1					
ANR	141799	Argument	strscale		141638	0					
ANR	141800	Identifier	strscale		141638	0					
ANR	141801	Argument	scale		141638	1					
ANR	141802	Identifier	scale		141638	0					
ANR	141803	IfStatement	if ( digits == 0 )		141638	15					
ANR	141804	Condition	digits == 0	71:6:2255:2265	141638	0	True				
ANR	141805	EqualityExpression	digits == 0		141638	0		==			
ANR	141806	Identifier	digits		141638	0					
ANR	141807	PrimaryExpression	0		141638	1					
ANR	141808	CompoundStatement		28:4:742:742	141638	1					
ANR	141809	ExpressionStatement	zero_int = TRUE	73:6:2280:2295	141638	0	True				
ANR	141810	AssignmentExpression	zero_int = TRUE		141638	0		=			
ANR	141811	Identifier	zero_int		141638	0					
ANR	141812	Identifier	TRUE		141638	1					
ANR	141813	ExpressionStatement	digits = 1	74:6:2303:2313	141638	1	True				
ANR	141814	AssignmentExpression	digits = 1		141638	0		=			
ANR	141815	Identifier	digits		141638	0					
ANR	141816	PrimaryExpression	1		141638	1					
ANR	141817	ExpressionStatement	"* num = bc_new_num ( digits , strscale )"	76:2:2323:2359	141638	16	True				
ANR	141818	AssignmentExpression	"* num = bc_new_num ( digits , strscale )"		141638	0		=			
ANR	141819	UnaryOperationExpression	* num		141638	0					
ANR	141820	UnaryOperator	*		141638	0					
ANR	141821	Identifier	num		141638	1					
ANR	141822	CallExpression	"bc_new_num ( digits , strscale )"		141638	1					
ANR	141823	Callee	bc_new_num		141638	0					
ANR	141824	Identifier	bc_new_num		141638	0					
ANR	141825	ArgumentList	digits		141638	1					
ANR	141826	Argument	digits		141638	0					
ANR	141827	Identifier	digits		141638	0					
ANR	141828	Argument	strscale		141638	1					
ANR	141829	Identifier	strscale		141638	0					
ANR	141830	ExpressionStatement	ptr = str	79:2:2396:2405	141638	17	True				
ANR	141831	AssignmentExpression	ptr = str		141638	0		=			
ANR	141832	Identifier	ptr		141638	0					
ANR	141833	Identifier	str		141638	1					
ANR	141834	IfStatement	if ( * ptr == '-' )		141638	18					
ANR	141835	Condition	* ptr == '-'	80:6:2413:2423	141638	0	True				
ANR	141836	EqualityExpression	* ptr == '-'		141638	0		==			
ANR	141837	UnaryOperationExpression	* ptr		141638	0					
ANR	141838	UnaryOperator	*		141638	0					
ANR	141839	Identifier	ptr		141638	1					
ANR	141840	PrimaryExpression	'-'		141638	1					
ANR	141841	CompoundStatement		37:4:900:900	141638	1					
ANR	141842	ExpressionStatement	( * num ) -> n_sign = MINUS	82:6:2438:2460	141638	0	True				
ANR	141843	AssignmentExpression	( * num ) -> n_sign = MINUS		141638	0		=			
ANR	141844	PtrMemberAccess	( * num ) -> n_sign		141638	0					
ANR	141845	UnaryOperationExpression	* num		141638	0					
ANR	141846	UnaryOperator	*		141638	0					
ANR	141847	Identifier	num		141638	1					
ANR	141848	Identifier	n_sign		141638	1					
ANR	141849	Identifier	MINUS		141638	1					
ANR	141850	ExpressionStatement	ptr ++	83:6:2468:2473	141638	1	True				
ANR	141851	PostIncDecOperationExpression	ptr ++		141638	0					
ANR	141852	Identifier	ptr		141638	0					
ANR	141853	IncDec	++		141638	1					
ANR	141854	ElseStatement	else		141638	0					
ANR	141855	CompoundStatement		42:4:962:962	141638	0					
ANR	141856	ExpressionStatement	( * num ) -> n_sign = PLUS	87:6:2500:2521	141638	0	True				
ANR	141857	AssignmentExpression	( * num ) -> n_sign = PLUS		141638	0		=			
ANR	141858	PtrMemberAccess	( * num ) -> n_sign		141638	0					
ANR	141859	UnaryOperationExpression	* num		141638	0					
ANR	141860	UnaryOperator	*		141638	0					
ANR	141861	Identifier	num		141638	1					
ANR	141862	Identifier	n_sign		141638	1					
ANR	141863	Identifier	PLUS		141638	1					
ANR	141864	IfStatement	if ( * ptr == '+' )		141638	1					
ANR	141865	Condition	* ptr == '+'	88:10:2533:2543	141638	0	True				
ANR	141866	EqualityExpression	* ptr == '+'		141638	0		==			
ANR	141867	UnaryOperationExpression	* ptr		141638	0					
ANR	141868	UnaryOperator	*		141638	0					
ANR	141869	Identifier	ptr		141638	1					
ANR	141870	PrimaryExpression	'+'		141638	1					
ANR	141871	ExpressionStatement	ptr ++	88:23:2546:2551	141638	1	True				
ANR	141872	PostIncDecOperationExpression	ptr ++		141638	0					
ANR	141873	Identifier	ptr		141638	0					
ANR	141874	IncDec	++		141638	1					
ANR	141875	WhileStatement	while ( * ptr == '0' )		141638	19					
ANR	141876	Condition	* ptr == '0'	90:9:2568:2578	141638	0	True				
ANR	141877	EqualityExpression	* ptr == '0'		141638	0		==			
ANR	141878	UnaryOperationExpression	* ptr		141638	0					
ANR	141879	UnaryOperator	*		141638	0					
ANR	141880	Identifier	ptr		141638	1					
ANR	141881	PrimaryExpression	'0'		141638	1					
ANR	141882	ExpressionStatement	ptr ++	90:22:2581:2586	141638	1	True				
ANR	141883	PostIncDecOperationExpression	ptr ++		141638	0					
ANR	141884	Identifier	ptr		141638	0					
ANR	141885	IncDec	++		141638	1					
ANR	141886	ExpressionStatement	nptr = ( * num ) -> n_value	91:2:2618:2640	141638	20	True				
ANR	141887	AssignmentExpression	nptr = ( * num ) -> n_value		141638	0		=			
ANR	141888	Identifier	nptr		141638	0					
ANR	141889	PtrMemberAccess	( * num ) -> n_value		141638	1					
ANR	141890	UnaryOperationExpression	* num		141638	0					
ANR	141891	UnaryOperator	*		141638	0					
ANR	141892	Identifier	num		141638	1					
ANR	141893	Identifier	n_value		141638	1					
ANR	141894	IfStatement	if ( zero_int )		141638	21					
ANR	141895	Condition	zero_int	92:6:2648:2655	141638	0	True				
ANR	141896	Identifier	zero_int		141638	0					
ANR	141897	CompoundStatement		49:4:1132:1132	141638	1					
ANR	141898	ExpressionStatement	* nptr ++ = 0	94:6:2670:2681	141638	0	True				
ANR	141899	AssignmentExpression	* nptr ++ = 0		141638	0		=			
ANR	141900	UnaryOperationExpression	* nptr ++		141638	0					
ANR	141901	UnaryOperator	*		141638	0					
ANR	141902	PostIncDecOperationExpression	nptr ++		141638	1					
ANR	141903	Identifier	nptr		141638	0					
ANR	141904	IncDec	++		141638	1					
ANR	141905	PrimaryExpression	0		141638	1					
ANR	141906	ExpressionStatement	digits = 0	95:6:2689:2699	141638	1	True				
ANR	141907	AssignmentExpression	digits = 0		141638	0		=			
ANR	141908	Identifier	digits		141638	0					
ANR	141909	PrimaryExpression	0		141638	1					
ANR	141910	ForStatement	for ( ; digits > 0 ; digits -- )		141638	22					
ANR	141911	Condition	digits > 0	97:8:2715:2724	141638	0	True				
ANR	141912	RelationalExpression	digits > 0		141638	0		>			
ANR	141913	Identifier	digits		141638	0					
ANR	141914	PrimaryExpression	0		141638	1					
ANR	141915	PostIncDecOperationExpression	digits --	97:20:2727:2734	141638	1	True				
ANR	141916	Identifier	digits		141638	0					
ANR	141917	IncDec	--		141638	1					
ANR	141918	ExpressionStatement	* nptr ++ = CH_VAL ( * ptr ++ )	98:4:2741:2765	141638	2	True				
ANR	141919	AssignmentExpression	* nptr ++ = CH_VAL ( * ptr ++ )		141638	0		=			
ANR	141920	UnaryOperationExpression	* nptr ++		141638	0					
ANR	141921	UnaryOperator	*		141638	0					
ANR	141922	PostIncDecOperationExpression	nptr ++		141638	1					
ANR	141923	Identifier	nptr		141638	0					
ANR	141924	IncDec	++		141638	1					
ANR	141925	CallExpression	CH_VAL ( * ptr ++ )		141638	1					
ANR	141926	Callee	CH_VAL		141638	0					
ANR	141927	Identifier	CH_VAL		141638	0					
ANR	141928	ArgumentList	* ptr ++		141638	1					
ANR	141929	Argument	* ptr ++		141638	0					
ANR	141930	UnaryOperationExpression	* ptr ++		141638	0					
ANR	141931	UnaryOperator	*		141638	0					
ANR	141932	PostIncDecOperationExpression	ptr ++		141638	1					
ANR	141933	Identifier	ptr		141638	0					
ANR	141934	IncDec	++		141638	1					
ANR	141935	IfStatement	if ( strscale > 0 )		141638	23					
ANR	141936	Condition	strscale > 0	102:6:2810:2821	141638	0	True				
ANR	141937	RelationalExpression	strscale > 0		141638	0		>			
ANR	141938	Identifier	strscale		141638	0					
ANR	141939	PrimaryExpression	0		141638	1					
ANR	141940	CompoundStatement		59:4:1298:1298	141638	1					
ANR	141941	ExpressionStatement	ptr ++	104:6:2836:2841	141638	0	True				
ANR	141942	PostIncDecOperationExpression	ptr ++		141638	0					
ANR	141943	Identifier	ptr		141638	0					
ANR	141944	IncDec	++		141638	1					
ANR	141945	ForStatement	for ( ; strscale > 0 ; strscale -- )		141638	1					
ANR	141946	Condition	strscale > 0	105:12:2886:2897	141638	0	True				
ANR	141947	RelationalExpression	strscale > 0		141638	0		>			
ANR	141948	Identifier	strscale		141638	0					
ANR	141949	PrimaryExpression	0		141638	1					
ANR	141950	PostIncDecOperationExpression	strscale --	105:26:2900:2909	141638	1	True				
ANR	141951	Identifier	strscale		141638	0					
ANR	141952	IncDec	--		141638	1					
ANR	141953	ExpressionStatement	* nptr ++ = CH_VAL ( * ptr ++ )	106:1:2913:2937	141638	2	True				
ANR	141954	AssignmentExpression	* nptr ++ = CH_VAL ( * ptr ++ )		141638	0		=			
ANR	141955	UnaryOperationExpression	* nptr ++		141638	0					
ANR	141956	UnaryOperator	*		141638	0					
ANR	141957	PostIncDecOperationExpression	nptr ++		141638	1					
ANR	141958	Identifier	nptr		141638	0					
ANR	141959	IncDec	++		141638	1					
ANR	141960	CallExpression	CH_VAL ( * ptr ++ )		141638	1					
ANR	141961	Callee	CH_VAL		141638	0					
ANR	141962	Identifier	CH_VAL		141638	0					
ANR	141963	ArgumentList	* ptr ++		141638	1					
ANR	141964	Argument	* ptr ++		141638	0					
ANR	141965	UnaryOperationExpression	* ptr ++		141638	0					
ANR	141966	UnaryOperator	*		141638	0					
ANR	141967	PostIncDecOperationExpression	ptr ++		141638	1					
ANR	141968	Identifier	ptr		141638	0					
ANR	141969	IncDec	++		141638	1					
ANR	141970	ReturnType	void		141638	1					
ANR	141971	Identifier	bc_str2num		141638	2					
ANR	141972	ParameterList	"bc_num * num , char * str , int scale TSRMLS_DC"		141638	3					
ANR	141973	Parameter	bc_num * num	44:12:1484:1494	141638	0	True				
ANR	141974	ParameterType	bc_num *		141638	0					
ANR	141975	Identifier	num		141638	1					
ANR	141976	Parameter	char * str	44:25:1497:1505	141638	1	True				
ANR	141977	ParameterType	char *		141638	0					
ANR	141978	Identifier	str		141638	1					
ANR	141979	Parameter	int scale TSRMLS_DC	44:36:1508:1526	141638	2	True				
ANR	141980	ParameterType	int scale		141638	0					
ANR	141981	Identifier	TSRMLS_DC		141638	1					
ANR	141982	CFGEntryNode	ENTRY		141638		True				
ANR	141983	CFGExitNode	EXIT		141638		True				
ANR	141984	Symbol	num		141638						
ANR	141985	Symbol	scale		141638						
ANR	141986	Symbol	* nptr ++		141638						
ANR	141987	Symbol	TSRMLS_DC		141638						
ANR	141988	Symbol	bc_new_num		141638						
ANR	141989	Symbol	bc_copy_num		141638						
ANR	141990	Symbol	MINUS		141638						
ANR	141991	Symbol	CH_VAL		141638						
ANR	141992	Symbol	* ptr		141638						
ANR	141993	Symbol	* * num		141638						
ANR	141994	Symbol	( * num ) -> n_sign		141638						
ANR	141995	Symbol	isdigit		141638						
ANR	141996	Symbol	* ptr ++		141638						
ANR	141997	Symbol	BCG		141638						
ANR	141998	Symbol	TRUE		141638						
ANR	141999	Symbol	zero_int		141638						
ANR	142000	Symbol	ptr		141638						
ANR	142001	Symbol	str		141638						
ANR	142002	Symbol	* num		141638						
ANR	142003	Symbol	nptr		141638						
ANR	142004	Symbol	MIN		141638						
ANR	142005	Symbol	( * num ) -> n_value		141638						
ANR	142006	Symbol	digits		141638						
ANR	142007	Symbol	FALSE		141638						
ANR	142008	Symbol	_zero_		141638						
ANR	142009	Symbol	strscale		141638						
ANR	142010	Symbol	PLUS		141638						
