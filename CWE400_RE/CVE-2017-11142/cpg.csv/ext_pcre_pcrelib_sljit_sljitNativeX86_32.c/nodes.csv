command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1122555	File	data/converged/CVE-2017-11142_php-src/ext_pcre_pcrelib_sljit_sljitNativeX86_32.c								
ANR	1122556	Function	emit_do_imm	29:0:1499:1795							
ANR	1122557	FunctionDef	"emit_do_imm (struct sljit_compiler * compiler , sljit_ub opcode , sljit_sw imm)"		1122556	0					
ANR	1122558	CompoundStatement		30:0:1591:1795	1122556	0					
ANR	1122559	IdentifierDeclStatement	sljit_ub * inst ;	31:1:1594:1608	1122556	0	True				
ANR	1122560	IdentifierDecl	* inst		1122556	0					
ANR	1122561	IdentifierDeclType	sljit_ub *		1122556	0					
ANR	1122562	Identifier	inst		1122556	1					
ANR	1122563	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 + sizeof ( sljit_sw ) )"	33:1:1612:1676	1122556	1	True				
ANR	1122564	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 + sizeof ( sljit_sw ) )"		1122556	0		=			
ANR	1122565	Identifier	inst		1122556	0					
ANR	1122566	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 1 + sizeof ( sljit_sw ) )"		1122556	1					
ANR	1122567	CastTarget	sljit_ub *		1122556	0					
ANR	1122568	CallExpression	"ensure_buf ( compiler , 1 + 1 + sizeof ( sljit_sw ) )"		1122556	1					
ANR	1122569	Callee	ensure_buf		1122556	0					
ANR	1122570	Identifier	ensure_buf		1122556	0					
ANR	1122571	ArgumentList	compiler		1122556	1					
ANR	1122572	Argument	compiler		1122556	0					
ANR	1122573	Identifier	compiler		1122556	0					
ANR	1122574	Argument	1 + 1 + sizeof ( sljit_sw )		1122556	1					
ANR	1122575	AdditiveExpression	1 + 1 + sizeof ( sljit_sw )		1122556	0		+			
ANR	1122576	PrimaryExpression	1		1122556	0					
ANR	1122577	AdditiveExpression	1 + sizeof ( sljit_sw )		1122556	1		+			
ANR	1122578	PrimaryExpression	1		1122556	0					
ANR	1122579	SizeofExpression	sizeof ( sljit_sw )		1122556	1					
ANR	1122580	Sizeof	sizeof		1122556	0					
ANR	1122581	SizeofOperand	sljit_sw		1122556	1					
ANR	1122582	ExpressionStatement	FAIL_IF ( ! inst )	34:1:1679:1693	1122556	2	True				
ANR	1122583	CallExpression	FAIL_IF ( ! inst )		1122556	0					
ANR	1122584	Callee	FAIL_IF		1122556	0					
ANR	1122585	Identifier	FAIL_IF		1122556	0					
ANR	1122586	ArgumentList	! inst		1122556	1					
ANR	1122587	Argument	! inst		1122556	0					
ANR	1122588	UnaryOperationExpression	! inst		1122556	0					
ANR	1122589	UnaryOperator	!		1122556	0					
ANR	1122590	Identifier	inst		1122556	1					
ANR	1122591	ExpressionStatement	INC_SIZE ( 1 + sizeof ( sljit_sw ) )	35:1:1696:1726	1122556	3	True				
ANR	1122592	CallExpression	INC_SIZE ( 1 + sizeof ( sljit_sw ) )		1122556	0					
ANR	1122593	Callee	INC_SIZE		1122556	0					
ANR	1122594	Identifier	INC_SIZE		1122556	0					
ANR	1122595	ArgumentList	1 + sizeof ( sljit_sw )		1122556	1					
ANR	1122596	Argument	1 + sizeof ( sljit_sw )		1122556	0					
ANR	1122597	AdditiveExpression	1 + sizeof ( sljit_sw )		1122556	0		+			
ANR	1122598	PrimaryExpression	1		1122556	0					
ANR	1122599	SizeofExpression	sizeof ( sljit_sw )		1122556	1					
ANR	1122600	Sizeof	sizeof		1122556	0					
ANR	1122601	SizeofOperand	sljit_sw		1122556	1					
ANR	1122602	ExpressionStatement	* inst ++ = opcode	36:1:1729:1745	1122556	4	True				
ANR	1122603	AssignmentExpression	* inst ++ = opcode		1122556	0		=			
ANR	1122604	UnaryOperationExpression	* inst ++		1122556	0					
ANR	1122605	UnaryOperator	*		1122556	0					
ANR	1122606	PostIncDecOperationExpression	inst ++		1122556	1					
ANR	1122607	Identifier	inst		1122556	0					
ANR	1122608	IncDec	++		1122556	1					
ANR	1122609	Identifier	opcode		1122556	1					
ANR	1122610	ExpressionStatement	* ( sljit_sw * ) inst = imm	37:1:1748:1770	1122556	5	True				
ANR	1122611	AssignmentExpression	* ( sljit_sw * ) inst = imm		1122556	0		=			
ANR	1122612	UnaryOperationExpression	* ( sljit_sw * ) inst		1122556	0					
ANR	1122613	UnaryOperator	*		1122556	0					
ANR	1122614	CastExpression	( sljit_sw * ) inst		1122556	1					
ANR	1122615	CastTarget	sljit_sw *		1122556	0					
ANR	1122616	Identifier	inst		1122556	1					
ANR	1122617	Identifier	imm		1122556	1					
ANR	1122618	ReturnStatement	return SLJIT_SUCCESS ;	38:1:1773:1793	1122556	6	True				
ANR	1122619	Identifier	SLJIT_SUCCESS		1122556	0					
ANR	1122620	ReturnType	static sljit_si		1122556	1					
ANR	1122621	Identifier	emit_do_imm		1122556	2					
ANR	1122622	ParameterList	"struct sljit_compiler * compiler , sljit_ub opcode , sljit_sw imm"		1122556	3					
ANR	1122623	Parameter	struct sljit_compiler * compiler	29:28:1527:1557	1122556	0	True				
ANR	1122624	ParameterType	struct sljit_compiler *		1122556	0					
ANR	1122625	Identifier	compiler		1122556	1					
ANR	1122626	Parameter	sljit_ub opcode	29:61:1560:1574	1122556	1	True				
ANR	1122627	ParameterType	sljit_ub		1122556	0					
ANR	1122628	Identifier	opcode		1122556	1					
ANR	1122629	Parameter	sljit_sw imm	29:78:1577:1588	1122556	2	True				
ANR	1122630	ParameterType	sljit_sw		1122556	0					
ANR	1122631	Identifier	imm		1122556	1					
ANR	1122632	CFGEntryNode	ENTRY		1122556		True				
ANR	1122633	CFGExitNode	EXIT		1122556		True				
ANR	1122634	Symbol	* inst		1122556						
ANR	1122635	Symbol	inst		1122556						
ANR	1122636	Symbol	ensure_buf		1122556						
ANR	1122637	Symbol	imm		1122556						
ANR	1122638	Symbol	* inst ++		1122556						
ANR	1122639	Symbol	SLJIT_SUCCESS		1122556						
ANR	1122640	Symbol	* ( sljit_sw * ) inst		1122556						
ANR	1122641	Symbol	compiler		1122556						
ANR	1122642	Symbol	opcode		1122556						
ANR	1122643	Function	generate_far_jump_code	41:0:1798:2306							
ANR	1122644	FunctionDef	"generate_far_jump_code (struct sljit_jump * jump , sljit_ub * code_ptr , sljit_si type)"		1122643	0					
ANR	1122645	CompoundStatement		42:0:1898:2306	1122643	0					
ANR	1122646	IfStatement	if ( type == SLJIT_JUMP )		1122643	0					
ANR	1122647	Condition	type == SLJIT_JUMP	43:5:1905:1922	1122643	0	True				
ANR	1122648	EqualityExpression	type == SLJIT_JUMP		1122643	0		==			
ANR	1122649	Identifier	type		1122643	0					
ANR	1122650	Identifier	SLJIT_JUMP		1122643	1					
ANR	1122651	CompoundStatement		2:25:26:26	1122643	1					
ANR	1122652	ExpressionStatement	* code_ptr ++ = JMP_i32	44:2:1929:1950	1122643	0	True				
ANR	1122653	AssignmentExpression	* code_ptr ++ = JMP_i32		1122643	0		=			
ANR	1122654	UnaryOperationExpression	* code_ptr ++		1122643	0					
ANR	1122655	UnaryOperator	*		1122643	0					
ANR	1122656	PostIncDecOperationExpression	code_ptr ++		1122643	1					
ANR	1122657	Identifier	code_ptr		1122643	0					
ANR	1122658	IncDec	++		1122643	1					
ANR	1122659	Identifier	JMP_i32		1122643	1					
ANR	1122660	ExpressionStatement	jump -> addr ++	45:2:1954:1966	1122643	1	True				
ANR	1122661	PostIncDecOperationExpression	jump -> addr ++		1122643	0					
ANR	1122662	PtrMemberAccess	jump -> addr		1122643	0					
ANR	1122663	Identifier	jump		1122643	0					
ANR	1122664	Identifier	addr		1122643	1					
ANR	1122665	IncDec	++		1122643	1					
ANR	1122666	ElseStatement	else		1122643	0					
ANR	1122667	IfStatement	if ( type >= SLJIT_FAST_CALL )		1122643	0					
ANR	1122668	Condition	type >= SLJIT_FAST_CALL	47:10:1981:2003	1122643	0	True				
ANR	1122669	RelationalExpression	type >= SLJIT_FAST_CALL		1122643	0		>=			
ANR	1122670	Identifier	type		1122643	0					
ANR	1122671	Identifier	SLJIT_FAST_CALL		1122643	1					
ANR	1122672	CompoundStatement		6:35:107:107	1122643	1					
ANR	1122673	ExpressionStatement	* code_ptr ++ = CALL_i32	48:2:2010:2032	1122643	0	True				
ANR	1122674	AssignmentExpression	* code_ptr ++ = CALL_i32		1122643	0		=			
ANR	1122675	UnaryOperationExpression	* code_ptr ++		1122643	0					
ANR	1122676	UnaryOperator	*		1122643	0					
ANR	1122677	PostIncDecOperationExpression	code_ptr ++		1122643	1					
ANR	1122678	Identifier	code_ptr		1122643	0					
ANR	1122679	IncDec	++		1122643	1					
ANR	1122680	Identifier	CALL_i32		1122643	1					
ANR	1122681	ExpressionStatement	jump -> addr ++	49:2:2036:2048	1122643	1	True				
ANR	1122682	PostIncDecOperationExpression	jump -> addr ++		1122643	0					
ANR	1122683	PtrMemberAccess	jump -> addr		1122643	0					
ANR	1122684	Identifier	jump		1122643	0					
ANR	1122685	Identifier	addr		1122643	1					
ANR	1122686	IncDec	++		1122643	1					
ANR	1122687	ElseStatement	else		1122643	0					
ANR	1122688	CompoundStatement		10:6:160:160	1122643	0					
ANR	1122689	ExpressionStatement	* code_ptr ++ = GROUP_0F	52:2:2063:2085	1122643	0	True				
ANR	1122690	AssignmentExpression	* code_ptr ++ = GROUP_0F		1122643	0		=			
ANR	1122691	UnaryOperationExpression	* code_ptr ++		1122643	0					
ANR	1122692	UnaryOperator	*		1122643	0					
ANR	1122693	PostIncDecOperationExpression	code_ptr ++		1122643	1					
ANR	1122694	Identifier	code_ptr		1122643	0					
ANR	1122695	IncDec	++		1122643	1					
ANR	1122696	Identifier	GROUP_0F		1122643	1					
ANR	1122697	ExpressionStatement	* code_ptr ++ = get_jump_code ( type )	53:2:2089:2122	1122643	1	True				
ANR	1122698	AssignmentExpression	* code_ptr ++ = get_jump_code ( type )		1122643	0		=			
ANR	1122699	UnaryOperationExpression	* code_ptr ++		1122643	0					
ANR	1122700	UnaryOperator	*		1122643	0					
ANR	1122701	PostIncDecOperationExpression	code_ptr ++		1122643	1					
ANR	1122702	Identifier	code_ptr		1122643	0					
ANR	1122703	IncDec	++		1122643	1					
ANR	1122704	CallExpression	get_jump_code ( type )		1122643	1					
ANR	1122705	Callee	get_jump_code		1122643	0					
ANR	1122706	Identifier	get_jump_code		1122643	0					
ANR	1122707	ArgumentList	type		1122643	1					
ANR	1122708	Argument	type		1122643	0					
ANR	1122709	Identifier	type		1122643	0					
ANR	1122710	ExpressionStatement	jump -> addr += 2	54:2:2126:2141	1122643	2	True				
ANR	1122711	AssignmentExpression	jump -> addr += 2		1122643	0		+=			
ANR	1122712	PtrMemberAccess	jump -> addr		1122643	0					
ANR	1122713	Identifier	jump		1122643	0					
ANR	1122714	Identifier	addr		1122643	1					
ANR	1122715	PrimaryExpression	2		1122643	1					
ANR	1122716	IfStatement	if ( jump -> flags & JUMP_LABEL )		1122643	1					
ANR	1122717	Condition	jump -> flags & JUMP_LABEL	57:5:2152:2175	1122643	0	True				
ANR	1122718	BitAndExpression	jump -> flags & JUMP_LABEL		1122643	0		&			
ANR	1122719	PtrMemberAccess	jump -> flags		1122643	0					
ANR	1122720	Identifier	jump		1122643	0					
ANR	1122721	Identifier	flags		1122643	1					
ANR	1122722	Identifier	JUMP_LABEL		1122643	1					
ANR	1122723	ExpressionStatement	jump -> flags |= PATCH_MW	58:2:2180:2203	1122643	1	True				
ANR	1122724	AssignmentExpression	jump -> flags |= PATCH_MW		1122643	0		|=			
ANR	1122725	PtrMemberAccess	jump -> flags		1122643	0					
ANR	1122726	Identifier	jump		1122643	0					
ANR	1122727	Identifier	flags		1122643	1					
ANR	1122728	Identifier	PATCH_MW		1122643	1					
ANR	1122729	ElseStatement	else		1122643	0					
ANR	1122730	ExpressionStatement	* ( sljit_sw * ) code_ptr = jump -> u . target - ( jump -> addr + 4 )	60:2:2213:2269	1122643	0	True				
ANR	1122731	AssignmentExpression	* ( sljit_sw * ) code_ptr = jump -> u . target - ( jump -> addr + 4 )		1122643	0		=			
ANR	1122732	UnaryOperationExpression	* ( sljit_sw * ) code_ptr		1122643	0					
ANR	1122733	UnaryOperator	*		1122643	0					
ANR	1122734	CastExpression	( sljit_sw * ) code_ptr		1122643	1					
ANR	1122735	CastTarget	sljit_sw *		1122643	0					
ANR	1122736	Identifier	code_ptr		1122643	1					
ANR	1122737	AdditiveExpression	jump -> u . target - ( jump -> addr + 4 )		1122643	1		-			
ANR	1122738	MemberAccess	jump -> u . target		1122643	0					
ANR	1122739	PtrMemberAccess	jump -> u		1122643	0					
ANR	1122740	Identifier	jump		1122643	0					
ANR	1122741	Identifier	u		1122643	1					
ANR	1122742	Identifier	target		1122643	1					
ANR	1122743	AdditiveExpression	jump -> addr + 4		1122643	1		+			
ANR	1122744	PtrMemberAccess	jump -> addr		1122643	0					
ANR	1122745	Identifier	jump		1122643	0					
ANR	1122746	Identifier	addr		1122643	1					
ANR	1122747	PrimaryExpression	4		1122643	1					
ANR	1122748	ExpressionStatement	code_ptr += 4	61:1:2272:2285	1122643	2	True				
ANR	1122749	AssignmentExpression	code_ptr += 4		1122643	0		+=			
ANR	1122750	Identifier	code_ptr		1122643	0					
ANR	1122751	PrimaryExpression	4		1122643	1					
ANR	1122752	ReturnStatement	return code_ptr ;	63:1:2289:2304	1122643	3	True				
ANR	1122753	Identifier	code_ptr		1122643	0					
ANR	1122754	ReturnType	static sljit_ub *		1122643	1					
ANR	1122755	Identifier	generate_far_jump_code		1122643	2					
ANR	1122756	ParameterList	"struct sljit_jump * jump , sljit_ub * code_ptr , sljit_si type"		1122643	3					
ANR	1122757	Parameter	struct sljit_jump * jump	41:40:1838:1860	1122643	0	True				
ANR	1122758	ParameterType	struct sljit_jump *		1122643	0					
ANR	1122759	Identifier	jump		1122643	1					
ANR	1122760	Parameter	sljit_ub * code_ptr	41:65:1863:1880	1122643	1	True				
ANR	1122761	ParameterType	sljit_ub *		1122643	0					
ANR	1122762	Identifier	code_ptr		1122643	1					
ANR	1122763	Parameter	sljit_si type	41:85:1883:1895	1122643	2	True				
ANR	1122764	ParameterType	sljit_si		1122643	0					
ANR	1122765	Identifier	type		1122643	1					
ANR	1122766	CFGEntryNode	ENTRY		1122643		True				
ANR	1122767	CFGExitNode	EXIT		1122643		True				
ANR	1122768	Symbol	SLJIT_JUMP		1122643						
ANR	1122769	Symbol	GROUP_0F		1122643						
ANR	1122770	Symbol	* jump		1122643						
ANR	1122771	Symbol	jump -> u		1122643						
ANR	1122772	Symbol	CALL_i32		1122643						
ANR	1122773	Symbol	jump -> flags		1122643						
ANR	1122774	Symbol	JUMP_LABEL		1122643						
ANR	1122775	Symbol	jump -> addr		1122643						
ANR	1122776	Symbol	get_jump_code		1122643						
ANR	1122777	Symbol	type		1122643						
ANR	1122778	Symbol	JMP_i32		1122643						
ANR	1122779	Symbol	* code_ptr		1122643						
ANR	1122780	Symbol	code_ptr		1122643						
ANR	1122781	Symbol	SLJIT_FAST_CALL		1122643						
ANR	1122782	Symbol	jump -> u . target		1122643						
ANR	1122783	Symbol	* code_ptr ++		1122643						
ANR	1122784	Symbol	* ( sljit_sw * ) code_ptr		1122643						
ANR	1122785	Symbol	PATCH_MW		1122643						
ANR	1122786	Symbol	jump		1122643						
ANR	1122787	Function	sljit_emit_enter	66:0:2309:6319							
ANR	1122788	FunctionDef	"sljit_emit_enter (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1122787	0					
ANR	1122789	CompoundStatement		69:0:2525:6319	1122787	0					
ANR	1122790	IdentifierDeclStatement	sljit_si size ;	70:1:2528:2541	1122787	0	True				
ANR	1122791	IdentifierDecl	size		1122787	0					
ANR	1122792	IdentifierDeclType	sljit_si		1122787	0					
ANR	1122793	Identifier	size		1122787	1					
ANR	1122794	IdentifierDeclStatement	sljit_ub * inst ;	71:1:2544:2558	1122787	1	True				
ANR	1122795	IdentifierDecl	* inst		1122787	0					
ANR	1122796	IdentifierDeclType	sljit_ub *		1122787	0					
ANR	1122797	Identifier	inst		1122787	1					
ANR	1122798	ExpressionStatement	CHECK_ERROR ( )	73:1:2562:2575	1122787	2	True				
ANR	1122799	CallExpression	CHECK_ERROR ( )		1122787	0					
ANR	1122800	Callee	CHECK_ERROR		1122787	0					
ANR	1122801	Identifier	CHECK_ERROR		1122787	0					
ANR	1122802	ArgumentList			1122787	1					
ANR	1122803	ExpressionStatement	"CHECK ( check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"	74:1:2578:2684	1122787	3	True				
ANR	1122804	CallExpression	"CHECK ( check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"		1122787	0					
ANR	1122805	Callee	CHECK		1122787	0					
ANR	1122806	Identifier	CHECK		1122787	0					
ANR	1122807	ArgumentList	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1122787	1					
ANR	1122808	Argument	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1122787	0					
ANR	1122809	CallExpression	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1122787	0					
ANR	1122810	Callee	check_sljit_emit_enter		1122787	0					
ANR	1122811	Identifier	check_sljit_emit_enter		1122787	0					
ANR	1122812	ArgumentList	compiler		1122787	1					
ANR	1122813	Argument	compiler		1122787	0					
ANR	1122814	Identifier	compiler		1122787	0					
ANR	1122815	Argument	options		1122787	1					
ANR	1122816	Identifier	options		1122787	0					
ANR	1122817	Argument	args		1122787	2					
ANR	1122818	Identifier	args		1122787	0					
ANR	1122819	Argument	scratches		1122787	3					
ANR	1122820	Identifier	scratches		1122787	0					
ANR	1122821	Argument	saveds		1122787	4					
ANR	1122822	Identifier	saveds		1122787	0					
ANR	1122823	Argument	fscratches		1122787	5					
ANR	1122824	Identifier	fscratches		1122787	0					
ANR	1122825	Argument	fsaveds		1122787	6					
ANR	1122826	Identifier	fsaveds		1122787	0					
ANR	1122827	Argument	local_size		1122787	7					
ANR	1122828	Identifier	local_size		1122787	0					
ANR	1122829	ExpressionStatement	"set_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"	75:1:2687:2778	1122787	4	True				
ANR	1122830	CallExpression	"set_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1122787	0					
ANR	1122831	Callee	set_emit_enter		1122787	0					
ANR	1122832	Identifier	set_emit_enter		1122787	0					
ANR	1122833	ArgumentList	compiler		1122787	1					
ANR	1122834	Argument	compiler		1122787	0					
ANR	1122835	Identifier	compiler		1122787	0					
ANR	1122836	Argument	options		1122787	1					
ANR	1122837	Identifier	options		1122787	0					
ANR	1122838	Argument	args		1122787	2					
ANR	1122839	Identifier	args		1122787	0					
ANR	1122840	Argument	scratches		1122787	3					
ANR	1122841	Identifier	scratches		1122787	0					
ANR	1122842	Argument	saveds		1122787	4					
ANR	1122843	Identifier	saveds		1122787	0					
ANR	1122844	Argument	fscratches		1122787	5					
ANR	1122845	Identifier	fscratches		1122787	0					
ANR	1122846	Argument	fsaveds		1122787	6					
ANR	1122847	Identifier	fsaveds		1122787	0					
ANR	1122848	Argument	local_size		1122787	7					
ANR	1122849	Identifier	local_size		1122787	0					
ANR	1122850	ExpressionStatement	compiler -> args = args	77:1:2782:2803	1122787	5	True				
ANR	1122851	AssignmentExpression	compiler -> args = args		1122787	0		=			
ANR	1122852	PtrMemberAccess	compiler -> args		1122787	0					
ANR	1122853	Identifier	compiler		1122787	0					
ANR	1122854	Identifier	args		1122787	1					
ANR	1122855	Identifier	args		1122787	1					
ANR	1122856	ExpressionStatement	compiler -> flags_saved = 0	78:1:2806:2831	1122787	6	True				
ANR	1122857	AssignmentExpression	compiler -> flags_saved = 0		1122787	0		=			
ANR	1122858	PtrMemberAccess	compiler -> flags_saved		1122787	0					
ANR	1122859	Identifier	compiler		1122787	0					
ANR	1122860	Identifier	flags_saved		1122787	1					
ANR	1122861	PrimaryExpression	0		1122787	1					
ANR	1122862	ExpressionStatement	size = 1 + ( scratches > 7 ? ( scratches - 7 ) : 0 ) + ( saveds <= 3 ? saveds : 3 )	80:1:2835:2912	1122787	7	True				
ANR	1122863	AssignmentExpression	size = 1 + ( scratches > 7 ? ( scratches - 7 ) : 0 ) + ( saveds <= 3 ? saveds : 3 )		1122787	0		=			
ANR	1122864	Identifier	size		1122787	0					
ANR	1122865	AdditiveExpression	1 + ( scratches > 7 ? ( scratches - 7 ) : 0 ) + ( saveds <= 3 ? saveds : 3 )		1122787	1		+			
ANR	1122866	PrimaryExpression	1		1122787	0					
ANR	1122867	AdditiveExpression	( scratches > 7 ? ( scratches - 7 ) : 0 ) + ( saveds <= 3 ? saveds : 3 )		1122787	1		+			
ANR	1122868	ConditionalExpression	scratches > 7 ? ( scratches - 7 ) : 0		1122787	0					
ANR	1122869	Condition	scratches > 7		1122787	0					
ANR	1122870	RelationalExpression	scratches > 7		1122787	0		>			
ANR	1122871	Identifier	scratches		1122787	0					
ANR	1122872	PrimaryExpression	7		1122787	1					
ANR	1122873	AdditiveExpression	scratches - 7		1122787	1		-			
ANR	1122874	Identifier	scratches		1122787	0					
ANR	1122875	PrimaryExpression	7		1122787	1					
ANR	1122876	PrimaryExpression	0		1122787	2					
ANR	1122877	ConditionalExpression	saveds <= 3 ? saveds : 3		1122787	1					
ANR	1122878	Condition	saveds <= 3		1122787	0					
ANR	1122879	RelationalExpression	saveds <= 3		1122787	0		<=			
ANR	1122880	Identifier	saveds		1122787	0					
ANR	1122881	PrimaryExpression	3		1122787	1					
ANR	1122882	Identifier	saveds		1122787	1					
ANR	1122883	PrimaryExpression	3		1122787	2					
ANR	1122884	ExpressionStatement	size += ( args > 0 ? ( args * 2 ) : 0 ) + ( args > 2 ? 2 : 0 )	82:1:2976:3032	1122787	8	True				
ANR	1122885	AssignmentExpression	size += ( args > 0 ? ( args * 2 ) : 0 ) + ( args > 2 ? 2 : 0 )		1122787	0		+=			
ANR	1122886	Identifier	size		1122787	0					
ANR	1122887	AdditiveExpression	( args > 0 ? ( args * 2 ) : 0 ) + ( args > 2 ? 2 : 0 )		1122787	1		+			
ANR	1122888	ConditionalExpression	args > 0 ? ( args * 2 ) : 0		1122787	0					
ANR	1122889	Condition	args > 0		1122787	0					
ANR	1122890	RelationalExpression	args > 0		1122787	0		>			
ANR	1122891	Identifier	args		1122787	0					
ANR	1122892	PrimaryExpression	0		1122787	1					
ANR	1122893	MultiplicativeExpression	args * 2		1122787	1		*			
ANR	1122894	Identifier	args		1122787	0					
ANR	1122895	PrimaryExpression	2		1122787	1					
ANR	1122896	PrimaryExpression	0		1122787	2					
ANR	1122897	ConditionalExpression	args > 2 ? 2 : 0		1122787	1					
ANR	1122898	Condition	args > 2		1122787	0					
ANR	1122899	RelationalExpression	args > 2		1122787	0		>			
ANR	1122900	Identifier	args		1122787	0					
ANR	1122901	PrimaryExpression	2		1122787	1					
ANR	1122902	PrimaryExpression	2		1122787	1					
ANR	1122903	PrimaryExpression	0		1122787	2					
ANR	1122904	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + size )"	86:1:3090:3138	1122787	9	True				
ANR	1122905	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + size )"		1122787	0		=			
ANR	1122906	Identifier	inst		1122787	0					
ANR	1122907	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + size )"		1122787	1					
ANR	1122908	CastTarget	sljit_ub *		1122787	0					
ANR	1122909	CallExpression	"ensure_buf ( compiler , 1 + size )"		1122787	1					
ANR	1122910	Callee	ensure_buf		1122787	0					
ANR	1122911	Identifier	ensure_buf		1122787	0					
ANR	1122912	ArgumentList	compiler		1122787	1					
ANR	1122913	Argument	compiler		1122787	0					
ANR	1122914	Identifier	compiler		1122787	0					
ANR	1122915	Argument	1 + size		1122787	1					
ANR	1122916	AdditiveExpression	1 + size		1122787	0		+			
ANR	1122917	PrimaryExpression	1		1122787	0					
ANR	1122918	Identifier	size		1122787	1					
ANR	1122919	ExpressionStatement	FAIL_IF ( ! inst )	87:1:3141:3155	1122787	10	True				
ANR	1122920	CallExpression	FAIL_IF ( ! inst )		1122787	0					
ANR	1122921	Callee	FAIL_IF		1122787	0					
ANR	1122922	Identifier	FAIL_IF		1122787	0					
ANR	1122923	ArgumentList	! inst		1122787	1					
ANR	1122924	Argument	! inst		1122787	0					
ANR	1122925	UnaryOperationExpression	! inst		1122787	0					
ANR	1122926	UnaryOperator	!		1122787	0					
ANR	1122927	Identifier	inst		1122787	1					
ANR	1122928	ExpressionStatement	INC_SIZE ( size )	89:1:3159:3173	1122787	11	True				
ANR	1122929	CallExpression	INC_SIZE ( size )		1122787	0					
ANR	1122930	Callee	INC_SIZE		1122787	0					
ANR	1122931	Identifier	INC_SIZE		1122787	0					
ANR	1122932	ArgumentList	size		1122787	1					
ANR	1122933	Argument	size		1122787	0					
ANR	1122934	Identifier	size		1122787	0					
ANR	1122935	ExpressionStatement	PUSH_REG ( reg_map [ TMP_REG1 ] )	90:1:3176:3203	1122787	12	True				
ANR	1122936	CallExpression	PUSH_REG ( reg_map [ TMP_REG1 ] )		1122787	0					
ANR	1122937	Callee	PUSH_REG		1122787	0					
ANR	1122938	Identifier	PUSH_REG		1122787	0					
ANR	1122939	ArgumentList	reg_map [ TMP_REG1 ]		1122787	1					
ANR	1122940	Argument	reg_map [ TMP_REG1 ]		1122787	0					
ANR	1122941	ArrayIndexing	reg_map [ TMP_REG1 ]		1122787	0					
ANR	1122942	Identifier	reg_map		1122787	0					
ANR	1122943	Identifier	TMP_REG1		1122787	1					
ANR	1122944	IfStatement	if ( args > 0 )		1122787	13					
ANR	1122945	Condition	args > 0	92:5:3272:3279	1122787	0	True				
ANR	1122946	RelationalExpression	args > 0		1122787	0		>			
ANR	1122947	Identifier	args		1122787	0					
ANR	1122948	PrimaryExpression	0		1122787	1					
ANR	1122949	CompoundStatement		24:15:756:756	1122787	1					
ANR	1122950	ExpressionStatement	* inst ++ = MOV_r_rm	93:2:3286:3304	1122787	0	True				
ANR	1122951	AssignmentExpression	* inst ++ = MOV_r_rm		1122787	0		=			
ANR	1122952	UnaryOperationExpression	* inst ++		1122787	0					
ANR	1122953	UnaryOperator	*		1122787	0					
ANR	1122954	PostIncDecOperationExpression	inst ++		1122787	1					
ANR	1122955	Identifier	inst		1122787	0					
ANR	1122956	IncDec	++		1122787	1					
ANR	1122957	Identifier	MOV_r_rm		1122787	1					
ANR	1122958	ExpressionStatement	* inst ++ = MOD_REG | ( reg_map [ TMP_REG1 ] << 3 ) | 0x4	94:2:3308:3368	1122787	1	True				
ANR	1122959	AssignmentExpression	* inst ++ = MOD_REG | ( reg_map [ TMP_REG1 ] << 3 ) | 0x4		1122787	0		=			
ANR	1122960	UnaryOperationExpression	* inst ++		1122787	0					
ANR	1122961	UnaryOperator	*		1122787	0					
ANR	1122962	PostIncDecOperationExpression	inst ++		1122787	1					
ANR	1122963	Identifier	inst		1122787	0					
ANR	1122964	IncDec	++		1122787	1					
ANR	1122965	InclusiveOrExpression	MOD_REG | ( reg_map [ TMP_REG1 ] << 3 ) | 0x4		1122787	1		|			
ANR	1122966	Identifier	MOD_REG		1122787	0					
ANR	1122967	InclusiveOrExpression	( reg_map [ TMP_REG1 ] << 3 ) | 0x4		1122787	1		|			
ANR	1122968	ShiftExpression	reg_map [ TMP_REG1 ] << 3		1122787	0		<<			
ANR	1122969	ArrayIndexing	reg_map [ TMP_REG1 ]		1122787	0					
ANR	1122970	Identifier	reg_map		1122787	0					
ANR	1122971	Identifier	TMP_REG1		1122787	1					
ANR	1122972	PrimaryExpression	3		1122787	1					
ANR	1122973	PrimaryExpression	0x4		1122787	1					
ANR	1122974	IfStatement	if ( saveds > 2 || scratches > 7 )		1122787	14					
ANR	1122975	Condition	saveds > 2 || scratches > 7	97:5:3385:3411	1122787	0	True				
ANR	1122976	OrExpression	saveds > 2 || scratches > 7		1122787	0		||			
ANR	1122977	RelationalExpression	saveds > 2		1122787	0		>			
ANR	1122978	Identifier	saveds		1122787	0					
ANR	1122979	PrimaryExpression	2		1122787	1					
ANR	1122980	RelationalExpression	scratches > 7		1122787	1		>			
ANR	1122981	Identifier	scratches		1122787	0					
ANR	1122982	PrimaryExpression	7		1122787	1					
ANR	1122983	ExpressionStatement	PUSH_REG ( reg_map [ SLJIT_S2 ] )	98:2:3416:3443	1122787	1	True				
ANR	1122984	CallExpression	PUSH_REG ( reg_map [ SLJIT_S2 ] )		1122787	0					
ANR	1122985	Callee	PUSH_REG		1122787	0					
ANR	1122986	Identifier	PUSH_REG		1122787	0					
ANR	1122987	ArgumentList	reg_map [ SLJIT_S2 ]		1122787	1					
ANR	1122988	Argument	reg_map [ SLJIT_S2 ]		1122787	0					
ANR	1122989	ArrayIndexing	reg_map [ SLJIT_S2 ]		1122787	0					
ANR	1122990	Identifier	reg_map		1122787	0					
ANR	1122991	Identifier	SLJIT_S2		1122787	1					
ANR	1122992	IfStatement	if ( saveds > 1 || scratches > 8 )		1122787	15					
ANR	1122993	Condition	saveds > 1 || scratches > 8	99:5:3450:3476	1122787	0	True				
ANR	1122994	OrExpression	saveds > 1 || scratches > 8		1122787	0		||			
ANR	1122995	RelationalExpression	saveds > 1		1122787	0		>			
ANR	1122996	Identifier	saveds		1122787	0					
ANR	1122997	PrimaryExpression	1		1122787	1					
ANR	1122998	RelationalExpression	scratches > 8		1122787	1		>			
ANR	1122999	Identifier	scratches		1122787	0					
ANR	1123000	PrimaryExpression	8		1122787	1					
ANR	1123001	ExpressionStatement	PUSH_REG ( reg_map [ SLJIT_S1 ] )	100:2:3481:3508	1122787	1	True				
ANR	1123002	CallExpression	PUSH_REG ( reg_map [ SLJIT_S1 ] )		1122787	0					
ANR	1123003	Callee	PUSH_REG		1122787	0					
ANR	1123004	Identifier	PUSH_REG		1122787	0					
ANR	1123005	ArgumentList	reg_map [ SLJIT_S1 ]		1122787	1					
ANR	1123006	Argument	reg_map [ SLJIT_S1 ]		1122787	0					
ANR	1123007	ArrayIndexing	reg_map [ SLJIT_S1 ]		1122787	0					
ANR	1123008	Identifier	reg_map		1122787	0					
ANR	1123009	Identifier	SLJIT_S1		1122787	1					
ANR	1123010	IfStatement	if ( saveds > 0 || scratches > 9 )		1122787	16					
ANR	1123011	Condition	saveds > 0 || scratches > 9	101:5:3515:3541	1122787	0	True				
ANR	1123012	OrExpression	saveds > 0 || scratches > 9		1122787	0		||			
ANR	1123013	RelationalExpression	saveds > 0		1122787	0		>			
ANR	1123014	Identifier	saveds		1122787	0					
ANR	1123015	PrimaryExpression	0		1122787	1					
ANR	1123016	RelationalExpression	scratches > 9		1122787	1		>			
ANR	1123017	Identifier	scratches		1122787	0					
ANR	1123018	PrimaryExpression	9		1122787	1					
ANR	1123019	ExpressionStatement	PUSH_REG ( reg_map [ SLJIT_S0 ] )	102:2:3546:3573	1122787	1	True				
ANR	1123020	CallExpression	PUSH_REG ( reg_map [ SLJIT_S0 ] )		1122787	0					
ANR	1123021	Callee	PUSH_REG		1122787	0					
ANR	1123022	Identifier	PUSH_REG		1122787	0					
ANR	1123023	ArgumentList	reg_map [ SLJIT_S0 ]		1122787	1					
ANR	1123024	Argument	reg_map [ SLJIT_S0 ]		1122787	0					
ANR	1123025	ArrayIndexing	reg_map [ SLJIT_S0 ]		1122787	0					
ANR	1123026	Identifier	reg_map		1122787	0					
ANR	1123027	Identifier	SLJIT_S0		1122787	1					
ANR	1123028	IfStatement	if ( args > 0 )		1122787	17					
ANR	1123029	Condition	args > 0	105:5:3642:3649	1122787	0	True				
ANR	1123030	RelationalExpression	args > 0		1122787	0		>			
ANR	1123031	Identifier	args		1122787	0					
ANR	1123032	PrimaryExpression	0		1122787	1					
ANR	1123033	CompoundStatement		37:15:1126:1126	1122787	1					
ANR	1123034	ExpressionStatement	* inst ++ = MOV_r_rm	106:2:3656:3674	1122787	0	True				
ANR	1123035	AssignmentExpression	* inst ++ = MOV_r_rm		1122787	0		=			
ANR	1123036	UnaryOperationExpression	* inst ++		1122787	0					
ANR	1123037	UnaryOperator	*		1122787	0					
ANR	1123038	PostIncDecOperationExpression	inst ++		1122787	1					
ANR	1123039	Identifier	inst		1122787	0					
ANR	1123040	IncDec	++		1122787	1					
ANR	1123041	Identifier	MOV_r_rm		1122787	1					
ANR	1123042	ExpressionStatement	* inst ++ = MOD_REG | ( reg_map [ SLJIT_S0 ] << 3 ) | reg_map [ SLJIT_R2 ]	107:2:3678:3742	1122787	1	True				
ANR	1123043	AssignmentExpression	* inst ++ = MOD_REG | ( reg_map [ SLJIT_S0 ] << 3 ) | reg_map [ SLJIT_R2 ]		1122787	0		=			
ANR	1123044	UnaryOperationExpression	* inst ++		1122787	0					
ANR	1123045	UnaryOperator	*		1122787	0					
ANR	1123046	PostIncDecOperationExpression	inst ++		1122787	1					
ANR	1123047	Identifier	inst		1122787	0					
ANR	1123048	IncDec	++		1122787	1					
ANR	1123049	InclusiveOrExpression	MOD_REG | ( reg_map [ SLJIT_S0 ] << 3 ) | reg_map [ SLJIT_R2 ]		1122787	1		|			
ANR	1123050	Identifier	MOD_REG		1122787	0					
ANR	1123051	InclusiveOrExpression	( reg_map [ SLJIT_S0 ] << 3 ) | reg_map [ SLJIT_R2 ]		1122787	1		|			
ANR	1123052	ShiftExpression	reg_map [ SLJIT_S0 ] << 3		1122787	0		<<			
ANR	1123053	ArrayIndexing	reg_map [ SLJIT_S0 ]		1122787	0					
ANR	1123054	Identifier	reg_map		1122787	0					
ANR	1123055	Identifier	SLJIT_S0		1122787	1					
ANR	1123056	PrimaryExpression	3		1122787	1					
ANR	1123057	ArrayIndexing	reg_map [ SLJIT_R2 ]		1122787	1					
ANR	1123058	Identifier	reg_map		1122787	0					
ANR	1123059	Identifier	SLJIT_R2		1122787	1					
ANR	1123060	IfStatement	if ( args > 1 )		1122787	18					
ANR	1123061	Condition	args > 1	109:5:3752:3759	1122787	0	True				
ANR	1123062	RelationalExpression	args > 1		1122787	0		>			
ANR	1123063	Identifier	args		1122787	0					
ANR	1123064	PrimaryExpression	1		1122787	1					
ANR	1123065	CompoundStatement		41:15:1236:1236	1122787	1					
ANR	1123066	ExpressionStatement	* inst ++ = MOV_r_rm	110:2:3766:3784	1122787	0	True				
ANR	1123067	AssignmentExpression	* inst ++ = MOV_r_rm		1122787	0		=			
ANR	1123068	UnaryOperationExpression	* inst ++		1122787	0					
ANR	1123069	UnaryOperator	*		1122787	0					
ANR	1123070	PostIncDecOperationExpression	inst ++		1122787	1					
ANR	1123071	Identifier	inst		1122787	0					
ANR	1123072	IncDec	++		1122787	1					
ANR	1123073	Identifier	MOV_r_rm		1122787	1					
ANR	1123074	ExpressionStatement	* inst ++ = MOD_REG | ( reg_map [ SLJIT_S1 ] << 3 ) | reg_map [ SLJIT_R1 ]	111:2:3788:3852	1122787	1	True				
ANR	1123075	AssignmentExpression	* inst ++ = MOD_REG | ( reg_map [ SLJIT_S1 ] << 3 ) | reg_map [ SLJIT_R1 ]		1122787	0		=			
ANR	1123076	UnaryOperationExpression	* inst ++		1122787	0					
ANR	1123077	UnaryOperator	*		1122787	0					
ANR	1123078	PostIncDecOperationExpression	inst ++		1122787	1					
ANR	1123079	Identifier	inst		1122787	0					
ANR	1123080	IncDec	++		1122787	1					
ANR	1123081	InclusiveOrExpression	MOD_REG | ( reg_map [ SLJIT_S1 ] << 3 ) | reg_map [ SLJIT_R1 ]		1122787	1		|			
ANR	1123082	Identifier	MOD_REG		1122787	0					
ANR	1123083	InclusiveOrExpression	( reg_map [ SLJIT_S1 ] << 3 ) | reg_map [ SLJIT_R1 ]		1122787	1		|			
ANR	1123084	ShiftExpression	reg_map [ SLJIT_S1 ] << 3		1122787	0		<<			
ANR	1123085	ArrayIndexing	reg_map [ SLJIT_S1 ]		1122787	0					
ANR	1123086	Identifier	reg_map		1122787	0					
ANR	1123087	Identifier	SLJIT_S1		1122787	1					
ANR	1123088	PrimaryExpression	3		1122787	1					
ANR	1123089	ArrayIndexing	reg_map [ SLJIT_R1 ]		1122787	1					
ANR	1123090	Identifier	reg_map		1122787	0					
ANR	1123091	Identifier	SLJIT_R1		1122787	1					
ANR	1123092	IfStatement	if ( args > 2 )		1122787	19					
ANR	1123093	Condition	args > 2	113:5:3862:3869	1122787	0	True				
ANR	1123094	RelationalExpression	args > 2		1122787	0		>			
ANR	1123095	Identifier	args		1122787	0					
ANR	1123096	PrimaryExpression	2		1122787	1					
ANR	1123097	CompoundStatement		45:15:1346:1346	1122787	1					
ANR	1123098	ExpressionStatement	* inst ++ = MOV_r_rm	114:2:3876:3894	1122787	0	True				
ANR	1123099	AssignmentExpression	* inst ++ = MOV_r_rm		1122787	0		=			
ANR	1123100	UnaryOperationExpression	* inst ++		1122787	0					
ANR	1123101	UnaryOperator	*		1122787	0					
ANR	1123102	PostIncDecOperationExpression	inst ++		1122787	1					
ANR	1123103	Identifier	inst		1122787	0					
ANR	1123104	IncDec	++		1122787	1					
ANR	1123105	Identifier	MOV_r_rm		1122787	1					
ANR	1123106	ExpressionStatement	* inst ++ = MOD_DISP8 | ( reg_map [ SLJIT_S2 ] << 3 ) | 0x4	115:2:3898:3960	1122787	1	True				
ANR	1123107	AssignmentExpression	* inst ++ = MOD_DISP8 | ( reg_map [ SLJIT_S2 ] << 3 ) | 0x4		1122787	0		=			
ANR	1123108	UnaryOperationExpression	* inst ++		1122787	0					
ANR	1123109	UnaryOperator	*		1122787	0					
ANR	1123110	PostIncDecOperationExpression	inst ++		1122787	1					
ANR	1123111	Identifier	inst		1122787	0					
ANR	1123112	IncDec	++		1122787	1					
ANR	1123113	InclusiveOrExpression	MOD_DISP8 | ( reg_map [ SLJIT_S2 ] << 3 ) | 0x4		1122787	1		|			
ANR	1123114	Identifier	MOD_DISP8		1122787	0					
ANR	1123115	InclusiveOrExpression	( reg_map [ SLJIT_S2 ] << 3 ) | 0x4		1122787	1		|			
ANR	1123116	ShiftExpression	reg_map [ SLJIT_S2 ] << 3		1122787	0		<<			
ANR	1123117	ArrayIndexing	reg_map [ SLJIT_S2 ]		1122787	0					
ANR	1123118	Identifier	reg_map		1122787	0					
ANR	1123119	Identifier	SLJIT_S2		1122787	1					
ANR	1123120	PrimaryExpression	3		1122787	1					
ANR	1123121	PrimaryExpression	0x4		1122787	1					
ANR	1123122	ExpressionStatement	* inst ++ = 0x24	116:2:3964:3978	1122787	2	True				
ANR	1123123	AssignmentExpression	* inst ++ = 0x24		1122787	0		=			
ANR	1123124	UnaryOperationExpression	* inst ++		1122787	0					
ANR	1123125	UnaryOperator	*		1122787	0					
ANR	1123126	PostIncDecOperationExpression	inst ++		1122787	1					
ANR	1123127	Identifier	inst		1122787	0					
ANR	1123128	IncDec	++		1122787	1					
ANR	1123129	PrimaryExpression	0x24		1122787	1					
ANR	1123130	ExpressionStatement	* inst ++ = sizeof ( sljit_sw ) * ( 3 + 2 )	117:2:3982:4018	1122787	3	True				
ANR	1123131	AssignmentExpression	* inst ++ = sizeof ( sljit_sw ) * ( 3 + 2 )		1122787	0		=			
ANR	1123132	UnaryOperationExpression	* inst ++		1122787	0					
ANR	1123133	UnaryOperator	*		1122787	0					
ANR	1123134	PostIncDecOperationExpression	inst ++		1122787	1					
ANR	1123135	Identifier	inst		1122787	0					
ANR	1123136	IncDec	++		1122787	1					
ANR	1123137	MultiplicativeExpression	sizeof ( sljit_sw ) * ( 3 + 2 )		1122787	1		*			
ANR	1123138	SizeofExpression	sizeof ( sljit_sw )		1122787	0					
ANR	1123139	Sizeof	sizeof		1122787	0					
ANR	1123140	SizeofOperand	sljit_sw		1122787	1					
ANR	1123141	AdditiveExpression	3 + 2		1122787	1		+			
ANR	1123142	PrimaryExpression	3		1122787	0					
ANR	1123143	PrimaryExpression	2		1122787	1					
ANR	1123144	ExpressionStatement	"SLJIT_COMPILE_ASSERT ( SLJIT_LOCALS_OFFSET >= ( 2 + 4 ) * sizeof ( sljit_uw ) , require_at_least_two_words )"	137:1:4503:4602	1122787	20	True				
ANR	1123145	CallExpression	"SLJIT_COMPILE_ASSERT ( SLJIT_LOCALS_OFFSET >= ( 2 + 4 ) * sizeof ( sljit_uw ) , require_at_least_two_words )"		1122787	0					
ANR	1123146	Callee	SLJIT_COMPILE_ASSERT		1122787	0					
ANR	1123147	Identifier	SLJIT_COMPILE_ASSERT		1122787	0					
ANR	1123148	ArgumentList	SLJIT_LOCALS_OFFSET >= ( 2 + 4 ) * sizeof ( sljit_uw )		1122787	1					
ANR	1123149	Argument	SLJIT_LOCALS_OFFSET >= ( 2 + 4 ) * sizeof ( sljit_uw )		1122787	0					
ANR	1123150	RelationalExpression	SLJIT_LOCALS_OFFSET >= ( 2 + 4 ) * sizeof ( sljit_uw )		1122787	0		>=			
ANR	1123151	Identifier	SLJIT_LOCALS_OFFSET		1122787	0					
ANR	1123152	MultiplicativeExpression	( 2 + 4 ) * sizeof ( sljit_uw )		1122787	1		*			
ANR	1123153	AdditiveExpression	2 + 4		1122787	0		+			
ANR	1123154	PrimaryExpression	2		1122787	0					
ANR	1123155	PrimaryExpression	4		1122787	1					
ANR	1123156	SizeofExpression	sizeof ( sljit_uw )		1122787	1					
ANR	1123157	Sizeof	sizeof		1122787	0					
ANR	1123158	SizeofOperand	sljit_uw		1122787	1					
ANR	1123159	Argument	require_at_least_two_words		1122787	1					
ANR	1123160	Identifier	require_at_least_two_words		1122787	0					
ANR	1123161	ExpressionStatement	saveds = ( 2 + ( scratches > 7 ? ( scratches - 7 ) : 0 ) + ( saveds <= 3 ? saveds : 3 ) ) * sizeof ( sljit_uw )	140:1:4722:4822	1122787	21	True				
ANR	1123162	AssignmentExpression	saveds = ( 2 + ( scratches > 7 ? ( scratches - 7 ) : 0 ) + ( saveds <= 3 ? saveds : 3 ) ) * sizeof ( sljit_uw )		1122787	0		=			
ANR	1123163	Identifier	saveds		1122787	0					
ANR	1123164	MultiplicativeExpression	( 2 + ( scratches > 7 ? ( scratches - 7 ) : 0 ) + ( saveds <= 3 ? saveds : 3 ) ) * sizeof ( sljit_uw )		1122787	1		*			
ANR	1123165	AdditiveExpression	2 + ( scratches > 7 ? ( scratches - 7 ) : 0 ) + ( saveds <= 3 ? saveds : 3 )		1122787	0		+			
ANR	1123166	PrimaryExpression	2		1122787	0					
ANR	1123167	AdditiveExpression	( scratches > 7 ? ( scratches - 7 ) : 0 ) + ( saveds <= 3 ? saveds : 3 )		1122787	1		+			
ANR	1123168	ConditionalExpression	scratches > 7 ? ( scratches - 7 ) : 0		1122787	0					
ANR	1123169	Condition	scratches > 7		1122787	0					
ANR	1123170	RelationalExpression	scratches > 7		1122787	0		>			
ANR	1123171	Identifier	scratches		1122787	0					
ANR	1123172	PrimaryExpression	7		1122787	1					
ANR	1123173	AdditiveExpression	scratches - 7		1122787	1		-			
ANR	1123174	Identifier	scratches		1122787	0					
ANR	1123175	PrimaryExpression	7		1122787	1					
ANR	1123176	PrimaryExpression	0		1122787	2					
ANR	1123177	ConditionalExpression	saveds <= 3 ? saveds : 3		1122787	1					
ANR	1123178	Condition	saveds <= 3		1122787	0					
ANR	1123179	RelationalExpression	saveds <= 3		1122787	0		<=			
ANR	1123180	Identifier	saveds		1122787	0					
ANR	1123181	PrimaryExpression	3		1122787	1					
ANR	1123182	Identifier	saveds		1122787	1					
ANR	1123183	PrimaryExpression	3		1122787	2					
ANR	1123184	SizeofExpression	sizeof ( sljit_uw )		1122787	1					
ANR	1123185	Sizeof	sizeof		1122787	0					
ANR	1123186	SizeofOperand	sljit_uw		1122787	1					
ANR	1123187	ExpressionStatement	local_size = ( ( SLJIT_LOCALS_OFFSET + saveds + local_size + 15 ) & ~15 ) - saveds	141:1:4825:4903	1122787	22	True				
ANR	1123188	AssignmentExpression	local_size = ( ( SLJIT_LOCALS_OFFSET + saveds + local_size + 15 ) & ~15 ) - saveds		1122787	0		=			
ANR	1123189	Identifier	local_size		1122787	0					
ANR	1123190	AdditiveExpression	( ( SLJIT_LOCALS_OFFSET + saveds + local_size + 15 ) & ~15 ) - saveds		1122787	1		-			
ANR	1123191	BitAndExpression	( SLJIT_LOCALS_OFFSET + saveds + local_size + 15 ) & ~15		1122787	0		&			
ANR	1123192	AdditiveExpression	SLJIT_LOCALS_OFFSET + saveds + local_size + 15		1122787	0		+			
ANR	1123193	Identifier	SLJIT_LOCALS_OFFSET		1122787	0					
ANR	1123194	AdditiveExpression	saveds + local_size + 15		1122787	1		+			
ANR	1123195	Identifier	saveds		1122787	0					
ANR	1123196	AdditiveExpression	local_size + 15		1122787	1		+			
ANR	1123197	Identifier	local_size		1122787	0					
ANR	1123198	PrimaryExpression	15		1122787	1					
ANR	1123199	Identifier	~15		1122787	1					
ANR	1123200	Identifier	saveds		1122787	1					
ANR	1123201	ExpressionStatement	compiler -> local_size = local_size	166:1:5568:5601	1122787	23	True				
ANR	1123202	AssignmentExpression	compiler -> local_size = local_size		1122787	0		=			
ANR	1123203	PtrMemberAccess	compiler -> local_size		1122787	0					
ANR	1123204	Identifier	compiler		1122787	0					
ANR	1123205	Identifier	local_size		1122787	1					
ANR	1123206	Identifier	local_size		1122787	1					
ANR	1123207	IfStatement	if ( local_size > 1024 )		1122787	24					
ANR	1123208	Condition	local_size > 1024	168:5:5622:5638	1122787	0	True				
ANR	1123209	RelationalExpression	local_size > 1024		1122787	0		>			
ANR	1123210	Identifier	local_size		1122787	0					
ANR	1123211	PrimaryExpression	1024		1122787	1					
ANR	1123212	CompoundStatement		100:24:3115:3115	1122787	1					
ANR	1123213	ExpressionStatement	"FAIL_IF ( emit_do_imm ( compiler , MOV_r_i32 + reg_map [ SLJIT_R0 ] , local_size ) )"	170:2:5706:5779	1122787	0	True				
ANR	1123214	CallExpression	"FAIL_IF ( emit_do_imm ( compiler , MOV_r_i32 + reg_map [ SLJIT_R0 ] , local_size ) )"		1122787	0					
ANR	1123215	Callee	FAIL_IF		1122787	0					
ANR	1123216	Identifier	FAIL_IF		1122787	0					
ANR	1123217	ArgumentList	"emit_do_imm ( compiler , MOV_r_i32 + reg_map [ SLJIT_R0 ] , local_size )"		1122787	1					
ANR	1123218	Argument	"emit_do_imm ( compiler , MOV_r_i32 + reg_map [ SLJIT_R0 ] , local_size )"		1122787	0					
ANR	1123219	CallExpression	"emit_do_imm ( compiler , MOV_r_i32 + reg_map [ SLJIT_R0 ] , local_size )"		1122787	0					
ANR	1123220	Callee	emit_do_imm		1122787	0					
ANR	1123221	Identifier	emit_do_imm		1122787	0					
ANR	1123222	ArgumentList	compiler		1122787	1					
ANR	1123223	Argument	compiler		1122787	0					
ANR	1123224	Identifier	compiler		1122787	0					
ANR	1123225	Argument	MOV_r_i32 + reg_map [ SLJIT_R0 ]		1122787	1					
ANR	1123226	AdditiveExpression	MOV_r_i32 + reg_map [ SLJIT_R0 ]		1122787	0		+			
ANR	1123227	Identifier	MOV_r_i32		1122787	0					
ANR	1123228	ArrayIndexing	reg_map [ SLJIT_R0 ]		1122787	1					
ANR	1123229	Identifier	reg_map		1122787	0					
ANR	1123230	Identifier	SLJIT_R0		1122787	1					
ANR	1123231	Argument	local_size		1122787	2					
ANR	1123232	Identifier	local_size		1122787	0					
ANR	1123233	ExpressionStatement	"FAIL_IF ( sljit_emit_ijump ( compiler , SLJIT_CALL1 , SLJIT_IMM , SLJIT_FUNC_OFFSET ( sljit_grow_stack ) ) )"	177:2:6051:6147	1122787	1	True				
ANR	1123234	CallExpression	"FAIL_IF ( sljit_emit_ijump ( compiler , SLJIT_CALL1 , SLJIT_IMM , SLJIT_FUNC_OFFSET ( sljit_grow_stack ) ) )"		1122787	0					
ANR	1123235	Callee	FAIL_IF		1122787	0					
ANR	1123236	Identifier	FAIL_IF		1122787	0					
ANR	1123237	ArgumentList	"sljit_emit_ijump ( compiler , SLJIT_CALL1 , SLJIT_IMM , SLJIT_FUNC_OFFSET ( sljit_grow_stack ) )"		1122787	1					
ANR	1123238	Argument	"sljit_emit_ijump ( compiler , SLJIT_CALL1 , SLJIT_IMM , SLJIT_FUNC_OFFSET ( sljit_grow_stack ) )"		1122787	0					
ANR	1123239	CallExpression	"sljit_emit_ijump ( compiler , SLJIT_CALL1 , SLJIT_IMM , SLJIT_FUNC_OFFSET ( sljit_grow_stack ) )"		1122787	0					
ANR	1123240	Callee	sljit_emit_ijump		1122787	0					
ANR	1123241	Identifier	sljit_emit_ijump		1122787	0					
ANR	1123242	ArgumentList	compiler		1122787	1					
ANR	1123243	Argument	compiler		1122787	0					
ANR	1123244	Identifier	compiler		1122787	0					
ANR	1123245	Argument	SLJIT_CALL1		1122787	1					
ANR	1123246	Identifier	SLJIT_CALL1		1122787	0					
ANR	1123247	Argument	SLJIT_IMM		1122787	2					
ANR	1123248	Identifier	SLJIT_IMM		1122787	0					
ANR	1123249	Argument	SLJIT_FUNC_OFFSET ( sljit_grow_stack )		1122787	3					
ANR	1123250	CallExpression	SLJIT_FUNC_OFFSET ( sljit_grow_stack )		1122787	0					
ANR	1123251	Callee	SLJIT_FUNC_OFFSET		1122787	0					
ANR	1123252	Identifier	SLJIT_FUNC_OFFSET		1122787	0					
ANR	1123253	ArgumentList	sljit_grow_stack		1122787	1					
ANR	1123254	Argument	sljit_grow_stack		1122787	0					
ANR	1123255	Identifier	sljit_grow_stack		1122787	0					
ANR	1123256	ExpressionStatement	SLJIT_ASSERT ( local_size > 0 )	181:1:6161:6189	1122787	25	True				
ANR	1123257	CallExpression	SLJIT_ASSERT ( local_size > 0 )		1122787	0					
ANR	1123258	Callee	SLJIT_ASSERT		1122787	0					
ANR	1123259	Identifier	SLJIT_ASSERT		1122787	0					
ANR	1123260	ArgumentList	local_size > 0		1122787	1					
ANR	1123261	Argument	local_size > 0		1122787	0					
ANR	1123262	RelationalExpression	local_size > 0		1122787	0		>			
ANR	1123263	Identifier	local_size		1122787	0					
ANR	1123264	PrimaryExpression	0		1122787	1					
ANR	1123265	ReturnStatement	"return emit_non_cum_binary ( compiler , SUB_r_rm , SUB_rm_r , SUB , SUB_EAX_i32 , SLJIT_SP , 0 , SLJIT_SP , 0 , SLJIT_IMM , local_size ) ;"	182:1:6192:6317	1122787	26	True				
ANR	1123266	CallExpression	"emit_non_cum_binary ( compiler , SUB_r_rm , SUB_rm_r , SUB , SUB_EAX_i32 , SLJIT_SP , 0 , SLJIT_SP , 0 , SLJIT_IMM , local_size )"		1122787	0					
ANR	1123267	Callee	emit_non_cum_binary		1122787	0					
ANR	1123268	Identifier	emit_non_cum_binary		1122787	0					
ANR	1123269	ArgumentList	compiler		1122787	1					
ANR	1123270	Argument	compiler		1122787	0					
ANR	1123271	Identifier	compiler		1122787	0					
ANR	1123272	Argument	SUB_r_rm		1122787	1					
ANR	1123273	Identifier	SUB_r_rm		1122787	0					
ANR	1123274	Argument	SUB_rm_r		1122787	2					
ANR	1123275	Identifier	SUB_rm_r		1122787	0					
ANR	1123276	Argument	SUB		1122787	3					
ANR	1123277	Identifier	SUB		1122787	0					
ANR	1123278	Argument	SUB_EAX_i32		1122787	4					
ANR	1123279	Identifier	SUB_EAX_i32		1122787	0					
ANR	1123280	Argument	SLJIT_SP		1122787	5					
ANR	1123281	Identifier	SLJIT_SP		1122787	0					
ANR	1123282	Argument	0		1122787	6					
ANR	1123283	PrimaryExpression	0		1122787	0					
ANR	1123284	Argument	SLJIT_SP		1122787	7					
ANR	1123285	Identifier	SLJIT_SP		1122787	0					
ANR	1123286	Argument	0		1122787	8					
ANR	1123287	PrimaryExpression	0		1122787	0					
ANR	1123288	Argument	SLJIT_IMM		1122787	9					
ANR	1123289	Identifier	SLJIT_IMM		1122787	0					
ANR	1123290	Argument	local_size		1122787	10					
ANR	1123291	Identifier	local_size		1122787	0					
ANR	1123292	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1122787	1					
ANR	1123293	Identifier	sljit_emit_enter		1122787	2					
ANR	1123294	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1122787	3					
ANR	1123295	Parameter	struct sljit_compiler * compiler	66:51:2360:2390	1122787	0	True				
ANR	1123296	ParameterType	struct sljit_compiler *		1122787	0					
ANR	1123297	Identifier	compiler		1122787	1					
ANR	1123298	Parameter	sljit_si options	67:1:2394:2409	1122787	1	True				
ANR	1123299	ParameterType	sljit_si		1122787	0					
ANR	1123300	Identifier	options		1122787	1					
ANR	1123301	Parameter	sljit_si args	67:19:2412:2424	1122787	2	True				
ANR	1123302	ParameterType	sljit_si		1122787	0					
ANR	1123303	Identifier	args		1122787	1					
ANR	1123304	Parameter	sljit_si scratches	67:34:2427:2444	1122787	3	True				
ANR	1123305	ParameterType	sljit_si		1122787	0					
ANR	1123306	Identifier	scratches		1122787	1					
ANR	1123307	Parameter	sljit_si saveds	67:54:2447:2461	1122787	4	True				
ANR	1123308	ParameterType	sljit_si		1122787	0					
ANR	1123309	Identifier	saveds		1122787	1					
ANR	1123310	Parameter	sljit_si fscratches	68:1:2465:2483	1122787	5	True				
ANR	1123311	ParameterType	sljit_si		1122787	0					
ANR	1123312	Identifier	fscratches		1122787	1					
ANR	1123313	Parameter	sljit_si fsaveds	68:22:2486:2501	1122787	6	True				
ANR	1123314	ParameterType	sljit_si		1122787	0					
ANR	1123315	Identifier	fsaveds		1122787	1					
ANR	1123316	Parameter	sljit_si local_size	68:40:2504:2522	1122787	7	True				
ANR	1123317	ParameterType	sljit_si		1122787	0					
ANR	1123318	Identifier	local_size		1122787	1					
ANR	1123319	CFGEntryNode	ENTRY		1122787		True				
ANR	1123320	CFGExitNode	EXIT		1122787		True				
ANR	1123321	Symbol	TMP_REG1		1122787						
ANR	1123322	Symbol	sljit_grow_stack		1122787						
ANR	1123323	Symbol	saveds		1122787						
ANR	1123324	Symbol	compiler -> flags_saved		1122787						
ANR	1123325	Symbol	* inst ++		1122787						
ANR	1123326	Symbol	reg_map		1122787						
ANR	1123327	Symbol	check_sljit_emit_enter		1122787						
ANR	1123328	Symbol	* compiler		1122787						
ANR	1123329	Symbol	SLJIT_R1		1122787						
ANR	1123330	Symbol	SLJIT_R2		1122787						
ANR	1123331	Symbol	MOD_DISP8		1122787						
ANR	1123332	Symbol	SLJIT_R0		1122787						
ANR	1123333	Symbol	* SLJIT_R1		1122787						
ANR	1123334	Symbol	* SLJIT_R2		1122787						
ANR	1123335	Symbol	SLJIT_IMM		1122787						
ANR	1123336	Symbol	SLJIT_LOCALS_OFFSET		1122787						
ANR	1123337	Symbol	options		1122787						
ANR	1123338	Symbol	* TMP_REG1		1122787						
ANR	1123339	Symbol	compiler -> args		1122787						
ANR	1123340	Symbol	* SLJIT_R0		1122787						
ANR	1123341	Symbol	SUB		1122787						
ANR	1123342	Symbol	~15		1122787						
ANR	1123343	Symbol	emit_non_cum_binary		1122787						
ANR	1123344	Symbol	* reg_map		1122787						
ANR	1123345	Symbol	SLJIT_S2		1122787						
ANR	1123346	Symbol	SLJIT_S0		1122787						
ANR	1123347	Symbol	SUB_rm_r		1122787						
ANR	1123348	Symbol	SLJIT_S1		1122787						
ANR	1123349	Symbol	fscratches		1122787						
ANR	1123350	Symbol	compiler -> local_size		1122787						
ANR	1123351	Symbol	fsaveds		1122787						
ANR	1123352	Symbol	size		1122787						
ANR	1123353	Symbol	scratches		1122787						
ANR	1123354	Symbol	sljit_emit_ijump		1122787						
ANR	1123355	Symbol	MOV_r_i32		1122787						
ANR	1123356	Symbol	SLJIT_SP		1122787						
ANR	1123357	Symbol	require_at_least_two_words		1122787						
ANR	1123358	Symbol	SLJIT_FUNC_OFFSET		1122787						
ANR	1123359	Symbol	compiler		1122787						
ANR	1123360	Symbol	SUB_EAX_i32		1122787						
ANR	1123361	Symbol	local_size		1122787						
ANR	1123362	Symbol	MOV_r_rm		1122787						
ANR	1123363	Symbol	SUB_r_rm		1122787						
ANR	1123364	Symbol	MOD_REG		1122787						
ANR	1123365	Symbol	args		1122787						
ANR	1123366	Symbol	* SLJIT_S2		1122787						
ANR	1123367	Symbol	emit_do_imm		1122787						
ANR	1123368	Symbol	inst		1122787						
ANR	1123369	Symbol	ensure_buf		1122787						
ANR	1123370	Symbol	SLJIT_CALL1		1122787						
ANR	1123371	Symbol	* SLJIT_S0		1122787						
ANR	1123372	Symbol	* SLJIT_S1		1122787						
ANR	1123373	Function	sljit_set_context	186:0:6322:7230							
ANR	1123374	FunctionDef	"sljit_set_context (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1123373	0					
ANR	1123375	CompoundStatement		189:0:6539:7230	1123373	0					
ANR	1123376	ExpressionStatement	CHECK_ERROR ( )	190:1:6542:6555	1123373	0	True				
ANR	1123377	CallExpression	CHECK_ERROR ( )		1123373	0					
ANR	1123378	Callee	CHECK_ERROR		1123373	0					
ANR	1123379	Identifier	CHECK_ERROR		1123373	0					
ANR	1123380	ArgumentList			1123373	1					
ANR	1123381	ExpressionStatement	"CHECK ( check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"	191:1:6558:6665	1123373	1	True				
ANR	1123382	CallExpression	"CHECK ( check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"		1123373	0					
ANR	1123383	Callee	CHECK		1123373	0					
ANR	1123384	Identifier	CHECK		1123373	0					
ANR	1123385	ArgumentList	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1123373	1					
ANR	1123386	Argument	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1123373	0					
ANR	1123387	CallExpression	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1123373	0					
ANR	1123388	Callee	check_sljit_set_context		1123373	0					
ANR	1123389	Identifier	check_sljit_set_context		1123373	0					
ANR	1123390	ArgumentList	compiler		1123373	1					
ANR	1123391	Argument	compiler		1123373	0					
ANR	1123392	Identifier	compiler		1123373	0					
ANR	1123393	Argument	options		1123373	1					
ANR	1123394	Identifier	options		1123373	0					
ANR	1123395	Argument	args		1123373	2					
ANR	1123396	Identifier	args		1123373	0					
ANR	1123397	Argument	scratches		1123373	3					
ANR	1123398	Identifier	scratches		1123373	0					
ANR	1123399	Argument	saveds		1123373	4					
ANR	1123400	Identifier	saveds		1123373	0					
ANR	1123401	Argument	fscratches		1123373	5					
ANR	1123402	Identifier	fscratches		1123373	0					
ANR	1123403	Argument	fsaveds		1123373	6					
ANR	1123404	Identifier	fsaveds		1123373	0					
ANR	1123405	Argument	local_size		1123373	7					
ANR	1123406	Identifier	local_size		1123373	0					
ANR	1123407	ExpressionStatement	"set_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"	192:1:6668:6760	1123373	2	True				
ANR	1123408	CallExpression	"set_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1123373	0					
ANR	1123409	Callee	set_set_context		1123373	0					
ANR	1123410	Identifier	set_set_context		1123373	0					
ANR	1123411	ArgumentList	compiler		1123373	1					
ANR	1123412	Argument	compiler		1123373	0					
ANR	1123413	Identifier	compiler		1123373	0					
ANR	1123414	Argument	options		1123373	1					
ANR	1123415	Identifier	options		1123373	0					
ANR	1123416	Argument	args		1123373	2					
ANR	1123417	Identifier	args		1123373	0					
ANR	1123418	Argument	scratches		1123373	3					
ANR	1123419	Identifier	scratches		1123373	0					
ANR	1123420	Argument	saveds		1123373	4					
ANR	1123421	Identifier	saveds		1123373	0					
ANR	1123422	Argument	fscratches		1123373	5					
ANR	1123423	Identifier	fscratches		1123373	0					
ANR	1123424	Argument	fsaveds		1123373	6					
ANR	1123425	Identifier	fsaveds		1123373	0					
ANR	1123426	Argument	local_size		1123373	7					
ANR	1123427	Identifier	local_size		1123373	0					
ANR	1123428	ExpressionStatement	compiler -> args = args	194:1:6764:6785	1123373	3	True				
ANR	1123429	AssignmentExpression	compiler -> args = args		1123373	0		=			
ANR	1123430	PtrMemberAccess	compiler -> args		1123373	0					
ANR	1123431	Identifier	compiler		1123373	0					
ANR	1123432	Identifier	args		1123373	1					
ANR	1123433	Identifier	args		1123373	1					
ANR	1123434	ExpressionStatement	saveds = ( 2 + ( scratches > 7 ? ( scratches - 7 ) : 0 ) + ( saveds <= 3 ? saveds : 3 ) ) * sizeof ( sljit_uw )	197:1:6812:6912	1123373	4	True				
ANR	1123435	AssignmentExpression	saveds = ( 2 + ( scratches > 7 ? ( scratches - 7 ) : 0 ) + ( saveds <= 3 ? saveds : 3 ) ) * sizeof ( sljit_uw )		1123373	0		=			
ANR	1123436	Identifier	saveds		1123373	0					
ANR	1123437	MultiplicativeExpression	( 2 + ( scratches > 7 ? ( scratches - 7 ) : 0 ) + ( saveds <= 3 ? saveds : 3 ) ) * sizeof ( sljit_uw )		1123373	1		*			
ANR	1123438	AdditiveExpression	2 + ( scratches > 7 ? ( scratches - 7 ) : 0 ) + ( saveds <= 3 ? saveds : 3 )		1123373	0		+			
ANR	1123439	PrimaryExpression	2		1123373	0					
ANR	1123440	AdditiveExpression	( scratches > 7 ? ( scratches - 7 ) : 0 ) + ( saveds <= 3 ? saveds : 3 )		1123373	1		+			
ANR	1123441	ConditionalExpression	scratches > 7 ? ( scratches - 7 ) : 0		1123373	0					
ANR	1123442	Condition	scratches > 7		1123373	0					
ANR	1123443	RelationalExpression	scratches > 7		1123373	0		>			
ANR	1123444	Identifier	scratches		1123373	0					
ANR	1123445	PrimaryExpression	7		1123373	1					
ANR	1123446	AdditiveExpression	scratches - 7		1123373	1		-			
ANR	1123447	Identifier	scratches		1123373	0					
ANR	1123448	PrimaryExpression	7		1123373	1					
ANR	1123449	PrimaryExpression	0		1123373	2					
ANR	1123450	ConditionalExpression	saveds <= 3 ? saveds : 3		1123373	1					
ANR	1123451	Condition	saveds <= 3		1123373	0					
ANR	1123452	RelationalExpression	saveds <= 3		1123373	0		<=			
ANR	1123453	Identifier	saveds		1123373	0					
ANR	1123454	PrimaryExpression	3		1123373	1					
ANR	1123455	Identifier	saveds		1123373	1					
ANR	1123456	PrimaryExpression	3		1123373	2					
ANR	1123457	SizeofExpression	sizeof ( sljit_uw )		1123373	1					
ANR	1123458	Sizeof	sizeof		1123373	0					
ANR	1123459	SizeofOperand	sljit_uw		1123373	1					
ANR	1123460	ExpressionStatement	compiler -> local_size = ( ( SLJIT_LOCALS_OFFSET + saveds + local_size + 15 ) & ~15 ) - saveds	198:1:6915:7003	1123373	5	True				
ANR	1123461	AssignmentExpression	compiler -> local_size = ( ( SLJIT_LOCALS_OFFSET + saveds + local_size + 15 ) & ~15 ) - saveds		1123373	0		=			
ANR	1123462	PtrMemberAccess	compiler -> local_size		1123373	0					
ANR	1123463	Identifier	compiler		1123373	0					
ANR	1123464	Identifier	local_size		1123373	1					
ANR	1123465	AdditiveExpression	( ( SLJIT_LOCALS_OFFSET + saveds + local_size + 15 ) & ~15 ) - saveds		1123373	1		-			
ANR	1123466	BitAndExpression	( SLJIT_LOCALS_OFFSET + saveds + local_size + 15 ) & ~15		1123373	0		&			
ANR	1123467	AdditiveExpression	SLJIT_LOCALS_OFFSET + saveds + local_size + 15		1123373	0		+			
ANR	1123468	Identifier	SLJIT_LOCALS_OFFSET		1123373	0					
ANR	1123469	AdditiveExpression	saveds + local_size + 15		1123373	1		+			
ANR	1123470	Identifier	saveds		1123373	0					
ANR	1123471	AdditiveExpression	local_size + 15		1123373	1		+			
ANR	1123472	Identifier	local_size		1123373	0					
ANR	1123473	PrimaryExpression	15		1123373	1					
ANR	1123474	Identifier	~15		1123373	1					
ANR	1123475	Identifier	saveds		1123373	1					
ANR	1123476	ReturnStatement	return SLJIT_SUCCESS ;	205:1:7208:7228	1123373	6	True				
ANR	1123477	Identifier	SLJIT_SUCCESS		1123373	0					
ANR	1123478	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1123373	1					
ANR	1123479	Identifier	sljit_set_context		1123373	2					
ANR	1123480	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1123373	3					
ANR	1123481	Parameter	struct sljit_compiler * compiler	186:52:6374:6404	1123373	0	True				
ANR	1123482	ParameterType	struct sljit_compiler *		1123373	0					
ANR	1123483	Identifier	compiler		1123373	1					
ANR	1123484	Parameter	sljit_si options	187:1:6408:6423	1123373	1	True				
ANR	1123485	ParameterType	sljit_si		1123373	0					
ANR	1123486	Identifier	options		1123373	1					
ANR	1123487	Parameter	sljit_si args	187:19:6426:6438	1123373	2	True				
ANR	1123488	ParameterType	sljit_si		1123373	0					
ANR	1123489	Identifier	args		1123373	1					
ANR	1123490	Parameter	sljit_si scratches	187:34:6441:6458	1123373	3	True				
ANR	1123491	ParameterType	sljit_si		1123373	0					
ANR	1123492	Identifier	scratches		1123373	1					
ANR	1123493	Parameter	sljit_si saveds	187:54:6461:6475	1123373	4	True				
ANR	1123494	ParameterType	sljit_si		1123373	0					
ANR	1123495	Identifier	saveds		1123373	1					
ANR	1123496	Parameter	sljit_si fscratches	188:1:6479:6497	1123373	5	True				
ANR	1123497	ParameterType	sljit_si		1123373	0					
ANR	1123498	Identifier	fscratches		1123373	1					
ANR	1123499	Parameter	sljit_si fsaveds	188:22:6500:6515	1123373	6	True				
ANR	1123500	ParameterType	sljit_si		1123373	0					
ANR	1123501	Identifier	fsaveds		1123373	1					
ANR	1123502	Parameter	sljit_si local_size	188:40:6518:6536	1123373	7	True				
ANR	1123503	ParameterType	sljit_si		1123373	0					
ANR	1123504	Identifier	local_size		1123373	1					
ANR	1123505	CFGEntryNode	ENTRY		1123373		True				
ANR	1123506	CFGExitNode	EXIT		1123373		True				
ANR	1123507	Symbol	local_size		1123373						
ANR	1123508	Symbol	~15		1123373						
ANR	1123509	Symbol	scratches		1123373						
ANR	1123510	Symbol	saveds		1123373						
ANR	1123511	Symbol	check_sljit_set_context		1123373						
ANR	1123512	Symbol	SLJIT_SUCCESS		1123373						
ANR	1123513	Symbol	* compiler		1123373						
ANR	1123514	Symbol	args		1123373						
ANR	1123515	Symbol	fscratches		1123373						
ANR	1123516	Symbol	compiler -> local_size		1123373						
ANR	1123517	Symbol	fsaveds		1123373						
ANR	1123518	Symbol	SLJIT_LOCALS_OFFSET		1123373						
ANR	1123519	Symbol	options		1123373						
ANR	1123520	Symbol	compiler		1123373						
ANR	1123521	Symbol	compiler -> args		1123373						
ANR	1123522	Function	sljit_emit_return	208:0:7233:8875							
ANR	1123523	FunctionDef	"sljit_emit_return (struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw)"		1123522	0					
ANR	1123524	CompoundStatement		209:0:7360:8875	1123522	0					
ANR	1123525	IdentifierDeclStatement	sljit_si size ;	210:1:7363:7376	1123522	0	True				
ANR	1123526	IdentifierDecl	size		1123522	0					
ANR	1123527	IdentifierDeclType	sljit_si		1123522	0					
ANR	1123528	Identifier	size		1123522	1					
ANR	1123529	IdentifierDeclStatement	sljit_ub * inst ;	211:1:7379:7393	1123522	1	True				
ANR	1123530	IdentifierDecl	* inst		1123522	0					
ANR	1123531	IdentifierDeclType	sljit_ub *		1123522	0					
ANR	1123532	Identifier	inst		1123522	1					
ANR	1123533	ExpressionStatement	CHECK_ERROR ( )	213:1:7397:7410	1123522	2	True				
ANR	1123534	CallExpression	CHECK_ERROR ( )		1123522	0					
ANR	1123535	Callee	CHECK_ERROR		1123522	0					
ANR	1123536	Identifier	CHECK_ERROR		1123522	0					
ANR	1123537	ArgumentList			1123522	1					
ANR	1123538	ExpressionStatement	"CHECK ( check_sljit_emit_return ( compiler , op , src , srcw ) )"	214:1:7413:7468	1123522	3	True				
ANR	1123539	CallExpression	"CHECK ( check_sljit_emit_return ( compiler , op , src , srcw ) )"		1123522	0					
ANR	1123540	Callee	CHECK		1123522	0					
ANR	1123541	Identifier	CHECK		1123522	0					
ANR	1123542	ArgumentList	"check_sljit_emit_return ( compiler , op , src , srcw )"		1123522	1					
ANR	1123543	Argument	"check_sljit_emit_return ( compiler , op , src , srcw )"		1123522	0					
ANR	1123544	CallExpression	"check_sljit_emit_return ( compiler , op , src , srcw )"		1123522	0					
ANR	1123545	Callee	check_sljit_emit_return		1123522	0					
ANR	1123546	Identifier	check_sljit_emit_return		1123522	0					
ANR	1123547	ArgumentList	compiler		1123522	1					
ANR	1123548	Argument	compiler		1123522	0					
ANR	1123549	Identifier	compiler		1123522	0					
ANR	1123550	Argument	op		1123522	1					
ANR	1123551	Identifier	op		1123522	0					
ANR	1123552	Argument	src		1123522	2					
ANR	1123553	Identifier	src		1123522	0					
ANR	1123554	Argument	srcw		1123522	3					
ANR	1123555	Identifier	srcw		1123522	0					
ANR	1123556	ExpressionStatement	SLJIT_ASSERT ( compiler -> args >= 0 )	215:1:7471:7504	1123522	4	True				
ANR	1123557	CallExpression	SLJIT_ASSERT ( compiler -> args >= 0 )		1123522	0					
ANR	1123558	Callee	SLJIT_ASSERT		1123522	0					
ANR	1123559	Identifier	SLJIT_ASSERT		1123522	0					
ANR	1123560	ArgumentList	compiler -> args >= 0		1123522	1					
ANR	1123561	Argument	compiler -> args >= 0		1123522	0					
ANR	1123562	RelationalExpression	compiler -> args >= 0		1123522	0		>=			
ANR	1123563	PtrMemberAccess	compiler -> args		1123522	0					
ANR	1123564	Identifier	compiler		1123522	0					
ANR	1123565	Identifier	args		1123522	1					
ANR	1123566	PrimaryExpression	0		1123522	1					
ANR	1123567	ExpressionStatement	compiler -> flags_saved = 0	217:1:7508:7533	1123522	5	True				
ANR	1123568	AssignmentExpression	compiler -> flags_saved = 0		1123522	0		=			
ANR	1123569	PtrMemberAccess	compiler -> flags_saved		1123522	0					
ANR	1123570	Identifier	compiler		1123522	0					
ANR	1123571	Identifier	flags_saved		1123522	1					
ANR	1123572	PrimaryExpression	0		1123522	1					
ANR	1123573	ExpressionStatement	"FAIL_IF ( emit_mov_before_return ( compiler , op , src , srcw ) )"	218:1:7536:7592	1123522	6	True				
ANR	1123574	CallExpression	"FAIL_IF ( emit_mov_before_return ( compiler , op , src , srcw ) )"		1123522	0					
ANR	1123575	Callee	FAIL_IF		1123522	0					
ANR	1123576	Identifier	FAIL_IF		1123522	0					
ANR	1123577	ArgumentList	"emit_mov_before_return ( compiler , op , src , srcw )"		1123522	1					
ANR	1123578	Argument	"emit_mov_before_return ( compiler , op , src , srcw )"		1123522	0					
ANR	1123579	CallExpression	"emit_mov_before_return ( compiler , op , src , srcw )"		1123522	0					
ANR	1123580	Callee	emit_mov_before_return		1123522	0					
ANR	1123581	Identifier	emit_mov_before_return		1123522	0					
ANR	1123582	ArgumentList	compiler		1123522	1					
ANR	1123583	Argument	compiler		1123522	0					
ANR	1123584	Identifier	compiler		1123522	0					
ANR	1123585	Argument	op		1123522	1					
ANR	1123586	Identifier	op		1123522	0					
ANR	1123587	Argument	src		1123522	2					
ANR	1123588	Identifier	src		1123522	0					
ANR	1123589	Argument	srcw		1123522	3					
ANR	1123590	Identifier	srcw		1123522	0					
ANR	1123591	ExpressionStatement	SLJIT_ASSERT ( compiler -> local_size > 0 )	220:1:7596:7634	1123522	7	True				
ANR	1123592	CallExpression	SLJIT_ASSERT ( compiler -> local_size > 0 )		1123522	0					
ANR	1123593	Callee	SLJIT_ASSERT		1123522	0					
ANR	1123594	Identifier	SLJIT_ASSERT		1123522	0					
ANR	1123595	ArgumentList	compiler -> local_size > 0		1123522	1					
ANR	1123596	Argument	compiler -> local_size > 0		1123522	0					
ANR	1123597	RelationalExpression	compiler -> local_size > 0		1123522	0		>			
ANR	1123598	PtrMemberAccess	compiler -> local_size		1123522	0					
ANR	1123599	Identifier	compiler		1123522	0					
ANR	1123600	Identifier	local_size		1123522	1					
ANR	1123601	PrimaryExpression	0		1123522	1					
ANR	1123602	ExpressionStatement	"FAIL_IF ( emit_cum_binary ( compiler , ADD_r_rm , ADD_rm_r , ADD , ADD_EAX_i32 , SLJIT_SP , 0 , SLJIT_SP , 0 , SLJIT_IMM , compiler -> local_size ) )"	221:1:7637:7770	1123522	8	True				
ANR	1123603	CallExpression	"FAIL_IF ( emit_cum_binary ( compiler , ADD_r_rm , ADD_rm_r , ADD , ADD_EAX_i32 , SLJIT_SP , 0 , SLJIT_SP , 0 , SLJIT_IMM , compiler -> local_size ) )"		1123522	0					
ANR	1123604	Callee	FAIL_IF		1123522	0					
ANR	1123605	Identifier	FAIL_IF		1123522	0					
ANR	1123606	ArgumentList	"emit_cum_binary ( compiler , ADD_r_rm , ADD_rm_r , ADD , ADD_EAX_i32 , SLJIT_SP , 0 , SLJIT_SP , 0 , SLJIT_IMM , compiler -> local_size )"		1123522	1					
ANR	1123607	Argument	"emit_cum_binary ( compiler , ADD_r_rm , ADD_rm_r , ADD , ADD_EAX_i32 , SLJIT_SP , 0 , SLJIT_SP , 0 , SLJIT_IMM , compiler -> local_size )"		1123522	0					
ANR	1123608	CallExpression	"emit_cum_binary ( compiler , ADD_r_rm , ADD_rm_r , ADD , ADD_EAX_i32 , SLJIT_SP , 0 , SLJIT_SP , 0 , SLJIT_IMM , compiler -> local_size )"		1123522	0					
ANR	1123609	Callee	emit_cum_binary		1123522	0					
ANR	1123610	Identifier	emit_cum_binary		1123522	0					
ANR	1123611	ArgumentList	compiler		1123522	1					
ANR	1123612	Argument	compiler		1123522	0					
ANR	1123613	Identifier	compiler		1123522	0					
ANR	1123614	Argument	ADD_r_rm		1123522	1					
ANR	1123615	Identifier	ADD_r_rm		1123522	0					
ANR	1123616	Argument	ADD_rm_r		1123522	2					
ANR	1123617	Identifier	ADD_rm_r		1123522	0					
ANR	1123618	Argument	ADD		1123522	3					
ANR	1123619	Identifier	ADD		1123522	0					
ANR	1123620	Argument	ADD_EAX_i32		1123522	4					
ANR	1123621	Identifier	ADD_EAX_i32		1123522	0					
ANR	1123622	Argument	SLJIT_SP		1123522	5					
ANR	1123623	Identifier	SLJIT_SP		1123522	0					
ANR	1123624	Argument	0		1123522	6					
ANR	1123625	PrimaryExpression	0		1123522	0					
ANR	1123626	Argument	SLJIT_SP		1123522	7					
ANR	1123627	Identifier	SLJIT_SP		1123522	0					
ANR	1123628	Argument	0		1123522	8					
ANR	1123629	PrimaryExpression	0		1123522	0					
ANR	1123630	Argument	SLJIT_IMM		1123522	9					
ANR	1123631	Identifier	SLJIT_IMM		1123522	0					
ANR	1123632	Argument	compiler -> local_size		1123522	10					
ANR	1123633	PtrMemberAccess	compiler -> local_size		1123522	0					
ANR	1123634	Identifier	compiler		1123522	0					
ANR	1123635	Identifier	local_size		1123522	1					
ANR	1123636	IfStatement	if ( compiler -> options & SLJIT_DOUBLE_ALIGNMENT )		1123522	9					
ANR	1123637	Condition	compiler -> options & SLJIT_DOUBLE_ALIGNMENT	225:5:7802:7843	1123522	0	True				
ANR	1123638	BitAndExpression	compiler -> options & SLJIT_DOUBLE_ALIGNMENT		1123522	0		&			
ANR	1123639	PtrMemberAccess	compiler -> options		1123522	0					
ANR	1123640	Identifier	compiler		1123522	0					
ANR	1123641	Identifier	options		1123522	1					
ANR	1123642	Identifier	SLJIT_DOUBLE_ALIGNMENT		1123522	1					
ANR	1123643	CompoundStatement		17:49:485:485	1123522	1					
ANR	1123644	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 3 )"	226:2:7850:7895	1123522	0	True				
ANR	1123645	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 3 )"		1123522	0		=			
ANR	1123646	Identifier	inst		1123522	0					
ANR	1123647	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 3 )"		1123522	1					
ANR	1123648	CastTarget	sljit_ub *		1123522	0					
ANR	1123649	CallExpression	"ensure_buf ( compiler , 1 + 3 )"		1123522	1					
ANR	1123650	Callee	ensure_buf		1123522	0					
ANR	1123651	Identifier	ensure_buf		1123522	0					
ANR	1123652	ArgumentList	compiler		1123522	1					
ANR	1123653	Argument	compiler		1123522	0					
ANR	1123654	Identifier	compiler		1123522	0					
ANR	1123655	Argument	1 + 3		1123522	1					
ANR	1123656	AdditiveExpression	1 + 3		1123522	0		+			
ANR	1123657	PrimaryExpression	1		1123522	0					
ANR	1123658	PrimaryExpression	3		1123522	1					
ANR	1123659	ExpressionStatement	FAIL_IF ( ! inst )	227:2:7899:7913	1123522	1	True				
ANR	1123660	CallExpression	FAIL_IF ( ! inst )		1123522	0					
ANR	1123661	Callee	FAIL_IF		1123522	0					
ANR	1123662	Identifier	FAIL_IF		1123522	0					
ANR	1123663	ArgumentList	! inst		1123522	1					
ANR	1123664	Argument	! inst		1123522	0					
ANR	1123665	UnaryOperationExpression	! inst		1123522	0					
ANR	1123666	UnaryOperator	!		1123522	0					
ANR	1123667	Identifier	inst		1123522	1					
ANR	1123668	ExpressionStatement	INC_SIZE ( 3 )	229:2:7918:7929	1123522	2	True				
ANR	1123669	CallExpression	INC_SIZE ( 3 )		1123522	0					
ANR	1123670	Callee	INC_SIZE		1123522	0					
ANR	1123671	Identifier	INC_SIZE		1123522	0					
ANR	1123672	ArgumentList	3		1123522	1					
ANR	1123673	Argument	3		1123522	0					
ANR	1123674	PrimaryExpression	3		1123522	0					
ANR	1123675	ExpressionStatement	inst [ 0 ] = MOV_r_rm	230:2:7933:7951	1123522	3	True				
ANR	1123676	AssignmentExpression	inst [ 0 ] = MOV_r_rm		1123522	0		=			
ANR	1123677	ArrayIndexing	inst [ 0 ]		1123522	0					
ANR	1123678	Identifier	inst		1123522	0					
ANR	1123679	PrimaryExpression	0		1123522	1					
ANR	1123680	Identifier	MOV_r_rm		1123522	1					
ANR	1123681	ExpressionStatement	inst [ 1 ] = ( reg_map [ SLJIT_SP ] << 3 ) | 0x4	231:2:7955:8005	1123522	4	True				
ANR	1123682	AssignmentExpression	inst [ 1 ] = ( reg_map [ SLJIT_SP ] << 3 ) | 0x4		1123522	0		=			
ANR	1123683	ArrayIndexing	inst [ 1 ]		1123522	0					
ANR	1123684	Identifier	inst		1123522	0					
ANR	1123685	PrimaryExpression	1		1123522	1					
ANR	1123686	InclusiveOrExpression	( reg_map [ SLJIT_SP ] << 3 ) | 0x4		1123522	1		|			
ANR	1123687	ShiftExpression	reg_map [ SLJIT_SP ] << 3		1123522	0		<<			
ANR	1123688	ArrayIndexing	reg_map [ SLJIT_SP ]		1123522	0					
ANR	1123689	Identifier	reg_map		1123522	0					
ANR	1123690	Identifier	SLJIT_SP		1123522	1					
ANR	1123691	PrimaryExpression	3		1123522	1					
ANR	1123692	PrimaryExpression	0x4		1123522	1					
ANR	1123693	ExpressionStatement	inst [ 2 ] = ( 4 << 3 ) | reg_map [ SLJIT_SP ]	232:2:8009:8047	1123522	5	True				
ANR	1123694	AssignmentExpression	inst [ 2 ] = ( 4 << 3 ) | reg_map [ SLJIT_SP ]		1123522	0		=			
ANR	1123695	ArrayIndexing	inst [ 2 ]		1123522	0					
ANR	1123696	Identifier	inst		1123522	0					
ANR	1123697	PrimaryExpression	2		1123522	1					
ANR	1123698	InclusiveOrExpression	( 4 << 3 ) | reg_map [ SLJIT_SP ]		1123522	1		|			
ANR	1123699	ShiftExpression	4 << 3		1123522	0		<<			
ANR	1123700	PrimaryExpression	4		1123522	0					
ANR	1123701	PrimaryExpression	3		1123522	1					
ANR	1123702	ArrayIndexing	reg_map [ SLJIT_SP ]		1123522	1					
ANR	1123703	Identifier	reg_map		1123522	0					
ANR	1123704	Identifier	SLJIT_SP		1123522	1					
ANR	1123705	ExpressionStatement	size = 2 + ( compiler -> scratches > 7 ? ( compiler -> scratches - 7 ) : 0 ) + ( compiler -> saveds <= 3 ? compiler -> saveds : 3 )	236:1:8061:8180	1123522	10	True				
ANR	1123706	AssignmentExpression	size = 2 + ( compiler -> scratches > 7 ? ( compiler -> scratches - 7 ) : 0 ) + ( compiler -> saveds <= 3 ? compiler -> saveds : 3 )		1123522	0		=			
ANR	1123707	Identifier	size		1123522	0					
ANR	1123708	AdditiveExpression	2 + ( compiler -> scratches > 7 ? ( compiler -> scratches - 7 ) : 0 ) + ( compiler -> saveds <= 3 ? compiler -> saveds : 3 )		1123522	1		+			
ANR	1123709	PrimaryExpression	2		1123522	0					
ANR	1123710	AdditiveExpression	( compiler -> scratches > 7 ? ( compiler -> scratches - 7 ) : 0 ) + ( compiler -> saveds <= 3 ? compiler -> saveds : 3 )		1123522	1		+			
ANR	1123711	ConditionalExpression	compiler -> scratches > 7 ? ( compiler -> scratches - 7 ) : 0		1123522	0					
ANR	1123712	Condition	compiler -> scratches > 7		1123522	0					
ANR	1123713	RelationalExpression	compiler -> scratches > 7		1123522	0		>			
ANR	1123714	PtrMemberAccess	compiler -> scratches		1123522	0					
ANR	1123715	Identifier	compiler		1123522	0					
ANR	1123716	Identifier	scratches		1123522	1					
ANR	1123717	PrimaryExpression	7		1123522	1					
ANR	1123718	AdditiveExpression	compiler -> scratches - 7		1123522	1		-			
ANR	1123719	PtrMemberAccess	compiler -> scratches		1123522	0					
ANR	1123720	Identifier	compiler		1123522	0					
ANR	1123721	Identifier	scratches		1123522	1					
ANR	1123722	PrimaryExpression	7		1123522	1					
ANR	1123723	PrimaryExpression	0		1123522	2					
ANR	1123724	ConditionalExpression	compiler -> saveds <= 3 ? compiler -> saveds : 3		1123522	1					
ANR	1123725	Condition	compiler -> saveds <= 3		1123522	0					
ANR	1123726	RelationalExpression	compiler -> saveds <= 3		1123522	0		<=			
ANR	1123727	PtrMemberAccess	compiler -> saveds		1123522	0					
ANR	1123728	Identifier	compiler		1123522	0					
ANR	1123729	Identifier	saveds		1123522	1					
ANR	1123730	PrimaryExpression	3		1123522	1					
ANR	1123731	PtrMemberAccess	compiler -> saveds		1123522	1					
ANR	1123732	Identifier	compiler		1123522	0					
ANR	1123733	Identifier	saveds		1123522	1					
ANR	1123734	PrimaryExpression	3		1123522	2					
ANR	1123735	IfStatement	if ( compiler -> args > 2 )		1123522	11					
ANR	1123736	Condition	compiler -> args > 2	239:5:8248:8265	1123522	0	True				
ANR	1123737	RelationalExpression	compiler -> args > 2		1123522	0		>			
ANR	1123738	PtrMemberAccess	compiler -> args		1123522	0					
ANR	1123739	Identifier	compiler		1123522	0					
ANR	1123740	Identifier	args		1123522	1					
ANR	1123741	PrimaryExpression	2		1123522	1					
ANR	1123742	ExpressionStatement	size += 2	240:2:8270:8279	1123522	1	True				
ANR	1123743	AssignmentExpression	size += 2		1123522	0		+=			
ANR	1123744	Identifier	size		1123522	0					
ANR	1123745	PrimaryExpression	2		1123522	1					
ANR	1123746	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + size )"	245:1:8333:8381	1123522	12	True				
ANR	1123747	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + size )"		1123522	0		=			
ANR	1123748	Identifier	inst		1123522	0					
ANR	1123749	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + size )"		1123522	1					
ANR	1123750	CastTarget	sljit_ub *		1123522	0					
ANR	1123751	CallExpression	"ensure_buf ( compiler , 1 + size )"		1123522	1					
ANR	1123752	Callee	ensure_buf		1123522	0					
ANR	1123753	Identifier	ensure_buf		1123522	0					
ANR	1123754	ArgumentList	compiler		1123522	1					
ANR	1123755	Argument	compiler		1123522	0					
ANR	1123756	Identifier	compiler		1123522	0					
ANR	1123757	Argument	1 + size		1123522	1					
ANR	1123758	AdditiveExpression	1 + size		1123522	0		+			
ANR	1123759	PrimaryExpression	1		1123522	0					
ANR	1123760	Identifier	size		1123522	1					
ANR	1123761	ExpressionStatement	FAIL_IF ( ! inst )	246:1:8384:8398	1123522	13	True				
ANR	1123762	CallExpression	FAIL_IF ( ! inst )		1123522	0					
ANR	1123763	Callee	FAIL_IF		1123522	0					
ANR	1123764	Identifier	FAIL_IF		1123522	0					
ANR	1123765	ArgumentList	! inst		1123522	1					
ANR	1123766	Argument	! inst		1123522	0					
ANR	1123767	UnaryOperationExpression	! inst		1123522	0					
ANR	1123768	UnaryOperator	!		1123522	0					
ANR	1123769	Identifier	inst		1123522	1					
ANR	1123770	ExpressionStatement	INC_SIZE ( size )	248:1:8402:8416	1123522	14	True				
ANR	1123771	CallExpression	INC_SIZE ( size )		1123522	0					
ANR	1123772	Callee	INC_SIZE		1123522	0					
ANR	1123773	Identifier	INC_SIZE		1123522	0					
ANR	1123774	ArgumentList	size		1123522	1					
ANR	1123775	Argument	size		1123522	0					
ANR	1123776	Identifier	size		1123522	0					
ANR	1123777	IfStatement	if ( compiler -> saveds > 0 || compiler -> scratches > 9 )		1123522	15					
ANR	1123778	Condition	compiler -> saveds > 0 || compiler -> scratches > 9	250:5:8424:8470	1123522	0	True				
ANR	1123779	OrExpression	compiler -> saveds > 0 || compiler -> scratches > 9		1123522	0		||			
ANR	1123780	RelationalExpression	compiler -> saveds > 0		1123522	0		>			
ANR	1123781	PtrMemberAccess	compiler -> saveds		1123522	0					
ANR	1123782	Identifier	compiler		1123522	0					
ANR	1123783	Identifier	saveds		1123522	1					
ANR	1123784	PrimaryExpression	0		1123522	1					
ANR	1123785	RelationalExpression	compiler -> scratches > 9		1123522	1		>			
ANR	1123786	PtrMemberAccess	compiler -> scratches		1123522	0					
ANR	1123787	Identifier	compiler		1123522	0					
ANR	1123788	Identifier	scratches		1123522	1					
ANR	1123789	PrimaryExpression	9		1123522	1					
ANR	1123790	ExpressionStatement	POP_REG ( reg_map [ SLJIT_S0 ] )	251:2:8475:8501	1123522	1	True				
ANR	1123791	CallExpression	POP_REG ( reg_map [ SLJIT_S0 ] )		1123522	0					
ANR	1123792	Callee	POP_REG		1123522	0					
ANR	1123793	Identifier	POP_REG		1123522	0					
ANR	1123794	ArgumentList	reg_map [ SLJIT_S0 ]		1123522	1					
ANR	1123795	Argument	reg_map [ SLJIT_S0 ]		1123522	0					
ANR	1123796	ArrayIndexing	reg_map [ SLJIT_S0 ]		1123522	0					
ANR	1123797	Identifier	reg_map		1123522	0					
ANR	1123798	Identifier	SLJIT_S0		1123522	1					
ANR	1123799	IfStatement	if ( compiler -> saveds > 1 || compiler -> scratches > 8 )		1123522	16					
ANR	1123800	Condition	compiler -> saveds > 1 || compiler -> scratches > 8	252:5:8508:8554	1123522	0	True				
ANR	1123801	OrExpression	compiler -> saveds > 1 || compiler -> scratches > 8		1123522	0		||			
ANR	1123802	RelationalExpression	compiler -> saveds > 1		1123522	0		>			
ANR	1123803	PtrMemberAccess	compiler -> saveds		1123522	0					
ANR	1123804	Identifier	compiler		1123522	0					
ANR	1123805	Identifier	saveds		1123522	1					
ANR	1123806	PrimaryExpression	1		1123522	1					
ANR	1123807	RelationalExpression	compiler -> scratches > 8		1123522	1		>			
ANR	1123808	PtrMemberAccess	compiler -> scratches		1123522	0					
ANR	1123809	Identifier	compiler		1123522	0					
ANR	1123810	Identifier	scratches		1123522	1					
ANR	1123811	PrimaryExpression	8		1123522	1					
ANR	1123812	ExpressionStatement	POP_REG ( reg_map [ SLJIT_S1 ] )	253:2:8559:8585	1123522	1	True				
ANR	1123813	CallExpression	POP_REG ( reg_map [ SLJIT_S1 ] )		1123522	0					
ANR	1123814	Callee	POP_REG		1123522	0					
ANR	1123815	Identifier	POP_REG		1123522	0					
ANR	1123816	ArgumentList	reg_map [ SLJIT_S1 ]		1123522	1					
ANR	1123817	Argument	reg_map [ SLJIT_S1 ]		1123522	0					
ANR	1123818	ArrayIndexing	reg_map [ SLJIT_S1 ]		1123522	0					
ANR	1123819	Identifier	reg_map		1123522	0					
ANR	1123820	Identifier	SLJIT_S1		1123522	1					
ANR	1123821	IfStatement	if ( compiler -> saveds > 2 || compiler -> scratches > 7 )		1123522	17					
ANR	1123822	Condition	compiler -> saveds > 2 || compiler -> scratches > 7	254:5:8592:8638	1123522	0	True				
ANR	1123823	OrExpression	compiler -> saveds > 2 || compiler -> scratches > 7		1123522	0		||			
ANR	1123824	RelationalExpression	compiler -> saveds > 2		1123522	0		>			
ANR	1123825	PtrMemberAccess	compiler -> saveds		1123522	0					
ANR	1123826	Identifier	compiler		1123522	0					
ANR	1123827	Identifier	saveds		1123522	1					
ANR	1123828	PrimaryExpression	2		1123522	1					
ANR	1123829	RelationalExpression	compiler -> scratches > 7		1123522	1		>			
ANR	1123830	PtrMemberAccess	compiler -> scratches		1123522	0					
ANR	1123831	Identifier	compiler		1123522	0					
ANR	1123832	Identifier	scratches		1123522	1					
ANR	1123833	PrimaryExpression	7		1123522	1					
ANR	1123834	ExpressionStatement	POP_REG ( reg_map [ SLJIT_S2 ] )	255:2:8643:8669	1123522	1	True				
ANR	1123835	CallExpression	POP_REG ( reg_map [ SLJIT_S2 ] )		1123522	0					
ANR	1123836	Callee	POP_REG		1123522	0					
ANR	1123837	Identifier	POP_REG		1123522	0					
ANR	1123838	ArgumentList	reg_map [ SLJIT_S2 ]		1123522	1					
ANR	1123839	Argument	reg_map [ SLJIT_S2 ]		1123522	0					
ANR	1123840	ArrayIndexing	reg_map [ SLJIT_S2 ]		1123522	0					
ANR	1123841	Identifier	reg_map		1123522	0					
ANR	1123842	Identifier	SLJIT_S2		1123522	1					
ANR	1123843	ExpressionStatement	POP_REG ( reg_map [ TMP_REG1 ] )	256:1:8672:8698	1123522	18	True				
ANR	1123844	CallExpression	POP_REG ( reg_map [ TMP_REG1 ] )		1123522	0					
ANR	1123845	Callee	POP_REG		1123522	0					
ANR	1123846	Identifier	POP_REG		1123522	0					
ANR	1123847	ArgumentList	reg_map [ TMP_REG1 ]		1123522	1					
ANR	1123848	Argument	reg_map [ TMP_REG1 ]		1123522	0					
ANR	1123849	ArrayIndexing	reg_map [ TMP_REG1 ]		1123522	0					
ANR	1123850	Identifier	reg_map		1123522	0					
ANR	1123851	Identifier	TMP_REG1		1123522	1					
ANR	1123852	IfStatement	if ( compiler -> args > 2 )		1123522	19					
ANR	1123853	Condition	compiler -> args > 2	258:5:8766:8783	1123522	0	True				
ANR	1123854	RelationalExpression	compiler -> args > 2		1123522	0		>			
ANR	1123855	PtrMemberAccess	compiler -> args		1123522	0					
ANR	1123856	Identifier	compiler		1123522	0					
ANR	1123857	Identifier	args		1123522	1					
ANR	1123858	PrimaryExpression	2		1123522	1					
ANR	1123859	ExpressionStatement	RET_I16 ( sizeof ( sljit_sw ) )	259:2:8788:8813	1123522	1	True				
ANR	1123860	CallExpression	RET_I16 ( sizeof ( sljit_sw ) )		1123522	0					
ANR	1123861	Callee	RET_I16		1123522	0					
ANR	1123862	Identifier	RET_I16		1123522	0					
ANR	1123863	ArgumentList	sizeof ( sljit_sw )		1123522	1					
ANR	1123864	Argument	sizeof ( sljit_sw )		1123522	0					
ANR	1123865	SizeofExpression	sizeof ( sljit_sw )		1123522	0					
ANR	1123866	Sizeof	sizeof		1123522	0					
ANR	1123867	SizeofOperand	sljit_sw		1123522	1					
ANR	1123868	ElseStatement	else		1123522	0					
ANR	1123869	ExpressionStatement	RET ( )	261:2:8823:8828	1123522	0	True				
ANR	1123870	CallExpression	RET ( )		1123522	0					
ANR	1123871	Callee	RET		1123522	0					
ANR	1123872	Identifier	RET		1123522	0					
ANR	1123873	ArgumentList			1123522	1					
ANR	1123874	ReturnStatement	return SLJIT_SUCCESS ;	266:1:8853:8873	1123522	20	True				
ANR	1123875	Identifier	SLJIT_SUCCESS		1123522	0					
ANR	1123876	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1123522	1					
ANR	1123877	Identifier	sljit_emit_return		1123522	2					
ANR	1123878	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw"		1123522	3					
ANR	1123879	Parameter	struct sljit_compiler * compiler	208:52:7285:7315	1123522	0	True				
ANR	1123880	ParameterType	struct sljit_compiler *		1123522	0					
ANR	1123881	Identifier	compiler		1123522	1					
ANR	1123882	Parameter	sljit_si op	208:85:7318:7328	1123522	1	True				
ANR	1123883	ParameterType	sljit_si		1123522	0					
ANR	1123884	Identifier	op		1123522	1					
ANR	1123885	Parameter	sljit_si src	208:98:7331:7342	1123522	2	True				
ANR	1123886	ParameterType	sljit_si		1123522	0					
ANR	1123887	Identifier	src		1123522	1					
ANR	1123888	Parameter	sljit_sw srcw	208:112:7345:7357	1123522	3	True				
ANR	1123889	ParameterType	sljit_sw		1123522	0					
ANR	1123890	Identifier	srcw		1123522	1					
ANR	1123891	CFGEntryNode	ENTRY		1123522		True				
ANR	1123892	CFGExitNode	EXIT		1123522		True				
ANR	1123893	Symbol	ADD		1123522						
ANR	1123894	Symbol	compiler -> scratches		1123522						
ANR	1123895	Symbol	TMP_REG1		1123522						
ANR	1123896	Symbol	compiler -> flags_saved		1123522						
ANR	1123897	Symbol	ADD_EAX_i32		1123522						
ANR	1123898	Symbol	reg_map		1123522						
ANR	1123899	Symbol	* compiler		1123522						
ANR	1123900	Symbol	SLJIT_SP		1123522						
ANR	1123901	Symbol	SLJIT_IMM		1123522						
ANR	1123902	Symbol	check_sljit_emit_return		1123522						
ANR	1123903	Symbol	* TMP_REG1		1123522						
ANR	1123904	Symbol	compiler		1123522						
ANR	1123905	Symbol	* SLJIT_SP		1123522						
ANR	1123906	Symbol	compiler -> args		1123522						
ANR	1123907	Symbol	op		1123522						
ANR	1123908	Symbol	ADD_rm_r		1123522						
ANR	1123909	Symbol	* inst		1123522						
ANR	1123910	Symbol	MOV_r_rm		1123522						
ANR	1123911	Symbol	src		1123522						
ANR	1123912	Symbol	srcw		1123522						
ANR	1123913	Symbol	SLJIT_SUCCESS		1123522						
ANR	1123914	Symbol	ADD_r_rm		1123522						
ANR	1123915	Symbol	* reg_map		1123522						
ANR	1123916	Symbol	SLJIT_S2		1123522						
ANR	1123917	Symbol	SLJIT_S0		1123522						
ANR	1123918	Symbol	SLJIT_S1		1123522						
ANR	1123919	Symbol	* SLJIT_S2		1123522						
ANR	1123920	Symbol	compiler -> local_size		1123522						
ANR	1123921	Symbol	compiler -> saveds		1123522						
ANR	1123922	Symbol	size		1123522						
ANR	1123923	Symbol	compiler -> options		1123522						
ANR	1123924	Symbol	inst		1123522						
ANR	1123925	Symbol	ensure_buf		1123522						
ANR	1123926	Symbol	emit_mov_before_return		1123522						
ANR	1123927	Symbol	SLJIT_DOUBLE_ALIGNMENT		1123522						
ANR	1123928	Symbol	* SLJIT_S0		1123522						
ANR	1123929	Symbol	emit_cum_binary		1123522						
ANR	1123930	Symbol	* SLJIT_S1		1123522						
ANR	1123931	Function	emit_x86_instruction	274:0:9146:13536							
ANR	1123932	FunctionDef	"emit_x86_instruction (struct sljit_compiler * compiler , sljit_si size , sljit_si a , sljit_sw imma , sljit_si b , sljit_sw immb)"		1123931	0					
ANR	1123933	CompoundStatement		279:0:9374:13536	1123931	0					
ANR	1123934	IdentifierDeclStatement	sljit_ub * inst ;	280:1:9377:9391	1123931	0	True				
ANR	1123935	IdentifierDecl	* inst		1123931	0					
ANR	1123936	IdentifierDeclType	sljit_ub *		1123931	0					
ANR	1123937	Identifier	inst		1123931	1					
ANR	1123938	IdentifierDeclStatement	sljit_ub * buf_ptr ;	281:1:9394:9411	1123931	1	True				
ANR	1123939	IdentifierDecl	* buf_ptr		1123931	0					
ANR	1123940	IdentifierDeclType	sljit_ub *		1123931	0					
ANR	1123941	Identifier	buf_ptr		1123931	1					
ANR	1123942	IdentifierDeclStatement	sljit_si flags = size & ~0xf ;	282:1:9414:9442	1123931	2	True				
ANR	1123943	IdentifierDecl	flags = size & ~0xf		1123931	0					
ANR	1123944	IdentifierDeclType	sljit_si		1123931	0					
ANR	1123945	Identifier	flags		1123931	1					
ANR	1123946	AssignmentExpression	flags = size & ~0xf		1123931	2		=			
ANR	1123947	Identifier	flags		1123931	0					
ANR	1123948	BitAndExpression	size & ~0xf		1123931	1		&			
ANR	1123949	Identifier	size		1123931	0					
ANR	1123950	Identifier	~0xf		1123931	1					
ANR	1123951	IdentifierDeclStatement	sljit_si inst_size ;	283:1:9445:9463	1123931	3	True				
ANR	1123952	IdentifierDecl	inst_size		1123931	0					
ANR	1123953	IdentifierDeclType	sljit_si		1123931	0					
ANR	1123954	Identifier	inst_size		1123931	1					
ANR	1123955	ExpressionStatement	SLJIT_ASSERT ( ( flags & ( EX86_BIN_INS | EX86_SHIFT_INS ) ) != ( EX86_BIN_INS | EX86_SHIFT_INS ) )	286:1:9502:9592	1123931	4	True				
ANR	1123956	CallExpression	SLJIT_ASSERT ( ( flags & ( EX86_BIN_INS | EX86_SHIFT_INS ) ) != ( EX86_BIN_INS | EX86_SHIFT_INS ) )		1123931	0					
ANR	1123957	Callee	SLJIT_ASSERT		1123931	0					
ANR	1123958	Identifier	SLJIT_ASSERT		1123931	0					
ANR	1123959	ArgumentList	( flags & ( EX86_BIN_INS | EX86_SHIFT_INS ) ) != ( EX86_BIN_INS | EX86_SHIFT_INS )		1123931	1					
ANR	1123960	Argument	( flags & ( EX86_BIN_INS | EX86_SHIFT_INS ) ) != ( EX86_BIN_INS | EX86_SHIFT_INS )		1123931	0					
ANR	1123961	EqualityExpression	( flags & ( EX86_BIN_INS | EX86_SHIFT_INS ) ) != ( EX86_BIN_INS | EX86_SHIFT_INS )		1123931	0		!=			
ANR	1123962	BitAndExpression	flags & ( EX86_BIN_INS | EX86_SHIFT_INS )		1123931	0		&			
ANR	1123963	Identifier	flags		1123931	0					
ANR	1123964	InclusiveOrExpression	EX86_BIN_INS | EX86_SHIFT_INS		1123931	1		|			
ANR	1123965	Identifier	EX86_BIN_INS		1123931	0					
ANR	1123966	Identifier	EX86_SHIFT_INS		1123931	1					
ANR	1123967	InclusiveOrExpression	EX86_BIN_INS | EX86_SHIFT_INS		1123931	1		|			
ANR	1123968	Identifier	EX86_BIN_INS		1123931	0					
ANR	1123969	Identifier	EX86_SHIFT_INS		1123931	1					
ANR	1123970	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & ( EX86_BIN_INS | EX86_SHIFT_INS ) ) || ( flags & ( EX86_BYTE_ARG | EX86_HALF_ARG ) ) == 0 )	288:1:9649:9755	1123931	5	True				
ANR	1123971	CallExpression	SLJIT_ASSERT ( ! ( flags & ( EX86_BIN_INS | EX86_SHIFT_INS ) ) || ( flags & ( EX86_BYTE_ARG | EX86_HALF_ARG ) ) == 0 )		1123931	0					
ANR	1123972	Callee	SLJIT_ASSERT		1123931	0					
ANR	1123973	Identifier	SLJIT_ASSERT		1123931	0					
ANR	1123974	ArgumentList	! ( flags & ( EX86_BIN_INS | EX86_SHIFT_INS ) ) || ( flags & ( EX86_BYTE_ARG | EX86_HALF_ARG ) ) == 0		1123931	1					
ANR	1123975	Argument	! ( flags & ( EX86_BIN_INS | EX86_SHIFT_INS ) ) || ( flags & ( EX86_BYTE_ARG | EX86_HALF_ARG ) ) == 0		1123931	0					
ANR	1123976	OrExpression	! ( flags & ( EX86_BIN_INS | EX86_SHIFT_INS ) ) || ( flags & ( EX86_BYTE_ARG | EX86_HALF_ARG ) ) == 0		1123931	0		||			
ANR	1123977	UnaryOperationExpression	! ( flags & ( EX86_BIN_INS | EX86_SHIFT_INS ) )		1123931	0					
ANR	1123978	UnaryOperator	!		1123931	0					
ANR	1123979	BitAndExpression	flags & ( EX86_BIN_INS | EX86_SHIFT_INS )		1123931	1		&			
ANR	1123980	Identifier	flags		1123931	0					
ANR	1123981	InclusiveOrExpression	EX86_BIN_INS | EX86_SHIFT_INS		1123931	1		|			
ANR	1123982	Identifier	EX86_BIN_INS		1123931	0					
ANR	1123983	Identifier	EX86_SHIFT_INS		1123931	1					
ANR	1123984	EqualityExpression	( flags & ( EX86_BYTE_ARG | EX86_HALF_ARG ) ) == 0		1123931	1		==			
ANR	1123985	BitAndExpression	flags & ( EX86_BYTE_ARG | EX86_HALF_ARG )		1123931	0		&			
ANR	1123986	Identifier	flags		1123931	0					
ANR	1123987	InclusiveOrExpression	EX86_BYTE_ARG | EX86_HALF_ARG		1123931	1		|			
ANR	1123988	Identifier	EX86_BYTE_ARG		1123931	0					
ANR	1123989	Identifier	EX86_HALF_ARG		1123931	1					
ANR	1123990	PrimaryExpression	0		1123931	1					
ANR	1123991	ExpressionStatement	SLJIT_ASSERT ( ( flags & ( EX86_BYTE_ARG | EX86_HALF_ARG ) ) != ( EX86_BYTE_ARG | EX86_HALF_ARG ) )	290:1:9804:9894	1123931	6	True				
ANR	1123992	CallExpression	SLJIT_ASSERT ( ( flags & ( EX86_BYTE_ARG | EX86_HALF_ARG ) ) != ( EX86_BYTE_ARG | EX86_HALF_ARG ) )		1123931	0					
ANR	1123993	Callee	SLJIT_ASSERT		1123931	0					
ANR	1123994	Identifier	SLJIT_ASSERT		1123931	0					
ANR	1123995	ArgumentList	( flags & ( EX86_BYTE_ARG | EX86_HALF_ARG ) ) != ( EX86_BYTE_ARG | EX86_HALF_ARG )		1123931	1					
ANR	1123996	Argument	( flags & ( EX86_BYTE_ARG | EX86_HALF_ARG ) ) != ( EX86_BYTE_ARG | EX86_HALF_ARG )		1123931	0					
ANR	1123997	EqualityExpression	( flags & ( EX86_BYTE_ARG | EX86_HALF_ARG ) ) != ( EX86_BYTE_ARG | EX86_HALF_ARG )		1123931	0		!=			
ANR	1123998	BitAndExpression	flags & ( EX86_BYTE_ARG | EX86_HALF_ARG )		1123931	0		&			
ANR	1123999	Identifier	flags		1123931	0					
ANR	1124000	InclusiveOrExpression	EX86_BYTE_ARG | EX86_HALF_ARG		1123931	1		|			
ANR	1124001	Identifier	EX86_BYTE_ARG		1123931	0					
ANR	1124002	Identifier	EX86_HALF_ARG		1123931	1					
ANR	1124003	InclusiveOrExpression	EX86_BYTE_ARG | EX86_HALF_ARG		1123931	1		|			
ANR	1124004	Identifier	EX86_BYTE_ARG		1123931	0					
ANR	1124005	Identifier	EX86_HALF_ARG		1123931	1					
ANR	1124006	ExpressionStatement	SLJIT_ASSERT ( ! ( a & SLJIT_IMM ) || ! ( flags & EX86_SSE2 ) )	292:1:9940:9994	1123931	7	True				
ANR	1124007	CallExpression	SLJIT_ASSERT ( ! ( a & SLJIT_IMM ) || ! ( flags & EX86_SSE2 ) )		1123931	0					
ANR	1124008	Callee	SLJIT_ASSERT		1123931	0					
ANR	1124009	Identifier	SLJIT_ASSERT		1123931	0					
ANR	1124010	ArgumentList	! ( a & SLJIT_IMM ) || ! ( flags & EX86_SSE2 )		1123931	1					
ANR	1124011	Argument	! ( a & SLJIT_IMM ) || ! ( flags & EX86_SSE2 )		1123931	0					
ANR	1124012	OrExpression	! ( a & SLJIT_IMM ) || ! ( flags & EX86_SSE2 )		1123931	0		||			
ANR	1124013	UnaryOperationExpression	! ( a & SLJIT_IMM )		1123931	0					
ANR	1124014	UnaryOperator	!		1123931	0					
ANR	1124015	BitAndExpression	a & SLJIT_IMM		1123931	1		&			
ANR	1124016	Identifier	a		1123931	0					
ANR	1124017	Identifier	SLJIT_IMM		1123931	1					
ANR	1124018	UnaryOperationExpression	! ( flags & EX86_SSE2 )		1123931	1					
ANR	1124019	UnaryOperator	!		1123931	0					
ANR	1124020	BitAndExpression	flags & EX86_SSE2		1123931	1		&			
ANR	1124021	Identifier	flags		1123931	0					
ANR	1124022	Identifier	EX86_SSE2		1123931	1					
ANR	1124023	ExpressionStatement	SLJIT_ASSERT ( ( flags & ( EX86_PREF_F2 | EX86_PREF_F3 ) ) != ( EX86_PREF_F2 | EX86_PREF_F3 ) && ( flags & ( EX86_PREF_F2 | EX86_PREF_66 ) ) != ( EX86_PREF_F2 | EX86_PREF_66 ) && ( flags & ( EX86_PREF_F3 | EX86_PREF_66 ) ) != ( EX86_PREF_F3 | EX86_PREF_66 ) )	293:1:9997:10239	1123931	8	True				
ANR	1124024	CallExpression	SLJIT_ASSERT ( ( flags & ( EX86_PREF_F2 | EX86_PREF_F3 ) ) != ( EX86_PREF_F2 | EX86_PREF_F3 ) && ( flags & ( EX86_PREF_F2 | EX86_PREF_66 ) ) != ( EX86_PREF_F2 | EX86_PREF_66 ) && ( flags & ( EX86_PREF_F3 | EX86_PREF_66 ) ) != ( EX86_PREF_F3 | EX86_PREF_66 ) )		1123931	0					
ANR	1124025	Callee	SLJIT_ASSERT		1123931	0					
ANR	1124026	Identifier	SLJIT_ASSERT		1123931	0					
ANR	1124027	ArgumentList	( flags & ( EX86_PREF_F2 | EX86_PREF_F3 ) ) != ( EX86_PREF_F2 | EX86_PREF_F3 ) && ( flags & ( EX86_PREF_F2 | EX86_PREF_66 ) ) != ( EX86_PREF_F2 | EX86_PREF_66 ) && ( flags & ( EX86_PREF_F3 | EX86_PREF_66 ) ) != ( EX86_PREF_F3 | EX86_PREF_66 )		1123931	1					
ANR	1124028	Argument	( flags & ( EX86_PREF_F2 | EX86_PREF_F3 ) ) != ( EX86_PREF_F2 | EX86_PREF_F3 ) && ( flags & ( EX86_PREF_F2 | EX86_PREF_66 ) ) != ( EX86_PREF_F2 | EX86_PREF_66 ) && ( flags & ( EX86_PREF_F3 | EX86_PREF_66 ) ) != ( EX86_PREF_F3 | EX86_PREF_66 )		1123931	0					
ANR	1124029	AndExpression	( flags & ( EX86_PREF_F2 | EX86_PREF_F3 ) ) != ( EX86_PREF_F2 | EX86_PREF_F3 ) && ( flags & ( EX86_PREF_F2 | EX86_PREF_66 ) ) != ( EX86_PREF_F2 | EX86_PREF_66 ) && ( flags & ( EX86_PREF_F3 | EX86_PREF_66 ) ) != ( EX86_PREF_F3 | EX86_PREF_66 )		1123931	0		&&			
ANR	1124030	EqualityExpression	( flags & ( EX86_PREF_F2 | EX86_PREF_F3 ) ) != ( EX86_PREF_F2 | EX86_PREF_F3 )		1123931	0		!=			
ANR	1124031	BitAndExpression	flags & ( EX86_PREF_F2 | EX86_PREF_F3 )		1123931	0		&			
ANR	1124032	Identifier	flags		1123931	0					
ANR	1124033	InclusiveOrExpression	EX86_PREF_F2 | EX86_PREF_F3		1123931	1		|			
ANR	1124034	Identifier	EX86_PREF_F2		1123931	0					
ANR	1124035	Identifier	EX86_PREF_F3		1123931	1					
ANR	1124036	InclusiveOrExpression	EX86_PREF_F2 | EX86_PREF_F3		1123931	1		|			
ANR	1124037	Identifier	EX86_PREF_F2		1123931	0					
ANR	1124038	Identifier	EX86_PREF_F3		1123931	1					
ANR	1124039	AndExpression	( flags & ( EX86_PREF_F2 | EX86_PREF_66 ) ) != ( EX86_PREF_F2 | EX86_PREF_66 ) && ( flags & ( EX86_PREF_F3 | EX86_PREF_66 ) ) != ( EX86_PREF_F3 | EX86_PREF_66 )		1123931	1		&&			
ANR	1124040	EqualityExpression	( flags & ( EX86_PREF_F2 | EX86_PREF_66 ) ) != ( EX86_PREF_F2 | EX86_PREF_66 )		1123931	0		!=			
ANR	1124041	BitAndExpression	flags & ( EX86_PREF_F2 | EX86_PREF_66 )		1123931	0		&			
ANR	1124042	Identifier	flags		1123931	0					
ANR	1124043	InclusiveOrExpression	EX86_PREF_F2 | EX86_PREF_66		1123931	1		|			
ANR	1124044	Identifier	EX86_PREF_F2		1123931	0					
ANR	1124045	Identifier	EX86_PREF_66		1123931	1					
ANR	1124046	InclusiveOrExpression	EX86_PREF_F2 | EX86_PREF_66		1123931	1		|			
ANR	1124047	Identifier	EX86_PREF_F2		1123931	0					
ANR	1124048	Identifier	EX86_PREF_66		1123931	1					
ANR	1124049	EqualityExpression	( flags & ( EX86_PREF_F3 | EX86_PREF_66 ) ) != ( EX86_PREF_F3 | EX86_PREF_66 )		1123931	1		!=			
ANR	1124050	BitAndExpression	flags & ( EX86_PREF_F3 | EX86_PREF_66 )		1123931	0		&			
ANR	1124051	Identifier	flags		1123931	0					
ANR	1124052	InclusiveOrExpression	EX86_PREF_F3 | EX86_PREF_66		1123931	1		|			
ANR	1124053	Identifier	EX86_PREF_F3		1123931	0					
ANR	1124054	Identifier	EX86_PREF_66		1123931	1					
ANR	1124055	InclusiveOrExpression	EX86_PREF_F3 | EX86_PREF_66		1123931	1		|			
ANR	1124056	Identifier	EX86_PREF_F3		1123931	0					
ANR	1124057	Identifier	EX86_PREF_66		1123931	1					
ANR	1124058	ExpressionStatement	size &= 0xf	297:1:10243:10254	1123931	9	True				
ANR	1124059	AssignmentExpression	size &= 0xf		1123931	0		&=			
ANR	1124060	Identifier	size		1123931	0					
ANR	1124061	PrimaryExpression	0xf		1123931	1					
ANR	1124062	ExpressionStatement	inst_size = size	298:1:10257:10273	1123931	10	True				
ANR	1124063	AssignmentExpression	inst_size = size		1123931	0		=			
ANR	1124064	Identifier	inst_size		1123931	0					
ANR	1124065	Identifier	size		1123931	1					
ANR	1124066	IfStatement	if ( flags & ( EX86_PREF_F2 | EX86_PREF_F3 ) )		1123931	11					
ANR	1124067	Condition	flags & ( EX86_PREF_F2 | EX86_PREF_F3 )	300:5:10281:10317	1123931	0	True				
ANR	1124068	BitAndExpression	flags & ( EX86_PREF_F2 | EX86_PREF_F3 )		1123931	0		&			
ANR	1124069	Identifier	flags		1123931	0					
ANR	1124070	InclusiveOrExpression	EX86_PREF_F2 | EX86_PREF_F3		1123931	1		|			
ANR	1124071	Identifier	EX86_PREF_F2		1123931	0					
ANR	1124072	Identifier	EX86_PREF_F3		1123931	1					
ANR	1124073	ExpressionStatement	inst_size ++	301:2:10322:10333	1123931	1	True				
ANR	1124074	PostIncDecOperationExpression	inst_size ++		1123931	0					
ANR	1124075	Identifier	inst_size		1123931	0					
ANR	1124076	IncDec	++		1123931	1					
ANR	1124077	IfStatement	if ( flags & EX86_PREF_66 )		1123931	12					
ANR	1124078	Condition	flags & EX86_PREF_66	302:5:10340:10359	1123931	0	True				
ANR	1124079	BitAndExpression	flags & EX86_PREF_66		1123931	0		&			
ANR	1124080	Identifier	flags		1123931	0					
ANR	1124081	Identifier	EX86_PREF_66		1123931	1					
ANR	1124082	ExpressionStatement	inst_size ++	303:2:10364:10375	1123931	1	True				
ANR	1124083	PostIncDecOperationExpression	inst_size ++		1123931	0					
ANR	1124084	Identifier	inst_size		1123931	0					
ANR	1124085	IncDec	++		1123931	1					
ANR	1124086	ExpressionStatement	inst_size += 1	306:1:10407:10421	1123931	13	True				
ANR	1124087	AssignmentExpression	inst_size += 1		1123931	0		+=			
ANR	1124088	Identifier	inst_size		1123931	0					
ANR	1124089	PrimaryExpression	1		1123931	1					
ANR	1124090	IfStatement	if ( b & SLJIT_MEM )		1123931	14					
ANR	1124091	Condition	b & SLJIT_MEM	307:5:10448:10460	1123931	0	True				
ANR	1124092	BitAndExpression	b & SLJIT_MEM		1123931	0		&			
ANR	1124093	Identifier	b		1123931	0					
ANR	1124094	Identifier	SLJIT_MEM		1123931	1					
ANR	1124095	CompoundStatement		29:20:1088:1088	1123931	1					
ANR	1124096	IfStatement	if ( ( b & REG_MASK ) == SLJIT_UNUSED )		1123931	0					
ANR	1124097	Condition	( b & REG_MASK ) == SLJIT_UNUSED	308:6:10471:10500	1123931	0	True				
ANR	1124098	EqualityExpression	( b & REG_MASK ) == SLJIT_UNUSED		1123931	0		==			
ANR	1124099	BitAndExpression	b & REG_MASK		1123931	0		&			
ANR	1124100	Identifier	b		1123931	0					
ANR	1124101	Identifier	REG_MASK		1123931	1					
ANR	1124102	Identifier	SLJIT_UNUSED		1123931	1					
ANR	1124103	ExpressionStatement	inst_size += sizeof ( sljit_sw )	309:3:10506:10535	1123931	1	True				
ANR	1124104	AssignmentExpression	inst_size += sizeof ( sljit_sw )		1123931	0		+=			
ANR	1124105	Identifier	inst_size		1123931	0					
ANR	1124106	SizeofExpression	sizeof ( sljit_sw )		1123931	1					
ANR	1124107	Sizeof	sizeof		1123931	0					
ANR	1124108	SizeofOperand	sljit_sw		1123931	1					
ANR	1124109	ElseStatement	else		1123931	0					
ANR	1124110	IfStatement	if ( immb != 0 && ! ( b & OFFS_REG_MASK ) )		1123931	0					
ANR	1124111	Condition	immb != 0 && ! ( b & OFFS_REG_MASK )	310:11:10548:10580	1123931	0	True				
ANR	1124112	AndExpression	immb != 0 && ! ( b & OFFS_REG_MASK )		1123931	0		&&			
ANR	1124113	EqualityExpression	immb != 0		1123931	0		!=			
ANR	1124114	Identifier	immb		1123931	0					
ANR	1124115	PrimaryExpression	0		1123931	1					
ANR	1124116	UnaryOperationExpression	! ( b & OFFS_REG_MASK )		1123931	1					
ANR	1124117	UnaryOperator	!		1123931	0					
ANR	1124118	BitAndExpression	b & OFFS_REG_MASK		1123931	1		&			
ANR	1124119	Identifier	b		1123931	0					
ANR	1124120	Identifier	OFFS_REG_MASK		1123931	1					
ANR	1124121	CompoundStatement		32:46:1208:1208	1123931	1					
ANR	1124122	IfStatement	if ( immb <= 127 && immb >= - 128 )		1123931	0					
ANR	1124123	Condition	immb <= 127 && immb >= - 128	312:7:10620:10646	1123931	0	True				
ANR	1124124	AndExpression	immb <= 127 && immb >= - 128		1123931	0		&&			
ANR	1124125	RelationalExpression	immb <= 127		1123931	0		<=			
ANR	1124126	Identifier	immb		1123931	0					
ANR	1124127	PrimaryExpression	127		1123931	1					
ANR	1124128	RelationalExpression	immb >= - 128		1123931	1		>=			
ANR	1124129	Identifier	immb		1123931	0					
ANR	1124130	UnaryOperationExpression	- 128		1123931	1					
ANR	1124131	UnaryOperator	-		1123931	0					
ANR	1124132	PrimaryExpression	128		1123931	1					
ANR	1124133	ExpressionStatement	inst_size += sizeof ( sljit_sb )	313:4:10653:10682	1123931	1	True				
ANR	1124134	AssignmentExpression	inst_size += sizeof ( sljit_sb )		1123931	0		+=			
ANR	1124135	Identifier	inst_size		1123931	0					
ANR	1124136	SizeofExpression	sizeof ( sljit_sb )		1123931	1					
ANR	1124137	Sizeof	sizeof		1123931	0					
ANR	1124138	SizeofOperand	sljit_sb		1123931	1					
ANR	1124139	ElseStatement	else		1123931	0					
ANR	1124140	ExpressionStatement	inst_size += sizeof ( sljit_sw )	315:4:10696:10725	1123931	0	True				
ANR	1124141	AssignmentExpression	inst_size += sizeof ( sljit_sw )		1123931	0		+=			
ANR	1124142	Identifier	inst_size		1123931	0					
ANR	1124143	SizeofExpression	sizeof ( sljit_sw )		1123931	1					
ANR	1124144	Sizeof	sizeof		1123931	0					
ANR	1124145	SizeofOperand	sljit_sw		1123931	1					
ANR	1124146	IfStatement	if ( ( b & REG_MASK ) == SLJIT_SP && ! ( b & OFFS_REG_MASK ) )		1123931	1					
ANR	1124147	Condition	( b & REG_MASK ) == SLJIT_SP && ! ( b & OFFS_REG_MASK )	318:6:10738:10787	1123931	0	True				
ANR	1124148	AndExpression	( b & REG_MASK ) == SLJIT_SP && ! ( b & OFFS_REG_MASK )		1123931	0		&&			
ANR	1124149	EqualityExpression	( b & REG_MASK ) == SLJIT_SP		1123931	0		==			
ANR	1124150	BitAndExpression	b & REG_MASK		1123931	0		&			
ANR	1124151	Identifier	b		1123931	0					
ANR	1124152	Identifier	REG_MASK		1123931	1					
ANR	1124153	Identifier	SLJIT_SP		1123931	1					
ANR	1124154	UnaryOperationExpression	! ( b & OFFS_REG_MASK )		1123931	1					
ANR	1124155	UnaryOperator	!		1123931	0					
ANR	1124156	BitAndExpression	b & OFFS_REG_MASK		1123931	1		&			
ANR	1124157	Identifier	b		1123931	0					
ANR	1124158	Identifier	OFFS_REG_MASK		1123931	1					
ANR	1124159	ExpressionStatement	b |= TO_OFFS_REG ( SLJIT_SP )	319:3:10793:10819	1123931	1	True				
ANR	1124160	AssignmentExpression	b |= TO_OFFS_REG ( SLJIT_SP )		1123931	0		|=			
ANR	1124161	Identifier	b		1123931	0					
ANR	1124162	CallExpression	TO_OFFS_REG ( SLJIT_SP )		1123931	1					
ANR	1124163	Callee	TO_OFFS_REG		1123931	0					
ANR	1124164	Identifier	TO_OFFS_REG		1123931	0					
ANR	1124165	ArgumentList	SLJIT_SP		1123931	1					
ANR	1124166	Argument	SLJIT_SP		1123931	0					
ANR	1124167	Identifier	SLJIT_SP		1123931	0					
ANR	1124168	IfStatement	if ( ( b & OFFS_REG_MASK ) != SLJIT_UNUSED )		1123931	2					
ANR	1124169	Condition	( b & OFFS_REG_MASK ) != SLJIT_UNUSED	321:6:10828:10862	1123931	0	True				
ANR	1124170	EqualityExpression	( b & OFFS_REG_MASK ) != SLJIT_UNUSED		1123931	0		!=			
ANR	1124171	BitAndExpression	b & OFFS_REG_MASK		1123931	0		&			
ANR	1124172	Identifier	b		1123931	0					
ANR	1124173	Identifier	OFFS_REG_MASK		1123931	1					
ANR	1124174	Identifier	SLJIT_UNUSED		1123931	1					
ANR	1124175	ExpressionStatement	inst_size += 1	322:3:10868:10882	1123931	1	True				
ANR	1124176	AssignmentExpression	inst_size += 1		1123931	0		+=			
ANR	1124177	Identifier	inst_size		1123931	0					
ANR	1124178	PrimaryExpression	1		1123931	1					
ANR	1124179	IfStatement	if ( a & SLJIT_IMM )		1123931	15					
ANR	1124180	Condition	a & SLJIT_IMM	326:5:10937:10949	1123931	0	True				
ANR	1124181	BitAndExpression	a & SLJIT_IMM		1123931	0		&			
ANR	1124182	Identifier	a		1123931	0					
ANR	1124183	Identifier	SLJIT_IMM		1123931	1					
ANR	1124184	CompoundStatement		48:20:1577:1577	1123931	1					
ANR	1124185	IfStatement	if ( flags & EX86_BIN_INS )		1123931	0					
ANR	1124186	Condition	flags & EX86_BIN_INS	327:6:10960:10979	1123931	0	True				
ANR	1124187	BitAndExpression	flags & EX86_BIN_INS		1123931	0		&			
ANR	1124188	Identifier	flags		1123931	0					
ANR	1124189	Identifier	EX86_BIN_INS		1123931	1					
ANR	1124190	CompoundStatement		49:28:1607:1607	1123931	1					
ANR	1124191	IfStatement	if ( imma <= 127 && imma >= - 128 )		1123931	0					
ANR	1124192	Condition	imma <= 127 && imma >= - 128	328:7:10991:11017	1123931	0	True				
ANR	1124193	AndExpression	imma <= 127 && imma >= - 128		1123931	0		&&			
ANR	1124194	RelationalExpression	imma <= 127		1123931	0		<=			
ANR	1124195	Identifier	imma		1123931	0					
ANR	1124196	PrimaryExpression	127		1123931	1					
ANR	1124197	RelationalExpression	imma >= - 128		1123931	1		>=			
ANR	1124198	Identifier	imma		1123931	0					
ANR	1124199	UnaryOperationExpression	- 128		1123931	1					
ANR	1124200	UnaryOperator	-		1123931	0					
ANR	1124201	PrimaryExpression	128		1123931	1					
ANR	1124202	CompoundStatement		50:36:1645:1645	1123931	1					
ANR	1124203	ExpressionStatement	inst_size += 1	329:4:11026:11040	1123931	0	True				
ANR	1124204	AssignmentExpression	inst_size += 1		1123931	0		+=			
ANR	1124205	Identifier	inst_size		1123931	0					
ANR	1124206	PrimaryExpression	1		1123931	1					
ANR	1124207	ExpressionStatement	flags |= EX86_BYTE_ARG	330:4:11046:11068	1123931	1	True				
ANR	1124208	AssignmentExpression	flags |= EX86_BYTE_ARG		1123931	0		|=			
ANR	1124209	Identifier	flags		1123931	0					
ANR	1124210	Identifier	EX86_BYTE_ARG		1123931	1					
ANR	1124211	ElseStatement	else		1123931	0					
ANR	1124212	ExpressionStatement	inst_size += 4	332:4:11084:11098	1123931	0	True				
ANR	1124213	AssignmentExpression	inst_size += 4		1123931	0		+=			
ANR	1124214	Identifier	inst_size		1123931	0					
ANR	1124215	PrimaryExpression	4		1123931	1					
ANR	1124216	ElseStatement	else		1123931	0					
ANR	1124217	IfStatement	if ( flags & EX86_SHIFT_INS )		1123931	0					
ANR	1124218	Condition	flags & EX86_SHIFT_INS	334:11:11115:11136	1123931	0	True				
ANR	1124219	BitAndExpression	flags & EX86_SHIFT_INS		1123931	0		&			
ANR	1124220	Identifier	flags		1123931	0					
ANR	1124221	Identifier	EX86_SHIFT_INS		1123931	1					
ANR	1124222	CompoundStatement		56:35:1764:1764	1123931	1					
ANR	1124223	ExpressionStatement	imma &= 0x1f	335:3:11144:11156	1123931	0	True				
ANR	1124224	AssignmentExpression	imma &= 0x1f		1123931	0		&=			
ANR	1124225	Identifier	imma		1123931	0					
ANR	1124226	PrimaryExpression	0x1f		1123931	1					
ANR	1124227	IfStatement	if ( imma != 1 )		1123931	1					
ANR	1124228	Condition	imma != 1	336:7:11165:11173	1123931	0	True				
ANR	1124229	EqualityExpression	imma != 1		1123931	0		!=			
ANR	1124230	Identifier	imma		1123931	0					
ANR	1124231	PrimaryExpression	1		1123931	1					
ANR	1124232	CompoundStatement		58:18:1801:1801	1123931	1					
ANR	1124233	ExpressionStatement	inst_size ++	337:4:11182:11194	1123931	0	True				
ANR	1124234	PostIncDecOperationExpression	inst_size ++		1123931	0					
ANR	1124235	Identifier	inst_size		1123931	0					
ANR	1124236	IncDec	++		1123931	1					
ANR	1124237	ExpressionStatement	flags |= EX86_BYTE_ARG	338:4:11200:11222	1123931	1	True				
ANR	1124238	AssignmentExpression	flags |= EX86_BYTE_ARG		1123931	0		|=			
ANR	1124239	Identifier	flags		1123931	0					
ANR	1124240	Identifier	EX86_BYTE_ARG		1123931	1					
ANR	1124241	ElseStatement	else		1123931	0					
ANR	1124242	IfStatement	if ( flags & EX86_BYTE_ARG )		1123931	0					
ANR	1124243	Condition	flags & EX86_BYTE_ARG	340:13:11242:11262	1123931	0	True				
ANR	1124244	BitAndExpression	flags & EX86_BYTE_ARG		1123931	0		&			
ANR	1124245	Identifier	flags		1123931	0					
ANR	1124246	Identifier	EX86_BYTE_ARG		1123931	1					
ANR	1124247	ExpressionStatement	inst_size ++	341:3:11268:11279	1123931	1	True				
ANR	1124248	PostIncDecOperationExpression	inst_size ++		1123931	0					
ANR	1124249	Identifier	inst_size		1123931	0					
ANR	1124250	IncDec	++		1123931	1					
ANR	1124251	ElseStatement	else		1123931	0					
ANR	1124252	IfStatement	if ( flags & EX86_HALF_ARG )		1123931	0					
ANR	1124253	Condition	flags & EX86_HALF_ARG	342:11:11292:11312	1123931	0	True				
ANR	1124254	BitAndExpression	flags & EX86_HALF_ARG		1123931	0		&			
ANR	1124255	Identifier	flags		1123931	0					
ANR	1124256	Identifier	EX86_HALF_ARG		1123931	1					
ANR	1124257	ExpressionStatement	inst_size += sizeof ( short )	343:3:11318:11344	1123931	1	True				
ANR	1124258	AssignmentExpression	inst_size += sizeof ( short )		1123931	0		+=			
ANR	1124259	Identifier	inst_size		1123931	0					
ANR	1124260	SizeofExpression	sizeof ( short )		1123931	1					
ANR	1124261	Sizeof	sizeof		1123931	0					
ANR	1124262	SizeofOperand	short		1123931	1					
ANR	1124263	ElseStatement	else		1123931	0					
ANR	1124264	ExpressionStatement	inst_size += sizeof ( sljit_sw )	345:3:11356:11385	1123931	0	True				
ANR	1124265	AssignmentExpression	inst_size += sizeof ( sljit_sw )		1123931	0		+=			
ANR	1124266	Identifier	inst_size		1123931	0					
ANR	1124267	SizeofExpression	sizeof ( sljit_sw )		1123931	1					
ANR	1124268	Sizeof	sizeof		1123931	0					
ANR	1124269	SizeofOperand	sljit_sw		1123931	1					
ANR	1124270	ElseStatement	else		1123931	0					
ANR	1124271	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & EX86_SHIFT_INS ) || a == SLJIT_PREF_SHIFT_REG )	348:2:11398:11466	1123931	0	True				
ANR	1124272	CallExpression	SLJIT_ASSERT ( ! ( flags & EX86_SHIFT_INS ) || a == SLJIT_PREF_SHIFT_REG )		1123931	0					
ANR	1124273	Callee	SLJIT_ASSERT		1123931	0					
ANR	1124274	Identifier	SLJIT_ASSERT		1123931	0					
ANR	1124275	ArgumentList	! ( flags & EX86_SHIFT_INS ) || a == SLJIT_PREF_SHIFT_REG		1123931	1					
ANR	1124276	Argument	! ( flags & EX86_SHIFT_INS ) || a == SLJIT_PREF_SHIFT_REG		1123931	0					
ANR	1124277	OrExpression	! ( flags & EX86_SHIFT_INS ) || a == SLJIT_PREF_SHIFT_REG		1123931	0		||			
ANR	1124278	UnaryOperationExpression	! ( flags & EX86_SHIFT_INS )		1123931	0					
ANR	1124279	UnaryOperator	!		1123931	0					
ANR	1124280	BitAndExpression	flags & EX86_SHIFT_INS		1123931	1		&			
ANR	1124281	Identifier	flags		1123931	0					
ANR	1124282	Identifier	EX86_SHIFT_INS		1123931	1					
ANR	1124283	EqualityExpression	a == SLJIT_PREF_SHIFT_REG		1123931	1		==			
ANR	1124284	Identifier	a		1123931	0					
ANR	1124285	Identifier	SLJIT_PREF_SHIFT_REG		1123931	1					
ANR	1124286	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + inst_size )"	350:1:11470:11523	1123931	16	True				
ANR	1124287	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + inst_size )"		1123931	0		=			
ANR	1124288	Identifier	inst		1123931	0					
ANR	1124289	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + inst_size )"		1123931	1					
ANR	1124290	CastTarget	sljit_ub *		1123931	0					
ANR	1124291	CallExpression	"ensure_buf ( compiler , 1 + inst_size )"		1123931	1					
ANR	1124292	Callee	ensure_buf		1123931	0					
ANR	1124293	Identifier	ensure_buf		1123931	0					
ANR	1124294	ArgumentList	compiler		1123931	1					
ANR	1124295	Argument	compiler		1123931	0					
ANR	1124296	Identifier	compiler		1123931	0					
ANR	1124297	Argument	1 + inst_size		1123931	1					
ANR	1124298	AdditiveExpression	1 + inst_size		1123931	0		+			
ANR	1124299	PrimaryExpression	1		1123931	0					
ANR	1124300	Identifier	inst_size		1123931	1					
ANR	1124301	ExpressionStatement	PTR_FAIL_IF ( ! inst )	351:1:11526:11544	1123931	17	True				
ANR	1124302	CallExpression	PTR_FAIL_IF ( ! inst )		1123931	0					
ANR	1124303	Callee	PTR_FAIL_IF		1123931	0					
ANR	1124304	Identifier	PTR_FAIL_IF		1123931	0					
ANR	1124305	ArgumentList	! inst		1123931	1					
ANR	1124306	Argument	! inst		1123931	0					
ANR	1124307	UnaryOperationExpression	! inst		1123931	0					
ANR	1124308	UnaryOperator	!		1123931	0					
ANR	1124309	Identifier	inst		1123931	1					
ANR	1124310	ExpressionStatement	INC_SIZE ( inst_size )	354:1:11574:11593	1123931	18	True				
ANR	1124311	CallExpression	INC_SIZE ( inst_size )		1123931	0					
ANR	1124312	Callee	INC_SIZE		1123931	0					
ANR	1124313	Identifier	INC_SIZE		1123931	0					
ANR	1124314	ArgumentList	inst_size		1123931	1					
ANR	1124315	Argument	inst_size		1123931	0					
ANR	1124316	Identifier	inst_size		1123931	0					
ANR	1124317	IfStatement	if ( flags & EX86_PREF_F2 )		1123931	19					
ANR	1124318	Condition	flags & EX86_PREF_F2	355:5:11600:11619	1123931	0	True				
ANR	1124319	BitAndExpression	flags & EX86_PREF_F2		1123931	0		&			
ANR	1124320	Identifier	flags		1123931	0					
ANR	1124321	Identifier	EX86_PREF_F2		1123931	1					
ANR	1124322	ExpressionStatement	* inst ++ = 0xf2	356:2:11624:11638	1123931	1	True				
ANR	1124323	AssignmentExpression	* inst ++ = 0xf2		1123931	0		=			
ANR	1124324	UnaryOperationExpression	* inst ++		1123931	0					
ANR	1124325	UnaryOperator	*		1123931	0					
ANR	1124326	PostIncDecOperationExpression	inst ++		1123931	1					
ANR	1124327	Identifier	inst		1123931	0					
ANR	1124328	IncDec	++		1123931	1					
ANR	1124329	PrimaryExpression	0xf2		1123931	1					
ANR	1124330	IfStatement	if ( flags & EX86_PREF_F3 )		1123931	20					
ANR	1124331	Condition	flags & EX86_PREF_F3	357:5:11645:11664	1123931	0	True				
ANR	1124332	BitAndExpression	flags & EX86_PREF_F3		1123931	0		&			
ANR	1124333	Identifier	flags		1123931	0					
ANR	1124334	Identifier	EX86_PREF_F3		1123931	1					
ANR	1124335	ExpressionStatement	* inst ++ = 0xf3	358:2:11669:11683	1123931	1	True				
ANR	1124336	AssignmentExpression	* inst ++ = 0xf3		1123931	0		=			
ANR	1124337	UnaryOperationExpression	* inst ++		1123931	0					
ANR	1124338	UnaryOperator	*		1123931	0					
ANR	1124339	PostIncDecOperationExpression	inst ++		1123931	1					
ANR	1124340	Identifier	inst		1123931	0					
ANR	1124341	IncDec	++		1123931	1					
ANR	1124342	PrimaryExpression	0xf3		1123931	1					
ANR	1124343	IfStatement	if ( flags & EX86_PREF_66 )		1123931	21					
ANR	1124344	Condition	flags & EX86_PREF_66	359:5:11690:11709	1123931	0	True				
ANR	1124345	BitAndExpression	flags & EX86_PREF_66		1123931	0		&			
ANR	1124346	Identifier	flags		1123931	0					
ANR	1124347	Identifier	EX86_PREF_66		1123931	1					
ANR	1124348	ExpressionStatement	* inst ++ = 0x66	360:2:11714:11728	1123931	1	True				
ANR	1124349	AssignmentExpression	* inst ++ = 0x66		1123931	0		=			
ANR	1124350	UnaryOperationExpression	* inst ++		1123931	0					
ANR	1124351	UnaryOperator	*		1123931	0					
ANR	1124352	PostIncDecOperationExpression	inst ++		1123931	1					
ANR	1124353	Identifier	inst		1123931	0					
ANR	1124354	IncDec	++		1123931	1					
ANR	1124355	PrimaryExpression	0x66		1123931	1					
ANR	1124356	ExpressionStatement	buf_ptr = inst + size	362:1:11732:11753	1123931	22	True				
ANR	1124357	AssignmentExpression	buf_ptr = inst + size		1123931	0		=			
ANR	1124358	Identifier	buf_ptr		1123931	0					
ANR	1124359	AdditiveExpression	inst + size		1123931	1		+			
ANR	1124360	Identifier	inst		1123931	0					
ANR	1124361	Identifier	size		1123931	1					
ANR	1124362	IfStatement	if ( ! ( flags & EX86_SHIFT_INS ) )		1123931	23					
ANR	1124363	Condition	! ( flags & EX86_SHIFT_INS )	365:5:11788:11812	1123931	0	True				
ANR	1124364	UnaryOperationExpression	! ( flags & EX86_SHIFT_INS )		1123931	0					
ANR	1124365	UnaryOperator	!		1123931	0					
ANR	1124366	BitAndExpression	flags & EX86_SHIFT_INS		1123931	1		&			
ANR	1124367	Identifier	flags		1123931	0					
ANR	1124368	Identifier	EX86_SHIFT_INS		1123931	1					
ANR	1124369	CompoundStatement		87:32:2440:2440	1123931	1					
ANR	1124370	IfStatement	if ( ( flags & EX86_BIN_INS ) && ( a & SLJIT_IMM ) )		1123931	0					
ANR	1124371	Condition	( flags & EX86_BIN_INS ) && ( a & SLJIT_IMM )	366:6:11823:11863	1123931	0	True				
ANR	1124372	AndExpression	( flags & EX86_BIN_INS ) && ( a & SLJIT_IMM )		1123931	0		&&			
ANR	1124373	BitAndExpression	flags & EX86_BIN_INS		1123931	0		&			
ANR	1124374	Identifier	flags		1123931	0					
ANR	1124375	Identifier	EX86_BIN_INS		1123931	1					
ANR	1124376	BitAndExpression	a & SLJIT_IMM		1123931	1		&			
ANR	1124377	Identifier	a		1123931	0					
ANR	1124378	Identifier	SLJIT_IMM		1123931	1					
ANR	1124379	ExpressionStatement	* inst = ( flags & EX86_BYTE_ARG ) ? GROUP_BINARY_83 : GROUP_BINARY_81	367:3:11869:11936	1123931	1	True				
ANR	1124380	AssignmentExpression	* inst = ( flags & EX86_BYTE_ARG ) ? GROUP_BINARY_83 : GROUP_BINARY_81		1123931	0		=			
ANR	1124381	UnaryOperationExpression	* inst		1123931	0					
ANR	1124382	UnaryOperator	*		1123931	0					
ANR	1124383	Identifier	inst		1123931	1					
ANR	1124384	ConditionalExpression	( flags & EX86_BYTE_ARG ) ? GROUP_BINARY_83 : GROUP_BINARY_81		1123931	1					
ANR	1124385	Condition	flags & EX86_BYTE_ARG		1123931	0					
ANR	1124386	BitAndExpression	flags & EX86_BYTE_ARG		1123931	0		&			
ANR	1124387	Identifier	flags		1123931	0					
ANR	1124388	Identifier	EX86_BYTE_ARG		1123931	1					
ANR	1124389	Identifier	GROUP_BINARY_83		1123931	1					
ANR	1124390	Identifier	GROUP_BINARY_81		1123931	2					
ANR	1124391	IfStatement	if ( ( a & SLJIT_IMM ) || ( a == 0 ) )		1123931	1					
ANR	1124392	Condition	( a & SLJIT_IMM ) || ( a == 0 )	369:6:11945:11971	1123931	0	True				
ANR	1124393	OrExpression	( a & SLJIT_IMM ) || ( a == 0 )		1123931	0		||			
ANR	1124394	BitAndExpression	a & SLJIT_IMM		1123931	0		&			
ANR	1124395	Identifier	a		1123931	0					
ANR	1124396	Identifier	SLJIT_IMM		1123931	1					
ANR	1124397	EqualityExpression	a == 0		1123931	1		==			
ANR	1124398	Identifier	a		1123931	0					
ANR	1124399	PrimaryExpression	0		1123931	1					
ANR	1124400	ExpressionStatement	* buf_ptr = 0	370:3:11977:11989	1123931	1	True				
ANR	1124401	AssignmentExpression	* buf_ptr = 0		1123931	0		=			
ANR	1124402	UnaryOperationExpression	* buf_ptr		1123931	0					
ANR	1124403	UnaryOperator	*		1123931	0					
ANR	1124404	Identifier	buf_ptr		1123931	1					
ANR	1124405	PrimaryExpression	0		1123931	1					
ANR	1124406	ElseStatement	else		1123931	0					
ANR	1124407	IfStatement	if ( ! ( flags & EX86_SSE2_OP1 ) )		1123931	0					
ANR	1124408	Condition	! ( flags & EX86_SSE2_OP1 )	371:11:12002:12025	1123931	0	True				
ANR	1124409	UnaryOperationExpression	! ( flags & EX86_SSE2_OP1 )		1123931	0					
ANR	1124410	UnaryOperator	!		1123931	0					
ANR	1124411	BitAndExpression	flags & EX86_SSE2_OP1		1123931	1		&			
ANR	1124412	Identifier	flags		1123931	0					
ANR	1124413	Identifier	EX86_SSE2_OP1		1123931	1					
ANR	1124414	ExpressionStatement	* buf_ptr = reg_map [ a ] << 3	372:3:12031:12057	1123931	1	True				
ANR	1124415	AssignmentExpression	* buf_ptr = reg_map [ a ] << 3		1123931	0		=			
ANR	1124416	UnaryOperationExpression	* buf_ptr		1123931	0					
ANR	1124417	UnaryOperator	*		1123931	0					
ANR	1124418	Identifier	buf_ptr		1123931	1					
ANR	1124419	ShiftExpression	reg_map [ a ] << 3		1123931	1		<<			
ANR	1124420	ArrayIndexing	reg_map [ a ]		1123931	0					
ANR	1124421	Identifier	reg_map		1123931	0					
ANR	1124422	Identifier	a		1123931	1					
ANR	1124423	PrimaryExpression	3		1123931	1					
ANR	1124424	ElseStatement	else		1123931	0					
ANR	1124425	ExpressionStatement	* buf_ptr = a << 3	374:3:12069:12086	1123931	0	True				
ANR	1124426	AssignmentExpression	* buf_ptr = a << 3		1123931	0		=			
ANR	1124427	UnaryOperationExpression	* buf_ptr		1123931	0					
ANR	1124428	UnaryOperator	*		1123931	0					
ANR	1124429	Identifier	buf_ptr		1123931	1					
ANR	1124430	ShiftExpression	a << 3		1123931	1		<<			
ANR	1124431	Identifier	a		1123931	0					
ANR	1124432	PrimaryExpression	3		1123931	1					
ANR	1124433	ElseStatement	else		1123931	0					
ANR	1124434	CompoundStatement		98:6:2722:2722	1123931	0					
ANR	1124435	IfStatement	if ( a & SLJIT_IMM )		1123931	0					
ANR	1124436	Condition	a & SLJIT_IMM	377:6:12105:12117	1123931	0	True				
ANR	1124437	BitAndExpression	a & SLJIT_IMM		1123931	0		&			
ANR	1124438	Identifier	a		1123931	0					
ANR	1124439	Identifier	SLJIT_IMM		1123931	1					
ANR	1124440	CompoundStatement		99:21:2745:2745	1123931	1					
ANR	1124441	IfStatement	if ( imma == 1 )		1123931	0					
ANR	1124442	Condition	imma == 1	378:7:12129:12137	1123931	0	True				
ANR	1124443	EqualityExpression	imma == 1		1123931	0		==			
ANR	1124444	Identifier	imma		1123931	0					
ANR	1124445	PrimaryExpression	1		1123931	1					
ANR	1124446	ExpressionStatement	* inst = GROUP_SHIFT_1	379:4:12144:12165	1123931	1	True				
ANR	1124447	AssignmentExpression	* inst = GROUP_SHIFT_1		1123931	0		=			
ANR	1124448	UnaryOperationExpression	* inst		1123931	0					
ANR	1124449	UnaryOperator	*		1123931	0					
ANR	1124450	Identifier	inst		1123931	1					
ANR	1124451	Identifier	GROUP_SHIFT_1		1123931	1					
ANR	1124452	ElseStatement	else		1123931	0					
ANR	1124453	ExpressionStatement	* inst = GROUP_SHIFT_N	381:4:12179:12200	1123931	0	True				
ANR	1124454	AssignmentExpression	* inst = GROUP_SHIFT_N		1123931	0		=			
ANR	1124455	UnaryOperationExpression	* inst		1123931	0					
ANR	1124456	UnaryOperator	*		1123931	0					
ANR	1124457	Identifier	inst		1123931	1					
ANR	1124458	Identifier	GROUP_SHIFT_N		1123931	1					
ANR	1124459	ElseStatement	else		1123931	0					
ANR	1124460	ExpressionStatement	* inst = GROUP_SHIFT_CL	383:3:12214:12236	1123931	0	True				
ANR	1124461	AssignmentExpression	* inst = GROUP_SHIFT_CL		1123931	0		=			
ANR	1124462	UnaryOperationExpression	* inst		1123931	0					
ANR	1124463	UnaryOperator	*		1123931	0					
ANR	1124464	Identifier	inst		1123931	1					
ANR	1124465	Identifier	GROUP_SHIFT_CL		1123931	1					
ANR	1124466	ExpressionStatement	* buf_ptr = 0	384:2:12240:12252	1123931	1	True				
ANR	1124467	AssignmentExpression	* buf_ptr = 0		1123931	0		=			
ANR	1124468	UnaryOperationExpression	* buf_ptr		1123931	0					
ANR	1124469	UnaryOperator	*		1123931	0					
ANR	1124470	Identifier	buf_ptr		1123931	1					
ANR	1124471	PrimaryExpression	0		1123931	1					
ANR	1124472	IfStatement	if ( ! ( b & SLJIT_MEM ) )		1123931	24					
ANR	1124473	Condition	! ( b & SLJIT_MEM )	387:5:12263:12278	1123931	0	True				
ANR	1124474	UnaryOperationExpression	! ( b & SLJIT_MEM )		1123931	0					
ANR	1124475	UnaryOperator	!		1123931	0					
ANR	1124476	BitAndExpression	b & SLJIT_MEM		1123931	1		&			
ANR	1124477	Identifier	b		1123931	0					
ANR	1124478	Identifier	SLJIT_MEM		1123931	1					
ANR	1124479	ExpressionStatement	* buf_ptr ++ |= MOD_REG + ( ( ! ( flags & EX86_SSE2_OP2 ) ) ? reg_map [ b ] : b )	388:2:12283:12352	1123931	1	True				
ANR	1124480	AssignmentExpression	* buf_ptr ++ |= MOD_REG + ( ( ! ( flags & EX86_SSE2_OP2 ) ) ? reg_map [ b ] : b )		1123931	0		|=			
ANR	1124481	UnaryOperationExpression	* buf_ptr ++		1123931	0					
ANR	1124482	UnaryOperator	*		1123931	0					
ANR	1124483	PostIncDecOperationExpression	buf_ptr ++		1123931	1					
ANR	1124484	Identifier	buf_ptr		1123931	0					
ANR	1124485	IncDec	++		1123931	1					
ANR	1124486	AdditiveExpression	MOD_REG + ( ( ! ( flags & EX86_SSE2_OP2 ) ) ? reg_map [ b ] : b )		1123931	1		+			
ANR	1124487	Identifier	MOD_REG		1123931	0					
ANR	1124488	ConditionalExpression	( ! ( flags & EX86_SSE2_OP2 ) ) ? reg_map [ b ] : b		1123931	1					
ANR	1124489	Condition	! ( flags & EX86_SSE2_OP2 )		1123931	0					
ANR	1124490	UnaryOperationExpression	! ( flags & EX86_SSE2_OP2 )		1123931	0					
ANR	1124491	UnaryOperator	!		1123931	0					
ANR	1124492	BitAndExpression	flags & EX86_SSE2_OP2		1123931	1		&			
ANR	1124493	Identifier	flags		1123931	0					
ANR	1124494	Identifier	EX86_SSE2_OP2		1123931	1					
ANR	1124495	ArrayIndexing	reg_map [ b ]		1123931	1					
ANR	1124496	Identifier	reg_map		1123931	0					
ANR	1124497	Identifier	b		1123931	1					
ANR	1124498	Identifier	b		1123931	2					
ANR	1124499	ElseStatement	else		1123931	0					
ANR	1124500	IfStatement	if ( ( b & REG_MASK ) != SLJIT_UNUSED )		1123931	0					
ANR	1124501	Condition	( b & REG_MASK ) != SLJIT_UNUSED	389:10:12364:12393	1123931	0	True				
ANR	1124502	EqualityExpression	( b & REG_MASK ) != SLJIT_UNUSED		1123931	0		!=			
ANR	1124503	BitAndExpression	b & REG_MASK		1123931	0		&			
ANR	1124504	Identifier	b		1123931	0					
ANR	1124505	Identifier	REG_MASK		1123931	1					
ANR	1124506	Identifier	SLJIT_UNUSED		1123931	1					
ANR	1124507	CompoundStatement		111:42:3021:3021	1123931	1					
ANR	1124508	IfStatement	if ( ( b & OFFS_REG_MASK ) == SLJIT_UNUSED || ( b & OFFS_REG_MASK ) == TO_OFFS_REG ( SLJIT_SP ) )		1123931	0					
ANR	1124509	Condition	( b & OFFS_REG_MASK ) == SLJIT_UNUSED || ( b & OFFS_REG_MASK ) == TO_OFFS_REG ( SLJIT_SP )	390:6:12404:12486	1123931	0	True				
ANR	1124510	OrExpression	( b & OFFS_REG_MASK ) == SLJIT_UNUSED || ( b & OFFS_REG_MASK ) == TO_OFFS_REG ( SLJIT_SP )		1123931	0		||			
ANR	1124511	EqualityExpression	( b & OFFS_REG_MASK ) == SLJIT_UNUSED		1123931	0		==			
ANR	1124512	BitAndExpression	b & OFFS_REG_MASK		1123931	0		&			
ANR	1124513	Identifier	b		1123931	0					
ANR	1124514	Identifier	OFFS_REG_MASK		1123931	1					
ANR	1124515	Identifier	SLJIT_UNUSED		1123931	1					
ANR	1124516	EqualityExpression	( b & OFFS_REG_MASK ) == TO_OFFS_REG ( SLJIT_SP )		1123931	1		==			
ANR	1124517	BitAndExpression	b & OFFS_REG_MASK		1123931	0		&			
ANR	1124518	Identifier	b		1123931	0					
ANR	1124519	Identifier	OFFS_REG_MASK		1123931	1					
ANR	1124520	CallExpression	TO_OFFS_REG ( SLJIT_SP )		1123931	1					
ANR	1124521	Callee	TO_OFFS_REG		1123931	0					
ANR	1124522	Identifier	TO_OFFS_REG		1123931	0					
ANR	1124523	ArgumentList	SLJIT_SP		1123931	1					
ANR	1124524	Argument	SLJIT_SP		1123931	0					
ANR	1124525	Identifier	SLJIT_SP		1123931	0					
ANR	1124526	CompoundStatement		112:91:3114:3114	1123931	1					
ANR	1124527	IfStatement	if ( immb != 0 )		1123931	0					
ANR	1124528	Condition	immb != 0	391:7:12498:12506	1123931	0	True				
ANR	1124529	EqualityExpression	immb != 0		1123931	0		!=			
ANR	1124530	Identifier	immb		1123931	0					
ANR	1124531	PrimaryExpression	0		1123931	1					
ANR	1124532	CompoundStatement		113:18:3134:3134	1123931	1					
ANR	1124533	IfStatement	if ( immb <= 127 && immb >= - 128 )		1123931	0					
ANR	1124534	Condition	immb <= 127 && immb >= - 128	392:8:12519:12545	1123931	0	True				
ANR	1124535	AndExpression	immb <= 127 && immb >= - 128		1123931	0		&&			
ANR	1124536	RelationalExpression	immb <= 127		1123931	0		<=			
ANR	1124537	Identifier	immb		1123931	0					
ANR	1124538	PrimaryExpression	127		1123931	1					
ANR	1124539	RelationalExpression	immb >= - 128		1123931	1		>=			
ANR	1124540	Identifier	immb		1123931	0					
ANR	1124541	UnaryOperationExpression	- 128		1123931	1					
ANR	1124542	UnaryOperator	-		1123931	0					
ANR	1124543	PrimaryExpression	128		1123931	1					
ANR	1124544	ExpressionStatement	* buf_ptr |= 0x40	393:5:12553:12569	1123931	1	True				
ANR	1124545	AssignmentExpression	* buf_ptr |= 0x40		1123931	0		|=			
ANR	1124546	UnaryOperationExpression	* buf_ptr		1123931	0					
ANR	1124547	UnaryOperator	*		1123931	0					
ANR	1124548	Identifier	buf_ptr		1123931	1					
ANR	1124549	PrimaryExpression	0x40		1123931	1					
ANR	1124550	ElseStatement	else		1123931	0					
ANR	1124551	ExpressionStatement	* buf_ptr |= 0x80	395:5:12585:12601	1123931	0	True				
ANR	1124552	AssignmentExpression	* buf_ptr |= 0x80		1123931	0		|=			
ANR	1124553	UnaryOperationExpression	* buf_ptr		1123931	0					
ANR	1124554	UnaryOperator	*		1123931	0					
ANR	1124555	Identifier	buf_ptr		1123931	1					
ANR	1124556	PrimaryExpression	0x80		1123931	1					
ANR	1124557	IfStatement	if ( ( b & OFFS_REG_MASK ) == SLJIT_UNUSED )		1123931	1					
ANR	1124558	Condition	( b & OFFS_REG_MASK ) == SLJIT_UNUSED	398:7:12616:12650	1123931	0	True				
ANR	1124559	EqualityExpression	( b & OFFS_REG_MASK ) == SLJIT_UNUSED		1123931	0		==			
ANR	1124560	BitAndExpression	b & OFFS_REG_MASK		1123931	0		&			
ANR	1124561	Identifier	b		1123931	0					
ANR	1124562	Identifier	OFFS_REG_MASK		1123931	1					
ANR	1124563	Identifier	SLJIT_UNUSED		1123931	1					
ANR	1124564	ExpressionStatement	* buf_ptr ++ |= reg_map [ b & REG_MASK ]	399:4:12657:12692	1123931	1	True				
ANR	1124565	AssignmentExpression	* buf_ptr ++ |= reg_map [ b & REG_MASK ]		1123931	0		|=			
ANR	1124566	UnaryOperationExpression	* buf_ptr ++		1123931	0					
ANR	1124567	UnaryOperator	*		1123931	0					
ANR	1124568	PostIncDecOperationExpression	buf_ptr ++		1123931	1					
ANR	1124569	Identifier	buf_ptr		1123931	0					
ANR	1124570	IncDec	++		1123931	1					
ANR	1124571	ArrayIndexing	reg_map [ b & REG_MASK ]		1123931	1					
ANR	1124572	Identifier	reg_map		1123931	0					
ANR	1124573	BitAndExpression	b & REG_MASK		1123931	1		&			
ANR	1124574	Identifier	b		1123931	0					
ANR	1124575	Identifier	REG_MASK		1123931	1					
ANR	1124576	ElseStatement	else		1123931	0					
ANR	1124577	CompoundStatement		122:8:3327:3327	1123931	0					
ANR	1124578	ExpressionStatement	* buf_ptr ++ |= 0x04	401:4:12708:12726	1123931	0	True				
ANR	1124579	AssignmentExpression	* buf_ptr ++ |= 0x04		1123931	0		|=			
ANR	1124580	UnaryOperationExpression	* buf_ptr ++		1123931	0					
ANR	1124581	UnaryOperator	*		1123931	0					
ANR	1124582	PostIncDecOperationExpression	buf_ptr ++		1123931	1					
ANR	1124583	Identifier	buf_ptr		1123931	0					
ANR	1124584	IncDec	++		1123931	1					
ANR	1124585	PrimaryExpression	0x04		1123931	1					
ANR	1124586	ExpressionStatement	* buf_ptr ++ = reg_map [ b & REG_MASK ] | ( reg_map [ OFFS_REG ( b ) ] << 3 )	402:4:12732:12796	1123931	1	True				
ANR	1124587	AssignmentExpression	* buf_ptr ++ = reg_map [ b & REG_MASK ] | ( reg_map [ OFFS_REG ( b ) ] << 3 )		1123931	0		=			
ANR	1124588	UnaryOperationExpression	* buf_ptr ++		1123931	0					
ANR	1124589	UnaryOperator	*		1123931	0					
ANR	1124590	PostIncDecOperationExpression	buf_ptr ++		1123931	1					
ANR	1124591	Identifier	buf_ptr		1123931	0					
ANR	1124592	IncDec	++		1123931	1					
ANR	1124593	InclusiveOrExpression	reg_map [ b & REG_MASK ] | ( reg_map [ OFFS_REG ( b ) ] << 3 )		1123931	1		|			
ANR	1124594	ArrayIndexing	reg_map [ b & REG_MASK ]		1123931	0					
ANR	1124595	Identifier	reg_map		1123931	0					
ANR	1124596	BitAndExpression	b & REG_MASK		1123931	1		&			
ANR	1124597	Identifier	b		1123931	0					
ANR	1124598	Identifier	REG_MASK		1123931	1					
ANR	1124599	ShiftExpression	reg_map [ OFFS_REG ( b ) ] << 3		1123931	1		<<			
ANR	1124600	ArrayIndexing	reg_map [ OFFS_REG ( b ) ]		1123931	0					
ANR	1124601	Identifier	reg_map		1123931	0					
ANR	1124602	CallExpression	OFFS_REG ( b )		1123931	1					
ANR	1124603	Callee	OFFS_REG		1123931	0					
ANR	1124604	Identifier	OFFS_REG		1123931	0					
ANR	1124605	ArgumentList	b		1123931	1					
ANR	1124606	Argument	b		1123931	0					
ANR	1124607	Identifier	b		1123931	0					
ANR	1124608	PrimaryExpression	3		1123931	1					
ANR	1124609	IfStatement	if ( immb != 0 )		1123931	2					
ANR	1124610	Condition	immb != 0	405:7:12811:12819	1123931	0	True				
ANR	1124611	EqualityExpression	immb != 0		1123931	0		!=			
ANR	1124612	Identifier	immb		1123931	0					
ANR	1124613	PrimaryExpression	0		1123931	1					
ANR	1124614	CompoundStatement		127:18:3447:3447	1123931	1					
ANR	1124615	IfStatement	if ( immb <= 127 && immb >= - 128 )		1123931	0					
ANR	1124616	Condition	immb <= 127 && immb >= - 128	406:8:12832:12858	1123931	0	True				
ANR	1124617	AndExpression	immb <= 127 && immb >= - 128		1123931	0		&&			
ANR	1124618	RelationalExpression	immb <= 127		1123931	0		<=			
ANR	1124619	Identifier	immb		1123931	0					
ANR	1124620	PrimaryExpression	127		1123931	1					
ANR	1124621	RelationalExpression	immb >= - 128		1123931	1		>=			
ANR	1124622	Identifier	immb		1123931	0					
ANR	1124623	UnaryOperationExpression	- 128		1123931	1					
ANR	1124624	UnaryOperator	-		1123931	0					
ANR	1124625	PrimaryExpression	128		1123931	1					
ANR	1124626	ExpressionStatement	* buf_ptr ++ = immb	407:5:12866:12883	1123931	1	True				
ANR	1124627	AssignmentExpression	* buf_ptr ++ = immb		1123931	0		=			
ANR	1124628	UnaryOperationExpression	* buf_ptr ++		1123931	0					
ANR	1124629	UnaryOperator	*		1123931	0					
ANR	1124630	PostIncDecOperationExpression	buf_ptr ++		1123931	1					
ANR	1124631	Identifier	buf_ptr		1123931	0					
ANR	1124632	IncDec	++		1123931	1					
ANR	1124633	Identifier	immb		1123931	1					
ANR	1124634	ElseStatement	else		1123931	0					
ANR	1124635	CompoundStatement		130:9:3545:3545	1123931	0					
ANR	1124636	ExpressionStatement	* ( sljit_sw * ) buf_ptr = immb	409:5:12927:12953	1123931	0	True				
ANR	1124637	AssignmentExpression	* ( sljit_sw * ) buf_ptr = immb		1123931	0		=			
ANR	1124638	UnaryOperationExpression	* ( sljit_sw * ) buf_ptr		1123931	0					
ANR	1124639	UnaryOperator	*		1123931	0					
ANR	1124640	CastExpression	( sljit_sw * ) buf_ptr		1123931	1					
ANR	1124641	CastTarget	sljit_sw *		1123931	0					
ANR	1124642	Identifier	buf_ptr		1123931	1					
ANR	1124643	Identifier	immb		1123931	1					
ANR	1124644	ExpressionStatement	buf_ptr += sizeof ( sljit_sw )	410:5:12987:13014	1123931	1	True				
ANR	1124645	AssignmentExpression	buf_ptr += sizeof ( sljit_sw )		1123931	0		+=			
ANR	1124646	Identifier	buf_ptr		1123931	0					
ANR	1124647	SizeofExpression	sizeof ( sljit_sw )		1123931	1					
ANR	1124648	Sizeof	sizeof		1123931	0					
ANR	1124649	SizeofOperand	sljit_sw		1123931	1					
ANR	1124650	ElseStatement	else		1123931	0					
ANR	1124651	CompoundStatement		136:7:3663:3663	1123931	0					
ANR	1124652	ExpressionStatement	* buf_ptr ++ |= 0x04	415:3:13043:13061	1123931	0	True				
ANR	1124653	AssignmentExpression	* buf_ptr ++ |= 0x04		1123931	0		|=			
ANR	1124654	UnaryOperationExpression	* buf_ptr ++		1123931	0					
ANR	1124655	UnaryOperator	*		1123931	0					
ANR	1124656	PostIncDecOperationExpression	buf_ptr ++		1123931	1					
ANR	1124657	Identifier	buf_ptr		1123931	0					
ANR	1124658	IncDec	++		1123931	1					
ANR	1124659	PrimaryExpression	0x04		1123931	1					
ANR	1124660	ExpressionStatement	* buf_ptr ++ = reg_map [ b & REG_MASK ] | ( reg_map [ OFFS_REG ( b ) ] << 3 ) | ( immb << 6 )	416:3:13066:13144	1123931	1	True				
ANR	1124661	AssignmentExpression	* buf_ptr ++ = reg_map [ b & REG_MASK ] | ( reg_map [ OFFS_REG ( b ) ] << 3 ) | ( immb << 6 )		1123931	0		=			
ANR	1124662	UnaryOperationExpression	* buf_ptr ++		1123931	0					
ANR	1124663	UnaryOperator	*		1123931	0					
ANR	1124664	PostIncDecOperationExpression	buf_ptr ++		1123931	1					
ANR	1124665	Identifier	buf_ptr		1123931	0					
ANR	1124666	IncDec	++		1123931	1					
ANR	1124667	InclusiveOrExpression	reg_map [ b & REG_MASK ] | ( reg_map [ OFFS_REG ( b ) ] << 3 ) | ( immb << 6 )		1123931	1		|			
ANR	1124668	ArrayIndexing	reg_map [ b & REG_MASK ]		1123931	0					
ANR	1124669	Identifier	reg_map		1123931	0					
ANR	1124670	BitAndExpression	b & REG_MASK		1123931	1		&			
ANR	1124671	Identifier	b		1123931	0					
ANR	1124672	Identifier	REG_MASK		1123931	1					
ANR	1124673	InclusiveOrExpression	( reg_map [ OFFS_REG ( b ) ] << 3 ) | ( immb << 6 )		1123931	1		|			
ANR	1124674	ShiftExpression	reg_map [ OFFS_REG ( b ) ] << 3		1123931	0		<<			
ANR	1124675	ArrayIndexing	reg_map [ OFFS_REG ( b ) ]		1123931	0					
ANR	1124676	Identifier	reg_map		1123931	0					
ANR	1124677	CallExpression	OFFS_REG ( b )		1123931	1					
ANR	1124678	Callee	OFFS_REG		1123931	0					
ANR	1124679	Identifier	OFFS_REG		1123931	0					
ANR	1124680	ArgumentList	b		1123931	1					
ANR	1124681	Argument	b		1123931	0					
ANR	1124682	Identifier	b		1123931	0					
ANR	1124683	PrimaryExpression	3		1123931	1					
ANR	1124684	ShiftExpression	immb << 6		1123931	1		<<			
ANR	1124685	Identifier	immb		1123931	0					
ANR	1124686	PrimaryExpression	6		1123931	1					
ANR	1124687	ElseStatement	else		1123931	0					
ANR	1124688	CompoundStatement		141:6:3784:3784	1123931	0					
ANR	1124689	ExpressionStatement	* buf_ptr ++ |= 0x05	420:2:13163:13181	1123931	0	True				
ANR	1124690	AssignmentExpression	* buf_ptr ++ |= 0x05		1123931	0		|=			
ANR	1124691	UnaryOperationExpression	* buf_ptr ++		1123931	0					
ANR	1124692	UnaryOperator	*		1123931	0					
ANR	1124693	PostIncDecOperationExpression	buf_ptr ++		1123931	1					
ANR	1124694	Identifier	buf_ptr		1123931	0					
ANR	1124695	IncDec	++		1123931	1					
ANR	1124696	PrimaryExpression	0x05		1123931	1					
ANR	1124697	ExpressionStatement	* ( sljit_sw * ) buf_ptr = immb	421:2:13185:13211	1123931	1	True				
ANR	1124698	AssignmentExpression	* ( sljit_sw * ) buf_ptr = immb		1123931	0		=			
ANR	1124699	UnaryOperationExpression	* ( sljit_sw * ) buf_ptr		1123931	0					
ANR	1124700	UnaryOperator	*		1123931	0					
ANR	1124701	CastExpression	( sljit_sw * ) buf_ptr		1123931	1					
ANR	1124702	CastTarget	sljit_sw *		1123931	0					
ANR	1124703	Identifier	buf_ptr		1123931	1					
ANR	1124704	Identifier	immb		1123931	1					
ANR	1124705	ExpressionStatement	buf_ptr += sizeof ( sljit_sw )	422:2:13242:13269	1123931	2	True				
ANR	1124706	AssignmentExpression	buf_ptr += sizeof ( sljit_sw )		1123931	0		+=			
ANR	1124707	Identifier	buf_ptr		1123931	0					
ANR	1124708	SizeofExpression	sizeof ( sljit_sw )		1123931	1					
ANR	1124709	Sizeof	sizeof		1123931	0					
ANR	1124710	SizeofOperand	sljit_sw		1123931	1					
ANR	1124711	IfStatement	if ( a & SLJIT_IMM )		1123931	25					
ANR	1124712	Condition	a & SLJIT_IMM	425:5:13280:13292	1123931	0	True				
ANR	1124713	BitAndExpression	a & SLJIT_IMM		1123931	0		&			
ANR	1124714	Identifier	a		1123931	0					
ANR	1124715	Identifier	SLJIT_IMM		1123931	1					
ANR	1124716	CompoundStatement		147:20:3920:3920	1123931	1					
ANR	1124717	IfStatement	if ( flags & EX86_BYTE_ARG )		1123931	0					
ANR	1124718	Condition	flags & EX86_BYTE_ARG	426:6:13303:13323	1123931	0	True				
ANR	1124719	BitAndExpression	flags & EX86_BYTE_ARG		1123931	0		&			
ANR	1124720	Identifier	flags		1123931	0					
ANR	1124721	Identifier	EX86_BYTE_ARG		1123931	1					
ANR	1124722	ExpressionStatement	* buf_ptr = imma	427:3:13329:13344	1123931	1	True				
ANR	1124723	AssignmentExpression	* buf_ptr = imma		1123931	0		=			
ANR	1124724	UnaryOperationExpression	* buf_ptr		1123931	0					
ANR	1124725	UnaryOperator	*		1123931	0					
ANR	1124726	Identifier	buf_ptr		1123931	1					
ANR	1124727	Identifier	imma		1123931	1					
ANR	1124728	ElseStatement	else		1123931	0					
ANR	1124729	IfStatement	if ( flags & EX86_HALF_ARG )		1123931	0					
ANR	1124730	Condition	flags & EX86_HALF_ARG	428:11:13357:13377	1123931	0	True				
ANR	1124731	BitAndExpression	flags & EX86_HALF_ARG		1123931	0		&			
ANR	1124732	Identifier	flags		1123931	0					
ANR	1124733	Identifier	EX86_HALF_ARG		1123931	1					
ANR	1124734	ExpressionStatement	* ( short * ) buf_ptr = imma	429:3:13383:13406	1123931	1	True				
ANR	1124735	AssignmentExpression	* ( short * ) buf_ptr = imma		1123931	0		=			
ANR	1124736	UnaryOperationExpression	* ( short * ) buf_ptr		1123931	0					
ANR	1124737	UnaryOperator	*		1123931	0					
ANR	1124738	CastExpression	( short * ) buf_ptr		1123931	1					
ANR	1124739	CastTarget	short *		1123931	0					
ANR	1124740	Identifier	buf_ptr		1123931	1					
ANR	1124741	Identifier	imma		1123931	1					
ANR	1124742	ElseStatement	else		1123931	0					
ANR	1124743	IfStatement	if ( ! ( flags & EX86_SHIFT_INS ) )		1123931	0					
ANR	1124744	Condition	! ( flags & EX86_SHIFT_INS )	430:11:13419:13443	1123931	0	True				
ANR	1124745	UnaryOperationExpression	! ( flags & EX86_SHIFT_INS )		1123931	0					
ANR	1124746	UnaryOperator	!		1123931	0					
ANR	1124747	BitAndExpression	flags & EX86_SHIFT_INS		1123931	1		&			
ANR	1124748	Identifier	flags		1123931	0					
ANR	1124749	Identifier	EX86_SHIFT_INS		1123931	1					
ANR	1124750	ExpressionStatement	* ( sljit_sw * ) buf_ptr = imma	431:3:13449:13475	1123931	1	True				
ANR	1124751	AssignmentExpression	* ( sljit_sw * ) buf_ptr = imma		1123931	0		=			
ANR	1124752	UnaryOperationExpression	* ( sljit_sw * ) buf_ptr		1123931	0					
ANR	1124753	UnaryOperator	*		1123931	0					
ANR	1124754	CastExpression	( sljit_sw * ) buf_ptr		1123931	1					
ANR	1124755	CastTarget	sljit_sw *		1123931	0					
ANR	1124756	Identifier	buf_ptr		1123931	1					
ANR	1124757	Identifier	imma		1123931	1					
ANR	1124758	ReturnStatement	return ! ( flags & EX86_SHIFT_INS ) ? inst : ( inst + 1 ) ;	434:1:13482:13534	1123931	26	True				
ANR	1124759	ConditionalExpression	! ( flags & EX86_SHIFT_INS ) ? inst : ( inst + 1 )		1123931	0					
ANR	1124760	Condition	! ( flags & EX86_SHIFT_INS )		1123931	0					
ANR	1124761	UnaryOperationExpression	! ( flags & EX86_SHIFT_INS )		1123931	0					
ANR	1124762	UnaryOperator	!		1123931	0					
ANR	1124763	BitAndExpression	flags & EX86_SHIFT_INS		1123931	1		&			
ANR	1124764	Identifier	flags		1123931	0					
ANR	1124765	Identifier	EX86_SHIFT_INS		1123931	1					
ANR	1124766	Identifier	inst		1123931	1					
ANR	1124767	AdditiveExpression	inst + 1		1123931	2		+			
ANR	1124768	Identifier	inst		1123931	0					
ANR	1124769	PrimaryExpression	1		1123931	1					
ANR	1124770	ReturnType	static sljit_ub *		1123931	1					
ANR	1124771	Identifier	emit_x86_instruction		1123931	2					
ANR	1124772	ParameterList	"struct sljit_compiler * compiler , sljit_si size , sljit_si a , sljit_sw imma , sljit_si b , sljit_sw immb"		1123931	3					
ANR	1124773	Parameter	struct sljit_compiler * compiler	274:38:9184:9214	1123931	0	True				
ANR	1124774	ParameterType	struct sljit_compiler *		1123931	0					
ANR	1124775	Identifier	compiler		1123931	1					
ANR	1124776	Parameter	sljit_si size	274:71:9217:9229	1123931	1	True				
ANR	1124777	ParameterType	sljit_si		1123931	0					
ANR	1124778	Identifier	size		1123931	1					
ANR	1124779	Parameter	sljit_si a	276:1:9275:9284	1123931	2	True				
ANR	1124780	ParameterType	sljit_si		1123931	0					
ANR	1124781	Identifier	a		1123931	1					
ANR	1124782	Parameter	sljit_sw imma	276:13:9287:9299	1123931	3	True				
ANR	1124783	ParameterType	sljit_sw		1123931	0					
ANR	1124784	Identifier	imma		1123931	1					
ANR	1124785	Parameter	sljit_si b	278:1:9347:9356	1123931	4	True				
ANR	1124786	ParameterType	sljit_si		1123931	0					
ANR	1124787	Identifier	b		1123931	1					
ANR	1124788	Parameter	sljit_sw immb	278:13:9359:9371	1123931	5	True				
ANR	1124789	ParameterType	sljit_sw		1123931	0					
ANR	1124790	Identifier	immb		1123931	1					
ANR	1124791	CFGEntryNode	ENTRY		1123931		True				
ANR	1124792	CFGExitNode	EXIT		1123931		True				
ANR	1124793	Symbol	SLJIT_MEM		1123931						
ANR	1124794	Symbol	immb		1123931						
ANR	1124795	Symbol	* inst ++		1123931						
ANR	1124796	Symbol	imma		1123931						
ANR	1124797	Symbol	reg_map		1123931						
ANR	1124798	Symbol	SLJIT_IMM		1123931						
ANR	1124799	Symbol	GROUP_SHIFT_N		1123931						
ANR	1124800	Symbol	EX86_PREF_F2		1123931						
ANR	1124801	Symbol	EX86_PREF_F3		1123931						
ANR	1124802	Symbol	OFFS_REG_MASK		1123931						
ANR	1124803	Symbol	* buf_ptr ++		1123931						
ANR	1124804	Symbol	* reg_map		1123931						
ANR	1124805	Symbol	GROUP_SHIFT_CL		1123931						
ANR	1124806	Symbol	EX86_SSE2_OP2		1123931						
ANR	1124807	Symbol	buf_ptr		1123931						
ANR	1124808	Symbol	EX86_SSE2_OP1		1123931						
ANR	1124809	Symbol	size		1123931						
ANR	1124810	Symbol	EX86_SHIFT_INS		1123931						
ANR	1124811	Symbol	GROUP_BINARY_81		1123931						
ANR	1124812	Symbol	GROUP_BINARY_83		1123931						
ANR	1124813	Symbol	OFFS_REG		1123931						
ANR	1124814	Symbol	EX86_BYTE_ARG		1123931						
ANR	1124815	Symbol	* ( short * ) buf_ptr		1123931						
ANR	1124816	Symbol	* REG_MASK		1123931						
ANR	1124817	Symbol	EX86_SSE2		1123931						
ANR	1124818	Symbol	flags		1123931						
ANR	1124819	Symbol	SLJIT_SP		1123931						
ANR	1124820	Symbol	SLJIT_PREF_SHIFT_REG		1123931						
ANR	1124821	Symbol	EX86_PREF_66		1123931						
ANR	1124822	Symbol	~0xf		1123931						
ANR	1124823	Symbol	EX86_BIN_INS		1123931						
ANR	1124824	Symbol	compiler		1123931						
ANR	1124825	Symbol	* buf_ptr		1123931						
ANR	1124826	Symbol	a		1123931						
ANR	1124827	Symbol	TO_OFFS_REG		1123931						
ANR	1124828	Symbol	b		1123931						
ANR	1124829	Symbol	REG_MASK		1123931						
ANR	1124830	Symbol	* inst		1123931						
ANR	1124831	Symbol	* a		1123931						
ANR	1124832	Symbol	* b		1123931						
ANR	1124833	Symbol	* ( sljit_sw * ) buf_ptr		1123931						
ANR	1124834	Symbol	MOD_REG		1123931						
ANR	1124835	Symbol	* OFFS_REG		1123931						
ANR	1124836	Symbol	EX86_HALF_ARG		1123931						
ANR	1124837	Symbol	SLJIT_UNUSED		1123931						
ANR	1124838	Symbol	inst		1123931						
ANR	1124839	Symbol	ensure_buf		1123931						
ANR	1124840	Symbol	inst_size		1123931						
ANR	1124841	Symbol	GROUP_SHIFT_1		1123931						
ANR	1124842	Function	call_with_args	441:0:13768:14955							
ANR	1124843	FunctionDef	"call_with_args (struct sljit_compiler * compiler , sljit_si type)"		1124842	0					
ANR	1124844	CompoundStatement		442:0:13860:14955	1124842	0					
ANR	1124845	IdentifierDeclStatement	sljit_ub * inst ;	443:1:13863:13877	1124842	0	True				
ANR	1124846	IdentifierDecl	* inst		1124842	0					
ANR	1124847	IdentifierDeclType	sljit_ub *		1124842	0					
ANR	1124848	Identifier	inst		1124842	1					
ANR	1124849	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , type >= SLJIT_CALL3 ? 1 + 2 + 1 : 1 + 2 )"	446:1:13942:14021	1124842	1	True				
ANR	1124850	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , type >= SLJIT_CALL3 ? 1 + 2 + 1 : 1 + 2 )"		1124842	0		=			
ANR	1124851	Identifier	inst		1124842	0					
ANR	1124852	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , type >= SLJIT_CALL3 ? 1 + 2 + 1 : 1 + 2 )"		1124842	1					
ANR	1124853	CastTarget	sljit_ub *		1124842	0					
ANR	1124854	CallExpression	"ensure_buf ( compiler , type >= SLJIT_CALL3 ? 1 + 2 + 1 : 1 + 2 )"		1124842	1					
ANR	1124855	Callee	ensure_buf		1124842	0					
ANR	1124856	Identifier	ensure_buf		1124842	0					
ANR	1124857	ArgumentList	compiler		1124842	1					
ANR	1124858	Argument	compiler		1124842	0					
ANR	1124859	Identifier	compiler		1124842	0					
ANR	1124860	Argument	type >= SLJIT_CALL3 ? 1 + 2 + 1 : 1 + 2		1124842	1					
ANR	1124861	ConditionalExpression	type >= SLJIT_CALL3 ? 1 + 2 + 1 : 1 + 2		1124842	0					
ANR	1124862	Condition	type >= SLJIT_CALL3		1124842	0					
ANR	1124863	RelationalExpression	type >= SLJIT_CALL3		1124842	0		>=			
ANR	1124864	Identifier	type		1124842	0					
ANR	1124865	Identifier	SLJIT_CALL3		1124842	1					
ANR	1124866	AdditiveExpression	1 + 2 + 1		1124842	1		+			
ANR	1124867	PrimaryExpression	1		1124842	0					
ANR	1124868	AdditiveExpression	2 + 1		1124842	1		+			
ANR	1124869	PrimaryExpression	2		1124842	0					
ANR	1124870	PrimaryExpression	1		1124842	1					
ANR	1124871	AdditiveExpression	1 + 2		1124842	2		+			
ANR	1124872	PrimaryExpression	1		1124842	0					
ANR	1124873	PrimaryExpression	2		1124842	1					
ANR	1124874	ExpressionStatement	FAIL_IF ( ! inst )	447:1:14024:14038	1124842	2	True				
ANR	1124875	CallExpression	FAIL_IF ( ! inst )		1124842	0					
ANR	1124876	Callee	FAIL_IF		1124842	0					
ANR	1124877	Identifier	FAIL_IF		1124842	0					
ANR	1124878	ArgumentList	! inst		1124842	1					
ANR	1124879	Argument	! inst		1124842	0					
ANR	1124880	UnaryOperationExpression	! inst		1124842	0					
ANR	1124881	UnaryOperator	!		1124842	0					
ANR	1124882	Identifier	inst		1124842	1					
ANR	1124883	ExpressionStatement	INC_SIZE ( type >= SLJIT_CALL3 ? 2 + 1 : 2 )	448:1:14041:14082	1124842	3	True				
ANR	1124884	CallExpression	INC_SIZE ( type >= SLJIT_CALL3 ? 2 + 1 : 2 )		1124842	0					
ANR	1124885	Callee	INC_SIZE		1124842	0					
ANR	1124886	Identifier	INC_SIZE		1124842	0					
ANR	1124887	ArgumentList	type >= SLJIT_CALL3 ? 2 + 1 : 2		1124842	1					
ANR	1124888	Argument	type >= SLJIT_CALL3 ? 2 + 1 : 2		1124842	0					
ANR	1124889	ConditionalExpression	type >= SLJIT_CALL3 ? 2 + 1 : 2		1124842	0					
ANR	1124890	Condition	type >= SLJIT_CALL3		1124842	0					
ANR	1124891	RelationalExpression	type >= SLJIT_CALL3		1124842	0		>=			
ANR	1124892	Identifier	type		1124842	0					
ANR	1124893	Identifier	SLJIT_CALL3		1124842	1					
ANR	1124894	AdditiveExpression	2 + 1		1124842	1		+			
ANR	1124895	PrimaryExpression	2		1124842	0					
ANR	1124896	PrimaryExpression	1		1124842	1					
ANR	1124897	PrimaryExpression	2		1124842	2					
ANR	1124898	IfStatement	if ( type >= SLJIT_CALL3 )		1124842	4					
ANR	1124899	Condition	type >= SLJIT_CALL3	450:5:14090:14108	1124842	0	True				
ANR	1124900	RelationalExpression	type >= SLJIT_CALL3		1124842	0		>=			
ANR	1124901	Identifier	type		1124842	0					
ANR	1124902	Identifier	SLJIT_CALL3		1124842	1					
ANR	1124903	ExpressionStatement	PUSH_REG ( reg_map [ SLJIT_R2 ] )	451:2:14113:14140	1124842	1	True				
ANR	1124904	CallExpression	PUSH_REG ( reg_map [ SLJIT_R2 ] )		1124842	0					
ANR	1124905	Callee	PUSH_REG		1124842	0					
ANR	1124906	Identifier	PUSH_REG		1124842	0					
ANR	1124907	ArgumentList	reg_map [ SLJIT_R2 ]		1124842	1					
ANR	1124908	Argument	reg_map [ SLJIT_R2 ]		1124842	0					
ANR	1124909	ArrayIndexing	reg_map [ SLJIT_R2 ]		1124842	0					
ANR	1124910	Identifier	reg_map		1124842	0					
ANR	1124911	Identifier	SLJIT_R2		1124842	1					
ANR	1124912	ExpressionStatement	* inst ++ = MOV_r_rm	452:1:14143:14161	1124842	5	True				
ANR	1124913	AssignmentExpression	* inst ++ = MOV_r_rm		1124842	0		=			
ANR	1124914	UnaryOperationExpression	* inst ++		1124842	0					
ANR	1124915	UnaryOperator	*		1124842	0					
ANR	1124916	PostIncDecOperationExpression	inst ++		1124842	1					
ANR	1124917	Identifier	inst		1124842	0					
ANR	1124918	IncDec	++		1124842	1					
ANR	1124919	Identifier	MOV_r_rm		1124842	1					
ANR	1124920	ExpressionStatement	* inst ++ = MOD_REG | ( reg_map [ SLJIT_R2 ] << 3 ) | reg_map [ SLJIT_R0 ]	453:1:14164:14228	1124842	6	True				
ANR	1124921	AssignmentExpression	* inst ++ = MOD_REG | ( reg_map [ SLJIT_R2 ] << 3 ) | reg_map [ SLJIT_R0 ]		1124842	0		=			
ANR	1124922	UnaryOperationExpression	* inst ++		1124842	0					
ANR	1124923	UnaryOperator	*		1124842	0					
ANR	1124924	PostIncDecOperationExpression	inst ++		1124842	1					
ANR	1124925	Identifier	inst		1124842	0					
ANR	1124926	IncDec	++		1124842	1					
ANR	1124927	InclusiveOrExpression	MOD_REG | ( reg_map [ SLJIT_R2 ] << 3 ) | reg_map [ SLJIT_R0 ]		1124842	1		|			
ANR	1124928	Identifier	MOD_REG		1124842	0					
ANR	1124929	InclusiveOrExpression	( reg_map [ SLJIT_R2 ] << 3 ) | reg_map [ SLJIT_R0 ]		1124842	1		|			
ANR	1124930	ShiftExpression	reg_map [ SLJIT_R2 ] << 3		1124842	0		<<			
ANR	1124931	ArrayIndexing	reg_map [ SLJIT_R2 ]		1124842	0					
ANR	1124932	Identifier	reg_map		1124842	0					
ANR	1124933	Identifier	SLJIT_R2		1124842	1					
ANR	1124934	PrimaryExpression	3		1124842	1					
ANR	1124935	ArrayIndexing	reg_map [ SLJIT_R0 ]		1124842	1					
ANR	1124936	Identifier	reg_map		1124842	0					
ANR	1124937	Identifier	SLJIT_R0		1124842	1					
ANR	1124938	ReturnStatement	return SLJIT_SUCCESS ;	476:1:14933:14953	1124842	7	True				
ANR	1124939	Identifier	SLJIT_SUCCESS		1124842	0					
ANR	1124940	ReturnType	static SLJIT_INLINE sljit_si		1124842	1					
ANR	1124941	Identifier	call_with_args		1124842	2					
ANR	1124942	ParameterList	"struct sljit_compiler * compiler , sljit_si type"		1124842	3					
ANR	1124943	Parameter	struct sljit_compiler * compiler	441:44:13812:13842	1124842	0	True				
ANR	1124944	ParameterType	struct sljit_compiler *		1124842	0					
ANR	1124945	Identifier	compiler		1124842	1					
ANR	1124946	Parameter	sljit_si type	441:77:13845:13857	1124842	1	True				
ANR	1124947	ParameterType	sljit_si		1124842	0					
ANR	1124948	Identifier	type		1124842	1					
ANR	1124949	CFGEntryNode	ENTRY		1124842		True				
ANR	1124950	CFGExitNode	EXIT		1124842		True				
ANR	1124951	Symbol	MOV_r_rm		1124842						
ANR	1124952	Symbol	* inst ++		1124842						
ANR	1124953	Symbol	reg_map		1124842						
ANR	1124954	Symbol	SLJIT_SUCCESS		1124842						
ANR	1124955	Symbol	type		1124842						
ANR	1124956	Symbol	* reg_map		1124842						
ANR	1124957	Symbol	SLJIT_R2		1124842						
ANR	1124958	Symbol	MOD_REG		1124842						
ANR	1124959	Symbol	SLJIT_R0		1124842						
ANR	1124960	Symbol	* SLJIT_R2		1124842						
ANR	1124961	Symbol	inst		1124842						
ANR	1124962	Symbol	ensure_buf		1124842						
ANR	1124963	Symbol	SLJIT_CALL3		1124842						
ANR	1124964	Symbol	compiler		1124842						
ANR	1124965	Symbol	* SLJIT_R0		1124842						
ANR	1124966	Function	sljit_emit_fast_enter	479:0:14958:15669							
ANR	1124967	FunctionDef	"sljit_emit_fast_enter (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw)"		1124966	0					
ANR	1124968	CompoundStatement		480:0:15076:15669	1124966	0					
ANR	1124969	IdentifierDeclStatement	sljit_ub * inst ;	481:1:15079:15093	1124966	0	True				
ANR	1124970	IdentifierDecl	* inst		1124966	0					
ANR	1124971	IdentifierDeclType	sljit_ub *		1124966	0					
ANR	1124972	Identifier	inst		1124966	1					
ANR	1124973	ExpressionStatement	CHECK_ERROR ( )	483:1:15097:15110	1124966	1	True				
ANR	1124974	CallExpression	CHECK_ERROR ( )		1124966	0					
ANR	1124975	Callee	CHECK_ERROR		1124966	0					
ANR	1124976	Identifier	CHECK_ERROR		1124966	0					
ANR	1124977	ArgumentList			1124966	1					
ANR	1124978	ExpressionStatement	"CHECK ( check_sljit_emit_fast_enter ( compiler , dst , dstw ) )"	484:1:15113:15168	1124966	2	True				
ANR	1124979	CallExpression	"CHECK ( check_sljit_emit_fast_enter ( compiler , dst , dstw ) )"		1124966	0					
ANR	1124980	Callee	CHECK		1124966	0					
ANR	1124981	Identifier	CHECK		1124966	0					
ANR	1124982	ArgumentList	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1124966	1					
ANR	1124983	Argument	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1124966	0					
ANR	1124984	CallExpression	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1124966	0					
ANR	1124985	Callee	check_sljit_emit_fast_enter		1124966	0					
ANR	1124986	Identifier	check_sljit_emit_fast_enter		1124966	0					
ANR	1124987	ArgumentList	compiler		1124966	1					
ANR	1124988	Argument	compiler		1124966	0					
ANR	1124989	Identifier	compiler		1124966	0					
ANR	1124990	Argument	dst		1124966	1					
ANR	1124991	Identifier	dst		1124966	0					
ANR	1124992	Argument	dstw		1124966	2					
ANR	1124993	Identifier	dstw		1124966	0					
ANR	1124994	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	485:1:15171:15201	1124966	3	True				
ANR	1124995	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1124966	0					
ANR	1124996	Callee	ADJUST_LOCAL_OFFSET		1124966	0					
ANR	1124997	Identifier	ADJUST_LOCAL_OFFSET		1124966	0					
ANR	1124998	ArgumentList	dst		1124966	1					
ANR	1124999	Argument	dst		1124966	0					
ANR	1125000	Identifier	dst		1124966	0					
ANR	1125001	Argument	dstw		1124966	1					
ANR	1125002	Identifier	dstw		1124966	0					
ANR	1125003	ExpressionStatement	"CHECK_EXTRA_REGS ( dst , dstw , ( void ) 0 )"	487:1:15205:15241	1124966	4	True				
ANR	1125004	CallExpression	"CHECK_EXTRA_REGS ( dst , dstw , ( void ) 0 )"		1124966	0					
ANR	1125005	Callee	CHECK_EXTRA_REGS		1124966	0					
ANR	1125006	Identifier	CHECK_EXTRA_REGS		1124966	0					
ANR	1125007	ArgumentList	dst		1124966	1					
ANR	1125008	Argument	dst		1124966	0					
ANR	1125009	Identifier	dst		1124966	0					
ANR	1125010	Argument	dstw		1124966	1					
ANR	1125011	Identifier	dstw		1124966	0					
ANR	1125012	Argument	( void ) 0		1124966	2					
ANR	1125013	CastExpression	( void ) 0		1124966	0					
ANR	1125014	CastTarget	void		1124966	0					
ANR	1125015	PrimaryExpression	0		1124966	1					
ANR	1125016	IfStatement	if ( dst == SLJIT_UNUSED )		1124966	5					
ANR	1125017	Condition	dst == SLJIT_UNUSED	490:5:15296:15314	1124966	0	True				
ANR	1125018	EqualityExpression	dst == SLJIT_UNUSED		1124966	0		==			
ANR	1125019	Identifier	dst		1124966	0					
ANR	1125020	Identifier	SLJIT_UNUSED		1124966	1					
ANR	1125021	ExpressionStatement	dst = TMP_REG1	491:2:15319:15333	1124966	1	True				
ANR	1125022	AssignmentExpression	dst = TMP_REG1		1124966	0		=			
ANR	1125023	Identifier	dst		1124966	0					
ANR	1125024	Identifier	TMP_REG1		1124966	1					
ANR	1125025	IfStatement	if ( FAST_IS_REG ( dst ) )		1124966	6					
ANR	1125026	Condition	FAST_IS_REG ( dst )	493:5:15341:15356	1124966	0	True				
ANR	1125027	CallExpression	FAST_IS_REG ( dst )		1124966	0					
ANR	1125028	Callee	FAST_IS_REG		1124966	0					
ANR	1125029	Identifier	FAST_IS_REG		1124966	0					
ANR	1125030	ArgumentList	dst		1124966	1					
ANR	1125031	Argument	dst		1124966	0					
ANR	1125032	Identifier	dst		1124966	0					
ANR	1125033	CompoundStatement		14:23:282:282	1124966	1					
ANR	1125034	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"	495:2:15401:15446	1124966	0	True				
ANR	1125035	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"		1124966	0		=			
ANR	1125036	Identifier	inst		1124966	0					
ANR	1125037	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"		1124966	1					
ANR	1125038	CastTarget	sljit_ub *		1124966	0					
ANR	1125039	CallExpression	"ensure_buf ( compiler , 1 + 1 )"		1124966	1					
ANR	1125040	Callee	ensure_buf		1124966	0					
ANR	1125041	Identifier	ensure_buf		1124966	0					
ANR	1125042	ArgumentList	compiler		1124966	1					
ANR	1125043	Argument	compiler		1124966	0					
ANR	1125044	Identifier	compiler		1124966	0					
ANR	1125045	Argument	1 + 1		1124966	1					
ANR	1125046	AdditiveExpression	1 + 1		1124966	0		+			
ANR	1125047	PrimaryExpression	1		1124966	0					
ANR	1125048	PrimaryExpression	1		1124966	1					
ANR	1125049	ExpressionStatement	FAIL_IF ( ! inst )	496:2:15450:15464	1124966	1	True				
ANR	1125050	CallExpression	FAIL_IF ( ! inst )		1124966	0					
ANR	1125051	Callee	FAIL_IF		1124966	0					
ANR	1125052	Identifier	FAIL_IF		1124966	0					
ANR	1125053	ArgumentList	! inst		1124966	1					
ANR	1125054	Argument	! inst		1124966	0					
ANR	1125055	UnaryOperationExpression	! inst		1124966	0					
ANR	1125056	UnaryOperator	!		1124966	0					
ANR	1125057	Identifier	inst		1124966	1					
ANR	1125058	ExpressionStatement	INC_SIZE ( 1 )	498:2:15469:15480	1124966	2	True				
ANR	1125059	CallExpression	INC_SIZE ( 1 )		1124966	0					
ANR	1125060	Callee	INC_SIZE		1124966	0					
ANR	1125061	Identifier	INC_SIZE		1124966	0					
ANR	1125062	ArgumentList	1		1124966	1					
ANR	1125063	Argument	1		1124966	0					
ANR	1125064	PrimaryExpression	1		1124966	0					
ANR	1125065	ExpressionStatement	POP_REG ( reg_map [ dst ] )	499:2:15484:15505	1124966	3	True				
ANR	1125066	CallExpression	POP_REG ( reg_map [ dst ] )		1124966	0					
ANR	1125067	Callee	POP_REG		1124966	0					
ANR	1125068	Identifier	POP_REG		1124966	0					
ANR	1125069	ArgumentList	reg_map [ dst ]		1124966	1					
ANR	1125070	Argument	reg_map [ dst ]		1124966	0					
ANR	1125071	ArrayIndexing	reg_map [ dst ]		1124966	0					
ANR	1125072	Identifier	reg_map		1124966	0					
ANR	1125073	Identifier	dst		1124966	1					
ANR	1125074	ReturnStatement	return SLJIT_SUCCESS ;	500:2:15509:15529	1124966	4	True				
ANR	1125075	Identifier	SLJIT_SUCCESS		1124966	0					
ANR	1125076	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , dst , dstw )"	504:1:15551:15608	1124966	7	True				
ANR	1125077	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , dst , dstw )"		1124966	0		=			
ANR	1125078	Identifier	inst		1124966	0					
ANR	1125079	CallExpression	"emit_x86_instruction ( compiler , 1 , 0 , 0 , dst , dstw )"		1124966	1					
ANR	1125080	Callee	emit_x86_instruction		1124966	0					
ANR	1125081	Identifier	emit_x86_instruction		1124966	0					
ANR	1125082	ArgumentList	compiler		1124966	1					
ANR	1125083	Argument	compiler		1124966	0					
ANR	1125084	Identifier	compiler		1124966	0					
ANR	1125085	Argument	1		1124966	1					
ANR	1125086	PrimaryExpression	1		1124966	0					
ANR	1125087	Argument	0		1124966	2					
ANR	1125088	PrimaryExpression	0		1124966	0					
ANR	1125089	Argument	0		1124966	3					
ANR	1125090	PrimaryExpression	0		1124966	0					
ANR	1125091	Argument	dst		1124966	4					
ANR	1125092	Identifier	dst		1124966	0					
ANR	1125093	Argument	dstw		1124966	5					
ANR	1125094	Identifier	dstw		1124966	0					
ANR	1125095	ExpressionStatement	FAIL_IF ( ! inst )	505:1:15611:15625	1124966	8	True				
ANR	1125096	CallExpression	FAIL_IF ( ! inst )		1124966	0					
ANR	1125097	Callee	FAIL_IF		1124966	0					
ANR	1125098	Identifier	FAIL_IF		1124966	0					
ANR	1125099	ArgumentList	! inst		1124966	1					
ANR	1125100	Argument	! inst		1124966	0					
ANR	1125101	UnaryOperationExpression	! inst		1124966	0					
ANR	1125102	UnaryOperator	!		1124966	0					
ANR	1125103	Identifier	inst		1124966	1					
ANR	1125104	ExpressionStatement	* inst ++ = POP_rm	506:1:15628:15644	1124966	9	True				
ANR	1125105	AssignmentExpression	* inst ++ = POP_rm		1124966	0		=			
ANR	1125106	UnaryOperationExpression	* inst ++		1124966	0					
ANR	1125107	UnaryOperator	*		1124966	0					
ANR	1125108	PostIncDecOperationExpression	inst ++		1124966	1					
ANR	1125109	Identifier	inst		1124966	0					
ANR	1125110	IncDec	++		1124966	1					
ANR	1125111	Identifier	POP_rm		1124966	1					
ANR	1125112	ReturnStatement	return SLJIT_SUCCESS ;	507:1:15647:15667	1124966	10	True				
ANR	1125113	Identifier	SLJIT_SUCCESS		1124966	0					
ANR	1125114	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1124966	1					
ANR	1125115	Identifier	sljit_emit_fast_enter		1124966	2					
ANR	1125116	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw"		1124966	3					
ANR	1125117	Parameter	struct sljit_compiler * compiler	479:56:15014:15044	1124966	0	True				
ANR	1125118	ParameterType	struct sljit_compiler *		1124966	0					
ANR	1125119	Identifier	compiler		1124966	1					
ANR	1125120	Parameter	sljit_si dst	479:89:15047:15058	1124966	1	True				
ANR	1125121	ParameterType	sljit_si		1124966	0					
ANR	1125122	Identifier	dst		1124966	1					
ANR	1125123	Parameter	sljit_sw dstw	479:103:15061:15073	1124966	2	True				
ANR	1125124	ParameterType	sljit_sw		1124966	0					
ANR	1125125	Identifier	dstw		1124966	1					
ANR	1125126	CFGEntryNode	ENTRY		1124966		True				
ANR	1125127	CFGExitNode	EXIT		1124966		True				
ANR	1125128	Symbol	check_sljit_emit_fast_enter		1124966						
ANR	1125129	Symbol	TMP_REG1		1124966						
ANR	1125130	Symbol	emit_x86_instruction		1124966						
ANR	1125131	Symbol	FAST_IS_REG		1124966						
ANR	1125132	Symbol	dst		1124966						
ANR	1125133	Symbol	* inst ++		1124966						
ANR	1125134	Symbol	reg_map		1124966						
ANR	1125135	Symbol	SLJIT_SUCCESS		1124966						
ANR	1125136	Symbol	POP_rm		1124966						
ANR	1125137	Symbol	* reg_map		1124966						
ANR	1125138	Symbol	* dst		1124966						
ANR	1125139	Symbol	SLJIT_UNUSED		1124966						
ANR	1125140	Symbol	inst		1124966						
ANR	1125141	Symbol	ensure_buf		1124966						
ANR	1125142	Symbol	compiler		1124966						
ANR	1125143	Symbol	dstw		1124966						
ANR	1125144	Function	sljit_emit_fast_return	510:0:15672:16571							
ANR	1125145	FunctionDef	"sljit_emit_fast_return (struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw)"		1125144	0					
ANR	1125146	CompoundStatement		511:0:15791:16571	1125144	0					
ANR	1125147	IdentifierDeclStatement	sljit_ub * inst ;	512:1:15794:15808	1125144	0	True				
ANR	1125148	IdentifierDecl	* inst		1125144	0					
ANR	1125149	IdentifierDeclType	sljit_ub *		1125144	0					
ANR	1125150	Identifier	inst		1125144	1					
ANR	1125151	ExpressionStatement	CHECK_ERROR ( )	514:1:15812:15825	1125144	1	True				
ANR	1125152	CallExpression	CHECK_ERROR ( )		1125144	0					
ANR	1125153	Callee	CHECK_ERROR		1125144	0					
ANR	1125154	Identifier	CHECK_ERROR		1125144	0					
ANR	1125155	ArgumentList			1125144	1					
ANR	1125156	ExpressionStatement	"CHECK ( check_sljit_emit_fast_return ( compiler , src , srcw ) )"	515:1:15828:15884	1125144	2	True				
ANR	1125157	CallExpression	"CHECK ( check_sljit_emit_fast_return ( compiler , src , srcw ) )"		1125144	0					
ANR	1125158	Callee	CHECK		1125144	0					
ANR	1125159	Identifier	CHECK		1125144	0					
ANR	1125160	ArgumentList	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1125144	1					
ANR	1125161	Argument	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1125144	0					
ANR	1125162	CallExpression	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1125144	0					
ANR	1125163	Callee	check_sljit_emit_fast_return		1125144	0					
ANR	1125164	Identifier	check_sljit_emit_fast_return		1125144	0					
ANR	1125165	ArgumentList	compiler		1125144	1					
ANR	1125166	Argument	compiler		1125144	0					
ANR	1125167	Identifier	compiler		1125144	0					
ANR	1125168	Argument	src		1125144	1					
ANR	1125169	Identifier	src		1125144	0					
ANR	1125170	Argument	srcw		1125144	2					
ANR	1125171	Identifier	srcw		1125144	0					
ANR	1125172	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	516:1:15887:15917	1125144	3	True				
ANR	1125173	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1125144	0					
ANR	1125174	Callee	ADJUST_LOCAL_OFFSET		1125144	0					
ANR	1125175	Identifier	ADJUST_LOCAL_OFFSET		1125144	0					
ANR	1125176	ArgumentList	src		1125144	1					
ANR	1125177	Argument	src		1125144	0					
ANR	1125178	Identifier	src		1125144	0					
ANR	1125179	Argument	srcw		1125144	1					
ANR	1125180	Identifier	srcw		1125144	0					
ANR	1125181	ExpressionStatement	"CHECK_EXTRA_REGS ( src , srcw , ( void ) 0 )"	518:1:15921:15957	1125144	4	True				
ANR	1125182	CallExpression	"CHECK_EXTRA_REGS ( src , srcw , ( void ) 0 )"		1125144	0					
ANR	1125183	Callee	CHECK_EXTRA_REGS		1125144	0					
ANR	1125184	Identifier	CHECK_EXTRA_REGS		1125144	0					
ANR	1125185	ArgumentList	src		1125144	1					
ANR	1125186	Argument	src		1125144	0					
ANR	1125187	Identifier	src		1125144	0					
ANR	1125188	Argument	srcw		1125144	1					
ANR	1125189	Identifier	srcw		1125144	0					
ANR	1125190	Argument	( void ) 0		1125144	2					
ANR	1125191	CastExpression	( void ) 0		1125144	0					
ANR	1125192	CastTarget	void		1125144	0					
ANR	1125193	PrimaryExpression	0		1125144	1					
ANR	1125194	IfStatement	if ( FAST_IS_REG ( src ) )		1125144	5					
ANR	1125195	Condition	FAST_IS_REG ( src )	520:5:15965:15980	1125144	0	True				
ANR	1125196	CallExpression	FAST_IS_REG ( src )		1125144	0					
ANR	1125197	Callee	FAST_IS_REG		1125144	0					
ANR	1125198	Identifier	FAST_IS_REG		1125144	0					
ANR	1125199	ArgumentList	src		1125144	1					
ANR	1125200	Argument	src		1125144	0					
ANR	1125201	Identifier	src		1125144	0					
ANR	1125202	CompoundStatement		10:23:191:191	1125144	1					
ANR	1125203	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 + 1 )"	521:2:15987:16036	1125144	0	True				
ANR	1125204	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 + 1 )"		1125144	0		=			
ANR	1125205	Identifier	inst		1125144	0					
ANR	1125206	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 1 + 1 )"		1125144	1					
ANR	1125207	CastTarget	sljit_ub *		1125144	0					
ANR	1125208	CallExpression	"ensure_buf ( compiler , 1 + 1 + 1 )"		1125144	1					
ANR	1125209	Callee	ensure_buf		1125144	0					
ANR	1125210	Identifier	ensure_buf		1125144	0					
ANR	1125211	ArgumentList	compiler		1125144	1					
ANR	1125212	Argument	compiler		1125144	0					
ANR	1125213	Identifier	compiler		1125144	0					
ANR	1125214	Argument	1 + 1 + 1		1125144	1					
ANR	1125215	AdditiveExpression	1 + 1 + 1		1125144	0		+			
ANR	1125216	PrimaryExpression	1		1125144	0					
ANR	1125217	AdditiveExpression	1 + 1		1125144	1		+			
ANR	1125218	PrimaryExpression	1		1125144	0					
ANR	1125219	PrimaryExpression	1		1125144	1					
ANR	1125220	ExpressionStatement	FAIL_IF ( ! inst )	522:2:16040:16054	1125144	1	True				
ANR	1125221	CallExpression	FAIL_IF ( ! inst )		1125144	0					
ANR	1125222	Callee	FAIL_IF		1125144	0					
ANR	1125223	Identifier	FAIL_IF		1125144	0					
ANR	1125224	ArgumentList	! inst		1125144	1					
ANR	1125225	Argument	! inst		1125144	0					
ANR	1125226	UnaryOperationExpression	! inst		1125144	0					
ANR	1125227	UnaryOperator	!		1125144	0					
ANR	1125228	Identifier	inst		1125144	1					
ANR	1125229	ExpressionStatement	INC_SIZE ( 1 + 1 )	524:2:16059:16074	1125144	2	True				
ANR	1125230	CallExpression	INC_SIZE ( 1 + 1 )		1125144	0					
ANR	1125231	Callee	INC_SIZE		1125144	0					
ANR	1125232	Identifier	INC_SIZE		1125144	0					
ANR	1125233	ArgumentList	1 + 1		1125144	1					
ANR	1125234	Argument	1 + 1		1125144	0					
ANR	1125235	AdditiveExpression	1 + 1		1125144	0		+			
ANR	1125236	PrimaryExpression	1		1125144	0					
ANR	1125237	PrimaryExpression	1		1125144	1					
ANR	1125238	ExpressionStatement	PUSH_REG ( reg_map [ src ] )	525:2:16078:16100	1125144	3	True				
ANR	1125239	CallExpression	PUSH_REG ( reg_map [ src ] )		1125144	0					
ANR	1125240	Callee	PUSH_REG		1125144	0					
ANR	1125241	Identifier	PUSH_REG		1125144	0					
ANR	1125242	ArgumentList	reg_map [ src ]		1125144	1					
ANR	1125243	Argument	reg_map [ src ]		1125144	0					
ANR	1125244	ArrayIndexing	reg_map [ src ]		1125144	0					
ANR	1125245	Identifier	reg_map		1125144	0					
ANR	1125246	Identifier	src		1125144	1					
ANR	1125247	ElseStatement	else		1125144	0					
ANR	1125248	IfStatement	if ( src & SLJIT_MEM )		1125144	0					
ANR	1125249	Condition	src & SLJIT_MEM	527:10:16115:16129	1125144	0	True				
ANR	1125250	BitAndExpression	src & SLJIT_MEM		1125144	0		&			
ANR	1125251	Identifier	src		1125144	0					
ANR	1125252	Identifier	SLJIT_MEM		1125144	1					
ANR	1125253	CompoundStatement		17:27:340:340	1125144	1					
ANR	1125254	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , src , srcw )"	528:2:16136:16193	1125144	0	True				
ANR	1125255	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , src , srcw )"		1125144	0		=			
ANR	1125256	Identifier	inst		1125144	0					
ANR	1125257	CallExpression	"emit_x86_instruction ( compiler , 1 , 0 , 0 , src , srcw )"		1125144	1					
ANR	1125258	Callee	emit_x86_instruction		1125144	0					
ANR	1125259	Identifier	emit_x86_instruction		1125144	0					
ANR	1125260	ArgumentList	compiler		1125144	1					
ANR	1125261	Argument	compiler		1125144	0					
ANR	1125262	Identifier	compiler		1125144	0					
ANR	1125263	Argument	1		1125144	1					
ANR	1125264	PrimaryExpression	1		1125144	0					
ANR	1125265	Argument	0		1125144	2					
ANR	1125266	PrimaryExpression	0		1125144	0					
ANR	1125267	Argument	0		1125144	3					
ANR	1125268	PrimaryExpression	0		1125144	0					
ANR	1125269	Argument	src		1125144	4					
ANR	1125270	Identifier	src		1125144	0					
ANR	1125271	Argument	srcw		1125144	5					
ANR	1125272	Identifier	srcw		1125144	0					
ANR	1125273	ExpressionStatement	FAIL_IF ( ! inst )	529:2:16197:16211	1125144	1	True				
ANR	1125274	CallExpression	FAIL_IF ( ! inst )		1125144	0					
ANR	1125275	Callee	FAIL_IF		1125144	0					
ANR	1125276	Identifier	FAIL_IF		1125144	0					
ANR	1125277	ArgumentList	! inst		1125144	1					
ANR	1125278	Argument	! inst		1125144	0					
ANR	1125279	UnaryOperationExpression	! inst		1125144	0					
ANR	1125280	UnaryOperator	!		1125144	0					
ANR	1125281	Identifier	inst		1125144	1					
ANR	1125282	ExpressionStatement	* inst ++ = GROUP_FF	530:2:16215:16233	1125144	2	True				
ANR	1125283	AssignmentExpression	* inst ++ = GROUP_FF		1125144	0		=			
ANR	1125284	UnaryOperationExpression	* inst ++		1125144	0					
ANR	1125285	UnaryOperator	*		1125144	0					
ANR	1125286	PostIncDecOperationExpression	inst ++		1125144	1					
ANR	1125287	Identifier	inst		1125144	0					
ANR	1125288	IncDec	++		1125144	1					
ANR	1125289	Identifier	GROUP_FF		1125144	1					
ANR	1125290	ExpressionStatement	* inst |= PUSH_rm	531:2:16237:16253	1125144	3	True				
ANR	1125291	AssignmentExpression	* inst |= PUSH_rm		1125144	0		|=			
ANR	1125292	UnaryOperationExpression	* inst		1125144	0					
ANR	1125293	UnaryOperator	*		1125144	0					
ANR	1125294	Identifier	inst		1125144	1					
ANR	1125295	Identifier	PUSH_rm		1125144	1					
ANR	1125296	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"	533:2:16258:16303	1125144	4	True				
ANR	1125297	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"		1125144	0		=			
ANR	1125298	Identifier	inst		1125144	0					
ANR	1125299	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"		1125144	1					
ANR	1125300	CastTarget	sljit_ub *		1125144	0					
ANR	1125301	CallExpression	"ensure_buf ( compiler , 1 + 1 )"		1125144	1					
ANR	1125302	Callee	ensure_buf		1125144	0					
ANR	1125303	Identifier	ensure_buf		1125144	0					
ANR	1125304	ArgumentList	compiler		1125144	1					
ANR	1125305	Argument	compiler		1125144	0					
ANR	1125306	Identifier	compiler		1125144	0					
ANR	1125307	Argument	1 + 1		1125144	1					
ANR	1125308	AdditiveExpression	1 + 1		1125144	0		+			
ANR	1125309	PrimaryExpression	1		1125144	0					
ANR	1125310	PrimaryExpression	1		1125144	1					
ANR	1125311	ExpressionStatement	FAIL_IF ( ! inst )	534:2:16307:16321	1125144	5	True				
ANR	1125312	CallExpression	FAIL_IF ( ! inst )		1125144	0					
ANR	1125313	Callee	FAIL_IF		1125144	0					
ANR	1125314	Identifier	FAIL_IF		1125144	0					
ANR	1125315	ArgumentList	! inst		1125144	1					
ANR	1125316	Argument	! inst		1125144	0					
ANR	1125317	UnaryOperationExpression	! inst		1125144	0					
ANR	1125318	UnaryOperator	!		1125144	0					
ANR	1125319	Identifier	inst		1125144	1					
ANR	1125320	ExpressionStatement	INC_SIZE ( 1 )	535:2:16325:16336	1125144	6	True				
ANR	1125321	CallExpression	INC_SIZE ( 1 )		1125144	0					
ANR	1125322	Callee	INC_SIZE		1125144	0					
ANR	1125323	Identifier	INC_SIZE		1125144	0					
ANR	1125324	ArgumentList	1		1125144	1					
ANR	1125325	Argument	1		1125144	0					
ANR	1125326	PrimaryExpression	1		1125144	0					
ANR	1125327	ElseStatement	else		1125144	0					
ANR	1125328	CompoundStatement		27:6:555:555	1125144	0					
ANR	1125329	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 5 + 1 )"	539:2:16370:16419	1125144	0	True				
ANR	1125330	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 5 + 1 )"		1125144	0		=			
ANR	1125331	Identifier	inst		1125144	0					
ANR	1125332	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 5 + 1 )"		1125144	1					
ANR	1125333	CastTarget	sljit_ub *		1125144	0					
ANR	1125334	CallExpression	"ensure_buf ( compiler , 1 + 5 + 1 )"		1125144	1					
ANR	1125335	Callee	ensure_buf		1125144	0					
ANR	1125336	Identifier	ensure_buf		1125144	0					
ANR	1125337	ArgumentList	compiler		1125144	1					
ANR	1125338	Argument	compiler		1125144	0					
ANR	1125339	Identifier	compiler		1125144	0					
ANR	1125340	Argument	1 + 5 + 1		1125144	1					
ANR	1125341	AdditiveExpression	1 + 5 + 1		1125144	0		+			
ANR	1125342	PrimaryExpression	1		1125144	0					
ANR	1125343	AdditiveExpression	5 + 1		1125144	1		+			
ANR	1125344	PrimaryExpression	5		1125144	0					
ANR	1125345	PrimaryExpression	1		1125144	1					
ANR	1125346	ExpressionStatement	FAIL_IF ( ! inst )	540:2:16423:16437	1125144	1	True				
ANR	1125347	CallExpression	FAIL_IF ( ! inst )		1125144	0					
ANR	1125348	Callee	FAIL_IF		1125144	0					
ANR	1125349	Identifier	FAIL_IF		1125144	0					
ANR	1125350	ArgumentList	! inst		1125144	1					
ANR	1125351	Argument	! inst		1125144	0					
ANR	1125352	UnaryOperationExpression	! inst		1125144	0					
ANR	1125353	UnaryOperator	!		1125144	0					
ANR	1125354	Identifier	inst		1125144	1					
ANR	1125355	ExpressionStatement	INC_SIZE ( 5 + 1 )	542:2:16442:16457	1125144	2	True				
ANR	1125356	CallExpression	INC_SIZE ( 5 + 1 )		1125144	0					
ANR	1125357	Callee	INC_SIZE		1125144	0					
ANR	1125358	Identifier	INC_SIZE		1125144	0					
ANR	1125359	ArgumentList	5 + 1		1125144	1					
ANR	1125360	Argument	5 + 1		1125144	0					
ANR	1125361	AdditiveExpression	5 + 1		1125144	0		+			
ANR	1125362	PrimaryExpression	5		1125144	0					
ANR	1125363	PrimaryExpression	1		1125144	1					
ANR	1125364	ExpressionStatement	* inst ++ = PUSH_i32	543:2:16461:16479	1125144	3	True				
ANR	1125365	AssignmentExpression	* inst ++ = PUSH_i32		1125144	0		=			
ANR	1125366	UnaryOperationExpression	* inst ++		1125144	0					
ANR	1125367	UnaryOperator	*		1125144	0					
ANR	1125368	PostIncDecOperationExpression	inst ++		1125144	1					
ANR	1125369	Identifier	inst		1125144	0					
ANR	1125370	IncDec	++		1125144	1					
ANR	1125371	Identifier	PUSH_i32		1125144	1					
ANR	1125372	ExpressionStatement	* ( sljit_sw * ) inst = srcw	544:2:16483:16506	1125144	4	True				
ANR	1125373	AssignmentExpression	* ( sljit_sw * ) inst = srcw		1125144	0		=			
ANR	1125374	UnaryOperationExpression	* ( sljit_sw * ) inst		1125144	0					
ANR	1125375	UnaryOperator	*		1125144	0					
ANR	1125376	CastExpression	( sljit_sw * ) inst		1125144	1					
ANR	1125377	CastTarget	sljit_sw *		1125144	0					
ANR	1125378	Identifier	inst		1125144	1					
ANR	1125379	Identifier	srcw		1125144	1					
ANR	1125380	ExpressionStatement	inst += sizeof ( sljit_sw )	545:2:16510:16534	1125144	5	True				
ANR	1125381	AssignmentExpression	inst += sizeof ( sljit_sw )		1125144	0		+=			
ANR	1125382	Identifier	inst		1125144	0					
ANR	1125383	SizeofExpression	sizeof ( sljit_sw )		1125144	1					
ANR	1125384	Sizeof	sizeof		1125144	0					
ANR	1125385	SizeofOperand	sljit_sw		1125144	1					
ANR	1125386	ExpressionStatement	RET ( )	548:1:16541:16546	1125144	6	True				
ANR	1125387	CallExpression	RET ( )		1125144	0					
ANR	1125388	Callee	RET		1125144	0					
ANR	1125389	Identifier	RET		1125144	0					
ANR	1125390	ArgumentList			1125144	1					
ANR	1125391	ReturnStatement	return SLJIT_SUCCESS ;	549:1:16549:16569	1125144	7	True				
ANR	1125392	Identifier	SLJIT_SUCCESS		1125144	0					
ANR	1125393	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1125144	1					
ANR	1125394	Identifier	sljit_emit_fast_return		1125144	2					
ANR	1125395	ParameterList	"struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw"		1125144	3					
ANR	1125396	Parameter	struct sljit_compiler * compiler	510:57:15729:15759	1125144	0	True				
ANR	1125397	ParameterType	struct sljit_compiler *		1125144	0					
ANR	1125398	Identifier	compiler		1125144	1					
ANR	1125399	Parameter	sljit_si src	510:90:15762:15773	1125144	1	True				
ANR	1125400	ParameterType	sljit_si		1125144	0					
ANR	1125401	Identifier	src		1125144	1					
ANR	1125402	Parameter	sljit_sw srcw	510:104:15776:15788	1125144	2	True				
ANR	1125403	ParameterType	sljit_sw		1125144	0					
ANR	1125404	Identifier	srcw		1125144	1					
ANR	1125405	CFGEntryNode	ENTRY		1125144		True				
ANR	1125406	CFGExitNode	EXIT		1125144		True				
ANR	1125407	Symbol	emit_x86_instruction		1125144						
ANR	1125408	Symbol	FAST_IS_REG		1125144						
ANR	1125409	Symbol	* inst		1125144						
ANR	1125410	Symbol	src		1125144						
ANR	1125411	Symbol	srcw		1125144						
ANR	1125412	Symbol	SLJIT_MEM		1125144						
ANR	1125413	Symbol	* inst ++		1125144						
ANR	1125414	Symbol	reg_map		1125144						
ANR	1125415	Symbol	SLJIT_SUCCESS		1125144						
ANR	1125416	Symbol	* ( sljit_sw * ) inst		1125144						
ANR	1125417	Symbol	* reg_map		1125144						
ANR	1125418	Symbol	* src		1125144						
ANR	1125419	Symbol	PUSH_rm		1125144						
ANR	1125420	Symbol	check_sljit_emit_fast_return		1125144						
ANR	1125421	Symbol	GROUP_FF		1125144						
ANR	1125422	Symbol	PUSH_i32		1125144						
ANR	1125423	Symbol	inst		1125144						
ANR	1125424	Symbol	ensure_buf		1125144						
ANR	1125425	Symbol	compiler		1125144						
