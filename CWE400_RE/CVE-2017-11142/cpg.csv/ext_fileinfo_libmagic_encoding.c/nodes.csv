command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	354510	File	data/converged/CVE-2017-11142_php-src/ext_fileinfo_libmagic_encoding.c								
ANR	354511	DeclStmt									
ANR	354512	Decl							int	"int ( const unsigned char * , size_t , unichar * , size_t * )"	looks_ascii
ANR	354513	DeclStmt									
ANR	354514	Decl							int	"int ( const unsigned char * , size_t , unichar * , size_t * )"	looks_utf8_with_BOM
ANR	354515	DeclStmt									
ANR	354516	Decl							int	"int ( const unsigned char * , size_t , unichar * , size_t * )"	looks_ucs16
ANR	354517	DeclStmt									
ANR	354518	Decl							int	"int ( const unsigned char * , size_t , unichar * , size_t * )"	looks_latin1
ANR	354519	DeclStmt									
ANR	354520	Decl							int	"int ( const unsigned char * , size_t , unichar * , size_t * )"	looks_extended
ANR	354521	DeclStmt									
ANR	354522	Decl							void	"void ( const unsigned char * , size_t , unsigned char * )"	from_ebcdic
ANR	354523	Function	file_encoding	67:10:2723:5029							
ANR	354524	FunctionDef	"file_encoding (struct magic_set * ms , const unsigned char * buf , size_t nbytes , unichar * * ubuf , size_t * ulen , const char * * code , const char * * code_mime , const char * * type)"		354523	0					
ANR	354525	CompoundStatement		69:0:2896:5029	354523	0					
ANR	354526	IdentifierDeclStatement	size_t mlen ;	70:1:2899:2910	354523	0	True				
ANR	354527	IdentifierDecl	mlen		354523	0					
ANR	354528	IdentifierDeclType	size_t		354523	0					
ANR	354529	Identifier	mlen		354523	1					
ANR	354530	IdentifierDeclStatement	"int rv = 1 , ucs_type ;"	71:1:2913:2933	354523	1	True				
ANR	354531	IdentifierDecl	rv = 1		354523	0					
ANR	354532	IdentifierDeclType	int		354523	0					
ANR	354533	Identifier	rv		354523	1					
ANR	354534	AssignmentExpression	rv = 1		354523	2		=			
ANR	354535	Identifier	rv		354523	0					
ANR	354536	PrimaryExpression	1		354523	1					
ANR	354537	IdentifierDecl	ucs_type		354523	1					
ANR	354538	IdentifierDeclType	int		354523	0					
ANR	354539	Identifier	ucs_type		354523	1					
ANR	354540	IdentifierDeclStatement	unsigned char * nbuf = NULL ;	72:1:2936:2962	354523	2	True				
ANR	354541	IdentifierDecl	* nbuf = NULL		354523	0					
ANR	354542	IdentifierDeclType	unsigned char *		354523	0					
ANR	354543	Identifier	nbuf		354523	1					
ANR	354544	AssignmentExpression	* nbuf = NULL		354523	2		=			
ANR	354545	Identifier	NULL		354523	0					
ANR	354546	Identifier	NULL		354523	1					
ANR	354547	ExpressionStatement	"* type = ""text"""	74:1:2966:2980	354523	3	True				
ANR	354548	AssignmentExpression	"* type = ""text"""		354523	0		=			
ANR	354549	UnaryOperationExpression	* type		354523	0					
ANR	354550	UnaryOperator	*		354523	0					
ANR	354551	Identifier	type		354523	1					
ANR	354552	PrimaryExpression	"""text"""		354523	1					
ANR	354553	ExpressionStatement	* ulen = 0	75:1:2983:2992	354523	4	True				
ANR	354554	AssignmentExpression	* ulen = 0		354523	0		=			
ANR	354555	UnaryOperationExpression	* ulen		354523	0					
ANR	354556	UnaryOperator	*		354523	0					
ANR	354557	Identifier	ulen		354523	1					
ANR	354558	PrimaryExpression	0		354523	1					
ANR	354559	ExpressionStatement	"* code = ""unknown"""	76:1:2995:3012	354523	5	True				
ANR	354560	AssignmentExpression	"* code = ""unknown"""		354523	0		=			
ANR	354561	UnaryOperationExpression	* code		354523	0					
ANR	354562	UnaryOperator	*		354523	0					
ANR	354563	Identifier	code		354523	1					
ANR	354564	PrimaryExpression	"""unknown"""		354523	1					
ANR	354565	ExpressionStatement	"* code_mime = ""binary"""	77:1:3015:3036	354523	6	True				
ANR	354566	AssignmentExpression	"* code_mime = ""binary"""		354523	0		=			
ANR	354567	UnaryOperationExpression	* code_mime		354523	0					
ANR	354568	UnaryOperator	*		354523	0					
ANR	354569	Identifier	code_mime		354523	1					
ANR	354570	PrimaryExpression	"""binary"""		354523	1					
ANR	354571	ExpressionStatement	mlen = ( nbytes + 1 ) * sizeof ( ( * ubuf ) [ 0 ] )	79:1:3040:3080	354523	7	True				
ANR	354572	AssignmentExpression	mlen = ( nbytes + 1 ) * sizeof ( ( * ubuf ) [ 0 ] )		354523	0		=			
ANR	354573	Identifier	mlen		354523	0					
ANR	354574	MultiplicativeExpression	( nbytes + 1 ) * sizeof ( ( * ubuf ) [ 0 ] )		354523	1		*			
ANR	354575	AdditiveExpression	nbytes + 1		354523	0		+			
ANR	354576	Identifier	nbytes		354523	0					
ANR	354577	PrimaryExpression	1		354523	1					
ANR	354578	SizeofExpression	sizeof ( ( * ubuf ) [ 0 ] )		354523	1					
ANR	354579	Sizeof	sizeof		354523	0					
ANR	354580	ArrayIndexing	( * ubuf ) [ 0 ]		354523	1					
ANR	354581	UnaryOperationExpression	* ubuf		354523	0					
ANR	354582	UnaryOperator	*		354523	0					
ANR	354583	Identifier	ubuf		354523	1					
ANR	354584	PrimaryExpression	0		354523	1					
ANR	354585	Statement	if	80:1:3083:3084	354523	8	True				
ANR	354586	Statement	(	80:4:3086:3086	354523	9	True				
ANR	354587	Statement	(	80:5:3087:3087	354523	10	True				
ANR	354588	Statement	*	80:6:3088:3088	354523	11	True				
ANR	354589	Statement	ubuf	80:7:3089:3092	354523	12	True				
ANR	354590	Statement	=	80:12:3094:3094	354523	13	True				
ANR	354591	Statement	CAST	80:14:3096:3099	354523	14	True				
ANR	354592	Statement	(	80:18:3100:3100	354523	15	True				
ANR	354593	Statement	unichar	80:19:3101:3107	354523	16	True				
ANR	354594	Statement	*	80:27:3109:3109	354523	17	True				
ANR	354595	Statement	","	80:28:3110:3110	354523	18	True				
ANR	354596	Statement	calloc	80:30:3112:3117	354523	19	True				
ANR	354597	Statement	(	80:36:3118:3118	354523	20	True				
ANR	354598	Statement	(	80:37:3119:3119	354523	21	True				
ANR	354599	Statement	size_t	80:38:3120:3125	354523	22	True				
ANR	354600	Statement	)	80:44:3126:3126	354523	23	True				
ANR	354601	Statement	1	80:45:3127:3127	354523	24	True				
ANR	354602	Statement	","	80:46:3128:3128	354523	25	True				
ANR	354603	Statement	mlen	80:48:3130:3133	354523	26	True				
ANR	354604	Statement	)	80:52:3134:3134	354523	27	True				
ANR	354605	Statement	)	80:53:3135:3135	354523	28	True				
ANR	354606	Statement	)	80:54:3136:3136	354523	29	True				
ANR	354607	Statement	==	80:56:3138:3139	354523	30	True				
ANR	354608	Statement	NULL	80:59:3141:3144	354523	31	True				
ANR	354609	Statement	)	80:63:3145:3145	354523	32	True				
ANR	354610	CompoundStatement		12:65:250:250	354523	33					
ANR	354611	ExpressionStatement	"file_oomem ( ms , mlen )"	81:2:3151:3171	354523	0	True				
ANR	354612	CallExpression	"file_oomem ( ms , mlen )"		354523	0					
ANR	354613	Callee	file_oomem		354523	0					
ANR	354614	Identifier	file_oomem		354523	0					
ANR	354615	ArgumentList	ms		354523	1					
ANR	354616	Argument	ms		354523	0					
ANR	354617	Identifier	ms		354523	0					
ANR	354618	Argument	mlen		354523	1					
ANR	354619	Identifier	mlen		354523	0					
ANR	354620	GotoStatement	goto done ;	82:2:3175:3184	354523	1	True				
ANR	354621	Identifier	done		354523	0					
ANR	354622	ExpressionStatement	mlen = ( nbytes + 1 ) * sizeof ( nbuf [ 0 ] )	84:1:3190:3227	354523	34	True				
ANR	354623	AssignmentExpression	mlen = ( nbytes + 1 ) * sizeof ( nbuf [ 0 ] )		354523	0		=			
ANR	354624	Identifier	mlen		354523	0					
ANR	354625	MultiplicativeExpression	( nbytes + 1 ) * sizeof ( nbuf [ 0 ] )		354523	1		*			
ANR	354626	AdditiveExpression	nbytes + 1		354523	0		+			
ANR	354627	Identifier	nbytes		354523	0					
ANR	354628	PrimaryExpression	1		354523	1					
ANR	354629	SizeofExpression	sizeof ( nbuf [ 0 ] )		354523	1					
ANR	354630	Sizeof	sizeof		354523	0					
ANR	354631	ArrayIndexing	nbuf [ 0 ]		354523	1					
ANR	354632	Identifier	nbuf		354523	0					
ANR	354633	PrimaryExpression	0		354523	1					
ANR	354634	Statement	if	85:1:3230:3231	354523	35	True				
ANR	354635	Statement	(	85:4:3233:3233	354523	36	True				
ANR	354636	Statement	(	85:5:3234:3234	354523	37	True				
ANR	354637	Statement	nbuf	85:6:3235:3238	354523	38	True				
ANR	354638	Statement	=	85:11:3240:3240	354523	39	True				
ANR	354639	Statement	CAST	85:13:3242:3245	354523	40	True				
ANR	354640	Statement	(	85:17:3246:3246	354523	41	True				
ANR	354641	Statement	unsigned	85:18:3247:3254	354523	42	True				
ANR	354642	Statement	char	85:27:3256:3259	354523	43	True				
ANR	354643	Statement	*	85:32:3261:3261	354523	44	True				
ANR	354644	Statement	","	85:33:3262:3262	354523	45	True				
ANR	354645	Statement	calloc	85:35:3264:3269	354523	46	True				
ANR	354646	Statement	(	85:41:3270:3270	354523	47	True				
ANR	354647	Statement	(	85:42:3271:3271	354523	48	True				
ANR	354648	Statement	size_t	85:43:3272:3277	354523	49	True				
ANR	354649	Statement	)	85:49:3278:3278	354523	50	True				
ANR	354650	Statement	1	85:50:3279:3279	354523	51	True				
ANR	354651	Statement	","	85:51:3280:3280	354523	52	True				
ANR	354652	Statement	mlen	85:53:3282:3285	354523	53	True				
ANR	354653	Statement	)	85:57:3286:3286	354523	54	True				
ANR	354654	Statement	)	85:58:3287:3287	354523	55	True				
ANR	354655	Statement	)	85:59:3288:3288	354523	56	True				
ANR	354656	Statement	==	85:61:3290:3291	354523	57	True				
ANR	354657	Statement	NULL	85:64:3293:3296	354523	58	True				
ANR	354658	Statement	)	85:68:3297:3297	354523	59	True				
ANR	354659	CompoundStatement		17:70:402:402	354523	60					
ANR	354660	ExpressionStatement	"file_oomem ( ms , mlen )"	86:2:3303:3323	354523	0	True				
ANR	354661	CallExpression	"file_oomem ( ms , mlen )"		354523	0					
ANR	354662	Callee	file_oomem		354523	0					
ANR	354663	Identifier	file_oomem		354523	0					
ANR	354664	ArgumentList	ms		354523	1					
ANR	354665	Argument	ms		354523	0					
ANR	354666	Identifier	ms		354523	0					
ANR	354667	Argument	mlen		354523	1					
ANR	354668	Identifier	mlen		354523	0					
ANR	354669	GotoStatement	goto done ;	87:2:3327:3336	354523	1	True				
ANR	354670	Identifier	done		354523	0					
ANR	354671	IfStatement	"if ( looks_ascii ( buf , nbytes , * ubuf , ulen ) )"		354523	61					
ANR	354672	Condition	"looks_ascii ( buf , nbytes , * ubuf , ulen )"	90:5:3347:3383	354523	0	True				
ANR	354673	CallExpression	"looks_ascii ( buf , nbytes , * ubuf , ulen )"		354523	0					
ANR	354674	Callee	looks_ascii		354523	0					
ANR	354675	Identifier	looks_ascii		354523	0					
ANR	354676	ArgumentList	buf		354523	1					
ANR	354677	Argument	buf		354523	0					
ANR	354678	Identifier	buf		354523	0					
ANR	354679	Argument	nbytes		354523	1					
ANR	354680	Identifier	nbytes		354523	0					
ANR	354681	Argument	* ubuf		354523	2					
ANR	354682	UnaryOperationExpression	* ubuf		354523	0					
ANR	354683	UnaryOperator	*		354523	0					
ANR	354684	Identifier	ubuf		354523	1					
ANR	354685	Argument	ulen		354523	3					
ANR	354686	Identifier	ulen		354523	0					
ANR	354687	CompoundStatement		22:44:489:489	354523	1					
ANR	354688	Statement	DPRINTF	91:2:3390:3396	354523	0	True				
ANR	354689	Statement	(	91:9:3397:3397	354523	1	True				
ANR	354690	Statement	(	91:10:3398:3398	354523	2	True				
ANR	354691	Statement	"""ascii %"""	91:11:3399:3407	354523	3	True				
ANR	354692	Statement	SIZE_T_FORMAT	91:21:3409:3421	354523	4	True				
ANR	354693	Statement	"""u\\n"""	91:35:3423:3427	354523	5	True				
ANR	354694	Statement	","	91:40:3428:3428	354523	6	True				
ANR	354695	Statement	*	91:42:3430:3430	354523	7	True				
ANR	354696	Statement	ulen	91:43:3431:3434	354523	8	True				
ANR	354697	Statement	)	91:47:3435:3435	354523	9	True				
ANR	354698	Statement	)	91:48:3436:3436	354523	10	True				
ANR	354699	ExpressionStatement		91:49:3437:3437	354523	11	True				
ANR	354700	ExpressionStatement	"* code = ""ASCII"""	92:2:3441:3456	354523	12	True				
ANR	354701	AssignmentExpression	"* code = ""ASCII"""		354523	0		=			
ANR	354702	UnaryOperationExpression	* code		354523	0					
ANR	354703	UnaryOperator	*		354523	0					
ANR	354704	Identifier	code		354523	1					
ANR	354705	PrimaryExpression	"""ASCII"""		354523	1					
ANR	354706	ExpressionStatement	"* code_mime = ""us-ascii"""	93:2:3460:3483	354523	13	True				
ANR	354707	AssignmentExpression	"* code_mime = ""us-ascii"""		354523	0		=			
ANR	354708	UnaryOperationExpression	* code_mime		354523	0					
ANR	354709	UnaryOperator	*		354523	0					
ANR	354710	Identifier	code_mime		354523	1					
ANR	354711	PrimaryExpression	"""us-ascii"""		354523	1					
ANR	354712	ElseStatement	else		354523	0					
ANR	354713	IfStatement	"if ( looks_utf8_with_BOM ( buf , nbytes , * ubuf , ulen ) > 0 )"		354523	0					
ANR	354714	Condition	"looks_utf8_with_BOM ( buf , nbytes , * ubuf , ulen ) > 0"	94:12:3497:3545	354523	0	True				
ANR	354715	RelationalExpression	"looks_utf8_with_BOM ( buf , nbytes , * ubuf , ulen ) > 0"		354523	0		>			
ANR	354716	CallExpression	"looks_utf8_with_BOM ( buf , nbytes , * ubuf , ulen )"		354523	0					
ANR	354717	Callee	looks_utf8_with_BOM		354523	0					
ANR	354718	Identifier	looks_utf8_with_BOM		354523	0					
ANR	354719	ArgumentList	buf		354523	1					
ANR	354720	Argument	buf		354523	0					
ANR	354721	Identifier	buf		354523	0					
ANR	354722	Argument	nbytes		354523	1					
ANR	354723	Identifier	nbytes		354523	0					
ANR	354724	Argument	* ubuf		354523	2					
ANR	354725	UnaryOperationExpression	* ubuf		354523	0					
ANR	354726	UnaryOperator	*		354523	0					
ANR	354727	Identifier	ubuf		354523	1					
ANR	354728	Argument	ulen		354523	3					
ANR	354729	Identifier	ulen		354523	0					
ANR	354730	PrimaryExpression	0		354523	1					
ANR	354731	CompoundStatement		26:63:651:651	354523	1					
ANR	354732	Statement	DPRINTF	95:2:3552:3558	354523	0	True				
ANR	354733	Statement	(	95:9:3559:3559	354523	1	True				
ANR	354734	Statement	(	95:10:3560:3560	354523	2	True				
ANR	354735	Statement	"""utf8/bom %"""	95:11:3561:3572	354523	3	True				
ANR	354736	Statement	SIZE_T_FORMAT	95:24:3574:3586	354523	4	True				
ANR	354737	Statement	"""u\\n"""	95:38:3588:3592	354523	5	True				
ANR	354738	Statement	","	95:43:3593:3593	354523	6	True				
ANR	354739	Statement	*	95:45:3595:3595	354523	7	True				
ANR	354740	Statement	ulen	95:46:3596:3599	354523	8	True				
ANR	354741	Statement	)	95:50:3600:3600	354523	9	True				
ANR	354742	Statement	)	95:51:3601:3601	354523	10	True				
ANR	354743	ExpressionStatement		95:52:3602:3602	354523	11	True				
ANR	354744	ExpressionStatement	"* code = ""UTF-8 Unicode (with BOM)"""	96:2:3606:3640	354523	12	True				
ANR	354745	AssignmentExpression	"* code = ""UTF-8 Unicode (with BOM)"""		354523	0		=			
ANR	354746	UnaryOperationExpression	* code		354523	0					
ANR	354747	UnaryOperator	*		354523	0					
ANR	354748	Identifier	code		354523	1					
ANR	354749	PrimaryExpression	"""UTF-8 Unicode (with BOM)"""		354523	1					
ANR	354750	ExpressionStatement	"* code_mime = ""utf-8"""	97:2:3644:3664	354523	13	True				
ANR	354751	AssignmentExpression	"* code_mime = ""utf-8"""		354523	0		=			
ANR	354752	UnaryOperationExpression	* code_mime		354523	0					
ANR	354753	UnaryOperator	*		354523	0					
ANR	354754	Identifier	code_mime		354523	1					
ANR	354755	PrimaryExpression	"""utf-8"""		354523	1					
ANR	354756	ElseStatement	else		354523	0					
ANR	354757	IfStatement	"if ( file_looks_utf8 ( buf , nbytes , * ubuf , ulen ) > 1 )"		354523	0					
ANR	354758	Condition	"file_looks_utf8 ( buf , nbytes , * ubuf , ulen ) > 1"	98:12:3678:3722	354523	0	True				
ANR	354759	RelationalExpression	"file_looks_utf8 ( buf , nbytes , * ubuf , ulen ) > 1"		354523	0		>			
ANR	354760	CallExpression	"file_looks_utf8 ( buf , nbytes , * ubuf , ulen )"		354523	0					
ANR	354761	Callee	file_looks_utf8		354523	0					
ANR	354762	Identifier	file_looks_utf8		354523	0					
ANR	354763	ArgumentList	buf		354523	1					
ANR	354764	Argument	buf		354523	0					
ANR	354765	Identifier	buf		354523	0					
ANR	354766	Argument	nbytes		354523	1					
ANR	354767	Identifier	nbytes		354523	0					
ANR	354768	Argument	* ubuf		354523	2					
ANR	354769	UnaryOperationExpression	* ubuf		354523	0					
ANR	354770	UnaryOperator	*		354523	0					
ANR	354771	Identifier	ubuf		354523	1					
ANR	354772	Argument	ulen		354523	3					
ANR	354773	Identifier	ulen		354523	0					
ANR	354774	PrimaryExpression	1		354523	1					
ANR	354775	CompoundStatement		30:59:828:828	354523	1					
ANR	354776	Statement	DPRINTF	99:2:3729:3735	354523	0	True				
ANR	354777	Statement	(	99:9:3736:3736	354523	1	True				
ANR	354778	Statement	(	99:10:3737:3737	354523	2	True				
ANR	354779	Statement	"""utf8 %"""	99:11:3738:3745	354523	3	True				
ANR	354780	Statement	SIZE_T_FORMAT	99:20:3747:3759	354523	4	True				
ANR	354781	Statement	"""u\\n"""	99:34:3761:3765	354523	5	True				
ANR	354782	Statement	","	99:39:3766:3766	354523	6	True				
ANR	354783	Statement	*	99:41:3768:3768	354523	7	True				
ANR	354784	Statement	ulen	99:42:3769:3772	354523	8	True				
ANR	354785	Statement	)	99:46:3773:3773	354523	9	True				
ANR	354786	Statement	)	99:47:3774:3774	354523	10	True				
ANR	354787	ExpressionStatement		99:48:3775:3775	354523	11	True				
ANR	354788	ExpressionStatement	"* code = ""UTF-8 Unicode (with BOM)"""	100:2:3779:3813	354523	12	True				
ANR	354789	AssignmentExpression	"* code = ""UTF-8 Unicode (with BOM)"""		354523	0		=			
ANR	354790	UnaryOperationExpression	* code		354523	0					
ANR	354791	UnaryOperator	*		354523	0					
ANR	354792	Identifier	code		354523	1					
ANR	354793	PrimaryExpression	"""UTF-8 Unicode (with BOM)"""		354523	1					
ANR	354794	ExpressionStatement	"* code = ""UTF-8 Unicode"""	101:2:3817:3840	354523	13	True				
ANR	354795	AssignmentExpression	"* code = ""UTF-8 Unicode"""		354523	0		=			
ANR	354796	UnaryOperationExpression	* code		354523	0					
ANR	354797	UnaryOperator	*		354523	0					
ANR	354798	Identifier	code		354523	1					
ANR	354799	PrimaryExpression	"""UTF-8 Unicode"""		354523	1					
ANR	354800	ExpressionStatement	"* code_mime = ""utf-8"""	102:2:3844:3864	354523	14	True				
ANR	354801	AssignmentExpression	"* code_mime = ""utf-8"""		354523	0		=			
ANR	354802	UnaryOperationExpression	* code_mime		354523	0					
ANR	354803	UnaryOperator	*		354523	0					
ANR	354804	Identifier	code_mime		354523	1					
ANR	354805	PrimaryExpression	"""utf-8"""		354523	1					
ANR	354806	ElseStatement	else		354523	0					
ANR	354807	IfStatement	"if ( ( ucs_type = looks_ucs16 ( buf , nbytes , * ubuf , ulen ) ) != 0 )"		354523	0					
ANR	354808	Condition	"( ucs_type = looks_ucs16 ( buf , nbytes , * ubuf , ulen ) ) != 0"	103:12:3878:3932	354523	0	True				
ANR	354809	EqualityExpression	"( ucs_type = looks_ucs16 ( buf , nbytes , * ubuf , ulen ) ) != 0"		354523	0		!=			
ANR	354810	AssignmentExpression	"ucs_type = looks_ucs16 ( buf , nbytes , * ubuf , ulen )"		354523	0		=			
ANR	354811	Identifier	ucs_type		354523	0					
ANR	354812	CallExpression	"looks_ucs16 ( buf , nbytes , * ubuf , ulen )"		354523	1					
ANR	354813	Callee	looks_ucs16		354523	0					
ANR	354814	Identifier	looks_ucs16		354523	0					
ANR	354815	ArgumentList	buf		354523	1					
ANR	354816	Argument	buf		354523	0					
ANR	354817	Identifier	buf		354523	0					
ANR	354818	Argument	nbytes		354523	1					
ANR	354819	Identifier	nbytes		354523	0					
ANR	354820	Argument	* ubuf		354523	2					
ANR	354821	UnaryOperationExpression	* ubuf		354523	0					
ANR	354822	UnaryOperator	*		354523	0					
ANR	354823	Identifier	ubuf		354523	1					
ANR	354824	Argument	ulen		354523	3					
ANR	354825	Identifier	ulen		354523	0					
ANR	354826	PrimaryExpression	0		354523	1					
ANR	354827	CompoundStatement		35:69:1038:1038	354523	1					
ANR	354828	IfStatement	if ( ucs_type == 1 )		354523	0					
ANR	354829	Condition	ucs_type == 1	104:6:3943:3955	354523	0	True				
ANR	354830	EqualityExpression	ucs_type == 1		354523	0		==			
ANR	354831	Identifier	ucs_type		354523	0					
ANR	354832	PrimaryExpression	1		354523	1					
ANR	354833	CompoundStatement		36:21:1061:1061	354523	1					
ANR	354834	ExpressionStatement	"* code = ""Little-endian UTF-16 Unicode"""	105:3:3963:4001	354523	0	True				
ANR	354835	AssignmentExpression	"* code = ""Little-endian UTF-16 Unicode"""		354523	0		=			
ANR	354836	UnaryOperationExpression	* code		354523	0					
ANR	354837	UnaryOperator	*		354523	0					
ANR	354838	Identifier	code		354523	1					
ANR	354839	PrimaryExpression	"""Little-endian UTF-16 Unicode"""		354523	1					
ANR	354840	ExpressionStatement	"* code_mime = ""utf-16le"""	106:3:4006:4029	354523	1	True				
ANR	354841	AssignmentExpression	"* code_mime = ""utf-16le"""		354523	0		=			
ANR	354842	UnaryOperationExpression	* code_mime		354523	0					
ANR	354843	UnaryOperator	*		354523	0					
ANR	354844	Identifier	code_mime		354523	1					
ANR	354845	PrimaryExpression	"""utf-16le"""		354523	1					
ANR	354846	ElseStatement	else		354523	0					
ANR	354847	CompoundStatement		39:9:1143:1143	354523	0					
ANR	354848	ExpressionStatement	"* code = ""Big-endian UTF-16 Unicode"""	108:3:4045:4080	354523	0	True				
ANR	354849	AssignmentExpression	"* code = ""Big-endian UTF-16 Unicode"""		354523	0		=			
ANR	354850	UnaryOperationExpression	* code		354523	0					
ANR	354851	UnaryOperator	*		354523	0					
ANR	354852	Identifier	code		354523	1					
ANR	354853	PrimaryExpression	"""Big-endian UTF-16 Unicode"""		354523	1					
ANR	354854	ExpressionStatement	"* code_mime = ""utf-16be"""	109:3:4085:4108	354523	1	True				
ANR	354855	AssignmentExpression	"* code_mime = ""utf-16be"""		354523	0		=			
ANR	354856	UnaryOperationExpression	* code_mime		354523	0					
ANR	354857	UnaryOperator	*		354523	0					
ANR	354858	Identifier	code_mime		354523	1					
ANR	354859	PrimaryExpression	"""utf-16be"""		354523	1					
ANR	354860	Statement	DPRINTF	111:2:4116:4122	354523	1	True				
ANR	354861	Statement	(	111:9:4123:4123	354523	2	True				
ANR	354862	Statement	(	111:10:4124:4124	354523	3	True				
ANR	354863	Statement	"""ucs16 %"""	111:11:4125:4133	354523	4	True				
ANR	354864	Statement	SIZE_T_FORMAT	111:21:4135:4147	354523	5	True				
ANR	354865	Statement	"""u\\n"""	111:35:4149:4153	354523	6	True				
ANR	354866	Statement	","	111:40:4154:4154	354523	7	True				
ANR	354867	Statement	*	111:42:4156:4156	354523	8	True				
ANR	354868	Statement	ulen	111:43:4157:4160	354523	9	True				
ANR	354869	Statement	)	111:47:4161:4161	354523	10	True				
ANR	354870	Statement	)	111:48:4162:4162	354523	11	True				
ANR	354871	ExpressionStatement		111:49:4163:4163	354523	12	True				
ANR	354872	ElseStatement	else		354523	0					
ANR	354873	IfStatement	"if ( looks_latin1 ( buf , nbytes , * ubuf , ulen ) )"		354523	0					
ANR	354874	Condition	"looks_latin1 ( buf , nbytes , * ubuf , ulen )"	112:12:4177:4214	354523	0	True				
ANR	354875	CallExpression	"looks_latin1 ( buf , nbytes , * ubuf , ulen )"		354523	0					
ANR	354876	Callee	looks_latin1		354523	0					
ANR	354877	Identifier	looks_latin1		354523	0					
ANR	354878	ArgumentList	buf		354523	1					
ANR	354879	Argument	buf		354523	0					
ANR	354880	Identifier	buf		354523	0					
ANR	354881	Argument	nbytes		354523	1					
ANR	354882	Identifier	nbytes		354523	0					
ANR	354883	Argument	* ubuf		354523	2					
ANR	354884	UnaryOperationExpression	* ubuf		354523	0					
ANR	354885	UnaryOperator	*		354523	0					
ANR	354886	Identifier	ubuf		354523	1					
ANR	354887	Argument	ulen		354523	3					
ANR	354888	Identifier	ulen		354523	0					
ANR	354889	CompoundStatement		44:52:1320:1320	354523	1					
ANR	354890	Statement	DPRINTF	113:2:4221:4227	354523	0	True				
ANR	354891	Statement	(	113:9:4228:4228	354523	1	True				
ANR	354892	Statement	(	113:10:4229:4229	354523	2	True				
ANR	354893	Statement	"""latin1 %"""	113:11:4230:4239	354523	3	True				
ANR	354894	Statement	SIZE_T_FORMAT	113:22:4241:4253	354523	4	True				
ANR	354895	Statement	"""u\\n"""	113:36:4255:4259	354523	5	True				
ANR	354896	Statement	","	113:41:4260:4260	354523	6	True				
ANR	354897	Statement	*	113:43:4262:4262	354523	7	True				
ANR	354898	Statement	ulen	113:44:4263:4266	354523	8	True				
ANR	354899	Statement	)	113:48:4267:4267	354523	9	True				
ANR	354900	Statement	)	113:49:4268:4268	354523	10	True				
ANR	354901	ExpressionStatement		113:50:4269:4269	354523	11	True				
ANR	354902	ExpressionStatement	"* code = ""ISO-8859"""	114:2:4273:4291	354523	12	True				
ANR	354903	AssignmentExpression	"* code = ""ISO-8859"""		354523	0		=			
ANR	354904	UnaryOperationExpression	* code		354523	0					
ANR	354905	UnaryOperator	*		354523	0					
ANR	354906	Identifier	code		354523	1					
ANR	354907	PrimaryExpression	"""ISO-8859"""		354523	1					
ANR	354908	ExpressionStatement	"* code_mime = ""iso-8859-1"""	115:2:4295:4320	354523	13	True				
ANR	354909	AssignmentExpression	"* code_mime = ""iso-8859-1"""		354523	0		=			
ANR	354910	UnaryOperationExpression	* code_mime		354523	0					
ANR	354911	UnaryOperator	*		354523	0					
ANR	354912	Identifier	code_mime		354523	1					
ANR	354913	PrimaryExpression	"""iso-8859-1"""		354523	1					
ANR	354914	ElseStatement	else		354523	0					
ANR	354915	IfStatement	"if ( looks_extended ( buf , nbytes , * ubuf , ulen ) )"		354523	0					
ANR	354916	Condition	"looks_extended ( buf , nbytes , * ubuf , ulen )"	116:12:4334:4373	354523	0	True				
ANR	354917	CallExpression	"looks_extended ( buf , nbytes , * ubuf , ulen )"		354523	0					
ANR	354918	Callee	looks_extended		354523	0					
ANR	354919	Identifier	looks_extended		354523	0					
ANR	354920	ArgumentList	buf		354523	1					
ANR	354921	Argument	buf		354523	0					
ANR	354922	Identifier	buf		354523	0					
ANR	354923	Argument	nbytes		354523	1					
ANR	354924	Identifier	nbytes		354523	0					
ANR	354925	Argument	* ubuf		354523	2					
ANR	354926	UnaryOperationExpression	* ubuf		354523	0					
ANR	354927	UnaryOperator	*		354523	0					
ANR	354928	Identifier	ubuf		354523	1					
ANR	354929	Argument	ulen		354523	3					
ANR	354930	Identifier	ulen		354523	0					
ANR	354931	CompoundStatement		48:54:1479:1479	354523	1					
ANR	354932	Statement	DPRINTF	117:2:4380:4386	354523	0	True				
ANR	354933	Statement	(	117:9:4387:4387	354523	1	True				
ANR	354934	Statement	(	117:10:4388:4388	354523	2	True				
ANR	354935	Statement	"""extended %"""	117:11:4389:4400	354523	3	True				
ANR	354936	Statement	SIZE_T_FORMAT	117:24:4402:4414	354523	4	True				
ANR	354937	Statement	"""u\\n"""	117:38:4416:4420	354523	5	True				
ANR	354938	Statement	","	117:43:4421:4421	354523	6	True				
ANR	354939	Statement	*	117:45:4423:4423	354523	7	True				
ANR	354940	Statement	ulen	117:46:4424:4427	354523	8	True				
ANR	354941	Statement	)	117:50:4428:4428	354523	9	True				
ANR	354942	Statement	)	117:51:4429:4429	354523	10	True				
ANR	354943	ExpressionStatement		117:52:4430:4430	354523	11	True				
ANR	354944	ExpressionStatement	"* code = ""Non-ISO extended-ASCII"""	118:2:4434:4466	354523	12	True				
ANR	354945	AssignmentExpression	"* code = ""Non-ISO extended-ASCII"""		354523	0		=			
ANR	354946	UnaryOperationExpression	* code		354523	0					
ANR	354947	UnaryOperator	*		354523	0					
ANR	354948	Identifier	code		354523	1					
ANR	354949	PrimaryExpression	"""Non-ISO extended-ASCII"""		354523	1					
ANR	354950	ExpressionStatement	"* code_mime = ""unknown-8bit"""	119:2:4470:4497	354523	13	True				
ANR	354951	AssignmentExpression	"* code_mime = ""unknown-8bit"""		354523	0		=			
ANR	354952	UnaryOperationExpression	* code_mime		354523	0					
ANR	354953	UnaryOperator	*		354523	0					
ANR	354954	Identifier	code_mime		354523	1					
ANR	354955	PrimaryExpression	"""unknown-8bit"""		354523	1					
ANR	354956	ElseStatement	else		354523	0					
ANR	354957	CompoundStatement		52:8:1610:1610	354523	0					
ANR	354958	ExpressionStatement	"from_ebcdic ( buf , nbytes , nbuf )"	121:2:4511:4541	354523	0	True				
ANR	354959	CallExpression	"from_ebcdic ( buf , nbytes , nbuf )"		354523	0					
ANR	354960	Callee	from_ebcdic		354523	0					
ANR	354961	Identifier	from_ebcdic		354523	0					
ANR	354962	ArgumentList	buf		354523	1					
ANR	354963	Argument	buf		354523	0					
ANR	354964	Identifier	buf		354523	0					
ANR	354965	Argument	nbytes		354523	1					
ANR	354966	Identifier	nbytes		354523	0					
ANR	354967	Argument	nbuf		354523	2					
ANR	354968	Identifier	nbuf		354523	0					
ANR	354969	IfStatement	"if ( looks_ascii ( nbuf , nbytes , * ubuf , ulen ) )"		354523	1					
ANR	354970	Condition	"looks_ascii ( nbuf , nbytes , * ubuf , ulen )"	123:6:4550:4587	354523	0	True				
ANR	354971	CallExpression	"looks_ascii ( nbuf , nbytes , * ubuf , ulen )"		354523	0					
ANR	354972	Callee	looks_ascii		354523	0					
ANR	354973	Identifier	looks_ascii		354523	0					
ANR	354974	ArgumentList	nbuf		354523	1					
ANR	354975	Argument	nbuf		354523	0					
ANR	354976	Identifier	nbuf		354523	0					
ANR	354977	Argument	nbytes		354523	1					
ANR	354978	Identifier	nbytes		354523	0					
ANR	354979	Argument	* ubuf		354523	2					
ANR	354980	UnaryOperationExpression	* ubuf		354523	0					
ANR	354981	UnaryOperator	*		354523	0					
ANR	354982	Identifier	ubuf		354523	1					
ANR	354983	Argument	ulen		354523	3					
ANR	354984	Identifier	ulen		354523	0					
ANR	354985	CompoundStatement		55:46:1693:1693	354523	1					
ANR	354986	Statement	DPRINTF	124:3:4595:4601	354523	0	True				
ANR	354987	Statement	(	124:10:4602:4602	354523	1	True				
ANR	354988	Statement	(	124:11:4603:4603	354523	2	True				
ANR	354989	Statement	"""ebcdic %"""	124:12:4604:4613	354523	3	True				
ANR	354990	Statement	SIZE_T_FORMAT	124:23:4615:4627	354523	4	True				
ANR	354991	Statement	"""u\\n"""	124:37:4629:4633	354523	5	True				
ANR	354992	Statement	","	124:42:4634:4634	354523	6	True				
ANR	354993	Statement	*	124:44:4636:4636	354523	7	True				
ANR	354994	Statement	ulen	124:45:4637:4640	354523	8	True				
ANR	354995	Statement	)	124:49:4641:4641	354523	9	True				
ANR	354996	Statement	)	124:50:4642:4642	354523	10	True				
ANR	354997	ExpressionStatement		124:51:4643:4643	354523	11	True				
ANR	354998	ExpressionStatement	"* code = ""EBCDIC"""	125:3:4648:4664	354523	12	True				
ANR	354999	AssignmentExpression	"* code = ""EBCDIC"""		354523	0		=			
ANR	355000	UnaryOperationExpression	* code		354523	0					
ANR	355001	UnaryOperator	*		354523	0					
ANR	355002	Identifier	code		354523	1					
ANR	355003	PrimaryExpression	"""EBCDIC"""		354523	1					
ANR	355004	ExpressionStatement	"* code_mime = ""ebcdic"""	126:3:4669:4690	354523	13	True				
ANR	355005	AssignmentExpression	"* code_mime = ""ebcdic"""		354523	0		=			
ANR	355006	UnaryOperationExpression	* code_mime		354523	0					
ANR	355007	UnaryOperator	*		354523	0					
ANR	355008	Identifier	code_mime		354523	1					
ANR	355009	PrimaryExpression	"""ebcdic"""		354523	1					
ANR	355010	ElseStatement	else		354523	0					
ANR	355011	IfStatement	"if ( looks_latin1 ( nbuf , nbytes , * ubuf , ulen ) )"		354523	0					
ANR	355012	Condition	"looks_latin1 ( nbuf , nbytes , * ubuf , ulen )"	127:13:4705:4743	354523	0	True				
ANR	355013	CallExpression	"looks_latin1 ( nbuf , nbytes , * ubuf , ulen )"		354523	0					
ANR	355014	Callee	looks_latin1		354523	0					
ANR	355015	Identifier	looks_latin1		354523	0					
ANR	355016	ArgumentList	nbuf		354523	1					
ANR	355017	Argument	nbuf		354523	0					
ANR	355018	Identifier	nbuf		354523	0					
ANR	355019	Argument	nbytes		354523	1					
ANR	355020	Identifier	nbytes		354523	0					
ANR	355021	Argument	* ubuf		354523	2					
ANR	355022	UnaryOperationExpression	* ubuf		354523	0					
ANR	355023	UnaryOperator	*		354523	0					
ANR	355024	Identifier	ubuf		354523	1					
ANR	355025	Argument	ulen		354523	3					
ANR	355026	Identifier	ulen		354523	0					
ANR	355027	CompoundStatement		59:54:1849:1849	354523	1					
ANR	355028	Statement	DPRINTF	128:3:4751:4757	354523	0	True				
ANR	355029	Statement	(	128:10:4758:4758	354523	1	True				
ANR	355030	Statement	(	128:11:4759:4759	354523	2	True				
ANR	355031	Statement	"""ebcdic/international %"""	128:12:4760:4783	354523	3	True				
ANR	355032	Statement	SIZE_T_FORMAT	128:37:4785:4797	354523	4	True				
ANR	355033	Statement	"""u\\n"""	128:51:4799:4803	354523	5	True				
ANR	355034	Statement	","	128:56:4804:4804	354523	6	True				
ANR	355035	Statement	*	129:7:4813:4813	354523	7	True				
ANR	355036	Statement	ulen	129:8:4814:4817	354523	8	True				
ANR	355037	Statement	)	129:12:4818:4818	354523	9	True				
ANR	355038	Statement	)	129:13:4819:4819	354523	10	True				
ANR	355039	ExpressionStatement		129:14:4820:4820	354523	11	True				
ANR	355040	ExpressionStatement	"* code = ""International EBCDIC"""	130:3:4825:4855	354523	12	True				
ANR	355041	AssignmentExpression	"* code = ""International EBCDIC"""		354523	0		=			
ANR	355042	UnaryOperationExpression	* code		354523	0					
ANR	355043	UnaryOperator	*		354523	0					
ANR	355044	Identifier	code		354523	1					
ANR	355045	PrimaryExpression	"""International EBCDIC"""		354523	1					
ANR	355046	ExpressionStatement	"* code_mime = ""ebcdic"""	131:3:4860:4881	354523	13	True				
ANR	355047	AssignmentExpression	"* code_mime = ""ebcdic"""		354523	0		=			
ANR	355048	UnaryOperationExpression	* code_mime		354523	0					
ANR	355049	UnaryOperator	*		354523	0					
ANR	355050	Identifier	code_mime		354523	1					
ANR	355051	PrimaryExpression	"""ebcdic"""		354523	1					
ANR	355052	ElseStatement	else		354523	0					
ANR	355053	CompoundStatement		64:9:1995:1995	354523	0					
ANR	355054	ExpressionStatement	"DPRINTF ( ( ""binary\\n"" ) )"	133:3:4933:4954	354523	0	True				
ANR	355055	CallExpression	"DPRINTF ( ( ""binary\\n"" ) )"		354523	0					
ANR	355056	Callee	DPRINTF		354523	0					
ANR	355057	Identifier	DPRINTF		354523	0					
ANR	355058	ArgumentList	"""binary\\n"""		354523	1					
ANR	355059	Argument	"""binary\\n"""		354523	0					
ANR	355060	PrimaryExpression	"""binary\\n"""		354523	0					
ANR	355061	ExpressionStatement	rv = 0	134:3:4959:4965	354523	1	True				
ANR	355062	AssignmentExpression	rv = 0		354523	0		=			
ANR	355063	Identifier	rv		354523	0					
ANR	355064	PrimaryExpression	0		354523	1					
ANR	355065	ExpressionStatement	"* type = ""binary"""	135:3:4970:4986	354523	2	True				
ANR	355066	AssignmentExpression	"* type = ""binary"""		354523	0		=			
ANR	355067	UnaryOperationExpression	* type		354523	0					
ANR	355068	UnaryOperator	*		354523	0					
ANR	355069	Identifier	type		354523	1					
ANR	355070	PrimaryExpression	"""binary"""		354523	1					
ANR	355071	Label	done :	139:1:4997:5001	354523	62	True				
ANR	355072	Identifier	done		354523	0					
ANR	355073	ExpressionStatement	free ( nbuf )	140:1:5004:5014	354523	63	True				
ANR	355074	CallExpression	free ( nbuf )		354523	0					
ANR	355075	Callee	free		354523	0					
ANR	355076	Identifier	free		354523	0					
ANR	355077	ArgumentList	nbuf		354523	1					
ANR	355078	Argument	nbuf		354523	0					
ANR	355079	Identifier	nbuf		354523	0					
ANR	355080	ReturnStatement	return rv ;	142:1:5018:5027	354523	64	True				
ANR	355081	Identifier	rv		354523	0					
ANR	355082	ReturnType	int		354523	1					
ANR	355083	Identifier	file_encoding		354523	2					
ANR	355084	ParameterList	"struct magic_set * ms , const unsigned char * buf , size_t nbytes , unichar * * ubuf , size_t * ulen , const char * * code , const char * * code_mime , const char * * type"		354523	3					
ANR	355085	Parameter	struct magic_set * ms	68:14:2741:2760	354523	0	True				
ANR	355086	ParameterType	struct magic_set *		354523	0					
ANR	355087	Identifier	ms		354523	1					
ANR	355088	Parameter	const unsigned char * buf	68:36:2763:2786	354523	1	True				
ANR	355089	ParameterType	const unsigned char *		354523	0					
ANR	355090	Identifier	buf		354523	1					
ANR	355091	Parameter	size_t nbytes	68:62:2789:2801	354523	2	True				
ANR	355092	ParameterType	size_t		354523	0					
ANR	355093	Identifier	nbytes		354523	1					
ANR	355094	Parameter	unichar * * ubuf	68:77:2804:2817	354523	3	True				
ANR	355095	ParameterType	unichar * *		354523	0					
ANR	355096	Identifier	ubuf		354523	1					
ANR	355097	Parameter	size_t * ulen	68:93:2820:2831	354523	4	True				
ANR	355098	ParameterType	size_t *		354523	0					
ANR	355099	Identifier	ulen		354523	1					
ANR	355100	Parameter	const char * * code	68:107:2834:2850	354523	5	True				
ANR	355101	ParameterType	const char * *		354523	0					
ANR	355102	Identifier	code		354523	1					
ANR	355103	Parameter	const char * * code_mime	68:126:2853:2874	354523	6	True				
ANR	355104	ParameterType	const char * *		354523	0					
ANR	355105	Identifier	code_mime		354523	1					
ANR	355106	Parameter	const char * * type	68:150:2877:2893	354523	7	True				
ANR	355107	ParameterType	const char * *		354523	0					
ANR	355108	Identifier	type		354523	1					
ANR	355109	CFGEntryNode	ENTRY		354523		True				
ANR	355110	CFGExitNode	EXIT		354523		True				
ANR	355111	Symbol	code		354523						
ANR	355112	Symbol	rv		354523						
ANR	355113	Symbol	code_mime		354523						
ANR	355114	Symbol	type		354523						
ANR	355115	Symbol	* ulen		354523						
ANR	355116	Symbol	* code_mime		354523						
ANR	355117	Symbol	* type		354523						
ANR	355118	Symbol	* * ubuf		354523						
ANR	355119	Symbol	* nbuf		354523						
ANR	355120	Symbol	NULL		354523						
ANR	355121	Symbol	looks_latin1		354523						
ANR	355122	Symbol	ms		354523						
ANR	355123	Symbol	ubuf		354523						
ANR	355124	Symbol	file_looks_utf8		354523						
ANR	355125	Symbol	looks_utf8_with_BOM		354523						
ANR	355126	Symbol	nbytes		354523						
ANR	355127	Symbol	* ubuf		354523						
ANR	355128	Symbol	buf		354523						
ANR	355129	Symbol	ucs_type		354523						
ANR	355130	Symbol	looks_ascii		354523						
ANR	355131	Symbol	ulen		354523						
ANR	355132	Symbol	nbuf		354523						
ANR	355133	Symbol	looks_ucs16		354523						
ANR	355134	Symbol	mlen		354523						
ANR	355135	Symbol	looks_extended		354523						
ANR	355136	Symbol	* code		354523						
ANR	355137	DeclStmt									
ANR	355138	Decl							char	char [ 256 ]	text_chars
ANR	355139	Function	looks_ascii	224:8:9295:9546							
ANR	355140	FunctionDef	"looks_ascii (const unsigned char * buf , size_t nbytes , unichar * ubuf , size_t * ulen)"		355139	0					
ANR	355141	CompoundStatement		227:0:9385:9546	355139	0					
ANR	355142	IdentifierDeclStatement	size_t i ;	228:1:9388:9396	355139	0	True				
ANR	355143	IdentifierDecl	i		355139	0					
ANR	355144	IdentifierDeclType	size_t		355139	0					
ANR	355145	Identifier	i		355139	1					
ANR	355146	ExpressionStatement	* ulen = 0	230:1:9400:9409	355139	1	True				
ANR	355147	AssignmentExpression	* ulen = 0		355139	0		=			
ANR	355148	UnaryOperationExpression	* ulen		355139	0					
ANR	355149	UnaryOperator	*		355139	0					
ANR	355150	Identifier	ulen		355139	1					
ANR	355151	PrimaryExpression	0		355139	1					
ANR	355152	ForStatement	for ( i = 0 ; i < nbytes ; i ++ )		355139	2					
ANR	355153	ForInit	i = 0 ;	232:6:9418:9423	355139	0	True				
ANR	355154	AssignmentExpression	i = 0		355139	0		=			
ANR	355155	Identifier	i		355139	0					
ANR	355156	PrimaryExpression	0		355139	1					
ANR	355157	Condition	i < nbytes	232:13:9425:9434	355139	1	True				
ANR	355158	RelationalExpression	i < nbytes		355139	0		<			
ANR	355159	Identifier	i		355139	0					
ANR	355160	Identifier	nbytes		355139	1					
ANR	355161	PostIncDecOperationExpression	i ++	232:25:9437:9439	355139	2	True				
ANR	355162	Identifier	i		355139	0					
ANR	355163	IncDec	++		355139	1					
ANR	355164	CompoundStatement		7:2:60:86	355139	3					
ANR	355165	IdentifierDeclStatement	int t = text_chars [ buf [ i ] ] ;	233:2:9446:9472	355139	0	True				
ANR	355166	IdentifierDecl	t = text_chars [ buf [ i ] ]		355139	0					
ANR	355167	IdentifierDeclType	int		355139	0					
ANR	355168	Identifier	t		355139	1					
ANR	355169	AssignmentExpression	t = text_chars [ buf [ i ] ]		355139	2		=			
ANR	355170	Identifier	t		355139	0					
ANR	355171	ArrayIndexing	text_chars [ buf [ i ] ]		355139	1					
ANR	355172	Identifier	text_chars		355139	0					
ANR	355173	ArrayIndexing	buf [ i ]		355139	1					
ANR	355174	Identifier	buf		355139	0					
ANR	355175	Identifier	i		355139	1					
ANR	355176	IfStatement	if ( t != T )		355139	1					
ANR	355177	Condition	t != T	235:6:9481:9486	355139	0	True				
ANR	355178	EqualityExpression	t != T		355139	0		!=			
ANR	355179	Identifier	t		355139	0					
ANR	355180	Identifier	T		355139	1					
ANR	355181	ReturnStatement	return 0 ;	236:3:9492:9500	355139	1	True				
ANR	355182	PrimaryExpression	0		355139	0					
ANR	355183	ExpressionStatement	ubuf [ ( * ulen ) ++ ] = buf [ i ]	238:2:9505:9529	355139	2	True				
ANR	355184	AssignmentExpression	ubuf [ ( * ulen ) ++ ] = buf [ i ]		355139	0		=			
ANR	355185	ArrayIndexing	ubuf [ ( * ulen ) ++ ]		355139	0					
ANR	355186	Identifier	ubuf		355139	0					
ANR	355187	PostIncDecOperationExpression	( * ulen ) ++		355139	1					
ANR	355188	UnaryOperationExpression	* ulen		355139	0					
ANR	355189	UnaryOperator	*		355139	0					
ANR	355190	Identifier	ulen		355139	1					
ANR	355191	IncDec	++		355139	1					
ANR	355192	ArrayIndexing	buf [ i ]		355139	1					
ANR	355193	Identifier	buf		355139	0					
ANR	355194	Identifier	i		355139	1					
ANR	355195	ReturnStatement	return 1 ;	241:1:9536:9544	355139	3	True				
ANR	355196	PrimaryExpression	1		355139	0					
ANR	355197	ReturnType	int		355139	1					
ANR	355198	Identifier	looks_ascii		355139	2					
ANR	355199	ParameterList	"const unsigned char * buf , size_t nbytes , unichar * ubuf , size_t * ulen"		355139	3					
ANR	355200	Parameter	const unsigned char * buf	225:12:9311:9334	355139	0	True				
ANR	355201	ParameterType	const unsigned char *		355139	0					
ANR	355202	Identifier	buf		355139	1					
ANR	355203	Parameter	size_t nbytes	225:38:9337:9349	355139	1	True				
ANR	355204	ParameterType	size_t		355139	0					
ANR	355205	Identifier	nbytes		355139	1					
ANR	355206	Parameter	unichar * ubuf	225:53:9352:9364	355139	2	True				
ANR	355207	ParameterType	unichar *		355139	0					
ANR	355208	Identifier	ubuf		355139	1					
ANR	355209	Parameter	size_t * ulen	226:4:9371:9382	355139	3	True				
ANR	355210	ParameterType	size_t *		355139	0					
ANR	355211	Identifier	ulen		355139	1					
ANR	355212	CFGEntryNode	ENTRY		355139		True				
ANR	355213	CFGExitNode	EXIT		355139		True				
ANR	355214	Symbol	* buf		355139						
ANR	355215	Symbol	* * i		355139						
ANR	355216	Symbol	* text_chars		355139						
ANR	355217	Symbol	* * buf		355139						
ANR	355218	Symbol	ubuf		355139						
ANR	355219	Symbol	i		355139						
ANR	355220	Symbol	text_chars		355139						
ANR	355221	Symbol	nbytes		355139						
ANR	355222	Symbol	* ubuf		355139						
ANR	355223	Symbol	buf		355139						
ANR	355224	Symbol	* ulen		355139						
ANR	355225	Symbol	* i		355139						
ANR	355226	Symbol	t		355139						
ANR	355227	Symbol	T		355139						
ANR	355228	Symbol	ulen		355139						
ANR	355229	Function	looks_latin1	244:8:9557:9815							
ANR	355230	FunctionDef	"looks_latin1 (const unsigned char * buf , size_t nbytes , unichar * ubuf , size_t * ulen)"		355229	0					
ANR	355231	CompoundStatement		246:0:9644:9815	355229	0					
ANR	355232	IdentifierDeclStatement	size_t i ;	247:1:9647:9655	355229	0	True				
ANR	355233	IdentifierDecl	i		355229	0					
ANR	355234	IdentifierDeclType	size_t		355229	0					
ANR	355235	Identifier	i		355229	1					
ANR	355236	ExpressionStatement	* ulen = 0	249:1:9659:9668	355229	1	True				
ANR	355237	AssignmentExpression	* ulen = 0		355229	0		=			
ANR	355238	UnaryOperationExpression	* ulen		355229	0					
ANR	355239	UnaryOperator	*		355229	0					
ANR	355240	Identifier	ulen		355229	1					
ANR	355241	PrimaryExpression	0		355229	1					
ANR	355242	ForStatement	for ( i = 0 ; i < nbytes ; i ++ )		355229	2					
ANR	355243	ForInit	i = 0 ;	251:6:9677:9682	355229	0	True				
ANR	355244	AssignmentExpression	i = 0		355229	0		=			
ANR	355245	Identifier	i		355229	0					
ANR	355246	PrimaryExpression	0		355229	1					
ANR	355247	Condition	i < nbytes	251:13:9684:9693	355229	1	True				
ANR	355248	RelationalExpression	i < nbytes		355229	0		<			
ANR	355249	Identifier	i		355229	0					
ANR	355250	Identifier	nbytes		355229	1					
ANR	355251	PostIncDecOperationExpression	i ++	251:25:9696:9698	355229	2	True				
ANR	355252	Identifier	i		355229	0					
ANR	355253	IncDec	++		355229	1					
ANR	355254	CompoundStatement		7:2:60:86	355229	3					
ANR	355255	IdentifierDeclStatement	int t = text_chars [ buf [ i ] ] ;	252:2:9705:9731	355229	0	True				
ANR	355256	IdentifierDecl	t = text_chars [ buf [ i ] ]		355229	0					
ANR	355257	IdentifierDeclType	int		355229	0					
ANR	355258	Identifier	t		355229	1					
ANR	355259	AssignmentExpression	t = text_chars [ buf [ i ] ]		355229	2		=			
ANR	355260	Identifier	t		355229	0					
ANR	355261	ArrayIndexing	text_chars [ buf [ i ] ]		355229	1					
ANR	355262	Identifier	text_chars		355229	0					
ANR	355263	ArrayIndexing	buf [ i ]		355229	1					
ANR	355264	Identifier	buf		355229	0					
ANR	355265	Identifier	i		355229	1					
ANR	355266	IfStatement	if ( t != T && t != I )		355229	1					
ANR	355267	Condition	t != T && t != I	254:6:9740:9755	355229	0	True				
ANR	355268	AndExpression	t != T && t != I		355229	0		&&			
ANR	355269	EqualityExpression	t != T		355229	0		!=			
ANR	355270	Identifier	t		355229	0					
ANR	355271	Identifier	T		355229	1					
ANR	355272	EqualityExpression	t != I		355229	1		!=			
ANR	355273	Identifier	t		355229	0					
ANR	355274	Identifier	I		355229	1					
ANR	355275	ReturnStatement	return 0 ;	255:3:9761:9769	355229	1	True				
ANR	355276	PrimaryExpression	0		355229	0					
ANR	355277	ExpressionStatement	ubuf [ ( * ulen ) ++ ] = buf [ i ]	257:2:9774:9798	355229	2	True				
ANR	355278	AssignmentExpression	ubuf [ ( * ulen ) ++ ] = buf [ i ]		355229	0		=			
ANR	355279	ArrayIndexing	ubuf [ ( * ulen ) ++ ]		355229	0					
ANR	355280	Identifier	ubuf		355229	0					
ANR	355281	PostIncDecOperationExpression	( * ulen ) ++		355229	1					
ANR	355282	UnaryOperationExpression	* ulen		355229	0					
ANR	355283	UnaryOperator	*		355229	0					
ANR	355284	Identifier	ulen		355229	1					
ANR	355285	IncDec	++		355229	1					
ANR	355286	ArrayIndexing	buf [ i ]		355229	1					
ANR	355287	Identifier	buf		355229	0					
ANR	355288	Identifier	i		355229	1					
ANR	355289	ReturnStatement	return 1 ;	260:1:9805:9813	355229	3	True				
ANR	355290	PrimaryExpression	1		355229	0					
ANR	355291	ReturnType	int		355229	1					
ANR	355292	Identifier	looks_latin1		355229	2					
ANR	355293	ParameterList	"const unsigned char * buf , size_t nbytes , unichar * ubuf , size_t * ulen"		355229	3					
ANR	355294	Parameter	const unsigned char * buf	245:13:9574:9597	355229	0	True				
ANR	355295	ParameterType	const unsigned char *		355229	0					
ANR	355296	Identifier	buf		355229	1					
ANR	355297	Parameter	size_t nbytes	245:39:9600:9612	355229	1	True				
ANR	355298	ParameterType	size_t		355229	0					
ANR	355299	Identifier	nbytes		355229	1					
ANR	355300	Parameter	unichar * ubuf	245:54:9615:9627	355229	2	True				
ANR	355301	ParameterType	unichar *		355229	0					
ANR	355302	Identifier	ubuf		355229	1					
ANR	355303	Parameter	size_t * ulen	245:69:9630:9641	355229	3	True				
ANR	355304	ParameterType	size_t *		355229	0					
ANR	355305	Identifier	ulen		355229	1					
ANR	355306	CFGEntryNode	ENTRY		355229		True				
ANR	355307	CFGExitNode	EXIT		355229		True				
ANR	355308	Symbol	* * i		355229						
ANR	355309	Symbol	* buf		355229						
ANR	355310	Symbol	* text_chars		355229						
ANR	355311	Symbol	* * buf		355229						
ANR	355312	Symbol	ubuf		355229						
ANR	355313	Symbol	i		355229						
ANR	355314	Symbol	I		355229						
ANR	355315	Symbol	text_chars		355229						
ANR	355316	Symbol	nbytes		355229						
ANR	355317	Symbol	* ubuf		355229						
ANR	355318	Symbol	buf		355229						
ANR	355319	Symbol	* ulen		355229						
ANR	355320	Symbol	* i		355229						
ANR	355321	Symbol	t		355229						
ANR	355322	Symbol	T		355229						
ANR	355323	Symbol	ulen		355229						
ANR	355324	Function	looks_extended	263:8:9826:10100							
ANR	355325	FunctionDef	"looks_extended (const unsigned char * buf , size_t nbytes , unichar * ubuf , size_t * ulen)"		355324	0					
ANR	355326	CompoundStatement		266:0:9919:10100	355324	0					
ANR	355327	IdentifierDeclStatement	size_t i ;	267:1:9922:9930	355324	0	True				
ANR	355328	IdentifierDecl	i		355324	0					
ANR	355329	IdentifierDeclType	size_t		355324	0					
ANR	355330	Identifier	i		355324	1					
ANR	355331	ExpressionStatement	* ulen = 0	269:1:9934:9943	355324	1	True				
ANR	355332	AssignmentExpression	* ulen = 0		355324	0		=			
ANR	355333	UnaryOperationExpression	* ulen		355324	0					
ANR	355334	UnaryOperator	*		355324	0					
ANR	355335	Identifier	ulen		355324	1					
ANR	355336	PrimaryExpression	0		355324	1					
ANR	355337	ForStatement	for ( i = 0 ; i < nbytes ; i ++ )		355324	2					
ANR	355338	ForInit	i = 0 ;	271:6:9952:9957	355324	0	True				
ANR	355339	AssignmentExpression	i = 0		355324	0		=			
ANR	355340	Identifier	i		355324	0					
ANR	355341	PrimaryExpression	0		355324	1					
ANR	355342	Condition	i < nbytes	271:13:9959:9968	355324	1	True				
ANR	355343	RelationalExpression	i < nbytes		355324	0		<			
ANR	355344	Identifier	i		355324	0					
ANR	355345	Identifier	nbytes		355324	1					
ANR	355346	PostIncDecOperationExpression	i ++	271:25:9971:9973	355324	2	True				
ANR	355347	Identifier	i		355324	0					
ANR	355348	IncDec	++		355324	1					
ANR	355349	CompoundStatement		7:2:60:86	355324	3					
ANR	355350	IdentifierDeclStatement	int t = text_chars [ buf [ i ] ] ;	272:2:9980:10006	355324	0	True				
ANR	355351	IdentifierDecl	t = text_chars [ buf [ i ] ]		355324	0					
ANR	355352	IdentifierDeclType	int		355324	0					
ANR	355353	Identifier	t		355324	1					
ANR	355354	AssignmentExpression	t = text_chars [ buf [ i ] ]		355324	2		=			
ANR	355355	Identifier	t		355324	0					
ANR	355356	ArrayIndexing	text_chars [ buf [ i ] ]		355324	1					
ANR	355357	Identifier	text_chars		355324	0					
ANR	355358	ArrayIndexing	buf [ i ]		355324	1					
ANR	355359	Identifier	buf		355324	0					
ANR	355360	Identifier	i		355324	1					
ANR	355361	IfStatement	if ( t != T && t != I && t != X )		355324	1					
ANR	355362	Condition	t != T && t != I && t != X	274:6:10015:10040	355324	0	True				
ANR	355363	AndExpression	t != T && t != I && t != X		355324	0		&&			
ANR	355364	EqualityExpression	t != T		355324	0		!=			
ANR	355365	Identifier	t		355324	0					
ANR	355366	Identifier	T		355324	1					
ANR	355367	AndExpression	t != I && t != X		355324	1		&&			
ANR	355368	EqualityExpression	t != I		355324	0		!=			
ANR	355369	Identifier	t		355324	0					
ANR	355370	Identifier	I		355324	1					
ANR	355371	EqualityExpression	t != X		355324	1		!=			
ANR	355372	Identifier	t		355324	0					
ANR	355373	Identifier	X		355324	1					
ANR	355374	ReturnStatement	return 0 ;	275:3:10046:10054	355324	1	True				
ANR	355375	PrimaryExpression	0		355324	0					
ANR	355376	ExpressionStatement	ubuf [ ( * ulen ) ++ ] = buf [ i ]	277:2:10059:10083	355324	2	True				
ANR	355377	AssignmentExpression	ubuf [ ( * ulen ) ++ ] = buf [ i ]		355324	0		=			
ANR	355378	ArrayIndexing	ubuf [ ( * ulen ) ++ ]		355324	0					
ANR	355379	Identifier	ubuf		355324	0					
ANR	355380	PostIncDecOperationExpression	( * ulen ) ++		355324	1					
ANR	355381	UnaryOperationExpression	* ulen		355324	0					
ANR	355382	UnaryOperator	*		355324	0					
ANR	355383	Identifier	ulen		355324	1					
ANR	355384	IncDec	++		355324	1					
ANR	355385	ArrayIndexing	buf [ i ]		355324	1					
ANR	355386	Identifier	buf		355324	0					
ANR	355387	Identifier	i		355324	1					
ANR	355388	ReturnStatement	return 1 ;	280:1:10090:10098	355324	3	True				
ANR	355389	PrimaryExpression	1		355324	0					
ANR	355390	ReturnType	int		355324	1					
ANR	355391	Identifier	looks_extended		355324	2					
ANR	355392	ParameterList	"const unsigned char * buf , size_t nbytes , unichar * ubuf , size_t * ulen"		355324	3					
ANR	355393	Parameter	const unsigned char * buf	264:15:9845:9868	355324	0	True				
ANR	355394	ParameterType	const unsigned char *		355324	0					
ANR	355395	Identifier	buf		355324	1					
ANR	355396	Parameter	size_t nbytes	264:41:9871:9883	355324	1	True				
ANR	355397	ParameterType	size_t		355324	0					
ANR	355398	Identifier	nbytes		355324	1					
ANR	355399	Parameter	unichar * ubuf	264:56:9886:9898	355324	2	True				
ANR	355400	ParameterType	unichar *		355324	0					
ANR	355401	Identifier	ubuf		355324	1					
ANR	355402	Parameter	size_t * ulen	265:4:9905:9916	355324	3	True				
ANR	355403	ParameterType	size_t *		355324	0					
ANR	355404	Identifier	ulen		355324	1					
ANR	355405	CFGEntryNode	ENTRY		355324		True				
ANR	355406	CFGExitNode	EXIT		355324		True				
ANR	355407	Symbol	* * i		355324						
ANR	355408	Symbol	* buf		355324						
ANR	355409	Symbol	* text_chars		355324						
ANR	355410	Symbol	* * buf		355324						
ANR	355411	Symbol	ubuf		355324						
ANR	355412	Symbol	i		355324						
ANR	355413	Symbol	I		355324						
ANR	355414	Symbol	text_chars		355324						
ANR	355415	Symbol	nbytes		355324						
ANR	355416	Symbol	* ubuf		355324						
ANR	355417	Symbol	buf		355324						
ANR	355418	Symbol	* ulen		355324						
ANR	355419	Symbol	* i		355324						
ANR	355420	Symbol	t		355324						
ANR	355421	Symbol	T		355324						
ANR	355422	Symbol	ulen		355324						
ANR	355423	Symbol	X		355324						
ANR	355424	Function	file_looks_utf8	294:10:10449:11872							
ANR	355425	FunctionDef	"file_looks_utf8 (const unsigned char * buf , size_t nbytes , unichar * ubuf , size_t * ulen)"		355424	0					
ANR	355426	CompoundStatement		296:0:10539:11872	355424	0					
ANR	355427	IdentifierDeclStatement	size_t i ;	297:1:10542:10550	355424	0	True				
ANR	355428	IdentifierDecl	i		355424	0					
ANR	355429	IdentifierDeclType	size_t		355424	0					
ANR	355430	Identifier	i		355424	1					
ANR	355431	IdentifierDeclStatement	int n ;	298:1:10553:10558	355424	1	True				
ANR	355432	IdentifierDecl	n		355424	0					
ANR	355433	IdentifierDeclType	int		355424	0					
ANR	355434	Identifier	n		355424	1					
ANR	355435	IdentifierDeclStatement	unichar c ;	299:1:10561:10570	355424	2	True				
ANR	355436	IdentifierDecl	c		355424	0					
ANR	355437	IdentifierDeclType	unichar		355424	0					
ANR	355438	Identifier	c		355424	1					
ANR	355439	IdentifierDeclStatement	"int gotone = 0 , ctrl = 0 ;"	300:1:10573:10597	355424	3	True				
ANR	355440	IdentifierDecl	gotone = 0		355424	0					
ANR	355441	IdentifierDeclType	int		355424	0					
ANR	355442	Identifier	gotone		355424	1					
ANR	355443	AssignmentExpression	gotone = 0		355424	2		=			
ANR	355444	Identifier	gotone		355424	0					
ANR	355445	PrimaryExpression	0		355424	1					
ANR	355446	IdentifierDecl	ctrl = 0		355424	1					
ANR	355447	IdentifierDeclType	int		355424	0					
ANR	355448	Identifier	ctrl		355424	1					
ANR	355449	AssignmentExpression	ctrl = 0		355424	2		=			
ANR	355450	Identifier	ctrl		355424	0					
ANR	355451	PrimaryExpression	0		355424	1					
ANR	355452	IfStatement	if ( ubuf )		355424	4					
ANR	355453	Condition	ubuf	302:5:10605:10608	355424	0	True				
ANR	355454	Identifier	ubuf		355424	0					
ANR	355455	ExpressionStatement	* ulen = 0	303:2:10613:10622	355424	1	True				
ANR	355456	AssignmentExpression	* ulen = 0		355424	0		=			
ANR	355457	UnaryOperationExpression	* ulen		355424	0					
ANR	355458	UnaryOperator	*		355424	0					
ANR	355459	Identifier	ulen		355424	1					
ANR	355460	PrimaryExpression	0		355424	1					
ANR	355461	ForStatement	for ( i = 0 ; i < nbytes ; i ++ )		355424	5					
ANR	355462	ForInit	i = 0 ;	305:6:10631:10636	355424	0	True				
ANR	355463	AssignmentExpression	i = 0		355424	0		=			
ANR	355464	Identifier	i		355424	0					
ANR	355465	PrimaryExpression	0		355424	1					
ANR	355466	Condition	i < nbytes	305:13:10638:10647	355424	1	True				
ANR	355467	RelationalExpression	i < nbytes		355424	0		<			
ANR	355468	Identifier	i		355424	0					
ANR	355469	Identifier	nbytes		355424	1					
ANR	355470	PostIncDecOperationExpression	i ++	305:25:10650:10652	355424	2	True				
ANR	355471	Identifier	i		355424	0					
ANR	355472	IncDec	++		355424	1					
ANR	355473	CompoundStatement		10:30:115:115	355424	3					
ANR	355474	IfStatement	if ( ( buf [ i ] & 0x80 ) == 0 )		355424	0					
ANR	355475	Condition	( buf [ i ] & 0x80 ) == 0	306:6:10663:10682	355424	0	True				
ANR	355476	EqualityExpression	( buf [ i ] & 0x80 ) == 0		355424	0		==			
ANR	355477	BitAndExpression	buf [ i ] & 0x80		355424	0		&			
ANR	355478	ArrayIndexing	buf [ i ]		355424	0					
ANR	355479	Identifier	buf		355424	0					
ANR	355480	Identifier	i		355424	1					
ANR	355481	PrimaryExpression	0x80		355424	1					
ANR	355482	PrimaryExpression	0		355424	1					
ANR	355483	CompoundStatement		11:28:145:145	355424	1					
ANR	355484	IfStatement	if ( text_chars [ buf [ i ] ] != T )		355424	0					
ANR	355485	Condition	text_chars [ buf [ i ] ] != T	312:7:10855:10877	355424	0	True				
ANR	355486	EqualityExpression	text_chars [ buf [ i ] ] != T		355424	0		!=			
ANR	355487	ArrayIndexing	text_chars [ buf [ i ] ]		355424	0					
ANR	355488	Identifier	text_chars		355424	0					
ANR	355489	ArrayIndexing	buf [ i ]		355424	1					
ANR	355490	Identifier	buf		355424	0					
ANR	355491	Identifier	i		355424	1					
ANR	355492	Identifier	T		355424	1					
ANR	355493	ExpressionStatement	ctrl = 1	313:4:10884:10892	355424	1	True				
ANR	355494	AssignmentExpression	ctrl = 1		355424	0		=			
ANR	355495	Identifier	ctrl		355424	0					
ANR	355496	PrimaryExpression	1		355424	1					
ANR	355497	IfStatement	if ( ubuf )		355424	1					
ANR	355498	Condition	ubuf	315:7:10902:10905	355424	0	True				
ANR	355499	Identifier	ubuf		355424	0					
ANR	355500	ExpressionStatement	ubuf [ ( * ulen ) ++ ] = buf [ i ]	316:4:10912:10936	355424	1	True				
ANR	355501	AssignmentExpression	ubuf [ ( * ulen ) ++ ] = buf [ i ]		355424	0		=			
ANR	355502	ArrayIndexing	ubuf [ ( * ulen ) ++ ]		355424	0					
ANR	355503	Identifier	ubuf		355424	0					
ANR	355504	PostIncDecOperationExpression	( * ulen ) ++		355424	1					
ANR	355505	UnaryOperationExpression	* ulen		355424	0					
ANR	355506	UnaryOperator	*		355424	0					
ANR	355507	Identifier	ulen		355424	1					
ANR	355508	IncDec	++		355424	1					
ANR	355509	ArrayIndexing	buf [ i ]		355424	1					
ANR	355510	Identifier	buf		355424	0					
ANR	355511	Identifier	i		355424	1					
ANR	355512	ElseStatement	else		355424	0					
ANR	355513	IfStatement	if ( ( buf [ i ] & 0x40 ) == 0 )		355424	0					
ANR	355514	Condition	( buf [ i ] & 0x40 ) == 0	317:13:10951:10970	355424	0	True				
ANR	355515	EqualityExpression	( buf [ i ] & 0x40 ) == 0		355424	0		==			
ANR	355516	BitAndExpression	buf [ i ] & 0x40		355424	0		&			
ANR	355517	ArrayIndexing	buf [ i ]		355424	0					
ANR	355518	Identifier	buf		355424	0					
ANR	355519	Identifier	i		355424	1					
ANR	355520	PrimaryExpression	0x40		355424	1					
ANR	355521	PrimaryExpression	0		355424	1					
ANR	355522	CompoundStatement		22:35:433:433	355424	1					
ANR	355523	ReturnStatement	return - 1 ;	318:3:11008:11017	355424	0	True				
ANR	355524	UnaryOperationExpression	- 1		355424	0					
ANR	355525	UnaryOperator	-		355424	0					
ANR	355526	PrimaryExpression	1		355424	1					
ANR	355527	ElseStatement	else		355424	0					
ANR	355528	CompoundStatement		25:3:526:539	355424	0					
ANR	355529	IdentifierDeclStatement	int following ;	320:3:11066:11079	355424	0	True				
ANR	355530	IdentifierDecl	following		355424	0					
ANR	355531	IdentifierDeclType	int		355424	0					
ANR	355532	Identifier	following		355424	1					
ANR	355533	IfStatement	if ( ( buf [ i ] & 0x20 ) == 0 )		355424	1					
ANR	355534	Condition	( buf [ i ] & 0x20 ) == 0	322:7:11089:11108	355424	0	True				
ANR	355535	EqualityExpression	( buf [ i ] & 0x20 ) == 0		355424	0		==			
ANR	355536	BitAndExpression	buf [ i ] & 0x20		355424	0		&			
ANR	355537	ArrayIndexing	buf [ i ]		355424	0					
ANR	355538	Identifier	buf		355424	0					
ANR	355539	Identifier	i		355424	1					
ANR	355540	PrimaryExpression	0x20		355424	1					
ANR	355541	PrimaryExpression	0		355424	1					
ANR	355542	CompoundStatement		27:29:571:571	355424	1					
ANR	355543	ExpressionStatement	c = buf [ i ] & 0x1f	323:4:11133:11150	355424	0	True				
ANR	355544	AssignmentExpression	c = buf [ i ] & 0x1f		355424	0		=			
ANR	355545	Identifier	c		355424	0					
ANR	355546	BitAndExpression	buf [ i ] & 0x1f		355424	1		&			
ANR	355547	ArrayIndexing	buf [ i ]		355424	0					
ANR	355548	Identifier	buf		355424	0					
ANR	355549	Identifier	i		355424	1					
ANR	355550	PrimaryExpression	0x1f		355424	1					
ANR	355551	ExpressionStatement	following = 1	324:4:11156:11169	355424	1	True				
ANR	355552	AssignmentExpression	following = 1		355424	0		=			
ANR	355553	Identifier	following		355424	0					
ANR	355554	PrimaryExpression	1		355424	1					
ANR	355555	ElseStatement	else		355424	0					
ANR	355556	IfStatement	if ( ( buf [ i ] & 0x10 ) == 0 )		355424	0					
ANR	355557	Condition	( buf [ i ] & 0x10 ) == 0	325:14:11185:11204	355424	0	True				
ANR	355558	EqualityExpression	( buf [ i ] & 0x10 ) == 0		355424	0		==			
ANR	355559	BitAndExpression	buf [ i ] & 0x10		355424	0		&			
ANR	355560	ArrayIndexing	buf [ i ]		355424	0					
ANR	355561	Identifier	buf		355424	0					
ANR	355562	Identifier	i		355424	1					
ANR	355563	PrimaryExpression	0x10		355424	1					
ANR	355564	PrimaryExpression	0		355424	1					
ANR	355565	CompoundStatement		30:36:667:667	355424	1					
ANR	355566	ExpressionStatement	c = buf [ i ] & 0x0f	326:4:11228:11245	355424	0	True				
ANR	355567	AssignmentExpression	c = buf [ i ] & 0x0f		355424	0		=			
ANR	355568	Identifier	c		355424	0					
ANR	355569	BitAndExpression	buf [ i ] & 0x0f		355424	1		&			
ANR	355570	ArrayIndexing	buf [ i ]		355424	0					
ANR	355571	Identifier	buf		355424	0					
ANR	355572	Identifier	i		355424	1					
ANR	355573	PrimaryExpression	0x0f		355424	1					
ANR	355574	ExpressionStatement	following = 2	327:4:11251:11264	355424	1	True				
ANR	355575	AssignmentExpression	following = 2		355424	0		=			
ANR	355576	Identifier	following		355424	0					
ANR	355577	PrimaryExpression	2		355424	1					
ANR	355578	ElseStatement	else		355424	0					
ANR	355579	IfStatement	if ( ( buf [ i ] & 0x08 ) == 0 )		355424	0					
ANR	355580	Condition	( buf [ i ] & 0x08 ) == 0	328:14:11280:11299	355424	0	True				
ANR	355581	EqualityExpression	( buf [ i ] & 0x08 ) == 0		355424	0		==			
ANR	355582	BitAndExpression	buf [ i ] & 0x08		355424	0		&			
ANR	355583	ArrayIndexing	buf [ i ]		355424	0					
ANR	355584	Identifier	buf		355424	0					
ANR	355585	Identifier	i		355424	1					
ANR	355586	PrimaryExpression	0x08		355424	1					
ANR	355587	PrimaryExpression	0		355424	1					
ANR	355588	CompoundStatement		33:36:762:762	355424	1					
ANR	355589	ExpressionStatement	c = buf [ i ] & 0x07	329:4:11323:11340	355424	0	True				
ANR	355590	AssignmentExpression	c = buf [ i ] & 0x07		355424	0		=			
ANR	355591	Identifier	c		355424	0					
ANR	355592	BitAndExpression	buf [ i ] & 0x07		355424	1		&			
ANR	355593	ArrayIndexing	buf [ i ]		355424	0					
ANR	355594	Identifier	buf		355424	0					
ANR	355595	Identifier	i		355424	1					
ANR	355596	PrimaryExpression	0x07		355424	1					
ANR	355597	ExpressionStatement	following = 3	330:4:11346:11359	355424	1	True				
ANR	355598	AssignmentExpression	following = 3		355424	0		=			
ANR	355599	Identifier	following		355424	0					
ANR	355600	PrimaryExpression	3		355424	1					
ANR	355601	ElseStatement	else		355424	0					
ANR	355602	IfStatement	if ( ( buf [ i ] & 0x04 ) == 0 )		355424	0					
ANR	355603	Condition	( buf [ i ] & 0x04 ) == 0	331:14:11375:11394	355424	0	True				
ANR	355604	EqualityExpression	( buf [ i ] & 0x04 ) == 0		355424	0		==			
ANR	355605	BitAndExpression	buf [ i ] & 0x04		355424	0		&			
ANR	355606	ArrayIndexing	buf [ i ]		355424	0					
ANR	355607	Identifier	buf		355424	0					
ANR	355608	Identifier	i		355424	1					
ANR	355609	PrimaryExpression	0x04		355424	1					
ANR	355610	PrimaryExpression	0		355424	1					
ANR	355611	CompoundStatement		36:36:857:857	355424	1					
ANR	355612	ExpressionStatement	c = buf [ i ] & 0x03	332:4:11418:11435	355424	0	True				
ANR	355613	AssignmentExpression	c = buf [ i ] & 0x03		355424	0		=			
ANR	355614	Identifier	c		355424	0					
ANR	355615	BitAndExpression	buf [ i ] & 0x03		355424	1		&			
ANR	355616	ArrayIndexing	buf [ i ]		355424	0					
ANR	355617	Identifier	buf		355424	0					
ANR	355618	Identifier	i		355424	1					
ANR	355619	PrimaryExpression	0x03		355424	1					
ANR	355620	ExpressionStatement	following = 4	333:4:11441:11454	355424	1	True				
ANR	355621	AssignmentExpression	following = 4		355424	0		=			
ANR	355622	Identifier	following		355424	0					
ANR	355623	PrimaryExpression	4		355424	1					
ANR	355624	ElseStatement	else		355424	0					
ANR	355625	IfStatement	if ( ( buf [ i ] & 0x02 ) == 0 )		355424	0					
ANR	355626	Condition	( buf [ i ] & 0x02 ) == 0	334:14:11470:11489	355424	0	True				
ANR	355627	EqualityExpression	( buf [ i ] & 0x02 ) == 0		355424	0		==			
ANR	355628	BitAndExpression	buf [ i ] & 0x02		355424	0		&			
ANR	355629	ArrayIndexing	buf [ i ]		355424	0					
ANR	355630	Identifier	buf		355424	0					
ANR	355631	Identifier	i		355424	1					
ANR	355632	PrimaryExpression	0x02		355424	1					
ANR	355633	PrimaryExpression	0		355424	1					
ANR	355634	CompoundStatement		39:36:952:952	355424	1					
ANR	355635	ExpressionStatement	c = buf [ i ] & 0x01	335:4:11513:11530	355424	0	True				
ANR	355636	AssignmentExpression	c = buf [ i ] & 0x01		355424	0		=			
ANR	355637	Identifier	c		355424	0					
ANR	355638	BitAndExpression	buf [ i ] & 0x01		355424	1		&			
ANR	355639	ArrayIndexing	buf [ i ]		355424	0					
ANR	355640	Identifier	buf		355424	0					
ANR	355641	Identifier	i		355424	1					
ANR	355642	PrimaryExpression	0x01		355424	1					
ANR	355643	ExpressionStatement	following = 5	336:4:11536:11549	355424	1	True				
ANR	355644	AssignmentExpression	following = 5		355424	0		=			
ANR	355645	Identifier	following		355424	0					
ANR	355646	PrimaryExpression	5		355424	1					
ANR	355647	ElseStatement	else		355424	0					
ANR	355648	ReturnStatement	return - 1 ;	338:4:11565:11574	355424	0	True				
ANR	355649	UnaryOperationExpression	- 1		355424	0					
ANR	355650	UnaryOperator	-		355424	0					
ANR	355651	PrimaryExpression	1		355424	1					
ANR	355652	ForStatement	for ( n = 0 ; n < following ; n ++ )		355424	2					
ANR	355653	ForInit	n = 0 ;	340:8:11585:11590	355424	0	True				
ANR	355654	AssignmentExpression	n = 0		355424	0		=			
ANR	355655	Identifier	n		355424	0					
ANR	355656	PrimaryExpression	0		355424	1					
ANR	355657	Condition	n < following	340:15:11592:11604	355424	1	True				
ANR	355658	RelationalExpression	n < following		355424	0		<			
ANR	355659	Identifier	n		355424	0					
ANR	355660	Identifier	following		355424	1					
ANR	355661	PostIncDecOperationExpression	n ++	340:30:11607:11609	355424	2	True				
ANR	355662	Identifier	n		355424	0					
ANR	355663	IncDec	++		355424	1					
ANR	355664	CompoundStatement		45:35:1072:1072	355424	3					
ANR	355665	ExpressionStatement	i ++	341:4:11618:11621	355424	0	True				
ANR	355666	PostIncDecOperationExpression	i ++		355424	0					
ANR	355667	Identifier	i		355424	0					
ANR	355668	IncDec	++		355424	1					
ANR	355669	IfStatement	if ( i >= nbytes )		355424	1					
ANR	355670	Condition	i >= nbytes	342:8:11631:11641	355424	0	True				
ANR	355671	RelationalExpression	i >= nbytes		355424	0		>=			
ANR	355672	Identifier	i		355424	0					
ANR	355673	Identifier	nbytes		355424	1					
ANR	355674	GotoStatement	goto done ;	343:5:11649:11658	355424	1	True				
ANR	355675	Identifier	done		355424	0					
ANR	355676	IfStatement	if ( ( buf [ i ] & 0x80 ) == 0 || ( buf [ i ] & 0x40 ) )		355424	2					
ANR	355677	Condition	( buf [ i ] & 0x80 ) == 0 || ( buf [ i ] & 0x40 )	345:8:11669:11707	355424	0	True				
ANR	355678	OrExpression	( buf [ i ] & 0x80 ) == 0 || ( buf [ i ] & 0x40 )		355424	0		||			
ANR	355679	EqualityExpression	( buf [ i ] & 0x80 ) == 0		355424	0		==			
ANR	355680	BitAndExpression	buf [ i ] & 0x80		355424	0		&			
ANR	355681	ArrayIndexing	buf [ i ]		355424	0					
ANR	355682	Identifier	buf		355424	0					
ANR	355683	Identifier	i		355424	1					
ANR	355684	PrimaryExpression	0x80		355424	1					
ANR	355685	PrimaryExpression	0		355424	1					
ANR	355686	BitAndExpression	buf [ i ] & 0x40		355424	1		&			
ANR	355687	ArrayIndexing	buf [ i ]		355424	0					
ANR	355688	Identifier	buf		355424	0					
ANR	355689	Identifier	i		355424	1					
ANR	355690	PrimaryExpression	0x40		355424	1					
ANR	355691	ReturnStatement	return - 1 ;	346:5:11715:11724	355424	1	True				
ANR	355692	UnaryOperationExpression	- 1		355424	0					
ANR	355693	UnaryOperator	-		355424	0					
ANR	355694	PrimaryExpression	1		355424	1					
ANR	355695	ExpressionStatement	c = ( c << 6 ) + ( buf [ i ] & 0x3f )	348:4:11731:11761	355424	3	True				
ANR	355696	AssignmentExpression	c = ( c << 6 ) + ( buf [ i ] & 0x3f )		355424	0		=			
ANR	355697	Identifier	c		355424	0					
ANR	355698	AdditiveExpression	( c << 6 ) + ( buf [ i ] & 0x3f )		355424	1		+			
ANR	355699	ShiftExpression	c << 6		355424	0		<<			
ANR	355700	Identifier	c		355424	0					
ANR	355701	PrimaryExpression	6		355424	1					
ANR	355702	BitAndExpression	buf [ i ] & 0x3f		355424	1		&			
ANR	355703	ArrayIndexing	buf [ i ]		355424	0					
ANR	355704	Identifier	buf		355424	0					
ANR	355705	Identifier	i		355424	1					
ANR	355706	PrimaryExpression	0x3f		355424	1					
ANR	355707	IfStatement	if ( ubuf )		355424	3					
ANR	355708	Condition	ubuf	351:7:11776:11779	355424	0	True				
ANR	355709	Identifier	ubuf		355424	0					
ANR	355710	ExpressionStatement	ubuf [ ( * ulen ) ++ ] = c	352:4:11786:11805	355424	1	True				
ANR	355711	AssignmentExpression	ubuf [ ( * ulen ) ++ ] = c		355424	0		=			
ANR	355712	ArrayIndexing	ubuf [ ( * ulen ) ++ ]		355424	0					
ANR	355713	Identifier	ubuf		355424	0					
ANR	355714	PostIncDecOperationExpression	( * ulen ) ++		355424	1					
ANR	355715	UnaryOperationExpression	* ulen		355424	0					
ANR	355716	UnaryOperator	*		355424	0					
ANR	355717	Identifier	ulen		355424	1					
ANR	355718	IncDec	++		355424	1					
ANR	355719	Identifier	c		355424	1					
ANR	355720	ExpressionStatement	gotone = 1	353:3:11810:11820	355424	4	True				
ANR	355721	AssignmentExpression	gotone = 1		355424	0		=			
ANR	355722	Identifier	gotone		355424	0					
ANR	355723	PrimaryExpression	1		355424	1					
ANR	355724	Label	done :	356:0:11829:11833	355424	6	True				
ANR	355725	Identifier	done		355424	0					
ANR	355726	ReturnStatement	return ctrl ? 0 : ( gotone ? 2 : 1 ) ;	357:1:11836:11870	355424	7	True				
ANR	355727	ConditionalExpression	ctrl ? 0 : ( gotone ? 2 : 1 )		355424	0					
ANR	355728	Condition	ctrl		355424	0					
ANR	355729	Identifier	ctrl		355424	0					
ANR	355730	PrimaryExpression	0		355424	1					
ANR	355731	ConditionalExpression	gotone ? 2 : 1		355424	2					
ANR	355732	Condition	gotone		355424	0					
ANR	355733	Identifier	gotone		355424	0					
ANR	355734	PrimaryExpression	2		355424	1					
ANR	355735	PrimaryExpression	1		355424	2					
ANR	355736	ReturnType	int		355424	1					
ANR	355737	Identifier	file_looks_utf8		355424	2					
ANR	355738	ParameterList	"const unsigned char * buf , size_t nbytes , unichar * ubuf , size_t * ulen"		355424	3					
ANR	355739	Parameter	const unsigned char * buf	295:16:10469:10492	355424	0	True				
ANR	355740	ParameterType	const unsigned char *		355424	0					
ANR	355741	Identifier	buf		355424	1					
ANR	355742	Parameter	size_t nbytes	295:42:10495:10507	355424	1	True				
ANR	355743	ParameterType	size_t		355424	0					
ANR	355744	Identifier	nbytes		355424	1					
ANR	355745	Parameter	unichar * ubuf	295:57:10510:10522	355424	2	True				
ANR	355746	ParameterType	unichar *		355424	0					
ANR	355747	Identifier	ubuf		355424	1					
ANR	355748	Parameter	size_t * ulen	295:72:10525:10536	355424	3	True				
ANR	355749	ParameterType	size_t *		355424	0					
ANR	355750	Identifier	ulen		355424	1					
ANR	355751	CFGEntryNode	ENTRY		355424		True				
ANR	355752	CFGExitNode	EXIT		355424		True				
ANR	355753	Symbol	* buf		355424						
ANR	355754	Symbol	* * i		355424						
ANR	355755	Symbol	c		355424						
ANR	355756	Symbol	* text_chars		355424						
ANR	355757	Symbol	ctrl		355424						
ANR	355758	Symbol	* * buf		355424						
ANR	355759	Symbol	ubuf		355424						
ANR	355760	Symbol	i		355424						
ANR	355761	Symbol	text_chars		355424						
ANR	355762	Symbol	n		355424						
ANR	355763	Symbol	nbytes		355424						
ANR	355764	Symbol	gotone		355424						
ANR	355765	Symbol	* ubuf		355424						
ANR	355766	Symbol	buf		355424						
ANR	355767	Symbol	* ulen		355424						
ANR	355768	Symbol	* i		355424						
ANR	355769	Symbol	T		355424						
ANR	355770	Symbol	ulen		355424						
ANR	355771	Symbol	following		355424						
ANR	355772	Function	looks_utf8_with_BOM	365:8:12049:12298							
ANR	355773	FunctionDef	"looks_utf8_with_BOM (const unsigned char * buf , size_t nbytes , unichar * ubuf , size_t * ulen)"		355772	0					
ANR	355774	CompoundStatement		368:0:12147:12298	355772	0					
ANR	355775	IfStatement	if ( nbytes > 3 && buf [ 0 ] == 0xef && buf [ 1 ] == 0xbb && buf [ 2 ] == 0xbf )		355772	0					
ANR	355776	Condition	nbytes > 3 && buf [ 0 ] == 0xef && buf [ 1 ] == 0xbb && buf [ 2 ] == 0xbf	369:5:12154:12217	355772	0	True				
ANR	355777	AndExpression	nbytes > 3 && buf [ 0 ] == 0xef && buf [ 1 ] == 0xbb && buf [ 2 ] == 0xbf		355772	0		&&			
ANR	355778	RelationalExpression	nbytes > 3		355772	0		>			
ANR	355779	Identifier	nbytes		355772	0					
ANR	355780	PrimaryExpression	3		355772	1					
ANR	355781	AndExpression	buf [ 0 ] == 0xef && buf [ 1 ] == 0xbb && buf [ 2 ] == 0xbf		355772	1		&&			
ANR	355782	EqualityExpression	buf [ 0 ] == 0xef		355772	0		==			
ANR	355783	ArrayIndexing	buf [ 0 ]		355772	0					
ANR	355784	Identifier	buf		355772	0					
ANR	355785	PrimaryExpression	0		355772	1					
ANR	355786	PrimaryExpression	0xef		355772	1					
ANR	355787	AndExpression	buf [ 1 ] == 0xbb && buf [ 2 ] == 0xbf		355772	1		&&			
ANR	355788	EqualityExpression	buf [ 1 ] == 0xbb		355772	0		==			
ANR	355789	ArrayIndexing	buf [ 1 ]		355772	0					
ANR	355790	Identifier	buf		355772	0					
ANR	355791	PrimaryExpression	1		355772	1					
ANR	355792	PrimaryExpression	0xbb		355772	1					
ANR	355793	EqualityExpression	buf [ 2 ] == 0xbf		355772	1		==			
ANR	355794	ArrayIndexing	buf [ 2 ]		355772	0					
ANR	355795	Identifier	buf		355772	0					
ANR	355796	PrimaryExpression	2		355772	1					
ANR	355797	PrimaryExpression	0xbf		355772	1					
ANR	355798	ReturnStatement	"return file_looks_utf8 ( buf + 3 , nbytes - 3 , ubuf , ulen ) ;"	370:2:12222:12277	355772	1	True				
ANR	355799	CallExpression	"file_looks_utf8 ( buf + 3 , nbytes - 3 , ubuf , ulen )"		355772	0					
ANR	355800	Callee	file_looks_utf8		355772	0					
ANR	355801	Identifier	file_looks_utf8		355772	0					
ANR	355802	ArgumentList	buf + 3		355772	1					
ANR	355803	Argument	buf + 3		355772	0					
ANR	355804	AdditiveExpression	buf + 3		355772	0		+			
ANR	355805	Identifier	buf		355772	0					
ANR	355806	PrimaryExpression	3		355772	1					
ANR	355807	Argument	nbytes - 3		355772	1					
ANR	355808	AdditiveExpression	nbytes - 3		355772	0		-			
ANR	355809	Identifier	nbytes		355772	0					
ANR	355810	PrimaryExpression	3		355772	1					
ANR	355811	Argument	ubuf		355772	2					
ANR	355812	Identifier	ubuf		355772	0					
ANR	355813	Argument	ulen		355772	3					
ANR	355814	Identifier	ulen		355772	0					
ANR	355815	ElseStatement	else		355772	0					
ANR	355816	ReturnStatement	return - 1 ;	372:2:12287:12296	355772	0	True				
ANR	355817	UnaryOperationExpression	- 1		355772	0					
ANR	355818	UnaryOperator	-		355772	0					
ANR	355819	PrimaryExpression	1		355772	1					
ANR	355820	ReturnType	int		355772	1					
ANR	355821	Identifier	looks_utf8_with_BOM		355772	2					
ANR	355822	ParameterList	"const unsigned char * buf , size_t nbytes , unichar * ubuf , size_t * ulen"		355772	3					
ANR	355823	Parameter	const unsigned char * buf	366:20:12073:12096	355772	0	True				
ANR	355824	ParameterType	const unsigned char *		355772	0					
ANR	355825	Identifier	buf		355772	1					
ANR	355826	Parameter	size_t nbytes	366:46:12099:12111	355772	1	True				
ANR	355827	ParameterType	size_t		355772	0					
ANR	355828	Identifier	nbytes		355772	1					
ANR	355829	Parameter	unichar * ubuf	366:61:12114:12126	355772	2	True				
ANR	355830	ParameterType	unichar *		355772	0					
ANR	355831	Identifier	ubuf		355772	1					
ANR	355832	Parameter	size_t * ulen	367:4:12133:12144	355772	3	True				
ANR	355833	ParameterType	size_t *		355772	0					
ANR	355834	Identifier	ulen		355772	1					
ANR	355835	CFGEntryNode	ENTRY		355772		True				
ANR	355836	CFGExitNode	EXIT		355772		True				
ANR	355837	Symbol	buf		355772						
ANR	355838	Symbol	* buf		355772						
ANR	355839	Symbol	ulen		355772						
ANR	355840	Symbol	ubuf		355772						
ANR	355841	Symbol	file_looks_utf8		355772						
ANR	355842	Symbol	nbytes		355772						
ANR	355843	Function	looks_ucs16	375:8:12309:12968							
ANR	355844	FunctionDef	"looks_ucs16 (const unsigned char * buf , size_t nbytes , unichar * ubuf , size_t * ulen)"		355843	0					
ANR	355845	CompoundStatement		378:0:12399:12968	355843	0					
ANR	355846	IdentifierDeclStatement	int bigend ;	379:1:12402:12412	355843	0	True				
ANR	355847	IdentifierDecl	bigend		355843	0					
ANR	355848	IdentifierDeclType	int		355843	0					
ANR	355849	Identifier	bigend		355843	1					
ANR	355850	IdentifierDeclStatement	size_t i ;	380:1:12415:12423	355843	1	True				
ANR	355851	IdentifierDecl	i		355843	0					
ANR	355852	IdentifierDeclType	size_t		355843	0					
ANR	355853	Identifier	i		355843	1					
ANR	355854	IfStatement	if ( nbytes < 2 )		355843	2					
ANR	355855	Condition	nbytes < 2	382:5:12431:12440	355843	0	True				
ANR	355856	RelationalExpression	nbytes < 2		355843	0		<			
ANR	355857	Identifier	nbytes		355843	0					
ANR	355858	PrimaryExpression	2		355843	1					
ANR	355859	ReturnStatement	return 0 ;	383:2:12445:12453	355843	1	True				
ANR	355860	PrimaryExpression	0		355843	0					
ANR	355861	IfStatement	if ( buf [ 0 ] == 0xff && buf [ 1 ] == 0xfe )		355843	3					
ANR	355862	Condition	buf [ 0 ] == 0xff && buf [ 1 ] == 0xfe	385:5:12461:12492	355843	0	True				
ANR	355863	AndExpression	buf [ 0 ] == 0xff && buf [ 1 ] == 0xfe		355843	0		&&			
ANR	355864	EqualityExpression	buf [ 0 ] == 0xff		355843	0		==			
ANR	355865	ArrayIndexing	buf [ 0 ]		355843	0					
ANR	355866	Identifier	buf		355843	0					
ANR	355867	PrimaryExpression	0		355843	1					
ANR	355868	PrimaryExpression	0xff		355843	1					
ANR	355869	EqualityExpression	buf [ 1 ] == 0xfe		355843	1		==			
ANR	355870	ArrayIndexing	buf [ 1 ]		355843	0					
ANR	355871	Identifier	buf		355843	0					
ANR	355872	PrimaryExpression	1		355843	1					
ANR	355873	PrimaryExpression	0xfe		355843	1					
ANR	355874	ExpressionStatement	bigend = 0	386:2:12497:12507	355843	1	True				
ANR	355875	AssignmentExpression	bigend = 0		355843	0		=			
ANR	355876	Identifier	bigend		355843	0					
ANR	355877	PrimaryExpression	0		355843	1					
ANR	355878	ElseStatement	else		355843	0					
ANR	355879	IfStatement	if ( buf [ 0 ] == 0xfe && buf [ 1 ] == 0xff )		355843	0					
ANR	355880	Condition	buf [ 0 ] == 0xfe && buf [ 1 ] == 0xff	387:10:12519:12550	355843	0	True				
ANR	355881	AndExpression	buf [ 0 ] == 0xfe && buf [ 1 ] == 0xff		355843	0		&&			
ANR	355882	EqualityExpression	buf [ 0 ] == 0xfe		355843	0		==			
ANR	355883	ArrayIndexing	buf [ 0 ]		355843	0					
ANR	355884	Identifier	buf		355843	0					
ANR	355885	PrimaryExpression	0		355843	1					
ANR	355886	PrimaryExpression	0xfe		355843	1					
ANR	355887	EqualityExpression	buf [ 1 ] == 0xff		355843	1		==			
ANR	355888	ArrayIndexing	buf [ 1 ]		355843	0					
ANR	355889	Identifier	buf		355843	0					
ANR	355890	PrimaryExpression	1		355843	1					
ANR	355891	PrimaryExpression	0xff		355843	1					
ANR	355892	ExpressionStatement	bigend = 1	388:2:12555:12565	355843	1	True				
ANR	355893	AssignmentExpression	bigend = 1		355843	0		=			
ANR	355894	Identifier	bigend		355843	0					
ANR	355895	PrimaryExpression	1		355843	1					
ANR	355896	ElseStatement	else		355843	0					
ANR	355897	ReturnStatement	return 0 ;	390:2:12575:12583	355843	0	True				
ANR	355898	PrimaryExpression	0		355843	0					
ANR	355899	ExpressionStatement	* ulen = 0	392:1:12587:12596	355843	4	True				
ANR	355900	AssignmentExpression	* ulen = 0		355843	0		=			
ANR	355901	UnaryOperationExpression	* ulen		355843	0					
ANR	355902	UnaryOperator	*		355843	0					
ANR	355903	Identifier	ulen		355843	1					
ANR	355904	PrimaryExpression	0		355843	1					
ANR	355905	ForStatement	for ( i = 2 ; i + 1 < nbytes ; i += 2 )		355843	5					
ANR	355906	ForInit	i = 2 ;	394:6:12605:12610	355843	0	True				
ANR	355907	AssignmentExpression	i = 2		355843	0		=			
ANR	355908	Identifier	i		355843	0					
ANR	355909	PrimaryExpression	2		355843	1					
ANR	355910	Condition	i + 1 < nbytes	394:13:12612:12625	355843	1	True				
ANR	355911	RelationalExpression	i + 1 < nbytes		355843	0		<			
ANR	355912	AdditiveExpression	i + 1		355843	0		+			
ANR	355913	Identifier	i		355843	0					
ANR	355914	PrimaryExpression	1		355843	1					
ANR	355915	Identifier	nbytes		355843	1					
ANR	355916	AssignmentExpression	i += 2	394:29:12628:12633	355843	2	True	+=			
ANR	355917	Identifier	i		355843	0					
ANR	355918	PrimaryExpression	2		355843	1					
ANR	355919	CompoundStatement		17:37:236:236	355843	3					
ANR	355920	IfStatement	if ( bigend )		355843	0					
ANR	355921	Condition	bigend	397:6:12694:12699	355843	0	True				
ANR	355922	Identifier	bigend		355843	0					
ANR	355923	ExpressionStatement	ubuf [ ( * ulen ) ++ ] = buf [ i + 1 ] + 256 * buf [ i ]	398:3:12705:12748	355843	1	True				
ANR	355924	AssignmentExpression	ubuf [ ( * ulen ) ++ ] = buf [ i + 1 ] + 256 * buf [ i ]		355843	0		=			
ANR	355925	ArrayIndexing	ubuf [ ( * ulen ) ++ ]		355843	0					
ANR	355926	Identifier	ubuf		355843	0					
ANR	355927	PostIncDecOperationExpression	( * ulen ) ++		355843	1					
ANR	355928	UnaryOperationExpression	* ulen		355843	0					
ANR	355929	UnaryOperator	*		355843	0					
ANR	355930	Identifier	ulen		355843	1					
ANR	355931	IncDec	++		355843	1					
ANR	355932	AdditiveExpression	buf [ i + 1 ] + 256 * buf [ i ]		355843	1		+			
ANR	355933	ArrayIndexing	buf [ i + 1 ]		355843	0					
ANR	355934	Identifier	buf		355843	0					
ANR	355935	AdditiveExpression	i + 1		355843	1		+			
ANR	355936	Identifier	i		355843	0					
ANR	355937	PrimaryExpression	1		355843	1					
ANR	355938	MultiplicativeExpression	256 * buf [ i ]		355843	1		*			
ANR	355939	PrimaryExpression	256		355843	0					
ANR	355940	ArrayIndexing	buf [ i ]		355843	1					
ANR	355941	Identifier	buf		355843	0					
ANR	355942	Identifier	i		355843	1					
ANR	355943	ElseStatement	else		355843	0					
ANR	355944	ExpressionStatement	ubuf [ ( * ulen ) ++ ] = buf [ i ] + 256 * buf [ i + 1 ]	400:3:12760:12803	355843	0	True				
ANR	355945	AssignmentExpression	ubuf [ ( * ulen ) ++ ] = buf [ i ] + 256 * buf [ i + 1 ]		355843	0		=			
ANR	355946	ArrayIndexing	ubuf [ ( * ulen ) ++ ]		355843	0					
ANR	355947	Identifier	ubuf		355843	0					
ANR	355948	PostIncDecOperationExpression	( * ulen ) ++		355843	1					
ANR	355949	UnaryOperationExpression	* ulen		355843	0					
ANR	355950	UnaryOperator	*		355843	0					
ANR	355951	Identifier	ulen		355843	1					
ANR	355952	IncDec	++		355843	1					
ANR	355953	AdditiveExpression	buf [ i ] + 256 * buf [ i + 1 ]		355843	1		+			
ANR	355954	ArrayIndexing	buf [ i ]		355843	0					
ANR	355955	Identifier	buf		355843	0					
ANR	355956	Identifier	i		355843	1					
ANR	355957	MultiplicativeExpression	256 * buf [ i + 1 ]		355843	1		*			
ANR	355958	PrimaryExpression	256		355843	0					
ANR	355959	ArrayIndexing	buf [ i + 1 ]		355843	1					
ANR	355960	Identifier	buf		355843	0					
ANR	355961	AdditiveExpression	i + 1		355843	1		+			
ANR	355962	Identifier	i		355843	0					
ANR	355963	PrimaryExpression	1		355843	1					
ANR	355964	IfStatement	if ( ubuf [ * ulen - 1 ] == 0xfffe )		355843	1					
ANR	355965	Condition	ubuf [ * ulen - 1 ] == 0xfffe	402:6:12812:12836	355843	0	True				
ANR	355966	EqualityExpression	ubuf [ * ulen - 1 ] == 0xfffe		355843	0		==			
ANR	355967	ArrayIndexing	ubuf [ * ulen - 1 ]		355843	0					
ANR	355968	Identifier	ubuf		355843	0					
ANR	355969	AdditiveExpression	* ulen - 1		355843	1		-			
ANR	355970	UnaryOperationExpression	* ulen		355843	0					
ANR	355971	UnaryOperator	*		355843	0					
ANR	355972	Identifier	ulen		355843	1					
ANR	355973	PrimaryExpression	1		355843	1					
ANR	355974	PrimaryExpression	0xfffe		355843	1					
ANR	355975	ReturnStatement	return 0 ;	403:3:12842:12850	355843	1	True				
ANR	355976	PrimaryExpression	0		355843	0					
ANR	355977	IfStatement	if ( ubuf [ * ulen - 1 ] < 128 && text_chars [ ( size_t ) ubuf [ * ulen - 1 ] ] != T )		355843	2					
ANR	355978	Condition	ubuf [ * ulen - 1 ] < 128 && text_chars [ ( size_t ) ubuf [ * ulen - 1 ] ] != T	404:6:12858:12928	355843	0	True				
ANR	355979	AndExpression	ubuf [ * ulen - 1 ] < 128 && text_chars [ ( size_t ) ubuf [ * ulen - 1 ] ] != T		355843	0		&&			
ANR	355980	RelationalExpression	ubuf [ * ulen - 1 ] < 128		355843	0		<			
ANR	355981	ArrayIndexing	ubuf [ * ulen - 1 ]		355843	0					
ANR	355982	Identifier	ubuf		355843	0					
ANR	355983	AdditiveExpression	* ulen - 1		355843	1		-			
ANR	355984	UnaryOperationExpression	* ulen		355843	0					
ANR	355985	UnaryOperator	*		355843	0					
ANR	355986	Identifier	ulen		355843	1					
ANR	355987	PrimaryExpression	1		355843	1					
ANR	355988	PrimaryExpression	128		355843	1					
ANR	355989	EqualityExpression	text_chars [ ( size_t ) ubuf [ * ulen - 1 ] ] != T		355843	1		!=			
ANR	355990	ArrayIndexing	text_chars [ ( size_t ) ubuf [ * ulen - 1 ] ]		355843	0					
ANR	355991	Identifier	text_chars		355843	0					
ANR	355992	CastExpression	( size_t ) ubuf [ * ulen - 1 ]		355843	1					
ANR	355993	CastTarget	size_t		355843	0					
ANR	355994	ArrayIndexing	ubuf [ * ulen - 1 ]		355843	1					
ANR	355995	Identifier	ubuf		355843	0					
ANR	355996	AdditiveExpression	* ulen - 1		355843	1		-			
ANR	355997	UnaryOperationExpression	* ulen		355843	0					
ANR	355998	UnaryOperator	*		355843	0					
ANR	355999	Identifier	ulen		355843	1					
ANR	356000	PrimaryExpression	1		355843	1					
ANR	356001	Identifier	T		355843	1					
ANR	356002	ReturnStatement	return 0 ;	406:3:12934:12942	355843	1	True				
ANR	356003	PrimaryExpression	0		355843	0					
ANR	356004	ReturnStatement	return 1 + bigend ;	409:1:12949:12966	355843	6	True				
ANR	356005	AdditiveExpression	1 + bigend		355843	0		+			
ANR	356006	PrimaryExpression	1		355843	0					
ANR	356007	Identifier	bigend		355843	1					
ANR	356008	ReturnType	int		355843	1					
ANR	356009	Identifier	looks_ucs16		355843	2					
ANR	356010	ParameterList	"const unsigned char * buf , size_t nbytes , unichar * ubuf , size_t * ulen"		355843	3					
ANR	356011	Parameter	const unsigned char * buf	376:12:12325:12348	355843	0	True				
ANR	356012	ParameterType	const unsigned char *		355843	0					
ANR	356013	Identifier	buf		355843	1					
ANR	356014	Parameter	size_t nbytes	376:38:12351:12363	355843	1	True				
ANR	356015	ParameterType	size_t		355843	0					
ANR	356016	Identifier	nbytes		355843	1					
ANR	356017	Parameter	unichar * ubuf	376:53:12366:12378	355843	2	True				
ANR	356018	ParameterType	unichar *		355843	0					
ANR	356019	Identifier	ubuf		355843	1					
ANR	356020	Parameter	size_t * ulen	377:4:12385:12396	355843	3	True				
ANR	356021	ParameterType	size_t *		355843	0					
ANR	356022	Identifier	ulen		355843	1					
ANR	356023	CFGEntryNode	ENTRY		355843		True				
ANR	356024	CFGExitNode	EXIT		355843		True				
ANR	356025	Symbol	* buf		355843						
ANR	356026	Symbol	* text_chars		355843						
ANR	356027	Symbol	ubuf		355843						
ANR	356028	Symbol	bigend		355843						
ANR	356029	Symbol	i		355843						
ANR	356030	Symbol	text_chars		355843						
ANR	356031	Symbol	nbytes		355843						
ANR	356032	Symbol	* ubuf		355843						
ANR	356033	Symbol	buf		355843						
ANR	356034	Symbol	* * ulen		355843						
ANR	356035	Symbol	* ulen		355843						
ANR	356036	Symbol	* i		355843						
ANR	356037	Symbol	T		355843						
ANR	356038	Symbol	ulen		355843						
ANR	356039	Symbol	* * ubuf		355843						
ANR	356040	Symbol	* * * ulen		355843						
ANR	356041	DeclStmt									
ANR	356042	Decl							unsigned char	unsigned char [ ]	ebcdic_to_ascii
ANR	356043	DeclStmt									
ANR	356044	Decl							unsigned char	unsigned char [ ]	ebcdic_1047_to_8859
ANR	356045	Function	from_ebcdic	496:8:17287:17450							
ANR	356046	FunctionDef	"from_ebcdic (const unsigned char * buf , size_t nbytes , unsigned char * out)"		356045	0					
ANR	356047	CompoundStatement		498:0:17365:17450	356045	0					
ANR	356048	IdentifierDeclStatement	size_t i ;	499:1:17368:17376	356045	0	True				
ANR	356049	IdentifierDecl	i		356045	0					
ANR	356050	IdentifierDeclType	size_t		356045	0					
ANR	356051	Identifier	i		356045	1					
ANR	356052	ForStatement	for ( i = 0 ; i < nbytes ; i ++ )		356045	1					
ANR	356053	ForInit	i = 0 ;	501:6:17385:17390	356045	0	True				
ANR	356054	AssignmentExpression	i = 0		356045	0		=			
ANR	356055	Identifier	i		356045	0					
ANR	356056	PrimaryExpression	0		356045	1					
ANR	356057	Condition	i < nbytes	501:13:17392:17401	356045	1	True				
ANR	356058	RelationalExpression	i < nbytes		356045	0		<			
ANR	356059	Identifier	i		356045	0					
ANR	356060	Identifier	nbytes		356045	1					
ANR	356061	PostIncDecOperationExpression	i ++	501:25:17404:17406	356045	2	True				
ANR	356062	Identifier	i		356045	0					
ANR	356063	IncDec	++		356045	1					
ANR	356064	CompoundStatement		4:30:43:43	356045	3					
ANR	356065	ExpressionStatement	out [ i ] = ebcdic_to_ascii [ buf [ i ] ]	502:2:17413:17445	356045	0	True				
ANR	356066	AssignmentExpression	out [ i ] = ebcdic_to_ascii [ buf [ i ] ]		356045	0		=			
ANR	356067	ArrayIndexing	out [ i ]		356045	0					
ANR	356068	Identifier	out		356045	0					
ANR	356069	Identifier	i		356045	1					
ANR	356070	ArrayIndexing	ebcdic_to_ascii [ buf [ i ] ]		356045	1					
ANR	356071	Identifier	ebcdic_to_ascii		356045	0					
ANR	356072	ArrayIndexing	buf [ i ]		356045	1					
ANR	356073	Identifier	buf		356045	0					
ANR	356074	Identifier	i		356045	1					
ANR	356075	ReturnType	void		356045	1					
ANR	356076	Identifier	from_ebcdic		356045	2					
ANR	356077	ParameterList	"const unsigned char * buf , size_t nbytes , unsigned char * out"		356045	3					
ANR	356078	Parameter	const unsigned char * buf	497:12:17304:17327	356045	0	True				
ANR	356079	ParameterType	const unsigned char *		356045	0					
ANR	356080	Identifier	buf		356045	1					
ANR	356081	Parameter	size_t nbytes	497:38:17330:17342	356045	1	True				
ANR	356082	ParameterType	size_t		356045	0					
ANR	356083	Identifier	nbytes		356045	1					
ANR	356084	Parameter	unsigned char * out	497:53:17345:17362	356045	2	True				
ANR	356085	ParameterType	unsigned char *		356045	0					
ANR	356086	Identifier	out		356045	1					
ANR	356087	CFGEntryNode	ENTRY		356045		True				
ANR	356088	CFGExitNode	EXIT		356045		True				
ANR	356089	Symbol	buf		356045						
ANR	356090	Symbol	* * i		356045						
ANR	356091	Symbol	* buf		356045						
ANR	356092	Symbol	ebcdic_to_ascii		356045						
ANR	356093	Symbol	* i		356045						
ANR	356094	Symbol	* * buf		356045						
ANR	356095	Symbol	* out		356045						
ANR	356096	Symbol	i		356045						
ANR	356097	Symbol	* ebcdic_to_ascii		356045						
ANR	356098	Symbol	nbytes		356045						
ANR	356099	Symbol	out		356045						
