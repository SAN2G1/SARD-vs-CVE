command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	477411	File	data/converged/CVE-2017-11142_php-src/ext_gd_libgd_gdkanji.c								
ANR	477412	Function	debug	58:0:996:1220							
ANR	477413	FunctionDef	debug (const char * format)		477412	0					
ANR	477414	CompoundStatement		60:0:1039:1220	477412	0					
ANR	477415	IdentifierDeclStatement	va_list args ;	62:2:1056:1068	477412	0	True				
ANR	477416	IdentifierDecl	args		477412	0					
ANR	477417	IdentifierDeclType	va_list		477412	0					
ANR	477418	Identifier	args		477412	1					
ANR	477419	ExpressionStatement	"va_start ( args , format )"	64:2:1073:1096	477412	1	True				
ANR	477420	CallExpression	"va_start ( args , format )"		477412	0					
ANR	477421	Callee	va_start		477412	0					
ANR	477422	Identifier	va_start		477412	0					
ANR	477423	ArgumentList	args		477412	1					
ANR	477424	Argument	args		477412	0					
ANR	477425	Identifier	args		477412	0					
ANR	477426	Argument	format		477412	1					
ANR	477427	Identifier	format		477412	0					
ANR	477428	ExpressionStatement	"fprintf ( stdout , ""%s: "" , LIBNAME )"	65:2:1100:1133	477412	2	True				
ANR	477429	CallExpression	"fprintf ( stdout , ""%s: "" , LIBNAME )"		477412	0					
ANR	477430	Callee	fprintf		477412	0					
ANR	477431	Identifier	fprintf		477412	0					
ANR	477432	ArgumentList	stdout		477412	1					
ANR	477433	Argument	stdout		477412	0					
ANR	477434	Identifier	stdout		477412	0					
ANR	477435	Argument	"""%s: """		477412	1					
ANR	477436	PrimaryExpression	"""%s: """		477412	0					
ANR	477437	Argument	LIBNAME		477412	2					
ANR	477438	Identifier	LIBNAME		477412	0					
ANR	477439	ExpressionStatement	"vfprintf ( stdout , format , args )"	66:2:1137:1168	477412	3	True				
ANR	477440	CallExpression	"vfprintf ( stdout , format , args )"		477412	0					
ANR	477441	Callee	vfprintf		477412	0					
ANR	477442	Identifier	vfprintf		477412	0					
ANR	477443	ArgumentList	stdout		477412	1					
ANR	477444	Argument	stdout		477412	0					
ANR	477445	Identifier	stdout		477412	0					
ANR	477446	Argument	format		477412	1					
ANR	477447	Identifier	format		477412	0					
ANR	477448	Argument	args		477412	2					
ANR	477449	Identifier	args		477412	0					
ANR	477450	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	67:2:1172:1194	477412	4	True				
ANR	477451	CallExpression	"fprintf ( stdout , ""\\n"" )"		477412	0					
ANR	477452	Callee	fprintf		477412	0					
ANR	477453	Identifier	fprintf		477412	0					
ANR	477454	ArgumentList	stdout		477412	1					
ANR	477455	Argument	stdout		477412	0					
ANR	477456	Identifier	stdout		477412	0					
ANR	477457	Argument	"""\\n"""		477412	1					
ANR	477458	PrimaryExpression	"""\\n"""		477412	0					
ANR	477459	ExpressionStatement	va_end ( args )	68:2:1198:1211	477412	5	True				
ANR	477460	CallExpression	va_end ( args )		477412	0					
ANR	477461	Callee	va_end		477412	0					
ANR	477462	Identifier	va_end		477412	0					
ANR	477463	ArgumentList	args		477412	1					
ANR	477464	Argument	args		477412	0					
ANR	477465	Identifier	args		477412	0					
ANR	477466	ReturnType	static void		477412	1					
ANR	477467	Identifier	debug		477412	2					
ANR	477468	ParameterList	const char * format		477412	3					
ANR	477469	Parameter	const char * format	59:7:1015:1032	477412	0	True				
ANR	477470	ParameterType	const char *		477412	0					
ANR	477471	Identifier	format		477412	1					
ANR	477472	CFGEntryNode	ENTRY		477412		True				
ANR	477473	CFGExitNode	EXIT		477412		True				
ANR	477474	Symbol	args		477412						
ANR	477475	Symbol	LIBNAME		477412						
ANR	477476	Symbol	stdout		477412						
ANR	477477	Symbol	format		477412						
ANR	477478	Function	error	72:0:1223:1471							
ANR	477479	FunctionDef	error (const char * format)		477478	0					
ANR	477480	CompoundStatement		74:0:1266:1471	477478	0					
ANR	477481	IdentifierDeclStatement	va_list args ;	75:1:1269:1281	477478	0	True				
ANR	477482	IdentifierDecl	args		477478	0					
ANR	477483	IdentifierDeclType	va_list		477478	0					
ANR	477484	Identifier	args		477478	1					
ANR	477485	IdentifierDeclStatement	char * tmp ;	76:1:1284:1293	477478	1	True				
ANR	477486	IdentifierDecl	* tmp		477478	0					
ANR	477487	IdentifierDeclType	char *		477478	0					
ANR	477488	Identifier	tmp		477478	1					
ANR	477489	ExpressionStatement	TSRMLS_FETCH ( )	77:1:1296:1310	477478	2	True				
ANR	477490	CallExpression	TSRMLS_FETCH ( )		477478	0					
ANR	477491	Callee	TSRMLS_FETCH		477478	0					
ANR	477492	Identifier	TSRMLS_FETCH		477478	0					
ANR	477493	ArgumentList			477478	1					
ANR	477494	ExpressionStatement	"va_start ( args , format )"	79:1:1314:1336	477478	3	True				
ANR	477495	CallExpression	"va_start ( args , format )"		477478	0					
ANR	477496	Callee	va_start		477478	0					
ANR	477497	Identifier	va_start		477478	0					
ANR	477498	ArgumentList	args		477478	1					
ANR	477499	Argument	args		477478	0					
ANR	477500	Identifier	args		477478	0					
ANR	477501	Argument	format		477478	1					
ANR	477502	Identifier	format		477478	0					
ANR	477503	ExpressionStatement	"vspprintf ( & tmp , 0 , format , args )"	80:1:1339:1371	477478	4	True				
ANR	477504	CallExpression	"vspprintf ( & tmp , 0 , format , args )"		477478	0					
ANR	477505	Callee	vspprintf		477478	0					
ANR	477506	Identifier	vspprintf		477478	0					
ANR	477507	ArgumentList	& tmp		477478	1					
ANR	477508	Argument	& tmp		477478	0					
ANR	477509	UnaryOperationExpression	& tmp		477478	0					
ANR	477510	UnaryOperator	&		477478	0					
ANR	477511	Identifier	tmp		477478	1					
ANR	477512	Argument	0		477478	1					
ANR	477513	PrimaryExpression	0		477478	0					
ANR	477514	Argument	format		477478	2					
ANR	477515	Identifier	format		477478	0					
ANR	477516	Argument	args		477478	3					
ANR	477517	Identifier	args		477478	0					
ANR	477518	ExpressionStatement	va_end ( args )	81:1:1374:1386	477478	5	True				
ANR	477519	CallExpression	va_end ( args )		477478	0					
ANR	477520	Callee	va_end		477478	0					
ANR	477521	Identifier	va_end		477478	0					
ANR	477522	ArgumentList	args		477478	1					
ANR	477523	Argument	args		477478	0					
ANR	477524	Identifier	args		477478	0					
ANR	477525	Statement	php_error_docref	82:1:1389:1404	477478	6	True				
ANR	477526	Statement	(	82:17:1405:1405	477478	7	True				
ANR	477527	Statement	NULL	82:18:1406:1409	477478	8	True				
ANR	477528	Statement	TSRMLS_CC	82:23:1411:1419	477478	9	True				
ANR	477529	Statement	","	82:32:1420:1420	477478	10	True				
ANR	477530	Statement	E_WARNING	82:34:1422:1430	477478	11	True				
ANR	477531	Statement	","	82:43:1431:1431	477478	12	True				
ANR	477532	Statement	"""%s: %s"""	82:45:1433:1440	477478	13	True				
ANR	477533	Statement	","	82:53:1441:1441	477478	14	True				
ANR	477534	Statement	LIBNAME	82:55:1443:1449	477478	15	True				
ANR	477535	Statement	","	82:62:1450:1450	477478	16	True				
ANR	477536	Statement	tmp	82:64:1452:1454	477478	17	True				
ANR	477537	Statement	)	82:67:1455:1455	477478	18	True				
ANR	477538	ExpressionStatement		82:68:1456:1456	477478	19	True				
ANR	477539	ExpressionStatement	efree ( tmp )	83:1:1459:1469	477478	20	True				
ANR	477540	CallExpression	efree ( tmp )		477478	0					
ANR	477541	Callee	efree		477478	0					
ANR	477542	Identifier	efree		477478	0					
ANR	477543	ArgumentList	tmp		477478	1					
ANR	477544	Argument	tmp		477478	0					
ANR	477545	Identifier	tmp		477478	0					
ANR	477546	ReturnType	static void		477478	1					
ANR	477547	Identifier	error		477478	2					
ANR	477548	ParameterList	const char * format		477478	3					
ANR	477549	Parameter	const char * format	73:7:1242:1259	477478	0	True				
ANR	477550	ParameterType	const char *		477478	0					
ANR	477551	Identifier	format		477478	1					
ANR	477552	CFGEntryNode	ENTRY		477478		True				
ANR	477553	CFGExitNode	EXIT		477478		True				
ANR	477554	Symbol	args		477478						
ANR	477555	Symbol	tmp		477478						
ANR	477556	Symbol	format		477478						
ANR	477557	Symbol	& tmp		477478						
ANR	477558	Function	DetectKanjiCode	88:0:1543:4417							
ANR	477559	FunctionDef	DetectKanjiCode (unsigned char * str)		477558	0					
ANR	477560	CompoundStatement		90:0:1591:4417	477558	0					
ANR	477561	Statement	static	91:2:1595:1600	477558	0	True				
ANR	477562	IdentifierDeclStatement	int whatcode = ASCII ;	91:9:1602:1622	477558	1	True				
ANR	477563	IdentifierDecl	whatcode = ASCII		477558	0					
ANR	477564	IdentifierDeclType	int		477558	0					
ANR	477565	Identifier	whatcode		477558	1					
ANR	477566	AssignmentExpression	whatcode = ASCII		477558	2		=			
ANR	477567	Identifier	ASCII		477558	0					
ANR	477568	Identifier	ASCII		477558	1					
ANR	477569	IdentifierDeclStatement	int oldcode = ASCII ;	92:2:1626:1645	477558	2	True				
ANR	477570	IdentifierDecl	oldcode = ASCII		477558	0					
ANR	477571	IdentifierDeclType	int		477558	0					
ANR	477572	Identifier	oldcode		477558	1					
ANR	477573	AssignmentExpression	oldcode = ASCII		477558	2		=			
ANR	477574	Identifier	ASCII		477558	0					
ANR	477575	Identifier	ASCII		477558	1					
ANR	477576	IdentifierDeclStatement	"int c , i ;"	93:2:1649:1657	477558	3	True				
ANR	477577	IdentifierDecl	c		477558	0					
ANR	477578	IdentifierDeclType	int		477558	0					
ANR	477579	Identifier	c		477558	1					
ANR	477580	IdentifierDecl	i		477558	1					
ANR	477581	IdentifierDeclType	int		477558	0					
ANR	477582	Identifier	i		477558	1					
ANR	477583	IdentifierDeclStatement	char * lang = NULL ;	94:2:1661:1678	477558	4	True				
ANR	477584	IdentifierDecl	* lang = NULL		477558	0					
ANR	477585	IdentifierDeclType	char *		477558	0					
ANR	477586	Identifier	lang		477558	1					
ANR	477587	AssignmentExpression	* lang = NULL		477558	2		=			
ANR	477588	Identifier	NULL		477558	0					
ANR	477589	Identifier	NULL		477558	1					
ANR	477590	ExpressionStatement	c = '\\1'	96:2:1683:1691	477558	5	True				
ANR	477591	AssignmentExpression	c = '\\1'		477558	0		=			
ANR	477592	Identifier	c		477558	0					
ANR	477593	PrimaryExpression	'\\1'		477558	1					
ANR	477594	ExpressionStatement	i = 0	97:2:1695:1700	477558	6	True				
ANR	477595	AssignmentExpression	i = 0		477558	0		=			
ANR	477596	Identifier	i		477558	0					
ANR	477597	PrimaryExpression	0		477558	1					
ANR	477598	IfStatement	if ( whatcode != EUCORSJIS && whatcode != ASCII )		477558	7					
ANR	477599	Condition	whatcode != EUCORSJIS && whatcode != ASCII	99:6:1709:1750	477558	0	True				
ANR	477600	AndExpression	whatcode != EUCORSJIS && whatcode != ASCII		477558	0		&&			
ANR	477601	EqualityExpression	whatcode != EUCORSJIS		477558	0		!=			
ANR	477602	Identifier	whatcode		477558	0					
ANR	477603	Identifier	EUCORSJIS		477558	1					
ANR	477604	EqualityExpression	whatcode != ASCII		477558	1		!=			
ANR	477605	Identifier	whatcode		477558	0					
ANR	477606	Identifier	ASCII		477558	1					
ANR	477607	CompoundStatement		11:4:165:165	477558	1					
ANR	477608	ExpressionStatement	oldcode = whatcode	101:6:1765:1783	477558	0	True				
ANR	477609	AssignmentExpression	oldcode = whatcode		477558	0		=			
ANR	477610	Identifier	oldcode		477558	0					
ANR	477611	Identifier	whatcode		477558	1					
ANR	477612	ExpressionStatement	whatcode = ASCII	102:6:1791:1807	477558	1	True				
ANR	477613	AssignmentExpression	whatcode = ASCII		477558	0		=			
ANR	477614	Identifier	whatcode		477558	0					
ANR	477615	Identifier	ASCII		477558	1					
ANR	477616	WhileStatement	while ( ( whatcode == EUCORSJIS || whatcode == ASCII ) && c != '\\0' )		477558	8					
ANR	477617	Condition	( whatcode == EUCORSJIS || whatcode == ASCII ) && c != '\\0'	105:9:1825:1881	477558	0	True				
ANR	477618	AndExpression	( whatcode == EUCORSJIS || whatcode == ASCII ) && c != '\\0'		477558	0		&&			
ANR	477619	OrExpression	whatcode == EUCORSJIS || whatcode == ASCII		477558	0		||			
ANR	477620	EqualityExpression	whatcode == EUCORSJIS		477558	0		==			
ANR	477621	Identifier	whatcode		477558	0					
ANR	477622	Identifier	EUCORSJIS		477558	1					
ANR	477623	EqualityExpression	whatcode == ASCII		477558	1		==			
ANR	477624	Identifier	whatcode		477558	0					
ANR	477625	Identifier	ASCII		477558	1					
ANR	477626	EqualityExpression	c != '\\0'		477558	1		!=			
ANR	477627	Identifier	c		477558	0					
ANR	477628	PrimaryExpression	'\\0'		477558	1					
ANR	477629	CompoundStatement		17:4:296:296	477558	1					
ANR	477630	IfStatement	if ( ( c = str [ i ++ ] ) != '\\0' )		477558	0					
ANR	477631	Condition	( c = str [ i ++ ] ) != '\\0'	107:10:1900:1921	477558	0	True				
ANR	477632	EqualityExpression	( c = str [ i ++ ] ) != '\\0'		477558	0		!=			
ANR	477633	AssignmentExpression	c = str [ i ++ ]		477558	0		=			
ANR	477634	Identifier	c		477558	0					
ANR	477635	ArrayIndexing	str [ i ++ ]		477558	1					
ANR	477636	Identifier	str		477558	0					
ANR	477637	PostIncDecOperationExpression	i ++		477558	1					
ANR	477638	Identifier	i		477558	0					
ANR	477639	IncDec	++		477558	1					
ANR	477640	PrimaryExpression	'\\0'		477558	1					
ANR	477641	CompoundStatement		19:1:333:333	477558	1					
ANR	477642	IfStatement	if ( c == ESC )		477558	0					
ANR	477643	Condition	c == ESC	109:7:1934:1941	477558	0	True				
ANR	477644	EqualityExpression	c == ESC		477558	0		==			
ANR	477645	Identifier	c		477558	0					
ANR	477646	Identifier	ESC		477558	1					
ANR	477647	CompoundStatement		21:5:357:357	477558	1					
ANR	477648	ExpressionStatement	c = str [ i ++ ]	111:7:1958:1970	477558	0	True				
ANR	477649	AssignmentExpression	c = str [ i ++ ]		477558	0		=			
ANR	477650	Identifier	c		477558	0					
ANR	477651	ArrayIndexing	str [ i ++ ]		477558	1					
ANR	477652	Identifier	str		477558	0					
ANR	477653	PostIncDecOperationExpression	i ++		477558	1					
ANR	477654	Identifier	i		477558	0					
ANR	477655	IncDec	++		477558	1					
ANR	477656	IfStatement	if ( c == '$' )		477558	1					
ANR	477657	Condition	c == '$'	112:11:1983:1990	477558	0	True				
ANR	477658	EqualityExpression	c == '$'		477558	0		==			
ANR	477659	Identifier	c		477558	0					
ANR	477660	PrimaryExpression	'$'		477558	1					
ANR	477661	CompoundStatement		24:2:403:403	477558	1					
ANR	477662	ExpressionStatement	c = str [ i ++ ]	114:4:2001:2013	477558	0	True				
ANR	477663	AssignmentExpression	c = str [ i ++ ]		477558	0		=			
ANR	477664	Identifier	c		477558	0					
ANR	477665	ArrayIndexing	str [ i ++ ]		477558	1					
ANR	477666	Identifier	str		477558	0					
ANR	477667	PostIncDecOperationExpression	i ++		477558	1					
ANR	477668	Identifier	i		477558	0					
ANR	477669	IncDec	++		477558	1					
ANR	477670	IfStatement	if ( c == 'B' )		477558	1					
ANR	477671	Condition	c == 'B'	115:8:2023:2030	477558	0	True				
ANR	477672	EqualityExpression	c == 'B'		477558	0		==			
ANR	477673	Identifier	c		477558	0					
ANR	477674	PrimaryExpression	'B'		477558	1					
ANR	477675	ExpressionStatement	whatcode = NEW	116:6:2039:2053	477558	1	True				
ANR	477676	AssignmentExpression	whatcode = NEW		477558	0		=			
ANR	477677	Identifier	whatcode		477558	0					
ANR	477678	Identifier	NEW		477558	1					
ANR	477679	ElseStatement	else		477558	0					
ANR	477680	IfStatement	if ( c == '@' )		477558	0					
ANR	477681	Condition	c == '@'	117:13:2068:2075	477558	0	True				
ANR	477682	EqualityExpression	c == '@'		477558	0		==			
ANR	477683	Identifier	c		477558	0					
ANR	477684	PrimaryExpression	'@'		477558	1					
ANR	477685	ExpressionStatement	whatcode = OLD	118:6:2084:2098	477558	1	True				
ANR	477686	AssignmentExpression	whatcode = OLD		477558	0		=			
ANR	477687	Identifier	whatcode		477558	0					
ANR	477688	Identifier	OLD		477558	1					
ANR	477689	ElseStatement	else		477558	0					
ANR	477690	IfStatement	if ( c == '(' )		477558	0					
ANR	477691	Condition	c == '('	120:16:2120:2127	477558	0	True				
ANR	477692	EqualityExpression	c == '('		477558	0		==			
ANR	477693	Identifier	c		477558	0					
ANR	477694	PrimaryExpression	'('		477558	1					
ANR	477695	CompoundStatement		32:2:540:540	477558	1					
ANR	477696	ExpressionStatement	c = str [ i ++ ]	122:4:2138:2150	477558	0	True				
ANR	477697	AssignmentExpression	c = str [ i ++ ]		477558	0		=			
ANR	477698	Identifier	c		477558	0					
ANR	477699	ArrayIndexing	str [ i ++ ]		477558	1					
ANR	477700	Identifier	str		477558	0					
ANR	477701	PostIncDecOperationExpression	i ++		477558	1					
ANR	477702	Identifier	i		477558	0					
ANR	477703	IncDec	++		477558	1					
ANR	477704	IfStatement	if ( c == 'I' )		477558	1					
ANR	477705	Condition	c == 'I'	123:8:2160:2167	477558	0	True				
ANR	477706	EqualityExpression	c == 'I'		477558	0		==			
ANR	477707	Identifier	c		477558	0					
ANR	477708	PrimaryExpression	'I'		477558	1					
ANR	477709	ExpressionStatement	whatcode = ESCI	124:6:2176:2191	477558	1	True				
ANR	477710	AssignmentExpression	whatcode = ESCI		477558	0		=			
ANR	477711	Identifier	whatcode		477558	0					
ANR	477712	Identifier	ESCI		477558	1					
ANR	477713	ElseStatement	else		477558	0					
ANR	477714	IfStatement	if ( c == 'K' )		477558	0					
ANR	477715	Condition	c == 'K'	126:16:2213:2220	477558	0	True				
ANR	477716	EqualityExpression	c == 'K'		477558	0		==			
ANR	477717	Identifier	c		477558	0					
ANR	477718	PrimaryExpression	'K'		477558	1					
ANR	477719	ExpressionStatement	whatcode = NEC	127:2:2225:2239	477558	1	True				
ANR	477720	AssignmentExpression	whatcode = NEC		477558	0		=			
ANR	477721	Identifier	whatcode		477558	0					
ANR	477722	Identifier	NEC		477558	1					
ANR	477723	ElseStatement	else		477558	0					
ANR	477724	IfStatement	if ( ( c >= 129 && c <= 141 ) || ( c >= 143 && c <= 159 ) )		477558	0					
ANR	477725	Condition	( c >= 129 && c <= 141 ) || ( c >= 143 && c <= 159 )	129:12:2260:2307	477558	0	True				
ANR	477726	OrExpression	( c >= 129 && c <= 141 ) || ( c >= 143 && c <= 159 )		477558	0		||			
ANR	477727	AndExpression	c >= 129 && c <= 141		477558	0		&&			
ANR	477728	RelationalExpression	c >= 129		477558	0		>=			
ANR	477729	Identifier	c		477558	0					
ANR	477730	PrimaryExpression	129		477558	1					
ANR	477731	RelationalExpression	c <= 141		477558	1		<=			
ANR	477732	Identifier	c		477558	0					
ANR	477733	PrimaryExpression	141		477558	1					
ANR	477734	AndExpression	c >= 143 && c <= 159		477558	1		&&			
ANR	477735	RelationalExpression	c >= 143		477558	0		>=			
ANR	477736	Identifier	c		477558	0					
ANR	477737	PrimaryExpression	143		477558	1					
ANR	477738	RelationalExpression	c <= 159		477558	1		<=			
ANR	477739	Identifier	c		477558	0					
ANR	477740	PrimaryExpression	159		477558	1					
ANR	477741	ExpressionStatement	whatcode = SJIS	130:5:2315:2330	477558	1	True				
ANR	477742	AssignmentExpression	whatcode = SJIS		477558	0		=			
ANR	477743	Identifier	whatcode		477558	0					
ANR	477744	Identifier	SJIS		477558	1					
ANR	477745	ElseStatement	else		477558	0					
ANR	477746	IfStatement	if ( c == SS2 )		477558	0					
ANR	477747	Condition	c == SS2	131:12:2344:2351	477558	0	True				
ANR	477748	EqualityExpression	c == SS2		477558	0		==			
ANR	477749	Identifier	c		477558	0					
ANR	477750	Identifier	SS2		477558	1					
ANR	477751	CompoundStatement		43:5:767:767	477558	1					
ANR	477752	ExpressionStatement	c = str [ i ++ ]	133:7:2368:2380	477558	0	True				
ANR	477753	AssignmentExpression	c = str [ i ++ ]		477558	0		=			
ANR	477754	Identifier	c		477558	0					
ANR	477755	ArrayIndexing	str [ i ++ ]		477558	1					
ANR	477756	Identifier	str		477558	0					
ANR	477757	PostIncDecOperationExpression	i ++		477558	1					
ANR	477758	Identifier	i		477558	0					
ANR	477759	IncDec	++		477558	1					
ANR	477760	IfStatement	if ( ( c >= 64 && c <= 126 ) || ( c >= 128 && c <= 160 ) || ( c >= 224 && c <= 252 ) )		477558	1					
ANR	477761	Condition	( c >= 64 && c <= 126 ) || ( c >= 128 && c <= 160 ) || ( c >= 224 && c <= 252 )	134:11:2393:2465	477558	0	True				
ANR	477762	OrExpression	( c >= 64 && c <= 126 ) || ( c >= 128 && c <= 160 ) || ( c >= 224 && c <= 252 )		477558	0		||			
ANR	477763	AndExpression	c >= 64 && c <= 126		477558	0		&&			
ANR	477764	RelationalExpression	c >= 64		477558	0		>=			
ANR	477765	Identifier	c		477558	0					
ANR	477766	PrimaryExpression	64		477558	1					
ANR	477767	RelationalExpression	c <= 126		477558	1		<=			
ANR	477768	Identifier	c		477558	0					
ANR	477769	PrimaryExpression	126		477558	1					
ANR	477770	OrExpression	( c >= 128 && c <= 160 ) || ( c >= 224 && c <= 252 )		477558	1		||			
ANR	477771	AndExpression	c >= 128 && c <= 160		477558	0		&&			
ANR	477772	RelationalExpression	c >= 128		477558	0		>=			
ANR	477773	Identifier	c		477558	0					
ANR	477774	PrimaryExpression	128		477558	1					
ANR	477775	RelationalExpression	c <= 160		477558	1		<=			
ANR	477776	Identifier	c		477558	0					
ANR	477777	PrimaryExpression	160		477558	1					
ANR	477778	AndExpression	c >= 224 && c <= 252		477558	1		&&			
ANR	477779	RelationalExpression	c >= 224		477558	0		>=			
ANR	477780	Identifier	c		477558	0					
ANR	477781	PrimaryExpression	224		477558	1					
ANR	477782	RelationalExpression	c <= 252		477558	1		<=			
ANR	477783	Identifier	c		477558	0					
ANR	477784	PrimaryExpression	252		477558	1					
ANR	477785	ExpressionStatement	whatcode = SJIS	135:2:2470:2485	477558	1	True				
ANR	477786	AssignmentExpression	whatcode = SJIS		477558	0		=			
ANR	477787	Identifier	whatcode		477558	0					
ANR	477788	Identifier	SJIS		477558	1					
ANR	477789	ElseStatement	else		477558	0					
ANR	477790	IfStatement	if ( c >= 161 && c <= 223 )		477558	0					
ANR	477791	Condition	c >= 161 && c <= 223	136:16:2503:2522	477558	0	True				
ANR	477792	AndExpression	c >= 161 && c <= 223		477558	0		&&			
ANR	477793	RelationalExpression	c >= 161		477558	0		>=			
ANR	477794	Identifier	c		477558	0					
ANR	477795	PrimaryExpression	161		477558	1					
ANR	477796	RelationalExpression	c <= 223		477558	1		<=			
ANR	477797	Identifier	c		477558	0					
ANR	477798	PrimaryExpression	223		477558	1					
ANR	477799	ExpressionStatement	whatcode = EUCORSJIS	137:2:2527:2547	477558	1	True				
ANR	477800	AssignmentExpression	whatcode = EUCORSJIS		477558	0		=			
ANR	477801	Identifier	whatcode		477558	0					
ANR	477802	Identifier	EUCORSJIS		477558	1					
ANR	477803	ElseStatement	else		477558	0					
ANR	477804	IfStatement	if ( c >= 161 && c <= 223 )		477558	0					
ANR	477805	Condition	c >= 161 && c <= 223	139:12:2568:2587	477558	0	True				
ANR	477806	AndExpression	c >= 161 && c <= 223		477558	0		&&			
ANR	477807	RelationalExpression	c >= 161		477558	0		>=			
ANR	477808	Identifier	c		477558	0					
ANR	477809	PrimaryExpression	161		477558	1					
ANR	477810	RelationalExpression	c <= 223		477558	1		<=			
ANR	477811	Identifier	c		477558	0					
ANR	477812	PrimaryExpression	223		477558	1					
ANR	477813	CompoundStatement		51:5:1003:1003	477558	1					
ANR	477814	ExpressionStatement	c = str [ i ++ ]	141:7:2604:2616	477558	0	True				
ANR	477815	AssignmentExpression	c = str [ i ++ ]		477558	0		=			
ANR	477816	Identifier	c		477558	0					
ANR	477817	ArrayIndexing	str [ i ++ ]		477558	1					
ANR	477818	Identifier	str		477558	0					
ANR	477819	PostIncDecOperationExpression	i ++		477558	1					
ANR	477820	Identifier	i		477558	0					
ANR	477821	IncDec	++		477558	1					
ANR	477822	IfStatement	if ( c >= 240 && c <= 254 )		477558	1					
ANR	477823	Condition	c >= 240 && c <= 254	142:11:2629:2648	477558	0	True				
ANR	477824	AndExpression	c >= 240 && c <= 254		477558	0		&&			
ANR	477825	RelationalExpression	c >= 240		477558	0		>=			
ANR	477826	Identifier	c		477558	0					
ANR	477827	PrimaryExpression	240		477558	1					
ANR	477828	RelationalExpression	c <= 254		477558	1		<=			
ANR	477829	Identifier	c		477558	0					
ANR	477830	PrimaryExpression	254		477558	1					
ANR	477831	ExpressionStatement	whatcode = EUC	143:2:2653:2667	477558	1	True				
ANR	477832	AssignmentExpression	whatcode = EUC		477558	0		=			
ANR	477833	Identifier	whatcode		477558	0					
ANR	477834	Identifier	EUC		477558	1					
ANR	477835	ElseStatement	else		477558	0					
ANR	477836	IfStatement	if ( c >= 161 && c <= 223 )		477558	0					
ANR	477837	Condition	c >= 161 && c <= 223	144:16:2685:2704	477558	0	True				
ANR	477838	AndExpression	c >= 161 && c <= 223		477558	0		&&			
ANR	477839	RelationalExpression	c >= 161		477558	0		>=			
ANR	477840	Identifier	c		477558	0					
ANR	477841	PrimaryExpression	161		477558	1					
ANR	477842	RelationalExpression	c <= 223		477558	1		<=			
ANR	477843	Identifier	c		477558	0					
ANR	477844	PrimaryExpression	223		477558	1					
ANR	477845	ExpressionStatement	whatcode = EUCORSJIS	145:2:2709:2729	477558	1	True				
ANR	477846	AssignmentExpression	whatcode = EUCORSJIS		477558	0		=			
ANR	477847	Identifier	whatcode		477558	0					
ANR	477848	Identifier	EUCORSJIS		477558	1					
ANR	477849	ElseStatement	else		477558	0					
ANR	477850	IfStatement	if ( c >= 224 && c <= 239 )		477558	0					
ANR	477851	Condition	c >= 224 && c <= 239	146:16:2747:2766	477558	0	True				
ANR	477852	AndExpression	c >= 224 && c <= 239		477558	0		&&			
ANR	477853	RelationalExpression	c >= 224		477558	0		>=			
ANR	477854	Identifier	c		477558	0					
ANR	477855	PrimaryExpression	224		477558	1					
ANR	477856	RelationalExpression	c <= 239		477558	1		<=			
ANR	477857	Identifier	c		477558	0					
ANR	477858	PrimaryExpression	239		477558	1					
ANR	477859	CompoundStatement		58:2:1179:1179	477558	1					
ANR	477860	ExpressionStatement	whatcode = EUCORSJIS	148:4:2777:2797	477558	0	True				
ANR	477861	AssignmentExpression	whatcode = EUCORSJIS		477558	0		=			
ANR	477862	Identifier	whatcode		477558	0					
ANR	477863	Identifier	EUCORSJIS		477558	1					
ANR	477864	WhileStatement	while ( c >= 64 && c != '\\0' && whatcode == EUCORSJIS )		477558	1					
ANR	477865	Condition	c >= 64 && c != '\\0' && whatcode == EUCORSJIS	149:11:2810:2854	477558	0	True				
ANR	477866	AndExpression	c >= 64 && c != '\\0' && whatcode == EUCORSJIS		477558	0		&&			
ANR	477867	RelationalExpression	c >= 64		477558	0		>=			
ANR	477868	Identifier	c		477558	0					
ANR	477869	PrimaryExpression	64		477558	1					
ANR	477870	AndExpression	c != '\\0' && whatcode == EUCORSJIS		477558	1		&&			
ANR	477871	EqualityExpression	c != '\\0'		477558	0		!=			
ANR	477872	Identifier	c		477558	0					
ANR	477873	PrimaryExpression	'\\0'		477558	1					
ANR	477874	EqualityExpression	whatcode == EUCORSJIS		477558	1		==			
ANR	477875	Identifier	whatcode		477558	0					
ANR	477876	Identifier	EUCORSJIS		477558	1					
ANR	477877	CompoundStatement		61:6:1271:1271	477558	1					
ANR	477878	IfStatement	if ( c >= 129 )		477558	0					
ANR	477879	Condition	c >= 129	151:12:2877:2884	477558	0	True				
ANR	477880	RelationalExpression	c >= 129		477558	0		>=			
ANR	477881	Identifier	c		477558	0					
ANR	477882	PrimaryExpression	129		477558	1					
ANR	477883	CompoundStatement		63:3:1298:1298	477558	1					
ANR	477884	IfStatement	if ( c <= 141 || ( c >= 143 && c <= 159 ) )		477558	0					
ANR	477885	Condition	c <= 141 || ( c >= 143 && c <= 159 )	153:9:2901:2934	477558	0	True				
ANR	477886	OrExpression	c <= 141 || ( c >= 143 && c <= 159 )		477558	0		||			
ANR	477887	RelationalExpression	c <= 141		477558	0		<=			
ANR	477888	Identifier	c		477558	0					
ANR	477889	PrimaryExpression	141		477558	1					
ANR	477890	AndExpression	c >= 143 && c <= 159		477558	1		&&			
ANR	477891	RelationalExpression	c >= 143		477558	0		>=			
ANR	477892	Identifier	c		477558	0					
ANR	477893	PrimaryExpression	143		477558	1					
ANR	477894	RelationalExpression	c <= 159		477558	1		<=			
ANR	477895	Identifier	c		477558	0					
ANR	477896	PrimaryExpression	159		477558	1					
ANR	477897	ExpressionStatement	whatcode = SJIS	154:7:2944:2959	477558	1	True				
ANR	477898	AssignmentExpression	whatcode = SJIS		477558	0		=			
ANR	477899	Identifier	whatcode		477558	0					
ANR	477900	Identifier	SJIS		477558	1					
ANR	477901	ElseStatement	else		477558	0					
ANR	477902	IfStatement	if ( c >= 253 && c <= 254 )		477558	0					
ANR	477903	Condition	c >= 253 && c <= 254	155:14:2975:2994	477558	0	True				
ANR	477904	AndExpression	c >= 253 && c <= 254		477558	0		&&			
ANR	477905	RelationalExpression	c >= 253		477558	0		>=			
ANR	477906	Identifier	c		477558	0					
ANR	477907	PrimaryExpression	253		477558	1					
ANR	477908	RelationalExpression	c <= 254		477558	1		<=			
ANR	477909	Identifier	c		477558	0					
ANR	477910	PrimaryExpression	254		477558	1					
ANR	477911	ExpressionStatement	whatcode = EUC	156:7:3004:3018	477558	1	True				
ANR	477912	AssignmentExpression	whatcode = EUC		477558	0		=			
ANR	477913	Identifier	whatcode		477558	0					
ANR	477914	Identifier	EUC		477558	1					
ANR	477915	ExpressionStatement	c = str [ i ++ ]	158:8:3033:3045	477558	1	True				
ANR	477916	AssignmentExpression	c = str [ i ++ ]		477558	0		=			
ANR	477917	Identifier	c		477558	0					
ANR	477918	ArrayIndexing	str [ i ++ ]		477558	1					
ANR	477919	Identifier	str		477558	0					
ANR	477920	PostIncDecOperationExpression	i ++		477558	1					
ANR	477921	Identifier	i		477558	0					
ANR	477922	IncDec	++		477558	1					
ANR	477923	ElseStatement	else		477558	0					
ANR	477924	IfStatement	if ( c <= 159 )		477558	0					
ANR	477925	Condition	c <= 159	161:16:3075:3082	477558	0	True				
ANR	477926	RelationalExpression	c <= 159		477558	0		<=			
ANR	477927	Identifier	c		477558	0					
ANR	477928	PrimaryExpression	159		477558	1					
ANR	477929	ExpressionStatement	whatcode = SJIS	162:2:3087:3102	477558	1	True				
ANR	477930	AssignmentExpression	whatcode = SJIS		477558	0		=			
ANR	477931	Identifier	whatcode		477558	0					
ANR	477932	Identifier	SJIS		477558	1					
ANR	477933	ElseStatement	else		477558	0					
ANR	477934	IfStatement	if ( c >= 240 && c <= 254 )		477558	0					
ANR	477935	Condition	c >= 240 && c <= 254	164:12:3123:3142	477558	0	True				
ANR	477936	AndExpression	c >= 240 && c <= 254		477558	0		&&			
ANR	477937	RelationalExpression	c >= 240		477558	0		>=			
ANR	477938	Identifier	c		477558	0					
ANR	477939	PrimaryExpression	240		477558	1					
ANR	477940	RelationalExpression	c <= 254		477558	1		<=			
ANR	477941	Identifier	c		477558	0					
ANR	477942	PrimaryExpression	254		477558	1					
ANR	477943	ExpressionStatement	whatcode = EUC	165:5:3150:3164	477558	1	True				
ANR	477944	AssignmentExpression	whatcode = EUC		477558	0		=			
ANR	477945	Identifier	whatcode		477558	0					
ANR	477946	Identifier	EUC		477558	1					
ANR	477947	ElseStatement	else		477558	0					
ANR	477948	IfStatement	if ( c >= 224 && c <= 239 )		477558	0					
ANR	477949	Condition	c >= 224 && c <= 239	166:12:3178:3197	477558	0	True				
ANR	477950	AndExpression	c >= 224 && c <= 239		477558	0		&&			
ANR	477951	RelationalExpression	c >= 224		477558	0		>=			
ANR	477952	Identifier	c		477558	0					
ANR	477953	PrimaryExpression	224		477558	1					
ANR	477954	RelationalExpression	c <= 239		477558	1		<=			
ANR	477955	Identifier	c		477558	0					
ANR	477956	PrimaryExpression	239		477558	1					
ANR	477957	CompoundStatement		78:5:1613:1613	477558	1					
ANR	477958	ExpressionStatement	c = str [ i ++ ]	168:7:3214:3226	477558	0	True				
ANR	477959	AssignmentExpression	c = str [ i ++ ]		477558	0		=			
ANR	477960	Identifier	c		477558	0					
ANR	477961	ArrayIndexing	str [ i ++ ]		477558	1					
ANR	477962	Identifier	str		477558	0					
ANR	477963	PostIncDecOperationExpression	i ++		477558	1					
ANR	477964	Identifier	i		477558	0					
ANR	477965	IncDec	++		477558	1					
ANR	477966	IfStatement	if ( ( c >= 64 && c <= 126 ) || ( c >= 128 && c <= 160 ) )		477558	1					
ANR	477967	Condition	( c >= 64 && c <= 126 ) || ( c >= 128 && c <= 160 )	169:11:3239:3285	477558	0	True				
ANR	477968	OrExpression	( c >= 64 && c <= 126 ) || ( c >= 128 && c <= 160 )		477558	0		||			
ANR	477969	AndExpression	c >= 64 && c <= 126		477558	0		&&			
ANR	477970	RelationalExpression	c >= 64		477558	0		>=			
ANR	477971	Identifier	c		477558	0					
ANR	477972	PrimaryExpression	64		477558	1					
ANR	477973	RelationalExpression	c <= 126		477558	1		<=			
ANR	477974	Identifier	c		477558	0					
ANR	477975	PrimaryExpression	126		477558	1					
ANR	477976	AndExpression	c >= 128 && c <= 160		477558	1		&&			
ANR	477977	RelationalExpression	c >= 128		477558	0		>=			
ANR	477978	Identifier	c		477558	0					
ANR	477979	PrimaryExpression	128		477558	1					
ANR	477980	RelationalExpression	c <= 160		477558	1		<=			
ANR	477981	Identifier	c		477558	0					
ANR	477982	PrimaryExpression	160		477558	1					
ANR	477983	ExpressionStatement	whatcode = SJIS	170:2:3290:3305	477558	1	True				
ANR	477984	AssignmentExpression	whatcode = SJIS		477558	0		=			
ANR	477985	Identifier	whatcode		477558	0					
ANR	477986	Identifier	SJIS		477558	1					
ANR	477987	ElseStatement	else		477558	0					
ANR	477988	IfStatement	if ( c >= 253 && c <= 254 )		477558	0					
ANR	477989	Condition	c >= 253 && c <= 254	171:16:3323:3342	477558	0	True				
ANR	477990	AndExpression	c >= 253 && c <= 254		477558	0		&&			
ANR	477991	RelationalExpression	c >= 253		477558	0		>=			
ANR	477992	Identifier	c		477558	0					
ANR	477993	PrimaryExpression	253		477558	1					
ANR	477994	RelationalExpression	c <= 254		477558	1		<=			
ANR	477995	Identifier	c		477558	0					
ANR	477996	PrimaryExpression	254		477558	1					
ANR	477997	ExpressionStatement	whatcode = EUC	172:2:3347:3361	477558	1	True				
ANR	477998	AssignmentExpression	whatcode = EUC		477558	0		=			
ANR	477999	Identifier	whatcode		477558	0					
ANR	478000	Identifier	EUC		477558	1					
ANR	478001	ElseStatement	else		477558	0					
ANR	478002	IfStatement	if ( c >= 161 && c <= 252 )		477558	0					
ANR	478003	Condition	c >= 161 && c <= 252	173:16:3379:3398	477558	0	True				
ANR	478004	AndExpression	c >= 161 && c <= 252		477558	0		&&			
ANR	478005	RelationalExpression	c >= 161		477558	0		>=			
ANR	478006	Identifier	c		477558	0					
ANR	478007	PrimaryExpression	161		477558	1					
ANR	478008	RelationalExpression	c <= 252		477558	1		<=			
ANR	478009	Identifier	c		477558	0					
ANR	478010	PrimaryExpression	252		477558	1					
ANR	478011	ExpressionStatement	whatcode = EUCORSJIS	174:2:3403:3423	477558	1	True				
ANR	478012	AssignmentExpression	whatcode = EUCORSJIS		477558	0		=			
ANR	478013	Identifier	whatcode		477558	0					
ANR	478014	Identifier	EUCORSJIS		477558	1					
ANR	478015	IfStatement	if ( whatcode == ASCII )		477558	9					
ANR	478016	Condition	whatcode == ASCII	180:6:3461:3477	477558	0	True				
ANR	478017	EqualityExpression	whatcode == ASCII		477558	0		==			
ANR	478018	Identifier	whatcode		477558	0					
ANR	478019	Identifier	ASCII		477558	1					
ANR	478020	ExpressionStatement	"debug ( ""Kanji code not included."" )"	181:4:3484:3518	477558	1	True				
ANR	478021	CallExpression	"debug ( ""Kanji code not included."" )"		477558	0					
ANR	478022	Callee	debug		477558	0					
ANR	478023	Identifier	debug		477558	0					
ANR	478024	ArgumentList	"""Kanji code not included."""		477558	1					
ANR	478025	Argument	"""Kanji code not included."""		477558	0					
ANR	478026	PrimaryExpression	"""Kanji code not included."""		477558	0					
ANR	478027	ElseStatement	else		477558	0					
ANR	478028	IfStatement	if ( whatcode == EUCORSJIS )		477558	0					
ANR	478029	Condition	whatcode == EUCORSJIS	182:11:3531:3551	477558	0	True				
ANR	478030	EqualityExpression	whatcode == EUCORSJIS		477558	0		==			
ANR	478031	Identifier	whatcode		477558	0					
ANR	478032	Identifier	EUCORSJIS		477558	1					
ANR	478033	ExpressionStatement	"debug ( ""Kanji code not detected."" )"	183:4:3558:3592	477558	1	True				
ANR	478034	CallExpression	"debug ( ""Kanji code not detected."" )"		477558	0					
ANR	478035	Callee	debug		477558	0					
ANR	478036	Identifier	debug		477558	0					
ANR	478037	ArgumentList	"""Kanji code not detected."""		477558	1					
ANR	478038	Argument	"""Kanji code not detected."""		477558	0					
ANR	478039	PrimaryExpression	"""Kanji code not detected."""		477558	0					
ANR	478040	ElseStatement	else		477558	0					
ANR	478041	ExpressionStatement	"debug ( ""Kanji code detected at %d byte."" , i )"	185:4:3605:3649	477558	0	True				
ANR	478042	CallExpression	"debug ( ""Kanji code detected at %d byte."" , i )"		477558	0					
ANR	478043	Callee	debug		477558	0					
ANR	478044	Identifier	debug		477558	0					
ANR	478045	ArgumentList	"""Kanji code detected at %d byte."""		477558	1					
ANR	478046	Argument	"""Kanji code detected at %d byte."""		477558	0					
ANR	478047	PrimaryExpression	"""Kanji code detected at %d byte."""		477558	0					
ANR	478048	Argument	i		477558	1					
ANR	478049	Identifier	i		477558	0					
ANR	478050	IfStatement	if ( whatcode == EUCORSJIS && oldcode != ASCII )		477558	10					
ANR	478051	Condition	whatcode == EUCORSJIS && oldcode != ASCII	188:6:3665:3705	477558	0	True				
ANR	478052	AndExpression	whatcode == EUCORSJIS && oldcode != ASCII		477558	0		&&			
ANR	478053	EqualityExpression	whatcode == EUCORSJIS		477558	0		==			
ANR	478054	Identifier	whatcode		477558	0					
ANR	478055	Identifier	EUCORSJIS		477558	1					
ANR	478056	EqualityExpression	oldcode != ASCII		477558	1		!=			
ANR	478057	Identifier	oldcode		477558	0					
ANR	478058	Identifier	ASCII		477558	1					
ANR	478059	ExpressionStatement	whatcode = oldcode	189:4:3712:3730	477558	1	True				
ANR	478060	AssignmentExpression	whatcode = oldcode		477558	0		=			
ANR	478061	Identifier	whatcode		477558	0					
ANR	478062	Identifier	oldcode		477558	1					
ANR	478063	IfStatement	if ( whatcode == EUCORSJIS )		477558	11					
ANR	478064	Condition	whatcode == EUCORSJIS	191:6:3739:3759	477558	0	True				
ANR	478065	EqualityExpression	whatcode == EUCORSJIS		477558	0		==			
ANR	478066	Identifier	whatcode		477558	0					
ANR	478067	Identifier	EUCORSJIS		477558	1					
ANR	478068	CompoundStatement		103:4:2174:2174	477558	1					
ANR	478069	IfStatement	"if ( getenv ( ""LC_ALL"" ) )"		477558	0					
ANR	478070	Condition	"getenv ( ""LC_ALL"" )"	193:10:3778:3794	477558	0	True				
ANR	478071	CallExpression	"getenv ( ""LC_ALL"" )"		477558	0					
ANR	478072	Callee	getenv		477558	0					
ANR	478073	Identifier	getenv		477558	0					
ANR	478074	ArgumentList	"""LC_ALL"""		477558	1					
ANR	478075	Argument	"""LC_ALL"""		477558	0					
ANR	478076	PrimaryExpression	"""LC_ALL"""		477558	0					
ANR	478077	ExpressionStatement	"lang = getenv ( ""LC_ALL"" )"	194:1:3798:3822	477558	1	True				
ANR	478078	AssignmentExpression	"lang = getenv ( ""LC_ALL"" )"		477558	0		=			
ANR	478079	Identifier	lang		477558	0					
ANR	478080	CallExpression	"getenv ( ""LC_ALL"" )"		477558	1					
ANR	478081	Callee	getenv		477558	0					
ANR	478082	Identifier	getenv		477558	0					
ANR	478083	ArgumentList	"""LC_ALL"""		477558	1					
ANR	478084	Argument	"""LC_ALL"""		477558	0					
ANR	478085	PrimaryExpression	"""LC_ALL"""		477558	0					
ANR	478086	ElseStatement	else		477558	0					
ANR	478087	IfStatement	"if ( getenv ( ""LC_CTYPE"" ) )"		477558	0					
ANR	478088	Condition	"getenv ( ""LC_CTYPE"" )"	195:15:3839:3857	477558	0	True				
ANR	478089	CallExpression	"getenv ( ""LC_CTYPE"" )"		477558	0					
ANR	478090	Callee	getenv		477558	0					
ANR	478091	Identifier	getenv		477558	0					
ANR	478092	ArgumentList	"""LC_CTYPE"""		477558	1					
ANR	478093	Argument	"""LC_CTYPE"""		477558	0					
ANR	478094	PrimaryExpression	"""LC_CTYPE"""		477558	0					
ANR	478095	ExpressionStatement	"lang = getenv ( ""LC_CTYPE"" )"	196:1:3861:3887	477558	1	True				
ANR	478096	AssignmentExpression	"lang = getenv ( ""LC_CTYPE"" )"		477558	0		=			
ANR	478097	Identifier	lang		477558	0					
ANR	478098	CallExpression	"getenv ( ""LC_CTYPE"" )"		477558	1					
ANR	478099	Callee	getenv		477558	0					
ANR	478100	Identifier	getenv		477558	0					
ANR	478101	ArgumentList	"""LC_CTYPE"""		477558	1					
ANR	478102	Argument	"""LC_CTYPE"""		477558	0					
ANR	478103	PrimaryExpression	"""LC_CTYPE"""		477558	0					
ANR	478104	ElseStatement	else		477558	0					
ANR	478105	IfStatement	"if ( getenv ( ""LANG"" ) )"		477558	0					
ANR	478106	Condition	"getenv ( ""LANG"" )"	197:15:3904:3918	477558	0	True				
ANR	478107	CallExpression	"getenv ( ""LANG"" )"		477558	0					
ANR	478108	Callee	getenv		477558	0					
ANR	478109	Identifier	getenv		477558	0					
ANR	478110	ArgumentList	"""LANG"""		477558	1					
ANR	478111	Argument	"""LANG"""		477558	0					
ANR	478112	PrimaryExpression	"""LANG"""		477558	0					
ANR	478113	ExpressionStatement	"lang = getenv ( ""LANG"" )"	198:1:3922:3944	477558	1	True				
ANR	478114	AssignmentExpression	"lang = getenv ( ""LANG"" )"		477558	0		=			
ANR	478115	Identifier	lang		477558	0					
ANR	478116	CallExpression	"getenv ( ""LANG"" )"		477558	1					
ANR	478117	Callee	getenv		477558	0					
ANR	478118	Identifier	getenv		477558	0					
ANR	478119	ArgumentList	"""LANG"""		477558	1					
ANR	478120	Argument	"""LANG"""		477558	0					
ANR	478121	PrimaryExpression	"""LANG"""		477558	0					
ANR	478122	IfStatement	if ( lang )		477558	1					
ANR	478123	Condition	lang	200:10:3957:3960	477558	0	True				
ANR	478124	Identifier	lang		477558	0					
ANR	478125	CompoundStatement		112:1:2372:2372	477558	1					
ANR	478126	Statement	if	202:3:3969:3970	477558	0	True				
ANR	478127	Statement	(	202:6:3972:3972	477558	1	True				
ANR	478128	Statement	strcmp	202:7:3973:3978	477558	2	True				
ANR	478129	Statement	(	202:14:3980:3980	477558	3	True				
ANR	478130	Statement	lang	202:15:3981:3984	477558	4	True				
ANR	478131	Statement	","	202:19:3985:3985	477558	5	True				
ANR	478132	Statement	"""ja_JP.SJIS"""	202:21:3987:3998	477558	6	True				
ANR	478133	Statement	)	202:33:3999:3999	477558	7	True				
ANR	478134	Statement	==	202:35:4001:4002	477558	8	True				
ANR	478135	Statement	0	202:38:4004:4004	477558	9	True				
ANR	478136	Statement	||	202:40:4006:4007	477558	10	True				
ANR	478137	Statement	strcmp	204:7:4028:4033	477558	11	True				
ANR	478138	Statement	(	204:14:4035:4035	477558	12	True				
ANR	478139	Statement	lang	204:15:4036:4039	477558	13	True				
ANR	478140	Statement	","	204:19:4040:4040	477558	14	True				
ANR	478141	Statement	"""japanese"""	204:21:4042:4051	477558	15	True				
ANR	478142	Statement	)	204:31:4052:4052	477558	16	True				
ANR	478143	Statement	==	204:33:4054:4055	477558	17	True				
ANR	478144	Statement	0	204:36:4057:4057	477558	18	True				
ANR	478145	Statement	||	204:38:4059:4060	477558	19	True				
ANR	478146	Statement	strcmp	206:7:4076:4081	477558	20	True				
ANR	478147	Statement	(	206:14:4083:4083	477558	21	True				
ANR	478148	Statement	lang	206:15:4084:4087	477558	22	True				
ANR	478149	Statement	","	206:19:4088:4088	477558	23	True				
ANR	478150	Statement	"""ja_JP.mscode"""	206:21:4090:4103	477558	24	True				
ANR	478151	Statement	)	206:35:4104:4104	477558	25	True				
ANR	478152	Statement	==	206:37:4106:4107	477558	26	True				
ANR	478153	Statement	0	206:40:4109:4109	477558	27	True				
ANR	478154	Statement	||	206:42:4111:4112	477558	28	True				
ANR	478155	Statement	strcmp	207:7:4121:4126	477558	29	True				
ANR	478156	Statement	(	207:14:4128:4128	477558	30	True				
ANR	478157	Statement	lang	207:15:4129:4132	477558	31	True				
ANR	478158	Statement	","	207:19:4133:4133	477558	32	True				
ANR	478159	Statement	"""ja_JP.PCK"""	207:21:4135:4145	477558	33	True				
ANR	478160	Statement	)	207:32:4146:4146	477558	34	True				
ANR	478161	Statement	==	207:34:4148:4149	477558	35	True				
ANR	478162	Statement	0	207:37:4151:4151	477558	36	True				
ANR	478163	Statement	)	207:38:4152:4152	477558	37	True				
ANR	478164	ExpressionStatement	whatcode = SJIS	208:5:4159:4174	477558	38	True				
ANR	478165	AssignmentExpression	whatcode = SJIS		477558	0		=			
ANR	478166	Identifier	whatcode		477558	0					
ANR	478167	Identifier	SJIS		477558	1					
ANR	478168	ElseStatement	else		477558	0					
ANR	478169	IfStatement	"if ( strncmp ( lang , ""ja"" , 2 ) == 0 )"		477558	0					
ANR	478170	Condition	"strncmp ( lang , ""ja"" , 2 ) == 0"	209:12:4188:4215	477558	0	True				
ANR	478171	EqualityExpression	"strncmp ( lang , ""ja"" , 2 ) == 0"		477558	0		==			
ANR	478172	CallExpression	"strncmp ( lang , ""ja"" , 2 )"		477558	0					
ANR	478173	Callee	strncmp		477558	0					
ANR	478174	Identifier	strncmp		477558	0					
ANR	478175	ArgumentList	lang		477558	1					
ANR	478176	Argument	lang		477558	0					
ANR	478177	Identifier	lang		477558	0					
ANR	478178	Argument	"""ja"""		477558	1					
ANR	478179	PrimaryExpression	"""ja"""		477558	0					
ANR	478180	Argument	2		477558	2					
ANR	478181	PrimaryExpression	2		477558	0					
ANR	478182	PrimaryExpression	0		477558	1					
ANR	478183	ExpressionStatement	whatcode = SJIS	211:5:4238:4253	477558	1	True				
ANR	478184	AssignmentExpression	whatcode = SJIS		477558	0		=			
ANR	478185	Identifier	whatcode		477558	0					
ANR	478186	Identifier	SJIS		477558	1					
ANR	478187	IfStatement	if ( whatcode == EUCORSJIS )		477558	12					
ANR	478188	Condition	whatcode == EUCORSJIS	218:6:4305:4325	477558	0	True				
ANR	478189	EqualityExpression	whatcode == EUCORSJIS		477558	0		==			
ANR	478190	Identifier	whatcode		477558	0					
ANR	478191	Identifier	EUCORSJIS		477558	1					
ANR	478192	ExpressionStatement	whatcode = SJIS	220:4:4347:4362	477558	1	True				
ANR	478193	AssignmentExpression	whatcode = SJIS		477558	0		=			
ANR	478194	Identifier	whatcode		477558	0					
ANR	478195	Identifier	SJIS		477558	1					
ANR	478196	ReturnStatement	return whatcode ;	225:2:4400:4415	477558	13	True				
ANR	478197	Identifier	whatcode		477558	0					
ANR	478198	ReturnType	static int		477558	1					
ANR	478199	Identifier	DetectKanjiCode		477558	2					
ANR	478200	ParameterList	unsigned char * str		477558	3					
ANR	478201	Parameter	unsigned char * str	89:17:1571:1588	477558	0	True				
ANR	478202	ParameterType	unsigned char *		477558	0					
ANR	478203	Identifier	str		477558	1					
ANR	478204	CFGEntryNode	ENTRY		477558		True				
ANR	478205	CFGExitNode	EXIT		477558		True				
ANR	478206	Symbol	NEW		477558						
ANR	478207	Symbol	c		477558						
ANR	478208	Symbol	NULL		477558						
ANR	478209	Symbol	OLD		477558						
ANR	478210	Symbol	EUCORSJIS		477558						
ANR	478211	Symbol	SJIS		477558						
ANR	478212	Symbol	i		477558						
ANR	478213	Symbol	ASCII		477558						
ANR	478214	Symbol	NEC		477558						
ANR	478215	Symbol	str		477558						
ANR	478216	Symbol	strncmp		477558						
ANR	478217	Symbol	EUC		477558						
ANR	478218	Symbol	SS2		477558						
ANR	478219	Symbol	ESC		477558						
ANR	478220	Symbol	ESCI		477558						
ANR	478221	Symbol	whatcode		477558						
ANR	478222	Symbol	oldcode		477558						
ANR	478223	Symbol	* str		477558						
ANR	478224	Symbol	lang		477558						
ANR	478225	Symbol	getenv		477558						
ANR	478226	Function	SJIStoJIS	230:0:4467:4789							
ANR	478227	FunctionDef	"SJIStoJIS (int * p1 , int * p2)"		478226	0					
ANR	478228	CompoundStatement		232:0:4508:4789	478226	0					
ANR	478229	Statement	register	233:2:4512:4519	478226	0	True				
ANR	478230	IdentifierDeclStatement	unsigned char c1 = * p1 ;	233:11:4521:4543	478226	1	True				
ANR	478231	IdentifierDecl	c1 = * p1		478226	0					
ANR	478232	IdentifierDeclType	unsigned char		478226	0					
ANR	478233	Identifier	c1		478226	1					
ANR	478234	AssignmentExpression	c1 = * p1		478226	2		=			
ANR	478235	Identifier	c1		478226	0					
ANR	478236	UnaryOperationExpression	* p1		478226	1					
ANR	478237	UnaryOperator	*		478226	0					
ANR	478238	Identifier	p1		478226	1					
ANR	478239	Statement	register	234:2:4547:4554	478226	2	True				
ANR	478240	IdentifierDeclStatement	unsigned char c2 = * p2 ;	234:11:4556:4578	478226	3	True				
ANR	478241	IdentifierDecl	c2 = * p2		478226	0					
ANR	478242	IdentifierDeclType	unsigned char		478226	0					
ANR	478243	Identifier	c2		478226	1					
ANR	478244	AssignmentExpression	c2 = * p2		478226	2		=			
ANR	478245	Identifier	c2		478226	0					
ANR	478246	UnaryOperationExpression	* p2		478226	1					
ANR	478247	UnaryOperator	*		478226	0					
ANR	478248	Identifier	p2		478226	1					
ANR	478249	Statement	register	235:2:4582:4589	478226	4	True				
ANR	478250	IdentifierDeclStatement	int adjust = c2 < 159 ;	235:11:4591:4612	478226	5	True				
ANR	478251	IdentifierDecl	adjust = c2 < 159		478226	0					
ANR	478252	IdentifierDeclType	int		478226	0					
ANR	478253	Identifier	adjust		478226	1					
ANR	478254	AssignmentExpression	adjust = c2 < 159		478226	2		=			
ANR	478255	Identifier	adjust		478226	0					
ANR	478256	RelationalExpression	c2 < 159		478226	1		<			
ANR	478257	Identifier	c2		478226	0					
ANR	478258	PrimaryExpression	159		478226	1					
ANR	478259	Statement	register	236:2:4616:4623	478226	6	True				
ANR	478260	IdentifierDeclStatement	int rowOffset = c1 < 160 ? 112 : 176 ;	236:11:4625:4661	478226	7	True				
ANR	478261	IdentifierDecl	rowOffset = c1 < 160 ? 112 : 176		478226	0					
ANR	478262	IdentifierDeclType	int		478226	0					
ANR	478263	Identifier	rowOffset		478226	1					
ANR	478264	AssignmentExpression	rowOffset = c1 < 160 ? 112 : 176		478226	2		=			
ANR	478265	Identifier	rowOffset		478226	0					
ANR	478266	ConditionalExpression	c1 < 160 ? 112 : 176		478226	1					
ANR	478267	Condition	c1 < 160		478226	0					
ANR	478268	RelationalExpression	c1 < 160		478226	0		<			
ANR	478269	Identifier	c1		478226	0					
ANR	478270	PrimaryExpression	160		478226	1					
ANR	478271	PrimaryExpression	112		478226	1					
ANR	478272	PrimaryExpression	176		478226	2					
ANR	478273	Statement	register	237:2:4665:4672	478226	8	True				
ANR	478274	IdentifierDeclStatement	int cellOffset = adjust ? ( 31 + ( c2 > 127 ) ) : 126 ;	237:11:4674:4723	478226	9	True				
ANR	478275	IdentifierDecl	cellOffset = adjust ? ( 31 + ( c2 > 127 ) ) : 126		478226	0					
ANR	478276	IdentifierDeclType	int		478226	0					
ANR	478277	Identifier	cellOffset		478226	1					
ANR	478278	AssignmentExpression	cellOffset = adjust ? ( 31 + ( c2 > 127 ) ) : 126		478226	2		=			
ANR	478279	Identifier	cellOffset		478226	0					
ANR	478280	ConditionalExpression	adjust ? ( 31 + ( c2 > 127 ) ) : 126		478226	1					
ANR	478281	Condition	adjust		478226	0					
ANR	478282	Identifier	adjust		478226	0					
ANR	478283	AdditiveExpression	31 + ( c2 > 127 )		478226	1		+			
ANR	478284	PrimaryExpression	31		478226	0					
ANR	478285	RelationalExpression	c2 > 127		478226	1		>			
ANR	478286	Identifier	c2		478226	0					
ANR	478287	PrimaryExpression	127		478226	1					
ANR	478288	PrimaryExpression	126		478226	2					
ANR	478289	ExpressionStatement	* p1 = ( ( c1 - rowOffset ) << 1 ) - adjust	239:2:4728:4766	478226	10	True				
ANR	478290	AssignmentExpression	* p1 = ( ( c1 - rowOffset ) << 1 ) - adjust		478226	0		=			
ANR	478291	UnaryOperationExpression	* p1		478226	0					
ANR	478292	UnaryOperator	*		478226	0					
ANR	478293	Identifier	p1		478226	1					
ANR	478294	AdditiveExpression	( ( c1 - rowOffset ) << 1 ) - adjust		478226	1		-			
ANR	478295	ShiftExpression	( c1 - rowOffset ) << 1		478226	0		<<			
ANR	478296	AdditiveExpression	c1 - rowOffset		478226	0		-			
ANR	478297	Identifier	c1		478226	0					
ANR	478298	Identifier	rowOffset		478226	1					
ANR	478299	PrimaryExpression	1		478226	1					
ANR	478300	Identifier	adjust		478226	1					
ANR	478301	ExpressionStatement	* p2 -= cellOffset	240:2:4770:4787	478226	11	True				
ANR	478302	AssignmentExpression	* p2 -= cellOffset		478226	0		-=			
ANR	478303	UnaryOperationExpression	* p2		478226	0					
ANR	478304	UnaryOperator	*		478226	0					
ANR	478305	Identifier	p2		478226	1					
ANR	478306	Identifier	cellOffset		478226	1					
ANR	478307	ReturnType	static void		478226	1					
ANR	478308	Identifier	SJIStoJIS		478226	2					
ANR	478309	ParameterList	"int * p1 , int * p2"		478226	3					
ANR	478310	Parameter	int * p1	231:11:4490:4496	478226	0	True				
ANR	478311	ParameterType	int *		478226	0					
ANR	478312	Identifier	p1		478226	1					
ANR	478313	Parameter	int * p2	231:20:4499:4505	478226	1	True				
ANR	478314	ParameterType	int *		478226	0					
ANR	478315	Identifier	p2		478226	1					
ANR	478316	CFGEntryNode	ENTRY		478226		True				
ANR	478317	CFGExitNode	EXIT		478226		True				
ANR	478318	Symbol	rowOffset		478226						
ANR	478319	Symbol	p1		478226						
ANR	478320	Symbol	p2		478226						
ANR	478321	Symbol	* p1		478226						
ANR	478322	Symbol	adjust		478226						
ANR	478323	Symbol	cellOffset		478226						
ANR	478324	Symbol	* p2		478226						
ANR	478325	Symbol	c1		478226						
ANR	478326	Symbol	c2		478226						
ANR	478327	Function	han2zen	248:0:4988:6520							
ANR	478328	FunctionDef	"han2zen (int * p1 , int * p2)"		478327	0					
ANR	478329	CompoundStatement		250:0:5027:6520	478327	0					
ANR	478330	IdentifierDeclStatement	int c = * p1 ;	251:2:5031:5042	478327	0	True				
ANR	478331	IdentifierDecl	c = * p1		478327	0					
ANR	478332	IdentifierDeclType	int		478327	0					
ANR	478333	Identifier	c		478327	1					
ANR	478334	AssignmentExpression	c = * p1		478327	2		=			
ANR	478335	Identifier	c		478327	0					
ANR	478336	UnaryOperationExpression	* p1		478327	1					
ANR	478337	UnaryOperator	*		478327	0					
ANR	478338	Identifier	p1		478327	1					
ANR	478339	IdentifierDeclStatement	int daku = FALSE ;	252:2:5046:5062	478327	1	True				
ANR	478340	IdentifierDecl	daku = FALSE		478327	0					
ANR	478341	IdentifierDeclType	int		478327	0					
ANR	478342	Identifier	daku		478327	1					
ANR	478343	AssignmentExpression	daku = FALSE		478327	2		=			
ANR	478344	Identifier	FALSE		478327	0					
ANR	478345	Identifier	FALSE		478327	1					
ANR	478346	IdentifierDeclStatement	int handaku = FALSE ;	253:2:5066:5085	478327	2	True				
ANR	478347	IdentifierDecl	handaku = FALSE		478327	0					
ANR	478348	IdentifierDeclType	int		478327	0					
ANR	478349	Identifier	handaku		478327	1					
ANR	478350	AssignmentExpression	handaku = FALSE		478327	2		=			
ANR	478351	Identifier	FALSE		478327	0					
ANR	478352	Identifier	FALSE		478327	1					
ANR	478353	Statement	int	254:2:5089:5091	478327	3	True				
ANR	478354	Statement	mtable	254:6:5093:5098	478327	4	True				
ANR	478355	Statement	[	254:12:5099:5099	478327	5	True				
ANR	478356	Statement	]	254:13:5100:5100	478327	6	True				
ANR	478357	Statement	[	254:14:5101:5101	478327	7	True				
ANR	478358	Statement	2	254:15:5102:5102	478327	8	True				
ANR	478359	Statement	]	254:16:5103:5103	478327	9	True				
ANR	478360	Statement	=	254:18:5105:5105	478327	10	True				
ANR	478361	CompoundStatement		6:2:81:81	478327	11					
ANR	478362	CompoundStatement		7:4:87:87	478327	0					
ANR	478363	Statement	129	256:5:5116:5118	478327	0	True				
ANR	478364	Statement	","	256:8:5119:5119	478327	1	True				
ANR	478365	Statement	66	256:10:5121:5122	478327	2	True				
ANR	478366	Statement	","	256:13:5124:5124	478327	1	True				
ANR	478367	CompoundStatement		8:4:102:102	478327	2					
ANR	478368	Statement	129	257:5:5131:5133	478327	0	True				
ANR	478369	Statement	","	257:8:5134:5134	478327	1	True				
ANR	478370	Statement	117	257:10:5136:5138	478327	2	True				
ANR	478371	Statement	","	257:14:5140:5140	478327	3	True				
ANR	478372	CompoundStatement		9:4:118:118	478327	4					
ANR	478373	Statement	129	258:5:5147:5149	478327	0	True				
ANR	478374	Statement	","	258:8:5150:5150	478327	1	True				
ANR	478375	Statement	118	258:10:5152:5154	478327	2	True				
ANR	478376	Statement	","	258:14:5156:5156	478327	5	True				
ANR	478377	CompoundStatement		10:4:134:134	478327	6					
ANR	478378	Statement	129	259:5:5163:5165	478327	0	True				
ANR	478379	Statement	","	259:8:5166:5166	478327	1	True				
ANR	478380	Statement	65	259:10:5168:5169	478327	2	True				
ANR	478381	Statement	","	259:13:5171:5171	478327	7	True				
ANR	478382	CompoundStatement		11:4:149:149	478327	8					
ANR	478383	Statement	129	260:5:5178:5180	478327	0	True				
ANR	478384	Statement	","	260:8:5181:5181	478327	1	True				
ANR	478385	Statement	69	260:10:5183:5184	478327	2	True				
ANR	478386	Statement	","	260:13:5186:5186	478327	9	True				
ANR	478387	CompoundStatement		12:4:164:164	478327	10					
ANR	478388	Statement	131	261:5:5193:5195	478327	0	True				
ANR	478389	Statement	","	261:8:5196:5196	478327	1	True				
ANR	478390	Statement	146	261:10:5198:5200	478327	2	True				
ANR	478391	Statement	","	261:14:5202:5202	478327	11	True				
ANR	478392	CompoundStatement		13:4:180:180	478327	12					
ANR	478393	Statement	131	262:5:5209:5211	478327	0	True				
ANR	478394	Statement	","	262:8:5212:5212	478327	1	True				
ANR	478395	Statement	64	262:10:5214:5215	478327	2	True				
ANR	478396	Statement	","	262:13:5217:5217	478327	13	True				
ANR	478397	CompoundStatement		14:4:195:195	478327	14					
ANR	478398	Statement	131	263:5:5224:5226	478327	0	True				
ANR	478399	Statement	","	263:8:5227:5227	478327	1	True				
ANR	478400	Statement	66	263:10:5229:5230	478327	2	True				
ANR	478401	Statement	","	263:13:5232:5232	478327	15	True				
ANR	478402	CompoundStatement		15:4:210:210	478327	16					
ANR	478403	Statement	131	264:5:5239:5241	478327	0	True				
ANR	478404	Statement	","	264:8:5242:5242	478327	1	True				
ANR	478405	Statement	68	264:10:5244:5245	478327	2	True				
ANR	478406	Statement	","	264:13:5247:5247	478327	17	True				
ANR	478407	CompoundStatement		16:4:225:225	478327	18					
ANR	478408	Statement	131	265:5:5254:5256	478327	0	True				
ANR	478409	Statement	","	265:8:5257:5257	478327	1	True				
ANR	478410	Statement	70	265:10:5259:5260	478327	2	True				
ANR	478411	Statement	","	265:13:5262:5262	478327	19	True				
ANR	478412	CompoundStatement		17:4:240:240	478327	20					
ANR	478413	Statement	131	266:5:5269:5271	478327	0	True				
ANR	478414	Statement	","	266:8:5272:5272	478327	1	True				
ANR	478415	Statement	72	266:10:5274:5275	478327	2	True				
ANR	478416	Statement	","	266:13:5277:5277	478327	21	True				
ANR	478417	CompoundStatement		18:4:255:255	478327	22					
ANR	478418	Statement	131	267:5:5284:5286	478327	0	True				
ANR	478419	Statement	","	267:8:5287:5287	478327	1	True				
ANR	478420	Statement	131	267:10:5289:5291	478327	2	True				
ANR	478421	Statement	","	267:14:5293:5293	478327	23	True				
ANR	478422	CompoundStatement		19:4:271:271	478327	24					
ANR	478423	Statement	131	268:5:5300:5302	478327	0	True				
ANR	478424	Statement	","	268:8:5303:5303	478327	1	True				
ANR	478425	Statement	133	268:10:5305:5307	478327	2	True				
ANR	478426	Statement	","	268:14:5309:5309	478327	25	True				
ANR	478427	CompoundStatement		20:4:287:287	478327	26					
ANR	478428	Statement	131	269:5:5316:5318	478327	0	True				
ANR	478429	Statement	","	269:8:5319:5319	478327	1	True				
ANR	478430	Statement	135	269:10:5321:5323	478327	2	True				
ANR	478431	Statement	","	269:14:5325:5325	478327	27	True				
ANR	478432	CompoundStatement		21:4:303:303	478327	28					
ANR	478433	Statement	131	270:5:5332:5334	478327	0	True				
ANR	478434	Statement	","	270:8:5335:5335	478327	1	True				
ANR	478435	Statement	98	270:10:5337:5338	478327	2	True				
ANR	478436	Statement	","	270:13:5340:5340	478327	29	True				
ANR	478437	CompoundStatement		22:4:318:318	478327	30					
ANR	478438	Statement	129	271:5:5347:5349	478327	0	True				
ANR	478439	Statement	","	271:8:5350:5350	478327	1	True				
ANR	478440	Statement	91	271:10:5352:5353	478327	2	True				
ANR	478441	Statement	","	271:13:5355:5355	478327	31	True				
ANR	478442	CompoundStatement		23:4:333:333	478327	32					
ANR	478443	Statement	131	272:5:5362:5364	478327	0	True				
ANR	478444	Statement	","	272:8:5365:5365	478327	1	True				
ANR	478445	Statement	65	272:10:5367:5368	478327	2	True				
ANR	478446	Statement	","	272:13:5370:5370	478327	33	True				
ANR	478447	CompoundStatement		24:4:348:348	478327	34					
ANR	478448	Statement	131	273:5:5377:5379	478327	0	True				
ANR	478449	Statement	","	273:8:5380:5380	478327	1	True				
ANR	478450	Statement	67	273:10:5382:5383	478327	2	True				
ANR	478451	Statement	","	273:13:5385:5385	478327	35	True				
ANR	478452	CompoundStatement		25:4:363:363	478327	36					
ANR	478453	Statement	131	274:5:5392:5394	478327	0	True				
ANR	478454	Statement	","	274:8:5395:5395	478327	1	True				
ANR	478455	Statement	69	274:10:5397:5398	478327	2	True				
ANR	478456	Statement	","	274:13:5400:5400	478327	37	True				
ANR	478457	CompoundStatement		26:4:378:378	478327	38					
ANR	478458	Statement	131	275:5:5407:5409	478327	0	True				
ANR	478459	Statement	","	275:8:5410:5410	478327	1	True				
ANR	478460	Statement	71	275:10:5412:5413	478327	2	True				
ANR	478461	Statement	","	275:13:5415:5415	478327	39	True				
ANR	478462	CompoundStatement		27:4:393:393	478327	40					
ANR	478463	Statement	131	276:5:5422:5424	478327	0	True				
ANR	478464	Statement	","	276:8:5425:5425	478327	1	True				
ANR	478465	Statement	73	276:10:5427:5428	478327	2	True				
ANR	478466	Statement	","	276:13:5430:5430	478327	41	True				
ANR	478467	CompoundStatement		28:4:408:408	478327	42					
ANR	478468	Statement	131	277:5:5437:5439	478327	0	True				
ANR	478469	Statement	","	277:8:5440:5440	478327	1	True				
ANR	478470	Statement	74	277:10:5442:5443	478327	2	True				
ANR	478471	Statement	","	277:13:5445:5445	478327	43	True				
ANR	478472	CompoundStatement		29:4:423:423	478327	44					
ANR	478473	Statement	131	278:5:5452:5454	478327	0	True				
ANR	478474	Statement	","	278:8:5455:5455	478327	1	True				
ANR	478475	Statement	76	278:10:5457:5458	478327	2	True				
ANR	478476	Statement	","	278:13:5460:5460	478327	45	True				
ANR	478477	CompoundStatement		30:4:438:438	478327	46					
ANR	478478	Statement	131	279:5:5467:5469	478327	0	True				
ANR	478479	Statement	","	279:8:5470:5470	478327	1	True				
ANR	478480	Statement	78	279:10:5472:5473	478327	2	True				
ANR	478481	Statement	","	279:13:5475:5475	478327	47	True				
ANR	478482	CompoundStatement		31:4:453:453	478327	48					
ANR	478483	Statement	131	280:5:5482:5484	478327	0	True				
ANR	478484	Statement	","	280:8:5485:5485	478327	1	True				
ANR	478485	Statement	80	280:10:5487:5488	478327	2	True				
ANR	478486	Statement	","	280:13:5490:5490	478327	49	True				
ANR	478487	CompoundStatement		32:4:468:468	478327	50					
ANR	478488	Statement	131	281:5:5497:5499	478327	0	True				
ANR	478489	Statement	","	281:8:5500:5500	478327	1	True				
ANR	478490	Statement	82	281:10:5502:5503	478327	2	True				
ANR	478491	Statement	","	281:13:5505:5505	478327	51	True				
ANR	478492	CompoundStatement		33:4:483:483	478327	52					
ANR	478493	Statement	131	282:5:5512:5514	478327	0	True				
ANR	478494	Statement	","	282:8:5515:5515	478327	1	True				
ANR	478495	Statement	84	282:10:5517:5518	478327	2	True				
ANR	478496	Statement	","	282:13:5520:5520	478327	53	True				
ANR	478497	CompoundStatement		34:4:498:498	478327	54					
ANR	478498	Statement	131	283:5:5527:5529	478327	0	True				
ANR	478499	Statement	","	283:8:5530:5530	478327	1	True				
ANR	478500	Statement	86	283:10:5532:5533	478327	2	True				
ANR	478501	Statement	","	283:13:5535:5535	478327	55	True				
ANR	478502	CompoundStatement		35:4:513:513	478327	56					
ANR	478503	Statement	131	284:5:5542:5544	478327	0	True				
ANR	478504	Statement	","	284:8:5545:5545	478327	1	True				
ANR	478505	Statement	88	284:10:5547:5548	478327	2	True				
ANR	478506	Statement	","	284:13:5550:5550	478327	57	True				
ANR	478507	CompoundStatement		36:4:528:528	478327	58					
ANR	478508	Statement	131	285:5:5557:5559	478327	0	True				
ANR	478509	Statement	","	285:8:5560:5560	478327	1	True				
ANR	478510	Statement	90	285:10:5562:5563	478327	2	True				
ANR	478511	Statement	","	285:13:5565:5565	478327	59	True				
ANR	478512	CompoundStatement		37:4:543:543	478327	60					
ANR	478513	Statement	131	286:5:5572:5574	478327	0	True				
ANR	478514	Statement	","	286:8:5575:5575	478327	1	True				
ANR	478515	Statement	92	286:10:5577:5578	478327	2	True				
ANR	478516	Statement	","	286:13:5580:5580	478327	61	True				
ANR	478517	CompoundStatement		38:4:558:558	478327	62					
ANR	478518	Statement	131	287:5:5587:5589	478327	0	True				
ANR	478519	Statement	","	287:8:5590:5590	478327	1	True				
ANR	478520	Statement	94	287:10:5592:5593	478327	2	True				
ANR	478521	Statement	","	287:13:5595:5595	478327	63	True				
ANR	478522	CompoundStatement		39:4:573:573	478327	64					
ANR	478523	Statement	131	288:5:5602:5604	478327	0	True				
ANR	478524	Statement	","	288:8:5605:5605	478327	1	True				
ANR	478525	Statement	96	288:10:5607:5608	478327	2	True				
ANR	478526	Statement	","	288:13:5610:5610	478327	65	True				
ANR	478527	CompoundStatement		40:4:588:588	478327	66					
ANR	478528	Statement	131	289:5:5617:5619	478327	0	True				
ANR	478529	Statement	","	289:8:5620:5620	478327	1	True				
ANR	478530	Statement	99	289:10:5622:5623	478327	2	True				
ANR	478531	Statement	","	289:13:5625:5625	478327	67	True				
ANR	478532	CompoundStatement		41:4:603:603	478327	68					
ANR	478533	Statement	131	290:5:5632:5634	478327	0	True				
ANR	478534	Statement	","	290:8:5635:5635	478327	1	True				
ANR	478535	Statement	101	290:10:5637:5639	478327	2	True				
ANR	478536	Statement	","	290:14:5641:5641	478327	69	True				
ANR	478537	CompoundStatement		42:4:619:619	478327	70					
ANR	478538	Statement	131	291:5:5648:5650	478327	0	True				
ANR	478539	Statement	","	291:8:5651:5651	478327	1	True				
ANR	478540	Statement	103	291:10:5653:5655	478327	2	True				
ANR	478541	Statement	","	291:14:5657:5657	478327	71	True				
ANR	478542	CompoundStatement		43:4:635:635	478327	72					
ANR	478543	Statement	131	292:5:5664:5666	478327	0	True				
ANR	478544	Statement	","	292:8:5667:5667	478327	1	True				
ANR	478545	Statement	105	292:10:5669:5671	478327	2	True				
ANR	478546	Statement	","	292:14:5673:5673	478327	73	True				
ANR	478547	CompoundStatement		44:4:651:651	478327	74					
ANR	478548	Statement	131	293:5:5680:5682	478327	0	True				
ANR	478549	Statement	","	293:8:5683:5683	478327	1	True				
ANR	478550	Statement	106	293:10:5685:5687	478327	2	True				
ANR	478551	Statement	","	293:14:5689:5689	478327	75	True				
ANR	478552	CompoundStatement		45:4:667:667	478327	76					
ANR	478553	Statement	131	294:5:5696:5698	478327	0	True				
ANR	478554	Statement	","	294:8:5699:5699	478327	1	True				
ANR	478555	Statement	107	294:10:5701:5703	478327	2	True				
ANR	478556	Statement	","	294:14:5705:5705	478327	77	True				
ANR	478557	CompoundStatement		46:4:683:683	478327	78					
ANR	478558	Statement	131	295:5:5712:5714	478327	0	True				
ANR	478559	Statement	","	295:8:5715:5715	478327	1	True				
ANR	478560	Statement	108	295:10:5717:5719	478327	2	True				
ANR	478561	Statement	","	295:14:5721:5721	478327	79	True				
ANR	478562	CompoundStatement		47:4:699:699	478327	80					
ANR	478563	Statement	131	296:5:5728:5730	478327	0	True				
ANR	478564	Statement	","	296:8:5731:5731	478327	1	True				
ANR	478565	Statement	109	296:10:5733:5735	478327	2	True				
ANR	478566	Statement	","	296:14:5737:5737	478327	81	True				
ANR	478567	CompoundStatement		48:4:715:715	478327	82					
ANR	478568	Statement	131	297:5:5744:5746	478327	0	True				
ANR	478569	Statement	","	297:8:5747:5747	478327	1	True				
ANR	478570	Statement	110	297:10:5749:5751	478327	2	True				
ANR	478571	Statement	","	297:14:5753:5753	478327	83	True				
ANR	478572	CompoundStatement		49:4:731:731	478327	84					
ANR	478573	Statement	131	298:5:5760:5762	478327	0	True				
ANR	478574	Statement	","	298:8:5763:5763	478327	1	True				
ANR	478575	Statement	113	298:10:5765:5767	478327	2	True				
ANR	478576	Statement	","	298:14:5769:5769	478327	85	True				
ANR	478577	CompoundStatement		50:4:747:747	478327	86					
ANR	478578	Statement	131	299:5:5776:5778	478327	0	True				
ANR	478579	Statement	","	299:8:5779:5779	478327	1	True				
ANR	478580	Statement	116	299:10:5781:5783	478327	2	True				
ANR	478581	Statement	","	299:14:5785:5785	478327	87	True				
ANR	478582	CompoundStatement		51:4:763:763	478327	88					
ANR	478583	Statement	131	300:5:5792:5794	478327	0	True				
ANR	478584	Statement	","	300:8:5795:5795	478327	1	True				
ANR	478585	Statement	119	300:10:5797:5799	478327	2	True				
ANR	478586	Statement	","	300:14:5801:5801	478327	89	True				
ANR	478587	CompoundStatement		52:4:779:779	478327	90					
ANR	478588	Statement	131	301:5:5808:5810	478327	0	True				
ANR	478589	Statement	","	301:8:5811:5811	478327	1	True				
ANR	478590	Statement	122	301:10:5813:5815	478327	2	True				
ANR	478591	Statement	","	301:14:5817:5817	478327	91	True				
ANR	478592	CompoundStatement		53:4:795:795	478327	92					
ANR	478593	Statement	131	302:5:5824:5826	478327	0	True				
ANR	478594	Statement	","	302:8:5827:5827	478327	1	True				
ANR	478595	Statement	125	302:10:5829:5831	478327	2	True				
ANR	478596	Statement	","	302:14:5833:5833	478327	93	True				
ANR	478597	CompoundStatement		54:4:811:811	478327	94					
ANR	478598	Statement	131	303:5:5840:5842	478327	0	True				
ANR	478599	Statement	","	303:8:5843:5843	478327	1	True				
ANR	478600	Statement	126	303:10:5845:5847	478327	2	True				
ANR	478601	Statement	","	303:14:5849:5849	478327	95	True				
ANR	478602	CompoundStatement		55:4:827:827	478327	96					
ANR	478603	Statement	131	304:5:5856:5858	478327	0	True				
ANR	478604	Statement	","	304:8:5859:5859	478327	1	True				
ANR	478605	Statement	128	304:10:5861:5863	478327	2	True				
ANR	478606	Statement	","	304:14:5865:5865	478327	97	True				
ANR	478607	CompoundStatement		56:4:843:843	478327	98					
ANR	478608	Statement	131	305:5:5872:5874	478327	0	True				
ANR	478609	Statement	","	305:8:5875:5875	478327	1	True				
ANR	478610	Statement	129	305:10:5877:5879	478327	2	True				
ANR	478611	Statement	","	305:14:5881:5881	478327	99	True				
ANR	478612	CompoundStatement		57:4:859:859	478327	100					
ANR	478613	Statement	131	306:5:5888:5890	478327	0	True				
ANR	478614	Statement	","	306:8:5891:5891	478327	1	True				
ANR	478615	Statement	130	306:10:5893:5895	478327	2	True				
ANR	478616	Statement	","	306:14:5897:5897	478327	101	True				
ANR	478617	CompoundStatement		58:4:875:875	478327	102					
ANR	478618	Statement	131	307:5:5904:5906	478327	0	True				
ANR	478619	Statement	","	307:8:5907:5907	478327	1	True				
ANR	478620	Statement	132	307:10:5909:5911	478327	2	True				
ANR	478621	Statement	","	307:14:5913:5913	478327	103	True				
ANR	478622	CompoundStatement		59:4:891:891	478327	104					
ANR	478623	Statement	131	308:5:5920:5922	478327	0	True				
ANR	478624	Statement	","	308:8:5923:5923	478327	1	True				
ANR	478625	Statement	134	308:10:5925:5927	478327	2	True				
ANR	478626	Statement	","	308:14:5929:5929	478327	105	True				
ANR	478627	CompoundStatement		60:4:907:907	478327	106					
ANR	478628	Statement	131	309:5:5936:5938	478327	0	True				
ANR	478629	Statement	","	309:8:5939:5939	478327	1	True				
ANR	478630	Statement	136	309:10:5941:5943	478327	2	True				
ANR	478631	Statement	","	309:14:5945:5945	478327	107	True				
ANR	478632	CompoundStatement		61:4:923:923	478327	108					
ANR	478633	Statement	131	310:5:5952:5954	478327	0	True				
ANR	478634	Statement	","	310:8:5955:5955	478327	1	True				
ANR	478635	Statement	137	310:10:5957:5959	478327	2	True				
ANR	478636	Statement	","	310:14:5961:5961	478327	109	True				
ANR	478637	CompoundStatement		62:4:939:939	478327	110					
ANR	478638	Statement	131	311:5:5968:5970	478327	0	True				
ANR	478639	Statement	","	311:8:5971:5971	478327	1	True				
ANR	478640	Statement	138	311:10:5973:5975	478327	2	True				
ANR	478641	Statement	","	311:14:5977:5977	478327	111	True				
ANR	478642	CompoundStatement		63:4:955:955	478327	112					
ANR	478643	Statement	131	312:5:5984:5986	478327	0	True				
ANR	478644	Statement	","	312:8:5987:5987	478327	1	True				
ANR	478645	Statement	139	312:10:5989:5991	478327	2	True				
ANR	478646	Statement	","	312:14:5993:5993	478327	113	True				
ANR	478647	CompoundStatement		64:4:971:971	478327	114					
ANR	478648	Statement	131	313:5:6000:6002	478327	0	True				
ANR	478649	Statement	","	313:8:6003:6003	478327	1	True				
ANR	478650	Statement	140	313:10:6005:6007	478327	2	True				
ANR	478651	Statement	","	313:14:6009:6009	478327	115	True				
ANR	478652	CompoundStatement		65:4:987:987	478327	116					
ANR	478653	Statement	131	314:5:6016:6018	478327	0	True				
ANR	478654	Statement	","	314:8:6019:6019	478327	1	True				
ANR	478655	Statement	141	314:10:6021:6023	478327	2	True				
ANR	478656	Statement	","	314:14:6025:6025	478327	117	True				
ANR	478657	CompoundStatement		66:4:1003:1003	478327	118					
ANR	478658	Statement	131	315:5:6032:6034	478327	0	True				
ANR	478659	Statement	","	315:8:6035:6035	478327	1	True				
ANR	478660	Statement	143	315:10:6037:6039	478327	2	True				
ANR	478661	Statement	","	315:14:6041:6041	478327	119	True				
ANR	478662	CompoundStatement		67:4:1019:1019	478327	120					
ANR	478663	Statement	131	316:5:6048:6050	478327	0	True				
ANR	478664	Statement	","	316:8:6051:6051	478327	1	True				
ANR	478665	Statement	147	316:10:6053:6055	478327	2	True				
ANR	478666	Statement	","	316:14:6057:6057	478327	121	True				
ANR	478667	CompoundStatement		68:4:1035:1035	478327	122					
ANR	478668	Statement	129	317:5:6064:6066	478327	0	True				
ANR	478669	Statement	","	317:8:6067:6067	478327	1	True				
ANR	478670	Statement	74	317:10:6069:6070	478327	2	True				
ANR	478671	Statement	","	317:13:6072:6072	478327	123	True				
ANR	478672	CompoundStatement		69:4:1050:1050	478327	124					
ANR	478673	Statement	129	318:5:6079:6081	478327	0	True				
ANR	478674	Statement	","	318:8:6082:6082	478327	1	True				
ANR	478675	Statement	75	318:10:6084:6085	478327	2	True				
ANR	478676	ExpressionStatement		319:3:6091:6091	478327	12	True				
ANR	478677	IfStatement	if ( * p2 == 222 && IS_DAKU ( * p1 ) )		478327	13					
ANR	478678	Condition	* p2 == 222 && IS_DAKU ( * p1 )	321:6:6100:6126	478327	0	True				
ANR	478679	AndExpression	* p2 == 222 && IS_DAKU ( * p1 )		478327	0		&&			
ANR	478680	EqualityExpression	* p2 == 222		478327	0		==			
ANR	478681	UnaryOperationExpression	* p2		478327	0					
ANR	478682	UnaryOperator	*		478327	0					
ANR	478683	Identifier	p2		478327	1					
ANR	478684	PrimaryExpression	222		478327	1					
ANR	478685	CallExpression	IS_DAKU ( * p1 )		478327	1					
ANR	478686	Callee	IS_DAKU		478327	0					
ANR	478687	Identifier	IS_DAKU		478327	0					
ANR	478688	ArgumentList	* p1		478327	1					
ANR	478689	Argument	* p1		478327	0					
ANR	478690	UnaryOperationExpression	* p1		478327	0					
ANR	478691	UnaryOperator	*		478327	0					
ANR	478692	Identifier	p1		478327	1					
ANR	478693	ExpressionStatement	daku = TRUE	322:4:6133:6144	478327	1	True				
ANR	478694	AssignmentExpression	daku = TRUE		478327	0		=			
ANR	478695	Identifier	daku		478327	0					
ANR	478696	Identifier	TRUE		478327	1					
ANR	478697	ElseStatement	else		478327	0					
ANR	478698	IfStatement	if ( * p2 == 223 && IS_HANDAKU ( * p1 ) )		478327	0					
ANR	478699	Condition	* p2 == 223 && IS_HANDAKU ( * p1 )	323:11:6173:6202	478327	0	True				
ANR	478700	AndExpression	* p2 == 223 && IS_HANDAKU ( * p1 )		478327	0		&&			
ANR	478701	EqualityExpression	* p2 == 223		478327	0		==			
ANR	478702	UnaryOperationExpression	* p2		478327	0					
ANR	478703	UnaryOperator	*		478327	0					
ANR	478704	Identifier	p2		478327	1					
ANR	478705	PrimaryExpression	223		478327	1					
ANR	478706	CallExpression	IS_HANDAKU ( * p1 )		478327	1					
ANR	478707	Callee	IS_HANDAKU		478327	0					
ANR	478708	Identifier	IS_HANDAKU		478327	0					
ANR	478709	ArgumentList	* p1		478327	1					
ANR	478710	Argument	* p1		478327	0					
ANR	478711	UnaryOperationExpression	* p1		478327	0					
ANR	478712	UnaryOperator	*		478327	0					
ANR	478713	Identifier	p1		478327	1					
ANR	478714	ExpressionStatement	handaku = TRUE	324:4:6209:6223	478327	1	True				
ANR	478715	AssignmentExpression	handaku = TRUE		478327	0		=			
ANR	478716	Identifier	handaku		478327	0					
ANR	478717	Identifier	TRUE		478327	1					
ANR	478718	ExpressionStatement	* p1 = mtable [ c - 161 ] [ 0 ]	326:2:6248:6272	478327	14	True				
ANR	478719	AssignmentExpression	* p1 = mtable [ c - 161 ] [ 0 ]		478327	0		=			
ANR	478720	UnaryOperationExpression	* p1		478327	0					
ANR	478721	UnaryOperator	*		478327	0					
ANR	478722	Identifier	p1		478327	1					
ANR	478723	ArrayIndexing	mtable [ c - 161 ] [ 0 ]		478327	1					
ANR	478724	ArrayIndexing	mtable [ c - 161 ]		478327	0					
ANR	478725	Identifier	mtable		478327	0					
ANR	478726	AdditiveExpression	c - 161		478327	1		-			
ANR	478727	Identifier	c		478327	0					
ANR	478728	PrimaryExpression	161		478327	1					
ANR	478729	PrimaryExpression	0		478327	1					
ANR	478730	ExpressionStatement	* p2 = mtable [ c - 161 ] [ 1 ]	327:2:6276:6300	478327	15	True				
ANR	478731	AssignmentExpression	* p2 = mtable [ c - 161 ] [ 1 ]		478327	0		=			
ANR	478732	UnaryOperationExpression	* p2		478327	0					
ANR	478733	UnaryOperator	*		478327	0					
ANR	478734	Identifier	p2		478327	1					
ANR	478735	ArrayIndexing	mtable [ c - 161 ] [ 1 ]		478327	1					
ANR	478736	ArrayIndexing	mtable [ c - 161 ]		478327	0					
ANR	478737	Identifier	mtable		478327	0					
ANR	478738	AdditiveExpression	c - 161		478327	1		-			
ANR	478739	Identifier	c		478327	0					
ANR	478740	PrimaryExpression	161		478327	1					
ANR	478741	PrimaryExpression	1		478327	1					
ANR	478742	IfStatement	if ( daku )		478327	16					
ANR	478743	Condition	daku	329:6:6309:6312	478327	0	True				
ANR	478744	Identifier	daku		478327	0					
ANR	478745	CompoundStatement		81:4:1291:1291	478327	1					
ANR	478746	IfStatement	if ( ( * p2 >= 74 && * p2 <= 103 ) || ( * p2 >= 110 && * p2 <= 122 ) )		478327	0					
ANR	478747	Condition	( * p2 >= 74 && * p2 <= 103 ) || ( * p2 >= 110 && * p2 <= 122 )	331:10:6331:6385	478327	0	True				
ANR	478748	OrExpression	( * p2 >= 74 && * p2 <= 103 ) || ( * p2 >= 110 && * p2 <= 122 )		478327	0		||			
ANR	478749	AndExpression	* p2 >= 74 && * p2 <= 103		478327	0		&&			
ANR	478750	RelationalExpression	* p2 >= 74		478327	0		>=			
ANR	478751	UnaryOperationExpression	* p2		478327	0					
ANR	478752	UnaryOperator	*		478327	0					
ANR	478753	Identifier	p2		478327	1					
ANR	478754	PrimaryExpression	74		478327	1					
ANR	478755	RelationalExpression	* p2 <= 103		478327	1		<=			
ANR	478756	UnaryOperationExpression	* p2		478327	0					
ANR	478757	UnaryOperator	*		478327	0					
ANR	478758	Identifier	p2		478327	1					
ANR	478759	PrimaryExpression	103		478327	1					
ANR	478760	AndExpression	* p2 >= 110 && * p2 <= 122		478327	1		&&			
ANR	478761	RelationalExpression	* p2 >= 110		478327	0		>=			
ANR	478762	UnaryOperationExpression	* p2		478327	0					
ANR	478763	UnaryOperator	*		478327	0					
ANR	478764	Identifier	p2		478327	1					
ANR	478765	PrimaryExpression	110		478327	1					
ANR	478766	RelationalExpression	* p2 <= 122		478327	1		<=			
ANR	478767	UnaryOperationExpression	* p2		478327	0					
ANR	478768	UnaryOperator	*		478327	0					
ANR	478769	Identifier	p2		478327	1					
ANR	478770	PrimaryExpression	122		478327	1					
ANR	478771	ExpressionStatement	( * p2 ) ++	332:1:6389:6396	478327	1	True				
ANR	478772	PostIncDecOperationExpression	( * p2 ) ++		478327	0					
ANR	478773	UnaryOperationExpression	* p2		478327	0					
ANR	478774	UnaryOperator	*		478327	0					
ANR	478775	Identifier	p2		478327	1					
ANR	478776	IncDec	++		478327	1					
ANR	478777	ElseStatement	else		478327	0					
ANR	478778	IfStatement	if ( * p2 == 131 || * p2 == 69 )		478327	0					
ANR	478779	Condition	* p2 == 131 || * p2 == 69	333:15:6413:6435	478327	0	True				
ANR	478780	OrExpression	* p2 == 131 || * p2 == 69		478327	0		||			
ANR	478781	EqualityExpression	* p2 == 131		478327	0		==			
ANR	478782	UnaryOperationExpression	* p2		478327	0					
ANR	478783	UnaryOperator	*		478327	0					
ANR	478784	Identifier	p2		478327	1					
ANR	478785	PrimaryExpression	131		478327	1					
ANR	478786	EqualityExpression	* p2 == 69		478327	1		==			
ANR	478787	UnaryOperationExpression	* p2		478327	0					
ANR	478788	UnaryOperator	*		478327	0					
ANR	478789	Identifier	p2		478327	1					
ANR	478790	PrimaryExpression	69		478327	1					
ANR	478791	ExpressionStatement	* p2 = 148	334:1:6439:6448	478327	1	True				
ANR	478792	AssignmentExpression	* p2 = 148		478327	0		=			
ANR	478793	UnaryOperationExpression	* p2		478327	0					
ANR	478794	UnaryOperator	*		478327	0					
ANR	478795	Identifier	p2		478327	1					
ANR	478796	PrimaryExpression	148		478327	1					
ANR	478797	ElseStatement	else		478327	0					
ANR	478798	IfStatement	if ( handaku && * p2 >= 110 && * p2 <= 122 )		478327	0					
ANR	478799	Condition	handaku && * p2 >= 110 && * p2 <= 122	336:11:6467:6501	478327	0	True				
ANR	478800	AndExpression	handaku && * p2 >= 110 && * p2 <= 122		478327	0		&&			
ANR	478801	Identifier	handaku		478327	0					
ANR	478802	AndExpression	* p2 >= 110 && * p2 <= 122		478327	1		&&			
ANR	478803	RelationalExpression	* p2 >= 110		478327	0		>=			
ANR	478804	UnaryOperationExpression	* p2		478327	0					
ANR	478805	UnaryOperator	*		478327	0					
ANR	478806	Identifier	p2		478327	1					
ANR	478807	PrimaryExpression	110		478327	1					
ANR	478808	RelationalExpression	* p2 <= 122		478327	1		<=			
ANR	478809	UnaryOperationExpression	* p2		478327	0					
ANR	478810	UnaryOperator	*		478327	0					
ANR	478811	Identifier	p2		478327	1					
ANR	478812	PrimaryExpression	122		478327	1					
ANR	478813	ExpressionStatement	( * p2 ) += 2	337:4:6508:6518	478327	1	True				
ANR	478814	AssignmentExpression	( * p2 ) += 2		478327	0		+=			
ANR	478815	UnaryOperationExpression	* p2		478327	0					
ANR	478816	UnaryOperator	*		478327	0					
ANR	478817	Identifier	p2		478327	1					
ANR	478818	PrimaryExpression	2		478327	1					
ANR	478819	ReturnType	static void		478327	1					
ANR	478820	Identifier	han2zen		478327	2					
ANR	478821	ParameterList	"int * p1 , int * p2"		478327	3					
ANR	478822	Parameter	int * p1	249:9:5009:5015	478327	0	True				
ANR	478823	ParameterType	int *		478327	0					
ANR	478824	Identifier	p1		478327	1					
ANR	478825	Parameter	int * p2	249:18:5018:5024	478327	1	True				
ANR	478826	ParameterType	int *		478327	0					
ANR	478827	Identifier	p2		478327	1					
ANR	478828	CFGEntryNode	ENTRY		478327		True				
ANR	478829	CFGExitNode	EXIT		478327		True				
ANR	478830	Symbol	IS_HANDAKU		478327						
ANR	478831	Symbol	p1		478327						
ANR	478832	Symbol	p2		478327						
ANR	478833	Symbol	c		478327						
ANR	478834	Symbol	* p1		478327						
ANR	478835	Symbol	* * c		478327						
ANR	478836	Symbol	daku		478327						
ANR	478837	Symbol	TRUE		478327						
ANR	478838	Symbol	* p2		478327						
ANR	478839	Symbol	* c		478327						
ANR	478840	Symbol	* * mtable		478327						
ANR	478841	Symbol	mtable		478327						
ANR	478842	Symbol	handaku		478327						
ANR	478843	Symbol	FALSE		478327						
ANR	478844	Symbol	* mtable		478327						
ANR	478845	Symbol	IS_DAKU		478327						
ANR	478846	Function	do_convert	343:0:6640:9054							
ANR	478847	FunctionDef	"do_convert (unsigned char * to , unsigned char * from , const char * code)"		478846	0					
ANR	478848	CompoundStatement		345:0:6722:9054	478846	0					
ANR	478849	IdentifierDeclStatement	iconv_t cd ;	347:2:6744:6754	478846	0	True				
ANR	478850	IdentifierDecl	cd		478846	0					
ANR	478851	IdentifierDeclType	iconv_t		478846	0					
ANR	478852	Identifier	cd		478846	1					
ANR	478853	IdentifierDeclStatement	"size_t from_len , to_len ;"	348:2:6758:6781	478846	1	True				
ANR	478854	IdentifierDecl	from_len		478846	0					
ANR	478855	IdentifierDeclType	size_t		478846	0					
ANR	478856	Identifier	from_len		478846	1					
ANR	478857	IdentifierDecl	to_len		478846	1					
ANR	478858	IdentifierDeclType	size_t		478846	0					
ANR	478859	Identifier	to_len		478846	1					
ANR	478860	IfStatement	"if ( ( cd = iconv_open ( EUCSTR , code ) ) == ( iconv_t ) - 1 )"		478846	2					
ANR	478861	Condition	"( cd = iconv_open ( EUCSTR , code ) ) == ( iconv_t ) - 1"	350:6:6790:6838	478846	0	True				
ANR	478862	EqualityExpression	"( cd = iconv_open ( EUCSTR , code ) ) == ( iconv_t ) - 1"		478846	0		==			
ANR	478863	AssignmentExpression	"cd = iconv_open ( EUCSTR , code )"		478846	0		=			
ANR	478864	Identifier	cd		478846	0					
ANR	478865	CallExpression	"iconv_open ( EUCSTR , code )"		478846	1					
ANR	478866	Callee	iconv_open		478846	0					
ANR	478867	Identifier	iconv_open		478846	0					
ANR	478868	ArgumentList	EUCSTR		478846	1					
ANR	478869	Argument	EUCSTR		478846	0					
ANR	478870	Identifier	EUCSTR		478846	0					
ANR	478871	Argument	code		478846	1					
ANR	478872	Identifier	code		478846	0					
ANR	478873	CastExpression	( iconv_t ) - 1		478846	1					
ANR	478874	CastTarget	iconv_t		478846	0					
ANR	478875	UnaryOperationExpression	- 1		478846	1					
ANR	478876	UnaryOperator	-		478846	0					
ANR	478877	PrimaryExpression	1		478846	1					
ANR	478878	CompoundStatement		7:4:122:122	478846	1					
ANR	478879	ExpressionStatement	"error ( ""iconv_open() error"" )"	352:6:6853:6881	478846	0	True				
ANR	478880	CallExpression	"error ( ""iconv_open() error"" )"		478846	0					
ANR	478881	Callee	error		478846	0					
ANR	478882	Identifier	error		478846	0					
ANR	478883	ArgumentList	"""iconv_open() error"""		478846	1					
ANR	478884	Argument	"""iconv_open() error"""		478846	0					
ANR	478885	PrimaryExpression	"""iconv_open() error"""		478846	0					
ANR	478886	IfStatement	if ( errno == EINVAL )		478846	1					
ANR	478887	Condition	errno == EINVAL	354:10:6913:6927	478846	0	True				
ANR	478888	EqualityExpression	errno == EINVAL		478846	0		==			
ANR	478889	Identifier	errno		478846	0					
ANR	478890	Identifier	EINVAL		478846	1					
ANR	478891	ExpressionStatement	"error ( ""invalid code specification: \\""%s\\"" or \\""%s\\"""" , EUCSTR , code )"	355:1:6931:7007	478846	1	True				
ANR	478892	CallExpression	"error ( ""invalid code specification: \\""%s\\"" or \\""%s\\"""" , EUCSTR , code )"		478846	0					
ANR	478893	Callee	error		478846	0					
ANR	478894	Identifier	error		478846	0					
ANR	478895	ArgumentList	"""invalid code specification: \\""%s\\"" or \\""%s\\"""""		478846	1					
ANR	478896	Argument	"""invalid code specification: \\""%s\\"" or \\""%s\\"""""		478846	0					
ANR	478897	PrimaryExpression	"""invalid code specification: \\""%s\\"" or \\""%s\\"""""		478846	0					
ANR	478898	Argument	EUCSTR		478846	1					
ANR	478899	Identifier	EUCSTR		478846	0					
ANR	478900	Argument	code		478846	2					
ANR	478901	Identifier	code		478846	0					
ANR	478902	ExpressionStatement	"strcpy ( ( char * ) to , ( const char * ) from )"	358:6:7022:7063	478846	2	True				
ANR	478903	CallExpression	"strcpy ( ( char * ) to , ( const char * ) from )"		478846	0					
ANR	478904	Callee	strcpy		478846	0					
ANR	478905	Identifier	strcpy		478846	0					
ANR	478906	ArgumentList	( char * ) to		478846	1					
ANR	478907	Argument	( char * ) to		478846	0					
ANR	478908	CastExpression	( char * ) to		478846	0					
ANR	478909	CastTarget	char *		478846	0					
ANR	478910	Identifier	to		478846	1					
ANR	478911	Argument	( const char * ) from		478846	1					
ANR	478912	CastExpression	( const char * ) from		478846	0					
ANR	478913	CastTarget	const char *		478846	0					
ANR	478914	Identifier	from		478846	1					
ANR	478915	ReturnStatement	return ;	359:6:7071:7077	478846	3	True				
ANR	478916	ExpressionStatement	from_len = strlen ( ( const char * ) from ) + 1	362:2:7088:7131	478846	3	True				
ANR	478917	AssignmentExpression	from_len = strlen ( ( const char * ) from ) + 1		478846	0		=			
ANR	478918	Identifier	from_len		478846	0					
ANR	478919	AdditiveExpression	strlen ( ( const char * ) from ) + 1		478846	1		+			
ANR	478920	CallExpression	strlen ( ( const char * ) from )		478846	0					
ANR	478921	Callee	strlen		478846	0					
ANR	478922	Identifier	strlen		478846	0					
ANR	478923	ArgumentList	( const char * ) from		478846	1					
ANR	478924	Argument	( const char * ) from		478846	0					
ANR	478925	CastExpression	( const char * ) from		478846	0					
ANR	478926	CastTarget	const char *		478846	0					
ANR	478927	Identifier	from		478846	1					
ANR	478928	PrimaryExpression	1		478846	1					
ANR	478929	ExpressionStatement	to_len = BUFSIZ	363:2:7135:7150	478846	4	True				
ANR	478930	AssignmentExpression	to_len = BUFSIZ		478846	0		=			
ANR	478931	Identifier	to_len		478846	0					
ANR	478932	Identifier	BUFSIZ		478846	1					
ANR	478933	IfStatement	"if ( ( int ) iconv ( cd , ( char * * ) & from , & from_len , ( char * * ) & to , & to_len ) == - 1 )"		478846	5					
ANR	478934	Condition	"( int ) iconv ( cd , ( char * * ) & from , & from_len , ( char * * ) & to , & to_len ) == - 1"	365:6:7159:7231	478846	0	True				
ANR	478935	EqualityExpression	"( int ) iconv ( cd , ( char * * ) & from , & from_len , ( char * * ) & to , & to_len ) == - 1"		478846	0		==			
ANR	478936	CastExpression	"( int ) iconv ( cd , ( char * * ) & from , & from_len , ( char * * ) & to , & to_len )"		478846	0					
ANR	478937	CastTarget	int		478846	0					
ANR	478938	CallExpression	"iconv ( cd , ( char * * ) & from , & from_len , ( char * * ) & to , & to_len )"		478846	1					
ANR	478939	Callee	iconv		478846	0					
ANR	478940	Identifier	iconv		478846	0					
ANR	478941	ArgumentList	cd		478846	1					
ANR	478942	Argument	cd		478846	0					
ANR	478943	Identifier	cd		478846	0					
ANR	478944	Argument	( char * * ) & from		478846	1					
ANR	478945	CastExpression	( char * * ) & from		478846	0					
ANR	478946	CastTarget	char * *		478846	0					
ANR	478947	UnaryOperationExpression	& from		478846	1					
ANR	478948	UnaryOperator	&		478846	0					
ANR	478949	Identifier	from		478846	1					
ANR	478950	Argument	& from_len		478846	2					
ANR	478951	UnaryOperationExpression	& from_len		478846	0					
ANR	478952	UnaryOperator	&		478846	0					
ANR	478953	Identifier	from_len		478846	1					
ANR	478954	Argument	( char * * ) & to		478846	3					
ANR	478955	CastExpression	( char * * ) & to		478846	0					
ANR	478956	CastTarget	char * *		478846	0					
ANR	478957	UnaryOperationExpression	& to		478846	1					
ANR	478958	UnaryOperator	&		478846	0					
ANR	478959	Identifier	to		478846	1					
ANR	478960	Argument	& to_len		478846	4					
ANR	478961	UnaryOperationExpression	& to_len		478846	0					
ANR	478962	UnaryOperator	&		478846	0					
ANR	478963	Identifier	to_len		478846	1					
ANR	478964	UnaryOperationExpression	- 1		478846	1					
ANR	478965	UnaryOperator	-		478846	0					
ANR	478966	PrimaryExpression	1		478846	1					
ANR	478967	CompoundStatement		22:4:515:515	478846	1					
ANR	478968	IfStatement	if ( errno == EINVAL )		478846	0					
ANR	478969	Condition	errno == EINVAL	368:10:7270:7284	478846	0	True				
ANR	478970	EqualityExpression	errno == EINVAL		478846	0		==			
ANR	478971	Identifier	errno		478846	0					
ANR	478972	Identifier	EINVAL		478846	1					
ANR	478973	ExpressionStatement	"error ( ""invalid end of input string"" )"	369:1:7288:7325	478846	1	True				
ANR	478974	CallExpression	"error ( ""invalid end of input string"" )"		478846	0					
ANR	478975	Callee	error		478846	0					
ANR	478976	Identifier	error		478846	0					
ANR	478977	ArgumentList	"""invalid end of input string"""		478846	1					
ANR	478978	Argument	"""invalid end of input string"""		478846	0					
ANR	478979	PrimaryExpression	"""invalid end of input string"""		478846	0					
ANR	478980	ElseStatement	else		478846	0					
ANR	478981	IfStatement	if ( errno == EILSEQ )		478846	0					
ANR	478982	Condition	errno == EILSEQ	370:15:7342:7356	478846	0	True				
ANR	478983	EqualityExpression	errno == EILSEQ		478846	0		==			
ANR	478984	Identifier	errno		478846	0					
ANR	478985	Identifier	EILSEQ		478846	1					
ANR	478986	ExpressionStatement	"error ( ""invalid code in input string"" )"	371:1:7360:7398	478846	1	True				
ANR	478987	CallExpression	"error ( ""invalid code in input string"" )"		478846	0					
ANR	478988	Callee	error		478846	0					
ANR	478989	Identifier	error		478846	0					
ANR	478990	ArgumentList	"""invalid code in input string"""		478846	1					
ANR	478991	Argument	"""invalid code in input string"""		478846	0					
ANR	478992	PrimaryExpression	"""invalid code in input string"""		478846	0					
ANR	478993	ElseStatement	else		478846	0					
ANR	478994	IfStatement	if ( errno == E2BIG )		478846	0					
ANR	478995	Condition	errno == E2BIG	372:15:7415:7428	478846	0	True				
ANR	478996	EqualityExpression	errno == E2BIG		478846	0		==			
ANR	478997	Identifier	errno		478846	0					
ANR	478998	Identifier	E2BIG		478846	1					
ANR	478999	ExpressionStatement	"error ( ""output buffer overflow at do_convert()"" )"	373:1:7432:7480	478846	1	True				
ANR	479000	CallExpression	"error ( ""output buffer overflow at do_convert()"" )"		478846	0					
ANR	479001	Callee	error		478846	0					
ANR	479002	Identifier	error		478846	0					
ANR	479003	ArgumentList	"""output buffer overflow at do_convert()"""		478846	1					
ANR	479004	Argument	"""output buffer overflow at do_convert()"""		478846	0					
ANR	479005	PrimaryExpression	"""output buffer overflow at do_convert()"""		478846	0					
ANR	479006	ElseStatement	else		478846	0					
ANR	479007	ExpressionStatement	"error ( ""something happen"" )"	376:1:7501:7527	478846	0	True				
ANR	479008	CallExpression	"error ( ""something happen"" )"		478846	0					
ANR	479009	Callee	error		478846	0					
ANR	479010	Identifier	error		478846	0					
ANR	479011	ArgumentList	"""something happen"""		478846	1					
ANR	479012	Argument	"""something happen"""		478846	0					
ANR	479013	PrimaryExpression	"""something happen"""		478846	0					
ANR	479014	ExpressionStatement	"strcpy ( ( char * ) to , ( const char * ) from )"	377:6:7535:7576	478846	1	True				
ANR	479015	CallExpression	"strcpy ( ( char * ) to , ( const char * ) from )"		478846	0					
ANR	479016	Callee	strcpy		478846	0					
ANR	479017	Identifier	strcpy		478846	0					
ANR	479018	ArgumentList	( char * ) to		478846	1					
ANR	479019	Argument	( char * ) to		478846	0					
ANR	479020	CastExpression	( char * ) to		478846	0					
ANR	479021	CastTarget	char *		478846	0					
ANR	479022	Identifier	to		478846	1					
ANR	479023	Argument	( const char * ) from		478846	1					
ANR	479024	CastExpression	( const char * ) from		478846	0					
ANR	479025	CastTarget	const char *		478846	0					
ANR	479026	Identifier	from		478846	1					
ANR	479027	ReturnStatement	return ;	378:6:7584:7590	478846	2	True				
ANR	479028	IfStatement	if ( iconv_close ( cd ) != 0 )		478846	6					
ANR	479029	Condition	iconv_close ( cd ) != 0	381:6:7605:7625	478846	0	True				
ANR	479030	EqualityExpression	iconv_close ( cd ) != 0		478846	0		!=			
ANR	479031	CallExpression	iconv_close ( cd )		478846	0					
ANR	479032	Callee	iconv_close		478846	0					
ANR	479033	Identifier	iconv_close		478846	0					
ANR	479034	ArgumentList	cd		478846	1					
ANR	479035	Argument	cd		478846	0					
ANR	479036	Identifier	cd		478846	0					
ANR	479037	PrimaryExpression	0		478846	1					
ANR	479038	CompoundStatement		38:4:909:909	478846	1					
ANR	479039	ExpressionStatement	"error ( ""iconv_close() error"" )"	383:6:7640:7669	478846	0	True				
ANR	479040	CallExpression	"error ( ""iconv_close() error"" )"		478846	0					
ANR	479041	Callee	error		478846	0					
ANR	479042	Identifier	error		478846	0					
ANR	479043	ArgumentList	"""iconv_close() error"""		478846	1					
ANR	479044	Argument	"""iconv_close() error"""		478846	0					
ANR	479045	PrimaryExpression	"""iconv_close() error"""		478846	0					
ANR	479046	ReturnType	static void		478846	1					
ANR	479047	Identifier	do_convert		478846	2					
ANR	479048	ParameterList	"unsigned char * to , unsigned char * from , const char * code"		478846	3					
ANR	479049	Parameter	unsigned char * to	344:12:6664:6680	478846	0	True				
ANR	479050	ParameterType	unsigned char *		478846	0					
ANR	479051	Identifier	to		478846	1					
ANR	479052	Parameter	unsigned char * from	344:31:6683:6701	478846	1	True				
ANR	479053	ParameterType	unsigned char *		478846	0					
ANR	479054	Identifier	from		478846	1					
ANR	479055	Parameter	const char * code	344:52:6704:6719	478846	2	True				
ANR	479056	ParameterType	const char *		478846	0					
ANR	479057	Identifier	code		478846	1					
ANR	479058	CFGEntryNode	ENTRY		478846		True				
ANR	479059	CFGExitNode	EXIT		478846		True				
ANR	479060	Symbol	cd		478846						
ANR	479061	Symbol	errno		478846						
ANR	479062	Symbol	code		478846						
ANR	479063	Symbol	& to		478846						
ANR	479064	Symbol	& to_len		478846						
ANR	479065	Symbol	to_len		478846						
ANR	479066	Symbol	iconv		478846						
ANR	479067	Symbol	& from		478846						
ANR	479068	Symbol	EINVAL		478846						
ANR	479069	Symbol	strlen		478846						
ANR	479070	Symbol	EILSEQ		478846						
ANR	479071	Symbol	& from_len		478846						
ANR	479072	Symbol	from_len		478846						
ANR	479073	Symbol	EUCSTR		478846						
ANR	479074	Symbol	iconv_close		478846						
ANR	479075	Symbol	E2BIG		478846						
ANR	479076	Symbol	from		478846						
ANR	479077	Symbol	to		478846						
ANR	479078	Symbol	iconv_open		478846						
ANR	479079	Symbol	BUFSIZ		478846						
ANR	479080	Function	do_check_and_conv	465:0:9057:11022							
ANR	479081	FunctionDef	"do_check_and_conv (unsigned char * to , unsigned char * from)"		479080	0					
ANR	479082	CompoundStatement		467:0:9127:11022	479080	0					
ANR	479083	Statement	static	468:2:9131:9136	479080	0	True				
ANR	479084	IdentifierDeclStatement	unsigned char tmp [ BUFSIZ ] ;	468:9:9138:9163	479080	1	True				
ANR	479085	IdentifierDecl	tmp [ BUFSIZ ]		479080	0					
ANR	479086	IdentifierDeclType	unsigned char [ BUFSIZ ]		479080	0					
ANR	479087	Identifier	tmp		479080	1					
ANR	479088	Identifier	BUFSIZ		479080	2					
ANR	479089	IdentifierDeclStatement	"int p1 , p2 , i , j ;"	469:2:9167:9183	479080	2	True				
ANR	479090	IdentifierDecl	p1		479080	0					
ANR	479091	IdentifierDeclType	int		479080	0					
ANR	479092	Identifier	p1		479080	1					
ANR	479093	IdentifierDecl	p2		479080	1					
ANR	479094	IdentifierDeclType	int		479080	0					
ANR	479095	Identifier	p2		479080	1					
ANR	479096	IdentifierDecl	i		479080	2					
ANR	479097	IdentifierDeclType	int		479080	0					
ANR	479098	Identifier	i		479080	1					
ANR	479099	IdentifierDecl	j		479080	3					
ANR	479100	IdentifierDeclType	int		479080	0					
ANR	479101	Identifier	j		479080	1					
ANR	479102	IdentifierDeclStatement	int kanji = TRUE ;	470:2:9187:9203	479080	3	True				
ANR	479103	IdentifierDecl	kanji = TRUE		479080	0					
ANR	479104	IdentifierDeclType	int		479080	0					
ANR	479105	Identifier	kanji		479080	1					
ANR	479106	AssignmentExpression	kanji = TRUE		479080	2		=			
ANR	479107	Identifier	TRUE		479080	0					
ANR	479108	Identifier	TRUE		479080	1					
ANR	479109	SwitchStatement	switch ( DetectKanjiCode ( from ) )		479080	4					
ANR	479110	Condition	DetectKanjiCode ( from )	472:10:9216:9237	479080	0	True				
ANR	479111	CallExpression	DetectKanjiCode ( from )		479080	0					
ANR	479112	Callee	DetectKanjiCode		479080	0					
ANR	479113	Identifier	DetectKanjiCode		479080	0					
ANR	479114	ArgumentList	from		479080	1					
ANR	479115	Argument	from		479080	0					
ANR	479116	Identifier	from		479080	0					
ANR	479117	CompoundStatement		7:4:116:116	479080	1					
ANR	479118	Label	case NEW :	474:4:9250:9258	479080	0	True				
ANR	479119	Identifier	NEW		479080	0					
ANR	479120	ExpressionStatement	"debug ( ""Kanji code is New JIS."" )"	475:6:9266:9298	479080	1	True				
ANR	479121	CallExpression	"debug ( ""Kanji code is New JIS."" )"		479080	0					
ANR	479122	Callee	debug		479080	0					
ANR	479123	Identifier	debug		479080	0					
ANR	479124	ArgumentList	"""Kanji code is New JIS."""		479080	1					
ANR	479125	Argument	"""Kanji code is New JIS."""		479080	0					
ANR	479126	PrimaryExpression	"""Kanji code is New JIS."""		479080	0					
ANR	479127	ExpressionStatement	"do_convert ( tmp , from , NEWJISSTR )"	476:6:9306:9339	479080	2	True				
ANR	479128	CallExpression	"do_convert ( tmp , from , NEWJISSTR )"		479080	0					
ANR	479129	Callee	do_convert		479080	0					
ANR	479130	Identifier	do_convert		479080	0					
ANR	479131	ArgumentList	tmp		479080	1					
ANR	479132	Argument	tmp		479080	0					
ANR	479133	Identifier	tmp		479080	0					
ANR	479134	Argument	from		479080	1					
ANR	479135	Identifier	from		479080	0					
ANR	479136	Argument	NEWJISSTR		479080	2					
ANR	479137	Identifier	NEWJISSTR		479080	0					
ANR	479138	BreakStatement	break ;	477:6:9347:9352	479080	3	True				
ANR	479139	Label	case OLD :	478:4:9358:9366	479080	4	True				
ANR	479140	Identifier	OLD		479080	0					
ANR	479141	ExpressionStatement	"debug ( ""Kanji code is Old JIS."" )"	479:6:9374:9406	479080	5	True				
ANR	479142	CallExpression	"debug ( ""Kanji code is Old JIS."" )"		479080	0					
ANR	479143	Callee	debug		479080	0					
ANR	479144	Identifier	debug		479080	0					
ANR	479145	ArgumentList	"""Kanji code is Old JIS."""		479080	1					
ANR	479146	Argument	"""Kanji code is Old JIS."""		479080	0					
ANR	479147	PrimaryExpression	"""Kanji code is Old JIS."""		479080	0					
ANR	479148	ExpressionStatement	"do_convert ( tmp , from , OLDJISSTR )"	480:6:9414:9447	479080	6	True				
ANR	479149	CallExpression	"do_convert ( tmp , from , OLDJISSTR )"		479080	0					
ANR	479150	Callee	do_convert		479080	0					
ANR	479151	Identifier	do_convert		479080	0					
ANR	479152	ArgumentList	tmp		479080	1					
ANR	479153	Argument	tmp		479080	0					
ANR	479154	Identifier	tmp		479080	0					
ANR	479155	Argument	from		479080	1					
ANR	479156	Identifier	from		479080	0					
ANR	479157	Argument	OLDJISSTR		479080	2					
ANR	479158	Identifier	OLDJISSTR		479080	0					
ANR	479159	BreakStatement	break ;	481:6:9455:9460	479080	7	True				
ANR	479160	Label	case ESCI :	482:4:9466:9475	479080	8	True				
ANR	479161	Identifier	ESCI		479080	0					
ANR	479162	ExpressionStatement	"debug ( ""This string includes Hankaku-Kana (jisx0201) escape sequence [ESC] + ( + I."" )"	483:6:9483:9568	479080	9	True				
ANR	479163	CallExpression	"debug ( ""This string includes Hankaku-Kana (jisx0201) escape sequence [ESC] + ( + I."" )"		479080	0					
ANR	479164	Callee	debug		479080	0					
ANR	479165	Identifier	debug		479080	0					
ANR	479166	ArgumentList	"""This string includes Hankaku-Kana (jisx0201) escape sequence [ESC] + ( + I."""		479080	1					
ANR	479167	Argument	"""This string includes Hankaku-Kana (jisx0201) escape sequence [ESC] + ( + I."""		479080	0					
ANR	479168	PrimaryExpression	"""This string includes Hankaku-Kana (jisx0201) escape sequence [ESC] + ( + I."""		479080	0					
ANR	479169	ExpressionStatement	"do_convert ( tmp , from , NEWJISSTR )"	484:6:9576:9609	479080	10	True				
ANR	479170	CallExpression	"do_convert ( tmp , from , NEWJISSTR )"		479080	0					
ANR	479171	Callee	do_convert		479080	0					
ANR	479172	Identifier	do_convert		479080	0					
ANR	479173	ArgumentList	tmp		479080	1					
ANR	479174	Argument	tmp		479080	0					
ANR	479175	Identifier	tmp		479080	0					
ANR	479176	Argument	from		479080	1					
ANR	479177	Identifier	from		479080	0					
ANR	479178	Argument	NEWJISSTR		479080	2					
ANR	479179	Identifier	NEWJISSTR		479080	0					
ANR	479180	BreakStatement	break ;	485:6:9617:9622	479080	11	True				
ANR	479181	Label	case NEC :	486:4:9628:9636	479080	12	True				
ANR	479182	Identifier	NEC		479080	0					
ANR	479183	ExpressionStatement	"debug ( ""Kanji code is NEC Kanji."" )"	487:6:9644:9678	479080	13	True				
ANR	479184	CallExpression	"debug ( ""Kanji code is NEC Kanji."" )"		479080	0					
ANR	479185	Callee	debug		479080	0					
ANR	479186	Identifier	debug		479080	0					
ANR	479187	ArgumentList	"""Kanji code is NEC Kanji."""		479080	1					
ANR	479188	Argument	"""Kanji code is NEC Kanji."""		479080	0					
ANR	479189	PrimaryExpression	"""Kanji code is NEC Kanji."""		479080	0					
ANR	479190	ExpressionStatement	"error ( ""cannot convert NEC Kanji."" )"	488:6:9686:9721	479080	14	True				
ANR	479191	CallExpression	"error ( ""cannot convert NEC Kanji."" )"		479080	0					
ANR	479192	Callee	error		479080	0					
ANR	479193	Identifier	error		479080	0					
ANR	479194	ArgumentList	"""cannot convert NEC Kanji."""		479080	1					
ANR	479195	Argument	"""cannot convert NEC Kanji."""		479080	0					
ANR	479196	PrimaryExpression	"""cannot convert NEC Kanji."""		479080	0					
ANR	479197	ExpressionStatement	"ustrcpy ( tmp , from )"	489:6:9729:9748	479080	15	True				
ANR	479198	CallExpression	"ustrcpy ( tmp , from )"		479080	0					
ANR	479199	Callee	ustrcpy		479080	0					
ANR	479200	Identifier	ustrcpy		479080	0					
ANR	479201	ArgumentList	tmp		479080	1					
ANR	479202	Argument	tmp		479080	0					
ANR	479203	Identifier	tmp		479080	0					
ANR	479204	Argument	from		479080	1					
ANR	479205	Identifier	from		479080	0					
ANR	479206	ExpressionStatement	kanji = FALSE	490:6:9756:9769	479080	16	True				
ANR	479207	AssignmentExpression	kanji = FALSE		479080	0		=			
ANR	479208	Identifier	kanji		479080	0					
ANR	479209	Identifier	FALSE		479080	1					
ANR	479210	BreakStatement	break ;	491:6:9777:9782	479080	17	True				
ANR	479211	Label	case EUC :	492:4:9788:9796	479080	18	True				
ANR	479212	Identifier	EUC		479080	0					
ANR	479213	ExpressionStatement	"debug ( ""Kanji code is EUC."" )"	493:6:9804:9832	479080	19	True				
ANR	479214	CallExpression	"debug ( ""Kanji code is EUC."" )"		479080	0					
ANR	479215	Callee	debug		479080	0					
ANR	479216	Identifier	debug		479080	0					
ANR	479217	ArgumentList	"""Kanji code is EUC."""		479080	1					
ANR	479218	Argument	"""Kanji code is EUC."""		479080	0					
ANR	479219	PrimaryExpression	"""Kanji code is EUC."""		479080	0					
ANR	479220	ExpressionStatement	"ustrcpy ( tmp , from )"	494:6:9840:9859	479080	20	True				
ANR	479221	CallExpression	"ustrcpy ( tmp , from )"		479080	0					
ANR	479222	Callee	ustrcpy		479080	0					
ANR	479223	Identifier	ustrcpy		479080	0					
ANR	479224	ArgumentList	tmp		479080	1					
ANR	479225	Argument	tmp		479080	0					
ANR	479226	Identifier	tmp		479080	0					
ANR	479227	Argument	from		479080	1					
ANR	479228	Identifier	from		479080	0					
ANR	479229	BreakStatement	break ;	495:6:9867:9872	479080	21	True				
ANR	479230	Label	case SJIS :	496:4:9878:9887	479080	22	True				
ANR	479231	Identifier	SJIS		479080	0					
ANR	479232	ExpressionStatement	"debug ( ""Kanji code is SJIS."" )"	497:6:9895:9924	479080	23	True				
ANR	479233	CallExpression	"debug ( ""Kanji code is SJIS."" )"		479080	0					
ANR	479234	Callee	debug		479080	0					
ANR	479235	Identifier	debug		479080	0					
ANR	479236	ArgumentList	"""Kanji code is SJIS."""		479080	1					
ANR	479237	Argument	"""Kanji code is SJIS."""		479080	0					
ANR	479238	PrimaryExpression	"""Kanji code is SJIS."""		479080	0					
ANR	479239	ExpressionStatement	"do_convert ( tmp , from , SJISSTR )"	498:6:9932:9963	479080	24	True				
ANR	479240	CallExpression	"do_convert ( tmp , from , SJISSTR )"		479080	0					
ANR	479241	Callee	do_convert		479080	0					
ANR	479242	Identifier	do_convert		479080	0					
ANR	479243	ArgumentList	tmp		479080	1					
ANR	479244	Argument	tmp		479080	0					
ANR	479245	Identifier	tmp		479080	0					
ANR	479246	Argument	from		479080	1					
ANR	479247	Identifier	from		479080	0					
ANR	479248	Argument	SJISSTR		479080	2					
ANR	479249	Identifier	SJISSTR		479080	0					
ANR	479250	BreakStatement	break ;	499:6:9971:9976	479080	25	True				
ANR	479251	Label	case EUCORSJIS :	500:4:9982:9996	479080	26	True				
ANR	479252	Identifier	EUCORSJIS		479080	0					
ANR	479253	ExpressionStatement	"debug ( ""Kanji code is EUC or SJIS."" )"	501:6:10004:10040	479080	27	True				
ANR	479254	CallExpression	"debug ( ""Kanji code is EUC or SJIS."" )"		479080	0					
ANR	479255	Callee	debug		479080	0					
ANR	479256	Identifier	debug		479080	0					
ANR	479257	ArgumentList	"""Kanji code is EUC or SJIS."""		479080	1					
ANR	479258	Argument	"""Kanji code is EUC or SJIS."""		479080	0					
ANR	479259	PrimaryExpression	"""Kanji code is EUC or SJIS."""		479080	0					
ANR	479260	ExpressionStatement	"ustrcpy ( tmp , from )"	502:6:10048:10067	479080	28	True				
ANR	479261	CallExpression	"ustrcpy ( tmp , from )"		479080	0					
ANR	479262	Callee	ustrcpy		479080	0					
ANR	479263	Identifier	ustrcpy		479080	0					
ANR	479264	ArgumentList	tmp		479080	1					
ANR	479265	Argument	tmp		479080	0					
ANR	479266	Identifier	tmp		479080	0					
ANR	479267	Argument	from		479080	1					
ANR	479268	Identifier	from		479080	0					
ANR	479269	ExpressionStatement	kanji = FALSE	503:6:10075:10088	479080	29	True				
ANR	479270	AssignmentExpression	kanji = FALSE		479080	0		=			
ANR	479271	Identifier	kanji		479080	0					
ANR	479272	Identifier	FALSE		479080	1					
ANR	479273	BreakStatement	break ;	504:6:10096:10101	479080	30	True				
ANR	479274	Label	case ASCII :	505:4:10107:10117	479080	31	True				
ANR	479275	Identifier	ASCII		479080	0					
ANR	479276	ExpressionStatement	"debug ( ""This is ASCII string."" )"	506:6:10125:10156	479080	32	True				
ANR	479277	CallExpression	"debug ( ""This is ASCII string."" )"		479080	0					
ANR	479278	Callee	debug		479080	0					
ANR	479279	Identifier	debug		479080	0					
ANR	479280	ArgumentList	"""This is ASCII string."""		479080	1					
ANR	479281	Argument	"""This is ASCII string."""		479080	0					
ANR	479282	PrimaryExpression	"""This is ASCII string."""		479080	0					
ANR	479283	ExpressionStatement	"ustrcpy ( tmp , from )"	507:6:10164:10183	479080	33	True				
ANR	479284	CallExpression	"ustrcpy ( tmp , from )"		479080	0					
ANR	479285	Callee	ustrcpy		479080	0					
ANR	479286	Identifier	ustrcpy		479080	0					
ANR	479287	ArgumentList	tmp		479080	1					
ANR	479288	Argument	tmp		479080	0					
ANR	479289	Identifier	tmp		479080	0					
ANR	479290	Argument	from		479080	1					
ANR	479291	Identifier	from		479080	0					
ANR	479292	ExpressionStatement	kanji = FALSE	508:6:10191:10204	479080	34	True				
ANR	479293	AssignmentExpression	kanji = FALSE		479080	0		=			
ANR	479294	Identifier	kanji		479080	0					
ANR	479295	Identifier	FALSE		479080	1					
ANR	479296	BreakStatement	break ;	509:6:10212:10217	479080	35	True				
ANR	479297	Label	default :	510:4:10223:10230	479080	36	True				
ANR	479298	Identifier	default		479080	0					
ANR	479299	ExpressionStatement	"debug ( ""This string includes unknown code."" )"	511:6:10238:10282	479080	37	True				
ANR	479300	CallExpression	"debug ( ""This string includes unknown code."" )"		479080	0					
ANR	479301	Callee	debug		479080	0					
ANR	479302	Identifier	debug		479080	0					
ANR	479303	ArgumentList	"""This string includes unknown code."""		479080	1					
ANR	479304	Argument	"""This string includes unknown code."""		479080	0					
ANR	479305	PrimaryExpression	"""This string includes unknown code."""		479080	0					
ANR	479306	ExpressionStatement	"ustrcpy ( tmp , from )"	512:6:10290:10309	479080	38	True				
ANR	479307	CallExpression	"ustrcpy ( tmp , from )"		479080	0					
ANR	479308	Callee	ustrcpy		479080	0					
ANR	479309	Identifier	ustrcpy		479080	0					
ANR	479310	ArgumentList	tmp		479080	1					
ANR	479311	Argument	tmp		479080	0					
ANR	479312	Identifier	tmp		479080	0					
ANR	479313	Argument	from		479080	1					
ANR	479314	Identifier	from		479080	0					
ANR	479315	ExpressionStatement	kanji = FALSE	513:6:10317:10330	479080	39	True				
ANR	479316	AssignmentExpression	kanji = FALSE		479080	0		=			
ANR	479317	Identifier	kanji		479080	0					
ANR	479318	Identifier	FALSE		479080	1					
ANR	479319	BreakStatement	break ;	514:6:10338:10343	479080	40	True				
ANR	479320	IfStatement	if ( kanji )		479080	5					
ANR	479321	Condition	kanji	518:6:10397:10401	479080	0	True				
ANR	479322	Identifier	kanji		479080	0					
ANR	479323	CompoundStatement		53:4:1280:1280	479080	1					
ANR	479324	ExpressionStatement	j = 0	520:6:10416:10421	479080	0	True				
ANR	479325	AssignmentExpression	j = 0		479080	0		=			
ANR	479326	Identifier	j		479080	0					
ANR	479327	PrimaryExpression	0		479080	1					
ANR	479328	ForStatement	for ( i = 0 ; tmp [ i ] != '\\0' && j < BUFSIZ ; i ++ )		479080	1					
ANR	479329	ForInit	i = 0 ;	521:11:10434:10439	479080	0	True				
ANR	479330	AssignmentExpression	i = 0		479080	0		=			
ANR	479331	Identifier	i		479080	0					
ANR	479332	PrimaryExpression	0		479080	1					
ANR	479333	Condition	tmp [ i ] != '\\0' && j < BUFSIZ	521:18:10441:10468	479080	1	True				
ANR	479334	AndExpression	tmp [ i ] != '\\0' && j < BUFSIZ		479080	0		&&			
ANR	479335	EqualityExpression	tmp [ i ] != '\\0'		479080	0		!=			
ANR	479336	ArrayIndexing	tmp [ i ]		479080	0					
ANR	479337	Identifier	tmp		479080	0					
ANR	479338	Identifier	i		479080	1					
ANR	479339	PrimaryExpression	'\\0'		479080	1					
ANR	479340	RelationalExpression	j < BUFSIZ		479080	1		<			
ANR	479341	Identifier	j		479080	0					
ANR	479342	Identifier	BUFSIZ		479080	1					
ANR	479343	PostIncDecOperationExpression	i ++	521:48:10471:10473	479080	2	True				
ANR	479344	Identifier	i		479080	0					
ANR	479345	IncDec	++		479080	1					
ANR	479346	CompoundStatement		56:1:1349:1349	479080	3					
ANR	479347	IfStatement	if ( tmp [ i ] == SS2 )		479080	0					
ANR	479348	Condition	tmp [ i ] == SS2	523:7:10486:10498	479080	0	True				
ANR	479349	EqualityExpression	tmp [ i ] == SS2		479080	0		==			
ANR	479350	ArrayIndexing	tmp [ i ]		479080	0					
ANR	479351	Identifier	tmp		479080	0					
ANR	479352	Identifier	i		479080	1					
ANR	479353	Identifier	SS2		479080	1					
ANR	479354	CompoundStatement		58:5:1378:1378	479080	1					
ANR	479355	ExpressionStatement	p1 = tmp [ ++ i ]	525:7:10515:10528	479080	0	True				
ANR	479356	AssignmentExpression	p1 = tmp [ ++ i ]		479080	0		=			
ANR	479357	Identifier	p1		479080	0					
ANR	479358	ArrayIndexing	tmp [ ++ i ]		479080	1					
ANR	479359	Identifier	tmp		479080	0					
ANR	479360	UnaryExpression	++ i		479080	1					
ANR	479361	IncDec	++		479080	0					
ANR	479362	Identifier	i		479080	1					
ANR	479363	IfStatement	if ( tmp [ i + 1 ] == SS2 )		479080	1					
ANR	479364	Condition	tmp [ i + 1 ] == SS2	526:11:10541:10557	479080	0	True				
ANR	479365	EqualityExpression	tmp [ i + 1 ] == SS2		479080	0		==			
ANR	479366	ArrayIndexing	tmp [ i + 1 ]		479080	0					
ANR	479367	Identifier	tmp		479080	0					
ANR	479368	AdditiveExpression	i + 1		479080	1		+			
ANR	479369	Identifier	i		479080	0					
ANR	479370	PrimaryExpression	1		479080	1					
ANR	479371	Identifier	SS2		479080	1					
ANR	479372	CompoundStatement		61:2:1434:1434	479080	1					
ANR	479373	ExpressionStatement	p2 = tmp [ i + 2 ]	528:4:10568:10583	479080	0	True				
ANR	479374	AssignmentExpression	p2 = tmp [ i + 2 ]		479080	0		=			
ANR	479375	Identifier	p2		479080	0					
ANR	479376	ArrayIndexing	tmp [ i + 2 ]		479080	1					
ANR	479377	Identifier	tmp		479080	0					
ANR	479378	AdditiveExpression	i + 2		479080	1		+			
ANR	479379	Identifier	i		479080	0					
ANR	479380	PrimaryExpression	2		479080	1					
ANR	479381	IfStatement	if ( p2 == 222 || p2 == 223 )		479080	1					
ANR	479382	Condition	p2 == 222 || p2 == 223	529:8:10593:10614	479080	0	True				
ANR	479383	OrExpression	p2 == 222 || p2 == 223		479080	0		||			
ANR	479384	EqualityExpression	p2 == 222		479080	0		==			
ANR	479385	Identifier	p2		479080	0					
ANR	479386	PrimaryExpression	222		479080	1					
ANR	479387	EqualityExpression	p2 == 223		479080	1		==			
ANR	479388	Identifier	p2		479080	0					
ANR	479389	PrimaryExpression	223		479080	1					
ANR	479390	ExpressionStatement	i += 2	530:6:10623:10629	479080	1	True				
ANR	479391	AssignmentExpression	i += 2		479080	0		+=			
ANR	479392	Identifier	i		479080	0					
ANR	479393	PrimaryExpression	2		479080	1					
ANR	479394	ElseStatement	else		479080	0					
ANR	479395	ExpressionStatement	p2 = 0	532:6:10646:10652	479080	0	True				
ANR	479396	AssignmentExpression	p2 = 0		479080	0		=			
ANR	479397	Identifier	p2		479080	0					
ANR	479398	PrimaryExpression	0		479080	1					
ANR	479399	ElseStatement	else		479080	0					
ANR	479400	ExpressionStatement	p2 = 0	535:2:10672:10678	479080	0	True				
ANR	479401	AssignmentExpression	p2 = 0		479080	0		=			
ANR	479402	Identifier	p2		479080	0					
ANR	479403	PrimaryExpression	0		479080	1					
ANR	479404	ExpressionStatement	"han2zen ( & p1 , & p2 )"	536:7:10687:10705	479080	2	True				
ANR	479405	CallExpression	"han2zen ( & p1 , & p2 )"		479080	0					
ANR	479406	Callee	han2zen		479080	0					
ANR	479407	Identifier	han2zen		479080	0					
ANR	479408	ArgumentList	& p1		479080	1					
ANR	479409	Argument	& p1		479080	0					
ANR	479410	UnaryOperationExpression	& p1		479080	0					
ANR	479411	UnaryOperator	&		479080	0					
ANR	479412	Identifier	p1		479080	1					
ANR	479413	Argument	& p2		479080	1					
ANR	479414	UnaryOperationExpression	& p2		479080	0					
ANR	479415	UnaryOperator	&		479080	0					
ANR	479416	Identifier	p2		479080	1					
ANR	479417	ExpressionStatement	"SJIStoJIS ( & p1 , & p2 )"	537:7:10714:10734	479080	3	True				
ANR	479418	CallExpression	"SJIStoJIS ( & p1 , & p2 )"		479080	0					
ANR	479419	Callee	SJIStoJIS		479080	0					
ANR	479420	Identifier	SJIStoJIS		479080	0					
ANR	479421	ArgumentList	& p1		479080	1					
ANR	479422	Argument	& p1		479080	0					
ANR	479423	UnaryOperationExpression	& p1		479080	0					
ANR	479424	UnaryOperator	&		479080	0					
ANR	479425	Identifier	p1		479080	1					
ANR	479426	Argument	& p2		479080	1					
ANR	479427	UnaryOperationExpression	& p2		479080	0					
ANR	479428	UnaryOperator	&		479080	0					
ANR	479429	Identifier	p2		479080	1					
ANR	479430	ExpressionStatement	to [ j ++ ] = p1 + 128	538:7:10743:10761	479080	4	True				
ANR	479431	AssignmentExpression	to [ j ++ ] = p1 + 128		479080	0		=			
ANR	479432	ArrayIndexing	to [ j ++ ]		479080	0					
ANR	479433	Identifier	to		479080	0					
ANR	479434	PostIncDecOperationExpression	j ++		479080	1					
ANR	479435	Identifier	j		479080	0					
ANR	479436	IncDec	++		479080	1					
ANR	479437	AdditiveExpression	p1 + 128		479080	1		+			
ANR	479438	Identifier	p1		479080	0					
ANR	479439	PrimaryExpression	128		479080	1					
ANR	479440	ExpressionStatement	to [ j ++ ] = p2 + 128	539:7:10770:10788	479080	5	True				
ANR	479441	AssignmentExpression	to [ j ++ ] = p2 + 128		479080	0		=			
ANR	479442	ArrayIndexing	to [ j ++ ]		479080	0					
ANR	479443	Identifier	to		479080	0					
ANR	479444	PostIncDecOperationExpression	j ++		479080	1					
ANR	479445	Identifier	j		479080	0					
ANR	479446	IncDec	++		479080	1					
ANR	479447	AdditiveExpression	p2 + 128		479080	1		+			
ANR	479448	Identifier	p2		479080	0					
ANR	479449	PrimaryExpression	128		479080	1					
ANR	479450	ElseStatement	else		479080	0					
ANR	479451	ExpressionStatement	to [ j ++ ] = tmp [ i ]	542:5:10810:10826	479080	0	True				
ANR	479452	AssignmentExpression	to [ j ++ ] = tmp [ i ]		479080	0		=			
ANR	479453	ArrayIndexing	to [ j ++ ]		479080	0					
ANR	479454	Identifier	to		479080	0					
ANR	479455	PostIncDecOperationExpression	j ++		479080	1					
ANR	479456	Identifier	j		479080	0					
ANR	479457	IncDec	++		479080	1					
ANR	479458	ArrayIndexing	tmp [ i ]		479080	1					
ANR	479459	Identifier	tmp		479080	0					
ANR	479460	Identifier	i		479080	1					
ANR	479461	IfStatement	if ( j >= BUFSIZ )		479080	2					
ANR	479462	Condition	j >= BUFSIZ	545:10:10842:10852	479080	0	True				
ANR	479463	RelationalExpression	j >= BUFSIZ		479080	0		>=			
ANR	479464	Identifier	j		479080	0					
ANR	479465	Identifier	BUFSIZ		479080	1					
ANR	479466	CompoundStatement		80:1:1728:1728	479080	1					
ANR	479467	ExpressionStatement	"error ( ""output buffer overflow at Hankaku --> Zenkaku"" )"	547:3:10861:10916	479080	0	True				
ANR	479468	CallExpression	"error ( ""output buffer overflow at Hankaku --> Zenkaku"" )"		479080	0					
ANR	479469	Callee	error		479080	0					
ANR	479470	Identifier	error		479080	0					
ANR	479471	ArgumentList	"""output buffer overflow at Hankaku --> Zenkaku"""		479080	1					
ANR	479472	Argument	"""output buffer overflow at Hankaku --> Zenkaku"""		479080	0					
ANR	479473	PrimaryExpression	"""output buffer overflow at Hankaku --> Zenkaku"""		479080	0					
ANR	479474	ExpressionStatement	"ustrcpy ( to , tmp )"	548:3:10921:10938	479080	1	True				
ANR	479475	CallExpression	"ustrcpy ( to , tmp )"		479080	0					
ANR	479476	Callee	ustrcpy		479080	0					
ANR	479477	Identifier	ustrcpy		479080	0					
ANR	479478	ArgumentList	to		479080	1					
ANR	479479	Argument	to		479080	0					
ANR	479480	Identifier	to		479080	0					
ANR	479481	Argument	tmp		479080	1					
ANR	479482	Identifier	tmp		479080	0					
ANR	479483	ElseStatement	else		479080	0					
ANR	479484	ExpressionStatement	to [ j ] = '\\0'	551:1:10955:10967	479080	0	True				
ANR	479485	AssignmentExpression	to [ j ] = '\\0'		479080	0		=			
ANR	479486	ArrayIndexing	to [ j ]		479080	0					
ANR	479487	Identifier	to		479080	0					
ANR	479488	Identifier	j		479080	1					
ANR	479489	PrimaryExpression	'\\0'		479080	1					
ANR	479490	ElseStatement	else		479080	0					
ANR	479491	ExpressionStatement	"ustrcpy ( to , tmp )"	554:4:10986:11003	479080	0	True				
ANR	479492	CallExpression	"ustrcpy ( to , tmp )"		479080	0					
ANR	479493	Callee	ustrcpy		479080	0					
ANR	479494	Identifier	ustrcpy		479080	0					
ANR	479495	ArgumentList	to		479080	1					
ANR	479496	Argument	to		479080	0					
ANR	479497	Identifier	to		479080	0					
ANR	479498	Argument	tmp		479080	1					
ANR	479499	Identifier	tmp		479080	0					
ANR	479500	ReturnStatement	return kanji ;	556:2:11008:11020	479080	6	True				
ANR	479501	Identifier	kanji		479080	0					
ANR	479502	ReturnType	static int		479080	1					
ANR	479503	Identifier	do_check_and_conv		479080	2					
ANR	479504	ParameterList	"unsigned char * to , unsigned char * from"		479080	3					
ANR	479505	Parameter	unsigned char * to	466:19:9087:9103	479080	0	True				
ANR	479506	ParameterType	unsigned char *		479080	0					
ANR	479507	Identifier	to		479080	1					
ANR	479508	Parameter	unsigned char * from	466:38:9106:9124	479080	1	True				
ANR	479509	ParameterType	unsigned char *		479080	0					
ANR	479510	Identifier	from		479080	1					
ANR	479511	CFGEntryNode	ENTRY		479080		True				
ANR	479512	CFGExitNode	EXIT		479080		True				
ANR	479513	Symbol	p1		479080						
ANR	479514	Symbol	* tmp		479080						
ANR	479515	Symbol	p2		479080						
ANR	479516	Symbol	* to		479080						
ANR	479517	Symbol	kanji		479080						
ANR	479518	Symbol	NEWJISSTR		479080						
ANR	479519	Symbol	SJISSTR		479080						
ANR	479520	Symbol	i		479080						
ANR	479521	Symbol	TRUE		479080						
ANR	479522	Symbol	j		479080						
ANR	479523	Symbol	DetectKanjiCode		479080						
ANR	479524	Symbol	& p1		479080						
ANR	479525	Symbol	& p2		479080						
ANR	479526	Symbol	* i		479080						
ANR	479527	Symbol	SS2		479080						
ANR	479528	Symbol	* j		479080						
ANR	479529	Symbol	OLDJISSTR		479080						
ANR	479530	Symbol	tmp		479080						
ANR	479531	Symbol	from		479080						
ANR	479532	Symbol	FALSE		479080						
ANR	479533	Symbol	to		479080						
ANR	479534	Symbol	BUFSIZ		479080						
ANR	479535	Function	any2eucjp	559:0:11025:11649							
ANR	479536	FunctionDef	"any2eucjp (unsigned char * dest , unsigned char * src , unsigned int dest_max)"		479535	0					
ANR	479537	CompoundStatement		561:0:11104:11649	479535	0					
ANR	479538	Statement	static	562:2:11108:11113	479535	0	True				
ANR	479539	IdentifierDeclStatement	unsigned char tmp_dest [ BUFSIZ ] ;	562:9:11115:11145	479535	1	True				
ANR	479540	IdentifierDecl	tmp_dest [ BUFSIZ ]		479535	0					
ANR	479541	IdentifierDeclType	unsigned char [ BUFSIZ ]		479535	0					
ANR	479542	Identifier	tmp_dest		479535	1					
ANR	479543	Identifier	BUFSIZ		479535	2					
ANR	479544	IdentifierDeclStatement	int ret ;	563:2:11149:11156	479535	2	True				
ANR	479545	IdentifierDecl	ret		479535	0					
ANR	479546	IdentifierDeclType	int		479535	0					
ANR	479547	Identifier	ret		479535	1					
ANR	479548	IfStatement	if ( strlen ( ( const char * ) src ) >= BUFSIZ )		479535	3					
ANR	479549	Condition	strlen ( ( const char * ) src ) >= BUFSIZ	565:6:11165:11201	479535	0	True				
ANR	479550	RelationalExpression	strlen ( ( const char * ) src ) >= BUFSIZ		479535	0		>=			
ANR	479551	CallExpression	strlen ( ( const char * ) src )		479535	0					
ANR	479552	Callee	strlen		479535	0					
ANR	479553	Identifier	strlen		479535	0					
ANR	479554	ArgumentList	( const char * ) src		479535	1					
ANR	479555	Argument	( const char * ) src		479535	0					
ANR	479556	CastExpression	( const char * ) src		479535	0					
ANR	479557	CastTarget	const char *		479535	0					
ANR	479558	Identifier	src		479535	1					
ANR	479559	Identifier	BUFSIZ		479535	1					
ANR	479560	CompoundStatement		6:4:103:103	479535	1					
ANR	479561	ExpressionStatement	"error ( ""input string too large"" )"	567:6:11216:11248	479535	0	True				
ANR	479562	CallExpression	"error ( ""input string too large"" )"		479535	0					
ANR	479563	Callee	error		479535	0					
ANR	479564	Identifier	error		479535	0					
ANR	479565	ArgumentList	"""input string too large"""		479535	1					
ANR	479566	Argument	"""input string too large"""		479535	0					
ANR	479567	PrimaryExpression	"""input string too large"""		479535	0					
ANR	479568	ReturnStatement	return - 1 ;	568:6:11256:11265	479535	1	True				
ANR	479569	UnaryOperationExpression	- 1		479535	0					
ANR	479570	UnaryOperator	-		479535	0					
ANR	479571	PrimaryExpression	1		479535	1					
ANR	479572	IfStatement	if ( dest_max > BUFSIZ )		479535	4					
ANR	479573	Condition	dest_max > BUFSIZ	570:6:11279:11295	479535	0	True				
ANR	479574	RelationalExpression	dest_max > BUFSIZ		479535	0		>			
ANR	479575	Identifier	dest_max		479535	0					
ANR	479576	Identifier	BUFSIZ		479535	1					
ANR	479577	CompoundStatement		11:4:197:197	479535	1					
ANR	479578	ExpressionStatement	"error ( ""invalid maximum size of destination\\nit should be less than %d."" , BUFSIZ )"	572:6:11310:11391	479535	0	True				
ANR	479579	CallExpression	"error ( ""invalid maximum size of destination\\nit should be less than %d."" , BUFSIZ )"		479535	0					
ANR	479580	Callee	error		479535	0					
ANR	479581	Identifier	error		479535	0					
ANR	479582	ArgumentList	"""invalid maximum size of destination\\nit should be less than %d."""		479535	1					
ANR	479583	Argument	"""invalid maximum size of destination\\nit should be less than %d."""		479535	0					
ANR	479584	PrimaryExpression	"""invalid maximum size of destination\\nit should be less than %d."""		479535	0					
ANR	479585	Argument	BUFSIZ		479535	1					
ANR	479586	Identifier	BUFSIZ		479535	0					
ANR	479587	ReturnStatement	return - 1 ;	573:6:11399:11408	479535	1	True				
ANR	479588	UnaryOperationExpression	- 1		479535	0					
ANR	479589	UnaryOperator	-		479535	0					
ANR	479590	PrimaryExpression	1		479535	1					
ANR	479591	ExpressionStatement	"ret = do_check_and_conv ( tmp_dest , src )"	575:2:11418:11457	479535	5	True				
ANR	479592	AssignmentExpression	"ret = do_check_and_conv ( tmp_dest , src )"		479535	0		=			
ANR	479593	Identifier	ret		479535	0					
ANR	479594	CallExpression	"do_check_and_conv ( tmp_dest , src )"		479535	1					
ANR	479595	Callee	do_check_and_conv		479535	0					
ANR	479596	Identifier	do_check_and_conv		479535	0					
ANR	479597	ArgumentList	tmp_dest		479535	1					
ANR	479598	Argument	tmp_dest		479535	0					
ANR	479599	Identifier	tmp_dest		479535	0					
ANR	479600	Argument	src		479535	1					
ANR	479601	Identifier	src		479535	0					
ANR	479602	IfStatement	if ( strlen ( ( const char * ) tmp_dest ) >= dest_max )		479535	6					
ANR	479603	Condition	strlen ( ( const char * ) tmp_dest ) >= dest_max	576:6:11465:11508	479535	0	True				
ANR	479604	RelationalExpression	strlen ( ( const char * ) tmp_dest ) >= dest_max		479535	0		>=			
ANR	479605	CallExpression	strlen ( ( const char * ) tmp_dest )		479535	0					
ANR	479606	Callee	strlen		479535	0					
ANR	479607	Identifier	strlen		479535	0					
ANR	479608	ArgumentList	( const char * ) tmp_dest		479535	1					
ANR	479609	Argument	( const char * ) tmp_dest		479535	0					
ANR	479610	CastExpression	( const char * ) tmp_dest		479535	0					
ANR	479611	CastTarget	const char *		479535	0					
ANR	479612	Identifier	tmp_dest		479535	1					
ANR	479613	Identifier	dest_max		479535	1					
ANR	479614	CompoundStatement		17:4:410:410	479535	1					
ANR	479615	ExpressionStatement	"error ( ""output buffer overflow"" )"	578:6:11523:11555	479535	0	True				
ANR	479616	CallExpression	"error ( ""output buffer overflow"" )"		479535	0					
ANR	479617	Callee	error		479535	0					
ANR	479618	Identifier	error		479535	0					
ANR	479619	ArgumentList	"""output buffer overflow"""		479535	1					
ANR	479620	Argument	"""output buffer overflow"""		479535	0					
ANR	479621	PrimaryExpression	"""output buffer overflow"""		479535	0					
ANR	479622	ExpressionStatement	"ustrcpy ( dest , src )"	579:6:11563:11582	479535	1	True				
ANR	479623	CallExpression	"ustrcpy ( dest , src )"		479535	0					
ANR	479624	Callee	ustrcpy		479535	0					
ANR	479625	Identifier	ustrcpy		479535	0					
ANR	479626	ArgumentList	dest		479535	1					
ANR	479627	Argument	dest		479535	0					
ANR	479628	Identifier	dest		479535	0					
ANR	479629	Argument	src		479535	1					
ANR	479630	Identifier	src		479535	0					
ANR	479631	ReturnStatement	return - 1 ;	580:6:11590:11599	479535	2	True				
ANR	479632	UnaryOperationExpression	- 1		479535	0					
ANR	479633	UnaryOperator	-		479535	0					
ANR	479634	PrimaryExpression	1		479535	1					
ANR	479635	ExpressionStatement	"ustrcpy ( dest , tmp_dest )"	582:2:11609:11633	479535	7	True				
ANR	479636	CallExpression	"ustrcpy ( dest , tmp_dest )"		479535	0					
ANR	479637	Callee	ustrcpy		479535	0					
ANR	479638	Identifier	ustrcpy		479535	0					
ANR	479639	ArgumentList	dest		479535	1					
ANR	479640	Argument	dest		479535	0					
ANR	479641	Identifier	dest		479535	0					
ANR	479642	Argument	tmp_dest		479535	1					
ANR	479643	Identifier	tmp_dest		479535	0					
ANR	479644	ReturnStatement	return ret ;	583:2:11637:11647	479535	8	True				
ANR	479645	Identifier	ret		479535	0					
ANR	479646	ReturnType	int		479535	1					
ANR	479647	Identifier	any2eucjp		479535	2					
ANR	479648	ParameterList	"unsigned char * dest , unsigned char * src , unsigned int dest_max"		479535	3					
ANR	479649	Parameter	unsigned char * dest	560:11:11040:11058	479535	0	True				
ANR	479650	ParameterType	unsigned char *		479535	0					
ANR	479651	Identifier	dest		479535	1					
ANR	479652	Parameter	unsigned char * src	560:32:11061:11078	479535	1	True				
ANR	479653	ParameterType	unsigned char *		479535	0					
ANR	479654	Identifier	src		479535	1					
ANR	479655	Parameter	unsigned int dest_max	560:52:11081:11101	479535	2	True				
ANR	479656	ParameterType	unsigned int		479535	0					
ANR	479657	Identifier	dest_max		479535	1					
ANR	479658	CFGEntryNode	ENTRY		479535		True				
ANR	479659	CFGExitNode	EXIT		479535		True				
ANR	479660	Symbol	dest_max		479535						
ANR	479661	Symbol	ret		479535						
ANR	479662	Symbol	strlen		479535						
ANR	479663	Symbol	tmp_dest		479535						
ANR	479664	Symbol	src		479535						
ANR	479665	Symbol	do_check_and_conv		479535						
ANR	479666	Symbol	dest		479535						
ANR	479667	Symbol	BUFSIZ		479535						
ANR	479668	Function	strwidth	587:0:11658:11855							
ANR	479669	FunctionDef	strwidth (unsigned char * s)		479668	0					
ANR	479670	CompoundStatement		589:0:11699:11855	479668	0					
ANR	479671	IdentifierDeclStatement	unsigned char * t ;	590:2:11703:11719	479668	0	True				
ANR	479672	IdentifierDecl	* t		479668	0					
ANR	479673	IdentifierDeclType	unsigned char *		479668	0					
ANR	479674	Identifier	t		479668	1					
ANR	479675	IdentifierDeclStatement	unsigned int i ;	591:2:11723:11737	479668	1	True				
ANR	479676	IdentifierDecl	i		479668	0					
ANR	479677	IdentifierDeclType	unsigned int		479668	0					
ANR	479678	Identifier	i		479668	1					
ANR	479679	ExpressionStatement	t = ( unsigned char * ) gdMalloc ( BUFSIZ )	593:2:11742:11781	479668	2	True				
ANR	479680	AssignmentExpression	t = ( unsigned char * ) gdMalloc ( BUFSIZ )		479668	0		=			
ANR	479681	Identifier	t		479668	0					
ANR	479682	CastExpression	( unsigned char * ) gdMalloc ( BUFSIZ )		479668	1					
ANR	479683	CastTarget	unsigned char *		479668	0					
ANR	479684	CallExpression	gdMalloc ( BUFSIZ )		479668	1					
ANR	479685	Callee	gdMalloc		479668	0					
ANR	479686	Identifier	gdMalloc		479668	0					
ANR	479687	ArgumentList	BUFSIZ		479668	1					
ANR	479688	Argument	BUFSIZ		479668	0					
ANR	479689	Identifier	BUFSIZ		479668	0					
ANR	479690	ExpressionStatement	"any2eucjp ( t , s , BUFSIZ )"	594:2:11785:11809	479668	3	True				
ANR	479691	CallExpression	"any2eucjp ( t , s , BUFSIZ )"		479668	0					
ANR	479692	Callee	any2eucjp		479668	0					
ANR	479693	Identifier	any2eucjp		479668	0					
ANR	479694	ArgumentList	t		479668	1					
ANR	479695	Argument	t		479668	0					
ANR	479696	Identifier	t		479668	0					
ANR	479697	Argument	s		479668	1					
ANR	479698	Identifier	s		479668	0					
ANR	479699	Argument	BUFSIZ		479668	2					
ANR	479700	Identifier	BUFSIZ		479668	0					
ANR	479701	ExpressionStatement	i = strlen ( t )	595:2:11813:11827	479668	4	True				
ANR	479702	AssignmentExpression	i = strlen ( t )		479668	0		=			
ANR	479703	Identifier	i		479668	0					
ANR	479704	CallExpression	strlen ( t )		479668	1					
ANR	479705	Callee	strlen		479668	0					
ANR	479706	Identifier	strlen		479668	0					
ANR	479707	ArgumentList	t		479668	1					
ANR	479708	Argument	t		479668	0					
ANR	479709	Identifier	t		479668	0					
ANR	479710	ExpressionStatement	gdFree ( t )	596:2:11831:11841	479668	5	True				
ANR	479711	CallExpression	gdFree ( t )		479668	0					
ANR	479712	Callee	gdFree		479668	0					
ANR	479713	Identifier	gdFree		479668	0					
ANR	479714	ArgumentList	t		479668	1					
ANR	479715	Argument	t		479668	0					
ANR	479716	Identifier	t		479668	0					
ANR	479717	ReturnStatement	return i ;	597:2:11845:11853	479668	6	True				
ANR	479718	Identifier	i		479668	0					
ANR	479719	ReturnType	unsigned int		479668	1					
ANR	479720	Identifier	strwidth		479668	2					
ANR	479721	ParameterList	unsigned char * s		479668	3					
ANR	479722	Parameter	unsigned char * s	588:10:11681:11696	479668	0	True				
ANR	479723	ParameterType	unsigned char *		479668	0					
ANR	479724	Identifier	s		479668	1					
ANR	479725	CFGEntryNode	ENTRY		479668		True				
ANR	479726	CFGExitNode	EXIT		479668		True				
ANR	479727	Symbol	strlen		479668						
ANR	479728	Symbol	s		479668						
ANR	479729	Symbol	gdMalloc		479668						
ANR	479730	Symbol	t		479668						
ANR	479731	Symbol	i		479668						
ANR	479732	Symbol	BUFSIZ		479668						
ANR	479733	Function	main	601:0:11871:12386							
ANR	479734	FunctionDef	main ()		479733	0					
ANR	479735	CompoundStatement		603:0:11883:12386	479733	0					
ANR	479736	IdentifierDeclStatement	unsigned char input [ BUFSIZ ] ;	604:2:11887:11914	479733	0	True				
ANR	479737	IdentifierDecl	input [ BUFSIZ ]		479733	0					
ANR	479738	IdentifierDeclType	unsigned char [ BUFSIZ ]		479733	0					
ANR	479739	Identifier	input		479733	1					
ANR	479740	Identifier	BUFSIZ		479733	2					
ANR	479741	IdentifierDeclStatement	unsigned char * output ;	605:2:11918:11939	479733	1	True				
ANR	479742	IdentifierDecl	* output		479733	0					
ANR	479743	IdentifierDeclType	unsigned char *		479733	0					
ANR	479744	Identifier	output		479733	1					
ANR	479745	IdentifierDeclStatement	unsigned char * str ;	606:2:11943:11961	479733	2	True				
ANR	479746	IdentifierDecl	* str		479733	0					
ANR	479747	IdentifierDeclType	unsigned char *		479733	0					
ANR	479748	Identifier	str		479733	1					
ANR	479749	IdentifierDeclStatement	"int c , i = 0 ;"	607:2:11965:11977	479733	3	True				
ANR	479750	IdentifierDecl	c		479733	0					
ANR	479751	IdentifierDeclType	int		479733	0					
ANR	479752	Identifier	c		479733	1					
ANR	479753	IdentifierDecl	i = 0		479733	1					
ANR	479754	IdentifierDeclType	int		479733	0					
ANR	479755	Identifier	i		479733	1					
ANR	479756	AssignmentExpression	i = 0		479733	2		=			
ANR	479757	Identifier	i		479733	0					
ANR	479758	PrimaryExpression	0		479733	1					
ANR	479759	WhileStatement	while ( ( c = fgetc ( stdin ) ) != '\\n' && i < BUFSIZ )		479733	4					
ANR	479760	Condition	( c = fgetc ( stdin ) ) != '\\n' && i < BUFSIZ	609:9:11989:12029	479733	0	True				
ANR	479761	AndExpression	( c = fgetc ( stdin ) ) != '\\n' && i < BUFSIZ		479733	0		&&			
ANR	479762	EqualityExpression	( c = fgetc ( stdin ) ) != '\\n'		479733	0		!=			
ANR	479763	AssignmentExpression	c = fgetc ( stdin )		479733	0		=			
ANR	479764	Identifier	c		479733	0					
ANR	479765	CallExpression	fgetc ( stdin )		479733	1					
ANR	479766	Callee	fgetc		479733	0					
ANR	479767	Identifier	fgetc		479733	0					
ANR	479768	ArgumentList	stdin		479733	1					
ANR	479769	Argument	stdin		479733	0					
ANR	479770	Identifier	stdin		479733	0					
ANR	479771	PrimaryExpression	'\\n'		479733	1					
ANR	479772	RelationalExpression	i < BUFSIZ		479733	1		<			
ANR	479773	Identifier	i		479733	0					
ANR	479774	Identifier	BUFSIZ		479733	1					
ANR	479775	ExpressionStatement	input [ i ++ ] = c	610:4:12036:12050	479733	1	True				
ANR	479776	AssignmentExpression	input [ i ++ ] = c		479733	0		=			
ANR	479777	ArrayIndexing	input [ i ++ ]		479733	0					
ANR	479778	Identifier	input		479733	0					
ANR	479779	PostIncDecOperationExpression	i ++		479733	1					
ANR	479780	Identifier	i		479733	0					
ANR	479781	IncDec	++		479733	1					
ANR	479782	Identifier	c		479733	1					
ANR	479783	ExpressionStatement	input [ i ] = '\\0'	611:2:12054:12069	479733	5	True				
ANR	479784	AssignmentExpression	input [ i ] = '\\0'		479733	0		=			
ANR	479785	ArrayIndexing	input [ i ]		479733	0					
ANR	479786	Identifier	input		479733	0					
ANR	479787	Identifier	i		479733	1					
ANR	479788	PrimaryExpression	'\\0'		479733	1					
ANR	479789	ExpressionStatement	"printf ( ""input : %d bytes\\n"" , strlen ( ( const char * ) input ) )"	613:2:12074:12134	479733	6	True				
ANR	479790	CallExpression	"printf ( ""input : %d bytes\\n"" , strlen ( ( const char * ) input ) )"		479733	0					
ANR	479791	Callee	printf		479733	0					
ANR	479792	Identifier	printf		479733	0					
ANR	479793	ArgumentList	"""input : %d bytes\\n"""		479733	1					
ANR	479794	Argument	"""input : %d bytes\\n"""		479733	0					
ANR	479795	PrimaryExpression	"""input : %d bytes\\n"""		479733	0					
ANR	479796	Argument	strlen ( ( const char * ) input )		479733	1					
ANR	479797	CallExpression	strlen ( ( const char * ) input )		479733	0					
ANR	479798	Callee	strlen		479733	0					
ANR	479799	Identifier	strlen		479733	0					
ANR	479800	ArgumentList	( const char * ) input		479733	1					
ANR	479801	Argument	( const char * ) input		479733	0					
ANR	479802	CastExpression	( const char * ) input		479733	0					
ANR	479803	CastTarget	const char *		479733	0					
ANR	479804	Identifier	input		479733	1					
ANR	479805	ExpressionStatement	"printf ( ""output: %d bytes\\n"" , strwidth ( input ) )"	614:2:12138:12185	479733	7	True				
ANR	479806	CallExpression	"printf ( ""output: %d bytes\\n"" , strwidth ( input ) )"		479733	0					
ANR	479807	Callee	printf		479733	0					
ANR	479808	Identifier	printf		479733	0					
ANR	479809	ArgumentList	"""output: %d bytes\\n"""		479733	1					
ANR	479810	Argument	"""output: %d bytes\\n"""		479733	0					
ANR	479811	PrimaryExpression	"""output: %d bytes\\n"""		479733	0					
ANR	479812	Argument	strwidth ( input )		479733	1					
ANR	479813	CallExpression	strwidth ( input )		479733	0					
ANR	479814	Callee	strwidth		479733	0					
ANR	479815	Identifier	strwidth		479733	0					
ANR	479816	ArgumentList	input		479733	1					
ANR	479817	Argument	input		479733	0					
ANR	479818	Identifier	input		479733	0					
ANR	479819	ExpressionStatement	output = ( unsigned char * ) gdMalloc ( BUFSIZ )	616:2:12190:12234	479733	8	True				
ANR	479820	AssignmentExpression	output = ( unsigned char * ) gdMalloc ( BUFSIZ )		479733	0		=			
ANR	479821	Identifier	output		479733	0					
ANR	479822	CastExpression	( unsigned char * ) gdMalloc ( BUFSIZ )		479733	1					
ANR	479823	CastTarget	unsigned char *		479733	0					
ANR	479824	CallExpression	gdMalloc ( BUFSIZ )		479733	1					
ANR	479825	Callee	gdMalloc		479733	0					
ANR	479826	Identifier	gdMalloc		479733	0					
ANR	479827	ArgumentList	BUFSIZ		479733	1					
ANR	479828	Argument	BUFSIZ		479733	0					
ANR	479829	Identifier	BUFSIZ		479733	0					
ANR	479830	ExpressionStatement	"any2eucjp ( output , input , BUFSIZ )"	617:2:12238:12271	479733	9	True				
ANR	479831	CallExpression	"any2eucjp ( output , input , BUFSIZ )"		479733	0					
ANR	479832	Callee	any2eucjp		479733	0					
ANR	479833	Identifier	any2eucjp		479733	0					
ANR	479834	ArgumentList	output		479733	1					
ANR	479835	Argument	output		479733	0					
ANR	479836	Identifier	output		479733	0					
ANR	479837	Argument	input		479733	1					
ANR	479838	Identifier	input		479733	0					
ANR	479839	Argument	BUFSIZ		479733	2					
ANR	479840	Identifier	BUFSIZ		479733	0					
ANR	479841	ExpressionStatement	str = output	618:2:12275:12287	479733	10	True				
ANR	479842	AssignmentExpression	str = output		479733	0		=			
ANR	479843	Identifier	str		479733	0					
ANR	479844	Identifier	output		479733	1					
ANR	479845	WhileStatement	while ( * str != '\\0' )		479733	11					
ANR	479846	Condition	* str != '\\0'	619:9:12298:12309	479733	0	True				
ANR	479847	EqualityExpression	* str != '\\0'		479733	0		!=			
ANR	479848	UnaryOperationExpression	* str		479733	0					
ANR	479849	UnaryOperator	*		479733	0					
ANR	479850	Identifier	str		479733	1					
ANR	479851	PrimaryExpression	'\\0'		479733	1					
ANR	479852	ExpressionStatement	putchar ( * ( str ++ ) )	620:4:12316:12334	479733	1	True				
ANR	479853	CallExpression	putchar ( * ( str ++ ) )		479733	0					
ANR	479854	Callee	putchar		479733	0					
ANR	479855	Identifier	putchar		479733	0					
ANR	479856	ArgumentList	* ( str ++ )		479733	1					
ANR	479857	Argument	* ( str ++ )		479733	0					
ANR	479858	UnaryOperationExpression	* ( str ++ )		479733	0					
ANR	479859	UnaryOperator	*		479733	0					
ANR	479860	PostIncDecOperationExpression	str ++		479733	1					
ANR	479861	Identifier	str		479733	0					
ANR	479862	IncDec	++		479733	1					
ANR	479863	ExpressionStatement	putchar ( '\\n' )	621:2:12338:12352	479733	12	True				
ANR	479864	CallExpression	putchar ( '\\n' )		479733	0					
ANR	479865	Callee	putchar		479733	0					
ANR	479866	Identifier	putchar		479733	0					
ANR	479867	ArgumentList	'\\n'		479733	1					
ANR	479868	Argument	'\\n'		479733	0					
ANR	479869	PrimaryExpression	'\\n'		479733	0					
ANR	479870	ExpressionStatement	gdFree ( output )	622:2:12356:12371	479733	13	True				
ANR	479871	CallExpression	gdFree ( output )		479733	0					
ANR	479872	Callee	gdFree		479733	0					
ANR	479873	Identifier	gdFree		479733	0					
ANR	479874	ArgumentList	output		479733	1					
ANR	479875	Argument	output		479733	0					
ANR	479876	Identifier	output		479733	0					
ANR	479877	ReturnStatement	return 0 ;	624:2:12376:12384	479733	14	True				
ANR	479878	PrimaryExpression	0		479733	0					
ANR	479879	ReturnType	int		479733	1					
ANR	479880	Identifier	main		479733	2					
ANR	479881	ParameterList			479733	3					
ANR	479882	CFGEntryNode	ENTRY		479733		True				
ANR	479883	CFGExitNode	EXIT		479733		True				
ANR	479884	Symbol	stdin		479733						
ANR	479885	Symbol	c		479733						
ANR	479886	Symbol	* input		479733						
ANR	479887	Symbol	i		479733						
ANR	479888	Symbol	output		479733						
ANR	479889	Symbol	str		479733						
ANR	479890	Symbol	input		479733						
ANR	479891	Symbol	strlen		479733						
ANR	479892	Symbol	* i		479733						
ANR	479893	Symbol	gdMalloc		479733						
ANR	479894	Symbol	strwidth		479733						
ANR	479895	Symbol	* ( str ++ )		479733						
ANR	479896	Symbol	* str		479733						
ANR	479897	Symbol	fgetc		479733						
ANR	479898	Symbol	BUFSIZ		479733						
