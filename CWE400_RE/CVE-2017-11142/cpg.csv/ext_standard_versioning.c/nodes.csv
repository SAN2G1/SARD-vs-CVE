command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2040089	File	data/converged/CVE-2017-11142_php-src/ext_standard_versioning.c								
ANR	2040090	Function	php_canonicalize_version	33:0:1385:2277							
ANR	2040091	FunctionDef	php_canonicalize_version (const char * version)		2040090	0					
ANR	2040092	CompoundStatement		35:0:1445:2277	2040090	0					
ANR	2040093	IdentifierDeclStatement	int len = strlen ( version ) ;	36:4:1451:1476	2040090	0	True				
ANR	2040094	IdentifierDecl	len = strlen ( version )		2040090	0					
ANR	2040095	IdentifierDeclType	int		2040090	0					
ANR	2040096	Identifier	len		2040090	1					
ANR	2040097	AssignmentExpression	len = strlen ( version )		2040090	2		=			
ANR	2040098	Identifier	len		2040090	0					
ANR	2040099	CallExpression	strlen ( version )		2040090	1					
ANR	2040100	Callee	strlen		2040090	0					
ANR	2040101	Identifier	strlen		2040090	0					
ANR	2040102	ArgumentList	version		2040090	1					
ANR	2040103	Argument	version		2040090	0					
ANR	2040104	Identifier	version		2040090	0					
ANR	2040105	IdentifierDeclStatement	"char * buf = safe_emalloc ( len , 2 , 1 ) , * q , lp , lq ;"	37:4:1482:1529	2040090	1	True				
ANR	2040106	IdentifierDecl	"* buf = safe_emalloc ( len , 2 , 1 )"		2040090	0					
ANR	2040107	IdentifierDeclType	char *		2040090	0					
ANR	2040108	Identifier	buf		2040090	1					
ANR	2040109	AssignmentExpression	"* buf = safe_emalloc ( len , 2 , 1 )"		2040090	2		=			
ANR	2040110	Identifier	buf		2040090	0					
ANR	2040111	CallExpression	"safe_emalloc ( len , 2 , 1 )"		2040090	1					
ANR	2040112	Callee	safe_emalloc		2040090	0					
ANR	2040113	Identifier	safe_emalloc		2040090	0					
ANR	2040114	ArgumentList	len		2040090	1					
ANR	2040115	Argument	len		2040090	0					
ANR	2040116	Identifier	len		2040090	0					
ANR	2040117	Argument	2		2040090	1					
ANR	2040118	PrimaryExpression	2		2040090	0					
ANR	2040119	Argument	1		2040090	2					
ANR	2040120	PrimaryExpression	1		2040090	0					
ANR	2040121	IdentifierDecl	* q		2040090	1					
ANR	2040122	IdentifierDeclType	char *		2040090	0					
ANR	2040123	Identifier	q		2040090	1					
ANR	2040124	IdentifierDecl	lp		2040090	2					
ANR	2040125	IdentifierDeclType	char		2040090	0					
ANR	2040126	Identifier	lp		2040090	1					
ANR	2040127	IdentifierDecl	lq		2040090	3					
ANR	2040128	IdentifierDeclType	char		2040090	0					
ANR	2040129	Identifier	lq		2040090	1					
ANR	2040130	IdentifierDeclStatement	const char * p ;	38:4:1535:1548	2040090	2	True				
ANR	2040131	IdentifierDecl	* p		2040090	0					
ANR	2040132	IdentifierDeclType	const char *		2040090	0					
ANR	2040133	Identifier	p		2040090	1					
ANR	2040134	IfStatement	if ( len == 0 )		2040090	3					
ANR	2040135	Condition	len == 0	40:8:1559:1566	2040090	0	True				
ANR	2040136	EqualityExpression	len == 0		2040090	0		==			
ANR	2040137	Identifier	len		2040090	0					
ANR	2040138	PrimaryExpression	0		2040090	1					
ANR	2040139	CompoundStatement		6:18:123:123	2040090	1					
ANR	2040140	ExpressionStatement	* buf = '\\0'	41:8:1579:1590	2040090	0	True				
ANR	2040141	AssignmentExpression	* buf = '\\0'		2040090	0		=			
ANR	2040142	UnaryOperationExpression	* buf		2040090	0					
ANR	2040143	UnaryOperator	*		2040090	0					
ANR	2040144	Identifier	buf		2040090	1					
ANR	2040145	PrimaryExpression	'\\0'		2040090	1					
ANR	2040146	ReturnStatement	return buf ;	42:8:1600:1610	2040090	1	True				
ANR	2040147	Identifier	buf		2040090	0					
ANR	2040148	ExpressionStatement	p = version	45:4:1623:1634	2040090	4	True				
ANR	2040149	AssignmentExpression	p = version		2040090	0		=			
ANR	2040150	Identifier	p		2040090	0					
ANR	2040151	Identifier	version		2040090	1					
ANR	2040152	ExpressionStatement	q = buf	46:4:1640:1647	2040090	5	True				
ANR	2040153	AssignmentExpression	q = buf		2040090	0		=			
ANR	2040154	Identifier	q		2040090	0					
ANR	2040155	Identifier	buf		2040090	1					
ANR	2040156	ExpressionStatement	* q ++ = lp = * p ++	47:4:1653:1669	2040090	6	True				
ANR	2040157	AssignmentExpression	* q ++ = lp = * p ++		2040090	0		=			
ANR	2040158	UnaryOperationExpression	* q ++		2040090	0					
ANR	2040159	UnaryOperator	*		2040090	0					
ANR	2040160	PostIncDecOperationExpression	q ++		2040090	1					
ANR	2040161	Identifier	q		2040090	0					
ANR	2040162	IncDec	++		2040090	1					
ANR	2040163	AssignmentExpression	lp = * p ++		2040090	1		=			
ANR	2040164	Identifier	lp		2040090	0					
ANR	2040165	UnaryOperationExpression	* p ++		2040090	1					
ANR	2040166	UnaryOperator	*		2040090	0					
ANR	2040167	PostIncDecOperationExpression	p ++		2040090	1					
ANR	2040168	Identifier	p		2040090	0					
ANR	2040169	IncDec	++		2040090	1					
ANR	2040170	WhileStatement	while ( * p )		2040090	7					
ANR	2040171	Condition	* p	49:11:1683:1684	2040090	0	True				
ANR	2040172	UnaryOperationExpression	* p		2040090	0					
ANR	2040173	UnaryOperator	*		2040090	0					
ANR	2040174	Identifier	p		2040090	1					
ANR	2040175	CompoundStatement		15:15:241:241	2040090	1					
ANR	2040176	Statement	define	54:1:1779:1784	2040090	0	True				
ANR	2040177	Statement	isdig	54:8:1786:1790	2040090	1	True				
ANR	2040178	Statement	(	54:13:1791:1791	2040090	2	True				
ANR	2040179	Statement	x	54:14:1792:1792	2040090	3	True				
ANR	2040180	Statement	)	54:15:1793:1793	2040090	4	True				
ANR	2040181	Statement	(	54:17:1795:1795	2040090	5	True				
ANR	2040182	Statement	isdigit	54:18:1796:1802	2040090	6	True				
ANR	2040183	Statement	(	54:25:1803:1803	2040090	7	True				
ANR	2040184	Statement	x	54:26:1804:1804	2040090	8	True				
ANR	2040185	Statement	)	54:27:1805:1805	2040090	9	True				
ANR	2040186	Statement	&&	54:28:1806:1807	2040090	10	True				
ANR	2040187	Statement	(	54:30:1808:1808	2040090	11	True				
ANR	2040188	Statement	x	54:31:1809:1809	2040090	12	True				
ANR	2040189	Statement	)	54:32:1810:1810	2040090	13	True				
ANR	2040190	Statement	!=	54:33:1811:1812	2040090	14	True				
ANR	2040191	Statement	'.'	54:35:1813:1815	2040090	15	True				
ANR	2040192	Statement	)	54:38:1816:1816	2040090	16	True				
ANR	2040193	Statement	define	55:1:1819:1824	2040090	17	True				
ANR	2040194	Statement	isndig	55:8:1826:1831	2040090	18	True				
ANR	2040195	Statement	(	55:14:1832:1832	2040090	19	True				
ANR	2040196	Statement	x	55:15:1833:1833	2040090	20	True				
ANR	2040197	Statement	)	55:16:1834:1834	2040090	21	True				
ANR	2040198	Statement	(	55:18:1836:1836	2040090	22	True				
ANR	2040199	Statement	!	55:19:1837:1837	2040090	23	True				
ANR	2040200	Statement	isdigit	55:20:1838:1844	2040090	24	True				
ANR	2040201	Statement	(	55:27:1845:1845	2040090	25	True				
ANR	2040202	Statement	x	55:28:1846:1846	2040090	26	True				
ANR	2040203	Statement	)	55:29:1847:1847	2040090	27	True				
ANR	2040204	Statement	&&	55:30:1848:1849	2040090	28	True				
ANR	2040205	Statement	(	55:32:1850:1850	2040090	29	True				
ANR	2040206	Statement	x	55:33:1851:1851	2040090	30	True				
ANR	2040207	Statement	)	55:34:1852:1852	2040090	31	True				
ANR	2040208	Statement	!=	55:35:1853:1854	2040090	32	True				
ANR	2040209	Statement	'.'	55:37:1855:1857	2040090	33	True				
ANR	2040210	Statement	)	55:40:1858:1858	2040090	34	True				
ANR	2040211	Statement	define	56:1:1861:1866	2040090	35	True				
ANR	2040212	Statement	isspecialver	56:8:1868:1879	2040090	36	True				
ANR	2040213	Statement	(	56:20:1880:1880	2040090	37	True				
ANR	2040214	Statement	x	56:21:1881:1881	2040090	38	True				
ANR	2040215	Statement	)	56:22:1882:1882	2040090	39	True				
ANR	2040216	Statement	(	56:24:1884:1884	2040090	40	True				
ANR	2040217	Statement	(	56:25:1885:1885	2040090	41	True				
ANR	2040218	Statement	x	56:26:1886:1886	2040090	42	True				
ANR	2040219	Statement	)	56:27:1887:1887	2040090	43	True				
ANR	2040220	Statement	==	56:28:1888:1889	2040090	44	True				
ANR	2040221	Statement	'-'	56:30:1890:1892	2040090	45	True				
ANR	2040222	Statement	||	56:33:1893:1894	2040090	46	True				
ANR	2040223	Statement	(	56:35:1895:1895	2040090	47	True				
ANR	2040224	Statement	x	56:36:1896:1896	2040090	48	True				
ANR	2040225	Statement	)	56:37:1897:1897	2040090	49	True				
ANR	2040226	Statement	==	56:38:1898:1899	2040090	50	True				
ANR	2040227	Statement	'_'	56:40:1900:1902	2040090	51	True				
ANR	2040228	Statement	||	56:43:1903:1904	2040090	52	True				
ANR	2040229	Statement	(	56:45:1905:1905	2040090	53	True				
ANR	2040230	Statement	x	56:46:1906:1906	2040090	54	True				
ANR	2040231	Statement	)	56:47:1907:1907	2040090	55	True				
ANR	2040232	Statement	==	56:48:1908:1909	2040090	56	True				
ANR	2040233	Statement	'+'	56:50:1910:1912	2040090	57	True				
ANR	2040234	Statement	)	56:53:1913:1913	2040090	58	True				
ANR	2040235	ExpressionStatement	lq = * ( q - 1 )	58:2:1918:1931	2040090	59	True				
ANR	2040236	AssignmentExpression	lq = * ( q - 1 )		2040090	0		=			
ANR	2040237	Identifier	lq		2040090	0					
ANR	2040238	UnaryOperationExpression	* ( q - 1 )		2040090	1					
ANR	2040239	UnaryOperator	*		2040090	0					
ANR	2040240	AdditiveExpression	q - 1		2040090	1		-			
ANR	2040241	Identifier	q		2040090	0					
ANR	2040242	PrimaryExpression	1		2040090	1					
ANR	2040243	IfStatement	if ( isspecialver ( * p ) )		2040090	60					
ANR	2040244	Condition	isspecialver ( * p )	59:6:1939:1954	2040090	0	True				
ANR	2040245	CallExpression	isspecialver ( * p )		2040090	0					
ANR	2040246	Callee	isspecialver		2040090	0					
ANR	2040247	Identifier	isspecialver		2040090	0					
ANR	2040248	ArgumentList	* p		2040090	1					
ANR	2040249	Argument	* p		2040090	0					
ANR	2040250	UnaryOperationExpression	* p		2040090	0					
ANR	2040251	UnaryOperator	*		2040090	0					
ANR	2040252	Identifier	p		2040090	1					
ANR	2040253	CompoundStatement		25:24:511:511	2040090	1					
ANR	2040254	IfStatement	if ( lq != '.' )		2040090	0					
ANR	2040255	Condition	lq != '.'	60:7:1966:1974	2040090	0	True				
ANR	2040256	EqualityExpression	lq != '.'		2040090	0		!=			
ANR	2040257	Identifier	lq		2040090	0					
ANR	2040258	PrimaryExpression	'.'		2040090	1					
ANR	2040259	CompoundStatement		26:18:531:531	2040090	1					
ANR	2040260	ExpressionStatement	* q ++ = '.'	61:4:1983:1993	2040090	0	True				
ANR	2040261	AssignmentExpression	* q ++ = '.'		2040090	0		=			
ANR	2040262	UnaryOperationExpression	* q ++		2040090	0					
ANR	2040263	UnaryOperator	*		2040090	0					
ANR	2040264	PostIncDecOperationExpression	q ++		2040090	1					
ANR	2040265	Identifier	q		2040090	0					
ANR	2040266	IncDec	++		2040090	1					
ANR	2040267	PrimaryExpression	'.'		2040090	1					
ANR	2040268	ElseStatement	else		2040090	0					
ANR	2040269	IfStatement	if ( ( isndig ( lp ) && isdig ( * p ) ) || ( isdig ( lp ) && isndig ( * p ) ) )		2040090	0					
ANR	2040270	Condition	( isndig ( lp ) && isdig ( * p ) ) || ( isdig ( lp ) && isndig ( * p ) )	63:13:2013:2066	2040090	0	True				
ANR	2040271	OrExpression	( isndig ( lp ) && isdig ( * p ) ) || ( isdig ( lp ) && isndig ( * p ) )		2040090	0		||			
ANR	2040272	AndExpression	isndig ( lp ) && isdig ( * p )		2040090	0		&&			
ANR	2040273	CallExpression	isndig ( lp )		2040090	0					
ANR	2040274	Callee	isndig		2040090	0					
ANR	2040275	Identifier	isndig		2040090	0					
ANR	2040276	ArgumentList	lp		2040090	1					
ANR	2040277	Argument	lp		2040090	0					
ANR	2040278	Identifier	lp		2040090	0					
ANR	2040279	CallExpression	isdig ( * p )		2040090	1					
ANR	2040280	Callee	isdig		2040090	0					
ANR	2040281	Identifier	isdig		2040090	0					
ANR	2040282	ArgumentList	* p		2040090	1					
ANR	2040283	Argument	* p		2040090	0					
ANR	2040284	UnaryOperationExpression	* p		2040090	0					
ANR	2040285	UnaryOperator	*		2040090	0					
ANR	2040286	Identifier	p		2040090	1					
ANR	2040287	AndExpression	isdig ( lp ) && isndig ( * p )		2040090	1		&&			
ANR	2040288	CallExpression	isdig ( lp )		2040090	0					
ANR	2040289	Callee	isdig		2040090	0					
ANR	2040290	Identifier	isdig		2040090	0					
ANR	2040291	ArgumentList	lp		2040090	1					
ANR	2040292	Argument	lp		2040090	0					
ANR	2040293	Identifier	lp		2040090	0					
ANR	2040294	CallExpression	isndig ( * p )		2040090	1					
ANR	2040295	Callee	isndig		2040090	0					
ANR	2040296	Identifier	isndig		2040090	0					
ANR	2040297	ArgumentList	* p		2040090	1					
ANR	2040298	Argument	* p		2040090	0					
ANR	2040299	UnaryOperationExpression	* p		2040090	0					
ANR	2040300	UnaryOperator	*		2040090	0					
ANR	2040301	Identifier	p		2040090	1					
ANR	2040302	CompoundStatement		29:69:623:623	2040090	1					
ANR	2040303	IfStatement	if ( lq != '.' )		2040090	0					
ANR	2040304	Condition	lq != '.'	64:7:2078:2086	2040090	0	True				
ANR	2040305	EqualityExpression	lq != '.'		2040090	0		!=			
ANR	2040306	Identifier	lq		2040090	0					
ANR	2040307	PrimaryExpression	'.'		2040090	1					
ANR	2040308	CompoundStatement		30:18:643:643	2040090	1					
ANR	2040309	ExpressionStatement	* q ++ = '.'	65:4:2095:2105	2040090	0	True				
ANR	2040310	AssignmentExpression	* q ++ = '.'		2040090	0		=			
ANR	2040311	UnaryOperationExpression	* q ++		2040090	0					
ANR	2040312	UnaryOperator	*		2040090	0					
ANR	2040313	PostIncDecOperationExpression	q ++		2040090	1					
ANR	2040314	Identifier	q		2040090	0					
ANR	2040315	IncDec	++		2040090	1					
ANR	2040316	PrimaryExpression	'.'		2040090	1					
ANR	2040317	ExpressionStatement	* q ++ = * p	67:3:2115:2124	2040090	1	True				
ANR	2040318	AssignmentExpression	* q ++ = * p		2040090	0		=			
ANR	2040319	UnaryOperationExpression	* q ++		2040090	0					
ANR	2040320	UnaryOperator	*		2040090	0					
ANR	2040321	PostIncDecOperationExpression	q ++		2040090	1					
ANR	2040322	Identifier	q		2040090	0					
ANR	2040323	IncDec	++		2040090	1					
ANR	2040324	UnaryOperationExpression	* p		2040090	1					
ANR	2040325	UnaryOperator	*		2040090	0					
ANR	2040326	Identifier	p		2040090	1					
ANR	2040327	ElseStatement	else		2040090	0					
ANR	2040328	IfStatement	if ( ! isalnum ( * p ) )		2040090	0					
ANR	2040329	Condition	! isalnum ( * p )	68:13:2139:2150	2040090	0	True				
ANR	2040330	UnaryOperationExpression	! isalnum ( * p )		2040090	0					
ANR	2040331	UnaryOperator	!		2040090	0					
ANR	2040332	CallExpression	isalnum ( * p )		2040090	1					
ANR	2040333	Callee	isalnum		2040090	0					
ANR	2040334	Identifier	isalnum		2040090	0					
ANR	2040335	ArgumentList	* p		2040090	1					
ANR	2040336	Argument	* p		2040090	0					
ANR	2040337	UnaryOperationExpression	* p		2040090	0					
ANR	2040338	UnaryOperator	*		2040090	0					
ANR	2040339	Identifier	p		2040090	1					
ANR	2040340	CompoundStatement		34:27:707:707	2040090	1					
ANR	2040341	IfStatement	if ( lq != '.' )		2040090	0					
ANR	2040342	Condition	lq != '.'	69:7:2162:2170	2040090	0	True				
ANR	2040343	EqualityExpression	lq != '.'		2040090	0		!=			
ANR	2040344	Identifier	lq		2040090	0					
ANR	2040345	PrimaryExpression	'.'		2040090	1					
ANR	2040346	CompoundStatement		35:18:727:727	2040090	1					
ANR	2040347	ExpressionStatement	* q ++ = '.'	70:4:2179:2189	2040090	0	True				
ANR	2040348	AssignmentExpression	* q ++ = '.'		2040090	0		=			
ANR	2040349	UnaryOperationExpression	* q ++		2040090	0					
ANR	2040350	UnaryOperator	*		2040090	0					
ANR	2040351	PostIncDecOperationExpression	q ++		2040090	1					
ANR	2040352	Identifier	q		2040090	0					
ANR	2040353	IncDec	++		2040090	1					
ANR	2040354	PrimaryExpression	'.'		2040090	1					
ANR	2040355	ElseStatement	else		2040090	0					
ANR	2040356	CompoundStatement		38:9:759:759	2040090	0					
ANR	2040357	ExpressionStatement	* q ++ = * p	73:3:2210:2219	2040090	0	True				
ANR	2040358	AssignmentExpression	* q ++ = * p		2040090	0		=			
ANR	2040359	UnaryOperationExpression	* q ++		2040090	0					
ANR	2040360	UnaryOperator	*		2040090	0					
ANR	2040361	PostIncDecOperationExpression	q ++		2040090	1					
ANR	2040362	Identifier	q		2040090	0					
ANR	2040363	IncDec	++		2040090	1					
ANR	2040364	UnaryOperationExpression	* p		2040090	1					
ANR	2040365	UnaryOperator	*		2040090	0					
ANR	2040366	Identifier	p		2040090	1					
ANR	2040367	ExpressionStatement	lp = * p ++	75:2:2227:2236	2040090	61	True				
ANR	2040368	AssignmentExpression	lp = * p ++		2040090	0		=			
ANR	2040369	Identifier	lp		2040090	0					
ANR	2040370	UnaryOperationExpression	* p ++		2040090	1					
ANR	2040371	UnaryOperator	*		2040090	0					
ANR	2040372	PostIncDecOperationExpression	p ++		2040090	1					
ANR	2040373	Identifier	p		2040090	0					
ANR	2040374	IncDec	++		2040090	1					
ANR	2040375	ExpressionStatement	* q ++ = '\\0'	77:4:2248:2259	2040090	8	True				
ANR	2040376	AssignmentExpression	* q ++ = '\\0'		2040090	0		=			
ANR	2040377	UnaryOperationExpression	* q ++		2040090	0					
ANR	2040378	UnaryOperator	*		2040090	0					
ANR	2040379	PostIncDecOperationExpression	q ++		2040090	1					
ANR	2040380	Identifier	q		2040090	0					
ANR	2040381	IncDec	++		2040090	1					
ANR	2040382	PrimaryExpression	'\\0'		2040090	1					
ANR	2040383	ReturnStatement	return buf ;	78:4:2265:2275	2040090	9	True				
ANR	2040384	Identifier	buf		2040090	0					
ANR	2040385	ReturnType	PHPAPI char *		2040090	1					
ANR	2040386	Identifier	php_canonicalize_version		2040090	2					
ANR	2040387	ParameterList	const char * version		2040090	3					
ANR	2040388	Parameter	const char * version	34:25:1424:1442	2040090	0	True				
ANR	2040389	ParameterType	const char *		2040090	0					
ANR	2040390	Identifier	version		2040090	1					
ANR	2040391	CFGEntryNode	ENTRY		2040090		True				
ANR	2040392	CFGExitNode	EXIT		2040090		True				
ANR	2040393	Symbol	* buf		2040090						
ANR	2040394	Symbol	lp		2040090						
ANR	2040395	Symbol	isalnum		2040090						
ANR	2040396	Symbol	lq		2040090						
ANR	2040397	Symbol	* ( q - 1 )		2040090						
ANR	2040398	Symbol	isdig		2040090						
ANR	2040399	Symbol	* q ++		2040090						
ANR	2040400	Symbol	* p ++		2040090						
ANR	2040401	Symbol	isspecialver		2040090						
ANR	2040402	Symbol	isndig		2040090						
ANR	2040403	Symbol	version		2040090						
ANR	2040404	Symbol	p		2040090						
ANR	2040405	Symbol	strlen		2040090						
ANR	2040406	Symbol	q		2040090						
ANR	2040407	Symbol	buf		2040090						
ANR	2040408	Symbol	len		2040090						
ANR	2040409	Symbol	* p		2040090						
ANR	2040410	Symbol	* q		2040090						
ANR	2040411	Symbol	safe_emalloc		2040090						
ANR	2040412	ClassDef	<unnamed>	84:8:2341:2398							
ANR	2040413	DeclStmt									
ANR	2040414	Decl							const char	const char *	name
ANR	2040415	DeclStmt									
ANR	2040416	Decl							int	int	order
ANR	2040417	DeclStmt									
ANR	2040418	Decl									special_forms_t
ANR	2040419	Function	compare_special_version_forms	89:0:2401:3037							
ANR	2040420	FunctionDef	"compare_special_version_forms (char * form1 , char * form2)"		2040419	0					
ANR	2040421	CompoundStatement		91:0:2468:3037	2040419	0					
ANR	2040422	IdentifierDeclStatement	"int found1 = - 1 , found2 = - 1 ;"	92:1:2471:2499	2040419	0	True				
ANR	2040423	IdentifierDecl	found1 = - 1		2040419	0					
ANR	2040424	IdentifierDeclType	int		2040419	0					
ANR	2040425	Identifier	found1		2040419	1					
ANR	2040426	AssignmentExpression	found1 = - 1		2040419	2		=			
ANR	2040427	Identifier	found1		2040419	0					
ANR	2040428	UnaryOperationExpression	- 1		2040419	1					
ANR	2040429	UnaryOperator	-		2040419	0					
ANR	2040430	PrimaryExpression	1		2040419	1					
ANR	2040431	IdentifierDecl	found2 = - 1		2040419	1					
ANR	2040432	IdentifierDeclType	int		2040419	0					
ANR	2040433	Identifier	found2		2040419	1					
ANR	2040434	AssignmentExpression	found2 = - 1		2040419	2		=			
ANR	2040435	Identifier	found2		2040419	0					
ANR	2040436	UnaryOperationExpression	- 1		2040419	1					
ANR	2040437	UnaryOperator	-		2040419	0					
ANR	2040438	PrimaryExpression	1		2040419	1					
ANR	2040439	Statement	special_forms_t	93:1:2502:2516	2040419	1	True				
ANR	2040440	Statement	special_forms	93:17:2518:2530	2040419	2	True				
ANR	2040441	Statement	[	93:30:2531:2531	2040419	3	True				
ANR	2040442	Statement	11	93:31:2532:2533	2040419	4	True				
ANR	2040443	Statement	]	93:33:2534:2534	2040419	5	True				
ANR	2040444	Statement	=	93:35:2536:2536	2040419	6	True				
ANR	2040445	CompoundStatement		3:37:69:69	2040419	7					
ANR	2040446	CompoundStatement		4:2:73:73	2040419	0					
ANR	2040447	Statement	"""dev"""	94:3:2543:2547	2040419	0	True				
ANR	2040448	Statement	","	94:8:2548:2548	2040419	1	True				
ANR	2040449	Statement	0	94:10:2550:2550	2040419	2	True				
ANR	2040450	Statement	","	94:12:2552:2552	2040419	1	True				
ANR	2040451	CompoundStatement		5:2:87:87	2040419	2					
ANR	2040452	Statement	"""alpha"""	95:3:2557:2563	2040419	0	True				
ANR	2040453	Statement	","	95:10:2564:2564	2040419	1	True				
ANR	2040454	Statement	1	95:12:2566:2566	2040419	2	True				
ANR	2040455	Statement	","	95:14:2568:2568	2040419	3	True				
ANR	2040456	CompoundStatement		6:2:103:103	2040419	4					
ANR	2040457	Statement	"""a"""	96:3:2573:2575	2040419	0	True				
ANR	2040458	Statement	","	96:6:2576:2576	2040419	1	True				
ANR	2040459	Statement	1	96:8:2578:2578	2040419	2	True				
ANR	2040460	Statement	","	96:10:2580:2580	2040419	5	True				
ANR	2040461	CompoundStatement		7:2:115:115	2040419	6					
ANR	2040462	Statement	"""beta"""	97:3:2585:2590	2040419	0	True				
ANR	2040463	Statement	","	97:9:2591:2591	2040419	1	True				
ANR	2040464	Statement	2	97:11:2593:2593	2040419	2	True				
ANR	2040465	Statement	","	97:13:2595:2595	2040419	7	True				
ANR	2040466	CompoundStatement		8:2:130:130	2040419	8					
ANR	2040467	Statement	"""b"""	98:3:2600:2602	2040419	0	True				
ANR	2040468	Statement	","	98:6:2603:2603	2040419	1	True				
ANR	2040469	Statement	2	98:8:2605:2605	2040419	2	True				
ANR	2040470	Statement	","	98:10:2607:2607	2040419	9	True				
ANR	2040471	CompoundStatement		9:2:142:142	2040419	10					
ANR	2040472	Statement	"""RC"""	99:3:2612:2615	2040419	0	True				
ANR	2040473	Statement	","	99:7:2616:2616	2040419	1	True				
ANR	2040474	Statement	3	99:9:2618:2618	2040419	2	True				
ANR	2040475	Statement	","	99:11:2620:2620	2040419	11	True				
ANR	2040476	CompoundStatement		10:2:155:155	2040419	12					
ANR	2040477	Statement	"""rc"""	100:3:2625:2628	2040419	0	True				
ANR	2040478	Statement	","	100:7:2629:2629	2040419	1	True				
ANR	2040479	Statement	3	100:9:2631:2631	2040419	2	True				
ANR	2040480	Statement	","	100:11:2633:2633	2040419	13	True				
ANR	2040481	CompoundStatement		11:2:168:168	2040419	14					
ANR	2040482	Statement	"""#"""	101:3:2638:2640	2040419	0	True				
ANR	2040483	Statement	","	101:6:2641:2641	2040419	1	True				
ANR	2040484	Statement	4	101:8:2643:2643	2040419	2	True				
ANR	2040485	Statement	","	101:10:2645:2645	2040419	15	True				
ANR	2040486	CompoundStatement		12:2:180:180	2040419	16					
ANR	2040487	Statement	"""pl"""	102:3:2650:2653	2040419	0	True				
ANR	2040488	Statement	","	102:7:2654:2654	2040419	1	True				
ANR	2040489	Statement	5	102:9:2656:2656	2040419	2	True				
ANR	2040490	Statement	","	102:11:2658:2658	2040419	17	True				
ANR	2040491	CompoundStatement		13:2:193:193	2040419	18					
ANR	2040492	Statement	"""p"""	103:3:2663:2665	2040419	0	True				
ANR	2040493	Statement	","	103:6:2666:2666	2040419	1	True				
ANR	2040494	Statement	5	103:8:2668:2668	2040419	2	True				
ANR	2040495	Statement	","	103:10:2670:2670	2040419	19	True				
ANR	2040496	CompoundStatement		14:2:205:205	2040419	20					
ANR	2040497	Statement	NULL	104:3:2675:2678	2040419	0	True				
ANR	2040498	Statement	","	104:7:2679:2679	2040419	1	True				
ANR	2040499	Statement	0	104:9:2681:2681	2040419	2	True				
ANR	2040500	Statement	","	104:11:2683:2683	2040419	21	True				
ANR	2040501	ExpressionStatement		105:2:2687:2687	2040419	8	True				
ANR	2040502	IdentifierDeclStatement	special_forms_t * pp ;	106:1:2690:2709	2040419	9	True				
ANR	2040503	IdentifierDecl	* pp		2040419	0					
ANR	2040504	IdentifierDeclType	special_forms_t *		2040419	0					
ANR	2040505	Identifier	pp		2040419	1					
ANR	2040506	ForStatement	for ( pp = special_forms ; pp && pp -> name ; pp ++ )		2040419	10					
ANR	2040507	ForInit	pp = special_forms ;	108:6:2718:2736	2040419	0	True				
ANR	2040508	AssignmentExpression	pp = special_forms		2040419	0		=			
ANR	2040509	Identifier	pp		2040419	0					
ANR	2040510	Identifier	special_forms		2040419	1					
ANR	2040511	Condition	pp && pp -> name	108:26:2738:2751	2040419	1	True				
ANR	2040512	AndExpression	pp && pp -> name		2040419	0		&&			
ANR	2040513	Identifier	pp		2040419	0					
ANR	2040514	PtrMemberAccess	pp -> name		2040419	1					
ANR	2040515	Identifier	pp		2040419	0					
ANR	2040516	Identifier	name		2040419	1					
ANR	2040517	PostIncDecOperationExpression	pp ++	108:42:2754:2757	2040419	2	True				
ANR	2040518	Identifier	pp		2040419	0					
ANR	2040519	IncDec	++		2040419	1					
ANR	2040520	CompoundStatement		18:48:291:291	2040419	3					
ANR	2040521	IfStatement	"if ( strncmp ( form1 , pp -> name , strlen ( pp -> name ) ) == 0 )"		2040419	0					
ANR	2040522	Condition	"strncmp ( form1 , pp -> name , strlen ( pp -> name ) ) == 0"	109:6:2768:2814	2040419	0	True				
ANR	2040523	EqualityExpression	"strncmp ( form1 , pp -> name , strlen ( pp -> name ) ) == 0"		2040419	0		==			
ANR	2040524	CallExpression	"strncmp ( form1 , pp -> name , strlen ( pp -> name ) )"		2040419	0					
ANR	2040525	Callee	strncmp		2040419	0					
ANR	2040526	Identifier	strncmp		2040419	0					
ANR	2040527	ArgumentList	form1		2040419	1					
ANR	2040528	Argument	form1		2040419	0					
ANR	2040529	Identifier	form1		2040419	0					
ANR	2040530	Argument	pp -> name		2040419	1					
ANR	2040531	PtrMemberAccess	pp -> name		2040419	0					
ANR	2040532	Identifier	pp		2040419	0					
ANR	2040533	Identifier	name		2040419	1					
ANR	2040534	Argument	strlen ( pp -> name )		2040419	2					
ANR	2040535	CallExpression	strlen ( pp -> name )		2040419	0					
ANR	2040536	Callee	strlen		2040419	0					
ANR	2040537	Identifier	strlen		2040419	0					
ANR	2040538	ArgumentList	pp -> name		2040419	1					
ANR	2040539	Argument	pp -> name		2040419	0					
ANR	2040540	PtrMemberAccess	pp -> name		2040419	0					
ANR	2040541	Identifier	pp		2040419	0					
ANR	2040542	Identifier	name		2040419	1					
ANR	2040543	PrimaryExpression	0		2040419	1					
ANR	2040544	CompoundStatement		19:55:348:348	2040419	1					
ANR	2040545	ExpressionStatement	found1 = pp -> order	110:3:2822:2840	2040419	0	True				
ANR	2040546	AssignmentExpression	found1 = pp -> order		2040419	0		=			
ANR	2040547	Identifier	found1		2040419	0					
ANR	2040548	PtrMemberAccess	pp -> order		2040419	1					
ANR	2040549	Identifier	pp		2040419	0					
ANR	2040550	Identifier	order		2040419	1					
ANR	2040551	BreakStatement	break ;	111:3:2845:2850	2040419	1	True				
ANR	2040552	ForStatement	for ( pp = special_forms ; pp && pp -> name ; pp ++ )		2040419	11					
ANR	2040553	ForInit	pp = special_forms ;	114:6:2865:2883	2040419	0	True				
ANR	2040554	AssignmentExpression	pp = special_forms		2040419	0		=			
ANR	2040555	Identifier	pp		2040419	0					
ANR	2040556	Identifier	special_forms		2040419	1					
ANR	2040557	Condition	pp && pp -> name	114:26:2885:2898	2040419	1	True				
ANR	2040558	AndExpression	pp && pp -> name		2040419	0		&&			
ANR	2040559	Identifier	pp		2040419	0					
ANR	2040560	PtrMemberAccess	pp -> name		2040419	1					
ANR	2040561	Identifier	pp		2040419	0					
ANR	2040562	Identifier	name		2040419	1					
ANR	2040563	PostIncDecOperationExpression	pp ++	114:42:2901:2904	2040419	2	True				
ANR	2040564	Identifier	pp		2040419	0					
ANR	2040565	IncDec	++		2040419	1					
ANR	2040566	CompoundStatement		24:48:438:438	2040419	3					
ANR	2040567	IfStatement	"if ( strncmp ( form2 , pp -> name , strlen ( pp -> name ) ) == 0 )"		2040419	0					
ANR	2040568	Condition	"strncmp ( form2 , pp -> name , strlen ( pp -> name ) ) == 0"	115:6:2915:2961	2040419	0	True				
ANR	2040569	EqualityExpression	"strncmp ( form2 , pp -> name , strlen ( pp -> name ) ) == 0"		2040419	0		==			
ANR	2040570	CallExpression	"strncmp ( form2 , pp -> name , strlen ( pp -> name ) )"		2040419	0					
ANR	2040571	Callee	strncmp		2040419	0					
ANR	2040572	Identifier	strncmp		2040419	0					
ANR	2040573	ArgumentList	form2		2040419	1					
ANR	2040574	Argument	form2		2040419	0					
ANR	2040575	Identifier	form2		2040419	0					
ANR	2040576	Argument	pp -> name		2040419	1					
ANR	2040577	PtrMemberAccess	pp -> name		2040419	0					
ANR	2040578	Identifier	pp		2040419	0					
ANR	2040579	Identifier	name		2040419	1					
ANR	2040580	Argument	strlen ( pp -> name )		2040419	2					
ANR	2040581	CallExpression	strlen ( pp -> name )		2040419	0					
ANR	2040582	Callee	strlen		2040419	0					
ANR	2040583	Identifier	strlen		2040419	0					
ANR	2040584	ArgumentList	pp -> name		2040419	1					
ANR	2040585	Argument	pp -> name		2040419	0					
ANR	2040586	PtrMemberAccess	pp -> name		2040419	0					
ANR	2040587	Identifier	pp		2040419	0					
ANR	2040588	Identifier	name		2040419	1					
ANR	2040589	PrimaryExpression	0		2040419	1					
ANR	2040590	CompoundStatement		25:55:495:495	2040419	1					
ANR	2040591	ExpressionStatement	found2 = pp -> order	116:3:2969:2987	2040419	0	True				
ANR	2040592	AssignmentExpression	found2 = pp -> order		2040419	0		=			
ANR	2040593	Identifier	found2		2040419	0					
ANR	2040594	PtrMemberAccess	pp -> order		2040419	1					
ANR	2040595	Identifier	pp		2040419	0					
ANR	2040596	Identifier	order		2040419	1					
ANR	2040597	BreakStatement	break ;	117:3:2992:2997	2040419	1	True				
ANR	2040598	ReturnStatement	return sign ( found1 - found2 ) ;	120:1:3007:3035	2040419	12	True				
ANR	2040599	CallExpression	sign ( found1 - found2 )		2040419	0					
ANR	2040600	Callee	sign		2040419	0					
ANR	2040601	Identifier	sign		2040419	0					
ANR	2040602	ArgumentList	found1 - found2		2040419	1					
ANR	2040603	Argument	found1 - found2		2040419	0					
ANR	2040604	AdditiveExpression	found1 - found2		2040419	0		-			
ANR	2040605	Identifier	found1		2040419	0					
ANR	2040606	Identifier	found2		2040419	1					
ANR	2040607	ReturnType	static int		2040419	1					
ANR	2040608	Identifier	compare_special_version_forms		2040419	2					
ANR	2040609	ParameterList	"char * form1 , char * form2"		2040419	3					
ANR	2040610	Parameter	char * form1	90:30:2442:2452	2040419	0	True				
ANR	2040611	ParameterType	char *		2040419	0					
ANR	2040612	Identifier	form1		2040419	1					
ANR	2040613	Parameter	char * form2	90:43:2455:2465	2040419	1	True				
ANR	2040614	ParameterType	char *		2040419	0					
ANR	2040615	Identifier	form2		2040419	1					
ANR	2040616	CFGEntryNode	ENTRY		2040419		True				
ANR	2040617	CFGExitNode	EXIT		2040419		True				
ANR	2040618	Symbol	pp		2040419						
ANR	2040619	Symbol	found2		2040419						
ANR	2040620	Symbol	special_forms		2040419						
ANR	2040621	Symbol	strlen		2040419						
ANR	2040622	Symbol	strncmp		2040419						
ANR	2040623	Symbol	* pp		2040419						
ANR	2040624	Symbol	pp -> name		2040419						
ANR	2040625	Symbol	sign		2040419						
ANR	2040626	Symbol	form1		2040419						
ANR	2040627	Symbol	found1		2040419						
ANR	2040628	Symbol	pp -> order		2040419						
ANR	2040629	Symbol	form2		2040419						
ANR	2040630	Function	php_version_compare	126:0:3083:4738							
ANR	2040631	FunctionDef	"php_version_compare (const char * orig_ver1 , const char * orig_ver2)"		2040630	0					
ANR	2040632	CompoundStatement		128:0:3160:4738	2040630	0					
ANR	2040633	IdentifierDeclStatement	char * ver1 ;	129:1:3163:3173	2040630	0	True				
ANR	2040634	IdentifierDecl	* ver1		2040630	0					
ANR	2040635	IdentifierDeclType	char *		2040630	0					
ANR	2040636	Identifier	ver1		2040630	1					
ANR	2040637	IdentifierDeclStatement	char * ver2 ;	130:1:3176:3186	2040630	1	True				
ANR	2040638	IdentifierDecl	* ver2		2040630	0					
ANR	2040639	IdentifierDeclType	char *		2040630	0					
ANR	2040640	Identifier	ver2		2040630	1					
ANR	2040641	IdentifierDeclStatement	"char * p1 , * p2 , * n1 , * n2 ;"	131:1:3189:3212	2040630	2	True				
ANR	2040642	IdentifierDecl	* p1		2040630	0					
ANR	2040643	IdentifierDeclType	char *		2040630	0					
ANR	2040644	Identifier	p1		2040630	1					
ANR	2040645	IdentifierDecl	* p2		2040630	1					
ANR	2040646	IdentifierDeclType	char *		2040630	0					
ANR	2040647	Identifier	p2		2040630	1					
ANR	2040648	IdentifierDecl	* n1		2040630	2					
ANR	2040649	IdentifierDeclType	char *		2040630	0					
ANR	2040650	Identifier	n1		2040630	1					
ANR	2040651	IdentifierDecl	* n2		2040630	3					
ANR	2040652	IdentifierDeclType	char *		2040630	0					
ANR	2040653	Identifier	n2		2040630	1					
ANR	2040654	IdentifierDeclStatement	"long l1 , l2 ;"	132:1:3215:3226	2040630	3	True				
ANR	2040655	IdentifierDecl	l1		2040630	0					
ANR	2040656	IdentifierDeclType	long		2040630	0					
ANR	2040657	Identifier	l1		2040630	1					
ANR	2040658	IdentifierDecl	l2		2040630	1					
ANR	2040659	IdentifierDeclType	long		2040630	0					
ANR	2040660	Identifier	l2		2040630	1					
ANR	2040661	IdentifierDeclStatement	int compare = 0 ;	133:1:3229:3244	2040630	4	True				
ANR	2040662	IdentifierDecl	compare = 0		2040630	0					
ANR	2040663	IdentifierDeclType	int		2040630	0					
ANR	2040664	Identifier	compare		2040630	1					
ANR	2040665	AssignmentExpression	compare = 0		2040630	2		=			
ANR	2040666	Identifier	compare		2040630	0					
ANR	2040667	PrimaryExpression	0		2040630	1					
ANR	2040668	IfStatement	if ( ! * orig_ver1 || ! * orig_ver2 )		2040630	5					
ANR	2040669	Condition	! * orig_ver1 || ! * orig_ver2	135:5:3252:3277	2040630	0	True				
ANR	2040670	OrExpression	! * orig_ver1 || ! * orig_ver2		2040630	0		||			
ANR	2040671	UnaryOperationExpression	! * orig_ver1		2040630	0					
ANR	2040672	UnaryOperator	!		2040630	0					
ANR	2040673	UnaryOperationExpression	* orig_ver1		2040630	1					
ANR	2040674	UnaryOperator	*		2040630	0					
ANR	2040675	Identifier	orig_ver1		2040630	1					
ANR	2040676	UnaryOperationExpression	! * orig_ver2		2040630	1					
ANR	2040677	UnaryOperator	!		2040630	0					
ANR	2040678	UnaryOperationExpression	* orig_ver2		2040630	1					
ANR	2040679	UnaryOperator	*		2040630	0					
ANR	2040680	Identifier	orig_ver2		2040630	1					
ANR	2040681	CompoundStatement		8:33:119:119	2040630	1					
ANR	2040682	IfStatement	if ( ! * orig_ver1 && ! * orig_ver2 )		2040630	0					
ANR	2040683	Condition	! * orig_ver1 && ! * orig_ver2	136:6:3288:3313	2040630	0	True				
ANR	2040684	AndExpression	! * orig_ver1 && ! * orig_ver2		2040630	0		&&			
ANR	2040685	UnaryOperationExpression	! * orig_ver1		2040630	0					
ANR	2040686	UnaryOperator	!		2040630	0					
ANR	2040687	UnaryOperationExpression	* orig_ver1		2040630	1					
ANR	2040688	UnaryOperator	*		2040630	0					
ANR	2040689	Identifier	orig_ver1		2040630	1					
ANR	2040690	UnaryOperationExpression	! * orig_ver2		2040630	1					
ANR	2040691	UnaryOperator	!		2040630	0					
ANR	2040692	UnaryOperationExpression	* orig_ver2		2040630	1					
ANR	2040693	UnaryOperator	*		2040630	0					
ANR	2040694	Identifier	orig_ver2		2040630	1					
ANR	2040695	CompoundStatement		9:34:155:155	2040630	1					
ANR	2040696	ReturnStatement	return 0 ;	137:3:3321:3329	2040630	0	True				
ANR	2040697	PrimaryExpression	0		2040630	0					
ANR	2040698	ElseStatement	else		2040630	0					
ANR	2040699	CompoundStatement		11:9:179:179	2040630	0					
ANR	2040700	ReturnStatement	return * orig_ver1 ? 1 : - 1 ;	139:3:3345:3371	2040630	0	True				
ANR	2040701	ConditionalExpression	* orig_ver1 ? 1 : - 1		2040630	0					
ANR	2040702	Condition	* orig_ver1		2040630	0					
ANR	2040703	UnaryOperationExpression	* orig_ver1		2040630	0					
ANR	2040704	UnaryOperator	*		2040630	0					
ANR	2040705	Identifier	orig_ver1		2040630	1					
ANR	2040706	PrimaryExpression	1		2040630	1					
ANR	2040707	UnaryOperationExpression	- 1		2040630	2					
ANR	2040708	UnaryOperator	-		2040630	0					
ANR	2040709	PrimaryExpression	1		2040630	1					
ANR	2040710	IfStatement	if ( orig_ver1 [ 0 ] == '#' )		2040630	6					
ANR	2040711	Condition	orig_ver1 [ 0 ] == '#'	142:5:3385:3403	2040630	0	True				
ANR	2040712	EqualityExpression	orig_ver1 [ 0 ] == '#'		2040630	0		==			
ANR	2040713	ArrayIndexing	orig_ver1 [ 0 ]		2040630	0					
ANR	2040714	Identifier	orig_ver1		2040630	0					
ANR	2040715	PrimaryExpression	0		2040630	1					
ANR	2040716	PrimaryExpression	'#'		2040630	1					
ANR	2040717	CompoundStatement		15:26:245:245	2040630	1					
ANR	2040718	ExpressionStatement	ver1 = estrdup ( orig_ver1 )	143:2:3410:3435	2040630	0	True				
ANR	2040719	AssignmentExpression	ver1 = estrdup ( orig_ver1 )		2040630	0		=			
ANR	2040720	Identifier	ver1		2040630	0					
ANR	2040721	CallExpression	estrdup ( orig_ver1 )		2040630	1					
ANR	2040722	Callee	estrdup		2040630	0					
ANR	2040723	Identifier	estrdup		2040630	0					
ANR	2040724	ArgumentList	orig_ver1		2040630	1					
ANR	2040725	Argument	orig_ver1		2040630	0					
ANR	2040726	Identifier	orig_ver1		2040630	0					
ANR	2040727	ElseStatement	else		2040630	0					
ANR	2040728	CompoundStatement		17:8:284:284	2040630	0					
ANR	2040729	ExpressionStatement	ver1 = php_canonicalize_version ( orig_ver1 )	145:2:3449:3491	2040630	0	True				
ANR	2040730	AssignmentExpression	ver1 = php_canonicalize_version ( orig_ver1 )		2040630	0		=			
ANR	2040731	Identifier	ver1		2040630	0					
ANR	2040732	CallExpression	php_canonicalize_version ( orig_ver1 )		2040630	1					
ANR	2040733	Callee	php_canonicalize_version		2040630	0					
ANR	2040734	Identifier	php_canonicalize_version		2040630	0					
ANR	2040735	ArgumentList	orig_ver1		2040630	1					
ANR	2040736	Argument	orig_ver1		2040630	0					
ANR	2040737	Identifier	orig_ver1		2040630	0					
ANR	2040738	IfStatement	if ( orig_ver2 [ 0 ] == '#' )		2040630	7					
ANR	2040739	Condition	orig_ver2 [ 0 ] == '#'	147:5:3501:3519	2040630	0	True				
ANR	2040740	EqualityExpression	orig_ver2 [ 0 ] == '#'		2040630	0		==			
ANR	2040741	ArrayIndexing	orig_ver2 [ 0 ]		2040630	0					
ANR	2040742	Identifier	orig_ver2		2040630	0					
ANR	2040743	PrimaryExpression	0		2040630	1					
ANR	2040744	PrimaryExpression	'#'		2040630	1					
ANR	2040745	CompoundStatement		20:26:361:361	2040630	1					
ANR	2040746	ExpressionStatement	ver2 = estrdup ( orig_ver2 )	148:2:3526:3551	2040630	0	True				
ANR	2040747	AssignmentExpression	ver2 = estrdup ( orig_ver2 )		2040630	0		=			
ANR	2040748	Identifier	ver2		2040630	0					
ANR	2040749	CallExpression	estrdup ( orig_ver2 )		2040630	1					
ANR	2040750	Callee	estrdup		2040630	0					
ANR	2040751	Identifier	estrdup		2040630	0					
ANR	2040752	ArgumentList	orig_ver2		2040630	1					
ANR	2040753	Argument	orig_ver2		2040630	0					
ANR	2040754	Identifier	orig_ver2		2040630	0					
ANR	2040755	ElseStatement	else		2040630	0					
ANR	2040756	CompoundStatement		22:8:400:400	2040630	0					
ANR	2040757	ExpressionStatement	ver2 = php_canonicalize_version ( orig_ver2 )	150:2:3565:3607	2040630	0	True				
ANR	2040758	AssignmentExpression	ver2 = php_canonicalize_version ( orig_ver2 )		2040630	0		=			
ANR	2040759	Identifier	ver2		2040630	0					
ANR	2040760	CallExpression	php_canonicalize_version ( orig_ver2 )		2040630	1					
ANR	2040761	Callee	php_canonicalize_version		2040630	0					
ANR	2040762	Identifier	php_canonicalize_version		2040630	0					
ANR	2040763	ArgumentList	orig_ver2		2040630	1					
ANR	2040764	Argument	orig_ver2		2040630	0					
ANR	2040765	Identifier	orig_ver2		2040630	0					
ANR	2040766	ExpressionStatement	p1 = n1 = ver1	152:1:3613:3627	2040630	8	True				
ANR	2040767	AssignmentExpression	p1 = n1 = ver1		2040630	0		=			
ANR	2040768	Identifier	p1		2040630	0					
ANR	2040769	AssignmentExpression	n1 = ver1		2040630	1		=			
ANR	2040770	Identifier	n1		2040630	0					
ANR	2040771	Identifier	ver1		2040630	1					
ANR	2040772	ExpressionStatement	p2 = n2 = ver2	153:1:3630:3644	2040630	9	True				
ANR	2040773	AssignmentExpression	p2 = n2 = ver2		2040630	0		=			
ANR	2040774	Identifier	p2		2040630	0					
ANR	2040775	AssignmentExpression	n2 = ver2		2040630	1		=			
ANR	2040776	Identifier	n2		2040630	0					
ANR	2040777	Identifier	ver2		2040630	1					
ANR	2040778	WhileStatement	while ( * p1 && * p2 && n1 && n2 )		2040630	10					
ANR	2040779	Condition	* p1 && * p2 && n1 && n2	154:8:3654:3675	2040630	0	True				
ANR	2040780	AndExpression	* p1 && * p2 && n1 && n2		2040630	0		&&			
ANR	2040781	UnaryOperationExpression	* p1		2040630	0					
ANR	2040782	UnaryOperator	*		2040630	0					
ANR	2040783	Identifier	p1		2040630	1					
ANR	2040784	AndExpression	* p2 && n1 && n2		2040630	1		&&			
ANR	2040785	UnaryOperationExpression	* p2		2040630	0					
ANR	2040786	UnaryOperator	*		2040630	0					
ANR	2040787	Identifier	p2		2040630	1					
ANR	2040788	AndExpression	n1 && n2		2040630	1		&&			
ANR	2040789	Identifier	n1		2040630	0					
ANR	2040790	Identifier	n2		2040630	1					
ANR	2040791	CompoundStatement		27:32:517:517	2040630	1					
ANR	2040792	IfStatement	"if ( ( n1 = strchr ( p1 , '.' ) ) != NULL )"		2040630	0					
ANR	2040793	Condition	"( n1 = strchr ( p1 , '.' ) ) != NULL"	155:6:3686:3715	2040630	0	True				
ANR	2040794	EqualityExpression	"( n1 = strchr ( p1 , '.' ) ) != NULL"		2040630	0		!=			
ANR	2040795	AssignmentExpression	"n1 = strchr ( p1 , '.' )"		2040630	0		=			
ANR	2040796	Identifier	n1		2040630	0					
ANR	2040797	CallExpression	"strchr ( p1 , '.' )"		2040630	1					
ANR	2040798	Callee	strchr		2040630	0					
ANR	2040799	Identifier	strchr		2040630	0					
ANR	2040800	ArgumentList	p1		2040630	1					
ANR	2040801	Argument	p1		2040630	0					
ANR	2040802	Identifier	p1		2040630	0					
ANR	2040803	Argument	'.'		2040630	1					
ANR	2040804	PrimaryExpression	'.'		2040630	0					
ANR	2040805	Identifier	NULL		2040630	1					
ANR	2040806	CompoundStatement		28:38:557:557	2040630	1					
ANR	2040807	ExpressionStatement	* n1 = '\\0'	156:3:3723:3733	2040630	0	True				
ANR	2040808	AssignmentExpression	* n1 = '\\0'		2040630	0		=			
ANR	2040809	UnaryOperationExpression	* n1		2040630	0					
ANR	2040810	UnaryOperator	*		2040630	0					
ANR	2040811	Identifier	n1		2040630	1					
ANR	2040812	PrimaryExpression	'\\0'		2040630	1					
ANR	2040813	IfStatement	"if ( ( n2 = strchr ( p2 , '.' ) ) != NULL )"		2040630	1					
ANR	2040814	Condition	"( n2 = strchr ( p2 , '.' ) ) != NULL"	158:6:3745:3774	2040630	0	True				
ANR	2040815	EqualityExpression	"( n2 = strchr ( p2 , '.' ) ) != NULL"		2040630	0		!=			
ANR	2040816	AssignmentExpression	"n2 = strchr ( p2 , '.' )"		2040630	0		=			
ANR	2040817	Identifier	n2		2040630	0					
ANR	2040818	CallExpression	"strchr ( p2 , '.' )"		2040630	1					
ANR	2040819	Callee	strchr		2040630	0					
ANR	2040820	Identifier	strchr		2040630	0					
ANR	2040821	ArgumentList	p2		2040630	1					
ANR	2040822	Argument	p2		2040630	0					
ANR	2040823	Identifier	p2		2040630	0					
ANR	2040824	Argument	'.'		2040630	1					
ANR	2040825	PrimaryExpression	'.'		2040630	0					
ANR	2040826	Identifier	NULL		2040630	1					
ANR	2040827	CompoundStatement		31:38:616:616	2040630	1					
ANR	2040828	ExpressionStatement	* n2 = '\\0'	159:3:3782:3792	2040630	0	True				
ANR	2040829	AssignmentExpression	* n2 = '\\0'		2040630	0		=			
ANR	2040830	UnaryOperationExpression	* n2		2040630	0					
ANR	2040831	UnaryOperator	*		2040630	0					
ANR	2040832	Identifier	n2		2040630	1					
ANR	2040833	PrimaryExpression	'\\0'		2040630	1					
ANR	2040834	IfStatement	if ( isdigit ( * p1 ) && isdigit ( * p2 ) )		2040630	2					
ANR	2040835	Condition	isdigit ( * p1 ) && isdigit ( * p2 )	161:6:3804:3831	2040630	0	True				
ANR	2040836	AndExpression	isdigit ( * p1 ) && isdigit ( * p2 )		2040630	0		&&			
ANR	2040837	CallExpression	isdigit ( * p1 )		2040630	0					
ANR	2040838	Callee	isdigit		2040630	0					
ANR	2040839	Identifier	isdigit		2040630	0					
ANR	2040840	ArgumentList	* p1		2040630	1					
ANR	2040841	Argument	* p1		2040630	0					
ANR	2040842	UnaryOperationExpression	* p1		2040630	0					
ANR	2040843	UnaryOperator	*		2040630	0					
ANR	2040844	Identifier	p1		2040630	1					
ANR	2040845	CallExpression	isdigit ( * p2 )		2040630	1					
ANR	2040846	Callee	isdigit		2040630	0					
ANR	2040847	Identifier	isdigit		2040630	0					
ANR	2040848	ArgumentList	* p2		2040630	1					
ANR	2040849	Argument	* p2		2040630	0					
ANR	2040850	UnaryOperationExpression	* p2		2040630	0					
ANR	2040851	UnaryOperator	*		2040630	0					
ANR	2040852	Identifier	p2		2040630	1					
ANR	2040853	CompoundStatement		34:36:673:673	2040630	1					
ANR	2040854	ExpressionStatement	"l1 = strtol ( p1 , NULL , 10 )"	163:3:3876:3901	2040630	0	True				
ANR	2040855	AssignmentExpression	"l1 = strtol ( p1 , NULL , 10 )"		2040630	0		=			
ANR	2040856	Identifier	l1		2040630	0					
ANR	2040857	CallExpression	"strtol ( p1 , NULL , 10 )"		2040630	1					
ANR	2040858	Callee	strtol		2040630	0					
ANR	2040859	Identifier	strtol		2040630	0					
ANR	2040860	ArgumentList	p1		2040630	1					
ANR	2040861	Argument	p1		2040630	0					
ANR	2040862	Identifier	p1		2040630	0					
ANR	2040863	Argument	NULL		2040630	1					
ANR	2040864	Identifier	NULL		2040630	0					
ANR	2040865	Argument	10		2040630	2					
ANR	2040866	PrimaryExpression	10		2040630	0					
ANR	2040867	ExpressionStatement	"l2 = strtol ( p2 , NULL , 10 )"	164:3:3906:3931	2040630	1	True				
ANR	2040868	AssignmentExpression	"l2 = strtol ( p2 , NULL , 10 )"		2040630	0		=			
ANR	2040869	Identifier	l2		2040630	0					
ANR	2040870	CallExpression	"strtol ( p2 , NULL , 10 )"		2040630	1					
ANR	2040871	Callee	strtol		2040630	0					
ANR	2040872	Identifier	strtol		2040630	0					
ANR	2040873	ArgumentList	p2		2040630	1					
ANR	2040874	Argument	p2		2040630	0					
ANR	2040875	Identifier	p2		2040630	0					
ANR	2040876	Argument	NULL		2040630	1					
ANR	2040877	Identifier	NULL		2040630	0					
ANR	2040878	Argument	10		2040630	2					
ANR	2040879	PrimaryExpression	10		2040630	0					
ANR	2040880	ExpressionStatement	compare = sign ( l1 - l2 )	165:3:3936:3959	2040630	2	True				
ANR	2040881	AssignmentExpression	compare = sign ( l1 - l2 )		2040630	0		=			
ANR	2040882	Identifier	compare		2040630	0					
ANR	2040883	CallExpression	sign ( l1 - l2 )		2040630	1					
ANR	2040884	Callee	sign		2040630	0					
ANR	2040885	Identifier	sign		2040630	0					
ANR	2040886	ArgumentList	l1 - l2		2040630	1					
ANR	2040887	Argument	l1 - l2		2040630	0					
ANR	2040888	AdditiveExpression	l1 - l2		2040630	0		-			
ANR	2040889	Identifier	l1		2040630	0					
ANR	2040890	Identifier	l2		2040630	1					
ANR	2040891	ElseStatement	else		2040630	0					
ANR	2040892	IfStatement	if ( ! isdigit ( * p1 ) && ! isdigit ( * p2 ) )		2040630	0					
ANR	2040893	Condition	! isdigit ( * p1 ) && ! isdigit ( * p2 )	166:13:3974:4003	2040630	0	True				
ANR	2040894	AndExpression	! isdigit ( * p1 ) && ! isdigit ( * p2 )		2040630	0		&&			
ANR	2040895	UnaryOperationExpression	! isdigit ( * p1 )		2040630	0					
ANR	2040896	UnaryOperator	!		2040630	0					
ANR	2040897	CallExpression	isdigit ( * p1 )		2040630	1					
ANR	2040898	Callee	isdigit		2040630	0					
ANR	2040899	Identifier	isdigit		2040630	0					
ANR	2040900	ArgumentList	* p1		2040630	1					
ANR	2040901	Argument	* p1		2040630	0					
ANR	2040902	UnaryOperationExpression	* p1		2040630	0					
ANR	2040903	UnaryOperator	*		2040630	0					
ANR	2040904	Identifier	p1		2040630	1					
ANR	2040905	UnaryOperationExpression	! isdigit ( * p2 )		2040630	1					
ANR	2040906	UnaryOperator	!		2040630	0					
ANR	2040907	CallExpression	isdigit ( * p2 )		2040630	1					
ANR	2040908	Callee	isdigit		2040630	0					
ANR	2040909	Identifier	isdigit		2040630	0					
ANR	2040910	ArgumentList	* p2		2040630	1					
ANR	2040911	Argument	* p2		2040630	0					
ANR	2040912	UnaryOperationExpression	* p2		2040630	0					
ANR	2040913	UnaryOperator	*		2040630	0					
ANR	2040914	Identifier	p2		2040630	1					
ANR	2040915	CompoundStatement		39:45:845:845	2040630	1					
ANR	2040916	ExpressionStatement	"compare = compare_special_version_forms ( p1 , p2 )"	168:3:4042:4089	2040630	0	True				
ANR	2040917	AssignmentExpression	"compare = compare_special_version_forms ( p1 , p2 )"		2040630	0		=			
ANR	2040918	Identifier	compare		2040630	0					
ANR	2040919	CallExpression	"compare_special_version_forms ( p1 , p2 )"		2040630	1					
ANR	2040920	Callee	compare_special_version_forms		2040630	0					
ANR	2040921	Identifier	compare_special_version_forms		2040630	0					
ANR	2040922	ArgumentList	p1		2040630	1					
ANR	2040923	Argument	p1		2040630	0					
ANR	2040924	Identifier	p1		2040630	0					
ANR	2040925	Argument	p2		2040630	1					
ANR	2040926	Identifier	p2		2040630	0					
ANR	2040927	ElseStatement	else		2040630	0					
ANR	2040928	CompoundStatement		42:9:939:939	2040630	0					
ANR	2040929	IfStatement	if ( isdigit ( * p1 ) )		2040630	0					
ANR	2040930	Condition	isdigit ( * p1 )	171:7:4143:4154	2040630	0	True				
ANR	2040931	CallExpression	isdigit ( * p1 )		2040630	0					
ANR	2040932	Callee	isdigit		2040630	0					
ANR	2040933	Identifier	isdigit		2040630	0					
ANR	2040934	ArgumentList	* p1		2040630	1					
ANR	2040935	Argument	* p1		2040630	0					
ANR	2040936	UnaryOperationExpression	* p1		2040630	0					
ANR	2040937	UnaryOperator	*		2040630	0					
ANR	2040938	Identifier	p1		2040630	1					
ANR	2040939	CompoundStatement		44:21:996:996	2040630	1					
ANR	2040940	ExpressionStatement	"compare = compare_special_version_forms ( ""#N#"" , p2 )"	172:4:4163:4213	2040630	0	True				
ANR	2040941	AssignmentExpression	"compare = compare_special_version_forms ( ""#N#"" , p2 )"		2040630	0		=			
ANR	2040942	Identifier	compare		2040630	0					
ANR	2040943	CallExpression	"compare_special_version_forms ( ""#N#"" , p2 )"		2040630	1					
ANR	2040944	Callee	compare_special_version_forms		2040630	0					
ANR	2040945	Identifier	compare_special_version_forms		2040630	0					
ANR	2040946	ArgumentList	"""#N#"""		2040630	1					
ANR	2040947	Argument	"""#N#"""		2040630	0					
ANR	2040948	PrimaryExpression	"""#N#"""		2040630	0					
ANR	2040949	Argument	p2		2040630	1					
ANR	2040950	Identifier	p2		2040630	0					
ANR	2040951	ElseStatement	else		2040630	0					
ANR	2040952	CompoundStatement		46:10:1064:1064	2040630	0					
ANR	2040953	ExpressionStatement	"compare = compare_special_version_forms ( p1 , ""#N#"" )"	174:4:4231:4281	2040630	0	True				
ANR	2040954	AssignmentExpression	"compare = compare_special_version_forms ( p1 , ""#N#"" )"		2040630	0		=			
ANR	2040955	Identifier	compare		2040630	0					
ANR	2040956	CallExpression	"compare_special_version_forms ( p1 , ""#N#"" )"		2040630	1					
ANR	2040957	Callee	compare_special_version_forms		2040630	0					
ANR	2040958	Identifier	compare_special_version_forms		2040630	0					
ANR	2040959	ArgumentList	p1		2040630	1					
ANR	2040960	Argument	p1		2040630	0					
ANR	2040961	Identifier	p1		2040630	0					
ANR	2040962	Argument	"""#N#"""		2040630	1					
ANR	2040963	PrimaryExpression	"""#N#"""		2040630	0					
ANR	2040964	IfStatement	if ( compare != 0 )		2040630	3					
ANR	2040965	Condition	compare != 0	177:6:4298:4309	2040630	0	True				
ANR	2040966	EqualityExpression	compare != 0		2040630	0		!=			
ANR	2040967	Identifier	compare		2040630	0					
ANR	2040968	PrimaryExpression	0		2040630	1					
ANR	2040969	CompoundStatement		50:20:1151:1151	2040630	1					
ANR	2040970	BreakStatement	break ;	178:3:4317:4322	2040630	0	True				
ANR	2040971	IfStatement	if ( n1 != NULL )		2040630	4					
ANR	2040972	Condition	n1 != NULL	180:6:4334:4343	2040630	0	True				
ANR	2040973	EqualityExpression	n1 != NULL		2040630	0		!=			
ANR	2040974	Identifier	n1		2040630	0					
ANR	2040975	Identifier	NULL		2040630	1					
ANR	2040976	CompoundStatement		53:18:1185:1185	2040630	1					
ANR	2040977	ExpressionStatement	p1 = n1 + 1	181:3:4351:4362	2040630	0	True				
ANR	2040978	AssignmentExpression	p1 = n1 + 1		2040630	0		=			
ANR	2040979	Identifier	p1		2040630	0					
ANR	2040980	AdditiveExpression	n1 + 1		2040630	1		+			
ANR	2040981	Identifier	n1		2040630	0					
ANR	2040982	PrimaryExpression	1		2040630	1					
ANR	2040983	IfStatement	if ( n2 != NULL )		2040630	5					
ANR	2040984	Condition	n2 != NULL	183:6:4374:4383	2040630	0	True				
ANR	2040985	EqualityExpression	n2 != NULL		2040630	0		!=			
ANR	2040986	Identifier	n2		2040630	0					
ANR	2040987	Identifier	NULL		2040630	1					
ANR	2040988	CompoundStatement		56:18:1225:1225	2040630	1					
ANR	2040989	ExpressionStatement	p2 = n2 + 1	184:3:4391:4402	2040630	0	True				
ANR	2040990	AssignmentExpression	p2 = n2 + 1		2040630	0		=			
ANR	2040991	Identifier	p2		2040630	0					
ANR	2040992	AdditiveExpression	n2 + 1		2040630	1		+			
ANR	2040993	Identifier	n2		2040630	0					
ANR	2040994	PrimaryExpression	1		2040630	1					
ANR	2040995	IfStatement	if ( compare == 0 )		2040630	11					
ANR	2040996	Condition	compare == 0	187:5:4416:4427	2040630	0	True				
ANR	2040997	EqualityExpression	compare == 0		2040630	0		==			
ANR	2040998	Identifier	compare		2040630	0					
ANR	2040999	PrimaryExpression	0		2040630	1					
ANR	2041000	CompoundStatement		60:19:1269:1269	2040630	1					
ANR	2041001	IfStatement	if ( n1 != NULL )		2040630	0					
ANR	2041002	Condition	n1 != NULL	188:6:4438:4447	2040630	0	True				
ANR	2041003	EqualityExpression	n1 != NULL		2040630	0		!=			
ANR	2041004	Identifier	n1		2040630	0					
ANR	2041005	Identifier	NULL		2040630	1					
ANR	2041006	CompoundStatement		61:18:1289:1289	2040630	1					
ANR	2041007	IfStatement	if ( isdigit ( * p1 ) )		2040630	0					
ANR	2041008	Condition	isdigit ( * p1 )	189:7:4459:4470	2040630	0	True				
ANR	2041009	CallExpression	isdigit ( * p1 )		2040630	0					
ANR	2041010	Callee	isdigit		2040630	0					
ANR	2041011	Identifier	isdigit		2040630	0					
ANR	2041012	ArgumentList	* p1		2040630	1					
ANR	2041013	Argument	* p1		2040630	0					
ANR	2041014	UnaryOperationExpression	* p1		2040630	0					
ANR	2041015	UnaryOperator	*		2040630	0					
ANR	2041016	Identifier	p1		2040630	1					
ANR	2041017	CompoundStatement		62:21:1312:1312	2040630	1					
ANR	2041018	ExpressionStatement	compare = 1	190:4:4479:4490	2040630	0	True				
ANR	2041019	AssignmentExpression	compare = 1		2040630	0		=			
ANR	2041020	Identifier	compare		2040630	0					
ANR	2041021	PrimaryExpression	1		2040630	1					
ANR	2041022	ElseStatement	else		2040630	0					
ANR	2041023	CompoundStatement		64:10:1341:1341	2040630	0					
ANR	2041024	ExpressionStatement	"compare = php_version_compare ( p1 , ""#N#"" )"	192:4:4508:4548	2040630	0	True				
ANR	2041025	AssignmentExpression	"compare = php_version_compare ( p1 , ""#N#"" )"		2040630	0		=			
ANR	2041026	Identifier	compare		2040630	0					
ANR	2041027	CallExpression	"php_version_compare ( p1 , ""#N#"" )"		2040630	1					
ANR	2041028	Callee	php_version_compare		2040630	0					
ANR	2041029	Identifier	php_version_compare		2040630	0					
ANR	2041030	ArgumentList	p1		2040630	1					
ANR	2041031	Argument	p1		2040630	0					
ANR	2041032	Identifier	p1		2040630	0					
ANR	2041033	Argument	"""#N#"""		2040630	1					
ANR	2041034	PrimaryExpression	"""#N#"""		2040630	0					
ANR	2041035	ElseStatement	else		2040630	0					
ANR	2041036	IfStatement	if ( n2 != NULL )		2040630	0					
ANR	2041037	Condition	n2 != NULL	194:13:4568:4577	2040630	0	True				
ANR	2041038	EqualityExpression	n2 != NULL		2040630	0		!=			
ANR	2041039	Identifier	n2		2040630	0					
ANR	2041040	Identifier	NULL		2040630	1					
ANR	2041041	CompoundStatement		67:25:1419:1419	2040630	1					
ANR	2041042	IfStatement	if ( isdigit ( * p2 ) )		2040630	0					
ANR	2041043	Condition	isdigit ( * p2 )	195:7:4589:4600	2040630	0	True				
ANR	2041044	CallExpression	isdigit ( * p2 )		2040630	0					
ANR	2041045	Callee	isdigit		2040630	0					
ANR	2041046	Identifier	isdigit		2040630	0					
ANR	2041047	ArgumentList	* p2		2040630	1					
ANR	2041048	Argument	* p2		2040630	0					
ANR	2041049	UnaryOperationExpression	* p2		2040630	0					
ANR	2041050	UnaryOperator	*		2040630	0					
ANR	2041051	Identifier	p2		2040630	1					
ANR	2041052	CompoundStatement		68:21:1442:1442	2040630	1					
ANR	2041053	ExpressionStatement	compare = - 1	196:4:4609:4621	2040630	0	True				
ANR	2041054	AssignmentExpression	compare = - 1		2040630	0		=			
ANR	2041055	Identifier	compare		2040630	0					
ANR	2041056	UnaryOperationExpression	- 1		2040630	1					
ANR	2041057	UnaryOperator	-		2040630	0					
ANR	2041058	PrimaryExpression	1		2040630	1					
ANR	2041059	ElseStatement	else		2040630	0					
ANR	2041060	CompoundStatement		70:10:1472:1472	2040630	0					
ANR	2041061	ExpressionStatement	"compare = php_version_compare ( ""#N#"" , p2 )"	198:4:4639:4679	2040630	0	True				
ANR	2041062	AssignmentExpression	"compare = php_version_compare ( ""#N#"" , p2 )"		2040630	0		=			
ANR	2041063	Identifier	compare		2040630	0					
ANR	2041064	CallExpression	"php_version_compare ( ""#N#"" , p2 )"		2040630	1					
ANR	2041065	Callee	php_version_compare		2040630	0					
ANR	2041066	Identifier	php_version_compare		2040630	0					
ANR	2041067	ArgumentList	"""#N#"""		2040630	1					
ANR	2041068	Argument	"""#N#"""		2040630	0					
ANR	2041069	PrimaryExpression	"""#N#"""		2040630	0					
ANR	2041070	Argument	p2		2040630	1					
ANR	2041071	Identifier	p2		2040630	0					
ANR	2041072	ExpressionStatement	efree ( ver1 )	202:1:4694:4705	2040630	12	True				
ANR	2041073	CallExpression	efree ( ver1 )		2040630	0					
ANR	2041074	Callee	efree		2040630	0					
ANR	2041075	Identifier	efree		2040630	0					
ANR	2041076	ArgumentList	ver1		2040630	1					
ANR	2041077	Argument	ver1		2040630	0					
ANR	2041078	Identifier	ver1		2040630	0					
ANR	2041079	ExpressionStatement	efree ( ver2 )	203:1:4708:4719	2040630	13	True				
ANR	2041080	CallExpression	efree ( ver2 )		2040630	0					
ANR	2041081	Callee	efree		2040630	0					
ANR	2041082	Identifier	efree		2040630	0					
ANR	2041083	ArgumentList	ver2		2040630	1					
ANR	2041084	Argument	ver2		2040630	0					
ANR	2041085	Identifier	ver2		2040630	0					
ANR	2041086	ReturnStatement	return compare ;	204:1:4722:4736	2040630	14	True				
ANR	2041087	Identifier	compare		2040630	0					
ANR	2041088	ReturnType	PHPAPI int		2040630	1					
ANR	2041089	Identifier	php_version_compare		2040630	2					
ANR	2041090	ParameterList	"const char * orig_ver1 , const char * orig_ver2"		2040630	3					
ANR	2041091	Parameter	const char * orig_ver1	127:20:3114:3134	2040630	0	True				
ANR	2041092	ParameterType	const char *		2040630	0					
ANR	2041093	Identifier	orig_ver1		2040630	1					
ANR	2041094	Parameter	const char * orig_ver2	127:43:3137:3157	2040630	1	True				
ANR	2041095	ParameterType	const char *		2040630	0					
ANR	2041096	Identifier	orig_ver2		2040630	1					
ANR	2041097	CFGEntryNode	ENTRY		2040630		True				
ANR	2041098	CFGExitNode	EXIT		2040630		True				
ANR	2041099	Symbol	p1		2040630						
ANR	2041100	Symbol	p2		2040630						
ANR	2041101	Symbol	compare		2040630						
ANR	2041102	Symbol	n1		2040630						
ANR	2041103	Symbol	n2		2040630						
ANR	2041104	Symbol	l1		2040630						
ANR	2041105	Symbol	l2		2040630						
ANR	2041106	Symbol	sign		2040630						
ANR	2041107	Symbol	strchr		2040630						
ANR	2041108	Symbol	php_canonicalize_version		2040630						
ANR	2041109	Symbol	compare_special_version_forms		2040630						
ANR	2041110	Symbol	strtol		2040630						
ANR	2041111	Symbol	ver2		2040630						
ANR	2041112	Symbol	ver1		2040630						
ANR	2041113	Symbol	isdigit		2040630						
ANR	2041114	Symbol	NULL		2040630						
ANR	2041115	Symbol	* p1		2040630						
ANR	2041116	Symbol	* n2		2040630						
ANR	2041117	Symbol	* n1		2040630						
ANR	2041118	Symbol	* p2		2040630						
ANR	2041119	Symbol	orig_ver2		2040630						
ANR	2041120	Symbol	orig_ver1		2040630						
ANR	2041121	Symbol	estrdup		2040630						
ANR	2041122	Symbol	php_version_compare		2040630						
ANR	2041123	Symbol	* orig_ver1		2040630						
ANR	2041124	Symbol	* orig_ver2		2040630						
ANR	2041125	DeclStmt									
ANR	2041126	Decl							char	char *	v1
ANR	2041127	Decl							char	char *	v2
ANR	2041128	Decl							char	char *	op
ANR	2041129	DeclStmt									
ANR	2041130	Decl							int	int	v1_len
ANR	2041131	Decl							int	int	v2_len
ANR	2041132	Decl							int	int	op_len
ANR	2041133	DeclStmt									
ANR	2041134	Decl							int	int	compare
ANR	2041135	Decl							int	int	argc
