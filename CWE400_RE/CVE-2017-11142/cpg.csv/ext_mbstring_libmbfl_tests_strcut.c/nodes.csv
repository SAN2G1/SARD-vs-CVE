command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	668956	File	data/converged/CVE-2017-11142_php-src/ext_mbstring_libmbfl_tests_strcut.c								
ANR	668957	Function	hexdump	14:0:237:402							
ANR	668958	FunctionDef	hexdump (const mbfl_string * ptr)		668957	0					
ANR	668959	CompoundStatement		15:0:281:402	668957	0					
ANR	668960	IdentifierDeclStatement	unsigned int i ;	16:1:284:298	668957	0	True				
ANR	668961	IdentifierDecl	i		668957	0					
ANR	668962	IdentifierDeclType	unsigned int		668957	0					
ANR	668963	Identifier	i		668957	1					
ANR	668964	ForStatement	for ( i = 0 ; i < ptr -> len ; i ++ )		668957	1					
ANR	668965	ForInit	i = 0 ;	18:6:307:312	668957	0	True				
ANR	668966	AssignmentExpression	i = 0		668957	0		=			
ANR	668967	Identifier	i		668957	0					
ANR	668968	PrimaryExpression	0		668957	1					
ANR	668969	Condition	i < ptr -> len	18:13:314:325	668957	1	True				
ANR	668970	RelationalExpression	i < ptr -> len		668957	0		<			
ANR	668971	Identifier	i		668957	0					
ANR	668972	PtrMemberAccess	ptr -> len		668957	1					
ANR	668973	Identifier	ptr		668957	0					
ANR	668974	Identifier	len		668957	1					
ANR	668975	PostIncDecOperationExpression	i ++	18:27:328:330	668957	2	True				
ANR	668976	Identifier	i		668957	0					
ANR	668977	IncDec	++		668957	1					
ANR	668978	CompoundStatement		4:32:51:51	668957	3					
ANR	668979	ExpressionStatement	"printf ( ""%%%02x"" , ptr -> val [ i ] )"	19:2:337:366	668957	0	True				
ANR	668980	CallExpression	"printf ( ""%%%02x"" , ptr -> val [ i ] )"		668957	0					
ANR	668981	Callee	printf		668957	0					
ANR	668982	Identifier	printf		668957	0					
ANR	668983	ArgumentList	"""%%%02x"""		668957	1					
ANR	668984	Argument	"""%%%02x"""		668957	0					
ANR	668985	PrimaryExpression	"""%%%02x"""		668957	0					
ANR	668986	Argument	ptr -> val [ i ]		668957	1					
ANR	668987	ArrayIndexing	ptr -> val [ i ]		668957	0					
ANR	668988	PtrMemberAccess	ptr -> val		668957	0					
ANR	668989	Identifier	ptr		668957	0					
ANR	668990	Identifier	val		668957	1					
ANR	668991	Identifier	i		668957	1					
ANR	668992	ExpressionStatement	"printf ( "" (%u)\\n"" , ptr -> len )"	22:1:373:400	668957	2	True				
ANR	668993	CallExpression	"printf ( "" (%u)\\n"" , ptr -> len )"		668957	0					
ANR	668994	Callee	printf		668957	0					
ANR	668995	Identifier	printf		668957	0					
ANR	668996	ArgumentList	""" (%u)\\n"""		668957	1					
ANR	668997	Argument	""" (%u)\\n"""		668957	0					
ANR	668998	PrimaryExpression	""" (%u)\\n"""		668957	0					
ANR	668999	Argument	ptr -> len		668957	1					
ANR	669000	PtrMemberAccess	ptr -> len		668957	0					
ANR	669001	Identifier	ptr		668957	0					
ANR	669002	Identifier	len		668957	1					
ANR	669003	ReturnType	static void		668957	1					
ANR	669004	Identifier	hexdump		668957	2					
ANR	669005	ParameterList	const mbfl_string * ptr		668957	3					
ANR	669006	Parameter	const mbfl_string * ptr	14:20:257:278	668957	0	True				
ANR	669007	ParameterType	const mbfl_string *		668957	0					
ANR	669008	Identifier	ptr		668957	1					
ANR	669009	CFGEntryNode	ENTRY		668957		True				
ANR	669010	CFGExitNode	EXIT		668957		True				
ANR	669011	Symbol	ptr -> val		668957						
ANR	669012	Symbol	* * ptr		668957						
ANR	669013	Symbol	* i		668957						
ANR	669014	Symbol	* ptr		668957						
ANR	669015	Symbol	i		668957						
ANR	669016	Symbol	* ptr -> val		668957						
ANR	669017	Symbol	ptr -> len		668957						
ANR	669018	Symbol	ptr		668957						
ANR	669019	Function	main	25:0:405:2236							
ANR	669020	FunctionDef	"main (int argc , char * * argv)"		669019	0					
ANR	669021	CompoundStatement		26:0:437:2236	669019	0					
ANR	669022	IdentifierDeclStatement	enum mbfl_no_encoding no_encoding ;	27:1:440:473	669019	0	True				
ANR	669023	IdentifierDecl	no_encoding		669019	0					
ANR	669024	IdentifierDeclType	enum mbfl_no_encoding		669019	0					
ANR	669025	Identifier	no_encoding		669019	1					
ANR	669026	IdentifierDeclStatement	enum mbfl_no_language no_language ;	28:1:476:509	669019	1	True				
ANR	669027	IdentifierDecl	no_language		669019	0					
ANR	669028	IdentifierDeclType	enum mbfl_no_language		669019	0					
ANR	669029	Identifier	no_language		669019	1					
ANR	669030	IdentifierDeclStatement	mbfl_memory_device dev ;	29:1:512:534	669019	2	True				
ANR	669031	IdentifierDecl	dev		669019	0					
ANR	669032	IdentifierDeclType	mbfl_memory_device		669019	0					
ANR	669033	Identifier	dev		669019	1					
ANR	669034	IdentifierDeclStatement	mbfl_string string ;	30:1:537:555	669019	3	True				
ANR	669035	IdentifierDecl	string		669019	0					
ANR	669036	IdentifierDeclType	mbfl_string		669019	0					
ANR	669037	Identifier	string		669019	1					
ANR	669038	IdentifierDeclStatement	"int offset , length ;"	31:1:558:576	669019	4	True				
ANR	669039	IdentifierDecl	offset		669019	0					
ANR	669040	IdentifierDeclType	int		669019	0					
ANR	669041	Identifier	offset		669019	1					
ANR	669042	IdentifierDecl	length		669019	1					
ANR	669043	IdentifierDeclType	int		669019	0					
ANR	669044	Identifier	length		669019	1					
ANR	669045	IdentifierDeclStatement	int final = 0 ;	32:1:579:592	669019	5	True				
ANR	669046	IdentifierDecl	final = 0		669019	0					
ANR	669047	IdentifierDeclType	int		669019	0					
ANR	669048	Identifier	final		669019	1					
ANR	669049	AssignmentExpression	final = 0		669019	2		=			
ANR	669050	Identifier	final		669019	0					
ANR	669051	PrimaryExpression	0		669019	1					
ANR	669052	IdentifierDeclStatement	int state = 0 ;	33:1:595:608	669019	6	True				
ANR	669053	IdentifierDecl	state = 0		669019	0					
ANR	669054	IdentifierDeclType	int		669019	0					
ANR	669055	Identifier	state		669019	1					
ANR	669056	AssignmentExpression	state = 0		669019	2		=			
ANR	669057	Identifier	state		669019	0					
ANR	669058	PrimaryExpression	0		669019	1					
ANR	669059	IfStatement	if ( argc < 5 )		669019	7					
ANR	669060	Condition	argc < 5	35:5:616:623	669019	0	True				
ANR	669061	RelationalExpression	argc < 5		669019	0		<			
ANR	669062	Identifier	argc		669019	0					
ANR	669063	PrimaryExpression	5		669019	1					
ANR	669064	CompoundStatement		10:15:188:188	669019	1					
ANR	669065	ExpressionStatement	"fprintf ( stderr , ""Usage: %s lang encoding offset length\\n"" , argv [ 0 ] )"	36:2:630:697	669019	0	True				
ANR	669066	CallExpression	"fprintf ( stderr , ""Usage: %s lang encoding offset length\\n"" , argv [ 0 ] )"		669019	0					
ANR	669067	Callee	fprintf		669019	0					
ANR	669068	Identifier	fprintf		669019	0					
ANR	669069	ArgumentList	stderr		669019	1					
ANR	669070	Argument	stderr		669019	0					
ANR	669071	Identifier	stderr		669019	0					
ANR	669072	Argument	"""Usage: %s lang encoding offset length\\n"""		669019	1					
ANR	669073	PrimaryExpression	"""Usage: %s lang encoding offset length\\n"""		669019	0					
ANR	669074	Argument	argv [ 0 ]		669019	2					
ANR	669075	ArrayIndexing	argv [ 0 ]		669019	0					
ANR	669076	Identifier	argv		669019	0					
ANR	669077	PrimaryExpression	0		669019	1					
ANR	669078	ReturnStatement	return EXIT_FAILURE ;	37:2:701:720	669019	1	True				
ANR	669079	Identifier	EXIT_FAILURE		669019	0					
ANR	669080	IfStatement	if ( ( no_language = mbfl_name2no_language ( argv [ 1 ] ) ) == mbfl_no_language_invalid )		669019	8					
ANR	669081	Condition	( no_language = mbfl_name2no_language ( argv [ 1 ] ) ) == mbfl_no_language_invalid	40:5:731:807	669019	0	True				
ANR	669082	EqualityExpression	( no_language = mbfl_name2no_language ( argv [ 1 ] ) ) == mbfl_no_language_invalid		669019	0		==			
ANR	669083	AssignmentExpression	no_language = mbfl_name2no_language ( argv [ 1 ] )		669019	0		=			
ANR	669084	Identifier	no_language		669019	0					
ANR	669085	CallExpression	mbfl_name2no_language ( argv [ 1 ] )		669019	1					
ANR	669086	Callee	mbfl_name2no_language		669019	0					
ANR	669087	Identifier	mbfl_name2no_language		669019	0					
ANR	669088	ArgumentList	argv [ 1 ]		669019	1					
ANR	669089	Argument	argv [ 1 ]		669019	0					
ANR	669090	ArrayIndexing	argv [ 1 ]		669019	0					
ANR	669091	Identifier	argv		669019	0					
ANR	669092	PrimaryExpression	1		669019	1					
ANR	669093	Identifier	mbfl_no_language_invalid		669019	1					
ANR	669094	CompoundStatement		16:29:372:372	669019	1					
ANR	669095	ExpressionStatement	"printf ( ""Unsupported NLS: %s\\n"" , argv [ 1 ] )"	42:2:814:854	669019	0	True				
ANR	669096	CallExpression	"printf ( ""Unsupported NLS: %s\\n"" , argv [ 1 ] )"		669019	0					
ANR	669097	Callee	printf		669019	0					
ANR	669098	Identifier	printf		669019	0					
ANR	669099	ArgumentList	"""Unsupported NLS: %s\\n"""		669019	1					
ANR	669100	Argument	"""Unsupported NLS: %s\\n"""		669019	0					
ANR	669101	PrimaryExpression	"""Unsupported NLS: %s\\n"""		669019	0					
ANR	669102	Argument	argv [ 1 ]		669019	1					
ANR	669103	ArrayIndexing	argv [ 1 ]		669019	0					
ANR	669104	Identifier	argv		669019	0					
ANR	669105	PrimaryExpression	1		669019	1					
ANR	669106	ReturnStatement	return EXIT_FAILURE ;	43:2:858:877	669019	1	True				
ANR	669107	Identifier	EXIT_FAILURE		669019	0					
ANR	669108	IfStatement	if ( ( no_encoding = mbfl_name2no_encoding ( argv [ 2 ] ) ) == mbfl_no_encoding_invalid )		669019	9					
ANR	669109	Condition	( no_encoding = mbfl_name2no_encoding ( argv [ 2 ] ) ) == mbfl_no_encoding_invalid	46:5:888:964	669019	0	True				
ANR	669110	EqualityExpression	( no_encoding = mbfl_name2no_encoding ( argv [ 2 ] ) ) == mbfl_no_encoding_invalid		669019	0		==			
ANR	669111	AssignmentExpression	no_encoding = mbfl_name2no_encoding ( argv [ 2 ] )		669019	0		=			
ANR	669112	Identifier	no_encoding		669019	0					
ANR	669113	CallExpression	mbfl_name2no_encoding ( argv [ 2 ] )		669019	1					
ANR	669114	Callee	mbfl_name2no_encoding		669019	0					
ANR	669115	Identifier	mbfl_name2no_encoding		669019	0					
ANR	669116	ArgumentList	argv [ 2 ]		669019	1					
ANR	669117	Argument	argv [ 2 ]		669019	0					
ANR	669118	ArrayIndexing	argv [ 2 ]		669019	0					
ANR	669119	Identifier	argv		669019	0					
ANR	669120	PrimaryExpression	2		669019	1					
ANR	669121	Identifier	mbfl_no_encoding_invalid		669019	1					
ANR	669122	CompoundStatement		22:29:529:529	669019	1					
ANR	669123	ExpressionStatement	"printf ( ""Unsupported encoding: %s\\n"" , argv [ 2 ] )"	48:2:971:1016	669019	0	True				
ANR	669124	CallExpression	"printf ( ""Unsupported encoding: %s\\n"" , argv [ 2 ] )"		669019	0					
ANR	669125	Callee	printf		669019	0					
ANR	669126	Identifier	printf		669019	0					
ANR	669127	ArgumentList	"""Unsupported encoding: %s\\n"""		669019	1					
ANR	669128	Argument	"""Unsupported encoding: %s\\n"""		669019	0					
ANR	669129	PrimaryExpression	"""Unsupported encoding: %s\\n"""		669019	0					
ANR	669130	Argument	argv [ 2 ]		669019	1					
ANR	669131	ArrayIndexing	argv [ 2 ]		669019	0					
ANR	669132	Identifier	argv		669019	0					
ANR	669133	PrimaryExpression	2		669019	1					
ANR	669134	ReturnStatement	return EXIT_FAILURE ;	49:2:1020:1039	669019	1	True				
ANR	669135	Identifier	EXIT_FAILURE		669019	0					
ANR	669136	ExpressionStatement	errno = 0	52:1:1046:1055	669019	10	True				
ANR	669137	AssignmentExpression	errno = 0		669019	0		=			
ANR	669138	Identifier	errno		669019	0					
ANR	669139	PrimaryExpression	0		669019	1					
ANR	669140	ExpressionStatement	"offset = strtol ( argv [ 3 ] , NULL , 10 )"	53:1:1058:1092	669019	11	True				
ANR	669141	AssignmentExpression	"offset = strtol ( argv [ 3 ] , NULL , 10 )"		669019	0		=			
ANR	669142	Identifier	offset		669019	0					
ANR	669143	CallExpression	"strtol ( argv [ 3 ] , NULL , 10 )"		669019	1					
ANR	669144	Callee	strtol		669019	0					
ANR	669145	Identifier	strtol		669019	0					
ANR	669146	ArgumentList	argv [ 3 ]		669019	1					
ANR	669147	Argument	argv [ 3 ]		669019	0					
ANR	669148	ArrayIndexing	argv [ 3 ]		669019	0					
ANR	669149	Identifier	argv		669019	0					
ANR	669150	PrimaryExpression	3		669019	1					
ANR	669151	Argument	NULL		669019	1					
ANR	669152	Identifier	NULL		669019	0					
ANR	669153	Argument	10		669019	2					
ANR	669154	PrimaryExpression	10		669019	0					
ANR	669155	IfStatement	if ( errno )		669019	12					
ANR	669156	Condition	errno	54:5:1099:1103	669019	0	True				
ANR	669157	Identifier	errno		669019	0					
ANR	669158	CompoundStatement		29:12:668:668	669019	1					
ANR	669159	ExpressionStatement	"printf ( ""Invalid offset: %s\\n"" , argv [ 3 ] )"	55:2:1110:1149	669019	0	True				
ANR	669160	CallExpression	"printf ( ""Invalid offset: %s\\n"" , argv [ 3 ] )"		669019	0					
ANR	669161	Callee	printf		669019	0					
ANR	669162	Identifier	printf		669019	0					
ANR	669163	ArgumentList	"""Invalid offset: %s\\n"""		669019	1					
ANR	669164	Argument	"""Invalid offset: %s\\n"""		669019	0					
ANR	669165	PrimaryExpression	"""Invalid offset: %s\\n"""		669019	0					
ANR	669166	Argument	argv [ 3 ]		669019	1					
ANR	669167	ArrayIndexing	argv [ 3 ]		669019	0					
ANR	669168	Identifier	argv		669019	0					
ANR	669169	PrimaryExpression	3		669019	1					
ANR	669170	ReturnStatement	return EXIT_FAILURE ;	56:2:1153:1172	669019	1	True				
ANR	669171	Identifier	EXIT_FAILURE		669019	0					
ANR	669172	ExpressionStatement	"length = strtol ( argv [ 4 ] , NULL , 10 )"	59:1:1179:1213	669019	13	True				
ANR	669173	AssignmentExpression	"length = strtol ( argv [ 4 ] , NULL , 10 )"		669019	0		=			
ANR	669174	Identifier	length		669019	0					
ANR	669175	CallExpression	"strtol ( argv [ 4 ] , NULL , 10 )"		669019	1					
ANR	669176	Callee	strtol		669019	0					
ANR	669177	Identifier	strtol		669019	0					
ANR	669178	ArgumentList	argv [ 4 ]		669019	1					
ANR	669179	Argument	argv [ 4 ]		669019	0					
ANR	669180	ArrayIndexing	argv [ 4 ]		669019	0					
ANR	669181	Identifier	argv		669019	0					
ANR	669182	PrimaryExpression	4		669019	1					
ANR	669183	Argument	NULL		669019	1					
ANR	669184	Identifier	NULL		669019	0					
ANR	669185	Argument	10		669019	2					
ANR	669186	PrimaryExpression	10		669019	0					
ANR	669187	IfStatement	if ( errno )		669019	14					
ANR	669188	Condition	errno	60:5:1220:1224	669019	0	True				
ANR	669189	Identifier	errno		669019	0					
ANR	669190	CompoundStatement		35:12:789:789	669019	1					
ANR	669191	ExpressionStatement	"printf ( ""Invalid length: %s\\n"" , argv [ 4 ] )"	61:2:1231:1270	669019	0	True				
ANR	669192	CallExpression	"printf ( ""Invalid length: %s\\n"" , argv [ 4 ] )"		669019	0					
ANR	669193	Callee	printf		669019	0					
ANR	669194	Identifier	printf		669019	0					
ANR	669195	ArgumentList	"""Invalid length: %s\\n"""		669019	1					
ANR	669196	Argument	"""Invalid length: %s\\n"""		669019	0					
ANR	669197	PrimaryExpression	"""Invalid length: %s\\n"""		669019	0					
ANR	669198	Argument	argv [ 4 ]		669019	1					
ANR	669199	ArrayIndexing	argv [ 4 ]		669019	0					
ANR	669200	Identifier	argv		669019	0					
ANR	669201	PrimaryExpression	4		669019	1					
ANR	669202	ReturnStatement	return EXIT_FAILURE ;	62:2:1274:1293	669019	1	True				
ANR	669203	Identifier	EXIT_FAILURE		669019	0					
ANR	669204	DoStatement	do		669019	15					
ANR	669205	CompoundStatement		42:2:870:888	669019	0					
ANR	669206	IdentifierDeclStatement	mbfl_string result ;	67:2:1308:1326	669019	0	True				
ANR	669207	IdentifierDecl	result		669019	0					
ANR	669208	IdentifierDeclType	mbfl_string		669019	0					
ANR	669209	Identifier	result		669019	1					
ANR	669210	ExpressionStatement	"mbfl_memory_device_init ( & dev , 0 , 4096 )"	69:2:1331:1369	669019	1	True				
ANR	669211	CallExpression	"mbfl_memory_device_init ( & dev , 0 , 4096 )"		669019	0					
ANR	669212	Callee	mbfl_memory_device_init		669019	0					
ANR	669213	Identifier	mbfl_memory_device_init		669019	0					
ANR	669214	ArgumentList	& dev		669019	1					
ANR	669215	Argument	& dev		669019	0					
ANR	669216	UnaryOperationExpression	& dev		669019	0					
ANR	669217	UnaryOperator	&		669019	0					
ANR	669218	Identifier	dev		669019	1					
ANR	669219	Argument	0		669019	1					
ANR	669220	PrimaryExpression	0		669019	0					
ANR	669221	Argument	4096		669019	2					
ANR	669222	PrimaryExpression	4096		669019	0					
ANR	669223	ExpressionStatement	"mbfl_string_init_set ( & string , no_language , no_encoding )"	70:2:1373:1428	669019	2	True				
ANR	669224	CallExpression	"mbfl_string_init_set ( & string , no_language , no_encoding )"		669019	0					
ANR	669225	Callee	mbfl_string_init_set		669019	0					
ANR	669226	Identifier	mbfl_string_init_set		669019	0					
ANR	669227	ArgumentList	& string		669019	1					
ANR	669228	Argument	& string		669019	0					
ANR	669229	UnaryOperationExpression	& string		669019	0					
ANR	669230	UnaryOperator	&		669019	0					
ANR	669231	Identifier	string		669019	1					
ANR	669232	Argument	no_language		669019	1					
ANR	669233	Identifier	no_language		669019	0					
ANR	669234	Argument	no_encoding		669019	2					
ANR	669235	Identifier	no_encoding		669019	0					
ANR	669236	ForStatement	for ( ; ; )		669019	3					
ANR	669237	CompoundStatement		48:3:1009:1035	669019	0					
ANR	669238	IdentifierDeclStatement	const int c = fgetc ( stdin ) ;	73:3:1447:1473	669019	0	True				
ANR	669239	IdentifierDecl	c = fgetc ( stdin )		669019	0					
ANR	669240	IdentifierDeclType	const int		669019	0					
ANR	669241	Identifier	c		669019	1					
ANR	669242	AssignmentExpression	c = fgetc ( stdin )		669019	2		=			
ANR	669243	Identifier	c		669019	0					
ANR	669244	CallExpression	fgetc ( stdin )		669019	1					
ANR	669245	Callee	fgetc		669019	0					
ANR	669246	Identifier	fgetc		669019	0					
ANR	669247	ArgumentList	stdin		669019	1					
ANR	669248	Argument	stdin		669019	0					
ANR	669249	Identifier	stdin		669019	0					
ANR	669250	IfStatement	if ( c == EOF )		669019	1					
ANR	669251	Condition	c == EOF	75:7:1483:1490	669019	0	True				
ANR	669252	EqualityExpression	c == EOF		669019	0		==			
ANR	669253	Identifier	c		669019	0					
ANR	669254	Identifier	EOF		669019	1					
ANR	669255	CompoundStatement		50:17:1055:1055	669019	1					
ANR	669256	ExpressionStatement	final = 1	76:4:1499:1508	669019	0	True				
ANR	669257	AssignmentExpression	final = 1		669019	0		=			
ANR	669258	Identifier	final		669019	0					
ANR	669259	PrimaryExpression	1		669019	1					
ANR	669260	BreakStatement	break ;	77:4:1514:1519	669019	1	True				
ANR	669261	ElseStatement	else		669019	0					
ANR	669262	IfStatement	if ( c == 10 )		669019	0					
ANR	669263	Condition	c == 10	78:14:1535:1541	669019	0	True				
ANR	669264	EqualityExpression	c == 10		669019	0		==			
ANR	669265	Identifier	c		669019	0					
ANR	669266	PrimaryExpression	10		669019	1					
ANR	669267	CompoundStatement		53:23:1106:1106	669019	1					
ANR	669268	IfStatement	if ( state == 1 )		669019	0					
ANR	669269	Condition	state == 1	79:8:1554:1563	669019	0	True				
ANR	669270	EqualityExpression	state == 1		669019	0		==			
ANR	669271	Identifier	state		669019	0					
ANR	669272	PrimaryExpression	1		669019	1					
ANR	669273	CompoundStatement		54:20:1128:1128	669019	1					
ANR	669274	ExpressionStatement	state = 0	80:5:1573:1582	669019	0	True				
ANR	669275	AssignmentExpression	state = 0		669019	0		=			
ANR	669276	Identifier	state		669019	0					
ANR	669277	PrimaryExpression	0		669019	1					
ANR	669278	ContinueStatement	continue ;	81:5:1589:1597	669019	1	True				
ANR	669279	BreakStatement	break ;	83:4:1609:1614	669019	1	True				
ANR	669280	ElseStatement	else		669019	0					
ANR	669281	IfStatement	if ( c == 13 )		669019	0					
ANR	669282	Condition	c == 13	84:14:1630:1636	669019	0	True				
ANR	669283	EqualityExpression	c == 13		669019	0		==			
ANR	669284	Identifier	c		669019	0					
ANR	669285	PrimaryExpression	13		669019	1					
ANR	669286	CompoundStatement		59:23:1201:1201	669019	1					
ANR	669287	ExpressionStatement	state = 1	85:4:1645:1654	669019	0	True				
ANR	669288	AssignmentExpression	state = 1		669019	0		=			
ANR	669289	Identifier	state		669019	0					
ANR	669290	PrimaryExpression	1		669019	1					
ANR	669291	BreakStatement	break ;	86:4:1660:1665	669019	1	True				
ANR	669292	IfStatement	if ( dev . pos >= dev . length )		669019	2					
ANR	669293	Condition	dev . pos >= dev . length	89:7:1680:1700	669019	0	True				
ANR	669294	RelationalExpression	dev . pos >= dev . length		669019	0		>=			
ANR	669295	MemberAccess	dev . pos		669019	0					
ANR	669296	Identifier	dev		669019	0					
ANR	669297	Identifier	pos		669019	1					
ANR	669298	MemberAccess	dev . length		669019	1					
ANR	669299	Identifier	dev		669019	0					
ANR	669300	Identifier	length		669019	1					
ANR	669301	CompoundStatement		64:30:1265:1265	669019	1					
ANR	669302	IfStatement	if ( dev . length + dev . allocsz < dev . length )		669019	0					
ANR	669303	Condition	dev . length + dev . allocsz < dev . length	90:8:1713:1749	669019	0	True				
ANR	669304	RelationalExpression	dev . length + dev . allocsz < dev . length		669019	0		<			
ANR	669305	AdditiveExpression	dev . length + dev . allocsz		669019	0		+			
ANR	669306	MemberAccess	dev . length		669019	0					
ANR	669307	Identifier	dev		669019	0					
ANR	669308	Identifier	length		669019	1					
ANR	669309	MemberAccess	dev . allocsz		669019	1					
ANR	669310	Identifier	dev		669019	0					
ANR	669311	Identifier	allocsz		669019	1					
ANR	669312	MemberAccess	dev . length		669019	1					
ANR	669313	Identifier	dev		669019	0					
ANR	669314	Identifier	length		669019	1					
ANR	669315	CompoundStatement		65:47:1314:1314	669019	1					
ANR	669316	ExpressionStatement	"printf ( ""Unable to allocate memory\\n"" )"	91:5:1759:1796	669019	0	True				
ANR	669317	CallExpression	"printf ( ""Unable to allocate memory\\n"" )"		669019	0					
ANR	669318	Callee	printf		669019	0					
ANR	669319	Identifier	printf		669019	0					
ANR	669320	ArgumentList	"""Unable to allocate memory\\n"""		669019	1					
ANR	669321	Argument	"""Unable to allocate memory\\n"""		669019	0					
ANR	669322	PrimaryExpression	"""Unable to allocate memory\\n"""		669019	0					
ANR	669323	ReturnStatement	return EXIT_FAILURE ;	92:5:1803:1822	669019	1	True				
ANR	669324	Identifier	EXIT_FAILURE		669019	0					
ANR	669325	ExpressionStatement	"mbfl_memory_device_realloc ( & dev , dev . length + dev . allocsz , dev . allocsz )"	95:4:1835:1912	669019	1	True				
ANR	669326	CallExpression	"mbfl_memory_device_realloc ( & dev , dev . length + dev . allocsz , dev . allocsz )"		669019	0					
ANR	669327	Callee	mbfl_memory_device_realloc		669019	0					
ANR	669328	Identifier	mbfl_memory_device_realloc		669019	0					
ANR	669329	ArgumentList	& dev		669019	1					
ANR	669330	Argument	& dev		669019	0					
ANR	669331	UnaryOperationExpression	& dev		669019	0					
ANR	669332	UnaryOperator	&		669019	0					
ANR	669333	Identifier	dev		669019	1					
ANR	669334	Argument	dev . length + dev . allocsz		669019	1					
ANR	669335	AdditiveExpression	dev . length + dev . allocsz		669019	0		+			
ANR	669336	MemberAccess	dev . length		669019	0					
ANR	669337	Identifier	dev		669019	0					
ANR	669338	Identifier	length		669019	1					
ANR	669339	MemberAccess	dev . allocsz		669019	1					
ANR	669340	Identifier	dev		669019	0					
ANR	669341	Identifier	allocsz		669019	1					
ANR	669342	Argument	dev . allocsz		669019	2					
ANR	669343	MemberAccess	dev . allocsz		669019	0					
ANR	669344	Identifier	dev		669019	0					
ANR	669345	Identifier	allocsz		669019	1					
ANR	669346	ExpressionStatement	dev . buffer [ dev . pos ++ ] = ( unsigned char ) c	99:3:1923:1963	669019	3	True				
ANR	669347	AssignmentExpression	dev . buffer [ dev . pos ++ ] = ( unsigned char ) c		669019	0		=			
ANR	669348	ArrayIndexing	dev . buffer [ dev . pos ++ ]		669019	0					
ANR	669349	MemberAccess	dev . buffer		669019	0					
ANR	669350	Identifier	dev		669019	0					
ANR	669351	Identifier	buffer		669019	1					
ANR	669352	PostIncDecOperationExpression	dev . pos ++		669019	1					
ANR	669353	MemberAccess	dev . pos		669019	0					
ANR	669354	Identifier	dev		669019	0					
ANR	669355	Identifier	pos		669019	1					
ANR	669356	IncDec	++		669019	1					
ANR	669357	CastExpression	( unsigned char ) c		669019	1					
ANR	669358	CastTarget	unsigned char		669019	0					
ANR	669359	Identifier	c		669019	1					
ANR	669360	ExpressionStatement	"mbfl_memory_device_result ( & dev , & string )"	102:2:1972:2012	669019	4	True				
ANR	669361	CallExpression	"mbfl_memory_device_result ( & dev , & string )"		669019	0					
ANR	669362	Callee	mbfl_memory_device_result		669019	0					
ANR	669363	Identifier	mbfl_memory_device_result		669019	0					
ANR	669364	ArgumentList	& dev		669019	1					
ANR	669365	Argument	& dev		669019	0					
ANR	669366	UnaryOperationExpression	& dev		669019	0					
ANR	669367	UnaryOperator	&		669019	0					
ANR	669368	Identifier	dev		669019	1					
ANR	669369	Argument	& string		669019	1					
ANR	669370	UnaryOperationExpression	& string		669019	0					
ANR	669371	UnaryOperator	&		669019	0					
ANR	669372	Identifier	string		669019	1					
ANR	669373	IfStatement	"if ( mbfl_strcut ( & string , & result , offset , length ) )"		669019	5					
ANR	669374	Condition	"mbfl_strcut ( & string , & result , offset , length )"	103:6:2020:2064	669019	0	True				
ANR	669375	CallExpression	"mbfl_strcut ( & string , & result , offset , length )"		669019	0					
ANR	669376	Callee	mbfl_strcut		669019	0					
ANR	669377	Identifier	mbfl_strcut		669019	0					
ANR	669378	ArgumentList	& string		669019	1					
ANR	669379	Argument	& string		669019	0					
ANR	669380	UnaryOperationExpression	& string		669019	0					
ANR	669381	UnaryOperator	&		669019	0					
ANR	669382	Identifier	string		669019	1					
ANR	669383	Argument	& result		669019	1					
ANR	669384	UnaryOperationExpression	& result		669019	0					
ANR	669385	UnaryOperator	&		669019	0					
ANR	669386	Identifier	result		669019	1					
ANR	669387	Argument	offset		669019	2					
ANR	669388	Identifier	offset		669019	0					
ANR	669389	Argument	length		669019	3					
ANR	669390	Identifier	length		669019	0					
ANR	669391	CompoundStatement		78:53:1629:1629	669019	1					
ANR	669392	ExpressionStatement	hexdump ( & result )	104:3:2072:2088	669019	0	True				
ANR	669393	CallExpression	hexdump ( & result )		669019	0					
ANR	669394	Callee	hexdump		669019	0					
ANR	669395	Identifier	hexdump		669019	0					
ANR	669396	ArgumentList	& result		669019	1					
ANR	669397	Argument	& result		669019	0					
ANR	669398	UnaryOperationExpression	& result		669019	0					
ANR	669399	UnaryOperator	&		669019	0					
ANR	669400	Identifier	result		669019	1					
ANR	669401	ExpressionStatement	mbfl_string_clear ( & result )	105:3:2093:2119	669019	1	True				
ANR	669402	CallExpression	mbfl_string_clear ( & result )		669019	0					
ANR	669403	Callee	mbfl_string_clear		669019	0					
ANR	669404	Identifier	mbfl_string_clear		669019	0					
ANR	669405	ArgumentList	& result		669019	1					
ANR	669406	Argument	& result		669019	0					
ANR	669407	UnaryOperationExpression	& result		669019	0					
ANR	669408	UnaryOperator	&		669019	0					
ANR	669409	Identifier	result		669019	1					
ANR	669410	ElseStatement	else		669019	0					
ANR	669411	CompoundStatement		81:9:1692:1692	669019	0					
ANR	669412	ExpressionStatement	"printf ( ""***ERROR***\\n"" )"	107:3:2135:2158	669019	0	True				
ANR	669413	CallExpression	"printf ( ""***ERROR***\\n"" )"		669019	0					
ANR	669414	Callee	printf		669019	0					
ANR	669415	Identifier	printf		669019	0					
ANR	669416	ArgumentList	"""***ERROR***\\n"""		669019	1					
ANR	669417	Argument	"""***ERROR***\\n"""		669019	0					
ANR	669418	PrimaryExpression	"""***ERROR***\\n"""		669019	0					
ANR	669419	ExpressionStatement	mbfl_string_clear ( & string )	109:2:2166:2192	669019	6	True				
ANR	669420	CallExpression	mbfl_string_clear ( & string )		669019	0					
ANR	669421	Callee	mbfl_string_clear		669019	0					
ANR	669422	Identifier	mbfl_string_clear		669019	0					
ANR	669423	ArgumentList	& string		669019	1					
ANR	669424	Argument	& string		669019	0					
ANR	669425	UnaryOperationExpression	& string		669019	0					
ANR	669426	UnaryOperator	&		669019	0					
ANR	669427	Identifier	string		669019	1					
ANR	669428	Condition	! final	110:10:2204:2209	669019	1	True				
ANR	669429	UnaryOperationExpression	! final		669019	0					
ANR	669430	UnaryOperator	!		669019	0					
ANR	669431	Identifier	final		669019	1					
ANR	669432	ReturnStatement	return EXIT_SUCCESS ;	112:1:2215:2234	669019	16	True				
ANR	669433	Identifier	EXIT_SUCCESS		669019	0					
ANR	669434	ReturnType	int		669019	1					
ANR	669435	Identifier	main		669019	2					
ANR	669436	ParameterList	"int argc , char * * argv"		669019	3					
ANR	669437	Parameter	int argc	25:9:414:421	669019	0	True				
ANR	669438	ParameterType	int		669019	0					
ANR	669439	Identifier	argc		669019	1					
ANR	669440	Parameter	char * * argv	25:19:424:434	669019	1	True				
ANR	669441	ParameterType	char * *		669019	0					
ANR	669442	Identifier	argv		669019	1					
ANR	669443	CFGEntryNode	ENTRY		669019		True				
ANR	669444	CFGExitNode	EXIT		669019		True				
ANR	669445	InfiniteForNode	true		669019		True				
ANR	669446	Symbol	* dev		669019						
ANR	669447	Symbol	no_language		669019						
ANR	669448	Symbol	& string		669019						
ANR	669449	Symbol	stdin		669019						
ANR	669450	Symbol	string		669019						
ANR	669451	Symbol	* argv		669019						
ANR	669452	Symbol	argv		669019						
ANR	669453	Symbol	no_encoding		669019						
ANR	669454	Symbol	mbfl_no_language_invalid		669019						
ANR	669455	Symbol	result		669019						
ANR	669456	Symbol	mbfl_strcut		669019						
ANR	669457	Symbol	dev . length		669019						
ANR	669458	Symbol	dev		669019						
ANR	669459	Symbol	strtol		669019						
ANR	669460	Symbol	& result		669019						
ANR	669461	Symbol	mbfl_name2no_language		669019						
ANR	669462	Symbol	state		669019						
ANR	669463	Symbol	EOF		669019						
ANR	669464	Symbol	argc		669019						
ANR	669465	Symbol	errno		669019						
ANR	669466	Symbol	NULL		669019						
ANR	669467	Symbol	c		669019						
ANR	669468	Symbol	dev . allocsz		669019						
ANR	669469	Symbol	offset		669019						
ANR	669470	Symbol	length		669019						
ANR	669471	Symbol	stderr		669019						
ANR	669472	Symbol	mbfl_no_encoding_invalid		669019						
ANR	669473	Symbol	dev . pos		669019						
ANR	669474	Symbol	EXIT_FAILURE		669019						
ANR	669475	Symbol	* dev . buffer		669019						
ANR	669476	Symbol	EXIT_SUCCESS		669019						
ANR	669477	Symbol	final		669019						
ANR	669478	Symbol	& dev		669019						
ANR	669479	Symbol	dev . buffer		669019						
ANR	669480	Symbol	mbfl_name2no_encoding		669019						
ANR	669481	Symbol	fgetc		669019						
