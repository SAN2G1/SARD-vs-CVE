command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	679654	File	data/converged/CVE-2017-11142_php-src/ext_mbstring_oniguruma_enc_iso8859_4.c								
ANR	679655	DeclStmt									
ANR	679656	Decl							const UChar	const UChar [ 256 ]	EncISO_8859_4_ToLowerCaseTable
ANR	679657	DeclStmt									
ANR	679658	Decl							const unsigned short	const unsigned short [ 256 ]	EncISO_8859_4_CtypeTable
ANR	679659	DeclStmt									
ANR	679660	Decl							const UChar	const UChar *	p
ANR	679661	Function	is_mbc_ambiguous	125:0:6566:7029							
ANR	679662	FunctionDef	"is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		679661	0					
ANR	679663	CompoundStatement		127:0:6653:7029	679661	0					
ANR	679664	IdentifierDeclStatement	int v ;	128:2:6657:6662	679661	0	True				
ANR	679665	IdentifierDecl	v		679661	0					
ANR	679666	IdentifierDeclType	int		679661	0					
ANR	679667	Identifier	v		679661	1					
ANR	679668	IdentifierDeclStatement	const UChar * p = * pp ;	129:2:6666:6686	679661	1	True				
ANR	679669	IdentifierDecl	* p = * pp		679661	0					
ANR	679670	IdentifierDeclType	const UChar *		679661	0					
ANR	679671	Identifier	p		679661	1					
ANR	679672	AssignmentExpression	* p = * pp		679661	2		=			
ANR	679673	Identifier	p		679661	0					
ANR	679674	UnaryOperationExpression	* pp		679661	1					
ANR	679675	UnaryOperator	*		679661	0					
ANR	679676	Identifier	pp		679661	1					
ANR	679677	IfStatement	if ( * p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0 )		679661	2					
ANR	679678	Condition	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0	131:6:6695:6759	679661	0	True				
ANR	679679	AndExpression	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		679661	0		&&			
ANR	679680	EqualityExpression	* p == 0xdf		679661	0		==			
ANR	679681	UnaryOperationExpression	* p		679661	0					
ANR	679682	UnaryOperator	*		679661	0					
ANR	679683	Identifier	p		679661	1					
ANR	679684	PrimaryExpression	0xdf		679661	1					
ANR	679685	EqualityExpression	( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		679661	1		!=			
ANR	679686	BitAndExpression	flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		679661	0		&			
ANR	679687	Identifier	flag		679661	0					
ANR	679688	Identifier	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		679661	1					
ANR	679689	PrimaryExpression	0		679661	1					
ANR	679690	CompoundStatement		5:73:108:108	679661	1					
ANR	679691	ExpressionStatement	( * pp ) ++	132:4:6768:6775	679661	0	True				
ANR	679692	PostIncDecOperationExpression	( * pp ) ++		679661	0					
ANR	679693	UnaryOperationExpression	* pp		679661	0					
ANR	679694	UnaryOperator	*		679661	0					
ANR	679695	Identifier	pp		679661	1					
ANR	679696	IncDec	++		679661	1					
ANR	679697	ReturnStatement	return TRUE ;	133:4:6781:6792	679661	1	True				
ANR	679698	Identifier	TRUE		679661	0					
ANR	679699	ExpressionStatement	( * pp ) ++	136:2:6801:6808	679661	3	True				
ANR	679700	PostIncDecOperationExpression	( * pp ) ++		679661	0					
ANR	679701	UnaryOperationExpression	* pp		679661	0					
ANR	679702	UnaryOperator	*		679661	0					
ANR	679703	Identifier	pp		679661	1					
ANR	679704	IncDec	++		679661	1					
ANR	679705	ExpressionStatement	v = ( EncISO_8859_4_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )	137:2:6812:6884	679661	4	True				
ANR	679706	AssignmentExpression	v = ( EncISO_8859_4_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )		679661	0		=			
ANR	679707	Identifier	v		679661	0					
ANR	679708	BitAndExpression	EncISO_8859_4_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER )		679661	1		&			
ANR	679709	ArrayIndexing	EncISO_8859_4_CtypeTable [ * p ]		679661	0					
ANR	679710	Identifier	EncISO_8859_4_CtypeTable		679661	0					
ANR	679711	UnaryOperationExpression	* p		679661	1					
ANR	679712	UnaryOperator	*		679661	0					
ANR	679713	Identifier	p		679661	1					
ANR	679714	InclusiveOrExpression	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		679661	1		|			
ANR	679715	Identifier	BIT_CTYPE_UPPER		679661	0					
ANR	679716	Identifier	BIT_CTYPE_LOWER		679661	1					
ANR	679717	IfStatement	if ( ( v | BIT_CTYPE_LOWER ) != 0 )		679661	5					
ANR	679718	Condition	( v | BIT_CTYPE_LOWER ) != 0	138:6:6892:6917	679661	0	True				
ANR	679719	EqualityExpression	( v | BIT_CTYPE_LOWER ) != 0		679661	0		!=			
ANR	679720	InclusiveOrExpression	v | BIT_CTYPE_LOWER		679661	0		|			
ANR	679721	Identifier	v		679661	0					
ANR	679722	Identifier	BIT_CTYPE_LOWER		679661	1					
ANR	679723	PrimaryExpression	0		679661	1					
ANR	679724	CompoundStatement		12:34:266:266	679661	1					
ANR	679725	IfStatement	if ( * p == 0xa2 )		679661	0					
ANR	679726	Condition	* p == 0xa2	139:8:6930:6939	679661	0	True				
ANR	679727	EqualityExpression	* p == 0xa2		679661	0		==			
ANR	679728	UnaryOperationExpression	* p		679661	0					
ANR	679729	UnaryOperator	*		679661	0					
ANR	679730	Identifier	p		679661	1					
ANR	679731	PrimaryExpression	0xa2		679661	1					
ANR	679732	ReturnStatement	return FALSE ;	140:6:6948:6960	679661	1	True				
ANR	679733	Identifier	FALSE		679661	0					
ANR	679734	ElseStatement	else		679661	0					
ANR	679735	ReturnStatement	return TRUE ;	142:6:6977:6988	679661	0	True				
ANR	679736	Identifier	TRUE		679661	0					
ANR	679737	ReturnStatement	return ( v != 0 ? TRUE : FALSE ) ;	145:2:6997:7027	679661	6	True				
ANR	679738	ConditionalExpression	v != 0 ? TRUE : FALSE		679661	0					
ANR	679739	Condition	v != 0		679661	0					
ANR	679740	EqualityExpression	v != 0		679661	0		!=			
ANR	679741	Identifier	v		679661	0					
ANR	679742	PrimaryExpression	0		679661	1					
ANR	679743	Identifier	TRUE		679661	1					
ANR	679744	Identifier	FALSE		679661	2					
ANR	679745	ReturnType	static int		679661	1					
ANR	679746	Identifier	is_mbc_ambiguous		679661	2					
ANR	679747	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		679661	3					
ANR	679748	Parameter	OnigCaseFoldType flag	126:17:6594:6614	679661	0	True				
ANR	679749	ParameterType	OnigCaseFoldType		679661	0					
ANR	679750	Identifier	flag		679661	1					
ANR	679751	Parameter	const UChar * * pp	126:40:6617:6632	679661	1	True				
ANR	679752	ParameterType	const UChar * *		679661	0					
ANR	679753	Identifier	pp		679661	1					
ANR	679754	Parameter	const UChar * end	126:58:6635:6650	679661	2	True				
ANR	679755	ParameterType	const UChar *		679661	0					
ANR	679756	Identifier	end		679661	1					
ANR	679757	CFGEntryNode	ENTRY		679661		True				
ANR	679758	CFGExitNode	EXIT		679661		True				
ANR	679759	Symbol	pp		679661						
ANR	679760	Symbol	flag		679661						
ANR	679761	Symbol	* pp		679661						
ANR	679762	Symbol	TRUE		679661						
ANR	679763	Symbol	p		679661						
ANR	679764	Symbol	v		679661						
ANR	679765	Symbol	* EncISO_8859_4_CtypeTable		679661						
ANR	679766	Symbol	BIT_CTYPE_LOWER		679661						
ANR	679767	Symbol	end		679661						
ANR	679768	Symbol	* p		679661						
ANR	679769	Symbol	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		679661						
ANR	679770	Symbol	BIT_CTYPE_UPPER		679661						
ANR	679771	Symbol	FALSE		679661						
ANR	679772	Symbol	* * p		679661						
ANR	679773	Symbol	EncISO_8859_4_CtypeTable		679661						
ANR	679774	Function	is_code_ctype	149:0:7039:7198							
ANR	679775	FunctionDef	"is_code_ctype (OnigCodePoint code , unsigned int ctype)"		679774	0					
ANR	679776	CompoundStatement		151:0:7104:7198	679774	0					
ANR	679777	IfStatement	if ( code < 256 )		679774	0					
ANR	679778	Condition	code < 256	152:6:7112:7121	679774	0	True				
ANR	679779	RelationalExpression	code < 256		679774	0		<			
ANR	679780	Identifier	code		679774	0					
ANR	679781	PrimaryExpression	256		679774	1					
ANR	679782	ReturnStatement	"return ENC_IS_ISO_8859_4_CTYPE ( code , ctype ) ;"	153:4:7128:7171	679774	1	True				
ANR	679783	CallExpression	"ENC_IS_ISO_8859_4_CTYPE ( code , ctype )"		679774	0					
ANR	679784	Callee	ENC_IS_ISO_8859_4_CTYPE		679774	0					
ANR	679785	Identifier	ENC_IS_ISO_8859_4_CTYPE		679774	0					
ANR	679786	ArgumentList	code		679774	1					
ANR	679787	Argument	code		679774	0					
ANR	679788	Identifier	code		679774	0					
ANR	679789	Argument	ctype		679774	1					
ANR	679790	Identifier	ctype		679774	0					
ANR	679791	ElseStatement	else		679774	0					
ANR	679792	ReturnStatement	return FALSE ;	155:4:7184:7196	679774	0	True				
ANR	679793	Identifier	FALSE		679774	0					
ANR	679794	ReturnType	static int		679774	1					
ANR	679795	Identifier	is_code_ctype		679774	2					
ANR	679796	ParameterList	"OnigCodePoint code , unsigned int ctype"		679774	3					
ANR	679797	Parameter	OnigCodePoint code	150:14:7064:7081	679774	0	True				
ANR	679798	ParameterType	OnigCodePoint		679774	0					
ANR	679799	Identifier	code		679774	1					
ANR	679800	Parameter	unsigned int ctype	150:34:7084:7101	679774	1	True				
ANR	679801	ParameterType	unsigned int		679774	0					
ANR	679802	Identifier	ctype		679774	1					
ANR	679803	CFGEntryNode	ENTRY		679774		True				
ANR	679804	CFGExitNode	EXIT		679774		True				
ANR	679805	Symbol	code		679774						
ANR	679806	Symbol	ctype		679774						
ANR	679807	Symbol	ENC_IS_ISO_8859_4_CTYPE		679774						
ANR	679808	Symbol	FALSE		679774						
ANR	679809	DeclStmt									
ANR	679810	Decl							const OnigPairCaseFoldCodes	const OnigPairCaseFoldCodes [ ]	CaseFoldMap
ANR	679811	Function	apply_all_case_fold	202:0:7922:8178							
ANR	679812	FunctionDef	"apply_all_case_fold (OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg)"		679811	0					
ANR	679813	CompoundStatement		205:0:8021:8178	679811	0					
ANR	679814	ReturnStatement	"return onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg ) ;"	206:2:8025:8176	679811	0	True				
ANR	679815	CallExpression	"onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg )"		679811	0					
ANR	679816	Callee	onigenc_apply_all_case_fold_with_map		679811	0					
ANR	679817	Identifier	onigenc_apply_all_case_fold_with_map		679811	0					
ANR	679818	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		679811	1					
ANR	679819	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		679811	0					
ANR	679820	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		679811	0		/			
ANR	679821	SizeofExpression	sizeof ( CaseFoldMap )		679811	0					
ANR	679822	Sizeof	sizeof		679811	0					
ANR	679823	SizeofOperand	CaseFoldMap		679811	1					
ANR	679824	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		679811	1					
ANR	679825	Sizeof	sizeof		679811	0					
ANR	679826	SizeofOperand	OnigPairCaseFoldCodes		679811	1					
ANR	679827	Argument	CaseFoldMap		679811	1					
ANR	679828	Identifier	CaseFoldMap		679811	0					
ANR	679829	Argument	1		679811	2					
ANR	679830	PrimaryExpression	1		679811	0					
ANR	679831	Argument	flag		679811	3					
ANR	679832	Identifier	flag		679811	0					
ANR	679833	Argument	f		679811	4					
ANR	679834	Identifier	f		679811	0					
ANR	679835	Argument	arg		679811	5					
ANR	679836	Identifier	arg		679811	0					
ANR	679837	ReturnType	static int		679811	1					
ANR	679838	Identifier	apply_all_case_fold		679811	2					
ANR	679839	ParameterList	"OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg"		679811	3					
ANR	679840	Parameter	OnigCaseFoldType flag	203:20:7953:7973	679811	0	True				
ANR	679841	ParameterType	OnigCaseFoldType		679811	0					
ANR	679842	Identifier	flag		679811	1					
ANR	679843	Parameter	OnigApplyAllCaseFoldFunc f	204:6:7982:8007	679811	1	True				
ANR	679844	ParameterType	OnigApplyAllCaseFoldFunc		679811	0					
ANR	679845	Identifier	f		679811	1					
ANR	679846	Parameter	void * arg	204:34:8010:8018	679811	2	True				
ANR	679847	ParameterType	void *		679811	0					
ANR	679848	Identifier	arg		679811	1					
ANR	679849	CFGEntryNode	ENTRY		679811		True				
ANR	679850	CFGExitNode	EXIT		679811		True				
ANR	679851	Symbol	flag		679811						
ANR	679852	Symbol	f		679811						
ANR	679853	Symbol	arg		679811						
ANR	679854	Symbol	CaseFoldMap		679811						
ANR	679855	Symbol	onigenc_apply_all_case_fold_with_map		679811						
ANR	679856	Function	get_case_fold_codes_by_str	211:0:8181:8475							
ANR	679857	FunctionDef	"get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		679856	0					
ANR	679858	CompoundStatement		214:0:8318:8475	679856	0					
ANR	679859	ReturnStatement	"return onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items ) ;"	215:2:8322:8473	679856	0	True				
ANR	679860	CallExpression	"onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items )"		679856	0					
ANR	679861	Callee	onigenc_get_case_fold_codes_by_str_with_map		679856	0					
ANR	679862	Identifier	onigenc_get_case_fold_codes_by_str_with_map		679856	0					
ANR	679863	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		679856	1					
ANR	679864	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		679856	0					
ANR	679865	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		679856	0		/			
ANR	679866	SizeofExpression	sizeof ( CaseFoldMap )		679856	0					
ANR	679867	Sizeof	sizeof		679856	0					
ANR	679868	SizeofOperand	CaseFoldMap		679856	1					
ANR	679869	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		679856	1					
ANR	679870	Sizeof	sizeof		679856	0					
ANR	679871	SizeofOperand	OnigPairCaseFoldCodes		679856	1					
ANR	679872	Argument	CaseFoldMap		679856	1					
ANR	679873	Identifier	CaseFoldMap		679856	0					
ANR	679874	Argument	1		679856	2					
ANR	679875	PrimaryExpression	1		679856	0					
ANR	679876	Argument	flag		679856	3					
ANR	679877	Identifier	flag		679856	0					
ANR	679878	Argument	p		679856	4					
ANR	679879	Identifier	p		679856	0					
ANR	679880	Argument	end		679856	5					
ANR	679881	Identifier	end		679856	0					
ANR	679882	Argument	items		679856	6					
ANR	679883	Identifier	items		679856	0					
ANR	679884	ReturnType	static int		679856	1					
ANR	679885	Identifier	get_case_fold_codes_by_str		679856	2					
ANR	679886	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		679856	3					
ANR	679887	Parameter	OnigCaseFoldType flag	212:27:8219:8239	679856	0	True				
ANR	679888	ParameterType	OnigCaseFoldType		679856	0					
ANR	679889	Identifier	flag		679856	1					
ANR	679890	Parameter	const OnigUChar * p	213:4:8246:8263	679856	1	True				
ANR	679891	ParameterType	const OnigUChar *		679856	0					
ANR	679892	Identifier	p		679856	1					
ANR	679893	Parameter	const OnigUChar * end	213:24:8266:8285	679856	2	True				
ANR	679894	ParameterType	const OnigUChar *		679856	0					
ANR	679895	Identifier	end		679856	1					
ANR	679896	Parameter	OnigCaseFoldCodeItem items [ ]	213:46:8288:8315	679856	3	True				
ANR	679897	ParameterType	OnigCaseFoldCodeItem [ ]		679856	0					
ANR	679898	Identifier	items		679856	1					
ANR	679899	CFGEntryNode	ENTRY		679856		True				
ANR	679900	CFGExitNode	EXIT		679856		True				
ANR	679901	Symbol	p		679856						
ANR	679902	Symbol	flag		679856						
ANR	679903	Symbol	end		679856						
ANR	679904	Symbol	CaseFoldMap		679856						
ANR	679905	Symbol	onigenc_get_case_fold_codes_by_str_with_map		679856						
ANR	679906	Symbol	items		679856						
ANR	679907	DeclStmt									
ANR	679908	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingISO_8859_4
