command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	669902	File	data/converged/CVE-2017-11142_php-src/ext_mbstring_mbstring.c								
ANR	669903	DeclStmt									
ANR	669904	Decl							void	void ( TSRMLS_D )	php_mb_populate_current_detect_order_list
ANR	669905	DeclStmt									
ANR	669906	Decl							int	int ( TSRMLS_D )	php_mb_encoding_translation
ANR	669907	ClassDef	_php_mb_nls_ident_list	111:8:3345:3484							
ANR	669908	DeclStmt									
ANR	669909	Decl							enum mbfl_no_language	enum mbfl_no_language	lang
ANR	669910	DeclStmt									
ANR	669911	Decl							const enum mbfl_no_encoding	const enum mbfl_no_encoding *	list
ANR	669912	DeclStmt									
ANR	669913	Decl							size_t	size_t	list_size
ANR	669914	DeclStmt									
ANR	669915	Decl							_php_mb_nls_ident_list	_php_mb_nls_ident_list	php_mb_nls_ident_list
ANR	669916	DeclStmt									
ANR	669917	Decl							const enum mbfl_no_encoding	const enum mbfl_no_encoding [ ]	php_mb_default_identify_list_ja
ANR	669918	DeclStmt									
ANR	669919	Decl							const enum mbfl_no_encoding	const enum mbfl_no_encoding [ ]	php_mb_default_identify_list_cn
ANR	669920	DeclStmt									
ANR	669921	Decl							const enum mbfl_no_encoding	const enum mbfl_no_encoding [ ]	php_mb_default_identify_list_tw_hk
ANR	669922	DeclStmt									
ANR	669923	Decl							const enum mbfl_no_encoding	const enum mbfl_no_encoding [ ]	php_mb_default_identify_list_kr
ANR	669924	DeclStmt									
ANR	669925	Decl							const enum mbfl_no_encoding	const enum mbfl_no_encoding [ ]	php_mb_default_identify_list_ru
ANR	669926	DeclStmt									
ANR	669927	Decl							const enum mbfl_no_encoding	const enum mbfl_no_encoding [ ]	php_mb_default_identify_list_hy
ANR	669928	DeclStmt									
ANR	669929	Decl							const enum mbfl_no_encoding	const enum mbfl_no_encoding [ ]	php_mb_default_identify_list_tr
ANR	669930	DeclStmt									
ANR	669931	Decl							const enum mbfl_no_encoding	const enum mbfl_no_encoding [ ]	php_mb_default_identify_list_ua
ANR	669932	DeclStmt									
ANR	669933	Decl							const enum mbfl_no_encoding	const enum mbfl_no_encoding [ ]	php_mb_default_identify_list_neut
ANR	669934	DeclStmt									
ANR	669935	Decl							const php_mb_nls_ident_list	const php_mb_nls_ident_list [ ]	php_mb_default_identify_list
ANR	669936	DeclStmt									
ANR	669937	Decl							const struct mb_overload_def	const struct mb_overload_def [ ]	mb_ovld
ANR	669938	DeclStmt									
ANR	669939	Decl							const zend_function_entry	const zend_function_entry [ ]	mbstring_functions
ANR	669940	DeclStmt									
ANR	669941	Decl							zend_module_entry	zend_module_entry	mbstring_module_entry
ANR	669942	DeclStmt									
ANR	669943	Decl							sapi_post_entry	sapi_post_entry [ ]	php_post_entries
ANR	669944	Function	_php_mb_allocators_malloc	633:0:19600:19679							
ANR	669945	FunctionDef	_php_mb_allocators_malloc (unsigned int sz)		669944	0					
ANR	669946	CompoundStatement		634:0:19656:19679	669944	0					
ANR	669947	ReturnStatement	return emalloc ( sz ) ;	635:1:19659:19677	669944	0	True				
ANR	669948	CallExpression	emalloc ( sz )		669944	0					
ANR	669949	Callee	emalloc		669944	0					
ANR	669950	Identifier	emalloc		669944	0					
ANR	669951	ArgumentList	sz		669944	1					
ANR	669952	Argument	sz		669944	0					
ANR	669953	Identifier	sz		669944	0					
ANR	669954	ReturnType	static void *		669944	1					
ANR	669955	Identifier	_php_mb_allocators_malloc		669944	2					
ANR	669956	ParameterList	unsigned int sz		669944	3					
ANR	669957	Parameter	unsigned int sz	633:39:19639:19653	669944	0	True				
ANR	669958	ParameterType	unsigned int		669944	0					
ANR	669959	Identifier	sz		669944	1					
ANR	669960	CFGEntryNode	ENTRY		669944		True				
ANR	669961	CFGExitNode	EXIT		669944		True				
ANR	669962	Symbol	emalloc		669944						
ANR	669963	Symbol	sz		669944						
ANR	669964	Function	_php_mb_allocators_realloc	638:0:19682:19779							
ANR	669965	FunctionDef	"_php_mb_allocators_realloc (void * ptr , unsigned int sz)"		669964	0					
ANR	669966	CompoundStatement		639:0:19750:19779	669964	0					
ANR	669967	ReturnStatement	"return erealloc ( ptr , sz ) ;"	640:1:19753:19777	669964	0	True				
ANR	669968	CallExpression	"erealloc ( ptr , sz )"		669964	0					
ANR	669969	Callee	erealloc		669964	0					
ANR	669970	Identifier	erealloc		669964	0					
ANR	669971	ArgumentList	ptr		669964	1					
ANR	669972	Argument	ptr		669964	0					
ANR	669973	Identifier	ptr		669964	0					
ANR	669974	Argument	sz		669964	1					
ANR	669975	Identifier	sz		669964	0					
ANR	669976	ReturnType	static void *		669964	1					
ANR	669977	Identifier	_php_mb_allocators_realloc		669964	2					
ANR	669978	ParameterList	"void * ptr , unsigned int sz"		669964	3					
ANR	669979	Parameter	void * ptr	638:40:19722:19730	669964	0	True				
ANR	669980	ParameterType	void *		669964	0					
ANR	669981	Identifier	ptr		669964	1					
ANR	669982	Parameter	unsigned int sz	638:51:19733:19747	669964	1	True				
ANR	669983	ParameterType	unsigned int		669964	0					
ANR	669984	Identifier	sz		669964	1					
ANR	669985	CFGEntryNode	ENTRY		669964		True				
ANR	669986	CFGExitNode	EXIT		669964		True				
ANR	669987	Symbol	sz		669964						
ANR	669988	Symbol	erealloc		669964						
ANR	669989	Symbol	ptr		669964						
ANR	669990	Function	_php_mb_allocators_calloc	643:0:19782:19898							
ANR	669991	FunctionDef	"_php_mb_allocators_calloc (unsigned int nelems , unsigned int szelem)"		669990	0					
ANR	669992	CompoundStatement		644:0:19863:19898	669990	0					
ANR	669993	ReturnStatement	"return ecalloc ( nelems , szelem ) ;"	645:1:19866:19896	669990	0	True				
ANR	669994	CallExpression	"ecalloc ( nelems , szelem )"		669990	0					
ANR	669995	Callee	ecalloc		669990	0					
ANR	669996	Identifier	ecalloc		669990	0					
ANR	669997	ArgumentList	nelems		669990	1					
ANR	669998	Argument	nelems		669990	0					
ANR	669999	Identifier	nelems		669990	0					
ANR	670000	Argument	szelem		669990	1					
ANR	670001	Identifier	szelem		669990	0					
ANR	670002	ReturnType	static void *		669990	1					
ANR	670003	Identifier	_php_mb_allocators_calloc		669990	2					
ANR	670004	ParameterList	"unsigned int nelems , unsigned int szelem"		669990	3					
ANR	670005	Parameter	unsigned int nelems	643:39:19821:19839	669990	0	True				
ANR	670006	ParameterType	unsigned int		669990	0					
ANR	670007	Identifier	nelems		669990	1					
ANR	670008	Parameter	unsigned int szelem	643:60:19842:19860	669990	1	True				
ANR	670009	ParameterType	unsigned int		669990	0					
ANR	670010	Identifier	szelem		669990	1					
ANR	670011	CFGEntryNode	ENTRY		669990		True				
ANR	670012	CFGExitNode	EXIT		669990		True				
ANR	670013	Symbol	nelems		669990						
ANR	670014	Symbol	szelem		669990						
ANR	670015	Symbol	ecalloc		669990						
ANR	670016	Function	_php_mb_allocators_free	648:0:19901:19963							
ANR	670017	FunctionDef	_php_mb_allocators_free (void * ptr)		670016	0					
ANR	670018	CompoundStatement		649:0:19948:19963	670016	0					
ANR	670019	ExpressionStatement	efree ( ptr )	650:1:19951:19961	670016	0	True				
ANR	670020	CallExpression	efree ( ptr )		670016	0					
ANR	670021	Callee	efree		670016	0					
ANR	670022	Identifier	efree		670016	0					
ANR	670023	ArgumentList	ptr		670016	1					
ANR	670024	Argument	ptr		670016	0					
ANR	670025	Identifier	ptr		670016	0					
ANR	670026	ReturnType	static void		670016	1					
ANR	670027	Identifier	_php_mb_allocators_free		670016	2					
ANR	670028	ParameterList	void * ptr		670016	3					
ANR	670029	Parameter	void * ptr	648:36:19937:19945	670016	0	True				
ANR	670030	ParameterType	void *		670016	0					
ANR	670031	Identifier	ptr		670016	1					
ANR	670032	CFGEntryNode	ENTRY		670016		True				
ANR	670033	CFGExitNode	EXIT		670016		True				
ANR	670034	Symbol	ptr		670016						
ANR	670035	Function	_php_mb_allocators_pmalloc	653:0:19966:20050							
ANR	670036	FunctionDef	_php_mb_allocators_pmalloc (unsigned int sz)		670035	0					
ANR	670037	CompoundStatement		654:0:20023:20050	670035	0					
ANR	670038	ReturnStatement	"return pemalloc ( sz , 1 ) ;"	655:1:20026:20048	670035	0	True				
ANR	670039	CallExpression	"pemalloc ( sz , 1 )"		670035	0					
ANR	670040	Callee	pemalloc		670035	0					
ANR	670041	Identifier	pemalloc		670035	0					
ANR	670042	ArgumentList	sz		670035	1					
ANR	670043	Argument	sz		670035	0					
ANR	670044	Identifier	sz		670035	0					
ANR	670045	Argument	1		670035	1					
ANR	670046	PrimaryExpression	1		670035	0					
ANR	670047	ReturnType	static void *		670035	1					
ANR	670048	Identifier	_php_mb_allocators_pmalloc		670035	2					
ANR	670049	ParameterList	unsigned int sz		670035	3					
ANR	670050	Parameter	unsigned int sz	653:40:20006:20020	670035	0	True				
ANR	670051	ParameterType	unsigned int		670035	0					
ANR	670052	Identifier	sz		670035	1					
ANR	670053	CFGEntryNode	ENTRY		670035		True				
ANR	670054	CFGExitNode	EXIT		670035		True				
ANR	670055	Symbol	sz		670035						
ANR	670056	Symbol	pemalloc		670035						
ANR	670057	Function	_php_mb_allocators_prealloc	658:0:20053:20155							
ANR	670058	FunctionDef	"_php_mb_allocators_prealloc (void * ptr , unsigned int sz)"		670057	0					
ANR	670059	CompoundStatement		659:0:20122:20155	670057	0					
ANR	670060	ReturnStatement	"return perealloc ( ptr , sz , 1 ) ;"	660:1:20125:20153	670057	0	True				
ANR	670061	CallExpression	"perealloc ( ptr , sz , 1 )"		670057	0					
ANR	670062	Callee	perealloc		670057	0					
ANR	670063	Identifier	perealloc		670057	0					
ANR	670064	ArgumentList	ptr		670057	1					
ANR	670065	Argument	ptr		670057	0					
ANR	670066	Identifier	ptr		670057	0					
ANR	670067	Argument	sz		670057	1					
ANR	670068	Identifier	sz		670057	0					
ANR	670069	Argument	1		670057	2					
ANR	670070	PrimaryExpression	1		670057	0					
ANR	670071	ReturnType	static void *		670057	1					
ANR	670072	Identifier	_php_mb_allocators_prealloc		670057	2					
ANR	670073	ParameterList	"void * ptr , unsigned int sz"		670057	3					
ANR	670074	Parameter	void * ptr	658:41:20094:20102	670057	0	True				
ANR	670075	ParameterType	void *		670057	0					
ANR	670076	Identifier	ptr		670057	1					
ANR	670077	Parameter	unsigned int sz	658:52:20105:20119	670057	1	True				
ANR	670078	ParameterType	unsigned int		670057	0					
ANR	670079	Identifier	sz		670057	1					
ANR	670080	CFGEntryNode	ENTRY		670057		True				
ANR	670081	CFGExitNode	EXIT		670057		True				
ANR	670082	Symbol	sz		670057						
ANR	670083	Symbol	perealloc		670057						
ANR	670084	Symbol	ptr		670057						
ANR	670085	Function	_php_mb_allocators_pfree	663:0:20158:20225							
ANR	670086	FunctionDef	_php_mb_allocators_pfree (void * ptr)		670085	0					
ANR	670087	CompoundStatement		664:0:20206:20225	670085	0					
ANR	670088	ExpressionStatement	"pefree ( ptr , 1 )"	665:1:20209:20223	670085	0	True				
ANR	670089	CallExpression	"pefree ( ptr , 1 )"		670085	0					
ANR	670090	Callee	pefree		670085	0					
ANR	670091	Identifier	pefree		670085	0					
ANR	670092	ArgumentList	ptr		670085	1					
ANR	670093	Argument	ptr		670085	0					
ANR	670094	Identifier	ptr		670085	0					
ANR	670095	Argument	1		670085	1					
ANR	670096	PrimaryExpression	1		670085	0					
ANR	670097	ReturnType	static void		670085	1					
ANR	670098	Identifier	_php_mb_allocators_pfree		670085	2					
ANR	670099	ParameterList	void * ptr		670085	3					
ANR	670100	Parameter	void * ptr	663:37:20195:20203	670085	0	True				
ANR	670101	ParameterType	void *		670085	0					
ANR	670102	Identifier	ptr		670085	1					
ANR	670103	CFGEntryNode	ENTRY		670085		True				
ANR	670104	CFGExitNode	EXIT		670085		True				
ANR	670105	Symbol	ptr		670085						
ANR	670106	DeclStmt									
ANR	670107	Decl							mbfl_allocators	mbfl_allocators	_php_mb_allocators
ANR	670108	DeclStmt									
ANR	670109	Decl							sapi_post_entry	sapi_post_entry [ ]	mbstr_post_entries
ANR	670110	Function	php_mb_parse_encoding_list	692:0:21083:23655							
ANR	670111	FunctionDef	"php_mb_parse_encoding_list (const char * value , size_t value_length , const mbfl_encoding * * * return_list , size_t * return_size , int persistent TSRMLS_DC)"		670110	0					
ANR	670112	CompoundStatement		694:0:21244:23655	670110	0					
ANR	670113	IdentifierDeclStatement	"int size , bauto , ret = SUCCESS ;"	695:1:21247:21277	670110	0	True				
ANR	670114	IdentifierDecl	size		670110	0					
ANR	670115	IdentifierDeclType	int		670110	0					
ANR	670116	Identifier	size		670110	1					
ANR	670117	IdentifierDecl	bauto		670110	1					
ANR	670118	IdentifierDeclType	int		670110	0					
ANR	670119	Identifier	bauto		670110	1					
ANR	670120	IdentifierDecl	ret = SUCCESS		670110	2					
ANR	670121	IdentifierDeclType	int		670110	0					
ANR	670122	Identifier	ret		670110	1					
ANR	670123	AssignmentExpression	ret = SUCCESS		670110	2		=			
ANR	670124	Identifier	SUCCESS		670110	0					
ANR	670125	Identifier	SUCCESS		670110	1					
ANR	670126	IdentifierDeclStatement	size_t n ;	696:1:21280:21288	670110	1	True				
ANR	670127	IdentifierDecl	n		670110	0					
ANR	670128	IdentifierDeclType	size_t		670110	0					
ANR	670129	Identifier	n		670110	1					
ANR	670130	IdentifierDeclStatement	"char * p , * p1 , * p2 , * endp , * tmpstr ;"	697:1:21291:21324	670110	2	True				
ANR	670131	IdentifierDecl	* p		670110	0					
ANR	670132	IdentifierDeclType	char *		670110	0					
ANR	670133	Identifier	p		670110	1					
ANR	670134	IdentifierDecl	* p1		670110	1					
ANR	670135	IdentifierDeclType	char *		670110	0					
ANR	670136	Identifier	p1		670110	1					
ANR	670137	IdentifierDecl	* p2		670110	2					
ANR	670138	IdentifierDeclType	char *		670110	0					
ANR	670139	Identifier	p2		670110	1					
ANR	670140	IdentifierDecl	* endp		670110	3					
ANR	670141	IdentifierDeclType	char *		670110	0					
ANR	670142	Identifier	endp		670110	1					
ANR	670143	IdentifierDecl	* tmpstr		670110	4					
ANR	670144	IdentifierDeclType	char *		670110	0					
ANR	670145	Identifier	tmpstr		670110	1					
ANR	670146	IdentifierDeclStatement	"const mbfl_encoding * * entry , * * list ;"	698:1:21327:21362	670110	3	True				
ANR	670147	IdentifierDecl	* * entry		670110	0					
ANR	670148	IdentifierDeclType	const mbfl_encoding * *		670110	0					
ANR	670149	Identifier	entry		670110	1					
ANR	670150	IdentifierDecl	* * list		670110	1					
ANR	670151	IdentifierDeclType	const mbfl_encoding * *		670110	0					
ANR	670152	Identifier	list		670110	1					
ANR	670153	ExpressionStatement	list = NULL	700:1:21366:21377	670110	4	True				
ANR	670154	AssignmentExpression	list = NULL		670110	0		=			
ANR	670155	Identifier	list		670110	0					
ANR	670156	Identifier	NULL		670110	1					
ANR	670157	IfStatement	if ( value == NULL || value_length <= 0 )		670110	5					
ANR	670158	Condition	value == NULL || value_length <= 0	701:5:21384:21417	670110	0	True				
ANR	670159	OrExpression	value == NULL || value_length <= 0		670110	0		||			
ANR	670160	EqualityExpression	value == NULL		670110	0		==			
ANR	670161	Identifier	value		670110	0					
ANR	670162	Identifier	NULL		670110	1					
ANR	670163	RelationalExpression	value_length <= 0		670110	1		<=			
ANR	670164	Identifier	value_length		670110	0					
ANR	670165	PrimaryExpression	0		670110	1					
ANR	670166	CompoundStatement		8:41:175:175	670110	1					
ANR	670167	IfStatement	if ( return_list )		670110	0					
ANR	670168	Condition	return_list	702:6:21428:21438	670110	0	True				
ANR	670169	Identifier	return_list		670110	0					
ANR	670170	CompoundStatement		9:19:196:196	670110	1					
ANR	670171	ExpressionStatement	* return_list = NULL	703:3:21446:21465	670110	0	True				
ANR	670172	AssignmentExpression	* return_list = NULL		670110	0		=			
ANR	670173	UnaryOperationExpression	* return_list		670110	0					
ANR	670174	UnaryOperator	*		670110	0					
ANR	670175	Identifier	return_list		670110	1					
ANR	670176	Identifier	NULL		670110	1					
ANR	670177	IfStatement	if ( return_size )		670110	1					
ANR	670178	Condition	return_size	705:6:21477:21487	670110	0	True				
ANR	670179	Identifier	return_size		670110	0					
ANR	670180	CompoundStatement		12:19:245:245	670110	1					
ANR	670181	ExpressionStatement	* return_size = 0	706:3:21495:21511	670110	0	True				
ANR	670182	AssignmentExpression	* return_size = 0		670110	0		=			
ANR	670183	UnaryOperationExpression	* return_size		670110	0					
ANR	670184	UnaryOperator	*		670110	0					
ANR	670185	Identifier	return_size		670110	1					
ANR	670186	PrimaryExpression	0		670110	1					
ANR	670187	ReturnStatement	return FAILURE ;	708:2:21519:21533	670110	2	True				
ANR	670188	Identifier	FAILURE		670110	0					
ANR	670189	ElseStatement	else		670110	0					
ANR	670190	CompoundStatement		16:8:298:298	670110	0					
ANR	670191	IfStatement	"if ( value [ 0 ] == '""' && value [ value_length - 1 ] == '""' && value_length > 2 )"		670110	0					
ANR	670192	Condition	"value [ 0 ] == '""' && value [ value_length - 1 ] == '""' && value_length > 2"	711:6:21590:21650	670110	0	True				
ANR	670193	AndExpression	"value [ 0 ] == '""' && value [ value_length - 1 ] == '""' && value_length > 2"		670110	0		&&			
ANR	670194	EqualityExpression	"value [ 0 ] == '""'"		670110	0		==			
ANR	670195	ArrayIndexing	value [ 0 ]		670110	0					
ANR	670196	Identifier	value		670110	0					
ANR	670197	PrimaryExpression	0		670110	1					
ANR	670198	PrimaryExpression	"'""'"		670110	1					
ANR	670199	AndExpression	"value [ value_length - 1 ] == '""' && value_length > 2"		670110	1		&&			
ANR	670200	EqualityExpression	"value [ value_length - 1 ] == '""'"		670110	0		==			
ANR	670201	ArrayIndexing	value [ value_length - 1 ]		670110	0					
ANR	670202	Identifier	value		670110	0					
ANR	670203	AdditiveExpression	value_length - 1		670110	1		-			
ANR	670204	Identifier	value_length		670110	0					
ANR	670205	PrimaryExpression	1		670110	1					
ANR	670206	PrimaryExpression	"'""'"		670110	1					
ANR	670207	RelationalExpression	value_length > 2		670110	1		>			
ANR	670208	Identifier	value_length		670110	0					
ANR	670209	PrimaryExpression	2		670110	1					
ANR	670210	CompoundStatement		18:69:408:408	670110	1					
ANR	670211	ExpressionStatement	"tmpstr = ( char * ) estrndup ( value + 1 , value_length - 2 )"	712:3:21658:21708	670110	0	True				
ANR	670212	AssignmentExpression	"tmpstr = ( char * ) estrndup ( value + 1 , value_length - 2 )"		670110	0		=			
ANR	670213	Identifier	tmpstr		670110	0					
ANR	670214	CastExpression	"( char * ) estrndup ( value + 1 , value_length - 2 )"		670110	1					
ANR	670215	CastTarget	char *		670110	0					
ANR	670216	CallExpression	"estrndup ( value + 1 , value_length - 2 )"		670110	1					
ANR	670217	Callee	estrndup		670110	0					
ANR	670218	Identifier	estrndup		670110	0					
ANR	670219	ArgumentList	value + 1		670110	1					
ANR	670220	Argument	value + 1		670110	0					
ANR	670221	AdditiveExpression	value + 1		670110	0		+			
ANR	670222	Identifier	value		670110	0					
ANR	670223	PrimaryExpression	1		670110	1					
ANR	670224	Argument	value_length - 2		670110	1					
ANR	670225	AdditiveExpression	value_length - 2		670110	0		-			
ANR	670226	Identifier	value_length		670110	0					
ANR	670227	PrimaryExpression	2		670110	1					
ANR	670228	ExpressionStatement	value_length -= 2	713:3:21713:21730	670110	1	True				
ANR	670229	AssignmentExpression	value_length -= 2		670110	0		-=			
ANR	670230	Identifier	value_length		670110	0					
ANR	670231	PrimaryExpression	2		670110	1					
ANR	670232	ElseStatement	else		670110	0					
ANR	670233	ExpressionStatement	"tmpstr = ( char * ) estrndup ( value , value_length )"	716:3:21746:21792	670110	0	True				
ANR	670234	AssignmentExpression	"tmpstr = ( char * ) estrndup ( value , value_length )"		670110	0		=			
ANR	670235	Identifier	tmpstr		670110	0					
ANR	670236	CastExpression	"( char * ) estrndup ( value , value_length )"		670110	1					
ANR	670237	CastTarget	char *		670110	0					
ANR	670238	CallExpression	"estrndup ( value , value_length )"		670110	1					
ANR	670239	Callee	estrndup		670110	0					
ANR	670240	Identifier	estrndup		670110	0					
ANR	670241	ArgumentList	value		670110	1					
ANR	670242	Argument	value		670110	0					
ANR	670243	Identifier	value		670110	0					
ANR	670244	Argument	value_length		670110	1					
ANR	670245	Identifier	value_length		670110	0					
ANR	670246	IfStatement	if ( tmpstr == NULL )		670110	1					
ANR	670247	Condition	tmpstr == NULL	717:6:21800:21813	670110	0	True				
ANR	670248	EqualityExpression	tmpstr == NULL		670110	0		==			
ANR	670249	Identifier	tmpstr		670110	0					
ANR	670250	Identifier	NULL		670110	1					
ANR	670251	CompoundStatement		24:22:571:571	670110	1					
ANR	670252	ReturnStatement	return FAILURE ;	718:3:21821:21835	670110	0	True				
ANR	670253	Identifier	FAILURE		670110	0					
ANR	670254	ExpressionStatement	endp = tmpstr + value_length	721:2:21893:21921	670110	2	True				
ANR	670255	AssignmentExpression	endp = tmpstr + value_length		670110	0		=			
ANR	670256	Identifier	endp		670110	0					
ANR	670257	AdditiveExpression	tmpstr + value_length		670110	1		+			
ANR	670258	Identifier	tmpstr		670110	0					
ANR	670259	Identifier	value_length		670110	1					
ANR	670260	ExpressionStatement	n = 1	722:2:21925:21930	670110	3	True				
ANR	670261	AssignmentExpression	n = 1		670110	0		=			
ANR	670262	Identifier	n		670110	0					
ANR	670263	PrimaryExpression	1		670110	1					
ANR	670264	ExpressionStatement	p1 = tmpstr	723:2:21934:21945	670110	4	True				
ANR	670265	AssignmentExpression	p1 = tmpstr		670110	0		=			
ANR	670266	Identifier	p1		670110	0					
ANR	670267	Identifier	tmpstr		670110	1					
ANR	670268	WhileStatement	"while ( ( p2 = php_memnstr ( p1 , "","" , 1 , endp ) ) != NULL )"		670110	5					
ANR	670269	Condition	"( p2 = php_memnstr ( p1 , "","" , 1 , endp ) ) != NULL"	724:9:21956:21999	670110	0	True				
ANR	670270	EqualityExpression	"( p2 = php_memnstr ( p1 , "","" , 1 , endp ) ) != NULL"		670110	0		!=			
ANR	670271	AssignmentExpression	"p2 = php_memnstr ( p1 , "","" , 1 , endp )"		670110	0		=			
ANR	670272	Identifier	p2		670110	0					
ANR	670273	CallExpression	"php_memnstr ( p1 , "","" , 1 , endp )"		670110	1					
ANR	670274	Callee	php_memnstr		670110	0					
ANR	670275	Identifier	php_memnstr		670110	0					
ANR	670276	ArgumentList	p1		670110	1					
ANR	670277	Argument	p1		670110	0					
ANR	670278	Identifier	p1		670110	0					
ANR	670279	Argument	""","""		670110	1					
ANR	670280	PrimaryExpression	""","""		670110	0					
ANR	670281	Argument	1		670110	2					
ANR	670282	PrimaryExpression	1		670110	0					
ANR	670283	Argument	endp		670110	3					
ANR	670284	Identifier	endp		670110	0					
ANR	670285	Identifier	NULL		670110	1					
ANR	670286	CompoundStatement		31:55:757:757	670110	1					
ANR	670287	ExpressionStatement	p1 = p2 + 1	725:3:22007:22018	670110	0	True				
ANR	670288	AssignmentExpression	p1 = p2 + 1		670110	0		=			
ANR	670289	Identifier	p1		670110	0					
ANR	670290	AdditiveExpression	p2 + 1		670110	1		+			
ANR	670291	Identifier	p2		670110	0					
ANR	670292	PrimaryExpression	1		670110	1					
ANR	670293	ExpressionStatement	n ++	726:3:22023:22026	670110	1	True				
ANR	670294	PostIncDecOperationExpression	n ++		670110	0					
ANR	670295	Identifier	n		670110	0					
ANR	670296	IncDec	++		670110	1					
ANR	670297	ExpressionStatement	size = n + MBSTRG ( default_detect_order_list_size )	728:2:22034:22083	670110	6	True				
ANR	670298	AssignmentExpression	size = n + MBSTRG ( default_detect_order_list_size )		670110	0		=			
ANR	670299	Identifier	size		670110	0					
ANR	670300	AdditiveExpression	n + MBSTRG ( default_detect_order_list_size )		670110	1		+			
ANR	670301	Identifier	n		670110	0					
ANR	670302	CallExpression	MBSTRG ( default_detect_order_list_size )		670110	1					
ANR	670303	Callee	MBSTRG		670110	0					
ANR	670304	Identifier	MBSTRG		670110	0					
ANR	670305	ArgumentList	default_detect_order_list_size		670110	1					
ANR	670306	Argument	default_detect_order_list_size		670110	0					
ANR	670307	Identifier	default_detect_order_list_size		670110	0					
ANR	670308	ExpressionStatement	"list = ( const mbfl_encoding * * ) pecalloc ( size , sizeof ( mbfl_encoding * ) , persistent )"	730:2:22105:22186	670110	7	True				
ANR	670309	AssignmentExpression	"list = ( const mbfl_encoding * * ) pecalloc ( size , sizeof ( mbfl_encoding * ) , persistent )"		670110	0		=			
ANR	670310	Identifier	list		670110	0					
ANR	670311	CastExpression	"( const mbfl_encoding * * ) pecalloc ( size , sizeof ( mbfl_encoding * ) , persistent )"		670110	1					
ANR	670312	CastTarget	const mbfl_encoding * *		670110	0					
ANR	670313	CallExpression	"pecalloc ( size , sizeof ( mbfl_encoding * ) , persistent )"		670110	1					
ANR	670314	Callee	pecalloc		670110	0					
ANR	670315	Identifier	pecalloc		670110	0					
ANR	670316	ArgumentList	size		670110	1					
ANR	670317	Argument	size		670110	0					
ANR	670318	Identifier	size		670110	0					
ANR	670319	Argument	sizeof ( mbfl_encoding * )		670110	1					
ANR	670320	SizeofExpression	sizeof ( mbfl_encoding * )		670110	0					
ANR	670321	Sizeof	sizeof		670110	0					
ANR	670322	SizeofOperand	mbfl_encoding *		670110	1					
ANR	670323	Argument	persistent		670110	2					
ANR	670324	Identifier	persistent		670110	0					
ANR	670325	IfStatement	if ( list != NULL )		670110	8					
ANR	670326	Condition	list != NULL	731:6:22194:22205	670110	0	True				
ANR	670327	EqualityExpression	list != NULL		670110	0		!=			
ANR	670328	Identifier	list		670110	0					
ANR	670329	Identifier	NULL		670110	1					
ANR	670330	CompoundStatement		38:20:963:963	670110	1					
ANR	670331	ExpressionStatement	entry = list	732:3:22213:22225	670110	0	True				
ANR	670332	AssignmentExpression	entry = list		670110	0		=			
ANR	670333	Identifier	entry		670110	0					
ANR	670334	Identifier	list		670110	1					
ANR	670335	ExpressionStatement	n = 0	733:3:22230:22235	670110	1	True				
ANR	670336	AssignmentExpression	n = 0		670110	0		=			
ANR	670337	Identifier	n		670110	0					
ANR	670338	PrimaryExpression	0		670110	1					
ANR	670339	ExpressionStatement	bauto = 0	734:3:22240:22249	670110	2	True				
ANR	670340	AssignmentExpression	bauto = 0		670110	0		=			
ANR	670341	Identifier	bauto		670110	0					
ANR	670342	PrimaryExpression	0		670110	1					
ANR	670343	ExpressionStatement	p1 = tmpstr	735:3:22254:22265	670110	3	True				
ANR	670344	AssignmentExpression	p1 = tmpstr		670110	0		=			
ANR	670345	Identifier	p1		670110	0					
ANR	670346	Identifier	tmpstr		670110	1					
ANR	670347	DoStatement	do		670110	4					
ANR	670348	CompoundStatement		43:6:1028:1028	670110	0					
ANR	670349	ExpressionStatement	"p2 = p = php_memnstr ( p1 , "","" , 1 , endp )"	737:4:22279:22317	670110	0	True				
ANR	670350	AssignmentExpression	"p2 = p = php_memnstr ( p1 , "","" , 1 , endp )"		670110	0		=			
ANR	670351	Identifier	p2		670110	0					
ANR	670352	AssignmentExpression	"p = php_memnstr ( p1 , "","" , 1 , endp )"		670110	1		=			
ANR	670353	Identifier	p		670110	0					
ANR	670354	CallExpression	"php_memnstr ( p1 , "","" , 1 , endp )"		670110	1					
ANR	670355	Callee	php_memnstr		670110	0					
ANR	670356	Identifier	php_memnstr		670110	0					
ANR	670357	ArgumentList	p1		670110	1					
ANR	670358	Argument	p1		670110	0					
ANR	670359	Identifier	p1		670110	0					
ANR	670360	Argument	""","""		670110	1					
ANR	670361	PrimaryExpression	""","""		670110	0					
ANR	670362	Argument	1		670110	2					
ANR	670363	PrimaryExpression	1		670110	0					
ANR	670364	Argument	endp		670110	3					
ANR	670365	Identifier	endp		670110	0					
ANR	670366	IfStatement	if ( p == NULL )		670110	1					
ANR	670367	Condition	p == NULL	738:8:22327:22335	670110	0	True				
ANR	670368	EqualityExpression	p == NULL		670110	0		==			
ANR	670369	Identifier	p		670110	0					
ANR	670370	Identifier	NULL		670110	1					
ANR	670371	CompoundStatement		45:19:1093:1093	670110	1					
ANR	670372	ExpressionStatement	p = endp	739:5:22345:22353	670110	0	True				
ANR	670373	AssignmentExpression	p = endp		670110	0		=			
ANR	670374	Identifier	p		670110	0					
ANR	670375	Identifier	endp		670110	1					
ANR	670376	ExpressionStatement	* p = '\\0'	741:4:22365:22374	670110	2	True				
ANR	670377	AssignmentExpression	* p = '\\0'		670110	0		=			
ANR	670378	UnaryOperationExpression	* p		670110	0					
ANR	670379	UnaryOperator	*		670110	0					
ANR	670380	Identifier	p		670110	1					
ANR	670381	PrimaryExpression	'\\0'		670110	1					
ANR	670382	WhileStatement	while ( p1 < p && ( * p1 == ' ' || * p1 == '\\t' ) )		670110	3					
ANR	670383	Condition	p1 < p && ( * p1 == ' ' || * p1 == '\\t' )	743:11:22409:22445	670110	0	True				
ANR	670384	AndExpression	p1 < p && ( * p1 == ' ' || * p1 == '\\t' )		670110	0		&&			
ANR	670385	RelationalExpression	p1 < p		670110	0		<			
ANR	670386	Identifier	p1		670110	0					
ANR	670387	Identifier	p		670110	1					
ANR	670388	OrExpression	* p1 == ' ' || * p1 == '\\t'		670110	1		||			
ANR	670389	EqualityExpression	* p1 == ' '		670110	0		==			
ANR	670390	UnaryOperationExpression	* p1		670110	0					
ANR	670391	UnaryOperator	*		670110	0					
ANR	670392	Identifier	p1		670110	1					
ANR	670393	PrimaryExpression	' '		670110	1					
ANR	670394	EqualityExpression	* p1 == '\\t'		670110	1		==			
ANR	670395	UnaryOperationExpression	* p1		670110	0					
ANR	670396	UnaryOperator	*		670110	0					
ANR	670397	Identifier	p1		670110	1					
ANR	670398	PrimaryExpression	'\\t'		670110	1					
ANR	670399	CompoundStatement		50:50:1203:1203	670110	1					
ANR	670400	ExpressionStatement	p1 ++	744:5:22455:22459	670110	0	True				
ANR	670401	PostIncDecOperationExpression	p1 ++		670110	0					
ANR	670402	Identifier	p1		670110	0					
ANR	670403	IncDec	++		670110	1					
ANR	670404	ExpressionStatement	p --	746:4:22471:22474	670110	4	True				
ANR	670405	PostIncDecOperationExpression	p --		670110	0					
ANR	670406	Identifier	p		670110	0					
ANR	670407	IncDec	--		670110	1					
ANR	670408	WhileStatement	while ( p > p1 && ( * p == ' ' || * p == '\\t' ) )		670110	5					
ANR	670409	Condition	p > p1 && ( * p == ' ' || * p == '\\t' )	747:11:22487:22521	670110	0	True				
ANR	670410	AndExpression	p > p1 && ( * p == ' ' || * p == '\\t' )		670110	0		&&			
ANR	670411	RelationalExpression	p > p1		670110	0		>			
ANR	670412	Identifier	p		670110	0					
ANR	670413	Identifier	p1		670110	1					
ANR	670414	OrExpression	* p == ' ' || * p == '\\t'		670110	1		||			
ANR	670415	EqualityExpression	* p == ' '		670110	0		==			
ANR	670416	UnaryOperationExpression	* p		670110	0					
ANR	670417	UnaryOperator	*		670110	0					
ANR	670418	Identifier	p		670110	1					
ANR	670419	PrimaryExpression	' '		670110	1					
ANR	670420	EqualityExpression	* p == '\\t'		670110	1		==			
ANR	670421	UnaryOperationExpression	* p		670110	0					
ANR	670422	UnaryOperator	*		670110	0					
ANR	670423	Identifier	p		670110	1					
ANR	670424	PrimaryExpression	'\\t'		670110	1					
ANR	670425	CompoundStatement		54:48:1279:1279	670110	1					
ANR	670426	ExpressionStatement	* p = '\\0'	748:5:22531:22540	670110	0	True				
ANR	670427	AssignmentExpression	* p = '\\0'		670110	0		=			
ANR	670428	UnaryOperationExpression	* p		670110	0					
ANR	670429	UnaryOperator	*		670110	0					
ANR	670430	Identifier	p		670110	1					
ANR	670431	PrimaryExpression	'\\0'		670110	1					
ANR	670432	ExpressionStatement	p --	749:5:22547:22550	670110	1	True				
ANR	670433	PostIncDecOperationExpression	p --		670110	0					
ANR	670434	Identifier	p		670110	0					
ANR	670435	IncDec	--		670110	1					
ANR	670436	IfStatement	"if ( strcasecmp ( p1 , ""auto"" ) == 0 )"		670110	6					
ANR	670437	Condition	"strcasecmp ( p1 , ""auto"" ) == 0"	752:8:22626:22652	670110	0	True				
ANR	670438	EqualityExpression	"strcasecmp ( p1 , ""auto"" ) == 0"		670110	0		==			
ANR	670439	CallExpression	"strcasecmp ( p1 , ""auto"" )"		670110	0					
ANR	670440	Callee	strcasecmp		670110	0					
ANR	670441	Identifier	strcasecmp		670110	0					
ANR	670442	ArgumentList	p1		670110	1					
ANR	670443	Argument	p1		670110	0					
ANR	670444	Identifier	p1		670110	0					
ANR	670445	Argument	"""auto"""		670110	1					
ANR	670446	PrimaryExpression	"""auto"""		670110	0					
ANR	670447	PrimaryExpression	0		670110	1					
ANR	670448	CompoundStatement		59:37:1410:1410	670110	1					
ANR	670449	IfStatement	if ( ! bauto )		670110	0					
ANR	670450	Condition	! bauto	753:9:22666:22671	670110	0	True				
ANR	670451	UnaryOperationExpression	! bauto		670110	0					
ANR	670452	UnaryOperator	!		670110	0					
ANR	670453	Identifier	bauto		670110	1					
ANR	670454	CompoundStatement		63:6:1593:1601	670110	1					
ANR	670455	IdentifierDeclStatement	const enum mbfl_no_encoding * src = MBSTRG ( default_detect_order_list ) ;	754:6:22682:22750	670110	0	True				
ANR	670456	IdentifierDecl	* src = MBSTRG ( default_detect_order_list )		670110	0					
ANR	670457	IdentifierDeclType	const enum mbfl_no_encoding *		670110	0					
ANR	670458	Identifier	src		670110	1					
ANR	670459	AssignmentExpression	* src = MBSTRG ( default_detect_order_list )		670110	2		=			
ANR	670460	Identifier	src		670110	0					
ANR	670461	CallExpression	MBSTRG ( default_detect_order_list )		670110	1					
ANR	670462	Callee	MBSTRG		670110	0					
ANR	670463	Identifier	MBSTRG		670110	0					
ANR	670464	ArgumentList	default_detect_order_list		670110	1					
ANR	670465	Argument	default_detect_order_list		670110	0					
ANR	670466	Identifier	default_detect_order_list		670110	0					
ANR	670467	IdentifierDeclStatement	const size_t identify_list_size = MBSTRG ( default_detect_order_list_size ) ;	755:6:22758:22830	670110	1	True				
ANR	670468	IdentifierDecl	identify_list_size = MBSTRG ( default_detect_order_list_size )		670110	0					
ANR	670469	IdentifierDeclType	const size_t		670110	0					
ANR	670470	Identifier	identify_list_size		670110	1					
ANR	670471	AssignmentExpression	identify_list_size = MBSTRG ( default_detect_order_list_size )		670110	2		=			
ANR	670472	Identifier	identify_list_size		670110	0					
ANR	670473	CallExpression	MBSTRG ( default_detect_order_list_size )		670110	1					
ANR	670474	Callee	MBSTRG		670110	0					
ANR	670475	Identifier	MBSTRG		670110	0					
ANR	670476	ArgumentList	default_detect_order_list_size		670110	1					
ANR	670477	Argument	default_detect_order_list_size		670110	0					
ANR	670478	Identifier	default_detect_order_list_size		670110	0					
ANR	670479	IdentifierDeclStatement	size_t i ;	756:6:22838:22846	670110	2	True				
ANR	670480	IdentifierDecl	i		670110	0					
ANR	670481	IdentifierDeclType	size_t		670110	0					
ANR	670482	Identifier	i		670110	1					
ANR	670483	ExpressionStatement	bauto = 1	757:6:22854:22863	670110	3	True				
ANR	670484	AssignmentExpression	bauto = 1		670110	0		=			
ANR	670485	Identifier	bauto		670110	0					
ANR	670486	PrimaryExpression	1		670110	1					
ANR	670487	ForStatement	for ( i = 0 ; i < identify_list_size ; i ++ )		670110	4					
ANR	670488	ForInit	i = 0 ;	758:11:22876:22881	670110	0	True				
ANR	670489	AssignmentExpression	i = 0		670110	0		=			
ANR	670490	Identifier	i		670110	0					
ANR	670491	PrimaryExpression	0		670110	1					
ANR	670492	Condition	i < identify_list_size	758:18:22883:22904	670110	1	True				
ANR	670493	RelationalExpression	i < identify_list_size		670110	0		<			
ANR	670494	Identifier	i		670110	0					
ANR	670495	Identifier	identify_list_size		670110	1					
ANR	670496	PostIncDecOperationExpression	i ++	758:42:22907:22909	670110	2	True				
ANR	670497	Identifier	i		670110	0					
ANR	670498	IncDec	++		670110	1					
ANR	670499	CompoundStatement		65:47:1667:1667	670110	3					
ANR	670500	ExpressionStatement	* entry ++ = mbfl_no2encoding ( * src ++ )	759:7:22921:22956	670110	0	True				
ANR	670501	AssignmentExpression	* entry ++ = mbfl_no2encoding ( * src ++ )		670110	0		=			
ANR	670502	UnaryOperationExpression	* entry ++		670110	0					
ANR	670503	UnaryOperator	*		670110	0					
ANR	670504	PostIncDecOperationExpression	entry ++		670110	1					
ANR	670505	Identifier	entry		670110	0					
ANR	670506	IncDec	++		670110	1					
ANR	670507	CallExpression	mbfl_no2encoding ( * src ++ )		670110	1					
ANR	670508	Callee	mbfl_no2encoding		670110	0					
ANR	670509	Identifier	mbfl_no2encoding		670110	0					
ANR	670510	ArgumentList	* src ++		670110	1					
ANR	670511	Argument	* src ++		670110	0					
ANR	670512	UnaryOperationExpression	* src ++		670110	0					
ANR	670513	UnaryOperator	*		670110	0					
ANR	670514	PostIncDecOperationExpression	src ++		670110	1					
ANR	670515	Identifier	src		670110	0					
ANR	670516	IncDec	++		670110	1					
ANR	670517	ExpressionStatement	n ++	760:7:22965:22968	670110	1	True				
ANR	670518	PostIncDecOperationExpression	n ++		670110	0					
ANR	670519	Identifier	n		670110	0					
ANR	670520	IncDec	++		670110	1					
ANR	670521	ElseStatement	else		670110	0					
ANR	670522	CompoundStatement		71:5:1758:1812	670110	0					
ANR	670523	IdentifierDeclStatement	const mbfl_encoding * encoding = mbfl_name2encoding ( p1 ) ;	764:5:23003:23057	670110	0	True				
ANR	670524	IdentifierDecl	* encoding = mbfl_name2encoding ( p1 )		670110	0					
ANR	670525	IdentifierDeclType	const mbfl_encoding *		670110	0					
ANR	670526	Identifier	encoding		670110	1					
ANR	670527	AssignmentExpression	* encoding = mbfl_name2encoding ( p1 )		670110	2		=			
ANR	670528	Identifier	encoding		670110	0					
ANR	670529	CallExpression	mbfl_name2encoding ( p1 )		670110	1					
ANR	670530	Callee	mbfl_name2encoding		670110	0					
ANR	670531	Identifier	mbfl_name2encoding		670110	0					
ANR	670532	ArgumentList	p1		670110	1					
ANR	670533	Argument	p1		670110	0					
ANR	670534	Identifier	p1		670110	0					
ANR	670535	IfStatement	if ( encoding )		670110	1					
ANR	670536	Condition	encoding	765:9:23068:23075	670110	0	True				
ANR	670537	Identifier	encoding		670110	0					
ANR	670538	CompoundStatement		72:19:1833:1833	670110	1					
ANR	670539	ExpressionStatement	* entry ++ = encoding	766:6:23086:23105	670110	0	True				
ANR	670540	AssignmentExpression	* entry ++ = encoding		670110	0		=			
ANR	670541	UnaryOperationExpression	* entry ++		670110	0					
ANR	670542	UnaryOperator	*		670110	0					
ANR	670543	PostIncDecOperationExpression	entry ++		670110	1					
ANR	670544	Identifier	entry		670110	0					
ANR	670545	IncDec	++		670110	1					
ANR	670546	Identifier	encoding		670110	1					
ANR	670547	ExpressionStatement	n ++	767:6:23113:23116	670110	1	True				
ANR	670548	PostIncDecOperationExpression	n ++		670110	0					
ANR	670549	Identifier	n		670110	0					
ANR	670550	IncDec	++		670110	1					
ANR	670551	ElseStatement	else		670110	0					
ANR	670552	CompoundStatement		75:12:1885:1885	670110	0					
ANR	670553	ExpressionStatement	ret = 0	769:6:23138:23145	670110	0	True				
ANR	670554	AssignmentExpression	ret = 0		670110	0		=			
ANR	670555	Identifier	ret		670110	0					
ANR	670556	PrimaryExpression	0		670110	1					
ANR	670557	ExpressionStatement	p1 = p2 + 1	772:4:23164:23175	670110	7	True				
ANR	670558	AssignmentExpression	p1 = p2 + 1		670110	0		=			
ANR	670559	Identifier	p1		670110	0					
ANR	670560	AdditiveExpression	p2 + 1		670110	1		+			
ANR	670561	Identifier	p2		670110	0					
ANR	670562	PrimaryExpression	1		670110	1					
ANR	670563	Condition	n < size && p2 != NULL	773:12:23189:23210	670110	1	True				
ANR	670564	AndExpression	n < size && p2 != NULL		670110	0		&&			
ANR	670565	RelationalExpression	n < size		670110	0		<			
ANR	670566	Identifier	n		670110	0					
ANR	670567	Identifier	size		670110	1					
ANR	670568	EqualityExpression	p2 != NULL		670110	1		!=			
ANR	670569	Identifier	p2		670110	0					
ANR	670570	Identifier	NULL		670110	1					
ANR	670571	IfStatement	if ( n > 0 )		670110	5					
ANR	670572	Condition	n > 0	774:7:23221:23225	670110	0	True				
ANR	670573	RelationalExpression	n > 0		670110	0		>			
ANR	670574	Identifier	n		670110	0					
ANR	670575	PrimaryExpression	0		670110	1					
ANR	670576	CompoundStatement		81:14:1983:1983	670110	1					
ANR	670577	IfStatement	if ( return_list )		670110	0					
ANR	670578	Condition	return_list	775:8:23238:23248	670110	0	True				
ANR	670579	Identifier	return_list		670110	0					
ANR	670580	CompoundStatement		82:21:2006:2006	670110	1					
ANR	670581	ExpressionStatement	* return_list = list	776:5:23258:23277	670110	0	True				
ANR	670582	AssignmentExpression	* return_list = list		670110	0		=			
ANR	670583	UnaryOperationExpression	* return_list		670110	0					
ANR	670584	UnaryOperator	*		670110	0					
ANR	670585	Identifier	return_list		670110	1					
ANR	670586	Identifier	list		670110	1					
ANR	670587	ElseStatement	else		670110	0					
ANR	670588	CompoundStatement		84:11:2045:2045	670110	0					
ANR	670589	ExpressionStatement	"pefree ( list , persistent )"	778:5:23297:23321	670110	0	True				
ANR	670590	CallExpression	"pefree ( list , persistent )"		670110	0					
ANR	670591	Callee	pefree		670110	0					
ANR	670592	Identifier	pefree		670110	0					
ANR	670593	ArgumentList	list		670110	1					
ANR	670594	Argument	list		670110	0					
ANR	670595	Identifier	list		670110	0					
ANR	670596	Argument	persistent		670110	1					
ANR	670597	Identifier	persistent		670110	0					
ANR	670598	ElseStatement	else		670110	0					
ANR	670599	CompoundStatement		87:10:2094:2094	670110	0					
ANR	670600	ExpressionStatement	"pefree ( list , persistent )"	781:4:23345:23369	670110	0	True				
ANR	670601	CallExpression	"pefree ( list , persistent )"		670110	0					
ANR	670602	Callee	pefree		670110	0					
ANR	670603	Identifier	pefree		670110	0					
ANR	670604	ArgumentList	list		670110	1					
ANR	670605	Argument	list		670110	0					
ANR	670606	Identifier	list		670110	0					
ANR	670607	Argument	persistent		670110	1					
ANR	670608	Identifier	persistent		670110	0					
ANR	670609	IfStatement	if ( return_list )		670110	1					
ANR	670610	Condition	return_list	782:8:23379:23389	670110	0	True				
ANR	670611	Identifier	return_list		670110	0					
ANR	670612	CompoundStatement		89:21:2147:2147	670110	1					
ANR	670613	ExpressionStatement	* return_list = NULL	783:5:23399:23418	670110	0	True				
ANR	670614	AssignmentExpression	* return_list = NULL		670110	0		=			
ANR	670615	UnaryOperationExpression	* return_list		670110	0					
ANR	670616	UnaryOperator	*		670110	0					
ANR	670617	Identifier	return_list		670110	1					
ANR	670618	Identifier	NULL		670110	1					
ANR	670619	ExpressionStatement	ret = 0	785:4:23430:23437	670110	2	True				
ANR	670620	AssignmentExpression	ret = 0		670110	0		=			
ANR	670621	Identifier	ret		670110	0					
ANR	670622	PrimaryExpression	0		670110	1					
ANR	670623	IfStatement	if ( return_size )		670110	6					
ANR	670624	Condition	return_size	787:7:23451:23461	670110	0	True				
ANR	670625	Identifier	return_size		670110	0					
ANR	670626	CompoundStatement		94:20:2219:2219	670110	1					
ANR	670627	ExpressionStatement	* return_size = n	788:4:23470:23486	670110	0	True				
ANR	670628	AssignmentExpression	* return_size = n		670110	0		=			
ANR	670629	UnaryOperationExpression	* return_size		670110	0					
ANR	670630	UnaryOperator	*		670110	0					
ANR	670631	Identifier	return_size		670110	1					
ANR	670632	Identifier	n		670110	1					
ANR	670633	ElseStatement	else		670110	0					
ANR	670634	CompoundStatement		97:9:2257:2257	670110	0					
ANR	670635	IfStatement	if ( return_list )		670110	0					
ANR	670636	Condition	return_list	791:7:23511:23521	670110	0	True				
ANR	670637	Identifier	return_list		670110	0					
ANR	670638	CompoundStatement		98:20:2279:2279	670110	1					
ANR	670639	ExpressionStatement	* return_list = NULL	792:4:23530:23549	670110	0	True				
ANR	670640	AssignmentExpression	* return_list = NULL		670110	0		=			
ANR	670641	UnaryOperationExpression	* return_list		670110	0					
ANR	670642	UnaryOperator	*		670110	0					
ANR	670643	Identifier	return_list		670110	1					
ANR	670644	Identifier	NULL		670110	1					
ANR	670645	IfStatement	if ( return_size )		670110	1					
ANR	670646	Condition	return_size	794:7:23563:23573	670110	0	True				
ANR	670647	Identifier	return_size		670110	0					
ANR	670648	CompoundStatement		101:20:2331:2331	670110	1					
ANR	670649	ExpressionStatement	* return_size = 0	795:4:23582:23598	670110	0	True				
ANR	670650	AssignmentExpression	* return_size = 0		670110	0		=			
ANR	670651	UnaryOperationExpression	* return_size		670110	0					
ANR	670652	UnaryOperator	*		670110	0					
ANR	670653	Identifier	return_size		670110	1					
ANR	670654	PrimaryExpression	0		670110	1					
ANR	670655	ExpressionStatement	ret = 0	797:3:23608:23615	670110	2	True				
ANR	670656	AssignmentExpression	ret = 0		670110	0		=			
ANR	670657	Identifier	ret		670110	0					
ANR	670658	PrimaryExpression	0		670110	1					
ANR	670659	ExpressionStatement	efree ( tmpstr )	799:2:23623:23636	670110	9	True				
ANR	670660	CallExpression	efree ( tmpstr )		670110	0					
ANR	670661	Callee	efree		670110	0					
ANR	670662	Identifier	efree		670110	0					
ANR	670663	ArgumentList	tmpstr		670110	1					
ANR	670664	Argument	tmpstr		670110	0					
ANR	670665	Identifier	tmpstr		670110	0					
ANR	670666	ReturnStatement	return ret ;	802:1:23643:23653	670110	6	True				
ANR	670667	Identifier	ret		670110	0					
ANR	670668	ReturnType	static int		670110	1					
ANR	670669	Identifier	php_mb_parse_encoding_list		670110	2					
ANR	670670	ParameterList	"const char * value , size_t value_length , const mbfl_encoding * * * return_list , size_t * return_size , int persistent TSRMLS_DC"		670110	3					
ANR	670671	Parameter	const char * value	693:27:21121:21137	670110	0	True				
ANR	670672	ParameterType	const char *		670110	0					
ANR	670673	Identifier	value		670110	1					
ANR	670674	Parameter	size_t value_length	693:46:21140:21158	670110	1	True				
ANR	670675	ParameterType	size_t		670110	0					
ANR	670676	Identifier	value_length		670110	1					
ANR	670677	Parameter	const mbfl_encoding * * * return_list	693:67:21161:21194	670110	2	True				
ANR	670678	ParameterType	const mbfl_encoding * * *		670110	0					
ANR	670679	Identifier	return_list		670110	1					
ANR	670680	Parameter	size_t * return_size	693:103:21197:21215	670110	3	True				
ANR	670681	ParameterType	size_t *		670110	0					
ANR	670682	Identifier	return_size		670110	1					
ANR	670683	Parameter	int persistent TSRMLS_DC	693:124:21218:21241	670110	4	True				
ANR	670684	ParameterType	int persistent		670110	0					
ANR	670685	Identifier	TSRMLS_DC		670110	1					
ANR	670686	CFGEntryNode	ENTRY		670110		True				
ANR	670687	CFGExitNode	EXIT		670110		True				
ANR	670688	Symbol	p1		670110						
ANR	670689	Symbol	p2		670110						
ANR	670690	Symbol	mbfl_name2encoding		670110						
ANR	670691	Symbol	bauto		670110						
ANR	670692	Symbol	MBSTRG		670110						
ANR	670693	Symbol	* entry ++		670110						
ANR	670694	Symbol	TSRMLS_DC		670110						
ANR	670695	Symbol	default_detect_order_list_size		670110						
ANR	670696	Symbol	* return_list		670110						
ANR	670697	Symbol	* value_length		670110						
ANR	670698	Symbol	estrndup		670110						
ANR	670699	Symbol	default_detect_order_list		670110						
ANR	670700	Symbol	value_length		670110						
ANR	670701	Symbol	return_size		670110						
ANR	670702	Symbol	endp		670110						
ANR	670703	Symbol	tmpstr		670110						
ANR	670704	Symbol	persistent		670110						
ANR	670705	Symbol	strcasecmp		670110						
ANR	670706	Symbol	value		670110						
ANR	670707	Symbol	ret		670110						
ANR	670708	Symbol	SUCCESS		670110						
ANR	670709	Symbol	NULL		670110						
ANR	670710	Symbol	identify_list_size		670110						
ANR	670711	Symbol	* p1		670110						
ANR	670712	Symbol	src		670110						
ANR	670713	Symbol	mbfl_no2encoding		670110						
ANR	670714	Symbol	* return_size		670110						
ANR	670715	Symbol	return_list		670110						
ANR	670716	Symbol	php_memnstr		670110						
ANR	670717	Symbol	i		670110						
ANR	670718	Symbol	list		670110						
ANR	670719	Symbol	encoding		670110						
ANR	670720	Symbol	FAILURE		670110						
ANR	670721	Symbol	n		670110						
ANR	670722	Symbol	p		670110						
ANR	670723	Symbol	entry		670110						
ANR	670724	Symbol	size		670110						
ANR	670725	Symbol	pecalloc		670110						
ANR	670726	Symbol	* value		670110						
ANR	670727	Symbol	* src ++		670110						
ANR	670728	Symbol	* p		670110						
ANR	670729	Function	php_mb_parse_encoding_array	811:0:23886:25766							
ANR	670730	FunctionDef	"php_mb_parse_encoding_array (zval * array , const mbfl_encoding * * * return_list , size_t * return_size , int persistent TSRMLS_DC)"		670729	0					
ANR	670731	CompoundStatement		813:0:24021:25766	670729	0					
ANR	670732	IdentifierDeclStatement	zval * * hash_entry ;	814:1:24024:24041	670729	0	True				
ANR	670733	IdentifierDecl	* * hash_entry		670729	0					
ANR	670734	IdentifierDeclType	zval * *		670729	0					
ANR	670735	Identifier	hash_entry		670729	1					
ANR	670736	IdentifierDeclStatement	HashTable * target_hash ;	815:1:24044:24066	670729	1	True				
ANR	670737	IdentifierDecl	* target_hash		670729	0					
ANR	670738	IdentifierDeclType	HashTable *		670729	0					
ANR	670739	Identifier	target_hash		670729	1					
ANR	670740	IdentifierDeclStatement	"int i , n , size , bauto , ret = SUCCESS ;"	816:1:24069:24105	670729	2	True				
ANR	670741	IdentifierDecl	i		670729	0					
ANR	670742	IdentifierDeclType	int		670729	0					
ANR	670743	Identifier	i		670729	1					
ANR	670744	IdentifierDecl	n		670729	1					
ANR	670745	IdentifierDeclType	int		670729	0					
ANR	670746	Identifier	n		670729	1					
ANR	670747	IdentifierDecl	size		670729	2					
ANR	670748	IdentifierDeclType	int		670729	0					
ANR	670749	Identifier	size		670729	1					
ANR	670750	IdentifierDecl	bauto		670729	3					
ANR	670751	IdentifierDeclType	int		670729	0					
ANR	670752	Identifier	bauto		670729	1					
ANR	670753	IdentifierDecl	ret = SUCCESS		670729	4					
ANR	670754	IdentifierDeclType	int		670729	0					
ANR	670755	Identifier	ret		670729	1					
ANR	670756	AssignmentExpression	ret = SUCCESS		670729	2		=			
ANR	670757	Identifier	SUCCESS		670729	0					
ANR	670758	Identifier	SUCCESS		670729	1					
ANR	670759	IdentifierDeclStatement	"const mbfl_encoding * * list , * * entry ;"	817:1:24108:24143	670729	3	True				
ANR	670760	IdentifierDecl	* * list		670729	0					
ANR	670761	IdentifierDeclType	const mbfl_encoding * *		670729	0					
ANR	670762	Identifier	list		670729	1					
ANR	670763	IdentifierDecl	* * entry		670729	1					
ANR	670764	IdentifierDeclType	const mbfl_encoding * *		670729	0					
ANR	670765	Identifier	entry		670729	1					
ANR	670766	ExpressionStatement	list = NULL	819:1:24147:24158	670729	4	True				
ANR	670767	AssignmentExpression	list = NULL		670729	0		=			
ANR	670768	Identifier	list		670729	0					
ANR	670769	Identifier	NULL		670729	1					
ANR	670770	IfStatement	if ( Z_TYPE_P ( array ) == IS_ARRAY )		670729	5					
ANR	670771	Condition	Z_TYPE_P ( array ) == IS_ARRAY	820:5:24165:24191	670729	0	True				
ANR	670772	EqualityExpression	Z_TYPE_P ( array ) == IS_ARRAY		670729	0		==			
ANR	670773	CallExpression	Z_TYPE_P ( array )		670729	0					
ANR	670774	Callee	Z_TYPE_P		670729	0					
ANR	670775	Identifier	Z_TYPE_P		670729	0					
ANR	670776	ArgumentList	array		670729	1					
ANR	670777	Argument	array		670729	0					
ANR	670778	Identifier	array		670729	0					
ANR	670779	Identifier	IS_ARRAY		670729	1					
ANR	670780	CompoundStatement		8:34:172:172	670729	1					
ANR	670781	ExpressionStatement	target_hash = Z_ARRVAL_P ( array )	821:2:24198:24229	670729	0	True				
ANR	670782	AssignmentExpression	target_hash = Z_ARRVAL_P ( array )		670729	0		=			
ANR	670783	Identifier	target_hash		670729	0					
ANR	670784	CallExpression	Z_ARRVAL_P ( array )		670729	1					
ANR	670785	Callee	Z_ARRVAL_P		670729	0					
ANR	670786	Identifier	Z_ARRVAL_P		670729	0					
ANR	670787	ArgumentList	array		670729	1					
ANR	670788	Argument	array		670729	0					
ANR	670789	Identifier	array		670729	0					
ANR	670790	ExpressionStatement	zend_hash_internal_pointer_reset ( target_hash )	822:2:24233:24278	670729	1	True				
ANR	670791	CallExpression	zend_hash_internal_pointer_reset ( target_hash )		670729	0					
ANR	670792	Callee	zend_hash_internal_pointer_reset		670729	0					
ANR	670793	Identifier	zend_hash_internal_pointer_reset		670729	0					
ANR	670794	ArgumentList	target_hash		670729	1					
ANR	670795	Argument	target_hash		670729	0					
ANR	670796	Identifier	target_hash		670729	0					
ANR	670797	ExpressionStatement	i = zend_hash_num_elements ( target_hash )	823:2:24282:24321	670729	2	True				
ANR	670798	AssignmentExpression	i = zend_hash_num_elements ( target_hash )		670729	0		=			
ANR	670799	Identifier	i		670729	0					
ANR	670800	CallExpression	zend_hash_num_elements ( target_hash )		670729	1					
ANR	670801	Callee	zend_hash_num_elements		670729	0					
ANR	670802	Identifier	zend_hash_num_elements		670729	0					
ANR	670803	ArgumentList	target_hash		670729	1					
ANR	670804	Argument	target_hash		670729	0					
ANR	670805	Identifier	target_hash		670729	0					
ANR	670806	ExpressionStatement	size = i + MBSTRG ( default_detect_order_list_size )	824:2:24325:24374	670729	3	True				
ANR	670807	AssignmentExpression	size = i + MBSTRG ( default_detect_order_list_size )		670729	0		=			
ANR	670808	Identifier	size		670729	0					
ANR	670809	AdditiveExpression	i + MBSTRG ( default_detect_order_list_size )		670729	1		+			
ANR	670810	Identifier	i		670729	0					
ANR	670811	CallExpression	MBSTRG ( default_detect_order_list_size )		670729	1					
ANR	670812	Callee	MBSTRG		670729	0					
ANR	670813	Identifier	MBSTRG		670729	0					
ANR	670814	ArgumentList	default_detect_order_list_size		670729	1					
ANR	670815	Argument	default_detect_order_list_size		670729	0					
ANR	670816	Identifier	default_detect_order_list_size		670729	0					
ANR	670817	ExpressionStatement	"list = ( const mbfl_encoding * * ) pecalloc ( size , sizeof ( mbfl_encoding * ) , persistent )"	825:2:24378:24459	670729	4	True				
ANR	670818	AssignmentExpression	"list = ( const mbfl_encoding * * ) pecalloc ( size , sizeof ( mbfl_encoding * ) , persistent )"		670729	0		=			
ANR	670819	Identifier	list		670729	0					
ANR	670820	CastExpression	"( const mbfl_encoding * * ) pecalloc ( size , sizeof ( mbfl_encoding * ) , persistent )"		670729	1					
ANR	670821	CastTarget	const mbfl_encoding * *		670729	0					
ANR	670822	CallExpression	"pecalloc ( size , sizeof ( mbfl_encoding * ) , persistent )"		670729	1					
ANR	670823	Callee	pecalloc		670729	0					
ANR	670824	Identifier	pecalloc		670729	0					
ANR	670825	ArgumentList	size		670729	1					
ANR	670826	Argument	size		670729	0					
ANR	670827	Identifier	size		670729	0					
ANR	670828	Argument	sizeof ( mbfl_encoding * )		670729	1					
ANR	670829	SizeofExpression	sizeof ( mbfl_encoding * )		670729	0					
ANR	670830	Sizeof	sizeof		670729	0					
ANR	670831	SizeofOperand	mbfl_encoding *		670729	1					
ANR	670832	Argument	persistent		670729	2					
ANR	670833	Identifier	persistent		670729	0					
ANR	670834	IfStatement	if ( list != NULL )		670729	5					
ANR	670835	Condition	list != NULL	826:6:24467:24478	670729	0	True				
ANR	670836	EqualityExpression	list != NULL		670729	0		!=			
ANR	670837	Identifier	list		670729	0					
ANR	670838	Identifier	NULL		670729	1					
ANR	670839	CompoundStatement		14:20:459:459	670729	1					
ANR	670840	ExpressionStatement	entry = list	827:3:24486:24498	670729	0	True				
ANR	670841	AssignmentExpression	entry = list		670729	0		=			
ANR	670842	Identifier	entry		670729	0					
ANR	670843	Identifier	list		670729	1					
ANR	670844	ExpressionStatement	bauto = 0	828:3:24503:24512	670729	1	True				
ANR	670845	AssignmentExpression	bauto = 0		670729	0		=			
ANR	670846	Identifier	bauto		670729	0					
ANR	670847	PrimaryExpression	0		670729	1					
ANR	670848	ExpressionStatement	n = 0	829:3:24517:24522	670729	2	True				
ANR	670849	AssignmentExpression	n = 0		670729	0		=			
ANR	670850	Identifier	n		670729	0					
ANR	670851	PrimaryExpression	0		670729	1					
ANR	670852	WhileStatement	while ( i > 0 )		670729	3					
ANR	670853	Condition	i > 0	830:10:24534:24538	670729	0	True				
ANR	670854	RelationalExpression	i > 0		670729	0		>			
ANR	670855	Identifier	i		670729	0					
ANR	670856	PrimaryExpression	0		670729	1					
ANR	670857	CompoundStatement		18:17:519:519	670729	1					
ANR	670858	IfStatement	"if ( zend_hash_get_current_data ( target_hash , ( void * * ) & hash_entry ) == FAILURE )"		670729	0					
ANR	670859	Condition	"zend_hash_get_current_data ( target_hash , ( void * * ) & hash_entry ) == FAILURE"	831:8:24551:24623	670729	0	True				
ANR	670860	EqualityExpression	"zend_hash_get_current_data ( target_hash , ( void * * ) & hash_entry ) == FAILURE"		670729	0		==			
ANR	670861	CallExpression	"zend_hash_get_current_data ( target_hash , ( void * * ) & hash_entry )"		670729	0					
ANR	670862	Callee	zend_hash_get_current_data		670729	0					
ANR	670863	Identifier	zend_hash_get_current_data		670729	0					
ANR	670864	ArgumentList	target_hash		670729	1					
ANR	670865	Argument	target_hash		670729	0					
ANR	670866	Identifier	target_hash		670729	0					
ANR	670867	Argument	( void * * ) & hash_entry		670729	1					
ANR	670868	CastExpression	( void * * ) & hash_entry		670729	0					
ANR	670869	CastTarget	void * *		670729	0					
ANR	670870	UnaryOperationExpression	& hash_entry		670729	1					
ANR	670871	UnaryOperator	&		670729	0					
ANR	670872	Identifier	hash_entry		670729	1					
ANR	670873	Identifier	FAILURE		670729	1					
ANR	670874	CompoundStatement		19:83:604:604	670729	1					
ANR	670875	BreakStatement	break ;	832:5:24633:24638	670729	0	True				
ANR	670876	ExpressionStatement	convert_to_string_ex ( hash_entry )	834:4:24650:24682	670729	1	True				
ANR	670877	CallExpression	convert_to_string_ex ( hash_entry )		670729	0					
ANR	670878	Callee	convert_to_string_ex		670729	0					
ANR	670879	Identifier	convert_to_string_ex		670729	0					
ANR	670880	ArgumentList	hash_entry		670729	1					
ANR	670881	Argument	hash_entry		670729	0					
ANR	670882	Identifier	hash_entry		670729	0					
ANR	670883	IfStatement	"if ( strcasecmp ( Z_STRVAL_PP ( hash_entry ) , ""auto"" ) == 0 )"		670729	2					
ANR	670884	Condition	"strcasecmp ( Z_STRVAL_PP ( hash_entry ) , ""auto"" ) == 0"	835:8:24692:24739	670729	0	True				
ANR	670885	EqualityExpression	"strcasecmp ( Z_STRVAL_PP ( hash_entry ) , ""auto"" ) == 0"		670729	0		==			
ANR	670886	CallExpression	"strcasecmp ( Z_STRVAL_PP ( hash_entry ) , ""auto"" )"		670729	0					
ANR	670887	Callee	strcasecmp		670729	0					
ANR	670888	Identifier	strcasecmp		670729	0					
ANR	670889	ArgumentList	Z_STRVAL_PP ( hash_entry )		670729	1					
ANR	670890	Argument	Z_STRVAL_PP ( hash_entry )		670729	0					
ANR	670891	CallExpression	Z_STRVAL_PP ( hash_entry )		670729	0					
ANR	670892	Callee	Z_STRVAL_PP		670729	0					
ANR	670893	Identifier	Z_STRVAL_PP		670729	0					
ANR	670894	ArgumentList	hash_entry		670729	1					
ANR	670895	Argument	hash_entry		670729	0					
ANR	670896	Identifier	hash_entry		670729	0					
ANR	670897	Argument	"""auto"""		670729	1					
ANR	670898	PrimaryExpression	"""auto"""		670729	0					
ANR	670899	PrimaryExpression	0		670729	1					
ANR	670900	CompoundStatement		23:58:720:720	670729	1					
ANR	670901	IfStatement	if ( ! bauto )		670729	0					
ANR	670902	Condition	! bauto	836:9:24753:24758	670729	0	True				
ANR	670903	UnaryOperationExpression	! bauto		670729	0					
ANR	670904	UnaryOperator	!		670729	0					
ANR	670905	Identifier	bauto		670729	1					
ANR	670906	CompoundStatement		27:6:903:911	670729	1					
ANR	670907	IdentifierDeclStatement	const enum mbfl_no_encoding * src = MBSTRG ( default_detect_order_list ) ;	837:6:24769:24837	670729	0	True				
ANR	670908	IdentifierDecl	* src = MBSTRG ( default_detect_order_list )		670729	0					
ANR	670909	IdentifierDeclType	const enum mbfl_no_encoding *		670729	0					
ANR	670910	Identifier	src		670729	1					
ANR	670911	AssignmentExpression	* src = MBSTRG ( default_detect_order_list )		670729	2		=			
ANR	670912	Identifier	src		670729	0					
ANR	670913	CallExpression	MBSTRG ( default_detect_order_list )		670729	1					
ANR	670914	Callee	MBSTRG		670729	0					
ANR	670915	Identifier	MBSTRG		670729	0					
ANR	670916	ArgumentList	default_detect_order_list		670729	1					
ANR	670917	Argument	default_detect_order_list		670729	0					
ANR	670918	Identifier	default_detect_order_list		670729	0					
ANR	670919	IdentifierDeclStatement	const size_t identify_list_size = MBSTRG ( default_detect_order_list_size ) ;	838:6:24845:24917	670729	1	True				
ANR	670920	IdentifierDecl	identify_list_size = MBSTRG ( default_detect_order_list_size )		670729	0					
ANR	670921	IdentifierDeclType	const size_t		670729	0					
ANR	670922	Identifier	identify_list_size		670729	1					
ANR	670923	AssignmentExpression	identify_list_size = MBSTRG ( default_detect_order_list_size )		670729	2		=			
ANR	670924	Identifier	identify_list_size		670729	0					
ANR	670925	CallExpression	MBSTRG ( default_detect_order_list_size )		670729	1					
ANR	670926	Callee	MBSTRG		670729	0					
ANR	670927	Identifier	MBSTRG		670729	0					
ANR	670928	ArgumentList	default_detect_order_list_size		670729	1					
ANR	670929	Argument	default_detect_order_list_size		670729	0					
ANR	670930	Identifier	default_detect_order_list_size		670729	0					
ANR	670931	IdentifierDeclStatement	size_t j ;	839:6:24925:24933	670729	2	True				
ANR	670932	IdentifierDecl	j		670729	0					
ANR	670933	IdentifierDeclType	size_t		670729	0					
ANR	670934	Identifier	j		670729	1					
ANR	670935	ExpressionStatement	bauto = 1	841:6:24942:24951	670729	3	True				
ANR	670936	AssignmentExpression	bauto = 1		670729	0		=			
ANR	670937	Identifier	bauto		670729	0					
ANR	670938	PrimaryExpression	1		670729	1					
ANR	670939	ForStatement	for ( j = 0 ; j < identify_list_size ; j ++ )		670729	4					
ANR	670940	ForInit	j = 0 ;	842:11:24964:24969	670729	0	True				
ANR	670941	AssignmentExpression	j = 0		670729	0		=			
ANR	670942	Identifier	j		670729	0					
ANR	670943	PrimaryExpression	0		670729	1					
ANR	670944	Condition	j < identify_list_size	842:18:24971:24992	670729	1	True				
ANR	670945	RelationalExpression	j < identify_list_size		670729	0		<			
ANR	670946	Identifier	j		670729	0					
ANR	670947	Identifier	identify_list_size		670729	1					
ANR	670948	PostIncDecOperationExpression	j ++	842:42:24995:24997	670729	2	True				
ANR	670949	Identifier	j		670729	0					
ANR	670950	IncDec	++		670729	1					
ANR	670951	CompoundStatement		30:47:978:978	670729	3					
ANR	670952	ExpressionStatement	* entry ++ = mbfl_no2encoding ( * src ++ )	843:7:25009:25044	670729	0	True				
ANR	670953	AssignmentExpression	* entry ++ = mbfl_no2encoding ( * src ++ )		670729	0		=			
ANR	670954	UnaryOperationExpression	* entry ++		670729	0					
ANR	670955	UnaryOperator	*		670729	0					
ANR	670956	PostIncDecOperationExpression	entry ++		670729	1					
ANR	670957	Identifier	entry		670729	0					
ANR	670958	IncDec	++		670729	1					
ANR	670959	CallExpression	mbfl_no2encoding ( * src ++ )		670729	1					
ANR	670960	Callee	mbfl_no2encoding		670729	0					
ANR	670961	Identifier	mbfl_no2encoding		670729	0					
ANR	670962	ArgumentList	* src ++		670729	1					
ANR	670963	Argument	* src ++		670729	0					
ANR	670964	UnaryOperationExpression	* src ++		670729	0					
ANR	670965	UnaryOperator	*		670729	0					
ANR	670966	PostIncDecOperationExpression	src ++		670729	1					
ANR	670967	Identifier	src		670729	0					
ANR	670968	IncDec	++		670729	1					
ANR	670969	ExpressionStatement	n ++	844:7:25053:25056	670729	1	True				
ANR	670970	PostIncDecOperationExpression	n ++		670729	0					
ANR	670971	Identifier	n		670729	0					
ANR	670972	IncDec	++		670729	1					
ANR	670973	ElseStatement	else		670729	0					
ANR	670974	CompoundStatement		36:5:1069:1144	670729	0					
ANR	670975	IdentifierDeclStatement	const mbfl_encoding * encoding = mbfl_name2encoding ( Z_STRVAL_PP ( hash_entry ) ) ;	848:5:25091:25166	670729	0	True				
ANR	670976	IdentifierDecl	* encoding = mbfl_name2encoding ( Z_STRVAL_PP ( hash_entry ) )		670729	0					
ANR	670977	IdentifierDeclType	const mbfl_encoding *		670729	0					
ANR	670978	Identifier	encoding		670729	1					
ANR	670979	AssignmentExpression	* encoding = mbfl_name2encoding ( Z_STRVAL_PP ( hash_entry ) )		670729	2		=			
ANR	670980	Identifier	encoding		670729	0					
ANR	670981	CallExpression	mbfl_name2encoding ( Z_STRVAL_PP ( hash_entry ) )		670729	1					
ANR	670982	Callee	mbfl_name2encoding		670729	0					
ANR	670983	Identifier	mbfl_name2encoding		670729	0					
ANR	670984	ArgumentList	Z_STRVAL_PP ( hash_entry )		670729	1					
ANR	670985	Argument	Z_STRVAL_PP ( hash_entry )		670729	0					
ANR	670986	CallExpression	Z_STRVAL_PP ( hash_entry )		670729	0					
ANR	670987	Callee	Z_STRVAL_PP		670729	0					
ANR	670988	Identifier	Z_STRVAL_PP		670729	0					
ANR	670989	ArgumentList	hash_entry		670729	1					
ANR	670990	Argument	hash_entry		670729	0					
ANR	670991	Identifier	hash_entry		670729	0					
ANR	670992	IfStatement	if ( encoding )		670729	1					
ANR	670993	Condition	encoding	849:9:25177:25184	670729	0	True				
ANR	670994	Identifier	encoding		670729	0					
ANR	670995	CompoundStatement		37:19:1165:1165	670729	1					
ANR	670996	ExpressionStatement	* entry ++ = encoding	850:6:25195:25214	670729	0	True				
ANR	670997	AssignmentExpression	* entry ++ = encoding		670729	0		=			
ANR	670998	UnaryOperationExpression	* entry ++		670729	0					
ANR	670999	UnaryOperator	*		670729	0					
ANR	671000	PostIncDecOperationExpression	entry ++		670729	1					
ANR	671001	Identifier	entry		670729	0					
ANR	671002	IncDec	++		670729	1					
ANR	671003	Identifier	encoding		670729	1					
ANR	671004	ExpressionStatement	n ++	851:6:25222:25225	670729	1	True				
ANR	671005	PostIncDecOperationExpression	n ++		670729	0					
ANR	671006	Identifier	n		670729	0					
ANR	671007	IncDec	++		670729	1					
ANR	671008	ElseStatement	else		670729	0					
ANR	671009	CompoundStatement		40:12:1217:1217	670729	0					
ANR	671010	ExpressionStatement	ret = FAILURE	853:6:25247:25260	670729	0	True				
ANR	671011	AssignmentExpression	ret = FAILURE		670729	0		=			
ANR	671012	Identifier	ret		670729	0					
ANR	671013	Identifier	FAILURE		670729	1					
ANR	671014	ExpressionStatement	zend_hash_move_forward ( target_hash )	856:4:25279:25314	670729	3	True				
ANR	671015	CallExpression	zend_hash_move_forward ( target_hash )		670729	0					
ANR	671016	Callee	zend_hash_move_forward		670729	0					
ANR	671017	Identifier	zend_hash_move_forward		670729	0					
ANR	671018	ArgumentList	target_hash		670729	1					
ANR	671019	Argument	target_hash		670729	0					
ANR	671020	Identifier	target_hash		670729	0					
ANR	671021	ExpressionStatement	i --	857:4:25320:25323	670729	4	True				
ANR	671022	PostIncDecOperationExpression	i --		670729	0					
ANR	671023	Identifier	i		670729	0					
ANR	671024	IncDec	--		670729	1					
ANR	671025	IfStatement	if ( n > 0 )		670729	4					
ANR	671026	Condition	n > 0	859:7:25337:25341	670729	0	True				
ANR	671027	RelationalExpression	n > 0		670729	0		>			
ANR	671028	Identifier	n		670729	0					
ANR	671029	PrimaryExpression	0		670729	1					
ANR	671030	CompoundStatement		47:14:1322:1322	670729	1					
ANR	671031	IfStatement	if ( return_list )		670729	0					
ANR	671032	Condition	return_list	860:8:25354:25364	670729	0	True				
ANR	671033	Identifier	return_list		670729	0					
ANR	671034	CompoundStatement		48:21:1345:1345	670729	1					
ANR	671035	ExpressionStatement	* return_list = list	861:5:25374:25393	670729	0	True				
ANR	671036	AssignmentExpression	* return_list = list		670729	0		=			
ANR	671037	UnaryOperationExpression	* return_list		670729	0					
ANR	671038	UnaryOperator	*		670729	0					
ANR	671039	Identifier	return_list		670729	1					
ANR	671040	Identifier	list		670729	1					
ANR	671041	ElseStatement	else		670729	0					
ANR	671042	CompoundStatement		50:11:1384:1384	670729	0					
ANR	671043	ExpressionStatement	"pefree ( list , persistent )"	863:5:25413:25437	670729	0	True				
ANR	671044	CallExpression	"pefree ( list , persistent )"		670729	0					
ANR	671045	Callee	pefree		670729	0					
ANR	671046	Identifier	pefree		670729	0					
ANR	671047	ArgumentList	list		670729	1					
ANR	671048	Argument	list		670729	0					
ANR	671049	Identifier	list		670729	0					
ANR	671050	Argument	persistent		670729	1					
ANR	671051	Identifier	persistent		670729	0					
ANR	671052	ElseStatement	else		670729	0					
ANR	671053	CompoundStatement		53:10:1433:1433	670729	0					
ANR	671054	ExpressionStatement	"pefree ( list , persistent )"	866:4:25461:25485	670729	0	True				
ANR	671055	CallExpression	"pefree ( list , persistent )"		670729	0					
ANR	671056	Callee	pefree		670729	0					
ANR	671057	Identifier	pefree		670729	0					
ANR	671058	ArgumentList	list		670729	1					
ANR	671059	Argument	list		670729	0					
ANR	671060	Identifier	list		670729	0					
ANR	671061	Argument	persistent		670729	1					
ANR	671062	Identifier	persistent		670729	0					
ANR	671063	IfStatement	if ( return_list )		670729	1					
ANR	671064	Condition	return_list	867:8:25495:25505	670729	0	True				
ANR	671065	Identifier	return_list		670729	0					
ANR	671066	CompoundStatement		55:21:1486:1486	670729	1					
ANR	671067	ExpressionStatement	* return_list = NULL	868:5:25515:25534	670729	0	True				
ANR	671068	AssignmentExpression	* return_list = NULL		670729	0		=			
ANR	671069	UnaryOperationExpression	* return_list		670729	0					
ANR	671070	UnaryOperator	*		670729	0					
ANR	671071	Identifier	return_list		670729	1					
ANR	671072	Identifier	NULL		670729	1					
ANR	671073	ExpressionStatement	ret = FAILURE	870:4:25546:25559	670729	2	True				
ANR	671074	AssignmentExpression	ret = FAILURE		670729	0		=			
ANR	671075	Identifier	ret		670729	0					
ANR	671076	Identifier	FAILURE		670729	1					
ANR	671077	IfStatement	if ( return_size )		670729	5					
ANR	671078	Condition	return_size	872:7:25573:25583	670729	0	True				
ANR	671079	Identifier	return_size		670729	0					
ANR	671080	CompoundStatement		60:20:1564:1564	670729	1					
ANR	671081	ExpressionStatement	* return_size = n	873:4:25592:25608	670729	0	True				
ANR	671082	AssignmentExpression	* return_size = n		670729	0		=			
ANR	671083	UnaryOperationExpression	* return_size		670729	0					
ANR	671084	UnaryOperator	*		670729	0					
ANR	671085	Identifier	return_size		670729	1					
ANR	671086	Identifier	n		670729	1					
ANR	671087	ElseStatement	else		670729	0					
ANR	671088	CompoundStatement		63:9:1602:1602	670729	0					
ANR	671089	IfStatement	if ( return_list )		670729	0					
ANR	671090	Condition	return_list	876:7:25633:25643	670729	0	True				
ANR	671091	Identifier	return_list		670729	0					
ANR	671092	CompoundStatement		64:20:1624:1624	670729	1					
ANR	671093	ExpressionStatement	* return_list = NULL	877:4:25652:25671	670729	0	True				
ANR	671094	AssignmentExpression	* return_list = NULL		670729	0		=			
ANR	671095	UnaryOperationExpression	* return_list		670729	0					
ANR	671096	UnaryOperator	*		670729	0					
ANR	671097	Identifier	return_list		670729	1					
ANR	671098	Identifier	NULL		670729	1					
ANR	671099	IfStatement	if ( return_size )		670729	1					
ANR	671100	Condition	return_size	879:7:25685:25695	670729	0	True				
ANR	671101	Identifier	return_size		670729	0					
ANR	671102	CompoundStatement		67:20:1676:1676	670729	1					
ANR	671103	ExpressionStatement	* return_size = 0	880:4:25704:25720	670729	0	True				
ANR	671104	AssignmentExpression	* return_size = 0		670729	0		=			
ANR	671105	UnaryOperationExpression	* return_size		670729	0					
ANR	671106	UnaryOperator	*		670729	0					
ANR	671107	Identifier	return_size		670729	1					
ANR	671108	PrimaryExpression	0		670729	1					
ANR	671109	ExpressionStatement	ret = FAILURE	882:3:25730:25743	670729	2	True				
ANR	671110	AssignmentExpression	ret = FAILURE		670729	0		=			
ANR	671111	Identifier	ret		670729	0					
ANR	671112	Identifier	FAILURE		670729	1					
ANR	671113	ReturnStatement	return ret ;	886:1:25754:25764	670729	6	True				
ANR	671114	Identifier	ret		670729	0					
ANR	671115	ReturnType	static int		670729	1					
ANR	671116	Identifier	php_mb_parse_encoding_array		670729	2					
ANR	671117	ParameterList	"zval * array , const mbfl_encoding * * * return_list , size_t * return_size , int persistent TSRMLS_DC"		670729	3					
ANR	671118	Parameter	zval * array	812:28:23925:23935	670729	0	True				
ANR	671119	ParameterType	zval *		670729	0					
ANR	671120	Identifier	array		670729	1					
ANR	671121	Parameter	const mbfl_encoding * * * return_list	812:41:23938:23971	670729	1	True				
ANR	671122	ParameterType	const mbfl_encoding * * *		670729	0					
ANR	671123	Identifier	return_list		670729	1					
ANR	671124	Parameter	size_t * return_size	812:77:23974:23992	670729	2	True				
ANR	671125	ParameterType	size_t *		670729	0					
ANR	671126	Identifier	return_size		670729	1					
ANR	671127	Parameter	int persistent TSRMLS_DC	812:98:23995:24018	670729	3	True				
ANR	671128	ParameterType	int persistent		670729	0					
ANR	671129	Identifier	TSRMLS_DC		670729	1					
ANR	671130	CFGEntryNode	ENTRY		670729		True				
ANR	671131	CFGExitNode	EXIT		670729		True				
ANR	671132	Symbol	mbfl_name2encoding		670729						
ANR	671133	Symbol	bauto		670729						
ANR	671134	Symbol	MBSTRG		670729						
ANR	671135	Symbol	target_hash		670729						
ANR	671136	Symbol	* entry ++		670729						
ANR	671137	Symbol	TSRMLS_DC		670729						
ANR	671138	Symbol	default_detect_order_list_size		670729						
ANR	671139	Symbol	* return_list		670729						
ANR	671140	Symbol	default_detect_order_list		670729						
ANR	671141	Symbol	hash_entry		670729						
ANR	671142	Symbol	zend_hash_get_current_data		670729						
ANR	671143	Symbol	array		670729						
ANR	671144	Symbol	IS_ARRAY		670729						
ANR	671145	Symbol	Z_STRVAL_PP		670729						
ANR	671146	Symbol	return_size		670729						
ANR	671147	Symbol	Z_ARRVAL_P		670729						
ANR	671148	Symbol	persistent		670729						
ANR	671149	Symbol	strcasecmp		670729						
ANR	671150	Symbol	ret		670729						
ANR	671151	Symbol	SUCCESS		670729						
ANR	671152	Symbol	NULL		670729						
ANR	671153	Symbol	identify_list_size		670729						
ANR	671154	Symbol	zend_hash_num_elements		670729						
ANR	671155	Symbol	src		670729						
ANR	671156	Symbol	mbfl_no2encoding		670729						
ANR	671157	Symbol	* return_size		670729						
ANR	671158	Symbol	return_list		670729						
ANR	671159	Symbol	i		670729						
ANR	671160	Symbol	j		670729						
ANR	671161	Symbol	list		670729						
ANR	671162	Symbol	Z_TYPE_P		670729						
ANR	671163	Symbol	encoding		670729						
ANR	671164	Symbol	FAILURE		670729						
ANR	671165	Symbol	n		670729						
ANR	671166	Symbol	entry		670729						
ANR	671167	Symbol	size		670729						
ANR	671168	Symbol	pecalloc		670729						
ANR	671169	Symbol	* src ++		670729						
ANR	671170	Symbol	& hash_entry		670729						
ANR	671171	Function	php_mb_zend_encoding_name_getter	896:0:25978:26112							
ANR	671172	FunctionDef	php_mb_zend_encoding_name_getter (const zend_encoding * encoding)		671171	0					
ANR	671173	CompoundStatement		897:0:26061:26112	671171	0					
ANR	671174	ReturnStatement	return ( ( const mbfl_encoding * ) encoding ) -> name ;	898:1:26064:26110	671171	0	True				
ANR	671175	PtrMemberAccess	( ( const mbfl_encoding * ) encoding ) -> name		671171	0					
ANR	671176	CastExpression	( const mbfl_encoding * ) encoding		671171	0					
ANR	671177	CastTarget	const mbfl_encoding *		671171	0					
ANR	671178	Identifier	encoding		671171	1					
ANR	671179	Identifier	name		671171	1					
ANR	671180	ReturnType	static const char *		671171	1					
ANR	671181	Identifier	php_mb_zend_encoding_name_getter		671171	2					
ANR	671182	ParameterList	const zend_encoding * encoding		671171	3					
ANR	671183	Parameter	const zend_encoding * encoding	896:52:26030:26058	671171	0	True				
ANR	671184	ParameterType	const zend_encoding *		671171	0					
ANR	671185	Identifier	encoding		671171	1					
ANR	671186	CFGEntryNode	ENTRY		671171		True				
ANR	671187	CFGExitNode	EXIT		671171		True				
ANR	671188	Symbol	* encoding		671171						
ANR	671189	Symbol	encoding		671171						
ANR	671190	Symbol	( ( const mbfl_encoding * ) encoding ) -> name		671171						
ANR	671191	Function	php_mb_zend_encoding_lexer_compatibility_checker	901:0:26115:26452							
ANR	671192	FunctionDef	php_mb_zend_encoding_lexer_compatibility_checker (const zend_encoding * _encoding)		671191	0					
ANR	671193	CompoundStatement		902:0:26207:26452	671191	0					
ANR	671194	IdentifierDeclStatement	const mbfl_encoding * encoding = ( const mbfl_encoding * ) _encoding ;	903:1:26210:26273	671191	0	True				
ANR	671195	IdentifierDecl	* encoding = ( const mbfl_encoding * ) _encoding		671191	0					
ANR	671196	IdentifierDeclType	const mbfl_encoding *		671191	0					
ANR	671197	Identifier	encoding		671191	1					
ANR	671198	AssignmentExpression	* encoding = ( const mbfl_encoding * ) _encoding		671191	2		=			
ANR	671199	Identifier	encoding		671191	0					
ANR	671200	CastExpression	( const mbfl_encoding * ) _encoding		671191	1					
ANR	671201	CastTarget	const mbfl_encoding *		671191	0					
ANR	671202	Identifier	_encoding		671191	1					
ANR	671203	IfStatement	if ( encoding -> flag & MBFL_ENCTYPE_SBCS )		671191	1					
ANR	671204	Condition	encoding -> flag & MBFL_ENCTYPE_SBCS	904:5:26280:26313	671191	0	True				
ANR	671205	BitAndExpression	encoding -> flag & MBFL_ENCTYPE_SBCS		671191	0		&			
ANR	671206	PtrMemberAccess	encoding -> flag		671191	0					
ANR	671207	Identifier	encoding		671191	0					
ANR	671208	Identifier	flag		671191	1					
ANR	671209	Identifier	MBFL_ENCTYPE_SBCS		671191	1					
ANR	671210	CompoundStatement		3:41:108:108	671191	1					
ANR	671211	ReturnStatement	return 1 ;	905:2:26320:26328	671191	0	True				
ANR	671212	PrimaryExpression	1		671191	0					
ANR	671213	IfStatement	if ( ( encoding -> flag & ( MBFL_ENCTYPE_MBCS | MBFL_ENCTYPE_GL_UNSAFE ) ) == MBFL_ENCTYPE_MBCS )		671191	2					
ANR	671214	Condition	( encoding -> flag & ( MBFL_ENCTYPE_MBCS | MBFL_ENCTYPE_GL_UNSAFE ) ) == MBFL_ENCTYPE_MBCS	907:5:26338:26421	671191	0	True				
ANR	671215	EqualityExpression	( encoding -> flag & ( MBFL_ENCTYPE_MBCS | MBFL_ENCTYPE_GL_UNSAFE ) ) == MBFL_ENCTYPE_MBCS		671191	0		==			
ANR	671216	BitAndExpression	encoding -> flag & ( MBFL_ENCTYPE_MBCS | MBFL_ENCTYPE_GL_UNSAFE )		671191	0		&			
ANR	671217	PtrMemberAccess	encoding -> flag		671191	0					
ANR	671218	Identifier	encoding		671191	0					
ANR	671219	Identifier	flag		671191	1					
ANR	671220	InclusiveOrExpression	MBFL_ENCTYPE_MBCS | MBFL_ENCTYPE_GL_UNSAFE		671191	1		|			
ANR	671221	Identifier	MBFL_ENCTYPE_MBCS		671191	0					
ANR	671222	Identifier	MBFL_ENCTYPE_GL_UNSAFE		671191	1					
ANR	671223	Identifier	MBFL_ENCTYPE_MBCS		671191	1					
ANR	671224	CompoundStatement		6:91:216:216	671191	1					
ANR	671225	ReturnStatement	return 1 ;	908:2:26428:26436	671191	0	True				
ANR	671226	PrimaryExpression	1		671191	0					
ANR	671227	ReturnStatement	return 0 ;	910:1:26442:26450	671191	3	True				
ANR	671228	PrimaryExpression	0		671191	0					
ANR	671229	ReturnType	static int		671191	1					
ANR	671230	Identifier	php_mb_zend_encoding_lexer_compatibility_checker		671191	2					
ANR	671231	ParameterList	const zend_encoding * _encoding		671191	3					
ANR	671232	Parameter	const zend_encoding * _encoding	901:60:26175:26204	671191	0	True				
ANR	671233	ParameterType	const zend_encoding *		671191	0					
ANR	671234	Identifier	_encoding		671191	1					
ANR	671235	CFGEntryNode	ENTRY		671191		True				
ANR	671236	CFGExitNode	EXIT		671191		True				
ANR	671237	Symbol	* encoding		671191						
ANR	671238	Symbol	encoding -> flag		671191						
ANR	671239	Symbol	_encoding		671191						
ANR	671240	Symbol	MBFL_ENCTYPE_GL_UNSAFE		671191						
ANR	671241	Symbol	MBFL_ENCTYPE_MBCS		671191						
ANR	671242	Symbol	encoding		671191						
ANR	671243	Symbol	MBFL_ENCTYPE_SBCS		671191						
ANR	671244	Function	php_mb_zend_encoding_detector	913:0:26455:27032							
ANR	671245	FunctionDef	"php_mb_zend_encoding_detector (const unsigned char * arg_string , size_t arg_length , const zend_encoding * * list , size_t list_size TSRMLS_DC)"		671244	0					
ANR	671246	CompoundStatement		914:0:26621:27032	671244	0					
ANR	671247	IdentifierDeclStatement	mbfl_string string ;	915:1:26624:26642	671244	0	True				
ANR	671248	IdentifierDecl	string		671244	0					
ANR	671249	IdentifierDeclType	mbfl_string		671244	0					
ANR	671250	Identifier	string		671244	1					
ANR	671251	IfStatement	if ( ! list )		671244	1					
ANR	671252	Condition	! list	917:5:26650:26654	671244	0	True				
ANR	671253	UnaryOperationExpression	! list		671244	0					
ANR	671254	UnaryOperator	!		671244	0					
ANR	671255	Identifier	list		671244	1					
ANR	671256	CompoundStatement		4:12:35:35	671244	1					
ANR	671257	ExpressionStatement	list = ( const zend_encoding * * ) MBSTRG ( current_detect_order_list )	918:2:26661:26725	671244	0	True				
ANR	671258	AssignmentExpression	list = ( const zend_encoding * * ) MBSTRG ( current_detect_order_list )		671244	0		=			
ANR	671259	Identifier	list		671244	0					
ANR	671260	CastExpression	( const zend_encoding * * ) MBSTRG ( current_detect_order_list )		671244	1					
ANR	671261	CastTarget	const zend_encoding * *		671244	0					
ANR	671262	CallExpression	MBSTRG ( current_detect_order_list )		671244	1					
ANR	671263	Callee	MBSTRG		671244	0					
ANR	671264	Identifier	MBSTRG		671244	0					
ANR	671265	ArgumentList	current_detect_order_list		671244	1					
ANR	671266	Argument	current_detect_order_list		671244	0					
ANR	671267	Identifier	current_detect_order_list		671244	0					
ANR	671268	ExpressionStatement	list_size = MBSTRG ( current_detect_order_list_size )	919:2:26729:26779	671244	1	True				
ANR	671269	AssignmentExpression	list_size = MBSTRG ( current_detect_order_list_size )		671244	0		=			
ANR	671270	Identifier	list_size		671244	0					
ANR	671271	CallExpression	MBSTRG ( current_detect_order_list_size )		671244	1					
ANR	671272	Callee	MBSTRG		671244	0					
ANR	671273	Identifier	MBSTRG		671244	0					
ANR	671274	ArgumentList	current_detect_order_list_size		671244	1					
ANR	671275	Argument	current_detect_order_list_size		671244	0					
ANR	671276	Identifier	current_detect_order_list_size		671244	0					
ANR	671277	ExpressionStatement	mbfl_string_init ( & string )	922:1:26786:26811	671244	2	True				
ANR	671278	CallExpression	mbfl_string_init ( & string )		671244	0					
ANR	671279	Callee	mbfl_string_init		671244	0					
ANR	671280	Identifier	mbfl_string_init		671244	0					
ANR	671281	ArgumentList	& string		671244	1					
ANR	671282	Argument	& string		671244	0					
ANR	671283	UnaryOperationExpression	& string		671244	0					
ANR	671284	UnaryOperator	&		671244	0					
ANR	671285	Identifier	string		671244	1					
ANR	671286	ExpressionStatement	string . no_language = MBSTRG ( language )	923:1:26814:26851	671244	3	True				
ANR	671287	AssignmentExpression	string . no_language = MBSTRG ( language )		671244	0		=			
ANR	671288	MemberAccess	string . no_language		671244	0					
ANR	671289	Identifier	string		671244	0					
ANR	671290	Identifier	no_language		671244	1					
ANR	671291	CallExpression	MBSTRG ( language )		671244	1					
ANR	671292	Callee	MBSTRG		671244	0					
ANR	671293	Identifier	MBSTRG		671244	0					
ANR	671294	ArgumentList	language		671244	1					
ANR	671295	Argument	language		671244	0					
ANR	671296	Identifier	language		671244	0					
ANR	671297	ExpressionStatement	string . val = ( unsigned char * ) arg_string	924:1:26854:26894	671244	4	True				
ANR	671298	AssignmentExpression	string . val = ( unsigned char * ) arg_string		671244	0		=			
ANR	671299	MemberAccess	string . val		671244	0					
ANR	671300	Identifier	string		671244	0					
ANR	671301	Identifier	val		671244	1					
ANR	671302	CastExpression	( unsigned char * ) arg_string		671244	1					
ANR	671303	CastTarget	unsigned char *		671244	0					
ANR	671304	Identifier	arg_string		671244	1					
ANR	671305	ExpressionStatement	string . len = arg_length	925:1:26897:26920	671244	5	True				
ANR	671306	AssignmentExpression	string . len = arg_length		671244	0		=			
ANR	671307	MemberAccess	string . len		671244	0					
ANR	671308	Identifier	string		671244	0					
ANR	671309	Identifier	len		671244	1					
ANR	671310	Identifier	arg_length		671244	1					
ANR	671311	ReturnStatement	"return ( const zend_encoding * ) mbfl_identify_encoding2 ( & string , ( const mbfl_encoding * * ) list , list_size , 0 ) ;"	926:1:26923:27030	671244	6	True				
ANR	671312	CastExpression	"( const zend_encoding * ) mbfl_identify_encoding2 ( & string , ( const mbfl_encoding * * ) list , list_size , 0 )"		671244	0					
ANR	671313	CastTarget	const zend_encoding *		671244	0					
ANR	671314	CallExpression	"mbfl_identify_encoding2 ( & string , ( const mbfl_encoding * * ) list , list_size , 0 )"		671244	1					
ANR	671315	Callee	mbfl_identify_encoding2		671244	0					
ANR	671316	Identifier	mbfl_identify_encoding2		671244	0					
ANR	671317	ArgumentList	& string		671244	1					
ANR	671318	Argument	& string		671244	0					
ANR	671319	UnaryOperationExpression	& string		671244	0					
ANR	671320	UnaryOperator	&		671244	0					
ANR	671321	Identifier	string		671244	1					
ANR	671322	Argument	( const mbfl_encoding * * ) list		671244	1					
ANR	671323	CastExpression	( const mbfl_encoding * * ) list		671244	0					
ANR	671324	CastTarget	const mbfl_encoding * *		671244	0					
ANR	671325	Identifier	list		671244	1					
ANR	671326	Argument	list_size		671244	2					
ANR	671327	Identifier	list_size		671244	0					
ANR	671328	Argument	0		671244	3					
ANR	671329	PrimaryExpression	0		671244	0					
ANR	671330	ReturnType	static const zend_encoding *		671244	1					
ANR	671331	Identifier	php_mb_zend_encoding_detector		671244	2					
ANR	671332	ParameterList	"const unsigned char * arg_string , size_t arg_length , const zend_encoding * * list , size_t list_size TSRMLS_DC"		671244	3					
ANR	671333	Parameter	const unsigned char * arg_string	913:58:26513:26543	671244	0	True				
ANR	671334	ParameterType	const unsigned char *		671244	0					
ANR	671335	Identifier	arg_string		671244	1					
ANR	671336	Parameter	size_t arg_length	913:91:26546:26562	671244	1	True				
ANR	671337	ParameterType	size_t		671244	0					
ANR	671338	Identifier	arg_length		671244	1					
ANR	671339	Parameter	const zend_encoding * * list	913:110:26565:26590	671244	2	True				
ANR	671340	ParameterType	const zend_encoding * *		671244	0					
ANR	671341	Identifier	list		671244	1					
ANR	671342	Parameter	size_t list_size TSRMLS_DC	913:138:26593:26618	671244	3	True				
ANR	671343	ParameterType	size_t list_size		671244	0					
ANR	671344	Identifier	TSRMLS_DC		671244	1					
ANR	671345	CFGEntryNode	ENTRY		671244		True				
ANR	671346	CFGExitNode	EXIT		671244		True				
ANR	671347	Symbol	& string		671244						
ANR	671348	Symbol	string		671244						
ANR	671349	Symbol	MBSTRG		671244						
ANR	671350	Symbol	language		671244						
ANR	671351	Symbol	string . val		671244						
ANR	671352	Symbol	arg_length		671244						
ANR	671353	Symbol	list_size		671244						
ANR	671354	Symbol	list		671244						
ANR	671355	Symbol	TSRMLS_DC		671244						
ANR	671356	Symbol	arg_string		671244						
ANR	671357	Symbol	current_detect_order_list_size		671244						
ANR	671358	Symbol	current_detect_order_list		671244						
ANR	671359	Symbol	string . no_language		671244						
ANR	671360	Symbol	mbfl_identify_encoding2		671244						
ANR	671361	Symbol	string . len		671244						
ANR	671362	DeclStmt									
ANR	671363	Decl							mbfl_string	mbfl_string	string
ANR	671364	Decl							mbfl_string	mbfl_string	result
ANR	671365	DeclStmt									
ANR	671366	Decl							mbfl_buffer_converter	mbfl_buffer_converter *	convd
ANR	671367	DeclStmt									
ANR	671368	Decl							int	int	status
ANR	671369	Decl							int	int	loc
ANR	671370	Function	php_mb_zend_encoding_list_parser	973:0:28377:28702							
ANR	671371	FunctionDef	"php_mb_zend_encoding_list_parser (const char * encoding_list , size_t encoding_list_len , const zend_encoding * * * return_list , size_t * return_size , int persistent TSRMLS_DC)"		671370	0					
ANR	671372	CompoundStatement		974:0:28557:28702	671370	0					
ANR	671373	Statement	return	975:1:28560:28565	671370	0	True				
ANR	671374	Statement	php_mb_parse_encoding_list	975:8:28567:28592	671370	1	True				
ANR	671375	Statement	(	975:34:28593:28593	671370	2	True				
ANR	671376	Statement	encoding_list	975:35:28594:28606	671370	3	True				
ANR	671377	Statement	","	975:48:28607:28607	671370	4	True				
ANR	671378	Statement	encoding_list_len	975:50:28609:28625	671370	5	True				
ANR	671379	Statement	","	975:67:28626:28626	671370	6	True				
ANR	671380	Statement	(	975:69:28628:28628	671370	7	True				
ANR	671381	Statement	const	975:70:28629:28633	671370	8	True				
ANR	671382	Statement	mbfl_encoding	975:76:28635:28647	671370	9	True				
ANR	671383	Statement	*	975:90:28649:28649	671370	10	True				
ANR	671384	Statement	*	975:91:28650:28650	671370	11	True				
ANR	671385	Statement	*	975:92:28651:28651	671370	12	True				
ANR	671386	Statement	)	975:93:28652:28652	671370	13	True				
ANR	671387	Statement	return_list	975:94:28653:28663	671370	14	True				
ANR	671388	Statement	","	975:105:28664:28664	671370	15	True				
ANR	671389	Statement	return_size	975:107:28666:28676	671370	16	True				
ANR	671390	Statement	","	975:118:28677:28677	671370	17	True				
ANR	671391	Statement	persistent	975:120:28679:28688	671370	18	True				
ANR	671392	Statement	TSRMLS_CC	975:131:28690:28698	671370	19	True				
ANR	671393	Statement	)	975:140:28699:28699	671370	20	True				
ANR	671394	ExpressionStatement		975:141:28700:28700	671370	21	True				
ANR	671395	ReturnType	static int		671370	1					
ANR	671396	Identifier	php_mb_zend_encoding_list_parser		671370	2					
ANR	671397	ParameterList	"const char * encoding_list , size_t encoding_list_len , const zend_encoding * * * return_list , size_t * return_size , int persistent TSRMLS_DC"		671370	3					
ANR	671398	Parameter	const char * encoding_list	973:44:28421:28445	671370	0	True				
ANR	671399	ParameterType	const char *		671370	0					
ANR	671400	Identifier	encoding_list		671370	1					
ANR	671401	Parameter	size_t encoding_list_len	973:71:28448:28471	671370	1	True				
ANR	671402	ParameterType	size_t		671370	0					
ANR	671403	Identifier	encoding_list_len		671370	1					
ANR	671404	Parameter	const zend_encoding * * * return_list	973:97:28474:28507	671370	2	True				
ANR	671405	ParameterType	const zend_encoding * * *		671370	0					
ANR	671406	Identifier	return_list		671370	1					
ANR	671407	Parameter	size_t * return_size	973:133:28510:28528	671370	3	True				
ANR	671408	ParameterType	size_t *		671370	0					
ANR	671409	Identifier	return_size		671370	1					
ANR	671410	Parameter	int persistent TSRMLS_DC	973:154:28531:28554	671370	4	True				
ANR	671411	ParameterType	int persistent		671370	0					
ANR	671412	Identifier	TSRMLS_DC		671370	1					
ANR	671413	CFGEntryNode	ENTRY		671370		True				
ANR	671414	CFGExitNode	EXIT		671370		True				
ANR	671415	Symbol	encoding_list_len		671370						
ANR	671416	Symbol	return_list		671370						
ANR	671417	Symbol	return_size		671370						
ANR	671418	Symbol	TSRMLS_DC		671370						
ANR	671419	Symbol	encoding_list		671370						
ANR	671420	DeclStmt									
ANR	671421	Decl							zend_multibyte_functions	zend_multibyte_functions	php_mb_zend_multibyte_functions
ANR	671422	DeclStmt									
ANR	671423	Decl							int	"int ( void * opaque , const char * str , size_t str_len )"	_php_mb_match_regex
ANR	671424	DeclStmt									
ANR	671425	Decl							void	void ( void * opaque )	_php_mb_free_regex
ANR	671426	DeclStmt									
ANR	671427	Decl							php_mb_regex_t	php_mb_regex_t *	retval
ANR	671428	DeclStmt									
ANR	671429	Decl							OnigErrorInfo	OnigErrorInfo	err_info
ANR	671430	DeclStmt									
ANR	671431	Decl							int	int	err_code
ANR	671432	DeclStmt									
ANR	671433	Decl							OnigUChar	OnigUChar [ ONIG_MAX_ERROR_MESSAGE_LEN ]	err_str
ANR	671434	Function	_php_mb_match_regex	1029:0:30267:30543							
ANR	671435	FunctionDef	"_php_mb_match_regex (void * opaque , const char * str , size_t str_len)"		671434	0					
ANR	671436	CompoundStatement		1030:0:30345:30543	671434	0					
ANR	671437	ReturnStatement	"return onig_search ( ( php_mb_regex_t * ) opaque , ( const OnigUChar * ) str , ( const OnigUChar * ) str + str_len , ( const OnigUChar * ) str , ( const OnigUChar * ) str + str_len , NULL , ONIG_OPTION_NONE ) >= 0 ;"	1031:1:30348:30541	671434	0	True				
ANR	671438	RelationalExpression	"onig_search ( ( php_mb_regex_t * ) opaque , ( const OnigUChar * ) str , ( const OnigUChar * ) str + str_len , ( const OnigUChar * ) str , ( const OnigUChar * ) str + str_len , NULL , ONIG_OPTION_NONE ) >= 0"		671434	0		>=			
ANR	671439	CallExpression	"onig_search ( ( php_mb_regex_t * ) opaque , ( const OnigUChar * ) str , ( const OnigUChar * ) str + str_len , ( const OnigUChar * ) str , ( const OnigUChar * ) str + str_len , NULL , ONIG_OPTION_NONE )"		671434	0					
ANR	671440	Callee	onig_search		671434	0					
ANR	671441	Identifier	onig_search		671434	0					
ANR	671442	ArgumentList	( php_mb_regex_t * ) opaque		671434	1					
ANR	671443	Argument	( php_mb_regex_t * ) opaque		671434	0					
ANR	671444	CastExpression	( php_mb_regex_t * ) opaque		671434	0					
ANR	671445	CastTarget	php_mb_regex_t *		671434	0					
ANR	671446	Identifier	opaque		671434	1					
ANR	671447	Argument	( const OnigUChar * ) str		671434	1					
ANR	671448	CastExpression	( const OnigUChar * ) str		671434	0					
ANR	671449	CastTarget	const OnigUChar *		671434	0					
ANR	671450	Identifier	str		671434	1					
ANR	671451	Argument	( const OnigUChar * ) str + str_len		671434	2					
ANR	671452	AdditiveExpression	( const OnigUChar * ) str + str_len		671434	0		+			
ANR	671453	CastExpression	( const OnigUChar * ) str		671434	0					
ANR	671454	CastTarget	const OnigUChar *		671434	0					
ANR	671455	Identifier	str		671434	1					
ANR	671456	Identifier	str_len		671434	1					
ANR	671457	Argument	( const OnigUChar * ) str		671434	3					
ANR	671458	CastExpression	( const OnigUChar * ) str		671434	0					
ANR	671459	CastTarget	const OnigUChar *		671434	0					
ANR	671460	Identifier	str		671434	1					
ANR	671461	Argument	( const OnigUChar * ) str + str_len		671434	4					
ANR	671462	AdditiveExpression	( const OnigUChar * ) str + str_len		671434	0		+			
ANR	671463	CastExpression	( const OnigUChar * ) str		671434	0					
ANR	671464	CastTarget	const OnigUChar *		671434	0					
ANR	671465	Identifier	str		671434	1					
ANR	671466	Identifier	str_len		671434	1					
ANR	671467	Argument	NULL		671434	5					
ANR	671468	Identifier	NULL		671434	0					
ANR	671469	Argument	ONIG_OPTION_NONE		671434	6					
ANR	671470	Identifier	ONIG_OPTION_NONE		671434	0					
ANR	671471	PrimaryExpression	0		671434	1					
ANR	671472	ReturnType	static int		671434	1					
ANR	671473	Identifier	_php_mb_match_regex		671434	2					
ANR	671474	ParameterList	"void * opaque , const char * str , size_t str_len"		671434	3					
ANR	671475	Parameter	void * opaque	1029:31:30298:30309	671434	0	True				
ANR	671476	ParameterType	void *		671434	0					
ANR	671477	Identifier	opaque		671434	1					
ANR	671478	Parameter	const char * str	1029:45:30312:30326	671434	1	True				
ANR	671479	ParameterType	const char *		671434	0					
ANR	671480	Identifier	str		671434	1					
ANR	671481	Parameter	size_t str_len	1029:62:30329:30342	671434	2	True				
ANR	671482	ParameterType	size_t		671434	0					
ANR	671483	Identifier	str_len		671434	1					
ANR	671484	CFGEntryNode	ENTRY		671434		True				
ANR	671485	CFGExitNode	EXIT		671434		True				
ANR	671486	Symbol	str		671434						
ANR	671487	Symbol	opaque		671434						
ANR	671488	Symbol	NULL		671434						
ANR	671489	Symbol	str_len		671434						
ANR	671490	Symbol	ONIG_OPTION_NONE		671434						
ANR	671491	Symbol	onig_search		671434						
ANR	671492	Function	_php_mb_free_regex	1038:0:30585:30670							
ANR	671493	FunctionDef	_php_mb_free_regex (void * opaque)		671492	0					
ANR	671494	CompoundStatement		1039:0:30630:30670	671492	0					
ANR	671495	ExpressionStatement	onig_free ( ( php_mb_regex_t * ) opaque )	1040:1:30633:30668	671492	0	True				
ANR	671496	CallExpression	onig_free ( ( php_mb_regex_t * ) opaque )		671492	0					
ANR	671497	Callee	onig_free		671492	0					
ANR	671498	Identifier	onig_free		671492	0					
ANR	671499	ArgumentList	( php_mb_regex_t * ) opaque		671492	1					
ANR	671500	Argument	( php_mb_regex_t * ) opaque		671492	0					
ANR	671501	CastExpression	( php_mb_regex_t * ) opaque		671492	0					
ANR	671502	CastTarget	php_mb_regex_t *		671492	0					
ANR	671503	Identifier	opaque		671492	1					
ANR	671504	ReturnType	static void		671492	1					
ANR	671505	Identifier	_php_mb_free_regex		671492	2					
ANR	671506	ParameterList	void * opaque		671492	3					
ANR	671507	Parameter	void * opaque	1038:31:30616:30627	671492	0	True				
ANR	671508	ParameterType	void *		671492	0					
ANR	671509	Identifier	opaque		671492	1					
ANR	671510	CFGEntryNode	ENTRY		671492		True				
ANR	671511	CFGExitNode	EXIT		671492		True				
ANR	671512	Symbol	opaque		671492						
ANR	671513	DeclStmt									
ANR	671514	Decl							pcre	pcre *	retval
ANR	671515	DeclStmt									
ANR	671516	Decl							const char	const char *	err_str
ANR	671517	DeclStmt									
ANR	671518	Decl							int	int	err_offset
ANR	671519	Function	_php_mb_match_regex	1060:0:31124:31287							
ANR	671520	FunctionDef	"_php_mb_match_regex (void * opaque , const char * str , size_t str_len)"		671519	0					
ANR	671521	CompoundStatement		1061:0:31202:31287	671519	0					
ANR	671522	ReturnStatement	"return pcre_exec ( ( pcre * ) opaque , NULL , str , ( int ) str_len , 0 , 0 , NULL , 0 ) >= 0 ;"	1062:1:31205:31285	671519	0	True				
ANR	671523	RelationalExpression	"pcre_exec ( ( pcre * ) opaque , NULL , str , ( int ) str_len , 0 , 0 , NULL , 0 ) >= 0"		671519	0		>=			
ANR	671524	CallExpression	"pcre_exec ( ( pcre * ) opaque , NULL , str , ( int ) str_len , 0 , 0 , NULL , 0 )"		671519	0					
ANR	671525	Callee	pcre_exec		671519	0					
ANR	671526	Identifier	pcre_exec		671519	0					
ANR	671527	ArgumentList	( pcre * ) opaque		671519	1					
ANR	671528	Argument	( pcre * ) opaque		671519	0					
ANR	671529	CastExpression	( pcre * ) opaque		671519	0					
ANR	671530	CastTarget	pcre *		671519	0					
ANR	671531	Identifier	opaque		671519	1					
ANR	671532	Argument	NULL		671519	1					
ANR	671533	Identifier	NULL		671519	0					
ANR	671534	Argument	str		671519	2					
ANR	671535	Identifier	str		671519	0					
ANR	671536	Argument	( int ) str_len		671519	3					
ANR	671537	CastExpression	( int ) str_len		671519	0					
ANR	671538	CastTarget	int		671519	0					
ANR	671539	Identifier	str_len		671519	1					
ANR	671540	Argument	0		671519	4					
ANR	671541	PrimaryExpression	0		671519	0					
ANR	671542	Argument	0		671519	5					
ANR	671543	PrimaryExpression	0		671519	0					
ANR	671544	Argument	NULL		671519	6					
ANR	671545	Identifier	NULL		671519	0					
ANR	671546	Argument	0		671519	7					
ANR	671547	PrimaryExpression	0		671519	0					
ANR	671548	PrimaryExpression	0		671519	1					
ANR	671549	ReturnType	static int		671519	1					
ANR	671550	Identifier	_php_mb_match_regex		671519	2					
ANR	671551	ParameterList	"void * opaque , const char * str , size_t str_len"		671519	3					
ANR	671552	Parameter	void * opaque	1060:31:31155:31166	671519	0	True				
ANR	671553	ParameterType	void *		671519	0					
ANR	671554	Identifier	opaque		671519	1					
ANR	671555	Parameter	const char * str	1060:45:31169:31183	671519	1	True				
ANR	671556	ParameterType	const char *		671519	0					
ANR	671557	Identifier	str		671519	1					
ANR	671558	Parameter	size_t str_len	1060:62:31186:31199	671519	2	True				
ANR	671559	ParameterType	size_t		671519	0					
ANR	671560	Identifier	str_len		671519	1					
ANR	671561	CFGEntryNode	ENTRY		671519		True				
ANR	671562	CFGExitNode	EXIT		671519		True				
ANR	671563	Symbol	str		671519						
ANR	671564	Symbol	opaque		671519						
ANR	671565	Symbol	NULL		671519						
ANR	671566	Symbol	str_len		671519						
ANR	671567	Symbol	pcre_exec		671519						
ANR	671568	Function	_php_mb_free_regex	1068:0:31329:31396							
ANR	671569	FunctionDef	_php_mb_free_regex (void * opaque)		671568	0					
ANR	671570	CompoundStatement		1069:0:31374:31396	671568	0					
ANR	671571	ExpressionStatement	pcre_free ( opaque )	1070:1:31377:31394	671568	0	True				
ANR	671572	CallExpression	pcre_free ( opaque )		671568	0					
ANR	671573	Callee	pcre_free		671568	0					
ANR	671574	Identifier	pcre_free		671568	0					
ANR	671575	ArgumentList	opaque		671568	1					
ANR	671576	Argument	opaque		671568	0					
ANR	671577	Identifier	opaque		671568	0					
ANR	671578	ReturnType	static void		671568	1					
ANR	671579	Identifier	_php_mb_free_regex		671568	2					
ANR	671580	ParameterList	void * opaque		671568	3					
ANR	671581	Parameter	void * opaque	1068:31:31360:31371	671568	0	True				
ANR	671582	ParameterType	void *		671568	0					
ANR	671583	Identifier	opaque		671568	1					
ANR	671584	CFGEntryNode	ENTRY		671568		True				
ANR	671585	CFGExitNode	EXIT		671568		True				
ANR	671586	Symbol	opaque		671568						
ANR	671587	Function	php_mb_nls_get_default_detect_order_list	1076:0:31467:32113							
ANR	671588	FunctionDef	"php_mb_nls_get_default_detect_order_list (enum mbfl_no_language lang , enum mbfl_no_encoding * * plist , size_t * plist_size)"		671587	0					
ANR	671589	CompoundStatement		1077:0:31598:32113	671587	0					
ANR	671590	IdentifierDeclStatement	size_t i ;	1078:1:31601:31609	671587	0	True				
ANR	671591	IdentifierDecl	i		671587	0					
ANR	671592	IdentifierDeclType	size_t		671587	0					
ANR	671593	Identifier	i		671587	1					
ANR	671594	ExpressionStatement	* plist = ( enum mbfl_no_encoding * ) php_mb_default_identify_list_neut	1080:1:31613:31681	671587	1	True				
ANR	671595	AssignmentExpression	* plist = ( enum mbfl_no_encoding * ) php_mb_default_identify_list_neut		671587	0		=			
ANR	671596	UnaryOperationExpression	* plist		671587	0					
ANR	671597	UnaryOperator	*		671587	0					
ANR	671598	Identifier	plist		671587	1					
ANR	671599	CastExpression	( enum mbfl_no_encoding * ) php_mb_default_identify_list_neut		671587	1					
ANR	671600	CastTarget	enum mbfl_no_encoding *		671587	0					
ANR	671601	Identifier	php_mb_default_identify_list_neut		671587	1					
ANR	671602	ExpressionStatement	* plist_size = sizeof ( php_mb_default_identify_list_neut ) / sizeof ( php_mb_default_identify_list_neut [ 0 ] )	1081:1:31684:31786	671587	2	True				
ANR	671603	AssignmentExpression	* plist_size = sizeof ( php_mb_default_identify_list_neut ) / sizeof ( php_mb_default_identify_list_neut [ 0 ] )		671587	0		=			
ANR	671604	UnaryOperationExpression	* plist_size		671587	0					
ANR	671605	UnaryOperator	*		671587	0					
ANR	671606	Identifier	plist_size		671587	1					
ANR	671607	MultiplicativeExpression	sizeof ( php_mb_default_identify_list_neut ) / sizeof ( php_mb_default_identify_list_neut [ 0 ] )		671587	1		/			
ANR	671608	SizeofExpression	sizeof ( php_mb_default_identify_list_neut )		671587	0					
ANR	671609	Sizeof	sizeof		671587	0					
ANR	671610	SizeofOperand	php_mb_default_identify_list_neut		671587	1					
ANR	671611	SizeofExpression	sizeof ( php_mb_default_identify_list_neut [ 0 ] )		671587	1					
ANR	671612	Sizeof	sizeof		671587	0					
ANR	671613	ArrayIndexing	php_mb_default_identify_list_neut [ 0 ]		671587	1					
ANR	671614	Identifier	php_mb_default_identify_list_neut		671587	0					
ANR	671615	PrimaryExpression	0		671587	1					
ANR	671616	ForStatement	for ( i = 0 ; i < sizeof ( php_mb_default_identify_list ) / sizeof ( php_mb_default_identify_list [ 0 ] ) ; i ++ )		671587	3					
ANR	671617	ForInit	i = 0 ;	1083:6:31795:31800	671587	0	True				
ANR	671618	AssignmentExpression	i = 0		671587	0		=			
ANR	671619	Identifier	i		671587	0					
ANR	671620	PrimaryExpression	0		671587	1					
ANR	671621	Condition	i < sizeof ( php_mb_default_identify_list ) / sizeof ( php_mb_default_identify_list [ 0 ] )	1083:13:31802:31883	671587	1	True				
ANR	671622	RelationalExpression	i < sizeof ( php_mb_default_identify_list ) / sizeof ( php_mb_default_identify_list [ 0 ] )		671587	0		<			
ANR	671623	Identifier	i		671587	0					
ANR	671624	MultiplicativeExpression	sizeof ( php_mb_default_identify_list ) / sizeof ( php_mb_default_identify_list [ 0 ] )		671587	1		/			
ANR	671625	SizeofExpression	sizeof ( php_mb_default_identify_list )		671587	0					
ANR	671626	Sizeof	sizeof		671587	0					
ANR	671627	SizeofOperand	php_mb_default_identify_list		671587	1					
ANR	671628	SizeofExpression	sizeof ( php_mb_default_identify_list [ 0 ] )		671587	1					
ANR	671629	Sizeof	sizeof		671587	0					
ANR	671630	ArrayIndexing	php_mb_default_identify_list [ 0 ]		671587	1					
ANR	671631	Identifier	php_mb_default_identify_list		671587	0					
ANR	671632	PrimaryExpression	0		671587	1					
ANR	671633	PostIncDecOperationExpression	i ++	1083:97:31886:31888	671587	2	True				
ANR	671634	Identifier	i		671587	0					
ANR	671635	IncDec	++		671587	1					
ANR	671636	CompoundStatement		7:102:292:292	671587	3					
ANR	671637	IfStatement	if ( php_mb_default_identify_list [ i ] . lang == lang )		671587	0					
ANR	671638	Condition	php_mb_default_identify_list [ i ] . lang == lang	1084:6:31899:31942	671587	0	True				
ANR	671639	EqualityExpression	php_mb_default_identify_list [ i ] . lang == lang		671587	0		==			
ANR	671640	MemberAccess	php_mb_default_identify_list [ i ] . lang		671587	0					
ANR	671641	ArrayIndexing	php_mb_default_identify_list [ i ]		671587	0					
ANR	671642	Identifier	php_mb_default_identify_list		671587	0					
ANR	671643	Identifier	i		671587	1					
ANR	671644	Identifier	lang		671587	1					
ANR	671645	Identifier	lang		671587	1					
ANR	671646	CompoundStatement		8:52:346:346	671587	1					
ANR	671647	ExpressionStatement	* plist = ( enum mbfl_no_encoding * ) php_mb_default_identify_list [ i ] . list	1085:3:31950:32020	671587	0	True				
ANR	671648	AssignmentExpression	* plist = ( enum mbfl_no_encoding * ) php_mb_default_identify_list [ i ] . list		671587	0		=			
ANR	671649	UnaryOperationExpression	* plist		671587	0					
ANR	671650	UnaryOperator	*		671587	0					
ANR	671651	Identifier	plist		671587	1					
ANR	671652	CastExpression	( enum mbfl_no_encoding * ) php_mb_default_identify_list [ i ] . list		671587	1					
ANR	671653	CastTarget	enum mbfl_no_encoding *		671587	0					
ANR	671654	MemberAccess	php_mb_default_identify_list [ i ] . list		671587	1					
ANR	671655	ArrayIndexing	php_mb_default_identify_list [ i ]		671587	0					
ANR	671656	Identifier	php_mb_default_identify_list		671587	0					
ANR	671657	Identifier	i		671587	1					
ANR	671658	Identifier	list		671587	1					
ANR	671659	ExpressionStatement	* plist_size = php_mb_default_identify_list [ i ] . list_size	1086:3:32025:32080	671587	1	True				
ANR	671660	AssignmentExpression	* plist_size = php_mb_default_identify_list [ i ] . list_size		671587	0		=			
ANR	671661	UnaryOperationExpression	* plist_size		671587	0					
ANR	671662	UnaryOperator	*		671587	0					
ANR	671663	Identifier	plist_size		671587	1					
ANR	671664	MemberAccess	php_mb_default_identify_list [ i ] . list_size		671587	1					
ANR	671665	ArrayIndexing	php_mb_default_identify_list [ i ]		671587	0					
ANR	671666	Identifier	php_mb_default_identify_list		671587	0					
ANR	671667	Identifier	i		671587	1					
ANR	671668	Identifier	list_size		671587	1					
ANR	671669	ReturnStatement	return 1 ;	1087:3:32085:32093	671587	2	True				
ANR	671670	PrimaryExpression	1		671587	0					
ANR	671671	ReturnStatement	return 0 ;	1090:1:32103:32111	671587	4	True				
ANR	671672	PrimaryExpression	0		671587	0					
ANR	671673	ReturnType	static int		671587	1					
ANR	671674	Identifier	php_mb_nls_get_default_detect_order_list		671587	2					
ANR	671675	ParameterList	"enum mbfl_no_language lang , enum mbfl_no_encoding * * plist , size_t * plist_size"		671587	3					
ANR	671676	Parameter	enum mbfl_no_language lang	1076:52:31519:31544	671587	0	True				
ANR	671677	ParameterType	enum mbfl_no_language		671587	0					
ANR	671678	Identifier	lang		671587	1					
ANR	671679	Parameter	enum mbfl_no_encoding * * plist	1076:80:31547:31575	671587	1	True				
ANR	671680	ParameterType	enum mbfl_no_encoding * *		671587	0					
ANR	671681	Identifier	plist		671587	1					
ANR	671682	Parameter	size_t * plist_size	1076:111:31578:31595	671587	2	True				
ANR	671683	ParameterType	size_t *		671587	0					
ANR	671684	Identifier	plist_size		671587	1					
ANR	671685	CFGEntryNode	ENTRY		671587		True				
ANR	671686	CFGExitNode	EXIT		671587		True				
ANR	671687	Symbol	php_mb_default_identify_list [ i ] . list_size		671587						
ANR	671688	Symbol	* plist		671587						
ANR	671689	Symbol	* php_mb_default_identify_list_neut		671587						
ANR	671690	Symbol	php_mb_default_identify_list_neut		671587						
ANR	671691	Symbol	i		671587						
ANR	671692	Symbol	php_mb_default_identify_list [ i ] . list		671587						
ANR	671693	Symbol	* plist_size		671587						
ANR	671694	Symbol	php_mb_default_identify_list		671587						
ANR	671695	Symbol	plist		671587						
ANR	671696	Symbol	* i		671587						
ANR	671697	Symbol	* php_mb_default_identify_list		671587						
ANR	671698	Symbol	plist_size		671587						
ANR	671699	Symbol	lang		671587						
ANR	671700	Symbol	php_mb_default_identify_list [ i ] . lang		671587						
ANR	671701	Function	php_mb_rfc1867_substring_conf	1094:0:32126:32676							
ANR	671702	FunctionDef	"php_mb_rfc1867_substring_conf (const zend_encoding * encoding , char * start , int len , char quote TSRMLS_DC)"		671701	0					
ANR	671703	CompoundStatement		1095:0:32244:32676	671701	0					
ANR	671704	IdentifierDeclStatement	char * result = emalloc ( len + 2 ) ;	1096:1:32247:32278	671701	0	True				
ANR	671705	IdentifierDecl	* result = emalloc ( len + 2 )		671701	0					
ANR	671706	IdentifierDeclType	char *		671701	0					
ANR	671707	Identifier	result		671701	1					
ANR	671708	AssignmentExpression	* result = emalloc ( len + 2 )		671701	2		=			
ANR	671709	Identifier	result		671701	0					
ANR	671710	CallExpression	emalloc ( len + 2 )		671701	1					
ANR	671711	Callee	emalloc		671701	0					
ANR	671712	Identifier	emalloc		671701	0					
ANR	671713	ArgumentList	len + 2		671701	1					
ANR	671714	Argument	len + 2		671701	0					
ANR	671715	AdditiveExpression	len + 2		671701	0		+			
ANR	671716	Identifier	len		671701	0					
ANR	671717	PrimaryExpression	2		671701	1					
ANR	671718	IdentifierDeclStatement	char * resp = result ;	1097:1:32281:32300	671701	1	True				
ANR	671719	IdentifierDecl	* resp = result		671701	0					
ANR	671720	IdentifierDeclType	char *		671701	0					
ANR	671721	Identifier	resp		671701	1					
ANR	671722	AssignmentExpression	* resp = result		671701	2		=			
ANR	671723	Identifier	result		671701	0					
ANR	671724	Identifier	result		671701	1					
ANR	671725	IdentifierDeclStatement	int i ;	1098:1:32303:32308	671701	2	True				
ANR	671726	IdentifierDecl	i		671701	0					
ANR	671727	IdentifierDeclType	int		671701	0					
ANR	671728	Identifier	i		671701	1					
ANR	671729	ForStatement	for ( i = 0 ; i < len && start [ i ] != quote ; ++ i )		671701	3					
ANR	671730	ForInit	i = 0 ;	1100:6:32317:32322	671701	0	True				
ANR	671731	AssignmentExpression	i = 0		671701	0		=			
ANR	671732	Identifier	i		671701	0					
ANR	671733	PrimaryExpression	0		671701	1					
ANR	671734	Condition	i < len && start [ i ] != quote	1100:13:32324:32351	671701	1	True				
ANR	671735	AndExpression	i < len && start [ i ] != quote		671701	0		&&			
ANR	671736	RelationalExpression	i < len		671701	0		<			
ANR	671737	Identifier	i		671701	0					
ANR	671738	Identifier	len		671701	1					
ANR	671739	EqualityExpression	start [ i ] != quote		671701	1		!=			
ANR	671740	ArrayIndexing	start [ i ]		671701	0					
ANR	671741	Identifier	start		671701	0					
ANR	671742	Identifier	i		671701	1					
ANR	671743	Identifier	quote		671701	1					
ANR	671744	UnaryExpression	++ i	1100:43:32354:32356	671701	2	True				
ANR	671745	IncDec	++		671701	0					
ANR	671746	Identifier	i		671701	1					
ANR	671747	CompoundStatement		6:48:114:114	671701	3					
ANR	671748	IfStatement	if ( start [ i ] == '\\\\' && ( start [ i + 1 ] == '\\\\' || ( quote && start [ i + 1 ] == quote ) ) )		671701	0					
ANR	671749	Condition	start [ i ] == '\\\\' && ( start [ i + 1 ] == '\\\\' || ( quote && start [ i + 1 ] == quote ) )	1101:6:32367:32444	671701	0	True				
ANR	671750	AndExpression	start [ i ] == '\\\\' && ( start [ i + 1 ] == '\\\\' || ( quote && start [ i + 1 ] == quote ) )		671701	0		&&			
ANR	671751	EqualityExpression	start [ i ] == '\\\\'		671701	0		==			
ANR	671752	ArrayIndexing	start [ i ]		671701	0					
ANR	671753	Identifier	start		671701	0					
ANR	671754	Identifier	i		671701	1					
ANR	671755	PrimaryExpression	'\\\\'		671701	1					
ANR	671756	OrExpression	start [ i + 1 ] == '\\\\' || ( quote && start [ i + 1 ] == quote )		671701	1		||			
ANR	671757	EqualityExpression	start [ i + 1 ] == '\\\\'		671701	0		==			
ANR	671758	ArrayIndexing	start [ i + 1 ]		671701	0					
ANR	671759	Identifier	start		671701	0					
ANR	671760	AdditiveExpression	i + 1		671701	1		+			
ANR	671761	Identifier	i		671701	0					
ANR	671762	PrimaryExpression	1		671701	1					
ANR	671763	PrimaryExpression	'\\\\'		671701	1					
ANR	671764	AndExpression	quote && start [ i + 1 ] == quote		671701	1		&&			
ANR	671765	Identifier	quote		671701	0					
ANR	671766	EqualityExpression	start [ i + 1 ] == quote		671701	1		==			
ANR	671767	ArrayIndexing	start [ i + 1 ]		671701	0					
ANR	671768	Identifier	start		671701	0					
ANR	671769	AdditiveExpression	i + 1		671701	1		+			
ANR	671770	Identifier	i		671701	0					
ANR	671771	PrimaryExpression	1		671701	1					
ANR	671772	Identifier	quote		671701	1					
ANR	671773	CompoundStatement		7:86:202:202	671701	1					
ANR	671774	ExpressionStatement	* resp ++ = start [ ++ i ]	1102:3:32452:32472	671701	0	True				
ANR	671775	AssignmentExpression	* resp ++ = start [ ++ i ]		671701	0		=			
ANR	671776	UnaryOperationExpression	* resp ++		671701	0					
ANR	671777	UnaryOperator	*		671701	0					
ANR	671778	PostIncDecOperationExpression	resp ++		671701	1					
ANR	671779	Identifier	resp		671701	0					
ANR	671780	IncDec	++		671701	1					
ANR	671781	ArrayIndexing	start [ ++ i ]		671701	1					
ANR	671782	Identifier	start		671701	0					
ANR	671783	UnaryExpression	++ i		671701	1					
ANR	671784	IncDec	++		671701	0					
ANR	671785	Identifier	i		671701	1					
ANR	671786	ElseStatement	else		671701	0					
ANR	671787	CompoundStatement		10:3:243:318	671701	0					
ANR	671788	IdentifierDeclStatement	"size_t j = php_mb_mbchar_bytes_ex ( start + i , ( const mbfl_encoding * ) encoding ) ;"	1104:3:32488:32563	671701	0	True				
ANR	671789	IdentifierDecl	"j = php_mb_mbchar_bytes_ex ( start + i , ( const mbfl_encoding * ) encoding )"		671701	0					
ANR	671790	IdentifierDeclType	size_t		671701	0					
ANR	671791	Identifier	j		671701	1					
ANR	671792	AssignmentExpression	"j = php_mb_mbchar_bytes_ex ( start + i , ( const mbfl_encoding * ) encoding )"		671701	2		=			
ANR	671793	Identifier	j		671701	0					
ANR	671794	CallExpression	"php_mb_mbchar_bytes_ex ( start + i , ( const mbfl_encoding * ) encoding )"		671701	1					
ANR	671795	Callee	php_mb_mbchar_bytes_ex		671701	0					
ANR	671796	Identifier	php_mb_mbchar_bytes_ex		671701	0					
ANR	671797	ArgumentList	start + i		671701	1					
ANR	671798	Argument	start + i		671701	0					
ANR	671799	AdditiveExpression	start + i		671701	0		+			
ANR	671800	Identifier	start		671701	0					
ANR	671801	Identifier	i		671701	1					
ANR	671802	Argument	( const mbfl_encoding * ) encoding		671701	1					
ANR	671803	CastExpression	( const mbfl_encoding * ) encoding		671701	0					
ANR	671804	CastTarget	const mbfl_encoding *		671701	0					
ANR	671805	Identifier	encoding		671701	1					
ANR	671806	WhileStatement	while ( j -- > 0 && i < len )		671701	1					
ANR	671807	Condition	j -- > 0 && i < len	1106:10:32576:32593	671701	0	True				
ANR	671808	AndExpression	j -- > 0 && i < len		671701	0		&&			
ANR	671809	RelationalExpression	j -- > 0		671701	0		>			
ANR	671810	PostIncDecOperationExpression	j --		671701	0					
ANR	671811	Identifier	j		671701	0					
ANR	671812	IncDec	--		671701	1					
ANR	671813	PrimaryExpression	0		671701	1					
ANR	671814	RelationalExpression	i < len		671701	1		<			
ANR	671815	Identifier	i		671701	0					
ANR	671816	Identifier	len		671701	1					
ANR	671817	CompoundStatement		12:30:351:351	671701	1					
ANR	671818	ExpressionStatement	* resp ++ = start [ i ++ ]	1107:4:32602:32622	671701	0	True				
ANR	671819	AssignmentExpression	* resp ++ = start [ i ++ ]		671701	0		=			
ANR	671820	UnaryOperationExpression	* resp ++		671701	0					
ANR	671821	UnaryOperator	*		671701	0					
ANR	671822	PostIncDecOperationExpression	resp ++		671701	1					
ANR	671823	Identifier	resp		671701	0					
ANR	671824	IncDec	++		671701	1					
ANR	671825	ArrayIndexing	start [ i ++ ]		671701	1					
ANR	671826	Identifier	start		671701	0					
ANR	671827	PostIncDecOperationExpression	i ++		671701	1					
ANR	671828	Identifier	i		671701	0					
ANR	671829	IncDec	++		671701	1					
ANR	671830	ExpressionStatement	-- i	1109:3:32632:32635	671701	2	True				
ANR	671831	UnaryExpression	-- i		671701	0					
ANR	671832	IncDec	--		671701	0					
ANR	671833	Identifier	i		671701	1					
ANR	671834	ExpressionStatement	* resp = '\\0'	1113:1:32646:32658	671701	4	True				
ANR	671835	AssignmentExpression	* resp = '\\0'		671701	0		=			
ANR	671836	UnaryOperationExpression	* resp		671701	0					
ANR	671837	UnaryOperator	*		671701	0					
ANR	671838	Identifier	resp		671701	1					
ANR	671839	PrimaryExpression	'\\0'		671701	1					
ANR	671840	ReturnStatement	return result ;	1114:1:32661:32674	671701	5	True				
ANR	671841	Identifier	result		671701	0					
ANR	671842	ReturnType	static char *		671701	1					
ANR	671843	Identifier	php_mb_rfc1867_substring_conf		671701	2					
ANR	671844	ParameterList	"const zend_encoding * encoding , char * start , int len , char quote TSRMLS_DC"		671701	3					
ANR	671845	Parameter	const zend_encoding * encoding	1094:43:32169:32197	671701	0	True				
ANR	671846	ParameterType	const zend_encoding *		671701	0					
ANR	671847	Identifier	encoding		671701	1					
ANR	671848	Parameter	char * start	1094:74:32200:32210	671701	1	True				
ANR	671849	ParameterType	char *		671701	0					
ANR	671850	Identifier	start		671701	1					
ANR	671851	Parameter	int len	1094:87:32213:32219	671701	2	True				
ANR	671852	ParameterType	int		671701	0					
ANR	671853	Identifier	len		671701	1					
ANR	671854	Parameter	char quote TSRMLS_DC	1094:96:32222:32241	671701	3	True				
ANR	671855	ParameterType	char quote		671701	0					
ANR	671856	Identifier	TSRMLS_DC		671701	1					
ANR	671857	CFGEntryNode	ENTRY		671701		True				
ANR	671858	CFGExitNode	EXIT		671701		True				
ANR	671859	Symbol	php_mb_mbchar_bytes_ex		671701						
ANR	671860	Symbol	resp		671701						
ANR	671861	Symbol	* resp		671701						
ANR	671862	Symbol	* start		671701						
ANR	671863	Symbol	start		671701						
ANR	671864	Symbol	i		671701						
ANR	671865	Symbol	j		671701						
ANR	671866	Symbol	encoding		671701						
ANR	671867	Symbol	TSRMLS_DC		671701						
ANR	671868	Symbol	result		671701						
ANR	671869	Symbol	emalloc		671701						
ANR	671870	Symbol	* i		671701						
ANR	671871	Symbol	quote		671701						
ANR	671872	Symbol	len		671701						
ANR	671873	Symbol	* resp ++		671701						
ANR	671874	Function	php_mb_rfc1867_getword	1117:0:32679:33436							
ANR	671875	FunctionDef	"php_mb_rfc1867_getword (const zend_encoding * encoding , char * * line , char stop TSRMLS_DC)"		671874	0					
ANR	671876	CompoundStatement		1118:0:32790:33436	671874	0					
ANR	671877	IdentifierDeclStatement	"char * pos = * line , quote ;"	1119:1:32793:32817	671874	0	True				
ANR	671878	IdentifierDecl	* pos = * line		671874	0					
ANR	671879	IdentifierDeclType	char *		671874	0					
ANR	671880	Identifier	pos		671874	1					
ANR	671881	AssignmentExpression	* pos = * line		671874	2		=			
ANR	671882	Identifier	pos		671874	0					
ANR	671883	UnaryOperationExpression	* line		671874	1					
ANR	671884	UnaryOperator	*		671874	0					
ANR	671885	Identifier	line		671874	1					
ANR	671886	IdentifierDecl	quote		671874	1					
ANR	671887	IdentifierDeclType	char		671874	0					
ANR	671888	Identifier	quote		671874	1					
ANR	671889	IdentifierDeclStatement	char * res ;	1120:1:32820:32829	671874	1	True				
ANR	671890	IdentifierDecl	* res		671874	0					
ANR	671891	IdentifierDeclType	char *		671874	0					
ANR	671892	Identifier	res		671874	1					
ANR	671893	WhileStatement	while ( * pos && * pos != stop )		671874	2					
ANR	671894	Condition	* pos && * pos != stop	1122:8:32840:32859	671874	0	True				
ANR	671895	AndExpression	* pos && * pos != stop		671874	0		&&			
ANR	671896	UnaryOperationExpression	* pos		671874	0					
ANR	671897	UnaryOperator	*		671874	0					
ANR	671898	Identifier	pos		671874	1					
ANR	671899	EqualityExpression	* pos != stop		671874	1		!=			
ANR	671900	UnaryOperationExpression	* pos		671874	0					
ANR	671901	UnaryOperator	*		671874	0					
ANR	671902	Identifier	pos		671874	1					
ANR	671903	Identifier	stop		671874	1					
ANR	671904	CompoundStatement		5:30:71:71	671874	1					
ANR	671905	IfStatement	"if ( ( quote = * pos ) == '""' || quote == '\\'' )"		671874	0					
ANR	671906	Condition	"( quote = * pos ) == '""' || quote == '\\''"	1123:6:32870:32907	671874	0	True				
ANR	671907	OrExpression	"( quote = * pos ) == '""' || quote == '\\''"		671874	0		||			
ANR	671908	EqualityExpression	"( quote = * pos ) == '""'"		671874	0		==			
ANR	671909	AssignmentExpression	quote = * pos		671874	0		=			
ANR	671910	Identifier	quote		671874	0					
ANR	671911	UnaryOperationExpression	* pos		671874	1					
ANR	671912	UnaryOperator	*		671874	0					
ANR	671913	Identifier	pos		671874	1					
ANR	671914	PrimaryExpression	"'""'"		671874	1					
ANR	671915	EqualityExpression	quote == '\\''		671874	1		==			
ANR	671916	Identifier	quote		671874	0					
ANR	671917	PrimaryExpression	'\\''		671874	1					
ANR	671918	CompoundStatement		6:46:119:119	671874	1					
ANR	671919	ExpressionStatement	++ pos	1124:3:32915:32920	671874	0	True				
ANR	671920	UnaryExpression	++ pos		671874	0					
ANR	671921	IncDec	++		671874	0					
ANR	671922	Identifier	pos		671874	1					
ANR	671923	WhileStatement	while ( * pos && * pos != quote )		671874	1					
ANR	671924	Condition	* pos && * pos != quote	1125:10:32932:32952	671874	0	True				
ANR	671925	AndExpression	* pos && * pos != quote		671874	0		&&			
ANR	671926	UnaryOperationExpression	* pos		671874	0					
ANR	671927	UnaryOperator	*		671874	0					
ANR	671928	Identifier	pos		671874	1					
ANR	671929	EqualityExpression	* pos != quote		671874	1		!=			
ANR	671930	UnaryOperationExpression	* pos		671874	0					
ANR	671931	UnaryOperator	*		671874	0					
ANR	671932	Identifier	pos		671874	1					
ANR	671933	Identifier	quote		671874	1					
ANR	671934	CompoundStatement		8:33:164:164	671874	1					
ANR	671935	IfStatement	if ( * pos == '\\\\' && pos [ 1 ] && pos [ 1 ] == quote )		671874	0					
ANR	671936	Condition	* pos == '\\\\' && pos [ 1 ] && pos [ 1 ] == quote	1126:8:32965:33005	671874	0	True				
ANR	671937	AndExpression	* pos == '\\\\' && pos [ 1 ] && pos [ 1 ] == quote		671874	0		&&			
ANR	671938	EqualityExpression	* pos == '\\\\'		671874	0		==			
ANR	671939	UnaryOperationExpression	* pos		671874	0					
ANR	671940	UnaryOperator	*		671874	0					
ANR	671941	Identifier	pos		671874	1					
ANR	671942	PrimaryExpression	'\\\\'		671874	1					
ANR	671943	AndExpression	pos [ 1 ] && pos [ 1 ] == quote		671874	1		&&			
ANR	671944	ArrayIndexing	pos [ 1 ]		671874	0					
ANR	671945	Identifier	pos		671874	0					
ANR	671946	PrimaryExpression	1		671874	1					
ANR	671947	EqualityExpression	pos [ 1 ] == quote		671874	1		==			
ANR	671948	ArrayIndexing	pos [ 1 ]		671874	0					
ANR	671949	Identifier	pos		671874	0					
ANR	671950	PrimaryExpression	1		671874	1					
ANR	671951	Identifier	quote		671874	1					
ANR	671952	CompoundStatement		9:51:217:217	671874	1					
ANR	671953	ExpressionStatement	pos += 2	1127:5:33015:33023	671874	0	True				
ANR	671954	AssignmentExpression	pos += 2		671874	0		+=			
ANR	671955	Identifier	pos		671874	0					
ANR	671956	PrimaryExpression	2		671874	1					
ANR	671957	ElseStatement	else		671874	0					
ANR	671958	CompoundStatement		11:11:245:245	671874	0					
ANR	671959	ExpressionStatement	++ pos	1129:5:33043:33048	671874	0	True				
ANR	671960	UnaryExpression	++ pos		671874	0					
ANR	671961	IncDec	++		671874	0					
ANR	671962	Identifier	pos		671874	1					
ANR	671963	IfStatement	if ( * pos )		671874	2					
ANR	671964	Condition	* pos	1132:7:33068:33071	671874	0	True				
ANR	671965	UnaryOperationExpression	* pos		671874	0					
ANR	671966	UnaryOperator	*		671874	0					
ANR	671967	Identifier	pos		671874	1					
ANR	671968	CompoundStatement		15:13:283:283	671874	1					
ANR	671969	ExpressionStatement	++ pos	1133:4:33080:33085	671874	0	True				
ANR	671970	UnaryExpression	++ pos		671874	0					
ANR	671971	IncDec	++		671874	0					
ANR	671972	Identifier	pos		671874	1					
ANR	671973	ElseStatement	else		671874	0					
ANR	671974	CompoundStatement		18:9:310:310	671874	0					
ANR	671975	ExpressionStatement	"pos += php_mb_mbchar_bytes_ex ( pos , ( const mbfl_encoding * ) encoding )"	1136:3:33106:33173	671874	0	True				
ANR	671976	AssignmentExpression	"pos += php_mb_mbchar_bytes_ex ( pos , ( const mbfl_encoding * ) encoding )"		671874	0		+=			
ANR	671977	Identifier	pos		671874	0					
ANR	671978	CallExpression	"php_mb_mbchar_bytes_ex ( pos , ( const mbfl_encoding * ) encoding )"		671874	1					
ANR	671979	Callee	php_mb_mbchar_bytes_ex		671874	0					
ANR	671980	Identifier	php_mb_mbchar_bytes_ex		671874	0					
ANR	671981	ArgumentList	pos		671874	1					
ANR	671982	Argument	pos		671874	0					
ANR	671983	Identifier	pos		671874	0					
ANR	671984	Argument	( const mbfl_encoding * ) encoding		671874	1					
ANR	671985	CastExpression	( const mbfl_encoding * ) encoding		671874	0					
ANR	671986	CastTarget	const mbfl_encoding *		671874	0					
ANR	671987	Identifier	encoding		671874	1					
ANR	671988	IfStatement	if ( * pos == '\\0' )		671874	3					
ANR	671989	Condition	* pos == '\\0'	1140:5:33188:33199	671874	0	True				
ANR	671990	EqualityExpression	* pos == '\\0'		671874	0		==			
ANR	671991	UnaryOperationExpression	* pos		671874	0					
ANR	671992	UnaryOperator	*		671874	0					
ANR	671993	Identifier	pos		671874	1					
ANR	671994	PrimaryExpression	'\\0'		671874	1					
ANR	671995	CompoundStatement		23:19:411:411	671874	1					
ANR	671996	ExpressionStatement	res = estrdup ( * line )	1141:2:33206:33226	671874	0	True				
ANR	671997	AssignmentExpression	res = estrdup ( * line )		671874	0		=			
ANR	671998	Identifier	res		671874	0					
ANR	671999	CallExpression	estrdup ( * line )		671874	1					
ANR	672000	Callee	estrdup		671874	0					
ANR	672001	Identifier	estrdup		671874	0					
ANR	672002	ArgumentList	* line		671874	1					
ANR	672003	Argument	* line		671874	0					
ANR	672004	UnaryOperationExpression	* line		671874	0					
ANR	672005	UnaryOperator	*		671874	0					
ANR	672006	Identifier	line		671874	1					
ANR	672007	ExpressionStatement	* line += strlen ( * line )	1142:2:33230:33252	671874	1	True				
ANR	672008	AssignmentExpression	* line += strlen ( * line )		671874	0		+=			
ANR	672009	UnaryOperationExpression	* line		671874	0					
ANR	672010	UnaryOperator	*		671874	0					
ANR	672011	Identifier	line		671874	1					
ANR	672012	CallExpression	strlen ( * line )		671874	1					
ANR	672013	Callee	strlen		671874	0					
ANR	672014	Identifier	strlen		671874	0					
ANR	672015	ArgumentList	* line		671874	1					
ANR	672016	Argument	* line		671874	0					
ANR	672017	UnaryOperationExpression	* line		671874	0					
ANR	672018	UnaryOperator	*		671874	0					
ANR	672019	Identifier	line		671874	1					
ANR	672020	ReturnStatement	return res ;	1143:2:33256:33266	671874	2	True				
ANR	672021	Identifier	res		671874	0					
ANR	672022	ExpressionStatement	"res = estrndup ( * line , pos - * line )"	1146:1:33273:33307	671874	4	True				
ANR	672023	AssignmentExpression	"res = estrndup ( * line , pos - * line )"		671874	0		=			
ANR	672024	Identifier	res		671874	0					
ANR	672025	CallExpression	"estrndup ( * line , pos - * line )"		671874	1					
ANR	672026	Callee	estrndup		671874	0					
ANR	672027	Identifier	estrndup		671874	0					
ANR	672028	ArgumentList	* line		671874	1					
ANR	672029	Argument	* line		671874	0					
ANR	672030	UnaryOperationExpression	* line		671874	0					
ANR	672031	UnaryOperator	*		671874	0					
ANR	672032	Identifier	line		671874	1					
ANR	672033	Argument	pos - * line		671874	1					
ANR	672034	AdditiveExpression	pos - * line		671874	0		-			
ANR	672035	Identifier	pos		671874	0					
ANR	672036	UnaryOperationExpression	* line		671874	1					
ANR	672037	UnaryOperator	*		671874	0					
ANR	672038	Identifier	line		671874	1					
ANR	672039	WhileStatement	while ( * pos == stop )		671874	5					
ANR	672040	Condition	* pos == stop	1148:8:33318:33329	671874	0	True				
ANR	672041	EqualityExpression	* pos == stop		671874	0		==			
ANR	672042	UnaryOperationExpression	* pos		671874	0					
ANR	672043	UnaryOperator	*		671874	0					
ANR	672044	Identifier	pos		671874	1					
ANR	672045	Identifier	stop		671874	1					
ANR	672046	CompoundStatement		31:22:541:541	671874	1					
ANR	672047	ExpressionStatement	"pos += php_mb_mbchar_bytes_ex ( pos , ( const mbfl_encoding * ) encoding )"	1149:2:33336:33403	671874	0	True				
ANR	672048	AssignmentExpression	"pos += php_mb_mbchar_bytes_ex ( pos , ( const mbfl_encoding * ) encoding )"		671874	0		+=			
ANR	672049	Identifier	pos		671874	0					
ANR	672050	CallExpression	"php_mb_mbchar_bytes_ex ( pos , ( const mbfl_encoding * ) encoding )"		671874	1					
ANR	672051	Callee	php_mb_mbchar_bytes_ex		671874	0					
ANR	672052	Identifier	php_mb_mbchar_bytes_ex		671874	0					
ANR	672053	ArgumentList	pos		671874	1					
ANR	672054	Argument	pos		671874	0					
ANR	672055	Identifier	pos		671874	0					
ANR	672056	Argument	( const mbfl_encoding * ) encoding		671874	1					
ANR	672057	CastExpression	( const mbfl_encoding * ) encoding		671874	0					
ANR	672058	CastTarget	const mbfl_encoding *		671874	0					
ANR	672059	Identifier	encoding		671874	1					
ANR	672060	ExpressionStatement	* line = pos	1152:1:33410:33421	671874	6	True				
ANR	672061	AssignmentExpression	* line = pos		671874	0		=			
ANR	672062	UnaryOperationExpression	* line		671874	0					
ANR	672063	UnaryOperator	*		671874	0					
ANR	672064	Identifier	line		671874	1					
ANR	672065	Identifier	pos		671874	1					
ANR	672066	ReturnStatement	return res ;	1153:1:33424:33434	671874	7	True				
ANR	672067	Identifier	res		671874	0					
ANR	672068	ReturnType	static char *		671874	1					
ANR	672069	Identifier	php_mb_rfc1867_getword		671874	2					
ANR	672070	ParameterList	"const zend_encoding * encoding , char * * line , char stop TSRMLS_DC"		671874	3					
ANR	672071	Parameter	const zend_encoding * encoding	1117:36:32715:32743	671874	0	True				
ANR	672072	ParameterType	const zend_encoding *		671874	0					
ANR	672073	Identifier	encoding		671874	1					
ANR	672074	Parameter	char * * line	1117:67:32746:32756	671874	1	True				
ANR	672075	ParameterType	char * *		671874	0					
ANR	672076	Identifier	line		671874	1					
ANR	672077	Parameter	char stop TSRMLS_DC	1117:80:32759:32777	671874	2	True				
ANR	672078	ParameterType	char stop		671874	0					
ANR	672079	Identifier	TSRMLS_DC		671874	1					
ANR	672080	CFGEntryNode	ENTRY		671874		True				
ANR	672081	CFGExitNode	EXIT		671874		True				
ANR	672082	Symbol	res		671874						
ANR	672083	Symbol	php_mb_mbchar_bytes_ex		671874						
ANR	672084	Symbol	line		671874						
ANR	672085	Symbol	* line		671874						
ANR	672086	Symbol	encoding		671874						
ANR	672087	Symbol	TSRMLS_DC		671874						
ANR	672088	Symbol	strlen		671874						
ANR	672089	Symbol	estrndup		671874						
ANR	672090	Symbol	quote		671874						
ANR	672091	Symbol	stop		671874						
ANR	672092	Symbol	pos		671874						
ANR	672093	Symbol	estrdup		671874						
ANR	672094	Symbol	* pos		671874						
ANR	672095	DeclStmt									
ANR	672096	Decl							char	char	quote
ANR	672097	DeclStmt									
ANR	672098	Decl							char	char *	strend
ANR	672099	DeclStmt									
ANR	672100	Decl							char	char *	s
ANR	672101	Decl							char	char *	s2
ANR	672102	DeclStmt									
ANR	672103	Decl							const size_t	const size_t	filename_len
ANR	672104	DeclStmt									
ANR	672105	Decl							enum mbfl_no_language	enum mbfl_no_language	no_language
ANR	672106	DeclStmt									
ANR	672107	Decl							const mbfl_encoding	const mbfl_encoding * *	list
ANR	672108	DeclStmt									
ANR	672109	Decl							size_t	size_t	size
ANR	672110	DeclStmt									
ANR	672111	Decl							const mbfl_encoding	const mbfl_encoding * *	list
ANR	672112	DeclStmt									
ANR	672113	Decl							size_t	size_t	size
ANR	672114	DeclStmt									
ANR	672115	Decl							const mbfl_encoding	const mbfl_encoding *	encoding
ANR	672116	Function	_php_mb_ini_mbstring_internal_encoding_set	1327:0:38215:39003							
ANR	672117	FunctionDef	"_php_mb_ini_mbstring_internal_encoding_set (const char * new_value , uint new_value_length TSRMLS_DC)"		672116	0					
ANR	672118	CompoundStatement		1328:0:38318:39003	672116	0					
ANR	672119	IdentifierDeclStatement	const mbfl_encoding * encoding ;	1329:1:38321:38350	672116	0	True				
ANR	672120	IdentifierDecl	* encoding		672116	0					
ANR	672121	IdentifierDeclType	const mbfl_encoding *		672116	0					
ANR	672122	Identifier	encoding		672116	1					
ANR	672123	IfStatement	if ( ! new_value || ! new_value_length || ! ( encoding = mbfl_name2encoding ( new_value ) ) )		672116	1					
ANR	672124	Condition	! new_value || ! new_value_length || ! ( encoding = mbfl_name2encoding ( new_value ) )	1331:5:38358:38435	672116	0	True				
ANR	672125	OrExpression	! new_value || ! new_value_length || ! ( encoding = mbfl_name2encoding ( new_value ) )		672116	0		||			
ANR	672126	UnaryOperationExpression	! new_value		672116	0					
ANR	672127	UnaryOperator	!		672116	0					
ANR	672128	Identifier	new_value		672116	1					
ANR	672129	OrExpression	! new_value_length || ! ( encoding = mbfl_name2encoding ( new_value ) )		672116	1		||			
ANR	672130	UnaryOperationExpression	! new_value_length		672116	0					
ANR	672131	UnaryOperator	!		672116	0					
ANR	672132	Identifier	new_value_length		672116	1					
ANR	672133	UnaryOperationExpression	! ( encoding = mbfl_name2encoding ( new_value ) )		672116	1					
ANR	672134	UnaryOperator	!		672116	0					
ANR	672135	AssignmentExpression	encoding = mbfl_name2encoding ( new_value )		672116	1		=			
ANR	672136	Identifier	encoding		672116	0					
ANR	672137	CallExpression	mbfl_name2encoding ( new_value )		672116	1					
ANR	672138	Callee	mbfl_name2encoding		672116	0					
ANR	672139	Identifier	mbfl_name2encoding		672116	0					
ANR	672140	ArgumentList	new_value		672116	1					
ANR	672141	Argument	new_value		672116	0					
ANR	672142	Identifier	new_value		672116	0					
ANR	672143	CompoundStatement		4:85:119:119	672116	1					
ANR	672144	ExpressionStatement	encoding = mbfl_no2encoding ( mbfl_no_encoding_utf8 )	1333:2:38507:38557	672116	0	True				
ANR	672145	AssignmentExpression	encoding = mbfl_no2encoding ( mbfl_no_encoding_utf8 )		672116	0		=			
ANR	672146	Identifier	encoding		672116	0					
ANR	672147	CallExpression	mbfl_no2encoding ( mbfl_no_encoding_utf8 )		672116	1					
ANR	672148	Callee	mbfl_no2encoding		672116	0					
ANR	672149	Identifier	mbfl_no2encoding		672116	0					
ANR	672150	ArgumentList	mbfl_no_encoding_utf8		672116	1					
ANR	672151	Argument	mbfl_no_encoding_utf8		672116	0					
ANR	672152	Identifier	mbfl_no_encoding_utf8		672116	0					
ANR	672153	ExpressionStatement	MBSTRG ( internal_encoding ) = encoding	1335:1:38563:38599	672116	2	True				
ANR	672154	AssignmentExpression	MBSTRG ( internal_encoding ) = encoding		672116	0		=			
ANR	672155	CallExpression	MBSTRG ( internal_encoding )		672116	0					
ANR	672156	Callee	MBSTRG		672116	0					
ANR	672157	Identifier	MBSTRG		672116	0					
ANR	672158	ArgumentList	internal_encoding		672116	1					
ANR	672159	Argument	internal_encoding		672116	0					
ANR	672160	Identifier	internal_encoding		672116	0					
ANR	672161	Identifier	encoding		672116	1					
ANR	672162	ExpressionStatement	MBSTRG ( current_internal_encoding ) = encoding	1336:1:38602:38646	672116	3	True				
ANR	672163	AssignmentExpression	MBSTRG ( current_internal_encoding ) = encoding		672116	0		=			
ANR	672164	CallExpression	MBSTRG ( current_internal_encoding )		672116	0					
ANR	672165	Callee	MBSTRG		672116	0					
ANR	672166	Identifier	MBSTRG		672116	0					
ANR	672167	ArgumentList	current_internal_encoding		672116	1					
ANR	672168	Argument	current_internal_encoding		672116	0					
ANR	672169	Identifier	current_internal_encoding		672116	0					
ANR	672170	Identifier	encoding		672116	1					
ANR	672171	CompoundStatement		12:2:351:383	672116	4					
ANR	672172	IdentifierDeclStatement	const char * enc_name = new_value ;	1339:2:38670:38702	672116	0	True				
ANR	672173	IdentifierDecl	* enc_name = new_value		672116	0					
ANR	672174	IdentifierDeclType	const char *		672116	0					
ANR	672175	Identifier	enc_name		672116	1					
ANR	672176	AssignmentExpression	* enc_name = new_value		672116	2		=			
ANR	672177	Identifier	new_value		672116	0					
ANR	672178	Identifier	new_value		672116	1					
ANR	672179	Statement	if	1340:2:38706:38707	672116	1	True				
ANR	672180	Statement	(	1340:5:38709:38709	672116	2	True				
ANR	672181	Statement	FAILURE	1340:6:38710:38716	672116	3	True				
ANR	672182	Statement	==	1340:14:38718:38719	672116	4	True				
ANR	672183	Statement	php_mb_regex_set_default_mbctype	1340:17:38721:38752	672116	5	True				
ANR	672184	Statement	(	1340:49:38753:38753	672116	6	True				
ANR	672185	Statement	enc_name	1340:50:38754:38761	672116	7	True				
ANR	672186	Statement	TSRMLS_CC	1340:59:38763:38771	672116	8	True				
ANR	672187	Statement	)	1340:68:38772:38772	672116	9	True				
ANR	672188	Statement	)	1340:69:38773:38773	672116	10	True				
ANR	672189	CompoundStatement		13:71:456:456	672116	11					
ANR	672190	ExpressionStatement	"enc_name = ""UTF-8"""	1342:3:38846:38864	672116	0	True				
ANR	672191	AssignmentExpression	"enc_name = ""UTF-8"""		672116	0		=			
ANR	672192	Identifier	enc_name		672116	0					
ANR	672193	PrimaryExpression	"""UTF-8"""		672116	1					
ANR	672194	Statement	php_mb_regex_set_default_mbctype	1343:3:38869:38900	672116	1	True				
ANR	672195	Statement	(	1343:35:38901:38901	672116	2	True				
ANR	672196	Statement	enc_name	1343:36:38902:38909	672116	3	True				
ANR	672197	Statement	TSRMLS_CC	1343:45:38911:38919	672116	4	True				
ANR	672198	Statement	)	1343:54:38920:38920	672116	5	True				
ANR	672199	ExpressionStatement		1343:55:38921:38921	672116	6	True				
ANR	672200	Statement	php_mb_regex_set_mbctype	1345:2:38929:38952	672116	12	True				
ANR	672201	Statement	(	1345:26:38953:38953	672116	13	True				
ANR	672202	Statement	new_value	1345:27:38954:38962	672116	14	True				
ANR	672203	Statement	TSRMLS_CC	1345:37:38964:38972	672116	15	True				
ANR	672204	Statement	)	1345:46:38973:38973	672116	16	True				
ANR	672205	ExpressionStatement		1345:47:38974:38974	672116	17	True				
ANR	672206	ReturnStatement	return SUCCESS ;	1348:1:38987:39001	672116	5	True				
ANR	672207	Identifier	SUCCESS		672116	0					
ANR	672208	ReturnType	int		672116	1					
ANR	672209	Identifier	_php_mb_ini_mbstring_internal_encoding_set		672116	2					
ANR	672210	ParameterList	"const char * new_value , uint new_value_length TSRMLS_DC"		672116	3					
ANR	672211	Parameter	const char * new_value	1327:47:38262:38282	672116	0	True				
ANR	672212	ParameterType	const char *		672116	0					
ANR	672213	Identifier	new_value		672116	1					
ANR	672214	Parameter	uint new_value_length TSRMLS_DC	1327:70:38285:38315	672116	1	True				
ANR	672215	ParameterType	uint new_value_length		672116	0					
ANR	672216	Identifier	TSRMLS_DC		672116	1					
ANR	672217	CFGEntryNode	ENTRY		672116		True				
ANR	672218	CFGExitNode	EXIT		672116		True				
ANR	672219	Symbol	mbfl_no_encoding_utf8		672116						
ANR	672220	Symbol	mbfl_name2encoding		672116						
ANR	672221	Symbol	current_internal_encoding		672116						
ANR	672222	Symbol	enc_name		672116						
ANR	672223	Symbol	SUCCESS		672116						
ANR	672224	Symbol	new_value_length		672116						
ANR	672225	Symbol	mbfl_no2encoding		672116						
ANR	672226	Symbol	MBSTRG		672116						
ANR	672227	Symbol	encoding		672116						
ANR	672228	Symbol	TSRMLS_DC		672116						
ANR	672229	Symbol	new_value		672116						
ANR	672230	Symbol	internal_encoding		672116						
ANR	672231	DeclStmt									
ANR	672232	Decl							int	int	c
ANR	672233	DeclStmt									
ANR	672234	Decl							char	char *	endptr
ANR	672235	DeclStmt									
ANR	672236	Decl							zval	zval	tmp
ANR	672237	DeclStmt									
ANR	672238	Decl							void	void *	re
ANR	672239	DeclStmt									
ANR	672240	Decl							zend_function	zend_function *	func
ANR	672241	Decl							zend_function	zend_function *	orig
ANR	672242	DeclStmt									
ANR	672243	Decl							const struct mb_overload_def	const struct mb_overload_def *	p
ANR	672244	DeclStmt									
ANR	672245	Decl							const struct mb_overload_def	const struct mb_overload_def *	p
ANR	672246	DeclStmt									
ANR	672247	Decl							zend_function	zend_function *	orig
ANR	672248	DeclStmt									
ANR	672249	Decl							char	char [ 256 ]	tmp
ANR	672250	DeclStmt									
ANR	672251	Decl							char	char *	name
ANR	672252	DeclStmt									
ANR	672253	Decl							int	int	name_len
ANR	672254	DeclStmt									
ANR	672255	Decl							const char	const char *	name
ANR	672256	DeclStmt									
ANR	672257	Decl							int	int	name_len
ANR	672258	DeclStmt									
ANR	672259	Decl							const mbfl_encoding	const mbfl_encoding *	encoding
ANR	672260	DeclStmt									
ANR	672261	Decl							char	char *	typ
ANR	672262	DeclStmt									
ANR	672263	Decl							int	int	typ_len
ANR	672264	DeclStmt									
ANR	672265	Decl							int	int	retname
ANR	672266	DeclStmt									
ANR	672267	Decl							char	char *	list
ANR	672268	Decl							char	char *	temp
ANR	672269	DeclStmt									
ANR	672270	Decl							const mbfl_encoding	const mbfl_encoding *	result
ANR	672271	DeclStmt									
ANR	672272	Decl							const mbfl_encoding	const mbfl_encoding * *	entry
ANR	672273	DeclStmt									
ANR	672274	Decl							const size_t	const size_t	n
ANR	672275	DeclStmt									
ANR	672276	Decl							size_t	size_t	i
ANR	672277	DeclStmt									
ANR	672278	Decl							const mbfl_encoding	const mbfl_encoding * *	entry
ANR	672279	DeclStmt									
ANR	672280	Decl							const size_t	const size_t	n
ANR	672281	DeclStmt									
ANR	672282	Decl							size_t	size_t	i
ANR	672283	DeclStmt									
ANR	672284	Decl							const char	const char *	name
ANR	672285	DeclStmt									
ANR	672286	Decl							int	int	name_len
ANR	672287	DeclStmt									
ANR	672288	Decl							const mbfl_encoding	const mbfl_encoding *	encoding
ANR	672289	DeclStmt									
ANR	672290	Decl							zval	zval * *	arg1
ANR	672291	DeclStmt									
ANR	672292	Decl							size_t	size_t	i
ANR	672293	DeclStmt									
ANR	672294	Decl							size_t	size_t	n
ANR	672295	DeclStmt									
ANR	672296	Decl							const mbfl_encoding	const mbfl_encoding * *	entry
ANR	672297	DeclStmt									
ANR	672298	Decl							const mbfl_encoding	const mbfl_encoding * *	list
ANR	672299	DeclStmt									
ANR	672300	Decl							size_t	size_t	size
ANR	672301	DeclStmt									
ANR	672302	Decl							zval	zval * *	arg1
ANR	672303	DeclStmt									
ANR	672304	Decl							enum mbfl_no_encoding	enum mbfl_no_encoding	no_encoding
ANR	672305	DeclStmt									
ANR	672306	Decl							char	char *	name
ANR	672307	DeclStmt									
ANR	672308	Decl							int	int	name_len
ANR	672309	DeclStmt									
ANR	672310	Decl							const char	const char *	preferred_name
ANR	672311	DeclStmt									
ANR	672312	Decl							zval	zval *	track_vars_array
ANR	672313	DeclStmt									
ANR	672314	Decl							char	char *	encstr
ANR	672315	DeclStmt									
ANR	672316	Decl							int	int	encstr_len
ANR	672317	DeclStmt									
ANR	672318	Decl							php_mb_encoding_handler_info_t	php_mb_encoding_handler_info_t	info
ANR	672319	DeclStmt									
ANR	672320	Decl							const mbfl_encoding	const mbfl_encoding *	detected
ANR	672321	DeclStmt									
ANR	672322	Decl							zval	zval	tmp
ANR	672323	DeclStmt									
ANR	672324	Decl							char	char *	arg_string
ANR	672325	DeclStmt									
ANR	672326	Decl							int	int	arg_string_len
ANR	672327	DeclStmt									
ANR	672328	Decl							long	long	arg_status
ANR	672329	DeclStmt									
ANR	672330	Decl							mbfl_string	mbfl_string	string
ANR	672331	Decl							mbfl_string	mbfl_string	result
ANR	672332	DeclStmt									
ANR	672333	Decl							const char	const char *	charset
ANR	672334	DeclStmt									
ANR	672335	Decl							char	char *	p
ANR	672336	DeclStmt									
ANR	672337	Decl							const mbfl_encoding	const mbfl_encoding *	encoding
ANR	672338	DeclStmt									
ANR	672339	Decl							int	int	last_feed
ANR	672340	Decl							int	int	len
ANR	672341	DeclStmt									
ANR	672342	Decl							unsigned char	unsigned char	send_text_mimetype
ANR	672343	DeclStmt									
ANR	672344	Decl							char	char *	s
ANR	672345	Decl							char	char *	mimetype
ANR	672346	DeclStmt									
ANR	672347	Decl							int	int	n
ANR	672348	DeclStmt									
ANR	672349	Decl							mbfl_string	mbfl_string	string
ANR	672350	DeclStmt									
ANR	672351	Decl							char	char *	enc_name
ANR	672352	DeclStmt									
ANR	672353	Decl							int	int	enc_name_len
ANR	672354	DeclStmt									
ANR	672355	Decl							int	int	n
ANR	672356	Decl							int	int	reverse
ANR	672357	DeclStmt									
ANR	672358	Decl							long	long	offset
ANR	672359	DeclStmt									
ANR	672360	Decl							mbfl_string	mbfl_string	haystack
ANR	672361	Decl							mbfl_string	mbfl_string	needle
ANR	672362	DeclStmt									
ANR	672363	Decl							char	char *	enc_name
ANR	672364	DeclStmt									
ANR	672365	Decl							int	int	enc_name_len
ANR	672366	DeclStmt									
ANR	672367	Decl							int	int	n
ANR	672368	DeclStmt									
ANR	672369	Decl							mbfl_string	mbfl_string	haystack
ANR	672370	Decl							mbfl_string	mbfl_string	needle
ANR	672371	DeclStmt									
ANR	672372	Decl							char	char *	enc_name
ANR	672373	DeclStmt									
ANR	672374	Decl							int	int	enc_name_len
ANR	672375	DeclStmt									
ANR	672376	Decl							zval	zval * *	zoffset
ANR	672377	DeclStmt									
ANR	672378	Decl							long	long	offset
ANR	672379	Decl							long	long	str_flg
ANR	672380	DeclStmt									
ANR	672381	Decl							char	char *	enc_name2
ANR	672382	DeclStmt									
ANR	672383	Decl							int	int	enc_name_len2
ANR	672384	DeclStmt									
ANR	672385	Decl							int	int	haystack_char_len
ANR	672386	DeclStmt									
ANR	672387	Decl							int	int	n
ANR	672388	DeclStmt									
ANR	672389	Decl							long	long	offset
ANR	672390	DeclStmt									
ANR	672391	Decl							mbfl_string	mbfl_string	haystack
ANR	672392	Decl							mbfl_string	mbfl_string	needle
ANR	672393	DeclStmt									
ANR	672394	Decl							const char	const char *	from_encoding
ANR	672395	DeclStmt									
ANR	672396	Decl							int	int	from_encoding_len
ANR	672397	DeclStmt									
ANR	672398	Decl							int	int	n
ANR	672399	DeclStmt									
ANR	672400	Decl							long	long	offset
ANR	672401	DeclStmt									
ANR	672402	Decl							mbfl_string	mbfl_string	haystack
ANR	672403	Decl							mbfl_string	mbfl_string	needle
ANR	672404	DeclStmt									
ANR	672405	Decl							const char	const char *	from_encoding
ANR	672406	DeclStmt									
ANR	672407	Decl							int	int	from_encoding_len
ANR	672408	DeclStmt									
ANR	672409	Decl							int	int	n
ANR	672410	Decl							int	int	len
ANR	672411	Decl							int	int	mblen
ANR	672412	DeclStmt									
ANR	672413	Decl							mbfl_string	mbfl_string	haystack
ANR	672414	Decl							mbfl_string	mbfl_string	needle
ANR	672415	Decl							mbfl_string	mbfl_string	result
ANR	672416	Decl							mbfl_string	mbfl_string *	ret
ANR	672417	DeclStmt									
ANR	672418	Decl							char	char *	enc_name
ANR	672419	DeclStmt									
ANR	672420	Decl							int	int	enc_name_len
ANR	672421	DeclStmt									
ANR	672422	Decl							zend_bool	zend_bool	part
ANR	672423	DeclStmt									
ANR	672424	Decl							int	int	n
ANR	672425	Decl							int	int	len
ANR	672426	Decl							int	int	mblen
ANR	672427	DeclStmt									
ANR	672428	Decl							mbfl_string	mbfl_string	haystack
ANR	672429	Decl							mbfl_string	mbfl_string	needle
ANR	672430	Decl							mbfl_string	mbfl_string	result
ANR	672431	Decl							mbfl_string	mbfl_string *	ret
ANR	672432	DeclStmt									
ANR	672433	Decl							char	char *	enc_name
ANR	672434	DeclStmt									
ANR	672435	Decl							int	int	enc_name_len
ANR	672436	DeclStmt									
ANR	672437	Decl							zend_bool	zend_bool	part
ANR	672438	DeclStmt									
ANR	672439	Decl							zend_bool	zend_bool	part
ANR	672440	DeclStmt									
ANR	672441	Decl							unsigned int	unsigned int	from_encoding_len
ANR	672442	Decl							unsigned int	unsigned int	len
ANR	672443	Decl							unsigned int	unsigned int	mblen
ANR	672444	DeclStmt									
ANR	672445	Decl							int	int	n
ANR	672446	DeclStmt									
ANR	672447	Decl							mbfl_string	mbfl_string	haystack
ANR	672448	Decl							mbfl_string	mbfl_string	needle
ANR	672449	Decl							mbfl_string	mbfl_string	result
ANR	672450	Decl							mbfl_string	mbfl_string *	ret
ANR	672451	DeclStmt									
ANR	672452	Decl							const char	const char *	from_encoding
ANR	672453	DeclStmt									
ANR	672454	Decl							zend_bool	zend_bool	part
ANR	672455	DeclStmt									
ANR	672456	Decl							int	int	n
ANR	672457	Decl							int	int	from_encoding_len
ANR	672458	Decl							int	int	len
ANR	672459	Decl							int	int	mblen
ANR	672460	DeclStmt									
ANR	672461	Decl							mbfl_string	mbfl_string	haystack
ANR	672462	Decl							mbfl_string	mbfl_string	needle
ANR	672463	Decl							mbfl_string	mbfl_string	result
ANR	672464	Decl							mbfl_string	mbfl_string *	ret
ANR	672465	DeclStmt									
ANR	672466	Decl							const char	const char *	from_encoding
ANR	672467	DeclStmt									
ANR	672468	Decl							int	int	n
ANR	672469	DeclStmt									
ANR	672470	Decl							mbfl_string	mbfl_string	haystack
ANR	672471	Decl							mbfl_string	mbfl_string	needle
ANR	672472	DeclStmt									
ANR	672473	Decl							char	char *	enc_name
ANR	672474	DeclStmt									
ANR	672475	Decl							int	int	enc_name_len
ANR	672476	DeclStmt									
ANR	672477	Decl							size_t	size_t	argc
ANR	672478	DeclStmt									
ANR	672479	Decl							char	char *	str
ANR	672480	Decl							char	char *	encoding
ANR	672481	DeclStmt									
ANR	672482	Decl							long	long	from
ANR	672483	Decl							long	long	len
ANR	672484	DeclStmt									
ANR	672485	Decl							int	int	mblen
ANR	672486	Decl							int	int	str_len
ANR	672487	Decl							int	int	encoding_len
ANR	672488	DeclStmt									
ANR	672489	Decl							zval	zval * *	z_len
ANR	672490	DeclStmt									
ANR	672491	Decl							mbfl_string	mbfl_string	string
ANR	672492	Decl							mbfl_string	mbfl_string	result
ANR	672493	Decl							mbfl_string	mbfl_string *	ret
ANR	672494	DeclStmt									
ANR	672495	Decl							size_t	size_t	argc
ANR	672496	DeclStmt									
ANR	672497	Decl							char	char *	encoding
ANR	672498	DeclStmt									
ANR	672499	Decl							long	long	from
ANR	672500	Decl							long	long	len
ANR	672501	DeclStmt									
ANR	672502	Decl							int	int	encoding_len
ANR	672503	DeclStmt									
ANR	672504	Decl							zval	zval * *	z_len
ANR	672505	DeclStmt									
ANR	672506	Decl							mbfl_string	mbfl_string	string
ANR	672507	Decl							mbfl_string	mbfl_string	result
ANR	672508	Decl							mbfl_string	mbfl_string *	ret
ANR	672509	DeclStmt									
ANR	672510	Decl							int	int	n
ANR	672511	DeclStmt									
ANR	672512	Decl							mbfl_string	mbfl_string	string
ANR	672513	DeclStmt									
ANR	672514	Decl							char	char *	enc_name
ANR	672515	DeclStmt									
ANR	672516	Decl							int	int	enc_name_len
ANR	672517	DeclStmt									
ANR	672518	Decl							char	char *	str
ANR	672519	Decl							char	char *	trimmarker
ANR	672520	Decl							char	char *	encoding
ANR	672521	DeclStmt									
ANR	672522	Decl							long	long	from
ANR	672523	Decl							long	long	width
ANR	672524	DeclStmt									
ANR	672525	Decl							int	int	str_len
ANR	672526	Decl							int	int	trimmarker_len
ANR	672527	Decl							int	int	encoding_len
ANR	672528	DeclStmt									
ANR	672529	Decl							mbfl_string	mbfl_string	string
ANR	672530	Decl							mbfl_string	mbfl_string	result
ANR	672531	Decl							mbfl_string	mbfl_string	marker
ANR	672532	Decl							mbfl_string	mbfl_string *	ret
ANR	672533	DeclStmt									
ANR	672534	Decl							mbfl_string	mbfl_string	string
ANR	672535	Decl							mbfl_string	mbfl_string	result
ANR	672536	Decl							mbfl_string	mbfl_string *	ret
ANR	672537	DeclStmt									
ANR	672538	Decl							const mbfl_encoding	const mbfl_encoding *	from_encoding
ANR	672539	Decl							const mbfl_encoding	const mbfl_encoding *	to_encoding
ANR	672540	DeclStmt									
ANR	672541	Decl							mbfl_buffer_converter	mbfl_buffer_converter *	convd
ANR	672542	DeclStmt									
ANR	672543	Decl							size_t	size_t	size
ANR	672544	DeclStmt									
ANR	672545	Decl							const mbfl_encoding	const mbfl_encoding * *	list
ANR	672546	DeclStmt									
ANR	672547	Decl							char	char *	output
ANR	672548	DeclStmt									
ANR	672549	Decl							char	char *	arg_str
ANR	672550	Decl							char	char *	arg_new
ANR	672551	DeclStmt									
ANR	672552	Decl							int	int	str_len
ANR	672553	Decl							int	int	new_len
ANR	672554	DeclStmt									
ANR	672555	Decl							zval	zval *	arg_old
ANR	672556	DeclStmt									
ANR	672557	Decl							int	int	i
ANR	672558	DeclStmt									
ANR	672559	Decl							size_t	size_t	size
ANR	672560	Decl							size_t	size_t	l
ANR	672561	Decl							size_t	size_t	n
ANR	672562	DeclStmt									
ANR	672563	Decl							char	char *	_from_encodings
ANR	672564	Decl							char	char *	ret
ANR	672565	Decl							char	char *	s_free
ANR	672566	DeclStmt									
ANR	672567	Decl							zval	zval * *	hash_entry
ANR	672568	DeclStmt									
ANR	672569	Decl							HashTable	HashTable *	target_hash
ANR	672570	DeclStmt									
ANR	672571	Decl							const char	const char *	from_encoding
ANR	672572	DeclStmt									
ANR	672573	Decl							char	char *	str
ANR	672574	DeclStmt									
ANR	672575	Decl							int	int	str_len
ANR	672576	Decl							int	int	from_encoding_len
ANR	672577	DeclStmt									
ANR	672578	Decl							long	long	case_mode
ANR	672579	DeclStmt									
ANR	672580	Decl							char	char *	newstr
ANR	672581	DeclStmt									
ANR	672582	Decl							size_t	size_t	ret_len
ANR	672583	DeclStmt									
ANR	672584	Decl							const char	const char *	from_encoding
ANR	672585	DeclStmt									
ANR	672586	Decl							char	char *	str
ANR	672587	DeclStmt									
ANR	672588	Decl							int	int	str_len
ANR	672589	Decl							int	int	from_encoding_len
ANR	672590	DeclStmt									
ANR	672591	Decl							char	char *	newstr
ANR	672592	DeclStmt									
ANR	672593	Decl							size_t	size_t	ret_len
ANR	672594	DeclStmt									
ANR	672595	Decl							const char	const char *	from_encoding
ANR	672596	DeclStmt									
ANR	672597	Decl							char	char *	str
ANR	672598	DeclStmt									
ANR	672599	Decl							int	int	str_len
ANR	672600	Decl							int	int	from_encoding_len
ANR	672601	DeclStmt									
ANR	672602	Decl							char	char *	newstr
ANR	672603	DeclStmt									
ANR	672604	Decl							size_t	size_t	ret_len
ANR	672605	DeclStmt									
ANR	672606	Decl							char	char *	str
ANR	672607	DeclStmt									
ANR	672608	Decl							int	int	str_len
ANR	672609	DeclStmt									
ANR	672610	Decl							zend_bool	zend_bool	strict
ANR	672611	DeclStmt									
ANR	672612	Decl							zval	zval *	encoding_list
ANR	672613	DeclStmt									
ANR	672614	Decl							mbfl_string	mbfl_string	string
ANR	672615	DeclStmt									
ANR	672616	Decl							const mbfl_encoding	const mbfl_encoding *	ret
ANR	672617	DeclStmt									
ANR	672618	Decl							const mbfl_encoding	const mbfl_encoding * *	elist
ANR	672619	Decl							const mbfl_encoding	const mbfl_encoding * *	list
ANR	672620	DeclStmt									
ANR	672621	Decl							size_t	size_t	size
ANR	672622	DeclStmt									
ANR	672623	Decl							const mbfl_encoding	const mbfl_encoding * *	encodings
ANR	672624	DeclStmt									
ANR	672625	Decl							const mbfl_encoding	const mbfl_encoding *	encoding
ANR	672626	DeclStmt									
ANR	672627	Decl							int	int	i
ANR	672628	DeclStmt									
ANR	672629	Decl							const mbfl_encoding	const mbfl_encoding *	encoding
ANR	672630	DeclStmt									
ANR	672631	Decl							char	char *	name
ANR	672632	DeclStmt									
ANR	672633	Decl							int	int	name_len
ANR	672634	DeclStmt									
ANR	672635	Decl							const char	const char * *	alias
ANR	672636	DeclStmt									
ANR	672637	Decl							enum mbfl_no_encoding	enum mbfl_no_encoding	charset
ANR	672638	Decl							enum mbfl_no_encoding	enum mbfl_no_encoding	transenc
ANR	672639	DeclStmt									
ANR	672640	Decl							mbfl_string	mbfl_string	string
ANR	672641	Decl							mbfl_string	mbfl_string	result
ANR	672642	Decl							mbfl_string	mbfl_string *	ret
ANR	672643	DeclStmt									
ANR	672644	Decl							char	char *	charset_name
ANR	672645	DeclStmt									
ANR	672646	Decl							int	int	charset_name_len
ANR	672647	DeclStmt									
ANR	672648	Decl							char	char *	trans_enc_name
ANR	672649	DeclStmt									
ANR	672650	Decl							int	int	trans_enc_name_len
ANR	672651	DeclStmt									
ANR	672652	Decl							char	char *	linefeed
ANR	672653	DeclStmt									
ANR	672654	Decl							int	int	linefeed_len
ANR	672655	DeclStmt									
ANR	672656	Decl							long	long	indent
ANR	672657	DeclStmt									
ANR	672658	Decl							const mbfl_language	const mbfl_language *	lang
ANR	672659	DeclStmt									
ANR	672660	Decl							mbfl_string	mbfl_string	string
ANR	672661	Decl							mbfl_string	mbfl_string	result
ANR	672662	Decl							mbfl_string	mbfl_string *	ret
ANR	672663	DeclStmt									
ANR	672664	Decl							int	int	opt
ANR	672665	Decl							int	int	i
ANR	672666	DeclStmt									
ANR	672667	Decl							mbfl_string	mbfl_string	string
ANR	672668	Decl							mbfl_string	mbfl_string	result
ANR	672669	Decl							mbfl_string	mbfl_string *	ret
ANR	672670	DeclStmt									
ANR	672671	Decl							char	char *	optstr
ANR	672672	DeclStmt									
ANR	672673	Decl							int	int	optstr_len
ANR	672674	DeclStmt									
ANR	672675	Decl							char	char *	encname
ANR	672676	DeclStmt									
ANR	672677	Decl							int	int	encname_len
ANR	672678	DeclStmt									
ANR	672679	Decl							char	char *	p
ANR	672680	DeclStmt									
ANR	672681	Decl							int	int	n
ANR	672682	DeclStmt									
ANR	672683	Decl							zval	zval * * *	args
ANR	672684	Decl							zval	zval * * *	stack
ANR	672685	Decl							zval	zval * *	var
ANR	672686	Decl							zval	zval * *	hash_entry
ANR	672687	Decl							zval	zval * *	zfrom_enc
ANR	672688	DeclStmt									
ANR	672689	Decl							HashTable	HashTable *	target_hash
ANR	672690	DeclStmt									
ANR	672691	Decl							mbfl_string	mbfl_string	string
ANR	672692	Decl							mbfl_string	mbfl_string	result
ANR	672693	Decl							mbfl_string	mbfl_string *	ret
ANR	672694	DeclStmt									
ANR	672695	Decl							const mbfl_encoding	const mbfl_encoding *	from_encoding
ANR	672696	Decl							const mbfl_encoding	const mbfl_encoding *	to_encoding
ANR	672697	DeclStmt									
ANR	672698	Decl							mbfl_encoding_detector	mbfl_encoding_detector *	identd
ANR	672699	DeclStmt									
ANR	672700	Decl							mbfl_buffer_converter	mbfl_buffer_converter *	convd
ANR	672701	DeclStmt									
ANR	672702	Decl							int	int	n
ANR	672703	Decl							int	int	to_enc_len
ANR	672704	Decl							int	int	argc
ANR	672705	Decl							int	int	stack_level
ANR	672706	Decl							int	int	stack_max
ANR	672707	DeclStmt									
ANR	672708	Decl							size_t	size_t	elistsz
ANR	672709	DeclStmt									
ANR	672710	Decl							const mbfl_encoding	const mbfl_encoding * *	elist
ANR	672711	DeclStmt									
ANR	672712	Decl							char	char *	to_enc
ANR	672713	DeclStmt									
ANR	672714	Decl							void	void *	ptmp
ANR	672715	DeclStmt									
ANR	672716	Decl							int	int	recursion_error
ANR	672717	DeclStmt									
ANR	672718	Decl							char	char *	str
ANR	672719	Decl							char	char *	encoding
ANR	672720	DeclStmt									
ANR	672721	Decl							int	int	str_len
ANR	672722	Decl							int	int	encoding_len
ANR	672723	DeclStmt									
ANR	672724	Decl							zval	zval *	zconvmap
ANR	672725	Decl							zval	zval * *	hash_entry
ANR	672726	DeclStmt									
ANR	672727	Decl							HashTable	HashTable *	target_hash
ANR	672728	DeclStmt									
ANR	672729	Decl							size_t	size_t	argc
ANR	672730	DeclStmt									
ANR	672731	Decl							int	int	i
ANR	672732	Decl							int	int *	convmap
ANR	672733	Decl							int	int *	mapelm
ANR	672734	Decl							int	int	mapsize
ANR	672735	DeclStmt									
ANR	672736	Decl							zend_bool	zend_bool	is_hex
ANR	672737	DeclStmt									
ANR	672738	Decl							mbfl_string	mbfl_string	string
ANR	672739	Decl							mbfl_string	mbfl_string	result
ANR	672740	Decl							mbfl_string	mbfl_string *	ret
ANR	672741	DeclStmt									
ANR	672742	Decl							enum mbfl_no_encoding	enum mbfl_no_encoding	no_encoding
ANR	672743	DeclStmt									
ANR	672744	Decl							char	char *	tmp_ptr
ANR	672745	Function	my_smart_str_dtor	3910:0:112600:112687							
ANR	672746	FunctionDef	my_smart_str_dtor (smart_str * s)		672745	0					
ANR	672747	CompoundStatement		3911:0:112644:112687	672745	0					
ANR	672748	IfStatement	if ( s -> a > 0 )		672745	0					
ANR	672749	Condition	s -> a > 0	3912:5:112651:112658	672745	0	True				
ANR	672750	RelationalExpression	s -> a > 0		672745	0		>			
ANR	672751	PtrMemberAccess	s -> a		672745	0					
ANR	672752	Identifier	s		672745	0					
ANR	672753	Identifier	a		672745	1					
ANR	672754	PrimaryExpression	0		672745	1					
ANR	672755	CompoundStatement		2:15:16:16	672745	1					
ANR	672756	ExpressionStatement	smart_str_free ( s )	3913:2:112665:112682	672745	0	True				
ANR	672757	CallExpression	smart_str_free ( s )		672745	0					
ANR	672758	Callee	smart_str_free		672745	0					
ANR	672759	Identifier	smart_str_free		672745	0					
ANR	672760	ArgumentList	s		672745	1					
ANR	672761	Argument	s		672745	0					
ANR	672762	Identifier	s		672745	0					
ANR	672763	ReturnType	static void		672745	1					
ANR	672764	Identifier	my_smart_str_dtor		672745	2					
ANR	672765	ParameterList	smart_str * s		672745	3					
ANR	672766	Parameter	smart_str * s	3910:30:112630:112641	672745	0	True				
ANR	672767	ParameterType	smart_str *		672745	0					
ANR	672768	Identifier	s		672745	1					
ANR	672769	CFGEntryNode	ENTRY		672745		True				
ANR	672770	CFGExitNode	EXIT		672745		True				
ANR	672771	Symbol	s		672745						
ANR	672772	Symbol	s -> a		672745						
ANR	672773	Symbol	* s		672745						
ANR	672774	Function	_php_mbstr_parse_mail_headers	3917:0:112690:116074							
ANR	672775	FunctionDef	"_php_mbstr_parse_mail_headers (HashTable * ht , const char * str , size_t str_len)"		672774	0					
ANR	672776	CompoundStatement		3918:0:112779:116074	672774	0					
ANR	672777	IdentifierDeclStatement	const char * ps ;	3919:1:112782:112796	672774	0	True				
ANR	672778	IdentifierDecl	* ps		672774	0					
ANR	672779	IdentifierDeclType	const char *		672774	0					
ANR	672780	Identifier	ps		672774	1					
ANR	672781	IdentifierDeclStatement	size_t icnt ;	3920:1:112799:112810	672774	1	True				
ANR	672782	IdentifierDecl	icnt		672774	0					
ANR	672783	IdentifierDeclType	size_t		672774	0					
ANR	672784	Identifier	icnt		672774	1					
ANR	672785	IdentifierDeclStatement	int state = 0 ;	3921:1:112813:112826	672774	2	True				
ANR	672786	IdentifierDecl	state = 0		672774	0					
ANR	672787	IdentifierDeclType	int		672774	0					
ANR	672788	Identifier	state		672774	1					
ANR	672789	AssignmentExpression	state = 0		672774	2		=			
ANR	672790	Identifier	state		672774	0					
ANR	672791	PrimaryExpression	0		672774	1					
ANR	672792	IdentifierDeclStatement	int crlf_state = - 1 ;	3922:1:112829:112848	672774	3	True				
ANR	672793	IdentifierDecl	crlf_state = - 1		672774	0					
ANR	672794	IdentifierDeclType	int		672774	0					
ANR	672795	Identifier	crlf_state		672774	1					
ANR	672796	AssignmentExpression	crlf_state = - 1		672774	2		=			
ANR	672797	Identifier	crlf_state		672774	0					
ANR	672798	UnaryOperationExpression	- 1		672774	1					
ANR	672799	UnaryOperator	-		672774	0					
ANR	672800	PrimaryExpression	1		672774	1					
ANR	672801	IdentifierDeclStatement	"smart_str token = { 0 , 0 , 0 } ;"	3924:1:112852:112881	672774	4	True				
ANR	672802	IdentifierDecl	"token = { 0 , 0 , 0 }"		672774	0					
ANR	672803	IdentifierDeclType	smart_str		672774	0					
ANR	672804	Identifier	token		672774	1					
ANR	672805	AssignmentExpression	"token = { 0 , 0 , 0 }"		672774	2		=			
ANR	672806	Identifier	token		672774	0					
ANR	672807	InitializerList	0		672774	1					
ANR	672808	PrimaryExpression	0		672774	0					
ANR	672809	PrimaryExpression	0		672774	1					
ANR	672810	PrimaryExpression	0		672774	2					
ANR	672811	IdentifierDeclStatement	"smart_str fld_name = { 0 , 0 , 0 } , fld_val = { 0 , 0 , 0 } ;"	3925:1:112884:112939	672774	5	True				
ANR	672812	IdentifierDecl	"fld_name = { 0 , 0 , 0 }"		672774	0					
ANR	672813	IdentifierDeclType	smart_str		672774	0					
ANR	672814	Identifier	fld_name		672774	1					
ANR	672815	AssignmentExpression	"fld_name = { 0 , 0 , 0 }"		672774	2		=			
ANR	672816	Identifier	fld_name		672774	0					
ANR	672817	InitializerList	0		672774	1					
ANR	672818	PrimaryExpression	0		672774	0					
ANR	672819	PrimaryExpression	0		672774	1					
ANR	672820	PrimaryExpression	0		672774	2					
ANR	672821	IdentifierDecl	"fld_val = { 0 , 0 , 0 }"		672774	1					
ANR	672822	IdentifierDeclType	smart_str		672774	0					
ANR	672823	Identifier	fld_val		672774	1					
ANR	672824	AssignmentExpression	"fld_val = { 0 , 0 , 0 }"		672774	2		=			
ANR	672825	Identifier	fld_val		672774	0					
ANR	672826	InitializerList	0		672774	1					
ANR	672827	PrimaryExpression	0		672774	0					
ANR	672828	PrimaryExpression	0		672774	1					
ANR	672829	PrimaryExpression	0		672774	2					
ANR	672830	ExpressionStatement	ps = str	3927:1:112943:112951	672774	6	True				
ANR	672831	AssignmentExpression	ps = str		672774	0		=			
ANR	672832	Identifier	ps		672774	0					
ANR	672833	Identifier	str		672774	1					
ANR	672834	ExpressionStatement	icnt = str_len	3928:1:112954:112968	672774	7	True				
ANR	672835	AssignmentExpression	icnt = str_len		672774	0		=			
ANR	672836	Identifier	icnt		672774	0					
ANR	672837	Identifier	str_len		672774	1					
ANR	672838	WhileStatement	while ( icnt > 0 )		672774	8					
ANR	672839	Condition	icnt > 0	3941:8:113386:113393	672774	0	True				
ANR	672840	RelationalExpression	icnt > 0		672774	0		>			
ANR	672841	Identifier	icnt		672774	0					
ANR	672842	PrimaryExpression	0		672774	1					
ANR	672843	CompoundStatement		24:18:616:616	672774	1					
ANR	672844	SwitchStatement	switch ( * ps )		672774	0					
ANR	672845	Condition	* ps	3942:10:113408:113410	672774	0	True				
ANR	672846	UnaryOperationExpression	* ps		672774	0					
ANR	672847	UnaryOperator	*		672774	0					
ANR	672848	Identifier	ps		672774	1					
ANR	672849	CompoundStatement		25:15:633:633	672774	1					
ANR	672850	Label	case ':' :	3943:3:113418:113426	672774	0	True				
ANR	672851	IfStatement	if ( crlf_state == 1 )		672774	1					
ANR	672852	Condition	crlf_state == 1	3944:8:113436:113450	672774	0	True				
ANR	672853	EqualityExpression	crlf_state == 1		672774	0		==			
ANR	672854	Identifier	crlf_state		672774	0					
ANR	672855	PrimaryExpression	1		672774	1					
ANR	672856	CompoundStatement		27:25:673:673	672774	1					
ANR	672857	ExpressionStatement	APPEND_ONE_CHAR ( '\\r' )	3945:5:113460:113481	672774	0	True				
ANR	672858	CallExpression	APPEND_ONE_CHAR ( '\\r' )		672774	0					
ANR	672859	Callee	APPEND_ONE_CHAR		672774	0					
ANR	672860	Identifier	APPEND_ONE_CHAR		672774	0					
ANR	672861	ArgumentList	'\\r'		672774	1					
ANR	672862	Argument	'\\r'		672774	0					
ANR	672863	PrimaryExpression	'\\r'		672774	0					
ANR	672864	IfStatement	if ( state == 0 || state == 1 )		672774	2					
ANR	672865	Condition	state == 0 || state == 1	3948:8:113498:113521	672774	0	True				
ANR	672866	OrExpression	state == 0 || state == 1		672774	0		||			
ANR	672867	EqualityExpression	state == 0		672774	0		==			
ANR	672868	Identifier	state		672774	0					
ANR	672869	PrimaryExpression	0		672774	1					
ANR	672870	EqualityExpression	state == 1		672774	1		==			
ANR	672871	Identifier	state		672774	0					
ANR	672872	PrimaryExpression	1		672774	1					
ANR	672873	CompoundStatement		31:34:744:744	672774	1					
ANR	672874	ExpressionStatement	fld_name = token	3949:5:113531:113547	672774	0	True				
ANR	672875	AssignmentExpression	fld_name = token		672774	0		=			
ANR	672876	Identifier	fld_name		672774	0					
ANR	672877	Identifier	token		672774	1					
ANR	672878	ExpressionStatement	state = 2	3951:5:113555:113564	672774	1	True				
ANR	672879	AssignmentExpression	state = 2		672774	0		=			
ANR	672880	Identifier	state		672774	0					
ANR	672881	PrimaryExpression	2		672774	1					
ANR	672882	ElseStatement	else		672774	0					
ANR	672883	CompoundStatement		35:11:797:797	672774	0					
ANR	672884	ExpressionStatement	APPEND_ONE_CHAR ( * ps )	3953:5:113584:113604	672774	0	True				
ANR	672885	CallExpression	APPEND_ONE_CHAR ( * ps )		672774	0					
ANR	672886	Callee	APPEND_ONE_CHAR		672774	0					
ANR	672887	Identifier	APPEND_ONE_CHAR		672774	0					
ANR	672888	ArgumentList	* ps		672774	1					
ANR	672889	Argument	* ps		672774	0					
ANR	672890	UnaryOperationExpression	* ps		672774	0					
ANR	672891	UnaryOperator	*		672774	0					
ANR	672892	Identifier	ps		672774	1					
ANR	672893	ExpressionStatement	crlf_state = 0	3956:4:113617:113631	672774	3	True				
ANR	672894	AssignmentExpression	crlf_state = 0		672774	0		=			
ANR	672895	Identifier	crlf_state		672774	0					
ANR	672896	PrimaryExpression	0		672774	1					
ANR	672897	BreakStatement	break ;	3957:4:113637:113642	672774	4	True				
ANR	672898	Label	case '\\n' :	3959:3:113648:113657	672774	5	True				
ANR	672899	IfStatement	if ( crlf_state == - 1 )		672774	6					
ANR	672900	Condition	crlf_state == - 1	3960:8:113667:113682	672774	0	True				
ANR	672901	EqualityExpression	crlf_state == - 1		672774	0		==			
ANR	672902	Identifier	crlf_state		672774	0					
ANR	672903	UnaryOperationExpression	- 1		672774	1					
ANR	672904	UnaryOperator	-		672774	0					
ANR	672905	PrimaryExpression	1		672774	1					
ANR	672906	CompoundStatement		43:26:905:905	672774	1					
ANR	672907	GotoStatement	goto out ;	3961:5:113692:113700	672774	0	True				
ANR	672908	Identifier	out		672774	0					
ANR	672909	ExpressionStatement	crlf_state = - 1	3963:4:113712:113727	672774	7	True				
ANR	672910	AssignmentExpression	crlf_state = - 1		672774	0		=			
ANR	672911	Identifier	crlf_state		672774	0					
ANR	672912	UnaryOperationExpression	- 1		672774	1					
ANR	672913	UnaryOperator	-		672774	0					
ANR	672914	PrimaryExpression	1		672774	1					
ANR	672915	BreakStatement	break ;	3964:4:113733:113738	672774	8	True				
ANR	672916	Label	case '\\r' :	3966:3:113744:113753	672774	9	True				
ANR	672917	IfStatement	if ( crlf_state == 1 )		672774	10					
ANR	672918	Condition	crlf_state == 1	3967:8:113763:113777	672774	0	True				
ANR	672919	EqualityExpression	crlf_state == 1		672774	0		==			
ANR	672920	Identifier	crlf_state		672774	0					
ANR	672921	PrimaryExpression	1		672774	1					
ANR	672922	CompoundStatement		50:25:1000:1000	672774	1					
ANR	672923	ExpressionStatement	APPEND_ONE_CHAR ( '\\r' )	3968:5:113787:113808	672774	0	True				
ANR	672924	CallExpression	APPEND_ONE_CHAR ( '\\r' )		672774	0					
ANR	672925	Callee	APPEND_ONE_CHAR		672774	0					
ANR	672926	Identifier	APPEND_ONE_CHAR		672774	0					
ANR	672927	ArgumentList	'\\r'		672774	1					
ANR	672928	Argument	'\\r'		672774	0					
ANR	672929	PrimaryExpression	'\\r'		672774	0					
ANR	672930	ElseStatement	else		672774	0					
ANR	672931	CompoundStatement		52:11:1041:1041	672774	0					
ANR	672932	ExpressionStatement	crlf_state = 1	3970:5:113828:113842	672774	0	True				
ANR	672933	AssignmentExpression	crlf_state = 1		672774	0		=			
ANR	672934	Identifier	crlf_state		672774	0					
ANR	672935	PrimaryExpression	1		672774	1					
ANR	672936	BreakStatement	break ;	3972:4:113854:113859	672774	11	True				
ANR	672937	Label	case ' ' :	3974:3:113865:113873	672774	12	True				
ANR	672938	Label	case '\\t' :	3974:13:113875:113884	672774	13	True				
ANR	672939	IfStatement	if ( crlf_state == - 1 )		672774	14					
ANR	672940	Condition	crlf_state == - 1	3975:8:113894:113909	672774	0	True				
ANR	672941	EqualityExpression	crlf_state == - 1		672774	0		==			
ANR	672942	Identifier	crlf_state		672774	0					
ANR	672943	UnaryOperationExpression	- 1		672774	1					
ANR	672944	UnaryOperator	-		672774	0					
ANR	672945	PrimaryExpression	1		672774	1					
ANR	672946	CompoundStatement		58:26:1132:1132	672774	1					
ANR	672947	IfStatement	if ( state == 3 )		672774	0					
ANR	672948	Condition	state == 3	3976:9:113923:113932	672774	0	True				
ANR	672949	EqualityExpression	state == 3		672774	0		==			
ANR	672950	Identifier	state		672774	0					
ANR	672951	PrimaryExpression	3		672774	1					
ANR	672952	CompoundStatement		59:21:1155:1155	672774	1					
ANR	672953	ExpressionStatement	SEPARATE_SMART_STR ( & token )	3978:6:113989:114015	672774	0	True				
ANR	672954	CallExpression	SEPARATE_SMART_STR ( & token )		672774	0					
ANR	672955	Callee	SEPARATE_SMART_STR		672774	0					
ANR	672956	Identifier	SEPARATE_SMART_STR		672774	0					
ANR	672957	ArgumentList	& token		672774	1					
ANR	672958	Argument	& token		672774	0					
ANR	672959	UnaryOperationExpression	& token		672774	0					
ANR	672960	UnaryOperator	&		672774	0					
ANR	672961	Identifier	token		672774	1					
ANR	672962	ExpressionStatement	state = 4	3979:6:114023:114032	672774	1	True				
ANR	672963	AssignmentExpression	state = 4		672774	0		=			
ANR	672964	Identifier	state		672774	0					
ANR	672965	PrimaryExpression	4		672774	1					
ANR	672966	ElseStatement	else		672774	0					
ANR	672967	CompoundStatement		63:12:1266:1266	672774	0					
ANR	672968	ExpressionStatement	state = 5	3982:6:114096:114105	672774	0	True				
ANR	672969	AssignmentExpression	state = 5		672774	0		=			
ANR	672970	Identifier	state		672774	0					
ANR	672971	PrimaryExpression	5		672774	1					
ANR	672972	ElseStatement	else		672774	0					
ANR	672973	CompoundStatement		67:11:1345:1345	672774	0					
ANR	672974	IfStatement	if ( crlf_state == 1 )		672774	0					
ANR	672975	Condition	crlf_state == 1	3985:9:114136:114150	672774	0	True				
ANR	672976	EqualityExpression	crlf_state == 1		672774	0		==			
ANR	672977	Identifier	crlf_state		672774	0					
ANR	672978	PrimaryExpression	1		672774	1					
ANR	672979	CompoundStatement		68:26:1373:1373	672774	1					
ANR	672980	ExpressionStatement	APPEND_ONE_CHAR ( '\\r' )	3986:6:114161:114182	672774	0	True				
ANR	672981	CallExpression	APPEND_ONE_CHAR ( '\\r' )		672774	0					
ANR	672982	Callee	APPEND_ONE_CHAR		672774	0					
ANR	672983	Identifier	APPEND_ONE_CHAR		672774	0					
ANR	672984	ArgumentList	'\\r'		672774	1					
ANR	672985	Argument	'\\r'		672774	0					
ANR	672986	PrimaryExpression	'\\r'		672774	0					
ANR	672987	IfStatement	if ( state == 1 || state == 3 )		672774	1					
ANR	672988	Condition	state == 1 || state == 3	3988:9:114200:114223	672774	0	True				
ANR	672989	OrExpression	state == 1 || state == 3		672774	0		||			
ANR	672990	EqualityExpression	state == 1		672774	0		==			
ANR	672991	Identifier	state		672774	0					
ANR	672992	PrimaryExpression	1		672774	1					
ANR	672993	EqualityExpression	state == 3		672774	1		==			
ANR	672994	Identifier	state		672774	0					
ANR	672995	PrimaryExpression	3		672774	1					
ANR	672996	CompoundStatement		71:35:1446:1446	672774	1					
ANR	672997	ExpressionStatement	APPEND_ONE_CHAR ( * ps )	3989:6:114234:114254	672774	0	True				
ANR	672998	CallExpression	APPEND_ONE_CHAR ( * ps )		672774	0					
ANR	672999	Callee	APPEND_ONE_CHAR		672774	0					
ANR	673000	Identifier	APPEND_ONE_CHAR		672774	0					
ANR	673001	ArgumentList	* ps		672774	1					
ANR	673002	Argument	* ps		672774	0					
ANR	673003	UnaryOperationExpression	* ps		672774	0					
ANR	673004	UnaryOperator	*		672774	0					
ANR	673005	Identifier	ps		672774	1					
ANR	673006	ExpressionStatement	crlf_state = 0	3992:4:114273:114287	672774	15	True				
ANR	673007	AssignmentExpression	crlf_state = 0		672774	0		=			
ANR	673008	Identifier	crlf_state		672774	0					
ANR	673009	PrimaryExpression	0		672774	1					
ANR	673010	BreakStatement	break ;	3993:4:114293:114298	672774	16	True				
ANR	673011	Label	default :	3995:3:114304:114311	672774	17	True				
ANR	673012	Identifier	default		672774	0					
ANR	673013	SwitchStatement	switch ( state )		672774	18					
ANR	673014	Condition	state	3996:12:114325:114329	672774	0	True				
ANR	673015	Identifier	state		672774	0					
ANR	673016	CompoundStatement		79:19:1552:1552	672774	1					
ANR	673017	Label	case 0 :	3997:5:114339:114345	672774	0	True				
ANR	673018	ExpressionStatement	token . c = ( char * ) ps	3998:6:114353:114373	672774	1	True				
ANR	673019	AssignmentExpression	token . c = ( char * ) ps		672774	0		=			
ANR	673020	MemberAccess	token . c		672774	0					
ANR	673021	Identifier	token		672774	0					
ANR	673022	Identifier	c		672774	1					
ANR	673023	CastExpression	( char * ) ps		672774	1					
ANR	673024	CastTarget	char *		672774	0					
ANR	673025	Identifier	ps		672774	1					
ANR	673026	ExpressionStatement	token . len = 0	3999:6:114381:114394	672774	2	True				
ANR	673027	AssignmentExpression	token . len = 0		672774	0		=			
ANR	673028	MemberAccess	token . len		672774	0					
ANR	673029	Identifier	token		672774	0					
ANR	673030	Identifier	len		672774	1					
ANR	673031	PrimaryExpression	0		672774	1					
ANR	673032	ExpressionStatement	token . a = 0	4000:6:114402:114413	672774	3	True				
ANR	673033	AssignmentExpression	token . a = 0		672774	0		=			
ANR	673034	MemberAccess	token . a		672774	0					
ANR	673035	Identifier	token		672774	0					
ANR	673036	Identifier	a		672774	1					
ANR	673037	PrimaryExpression	0		672774	1					
ANR	673038	ExpressionStatement	state = 1	4001:6:114421:114430	672774	4	True				
ANR	673039	AssignmentExpression	state = 1		672774	0		=			
ANR	673040	Identifier	state		672774	0					
ANR	673041	PrimaryExpression	1		672774	1					
ANR	673042	BreakStatement	break ;	4002:6:114438:114443	672774	5	True				
ANR	673043	Label	case 2 :	4004:5:114451:114457	672774	6	True				
ANR	673044	IfStatement	if ( crlf_state != - 1 )		672774	7					
ANR	673045	Condition	crlf_state != - 1	4005:10:114469:114484	672774	0	True				
ANR	673046	EqualityExpression	crlf_state != - 1		672774	0		!=			
ANR	673047	Identifier	crlf_state		672774	0					
ANR	673048	UnaryOperationExpression	- 1		672774	1					
ANR	673049	UnaryOperator	-		672774	0					
ANR	673050	PrimaryExpression	1		672774	1					
ANR	673051	CompoundStatement		88:28:1707:1707	672774	1					
ANR	673052	ExpressionStatement	token . c = ( char * ) ps	4006:7:114496:114516	672774	0	True				
ANR	673053	AssignmentExpression	token . c = ( char * ) ps		672774	0		=			
ANR	673054	MemberAccess	token . c		672774	0					
ANR	673055	Identifier	token		672774	0					
ANR	673056	Identifier	c		672774	1					
ANR	673057	CastExpression	( char * ) ps		672774	1					
ANR	673058	CastTarget	char *		672774	0					
ANR	673059	Identifier	ps		672774	1					
ANR	673060	ExpressionStatement	token . len = 0	4007:7:114525:114538	672774	1	True				
ANR	673061	AssignmentExpression	token . len = 0		672774	0		=			
ANR	673062	MemberAccess	token . len		672774	0					
ANR	673063	Identifier	token		672774	0					
ANR	673064	Identifier	len		672774	1					
ANR	673065	PrimaryExpression	0		672774	1					
ANR	673066	ExpressionStatement	token . a = 0	4008:7:114547:114558	672774	2	True				
ANR	673067	AssignmentExpression	token . a = 0		672774	0		=			
ANR	673068	MemberAccess	token . a		672774	0					
ANR	673069	Identifier	token		672774	0					
ANR	673070	Identifier	a		672774	1					
ANR	673071	PrimaryExpression	0		672774	1					
ANR	673072	ExpressionStatement	state = 3	4010:7:114568:114577	672774	3	True				
ANR	673073	AssignmentExpression	state = 3		672774	0		=			
ANR	673074	Identifier	state		672774	0					
ANR	673075	PrimaryExpression	3		672774	1					
ANR	673076	BreakStatement	break ;	4011:7:114586:114591	672774	4	True				
ANR	673077	Label	case 3 :	4015:5:114650:114656	672774	8	True				
ANR	673078	IfStatement	if ( crlf_state == - 1 )		672774	9					
ANR	673079	Condition	crlf_state == - 1	4016:10:114668:114683	672774	0	True				
ANR	673080	EqualityExpression	crlf_state == - 1		672774	0		==			
ANR	673081	Identifier	crlf_state		672774	0					
ANR	673082	UnaryOperationExpression	- 1		672774	1					
ANR	673083	UnaryOperator	-		672774	0					
ANR	673084	PrimaryExpression	1		672774	1					
ANR	673085	CompoundStatement		99:28:1906:1906	672774	1					
ANR	673086	ExpressionStatement	fld_val = token	4017:7:114695:114710	672774	0	True				
ANR	673087	AssignmentExpression	fld_val = token		672774	0		=			
ANR	673088	Identifier	fld_val		672774	0					
ANR	673089	Identifier	token		672774	1					
ANR	673090	IfStatement	if ( fld_name . c != NULL && fld_val . c != NULL )		672774	1					
ANR	673091	Condition	fld_name . c != NULL && fld_val . c != NULL	4019:11:114724:114762	672774	0	True				
ANR	673092	AndExpression	fld_name . c != NULL && fld_val . c != NULL		672774	0		&&			
ANR	673093	EqualityExpression	fld_name . c != NULL		672774	0		!=			
ANR	673094	MemberAccess	fld_name . c		672774	0					
ANR	673095	Identifier	fld_name		672774	0					
ANR	673096	Identifier	c		672774	1					
ANR	673097	Identifier	NULL		672774	1					
ANR	673098	EqualityExpression	fld_val . c != NULL		672774	1		!=			
ANR	673099	MemberAccess	fld_val . c		672774	0					
ANR	673100	Identifier	fld_val		672774	0					
ANR	673101	Identifier	c		672774	1					
ANR	673102	Identifier	NULL		672774	1					
ANR	673103	CompoundStatement		103:8:1995:2006	672774	1					
ANR	673104	IdentifierDeclStatement	char * dummy ;	4020:8:114775:114786	672774	0	True				
ANR	673105	IdentifierDecl	* dummy		672774	0					
ANR	673106	IdentifierDeclType	char *		672774	0					
ANR	673107	Identifier	dummy		672774	1					
ANR	673108	ExpressionStatement	SEPARATE_SMART_STR ( & fld_name )	4024:8:114888:114917	672774	1	True				
ANR	673109	CallExpression	SEPARATE_SMART_STR ( & fld_name )		672774	0					
ANR	673110	Callee	SEPARATE_SMART_STR		672774	0					
ANR	673111	Identifier	SEPARATE_SMART_STR		672774	0					
ANR	673112	ArgumentList	& fld_name		672774	1					
ANR	673113	Argument	& fld_name		672774	0					
ANR	673114	UnaryOperationExpression	& fld_name		672774	0					
ANR	673115	UnaryOperator	&		672774	0					
ANR	673116	Identifier	fld_name		672774	1					
ANR	673117	ExpressionStatement	"php_strtoupper ( fld_name . c , fld_name . len )"	4025:8:114927:114967	672774	2	True				
ANR	673118	CallExpression	"php_strtoupper ( fld_name . c , fld_name . len )"		672774	0					
ANR	673119	Callee	php_strtoupper		672774	0					
ANR	673120	Identifier	php_strtoupper		672774	0					
ANR	673121	ArgumentList	fld_name . c		672774	1					
ANR	673122	Argument	fld_name . c		672774	0					
ANR	673123	MemberAccess	fld_name . c		672774	0					
ANR	673124	Identifier	fld_name		672774	0					
ANR	673125	Identifier	c		672774	1					
ANR	673126	Argument	fld_name . len		672774	1					
ANR	673127	MemberAccess	fld_name . len		672774	0					
ANR	673128	Identifier	fld_name		672774	0					
ANR	673129	Identifier	len		672774	1					
ANR	673130	ExpressionStatement	"zend_hash_update ( ht , ( char * ) fld_name . c , fld_name . len , & fld_val , sizeof ( smart_str ) , ( void * * ) & dummy )"	4027:8:114978:115078	672774	3	True				
ANR	673131	CallExpression	"zend_hash_update ( ht , ( char * ) fld_name . c , fld_name . len , & fld_val , sizeof ( smart_str ) , ( void * * ) & dummy )"		672774	0					
ANR	673132	Callee	zend_hash_update		672774	0					
ANR	673133	Identifier	zend_hash_update		672774	0					
ANR	673134	ArgumentList	ht		672774	1					
ANR	673135	Argument	ht		672774	0					
ANR	673136	Identifier	ht		672774	0					
ANR	673137	Argument	( char * ) fld_name . c		672774	1					
ANR	673138	CastExpression	( char * ) fld_name . c		672774	0					
ANR	673139	CastTarget	char *		672774	0					
ANR	673140	MemberAccess	fld_name . c		672774	1					
ANR	673141	Identifier	fld_name		672774	0					
ANR	673142	Identifier	c		672774	1					
ANR	673143	Argument	fld_name . len		672774	2					
ANR	673144	MemberAccess	fld_name . len		672774	0					
ANR	673145	Identifier	fld_name		672774	0					
ANR	673146	Identifier	len		672774	1					
ANR	673147	Argument	& fld_val		672774	3					
ANR	673148	UnaryOperationExpression	& fld_val		672774	0					
ANR	673149	UnaryOperator	&		672774	0					
ANR	673150	Identifier	fld_val		672774	1					
ANR	673151	Argument	sizeof ( smart_str )		672774	4					
ANR	673152	SizeofExpression	sizeof ( smart_str )		672774	0					
ANR	673153	Sizeof	sizeof		672774	0					
ANR	673154	SizeofOperand	smart_str		672774	1					
ANR	673155	Argument	( void * * ) & dummy		672774	5					
ANR	673156	CastExpression	( void * * ) & dummy		672774	0					
ANR	673157	CastTarget	void * *		672774	0					
ANR	673158	UnaryOperationExpression	& dummy		672774	1					
ANR	673159	UnaryOperator	&		672774	0					
ANR	673160	Identifier	dummy		672774	1					
ANR	673161	ExpressionStatement	my_smart_str_dtor ( & fld_name )	4029:8:115089:115117	672774	4	True				
ANR	673162	CallExpression	my_smart_str_dtor ( & fld_name )		672774	0					
ANR	673163	Callee	my_smart_str_dtor		672774	0					
ANR	673164	Identifier	my_smart_str_dtor		672774	0					
ANR	673165	ArgumentList	& fld_name		672774	1					
ANR	673166	Argument	& fld_name		672774	0					
ANR	673167	UnaryOperationExpression	& fld_name		672774	0					
ANR	673168	UnaryOperator	&		672774	0					
ANR	673169	Identifier	fld_name		672774	1					
ANR	673170	ExpressionStatement	"memset ( & fld_name , 0 , sizeof ( smart_str ) )"	4032:7:115136:115175	672774	2	True				
ANR	673171	CallExpression	"memset ( & fld_name , 0 , sizeof ( smart_str ) )"		672774	0					
ANR	673172	Callee	memset		672774	0					
ANR	673173	Identifier	memset		672774	0					
ANR	673174	ArgumentList	& fld_name		672774	1					
ANR	673175	Argument	& fld_name		672774	0					
ANR	673176	UnaryOperationExpression	& fld_name		672774	0					
ANR	673177	UnaryOperator	&		672774	0					
ANR	673178	Identifier	fld_name		672774	1					
ANR	673179	Argument	0		672774	1					
ANR	673180	PrimaryExpression	0		672774	0					
ANR	673181	Argument	sizeof ( smart_str )		672774	2					
ANR	673182	SizeofExpression	sizeof ( smart_str )		672774	0					
ANR	673183	Sizeof	sizeof		672774	0					
ANR	673184	SizeofOperand	smart_str		672774	1					
ANR	673185	ExpressionStatement	"memset ( & fld_val , 0 , sizeof ( smart_str ) )"	4033:7:115184:115222	672774	3	True				
ANR	673186	CallExpression	"memset ( & fld_val , 0 , sizeof ( smart_str ) )"		672774	0					
ANR	673187	Callee	memset		672774	0					
ANR	673188	Identifier	memset		672774	0					
ANR	673189	ArgumentList	& fld_val		672774	1					
ANR	673190	Argument	& fld_val		672774	0					
ANR	673191	UnaryOperationExpression	& fld_val		672774	0					
ANR	673192	UnaryOperator	&		672774	0					
ANR	673193	Identifier	fld_val		672774	1					
ANR	673194	Argument	0		672774	1					
ANR	673195	PrimaryExpression	0		672774	0					
ANR	673196	Argument	sizeof ( smart_str )		672774	2					
ANR	673197	SizeofExpression	sizeof ( smart_str )		672774	0					
ANR	673198	Sizeof	sizeof		672774	0					
ANR	673199	SizeofOperand	smart_str		672774	1					
ANR	673200	ExpressionStatement	token . c = ( char * ) ps	4035:7:115232:115252	672774	4	True				
ANR	673201	AssignmentExpression	token . c = ( char * ) ps		672774	0		=			
ANR	673202	MemberAccess	token . c		672774	0					
ANR	673203	Identifier	token		672774	0					
ANR	673204	Identifier	c		672774	1					
ANR	673205	CastExpression	( char * ) ps		672774	1					
ANR	673206	CastTarget	char *		672774	0					
ANR	673207	Identifier	ps		672774	1					
ANR	673208	ExpressionStatement	token . len = 0	4036:7:115261:115274	672774	5	True				
ANR	673209	AssignmentExpression	token . len = 0		672774	0		=			
ANR	673210	MemberAccess	token . len		672774	0					
ANR	673211	Identifier	token		672774	0					
ANR	673212	Identifier	len		672774	1					
ANR	673213	PrimaryExpression	0		672774	1					
ANR	673214	ExpressionStatement	token . a = 0	4037:7:115283:115294	672774	6	True				
ANR	673215	AssignmentExpression	token . a = 0		672774	0		=			
ANR	673216	MemberAccess	token . a		672774	0					
ANR	673217	Identifier	token		672774	0					
ANR	673218	Identifier	a		672774	1					
ANR	673219	PrimaryExpression	0		672774	1					
ANR	673220	ExpressionStatement	state = 1	4039:7:115304:115313	672774	7	True				
ANR	673221	AssignmentExpression	state = 1		672774	0		=			
ANR	673222	Identifier	state		672774	0					
ANR	673223	PrimaryExpression	1		672774	1					
ANR	673224	BreakStatement	break ;	4041:6:115329:115334	672774	10	True				
ANR	673225	Label	case 4 :	4043:5:115342:115348	672774	11	True				
ANR	673226	ExpressionStatement	APPEND_ONE_CHAR ( ' ' )	4044:6:115356:115376	672774	12	True				
ANR	673227	CallExpression	APPEND_ONE_CHAR ( ' ' )		672774	0					
ANR	673228	Callee	APPEND_ONE_CHAR		672774	0					
ANR	673229	Identifier	APPEND_ONE_CHAR		672774	0					
ANR	673230	ArgumentList	' '		672774	1					
ANR	673231	Argument	' '		672774	0					
ANR	673232	PrimaryExpression	' '		672774	0					
ANR	673233	ExpressionStatement	state = 3	4045:6:115384:115393	672774	13	True				
ANR	673234	AssignmentExpression	state = 3		672774	0		=			
ANR	673235	Identifier	state		672774	0					
ANR	673236	PrimaryExpression	3		672774	1					
ANR	673237	BreakStatement	break ;	4046:6:115401:115406	672774	14	True				
ANR	673238	IfStatement	if ( crlf_state == 1 )		672774	19					
ANR	673239	Condition	crlf_state == 1	4049:8:115423:115437	672774	0	True				
ANR	673240	EqualityExpression	crlf_state == 1		672774	0		==			
ANR	673241	Identifier	crlf_state		672774	0					
ANR	673242	PrimaryExpression	1		672774	1					
ANR	673243	CompoundStatement		132:25:2660:2660	672774	1					
ANR	673244	ExpressionStatement	APPEND_ONE_CHAR ( '\\r' )	4050:5:115447:115468	672774	0	True				
ANR	673245	CallExpression	APPEND_ONE_CHAR ( '\\r' )		672774	0					
ANR	673246	Callee	APPEND_ONE_CHAR		672774	0					
ANR	673247	Identifier	APPEND_ONE_CHAR		672774	0					
ANR	673248	ArgumentList	'\\r'		672774	1					
ANR	673249	Argument	'\\r'		672774	0					
ANR	673250	PrimaryExpression	'\\r'		672774	0					
ANR	673251	ExpressionStatement	APPEND_ONE_CHAR ( * ps )	4053:4:115481:115501	672774	20	True				
ANR	673252	CallExpression	APPEND_ONE_CHAR ( * ps )		672774	0					
ANR	673253	Callee	APPEND_ONE_CHAR		672774	0					
ANR	673254	Identifier	APPEND_ONE_CHAR		672774	0					
ANR	673255	ArgumentList	* ps		672774	1					
ANR	673256	Argument	* ps		672774	0					
ANR	673257	UnaryOperationExpression	* ps		672774	0					
ANR	673258	UnaryOperator	*		672774	0					
ANR	673259	Identifier	ps		672774	1					
ANR	673260	ExpressionStatement	crlf_state = 0	4055:4:115508:115522	672774	21	True				
ANR	673261	AssignmentExpression	crlf_state = 0		672774	0		=			
ANR	673262	Identifier	crlf_state		672774	0					
ANR	673263	PrimaryExpression	0		672774	1					
ANR	673264	BreakStatement	break ;	4056:4:115528:115533	672774	22	True				
ANR	673265	ExpressionStatement	"ps ++ , icnt --"	4058:2:115541:115553	672774	1	True				
ANR	673266	Expression	"ps ++ , icnt --"		672774	0					
ANR	673267	PostIncDecOperationExpression	ps ++		672774	0					
ANR	673268	Identifier	ps		672774	0					
ANR	673269	IncDec	++		672774	1					
ANR	673270	PostIncDecOperationExpression	icnt --		672774	1					
ANR	673271	Identifier	icnt		672774	0					
ANR	673272	IncDec	--		672774	1					
ANR	673273	Label	out :	4060:0:115558:115561	672774	9	True				
ANR	673274	Identifier	out		672774	0					
ANR	673275	IfStatement	if ( state == 2 )		672774	10					
ANR	673276	Condition	state == 2	4061:5:115568:115577	672774	0	True				
ANR	673277	EqualityExpression	state == 2		672774	0		==			
ANR	673278	Identifier	state		672774	0					
ANR	673279	PrimaryExpression	2		672774	1					
ANR	673280	CompoundStatement		144:17:2800:2800	672774	1					
ANR	673281	ExpressionStatement	"token . c = """""	4062:2:115584:115596	672774	0	True				
ANR	673282	AssignmentExpression	"token . c = """""		672774	0		=			
ANR	673283	MemberAccess	token . c		672774	0					
ANR	673284	Identifier	token		672774	0					
ANR	673285	Identifier	c		672774	1					
ANR	673286	PrimaryExpression	""""""		672774	1					
ANR	673287	ExpressionStatement	token . len = 0	4063:2:115600:115613	672774	1	True				
ANR	673288	AssignmentExpression	token . len = 0		672774	0		=			
ANR	673289	MemberAccess	token . len		672774	0					
ANR	673290	Identifier	token		672774	0					
ANR	673291	Identifier	len		672774	1					
ANR	673292	PrimaryExpression	0		672774	1					
ANR	673293	ExpressionStatement	token . a = 0	4064:2:115617:115628	672774	2	True				
ANR	673294	AssignmentExpression	token . a = 0		672774	0		=			
ANR	673295	MemberAccess	token . a		672774	0					
ANR	673296	Identifier	token		672774	0					
ANR	673297	Identifier	a		672774	1					
ANR	673298	PrimaryExpression	0		672774	1					
ANR	673299	ExpressionStatement	state = 3	4066:2:115633:115642	672774	3	True				
ANR	673300	AssignmentExpression	state = 3		672774	0		=			
ANR	673301	Identifier	state		672774	0					
ANR	673302	PrimaryExpression	3		672774	1					
ANR	673303	IfStatement	if ( state == 3 )		672774	11					
ANR	673304	Condition	state == 3	4068:5:115652:115661	672774	0	True				
ANR	673305	EqualityExpression	state == 3		672774	0		==			
ANR	673306	Identifier	state		672774	0					
ANR	673307	PrimaryExpression	3		672774	1					
ANR	673308	CompoundStatement		151:17:2884:2884	672774	1					
ANR	673309	ExpressionStatement	fld_val = token	4069:2:115668:115683	672774	0	True				
ANR	673310	AssignmentExpression	fld_val = token		672774	0		=			
ANR	673311	Identifier	fld_val		672774	0					
ANR	673312	Identifier	token		672774	1					
ANR	673313	IfStatement	if ( fld_name . c != NULL && fld_val . c != NULL )		672774	1					
ANR	673314	Condition	fld_name . c != NULL && fld_val . c != NULL	4071:6:115692:115730	672774	0	True				
ANR	673315	AndExpression	fld_name . c != NULL && fld_val . c != NULL		672774	0		&&			
ANR	673316	EqualityExpression	fld_name . c != NULL		672774	0		!=			
ANR	673317	MemberAccess	fld_name . c		672774	0					
ANR	673318	Identifier	fld_name		672774	0					
ANR	673319	Identifier	c		672774	1					
ANR	673320	Identifier	NULL		672774	1					
ANR	673321	EqualityExpression	fld_val . c != NULL		672774	1		!=			
ANR	673322	MemberAccess	fld_val . c		672774	0					
ANR	673323	Identifier	fld_val		672774	0					
ANR	673324	Identifier	c		672774	1					
ANR	673325	Identifier	NULL		672774	1					
ANR	673326	CompoundStatement		155:3:2958:2969	672774	1					
ANR	673327	IdentifierDeclStatement	void * dummy ;	4072:3:115738:115749	672774	0	True				
ANR	673328	IdentifierDecl	* dummy		672774	0					
ANR	673329	IdentifierDeclType	void *		672774	0					
ANR	673330	Identifier	dummy		672774	1					
ANR	673331	ExpressionStatement	SEPARATE_SMART_STR ( & fld_name )	4076:3:115836:115865	672774	1	True				
ANR	673332	CallExpression	SEPARATE_SMART_STR ( & fld_name )		672774	0					
ANR	673333	Callee	SEPARATE_SMART_STR		672774	0					
ANR	673334	Identifier	SEPARATE_SMART_STR		672774	0					
ANR	673335	ArgumentList	& fld_name		672774	1					
ANR	673336	Argument	& fld_name		672774	0					
ANR	673337	UnaryOperationExpression	& fld_name		672774	0					
ANR	673338	UnaryOperator	&		672774	0					
ANR	673339	Identifier	fld_name		672774	1					
ANR	673340	ExpressionStatement	"php_strtoupper ( fld_name . c , fld_name . len )"	4077:3:115870:115910	672774	2	True				
ANR	673341	CallExpression	"php_strtoupper ( fld_name . c , fld_name . len )"		672774	0					
ANR	673342	Callee	php_strtoupper		672774	0					
ANR	673343	Identifier	php_strtoupper		672774	0					
ANR	673344	ArgumentList	fld_name . c		672774	1					
ANR	673345	Argument	fld_name . c		672774	0					
ANR	673346	MemberAccess	fld_name . c		672774	0					
ANR	673347	Identifier	fld_name		672774	0					
ANR	673348	Identifier	c		672774	1					
ANR	673349	Argument	fld_name . len		672774	1					
ANR	673350	MemberAccess	fld_name . len		672774	0					
ANR	673351	Identifier	fld_name		672774	0					
ANR	673352	Identifier	len		672774	1					
ANR	673353	ExpressionStatement	"zend_hash_update ( ht , ( char * ) fld_name . c , fld_name . len , & fld_val , sizeof ( smart_str ) , ( void * * ) & dummy )"	4079:3:115916:116016	672774	3	True				
ANR	673354	CallExpression	"zend_hash_update ( ht , ( char * ) fld_name . c , fld_name . len , & fld_val , sizeof ( smart_str ) , ( void * * ) & dummy )"		672774	0					
ANR	673355	Callee	zend_hash_update		672774	0					
ANR	673356	Identifier	zend_hash_update		672774	0					
ANR	673357	ArgumentList	ht		672774	1					
ANR	673358	Argument	ht		672774	0					
ANR	673359	Identifier	ht		672774	0					
ANR	673360	Argument	( char * ) fld_name . c		672774	1					
ANR	673361	CastExpression	( char * ) fld_name . c		672774	0					
ANR	673362	CastTarget	char *		672774	0					
ANR	673363	MemberAccess	fld_name . c		672774	1					
ANR	673364	Identifier	fld_name		672774	0					
ANR	673365	Identifier	c		672774	1					
ANR	673366	Argument	fld_name . len		672774	2					
ANR	673367	MemberAccess	fld_name . len		672774	0					
ANR	673368	Identifier	fld_name		672774	0					
ANR	673369	Identifier	len		672774	1					
ANR	673370	Argument	& fld_val		672774	3					
ANR	673371	UnaryOperationExpression	& fld_val		672774	0					
ANR	673372	UnaryOperator	&		672774	0					
ANR	673373	Identifier	fld_val		672774	1					
ANR	673374	Argument	sizeof ( smart_str )		672774	4					
ANR	673375	SizeofExpression	sizeof ( smart_str )		672774	0					
ANR	673376	Sizeof	sizeof		672774	0					
ANR	673377	SizeofOperand	smart_str		672774	1					
ANR	673378	Argument	( void * * ) & dummy		672774	5					
ANR	673379	CastExpression	( void * * ) & dummy		672774	0					
ANR	673380	CastTarget	void * *		672774	0					
ANR	673381	UnaryOperationExpression	& dummy		672774	1					
ANR	673382	UnaryOperator	&		672774	0					
ANR	673383	Identifier	dummy		672774	1					
ANR	673384	ExpressionStatement	my_smart_str_dtor ( & fld_name )	4081:3:116022:116050	672774	4	True				
ANR	673385	CallExpression	my_smart_str_dtor ( & fld_name )		672774	0					
ANR	673386	Callee	my_smart_str_dtor		672774	0					
ANR	673387	Identifier	my_smart_str_dtor		672774	0					
ANR	673388	ArgumentList	& fld_name		672774	1					
ANR	673389	Argument	& fld_name		672774	0					
ANR	673390	UnaryOperationExpression	& fld_name		672774	0					
ANR	673391	UnaryOperator	&		672774	0					
ANR	673392	Identifier	fld_name		672774	1					
ANR	673393	ReturnStatement	return state ;	4084:1:116060:116072	672774	12	True				
ANR	673394	Identifier	state		672774	0					
ANR	673395	ReturnType	static int		672774	1					
ANR	673396	Identifier	_php_mbstr_parse_mail_headers		672774	2					
ANR	673397	ParameterList	"HashTable * ht , const char * str , size_t str_len"		672774	3					
ANR	673398	Parameter	HashTable * ht	3917:41:112731:112743	672774	0	True				
ANR	673399	ParameterType	HashTable *		672774	0					
ANR	673400	Identifier	ht		672774	1					
ANR	673401	Parameter	const char * str	3917:56:112746:112760	672774	1	True				
ANR	673402	ParameterType	const char *		672774	0					
ANR	673403	Identifier	str		672774	1					
ANR	673404	Parameter	size_t str_len	3917:73:112763:112776	672774	2	True				
ANR	673405	ParameterType	size_t		672774	0					
ANR	673406	Identifier	str_len		672774	1					
ANR	673407	CFGEntryNode	ENTRY		672774		True				
ANR	673408	CFGExitNode	EXIT		672774		True				
ANR	673409	Symbol	& token		672774						
ANR	673410	Symbol	fld_name . len		672774						
ANR	673411	Symbol	ps		672774						
ANR	673412	Symbol	NULL		672774						
ANR	673413	Symbol	& fld_val		672774						
ANR	673414	Symbol	& fld_name		672774						
ANR	673415	Symbol	fld_name		672774						
ANR	673416	Symbol	fld_name . c		672774						
ANR	673417	Symbol	* ps		672774						
ANR	673418	Symbol	ht		672774						
ANR	673419	Symbol	token		672774						
ANR	673420	Symbol	str		672774						
ANR	673421	Symbol	dummy		672774						
ANR	673422	Symbol	icnt		672774						
ANR	673423	Symbol	& dummy		672774						
ANR	673424	Symbol	str_len		672774						
ANR	673425	Symbol	fld_val		672774						
ANR	673426	Symbol	token . len		672774						
ANR	673427	Symbol	crlf_state		672774						
ANR	673428	Symbol	state		672774						
ANR	673429	Symbol	token . c		672774						
ANR	673430	Symbol	fld_val . c		672774						
ANR	673431	Symbol	token . a		672774						
ANR	673432	DeclStmt									
ANR	673433	Decl							int	int	n
ANR	673434	DeclStmt									
ANR	673435	Decl							char	char *	to
ANR	673436	DeclStmt									
ANR	673437	Decl							int	int	to_len
ANR	673438	DeclStmt									
ANR	673439	Decl							char	char *	message
ANR	673440	DeclStmt									
ANR	673441	Decl							int	int	message_len
ANR	673442	DeclStmt									
ANR	673443	Decl							char	char *	headers
ANR	673444	DeclStmt									
ANR	673445	Decl							int	int	headers_len
ANR	673446	DeclStmt									
ANR	673447	Decl							char	char *	subject
ANR	673448	DeclStmt									
ANR	673449	Decl							int	int	subject_len
ANR	673450	DeclStmt									
ANR	673451	Decl							char	char *	extra_cmd
ANR	673452	DeclStmt									
ANR	673453	Decl							int	int	extra_cmd_len
ANR	673454	DeclStmt									
ANR	673455	Decl							int	int	i
ANR	673456	DeclStmt									
ANR	673457	Decl							char	char *	to_r
ANR	673458	DeclStmt									
ANR	673459	Decl							char	char *	force_extra_parameters
ANR	673460	ClassDef	<unnamed>	4103:1:116414:116493							
ANR	673461	DeclStmt									
ANR	673462	Decl									suppressed_hdrs
ANR	673463	DeclStmt									
ANR	673464	Decl							char	char *	message_buf
ANR	673465	Decl							char	char *	subject_buf
ANR	673466	Decl							char	char *	p
ANR	673467	DeclStmt									
ANR	673468	Decl							mbfl_string	mbfl_string	orig_str
ANR	673469	Decl							mbfl_string	mbfl_string	conv_str
ANR	673470	DeclStmt									
ANR	673471	Decl							mbfl_string	mbfl_string *	pstr
ANR	673472	DeclStmt									
ANR	673473	Decl							enum mbfl_no_encoding	enum mbfl_no_encoding	tran_cs
ANR	673474	Decl							enum mbfl_no_encoding	enum mbfl_no_encoding	head_enc
ANR	673475	Decl							enum mbfl_no_encoding	enum mbfl_no_encoding	body_enc
ANR	673476	DeclStmt									
ANR	673477	Decl							mbfl_memory_device	mbfl_memory_device	device
ANR	673478	DeclStmt									
ANR	673479	Decl							const mbfl_language	const mbfl_language *	lang
ANR	673480	DeclStmt									
ANR	673481	Decl							int	int	err
ANR	673482	DeclStmt									
ANR	673483	Decl							HashTable	HashTable	ht_headers
ANR	673484	DeclStmt									
ANR	673485	Decl							smart_str	smart_str *	s
ANR	673486	DeclStmt									
ANR	673487	Decl							extern void	extern void ( mbfl_memory_device * device )	mbfl_memory_device_unput
ANR	673488	DeclStmt									
ANR	673489	Decl							char	char *	pp
ANR	673490	Decl							char	char *	ee
ANR	673491	DeclStmt									
ANR	673492	Decl							char	char *	tmp
ANR	673493	DeclStmt									
ANR	673494	Decl							char	char *	param_name
ANR	673495	DeclStmt									
ANR	673496	Decl							char	char *	charset
ANR	673497	DeclStmt									
ANR	673498	Decl							enum mbfl_no_encoding	enum mbfl_no_encoding	_tran_cs
ANR	673499	DeclStmt									
ANR	673500	Decl							enum mbfl_no_encoding	enum mbfl_no_encoding	_body_enc
ANR	673501	DeclStmt									
ANR	673502	Decl							const mbfl_encoding	const mbfl_encoding *	encoding
ANR	673503	DeclStmt									
ANR	673504	Decl							const mbfl_encoding	const mbfl_encoding *	encoding
ANR	673505	DeclStmt									
ANR	673506	Decl							mbfl_string	mbfl_string	tmpstr
ANR	673507	DeclStmt									
ANR	673508	Decl							char	char *	typ
ANR	673509	DeclStmt									
ANR	673510	Decl							int	int	typ_len
ANR	673511	DeclStmt									
ANR	673512	Decl							size_t	size_t	n
ANR	673513	DeclStmt									
ANR	673514	Decl							char	char *	name
ANR	673515	DeclStmt									
ANR	673516	Decl							const struct mb_overload_def	const struct mb_overload_def *	over_func
ANR	673517	DeclStmt									
ANR	673518	Decl							zval	zval *	row1
ANR	673519	Decl							zval	zval *	row2
ANR	673520	DeclStmt									
ANR	673521	Decl							const mbfl_language	const mbfl_language *	lang
ANR	673522	DeclStmt									
ANR	673523	Decl							const mbfl_encoding	const mbfl_encoding * *	entry
ANR	673524	DeclStmt									
ANR	673525	Decl							size_t	size_t	i
ANR	673526	DeclStmt									
ANR	673527	Decl							size_t	size_t	i
ANR	673528	DeclStmt									
ANR	673529	Decl							char	char *	var
ANR	673530	DeclStmt									
ANR	673531	Decl							int	int	var_len
ANR	673532	DeclStmt									
ANR	673533	Decl							char	char *	enc
ANR	673534	DeclStmt									
ANR	673535	Decl							int	int	enc_len
ANR	673536	DeclStmt									
ANR	673537	Decl							mbfl_buffer_converter	mbfl_buffer_converter *	convd
ANR	673538	DeclStmt									
ANR	673539	Decl							const mbfl_encoding	const mbfl_encoding *	encoding
ANR	673540	DeclStmt									
ANR	673541	Decl							mbfl_string	mbfl_string	string
ANR	673542	Decl							mbfl_string	mbfl_string	result
ANR	673543	Decl							mbfl_string	mbfl_string *	ret
ANR	673544	DeclStmt									
ANR	673545	Decl							long	long	illegalchars
ANR	673546	DeclStmt									
ANR	673547	Decl							const mbfl_encoding	const mbfl_encoding * *	entry
ANR	673548	DeclStmt									
ANR	673549	Decl							size_t	size_t	nentries
ANR	673550	DeclStmt									
ANR	673551	Decl							const enum mbfl_no_encoding	const enum mbfl_no_encoding *	src
ANR	673552	DeclStmt									
ANR	673553	Decl							size_t	size_t	i
ANR	673554	Function	php_mb_mbchar_bytes_ex	4652:0:134622:135060							
ANR	673555	FunctionDef	"php_mb_mbchar_bytes_ex (const char * s , const mbfl_encoding * enc)"		673554	0					
ANR	673556	CompoundStatement		4653:0:134706:135060	673554	0					
ANR	673557	IfStatement	if ( enc != NULL )		673554	0					
ANR	673558	Condition	enc != NULL	4654:5:134713:134723	673554	0	True				
ANR	673559	EqualityExpression	enc != NULL		673554	0		!=			
ANR	673560	Identifier	enc		673554	0					
ANR	673561	Identifier	NULL		673554	1					
ANR	673562	CompoundStatement		2:18:19:19	673554	1					
ANR	673563	IfStatement	if ( enc -> flag & MBFL_ENCTYPE_MBCS )		673554	0					
ANR	673564	Condition	enc -> flag & MBFL_ENCTYPE_MBCS	4655:6:134734:134762	673554	0	True				
ANR	673565	BitAndExpression	enc -> flag & MBFL_ENCTYPE_MBCS		673554	0		&			
ANR	673566	PtrMemberAccess	enc -> flag		673554	0					
ANR	673567	Identifier	enc		673554	0					
ANR	673568	Identifier	flag		673554	1					
ANR	673569	Identifier	MBFL_ENCTYPE_MBCS		673554	1					
ANR	673570	CompoundStatement		3:37:58:58	673554	1					
ANR	673571	IfStatement	if ( enc -> mblen_table != NULL )		673554	0					
ANR	673572	Condition	enc -> mblen_table != NULL	4656:7:134774:134797	673554	0	True				
ANR	673573	EqualityExpression	enc -> mblen_table != NULL		673554	0		!=			
ANR	673574	PtrMemberAccess	enc -> mblen_table		673554	0					
ANR	673575	Identifier	enc		673554	0					
ANR	673576	Identifier	mblen_table		673554	1					
ANR	673577	Identifier	NULL		673554	1					
ANR	673578	CompoundStatement		4:33:93:93	673554	1					
ANR	673579	IfStatement	if ( s != NULL )		673554	0					
ANR	673580	Condition	s != NULL	4657:8:134810:134818	673554	0	True				
ANR	673581	EqualityExpression	s != NULL		673554	0		!=			
ANR	673582	Identifier	s		673554	0					
ANR	673583	Identifier	NULL		673554	1					
ANR	673584	ReturnStatement	return enc -> mblen_table [ * ( unsigned char * ) s ] ;	4657:19:134821:134865	673554	1	True				
ANR	673585	ArrayIndexing	enc -> mblen_table [ * ( unsigned char * ) s ]		673554	0					
ANR	673586	PtrMemberAccess	enc -> mblen_table		673554	0					
ANR	673587	Identifier	enc		673554	0					
ANR	673588	Identifier	mblen_table		673554	1					
ANR	673589	UnaryOperationExpression	* ( unsigned char * ) s		673554	1					
ANR	673590	UnaryOperator	*		673554	0					
ANR	673591	CastExpression	( unsigned char * ) s		673554	1					
ANR	673592	CastTarget	unsigned char *		673554	0					
ANR	673593	Identifier	s		673554	1					
ANR	673594	ElseStatement	else		673554	0					
ANR	673595	IfStatement	if ( enc -> flag & ( MBFL_ENCTYPE_WCS2BE | MBFL_ENCTYPE_WCS2LE ) )		673554	0					
ANR	673596	Condition	enc -> flag & ( MBFL_ENCTYPE_WCS2BE | MBFL_ENCTYPE_WCS2LE )	4659:13:134885:134939	673554	0	True				
ANR	673597	BitAndExpression	enc -> flag & ( MBFL_ENCTYPE_WCS2BE | MBFL_ENCTYPE_WCS2LE )		673554	0		&			
ANR	673598	PtrMemberAccess	enc -> flag		673554	0					
ANR	673599	Identifier	enc		673554	0					
ANR	673600	Identifier	flag		673554	1					
ANR	673601	InclusiveOrExpression	MBFL_ENCTYPE_WCS2BE | MBFL_ENCTYPE_WCS2LE		673554	1		|			
ANR	673602	Identifier	MBFL_ENCTYPE_WCS2BE		673554	0					
ANR	673603	Identifier	MBFL_ENCTYPE_WCS2LE		673554	1					
ANR	673604	CompoundStatement		7:70:235:235	673554	1					
ANR	673605	ReturnStatement	return 2 ;	4660:3:134947:134955	673554	0	True				
ANR	673606	PrimaryExpression	2		673554	0					
ANR	673607	ElseStatement	else		673554	0					
ANR	673608	IfStatement	if ( enc -> flag & ( MBFL_ENCTYPE_WCS4BE | MBFL_ENCTYPE_WCS4LE ) )		673554	0					
ANR	673609	Condition	enc -> flag & ( MBFL_ENCTYPE_WCS4BE | MBFL_ENCTYPE_WCS4LE )	4661:13:134970:135024	673554	0	True				
ANR	673610	BitAndExpression	enc -> flag & ( MBFL_ENCTYPE_WCS4BE | MBFL_ENCTYPE_WCS4LE )		673554	0		&			
ANR	673611	PtrMemberAccess	enc -> flag		673554	0					
ANR	673612	Identifier	enc		673554	0					
ANR	673613	Identifier	flag		673554	1					
ANR	673614	InclusiveOrExpression	MBFL_ENCTYPE_WCS4BE | MBFL_ENCTYPE_WCS4LE		673554	1		|			
ANR	673615	Identifier	MBFL_ENCTYPE_WCS4BE		673554	0					
ANR	673616	Identifier	MBFL_ENCTYPE_WCS4LE		673554	1					
ANR	673617	CompoundStatement		9:70:320:320	673554	1					
ANR	673618	ReturnStatement	return 4 ;	4662:3:135032:135040	673554	0	True				
ANR	673619	PrimaryExpression	4		673554	0					
ANR	673620	ReturnStatement	return 1 ;	4665:1:135050:135058	673554	1	True				
ANR	673621	PrimaryExpression	1		673554	0					
ANR	673622	ReturnType	MBSTRING_API size_t		673554	1					
ANR	673623	Identifier	php_mb_mbchar_bytes_ex		673554	2					
ANR	673624	ParameterList	"const char * s , const mbfl_encoding * enc"		673554	3					
ANR	673625	Parameter	const char * s	4652:43:134665:134677	673554	0	True				
ANR	673626	ParameterType	const char *		673554	0					
ANR	673627	Identifier	s		673554	1					
ANR	673628	Parameter	const mbfl_encoding * enc	4652:58:134680:134703	673554	1	True				
ANR	673629	ParameterType	const mbfl_encoding *		673554	0					
ANR	673630	Identifier	enc		673554	1					
ANR	673631	CFGEntryNode	ENTRY		673554		True				
ANR	673632	CFGExitNode	EXIT		673554		True				
ANR	673633	Symbol	MBFL_ENCTYPE_WCS2BE		673554						
ANR	673634	Symbol	MBFL_ENCTYPE_WCS4BE		673554						
ANR	673635	Symbol	NULL		673554						
ANR	673636	Symbol	enc -> flag		673554						
ANR	673637	Symbol	* enc -> mblen_table		673554						
ANR	673638	Symbol	MBFL_ENCTYPE_WCS4LE		673554						
ANR	673639	Symbol	MBFL_ENCTYPE_MBCS		673554						
ANR	673640	Symbol	* ( unsigned char * ) s		673554						
ANR	673641	Symbol	* * enc		673554						
ANR	673642	Symbol	MBFL_ENCTYPE_WCS2LE		673554						
ANR	673643	Symbol	* * ( unsigned char * ) s		673554						
ANR	673644	Symbol	s		673554						
ANR	673645	Symbol	* * s		673554						
ANR	673646	Symbol	enc		673554						
ANR	673647	Symbol	* enc		673554						
ANR	673648	Symbol	enc -> mblen_table		673554						
ANR	673649	Symbol	* s		673554						
ANR	673650	Function	php_mb_safe_strrchr_ex	4677:0:135321:136129							
ANR	673651	FunctionDef	"php_mb_safe_strrchr_ex (const char * s , unsigned int c , size_t nbytes , const mbfl_encoding * enc)"		673650	0					
ANR	673652	CompoundStatement		4678:0:135435:136129	673650	0					
ANR	673653	Statement	register	4679:1:135438:135445	673650	0	True				
ANR	673654	IdentifierDeclStatement	const char * p = s ;	4679:10:135447:135464	673650	1	True				
ANR	673655	IdentifierDecl	* p = s		673650	0					
ANR	673656	IdentifierDeclType	const char *		673650	0					
ANR	673657	Identifier	p		673650	1					
ANR	673658	AssignmentExpression	* p = s		673650	2		=			
ANR	673659	Identifier	s		673650	0					
ANR	673660	Identifier	s		673650	1					
ANR	673661	IdentifierDeclStatement	char * last = NULL ;	4680:1:135467:135482	673650	2	True				
ANR	673662	IdentifierDecl	* last = NULL		673650	0					
ANR	673663	IdentifierDeclType	char *		673650	0					
ANR	673664	Identifier	last		673650	1					
ANR	673665	AssignmentExpression	* last = NULL		673650	2		=			
ANR	673666	Identifier	NULL		673650	0					
ANR	673667	Identifier	NULL		673650	1					
ANR	673668	IfStatement	if ( nbytes == ( size_t ) - 1 )		673650	3					
ANR	673669	Condition	nbytes == ( size_t ) - 1	4682:5:135490:135509	673650	0	True				
ANR	673670	EqualityExpression	nbytes == ( size_t ) - 1		673650	0		==			
ANR	673671	Identifier	nbytes		673650	0					
ANR	673672	CastExpression	( size_t ) - 1		673650	1					
ANR	673673	CastTarget	size_t		673650	0					
ANR	673674	UnaryOperationExpression	- 1		673650	1					
ANR	673675	UnaryOperator	-		673650	0					
ANR	673676	PrimaryExpression	1		673650	1					
ANR	673677	CompoundStatement		6:2:80:93	673650	1					
ANR	673678	IdentifierDeclStatement	size_t nb = 0 ;	4683:2:135516:135529	673650	0	True				
ANR	673679	IdentifierDecl	nb = 0		673650	0					
ANR	673680	IdentifierDeclType	size_t		673650	0					
ANR	673681	Identifier	nb		673650	1					
ANR	673682	AssignmentExpression	nb = 0		673650	2		=			
ANR	673683	Identifier	nb		673650	0					
ANR	673684	PrimaryExpression	0		673650	1					
ANR	673685	WhileStatement	while ( * p != '\\0' )		673650	1					
ANR	673686	Condition	* p != '\\0'	4685:9:135541:135550	673650	0	True				
ANR	673687	EqualityExpression	* p != '\\0'		673650	0		!=			
ANR	673688	UnaryOperationExpression	* p		673650	0					
ANR	673689	UnaryOperator	*		673650	0					
ANR	673690	Identifier	p		673650	1					
ANR	673691	PrimaryExpression	'\\0'		673650	1					
ANR	673692	CompoundStatement		8:21:117:117	673650	1					
ANR	673693	IfStatement	if ( nb == 0 )		673650	0					
ANR	673694	Condition	nb == 0	4686:7:135562:135568	673650	0	True				
ANR	673695	EqualityExpression	nb == 0		673650	0		==			
ANR	673696	Identifier	nb		673650	0					
ANR	673697	PrimaryExpression	0		673650	1					
ANR	673698	CompoundStatement		9:16:135:135	673650	1					
ANR	673699	IfStatement	if ( ( unsigned char ) * p == ( unsigned char ) c )		673650	0					
ANR	673700	Condition	( unsigned char ) * p == ( unsigned char ) c	4687:8:135581:135617	673650	0	True				
ANR	673701	EqualityExpression	( unsigned char ) * p == ( unsigned char ) c		673650	0		==			
ANR	673702	CastExpression	( unsigned char ) * p		673650	0					
ANR	673703	CastTarget	unsigned char		673650	0					
ANR	673704	UnaryOperationExpression	* p		673650	1					
ANR	673705	UnaryOperator	*		673650	0					
ANR	673706	Identifier	p		673650	1					
ANR	673707	CastExpression	( unsigned char ) c		673650	1					
ANR	673708	CastTarget	unsigned char		673650	0					
ANR	673709	Identifier	c		673650	1					
ANR	673710	CompoundStatement		10:47:184:184	673650	1					
ANR	673711	ExpressionStatement	last = ( char * ) p	4688:5:135627:135643	673650	0	True				
ANR	673712	AssignmentExpression	last = ( char * ) p		673650	0		=			
ANR	673713	Identifier	last		673650	0					
ANR	673714	CastExpression	( char * ) p		673650	1					
ANR	673715	CastTarget	char *		673650	0					
ANR	673716	Identifier	p		673650	1					
ANR	673717	ExpressionStatement	"nb = php_mb_mbchar_bytes_ex ( p , enc )"	4690:4:135655:135690	673650	1	True				
ANR	673718	AssignmentExpression	"nb = php_mb_mbchar_bytes_ex ( p , enc )"		673650	0		=			
ANR	673719	Identifier	nb		673650	0					
ANR	673720	CallExpression	"php_mb_mbchar_bytes_ex ( p , enc )"		673650	1					
ANR	673721	Callee	php_mb_mbchar_bytes_ex		673650	0					
ANR	673722	Identifier	php_mb_mbchar_bytes_ex		673650	0					
ANR	673723	ArgumentList	p		673650	1					
ANR	673724	Argument	p		673650	0					
ANR	673725	Identifier	p		673650	0					
ANR	673726	Argument	enc		673650	1					
ANR	673727	Identifier	enc		673650	0					
ANR	673728	IfStatement	if ( nb == 0 )		673650	2					
ANR	673729	Condition	nb == 0	4691:8:135700:135706	673650	0	True				
ANR	673730	EqualityExpression	nb == 0		673650	0		==			
ANR	673731	Identifier	nb		673650	0					
ANR	673732	PrimaryExpression	0		673650	1					
ANR	673733	CompoundStatement		14:17:273:273	673650	1					
ANR	673734	ReturnStatement	return NULL ;	4692:5:135716:135727	673650	0	True				
ANR	673735	Identifier	NULL		673650	0					
ANR	673736	ExpressionStatement	-- nb	4695:3:135775:135779	673650	1	True				
ANR	673737	UnaryExpression	-- nb		673650	0					
ANR	673738	IncDec	--		673650	0					
ANR	673739	Identifier	nb		673650	1					
ANR	673740	ExpressionStatement	++ p	4696:3:135784:135787	673650	2	True				
ANR	673741	UnaryExpression	++ p		673650	0					
ANR	673742	IncDec	++		673650	0					
ANR	673743	Identifier	p		673650	1					
ANR	673744	ElseStatement	else		673650	0					
ANR	673745	CompoundStatement		23:11:411:429	673650	0					
ANR	673746	Statement	register	4699:2:135805:135812	673650	0	True				
ANR	673747	IdentifierDeclStatement	size_t bcnt = nbytes ;	4699:11:135814:135834	673650	1	True				
ANR	673748	IdentifierDecl	bcnt = nbytes		673650	0					
ANR	673749	IdentifierDeclType	size_t		673650	0					
ANR	673750	Identifier	bcnt		673650	1					
ANR	673751	AssignmentExpression	bcnt = nbytes		673650	2		=			
ANR	673752	Identifier	nbytes		673650	0					
ANR	673753	Identifier	nbytes		673650	1					
ANR	673754	Statement	register	4700:2:135838:135845	673650	2	True				
ANR	673755	IdentifierDeclStatement	size_t nbytes_char ;	4700:11:135847:135865	673650	3	True				
ANR	673756	IdentifierDecl	nbytes_char		673650	0					
ANR	673757	IdentifierDeclType	size_t		673650	0					
ANR	673758	Identifier	nbytes_char		673650	1					
ANR	673759	WhileStatement	while ( bcnt > 0 )		673650	4					
ANR	673760	Condition	bcnt > 0	4701:9:135876:135883	673650	0	True				
ANR	673761	RelationalExpression	bcnt > 0		673650	0		>			
ANR	673762	Identifier	bcnt		673650	0					
ANR	673763	PrimaryExpression	0		673650	1					
ANR	673764	CompoundStatement		24:19:450:450	673650	1					
ANR	673765	IfStatement	if ( ( unsigned char ) * p == ( unsigned char ) c )		673650	0					
ANR	673766	Condition	( unsigned char ) * p == ( unsigned char ) c	4702:7:135895:135931	673650	0	True				
ANR	673767	EqualityExpression	( unsigned char ) * p == ( unsigned char ) c		673650	0		==			
ANR	673768	CastExpression	( unsigned char ) * p		673650	0					
ANR	673769	CastTarget	unsigned char		673650	0					
ANR	673770	UnaryOperationExpression	* p		673650	1					
ANR	673771	UnaryOperator	*		673650	0					
ANR	673772	Identifier	p		673650	1					
ANR	673773	CastExpression	( unsigned char ) c		673650	1					
ANR	673774	CastTarget	unsigned char		673650	0					
ANR	673775	Identifier	c		673650	1					
ANR	673776	CompoundStatement		25:46:498:498	673650	1					
ANR	673777	ExpressionStatement	last = ( char * ) p	4703:4:135940:135956	673650	0	True				
ANR	673778	AssignmentExpression	last = ( char * ) p		673650	0		=			
ANR	673779	Identifier	last		673650	0					
ANR	673780	CastExpression	( char * ) p		673650	1					
ANR	673781	CastTarget	char *		673650	0					
ANR	673782	Identifier	p		673650	1					
ANR	673783	ExpressionStatement	"nbytes_char = php_mb_mbchar_bytes_ex ( p , enc )"	4705:3:135966:136010	673650	1	True				
ANR	673784	AssignmentExpression	"nbytes_char = php_mb_mbchar_bytes_ex ( p , enc )"		673650	0		=			
ANR	673785	Identifier	nbytes_char		673650	0					
ANR	673786	CallExpression	"php_mb_mbchar_bytes_ex ( p , enc )"		673650	1					
ANR	673787	Callee	php_mb_mbchar_bytes_ex		673650	0					
ANR	673788	Identifier	php_mb_mbchar_bytes_ex		673650	0					
ANR	673789	ArgumentList	p		673650	1					
ANR	673790	Argument	p		673650	0					
ANR	673791	Identifier	p		673650	0					
ANR	673792	Argument	enc		673650	1					
ANR	673793	Identifier	enc		673650	0					
ANR	673794	IfStatement	if ( bcnt < nbytes_char )		673650	2					
ANR	673795	Condition	bcnt < nbytes_char	4706:7:136019:136036	673650	0	True				
ANR	673796	RelationalExpression	bcnt < nbytes_char		673650	0		<			
ANR	673797	Identifier	bcnt		673650	0					
ANR	673798	Identifier	nbytes_char		673650	1					
ANR	673799	CompoundStatement		29:27:603:603	673650	1					
ANR	673800	ReturnStatement	return NULL ;	4707:4:136045:136056	673650	0	True				
ANR	673801	Identifier	NULL		673650	0					
ANR	673802	ExpressionStatement	p += nbytes_char	4709:3:136066:136082	673650	3	True				
ANR	673803	AssignmentExpression	p += nbytes_char		673650	0		+=			
ANR	673804	Identifier	p		673650	0					
ANR	673805	Identifier	nbytes_char		673650	1					
ANR	673806	ExpressionStatement	bcnt -= nbytes_char	4710:3:136087:136106	673650	4	True				
ANR	673807	AssignmentExpression	bcnt -= nbytes_char		673650	0		-=			
ANR	673808	Identifier	bcnt		673650	0					
ANR	673809	Identifier	nbytes_char		673650	1					
ANR	673810	ReturnStatement	return last ;	4713:1:136116:136127	673650	4	True				
ANR	673811	Identifier	last		673650	0					
ANR	673812	ReturnType	MBSTRING_API char *		673650	1					
ANR	673813	Identifier	php_mb_safe_strrchr_ex		673650	2					
ANR	673814	ParameterList	"const char * s , unsigned int c , size_t nbytes , const mbfl_encoding * enc"		673650	3					
ANR	673815	Parameter	const char * s	4677:42:135363:135375	673650	0	True				
ANR	673816	ParameterType	const char *		673650	0					
ANR	673817	Identifier	s		673650	1					
ANR	673818	Parameter	unsigned int c	4677:57:135378:135391	673650	1	True				
ANR	673819	ParameterType	unsigned int		673650	0					
ANR	673820	Identifier	c		673650	1					
ANR	673821	Parameter	size_t nbytes	4677:73:135394:135406	673650	2	True				
ANR	673822	ParameterType	size_t		673650	0					
ANR	673823	Identifier	nbytes		673650	1					
ANR	673824	Parameter	const mbfl_encoding * enc	4677:88:135409:135432	673650	3	True				
ANR	673825	ParameterType	const mbfl_encoding *		673650	0					
ANR	673826	Identifier	enc		673650	1					
ANR	673827	CFGEntryNode	ENTRY		673650		True				
ANR	673828	CFGExitNode	EXIT		673650		True				
ANR	673829	Symbol	p		673650						
ANR	673830	Symbol	php_mb_mbchar_bytes_ex		673650						
ANR	673831	Symbol	s		673650						
ANR	673832	Symbol	c		673650						
ANR	673833	Symbol	NULL		673650						
ANR	673834	Symbol	last		673650						
ANR	673835	Symbol	nb		673650						
ANR	673836	Symbol	nbytes_char		673650						
ANR	673837	Symbol	bcnt		673650						
ANR	673838	Symbol	* p		673650						
ANR	673839	Symbol	enc		673650						
ANR	673840	Symbol	nbytes		673650						
ANR	673841	Function	php_mb_safe_strrchr	4718:0:136193:136363							
ANR	673842	FunctionDef	"php_mb_safe_strrchr (const char * s , unsigned int c , size_t nbytes TSRMLS_DC)"		673841	0					
ANR	673843	CompoundStatement		4719:0:136288:136363	673841	0					
ANR	673844	ReturnStatement	"return php_mb_safe_strrchr_ex ( s , c , nbytes , MBSTRG ( internal_encoding ) ) ;"	4720:1:136291:136361	673841	0	True				
ANR	673845	CallExpression	"php_mb_safe_strrchr_ex ( s , c , nbytes , MBSTRG ( internal_encoding ) )"		673841	0					
ANR	673846	Callee	php_mb_safe_strrchr_ex		673841	0					
ANR	673847	Identifier	php_mb_safe_strrchr_ex		673841	0					
ANR	673848	ArgumentList	s		673841	1					
ANR	673849	Argument	s		673841	0					
ANR	673850	Identifier	s		673841	0					
ANR	673851	Argument	c		673841	1					
ANR	673852	Identifier	c		673841	0					
ANR	673853	Argument	nbytes		673841	2					
ANR	673854	Identifier	nbytes		673841	0					
ANR	673855	Argument	MBSTRG ( internal_encoding )		673841	3					
ANR	673856	CallExpression	MBSTRG ( internal_encoding )		673841	0					
ANR	673857	Callee	MBSTRG		673841	0					
ANR	673858	Identifier	MBSTRG		673841	0					
ANR	673859	ArgumentList	internal_encoding		673841	1					
ANR	673860	Argument	internal_encoding		673841	0					
ANR	673861	Identifier	internal_encoding		673841	0					
ANR	673862	ReturnType	MBSTRING_API char *		673841	1					
ANR	673863	Identifier	php_mb_safe_strrchr		673841	2					
ANR	673864	ParameterList	"const char * s , unsigned int c , size_t nbytes TSRMLS_DC"		673841	3					
ANR	673865	Parameter	const char * s	4718:39:136232:136244	673841	0	True				
ANR	673866	ParameterType	const char *		673841	0					
ANR	673867	Identifier	s		673841	1					
ANR	673868	Parameter	unsigned int c	4718:54:136247:136260	673841	1	True				
ANR	673869	ParameterType	unsigned int		673841	0					
ANR	673870	Identifier	c		673841	1					
ANR	673871	Parameter	size_t nbytes TSRMLS_DC	4718:70:136263:136285	673841	2	True				
ANR	673872	ParameterType	size_t nbytes		673841	0					
ANR	673873	Identifier	TSRMLS_DC		673841	1					
ANR	673874	CFGEntryNode	ENTRY		673841		True				
ANR	673875	CFGExitNode	EXIT		673841		True				
ANR	673876	Symbol	s		673841						
ANR	673877	Symbol	c		673841						
ANR	673878	Symbol	php_mb_safe_strrchr_ex		673841						
ANR	673879	Symbol	MBSTRG		673841						
ANR	673880	Symbol	TSRMLS_DC		673841						
ANR	673881	Symbol	internal_encoding		673841						
ANR	673882	Symbol	nbytes		673841						
ANR	673883	DeclStmt									
ANR	673884	Decl							int	int	n
ANR	673885	DeclStmt									
ANR	673886	Decl							mbfl_string	mbfl_string	haystack
ANR	673887	Decl							mbfl_string	mbfl_string	needle
ANR	673888	DeclStmt									
ANR	673889	Decl							size_t	size_t	len
ANR	673890	DeclStmt									
ANR	673891	Decl							int	int	haystack_char_len
