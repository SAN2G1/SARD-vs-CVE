command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	486171	File	data/converged/CVE-2017-11142_php-src/ext_gd_libgd_webpimg.c								
ANR	486172	Function	clip	56:0:2019:2114							
ANR	486173	FunctionDef	"clip (float v , int a , int b)"		486172	0					
ANR	486174	CompoundStatement		56:46:2065:2114	486172	0					
ANR	486175	ReturnStatement	return ( v > b ) ? b : ( v < 0 ) ? 0 : ( int ) ( v ) ;	57:2:2069:2112	486172	0	True				
ANR	486176	ConditionalExpression	( v > b ) ? b : ( v < 0 ) ? 0 : ( int ) ( v )		486172	0					
ANR	486177	Condition	v > b		486172	0					
ANR	486178	RelationalExpression	v > b		486172	0		>			
ANR	486179	Identifier	v		486172	0					
ANR	486180	Identifier	b		486172	1					
ANR	486181	Identifier	b		486172	1					
ANR	486182	ConditionalExpression	( v < 0 ) ? 0 : ( int ) ( v )		486172	2					
ANR	486183	Condition	v < 0		486172	0					
ANR	486184	RelationalExpression	v < 0		486172	0		<			
ANR	486185	Identifier	v		486172	0					
ANR	486186	PrimaryExpression	0		486172	1					
ANR	486187	PrimaryExpression	0		486172	1					
ANR	486188	CastExpression	( int ) ( v )		486172	2					
ANR	486189	CastTarget	int		486172	0					
ANR	486190	Identifier	v		486172	1					
ANR	486191	ReturnType	static inline int		486172	1					
ANR	486192	Identifier	clip		486172	2					
ANR	486193	ParameterList	"float v , int a , int b"		486172	3					
ANR	486194	Parameter	float v	56:23:2042:2048	486172	0	True				
ANR	486195	ParameterType	float		486172	0					
ANR	486196	Identifier	v		486172	1					
ANR	486197	Parameter	int a	56:32:2051:2055	486172	1	True				
ANR	486198	ParameterType	int		486172	0					
ANR	486199	Identifier	a		486172	1					
ANR	486200	Parameter	int b	56:39:2058:2062	486172	2	True				
ANR	486201	ParameterType	int		486172	0					
ANR	486202	Identifier	b		486172	1					
ANR	486203	CFGEntryNode	ENTRY		486172		True				
ANR	486204	CFGExitNode	EXIT		486172		True				
ANR	486205	Symbol	a		486172						
ANR	486206	Symbol	b		486172						
ANR	486207	Symbol	v		486172						
ANR	486208	ClassDef	<unnamed>	59:0:2116:2205							
ANR	486209	DeclStmt									
ANR	486210	Decl							const uint32	const uint32	RED_SHIFT
ANR	486211	DeclStmt									
ANR	486212	Decl							const uint32	const uint32	GREEN_SHIFT
ANR	486213	DeclStmt									
ANR	486214	Decl							const uint32	const uint32	BLUE_SHIFT
ANR	486215	DeclStmt									
ANR	486216	Decl							const uint32	const uint32	ALPHA_SHIFT
ANR	486217	Function	GetRed	76:0:2664:2745							
ANR	486218	FunctionDef	GetRed (const uint32 * rgba)		486217	0					
ANR	486219	CompoundStatement		76:45:2709:2745	486217	0					
ANR	486220	ReturnStatement	return gdTrueColorGetRed ( * rgba ) ;	77:1:2712:2743	486217	0	True				
ANR	486221	CallExpression	gdTrueColorGetRed ( * rgba )		486217	0					
ANR	486222	Callee	gdTrueColorGetRed		486217	0					
ANR	486223	Identifier	gdTrueColorGetRed		486217	0					
ANR	486224	ArgumentList	* rgba		486217	1					
ANR	486225	Argument	* rgba		486217	0					
ANR	486226	UnaryOperationExpression	* rgba		486217	0					
ANR	486227	UnaryOperator	*		486217	0					
ANR	486228	Identifier	rgba		486217	1					
ANR	486229	ReturnType	static inline int		486217	1					
ANR	486230	Identifier	GetRed		486217	2					
ANR	486231	ParameterList	const uint32 * rgba		486217	3					
ANR	486232	Parameter	const uint32 * rgba	76:25:2689:2706	486217	0	True				
ANR	486233	ParameterType	const uint32 *		486217	0					
ANR	486234	Identifier	rgba		486217	1					
ANR	486235	CFGEntryNode	ENTRY		486217		True				
ANR	486236	CFGExitNode	EXIT		486217		True				
ANR	486237	Symbol	rgba		486217						
ANR	486238	Symbol	gdTrueColorGetRed		486217						
ANR	486239	Symbol	* rgba		486217						
ANR	486240	Function	GetGreen	80:0:2748:2833							
ANR	486241	FunctionDef	GetGreen (const uint32 * rgba)		486240	0					
ANR	486242	CompoundStatement		80:47:2795:2833	486240	0					
ANR	486243	ReturnStatement	return gdTrueColorGetGreen ( * rgba ) ;	81:1:2798:2831	486240	0	True				
ANR	486244	CallExpression	gdTrueColorGetGreen ( * rgba )		486240	0					
ANR	486245	Callee	gdTrueColorGetGreen		486240	0					
ANR	486246	Identifier	gdTrueColorGetGreen		486240	0					
ANR	486247	ArgumentList	* rgba		486240	1					
ANR	486248	Argument	* rgba		486240	0					
ANR	486249	UnaryOperationExpression	* rgba		486240	0					
ANR	486250	UnaryOperator	*		486240	0					
ANR	486251	Identifier	rgba		486240	1					
ANR	486252	ReturnType	static inline int		486240	1					
ANR	486253	Identifier	GetGreen		486240	2					
ANR	486254	ParameterList	const uint32 * rgba		486240	3					
ANR	486255	Parameter	const uint32 * rgba	80:27:2775:2792	486240	0	True				
ANR	486256	ParameterType	const uint32 *		486240	0					
ANR	486257	Identifier	rgba		486240	1					
ANR	486258	CFGEntryNode	ENTRY		486240		True				
ANR	486259	CFGExitNode	EXIT		486240		True				
ANR	486260	Symbol	rgba		486240						
ANR	486261	Symbol	* rgba		486240						
ANR	486262	Symbol	gdTrueColorGetGreen		486240						
ANR	486263	Function	GetBlue	84:0:2836:2921							
ANR	486264	FunctionDef	GetBlue (const uint32 * rgba)		486263	0					
ANR	486265	CompoundStatement		84:46:2882:2921	486263	0					
ANR	486266	ReturnStatement	return gdTrueColorGetBlue ( * rgba ) ;	85:3:2887:2919	486263	0	True				
ANR	486267	CallExpression	gdTrueColorGetBlue ( * rgba )		486263	0					
ANR	486268	Callee	gdTrueColorGetBlue		486263	0					
ANR	486269	Identifier	gdTrueColorGetBlue		486263	0					
ANR	486270	ArgumentList	* rgba		486263	1					
ANR	486271	Argument	* rgba		486263	0					
ANR	486272	UnaryOperationExpression	* rgba		486263	0					
ANR	486273	UnaryOperator	*		486263	0					
ANR	486274	Identifier	rgba		486263	1					
ANR	486275	ReturnType	static inline int		486263	1					
ANR	486276	Identifier	GetBlue		486263	2					
ANR	486277	ParameterList	const uint32 * rgba		486263	3					
ANR	486278	Parameter	const uint32 * rgba	84:26:2862:2879	486263	0	True				
ANR	486279	ParameterType	const uint32 *		486263	0					
ANR	486280	Identifier	rgba		486263	1					
ANR	486281	CFGEntryNode	ENTRY		486263		True				
ANR	486282	CFGExitNode	EXIT		486263		True				
ANR	486283	Symbol	rgba		486263						
ANR	486284	Symbol	gdTrueColorGetBlue		486263						
ANR	486285	Symbol	* rgba		486263						
ANR	486286	ClassDef	<unnamed>	88:0:2924:2945							
ANR	486287	Function	clip_uv	90:0:2949:3098							
ANR	486288	FunctionDef	clip_uv (int v)		486287	0					
ANR	486289	CompoundStatement		90:33:2982:3098	486287	0					
ANR	486290	ExpressionStatement	v = ( v + ( 257 << ( YUV_FRAC + 2 - 1 ) ) ) >> ( YUV_FRAC + 2 )	91:3:2987:3042	486287	0	True				
ANR	486291	AssignmentExpression	v = ( v + ( 257 << ( YUV_FRAC + 2 - 1 ) ) ) >> ( YUV_FRAC + 2 )		486287	0		=			
ANR	486292	Identifier	v		486287	0					
ANR	486293	ShiftExpression	( v + ( 257 << ( YUV_FRAC + 2 - 1 ) ) ) >> ( YUV_FRAC + 2 )		486287	1		>>			
ANR	486294	AdditiveExpression	v + ( 257 << ( YUV_FRAC + 2 - 1 ) )		486287	0		+			
ANR	486295	Identifier	v		486287	0					
ANR	486296	ShiftExpression	257 << ( YUV_FRAC + 2 - 1 )		486287	1		<<			
ANR	486297	PrimaryExpression	257		486287	0					
ANR	486298	AdditiveExpression	YUV_FRAC + 2 - 1		486287	1		+			
ANR	486299	Identifier	YUV_FRAC		486287	0					
ANR	486300	AdditiveExpression	2 - 1		486287	1		-			
ANR	486301	PrimaryExpression	2		486287	0					
ANR	486302	PrimaryExpression	1		486287	1					
ANR	486303	AdditiveExpression	YUV_FRAC + 2		486287	1		+			
ANR	486304	Identifier	YUV_FRAC		486287	0					
ANR	486305	PrimaryExpression	2		486287	1					
ANR	486306	ReturnStatement	return ( ( v & ~0xff ) == 0 ) ? v : v < 0 ? 0u : 255u ;	92:3:3047:3096	486287	1	True				
ANR	486307	ConditionalExpression	( ( v & ~0xff ) == 0 ) ? v : v < 0 ? 0u : 255u		486287	0					
ANR	486308	Condition	( v & ~0xff ) == 0		486287	0					
ANR	486309	EqualityExpression	( v & ~0xff ) == 0		486287	0		==			
ANR	486310	BitAndExpression	v & ~0xff		486287	0		&			
ANR	486311	Identifier	v		486287	0					
ANR	486312	Identifier	~0xff		486287	1					
ANR	486313	PrimaryExpression	0		486287	1					
ANR	486314	Identifier	v		486287	1					
ANR	486315	ConditionalExpression	v < 0 ? 0u : 255u		486287	2					
ANR	486316	Condition	v < 0		486287	0					
ANR	486317	RelationalExpression	v < 0		486287	0		<			
ANR	486318	Identifier	v		486287	0					
ANR	486319	PrimaryExpression	0		486287	1					
ANR	486320	PrimaryExpression	0u		486287	1					
ANR	486321	PrimaryExpression	255u		486287	2					
ANR	486322	ReturnType	static inline int		486287	1					
ANR	486323	Identifier	clip_uv		486287	2					
ANR	486324	ParameterList	int v		486287	3					
ANR	486325	Parameter	int v	90:26:2975:2979	486287	0	True				
ANR	486326	ParameterType	int		486287	0					
ANR	486327	Identifier	v		486287	1					
ANR	486328	CFGEntryNode	ENTRY		486287		True				
ANR	486329	CFGExitNode	EXIT		486287		True				
ANR	486330	Symbol	~0xff		486287						
ANR	486331	Symbol	YUV_FRAC		486287						
ANR	486332	Symbol	v		486287						
ANR	486333	Function	GetLumaY	100:0:3267:3522							
ANR	486334	FunctionDef	"GetLumaY (int r , int g , int b)"		486333	0					
ANR	486335	CompoundStatement		100:48:3315:3522	486333	0					
ANR	486336	IdentifierDeclStatement	const int kRound = ( 1 << ( YUV_FRAC - 1 ) ) + ( 16 << YUV_FRAC ) ;	101:2:3319:3378	486333	0	True				
ANR	486337	IdentifierDecl	kRound = ( 1 << ( YUV_FRAC - 1 ) ) + ( 16 << YUV_FRAC )		486333	0					
ANR	486338	IdentifierDeclType	const int		486333	0					
ANR	486339	Identifier	kRound		486333	1					
ANR	486340	AssignmentExpression	kRound = ( 1 << ( YUV_FRAC - 1 ) ) + ( 16 << YUV_FRAC )		486333	2		=			
ANR	486341	Identifier	kRound		486333	0					
ANR	486342	AdditiveExpression	( 1 << ( YUV_FRAC - 1 ) ) + ( 16 << YUV_FRAC )		486333	1		+			
ANR	486343	ShiftExpression	1 << ( YUV_FRAC - 1 )		486333	0		<<			
ANR	486344	PrimaryExpression	1		486333	0					
ANR	486345	AdditiveExpression	YUV_FRAC - 1		486333	1		-			
ANR	486346	Identifier	YUV_FRAC		486333	0					
ANR	486347	PrimaryExpression	1		486333	1					
ANR	486348	ShiftExpression	16 << YUV_FRAC		486333	1		<<			
ANR	486349	PrimaryExpression	16		486333	0					
ANR	486350	Identifier	YUV_FRAC		486333	1					
ANR	486351	IdentifierDeclStatement	const int luma = 16839 * r + 33059 * g + 6420 * b ;	103:2:3433:3482	486333	1	True				
ANR	486352	IdentifierDecl	luma = 16839 * r + 33059 * g + 6420 * b		486333	0					
ANR	486353	IdentifierDeclType	const int		486333	0					
ANR	486354	Identifier	luma		486333	1					
ANR	486355	AssignmentExpression	luma = 16839 * r + 33059 * g + 6420 * b		486333	2		=			
ANR	486356	Identifier	luma		486333	0					
ANR	486357	AdditiveExpression	16839 * r + 33059 * g + 6420 * b		486333	1		+			
ANR	486358	MultiplicativeExpression	16839 * r		486333	0		*			
ANR	486359	PrimaryExpression	16839		486333	0					
ANR	486360	Identifier	r		486333	1					
ANR	486361	AdditiveExpression	33059 * g + 6420 * b		486333	1		+			
ANR	486362	MultiplicativeExpression	33059 * g		486333	0		*			
ANR	486363	PrimaryExpression	33059		486333	0					
ANR	486364	Identifier	g		486333	1					
ANR	486365	MultiplicativeExpression	6420 * b		486333	1		*			
ANR	486366	PrimaryExpression	6420		486333	0					
ANR	486367	Identifier	b		486333	1					
ANR	486368	ReturnStatement	return ( luma + kRound ) >> YUV_FRAC ;	104:2:3486:3520	486333	2	True				
ANR	486369	ShiftExpression	( luma + kRound ) >> YUV_FRAC		486333	0		>>			
ANR	486370	AdditiveExpression	luma + kRound		486333	0		+			
ANR	486371	Identifier	luma		486333	0					
ANR	486372	Identifier	kRound		486333	1					
ANR	486373	Identifier	YUV_FRAC		486333	1					
ANR	486374	ReturnType	static inline int		486333	1					
ANR	486375	Identifier	GetLumaY		486333	2					
ANR	486376	ParameterList	"int r , int g , int b"		486333	3					
ANR	486377	Parameter	int r	100:27:3294:3298	486333	0	True				
ANR	486378	ParameterType	int		486333	0					
ANR	486379	Identifier	r		486333	1					
ANR	486380	Parameter	int g	100:34:3301:3305	486333	1	True				
ANR	486381	ParameterType	int		486333	0					
ANR	486382	Identifier	g		486333	1					
ANR	486383	Parameter	int b	100:41:3308:3312	486333	2	True				
ANR	486384	ParameterType	int		486333	0					
ANR	486385	Identifier	b		486333	1					
ANR	486386	CFGEntryNode	ENTRY		486333		True				
ANR	486387	CFGExitNode	EXIT		486333		True				
ANR	486388	Symbol	r		486333						
ANR	486389	Symbol	b		486333						
ANR	486390	Symbol	YUV_FRAC		486333						
ANR	486391	Symbol	g		486333						
ANR	486392	Symbol	kRound		486333						
ANR	486393	Symbol	luma		486333						
ANR	486394	Function	GetLumaYfromPtr	107:0:3525:3696							
ANR	486395	FunctionDef	GetLumaYfromPtr (uint32 * rgba)		486394	0					
ANR	486396	CompoundStatement		107:48:3573:3696	486394	0					
ANR	486397	IdentifierDeclStatement	const int r = GetRed ( rgba ) ;	108:2:3577:3603	486394	0	True				
ANR	486398	IdentifierDecl	r = GetRed ( rgba )		486394	0					
ANR	486399	IdentifierDeclType	const int		486394	0					
ANR	486400	Identifier	r		486394	1					
ANR	486401	AssignmentExpression	r = GetRed ( rgba )		486394	2		=			
ANR	486402	Identifier	r		486394	0					
ANR	486403	CallExpression	GetRed ( rgba )		486394	1					
ANR	486404	Callee	GetRed		486394	0					
ANR	486405	Identifier	GetRed		486394	0					
ANR	486406	ArgumentList	rgba		486394	1					
ANR	486407	Argument	rgba		486394	0					
ANR	486408	Identifier	rgba		486394	0					
ANR	486409	IdentifierDeclStatement	const int g = GetGreen ( rgba ) ;	109:2:3607:3635	486394	1	True				
ANR	486410	IdentifierDecl	g = GetGreen ( rgba )		486394	0					
ANR	486411	IdentifierDeclType	const int		486394	0					
ANR	486412	Identifier	g		486394	1					
ANR	486413	AssignmentExpression	g = GetGreen ( rgba )		486394	2		=			
ANR	486414	Identifier	g		486394	0					
ANR	486415	CallExpression	GetGreen ( rgba )		486394	1					
ANR	486416	Callee	GetGreen		486394	0					
ANR	486417	Identifier	GetGreen		486394	0					
ANR	486418	ArgumentList	rgba		486394	1					
ANR	486419	Argument	rgba		486394	0					
ANR	486420	Identifier	rgba		486394	0					
ANR	486421	IdentifierDeclStatement	const int b = GetBlue ( rgba ) ;	110:2:3639:3666	486394	2	True				
ANR	486422	IdentifierDecl	b = GetBlue ( rgba )		486394	0					
ANR	486423	IdentifierDeclType	const int		486394	0					
ANR	486424	Identifier	b		486394	1					
ANR	486425	AssignmentExpression	b = GetBlue ( rgba )		486394	2		=			
ANR	486426	Identifier	b		486394	0					
ANR	486427	CallExpression	GetBlue ( rgba )		486394	1					
ANR	486428	Callee	GetBlue		486394	0					
ANR	486429	Identifier	GetBlue		486394	0					
ANR	486430	ArgumentList	rgba		486394	1					
ANR	486431	Argument	rgba		486394	0					
ANR	486432	Identifier	rgba		486394	0					
ANR	486433	ReturnStatement	"return GetLumaY ( r , g , b ) ;"	111:2:3670:3694	486394	3	True				
ANR	486434	CallExpression	"GetLumaY ( r , g , b )"		486394	0					
ANR	486435	Callee	GetLumaY		486394	0					
ANR	486436	Identifier	GetLumaY		486394	0					
ANR	486437	ArgumentList	r		486394	1					
ANR	486438	Argument	r		486394	0					
ANR	486439	Identifier	r		486394	0					
ANR	486440	Argument	g		486394	1					
ANR	486441	Identifier	g		486394	0					
ANR	486442	Argument	b		486394	2					
ANR	486443	Identifier	b		486394	0					
ANR	486444	ReturnType	static inline int		486394	1					
ANR	486445	Identifier	GetLumaYfromPtr		486394	2					
ANR	486446	ParameterList	uint32 * rgba		486394	3					
ANR	486447	Parameter	uint32 * rgba	107:34:3559:3570	486394	0	True				
ANR	486448	ParameterType	uint32 *		486394	0					
ANR	486449	Identifier	rgba		486394	1					
ANR	486450	CFGEntryNode	ENTRY		486394		True				
ANR	486451	CFGExitNode	EXIT		486394		True				
ANR	486452	Symbol	rgba		486394						
ANR	486453	Symbol	r		486394						
ANR	486454	Symbol	b		486394						
ANR	486455	Symbol	GetGreen		486394						
ANR	486456	Symbol	GetRed		486394						
ANR	486457	Symbol	GetBlue		486394						
ANR	486458	Symbol	GetLumaY		486394						
ANR	486459	Symbol	g		486394						
ANR	486460	Function	GetChromaU	114:0:3699:3857							
ANR	486461	FunctionDef	"GetChromaU (int r , int g , int b)"		486460	0					
ANR	486462	CompoundStatement		114:50:3749:3857	486460	0					
ANR	486463	ReturnStatement	return clip_uv ( - 9719 * r - 19081 * g + 28800 * b ) ;	116:2:3806:3855	486460	0	True				
ANR	486464	CallExpression	clip_uv ( - 9719 * r - 19081 * g + 28800 * b )		486460	0					
ANR	486465	Callee	clip_uv		486460	0					
ANR	486466	Identifier	clip_uv		486460	0					
ANR	486467	ArgumentList	- 9719 * r - 19081 * g + 28800 * b		486460	1					
ANR	486468	Argument	- 9719 * r - 19081 * g + 28800 * b		486460	0					
ANR	486469	AdditiveExpression	- 9719 * r - 19081 * g + 28800 * b		486460	0		-			
ANR	486470	MultiplicativeExpression	- 9719 * r		486460	0		*			
ANR	486471	UnaryOperationExpression	- 9719		486460	0					
ANR	486472	UnaryOperator	-		486460	0					
ANR	486473	PrimaryExpression	9719		486460	1					
ANR	486474	Identifier	r		486460	1					
ANR	486475	AdditiveExpression	19081 * g + 28800 * b		486460	1		+			
ANR	486476	MultiplicativeExpression	19081 * g		486460	0		*			
ANR	486477	PrimaryExpression	19081		486460	0					
ANR	486478	Identifier	g		486460	1					
ANR	486479	MultiplicativeExpression	28800 * b		486460	1		*			
ANR	486480	PrimaryExpression	28800		486460	0					
ANR	486481	Identifier	b		486460	1					
ANR	486482	ReturnType	static inline int		486460	1					
ANR	486483	Identifier	GetChromaU		486460	2					
ANR	486484	ParameterList	"int r , int g , int b"		486460	3					
ANR	486485	Parameter	int r	114:29:3728:3732	486460	0	True				
ANR	486486	ParameterType	int		486460	0					
ANR	486487	Identifier	r		486460	1					
ANR	486488	Parameter	int g	114:36:3735:3739	486460	1	True				
ANR	486489	ParameterType	int		486460	0					
ANR	486490	Identifier	g		486460	1					
ANR	486491	Parameter	int b	114:43:3742:3746	486460	2	True				
ANR	486492	ParameterType	int		486460	0					
ANR	486493	Identifier	b		486460	1					
ANR	486494	CFGEntryNode	ENTRY		486460		True				
ANR	486495	CFGExitNode	EXIT		486460		True				
ANR	486496	Symbol	clip_uv		486460						
ANR	486497	Symbol	r		486460						
ANR	486498	Symbol	b		486460						
ANR	486499	Symbol	g		486460						
ANR	486500	Function	GetChromaV	119:0:3860:4017							
ANR	486501	FunctionDef	"GetChromaV (int r , int g , int b)"		486500	0					
ANR	486502	CompoundStatement		119:50:3910:4017	486500	0					
ANR	486503	ReturnStatement	return clip_uv ( + 28800 * r - 24116 * g - 4684 * b ) ;	121:2:3966:4015	486500	0	True				
ANR	486504	CallExpression	clip_uv ( + 28800 * r - 24116 * g - 4684 * b )		486500	0					
ANR	486505	Callee	clip_uv		486500	0					
ANR	486506	Identifier	clip_uv		486500	0					
ANR	486507	ArgumentList	+ 28800 * r - 24116 * g - 4684 * b		486500	1					
ANR	486508	Argument	+ 28800 * r - 24116 * g - 4684 * b		486500	0					
ANR	486509	AdditiveExpression	+ 28800 * r - 24116 * g - 4684 * b		486500	0		-			
ANR	486510	MultiplicativeExpression	+ 28800 * r		486500	0		*			
ANR	486511	UnaryOperationExpression	+ 28800		486500	0					
ANR	486512	UnaryOperator	+		486500	0					
ANR	486513	PrimaryExpression	28800		486500	1					
ANR	486514	Identifier	r		486500	1					
ANR	486515	AdditiveExpression	24116 * g - 4684 * b		486500	1		-			
ANR	486516	MultiplicativeExpression	24116 * g		486500	0		*			
ANR	486517	PrimaryExpression	24116		486500	0					
ANR	486518	Identifier	g		486500	1					
ANR	486519	MultiplicativeExpression	4684 * b		486500	1		*			
ANR	486520	PrimaryExpression	4684		486500	0					
ANR	486521	Identifier	b		486500	1					
ANR	486522	ReturnType	static inline int		486500	1					
ANR	486523	Identifier	GetChromaV		486500	2					
ANR	486524	ParameterList	"int r , int g , int b"		486500	3					
ANR	486525	Parameter	int r	119:29:3889:3893	486500	0	True				
ANR	486526	ParameterType	int		486500	0					
ANR	486527	Identifier	r		486500	1					
ANR	486528	Parameter	int g	119:36:3896:3900	486500	1	True				
ANR	486529	ParameterType	int		486500	0					
ANR	486530	Identifier	g		486500	1					
ANR	486531	Parameter	int b	119:43:3903:3907	486500	2	True				
ANR	486532	ParameterType	int		486500	0					
ANR	486533	Identifier	b		486500	1					
ANR	486534	CFGEntryNode	ENTRY		486500		True				
ANR	486535	CFGExitNode	EXIT		486500		True				
ANR	486536	Symbol	clip_uv		486500						
ANR	486537	Symbol	r		486500						
ANR	486538	Symbol	b		486500						
ANR	486539	Symbol	g		486500						
ANR	486540	ClassDef	<unnamed>	127:0:4107:4216							
ANR	486541	DeclStmt									
ANR	486542	Decl							int	int	init_done
ANR	486543	DeclStmt									
ANR	486544	Decl							int16_t	int16_t [ 256 ]	kVToR
ANR	486545	Decl							int16_t	int16_t [ 256 ]	kUToB
ANR	486546	DeclStmt									
ANR	486547	Decl							int32_t	int32_t [ 256 ]	kVToG
ANR	486548	Decl							int32_t	int32_t [ 256 ]	kUToG
ANR	486549	DeclStmt									
ANR	486550	Decl							uint8_t	uint8_t [ RGB_RANGE_MAX - RGB_RANGE_MIN ]	kClip
ANR	486551	Function	InitTables	135:0:4378:4849							
ANR	486552	FunctionDef	InitTables ()		486551	0					
ANR	486553	CompoundStatement		135:25:4403:4849	486551	0					
ANR	486554	IdentifierDeclStatement	int i ;	136:2:4407:4412	486551	0	True				
ANR	486555	IdentifierDecl	i		486551	0					
ANR	486556	IdentifierDeclType	int		486551	0					
ANR	486557	Identifier	i		486551	1					
ANR	486558	ForStatement	for ( i = 0 ; i < 256 ; ++ i )		486551	1					
ANR	486559	ForInit	i = 0 ;	137:7:4421:4426	486551	0	True				
ANR	486560	AssignmentExpression	i = 0		486551	0		=			
ANR	486561	Identifier	i		486551	0					
ANR	486562	PrimaryExpression	0		486551	1					
ANR	486563	Condition	i < 256	137:14:4428:4434	486551	1	True				
ANR	486564	RelationalExpression	i < 256		486551	0		<			
ANR	486565	Identifier	i		486551	0					
ANR	486566	PrimaryExpression	256		486551	1					
ANR	486567	UnaryExpression	++ i	137:23:4437:4439	486551	2	True				
ANR	486568	IncDec	++		486551	0					
ANR	486569	Identifier	i		486551	1					
ANR	486570	CompoundStatement		3:28:38:38	486551	3					
ANR	486571	ExpressionStatement	kVToR [ i ] = ( 89858 * ( i - 128 ) + RGB_HALF ) >> RGB_FRAC	138:4:4448:4501	486551	0	True				
ANR	486572	AssignmentExpression	kVToR [ i ] = ( 89858 * ( i - 128 ) + RGB_HALF ) >> RGB_FRAC		486551	0		=			
ANR	486573	ArrayIndexing	kVToR [ i ]		486551	0					
ANR	486574	Identifier	kVToR		486551	0					
ANR	486575	Identifier	i		486551	1					
ANR	486576	ShiftExpression	( 89858 * ( i - 128 ) + RGB_HALF ) >> RGB_FRAC		486551	1		>>			
ANR	486577	AdditiveExpression	89858 * ( i - 128 ) + RGB_HALF		486551	0		+			
ANR	486578	MultiplicativeExpression	89858 * ( i - 128 )		486551	0		*			
ANR	486579	PrimaryExpression	89858		486551	0					
ANR	486580	AdditiveExpression	i - 128		486551	1		-			
ANR	486581	Identifier	i		486551	0					
ANR	486582	PrimaryExpression	128		486551	1					
ANR	486583	Identifier	RGB_HALF		486551	1					
ANR	486584	Identifier	RGB_FRAC		486551	1					
ANR	486585	ExpressionStatement	kUToG [ i ] = - 22014 * ( i - 128 ) + RGB_HALF	139:4:4507:4547	486551	1	True				
ANR	486586	AssignmentExpression	kUToG [ i ] = - 22014 * ( i - 128 ) + RGB_HALF		486551	0		=			
ANR	486587	ArrayIndexing	kUToG [ i ]		486551	0					
ANR	486588	Identifier	kUToG		486551	0					
ANR	486589	Identifier	i		486551	1					
ANR	486590	AdditiveExpression	- 22014 * ( i - 128 ) + RGB_HALF		486551	1		+			
ANR	486591	MultiplicativeExpression	- 22014 * ( i - 128 )		486551	0		*			
ANR	486592	UnaryOperationExpression	- 22014		486551	0					
ANR	486593	UnaryOperator	-		486551	0					
ANR	486594	PrimaryExpression	22014		486551	1					
ANR	486595	AdditiveExpression	i - 128		486551	1		-			
ANR	486596	Identifier	i		486551	0					
ANR	486597	PrimaryExpression	128		486551	1					
ANR	486598	Identifier	RGB_HALF		486551	1					
ANR	486599	ExpressionStatement	kVToG [ i ] = - 45773 * ( i - 128 )	140:4:4553:4582	486551	2	True				
ANR	486600	AssignmentExpression	kVToG [ i ] = - 45773 * ( i - 128 )		486551	0		=			
ANR	486601	ArrayIndexing	kVToG [ i ]		486551	0					
ANR	486602	Identifier	kVToG		486551	0					
ANR	486603	Identifier	i		486551	1					
ANR	486604	MultiplicativeExpression	- 45773 * ( i - 128 )		486551	1		*			
ANR	486605	UnaryOperationExpression	- 45773		486551	0					
ANR	486606	UnaryOperator	-		486551	0					
ANR	486607	PrimaryExpression	45773		486551	1					
ANR	486608	AdditiveExpression	i - 128		486551	1		-			
ANR	486609	Identifier	i		486551	0					
ANR	486610	PrimaryExpression	128		486551	1					
ANR	486611	ExpressionStatement	kUToB [ i ] = ( 113618 * ( i - 128 ) + RGB_HALF ) >> RGB_FRAC	141:4:4588:4642	486551	3	True				
ANR	486612	AssignmentExpression	kUToB [ i ] = ( 113618 * ( i - 128 ) + RGB_HALF ) >> RGB_FRAC		486551	0		=			
ANR	486613	ArrayIndexing	kUToB [ i ]		486551	0					
ANR	486614	Identifier	kUToB		486551	0					
ANR	486615	Identifier	i		486551	1					
ANR	486616	ShiftExpression	( 113618 * ( i - 128 ) + RGB_HALF ) >> RGB_FRAC		486551	1		>>			
ANR	486617	AdditiveExpression	113618 * ( i - 128 ) + RGB_HALF		486551	0		+			
ANR	486618	MultiplicativeExpression	113618 * ( i - 128 )		486551	0		*			
ANR	486619	PrimaryExpression	113618		486551	0					
ANR	486620	AdditiveExpression	i - 128		486551	1		-			
ANR	486621	Identifier	i		486551	0					
ANR	486622	PrimaryExpression	128		486551	1					
ANR	486623	Identifier	RGB_HALF		486551	1					
ANR	486624	Identifier	RGB_FRAC		486551	1					
ANR	486625	ForStatement	for ( i = RGB_RANGE_MIN ; i < RGB_RANGE_MAX ; ++ i )		486551	2					
ANR	486626	ForInit	i = RGB_RANGE_MIN ;	143:7:4655:4672	486551	0	True				
ANR	486627	AssignmentExpression	i = RGB_RANGE_MIN		486551	0		=			
ANR	486628	Identifier	i		486551	0					
ANR	486629	Identifier	RGB_RANGE_MIN		486551	1					
ANR	486630	Condition	i < RGB_RANGE_MAX	143:26:4674:4690	486551	1	True				
ANR	486631	RelationalExpression	i < RGB_RANGE_MAX		486551	0		<			
ANR	486632	Identifier	i		486551	0					
ANR	486633	Identifier	RGB_RANGE_MAX		486551	1					
ANR	486634	UnaryExpression	++ i	143:45:4693:4695	486551	2	True				
ANR	486635	IncDec	++		486551	0					
ANR	486636	Identifier	i		486551	1					
ANR	486637	CompoundStatement		10:4:300:355	486551	3					
ANR	486638	IdentifierDeclStatement	const int j = ( ( i - 16 ) * 76283 + RGB_HALF ) >> RGB_FRAC ;	144:4:4704:4759	486551	0	True				
ANR	486639	IdentifierDecl	j = ( ( i - 16 ) * 76283 + RGB_HALF ) >> RGB_FRAC		486551	0					
ANR	486640	IdentifierDeclType	const int		486551	0					
ANR	486641	Identifier	j		486551	1					
ANR	486642	AssignmentExpression	j = ( ( i - 16 ) * 76283 + RGB_HALF ) >> RGB_FRAC		486551	2		=			
ANR	486643	Identifier	j		486551	0					
ANR	486644	ShiftExpression	( ( i - 16 ) * 76283 + RGB_HALF ) >> RGB_FRAC		486551	1		>>			
ANR	486645	AdditiveExpression	( i - 16 ) * 76283 + RGB_HALF		486551	0		+			
ANR	486646	MultiplicativeExpression	( i - 16 ) * 76283		486551	0		*			
ANR	486647	AdditiveExpression	i - 16		486551	0		-			
ANR	486648	Identifier	i		486551	0					
ANR	486649	PrimaryExpression	16		486551	1					
ANR	486650	PrimaryExpression	76283		486551	1					
ANR	486651	Identifier	RGB_HALF		486551	1					
ANR	486652	Identifier	RGB_FRAC		486551	1					
ANR	486653	ExpressionStatement	kClip [ i - RGB_RANGE_MIN ] = ( j < 0 ) ? 0 : ( j > 255 ) ? 255 : j	145:4:4765:4825	486551	1	True				
ANR	486654	AssignmentExpression	kClip [ i - RGB_RANGE_MIN ] = ( j < 0 ) ? 0 : ( j > 255 ) ? 255 : j		486551	0		=			
ANR	486655	ArrayIndexing	kClip [ i - RGB_RANGE_MIN ]		486551	0					
ANR	486656	Identifier	kClip		486551	0					
ANR	486657	AdditiveExpression	i - RGB_RANGE_MIN		486551	1		-			
ANR	486658	Identifier	i		486551	0					
ANR	486659	Identifier	RGB_RANGE_MIN		486551	1					
ANR	486660	ConditionalExpression	( j < 0 ) ? 0 : ( j > 255 ) ? 255 : j		486551	1					
ANR	486661	Condition	j < 0		486551	0					
ANR	486662	RelationalExpression	j < 0		486551	0		<			
ANR	486663	Identifier	j		486551	0					
ANR	486664	PrimaryExpression	0		486551	1					
ANR	486665	PrimaryExpression	0		486551	1					
ANR	486666	ConditionalExpression	( j > 255 ) ? 255 : j		486551	2					
ANR	486667	Condition	j > 255		486551	0					
ANR	486668	RelationalExpression	j > 255		486551	0		>			
ANR	486669	Identifier	j		486551	0					
ANR	486670	PrimaryExpression	255		486551	1					
ANR	486671	PrimaryExpression	255		486551	1					
ANR	486672	Identifier	j		486551	2					
ANR	486673	ExpressionStatement	init_done = 1	148:2:4834:4847	486551	3	True				
ANR	486674	AssignmentExpression	init_done = 1		486551	0		=			
ANR	486675	Identifier	init_done		486551	0					
ANR	486676	PrimaryExpression	1		486551	1					
ANR	486677	ReturnType	static void		486551	1					
ANR	486678	Identifier	InitTables		486551	2					
ANR	486679	ParameterList			486551	3					
ANR	486680	CFGEntryNode	ENTRY		486551		True				
ANR	486681	CFGExitNode	EXIT		486551		True				
ANR	486682	Symbol	kVToR		486551						
ANR	486683	Symbol	* kUToG		486551						
ANR	486684	Symbol	* kClip		486551						
ANR	486685	Symbol	RGB_RANGE_MAX		486551						
ANR	486686	Symbol	* RGB_RANGE_MIN		486551						
ANR	486687	Symbol	* kVToG		486551						
ANR	486688	Symbol	i		486551						
ANR	486689	Symbol	kUToG		486551						
ANR	486690	Symbol	j		486551						
ANR	486691	Symbol	* kUToB		486551						
ANR	486692	Symbol	RGB_RANGE_MIN		486551						
ANR	486693	Symbol	init_done		486551						
ANR	486694	Symbol	kVToG		486551						
ANR	486695	Symbol	RGB_HALF		486551						
ANR	486696	Symbol	* i		486551						
ANR	486697	Symbol	RGB_FRAC		486551						
ANR	486698	Symbol	kUToB		486551						
ANR	486699	Symbol	kClip		486551						
ANR	486700	Symbol	* kVToR		486551						
ANR	486701	DeclStmt									
ANR	486702	Decl							const int	const int	r_off
ANR	486703	DeclStmt									
ANR	486704	Decl							const int	const int	g_off
ANR	486705	DeclStmt									
ANR	486706	Decl							const int	const int	b_off
ANR	486707	DeclStmt									
ANR	486708	Decl							const int	const int	r
ANR	486709	DeclStmt									
ANR	486710	Decl							const int	const int	g
ANR	486711	DeclStmt									
ANR	486712	Decl							const int	const int	b
ANR	486713	Function	GetPSNRYuv	174:0:5696:6694							
ANR	486714	FunctionDef	"GetPSNRYuv (const uint8 * Y1 , const uint8 * U1 , const uint8 * V1 , const uint8 * Y2 , const uint8 * U2 , const uint8 * V2 , int y_width , int y_height)"		486713	0					
ANR	486715	CompoundStatement		181:32:5969:6694	486713	0					
ANR	486716	IdentifierDeclStatement	"int x , y , row_idx ;"	182:2:5973:5990	486713	0	True				
ANR	486717	IdentifierDecl	x		486713	0					
ANR	486718	IdentifierDeclType	int		486713	0					
ANR	486719	Identifier	x		486713	1					
ANR	486720	IdentifierDecl	y		486713	1					
ANR	486721	IdentifierDeclType	int		486713	0					
ANR	486722	Identifier	y		486713	1					
ANR	486723	IdentifierDecl	row_idx		486713	2					
ANR	486724	IdentifierDeclType	int		486713	0					
ANR	486725	Identifier	row_idx		486713	1					
ANR	486726	IdentifierDeclStatement	const int uv_width = ( ( y_width + 1 ) >> 1 ) ;	183:2:5994:6035	486713	1	True				
ANR	486727	IdentifierDecl	uv_width = ( ( y_width + 1 ) >> 1 )		486713	0					
ANR	486728	IdentifierDeclType	const int		486713	0					
ANR	486729	Identifier	uv_width		486713	1					
ANR	486730	AssignmentExpression	uv_width = ( ( y_width + 1 ) >> 1 )		486713	2		=			
ANR	486731	Identifier	uv_width		486713	0					
ANR	486732	ShiftExpression	( y_width + 1 ) >> 1		486713	1		>>			
ANR	486733	AdditiveExpression	y_width + 1		486713	0		+			
ANR	486734	Identifier	y_width		486713	0					
ANR	486735	PrimaryExpression	1		486713	1					
ANR	486736	PrimaryExpression	1		486713	1					
ANR	486737	IdentifierDeclStatement	const int uv_height = ( ( y_height + 1 ) >> 1 ) ;	184:2:6039:6082	486713	2	True				
ANR	486738	IdentifierDecl	uv_height = ( ( y_height + 1 ) >> 1 )		486713	0					
ANR	486739	IdentifierDeclType	const int		486713	0					
ANR	486740	Identifier	uv_height		486713	1					
ANR	486741	AssignmentExpression	uv_height = ( ( y_height + 1 ) >> 1 )		486713	2		=			
ANR	486742	Identifier	uv_height		486713	0					
ANR	486743	ShiftExpression	( y_height + 1 ) >> 1		486713	1		>>			
ANR	486744	AdditiveExpression	y_height + 1		486713	0		+			
ANR	486745	Identifier	y_height		486713	0					
ANR	486746	PrimaryExpression	1		486713	1					
ANR	486747	PrimaryExpression	1		486713	1					
ANR	486748	IdentifierDeclStatement	"double sse = 0. , count = 0. ;"	185:2:6086:6113	486713	3	True				
ANR	486749	IdentifierDecl	sse = 0.		486713	0					
ANR	486750	IdentifierDeclType	double		486713	0					
ANR	486751	Identifier	sse		486713	1					
ANR	486752	AssignmentExpression	sse = 0.		486713	2		=			
ANR	486753	Identifier	sse		486713	0					
ANR	486754	PrimaryExpression	0.		486713	1					
ANR	486755	IdentifierDecl	count = 0.		486713	1					
ANR	486756	IdentifierDeclType	double		486713	0					
ANR	486757	Identifier	count		486713	1					
ANR	486758	AssignmentExpression	count = 0.		486713	2		=			
ANR	486759	Identifier	count		486713	0					
ANR	486760	PrimaryExpression	0.		486713	1					
ANR	486761	ForStatement	for ( y = 0 ; y < y_height ; ++ y )		486713	4					
ANR	486762	ForInit	y = 0 ;	186:7:6122:6127	486713	0	True				
ANR	486763	AssignmentExpression	y = 0		486713	0		=			
ANR	486764	Identifier	y		486713	0					
ANR	486765	PrimaryExpression	0		486713	1					
ANR	486766	Condition	y < y_height	186:14:6129:6140	486713	1	True				
ANR	486767	RelationalExpression	y < y_height		486713	0		<			
ANR	486768	Identifier	y		486713	0					
ANR	486769	Identifier	y_height		486713	1					
ANR	486770	UnaryExpression	++ y	186:28:6143:6145	486713	2	True				
ANR	486771	IncDec	++		486713	0					
ANR	486772	Identifier	y		486713	1					
ANR	486773	CompoundStatement		6:33:178:178	486713	3					
ANR	486774	ExpressionStatement	count += y_width	187:4:6154:6170	486713	0	True				
ANR	486775	AssignmentExpression	count += y_width		486713	0		+=			
ANR	486776	Identifier	count		486713	0					
ANR	486777	Identifier	y_width		486713	1					
ANR	486778	ExpressionStatement	row_idx = y * y_width	188:4:6176:6197	486713	1	True				
ANR	486779	AssignmentExpression	row_idx = y * y_width		486713	0		=			
ANR	486780	Identifier	row_idx		486713	0					
ANR	486781	MultiplicativeExpression	y * y_width		486713	1		*			
ANR	486782	Identifier	y		486713	0					
ANR	486783	Identifier	y_width		486713	1					
ANR	486784	ForStatement	for ( x = 0 ; x < y_width ; ++ x )		486713	2					
ANR	486785	ForInit	x = 0 ;	189:9:6208:6213	486713	0	True				
ANR	486786	AssignmentExpression	x = 0		486713	0		=			
ANR	486787	Identifier	x		486713	0					
ANR	486788	PrimaryExpression	0		486713	1					
ANR	486789	Condition	x < y_width	189:16:6215:6225	486713	1	True				
ANR	486790	RelationalExpression	x < y_width		486713	0		<			
ANR	486791	Identifier	x		486713	0					
ANR	486792	Identifier	y_width		486713	1					
ANR	486793	UnaryExpression	++ x	189:29:6228:6230	486713	2	True				
ANR	486794	IncDec	++		486713	0					
ANR	486795	Identifier	x		486713	1					
ANR	486796	CompoundStatement		10:6:271:318	486713	3					
ANR	486797	IdentifierDeclStatement	double diff = Y1 [ row_idx + x ] - Y2 [ row_idx + x ] ;	190:6:6241:6288	486713	0	True				
ANR	486798	IdentifierDecl	diff = Y1 [ row_idx + x ] - Y2 [ row_idx + x ]		486713	0					
ANR	486799	IdentifierDeclType	double		486713	0					
ANR	486800	Identifier	diff		486713	1					
ANR	486801	AssignmentExpression	diff = Y1 [ row_idx + x ] - Y2 [ row_idx + x ]		486713	2		=			
ANR	486802	Identifier	diff		486713	0					
ANR	486803	AdditiveExpression	Y1 [ row_idx + x ] - Y2 [ row_idx + x ]		486713	1		-			
ANR	486804	ArrayIndexing	Y1 [ row_idx + x ]		486713	0					
ANR	486805	Identifier	Y1		486713	0					
ANR	486806	AdditiveExpression	row_idx + x		486713	1		+			
ANR	486807	Identifier	row_idx		486713	0					
ANR	486808	Identifier	x		486713	1					
ANR	486809	ArrayIndexing	Y2 [ row_idx + x ]		486713	1					
ANR	486810	Identifier	Y2		486713	0					
ANR	486811	AdditiveExpression	row_idx + x		486713	1		+			
ANR	486812	Identifier	row_idx		486713	0					
ANR	486813	Identifier	x		486713	1					
ANR	486814	ExpressionStatement	sse += diff * diff	191:6:6296:6314	486713	1	True				
ANR	486815	AssignmentExpression	sse += diff * diff		486713	0		+=			
ANR	486816	Identifier	sse		486713	0					
ANR	486817	MultiplicativeExpression	diff * diff		486713	1		*			
ANR	486818	Identifier	diff		486713	0					
ANR	486819	Identifier	diff		486713	1					
ANR	486820	ForStatement	for ( y = 0 ; y < uv_height ; ++ y )		486713	5					
ANR	486821	ForInit	y = 0 ;	194:7:6333:6338	486713	0	True				
ANR	486822	AssignmentExpression	y = 0		486713	0		=			
ANR	486823	Identifier	y		486713	0					
ANR	486824	PrimaryExpression	0		486713	1					
ANR	486825	Condition	y < uv_height	194:14:6340:6352	486713	1	True				
ANR	486826	RelationalExpression	y < uv_height		486713	0		<			
ANR	486827	Identifier	y		486713	0					
ANR	486828	Identifier	uv_height		486713	1					
ANR	486829	UnaryExpression	++ y	194:29:6355:6357	486713	2	True				
ANR	486830	IncDec	++		486713	0					
ANR	486831	Identifier	y		486713	1					
ANR	486832	CompoundStatement		14:34:390:390	486713	3					
ANR	486833	ExpressionStatement	count += 2 * uv_width	195:4:6366:6387	486713	0	True				
ANR	486834	AssignmentExpression	count += 2 * uv_width		486713	0		+=			
ANR	486835	Identifier	count		486713	0					
ANR	486836	MultiplicativeExpression	2 * uv_width		486713	1		*			
ANR	486837	PrimaryExpression	2		486713	0					
ANR	486838	Identifier	uv_width		486713	1					
ANR	486839	ExpressionStatement	row_idx = y * uv_width	196:4:6393:6415	486713	1	True				
ANR	486840	AssignmentExpression	row_idx = y * uv_width		486713	0		=			
ANR	486841	Identifier	row_idx		486713	0					
ANR	486842	MultiplicativeExpression	y * uv_width		486713	1		*			
ANR	486843	Identifier	y		486713	0					
ANR	486844	Identifier	uv_width		486713	1					
ANR	486845	ForStatement	for ( x = 0 ; x < uv_width ; ++ x )		486713	2					
ANR	486846	ForInit	x = 0 ;	197:9:6426:6431	486713	0	True				
ANR	486847	AssignmentExpression	x = 0		486713	0		=			
ANR	486848	Identifier	x		486713	0					
ANR	486849	PrimaryExpression	0		486713	1					
ANR	486850	Condition	x < uv_width	197:16:6433:6444	486713	1	True				
ANR	486851	RelationalExpression	x < uv_width		486713	0		<			
ANR	486852	Identifier	x		486713	0					
ANR	486853	Identifier	uv_width		486713	1					
ANR	486854	UnaryExpression	++ x	197:30:6447:6449	486713	2	True				
ANR	486855	IncDec	++		486713	0					
ANR	486856	Identifier	x		486713	1					
ANR	486857	CompoundStatement		19:6:553:608	486713	3					
ANR	486858	IdentifierDeclStatement	const double diff_U = U1 [ row_idx + x ] - U2 [ row_idx + x ] ;	198:6:6460:6515	486713	0	True				
ANR	486859	IdentifierDecl	diff_U = U1 [ row_idx + x ] - U2 [ row_idx + x ]		486713	0					
ANR	486860	IdentifierDeclType	const double		486713	0					
ANR	486861	Identifier	diff_U		486713	1					
ANR	486862	AssignmentExpression	diff_U = U1 [ row_idx + x ] - U2 [ row_idx + x ]		486713	2		=			
ANR	486863	Identifier	diff_U		486713	0					
ANR	486864	AdditiveExpression	U1 [ row_idx + x ] - U2 [ row_idx + x ]		486713	1		-			
ANR	486865	ArrayIndexing	U1 [ row_idx + x ]		486713	0					
ANR	486866	Identifier	U1		486713	0					
ANR	486867	AdditiveExpression	row_idx + x		486713	1		+			
ANR	486868	Identifier	row_idx		486713	0					
ANR	486869	Identifier	x		486713	1					
ANR	486870	ArrayIndexing	U2 [ row_idx + x ]		486713	1					
ANR	486871	Identifier	U2		486713	0					
ANR	486872	AdditiveExpression	row_idx + x		486713	1		+			
ANR	486873	Identifier	row_idx		486713	0					
ANR	486874	Identifier	x		486713	1					
ANR	486875	IdentifierDeclStatement	const double diff_V = V1 [ row_idx + x ] - V2 [ row_idx + x ] ;	199:6:6523:6578	486713	1	True				
ANR	486876	IdentifierDecl	diff_V = V1 [ row_idx + x ] - V2 [ row_idx + x ]		486713	0					
ANR	486877	IdentifierDeclType	const double		486713	0					
ANR	486878	Identifier	diff_V		486713	1					
ANR	486879	AssignmentExpression	diff_V = V1 [ row_idx + x ] - V2 [ row_idx + x ]		486713	2		=			
ANR	486880	Identifier	diff_V		486713	0					
ANR	486881	AdditiveExpression	V1 [ row_idx + x ] - V2 [ row_idx + x ]		486713	1		-			
ANR	486882	ArrayIndexing	V1 [ row_idx + x ]		486713	0					
ANR	486883	Identifier	V1		486713	0					
ANR	486884	AdditiveExpression	row_idx + x		486713	1		+			
ANR	486885	Identifier	row_idx		486713	0					
ANR	486886	Identifier	x		486713	1					
ANR	486887	ArrayIndexing	V2 [ row_idx + x ]		486713	1					
ANR	486888	Identifier	V2		486713	0					
ANR	486889	AdditiveExpression	row_idx + x		486713	1		+			
ANR	486890	Identifier	row_idx		486713	0					
ANR	486891	Identifier	x		486713	1					
ANR	486892	ExpressionStatement	sse += diff_U * diff_U + diff_V * diff_V	200:6:6586:6626	486713	2	True				
ANR	486893	AssignmentExpression	sse += diff_U * diff_U + diff_V * diff_V		486713	0		+=			
ANR	486894	Identifier	sse		486713	0					
ANR	486895	AdditiveExpression	diff_U * diff_U + diff_V * diff_V		486713	1		+			
ANR	486896	MultiplicativeExpression	diff_U * diff_U		486713	0		*			
ANR	486897	Identifier	diff_U		486713	0					
ANR	486898	Identifier	diff_U		486713	1					
ANR	486899	MultiplicativeExpression	diff_V * diff_V		486713	1		*			
ANR	486900	Identifier	diff_V		486713	0					
ANR	486901	Identifier	diff_V		486713	1					
ANR	486902	ReturnStatement	return - 4.3429448 * log ( sse / ( 255. * 255. * count ) ) ;	203:2:6640:6692	486713	6	True				
ANR	486903	MultiplicativeExpression	- 4.3429448 * log ( sse / ( 255. * 255. * count ) )		486713	0		*			
ANR	486904	UnaryOperationExpression	- 4.3429448		486713	0					
ANR	486905	UnaryOperator	-		486713	0					
ANR	486906	PrimaryExpression	4.3429448		486713	1					
ANR	486907	CallExpression	log ( sse / ( 255. * 255. * count ) )		486713	1					
ANR	486908	Callee	log		486713	0					
ANR	486909	Identifier	log		486713	0					
ANR	486910	ArgumentList	sse / ( 255. * 255. * count )		486713	1					
ANR	486911	Argument	sse / ( 255. * 255. * count )		486713	0					
ANR	486912	MultiplicativeExpression	sse / ( 255. * 255. * count )		486713	0		/			
ANR	486913	Identifier	sse		486713	0					
ANR	486914	MultiplicativeExpression	255. * 255. * count		486713	1		*			
ANR	486915	PrimaryExpression	255.		486713	0					
ANR	486916	MultiplicativeExpression	255. * count		486713	1		*			
ANR	486917	PrimaryExpression	255.		486713	0					
ANR	486918	Identifier	count		486713	1					
ANR	486919	ReturnType	double		486713	1					
ANR	486920	Identifier	GetPSNRYuv		486713	2					
ANR	486921	ParameterList	"const uint8 * Y1 , const uint8 * U1 , const uint8 * V1 , const uint8 * Y2 , const uint8 * U2 , const uint8 * V2 , int y_width , int y_height"		486713	3					
ANR	486922	Parameter	const uint8 * Y1	174:18:5714:5728	486713	0	True				
ANR	486923	ParameterType	const uint8 *		486713	0					
ANR	486924	Identifier	Y1		486713	1					
ANR	486925	Parameter	const uint8 * U1	175:18:5749:5763	486713	1	True				
ANR	486926	ParameterType	const uint8 *		486713	0					
ANR	486927	Identifier	U1		486713	1					
ANR	486928	Parameter	const uint8 * V1	176:18:5784:5798	486713	2	True				
ANR	486929	ParameterType	const uint8 *		486713	0					
ANR	486930	Identifier	V1		486713	1					
ANR	486931	Parameter	const uint8 * Y2	177:18:5819:5833	486713	3	True				
ANR	486932	ParameterType	const uint8 *		486713	0					
ANR	486933	Identifier	Y2		486713	1					
ANR	486934	Parameter	const uint8 * U2	178:18:5854:5868	486713	4	True				
ANR	486935	ParameterType	const uint8 *		486713	0					
ANR	486936	Identifier	U2		486713	1					
ANR	486937	Parameter	const uint8 * V2	179:18:5889:5903	486713	5	True				
ANR	486938	ParameterType	const uint8 *		486713	0					
ANR	486939	Identifier	V2		486713	1					
ANR	486940	Parameter	int y_width	180:18:5924:5934	486713	6	True				
ANR	486941	ParameterType	int		486713	0					
ANR	486942	Identifier	y_width		486713	1					
ANR	486943	Parameter	int y_height	181:18:5955:5966	486713	7	True				
ANR	486944	ParameterType	int		486713	0					
ANR	486945	Identifier	y_height		486713	1					
ANR	486946	CFGEntryNode	ENTRY		486713		True				
ANR	486947	CFGExitNode	EXIT		486713		True				
ANR	486948	Symbol	diff_V		486713						
ANR	486949	Symbol	* V2		486713						
ANR	486950	Symbol	* x		486713						
ANR	486951	Symbol	* V1		486713						
ANR	486952	Symbol	sse		486713						
ANR	486953	Symbol	log		486713						
ANR	486954	Symbol	diff_U		486713						
ANR	486955	Symbol	uv_width		486713						
ANR	486956	Symbol	V1		486713						
ANR	486957	Symbol	V2		486713						
ANR	486958	Symbol	* U2		486713						
ANR	486959	Symbol	* U1		486713						
ANR	486960	Symbol	count		486713						
ANR	486961	Symbol	diff		486713						
ANR	486962	Symbol	* row_idx		486713						
ANR	486963	Symbol	y_width		486713						
ANR	486964	Symbol	row_idx		486713						
ANR	486965	Symbol	Y1		486713						
ANR	486966	Symbol	x		486713						
ANR	486967	Symbol	Y2		486713						
ANR	486968	Symbol	y		486713						
ANR	486969	Symbol	y_height		486713						
ANR	486970	Symbol	U1		486713						
ANR	486971	Symbol	uv_height		486713						
ANR	486972	Symbol	* Y2		486713						
ANR	486973	Symbol	U2		486713						
ANR	486974	Symbol	* Y1		486713						
ANR	486975	Function	WebPGetPSNR	215:0:7042:7542							
ANR	486976	FunctionDef	"WebPGetPSNR (const uint8 * Y1 , const uint8 * U1 , const uint8 * V1 , uint8 * imgdata , int imgdata_size)"		486975	0					
ANR	486977	CompoundStatement		219:37:7222:7542	486975	0					
ANR	486978	IdentifierDeclStatement	uint8 * Y2 = NULL ;	220:2:7226:7242	486975	0	True				
ANR	486979	IdentifierDecl	* Y2 = NULL		486975	0					
ANR	486980	IdentifierDeclType	uint8 *		486975	0					
ANR	486981	Identifier	Y2		486975	1					
ANR	486982	AssignmentExpression	* Y2 = NULL		486975	2		=			
ANR	486983	Identifier	NULL		486975	0					
ANR	486984	Identifier	NULL		486975	1					
ANR	486985	IdentifierDeclStatement	uint8 * U2 = NULL ;	221:2:7246:7262	486975	1	True				
ANR	486986	IdentifierDecl	* U2 = NULL		486975	0					
ANR	486987	IdentifierDeclType	uint8 *		486975	0					
ANR	486988	Identifier	U2		486975	1					
ANR	486989	AssignmentExpression	* U2 = NULL		486975	2		=			
ANR	486990	Identifier	NULL		486975	0					
ANR	486991	Identifier	NULL		486975	1					
ANR	486992	IdentifierDeclStatement	uint8 * V2 = NULL ;	222:2:7266:7282	486975	2	True				
ANR	486993	IdentifierDecl	* V2 = NULL		486975	0					
ANR	486994	IdentifierDeclType	uint8 *		486975	0					
ANR	486995	Identifier	V2		486975	1					
ANR	486996	AssignmentExpression	* V2 = NULL		486975	2		=			
ANR	486997	Identifier	NULL		486975	0					
ANR	486998	Identifier	NULL		486975	1					
ANR	486999	IdentifierDeclStatement	"int w = 0 , h = 0 ;"	223:2:7286:7302	486975	3	True				
ANR	487000	IdentifierDecl	w = 0		486975	0					
ANR	487001	IdentifierDeclType	int		486975	0					
ANR	487002	Identifier	w		486975	1					
ANR	487003	AssignmentExpression	w = 0		486975	2		=			
ANR	487004	Identifier	w		486975	0					
ANR	487005	PrimaryExpression	0		486975	1					
ANR	487006	IdentifierDecl	h = 0		486975	1					
ANR	487007	IdentifierDeclType	int		486975	0					
ANR	487008	Identifier	h		486975	1					
ANR	487009	AssignmentExpression	h = 0		486975	2		=			
ANR	487010	Identifier	h		486975	0					
ANR	487011	PrimaryExpression	0		486975	1					
ANR	487012	IdentifierDeclStatement	double psnr = 0 ;	224:2:7306:7321	486975	4	True				
ANR	487013	IdentifierDecl	psnr = 0		486975	0					
ANR	487014	IdentifierDeclType	double		486975	0					
ANR	487015	Identifier	psnr		486975	1					
ANR	487016	AssignmentExpression	psnr = 0		486975	2		=			
ANR	487017	Identifier	psnr		486975	0					
ANR	487018	PrimaryExpression	0		486975	1					
ANR	487019	ExpressionStatement	"WebPDecode ( imgdata , imgdata_size , & Y2 , & U2 , & V2 , & w , & h )"	226:2:7326:7460	486975	5	True				
ANR	487020	CallExpression	"WebPDecode ( imgdata , imgdata_size , & Y2 , & U2 , & V2 , & w , & h )"		486975	0					
ANR	487021	Callee	WebPDecode		486975	0					
ANR	487022	Identifier	WebPDecode		486975	0					
ANR	487023	ArgumentList	imgdata		486975	1					
ANR	487024	Argument	imgdata		486975	0					
ANR	487025	Identifier	imgdata		486975	0					
ANR	487026	Argument	imgdata_size		486975	1					
ANR	487027	Identifier	imgdata_size		486975	0					
ANR	487028	Argument	& Y2		486975	2					
ANR	487029	UnaryOperationExpression	& Y2		486975	0					
ANR	487030	UnaryOperator	&		486975	0					
ANR	487031	Identifier	Y2		486975	1					
ANR	487032	Argument	& U2		486975	3					
ANR	487033	UnaryOperationExpression	& U2		486975	0					
ANR	487034	UnaryOperator	&		486975	0					
ANR	487035	Identifier	U2		486975	1					
ANR	487036	Argument	& V2		486975	4					
ANR	487037	UnaryOperationExpression	& V2		486975	0					
ANR	487038	UnaryOperator	&		486975	0					
ANR	487039	Identifier	V2		486975	1					
ANR	487040	Argument	& w		486975	5					
ANR	487041	UnaryOperationExpression	& w		486975	0					
ANR	487042	UnaryOperator	&		486975	0					
ANR	487043	Identifier	w		486975	1					
ANR	487044	Argument	& h		486975	6					
ANR	487045	UnaryOperationExpression	& h		486975	0					
ANR	487046	UnaryOperator	&		486975	0					
ANR	487047	Identifier	h		486975	1					
ANR	487048	ExpressionStatement	"psnr = GetPSNRYuv ( Y1 , U1 , V1 , Y2 , U2 , V2 , w , h )"	234:2:7465:7512	486975	6	True				
ANR	487049	AssignmentExpression	"psnr = GetPSNRYuv ( Y1 , U1 , V1 , Y2 , U2 , V2 , w , h )"		486975	0		=			
ANR	487050	Identifier	psnr		486975	0					
ANR	487051	CallExpression	"GetPSNRYuv ( Y1 , U1 , V1 , Y2 , U2 , V2 , w , h )"		486975	1					
ANR	487052	Callee	GetPSNRYuv		486975	0					
ANR	487053	Identifier	GetPSNRYuv		486975	0					
ANR	487054	ArgumentList	Y1		486975	1					
ANR	487055	Argument	Y1		486975	0					
ANR	487056	Identifier	Y1		486975	0					
ANR	487057	Argument	U1		486975	1					
ANR	487058	Identifier	U1		486975	0					
ANR	487059	Argument	V1		486975	2					
ANR	487060	Identifier	V1		486975	0					
ANR	487061	Argument	Y2		486975	3					
ANR	487062	Identifier	Y2		486975	0					
ANR	487063	Argument	U2		486975	4					
ANR	487064	Identifier	U2		486975	0					
ANR	487065	Argument	V2		486975	5					
ANR	487066	Identifier	V2		486975	0					
ANR	487067	Argument	w		486975	6					
ANR	487068	Identifier	w		486975	0					
ANR	487069	Argument	h		486975	7					
ANR	487070	Identifier	h		486975	0					
ANR	487071	ExpressionStatement	free ( Y2 )	235:2:7516:7524	486975	7	True				
ANR	487072	CallExpression	free ( Y2 )		486975	0					
ANR	487073	Callee	free		486975	0					
ANR	487074	Identifier	free		486975	0					
ANR	487075	ArgumentList	Y2		486975	1					
ANR	487076	Argument	Y2		486975	0					
ANR	487077	Identifier	Y2		486975	0					
ANR	487078	ReturnStatement	return psnr ;	237:2:7529:7540	486975	8	True				
ANR	487079	Identifier	psnr		486975	0					
ANR	487080	ReturnType	double		486975	1					
ANR	487081	Identifier	WebPGetPSNR		486975	2					
ANR	487082	ParameterList	"const uint8 * Y1 , const uint8 * U1 , const uint8 * V1 , uint8 * imgdata , int imgdata_size"		486975	3					
ANR	487083	Parameter	const uint8 * Y1	215:19:7061:7075	486975	0	True				
ANR	487084	ParameterType	const uint8 *		486975	0					
ANR	487085	Identifier	Y1		486975	1					
ANR	487086	Parameter	const uint8 * U1	216:19:7097:7111	486975	1	True				
ANR	487087	ParameterType	const uint8 *		486975	0					
ANR	487088	Identifier	U1		486975	1					
ANR	487089	Parameter	const uint8 * V1	217:19:7133:7147	486975	2	True				
ANR	487090	ParameterType	const uint8 *		486975	0					
ANR	487091	Identifier	V1		486975	1					
ANR	487092	Parameter	uint8 * imgdata	218:19:7169:7182	486975	3	True				
ANR	487093	ParameterType	uint8 *		486975	0					
ANR	487094	Identifier	imgdata		486975	1					
ANR	487095	Parameter	int imgdata_size	219:19:7204:7219	486975	4	True				
ANR	487096	ParameterType	int		486975	0					
ANR	487097	Identifier	imgdata_size		486975	1					
ANR	487098	CFGEntryNode	ENTRY		486975		True				
ANR	487099	CFGExitNode	EXIT		486975		True				
ANR	487100	Symbol	& Y2		486975						
ANR	487101	Symbol	NULL		486975						
ANR	487102	Symbol	imgdata		486975						
ANR	487103	Symbol	& U2		486975						
ANR	487104	Symbol	& V2		486975						
ANR	487105	Symbol	h		486975						
ANR	487106	Symbol	& h		486975						
ANR	487107	Symbol	GetPSNRYuv		486975						
ANR	487108	Symbol	imgdata_size		486975						
ANR	487109	Symbol	psnr		486975						
ANR	487110	Symbol	w		486975						
ANR	487111	Symbol	Y1		486975						
ANR	487112	Symbol	Y2		486975						
ANR	487113	Symbol	V1		486975						
ANR	487114	Symbol	U1		486975						
ANR	487115	Symbol	V2		486975						
ANR	487116	Symbol	U2		486975						
ANR	487117	Symbol	& w		486975						
ANR	487118	Function	SkipRiffHeader	257:0:8302:9069							
ANR	487119	FunctionDef	"SkipRiffHeader (const uint8 * * data_ptr , int * data_size_ptr)"		487118	0					
ANR	487120	CompoundStatement		257:63:8365:9069	487118	0					
ANR	487121	IdentifierDeclStatement	const int kHeaderSize = ( 20 + 10 ) ;	259:1:8416:8449	487118	0	True				
ANR	487122	IdentifierDecl	kHeaderSize = ( 20 + 10 )		487118	0					
ANR	487123	IdentifierDeclType	const int		487118	0					
ANR	487124	Identifier	kHeaderSize		487118	1					
ANR	487125	AssignmentExpression	kHeaderSize = ( 20 + 10 )		487118	2		=			
ANR	487126	Identifier	kHeaderSize		487118	0					
ANR	487127	AdditiveExpression	20 + 10		487118	1		+			
ANR	487128	PrimaryExpression	20		487118	0					
ANR	487129	PrimaryExpression	10		487118	1					
ANR	487130	IdentifierDeclStatement	uint32 chunk_size = 0xffffffffu ;	260:1:8452:8483	487118	1	True				
ANR	487131	IdentifierDecl	chunk_size = 0xffffffffu		487118	0					
ANR	487132	IdentifierDeclType	uint32		487118	0					
ANR	487133	Identifier	chunk_size		487118	1					
ANR	487134	AssignmentExpression	chunk_size = 0xffffffffu		487118	2		=			
ANR	487135	Identifier	chunk_size		487118	0					
ANR	487136	PrimaryExpression	0xffffffffu		487118	1					
ANR	487137	IfStatement	"if ( * data_size_ptr >= kHeaderSize && ! memcmp ( * data_ptr , ""RIFF"" , 4 ) )"		487118	2					
ANR	487138	Condition	"* data_size_ptr >= kHeaderSize && ! memcmp ( * data_ptr , ""RIFF"" , 4 )"	262:5:8491:8552	487118	0	True				
ANR	487139	AndExpression	"* data_size_ptr >= kHeaderSize && ! memcmp ( * data_ptr , ""RIFF"" , 4 )"		487118	0		&&			
ANR	487140	RelationalExpression	* data_size_ptr >= kHeaderSize		487118	0		>=			
ANR	487141	UnaryOperationExpression	* data_size_ptr		487118	0					
ANR	487142	UnaryOperator	*		487118	0					
ANR	487143	Identifier	data_size_ptr		487118	1					
ANR	487144	Identifier	kHeaderSize		487118	1					
ANR	487145	UnaryOperationExpression	"! memcmp ( * data_ptr , ""RIFF"" , 4 )"		487118	1					
ANR	487146	UnaryOperator	!		487118	0					
ANR	487147	CallExpression	"memcmp ( * data_ptr , ""RIFF"" , 4 )"		487118	1					
ANR	487148	Callee	memcmp		487118	0					
ANR	487149	Identifier	memcmp		487118	0					
ANR	487150	ArgumentList	* data_ptr		487118	1					
ANR	487151	Argument	* data_ptr		487118	0					
ANR	487152	UnaryOperationExpression	* data_ptr		487118	0					
ANR	487153	UnaryOperator	*		487118	0					
ANR	487154	Identifier	data_ptr		487118	1					
ANR	487155	Argument	"""RIFF"""		487118	1					
ANR	487156	PrimaryExpression	"""RIFF"""		487118	0					
ANR	487157	Argument	4		487118	2					
ANR	487158	PrimaryExpression	4		487118	0					
ANR	487159	CompoundStatement		6:69:189:189	487118	1					
ANR	487160	IfStatement	"if ( memcmp ( * data_ptr + 8 , ""WEBP"" , 4 ) )"		487118	0					
ANR	487161	Condition	"memcmp ( * data_ptr + 8 , ""WEBP"" , 4 )"	263:5:8562:8593	487118	0	True				
ANR	487162	CallExpression	"memcmp ( * data_ptr + 8 , ""WEBP"" , 4 )"		487118	0					
ANR	487163	Callee	memcmp		487118	0					
ANR	487164	Identifier	memcmp		487118	0					
ANR	487165	ArgumentList	* data_ptr + 8		487118	1					
ANR	487166	Argument	* data_ptr + 8		487118	0					
ANR	487167	AdditiveExpression	* data_ptr + 8		487118	0		+			
ANR	487168	UnaryOperationExpression	* data_ptr		487118	0					
ANR	487169	UnaryOperator	*		487118	0					
ANR	487170	Identifier	data_ptr		487118	1					
ANR	487171	PrimaryExpression	8		487118	1					
ANR	487172	Argument	"""WEBP"""		487118	1					
ANR	487173	PrimaryExpression	"""WEBP"""		487118	0					
ANR	487174	Argument	4		487118	2					
ANR	487175	PrimaryExpression	4		487118	0					
ANR	487176	CompoundStatement		7:39:230:230	487118	1					
ANR	487177	ReturnStatement	return 0 ;	264:2:8600:8608	487118	0	True				
ANR	487178	PrimaryExpression	0		487118	0					
ANR	487179	ElseStatement	else		487118	0					
ANR	487180	CompoundStatement		10:2:290:338	487118	0					
ANR	487181	IdentifierDeclStatement	const uint32 riff_size = get_le32 ( * data_ptr + 4 ) ;	266:2:8656:8704	487118	0	True				
ANR	487182	IdentifierDecl	riff_size = get_le32 ( * data_ptr + 4 )		487118	0					
ANR	487183	IdentifierDeclType	const uint32		487118	0					
ANR	487184	Identifier	riff_size		487118	1					
ANR	487185	AssignmentExpression	riff_size = get_le32 ( * data_ptr + 4 )		487118	2		=			
ANR	487186	Identifier	riff_size		487118	0					
ANR	487187	CallExpression	get_le32 ( * data_ptr + 4 )		487118	1					
ANR	487188	Callee	get_le32		487118	0					
ANR	487189	Identifier	get_le32		487118	0					
ANR	487190	ArgumentList	* data_ptr + 4		487118	1					
ANR	487191	Argument	* data_ptr + 4		487118	0					
ANR	487192	AdditiveExpression	* data_ptr + 4		487118	0		+			
ANR	487193	UnaryOperationExpression	* data_ptr		487118	0					
ANR	487194	UnaryOperator	*		487118	0					
ANR	487195	Identifier	data_ptr		487118	1					
ANR	487196	PrimaryExpression	4		487118	1					
ANR	487197	IfStatement	"if ( memcmp ( * data_ptr + 12 , ""VP8 "" , 4 ) )"		487118	1					
ANR	487198	Condition	"memcmp ( * data_ptr + 12 , ""VP8 "" , 4 )"	267:6:8712:8744	487118	0	True				
ANR	487199	CallExpression	"memcmp ( * data_ptr + 12 , ""VP8 "" , 4 )"		487118	0					
ANR	487200	Callee	memcmp		487118	0					
ANR	487201	Identifier	memcmp		487118	0					
ANR	487202	ArgumentList	* data_ptr + 12		487118	1					
ANR	487203	Argument	* data_ptr + 12		487118	0					
ANR	487204	AdditiveExpression	* data_ptr + 12		487118	0		+			
ANR	487205	UnaryOperationExpression	* data_ptr		487118	0					
ANR	487206	UnaryOperator	*		487118	0					
ANR	487207	Identifier	data_ptr		487118	1					
ANR	487208	PrimaryExpression	12		487118	1					
ANR	487209	Argument	"""VP8 """		487118	1					
ANR	487210	PrimaryExpression	"""VP8 """		487118	0					
ANR	487211	Argument	4		487118	2					
ANR	487212	PrimaryExpression	4		487118	0					
ANR	487213	CompoundStatement		11:41:381:381	487118	1					
ANR	487214	ReturnStatement	return 0 ;	268:4:8753:8761	487118	0	True				
ANR	487215	PrimaryExpression	0		487118	0					
ANR	487216	ExpressionStatement	chunk_size = get_le32 ( * data_ptr + 16 )	270:2:8804:8841	487118	2	True				
ANR	487217	AssignmentExpression	chunk_size = get_le32 ( * data_ptr + 16 )		487118	0		=			
ANR	487218	Identifier	chunk_size		487118	0					
ANR	487219	CallExpression	get_le32 ( * data_ptr + 16 )		487118	1					
ANR	487220	Callee	get_le32		487118	0					
ANR	487221	Identifier	get_le32		487118	0					
ANR	487222	ArgumentList	* data_ptr + 16		487118	1					
ANR	487223	Argument	* data_ptr + 16		487118	0					
ANR	487224	AdditiveExpression	* data_ptr + 16		487118	0		+			
ANR	487225	UnaryOperationExpression	* data_ptr		487118	0					
ANR	487226	UnaryOperator	*		487118	0					
ANR	487227	Identifier	data_ptr		487118	1					
ANR	487228	PrimaryExpression	16		487118	1					
ANR	487229	IfStatement	if ( ( chunk_size > riff_size + 8 ) || ( chunk_size & 1 ) )		487118	3					
ANR	487230	Condition	( chunk_size > riff_size + 8 ) || ( chunk_size & 1 )	271:6:8849:8896	487118	0	True				
ANR	487231	OrExpression	( chunk_size > riff_size + 8 ) || ( chunk_size & 1 )		487118	0		||			
ANR	487232	RelationalExpression	chunk_size > riff_size + 8		487118	0		>			
ANR	487233	Identifier	chunk_size		487118	0					
ANR	487234	AdditiveExpression	riff_size + 8		487118	1		+			
ANR	487235	Identifier	riff_size		487118	0					
ANR	487236	PrimaryExpression	8		487118	1					
ANR	487237	BitAndExpression	chunk_size & 1		487118	1		&			
ANR	487238	Identifier	chunk_size		487118	0					
ANR	487239	PrimaryExpression	1		487118	1					
ANR	487240	CompoundStatement		15:56:533:533	487118	1					
ANR	487241	ReturnStatement	return 0 ;	272:4:8905:8913	487118	0	True				
ANR	487242	PrimaryExpression	0		487118	0					
ANR	487243	ExpressionStatement	* data_ptr += 20	275:2:9002:9017	487118	4	True				
ANR	487244	AssignmentExpression	* data_ptr += 20		487118	0		+=			
ANR	487245	UnaryOperationExpression	* data_ptr		487118	0					
ANR	487246	UnaryOperator	*		487118	0					
ANR	487247	Identifier	data_ptr		487118	1					
ANR	487248	PrimaryExpression	20		487118	1					
ANR	487249	ExpressionStatement	* data_size_ptr -= 20	276:2:9021:9041	487118	5	True				
ANR	487250	AssignmentExpression	* data_size_ptr -= 20		487118	0		-=			
ANR	487251	UnaryOperationExpression	* data_size_ptr		487118	0					
ANR	487252	UnaryOperator	*		487118	0					
ANR	487253	Identifier	data_size_ptr		487118	1					
ANR	487254	PrimaryExpression	20		487118	1					
ANR	487255	ReturnStatement	return chunk_size ;	279:1:9050:9067	487118	3	True				
ANR	487256	Identifier	chunk_size		487118	0					
ANR	487257	ReturnType	int		487118	1					
ANR	487258	Identifier	SkipRiffHeader		487118	2					
ANR	487259	ParameterList	"const uint8 * * data_ptr , int * data_size_ptr"		487118	3					
ANR	487260	Parameter	const uint8 * * data_ptr	257:19:8321:8342	487118	0	True				
ANR	487261	ParameterType	const uint8 * *		487118	0					
ANR	487262	Identifier	data_ptr		487118	1					
ANR	487263	Parameter	int * data_size_ptr	257:43:8345:8362	487118	1	True				
ANR	487264	ParameterType	int *		487118	0					
ANR	487265	Identifier	data_size_ptr		487118	1					
ANR	487266	CFGEntryNode	ENTRY		487118		True				
ANR	487267	CFGExitNode	EXIT		487118		True				
ANR	487268	Symbol	chunk_size		487118						
ANR	487269	Symbol	memcmp		487118						
ANR	487270	Symbol	riff_size		487118						
ANR	487271	Symbol	data_size_ptr		487118						
ANR	487272	Symbol	get_le32		487118						
ANR	487273	Symbol	* data_ptr		487118						
ANR	487274	Symbol	data_ptr		487118						
ANR	487275	Symbol	* data_size_ptr		487118						
ANR	487276	Symbol	kHeaderSize		487118						
ANR	487277	Function	YUV420toRGBLine	292:0:9520:10082							
ANR	487278	FunctionDef	"YUV420toRGBLine (uint8 * y_src , uint8 * u_src , uint8 * v_src , int y_width , uint32 * rgb_dst)"		487277	0					
ANR	487279	CompoundStatement		296:45:9732:10082	487277	0					
ANR	487280	IdentifierDeclStatement	int x ;	297:2:9736:9741	487277	0	True				
ANR	487281	IdentifierDecl	x		487277	0					
ANR	487282	IdentifierDeclType	int		487277	0					
ANR	487283	Identifier	x		487277	1					
ANR	487284	ForStatement	for ( x = 0 ; x < ( y_width >> 1 ) ; ++ x )		487277	1					
ANR	487285	ForInit	x = 0 ;	298:7:9750:9755	487277	0	True				
ANR	487286	AssignmentExpression	x = 0		487277	0		=			
ANR	487287	Identifier	x		487277	0					
ANR	487288	PrimaryExpression	0		487277	1					
ANR	487289	Condition	x < ( y_width >> 1 )	298:14:9757:9774	487277	1	True				
ANR	487290	RelationalExpression	x < ( y_width >> 1 )		487277	0		<			
ANR	487291	Identifier	x		487277	0					
ANR	487292	ShiftExpression	y_width >> 1		487277	1		>>			
ANR	487293	Identifier	y_width		487277	0					
ANR	487294	PrimaryExpression	1		487277	1					
ANR	487295	UnaryExpression	++ x	298:34:9777:9779	487277	2	True				
ANR	487296	IncDec	++		487277	0					
ANR	487297	Identifier	x		487277	1					
ANR	487298	CompoundStatement		5:4:83:105	487277	3					
ANR	487299	IdentifierDeclStatement	const int U = u_src [ 0 ] ;	299:4:9788:9810	487277	0	True				
ANR	487300	IdentifierDecl	U = u_src [ 0 ]		487277	0					
ANR	487301	IdentifierDeclType	const int		487277	0					
ANR	487302	Identifier	U		487277	1					
ANR	487303	AssignmentExpression	U = u_src [ 0 ]		487277	2		=			
ANR	487304	Identifier	U		487277	0					
ANR	487305	ArrayIndexing	u_src [ 0 ]		487277	1					
ANR	487306	Identifier	u_src		487277	0					
ANR	487307	PrimaryExpression	0		487277	1					
ANR	487308	IdentifierDeclStatement	const int V = v_src [ 0 ] ;	300:4:9816:9838	487277	1	True				
ANR	487309	IdentifierDecl	V = v_src [ 0 ]		487277	0					
ANR	487310	IdentifierDeclType	const int		487277	0					
ANR	487311	Identifier	V		487277	1					
ANR	487312	AssignmentExpression	V = v_src [ 0 ]		487277	2		=			
ANR	487313	Identifier	V		487277	0					
ANR	487314	ArrayIndexing	v_src [ 0 ]		487277	1					
ANR	487315	Identifier	v_src		487277	0					
ANR	487316	PrimaryExpression	0		487277	1					
ANR	487317	ExpressionStatement	"ToRGB ( y_src [ 0 ] , U , V , rgb_dst )"	301:4:9844:9874	487277	2	True				
ANR	487318	CallExpression	"ToRGB ( y_src [ 0 ] , U , V , rgb_dst )"		487277	0					
ANR	487319	Callee	ToRGB		487277	0					
ANR	487320	Identifier	ToRGB		487277	0					
ANR	487321	ArgumentList	y_src [ 0 ]		487277	1					
ANR	487322	Argument	y_src [ 0 ]		487277	0					
ANR	487323	ArrayIndexing	y_src [ 0 ]		487277	0					
ANR	487324	Identifier	y_src		487277	0					
ANR	487325	PrimaryExpression	0		487277	1					
ANR	487326	Argument	U		487277	1					
ANR	487327	Identifier	U		487277	0					
ANR	487328	Argument	V		487277	2					
ANR	487329	Identifier	V		487277	0					
ANR	487330	Argument	rgb_dst		487277	3					
ANR	487331	Identifier	rgb_dst		487277	0					
ANR	487332	ExpressionStatement	"ToRGB ( y_src [ 1 ] , U , V , rgb_dst + 1 )"	302:4:9880:9914	487277	3	True				
ANR	487333	CallExpression	"ToRGB ( y_src [ 1 ] , U , V , rgb_dst + 1 )"		487277	0					
ANR	487334	Callee	ToRGB		487277	0					
ANR	487335	Identifier	ToRGB		487277	0					
ANR	487336	ArgumentList	y_src [ 1 ]		487277	1					
ANR	487337	Argument	y_src [ 1 ]		487277	0					
ANR	487338	ArrayIndexing	y_src [ 1 ]		487277	0					
ANR	487339	Identifier	y_src		487277	0					
ANR	487340	PrimaryExpression	1		487277	1					
ANR	487341	Argument	U		487277	1					
ANR	487342	Identifier	U		487277	0					
ANR	487343	Argument	V		487277	2					
ANR	487344	Identifier	V		487277	0					
ANR	487345	Argument	rgb_dst + 1		487277	3					
ANR	487346	AdditiveExpression	rgb_dst + 1		487277	0		+			
ANR	487347	Identifier	rgb_dst		487277	0					
ANR	487348	PrimaryExpression	1		487277	1					
ANR	487349	ExpressionStatement	++ u_src	303:4:9920:9927	487277	4	True				
ANR	487350	UnaryExpression	++ u_src		487277	0					
ANR	487351	IncDec	++		487277	0					
ANR	487352	Identifier	u_src		487277	1					
ANR	487353	ExpressionStatement	++ v_src	304:4:9933:9940	487277	5	True				
ANR	487354	UnaryExpression	++ v_src		487277	0					
ANR	487355	IncDec	++		487277	0					
ANR	487356	Identifier	v_src		487277	1					
ANR	487357	ExpressionStatement	y_src += 2	305:4:9946:9956	487277	6	True				
ANR	487358	AssignmentExpression	y_src += 2		487277	0		+=			
ANR	487359	Identifier	y_src		487277	0					
ANR	487360	PrimaryExpression	2		487277	1					
ANR	487361	ExpressionStatement	rgb_dst += 2	306:4:9962:9974	487277	7	True				
ANR	487362	AssignmentExpression	rgb_dst += 2		487277	0		+=			
ANR	487363	Identifier	rgb_dst		487277	0					
ANR	487364	PrimaryExpression	2		487277	1					
ANR	487365	IfStatement	if ( y_width & 1 )		487277	2					
ANR	487366	Condition	y_width & 1	308:6:9986:9996	487277	0	True				
ANR	487367	BitAndExpression	y_width & 1		487277	0		&			
ANR	487368	Identifier	y_width		487277	0					
ANR	487369	PrimaryExpression	1		487277	1					
ANR	487370	CompoundStatement		13:19:266:266	487277	1					
ANR	487371	ExpressionStatement	"ToRGB ( y_src [ 0 ] , ( * u_src ) , ( * v_src ) , rgb_dst )"	309:4:10032:10076	487277	0	True				
ANR	487372	CallExpression	"ToRGB ( y_src [ 0 ] , ( * u_src ) , ( * v_src ) , rgb_dst )"		487277	0					
ANR	487373	Callee	ToRGB		487277	0					
ANR	487374	Identifier	ToRGB		487277	0					
ANR	487375	ArgumentList	y_src [ 0 ]		487277	1					
ANR	487376	Argument	y_src [ 0 ]		487277	0					
ANR	487377	ArrayIndexing	y_src [ 0 ]		487277	0					
ANR	487378	Identifier	y_src		487277	0					
ANR	487379	PrimaryExpression	0		487277	1					
ANR	487380	Argument	* u_src		487277	1					
ANR	487381	UnaryOperationExpression	* u_src		487277	0					
ANR	487382	UnaryOperator	*		487277	0					
ANR	487383	Identifier	u_src		487277	1					
ANR	487384	Argument	* v_src		487277	2					
ANR	487385	UnaryOperationExpression	* v_src		487277	0					
ANR	487386	UnaryOperator	*		487277	0					
ANR	487387	Identifier	v_src		487277	1					
ANR	487388	Argument	rgb_dst		487277	3					
ANR	487389	Identifier	rgb_dst		487277	0					
ANR	487390	ReturnType	static void		487277	1					
ANR	487391	Identifier	YUV420toRGBLine		487277	2					
ANR	487392	ParameterList	"uint8 * y_src , uint8 * u_src , uint8 * v_src , int y_width , uint32 * rgb_dst"		487277	3					
ANR	487393	Parameter	uint8 * y_src	292:28:9548:9559	487277	0	True				
ANR	487394	ParameterType	uint8 *		487277	0					
ANR	487395	Identifier	y_src		487277	1					
ANR	487396	Parameter	uint8 * u_src	293:28:9590:9601	487277	1	True				
ANR	487397	ParameterType	uint8 *		487277	0					
ANR	487398	Identifier	u_src		487277	1					
ANR	487399	Parameter	uint8 * v_src	294:28:9632:9643	487277	2	True				
ANR	487400	ParameterType	uint8 *		487277	0					
ANR	487401	Identifier	v_src		487277	1					
ANR	487402	Parameter	int y_width	295:28:9674:9684	487277	3	True				
ANR	487403	ParameterType	int		487277	0					
ANR	487404	Identifier	y_width		487277	1					
ANR	487405	Parameter	uint32 * rgb_dst	296:28:9715:9729	487277	4	True				
ANR	487406	ParameterType	uint32 *		487277	0					
ANR	487407	Identifier	rgb_dst		487277	1					
ANR	487408	CFGEntryNode	ENTRY		487277		True				
ANR	487409	CFGExitNode	EXIT		487277		True				
ANR	487410	Symbol	v_src		487277						
ANR	487411	Symbol	U		487277						
ANR	487412	Symbol	V		487277						
ANR	487413	Symbol	u_src		487277						
ANR	487414	Symbol	y_src		487277						
ANR	487415	Symbol	rgb_dst		487277						
ANR	487416	Symbol	x		487277						
ANR	487417	Symbol	* v_src		487277						
ANR	487418	Symbol	* u_src		487277						
ANR	487419	Symbol	y_width		487277						
ANR	487420	Symbol	* y_src		487277						
ANR	487421	Function	YUV420toRGBA	326:0:10744:11515							
ANR	487422	FunctionDef	"YUV420toRGBA (uint8 * Y , uint8 * U , uint8 * V , int words_per_line , int width , int height , uint32 * pixdata)"		487421	0					
ANR	487423	CompoundStatement		332:35:10960:11515	487421	0					
ANR	487424	IdentifierDeclStatement	int y_width = width ;	333:2:10964:10983	487421	0	True				
ANR	487425	IdentifierDecl	y_width = width		487421	0					
ANR	487426	IdentifierDeclType	int		487421	0					
ANR	487427	Identifier	y_width		487421	1					
ANR	487428	AssignmentExpression	y_width = width		487421	2		=			
ANR	487429	Identifier	width		487421	0					
ANR	487430	Identifier	width		487421	1					
ANR	487431	IdentifierDeclStatement	int y_stride = y_width ;	334:2:10987:11009	487421	1	True				
ANR	487432	IdentifierDecl	y_stride = y_width		487421	0					
ANR	487433	IdentifierDeclType	int		487421	0					
ANR	487434	Identifier	y_stride		487421	1					
ANR	487435	AssignmentExpression	y_stride = y_width		487421	2		=			
ANR	487436	Identifier	y_width		487421	0					
ANR	487437	Identifier	y_width		487421	1					
ANR	487438	IdentifierDeclStatement	int uv_width = ( ( y_width + 1 ) >> 1 ) ;	335:2:11013:11048	487421	2	True				
ANR	487439	IdentifierDecl	uv_width = ( ( y_width + 1 ) >> 1 )		487421	0					
ANR	487440	IdentifierDeclType	int		487421	0					
ANR	487441	Identifier	uv_width		487421	1					
ANR	487442	AssignmentExpression	uv_width = ( ( y_width + 1 ) >> 1 )		487421	2		=			
ANR	487443	Identifier	uv_width		487421	0					
ANR	487444	ShiftExpression	( y_width + 1 ) >> 1		487421	1		>>			
ANR	487445	AdditiveExpression	y_width + 1		487421	0		+			
ANR	487446	Identifier	y_width		487421	0					
ANR	487447	PrimaryExpression	1		487421	1					
ANR	487448	PrimaryExpression	1		487421	1					
ANR	487449	IdentifierDeclStatement	int uv_stride = uv_width ;	336:2:11052:11076	487421	3	True				
ANR	487450	IdentifierDecl	uv_stride = uv_width		487421	0					
ANR	487451	IdentifierDeclType	int		487421	0					
ANR	487452	Identifier	uv_stride		487421	1					
ANR	487453	AssignmentExpression	uv_stride = uv_width		487421	2		=			
ANR	487454	Identifier	uv_width		487421	0					
ANR	487455	Identifier	uv_width		487421	1					
ANR	487456	IdentifierDeclStatement	int y ;	337:2:11080:11085	487421	4	True				
ANR	487457	IdentifierDecl	y		487421	0					
ANR	487458	IdentifierDeclType	int		487421	0					
ANR	487459	Identifier	y		487421	1					
ANR	487460	IfStatement	if ( ! init_done )		487421	5					
ANR	487461	Condition	! init_done	339:6:11094:11103	487421	0	True				
ANR	487462	UnaryOperationExpression	! init_done		487421	0					
ANR	487463	UnaryOperator	!		487421	0					
ANR	487464	Identifier	init_done		487421	1					
ANR	487465	ExpressionStatement	InitTables ( )	340:4:11110:11122	487421	1	True				
ANR	487466	CallExpression	InitTables ( )		487421	0					
ANR	487467	Callee	InitTables		487421	0					
ANR	487468	Identifier	InitTables		487421	0					
ANR	487469	ArgumentList			487421	1					
ANR	487470	ForStatement	for ( y = 0 ; y < height ; ++ y )		487421	6					
ANR	487471	ForInit	y = 0 ;	345:7:11277:11282	487421	0	True				
ANR	487472	AssignmentExpression	y = 0		487421	0		=			
ANR	487473	Identifier	y		487421	0					
ANR	487474	PrimaryExpression	0		487421	1					
ANR	487475	Condition	y < height	345:14:11284:11293	487421	1	True				
ANR	487476	RelationalExpression	y < height		487421	0		<			
ANR	487477	Identifier	y		487421	0					
ANR	487478	Identifier	height		487421	1					
ANR	487479	UnaryExpression	++ y	345:26:11296:11298	487421	2	True				
ANR	487480	IncDec	++		487421	0					
ANR	487481	Identifier	y		487421	1					
ANR	487482	CompoundStatement		14:31:340:340	487421	3					
ANR	487483	ExpressionStatement	"YUV420toRGBLine ( Y + y * y_stride , U + ( y >> 1 ) * uv_stride , V + ( y >> 1 ) * uv_stride , width , pixdata + y * words_per_line )"	346:4:11307:11509	487421	0	True				
ANR	487484	CallExpression	"YUV420toRGBLine ( Y + y * y_stride , U + ( y >> 1 ) * uv_stride , V + ( y >> 1 ) * uv_stride , width , pixdata + y * words_per_line )"		487421	0					
ANR	487485	Callee	YUV420toRGBLine		487421	0					
ANR	487486	Identifier	YUV420toRGBLine		487421	0					
ANR	487487	ArgumentList	Y + y * y_stride		487421	1					
ANR	487488	Argument	Y + y * y_stride		487421	0					
ANR	487489	AdditiveExpression	Y + y * y_stride		487421	0		+			
ANR	487490	Identifier	Y		487421	0					
ANR	487491	MultiplicativeExpression	y * y_stride		487421	1		*			
ANR	487492	Identifier	y		487421	0					
ANR	487493	Identifier	y_stride		487421	1					
ANR	487494	Argument	U + ( y >> 1 ) * uv_stride		487421	1					
ANR	487495	AdditiveExpression	U + ( y >> 1 ) * uv_stride		487421	0		+			
ANR	487496	Identifier	U		487421	0					
ANR	487497	MultiplicativeExpression	( y >> 1 ) * uv_stride		487421	1		*			
ANR	487498	ShiftExpression	y >> 1		487421	0		>>			
ANR	487499	Identifier	y		487421	0					
ANR	487500	PrimaryExpression	1		487421	1					
ANR	487501	Identifier	uv_stride		487421	1					
ANR	487502	Argument	V + ( y >> 1 ) * uv_stride		487421	2					
ANR	487503	AdditiveExpression	V + ( y >> 1 ) * uv_stride		487421	0		+			
ANR	487504	Identifier	V		487421	0					
ANR	487505	MultiplicativeExpression	( y >> 1 ) * uv_stride		487421	1		*			
ANR	487506	ShiftExpression	y >> 1		487421	0		>>			
ANR	487507	Identifier	y		487421	0					
ANR	487508	PrimaryExpression	1		487421	1					
ANR	487509	Identifier	uv_stride		487421	1					
ANR	487510	Argument	width		487421	3					
ANR	487511	Identifier	width		487421	0					
ANR	487512	Argument	pixdata + y * words_per_line		487421	4					
ANR	487513	AdditiveExpression	pixdata + y * words_per_line		487421	0		+			
ANR	487514	Identifier	pixdata		487421	0					
ANR	487515	MultiplicativeExpression	y * words_per_line		487421	1		*			
ANR	487516	Identifier	y		487421	0					
ANR	487517	Identifier	words_per_line		487421	1					
ANR	487518	ReturnType	void		487421	1					
ANR	487519	Identifier	YUV420toRGBA		487421	2					
ANR	487520	ParameterList	"uint8 * Y , uint8 * U , uint8 * V , int words_per_line , int width , int height , uint32 * pixdata"		487421	3					
ANR	487521	Parameter	uint8 * Y	326:18:10762:10769	487421	0	True				
ANR	487522	ParameterType	uint8 *		487421	0					
ANR	487523	Identifier	Y		487421	1					
ANR	487524	Parameter	uint8 * U	327:18:10790:10797	487421	1	True				
ANR	487525	ParameterType	uint8 *		487421	0					
ANR	487526	Identifier	U		487421	1					
ANR	487527	Parameter	uint8 * V	328:18:10818:10825	487421	2	True				
ANR	487528	ParameterType	uint8 *		487421	0					
ANR	487529	Identifier	V		487421	1					
ANR	487530	Parameter	int words_per_line	329:18:10846:10863	487421	3	True				
ANR	487531	ParameterType	int		487421	0					
ANR	487532	Identifier	words_per_line		487421	1					
ANR	487533	Parameter	int width	330:18:10884:10892	487421	4	True				
ANR	487534	ParameterType	int		487421	0					
ANR	487535	Identifier	width		487421	1					
ANR	487536	Parameter	int height	331:18:10913:10922	487421	5	True				
ANR	487537	ParameterType	int		487421	0					
ANR	487538	Identifier	height		487421	1					
ANR	487539	Parameter	uint32 * pixdata	332:18:10943:10957	487421	6	True				
ANR	487540	ParameterType	uint32 *		487421	0					
ANR	487541	Identifier	pixdata		487421	1					
ANR	487542	CFGEntryNode	ENTRY		487421		True				
ANR	487543	CFGExitNode	EXIT		487421		True				
ANR	487544	Symbol	uv_stride		487421						
ANR	487545	Symbol	words_per_line		487421						
ANR	487546	Symbol	uv_width		487421						
ANR	487547	Symbol	y_width		487421						
ANR	487548	Symbol	y_stride		487421						
ANR	487549	Symbol	init_done		487421						
ANR	487550	Symbol	U		487421						
ANR	487551	Symbol	V		487421						
ANR	487552	Symbol	width		487421						
ANR	487553	Symbol	Y		487421						
ANR	487554	Symbol	pixdata		487421						
ANR	487555	Symbol	y		487421						
ANR	487556	Symbol	height		487421						
ANR	487557	Function	gd_YUV420toRGBA	354:0:11518:12300							
ANR	487558	FunctionDef	"gd_YUV420toRGBA (uint8 * Y , uint8 * U , uint8 * V , gdImagePtr im)"		487557	0					
ANR	487559	CompoundStatement		357:33:11638:12300	487557	0					
ANR	487560	IdentifierDeclStatement	int width = im -> sx ;	358:2:11642:11660	487557	0	True				
ANR	487561	IdentifierDecl	width = im -> sx		487557	0					
ANR	487562	IdentifierDeclType	int		487557	0					
ANR	487563	Identifier	width		487557	1					
ANR	487564	AssignmentExpression	width = im -> sx		487557	2		=			
ANR	487565	Identifier	width		487557	0					
ANR	487566	PtrMemberAccess	im -> sx		487557	1					
ANR	487567	Identifier	im		487557	0					
ANR	487568	Identifier	sx		487557	1					
ANR	487569	IdentifierDeclStatement	int height = im -> sy ;	359:2:11664:11683	487557	1	True				
ANR	487570	IdentifierDecl	height = im -> sy		487557	0					
ANR	487571	IdentifierDeclType	int		487557	0					
ANR	487572	Identifier	height		487557	1					
ANR	487573	AssignmentExpression	height = im -> sy		487557	2		=			
ANR	487574	Identifier	height		487557	0					
ANR	487575	PtrMemberAccess	im -> sy		487557	1					
ANR	487576	Identifier	im		487557	0					
ANR	487577	Identifier	sy		487557	1					
ANR	487578	IdentifierDeclStatement	int y_width = width ;	360:2:11687:11706	487557	2	True				
ANR	487579	IdentifierDecl	y_width = width		487557	0					
ANR	487580	IdentifierDeclType	int		487557	0					
ANR	487581	Identifier	y_width		487557	1					
ANR	487582	AssignmentExpression	y_width = width		487557	2		=			
ANR	487583	Identifier	width		487557	0					
ANR	487584	Identifier	width		487557	1					
ANR	487585	IdentifierDeclStatement	int y_stride = y_width ;	361:2:11710:11732	487557	3	True				
ANR	487586	IdentifierDecl	y_stride = y_width		487557	0					
ANR	487587	IdentifierDeclType	int		487557	0					
ANR	487588	Identifier	y_stride		487557	1					
ANR	487589	AssignmentExpression	y_stride = y_width		487557	2		=			
ANR	487590	Identifier	y_width		487557	0					
ANR	487591	Identifier	y_width		487557	1					
ANR	487592	IdentifierDeclStatement	int uv_width = ( ( y_width + 1 ) >> 1 ) ;	362:2:11736:11771	487557	4	True				
ANR	487593	IdentifierDecl	uv_width = ( ( y_width + 1 ) >> 1 )		487557	0					
ANR	487594	IdentifierDeclType	int		487557	0					
ANR	487595	Identifier	uv_width		487557	1					
ANR	487596	AssignmentExpression	uv_width = ( ( y_width + 1 ) >> 1 )		487557	2		=			
ANR	487597	Identifier	uv_width		487557	0					
ANR	487598	ShiftExpression	( y_width + 1 ) >> 1		487557	1		>>			
ANR	487599	AdditiveExpression	y_width + 1		487557	0		+			
ANR	487600	Identifier	y_width		487557	0					
ANR	487601	PrimaryExpression	1		487557	1					
ANR	487602	PrimaryExpression	1		487557	1					
ANR	487603	IdentifierDeclStatement	int uv_stride = uv_width ;	363:2:11775:11799	487557	5	True				
ANR	487604	IdentifierDecl	uv_stride = uv_width		487557	0					
ANR	487605	IdentifierDeclType	int		487557	0					
ANR	487606	Identifier	uv_stride		487557	1					
ANR	487607	AssignmentExpression	uv_stride = uv_width		487557	2		=			
ANR	487608	Identifier	uv_width		487557	0					
ANR	487609	Identifier	uv_width		487557	1					
ANR	487610	IdentifierDeclStatement	int y ;	364:2:11803:11808	487557	6	True				
ANR	487611	IdentifierDecl	y		487557	0					
ANR	487612	IdentifierDeclType	int		487557	0					
ANR	487613	Identifier	y		487557	1					
ANR	487614	IfStatement	if ( ! im -> trueColor )		487557	7					
ANR	487615	Condition	! im -> trueColor	367:6:11853:11866	487557	0	True				
ANR	487616	UnaryOperationExpression	! im -> trueColor		487557	0					
ANR	487617	UnaryOperator	!		487557	0					
ANR	487618	PtrMemberAccess	im -> trueColor		487557	1					
ANR	487619	Identifier	im		487557	0					
ANR	487620	Identifier	trueColor		487557	1					
ANR	487621	CompoundStatement		11:22:230:230	487557	1					
ANR	487622	ReturnStatement	return ;	368:3:11874:11880	487557	0	True				
ANR	487623	IfStatement	if ( ! init_done )		487557	8					
ANR	487624	Condition	! init_done	371:6:11893:11902	487557	0	True				
ANR	487625	UnaryOperationExpression	! init_done		487557	0					
ANR	487626	UnaryOperator	!		487557	0					
ANR	487627	Identifier	init_done		487557	1					
ANR	487628	ExpressionStatement	InitTables ( )	372:4:11909:11921	487557	1	True				
ANR	487629	CallExpression	InitTables ( )		487557	0					
ANR	487630	Callee	InitTables		487557	0					
ANR	487631	Identifier	InitTables		487557	0					
ANR	487632	ArgumentList			487557	1					
ANR	487633	ForStatement	for ( y = 0 ; y < height ; ++ y )		487557	9					
ANR	487634	ForInit	y = 0 ;	377:7:12076:12081	487557	0	True				
ANR	487635	AssignmentExpression	y = 0		487557	0		=			
ANR	487636	Identifier	y		487557	0					
ANR	487637	PrimaryExpression	0		487557	1					
ANR	487638	Condition	y < height	377:14:12083:12092	487557	1	True				
ANR	487639	RelationalExpression	y < height		487557	0		<			
ANR	487640	Identifier	y		487557	0					
ANR	487641	Identifier	height		487557	1					
ANR	487642	UnaryExpression	++ y	377:26:12095:12097	487557	2	True				
ANR	487643	IncDec	++		487557	0					
ANR	487644	Identifier	y		487557	1					
ANR	487645	CompoundStatement		21:31:461:461	487557	3					
ANR	487646	ExpressionStatement	"YUV420toRGBLine ( Y + y * y_stride , U + ( y >> 1 ) * uv_stride , V + ( y >> 1 ) * uv_stride , width , im -> tpixels [ y ] )"	378:4:12106:12294	487557	0	True				
ANR	487647	CallExpression	"YUV420toRGBLine ( Y + y * y_stride , U + ( y >> 1 ) * uv_stride , V + ( y >> 1 ) * uv_stride , width , im -> tpixels [ y ] )"		487557	0					
ANR	487648	Callee	YUV420toRGBLine		487557	0					
ANR	487649	Identifier	YUV420toRGBLine		487557	0					
ANR	487650	ArgumentList	Y + y * y_stride		487557	1					
ANR	487651	Argument	Y + y * y_stride		487557	0					
ANR	487652	AdditiveExpression	Y + y * y_stride		487557	0		+			
ANR	487653	Identifier	Y		487557	0					
ANR	487654	MultiplicativeExpression	y * y_stride		487557	1		*			
ANR	487655	Identifier	y		487557	0					
ANR	487656	Identifier	y_stride		487557	1					
ANR	487657	Argument	U + ( y >> 1 ) * uv_stride		487557	1					
ANR	487658	AdditiveExpression	U + ( y >> 1 ) * uv_stride		487557	0		+			
ANR	487659	Identifier	U		487557	0					
ANR	487660	MultiplicativeExpression	( y >> 1 ) * uv_stride		487557	1		*			
ANR	487661	ShiftExpression	y >> 1		487557	0		>>			
ANR	487662	Identifier	y		487557	0					
ANR	487663	PrimaryExpression	1		487557	1					
ANR	487664	Identifier	uv_stride		487557	1					
ANR	487665	Argument	V + ( y >> 1 ) * uv_stride		487557	2					
ANR	487666	AdditiveExpression	V + ( y >> 1 ) * uv_stride		487557	0		+			
ANR	487667	Identifier	V		487557	0					
ANR	487668	MultiplicativeExpression	( y >> 1 ) * uv_stride		487557	1		*			
ANR	487669	ShiftExpression	y >> 1		487557	0		>>			
ANR	487670	Identifier	y		487557	0					
ANR	487671	PrimaryExpression	1		487557	1					
ANR	487672	Identifier	uv_stride		487557	1					
ANR	487673	Argument	width		487557	3					
ANR	487674	Identifier	width		487557	0					
ANR	487675	Argument	im -> tpixels [ y ]		487557	4					
ANR	487676	ArrayIndexing	im -> tpixels [ y ]		487557	0					
ANR	487677	PtrMemberAccess	im -> tpixels		487557	0					
ANR	487678	Identifier	im		487557	0					
ANR	487679	Identifier	tpixels		487557	1					
ANR	487680	Identifier	y		487557	1					
ANR	487681	ReturnType	void		487557	1					
ANR	487682	Identifier	gd_YUV420toRGBA		487557	2					
ANR	487683	ParameterList	"uint8 * Y , uint8 * U , uint8 * V , gdImagePtr im"		487557	3					
ANR	487684	Parameter	uint8 * Y	354:21:11539:11546	487557	0	True				
ANR	487685	ParameterType	uint8 *		487557	0					
ANR	487686	Identifier	Y		487557	1					
ANR	487687	Parameter	uint8 * U	355:18:11567:11574	487557	1	True				
ANR	487688	ParameterType	uint8 *		487557	0					
ANR	487689	Identifier	U		487557	1					
ANR	487690	Parameter	uint8 * V	356:18:11595:11602	487557	2	True				
ANR	487691	ParameterType	uint8 *		487557	0					
ANR	487692	Identifier	V		487557	1					
ANR	487693	Parameter	gdImagePtr im	357:18:11623:11635	487557	3	True				
ANR	487694	ParameterType	gdImagePtr		487557	0					
ANR	487695	Identifier	im		487557	1					
ANR	487696	CFGEntryNode	ENTRY		487557		True				
ANR	487697	CFGExitNode	EXIT		487557		True				
ANR	487698	Symbol	uv_stride		487557						
ANR	487699	Symbol	* y		487557						
ANR	487700	Symbol	im		487557						
ANR	487701	Symbol	im -> tpixels		487557						
ANR	487702	Symbol	* im		487557						
ANR	487703	Symbol	uv_width		487557						
ANR	487704	Symbol	im -> sx		487557						
ANR	487705	Symbol	y_width		487557						
ANR	487706	Symbol	y_stride		487557						
ANR	487707	Symbol	init_done		487557						
ANR	487708	Symbol	im -> sy		487557						
ANR	487709	Symbol	* * im		487557						
ANR	487710	Symbol	U		487557						
ANR	487711	Symbol	V		487557						
ANR	487712	Symbol	width		487557						
ANR	487713	Symbol	Y		487557						
ANR	487714	Symbol	y		487557						
ANR	487715	Symbol	im -> trueColor		487557						
ANR	487716	Symbol	* im -> tpixels		487557						
ANR	487717	Symbol	height		487557						
ANR	487718	Function	VPXDecode	386:0:12303:14359							
ANR	487719	FunctionDef	"VPXDecode (const uint8 * data , int data_size , uint8 * * p_Y , uint8 * * p_U , uint8 * * p_V , int * p_width , int * p_height)"		487718	0					
ANR	487720	CompoundStatement		392:43:12601:14359	487718	0					
ANR	487721	IdentifierDeclStatement	vpx_codec_ctx_t dec ;	393:2:12605:12624	487718	0	True				
ANR	487722	IdentifierDecl	dec		487718	0					
ANR	487723	IdentifierDeclType	vpx_codec_ctx_t		487718	0					
ANR	487724	Identifier	dec		487718	1					
ANR	487725	IdentifierDeclStatement	vp8_postproc_cfg_t ppcfg ;	394:2:12628:12652	487718	1	True				
ANR	487726	IdentifierDecl	ppcfg		487718	0					
ANR	487727	IdentifierDeclType	vp8_postproc_cfg_t		487718	0					
ANR	487728	Identifier	ppcfg		487718	1					
ANR	487729	IdentifierDeclStatement	WebPResult result = webp_failure ;	395:2:12656:12688	487718	2	True				
ANR	487730	IdentifierDecl	result = webp_failure		487718	0					
ANR	487731	IdentifierDeclType	WebPResult		487718	0					
ANR	487732	Identifier	result		487718	1					
ANR	487733	AssignmentExpression	result = webp_failure		487718	2		=			
ANR	487734	Identifier	webp_failure		487718	0					
ANR	487735	Identifier	webp_failure		487718	1					
ANR	487736	IfStatement	if ( ! data || data_size <= 10 || ! p_Y || ! p_U || ! p_V || * p_Y != NULL || * p_U != NULL || * p_V != NULL )		487718	3					
ANR	487737	Condition	! data || data_size <= 10 || ! p_Y || ! p_U || ! p_V || * p_Y != NULL || * p_U != NULL || * p_V != NULL	397:6:12697:12798	487718	0	True				
ANR	487738	OrExpression	! data || data_size <= 10 || ! p_Y || ! p_U || ! p_V || * p_Y != NULL || * p_U != NULL || * p_V != NULL		487718	0		||			
ANR	487739	UnaryOperationExpression	! data		487718	0					
ANR	487740	UnaryOperator	!		487718	0					
ANR	487741	Identifier	data		487718	1					
ANR	487742	OrExpression	data_size <= 10 || ! p_Y || ! p_U || ! p_V || * p_Y != NULL || * p_U != NULL || * p_V != NULL		487718	1		||			
ANR	487743	RelationalExpression	data_size <= 10		487718	0		<=			
ANR	487744	Identifier	data_size		487718	0					
ANR	487745	PrimaryExpression	10		487718	1					
ANR	487746	OrExpression	! p_Y || ! p_U || ! p_V || * p_Y != NULL || * p_U != NULL || * p_V != NULL		487718	1		||			
ANR	487747	UnaryOperationExpression	! p_Y		487718	0					
ANR	487748	UnaryOperator	!		487718	0					
ANR	487749	Identifier	p_Y		487718	1					
ANR	487750	OrExpression	! p_U || ! p_V || * p_Y != NULL || * p_U != NULL || * p_V != NULL		487718	1		||			
ANR	487751	UnaryOperationExpression	! p_U		487718	0					
ANR	487752	UnaryOperator	!		487718	0					
ANR	487753	Identifier	p_U		487718	1					
ANR	487754	OrExpression	! p_V || * p_Y != NULL || * p_U != NULL || * p_V != NULL		487718	1		||			
ANR	487755	UnaryOperationExpression	! p_V		487718	0					
ANR	487756	UnaryOperator	!		487718	0					
ANR	487757	Identifier	p_V		487718	1					
ANR	487758	OrExpression	* p_Y != NULL || * p_U != NULL || * p_V != NULL		487718	1		||			
ANR	487759	EqualityExpression	* p_Y != NULL		487718	0		!=			
ANR	487760	UnaryOperationExpression	* p_Y		487718	0					
ANR	487761	UnaryOperator	*		487718	0					
ANR	487762	Identifier	p_Y		487718	1					
ANR	487763	Identifier	NULL		487718	1					
ANR	487764	OrExpression	* p_U != NULL || * p_V != NULL		487718	1		||			
ANR	487765	EqualityExpression	* p_U != NULL		487718	0		!=			
ANR	487766	UnaryOperationExpression	* p_U		487718	0					
ANR	487767	UnaryOperator	*		487718	0					
ANR	487768	Identifier	p_U		487718	1					
ANR	487769	Identifier	NULL		487718	1					
ANR	487770	EqualityExpression	* p_V != NULL		487718	1		!=			
ANR	487771	UnaryOperationExpression	* p_V		487718	0					
ANR	487772	UnaryOperator	*		487718	0					
ANR	487773	Identifier	p_V		487718	1					
ANR	487774	Identifier	NULL		487718	1					
ANR	487775	CompoundStatement		7:55:199:199	487718	1					
ANR	487776	ReturnStatement	return webp_failure ;	399:4:12807:12826	487718	0	True				
ANR	487777	Identifier	webp_failure		487718	0					
ANR	487778	IfStatement	"if ( vpx_codec_dec_init ( & dec , & vpx_codec_vp8_dx_algo , NULL , 0 ) != VPX_CODEC_OK )"		487718	4					
ANR	487779	Condition	"vpx_codec_dec_init ( & dec , & vpx_codec_vp8_dx_algo , NULL , 0 ) != VPX_CODEC_OK"	402:6:12839:12936	487718	0	True				
ANR	487780	EqualityExpression	"vpx_codec_dec_init ( & dec , & vpx_codec_vp8_dx_algo , NULL , 0 ) != VPX_CODEC_OK"		487718	0		!=			
ANR	487781	CallExpression	"vpx_codec_dec_init ( & dec , & vpx_codec_vp8_dx_algo , NULL , 0 )"		487718	0					
ANR	487782	Callee	vpx_codec_dec_init		487718	0					
ANR	487783	Identifier	vpx_codec_dec_init		487718	0					
ANR	487784	ArgumentList	& dec		487718	1					
ANR	487785	Argument	& dec		487718	0					
ANR	487786	UnaryOperationExpression	& dec		487718	0					
ANR	487787	UnaryOperator	&		487718	0					
ANR	487788	Identifier	dec		487718	1					
ANR	487789	Argument	& vpx_codec_vp8_dx_algo		487718	1					
ANR	487790	UnaryOperationExpression	& vpx_codec_vp8_dx_algo		487718	0					
ANR	487791	UnaryOperator	&		487718	0					
ANR	487792	Identifier	vpx_codec_vp8_dx_algo		487718	1					
ANR	487793	Argument	NULL		487718	2					
ANR	487794	Identifier	NULL		487718	0					
ANR	487795	Argument	0		487718	3					
ANR	487796	PrimaryExpression	0		487718	0					
ANR	487797	Identifier	VPX_CODEC_OK		487718	1					
ANR	487798	CompoundStatement		12:75:337:337	487718	1					
ANR	487799	ReturnStatement	return webp_failure ;	404:4:12945:12964	487718	0	True				
ANR	487800	Identifier	webp_failure		487718	0					
ANR	487801	ExpressionStatement	ppcfg . post_proc_flag = VP8_NOFILTERING	407:2:12973:13011	487718	5	True				
ANR	487802	AssignmentExpression	ppcfg . post_proc_flag = VP8_NOFILTERING		487718	0		=			
ANR	487803	MemberAccess	ppcfg . post_proc_flag		487718	0					
ANR	487804	Identifier	ppcfg		487718	0					
ANR	487805	Identifier	post_proc_flag		487718	1					
ANR	487806	Identifier	VP8_NOFILTERING		487718	1					
ANR	487807	ExpressionStatement	"vpx_codec_control ( & dec , VP8_SET_POSTPROC , & ppcfg )"	408:2:13015:13064	487718	6	True				
ANR	487808	CallExpression	"vpx_codec_control ( & dec , VP8_SET_POSTPROC , & ppcfg )"		487718	0					
ANR	487809	Callee	vpx_codec_control		487718	0					
ANR	487810	Identifier	vpx_codec_control		487718	0					
ANR	487811	ArgumentList	& dec		487718	1					
ANR	487812	Argument	& dec		487718	0					
ANR	487813	UnaryOperationExpression	& dec		487718	0					
ANR	487814	UnaryOperator	&		487718	0					
ANR	487815	Identifier	dec		487718	1					
ANR	487816	Argument	VP8_SET_POSTPROC		487718	1					
ANR	487817	Identifier	VP8_SET_POSTPROC		487718	0					
ANR	487818	Argument	& ppcfg		487718	2					
ANR	487819	UnaryOperationExpression	& ppcfg		487718	0					
ANR	487820	UnaryOperator	&		487718	0					
ANR	487821	Identifier	ppcfg		487718	1					
ANR	487822	IfStatement	"if ( vpx_codec_decode ( & dec , data , data_size , NULL , 0 ) == VPX_CODEC_OK )"		487718	7					
ANR	487823	Condition	"vpx_codec_decode ( & dec , data , data_size , NULL , 0 ) == VPX_CODEC_OK"	411:6:13074:13137	487718	0	True				
ANR	487824	EqualityExpression	"vpx_codec_decode ( & dec , data , data_size , NULL , 0 ) == VPX_CODEC_OK"		487718	0		==			
ANR	487825	CallExpression	"vpx_codec_decode ( & dec , data , data_size , NULL , 0 )"		487718	0					
ANR	487826	Callee	vpx_codec_decode		487718	0					
ANR	487827	Identifier	vpx_codec_decode		487718	0					
ANR	487828	ArgumentList	& dec		487718	1					
ANR	487829	Argument	& dec		487718	0					
ANR	487830	UnaryOperationExpression	& dec		487718	0					
ANR	487831	UnaryOperator	&		487718	0					
ANR	487832	Identifier	dec		487718	1					
ANR	487833	Argument	data		487718	1					
ANR	487834	Identifier	data		487718	0					
ANR	487835	Argument	data_size		487718	2					
ANR	487836	Identifier	data_size		487718	0					
ANR	487837	Argument	NULL		487718	3					
ANR	487838	Identifier	NULL		487718	0					
ANR	487839	Argument	0		487718	4					
ANR	487840	PrimaryExpression	0		487718	0					
ANR	487841	Identifier	VPX_CODEC_OK		487718	1					
ANR	487842	CompoundStatement		21:4:544:572	487718	1					
ANR	487843	IdentifierDeclStatement	vpx_codec_iter_t iter = NULL ;	412:4:13146:13174	487718	0	True				
ANR	487844	IdentifierDecl	iter = NULL		487718	0					
ANR	487845	IdentifierDeclType	vpx_codec_iter_t		487718	0					
ANR	487846	Identifier	iter		487718	1					
ANR	487847	AssignmentExpression	iter = NULL		487718	2		=			
ANR	487848	Identifier	NULL		487718	0					
ANR	487849	Identifier	NULL		487718	1					
ANR	487850	Statement	vpx_image_t	413:4:13180:13190	487718	1	True				
ANR	487851	Statement	*	413:15:13191:13191	487718	2	True				
ANR	487852	Statement	const	413:17:13193:13197	487718	3	True				
ANR	487853	ExpressionStatement	"img = vpx_codec_get_frame ( & dec , & iter )"	413:23:13199:13237	487718	4	True				
ANR	487854	AssignmentExpression	"img = vpx_codec_get_frame ( & dec , & iter )"		487718	0		=			
ANR	487855	Identifier	img		487718	0					
ANR	487856	CallExpression	"vpx_codec_get_frame ( & dec , & iter )"		487718	1					
ANR	487857	Callee	vpx_codec_get_frame		487718	0					
ANR	487858	Identifier	vpx_codec_get_frame		487718	0					
ANR	487859	ArgumentList	& dec		487718	1					
ANR	487860	Argument	& dec		487718	0					
ANR	487861	UnaryOperationExpression	& dec		487718	0					
ANR	487862	UnaryOperator	&		487718	0					
ANR	487863	Identifier	dec		487718	1					
ANR	487864	Argument	& iter		487718	1					
ANR	487865	UnaryOperationExpression	& iter		487718	0					
ANR	487866	UnaryOperator	&		487718	0					
ANR	487867	Identifier	iter		487718	1					
ANR	487868	IfStatement	if ( img )		487718	5					
ANR	487869	Condition	img	414:8:13247:13249	487718	0	True				
ANR	487870	Identifier	img		487718	0					
ANR	487871	CompoundStatement		30:6:867:872	487718	1					
ANR	487872	IdentifierDeclStatement	int y_width = img -> d_w ;	415:6:13260:13282	487718	0	True				
ANR	487873	IdentifierDecl	y_width = img -> d_w		487718	0					
ANR	487874	IdentifierDeclType	int		487718	0					
ANR	487875	Identifier	y_width		487718	1					
ANR	487876	AssignmentExpression	y_width = img -> d_w		487718	2		=			
ANR	487877	Identifier	y_width		487718	0					
ANR	487878	PtrMemberAccess	img -> d_w		487718	1					
ANR	487879	Identifier	img		487718	0					
ANR	487880	Identifier	d_w		487718	1					
ANR	487881	IdentifierDeclStatement	int y_height = img -> d_h ;	416:6:13290:13313	487718	1	True				
ANR	487882	IdentifierDecl	y_height = img -> d_h		487718	0					
ANR	487883	IdentifierDeclType	int		487718	0					
ANR	487884	Identifier	y_height		487718	1					
ANR	487885	AssignmentExpression	y_height = img -> d_h		487718	2		=			
ANR	487886	Identifier	y_height		487718	0					
ANR	487887	PtrMemberAccess	img -> d_h		487718	1					
ANR	487888	Identifier	img		487718	0					
ANR	487889	Identifier	d_h		487718	1					
ANR	487890	IdentifierDeclStatement	int y_stride = y_width ;	417:6:13321:13343	487718	2	True				
ANR	487891	IdentifierDecl	y_stride = y_width		487718	0					
ANR	487892	IdentifierDeclType	int		487718	0					
ANR	487893	Identifier	y_stride		487718	1					
ANR	487894	AssignmentExpression	y_stride = y_width		487718	2		=			
ANR	487895	Identifier	y_width		487718	0					
ANR	487896	Identifier	y_width		487718	1					
ANR	487897	IdentifierDeclStatement	int uv_width = ( y_width + 1 ) >> 1 ;	418:6:13351:13384	487718	3	True				
ANR	487898	IdentifierDecl	uv_width = ( y_width + 1 ) >> 1		487718	0					
ANR	487899	IdentifierDeclType	int		487718	0					
ANR	487900	Identifier	uv_width		487718	1					
ANR	487901	AssignmentExpression	uv_width = ( y_width + 1 ) >> 1		487718	2		=			
ANR	487902	Identifier	uv_width		487718	0					
ANR	487903	ShiftExpression	( y_width + 1 ) >> 1		487718	1		>>			
ANR	487904	AdditiveExpression	y_width + 1		487718	0		+			
ANR	487905	Identifier	y_width		487718	0					
ANR	487906	PrimaryExpression	1		487718	1					
ANR	487907	PrimaryExpression	1		487718	1					
ANR	487908	IdentifierDeclStatement	int uv_stride = uv_width ;	419:6:13392:13416	487718	4	True				
ANR	487909	IdentifierDecl	uv_stride = uv_width		487718	0					
ANR	487910	IdentifierDeclType	int		487718	0					
ANR	487911	Identifier	uv_stride		487718	1					
ANR	487912	AssignmentExpression	uv_stride = uv_width		487718	2		=			
ANR	487913	Identifier	uv_width		487718	0					
ANR	487914	Identifier	uv_width		487718	1					
ANR	487915	IdentifierDeclStatement	int uv_height = ( ( y_height + 1 ) >> 1 ) ;	420:6:13424:13461	487718	5	True				
ANR	487916	IdentifierDecl	uv_height = ( ( y_height + 1 ) >> 1 )		487718	0					
ANR	487917	IdentifierDeclType	int		487718	0					
ANR	487918	Identifier	uv_height		487718	1					
ANR	487919	AssignmentExpression	uv_height = ( ( y_height + 1 ) >> 1 )		487718	2		=			
ANR	487920	Identifier	uv_height		487718	0					
ANR	487921	ShiftExpression	( y_height + 1 ) >> 1		487718	1		>>			
ANR	487922	AdditiveExpression	y_height + 1		487718	0		+			
ANR	487923	Identifier	y_height		487718	0					
ANR	487924	PrimaryExpression	1		487718	1					
ANR	487925	PrimaryExpression	1		487718	1					
ANR	487926	IdentifierDeclStatement	int y ;	421:6:13469:13474	487718	6	True				
ANR	487927	IdentifierDecl	y		487718	0					
ANR	487928	IdentifierDeclType	int		487718	0					
ANR	487929	Identifier	y		487718	1					
ANR	487930	ExpressionStatement	* p_width = y_width	423:6:13483:13501	487718	7	True				
ANR	487931	AssignmentExpression	* p_width = y_width		487718	0		=			
ANR	487932	UnaryOperationExpression	* p_width		487718	0					
ANR	487933	UnaryOperator	*		487718	0					
ANR	487934	Identifier	p_width		487718	1					
ANR	487935	Identifier	y_width		487718	1					
ANR	487936	ExpressionStatement	* p_height = y_height	424:6:13509:13529	487718	8	True				
ANR	487937	AssignmentExpression	* p_height = y_height		487718	0		=			
ANR	487938	UnaryOperationExpression	* p_height		487718	0					
ANR	487939	UnaryOperator	*		487718	0					
ANR	487940	Identifier	p_height		487718	1					
ANR	487941	Identifier	y_height		487718	1					
ANR	487942	IfStatement	"if ( ( * p_Y = ( uint8 * ) ( calloc ( y_stride * y_height + 2 * uv_stride * uv_height , sizeof ( uint8 ) ) ) ) != NULL )"		487718	9					
ANR	487943	Condition	"( * p_Y = ( uint8 * ) ( calloc ( y_stride * y_height + 2 * uv_stride * uv_height , sizeof ( uint8 ) ) ) ) != NULL"	425:10:13541:13708	487718	0	True				
ANR	487944	EqualityExpression	"( * p_Y = ( uint8 * ) ( calloc ( y_stride * y_height + 2 * uv_stride * uv_height , sizeof ( uint8 ) ) ) ) != NULL"		487718	0		!=			
ANR	487945	AssignmentExpression	"* p_Y = ( uint8 * ) ( calloc ( y_stride * y_height + 2 * uv_stride * uv_height , sizeof ( uint8 ) ) )"		487718	0		=			
ANR	487946	UnaryOperationExpression	* p_Y		487718	0					
ANR	487947	UnaryOperator	*		487718	0					
ANR	487948	Identifier	p_Y		487718	1					
ANR	487949	CastExpression	"( uint8 * ) ( calloc ( y_stride * y_height + 2 * uv_stride * uv_height , sizeof ( uint8 ) ) )"		487718	1					
ANR	487950	CastTarget	uint8 *		487718	0					
ANR	487951	CallExpression	"calloc ( y_stride * y_height + 2 * uv_stride * uv_height , sizeof ( uint8 ) )"		487718	1					
ANR	487952	Callee	calloc		487718	0					
ANR	487953	Identifier	calloc		487718	0					
ANR	487954	ArgumentList	y_stride * y_height + 2 * uv_stride * uv_height		487718	1					
ANR	487955	Argument	y_stride * y_height + 2 * uv_stride * uv_height		487718	0					
ANR	487956	AdditiveExpression	y_stride * y_height + 2 * uv_stride * uv_height		487718	0		+			
ANR	487957	MultiplicativeExpression	y_stride * y_height		487718	0		*			
ANR	487958	Identifier	y_stride		487718	0					
ANR	487959	Identifier	y_height		487718	1					
ANR	487960	MultiplicativeExpression	2 * uv_stride * uv_height		487718	1		*			
ANR	487961	PrimaryExpression	2		487718	0					
ANR	487962	MultiplicativeExpression	uv_stride * uv_height		487718	1		*			
ANR	487963	Identifier	uv_stride		487718	0					
ANR	487964	Identifier	uv_height		487718	1					
ANR	487965	Argument	sizeof ( uint8 )		487718	1					
ANR	487966	SizeofExpression	sizeof ( uint8 )		487718	0					
ANR	487967	Sizeof	sizeof		487718	0					
ANR	487968	SizeofOperand	uint8		487718	1					
ANR	487969	Identifier	NULL		487718	1					
ANR	487970	CompoundStatement		36:61:1109:1109	487718	1					
ANR	487971	ExpressionStatement	* p_U = * p_Y + y_height * y_stride	428:8:13721:13754	487718	0	True				
ANR	487972	AssignmentExpression	* p_U = * p_Y + y_height * y_stride		487718	0		=			
ANR	487973	UnaryOperationExpression	* p_U		487718	0					
ANR	487974	UnaryOperator	*		487718	0					
ANR	487975	Identifier	p_U		487718	1					
ANR	487976	AdditiveExpression	* p_Y + y_height * y_stride		487718	1		+			
ANR	487977	UnaryOperationExpression	* p_Y		487718	0					
ANR	487978	UnaryOperator	*		487718	0					
ANR	487979	Identifier	p_Y		487718	1					
ANR	487980	MultiplicativeExpression	y_height * y_stride		487718	1		*			
ANR	487981	Identifier	y_height		487718	0					
ANR	487982	Identifier	y_stride		487718	1					
ANR	487983	ExpressionStatement	* p_V = * p_U + uv_height * uv_stride	429:8:13764:13799	487718	1	True				
ANR	487984	AssignmentExpression	* p_V = * p_U + uv_height * uv_stride		487718	0		=			
ANR	487985	UnaryOperationExpression	* p_V		487718	0					
ANR	487986	UnaryOperator	*		487718	0					
ANR	487987	Identifier	p_V		487718	1					
ANR	487988	AdditiveExpression	* p_U + uv_height * uv_stride		487718	1		+			
ANR	487989	UnaryOperationExpression	* p_U		487718	0					
ANR	487990	UnaryOperator	*		487718	0					
ANR	487991	Identifier	p_U		487718	1					
ANR	487992	MultiplicativeExpression	uv_height * uv_stride		487718	1		*			
ANR	487993	Identifier	uv_height		487718	0					
ANR	487994	Identifier	uv_stride		487718	1					
ANR	487995	ForStatement	for ( y = 0 ; y < y_height ; ++ y )		487718	2					
ANR	487996	ForInit	y = 0 ;	430:13:13814:13819	487718	0	True				
ANR	487997	AssignmentExpression	y = 0		487718	0		=			
ANR	487998	Identifier	y		487718	0					
ANR	487999	PrimaryExpression	0		487718	1					
ANR	488000	Condition	y < y_height	430:20:13821:13832	487718	1	True				
ANR	488001	RelationalExpression	y < y_height		487718	0		<			
ANR	488002	Identifier	y		487718	0					
ANR	488003	Identifier	y_height		487718	1					
ANR	488004	UnaryExpression	++ y	430:34:13835:13837	487718	2	True				
ANR	488005	IncDec	++		487718	0					
ANR	488006	Identifier	y		487718	1					
ANR	488007	CompoundStatement		39:39:1238:1238	487718	3					
ANR	488008	ExpressionStatement	"memcpy ( * p_Y + y * y_stride , img -> planes [ 0 ] + y * img -> stride [ 0 ] , y_width )"	431:10:13852:13959	487718	0	True				
ANR	488009	CallExpression	"memcpy ( * p_Y + y * y_stride , img -> planes [ 0 ] + y * img -> stride [ 0 ] , y_width )"		487718	0					
ANR	488010	Callee	memcpy		487718	0					
ANR	488011	Identifier	memcpy		487718	0					
ANR	488012	ArgumentList	* p_Y + y * y_stride		487718	1					
ANR	488013	Argument	* p_Y + y * y_stride		487718	0					
ANR	488014	AdditiveExpression	* p_Y + y * y_stride		487718	0		+			
ANR	488015	UnaryOperationExpression	* p_Y		487718	0					
ANR	488016	UnaryOperator	*		487718	0					
ANR	488017	Identifier	p_Y		487718	1					
ANR	488018	MultiplicativeExpression	y * y_stride		487718	1		*			
ANR	488019	Identifier	y		487718	0					
ANR	488020	Identifier	y_stride		487718	1					
ANR	488021	Argument	img -> planes [ 0 ] + y * img -> stride [ 0 ]		487718	1					
ANR	488022	AdditiveExpression	img -> planes [ 0 ] + y * img -> stride [ 0 ]		487718	0		+			
ANR	488023	ArrayIndexing	img -> planes [ 0 ]		487718	0					
ANR	488024	PtrMemberAccess	img -> planes		487718	0					
ANR	488025	Identifier	img		487718	0					
ANR	488026	Identifier	planes		487718	1					
ANR	488027	PrimaryExpression	0		487718	1					
ANR	488028	MultiplicativeExpression	y * img -> stride [ 0 ]		487718	1		*			
ANR	488029	Identifier	y		487718	0					
ANR	488030	ArrayIndexing	img -> stride [ 0 ]		487718	1					
ANR	488031	PtrMemberAccess	img -> stride		487718	0					
ANR	488032	Identifier	img		487718	0					
ANR	488033	Identifier	stride		487718	1					
ANR	488034	PrimaryExpression	0		487718	1					
ANR	488035	Argument	y_width		487718	2					
ANR	488036	Identifier	y_width		487718	0					
ANR	488037	ForStatement	for ( y = 0 ; y < uv_height ; ++ y )		487718	3					
ANR	488038	ForInit	y = 0 ;	435:13:13984:13989	487718	0	True				
ANR	488039	AssignmentExpression	y = 0		487718	0		=			
ANR	488040	Identifier	y		487718	0					
ANR	488041	PrimaryExpression	0		487718	1					
ANR	488042	Condition	y < uv_height	435:20:13991:14003	487718	1	True				
ANR	488043	RelationalExpression	y < uv_height		487718	0		<			
ANR	488044	Identifier	y		487718	0					
ANR	488045	Identifier	uv_height		487718	1					
ANR	488046	UnaryExpression	++ y	435:35:14006:14008	487718	2	True				
ANR	488047	IncDec	++		487718	0					
ANR	488048	Identifier	y		487718	1					
ANR	488049	CompoundStatement		44:40:1409:1409	487718	3					
ANR	488050	ExpressionStatement	"memcpy ( * p_U + y * uv_stride , img -> planes [ 1 ] + y * img -> stride [ 1 ] , uv_width )"	436:10:14023:14132	487718	0	True				
ANR	488051	CallExpression	"memcpy ( * p_U + y * uv_stride , img -> planes [ 1 ] + y * img -> stride [ 1 ] , uv_width )"		487718	0					
ANR	488052	Callee	memcpy		487718	0					
ANR	488053	Identifier	memcpy		487718	0					
ANR	488054	ArgumentList	* p_U + y * uv_stride		487718	1					
ANR	488055	Argument	* p_U + y * uv_stride		487718	0					
ANR	488056	AdditiveExpression	* p_U + y * uv_stride		487718	0		+			
ANR	488057	UnaryOperationExpression	* p_U		487718	0					
ANR	488058	UnaryOperator	*		487718	0					
ANR	488059	Identifier	p_U		487718	1					
ANR	488060	MultiplicativeExpression	y * uv_stride		487718	1		*			
ANR	488061	Identifier	y		487718	0					
ANR	488062	Identifier	uv_stride		487718	1					
ANR	488063	Argument	img -> planes [ 1 ] + y * img -> stride [ 1 ]		487718	1					
ANR	488064	AdditiveExpression	img -> planes [ 1 ] + y * img -> stride [ 1 ]		487718	0		+			
ANR	488065	ArrayIndexing	img -> planes [ 1 ]		487718	0					
ANR	488066	PtrMemberAccess	img -> planes		487718	0					
ANR	488067	Identifier	img		487718	0					
ANR	488068	Identifier	planes		487718	1					
ANR	488069	PrimaryExpression	1		487718	1					
ANR	488070	MultiplicativeExpression	y * img -> stride [ 1 ]		487718	1		*			
ANR	488071	Identifier	y		487718	0					
ANR	488072	ArrayIndexing	img -> stride [ 1 ]		487718	1					
ANR	488073	PtrMemberAccess	img -> stride		487718	0					
ANR	488074	Identifier	img		487718	0					
ANR	488075	Identifier	stride		487718	1					
ANR	488076	PrimaryExpression	1		487718	1					
ANR	488077	Argument	uv_width		487718	2					
ANR	488078	Identifier	uv_width		487718	0					
ANR	488079	ExpressionStatement	"memcpy ( * p_V + y * uv_stride , img -> planes [ 2 ] + y * img -> stride [ 2 ] , uv_width )"	439:10:14144:14253	487718	1	True				
ANR	488080	CallExpression	"memcpy ( * p_V + y * uv_stride , img -> planes [ 2 ] + y * img -> stride [ 2 ] , uv_width )"		487718	0					
ANR	488081	Callee	memcpy		487718	0					
ANR	488082	Identifier	memcpy		487718	0					
ANR	488083	ArgumentList	* p_V + y * uv_stride		487718	1					
ANR	488084	Argument	* p_V + y * uv_stride		487718	0					
ANR	488085	AdditiveExpression	* p_V + y * uv_stride		487718	0		+			
ANR	488086	UnaryOperationExpression	* p_V		487718	0					
ANR	488087	UnaryOperator	*		487718	0					
ANR	488088	Identifier	p_V		487718	1					
ANR	488089	MultiplicativeExpression	y * uv_stride		487718	1		*			
ANR	488090	Identifier	y		487718	0					
ANR	488091	Identifier	uv_stride		487718	1					
ANR	488092	Argument	img -> planes [ 2 ] + y * img -> stride [ 2 ]		487718	1					
ANR	488093	AdditiveExpression	img -> planes [ 2 ] + y * img -> stride [ 2 ]		487718	0		+			
ANR	488094	ArrayIndexing	img -> planes [ 2 ]		487718	0					
ANR	488095	PtrMemberAccess	img -> planes		487718	0					
ANR	488096	Identifier	img		487718	0					
ANR	488097	Identifier	planes		487718	1					
ANR	488098	PrimaryExpression	2		487718	1					
ANR	488099	MultiplicativeExpression	y * img -> stride [ 2 ]		487718	1		*			
ANR	488100	Identifier	y		487718	0					
ANR	488101	ArrayIndexing	img -> stride [ 2 ]		487718	1					
ANR	488102	PtrMemberAccess	img -> stride		487718	0					
ANR	488103	Identifier	img		487718	0					
ANR	488104	Identifier	stride		487718	1					
ANR	488105	PrimaryExpression	2		487718	1					
ANR	488106	Argument	uv_width		487718	2					
ANR	488107	Identifier	uv_width		487718	0					
ANR	488108	ExpressionStatement	result = webp_success	443:8:14273:14294	487718	4	True				
ANR	488109	AssignmentExpression	result = webp_success		487718	0		=			
ANR	488110	Identifier	result		487718	0					
ANR	488111	Identifier	webp_success		487718	1					
ANR	488112	ExpressionStatement	vpx_codec_destroy ( & dec )	447:2:14316:14339	487718	8	True				
ANR	488113	CallExpression	vpx_codec_destroy ( & dec )		487718	0					
ANR	488114	Callee	vpx_codec_destroy		487718	0					
ANR	488115	Identifier	vpx_codec_destroy		487718	0					
ANR	488116	ArgumentList	& dec		487718	1					
ANR	488117	Argument	& dec		487718	0					
ANR	488118	UnaryOperationExpression	& dec		487718	0					
ANR	488119	UnaryOperator	&		487718	0					
ANR	488120	Identifier	dec		487718	1					
ANR	488121	ReturnStatement	return result ;	449:2:14344:14357	487718	9	True				
ANR	488122	Identifier	result		487718	0					
ANR	488123	ReturnType	static WebPResult		487718	1					
ANR	488124	Identifier	VPXDecode		487718	2					
ANR	488125	ParameterList	"const uint8 * data , int data_size , uint8 * * p_Y , uint8 * * p_U , uint8 * * p_V , int * p_width , int * p_height"		487718	3					
ANR	488126	Parameter	const uint8 * data	386:28:12331:12347	487718	0	True				
ANR	488127	ParameterType	const uint8 *		487718	0					
ANR	488128	Identifier	data		487718	1					
ANR	488129	Parameter	int data_size	387:28:12378:12390	487718	1	True				
ANR	488130	ParameterType	int		487718	0					
ANR	488131	Identifier	data_size		487718	1					
ANR	488132	Parameter	uint8 * * p_Y	388:28:12421:12431	487718	2	True				
ANR	488133	ParameterType	uint8 * *		487718	0					
ANR	488134	Identifier	p_Y		487718	1					
ANR	488135	Parameter	uint8 * * p_U	389:28:12462:12472	487718	3	True				
ANR	488136	ParameterType	uint8 * *		487718	0					
ANR	488137	Identifier	p_U		487718	1					
ANR	488138	Parameter	uint8 * * p_V	390:28:12503:12513	487718	4	True				
ANR	488139	ParameterType	uint8 * *		487718	0					
ANR	488140	Identifier	p_V		487718	1					
ANR	488141	Parameter	int * p_width	391:28:12544:12555	487718	5	True				
ANR	488142	ParameterType	int *		487718	0					
ANR	488143	Identifier	p_width		487718	1					
ANR	488144	Parameter	int * p_height	392:28:12586:12598	487718	6	True				
ANR	488145	ParameterType	int *		487718	0					
ANR	488146	Identifier	p_height		487718	1					
ANR	488147	CFGEntryNode	ENTRY		487718		True				
ANR	488148	CFGExitNode	EXIT		487718		True				
ANR	488149	Symbol	webp_success		487718						
ANR	488150	Symbol	img		487718						
ANR	488151	Symbol	dec		487718						
ANR	488152	Symbol	data		487718						
ANR	488153	Symbol	p_V		487718						
ANR	488154	Symbol	p_U		487718						
ANR	488155	Symbol	* p_height		487718						
ANR	488156	Symbol	p_Y		487718						
ANR	488157	Symbol	uv_width		487718						
ANR	488158	Symbol	calloc		487718						
ANR	488159	Symbol	img -> stride		487718						
ANR	488160	Symbol	& ppcfg		487718						
ANR	488161	Symbol	img -> d_w		487718						
ANR	488162	Symbol	webp_failure		487718						
ANR	488163	Symbol	result		487718						
ANR	488164	Symbol	* img		487718						
ANR	488165	Symbol	vpx_codec_dec_init		487718						
ANR	488166	Symbol	* * img		487718						
ANR	488167	Symbol	vpx_codec_decode		487718						
ANR	488168	Symbol	& iter		487718						
ANR	488169	Symbol	data_size		487718						
ANR	488170	Symbol	vpx_codec_get_frame		487718						
ANR	488171	Symbol	img -> planes		487718						
ANR	488172	Symbol	uv_stride		487718						
ANR	488173	Symbol	p_width		487718						
ANR	488174	Symbol	NULL		487718						
ANR	488175	Symbol	ppcfg . post_proc_flag		487718						
ANR	488176	Symbol	iter		487718						
ANR	488177	Symbol	VP8_NOFILTERING		487718						
ANR	488178	Symbol	& vpx_codec_vp8_dx_algo		487718						
ANR	488179	Symbol	y_width		487718						
ANR	488180	Symbol	y_stride		487718						
ANR	488181	Symbol	* img -> stride		487718						
ANR	488182	Symbol	& dec		487718						
ANR	488183	Symbol	* p_U		487718						
ANR	488184	Symbol	* p_V		487718						
ANR	488185	Symbol	* img -> planes		487718						
ANR	488186	Symbol	* p_Y		487718						
ANR	488187	Symbol	* p_width		487718						
ANR	488188	Symbol	VP8_SET_POSTPROC		487718						
ANR	488189	Symbol	y		487718						
ANR	488190	Symbol	p_height		487718						
ANR	488191	Symbol	ppcfg		487718						
ANR	488192	Symbol	y_height		487718						
ANR	488193	Symbol	VPX_CODEC_OK		487718						
ANR	488194	Symbol	uv_height		487718						
ANR	488195	Symbol	img -> d_h		487718						
ANR	488196	Function	WebPDecode	452:0:14362:14836							
ANR	488197	FunctionDef	"WebPDecode (const uint8 * data , int data_size , uint8 * * p_Y , uint8 * * p_U , uint8 * * p_V , int * p_width , int * p_height)"		488196	0					
ANR	488198	CompoundStatement		458:37:14618:14836	488196	0					
ANR	488199	IdentifierDeclStatement	"const uint32 chunk_size = SkipRiffHeader ( & data , & data_size ) ;"	460:2:14623:14682	488196	0	True				
ANR	488200	IdentifierDecl	"chunk_size = SkipRiffHeader ( & data , & data_size )"		488196	0					
ANR	488201	IdentifierDeclType	const uint32		488196	0					
ANR	488202	Identifier	chunk_size		488196	1					
ANR	488203	AssignmentExpression	"chunk_size = SkipRiffHeader ( & data , & data_size )"		488196	2		=			
ANR	488204	Identifier	chunk_size		488196	0					
ANR	488205	CallExpression	"SkipRiffHeader ( & data , & data_size )"		488196	1					
ANR	488206	Callee	SkipRiffHeader		488196	0					
ANR	488207	Identifier	SkipRiffHeader		488196	0					
ANR	488208	ArgumentList	& data		488196	1					
ANR	488209	Argument	& data		488196	0					
ANR	488210	UnaryOperationExpression	& data		488196	0					
ANR	488211	UnaryOperator	&		488196	0					
ANR	488212	Identifier	data		488196	1					
ANR	488213	Argument	& data_size		488196	1					
ANR	488214	UnaryOperationExpression	& data_size		488196	0					
ANR	488215	UnaryOperator	&		488196	0					
ANR	488216	Identifier	data_size		488196	1					
ANR	488217	IfStatement	if ( ! chunk_size )		488196	1					
ANR	488218	Condition	! chunk_size	461:6:14690:14700	488196	0	True				
ANR	488219	UnaryOperationExpression	! chunk_size		488196	0					
ANR	488220	UnaryOperator	!		488196	0					
ANR	488221	Identifier	chunk_size		488196	1					
ANR	488222	CompoundStatement		4:19:84:84	488196	1					
ANR	488223	ReturnStatement	return webp_failure ;	462:4:14709:14728	488196	0	True				
ANR	488224	Identifier	webp_failure		488196	0					
ANR	488225	ReturnStatement	"return VPXDecode ( data , data_size , p_Y , p_U , p_V , p_width , p_height ) ;"	465:2:14767:14834	488196	2	True				
ANR	488226	CallExpression	"VPXDecode ( data , data_size , p_Y , p_U , p_V , p_width , p_height )"		488196	0					
ANR	488227	Callee	VPXDecode		488196	0					
ANR	488228	Identifier	VPXDecode		488196	0					
ANR	488229	ArgumentList	data		488196	1					
ANR	488230	Argument	data		488196	0					
ANR	488231	Identifier	data		488196	0					
ANR	488232	Argument	data_size		488196	1					
ANR	488233	Identifier	data_size		488196	0					
ANR	488234	Argument	p_Y		488196	2					
ANR	488235	Identifier	p_Y		488196	0					
ANR	488236	Argument	p_U		488196	3					
ANR	488237	Identifier	p_U		488196	0					
ANR	488238	Argument	p_V		488196	4					
ANR	488239	Identifier	p_V		488196	0					
ANR	488240	Argument	p_width		488196	5					
ANR	488241	Identifier	p_width		488196	0					
ANR	488242	Argument	p_height		488196	6					
ANR	488243	Identifier	p_height		488196	0					
ANR	488244	ReturnType	WebPResult		488196	1					
ANR	488245	Identifier	WebPDecode		488196	2					
ANR	488246	ParameterList	"const uint8 * data , int data_size , uint8 * * p_Y , uint8 * * p_U , uint8 * * p_V , int * p_width , int * p_height"		488196	3					
ANR	488247	Parameter	const uint8 * data	452:22:14384:14400	488196	0	True				
ANR	488248	ParameterType	const uint8 *		488196	0					
ANR	488249	Identifier	data		488196	1					
ANR	488250	Parameter	int data_size	453:22:14425:14437	488196	1	True				
ANR	488251	ParameterType	int		488196	0					
ANR	488252	Identifier	data_size		488196	1					
ANR	488253	Parameter	uint8 * * p_Y	454:22:14462:14472	488196	2	True				
ANR	488254	ParameterType	uint8 * *		488196	0					
ANR	488255	Identifier	p_Y		488196	1					
ANR	488256	Parameter	uint8 * * p_U	455:22:14497:14507	488196	3	True				
ANR	488257	ParameterType	uint8 * *		488196	0					
ANR	488258	Identifier	p_U		488196	1					
ANR	488259	Parameter	uint8 * * p_V	456:22:14532:14542	488196	4	True				
ANR	488260	ParameterType	uint8 * *		488196	0					
ANR	488261	Identifier	p_V		488196	1					
ANR	488262	Parameter	int * p_width	457:22:14567:14578	488196	5	True				
ANR	488263	ParameterType	int *		488196	0					
ANR	488264	Identifier	p_width		488196	1					
ANR	488265	Parameter	int * p_height	458:22:14603:14615	488196	6	True				
ANR	488266	ParameterType	int *		488196	0					
ANR	488267	Identifier	p_height		488196	1					
ANR	488268	CFGEntryNode	ENTRY		488196		True				
ANR	488269	CFGExitNode	EXIT		488196		True				
ANR	488270	Symbol	data_size		488196						
ANR	488271	Symbol	chunk_size		488196						
ANR	488272	Symbol	p_width		488196						
ANR	488273	Symbol	data		488196						
ANR	488274	Symbol	p_V		488196						
ANR	488275	Symbol	p_U		488196						
ANR	488276	Symbol	p_Y		488196						
ANR	488277	Symbol	& data_size		488196						
ANR	488278	Symbol	VPXDecode		488196						
ANR	488279	Symbol	& data		488196						
ANR	488280	Symbol	webp_failure		488196						
ANR	488281	Symbol	p_height		488196						
ANR	488282	Symbol	SkipRiffHeader		488196						
ANR	488283	Function	RGBALinepairToYUV420	480:0:15321:16921							
ANR	488284	FunctionDef	"RGBALinepairToYUV420 (uint32 * rgb_line1 , uint32 * rgb_line2 , int width , uint8 * Y_dst1 , uint8 * Y_dst2 , uint8 * u_dst , uint8 * v_dst)"		488283	0					
ANR	488285	CompoundStatement		486:47:15659:16921	488283	0					
ANR	488286	IdentifierDeclStatement	int x ;	487:2:15663:15668	488283	0	True				
ANR	488287	IdentifierDecl	x		488283	0					
ANR	488288	IdentifierDeclType	int		488283	0					
ANR	488289	Identifier	x		488283	1					
ANR	488290	ForStatement	for ( x = ( width >> 1 ) ; x > 0 ; -- x )		488283	1					
ANR	488291	ForInit	x = ( width >> 1 ) ;	488:7:15677:15693	488283	0	True				
ANR	488292	AssignmentExpression	x = ( width >> 1 )		488283	0		=			
ANR	488293	Identifier	x		488283	0					
ANR	488294	ShiftExpression	width >> 1		488283	1		>>			
ANR	488295	Identifier	width		488283	0					
ANR	488296	PrimaryExpression	1		488283	1					
ANR	488297	Condition	x > 0	488:25:15695:15699	488283	1	True				
ANR	488298	RelationalExpression	x > 0		488283	0		>			
ANR	488299	Identifier	x		488283	0					
ANR	488300	PrimaryExpression	0		488283	1					
ANR	488301	UnaryExpression	-- x	488:32:15702:15704	488283	2	True				
ANR	488302	IncDec	--		488283	0					
ANR	488303	Identifier	x		488283	1					
ANR	488304	CompoundStatement		10:4:319:446	488283	3					
ANR	488305	IdentifierDeclStatement	const int sum_r = GetRed ( rgb_line1 + 0 ) + GetRed ( rgb_line1 + 1 ) + GetRed ( rgb_line2 + 0 ) + GetRed ( rgb_line2 + 1 ) ;	489:4:15713:15836	488283	0	True				
ANR	488306	IdentifierDecl	sum_r = GetRed ( rgb_line1 + 0 ) + GetRed ( rgb_line1 + 1 ) + GetRed ( rgb_line2 + 0 ) + GetRed ( rgb_line2 + 1 )		488283	0					
ANR	488307	IdentifierDeclType	const int		488283	0					
ANR	488308	Identifier	sum_r		488283	1					
ANR	488309	AssignmentExpression	sum_r = GetRed ( rgb_line1 + 0 ) + GetRed ( rgb_line1 + 1 ) + GetRed ( rgb_line2 + 0 ) + GetRed ( rgb_line2 + 1 )		488283	2		=			
ANR	488310	Identifier	sum_r		488283	0					
ANR	488311	AdditiveExpression	GetRed ( rgb_line1 + 0 ) + GetRed ( rgb_line1 + 1 ) + GetRed ( rgb_line2 + 0 ) + GetRed ( rgb_line2 + 1 )		488283	1		+			
ANR	488312	CallExpression	GetRed ( rgb_line1 + 0 )		488283	0					
ANR	488313	Callee	GetRed		488283	0					
ANR	488314	Identifier	GetRed		488283	0					
ANR	488315	ArgumentList	rgb_line1 + 0		488283	1					
ANR	488316	Argument	rgb_line1 + 0		488283	0					
ANR	488317	AdditiveExpression	rgb_line1 + 0		488283	0		+			
ANR	488318	Identifier	rgb_line1		488283	0					
ANR	488319	PrimaryExpression	0		488283	1					
ANR	488320	AdditiveExpression	GetRed ( rgb_line1 + 1 ) + GetRed ( rgb_line2 + 0 ) + GetRed ( rgb_line2 + 1 )		488283	1		+			
ANR	488321	CallExpression	GetRed ( rgb_line1 + 1 )		488283	0					
ANR	488322	Callee	GetRed		488283	0					
ANR	488323	Identifier	GetRed		488283	0					
ANR	488324	ArgumentList	rgb_line1 + 1		488283	1					
ANR	488325	Argument	rgb_line1 + 1		488283	0					
ANR	488326	AdditiveExpression	rgb_line1 + 1		488283	0		+			
ANR	488327	Identifier	rgb_line1		488283	0					
ANR	488328	PrimaryExpression	1		488283	1					
ANR	488329	AdditiveExpression	GetRed ( rgb_line2 + 0 ) + GetRed ( rgb_line2 + 1 )		488283	1		+			
ANR	488330	CallExpression	GetRed ( rgb_line2 + 0 )		488283	0					
ANR	488331	Callee	GetRed		488283	0					
ANR	488332	Identifier	GetRed		488283	0					
ANR	488333	ArgumentList	rgb_line2 + 0		488283	1					
ANR	488334	Argument	rgb_line2 + 0		488283	0					
ANR	488335	AdditiveExpression	rgb_line2 + 0		488283	0		+			
ANR	488336	Identifier	rgb_line2		488283	0					
ANR	488337	PrimaryExpression	0		488283	1					
ANR	488338	CallExpression	GetRed ( rgb_line2 + 1 )		488283	1					
ANR	488339	Callee	GetRed		488283	0					
ANR	488340	Identifier	GetRed		488283	0					
ANR	488341	ArgumentList	rgb_line2 + 1		488283	1					
ANR	488342	Argument	rgb_line2 + 1		488283	0					
ANR	488343	AdditiveExpression	rgb_line2 + 1		488283	0		+			
ANR	488344	Identifier	rgb_line2		488283	0					
ANR	488345	PrimaryExpression	1		488283	1					
ANR	488346	IdentifierDeclStatement	const int sum_g = GetGreen ( rgb_line1 + 0 ) + GetGreen ( rgb_line1 + 1 ) + GetGreen ( rgb_line2 + 0 ) + GetGreen ( rgb_line2 + 1 ) ;	492:4:15842:15973	488283	1	True				
ANR	488347	IdentifierDecl	sum_g = GetGreen ( rgb_line1 + 0 ) + GetGreen ( rgb_line1 + 1 ) + GetGreen ( rgb_line2 + 0 ) + GetGreen ( rgb_line2 + 1 )		488283	0					
ANR	488348	IdentifierDeclType	const int		488283	0					
ANR	488349	Identifier	sum_g		488283	1					
ANR	488350	AssignmentExpression	sum_g = GetGreen ( rgb_line1 + 0 ) + GetGreen ( rgb_line1 + 1 ) + GetGreen ( rgb_line2 + 0 ) + GetGreen ( rgb_line2 + 1 )		488283	2		=			
ANR	488351	Identifier	sum_g		488283	0					
ANR	488352	AdditiveExpression	GetGreen ( rgb_line1 + 0 ) + GetGreen ( rgb_line1 + 1 ) + GetGreen ( rgb_line2 + 0 ) + GetGreen ( rgb_line2 + 1 )		488283	1		+			
ANR	488353	CallExpression	GetGreen ( rgb_line1 + 0 )		488283	0					
ANR	488354	Callee	GetGreen		488283	0					
ANR	488355	Identifier	GetGreen		488283	0					
ANR	488356	ArgumentList	rgb_line1 + 0		488283	1					
ANR	488357	Argument	rgb_line1 + 0		488283	0					
ANR	488358	AdditiveExpression	rgb_line1 + 0		488283	0		+			
ANR	488359	Identifier	rgb_line1		488283	0					
ANR	488360	PrimaryExpression	0		488283	1					
ANR	488361	AdditiveExpression	GetGreen ( rgb_line1 + 1 ) + GetGreen ( rgb_line2 + 0 ) + GetGreen ( rgb_line2 + 1 )		488283	1		+			
ANR	488362	CallExpression	GetGreen ( rgb_line1 + 1 )		488283	0					
ANR	488363	Callee	GetGreen		488283	0					
ANR	488364	Identifier	GetGreen		488283	0					
ANR	488365	ArgumentList	rgb_line1 + 1		488283	1					
ANR	488366	Argument	rgb_line1 + 1		488283	0					
ANR	488367	AdditiveExpression	rgb_line1 + 1		488283	0		+			
ANR	488368	Identifier	rgb_line1		488283	0					
ANR	488369	PrimaryExpression	1		488283	1					
ANR	488370	AdditiveExpression	GetGreen ( rgb_line2 + 0 ) + GetGreen ( rgb_line2 + 1 )		488283	1		+			
ANR	488371	CallExpression	GetGreen ( rgb_line2 + 0 )		488283	0					
ANR	488372	Callee	GetGreen		488283	0					
ANR	488373	Identifier	GetGreen		488283	0					
ANR	488374	ArgumentList	rgb_line2 + 0		488283	1					
ANR	488375	Argument	rgb_line2 + 0		488283	0					
ANR	488376	AdditiveExpression	rgb_line2 + 0		488283	0		+			
ANR	488377	Identifier	rgb_line2		488283	0					
ANR	488378	PrimaryExpression	0		488283	1					
ANR	488379	CallExpression	GetGreen ( rgb_line2 + 1 )		488283	1					
ANR	488380	Callee	GetGreen		488283	0					
ANR	488381	Identifier	GetGreen		488283	0					
ANR	488382	ArgumentList	rgb_line2 + 1		488283	1					
ANR	488383	Argument	rgb_line2 + 1		488283	0					
ANR	488384	AdditiveExpression	rgb_line2 + 1		488283	0		+			
ANR	488385	Identifier	rgb_line2		488283	0					
ANR	488386	PrimaryExpression	1		488283	1					
ANR	488387	IdentifierDeclStatement	const int sum_b = GetBlue ( rgb_line1 + 0 ) + GetBlue ( rgb_line1 + 1 ) + GetBlue ( rgb_line2 + 0 ) + GetBlue ( rgb_line2 + 1 ) ;	495:4:15979:16106	488283	2	True				
ANR	488388	IdentifierDecl	sum_b = GetBlue ( rgb_line1 + 0 ) + GetBlue ( rgb_line1 + 1 ) + GetBlue ( rgb_line2 + 0 ) + GetBlue ( rgb_line2 + 1 )		488283	0					
ANR	488389	IdentifierDeclType	const int		488283	0					
ANR	488390	Identifier	sum_b		488283	1					
ANR	488391	AssignmentExpression	sum_b = GetBlue ( rgb_line1 + 0 ) + GetBlue ( rgb_line1 + 1 ) + GetBlue ( rgb_line2 + 0 ) + GetBlue ( rgb_line2 + 1 )		488283	2		=			
ANR	488392	Identifier	sum_b		488283	0					
ANR	488393	AdditiveExpression	GetBlue ( rgb_line1 + 0 ) + GetBlue ( rgb_line1 + 1 ) + GetBlue ( rgb_line2 + 0 ) + GetBlue ( rgb_line2 + 1 )		488283	1		+			
ANR	488394	CallExpression	GetBlue ( rgb_line1 + 0 )		488283	0					
ANR	488395	Callee	GetBlue		488283	0					
ANR	488396	Identifier	GetBlue		488283	0					
ANR	488397	ArgumentList	rgb_line1 + 0		488283	1					
ANR	488398	Argument	rgb_line1 + 0		488283	0					
ANR	488399	AdditiveExpression	rgb_line1 + 0		488283	0		+			
ANR	488400	Identifier	rgb_line1		488283	0					
ANR	488401	PrimaryExpression	0		488283	1					
ANR	488402	AdditiveExpression	GetBlue ( rgb_line1 + 1 ) + GetBlue ( rgb_line2 + 0 ) + GetBlue ( rgb_line2 + 1 )		488283	1		+			
ANR	488403	CallExpression	GetBlue ( rgb_line1 + 1 )		488283	0					
ANR	488404	Callee	GetBlue		488283	0					
ANR	488405	Identifier	GetBlue		488283	0					
ANR	488406	ArgumentList	rgb_line1 + 1		488283	1					
ANR	488407	Argument	rgb_line1 + 1		488283	0					
ANR	488408	AdditiveExpression	rgb_line1 + 1		488283	0		+			
ANR	488409	Identifier	rgb_line1		488283	0					
ANR	488410	PrimaryExpression	1		488283	1					
ANR	488411	AdditiveExpression	GetBlue ( rgb_line2 + 0 ) + GetBlue ( rgb_line2 + 1 )		488283	1		+			
ANR	488412	CallExpression	GetBlue ( rgb_line2 + 0 )		488283	0					
ANR	488413	Callee	GetBlue		488283	0					
ANR	488414	Identifier	GetBlue		488283	0					
ANR	488415	ArgumentList	rgb_line2 + 0		488283	1					
ANR	488416	Argument	rgb_line2 + 0		488283	0					
ANR	488417	AdditiveExpression	rgb_line2 + 0		488283	0		+			
ANR	488418	Identifier	rgb_line2		488283	0					
ANR	488419	PrimaryExpression	0		488283	1					
ANR	488420	CallExpression	GetBlue ( rgb_line2 + 1 )		488283	1					
ANR	488421	Callee	GetBlue		488283	0					
ANR	488422	Identifier	GetBlue		488283	0					
ANR	488423	ArgumentList	rgb_line2 + 1		488283	1					
ANR	488424	Argument	rgb_line2 + 1		488283	0					
ANR	488425	AdditiveExpression	rgb_line2 + 1		488283	0		+			
ANR	488426	Identifier	rgb_line2		488283	0					
ANR	488427	PrimaryExpression	1		488283	1					
ANR	488428	ExpressionStatement	Y_dst1 [ 0 ] = GetLumaYfromPtr ( rgb_line1 + 0 )	499:4:16113:16155	488283	3	True				
ANR	488429	AssignmentExpression	Y_dst1 [ 0 ] = GetLumaYfromPtr ( rgb_line1 + 0 )		488283	0		=			
ANR	488430	ArrayIndexing	Y_dst1 [ 0 ]		488283	0					
ANR	488431	Identifier	Y_dst1		488283	0					
ANR	488432	PrimaryExpression	0		488283	1					
ANR	488433	CallExpression	GetLumaYfromPtr ( rgb_line1 + 0 )		488283	1					
ANR	488434	Callee	GetLumaYfromPtr		488283	0					
ANR	488435	Identifier	GetLumaYfromPtr		488283	0					
ANR	488436	ArgumentList	rgb_line1 + 0		488283	1					
ANR	488437	Argument	rgb_line1 + 0		488283	0					
ANR	488438	AdditiveExpression	rgb_line1 + 0		488283	0		+			
ANR	488439	Identifier	rgb_line1		488283	0					
ANR	488440	PrimaryExpression	0		488283	1					
ANR	488441	ExpressionStatement	Y_dst1 [ 1 ] = GetLumaYfromPtr ( rgb_line1 + 1 )	500:4:16161:16203	488283	4	True				
ANR	488442	AssignmentExpression	Y_dst1 [ 1 ] = GetLumaYfromPtr ( rgb_line1 + 1 )		488283	0		=			
ANR	488443	ArrayIndexing	Y_dst1 [ 1 ]		488283	0					
ANR	488444	Identifier	Y_dst1		488283	0					
ANR	488445	PrimaryExpression	1		488283	1					
ANR	488446	CallExpression	GetLumaYfromPtr ( rgb_line1 + 1 )		488283	1					
ANR	488447	Callee	GetLumaYfromPtr		488283	0					
ANR	488448	Identifier	GetLumaYfromPtr		488283	0					
ANR	488449	ArgumentList	rgb_line1 + 1		488283	1					
ANR	488450	Argument	rgb_line1 + 1		488283	0					
ANR	488451	AdditiveExpression	rgb_line1 + 1		488283	0		+			
ANR	488452	Identifier	rgb_line1		488283	0					
ANR	488453	PrimaryExpression	1		488283	1					
ANR	488454	ExpressionStatement	Y_dst2 [ 0 ] = GetLumaYfromPtr ( rgb_line2 + 0 )	501:4:16209:16251	488283	5	True				
ANR	488455	AssignmentExpression	Y_dst2 [ 0 ] = GetLumaYfromPtr ( rgb_line2 + 0 )		488283	0		=			
ANR	488456	ArrayIndexing	Y_dst2 [ 0 ]		488283	0					
ANR	488457	Identifier	Y_dst2		488283	0					
ANR	488458	PrimaryExpression	0		488283	1					
ANR	488459	CallExpression	GetLumaYfromPtr ( rgb_line2 + 0 )		488283	1					
ANR	488460	Callee	GetLumaYfromPtr		488283	0					
ANR	488461	Identifier	GetLumaYfromPtr		488283	0					
ANR	488462	ArgumentList	rgb_line2 + 0		488283	1					
ANR	488463	Argument	rgb_line2 + 0		488283	0					
ANR	488464	AdditiveExpression	rgb_line2 + 0		488283	0		+			
ANR	488465	Identifier	rgb_line2		488283	0					
ANR	488466	PrimaryExpression	0		488283	1					
ANR	488467	ExpressionStatement	Y_dst2 [ 1 ] = GetLumaYfromPtr ( rgb_line2 + 1 )	502:4:16257:16299	488283	6	True				
ANR	488468	AssignmentExpression	Y_dst2 [ 1 ] = GetLumaYfromPtr ( rgb_line2 + 1 )		488283	0		=			
ANR	488469	ArrayIndexing	Y_dst2 [ 1 ]		488283	0					
ANR	488470	Identifier	Y_dst2		488283	0					
ANR	488471	PrimaryExpression	1		488283	1					
ANR	488472	CallExpression	GetLumaYfromPtr ( rgb_line2 + 1 )		488283	1					
ANR	488473	Callee	GetLumaYfromPtr		488283	0					
ANR	488474	Identifier	GetLumaYfromPtr		488283	0					
ANR	488475	ArgumentList	rgb_line2 + 1		488283	1					
ANR	488476	Argument	rgb_line2 + 1		488283	0					
ANR	488477	AdditiveExpression	rgb_line2 + 1		488283	0		+			
ANR	488478	Identifier	rgb_line2		488283	0					
ANR	488479	PrimaryExpression	1		488283	1					
ANR	488480	ExpressionStatement	"* u_dst ++ = GetChromaU ( sum_r , sum_g , sum_b )"	504:4:16306:16348	488283	7	True				
ANR	488481	AssignmentExpression	"* u_dst ++ = GetChromaU ( sum_r , sum_g , sum_b )"		488283	0		=			
ANR	488482	UnaryOperationExpression	* u_dst ++		488283	0					
ANR	488483	UnaryOperator	*		488283	0					
ANR	488484	PostIncDecOperationExpression	u_dst ++		488283	1					
ANR	488485	Identifier	u_dst		488283	0					
ANR	488486	IncDec	++		488283	1					
ANR	488487	CallExpression	"GetChromaU ( sum_r , sum_g , sum_b )"		488283	1					
ANR	488488	Callee	GetChromaU		488283	0					
ANR	488489	Identifier	GetChromaU		488283	0					
ANR	488490	ArgumentList	sum_r		488283	1					
ANR	488491	Argument	sum_r		488283	0					
ANR	488492	Identifier	sum_r		488283	0					
ANR	488493	Argument	sum_g		488283	1					
ANR	488494	Identifier	sum_g		488283	0					
ANR	488495	Argument	sum_b		488283	2					
ANR	488496	Identifier	sum_b		488283	0					
ANR	488497	ExpressionStatement	"* v_dst ++ = GetChromaV ( sum_r , sum_g , sum_b )"	505:4:16354:16396	488283	8	True				
ANR	488498	AssignmentExpression	"* v_dst ++ = GetChromaV ( sum_r , sum_g , sum_b )"		488283	0		=			
ANR	488499	UnaryOperationExpression	* v_dst ++		488283	0					
ANR	488500	UnaryOperator	*		488283	0					
ANR	488501	PostIncDecOperationExpression	v_dst ++		488283	1					
ANR	488502	Identifier	v_dst		488283	0					
ANR	488503	IncDec	++		488283	1					
ANR	488504	CallExpression	"GetChromaV ( sum_r , sum_g , sum_b )"		488283	1					
ANR	488505	Callee	GetChromaV		488283	0					
ANR	488506	Identifier	GetChromaV		488283	0					
ANR	488507	ArgumentList	sum_r		488283	1					
ANR	488508	Argument	sum_r		488283	0					
ANR	488509	Identifier	sum_r		488283	0					
ANR	488510	Argument	sum_g		488283	1					
ANR	488511	Identifier	sum_g		488283	0					
ANR	488512	Argument	sum_b		488283	2					
ANR	488513	Identifier	sum_b		488283	0					
ANR	488514	ExpressionStatement	rgb_line1 += 2	507:4:16403:16417	488283	9	True				
ANR	488515	AssignmentExpression	rgb_line1 += 2		488283	0		+=			
ANR	488516	Identifier	rgb_line1		488283	0					
ANR	488517	PrimaryExpression	2		488283	1					
ANR	488518	ExpressionStatement	rgb_line2 += 2	508:4:16423:16437	488283	10	True				
ANR	488519	AssignmentExpression	rgb_line2 += 2		488283	0		+=			
ANR	488520	Identifier	rgb_line2		488283	0					
ANR	488521	PrimaryExpression	2		488283	1					
ANR	488522	ExpressionStatement	Y_dst1 += 2	509:4:16443:16454	488283	11	True				
ANR	488523	AssignmentExpression	Y_dst1 += 2		488283	0		+=			
ANR	488524	Identifier	Y_dst1		488283	0					
ANR	488525	PrimaryExpression	2		488283	1					
ANR	488526	ExpressionStatement	Y_dst2 += 2	510:4:16460:16471	488283	12	True				
ANR	488527	AssignmentExpression	Y_dst2 += 2		488283	0		+=			
ANR	488528	Identifier	Y_dst2		488283	0					
ANR	488529	PrimaryExpression	2		488283	1					
ANR	488530	IfStatement	if ( width & 1 )		488283	2					
ANR	488531	Condition	width & 1	513:6:16484:16492	488283	0	True				
ANR	488532	BitAndExpression	width & 1		488283	0		&			
ANR	488533	Identifier	width		488283	0					
ANR	488534	PrimaryExpression	1		488283	1					
ANR	488535	CompoundStatement		31:4:993:1050	488283	1					
ANR	488536	IdentifierDeclStatement	const int sum_r = GetRed ( rgb_line1 ) + GetRed ( rgb_line2 ) ;	514:4:16527:16582	488283	0	True				
ANR	488537	IdentifierDecl	sum_r = GetRed ( rgb_line1 ) + GetRed ( rgb_line2 )		488283	0					
ANR	488538	IdentifierDeclType	const int		488283	0					
ANR	488539	Identifier	sum_r		488283	1					
ANR	488540	AssignmentExpression	sum_r = GetRed ( rgb_line1 ) + GetRed ( rgb_line2 )		488283	2		=			
ANR	488541	Identifier	sum_r		488283	0					
ANR	488542	AdditiveExpression	GetRed ( rgb_line1 ) + GetRed ( rgb_line2 )		488283	1		+			
ANR	488543	CallExpression	GetRed ( rgb_line1 )		488283	0					
ANR	488544	Callee	GetRed		488283	0					
ANR	488545	Identifier	GetRed		488283	0					
ANR	488546	ArgumentList	rgb_line1		488283	1					
ANR	488547	Argument	rgb_line1		488283	0					
ANR	488548	Identifier	rgb_line1		488283	0					
ANR	488549	CallExpression	GetRed ( rgb_line2 )		488283	1					
ANR	488550	Callee	GetRed		488283	0					
ANR	488551	Identifier	GetRed		488283	0					
ANR	488552	ArgumentList	rgb_line2		488283	1					
ANR	488553	Argument	rgb_line2		488283	0					
ANR	488554	Identifier	rgb_line2		488283	0					
ANR	488555	IdentifierDeclStatement	const int sum_g = GetGreen ( rgb_line1 ) + GetGreen ( rgb_line2 ) ;	515:4:16588:16647	488283	1	True				
ANR	488556	IdentifierDecl	sum_g = GetGreen ( rgb_line1 ) + GetGreen ( rgb_line2 )		488283	0					
ANR	488557	IdentifierDeclType	const int		488283	0					
ANR	488558	Identifier	sum_g		488283	1					
ANR	488559	AssignmentExpression	sum_g = GetGreen ( rgb_line1 ) + GetGreen ( rgb_line2 )		488283	2		=			
ANR	488560	Identifier	sum_g		488283	0					
ANR	488561	AdditiveExpression	GetGreen ( rgb_line1 ) + GetGreen ( rgb_line2 )		488283	1		+			
ANR	488562	CallExpression	GetGreen ( rgb_line1 )		488283	0					
ANR	488563	Callee	GetGreen		488283	0					
ANR	488564	Identifier	GetGreen		488283	0					
ANR	488565	ArgumentList	rgb_line1		488283	1					
ANR	488566	Argument	rgb_line1		488283	0					
ANR	488567	Identifier	rgb_line1		488283	0					
ANR	488568	CallExpression	GetGreen ( rgb_line2 )		488283	1					
ANR	488569	Callee	GetGreen		488283	0					
ANR	488570	Identifier	GetGreen		488283	0					
ANR	488571	ArgumentList	rgb_line2		488283	1					
ANR	488572	Argument	rgb_line2		488283	0					
ANR	488573	Identifier	rgb_line2		488283	0					
ANR	488574	IdentifierDeclStatement	const int sum_b = GetBlue ( rgb_line1 ) + GetBlue ( rgb_line2 ) ;	516:4:16653:16710	488283	2	True				
ANR	488575	IdentifierDecl	sum_b = GetBlue ( rgb_line1 ) + GetBlue ( rgb_line2 )		488283	0					
ANR	488576	IdentifierDeclType	const int		488283	0					
ANR	488577	Identifier	sum_b		488283	1					
ANR	488578	AssignmentExpression	sum_b = GetBlue ( rgb_line1 ) + GetBlue ( rgb_line2 )		488283	2		=			
ANR	488579	Identifier	sum_b		488283	0					
ANR	488580	AdditiveExpression	GetBlue ( rgb_line1 ) + GetBlue ( rgb_line2 )		488283	1		+			
ANR	488581	CallExpression	GetBlue ( rgb_line1 )		488283	0					
ANR	488582	Callee	GetBlue		488283	0					
ANR	488583	Identifier	GetBlue		488283	0					
ANR	488584	ArgumentList	rgb_line1		488283	1					
ANR	488585	Argument	rgb_line1		488283	0					
ANR	488586	Identifier	rgb_line1		488283	0					
ANR	488587	CallExpression	GetBlue ( rgb_line2 )		488283	1					
ANR	488588	Callee	GetBlue		488283	0					
ANR	488589	Identifier	GetBlue		488283	0					
ANR	488590	ArgumentList	rgb_line2		488283	1					
ANR	488591	Argument	rgb_line2		488283	0					
ANR	488592	Identifier	rgb_line2		488283	0					
ANR	488593	ExpressionStatement	Y_dst1 [ 0 ] = GetLumaYfromPtr ( rgb_line1 )	518:4:16717:16755	488283	3	True				
ANR	488594	AssignmentExpression	Y_dst1 [ 0 ] = GetLumaYfromPtr ( rgb_line1 )		488283	0		=			
ANR	488595	ArrayIndexing	Y_dst1 [ 0 ]		488283	0					
ANR	488596	Identifier	Y_dst1		488283	0					
ANR	488597	PrimaryExpression	0		488283	1					
ANR	488598	CallExpression	GetLumaYfromPtr ( rgb_line1 )		488283	1					
ANR	488599	Callee	GetLumaYfromPtr		488283	0					
ANR	488600	Identifier	GetLumaYfromPtr		488283	0					
ANR	488601	ArgumentList	rgb_line1		488283	1					
ANR	488602	Argument	rgb_line1		488283	0					
ANR	488603	Identifier	rgb_line1		488283	0					
ANR	488604	ExpressionStatement	Y_dst2 [ 0 ] = GetLumaYfromPtr ( rgb_line2 )	519:4:16761:16799	488283	4	True				
ANR	488605	AssignmentExpression	Y_dst2 [ 0 ] = GetLumaYfromPtr ( rgb_line2 )		488283	0		=			
ANR	488606	ArrayIndexing	Y_dst2 [ 0 ]		488283	0					
ANR	488607	Identifier	Y_dst2		488283	0					
ANR	488608	PrimaryExpression	0		488283	1					
ANR	488609	CallExpression	GetLumaYfromPtr ( rgb_line2 )		488283	1					
ANR	488610	Callee	GetLumaYfromPtr		488283	0					
ANR	488611	Identifier	GetLumaYfromPtr		488283	0					
ANR	488612	ArgumentList	rgb_line2		488283	1					
ANR	488613	Argument	rgb_line2		488283	0					
ANR	488614	Identifier	rgb_line2		488283	0					
ANR	488615	ExpressionStatement	"* u_dst = GetChromaU ( 2 * sum_r , 2 * sum_g , 2 * sum_b )"	520:4:16805:16857	488283	5	True				
ANR	488616	AssignmentExpression	"* u_dst = GetChromaU ( 2 * sum_r , 2 * sum_g , 2 * sum_b )"		488283	0		=			
ANR	488617	UnaryOperationExpression	* u_dst		488283	0					
ANR	488618	UnaryOperator	*		488283	0					
ANR	488619	Identifier	u_dst		488283	1					
ANR	488620	CallExpression	"GetChromaU ( 2 * sum_r , 2 * sum_g , 2 * sum_b )"		488283	1					
ANR	488621	Callee	GetChromaU		488283	0					
ANR	488622	Identifier	GetChromaU		488283	0					
ANR	488623	ArgumentList	2 * sum_r		488283	1					
ANR	488624	Argument	2 * sum_r		488283	0					
ANR	488625	MultiplicativeExpression	2 * sum_r		488283	0		*			
ANR	488626	PrimaryExpression	2		488283	0					
ANR	488627	Identifier	sum_r		488283	1					
ANR	488628	Argument	2 * sum_g		488283	1					
ANR	488629	MultiplicativeExpression	2 * sum_g		488283	0		*			
ANR	488630	PrimaryExpression	2		488283	0					
ANR	488631	Identifier	sum_g		488283	1					
ANR	488632	Argument	2 * sum_b		488283	2					
ANR	488633	MultiplicativeExpression	2 * sum_b		488283	0		*			
ANR	488634	PrimaryExpression	2		488283	0					
ANR	488635	Identifier	sum_b		488283	1					
ANR	488636	ExpressionStatement	"* v_dst = GetChromaV ( 2 * sum_r , 2 * sum_g , 2 * sum_b )"	521:4:16863:16915	488283	6	True				
ANR	488637	AssignmentExpression	"* v_dst = GetChromaV ( 2 * sum_r , 2 * sum_g , 2 * sum_b )"		488283	0		=			
ANR	488638	UnaryOperationExpression	* v_dst		488283	0					
ANR	488639	UnaryOperator	*		488283	0					
ANR	488640	Identifier	v_dst		488283	1					
ANR	488641	CallExpression	"GetChromaV ( 2 * sum_r , 2 * sum_g , 2 * sum_b )"		488283	1					
ANR	488642	Callee	GetChromaV		488283	0					
ANR	488643	Identifier	GetChromaV		488283	0					
ANR	488644	ArgumentList	2 * sum_r		488283	1					
ANR	488645	Argument	2 * sum_r		488283	0					
ANR	488646	MultiplicativeExpression	2 * sum_r		488283	0		*			
ANR	488647	PrimaryExpression	2		488283	0					
ANR	488648	Identifier	sum_r		488283	1					
ANR	488649	Argument	2 * sum_g		488283	1					
ANR	488650	MultiplicativeExpression	2 * sum_g		488283	0		*			
ANR	488651	PrimaryExpression	2		488283	0					
ANR	488652	Identifier	sum_g		488283	1					
ANR	488653	Argument	2 * sum_b		488283	2					
ANR	488654	MultiplicativeExpression	2 * sum_b		488283	0		*			
ANR	488655	PrimaryExpression	2		488283	0					
ANR	488656	Identifier	sum_b		488283	1					
ANR	488657	ReturnType	static void		488283	1					
ANR	488658	Identifier	RGBALinepairToYUV420		488283	2					
ANR	488659	ParameterList	"uint32 * rgb_line1 , uint32 * rgb_line2 , int width , uint8 * Y_dst1 , uint8 * Y_dst2 , uint8 * u_dst , uint8 * v_dst"		488283	3					
ANR	488660	Parameter	uint32 * rgb_line1	480:33:15354:15370	488283	0	True				
ANR	488661	ParameterType	uint32 *		488283	0					
ANR	488662	Identifier	rgb_line1		488283	1					
ANR	488663	Parameter	uint32 * rgb_line2	481:33:15406:15422	488283	1	True				
ANR	488664	ParameterType	uint32 *		488283	0					
ANR	488665	Identifier	rgb_line2		488283	1					
ANR	488666	Parameter	int width	482:33:15458:15466	488283	2	True				
ANR	488667	ParameterType	int		488283	0					
ANR	488668	Identifier	width		488283	1					
ANR	488669	Parameter	uint8 * Y_dst1	483:33:15502:15514	488283	3	True				
ANR	488670	ParameterType	uint8 *		488283	0					
ANR	488671	Identifier	Y_dst1		488283	1					
ANR	488672	Parameter	uint8 * Y_dst2	484:33:15550:15562	488283	4	True				
ANR	488673	ParameterType	uint8 *		488283	0					
ANR	488674	Identifier	Y_dst2		488283	1					
ANR	488675	Parameter	uint8 * u_dst	485:33:15598:15609	488283	5	True				
ANR	488676	ParameterType	uint8 *		488283	0					
ANR	488677	Identifier	u_dst		488283	1					
ANR	488678	Parameter	uint8 * v_dst	486:33:15645:15656	488283	6	True				
ANR	488679	ParameterType	uint8 *		488283	0					
ANR	488680	Identifier	v_dst		488283	1					
ANR	488681	CFGEntryNode	ENTRY		488283		True				
ANR	488682	CFGExitNode	EXIT		488283		True				
ANR	488683	Symbol	sum_b		488283						
ANR	488684	Symbol	u_dst		488283						
ANR	488685	Symbol	GetBlue		488283						
ANR	488686	Symbol	* Y_dst2		488283						
ANR	488687	Symbol	* Y_dst1		488283						
ANR	488688	Symbol	* v_dst		488283						
ANR	488689	Symbol	GetChromaV		488283						
ANR	488690	Symbol	GetChromaU		488283						
ANR	488691	Symbol	sum_r		488283						
ANR	488692	Symbol	GetGreen		488283						
ANR	488693	Symbol	GetLumaYfromPtr		488283						
ANR	488694	Symbol	GetRed		488283						
ANR	488695	Symbol	v_dst		488283						
ANR	488696	Symbol	rgb_line2		488283						
ANR	488697	Symbol	width		488283						
ANR	488698	Symbol	x		488283						
ANR	488699	Symbol	sum_g		488283						
ANR	488700	Symbol	* u_dst ++		488283						
ANR	488701	Symbol	* v_dst ++		488283						
ANR	488702	Symbol	Y_dst2		488283						
ANR	488703	Symbol	Y_dst1		488283						
ANR	488704	Symbol	* u_dst		488283						
ANR	488705	Symbol	rgb_line1		488283						
ANR	488706	Function	gd_RGBAToYUV420	535:0:17294:18630							
ANR	488707	FunctionDef	"gd_RGBAToYUV420 (gdImagePtr im2 , uint8 * Y , uint8 * U , uint8 * V)"		488706	0					
ANR	488708	CompoundStatement		538:28:17415:18630	488706	0					
ANR	488709	IdentifierDeclStatement	int y_width = im2 -> sx ;	539:2:17419:17440	488706	0	True				
ANR	488710	IdentifierDecl	y_width = im2 -> sx		488706	0					
ANR	488711	IdentifierDeclType	int		488706	0					
ANR	488712	Identifier	y_width		488706	1					
ANR	488713	AssignmentExpression	y_width = im2 -> sx		488706	2		=			
ANR	488714	Identifier	y_width		488706	0					
ANR	488715	PtrMemberAccess	im2 -> sx		488706	1					
ANR	488716	Identifier	im2		488706	0					
ANR	488717	Identifier	sx		488706	1					
ANR	488718	IdentifierDeclStatement	int y_height = im2 -> sy ;	540:2:17444:17466	488706	1	True				
ANR	488719	IdentifierDecl	y_height = im2 -> sy		488706	0					
ANR	488720	IdentifierDeclType	int		488706	0					
ANR	488721	Identifier	y_height		488706	1					
ANR	488722	AssignmentExpression	y_height = im2 -> sy		488706	2		=			
ANR	488723	Identifier	y_height		488706	0					
ANR	488724	PtrMemberAccess	im2 -> sy		488706	1					
ANR	488725	Identifier	im2		488706	0					
ANR	488726	Identifier	sy		488706	1					
ANR	488727	IdentifierDeclStatement	int y_stride = y_width ;	541:2:17470:17492	488706	2	True				
ANR	488728	IdentifierDecl	y_stride = y_width		488706	0					
ANR	488729	IdentifierDeclType	int		488706	0					
ANR	488730	Identifier	y_stride		488706	1					
ANR	488731	AssignmentExpression	y_stride = y_width		488706	2		=			
ANR	488732	Identifier	y_width		488706	0					
ANR	488733	Identifier	y_width		488706	1					
ANR	488734	IdentifierDeclStatement	int uv_width = ( ( y_width + 1 ) >> 1 ) ;	542:2:17496:17531	488706	3	True				
ANR	488735	IdentifierDecl	uv_width = ( ( y_width + 1 ) >> 1 )		488706	0					
ANR	488736	IdentifierDeclType	int		488706	0					
ANR	488737	Identifier	uv_width		488706	1					
ANR	488738	AssignmentExpression	uv_width = ( ( y_width + 1 ) >> 1 )		488706	2		=			
ANR	488739	Identifier	uv_width		488706	0					
ANR	488740	ShiftExpression	( y_width + 1 ) >> 1		488706	1		>>			
ANR	488741	AdditiveExpression	y_width + 1		488706	0		+			
ANR	488742	Identifier	y_width		488706	0					
ANR	488743	PrimaryExpression	1		488706	1					
ANR	488744	PrimaryExpression	1		488706	1					
ANR	488745	IdentifierDeclStatement	int uv_stride = uv_width ;	543:2:17535:17559	488706	4	True				
ANR	488746	IdentifierDecl	uv_stride = uv_width		488706	0					
ANR	488747	IdentifierDeclType	int		488706	0					
ANR	488748	Identifier	uv_stride		488706	1					
ANR	488749	AssignmentExpression	uv_stride = uv_width		488706	2		=			
ANR	488750	Identifier	uv_width		488706	0					
ANR	488751	Identifier	uv_width		488706	1					
ANR	488752	IdentifierDeclStatement	int y ;	544:2:17563:17568	488706	5	True				
ANR	488753	IdentifierDecl	y		488706	0					
ANR	488754	IdentifierDeclType	int		488706	0					
ANR	488755	Identifier	y		488706	1					
ANR	488756	IdentifierDeclStatement	gdImagePtr im = NULL ;	545:2:17572:17592	488706	6	True				
ANR	488757	IdentifierDecl	im = NULL		488706	0					
ANR	488758	IdentifierDeclType	gdImagePtr		488706	0					
ANR	488759	Identifier	im		488706	1					
ANR	488760	AssignmentExpression	im = NULL		488706	2		=			
ANR	488761	Identifier	NULL		488706	0					
ANR	488762	Identifier	NULL		488706	1					
ANR	488763	IdentifierDeclStatement	int free_im = 0 ;	546:2:17596:17611	488706	7	True				
ANR	488764	IdentifierDecl	free_im = 0		488706	0					
ANR	488765	IdentifierDeclType	int		488706	0					
ANR	488766	Identifier	free_im		488706	1					
ANR	488767	AssignmentExpression	free_im = 0		488706	2		=			
ANR	488768	Identifier	free_im		488706	0					
ANR	488769	PrimaryExpression	0		488706	1					
ANR	488770	IfStatement	if ( ! im2 -> trueColor )		488706	8					
ANR	488771	Condition	! im2 -> trueColor	548:6:17620:17634	488706	0	True				
ANR	488772	UnaryOperationExpression	! im2 -> trueColor		488706	0					
ANR	488773	UnaryOperator	!		488706	0					
ANR	488774	PtrMemberAccess	im2 -> trueColor		488706	1					
ANR	488775	Identifier	im2		488706	0					
ANR	488776	Identifier	trueColor		488706	1					
ANR	488777	CompoundStatement		11:23:221:221	488706	1					
ANR	488778	ExpressionStatement	"im = gdImageCreateTrueColor ( im2 -> sx , im2 -> sy )"	552:3:17804:17849	488706	0	True				
ANR	488779	AssignmentExpression	"im = gdImageCreateTrueColor ( im2 -> sx , im2 -> sy )"		488706	0		=			
ANR	488780	Identifier	im		488706	0					
ANR	488781	CallExpression	"gdImageCreateTrueColor ( im2 -> sx , im2 -> sy )"		488706	1					
ANR	488782	Callee	gdImageCreateTrueColor		488706	0					
ANR	488783	Identifier	gdImageCreateTrueColor		488706	0					
ANR	488784	ArgumentList	im2 -> sx		488706	1					
ANR	488785	Argument	im2 -> sx		488706	0					
ANR	488786	PtrMemberAccess	im2 -> sx		488706	0					
ANR	488787	Identifier	im2		488706	0					
ANR	488788	Identifier	sx		488706	1					
ANR	488789	Argument	im2 -> sy		488706	1					
ANR	488790	PtrMemberAccess	im2 -> sy		488706	0					
ANR	488791	Identifier	im2		488706	0					
ANR	488792	Identifier	sy		488706	1					
ANR	488793	IfStatement	if ( ! im )		488706	1					
ANR	488794	Condition	! im	553:7:17858:17860	488706	0	True				
ANR	488795	UnaryOperationExpression	! im		488706	0					
ANR	488796	UnaryOperator	!		488706	0					
ANR	488797	Identifier	im		488706	1					
ANR	488798	CompoundStatement		16:12:447:447	488706	1					
ANR	488799	ExpressionStatement	"php_gd_error ( ""gd-webp error: cannot convert palette input to truecolor"" )"	554:4:17869:17941	488706	0	True				
ANR	488800	CallExpression	"php_gd_error ( ""gd-webp error: cannot convert palette input to truecolor"" )"		488706	0					
ANR	488801	Callee	php_gd_error		488706	0					
ANR	488802	Identifier	php_gd_error		488706	0					
ANR	488803	ArgumentList	"""gd-webp error: cannot convert palette input to truecolor"""		488706	1					
ANR	488804	Argument	"""gd-webp error: cannot convert palette input to truecolor"""		488706	0					
ANR	488805	PrimaryExpression	"""gd-webp error: cannot convert palette input to truecolor"""		488706	0					
ANR	488806	ReturnStatement	return ;	555:4:17947:17953	488706	1	True				
ANR	488807	ExpressionStatement	"gdImageCopy ( im , im2 , 0 , 0 , 0 , 0 , im -> sx , im -> sy )"	557:3:17961:18009	488706	2	True				
ANR	488808	CallExpression	"gdImageCopy ( im , im2 , 0 , 0 , 0 , 0 , im -> sx , im -> sy )"		488706	0					
ANR	488809	Callee	gdImageCopy		488706	0					
ANR	488810	Identifier	gdImageCopy		488706	0					
ANR	488811	ArgumentList	im		488706	1					
ANR	488812	Argument	im		488706	0					
ANR	488813	Identifier	im		488706	0					
ANR	488814	Argument	im2		488706	1					
ANR	488815	Identifier	im2		488706	0					
ANR	488816	Argument	0		488706	2					
ANR	488817	PrimaryExpression	0		488706	0					
ANR	488818	Argument	0		488706	3					
ANR	488819	PrimaryExpression	0		488706	0					
ANR	488820	Argument	0		488706	4					
ANR	488821	PrimaryExpression	0		488706	0					
ANR	488822	Argument	0		488706	5					
ANR	488823	PrimaryExpression	0		488706	0					
ANR	488824	Argument	im -> sx		488706	6					
ANR	488825	PtrMemberAccess	im -> sx		488706	0					
ANR	488826	Identifier	im		488706	0					
ANR	488827	Identifier	sx		488706	1					
ANR	488828	Argument	im -> sy		488706	7					
ANR	488829	PtrMemberAccess	im -> sy		488706	0					
ANR	488830	Identifier	im		488706	0					
ANR	488831	Identifier	sy		488706	1					
ANR	488832	ExpressionStatement	free_im = 1	558:3:18014:18025	488706	3	True				
ANR	488833	AssignmentExpression	free_im = 1		488706	0		=			
ANR	488834	Identifier	free_im		488706	0					
ANR	488835	PrimaryExpression	1		488706	1					
ANR	488836	ElseStatement	else		488706	0					
ANR	488837	CompoundStatement		22:9:620:620	488706	0					
ANR	488838	ExpressionStatement	im = im2	560:3:18041:18049	488706	0	True				
ANR	488839	AssignmentExpression	im = im2		488706	0		=			
ANR	488840	Identifier	im		488706	0					
ANR	488841	Identifier	im2		488706	1					
ANR	488842	ForStatement	for ( y = 0 ; y < ( y_height >> 1 ) ; ++ y )		488706	9					
ANR	488843	ForInit	y = 0 ;	562:7:18062:18067	488706	0	True				
ANR	488844	AssignmentExpression	y = 0		488706	0		=			
ANR	488845	Identifier	y		488706	0					
ANR	488846	PrimaryExpression	0		488706	1					
ANR	488847	Condition	y < ( y_height >> 1 )	562:14:18069:18087	488706	1	True				
ANR	488848	RelationalExpression	y < ( y_height >> 1 )		488706	0		<			
ANR	488849	Identifier	y		488706	0					
ANR	488850	ShiftExpression	y_height >> 1		488706	1		>>			
ANR	488851	Identifier	y_height		488706	0					
ANR	488852	PrimaryExpression	1		488706	1					
ANR	488853	UnaryExpression	++ y	562:35:18090:18092	488706	2	True				
ANR	488854	IncDec	++		488706	0					
ANR	488855	Identifier	y		488706	1					
ANR	488856	CompoundStatement		25:40:679:679	488706	3					
ANR	488857	ExpressionStatement	"RGBALinepairToYUV420 ( im -> tpixels [ 2 * y ] , im -> tpixels [ 2 * y + 1 ] , y_width , Y + 2 * y * y_stride , Y + ( 2 * y + 1 ) * y_stride , U + y * uv_stride , V + y * uv_stride )"	563:1:18098:18301	488706	0	True				
ANR	488858	CallExpression	"RGBALinepairToYUV420 ( im -> tpixels [ 2 * y ] , im -> tpixels [ 2 * y + 1 ] , y_width , Y + 2 * y * y_stride , Y + ( 2 * y + 1 ) * y_stride , U + y * uv_stride , V + y * uv_stride )"		488706	0					
ANR	488859	Callee	RGBALinepairToYUV420		488706	0					
ANR	488860	Identifier	RGBALinepairToYUV420		488706	0					
ANR	488861	ArgumentList	im -> tpixels [ 2 * y ]		488706	1					
ANR	488862	Argument	im -> tpixels [ 2 * y ]		488706	0					
ANR	488863	ArrayIndexing	im -> tpixels [ 2 * y ]		488706	0					
ANR	488864	PtrMemberAccess	im -> tpixels		488706	0					
ANR	488865	Identifier	im		488706	0					
ANR	488866	Identifier	tpixels		488706	1					
ANR	488867	MultiplicativeExpression	2 * y		488706	1		*			
ANR	488868	PrimaryExpression	2		488706	0					
ANR	488869	Identifier	y		488706	1					
ANR	488870	Argument	im -> tpixels [ 2 * y + 1 ]		488706	1					
ANR	488871	ArrayIndexing	im -> tpixels [ 2 * y + 1 ]		488706	0					
ANR	488872	PtrMemberAccess	im -> tpixels		488706	0					
ANR	488873	Identifier	im		488706	0					
ANR	488874	Identifier	tpixels		488706	1					
ANR	488875	AdditiveExpression	2 * y + 1		488706	1		+			
ANR	488876	MultiplicativeExpression	2 * y		488706	0		*			
ANR	488877	PrimaryExpression	2		488706	0					
ANR	488878	Identifier	y		488706	1					
ANR	488879	PrimaryExpression	1		488706	1					
ANR	488880	Argument	y_width		488706	2					
ANR	488881	Identifier	y_width		488706	0					
ANR	488882	Argument	Y + 2 * y * y_stride		488706	3					
ANR	488883	AdditiveExpression	Y + 2 * y * y_stride		488706	0		+			
ANR	488884	Identifier	Y		488706	0					
ANR	488885	MultiplicativeExpression	2 * y * y_stride		488706	1		*			
ANR	488886	PrimaryExpression	2		488706	0					
ANR	488887	MultiplicativeExpression	y * y_stride		488706	1		*			
ANR	488888	Identifier	y		488706	0					
ANR	488889	Identifier	y_stride		488706	1					
ANR	488890	Argument	Y + ( 2 * y + 1 ) * y_stride		488706	4					
ANR	488891	AdditiveExpression	Y + ( 2 * y + 1 ) * y_stride		488706	0		+			
ANR	488892	Identifier	Y		488706	0					
ANR	488893	MultiplicativeExpression	( 2 * y + 1 ) * y_stride		488706	1		*			
ANR	488894	AdditiveExpression	2 * y + 1		488706	0		+			
ANR	488895	MultiplicativeExpression	2 * y		488706	0		*			
ANR	488896	PrimaryExpression	2		488706	0					
ANR	488897	Identifier	y		488706	1					
ANR	488898	PrimaryExpression	1		488706	1					
ANR	488899	Identifier	y_stride		488706	1					
ANR	488900	Argument	U + y * uv_stride		488706	5					
ANR	488901	AdditiveExpression	U + y * uv_stride		488706	0		+			
ANR	488902	Identifier	U		488706	0					
ANR	488903	MultiplicativeExpression	y * uv_stride		488706	1		*			
ANR	488904	Identifier	y		488706	0					
ANR	488905	Identifier	uv_stride		488706	1					
ANR	488906	Argument	V + y * uv_stride		488706	6					
ANR	488907	AdditiveExpression	V + y * uv_stride		488706	0		+			
ANR	488908	Identifier	V		488706	0					
ANR	488909	MultiplicativeExpression	y * uv_stride		488706	1		*			
ANR	488910	Identifier	y		488706	0					
ANR	488911	Identifier	uv_stride		488706	1					
ANR	488912	IfStatement	if ( y_height & 1 )		488706	10					
ANR	488913	Condition	y_height & 1	571:6:18313:18324	488706	0	True				
ANR	488914	BitAndExpression	y_height & 1		488706	0		&			
ANR	488915	Identifier	y_height		488706	0					
ANR	488916	PrimaryExpression	1		488706	1					
ANR	488917	CompoundStatement		34:20:911:911	488706	1					
ANR	488918	ExpressionStatement	"RGBALinepairToYUV420 ( im -> tpixels [ y_height - 1 ] , im -> tpixels [ y_height - 1 ] , y_width , Y + ( y_height - 1 ) * y_stride , Y + ( y_height - 1 ) * y_stride , U + ( y_height >> 1 ) * uv_stride , V + ( y_height >> 1 ) * uv_stride )"	572:1:18330:18583	488706	0	True				
ANR	488919	CallExpression	"RGBALinepairToYUV420 ( im -> tpixels [ y_height - 1 ] , im -> tpixels [ y_height - 1 ] , y_width , Y + ( y_height - 1 ) * y_stride , Y + ( y_height - 1 ) * y_stride , U + ( y_height >> 1 ) * uv_stride , V + ( y_height >> 1 ) * uv_stride )"		488706	0					
ANR	488920	Callee	RGBALinepairToYUV420		488706	0					
ANR	488921	Identifier	RGBALinepairToYUV420		488706	0					
ANR	488922	ArgumentList	im -> tpixels [ y_height - 1 ]		488706	1					
ANR	488923	Argument	im -> tpixels [ y_height - 1 ]		488706	0					
ANR	488924	ArrayIndexing	im -> tpixels [ y_height - 1 ]		488706	0					
ANR	488925	PtrMemberAccess	im -> tpixels		488706	0					
ANR	488926	Identifier	im		488706	0					
ANR	488927	Identifier	tpixels		488706	1					
ANR	488928	AdditiveExpression	y_height - 1		488706	1		-			
ANR	488929	Identifier	y_height		488706	0					
ANR	488930	PrimaryExpression	1		488706	1					
ANR	488931	Argument	im -> tpixels [ y_height - 1 ]		488706	1					
ANR	488932	ArrayIndexing	im -> tpixels [ y_height - 1 ]		488706	0					
ANR	488933	PtrMemberAccess	im -> tpixels		488706	0					
ANR	488934	Identifier	im		488706	0					
ANR	488935	Identifier	tpixels		488706	1					
ANR	488936	AdditiveExpression	y_height - 1		488706	1		-			
ANR	488937	Identifier	y_height		488706	0					
ANR	488938	PrimaryExpression	1		488706	1					
ANR	488939	Argument	y_width		488706	2					
ANR	488940	Identifier	y_width		488706	0					
ANR	488941	Argument	Y + ( y_height - 1 ) * y_stride		488706	3					
ANR	488942	AdditiveExpression	Y + ( y_height - 1 ) * y_stride		488706	0		+			
ANR	488943	Identifier	Y		488706	0					
ANR	488944	MultiplicativeExpression	( y_height - 1 ) * y_stride		488706	1		*			
ANR	488945	AdditiveExpression	y_height - 1		488706	0		-			
ANR	488946	Identifier	y_height		488706	0					
ANR	488947	PrimaryExpression	1		488706	1					
ANR	488948	Identifier	y_stride		488706	1					
ANR	488949	Argument	Y + ( y_height - 1 ) * y_stride		488706	4					
ANR	488950	AdditiveExpression	Y + ( y_height - 1 ) * y_stride		488706	0		+			
ANR	488951	Identifier	Y		488706	0					
ANR	488952	MultiplicativeExpression	( y_height - 1 ) * y_stride		488706	1		*			
ANR	488953	AdditiveExpression	y_height - 1		488706	0		-			
ANR	488954	Identifier	y_height		488706	0					
ANR	488955	PrimaryExpression	1		488706	1					
ANR	488956	Identifier	y_stride		488706	1					
ANR	488957	Argument	U + ( y_height >> 1 ) * uv_stride		488706	5					
ANR	488958	AdditiveExpression	U + ( y_height >> 1 ) * uv_stride		488706	0		+			
ANR	488959	Identifier	U		488706	0					
ANR	488960	MultiplicativeExpression	( y_height >> 1 ) * uv_stride		488706	1		*			
ANR	488961	ShiftExpression	y_height >> 1		488706	0		>>			
ANR	488962	Identifier	y_height		488706	0					
ANR	488963	PrimaryExpression	1		488706	1					
ANR	488964	Identifier	uv_stride		488706	1					
ANR	488965	Argument	V + ( y_height >> 1 ) * uv_stride		488706	6					
ANR	488966	AdditiveExpression	V + ( y_height >> 1 ) * uv_stride		488706	0		+			
ANR	488967	Identifier	V		488706	0					
ANR	488968	MultiplicativeExpression	( y_height >> 1 ) * uv_stride		488706	1		*			
ANR	488969	ShiftExpression	y_height >> 1		488706	0		>>			
ANR	488970	Identifier	y_height		488706	0					
ANR	488971	PrimaryExpression	1		488706	1					
ANR	488972	Identifier	uv_stride		488706	1					
ANR	488973	IfStatement	if ( free_im )		488706	11					
ANR	488974	Condition	free_im	580:5:18594:18600	488706	0	True				
ANR	488975	Identifier	free_im		488706	0					
ANR	488976	CompoundStatement		43:14:1187:1187	488706	1					
ANR	488977	ExpressionStatement	gdImageDestroy ( im )	581:2:18607:18625	488706	0	True				
ANR	488978	CallExpression	gdImageDestroy ( im )		488706	0					
ANR	488979	Callee	gdImageDestroy		488706	0					
ANR	488980	Identifier	gdImageDestroy		488706	0					
ANR	488981	ArgumentList	im		488706	1					
ANR	488982	Argument	im		488706	0					
ANR	488983	Identifier	im		488706	0					
ANR	488984	ReturnType	void		488706	1					
ANR	488985	Identifier	gd_RGBAToYUV420		488706	2					
ANR	488986	ParameterList	"gdImagePtr im2 , uint8 * Y , uint8 * U , uint8 * V"		488706	3					
ANR	488987	Parameter	gdImagePtr im2	535:21:17315:17328	488706	0	True				
ANR	488988	ParameterType	gdImagePtr		488706	0					
ANR	488989	Identifier	im2		488706	1					
ANR	488990	Parameter	uint8 * Y	536:18:17349:17356	488706	1	True				
ANR	488991	ParameterType	uint8 *		488706	0					
ANR	488992	Identifier	Y		488706	1					
ANR	488993	Parameter	uint8 * U	537:18:17377:17384	488706	2	True				
ANR	488994	ParameterType	uint8 *		488706	0					
ANR	488995	Identifier	U		488706	1					
ANR	488996	Parameter	uint8 * V	538:18:17405:17412	488706	3	True				
ANR	488997	ParameterType	uint8 *		488706	0					
ANR	488998	Identifier	V		488706	1					
ANR	488999	CFGEntryNode	ENTRY		488706		True				
ANR	489000	CFGExitNode	EXIT		488706		True				
ANR	489001	Symbol	* y		488706						
ANR	489002	Symbol	* im2		488706						
ANR	489003	Symbol	* im		488706						
ANR	489004	Symbol	uv_width		488706						
ANR	489005	Symbol	im2		488706						
ANR	489006	Symbol	* * im		488706						
ANR	489007	Symbol	* y_height		488706						
ANR	489008	Symbol	gdImageCreateTrueColor		488706						
ANR	489009	Symbol	U		488706						
ANR	489010	Symbol	free_im		488706						
ANR	489011	Symbol	V		488706						
ANR	489012	Symbol	Y		488706						
ANR	489013	Symbol	uv_stride		488706						
ANR	489014	Symbol	NULL		488706						
ANR	489015	Symbol	im		488706						
ANR	489016	Symbol	im -> tpixels		488706						
ANR	489017	Symbol	im2 -> trueColor		488706						
ANR	489018	Symbol	y_width		488706						
ANR	489019	Symbol	y_stride		488706						
ANR	489020	Symbol	im -> sx		488706						
ANR	489021	Symbol	im -> sy		488706						
ANR	489022	Symbol	im2 -> sy		488706						
ANR	489023	Symbol	im2 -> sx		488706						
ANR	489024	Symbol	y		488706						
ANR	489025	Symbol	* im -> tpixels		488706						
ANR	489026	Symbol	y_height		488706						
ANR	489027	Function	RGBAToYUV420	595:0:19003:20190							
ANR	489028	FunctionDef	"RGBAToYUV420 (uint32 * pixdata , int words_per_line , int width , int height , uint8 * Y , uint8 * U , uint8 * V)"		489027	0					
ANR	489029	CompoundStatement		601:28:19219:20190	489027	0					
ANR	489030	IdentifierDeclStatement	int y_width = width ;	602:2:19223:19242	489027	0	True				
ANR	489031	IdentifierDecl	y_width = width		489027	0					
ANR	489032	IdentifierDeclType	int		489027	0					
ANR	489033	Identifier	y_width		489027	1					
ANR	489034	AssignmentExpression	y_width = width		489027	2		=			
ANR	489035	Identifier	width		489027	0					
ANR	489036	Identifier	width		489027	1					
ANR	489037	IdentifierDeclStatement	int y_height = height ;	603:2:19246:19267	489027	1	True				
ANR	489038	IdentifierDecl	y_height = height		489027	0					
ANR	489039	IdentifierDeclType	int		489027	0					
ANR	489040	Identifier	y_height		489027	1					
ANR	489041	AssignmentExpression	y_height = height		489027	2		=			
ANR	489042	Identifier	height		489027	0					
ANR	489043	Identifier	height		489027	1					
ANR	489044	IdentifierDeclStatement	int y_stride = y_width ;	604:2:19271:19293	489027	2	True				
ANR	489045	IdentifierDecl	y_stride = y_width		489027	0					
ANR	489046	IdentifierDeclType	int		489027	0					
ANR	489047	Identifier	y_stride		489027	1					
ANR	489048	AssignmentExpression	y_stride = y_width		489027	2		=			
ANR	489049	Identifier	y_width		489027	0					
ANR	489050	Identifier	y_width		489027	1					
ANR	489051	IdentifierDeclStatement	int uv_width = ( ( y_width + 1 ) >> 1 ) ;	605:2:19297:19332	489027	3	True				
ANR	489052	IdentifierDecl	uv_width = ( ( y_width + 1 ) >> 1 )		489027	0					
ANR	489053	IdentifierDeclType	int		489027	0					
ANR	489054	Identifier	uv_width		489027	1					
ANR	489055	AssignmentExpression	uv_width = ( ( y_width + 1 ) >> 1 )		489027	2		=			
ANR	489056	Identifier	uv_width		489027	0					
ANR	489057	ShiftExpression	( y_width + 1 ) >> 1		489027	1		>>			
ANR	489058	AdditiveExpression	y_width + 1		489027	0		+			
ANR	489059	Identifier	y_width		489027	0					
ANR	489060	PrimaryExpression	1		489027	1					
ANR	489061	PrimaryExpression	1		489027	1					
ANR	489062	IdentifierDeclStatement	int uv_stride = uv_width ;	606:2:19336:19360	489027	4	True				
ANR	489063	IdentifierDecl	uv_stride = uv_width		489027	0					
ANR	489064	IdentifierDeclType	int		489027	0					
ANR	489065	Identifier	uv_stride		489027	1					
ANR	489066	AssignmentExpression	uv_stride = uv_width		489027	2		=			
ANR	489067	Identifier	uv_width		489027	0					
ANR	489068	Identifier	uv_width		489027	1					
ANR	489069	IdentifierDeclStatement	int y ;	607:2:19364:19369	489027	5	True				
ANR	489070	IdentifierDecl	y		489027	0					
ANR	489071	IdentifierDeclType	int		489027	0					
ANR	489072	Identifier	y		489027	1					
ANR	489073	ForStatement	for ( y = 0 ; y < ( y_height >> 1 ) ; ++ y )		489027	6					
ANR	489074	ForInit	y = 0 ;	609:7:19379:19384	489027	0	True				
ANR	489075	AssignmentExpression	y = 0		489027	0		=			
ANR	489076	Identifier	y		489027	0					
ANR	489077	PrimaryExpression	0		489027	1					
ANR	489078	Condition	y < ( y_height >> 1 )	609:14:19386:19404	489027	1	True				
ANR	489079	RelationalExpression	y < ( y_height >> 1 )		489027	0		<			
ANR	489080	Identifier	y		489027	0					
ANR	489081	ShiftExpression	y_height >> 1		489027	1		>>			
ANR	489082	Identifier	y_height		489027	0					
ANR	489083	PrimaryExpression	1		489027	1					
ANR	489084	UnaryExpression	++ y	609:35:19407:19409	489027	2	True				
ANR	489085	IncDec	++		489027	0					
ANR	489086	Identifier	y		489027	1					
ANR	489087	CompoundStatement		9:40:192:192	489027	3					
ANR	489088	ExpressionStatement	"RGBALinepairToYUV420 ( pixdata + 2 * y * words_per_line , pixdata + ( 2 * y + 1 ) * words_per_line , y_width , Y + 2 * y * y_stride , Y + ( 2 * y + 1 ) * y_stride , U + y * uv_stride , V + y * uv_stride )"	610:4:19418:19759	489027	0	True				
ANR	489089	CallExpression	"RGBALinepairToYUV420 ( pixdata + 2 * y * words_per_line , pixdata + ( 2 * y + 1 ) * words_per_line , y_width , Y + 2 * y * y_stride , Y + ( 2 * y + 1 ) * y_stride , U + y * uv_stride , V + y * uv_stride )"		489027	0					
ANR	489090	Callee	RGBALinepairToYUV420		489027	0					
ANR	489091	Identifier	RGBALinepairToYUV420		489027	0					
ANR	489092	ArgumentList	pixdata + 2 * y * words_per_line		489027	1					
ANR	489093	Argument	pixdata + 2 * y * words_per_line		489027	0					
ANR	489094	AdditiveExpression	pixdata + 2 * y * words_per_line		489027	0		+			
ANR	489095	Identifier	pixdata		489027	0					
ANR	489096	MultiplicativeExpression	2 * y * words_per_line		489027	1		*			
ANR	489097	PrimaryExpression	2		489027	0					
ANR	489098	MultiplicativeExpression	y * words_per_line		489027	1		*			
ANR	489099	Identifier	y		489027	0					
ANR	489100	Identifier	words_per_line		489027	1					
ANR	489101	Argument	pixdata + ( 2 * y + 1 ) * words_per_line		489027	1					
ANR	489102	AdditiveExpression	pixdata + ( 2 * y + 1 ) * words_per_line		489027	0		+			
ANR	489103	Identifier	pixdata		489027	0					
ANR	489104	MultiplicativeExpression	( 2 * y + 1 ) * words_per_line		489027	1		*			
ANR	489105	AdditiveExpression	2 * y + 1		489027	0		+			
ANR	489106	MultiplicativeExpression	2 * y		489027	0		*			
ANR	489107	PrimaryExpression	2		489027	0					
ANR	489108	Identifier	y		489027	1					
ANR	489109	PrimaryExpression	1		489027	1					
ANR	489110	Identifier	words_per_line		489027	1					
ANR	489111	Argument	y_width		489027	2					
ANR	489112	Identifier	y_width		489027	0					
ANR	489113	Argument	Y + 2 * y * y_stride		489027	3					
ANR	489114	AdditiveExpression	Y + 2 * y * y_stride		489027	0		+			
ANR	489115	Identifier	Y		489027	0					
ANR	489116	MultiplicativeExpression	2 * y * y_stride		489027	1		*			
ANR	489117	PrimaryExpression	2		489027	0					
ANR	489118	MultiplicativeExpression	y * y_stride		489027	1		*			
ANR	489119	Identifier	y		489027	0					
ANR	489120	Identifier	y_stride		489027	1					
ANR	489121	Argument	Y + ( 2 * y + 1 ) * y_stride		489027	4					
ANR	489122	AdditiveExpression	Y + ( 2 * y + 1 ) * y_stride		489027	0		+			
ANR	489123	Identifier	Y		489027	0					
ANR	489124	MultiplicativeExpression	( 2 * y + 1 ) * y_stride		489027	1		*			
ANR	489125	AdditiveExpression	2 * y + 1		489027	0		+			
ANR	489126	MultiplicativeExpression	2 * y		489027	0		*			
ANR	489127	PrimaryExpression	2		489027	0					
ANR	489128	Identifier	y		489027	1					
ANR	489129	PrimaryExpression	1		489027	1					
ANR	489130	Identifier	y_stride		489027	1					
ANR	489131	Argument	U + y * uv_stride		489027	5					
ANR	489132	AdditiveExpression	U + y * uv_stride		489027	0		+			
ANR	489133	Identifier	U		489027	0					
ANR	489134	MultiplicativeExpression	y * uv_stride		489027	1		*			
ANR	489135	Identifier	y		489027	0					
ANR	489136	Identifier	uv_stride		489027	1					
ANR	489137	Argument	V + y * uv_stride		489027	6					
ANR	489138	AdditiveExpression	V + y * uv_stride		489027	0		+			
ANR	489139	Identifier	V		489027	0					
ANR	489140	MultiplicativeExpression	y * uv_stride		489027	1		*			
ANR	489141	Identifier	y		489027	0					
ANR	489142	Identifier	uv_stride		489027	1					
ANR	489143	IfStatement	if ( y_height & 1 )		489027	7					
ANR	489144	Condition	y_height & 1	618:6:19771:19782	489027	0	True				
ANR	489145	BitAndExpression	y_height & 1		489027	0		&			
ANR	489146	Identifier	y_height		489027	0					
ANR	489147	PrimaryExpression	1		489027	1					
ANR	489148	CompoundStatement		18:20:565:565	489027	1					
ANR	489149	ExpressionStatement	"RGBALinepairToYUV420 ( pixdata + ( y_height - 1 ) * words_per_line , pixdata + ( y_height - 1 ) * words_per_line , y_width , Y + ( y_height - 1 ) * y_stride , Y + ( y_height - 1 ) * y_stride , U + ( y_height >> 1 ) * uv_stride , V + ( y_height >> 1 ) * uv_stride )"	619:4:19791:20184	489027	0	True				
ANR	489150	CallExpression	"RGBALinepairToYUV420 ( pixdata + ( y_height - 1 ) * words_per_line , pixdata + ( y_height - 1 ) * words_per_line , y_width , Y + ( y_height - 1 ) * y_stride , Y + ( y_height - 1 ) * y_stride , U + ( y_height >> 1 ) * uv_stride , V + ( y_height >> 1 ) * uv_stride )"		489027	0					
ANR	489151	Callee	RGBALinepairToYUV420		489027	0					
ANR	489152	Identifier	RGBALinepairToYUV420		489027	0					
ANR	489153	ArgumentList	pixdata + ( y_height - 1 ) * words_per_line		489027	1					
ANR	489154	Argument	pixdata + ( y_height - 1 ) * words_per_line		489027	0					
ANR	489155	AdditiveExpression	pixdata + ( y_height - 1 ) * words_per_line		489027	0		+			
ANR	489156	Identifier	pixdata		489027	0					
ANR	489157	MultiplicativeExpression	( y_height - 1 ) * words_per_line		489027	1		*			
ANR	489158	AdditiveExpression	y_height - 1		489027	0		-			
ANR	489159	Identifier	y_height		489027	0					
ANR	489160	PrimaryExpression	1		489027	1					
ANR	489161	Identifier	words_per_line		489027	1					
ANR	489162	Argument	pixdata + ( y_height - 1 ) * words_per_line		489027	1					
ANR	489163	AdditiveExpression	pixdata + ( y_height - 1 ) * words_per_line		489027	0		+			
ANR	489164	Identifier	pixdata		489027	0					
ANR	489165	MultiplicativeExpression	( y_height - 1 ) * words_per_line		489027	1		*			
ANR	489166	AdditiveExpression	y_height - 1		489027	0		-			
ANR	489167	Identifier	y_height		489027	0					
ANR	489168	PrimaryExpression	1		489027	1					
ANR	489169	Identifier	words_per_line		489027	1					
ANR	489170	Argument	y_width		489027	2					
ANR	489171	Identifier	y_width		489027	0					
ANR	489172	Argument	Y + ( y_height - 1 ) * y_stride		489027	3					
ANR	489173	AdditiveExpression	Y + ( y_height - 1 ) * y_stride		489027	0		+			
ANR	489174	Identifier	Y		489027	0					
ANR	489175	MultiplicativeExpression	( y_height - 1 ) * y_stride		489027	1		*			
ANR	489176	AdditiveExpression	y_height - 1		489027	0		-			
ANR	489177	Identifier	y_height		489027	0					
ANR	489178	PrimaryExpression	1		489027	1					
ANR	489179	Identifier	y_stride		489027	1					
ANR	489180	Argument	Y + ( y_height - 1 ) * y_stride		489027	4					
ANR	489181	AdditiveExpression	Y + ( y_height - 1 ) * y_stride		489027	0		+			
ANR	489182	Identifier	Y		489027	0					
ANR	489183	MultiplicativeExpression	( y_height - 1 ) * y_stride		489027	1		*			
ANR	489184	AdditiveExpression	y_height - 1		489027	0		-			
ANR	489185	Identifier	y_height		489027	0					
ANR	489186	PrimaryExpression	1		489027	1					
ANR	489187	Identifier	y_stride		489027	1					
ANR	489188	Argument	U + ( y_height >> 1 ) * uv_stride		489027	5					
ANR	489189	AdditiveExpression	U + ( y_height >> 1 ) * uv_stride		489027	0		+			
ANR	489190	Identifier	U		489027	0					
ANR	489191	MultiplicativeExpression	( y_height >> 1 ) * uv_stride		489027	1		*			
ANR	489192	ShiftExpression	y_height >> 1		489027	0		>>			
ANR	489193	Identifier	y_height		489027	0					
ANR	489194	PrimaryExpression	1		489027	1					
ANR	489195	Identifier	uv_stride		489027	1					
ANR	489196	Argument	V + ( y_height >> 1 ) * uv_stride		489027	6					
ANR	489197	AdditiveExpression	V + ( y_height >> 1 ) * uv_stride		489027	0		+			
ANR	489198	Identifier	V		489027	0					
ANR	489199	MultiplicativeExpression	( y_height >> 1 ) * uv_stride		489027	1		*			
ANR	489200	ShiftExpression	y_height >> 1		489027	0		>>			
ANR	489201	Identifier	y_height		489027	0					
ANR	489202	PrimaryExpression	1		489027	1					
ANR	489203	Identifier	uv_stride		489027	1					
ANR	489204	ReturnType	void		489027	1					
ANR	489205	Identifier	RGBAToYUV420		489027	2					
ANR	489206	ParameterList	"uint32 * pixdata , int words_per_line , int width , int height , uint8 * Y , uint8 * U , uint8 * V"		489027	3					
ANR	489207	Parameter	uint32 * pixdata	595:18:19021:19035	489027	0	True				
ANR	489208	ParameterType	uint32 *		489027	0					
ANR	489209	Identifier	pixdata		489027	1					
ANR	489210	Parameter	int words_per_line	596:18:19056:19073	489027	1	True				
ANR	489211	ParameterType	int		489027	0					
ANR	489212	Identifier	words_per_line		489027	1					
ANR	489213	Parameter	int width	597:18:19094:19102	489027	2	True				
ANR	489214	ParameterType	int		489027	0					
ANR	489215	Identifier	width		489027	1					
ANR	489216	Parameter	int height	598:18:19123:19132	489027	3	True				
ANR	489217	ParameterType	int		489027	0					
ANR	489218	Identifier	height		489027	1					
ANR	489219	Parameter	uint8 * Y	599:18:19153:19160	489027	4	True				
ANR	489220	ParameterType	uint8 *		489027	0					
ANR	489221	Identifier	Y		489027	1					
ANR	489222	Parameter	uint8 * U	600:18:19181:19188	489027	5	True				
ANR	489223	ParameterType	uint8 *		489027	0					
ANR	489224	Identifier	U		489027	1					
ANR	489225	Parameter	uint8 * V	601:18:19209:19216	489027	6	True				
ANR	489226	ParameterType	uint8 *		489027	0					
ANR	489227	Identifier	V		489027	1					
ANR	489228	CFGEntryNode	ENTRY		489027		True				
ANR	489229	CFGExitNode	EXIT		489027		True				
ANR	489230	Symbol	uv_stride		489027						
ANR	489231	Symbol	words_per_line		489027						
ANR	489232	Symbol	uv_width		489027						
ANR	489233	Symbol	y_width		489027						
ANR	489234	Symbol	y_stride		489027						
ANR	489235	Symbol	U		489027						
ANR	489236	Symbol	V		489027						
ANR	489237	Symbol	width		489027						
ANR	489238	Symbol	pixdata		489027						
ANR	489239	Symbol	Y		489027						
ANR	489240	Symbol	y		489027						
ANR	489241	Symbol	y_height		489027						
ANR	489242	Symbol	height		489027						
ANR	489243	Function	codec_ctl	629:0:20193:20467							
ANR	489244	FunctionDef	"codec_ctl (vpx_codec_ctx_t * enc , enum vp8e_enc_control_id id , int value)"		489243	0					
ANR	489245	CompoundStatement		631:32:20318:20467	489243	0					
ANR	489246	IdentifierDeclStatement	"const vpx_codec_err_t res = vpx_codec_control_ ( enc , id , value ) ;"	632:2:20322:20384	489243	0	True				
ANR	489247	IdentifierDecl	"res = vpx_codec_control_ ( enc , id , value )"		489243	0					
ANR	489248	IdentifierDeclType	const vpx_codec_err_t		489243	0					
ANR	489249	Identifier	res		489243	1					
ANR	489250	AssignmentExpression	"res = vpx_codec_control_ ( enc , id , value )"		489243	2		=			
ANR	489251	Identifier	res		489243	0					
ANR	489252	CallExpression	"vpx_codec_control_ ( enc , id , value )"		489243	1					
ANR	489253	Callee	vpx_codec_control_		489243	0					
ANR	489254	Identifier	vpx_codec_control_		489243	0					
ANR	489255	ArgumentList	enc		489243	1					
ANR	489256	Argument	enc		489243	0					
ANR	489257	Identifier	enc		489243	0					
ANR	489258	Argument	id		489243	1					
ANR	489259	Identifier	id		489243	0					
ANR	489260	Argument	value		489243	2					
ANR	489261	Identifier	value		489243	0					
ANR	489262	IfStatement	if ( res != VPX_CODEC_OK )		489243	1					
ANR	489263	Condition	res != VPX_CODEC_OK	633:6:20392:20410	489243	0	True				
ANR	489264	EqualityExpression	res != VPX_CODEC_OK		489243	0		!=			
ANR	489265	Identifier	res		489243	0					
ANR	489266	Identifier	VPX_CODEC_OK		489243	1					
ANR	489267	CompoundStatement		3:27:94:94	489243	1					
ANR	489268	ReturnStatement	return webp_failure ;	634:4:20419:20438	489243	0	True				
ANR	489269	Identifier	webp_failure		489243	0					
ANR	489270	ReturnStatement	return webp_success ;	636:2:20446:20465	489243	2	True				
ANR	489271	Identifier	webp_success		489243	0					
ANR	489272	ReturnType	static int		489243	1					
ANR	489273	Identifier	codec_ctl		489243	2					
ANR	489274	ParameterList	"vpx_codec_ctx_t * enc , enum vp8e_enc_control_id id , int value"		489243	3					
ANR	489275	Parameter	vpx_codec_ctx_t * enc	629:21:20214:20233	489243	0	True				
ANR	489276	ParameterType	vpx_codec_ctx_t *		489243	0					
ANR	489277	Identifier	enc		489243	1					
ANR	489278	Parameter	enum vp8e_enc_control_id id	630:21:20257:20283	489243	1	True				
ANR	489279	ParameterType	enum vp8e_enc_control_id		489243	0					
ANR	489280	Identifier	id		489243	1					
ANR	489281	Parameter	int value	631:21:20307:20315	489243	2	True				
ANR	489282	ParameterType	int		489243	0					
ANR	489283	Identifier	value		489243	1					
ANR	489284	CFGEntryNode	ENTRY		489243		True				
ANR	489285	CFGExitNode	EXIT		489243		True				
ANR	489286	Symbol	res		489243						
ANR	489287	Symbol	webp_success		489243						
ANR	489288	Symbol	enc		489243						
ANR	489289	Symbol	id		489243						
ANR	489290	Symbol	vpx_codec_control_		489243						
ANR	489291	Symbol	VPX_CODEC_OK		489243						
ANR	489292	Symbol	value		489243						
ANR	489293	Symbol	webp_failure		489243						
ANR	489294	Function	SetupParams	639:0:20470:20667							
ANR	489295	FunctionDef	"SetupParams (vpx_codec_enc_cfg_t * cfg , int QP)"		489294	0					
ANR	489296	CompoundStatement		640:32:20552:20667	489294	0					
ANR	489297	ExpressionStatement	cfg -> g_threads = 2	641:2:20556:20574	489294	0	True				
ANR	489298	AssignmentExpression	cfg -> g_threads = 2		489294	0		=			
ANR	489299	PtrMemberAccess	cfg -> g_threads		489294	0					
ANR	489300	Identifier	cfg		489294	0					
ANR	489301	Identifier	g_threads		489294	1					
ANR	489302	PrimaryExpression	2		489294	1					
ANR	489303	ExpressionStatement	cfg -> rc_min_quantizer = QP	642:2:20578:20604	489294	1	True				
ANR	489304	AssignmentExpression	cfg -> rc_min_quantizer = QP		489294	0		=			
ANR	489305	PtrMemberAccess	cfg -> rc_min_quantizer		489294	0					
ANR	489306	Identifier	cfg		489294	0					
ANR	489307	Identifier	rc_min_quantizer		489294	1					
ANR	489308	Identifier	QP		489294	1					
ANR	489309	ExpressionStatement	cfg -> rc_max_quantizer = QP	643:2:20608:20634	489294	2	True				
ANR	489310	AssignmentExpression	cfg -> rc_max_quantizer = QP		489294	0		=			
ANR	489311	PtrMemberAccess	cfg -> rc_max_quantizer		489294	0					
ANR	489312	Identifier	cfg		489294	0					
ANR	489313	Identifier	rc_max_quantizer		489294	1					
ANR	489314	Identifier	QP		489294	1					
ANR	489315	ExpressionStatement	cfg -> kf_mode = VPX_KF_FIXED	644:2:20638:20665	489294	3	True				
ANR	489316	AssignmentExpression	cfg -> kf_mode = VPX_KF_FIXED		489294	0		=			
ANR	489317	PtrMemberAccess	cfg -> kf_mode		489294	0					
ANR	489318	Identifier	cfg		489294	0					
ANR	489319	Identifier	kf_mode		489294	1					
ANR	489320	Identifier	VPX_KF_FIXED		489294	1					
ANR	489321	ReturnType	static void		489294	1					
ANR	489322	Identifier	SetupParams		489294	2					
ANR	489323	ParameterList	"vpx_codec_enc_cfg_t * cfg , int QP"		489294	3					
ANR	489324	Parameter	vpx_codec_enc_cfg_t * cfg	639:24:20494:20517	489294	0	True				
ANR	489325	ParameterType	vpx_codec_enc_cfg_t *		489294	0					
ANR	489326	Identifier	cfg		489294	1					
ANR	489327	Parameter	int QP	640:24:20544:20549	489294	1	True				
ANR	489328	ParameterType	int		489294	0					
ANR	489329	Identifier	QP		489294	1					
ANR	489330	CFGEntryNode	ENTRY		489294		True				
ANR	489331	CFGExitNode	EXIT		489294		True				
ANR	489332	Symbol	* cfg		489294						
ANR	489333	Symbol	cfg -> rc_min_quantizer		489294						
ANR	489334	Symbol	cfg -> rc_max_quantizer		489294						
ANR	489335	Symbol	cfg		489294						
ANR	489336	Symbol	cfg -> kf_mode		489294						
ANR	489337	Symbol	cfg -> g_threads		489294						
ANR	489338	Symbol	VPX_KF_FIXED		489294						
ANR	489339	Symbol	QP		489294						
ANR	489340	Function	VPXEncode	655:0:21075:23818							
ANR	489341	FunctionDef	"VPXEncode (const uint8 * Y , const uint8 * U , const uint8 * V , int y_width , int y_height , int y_stride , int uv_width , int uv_height , int uv_stride , int QP , int container_size , unsigned char * * p_out , int * p_out_size_bytes)"		489340	0					
ANR	489342	CompoundStatement		667:51:21646:23818	489340	0					
ANR	489343	IdentifierDeclStatement	vpx_codec_iface_t * iface = & vpx_codec_vp8_cx_algo ;	668:2:21650:21699	489340	0	True				
ANR	489344	IdentifierDecl	* iface = & vpx_codec_vp8_cx_algo		489340	0					
ANR	489345	IdentifierDeclType	vpx_codec_iface_t *		489340	0					
ANR	489346	Identifier	iface		489340	1					
ANR	489347	AssignmentExpression	* iface = & vpx_codec_vp8_cx_algo		489340	2		=			
ANR	489348	Identifier	iface		489340	0					
ANR	489349	UnaryOperationExpression	& vpx_codec_vp8_cx_algo		489340	1					
ANR	489350	UnaryOperator	&		489340	0					
ANR	489351	Identifier	vpx_codec_vp8_cx_algo		489340	1					
ANR	489352	IdentifierDeclStatement	vpx_codec_err_t res ;	669:2:21703:21722	489340	1	True				
ANR	489353	IdentifierDecl	res		489340	0					
ANR	489354	IdentifierDeclType	vpx_codec_err_t		489340	0					
ANR	489355	Identifier	res		489340	1					
ANR	489356	IdentifierDeclStatement	vpx_codec_enc_cfg_t cfg ;	670:2:21726:21749	489340	2	True				
ANR	489357	IdentifierDecl	cfg		489340	0					
ANR	489358	IdentifierDeclType	vpx_codec_enc_cfg_t		489340	0					
ANR	489359	Identifier	cfg		489340	1					
ANR	489360	IdentifierDeclStatement	vpx_codec_ctx_t enc ;	671:2:21753:21772	489340	3	True				
ANR	489361	IdentifierDecl	enc		489340	0					
ANR	489362	IdentifierDeclType	vpx_codec_ctx_t		489340	0					
ANR	489363	Identifier	enc		489340	1					
ANR	489364	IdentifierDeclStatement	WebPResult result = webp_failure ;	672:2:21776:21808	489340	4	True				
ANR	489365	IdentifierDecl	result = webp_failure		489340	0					
ANR	489366	IdentifierDeclType	WebPResult		489340	0					
ANR	489367	Identifier	result		489340	1					
ANR	489368	AssignmentExpression	result = webp_failure		489340	2		=			
ANR	489369	Identifier	webp_failure		489340	0					
ANR	489370	Identifier	webp_failure		489340	1					
ANR	489371	IdentifierDeclStatement	vpx_image_t img ;	673:2:21812:21827	489340	5	True				
ANR	489372	IdentifierDecl	img		489340	0					
ANR	489373	IdentifierDeclType	vpx_image_t		489340	0					
ANR	489374	Identifier	img		489340	1					
ANR	489375	ExpressionStatement	* p_out = NULL	675:2:21832:21845	489340	6	True				
ANR	489376	AssignmentExpression	* p_out = NULL		489340	0		=			
ANR	489377	UnaryOperationExpression	* p_out		489340	0					
ANR	489378	UnaryOperator	*		489340	0					
ANR	489379	Identifier	p_out		489340	1					
ANR	489380	Identifier	NULL		489340	1					
ANR	489381	ExpressionStatement	* p_out_size_bytes = 0	676:2:21849:21870	489340	7	True				
ANR	489382	AssignmentExpression	* p_out_size_bytes = 0		489340	0		=			
ANR	489383	UnaryOperationExpression	* p_out_size_bytes		489340	0					
ANR	489384	UnaryOperator	*		489340	0					
ANR	489385	Identifier	p_out_size_bytes		489340	1					
ANR	489386	PrimaryExpression	0		489340	1					
ANR	489387	IfStatement	if ( ! p_out || ! Y || ! U || ! V || y_width <= 0 || y_height <= 0 || uv_width <= 0 || uv_height <= 0 || y_stride < y_width || uv_stride < uv_width || QP < 0 || QP > 63 )		489340	8					
ANR	489388	Condition	! p_out || ! Y || ! U || ! V || y_width <= 0 || y_height <= 0 || uv_width <= 0 || uv_height <= 0 || y_stride < y_width || uv_stride < uv_width || QP < 0 || QP > 63	680:6:21915:22091	489340	0	True				
ANR	489389	OrExpression	! p_out || ! Y || ! U || ! V || y_width <= 0 || y_height <= 0 || uv_width <= 0 || uv_height <= 0 || y_stride < y_width || uv_stride < uv_width || QP < 0 || QP > 63		489340	0		||			
ANR	489390	UnaryOperationExpression	! p_out		489340	0					
ANR	489391	UnaryOperator	!		489340	0					
ANR	489392	Identifier	p_out		489340	1					
ANR	489393	OrExpression	! Y || ! U || ! V || y_width <= 0 || y_height <= 0 || uv_width <= 0 || uv_height <= 0 || y_stride < y_width || uv_stride < uv_width || QP < 0 || QP > 63		489340	1		||			
ANR	489394	UnaryOperationExpression	! Y		489340	0					
ANR	489395	UnaryOperator	!		489340	0					
ANR	489396	Identifier	Y		489340	1					
ANR	489397	OrExpression	! U || ! V || y_width <= 0 || y_height <= 0 || uv_width <= 0 || uv_height <= 0 || y_stride < y_width || uv_stride < uv_width || QP < 0 || QP > 63		489340	1		||			
ANR	489398	UnaryOperationExpression	! U		489340	0					
ANR	489399	UnaryOperator	!		489340	0					
ANR	489400	Identifier	U		489340	1					
ANR	489401	OrExpression	! V || y_width <= 0 || y_height <= 0 || uv_width <= 0 || uv_height <= 0 || y_stride < y_width || uv_stride < uv_width || QP < 0 || QP > 63		489340	1		||			
ANR	489402	UnaryOperationExpression	! V		489340	0					
ANR	489403	UnaryOperator	!		489340	0					
ANR	489404	Identifier	V		489340	1					
ANR	489405	OrExpression	y_width <= 0 || y_height <= 0 || uv_width <= 0 || uv_height <= 0 || y_stride < y_width || uv_stride < uv_width || QP < 0 || QP > 63		489340	1		||			
ANR	489406	RelationalExpression	y_width <= 0		489340	0		<=			
ANR	489407	Identifier	y_width		489340	0					
ANR	489408	PrimaryExpression	0		489340	1					
ANR	489409	OrExpression	y_height <= 0 || uv_width <= 0 || uv_height <= 0 || y_stride < y_width || uv_stride < uv_width || QP < 0 || QP > 63		489340	1		||			
ANR	489410	RelationalExpression	y_height <= 0		489340	0		<=			
ANR	489411	Identifier	y_height		489340	0					
ANR	489412	PrimaryExpression	0		489340	1					
ANR	489413	OrExpression	uv_width <= 0 || uv_height <= 0 || y_stride < y_width || uv_stride < uv_width || QP < 0 || QP > 63		489340	1		||			
ANR	489414	RelationalExpression	uv_width <= 0		489340	0		<=			
ANR	489415	Identifier	uv_width		489340	0					
ANR	489416	PrimaryExpression	0		489340	1					
ANR	489417	OrExpression	uv_height <= 0 || y_stride < y_width || uv_stride < uv_width || QP < 0 || QP > 63		489340	1		||			
ANR	489418	RelationalExpression	uv_height <= 0		489340	0		<=			
ANR	489419	Identifier	uv_height		489340	0					
ANR	489420	PrimaryExpression	0		489340	1					
ANR	489421	OrExpression	y_stride < y_width || uv_stride < uv_width || QP < 0 || QP > 63		489340	1		||			
ANR	489422	RelationalExpression	y_stride < y_width		489340	0		<			
ANR	489423	Identifier	y_stride		489340	0					
ANR	489424	Identifier	y_width		489340	1					
ANR	489425	OrExpression	uv_stride < uv_width || QP < 0 || QP > 63		489340	1		||			
ANR	489426	RelationalExpression	uv_stride < uv_width		489340	0		<			
ANR	489427	Identifier	uv_stride		489340	0					
ANR	489428	Identifier	uv_width		489340	1					
ANR	489429	OrExpression	QP < 0 || QP > 63		489340	1		||			
ANR	489430	RelationalExpression	QP < 0		489340	0		<			
ANR	489431	Identifier	QP		489340	0					
ANR	489432	PrimaryExpression	0		489340	1					
ANR	489433	RelationalExpression	QP > 63		489340	1		>			
ANR	489434	Identifier	QP		489340	0					
ANR	489435	PrimaryExpression	63		489340	1					
ANR	489436	CompoundStatement		17:28:447:447	489340	1					
ANR	489437	ReturnStatement	return webp_failure ;	684:4:22100:22119	489340	0	True				
ANR	489438	Identifier	webp_failure		489340	0					
ANR	489439	ExpressionStatement	"res = vpx_codec_enc_config_default ( iface , & cfg , 0 )"	687:2:22128:22178	489340	9	True				
ANR	489440	AssignmentExpression	"res = vpx_codec_enc_config_default ( iface , & cfg , 0 )"		489340	0		=			
ANR	489441	Identifier	res		489340	0					
ANR	489442	CallExpression	"vpx_codec_enc_config_default ( iface , & cfg , 0 )"		489340	1					
ANR	489443	Callee	vpx_codec_enc_config_default		489340	0					
ANR	489444	Identifier	vpx_codec_enc_config_default		489340	0					
ANR	489445	ArgumentList	iface		489340	1					
ANR	489446	Argument	iface		489340	0					
ANR	489447	Identifier	iface		489340	0					
ANR	489448	Argument	& cfg		489340	1					
ANR	489449	UnaryOperationExpression	& cfg		489340	0					
ANR	489450	UnaryOperator	&		489340	0					
ANR	489451	Identifier	cfg		489340	1					
ANR	489452	Argument	0		489340	2					
ANR	489453	PrimaryExpression	0		489340	0					
ANR	489454	IfStatement	if ( res != VPX_CODEC_OK )		489340	10					
ANR	489455	Condition	res != VPX_CODEC_OK	688:6:22186:22204	489340	0	True				
ANR	489456	EqualityExpression	res != VPX_CODEC_OK		489340	0		!=			
ANR	489457	Identifier	res		489340	0					
ANR	489458	Identifier	VPX_CODEC_OK		489340	1					
ANR	489459	CompoundStatement		22:27:560:560	489340	1					
ANR	489460	ReturnStatement	return webp_failure ;	689:4:22213:22232	489340	0	True				
ANR	489461	Identifier	webp_failure		489340	0					
ANR	489462	ExpressionStatement	"SetupParams ( & cfg , QP )"	692:2:22241:22262	489340	11	True				
ANR	489463	CallExpression	"SetupParams ( & cfg , QP )"		489340	0					
ANR	489464	Callee	SetupParams		489340	0					
ANR	489465	Identifier	SetupParams		489340	0					
ANR	489466	ArgumentList	& cfg		489340	1					
ANR	489467	Argument	& cfg		489340	0					
ANR	489468	UnaryOperationExpression	& cfg		489340	0					
ANR	489469	UnaryOperator	&		489340	0					
ANR	489470	Identifier	cfg		489340	1					
ANR	489471	Argument	QP		489340	1					
ANR	489472	Identifier	QP		489340	0					
ANR	489473	ExpressionStatement	cfg . g_w = y_width	693:2:22266:22283	489340	12	True				
ANR	489474	AssignmentExpression	cfg . g_w = y_width		489340	0		=			
ANR	489475	MemberAccess	cfg . g_w		489340	0					
ANR	489476	Identifier	cfg		489340	0					
ANR	489477	Identifier	g_w		489340	1					
ANR	489478	Identifier	y_width		489340	1					
ANR	489479	ExpressionStatement	cfg . g_h = y_height	694:2:22287:22305	489340	13	True				
ANR	489480	AssignmentExpression	cfg . g_h = y_height		489340	0		=			
ANR	489481	MemberAccess	cfg . g_h		489340	0					
ANR	489482	Identifier	cfg		489340	0					
ANR	489483	Identifier	g_h		489340	1					
ANR	489484	Identifier	y_height		489340	1					
ANR	489485	ExpressionStatement	"res = vpx_codec_enc_init ( & enc , iface , & cfg , 0 )"	696:2:22310:22356	489340	14	True				
ANR	489486	AssignmentExpression	"res = vpx_codec_enc_init ( & enc , iface , & cfg , 0 )"		489340	0		=			
ANR	489487	Identifier	res		489340	0					
ANR	489488	CallExpression	"vpx_codec_enc_init ( & enc , iface , & cfg , 0 )"		489340	1					
ANR	489489	Callee	vpx_codec_enc_init		489340	0					
ANR	489490	Identifier	vpx_codec_enc_init		489340	0					
ANR	489491	ArgumentList	& enc		489340	1					
ANR	489492	Argument	& enc		489340	0					
ANR	489493	UnaryOperationExpression	& enc		489340	0					
ANR	489494	UnaryOperator	&		489340	0					
ANR	489495	Identifier	enc		489340	1					
ANR	489496	Argument	iface		489340	1					
ANR	489497	Identifier	iface		489340	0					
ANR	489498	Argument	& cfg		489340	2					
ANR	489499	UnaryOperationExpression	& cfg		489340	0					
ANR	489500	UnaryOperator	&		489340	0					
ANR	489501	Identifier	cfg		489340	1					
ANR	489502	Argument	0		489340	3					
ANR	489503	PrimaryExpression	0		489340	0					
ANR	489504	IfStatement	if ( res == VPX_CODEC_OK )		489340	15					
ANR	489505	Condition	res == VPX_CODEC_OK	698:6:22365:22383	489340	0	True				
ANR	489506	EqualityExpression	res == VPX_CODEC_OK		489340	0		==			
ANR	489507	Identifier	res		489340	0					
ANR	489508	Identifier	VPX_CODEC_OK		489340	1					
ANR	489509	CompoundStatement		32:27:739:739	489340	1					
ANR	489510	ExpressionStatement	"codec_ctl ( & enc , VP8E_SET_CPUUSED , 3 )"	699:4:22392:22428	489340	0	True				
ANR	489511	CallExpression	"codec_ctl ( & enc , VP8E_SET_CPUUSED , 3 )"		489340	0					
ANR	489512	Callee	codec_ctl		489340	0					
ANR	489513	Identifier	codec_ctl		489340	0					
ANR	489514	ArgumentList	& enc		489340	1					
ANR	489515	Argument	& enc		489340	0					
ANR	489516	UnaryOperationExpression	& enc		489340	0					
ANR	489517	UnaryOperator	&		489340	0					
ANR	489518	Identifier	enc		489340	1					
ANR	489519	Argument	VP8E_SET_CPUUSED		489340	1					
ANR	489520	Identifier	VP8E_SET_CPUUSED		489340	0					
ANR	489521	Argument	3		489340	2					
ANR	489522	PrimaryExpression	3		489340	0					
ANR	489523	ExpressionStatement	"codec_ctl ( & enc , VP8E_SET_NOISE_SENSITIVITY , 0 )"	700:4:22434:22480	489340	1	True				
ANR	489524	CallExpression	"codec_ctl ( & enc , VP8E_SET_NOISE_SENSITIVITY , 0 )"		489340	0					
ANR	489525	Callee	codec_ctl		489340	0					
ANR	489526	Identifier	codec_ctl		489340	0					
ANR	489527	ArgumentList	& enc		489340	1					
ANR	489528	Argument	& enc		489340	0					
ANR	489529	UnaryOperationExpression	& enc		489340	0					
ANR	489530	UnaryOperator	&		489340	0					
ANR	489531	Identifier	enc		489340	1					
ANR	489532	Argument	VP8E_SET_NOISE_SENSITIVITY		489340	1					
ANR	489533	Identifier	VP8E_SET_NOISE_SENSITIVITY		489340	0					
ANR	489534	Argument	0		489340	2					
ANR	489535	PrimaryExpression	0		489340	0					
ANR	489536	ExpressionStatement	"codec_ctl ( & enc , VP8E_SET_SHARPNESS , 0 )"	701:4:22486:22524	489340	2	True				
ANR	489537	CallExpression	"codec_ctl ( & enc , VP8E_SET_SHARPNESS , 0 )"		489340	0					
ANR	489538	Callee	codec_ctl		489340	0					
ANR	489539	Identifier	codec_ctl		489340	0					
ANR	489540	ArgumentList	& enc		489340	1					
ANR	489541	Argument	& enc		489340	0					
ANR	489542	UnaryOperationExpression	& enc		489340	0					
ANR	489543	UnaryOperator	&		489340	0					
ANR	489544	Identifier	enc		489340	1					
ANR	489545	Argument	VP8E_SET_SHARPNESS		489340	1					
ANR	489546	Identifier	VP8E_SET_SHARPNESS		489340	0					
ANR	489547	Argument	0		489340	2					
ANR	489548	PrimaryExpression	0		489340	0					
ANR	489549	ExpressionStatement	"codec_ctl ( & enc , VP8E_SET_ENABLEAUTOALTREF , 0 )"	702:4:22530:22575	489340	3	True				
ANR	489550	CallExpression	"codec_ctl ( & enc , VP8E_SET_ENABLEAUTOALTREF , 0 )"		489340	0					
ANR	489551	Callee	codec_ctl		489340	0					
ANR	489552	Identifier	codec_ctl		489340	0					
ANR	489553	ArgumentList	& enc		489340	1					
ANR	489554	Argument	& enc		489340	0					
ANR	489555	UnaryOperationExpression	& enc		489340	0					
ANR	489556	UnaryOperator	&		489340	0					
ANR	489557	Identifier	enc		489340	1					
ANR	489558	Argument	VP8E_SET_ENABLEAUTOALTREF		489340	1					
ANR	489559	Identifier	VP8E_SET_ENABLEAUTOALTREF		489340	0					
ANR	489560	Argument	0		489340	2					
ANR	489561	PrimaryExpression	0		489340	0					
ANR	489562	ExpressionStatement	"codec_ctl ( & enc , VP8E_SET_ARNR_MAXFRAMES , 0 )"	703:4:22581:22624	489340	4	True				
ANR	489563	CallExpression	"codec_ctl ( & enc , VP8E_SET_ARNR_MAXFRAMES , 0 )"		489340	0					
ANR	489564	Callee	codec_ctl		489340	0					
ANR	489565	Identifier	codec_ctl		489340	0					
ANR	489566	ArgumentList	& enc		489340	1					
ANR	489567	Argument	& enc		489340	0					
ANR	489568	UnaryOperationExpression	& enc		489340	0					
ANR	489569	UnaryOperator	&		489340	0					
ANR	489570	Identifier	enc		489340	1					
ANR	489571	Argument	VP8E_SET_ARNR_MAXFRAMES		489340	1					
ANR	489572	Identifier	VP8E_SET_ARNR_MAXFRAMES		489340	0					
ANR	489573	Argument	0		489340	2					
ANR	489574	PrimaryExpression	0		489340	0					
ANR	489575	ExpressionStatement	"codec_ctl ( & enc , VP8E_SET_ARNR_TYPE , 0 )"	704:4:22630:22668	489340	5	True				
ANR	489576	CallExpression	"codec_ctl ( & enc , VP8E_SET_ARNR_TYPE , 0 )"		489340	0					
ANR	489577	Callee	codec_ctl		489340	0					
ANR	489578	Identifier	codec_ctl		489340	0					
ANR	489579	ArgumentList	& enc		489340	1					
ANR	489580	Argument	& enc		489340	0					
ANR	489581	UnaryOperationExpression	& enc		489340	0					
ANR	489582	UnaryOperator	&		489340	0					
ANR	489583	Identifier	enc		489340	1					
ANR	489584	Argument	VP8E_SET_ARNR_TYPE		489340	1					
ANR	489585	Identifier	VP8E_SET_ARNR_TYPE		489340	0					
ANR	489586	Argument	0		489340	2					
ANR	489587	PrimaryExpression	0		489340	0					
ANR	489588	ExpressionStatement	"codec_ctl ( & enc , VP8E_SET_ARNR_STRENGTH , 0 )"	705:4:22674:22716	489340	6	True				
ANR	489589	CallExpression	"codec_ctl ( & enc , VP8E_SET_ARNR_STRENGTH , 0 )"		489340	0					
ANR	489590	Callee	codec_ctl		489340	0					
ANR	489591	Identifier	codec_ctl		489340	0					
ANR	489592	ArgumentList	& enc		489340	1					
ANR	489593	Argument	& enc		489340	0					
ANR	489594	UnaryOperationExpression	& enc		489340	0					
ANR	489595	UnaryOperator	&		489340	0					
ANR	489596	Identifier	enc		489340	1					
ANR	489597	Argument	VP8E_SET_ARNR_STRENGTH		489340	1					
ANR	489598	Identifier	VP8E_SET_ARNR_STRENGTH		489340	0					
ANR	489599	Argument	0		489340	2					
ANR	489600	PrimaryExpression	0		489340	0					
ANR	489601	ExpressionStatement	"codec_ctl ( & enc , VP8E_SET_STATIC_THRESHOLD , 0 )"	706:4:22722:22767	489340	7	True				
ANR	489602	CallExpression	"codec_ctl ( & enc , VP8E_SET_STATIC_THRESHOLD , 0 )"		489340	0					
ANR	489603	Callee	codec_ctl		489340	0					
ANR	489604	Identifier	codec_ctl		489340	0					
ANR	489605	ArgumentList	& enc		489340	1					
ANR	489606	Argument	& enc		489340	0					
ANR	489607	UnaryOperationExpression	& enc		489340	0					
ANR	489608	UnaryOperator	&		489340	0					
ANR	489609	Identifier	enc		489340	1					
ANR	489610	Argument	VP8E_SET_STATIC_THRESHOLD		489340	1					
ANR	489611	Identifier	VP8E_SET_STATIC_THRESHOLD		489340	0					
ANR	489612	Argument	0		489340	2					
ANR	489613	PrimaryExpression	0		489340	0					
ANR	489614	ExpressionStatement	"codec_ctl ( & enc , VP8E_SET_TOKEN_PARTITIONS , 2 )"	707:4:22773:22818	489340	8	True				
ANR	489615	CallExpression	"codec_ctl ( & enc , VP8E_SET_TOKEN_PARTITIONS , 2 )"		489340	0					
ANR	489616	Callee	codec_ctl		489340	0					
ANR	489617	Identifier	codec_ctl		489340	0					
ANR	489618	ArgumentList	& enc		489340	1					
ANR	489619	Argument	& enc		489340	0					
ANR	489620	UnaryOperationExpression	& enc		489340	0					
ANR	489621	UnaryOperator	&		489340	0					
ANR	489622	Identifier	enc		489340	1					
ANR	489623	Argument	VP8E_SET_TOKEN_PARTITIONS		489340	1					
ANR	489624	Identifier	VP8E_SET_TOKEN_PARTITIONS		489340	0					
ANR	489625	Argument	2		489340	2					
ANR	489626	PrimaryExpression	2		489340	0					
ANR	489627	ExpressionStatement	"vpx_img_wrap ( & img , VPX_IMG_FMT_I420 , y_width , y_height , 16 , ( uint8 * ) ( Y ) )"	709:4:22825:22914	489340	9	True				
ANR	489628	CallExpression	"vpx_img_wrap ( & img , VPX_IMG_FMT_I420 , y_width , y_height , 16 , ( uint8 * ) ( Y ) )"		489340	0					
ANR	489629	Callee	vpx_img_wrap		489340	0					
ANR	489630	Identifier	vpx_img_wrap		489340	0					
ANR	489631	ArgumentList	& img		489340	1					
ANR	489632	Argument	& img		489340	0					
ANR	489633	UnaryOperationExpression	& img		489340	0					
ANR	489634	UnaryOperator	&		489340	0					
ANR	489635	Identifier	img		489340	1					
ANR	489636	Argument	VPX_IMG_FMT_I420		489340	1					
ANR	489637	Identifier	VPX_IMG_FMT_I420		489340	0					
ANR	489638	Argument	y_width		489340	2					
ANR	489639	Identifier	y_width		489340	0					
ANR	489640	Argument	y_height		489340	3					
ANR	489641	Identifier	y_height		489340	0					
ANR	489642	Argument	16		489340	4					
ANR	489643	PrimaryExpression	16		489340	0					
ANR	489644	Argument	( uint8 * ) ( Y )		489340	5					
ANR	489645	CastExpression	( uint8 * ) ( Y )		489340	0					
ANR	489646	CastTarget	uint8 *		489340	0					
ANR	489647	Identifier	Y		489340	1					
ANR	489648	ExpressionStatement	img . planes [ VPX_PLANE_Y ] = ( uint8 * ) ( Y )	711:4:22920:22957	489340	10	True				
ANR	489649	AssignmentExpression	img . planes [ VPX_PLANE_Y ] = ( uint8 * ) ( Y )		489340	0		=			
ANR	489650	ArrayIndexing	img . planes [ VPX_PLANE_Y ]		489340	0					
ANR	489651	MemberAccess	img . planes		489340	0					
ANR	489652	Identifier	img		489340	0					
ANR	489653	Identifier	planes		489340	1					
ANR	489654	Identifier	VPX_PLANE_Y		489340	1					
ANR	489655	CastExpression	( uint8 * ) ( Y )		489340	1					
ANR	489656	CastTarget	uint8 *		489340	0					
ANR	489657	Identifier	Y		489340	1					
ANR	489658	ExpressionStatement	img . planes [ VPX_PLANE_U ] = ( uint8 * ) ( U )	712:4:22963:23000	489340	11	True				
ANR	489659	AssignmentExpression	img . planes [ VPX_PLANE_U ] = ( uint8 * ) ( U )		489340	0		=			
ANR	489660	ArrayIndexing	img . planes [ VPX_PLANE_U ]		489340	0					
ANR	489661	MemberAccess	img . planes		489340	0					
ANR	489662	Identifier	img		489340	0					
ANR	489663	Identifier	planes		489340	1					
ANR	489664	Identifier	VPX_PLANE_U		489340	1					
ANR	489665	CastExpression	( uint8 * ) ( U )		489340	1					
ANR	489666	CastTarget	uint8 *		489340	0					
ANR	489667	Identifier	U		489340	1					
ANR	489668	ExpressionStatement	img . planes [ VPX_PLANE_V ] = ( uint8 * ) ( V )	713:4:23006:23043	489340	12	True				
ANR	489669	AssignmentExpression	img . planes [ VPX_PLANE_V ] = ( uint8 * ) ( V )		489340	0		=			
ANR	489670	ArrayIndexing	img . planes [ VPX_PLANE_V ]		489340	0					
ANR	489671	MemberAccess	img . planes		489340	0					
ANR	489672	Identifier	img		489340	0					
ANR	489673	Identifier	planes		489340	1					
ANR	489674	Identifier	VPX_PLANE_V		489340	1					
ANR	489675	CastExpression	( uint8 * ) ( V )		489340	1					
ANR	489676	CastTarget	uint8 *		489340	0					
ANR	489677	Identifier	V		489340	1					
ANR	489678	ExpressionStatement	img . stride [ VPX_PLANE_Y ] = y_stride	714:4:23049:23083	489340	13	True				
ANR	489679	AssignmentExpression	img . stride [ VPX_PLANE_Y ] = y_stride		489340	0		=			
ANR	489680	ArrayIndexing	img . stride [ VPX_PLANE_Y ]		489340	0					
ANR	489681	MemberAccess	img . stride		489340	0					
ANR	489682	Identifier	img		489340	0					
ANR	489683	Identifier	stride		489340	1					
ANR	489684	Identifier	VPX_PLANE_Y		489340	1					
ANR	489685	Identifier	y_stride		489340	1					
ANR	489686	ExpressionStatement	img . stride [ VPX_PLANE_U ] = uv_stride	715:4:23089:23124	489340	14	True				
ANR	489687	AssignmentExpression	img . stride [ VPX_PLANE_U ] = uv_stride		489340	0		=			
ANR	489688	ArrayIndexing	img . stride [ VPX_PLANE_U ]		489340	0					
ANR	489689	MemberAccess	img . stride		489340	0					
ANR	489690	Identifier	img		489340	0					
ANR	489691	Identifier	stride		489340	1					
ANR	489692	Identifier	VPX_PLANE_U		489340	1					
ANR	489693	Identifier	uv_stride		489340	1					
ANR	489694	ExpressionStatement	img . stride [ VPX_PLANE_V ] = uv_stride	716:4:23130:23165	489340	15	True				
ANR	489695	AssignmentExpression	img . stride [ VPX_PLANE_V ] = uv_stride		489340	0		=			
ANR	489696	ArrayIndexing	img . stride [ VPX_PLANE_V ]		489340	0					
ANR	489697	MemberAccess	img . stride		489340	0					
ANR	489698	Identifier	img		489340	0					
ANR	489699	Identifier	stride		489340	1					
ANR	489700	Identifier	VPX_PLANE_V		489340	1					
ANR	489701	Identifier	uv_stride		489340	1					
ANR	489702	ExpressionStatement	"res = vpx_codec_encode ( & enc , & img , 0 , 1 , 0 , VPX_DL_BEST_QUALITY )"	718:4:23172:23236	489340	16	True				
ANR	489703	AssignmentExpression	"res = vpx_codec_encode ( & enc , & img , 0 , 1 , 0 , VPX_DL_BEST_QUALITY )"		489340	0		=			
ANR	489704	Identifier	res		489340	0					
ANR	489705	CallExpression	"vpx_codec_encode ( & enc , & img , 0 , 1 , 0 , VPX_DL_BEST_QUALITY )"		489340	1					
ANR	489706	Callee	vpx_codec_encode		489340	0					
ANR	489707	Identifier	vpx_codec_encode		489340	0					
ANR	489708	ArgumentList	& enc		489340	1					
ANR	489709	Argument	& enc		489340	0					
ANR	489710	UnaryOperationExpression	& enc		489340	0					
ANR	489711	UnaryOperator	&		489340	0					
ANR	489712	Identifier	enc		489340	1					
ANR	489713	Argument	& img		489340	1					
ANR	489714	UnaryOperationExpression	& img		489340	0					
ANR	489715	UnaryOperator	&		489340	0					
ANR	489716	Identifier	img		489340	1					
ANR	489717	Argument	0		489340	2					
ANR	489718	PrimaryExpression	0		489340	0					
ANR	489719	Argument	1		489340	3					
ANR	489720	PrimaryExpression	1		489340	0					
ANR	489721	Argument	0		489340	4					
ANR	489722	PrimaryExpression	0		489340	0					
ANR	489723	Argument	VPX_DL_BEST_QUALITY		489340	5					
ANR	489724	Identifier	VPX_DL_BEST_QUALITY		489340	0					
ANR	489725	IfStatement	if ( res == VPX_CODEC_OK )		489340	17					
ANR	489726	Condition	res == VPX_CODEC_OK	720:8:23247:23265	489340	0	True				
ANR	489727	EqualityExpression	res == VPX_CODEC_OK		489340	0		==			
ANR	489728	Identifier	res		489340	0					
ANR	489729	Identifier	VPX_CODEC_OK		489340	1					
ANR	489730	CompoundStatement		56:6:1665:1731	489340	1					
ANR	489731	IdentifierDeclStatement	vpx_codec_iter_t iter = NULL ;	721:6:23276:23304	489340	0	True				
ANR	489732	IdentifierDecl	iter = NULL		489340	0					
ANR	489733	IdentifierDeclType	vpx_codec_iter_t		489340	0					
ANR	489734	Identifier	iter		489340	1					
ANR	489735	AssignmentExpression	iter = NULL		489340	2		=			
ANR	489736	Identifier	NULL		489340	0					
ANR	489737	Identifier	NULL		489340	1					
ANR	489738	IdentifierDeclStatement	"const vpx_codec_cx_pkt_t * pkt = vpx_codec_get_cx_data ( & enc , & iter ) ;"	722:6:23312:23378	489340	1	True				
ANR	489739	IdentifierDecl	"* pkt = vpx_codec_get_cx_data ( & enc , & iter )"		489340	0					
ANR	489740	IdentifierDeclType	const vpx_codec_cx_pkt_t *		489340	0					
ANR	489741	Identifier	pkt		489340	1					
ANR	489742	AssignmentExpression	"* pkt = vpx_codec_get_cx_data ( & enc , & iter )"		489340	2		=			
ANR	489743	Identifier	pkt		489340	0					
ANR	489744	CallExpression	"vpx_codec_get_cx_data ( & enc , & iter )"		489340	1					
ANR	489745	Callee	vpx_codec_get_cx_data		489340	0					
ANR	489746	Identifier	vpx_codec_get_cx_data		489340	0					
ANR	489747	ArgumentList	& enc		489340	1					
ANR	489748	Argument	& enc		489340	0					
ANR	489749	UnaryOperationExpression	& enc		489340	0					
ANR	489750	UnaryOperator	&		489340	0					
ANR	489751	Identifier	enc		489340	1					
ANR	489752	Argument	& iter		489340	1					
ANR	489753	UnaryOperationExpression	& iter		489340	0					
ANR	489754	UnaryOperator	&		489340	0					
ANR	489755	Identifier	iter		489340	1					
ANR	489756	IfStatement	if ( pkt != NULL )		489340	2					
ANR	489757	Condition	pkt != NULL	723:10:23390:23400	489340	0	True				
ANR	489758	EqualityExpression	pkt != NULL		489340	0		!=			
ANR	489759	Identifier	pkt		489340	0					
ANR	489760	Identifier	NULL		489340	1					
ANR	489761	CompoundStatement		57:23:1756:1756	489340	1					
ANR	489762	ExpressionStatement	"* p_out = ( unsigned char * ) ( calloc ( container_size + pkt -> data . frame . sz , 1 ) )"	724:8:23413:23527	489340	0	True				
ANR	489763	AssignmentExpression	"* p_out = ( unsigned char * ) ( calloc ( container_size + pkt -> data . frame . sz , 1 ) )"		489340	0		=			
ANR	489764	UnaryOperationExpression	* p_out		489340	0					
ANR	489765	UnaryOperator	*		489340	0					
ANR	489766	Identifier	p_out		489340	1					
ANR	489767	CastExpression	"( unsigned char * ) ( calloc ( container_size + pkt -> data . frame . sz , 1 ) )"		489340	1					
ANR	489768	CastTarget	unsigned char *		489340	0					
ANR	489769	CallExpression	"calloc ( container_size + pkt -> data . frame . sz , 1 )"		489340	1					
ANR	489770	Callee	calloc		489340	0					
ANR	489771	Identifier	calloc		489340	0					
ANR	489772	ArgumentList	container_size + pkt -> data . frame . sz		489340	1					
ANR	489773	Argument	container_size + pkt -> data . frame . sz		489340	0					
ANR	489774	AdditiveExpression	container_size + pkt -> data . frame . sz		489340	0		+			
ANR	489775	Identifier	container_size		489340	0					
ANR	489776	MemberAccess	pkt -> data . frame . sz		489340	1					
ANR	489777	MemberAccess	pkt -> data . frame		489340	0					
ANR	489778	PtrMemberAccess	pkt -> data		489340	0					
ANR	489779	Identifier	pkt		489340	0					
ANR	489780	Identifier	data		489340	1					
ANR	489781	Identifier	frame		489340	1					
ANR	489782	Identifier	sz		489340	1					
ANR	489783	Argument	1		489340	1					
ANR	489784	PrimaryExpression	1		489340	0					
ANR	489785	ExpressionStatement	"memcpy ( * p_out + container_size , ( const void * ) ( pkt -> data . frame . buf ) , pkt -> data . frame . sz )"	727:8:23538:23655	489340	1	True				
ANR	489786	CallExpression	"memcpy ( * p_out + container_size , ( const void * ) ( pkt -> data . frame . buf ) , pkt -> data . frame . sz )"		489340	0					
ANR	489787	Callee	memcpy		489340	0					
ANR	489788	Identifier	memcpy		489340	0					
ANR	489789	ArgumentList	* p_out + container_size		489340	1					
ANR	489790	Argument	* p_out + container_size		489340	0					
ANR	489791	AdditiveExpression	* p_out + container_size		489340	0		+			
ANR	489792	UnaryOperationExpression	* p_out		489340	0					
ANR	489793	UnaryOperator	*		489340	0					
ANR	489794	Identifier	p_out		489340	1					
ANR	489795	Identifier	container_size		489340	1					
ANR	489796	Argument	( const void * ) ( pkt -> data . frame . buf )		489340	1					
ANR	489797	CastExpression	( const void * ) ( pkt -> data . frame . buf )		489340	0					
ANR	489798	CastTarget	const void *		489340	0					
ANR	489799	MemberAccess	pkt -> data . frame . buf		489340	1					
ANR	489800	MemberAccess	pkt -> data . frame		489340	0					
ANR	489801	PtrMemberAccess	pkt -> data		489340	0					
ANR	489802	Identifier	pkt		489340	0					
ANR	489803	Identifier	data		489340	1					
ANR	489804	Identifier	frame		489340	1					
ANR	489805	Identifier	buf		489340	1					
ANR	489806	Argument	pkt -> data . frame . sz		489340	2					
ANR	489807	MemberAccess	pkt -> data . frame . sz		489340	0					
ANR	489808	MemberAccess	pkt -> data . frame		489340	0					
ANR	489809	PtrMemberAccess	pkt -> data		489340	0					
ANR	489810	Identifier	pkt		489340	0					
ANR	489811	Identifier	data		489340	1					
ANR	489812	Identifier	frame		489340	1					
ANR	489813	Identifier	sz		489340	1					
ANR	489814	ExpressionStatement	* p_out_size_bytes = container_size + pkt -> data . frame . sz	730:8:23665:23720	489340	2	True				
ANR	489815	AssignmentExpression	* p_out_size_bytes = container_size + pkt -> data . frame . sz		489340	0		=			
ANR	489816	UnaryOperationExpression	* p_out_size_bytes		489340	0					
ANR	489817	UnaryOperator	*		489340	0					
ANR	489818	Identifier	p_out_size_bytes		489340	1					
ANR	489819	AdditiveExpression	container_size + pkt -> data . frame . sz		489340	1		+			
ANR	489820	Identifier	container_size		489340	0					
ANR	489821	MemberAccess	pkt -> data . frame . sz		489340	1					
ANR	489822	MemberAccess	pkt -> data . frame		489340	0					
ANR	489823	PtrMemberAccess	pkt -> data		489340	0					
ANR	489824	Identifier	pkt		489340	0					
ANR	489825	Identifier	data		489340	1					
ANR	489826	Identifier	frame		489340	1					
ANR	489827	Identifier	sz		489340	1					
ANR	489828	ExpressionStatement	result = webp_success	732:8:23731:23752	489340	3	True				
ANR	489829	AssignmentExpression	result = webp_success		489340	0		=			
ANR	489830	Identifier	result		489340	0					
ANR	489831	Identifier	webp_success		489340	1					
ANR	489832	ExpressionStatement	vpx_codec_destroy ( & enc )	737:2:23775:23798	489340	16	True				
ANR	489833	CallExpression	vpx_codec_destroy ( & enc )		489340	0					
ANR	489834	Callee	vpx_codec_destroy		489340	0					
ANR	489835	Identifier	vpx_codec_destroy		489340	0					
ANR	489836	ArgumentList	& enc		489340	1					
ANR	489837	Argument	& enc		489340	0					
ANR	489838	UnaryOperationExpression	& enc		489340	0					
ANR	489839	UnaryOperator	&		489340	0					
ANR	489840	Identifier	enc		489340	1					
ANR	489841	ReturnStatement	return result ;	739:2:23803:23816	489340	17	True				
ANR	489842	Identifier	result		489340	0					
ANR	489843	ReturnType	static WebPResult		489340	1					
ANR	489844	Identifier	VPXEncode		489340	2					
ANR	489845	ParameterList	"const uint8 * Y , const uint8 * U , const uint8 * V , int y_width , int y_height , int y_stride , int uv_width , int uv_height , int uv_stride , int QP , int container_size , unsigned char * * p_out , int * p_out_size_bytes"		489340	3					
ANR	489846	Parameter	const uint8 * Y	655:28:21103:21116	489340	0	True				
ANR	489847	ParameterType	const uint8 *		489340	0					
ANR	489848	Identifier	Y		489340	1					
ANR	489849	Parameter	const uint8 * U	656:28:21147:21160	489340	1	True				
ANR	489850	ParameterType	const uint8 *		489340	0					
ANR	489851	Identifier	U		489340	1					
ANR	489852	Parameter	const uint8 * V	657:28:21191:21204	489340	2	True				
ANR	489853	ParameterType	const uint8 *		489340	0					
ANR	489854	Identifier	V		489340	1					
ANR	489855	Parameter	int y_width	658:28:21235:21245	489340	3	True				
ANR	489856	ParameterType	int		489340	0					
ANR	489857	Identifier	y_width		489340	1					
ANR	489858	Parameter	int y_height	659:28:21276:21287	489340	4	True				
ANR	489859	ParameterType	int		489340	0					
ANR	489860	Identifier	y_height		489340	1					
ANR	489861	Parameter	int y_stride	660:28:21318:21329	489340	5	True				
ANR	489862	ParameterType	int		489340	0					
ANR	489863	Identifier	y_stride		489340	1					
ANR	489864	Parameter	int uv_width	661:28:21360:21371	489340	6	True				
ANR	489865	ParameterType	int		489340	0					
ANR	489866	Identifier	uv_width		489340	1					
ANR	489867	Parameter	int uv_height	662:28:21402:21414	489340	7	True				
ANR	489868	ParameterType	int		489340	0					
ANR	489869	Identifier	uv_height		489340	1					
ANR	489870	Parameter	int uv_stride	663:28:21445:21457	489340	8	True				
ANR	489871	ParameterType	int		489340	0					
ANR	489872	Identifier	uv_stride		489340	1					
ANR	489873	Parameter	int QP	664:28:21488:21493	489340	9	True				
ANR	489874	ParameterType	int		489340	0					
ANR	489875	Identifier	QP		489340	1					
ANR	489876	Parameter	int container_size	665:28:21524:21541	489340	10	True				
ANR	489877	ParameterType	int		489340	0					
ANR	489878	Identifier	container_size		489340	1					
ANR	489879	Parameter	unsigned char * * p_out	666:28:21572:21592	489340	11	True				
ANR	489880	ParameterType	unsigned char * *		489340	0					
ANR	489881	Identifier	p_out		489340	1					
ANR	489882	Parameter	int * p_out_size_bytes	667:28:21623:21643	489340	12	True				
ANR	489883	ParameterType	int *		489340	0					
ANR	489884	Identifier	p_out_size_bytes		489340	1					
ANR	489885	CFGEntryNode	ENTRY		489340		True				
ANR	489886	CFGExitNode	EXIT		489340		True				
ANR	489887	Symbol	container_size		489340						
ANR	489888	Symbol	VPX_DL_BEST_QUALITY		489340						
ANR	489889	Symbol	* pkt		489340						
ANR	489890	Symbol	VPX_PLANE_U		489340						
ANR	489891	Symbol	VPX_PLANE_V		489340						
ANR	489892	Symbol	VPX_PLANE_Y		489340						
ANR	489893	Symbol	VP8E_SET_ENABLEAUTOALTREF		489340						
ANR	489894	Symbol	VP8E_SET_STATIC_THRESHOLD		489340						
ANR	489895	Symbol	* img		489340						
ANR	489896	Symbol	VP8E_SET_TOKEN_PARTITIONS		489340						
ANR	489897	Symbol	& iter		489340						
ANR	489898	Symbol	QP		489340						
ANR	489899	Symbol	res		489340						
ANR	489900	Symbol	VP8E_SET_NOISE_SENSITIVITY		489340						
ANR	489901	Symbol	img . stride		489340						
ANR	489902	Symbol	NULL		489340						
ANR	489903	Symbol	p_out		489340						
ANR	489904	Symbol	iter		489340						
ANR	489905	Symbol	* img . planes		489340						
ANR	489906	Symbol	y_width		489340						
ANR	489907	Symbol	iface		489340						
ANR	489908	Symbol	VP8E_SET_CPUUSED		489340						
ANR	489909	Symbol	y_height		489340						
ANR	489910	Symbol	uv_height		489340						
ANR	489911	Symbol	VPX_CODEC_OK		489340						
ANR	489912	Symbol	* p_out		489340						
ANR	489913	Symbol	VP8E_SET_ARNR_TYPE		489340						
ANR	489914	Symbol	webp_success		489340						
ANR	489915	Symbol	img		489340						
ANR	489916	Symbol	vpx_codec_enc_init		489340						
ANR	489917	Symbol	VP8E_SET_ARNR_STRENGTH		489340						
ANR	489918	Symbol	& enc		489340						
ANR	489919	Symbol	uv_width		489340						
ANR	489920	Symbol	calloc		489340						
ANR	489921	Symbol	& cfg		489340						
ANR	489922	Symbol	webp_failure		489340						
ANR	489923	Symbol	result		489340						
ANR	489924	Symbol	* VPX_PLANE_V		489340						
ANR	489925	Symbol	* img . stride		489340						
ANR	489926	Symbol	VPX_IMG_FMT_I420		489340						
ANR	489927	Symbol	* VPX_PLANE_Y		489340						
ANR	489928	Symbol	& vpx_codec_vp8_cx_algo		489340						
ANR	489929	Symbol	U		489340						
ANR	489930	Symbol	img . planes		489340						
ANR	489931	Symbol	V		489340						
ANR	489932	Symbol	* VPX_PLANE_U		489340						
ANR	489933	Symbol	pkt		489340						
ANR	489934	Symbol	pkt -> data . frame		489340						
ANR	489935	Symbol	Y		489340						
ANR	489936	Symbol	enc		489340						
ANR	489937	Symbol	pkt -> data . frame . sz		489340						
ANR	489938	Symbol	vpx_codec_enc_config_default		489340						
ANR	489939	Symbol	VP8E_SET_SHARPNESS		489340						
ANR	489940	Symbol	uv_stride		489340						
ANR	489941	Symbol	* p_out_size_bytes		489340						
ANR	489942	Symbol	cfg		489340						
ANR	489943	Symbol	cfg . g_h		489340						
ANR	489944	Symbol	y_stride		489340						
ANR	489945	Symbol	pkt -> data		489340						
ANR	489946	Symbol	& img		489340						
ANR	489947	Symbol	VP8E_SET_ARNR_MAXFRAMES		489340						
ANR	489948	Symbol	vpx_codec_get_cx_data		489340						
ANR	489949	Symbol	cfg . g_w		489340						
ANR	489950	Symbol	vpx_codec_encode		489340						
ANR	489951	Symbol	p_out_size_bytes		489340						
ANR	489952	Symbol	pkt -> data . frame . buf		489340						
ANR	489953	Function	WebPEncode	742:0:23821:25730							
ANR	489954	FunctionDef	"WebPEncode (const uint8 * Y , const uint8 * U , const uint8 * V , int y_width , int y_height , int y_stride , int uv_width , int uv_height , int uv_stride , int QP , unsigned char * * p_out , int * p_out_size_bytes , double * psnr)"		489953	0					
ANR	489955	CompoundStatement		754:36:24308:25730	489953	0					
ANR	489956	IdentifierDeclStatement	const int kRiffHeaderSize = 20 ;	756:2:24313:24343	489953	0	True				
ANR	489957	IdentifierDecl	kRiffHeaderSize = 20		489953	0					
ANR	489958	IdentifierDeclType	const int		489953	0					
ANR	489959	Identifier	kRiffHeaderSize		489953	1					
ANR	489960	AssignmentExpression	kRiffHeaderSize = 20		489953	2		=			
ANR	489961	Identifier	kRiffHeaderSize		489953	0					
ANR	489962	PrimaryExpression	20		489953	1					
ANR	489963	IfStatement	"if ( VPXEncode ( Y , U , V , y_width , y_height , y_stride , uv_width , uv_height , uv_stride , QP , kRiffHeaderSize , p_out , p_out_size_bytes ) != webp_success )"		489953	1					
ANR	489964	Condition	"VPXEncode ( Y , U , V , y_width , y_height , y_stride , uv_width , uv_height , uv_stride , QP , kRiffHeaderSize , p_out , p_out_size_bytes ) != webp_success"	758:6:24352:24556	489953	0	True				
ANR	489965	EqualityExpression	"VPXEncode ( Y , U , V , y_width , y_height , y_stride , uv_width , uv_height , uv_stride , QP , kRiffHeaderSize , p_out , p_out_size_bytes ) != webp_success"		489953	0		!=			
ANR	489966	CallExpression	"VPXEncode ( Y , U , V , y_width , y_height , y_stride , uv_width , uv_height , uv_stride , QP , kRiffHeaderSize , p_out , p_out_size_bytes )"		489953	0					
ANR	489967	Callee	VPXEncode		489953	0					
ANR	489968	Identifier	VPXEncode		489953	0					
ANR	489969	ArgumentList	Y		489953	1					
ANR	489970	Argument	Y		489953	0					
ANR	489971	Identifier	Y		489953	0					
ANR	489972	Argument	U		489953	1					
ANR	489973	Identifier	U		489953	0					
ANR	489974	Argument	V		489953	2					
ANR	489975	Identifier	V		489953	0					
ANR	489976	Argument	y_width		489953	3					
ANR	489977	Identifier	y_width		489953	0					
ANR	489978	Argument	y_height		489953	4					
ANR	489979	Identifier	y_height		489953	0					
ANR	489980	Argument	y_stride		489953	5					
ANR	489981	Identifier	y_stride		489953	0					
ANR	489982	Argument	uv_width		489953	6					
ANR	489983	Identifier	uv_width		489953	0					
ANR	489984	Argument	uv_height		489953	7					
ANR	489985	Identifier	uv_height		489953	0					
ANR	489986	Argument	uv_stride		489953	8					
ANR	489987	Identifier	uv_stride		489953	0					
ANR	489988	Argument	QP		489953	9					
ANR	489989	Identifier	QP		489953	0					
ANR	489990	Argument	kRiffHeaderSize		489953	10					
ANR	489991	Identifier	kRiffHeaderSize		489953	0					
ANR	489992	Argument	p_out		489953	11					
ANR	489993	Identifier	p_out		489953	0					
ANR	489994	Argument	p_out_size_bytes		489953	12					
ANR	489995	Identifier	p_out_size_bytes		489953	0					
ANR	489996	Identifier	webp_success		489953	1					
ANR	489997	CompoundStatement		9:58:250:250	489953	1					
ANR	489998	ReturnStatement	return webp_failure ;	763:4:24565:24584	489953	0	True				
ANR	489999	Identifier	webp_failure		489953	0					
ANR	490000	ElseStatement	else		489953	0					
ANR	490001	CompoundStatement		16:3:503:901	489953	0					
ANR	490002	IdentifierDeclStatement	const int img_size_bytes = * p_out_size_bytes - kRiffHeaderSize ;	766:3:24627:24690	489953	0	True				
ANR	490003	IdentifierDecl	img_size_bytes = * p_out_size_bytes - kRiffHeaderSize		489953	0					
ANR	490004	IdentifierDeclType	const int		489953	0					
ANR	490005	Identifier	img_size_bytes		489953	1					
ANR	490006	AssignmentExpression	img_size_bytes = * p_out_size_bytes - kRiffHeaderSize		489953	2		=			
ANR	490007	Identifier	img_size_bytes		489953	0					
ANR	490008	AdditiveExpression	* p_out_size_bytes - kRiffHeaderSize		489953	1		-			
ANR	490009	UnaryOperationExpression	* p_out_size_bytes		489953	0					
ANR	490010	UnaryOperator	*		489953	0					
ANR	490011	Identifier	p_out_size_bytes		489953	1					
ANR	490012	Identifier	kRiffHeaderSize		489953	1					
ANR	490013	IdentifierDeclStatement	const int chunk_size = ( img_size_bytes + 1 ) & ~1 ;	767:3:24695:24743	489953	1	True				
ANR	490014	IdentifierDecl	chunk_size = ( img_size_bytes + 1 ) & ~1		489953	0					
ANR	490015	IdentifierDeclType	const int		489953	0					
ANR	490016	Identifier	chunk_size		489953	1					
ANR	490017	AssignmentExpression	chunk_size = ( img_size_bytes + 1 ) & ~1		489953	2		=			
ANR	490018	Identifier	chunk_size		489953	0					
ANR	490019	BitAndExpression	( img_size_bytes + 1 ) & ~1		489953	1		&			
ANR	490020	AdditiveExpression	img_size_bytes + 1		489953	0		+			
ANR	490021	Identifier	img_size_bytes		489953	0					
ANR	490022	PrimaryExpression	1		489953	1					
ANR	490023	Identifier	~1		489953	1					
ANR	490024	IdentifierDeclStatement	const int riff_size = chunk_size + 12 ;	768:3:24770:24807	489953	2	True				
ANR	490025	IdentifierDecl	riff_size = chunk_size + 12		489953	0					
ANR	490026	IdentifierDeclType	const int		489953	0					
ANR	490027	Identifier	riff_size		489953	1					
ANR	490028	AssignmentExpression	riff_size = chunk_size + 12		489953	2		=			
ANR	490029	Identifier	riff_size		489953	0					
ANR	490030	AdditiveExpression	chunk_size + 12		489953	1		+			
ANR	490031	Identifier	chunk_size		489953	0					
ANR	490032	PrimaryExpression	12		489953	1					
ANR	490033	IdentifierDeclStatement	"const uint8_t kRiffHeader [ 20 ] = { 'R' , 'I' , 'F' , 'F' , ( riff_size >> 0 ) & 255 , ( riff_size >> 8 ) & 255 , ( riff_size >> 16 ) & 255 , ( riff_size >> 24 ) & 255 , 'W' , 'E' , 'B' , 'P' , 'V' , 'P' , '8' , ' ' , ( chunk_size >> 0 ) & 255 , ( chunk_size >> 8 ) & 255 , ( chunk_size >> 16 ) & 255 , ( chunk_size >> 24 ) & 255 } ;"	769:3:24812:25210	489953	3	True				
ANR	490034	IdentifierDecl	"kRiffHeader [ 20 ] = { 'R' , 'I' , 'F' , 'F' , ( riff_size >> 0 ) & 255 , ( riff_size >> 8 ) & 255 , ( riff_size >> 16 ) & 255 , ( riff_size >> 24 ) & 255 , 'W' , 'E' , 'B' , 'P' , 'V' , 'P' , '8' , ' ' , ( chunk_size >> 0 ) & 255 , ( chunk_size >> 8 ) & 255 , ( chunk_size >> 16 ) & 255 , ( chunk_size >> 24 ) & 255 }"		489953	0					
ANR	490035	IdentifierDeclType	const uint8_t [ 20 ]		489953	0					
ANR	490036	Identifier	kRiffHeader		489953	1					
ANR	490037	PrimaryExpression	20		489953	2					
ANR	490038	AssignmentExpression	"kRiffHeader [ 20 ] = { 'R' , 'I' , 'F' , 'F' , ( riff_size >> 0 ) & 255 , ( riff_size >> 8 ) & 255 , ( riff_size >> 16 ) & 255 , ( riff_size >> 24 ) & 255 , 'W' , 'E' , 'B' , 'P' , 'V' , 'P' , '8' , ' ' , ( chunk_size >> 0 ) & 255 , ( chunk_size >> 8 ) & 255 , ( chunk_size >> 16 ) & 255 , ( chunk_size >> 24 ) & 255 }"		489953	3		=			
ANR	490039	Identifier	kRiffHeader		489953	0					
ANR	490040	InitializerList	'R'		489953	1					
ANR	490041	PrimaryExpression	'R'		489953	0					
ANR	490042	PrimaryExpression	'I'		489953	1					
ANR	490043	PrimaryExpression	'F'		489953	2					
ANR	490044	PrimaryExpression	'F'		489953	3					
ANR	490045	BitAndExpression	( riff_size >> 0 ) & 255		489953	4		&			
ANR	490046	ShiftExpression	riff_size >> 0		489953	0		>>			
ANR	490047	Identifier	riff_size		489953	0					
ANR	490048	PrimaryExpression	0		489953	1					
ANR	490049	PrimaryExpression	255		489953	1					
ANR	490050	BitAndExpression	( riff_size >> 8 ) & 255		489953	5		&			
ANR	490051	ShiftExpression	riff_size >> 8		489953	0		>>			
ANR	490052	Identifier	riff_size		489953	0					
ANR	490053	PrimaryExpression	8		489953	1					
ANR	490054	PrimaryExpression	255		489953	1					
ANR	490055	BitAndExpression	( riff_size >> 16 ) & 255		489953	6		&			
ANR	490056	ShiftExpression	riff_size >> 16		489953	0		>>			
ANR	490057	Identifier	riff_size		489953	0					
ANR	490058	PrimaryExpression	16		489953	1					
ANR	490059	PrimaryExpression	255		489953	1					
ANR	490060	BitAndExpression	( riff_size >> 24 ) & 255		489953	7		&			
ANR	490061	ShiftExpression	riff_size >> 24		489953	0		>>			
ANR	490062	Identifier	riff_size		489953	0					
ANR	490063	PrimaryExpression	24		489953	1					
ANR	490064	PrimaryExpression	255		489953	1					
ANR	490065	PrimaryExpression	'W'		489953	8					
ANR	490066	PrimaryExpression	'E'		489953	9					
ANR	490067	PrimaryExpression	'B'		489953	10					
ANR	490068	PrimaryExpression	'P'		489953	11					
ANR	490069	PrimaryExpression	'V'		489953	12					
ANR	490070	PrimaryExpression	'P'		489953	13					
ANR	490071	PrimaryExpression	'8'		489953	14					
ANR	490072	PrimaryExpression	' '		489953	15					
ANR	490073	BitAndExpression	( chunk_size >> 0 ) & 255		489953	16		&			
ANR	490074	ShiftExpression	chunk_size >> 0		489953	0		>>			
ANR	490075	Identifier	chunk_size		489953	0					
ANR	490076	PrimaryExpression	0		489953	1					
ANR	490077	PrimaryExpression	255		489953	1					
ANR	490078	BitAndExpression	( chunk_size >> 8 ) & 255		489953	17		&			
ANR	490079	ShiftExpression	chunk_size >> 8		489953	0		>>			
ANR	490080	Identifier	chunk_size		489953	0					
ANR	490081	PrimaryExpression	8		489953	1					
ANR	490082	PrimaryExpression	255		489953	1					
ANR	490083	BitAndExpression	( chunk_size >> 16 ) & 255		489953	18		&			
ANR	490084	ShiftExpression	chunk_size >> 16		489953	0		>>			
ANR	490085	Identifier	chunk_size		489953	0					
ANR	490086	PrimaryExpression	16		489953	1					
ANR	490087	PrimaryExpression	255		489953	1					
ANR	490088	BitAndExpression	( chunk_size >> 24 ) & 255		489953	19		&			
ANR	490089	ShiftExpression	chunk_size >> 24		489953	0		>>			
ANR	490090	Identifier	chunk_size		489953	0					
ANR	490091	PrimaryExpression	24		489953	1					
ANR	490092	PrimaryExpression	255		489953	1					
ANR	490093	ExpressionStatement	"memcpy ( * p_out , kRiffHeader , kRiffHeaderSize )"	780:3:25215:25259	489953	4	True				
ANR	490094	CallExpression	"memcpy ( * p_out , kRiffHeader , kRiffHeaderSize )"		489953	0					
ANR	490095	Callee	memcpy		489953	0					
ANR	490096	Identifier	memcpy		489953	0					
ANR	490097	ArgumentList	* p_out		489953	1					
ANR	490098	Argument	* p_out		489953	0					
ANR	490099	UnaryOperationExpression	* p_out		489953	0					
ANR	490100	UnaryOperator	*		489953	0					
ANR	490101	Identifier	p_out		489953	1					
ANR	490102	Argument	kRiffHeader		489953	1					
ANR	490103	Identifier	kRiffHeader		489953	0					
ANR	490104	Argument	kRiffHeaderSize		489953	2					
ANR	490105	Identifier	kRiffHeaderSize		489953	0					
ANR	490106	IfStatement	if ( img_size_bytes & 1 )		489953	5					
ANR	490107	Condition	img_size_bytes & 1	782:7:25269:25286	489953	0	True				
ANR	490108	BitAndExpression	img_size_bytes & 1		489953	0		&			
ANR	490109	Identifier	img_size_bytes		489953	0					
ANR	490110	PrimaryExpression	1		489953	1					
ANR	490111	CompoundStatement		31:2:1058:1118	489953	1					
ANR	490112	IdentifierDeclStatement	const int new_size = * p_out_size_bytes + 1 ;	783:2:25321:25363	489953	0	True				
ANR	490113	IdentifierDecl	new_size = * p_out_size_bytes + 1		489953	0					
ANR	490114	IdentifierDeclType	const int		489953	0					
ANR	490115	Identifier	new_size		489953	1					
ANR	490116	AssignmentExpression	new_size = * p_out_size_bytes + 1		489953	2		=			
ANR	490117	Identifier	new_size		489953	0					
ANR	490118	AdditiveExpression	* p_out_size_bytes + 1		489953	1		+			
ANR	490119	UnaryOperationExpression	* p_out_size_bytes		489953	0					
ANR	490120	UnaryOperator	*		489953	0					
ANR	490121	Identifier	p_out_size_bytes		489953	1					
ANR	490122	PrimaryExpression	1		489953	1					
ANR	490123	IdentifierDeclStatement	"unsigned char * p = ( unsigned char * ) realloc ( * p_out , new_size ) ;"	784:2:25367:25427	489953	1	True				
ANR	490124	IdentifierDecl	"* p = ( unsigned char * ) realloc ( * p_out , new_size )"		489953	0					
ANR	490125	IdentifierDeclType	unsigned char *		489953	0					
ANR	490126	Identifier	p		489953	1					
ANR	490127	AssignmentExpression	"* p = ( unsigned char * ) realloc ( * p_out , new_size )"		489953	2		=			
ANR	490128	Identifier	p		489953	0					
ANR	490129	CastExpression	"( unsigned char * ) realloc ( * p_out , new_size )"		489953	1					
ANR	490130	CastTarget	unsigned char *		489953	0					
ANR	490131	CallExpression	"realloc ( * p_out , new_size )"		489953	1					
ANR	490132	Callee	realloc		489953	0					
ANR	490133	Identifier	realloc		489953	0					
ANR	490134	ArgumentList	* p_out		489953	1					
ANR	490135	Argument	* p_out		489953	0					
ANR	490136	UnaryOperationExpression	* p_out		489953	0					
ANR	490137	UnaryOperator	*		489953	0					
ANR	490138	Identifier	p_out		489953	1					
ANR	490139	Argument	new_size		489953	1					
ANR	490140	Identifier	new_size		489953	0					
ANR	490141	IfStatement	if ( p == NULL )		489953	2					
ANR	490142	Condition	p == NULL	785:6:25435:25443	489953	0	True				
ANR	490143	EqualityExpression	p == NULL		489953	0		==			
ANR	490144	Identifier	p		489953	0					
ANR	490145	Identifier	NULL		489953	1					
ANR	490146	CompoundStatement		32:17:1137:1137	489953	1					
ANR	490147	ExpressionStatement	free ( * p_out )	786:4:25452:25464	489953	0	True				
ANR	490148	CallExpression	free ( * p_out )		489953	0					
ANR	490149	Callee	free		489953	0					
ANR	490150	Identifier	free		489953	0					
ANR	490151	ArgumentList	* p_out		489953	1					
ANR	490152	Argument	* p_out		489953	0					
ANR	490153	UnaryOperationExpression	* p_out		489953	0					
ANR	490154	UnaryOperator	*		489953	0					
ANR	490155	Identifier	p_out		489953	1					
ANR	490156	ExpressionStatement	* p_out = NULL	787:4:25470:25483	489953	1	True				
ANR	490157	AssignmentExpression	* p_out = NULL		489953	0		=			
ANR	490158	UnaryOperationExpression	* p_out		489953	0					
ANR	490159	UnaryOperator	*		489953	0					
ANR	490160	Identifier	p_out		489953	1					
ANR	490161	Identifier	NULL		489953	1					
ANR	490162	ExpressionStatement	* p_out_size_bytes = 0	788:4:25489:25510	489953	2	True				
ANR	490163	AssignmentExpression	* p_out_size_bytes = 0		489953	0		=			
ANR	490164	UnaryOperationExpression	* p_out_size_bytes		489953	0					
ANR	490165	UnaryOperator	*		489953	0					
ANR	490166	Identifier	p_out_size_bytes		489953	1					
ANR	490167	PrimaryExpression	0		489953	1					
ANR	490168	ReturnStatement	return webp_failure ;	789:4:25516:25535	489953	3	True				
ANR	490169	Identifier	webp_failure		489953	0					
ANR	490170	ExpressionStatement	p [ new_size - 1 ] = 0	791:2:25543:25562	489953	3	True				
ANR	490171	AssignmentExpression	p [ new_size - 1 ] = 0		489953	0		=			
ANR	490172	ArrayIndexing	p [ new_size - 1 ]		489953	0					
ANR	490173	Identifier	p		489953	0					
ANR	490174	AdditiveExpression	new_size - 1		489953	1		-			
ANR	490175	Identifier	new_size		489953	0					
ANR	490176	PrimaryExpression	1		489953	1					
ANR	490177	PrimaryExpression	0		489953	1					
ANR	490178	ExpressionStatement	* p_out = p	792:8:25572:25582	489953	4	True				
ANR	490179	AssignmentExpression	* p_out = p		489953	0		=			
ANR	490180	UnaryOperationExpression	* p_out		489953	0					
ANR	490181	UnaryOperator	*		489953	0					
ANR	490182	Identifier	p_out		489953	1					
ANR	490183	Identifier	p		489953	1					
ANR	490184	ExpressionStatement	* p_out_size_bytes = new_size	793:2:25586:25614	489953	5	True				
ANR	490185	AssignmentExpression	* p_out_size_bytes = new_size		489953	0		=			
ANR	490186	UnaryOperationExpression	* p_out_size_bytes		489953	0					
ANR	490187	UnaryOperator	*		489953	0					
ANR	490188	Identifier	p_out_size_bytes		489953	1					
ANR	490189	Identifier	new_size		489953	1					
ANR	490190	IfStatement	if ( psnr )		489953	6					
ANR	490191	Condition	psnr	796:7:25629:25632	489953	0	True				
ANR	490192	Identifier	psnr		489953	0					
ANR	490193	CompoundStatement		43:13:1326:1326	489953	1					
ANR	490194	ExpressionStatement	"* psnr = WebPGetPSNR ( Y , U , V , * p_out , * p_out_size_bytes )"	797:2:25639:25694	489953	0	True				
ANR	490195	AssignmentExpression	"* psnr = WebPGetPSNR ( Y , U , V , * p_out , * p_out_size_bytes )"		489953	0		=			
ANR	490196	UnaryOperationExpression	* psnr		489953	0					
ANR	490197	UnaryOperator	*		489953	0					
ANR	490198	Identifier	psnr		489953	1					
ANR	490199	CallExpression	"WebPGetPSNR ( Y , U , V , * p_out , * p_out_size_bytes )"		489953	1					
ANR	490200	Callee	WebPGetPSNR		489953	0					
ANR	490201	Identifier	WebPGetPSNR		489953	0					
ANR	490202	ArgumentList	Y		489953	1					
ANR	490203	Argument	Y		489953	0					
ANR	490204	Identifier	Y		489953	0					
ANR	490205	Argument	U		489953	1					
ANR	490206	Identifier	U		489953	0					
ANR	490207	Argument	V		489953	2					
ANR	490208	Identifier	V		489953	0					
ANR	490209	Argument	* p_out		489953	3					
ANR	490210	UnaryOperationExpression	* p_out		489953	0					
ANR	490211	UnaryOperator	*		489953	0					
ANR	490212	Identifier	p_out		489953	1					
ANR	490213	Argument	* p_out_size_bytes		489953	4					
ANR	490214	UnaryOperationExpression	* p_out_size_bytes		489953	0					
ANR	490215	UnaryOperator	*		489953	0					
ANR	490216	Identifier	p_out_size_bytes		489953	1					
ANR	490217	ReturnStatement	return webp_success ;	800:3:25705:25724	489953	7	True				
ANR	490218	Identifier	webp_success		489953	0					
ANR	490219	ReturnType	WebPResult		489953	1					
ANR	490220	Identifier	WebPEncode		489953	2					
ANR	490221	ParameterList	"const uint8 * Y , const uint8 * U , const uint8 * V , int y_width , int y_height , int y_stride , int uv_width , int uv_height , int uv_stride , int QP , unsigned char * * p_out , int * p_out_size_bytes , double * psnr"		489953	3					
ANR	490222	Parameter	const uint8 * Y	742:22:23843:23856	489953	0	True				
ANR	490223	ParameterType	const uint8 *		489953	0					
ANR	490224	Identifier	Y		489953	1					
ANR	490225	Parameter	const uint8 * U	743:22:23881:23894	489953	1	True				
ANR	490226	ParameterType	const uint8 *		489953	0					
ANR	490227	Identifier	U		489953	1					
ANR	490228	Parameter	const uint8 * V	744:22:23919:23932	489953	2	True				
ANR	490229	ParameterType	const uint8 *		489953	0					
ANR	490230	Identifier	V		489953	1					
ANR	490231	Parameter	int y_width	745:22:23957:23967	489953	3	True				
ANR	490232	ParameterType	int		489953	0					
ANR	490233	Identifier	y_width		489953	1					
ANR	490234	Parameter	int y_height	746:22:23992:24003	489953	4	True				
ANR	490235	ParameterType	int		489953	0					
ANR	490236	Identifier	y_height		489953	1					
ANR	490237	Parameter	int y_stride	747:22:24028:24039	489953	5	True				
ANR	490238	ParameterType	int		489953	0					
ANR	490239	Identifier	y_stride		489953	1					
ANR	490240	Parameter	int uv_width	748:22:24064:24075	489953	6	True				
ANR	490241	ParameterType	int		489953	0					
ANR	490242	Identifier	uv_width		489953	1					
ANR	490243	Parameter	int uv_height	749:22:24100:24112	489953	7	True				
ANR	490244	ParameterType	int		489953	0					
ANR	490245	Identifier	uv_height		489953	1					
ANR	490246	Parameter	int uv_stride	750:22:24137:24149	489953	8	True				
ANR	490247	ParameterType	int		489953	0					
ANR	490248	Identifier	uv_stride		489953	1					
ANR	490249	Parameter	int QP	751:22:24174:24179	489953	9	True				
ANR	490250	ParameterType	int		489953	0					
ANR	490251	Identifier	QP		489953	1					
ANR	490252	Parameter	unsigned char * * p_out	752:22:24204:24224	489953	10	True				
ANR	490253	ParameterType	unsigned char * *		489953	0					
ANR	490254	Identifier	p_out		489953	1					
ANR	490255	Parameter	int * p_out_size_bytes	753:22:24249:24269	489953	11	True				
ANR	490256	ParameterType	int *		489953	0					
ANR	490257	Identifier	p_out_size_bytes		489953	1					
ANR	490258	Parameter	double * psnr	754:22:24294:24305	489953	12	True				
ANR	490259	ParameterType	double *		489953	0					
ANR	490260	Identifier	psnr		489953	1					
ANR	490261	CFGEntryNode	ENTRY		489953		True				
ANR	490262	CFGExitNode	EXIT		489953		True				
ANR	490263	Symbol	webp_success		489953						
ANR	490264	Symbol	chunk_size		489953						
ANR	490265	Symbol	kRiffHeaderSize		489953						
ANR	490266	Symbol	* new_size		489953						
ANR	490267	Symbol	riff_size		489953						
ANR	490268	Symbol	uv_width		489953						
ANR	490269	Symbol	realloc		489953						
ANR	490270	Symbol	webp_failure		489953						
ANR	490271	Symbol	kRiffHeader		489953						
ANR	490272	Symbol	U		489953						
ANR	490273	Symbol	V		489953						
ANR	490274	Symbol	new_size		489953						
ANR	490275	Symbol	Y		489953						
ANR	490276	Symbol	WebPGetPSNR		489953						
ANR	490277	Symbol	* psnr		489953						
ANR	490278	Symbol	QP		489953						
ANR	490279	Symbol	uv_stride		489953						
ANR	490280	Symbol	* p_out_size_bytes		489953						
ANR	490281	Symbol	NULL		489953						
ANR	490282	Symbol	p_out		489953						
ANR	490283	Symbol	y_width		489953						
ANR	490284	Symbol	y_stride		489953						
ANR	490285	Symbol	VPXEncode		489953						
ANR	490286	Symbol	img_size_bytes		489953						
ANR	490287	Symbol	p		489953						
ANR	490288	Symbol	psnr		489953						
ANR	490289	Symbol	~1		489953						
ANR	490290	Symbol	p_out_size_bytes		489953						
ANR	490291	Symbol	* p		489953						
ANR	490292	Symbol	y_height		489953						
ANR	490293	Symbol	uv_height		489953						
ANR	490294	Symbol	* p_out		489953						
ANR	490295	Function	AdjustColorspace	804:0:25733:26571							
ANR	490296	FunctionDef	"AdjustColorspace (uint8 * Y , uint8 * U , uint8 * V , int width , int height)"		490295	0					
ANR	490297	CompoundStatement		804:75:25808:26571	490295	0					
ANR	490298	IdentifierDeclStatement	int y_width = width ;	805:2:25812:25831	490295	0	True				
ANR	490299	IdentifierDecl	y_width = width		490295	0					
ANR	490300	IdentifierDeclType	int		490295	0					
ANR	490301	Identifier	y_width		490295	1					
ANR	490302	AssignmentExpression	y_width = width		490295	2		=			
ANR	490303	Identifier	width		490295	0					
ANR	490304	Identifier	width		490295	1					
ANR	490305	IdentifierDeclStatement	int y_height = height ;	806:2:25835:25856	490295	1	True				
ANR	490306	IdentifierDecl	y_height = height		490295	0					
ANR	490307	IdentifierDeclType	int		490295	0					
ANR	490308	Identifier	y_height		490295	1					
ANR	490309	AssignmentExpression	y_height = height		490295	2		=			
ANR	490310	Identifier	height		490295	0					
ANR	490311	Identifier	height		490295	1					
ANR	490312	IdentifierDeclStatement	int y_stride = y_width ;	807:2:25860:25882	490295	2	True				
ANR	490313	IdentifierDecl	y_stride = y_width		490295	0					
ANR	490314	IdentifierDeclType	int		490295	0					
ANR	490315	Identifier	y_stride		490295	1					
ANR	490316	AssignmentExpression	y_stride = y_width		490295	2		=			
ANR	490317	Identifier	y_width		490295	0					
ANR	490318	Identifier	y_width		490295	1					
ANR	490319	IdentifierDeclStatement	int uv_width = ( ( y_width + 1 ) >> 1 ) ;	808:2:25886:25921	490295	3	True				
ANR	490320	IdentifierDecl	uv_width = ( ( y_width + 1 ) >> 1 )		490295	0					
ANR	490321	IdentifierDeclType	int		490295	0					
ANR	490322	Identifier	uv_width		490295	1					
ANR	490323	AssignmentExpression	uv_width = ( ( y_width + 1 ) >> 1 )		490295	2		=			
ANR	490324	Identifier	uv_width		490295	0					
ANR	490325	ShiftExpression	( y_width + 1 ) >> 1		490295	1		>>			
ANR	490326	AdditiveExpression	y_width + 1		490295	0		+			
ANR	490327	Identifier	y_width		490295	0					
ANR	490328	PrimaryExpression	1		490295	1					
ANR	490329	PrimaryExpression	1		490295	1					
ANR	490330	IdentifierDeclStatement	int uv_height = ( ( y_height + 1 ) >> 1 ) ;	809:2:25925:25962	490295	4	True				
ANR	490331	IdentifierDecl	uv_height = ( ( y_height + 1 ) >> 1 )		490295	0					
ANR	490332	IdentifierDeclType	int		490295	0					
ANR	490333	Identifier	uv_height		490295	1					
ANR	490334	AssignmentExpression	uv_height = ( ( y_height + 1 ) >> 1 )		490295	2		=			
ANR	490335	Identifier	uv_height		490295	0					
ANR	490336	ShiftExpression	( y_height + 1 ) >> 1		490295	1		>>			
ANR	490337	AdditiveExpression	y_height + 1		490295	0		+			
ANR	490338	Identifier	y_height		490295	0					
ANR	490339	PrimaryExpression	1		490295	1					
ANR	490340	PrimaryExpression	1		490295	1					
ANR	490341	IdentifierDeclStatement	int uv_stride = uv_width ;	810:2:25966:25990	490295	5	True				
ANR	490342	IdentifierDecl	uv_stride = uv_width		490295	0					
ANR	490343	IdentifierDeclType	int		490295	0					
ANR	490344	Identifier	uv_stride		490295	1					
ANR	490345	AssignmentExpression	uv_stride = uv_width		490295	2		=			
ANR	490346	Identifier	uv_width		490295	0					
ANR	490347	Identifier	uv_width		490295	1					
ANR	490348	IdentifierDeclStatement	"int x , y ;"	811:2:25994:26002	490295	6	True				
ANR	490349	IdentifierDecl	x		490295	0					
ANR	490350	IdentifierDeclType	int		490295	0					
ANR	490351	Identifier	x		490295	1					
ANR	490352	IdentifierDecl	y		490295	1					
ANR	490353	IdentifierDeclType	int		490295	0					
ANR	490354	Identifier	y		490295	1					
ANR	490355	ForStatement	for ( y = 0 ; y < y_height ; ++ y )		490295	7					
ANR	490356	ForInit	y = 0 ;	813:7:26032:26037	490295	0	True				
ANR	490357	AssignmentExpression	y = 0		490295	0		=			
ANR	490358	Identifier	y		490295	0					
ANR	490359	PrimaryExpression	0		490295	1					
ANR	490360	Condition	y < y_height	813:14:26039:26050	490295	1	True				
ANR	490361	RelationalExpression	y < y_height		490295	0		<			
ANR	490362	Identifier	y		490295	0					
ANR	490363	Identifier	y_height		490295	1					
ANR	490364	UnaryExpression	++ y	813:28:26053:26055	490295	2	True				
ANR	490365	IncDec	++		490295	0					
ANR	490366	Identifier	y		490295	1					
ANR	490367	CompoundStatement		10:33:249:249	490295	3					
ANR	490368	Statement	uint8	814:4:26064:26068	490295	0	True				
ANR	490369	Statement	*	814:9:26069:26069	490295	1	True				
ANR	490370	Statement	const	814:11:26071:26075	490295	2	True				
ANR	490371	ExpressionStatement	Yrow = Y + y * y_stride	814:17:26077:26100	490295	3	True				
ANR	490372	AssignmentExpression	Yrow = Y + y * y_stride		490295	0		=			
ANR	490373	Identifier	Yrow		490295	0					
ANR	490374	AdditiveExpression	Y + y * y_stride		490295	1		+			
ANR	490375	Identifier	Y		490295	0					
ANR	490376	MultiplicativeExpression	y * y_stride		490295	1		*			
ANR	490377	Identifier	y		490295	0					
ANR	490378	Identifier	y_stride		490295	1					
ANR	490379	ForStatement	for ( x = 0 ; x < y_width ; ++ x )		490295	4					
ANR	490380	ForInit	x = 0 ;	815:9:26111:26116	490295	0	True				
ANR	490381	AssignmentExpression	x = 0		490295	0		=			
ANR	490382	Identifier	x		490295	0					
ANR	490383	PrimaryExpression	0		490295	1					
ANR	490384	Condition	x < y_width	815:16:26118:26128	490295	1	True				
ANR	490385	RelationalExpression	x < y_width		490295	0		<			
ANR	490386	Identifier	x		490295	0					
ANR	490387	Identifier	y_width		490295	1					
ANR	490388	UnaryExpression	++ x	815:29:26131:26133	490295	2	True				
ANR	490389	IncDec	++		490295	0					
ANR	490390	Identifier	x		490295	1					
ANR	490391	CompoundStatement		12:34:327:327	490295	3					
ANR	490392	ExpressionStatement	Yrow [ x ] = ( ( Yrow [ x ] * 55 + 32 ) >> 6 ) + 16	817:6:26183:26224	490295	0	True				
ANR	490393	AssignmentExpression	Yrow [ x ] = ( ( Yrow [ x ] * 55 + 32 ) >> 6 ) + 16		490295	0		=			
ANR	490394	ArrayIndexing	Yrow [ x ]		490295	0					
ANR	490395	Identifier	Yrow		490295	0					
ANR	490396	Identifier	x		490295	1					
ANR	490397	AdditiveExpression	( ( Yrow [ x ] * 55 + 32 ) >> 6 ) + 16		490295	1		+			
ANR	490398	ShiftExpression	( Yrow [ x ] * 55 + 32 ) >> 6		490295	0		>>			
ANR	490399	AdditiveExpression	Yrow [ x ] * 55 + 32		490295	0		+			
ANR	490400	MultiplicativeExpression	Yrow [ x ] * 55		490295	0		*			
ANR	490401	ArrayIndexing	Yrow [ x ]		490295	0					
ANR	490402	Identifier	Yrow		490295	0					
ANR	490403	Identifier	x		490295	1					
ANR	490404	PrimaryExpression	55		490295	1					
ANR	490405	PrimaryExpression	32		490295	1					
ANR	490406	PrimaryExpression	6		490295	1					
ANR	490407	PrimaryExpression	16		490295	1					
ANR	490408	ForStatement	for ( y = 0 ; y < uv_height ; ++ y )		490295	8					
ANR	490409	ForInit	y = 0 ;	821:7:26266:26271	490295	0	True				
ANR	490410	AssignmentExpression	y = 0		490295	0		=			
ANR	490411	Identifier	y		490295	0					
ANR	490412	PrimaryExpression	0		490295	1					
ANR	490413	Condition	y < uv_height	821:14:26273:26285	490295	1	True				
ANR	490414	RelationalExpression	y < uv_height		490295	0		<			
ANR	490415	Identifier	y		490295	0					
ANR	490416	Identifier	uv_height		490295	1					
ANR	490417	UnaryExpression	++ y	821:29:26288:26290	490295	2	True				
ANR	490418	IncDec	++		490295	0					
ANR	490419	Identifier	y		490295	1					
ANR	490420	CompoundStatement		18:34:484:484	490295	3					
ANR	490421	Statement	uint8	822:4:26299:26303	490295	0	True				
ANR	490422	Statement	*	822:9:26304:26304	490295	1	True				
ANR	490423	Statement	const	822:11:26306:26310	490295	2	True				
ANR	490424	ExpressionStatement	Urow = U + y * uv_stride	822:17:26312:26336	490295	3	True				
ANR	490425	AssignmentExpression	Urow = U + y * uv_stride		490295	0		=			
ANR	490426	Identifier	Urow		490295	0					
ANR	490427	AdditiveExpression	U + y * uv_stride		490295	1		+			
ANR	490428	Identifier	U		490295	0					
ANR	490429	MultiplicativeExpression	y * uv_stride		490295	1		*			
ANR	490430	Identifier	y		490295	0					
ANR	490431	Identifier	uv_stride		490295	1					
ANR	490432	Statement	uint8	823:4:26342:26346	490295	4	True				
ANR	490433	Statement	*	823:9:26347:26347	490295	5	True				
ANR	490434	Statement	const	823:11:26349:26353	490295	6	True				
ANR	490435	ExpressionStatement	Vrow = V + y * uv_stride	823:17:26355:26379	490295	7	True				
ANR	490436	AssignmentExpression	Vrow = V + y * uv_stride		490295	0		=			
ANR	490437	Identifier	Vrow		490295	0					
ANR	490438	AdditiveExpression	V + y * uv_stride		490295	1		+			
ANR	490439	Identifier	V		490295	0					
ANR	490440	MultiplicativeExpression	y * uv_stride		490295	1		*			
ANR	490441	Identifier	y		490295	0					
ANR	490442	Identifier	uv_stride		490295	1					
ANR	490443	ForStatement	for ( x = 0 ; x < uv_width ; ++ x )		490295	8					
ANR	490444	ForInit	x = 0 ;	824:9:26390:26395	490295	0	True				
ANR	490445	AssignmentExpression	x = 0		490295	0		=			
ANR	490446	Identifier	x		490295	0					
ANR	490447	PrimaryExpression	0		490295	1					
ANR	490448	Condition	x < uv_width	824:16:26397:26408	490295	1	True				
ANR	490449	RelationalExpression	x < uv_width		490295	0		<			
ANR	490450	Identifier	x		490295	0					
ANR	490451	Identifier	uv_width		490295	1					
ANR	490452	UnaryExpression	++ x	824:30:26411:26413	490295	2	True				
ANR	490453	IncDec	++		490295	0					
ANR	490454	Identifier	x		490295	1					
ANR	490455	CompoundStatement		21:35:607:607	490295	3					
ANR	490456	ExpressionStatement	Urow [ x ] = ( ( ( Urow [ x ] - 127 ) * 7 ) >> 3 ) + 128	826:6:26463:26507	490295	0	True				
ANR	490457	AssignmentExpression	Urow [ x ] = ( ( ( Urow [ x ] - 127 ) * 7 ) >> 3 ) + 128		490295	0		=			
ANR	490458	ArrayIndexing	Urow [ x ]		490295	0					
ANR	490459	Identifier	Urow		490295	0					
ANR	490460	Identifier	x		490295	1					
ANR	490461	AdditiveExpression	( ( ( Urow [ x ] - 127 ) * 7 ) >> 3 ) + 128		490295	1		+			
ANR	490462	ShiftExpression	( ( Urow [ x ] - 127 ) * 7 ) >> 3		490295	0		>>			
ANR	490463	MultiplicativeExpression	( Urow [ x ] - 127 ) * 7		490295	0		*			
ANR	490464	AdditiveExpression	Urow [ x ] - 127		490295	0		-			
ANR	490465	ArrayIndexing	Urow [ x ]		490295	0					
ANR	490466	Identifier	Urow		490295	0					
ANR	490467	Identifier	x		490295	1					
ANR	490468	PrimaryExpression	127		490295	1					
ANR	490469	PrimaryExpression	7		490295	1					
ANR	490470	PrimaryExpression	3		490295	1					
ANR	490471	PrimaryExpression	128		490295	1					
ANR	490472	ExpressionStatement	Vrow [ x ] = ( ( ( Vrow [ x ] - 127 ) * 7 ) >> 3 ) + 128	827:6:26515:26559	490295	1	True				
ANR	490473	AssignmentExpression	Vrow [ x ] = ( ( ( Vrow [ x ] - 127 ) * 7 ) >> 3 ) + 128		490295	0		=			
ANR	490474	ArrayIndexing	Vrow [ x ]		490295	0					
ANR	490475	Identifier	Vrow		490295	0					
ANR	490476	Identifier	x		490295	1					
ANR	490477	AdditiveExpression	( ( ( Vrow [ x ] - 127 ) * 7 ) >> 3 ) + 128		490295	1		+			
ANR	490478	ShiftExpression	( ( Vrow [ x ] - 127 ) * 7 ) >> 3		490295	0		>>			
ANR	490479	MultiplicativeExpression	( Vrow [ x ] - 127 ) * 7		490295	0		*			
ANR	490480	AdditiveExpression	Vrow [ x ] - 127		490295	0		-			
ANR	490481	ArrayIndexing	Vrow [ x ]		490295	0					
ANR	490482	Identifier	Vrow		490295	0					
ANR	490483	Identifier	x		490295	1					
ANR	490484	PrimaryExpression	127		490295	1					
ANR	490485	PrimaryExpression	7		490295	1					
ANR	490486	PrimaryExpression	3		490295	1					
ANR	490487	PrimaryExpression	128		490295	1					
ANR	490488	ReturnType	void		490295	1					
ANR	490489	Identifier	AdjustColorspace		490295	2					
ANR	490490	ParameterList	"uint8 * Y , uint8 * U , uint8 * V , int width , int height"		490295	3					
ANR	490491	Parameter	uint8 * Y	804:22:25755:25762	490295	0	True				
ANR	490492	ParameterType	uint8 *		490295	0					
ANR	490493	Identifier	Y		490295	1					
ANR	490494	Parameter	uint8 * U	804:32:25765:25772	490295	1	True				
ANR	490495	ParameterType	uint8 *		490295	0					
ANR	490496	Identifier	U		490295	1					
ANR	490497	Parameter	uint8 * V	804:42:25775:25782	490295	2	True				
ANR	490498	ParameterType	uint8 *		490295	0					
ANR	490499	Identifier	V		490295	1					
ANR	490500	Parameter	int width	804:52:25785:25793	490295	3	True				
ANR	490501	ParameterType	int		490295	0					
ANR	490502	Identifier	width		490295	1					
ANR	490503	Parameter	int height	804:63:25796:25805	490295	4	True				
ANR	490504	ParameterType	int		490295	0					
ANR	490505	Identifier	height		490295	1					
ANR	490506	CFGEntryNode	ENTRY		490295		True				
ANR	490507	CFGExitNode	EXIT		490295		True				
ANR	490508	Symbol	uv_stride		490295						
ANR	490509	Symbol	* x		490295						
ANR	490510	Symbol	uv_width		490295						
ANR	490511	Symbol	Yrow		490295						
ANR	490512	Symbol	y_width		490295						
ANR	490513	Symbol	y_stride		490295						
ANR	490514	Symbol	Vrow		490295						
ANR	490515	Symbol	Urow		490295						
ANR	490516	Symbol	* Urow		490295						
ANR	490517	Symbol	* Vrow		490295						
ANR	490518	Symbol	* Yrow		490295						
ANR	490519	Symbol	U		490295						
ANR	490520	Symbol	V		490295						
ANR	490521	Symbol	width		490295						
ANR	490522	Symbol	x		490295						
ANR	490523	Symbol	Y		490295						
ANR	490524	Symbol	y		490295						
ANR	490525	Symbol	y_height		490295						
ANR	490526	Symbol	uv_height		490295						
ANR	490527	Symbol	height		490295						
ANR	490528	Function	AdjustColorspaceBack	832:0:26574:27595							
ANR	490529	FunctionDef	"AdjustColorspaceBack (uint8 * Y , uint8 * U , uint8 * V , int width , int height)"		490528	0					
ANR	490530	CompoundStatement		832:79:26653:27595	490528	0					
ANR	490531	IdentifierDeclStatement	int y_width = width ;	833:2:26657:26676	490528	0	True				
ANR	490532	IdentifierDecl	y_width = width		490528	0					
ANR	490533	IdentifierDeclType	int		490528	0					
ANR	490534	Identifier	y_width		490528	1					
ANR	490535	AssignmentExpression	y_width = width		490528	2		=			
ANR	490536	Identifier	width		490528	0					
ANR	490537	Identifier	width		490528	1					
ANR	490538	IdentifierDeclStatement	int y_height = height ;	834:2:26680:26701	490528	1	True				
ANR	490539	IdentifierDecl	y_height = height		490528	0					
ANR	490540	IdentifierDeclType	int		490528	0					
ANR	490541	Identifier	y_height		490528	1					
ANR	490542	AssignmentExpression	y_height = height		490528	2		=			
ANR	490543	Identifier	height		490528	0					
ANR	490544	Identifier	height		490528	1					
ANR	490545	IdentifierDeclStatement	int y_stride = y_width ;	835:2:26705:26727	490528	2	True				
ANR	490546	IdentifierDecl	y_stride = y_width		490528	0					
ANR	490547	IdentifierDeclType	int		490528	0					
ANR	490548	Identifier	y_stride		490528	1					
ANR	490549	AssignmentExpression	y_stride = y_width		490528	2		=			
ANR	490550	Identifier	y_width		490528	0					
ANR	490551	Identifier	y_width		490528	1					
ANR	490552	IdentifierDeclStatement	int uv_width = ( ( y_width + 1 ) >> 1 ) ;	836:2:26731:26766	490528	3	True				
ANR	490553	IdentifierDecl	uv_width = ( ( y_width + 1 ) >> 1 )		490528	0					
ANR	490554	IdentifierDeclType	int		490528	0					
ANR	490555	Identifier	uv_width		490528	1					
ANR	490556	AssignmentExpression	uv_width = ( ( y_width + 1 ) >> 1 )		490528	2		=			
ANR	490557	Identifier	uv_width		490528	0					
ANR	490558	ShiftExpression	( y_width + 1 ) >> 1		490528	1		>>			
ANR	490559	AdditiveExpression	y_width + 1		490528	0		+			
ANR	490560	Identifier	y_width		490528	0					
ANR	490561	PrimaryExpression	1		490528	1					
ANR	490562	PrimaryExpression	1		490528	1					
ANR	490563	IdentifierDeclStatement	int uv_height = ( ( y_height + 1 ) >> 1 ) ;	837:2:26770:26807	490528	4	True				
ANR	490564	IdentifierDecl	uv_height = ( ( y_height + 1 ) >> 1 )		490528	0					
ANR	490565	IdentifierDeclType	int		490528	0					
ANR	490566	Identifier	uv_height		490528	1					
ANR	490567	AssignmentExpression	uv_height = ( ( y_height + 1 ) >> 1 )		490528	2		=			
ANR	490568	Identifier	uv_height		490528	0					
ANR	490569	ShiftExpression	( y_height + 1 ) >> 1		490528	1		>>			
ANR	490570	AdditiveExpression	y_height + 1		490528	0		+			
ANR	490571	Identifier	y_height		490528	0					
ANR	490572	PrimaryExpression	1		490528	1					
ANR	490573	PrimaryExpression	1		490528	1					
ANR	490574	IdentifierDeclStatement	int uv_stride = uv_width ;	838:2:26811:26835	490528	5	True				
ANR	490575	IdentifierDecl	uv_stride = uv_width		490528	0					
ANR	490576	IdentifierDeclType	int		490528	0					
ANR	490577	Identifier	uv_stride		490528	1					
ANR	490578	AssignmentExpression	uv_stride = uv_width		490528	2		=			
ANR	490579	Identifier	uv_width		490528	0					
ANR	490580	Identifier	uv_width		490528	1					
ANR	490581	IdentifierDeclStatement	"int x , y ;"	839:2:26839:26847	490528	6	True				
ANR	490582	IdentifierDecl	x		490528	0					
ANR	490583	IdentifierDeclType	int		490528	0					
ANR	490584	Identifier	x		490528	1					
ANR	490585	IdentifierDecl	y		490528	1					
ANR	490586	IdentifierDeclType	int		490528	0					
ANR	490587	Identifier	y		490528	1					
ANR	490588	ForStatement	for ( y = 0 ; y < y_height ; ++ y )		490528	7					
ANR	490589	ForInit	y = 0 ;	841:7:26877:26882	490528	0	True				
ANR	490590	AssignmentExpression	y = 0		490528	0		=			
ANR	490591	Identifier	y		490528	0					
ANR	490592	PrimaryExpression	0		490528	1					
ANR	490593	Condition	y < y_height	841:14:26884:26895	490528	1	True				
ANR	490594	RelationalExpression	y < y_height		490528	0		<			
ANR	490595	Identifier	y		490528	0					
ANR	490596	Identifier	y_height		490528	1					
ANR	490597	UnaryExpression	++ y	841:28:26898:26900	490528	2	True				
ANR	490598	IncDec	++		490528	0					
ANR	490599	Identifier	y		490528	1					
ANR	490600	CompoundStatement		10:33:249:249	490528	3					
ANR	490601	Statement	uint8	842:4:26909:26913	490528	0	True				
ANR	490602	Statement	*	842:9:26914:26914	490528	1	True				
ANR	490603	Statement	const	842:11:26916:26920	490528	2	True				
ANR	490604	ExpressionStatement	Yrow = Y + y * y_stride	842:17:26922:26945	490528	3	True				
ANR	490605	AssignmentExpression	Yrow = Y + y * y_stride		490528	0		=			
ANR	490606	Identifier	Yrow		490528	0					
ANR	490607	AdditiveExpression	Y + y * y_stride		490528	1		+			
ANR	490608	Identifier	Y		490528	0					
ANR	490609	MultiplicativeExpression	y * y_stride		490528	1		*			
ANR	490610	Identifier	y		490528	0					
ANR	490611	Identifier	y_stride		490528	1					
ANR	490612	ForStatement	for ( x = 0 ; x < y_width ; ++ x )		490528	4					
ANR	490613	ForInit	x = 0 ;	843:9:26956:26961	490528	0	True				
ANR	490614	AssignmentExpression	x = 0		490528	0		=			
ANR	490615	Identifier	x		490528	0					
ANR	490616	PrimaryExpression	0		490528	1					
ANR	490617	Condition	x < y_width	843:16:26963:26973	490528	1	True				
ANR	490618	RelationalExpression	x < y_width		490528	0		<			
ANR	490619	Identifier	x		490528	0					
ANR	490620	Identifier	y_width		490528	1					
ANR	490621	UnaryExpression	++ x	843:29:26976:26978	490528	2	True				
ANR	490622	IncDec	++		490528	0					
ANR	490623	Identifier	x		490528	1					
ANR	490624	CompoundStatement		14:6:374:420	490528	3					
ANR	490625	IdentifierDeclStatement	const int v = ( ( Yrow [ x ] - 16 ) * 149 + 64 ) >> 7 ;	845:6:27028:27074	490528	0	True				
ANR	490626	IdentifierDecl	v = ( ( Yrow [ x ] - 16 ) * 149 + 64 ) >> 7		490528	0					
ANR	490627	IdentifierDeclType	const int		490528	0					
ANR	490628	Identifier	v		490528	1					
ANR	490629	AssignmentExpression	v = ( ( Yrow [ x ] - 16 ) * 149 + 64 ) >> 7		490528	2		=			
ANR	490630	Identifier	v		490528	0					
ANR	490631	ShiftExpression	( ( Yrow [ x ] - 16 ) * 149 + 64 ) >> 7		490528	1		>>			
ANR	490632	AdditiveExpression	( Yrow [ x ] - 16 ) * 149 + 64		490528	0		+			
ANR	490633	MultiplicativeExpression	( Yrow [ x ] - 16 ) * 149		490528	0		*			
ANR	490634	AdditiveExpression	Yrow [ x ] - 16		490528	0		-			
ANR	490635	ArrayIndexing	Yrow [ x ]		490528	0					
ANR	490636	Identifier	Yrow		490528	0					
ANR	490637	Identifier	x		490528	1					
ANR	490638	PrimaryExpression	16		490528	1					
ANR	490639	PrimaryExpression	149		490528	1					
ANR	490640	PrimaryExpression	64		490528	1					
ANR	490641	PrimaryExpression	7		490528	1					
ANR	490642	ExpressionStatement	Yrow [ x ] = ( v < 0 ) ? 0 : ( v > 255 ) ? 255u : v	846:6:27082:27126	490528	1	True				
ANR	490643	AssignmentExpression	Yrow [ x ] = ( v < 0 ) ? 0 : ( v > 255 ) ? 255u : v		490528	0		=			
ANR	490644	ArrayIndexing	Yrow [ x ]		490528	0					
ANR	490645	Identifier	Yrow		490528	0					
ANR	490646	Identifier	x		490528	1					
ANR	490647	ConditionalExpression	( v < 0 ) ? 0 : ( v > 255 ) ? 255u : v		490528	1					
ANR	490648	Condition	v < 0		490528	0					
ANR	490649	RelationalExpression	v < 0		490528	0		<			
ANR	490650	Identifier	v		490528	0					
ANR	490651	PrimaryExpression	0		490528	1					
ANR	490652	PrimaryExpression	0		490528	1					
ANR	490653	ConditionalExpression	( v > 255 ) ? 255u : v		490528	2					
ANR	490654	Condition	v > 255		490528	0					
ANR	490655	RelationalExpression	v > 255		490528	0		>			
ANR	490656	Identifier	v		490528	0					
ANR	490657	PrimaryExpression	255		490528	1					
ANR	490658	PrimaryExpression	255u		490528	1					
ANR	490659	Identifier	v		490528	2					
ANR	490660	ForStatement	for ( y = 0 ; y < uv_height ; ++ y )		490528	8					
ANR	490661	ForInit	y = 0 ;	850:7:27168:27173	490528	0	True				
ANR	490662	AssignmentExpression	y = 0		490528	0		=			
ANR	490663	Identifier	y		490528	0					
ANR	490664	PrimaryExpression	0		490528	1					
ANR	490665	Condition	y < uv_height	850:14:27175:27187	490528	1	True				
ANR	490666	RelationalExpression	y < uv_height		490528	0		<			
ANR	490667	Identifier	y		490528	0					
ANR	490668	Identifier	uv_height		490528	1					
ANR	490669	UnaryExpression	++ y	850:29:27190:27192	490528	2	True				
ANR	490670	IncDec	++		490528	0					
ANR	490671	Identifier	y		490528	1					
ANR	490672	CompoundStatement		19:34:541:541	490528	3					
ANR	490673	Statement	uint8	851:4:27201:27205	490528	0	True				
ANR	490674	Statement	*	851:9:27206:27206	490528	1	True				
ANR	490675	Statement	const	851:11:27208:27212	490528	2	True				
ANR	490676	ExpressionStatement	Urow = U + y * uv_stride	851:17:27214:27238	490528	3	True				
ANR	490677	AssignmentExpression	Urow = U + y * uv_stride		490528	0		=			
ANR	490678	Identifier	Urow		490528	0					
ANR	490679	AdditiveExpression	U + y * uv_stride		490528	1		+			
ANR	490680	Identifier	U		490528	0					
ANR	490681	MultiplicativeExpression	y * uv_stride		490528	1		*			
ANR	490682	Identifier	y		490528	0					
ANR	490683	Identifier	uv_stride		490528	1					
ANR	490684	Statement	uint8	852:4:27244:27248	490528	4	True				
ANR	490685	Statement	*	852:9:27249:27249	490528	5	True				
ANR	490686	Statement	const	852:11:27251:27255	490528	6	True				
ANR	490687	ExpressionStatement	Vrow = V + y * uv_stride	852:17:27257:27281	490528	7	True				
ANR	490688	AssignmentExpression	Vrow = V + y * uv_stride		490528	0		=			
ANR	490689	Identifier	Vrow		490528	0					
ANR	490690	AdditiveExpression	V + y * uv_stride		490528	1		+			
ANR	490691	Identifier	V		490528	0					
ANR	490692	MultiplicativeExpression	y * uv_stride		490528	1		*			
ANR	490693	Identifier	y		490528	0					
ANR	490694	Identifier	uv_stride		490528	1					
ANR	490695	ForStatement	for ( x = 0 ; x < uv_width ; ++ x )		490528	8					
ANR	490696	ForInit	x = 0 ;	853:9:27292:27297	490528	0	True				
ANR	490697	AssignmentExpression	x = 0		490528	0		=			
ANR	490698	Identifier	x		490528	0					
ANR	490699	PrimaryExpression	0		490528	1					
ANR	490700	Condition	x < uv_width	853:16:27299:27310	490528	1	True				
ANR	490701	RelationalExpression	x < uv_width		490528	0		<			
ANR	490702	Identifier	x		490528	0					
ANR	490703	Identifier	uv_width		490528	1					
ANR	490704	UnaryExpression	++ x	853:30:27313:27315	490528	2	True				
ANR	490705	IncDec	++		490528	0					
ANR	490706	Identifier	x		490528	1					
ANR	490707	CompoundStatement		25:6:769:819	490528	3					
ANR	490708	IdentifierDeclStatement	const int ru = ( ( ( Urow [ x ] - 128 ) * 73 ) >> 6 ) + 128 ;	855:6:27365:27415	490528	0	True				
ANR	490709	IdentifierDecl	ru = ( ( ( Urow [ x ] - 128 ) * 73 ) >> 6 ) + 128		490528	0					
ANR	490710	IdentifierDeclType	const int		490528	0					
ANR	490711	Identifier	ru		490528	1					
ANR	490712	AssignmentExpression	ru = ( ( ( Urow [ x ] - 128 ) * 73 ) >> 6 ) + 128		490528	2		=			
ANR	490713	Identifier	ru		490528	0					
ANR	490714	AdditiveExpression	( ( ( Urow [ x ] - 128 ) * 73 ) >> 6 ) + 128		490528	1		+			
ANR	490715	ShiftExpression	( ( Urow [ x ] - 128 ) * 73 ) >> 6		490528	0		>>			
ANR	490716	MultiplicativeExpression	( Urow [ x ] - 128 ) * 73		490528	0		*			
ANR	490717	AdditiveExpression	Urow [ x ] - 128		490528	0		-			
ANR	490718	ArrayIndexing	Urow [ x ]		490528	0					
ANR	490719	Identifier	Urow		490528	0					
ANR	490720	Identifier	x		490528	1					
ANR	490721	PrimaryExpression	128		490528	1					
ANR	490722	PrimaryExpression	73		490528	1					
ANR	490723	PrimaryExpression	6		490528	1					
ANR	490724	PrimaryExpression	128		490528	1					
ANR	490725	IdentifierDeclStatement	const int rv = ( ( ( Vrow [ x ] - 128 ) * 73 ) >> 6 ) + 128 ;	856:6:27423:27473	490528	1	True				
ANR	490726	IdentifierDecl	rv = ( ( ( Vrow [ x ] - 128 ) * 73 ) >> 6 ) + 128		490528	0					
ANR	490727	IdentifierDeclType	const int		490528	0					
ANR	490728	Identifier	rv		490528	1					
ANR	490729	AssignmentExpression	rv = ( ( ( Vrow [ x ] - 128 ) * 73 ) >> 6 ) + 128		490528	2		=			
ANR	490730	Identifier	rv		490528	0					
ANR	490731	AdditiveExpression	( ( ( Vrow [ x ] - 128 ) * 73 ) >> 6 ) + 128		490528	1		+			
ANR	490732	ShiftExpression	( ( Vrow [ x ] - 128 ) * 73 ) >> 6		490528	0		>>			
ANR	490733	MultiplicativeExpression	( Vrow [ x ] - 128 ) * 73		490528	0		*			
ANR	490734	AdditiveExpression	Vrow [ x ] - 128		490528	0		-			
ANR	490735	ArrayIndexing	Vrow [ x ]		490528	0					
ANR	490736	Identifier	Vrow		490528	0					
ANR	490737	Identifier	x		490528	1					
ANR	490738	PrimaryExpression	128		490528	1					
ANR	490739	PrimaryExpression	73		490528	1					
ANR	490740	PrimaryExpression	6		490528	1					
ANR	490741	PrimaryExpression	128		490528	1					
ANR	490742	ExpressionStatement	Urow [ x ] = ( ru < 0 ) ? 0 : ( ru > 255 ) ? 255u : ru	857:6:27481:27528	490528	2	True				
ANR	490743	AssignmentExpression	Urow [ x ] = ( ru < 0 ) ? 0 : ( ru > 255 ) ? 255u : ru		490528	0		=			
ANR	490744	ArrayIndexing	Urow [ x ]		490528	0					
ANR	490745	Identifier	Urow		490528	0					
ANR	490746	Identifier	x		490528	1					
ANR	490747	ConditionalExpression	( ru < 0 ) ? 0 : ( ru > 255 ) ? 255u : ru		490528	1					
ANR	490748	Condition	ru < 0		490528	0					
ANR	490749	RelationalExpression	ru < 0		490528	0		<			
ANR	490750	Identifier	ru		490528	0					
ANR	490751	PrimaryExpression	0		490528	1					
ANR	490752	PrimaryExpression	0		490528	1					
ANR	490753	ConditionalExpression	( ru > 255 ) ? 255u : ru		490528	2					
ANR	490754	Condition	ru > 255		490528	0					
ANR	490755	RelationalExpression	ru > 255		490528	0		>			
ANR	490756	Identifier	ru		490528	0					
ANR	490757	PrimaryExpression	255		490528	1					
ANR	490758	PrimaryExpression	255u		490528	1					
ANR	490759	Identifier	ru		490528	2					
ANR	490760	ExpressionStatement	Vrow [ x ] = ( rv < 0 ) ? 0 : ( rv > 255 ) ? 255u : rv	858:6:27536:27583	490528	3	True				
ANR	490761	AssignmentExpression	Vrow [ x ] = ( rv < 0 ) ? 0 : ( rv > 255 ) ? 255u : rv		490528	0		=			
ANR	490762	ArrayIndexing	Vrow [ x ]		490528	0					
ANR	490763	Identifier	Vrow		490528	0					
ANR	490764	Identifier	x		490528	1					
ANR	490765	ConditionalExpression	( rv < 0 ) ? 0 : ( rv > 255 ) ? 255u : rv		490528	1					
ANR	490766	Condition	rv < 0		490528	0					
ANR	490767	RelationalExpression	rv < 0		490528	0		<			
ANR	490768	Identifier	rv		490528	0					
ANR	490769	PrimaryExpression	0		490528	1					
ANR	490770	PrimaryExpression	0		490528	1					
ANR	490771	ConditionalExpression	( rv > 255 ) ? 255u : rv		490528	2					
ANR	490772	Condition	rv > 255		490528	0					
ANR	490773	RelationalExpression	rv > 255		490528	0		>			
ANR	490774	Identifier	rv		490528	0					
ANR	490775	PrimaryExpression	255		490528	1					
ANR	490776	PrimaryExpression	255u		490528	1					
ANR	490777	Identifier	rv		490528	2					
ANR	490778	ReturnType	void		490528	1					
ANR	490779	Identifier	AdjustColorspaceBack		490528	2					
ANR	490780	ParameterList	"uint8 * Y , uint8 * U , uint8 * V , int width , int height"		490528	3					
ANR	490781	Parameter	uint8 * Y	832:26:26600:26607	490528	0	True				
ANR	490782	ParameterType	uint8 *		490528	0					
ANR	490783	Identifier	Y		490528	1					
ANR	490784	Parameter	uint8 * U	832:36:26610:26617	490528	1	True				
ANR	490785	ParameterType	uint8 *		490528	0					
ANR	490786	Identifier	U		490528	1					
ANR	490787	Parameter	uint8 * V	832:46:26620:26627	490528	2	True				
ANR	490788	ParameterType	uint8 *		490528	0					
ANR	490789	Identifier	V		490528	1					
ANR	490790	Parameter	int width	832:56:26630:26638	490528	3	True				
ANR	490791	ParameterType	int		490528	0					
ANR	490792	Identifier	width		490528	1					
ANR	490793	Parameter	int height	832:67:26641:26650	490528	4	True				
ANR	490794	ParameterType	int		490528	0					
ANR	490795	Identifier	height		490528	1					
ANR	490796	CFGEntryNode	ENTRY		490528		True				
ANR	490797	CFGExitNode	EXIT		490528		True				
ANR	490798	Symbol	uv_stride		490528						
ANR	490799	Symbol	* x		490528						
ANR	490800	Symbol	ru		490528						
ANR	490801	Symbol	rv		490528						
ANR	490802	Symbol	uv_width		490528						
ANR	490803	Symbol	Yrow		490528						
ANR	490804	Symbol	y_width		490528						
ANR	490805	Symbol	y_stride		490528						
ANR	490806	Symbol	Vrow		490528						
ANR	490807	Symbol	Urow		490528						
ANR	490808	Symbol	* Urow		490528						
ANR	490809	Symbol	* Vrow		490528						
ANR	490810	Symbol	* Yrow		490528						
ANR	490811	Symbol	U		490528						
ANR	490812	Symbol	V		490528						
ANR	490813	Symbol	v		490528						
ANR	490814	Symbol	width		490528						
ANR	490815	Symbol	x		490528						
ANR	490816	Symbol	Y		490528						
ANR	490817	Symbol	y		490528						
ANR	490818	Symbol	y_height		490528						
ANR	490819	Symbol	uv_height		490528						
ANR	490820	Symbol	height		490528						
ANR	490821	Function	WebPGetInfo	863:0:27598:28978							
ANR	490822	FunctionDef	"WebPGetInfo (const uint8 * data , int data_size , int * width , int * height)"		490821	0					
ANR	490823	CompoundStatement		866:36:27749:28978	490821	0					
ANR	490824	IdentifierDeclStatement	"const uint32 chunk_size = SkipRiffHeader ( & data , & data_size ) ;"	867:1:27752:27811	490821	0	True				
ANR	490825	IdentifierDecl	"chunk_size = SkipRiffHeader ( & data , & data_size )"		490821	0					
ANR	490826	IdentifierDeclType	const uint32		490821	0					
ANR	490827	Identifier	chunk_size		490821	1					
ANR	490828	AssignmentExpression	"chunk_size = SkipRiffHeader ( & data , & data_size )"		490821	2		=			
ANR	490829	Identifier	chunk_size		490821	0					
ANR	490830	CallExpression	"SkipRiffHeader ( & data , & data_size )"		490821	1					
ANR	490831	Callee	SkipRiffHeader		490821	0					
ANR	490832	Identifier	SkipRiffHeader		490821	0					
ANR	490833	ArgumentList	& data		490821	1					
ANR	490834	Argument	& data		490821	0					
ANR	490835	UnaryOperationExpression	& data		490821	0					
ANR	490836	UnaryOperator	&		490821	0					
ANR	490837	Identifier	data		490821	1					
ANR	490838	Argument	& data_size		490821	1					
ANR	490839	UnaryOperationExpression	& data_size		490821	0					
ANR	490840	UnaryOperator	&		490821	0					
ANR	490841	Identifier	data_size		490821	1					
ANR	490842	IfStatement	if ( width )		490821	1					
ANR	490843	Condition	width	869:5:27819:27823	490821	0	True				
ANR	490844	Identifier	width		490821	0					
ANR	490845	ExpressionStatement	* width = 0	869:12:27826:27836	490821	1	True				
ANR	490846	AssignmentExpression	* width = 0		490821	0		=			
ANR	490847	UnaryOperationExpression	* width		490821	0					
ANR	490848	UnaryOperator	*		490821	0					
ANR	490849	Identifier	width		490821	1					
ANR	490850	PrimaryExpression	0		490821	1					
ANR	490851	IfStatement	if ( height )		490821	2					
ANR	490852	Condition	height	870:5:27843:27848	490821	0	True				
ANR	490853	Identifier	height		490821	0					
ANR	490854	ExpressionStatement	* height = 0	870:13:27851:27862	490821	1	True				
ANR	490855	AssignmentExpression	* height = 0		490821	0		=			
ANR	490856	UnaryOperationExpression	* height		490821	0					
ANR	490857	UnaryOperator	*		490821	0					
ANR	490858	Identifier	height		490821	1					
ANR	490859	PrimaryExpression	0		490821	1					
ANR	490860	IfStatement	if ( ! chunk_size )		490821	3					
ANR	490861	Condition	! chunk_size	872:5:27870:27880	490821	0	True				
ANR	490862	UnaryOperationExpression	! chunk_size		490821	0					
ANR	490863	UnaryOperator	!		490821	0					
ANR	490864	Identifier	chunk_size		490821	1					
ANR	490865	CompoundStatement		7:18:133:133	490821	1					
ANR	490866	ReturnStatement	return webp_failure ;	873:1:27886:27905	490821	0	True				
ANR	490867	Identifier	webp_failure		490821	0					
ANR	490868	IfStatement	if ( data_size < 10 )		490821	4					
ANR	490869	Condition	data_size < 10	877:5:27977:27990	490821	0	True				
ANR	490870	RelationalExpression	data_size < 10		490821	0		<			
ANR	490871	Identifier	data_size		490821	0					
ANR	490872	PrimaryExpression	10		490821	1					
ANR	490873	CompoundStatement		12:21:243:243	490821	1					
ANR	490874	ReturnStatement	return webp_failure ;	878:1:27996:28015	490821	0	True				
ANR	490875	Identifier	webp_failure		490821	0					
ANR	490876	IfStatement	if ( data [ 3 ] != 0x9d || data [ 4 ] != 0x01 || data [ 5 ] != 0x2a )		490821	5					
ANR	490877	Condition	data [ 3 ] != 0x9d || data [ 4 ] != 0x01 || data [ 5 ] != 0x2a	882:5:28073:28125	490821	0	True				
ANR	490878	OrExpression	data [ 3 ] != 0x9d || data [ 4 ] != 0x01 || data [ 5 ] != 0x2a		490821	0		||			
ANR	490879	EqualityExpression	data [ 3 ] != 0x9d		490821	0		!=			
ANR	490880	ArrayIndexing	data [ 3 ]		490821	0					
ANR	490881	Identifier	data		490821	0					
ANR	490882	PrimaryExpression	3		490821	1					
ANR	490883	PrimaryExpression	0x9d		490821	1					
ANR	490884	OrExpression	data [ 4 ] != 0x01 || data [ 5 ] != 0x2a		490821	1		||			
ANR	490885	EqualityExpression	data [ 4 ] != 0x01		490821	0		!=			
ANR	490886	ArrayIndexing	data [ 4 ]		490821	0					
ANR	490887	Identifier	data		490821	0					
ANR	490888	PrimaryExpression	4		490821	1					
ANR	490889	PrimaryExpression	0x01		490821	1					
ANR	490890	EqualityExpression	data [ 5 ] != 0x2a		490821	1		!=			
ANR	490891	ArrayIndexing	data [ 5 ]		490821	0					
ANR	490892	Identifier	data		490821	0					
ANR	490893	PrimaryExpression	5		490821	1					
ANR	490894	PrimaryExpression	0x2a		490821	1					
ANR	490895	CompoundStatement		17:60:378:378	490821	1					
ANR	490896	ReturnStatement	return webp_failure ;	883:2:28132:28151	490821	0	True				
ANR	490897	Identifier	webp_failure		490821	0					
ANR	490898	ElseStatement	else		490821	0					
ANR	490899	CompoundStatement		20:2:444:506	490821	0					
ANR	490900	IdentifierDeclStatement	const uint32 bits = data [ 0 ] | ( data [ 1 ] << 8 ) | ( data [ 2 ] << 16 ) ;	885:2:28194:28256	490821	0	True				
ANR	490901	IdentifierDecl	bits = data [ 0 ] | ( data [ 1 ] << 8 ) | ( data [ 2 ] << 16 )		490821	0					
ANR	490902	IdentifierDeclType	const uint32		490821	0					
ANR	490903	Identifier	bits		490821	1					
ANR	490904	AssignmentExpression	bits = data [ 0 ] | ( data [ 1 ] << 8 ) | ( data [ 2 ] << 16 )		490821	2		=			
ANR	490905	Identifier	bits		490821	0					
ANR	490906	InclusiveOrExpression	data [ 0 ] | ( data [ 1 ] << 8 ) | ( data [ 2 ] << 16 )		490821	1		|			
ANR	490907	ArrayIndexing	data [ 0 ]		490821	0					
ANR	490908	Identifier	data		490821	0					
ANR	490909	PrimaryExpression	0		490821	1					
ANR	490910	InclusiveOrExpression	( data [ 1 ] << 8 ) | ( data [ 2 ] << 16 )		490821	1		|			
ANR	490911	ShiftExpression	data [ 1 ] << 8		490821	0		<<			
ANR	490912	ArrayIndexing	data [ 1 ]		490821	0					
ANR	490913	Identifier	data		490821	0					
ANR	490914	PrimaryExpression	1		490821	1					
ANR	490915	PrimaryExpression	8		490821	1					
ANR	490916	ShiftExpression	data [ 2 ] << 16		490821	1		<<			
ANR	490917	ArrayIndexing	data [ 2 ]		490821	0					
ANR	490918	Identifier	data		490821	0					
ANR	490919	PrimaryExpression	2		490821	1					
ANR	490920	PrimaryExpression	16		490821	1					
ANR	490921	IfStatement	if ( ( bits & 1 ) )		490821	1					
ANR	490922	Condition	bits & 1	887:6:28265:28274	490821	0	True				
ANR	490923	BitAndExpression	bits & 1		490821	0		&			
ANR	490924	Identifier	bits		490821	0					
ANR	490925	PrimaryExpression	1		490821	1					
ANR	490926	CompoundStatement		22:18:527:527	490821	1					
ANR	490927	ReturnStatement	return webp_failure ;	888:3:28306:28325	490821	0	True				
ANR	490928	Identifier	webp_failure		490821	0					
ANR	490929	ElseStatement	else		490821	0					
ANR	490930	CompoundStatement		27:3:675:718	490821	0					
ANR	490931	IdentifierDeclStatement	const int profile = ( bits >> 1 ) & 7 ;	890:3:28341:28376	490821	0	True				
ANR	490932	IdentifierDecl	profile = ( bits >> 1 ) & 7		490821	0					
ANR	490933	IdentifierDeclType	const int		490821	0					
ANR	490934	Identifier	profile		490821	1					
ANR	490935	AssignmentExpression	profile = ( bits >> 1 ) & 7		490821	2		=			
ANR	490936	Identifier	profile		490821	0					
ANR	490937	BitAndExpression	( bits >> 1 ) & 7		490821	1		&			
ANR	490938	ShiftExpression	bits >> 1		490821	0		>>			
ANR	490939	Identifier	bits		490821	0					
ANR	490940	PrimaryExpression	1		490821	1					
ANR	490941	PrimaryExpression	7		490821	1					
ANR	490942	IdentifierDeclStatement	const int show_frame = ( bits >> 4 ) & 1 ;	891:3:28381:28420	490821	1	True				
ANR	490943	IdentifierDecl	show_frame = ( bits >> 4 ) & 1		490821	0					
ANR	490944	IdentifierDeclType	const int		490821	0					
ANR	490945	Identifier	show_frame		490821	1					
ANR	490946	AssignmentExpression	show_frame = ( bits >> 4 ) & 1		490821	2		=			
ANR	490947	Identifier	show_frame		490821	0					
ANR	490948	BitAndExpression	( bits >> 4 ) & 1		490821	1		&			
ANR	490949	ShiftExpression	bits >> 4		490821	0		>>			
ANR	490950	Identifier	bits		490821	0					
ANR	490951	PrimaryExpression	4		490821	1					
ANR	490952	PrimaryExpression	1		490821	1					
ANR	490953	IdentifierDeclStatement	const uint32 partition_length = ( bits >> 5 ) ;	892:3:28425:28468	490821	2	True				
ANR	490954	IdentifierDecl	partition_length = ( bits >> 5 )		490821	0					
ANR	490955	IdentifierDeclType	const uint32		490821	0					
ANR	490956	Identifier	partition_length		490821	1					
ANR	490957	AssignmentExpression	partition_length = ( bits >> 5 )		490821	2		=			
ANR	490958	Identifier	partition_length		490821	0					
ANR	490959	ShiftExpression	bits >> 5		490821	1		>>			
ANR	490960	Identifier	bits		490821	0					
ANR	490961	PrimaryExpression	5		490821	1					
ANR	490962	IfStatement	if ( profile > 3 )		490821	3					
ANR	490963	Condition	profile > 3	894:7:28478:28488	490821	0	True				
ANR	490964	RelationalExpression	profile > 3		490821	0		>			
ANR	490965	Identifier	profile		490821	0					
ANR	490966	PrimaryExpression	3		490821	1					
ANR	490967	CompoundStatement		29:20:741:741	490821	1					
ANR	490968	ReturnStatement	return webp_failure ;	895:4:28497:28516	490821	0	True				
ANR	490969	Identifier	webp_failure		490821	0					
ANR	490970	IfStatement	if ( ! show_frame )		490821	4					
ANR	490971	Condition	! show_frame	897:7:28554:28564	490821	0	True				
ANR	490972	UnaryOperationExpression	! show_frame		490821	0					
ANR	490973	UnaryOperator	!		490821	0					
ANR	490974	Identifier	show_frame		490821	1					
ANR	490975	CompoundStatement		32:20:817:817	490821	1					
ANR	490976	ReturnStatement	return webp_failure ;	898:4:28573:28592	490821	0	True				
ANR	490977	Identifier	webp_failure		490821	0					
ANR	490978	IfStatement	if ( partition_length >= chunk_size )		490821	5					
ANR	490979	Condition	partition_length >= chunk_size	900:7:28642:28671	490821	0	True				
ANR	490980	RelationalExpression	partition_length >= chunk_size		490821	0		>=			
ANR	490981	Identifier	partition_length		490821	0					
ANR	490982	Identifier	chunk_size		490821	1					
ANR	490983	CompoundStatement		35:39:924:924	490821	1					
ANR	490984	ReturnStatement	return webp_failure ;	901:4:28680:28699	490821	0	True				
ANR	490985	Identifier	webp_failure		490821	0					
ANR	490986	ElseStatement	else		490821	0					
ANR	490987	CompoundStatement		39:4:1061:1110	490821	0					
ANR	490988	IdentifierDeclStatement	const int w = ( ( data [ 7 ] << 8 ) | data [ 6 ] ) & 0x3fff ;	903:4:28756:28805	490821	0	True				
ANR	490989	IdentifierDecl	w = ( ( data [ 7 ] << 8 ) | data [ 6 ] ) & 0x3fff		490821	0					
ANR	490990	IdentifierDeclType	const int		490821	0					
ANR	490991	Identifier	w		490821	1					
ANR	490992	AssignmentExpression	w = ( ( data [ 7 ] << 8 ) | data [ 6 ] ) & 0x3fff		490821	2		=			
ANR	490993	Identifier	w		490821	0					
ANR	490994	BitAndExpression	( ( data [ 7 ] << 8 ) | data [ 6 ] ) & 0x3fff		490821	1		&			
ANR	490995	InclusiveOrExpression	( data [ 7 ] << 8 ) | data [ 6 ]		490821	0		|			
ANR	490996	ShiftExpression	data [ 7 ] << 8		490821	0		<<			
ANR	490997	ArrayIndexing	data [ 7 ]		490821	0					
ANR	490998	Identifier	data		490821	0					
ANR	490999	PrimaryExpression	7		490821	1					
ANR	491000	PrimaryExpression	8		490821	1					
ANR	491001	ArrayIndexing	data [ 6 ]		490821	1					
ANR	491002	Identifier	data		490821	0					
ANR	491003	PrimaryExpression	6		490821	1					
ANR	491004	PrimaryExpression	0x3fff		490821	1					
ANR	491005	IdentifierDeclStatement	const int h = ( ( data [ 9 ] << 8 ) | data [ 8 ] ) & 0x3fff ;	904:4:28811:28860	490821	1	True				
ANR	491006	IdentifierDecl	h = ( ( data [ 9 ] << 8 ) | data [ 8 ] ) & 0x3fff		490821	0					
ANR	491007	IdentifierDeclType	const int		490821	0					
ANR	491008	Identifier	h		490821	1					
ANR	491009	AssignmentExpression	h = ( ( data [ 9 ] << 8 ) | data [ 8 ] ) & 0x3fff		490821	2		=			
ANR	491010	Identifier	h		490821	0					
ANR	491011	BitAndExpression	( ( data [ 9 ] << 8 ) | data [ 8 ] ) & 0x3fff		490821	1		&			
ANR	491012	InclusiveOrExpression	( data [ 9 ] << 8 ) | data [ 8 ]		490821	0		|			
ANR	491013	ShiftExpression	data [ 9 ] << 8		490821	0		<<			
ANR	491014	ArrayIndexing	data [ 9 ]		490821	0					
ANR	491015	Identifier	data		490821	0					
ANR	491016	PrimaryExpression	9		490821	1					
ANR	491017	PrimaryExpression	8		490821	1					
ANR	491018	ArrayIndexing	data [ 8 ]		490821	1					
ANR	491019	Identifier	data		490821	0					
ANR	491020	PrimaryExpression	8		490821	1					
ANR	491021	PrimaryExpression	0x3fff		490821	1					
ANR	491022	IfStatement	if ( width )		490821	2					
ANR	491023	Condition	width	905:8:28870:28874	490821	0	True				
ANR	491024	Identifier	width		490821	0					
ANR	491025	ExpressionStatement	* width = w	905:15:28877:28887	490821	1	True				
ANR	491026	AssignmentExpression	* width = w		490821	0		=			
ANR	491027	UnaryOperationExpression	* width		490821	0					
ANR	491028	UnaryOperator	*		490821	0					
ANR	491029	Identifier	width		490821	1					
ANR	491030	Identifier	w		490821	1					
ANR	491031	IfStatement	if ( height )		490821	3					
ANR	491032	Condition	height	906:8:28897:28902	490821	0	True				
ANR	491033	Identifier	height		490821	0					
ANR	491034	ExpressionStatement	* height = h	906:16:28905:28916	490821	1	True				
ANR	491035	AssignmentExpression	* height = h		490821	0		=			
ANR	491036	UnaryOperationExpression	* height		490821	0					
ANR	491037	UnaryOperator	*		490821	0					
ANR	491038	Identifier	height		490821	1					
ANR	491039	Identifier	h		490821	1					
ANR	491040	ReturnStatement	return webp_success ;	908:4:28923:28942	490821	4	True				
ANR	491041	Identifier	webp_success		490821	0					
ANR	491042	ReturnStatement	return webp_failure ;	912:1:28957:28976	490821	6	True				
ANR	491043	Identifier	webp_failure		490821	0					
ANR	491044	ReturnType	WebPResult		490821	1					
ANR	491045	Identifier	WebPGetInfo		490821	2					
ANR	491046	ParameterList	"const uint8 * data , int data_size , int * width , int * height"		490821	3					
ANR	491047	Parameter	const uint8 * data	863:23:27621:27637	490821	0	True				
ANR	491048	ParameterType	const uint8 *		490821	0					
ANR	491049	Identifier	data		490821	1					
ANR	491050	Parameter	int data_size	864:23:27663:27675	490821	1	True				
ANR	491051	ParameterType	int		490821	0					
ANR	491052	Identifier	data_size		490821	1					
ANR	491053	Parameter	int * width	865:23:27701:27710	490821	2	True				
ANR	491054	ParameterType	int *		490821	0					
ANR	491055	Identifier	width		490821	1					
ANR	491056	Parameter	int * height	866:23:27736:27746	490821	3	True				
ANR	491057	ParameterType	int *		490821	0					
ANR	491058	Identifier	height		490821	1					
ANR	491059	CFGEntryNode	ENTRY		490821		True				
ANR	491060	CFGExitNode	EXIT		490821		True				
ANR	491061	Symbol	data_size		490821						
ANR	491062	Symbol	webp_success		490821						
ANR	491063	Symbol	chunk_size		490821						
ANR	491064	Symbol	data		490821						
ANR	491065	Symbol	partition_length		490821						
ANR	491066	Symbol	profile		490821						
ANR	491067	Symbol	bits		490821						
ANR	491068	Symbol	h		490821						
ANR	491069	Symbol	show_frame		490821						
ANR	491070	Symbol	& data_size		490821						
ANR	491071	Symbol	* height		490821						
ANR	491072	Symbol	& data		490821						
ANR	491073	Symbol	* width		490821						
ANR	491074	Symbol	webp_failure		490821						
ANR	491075	Symbol	w		490821						
ANR	491076	Symbol	width		490821						
ANR	491077	Symbol	* data		490821						
ANR	491078	Symbol	height		490821						
ANR	491079	Symbol	SkipRiffHeader		490821						
