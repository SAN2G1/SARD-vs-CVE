command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	85998	File	data/converged/CVE-2017-11142_php-src/Zend_zend_interfaces.c								
ANR	85999	DeclStmt									
ANR	86000	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry *	zend_ce_traversable
ANR	86001	DeclStmt									
ANR	86002	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry *	zend_ce_aggregate
ANR	86003	DeclStmt									
ANR	86004	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry *	zend_ce_iterator
ANR	86005	DeclStmt									
ANR	86006	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry *	zend_ce_arrayaccess
ANR	86007	DeclStmt									
ANR	86008	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry *	zend_ce_serializable
ANR	86009	DeclStmt									
ANR	86010	Decl							int	int	result
ANR	86011	DeclStmt									
ANR	86012	Decl							zend_fcall_info	zend_fcall_info	fci
ANR	86013	DeclStmt									
ANR	86014	Decl							zval	zval	z_fname
ANR	86015	DeclStmt									
ANR	86016	Decl							zval	zval *	retval
ANR	86017	DeclStmt									
ANR	86018	Decl							HashTable	HashTable *	function_table
ANR	86019	DeclStmt									
ANR	86020	Decl							zval	zval * * [ 2 ]	params
ANR	86021	DeclStmt									
ANR	86022	Decl							zend_fcall_info_cache	zend_fcall_info_cache	fcic
ANR	86023	DeclStmt									
ANR	86024	Decl							zval	zval *	retval
ANR	86025	DeclStmt									
ANR	86026	Decl							zend_user_iterator	zend_user_iterator *	iter
ANR	86027	DeclStmt									
ANR	86028	Decl							zend_user_iterator	zend_user_iterator *	iter
ANR	86029	DeclStmt									
ANR	86030	Decl							zval	zval *	object
ANR	86031	DeclStmt									
ANR	86032	Decl							zend_user_iterator	zend_user_iterator *	iter
ANR	86033	DeclStmt									
ANR	86034	Decl							zval	zval *	object
ANR	86035	DeclStmt									
ANR	86036	Decl							zval	zval *	more
ANR	86037	DeclStmt									
ANR	86038	Decl							int	int	result
ANR	86039	DeclStmt									
ANR	86040	Decl							zend_user_iterator	zend_user_iterator *	iter
ANR	86041	DeclStmt									
ANR	86042	Decl							zval	zval *	object
ANR	86043	DeclStmt									
ANR	86044	Decl							zend_user_iterator	zend_user_iterator *	iter
ANR	86045	DeclStmt									
ANR	86046	Decl							zval	zval *	object
ANR	86047	DeclStmt									
ANR	86048	Decl							zval	zval *	retval
ANR	86049	DeclStmt									
ANR	86050	Decl							zend_user_iterator	zend_user_iterator *	iter
ANR	86051	DeclStmt									
ANR	86052	Decl							zval	zval *	object
ANR	86053	DeclStmt									
ANR	86054	Decl							zend_user_iterator	zend_user_iterator *	iter
ANR	86055	DeclStmt									
ANR	86056	Decl							zval	zval *	object
ANR	86057	DeclStmt									
ANR	86058	Decl							zend_object_iterator_funcs	zend_object_iterator_funcs	zend_interface_iterator_funcs_iterator
ANR	86059	Function	zend_user_it_get_iterator	250:0:7836:8337							
ANR	86060	FunctionDef	"zend_user_it_get_iterator (zend_class_entry * ce , zval * object , int by_ref TSRMLS_DC)"		86059	0					
ANR	86061	CompoundStatement		251:0:7949:8337	86059	0					
ANR	86062	IdentifierDeclStatement	zend_user_iterator * iterator ;	252:1:7952:7980	86059	0	True				
ANR	86063	IdentifierDecl	* iterator		86059	0					
ANR	86064	IdentifierDeclType	zend_user_iterator *		86059	0					
ANR	86065	Identifier	iterator		86059	1					
ANR	86066	IfStatement	if ( by_ref )		86059	1					
ANR	86067	Condition	by_ref	254:5:7988:7993	86059	0	True				
ANR	86068	Identifier	by_ref		86059	0					
ANR	86069	CompoundStatement		4:13:46:46	86059	1					
ANR	86070	ExpressionStatement	"zend_error ( E_ERROR , ""An iterator cannot be used with foreach by reference"" )"	255:2:8000:8075	86059	0	True				
ANR	86071	CallExpression	"zend_error ( E_ERROR , ""An iterator cannot be used with foreach by reference"" )"		86059	0					
ANR	86072	Callee	zend_error		86059	0					
ANR	86073	Identifier	zend_error		86059	0					
ANR	86074	ArgumentList	E_ERROR		86059	1					
ANR	86075	Argument	E_ERROR		86059	0					
ANR	86076	Identifier	E_ERROR		86059	0					
ANR	86077	Argument	"""An iterator cannot be used with foreach by reference"""		86059	1					
ANR	86078	PrimaryExpression	"""An iterator cannot be used with foreach by reference"""		86059	0					
ANR	86079	ExpressionStatement	iterator = emalloc ( sizeof ( zend_user_iterator ) )	258:1:8082:8128	86059	2	True				
ANR	86080	AssignmentExpression	iterator = emalloc ( sizeof ( zend_user_iterator ) )		86059	0		=			
ANR	86081	Identifier	iterator		86059	0					
ANR	86082	CallExpression	emalloc ( sizeof ( zend_user_iterator ) )		86059	1					
ANR	86083	Callee	emalloc		86059	0					
ANR	86084	Identifier	emalloc		86059	0					
ANR	86085	ArgumentList	sizeof ( zend_user_iterator )		86059	1					
ANR	86086	Argument	sizeof ( zend_user_iterator )		86059	0					
ANR	86087	SizeofExpression	sizeof ( zend_user_iterator )		86059	0					
ANR	86088	Sizeof	sizeof		86059	0					
ANR	86089	SizeofOperand	zend_user_iterator		86059	1					
ANR	86090	ExpressionStatement	Z_ADDREF_P ( object )	260:1:8132:8150	86059	3	True				
ANR	86091	CallExpression	Z_ADDREF_P ( object )		86059	0					
ANR	86092	Callee	Z_ADDREF_P		86059	0					
ANR	86093	Identifier	Z_ADDREF_P		86059	0					
ANR	86094	ArgumentList	object		86059	1					
ANR	86095	Argument	object		86059	0					
ANR	86096	Identifier	object		86059	0					
ANR	86097	ExpressionStatement	iterator -> it . data = ( void * ) object	261:1:8153:8186	86059	4	True				
ANR	86098	AssignmentExpression	iterator -> it . data = ( void * ) object		86059	0		=			
ANR	86099	MemberAccess	iterator -> it . data		86059	0					
ANR	86100	PtrMemberAccess	iterator -> it		86059	0					
ANR	86101	Identifier	iterator		86059	0					
ANR	86102	Identifier	it		86059	1					
ANR	86103	Identifier	data		86059	1					
ANR	86104	CastExpression	( void * ) object		86059	1					
ANR	86105	CastTarget	void *		86059	0					
ANR	86106	Identifier	object		86059	1					
ANR	86107	ExpressionStatement	iterator -> it . funcs = ce -> iterator_funcs . funcs	262:1:8189:8234	86059	5	True				
ANR	86108	AssignmentExpression	iterator -> it . funcs = ce -> iterator_funcs . funcs		86059	0		=			
ANR	86109	MemberAccess	iterator -> it . funcs		86059	0					
ANR	86110	PtrMemberAccess	iterator -> it		86059	0					
ANR	86111	Identifier	iterator		86059	0					
ANR	86112	Identifier	it		86059	1					
ANR	86113	Identifier	funcs		86059	1					
ANR	86114	MemberAccess	ce -> iterator_funcs . funcs		86059	1					
ANR	86115	PtrMemberAccess	ce -> iterator_funcs		86059	0					
ANR	86116	Identifier	ce		86059	0					
ANR	86117	Identifier	iterator_funcs		86059	1					
ANR	86118	Identifier	funcs		86059	1					
ANR	86119	ExpressionStatement	iterator -> ce = Z_OBJCE_P ( object )	263:1:8237:8269	86059	6	True				
ANR	86120	AssignmentExpression	iterator -> ce = Z_OBJCE_P ( object )		86059	0		=			
ANR	86121	PtrMemberAccess	iterator -> ce		86059	0					
ANR	86122	Identifier	iterator		86059	0					
ANR	86123	Identifier	ce		86059	1					
ANR	86124	CallExpression	Z_OBJCE_P ( object )		86059	1					
ANR	86125	Callee	Z_OBJCE_P		86059	0					
ANR	86126	Identifier	Z_OBJCE_P		86059	0					
ANR	86127	ArgumentList	object		86059	1					
ANR	86128	Argument	object		86059	0					
ANR	86129	Identifier	object		86059	0					
ANR	86130	ExpressionStatement	iterator -> value = NULL	264:1:8272:8294	86059	7	True				
ANR	86131	AssignmentExpression	iterator -> value = NULL		86059	0		=			
ANR	86132	PtrMemberAccess	iterator -> value		86059	0					
ANR	86133	Identifier	iterator		86059	0					
ANR	86134	Identifier	value		86059	1					
ANR	86135	Identifier	NULL		86059	1					
ANR	86136	ReturnStatement	return ( zend_object_iterator * ) iterator ;	265:1:8297:8335	86059	8	True				
ANR	86137	CastExpression	( zend_object_iterator * ) iterator		86059	0					
ANR	86138	CastTarget	zend_object_iterator *		86059	0					
ANR	86139	Identifier	iterator		86059	1					
ANR	86140	ReturnType	static zend_object_iterator *		86059	1					
ANR	86141	Identifier	zend_user_it_get_iterator		86059	2					
ANR	86142	ParameterList	"zend_class_entry * ce , zval * object , int by_ref TSRMLS_DC"		86059	3					
ANR	86143	Parameter	zend_class_entry * ce	250:55:7891:7910	86059	0	True				
ANR	86144	ParameterType	zend_class_entry *		86059	0					
ANR	86145	Identifier	ce		86059	1					
ANR	86146	Parameter	zval * object	250:77:7913:7924	86059	1	True				
ANR	86147	ParameterType	zval *		86059	0					
ANR	86148	Identifier	object		86059	1					
ANR	86149	Parameter	int by_ref TSRMLS_DC	250:91:7927:7946	86059	2	True				
ANR	86150	ParameterType	int by_ref		86059	0					
ANR	86151	Identifier	TSRMLS_DC		86059	1					
ANR	86152	CFGEntryNode	ENTRY		86059		True				
ANR	86153	CFGExitNode	EXIT		86059		True				
ANR	86154	Symbol	ce		86059						
ANR	86155	Symbol	NULL		86059						
ANR	86156	Symbol	iterator -> ce		86059						
ANR	86157	Symbol	* ce		86059						
ANR	86158	Symbol	TSRMLS_DC		86059						
ANR	86159	Symbol	iterator -> it . funcs		86059						
ANR	86160	Symbol	iterator -> it . data		86059						
ANR	86161	Symbol	iterator		86059						
ANR	86162	Symbol	emalloc		86059						
ANR	86163	Symbol	* iterator		86059						
ANR	86164	Symbol	E_ERROR		86059						
ANR	86165	Symbol	ce -> iterator_funcs		86059						
ANR	86166	Symbol	Z_OBJCE_P		86059						
ANR	86167	Symbol	by_ref		86059						
ANR	86168	Symbol	iterator -> value		86059						
ANR	86169	Symbol	iterator -> it		86059						
ANR	86170	Symbol	ce -> iterator_funcs . funcs		86059						
ANR	86171	Symbol	object		86059						
ANR	86172	Function	zend_user_it_get_new_iterator	270:0:8390:9237							
ANR	86173	FunctionDef	"zend_user_it_get_new_iterator (zend_class_entry * ce , zval * object , int by_ref TSRMLS_DC)"		86172	0					
ANR	86174	CompoundStatement		271:0:8509:9237	86172	0					
ANR	86175	Statement	zval	272:1:8512:8515	86172	0	True				
ANR	86176	Statement	*	272:6:8517:8517	86172	1	True				
ANR	86177	Statement	iterator	272:7:8518:8525	86172	2	True				
ANR	86178	Statement	=	272:16:8527:8527	86172	3	True				
ANR	86179	Statement	zend_user_it_new_iterator	272:18:8529:8553	86172	4	True				
ANR	86180	Statement	(	272:43:8554:8554	86172	5	True				
ANR	86181	Statement	ce	272:44:8555:8556	86172	6	True				
ANR	86182	Statement	","	272:46:8557:8557	86172	7	True				
ANR	86183	Statement	object	272:48:8559:8564	86172	8	True				
ANR	86184	Statement	TSRMLS_CC	272:55:8566:8574	86172	9	True				
ANR	86185	Statement	)	272:64:8575:8575	86172	10	True				
ANR	86186	ExpressionStatement		272:65:8576:8576	86172	11	True				
ANR	86187	IdentifierDeclStatement	zend_object_iterator * new_iterator ;	273:1:8579:8613	86172	12	True				
ANR	86188	IdentifierDecl	* new_iterator		86172	0					
ANR	86189	IdentifierDeclType	zend_object_iterator *		86172	0					
ANR	86190	Identifier	new_iterator		86172	1					
ANR	86191	IdentifierDeclStatement	zend_class_entry * ce_it = iterator && Z_TYPE_P ( iterator ) == IS_OBJECT ? Z_OBJCE_P ( iterator ) : NULL ;	275:1:8617:8715	86172	13	True				
ANR	86192	IdentifierDecl	* ce_it = iterator && Z_TYPE_P ( iterator ) == IS_OBJECT ? Z_OBJCE_P ( iterator ) : NULL		86172	0					
ANR	86193	IdentifierDeclType	zend_class_entry *		86172	0					
ANR	86194	Identifier	ce_it		86172	1					
ANR	86195	AssignmentExpression	* ce_it = iterator && Z_TYPE_P ( iterator ) == IS_OBJECT ? Z_OBJCE_P ( iterator ) : NULL		86172	2		=			
ANR	86196	Identifier	ce_it		86172	0					
ANR	86197	ConditionalExpression	iterator && Z_TYPE_P ( iterator ) == IS_OBJECT ? Z_OBJCE_P ( iterator ) : NULL		86172	1					
ANR	86198	Condition	iterator && Z_TYPE_P ( iterator ) == IS_OBJECT		86172	0					
ANR	86199	AndExpression	iterator && Z_TYPE_P ( iterator ) == IS_OBJECT		86172	0		&&			
ANR	86200	Identifier	iterator		86172	0					
ANR	86201	EqualityExpression	Z_TYPE_P ( iterator ) == IS_OBJECT		86172	1		==			
ANR	86202	CallExpression	Z_TYPE_P ( iterator )		86172	0					
ANR	86203	Callee	Z_TYPE_P		86172	0					
ANR	86204	Identifier	Z_TYPE_P		86172	0					
ANR	86205	ArgumentList	iterator		86172	1					
ANR	86206	Argument	iterator		86172	0					
ANR	86207	Identifier	iterator		86172	0					
ANR	86208	Identifier	IS_OBJECT		86172	1					
ANR	86209	CallExpression	Z_OBJCE_P ( iterator )		86172	1					
ANR	86210	Callee	Z_OBJCE_P		86172	0					
ANR	86211	Identifier	Z_OBJCE_P		86172	0					
ANR	86212	ArgumentList	iterator		86172	1					
ANR	86213	Argument	iterator		86172	0					
ANR	86214	Identifier	iterator		86172	0					
ANR	86215	Identifier	NULL		86172	2					
ANR	86216	IfStatement	if ( ! ce_it || ! ce_it -> get_iterator || ( ce_it -> get_iterator == zend_user_it_get_new_iterator && iterator == object ) )		86172	14					
ANR	86217	Condition	! ce_it || ! ce_it -> get_iterator || ( ce_it -> get_iterator == zend_user_it_get_new_iterator && iterator == object )	277:5:8723:8832	86172	0	True				
ANR	86218	OrExpression	! ce_it || ! ce_it -> get_iterator || ( ce_it -> get_iterator == zend_user_it_get_new_iterator && iterator == object )		86172	0		||			
ANR	86219	UnaryOperationExpression	! ce_it		86172	0					
ANR	86220	UnaryOperator	!		86172	0					
ANR	86221	Identifier	ce_it		86172	1					
ANR	86222	OrExpression	! ce_it -> get_iterator || ( ce_it -> get_iterator == zend_user_it_get_new_iterator && iterator == object )		86172	1		||			
ANR	86223	UnaryOperationExpression	! ce_it -> get_iterator		86172	0					
ANR	86224	UnaryOperator	!		86172	0					
ANR	86225	PtrMemberAccess	ce_it -> get_iterator		86172	1					
ANR	86226	Identifier	ce_it		86172	0					
ANR	86227	Identifier	get_iterator		86172	1					
ANR	86228	AndExpression	ce_it -> get_iterator == zend_user_it_get_new_iterator && iterator == object		86172	1		&&			
ANR	86229	EqualityExpression	ce_it -> get_iterator == zend_user_it_get_new_iterator		86172	0		==			
ANR	86230	PtrMemberAccess	ce_it -> get_iterator		86172	0					
ANR	86231	Identifier	ce_it		86172	0					
ANR	86232	Identifier	get_iterator		86172	1					
ANR	86233	Identifier	zend_user_it_get_new_iterator		86172	1					
ANR	86234	EqualityExpression	iterator == object		86172	1		==			
ANR	86235	Identifier	iterator		86172	0					
ANR	86236	Identifier	object		86172	1					
ANR	86237	CompoundStatement		7:117:325:325	86172	1					
ANR	86238	IfStatement	if ( ! EG ( exception ) )		86172	0					
ANR	86239	Condition	! EG ( exception )	278:6:8843:8856	86172	0	True				
ANR	86240	UnaryOperationExpression	! EG ( exception )		86172	0					
ANR	86241	UnaryOperator	!		86172	0					
ANR	86242	CallExpression	EG ( exception )		86172	1					
ANR	86243	Callee	EG		86172	0					
ANR	86244	Identifier	EG		86172	0					
ANR	86245	ArgumentList	exception		86172	1					
ANR	86246	Argument	exception		86172	0					
ANR	86247	Identifier	exception		86172	0					
ANR	86248	CompoundStatement		8:22:349:349	86172	1					
ANR	86249	Statement	zend_throw_exception_ex	279:3:8864:8886	86172	0	True				
ANR	86250	Statement	(	279:26:8887:8887	86172	1	True				
ANR	86251	Statement	NULL	279:27:8888:8891	86172	2	True				
ANR	86252	Statement	","	279:31:8892:8892	86172	3	True				
ANR	86253	Statement	0	279:33:8894:8894	86172	4	True				
ANR	86254	Statement	TSRMLS_CC	279:35:8896:8904	86172	5	True				
ANR	86255	Statement	","	279:44:8905:8905	86172	6	True				
ANR	86256	Statement	"""Objects returned by %s::getIterator() must be traversable or implement interface Iterator"""	279:46:8907:8997	86172	7	True				
ANR	86257	Statement	","	279:137:8998:8998	86172	8	True				
ANR	86258	Statement	ce	279:139:9000:9001	86172	9	True				
ANR	86259	Statement	?	279:142:9003:9003	86172	10	True				
ANR	86260	Statement	ce	279:144:9005:9006	86172	11	True				
ANR	86261	Statement	->	279:146:9007:9008	86172	12	True				
ANR	86262	Label	name :	279:148:9009:9014	86172	13	True				
ANR	86263	Identifier	name		86172	0					
ANR	86264	Statement	Z_OBJCE_P	279:155:9016:9024	86172	14	True				
ANR	86265	Statement	(	279:164:9025:9025	86172	15	True				
ANR	86266	Statement	object	279:165:9026:9031	86172	16	True				
ANR	86267	Statement	)	279:171:9032:9032	86172	17	True				
ANR	86268	Statement	->	279:172:9033:9034	86172	18	True				
ANR	86269	Statement	name	279:174:9035:9038	86172	19	True				
ANR	86270	Statement	)	279:178:9039:9039	86172	20	True				
ANR	86271	ExpressionStatement		279:179:9040:9040	86172	21	True				
ANR	86272	IfStatement	if ( iterator )		86172	1					
ANR	86273	Condition	iterator	281:6:9052:9059	86172	0	True				
ANR	86274	Identifier	iterator		86172	0					
ANR	86275	CompoundStatement		11:16:552:552	86172	1					
ANR	86276	ExpressionStatement	zval_ptr_dtor ( & iterator )	282:3:9067:9091	86172	0	True				
ANR	86277	CallExpression	zval_ptr_dtor ( & iterator )		86172	0					
ANR	86278	Callee	zval_ptr_dtor		86172	0					
ANR	86279	Identifier	zval_ptr_dtor		86172	0					
ANR	86280	ArgumentList	& iterator		86172	1					
ANR	86281	Argument	& iterator		86172	0					
ANR	86282	UnaryOperationExpression	& iterator		86172	0					
ANR	86283	UnaryOperator	&		86172	0					
ANR	86284	Identifier	iterator		86172	1					
ANR	86285	ReturnStatement	return NULL ;	284:2:9099:9110	86172	2	True				
ANR	86286	Identifier	NULL		86172	0					
ANR	86287	Statement	new_iterator	287:1:9117:9128	86172	15	True				
ANR	86288	Statement	=	287:14:9130:9130	86172	16	True				
ANR	86289	Statement	ce_it	287:16:9132:9136	86172	17	True				
ANR	86290	Statement	->	287:21:9137:9138	86172	18	True				
ANR	86291	Statement	get_iterator	287:23:9139:9150	86172	19	True				
ANR	86292	Statement	(	287:35:9151:9151	86172	20	True				
ANR	86293	Statement	ce_it	287:36:9152:9156	86172	21	True				
ANR	86294	Statement	","	287:41:9157:9157	86172	22	True				
ANR	86295	Statement	iterator	287:43:9159:9166	86172	23	True				
ANR	86296	Statement	","	287:51:9167:9167	86172	24	True				
ANR	86297	Statement	by_ref	287:53:9169:9174	86172	25	True				
ANR	86298	Statement	TSRMLS_CC	287:60:9176:9184	86172	26	True				
ANR	86299	Statement	)	287:69:9185:9185	86172	27	True				
ANR	86300	ExpressionStatement		287:70:9186:9186	86172	28	True				
ANR	86301	ExpressionStatement	zval_ptr_dtor ( & iterator )	288:1:9189:9213	86172	29	True				
ANR	86302	CallExpression	zval_ptr_dtor ( & iterator )		86172	0					
ANR	86303	Callee	zval_ptr_dtor		86172	0					
ANR	86304	Identifier	zval_ptr_dtor		86172	0					
ANR	86305	ArgumentList	& iterator		86172	1					
ANR	86306	Argument	& iterator		86172	0					
ANR	86307	UnaryOperationExpression	& iterator		86172	0					
ANR	86308	UnaryOperator	&		86172	0					
ANR	86309	Identifier	iterator		86172	1					
ANR	86310	ReturnStatement	return new_iterator ;	289:1:9216:9235	86172	30	True				
ANR	86311	Identifier	new_iterator		86172	0					
ANR	86312	ReturnType	ZEND_API zend_object_iterator *		86172	1					
ANR	86313	Identifier	zend_user_it_get_new_iterator		86172	2					
ANR	86314	ParameterList	"zend_class_entry * ce , zval * object , int by_ref TSRMLS_DC"		86172	3					
ANR	86315	Parameter	zend_class_entry * ce	270:61:8451:8470	86172	0	True				
ANR	86316	ParameterType	zend_class_entry *		86172	0					
ANR	86317	Identifier	ce		86172	1					
ANR	86318	Parameter	zval * object	270:83:8473:8484	86172	1	True				
ANR	86319	ParameterType	zval *		86172	0					
ANR	86320	Identifier	object		86172	1					
ANR	86321	Parameter	int by_ref TSRMLS_DC	270:97:8487:8506	86172	2	True				
ANR	86322	ParameterType	int by_ref		86172	0					
ANR	86323	Identifier	TSRMLS_DC		86172	1					
ANR	86324	CFGEntryNode	ENTRY		86172		True				
ANR	86325	CFGExitNode	EXIT		86172		True				
ANR	86326	Symbol	exception		86172						
ANR	86327	Symbol	ce		86172						
ANR	86328	Symbol	EG		86172						
ANR	86329	Symbol	NULL		86172						
ANR	86330	Symbol	zend_user_it_get_new_iterator		86172						
ANR	86331	Symbol	ce_it -> get_iterator		86172						
ANR	86332	Symbol	ce_it		86172						
ANR	86333	Symbol	Z_TYPE_P		86172						
ANR	86334	Symbol	TSRMLS_DC		86172						
ANR	86335	Symbol	* ce_it		86172						
ANR	86336	Symbol	iterator		86172						
ANR	86337	Symbol	Z_OBJCE_P		86172						
ANR	86338	Symbol	& iterator		86172						
ANR	86339	Symbol	new_iterator		86172						
ANR	86340	Symbol	IS_OBJECT		86172						
ANR	86341	Symbol	object		86172						
ANR	86342	DeclStmt									
ANR	86343	Decl							zend_uint	zend_uint	i
ANR	86344	DeclStmt									
ANR	86345	Decl							int	int	i
ANR	86346	Decl							int	int	t
ANR	86347	DeclStmt									
ANR	86348	Decl							zend_class_entry	zend_class_entry *	ce
ANR	86349	DeclStmt									
ANR	86350	Decl							zval	zval *	retval
ANR	86351	DeclStmt									
ANR	86352	Decl							int	int	result
ANR	86353	DeclStmt									
ANR	86354	Decl							zval	zval *	zdata
ANR	86355	DeclStmt									
ANR	86356	Decl							zend_class_entry	zend_class_entry *	ce
ANR	86357	DeclStmt									
ANR	86358	Decl							const zend_function_entry	const zend_function_entry [ ]	zend_funcs_aggregate
ANR	86359	DeclStmt									
ANR	86360	Decl							const zend_function_entry	const zend_function_entry [ ]	zend_funcs_iterator
ANR	86361	DeclStmt									
ANR	86362	Decl							const zend_function_entry	const zend_function_entry *	zend_funcs_traversable
ANR	86363	DeclStmt									
ANR	86364	Decl							const zend_function_entry	const zend_function_entry [ ]	zend_funcs_arrayaccess
ANR	86365	DeclStmt									
ANR	86366	Decl							const zend_function_entry	const zend_function_entry [ ]	zend_funcs_serializable
ANR	86367	DeclStmt									
ANR	86368	Decl							zend_class_entry	zend_class_entry	ce
ANR	86369	DeclStmt									
ANR	86370	Decl							zend_ce_	zend_ce_	class_name
ANR	86371	DeclStmt									
ANR	86372	Decl							zend_implement_	zend_implement_	class_name
