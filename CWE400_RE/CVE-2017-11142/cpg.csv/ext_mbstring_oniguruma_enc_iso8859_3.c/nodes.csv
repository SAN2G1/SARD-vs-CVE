command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	679399	File	data/converged/CVE-2017-11142_php-src/ext_mbstring_oniguruma_enc_iso8859_3.c								
ANR	679400	DeclStmt									
ANR	679401	Decl							const UChar	const UChar [ 256 ]	EncISO_8859_3_ToLowerCaseTable
ANR	679402	DeclStmt									
ANR	679403	Decl							const unsigned short	const unsigned short [ 256 ]	EncISO_8859_3_CtypeTable
ANR	679404	DeclStmt									
ANR	679405	Decl							const UChar	const UChar *	p
ANR	679406	Function	is_mbc_ambiguous	125:0:6514:7046							
ANR	679407	FunctionDef	"is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		679406	0					
ANR	679408	CompoundStatement		127:0:6601:7046	679406	0					
ANR	679409	IdentifierDeclStatement	int v ;	128:2:6605:6610	679406	0	True				
ANR	679410	IdentifierDecl	v		679406	0					
ANR	679411	IdentifierDeclType	int		679406	0					
ANR	679412	Identifier	v		679406	1					
ANR	679413	IdentifierDeclStatement	const UChar * p = * pp ;	129:2:6614:6634	679406	1	True				
ANR	679414	IdentifierDecl	* p = * pp		679406	0					
ANR	679415	IdentifierDeclType	const UChar *		679406	0					
ANR	679416	Identifier	p		679406	1					
ANR	679417	AssignmentExpression	* p = * pp		679406	2		=			
ANR	679418	Identifier	p		679406	0					
ANR	679419	UnaryOperationExpression	* pp		679406	1					
ANR	679420	UnaryOperator	*		679406	0					
ANR	679421	Identifier	pp		679406	1					
ANR	679422	IfStatement	if ( * p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0 )		679406	2					
ANR	679423	Condition	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0	131:6:6643:6707	679406	0	True				
ANR	679424	AndExpression	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		679406	0		&&			
ANR	679425	EqualityExpression	* p == 0xdf		679406	0		==			
ANR	679426	UnaryOperationExpression	* p		679406	0					
ANR	679427	UnaryOperator	*		679406	0					
ANR	679428	Identifier	p		679406	1					
ANR	679429	PrimaryExpression	0xdf		679406	1					
ANR	679430	EqualityExpression	( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		679406	1		!=			
ANR	679431	BitAndExpression	flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		679406	0		&			
ANR	679432	Identifier	flag		679406	0					
ANR	679433	Identifier	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		679406	1					
ANR	679434	PrimaryExpression	0		679406	1					
ANR	679435	CompoundStatement		5:73:108:108	679406	1					
ANR	679436	ExpressionStatement	( * pp ) ++	132:4:6716:6723	679406	0	True				
ANR	679437	PostIncDecOperationExpression	( * pp ) ++		679406	0					
ANR	679438	UnaryOperationExpression	* pp		679406	0					
ANR	679439	UnaryOperator	*		679406	0					
ANR	679440	Identifier	pp		679406	1					
ANR	679441	IncDec	++		679406	1					
ANR	679442	ReturnStatement	return TRUE ;	133:4:6729:6740	679406	1	True				
ANR	679443	Identifier	TRUE		679406	0					
ANR	679444	ExpressionStatement	( * pp ) ++	136:2:6749:6756	679406	3	True				
ANR	679445	PostIncDecOperationExpression	( * pp ) ++		679406	0					
ANR	679446	UnaryOperationExpression	* pp		679406	0					
ANR	679447	UnaryOperator	*		679406	0					
ANR	679448	Identifier	pp		679406	1					
ANR	679449	IncDec	++		679406	1					
ANR	679450	ExpressionStatement	v = ( EncISO_8859_3_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )	137:2:6760:6832	679406	4	True				
ANR	679451	AssignmentExpression	v = ( EncISO_8859_3_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )		679406	0		=			
ANR	679452	Identifier	v		679406	0					
ANR	679453	BitAndExpression	EncISO_8859_3_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER )		679406	1		&			
ANR	679454	ArrayIndexing	EncISO_8859_3_CtypeTable [ * p ]		679406	0					
ANR	679455	Identifier	EncISO_8859_3_CtypeTable		679406	0					
ANR	679456	UnaryOperationExpression	* p		679406	1					
ANR	679457	UnaryOperator	*		679406	0					
ANR	679458	Identifier	p		679406	1					
ANR	679459	InclusiveOrExpression	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		679406	1		|			
ANR	679460	Identifier	BIT_CTYPE_UPPER		679406	0					
ANR	679461	Identifier	BIT_CTYPE_LOWER		679406	1					
ANR	679462	IfStatement	if ( ( v | BIT_CTYPE_LOWER ) != 0 )		679406	5					
ANR	679463	Condition	( v | BIT_CTYPE_LOWER ) != 0	138:6:6840:6865	679406	0	True				
ANR	679464	EqualityExpression	( v | BIT_CTYPE_LOWER ) != 0		679406	0		!=			
ANR	679465	InclusiveOrExpression	v | BIT_CTYPE_LOWER		679406	0		|			
ANR	679466	Identifier	v		679406	0					
ANR	679467	Identifier	BIT_CTYPE_LOWER		679406	1					
ANR	679468	PrimaryExpression	0		679406	1					
ANR	679469	CompoundStatement		12:34:266:266	679406	1					
ANR	679470	IfStatement	if ( * p == 0xb5 )		679406	0					
ANR	679471	Condition	* p == 0xb5	140:8:6947:6956	679406	0	True				
ANR	679472	EqualityExpression	* p == 0xb5		679406	0		==			
ANR	679473	UnaryOperationExpression	* p		679406	0					
ANR	679474	UnaryOperator	*		679406	0					
ANR	679475	Identifier	p		679406	1					
ANR	679476	PrimaryExpression	0xb5		679406	1					
ANR	679477	ReturnStatement	return FALSE ;	141:6:6965:6977	679406	1	True				
ANR	679478	Identifier	FALSE		679406	0					
ANR	679479	ElseStatement	else		679406	0					
ANR	679480	ReturnStatement	return TRUE ;	143:6:6994:7005	679406	0	True				
ANR	679481	Identifier	TRUE		679406	0					
ANR	679482	ReturnStatement	return ( v != 0 ? TRUE : FALSE ) ;	146:2:7014:7044	679406	6	True				
ANR	679483	ConditionalExpression	v != 0 ? TRUE : FALSE		679406	0					
ANR	679484	Condition	v != 0		679406	0					
ANR	679485	EqualityExpression	v != 0		679406	0		!=			
ANR	679486	Identifier	v		679406	0					
ANR	679487	PrimaryExpression	0		679406	1					
ANR	679488	Identifier	TRUE		679406	1					
ANR	679489	Identifier	FALSE		679406	2					
ANR	679490	ReturnType	static int		679406	1					
ANR	679491	Identifier	is_mbc_ambiguous		679406	2					
ANR	679492	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		679406	3					
ANR	679493	Parameter	OnigCaseFoldType flag	126:17:6542:6562	679406	0	True				
ANR	679494	ParameterType	OnigCaseFoldType		679406	0					
ANR	679495	Identifier	flag		679406	1					
ANR	679496	Parameter	const UChar * * pp	126:40:6565:6580	679406	1	True				
ANR	679497	ParameterType	const UChar * *		679406	0					
ANR	679498	Identifier	pp		679406	1					
ANR	679499	Parameter	const UChar * end	126:58:6583:6598	679406	2	True				
ANR	679500	ParameterType	const UChar *		679406	0					
ANR	679501	Identifier	end		679406	1					
ANR	679502	CFGEntryNode	ENTRY		679406		True				
ANR	679503	CFGExitNode	EXIT		679406		True				
ANR	679504	Symbol	pp		679406						
ANR	679505	Symbol	flag		679406						
ANR	679506	Symbol	* pp		679406						
ANR	679507	Symbol	* EncISO_8859_3_CtypeTable		679406						
ANR	679508	Symbol	TRUE		679406						
ANR	679509	Symbol	EncISO_8859_3_CtypeTable		679406						
ANR	679510	Symbol	p		679406						
ANR	679511	Symbol	v		679406						
ANR	679512	Symbol	BIT_CTYPE_LOWER		679406						
ANR	679513	Symbol	end		679406						
ANR	679514	Symbol	* p		679406						
ANR	679515	Symbol	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		679406						
ANR	679516	Symbol	BIT_CTYPE_UPPER		679406						
ANR	679517	Symbol	FALSE		679406						
ANR	679518	Symbol	* * p		679406						
ANR	679519	Function	is_code_ctype	150:0:7056:7215							
ANR	679520	FunctionDef	"is_code_ctype (OnigCodePoint code , unsigned int ctype)"		679519	0					
ANR	679521	CompoundStatement		152:0:7121:7215	679519	0					
ANR	679522	IfStatement	if ( code < 256 )		679519	0					
ANR	679523	Condition	code < 256	153:6:7129:7138	679519	0	True				
ANR	679524	RelationalExpression	code < 256		679519	0		<			
ANR	679525	Identifier	code		679519	0					
ANR	679526	PrimaryExpression	256		679519	1					
ANR	679527	ReturnStatement	"return ENC_IS_ISO_8859_3_CTYPE ( code , ctype ) ;"	154:4:7145:7188	679519	1	True				
ANR	679528	CallExpression	"ENC_IS_ISO_8859_3_CTYPE ( code , ctype )"		679519	0					
ANR	679529	Callee	ENC_IS_ISO_8859_3_CTYPE		679519	0					
ANR	679530	Identifier	ENC_IS_ISO_8859_3_CTYPE		679519	0					
ANR	679531	ArgumentList	code		679519	1					
ANR	679532	Argument	code		679519	0					
ANR	679533	Identifier	code		679519	0					
ANR	679534	Argument	ctype		679519	1					
ANR	679535	Identifier	ctype		679519	0					
ANR	679536	ElseStatement	else		679519	0					
ANR	679537	ReturnStatement	return FALSE ;	156:4:7201:7213	679519	0	True				
ANR	679538	Identifier	FALSE		679519	0					
ANR	679539	ReturnType	static int		679519	1					
ANR	679540	Identifier	is_code_ctype		679519	2					
ANR	679541	ParameterList	"OnigCodePoint code , unsigned int ctype"		679519	3					
ANR	679542	Parameter	OnigCodePoint code	151:14:7081:7098	679519	0	True				
ANR	679543	ParameterType	OnigCodePoint		679519	0					
ANR	679544	Identifier	code		679519	1					
ANR	679545	Parameter	unsigned int ctype	151:34:7101:7118	679519	1	True				
ANR	679546	ParameterType	unsigned int		679519	0					
ANR	679547	Identifier	ctype		679519	1					
ANR	679548	CFGEntryNode	ENTRY		679519		True				
ANR	679549	CFGExitNode	EXIT		679519		True				
ANR	679550	Symbol	ENC_IS_ISO_8859_3_CTYPE		679519						
ANR	679551	Symbol	code		679519						
ANR	679552	Symbol	ctype		679519						
ANR	679553	Symbol	FALSE		679519						
ANR	679554	DeclStmt									
ANR	679555	Decl							const OnigPairCaseFoldCodes	const OnigPairCaseFoldCodes [ ]	CaseFoldMap
ANR	679556	Function	apply_all_case_fold	200:0:7872:8128							
ANR	679557	FunctionDef	"apply_all_case_fold (OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg)"		679556	0					
ANR	679558	CompoundStatement		203:0:7971:8128	679556	0					
ANR	679559	ReturnStatement	"return onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg ) ;"	204:2:7975:8126	679556	0	True				
ANR	679560	CallExpression	"onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg )"		679556	0					
ANR	679561	Callee	onigenc_apply_all_case_fold_with_map		679556	0					
ANR	679562	Identifier	onigenc_apply_all_case_fold_with_map		679556	0					
ANR	679563	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		679556	1					
ANR	679564	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		679556	0					
ANR	679565	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		679556	0		/			
ANR	679566	SizeofExpression	sizeof ( CaseFoldMap )		679556	0					
ANR	679567	Sizeof	sizeof		679556	0					
ANR	679568	SizeofOperand	CaseFoldMap		679556	1					
ANR	679569	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		679556	1					
ANR	679570	Sizeof	sizeof		679556	0					
ANR	679571	SizeofOperand	OnigPairCaseFoldCodes		679556	1					
ANR	679572	Argument	CaseFoldMap		679556	1					
ANR	679573	Identifier	CaseFoldMap		679556	0					
ANR	679574	Argument	1		679556	2					
ANR	679575	PrimaryExpression	1		679556	0					
ANR	679576	Argument	flag		679556	3					
ANR	679577	Identifier	flag		679556	0					
ANR	679578	Argument	f		679556	4					
ANR	679579	Identifier	f		679556	0					
ANR	679580	Argument	arg		679556	5					
ANR	679581	Identifier	arg		679556	0					
ANR	679582	ReturnType	static int		679556	1					
ANR	679583	Identifier	apply_all_case_fold		679556	2					
ANR	679584	ParameterList	"OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg"		679556	3					
ANR	679585	Parameter	OnigCaseFoldType flag	201:20:7903:7923	679556	0	True				
ANR	679586	ParameterType	OnigCaseFoldType		679556	0					
ANR	679587	Identifier	flag		679556	1					
ANR	679588	Parameter	OnigApplyAllCaseFoldFunc f	202:6:7932:7957	679556	1	True				
ANR	679589	ParameterType	OnigApplyAllCaseFoldFunc		679556	0					
ANR	679590	Identifier	f		679556	1					
ANR	679591	Parameter	void * arg	202:34:7960:7968	679556	2	True				
ANR	679592	ParameterType	void *		679556	0					
ANR	679593	Identifier	arg		679556	1					
ANR	679594	CFGEntryNode	ENTRY		679556		True				
ANR	679595	CFGExitNode	EXIT		679556		True				
ANR	679596	Symbol	flag		679556						
ANR	679597	Symbol	f		679556						
ANR	679598	Symbol	arg		679556						
ANR	679599	Symbol	CaseFoldMap		679556						
ANR	679600	Symbol	onigenc_apply_all_case_fold_with_map		679556						
ANR	679601	Function	get_case_fold_codes_by_str	209:0:8131:8424							
ANR	679602	FunctionDef	"get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		679601	0					
ANR	679603	CompoundStatement		212:0:8267:8424	679601	0					
ANR	679604	ReturnStatement	"return onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items ) ;"	213:2:8271:8422	679601	0	True				
ANR	679605	CallExpression	"onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items )"		679601	0					
ANR	679606	Callee	onigenc_get_case_fold_codes_by_str_with_map		679601	0					
ANR	679607	Identifier	onigenc_get_case_fold_codes_by_str_with_map		679601	0					
ANR	679608	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		679601	1					
ANR	679609	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		679601	0					
ANR	679610	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		679601	0		/			
ANR	679611	SizeofExpression	sizeof ( CaseFoldMap )		679601	0					
ANR	679612	Sizeof	sizeof		679601	0					
ANR	679613	SizeofOperand	CaseFoldMap		679601	1					
ANR	679614	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		679601	1					
ANR	679615	Sizeof	sizeof		679601	0					
ANR	679616	SizeofOperand	OnigPairCaseFoldCodes		679601	1					
ANR	679617	Argument	CaseFoldMap		679601	1					
ANR	679618	Identifier	CaseFoldMap		679601	0					
ANR	679619	Argument	1		679601	2					
ANR	679620	PrimaryExpression	1		679601	0					
ANR	679621	Argument	flag		679601	3					
ANR	679622	Identifier	flag		679601	0					
ANR	679623	Argument	p		679601	4					
ANR	679624	Identifier	p		679601	0					
ANR	679625	Argument	end		679601	5					
ANR	679626	Identifier	end		679601	0					
ANR	679627	Argument	items		679601	6					
ANR	679628	Identifier	items		679601	0					
ANR	679629	ReturnType	static int		679601	1					
ANR	679630	Identifier	get_case_fold_codes_by_str		679601	2					
ANR	679631	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		679601	3					
ANR	679632	Parameter	OnigCaseFoldType flag	210:27:8169:8189	679601	0	True				
ANR	679633	ParameterType	OnigCaseFoldType		679601	0					
ANR	679634	Identifier	flag		679601	1					
ANR	679635	Parameter	const OnigUChar * p	211:3:8195:8212	679601	1	True				
ANR	679636	ParameterType	const OnigUChar *		679601	0					
ANR	679637	Identifier	p		679601	1					
ANR	679638	Parameter	const OnigUChar * end	211:23:8215:8234	679601	2	True				
ANR	679639	ParameterType	const OnigUChar *		679601	0					
ANR	679640	Identifier	end		679601	1					
ANR	679641	Parameter	OnigCaseFoldCodeItem items [ ]	211:45:8237:8264	679601	3	True				
ANR	679642	ParameterType	OnigCaseFoldCodeItem [ ]		679601	0					
ANR	679643	Identifier	items		679601	1					
ANR	679644	CFGEntryNode	ENTRY		679601		True				
ANR	679645	CFGExitNode	EXIT		679601		True				
ANR	679646	Symbol	p		679601						
ANR	679647	Symbol	flag		679601						
ANR	679648	Symbol	end		679601						
ANR	679649	Symbol	CaseFoldMap		679601						
ANR	679650	Symbol	onigenc_get_case_fold_codes_by_str_with_map		679601						
ANR	679651	Symbol	items		679601						
ANR	679652	DeclStmt									
ANR	679653	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingISO_8859_3
