command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	105607	File	data/converged/CVE-2017-11142_php-src/Zend_zend_ptr_stack.c								
ANR	105608	Function	zend_ptr_stack_init_ex	28:0:1332:1525							
ANR	105609	FunctionDef	"zend_ptr_stack_init_ex (zend_ptr_stack * stack , zend_bool persistent)"		105608	0					
ANR	105610	CompoundStatement		29:0:1414:1525	105608	0					
ANR	105611	ExpressionStatement	stack -> top_element = stack -> elements = NULL	30:1:1417:1460	105608	0	True				
ANR	105612	AssignmentExpression	stack -> top_element = stack -> elements = NULL		105608	0		=			
ANR	105613	PtrMemberAccess	stack -> top_element		105608	0					
ANR	105614	Identifier	stack		105608	0					
ANR	105615	Identifier	top_element		105608	1					
ANR	105616	AssignmentExpression	stack -> elements = NULL		105608	1		=			
ANR	105617	PtrMemberAccess	stack -> elements		105608	0					
ANR	105618	Identifier	stack		105608	0					
ANR	105619	Identifier	elements		105608	1					
ANR	105620	Identifier	NULL		105608	1					
ANR	105621	ExpressionStatement	stack -> top = stack -> max = 0	31:1:1463:1490	105608	1	True				
ANR	105622	AssignmentExpression	stack -> top = stack -> max = 0		105608	0		=			
ANR	105623	PtrMemberAccess	stack -> top		105608	0					
ANR	105624	Identifier	stack		105608	0					
ANR	105625	Identifier	top		105608	1					
ANR	105626	AssignmentExpression	stack -> max = 0		105608	1		=			
ANR	105627	PtrMemberAccess	stack -> max		105608	0					
ANR	105628	Identifier	stack		105608	0					
ANR	105629	Identifier	max		105608	1					
ANR	105630	PrimaryExpression	0		105608	1					
ANR	105631	ExpressionStatement	stack -> persistent = persistent	32:1:1493:1523	105608	2	True				
ANR	105632	AssignmentExpression	stack -> persistent = persistent		105608	0		=			
ANR	105633	PtrMemberAccess	stack -> persistent		105608	0					
ANR	105634	Identifier	stack		105608	0					
ANR	105635	Identifier	persistent		105608	1					
ANR	105636	Identifier	persistent		105608	1					
ANR	105637	ReturnType	ZEND_API void		105608	1					
ANR	105638	Identifier	zend_ptr_stack_init_ex		105608	2					
ANR	105639	ParameterList	"zend_ptr_stack * stack , zend_bool persistent"		105608	3					
ANR	105640	Parameter	zend_ptr_stack * stack	28:37:1369:1389	105608	0	True				
ANR	105641	ParameterType	zend_ptr_stack *		105608	0					
ANR	105642	Identifier	stack		105608	1					
ANR	105643	Parameter	zend_bool persistent	28:60:1392:1411	105608	1	True				
ANR	105644	ParameterType	zend_bool		105608	0					
ANR	105645	Identifier	persistent		105608	1					
ANR	105646	CFGEntryNode	ENTRY		105608		True				
ANR	105647	CFGExitNode	EXIT		105608		True				
ANR	105648	Symbol	stack		105608						
ANR	105649	Symbol	NULL		105608						
ANR	105650	Symbol	stack -> top_element		105608						
ANR	105651	Symbol	stack -> persistent		105608						
ANR	105652	Symbol	* stack		105608						
ANR	105653	Symbol	persistent		105608						
ANR	105654	Symbol	stack -> top		105608						
ANR	105655	Symbol	stack -> elements		105608						
ANR	105656	Symbol	stack -> max		105608						
ANR	105657	Function	zend_ptr_stack_init	35:0:1528:1622							
ANR	105658	FunctionDef	zend_ptr_stack_init (zend_ptr_stack * stack)		105657	0					
ANR	105659	CompoundStatement		36:0:1585:1622	105657	0					
ANR	105660	ExpressionStatement	"zend_ptr_stack_init_ex ( stack , 0 )"	37:1:1588:1620	105657	0	True				
ANR	105661	CallExpression	"zend_ptr_stack_init_ex ( stack , 0 )"		105657	0					
ANR	105662	Callee	zend_ptr_stack_init_ex		105657	0					
ANR	105663	Identifier	zend_ptr_stack_init_ex		105657	0					
ANR	105664	ArgumentList	stack		105657	1					
ANR	105665	Argument	stack		105657	0					
ANR	105666	Identifier	stack		105657	0					
ANR	105667	Argument	0		105657	1					
ANR	105668	PrimaryExpression	0		105657	0					
ANR	105669	ReturnType	ZEND_API void		105657	1					
ANR	105670	Identifier	zend_ptr_stack_init		105657	2					
ANR	105671	ParameterList	zend_ptr_stack * stack		105657	3					
ANR	105672	Parameter	zend_ptr_stack * stack	35:34:1562:1582	105657	0	True				
ANR	105673	ParameterType	zend_ptr_stack *		105657	0					
ANR	105674	Identifier	stack		105657	1					
ANR	105675	CFGEntryNode	ENTRY		105657		True				
ANR	105676	CFGExitNode	EXIT		105657		True				
ANR	105677	Symbol	stack		105657						
ANR	105678	Function	zend_ptr_stack_n_push	41:0:1626:1930							
ANR	105679	FunctionDef	"zend_ptr_stack_n_push (zend_ptr_stack * stack , int count)"		105678	0					
ANR	105680	CompoundStatement		42:0:1701:1930	105678	0					
ANR	105681	IdentifierDeclStatement	va_list ptr ;	43:1:1704:1715	105678	0	True				
ANR	105682	IdentifierDecl	ptr		105678	0					
ANR	105683	IdentifierDeclType	va_list		105678	0					
ANR	105684	Identifier	ptr		105678	1					
ANR	105685	IdentifierDeclStatement	void * elem ;	44:1:1718:1728	105678	1	True				
ANR	105686	IdentifierDecl	* elem		105678	0					
ANR	105687	IdentifierDeclType	void *		105678	0					
ANR	105688	Identifier	elem		105678	1					
ANR	105689	Statement	ZEND_PTR_STACK_RESIZE_IF_NEEDED	46:1:1733:1763	105678	2	True				
ANR	105690	Statement	(	46:32:1764:1764	105678	3	True				
ANR	105691	Statement	stack	46:33:1765:1769	105678	4	True				
ANR	105692	Statement	","	46:38:1770:1770	105678	5	True				
ANR	105693	Statement	count	46:40:1772:1776	105678	6	True				
ANR	105694	Statement	)	46:45:1777:1777	105678	7	True				
ANR	105695	ExpressionStatement	"va_start ( ptr , count )"	48:1:1781:1801	105678	8	True				
ANR	105696	CallExpression	"va_start ( ptr , count )"		105678	0					
ANR	105697	Callee	va_start		105678	0					
ANR	105698	Identifier	va_start		105678	0					
ANR	105699	ArgumentList	ptr		105678	1					
ANR	105700	Argument	ptr		105678	0					
ANR	105701	Identifier	ptr		105678	0					
ANR	105702	Argument	count		105678	1					
ANR	105703	Identifier	count		105678	0					
ANR	105704	WhileStatement	while ( count > 0 )		105678	9					
ANR	105705	Condition	count > 0	49:8:1811:1817	105678	0	True				
ANR	105706	RelationalExpression	count > 0		105678	0		>			
ANR	105707	Identifier	count		105678	0					
ANR	105708	PrimaryExpression	0		105678	1					
ANR	105709	CompoundStatement		8:17:118:118	105678	1					
ANR	105710	Statement	elem	50:2:1824:1827	105678	0	True				
ANR	105711	Statement	=	50:7:1829:1829	105678	1	True				
ANR	105712	Statement	va_arg	50:9:1831:1836	105678	2	True				
ANR	105713	Statement	(	50:15:1837:1837	105678	3	True				
ANR	105714	Statement	ptr	50:16:1838:1840	105678	4	True				
ANR	105715	Statement	","	50:19:1841:1841	105678	5	True				
ANR	105716	Statement	void	50:21:1843:1846	105678	6	True				
ANR	105717	Statement	*	50:26:1848:1848	105678	7	True				
ANR	105718	Statement	)	50:27:1849:1849	105678	8	True				
ANR	105719	ExpressionStatement		50:28:1850:1850	105678	9	True				
ANR	105720	ExpressionStatement	stack -> top ++	51:2:1854:1866	105678	10	True				
ANR	105721	PostIncDecOperationExpression	stack -> top ++		105678	0					
ANR	105722	PtrMemberAccess	stack -> top		105678	0					
ANR	105723	Identifier	stack		105678	0					
ANR	105724	Identifier	top		105678	1					
ANR	105725	IncDec	++		105678	1					
ANR	105726	ExpressionStatement	* ( stack -> top_element ++ ) = elem	52:2:1870:1900	105678	11	True				
ANR	105727	AssignmentExpression	* ( stack -> top_element ++ ) = elem		105678	0		=			
ANR	105728	UnaryOperationExpression	* ( stack -> top_element ++ )		105678	0					
ANR	105729	UnaryOperator	*		105678	0					
ANR	105730	PostIncDecOperationExpression	stack -> top_element ++		105678	1					
ANR	105731	PtrMemberAccess	stack -> top_element		105678	0					
ANR	105732	Identifier	stack		105678	0					
ANR	105733	Identifier	top_element		105678	1					
ANR	105734	IncDec	++		105678	1					
ANR	105735	Identifier	elem		105678	1					
ANR	105736	ExpressionStatement	count --	53:2:1904:1911	105678	12	True				
ANR	105737	PostIncDecOperationExpression	count --		105678	0					
ANR	105738	Identifier	count		105678	0					
ANR	105739	IncDec	--		105678	1					
ANR	105740	ExpressionStatement	va_end ( ptr )	55:1:1917:1928	105678	10	True				
ANR	105741	CallExpression	va_end ( ptr )		105678	0					
ANR	105742	Callee	va_end		105678	0					
ANR	105743	Identifier	va_end		105678	0					
ANR	105744	ArgumentList	ptr		105678	1					
ANR	105745	Argument	ptr		105678	0					
ANR	105746	Identifier	ptr		105678	0					
ANR	105747	ReturnType	ZEND_API void		105678	1					
ANR	105748	Identifier	zend_ptr_stack_n_push		105678	2					
ANR	105749	ParameterList	"zend_ptr_stack * stack , int count"		105678	3					
ANR	105750	Parameter	zend_ptr_stack * stack	41:36:1662:1682	105678	0	True				
ANR	105751	ParameterType	zend_ptr_stack *		105678	0					
ANR	105752	Identifier	stack		105678	1					
ANR	105753	Parameter	int count	41:59:1685:1693	105678	1	True				
ANR	105754	ParameterType	int		105678	0					
ANR	105755	Identifier	count		105678	1					
ANR	105756	CFGEntryNode	ENTRY		105678		True				
ANR	105757	CFGExitNode	EXIT		105678		True				
ANR	105758	Symbol	elem		105678						
ANR	105759	Symbol	stack		105678						
ANR	105760	Symbol	stack -> top_element		105678						
ANR	105761	Symbol	* ( stack -> top_element ++ )		105678						
ANR	105762	Symbol	count		105678						
ANR	105763	Symbol	* stack		105678						
ANR	105764	Symbol	stack -> top		105678						
ANR	105765	Symbol	ptr		105678						
ANR	105766	Function	zend_ptr_stack_n_pop	59:0:1934:2192							
ANR	105767	FunctionDef	"zend_ptr_stack_n_pop (zend_ptr_stack * stack , int count)"		105766	0					
ANR	105768	CompoundStatement		60:0:2008:2192	105766	0					
ANR	105769	IdentifierDeclStatement	va_list ptr ;	61:1:2011:2022	105766	0	True				
ANR	105770	IdentifierDecl	ptr		105766	0					
ANR	105771	IdentifierDeclType	va_list		105766	0					
ANR	105772	Identifier	ptr		105766	1					
ANR	105773	IdentifierDeclStatement	void * * elem ;	62:1:2025:2036	105766	1	True				
ANR	105774	IdentifierDecl	* * elem		105766	0					
ANR	105775	IdentifierDeclType	void * *		105766	0					
ANR	105776	Identifier	elem		105766	1					
ANR	105777	ExpressionStatement	"va_start ( ptr , count )"	64:1:2041:2061	105766	2	True				
ANR	105778	CallExpression	"va_start ( ptr , count )"		105766	0					
ANR	105779	Callee	va_start		105766	0					
ANR	105780	Identifier	va_start		105766	0					
ANR	105781	ArgumentList	ptr		105766	1					
ANR	105782	Argument	ptr		105766	0					
ANR	105783	Identifier	ptr		105766	0					
ANR	105784	Argument	count		105766	1					
ANR	105785	Identifier	count		105766	0					
ANR	105786	WhileStatement	while ( count > 0 )		105766	3					
ANR	105787	Condition	count > 0	65:8:2071:2077	105766	0	True				
ANR	105788	RelationalExpression	count > 0		105766	0		>			
ANR	105789	Identifier	count		105766	0					
ANR	105790	PrimaryExpression	0		105766	1					
ANR	105791	CompoundStatement		6:17:71:71	105766	1					
ANR	105792	Statement	elem	66:2:2084:2087	105766	0	True				
ANR	105793	Statement	=	66:7:2089:2089	105766	1	True				
ANR	105794	Statement	va_arg	66:9:2091:2096	105766	2	True				
ANR	105795	Statement	(	66:15:2097:2097	105766	3	True				
ANR	105796	Statement	ptr	66:16:2098:2100	105766	4	True				
ANR	105797	Statement	","	66:19:2101:2101	105766	5	True				
ANR	105798	Statement	void	66:21:2103:2106	105766	6	True				
ANR	105799	Statement	*	66:26:2108:2108	105766	7	True				
ANR	105800	Statement	*	66:27:2109:2109	105766	8	True				
ANR	105801	Statement	)	66:28:2110:2110	105766	9	True				
ANR	105802	ExpressionStatement		66:29:2111:2111	105766	10	True				
ANR	105803	ExpressionStatement	* elem = * ( -- stack -> top_element )	67:2:2115:2146	105766	11	True				
ANR	105804	AssignmentExpression	* elem = * ( -- stack -> top_element )		105766	0		=			
ANR	105805	UnaryOperationExpression	* elem		105766	0					
ANR	105806	UnaryOperator	*		105766	0					
ANR	105807	Identifier	elem		105766	1					
ANR	105808	UnaryOperationExpression	* ( -- stack -> top_element )		105766	1					
ANR	105809	UnaryOperator	*		105766	0					
ANR	105810	UnaryExpression	-- stack -> top_element		105766	1					
ANR	105811	IncDec	--		105766	0					
ANR	105812	PtrMemberAccess	stack -> top_element		105766	1					
ANR	105813	Identifier	stack		105766	0					
ANR	105814	Identifier	top_element		105766	1					
ANR	105815	ExpressionStatement	stack -> top --	68:2:2150:2162	105766	12	True				
ANR	105816	PostIncDecOperationExpression	stack -> top --		105766	0					
ANR	105817	PtrMemberAccess	stack -> top		105766	0					
ANR	105818	Identifier	stack		105766	0					
ANR	105819	Identifier	top		105766	1					
ANR	105820	IncDec	--		105766	1					
ANR	105821	ExpressionStatement	count --	69:2:2166:2173	105766	13	True				
ANR	105822	PostIncDecOperationExpression	count --		105766	0					
ANR	105823	Identifier	count		105766	0					
ANR	105824	IncDec	--		105766	1					
ANR	105825	ExpressionStatement	va_end ( ptr )	71:1:2179:2190	105766	4	True				
ANR	105826	CallExpression	va_end ( ptr )		105766	0					
ANR	105827	Callee	va_end		105766	0					
ANR	105828	Identifier	va_end		105766	0					
ANR	105829	ArgumentList	ptr		105766	1					
ANR	105830	Argument	ptr		105766	0					
ANR	105831	Identifier	ptr		105766	0					
ANR	105832	ReturnType	ZEND_API void		105766	1					
ANR	105833	Identifier	zend_ptr_stack_n_pop		105766	2					
ANR	105834	ParameterList	"zend_ptr_stack * stack , int count"		105766	3					
ANR	105835	Parameter	zend_ptr_stack * stack	59:35:1969:1989	105766	0	True				
ANR	105836	ParameterType	zend_ptr_stack *		105766	0					
ANR	105837	Identifier	stack		105766	1					
ANR	105838	Parameter	int count	59:58:1992:2000	105766	1	True				
ANR	105839	ParameterType	int		105766	0					
ANR	105840	Identifier	count		105766	1					
ANR	105841	CFGEntryNode	ENTRY		105766		True				
ANR	105842	CFGExitNode	EXIT		105766		True				
ANR	105843	Symbol	elem		105766						
ANR	105844	Symbol	stack		105766						
ANR	105845	Symbol	* ( -- stack -> top_element )		105766						
ANR	105846	Symbol	stack -> top_element		105766						
ANR	105847	Symbol	* * stack		105766						
ANR	105848	Symbol	count		105766						
ANR	105849	Symbol	* stack		105766						
ANR	105850	Symbol	* elem		105766						
ANR	105851	Symbol	stack -> top		105766						
ANR	105852	Symbol	* stack -> top_element		105766						
ANR	105853	Symbol	ptr		105766						
ANR	105854	Function	zend_ptr_stack_destroy	76:0:2197:2332							
ANR	105855	FunctionDef	zend_ptr_stack_destroy (zend_ptr_stack * stack)		105854	0					
ANR	105856	CompoundStatement		77:0:2257:2332	105854	0					
ANR	105857	IfStatement	if ( stack -> elements )		105854	0					
ANR	105858	Condition	stack -> elements	78:5:2264:2278	105854	0	True				
ANR	105859	PtrMemberAccess	stack -> elements		105854	0					
ANR	105860	Identifier	stack		105854	0					
ANR	105861	Identifier	elements		105854	1					
ANR	105862	CompoundStatement		2:22:23:23	105854	1					
ANR	105863	ExpressionStatement	"pefree ( stack -> elements , stack -> persistent )"	79:2:2285:2327	105854	0	True				
ANR	105864	CallExpression	"pefree ( stack -> elements , stack -> persistent )"		105854	0					
ANR	105865	Callee	pefree		105854	0					
ANR	105866	Identifier	pefree		105854	0					
ANR	105867	ArgumentList	stack -> elements		105854	1					
ANR	105868	Argument	stack -> elements		105854	0					
ANR	105869	PtrMemberAccess	stack -> elements		105854	0					
ANR	105870	Identifier	stack		105854	0					
ANR	105871	Identifier	elements		105854	1					
ANR	105872	Argument	stack -> persistent		105854	1					
ANR	105873	PtrMemberAccess	stack -> persistent		105854	0					
ANR	105874	Identifier	stack		105854	0					
ANR	105875	Identifier	persistent		105854	1					
ANR	105876	ReturnType	ZEND_API void		105854	1					
ANR	105877	Identifier	zend_ptr_stack_destroy		105854	2					
ANR	105878	ParameterList	zend_ptr_stack * stack		105854	3					
ANR	105879	Parameter	zend_ptr_stack * stack	76:37:2234:2254	105854	0	True				
ANR	105880	ParameterType	zend_ptr_stack *		105854	0					
ANR	105881	Identifier	stack		105854	1					
ANR	105882	CFGEntryNode	ENTRY		105854		True				
ANR	105883	CFGExitNode	EXIT		105854		True				
ANR	105884	Symbol	stack		105854						
ANR	105885	Symbol	stack -> persistent		105854						
ANR	105886	Symbol	* stack		105854						
ANR	105887	Symbol	stack -> elements		105854						
ANR	105888	Function	zend_ptr_stack_apply	84:0:2336:2491							
ANR	105889	FunctionDef	"zend_ptr_stack_apply (zend_ptr_stack * stack , void ( * func ) ( void * ))"		105888	0					
ANR	105890	CompoundStatement		85:0:2416:2491	105888	0					
ANR	105891	IdentifierDeclStatement	int i = stack -> top ;	86:1:2419:2437	105888	0	True				
ANR	105892	IdentifierDecl	i = stack -> top		105888	0					
ANR	105893	IdentifierDeclType	int		105888	0					
ANR	105894	Identifier	i		105888	1					
ANR	105895	AssignmentExpression	i = stack -> top		105888	2		=			
ANR	105896	Identifier	i		105888	0					
ANR	105897	PtrMemberAccess	stack -> top		105888	1					
ANR	105898	Identifier	stack		105888	0					
ANR	105899	Identifier	top		105888	1					
ANR	105900	WhileStatement	while ( -- i >= 0 )		105888	1					
ANR	105901	Condition	-- i >= 0	88:8:2448:2455	105888	0	True				
ANR	105902	RelationalExpression	-- i >= 0		105888	0		>=			
ANR	105903	UnaryExpression	-- i		105888	0					
ANR	105904	IncDec	--		105888	0					
ANR	105905	Identifier	i		105888	1					
ANR	105906	PrimaryExpression	0		105888	1					
ANR	105907	CompoundStatement		4:18:41:41	105888	1					
ANR	105908	ExpressionStatement	func ( stack -> elements [ i ] )	89:2:2462:2486	105888	0	True				
ANR	105909	CallExpression	func ( stack -> elements [ i ] )		105888	0					
ANR	105910	Callee	func		105888	0					
ANR	105911	Identifier	func		105888	0					
ANR	105912	ArgumentList	stack -> elements [ i ]		105888	1					
ANR	105913	Argument	stack -> elements [ i ]		105888	0					
ANR	105914	ArrayIndexing	stack -> elements [ i ]		105888	0					
ANR	105915	PtrMemberAccess	stack -> elements		105888	0					
ANR	105916	Identifier	stack		105888	0					
ANR	105917	Identifier	elements		105888	1					
ANR	105918	Identifier	i		105888	1					
ANR	105919	ReturnType	ZEND_API void		105888	1					
ANR	105920	Identifier	zend_ptr_stack_apply		105888	2					
ANR	105921	ParameterList	"zend_ptr_stack * stack , void ( * func ) ( void * )"		105888	3					
ANR	105922	Parameter	zend_ptr_stack * stack	84:35:2371:2391	105888	0	True				
ANR	105923	ParameterType	zend_ptr_stack *		105888	0					
ANR	105924	Identifier	stack		105888	1					
ANR	105925	Parameter	void ( * func ) ( void * )	84:58:2394:2413	105888	1	True				
ANR	105926	ParameterType	(( void * ) void) *		105888	0					
ANR	105927	Identifier	func		105888	1					
ANR	105928	CFGEntryNode	ENTRY		105888		True				
ANR	105929	CFGExitNode	EXIT		105888		True				
ANR	105930	Symbol	stack		105888						
ANR	105931	Symbol	* i		105888						
ANR	105932	Symbol	func		105888						
ANR	105933	Symbol	* * stack		105888						
ANR	105934	Symbol	* stack		105888						
ANR	105935	Symbol	i		105888						
ANR	105936	Symbol	* stack -> elements		105888						
ANR	105937	Symbol	stack -> top		105888						
ANR	105938	Symbol	stack -> elements		105888						
ANR	105939	Function	zend_ptr_stack_clean	94:0:2495:2817							
ANR	105940	FunctionDef	"zend_ptr_stack_clean (zend_ptr_stack * stack , void ( * func ) ( void * ) , zend_bool free_elements)"		105939	0					
ANR	105941	CompoundStatement		95:0:2600:2817	105939	0					
ANR	105942	ExpressionStatement	"zend_ptr_stack_apply ( stack , func )"	96:1:2603:2636	105939	0	True				
ANR	105943	CallExpression	"zend_ptr_stack_apply ( stack , func )"		105939	0					
ANR	105944	Callee	zend_ptr_stack_apply		105939	0					
ANR	105945	Identifier	zend_ptr_stack_apply		105939	0					
ANR	105946	ArgumentList	stack		105939	1					
ANR	105947	Argument	stack		105939	0					
ANR	105948	Identifier	stack		105939	0					
ANR	105949	Argument	func		105939	1					
ANR	105950	Identifier	func		105939	0					
ANR	105951	IfStatement	if ( free_elements )		105939	1					
ANR	105952	Condition	free_elements	97:5:2643:2655	105939	0	True				
ANR	105953	Identifier	free_elements		105939	0					
ANR	105954	CompoundStatement		4:2:61:79	105939	1					
ANR	105955	IdentifierDeclStatement	int i = stack -> top ;	98:2:2662:2680	105939	0	True				
ANR	105956	IdentifierDecl	i = stack -> top		105939	0					
ANR	105957	IdentifierDeclType	int		105939	0					
ANR	105958	Identifier	i		105939	1					
ANR	105959	AssignmentExpression	i = stack -> top		105939	2		=			
ANR	105960	Identifier	i		105939	0					
ANR	105961	PtrMemberAccess	stack -> top		105939	1					
ANR	105962	Identifier	stack		105939	0					
ANR	105963	Identifier	top		105939	1					
ANR	105964	WhileStatement	while ( -- i >= 0 )		105939	1					
ANR	105965	Condition	-- i >= 0	100:9:2692:2699	105939	0	True				
ANR	105966	RelationalExpression	-- i >= 0		105939	0		>=			
ANR	105967	UnaryExpression	-- i		105939	0					
ANR	105968	IncDec	--		105939	0					
ANR	105969	Identifier	i		105939	1					
ANR	105970	PrimaryExpression	0		105939	1					
ANR	105971	CompoundStatement		6:19:101:101	105939	1					
ANR	105972	ExpressionStatement	"pefree ( stack -> elements [ i ] , stack -> persistent )"	101:3:2707:2752	105939	0	True				
ANR	105973	CallExpression	"pefree ( stack -> elements [ i ] , stack -> persistent )"		105939	0					
ANR	105974	Callee	pefree		105939	0					
ANR	105975	Identifier	pefree		105939	0					
ANR	105976	ArgumentList	stack -> elements [ i ]		105939	1					
ANR	105977	Argument	stack -> elements [ i ]		105939	0					
ANR	105978	ArrayIndexing	stack -> elements [ i ]		105939	0					
ANR	105979	PtrMemberAccess	stack -> elements		105939	0					
ANR	105980	Identifier	stack		105939	0					
ANR	105981	Identifier	elements		105939	1					
ANR	105982	Identifier	i		105939	1					
ANR	105983	Argument	stack -> persistent		105939	1					
ANR	105984	PtrMemberAccess	stack -> persistent		105939	0					
ANR	105985	Identifier	stack		105939	0					
ANR	105986	Identifier	persistent		105939	1					
ANR	105987	ExpressionStatement	stack -> top = 0	104:1:2762:2776	105939	2	True				
ANR	105988	AssignmentExpression	stack -> top = 0		105939	0		=			
ANR	105989	PtrMemberAccess	stack -> top		105939	0					
ANR	105990	Identifier	stack		105939	0					
ANR	105991	Identifier	top		105939	1					
ANR	105992	PrimaryExpression	0		105939	1					
ANR	105993	ExpressionStatement	stack -> top_element = stack -> elements	105:1:2779:2815	105939	3	True				
ANR	105994	AssignmentExpression	stack -> top_element = stack -> elements		105939	0		=			
ANR	105995	PtrMemberAccess	stack -> top_element		105939	0					
ANR	105996	Identifier	stack		105939	0					
ANR	105997	Identifier	top_element		105939	1					
ANR	105998	PtrMemberAccess	stack -> elements		105939	1					
ANR	105999	Identifier	stack		105939	0					
ANR	106000	Identifier	elements		105939	1					
ANR	106001	ReturnType	ZEND_API void		105939	1					
ANR	106002	Identifier	zend_ptr_stack_clean		105939	2					
ANR	106003	ParameterList	"zend_ptr_stack * stack , void ( * func ) ( void * ) , zend_bool free_elements"		105939	3					
ANR	106004	Parameter	zend_ptr_stack * stack	94:35:2530:2550	105939	0	True				
ANR	106005	ParameterType	zend_ptr_stack *		105939	0					
ANR	106006	Identifier	stack		105939	1					
ANR	106007	Parameter	void ( * func ) ( void * )	94:58:2553:2572	105939	1	True				
ANR	106008	ParameterType	(( void * ) void) *		105939	0					
ANR	106009	Identifier	func		105939	1					
ANR	106010	Parameter	zend_bool free_elements	94:80:2575:2597	105939	2	True				
ANR	106011	ParameterType	zend_bool		105939	0					
ANR	106012	Identifier	free_elements		105939	1					
ANR	106013	CFGEntryNode	ENTRY		105939		True				
ANR	106014	CFGExitNode	EXIT		105939		True				
ANR	106015	Symbol	free_elements		105939						
ANR	106016	Symbol	stack		105939						
ANR	106017	Symbol	* i		105939						
ANR	106018	Symbol	func		105939						
ANR	106019	Symbol	stack -> top_element		105939						
ANR	106020	Symbol	stack -> persistent		105939						
ANR	106021	Symbol	* * stack		105939						
ANR	106022	Symbol	i		105939						
ANR	106023	Symbol	* stack		105939						
ANR	106024	Symbol	* stack -> elements		105939						
ANR	106025	Symbol	stack -> top		105939						
ANR	106026	Symbol	stack -> elements		105939						
ANR	106027	Function	zend_ptr_stack_num_elements	109:0:2821:2907							
ANR	106028	FunctionDef	zend_ptr_stack_num_elements (zend_ptr_stack * stack)		106027	0					
ANR	106029	CompoundStatement		110:0:2885:2907	106027	0					
ANR	106030	ReturnStatement	return stack -> top ;	111:1:2888:2905	106027	0	True				
ANR	106031	PtrMemberAccess	stack -> top		106027	0					
ANR	106032	Identifier	stack		106027	0					
ANR	106033	Identifier	top		106027	1					
ANR	106034	ReturnType	ZEND_API int		106027	1					
ANR	106035	Identifier	zend_ptr_stack_num_elements		106027	2					
ANR	106036	ParameterList	zend_ptr_stack * stack		106027	3					
ANR	106037	Parameter	zend_ptr_stack * stack	109:41:2862:2882	106027	0	True				
ANR	106038	ParameterType	zend_ptr_stack *		106027	0					
ANR	106039	Identifier	stack		106027	1					
ANR	106040	CFGEntryNode	ENTRY		106027		True				
ANR	106041	CFGExitNode	EXIT		106027		True				
ANR	106042	Symbol	stack		106027						
ANR	106043	Symbol	* stack		106027						
ANR	106044	Symbol	stack -> top		106027						
