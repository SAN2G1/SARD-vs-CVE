command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1060570	File	data/converged/CVE-2017-11142_php-src/ext_pcre_pcrelib_sljit_sljitNativeMIPS_common.c								
ANR	1060571	Function	sljit_get_platform_name	30:0:1529:1858							
ANR	1060572	FunctionDef	sljit_get_platform_name ()		1060571	0					
ANR	1060573	CompoundStatement		31:0:1602:1858	1060571	0					
ANR	1060574	Statement	return	34:1:1709:1714	1060571	0	True				
ANR	1060575	Statement	"""MIPS32-R1"""	34:8:1716:1726	1060571	1	True				
ANR	1060576	ExpressionStatement	SLJIT_CPUINFO	34:20:1728:1741	1060571	2	True				
ANR	1060577	Identifier	SLJIT_CPUINFO		1060571	0					
ANR	1060578	ReturnType	SLJIT_API_FUNC_ATTRIBUTE SLJIT_CONST char *		1060571	1					
ANR	1060579	Identifier	sljit_get_platform_name		1060571	2					
ANR	1060580	ParameterList			1060571	3					
ANR	1060581	CFGEntryNode	ENTRY		1060571		True				
ANR	1060582	CFGExitNode	EXIT		1060571		True				
ANR	1060583	DeclStmt									
ANR	1060584	Decl							sljit_ui	sljit_ui	sljit_ins
ANR	1060585	DeclStmt									
ANR	1060586	Decl							SLJIT_CONST sljit_ub	SLJIT_CONST sljit_ub [ SLJIT_NUMBER_OF_REGISTERS + 5 ]	reg_map
ANR	1060587	Function	push_inst	204:0:6622:7048							
ANR	1060588	FunctionDef	"push_inst (struct sljit_compiler * compiler , sljit_ins ins , sljit_si delay_slot)"		1060587	0					
ANR	1060589	CompoundStatement		205:0:6717:7048	1060587	0					
ANR	1060590	ExpressionStatement	SLJIT_ASSERT ( delay_slot == MOVABLE_INS || delay_slot >= UNMOVABLE_INS || delay_slot == ( ( ins >> 11 ) & 0x1f ) || delay_slot == ( ( ins >> 16 ) & 0x1f ) )	206:1:6720:6868	1060587	0	True				
ANR	1060591	CallExpression	SLJIT_ASSERT ( delay_slot == MOVABLE_INS || delay_slot >= UNMOVABLE_INS || delay_slot == ( ( ins >> 11 ) & 0x1f ) || delay_slot == ( ( ins >> 16 ) & 0x1f ) )		1060587	0					
ANR	1060592	Callee	SLJIT_ASSERT		1060587	0					
ANR	1060593	Identifier	SLJIT_ASSERT		1060587	0					
ANR	1060594	ArgumentList	delay_slot == MOVABLE_INS || delay_slot >= UNMOVABLE_INS || delay_slot == ( ( ins >> 11 ) & 0x1f ) || delay_slot == ( ( ins >> 16 ) & 0x1f )		1060587	1					
ANR	1060595	Argument	delay_slot == MOVABLE_INS || delay_slot >= UNMOVABLE_INS || delay_slot == ( ( ins >> 11 ) & 0x1f ) || delay_slot == ( ( ins >> 16 ) & 0x1f )		1060587	0					
ANR	1060596	OrExpression	delay_slot == MOVABLE_INS || delay_slot >= UNMOVABLE_INS || delay_slot == ( ( ins >> 11 ) & 0x1f ) || delay_slot == ( ( ins >> 16 ) & 0x1f )		1060587	0		||			
ANR	1060597	EqualityExpression	delay_slot == MOVABLE_INS		1060587	0		==			
ANR	1060598	Identifier	delay_slot		1060587	0					
ANR	1060599	Identifier	MOVABLE_INS		1060587	1					
ANR	1060600	OrExpression	delay_slot >= UNMOVABLE_INS || delay_slot == ( ( ins >> 11 ) & 0x1f ) || delay_slot == ( ( ins >> 16 ) & 0x1f )		1060587	1		||			
ANR	1060601	RelationalExpression	delay_slot >= UNMOVABLE_INS		1060587	0		>=			
ANR	1060602	Identifier	delay_slot		1060587	0					
ANR	1060603	Identifier	UNMOVABLE_INS		1060587	1					
ANR	1060604	OrExpression	delay_slot == ( ( ins >> 11 ) & 0x1f ) || delay_slot == ( ( ins >> 16 ) & 0x1f )		1060587	1		||			
ANR	1060605	EqualityExpression	delay_slot == ( ( ins >> 11 ) & 0x1f )		1060587	0		==			
ANR	1060606	Identifier	delay_slot		1060587	0					
ANR	1060607	BitAndExpression	( ins >> 11 ) & 0x1f		1060587	1		&			
ANR	1060608	ShiftExpression	ins >> 11		1060587	0		>>			
ANR	1060609	Identifier	ins		1060587	0					
ANR	1060610	PrimaryExpression	11		1060587	1					
ANR	1060611	PrimaryExpression	0x1f		1060587	1					
ANR	1060612	EqualityExpression	delay_slot == ( ( ins >> 16 ) & 0x1f )		1060587	1		==			
ANR	1060613	Identifier	delay_slot		1060587	0					
ANR	1060614	BitAndExpression	( ins >> 16 ) & 0x1f		1060587	1		&			
ANR	1060615	ShiftExpression	ins >> 16		1060587	0		>>			
ANR	1060616	Identifier	ins		1060587	0					
ANR	1060617	PrimaryExpression	16		1060587	1					
ANR	1060618	PrimaryExpression	0x1f		1060587	1					
ANR	1060619	IdentifierDeclStatement	"sljit_ins * ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) ) ;"	208:1:6871:6939	1060587	1	True				
ANR	1060620	IdentifierDecl	"* ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1060587	0					
ANR	1060621	IdentifierDeclType	sljit_ins *		1060587	0					
ANR	1060622	Identifier	ptr		1060587	1					
ANR	1060623	AssignmentExpression	"* ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1060587	2		=			
ANR	1060624	Identifier	ptr		1060587	0					
ANR	1060625	CastExpression	"( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1060587	1					
ANR	1060626	CastTarget	sljit_ins *		1060587	0					
ANR	1060627	CallExpression	"ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1060587	1					
ANR	1060628	Callee	ensure_buf		1060587	0					
ANR	1060629	Identifier	ensure_buf		1060587	0					
ANR	1060630	ArgumentList	compiler		1060587	1					
ANR	1060631	Argument	compiler		1060587	0					
ANR	1060632	Identifier	compiler		1060587	0					
ANR	1060633	Argument	sizeof ( sljit_ins )		1060587	1					
ANR	1060634	SizeofExpression	sizeof ( sljit_ins )		1060587	0					
ANR	1060635	Sizeof	sizeof		1060587	0					
ANR	1060636	SizeofOperand	sljit_ins		1060587	1					
ANR	1060637	ExpressionStatement	FAIL_IF ( ! ptr )	209:1:6942:6955	1060587	2	True				
ANR	1060638	CallExpression	FAIL_IF ( ! ptr )		1060587	0					
ANR	1060639	Callee	FAIL_IF		1060587	0					
ANR	1060640	Identifier	FAIL_IF		1060587	0					
ANR	1060641	ArgumentList	! ptr		1060587	1					
ANR	1060642	Argument	! ptr		1060587	0					
ANR	1060643	UnaryOperationExpression	! ptr		1060587	0					
ANR	1060644	UnaryOperator	!		1060587	0					
ANR	1060645	Identifier	ptr		1060587	1					
ANR	1060646	ExpressionStatement	* ptr = ins	210:1:6958:6968	1060587	3	True				
ANR	1060647	AssignmentExpression	* ptr = ins		1060587	0		=			
ANR	1060648	UnaryOperationExpression	* ptr		1060587	0					
ANR	1060649	UnaryOperator	*		1060587	0					
ANR	1060650	Identifier	ptr		1060587	1					
ANR	1060651	Identifier	ins		1060587	1					
ANR	1060652	ExpressionStatement	compiler -> size ++	211:1:6971:6987	1060587	4	True				
ANR	1060653	PostIncDecOperationExpression	compiler -> size ++		1060587	0					
ANR	1060654	PtrMemberAccess	compiler -> size		1060587	0					
ANR	1060655	Identifier	compiler		1060587	0					
ANR	1060656	Identifier	size		1060587	1					
ANR	1060657	IncDec	++		1060587	1					
ANR	1060658	ExpressionStatement	compiler -> delay_slot = delay_slot	212:1:6990:7023	1060587	5	True				
ANR	1060659	AssignmentExpression	compiler -> delay_slot = delay_slot		1060587	0		=			
ANR	1060660	PtrMemberAccess	compiler -> delay_slot		1060587	0					
ANR	1060661	Identifier	compiler		1060587	0					
ANR	1060662	Identifier	delay_slot		1060587	1					
ANR	1060663	Identifier	delay_slot		1060587	1					
ANR	1060664	ReturnStatement	return SLJIT_SUCCESS ;	213:1:7026:7046	1060587	6	True				
ANR	1060665	Identifier	SLJIT_SUCCESS		1060587	0					
ANR	1060666	ReturnType	static sljit_si		1060587	1					
ANR	1060667	Identifier	push_inst		1060587	2					
ANR	1060668	ParameterList	"struct sljit_compiler * compiler , sljit_ins ins , sljit_si delay_slot"		1060587	3					
ANR	1060669	Parameter	struct sljit_compiler * compiler	204:26:6648:6678	1060587	0	True				
ANR	1060670	ParameterType	struct sljit_compiler *		1060587	0					
ANR	1060671	Identifier	compiler		1060587	1					
ANR	1060672	Parameter	sljit_ins ins	204:59:6681:6693	1060587	1	True				
ANR	1060673	ParameterType	sljit_ins		1060587	0					
ANR	1060674	Identifier	ins		1060587	1					
ANR	1060675	Parameter	sljit_si delay_slot	204:74:6696:6714	1060587	2	True				
ANR	1060676	ParameterType	sljit_si		1060587	0					
ANR	1060677	Identifier	delay_slot		1060587	1					
ANR	1060678	CFGEntryNode	ENTRY		1060587		True				
ANR	1060679	CFGExitNode	EXIT		1060587		True				
ANR	1060680	Symbol	compiler -> size		1060587						
ANR	1060681	Symbol	UNMOVABLE_INS		1060587						
ANR	1060682	Symbol	ensure_buf		1060587						
ANR	1060683	Symbol	* ptr		1060587						
ANR	1060684	Symbol	compiler -> delay_slot		1060587						
ANR	1060685	Symbol	SLJIT_SUCCESS		1060587						
ANR	1060686	Symbol	* compiler		1060587						
ANR	1060687	Symbol	compiler		1060587						
ANR	1060688	Symbol	delay_slot		1060587						
ANR	1060689	Symbol	MOVABLE_INS		1060587						
ANR	1060690	Symbol	ins		1060587						
ANR	1060691	Symbol	ptr		1060587						
ANR	1060692	Function	invert_branch	216:0:7051:7170							
ANR	1060693	FunctionDef	invert_branch (sljit_si flags)		1060692	0					
ANR	1060694	CompoundStatement		217:0:7111:7170	1060692	0					
ANR	1060695	ReturnStatement	return ( flags & IS_BIT26_COND ) ? ( 1 << 26 ) : ( 1 << 16 ) ;	218:1:7114:7168	1060692	0	True				
ANR	1060696	ConditionalExpression	( flags & IS_BIT26_COND ) ? ( 1 << 26 ) : ( 1 << 16 )		1060692	0					
ANR	1060697	Condition	flags & IS_BIT26_COND		1060692	0					
ANR	1060698	BitAndExpression	flags & IS_BIT26_COND		1060692	0		&			
ANR	1060699	Identifier	flags		1060692	0					
ANR	1060700	Identifier	IS_BIT26_COND		1060692	1					
ANR	1060701	ShiftExpression	1 << 26		1060692	1		<<			
ANR	1060702	PrimaryExpression	1		1060692	0					
ANR	1060703	PrimaryExpression	26		1060692	1					
ANR	1060704	ShiftExpression	1 << 16		1060692	2		<<			
ANR	1060705	PrimaryExpression	1		1060692	0					
ANR	1060706	PrimaryExpression	16		1060692	1					
ANR	1060707	ReturnType	static SLJIT_INLINE sljit_ins		1060692	1					
ANR	1060708	Identifier	invert_branch		1060692	2					
ANR	1060709	ParameterList	sljit_si flags		1060692	3					
ANR	1060710	Parameter	sljit_si flags	216:44:7095:7108	1060692	0	True				
ANR	1060711	ParameterType	sljit_si		1060692	0					
ANR	1060712	Identifier	flags		1060692	1					
ANR	1060713	CFGEntryNode	ENTRY		1060692		True				
ANR	1060714	CFGExitNode	EXIT		1060692		True				
ANR	1060715	Symbol	IS_BIT26_COND		1060692						
ANR	1060716	Symbol	flags		1060692						
ANR	1060717	Function	detect_jump_type	221:0:7173:10440							
ANR	1060718	FunctionDef	"detect_jump_type (struct sljit_jump * jump , sljit_ins * code_ptr , sljit_ins * code)"		1060717	0					
ANR	1060719	CompoundStatement		222:0:7284:10440	1060717	0					
ANR	1060720	IdentifierDeclStatement	sljit_sw diff ;	223:1:7287:7300	1060717	0	True				
ANR	1060721	IdentifierDecl	diff		1060717	0					
ANR	1060722	IdentifierDeclType	sljit_sw		1060717	0					
ANR	1060723	Identifier	diff		1060717	1					
ANR	1060724	IdentifierDeclStatement	sljit_uw target_addr ;	224:1:7303:7323	1060717	1	True				
ANR	1060725	IdentifierDecl	target_addr		1060717	0					
ANR	1060726	IdentifierDeclType	sljit_uw		1060717	0					
ANR	1060727	Identifier	target_addr		1060717	1					
ANR	1060728	IdentifierDeclStatement	sljit_ins * inst ;	225:1:7326:7341	1060717	2	True				
ANR	1060729	IdentifierDecl	* inst		1060717	0					
ANR	1060730	IdentifierDeclType	sljit_ins *		1060717	0					
ANR	1060731	Identifier	inst		1060717	1					
ANR	1060732	IdentifierDeclStatement	sljit_ins saved_inst ;	226:1:7344:7364	1060717	3	True				
ANR	1060733	IdentifierDecl	saved_inst		1060717	0					
ANR	1060734	IdentifierDeclType	sljit_ins		1060717	0					
ANR	1060735	Identifier	saved_inst		1060717	1					
ANR	1060736	IfStatement	if ( jump -> flags & ( SLJIT_REWRITABLE_JUMP | IS_CALL ) )		1060717	4					
ANR	1060737	Condition	jump -> flags & ( SLJIT_REWRITABLE_JUMP | IS_CALL )	229:5:7431:7477	1060717	0	True				
ANR	1060738	BitAndExpression	jump -> flags & ( SLJIT_REWRITABLE_JUMP | IS_CALL )		1060717	0		&			
ANR	1060739	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1060740	Identifier	jump		1060717	0					
ANR	1060741	Identifier	flags		1060717	1					
ANR	1060742	InclusiveOrExpression	SLJIT_REWRITABLE_JUMP | IS_CALL		1060717	1		|			
ANR	1060743	Identifier	SLJIT_REWRITABLE_JUMP		1060717	0					
ANR	1060744	Identifier	IS_CALL		1060717	1					
ANR	1060745	ReturnStatement	return code_ptr ;	230:2:7482:7497	1060717	1	True				
ANR	1060746	Identifier	code_ptr		1060717	0					
ANR	1060747	IfStatement	if ( jump -> flags & JUMP_ADDR )		1060717	5					
ANR	1060748	Condition	jump -> flags & JUMP_ADDR	236:5:7579:7601	1060717	0	True				
ANR	1060749	BitAndExpression	jump -> flags & JUMP_ADDR		1060717	0		&			
ANR	1060750	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1060751	Identifier	jump		1060717	0					
ANR	1060752	Identifier	flags		1060717	1					
ANR	1060753	Identifier	JUMP_ADDR		1060717	1					
ANR	1060754	ExpressionStatement	target_addr = jump -> u . target	237:2:7606:7634	1060717	1	True				
ANR	1060755	AssignmentExpression	target_addr = jump -> u . target		1060717	0		=			
ANR	1060756	Identifier	target_addr		1060717	0					
ANR	1060757	MemberAccess	jump -> u . target		1060717	1					
ANR	1060758	PtrMemberAccess	jump -> u		1060717	0					
ANR	1060759	Identifier	jump		1060717	0					
ANR	1060760	Identifier	u		1060717	1					
ANR	1060761	Identifier	target		1060717	1					
ANR	1060762	ElseStatement	else		1060717	0					
ANR	1060763	CompoundStatement		17:6:357:357	1060717	0					
ANR	1060764	ExpressionStatement	SLJIT_ASSERT ( jump -> flags & JUMP_LABEL )	239:2:7646:7684	1060717	0	True				
ANR	1060765	CallExpression	SLJIT_ASSERT ( jump -> flags & JUMP_LABEL )		1060717	0					
ANR	1060766	Callee	SLJIT_ASSERT		1060717	0					
ANR	1060767	Identifier	SLJIT_ASSERT		1060717	0					
ANR	1060768	ArgumentList	jump -> flags & JUMP_LABEL		1060717	1					
ANR	1060769	Argument	jump -> flags & JUMP_LABEL		1060717	0					
ANR	1060770	BitAndExpression	jump -> flags & JUMP_LABEL		1060717	0		&			
ANR	1060771	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1060772	Identifier	jump		1060717	0					
ANR	1060773	Identifier	flags		1060717	1					
ANR	1060774	Identifier	JUMP_LABEL		1060717	1					
ANR	1060775	ExpressionStatement	target_addr = ( sljit_uw ) ( code + jump -> u . label -> size )	240:2:7688:7740	1060717	1	True				
ANR	1060776	AssignmentExpression	target_addr = ( sljit_uw ) ( code + jump -> u . label -> size )		1060717	0		=			
ANR	1060777	Identifier	target_addr		1060717	0					
ANR	1060778	CastExpression	( sljit_uw ) ( code + jump -> u . label -> size )		1060717	1					
ANR	1060779	CastTarget	sljit_uw		1060717	0					
ANR	1060780	AdditiveExpression	code + jump -> u . label -> size		1060717	1		+			
ANR	1060781	Identifier	code		1060717	0					
ANR	1060782	PtrMemberAccess	jump -> u . label -> size		1060717	1					
ANR	1060783	MemberAccess	jump -> u . label		1060717	0					
ANR	1060784	PtrMemberAccess	jump -> u		1060717	0					
ANR	1060785	Identifier	jump		1060717	0					
ANR	1060786	Identifier	u		1060717	1					
ANR	1060787	Identifier	label		1060717	1					
ANR	1060788	Identifier	size		1060717	1					
ANR	1060789	ExpressionStatement	inst = ( sljit_ins * ) jump -> addr	242:1:7746:7775	1060717	6	True				
ANR	1060790	AssignmentExpression	inst = ( sljit_ins * ) jump -> addr		1060717	0		=			
ANR	1060791	Identifier	inst		1060717	0					
ANR	1060792	CastExpression	( sljit_ins * ) jump -> addr		1060717	1					
ANR	1060793	CastTarget	sljit_ins *		1060717	0					
ANR	1060794	PtrMemberAccess	jump -> addr		1060717	1					
ANR	1060795	Identifier	jump		1060717	0					
ANR	1060796	Identifier	addr		1060717	1					
ANR	1060797	IfStatement	if ( jump -> flags & IS_COND )		1060717	7					
ANR	1060798	Condition	jump -> flags & IS_COND	243:5:7782:7802	1060717	0	True				
ANR	1060799	BitAndExpression	jump -> flags & IS_COND		1060717	0		&			
ANR	1060800	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1060801	Identifier	jump		1060717	0					
ANR	1060802	Identifier	flags		1060717	1					
ANR	1060803	Identifier	IS_COND		1060717	1					
ANR	1060804	ExpressionStatement	inst --	244:2:7807:7813	1060717	1	True				
ANR	1060805	PostIncDecOperationExpression	inst --		1060717	0					
ANR	1060806	Identifier	inst		1060717	0					
ANR	1060807	IncDec	--		1060717	1					
ANR	1060808	IfStatement	if ( jump -> flags & IS_CALL )		1060717	8					
ANR	1060809	Condition	jump -> flags & IS_CALL	247:5:7880:7900	1060717	0	True				
ANR	1060810	BitAndExpression	jump -> flags & IS_CALL		1060717	0		&			
ANR	1060811	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1060812	Identifier	jump		1060717	0					
ANR	1060813	Identifier	flags		1060717	1					
ANR	1060814	Identifier	IS_CALL		1060717	1					
ANR	1060815	GotoStatement	goto keep_address ;	248:2:7905:7922	1060717	1	True				
ANR	1060816	Identifier	keep_address		1060717	0					
ANR	1060817	IfStatement	if ( jump -> flags & IS_MOVABLE )		1060717	9					
ANR	1060818	Condition	jump -> flags & IS_MOVABLE	252:5:7960:7983	1060717	0	True				
ANR	1060819	BitAndExpression	jump -> flags & IS_MOVABLE		1060717	0		&			
ANR	1060820	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1060821	Identifier	jump		1060717	0					
ANR	1060822	Identifier	flags		1060717	1					
ANR	1060823	Identifier	IS_MOVABLE		1060717	1					
ANR	1060824	CompoundStatement		31:31:701:701	1060717	1					
ANR	1060825	ExpressionStatement	diff = ( ( sljit_sw ) target_addr - ( sljit_sw ) ( inst ) ) >> 2	253:2:7990:8044	1060717	0	True				
ANR	1060826	AssignmentExpression	diff = ( ( sljit_sw ) target_addr - ( sljit_sw ) ( inst ) ) >> 2		1060717	0		=			
ANR	1060827	Identifier	diff		1060717	0					
ANR	1060828	ShiftExpression	( ( sljit_sw ) target_addr - ( sljit_sw ) ( inst ) ) >> 2		1060717	1		>>			
ANR	1060829	AdditiveExpression	( sljit_sw ) target_addr - ( sljit_sw ) ( inst )		1060717	0		-			
ANR	1060830	CastExpression	( sljit_sw ) target_addr		1060717	0					
ANR	1060831	CastTarget	sljit_sw		1060717	0					
ANR	1060832	Identifier	target_addr		1060717	1					
ANR	1060833	CastExpression	( sljit_sw ) ( inst )		1060717	1					
ANR	1060834	CastTarget	sljit_sw		1060717	0					
ANR	1060835	Identifier	inst		1060717	1					
ANR	1060836	PrimaryExpression	2		1060717	1					
ANR	1060837	IfStatement	if ( diff <= SIMM_MAX && diff >= SIMM_MIN )		1060717	1					
ANR	1060838	Condition	diff <= SIMM_MAX && diff >= SIMM_MIN	254:6:8052:8087	1060717	0	True				
ANR	1060839	AndExpression	diff <= SIMM_MAX && diff >= SIMM_MIN		1060717	0		&&			
ANR	1060840	RelationalExpression	diff <= SIMM_MAX		1060717	0		<=			
ANR	1060841	Identifier	diff		1060717	0					
ANR	1060842	Identifier	SIMM_MAX		1060717	1					
ANR	1060843	RelationalExpression	diff >= SIMM_MIN		1060717	1		>=			
ANR	1060844	Identifier	diff		1060717	0					
ANR	1060845	Identifier	SIMM_MIN		1060717	1					
ANR	1060846	CompoundStatement		33:44:805:805	1060717	1					
ANR	1060847	ExpressionStatement	jump -> flags |= PATCH_B	255:3:8095:8117	1060717	0	True				
ANR	1060848	AssignmentExpression	jump -> flags |= PATCH_B		1060717	0		|=			
ANR	1060849	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1060850	Identifier	jump		1060717	0					
ANR	1060851	Identifier	flags		1060717	1					
ANR	1060852	Identifier	PATCH_B		1060717	1					
ANR	1060853	IfStatement	if ( ! ( jump -> flags & IS_COND ) )		1060717	1					
ANR	1060854	Condition	! ( jump -> flags & IS_COND )	257:7:8127:8150	1060717	0	True				
ANR	1060855	UnaryOperationExpression	! ( jump -> flags & IS_COND )		1060717	0					
ANR	1060856	UnaryOperator	!		1060717	0					
ANR	1060857	BitAndExpression	jump -> flags & IS_COND		1060717	1		&			
ANR	1060858	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1060859	Identifier	jump		1060717	0					
ANR	1060860	Identifier	flags		1060717	1					
ANR	1060861	Identifier	IS_COND		1060717	1					
ANR	1060862	CompoundStatement		36:33:868:868	1060717	1					
ANR	1060863	ExpressionStatement	inst [ 0 ] = inst [ - 1 ]	258:4:8159:8177	1060717	0	True				
ANR	1060864	AssignmentExpression	inst [ 0 ] = inst [ - 1 ]		1060717	0		=			
ANR	1060865	ArrayIndexing	inst [ 0 ]		1060717	0					
ANR	1060866	Identifier	inst		1060717	0					
ANR	1060867	PrimaryExpression	0		1060717	1					
ANR	1060868	ArrayIndexing	inst [ - 1 ]		1060717	1					
ANR	1060869	Identifier	inst		1060717	0					
ANR	1060870	UnaryOperationExpression	- 1		1060717	1					
ANR	1060871	UnaryOperator	-		1060717	0					
ANR	1060872	PrimaryExpression	1		1060717	1					
ANR	1060873	ExpressionStatement	inst [ - 1 ] = ( jump -> flags & IS_JAL ) ? BAL : B	259:4:8183:8226	1060717	1	True				
ANR	1060874	AssignmentExpression	inst [ - 1 ] = ( jump -> flags & IS_JAL ) ? BAL : B		1060717	0		=			
ANR	1060875	ArrayIndexing	inst [ - 1 ]		1060717	0					
ANR	1060876	Identifier	inst		1060717	0					
ANR	1060877	UnaryOperationExpression	- 1		1060717	1					
ANR	1060878	UnaryOperator	-		1060717	0					
ANR	1060879	PrimaryExpression	1		1060717	1					
ANR	1060880	ConditionalExpression	( jump -> flags & IS_JAL ) ? BAL : B		1060717	1					
ANR	1060881	Condition	jump -> flags & IS_JAL		1060717	0					
ANR	1060882	BitAndExpression	jump -> flags & IS_JAL		1060717	0		&			
ANR	1060883	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1060884	Identifier	jump		1060717	0					
ANR	1060885	Identifier	flags		1060717	1					
ANR	1060886	Identifier	IS_JAL		1060717	1					
ANR	1060887	Identifier	BAL		1060717	1					
ANR	1060888	Identifier	B		1060717	2					
ANR	1060889	ExpressionStatement	jump -> addr -= sizeof ( sljit_ins )	260:4:8232:8263	1060717	2	True				
ANR	1060890	AssignmentExpression	jump -> addr -= sizeof ( sljit_ins )		1060717	0		-=			
ANR	1060891	PtrMemberAccess	jump -> addr		1060717	0					
ANR	1060892	Identifier	jump		1060717	0					
ANR	1060893	Identifier	addr		1060717	1					
ANR	1060894	SizeofExpression	sizeof ( sljit_ins )		1060717	1					
ANR	1060895	Sizeof	sizeof		1060717	0					
ANR	1060896	SizeofOperand	sljit_ins		1060717	1					
ANR	1060897	ReturnStatement	return inst ;	261:4:8269:8280	1060717	3	True				
ANR	1060898	Identifier	inst		1060717	0					
ANR	1060899	ExpressionStatement	saved_inst = inst [ 0 ]	263:3:8290:8310	1060717	2	True				
ANR	1060900	AssignmentExpression	saved_inst = inst [ 0 ]		1060717	0		=			
ANR	1060901	Identifier	saved_inst		1060717	0					
ANR	1060902	ArrayIndexing	inst [ 0 ]		1060717	1					
ANR	1060903	Identifier	inst		1060717	0					
ANR	1060904	PrimaryExpression	0		1060717	1					
ANR	1060905	ExpressionStatement	inst [ 0 ] = inst [ - 1 ]	264:3:8315:8333	1060717	3	True				
ANR	1060906	AssignmentExpression	inst [ 0 ] = inst [ - 1 ]		1060717	0		=			
ANR	1060907	ArrayIndexing	inst [ 0 ]		1060717	0					
ANR	1060908	Identifier	inst		1060717	0					
ANR	1060909	PrimaryExpression	0		1060717	1					
ANR	1060910	ArrayIndexing	inst [ - 1 ]		1060717	1					
ANR	1060911	Identifier	inst		1060717	0					
ANR	1060912	UnaryOperationExpression	- 1		1060717	1					
ANR	1060913	UnaryOperator	-		1060717	0					
ANR	1060914	PrimaryExpression	1		1060717	1					
ANR	1060915	ExpressionStatement	inst [ - 1 ] = saved_inst ^ invert_branch ( jump -> flags )	265:3:8338:8388	1060717	4	True				
ANR	1060916	AssignmentExpression	inst [ - 1 ] = saved_inst ^ invert_branch ( jump -> flags )		1060717	0		=			
ANR	1060917	ArrayIndexing	inst [ - 1 ]		1060717	0					
ANR	1060918	Identifier	inst		1060717	0					
ANR	1060919	UnaryOperationExpression	- 1		1060717	1					
ANR	1060920	UnaryOperator	-		1060717	0					
ANR	1060921	PrimaryExpression	1		1060717	1					
ANR	1060922	ExclusiveOrExpression	saved_inst ^ invert_branch ( jump -> flags )		1060717	1		^			
ANR	1060923	Identifier	saved_inst		1060717	0					
ANR	1060924	CallExpression	invert_branch ( jump -> flags )		1060717	1					
ANR	1060925	Callee	invert_branch		1060717	0					
ANR	1060926	Identifier	invert_branch		1060717	0					
ANR	1060927	ArgumentList	jump -> flags		1060717	1					
ANR	1060928	Argument	jump -> flags		1060717	0					
ANR	1060929	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1060930	Identifier	jump		1060717	0					
ANR	1060931	Identifier	flags		1060717	1					
ANR	1060932	ExpressionStatement	jump -> addr -= 2 * sizeof ( sljit_ins )	266:3:8393:8428	1060717	5	True				
ANR	1060933	AssignmentExpression	jump -> addr -= 2 * sizeof ( sljit_ins )		1060717	0		-=			
ANR	1060934	PtrMemberAccess	jump -> addr		1060717	0					
ANR	1060935	Identifier	jump		1060717	0					
ANR	1060936	Identifier	addr		1060717	1					
ANR	1060937	MultiplicativeExpression	2 * sizeof ( sljit_ins )		1060717	1		*			
ANR	1060938	PrimaryExpression	2		1060717	0					
ANR	1060939	SizeofExpression	sizeof ( sljit_ins )		1060717	1					
ANR	1060940	Sizeof	sizeof		1060717	0					
ANR	1060941	SizeofOperand	sljit_ins		1060717	1					
ANR	1060942	ReturnStatement	return inst ;	267:3:8433:8444	1060717	6	True				
ANR	1060943	Identifier	inst		1060717	0					
ANR	1060944	ElseStatement	else		1060717	0					
ANR	1060945	CompoundStatement		49:6:1174:1174	1060717	0					
ANR	1060946	ExpressionStatement	diff = ( ( sljit_sw ) target_addr - ( sljit_sw ) ( inst + 1 ) ) >> 2	271:2:8463:8521	1060717	0	True				
ANR	1060947	AssignmentExpression	diff = ( ( sljit_sw ) target_addr - ( sljit_sw ) ( inst + 1 ) ) >> 2		1060717	0		=			
ANR	1060948	Identifier	diff		1060717	0					
ANR	1060949	ShiftExpression	( ( sljit_sw ) target_addr - ( sljit_sw ) ( inst + 1 ) ) >> 2		1060717	1		>>			
ANR	1060950	AdditiveExpression	( sljit_sw ) target_addr - ( sljit_sw ) ( inst + 1 )		1060717	0		-			
ANR	1060951	CastExpression	( sljit_sw ) target_addr		1060717	0					
ANR	1060952	CastTarget	sljit_sw		1060717	0					
ANR	1060953	Identifier	target_addr		1060717	1					
ANR	1060954	CastExpression	( sljit_sw ) ( inst + 1 )		1060717	1					
ANR	1060955	CastTarget	sljit_sw		1060717	0					
ANR	1060956	AdditiveExpression	inst + 1		1060717	1		+			
ANR	1060957	Identifier	inst		1060717	0					
ANR	1060958	PrimaryExpression	1		1060717	1					
ANR	1060959	PrimaryExpression	2		1060717	1					
ANR	1060960	IfStatement	if ( diff <= SIMM_MAX && diff >= SIMM_MIN )		1060717	1					
ANR	1060961	Condition	diff <= SIMM_MAX && diff >= SIMM_MIN	272:6:8529:8564	1060717	0	True				
ANR	1060962	AndExpression	diff <= SIMM_MAX && diff >= SIMM_MIN		1060717	0		&&			
ANR	1060963	RelationalExpression	diff <= SIMM_MAX		1060717	0		<=			
ANR	1060964	Identifier	diff		1060717	0					
ANR	1060965	Identifier	SIMM_MAX		1060717	1					
ANR	1060966	RelationalExpression	diff >= SIMM_MIN		1060717	1		>=			
ANR	1060967	Identifier	diff		1060717	0					
ANR	1060968	Identifier	SIMM_MIN		1060717	1					
ANR	1060969	CompoundStatement		51:44:1282:1282	1060717	1					
ANR	1060970	ExpressionStatement	jump -> flags |= PATCH_B	273:3:8572:8594	1060717	0	True				
ANR	1060971	AssignmentExpression	jump -> flags |= PATCH_B		1060717	0		|=			
ANR	1060972	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1060973	Identifier	jump		1060717	0					
ANR	1060974	Identifier	flags		1060717	1					
ANR	1060975	Identifier	PATCH_B		1060717	1					
ANR	1060976	IfStatement	if ( ! ( jump -> flags & IS_COND ) )		1060717	1					
ANR	1060977	Condition	! ( jump -> flags & IS_COND )	275:7:8604:8627	1060717	0	True				
ANR	1060978	UnaryOperationExpression	! ( jump -> flags & IS_COND )		1060717	0					
ANR	1060979	UnaryOperator	!		1060717	0					
ANR	1060980	BitAndExpression	jump -> flags & IS_COND		1060717	1		&			
ANR	1060981	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1060982	Identifier	jump		1060717	0					
ANR	1060983	Identifier	flags		1060717	1					
ANR	1060984	Identifier	IS_COND		1060717	1					
ANR	1060985	CompoundStatement		54:33:1345:1345	1060717	1					
ANR	1060986	ExpressionStatement	inst [ 0 ] = ( jump -> flags & IS_JAL ) ? BAL : B	276:4:8636:8678	1060717	0	True				
ANR	1060987	AssignmentExpression	inst [ 0 ] = ( jump -> flags & IS_JAL ) ? BAL : B		1060717	0		=			
ANR	1060988	ArrayIndexing	inst [ 0 ]		1060717	0					
ANR	1060989	Identifier	inst		1060717	0					
ANR	1060990	PrimaryExpression	0		1060717	1					
ANR	1060991	ConditionalExpression	( jump -> flags & IS_JAL ) ? BAL : B		1060717	1					
ANR	1060992	Condition	jump -> flags & IS_JAL		1060717	0					
ANR	1060993	BitAndExpression	jump -> flags & IS_JAL		1060717	0		&			
ANR	1060994	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1060995	Identifier	jump		1060717	0					
ANR	1060996	Identifier	flags		1060717	1					
ANR	1060997	Identifier	IS_JAL		1060717	1					
ANR	1060998	Identifier	BAL		1060717	1					
ANR	1060999	Identifier	B		1060717	2					
ANR	1061000	ExpressionStatement	inst [ 1 ] = NOP	277:4:8684:8697	1060717	1	True				
ANR	1061001	AssignmentExpression	inst [ 1 ] = NOP		1060717	0		=			
ANR	1061002	ArrayIndexing	inst [ 1 ]		1060717	0					
ANR	1061003	Identifier	inst		1060717	0					
ANR	1061004	PrimaryExpression	1		1060717	1					
ANR	1061005	Identifier	NOP		1060717	1					
ANR	1061006	ReturnStatement	return inst + 1 ;	278:4:8703:8718	1060717	2	True				
ANR	1061007	AdditiveExpression	inst + 1		1060717	0		+			
ANR	1061008	Identifier	inst		1060717	0					
ANR	1061009	PrimaryExpression	1		1060717	1					
ANR	1061010	ExpressionStatement	inst [ 0 ] = inst [ 0 ] ^ invert_branch ( jump -> flags )	280:3:8728:8774	1060717	2	True				
ANR	1061011	AssignmentExpression	inst [ 0 ] = inst [ 0 ] ^ invert_branch ( jump -> flags )		1060717	0		=			
ANR	1061012	ArrayIndexing	inst [ 0 ]		1060717	0					
ANR	1061013	Identifier	inst		1060717	0					
ANR	1061014	PrimaryExpression	0		1060717	1					
ANR	1061015	ExclusiveOrExpression	inst [ 0 ] ^ invert_branch ( jump -> flags )		1060717	1		^			
ANR	1061016	ArrayIndexing	inst [ 0 ]		1060717	0					
ANR	1061017	Identifier	inst		1060717	0					
ANR	1061018	PrimaryExpression	0		1060717	1					
ANR	1061019	CallExpression	invert_branch ( jump -> flags )		1060717	1					
ANR	1061020	Callee	invert_branch		1060717	0					
ANR	1061021	Identifier	invert_branch		1060717	0					
ANR	1061022	ArgumentList	jump -> flags		1060717	1					
ANR	1061023	Argument	jump -> flags		1060717	0					
ANR	1061024	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1061025	Identifier	jump		1060717	0					
ANR	1061026	Identifier	flags		1060717	1					
ANR	1061027	ExpressionStatement	inst [ 1 ] = NOP	281:3:8779:8792	1060717	3	True				
ANR	1061028	AssignmentExpression	inst [ 1 ] = NOP		1060717	0		=			
ANR	1061029	ArrayIndexing	inst [ 1 ]		1060717	0					
ANR	1061030	Identifier	inst		1060717	0					
ANR	1061031	PrimaryExpression	1		1060717	1					
ANR	1061032	Identifier	NOP		1060717	1					
ANR	1061033	ExpressionStatement	jump -> addr -= sizeof ( sljit_ins )	282:3:8797:8828	1060717	4	True				
ANR	1061034	AssignmentExpression	jump -> addr -= sizeof ( sljit_ins )		1060717	0		-=			
ANR	1061035	PtrMemberAccess	jump -> addr		1060717	0					
ANR	1061036	Identifier	jump		1060717	0					
ANR	1061037	Identifier	addr		1060717	1					
ANR	1061038	SizeofExpression	sizeof ( sljit_ins )		1060717	1					
ANR	1061039	Sizeof	sizeof		1060717	0					
ANR	1061040	SizeofOperand	sljit_ins		1060717	1					
ANR	1061041	ReturnStatement	return inst + 1 ;	283:3:8833:8848	1060717	5	True				
ANR	1061042	AdditiveExpression	inst + 1		1060717	0		+			
ANR	1061043	Identifier	inst		1060717	0					
ANR	1061044	PrimaryExpression	1		1060717	1					
ANR	1061045	IfStatement	if ( jump -> flags & IS_COND )		1060717	10					
ANR	1061046	Condition	jump -> flags & IS_COND	287:5:8863:8883	1060717	0	True				
ANR	1061047	BitAndExpression	jump -> flags & IS_COND		1060717	0		&			
ANR	1061048	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1061049	Identifier	jump		1060717	0					
ANR	1061050	Identifier	flags		1060717	1					
ANR	1061051	Identifier	IS_COND		1060717	1					
ANR	1061052	CompoundStatement		66:28:1601:1601	1060717	1					
ANR	1061053	IfStatement	if ( ( jump -> flags & IS_MOVABLE ) && ( target_addr & ~0xfffffff ) == ( ( jump -> addr + 2 * sizeof ( sljit_ins ) ) & ~0xfffffff ) )		1060717	0					
ANR	1061054	Condition	( jump -> flags & IS_MOVABLE ) && ( target_addr & ~0xfffffff ) == ( ( jump -> addr + 2 * sizeof ( sljit_ins ) ) & ~0xfffffff )	288:6:8894:9004	1060717	0	True				
ANR	1061055	AndExpression	( jump -> flags & IS_MOVABLE ) && ( target_addr & ~0xfffffff ) == ( ( jump -> addr + 2 * sizeof ( sljit_ins ) ) & ~0xfffffff )		1060717	0		&&			
ANR	1061056	BitAndExpression	jump -> flags & IS_MOVABLE		1060717	0		&			
ANR	1061057	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1061058	Identifier	jump		1060717	0					
ANR	1061059	Identifier	flags		1060717	1					
ANR	1061060	Identifier	IS_MOVABLE		1060717	1					
ANR	1061061	EqualityExpression	( target_addr & ~0xfffffff ) == ( ( jump -> addr + 2 * sizeof ( sljit_ins ) ) & ~0xfffffff )		1060717	1		==			
ANR	1061062	BitAndExpression	target_addr & ~0xfffffff		1060717	0		&			
ANR	1061063	Identifier	target_addr		1060717	0					
ANR	1061064	Identifier	~0xfffffff		1060717	1					
ANR	1061065	BitAndExpression	( jump -> addr + 2 * sizeof ( sljit_ins ) ) & ~0xfffffff		1060717	1		&			
ANR	1061066	AdditiveExpression	jump -> addr + 2 * sizeof ( sljit_ins )		1060717	0		+			
ANR	1061067	PtrMemberAccess	jump -> addr		1060717	0					
ANR	1061068	Identifier	jump		1060717	0					
ANR	1061069	Identifier	addr		1060717	1					
ANR	1061070	MultiplicativeExpression	2 * sizeof ( sljit_ins )		1060717	1		*			
ANR	1061071	PrimaryExpression	2		1060717	0					
ANR	1061072	SizeofExpression	sizeof ( sljit_ins )		1060717	1					
ANR	1061073	Sizeof	sizeof		1060717	0					
ANR	1061074	SizeofOperand	sljit_ins		1060717	1					
ANR	1061075	Identifier	~0xfffffff		1060717	1					
ANR	1061076	CompoundStatement		67:119:1722:1722	1060717	1					
ANR	1061077	ExpressionStatement	jump -> flags |= PATCH_J	289:3:9012:9034	1060717	0	True				
ANR	1061078	AssignmentExpression	jump -> flags |= PATCH_J		1060717	0		|=			
ANR	1061079	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1061080	Identifier	jump		1060717	0					
ANR	1061081	Identifier	flags		1060717	1					
ANR	1061082	Identifier	PATCH_J		1060717	1					
ANR	1061083	ExpressionStatement	saved_inst = inst [ 0 ]	290:3:9039:9059	1060717	1	True				
ANR	1061084	AssignmentExpression	saved_inst = inst [ 0 ]		1060717	0		=			
ANR	1061085	Identifier	saved_inst		1060717	0					
ANR	1061086	ArrayIndexing	inst [ 0 ]		1060717	1					
ANR	1061087	Identifier	inst		1060717	0					
ANR	1061088	PrimaryExpression	0		1060717	1					
ANR	1061089	ExpressionStatement	inst [ 0 ] = inst [ - 1 ]	291:3:9064:9082	1060717	2	True				
ANR	1061090	AssignmentExpression	inst [ 0 ] = inst [ - 1 ]		1060717	0		=			
ANR	1061091	ArrayIndexing	inst [ 0 ]		1060717	0					
ANR	1061092	Identifier	inst		1060717	0					
ANR	1061093	PrimaryExpression	0		1060717	1					
ANR	1061094	ArrayIndexing	inst [ - 1 ]		1060717	1					
ANR	1061095	Identifier	inst		1060717	0					
ANR	1061096	UnaryOperationExpression	- 1		1060717	1					
ANR	1061097	UnaryOperator	-		1060717	0					
ANR	1061098	PrimaryExpression	1		1060717	1					
ANR	1061099	ExpressionStatement	inst [ - 1 ] = ( saved_inst & 0xffff0000 ) | 3	292:3:9087:9127	1060717	3	True				
ANR	1061100	AssignmentExpression	inst [ - 1 ] = ( saved_inst & 0xffff0000 ) | 3		1060717	0		=			
ANR	1061101	ArrayIndexing	inst [ - 1 ]		1060717	0					
ANR	1061102	Identifier	inst		1060717	0					
ANR	1061103	UnaryOperationExpression	- 1		1060717	1					
ANR	1061104	UnaryOperator	-		1060717	0					
ANR	1061105	PrimaryExpression	1		1060717	1					
ANR	1061106	InclusiveOrExpression	( saved_inst & 0xffff0000 ) | 3		1060717	1		|			
ANR	1061107	BitAndExpression	saved_inst & 0xffff0000		1060717	0		&			
ANR	1061108	Identifier	saved_inst		1060717	0					
ANR	1061109	PrimaryExpression	0xffff0000		1060717	1					
ANR	1061110	PrimaryExpression	3		1060717	1					
ANR	1061111	ExpressionStatement	inst [ 1 ] = J	293:3:9132:9143	1060717	4	True				
ANR	1061112	AssignmentExpression	inst [ 1 ] = J		1060717	0		=			
ANR	1061113	ArrayIndexing	inst [ 1 ]		1060717	0					
ANR	1061114	Identifier	inst		1060717	0					
ANR	1061115	PrimaryExpression	1		1060717	1					
ANR	1061116	Identifier	J		1060717	1					
ANR	1061117	ExpressionStatement	inst [ 2 ] = NOP	294:3:9148:9161	1060717	5	True				
ANR	1061118	AssignmentExpression	inst [ 2 ] = NOP		1060717	0		=			
ANR	1061119	ArrayIndexing	inst [ 2 ]		1060717	0					
ANR	1061120	Identifier	inst		1060717	0					
ANR	1061121	PrimaryExpression	2		1060717	1					
ANR	1061122	Identifier	NOP		1060717	1					
ANR	1061123	ReturnStatement	return inst + 2 ;	295:3:9166:9181	1060717	6	True				
ANR	1061124	AdditiveExpression	inst + 2		1060717	0		+			
ANR	1061125	Identifier	inst		1060717	0					
ANR	1061126	PrimaryExpression	2		1060717	1					
ANR	1061127	ElseStatement	else		1060717	0					
ANR	1061128	IfStatement	if ( ( target_addr & ~0xfffffff ) == ( ( jump -> addr + 3 * sizeof ( sljit_ins ) ) & ~0xfffffff ) )		1060717	0					
ANR	1061129	Condition	( target_addr & ~0xfffffff ) == ( ( jump -> addr + 3 * sizeof ( sljit_ins ) ) & ~0xfffffff )	297:11:9198:9278	1060717	0	True				
ANR	1061130	EqualityExpression	( target_addr & ~0xfffffff ) == ( ( jump -> addr + 3 * sizeof ( sljit_ins ) ) & ~0xfffffff )		1060717	0		==			
ANR	1061131	BitAndExpression	target_addr & ~0xfffffff		1060717	0		&			
ANR	1061132	Identifier	target_addr		1060717	0					
ANR	1061133	Identifier	~0xfffffff		1060717	1					
ANR	1061134	BitAndExpression	( jump -> addr + 3 * sizeof ( sljit_ins ) ) & ~0xfffffff		1060717	1		&			
ANR	1061135	AdditiveExpression	jump -> addr + 3 * sizeof ( sljit_ins )		1060717	0		+			
ANR	1061136	PtrMemberAccess	jump -> addr		1060717	0					
ANR	1061137	Identifier	jump		1060717	0					
ANR	1061138	Identifier	addr		1060717	1					
ANR	1061139	MultiplicativeExpression	3 * sizeof ( sljit_ins )		1060717	1		*			
ANR	1061140	PrimaryExpression	3		1060717	0					
ANR	1061141	SizeofExpression	sizeof ( sljit_ins )		1060717	1					
ANR	1061142	Sizeof	sizeof		1060717	0					
ANR	1061143	SizeofOperand	sljit_ins		1060717	1					
ANR	1061144	Identifier	~0xfffffff		1060717	1					
ANR	1061145	CompoundStatement		76:94:1996:1996	1060717	1					
ANR	1061146	ExpressionStatement	jump -> flags |= PATCH_J	298:3:9286:9308	1060717	0	True				
ANR	1061147	AssignmentExpression	jump -> flags |= PATCH_J		1060717	0		|=			
ANR	1061148	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1061149	Identifier	jump		1060717	0					
ANR	1061150	Identifier	flags		1060717	1					
ANR	1061151	Identifier	PATCH_J		1060717	1					
ANR	1061152	ExpressionStatement	inst [ 0 ] = ( inst [ 0 ] & 0xffff0000 ) | 3	299:3:9313:9349	1060717	1	True				
ANR	1061153	AssignmentExpression	inst [ 0 ] = ( inst [ 0 ] & 0xffff0000 ) | 3		1060717	0		=			
ANR	1061154	ArrayIndexing	inst [ 0 ]		1060717	0					
ANR	1061155	Identifier	inst		1060717	0					
ANR	1061156	PrimaryExpression	0		1060717	1					
ANR	1061157	InclusiveOrExpression	( inst [ 0 ] & 0xffff0000 ) | 3		1060717	1		|			
ANR	1061158	BitAndExpression	inst [ 0 ] & 0xffff0000		1060717	0		&			
ANR	1061159	ArrayIndexing	inst [ 0 ]		1060717	0					
ANR	1061160	Identifier	inst		1060717	0					
ANR	1061161	PrimaryExpression	0		1060717	1					
ANR	1061162	PrimaryExpression	0xffff0000		1060717	1					
ANR	1061163	PrimaryExpression	3		1060717	1					
ANR	1061164	ExpressionStatement	inst [ 1 ] = NOP	300:3:9354:9367	1060717	2	True				
ANR	1061165	AssignmentExpression	inst [ 1 ] = NOP		1060717	0		=			
ANR	1061166	ArrayIndexing	inst [ 1 ]		1060717	0					
ANR	1061167	Identifier	inst		1060717	0					
ANR	1061168	PrimaryExpression	1		1060717	1					
ANR	1061169	Identifier	NOP		1060717	1					
ANR	1061170	ExpressionStatement	inst [ 2 ] = J	301:3:9372:9383	1060717	3	True				
ANR	1061171	AssignmentExpression	inst [ 2 ] = J		1060717	0		=			
ANR	1061172	ArrayIndexing	inst [ 2 ]		1060717	0					
ANR	1061173	Identifier	inst		1060717	0					
ANR	1061174	PrimaryExpression	2		1060717	1					
ANR	1061175	Identifier	J		1060717	1					
ANR	1061176	ExpressionStatement	inst [ 3 ] = NOP	302:3:9388:9401	1060717	4	True				
ANR	1061177	AssignmentExpression	inst [ 3 ] = NOP		1060717	0		=			
ANR	1061178	ArrayIndexing	inst [ 3 ]		1060717	0					
ANR	1061179	Identifier	inst		1060717	0					
ANR	1061180	PrimaryExpression	3		1060717	1					
ANR	1061181	Identifier	NOP		1060717	1					
ANR	1061182	ExpressionStatement	jump -> addr += sizeof ( sljit_ins )	303:3:9406:9437	1060717	5	True				
ANR	1061183	AssignmentExpression	jump -> addr += sizeof ( sljit_ins )		1060717	0		+=			
ANR	1061184	PtrMemberAccess	jump -> addr		1060717	0					
ANR	1061185	Identifier	jump		1060717	0					
ANR	1061186	Identifier	addr		1060717	1					
ANR	1061187	SizeofExpression	sizeof ( sljit_ins )		1060717	1					
ANR	1061188	Sizeof	sizeof		1060717	0					
ANR	1061189	SizeofOperand	sljit_ins		1060717	1					
ANR	1061190	ReturnStatement	return inst + 3 ;	304:3:9442:9457	1060717	6	True				
ANR	1061191	AdditiveExpression	inst + 3		1060717	0		+			
ANR	1061192	Identifier	inst		1060717	0					
ANR	1061193	PrimaryExpression	3		1060717	1					
ANR	1061194	ElseStatement	else		1060717	0					
ANR	1061195	CompoundStatement		86:6:2187:2187	1060717	0					
ANR	1061196	IfStatement	if ( ( jump -> flags & IS_MOVABLE ) && ( target_addr & ~0xfffffff ) == ( jump -> addr & ~0xfffffff ) )		1060717	0					
ANR	1061197	Condition	( jump -> flags & IS_MOVABLE ) && ( target_addr & ~0xfffffff ) == ( jump -> addr & ~0xfffffff )	309:6:9503:9587	1060717	0	True				
ANR	1061198	AndExpression	( jump -> flags & IS_MOVABLE ) && ( target_addr & ~0xfffffff ) == ( jump -> addr & ~0xfffffff )		1060717	0		&&			
ANR	1061199	BitAndExpression	jump -> flags & IS_MOVABLE		1060717	0		&			
ANR	1061200	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1061201	Identifier	jump		1060717	0					
ANR	1061202	Identifier	flags		1060717	1					
ANR	1061203	Identifier	IS_MOVABLE		1060717	1					
ANR	1061204	EqualityExpression	( target_addr & ~0xfffffff ) == ( jump -> addr & ~0xfffffff )		1060717	1		==			
ANR	1061205	BitAndExpression	target_addr & ~0xfffffff		1060717	0		&			
ANR	1061206	Identifier	target_addr		1060717	0					
ANR	1061207	Identifier	~0xfffffff		1060717	1					
ANR	1061208	BitAndExpression	jump -> addr & ~0xfffffff		1060717	1		&			
ANR	1061209	PtrMemberAccess	jump -> addr		1060717	0					
ANR	1061210	Identifier	jump		1060717	0					
ANR	1061211	Identifier	addr		1060717	1					
ANR	1061212	Identifier	~0xfffffff		1060717	1					
ANR	1061213	CompoundStatement		88:93:2305:2305	1060717	1					
ANR	1061214	ExpressionStatement	jump -> flags |= PATCH_J	310:3:9595:9617	1060717	0	True				
ANR	1061215	AssignmentExpression	jump -> flags |= PATCH_J		1060717	0		|=			
ANR	1061216	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1061217	Identifier	jump		1060717	0					
ANR	1061218	Identifier	flags		1060717	1					
ANR	1061219	Identifier	PATCH_J		1060717	1					
ANR	1061220	ExpressionStatement	inst [ 0 ] = inst [ - 1 ]	311:3:9622:9640	1060717	1	True				
ANR	1061221	AssignmentExpression	inst [ 0 ] = inst [ - 1 ]		1060717	0		=			
ANR	1061222	ArrayIndexing	inst [ 0 ]		1060717	0					
ANR	1061223	Identifier	inst		1060717	0					
ANR	1061224	PrimaryExpression	0		1060717	1					
ANR	1061225	ArrayIndexing	inst [ - 1 ]		1060717	1					
ANR	1061226	Identifier	inst		1060717	0					
ANR	1061227	UnaryOperationExpression	- 1		1060717	1					
ANR	1061228	UnaryOperator	-		1060717	0					
ANR	1061229	PrimaryExpression	1		1060717	1					
ANR	1061230	ExpressionStatement	inst [ - 1 ] = ( jump -> flags & IS_JAL ) ? JAL : J	312:3:9645:9688	1060717	2	True				
ANR	1061231	AssignmentExpression	inst [ - 1 ] = ( jump -> flags & IS_JAL ) ? JAL : J		1060717	0		=			
ANR	1061232	ArrayIndexing	inst [ - 1 ]		1060717	0					
ANR	1061233	Identifier	inst		1060717	0					
ANR	1061234	UnaryOperationExpression	- 1		1060717	1					
ANR	1061235	UnaryOperator	-		1060717	0					
ANR	1061236	PrimaryExpression	1		1060717	1					
ANR	1061237	ConditionalExpression	( jump -> flags & IS_JAL ) ? JAL : J		1060717	1					
ANR	1061238	Condition	jump -> flags & IS_JAL		1060717	0					
ANR	1061239	BitAndExpression	jump -> flags & IS_JAL		1060717	0		&			
ANR	1061240	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1061241	Identifier	jump		1060717	0					
ANR	1061242	Identifier	flags		1060717	1					
ANR	1061243	Identifier	IS_JAL		1060717	1					
ANR	1061244	Identifier	JAL		1060717	1					
ANR	1061245	Identifier	J		1060717	2					
ANR	1061246	ExpressionStatement	jump -> addr -= sizeof ( sljit_ins )	313:3:9693:9724	1060717	3	True				
ANR	1061247	AssignmentExpression	jump -> addr -= sizeof ( sljit_ins )		1060717	0		-=			
ANR	1061248	PtrMemberAccess	jump -> addr		1060717	0					
ANR	1061249	Identifier	jump		1060717	0					
ANR	1061250	Identifier	addr		1060717	1					
ANR	1061251	SizeofExpression	sizeof ( sljit_ins )		1060717	1					
ANR	1061252	Sizeof	sizeof		1060717	0					
ANR	1061253	SizeofOperand	sljit_ins		1060717	1					
ANR	1061254	ReturnStatement	return inst ;	314:3:9729:9740	1060717	4	True				
ANR	1061255	Identifier	inst		1060717	0					
ANR	1061256	IfStatement	if ( ( target_addr & ~0xfffffff ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0xfffffff ) )		1060717	1					
ANR	1061257	Condition	( target_addr & ~0xfffffff ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0xfffffff )	317:6:9753:9829	1060717	0	True				
ANR	1061258	EqualityExpression	( target_addr & ~0xfffffff ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0xfffffff )		1060717	0		==			
ANR	1061259	BitAndExpression	target_addr & ~0xfffffff		1060717	0		&			
ANR	1061260	Identifier	target_addr		1060717	0					
ANR	1061261	Identifier	~0xfffffff		1060717	1					
ANR	1061262	BitAndExpression	( jump -> addr + sizeof ( sljit_ins ) ) & ~0xfffffff		1060717	1		&			
ANR	1061263	AdditiveExpression	jump -> addr + sizeof ( sljit_ins )		1060717	0		+			
ANR	1061264	PtrMemberAccess	jump -> addr		1060717	0					
ANR	1061265	Identifier	jump		1060717	0					
ANR	1061266	Identifier	addr		1060717	1					
ANR	1061267	SizeofExpression	sizeof ( sljit_ins )		1060717	1					
ANR	1061268	Sizeof	sizeof		1060717	0					
ANR	1061269	SizeofOperand	sljit_ins		1060717	1					
ANR	1061270	Identifier	~0xfffffff		1060717	1					
ANR	1061271	CompoundStatement		96:85:2547:2547	1060717	1					
ANR	1061272	ExpressionStatement	jump -> flags |= PATCH_J	318:3:9837:9859	1060717	0	True				
ANR	1061273	AssignmentExpression	jump -> flags |= PATCH_J		1060717	0		|=			
ANR	1061274	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1061275	Identifier	jump		1060717	0					
ANR	1061276	Identifier	flags		1060717	1					
ANR	1061277	Identifier	PATCH_J		1060717	1					
ANR	1061278	ExpressionStatement	inst [ 0 ] = ( jump -> flags & IS_JAL ) ? JAL : J	319:3:9864:9906	1060717	1	True				
ANR	1061279	AssignmentExpression	inst [ 0 ] = ( jump -> flags & IS_JAL ) ? JAL : J		1060717	0		=			
ANR	1061280	ArrayIndexing	inst [ 0 ]		1060717	0					
ANR	1061281	Identifier	inst		1060717	0					
ANR	1061282	PrimaryExpression	0		1060717	1					
ANR	1061283	ConditionalExpression	( jump -> flags & IS_JAL ) ? JAL : J		1060717	1					
ANR	1061284	Condition	jump -> flags & IS_JAL		1060717	0					
ANR	1061285	BitAndExpression	jump -> flags & IS_JAL		1060717	0		&			
ANR	1061286	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1061287	Identifier	jump		1060717	0					
ANR	1061288	Identifier	flags		1060717	1					
ANR	1061289	Identifier	IS_JAL		1060717	1					
ANR	1061290	Identifier	JAL		1060717	1					
ANR	1061291	Identifier	J		1060717	2					
ANR	1061292	ExpressionStatement	inst [ 1 ] = NOP	320:3:9911:9924	1060717	2	True				
ANR	1061293	AssignmentExpression	inst [ 1 ] = NOP		1060717	0		=			
ANR	1061294	ArrayIndexing	inst [ 1 ]		1060717	0					
ANR	1061295	Identifier	inst		1060717	0					
ANR	1061296	PrimaryExpression	1		1060717	1					
ANR	1061297	Identifier	NOP		1060717	1					
ANR	1061298	ReturnStatement	return inst + 1 ;	321:3:9929:9944	1060717	3	True				
ANR	1061299	AdditiveExpression	inst + 1		1060717	0		+			
ANR	1061300	Identifier	inst		1060717	0					
ANR	1061301	PrimaryExpression	1		1060717	1					
ANR	1061302	Label	keep_address :	326:0:10013:10025	1060717	11	True				
ANR	1061303	Identifier	keep_address		1060717	0					
ANR	1061304	IfStatement	if ( target_addr <= 0x7fffffff )		1060717	12					
ANR	1061305	Condition	target_addr <= 0x7fffffff	327:5:10032:10056	1060717	0	True				
ANR	1061306	RelationalExpression	target_addr <= 0x7fffffff		1060717	0		<=			
ANR	1061307	Identifier	target_addr		1060717	0					
ANR	1061308	PrimaryExpression	0x7fffffff		1060717	1					
ANR	1061309	CompoundStatement		106:32:2774:2774	1060717	1					
ANR	1061310	ExpressionStatement	jump -> flags |= PATCH_ABS32	328:2:10063:10089	1060717	0	True				
ANR	1061311	AssignmentExpression	jump -> flags |= PATCH_ABS32		1060717	0		|=			
ANR	1061312	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1061313	Identifier	jump		1060717	0					
ANR	1061314	Identifier	flags		1060717	1					
ANR	1061315	Identifier	PATCH_ABS32		1060717	1					
ANR	1061316	IfStatement	if ( jump -> flags & IS_COND )		1060717	1					
ANR	1061317	Condition	jump -> flags & IS_COND	329:6:10097:10117	1060717	0	True				
ANR	1061318	BitAndExpression	jump -> flags & IS_COND		1060717	0		&			
ANR	1061319	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1061320	Identifier	jump		1060717	0					
ANR	1061321	Identifier	flags		1060717	1					
ANR	1061322	Identifier	IS_COND		1060717	1					
ANR	1061323	CompoundStatement		108:29:2835:2835	1060717	1					
ANR	1061324	ExpressionStatement	inst [ 0 ] -= 4	330:3:10125:10137	1060717	0	True				
ANR	1061325	AssignmentExpression	inst [ 0 ] -= 4		1060717	0		-=			
ANR	1061326	ArrayIndexing	inst [ 0 ]		1060717	0					
ANR	1061327	Identifier	inst		1060717	0					
ANR	1061328	PrimaryExpression	0		1060717	1					
ANR	1061329	PrimaryExpression	4		1060717	1					
ANR	1061330	ExpressionStatement	inst ++	331:3:10142:10148	1060717	1	True				
ANR	1061331	PostIncDecOperationExpression	inst ++		1060717	0					
ANR	1061332	Identifier	inst		1060717	0					
ANR	1061333	IncDec	++		1060717	1					
ANR	1061334	ExpressionStatement	inst [ 2 ] = inst [ 6 ]	333:2:10156:10173	1060717	2	True				
ANR	1061335	AssignmentExpression	inst [ 2 ] = inst [ 6 ]		1060717	0		=			
ANR	1061336	ArrayIndexing	inst [ 2 ]		1060717	0					
ANR	1061337	Identifier	inst		1060717	0					
ANR	1061338	PrimaryExpression	2		1060717	1					
ANR	1061339	ArrayIndexing	inst [ 6 ]		1060717	1					
ANR	1061340	Identifier	inst		1060717	0					
ANR	1061341	PrimaryExpression	6		1060717	1					
ANR	1061342	ExpressionStatement	inst [ 3 ] = inst [ 7 ]	334:2:10177:10194	1060717	3	True				
ANR	1061343	AssignmentExpression	inst [ 3 ] = inst [ 7 ]		1060717	0		=			
ANR	1061344	ArrayIndexing	inst [ 3 ]		1060717	0					
ANR	1061345	Identifier	inst		1060717	0					
ANR	1061346	PrimaryExpression	3		1060717	1					
ANR	1061347	ArrayIndexing	inst [ 7 ]		1060717	1					
ANR	1061348	Identifier	inst		1060717	0					
ANR	1061349	PrimaryExpression	7		1060717	1					
ANR	1061350	ReturnStatement	return inst + 3 ;	335:2:10198:10213	1060717	4	True				
ANR	1061351	AdditiveExpression	inst + 3		1060717	0		+			
ANR	1061352	Identifier	inst		1060717	0					
ANR	1061353	PrimaryExpression	3		1060717	1					
ANR	1061354	IfStatement	if ( target_addr <= 0x7fffffffffffl )		1060717	13					
ANR	1061355	Condition	target_addr <= 0x7fffffffffffl	337:5:10223:10252	1060717	0	True				
ANR	1061356	RelationalExpression	target_addr <= 0x7fffffffffffl		1060717	0		<=			
ANR	1061357	Identifier	target_addr		1060717	0					
ANR	1061358	PrimaryExpression	0x7fffffffffffl		1060717	1					
ANR	1061359	CompoundStatement		116:37:2970:2970	1060717	1					
ANR	1061360	ExpressionStatement	jump -> flags |= PATCH_ABS48	338:2:10259:10285	1060717	0	True				
ANR	1061361	AssignmentExpression	jump -> flags |= PATCH_ABS48		1060717	0		|=			
ANR	1061362	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1061363	Identifier	jump		1060717	0					
ANR	1061364	Identifier	flags		1060717	1					
ANR	1061365	Identifier	PATCH_ABS48		1060717	1					
ANR	1061366	IfStatement	if ( jump -> flags & IS_COND )		1060717	1					
ANR	1061367	Condition	jump -> flags & IS_COND	339:6:10293:10313	1060717	0	True				
ANR	1061368	BitAndExpression	jump -> flags & IS_COND		1060717	0		&			
ANR	1061369	PtrMemberAccess	jump -> flags		1060717	0					
ANR	1061370	Identifier	jump		1060717	0					
ANR	1061371	Identifier	flags		1060717	1					
ANR	1061372	Identifier	IS_COND		1060717	1					
ANR	1061373	CompoundStatement		118:29:3031:3031	1060717	1					
ANR	1061374	ExpressionStatement	inst [ 0 ] -= 2	340:3:10321:10333	1060717	0	True				
ANR	1061375	AssignmentExpression	inst [ 0 ] -= 2		1060717	0		-=			
ANR	1061376	ArrayIndexing	inst [ 0 ]		1060717	0					
ANR	1061377	Identifier	inst		1060717	0					
ANR	1061378	PrimaryExpression	0		1060717	1					
ANR	1061379	PrimaryExpression	2		1060717	1					
ANR	1061380	ExpressionStatement	inst ++	341:3:10338:10344	1060717	1	True				
ANR	1061381	PostIncDecOperationExpression	inst ++		1060717	0					
ANR	1061382	Identifier	inst		1060717	0					
ANR	1061383	IncDec	++		1060717	1					
ANR	1061384	ExpressionStatement	inst [ 4 ] = inst [ 6 ]	343:2:10352:10369	1060717	2	True				
ANR	1061385	AssignmentExpression	inst [ 4 ] = inst [ 6 ]		1060717	0		=			
ANR	1061386	ArrayIndexing	inst [ 4 ]		1060717	0					
ANR	1061387	Identifier	inst		1060717	0					
ANR	1061388	PrimaryExpression	4		1060717	1					
ANR	1061389	ArrayIndexing	inst [ 6 ]		1060717	1					
ANR	1061390	Identifier	inst		1060717	0					
ANR	1061391	PrimaryExpression	6		1060717	1					
ANR	1061392	ExpressionStatement	inst [ 5 ] = inst [ 7 ]	344:2:10373:10390	1060717	3	True				
ANR	1061393	AssignmentExpression	inst [ 5 ] = inst [ 7 ]		1060717	0		=			
ANR	1061394	ArrayIndexing	inst [ 5 ]		1060717	0					
ANR	1061395	Identifier	inst		1060717	0					
ANR	1061396	PrimaryExpression	5		1060717	1					
ANR	1061397	ArrayIndexing	inst [ 7 ]		1060717	1					
ANR	1061398	Identifier	inst		1060717	0					
ANR	1061399	PrimaryExpression	7		1060717	1					
ANR	1061400	ReturnStatement	return inst + 5 ;	345:2:10394:10409	1060717	4	True				
ANR	1061401	AdditiveExpression	inst + 5		1060717	0		+			
ANR	1061402	Identifier	inst		1060717	0					
ANR	1061403	PrimaryExpression	5		1060717	1					
ANR	1061404	ReturnStatement	return code_ptr ;	349:1:10423:10438	1060717	14	True				
ANR	1061405	Identifier	code_ptr		1060717	0					
ANR	1061406	ReturnType	static SLJIT_INLINE sljit_ins *		1060717	1					
ANR	1061407	Identifier	detect_jump_type		1060717	2					
ANR	1061408	ParameterList	"struct sljit_jump * jump , sljit_ins * code_ptr , sljit_ins * code"		1060717	3					
ANR	1061409	Parameter	struct sljit_jump * jump	221:48:7221:7243	1060717	0	True				
ANR	1061410	ParameterType	struct sljit_jump *		1060717	0					
ANR	1061411	Identifier	jump		1060717	1					
ANR	1061412	Parameter	sljit_ins * code_ptr	221:73:7246:7264	1060717	1	True				
ANR	1061413	ParameterType	sljit_ins *		1060717	0					
ANR	1061414	Identifier	code_ptr		1060717	1					
ANR	1061415	Parameter	sljit_ins * code	221:94:7267:7281	1060717	2	True				
ANR	1061416	ParameterType	sljit_ins *		1060717	0					
ANR	1061417	Identifier	code		1060717	1					
ANR	1061418	CFGEntryNode	ENTRY		1060717		True				
ANR	1061419	CFGExitNode	EXIT		1060717		True				
ANR	1061420	Symbol	jump -> u . label -> size		1060717						
ANR	1061421	Symbol	B		1060717						
ANR	1061422	Symbol	code		1060717						
ANR	1061423	Symbol	* * jump		1060717						
ANR	1061424	Symbol	* jump		1060717						
ANR	1061425	Symbol	jump -> u		1060717						
ANR	1061426	Symbol	jump -> flags		1060717						
ANR	1061427	Symbol	JUMP_LABEL		1060717						
ANR	1061428	Symbol	JUMP_ADDR		1060717						
ANR	1061429	Symbol	J		1060717						
ANR	1061430	Symbol	PATCH_ABS32		1060717						
ANR	1061431	Symbol	SIMM_MAX		1060717						
ANR	1061432	Symbol	code_ptr		1060717						
ANR	1061433	Symbol	SLJIT_REWRITABLE_JUMP		1060717						
ANR	1061434	Symbol	SIMM_MIN		1060717						
ANR	1061435	Symbol	jump		1060717						
ANR	1061436	Symbol	saved_inst		1060717						
ANR	1061437	Symbol	IS_MOVABLE		1060717						
ANR	1061438	Symbol	* inst		1060717						
ANR	1061439	Symbol	target_addr		1060717						
ANR	1061440	Symbol	diff		1060717						
ANR	1061441	Symbol	jump -> addr		1060717						
ANR	1061442	Symbol	BAL		1060717						
ANR	1061443	Symbol	NOP		1060717						
ANR	1061444	Symbol	PATCH_ABS48		1060717						
ANR	1061445	Symbol	IS_JAL		1060717						
ANR	1061446	Symbol	PATCH_J		1060717						
ANR	1061447	Symbol	IS_CALL		1060717						
ANR	1061448	Symbol	* jump -> u . label		1060717						
ANR	1061449	Symbol	* jump -> u		1060717						
ANR	1061450	Symbol	IS_COND		1060717						
ANR	1061451	Symbol	JAL		1060717						
ANR	1061452	Symbol	inst		1060717						
ANR	1061453	Symbol	jump -> u . target		1060717						
ANR	1061454	Symbol	PATCH_B		1060717						
ANR	1061455	Symbol	jump -> u . label		1060717						
ANR	1061456	Symbol	invert_branch		1060717						
ANR	1061457	Symbol	~0xfffffff		1060717						
ANR	1061458	Function	sljit_cache_flush	353:34:10493:10582							
ANR	1061459	FunctionDef	"sljit_cache_flush (void * code , void * code_ptr)"		1061458	0					
ANR	1061460	CompoundStatement		354:0:10544:10582	1061458	0					
ANR	1061461	ExpressionStatement	"SLJIT_CACHE_FLUSH ( code , code_ptr )"	355:1:10547:10580	1061458	0	True				
ANR	1061462	CallExpression	"SLJIT_CACHE_FLUSH ( code , code_ptr )"		1061458	0					
ANR	1061463	Callee	SLJIT_CACHE_FLUSH		1061458	0					
ANR	1061464	Identifier	SLJIT_CACHE_FLUSH		1061458	0					
ANR	1061465	ArgumentList	code		1061458	1					
ANR	1061466	Argument	code		1061458	0					
ANR	1061467	Identifier	code		1061458	0					
ANR	1061468	Argument	code_ptr		1061458	1					
ANR	1061469	Identifier	code_ptr		1061458	0					
ANR	1061470	ReturnType	void		1061458	1					
ANR	1061471	Identifier	sljit_cache_flush		1061458	2					
ANR	1061472	ParameterList	"void * code , void * code_ptr"		1061458	3					
ANR	1061473	Parameter	void * code	353:57:10516:10525	1061458	0	True				
ANR	1061474	ParameterType	void *		1061458	0					
ANR	1061475	Identifier	code		1061458	1					
ANR	1061476	Parameter	void * code_ptr	353:69:10528:10541	1061458	1	True				
ANR	1061477	ParameterType	void *		1061458	0					
ANR	1061478	Identifier	code_ptr		1061458	1					
ANR	1061479	CFGEntryNode	ENTRY		1061458		True				
ANR	1061480	CFGExitNode	EXIT		1061458		True				
ANR	1061481	Symbol	code		1061458						
ANR	1061482	Symbol	code_ptr		1061458						
ANR	1061483	Function	sljit_generate_code	359:0:10592:14552							
ANR	1061484	FunctionDef	sljit_generate_code (struct sljit_compiler * compiler)		1061483	0					
ANR	1061485	CompoundStatement		360:0:10676:14552	1061483	0					
ANR	1061486	IdentifierDeclStatement	struct sljit_memory_fragment * buf ;	361:1:10679:10712	1061483	0	True				
ANR	1061487	IdentifierDecl	* buf		1061483	0					
ANR	1061488	IdentifierDeclType	struct sljit_memory_fragment *		1061483	0					
ANR	1061489	Identifier	buf		1061483	1					
ANR	1061490	IdentifierDeclStatement	sljit_ins * code ;	362:1:10715:10730	1061483	1	True				
ANR	1061491	IdentifierDecl	* code		1061483	0					
ANR	1061492	IdentifierDeclType	sljit_ins *		1061483	0					
ANR	1061493	Identifier	code		1061483	1					
ANR	1061494	IdentifierDeclStatement	sljit_ins * code_ptr ;	363:1:10733:10752	1061483	2	True				
ANR	1061495	IdentifierDecl	* code_ptr		1061483	0					
ANR	1061496	IdentifierDeclType	sljit_ins *		1061483	0					
ANR	1061497	Identifier	code_ptr		1061483	1					
ANR	1061498	IdentifierDeclStatement	sljit_ins * buf_ptr ;	364:1:10755:10773	1061483	3	True				
ANR	1061499	IdentifierDecl	* buf_ptr		1061483	0					
ANR	1061500	IdentifierDeclType	sljit_ins *		1061483	0					
ANR	1061501	Identifier	buf_ptr		1061483	1					
ANR	1061502	IdentifierDeclStatement	sljit_ins * buf_end ;	365:1:10776:10794	1061483	4	True				
ANR	1061503	IdentifierDecl	* buf_end		1061483	0					
ANR	1061504	IdentifierDeclType	sljit_ins *		1061483	0					
ANR	1061505	Identifier	buf_end		1061483	1					
ANR	1061506	IdentifierDeclStatement	sljit_uw word_count ;	366:1:10797:10816	1061483	5	True				
ANR	1061507	IdentifierDecl	word_count		1061483	0					
ANR	1061508	IdentifierDeclType	sljit_uw		1061483	0					
ANR	1061509	Identifier	word_count		1061483	1					
ANR	1061510	IdentifierDeclStatement	sljit_uw addr ;	367:1:10819:10832	1061483	6	True				
ANR	1061511	IdentifierDecl	addr		1061483	0					
ANR	1061512	IdentifierDeclType	sljit_uw		1061483	0					
ANR	1061513	Identifier	addr		1061483	1					
ANR	1061514	IdentifierDeclStatement	struct sljit_label * label ;	369:1:10836:10861	1061483	7	True				
ANR	1061515	IdentifierDecl	* label		1061483	0					
ANR	1061516	IdentifierDeclType	struct sljit_label *		1061483	0					
ANR	1061517	Identifier	label		1061483	1					
ANR	1061518	IdentifierDeclStatement	struct sljit_jump * jump ;	370:1:10864:10887	1061483	8	True				
ANR	1061519	IdentifierDecl	* jump		1061483	0					
ANR	1061520	IdentifierDeclType	struct sljit_jump *		1061483	0					
ANR	1061521	Identifier	jump		1061483	1					
ANR	1061522	IdentifierDeclStatement	struct sljit_const * const_ ;	371:1:10890:10916	1061483	9	True				
ANR	1061523	IdentifierDecl	* const_		1061483	0					
ANR	1061524	IdentifierDeclType	struct sljit_const *		1061483	0					
ANR	1061525	Identifier	const_		1061483	1					
ANR	1061526	ExpressionStatement	CHECK_ERROR_PTR ( )	373:1:10920:10937	1061483	10	True				
ANR	1061527	CallExpression	CHECK_ERROR_PTR ( )		1061483	0					
ANR	1061528	Callee	CHECK_ERROR_PTR		1061483	0					
ANR	1061529	Identifier	CHECK_ERROR_PTR		1061483	0					
ANR	1061530	ArgumentList			1061483	1					
ANR	1061531	ExpressionStatement	CHECK_PTR ( check_sljit_generate_code ( compiler ) )	374:1:10940:10986	1061483	11	True				
ANR	1061532	CallExpression	CHECK_PTR ( check_sljit_generate_code ( compiler ) )		1061483	0					
ANR	1061533	Callee	CHECK_PTR		1061483	0					
ANR	1061534	Identifier	CHECK_PTR		1061483	0					
ANR	1061535	ArgumentList	check_sljit_generate_code ( compiler )		1061483	1					
ANR	1061536	Argument	check_sljit_generate_code ( compiler )		1061483	0					
ANR	1061537	CallExpression	check_sljit_generate_code ( compiler )		1061483	0					
ANR	1061538	Callee	check_sljit_generate_code		1061483	0					
ANR	1061539	Identifier	check_sljit_generate_code		1061483	0					
ANR	1061540	ArgumentList	compiler		1061483	1					
ANR	1061541	Argument	compiler		1061483	0					
ANR	1061542	Identifier	compiler		1061483	0					
ANR	1061543	ExpressionStatement	reverse_buf ( compiler )	375:1:10989:11010	1061483	12	True				
ANR	1061544	CallExpression	reverse_buf ( compiler )		1061483	0					
ANR	1061545	Callee	reverse_buf		1061483	0					
ANR	1061546	Identifier	reverse_buf		1061483	0					
ANR	1061547	ArgumentList	compiler		1061483	1					
ANR	1061548	Argument	compiler		1061483	0					
ANR	1061549	Identifier	compiler		1061483	0					
ANR	1061550	ExpressionStatement	code = ( sljit_ins * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )	377:1:11014:11086	1061483	13	True				
ANR	1061551	AssignmentExpression	code = ( sljit_ins * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )		1061483	0		=			
ANR	1061552	Identifier	code		1061483	0					
ANR	1061553	CastExpression	( sljit_ins * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )		1061483	1					
ANR	1061554	CastTarget	sljit_ins *		1061483	0					
ANR	1061555	CallExpression	SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )		1061483	1					
ANR	1061556	Callee	SLJIT_MALLOC_EXEC		1061483	0					
ANR	1061557	Identifier	SLJIT_MALLOC_EXEC		1061483	0					
ANR	1061558	ArgumentList	compiler -> size * sizeof ( sljit_ins )		1061483	1					
ANR	1061559	Argument	compiler -> size * sizeof ( sljit_ins )		1061483	0					
ANR	1061560	MultiplicativeExpression	compiler -> size * sizeof ( sljit_ins )		1061483	0		*			
ANR	1061561	PtrMemberAccess	compiler -> size		1061483	0					
ANR	1061562	Identifier	compiler		1061483	0					
ANR	1061563	Identifier	size		1061483	1					
ANR	1061564	SizeofExpression	sizeof ( sljit_ins )		1061483	1					
ANR	1061565	Sizeof	sizeof		1061483	0					
ANR	1061566	SizeofOperand	sljit_ins		1061483	1					
ANR	1061567	ExpressionStatement	PTR_FAIL_WITH_EXEC_IF ( code )	378:1:11089:11116	1061483	14	True				
ANR	1061568	CallExpression	PTR_FAIL_WITH_EXEC_IF ( code )		1061483	0					
ANR	1061569	Callee	PTR_FAIL_WITH_EXEC_IF		1061483	0					
ANR	1061570	Identifier	PTR_FAIL_WITH_EXEC_IF		1061483	0					
ANR	1061571	ArgumentList	code		1061483	1					
ANR	1061572	Argument	code		1061483	0					
ANR	1061573	Identifier	code		1061483	0					
ANR	1061574	ExpressionStatement	buf = compiler -> buf	379:1:11119:11138	1061483	15	True				
ANR	1061575	AssignmentExpression	buf = compiler -> buf		1061483	0		=			
ANR	1061576	Identifier	buf		1061483	0					
ANR	1061577	PtrMemberAccess	compiler -> buf		1061483	1					
ANR	1061578	Identifier	compiler		1061483	0					
ANR	1061579	Identifier	buf		1061483	1					
ANR	1061580	ExpressionStatement	code_ptr = code	381:1:11142:11157	1061483	16	True				
ANR	1061581	AssignmentExpression	code_ptr = code		1061483	0		=			
ANR	1061582	Identifier	code_ptr		1061483	0					
ANR	1061583	Identifier	code		1061483	1					
ANR	1061584	ExpressionStatement	word_count = 0	382:1:11160:11174	1061483	17	True				
ANR	1061585	AssignmentExpression	word_count = 0		1061483	0		=			
ANR	1061586	Identifier	word_count		1061483	0					
ANR	1061587	PrimaryExpression	0		1061483	1					
ANR	1061588	ExpressionStatement	label = compiler -> labels	383:1:11177:11201	1061483	18	True				
ANR	1061589	AssignmentExpression	label = compiler -> labels		1061483	0		=			
ANR	1061590	Identifier	label		1061483	0					
ANR	1061591	PtrMemberAccess	compiler -> labels		1061483	1					
ANR	1061592	Identifier	compiler		1061483	0					
ANR	1061593	Identifier	labels		1061483	1					
ANR	1061594	ExpressionStatement	jump = compiler -> jumps	384:1:11204:11226	1061483	19	True				
ANR	1061595	AssignmentExpression	jump = compiler -> jumps		1061483	0		=			
ANR	1061596	Identifier	jump		1061483	0					
ANR	1061597	PtrMemberAccess	compiler -> jumps		1061483	1					
ANR	1061598	Identifier	compiler		1061483	0					
ANR	1061599	Identifier	jumps		1061483	1					
ANR	1061600	ExpressionStatement	const_ = compiler -> consts	385:1:11229:11254	1061483	20	True				
ANR	1061601	AssignmentExpression	const_ = compiler -> consts		1061483	0		=			
ANR	1061602	Identifier	const_		1061483	0					
ANR	1061603	PtrMemberAccess	compiler -> consts		1061483	1					
ANR	1061604	Identifier	compiler		1061483	0					
ANR	1061605	Identifier	consts		1061483	1					
ANR	1061606	DoStatement	do		1061483	21					
ANR	1061607	CompoundStatement		27:4:583:583	1061483	0					
ANR	1061608	ExpressionStatement	buf_ptr = ( sljit_ins * ) buf -> memory	387:2:11264:11297	1061483	0	True				
ANR	1061609	AssignmentExpression	buf_ptr = ( sljit_ins * ) buf -> memory		1061483	0		=			
ANR	1061610	Identifier	buf_ptr		1061483	0					
ANR	1061611	CastExpression	( sljit_ins * ) buf -> memory		1061483	1					
ANR	1061612	CastTarget	sljit_ins *		1061483	0					
ANR	1061613	PtrMemberAccess	buf -> memory		1061483	1					
ANR	1061614	Identifier	buf		1061483	0					
ANR	1061615	Identifier	memory		1061483	1					
ANR	1061616	ExpressionStatement	buf_end = buf_ptr + ( buf -> used_size >> 2 )	388:2:11301:11342	1061483	1	True				
ANR	1061617	AssignmentExpression	buf_end = buf_ptr + ( buf -> used_size >> 2 )		1061483	0		=			
ANR	1061618	Identifier	buf_end		1061483	0					
ANR	1061619	AdditiveExpression	buf_ptr + ( buf -> used_size >> 2 )		1061483	1		+			
ANR	1061620	Identifier	buf_ptr		1061483	0					
ANR	1061621	ShiftExpression	buf -> used_size >> 2		1061483	1		>>			
ANR	1061622	PtrMemberAccess	buf -> used_size		1061483	0					
ANR	1061623	Identifier	buf		1061483	0					
ANR	1061624	Identifier	used_size		1061483	1					
ANR	1061625	PrimaryExpression	2		1061483	1					
ANR	1061626	DoStatement	do		1061483	2					
ANR	1061627	CompoundStatement		30:5:672:672	1061483	0					
ANR	1061628	ExpressionStatement	* code_ptr = * buf_ptr ++	390:3:11354:11376	1061483	0	True				
ANR	1061629	AssignmentExpression	* code_ptr = * buf_ptr ++		1061483	0		=			
ANR	1061630	UnaryOperationExpression	* code_ptr		1061483	0					
ANR	1061631	UnaryOperator	*		1061483	0					
ANR	1061632	Identifier	code_ptr		1061483	1					
ANR	1061633	UnaryOperationExpression	* buf_ptr ++		1061483	1					
ANR	1061634	UnaryOperator	*		1061483	0					
ANR	1061635	PostIncDecOperationExpression	buf_ptr ++		1061483	1					
ANR	1061636	Identifier	buf_ptr		1061483	0					
ANR	1061637	IncDec	++		1061483	1					
ANR	1061638	ExpressionStatement	SLJIT_ASSERT ( ! label || label -> size >= word_count )	391:3:11381:11430	1061483	1	True				
ANR	1061639	CallExpression	SLJIT_ASSERT ( ! label || label -> size >= word_count )		1061483	0					
ANR	1061640	Callee	SLJIT_ASSERT		1061483	0					
ANR	1061641	Identifier	SLJIT_ASSERT		1061483	0					
ANR	1061642	ArgumentList	! label || label -> size >= word_count		1061483	1					
ANR	1061643	Argument	! label || label -> size >= word_count		1061483	0					
ANR	1061644	OrExpression	! label || label -> size >= word_count		1061483	0		||			
ANR	1061645	UnaryOperationExpression	! label		1061483	0					
ANR	1061646	UnaryOperator	!		1061483	0					
ANR	1061647	Identifier	label		1061483	1					
ANR	1061648	RelationalExpression	label -> size >= word_count		1061483	1		>=			
ANR	1061649	PtrMemberAccess	label -> size		1061483	0					
ANR	1061650	Identifier	label		1061483	0					
ANR	1061651	Identifier	size		1061483	1					
ANR	1061652	Identifier	word_count		1061483	1					
ANR	1061653	ExpressionStatement	SLJIT_ASSERT ( ! jump || jump -> addr >= word_count )	392:3:11435:11482	1061483	2	True				
ANR	1061654	CallExpression	SLJIT_ASSERT ( ! jump || jump -> addr >= word_count )		1061483	0					
ANR	1061655	Callee	SLJIT_ASSERT		1061483	0					
ANR	1061656	Identifier	SLJIT_ASSERT		1061483	0					
ANR	1061657	ArgumentList	! jump || jump -> addr >= word_count		1061483	1					
ANR	1061658	Argument	! jump || jump -> addr >= word_count		1061483	0					
ANR	1061659	OrExpression	! jump || jump -> addr >= word_count		1061483	0		||			
ANR	1061660	UnaryOperationExpression	! jump		1061483	0					
ANR	1061661	UnaryOperator	!		1061483	0					
ANR	1061662	Identifier	jump		1061483	1					
ANR	1061663	RelationalExpression	jump -> addr >= word_count		1061483	1		>=			
ANR	1061664	PtrMemberAccess	jump -> addr		1061483	0					
ANR	1061665	Identifier	jump		1061483	0					
ANR	1061666	Identifier	addr		1061483	1					
ANR	1061667	Identifier	word_count		1061483	1					
ANR	1061668	ExpressionStatement	SLJIT_ASSERT ( ! const_ || const_ -> addr >= word_count )	393:3:11487:11538	1061483	3	True				
ANR	1061669	CallExpression	SLJIT_ASSERT ( ! const_ || const_ -> addr >= word_count )		1061483	0					
ANR	1061670	Callee	SLJIT_ASSERT		1061483	0					
ANR	1061671	Identifier	SLJIT_ASSERT		1061483	0					
ANR	1061672	ArgumentList	! const_ || const_ -> addr >= word_count		1061483	1					
ANR	1061673	Argument	! const_ || const_ -> addr >= word_count		1061483	0					
ANR	1061674	OrExpression	! const_ || const_ -> addr >= word_count		1061483	0		||			
ANR	1061675	UnaryOperationExpression	! const_		1061483	0					
ANR	1061676	UnaryOperator	!		1061483	0					
ANR	1061677	Identifier	const_		1061483	1					
ANR	1061678	RelationalExpression	const_ -> addr >= word_count		1061483	1		>=			
ANR	1061679	PtrMemberAccess	const_ -> addr		1061483	0					
ANR	1061680	Identifier	const_		1061483	0					
ANR	1061681	Identifier	addr		1061483	1					
ANR	1061682	Identifier	word_count		1061483	1					
ANR	1061683	IfStatement	if ( label && label -> size == word_count )		1061483	4					
ANR	1061684	Condition	label && label -> size == word_count	395:7:11603:11636	1061483	0	True				
ANR	1061685	AndExpression	label && label -> size == word_count		1061483	0		&&			
ANR	1061686	Identifier	label		1061483	0					
ANR	1061687	EqualityExpression	label -> size == word_count		1061483	1		==			
ANR	1061688	PtrMemberAccess	label -> size		1061483	0					
ANR	1061689	Identifier	label		1061483	0					
ANR	1061690	Identifier	size		1061483	1					
ANR	1061691	Identifier	word_count		1061483	1					
ANR	1061692	CompoundStatement		36:43:962:962	1061483	1					
ANR	1061693	ExpressionStatement	label -> addr = ( sljit_uw ) code_ptr	397:4:11683:11715	1061483	0	True				
ANR	1061694	AssignmentExpression	label -> addr = ( sljit_uw ) code_ptr		1061483	0		=			
ANR	1061695	PtrMemberAccess	label -> addr		1061483	0					
ANR	1061696	Identifier	label		1061483	0					
ANR	1061697	Identifier	addr		1061483	1					
ANR	1061698	CastExpression	( sljit_uw ) code_ptr		1061483	1					
ANR	1061699	CastTarget	sljit_uw		1061483	0					
ANR	1061700	Identifier	code_ptr		1061483	1					
ANR	1061701	ExpressionStatement	label -> size = code_ptr - code	398:4:11721:11750	1061483	1	True				
ANR	1061702	AssignmentExpression	label -> size = code_ptr - code		1061483	0		=			
ANR	1061703	PtrMemberAccess	label -> size		1061483	0					
ANR	1061704	Identifier	label		1061483	0					
ANR	1061705	Identifier	size		1061483	1					
ANR	1061706	AdditiveExpression	code_ptr - code		1061483	1		-			
ANR	1061707	Identifier	code_ptr		1061483	0					
ANR	1061708	Identifier	code		1061483	1					
ANR	1061709	ExpressionStatement	label = label -> next	399:4:11756:11775	1061483	2	True				
ANR	1061710	AssignmentExpression	label = label -> next		1061483	0		=			
ANR	1061711	Identifier	label		1061483	0					
ANR	1061712	PtrMemberAccess	label -> next		1061483	1					
ANR	1061713	Identifier	label		1061483	0					
ANR	1061714	Identifier	next		1061483	1					
ANR	1061715	IfStatement	if ( jump && jump -> addr == word_count )		1061483	5					
ANR	1061716	Condition	jump && jump -> addr == word_count	401:7:11789:11820	1061483	0	True				
ANR	1061717	AndExpression	jump && jump -> addr == word_count		1061483	0		&&			
ANR	1061718	Identifier	jump		1061483	0					
ANR	1061719	EqualityExpression	jump -> addr == word_count		1061483	1		==			
ANR	1061720	PtrMemberAccess	jump -> addr		1061483	0					
ANR	1061721	Identifier	jump		1061483	0					
ANR	1061722	Identifier	addr		1061483	1					
ANR	1061723	Identifier	word_count		1061483	1					
ANR	1061724	CompoundStatement		42:41:1146:1146	1061483	1					
ANR	1061725	ExpressionStatement	jump -> addr = ( sljit_uw ) ( code_ptr - 3 )	403:4:11888:11925	1061483	0	True				
ANR	1061726	AssignmentExpression	jump -> addr = ( sljit_uw ) ( code_ptr - 3 )		1061483	0		=			
ANR	1061727	PtrMemberAccess	jump -> addr		1061483	0					
ANR	1061728	Identifier	jump		1061483	0					
ANR	1061729	Identifier	addr		1061483	1					
ANR	1061730	CastExpression	( sljit_uw ) ( code_ptr - 3 )		1061483	1					
ANR	1061731	CastTarget	sljit_uw		1061483	0					
ANR	1061732	AdditiveExpression	code_ptr - 3		1061483	1		-			
ANR	1061733	Identifier	code_ptr		1061483	0					
ANR	1061734	PrimaryExpression	3		1061483	1					
ANR	1061735	ExpressionStatement	"code_ptr = detect_jump_type ( jump , code_ptr , code )"	407:4:11987:12036	1061483	1	True				
ANR	1061736	AssignmentExpression	"code_ptr = detect_jump_type ( jump , code_ptr , code )"		1061483	0		=			
ANR	1061737	Identifier	code_ptr		1061483	0					
ANR	1061738	CallExpression	"detect_jump_type ( jump , code_ptr , code )"		1061483	1					
ANR	1061739	Callee	detect_jump_type		1061483	0					
ANR	1061740	Identifier	detect_jump_type		1061483	0					
ANR	1061741	ArgumentList	jump		1061483	1					
ANR	1061742	Argument	jump		1061483	0					
ANR	1061743	Identifier	jump		1061483	0					
ANR	1061744	Argument	code_ptr		1061483	1					
ANR	1061745	Identifier	code_ptr		1061483	0					
ANR	1061746	Argument	code		1061483	2					
ANR	1061747	Identifier	code		1061483	0					
ANR	1061748	ExpressionStatement	jump = jump -> next	408:4:12042:12059	1061483	2	True				
ANR	1061749	AssignmentExpression	jump = jump -> next		1061483	0		=			
ANR	1061750	Identifier	jump		1061483	0					
ANR	1061751	PtrMemberAccess	jump -> next		1061483	1					
ANR	1061752	Identifier	jump		1061483	0					
ANR	1061753	Identifier	next		1061483	1					
ANR	1061754	IfStatement	if ( const_ && const_ -> addr == word_count )		1061483	6					
ANR	1061755	Condition	const_ && const_ -> addr == word_count	410:7:12073:12108	1061483	0	True				
ANR	1061756	AndExpression	const_ && const_ -> addr == word_count		1061483	0		&&			
ANR	1061757	Identifier	const_		1061483	0					
ANR	1061758	EqualityExpression	const_ -> addr == word_count		1061483	1		==			
ANR	1061759	PtrMemberAccess	const_ -> addr		1061483	0					
ANR	1061760	Identifier	const_		1061483	0					
ANR	1061761	Identifier	addr		1061483	1					
ANR	1061762	Identifier	word_count		1061483	1					
ANR	1061763	CompoundStatement		51:45:1434:1434	1061483	1					
ANR	1061764	ExpressionStatement	const_ -> addr = ( sljit_uw ) code_ptr	412:4:12155:12188	1061483	0	True				
ANR	1061765	AssignmentExpression	const_ -> addr = ( sljit_uw ) code_ptr		1061483	0		=			
ANR	1061766	PtrMemberAccess	const_ -> addr		1061483	0					
ANR	1061767	Identifier	const_		1061483	0					
ANR	1061768	Identifier	addr		1061483	1					
ANR	1061769	CastExpression	( sljit_uw ) code_ptr		1061483	1					
ANR	1061770	CastTarget	sljit_uw		1061483	0					
ANR	1061771	Identifier	code_ptr		1061483	1					
ANR	1061772	ExpressionStatement	const_ = const_ -> next	413:4:12194:12215	1061483	1	True				
ANR	1061773	AssignmentExpression	const_ = const_ -> next		1061483	0		=			
ANR	1061774	Identifier	const_		1061483	0					
ANR	1061775	PtrMemberAccess	const_ -> next		1061483	1					
ANR	1061776	Identifier	const_		1061483	0					
ANR	1061777	Identifier	next		1061483	1					
ANR	1061778	ExpressionStatement	code_ptr ++	415:3:12225:12236	1061483	7	True				
ANR	1061779	PostIncDecOperationExpression	code_ptr ++		1061483	0					
ANR	1061780	Identifier	code_ptr		1061483	0					
ANR	1061781	IncDec	++		1061483	1					
ANR	1061782	ExpressionStatement	word_count ++	416:3:12241:12254	1061483	8	True				
ANR	1061783	PostIncDecOperationExpression	word_count ++		1061483	0					
ANR	1061784	Identifier	word_count		1061483	0					
ANR	1061785	IncDec	++		1061483	1					
ANR	1061786	Condition	buf_ptr < buf_end	417:11:12267:12283	1061483	1	True				
ANR	1061787	RelationalExpression	buf_ptr < buf_end		1061483	0		<			
ANR	1061788	Identifier	buf_ptr		1061483	0					
ANR	1061789	Identifier	buf_end		1061483	1					
ANR	1061790	ExpressionStatement	buf = buf -> next	419:2:12290:12305	1061483	3	True				
ANR	1061791	AssignmentExpression	buf = buf -> next		1061483	0		=			
ANR	1061792	Identifier	buf		1061483	0					
ANR	1061793	PtrMemberAccess	buf -> next		1061483	1					
ANR	1061794	Identifier	buf		1061483	0					
ANR	1061795	Identifier	next		1061483	1					
ANR	1061796	Condition	buf	420:10:12317:12319	1061483	1	True				
ANR	1061797	Identifier	buf		1061483	0					
ANR	1061798	IfStatement	if ( label && label -> size == word_count )		1061483	22					
ANR	1061799	Condition	label && label -> size == word_count	422:5:12329:12362	1061483	0	True				
ANR	1061800	AndExpression	label && label -> size == word_count		1061483	0		&&			
ANR	1061801	Identifier	label		1061483	0					
ANR	1061802	EqualityExpression	label -> size == word_count		1061483	1		==			
ANR	1061803	PtrMemberAccess	label -> size		1061483	0					
ANR	1061804	Identifier	label		1061483	0					
ANR	1061805	Identifier	size		1061483	1					
ANR	1061806	Identifier	word_count		1061483	1					
ANR	1061807	CompoundStatement		63:41:1688:1688	1061483	1					
ANR	1061808	ExpressionStatement	label -> addr = ( sljit_uw ) code_ptr	423:2:12369:12401	1061483	0	True				
ANR	1061809	AssignmentExpression	label -> addr = ( sljit_uw ) code_ptr		1061483	0		=			
ANR	1061810	PtrMemberAccess	label -> addr		1061483	0					
ANR	1061811	Identifier	label		1061483	0					
ANR	1061812	Identifier	addr		1061483	1					
ANR	1061813	CastExpression	( sljit_uw ) code_ptr		1061483	1					
ANR	1061814	CastTarget	sljit_uw		1061483	0					
ANR	1061815	Identifier	code_ptr		1061483	1					
ANR	1061816	ExpressionStatement	label -> size = code_ptr - code	424:2:12405:12434	1061483	1	True				
ANR	1061817	AssignmentExpression	label -> size = code_ptr - code		1061483	0		=			
ANR	1061818	PtrMemberAccess	label -> size		1061483	0					
ANR	1061819	Identifier	label		1061483	0					
ANR	1061820	Identifier	size		1061483	1					
ANR	1061821	AdditiveExpression	code_ptr - code		1061483	1		-			
ANR	1061822	Identifier	code_ptr		1061483	0					
ANR	1061823	Identifier	code		1061483	1					
ANR	1061824	ExpressionStatement	label = label -> next	425:2:12438:12457	1061483	2	True				
ANR	1061825	AssignmentExpression	label = label -> next		1061483	0		=			
ANR	1061826	Identifier	label		1061483	0					
ANR	1061827	PtrMemberAccess	label -> next		1061483	1					
ANR	1061828	Identifier	label		1061483	0					
ANR	1061829	Identifier	next		1061483	1					
ANR	1061830	ExpressionStatement	SLJIT_ASSERT ( ! label )	428:1:12464:12484	1061483	23	True				
ANR	1061831	CallExpression	SLJIT_ASSERT ( ! label )		1061483	0					
ANR	1061832	Callee	SLJIT_ASSERT		1061483	0					
ANR	1061833	Identifier	SLJIT_ASSERT		1061483	0					
ANR	1061834	ArgumentList	! label		1061483	1					
ANR	1061835	Argument	! label		1061483	0					
ANR	1061836	UnaryOperationExpression	! label		1061483	0					
ANR	1061837	UnaryOperator	!		1061483	0					
ANR	1061838	Identifier	label		1061483	1					
ANR	1061839	ExpressionStatement	SLJIT_ASSERT ( ! jump )	429:1:12487:12506	1061483	24	True				
ANR	1061840	CallExpression	SLJIT_ASSERT ( ! jump )		1061483	0					
ANR	1061841	Callee	SLJIT_ASSERT		1061483	0					
ANR	1061842	Identifier	SLJIT_ASSERT		1061483	0					
ANR	1061843	ArgumentList	! jump		1061483	1					
ANR	1061844	Argument	! jump		1061483	0					
ANR	1061845	UnaryOperationExpression	! jump		1061483	0					
ANR	1061846	UnaryOperator	!		1061483	0					
ANR	1061847	Identifier	jump		1061483	1					
ANR	1061848	ExpressionStatement	SLJIT_ASSERT ( ! const_ )	430:1:12509:12530	1061483	25	True				
ANR	1061849	CallExpression	SLJIT_ASSERT ( ! const_ )		1061483	0					
ANR	1061850	Callee	SLJIT_ASSERT		1061483	0					
ANR	1061851	Identifier	SLJIT_ASSERT		1061483	0					
ANR	1061852	ArgumentList	! const_		1061483	1					
ANR	1061853	Argument	! const_		1061483	0					
ANR	1061854	UnaryOperationExpression	! const_		1061483	0					
ANR	1061855	UnaryOperator	!		1061483	0					
ANR	1061856	Identifier	const_		1061483	1					
ANR	1061857	ExpressionStatement	SLJIT_ASSERT ( code_ptr - code <= ( sljit_sw ) compiler -> size )	431:1:12533:12590	1061483	26	True				
ANR	1061858	CallExpression	SLJIT_ASSERT ( code_ptr - code <= ( sljit_sw ) compiler -> size )		1061483	0					
ANR	1061859	Callee	SLJIT_ASSERT		1061483	0					
ANR	1061860	Identifier	SLJIT_ASSERT		1061483	0					
ANR	1061861	ArgumentList	code_ptr - code <= ( sljit_sw ) compiler -> size		1061483	1					
ANR	1061862	Argument	code_ptr - code <= ( sljit_sw ) compiler -> size		1061483	0					
ANR	1061863	RelationalExpression	code_ptr - code <= ( sljit_sw ) compiler -> size		1061483	0		<=			
ANR	1061864	AdditiveExpression	code_ptr - code		1061483	0		-			
ANR	1061865	Identifier	code_ptr		1061483	0					
ANR	1061866	Identifier	code		1061483	1					
ANR	1061867	CastExpression	( sljit_sw ) compiler -> size		1061483	1					
ANR	1061868	CastTarget	sljit_sw		1061483	0					
ANR	1061869	PtrMemberAccess	compiler -> size		1061483	1					
ANR	1061870	Identifier	compiler		1061483	0					
ANR	1061871	Identifier	size		1061483	1					
ANR	1061872	ExpressionStatement	jump = compiler -> jumps	433:1:12594:12616	1061483	27	True				
ANR	1061873	AssignmentExpression	jump = compiler -> jumps		1061483	0		=			
ANR	1061874	Identifier	jump		1061483	0					
ANR	1061875	PtrMemberAccess	compiler -> jumps		1061483	1					
ANR	1061876	Identifier	compiler		1061483	0					
ANR	1061877	Identifier	jumps		1061483	1					
ANR	1061878	WhileStatement	while ( jump )		1061483	28					
ANR	1061879	Condition	jump	434:8:12626:12629	1061483	0	True				
ANR	1061880	Identifier	jump		1061483	0					
ANR	1061881	CompoundStatement		75:14:1955:1955	1061483	1					
ANR	1061882	DoStatement	do		1061483	0					
ANR	1061883	CompoundStatement		76:5:1962:1962	1061483	0					
ANR	1061884	ExpressionStatement	addr = ( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target	436:3:12644:12716	1061483	0	True				
ANR	1061885	AssignmentExpression	addr = ( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target		1061483	0		=			
ANR	1061886	Identifier	addr		1061483	0					
ANR	1061887	ConditionalExpression	( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target		1061483	1					
ANR	1061888	Condition	jump -> flags & JUMP_LABEL		1061483	0					
ANR	1061889	BitAndExpression	jump -> flags & JUMP_LABEL		1061483	0		&			
ANR	1061890	PtrMemberAccess	jump -> flags		1061483	0					
ANR	1061891	Identifier	jump		1061483	0					
ANR	1061892	Identifier	flags		1061483	1					
ANR	1061893	Identifier	JUMP_LABEL		1061483	1					
ANR	1061894	PtrMemberAccess	jump -> u . label -> addr		1061483	1					
ANR	1061895	MemberAccess	jump -> u . label		1061483	0					
ANR	1061896	PtrMemberAccess	jump -> u		1061483	0					
ANR	1061897	Identifier	jump		1061483	0					
ANR	1061898	Identifier	u		1061483	1					
ANR	1061899	Identifier	label		1061483	1					
ANR	1061900	Identifier	addr		1061483	1					
ANR	1061901	MemberAccess	jump -> u . target		1061483	2					
ANR	1061902	PtrMemberAccess	jump -> u		1061483	0					
ANR	1061903	Identifier	jump		1061483	0					
ANR	1061904	Identifier	u		1061483	1					
ANR	1061905	Identifier	target		1061483	1					
ANR	1061906	ExpressionStatement	buf_ptr = ( sljit_ins * ) jump -> addr	437:3:12721:12753	1061483	1	True				
ANR	1061907	AssignmentExpression	buf_ptr = ( sljit_ins * ) jump -> addr		1061483	0		=			
ANR	1061908	Identifier	buf_ptr		1061483	0					
ANR	1061909	CastExpression	( sljit_ins * ) jump -> addr		1061483	1					
ANR	1061910	CastTarget	sljit_ins *		1061483	0					
ANR	1061911	PtrMemberAccess	jump -> addr		1061483	1					
ANR	1061912	Identifier	jump		1061483	0					
ANR	1061913	Identifier	addr		1061483	1					
ANR	1061914	IfStatement	if ( jump -> flags & PATCH_B )		1061483	2					
ANR	1061915	Condition	jump -> flags & PATCH_B	439:7:12763:12783	1061483	0	True				
ANR	1061916	BitAndExpression	jump -> flags & PATCH_B		1061483	0		&			
ANR	1061917	PtrMemberAccess	jump -> flags		1061483	0					
ANR	1061918	Identifier	jump		1061483	0					
ANR	1061919	Identifier	flags		1061483	1					
ANR	1061920	Identifier	PATCH_B		1061483	1					
ANR	1061921	CompoundStatement		80:30:2109:2109	1061483	1					
ANR	1061922	ExpressionStatement	addr = ( sljit_sw ) ( addr - ( jump -> addr + sizeof ( sljit_ins ) ) ) >> 2	440:4:12792:12855	1061483	0	True				
ANR	1061923	AssignmentExpression	addr = ( sljit_sw ) ( addr - ( jump -> addr + sizeof ( sljit_ins ) ) ) >> 2		1061483	0		=			
ANR	1061924	Identifier	addr		1061483	0					
ANR	1061925	ShiftExpression	( sljit_sw ) ( addr - ( jump -> addr + sizeof ( sljit_ins ) ) ) >> 2		1061483	1		>>			
ANR	1061926	CastExpression	( sljit_sw ) ( addr - ( jump -> addr + sizeof ( sljit_ins ) ) )		1061483	0					
ANR	1061927	CastTarget	sljit_sw		1061483	0					
ANR	1061928	AdditiveExpression	addr - ( jump -> addr + sizeof ( sljit_ins ) )		1061483	1		-			
ANR	1061929	Identifier	addr		1061483	0					
ANR	1061930	AdditiveExpression	jump -> addr + sizeof ( sljit_ins )		1061483	1		+			
ANR	1061931	PtrMemberAccess	jump -> addr		1061483	0					
ANR	1061932	Identifier	jump		1061483	0					
ANR	1061933	Identifier	addr		1061483	1					
ANR	1061934	SizeofExpression	sizeof ( sljit_ins )		1061483	1					
ANR	1061935	Sizeof	sizeof		1061483	0					
ANR	1061936	SizeofOperand	sljit_ins		1061483	1					
ANR	1061937	PrimaryExpression	2		1061483	1					
ANR	1061938	ExpressionStatement	SLJIT_ASSERT ( ( sljit_sw ) addr <= SIMM_MAX && ( sljit_sw ) addr >= SIMM_MIN )	441:4:12861:12931	1061483	1	True				
ANR	1061939	CallExpression	SLJIT_ASSERT ( ( sljit_sw ) addr <= SIMM_MAX && ( sljit_sw ) addr >= SIMM_MIN )		1061483	0					
ANR	1061940	Callee	SLJIT_ASSERT		1061483	0					
ANR	1061941	Identifier	SLJIT_ASSERT		1061483	0					
ANR	1061942	ArgumentList	( sljit_sw ) addr <= SIMM_MAX && ( sljit_sw ) addr >= SIMM_MIN		1061483	1					
ANR	1061943	Argument	( sljit_sw ) addr <= SIMM_MAX && ( sljit_sw ) addr >= SIMM_MIN		1061483	0					
ANR	1061944	AndExpression	( sljit_sw ) addr <= SIMM_MAX && ( sljit_sw ) addr >= SIMM_MIN		1061483	0		&&			
ANR	1061945	RelationalExpression	( sljit_sw ) addr <= SIMM_MAX		1061483	0		<=			
ANR	1061946	CastExpression	( sljit_sw ) addr		1061483	0					
ANR	1061947	CastTarget	sljit_sw		1061483	0					
ANR	1061948	Identifier	addr		1061483	1					
ANR	1061949	Identifier	SIMM_MAX		1061483	1					
ANR	1061950	RelationalExpression	( sljit_sw ) addr >= SIMM_MIN		1061483	1		>=			
ANR	1061951	CastExpression	( sljit_sw ) addr		1061483	0					
ANR	1061952	CastTarget	sljit_sw		1061483	0					
ANR	1061953	Identifier	addr		1061483	1					
ANR	1061954	Identifier	SIMM_MIN		1061483	1					
ANR	1061955	ExpressionStatement	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & 0xffff0000 ) | ( addr & 0xffff )	442:4:12937:12993	1061483	2	True				
ANR	1061956	AssignmentExpression	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & 0xffff0000 ) | ( addr & 0xffff )		1061483	0		=			
ANR	1061957	ArrayIndexing	buf_ptr [ 0 ]		1061483	0					
ANR	1061958	Identifier	buf_ptr		1061483	0					
ANR	1061959	PrimaryExpression	0		1061483	1					
ANR	1061960	InclusiveOrExpression	( buf_ptr [ 0 ] & 0xffff0000 ) | ( addr & 0xffff )		1061483	1		|			
ANR	1061961	BitAndExpression	buf_ptr [ 0 ] & 0xffff0000		1061483	0		&			
ANR	1061962	ArrayIndexing	buf_ptr [ 0 ]		1061483	0					
ANR	1061963	Identifier	buf_ptr		1061483	0					
ANR	1061964	PrimaryExpression	0		1061483	1					
ANR	1061965	PrimaryExpression	0xffff0000		1061483	1					
ANR	1061966	BitAndExpression	addr & 0xffff		1061483	1		&			
ANR	1061967	Identifier	addr		1061483	0					
ANR	1061968	PrimaryExpression	0xffff		1061483	1					
ANR	1061969	BreakStatement	break ;	443:4:12999:13004	1061483	3	True				
ANR	1061970	IfStatement	if ( jump -> flags & PATCH_J )		1061483	3					
ANR	1061971	Condition	jump -> flags & PATCH_J	445:7:13018:13038	1061483	0	True				
ANR	1061972	BitAndExpression	jump -> flags & PATCH_J		1061483	0		&			
ANR	1061973	PtrMemberAccess	jump -> flags		1061483	0					
ANR	1061974	Identifier	jump		1061483	0					
ANR	1061975	Identifier	flags		1061483	1					
ANR	1061976	Identifier	PATCH_J		1061483	1					
ANR	1061977	CompoundStatement		86:30:2364:2364	1061483	1					
ANR	1061978	ExpressionStatement	SLJIT_ASSERT ( ( addr & ~0xfffffff ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0xfffffff ) )	446:4:13047:13131	1061483	0	True				
ANR	1061979	CallExpression	SLJIT_ASSERT ( ( addr & ~0xfffffff ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0xfffffff ) )		1061483	0					
ANR	1061980	Callee	SLJIT_ASSERT		1061483	0					
ANR	1061981	Identifier	SLJIT_ASSERT		1061483	0					
ANR	1061982	ArgumentList	( addr & ~0xfffffff ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0xfffffff )		1061483	1					
ANR	1061983	Argument	( addr & ~0xfffffff ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0xfffffff )		1061483	0					
ANR	1061984	EqualityExpression	( addr & ~0xfffffff ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0xfffffff )		1061483	0		==			
ANR	1061985	BitAndExpression	addr & ~0xfffffff		1061483	0		&			
ANR	1061986	Identifier	addr		1061483	0					
ANR	1061987	Identifier	~0xfffffff		1061483	1					
ANR	1061988	BitAndExpression	( jump -> addr + sizeof ( sljit_ins ) ) & ~0xfffffff		1061483	1		&			
ANR	1061989	AdditiveExpression	jump -> addr + sizeof ( sljit_ins )		1061483	0		+			
ANR	1061990	PtrMemberAccess	jump -> addr		1061483	0					
ANR	1061991	Identifier	jump		1061483	0					
ANR	1061992	Identifier	addr		1061483	1					
ANR	1061993	SizeofExpression	sizeof ( sljit_ins )		1061483	1					
ANR	1061994	Sizeof	sizeof		1061483	0					
ANR	1061995	SizeofOperand	sljit_ins		1061483	1					
ANR	1061996	Identifier	~0xfffffff		1061483	1					
ANR	1061997	ExpressionStatement	buf_ptr [ 0 ] |= ( addr >> 2 ) & 0x03ffffff	447:4:13137:13175	1061483	1	True				
ANR	1061998	AssignmentExpression	buf_ptr [ 0 ] |= ( addr >> 2 ) & 0x03ffffff		1061483	0		|=			
ANR	1061999	ArrayIndexing	buf_ptr [ 0 ]		1061483	0					
ANR	1062000	Identifier	buf_ptr		1061483	0					
ANR	1062001	PrimaryExpression	0		1061483	1					
ANR	1062002	BitAndExpression	( addr >> 2 ) & 0x03ffffff		1061483	1		&			
ANR	1062003	ShiftExpression	addr >> 2		1061483	0		>>			
ANR	1062004	Identifier	addr		1061483	0					
ANR	1062005	PrimaryExpression	2		1061483	1					
ANR	1062006	PrimaryExpression	0x03ffffff		1061483	1					
ANR	1062007	BreakStatement	break ;	448:4:13181:13186	1061483	2	True				
ANR	1062008	ExpressionStatement	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & 0xffff0000 ) | ( ( addr >> 16 ) & 0xffff )	453:3:13300:13364	1061483	4	True				
ANR	1062009	AssignmentExpression	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & 0xffff0000 ) | ( ( addr >> 16 ) & 0xffff )		1061483	0		=			
ANR	1062010	ArrayIndexing	buf_ptr [ 0 ]		1061483	0					
ANR	1062011	Identifier	buf_ptr		1061483	0					
ANR	1062012	PrimaryExpression	0		1061483	1					
ANR	1062013	InclusiveOrExpression	( buf_ptr [ 0 ] & 0xffff0000 ) | ( ( addr >> 16 ) & 0xffff )		1061483	1		|			
ANR	1062014	BitAndExpression	buf_ptr [ 0 ] & 0xffff0000		1061483	0		&			
ANR	1062015	ArrayIndexing	buf_ptr [ 0 ]		1061483	0					
ANR	1062016	Identifier	buf_ptr		1061483	0					
ANR	1062017	PrimaryExpression	0		1061483	1					
ANR	1062018	PrimaryExpression	0xffff0000		1061483	1					
ANR	1062019	BitAndExpression	( addr >> 16 ) & 0xffff		1061483	1		&			
ANR	1062020	ShiftExpression	addr >> 16		1061483	0		>>			
ANR	1062021	Identifier	addr		1061483	0					
ANR	1062022	PrimaryExpression	16		1061483	1					
ANR	1062023	PrimaryExpression	0xffff		1061483	1					
ANR	1062024	ExpressionStatement	buf_ptr [ 1 ] = ( buf_ptr [ 1 ] & 0xffff0000 ) | ( addr & 0xffff )	454:3:13369:13425	1061483	5	True				
ANR	1062025	AssignmentExpression	buf_ptr [ 1 ] = ( buf_ptr [ 1 ] & 0xffff0000 ) | ( addr & 0xffff )		1061483	0		=			
ANR	1062026	ArrayIndexing	buf_ptr [ 1 ]		1061483	0					
ANR	1062027	Identifier	buf_ptr		1061483	0					
ANR	1062028	PrimaryExpression	1		1061483	1					
ANR	1062029	InclusiveOrExpression	( buf_ptr [ 1 ] & 0xffff0000 ) | ( addr & 0xffff )		1061483	1		|			
ANR	1062030	BitAndExpression	buf_ptr [ 1 ] & 0xffff0000		1061483	0		&			
ANR	1062031	ArrayIndexing	buf_ptr [ 1 ]		1061483	0					
ANR	1062032	Identifier	buf_ptr		1061483	0					
ANR	1062033	PrimaryExpression	1		1061483	1					
ANR	1062034	PrimaryExpression	0xffff0000		1061483	1					
ANR	1062035	BitAndExpression	addr & 0xffff		1061483	1		&			
ANR	1062036	Identifier	addr		1061483	0					
ANR	1062037	PrimaryExpression	0xffff		1061483	1					
ANR	1062038	Condition	0	474:11:14240:14240	1061483	1	True				
ANR	1062039	PrimaryExpression	0		1061483	0					
ANR	1062040	ExpressionStatement	jump = jump -> next	475:2:14246:14263	1061483	1	True				
ANR	1062041	AssignmentExpression	jump = jump -> next		1061483	0		=			
ANR	1062042	Identifier	jump		1061483	0					
ANR	1062043	PtrMemberAccess	jump -> next		1061483	1					
ANR	1062044	Identifier	jump		1061483	0					
ANR	1062045	Identifier	next		1061483	1					
ANR	1062046	ExpressionStatement	compiler -> error = SLJIT_ERR_COMPILED	478:1:14270:14306	1061483	29	True				
ANR	1062047	AssignmentExpression	compiler -> error = SLJIT_ERR_COMPILED		1061483	0		=			
ANR	1062048	PtrMemberAccess	compiler -> error		1061483	0					
ANR	1062049	Identifier	compiler		1061483	0					
ANR	1062050	Identifier	error		1061483	1					
ANR	1062051	Identifier	SLJIT_ERR_COMPILED		1061483	1					
ANR	1062052	ExpressionStatement	compiler -> executable_size = ( code_ptr - code ) * sizeof ( sljit_ins )	479:1:14309:14374	1061483	30	True				
ANR	1062053	AssignmentExpression	compiler -> executable_size = ( code_ptr - code ) * sizeof ( sljit_ins )		1061483	0		=			
ANR	1062054	PtrMemberAccess	compiler -> executable_size		1061483	0					
ANR	1062055	Identifier	compiler		1061483	0					
ANR	1062056	Identifier	executable_size		1061483	1					
ANR	1062057	MultiplicativeExpression	( code_ptr - code ) * sizeof ( sljit_ins )		1061483	1		*			
ANR	1062058	AdditiveExpression	code_ptr - code		1061483	0		-			
ANR	1062059	Identifier	code_ptr		1061483	0					
ANR	1062060	Identifier	code		1061483	1					
ANR	1062061	SizeofExpression	sizeof ( sljit_ins )		1061483	1					
ANR	1062062	Sizeof	sizeof		1061483	0					
ANR	1062063	SizeofOperand	sljit_ins		1061483	1					
ANR	1062064	ExpressionStatement	"SLJIT_CACHE_FLUSH ( code , code_ptr )"	481:1:14394:14427	1061483	31	True				
ANR	1062065	CallExpression	"SLJIT_CACHE_FLUSH ( code , code_ptr )"		1061483	0					
ANR	1062066	Callee	SLJIT_CACHE_FLUSH		1061483	0					
ANR	1062067	Identifier	SLJIT_CACHE_FLUSH		1061483	0					
ANR	1062068	ArgumentList	code		1061483	1					
ANR	1062069	Argument	code		1061483	0					
ANR	1062070	Identifier	code		1061483	0					
ANR	1062071	Argument	code_ptr		1061483	1					
ANR	1062072	Identifier	code_ptr		1061483	0					
ANR	1062073	ReturnStatement	return code ;	486:1:14539:14550	1061483	32	True				
ANR	1062074	Identifier	code		1061483	0					
ANR	1062075	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void *		1061483	1					
ANR	1062076	Identifier	sljit_generate_code		1061483	2					
ANR	1062077	ParameterList	struct sljit_compiler * compiler		1061483	3					
ANR	1062078	Parameter	struct sljit_compiler * compiler	359:51:10643:10673	1061483	0	True				
ANR	1062079	ParameterType	struct sljit_compiler *		1061483	0					
ANR	1062080	Identifier	compiler		1061483	1					
ANR	1062081	CFGEntryNode	ENTRY		1061483		True				
ANR	1062082	CFGExitNode	EXIT		1061483		True				
ANR	1062083	Symbol	label -> addr		1061483						
ANR	1062084	Symbol	compiler -> buf		1061483						
ANR	1062085	Symbol	SLJIT_MALLOC_EXEC		1061483						
ANR	1062086	Symbol	JUMP_LABEL		1061483						
ANR	1062087	Symbol	label -> next		1061483						
ANR	1062088	Symbol	* compiler		1061483						
ANR	1062089	Symbol	SIMM_MAX		1061483						
ANR	1062090	Symbol	const_ -> next		1061483						
ANR	1062091	Symbol	const_ -> addr		1061483						
ANR	1062092	Symbol	buf -> next		1061483						
ANR	1062093	Symbol	buf_end		1061483						
ANR	1062094	Symbol	SIMM_MIN		1061483						
ANR	1062095	Symbol	compiler -> executable_size		1061483						
ANR	1062096	Symbol	jump		1061483						
ANR	1062097	Symbol	buf -> used_size		1061483						
ANR	1062098	Symbol	check_sljit_generate_code		1061483						
ANR	1062099	Symbol	* buf		1061483						
ANR	1062100	Symbol	compiler -> labels		1061483						
ANR	1062101	Symbol	buf -> memory		1061483						
ANR	1062102	Symbol	detect_jump_type		1061483						
ANR	1062103	Symbol	* buf_ptr ++		1061483						
ANR	1062104	Symbol	jump -> addr		1061483						
ANR	1062105	Symbol	buf_ptr		1061483						
ANR	1062106	Symbol	* code_ptr		1061483						
ANR	1062107	Symbol	* jump -> u . label		1061483						
ANR	1062108	Symbol	jump -> u . target		1061483						
ANR	1062109	Symbol	compiler -> jumps		1061483						
ANR	1062110	Symbol	label -> size		1061483						
ANR	1062111	Symbol	jump -> next		1061483						
ANR	1062112	Symbol	~0xfffffff		1061483						
ANR	1062113	Symbol	code		1061483						
ANR	1062114	Symbol	* * jump		1061483						
ANR	1062115	Symbol	* jump		1061483						
ANR	1062116	Symbol	jump -> u		1061483						
ANR	1062117	Symbol	jump -> flags		1061483						
ANR	1062118	Symbol	word_count		1061483						
ANR	1062119	Symbol	code_ptr		1061483						
ANR	1062120	Symbol	compiler		1061483						
ANR	1062121	Symbol	addr		1061483						
ANR	1062122	Symbol	* buf_ptr		1061483						
ANR	1062123	Symbol	const_		1061483						
ANR	1062124	Symbol	compiler -> consts		1061483						
ANR	1062125	Symbol	* const_		1061483						
ANR	1062126	Symbol	label		1061483						
ANR	1062127	Symbol	PATCH_J		1061483						
ANR	1062128	Symbol	buf		1061483						
ANR	1062129	Symbol	compiler -> size		1061483						
ANR	1062130	Symbol	* jump -> u		1061483						
ANR	1062131	Symbol	PATCH_B		1061483						
ANR	1062132	Symbol	jump -> u . label -> addr		1061483						
ANR	1062133	Symbol	jump -> u . label		1061483						
ANR	1062134	Symbol	SLJIT_ERR_COMPILED		1061483						
ANR	1062135	Symbol	compiler -> error		1061483						
ANR	1062136	Symbol	* label		1061483						
ANR	1062137	Function	sljit_emit_enter	541:0:15971:18130							
ANR	1062138	FunctionDef	"sljit_emit_enter (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1062137	0					
ANR	1062139	CompoundStatement		544:0:16187:18130	1062137	0					
ANR	1062140	IdentifierDeclStatement	sljit_ins base ;	545:1:16190:16204	1062137	0	True				
ANR	1062141	IdentifierDecl	base		1062137	0					
ANR	1062142	IdentifierDeclType	sljit_ins		1062137	0					
ANR	1062143	Identifier	base		1062137	1					
ANR	1062144	IdentifierDeclStatement	"sljit_si i , tmp , offs ;"	546:1:16207:16228	1062137	1	True				
ANR	1062145	IdentifierDecl	i		1062137	0					
ANR	1062146	IdentifierDeclType	sljit_si		1062137	0					
ANR	1062147	Identifier	i		1062137	1					
ANR	1062148	IdentifierDecl	tmp		1062137	1					
ANR	1062149	IdentifierDeclType	sljit_si		1062137	0					
ANR	1062150	Identifier	tmp		1062137	1					
ANR	1062151	IdentifierDecl	offs		1062137	2					
ANR	1062152	IdentifierDeclType	sljit_si		1062137	0					
ANR	1062153	Identifier	offs		1062137	1					
ANR	1062154	ExpressionStatement	CHECK_ERROR ( )	548:1:16232:16245	1062137	2	True				
ANR	1062155	CallExpression	CHECK_ERROR ( )		1062137	0					
ANR	1062156	Callee	CHECK_ERROR		1062137	0					
ANR	1062157	Identifier	CHECK_ERROR		1062137	0					
ANR	1062158	ArgumentList			1062137	1					
ANR	1062159	ExpressionStatement	"CHECK ( check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"	549:1:16248:16354	1062137	3	True				
ANR	1062160	CallExpression	"CHECK ( check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"		1062137	0					
ANR	1062161	Callee	CHECK		1062137	0					
ANR	1062162	Identifier	CHECK		1062137	0					
ANR	1062163	ArgumentList	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1062137	1					
ANR	1062164	Argument	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1062137	0					
ANR	1062165	CallExpression	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1062137	0					
ANR	1062166	Callee	check_sljit_emit_enter		1062137	0					
ANR	1062167	Identifier	check_sljit_emit_enter		1062137	0					
ANR	1062168	ArgumentList	compiler		1062137	1					
ANR	1062169	Argument	compiler		1062137	0					
ANR	1062170	Identifier	compiler		1062137	0					
ANR	1062171	Argument	options		1062137	1					
ANR	1062172	Identifier	options		1062137	0					
ANR	1062173	Argument	args		1062137	2					
ANR	1062174	Identifier	args		1062137	0					
ANR	1062175	Argument	scratches		1062137	3					
ANR	1062176	Identifier	scratches		1062137	0					
ANR	1062177	Argument	saveds		1062137	4					
ANR	1062178	Identifier	saveds		1062137	0					
ANR	1062179	Argument	fscratches		1062137	5					
ANR	1062180	Identifier	fscratches		1062137	0					
ANR	1062181	Argument	fsaveds		1062137	6					
ANR	1062182	Identifier	fsaveds		1062137	0					
ANR	1062183	Argument	local_size		1062137	7					
ANR	1062184	Identifier	local_size		1062137	0					
ANR	1062185	ExpressionStatement	"set_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"	550:1:16357:16448	1062137	4	True				
ANR	1062186	CallExpression	"set_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1062137	0					
ANR	1062187	Callee	set_emit_enter		1062137	0					
ANR	1062188	Identifier	set_emit_enter		1062137	0					
ANR	1062189	ArgumentList	compiler		1062137	1					
ANR	1062190	Argument	compiler		1062137	0					
ANR	1062191	Identifier	compiler		1062137	0					
ANR	1062192	Argument	options		1062137	1					
ANR	1062193	Identifier	options		1062137	0					
ANR	1062194	Argument	args		1062137	2					
ANR	1062195	Identifier	args		1062137	0					
ANR	1062196	Argument	scratches		1062137	3					
ANR	1062197	Identifier	scratches		1062137	0					
ANR	1062198	Argument	saveds		1062137	4					
ANR	1062199	Identifier	saveds		1062137	0					
ANR	1062200	Argument	fscratches		1062137	5					
ANR	1062201	Identifier	fscratches		1062137	0					
ANR	1062202	Argument	fsaveds		1062137	6					
ANR	1062203	Identifier	fsaveds		1062137	0					
ANR	1062204	Argument	local_size		1062137	7					
ANR	1062205	Identifier	local_size		1062137	0					
ANR	1062206	ExpressionStatement	"local_size += GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 ) + SLJIT_LOCALS_OFFSET"	552:1:16452:16534	1062137	5	True				
ANR	1062207	AssignmentExpression	"local_size += GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 ) + SLJIT_LOCALS_OFFSET"		1062137	0		+=			
ANR	1062208	Identifier	local_size		1062137	0					
ANR	1062209	AdditiveExpression	"GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 ) + SLJIT_LOCALS_OFFSET"		1062137	1		+			
ANR	1062210	CallExpression	"GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 )"		1062137	0					
ANR	1062211	Callee	GET_SAVED_REGISTERS_SIZE		1062137	0					
ANR	1062212	Identifier	GET_SAVED_REGISTERS_SIZE		1062137	0					
ANR	1062213	ArgumentList	scratches		1062137	1					
ANR	1062214	Argument	scratches		1062137	0					
ANR	1062215	Identifier	scratches		1062137	0					
ANR	1062216	Argument	saveds		1062137	1					
ANR	1062217	Identifier	saveds		1062137	0					
ANR	1062218	Argument	1		1062137	2					
ANR	1062219	PrimaryExpression	1		1062137	0					
ANR	1062220	Identifier	SLJIT_LOCALS_OFFSET		1062137	1					
ANR	1062221	ExpressionStatement	local_size = ( local_size + 15 ) & ~0xf	554:1:16596:16633	1062137	6	True				
ANR	1062222	AssignmentExpression	local_size = ( local_size + 15 ) & ~0xf		1062137	0		=			
ANR	1062223	Identifier	local_size		1062137	0					
ANR	1062224	BitAndExpression	( local_size + 15 ) & ~0xf		1062137	1		&			
ANR	1062225	AdditiveExpression	local_size + 15		1062137	0		+			
ANR	1062226	Identifier	local_size		1062137	0					
ANR	1062227	PrimaryExpression	15		1062137	1					
ANR	1062228	Identifier	~0xf		1062137	1					
ANR	1062229	ExpressionStatement	compiler -> local_size = local_size	558:1:16690:16723	1062137	7	True				
ANR	1062230	AssignmentExpression	compiler -> local_size = local_size		1062137	0		=			
ANR	1062231	PtrMemberAccess	compiler -> local_size		1062137	0					
ANR	1062232	Identifier	compiler		1062137	0					
ANR	1062233	Identifier	local_size		1062137	1					
ANR	1062234	Identifier	local_size		1062137	1					
ANR	1062235	IfStatement	if ( local_size <= SIMM_MAX )		1062137	8					
ANR	1062236	Condition	local_size <= SIMM_MAX	560:5:16731:16752	1062137	0	True				
ANR	1062237	RelationalExpression	local_size <= SIMM_MAX		1062137	0		<=			
ANR	1062238	Identifier	local_size		1062137	0					
ANR	1062239	Identifier	SIMM_MAX		1062137	1					
ANR	1062240	CompoundStatement		17:29:567:567	1062137	1					
ANR	1062241	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDIU_W | S ( SLJIT_SP ) | T ( SLJIT_SP ) | IMM ( - local_size ) , DR ( SLJIT_SP ) ) )"	562:2:16782:16880	1062137	0	True				
ANR	1062242	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDIU_W | S ( SLJIT_SP ) | T ( SLJIT_SP ) | IMM ( - local_size ) , DR ( SLJIT_SP ) ) )"		1062137	0					
ANR	1062243	Callee	FAIL_IF		1062137	0					
ANR	1062244	Identifier	FAIL_IF		1062137	0					
ANR	1062245	ArgumentList	"push_inst ( compiler , ADDIU_W | S ( SLJIT_SP ) | T ( SLJIT_SP ) | IMM ( - local_size ) , DR ( SLJIT_SP ) )"		1062137	1					
ANR	1062246	Argument	"push_inst ( compiler , ADDIU_W | S ( SLJIT_SP ) | T ( SLJIT_SP ) | IMM ( - local_size ) , DR ( SLJIT_SP ) )"		1062137	0					
ANR	1062247	CallExpression	"push_inst ( compiler , ADDIU_W | S ( SLJIT_SP ) | T ( SLJIT_SP ) | IMM ( - local_size ) , DR ( SLJIT_SP ) )"		1062137	0					
ANR	1062248	Callee	push_inst		1062137	0					
ANR	1062249	Identifier	push_inst		1062137	0					
ANR	1062250	ArgumentList	compiler		1062137	1					
ANR	1062251	Argument	compiler		1062137	0					
ANR	1062252	Identifier	compiler		1062137	0					
ANR	1062253	Argument	ADDIU_W | S ( SLJIT_SP ) | T ( SLJIT_SP ) | IMM ( - local_size )		1062137	1					
ANR	1062254	InclusiveOrExpression	ADDIU_W | S ( SLJIT_SP ) | T ( SLJIT_SP ) | IMM ( - local_size )		1062137	0		|			
ANR	1062255	Identifier	ADDIU_W		1062137	0					
ANR	1062256	InclusiveOrExpression	S ( SLJIT_SP ) | T ( SLJIT_SP ) | IMM ( - local_size )		1062137	1		|			
ANR	1062257	CallExpression	S ( SLJIT_SP )		1062137	0					
ANR	1062258	Callee	S		1062137	0					
ANR	1062259	Identifier	S		1062137	0					
ANR	1062260	ArgumentList	SLJIT_SP		1062137	1					
ANR	1062261	Argument	SLJIT_SP		1062137	0					
ANR	1062262	Identifier	SLJIT_SP		1062137	0					
ANR	1062263	InclusiveOrExpression	T ( SLJIT_SP ) | IMM ( - local_size )		1062137	1		|			
ANR	1062264	CallExpression	T ( SLJIT_SP )		1062137	0					
ANR	1062265	Callee	T		1062137	0					
ANR	1062266	Identifier	T		1062137	0					
ANR	1062267	ArgumentList	SLJIT_SP		1062137	1					
ANR	1062268	Argument	SLJIT_SP		1062137	0					
ANR	1062269	Identifier	SLJIT_SP		1062137	0					
ANR	1062270	CallExpression	IMM ( - local_size )		1062137	1					
ANR	1062271	Callee	IMM		1062137	0					
ANR	1062272	Identifier	IMM		1062137	0					
ANR	1062273	ArgumentList	- local_size		1062137	1					
ANR	1062274	Argument	- local_size		1062137	0					
ANR	1062275	UnaryOperationExpression	- local_size		1062137	0					
ANR	1062276	UnaryOperator	-		1062137	0					
ANR	1062277	Identifier	local_size		1062137	1					
ANR	1062278	Argument	DR ( SLJIT_SP )		1062137	2					
ANR	1062279	CallExpression	DR ( SLJIT_SP )		1062137	0					
ANR	1062280	Callee	DR		1062137	0					
ANR	1062281	Identifier	DR		1062137	0					
ANR	1062282	ArgumentList	SLJIT_SP		1062137	1					
ANR	1062283	Argument	SLJIT_SP		1062137	0					
ANR	1062284	Identifier	SLJIT_SP		1062137	0					
ANR	1062285	ExpressionStatement	base = S ( SLJIT_SP )	563:2:16884:16902	1062137	1	True				
ANR	1062286	AssignmentExpression	base = S ( SLJIT_SP )		1062137	0		=			
ANR	1062287	Identifier	base		1062137	0					
ANR	1062288	CallExpression	S ( SLJIT_SP )		1062137	1					
ANR	1062289	Callee	S		1062137	0					
ANR	1062290	Identifier	S		1062137	0					
ANR	1062291	ArgumentList	SLJIT_SP		1062137	1					
ANR	1062292	Argument	SLJIT_SP		1062137	0					
ANR	1062293	Identifier	SLJIT_SP		1062137	0					
ANR	1062294	ElseStatement	else		1062137	0					
ANR	1062295	CompoundStatement		22:6:725:725	1062137	0					
ANR	1062296	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , DR ( TMP_REG1 ) , local_size ) )"	566:2:16917:16976	1062137	0	True				
ANR	1062297	CallExpression	"FAIL_IF ( load_immediate ( compiler , DR ( TMP_REG1 ) , local_size ) )"		1062137	0					
ANR	1062298	Callee	FAIL_IF		1062137	0					
ANR	1062299	Identifier	FAIL_IF		1062137	0					
ANR	1062300	ArgumentList	"load_immediate ( compiler , DR ( TMP_REG1 ) , local_size )"		1062137	1					
ANR	1062301	Argument	"load_immediate ( compiler , DR ( TMP_REG1 ) , local_size )"		1062137	0					
ANR	1062302	CallExpression	"load_immediate ( compiler , DR ( TMP_REG1 ) , local_size )"		1062137	0					
ANR	1062303	Callee	load_immediate		1062137	0					
ANR	1062304	Identifier	load_immediate		1062137	0					
ANR	1062305	ArgumentList	compiler		1062137	1					
ANR	1062306	Argument	compiler		1062137	0					
ANR	1062307	Identifier	compiler		1062137	0					
ANR	1062308	Argument	DR ( TMP_REG1 )		1062137	1					
ANR	1062309	CallExpression	DR ( TMP_REG1 )		1062137	0					
ANR	1062310	Callee	DR		1062137	0					
ANR	1062311	Identifier	DR		1062137	0					
ANR	1062312	ArgumentList	TMP_REG1		1062137	1					
ANR	1062313	Argument	TMP_REG1		1062137	0					
ANR	1062314	Identifier	TMP_REG1		1062137	0					
ANR	1062315	Argument	local_size		1062137	2					
ANR	1062316	Identifier	local_size		1062137	0					
ANR	1062317	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( SLJIT_SP ) | TA ( 0 ) | D ( TMP_REG2 ) , DR ( TMP_REG2 ) ) )"	567:2:16980:17066	1062137	1	True				
ANR	1062318	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( SLJIT_SP ) | TA ( 0 ) | D ( TMP_REG2 ) , DR ( TMP_REG2 ) ) )"		1062137	0					
ANR	1062319	Callee	FAIL_IF		1062137	0					
ANR	1062320	Identifier	FAIL_IF		1062137	0					
ANR	1062321	ArgumentList	"push_inst ( compiler , ADDU_W | S ( SLJIT_SP ) | TA ( 0 ) | D ( TMP_REG2 ) , DR ( TMP_REG2 ) )"		1062137	1					
ANR	1062322	Argument	"push_inst ( compiler , ADDU_W | S ( SLJIT_SP ) | TA ( 0 ) | D ( TMP_REG2 ) , DR ( TMP_REG2 ) )"		1062137	0					
ANR	1062323	CallExpression	"push_inst ( compiler , ADDU_W | S ( SLJIT_SP ) | TA ( 0 ) | D ( TMP_REG2 ) , DR ( TMP_REG2 ) )"		1062137	0					
ANR	1062324	Callee	push_inst		1062137	0					
ANR	1062325	Identifier	push_inst		1062137	0					
ANR	1062326	ArgumentList	compiler		1062137	1					
ANR	1062327	Argument	compiler		1062137	0					
ANR	1062328	Identifier	compiler		1062137	0					
ANR	1062329	Argument	ADDU_W | S ( SLJIT_SP ) | TA ( 0 ) | D ( TMP_REG2 )		1062137	1					
ANR	1062330	InclusiveOrExpression	ADDU_W | S ( SLJIT_SP ) | TA ( 0 ) | D ( TMP_REG2 )		1062137	0		|			
ANR	1062331	Identifier	ADDU_W		1062137	0					
ANR	1062332	InclusiveOrExpression	S ( SLJIT_SP ) | TA ( 0 ) | D ( TMP_REG2 )		1062137	1		|			
ANR	1062333	CallExpression	S ( SLJIT_SP )		1062137	0					
ANR	1062334	Callee	S		1062137	0					
ANR	1062335	Identifier	S		1062137	0					
ANR	1062336	ArgumentList	SLJIT_SP		1062137	1					
ANR	1062337	Argument	SLJIT_SP		1062137	0					
ANR	1062338	Identifier	SLJIT_SP		1062137	0					
ANR	1062339	InclusiveOrExpression	TA ( 0 ) | D ( TMP_REG2 )		1062137	1		|			
ANR	1062340	CallExpression	TA ( 0 )		1062137	0					
ANR	1062341	Callee	TA		1062137	0					
ANR	1062342	Identifier	TA		1062137	0					
ANR	1062343	ArgumentList	0		1062137	1					
ANR	1062344	Argument	0		1062137	0					
ANR	1062345	PrimaryExpression	0		1062137	0					
ANR	1062346	CallExpression	D ( TMP_REG2 )		1062137	1					
ANR	1062347	Callee	D		1062137	0					
ANR	1062348	Identifier	D		1062137	0					
ANR	1062349	ArgumentList	TMP_REG2		1062137	1					
ANR	1062350	Argument	TMP_REG2		1062137	0					
ANR	1062351	Identifier	TMP_REG2		1062137	0					
ANR	1062352	Argument	DR ( TMP_REG2 )		1062137	2					
ANR	1062353	CallExpression	DR ( TMP_REG2 )		1062137	0					
ANR	1062354	Callee	DR		1062137	0					
ANR	1062355	Identifier	DR		1062137	0					
ANR	1062356	ArgumentList	TMP_REG2		1062137	1					
ANR	1062357	Argument	TMP_REG2		1062137	0					
ANR	1062358	Identifier	TMP_REG2		1062137	0					
ANR	1062359	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SUBU_W | S ( SLJIT_SP ) | T ( TMP_REG1 ) | D ( SLJIT_SP ) , DR ( SLJIT_SP ) ) )"	568:2:17070:17162	1062137	2	True				
ANR	1062360	CallExpression	"FAIL_IF ( push_inst ( compiler , SUBU_W | S ( SLJIT_SP ) | T ( TMP_REG1 ) | D ( SLJIT_SP ) , DR ( SLJIT_SP ) ) )"		1062137	0					
ANR	1062361	Callee	FAIL_IF		1062137	0					
ANR	1062362	Identifier	FAIL_IF		1062137	0					
ANR	1062363	ArgumentList	"push_inst ( compiler , SUBU_W | S ( SLJIT_SP ) | T ( TMP_REG1 ) | D ( SLJIT_SP ) , DR ( SLJIT_SP ) )"		1062137	1					
ANR	1062364	Argument	"push_inst ( compiler , SUBU_W | S ( SLJIT_SP ) | T ( TMP_REG1 ) | D ( SLJIT_SP ) , DR ( SLJIT_SP ) )"		1062137	0					
ANR	1062365	CallExpression	"push_inst ( compiler , SUBU_W | S ( SLJIT_SP ) | T ( TMP_REG1 ) | D ( SLJIT_SP ) , DR ( SLJIT_SP ) )"		1062137	0					
ANR	1062366	Callee	push_inst		1062137	0					
ANR	1062367	Identifier	push_inst		1062137	0					
ANR	1062368	ArgumentList	compiler		1062137	1					
ANR	1062369	Argument	compiler		1062137	0					
ANR	1062370	Identifier	compiler		1062137	0					
ANR	1062371	Argument	SUBU_W | S ( SLJIT_SP ) | T ( TMP_REG1 ) | D ( SLJIT_SP )		1062137	1					
ANR	1062372	InclusiveOrExpression	SUBU_W | S ( SLJIT_SP ) | T ( TMP_REG1 ) | D ( SLJIT_SP )		1062137	0		|			
ANR	1062373	Identifier	SUBU_W		1062137	0					
ANR	1062374	InclusiveOrExpression	S ( SLJIT_SP ) | T ( TMP_REG1 ) | D ( SLJIT_SP )		1062137	1		|			
ANR	1062375	CallExpression	S ( SLJIT_SP )		1062137	0					
ANR	1062376	Callee	S		1062137	0					
ANR	1062377	Identifier	S		1062137	0					
ANR	1062378	ArgumentList	SLJIT_SP		1062137	1					
ANR	1062379	Argument	SLJIT_SP		1062137	0					
ANR	1062380	Identifier	SLJIT_SP		1062137	0					
ANR	1062381	InclusiveOrExpression	T ( TMP_REG1 ) | D ( SLJIT_SP )		1062137	1		|			
ANR	1062382	CallExpression	T ( TMP_REG1 )		1062137	0					
ANR	1062383	Callee	T		1062137	0					
ANR	1062384	Identifier	T		1062137	0					
ANR	1062385	ArgumentList	TMP_REG1		1062137	1					
ANR	1062386	Argument	TMP_REG1		1062137	0					
ANR	1062387	Identifier	TMP_REG1		1062137	0					
ANR	1062388	CallExpression	D ( SLJIT_SP )		1062137	1					
ANR	1062389	Callee	D		1062137	0					
ANR	1062390	Identifier	D		1062137	0					
ANR	1062391	ArgumentList	SLJIT_SP		1062137	1					
ANR	1062392	Argument	SLJIT_SP		1062137	0					
ANR	1062393	Identifier	SLJIT_SP		1062137	0					
ANR	1062394	Argument	DR ( SLJIT_SP )		1062137	2					
ANR	1062395	CallExpression	DR ( SLJIT_SP )		1062137	0					
ANR	1062396	Callee	DR		1062137	0					
ANR	1062397	Identifier	DR		1062137	0					
ANR	1062398	ArgumentList	SLJIT_SP		1062137	1					
ANR	1062399	Argument	SLJIT_SP		1062137	0					
ANR	1062400	Identifier	SLJIT_SP		1062137	0					
ANR	1062401	ExpressionStatement	base = S ( TMP_REG2 )	569:2:17166:17184	1062137	3	True				
ANR	1062402	AssignmentExpression	base = S ( TMP_REG2 )		1062137	0		=			
ANR	1062403	Identifier	base		1062137	0					
ANR	1062404	CallExpression	S ( TMP_REG2 )		1062137	1					
ANR	1062405	Callee	S		1062137	0					
ANR	1062406	Identifier	S		1062137	0					
ANR	1062407	ArgumentList	TMP_REG2		1062137	1					
ANR	1062408	Argument	TMP_REG2		1062137	0					
ANR	1062409	Identifier	TMP_REG2		1062137	0					
ANR	1062410	ExpressionStatement	local_size = 0	570:2:17188:17202	1062137	4	True				
ANR	1062411	AssignmentExpression	local_size = 0		1062137	0		=			
ANR	1062412	Identifier	local_size		1062137	0					
ANR	1062413	PrimaryExpression	0		1062137	1					
ANR	1062414	ExpressionStatement	offs = local_size - ( sljit_sw ) ( sizeof ( sljit_sw ) )	573:1:17209:17257	1062137	9	True				
ANR	1062415	AssignmentExpression	offs = local_size - ( sljit_sw ) ( sizeof ( sljit_sw ) )		1062137	0		=			
ANR	1062416	Identifier	offs		1062137	0					
ANR	1062417	AdditiveExpression	local_size - ( sljit_sw ) ( sizeof ( sljit_sw ) )		1062137	1		-			
ANR	1062418	Identifier	local_size		1062137	0					
ANR	1062419	CastExpression	( sljit_sw ) ( sizeof ( sljit_sw ) )		1062137	1					
ANR	1062420	CastTarget	sljit_sw		1062137	0					
ANR	1062421	SizeofExpression	sizeof ( sljit_sw )		1062137	1					
ANR	1062422	Sizeof	sizeof		1062137	0					
ANR	1062423	SizeofOperand	sljit_sw		1062137	1					
ANR	1062424	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STACK_STORE | base | TA ( RETURN_ADDR_REG ) | IMM ( offs ) , MOVABLE_INS ) )"	574:1:17260:17355	1062137	10	True				
ANR	1062425	CallExpression	"FAIL_IF ( push_inst ( compiler , STACK_STORE | base | TA ( RETURN_ADDR_REG ) | IMM ( offs ) , MOVABLE_INS ) )"		1062137	0					
ANR	1062426	Callee	FAIL_IF		1062137	0					
ANR	1062427	Identifier	FAIL_IF		1062137	0					
ANR	1062428	ArgumentList	"push_inst ( compiler , STACK_STORE | base | TA ( RETURN_ADDR_REG ) | IMM ( offs ) , MOVABLE_INS )"		1062137	1					
ANR	1062429	Argument	"push_inst ( compiler , STACK_STORE | base | TA ( RETURN_ADDR_REG ) | IMM ( offs ) , MOVABLE_INS )"		1062137	0					
ANR	1062430	CallExpression	"push_inst ( compiler , STACK_STORE | base | TA ( RETURN_ADDR_REG ) | IMM ( offs ) , MOVABLE_INS )"		1062137	0					
ANR	1062431	Callee	push_inst		1062137	0					
ANR	1062432	Identifier	push_inst		1062137	0					
ANR	1062433	ArgumentList	compiler		1062137	1					
ANR	1062434	Argument	compiler		1062137	0					
ANR	1062435	Identifier	compiler		1062137	0					
ANR	1062436	Argument	STACK_STORE | base | TA ( RETURN_ADDR_REG ) | IMM ( offs )		1062137	1					
ANR	1062437	InclusiveOrExpression	STACK_STORE | base | TA ( RETURN_ADDR_REG ) | IMM ( offs )		1062137	0		|			
ANR	1062438	Identifier	STACK_STORE		1062137	0					
ANR	1062439	InclusiveOrExpression	base | TA ( RETURN_ADDR_REG ) | IMM ( offs )		1062137	1		|			
ANR	1062440	Identifier	base		1062137	0					
ANR	1062441	InclusiveOrExpression	TA ( RETURN_ADDR_REG ) | IMM ( offs )		1062137	1		|			
ANR	1062442	CallExpression	TA ( RETURN_ADDR_REG )		1062137	0					
ANR	1062443	Callee	TA		1062137	0					
ANR	1062444	Identifier	TA		1062137	0					
ANR	1062445	ArgumentList	RETURN_ADDR_REG		1062137	1					
ANR	1062446	Argument	RETURN_ADDR_REG		1062137	0					
ANR	1062447	Identifier	RETURN_ADDR_REG		1062137	0					
ANR	1062448	CallExpression	IMM ( offs )		1062137	1					
ANR	1062449	Callee	IMM		1062137	0					
ANR	1062450	Identifier	IMM		1062137	0					
ANR	1062451	ArgumentList	offs		1062137	1					
ANR	1062452	Argument	offs		1062137	0					
ANR	1062453	Identifier	offs		1062137	0					
ANR	1062454	Argument	MOVABLE_INS		1062137	2					
ANR	1062455	Identifier	MOVABLE_INS		1062137	0					
ANR	1062456	ExpressionStatement	tmp = saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG	576:1:17359:17455	1062137	11	True				
ANR	1062457	AssignmentExpression	tmp = saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG		1062137	0		=			
ANR	1062458	Identifier	tmp		1062137	0					
ANR	1062459	ConditionalExpression	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG		1062137	1					
ANR	1062460	Condition	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1062137	0					
ANR	1062461	RelationalExpression	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1062137	0		<			
ANR	1062462	Identifier	saveds		1062137	0					
ANR	1062463	Identifier	SLJIT_NUMBER_OF_SAVED_REGISTERS		1062137	1					
ANR	1062464	AdditiveExpression	SLJIT_S0 + 1 - saveds		1062137	1		+			
ANR	1062465	Identifier	SLJIT_S0		1062137	0					
ANR	1062466	AdditiveExpression	1 - saveds		1062137	1		-			
ANR	1062467	PrimaryExpression	1		1062137	0					
ANR	1062468	Identifier	saveds		1062137	1					
ANR	1062469	Identifier	SLJIT_FIRST_SAVED_REG		1062137	2					
ANR	1062470	ForStatement	for ( i = SLJIT_S0 ; i >= tmp ; i -- )		1062137	12					
ANR	1062471	ForInit	i = SLJIT_S0 ;	577:6:17463:17475	1062137	0	True				
ANR	1062472	AssignmentExpression	i = SLJIT_S0		1062137	0		=			
ANR	1062473	Identifier	i		1062137	0					
ANR	1062474	Identifier	SLJIT_S0		1062137	1					
ANR	1062475	Condition	i >= tmp	577:20:17477:17484	1062137	1	True				
ANR	1062476	RelationalExpression	i >= tmp		1062137	0		>=			
ANR	1062477	Identifier	i		1062137	0					
ANR	1062478	Identifier	tmp		1062137	1					
ANR	1062479	PostIncDecOperationExpression	i --	577:30:17487:17489	1062137	2	True				
ANR	1062480	Identifier	i		1062137	0					
ANR	1062481	IncDec	--		1062137	1					
ANR	1062482	CompoundStatement		34:35:1304:1304	1062137	3					
ANR	1062483	ExpressionStatement	offs -= ( sljit_si ) ( sizeof ( sljit_sw ) )	578:2:17496:17532	1062137	0	True				
ANR	1062484	AssignmentExpression	offs -= ( sljit_si ) ( sizeof ( sljit_sw ) )		1062137	0		-=			
ANR	1062485	Identifier	offs		1062137	0					
ANR	1062486	CastExpression	( sljit_si ) ( sizeof ( sljit_sw ) )		1062137	1					
ANR	1062487	CastTarget	sljit_si		1062137	0					
ANR	1062488	SizeofExpression	sizeof ( sljit_sw )		1062137	1					
ANR	1062489	Sizeof	sizeof		1062137	0					
ANR	1062490	SizeofOperand	sljit_sw		1062137	1					
ANR	1062491	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STACK_STORE | base | T ( i ) | IMM ( offs ) , MOVABLE_INS ) )"	579:2:17536:17616	1062137	1	True				
ANR	1062492	CallExpression	"FAIL_IF ( push_inst ( compiler , STACK_STORE | base | T ( i ) | IMM ( offs ) , MOVABLE_INS ) )"		1062137	0					
ANR	1062493	Callee	FAIL_IF		1062137	0					
ANR	1062494	Identifier	FAIL_IF		1062137	0					
ANR	1062495	ArgumentList	"push_inst ( compiler , STACK_STORE | base | T ( i ) | IMM ( offs ) , MOVABLE_INS )"		1062137	1					
ANR	1062496	Argument	"push_inst ( compiler , STACK_STORE | base | T ( i ) | IMM ( offs ) , MOVABLE_INS )"		1062137	0					
ANR	1062497	CallExpression	"push_inst ( compiler , STACK_STORE | base | T ( i ) | IMM ( offs ) , MOVABLE_INS )"		1062137	0					
ANR	1062498	Callee	push_inst		1062137	0					
ANR	1062499	Identifier	push_inst		1062137	0					
ANR	1062500	ArgumentList	compiler		1062137	1					
ANR	1062501	Argument	compiler		1062137	0					
ANR	1062502	Identifier	compiler		1062137	0					
ANR	1062503	Argument	STACK_STORE | base | T ( i ) | IMM ( offs )		1062137	1					
ANR	1062504	InclusiveOrExpression	STACK_STORE | base | T ( i ) | IMM ( offs )		1062137	0		|			
ANR	1062505	Identifier	STACK_STORE		1062137	0					
ANR	1062506	InclusiveOrExpression	base | T ( i ) | IMM ( offs )		1062137	1		|			
ANR	1062507	Identifier	base		1062137	0					
ANR	1062508	InclusiveOrExpression	T ( i ) | IMM ( offs )		1062137	1		|			
ANR	1062509	CallExpression	T ( i )		1062137	0					
ANR	1062510	Callee	T		1062137	0					
ANR	1062511	Identifier	T		1062137	0					
ANR	1062512	ArgumentList	i		1062137	1					
ANR	1062513	Argument	i		1062137	0					
ANR	1062514	Identifier	i		1062137	0					
ANR	1062515	CallExpression	IMM ( offs )		1062137	1					
ANR	1062516	Callee	IMM		1062137	0					
ANR	1062517	Identifier	IMM		1062137	0					
ANR	1062518	ArgumentList	offs		1062137	1					
ANR	1062519	Argument	offs		1062137	0					
ANR	1062520	Identifier	offs		1062137	0					
ANR	1062521	Argument	MOVABLE_INS		1062137	2					
ANR	1062522	Identifier	MOVABLE_INS		1062137	0					
ANR	1062523	ForStatement	for ( i = scratches ; i >= SLJIT_FIRST_SAVED_REG ; i -- )		1062137	13					
ANR	1062524	ForInit	i = scratches ;	582:6:17628:17641	1062137	0	True				
ANR	1062525	AssignmentExpression	i = scratches		1062137	0		=			
ANR	1062526	Identifier	i		1062137	0					
ANR	1062527	Identifier	scratches		1062137	1					
ANR	1062528	Condition	i >= SLJIT_FIRST_SAVED_REG	582:21:17643:17668	1062137	1	True				
ANR	1062529	RelationalExpression	i >= SLJIT_FIRST_SAVED_REG		1062137	0		>=			
ANR	1062530	Identifier	i		1062137	0					
ANR	1062531	Identifier	SLJIT_FIRST_SAVED_REG		1062137	1					
ANR	1062532	PostIncDecOperationExpression	i --	582:49:17671:17673	1062137	2	True				
ANR	1062533	Identifier	i		1062137	0					
ANR	1062534	IncDec	--		1062137	1					
ANR	1062535	CompoundStatement		39:54:1488:1488	1062137	3					
ANR	1062536	ExpressionStatement	offs -= ( sljit_si ) ( sizeof ( sljit_sw ) )	583:2:17680:17716	1062137	0	True				
ANR	1062537	AssignmentExpression	offs -= ( sljit_si ) ( sizeof ( sljit_sw ) )		1062137	0		-=			
ANR	1062538	Identifier	offs		1062137	0					
ANR	1062539	CastExpression	( sljit_si ) ( sizeof ( sljit_sw ) )		1062137	1					
ANR	1062540	CastTarget	sljit_si		1062137	0					
ANR	1062541	SizeofExpression	sizeof ( sljit_sw )		1062137	1					
ANR	1062542	Sizeof	sizeof		1062137	0					
ANR	1062543	SizeofOperand	sljit_sw		1062137	1					
ANR	1062544	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STACK_STORE | base | T ( i ) | IMM ( offs ) , MOVABLE_INS ) )"	584:2:17720:17800	1062137	1	True				
ANR	1062545	CallExpression	"FAIL_IF ( push_inst ( compiler , STACK_STORE | base | T ( i ) | IMM ( offs ) , MOVABLE_INS ) )"		1062137	0					
ANR	1062546	Callee	FAIL_IF		1062137	0					
ANR	1062547	Identifier	FAIL_IF		1062137	0					
ANR	1062548	ArgumentList	"push_inst ( compiler , STACK_STORE | base | T ( i ) | IMM ( offs ) , MOVABLE_INS )"		1062137	1					
ANR	1062549	Argument	"push_inst ( compiler , STACK_STORE | base | T ( i ) | IMM ( offs ) , MOVABLE_INS )"		1062137	0					
ANR	1062550	CallExpression	"push_inst ( compiler , STACK_STORE | base | T ( i ) | IMM ( offs ) , MOVABLE_INS )"		1062137	0					
ANR	1062551	Callee	push_inst		1062137	0					
ANR	1062552	Identifier	push_inst		1062137	0					
ANR	1062553	ArgumentList	compiler		1062137	1					
ANR	1062554	Argument	compiler		1062137	0					
ANR	1062555	Identifier	compiler		1062137	0					
ANR	1062556	Argument	STACK_STORE | base | T ( i ) | IMM ( offs )		1062137	1					
ANR	1062557	InclusiveOrExpression	STACK_STORE | base | T ( i ) | IMM ( offs )		1062137	0		|			
ANR	1062558	Identifier	STACK_STORE		1062137	0					
ANR	1062559	InclusiveOrExpression	base | T ( i ) | IMM ( offs )		1062137	1		|			
ANR	1062560	Identifier	base		1062137	0					
ANR	1062561	InclusiveOrExpression	T ( i ) | IMM ( offs )		1062137	1		|			
ANR	1062562	CallExpression	T ( i )		1062137	0					
ANR	1062563	Callee	T		1062137	0					
ANR	1062564	Identifier	T		1062137	0					
ANR	1062565	ArgumentList	i		1062137	1					
ANR	1062566	Argument	i		1062137	0					
ANR	1062567	Identifier	i		1062137	0					
ANR	1062568	CallExpression	IMM ( offs )		1062137	1					
ANR	1062569	Callee	IMM		1062137	0					
ANR	1062570	Identifier	IMM		1062137	0					
ANR	1062571	ArgumentList	offs		1062137	1					
ANR	1062572	Argument	offs		1062137	0					
ANR	1062573	Identifier	offs		1062137	0					
ANR	1062574	Argument	MOVABLE_INS		1062137	2					
ANR	1062575	Identifier	MOVABLE_INS		1062137	0					
ANR	1062576	IfStatement	if ( args >= 1 )		1062137	14					
ANR	1062577	Condition	args >= 1	587:5:17811:17819	1062137	0	True				
ANR	1062578	RelationalExpression	args >= 1		1062137	0		>=			
ANR	1062579	Identifier	args		1062137	0					
ANR	1062580	PrimaryExpression	1		1062137	1					
ANR	1062581	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDU_W | SA ( 4 ) | TA ( 0 ) | D ( SLJIT_S0 ) , DR ( SLJIT_S0 ) ) )"	588:2:17824:17904	1062137	1	True				
ANR	1062582	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDU_W | SA ( 4 ) | TA ( 0 ) | D ( SLJIT_S0 ) , DR ( SLJIT_S0 ) ) )"		1062137	0					
ANR	1062583	Callee	FAIL_IF		1062137	0					
ANR	1062584	Identifier	FAIL_IF		1062137	0					
ANR	1062585	ArgumentList	"push_inst ( compiler , ADDU_W | SA ( 4 ) | TA ( 0 ) | D ( SLJIT_S0 ) , DR ( SLJIT_S0 ) )"		1062137	1					
ANR	1062586	Argument	"push_inst ( compiler , ADDU_W | SA ( 4 ) | TA ( 0 ) | D ( SLJIT_S0 ) , DR ( SLJIT_S0 ) )"		1062137	0					
ANR	1062587	CallExpression	"push_inst ( compiler , ADDU_W | SA ( 4 ) | TA ( 0 ) | D ( SLJIT_S0 ) , DR ( SLJIT_S0 ) )"		1062137	0					
ANR	1062588	Callee	push_inst		1062137	0					
ANR	1062589	Identifier	push_inst		1062137	0					
ANR	1062590	ArgumentList	compiler		1062137	1					
ANR	1062591	Argument	compiler		1062137	0					
ANR	1062592	Identifier	compiler		1062137	0					
ANR	1062593	Argument	ADDU_W | SA ( 4 ) | TA ( 0 ) | D ( SLJIT_S0 )		1062137	1					
ANR	1062594	InclusiveOrExpression	ADDU_W | SA ( 4 ) | TA ( 0 ) | D ( SLJIT_S0 )		1062137	0		|			
ANR	1062595	Identifier	ADDU_W		1062137	0					
ANR	1062596	InclusiveOrExpression	SA ( 4 ) | TA ( 0 ) | D ( SLJIT_S0 )		1062137	1		|			
ANR	1062597	CallExpression	SA ( 4 )		1062137	0					
ANR	1062598	Callee	SA		1062137	0					
ANR	1062599	Identifier	SA		1062137	0					
ANR	1062600	ArgumentList	4		1062137	1					
ANR	1062601	Argument	4		1062137	0					
ANR	1062602	PrimaryExpression	4		1062137	0					
ANR	1062603	InclusiveOrExpression	TA ( 0 ) | D ( SLJIT_S0 )		1062137	1		|			
ANR	1062604	CallExpression	TA ( 0 )		1062137	0					
ANR	1062605	Callee	TA		1062137	0					
ANR	1062606	Identifier	TA		1062137	0					
ANR	1062607	ArgumentList	0		1062137	1					
ANR	1062608	Argument	0		1062137	0					
ANR	1062609	PrimaryExpression	0		1062137	0					
ANR	1062610	CallExpression	D ( SLJIT_S0 )		1062137	1					
ANR	1062611	Callee	D		1062137	0					
ANR	1062612	Identifier	D		1062137	0					
ANR	1062613	ArgumentList	SLJIT_S0		1062137	1					
ANR	1062614	Argument	SLJIT_S0		1062137	0					
ANR	1062615	Identifier	SLJIT_S0		1062137	0					
ANR	1062616	Argument	DR ( SLJIT_S0 )		1062137	2					
ANR	1062617	CallExpression	DR ( SLJIT_S0 )		1062137	0					
ANR	1062618	Callee	DR		1062137	0					
ANR	1062619	Identifier	DR		1062137	0					
ANR	1062620	ArgumentList	SLJIT_S0		1062137	1					
ANR	1062621	Argument	SLJIT_S0		1062137	0					
ANR	1062622	Identifier	SLJIT_S0		1062137	0					
ANR	1062623	IfStatement	if ( args >= 2 )		1062137	15					
ANR	1062624	Condition	args >= 2	589:5:17911:17919	1062137	0	True				
ANR	1062625	RelationalExpression	args >= 2		1062137	0		>=			
ANR	1062626	Identifier	args		1062137	0					
ANR	1062627	PrimaryExpression	2		1062137	1					
ANR	1062628	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDU_W | SA ( 5 ) | TA ( 0 ) | D ( SLJIT_S1 ) , DR ( SLJIT_S1 ) ) )"	590:2:17924:18004	1062137	1	True				
ANR	1062629	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDU_W | SA ( 5 ) | TA ( 0 ) | D ( SLJIT_S1 ) , DR ( SLJIT_S1 ) ) )"		1062137	0					
ANR	1062630	Callee	FAIL_IF		1062137	0					
ANR	1062631	Identifier	FAIL_IF		1062137	0					
ANR	1062632	ArgumentList	"push_inst ( compiler , ADDU_W | SA ( 5 ) | TA ( 0 ) | D ( SLJIT_S1 ) , DR ( SLJIT_S1 ) )"		1062137	1					
ANR	1062633	Argument	"push_inst ( compiler , ADDU_W | SA ( 5 ) | TA ( 0 ) | D ( SLJIT_S1 ) , DR ( SLJIT_S1 ) )"		1062137	0					
ANR	1062634	CallExpression	"push_inst ( compiler , ADDU_W | SA ( 5 ) | TA ( 0 ) | D ( SLJIT_S1 ) , DR ( SLJIT_S1 ) )"		1062137	0					
ANR	1062635	Callee	push_inst		1062137	0					
ANR	1062636	Identifier	push_inst		1062137	0					
ANR	1062637	ArgumentList	compiler		1062137	1					
ANR	1062638	Argument	compiler		1062137	0					
ANR	1062639	Identifier	compiler		1062137	0					
ANR	1062640	Argument	ADDU_W | SA ( 5 ) | TA ( 0 ) | D ( SLJIT_S1 )		1062137	1					
ANR	1062641	InclusiveOrExpression	ADDU_W | SA ( 5 ) | TA ( 0 ) | D ( SLJIT_S1 )		1062137	0		|			
ANR	1062642	Identifier	ADDU_W		1062137	0					
ANR	1062643	InclusiveOrExpression	SA ( 5 ) | TA ( 0 ) | D ( SLJIT_S1 )		1062137	1		|			
ANR	1062644	CallExpression	SA ( 5 )		1062137	0					
ANR	1062645	Callee	SA		1062137	0					
ANR	1062646	Identifier	SA		1062137	0					
ANR	1062647	ArgumentList	5		1062137	1					
ANR	1062648	Argument	5		1062137	0					
ANR	1062649	PrimaryExpression	5		1062137	0					
ANR	1062650	InclusiveOrExpression	TA ( 0 ) | D ( SLJIT_S1 )		1062137	1		|			
ANR	1062651	CallExpression	TA ( 0 )		1062137	0					
ANR	1062652	Callee	TA		1062137	0					
ANR	1062653	Identifier	TA		1062137	0					
ANR	1062654	ArgumentList	0		1062137	1					
ANR	1062655	Argument	0		1062137	0					
ANR	1062656	PrimaryExpression	0		1062137	0					
ANR	1062657	CallExpression	D ( SLJIT_S1 )		1062137	1					
ANR	1062658	Callee	D		1062137	0					
ANR	1062659	Identifier	D		1062137	0					
ANR	1062660	ArgumentList	SLJIT_S1		1062137	1					
ANR	1062661	Argument	SLJIT_S1		1062137	0					
ANR	1062662	Identifier	SLJIT_S1		1062137	0					
ANR	1062663	Argument	DR ( SLJIT_S1 )		1062137	2					
ANR	1062664	CallExpression	DR ( SLJIT_S1 )		1062137	0					
ANR	1062665	Callee	DR		1062137	0					
ANR	1062666	Identifier	DR		1062137	0					
ANR	1062667	ArgumentList	SLJIT_S1		1062137	1					
ANR	1062668	Argument	SLJIT_S1		1062137	0					
ANR	1062669	Identifier	SLJIT_S1		1062137	0					
ANR	1062670	IfStatement	if ( args >= 3 )		1062137	16					
ANR	1062671	Condition	args >= 3	591:5:18011:18019	1062137	0	True				
ANR	1062672	RelationalExpression	args >= 3		1062137	0		>=			
ANR	1062673	Identifier	args		1062137	0					
ANR	1062674	PrimaryExpression	3		1062137	1					
ANR	1062675	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDU_W | SA ( 6 ) | TA ( 0 ) | D ( SLJIT_S2 ) , DR ( SLJIT_S2 ) ) )"	592:2:18024:18104	1062137	1	True				
ANR	1062676	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDU_W | SA ( 6 ) | TA ( 0 ) | D ( SLJIT_S2 ) , DR ( SLJIT_S2 ) ) )"		1062137	0					
ANR	1062677	Callee	FAIL_IF		1062137	0					
ANR	1062678	Identifier	FAIL_IF		1062137	0					
ANR	1062679	ArgumentList	"push_inst ( compiler , ADDU_W | SA ( 6 ) | TA ( 0 ) | D ( SLJIT_S2 ) , DR ( SLJIT_S2 ) )"		1062137	1					
ANR	1062680	Argument	"push_inst ( compiler , ADDU_W | SA ( 6 ) | TA ( 0 ) | D ( SLJIT_S2 ) , DR ( SLJIT_S2 ) )"		1062137	0					
ANR	1062681	CallExpression	"push_inst ( compiler , ADDU_W | SA ( 6 ) | TA ( 0 ) | D ( SLJIT_S2 ) , DR ( SLJIT_S2 ) )"		1062137	0					
ANR	1062682	Callee	push_inst		1062137	0					
ANR	1062683	Identifier	push_inst		1062137	0					
ANR	1062684	ArgumentList	compiler		1062137	1					
ANR	1062685	Argument	compiler		1062137	0					
ANR	1062686	Identifier	compiler		1062137	0					
ANR	1062687	Argument	ADDU_W | SA ( 6 ) | TA ( 0 ) | D ( SLJIT_S2 )		1062137	1					
ANR	1062688	InclusiveOrExpression	ADDU_W | SA ( 6 ) | TA ( 0 ) | D ( SLJIT_S2 )		1062137	0		|			
ANR	1062689	Identifier	ADDU_W		1062137	0					
ANR	1062690	InclusiveOrExpression	SA ( 6 ) | TA ( 0 ) | D ( SLJIT_S2 )		1062137	1		|			
ANR	1062691	CallExpression	SA ( 6 )		1062137	0					
ANR	1062692	Callee	SA		1062137	0					
ANR	1062693	Identifier	SA		1062137	0					
ANR	1062694	ArgumentList	6		1062137	1					
ANR	1062695	Argument	6		1062137	0					
ANR	1062696	PrimaryExpression	6		1062137	0					
ANR	1062697	InclusiveOrExpression	TA ( 0 ) | D ( SLJIT_S2 )		1062137	1		|			
ANR	1062698	CallExpression	TA ( 0 )		1062137	0					
ANR	1062699	Callee	TA		1062137	0					
ANR	1062700	Identifier	TA		1062137	0					
ANR	1062701	ArgumentList	0		1062137	1					
ANR	1062702	Argument	0		1062137	0					
ANR	1062703	PrimaryExpression	0		1062137	0					
ANR	1062704	CallExpression	D ( SLJIT_S2 )		1062137	1					
ANR	1062705	Callee	D		1062137	0					
ANR	1062706	Identifier	D		1062137	0					
ANR	1062707	ArgumentList	SLJIT_S2		1062137	1					
ANR	1062708	Argument	SLJIT_S2		1062137	0					
ANR	1062709	Identifier	SLJIT_S2		1062137	0					
ANR	1062710	Argument	DR ( SLJIT_S2 )		1062137	2					
ANR	1062711	CallExpression	DR ( SLJIT_S2 )		1062137	0					
ANR	1062712	Callee	DR		1062137	0					
ANR	1062713	Identifier	DR		1062137	0					
ANR	1062714	ArgumentList	SLJIT_S2		1062137	1					
ANR	1062715	Argument	SLJIT_S2		1062137	0					
ANR	1062716	Identifier	SLJIT_S2		1062137	0					
ANR	1062717	ReturnStatement	return SLJIT_SUCCESS ;	594:1:18108:18128	1062137	17	True				
ANR	1062718	Identifier	SLJIT_SUCCESS		1062137	0					
ANR	1062719	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1062137	1					
ANR	1062720	Identifier	sljit_emit_enter		1062137	2					
ANR	1062721	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1062137	3					
ANR	1062722	Parameter	struct sljit_compiler * compiler	541:51:16022:16052	1062137	0	True				
ANR	1062723	ParameterType	struct sljit_compiler *		1062137	0					
ANR	1062724	Identifier	compiler		1062137	1					
ANR	1062725	Parameter	sljit_si options	542:1:16056:16071	1062137	1	True				
ANR	1062726	ParameterType	sljit_si		1062137	0					
ANR	1062727	Identifier	options		1062137	1					
ANR	1062728	Parameter	sljit_si args	542:19:16074:16086	1062137	2	True				
ANR	1062729	ParameterType	sljit_si		1062137	0					
ANR	1062730	Identifier	args		1062137	1					
ANR	1062731	Parameter	sljit_si scratches	542:34:16089:16106	1062137	3	True				
ANR	1062732	ParameterType	sljit_si		1062137	0					
ANR	1062733	Identifier	scratches		1062137	1					
ANR	1062734	Parameter	sljit_si saveds	542:54:16109:16123	1062137	4	True				
ANR	1062735	ParameterType	sljit_si		1062137	0					
ANR	1062736	Identifier	saveds		1062137	1					
ANR	1062737	Parameter	sljit_si fscratches	543:1:16127:16145	1062137	5	True				
ANR	1062738	ParameterType	sljit_si		1062137	0					
ANR	1062739	Identifier	fscratches		1062137	1					
ANR	1062740	Parameter	sljit_si fsaveds	543:22:16148:16163	1062137	6	True				
ANR	1062741	ParameterType	sljit_si		1062137	0					
ANR	1062742	Identifier	fsaveds		1062137	1					
ANR	1062743	Parameter	sljit_si local_size	543:40:16166:16184	1062137	7	True				
ANR	1062744	ParameterType	sljit_si		1062137	0					
ANR	1062745	Identifier	local_size		1062137	1					
ANR	1062746	CFGEntryNode	ENTRY		1062137		True				
ANR	1062747	CFGExitNode	EXIT		1062137		True				
ANR	1062748	Symbol	TMP_REG2		1062137						
ANR	1062749	Symbol	TMP_REG1		1062137						
ANR	1062750	Symbol	D		1062137						
ANR	1062751	Symbol	ADDU_W		1062137						
ANR	1062752	Symbol	scratches		1062137						
ANR	1062753	Symbol	saveds		1062137						
ANR	1062754	Symbol	RETURN_ADDR_REG		1062137						
ANR	1062755	Symbol	check_sljit_emit_enter		1062137						
ANR	1062756	Symbol	* compiler		1062137						
ANR	1062757	Symbol	SIMM_MAX		1062137						
ANR	1062758	Symbol	SLJIT_NUMBER_OF_SAVED_REGISTERS		1062137						
ANR	1062759	Symbol	DR		1062137						
ANR	1062760	Symbol	SLJIT_SP		1062137						
ANR	1062761	Symbol	SA		1062137						
ANR	1062762	Symbol	offs		1062137						
ANR	1062763	Symbol	S		1062137						
ANR	1062764	Symbol	T		1062137						
ANR	1062765	Symbol	load_immediate		1062137						
ANR	1062766	Symbol	tmp		1062137						
ANR	1062767	Symbol	SLJIT_LOCALS_OFFSET		1062137						
ANR	1062768	Symbol	options		1062137						
ANR	1062769	Symbol	~0xf		1062137						
ANR	1062770	Symbol	ADDIU_W		1062137						
ANR	1062771	Symbol	compiler		1062137						
ANR	1062772	Symbol	GET_SAVED_REGISTERS_SIZE		1062137						
ANR	1062773	Symbol	local_size		1062137						
ANR	1062774	Symbol	push_inst		1062137						
ANR	1062775	Symbol	SUBU_W		1062137						
ANR	1062776	Symbol	IMM		1062137						
ANR	1062777	Symbol	i		1062137						
ANR	1062778	Symbol	SLJIT_SUCCESS		1062137						
ANR	1062779	Symbol	SLJIT_S2		1062137						
ANR	1062780	Symbol	TA		1062137						
ANR	1062781	Symbol	SLJIT_S0		1062137						
ANR	1062782	Symbol	SLJIT_S1		1062137						
ANR	1062783	Symbol	args		1062137						
ANR	1062784	Symbol	fscratches		1062137						
ANR	1062785	Symbol	compiler -> local_size		1062137						
ANR	1062786	Symbol	fsaveds		1062137						
ANR	1062787	Symbol	SLJIT_FIRST_SAVED_REG		1062137						
ANR	1062788	Symbol	MOVABLE_INS		1062137						
ANR	1062789	Symbol	STACK_STORE		1062137						
ANR	1062790	Symbol	base		1062137						
ANR	1062791	Function	sljit_set_context	597:0:18133:18855							
ANR	1062792	FunctionDef	"sljit_set_context (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1062791	0					
ANR	1062793	CompoundStatement		600:0:18350:18855	1062791	0					
ANR	1062794	ExpressionStatement	CHECK_ERROR ( )	601:1:18353:18366	1062791	0	True				
ANR	1062795	CallExpression	CHECK_ERROR ( )		1062791	0					
ANR	1062796	Callee	CHECK_ERROR		1062791	0					
ANR	1062797	Identifier	CHECK_ERROR		1062791	0					
ANR	1062798	ArgumentList			1062791	1					
ANR	1062799	ExpressionStatement	"CHECK ( check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"	602:1:18369:18476	1062791	1	True				
ANR	1062800	CallExpression	"CHECK ( check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"		1062791	0					
ANR	1062801	Callee	CHECK		1062791	0					
ANR	1062802	Identifier	CHECK		1062791	0					
ANR	1062803	ArgumentList	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1062791	1					
ANR	1062804	Argument	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1062791	0					
ANR	1062805	CallExpression	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1062791	0					
ANR	1062806	Callee	check_sljit_set_context		1062791	0					
ANR	1062807	Identifier	check_sljit_set_context		1062791	0					
ANR	1062808	ArgumentList	compiler		1062791	1					
ANR	1062809	Argument	compiler		1062791	0					
ANR	1062810	Identifier	compiler		1062791	0					
ANR	1062811	Argument	options		1062791	1					
ANR	1062812	Identifier	options		1062791	0					
ANR	1062813	Argument	args		1062791	2					
ANR	1062814	Identifier	args		1062791	0					
ANR	1062815	Argument	scratches		1062791	3					
ANR	1062816	Identifier	scratches		1062791	0					
ANR	1062817	Argument	saveds		1062791	4					
ANR	1062818	Identifier	saveds		1062791	0					
ANR	1062819	Argument	fscratches		1062791	5					
ANR	1062820	Identifier	fscratches		1062791	0					
ANR	1062821	Argument	fsaveds		1062791	6					
ANR	1062822	Identifier	fsaveds		1062791	0					
ANR	1062823	Argument	local_size		1062791	7					
ANR	1062824	Identifier	local_size		1062791	0					
ANR	1062825	ExpressionStatement	"set_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"	603:1:18479:18571	1062791	2	True				
ANR	1062826	CallExpression	"set_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1062791	0					
ANR	1062827	Callee	set_set_context		1062791	0					
ANR	1062828	Identifier	set_set_context		1062791	0					
ANR	1062829	ArgumentList	compiler		1062791	1					
ANR	1062830	Argument	compiler		1062791	0					
ANR	1062831	Identifier	compiler		1062791	0					
ANR	1062832	Argument	options		1062791	1					
ANR	1062833	Identifier	options		1062791	0					
ANR	1062834	Argument	args		1062791	2					
ANR	1062835	Identifier	args		1062791	0					
ANR	1062836	Argument	scratches		1062791	3					
ANR	1062837	Identifier	scratches		1062791	0					
ANR	1062838	Argument	saveds		1062791	4					
ANR	1062839	Identifier	saveds		1062791	0					
ANR	1062840	Argument	fscratches		1062791	5					
ANR	1062841	Identifier	fscratches		1062791	0					
ANR	1062842	Argument	fsaveds		1062791	6					
ANR	1062843	Identifier	fsaveds		1062791	0					
ANR	1062844	Argument	local_size		1062791	7					
ANR	1062845	Identifier	local_size		1062791	0					
ANR	1062846	ExpressionStatement	"local_size += GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 ) + SLJIT_LOCALS_OFFSET"	605:1:18575:18657	1062791	3	True				
ANR	1062847	AssignmentExpression	"local_size += GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 ) + SLJIT_LOCALS_OFFSET"		1062791	0		+=			
ANR	1062848	Identifier	local_size		1062791	0					
ANR	1062849	AdditiveExpression	"GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 ) + SLJIT_LOCALS_OFFSET"		1062791	1		+			
ANR	1062850	CallExpression	"GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 )"		1062791	0					
ANR	1062851	Callee	GET_SAVED_REGISTERS_SIZE		1062791	0					
ANR	1062852	Identifier	GET_SAVED_REGISTERS_SIZE		1062791	0					
ANR	1062853	ArgumentList	scratches		1062791	1					
ANR	1062854	Argument	scratches		1062791	0					
ANR	1062855	Identifier	scratches		1062791	0					
ANR	1062856	Argument	saveds		1062791	1					
ANR	1062857	Identifier	saveds		1062791	0					
ANR	1062858	Argument	1		1062791	2					
ANR	1062859	PrimaryExpression	1		1062791	0					
ANR	1062860	Identifier	SLJIT_LOCALS_OFFSET		1062791	1					
ANR	1062861	ExpressionStatement	compiler -> local_size = ( local_size + 15 ) & ~0xf	607:1:18719:18766	1062791	4	True				
ANR	1062862	AssignmentExpression	compiler -> local_size = ( local_size + 15 ) & ~0xf		1062791	0		=			
ANR	1062863	PtrMemberAccess	compiler -> local_size		1062791	0					
ANR	1062864	Identifier	compiler		1062791	0					
ANR	1062865	Identifier	local_size		1062791	1					
ANR	1062866	BitAndExpression	( local_size + 15 ) & ~0xf		1062791	1		&			
ANR	1062867	AdditiveExpression	local_size + 15		1062791	0		+			
ANR	1062868	Identifier	local_size		1062791	0					
ANR	1062869	PrimaryExpression	15		1062791	1					
ANR	1062870	Identifier	~0xf		1062791	1					
ANR	1062871	ReturnStatement	return SLJIT_SUCCESS ;	611:1:18833:18853	1062791	5	True				
ANR	1062872	Identifier	SLJIT_SUCCESS		1062791	0					
ANR	1062873	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1062791	1					
ANR	1062874	Identifier	sljit_set_context		1062791	2					
ANR	1062875	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1062791	3					
ANR	1062876	Parameter	struct sljit_compiler * compiler	597:52:18185:18215	1062791	0	True				
ANR	1062877	ParameterType	struct sljit_compiler *		1062791	0					
ANR	1062878	Identifier	compiler		1062791	1					
ANR	1062879	Parameter	sljit_si options	598:1:18219:18234	1062791	1	True				
ANR	1062880	ParameterType	sljit_si		1062791	0					
ANR	1062881	Identifier	options		1062791	1					
ANR	1062882	Parameter	sljit_si args	598:19:18237:18249	1062791	2	True				
ANR	1062883	ParameterType	sljit_si		1062791	0					
ANR	1062884	Identifier	args		1062791	1					
ANR	1062885	Parameter	sljit_si scratches	598:34:18252:18269	1062791	3	True				
ANR	1062886	ParameterType	sljit_si		1062791	0					
ANR	1062887	Identifier	scratches		1062791	1					
ANR	1062888	Parameter	sljit_si saveds	598:54:18272:18286	1062791	4	True				
ANR	1062889	ParameterType	sljit_si		1062791	0					
ANR	1062890	Identifier	saveds		1062791	1					
ANR	1062891	Parameter	sljit_si fscratches	599:1:18290:18308	1062791	5	True				
ANR	1062892	ParameterType	sljit_si		1062791	0					
ANR	1062893	Identifier	fscratches		1062791	1					
ANR	1062894	Parameter	sljit_si fsaveds	599:22:18311:18326	1062791	6	True				
ANR	1062895	ParameterType	sljit_si		1062791	0					
ANR	1062896	Identifier	fsaveds		1062791	1					
ANR	1062897	Parameter	sljit_si local_size	599:40:18329:18347	1062791	7	True				
ANR	1062898	ParameterType	sljit_si		1062791	0					
ANR	1062899	Identifier	local_size		1062791	1					
ANR	1062900	CFGEntryNode	ENTRY		1062791		True				
ANR	1062901	CFGExitNode	EXIT		1062791		True				
ANR	1062902	Symbol	GET_SAVED_REGISTERS_SIZE		1062791						
ANR	1062903	Symbol	local_size		1062791						
ANR	1062904	Symbol	scratches		1062791						
ANR	1062905	Symbol	saveds		1062791						
ANR	1062906	Symbol	check_sljit_set_context		1062791						
ANR	1062907	Symbol	SLJIT_SUCCESS		1062791						
ANR	1062908	Symbol	* compiler		1062791						
ANR	1062909	Symbol	args		1062791						
ANR	1062910	Symbol	fscratches		1062791						
ANR	1062911	Symbol	compiler -> local_size		1062791						
ANR	1062912	Symbol	fsaveds		1062791						
ANR	1062913	Symbol	SLJIT_LOCALS_OFFSET		1062791						
ANR	1062914	Symbol	options		1062791						
ANR	1062915	Symbol	~0xf		1062791						
ANR	1062916	Symbol	compiler		1062791						
ANR	1062917	Function	sljit_emit_return	614:0:18858:20569							
ANR	1062918	FunctionDef	"sljit_emit_return (struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw)"		1062917	0					
ANR	1062919	CompoundStatement		615:0:18985:20569	1062917	0					
ANR	1062920	IdentifierDeclStatement	"sljit_si local_size , i , tmp , offs ;"	616:1:18988:19021	1062917	0	True				
ANR	1062921	IdentifierDecl	local_size		1062917	0					
ANR	1062922	IdentifierDeclType	sljit_si		1062917	0					
ANR	1062923	Identifier	local_size		1062917	1					
ANR	1062924	IdentifierDecl	i		1062917	1					
ANR	1062925	IdentifierDeclType	sljit_si		1062917	0					
ANR	1062926	Identifier	i		1062917	1					
ANR	1062927	IdentifierDecl	tmp		1062917	2					
ANR	1062928	IdentifierDeclType	sljit_si		1062917	0					
ANR	1062929	Identifier	tmp		1062917	1					
ANR	1062930	IdentifierDecl	offs		1062917	3					
ANR	1062931	IdentifierDeclType	sljit_si		1062917	0					
ANR	1062932	Identifier	offs		1062917	1					
ANR	1062933	IdentifierDeclStatement	sljit_ins base ;	617:1:19024:19038	1062917	1	True				
ANR	1062934	IdentifierDecl	base		1062917	0					
ANR	1062935	IdentifierDeclType	sljit_ins		1062917	0					
ANR	1062936	Identifier	base		1062917	1					
ANR	1062937	ExpressionStatement	CHECK_ERROR ( )	619:1:19042:19055	1062917	2	True				
ANR	1062938	CallExpression	CHECK_ERROR ( )		1062917	0					
ANR	1062939	Callee	CHECK_ERROR		1062917	0					
ANR	1062940	Identifier	CHECK_ERROR		1062917	0					
ANR	1062941	ArgumentList			1062917	1					
ANR	1062942	ExpressionStatement	"CHECK ( check_sljit_emit_return ( compiler , op , src , srcw ) )"	620:1:19058:19113	1062917	3	True				
ANR	1062943	CallExpression	"CHECK ( check_sljit_emit_return ( compiler , op , src , srcw ) )"		1062917	0					
ANR	1062944	Callee	CHECK		1062917	0					
ANR	1062945	Identifier	CHECK		1062917	0					
ANR	1062946	ArgumentList	"check_sljit_emit_return ( compiler , op , src , srcw )"		1062917	1					
ANR	1062947	Argument	"check_sljit_emit_return ( compiler , op , src , srcw )"		1062917	0					
ANR	1062948	CallExpression	"check_sljit_emit_return ( compiler , op , src , srcw )"		1062917	0					
ANR	1062949	Callee	check_sljit_emit_return		1062917	0					
ANR	1062950	Identifier	check_sljit_emit_return		1062917	0					
ANR	1062951	ArgumentList	compiler		1062917	1					
ANR	1062952	Argument	compiler		1062917	0					
ANR	1062953	Identifier	compiler		1062917	0					
ANR	1062954	Argument	op		1062917	1					
ANR	1062955	Identifier	op		1062917	0					
ANR	1062956	Argument	src		1062917	2					
ANR	1062957	Identifier	src		1062917	0					
ANR	1062958	Argument	srcw		1062917	3					
ANR	1062959	Identifier	srcw		1062917	0					
ANR	1062960	ExpressionStatement	"FAIL_IF ( emit_mov_before_return ( compiler , op , src , srcw ) )"	622:1:19117:19173	1062917	4	True				
ANR	1062961	CallExpression	"FAIL_IF ( emit_mov_before_return ( compiler , op , src , srcw ) )"		1062917	0					
ANR	1062962	Callee	FAIL_IF		1062917	0					
ANR	1062963	Identifier	FAIL_IF		1062917	0					
ANR	1062964	ArgumentList	"emit_mov_before_return ( compiler , op , src , srcw )"		1062917	1					
ANR	1062965	Argument	"emit_mov_before_return ( compiler , op , src , srcw )"		1062917	0					
ANR	1062966	CallExpression	"emit_mov_before_return ( compiler , op , src , srcw )"		1062917	0					
ANR	1062967	Callee	emit_mov_before_return		1062917	0					
ANR	1062968	Identifier	emit_mov_before_return		1062917	0					
ANR	1062969	ArgumentList	compiler		1062917	1					
ANR	1062970	Argument	compiler		1062917	0					
ANR	1062971	Identifier	compiler		1062917	0					
ANR	1062972	Argument	op		1062917	1					
ANR	1062973	Identifier	op		1062917	0					
ANR	1062974	Argument	src		1062917	2					
ANR	1062975	Identifier	src		1062917	0					
ANR	1062976	Argument	srcw		1062917	3					
ANR	1062977	Identifier	srcw		1062917	0					
ANR	1062978	ExpressionStatement	local_size = compiler -> local_size	624:1:19177:19210	1062917	5	True				
ANR	1062979	AssignmentExpression	local_size = compiler -> local_size		1062917	0		=			
ANR	1062980	Identifier	local_size		1062917	0					
ANR	1062981	PtrMemberAccess	compiler -> local_size		1062917	1					
ANR	1062982	Identifier	compiler		1062917	0					
ANR	1062983	Identifier	local_size		1062917	1					
ANR	1062984	IfStatement	if ( local_size <= SIMM_MAX )		1062917	6					
ANR	1062985	Condition	local_size <= SIMM_MAX	625:5:19217:19238	1062917	0	True				
ANR	1062986	RelationalExpression	local_size <= SIMM_MAX		1062917	0		<=			
ANR	1062987	Identifier	local_size		1062917	0					
ANR	1062988	Identifier	SIMM_MAX		1062917	1					
ANR	1062989	ExpressionStatement	base = S ( SLJIT_SP )	626:2:19243:19261	1062917	1	True				
ANR	1062990	AssignmentExpression	base = S ( SLJIT_SP )		1062917	0		=			
ANR	1062991	Identifier	base		1062917	0					
ANR	1062992	CallExpression	S ( SLJIT_SP )		1062917	1					
ANR	1062993	Callee	S		1062917	0					
ANR	1062994	Identifier	S		1062917	0					
ANR	1062995	ArgumentList	SLJIT_SP		1062917	1					
ANR	1062996	Argument	SLJIT_SP		1062917	0					
ANR	1062997	Identifier	SLJIT_SP		1062917	0					
ANR	1062998	ElseStatement	else		1062917	0					
ANR	1062999	CompoundStatement		13:6:283:283	1062917	0					
ANR	1063000	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , DR ( TMP_REG1 ) , local_size ) )"	628:2:19273:19332	1062917	0	True				
ANR	1063001	CallExpression	"FAIL_IF ( load_immediate ( compiler , DR ( TMP_REG1 ) , local_size ) )"		1062917	0					
ANR	1063002	Callee	FAIL_IF		1062917	0					
ANR	1063003	Identifier	FAIL_IF		1062917	0					
ANR	1063004	ArgumentList	"load_immediate ( compiler , DR ( TMP_REG1 ) , local_size )"		1062917	1					
ANR	1063005	Argument	"load_immediate ( compiler , DR ( TMP_REG1 ) , local_size )"		1062917	0					
ANR	1063006	CallExpression	"load_immediate ( compiler , DR ( TMP_REG1 ) , local_size )"		1062917	0					
ANR	1063007	Callee	load_immediate		1062917	0					
ANR	1063008	Identifier	load_immediate		1062917	0					
ANR	1063009	ArgumentList	compiler		1062917	1					
ANR	1063010	Argument	compiler		1062917	0					
ANR	1063011	Identifier	compiler		1062917	0					
ANR	1063012	Argument	DR ( TMP_REG1 )		1062917	1					
ANR	1063013	CallExpression	DR ( TMP_REG1 )		1062917	0					
ANR	1063014	Callee	DR		1062917	0					
ANR	1063015	Identifier	DR		1062917	0					
ANR	1063016	ArgumentList	TMP_REG1		1062917	1					
ANR	1063017	Argument	TMP_REG1		1062917	0					
ANR	1063018	Identifier	TMP_REG1		1062917	0					
ANR	1063019	Argument	local_size		1062917	2					
ANR	1063020	Identifier	local_size		1062917	0					
ANR	1063021	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( SLJIT_SP ) | T ( TMP_REG1 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) ) )"	629:2:19336:19428	1062917	1	True				
ANR	1063022	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( SLJIT_SP ) | T ( TMP_REG1 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) ) )"		1062917	0					
ANR	1063023	Callee	FAIL_IF		1062917	0					
ANR	1063024	Identifier	FAIL_IF		1062917	0					
ANR	1063025	ArgumentList	"push_inst ( compiler , ADDU_W | S ( SLJIT_SP ) | T ( TMP_REG1 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) )"		1062917	1					
ANR	1063026	Argument	"push_inst ( compiler , ADDU_W | S ( SLJIT_SP ) | T ( TMP_REG1 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) )"		1062917	0					
ANR	1063027	CallExpression	"push_inst ( compiler , ADDU_W | S ( SLJIT_SP ) | T ( TMP_REG1 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) )"		1062917	0					
ANR	1063028	Callee	push_inst		1062917	0					
ANR	1063029	Identifier	push_inst		1062917	0					
ANR	1063030	ArgumentList	compiler		1062917	1					
ANR	1063031	Argument	compiler		1062917	0					
ANR	1063032	Identifier	compiler		1062917	0					
ANR	1063033	Argument	ADDU_W | S ( SLJIT_SP ) | T ( TMP_REG1 ) | D ( TMP_REG1 )		1062917	1					
ANR	1063034	InclusiveOrExpression	ADDU_W | S ( SLJIT_SP ) | T ( TMP_REG1 ) | D ( TMP_REG1 )		1062917	0		|			
ANR	1063035	Identifier	ADDU_W		1062917	0					
ANR	1063036	InclusiveOrExpression	S ( SLJIT_SP ) | T ( TMP_REG1 ) | D ( TMP_REG1 )		1062917	1		|			
ANR	1063037	CallExpression	S ( SLJIT_SP )		1062917	0					
ANR	1063038	Callee	S		1062917	0					
ANR	1063039	Identifier	S		1062917	0					
ANR	1063040	ArgumentList	SLJIT_SP		1062917	1					
ANR	1063041	Argument	SLJIT_SP		1062917	0					
ANR	1063042	Identifier	SLJIT_SP		1062917	0					
ANR	1063043	InclusiveOrExpression	T ( TMP_REG1 ) | D ( TMP_REG1 )		1062917	1		|			
ANR	1063044	CallExpression	T ( TMP_REG1 )		1062917	0					
ANR	1063045	Callee	T		1062917	0					
ANR	1063046	Identifier	T		1062917	0					
ANR	1063047	ArgumentList	TMP_REG1		1062917	1					
ANR	1063048	Argument	TMP_REG1		1062917	0					
ANR	1063049	Identifier	TMP_REG1		1062917	0					
ANR	1063050	CallExpression	D ( TMP_REG1 )		1062917	1					
ANR	1063051	Callee	D		1062917	0					
ANR	1063052	Identifier	D		1062917	0					
ANR	1063053	ArgumentList	TMP_REG1		1062917	1					
ANR	1063054	Argument	TMP_REG1		1062917	0					
ANR	1063055	Identifier	TMP_REG1		1062917	0					
ANR	1063056	Argument	DR ( TMP_REG1 )		1062917	2					
ANR	1063057	CallExpression	DR ( TMP_REG1 )		1062917	0					
ANR	1063058	Callee	DR		1062917	0					
ANR	1063059	Identifier	DR		1062917	0					
ANR	1063060	ArgumentList	TMP_REG1		1062917	1					
ANR	1063061	Argument	TMP_REG1		1062917	0					
ANR	1063062	Identifier	TMP_REG1		1062917	0					
ANR	1063063	ExpressionStatement	base = S ( TMP_REG1 )	630:2:19432:19450	1062917	2	True				
ANR	1063064	AssignmentExpression	base = S ( TMP_REG1 )		1062917	0		=			
ANR	1063065	Identifier	base		1062917	0					
ANR	1063066	CallExpression	S ( TMP_REG1 )		1062917	1					
ANR	1063067	Callee	S		1062917	0					
ANR	1063068	Identifier	S		1062917	0					
ANR	1063069	ArgumentList	TMP_REG1		1062917	1					
ANR	1063070	Argument	TMP_REG1		1062917	0					
ANR	1063071	Identifier	TMP_REG1		1062917	0					
ANR	1063072	ExpressionStatement	local_size = 0	631:2:19454:19468	1062917	3	True				
ANR	1063073	AssignmentExpression	local_size = 0		1062917	0		=			
ANR	1063074	Identifier	local_size		1062917	0					
ANR	1063075	PrimaryExpression	0		1062917	1					
ANR	1063076	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STACK_LOAD | base | TA ( RETURN_ADDR_REG ) | IMM ( local_size - ( sljit_si ) sizeof ( sljit_sw ) ) , RETURN_ADDR_REG ) )"	634:1:19475:19608	1062917	7	True				
ANR	1063077	CallExpression	"FAIL_IF ( push_inst ( compiler , STACK_LOAD | base | TA ( RETURN_ADDR_REG ) | IMM ( local_size - ( sljit_si ) sizeof ( sljit_sw ) ) , RETURN_ADDR_REG ) )"		1062917	0					
ANR	1063078	Callee	FAIL_IF		1062917	0					
ANR	1063079	Identifier	FAIL_IF		1062917	0					
ANR	1063080	ArgumentList	"push_inst ( compiler , STACK_LOAD | base | TA ( RETURN_ADDR_REG ) | IMM ( local_size - ( sljit_si ) sizeof ( sljit_sw ) ) , RETURN_ADDR_REG )"		1062917	1					
ANR	1063081	Argument	"push_inst ( compiler , STACK_LOAD | base | TA ( RETURN_ADDR_REG ) | IMM ( local_size - ( sljit_si ) sizeof ( sljit_sw ) ) , RETURN_ADDR_REG )"		1062917	0					
ANR	1063082	CallExpression	"push_inst ( compiler , STACK_LOAD | base | TA ( RETURN_ADDR_REG ) | IMM ( local_size - ( sljit_si ) sizeof ( sljit_sw ) ) , RETURN_ADDR_REG )"		1062917	0					
ANR	1063083	Callee	push_inst		1062917	0					
ANR	1063084	Identifier	push_inst		1062917	0					
ANR	1063085	ArgumentList	compiler		1062917	1					
ANR	1063086	Argument	compiler		1062917	0					
ANR	1063087	Identifier	compiler		1062917	0					
ANR	1063088	Argument	STACK_LOAD | base | TA ( RETURN_ADDR_REG ) | IMM ( local_size - ( sljit_si ) sizeof ( sljit_sw ) )		1062917	1					
ANR	1063089	InclusiveOrExpression	STACK_LOAD | base | TA ( RETURN_ADDR_REG ) | IMM ( local_size - ( sljit_si ) sizeof ( sljit_sw ) )		1062917	0		|			
ANR	1063090	Identifier	STACK_LOAD		1062917	0					
ANR	1063091	InclusiveOrExpression	base | TA ( RETURN_ADDR_REG ) | IMM ( local_size - ( sljit_si ) sizeof ( sljit_sw ) )		1062917	1		|			
ANR	1063092	Identifier	base		1062917	0					
ANR	1063093	InclusiveOrExpression	TA ( RETURN_ADDR_REG ) | IMM ( local_size - ( sljit_si ) sizeof ( sljit_sw ) )		1062917	1		|			
ANR	1063094	CallExpression	TA ( RETURN_ADDR_REG )		1062917	0					
ANR	1063095	Callee	TA		1062917	0					
ANR	1063096	Identifier	TA		1062917	0					
ANR	1063097	ArgumentList	RETURN_ADDR_REG		1062917	1					
ANR	1063098	Argument	RETURN_ADDR_REG		1062917	0					
ANR	1063099	Identifier	RETURN_ADDR_REG		1062917	0					
ANR	1063100	CallExpression	IMM ( local_size - ( sljit_si ) sizeof ( sljit_sw ) )		1062917	1					
ANR	1063101	Callee	IMM		1062917	0					
ANR	1063102	Identifier	IMM		1062917	0					
ANR	1063103	ArgumentList	local_size - ( sljit_si ) sizeof ( sljit_sw )		1062917	1					
ANR	1063104	Argument	local_size - ( sljit_si ) sizeof ( sljit_sw )		1062917	0					
ANR	1063105	AdditiveExpression	local_size - ( sljit_si ) sizeof ( sljit_sw )		1062917	0		-			
ANR	1063106	Identifier	local_size		1062917	0					
ANR	1063107	CastExpression	( sljit_si ) sizeof ( sljit_sw )		1062917	1					
ANR	1063108	CastTarget	sljit_si		1062917	0					
ANR	1063109	SizeofExpression	sizeof ( sljit_sw )		1062917	1					
ANR	1063110	Sizeof	sizeof		1062917	0					
ANR	1063111	SizeofOperand	sljit_sw		1062917	1					
ANR	1063112	Argument	RETURN_ADDR_REG		1062917	2					
ANR	1063113	Identifier	RETURN_ADDR_REG		1062917	0					
ANR	1063114	ExpressionStatement	"offs = local_size - ( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"	635:1:19611:19707	1062917	8	True				
ANR	1063115	AssignmentExpression	"offs = local_size - ( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"		1062917	0		=			
ANR	1063116	Identifier	offs		1062917	0					
ANR	1063117	AdditiveExpression	"local_size - ( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"		1062917	1		-			
ANR	1063118	Identifier	local_size		1062917	0					
ANR	1063119	CastExpression	"( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"		1062917	1					
ANR	1063120	CastTarget	sljit_si		1062917	0					
ANR	1063121	CallExpression	"GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"		1062917	1					
ANR	1063122	Callee	GET_SAVED_REGISTERS_SIZE		1062917	0					
ANR	1063123	Identifier	GET_SAVED_REGISTERS_SIZE		1062917	0					
ANR	1063124	ArgumentList	compiler -> scratches		1062917	1					
ANR	1063125	Argument	compiler -> scratches		1062917	0					
ANR	1063126	PtrMemberAccess	compiler -> scratches		1062917	0					
ANR	1063127	Identifier	compiler		1062917	0					
ANR	1063128	Identifier	scratches		1062917	1					
ANR	1063129	Argument	compiler -> saveds		1062917	1					
ANR	1063130	PtrMemberAccess	compiler -> saveds		1062917	0					
ANR	1063131	Identifier	compiler		1062917	0					
ANR	1063132	Identifier	saveds		1062917	1					
ANR	1063133	Argument	1		1062917	2					
ANR	1063134	PrimaryExpression	1		1062917	0					
ANR	1063135	ExpressionStatement	tmp = compiler -> scratches	637:1:19711:19736	1062917	9	True				
ANR	1063136	AssignmentExpression	tmp = compiler -> scratches		1062917	0		=			
ANR	1063137	Identifier	tmp		1062917	0					
ANR	1063138	PtrMemberAccess	compiler -> scratches		1062917	1					
ANR	1063139	Identifier	compiler		1062917	0					
ANR	1063140	Identifier	scratches		1062917	1					
ANR	1063141	ForStatement	for ( i = SLJIT_FIRST_SAVED_REG ; i <= tmp ; i ++ )		1062917	10					
ANR	1063142	ForInit	i = SLJIT_FIRST_SAVED_REG ;	638:6:19744:19769	1062917	0	True				
ANR	1063143	AssignmentExpression	i = SLJIT_FIRST_SAVED_REG		1062917	0		=			
ANR	1063144	Identifier	i		1062917	0					
ANR	1063145	Identifier	SLJIT_FIRST_SAVED_REG		1062917	1					
ANR	1063146	Condition	i <= tmp	638:33:19771:19778	1062917	1	True				
ANR	1063147	RelationalExpression	i <= tmp		1062917	0		<=			
ANR	1063148	Identifier	i		1062917	0					
ANR	1063149	Identifier	tmp		1062917	1					
ANR	1063150	PostIncDecOperationExpression	i ++	638:43:19781:19783	1062917	2	True				
ANR	1063151	Identifier	i		1062917	0					
ANR	1063152	IncDec	++		1062917	1					
ANR	1063153	CompoundStatement		24:48:800:800	1062917	3					
ANR	1063154	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STACK_LOAD | base | T ( i ) | IMM ( offs ) , DR ( i ) ) )"	639:2:19790:19863	1062917	0	True				
ANR	1063155	CallExpression	"FAIL_IF ( push_inst ( compiler , STACK_LOAD | base | T ( i ) | IMM ( offs ) , DR ( i ) ) )"		1062917	0					
ANR	1063156	Callee	FAIL_IF		1062917	0					
ANR	1063157	Identifier	FAIL_IF		1062917	0					
ANR	1063158	ArgumentList	"push_inst ( compiler , STACK_LOAD | base | T ( i ) | IMM ( offs ) , DR ( i ) )"		1062917	1					
ANR	1063159	Argument	"push_inst ( compiler , STACK_LOAD | base | T ( i ) | IMM ( offs ) , DR ( i ) )"		1062917	0					
ANR	1063160	CallExpression	"push_inst ( compiler , STACK_LOAD | base | T ( i ) | IMM ( offs ) , DR ( i ) )"		1062917	0					
ANR	1063161	Callee	push_inst		1062917	0					
ANR	1063162	Identifier	push_inst		1062917	0					
ANR	1063163	ArgumentList	compiler		1062917	1					
ANR	1063164	Argument	compiler		1062917	0					
ANR	1063165	Identifier	compiler		1062917	0					
ANR	1063166	Argument	STACK_LOAD | base | T ( i ) | IMM ( offs )		1062917	1					
ANR	1063167	InclusiveOrExpression	STACK_LOAD | base | T ( i ) | IMM ( offs )		1062917	0		|			
ANR	1063168	Identifier	STACK_LOAD		1062917	0					
ANR	1063169	InclusiveOrExpression	base | T ( i ) | IMM ( offs )		1062917	1		|			
ANR	1063170	Identifier	base		1062917	0					
ANR	1063171	InclusiveOrExpression	T ( i ) | IMM ( offs )		1062917	1		|			
ANR	1063172	CallExpression	T ( i )		1062917	0					
ANR	1063173	Callee	T		1062917	0					
ANR	1063174	Identifier	T		1062917	0					
ANR	1063175	ArgumentList	i		1062917	1					
ANR	1063176	Argument	i		1062917	0					
ANR	1063177	Identifier	i		1062917	0					
ANR	1063178	CallExpression	IMM ( offs )		1062917	1					
ANR	1063179	Callee	IMM		1062917	0					
ANR	1063180	Identifier	IMM		1062917	0					
ANR	1063181	ArgumentList	offs		1062917	1					
ANR	1063182	Argument	offs		1062917	0					
ANR	1063183	Identifier	offs		1062917	0					
ANR	1063184	Argument	DR ( i )		1062917	2					
ANR	1063185	CallExpression	DR ( i )		1062917	0					
ANR	1063186	Callee	DR		1062917	0					
ANR	1063187	Identifier	DR		1062917	0					
ANR	1063188	ArgumentList	i		1062917	1					
ANR	1063189	Argument	i		1062917	0					
ANR	1063190	Identifier	i		1062917	0					
ANR	1063191	ExpressionStatement	offs += ( sljit_si ) ( sizeof ( sljit_sw ) )	640:2:19867:19903	1062917	1	True				
ANR	1063192	AssignmentExpression	offs += ( sljit_si ) ( sizeof ( sljit_sw ) )		1062917	0		+=			
ANR	1063193	Identifier	offs		1062917	0					
ANR	1063194	CastExpression	( sljit_si ) ( sizeof ( sljit_sw ) )		1062917	1					
ANR	1063195	CastTarget	sljit_si		1062917	0					
ANR	1063196	SizeofExpression	sizeof ( sljit_sw )		1062917	1					
ANR	1063197	Sizeof	sizeof		1062917	0					
ANR	1063198	SizeofOperand	sljit_sw		1062917	1					
ANR	1063199	ExpressionStatement	tmp = compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - compiler -> saveds ) : SLJIT_FIRST_SAVED_REG	643:1:19910:20026	1062917	11	True				
ANR	1063200	AssignmentExpression	tmp = compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - compiler -> saveds ) : SLJIT_FIRST_SAVED_REG		1062917	0		=			
ANR	1063201	Identifier	tmp		1062917	0					
ANR	1063202	ConditionalExpression	compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - compiler -> saveds ) : SLJIT_FIRST_SAVED_REG		1062917	1					
ANR	1063203	Condition	compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1062917	0					
ANR	1063204	RelationalExpression	compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1062917	0		<			
ANR	1063205	PtrMemberAccess	compiler -> saveds		1062917	0					
ANR	1063206	Identifier	compiler		1062917	0					
ANR	1063207	Identifier	saveds		1062917	1					
ANR	1063208	Identifier	SLJIT_NUMBER_OF_SAVED_REGISTERS		1062917	1					
ANR	1063209	AdditiveExpression	SLJIT_S0 + 1 - compiler -> saveds		1062917	1		+			
ANR	1063210	Identifier	SLJIT_S0		1062917	0					
ANR	1063211	AdditiveExpression	1 - compiler -> saveds		1062917	1		-			
ANR	1063212	PrimaryExpression	1		1062917	0					
ANR	1063213	PtrMemberAccess	compiler -> saveds		1062917	1					
ANR	1063214	Identifier	compiler		1062917	0					
ANR	1063215	Identifier	saveds		1062917	1					
ANR	1063216	Identifier	SLJIT_FIRST_SAVED_REG		1062917	2					
ANR	1063217	ForStatement	for ( i = tmp ; i <= SLJIT_S0 ; i ++ )		1062917	12					
ANR	1063218	ForInit	i = tmp ;	644:6:20034:20041	1062917	0	True				
ANR	1063219	AssignmentExpression	i = tmp		1062917	0		=			
ANR	1063220	Identifier	i		1062917	0					
ANR	1063221	Identifier	tmp		1062917	1					
ANR	1063222	Condition	i <= SLJIT_S0	644:15:20043:20055	1062917	1	True				
ANR	1063223	RelationalExpression	i <= SLJIT_S0		1062917	0		<=			
ANR	1063224	Identifier	i		1062917	0					
ANR	1063225	Identifier	SLJIT_S0		1062917	1					
ANR	1063226	PostIncDecOperationExpression	i ++	644:30:20058:20060	1062917	2	True				
ANR	1063227	Identifier	i		1062917	0					
ANR	1063228	IncDec	++		1062917	1					
ANR	1063229	CompoundStatement		30:35:1077:1077	1062917	3					
ANR	1063230	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STACK_LOAD | base | T ( i ) | IMM ( offs ) , DR ( i ) ) )"	645:2:20067:20140	1062917	0	True				
ANR	1063231	CallExpression	"FAIL_IF ( push_inst ( compiler , STACK_LOAD | base | T ( i ) | IMM ( offs ) , DR ( i ) ) )"		1062917	0					
ANR	1063232	Callee	FAIL_IF		1062917	0					
ANR	1063233	Identifier	FAIL_IF		1062917	0					
ANR	1063234	ArgumentList	"push_inst ( compiler , STACK_LOAD | base | T ( i ) | IMM ( offs ) , DR ( i ) )"		1062917	1					
ANR	1063235	Argument	"push_inst ( compiler , STACK_LOAD | base | T ( i ) | IMM ( offs ) , DR ( i ) )"		1062917	0					
ANR	1063236	CallExpression	"push_inst ( compiler , STACK_LOAD | base | T ( i ) | IMM ( offs ) , DR ( i ) )"		1062917	0					
ANR	1063237	Callee	push_inst		1062917	0					
ANR	1063238	Identifier	push_inst		1062917	0					
ANR	1063239	ArgumentList	compiler		1062917	1					
ANR	1063240	Argument	compiler		1062917	0					
ANR	1063241	Identifier	compiler		1062917	0					
ANR	1063242	Argument	STACK_LOAD | base | T ( i ) | IMM ( offs )		1062917	1					
ANR	1063243	InclusiveOrExpression	STACK_LOAD | base | T ( i ) | IMM ( offs )		1062917	0		|			
ANR	1063244	Identifier	STACK_LOAD		1062917	0					
ANR	1063245	InclusiveOrExpression	base | T ( i ) | IMM ( offs )		1062917	1		|			
ANR	1063246	Identifier	base		1062917	0					
ANR	1063247	InclusiveOrExpression	T ( i ) | IMM ( offs )		1062917	1		|			
ANR	1063248	CallExpression	T ( i )		1062917	0					
ANR	1063249	Callee	T		1062917	0					
ANR	1063250	Identifier	T		1062917	0					
ANR	1063251	ArgumentList	i		1062917	1					
ANR	1063252	Argument	i		1062917	0					
ANR	1063253	Identifier	i		1062917	0					
ANR	1063254	CallExpression	IMM ( offs )		1062917	1					
ANR	1063255	Callee	IMM		1062917	0					
ANR	1063256	Identifier	IMM		1062917	0					
ANR	1063257	ArgumentList	offs		1062917	1					
ANR	1063258	Argument	offs		1062917	0					
ANR	1063259	Identifier	offs		1062917	0					
ANR	1063260	Argument	DR ( i )		1062917	2					
ANR	1063261	CallExpression	DR ( i )		1062917	0					
ANR	1063262	Callee	DR		1062917	0					
ANR	1063263	Identifier	DR		1062917	0					
ANR	1063264	ArgumentList	i		1062917	1					
ANR	1063265	Argument	i		1062917	0					
ANR	1063266	Identifier	i		1062917	0					
ANR	1063267	ExpressionStatement	offs += ( sljit_si ) ( sizeof ( sljit_sw ) )	646:2:20144:20180	1062917	1	True				
ANR	1063268	AssignmentExpression	offs += ( sljit_si ) ( sizeof ( sljit_sw ) )		1062917	0		+=			
ANR	1063269	Identifier	offs		1062917	0					
ANR	1063270	CastExpression	( sljit_si ) ( sizeof ( sljit_sw ) )		1062917	1					
ANR	1063271	CastTarget	sljit_si		1062917	0					
ANR	1063272	SizeofExpression	sizeof ( sljit_sw )		1062917	1					
ANR	1063273	Sizeof	sizeof		1062917	0					
ANR	1063274	SizeofOperand	sljit_sw		1062917	1					
ANR	1063275	ExpressionStatement	SLJIT_ASSERT ( offs == local_size - ( sljit_sw ) ( sizeof ( sljit_sw ) ) )	649:1:20187:20250	1062917	13	True				
ANR	1063276	CallExpression	SLJIT_ASSERT ( offs == local_size - ( sljit_sw ) ( sizeof ( sljit_sw ) ) )		1062917	0					
ANR	1063277	Callee	SLJIT_ASSERT		1062917	0					
ANR	1063278	Identifier	SLJIT_ASSERT		1062917	0					
ANR	1063279	ArgumentList	offs == local_size - ( sljit_sw ) ( sizeof ( sljit_sw ) )		1062917	1					
ANR	1063280	Argument	offs == local_size - ( sljit_sw ) ( sizeof ( sljit_sw ) )		1062917	0					
ANR	1063281	EqualityExpression	offs == local_size - ( sljit_sw ) ( sizeof ( sljit_sw ) )		1062917	0		==			
ANR	1063282	Identifier	offs		1062917	0					
ANR	1063283	AdditiveExpression	local_size - ( sljit_sw ) ( sizeof ( sljit_sw ) )		1062917	1		-			
ANR	1063284	Identifier	local_size		1062917	0					
ANR	1063285	CastExpression	( sljit_sw ) ( sizeof ( sljit_sw ) )		1062917	1					
ANR	1063286	CastTarget	sljit_sw		1062917	0					
ANR	1063287	SizeofExpression	sizeof ( sljit_sw )		1062917	1					
ANR	1063288	Sizeof	sizeof		1062917	0					
ANR	1063289	SizeofOperand	sljit_sw		1062917	1					
ANR	1063290	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , JR | SA ( RETURN_ADDR_REG ) , UNMOVABLE_INS ) )"	651:1:20254:20323	1062917	14	True				
ANR	1063291	CallExpression	"FAIL_IF ( push_inst ( compiler , JR | SA ( RETURN_ADDR_REG ) , UNMOVABLE_INS ) )"		1062917	0					
ANR	1063292	Callee	FAIL_IF		1062917	0					
ANR	1063293	Identifier	FAIL_IF		1062917	0					
ANR	1063294	ArgumentList	"push_inst ( compiler , JR | SA ( RETURN_ADDR_REG ) , UNMOVABLE_INS )"		1062917	1					
ANR	1063295	Argument	"push_inst ( compiler , JR | SA ( RETURN_ADDR_REG ) , UNMOVABLE_INS )"		1062917	0					
ANR	1063296	CallExpression	"push_inst ( compiler , JR | SA ( RETURN_ADDR_REG ) , UNMOVABLE_INS )"		1062917	0					
ANR	1063297	Callee	push_inst		1062917	0					
ANR	1063298	Identifier	push_inst		1062917	0					
ANR	1063299	ArgumentList	compiler		1062917	1					
ANR	1063300	Argument	compiler		1062917	0					
ANR	1063301	Identifier	compiler		1062917	0					
ANR	1063302	Argument	JR | SA ( RETURN_ADDR_REG )		1062917	1					
ANR	1063303	InclusiveOrExpression	JR | SA ( RETURN_ADDR_REG )		1062917	0		|			
ANR	1063304	Identifier	JR		1062917	0					
ANR	1063305	CallExpression	SA ( RETURN_ADDR_REG )		1062917	1					
ANR	1063306	Callee	SA		1062917	0					
ANR	1063307	Identifier	SA		1062917	0					
ANR	1063308	ArgumentList	RETURN_ADDR_REG		1062917	1					
ANR	1063309	Argument	RETURN_ADDR_REG		1062917	0					
ANR	1063310	Identifier	RETURN_ADDR_REG		1062917	0					
ANR	1063311	Argument	UNMOVABLE_INS		1062917	2					
ANR	1063312	Identifier	UNMOVABLE_INS		1062917	0					
ANR	1063313	IfStatement	if ( compiler -> local_size <= SIMM_MAX )		1062917	15					
ANR	1063314	Condition	compiler -> local_size <= SIMM_MAX	652:5:20330:20361	1062917	0	True				
ANR	1063315	RelationalExpression	compiler -> local_size <= SIMM_MAX		1062917	0		<=			
ANR	1063316	PtrMemberAccess	compiler -> local_size		1062917	0					
ANR	1063317	Identifier	compiler		1062917	0					
ANR	1063318	Identifier	local_size		1062917	1					
ANR	1063319	Identifier	SIMM_MAX		1062917	1					
ANR	1063320	ReturnStatement	"return push_inst ( compiler , ADDIU_W | S ( SLJIT_SP ) | T ( SLJIT_SP ) | IMM ( compiler -> local_size ) , UNMOVABLE_INS ) ;"	653:2:20366:20472	1062917	1	True				
ANR	1063321	CallExpression	"push_inst ( compiler , ADDIU_W | S ( SLJIT_SP ) | T ( SLJIT_SP ) | IMM ( compiler -> local_size ) , UNMOVABLE_INS )"		1062917	0					
ANR	1063322	Callee	push_inst		1062917	0					
ANR	1063323	Identifier	push_inst		1062917	0					
ANR	1063324	ArgumentList	compiler		1062917	1					
ANR	1063325	Argument	compiler		1062917	0					
ANR	1063326	Identifier	compiler		1062917	0					
ANR	1063327	Argument	ADDIU_W | S ( SLJIT_SP ) | T ( SLJIT_SP ) | IMM ( compiler -> local_size )		1062917	1					
ANR	1063328	InclusiveOrExpression	ADDIU_W | S ( SLJIT_SP ) | T ( SLJIT_SP ) | IMM ( compiler -> local_size )		1062917	0		|			
ANR	1063329	Identifier	ADDIU_W		1062917	0					
ANR	1063330	InclusiveOrExpression	S ( SLJIT_SP ) | T ( SLJIT_SP ) | IMM ( compiler -> local_size )		1062917	1		|			
ANR	1063331	CallExpression	S ( SLJIT_SP )		1062917	0					
ANR	1063332	Callee	S		1062917	0					
ANR	1063333	Identifier	S		1062917	0					
ANR	1063334	ArgumentList	SLJIT_SP		1062917	1					
ANR	1063335	Argument	SLJIT_SP		1062917	0					
ANR	1063336	Identifier	SLJIT_SP		1062917	0					
ANR	1063337	InclusiveOrExpression	T ( SLJIT_SP ) | IMM ( compiler -> local_size )		1062917	1		|			
ANR	1063338	CallExpression	T ( SLJIT_SP )		1062917	0					
ANR	1063339	Callee	T		1062917	0					
ANR	1063340	Identifier	T		1062917	0					
ANR	1063341	ArgumentList	SLJIT_SP		1062917	1					
ANR	1063342	Argument	SLJIT_SP		1062917	0					
ANR	1063343	Identifier	SLJIT_SP		1062917	0					
ANR	1063344	CallExpression	IMM ( compiler -> local_size )		1062917	1					
ANR	1063345	Callee	IMM		1062917	0					
ANR	1063346	Identifier	IMM		1062917	0					
ANR	1063347	ArgumentList	compiler -> local_size		1062917	1					
ANR	1063348	Argument	compiler -> local_size		1062917	0					
ANR	1063349	PtrMemberAccess	compiler -> local_size		1062917	0					
ANR	1063350	Identifier	compiler		1062917	0					
ANR	1063351	Identifier	local_size		1062917	1					
ANR	1063352	Argument	UNMOVABLE_INS		1062917	2					
ANR	1063353	Identifier	UNMOVABLE_INS		1062917	0					
ANR	1063354	ElseStatement	else		1062917	0					
ANR	1063355	ReturnStatement	"return push_inst ( compiler , ADDU_W | S ( TMP_REG1 ) | TA ( 0 ) | D ( SLJIT_SP ) , UNMOVABLE_INS ) ;"	655:2:20482:20567	1062917	0	True				
ANR	1063356	CallExpression	"push_inst ( compiler , ADDU_W | S ( TMP_REG1 ) | TA ( 0 ) | D ( SLJIT_SP ) , UNMOVABLE_INS )"		1062917	0					
ANR	1063357	Callee	push_inst		1062917	0					
ANR	1063358	Identifier	push_inst		1062917	0					
ANR	1063359	ArgumentList	compiler		1062917	1					
ANR	1063360	Argument	compiler		1062917	0					
ANR	1063361	Identifier	compiler		1062917	0					
ANR	1063362	Argument	ADDU_W | S ( TMP_REG1 ) | TA ( 0 ) | D ( SLJIT_SP )		1062917	1					
ANR	1063363	InclusiveOrExpression	ADDU_W | S ( TMP_REG1 ) | TA ( 0 ) | D ( SLJIT_SP )		1062917	0		|			
ANR	1063364	Identifier	ADDU_W		1062917	0					
ANR	1063365	InclusiveOrExpression	S ( TMP_REG1 ) | TA ( 0 ) | D ( SLJIT_SP )		1062917	1		|			
ANR	1063366	CallExpression	S ( TMP_REG1 )		1062917	0					
ANR	1063367	Callee	S		1062917	0					
ANR	1063368	Identifier	S		1062917	0					
ANR	1063369	ArgumentList	TMP_REG1		1062917	1					
ANR	1063370	Argument	TMP_REG1		1062917	0					
ANR	1063371	Identifier	TMP_REG1		1062917	0					
ANR	1063372	InclusiveOrExpression	TA ( 0 ) | D ( SLJIT_SP )		1062917	1		|			
ANR	1063373	CallExpression	TA ( 0 )		1062917	0					
ANR	1063374	Callee	TA		1062917	0					
ANR	1063375	Identifier	TA		1062917	0					
ANR	1063376	ArgumentList	0		1062917	1					
ANR	1063377	Argument	0		1062917	0					
ANR	1063378	PrimaryExpression	0		1062917	0					
ANR	1063379	CallExpression	D ( SLJIT_SP )		1062917	1					
ANR	1063380	Callee	D		1062917	0					
ANR	1063381	Identifier	D		1062917	0					
ANR	1063382	ArgumentList	SLJIT_SP		1062917	1					
ANR	1063383	Argument	SLJIT_SP		1062917	0					
ANR	1063384	Identifier	SLJIT_SP		1062917	0					
ANR	1063385	Argument	UNMOVABLE_INS		1062917	2					
ANR	1063386	Identifier	UNMOVABLE_INS		1062917	0					
ANR	1063387	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1062917	1					
ANR	1063388	Identifier	sljit_emit_return		1062917	2					
ANR	1063389	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw"		1062917	3					
ANR	1063390	Parameter	struct sljit_compiler * compiler	614:52:18910:18940	1062917	0	True				
ANR	1063391	ParameterType	struct sljit_compiler *		1062917	0					
ANR	1063392	Identifier	compiler		1062917	1					
ANR	1063393	Parameter	sljit_si op	614:85:18943:18953	1062917	1	True				
ANR	1063394	ParameterType	sljit_si		1062917	0					
ANR	1063395	Identifier	op		1062917	1					
ANR	1063396	Parameter	sljit_si src	614:98:18956:18967	1062917	2	True				
ANR	1063397	ParameterType	sljit_si		1062917	0					
ANR	1063398	Identifier	src		1062917	1					
ANR	1063399	Parameter	sljit_sw srcw	614:112:18970:18982	1062917	3	True				
ANR	1063400	ParameterType	sljit_sw		1062917	0					
ANR	1063401	Identifier	srcw		1062917	1					
ANR	1063402	CFGEntryNode	ENTRY		1062917		True				
ANR	1063403	CFGExitNode	EXIT		1062917		True				
ANR	1063404	Symbol	TMP_REG1		1062917						
ANR	1063405	Symbol	compiler -> scratches		1062917						
ANR	1063406	Symbol	D		1062917						
ANR	1063407	Symbol	ADDU_W		1062917						
ANR	1063408	Symbol	RETURN_ADDR_REG		1062917						
ANR	1063409	Symbol	JR		1062917						
ANR	1063410	Symbol	* compiler		1062917						
ANR	1063411	Symbol	SIMM_MAX		1062917						
ANR	1063412	Symbol	SLJIT_NUMBER_OF_SAVED_REGISTERS		1062917						
ANR	1063413	Symbol	SLJIT_SP		1062917						
ANR	1063414	Symbol	DR		1062917						
ANR	1063415	Symbol	SA		1062917						
ANR	1063416	Symbol	offs		1062917						
ANR	1063417	Symbol	S		1062917						
ANR	1063418	Symbol	load_immediate		1062917						
ANR	1063419	Symbol	T		1062917						
ANR	1063420	Symbol	check_sljit_emit_return		1062917						
ANR	1063421	Symbol	tmp		1062917						
ANR	1063422	Symbol	STACK_LOAD		1062917						
ANR	1063423	Symbol	ADDIU_W		1062917						
ANR	1063424	Symbol	compiler		1062917						
ANR	1063425	Symbol	GET_SAVED_REGISTERS_SIZE		1062917						
ANR	1063426	Symbol	op		1062917						
ANR	1063427	Symbol	local_size		1062917						
ANR	1063428	Symbol	push_inst		1062917						
ANR	1063429	Symbol	src		1062917						
ANR	1063430	Symbol	srcw		1062917						
ANR	1063431	Symbol	UNMOVABLE_INS		1062917						
ANR	1063432	Symbol	IMM		1062917						
ANR	1063433	Symbol	i		1062917						
ANR	1063434	Symbol	TA		1062917						
ANR	1063435	Symbol	SLJIT_S0		1062917						
ANR	1063436	Symbol	compiler -> local_size		1062917						
ANR	1063437	Symbol	compiler -> saveds		1062917						
ANR	1063438	Symbol	SLJIT_FIRST_SAVED_REG		1062917						
ANR	1063439	Symbol	emit_mov_before_return		1062917						
ANR	1063440	Symbol	base		1062917						
ANR	1063441	DeclStmt									
ANR	1063442	Decl							SLJIT_CONST sljit_ins	SLJIT_CONST sljit_ins [ 16 + 4 ]	data_transfer_insts
ANR	1063443	Function	getput_arg_fast	701:0:21888:22503							
ANR	1063444	FunctionDef	"getput_arg_fast (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg_ar , sljit_si arg , sljit_sw argw)"		1063443	0					
ANR	1063445	CompoundStatement		702:0:22015:22503	1063443	0					
ANR	1063446	ExpressionStatement	SLJIT_ASSERT ( arg & SLJIT_MEM )	703:1:22018:22047	1063443	0	True				
ANR	1063447	CallExpression	SLJIT_ASSERT ( arg & SLJIT_MEM )		1063443	0					
ANR	1063448	Callee	SLJIT_ASSERT		1063443	0					
ANR	1063449	Identifier	SLJIT_ASSERT		1063443	0					
ANR	1063450	ArgumentList	arg & SLJIT_MEM		1063443	1					
ANR	1063451	Argument	arg & SLJIT_MEM		1063443	0					
ANR	1063452	BitAndExpression	arg & SLJIT_MEM		1063443	0		&			
ANR	1063453	Identifier	arg		1063443	0					
ANR	1063454	Identifier	SLJIT_MEM		1063443	1					
ANR	1063455	IfStatement	if ( ( ! ( flags & WRITE_BACK ) || ! ( arg & REG_MASK ) ) && ! ( arg & OFFS_REG_MASK ) && argw <= SIMM_MAX && argw >= SIMM_MIN )		1063443	1					
ANR	1063456	Condition	( ! ( flags & WRITE_BACK ) || ! ( arg & REG_MASK ) ) && ! ( arg & OFFS_REG_MASK ) && argw <= SIMM_MAX && argw >= SIMM_MIN	705:5:22055:22164	1063443	0	True				
ANR	1063457	AndExpression	( ! ( flags & WRITE_BACK ) || ! ( arg & REG_MASK ) ) && ! ( arg & OFFS_REG_MASK ) && argw <= SIMM_MAX && argw >= SIMM_MIN		1063443	0		&&			
ANR	1063458	OrExpression	! ( flags & WRITE_BACK ) || ! ( arg & REG_MASK )		1063443	0		||			
ANR	1063459	UnaryOperationExpression	! ( flags & WRITE_BACK )		1063443	0					
ANR	1063460	UnaryOperator	!		1063443	0					
ANR	1063461	BitAndExpression	flags & WRITE_BACK		1063443	1		&			
ANR	1063462	Identifier	flags		1063443	0					
ANR	1063463	Identifier	WRITE_BACK		1063443	1					
ANR	1063464	UnaryOperationExpression	! ( arg & REG_MASK )		1063443	1					
ANR	1063465	UnaryOperator	!		1063443	0					
ANR	1063466	BitAndExpression	arg & REG_MASK		1063443	1		&			
ANR	1063467	Identifier	arg		1063443	0					
ANR	1063468	Identifier	REG_MASK		1063443	1					
ANR	1063469	AndExpression	! ( arg & OFFS_REG_MASK ) && argw <= SIMM_MAX && argw >= SIMM_MIN		1063443	1		&&			
ANR	1063470	UnaryOperationExpression	! ( arg & OFFS_REG_MASK )		1063443	0					
ANR	1063471	UnaryOperator	!		1063443	0					
ANR	1063472	BitAndExpression	arg & OFFS_REG_MASK		1063443	1		&			
ANR	1063473	Identifier	arg		1063443	0					
ANR	1063474	Identifier	OFFS_REG_MASK		1063443	1					
ANR	1063475	AndExpression	argw <= SIMM_MAX && argw >= SIMM_MIN		1063443	1		&&			
ANR	1063476	RelationalExpression	argw <= SIMM_MAX		1063443	0		<=			
ANR	1063477	Identifier	argw		1063443	0					
ANR	1063478	Identifier	SIMM_MAX		1063443	1					
ANR	1063479	RelationalExpression	argw >= SIMM_MIN		1063443	1		>=			
ANR	1063480	Identifier	argw		1063443	0					
ANR	1063481	Identifier	SIMM_MIN		1063443	1					
ANR	1063482	CompoundStatement		4:117:151:151	1063443	1					
ANR	1063483	IfStatement	if ( SLJIT_UNLIKELY ( flags & ARG_TEST ) )		1063443	0					
ANR	1063484	Condition	SLJIT_UNLIKELY ( flags & ARG_TEST )	707:6:22231:22262	1063443	0	True				
ANR	1063485	CallExpression	SLJIT_UNLIKELY ( flags & ARG_TEST )		1063443	0					
ANR	1063486	Callee	SLJIT_UNLIKELY		1063443	0					
ANR	1063487	Identifier	SLJIT_UNLIKELY		1063443	0					
ANR	1063488	ArgumentList	flags & ARG_TEST		1063443	1					
ANR	1063489	Argument	flags & ARG_TEST		1063443	0					
ANR	1063490	BitAndExpression	flags & ARG_TEST		1063443	0		&			
ANR	1063491	Identifier	flags		1063443	0					
ANR	1063492	Identifier	ARG_TEST		1063443	1					
ANR	1063493	ReturnStatement	return 1 ;	708:3:22268:22276	1063443	1	True				
ANR	1063494	PrimaryExpression	1		1063443	0					
ANR	1063495	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( arg & REG_MASK ) | TA ( reg_ar ) | IMM ( argw ) , ( ( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA ) ) ? reg_ar : MOVABLE_INS ) )"	709:2:22280:22474	1063443	1	True				
ANR	1063496	CallExpression	"FAIL_IF ( push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( arg & REG_MASK ) | TA ( reg_ar ) | IMM ( argw ) , ( ( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA ) ) ? reg_ar : MOVABLE_INS ) )"		1063443	0					
ANR	1063497	Callee	FAIL_IF		1063443	0					
ANR	1063498	Identifier	FAIL_IF		1063443	0					
ANR	1063499	ArgumentList	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( arg & REG_MASK ) | TA ( reg_ar ) | IMM ( argw ) , ( ( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA ) ) ? reg_ar : MOVABLE_INS )"		1063443	1					
ANR	1063500	Argument	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( arg & REG_MASK ) | TA ( reg_ar ) | IMM ( argw ) , ( ( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA ) ) ? reg_ar : MOVABLE_INS )"		1063443	0					
ANR	1063501	CallExpression	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( arg & REG_MASK ) | TA ( reg_ar ) | IMM ( argw ) , ( ( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA ) ) ? reg_ar : MOVABLE_INS )"		1063443	0					
ANR	1063502	Callee	push_inst		1063443	0					
ANR	1063503	Identifier	push_inst		1063443	0					
ANR	1063504	ArgumentList	compiler		1063443	1					
ANR	1063505	Argument	compiler		1063443	0					
ANR	1063506	Identifier	compiler		1063443	0					
ANR	1063507	Argument	data_transfer_insts [ flags & MEM_MASK ] | S ( arg & REG_MASK ) | TA ( reg_ar ) | IMM ( argw )		1063443	1					
ANR	1063508	InclusiveOrExpression	data_transfer_insts [ flags & MEM_MASK ] | S ( arg & REG_MASK ) | TA ( reg_ar ) | IMM ( argw )		1063443	0		|			
ANR	1063509	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1063443	0					
ANR	1063510	Identifier	data_transfer_insts		1063443	0					
ANR	1063511	BitAndExpression	flags & MEM_MASK		1063443	1		&			
ANR	1063512	Identifier	flags		1063443	0					
ANR	1063513	Identifier	MEM_MASK		1063443	1					
ANR	1063514	InclusiveOrExpression	S ( arg & REG_MASK ) | TA ( reg_ar ) | IMM ( argw )		1063443	1		|			
ANR	1063515	CallExpression	S ( arg & REG_MASK )		1063443	0					
ANR	1063516	Callee	S		1063443	0					
ANR	1063517	Identifier	S		1063443	0					
ANR	1063518	ArgumentList	arg & REG_MASK		1063443	1					
ANR	1063519	Argument	arg & REG_MASK		1063443	0					
ANR	1063520	BitAndExpression	arg & REG_MASK		1063443	0		&			
ANR	1063521	Identifier	arg		1063443	0					
ANR	1063522	Identifier	REG_MASK		1063443	1					
ANR	1063523	InclusiveOrExpression	TA ( reg_ar ) | IMM ( argw )		1063443	1		|			
ANR	1063524	CallExpression	TA ( reg_ar )		1063443	0					
ANR	1063525	Callee	TA		1063443	0					
ANR	1063526	Identifier	TA		1063443	0					
ANR	1063527	ArgumentList	reg_ar		1063443	1					
ANR	1063528	Argument	reg_ar		1063443	0					
ANR	1063529	Identifier	reg_ar		1063443	0					
ANR	1063530	CallExpression	IMM ( argw )		1063443	1					
ANR	1063531	Callee	IMM		1063443	0					
ANR	1063532	Identifier	IMM		1063443	0					
ANR	1063533	ArgumentList	argw		1063443	1					
ANR	1063534	Argument	argw		1063443	0					
ANR	1063535	Identifier	argw		1063443	0					
ANR	1063536	Argument	( ( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA ) ) ? reg_ar : MOVABLE_INS		1063443	2					
ANR	1063537	ConditionalExpression	( ( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA ) ) ? reg_ar : MOVABLE_INS		1063443	0					
ANR	1063538	Condition	( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA )		1063443	0					
ANR	1063539	AndExpression	( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA )		1063443	0		&&			
ANR	1063540	RelationalExpression	( flags & MEM_MASK ) <= GPR_REG		1063443	0		<=			
ANR	1063541	BitAndExpression	flags & MEM_MASK		1063443	0		&			
ANR	1063542	Identifier	flags		1063443	0					
ANR	1063543	Identifier	MEM_MASK		1063443	1					
ANR	1063544	Identifier	GPR_REG		1063443	1					
ANR	1063545	BitAndExpression	flags & LOAD_DATA		1063443	1		&			
ANR	1063546	Identifier	flags		1063443	0					
ANR	1063547	Identifier	LOAD_DATA		1063443	1					
ANR	1063548	Identifier	reg_ar		1063443	1					
ANR	1063549	Identifier	MOVABLE_INS		1063443	2					
ANR	1063550	ReturnStatement	return - 1 ;	711:2:22478:22487	1063443	2	True				
ANR	1063551	UnaryOperationExpression	- 1		1063443	0					
ANR	1063552	UnaryOperator	-		1063443	0					
ANR	1063553	PrimaryExpression	1		1063443	1					
ANR	1063554	ReturnStatement	return 0 ;	713:1:22493:22501	1063443	2	True				
ANR	1063555	PrimaryExpression	0		1063443	0					
ANR	1063556	ReturnType	static sljit_si		1063443	1					
ANR	1063557	Identifier	getput_arg_fast		1063443	2					
ANR	1063558	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg_ar , sljit_si arg , sljit_sw argw"		1063443	3					
ANR	1063559	Parameter	struct sljit_compiler * compiler	701:32:21920:21950	1063443	0	True				
ANR	1063560	ParameterType	struct sljit_compiler *		1063443	0					
ANR	1063561	Identifier	compiler		1063443	1					
ANR	1063562	Parameter	sljit_si flags	701:65:21953:21966	1063443	1	True				
ANR	1063563	ParameterType	sljit_si		1063443	0					
ANR	1063564	Identifier	flags		1063443	1					
ANR	1063565	Parameter	sljit_si reg_ar	701:81:21969:21983	1063443	2	True				
ANR	1063566	ParameterType	sljit_si		1063443	0					
ANR	1063567	Identifier	reg_ar		1063443	1					
ANR	1063568	Parameter	sljit_si arg	701:98:21986:21997	1063443	3	True				
ANR	1063569	ParameterType	sljit_si		1063443	0					
ANR	1063570	Identifier	arg		1063443	1					
ANR	1063571	Parameter	sljit_sw argw	701:112:22000:22012	1063443	4	True				
ANR	1063572	ParameterType	sljit_sw		1063443	0					
ANR	1063573	Identifier	argw		1063443	1					
ANR	1063574	CFGEntryNode	ENTRY		1063443		True				
ANR	1063575	CFGExitNode	EXIT		1063443		True				
ANR	1063576	Symbol	LOAD_DATA		1063443						
ANR	1063577	Symbol	SLJIT_MEM		1063443						
ANR	1063578	Symbol	flags		1063443						
ANR	1063579	Symbol	* MEM_MASK		1063443						
ANR	1063580	Symbol	argw		1063443						
ANR	1063581	Symbol	SIMM_MAX		1063443						
ANR	1063582	Symbol	ARG_TEST		1063443						
ANR	1063583	Symbol	S		1063443						
ANR	1063584	Symbol	arg		1063443						
ANR	1063585	Symbol	compiler		1063443						
ANR	1063586	Symbol	WRITE_BACK		1063443						
ANR	1063587	Symbol	SIMM_MIN		1063443						
ANR	1063588	Symbol	push_inst		1063443						
ANR	1063589	Symbol	* flags		1063443						
ANR	1063590	Symbol	REG_MASK		1063443						
ANR	1063591	Symbol	OFFS_REG_MASK		1063443						
ANR	1063592	Symbol	IMM		1063443						
ANR	1063593	Symbol	data_transfer_insts		1063443						
ANR	1063594	Symbol	* data_transfer_insts		1063443						
ANR	1063595	Symbol	TA		1063443						
ANR	1063596	Symbol	GPR_REG		1063443						
ANR	1063597	Symbol	MEM_MASK		1063443						
ANR	1063598	Symbol	reg_ar		1063443						
ANR	1063599	Symbol	MOVABLE_INS		1063443						
ANR	1063600	Symbol	SLJIT_UNLIKELY		1063443						
ANR	1063601	Function	can_cache	719:0:22656:23196							
ANR	1063602	FunctionDef	"can_cache (sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw)"		1063601	0					
ANR	1063603	CompoundStatement		720:0:22750:23196	1063601	0					
ANR	1063604	ExpressionStatement	SLJIT_ASSERT ( ( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM ) )	721:1:22753:22810	1063601	0	True				
ANR	1063605	CallExpression	SLJIT_ASSERT ( ( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM ) )		1063601	0					
ANR	1063606	Callee	SLJIT_ASSERT		1063601	0					
ANR	1063607	Identifier	SLJIT_ASSERT		1063601	0					
ANR	1063608	ArgumentList	( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM )		1063601	1					
ANR	1063609	Argument	( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM )		1063601	0					
ANR	1063610	AndExpression	( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM )		1063601	0		&&			
ANR	1063611	BitAndExpression	arg & SLJIT_MEM		1063601	0		&			
ANR	1063612	Identifier	arg		1063601	0					
ANR	1063613	Identifier	SLJIT_MEM		1063601	1					
ANR	1063614	BitAndExpression	next_arg & SLJIT_MEM		1063601	1		&			
ANR	1063615	Identifier	next_arg		1063601	0					
ANR	1063616	Identifier	SLJIT_MEM		1063601	1					
ANR	1063617	IfStatement	if ( arg & OFFS_REG_MASK )		1063601	1					
ANR	1063618	Condition	arg & OFFS_REG_MASK	724:5:22862:22880	1063601	0	True				
ANR	1063619	BitAndExpression	arg & OFFS_REG_MASK		1063601	0		&			
ANR	1063620	Identifier	arg		1063601	0					
ANR	1063621	Identifier	OFFS_REG_MASK		1063601	1					
ANR	1063622	CompoundStatement		5:26:132:132	1063601	1					
ANR	1063623	ExpressionStatement	argw &= 0x3	725:2:22887:22898	1063601	0	True				
ANR	1063624	AssignmentExpression	argw &= 0x3		1063601	0		&=			
ANR	1063625	Identifier	argw		1063601	0					
ANR	1063626	PrimaryExpression	0x3		1063601	1					
ANR	1063627	ExpressionStatement	next_argw &= 0x3	726:2:22902:22918	1063601	1	True				
ANR	1063628	AssignmentExpression	next_argw &= 0x3		1063601	0		&=			
ANR	1063629	Identifier	next_argw		1063601	0					
ANR	1063630	PrimaryExpression	0x3		1063601	1					
ANR	1063631	IfStatement	if ( argw && argw == next_argw && ( arg == next_arg || ( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) ) )		1063601	2					
ANR	1063632	Condition	argw && argw == next_argw && ( arg == next_arg || ( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) )	727:6:22926:23026	1063601	0	True				
ANR	1063633	AndExpression	argw && argw == next_argw && ( arg == next_arg || ( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) )		1063601	0		&&			
ANR	1063634	Identifier	argw		1063601	0					
ANR	1063635	AndExpression	argw == next_argw && ( arg == next_arg || ( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) )		1063601	1		&&			
ANR	1063636	EqualityExpression	argw == next_argw		1063601	0		==			
ANR	1063637	Identifier	argw		1063601	0					
ANR	1063638	Identifier	next_argw		1063601	1					
ANR	1063639	OrExpression	arg == next_arg || ( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK )		1063601	1		||			
ANR	1063640	EqualityExpression	arg == next_arg		1063601	0		==			
ANR	1063641	Identifier	arg		1063601	0					
ANR	1063642	Identifier	next_arg		1063601	1					
ANR	1063643	EqualityExpression	( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK )		1063601	1		==			
ANR	1063644	BitAndExpression	arg & OFFS_REG_MASK		1063601	0		&			
ANR	1063645	Identifier	arg		1063601	0					
ANR	1063646	Identifier	OFFS_REG_MASK		1063601	1					
ANR	1063647	BitAndExpression	next_arg & OFFS_REG_MASK		1063601	1		&			
ANR	1063648	Identifier	next_arg		1063601	0					
ANR	1063649	Identifier	OFFS_REG_MASK		1063601	1					
ANR	1063650	ReturnStatement	return 1 ;	728:3:23032:23040	1063601	1	True				
ANR	1063651	PrimaryExpression	1		1063601	0					
ANR	1063652	ReturnStatement	return 0 ;	729:2:23044:23052	1063601	3	True				
ANR	1063653	PrimaryExpression	0		1063601	0					
ANR	1063654	IfStatement	if ( arg == next_arg )		1063601	2					
ANR	1063655	Condition	arg == next_arg	732:5:23063:23077	1063601	0	True				
ANR	1063656	EqualityExpression	arg == next_arg		1063601	0		==			
ANR	1063657	Identifier	arg		1063601	0					
ANR	1063658	Identifier	next_arg		1063601	1					
ANR	1063659	CompoundStatement		13:22:329:329	1063601	1					
ANR	1063660	IfStatement	if ( ( ( next_argw - argw ) <= SIMM_MAX && ( next_argw - argw ) >= SIMM_MIN ) )		1063601	0					
ANR	1063661	Condition	( next_argw - argw ) <= SIMM_MAX && ( next_argw - argw ) >= SIMM_MIN	733:6:23088:23153	1063601	0	True				
ANR	1063662	AndExpression	( next_argw - argw ) <= SIMM_MAX && ( next_argw - argw ) >= SIMM_MIN		1063601	0		&&			
ANR	1063663	RelationalExpression	( next_argw - argw ) <= SIMM_MAX		1063601	0		<=			
ANR	1063664	AdditiveExpression	next_argw - argw		1063601	0		-			
ANR	1063665	Identifier	next_argw		1063601	0					
ANR	1063666	Identifier	argw		1063601	1					
ANR	1063667	Identifier	SIMM_MAX		1063601	1					
ANR	1063668	RelationalExpression	( next_argw - argw ) >= SIMM_MIN		1063601	1		>=			
ANR	1063669	AdditiveExpression	next_argw - argw		1063601	0		-			
ANR	1063670	Identifier	next_argw		1063601	0					
ANR	1063671	Identifier	argw		1063601	1					
ANR	1063672	Identifier	SIMM_MIN		1063601	1					
ANR	1063673	ReturnStatement	return 1 ;	734:3:23159:23167	1063601	1	True				
ANR	1063674	PrimaryExpression	1		1063601	0					
ANR	1063675	ReturnStatement	return 0 ;	735:2:23171:23179	1063601	1	True				
ANR	1063676	PrimaryExpression	0		1063601	0					
ANR	1063677	ReturnStatement	return 0 ;	738:1:23186:23194	1063601	3	True				
ANR	1063678	PrimaryExpression	0		1063601	0					
ANR	1063679	ReturnType	static sljit_si		1063601	1					
ANR	1063680	Identifier	can_cache		1063601	2					
ANR	1063681	ParameterList	"sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw"		1063601	3					
ANR	1063682	Parameter	sljit_si arg	719:26:22682:22693	1063601	0	True				
ANR	1063683	ParameterType	sljit_si		1063601	0					
ANR	1063684	Identifier	arg		1063601	1					
ANR	1063685	Parameter	sljit_sw argw	719:40:22696:22708	1063601	1	True				
ANR	1063686	ParameterType	sljit_sw		1063601	0					
ANR	1063687	Identifier	argw		1063601	1					
ANR	1063688	Parameter	sljit_si next_arg	719:55:22711:22727	1063601	2	True				
ANR	1063689	ParameterType	sljit_si		1063601	0					
ANR	1063690	Identifier	next_arg		1063601	1					
ANR	1063691	Parameter	sljit_sw next_argw	719:74:22730:22747	1063601	3	True				
ANR	1063692	ParameterType	sljit_sw		1063601	0					
ANR	1063693	Identifier	next_argw		1063601	1					
ANR	1063694	CFGEntryNode	ENTRY		1063601		True				
ANR	1063695	CFGExitNode	EXIT		1063601		True				
ANR	1063696	Symbol	next_arg		1063601						
ANR	1063697	Symbol	SLJIT_MEM		1063601						
ANR	1063698	Symbol	arg		1063601						
ANR	1063699	Symbol	OFFS_REG_MASK		1063601						
ANR	1063700	Symbol	next_argw		1063601						
ANR	1063701	Symbol	argw		1063601						
ANR	1063702	Symbol	SIMM_MAX		1063601						
ANR	1063703	Symbol	SIMM_MIN		1063601						
ANR	1063704	Function	getput_arg	742:0:23259:29192							
ANR	1063705	FunctionDef	"getput_arg (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg_ar , sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw)"		1063704	0					
ANR	1063706	CompoundStatement		743:0:23420:29192	1063704	0					
ANR	1063707	IdentifierDeclStatement	"sljit_si tmp_ar , base , delay_slot ;"	744:1:23423:23456	1063704	0	True				
ANR	1063708	IdentifierDecl	tmp_ar		1063704	0					
ANR	1063709	IdentifierDeclType	sljit_si		1063704	0					
ANR	1063710	Identifier	tmp_ar		1063704	1					
ANR	1063711	IdentifierDecl	base		1063704	1					
ANR	1063712	IdentifierDeclType	sljit_si		1063704	0					
ANR	1063713	Identifier	base		1063704	1					
ANR	1063714	IdentifierDecl	delay_slot		1063704	2					
ANR	1063715	IdentifierDeclType	sljit_si		1063704	0					
ANR	1063716	Identifier	delay_slot		1063704	1					
ANR	1063717	ExpressionStatement	SLJIT_ASSERT ( arg & SLJIT_MEM )	746:1:23460:23489	1063704	1	True				
ANR	1063718	CallExpression	SLJIT_ASSERT ( arg & SLJIT_MEM )		1063704	0					
ANR	1063719	Callee	SLJIT_ASSERT		1063704	0					
ANR	1063720	Identifier	SLJIT_ASSERT		1063704	0					
ANR	1063721	ArgumentList	arg & SLJIT_MEM		1063704	1					
ANR	1063722	Argument	arg & SLJIT_MEM		1063704	0					
ANR	1063723	BitAndExpression	arg & SLJIT_MEM		1063704	0		&			
ANR	1063724	Identifier	arg		1063704	0					
ANR	1063725	Identifier	SLJIT_MEM		1063704	1					
ANR	1063726	IfStatement	if ( ! ( next_arg & SLJIT_MEM ) )		1063704	2					
ANR	1063727	Condition	! ( next_arg & SLJIT_MEM )	747:5:23496:23518	1063704	0	True				
ANR	1063728	UnaryOperationExpression	! ( next_arg & SLJIT_MEM )		1063704	0					
ANR	1063729	UnaryOperator	!		1063704	0					
ANR	1063730	BitAndExpression	next_arg & SLJIT_MEM		1063704	1		&			
ANR	1063731	Identifier	next_arg		1063704	0					
ANR	1063732	Identifier	SLJIT_MEM		1063704	1					
ANR	1063733	CompoundStatement		5:30:100:100	1063704	1					
ANR	1063734	ExpressionStatement	next_arg = 0	748:2:23525:23537	1063704	0	True				
ANR	1063735	AssignmentExpression	next_arg = 0		1063704	0		=			
ANR	1063736	Identifier	next_arg		1063704	0					
ANR	1063737	PrimaryExpression	0		1063704	1					
ANR	1063738	ExpressionStatement	next_argw = 0	749:2:23541:23554	1063704	1	True				
ANR	1063739	AssignmentExpression	next_argw = 0		1063704	0		=			
ANR	1063740	Identifier	next_argw		1063704	0					
ANR	1063741	PrimaryExpression	0		1063704	1					
ANR	1063742	IfStatement	if ( ( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA ) )		1063704	3					
ANR	1063743	Condition	( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA )	752:5:23565:23616	1063704	0	True				
ANR	1063744	AndExpression	( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA )		1063704	0		&&			
ANR	1063745	RelationalExpression	( flags & MEM_MASK ) <= GPR_REG		1063704	0		<=			
ANR	1063746	BitAndExpression	flags & MEM_MASK		1063704	0		&			
ANR	1063747	Identifier	flags		1063704	0					
ANR	1063748	Identifier	MEM_MASK		1063704	1					
ANR	1063749	Identifier	GPR_REG		1063704	1					
ANR	1063750	BitAndExpression	flags & LOAD_DATA		1063704	1		&			
ANR	1063751	Identifier	flags		1063704	0					
ANR	1063752	Identifier	LOAD_DATA		1063704	1					
ANR	1063753	CompoundStatement		10:59:198:198	1063704	1					
ANR	1063754	ExpressionStatement	tmp_ar = reg_ar	753:2:23623:23638	1063704	0	True				
ANR	1063755	AssignmentExpression	tmp_ar = reg_ar		1063704	0		=			
ANR	1063756	Identifier	tmp_ar		1063704	0					
ANR	1063757	Identifier	reg_ar		1063704	1					
ANR	1063758	ExpressionStatement	delay_slot = reg_ar	754:2:23642:23661	1063704	1	True				
ANR	1063759	AssignmentExpression	delay_slot = reg_ar		1063704	0		=			
ANR	1063760	Identifier	delay_slot		1063704	0					
ANR	1063761	Identifier	reg_ar		1063704	1					
ANR	1063762	ElseStatement	else		1063704	0					
ANR	1063763	CompoundStatement		13:8:250:250	1063704	0					
ANR	1063764	ExpressionStatement	tmp_ar = DR ( TMP_REG1 )	756:2:23675:23696	1063704	0	True				
ANR	1063765	AssignmentExpression	tmp_ar = DR ( TMP_REG1 )		1063704	0		=			
ANR	1063766	Identifier	tmp_ar		1063704	0					
ANR	1063767	CallExpression	DR ( TMP_REG1 )		1063704	1					
ANR	1063768	Callee	DR		1063704	0					
ANR	1063769	Identifier	DR		1063704	0					
ANR	1063770	ArgumentList	TMP_REG1		1063704	1					
ANR	1063771	Argument	TMP_REG1		1063704	0					
ANR	1063772	Identifier	TMP_REG1		1063704	0					
ANR	1063773	ExpressionStatement	delay_slot = MOVABLE_INS	757:2:23700:23724	1063704	1	True				
ANR	1063774	AssignmentExpression	delay_slot = MOVABLE_INS		1063704	0		=			
ANR	1063775	Identifier	delay_slot		1063704	0					
ANR	1063776	Identifier	MOVABLE_INS		1063704	1					
ANR	1063777	ExpressionStatement	base = arg & REG_MASK	759:1:23730:23751	1063704	4	True				
ANR	1063778	AssignmentExpression	base = arg & REG_MASK		1063704	0		=			
ANR	1063779	Identifier	base		1063704	0					
ANR	1063780	BitAndExpression	arg & REG_MASK		1063704	1		&			
ANR	1063781	Identifier	arg		1063704	0					
ANR	1063782	Identifier	REG_MASK		1063704	1					
ANR	1063783	IfStatement	if ( SLJIT_UNLIKELY ( arg & OFFS_REG_MASK ) )		1063704	5					
ANR	1063784	Condition	SLJIT_UNLIKELY ( arg & OFFS_REG_MASK )	761:5:23759:23793	1063704	0	True				
ANR	1063785	CallExpression	SLJIT_UNLIKELY ( arg & OFFS_REG_MASK )		1063704	0					
ANR	1063786	Callee	SLJIT_UNLIKELY		1063704	0					
ANR	1063787	Identifier	SLJIT_UNLIKELY		1063704	0					
ANR	1063788	ArgumentList	arg & OFFS_REG_MASK		1063704	1					
ANR	1063789	Argument	arg & OFFS_REG_MASK		1063704	0					
ANR	1063790	BitAndExpression	arg & OFFS_REG_MASK		1063704	0		&			
ANR	1063791	Identifier	arg		1063704	0					
ANR	1063792	Identifier	OFFS_REG_MASK		1063704	1					
ANR	1063793	CompoundStatement		19:42:375:375	1063704	1					
ANR	1063794	ExpressionStatement	argw &= 0x3	762:2:23800:23811	1063704	0	True				
ANR	1063795	AssignmentExpression	argw &= 0x3		1063704	0		&=			
ANR	1063796	Identifier	argw		1063704	0					
ANR	1063797	PrimaryExpression	0x3		1063704	1					
ANR	1063798	IfStatement	if ( ( flags & WRITE_BACK ) && reg_ar == DR ( base ) )		1063704	1					
ANR	1063799	Condition	( flags & WRITE_BACK ) && reg_ar == DR ( base )	763:6:23819:23860	1063704	0	True				
ANR	1063800	AndExpression	( flags & WRITE_BACK ) && reg_ar == DR ( base )		1063704	0		&&			
ANR	1063801	BitAndExpression	flags & WRITE_BACK		1063704	0		&			
ANR	1063802	Identifier	flags		1063704	0					
ANR	1063803	Identifier	WRITE_BACK		1063704	1					
ANR	1063804	EqualityExpression	reg_ar == DR ( base )		1063704	1		==			
ANR	1063805	Identifier	reg_ar		1063704	0					
ANR	1063806	CallExpression	DR ( base )		1063704	1					
ANR	1063807	Callee	DR		1063704	0					
ANR	1063808	Identifier	DR		1063704	0					
ANR	1063809	ArgumentList	base		1063704	1					
ANR	1063810	Argument	base		1063704	0					
ANR	1063811	Identifier	base		1063704	0					
ANR	1063812	CompoundStatement		21:50:442:442	1063704	1					
ANR	1063813	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & LOAD_DATA ) && DR ( TMP_REG1 ) != reg_ar )	764:3:23868:23928	1063704	0	True				
ANR	1063814	CallExpression	SLJIT_ASSERT ( ! ( flags & LOAD_DATA ) && DR ( TMP_REG1 ) != reg_ar )		1063704	0					
ANR	1063815	Callee	SLJIT_ASSERT		1063704	0					
ANR	1063816	Identifier	SLJIT_ASSERT		1063704	0					
ANR	1063817	ArgumentList	! ( flags & LOAD_DATA ) && DR ( TMP_REG1 ) != reg_ar		1063704	1					
ANR	1063818	Argument	! ( flags & LOAD_DATA ) && DR ( TMP_REG1 ) != reg_ar		1063704	0					
ANR	1063819	AndExpression	! ( flags & LOAD_DATA ) && DR ( TMP_REG1 ) != reg_ar		1063704	0		&&			
ANR	1063820	UnaryOperationExpression	! ( flags & LOAD_DATA )		1063704	0					
ANR	1063821	UnaryOperator	!		1063704	0					
ANR	1063822	BitAndExpression	flags & LOAD_DATA		1063704	1		&			
ANR	1063823	Identifier	flags		1063704	0					
ANR	1063824	Identifier	LOAD_DATA		1063704	1					
ANR	1063825	EqualityExpression	DR ( TMP_REG1 ) != reg_ar		1063704	1		!=			
ANR	1063826	CallExpression	DR ( TMP_REG1 )		1063704	0					
ANR	1063827	Callee	DR		1063704	0					
ANR	1063828	Identifier	DR		1063704	0					
ANR	1063829	ArgumentList	TMP_REG1		1063704	1					
ANR	1063830	Argument	TMP_REG1		1063704	0					
ANR	1063831	Identifier	TMP_REG1		1063704	0					
ANR	1063832	Identifier	reg_ar		1063704	1					
ANR	1063833	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDU_W | SA ( reg_ar ) | TA ( 0 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) ) )"	765:3:23933:24018	1063704	1	True				
ANR	1063834	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDU_W | SA ( reg_ar ) | TA ( 0 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) ) )"		1063704	0					
ANR	1063835	Callee	FAIL_IF		1063704	0					
ANR	1063836	Identifier	FAIL_IF		1063704	0					
ANR	1063837	ArgumentList	"push_inst ( compiler , ADDU_W | SA ( reg_ar ) | TA ( 0 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) )"		1063704	1					
ANR	1063838	Argument	"push_inst ( compiler , ADDU_W | SA ( reg_ar ) | TA ( 0 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) )"		1063704	0					
ANR	1063839	CallExpression	"push_inst ( compiler , ADDU_W | SA ( reg_ar ) | TA ( 0 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) )"		1063704	0					
ANR	1063840	Callee	push_inst		1063704	0					
ANR	1063841	Identifier	push_inst		1063704	0					
ANR	1063842	ArgumentList	compiler		1063704	1					
ANR	1063843	Argument	compiler		1063704	0					
ANR	1063844	Identifier	compiler		1063704	0					
ANR	1063845	Argument	ADDU_W | SA ( reg_ar ) | TA ( 0 ) | D ( TMP_REG1 )		1063704	1					
ANR	1063846	InclusiveOrExpression	ADDU_W | SA ( reg_ar ) | TA ( 0 ) | D ( TMP_REG1 )		1063704	0		|			
ANR	1063847	Identifier	ADDU_W		1063704	0					
ANR	1063848	InclusiveOrExpression	SA ( reg_ar ) | TA ( 0 ) | D ( TMP_REG1 )		1063704	1		|			
ANR	1063849	CallExpression	SA ( reg_ar )		1063704	0					
ANR	1063850	Callee	SA		1063704	0					
ANR	1063851	Identifier	SA		1063704	0					
ANR	1063852	ArgumentList	reg_ar		1063704	1					
ANR	1063853	Argument	reg_ar		1063704	0					
ANR	1063854	Identifier	reg_ar		1063704	0					
ANR	1063855	InclusiveOrExpression	TA ( 0 ) | D ( TMP_REG1 )		1063704	1		|			
ANR	1063856	CallExpression	TA ( 0 )		1063704	0					
ANR	1063857	Callee	TA		1063704	0					
ANR	1063858	Identifier	TA		1063704	0					
ANR	1063859	ArgumentList	0		1063704	1					
ANR	1063860	Argument	0		1063704	0					
ANR	1063861	PrimaryExpression	0		1063704	0					
ANR	1063862	CallExpression	D ( TMP_REG1 )		1063704	1					
ANR	1063863	Callee	D		1063704	0					
ANR	1063864	Identifier	D		1063704	0					
ANR	1063865	ArgumentList	TMP_REG1		1063704	1					
ANR	1063866	Argument	TMP_REG1		1063704	0					
ANR	1063867	Identifier	TMP_REG1		1063704	0					
ANR	1063868	Argument	DR ( TMP_REG1 )		1063704	2					
ANR	1063869	CallExpression	DR ( TMP_REG1 )		1063704	0					
ANR	1063870	Callee	DR		1063704	0					
ANR	1063871	Identifier	DR		1063704	0					
ANR	1063872	ArgumentList	TMP_REG1		1063704	1					
ANR	1063873	Argument	TMP_REG1		1063704	0					
ANR	1063874	Identifier	TMP_REG1		1063704	0					
ANR	1063875	ExpressionStatement	reg_ar = DR ( TMP_REG1 )	766:3:24023:24044	1063704	2	True				
ANR	1063876	AssignmentExpression	reg_ar = DR ( TMP_REG1 )		1063704	0		=			
ANR	1063877	Identifier	reg_ar		1063704	0					
ANR	1063878	CallExpression	DR ( TMP_REG1 )		1063704	1					
ANR	1063879	Callee	DR		1063704	0					
ANR	1063880	Identifier	DR		1063704	0					
ANR	1063881	ArgumentList	TMP_REG1		1063704	1					
ANR	1063882	Argument	TMP_REG1		1063704	0					
ANR	1063883	Identifier	TMP_REG1		1063704	0					
ANR	1063884	IfStatement	if ( argw == compiler -> cache_argw )		1063704	2					
ANR	1063885	Condition	argw == compiler -> cache_argw	770:6:24082:24109	1063704	0	True				
ANR	1063886	EqualityExpression	argw == compiler -> cache_argw		1063704	0		==			
ANR	1063887	Identifier	argw		1063704	0					
ANR	1063888	PtrMemberAccess	compiler -> cache_argw		1063704	1					
ANR	1063889	Identifier	compiler		1063704	0					
ANR	1063890	Identifier	cache_argw		1063704	1					
ANR	1063891	CompoundStatement		28:36:691:691	1063704	1					
ANR	1063892	IfStatement	if ( ! ( flags & WRITE_BACK ) )		1063704	0					
ANR	1063893	Condition	! ( flags & WRITE_BACK )	771:7:24121:24141	1063704	0	True				
ANR	1063894	UnaryOperationExpression	! ( flags & WRITE_BACK )		1063704	0					
ANR	1063895	UnaryOperator	!		1063704	0					
ANR	1063896	BitAndExpression	flags & WRITE_BACK		1063704	1		&			
ANR	1063897	Identifier	flags		1063704	0					
ANR	1063898	Identifier	WRITE_BACK		1063704	1					
ANR	1063899	CompoundStatement		29:30:723:723	1063704	1					
ANR	1063900	IfStatement	if ( arg == compiler -> cache_arg )		1063704	0					
ANR	1063901	Condition	arg == compiler -> cache_arg	772:8:24154:24179	1063704	0	True				
ANR	1063902	EqualityExpression	arg == compiler -> cache_arg		1063704	0		==			
ANR	1063903	Identifier	arg		1063704	0					
ANR	1063904	PtrMemberAccess	compiler -> cache_arg		1063704	1					
ANR	1063905	Identifier	compiler		1063704	0					
ANR	1063906	Identifier	cache_arg		1063704	1					
ANR	1063907	ReturnStatement	"return push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( TMP_REG3 ) | TA ( reg_ar ) , delay_slot ) ;"	773:5:24187:24291	1063704	1	True				
ANR	1063908	CallExpression	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( TMP_REG3 ) | TA ( reg_ar ) , delay_slot )"		1063704	0					
ANR	1063909	Callee	push_inst		1063704	0					
ANR	1063910	Identifier	push_inst		1063704	0					
ANR	1063911	ArgumentList	compiler		1063704	1					
ANR	1063912	Argument	compiler		1063704	0					
ANR	1063913	Identifier	compiler		1063704	0					
ANR	1063914	Argument	data_transfer_insts [ flags & MEM_MASK ] | S ( TMP_REG3 ) | TA ( reg_ar )		1063704	1					
ANR	1063915	InclusiveOrExpression	data_transfer_insts [ flags & MEM_MASK ] | S ( TMP_REG3 ) | TA ( reg_ar )		1063704	0		|			
ANR	1063916	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1063704	0					
ANR	1063917	Identifier	data_transfer_insts		1063704	0					
ANR	1063918	BitAndExpression	flags & MEM_MASK		1063704	1		&			
ANR	1063919	Identifier	flags		1063704	0					
ANR	1063920	Identifier	MEM_MASK		1063704	1					
ANR	1063921	InclusiveOrExpression	S ( TMP_REG3 ) | TA ( reg_ar )		1063704	1		|			
ANR	1063922	CallExpression	S ( TMP_REG3 )		1063704	0					
ANR	1063923	Callee	S		1063704	0					
ANR	1063924	Identifier	S		1063704	0					
ANR	1063925	ArgumentList	TMP_REG3		1063704	1					
ANR	1063926	Argument	TMP_REG3		1063704	0					
ANR	1063927	Identifier	TMP_REG3		1063704	0					
ANR	1063928	CallExpression	TA ( reg_ar )		1063704	1					
ANR	1063929	Callee	TA		1063704	0					
ANR	1063930	Identifier	TA		1063704	0					
ANR	1063931	ArgumentList	reg_ar		1063704	1					
ANR	1063932	Argument	reg_ar		1063704	0					
ANR	1063933	Identifier	reg_ar		1063704	0					
ANR	1063934	Argument	delay_slot		1063704	2					
ANR	1063935	Identifier	delay_slot		1063704	0					
ANR	1063936	IfStatement	if ( ( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg )		1063704	1					
ANR	1063937	Condition	( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg	774:8:24301:24358	1063704	0	True				
ANR	1063938	EqualityExpression	( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg		1063704	0		==			
ANR	1063939	InclusiveOrExpression	SLJIT_MEM | ( arg & OFFS_REG_MASK )		1063704	0		|			
ANR	1063940	Identifier	SLJIT_MEM		1063704	0					
ANR	1063941	BitAndExpression	arg & OFFS_REG_MASK		1063704	1		&			
ANR	1063942	Identifier	arg		1063704	0					
ANR	1063943	Identifier	OFFS_REG_MASK		1063704	1					
ANR	1063944	PtrMemberAccess	compiler -> cache_arg		1063704	1					
ANR	1063945	Identifier	compiler		1063704	0					
ANR	1063946	Identifier	cache_arg		1063704	1					
ANR	1063947	CompoundStatement		32:68:940:940	1063704	1					
ANR	1063948	IfStatement	if ( arg == next_arg && argw == ( next_argw & 0x3 ) )		1063704	0					
ANR	1063949	Condition	arg == next_arg && argw == ( next_argw & 0x3 )	775:9:24372:24415	1063704	0	True				
ANR	1063950	AndExpression	arg == next_arg && argw == ( next_argw & 0x3 )		1063704	0		&&			
ANR	1063951	EqualityExpression	arg == next_arg		1063704	0		==			
ANR	1063952	Identifier	arg		1063704	0					
ANR	1063953	Identifier	next_arg		1063704	1					
ANR	1063954	EqualityExpression	argw == ( next_argw & 0x3 )		1063704	1		==			
ANR	1063955	Identifier	argw		1063704	0					
ANR	1063956	BitAndExpression	next_argw & 0x3		1063704	1		&			
ANR	1063957	Identifier	next_argw		1063704	0					
ANR	1063958	PrimaryExpression	0x3		1063704	1					
ANR	1063959	CompoundStatement		33:55:997:997	1063704	1					
ANR	1063960	ExpressionStatement	compiler -> cache_arg = arg	776:6:24426:24451	1063704	0	True				
ANR	1063961	AssignmentExpression	compiler -> cache_arg = arg		1063704	0		=			
ANR	1063962	PtrMemberAccess	compiler -> cache_arg		1063704	0					
ANR	1063963	Identifier	compiler		1063704	0					
ANR	1063964	Identifier	cache_arg		1063704	1					
ANR	1063965	Identifier	arg		1063704	1					
ANR	1063966	ExpressionStatement	compiler -> cache_argw = argw	777:6:24459:24486	1063704	1	True				
ANR	1063967	AssignmentExpression	compiler -> cache_argw = argw		1063704	0		=			
ANR	1063968	PtrMemberAccess	compiler -> cache_argw		1063704	0					
ANR	1063969	Identifier	compiler		1063704	0					
ANR	1063970	Identifier	cache_argw		1063704	1					
ANR	1063971	Identifier	argw		1063704	1					
ANR	1063972	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( TMP_REG3 ) , DR ( TMP_REG3 ) ) )"	778:6:24494:24582	1063704	2	True				
ANR	1063973	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( TMP_REG3 ) , DR ( TMP_REG3 ) ) )"		1063704	0					
ANR	1063974	Callee	FAIL_IF		1063704	0					
ANR	1063975	Identifier	FAIL_IF		1063704	0					
ANR	1063976	ArgumentList	"push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( TMP_REG3 ) , DR ( TMP_REG3 ) )"		1063704	1					
ANR	1063977	Argument	"push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( TMP_REG3 ) , DR ( TMP_REG3 ) )"		1063704	0					
ANR	1063978	CallExpression	"push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( TMP_REG3 ) , DR ( TMP_REG3 ) )"		1063704	0					
ANR	1063979	Callee	push_inst		1063704	0					
ANR	1063980	Identifier	push_inst		1063704	0					
ANR	1063981	ArgumentList	compiler		1063704	1					
ANR	1063982	Argument	compiler		1063704	0					
ANR	1063983	Identifier	compiler		1063704	0					
ANR	1063984	Argument	ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( TMP_REG3 )		1063704	1					
ANR	1063985	InclusiveOrExpression	ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( TMP_REG3 )		1063704	0		|			
ANR	1063986	Identifier	ADDU_W		1063704	0					
ANR	1063987	InclusiveOrExpression	S ( base ) | T ( TMP_REG3 ) | D ( TMP_REG3 )		1063704	1		|			
ANR	1063988	CallExpression	S ( base )		1063704	0					
ANR	1063989	Callee	S		1063704	0					
ANR	1063990	Identifier	S		1063704	0					
ANR	1063991	ArgumentList	base		1063704	1					
ANR	1063992	Argument	base		1063704	0					
ANR	1063993	Identifier	base		1063704	0					
ANR	1063994	InclusiveOrExpression	T ( TMP_REG3 ) | D ( TMP_REG3 )		1063704	1		|			
ANR	1063995	CallExpression	T ( TMP_REG3 )		1063704	0					
ANR	1063996	Callee	T		1063704	0					
ANR	1063997	Identifier	T		1063704	0					
ANR	1063998	ArgumentList	TMP_REG3		1063704	1					
ANR	1063999	Argument	TMP_REG3		1063704	0					
ANR	1064000	Identifier	TMP_REG3		1063704	0					
ANR	1064001	CallExpression	D ( TMP_REG3 )		1063704	1					
ANR	1064002	Callee	D		1063704	0					
ANR	1064003	Identifier	D		1063704	0					
ANR	1064004	ArgumentList	TMP_REG3		1063704	1					
ANR	1064005	Argument	TMP_REG3		1063704	0					
ANR	1064006	Identifier	TMP_REG3		1063704	0					
ANR	1064007	Argument	DR ( TMP_REG3 )		1063704	2					
ANR	1064008	CallExpression	DR ( TMP_REG3 )		1063704	0					
ANR	1064009	Callee	DR		1063704	0					
ANR	1064010	Identifier	DR		1063704	0					
ANR	1064011	ArgumentList	TMP_REG3		1063704	1					
ANR	1064012	Argument	TMP_REG3		1063704	0					
ANR	1064013	Identifier	TMP_REG3		1063704	0					
ANR	1064014	ReturnStatement	"return push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( TMP_REG3 ) | TA ( reg_ar ) , delay_slot ) ;"	779:6:24590:24694	1063704	3	True				
ANR	1064015	CallExpression	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( TMP_REG3 ) | TA ( reg_ar ) , delay_slot )"		1063704	0					
ANR	1064016	Callee	push_inst		1063704	0					
ANR	1064017	Identifier	push_inst		1063704	0					
ANR	1064018	ArgumentList	compiler		1063704	1					
ANR	1064019	Argument	compiler		1063704	0					
ANR	1064020	Identifier	compiler		1063704	0					
ANR	1064021	Argument	data_transfer_insts [ flags & MEM_MASK ] | S ( TMP_REG3 ) | TA ( reg_ar )		1063704	1					
ANR	1064022	InclusiveOrExpression	data_transfer_insts [ flags & MEM_MASK ] | S ( TMP_REG3 ) | TA ( reg_ar )		1063704	0		|			
ANR	1064023	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1063704	0					
ANR	1064024	Identifier	data_transfer_insts		1063704	0					
ANR	1064025	BitAndExpression	flags & MEM_MASK		1063704	1		&			
ANR	1064026	Identifier	flags		1063704	0					
ANR	1064027	Identifier	MEM_MASK		1063704	1					
ANR	1064028	InclusiveOrExpression	S ( TMP_REG3 ) | TA ( reg_ar )		1063704	1		|			
ANR	1064029	CallExpression	S ( TMP_REG3 )		1063704	0					
ANR	1064030	Callee	S		1063704	0					
ANR	1064031	Identifier	S		1063704	0					
ANR	1064032	ArgumentList	TMP_REG3		1063704	1					
ANR	1064033	Argument	TMP_REG3		1063704	0					
ANR	1064034	Identifier	TMP_REG3		1063704	0					
ANR	1064035	CallExpression	TA ( reg_ar )		1063704	1					
ANR	1064036	Callee	TA		1063704	0					
ANR	1064037	Identifier	TA		1063704	0					
ANR	1064038	ArgumentList	reg_ar		1063704	1					
ANR	1064039	Argument	reg_ar		1063704	0					
ANR	1064040	Identifier	reg_ar		1063704	0					
ANR	1064041	Argument	delay_slot		1063704	2					
ANR	1064042	Identifier	delay_slot		1063704	0					
ANR	1064043	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | DA ( tmp_ar ) , tmp_ar ) )"	781:5:24708:24789	1063704	1	True				
ANR	1064044	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | DA ( tmp_ar ) , tmp_ar ) )"		1063704	0					
ANR	1064045	Callee	FAIL_IF		1063704	0					
ANR	1064046	Identifier	FAIL_IF		1063704	0					
ANR	1064047	ArgumentList	"push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | DA ( tmp_ar ) , tmp_ar )"		1063704	1					
ANR	1064048	Argument	"push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | DA ( tmp_ar ) , tmp_ar )"		1063704	0					
ANR	1064049	CallExpression	"push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | DA ( tmp_ar ) , tmp_ar )"		1063704	0					
ANR	1064050	Callee	push_inst		1063704	0					
ANR	1064051	Identifier	push_inst		1063704	0					
ANR	1064052	ArgumentList	compiler		1063704	1					
ANR	1064053	Argument	compiler		1063704	0					
ANR	1064054	Identifier	compiler		1063704	0					
ANR	1064055	Argument	ADDU_W | S ( base ) | T ( TMP_REG3 ) | DA ( tmp_ar )		1063704	1					
ANR	1064056	InclusiveOrExpression	ADDU_W | S ( base ) | T ( TMP_REG3 ) | DA ( tmp_ar )		1063704	0		|			
ANR	1064057	Identifier	ADDU_W		1063704	0					
ANR	1064058	InclusiveOrExpression	S ( base ) | T ( TMP_REG3 ) | DA ( tmp_ar )		1063704	1		|			
ANR	1064059	CallExpression	S ( base )		1063704	0					
ANR	1064060	Callee	S		1063704	0					
ANR	1064061	Identifier	S		1063704	0					
ANR	1064062	ArgumentList	base		1063704	1					
ANR	1064063	Argument	base		1063704	0					
ANR	1064064	Identifier	base		1063704	0					
ANR	1064065	InclusiveOrExpression	T ( TMP_REG3 ) | DA ( tmp_ar )		1063704	1		|			
ANR	1064066	CallExpression	T ( TMP_REG3 )		1063704	0					
ANR	1064067	Callee	T		1063704	0					
ANR	1064068	Identifier	T		1063704	0					
ANR	1064069	ArgumentList	TMP_REG3		1063704	1					
ANR	1064070	Argument	TMP_REG3		1063704	0					
ANR	1064071	Identifier	TMP_REG3		1063704	0					
ANR	1064072	CallExpression	DA ( tmp_ar )		1063704	1					
ANR	1064073	Callee	DA		1063704	0					
ANR	1064074	Identifier	DA		1063704	0					
ANR	1064075	ArgumentList	tmp_ar		1063704	1					
ANR	1064076	Argument	tmp_ar		1063704	0					
ANR	1064077	Identifier	tmp_ar		1063704	0					
ANR	1064078	Argument	tmp_ar		1063704	2					
ANR	1064079	Identifier	tmp_ar		1063704	0					
ANR	1064080	ReturnStatement	"return push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | SA ( tmp_ar ) | TA ( reg_ar ) , delay_slot ) ;"	782:5:24796:24899	1063704	2	True				
ANR	1064081	CallExpression	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | SA ( tmp_ar ) | TA ( reg_ar ) , delay_slot )"		1063704	0					
ANR	1064082	Callee	push_inst		1063704	0					
ANR	1064083	Identifier	push_inst		1063704	0					
ANR	1064084	ArgumentList	compiler		1063704	1					
ANR	1064085	Argument	compiler		1063704	0					
ANR	1064086	Identifier	compiler		1063704	0					
ANR	1064087	Argument	data_transfer_insts [ flags & MEM_MASK ] | SA ( tmp_ar ) | TA ( reg_ar )		1063704	1					
ANR	1064088	InclusiveOrExpression	data_transfer_insts [ flags & MEM_MASK ] | SA ( tmp_ar ) | TA ( reg_ar )		1063704	0		|			
ANR	1064089	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1063704	0					
ANR	1064090	Identifier	data_transfer_insts		1063704	0					
ANR	1064091	BitAndExpression	flags & MEM_MASK		1063704	1		&			
ANR	1064092	Identifier	flags		1063704	0					
ANR	1064093	Identifier	MEM_MASK		1063704	1					
ANR	1064094	InclusiveOrExpression	SA ( tmp_ar ) | TA ( reg_ar )		1063704	1		|			
ANR	1064095	CallExpression	SA ( tmp_ar )		1063704	0					
ANR	1064096	Callee	SA		1063704	0					
ANR	1064097	Identifier	SA		1063704	0					
ANR	1064098	ArgumentList	tmp_ar		1063704	1					
ANR	1064099	Argument	tmp_ar		1063704	0					
ANR	1064100	Identifier	tmp_ar		1063704	0					
ANR	1064101	CallExpression	TA ( reg_ar )		1063704	1					
ANR	1064102	Callee	TA		1063704	0					
ANR	1064103	Identifier	TA		1063704	0					
ANR	1064104	ArgumentList	reg_ar		1063704	1					
ANR	1064105	Argument	reg_ar		1063704	0					
ANR	1064106	Identifier	reg_ar		1063704	0					
ANR	1064107	Argument	delay_slot		1063704	2					
ANR	1064108	Identifier	delay_slot		1063704	0					
ANR	1064109	ElseStatement	else		1063704	0					
ANR	1064110	CompoundStatement		43:8:1499:1499	1063704	0					
ANR	1064111	IfStatement	if ( ( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg )		1063704	0					
ANR	1064112	Condition	( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg	786:8:24930:24987	1063704	0	True				
ANR	1064113	EqualityExpression	( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg		1063704	0		==			
ANR	1064114	InclusiveOrExpression	SLJIT_MEM | ( arg & OFFS_REG_MASK )		1063704	0		|			
ANR	1064115	Identifier	SLJIT_MEM		1063704	0					
ANR	1064116	BitAndExpression	arg & OFFS_REG_MASK		1063704	1		&			
ANR	1064117	Identifier	arg		1063704	0					
ANR	1064118	Identifier	OFFS_REG_MASK		1063704	1					
ANR	1064119	PtrMemberAccess	compiler -> cache_arg		1063704	1					
ANR	1064120	Identifier	compiler		1063704	0					
ANR	1064121	Identifier	cache_arg		1063704	1					
ANR	1064122	CompoundStatement		44:68:1569:1569	1063704	1					
ANR	1064123	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( base ) , DR ( base ) ) )"	787:5:24997:25077	1063704	0	True				
ANR	1064124	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( base ) , DR ( base ) ) )"		1063704	0					
ANR	1064125	Callee	FAIL_IF		1063704	0					
ANR	1064126	Identifier	FAIL_IF		1063704	0					
ANR	1064127	ArgumentList	"push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( base ) , DR ( base ) )"		1063704	1					
ANR	1064128	Argument	"push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( base ) , DR ( base ) )"		1063704	0					
ANR	1064129	CallExpression	"push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( base ) , DR ( base ) )"		1063704	0					
ANR	1064130	Callee	push_inst		1063704	0					
ANR	1064131	Identifier	push_inst		1063704	0					
ANR	1064132	ArgumentList	compiler		1063704	1					
ANR	1064133	Argument	compiler		1063704	0					
ANR	1064134	Identifier	compiler		1063704	0					
ANR	1064135	Argument	ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( base )		1063704	1					
ANR	1064136	InclusiveOrExpression	ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( base )		1063704	0		|			
ANR	1064137	Identifier	ADDU_W		1063704	0					
ANR	1064138	InclusiveOrExpression	S ( base ) | T ( TMP_REG3 ) | D ( base )		1063704	1		|			
ANR	1064139	CallExpression	S ( base )		1063704	0					
ANR	1064140	Callee	S		1063704	0					
ANR	1064141	Identifier	S		1063704	0					
ANR	1064142	ArgumentList	base		1063704	1					
ANR	1064143	Argument	base		1063704	0					
ANR	1064144	Identifier	base		1063704	0					
ANR	1064145	InclusiveOrExpression	T ( TMP_REG3 ) | D ( base )		1063704	1		|			
ANR	1064146	CallExpression	T ( TMP_REG3 )		1063704	0					
ANR	1064147	Callee	T		1063704	0					
ANR	1064148	Identifier	T		1063704	0					
ANR	1064149	ArgumentList	TMP_REG3		1063704	1					
ANR	1064150	Argument	TMP_REG3		1063704	0					
ANR	1064151	Identifier	TMP_REG3		1063704	0					
ANR	1064152	CallExpression	D ( base )		1063704	1					
ANR	1064153	Callee	D		1063704	0					
ANR	1064154	Identifier	D		1063704	0					
ANR	1064155	ArgumentList	base		1063704	1					
ANR	1064156	Argument	base		1063704	0					
ANR	1064157	Identifier	base		1063704	0					
ANR	1064158	Argument	DR ( base )		1063704	2					
ANR	1064159	CallExpression	DR ( base )		1063704	0					
ANR	1064160	Callee	DR		1063704	0					
ANR	1064161	Identifier	DR		1063704	0					
ANR	1064162	ArgumentList	base		1063704	1					
ANR	1064163	Argument	base		1063704	0					
ANR	1064164	Identifier	base		1063704	0					
ANR	1064165	ReturnStatement	"return push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( base ) | TA ( reg_ar ) , delay_slot ) ;"	788:5:25084:25184	1063704	1	True				
ANR	1064166	CallExpression	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( base ) | TA ( reg_ar ) , delay_slot )"		1063704	0					
ANR	1064167	Callee	push_inst		1063704	0					
ANR	1064168	Identifier	push_inst		1063704	0					
ANR	1064169	ArgumentList	compiler		1063704	1					
ANR	1064170	Argument	compiler		1063704	0					
ANR	1064171	Identifier	compiler		1063704	0					
ANR	1064172	Argument	data_transfer_insts [ flags & MEM_MASK ] | S ( base ) | TA ( reg_ar )		1063704	1					
ANR	1064173	InclusiveOrExpression	data_transfer_insts [ flags & MEM_MASK ] | S ( base ) | TA ( reg_ar )		1063704	0		|			
ANR	1064174	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1063704	0					
ANR	1064175	Identifier	data_transfer_insts		1063704	0					
ANR	1064176	BitAndExpression	flags & MEM_MASK		1063704	1		&			
ANR	1064177	Identifier	flags		1063704	0					
ANR	1064178	Identifier	MEM_MASK		1063704	1					
ANR	1064179	InclusiveOrExpression	S ( base ) | TA ( reg_ar )		1063704	1		|			
ANR	1064180	CallExpression	S ( base )		1063704	0					
ANR	1064181	Callee	S		1063704	0					
ANR	1064182	Identifier	S		1063704	0					
ANR	1064183	ArgumentList	base		1063704	1					
ANR	1064184	Argument	base		1063704	0					
ANR	1064185	Identifier	base		1063704	0					
ANR	1064186	CallExpression	TA ( reg_ar )		1063704	1					
ANR	1064187	Callee	TA		1063704	0					
ANR	1064188	Identifier	TA		1063704	0					
ANR	1064189	ArgumentList	reg_ar		1063704	1					
ANR	1064190	Argument	reg_ar		1063704	0					
ANR	1064191	Identifier	reg_ar		1063704	0					
ANR	1064192	Argument	delay_slot		1063704	2					
ANR	1064193	Identifier	delay_slot		1063704	0					
ANR	1064194	IfStatement	if ( SLJIT_UNLIKELY ( argw ) )		1063704	3					
ANR	1064195	Condition	SLJIT_UNLIKELY ( argw )	793:6:25208:25227	1063704	0	True				
ANR	1064196	CallExpression	SLJIT_UNLIKELY ( argw )		1063704	0					
ANR	1064197	Callee	SLJIT_UNLIKELY		1063704	0					
ANR	1064198	Identifier	SLJIT_UNLIKELY		1063704	0					
ANR	1064199	ArgumentList	argw		1063704	1					
ANR	1064200	Argument	argw		1063704	0					
ANR	1064201	Identifier	argw		1063704	0					
ANR	1064202	CompoundStatement		51:28:1809:1809	1063704	1					
ANR	1064203	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM | ( arg & OFFS_REG_MASK )	794:3:25235:25290	1063704	0	True				
ANR	1064204	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM | ( arg & OFFS_REG_MASK )		1063704	0		=			
ANR	1064205	PtrMemberAccess	compiler -> cache_arg		1063704	0					
ANR	1064206	Identifier	compiler		1063704	0					
ANR	1064207	Identifier	cache_arg		1063704	1					
ANR	1064208	InclusiveOrExpression	SLJIT_MEM | ( arg & OFFS_REG_MASK )		1063704	1		|			
ANR	1064209	Identifier	SLJIT_MEM		1063704	0					
ANR	1064210	BitAndExpression	arg & OFFS_REG_MASK		1063704	1		&			
ANR	1064211	Identifier	arg		1063704	0					
ANR	1064212	Identifier	OFFS_REG_MASK		1063704	1					
ANR	1064213	ExpressionStatement	compiler -> cache_argw = argw	795:3:25295:25322	1063704	1	True				
ANR	1064214	AssignmentExpression	compiler -> cache_argw = argw		1063704	0		=			
ANR	1064215	PtrMemberAccess	compiler -> cache_argw		1063704	0					
ANR	1064216	Identifier	compiler		1063704	0					
ANR	1064217	Identifier	cache_argw		1063704	1					
ANR	1064218	Identifier	argw		1063704	1					
ANR	1064219	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SLL_W | T ( OFFS_REG ( arg ) ) | D ( TMP_REG3 ) | SH_IMM ( argw ) , DR ( TMP_REG3 ) ) )"	796:3:25327:25424	1063704	2	True				
ANR	1064220	CallExpression	"FAIL_IF ( push_inst ( compiler , SLL_W | T ( OFFS_REG ( arg ) ) | D ( TMP_REG3 ) | SH_IMM ( argw ) , DR ( TMP_REG3 ) ) )"		1063704	0					
ANR	1064221	Callee	FAIL_IF		1063704	0					
ANR	1064222	Identifier	FAIL_IF		1063704	0					
ANR	1064223	ArgumentList	"push_inst ( compiler , SLL_W | T ( OFFS_REG ( arg ) ) | D ( TMP_REG3 ) | SH_IMM ( argw ) , DR ( TMP_REG3 ) )"		1063704	1					
ANR	1064224	Argument	"push_inst ( compiler , SLL_W | T ( OFFS_REG ( arg ) ) | D ( TMP_REG3 ) | SH_IMM ( argw ) , DR ( TMP_REG3 ) )"		1063704	0					
ANR	1064225	CallExpression	"push_inst ( compiler , SLL_W | T ( OFFS_REG ( arg ) ) | D ( TMP_REG3 ) | SH_IMM ( argw ) , DR ( TMP_REG3 ) )"		1063704	0					
ANR	1064226	Callee	push_inst		1063704	0					
ANR	1064227	Identifier	push_inst		1063704	0					
ANR	1064228	ArgumentList	compiler		1063704	1					
ANR	1064229	Argument	compiler		1063704	0					
ANR	1064230	Identifier	compiler		1063704	0					
ANR	1064231	Argument	SLL_W | T ( OFFS_REG ( arg ) ) | D ( TMP_REG3 ) | SH_IMM ( argw )		1063704	1					
ANR	1064232	InclusiveOrExpression	SLL_W | T ( OFFS_REG ( arg ) ) | D ( TMP_REG3 ) | SH_IMM ( argw )		1063704	0		|			
ANR	1064233	Identifier	SLL_W		1063704	0					
ANR	1064234	InclusiveOrExpression	T ( OFFS_REG ( arg ) ) | D ( TMP_REG3 ) | SH_IMM ( argw )		1063704	1		|			
ANR	1064235	CallExpression	T ( OFFS_REG ( arg ) )		1063704	0					
ANR	1064236	Callee	T		1063704	0					
ANR	1064237	Identifier	T		1063704	0					
ANR	1064238	ArgumentList	OFFS_REG ( arg )		1063704	1					
ANR	1064239	Argument	OFFS_REG ( arg )		1063704	0					
ANR	1064240	CallExpression	OFFS_REG ( arg )		1063704	0					
ANR	1064241	Callee	OFFS_REG		1063704	0					
ANR	1064242	Identifier	OFFS_REG		1063704	0					
ANR	1064243	ArgumentList	arg		1063704	1					
ANR	1064244	Argument	arg		1063704	0					
ANR	1064245	Identifier	arg		1063704	0					
ANR	1064246	InclusiveOrExpression	D ( TMP_REG3 ) | SH_IMM ( argw )		1063704	1		|			
ANR	1064247	CallExpression	D ( TMP_REG3 )		1063704	0					
ANR	1064248	Callee	D		1063704	0					
ANR	1064249	Identifier	D		1063704	0					
ANR	1064250	ArgumentList	TMP_REG3		1063704	1					
ANR	1064251	Argument	TMP_REG3		1063704	0					
ANR	1064252	Identifier	TMP_REG3		1063704	0					
ANR	1064253	CallExpression	SH_IMM ( argw )		1063704	1					
ANR	1064254	Callee	SH_IMM		1063704	0					
ANR	1064255	Identifier	SH_IMM		1063704	0					
ANR	1064256	ArgumentList	argw		1063704	1					
ANR	1064257	Argument	argw		1063704	0					
ANR	1064258	Identifier	argw		1063704	0					
ANR	1064259	Argument	DR ( TMP_REG3 )		1063704	2					
ANR	1064260	CallExpression	DR ( TMP_REG3 )		1063704	0					
ANR	1064261	Callee	DR		1063704	0					
ANR	1064262	Identifier	DR		1063704	0					
ANR	1064263	ArgumentList	TMP_REG3		1063704	1					
ANR	1064264	Argument	TMP_REG3		1063704	0					
ANR	1064265	Identifier	TMP_REG3		1063704	0					
ANR	1064266	IfStatement	if ( ! ( flags & WRITE_BACK ) )		1063704	4					
ANR	1064267	Condition	! ( flags & WRITE_BACK )	799:6:25437:25457	1063704	0	True				
ANR	1064268	UnaryOperationExpression	! ( flags & WRITE_BACK )		1063704	0					
ANR	1064269	UnaryOperator	!		1063704	0					
ANR	1064270	BitAndExpression	flags & WRITE_BACK		1063704	1		&			
ANR	1064271	Identifier	flags		1063704	0					
ANR	1064272	Identifier	WRITE_BACK		1063704	1					
ANR	1064273	CompoundStatement		57:29:2039:2039	1063704	1					
ANR	1064274	IfStatement	if ( arg == next_arg && argw == ( next_argw & 0x3 ) )		1063704	0					
ANR	1064275	Condition	arg == next_arg && argw == ( next_argw & 0x3 )	800:7:25469:25512	1063704	0	True				
ANR	1064276	AndExpression	arg == next_arg && argw == ( next_argw & 0x3 )		1063704	0		&&			
ANR	1064277	EqualityExpression	arg == next_arg		1063704	0		==			
ANR	1064278	Identifier	arg		1063704	0					
ANR	1064279	Identifier	next_arg		1063704	1					
ANR	1064280	EqualityExpression	argw == ( next_argw & 0x3 )		1063704	1		==			
ANR	1064281	Identifier	argw		1063704	0					
ANR	1064282	BitAndExpression	next_argw & 0x3		1063704	1		&			
ANR	1064283	Identifier	next_argw		1063704	0					
ANR	1064284	PrimaryExpression	0x3		1063704	1					
ANR	1064285	CompoundStatement		58:53:2094:2094	1063704	1					
ANR	1064286	ExpressionStatement	compiler -> cache_arg = arg	801:4:25521:25546	1063704	0	True				
ANR	1064287	AssignmentExpression	compiler -> cache_arg = arg		1063704	0		=			
ANR	1064288	PtrMemberAccess	compiler -> cache_arg		1063704	0					
ANR	1064289	Identifier	compiler		1063704	0					
ANR	1064290	Identifier	cache_arg		1063704	1					
ANR	1064291	Identifier	arg		1063704	1					
ANR	1064292	ExpressionStatement	compiler -> cache_argw = argw	802:4:25552:25579	1063704	1	True				
ANR	1064293	AssignmentExpression	compiler -> cache_argw = argw		1063704	0		=			
ANR	1064294	PtrMemberAccess	compiler -> cache_argw		1063704	0					
ANR	1064295	Identifier	compiler		1063704	0					
ANR	1064296	Identifier	cache_argw		1063704	1					
ANR	1064297	Identifier	argw		1063704	1					
ANR	1064298	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( base ) | T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | D ( TMP_REG3 ) , DR ( TMP_REG3 ) ) )"	803:4:25585:25697	1063704	2	True				
ANR	1064299	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( base ) | T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | D ( TMP_REG3 ) , DR ( TMP_REG3 ) ) )"		1063704	0					
ANR	1064300	Callee	FAIL_IF		1063704	0					
ANR	1064301	Identifier	FAIL_IF		1063704	0					
ANR	1064302	ArgumentList	"push_inst ( compiler , ADDU_W | S ( base ) | T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | D ( TMP_REG3 ) , DR ( TMP_REG3 ) )"		1063704	1					
ANR	1064303	Argument	"push_inst ( compiler , ADDU_W | S ( base ) | T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | D ( TMP_REG3 ) , DR ( TMP_REG3 ) )"		1063704	0					
ANR	1064304	CallExpression	"push_inst ( compiler , ADDU_W | S ( base ) | T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | D ( TMP_REG3 ) , DR ( TMP_REG3 ) )"		1063704	0					
ANR	1064305	Callee	push_inst		1063704	0					
ANR	1064306	Identifier	push_inst		1063704	0					
ANR	1064307	ArgumentList	compiler		1063704	1					
ANR	1064308	Argument	compiler		1063704	0					
ANR	1064309	Identifier	compiler		1063704	0					
ANR	1064310	Argument	ADDU_W | S ( base ) | T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | D ( TMP_REG3 )		1063704	1					
ANR	1064311	InclusiveOrExpression	ADDU_W | S ( base ) | T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | D ( TMP_REG3 )		1063704	0		|			
ANR	1064312	Identifier	ADDU_W		1063704	0					
ANR	1064313	InclusiveOrExpression	S ( base ) | T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | D ( TMP_REG3 )		1063704	1		|			
ANR	1064314	CallExpression	S ( base )		1063704	0					
ANR	1064315	Callee	S		1063704	0					
ANR	1064316	Identifier	S		1063704	0					
ANR	1064317	ArgumentList	base		1063704	1					
ANR	1064318	Argument	base		1063704	0					
ANR	1064319	Identifier	base		1063704	0					
ANR	1064320	InclusiveOrExpression	T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | D ( TMP_REG3 )		1063704	1		|			
ANR	1064321	CallExpression	T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 )		1063704	0					
ANR	1064322	Callee	T		1063704	0					
ANR	1064323	Identifier	T		1063704	0					
ANR	1064324	ArgumentList	! argw ? OFFS_REG ( arg ) : TMP_REG3		1063704	1					
ANR	1064325	Argument	! argw ? OFFS_REG ( arg ) : TMP_REG3		1063704	0					
ANR	1064326	ConditionalExpression	! argw ? OFFS_REG ( arg ) : TMP_REG3		1063704	0					
ANR	1064327	Condition	! argw		1063704	0					
ANR	1064328	UnaryOperationExpression	! argw		1063704	0					
ANR	1064329	UnaryOperator	!		1063704	0					
ANR	1064330	Identifier	argw		1063704	1					
ANR	1064331	CallExpression	OFFS_REG ( arg )		1063704	1					
ANR	1064332	Callee	OFFS_REG		1063704	0					
ANR	1064333	Identifier	OFFS_REG		1063704	0					
ANR	1064334	ArgumentList	arg		1063704	1					
ANR	1064335	Argument	arg		1063704	0					
ANR	1064336	Identifier	arg		1063704	0					
ANR	1064337	Identifier	TMP_REG3		1063704	2					
ANR	1064338	CallExpression	D ( TMP_REG3 )		1063704	1					
ANR	1064339	Callee	D		1063704	0					
ANR	1064340	Identifier	D		1063704	0					
ANR	1064341	ArgumentList	TMP_REG3		1063704	1					
ANR	1064342	Argument	TMP_REG3		1063704	0					
ANR	1064343	Identifier	TMP_REG3		1063704	0					
ANR	1064344	Argument	DR ( TMP_REG3 )		1063704	2					
ANR	1064345	CallExpression	DR ( TMP_REG3 )		1063704	0					
ANR	1064346	Callee	DR		1063704	0					
ANR	1064347	Identifier	DR		1063704	0					
ANR	1064348	ArgumentList	TMP_REG3		1063704	1					
ANR	1064349	Argument	TMP_REG3		1063704	0					
ANR	1064350	Identifier	TMP_REG3		1063704	0					
ANR	1064351	ExpressionStatement	tmp_ar = DR ( TMP_REG3 )	804:4:25703:25724	1063704	3	True				
ANR	1064352	AssignmentExpression	tmp_ar = DR ( TMP_REG3 )		1063704	0		=			
ANR	1064353	Identifier	tmp_ar		1063704	0					
ANR	1064354	CallExpression	DR ( TMP_REG3 )		1063704	1					
ANR	1064355	Callee	DR		1063704	0					
ANR	1064356	Identifier	DR		1063704	0					
ANR	1064357	ArgumentList	TMP_REG3		1063704	1					
ANR	1064358	Argument	TMP_REG3		1063704	0					
ANR	1064359	Identifier	TMP_REG3		1063704	0					
ANR	1064360	ElseStatement	else		1063704	0					
ANR	1064361	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( base ) | T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | DA ( tmp_ar ) , tmp_ar ) )"	807:4:25743:25848	1063704	0	True				
ANR	1064362	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( base ) | T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | DA ( tmp_ar ) , tmp_ar ) )"		1063704	0					
ANR	1064363	Callee	FAIL_IF		1063704	0					
ANR	1064364	Identifier	FAIL_IF		1063704	0					
ANR	1064365	ArgumentList	"push_inst ( compiler , ADDU_W | S ( base ) | T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | DA ( tmp_ar ) , tmp_ar )"		1063704	1					
ANR	1064366	Argument	"push_inst ( compiler , ADDU_W | S ( base ) | T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | DA ( tmp_ar ) , tmp_ar )"		1063704	0					
ANR	1064367	CallExpression	"push_inst ( compiler , ADDU_W | S ( base ) | T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | DA ( tmp_ar ) , tmp_ar )"		1063704	0					
ANR	1064368	Callee	push_inst		1063704	0					
ANR	1064369	Identifier	push_inst		1063704	0					
ANR	1064370	ArgumentList	compiler		1063704	1					
ANR	1064371	Argument	compiler		1063704	0					
ANR	1064372	Identifier	compiler		1063704	0					
ANR	1064373	Argument	ADDU_W | S ( base ) | T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | DA ( tmp_ar )		1063704	1					
ANR	1064374	InclusiveOrExpression	ADDU_W | S ( base ) | T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | DA ( tmp_ar )		1063704	0		|			
ANR	1064375	Identifier	ADDU_W		1063704	0					
ANR	1064376	InclusiveOrExpression	S ( base ) | T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | DA ( tmp_ar )		1063704	1		|			
ANR	1064377	CallExpression	S ( base )		1063704	0					
ANR	1064378	Callee	S		1063704	0					
ANR	1064379	Identifier	S		1063704	0					
ANR	1064380	ArgumentList	base		1063704	1					
ANR	1064381	Argument	base		1063704	0					
ANR	1064382	Identifier	base		1063704	0					
ANR	1064383	InclusiveOrExpression	T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | DA ( tmp_ar )		1063704	1		|			
ANR	1064384	CallExpression	T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 )		1063704	0					
ANR	1064385	Callee	T		1063704	0					
ANR	1064386	Identifier	T		1063704	0					
ANR	1064387	ArgumentList	! argw ? OFFS_REG ( arg ) : TMP_REG3		1063704	1					
ANR	1064388	Argument	! argw ? OFFS_REG ( arg ) : TMP_REG3		1063704	0					
ANR	1064389	ConditionalExpression	! argw ? OFFS_REG ( arg ) : TMP_REG3		1063704	0					
ANR	1064390	Condition	! argw		1063704	0					
ANR	1064391	UnaryOperationExpression	! argw		1063704	0					
ANR	1064392	UnaryOperator	!		1063704	0					
ANR	1064393	Identifier	argw		1063704	1					
ANR	1064394	CallExpression	OFFS_REG ( arg )		1063704	1					
ANR	1064395	Callee	OFFS_REG		1063704	0					
ANR	1064396	Identifier	OFFS_REG		1063704	0					
ANR	1064397	ArgumentList	arg		1063704	1					
ANR	1064398	Argument	arg		1063704	0					
ANR	1064399	Identifier	arg		1063704	0					
ANR	1064400	Identifier	TMP_REG3		1063704	2					
ANR	1064401	CallExpression	DA ( tmp_ar )		1063704	1					
ANR	1064402	Callee	DA		1063704	0					
ANR	1064403	Identifier	DA		1063704	0					
ANR	1064404	ArgumentList	tmp_ar		1063704	1					
ANR	1064405	Argument	tmp_ar		1063704	0					
ANR	1064406	Identifier	tmp_ar		1063704	0					
ANR	1064407	Argument	tmp_ar		1063704	2					
ANR	1064408	Identifier	tmp_ar		1063704	0					
ANR	1064409	ReturnStatement	"return push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | SA ( tmp_ar ) | TA ( reg_ar ) , delay_slot ) ;"	808:3:25853:25956	1063704	1	True				
ANR	1064410	CallExpression	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | SA ( tmp_ar ) | TA ( reg_ar ) , delay_slot )"		1063704	0					
ANR	1064411	Callee	push_inst		1063704	0					
ANR	1064412	Identifier	push_inst		1063704	0					
ANR	1064413	ArgumentList	compiler		1063704	1					
ANR	1064414	Argument	compiler		1063704	0					
ANR	1064415	Identifier	compiler		1063704	0					
ANR	1064416	Argument	data_transfer_insts [ flags & MEM_MASK ] | SA ( tmp_ar ) | TA ( reg_ar )		1063704	1					
ANR	1064417	InclusiveOrExpression	data_transfer_insts [ flags & MEM_MASK ] | SA ( tmp_ar ) | TA ( reg_ar )		1063704	0		|			
ANR	1064418	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1063704	0					
ANR	1064419	Identifier	data_transfer_insts		1063704	0					
ANR	1064420	BitAndExpression	flags & MEM_MASK		1063704	1		&			
ANR	1064421	Identifier	flags		1063704	0					
ANR	1064422	Identifier	MEM_MASK		1063704	1					
ANR	1064423	InclusiveOrExpression	SA ( tmp_ar ) | TA ( reg_ar )		1063704	1		|			
ANR	1064424	CallExpression	SA ( tmp_ar )		1063704	0					
ANR	1064425	Callee	SA		1063704	0					
ANR	1064426	Identifier	SA		1063704	0					
ANR	1064427	ArgumentList	tmp_ar		1063704	1					
ANR	1064428	Argument	tmp_ar		1063704	0					
ANR	1064429	Identifier	tmp_ar		1063704	0					
ANR	1064430	CallExpression	TA ( reg_ar )		1063704	1					
ANR	1064431	Callee	TA		1063704	0					
ANR	1064432	Identifier	TA		1063704	0					
ANR	1064433	ArgumentList	reg_ar		1063704	1					
ANR	1064434	Argument	reg_ar		1063704	0					
ANR	1064435	Identifier	reg_ar		1063704	0					
ANR	1064436	Argument	delay_slot		1063704	2					
ANR	1064437	Identifier	delay_slot		1063704	0					
ANR	1064438	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( base ) | T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | D ( base ) , DR ( base ) ) )"	810:2:25964:26068	1063704	5	True				
ANR	1064439	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( base ) | T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | D ( base ) , DR ( base ) ) )"		1063704	0					
ANR	1064440	Callee	FAIL_IF		1063704	0					
ANR	1064441	Identifier	FAIL_IF		1063704	0					
ANR	1064442	ArgumentList	"push_inst ( compiler , ADDU_W | S ( base ) | T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | D ( base ) , DR ( base ) )"		1063704	1					
ANR	1064443	Argument	"push_inst ( compiler , ADDU_W | S ( base ) | T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | D ( base ) , DR ( base ) )"		1063704	0					
ANR	1064444	CallExpression	"push_inst ( compiler , ADDU_W | S ( base ) | T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | D ( base ) , DR ( base ) )"		1063704	0					
ANR	1064445	Callee	push_inst		1063704	0					
ANR	1064446	Identifier	push_inst		1063704	0					
ANR	1064447	ArgumentList	compiler		1063704	1					
ANR	1064448	Argument	compiler		1063704	0					
ANR	1064449	Identifier	compiler		1063704	0					
ANR	1064450	Argument	ADDU_W | S ( base ) | T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | D ( base )		1063704	1					
ANR	1064451	InclusiveOrExpression	ADDU_W | S ( base ) | T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | D ( base )		1063704	0		|			
ANR	1064452	Identifier	ADDU_W		1063704	0					
ANR	1064453	InclusiveOrExpression	S ( base ) | T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | D ( base )		1063704	1		|			
ANR	1064454	CallExpression	S ( base )		1063704	0					
ANR	1064455	Callee	S		1063704	0					
ANR	1064456	Identifier	S		1063704	0					
ANR	1064457	ArgumentList	base		1063704	1					
ANR	1064458	Argument	base		1063704	0					
ANR	1064459	Identifier	base		1063704	0					
ANR	1064460	InclusiveOrExpression	T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 ) | D ( base )		1063704	1		|			
ANR	1064461	CallExpression	T ( ! argw ? OFFS_REG ( arg ) : TMP_REG3 )		1063704	0					
ANR	1064462	Callee	T		1063704	0					
ANR	1064463	Identifier	T		1063704	0					
ANR	1064464	ArgumentList	! argw ? OFFS_REG ( arg ) : TMP_REG3		1063704	1					
ANR	1064465	Argument	! argw ? OFFS_REG ( arg ) : TMP_REG3		1063704	0					
ANR	1064466	ConditionalExpression	! argw ? OFFS_REG ( arg ) : TMP_REG3		1063704	0					
ANR	1064467	Condition	! argw		1063704	0					
ANR	1064468	UnaryOperationExpression	! argw		1063704	0					
ANR	1064469	UnaryOperator	!		1063704	0					
ANR	1064470	Identifier	argw		1063704	1					
ANR	1064471	CallExpression	OFFS_REG ( arg )		1063704	1					
ANR	1064472	Callee	OFFS_REG		1063704	0					
ANR	1064473	Identifier	OFFS_REG		1063704	0					
ANR	1064474	ArgumentList	arg		1063704	1					
ANR	1064475	Argument	arg		1063704	0					
ANR	1064476	Identifier	arg		1063704	0					
ANR	1064477	Identifier	TMP_REG3		1063704	2					
ANR	1064478	CallExpression	D ( base )		1063704	1					
ANR	1064479	Callee	D		1063704	0					
ANR	1064480	Identifier	D		1063704	0					
ANR	1064481	ArgumentList	base		1063704	1					
ANR	1064482	Argument	base		1063704	0					
ANR	1064483	Identifier	base		1063704	0					
ANR	1064484	Argument	DR ( base )		1063704	2					
ANR	1064485	CallExpression	DR ( base )		1063704	0					
ANR	1064486	Callee	DR		1063704	0					
ANR	1064487	Identifier	DR		1063704	0					
ANR	1064488	ArgumentList	base		1063704	1					
ANR	1064489	Argument	base		1063704	0					
ANR	1064490	Identifier	base		1063704	0					
ANR	1064491	ReturnStatement	"return push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( base ) | TA ( reg_ar ) , delay_slot ) ;"	811:2:26072:26172	1063704	6	True				
ANR	1064492	CallExpression	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( base ) | TA ( reg_ar ) , delay_slot )"		1063704	0					
ANR	1064493	Callee	push_inst		1063704	0					
ANR	1064494	Identifier	push_inst		1063704	0					
ANR	1064495	ArgumentList	compiler		1063704	1					
ANR	1064496	Argument	compiler		1063704	0					
ANR	1064497	Identifier	compiler		1063704	0					
ANR	1064498	Argument	data_transfer_insts [ flags & MEM_MASK ] | S ( base ) | TA ( reg_ar )		1063704	1					
ANR	1064499	InclusiveOrExpression	data_transfer_insts [ flags & MEM_MASK ] | S ( base ) | TA ( reg_ar )		1063704	0		|			
ANR	1064500	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1063704	0					
ANR	1064501	Identifier	data_transfer_insts		1063704	0					
ANR	1064502	BitAndExpression	flags & MEM_MASK		1063704	1		&			
ANR	1064503	Identifier	flags		1063704	0					
ANR	1064504	Identifier	MEM_MASK		1063704	1					
ANR	1064505	InclusiveOrExpression	S ( base ) | TA ( reg_ar )		1063704	1		|			
ANR	1064506	CallExpression	S ( base )		1063704	0					
ANR	1064507	Callee	S		1063704	0					
ANR	1064508	Identifier	S		1063704	0					
ANR	1064509	ArgumentList	base		1063704	1					
ANR	1064510	Argument	base		1063704	0					
ANR	1064511	Identifier	base		1063704	0					
ANR	1064512	CallExpression	TA ( reg_ar )		1063704	1					
ANR	1064513	Callee	TA		1063704	0					
ANR	1064514	Identifier	TA		1063704	0					
ANR	1064515	ArgumentList	reg_ar		1063704	1					
ANR	1064516	Argument	reg_ar		1063704	0					
ANR	1064517	Identifier	reg_ar		1063704	0					
ANR	1064518	Argument	delay_slot		1063704	2					
ANR	1064519	Identifier	delay_slot		1063704	0					
ANR	1064520	IfStatement	if ( SLJIT_UNLIKELY ( flags & WRITE_BACK ) && base )		1063704	6					
ANR	1064521	Condition	SLJIT_UNLIKELY ( flags & WRITE_BACK ) && base	814:5:26183:26224	1063704	0	True				
ANR	1064522	AndExpression	SLJIT_UNLIKELY ( flags & WRITE_BACK ) && base		1063704	0		&&			
ANR	1064523	CallExpression	SLJIT_UNLIKELY ( flags & WRITE_BACK )		1063704	0					
ANR	1064524	Callee	SLJIT_UNLIKELY		1063704	0					
ANR	1064525	Identifier	SLJIT_UNLIKELY		1063704	0					
ANR	1064526	ArgumentList	flags & WRITE_BACK		1063704	1					
ANR	1064527	Argument	flags & WRITE_BACK		1063704	0					
ANR	1064528	BitAndExpression	flags & WRITE_BACK		1063704	0		&			
ANR	1064529	Identifier	flags		1063704	0					
ANR	1064530	Identifier	WRITE_BACK		1063704	1					
ANR	1064531	Identifier	base		1063704	1					
ANR	1064532	CompoundStatement		72:49:2806:2806	1063704	1					
ANR	1064533	IfStatement	if ( reg_ar == DR ( base ) )		1063704	0					
ANR	1064534	Condition	reg_ar == DR ( base )	816:6:26290:26307	1063704	0	True				
ANR	1064535	EqualityExpression	reg_ar == DR ( base )		1063704	0		==			
ANR	1064536	Identifier	reg_ar		1063704	0					
ANR	1064537	CallExpression	DR ( base )		1063704	1					
ANR	1064538	Callee	DR		1063704	0					
ANR	1064539	Identifier	DR		1063704	0					
ANR	1064540	ArgumentList	base		1063704	1					
ANR	1064541	Argument	base		1063704	0					
ANR	1064542	Identifier	base		1063704	0					
ANR	1064543	CompoundStatement		74:26:2889:2889	1063704	1					
ANR	1064544	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & LOAD_DATA ) && DR ( TMP_REG1 ) != reg_ar )	817:3:26315:26375	1063704	0	True				
ANR	1064545	CallExpression	SLJIT_ASSERT ( ! ( flags & LOAD_DATA ) && DR ( TMP_REG1 ) != reg_ar )		1063704	0					
ANR	1064546	Callee	SLJIT_ASSERT		1063704	0					
ANR	1064547	Identifier	SLJIT_ASSERT		1063704	0					
ANR	1064548	ArgumentList	! ( flags & LOAD_DATA ) && DR ( TMP_REG1 ) != reg_ar		1063704	1					
ANR	1064549	Argument	! ( flags & LOAD_DATA ) && DR ( TMP_REG1 ) != reg_ar		1063704	0					
ANR	1064550	AndExpression	! ( flags & LOAD_DATA ) && DR ( TMP_REG1 ) != reg_ar		1063704	0		&&			
ANR	1064551	UnaryOperationExpression	! ( flags & LOAD_DATA )		1063704	0					
ANR	1064552	UnaryOperator	!		1063704	0					
ANR	1064553	BitAndExpression	flags & LOAD_DATA		1063704	1		&			
ANR	1064554	Identifier	flags		1063704	0					
ANR	1064555	Identifier	LOAD_DATA		1063704	1					
ANR	1064556	EqualityExpression	DR ( TMP_REG1 ) != reg_ar		1063704	1		!=			
ANR	1064557	CallExpression	DR ( TMP_REG1 )		1063704	0					
ANR	1064558	Callee	DR		1063704	0					
ANR	1064559	Identifier	DR		1063704	0					
ANR	1064560	ArgumentList	TMP_REG1		1063704	1					
ANR	1064561	Argument	TMP_REG1		1063704	0					
ANR	1064562	Identifier	TMP_REG1		1063704	0					
ANR	1064563	Identifier	reg_ar		1063704	1					
ANR	1064564	IfStatement	if ( argw <= SIMM_MAX && argw >= SIMM_MIN )		1063704	1					
ANR	1064565	Condition	argw <= SIMM_MAX && argw >= SIMM_MIN	818:7:26384:26419	1063704	0	True				
ANR	1064566	AndExpression	argw <= SIMM_MAX && argw >= SIMM_MIN		1063704	0		&&			
ANR	1064567	RelationalExpression	argw <= SIMM_MAX		1063704	0		<=			
ANR	1064568	Identifier	argw		1063704	0					
ANR	1064569	Identifier	SIMM_MAX		1063704	1					
ANR	1064570	RelationalExpression	argw >= SIMM_MIN		1063704	1		>=			
ANR	1064571	Identifier	argw		1063704	0					
ANR	1064572	Identifier	SIMM_MIN		1063704	1					
ANR	1064573	CompoundStatement		76:45:3001:3001	1063704	1					
ANR	1064574	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( base ) | TA ( reg_ar ) | IMM ( argw ) , MOVABLE_INS ) )"	819:4:26428:26543	1063704	0	True				
ANR	1064575	CallExpression	"FAIL_IF ( push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( base ) | TA ( reg_ar ) | IMM ( argw ) , MOVABLE_INS ) )"		1063704	0					
ANR	1064576	Callee	FAIL_IF		1063704	0					
ANR	1064577	Identifier	FAIL_IF		1063704	0					
ANR	1064578	ArgumentList	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( base ) | TA ( reg_ar ) | IMM ( argw ) , MOVABLE_INS )"		1063704	1					
ANR	1064579	Argument	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( base ) | TA ( reg_ar ) | IMM ( argw ) , MOVABLE_INS )"		1063704	0					
ANR	1064580	CallExpression	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( base ) | TA ( reg_ar ) | IMM ( argw ) , MOVABLE_INS )"		1063704	0					
ANR	1064581	Callee	push_inst		1063704	0					
ANR	1064582	Identifier	push_inst		1063704	0					
ANR	1064583	ArgumentList	compiler		1063704	1					
ANR	1064584	Argument	compiler		1063704	0					
ANR	1064585	Identifier	compiler		1063704	0					
ANR	1064586	Argument	data_transfer_insts [ flags & MEM_MASK ] | S ( base ) | TA ( reg_ar ) | IMM ( argw )		1063704	1					
ANR	1064587	InclusiveOrExpression	data_transfer_insts [ flags & MEM_MASK ] | S ( base ) | TA ( reg_ar ) | IMM ( argw )		1063704	0		|			
ANR	1064588	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1063704	0					
ANR	1064589	Identifier	data_transfer_insts		1063704	0					
ANR	1064590	BitAndExpression	flags & MEM_MASK		1063704	1		&			
ANR	1064591	Identifier	flags		1063704	0					
ANR	1064592	Identifier	MEM_MASK		1063704	1					
ANR	1064593	InclusiveOrExpression	S ( base ) | TA ( reg_ar ) | IMM ( argw )		1063704	1		|			
ANR	1064594	CallExpression	S ( base )		1063704	0					
ANR	1064595	Callee	S		1063704	0					
ANR	1064596	Identifier	S		1063704	0					
ANR	1064597	ArgumentList	base		1063704	1					
ANR	1064598	Argument	base		1063704	0					
ANR	1064599	Identifier	base		1063704	0					
ANR	1064600	InclusiveOrExpression	TA ( reg_ar ) | IMM ( argw )		1063704	1		|			
ANR	1064601	CallExpression	TA ( reg_ar )		1063704	0					
ANR	1064602	Callee	TA		1063704	0					
ANR	1064603	Identifier	TA		1063704	0					
ANR	1064604	ArgumentList	reg_ar		1063704	1					
ANR	1064605	Argument	reg_ar		1063704	0					
ANR	1064606	Identifier	reg_ar		1063704	0					
ANR	1064607	CallExpression	IMM ( argw )		1063704	1					
ANR	1064608	Callee	IMM		1063704	0					
ANR	1064609	Identifier	IMM		1063704	0					
ANR	1064610	ArgumentList	argw		1063704	1					
ANR	1064611	Argument	argw		1063704	0					
ANR	1064612	Identifier	argw		1063704	0					
ANR	1064613	Argument	MOVABLE_INS		1063704	2					
ANR	1064614	Identifier	MOVABLE_INS		1063704	0					
ANR	1064615	IfStatement	if ( argw )		1063704	1					
ANR	1064616	Condition	argw	820:8:26553:26556	1063704	0	True				
ANR	1064617	Identifier	argw		1063704	0					
ANR	1064618	ReturnStatement	"return push_inst ( compiler , ADDIU_W | S ( base ) | T ( base ) | IMM ( argw ) , DR ( base ) ) ;"	821:5:26564:26641	1063704	1	True				
ANR	1064619	CallExpression	"push_inst ( compiler , ADDIU_W | S ( base ) | T ( base ) | IMM ( argw ) , DR ( base ) )"		1063704	0					
ANR	1064620	Callee	push_inst		1063704	0					
ANR	1064621	Identifier	push_inst		1063704	0					
ANR	1064622	ArgumentList	compiler		1063704	1					
ANR	1064623	Argument	compiler		1063704	0					
ANR	1064624	Identifier	compiler		1063704	0					
ANR	1064625	Argument	ADDIU_W | S ( base ) | T ( base ) | IMM ( argw )		1063704	1					
ANR	1064626	InclusiveOrExpression	ADDIU_W | S ( base ) | T ( base ) | IMM ( argw )		1063704	0		|			
ANR	1064627	Identifier	ADDIU_W		1063704	0					
ANR	1064628	InclusiveOrExpression	S ( base ) | T ( base ) | IMM ( argw )		1063704	1		|			
ANR	1064629	CallExpression	S ( base )		1063704	0					
ANR	1064630	Callee	S		1063704	0					
ANR	1064631	Identifier	S		1063704	0					
ANR	1064632	ArgumentList	base		1063704	1					
ANR	1064633	Argument	base		1063704	0					
ANR	1064634	Identifier	base		1063704	0					
ANR	1064635	InclusiveOrExpression	T ( base ) | IMM ( argw )		1063704	1		|			
ANR	1064636	CallExpression	T ( base )		1063704	0					
ANR	1064637	Callee	T		1063704	0					
ANR	1064638	Identifier	T		1063704	0					
ANR	1064639	ArgumentList	base		1063704	1					
ANR	1064640	Argument	base		1063704	0					
ANR	1064641	Identifier	base		1063704	0					
ANR	1064642	CallExpression	IMM ( argw )		1063704	1					
ANR	1064643	Callee	IMM		1063704	0					
ANR	1064644	Identifier	IMM		1063704	0					
ANR	1064645	ArgumentList	argw		1063704	1					
ANR	1064646	Argument	argw		1063704	0					
ANR	1064647	Identifier	argw		1063704	0					
ANR	1064648	Argument	DR ( base )		1063704	2					
ANR	1064649	CallExpression	DR ( base )		1063704	0					
ANR	1064650	Callee	DR		1063704	0					
ANR	1064651	Identifier	DR		1063704	0					
ANR	1064652	ArgumentList	base		1063704	1					
ANR	1064653	Argument	base		1063704	0					
ANR	1064654	Identifier	base		1063704	0					
ANR	1064655	ReturnStatement	return SLJIT_SUCCESS ;	822:4:26647:26667	1063704	2	True				
ANR	1064656	Identifier	SLJIT_SUCCESS		1063704	0					
ANR	1064657	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDU_W | SA ( reg_ar ) | TA ( 0 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) ) )"	824:3:26677:26762	1063704	2	True				
ANR	1064658	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDU_W | SA ( reg_ar ) | TA ( 0 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) ) )"		1063704	0					
ANR	1064659	Callee	FAIL_IF		1063704	0					
ANR	1064660	Identifier	FAIL_IF		1063704	0					
ANR	1064661	ArgumentList	"push_inst ( compiler , ADDU_W | SA ( reg_ar ) | TA ( 0 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) )"		1063704	1					
ANR	1064662	Argument	"push_inst ( compiler , ADDU_W | SA ( reg_ar ) | TA ( 0 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) )"		1063704	0					
ANR	1064663	CallExpression	"push_inst ( compiler , ADDU_W | SA ( reg_ar ) | TA ( 0 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) )"		1063704	0					
ANR	1064664	Callee	push_inst		1063704	0					
ANR	1064665	Identifier	push_inst		1063704	0					
ANR	1064666	ArgumentList	compiler		1063704	1					
ANR	1064667	Argument	compiler		1063704	0					
ANR	1064668	Identifier	compiler		1063704	0					
ANR	1064669	Argument	ADDU_W | SA ( reg_ar ) | TA ( 0 ) | D ( TMP_REG1 )		1063704	1					
ANR	1064670	InclusiveOrExpression	ADDU_W | SA ( reg_ar ) | TA ( 0 ) | D ( TMP_REG1 )		1063704	0		|			
ANR	1064671	Identifier	ADDU_W		1063704	0					
ANR	1064672	InclusiveOrExpression	SA ( reg_ar ) | TA ( 0 ) | D ( TMP_REG1 )		1063704	1		|			
ANR	1064673	CallExpression	SA ( reg_ar )		1063704	0					
ANR	1064674	Callee	SA		1063704	0					
ANR	1064675	Identifier	SA		1063704	0					
ANR	1064676	ArgumentList	reg_ar		1063704	1					
ANR	1064677	Argument	reg_ar		1063704	0					
ANR	1064678	Identifier	reg_ar		1063704	0					
ANR	1064679	InclusiveOrExpression	TA ( 0 ) | D ( TMP_REG1 )		1063704	1		|			
ANR	1064680	CallExpression	TA ( 0 )		1063704	0					
ANR	1064681	Callee	TA		1063704	0					
ANR	1064682	Identifier	TA		1063704	0					
ANR	1064683	ArgumentList	0		1063704	1					
ANR	1064684	Argument	0		1063704	0					
ANR	1064685	PrimaryExpression	0		1063704	0					
ANR	1064686	CallExpression	D ( TMP_REG1 )		1063704	1					
ANR	1064687	Callee	D		1063704	0					
ANR	1064688	Identifier	D		1063704	0					
ANR	1064689	ArgumentList	TMP_REG1		1063704	1					
ANR	1064690	Argument	TMP_REG1		1063704	0					
ANR	1064691	Identifier	TMP_REG1		1063704	0					
ANR	1064692	Argument	DR ( TMP_REG1 )		1063704	2					
ANR	1064693	CallExpression	DR ( TMP_REG1 )		1063704	0					
ANR	1064694	Callee	DR		1063704	0					
ANR	1064695	Identifier	DR		1063704	0					
ANR	1064696	ArgumentList	TMP_REG1		1063704	1					
ANR	1064697	Argument	TMP_REG1		1063704	0					
ANR	1064698	Identifier	TMP_REG1		1063704	0					
ANR	1064699	ExpressionStatement	reg_ar = DR ( TMP_REG1 )	825:3:26767:26788	1063704	3	True				
ANR	1064700	AssignmentExpression	reg_ar = DR ( TMP_REG1 )		1063704	0		=			
ANR	1064701	Identifier	reg_ar		1063704	0					
ANR	1064702	CallExpression	DR ( TMP_REG1 )		1063704	1					
ANR	1064703	Callee	DR		1063704	0					
ANR	1064704	Identifier	DR		1063704	0					
ANR	1064705	ArgumentList	TMP_REG1		1063704	1					
ANR	1064706	Argument	TMP_REG1		1063704	0					
ANR	1064707	Identifier	TMP_REG1		1063704	0					
ANR	1064708	IfStatement	if ( argw <= SIMM_MAX && argw >= SIMM_MIN )		1063704	1					
ANR	1064709	Condition	argw <= SIMM_MAX && argw >= SIMM_MIN	828:6:26801:26836	1063704	0	True				
ANR	1064710	AndExpression	argw <= SIMM_MAX && argw >= SIMM_MIN		1063704	0		&&			
ANR	1064711	RelationalExpression	argw <= SIMM_MAX		1063704	0		<=			
ANR	1064712	Identifier	argw		1063704	0					
ANR	1064713	Identifier	SIMM_MAX		1063704	1					
ANR	1064714	RelationalExpression	argw >= SIMM_MIN		1063704	1		>=			
ANR	1064715	Identifier	argw		1063704	0					
ANR	1064716	Identifier	SIMM_MIN		1063704	1					
ANR	1064717	CompoundStatement		86:44:3418:3418	1063704	1					
ANR	1064718	IfStatement	if ( argw )		1063704	0					
ANR	1064719	Condition	argw	829:7:26848:26851	1063704	0	True				
ANR	1064720	Identifier	argw		1063704	0					
ANR	1064721	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDIU_W | S ( base ) | T ( base ) | IMM ( argw ) , DR ( base ) ) )"	830:4:26858:26937	1063704	1	True				
ANR	1064722	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDIU_W | S ( base ) | T ( base ) | IMM ( argw ) , DR ( base ) ) )"		1063704	0					
ANR	1064723	Callee	FAIL_IF		1063704	0					
ANR	1064724	Identifier	FAIL_IF		1063704	0					
ANR	1064725	ArgumentList	"push_inst ( compiler , ADDIU_W | S ( base ) | T ( base ) | IMM ( argw ) , DR ( base ) )"		1063704	1					
ANR	1064726	Argument	"push_inst ( compiler , ADDIU_W | S ( base ) | T ( base ) | IMM ( argw ) , DR ( base ) )"		1063704	0					
ANR	1064727	CallExpression	"push_inst ( compiler , ADDIU_W | S ( base ) | T ( base ) | IMM ( argw ) , DR ( base ) )"		1063704	0					
ANR	1064728	Callee	push_inst		1063704	0					
ANR	1064729	Identifier	push_inst		1063704	0					
ANR	1064730	ArgumentList	compiler		1063704	1					
ANR	1064731	Argument	compiler		1063704	0					
ANR	1064732	Identifier	compiler		1063704	0					
ANR	1064733	Argument	ADDIU_W | S ( base ) | T ( base ) | IMM ( argw )		1063704	1					
ANR	1064734	InclusiveOrExpression	ADDIU_W | S ( base ) | T ( base ) | IMM ( argw )		1063704	0		|			
ANR	1064735	Identifier	ADDIU_W		1063704	0					
ANR	1064736	InclusiveOrExpression	S ( base ) | T ( base ) | IMM ( argw )		1063704	1		|			
ANR	1064737	CallExpression	S ( base )		1063704	0					
ANR	1064738	Callee	S		1063704	0					
ANR	1064739	Identifier	S		1063704	0					
ANR	1064740	ArgumentList	base		1063704	1					
ANR	1064741	Argument	base		1063704	0					
ANR	1064742	Identifier	base		1063704	0					
ANR	1064743	InclusiveOrExpression	T ( base ) | IMM ( argw )		1063704	1		|			
ANR	1064744	CallExpression	T ( base )		1063704	0					
ANR	1064745	Callee	T		1063704	0					
ANR	1064746	Identifier	T		1063704	0					
ANR	1064747	ArgumentList	base		1063704	1					
ANR	1064748	Argument	base		1063704	0					
ANR	1064749	Identifier	base		1063704	0					
ANR	1064750	CallExpression	IMM ( argw )		1063704	1					
ANR	1064751	Callee	IMM		1063704	0					
ANR	1064752	Identifier	IMM		1063704	0					
ANR	1064753	ArgumentList	argw		1063704	1					
ANR	1064754	Argument	argw		1063704	0					
ANR	1064755	Identifier	argw		1063704	0					
ANR	1064756	Argument	DR ( base )		1063704	2					
ANR	1064757	CallExpression	DR ( base )		1063704	0					
ANR	1064758	Callee	DR		1063704	0					
ANR	1064759	Identifier	DR		1063704	0					
ANR	1064760	ArgumentList	base		1063704	1					
ANR	1064761	Argument	base		1063704	0					
ANR	1064762	Identifier	base		1063704	0					
ANR	1064763	ElseStatement	else		1063704	0					
ANR	1064764	CompoundStatement		90:7:3529:3529	1063704	0					
ANR	1064765	IfStatement	if ( compiler -> cache_arg == SLJIT_MEM && argw - compiler -> cache_argw <= SIMM_MAX && argw - compiler -> cache_argw >= SIMM_MIN )		1063704	0					
ANR	1064766	Condition	compiler -> cache_arg == SLJIT_MEM && argw - compiler -> cache_argw <= SIMM_MAX && argw - compiler -> cache_argw >= SIMM_MIN	833:7:26959:27076	1063704	0	True				
ANR	1064767	AndExpression	compiler -> cache_arg == SLJIT_MEM && argw - compiler -> cache_argw <= SIMM_MAX && argw - compiler -> cache_argw >= SIMM_MIN		1063704	0		&&			
ANR	1064768	EqualityExpression	compiler -> cache_arg == SLJIT_MEM		1063704	0		==			
ANR	1064769	PtrMemberAccess	compiler -> cache_arg		1063704	0					
ANR	1064770	Identifier	compiler		1063704	0					
ANR	1064771	Identifier	cache_arg		1063704	1					
ANR	1064772	Identifier	SLJIT_MEM		1063704	1					
ANR	1064773	AndExpression	argw - compiler -> cache_argw <= SIMM_MAX && argw - compiler -> cache_argw >= SIMM_MIN		1063704	1		&&			
ANR	1064774	RelationalExpression	argw - compiler -> cache_argw <= SIMM_MAX		1063704	0		<=			
ANR	1064775	AdditiveExpression	argw - compiler -> cache_argw		1063704	0		-			
ANR	1064776	Identifier	argw		1063704	0					
ANR	1064777	PtrMemberAccess	compiler -> cache_argw		1063704	1					
ANR	1064778	Identifier	compiler		1063704	0					
ANR	1064779	Identifier	cache_argw		1063704	1					
ANR	1064780	Identifier	SIMM_MAX		1063704	1					
ANR	1064781	RelationalExpression	argw - compiler -> cache_argw >= SIMM_MIN		1063704	1		>=			
ANR	1064782	AdditiveExpression	argw - compiler -> cache_argw		1063704	0		-			
ANR	1064783	Identifier	argw		1063704	0					
ANR	1064784	PtrMemberAccess	compiler -> cache_argw		1063704	1					
ANR	1064785	Identifier	compiler		1063704	0					
ANR	1064786	Identifier	cache_argw		1063704	1					
ANR	1064787	Identifier	SIMM_MIN		1063704	1					
ANR	1064788	CompoundStatement		91:127:3658:3658	1063704	1					
ANR	1064789	IfStatement	if ( argw != compiler -> cache_argw )		1063704	0					
ANR	1064790	Condition	argw != compiler -> cache_argw	834:8:27089:27116	1063704	0	True				
ANR	1064791	EqualityExpression	argw != compiler -> cache_argw		1063704	0		!=			
ANR	1064792	Identifier	argw		1063704	0					
ANR	1064793	PtrMemberAccess	compiler -> cache_argw		1063704	1					
ANR	1064794	Identifier	compiler		1063704	0					
ANR	1064795	Identifier	cache_argw		1063704	1					
ANR	1064796	CompoundStatement		92:38:3698:3698	1063704	1					
ANR	1064797	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDIU_W | S ( TMP_REG3 ) | T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw ) , DR ( TMP_REG3 ) ) )"	835:5:27126:27240	1063704	0	True				
ANR	1064798	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDIU_W | S ( TMP_REG3 ) | T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw ) , DR ( TMP_REG3 ) ) )"		1063704	0					
ANR	1064799	Callee	FAIL_IF		1063704	0					
ANR	1064800	Identifier	FAIL_IF		1063704	0					
ANR	1064801	ArgumentList	"push_inst ( compiler , ADDIU_W | S ( TMP_REG3 ) | T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw ) , DR ( TMP_REG3 ) )"		1063704	1					
ANR	1064802	Argument	"push_inst ( compiler , ADDIU_W | S ( TMP_REG3 ) | T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw ) , DR ( TMP_REG3 ) )"		1063704	0					
ANR	1064803	CallExpression	"push_inst ( compiler , ADDIU_W | S ( TMP_REG3 ) | T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw ) , DR ( TMP_REG3 ) )"		1063704	0					
ANR	1064804	Callee	push_inst		1063704	0					
ANR	1064805	Identifier	push_inst		1063704	0					
ANR	1064806	ArgumentList	compiler		1063704	1					
ANR	1064807	Argument	compiler		1063704	0					
ANR	1064808	Identifier	compiler		1063704	0					
ANR	1064809	Argument	ADDIU_W | S ( TMP_REG3 ) | T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw )		1063704	1					
ANR	1064810	InclusiveOrExpression	ADDIU_W | S ( TMP_REG3 ) | T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw )		1063704	0		|			
ANR	1064811	Identifier	ADDIU_W		1063704	0					
ANR	1064812	InclusiveOrExpression	S ( TMP_REG3 ) | T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw )		1063704	1		|			
ANR	1064813	CallExpression	S ( TMP_REG3 )		1063704	0					
ANR	1064814	Callee	S		1063704	0					
ANR	1064815	Identifier	S		1063704	0					
ANR	1064816	ArgumentList	TMP_REG3		1063704	1					
ANR	1064817	Argument	TMP_REG3		1063704	0					
ANR	1064818	Identifier	TMP_REG3		1063704	0					
ANR	1064819	InclusiveOrExpression	T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw )		1063704	1		|			
ANR	1064820	CallExpression	T ( TMP_REG3 )		1063704	0					
ANR	1064821	Callee	T		1063704	0					
ANR	1064822	Identifier	T		1063704	0					
ANR	1064823	ArgumentList	TMP_REG3		1063704	1					
ANR	1064824	Argument	TMP_REG3		1063704	0					
ANR	1064825	Identifier	TMP_REG3		1063704	0					
ANR	1064826	CallExpression	IMM ( argw - compiler -> cache_argw )		1063704	1					
ANR	1064827	Callee	IMM		1063704	0					
ANR	1064828	Identifier	IMM		1063704	0					
ANR	1064829	ArgumentList	argw - compiler -> cache_argw		1063704	1					
ANR	1064830	Argument	argw - compiler -> cache_argw		1063704	0					
ANR	1064831	AdditiveExpression	argw - compiler -> cache_argw		1063704	0		-			
ANR	1064832	Identifier	argw		1063704	0					
ANR	1064833	PtrMemberAccess	compiler -> cache_argw		1063704	1					
ANR	1064834	Identifier	compiler		1063704	0					
ANR	1064835	Identifier	cache_argw		1063704	1					
ANR	1064836	Argument	DR ( TMP_REG3 )		1063704	2					
ANR	1064837	CallExpression	DR ( TMP_REG3 )		1063704	0					
ANR	1064838	Callee	DR		1063704	0					
ANR	1064839	Identifier	DR		1063704	0					
ANR	1064840	ArgumentList	TMP_REG3		1063704	1					
ANR	1064841	Argument	TMP_REG3		1063704	0					
ANR	1064842	Identifier	TMP_REG3		1063704	0					
ANR	1064843	ExpressionStatement	compiler -> cache_argw = argw	836:5:27247:27274	1063704	1	True				
ANR	1064844	AssignmentExpression	compiler -> cache_argw = argw		1063704	0		=			
ANR	1064845	PtrMemberAccess	compiler -> cache_argw		1063704	0					
ANR	1064846	Identifier	compiler		1063704	0					
ANR	1064847	Identifier	cache_argw		1063704	1					
ANR	1064848	Identifier	argw		1063704	1					
ANR	1064849	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( base ) , DR ( base ) ) )"	838:4:27286:27366	1063704	1	True				
ANR	1064850	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( base ) , DR ( base ) ) )"		1063704	0					
ANR	1064851	Callee	FAIL_IF		1063704	0					
ANR	1064852	Identifier	FAIL_IF		1063704	0					
ANR	1064853	ArgumentList	"push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( base ) , DR ( base ) )"		1063704	1					
ANR	1064854	Argument	"push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( base ) , DR ( base ) )"		1063704	0					
ANR	1064855	CallExpression	"push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( base ) , DR ( base ) )"		1063704	0					
ANR	1064856	Callee	push_inst		1063704	0					
ANR	1064857	Identifier	push_inst		1063704	0					
ANR	1064858	ArgumentList	compiler		1063704	1					
ANR	1064859	Argument	compiler		1063704	0					
ANR	1064860	Identifier	compiler		1063704	0					
ANR	1064861	Argument	ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( base )		1063704	1					
ANR	1064862	InclusiveOrExpression	ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( base )		1063704	0		|			
ANR	1064863	Identifier	ADDU_W		1063704	0					
ANR	1064864	InclusiveOrExpression	S ( base ) | T ( TMP_REG3 ) | D ( base )		1063704	1		|			
ANR	1064865	CallExpression	S ( base )		1063704	0					
ANR	1064866	Callee	S		1063704	0					
ANR	1064867	Identifier	S		1063704	0					
ANR	1064868	ArgumentList	base		1063704	1					
ANR	1064869	Argument	base		1063704	0					
ANR	1064870	Identifier	base		1063704	0					
ANR	1064871	InclusiveOrExpression	T ( TMP_REG3 ) | D ( base )		1063704	1		|			
ANR	1064872	CallExpression	T ( TMP_REG3 )		1063704	0					
ANR	1064873	Callee	T		1063704	0					
ANR	1064874	Identifier	T		1063704	0					
ANR	1064875	ArgumentList	TMP_REG3		1063704	1					
ANR	1064876	Argument	TMP_REG3		1063704	0					
ANR	1064877	Identifier	TMP_REG3		1063704	0					
ANR	1064878	CallExpression	D ( base )		1063704	1					
ANR	1064879	Callee	D		1063704	0					
ANR	1064880	Identifier	D		1063704	0					
ANR	1064881	ArgumentList	base		1063704	1					
ANR	1064882	Argument	base		1063704	0					
ANR	1064883	Identifier	base		1063704	0					
ANR	1064884	Argument	DR ( base )		1063704	2					
ANR	1064885	CallExpression	DR ( base )		1063704	0					
ANR	1064886	Callee	DR		1063704	0					
ANR	1064887	Identifier	DR		1063704	0					
ANR	1064888	ArgumentList	base		1063704	1					
ANR	1064889	Argument	base		1063704	0					
ANR	1064890	Identifier	base		1063704	0					
ANR	1064891	ElseStatement	else		1063704	0					
ANR	1064892	CompoundStatement		98:8:3960:3960	1063704	0					
ANR	1064893	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM	841:4:27387:27418	1063704	0	True				
ANR	1064894	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM		1063704	0		=			
ANR	1064895	PtrMemberAccess	compiler -> cache_arg		1063704	0					
ANR	1064896	Identifier	compiler		1063704	0					
ANR	1064897	Identifier	cache_arg		1063704	1					
ANR	1064898	Identifier	SLJIT_MEM		1063704	1					
ANR	1064899	ExpressionStatement	compiler -> cache_argw = argw	842:4:27424:27451	1063704	1	True				
ANR	1064900	AssignmentExpression	compiler -> cache_argw = argw		1063704	0		=			
ANR	1064901	PtrMemberAccess	compiler -> cache_argw		1063704	0					
ANR	1064902	Identifier	compiler		1063704	0					
ANR	1064903	Identifier	cache_argw		1063704	1					
ANR	1064904	Identifier	argw		1063704	1					
ANR	1064905	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , DR ( TMP_REG3 ) , argw ) )"	843:4:27457:27510	1063704	2	True				
ANR	1064906	CallExpression	"FAIL_IF ( load_immediate ( compiler , DR ( TMP_REG3 ) , argw ) )"		1063704	0					
ANR	1064907	Callee	FAIL_IF		1063704	0					
ANR	1064908	Identifier	FAIL_IF		1063704	0					
ANR	1064909	ArgumentList	"load_immediate ( compiler , DR ( TMP_REG3 ) , argw )"		1063704	1					
ANR	1064910	Argument	"load_immediate ( compiler , DR ( TMP_REG3 ) , argw )"		1063704	0					
ANR	1064911	CallExpression	"load_immediate ( compiler , DR ( TMP_REG3 ) , argw )"		1063704	0					
ANR	1064912	Callee	load_immediate		1063704	0					
ANR	1064913	Identifier	load_immediate		1063704	0					
ANR	1064914	ArgumentList	compiler		1063704	1					
ANR	1064915	Argument	compiler		1063704	0					
ANR	1064916	Identifier	compiler		1063704	0					
ANR	1064917	Argument	DR ( TMP_REG3 )		1063704	1					
ANR	1064918	CallExpression	DR ( TMP_REG3 )		1063704	0					
ANR	1064919	Callee	DR		1063704	0					
ANR	1064920	Identifier	DR		1063704	0					
ANR	1064921	ArgumentList	TMP_REG3		1063704	1					
ANR	1064922	Argument	TMP_REG3		1063704	0					
ANR	1064923	Identifier	TMP_REG3		1063704	0					
ANR	1064924	Argument	argw		1063704	2					
ANR	1064925	Identifier	argw		1063704	0					
ANR	1064926	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( base ) , DR ( base ) ) )"	844:4:27516:27596	1063704	3	True				
ANR	1064927	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( base ) , DR ( base ) ) )"		1063704	0					
ANR	1064928	Callee	FAIL_IF		1063704	0					
ANR	1064929	Identifier	FAIL_IF		1063704	0					
ANR	1064930	ArgumentList	"push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( base ) , DR ( base ) )"		1063704	1					
ANR	1064931	Argument	"push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( base ) , DR ( base ) )"		1063704	0					
ANR	1064932	CallExpression	"push_inst ( compiler , ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( base ) , DR ( base ) )"		1063704	0					
ANR	1064933	Callee	push_inst		1063704	0					
ANR	1064934	Identifier	push_inst		1063704	0					
ANR	1064935	ArgumentList	compiler		1063704	1					
ANR	1064936	Argument	compiler		1063704	0					
ANR	1064937	Identifier	compiler		1063704	0					
ANR	1064938	Argument	ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( base )		1063704	1					
ANR	1064939	InclusiveOrExpression	ADDU_W | S ( base ) | T ( TMP_REG3 ) | D ( base )		1063704	0		|			
ANR	1064940	Identifier	ADDU_W		1063704	0					
ANR	1064941	InclusiveOrExpression	S ( base ) | T ( TMP_REG3 ) | D ( base )		1063704	1		|			
ANR	1064942	CallExpression	S ( base )		1063704	0					
ANR	1064943	Callee	S		1063704	0					
ANR	1064944	Identifier	S		1063704	0					
ANR	1064945	ArgumentList	base		1063704	1					
ANR	1064946	Argument	base		1063704	0					
ANR	1064947	Identifier	base		1063704	0					
ANR	1064948	InclusiveOrExpression	T ( TMP_REG3 ) | D ( base )		1063704	1		|			
ANR	1064949	CallExpression	T ( TMP_REG3 )		1063704	0					
ANR	1064950	Callee	T		1063704	0					
ANR	1064951	Identifier	T		1063704	0					
ANR	1064952	ArgumentList	TMP_REG3		1063704	1					
ANR	1064953	Argument	TMP_REG3		1063704	0					
ANR	1064954	Identifier	TMP_REG3		1063704	0					
ANR	1064955	CallExpression	D ( base )		1063704	1					
ANR	1064956	Callee	D		1063704	0					
ANR	1064957	Identifier	D		1063704	0					
ANR	1064958	ArgumentList	base		1063704	1					
ANR	1064959	Argument	base		1063704	0					
ANR	1064960	Identifier	base		1063704	0					
ANR	1064961	Argument	DR ( base )		1063704	2					
ANR	1064962	CallExpression	DR ( base )		1063704	0					
ANR	1064963	Callee	DR		1063704	0					
ANR	1064964	Identifier	DR		1063704	0					
ANR	1064965	ArgumentList	base		1063704	1					
ANR	1064966	Argument	base		1063704	0					
ANR	1064967	Identifier	base		1063704	0					
ANR	1064968	ReturnStatement	"return push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( base ) | TA ( reg_ar ) , delay_slot ) ;"	847:2:27609:27709	1063704	2	True				
ANR	1064969	CallExpression	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( base ) | TA ( reg_ar ) , delay_slot )"		1063704	0					
ANR	1064970	Callee	push_inst		1063704	0					
ANR	1064971	Identifier	push_inst		1063704	0					
ANR	1064972	ArgumentList	compiler		1063704	1					
ANR	1064973	Argument	compiler		1063704	0					
ANR	1064974	Identifier	compiler		1063704	0					
ANR	1064975	Argument	data_transfer_insts [ flags & MEM_MASK ] | S ( base ) | TA ( reg_ar )		1063704	1					
ANR	1064976	InclusiveOrExpression	data_transfer_insts [ flags & MEM_MASK ] | S ( base ) | TA ( reg_ar )		1063704	0		|			
ANR	1064977	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1063704	0					
ANR	1064978	Identifier	data_transfer_insts		1063704	0					
ANR	1064979	BitAndExpression	flags & MEM_MASK		1063704	1		&			
ANR	1064980	Identifier	flags		1063704	0					
ANR	1064981	Identifier	MEM_MASK		1063704	1					
ANR	1064982	InclusiveOrExpression	S ( base ) | TA ( reg_ar )		1063704	1		|			
ANR	1064983	CallExpression	S ( base )		1063704	0					
ANR	1064984	Callee	S		1063704	0					
ANR	1064985	Identifier	S		1063704	0					
ANR	1064986	ArgumentList	base		1063704	1					
ANR	1064987	Argument	base		1063704	0					
ANR	1064988	Identifier	base		1063704	0					
ANR	1064989	CallExpression	TA ( reg_ar )		1063704	1					
ANR	1064990	Callee	TA		1063704	0					
ANR	1064991	Identifier	TA		1063704	0					
ANR	1064992	ArgumentList	reg_ar		1063704	1					
ANR	1064993	Argument	reg_ar		1063704	0					
ANR	1064994	Identifier	reg_ar		1063704	0					
ANR	1064995	Argument	delay_slot		1063704	2					
ANR	1064996	Identifier	delay_slot		1063704	0					
ANR	1064997	IfStatement	if ( compiler -> cache_arg == arg && argw - compiler -> cache_argw <= SIMM_MAX && argw - compiler -> cache_argw >= SIMM_MIN )		1063704	7					
ANR	1064998	Condition	compiler -> cache_arg == arg && argw - compiler -> cache_argw <= SIMM_MAX && argw - compiler -> cache_argw >= SIMM_MIN	850:5:27720:27831	1063704	0	True				
ANR	1064999	AndExpression	compiler -> cache_arg == arg && argw - compiler -> cache_argw <= SIMM_MAX && argw - compiler -> cache_argw >= SIMM_MIN		1063704	0		&&			
ANR	1065000	EqualityExpression	compiler -> cache_arg == arg		1063704	0		==			
ANR	1065001	PtrMemberAccess	compiler -> cache_arg		1063704	0					
ANR	1065002	Identifier	compiler		1063704	0					
ANR	1065003	Identifier	cache_arg		1063704	1					
ANR	1065004	Identifier	arg		1063704	1					
ANR	1065005	AndExpression	argw - compiler -> cache_argw <= SIMM_MAX && argw - compiler -> cache_argw >= SIMM_MIN		1063704	1		&&			
ANR	1065006	RelationalExpression	argw - compiler -> cache_argw <= SIMM_MAX		1063704	0		<=			
ANR	1065007	AdditiveExpression	argw - compiler -> cache_argw		1063704	0		-			
ANR	1065008	Identifier	argw		1063704	0					
ANR	1065009	PtrMemberAccess	compiler -> cache_argw		1063704	1					
ANR	1065010	Identifier	compiler		1063704	0					
ANR	1065011	Identifier	cache_argw		1063704	1					
ANR	1065012	Identifier	SIMM_MAX		1063704	1					
ANR	1065013	RelationalExpression	argw - compiler -> cache_argw >= SIMM_MIN		1063704	1		>=			
ANR	1065014	AdditiveExpression	argw - compiler -> cache_argw		1063704	0		-			
ANR	1065015	Identifier	argw		1063704	0					
ANR	1065016	PtrMemberAccess	compiler -> cache_argw		1063704	1					
ANR	1065017	Identifier	compiler		1063704	0					
ANR	1065018	Identifier	cache_argw		1063704	1					
ANR	1065019	Identifier	SIMM_MIN		1063704	1					
ANR	1065020	CompoundStatement		108:119:4413:4413	1063704	1					
ANR	1065021	IfStatement	if ( argw != compiler -> cache_argw )		1063704	0					
ANR	1065022	Condition	argw != compiler -> cache_argw	851:6:27842:27869	1063704	0	True				
ANR	1065023	EqualityExpression	argw != compiler -> cache_argw		1063704	0		!=			
ANR	1065024	Identifier	argw		1063704	0					
ANR	1065025	PtrMemberAccess	compiler -> cache_argw		1063704	1					
ANR	1065026	Identifier	compiler		1063704	0					
ANR	1065027	Identifier	cache_argw		1063704	1					
ANR	1065028	CompoundStatement		109:36:4451:4451	1063704	1					
ANR	1065029	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDIU_W | S ( TMP_REG3 ) | T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw ) , DR ( TMP_REG3 ) ) )"	852:3:27877:27991	1063704	0	True				
ANR	1065030	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDIU_W | S ( TMP_REG3 ) | T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw ) , DR ( TMP_REG3 ) ) )"		1063704	0					
ANR	1065031	Callee	FAIL_IF		1063704	0					
ANR	1065032	Identifier	FAIL_IF		1063704	0					
ANR	1065033	ArgumentList	"push_inst ( compiler , ADDIU_W | S ( TMP_REG3 ) | T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw ) , DR ( TMP_REG3 ) )"		1063704	1					
ANR	1065034	Argument	"push_inst ( compiler , ADDIU_W | S ( TMP_REG3 ) | T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw ) , DR ( TMP_REG3 ) )"		1063704	0					
ANR	1065035	CallExpression	"push_inst ( compiler , ADDIU_W | S ( TMP_REG3 ) | T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw ) , DR ( TMP_REG3 ) )"		1063704	0					
ANR	1065036	Callee	push_inst		1063704	0					
ANR	1065037	Identifier	push_inst		1063704	0					
ANR	1065038	ArgumentList	compiler		1063704	1					
ANR	1065039	Argument	compiler		1063704	0					
ANR	1065040	Identifier	compiler		1063704	0					
ANR	1065041	Argument	ADDIU_W | S ( TMP_REG3 ) | T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw )		1063704	1					
ANR	1065042	InclusiveOrExpression	ADDIU_W | S ( TMP_REG3 ) | T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw )		1063704	0		|			
ANR	1065043	Identifier	ADDIU_W		1063704	0					
ANR	1065044	InclusiveOrExpression	S ( TMP_REG3 ) | T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw )		1063704	1		|			
ANR	1065045	CallExpression	S ( TMP_REG3 )		1063704	0					
ANR	1065046	Callee	S		1063704	0					
ANR	1065047	Identifier	S		1063704	0					
ANR	1065048	ArgumentList	TMP_REG3		1063704	1					
ANR	1065049	Argument	TMP_REG3		1063704	0					
ANR	1065050	Identifier	TMP_REG3		1063704	0					
ANR	1065051	InclusiveOrExpression	T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw )		1063704	1		|			
ANR	1065052	CallExpression	T ( TMP_REG3 )		1063704	0					
ANR	1065053	Callee	T		1063704	0					
ANR	1065054	Identifier	T		1063704	0					
ANR	1065055	ArgumentList	TMP_REG3		1063704	1					
ANR	1065056	Argument	TMP_REG3		1063704	0					
ANR	1065057	Identifier	TMP_REG3		1063704	0					
ANR	1065058	CallExpression	IMM ( argw - compiler -> cache_argw )		1063704	1					
ANR	1065059	Callee	IMM		1063704	0					
ANR	1065060	Identifier	IMM		1063704	0					
ANR	1065061	ArgumentList	argw - compiler -> cache_argw		1063704	1					
ANR	1065062	Argument	argw - compiler -> cache_argw		1063704	0					
ANR	1065063	AdditiveExpression	argw - compiler -> cache_argw		1063704	0		-			
ANR	1065064	Identifier	argw		1063704	0					
ANR	1065065	PtrMemberAccess	compiler -> cache_argw		1063704	1					
ANR	1065066	Identifier	compiler		1063704	0					
ANR	1065067	Identifier	cache_argw		1063704	1					
ANR	1065068	Argument	DR ( TMP_REG3 )		1063704	2					
ANR	1065069	CallExpression	DR ( TMP_REG3 )		1063704	0					
ANR	1065070	Callee	DR		1063704	0					
ANR	1065071	Identifier	DR		1063704	0					
ANR	1065072	ArgumentList	TMP_REG3		1063704	1					
ANR	1065073	Argument	TMP_REG3		1063704	0					
ANR	1065074	Identifier	TMP_REG3		1063704	0					
ANR	1065075	ExpressionStatement	compiler -> cache_argw = argw	853:3:27996:28023	1063704	1	True				
ANR	1065076	AssignmentExpression	compiler -> cache_argw = argw		1063704	0		=			
ANR	1065077	PtrMemberAccess	compiler -> cache_argw		1063704	0					
ANR	1065078	Identifier	compiler		1063704	0					
ANR	1065079	Identifier	cache_argw		1063704	1					
ANR	1065080	Identifier	argw		1063704	1					
ANR	1065081	ReturnStatement	"return push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( TMP_REG3 ) | TA ( reg_ar ) , delay_slot ) ;"	855:2:28031:28135	1063704	1	True				
ANR	1065082	CallExpression	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( TMP_REG3 ) | TA ( reg_ar ) , delay_slot )"		1063704	0					
ANR	1065083	Callee	push_inst		1063704	0					
ANR	1065084	Identifier	push_inst		1063704	0					
ANR	1065085	ArgumentList	compiler		1063704	1					
ANR	1065086	Argument	compiler		1063704	0					
ANR	1065087	Identifier	compiler		1063704	0					
ANR	1065088	Argument	data_transfer_insts [ flags & MEM_MASK ] | S ( TMP_REG3 ) | TA ( reg_ar )		1063704	1					
ANR	1065089	InclusiveOrExpression	data_transfer_insts [ flags & MEM_MASK ] | S ( TMP_REG3 ) | TA ( reg_ar )		1063704	0		|			
ANR	1065090	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1063704	0					
ANR	1065091	Identifier	data_transfer_insts		1063704	0					
ANR	1065092	BitAndExpression	flags & MEM_MASK		1063704	1		&			
ANR	1065093	Identifier	flags		1063704	0					
ANR	1065094	Identifier	MEM_MASK		1063704	1					
ANR	1065095	InclusiveOrExpression	S ( TMP_REG3 ) | TA ( reg_ar )		1063704	1		|			
ANR	1065096	CallExpression	S ( TMP_REG3 )		1063704	0					
ANR	1065097	Callee	S		1063704	0					
ANR	1065098	Identifier	S		1063704	0					
ANR	1065099	ArgumentList	TMP_REG3		1063704	1					
ANR	1065100	Argument	TMP_REG3		1063704	0					
ANR	1065101	Identifier	TMP_REG3		1063704	0					
ANR	1065102	CallExpression	TA ( reg_ar )		1063704	1					
ANR	1065103	Callee	TA		1063704	0					
ANR	1065104	Identifier	TA		1063704	0					
ANR	1065105	ArgumentList	reg_ar		1063704	1					
ANR	1065106	Argument	reg_ar		1063704	0					
ANR	1065107	Identifier	reg_ar		1063704	0					
ANR	1065108	Argument	delay_slot		1063704	2					
ANR	1065109	Identifier	delay_slot		1063704	0					
ANR	1065110	IfStatement	if ( compiler -> cache_arg == SLJIT_MEM && argw - compiler -> cache_argw <= SIMM_MAX && argw - compiler -> cache_argw >= SIMM_MIN )		1063704	8					
ANR	1065111	Condition	compiler -> cache_arg == SLJIT_MEM && argw - compiler -> cache_argw <= SIMM_MAX && argw - compiler -> cache_argw >= SIMM_MIN	858:5:28146:28263	1063704	0	True				
ANR	1065112	AndExpression	compiler -> cache_arg == SLJIT_MEM && argw - compiler -> cache_argw <= SIMM_MAX && argw - compiler -> cache_argw >= SIMM_MIN		1063704	0		&&			
ANR	1065113	EqualityExpression	compiler -> cache_arg == SLJIT_MEM		1063704	0		==			
ANR	1065114	PtrMemberAccess	compiler -> cache_arg		1063704	0					
ANR	1065115	Identifier	compiler		1063704	0					
ANR	1065116	Identifier	cache_arg		1063704	1					
ANR	1065117	Identifier	SLJIT_MEM		1063704	1					
ANR	1065118	AndExpression	argw - compiler -> cache_argw <= SIMM_MAX && argw - compiler -> cache_argw >= SIMM_MIN		1063704	1		&&			
ANR	1065119	RelationalExpression	argw - compiler -> cache_argw <= SIMM_MAX		1063704	0		<=			
ANR	1065120	AdditiveExpression	argw - compiler -> cache_argw		1063704	0		-			
ANR	1065121	Identifier	argw		1063704	0					
ANR	1065122	PtrMemberAccess	compiler -> cache_argw		1063704	1					
ANR	1065123	Identifier	compiler		1063704	0					
ANR	1065124	Identifier	cache_argw		1063704	1					
ANR	1065125	Identifier	SIMM_MAX		1063704	1					
ANR	1065126	RelationalExpression	argw - compiler -> cache_argw >= SIMM_MIN		1063704	1		>=			
ANR	1065127	AdditiveExpression	argw - compiler -> cache_argw		1063704	0		-			
ANR	1065128	Identifier	argw		1063704	0					
ANR	1065129	PtrMemberAccess	compiler -> cache_argw		1063704	1					
ANR	1065130	Identifier	compiler		1063704	0					
ANR	1065131	Identifier	cache_argw		1063704	1					
ANR	1065132	Identifier	SIMM_MIN		1063704	1					
ANR	1065133	CompoundStatement		116:125:4845:4845	1063704	1					
ANR	1065134	IfStatement	if ( argw != compiler -> cache_argw )		1063704	0					
ANR	1065135	Condition	argw != compiler -> cache_argw	859:6:28274:28301	1063704	0	True				
ANR	1065136	EqualityExpression	argw != compiler -> cache_argw		1063704	0		!=			
ANR	1065137	Identifier	argw		1063704	0					
ANR	1065138	PtrMemberAccess	compiler -> cache_argw		1063704	1					
ANR	1065139	Identifier	compiler		1063704	0					
ANR	1065140	Identifier	cache_argw		1063704	1					
ANR	1065141	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDIU_W | S ( TMP_REG3 ) | T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw ) , DR ( TMP_REG3 ) ) )"	860:3:28307:28421	1063704	1	True				
ANR	1065142	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDIU_W | S ( TMP_REG3 ) | T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw ) , DR ( TMP_REG3 ) ) )"		1063704	0					
ANR	1065143	Callee	FAIL_IF		1063704	0					
ANR	1065144	Identifier	FAIL_IF		1063704	0					
ANR	1065145	ArgumentList	"push_inst ( compiler , ADDIU_W | S ( TMP_REG3 ) | T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw ) , DR ( TMP_REG3 ) )"		1063704	1					
ANR	1065146	Argument	"push_inst ( compiler , ADDIU_W | S ( TMP_REG3 ) | T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw ) , DR ( TMP_REG3 ) )"		1063704	0					
ANR	1065147	CallExpression	"push_inst ( compiler , ADDIU_W | S ( TMP_REG3 ) | T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw ) , DR ( TMP_REG3 ) )"		1063704	0					
ANR	1065148	Callee	push_inst		1063704	0					
ANR	1065149	Identifier	push_inst		1063704	0					
ANR	1065150	ArgumentList	compiler		1063704	1					
ANR	1065151	Argument	compiler		1063704	0					
ANR	1065152	Identifier	compiler		1063704	0					
ANR	1065153	Argument	ADDIU_W | S ( TMP_REG3 ) | T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw )		1063704	1					
ANR	1065154	InclusiveOrExpression	ADDIU_W | S ( TMP_REG3 ) | T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw )		1063704	0		|			
ANR	1065155	Identifier	ADDIU_W		1063704	0					
ANR	1065156	InclusiveOrExpression	S ( TMP_REG3 ) | T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw )		1063704	1		|			
ANR	1065157	CallExpression	S ( TMP_REG3 )		1063704	0					
ANR	1065158	Callee	S		1063704	0					
ANR	1065159	Identifier	S		1063704	0					
ANR	1065160	ArgumentList	TMP_REG3		1063704	1					
ANR	1065161	Argument	TMP_REG3		1063704	0					
ANR	1065162	Identifier	TMP_REG3		1063704	0					
ANR	1065163	InclusiveOrExpression	T ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw )		1063704	1		|			
ANR	1065164	CallExpression	T ( TMP_REG3 )		1063704	0					
ANR	1065165	Callee	T		1063704	0					
ANR	1065166	Identifier	T		1063704	0					
ANR	1065167	ArgumentList	TMP_REG3		1063704	1					
ANR	1065168	Argument	TMP_REG3		1063704	0					
ANR	1065169	Identifier	TMP_REG3		1063704	0					
ANR	1065170	CallExpression	IMM ( argw - compiler -> cache_argw )		1063704	1					
ANR	1065171	Callee	IMM		1063704	0					
ANR	1065172	Identifier	IMM		1063704	0					
ANR	1065173	ArgumentList	argw - compiler -> cache_argw		1063704	1					
ANR	1065174	Argument	argw - compiler -> cache_argw		1063704	0					
ANR	1065175	AdditiveExpression	argw - compiler -> cache_argw		1063704	0		-			
ANR	1065176	Identifier	argw		1063704	0					
ANR	1065177	PtrMemberAccess	compiler -> cache_argw		1063704	1					
ANR	1065178	Identifier	compiler		1063704	0					
ANR	1065179	Identifier	cache_argw		1063704	1					
ANR	1065180	Argument	DR ( TMP_REG3 )		1063704	2					
ANR	1065181	CallExpression	DR ( TMP_REG3 )		1063704	0					
ANR	1065182	Callee	DR		1063704	0					
ANR	1065183	Identifier	DR		1063704	0					
ANR	1065184	ArgumentList	TMP_REG3		1063704	1					
ANR	1065185	Argument	TMP_REG3		1063704	0					
ANR	1065186	Identifier	TMP_REG3		1063704	0					
ANR	1065187	ElseStatement	else		1063704	0					
ANR	1065188	CompoundStatement		120:6:5011:5011	1063704	0					
ANR	1065189	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM	863:2:28436:28467	1063704	0	True				
ANR	1065190	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM		1063704	0		=			
ANR	1065191	PtrMemberAccess	compiler -> cache_arg		1063704	0					
ANR	1065192	Identifier	compiler		1063704	0					
ANR	1065193	Identifier	cache_arg		1063704	1					
ANR	1065194	Identifier	SLJIT_MEM		1063704	1					
ANR	1065195	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , DR ( TMP_REG3 ) , argw ) )"	864:2:28471:28524	1063704	1	True				
ANR	1065196	CallExpression	"FAIL_IF ( load_immediate ( compiler , DR ( TMP_REG3 ) , argw ) )"		1063704	0					
ANR	1065197	Callee	FAIL_IF		1063704	0					
ANR	1065198	Identifier	FAIL_IF		1063704	0					
ANR	1065199	ArgumentList	"load_immediate ( compiler , DR ( TMP_REG3 ) , argw )"		1063704	1					
ANR	1065200	Argument	"load_immediate ( compiler , DR ( TMP_REG3 ) , argw )"		1063704	0					
ANR	1065201	CallExpression	"load_immediate ( compiler , DR ( TMP_REG3 ) , argw )"		1063704	0					
ANR	1065202	Callee	load_immediate		1063704	0					
ANR	1065203	Identifier	load_immediate		1063704	0					
ANR	1065204	ArgumentList	compiler		1063704	1					
ANR	1065205	Argument	compiler		1063704	0					
ANR	1065206	Identifier	compiler		1063704	0					
ANR	1065207	Argument	DR ( TMP_REG3 )		1063704	1					
ANR	1065208	CallExpression	DR ( TMP_REG3 )		1063704	0					
ANR	1065209	Callee	DR		1063704	0					
ANR	1065210	Identifier	DR		1063704	0					
ANR	1065211	ArgumentList	TMP_REG3		1063704	1					
ANR	1065212	Argument	TMP_REG3		1063704	0					
ANR	1065213	Identifier	TMP_REG3		1063704	0					
ANR	1065214	Argument	argw		1063704	2					
ANR	1065215	Identifier	argw		1063704	0					
ANR	1065216	ExpressionStatement	compiler -> cache_argw = argw	866:1:28530:28557	1063704	9	True				
ANR	1065217	AssignmentExpression	compiler -> cache_argw = argw		1063704	0		=			
ANR	1065218	PtrMemberAccess	compiler -> cache_argw		1063704	0					
ANR	1065219	Identifier	compiler		1063704	0					
ANR	1065220	Identifier	cache_argw		1063704	1					
ANR	1065221	Identifier	argw		1063704	1					
ANR	1065222	IfStatement	if ( ! base )		1063704	10					
ANR	1065223	Condition	! base	868:5:28565:28569	1063704	0	True				
ANR	1065224	UnaryOperationExpression	! base		1063704	0					
ANR	1065225	UnaryOperator	!		1063704	0					
ANR	1065226	Identifier	base		1063704	1					
ANR	1065227	ReturnStatement	"return push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( TMP_REG3 ) | TA ( reg_ar ) , delay_slot ) ;"	869:2:28574:28678	1063704	1	True				
ANR	1065228	CallExpression	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( TMP_REG3 ) | TA ( reg_ar ) , delay_slot )"		1063704	0					
ANR	1065229	Callee	push_inst		1063704	0					
ANR	1065230	Identifier	push_inst		1063704	0					
ANR	1065231	ArgumentList	compiler		1063704	1					
ANR	1065232	Argument	compiler		1063704	0					
ANR	1065233	Identifier	compiler		1063704	0					
ANR	1065234	Argument	data_transfer_insts [ flags & MEM_MASK ] | S ( TMP_REG3 ) | TA ( reg_ar )		1063704	1					
ANR	1065235	InclusiveOrExpression	data_transfer_insts [ flags & MEM_MASK ] | S ( TMP_REG3 ) | TA ( reg_ar )		1063704	0		|			
ANR	1065236	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1063704	0					
ANR	1065237	Identifier	data_transfer_insts		1063704	0					
ANR	1065238	BitAndExpression	flags & MEM_MASK		1063704	1		&			
ANR	1065239	Identifier	flags		1063704	0					
ANR	1065240	Identifier	MEM_MASK		1063704	1					
ANR	1065241	InclusiveOrExpression	S ( TMP_REG3 ) | TA ( reg_ar )		1063704	1		|			
ANR	1065242	CallExpression	S ( TMP_REG3 )		1063704	0					
ANR	1065243	Callee	S		1063704	0					
ANR	1065244	Identifier	S		1063704	0					
ANR	1065245	ArgumentList	TMP_REG3		1063704	1					
ANR	1065246	Argument	TMP_REG3		1063704	0					
ANR	1065247	Identifier	TMP_REG3		1063704	0					
ANR	1065248	CallExpression	TA ( reg_ar )		1063704	1					
ANR	1065249	Callee	TA		1063704	0					
ANR	1065250	Identifier	TA		1063704	0					
ANR	1065251	ArgumentList	reg_ar		1063704	1					
ANR	1065252	Argument	reg_ar		1063704	0					
ANR	1065253	Identifier	reg_ar		1063704	0					
ANR	1065254	Argument	delay_slot		1063704	2					
ANR	1065255	Identifier	delay_slot		1063704	0					
ANR	1065256	IfStatement	if ( arg == next_arg && next_argw - argw <= SIMM_MAX && next_argw - argw >= SIMM_MIN )		1063704	11					
ANR	1065257	Condition	arg == next_arg && next_argw - argw <= SIMM_MAX && next_argw - argw >= SIMM_MIN	871:5:28686:28764	1063704	0	True				
ANR	1065258	AndExpression	arg == next_arg && next_argw - argw <= SIMM_MAX && next_argw - argw >= SIMM_MIN		1063704	0		&&			
ANR	1065259	EqualityExpression	arg == next_arg		1063704	0		==			
ANR	1065260	Identifier	arg		1063704	0					
ANR	1065261	Identifier	next_arg		1063704	1					
ANR	1065262	AndExpression	next_argw - argw <= SIMM_MAX && next_argw - argw >= SIMM_MIN		1063704	1		&&			
ANR	1065263	RelationalExpression	next_argw - argw <= SIMM_MAX		1063704	0		<=			
ANR	1065264	AdditiveExpression	next_argw - argw		1063704	0		-			
ANR	1065265	Identifier	next_argw		1063704	0					
ANR	1065266	Identifier	argw		1063704	1					
ANR	1065267	Identifier	SIMM_MAX		1063704	1					
ANR	1065268	RelationalExpression	next_argw - argw >= SIMM_MIN		1063704	1		>=			
ANR	1065269	AdditiveExpression	next_argw - argw		1063704	0		-			
ANR	1065270	Identifier	next_argw		1063704	0					
ANR	1065271	Identifier	argw		1063704	1					
ANR	1065272	Identifier	SIMM_MIN		1063704	1					
ANR	1065273	CompoundStatement		129:86:5346:5346	1063704	1					
ANR	1065274	ExpressionStatement	compiler -> cache_arg = arg	872:2:28771:28796	1063704	0	True				
ANR	1065275	AssignmentExpression	compiler -> cache_arg = arg		1063704	0		=			
ANR	1065276	PtrMemberAccess	compiler -> cache_arg		1063704	0					
ANR	1065277	Identifier	compiler		1063704	0					
ANR	1065278	Identifier	cache_arg		1063704	1					
ANR	1065279	Identifier	arg		1063704	1					
ANR	1065280	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( TMP_REG3 ) | T ( base ) | D ( TMP_REG3 ) , DR ( TMP_REG3 ) ) )"	873:2:28800:28888	1063704	1	True				
ANR	1065281	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( TMP_REG3 ) | T ( base ) | D ( TMP_REG3 ) , DR ( TMP_REG3 ) ) )"		1063704	0					
ANR	1065282	Callee	FAIL_IF		1063704	0					
ANR	1065283	Identifier	FAIL_IF		1063704	0					
ANR	1065284	ArgumentList	"push_inst ( compiler , ADDU_W | S ( TMP_REG3 ) | T ( base ) | D ( TMP_REG3 ) , DR ( TMP_REG3 ) )"		1063704	1					
ANR	1065285	Argument	"push_inst ( compiler , ADDU_W | S ( TMP_REG3 ) | T ( base ) | D ( TMP_REG3 ) , DR ( TMP_REG3 ) )"		1063704	0					
ANR	1065286	CallExpression	"push_inst ( compiler , ADDU_W | S ( TMP_REG3 ) | T ( base ) | D ( TMP_REG3 ) , DR ( TMP_REG3 ) )"		1063704	0					
ANR	1065287	Callee	push_inst		1063704	0					
ANR	1065288	Identifier	push_inst		1063704	0					
ANR	1065289	ArgumentList	compiler		1063704	1					
ANR	1065290	Argument	compiler		1063704	0					
ANR	1065291	Identifier	compiler		1063704	0					
ANR	1065292	Argument	ADDU_W | S ( TMP_REG3 ) | T ( base ) | D ( TMP_REG3 )		1063704	1					
ANR	1065293	InclusiveOrExpression	ADDU_W | S ( TMP_REG3 ) | T ( base ) | D ( TMP_REG3 )		1063704	0		|			
ANR	1065294	Identifier	ADDU_W		1063704	0					
ANR	1065295	InclusiveOrExpression	S ( TMP_REG3 ) | T ( base ) | D ( TMP_REG3 )		1063704	1		|			
ANR	1065296	CallExpression	S ( TMP_REG3 )		1063704	0					
ANR	1065297	Callee	S		1063704	0					
ANR	1065298	Identifier	S		1063704	0					
ANR	1065299	ArgumentList	TMP_REG3		1063704	1					
ANR	1065300	Argument	TMP_REG3		1063704	0					
ANR	1065301	Identifier	TMP_REG3		1063704	0					
ANR	1065302	InclusiveOrExpression	T ( base ) | D ( TMP_REG3 )		1063704	1		|			
ANR	1065303	CallExpression	T ( base )		1063704	0					
ANR	1065304	Callee	T		1063704	0					
ANR	1065305	Identifier	T		1063704	0					
ANR	1065306	ArgumentList	base		1063704	1					
ANR	1065307	Argument	base		1063704	0					
ANR	1065308	Identifier	base		1063704	0					
ANR	1065309	CallExpression	D ( TMP_REG3 )		1063704	1					
ANR	1065310	Callee	D		1063704	0					
ANR	1065311	Identifier	D		1063704	0					
ANR	1065312	ArgumentList	TMP_REG3		1063704	1					
ANR	1065313	Argument	TMP_REG3		1063704	0					
ANR	1065314	Identifier	TMP_REG3		1063704	0					
ANR	1065315	Argument	DR ( TMP_REG3 )		1063704	2					
ANR	1065316	CallExpression	DR ( TMP_REG3 )		1063704	0					
ANR	1065317	Callee	DR		1063704	0					
ANR	1065318	Identifier	DR		1063704	0					
ANR	1065319	ArgumentList	TMP_REG3		1063704	1					
ANR	1065320	Argument	TMP_REG3		1063704	0					
ANR	1065321	Identifier	TMP_REG3		1063704	0					
ANR	1065322	ReturnStatement	"return push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( TMP_REG3 ) | TA ( reg_ar ) , delay_slot ) ;"	874:2:28892:28996	1063704	2	True				
ANR	1065323	CallExpression	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | S ( TMP_REG3 ) | TA ( reg_ar ) , delay_slot )"		1063704	0					
ANR	1065324	Callee	push_inst		1063704	0					
ANR	1065325	Identifier	push_inst		1063704	0					
ANR	1065326	ArgumentList	compiler		1063704	1					
ANR	1065327	Argument	compiler		1063704	0					
ANR	1065328	Identifier	compiler		1063704	0					
ANR	1065329	Argument	data_transfer_insts [ flags & MEM_MASK ] | S ( TMP_REG3 ) | TA ( reg_ar )		1063704	1					
ANR	1065330	InclusiveOrExpression	data_transfer_insts [ flags & MEM_MASK ] | S ( TMP_REG3 ) | TA ( reg_ar )		1063704	0		|			
ANR	1065331	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1063704	0					
ANR	1065332	Identifier	data_transfer_insts		1063704	0					
ANR	1065333	BitAndExpression	flags & MEM_MASK		1063704	1		&			
ANR	1065334	Identifier	flags		1063704	0					
ANR	1065335	Identifier	MEM_MASK		1063704	1					
ANR	1065336	InclusiveOrExpression	S ( TMP_REG3 ) | TA ( reg_ar )		1063704	1		|			
ANR	1065337	CallExpression	S ( TMP_REG3 )		1063704	0					
ANR	1065338	Callee	S		1063704	0					
ANR	1065339	Identifier	S		1063704	0					
ANR	1065340	ArgumentList	TMP_REG3		1063704	1					
ANR	1065341	Argument	TMP_REG3		1063704	0					
ANR	1065342	Identifier	TMP_REG3		1063704	0					
ANR	1065343	CallExpression	TA ( reg_ar )		1063704	1					
ANR	1065344	Callee	TA		1063704	0					
ANR	1065345	Identifier	TA		1063704	0					
ANR	1065346	ArgumentList	reg_ar		1063704	1					
ANR	1065347	Argument	reg_ar		1063704	0					
ANR	1065348	Identifier	reg_ar		1063704	0					
ANR	1065349	Argument	delay_slot		1063704	2					
ANR	1065350	Identifier	delay_slot		1063704	0					
ANR	1065351	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( TMP_REG3 ) | T ( base ) | DA ( tmp_ar ) , tmp_ar ) )"	877:1:29003:29084	1063704	12	True				
ANR	1065352	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( TMP_REG3 ) | T ( base ) | DA ( tmp_ar ) , tmp_ar ) )"		1063704	0					
ANR	1065353	Callee	FAIL_IF		1063704	0					
ANR	1065354	Identifier	FAIL_IF		1063704	0					
ANR	1065355	ArgumentList	"push_inst ( compiler , ADDU_W | S ( TMP_REG3 ) | T ( base ) | DA ( tmp_ar ) , tmp_ar )"		1063704	1					
ANR	1065356	Argument	"push_inst ( compiler , ADDU_W | S ( TMP_REG3 ) | T ( base ) | DA ( tmp_ar ) , tmp_ar )"		1063704	0					
ANR	1065357	CallExpression	"push_inst ( compiler , ADDU_W | S ( TMP_REG3 ) | T ( base ) | DA ( tmp_ar ) , tmp_ar )"		1063704	0					
ANR	1065358	Callee	push_inst		1063704	0					
ANR	1065359	Identifier	push_inst		1063704	0					
ANR	1065360	ArgumentList	compiler		1063704	1					
ANR	1065361	Argument	compiler		1063704	0					
ANR	1065362	Identifier	compiler		1063704	0					
ANR	1065363	Argument	ADDU_W | S ( TMP_REG3 ) | T ( base ) | DA ( tmp_ar )		1063704	1					
ANR	1065364	InclusiveOrExpression	ADDU_W | S ( TMP_REG3 ) | T ( base ) | DA ( tmp_ar )		1063704	0		|			
ANR	1065365	Identifier	ADDU_W		1063704	0					
ANR	1065366	InclusiveOrExpression	S ( TMP_REG3 ) | T ( base ) | DA ( tmp_ar )		1063704	1		|			
ANR	1065367	CallExpression	S ( TMP_REG3 )		1063704	0					
ANR	1065368	Callee	S		1063704	0					
ANR	1065369	Identifier	S		1063704	0					
ANR	1065370	ArgumentList	TMP_REG3		1063704	1					
ANR	1065371	Argument	TMP_REG3		1063704	0					
ANR	1065372	Identifier	TMP_REG3		1063704	0					
ANR	1065373	InclusiveOrExpression	T ( base ) | DA ( tmp_ar )		1063704	1		|			
ANR	1065374	CallExpression	T ( base )		1063704	0					
ANR	1065375	Callee	T		1063704	0					
ANR	1065376	Identifier	T		1063704	0					
ANR	1065377	ArgumentList	base		1063704	1					
ANR	1065378	Argument	base		1063704	0					
ANR	1065379	Identifier	base		1063704	0					
ANR	1065380	CallExpression	DA ( tmp_ar )		1063704	1					
ANR	1065381	Callee	DA		1063704	0					
ANR	1065382	Identifier	DA		1063704	0					
ANR	1065383	ArgumentList	tmp_ar		1063704	1					
ANR	1065384	Argument	tmp_ar		1063704	0					
ANR	1065385	Identifier	tmp_ar		1063704	0					
ANR	1065386	Argument	tmp_ar		1063704	2					
ANR	1065387	Identifier	tmp_ar		1063704	0					
ANR	1065388	ReturnStatement	"return push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | SA ( tmp_ar ) | TA ( reg_ar ) , delay_slot ) ;"	878:1:29087:29190	1063704	13	True				
ANR	1065389	CallExpression	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | SA ( tmp_ar ) | TA ( reg_ar ) , delay_slot )"		1063704	0					
ANR	1065390	Callee	push_inst		1063704	0					
ANR	1065391	Identifier	push_inst		1063704	0					
ANR	1065392	ArgumentList	compiler		1063704	1					
ANR	1065393	Argument	compiler		1063704	0					
ANR	1065394	Identifier	compiler		1063704	0					
ANR	1065395	Argument	data_transfer_insts [ flags & MEM_MASK ] | SA ( tmp_ar ) | TA ( reg_ar )		1063704	1					
ANR	1065396	InclusiveOrExpression	data_transfer_insts [ flags & MEM_MASK ] | SA ( tmp_ar ) | TA ( reg_ar )		1063704	0		|			
ANR	1065397	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1063704	0					
ANR	1065398	Identifier	data_transfer_insts		1063704	0					
ANR	1065399	BitAndExpression	flags & MEM_MASK		1063704	1		&			
ANR	1065400	Identifier	flags		1063704	0					
ANR	1065401	Identifier	MEM_MASK		1063704	1					
ANR	1065402	InclusiveOrExpression	SA ( tmp_ar ) | TA ( reg_ar )		1063704	1		|			
ANR	1065403	CallExpression	SA ( tmp_ar )		1063704	0					
ANR	1065404	Callee	SA		1063704	0					
ANR	1065405	Identifier	SA		1063704	0					
ANR	1065406	ArgumentList	tmp_ar		1063704	1					
ANR	1065407	Argument	tmp_ar		1063704	0					
ANR	1065408	Identifier	tmp_ar		1063704	0					
ANR	1065409	CallExpression	TA ( reg_ar )		1063704	1					
ANR	1065410	Callee	TA		1063704	0					
ANR	1065411	Identifier	TA		1063704	0					
ANR	1065412	ArgumentList	reg_ar		1063704	1					
ANR	1065413	Argument	reg_ar		1063704	0					
ANR	1065414	Identifier	reg_ar		1063704	0					
ANR	1065415	Argument	delay_slot		1063704	2					
ANR	1065416	Identifier	delay_slot		1063704	0					
ANR	1065417	ReturnType	static sljit_si		1063704	1					
ANR	1065418	Identifier	getput_arg		1063704	2					
ANR	1065419	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg_ar , sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw"		1063704	3					
ANR	1065420	Parameter	struct sljit_compiler * compiler	742:27:23286:23316	1063704	0	True				
ANR	1065421	ParameterType	struct sljit_compiler *		1063704	0					
ANR	1065422	Identifier	compiler		1063704	1					
ANR	1065423	Parameter	sljit_si flags	742:60:23319:23332	1063704	1	True				
ANR	1065424	ParameterType	sljit_si		1063704	0					
ANR	1065425	Identifier	flags		1063704	1					
ANR	1065426	Parameter	sljit_si reg_ar	742:76:23335:23349	1063704	2	True				
ANR	1065427	ParameterType	sljit_si		1063704	0					
ANR	1065428	Identifier	reg_ar		1063704	1					
ANR	1065429	Parameter	sljit_si arg	742:93:23352:23363	1063704	3	True				
ANR	1065430	ParameterType	sljit_si		1063704	0					
ANR	1065431	Identifier	arg		1063704	1					
ANR	1065432	Parameter	sljit_sw argw	742:107:23366:23378	1063704	4	True				
ANR	1065433	ParameterType	sljit_sw		1063704	0					
ANR	1065434	Identifier	argw		1063704	1					
ANR	1065435	Parameter	sljit_si next_arg	742:122:23381:23397	1063704	5	True				
ANR	1065436	ParameterType	sljit_si		1063704	0					
ANR	1065437	Identifier	next_arg		1063704	1					
ANR	1065438	Parameter	sljit_sw next_argw	742:141:23400:23417	1063704	6	True				
ANR	1065439	ParameterType	sljit_sw		1063704	0					
ANR	1065440	Identifier	next_argw		1063704	1					
ANR	1065441	CFGEntryNode	ENTRY		1063704		True				
ANR	1065442	CFGExitNode	EXIT		1063704		True				
ANR	1065443	Symbol	TMP_REG3		1063704						
ANR	1065444	Symbol	TMP_REG1		1063704						
ANR	1065445	Symbol	compiler -> cache_argw		1063704						
ANR	1065446	Symbol	LOAD_DATA		1063704						
ANR	1065447	Symbol	D		1063704						
ANR	1065448	Symbol	ADDU_W		1063704						
ANR	1065449	Symbol	SLJIT_MEM		1063704						
ANR	1065450	Symbol	flags		1063704						
ANR	1065451	Symbol	* MEM_MASK		1063704						
ANR	1065452	Symbol	* compiler		1063704						
ANR	1065453	Symbol	argw		1063704						
ANR	1065454	Symbol	SIMM_MAX		1063704						
ANR	1065455	Symbol	DR		1063704						
ANR	1065456	Symbol	SA		1063704						
ANR	1065457	Symbol	S		1063704						
ANR	1065458	Symbol	T		1063704						
ANR	1065459	Symbol	load_immediate		1063704						
ANR	1065460	Symbol	arg		1063704						
ANR	1065461	Symbol	ADDIU_W		1063704						
ANR	1065462	Symbol	compiler		1063704						
ANR	1065463	Symbol	WRITE_BACK		1063704						
ANR	1065464	Symbol	SLL_W		1063704						
ANR	1065465	Symbol	SIMM_MIN		1063704						
ANR	1065466	Symbol	next_arg		1063704						
ANR	1065467	Symbol	push_inst		1063704						
ANR	1065468	Symbol	* flags		1063704						
ANR	1065469	Symbol	REG_MASK		1063704						
ANR	1065470	Symbol	compiler -> cache_arg		1063704						
ANR	1065471	Symbol	OFFS_REG_MASK		1063704						
ANR	1065472	Symbol	IMM		1063704						
ANR	1065473	Symbol	next_argw		1063704						
ANR	1065474	Symbol	SLJIT_SUCCESS		1063704						
ANR	1065475	Symbol	delay_slot		1063704						
ANR	1065476	Symbol	data_transfer_insts		1063704						
ANR	1065477	Symbol	TA		1063704						
ANR	1065478	Symbol	* data_transfer_insts		1063704						
ANR	1065479	Symbol	GPR_REG		1063704						
ANR	1065480	Symbol	MEM_MASK		1063704						
ANR	1065481	Symbol	SH_IMM		1063704						
ANR	1065482	Symbol	reg_ar		1063704						
ANR	1065483	Symbol	OFFS_REG		1063704						
ANR	1065484	Symbol	MOVABLE_INS		1063704						
ANR	1065485	Symbol	DA		1063704						
ANR	1065486	Symbol	tmp_ar		1063704						
ANR	1065487	Symbol	base		1063704						
ANR	1065488	Symbol	SLJIT_UNLIKELY		1063704						
ANR	1065489	Function	emit_op_mem	881:0:29195:29532							
ANR	1065490	FunctionDef	"emit_op_mem (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg_ar , sljit_si arg , sljit_sw argw)"		1065489	0					
ANR	1065491	CompoundStatement		882:0:29331:29532	1065489	0					
ANR	1065492	IfStatement	"if ( getput_arg_fast ( compiler , flags , reg_ar , arg , argw ) )"		1065489	0					
ANR	1065493	Condition	"getput_arg_fast ( compiler , flags , reg_ar , arg , argw )"	883:5:29338:29388	1065489	0	True				
ANR	1065494	CallExpression	"getput_arg_fast ( compiler , flags , reg_ar , arg , argw )"		1065489	0					
ANR	1065495	Callee	getput_arg_fast		1065489	0					
ANR	1065496	Identifier	getput_arg_fast		1065489	0					
ANR	1065497	ArgumentList	compiler		1065489	1					
ANR	1065498	Argument	compiler		1065489	0					
ANR	1065499	Identifier	compiler		1065489	0					
ANR	1065500	Argument	flags		1065489	1					
ANR	1065501	Identifier	flags		1065489	0					
ANR	1065502	Argument	reg_ar		1065489	2					
ANR	1065503	Identifier	reg_ar		1065489	0					
ANR	1065504	Argument	arg		1065489	3					
ANR	1065505	Identifier	arg		1065489	0					
ANR	1065506	Argument	argw		1065489	4					
ANR	1065507	Identifier	argw		1065489	0					
ANR	1065508	ReturnStatement	return compiler -> error ;	884:2:29393:29415	1065489	1	True				
ANR	1065509	PtrMemberAccess	compiler -> error		1065489	0					
ANR	1065510	Identifier	compiler		1065489	0					
ANR	1065511	Identifier	error		1065489	1					
ANR	1065512	ExpressionStatement	compiler -> cache_arg = 0	885:1:29418:29441	1065489	1	True				
ANR	1065513	AssignmentExpression	compiler -> cache_arg = 0		1065489	0		=			
ANR	1065514	PtrMemberAccess	compiler -> cache_arg		1065489	0					
ANR	1065515	Identifier	compiler		1065489	0					
ANR	1065516	Identifier	cache_arg		1065489	1					
ANR	1065517	PrimaryExpression	0		1065489	1					
ANR	1065518	ExpressionStatement	compiler -> cache_argw = 0	886:1:29444:29468	1065489	2	True				
ANR	1065519	AssignmentExpression	compiler -> cache_argw = 0		1065489	0		=			
ANR	1065520	PtrMemberAccess	compiler -> cache_argw		1065489	0					
ANR	1065521	Identifier	compiler		1065489	0					
ANR	1065522	Identifier	cache_argw		1065489	1					
ANR	1065523	PrimaryExpression	0		1065489	1					
ANR	1065524	ReturnStatement	"return getput_arg ( compiler , flags , reg_ar , arg , argw , 0 , 0 ) ;"	887:1:29471:29530	1065489	3	True				
ANR	1065525	CallExpression	"getput_arg ( compiler , flags , reg_ar , arg , argw , 0 , 0 )"		1065489	0					
ANR	1065526	Callee	getput_arg		1065489	0					
ANR	1065527	Identifier	getput_arg		1065489	0					
ANR	1065528	ArgumentList	compiler		1065489	1					
ANR	1065529	Argument	compiler		1065489	0					
ANR	1065530	Identifier	compiler		1065489	0					
ANR	1065531	Argument	flags		1065489	1					
ANR	1065532	Identifier	flags		1065489	0					
ANR	1065533	Argument	reg_ar		1065489	2					
ANR	1065534	Identifier	reg_ar		1065489	0					
ANR	1065535	Argument	arg		1065489	3					
ANR	1065536	Identifier	arg		1065489	0					
ANR	1065537	Argument	argw		1065489	4					
ANR	1065538	Identifier	argw		1065489	0					
ANR	1065539	Argument	0		1065489	5					
ANR	1065540	PrimaryExpression	0		1065489	0					
ANR	1065541	Argument	0		1065489	6					
ANR	1065542	PrimaryExpression	0		1065489	0					
ANR	1065543	ReturnType	static SLJIT_INLINE sljit_si		1065489	1					
ANR	1065544	Identifier	emit_op_mem		1065489	2					
ANR	1065545	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg_ar , sljit_si arg , sljit_sw argw"		1065489	3					
ANR	1065546	Parameter	struct sljit_compiler * compiler	881:41:29236:29266	1065489	0	True				
ANR	1065547	ParameterType	struct sljit_compiler *		1065489	0					
ANR	1065548	Identifier	compiler		1065489	1					
ANR	1065549	Parameter	sljit_si flags	881:74:29269:29282	1065489	1	True				
ANR	1065550	ParameterType	sljit_si		1065489	0					
ANR	1065551	Identifier	flags		1065489	1					
ANR	1065552	Parameter	sljit_si reg_ar	881:90:29285:29299	1065489	2	True				
ANR	1065553	ParameterType	sljit_si		1065489	0					
ANR	1065554	Identifier	reg_ar		1065489	1					
ANR	1065555	Parameter	sljit_si arg	881:107:29302:29313	1065489	3	True				
ANR	1065556	ParameterType	sljit_si		1065489	0					
ANR	1065557	Identifier	arg		1065489	1					
ANR	1065558	Parameter	sljit_sw argw	881:121:29316:29328	1065489	4	True				
ANR	1065559	ParameterType	sljit_sw		1065489	0					
ANR	1065560	Identifier	argw		1065489	1					
ANR	1065561	CFGEntryNode	ENTRY		1065489		True				
ANR	1065562	CFGExitNode	EXIT		1065489		True				
ANR	1065563	Symbol	compiler -> cache_argw		1065489						
ANR	1065564	Symbol	getput_arg		1065489						
ANR	1065565	Symbol	compiler -> cache_arg		1065489						
ANR	1065566	Symbol	arg		1065489						
ANR	1065567	Symbol	flags		1065489						
ANR	1065568	Symbol	reg_ar		1065489						
ANR	1065569	Symbol	* compiler		1065489						
ANR	1065570	Symbol	compiler		1065489						
ANR	1065571	Symbol	argw		1065489						
ANR	1065572	Symbol	getput_arg_fast		1065489						
ANR	1065573	Symbol	compiler -> error		1065489						
ANR	1065574	Function	emit_op_mem2	890:0:29535:29855							
ANR	1065575	FunctionDef	"emit_op_mem2 (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg1 , sljit_sw arg1w , sljit_si arg2 , sljit_sw arg2w)"		1065574	0					
ANR	1065576	CompoundStatement		891:0:29702:29855	1065574	0					
ANR	1065577	IfStatement	"if ( getput_arg_fast ( compiler , flags , reg , arg1 , arg1w ) )"		1065574	0					
ANR	1065578	Condition	"getput_arg_fast ( compiler , flags , reg , arg1 , arg1w )"	892:5:29709:29758	1065574	0	True				
ANR	1065579	CallExpression	"getput_arg_fast ( compiler , flags , reg , arg1 , arg1w )"		1065574	0					
ANR	1065580	Callee	getput_arg_fast		1065574	0					
ANR	1065581	Identifier	getput_arg_fast		1065574	0					
ANR	1065582	ArgumentList	compiler		1065574	1					
ANR	1065583	Argument	compiler		1065574	0					
ANR	1065584	Identifier	compiler		1065574	0					
ANR	1065585	Argument	flags		1065574	1					
ANR	1065586	Identifier	flags		1065574	0					
ANR	1065587	Argument	reg		1065574	2					
ANR	1065588	Identifier	reg		1065574	0					
ANR	1065589	Argument	arg1		1065574	3					
ANR	1065590	Identifier	arg1		1065574	0					
ANR	1065591	Argument	arg1w		1065574	4					
ANR	1065592	Identifier	arg1w		1065574	0					
ANR	1065593	ReturnStatement	return compiler -> error ;	893:2:29763:29785	1065574	1	True				
ANR	1065594	PtrMemberAccess	compiler -> error		1065574	0					
ANR	1065595	Identifier	compiler		1065574	0					
ANR	1065596	Identifier	error		1065574	1					
ANR	1065597	ReturnStatement	"return getput_arg ( compiler , flags , reg , arg1 , arg1w , arg2 , arg2w ) ;"	894:1:29788:29853	1065574	1	True				
ANR	1065598	CallExpression	"getput_arg ( compiler , flags , reg , arg1 , arg1w , arg2 , arg2w )"		1065574	0					
ANR	1065599	Callee	getput_arg		1065574	0					
ANR	1065600	Identifier	getput_arg		1065574	0					
ANR	1065601	ArgumentList	compiler		1065574	1					
ANR	1065602	Argument	compiler		1065574	0					
ANR	1065603	Identifier	compiler		1065574	0					
ANR	1065604	Argument	flags		1065574	1					
ANR	1065605	Identifier	flags		1065574	0					
ANR	1065606	Argument	reg		1065574	2					
ANR	1065607	Identifier	reg		1065574	0					
ANR	1065608	Argument	arg1		1065574	3					
ANR	1065609	Identifier	arg1		1065574	0					
ANR	1065610	Argument	arg1w		1065574	4					
ANR	1065611	Identifier	arg1w		1065574	0					
ANR	1065612	Argument	arg2		1065574	5					
ANR	1065613	Identifier	arg2		1065574	0					
ANR	1065614	Argument	arg2w		1065574	6					
ANR	1065615	Identifier	arg2w		1065574	0					
ANR	1065616	ReturnType	static SLJIT_INLINE sljit_si		1065574	1					
ANR	1065617	Identifier	emit_op_mem2		1065574	2					
ANR	1065618	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg1 , sljit_sw arg1w , sljit_si arg2 , sljit_sw arg2w"		1065574	3					
ANR	1065619	Parameter	struct sljit_compiler * compiler	890:42:29577:29607	1065574	0	True				
ANR	1065620	ParameterType	struct sljit_compiler *		1065574	0					
ANR	1065621	Identifier	compiler		1065574	1					
ANR	1065622	Parameter	sljit_si flags	890:75:29610:29623	1065574	1	True				
ANR	1065623	ParameterType	sljit_si		1065574	0					
ANR	1065624	Identifier	flags		1065574	1					
ANR	1065625	Parameter	sljit_si reg	890:91:29626:29637	1065574	2	True				
ANR	1065626	ParameterType	sljit_si		1065574	0					
ANR	1065627	Identifier	reg		1065574	1					
ANR	1065628	Parameter	sljit_si arg1	890:105:29640:29652	1065574	3	True				
ANR	1065629	ParameterType	sljit_si		1065574	0					
ANR	1065630	Identifier	arg1		1065574	1					
ANR	1065631	Parameter	sljit_sw arg1w	890:120:29655:29668	1065574	4	True				
ANR	1065632	ParameterType	sljit_sw		1065574	0					
ANR	1065633	Identifier	arg1w		1065574	1					
ANR	1065634	Parameter	sljit_si arg2	890:136:29671:29683	1065574	5	True				
ANR	1065635	ParameterType	sljit_si		1065574	0					
ANR	1065636	Identifier	arg2		1065574	1					
ANR	1065637	Parameter	sljit_sw arg2w	890:151:29686:29699	1065574	6	True				
ANR	1065638	ParameterType	sljit_sw		1065574	0					
ANR	1065639	Identifier	arg2w		1065574	1					
ANR	1065640	CFGEntryNode	ENTRY		1065574		True				
ANR	1065641	CFGExitNode	EXIT		1065574		True				
ANR	1065642	Symbol	arg1w		1065574						
ANR	1065643	Symbol	arg2		1065574						
ANR	1065644	Symbol	getput_arg		1065574						
ANR	1065645	Symbol	reg		1065574						
ANR	1065646	Symbol	arg1		1065574						
ANR	1065647	Symbol	arg2w		1065574						
ANR	1065648	Symbol	flags		1065574						
ANR	1065649	Symbol	* compiler		1065574						
ANR	1065650	Symbol	compiler		1065574						
ANR	1065651	Symbol	getput_arg_fast		1065574						
ANR	1065652	Symbol	compiler -> error		1065574						
ANR	1065653	Function	emit_op	897:0:29858:33708							
ANR	1065654	FunctionDef	"emit_op (struct sljit_compiler * compiler , sljit_si op , sljit_si flags , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1065653	0					
ANR	1065655	CompoundStatement		901:0:30038:33708	1065653	0					
ANR	1065656	IdentifierDeclStatement	sljit_si dst_r = TMP_REG2 ;	906:1:30234:30259	1065653	0	True				
ANR	1065657	IdentifierDecl	dst_r = TMP_REG2		1065653	0					
ANR	1065658	IdentifierDeclType	sljit_si		1065653	0					
ANR	1065659	Identifier	dst_r		1065653	1					
ANR	1065660	AssignmentExpression	dst_r = TMP_REG2		1065653	2		=			
ANR	1065661	Identifier	TMP_REG2		1065653	0					
ANR	1065662	Identifier	TMP_REG2		1065653	1					
ANR	1065663	IdentifierDeclStatement	sljit_si src1_r ;	907:1:30262:30277	1065653	1	True				
ANR	1065664	IdentifierDecl	src1_r		1065653	0					
ANR	1065665	IdentifierDeclType	sljit_si		1065653	0					
ANR	1065666	Identifier	src1_r		1065653	1					
ANR	1065667	IdentifierDeclStatement	sljit_sw src2_r = 0 ;	908:1:30280:30299	1065653	2	True				
ANR	1065668	IdentifierDecl	src2_r = 0		1065653	0					
ANR	1065669	IdentifierDeclType	sljit_sw		1065653	0					
ANR	1065670	Identifier	src2_r		1065653	1					
ANR	1065671	AssignmentExpression	src2_r = 0		1065653	2		=			
ANR	1065672	Identifier	src2_r		1065653	0					
ANR	1065673	PrimaryExpression	0		1065653	1					
ANR	1065674	IdentifierDeclStatement	sljit_si sugg_src2_r = TMP_REG2 ;	909:1:30302:30333	1065653	3	True				
ANR	1065675	IdentifierDecl	sugg_src2_r = TMP_REG2		1065653	0					
ANR	1065676	IdentifierDeclType	sljit_si		1065653	0					
ANR	1065677	Identifier	sugg_src2_r		1065653	1					
ANR	1065678	AssignmentExpression	sugg_src2_r = TMP_REG2		1065653	2		=			
ANR	1065679	Identifier	TMP_REG2		1065653	0					
ANR	1065680	Identifier	TMP_REG2		1065653	1					
ANR	1065681	IfStatement	if ( ! ( flags & ALT_KEEP_CACHE ) )		1065653	4					
ANR	1065682	Condition	! ( flags & ALT_KEEP_CACHE )	911:5:30341:30365	1065653	0	True				
ANR	1065683	UnaryOperationExpression	! ( flags & ALT_KEEP_CACHE )		1065653	0					
ANR	1065684	UnaryOperator	!		1065653	0					
ANR	1065685	BitAndExpression	flags & ALT_KEEP_CACHE		1065653	1		&			
ANR	1065686	Identifier	flags		1065653	0					
ANR	1065687	Identifier	ALT_KEEP_CACHE		1065653	1					
ANR	1065688	CompoundStatement		11:32:329:329	1065653	1					
ANR	1065689	ExpressionStatement	compiler -> cache_arg = 0	912:2:30372:30395	1065653	0	True				
ANR	1065690	AssignmentExpression	compiler -> cache_arg = 0		1065653	0		=			
ANR	1065691	PtrMemberAccess	compiler -> cache_arg		1065653	0					
ANR	1065692	Identifier	compiler		1065653	0					
ANR	1065693	Identifier	cache_arg		1065653	1					
ANR	1065694	PrimaryExpression	0		1065653	1					
ANR	1065695	ExpressionStatement	compiler -> cache_argw = 0	913:2:30399:30423	1065653	1	True				
ANR	1065696	AssignmentExpression	compiler -> cache_argw = 0		1065653	0		=			
ANR	1065697	PtrMemberAccess	compiler -> cache_argw		1065653	0					
ANR	1065698	Identifier	compiler		1065653	0					
ANR	1065699	Identifier	cache_argw		1065653	1					
ANR	1065700	PrimaryExpression	0		1065653	1					
ANR	1065701	IfStatement	if ( SLJIT_UNLIKELY ( dst == SLJIT_UNUSED ) )		1065653	5					
ANR	1065702	Condition	SLJIT_UNLIKELY ( dst == SLJIT_UNUSED )	916:5:30434:30468	1065653	0	True				
ANR	1065703	CallExpression	SLJIT_UNLIKELY ( dst == SLJIT_UNUSED )		1065653	0					
ANR	1065704	Callee	SLJIT_UNLIKELY		1065653	0					
ANR	1065705	Identifier	SLJIT_UNLIKELY		1065653	0					
ANR	1065706	ArgumentList	dst == SLJIT_UNUSED		1065653	1					
ANR	1065707	Argument	dst == SLJIT_UNUSED		1065653	0					
ANR	1065708	EqualityExpression	dst == SLJIT_UNUSED		1065653	0		==			
ANR	1065709	Identifier	dst		1065653	0					
ANR	1065710	Identifier	SLJIT_UNUSED		1065653	1					
ANR	1065711	CompoundStatement		16:42:432:432	1065653	1					
ANR	1065712	IfStatement	if ( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM ) )		1065653	0					
ANR	1065713	Condition	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM )	917:6:30479:30539	1065653	0	True				
ANR	1065714	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM )		1065653	0		&&			
ANR	1065715	RelationalExpression	op >= SLJIT_MOV		1065653	0		>=			
ANR	1065716	Identifier	op		1065653	0					
ANR	1065717	Identifier	SLJIT_MOV		1065653	1					
ANR	1065718	AndExpression	op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM )		1065653	1		&&			
ANR	1065719	RelationalExpression	op <= SLJIT_MOVU_SI		1065653	0		<=			
ANR	1065720	Identifier	op		1065653	0					
ANR	1065721	Identifier	SLJIT_MOVU_SI		1065653	1					
ANR	1065722	UnaryOperationExpression	! ( src2 & SLJIT_MEM )		1065653	1					
ANR	1065723	UnaryOperator	!		1065653	0					
ANR	1065724	BitAndExpression	src2 & SLJIT_MEM		1065653	1		&			
ANR	1065725	Identifier	src2		1065653	0					
ANR	1065726	Identifier	SLJIT_MEM		1065653	1					
ANR	1065727	ReturnStatement	return SLJIT_SUCCESS ;	918:3:30545:30565	1065653	1	True				
ANR	1065728	Identifier	SLJIT_SUCCESS		1065653	0					
ANR	1065729	IfStatement	if ( GET_FLAGS ( op ) )		1065653	1					
ANR	1065730	Condition	GET_FLAGS ( op )	919:6:30573:30585	1065653	0	True				
ANR	1065731	CallExpression	GET_FLAGS ( op )		1065653	0					
ANR	1065732	Callee	GET_FLAGS		1065653	0					
ANR	1065733	Identifier	GET_FLAGS		1065653	0					
ANR	1065734	ArgumentList	op		1065653	1					
ANR	1065735	Argument	op		1065653	0					
ANR	1065736	Identifier	op		1065653	0					
ANR	1065737	ExpressionStatement	flags |= UNUSED_DEST	920:3:30591:30611	1065653	1	True				
ANR	1065738	AssignmentExpression	flags |= UNUSED_DEST		1065653	0		|=			
ANR	1065739	Identifier	flags		1065653	0					
ANR	1065740	Identifier	UNUSED_DEST		1065653	1					
ANR	1065741	ElseStatement	else		1065653	0					
ANR	1065742	IfStatement	if ( FAST_IS_REG ( dst ) )		1065653	0					
ANR	1065743	Condition	FAST_IS_REG ( dst )	922:10:30626:30641	1065653	0	True				
ANR	1065744	CallExpression	FAST_IS_REG ( dst )		1065653	0					
ANR	1065745	Callee	FAST_IS_REG		1065653	0					
ANR	1065746	Identifier	FAST_IS_REG		1065653	0					
ANR	1065747	ArgumentList	dst		1065653	1					
ANR	1065748	Argument	dst		1065653	0					
ANR	1065749	Identifier	dst		1065653	0					
ANR	1065750	CompoundStatement		22:28:605:605	1065653	1					
ANR	1065751	ExpressionStatement	dst_r = dst	923:2:30648:30659	1065653	0	True				
ANR	1065752	AssignmentExpression	dst_r = dst		1065653	0		=			
ANR	1065753	Identifier	dst_r		1065653	0					
ANR	1065754	Identifier	dst		1065653	1					
ANR	1065755	ExpressionStatement	flags |= REG_DEST	924:2:30663:30680	1065653	1	True				
ANR	1065756	AssignmentExpression	flags |= REG_DEST		1065653	0		|=			
ANR	1065757	Identifier	flags		1065653	0					
ANR	1065758	Identifier	REG_DEST		1065653	1					
ANR	1065759	IfStatement	if ( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI )		1065653	2					
ANR	1065760	Condition	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI	925:6:30688:30725	1065653	0	True				
ANR	1065761	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI		1065653	0		&&			
ANR	1065762	RelationalExpression	op >= SLJIT_MOV		1065653	0		>=			
ANR	1065763	Identifier	op		1065653	0					
ANR	1065764	Identifier	SLJIT_MOV		1065653	1					
ANR	1065765	RelationalExpression	op <= SLJIT_MOVU_SI		1065653	1		<=			
ANR	1065766	Identifier	op		1065653	0					
ANR	1065767	Identifier	SLJIT_MOVU_SI		1065653	1					
ANR	1065768	ExpressionStatement	sugg_src2_r = dst_r	926:3:30731:30750	1065653	1	True				
ANR	1065769	AssignmentExpression	sugg_src2_r = dst_r		1065653	0		=			
ANR	1065770	Identifier	sugg_src2_r		1065653	0					
ANR	1065771	Identifier	dst_r		1065653	1					
ANR	1065772	ElseStatement	else		1065653	0					
ANR	1065773	IfStatement	"if ( ( dst & SLJIT_MEM ) && ! getput_arg_fast ( compiler , flags | ARG_TEST , DR ( TMP_REG1 ) , dst , dstw ) )"		1065653	0					
ANR	1065774	Condition	"( dst & SLJIT_MEM ) && ! getput_arg_fast ( compiler , flags | ARG_TEST , DR ( TMP_REG1 ) , dst , dstw )"	928:10:30765:30854	1065653	0	True				
ANR	1065775	AndExpression	"( dst & SLJIT_MEM ) && ! getput_arg_fast ( compiler , flags | ARG_TEST , DR ( TMP_REG1 ) , dst , dstw )"		1065653	0		&&			
ANR	1065776	BitAndExpression	dst & SLJIT_MEM		1065653	0		&			
ANR	1065777	Identifier	dst		1065653	0					
ANR	1065778	Identifier	SLJIT_MEM		1065653	1					
ANR	1065779	UnaryOperationExpression	"! getput_arg_fast ( compiler , flags | ARG_TEST , DR ( TMP_REG1 ) , dst , dstw )"		1065653	1					
ANR	1065780	UnaryOperator	!		1065653	0					
ANR	1065781	CallExpression	"getput_arg_fast ( compiler , flags | ARG_TEST , DR ( TMP_REG1 ) , dst , dstw )"		1065653	1					
ANR	1065782	Callee	getput_arg_fast		1065653	0					
ANR	1065783	Identifier	getput_arg_fast		1065653	0					
ANR	1065784	ArgumentList	compiler		1065653	1					
ANR	1065785	Argument	compiler		1065653	0					
ANR	1065786	Identifier	compiler		1065653	0					
ANR	1065787	Argument	flags | ARG_TEST		1065653	1					
ANR	1065788	InclusiveOrExpression	flags | ARG_TEST		1065653	0		|			
ANR	1065789	Identifier	flags		1065653	0					
ANR	1065790	Identifier	ARG_TEST		1065653	1					
ANR	1065791	Argument	DR ( TMP_REG1 )		1065653	2					
ANR	1065792	CallExpression	DR ( TMP_REG1 )		1065653	0					
ANR	1065793	Callee	DR		1065653	0					
ANR	1065794	Identifier	DR		1065653	0					
ANR	1065795	ArgumentList	TMP_REG1		1065653	1					
ANR	1065796	Argument	TMP_REG1		1065653	0					
ANR	1065797	Identifier	TMP_REG1		1065653	0					
ANR	1065798	Argument	dst		1065653	3					
ANR	1065799	Identifier	dst		1065653	0					
ANR	1065800	Argument	dstw		1065653	4					
ANR	1065801	Identifier	dstw		1065653	0					
ANR	1065802	ExpressionStatement	flags |= SLOW_DEST	929:2:30859:30877	1065653	1	True				
ANR	1065803	AssignmentExpression	flags |= SLOW_DEST		1065653	0		|=			
ANR	1065804	Identifier	flags		1065653	0					
ANR	1065805	Identifier	SLOW_DEST		1065653	1					
ANR	1065806	IfStatement	if ( flags & IMM_OP )		1065653	6					
ANR	1065807	Condition	flags & IMM_OP	931:5:30885:30898	1065653	0	True				
ANR	1065808	BitAndExpression	flags & IMM_OP		1065653	0		&			
ANR	1065809	Identifier	flags		1065653	0					
ANR	1065810	Identifier	IMM_OP		1065653	1					
ANR	1065811	CompoundStatement		31:21:862:862	1065653	1					
ANR	1065812	IfStatement	if ( ( src2 & SLJIT_IMM ) && src2w )		1065653	0					
ANR	1065813	Condition	( src2 & SLJIT_IMM ) && src2w	932:6:30909:30935	1065653	0	True				
ANR	1065814	AndExpression	( src2 & SLJIT_IMM ) && src2w		1065653	0		&&			
ANR	1065815	BitAndExpression	src2 & SLJIT_IMM		1065653	0		&			
ANR	1065816	Identifier	src2		1065653	0					
ANR	1065817	Identifier	SLJIT_IMM		1065653	1					
ANR	1065818	Identifier	src2w		1065653	1					
ANR	1065819	CompoundStatement		32:35:899:899	1065653	1					
ANR	1065820	IfStatement	if ( ( ! ( flags & LOGICAL_OP ) && ( src2w <= SIMM_MAX && src2w >= SIMM_MIN ) ) || ( ( flags & LOGICAL_OP ) && ! ( src2w & ~UIMM_MAX ) ) )		1065653	0					
ANR	1065821	Condition	( ! ( flags & LOGICAL_OP ) && ( src2w <= SIMM_MAX && src2w >= SIMM_MIN ) ) || ( ( flags & LOGICAL_OP ) && ! ( src2w & ~UIMM_MAX ) )	933:7:30947:31067	1065653	0	True				
ANR	1065822	OrExpression	( ! ( flags & LOGICAL_OP ) && ( src2w <= SIMM_MAX && src2w >= SIMM_MIN ) ) || ( ( flags & LOGICAL_OP ) && ! ( src2w & ~UIMM_MAX ) )		1065653	0		||			
ANR	1065823	AndExpression	! ( flags & LOGICAL_OP ) && ( src2w <= SIMM_MAX && src2w >= SIMM_MIN )		1065653	0		&&			
ANR	1065824	UnaryOperationExpression	! ( flags & LOGICAL_OP )		1065653	0					
ANR	1065825	UnaryOperator	!		1065653	0					
ANR	1065826	BitAndExpression	flags & LOGICAL_OP		1065653	1		&			
ANR	1065827	Identifier	flags		1065653	0					
ANR	1065828	Identifier	LOGICAL_OP		1065653	1					
ANR	1065829	AndExpression	src2w <= SIMM_MAX && src2w >= SIMM_MIN		1065653	1		&&			
ANR	1065830	RelationalExpression	src2w <= SIMM_MAX		1065653	0		<=			
ANR	1065831	Identifier	src2w		1065653	0					
ANR	1065832	Identifier	SIMM_MAX		1065653	1					
ANR	1065833	RelationalExpression	src2w >= SIMM_MIN		1065653	1		>=			
ANR	1065834	Identifier	src2w		1065653	0					
ANR	1065835	Identifier	SIMM_MIN		1065653	1					
ANR	1065836	AndExpression	( flags & LOGICAL_OP ) && ! ( src2w & ~UIMM_MAX )		1065653	1		&&			
ANR	1065837	BitAndExpression	flags & LOGICAL_OP		1065653	0		&			
ANR	1065838	Identifier	flags		1065653	0					
ANR	1065839	Identifier	LOGICAL_OP		1065653	1					
ANR	1065840	UnaryOperationExpression	! ( src2w & ~UIMM_MAX )		1065653	1					
ANR	1065841	UnaryOperator	!		1065653	0					
ANR	1065842	BitAndExpression	src2w & ~UIMM_MAX		1065653	1		&			
ANR	1065843	Identifier	src2w		1065653	0					
ANR	1065844	Identifier	~UIMM_MAX		1065653	1					
ANR	1065845	CompoundStatement		34:55:1031:1031	1065653	1					
ANR	1065846	ExpressionStatement	flags |= SRC2_IMM	935:4:31076:31093	1065653	0	True				
ANR	1065847	AssignmentExpression	flags |= SRC2_IMM		1065653	0		|=			
ANR	1065848	Identifier	flags		1065653	0					
ANR	1065849	Identifier	SRC2_IMM		1065653	1					
ANR	1065850	ExpressionStatement	src2_r = src2w	936:4:31099:31113	1065653	1	True				
ANR	1065851	AssignmentExpression	src2_r = src2w		1065653	0		=			
ANR	1065852	Identifier	src2_r		1065653	0					
ANR	1065853	Identifier	src2w		1065653	1					
ANR	1065854	IfStatement	if ( ! ( flags & SRC2_IMM ) && ( flags & CUMULATIVE_OP ) && ( src1 & SLJIT_IMM ) && src1w )		1065653	1					
ANR	1065855	Condition	! ( flags & SRC2_IMM ) && ( flags & CUMULATIVE_OP ) && ( src1 & SLJIT_IMM ) && src1w	939:6:31130:31206	1065653	0	True				
ANR	1065856	AndExpression	! ( flags & SRC2_IMM ) && ( flags & CUMULATIVE_OP ) && ( src1 & SLJIT_IMM ) && src1w		1065653	0		&&			
ANR	1065857	UnaryOperationExpression	! ( flags & SRC2_IMM )		1065653	0					
ANR	1065858	UnaryOperator	!		1065653	0					
ANR	1065859	BitAndExpression	flags & SRC2_IMM		1065653	1		&			
ANR	1065860	Identifier	flags		1065653	0					
ANR	1065861	Identifier	SRC2_IMM		1065653	1					
ANR	1065862	AndExpression	( flags & CUMULATIVE_OP ) && ( src1 & SLJIT_IMM ) && src1w		1065653	1		&&			
ANR	1065863	BitAndExpression	flags & CUMULATIVE_OP		1065653	0		&			
ANR	1065864	Identifier	flags		1065653	0					
ANR	1065865	Identifier	CUMULATIVE_OP		1065653	1					
ANR	1065866	AndExpression	( src1 & SLJIT_IMM ) && src1w		1065653	1		&&			
ANR	1065867	BitAndExpression	src1 & SLJIT_IMM		1065653	0		&			
ANR	1065868	Identifier	src1		1065653	0					
ANR	1065869	Identifier	SLJIT_IMM		1065653	1					
ANR	1065870	Identifier	src1w		1065653	1					
ANR	1065871	CompoundStatement		39:85:1170:1170	1065653	1					
ANR	1065872	IfStatement	if ( ( ! ( flags & LOGICAL_OP ) && ( src1w <= SIMM_MAX && src1w >= SIMM_MIN ) ) || ( ( flags & LOGICAL_OP ) && ! ( src1w & ~UIMM_MAX ) ) )		1065653	0					
ANR	1065873	Condition	( ! ( flags & LOGICAL_OP ) && ( src1w <= SIMM_MAX && src1w >= SIMM_MIN ) ) || ( ( flags & LOGICAL_OP ) && ! ( src1w & ~UIMM_MAX ) )	940:7:31218:31338	1065653	0	True				
ANR	1065874	OrExpression	( ! ( flags & LOGICAL_OP ) && ( src1w <= SIMM_MAX && src1w >= SIMM_MIN ) ) || ( ( flags & LOGICAL_OP ) && ! ( src1w & ~UIMM_MAX ) )		1065653	0		||			
ANR	1065875	AndExpression	! ( flags & LOGICAL_OP ) && ( src1w <= SIMM_MAX && src1w >= SIMM_MIN )		1065653	0		&&			
ANR	1065876	UnaryOperationExpression	! ( flags & LOGICAL_OP )		1065653	0					
ANR	1065877	UnaryOperator	!		1065653	0					
ANR	1065878	BitAndExpression	flags & LOGICAL_OP		1065653	1		&			
ANR	1065879	Identifier	flags		1065653	0					
ANR	1065880	Identifier	LOGICAL_OP		1065653	1					
ANR	1065881	AndExpression	src1w <= SIMM_MAX && src1w >= SIMM_MIN		1065653	1		&&			
ANR	1065882	RelationalExpression	src1w <= SIMM_MAX		1065653	0		<=			
ANR	1065883	Identifier	src1w		1065653	0					
ANR	1065884	Identifier	SIMM_MAX		1065653	1					
ANR	1065885	RelationalExpression	src1w >= SIMM_MIN		1065653	1		>=			
ANR	1065886	Identifier	src1w		1065653	0					
ANR	1065887	Identifier	SIMM_MIN		1065653	1					
ANR	1065888	AndExpression	( flags & LOGICAL_OP ) && ! ( src1w & ~UIMM_MAX )		1065653	1		&&			
ANR	1065889	BitAndExpression	flags & LOGICAL_OP		1065653	0		&			
ANR	1065890	Identifier	flags		1065653	0					
ANR	1065891	Identifier	LOGICAL_OP		1065653	1					
ANR	1065892	UnaryOperationExpression	! ( src1w & ~UIMM_MAX )		1065653	1					
ANR	1065893	UnaryOperator	!		1065653	0					
ANR	1065894	BitAndExpression	src1w & ~UIMM_MAX		1065653	1		&			
ANR	1065895	Identifier	src1w		1065653	0					
ANR	1065896	Identifier	~UIMM_MAX		1065653	1					
ANR	1065897	CompoundStatement		41:55:1302:1302	1065653	1					
ANR	1065898	ExpressionStatement	flags |= SRC2_IMM	942:4:31347:31364	1065653	0	True				
ANR	1065899	AssignmentExpression	flags |= SRC2_IMM		1065653	0		|=			
ANR	1065900	Identifier	flags		1065653	0					
ANR	1065901	Identifier	SRC2_IMM		1065653	1					
ANR	1065902	ExpressionStatement	src2_r = src1w	943:4:31370:31384	1065653	1	True				
ANR	1065903	AssignmentExpression	src2_r = src1w		1065653	0		=			
ANR	1065904	Identifier	src2_r		1065653	0					
ANR	1065905	Identifier	src1w		1065653	1					
ANR	1065906	ExpressionStatement	src1 = src2	946:4:31421:31432	1065653	2	True				
ANR	1065907	AssignmentExpression	src1 = src2		1065653	0		=			
ANR	1065908	Identifier	src1		1065653	0					
ANR	1065909	Identifier	src2		1065653	1					
ANR	1065910	ExpressionStatement	src1w = src2w	947:4:31438:31451	1065653	3	True				
ANR	1065911	AssignmentExpression	src1w = src2w		1065653	0		=			
ANR	1065912	Identifier	src1w		1065653	0					
ANR	1065913	Identifier	src2w		1065653	1					
ANR	1065914	ExpressionStatement	src2 = SLJIT_IMM	948:4:31457:31473	1065653	4	True				
ANR	1065915	AssignmentExpression	src2 = SLJIT_IMM		1065653	0		=			
ANR	1065916	Identifier	src2		1065653	0					
ANR	1065917	Identifier	SLJIT_IMM		1065653	1					
ANR	1065918	IfStatement	if ( FAST_IS_REG ( src1 ) )		1065653	7					
ANR	1065919	Condition	FAST_IS_REG ( src1 )	955:5:31545:31561	1065653	0	True				
ANR	1065920	CallExpression	FAST_IS_REG ( src1 )		1065653	0					
ANR	1065921	Callee	FAST_IS_REG		1065653	0					
ANR	1065922	Identifier	FAST_IS_REG		1065653	0					
ANR	1065923	ArgumentList	src1		1065653	1					
ANR	1065924	Argument	src1		1065653	0					
ANR	1065925	Identifier	src1		1065653	0					
ANR	1065926	CompoundStatement		55:24:1525:1525	1065653	1					
ANR	1065927	ExpressionStatement	src1_r = src1	956:2:31568:31581	1065653	0	True				
ANR	1065928	AssignmentExpression	src1_r = src1		1065653	0		=			
ANR	1065929	Identifier	src1_r		1065653	0					
ANR	1065930	Identifier	src1		1065653	1					
ANR	1065931	ExpressionStatement	flags |= REG1_SOURCE	957:2:31585:31605	1065653	1	True				
ANR	1065932	AssignmentExpression	flags |= REG1_SOURCE		1065653	0		|=			
ANR	1065933	Identifier	flags		1065653	0					
ANR	1065934	Identifier	REG1_SOURCE		1065653	1					
ANR	1065935	ElseStatement	else		1065653	0					
ANR	1065936	IfStatement	if ( src1 & SLJIT_IMM )		1065653	0					
ANR	1065937	Condition	src1 & SLJIT_IMM	959:10:31620:31635	1065653	0	True				
ANR	1065938	BitAndExpression	src1 & SLJIT_IMM		1065653	0		&			
ANR	1065939	Identifier	src1		1065653	0					
ANR	1065940	Identifier	SLJIT_IMM		1065653	1					
ANR	1065941	CompoundStatement		59:28:1599:1599	1065653	1					
ANR	1065942	IfStatement	if ( src1w )		1065653	0					
ANR	1065943	Condition	src1w	960:6:31646:31650	1065653	0	True				
ANR	1065944	Identifier	src1w		1065653	0					
ANR	1065945	CompoundStatement		60:13:1614:1614	1065653	1					
ANR	1065946	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , DR ( TMP_REG1 ) , src1w ) )"	961:3:31658:31712	1065653	0	True				
ANR	1065947	CallExpression	"FAIL_IF ( load_immediate ( compiler , DR ( TMP_REG1 ) , src1w ) )"		1065653	0					
ANR	1065948	Callee	FAIL_IF		1065653	0					
ANR	1065949	Identifier	FAIL_IF		1065653	0					
ANR	1065950	ArgumentList	"load_immediate ( compiler , DR ( TMP_REG1 ) , src1w )"		1065653	1					
ANR	1065951	Argument	"load_immediate ( compiler , DR ( TMP_REG1 ) , src1w )"		1065653	0					
ANR	1065952	CallExpression	"load_immediate ( compiler , DR ( TMP_REG1 ) , src1w )"		1065653	0					
ANR	1065953	Callee	load_immediate		1065653	0					
ANR	1065954	Identifier	load_immediate		1065653	0					
ANR	1065955	ArgumentList	compiler		1065653	1					
ANR	1065956	Argument	compiler		1065653	0					
ANR	1065957	Identifier	compiler		1065653	0					
ANR	1065958	Argument	DR ( TMP_REG1 )		1065653	1					
ANR	1065959	CallExpression	DR ( TMP_REG1 )		1065653	0					
ANR	1065960	Callee	DR		1065653	0					
ANR	1065961	Identifier	DR		1065653	0					
ANR	1065962	ArgumentList	TMP_REG1		1065653	1					
ANR	1065963	Argument	TMP_REG1		1065653	0					
ANR	1065964	Identifier	TMP_REG1		1065653	0					
ANR	1065965	Argument	src1w		1065653	2					
ANR	1065966	Identifier	src1w		1065653	0					
ANR	1065967	ExpressionStatement	src1_r = TMP_REG1	962:3:31717:31734	1065653	1	True				
ANR	1065968	AssignmentExpression	src1_r = TMP_REG1		1065653	0		=			
ANR	1065969	Identifier	src1_r		1065653	0					
ANR	1065970	Identifier	TMP_REG1		1065653	1					
ANR	1065971	ElseStatement	else		1065653	0					
ANR	1065972	ExpressionStatement	src1_r = 0	965:3:31750:31760	1065653	0	True				
ANR	1065973	AssignmentExpression	src1_r = 0		1065653	0		=			
ANR	1065974	Identifier	src1_r		1065653	0					
ANR	1065975	PrimaryExpression	0		1065653	1					
ANR	1065976	ElseStatement	else		1065653	0					
ANR	1065977	CompoundStatement		67:6:1732:1732	1065653	0					
ANR	1065978	IfStatement	"if ( getput_arg_fast ( compiler , flags | LOAD_DATA , DR ( TMP_REG1 ) , src1 , src1w ) )"		1065653	0					
ANR	1065979	Condition	"getput_arg_fast ( compiler , flags | LOAD_DATA , DR ( TMP_REG1 ) , src1 , src1w )"	968:6:31779:31849	1065653	0	True				
ANR	1065980	CallExpression	"getput_arg_fast ( compiler , flags | LOAD_DATA , DR ( TMP_REG1 ) , src1 , src1w )"		1065653	0					
ANR	1065981	Callee	getput_arg_fast		1065653	0					
ANR	1065982	Identifier	getput_arg_fast		1065653	0					
ANR	1065983	ArgumentList	compiler		1065653	1					
ANR	1065984	Argument	compiler		1065653	0					
ANR	1065985	Identifier	compiler		1065653	0					
ANR	1065986	Argument	flags | LOAD_DATA		1065653	1					
ANR	1065987	InclusiveOrExpression	flags | LOAD_DATA		1065653	0		|			
ANR	1065988	Identifier	flags		1065653	0					
ANR	1065989	Identifier	LOAD_DATA		1065653	1					
ANR	1065990	Argument	DR ( TMP_REG1 )		1065653	2					
ANR	1065991	CallExpression	DR ( TMP_REG1 )		1065653	0					
ANR	1065992	Callee	DR		1065653	0					
ANR	1065993	Identifier	DR		1065653	0					
ANR	1065994	ArgumentList	TMP_REG1		1065653	1					
ANR	1065995	Argument	TMP_REG1		1065653	0					
ANR	1065996	Identifier	TMP_REG1		1065653	0					
ANR	1065997	Argument	src1		1065653	3					
ANR	1065998	Identifier	src1		1065653	0					
ANR	1065999	Argument	src1w		1065653	4					
ANR	1066000	Identifier	src1w		1065653	0					
ANR	1066001	ExpressionStatement	FAIL_IF ( compiler -> error )	969:3:31855:31879	1065653	1	True				
ANR	1066002	CallExpression	FAIL_IF ( compiler -> error )		1065653	0					
ANR	1066003	Callee	FAIL_IF		1065653	0					
ANR	1066004	Identifier	FAIL_IF		1065653	0					
ANR	1066005	ArgumentList	compiler -> error		1065653	1					
ANR	1066006	Argument	compiler -> error		1065653	0					
ANR	1066007	PtrMemberAccess	compiler -> error		1065653	0					
ANR	1066008	Identifier	compiler		1065653	0					
ANR	1066009	Identifier	error		1065653	1					
ANR	1066010	ElseStatement	else		1065653	0					
ANR	1066011	ExpressionStatement	flags |= SLOW_SRC1	971:3:31891:31909	1065653	0	True				
ANR	1066012	AssignmentExpression	flags |= SLOW_SRC1		1065653	0		|=			
ANR	1066013	Identifier	flags		1065653	0					
ANR	1066014	Identifier	SLOW_SRC1		1065653	1					
ANR	1066015	ExpressionStatement	src1_r = TMP_REG1	972:2:31913:31930	1065653	1	True				
ANR	1066016	AssignmentExpression	src1_r = TMP_REG1		1065653	0		=			
ANR	1066017	Identifier	src1_r		1065653	0					
ANR	1066018	Identifier	TMP_REG1		1065653	1					
ANR	1066019	IfStatement	if ( FAST_IS_REG ( src2 ) )		1065653	8					
ANR	1066020	Condition	FAST_IS_REG ( src2 )	976:5:31958:31974	1065653	0	True				
ANR	1066021	CallExpression	FAST_IS_REG ( src2 )		1065653	0					
ANR	1066022	Callee	FAST_IS_REG		1065653	0					
ANR	1066023	Identifier	FAST_IS_REG		1065653	0					
ANR	1066024	ArgumentList	src2		1065653	1					
ANR	1066025	Argument	src2		1065653	0					
ANR	1066026	Identifier	src2		1065653	0					
ANR	1066027	CompoundStatement		76:24:1938:1938	1065653	1					
ANR	1066028	ExpressionStatement	src2_r = src2	977:2:31981:31994	1065653	0	True				
ANR	1066029	AssignmentExpression	src2_r = src2		1065653	0		=			
ANR	1066030	Identifier	src2_r		1065653	0					
ANR	1066031	Identifier	src2		1065653	1					
ANR	1066032	ExpressionStatement	flags |= REG2_SOURCE	978:2:31998:32018	1065653	1	True				
ANR	1066033	AssignmentExpression	flags |= REG2_SOURCE		1065653	0		|=			
ANR	1066034	Identifier	flags		1065653	0					
ANR	1066035	Identifier	REG2_SOURCE		1065653	1					
ANR	1066036	IfStatement	if ( ! ( flags & REG_DEST ) && op >= SLJIT_MOV && op <= SLJIT_MOVU_SI )		1065653	2					
ANR	1066037	Condition	! ( flags & REG_DEST ) && op >= SLJIT_MOV && op <= SLJIT_MOVU_SI	979:6:32026:32086	1065653	0	True				
ANR	1066038	AndExpression	! ( flags & REG_DEST ) && op >= SLJIT_MOV && op <= SLJIT_MOVU_SI		1065653	0		&&			
ANR	1066039	UnaryOperationExpression	! ( flags & REG_DEST )		1065653	0					
ANR	1066040	UnaryOperator	!		1065653	0					
ANR	1066041	BitAndExpression	flags & REG_DEST		1065653	1		&			
ANR	1066042	Identifier	flags		1065653	0					
ANR	1066043	Identifier	REG_DEST		1065653	1					
ANR	1066044	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI		1065653	1		&&			
ANR	1066045	RelationalExpression	op >= SLJIT_MOV		1065653	0		>=			
ANR	1066046	Identifier	op		1065653	0					
ANR	1066047	Identifier	SLJIT_MOV		1065653	1					
ANR	1066048	RelationalExpression	op <= SLJIT_MOVU_SI		1065653	1		<=			
ANR	1066049	Identifier	op		1065653	0					
ANR	1066050	Identifier	SLJIT_MOVU_SI		1065653	1					
ANR	1066051	ExpressionStatement	dst_r = src2_r	980:3:32092:32106	1065653	1	True				
ANR	1066052	AssignmentExpression	dst_r = src2_r		1065653	0		=			
ANR	1066053	Identifier	dst_r		1065653	0					
ANR	1066054	Identifier	src2_r		1065653	1					
ANR	1066055	ElseStatement	else		1065653	0					
ANR	1066056	IfStatement	if ( src2 & SLJIT_IMM )		1065653	0					
ANR	1066057	Condition	src2 & SLJIT_IMM	982:10:32121:32136	1065653	0	True				
ANR	1066058	BitAndExpression	src2 & SLJIT_IMM		1065653	0		&			
ANR	1066059	Identifier	src2		1065653	0					
ANR	1066060	Identifier	SLJIT_IMM		1065653	1					
ANR	1066061	CompoundStatement		82:28:2100:2100	1065653	1					
ANR	1066062	IfStatement	if ( ! ( flags & SRC2_IMM ) )		1065653	0					
ANR	1066063	Condition	! ( flags & SRC2_IMM )	983:6:32147:32165	1065653	0	True				
ANR	1066064	UnaryOperationExpression	! ( flags & SRC2_IMM )		1065653	0					
ANR	1066065	UnaryOperator	!		1065653	0					
ANR	1066066	BitAndExpression	flags & SRC2_IMM		1065653	1		&			
ANR	1066067	Identifier	flags		1065653	0					
ANR	1066068	Identifier	SRC2_IMM		1065653	1					
ANR	1066069	CompoundStatement		83:27:2129:2129	1065653	1					
ANR	1066070	IfStatement	if ( src2w )		1065653	0					
ANR	1066071	Condition	src2w	984:7:32177:32181	1065653	0	True				
ANR	1066072	Identifier	src2w		1065653	0					
ANR	1066073	CompoundStatement		84:14:2145:2145	1065653	1					
ANR	1066074	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , DR ( sugg_src2_r ) , src2w ) )"	985:4:32190:32247	1065653	0	True				
ANR	1066075	CallExpression	"FAIL_IF ( load_immediate ( compiler , DR ( sugg_src2_r ) , src2w ) )"		1065653	0					
ANR	1066076	Callee	FAIL_IF		1065653	0					
ANR	1066077	Identifier	FAIL_IF		1065653	0					
ANR	1066078	ArgumentList	"load_immediate ( compiler , DR ( sugg_src2_r ) , src2w )"		1065653	1					
ANR	1066079	Argument	"load_immediate ( compiler , DR ( sugg_src2_r ) , src2w )"		1065653	0					
ANR	1066080	CallExpression	"load_immediate ( compiler , DR ( sugg_src2_r ) , src2w )"		1065653	0					
ANR	1066081	Callee	load_immediate		1065653	0					
ANR	1066082	Identifier	load_immediate		1065653	0					
ANR	1066083	ArgumentList	compiler		1065653	1					
ANR	1066084	Argument	compiler		1065653	0					
ANR	1066085	Identifier	compiler		1065653	0					
ANR	1066086	Argument	DR ( sugg_src2_r )		1065653	1					
ANR	1066087	CallExpression	DR ( sugg_src2_r )		1065653	0					
ANR	1066088	Callee	DR		1065653	0					
ANR	1066089	Identifier	DR		1065653	0					
ANR	1066090	ArgumentList	sugg_src2_r		1065653	1					
ANR	1066091	Argument	sugg_src2_r		1065653	0					
ANR	1066092	Identifier	sugg_src2_r		1065653	0					
ANR	1066093	Argument	src2w		1065653	2					
ANR	1066094	Identifier	src2w		1065653	0					
ANR	1066095	ExpressionStatement	src2_r = sugg_src2_r	986:4:32253:32273	1065653	1	True				
ANR	1066096	AssignmentExpression	src2_r = sugg_src2_r		1065653	0		=			
ANR	1066097	Identifier	src2_r		1065653	0					
ANR	1066098	Identifier	sugg_src2_r		1065653	1					
ANR	1066099	ElseStatement	else		1065653	0					
ANR	1066100	CompoundStatement		88:8:2249:2249	1065653	0					
ANR	1066101	ExpressionStatement	src2_r = 0	989:4:32294:32304	1065653	0	True				
ANR	1066102	AssignmentExpression	src2_r = 0		1065653	0		=			
ANR	1066103	Identifier	src2_r		1065653	0					
ANR	1066104	PrimaryExpression	0		1065653	1					
ANR	1066105	IfStatement	if ( ( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI ) && ( dst & SLJIT_MEM ) )		1065653	1					
ANR	1066106	Condition	( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI ) && ( dst & SLJIT_MEM )	990:8:32314:32374	1065653	0	True				
ANR	1066107	AndExpression	( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI ) && ( dst & SLJIT_MEM )		1065653	0		&&			
ANR	1066108	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI		1065653	0		&&			
ANR	1066109	RelationalExpression	op >= SLJIT_MOV		1065653	0		>=			
ANR	1066110	Identifier	op		1065653	0					
ANR	1066111	Identifier	SLJIT_MOV		1065653	1					
ANR	1066112	RelationalExpression	op <= SLJIT_MOVU_SI		1065653	1		<=			
ANR	1066113	Identifier	op		1065653	0					
ANR	1066114	Identifier	SLJIT_MOVU_SI		1065653	1					
ANR	1066115	BitAndExpression	dst & SLJIT_MEM		1065653	1		&			
ANR	1066116	Identifier	dst		1065653	0					
ANR	1066117	Identifier	SLJIT_MEM		1065653	1					
ANR	1066118	ExpressionStatement	dst_r = 0	991:5:32382:32391	1065653	1	True				
ANR	1066119	AssignmentExpression	dst_r = 0		1065653	0		=			
ANR	1066120	Identifier	dst_r		1065653	0					
ANR	1066121	PrimaryExpression	0		1065653	1					
ANR	1066122	ElseStatement	else		1065653	0					
ANR	1066123	CompoundStatement		95:6:2372:2372	1065653	0					
ANR	1066124	IfStatement	"if ( getput_arg_fast ( compiler , flags | LOAD_DATA , DR ( sugg_src2_r ) , src2 , src2w ) )"		1065653	0					
ANR	1066125	Condition	"getput_arg_fast ( compiler , flags | LOAD_DATA , DR ( sugg_src2_r ) , src2 , src2w )"	996:6:32419:32492	1065653	0	True				
ANR	1066126	CallExpression	"getput_arg_fast ( compiler , flags | LOAD_DATA , DR ( sugg_src2_r ) , src2 , src2w )"		1065653	0					
ANR	1066127	Callee	getput_arg_fast		1065653	0					
ANR	1066128	Identifier	getput_arg_fast		1065653	0					
ANR	1066129	ArgumentList	compiler		1065653	1					
ANR	1066130	Argument	compiler		1065653	0					
ANR	1066131	Identifier	compiler		1065653	0					
ANR	1066132	Argument	flags | LOAD_DATA		1065653	1					
ANR	1066133	InclusiveOrExpression	flags | LOAD_DATA		1065653	0		|			
ANR	1066134	Identifier	flags		1065653	0					
ANR	1066135	Identifier	LOAD_DATA		1065653	1					
ANR	1066136	Argument	DR ( sugg_src2_r )		1065653	2					
ANR	1066137	CallExpression	DR ( sugg_src2_r )		1065653	0					
ANR	1066138	Callee	DR		1065653	0					
ANR	1066139	Identifier	DR		1065653	0					
ANR	1066140	ArgumentList	sugg_src2_r		1065653	1					
ANR	1066141	Argument	sugg_src2_r		1065653	0					
ANR	1066142	Identifier	sugg_src2_r		1065653	0					
ANR	1066143	Argument	src2		1065653	3					
ANR	1066144	Identifier	src2		1065653	0					
ANR	1066145	Argument	src2w		1065653	4					
ANR	1066146	Identifier	src2w		1065653	0					
ANR	1066147	ExpressionStatement	FAIL_IF ( compiler -> error )	997:3:32498:32522	1065653	1	True				
ANR	1066148	CallExpression	FAIL_IF ( compiler -> error )		1065653	0					
ANR	1066149	Callee	FAIL_IF		1065653	0					
ANR	1066150	Identifier	FAIL_IF		1065653	0					
ANR	1066151	ArgumentList	compiler -> error		1065653	1					
ANR	1066152	Argument	compiler -> error		1065653	0					
ANR	1066153	PtrMemberAccess	compiler -> error		1065653	0					
ANR	1066154	Identifier	compiler		1065653	0					
ANR	1066155	Identifier	error		1065653	1					
ANR	1066156	ElseStatement	else		1065653	0					
ANR	1066157	ExpressionStatement	flags |= SLOW_SRC2	999:3:32534:32552	1065653	0	True				
ANR	1066158	AssignmentExpression	flags |= SLOW_SRC2		1065653	0		|=			
ANR	1066159	Identifier	flags		1065653	0					
ANR	1066160	Identifier	SLOW_SRC2		1065653	1					
ANR	1066161	ExpressionStatement	src2_r = sugg_src2_r	1000:2:32556:32576	1065653	1	True				
ANR	1066162	AssignmentExpression	src2_r = sugg_src2_r		1065653	0		=			
ANR	1066163	Identifier	src2_r		1065653	0					
ANR	1066164	Identifier	sugg_src2_r		1065653	1					
ANR	1066165	IfStatement	if ( ( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 ) )		1065653	9					
ANR	1066166	Condition	( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 )	1003:5:32587:32646	1065653	0	True				
ANR	1066167	EqualityExpression	( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 )		1065653	0		==			
ANR	1066168	BitAndExpression	flags & ( SLOW_SRC1 | SLOW_SRC2 )		1065653	0		&			
ANR	1066169	Identifier	flags		1065653	0					
ANR	1066170	InclusiveOrExpression	SLOW_SRC1 | SLOW_SRC2		1065653	1		|			
ANR	1066171	Identifier	SLOW_SRC1		1065653	0					
ANR	1066172	Identifier	SLOW_SRC2		1065653	1					
ANR	1066173	InclusiveOrExpression	SLOW_SRC1 | SLOW_SRC2		1065653	1		|			
ANR	1066174	Identifier	SLOW_SRC1		1065653	0					
ANR	1066175	Identifier	SLOW_SRC2		1065653	1					
ANR	1066176	CompoundStatement		103:67:2610:2610	1065653	1					
ANR	1066177	ExpressionStatement	SLJIT_ASSERT ( src2_r == TMP_REG2 )	1004:2:32653:32685	1065653	0	True				
ANR	1066178	CallExpression	SLJIT_ASSERT ( src2_r == TMP_REG2 )		1065653	0					
ANR	1066179	Callee	SLJIT_ASSERT		1065653	0					
ANR	1066180	Identifier	SLJIT_ASSERT		1065653	0					
ANR	1066181	ArgumentList	src2_r == TMP_REG2		1065653	1					
ANR	1066182	Argument	src2_r == TMP_REG2		1065653	0					
ANR	1066183	EqualityExpression	src2_r == TMP_REG2		1065653	0		==			
ANR	1066184	Identifier	src2_r		1065653	0					
ANR	1066185	Identifier	TMP_REG2		1065653	1					
ANR	1066186	IfStatement	"if ( ! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw ) )"		1065653	1					
ANR	1066187	Condition	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"	1005:6:32693:32765	1065653	0	True				
ANR	1066188	AndExpression	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"		1065653	0		&&			
ANR	1066189	UnaryOperationExpression	"! can_cache ( src1 , src1w , src2 , src2w )"		1065653	0					
ANR	1066190	UnaryOperator	!		1065653	0					
ANR	1066191	CallExpression	"can_cache ( src1 , src1w , src2 , src2w )"		1065653	1					
ANR	1066192	Callee	can_cache		1065653	0					
ANR	1066193	Identifier	can_cache		1065653	0					
ANR	1066194	ArgumentList	src1		1065653	1					
ANR	1066195	Argument	src1		1065653	0					
ANR	1066196	Identifier	src1		1065653	0					
ANR	1066197	Argument	src1w		1065653	1					
ANR	1066198	Identifier	src1w		1065653	0					
ANR	1066199	Argument	src2		1065653	2					
ANR	1066200	Identifier	src2		1065653	0					
ANR	1066201	Argument	src2w		1065653	3					
ANR	1066202	Identifier	src2w		1065653	0					
ANR	1066203	CallExpression	"can_cache ( src1 , src1w , dst , dstw )"		1065653	1					
ANR	1066204	Callee	can_cache		1065653	0					
ANR	1066205	Identifier	can_cache		1065653	0					
ANR	1066206	ArgumentList	src1		1065653	1					
ANR	1066207	Argument	src1		1065653	0					
ANR	1066208	Identifier	src1		1065653	0					
ANR	1066209	Argument	src1w		1065653	1					
ANR	1066210	Identifier	src1w		1065653	0					
ANR	1066211	Argument	dst		1065653	2					
ANR	1066212	Identifier	dst		1065653	0					
ANR	1066213	Argument	dstw		1065653	3					
ANR	1066214	Identifier	dstw		1065653	0					
ANR	1066215	CompoundStatement		105:81:2729:2729	1065653	1					
ANR	1066216	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG2 ) , src2 , src2w , src1 , src1w ) )"	1006:3:32773:32861	1065653	0	True				
ANR	1066217	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG2 ) , src2 , src2w , src1 , src1w ) )"		1065653	0					
ANR	1066218	Callee	FAIL_IF		1065653	0					
ANR	1066219	Identifier	FAIL_IF		1065653	0					
ANR	1066220	ArgumentList	"getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG2 ) , src2 , src2w , src1 , src1w )"		1065653	1					
ANR	1066221	Argument	"getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG2 ) , src2 , src2w , src1 , src1w )"		1065653	0					
ANR	1066222	CallExpression	"getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG2 ) , src2 , src2w , src1 , src1w )"		1065653	0					
ANR	1066223	Callee	getput_arg		1065653	0					
ANR	1066224	Identifier	getput_arg		1065653	0					
ANR	1066225	ArgumentList	compiler		1065653	1					
ANR	1066226	Argument	compiler		1065653	0					
ANR	1066227	Identifier	compiler		1065653	0					
ANR	1066228	Argument	flags | LOAD_DATA		1065653	1					
ANR	1066229	InclusiveOrExpression	flags | LOAD_DATA		1065653	0		|			
ANR	1066230	Identifier	flags		1065653	0					
ANR	1066231	Identifier	LOAD_DATA		1065653	1					
ANR	1066232	Argument	DR ( TMP_REG2 )		1065653	2					
ANR	1066233	CallExpression	DR ( TMP_REG2 )		1065653	0					
ANR	1066234	Callee	DR		1065653	0					
ANR	1066235	Identifier	DR		1065653	0					
ANR	1066236	ArgumentList	TMP_REG2		1065653	1					
ANR	1066237	Argument	TMP_REG2		1065653	0					
ANR	1066238	Identifier	TMP_REG2		1065653	0					
ANR	1066239	Argument	src2		1065653	3					
ANR	1066240	Identifier	src2		1065653	0					
ANR	1066241	Argument	src2w		1065653	4					
ANR	1066242	Identifier	src2w		1065653	0					
ANR	1066243	Argument	src1		1065653	5					
ANR	1066244	Identifier	src1		1065653	0					
ANR	1066245	Argument	src1w		1065653	6					
ANR	1066246	Identifier	src1w		1065653	0					
ANR	1066247	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG1 ) , src1 , src1w , dst , dstw ) )"	1007:3:32866:32952	1065653	1	True				
ANR	1066248	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG1 ) , src1 , src1w , dst , dstw ) )"		1065653	0					
ANR	1066249	Callee	FAIL_IF		1065653	0					
ANR	1066250	Identifier	FAIL_IF		1065653	0					
ANR	1066251	ArgumentList	"getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG1 ) , src1 , src1w , dst , dstw )"		1065653	1					
ANR	1066252	Argument	"getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG1 ) , src1 , src1w , dst , dstw )"		1065653	0					
ANR	1066253	CallExpression	"getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG1 ) , src1 , src1w , dst , dstw )"		1065653	0					
ANR	1066254	Callee	getput_arg		1065653	0					
ANR	1066255	Identifier	getput_arg		1065653	0					
ANR	1066256	ArgumentList	compiler		1065653	1					
ANR	1066257	Argument	compiler		1065653	0					
ANR	1066258	Identifier	compiler		1065653	0					
ANR	1066259	Argument	flags | LOAD_DATA		1065653	1					
ANR	1066260	InclusiveOrExpression	flags | LOAD_DATA		1065653	0		|			
ANR	1066261	Identifier	flags		1065653	0					
ANR	1066262	Identifier	LOAD_DATA		1065653	1					
ANR	1066263	Argument	DR ( TMP_REG1 )		1065653	2					
ANR	1066264	CallExpression	DR ( TMP_REG1 )		1065653	0					
ANR	1066265	Callee	DR		1065653	0					
ANR	1066266	Identifier	DR		1065653	0					
ANR	1066267	ArgumentList	TMP_REG1		1065653	1					
ANR	1066268	Argument	TMP_REG1		1065653	0					
ANR	1066269	Identifier	TMP_REG1		1065653	0					
ANR	1066270	Argument	src1		1065653	3					
ANR	1066271	Identifier	src1		1065653	0					
ANR	1066272	Argument	src1w		1065653	4					
ANR	1066273	Identifier	src1w		1065653	0					
ANR	1066274	Argument	dst		1065653	5					
ANR	1066275	Identifier	dst		1065653	0					
ANR	1066276	Argument	dstw		1065653	6					
ANR	1066277	Identifier	dstw		1065653	0					
ANR	1066278	ElseStatement	else		1065653	0					
ANR	1066279	CompoundStatement		109:7:2926:2926	1065653	0					
ANR	1066280	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG1 ) , src1 , src1w , src2 , src2w ) )"	1010:3:32970:33058	1065653	0	True				
ANR	1066281	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG1 ) , src1 , src1w , src2 , src2w ) )"		1065653	0					
ANR	1066282	Callee	FAIL_IF		1065653	0					
ANR	1066283	Identifier	FAIL_IF		1065653	0					
ANR	1066284	ArgumentList	"getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG1 ) , src1 , src1w , src2 , src2w )"		1065653	1					
ANR	1066285	Argument	"getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG1 ) , src1 , src1w , src2 , src2w )"		1065653	0					
ANR	1066286	CallExpression	"getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG1 ) , src1 , src1w , src2 , src2w )"		1065653	0					
ANR	1066287	Callee	getput_arg		1065653	0					
ANR	1066288	Identifier	getput_arg		1065653	0					
ANR	1066289	ArgumentList	compiler		1065653	1					
ANR	1066290	Argument	compiler		1065653	0					
ANR	1066291	Identifier	compiler		1065653	0					
ANR	1066292	Argument	flags | LOAD_DATA		1065653	1					
ANR	1066293	InclusiveOrExpression	flags | LOAD_DATA		1065653	0		|			
ANR	1066294	Identifier	flags		1065653	0					
ANR	1066295	Identifier	LOAD_DATA		1065653	1					
ANR	1066296	Argument	DR ( TMP_REG1 )		1065653	2					
ANR	1066297	CallExpression	DR ( TMP_REG1 )		1065653	0					
ANR	1066298	Callee	DR		1065653	0					
ANR	1066299	Identifier	DR		1065653	0					
ANR	1066300	ArgumentList	TMP_REG1		1065653	1					
ANR	1066301	Argument	TMP_REG1		1065653	0					
ANR	1066302	Identifier	TMP_REG1		1065653	0					
ANR	1066303	Argument	src1		1065653	3					
ANR	1066304	Identifier	src1		1065653	0					
ANR	1066305	Argument	src1w		1065653	4					
ANR	1066306	Identifier	src1w		1065653	0					
ANR	1066307	Argument	src2		1065653	5					
ANR	1066308	Identifier	src2		1065653	0					
ANR	1066309	Argument	src2w		1065653	6					
ANR	1066310	Identifier	src2w		1065653	0					
ANR	1066311	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG2 ) , src2 , src2w , dst , dstw ) )"	1011:3:33063:33149	1065653	1	True				
ANR	1066312	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG2 ) , src2 , src2w , dst , dstw ) )"		1065653	0					
ANR	1066313	Callee	FAIL_IF		1065653	0					
ANR	1066314	Identifier	FAIL_IF		1065653	0					
ANR	1066315	ArgumentList	"getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG2 ) , src2 , src2w , dst , dstw )"		1065653	1					
ANR	1066316	Argument	"getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG2 ) , src2 , src2w , dst , dstw )"		1065653	0					
ANR	1066317	CallExpression	"getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG2 ) , src2 , src2w , dst , dstw )"		1065653	0					
ANR	1066318	Callee	getput_arg		1065653	0					
ANR	1066319	Identifier	getput_arg		1065653	0					
ANR	1066320	ArgumentList	compiler		1065653	1					
ANR	1066321	Argument	compiler		1065653	0					
ANR	1066322	Identifier	compiler		1065653	0					
ANR	1066323	Argument	flags | LOAD_DATA		1065653	1					
ANR	1066324	InclusiveOrExpression	flags | LOAD_DATA		1065653	0		|			
ANR	1066325	Identifier	flags		1065653	0					
ANR	1066326	Identifier	LOAD_DATA		1065653	1					
ANR	1066327	Argument	DR ( TMP_REG2 )		1065653	2					
ANR	1066328	CallExpression	DR ( TMP_REG2 )		1065653	0					
ANR	1066329	Callee	DR		1065653	0					
ANR	1066330	Identifier	DR		1065653	0					
ANR	1066331	ArgumentList	TMP_REG2		1065653	1					
ANR	1066332	Argument	TMP_REG2		1065653	0					
ANR	1066333	Identifier	TMP_REG2		1065653	0					
ANR	1066334	Argument	src2		1065653	3					
ANR	1066335	Identifier	src2		1065653	0					
ANR	1066336	Argument	src2w		1065653	4					
ANR	1066337	Identifier	src2w		1065653	0					
ANR	1066338	Argument	dst		1065653	5					
ANR	1066339	Identifier	dst		1065653	0					
ANR	1066340	Argument	dstw		1065653	6					
ANR	1066341	Identifier	dstw		1065653	0					
ANR	1066342	ElseStatement	else		1065653	0					
ANR	1066343	IfStatement	if ( flags & SLOW_SRC1 )		1065653	0					
ANR	1066344	Condition	flags & SLOW_SRC1	1014:10:33168:33184	1065653	0	True				
ANR	1066345	BitAndExpression	flags & SLOW_SRC1		1065653	0		&			
ANR	1066346	Identifier	flags		1065653	0					
ANR	1066347	Identifier	SLOW_SRC1		1065653	1					
ANR	1066348	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG1 ) , src1 , src1w , dst , dstw ) )"	1015:2:33189:33275	1065653	1	True				
ANR	1066349	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG1 ) , src1 , src1w , dst , dstw ) )"		1065653	0					
ANR	1066350	Callee	FAIL_IF		1065653	0					
ANR	1066351	Identifier	FAIL_IF		1065653	0					
ANR	1066352	ArgumentList	"getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG1 ) , src1 , src1w , dst , dstw )"		1065653	1					
ANR	1066353	Argument	"getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG1 ) , src1 , src1w , dst , dstw )"		1065653	0					
ANR	1066354	CallExpression	"getput_arg ( compiler , flags | LOAD_DATA , DR ( TMP_REG1 ) , src1 , src1w , dst , dstw )"		1065653	0					
ANR	1066355	Callee	getput_arg		1065653	0					
ANR	1066356	Identifier	getput_arg		1065653	0					
ANR	1066357	ArgumentList	compiler		1065653	1					
ANR	1066358	Argument	compiler		1065653	0					
ANR	1066359	Identifier	compiler		1065653	0					
ANR	1066360	Argument	flags | LOAD_DATA		1065653	1					
ANR	1066361	InclusiveOrExpression	flags | LOAD_DATA		1065653	0		|			
ANR	1066362	Identifier	flags		1065653	0					
ANR	1066363	Identifier	LOAD_DATA		1065653	1					
ANR	1066364	Argument	DR ( TMP_REG1 )		1065653	2					
ANR	1066365	CallExpression	DR ( TMP_REG1 )		1065653	0					
ANR	1066366	Callee	DR		1065653	0					
ANR	1066367	Identifier	DR		1065653	0					
ANR	1066368	ArgumentList	TMP_REG1		1065653	1					
ANR	1066369	Argument	TMP_REG1		1065653	0					
ANR	1066370	Identifier	TMP_REG1		1065653	0					
ANR	1066371	Argument	src1		1065653	3					
ANR	1066372	Identifier	src1		1065653	0					
ANR	1066373	Argument	src1w		1065653	4					
ANR	1066374	Identifier	src1w		1065653	0					
ANR	1066375	Argument	dst		1065653	5					
ANR	1066376	Identifier	dst		1065653	0					
ANR	1066377	Argument	dstw		1065653	6					
ANR	1066378	Identifier	dstw		1065653	0					
ANR	1066379	ElseStatement	else		1065653	0					
ANR	1066380	IfStatement	if ( flags & SLOW_SRC2 )		1065653	0					
ANR	1066381	Condition	flags & SLOW_SRC2	1016:10:33287:33303	1065653	0	True				
ANR	1066382	BitAndExpression	flags & SLOW_SRC2		1065653	0		&			
ANR	1066383	Identifier	flags		1065653	0					
ANR	1066384	Identifier	SLOW_SRC2		1065653	1					
ANR	1066385	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , DR ( sugg_src2_r ) , src2 , src2w , dst , dstw ) )"	1017:2:33308:33397	1065653	1	True				
ANR	1066386	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , DR ( sugg_src2_r ) , src2 , src2w , dst , dstw ) )"		1065653	0					
ANR	1066387	Callee	FAIL_IF		1065653	0					
ANR	1066388	Identifier	FAIL_IF		1065653	0					
ANR	1066389	ArgumentList	"getput_arg ( compiler , flags | LOAD_DATA , DR ( sugg_src2_r ) , src2 , src2w , dst , dstw )"		1065653	1					
ANR	1066390	Argument	"getput_arg ( compiler , flags | LOAD_DATA , DR ( sugg_src2_r ) , src2 , src2w , dst , dstw )"		1065653	0					
ANR	1066391	CallExpression	"getput_arg ( compiler , flags | LOAD_DATA , DR ( sugg_src2_r ) , src2 , src2w , dst , dstw )"		1065653	0					
ANR	1066392	Callee	getput_arg		1065653	0					
ANR	1066393	Identifier	getput_arg		1065653	0					
ANR	1066394	ArgumentList	compiler		1065653	1					
ANR	1066395	Argument	compiler		1065653	0					
ANR	1066396	Identifier	compiler		1065653	0					
ANR	1066397	Argument	flags | LOAD_DATA		1065653	1					
ANR	1066398	InclusiveOrExpression	flags | LOAD_DATA		1065653	0		|			
ANR	1066399	Identifier	flags		1065653	0					
ANR	1066400	Identifier	LOAD_DATA		1065653	1					
ANR	1066401	Argument	DR ( sugg_src2_r )		1065653	2					
ANR	1066402	CallExpression	DR ( sugg_src2_r )		1065653	0					
ANR	1066403	Callee	DR		1065653	0					
ANR	1066404	Identifier	DR		1065653	0					
ANR	1066405	ArgumentList	sugg_src2_r		1065653	1					
ANR	1066406	Argument	sugg_src2_r		1065653	0					
ANR	1066407	Identifier	sugg_src2_r		1065653	0					
ANR	1066408	Argument	src2		1065653	3					
ANR	1066409	Identifier	src2		1065653	0					
ANR	1066410	Argument	src2w		1065653	4					
ANR	1066411	Identifier	src2w		1065653	0					
ANR	1066412	Argument	dst		1065653	5					
ANR	1066413	Identifier	dst		1065653	0					
ANR	1066414	Argument	dstw		1065653	6					
ANR	1066415	Identifier	dstw		1065653	0					
ANR	1066416	ExpressionStatement	"FAIL_IF ( emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r ) )"	1019:1:33401:33468	1065653	10	True				
ANR	1066417	CallExpression	"FAIL_IF ( emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r ) )"		1065653	0					
ANR	1066418	Callee	FAIL_IF		1065653	0					
ANR	1066419	Identifier	FAIL_IF		1065653	0					
ANR	1066420	ArgumentList	"emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r )"		1065653	1					
ANR	1066421	Argument	"emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r )"		1065653	0					
ANR	1066422	CallExpression	"emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r )"		1065653	0					
ANR	1066423	Callee	emit_single_op		1065653	0					
ANR	1066424	Identifier	emit_single_op		1065653	0					
ANR	1066425	ArgumentList	compiler		1065653	1					
ANR	1066426	Argument	compiler		1065653	0					
ANR	1066427	Identifier	compiler		1065653	0					
ANR	1066428	Argument	op		1065653	1					
ANR	1066429	Identifier	op		1065653	0					
ANR	1066430	Argument	flags		1065653	2					
ANR	1066431	Identifier	flags		1065653	0					
ANR	1066432	Argument	dst_r		1065653	3					
ANR	1066433	Identifier	dst_r		1065653	0					
ANR	1066434	Argument	src1_r		1065653	4					
ANR	1066435	Identifier	src1_r		1065653	0					
ANR	1066436	Argument	src2_r		1065653	5					
ANR	1066437	Identifier	src2_r		1065653	0					
ANR	1066438	IfStatement	if ( dst & SLJIT_MEM )		1065653	11					
ANR	1066439	Condition	dst & SLJIT_MEM	1021:5:33476:33490	1065653	0	True				
ANR	1066440	BitAndExpression	dst & SLJIT_MEM		1065653	0		&			
ANR	1066441	Identifier	dst		1065653	0					
ANR	1066442	Identifier	SLJIT_MEM		1065653	1					
ANR	1066443	CompoundStatement		121:22:3454:3454	1065653	1					
ANR	1066444	IfStatement	if ( ! ( flags & SLOW_DEST ) )		1065653	0					
ANR	1066445	Condition	! ( flags & SLOW_DEST )	1022:6:33501:33520	1065653	0	True				
ANR	1066446	UnaryOperationExpression	! ( flags & SLOW_DEST )		1065653	0					
ANR	1066447	UnaryOperator	!		1065653	0					
ANR	1066448	BitAndExpression	flags & SLOW_DEST		1065653	1		&			
ANR	1066449	Identifier	flags		1065653	0					
ANR	1066450	Identifier	SLOW_DEST		1065653	1					
ANR	1066451	CompoundStatement		122:28:3484:3484	1065653	1					
ANR	1066452	ExpressionStatement	"getput_arg_fast ( compiler , flags , DR ( dst_r ) , dst , dstw )"	1023:3:33528:33582	1065653	0	True				
ANR	1066453	CallExpression	"getput_arg_fast ( compiler , flags , DR ( dst_r ) , dst , dstw )"		1065653	0					
ANR	1066454	Callee	getput_arg_fast		1065653	0					
ANR	1066455	Identifier	getput_arg_fast		1065653	0					
ANR	1066456	ArgumentList	compiler		1065653	1					
ANR	1066457	Argument	compiler		1065653	0					
ANR	1066458	Identifier	compiler		1065653	0					
ANR	1066459	Argument	flags		1065653	1					
ANR	1066460	Identifier	flags		1065653	0					
ANR	1066461	Argument	DR ( dst_r )		1065653	2					
ANR	1066462	CallExpression	DR ( dst_r )		1065653	0					
ANR	1066463	Callee	DR		1065653	0					
ANR	1066464	Identifier	DR		1065653	0					
ANR	1066465	ArgumentList	dst_r		1065653	1					
ANR	1066466	Argument	dst_r		1065653	0					
ANR	1066467	Identifier	dst_r		1065653	0					
ANR	1066468	Argument	dst		1065653	3					
ANR	1066469	Identifier	dst		1065653	0					
ANR	1066470	Argument	dstw		1065653	4					
ANR	1066471	Identifier	dstw		1065653	0					
ANR	1066472	ReturnStatement	return compiler -> error ;	1024:3:33587:33609	1065653	1	True				
ANR	1066473	PtrMemberAccess	compiler -> error		1065653	0					
ANR	1066474	Identifier	compiler		1065653	0					
ANR	1066475	Identifier	error		1065653	1					
ANR	1066476	ReturnStatement	"return getput_arg ( compiler , flags , DR ( dst_r ) , dst , dstw , 0 , 0 ) ;"	1026:2:33617:33679	1065653	1	True				
ANR	1066477	CallExpression	"getput_arg ( compiler , flags , DR ( dst_r ) , dst , dstw , 0 , 0 )"		1065653	0					
ANR	1066478	Callee	getput_arg		1065653	0					
ANR	1066479	Identifier	getput_arg		1065653	0					
ANR	1066480	ArgumentList	compiler		1065653	1					
ANR	1066481	Argument	compiler		1065653	0					
ANR	1066482	Identifier	compiler		1065653	0					
ANR	1066483	Argument	flags		1065653	1					
ANR	1066484	Identifier	flags		1065653	0					
ANR	1066485	Argument	DR ( dst_r )		1065653	2					
ANR	1066486	CallExpression	DR ( dst_r )		1065653	0					
ANR	1066487	Callee	DR		1065653	0					
ANR	1066488	Identifier	DR		1065653	0					
ANR	1066489	ArgumentList	dst_r		1065653	1					
ANR	1066490	Argument	dst_r		1065653	0					
ANR	1066491	Identifier	dst_r		1065653	0					
ANR	1066492	Argument	dst		1065653	3					
ANR	1066493	Identifier	dst		1065653	0					
ANR	1066494	Argument	dstw		1065653	4					
ANR	1066495	Identifier	dstw		1065653	0					
ANR	1066496	Argument	0		1065653	5					
ANR	1066497	PrimaryExpression	0		1065653	0					
ANR	1066498	Argument	0		1065653	6					
ANR	1066499	PrimaryExpression	0		1065653	0					
ANR	1066500	ReturnStatement	return SLJIT_SUCCESS ;	1029:1:33686:33706	1065653	12	True				
ANR	1066501	Identifier	SLJIT_SUCCESS		1065653	0					
ANR	1066502	ReturnType	static sljit_si		1065653	1					
ANR	1066503	Identifier	emit_op		1065653	2					
ANR	1066504	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si flags , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1065653	3					
ANR	1066505	Parameter	struct sljit_compiler * compiler	897:24:29882:29912	1065653	0	True				
ANR	1066506	ParameterType	struct sljit_compiler *		1065653	0					
ANR	1066507	Identifier	compiler		1065653	1					
ANR	1066508	Parameter	sljit_si op	897:57:29915:29925	1065653	1	True				
ANR	1066509	ParameterType	sljit_si		1065653	0					
ANR	1066510	Identifier	op		1065653	1					
ANR	1066511	Parameter	sljit_si flags	897:70:29928:29941	1065653	2	True				
ANR	1066512	ParameterType	sljit_si		1065653	0					
ANR	1066513	Identifier	flags		1065653	1					
ANR	1066514	Parameter	sljit_si dst	898:1:29945:29956	1065653	3	True				
ANR	1066515	ParameterType	sljit_si		1065653	0					
ANR	1066516	Identifier	dst		1065653	1					
ANR	1066517	Parameter	sljit_sw dstw	898:15:29959:29971	1065653	4	True				
ANR	1066518	ParameterType	sljit_sw		1065653	0					
ANR	1066519	Identifier	dstw		1065653	1					
ANR	1066520	Parameter	sljit_si src1	899:1:29975:29987	1065653	5	True				
ANR	1066521	ParameterType	sljit_si		1065653	0					
ANR	1066522	Identifier	src1		1065653	1					
ANR	1066523	Parameter	sljit_sw src1w	899:16:29990:30003	1065653	6	True				
ANR	1066524	ParameterType	sljit_sw		1065653	0					
ANR	1066525	Identifier	src1w		1065653	1					
ANR	1066526	Parameter	sljit_si src2	900:1:30007:30019	1065653	7	True				
ANR	1066527	ParameterType	sljit_si		1065653	0					
ANR	1066528	Identifier	src2		1065653	1					
ANR	1066529	Parameter	sljit_sw src2w	900:16:30022:30035	1065653	8	True				
ANR	1066530	ParameterType	sljit_sw		1065653	0					
ANR	1066531	Identifier	src2w		1065653	1					
ANR	1066532	CFGEntryNode	ENTRY		1065653		True				
ANR	1066533	CFGExitNode	EXIT		1065653		True				
ANR	1066534	Symbol	SLOW_SRC2		1065653						
ANR	1066535	Symbol	TMP_REG2		1065653						
ANR	1066536	Symbol	TMP_REG1		1065653						
ANR	1066537	Symbol	SLJIT_MEM		1065653						
ANR	1066538	Symbol	SLOW_SRC1		1065653						
ANR	1066539	Symbol	SLJIT_MOVU_SI		1065653						
ANR	1066540	Symbol	* compiler		1065653						
ANR	1066541	Symbol	SIMM_MAX		1065653						
ANR	1066542	Symbol	DR		1065653						
ANR	1066543	Symbol	ARG_TEST		1065653						
ANR	1066544	Symbol	SLJIT_IMM		1065653						
ANR	1066545	Symbol	getput_arg		1065653						
ANR	1066546	Symbol	UNUSED_DEST		1065653						
ANR	1066547	Symbol	SIMM_MIN		1065653						
ANR	1066548	Symbol	can_cache		1065653						
ANR	1066549	Symbol	FAST_IS_REG		1065653						
ANR	1066550	Symbol	compiler -> cache_arg		1065653						
ANR	1066551	Symbol	REG2_SOURCE		1065653						
ANR	1066552	Symbol	src1_r		1065653						
ANR	1066553	Symbol	emit_single_op		1065653						
ANR	1066554	Symbol	REG_DEST		1065653						
ANR	1066555	Symbol	getput_arg_fast		1065653						
ANR	1066556	Symbol	SLJIT_UNLIKELY		1065653						
ANR	1066557	Symbol	compiler -> cache_argw		1065653						
ANR	1066558	Symbol	src1w		1065653						
ANR	1066559	Symbol	dst		1065653						
ANR	1066560	Symbol	IMM_OP		1065653						
ANR	1066561	Symbol	LOAD_DATA		1065653						
ANR	1066562	Symbol	SLJIT_MOV		1065653						
ANR	1066563	Symbol	SLOW_DEST		1065653						
ANR	1066564	Symbol	CUMULATIVE_OP		1065653						
ANR	1066565	Symbol	flags		1065653						
ANR	1066566	Symbol	sugg_src2_r		1065653						
ANR	1066567	Symbol	dst_r		1065653						
ANR	1066568	Symbol	GET_FLAGS		1065653						
ANR	1066569	Symbol	load_immediate		1065653						
ANR	1066570	Symbol	SRC2_IMM		1065653						
ANR	1066571	Symbol	compiler		1065653						
ANR	1066572	Symbol	~UIMM_MAX		1065653						
ANR	1066573	Symbol	src2w		1065653						
ANR	1066574	Symbol	op		1065653						
ANR	1066575	Symbol	LOGICAL_OP		1065653						
ANR	1066576	Symbol	REG1_SOURCE		1065653						
ANR	1066577	Symbol	SLJIT_SUCCESS		1065653						
ANR	1066578	Symbol	src2_r		1065653						
ANR	1066579	Symbol	SLJIT_UNUSED		1065653						
ANR	1066580	Symbol	src1		1065653						
ANR	1066581	Symbol	src2		1065653						
ANR	1066582	Symbol	dstw		1065653						
ANR	1066583	Symbol	ALT_KEEP_CACHE		1065653						
ANR	1066584	Symbol	compiler -> error		1065653						
ANR	1066585	Function	sljit_emit_op0	1032:0:33711:35608							
ANR	1066586	FunctionDef	"sljit_emit_op0 (struct sljit_compiler * compiler , sljit_si op)"		1066585	0					
ANR	1066587	CompoundStatement		1033:0:33806:35608	1066585	0					
ANR	1066588	IdentifierDeclStatement	sljit_si int_op = op & SLJIT_INT_OP ;	1035:1:33868:33903	1066585	0	True				
ANR	1066589	IdentifierDecl	int_op = op & SLJIT_INT_OP		1066585	0					
ANR	1066590	IdentifierDeclType	sljit_si		1066585	0					
ANR	1066591	Identifier	int_op		1066585	1					
ANR	1066592	AssignmentExpression	int_op = op & SLJIT_INT_OP		1066585	2		=			
ANR	1066593	Identifier	int_op		1066585	0					
ANR	1066594	BitAndExpression	op & SLJIT_INT_OP		1066585	1		&			
ANR	1066595	Identifier	op		1066585	0					
ANR	1066596	Identifier	SLJIT_INT_OP		1066585	1					
ANR	1066597	ExpressionStatement	CHECK_ERROR ( )	1038:1:33914:33927	1066585	1	True				
ANR	1066598	CallExpression	CHECK_ERROR ( )		1066585	0					
ANR	1066599	Callee	CHECK_ERROR		1066585	0					
ANR	1066600	Identifier	CHECK_ERROR		1066585	0					
ANR	1066601	ArgumentList			1066585	1					
ANR	1066602	ExpressionStatement	"CHECK ( check_sljit_emit_op0 ( compiler , op ) )"	1039:1:33930:33971	1066585	2	True				
ANR	1066603	CallExpression	"CHECK ( check_sljit_emit_op0 ( compiler , op ) )"		1066585	0					
ANR	1066604	Callee	CHECK		1066585	0					
ANR	1066605	Identifier	CHECK		1066585	0					
ANR	1066606	ArgumentList	"check_sljit_emit_op0 ( compiler , op )"		1066585	1					
ANR	1066607	Argument	"check_sljit_emit_op0 ( compiler , op )"		1066585	0					
ANR	1066608	CallExpression	"check_sljit_emit_op0 ( compiler , op )"		1066585	0					
ANR	1066609	Callee	check_sljit_emit_op0		1066585	0					
ANR	1066610	Identifier	check_sljit_emit_op0		1066585	0					
ANR	1066611	ArgumentList	compiler		1066585	1					
ANR	1066612	Argument	compiler		1066585	0					
ANR	1066613	Identifier	compiler		1066585	0					
ANR	1066614	Argument	op		1066585	1					
ANR	1066615	Identifier	op		1066585	0					
ANR	1066616	ExpressionStatement	op = GET_OPCODE ( op )	1041:1:33975:33994	1066585	3	True				
ANR	1066617	AssignmentExpression	op = GET_OPCODE ( op )		1066585	0		=			
ANR	1066618	Identifier	op		1066585	0					
ANR	1066619	CallExpression	GET_OPCODE ( op )		1066585	1					
ANR	1066620	Callee	GET_OPCODE		1066585	0					
ANR	1066621	Identifier	GET_OPCODE		1066585	0					
ANR	1066622	ArgumentList	op		1066585	1					
ANR	1066623	Argument	op		1066585	0					
ANR	1066624	Identifier	op		1066585	0					
ANR	1066625	SwitchStatement	switch ( op )		1066585	4					
ANR	1066626	Condition	op	1042:9:34005:34006	1066585	0	True				
ANR	1066627	Identifier	op		1066585	0					
ANR	1066628	CompoundStatement		10:13:202:202	1066585	1					
ANR	1066629	Label	case SLJIT_BREAKPOINT :	1043:1:34012:34033	1066585	0	True				
ANR	1066630	Identifier	SLJIT_BREAKPOINT		1066585	0					
ANR	1066631	ReturnStatement	"return push_inst ( compiler , BREAK , UNMOVABLE_INS ) ;"	1044:2:34037:34085	1066585	1	True				
ANR	1066632	CallExpression	"push_inst ( compiler , BREAK , UNMOVABLE_INS )"		1066585	0					
ANR	1066633	Callee	push_inst		1066585	0					
ANR	1066634	Identifier	push_inst		1066585	0					
ANR	1066635	ArgumentList	compiler		1066585	1					
ANR	1066636	Argument	compiler		1066585	0					
ANR	1066637	Identifier	compiler		1066585	0					
ANR	1066638	Argument	BREAK		1066585	1					
ANR	1066639	Identifier	BREAK		1066585	0					
ANR	1066640	Argument	UNMOVABLE_INS		1066585	2					
ANR	1066641	Identifier	UNMOVABLE_INS		1066585	0					
ANR	1066642	Label	case SLJIT_NOP :	1045:1:34088:34102	1066585	2	True				
ANR	1066643	Identifier	SLJIT_NOP		1066585	0					
ANR	1066644	ReturnStatement	"return push_inst ( compiler , NOP , UNMOVABLE_INS ) ;"	1046:2:34106:34152	1066585	3	True				
ANR	1066645	CallExpression	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1066585	0					
ANR	1066646	Callee	push_inst		1066585	0					
ANR	1066647	Identifier	push_inst		1066585	0					
ANR	1066648	ArgumentList	compiler		1066585	1					
ANR	1066649	Argument	compiler		1066585	0					
ANR	1066650	Identifier	compiler		1066585	0					
ANR	1066651	Argument	NOP		1066585	1					
ANR	1066652	Identifier	NOP		1066585	0					
ANR	1066653	Argument	UNMOVABLE_INS		1066585	2					
ANR	1066654	Identifier	UNMOVABLE_INS		1066585	0					
ANR	1066655	Label	case SLJIT_LUMUL :	1047:1:34155:34171	1066585	4	True				
ANR	1066656	Identifier	SLJIT_LUMUL		1066585	0					
ANR	1066657	Label	case SLJIT_LSMUL :	1048:1:34174:34190	1066585	5	True				
ANR	1066658	Identifier	SLJIT_LSMUL		1066585	0					
ANR	1066659	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( op == SLJIT_LUMUL ? DMULTU : DMULT ) | S ( SLJIT_R0 ) | T ( SLJIT_R1 ) , MOVABLE_INS ) )"	1050:2:34253:34360	1066585	6	True				
ANR	1066660	CallExpression	"FAIL_IF ( push_inst ( compiler , ( op == SLJIT_LUMUL ? DMULTU : DMULT ) | S ( SLJIT_R0 ) | T ( SLJIT_R1 ) , MOVABLE_INS ) )"		1066585	0					
ANR	1066661	Callee	FAIL_IF		1066585	0					
ANR	1066662	Identifier	FAIL_IF		1066585	0					
ANR	1066663	ArgumentList	"push_inst ( compiler , ( op == SLJIT_LUMUL ? DMULTU : DMULT ) | S ( SLJIT_R0 ) | T ( SLJIT_R1 ) , MOVABLE_INS )"		1066585	1					
ANR	1066664	Argument	"push_inst ( compiler , ( op == SLJIT_LUMUL ? DMULTU : DMULT ) | S ( SLJIT_R0 ) | T ( SLJIT_R1 ) , MOVABLE_INS )"		1066585	0					
ANR	1066665	CallExpression	"push_inst ( compiler , ( op == SLJIT_LUMUL ? DMULTU : DMULT ) | S ( SLJIT_R0 ) | T ( SLJIT_R1 ) , MOVABLE_INS )"		1066585	0					
ANR	1066666	Callee	push_inst		1066585	0					
ANR	1066667	Identifier	push_inst		1066585	0					
ANR	1066668	ArgumentList	compiler		1066585	1					
ANR	1066669	Argument	compiler		1066585	0					
ANR	1066670	Identifier	compiler		1066585	0					
ANR	1066671	Argument	( op == SLJIT_LUMUL ? DMULTU : DMULT ) | S ( SLJIT_R0 ) | T ( SLJIT_R1 )		1066585	1					
ANR	1066672	InclusiveOrExpression	( op == SLJIT_LUMUL ? DMULTU : DMULT ) | S ( SLJIT_R0 ) | T ( SLJIT_R1 )		1066585	0		|			
ANR	1066673	ConditionalExpression	op == SLJIT_LUMUL ? DMULTU : DMULT		1066585	0					
ANR	1066674	Condition	op == SLJIT_LUMUL		1066585	0					
ANR	1066675	EqualityExpression	op == SLJIT_LUMUL		1066585	0		==			
ANR	1066676	Identifier	op		1066585	0					
ANR	1066677	Identifier	SLJIT_LUMUL		1066585	1					
ANR	1066678	Identifier	DMULTU		1066585	1					
ANR	1066679	Identifier	DMULT		1066585	2					
ANR	1066680	InclusiveOrExpression	S ( SLJIT_R0 ) | T ( SLJIT_R1 )		1066585	1		|			
ANR	1066681	CallExpression	S ( SLJIT_R0 )		1066585	0					
ANR	1066682	Callee	S		1066585	0					
ANR	1066683	Identifier	S		1066585	0					
ANR	1066684	ArgumentList	SLJIT_R0		1066585	1					
ANR	1066685	Argument	SLJIT_R0		1066585	0					
ANR	1066686	Identifier	SLJIT_R0		1066585	0					
ANR	1066687	CallExpression	T ( SLJIT_R1 )		1066585	1					
ANR	1066688	Callee	T		1066585	0					
ANR	1066689	Identifier	T		1066585	0					
ANR	1066690	ArgumentList	SLJIT_R1		1066585	1					
ANR	1066691	Argument	SLJIT_R1		1066585	0					
ANR	1066692	Identifier	SLJIT_R1		1066585	0					
ANR	1066693	Argument	MOVABLE_INS		1066585	2					
ANR	1066694	Identifier	MOVABLE_INS		1066585	0					
ANR	1066695	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MFLO | D ( SLJIT_R0 ) , DR ( SLJIT_R0 ) ) )"	1054:2:34486:34548	1066585	7	True				
ANR	1066696	CallExpression	"FAIL_IF ( push_inst ( compiler , MFLO | D ( SLJIT_R0 ) , DR ( SLJIT_R0 ) ) )"		1066585	0					
ANR	1066697	Callee	FAIL_IF		1066585	0					
ANR	1066698	Identifier	FAIL_IF		1066585	0					
ANR	1066699	ArgumentList	"push_inst ( compiler , MFLO | D ( SLJIT_R0 ) , DR ( SLJIT_R0 ) )"		1066585	1					
ANR	1066700	Argument	"push_inst ( compiler , MFLO | D ( SLJIT_R0 ) , DR ( SLJIT_R0 ) )"		1066585	0					
ANR	1066701	CallExpression	"push_inst ( compiler , MFLO | D ( SLJIT_R0 ) , DR ( SLJIT_R0 ) )"		1066585	0					
ANR	1066702	Callee	push_inst		1066585	0					
ANR	1066703	Identifier	push_inst		1066585	0					
ANR	1066704	ArgumentList	compiler		1066585	1					
ANR	1066705	Argument	compiler		1066585	0					
ANR	1066706	Identifier	compiler		1066585	0					
ANR	1066707	Argument	MFLO | D ( SLJIT_R0 )		1066585	1					
ANR	1066708	InclusiveOrExpression	MFLO | D ( SLJIT_R0 )		1066585	0		|			
ANR	1066709	Identifier	MFLO		1066585	0					
ANR	1066710	CallExpression	D ( SLJIT_R0 )		1066585	1					
ANR	1066711	Callee	D		1066585	0					
ANR	1066712	Identifier	D		1066585	0					
ANR	1066713	ArgumentList	SLJIT_R0		1066585	1					
ANR	1066714	Argument	SLJIT_R0		1066585	0					
ANR	1066715	Identifier	SLJIT_R0		1066585	0					
ANR	1066716	Argument	DR ( SLJIT_R0 )		1066585	2					
ANR	1066717	CallExpression	DR ( SLJIT_R0 )		1066585	0					
ANR	1066718	Callee	DR		1066585	0					
ANR	1066719	Identifier	DR		1066585	0					
ANR	1066720	ArgumentList	SLJIT_R0		1066585	1					
ANR	1066721	Argument	SLJIT_R0		1066585	0					
ANR	1066722	Identifier	SLJIT_R0		1066585	0					
ANR	1066723	ReturnStatement	"return push_inst ( compiler , MFHI | D ( SLJIT_R1 ) , DR ( SLJIT_R1 ) ) ;"	1055:2:34552:34612	1066585	8	True				
ANR	1066724	CallExpression	"push_inst ( compiler , MFHI | D ( SLJIT_R1 ) , DR ( SLJIT_R1 ) )"		1066585	0					
ANR	1066725	Callee	push_inst		1066585	0					
ANR	1066726	Identifier	push_inst		1066585	0					
ANR	1066727	ArgumentList	compiler		1066585	1					
ANR	1066728	Argument	compiler		1066585	0					
ANR	1066729	Identifier	compiler		1066585	0					
ANR	1066730	Argument	MFHI | D ( SLJIT_R1 )		1066585	1					
ANR	1066731	InclusiveOrExpression	MFHI | D ( SLJIT_R1 )		1066585	0		|			
ANR	1066732	Identifier	MFHI		1066585	0					
ANR	1066733	CallExpression	D ( SLJIT_R1 )		1066585	1					
ANR	1066734	Callee	D		1066585	0					
ANR	1066735	Identifier	D		1066585	0					
ANR	1066736	ArgumentList	SLJIT_R1		1066585	1					
ANR	1066737	Argument	SLJIT_R1		1066585	0					
ANR	1066738	Identifier	SLJIT_R1		1066585	0					
ANR	1066739	Argument	DR ( SLJIT_R1 )		1066585	2					
ANR	1066740	CallExpression	DR ( SLJIT_R1 )		1066585	0					
ANR	1066741	Callee	DR		1066585	0					
ANR	1066742	Identifier	DR		1066585	0					
ANR	1066743	ArgumentList	SLJIT_R1		1066585	1					
ANR	1066744	Argument	SLJIT_R1		1066585	0					
ANR	1066745	Identifier	SLJIT_R1		1066585	0					
ANR	1066746	Label	case SLJIT_UDIVMOD :	1056:1:34615:34633	1066585	9	True				
ANR	1066747	Identifier	SLJIT_UDIVMOD		1066585	0					
ANR	1066748	Label	case SLJIT_SDIVMOD :	1057:1:34636:34654	1066585	10	True				
ANR	1066749	Identifier	SLJIT_SDIVMOD		1066585	0					
ANR	1066750	Label	case SLJIT_UDIVI :	1058:1:34657:34673	1066585	11	True				
ANR	1066751	Identifier	SLJIT_UDIVI		1066585	0					
ANR	1066752	Label	case SLJIT_SDIVI :	1059:1:34676:34692	1066585	12	True				
ANR	1066753	Identifier	SLJIT_SDIVI		1066585	0					
ANR	1066754	ExpressionStatement	"SLJIT_COMPILE_ASSERT ( ( SLJIT_UDIVMOD & 0x2 ) == 0 && SLJIT_UDIVI - 0x2 == SLJIT_UDIVMOD , bad_div_opcode_assignments )"	1060:2:34696:34810	1066585	13	True				
ANR	1066755	CallExpression	"SLJIT_COMPILE_ASSERT ( ( SLJIT_UDIVMOD & 0x2 ) == 0 && SLJIT_UDIVI - 0x2 == SLJIT_UDIVMOD , bad_div_opcode_assignments )"		1066585	0					
ANR	1066756	Callee	SLJIT_COMPILE_ASSERT		1066585	0					
ANR	1066757	Identifier	SLJIT_COMPILE_ASSERT		1066585	0					
ANR	1066758	ArgumentList	( SLJIT_UDIVMOD & 0x2 ) == 0 && SLJIT_UDIVI - 0x2 == SLJIT_UDIVMOD		1066585	1					
ANR	1066759	Argument	( SLJIT_UDIVMOD & 0x2 ) == 0 && SLJIT_UDIVI - 0x2 == SLJIT_UDIVMOD		1066585	0					
ANR	1066760	AndExpression	( SLJIT_UDIVMOD & 0x2 ) == 0 && SLJIT_UDIVI - 0x2 == SLJIT_UDIVMOD		1066585	0		&&			
ANR	1066761	EqualityExpression	( SLJIT_UDIVMOD & 0x2 ) == 0		1066585	0		==			
ANR	1066762	BitAndExpression	SLJIT_UDIVMOD & 0x2		1066585	0		&			
ANR	1066763	Identifier	SLJIT_UDIVMOD		1066585	0					
ANR	1066764	PrimaryExpression	0x2		1066585	1					
ANR	1066765	PrimaryExpression	0		1066585	1					
ANR	1066766	EqualityExpression	SLJIT_UDIVI - 0x2 == SLJIT_UDIVMOD		1066585	1		==			
ANR	1066767	AdditiveExpression	SLJIT_UDIVI - 0x2		1066585	0		-			
ANR	1066768	Identifier	SLJIT_UDIVI		1066585	0					
ANR	1066769	PrimaryExpression	0x2		1066585	1					
ANR	1066770	Identifier	SLJIT_UDIVMOD		1066585	1					
ANR	1066771	Argument	bad_div_opcode_assignments		1066585	1					
ANR	1066772	Identifier	bad_div_opcode_assignments		1066585	0					
ANR	1066773	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , NOP , UNMOVABLE_INS ) )"	1062:2:34860:34908	1066585	14	True				
ANR	1066774	CallExpression	"FAIL_IF ( push_inst ( compiler , NOP , UNMOVABLE_INS ) )"		1066585	0					
ANR	1066775	Callee	FAIL_IF		1066585	0					
ANR	1066776	Identifier	FAIL_IF		1066585	0					
ANR	1066777	ArgumentList	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1066585	1					
ANR	1066778	Argument	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1066585	0					
ANR	1066779	CallExpression	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1066585	0					
ANR	1066780	Callee	push_inst		1066585	0					
ANR	1066781	Identifier	push_inst		1066585	0					
ANR	1066782	ArgumentList	compiler		1066585	1					
ANR	1066783	Argument	compiler		1066585	0					
ANR	1066784	Identifier	compiler		1066585	0					
ANR	1066785	Argument	NOP		1066585	1					
ANR	1066786	Identifier	NOP		1066585	0					
ANR	1066787	Argument	UNMOVABLE_INS		1066585	2					
ANR	1066788	Identifier	UNMOVABLE_INS		1066585	0					
ANR	1066789	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , NOP , UNMOVABLE_INS ) )"	1063:2:34912:34960	1066585	15	True				
ANR	1066790	CallExpression	"FAIL_IF ( push_inst ( compiler , NOP , UNMOVABLE_INS ) )"		1066585	0					
ANR	1066791	Callee	FAIL_IF		1066585	0					
ANR	1066792	Identifier	FAIL_IF		1066585	0					
ANR	1066793	ArgumentList	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1066585	1					
ANR	1066794	Argument	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1066585	0					
ANR	1066795	CallExpression	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1066585	0					
ANR	1066796	Callee	push_inst		1066585	0					
ANR	1066797	Identifier	push_inst		1066585	0					
ANR	1066798	ArgumentList	compiler		1066585	1					
ANR	1066799	Argument	compiler		1066585	0					
ANR	1066800	Identifier	compiler		1066585	0					
ANR	1066801	Argument	NOP		1066585	1					
ANR	1066802	Identifier	NOP		1066585	0					
ANR	1066803	Argument	UNMOVABLE_INS		1066585	2					
ANR	1066804	Identifier	UNMOVABLE_INS		1066585	0					
ANR	1066805	IfStatement	if ( int_op )		1066585	16					
ANR	1066806	Condition	int_op	1067:6:35035:35040	1066585	0	True				
ANR	1066807	Identifier	int_op		1066585	0					
ANR	1066808	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( ( op | 0x2 ) == SLJIT_UDIVI ? DIVU : DIV ) | S ( SLJIT_R0 ) | T ( SLJIT_R1 ) , MOVABLE_INS ) )"	1068:3:35046:35157	1066585	1	True				
ANR	1066809	CallExpression	"FAIL_IF ( push_inst ( compiler , ( ( op | 0x2 ) == SLJIT_UDIVI ? DIVU : DIV ) | S ( SLJIT_R0 ) | T ( SLJIT_R1 ) , MOVABLE_INS ) )"		1066585	0					
ANR	1066810	Callee	FAIL_IF		1066585	0					
ANR	1066811	Identifier	FAIL_IF		1066585	0					
ANR	1066812	ArgumentList	"push_inst ( compiler , ( ( op | 0x2 ) == SLJIT_UDIVI ? DIVU : DIV ) | S ( SLJIT_R0 ) | T ( SLJIT_R1 ) , MOVABLE_INS )"		1066585	1					
ANR	1066813	Argument	"push_inst ( compiler , ( ( op | 0x2 ) == SLJIT_UDIVI ? DIVU : DIV ) | S ( SLJIT_R0 ) | T ( SLJIT_R1 ) , MOVABLE_INS )"		1066585	0					
ANR	1066814	CallExpression	"push_inst ( compiler , ( ( op | 0x2 ) == SLJIT_UDIVI ? DIVU : DIV ) | S ( SLJIT_R0 ) | T ( SLJIT_R1 ) , MOVABLE_INS )"		1066585	0					
ANR	1066815	Callee	push_inst		1066585	0					
ANR	1066816	Identifier	push_inst		1066585	0					
ANR	1066817	ArgumentList	compiler		1066585	1					
ANR	1066818	Argument	compiler		1066585	0					
ANR	1066819	Identifier	compiler		1066585	0					
ANR	1066820	Argument	( ( op | 0x2 ) == SLJIT_UDIVI ? DIVU : DIV ) | S ( SLJIT_R0 ) | T ( SLJIT_R1 )		1066585	1					
ANR	1066821	InclusiveOrExpression	( ( op | 0x2 ) == SLJIT_UDIVI ? DIVU : DIV ) | S ( SLJIT_R0 ) | T ( SLJIT_R1 )		1066585	0		|			
ANR	1066822	ConditionalExpression	( op | 0x2 ) == SLJIT_UDIVI ? DIVU : DIV		1066585	0					
ANR	1066823	Condition	( op | 0x2 ) == SLJIT_UDIVI		1066585	0					
ANR	1066824	EqualityExpression	( op | 0x2 ) == SLJIT_UDIVI		1066585	0		==			
ANR	1066825	InclusiveOrExpression	op | 0x2		1066585	0		|			
ANR	1066826	Identifier	op		1066585	0					
ANR	1066827	PrimaryExpression	0x2		1066585	1					
ANR	1066828	Identifier	SLJIT_UDIVI		1066585	1					
ANR	1066829	Identifier	DIVU		1066585	1					
ANR	1066830	Identifier	DIV		1066585	2					
ANR	1066831	InclusiveOrExpression	S ( SLJIT_R0 ) | T ( SLJIT_R1 )		1066585	1		|			
ANR	1066832	CallExpression	S ( SLJIT_R0 )		1066585	0					
ANR	1066833	Callee	S		1066585	0					
ANR	1066834	Identifier	S		1066585	0					
ANR	1066835	ArgumentList	SLJIT_R0		1066585	1					
ANR	1066836	Argument	SLJIT_R0		1066585	0					
ANR	1066837	Identifier	SLJIT_R0		1066585	0					
ANR	1066838	CallExpression	T ( SLJIT_R1 )		1066585	1					
ANR	1066839	Callee	T		1066585	0					
ANR	1066840	Identifier	T		1066585	0					
ANR	1066841	ArgumentList	SLJIT_R1		1066585	1					
ANR	1066842	Argument	SLJIT_R1		1066585	0					
ANR	1066843	Identifier	SLJIT_R1		1066585	0					
ANR	1066844	Argument	MOVABLE_INS		1066585	2					
ANR	1066845	Identifier	MOVABLE_INS		1066585	0					
ANR	1066846	ElseStatement	else		1066585	0					
ANR	1066847	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( ( op | 0x2 ) == SLJIT_UDIVI ? DDIVU : DDIV ) | S ( SLJIT_R0 ) | T ( SLJIT_R1 ) , MOVABLE_INS ) )"	1070:3:35169:35282	1066585	0	True				
ANR	1066848	CallExpression	"FAIL_IF ( push_inst ( compiler , ( ( op | 0x2 ) == SLJIT_UDIVI ? DDIVU : DDIV ) | S ( SLJIT_R0 ) | T ( SLJIT_R1 ) , MOVABLE_INS ) )"		1066585	0					
ANR	1066849	Callee	FAIL_IF		1066585	0					
ANR	1066850	Identifier	FAIL_IF		1066585	0					
ANR	1066851	ArgumentList	"push_inst ( compiler , ( ( op | 0x2 ) == SLJIT_UDIVI ? DDIVU : DDIV ) | S ( SLJIT_R0 ) | T ( SLJIT_R1 ) , MOVABLE_INS )"		1066585	1					
ANR	1066852	Argument	"push_inst ( compiler , ( ( op | 0x2 ) == SLJIT_UDIVI ? DDIVU : DDIV ) | S ( SLJIT_R0 ) | T ( SLJIT_R1 ) , MOVABLE_INS )"		1066585	0					
ANR	1066853	CallExpression	"push_inst ( compiler , ( ( op | 0x2 ) == SLJIT_UDIVI ? DDIVU : DDIV ) | S ( SLJIT_R0 ) | T ( SLJIT_R1 ) , MOVABLE_INS )"		1066585	0					
ANR	1066854	Callee	push_inst		1066585	0					
ANR	1066855	Identifier	push_inst		1066585	0					
ANR	1066856	ArgumentList	compiler		1066585	1					
ANR	1066857	Argument	compiler		1066585	0					
ANR	1066858	Identifier	compiler		1066585	0					
ANR	1066859	Argument	( ( op | 0x2 ) == SLJIT_UDIVI ? DDIVU : DDIV ) | S ( SLJIT_R0 ) | T ( SLJIT_R1 )		1066585	1					
ANR	1066860	InclusiveOrExpression	( ( op | 0x2 ) == SLJIT_UDIVI ? DDIVU : DDIV ) | S ( SLJIT_R0 ) | T ( SLJIT_R1 )		1066585	0		|			
ANR	1066861	ConditionalExpression	( op | 0x2 ) == SLJIT_UDIVI ? DDIVU : DDIV		1066585	0					
ANR	1066862	Condition	( op | 0x2 ) == SLJIT_UDIVI		1066585	0					
ANR	1066863	EqualityExpression	( op | 0x2 ) == SLJIT_UDIVI		1066585	0		==			
ANR	1066864	InclusiveOrExpression	op | 0x2		1066585	0		|			
ANR	1066865	Identifier	op		1066585	0					
ANR	1066866	PrimaryExpression	0x2		1066585	1					
ANR	1066867	Identifier	SLJIT_UDIVI		1066585	1					
ANR	1066868	Identifier	DDIVU		1066585	1					
ANR	1066869	Identifier	DDIV		1066585	2					
ANR	1066870	InclusiveOrExpression	S ( SLJIT_R0 ) | T ( SLJIT_R1 )		1066585	1		|			
ANR	1066871	CallExpression	S ( SLJIT_R0 )		1066585	0					
ANR	1066872	Callee	S		1066585	0					
ANR	1066873	Identifier	S		1066585	0					
ANR	1066874	ArgumentList	SLJIT_R0		1066585	1					
ANR	1066875	Argument	SLJIT_R0		1066585	0					
ANR	1066876	Identifier	SLJIT_R0		1066585	0					
ANR	1066877	CallExpression	T ( SLJIT_R1 )		1066585	1					
ANR	1066878	Callee	T		1066585	0					
ANR	1066879	Identifier	T		1066585	0					
ANR	1066880	ArgumentList	SLJIT_R1		1066585	1					
ANR	1066881	Argument	SLJIT_R1		1066585	0					
ANR	1066882	Identifier	SLJIT_R1		1066585	0					
ANR	1066883	Argument	MOVABLE_INS		1066585	2					
ANR	1066884	Identifier	MOVABLE_INS		1066585	0					
ANR	1066885	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MFLO | D ( SLJIT_R0 ) , DR ( SLJIT_R0 ) ) )"	1075:2:35415:35477	1066585	17	True				
ANR	1066886	CallExpression	"FAIL_IF ( push_inst ( compiler , MFLO | D ( SLJIT_R0 ) , DR ( SLJIT_R0 ) ) )"		1066585	0					
ANR	1066887	Callee	FAIL_IF		1066585	0					
ANR	1066888	Identifier	FAIL_IF		1066585	0					
ANR	1066889	ArgumentList	"push_inst ( compiler , MFLO | D ( SLJIT_R0 ) , DR ( SLJIT_R0 ) )"		1066585	1					
ANR	1066890	Argument	"push_inst ( compiler , MFLO | D ( SLJIT_R0 ) , DR ( SLJIT_R0 ) )"		1066585	0					
ANR	1066891	CallExpression	"push_inst ( compiler , MFLO | D ( SLJIT_R0 ) , DR ( SLJIT_R0 ) )"		1066585	0					
ANR	1066892	Callee	push_inst		1066585	0					
ANR	1066893	Identifier	push_inst		1066585	0					
ANR	1066894	ArgumentList	compiler		1066585	1					
ANR	1066895	Argument	compiler		1066585	0					
ANR	1066896	Identifier	compiler		1066585	0					
ANR	1066897	Argument	MFLO | D ( SLJIT_R0 )		1066585	1					
ANR	1066898	InclusiveOrExpression	MFLO | D ( SLJIT_R0 )		1066585	0		|			
ANR	1066899	Identifier	MFLO		1066585	0					
ANR	1066900	CallExpression	D ( SLJIT_R0 )		1066585	1					
ANR	1066901	Callee	D		1066585	0					
ANR	1066902	Identifier	D		1066585	0					
ANR	1066903	ArgumentList	SLJIT_R0		1066585	1					
ANR	1066904	Argument	SLJIT_R0		1066585	0					
ANR	1066905	Identifier	SLJIT_R0		1066585	0					
ANR	1066906	Argument	DR ( SLJIT_R0 )		1066585	2					
ANR	1066907	CallExpression	DR ( SLJIT_R0 )		1066585	0					
ANR	1066908	Callee	DR		1066585	0					
ANR	1066909	Identifier	DR		1066585	0					
ANR	1066910	ArgumentList	SLJIT_R0		1066585	1					
ANR	1066911	Argument	SLJIT_R0		1066585	0					
ANR	1066912	Identifier	SLJIT_R0		1066585	0					
ANR	1066913	ReturnStatement	"return ( op >= SLJIT_UDIVI ) ? SLJIT_SUCCESS : push_inst ( compiler , MFHI | D ( SLJIT_R1 ) , DR ( SLJIT_R1 ) ) ;"	1076:2:35481:35579	1066585	18	True				
ANR	1066914	ConditionalExpression	"( op >= SLJIT_UDIVI ) ? SLJIT_SUCCESS : push_inst ( compiler , MFHI | D ( SLJIT_R1 ) , DR ( SLJIT_R1 ) )"		1066585	0					
ANR	1066915	Condition	op >= SLJIT_UDIVI		1066585	0					
ANR	1066916	RelationalExpression	op >= SLJIT_UDIVI		1066585	0		>=			
ANR	1066917	Identifier	op		1066585	0					
ANR	1066918	Identifier	SLJIT_UDIVI		1066585	1					
ANR	1066919	Identifier	SLJIT_SUCCESS		1066585	1					
ANR	1066920	CallExpression	"push_inst ( compiler , MFHI | D ( SLJIT_R1 ) , DR ( SLJIT_R1 ) )"		1066585	2					
ANR	1066921	Callee	push_inst		1066585	0					
ANR	1066922	Identifier	push_inst		1066585	0					
ANR	1066923	ArgumentList	compiler		1066585	1					
ANR	1066924	Argument	compiler		1066585	0					
ANR	1066925	Identifier	compiler		1066585	0					
ANR	1066926	Argument	MFHI | D ( SLJIT_R1 )		1066585	1					
ANR	1066927	InclusiveOrExpression	MFHI | D ( SLJIT_R1 )		1066585	0		|			
ANR	1066928	Identifier	MFHI		1066585	0					
ANR	1066929	CallExpression	D ( SLJIT_R1 )		1066585	1					
ANR	1066930	Callee	D		1066585	0					
ANR	1066931	Identifier	D		1066585	0					
ANR	1066932	ArgumentList	SLJIT_R1		1066585	1					
ANR	1066933	Argument	SLJIT_R1		1066585	0					
ANR	1066934	Identifier	SLJIT_R1		1066585	0					
ANR	1066935	Argument	DR ( SLJIT_R1 )		1066585	2					
ANR	1066936	CallExpression	DR ( SLJIT_R1 )		1066585	0					
ANR	1066937	Callee	DR		1066585	0					
ANR	1066938	Identifier	DR		1066585	0					
ANR	1066939	ArgumentList	SLJIT_R1		1066585	1					
ANR	1066940	Argument	SLJIT_R1		1066585	0					
ANR	1066941	Identifier	SLJIT_R1		1066585	0					
ANR	1066942	ReturnStatement	return SLJIT_SUCCESS ;	1079:1:35586:35606	1066585	5	True				
ANR	1066943	Identifier	SLJIT_SUCCESS		1066585	0					
ANR	1066944	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1066585	1					
ANR	1066945	Identifier	sljit_emit_op0		1066585	2					
ANR	1066946	ParameterList	"struct sljit_compiler * compiler , sljit_si op"		1066585	3					
ANR	1066947	Parameter	struct sljit_compiler * compiler	1032:49:33760:33790	1066585	0	True				
ANR	1066948	ParameterType	struct sljit_compiler *		1066585	0					
ANR	1066949	Identifier	compiler		1066585	1					
ANR	1066950	Parameter	sljit_si op	1032:82:33793:33803	1066585	1	True				
ANR	1066951	ParameterType	sljit_si		1066585	0					
ANR	1066952	Identifier	op		1066585	1					
ANR	1066953	CFGEntryNode	ENTRY		1066585		True				
ANR	1066954	CFGExitNode	EXIT		1066585		True				
ANR	1066955	Symbol	int_op		1066585						
ANR	1066956	Symbol	D		1066585						
ANR	1066957	Symbol	SLJIT_LUMUL		1066585						
ANR	1066958	Symbol	SLJIT_R1		1066585						
ANR	1066959	Symbol	DR		1066585						
ANR	1066960	Symbol	bad_div_opcode_assignments		1066585						
ANR	1066961	Symbol	GET_OPCODE		1066585						
ANR	1066962	Symbol	DMULTU		1066585						
ANR	1066963	Symbol	SLJIT_R0		1066585						
ANR	1066964	Symbol	SLJIT_UDIVMOD		1066585						
ANR	1066965	Symbol	S		1066585						
ANR	1066966	Symbol	T		1066585						
ANR	1066967	Symbol	DMULT		1066585						
ANR	1066968	Symbol	DDIVU		1066585						
ANR	1066969	Symbol	BREAK		1066585						
ANR	1066970	Symbol	compiler		1066585						
ANR	1066971	Symbol	op		1066585						
ANR	1066972	Symbol	push_inst		1066585						
ANR	1066973	Symbol	DIVU		1066585						
ANR	1066974	Symbol	check_sljit_emit_op0		1066585						
ANR	1066975	Symbol	SLJIT_INT_OP		1066585						
ANR	1066976	Symbol	UNMOVABLE_INS		1066585						
ANR	1066977	Symbol	SLJIT_SUCCESS		1066585						
ANR	1066978	Symbol	SLJIT_UDIVI		1066585						
ANR	1066979	Symbol	NOP		1066585						
ANR	1066980	Symbol	DIV		1066585						
ANR	1066981	Symbol	DDIV		1066585						
ANR	1066982	Symbol	MFLO		1066585						
ANR	1066983	Symbol	MOVABLE_INS		1066585						
ANR	1066984	Symbol	MFHI		1066585						
ANR	1066985	Function	sljit_emit_op1	1082:0:35611:39553							
ANR	1066986	FunctionDef	"sljit_emit_op1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1066985	0					
ANR	1066987	CompoundStatement		1085:0:35766:39553	1066985	0					
ANR	1066988	Statement	define	1087:2:35829:35834	1066985	0	True				
ANR	1066989	Statement	flags	1087:9:35836:35840	1066985	1	True				
ANR	1066990	Statement	0	1087:15:35842:35842	1066985	2	True				
ANR	1066991	ExpressionStatement	CHECK_ERROR ( )	1092:1:35880:35893	1066985	3	True				
ANR	1066992	CallExpression	CHECK_ERROR ( )		1066985	0					
ANR	1066993	Callee	CHECK_ERROR		1066985	0					
ANR	1066994	Identifier	CHECK_ERROR		1066985	0					
ANR	1066995	ArgumentList			1066985	1					
ANR	1066996	ExpressionStatement	"CHECK ( check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw ) )"	1093:1:35896:35959	1066985	4	True				
ANR	1066997	CallExpression	"CHECK ( check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw ) )"		1066985	0					
ANR	1066998	Callee	CHECK		1066985	0					
ANR	1066999	Identifier	CHECK		1066985	0					
ANR	1067000	ArgumentList	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1066985	1					
ANR	1067001	Argument	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1066985	0					
ANR	1067002	CallExpression	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1066985	0					
ANR	1067003	Callee	check_sljit_emit_op1		1066985	0					
ANR	1067004	Identifier	check_sljit_emit_op1		1066985	0					
ANR	1067005	ArgumentList	compiler		1066985	1					
ANR	1067006	Argument	compiler		1066985	0					
ANR	1067007	Identifier	compiler		1066985	0					
ANR	1067008	Argument	op		1066985	1					
ANR	1067009	Identifier	op		1066985	0					
ANR	1067010	Argument	dst		1066985	2					
ANR	1067011	Identifier	dst		1066985	0					
ANR	1067012	Argument	dstw		1066985	3					
ANR	1067013	Identifier	dstw		1066985	0					
ANR	1067014	Argument	src		1066985	4					
ANR	1067015	Identifier	src		1066985	0					
ANR	1067016	Argument	srcw		1066985	5					
ANR	1067017	Identifier	srcw		1066985	0					
ANR	1067018	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1094:1:35962:35992	1066985	5	True				
ANR	1067019	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1066985	0					
ANR	1067020	Callee	ADJUST_LOCAL_OFFSET		1066985	0					
ANR	1067021	Identifier	ADJUST_LOCAL_OFFSET		1066985	0					
ANR	1067022	ArgumentList	dst		1066985	1					
ANR	1067023	Argument	dst		1066985	0					
ANR	1067024	Identifier	dst		1066985	0					
ANR	1067025	Argument	dstw		1066985	1					
ANR	1067026	Identifier	dstw		1066985	0					
ANR	1067027	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1095:1:35995:36025	1066985	6	True				
ANR	1067028	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1066985	0					
ANR	1067029	Callee	ADJUST_LOCAL_OFFSET		1066985	0					
ANR	1067030	Identifier	ADJUST_LOCAL_OFFSET		1066985	0					
ANR	1067031	ArgumentList	src		1066985	1					
ANR	1067032	Argument	src		1066985	0					
ANR	1067033	Identifier	src		1066985	0					
ANR	1067034	Argument	srcw		1066985	1					
ANR	1067035	Identifier	srcw		1066985	0					
ANR	1067036	IfStatement	if ( ( op & SLJIT_INT_OP ) && GET_OPCODE ( op ) >= SLJIT_NOT )		1066985	7					
ANR	1067037	Condition	( op & SLJIT_INT_OP ) && GET_OPCODE ( op ) >= SLJIT_NOT	1098:5:36092:36141	1066985	0	True				
ANR	1067038	AndExpression	( op & SLJIT_INT_OP ) && GET_OPCODE ( op ) >= SLJIT_NOT		1066985	0		&&			
ANR	1067039	BitAndExpression	op & SLJIT_INT_OP		1066985	0		&			
ANR	1067040	Identifier	op		1066985	0					
ANR	1067041	Identifier	SLJIT_INT_OP		1066985	1					
ANR	1067042	RelationalExpression	GET_OPCODE ( op ) >= SLJIT_NOT		1066985	1		>=			
ANR	1067043	CallExpression	GET_OPCODE ( op )		1066985	0					
ANR	1067044	Callee	GET_OPCODE		1066985	0					
ANR	1067045	Identifier	GET_OPCODE		1066985	0					
ANR	1067046	ArgumentList	op		1066985	1					
ANR	1067047	Argument	op		1066985	0					
ANR	1067048	Identifier	op		1066985	0					
ANR	1067049	Identifier	SLJIT_NOT		1066985	1					
ANR	1067050	CompoundStatement		14:57:377:377	1066985	1					
ANR	1067051	ExpressionStatement	flags |= INT_DATA | SIGNED_DATA	1099:2:36148:36179	1066985	0	True				
ANR	1067052	AssignmentExpression	flags |= INT_DATA | SIGNED_DATA		1066985	0		|=			
ANR	1067053	Identifier	flags		1066985	0					
ANR	1067054	InclusiveOrExpression	INT_DATA | SIGNED_DATA		1066985	1		|			
ANR	1067055	Identifier	INT_DATA		1066985	0					
ANR	1067056	Identifier	SIGNED_DATA		1066985	1					
ANR	1067057	IfStatement	if ( src & SLJIT_IMM )		1066985	1					
ANR	1067058	Condition	src & SLJIT_IMM	1100:6:36187:36201	1066985	0	True				
ANR	1067059	BitAndExpression	src & SLJIT_IMM		1066985	0		&			
ANR	1067060	Identifier	src		1066985	0					
ANR	1067061	Identifier	SLJIT_IMM		1066985	1					
ANR	1067062	ExpressionStatement	srcw = ( sljit_si ) srcw	1101:3:36207:36228	1066985	1	True				
ANR	1067063	AssignmentExpression	srcw = ( sljit_si ) srcw		1066985	0		=			
ANR	1067064	Identifier	srcw		1066985	0					
ANR	1067065	CastExpression	( sljit_si ) srcw		1066985	1					
ANR	1067066	CastTarget	sljit_si		1066985	0					
ANR	1067067	Identifier	srcw		1066985	1					
ANR	1067068	SwitchStatement	switch ( GET_OPCODE ( op ) )		1066985	8					
ANR	1067069	Condition	GET_OPCODE ( op )	1105:9:36250:36263	1066985	0	True				
ANR	1067070	CallExpression	GET_OPCODE ( op )		1066985	0					
ANR	1067071	Callee	GET_OPCODE		1066985	0					
ANR	1067072	Identifier	GET_OPCODE		1066985	0					
ANR	1067073	ArgumentList	op		1066985	1					
ANR	1067074	Argument	op		1066985	0					
ANR	1067075	Identifier	op		1066985	0					
ANR	1067076	CompoundStatement		21:25:499:499	1066985	1					
ANR	1067077	Label	case SLJIT_MOV :	1106:1:36269:36283	1066985	0	True				
ANR	1067078	Identifier	SLJIT_MOV		1066985	0					
ANR	1067079	Label	case SLJIT_MOV_P :	1107:1:36286:36302	1066985	1	True				
ANR	1067080	Identifier	SLJIT_MOV_P		1066985	0					
ANR	1067081	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	1108:2:36306:36387	1066985	2	True				
ANR	1067082	CallExpression	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1066985	0					
ANR	1067083	Callee	emit_op		1066985	0					
ANR	1067084	Identifier	emit_op		1066985	0					
ANR	1067085	ArgumentList	compiler		1066985	1					
ANR	1067086	Argument	compiler		1066985	0					
ANR	1067087	Identifier	compiler		1066985	0					
ANR	1067088	Argument	SLJIT_MOV		1066985	1					
ANR	1067089	Identifier	SLJIT_MOV		1066985	0					
ANR	1067090	Argument	WORD_DATA		1066985	2					
ANR	1067091	Identifier	WORD_DATA		1066985	0					
ANR	1067092	Argument	dst		1066985	3					
ANR	1067093	Identifier	dst		1066985	0					
ANR	1067094	Argument	dstw		1066985	4					
ANR	1067095	Identifier	dstw		1066985	0					
ANR	1067096	Argument	TMP_REG1		1066985	5					
ANR	1067097	Identifier	TMP_REG1		1066985	0					
ANR	1067098	Argument	0		1066985	6					
ANR	1067099	PrimaryExpression	0		1066985	0					
ANR	1067100	Argument	src		1066985	7					
ANR	1067101	Identifier	src		1066985	0					
ANR	1067102	Argument	srcw		1066985	8					
ANR	1067103	Identifier	srcw		1066985	0					
ANR	1067104	Label	case SLJIT_MOV_UI :	1110:1:36391:36408	1066985	3	True				
ANR	1067105	Identifier	SLJIT_MOV_UI		1066985	0					
ANR	1067106	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UI , INT_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	1112:2:36471:36554	1066985	4	True				
ANR	1067107	CallExpression	"emit_op ( compiler , SLJIT_MOV_UI , INT_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1066985	0					
ANR	1067108	Callee	emit_op		1066985	0					
ANR	1067109	Identifier	emit_op		1066985	0					
ANR	1067110	ArgumentList	compiler		1066985	1					
ANR	1067111	Argument	compiler		1066985	0					
ANR	1067112	Identifier	compiler		1066985	0					
ANR	1067113	Argument	SLJIT_MOV_UI		1066985	1					
ANR	1067114	Identifier	SLJIT_MOV_UI		1066985	0					
ANR	1067115	Argument	INT_DATA		1066985	2					
ANR	1067116	Identifier	INT_DATA		1066985	0					
ANR	1067117	Argument	dst		1066985	3					
ANR	1067118	Identifier	dst		1066985	0					
ANR	1067119	Argument	dstw		1066985	4					
ANR	1067120	Identifier	dstw		1066985	0					
ANR	1067121	Argument	TMP_REG1		1066985	5					
ANR	1067122	Identifier	TMP_REG1		1066985	0					
ANR	1067123	Argument	0		1066985	6					
ANR	1067124	PrimaryExpression	0		1066985	0					
ANR	1067125	Argument	src		1066985	7					
ANR	1067126	Identifier	src		1066985	0					
ANR	1067127	Argument	srcw		1066985	8					
ANR	1067128	Identifier	srcw		1066985	0					
ANR	1067129	Label	case SLJIT_MOV_SI :	1117:1:36695:36712	1066985	5	True				
ANR	1067130	Identifier	SLJIT_MOV_SI		1066985	0					
ANR	1067131	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SI , INT_DATA | SIGNED_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	1119:2:36775:36872	1066985	6	True				
ANR	1067132	CallExpression	"emit_op ( compiler , SLJIT_MOV_SI , INT_DATA | SIGNED_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1066985	0					
ANR	1067133	Callee	emit_op		1066985	0					
ANR	1067134	Identifier	emit_op		1066985	0					
ANR	1067135	ArgumentList	compiler		1066985	1					
ANR	1067136	Argument	compiler		1066985	0					
ANR	1067137	Identifier	compiler		1066985	0					
ANR	1067138	Argument	SLJIT_MOV_SI		1066985	1					
ANR	1067139	Identifier	SLJIT_MOV_SI		1066985	0					
ANR	1067140	Argument	INT_DATA | SIGNED_DATA		1066985	2					
ANR	1067141	InclusiveOrExpression	INT_DATA | SIGNED_DATA		1066985	0		|			
ANR	1067142	Identifier	INT_DATA		1066985	0					
ANR	1067143	Identifier	SIGNED_DATA		1066985	1					
ANR	1067144	Argument	dst		1066985	3					
ANR	1067145	Identifier	dst		1066985	0					
ANR	1067146	Argument	dstw		1066985	4					
ANR	1067147	Identifier	dstw		1066985	0					
ANR	1067148	Argument	TMP_REG1		1066985	5					
ANR	1067149	Identifier	TMP_REG1		1066985	0					
ANR	1067150	Argument	0		1066985	6					
ANR	1067151	PrimaryExpression	0		1066985	0					
ANR	1067152	Argument	src		1066985	7					
ANR	1067153	Identifier	src		1066985	0					
ANR	1067154	Argument	srcw		1066985	8					
ANR	1067155	Identifier	srcw		1066985	0					
ANR	1067156	Label	case SLJIT_MOV_UB :	1124:1:37027:37044	1066985	7	True				
ANR	1067157	Identifier	SLJIT_MOV_UB		1066985	0					
ANR	1067158	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UB , BYTE_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw ) ;"	1125:2:37048:37169	1066985	8	True				
ANR	1067159	CallExpression	"emit_op ( compiler , SLJIT_MOV_UB , BYTE_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw )"		1066985	0					
ANR	1067160	Callee	emit_op		1066985	0					
ANR	1067161	Identifier	emit_op		1066985	0					
ANR	1067162	ArgumentList	compiler		1066985	1					
ANR	1067163	Argument	compiler		1066985	0					
ANR	1067164	Identifier	compiler		1066985	0					
ANR	1067165	Argument	SLJIT_MOV_UB		1066985	1					
ANR	1067166	Identifier	SLJIT_MOV_UB		1066985	0					
ANR	1067167	Argument	BYTE_DATA		1066985	2					
ANR	1067168	Identifier	BYTE_DATA		1066985	0					
ANR	1067169	Argument	dst		1066985	3					
ANR	1067170	Identifier	dst		1066985	0					
ANR	1067171	Argument	dstw		1066985	4					
ANR	1067172	Identifier	dstw		1066985	0					
ANR	1067173	Argument	TMP_REG1		1066985	5					
ANR	1067174	Identifier	TMP_REG1		1066985	0					
ANR	1067175	Argument	0		1066985	6					
ANR	1067176	PrimaryExpression	0		1066985	0					
ANR	1067177	Argument	src		1066985	7					
ANR	1067178	Identifier	src		1066985	0					
ANR	1067179	Argument	( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw		1066985	8					
ANR	1067180	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw		1066985	0					
ANR	1067181	Condition	src & SLJIT_IMM		1066985	0					
ANR	1067182	BitAndExpression	src & SLJIT_IMM		1066985	0		&			
ANR	1067183	Identifier	src		1066985	0					
ANR	1067184	Identifier	SLJIT_IMM		1066985	1					
ANR	1067185	CastExpression	( sljit_ub ) srcw		1066985	1					
ANR	1067186	CastTarget	sljit_ub		1066985	0					
ANR	1067187	Identifier	srcw		1066985	1					
ANR	1067188	Identifier	srcw		1066985	2					
ANR	1067189	Label	case SLJIT_MOV_SB :	1127:1:37173:37190	1066985	9	True				
ANR	1067190	Identifier	SLJIT_MOV_SB		1066985	0					
ANR	1067191	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SB , BYTE_DATA | SIGNED_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw ) ;"	1128:2:37194:37329	1066985	10	True				
ANR	1067192	CallExpression	"emit_op ( compiler , SLJIT_MOV_SB , BYTE_DATA | SIGNED_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw )"		1066985	0					
ANR	1067193	Callee	emit_op		1066985	0					
ANR	1067194	Identifier	emit_op		1066985	0					
ANR	1067195	ArgumentList	compiler		1066985	1					
ANR	1067196	Argument	compiler		1066985	0					
ANR	1067197	Identifier	compiler		1066985	0					
ANR	1067198	Argument	SLJIT_MOV_SB		1066985	1					
ANR	1067199	Identifier	SLJIT_MOV_SB		1066985	0					
ANR	1067200	Argument	BYTE_DATA | SIGNED_DATA		1066985	2					
ANR	1067201	InclusiveOrExpression	BYTE_DATA | SIGNED_DATA		1066985	0		|			
ANR	1067202	Identifier	BYTE_DATA		1066985	0					
ANR	1067203	Identifier	SIGNED_DATA		1066985	1					
ANR	1067204	Argument	dst		1066985	3					
ANR	1067205	Identifier	dst		1066985	0					
ANR	1067206	Argument	dstw		1066985	4					
ANR	1067207	Identifier	dstw		1066985	0					
ANR	1067208	Argument	TMP_REG1		1066985	5					
ANR	1067209	Identifier	TMP_REG1		1066985	0					
ANR	1067210	Argument	0		1066985	6					
ANR	1067211	PrimaryExpression	0		1066985	0					
ANR	1067212	Argument	src		1066985	7					
ANR	1067213	Identifier	src		1066985	0					
ANR	1067214	Argument	( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw		1066985	8					
ANR	1067215	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw		1066985	0					
ANR	1067216	Condition	src & SLJIT_IMM		1066985	0					
ANR	1067217	BitAndExpression	src & SLJIT_IMM		1066985	0		&			
ANR	1067218	Identifier	src		1066985	0					
ANR	1067219	Identifier	SLJIT_IMM		1066985	1					
ANR	1067220	CastExpression	( sljit_sb ) srcw		1066985	1					
ANR	1067221	CastTarget	sljit_sb		1066985	0					
ANR	1067222	Identifier	srcw		1066985	1					
ANR	1067223	Identifier	srcw		1066985	2					
ANR	1067224	Label	case SLJIT_MOV_UH :	1130:1:37333:37350	1066985	11	True				
ANR	1067225	Identifier	SLJIT_MOV_UH		1066985	0					
ANR	1067226	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UH , HALF_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw ) ;"	1131:2:37354:37475	1066985	12	True				
ANR	1067227	CallExpression	"emit_op ( compiler , SLJIT_MOV_UH , HALF_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw )"		1066985	0					
ANR	1067228	Callee	emit_op		1066985	0					
ANR	1067229	Identifier	emit_op		1066985	0					
ANR	1067230	ArgumentList	compiler		1066985	1					
ANR	1067231	Argument	compiler		1066985	0					
ANR	1067232	Identifier	compiler		1066985	0					
ANR	1067233	Argument	SLJIT_MOV_UH		1066985	1					
ANR	1067234	Identifier	SLJIT_MOV_UH		1066985	0					
ANR	1067235	Argument	HALF_DATA		1066985	2					
ANR	1067236	Identifier	HALF_DATA		1066985	0					
ANR	1067237	Argument	dst		1066985	3					
ANR	1067238	Identifier	dst		1066985	0					
ANR	1067239	Argument	dstw		1066985	4					
ANR	1067240	Identifier	dstw		1066985	0					
ANR	1067241	Argument	TMP_REG1		1066985	5					
ANR	1067242	Identifier	TMP_REG1		1066985	0					
ANR	1067243	Argument	0		1066985	6					
ANR	1067244	PrimaryExpression	0		1066985	0					
ANR	1067245	Argument	src		1066985	7					
ANR	1067246	Identifier	src		1066985	0					
ANR	1067247	Argument	( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw		1066985	8					
ANR	1067248	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw		1066985	0					
ANR	1067249	Condition	src & SLJIT_IMM		1066985	0					
ANR	1067250	BitAndExpression	src & SLJIT_IMM		1066985	0		&			
ANR	1067251	Identifier	src		1066985	0					
ANR	1067252	Identifier	SLJIT_IMM		1066985	1					
ANR	1067253	CastExpression	( sljit_uh ) srcw		1066985	1					
ANR	1067254	CastTarget	sljit_uh		1066985	0					
ANR	1067255	Identifier	srcw		1066985	1					
ANR	1067256	Identifier	srcw		1066985	2					
ANR	1067257	Label	case SLJIT_MOV_SH :	1133:1:37479:37496	1066985	13	True				
ANR	1067258	Identifier	SLJIT_MOV_SH		1066985	0					
ANR	1067259	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SH , HALF_DATA | SIGNED_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw ) ;"	1134:2:37500:37635	1066985	14	True				
ANR	1067260	CallExpression	"emit_op ( compiler , SLJIT_MOV_SH , HALF_DATA | SIGNED_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw )"		1066985	0					
ANR	1067261	Callee	emit_op		1066985	0					
ANR	1067262	Identifier	emit_op		1066985	0					
ANR	1067263	ArgumentList	compiler		1066985	1					
ANR	1067264	Argument	compiler		1066985	0					
ANR	1067265	Identifier	compiler		1066985	0					
ANR	1067266	Argument	SLJIT_MOV_SH		1066985	1					
ANR	1067267	Identifier	SLJIT_MOV_SH		1066985	0					
ANR	1067268	Argument	HALF_DATA | SIGNED_DATA		1066985	2					
ANR	1067269	InclusiveOrExpression	HALF_DATA | SIGNED_DATA		1066985	0		|			
ANR	1067270	Identifier	HALF_DATA		1066985	0					
ANR	1067271	Identifier	SIGNED_DATA		1066985	1					
ANR	1067272	Argument	dst		1066985	3					
ANR	1067273	Identifier	dst		1066985	0					
ANR	1067274	Argument	dstw		1066985	4					
ANR	1067275	Identifier	dstw		1066985	0					
ANR	1067276	Argument	TMP_REG1		1066985	5					
ANR	1067277	Identifier	TMP_REG1		1066985	0					
ANR	1067278	Argument	0		1066985	6					
ANR	1067279	PrimaryExpression	0		1066985	0					
ANR	1067280	Argument	src		1066985	7					
ANR	1067281	Identifier	src		1066985	0					
ANR	1067282	Argument	( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw		1066985	8					
ANR	1067283	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw		1066985	0					
ANR	1067284	Condition	src & SLJIT_IMM		1066985	0					
ANR	1067285	BitAndExpression	src & SLJIT_IMM		1066985	0		&			
ANR	1067286	Identifier	src		1066985	0					
ANR	1067287	Identifier	SLJIT_IMM		1066985	1					
ANR	1067288	CastExpression	( sljit_sh ) srcw		1066985	1					
ANR	1067289	CastTarget	sljit_sh		1066985	0					
ANR	1067290	Identifier	srcw		1066985	1					
ANR	1067291	Identifier	srcw		1066985	2					
ANR	1067292	Label	case SLJIT_MOVU :	1136:1:37639:37654	1066985	15	True				
ANR	1067293	Identifier	SLJIT_MOVU		1066985	0					
ANR	1067294	Label	case SLJIT_MOVU_P :	1137:1:37657:37674	1066985	16	True				
ANR	1067295	Identifier	SLJIT_MOVU_P		1066985	0					
ANR	1067296	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV , WORD_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	1138:2:37678:37772	1066985	17	True				
ANR	1067297	CallExpression	"emit_op ( compiler , SLJIT_MOV , WORD_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1066985	0					
ANR	1067298	Callee	emit_op		1066985	0					
ANR	1067299	Identifier	emit_op		1066985	0					
ANR	1067300	ArgumentList	compiler		1066985	1					
ANR	1067301	Argument	compiler		1066985	0					
ANR	1067302	Identifier	compiler		1066985	0					
ANR	1067303	Argument	SLJIT_MOV		1066985	1					
ANR	1067304	Identifier	SLJIT_MOV		1066985	0					
ANR	1067305	Argument	WORD_DATA | WRITE_BACK		1066985	2					
ANR	1067306	InclusiveOrExpression	WORD_DATA | WRITE_BACK		1066985	0		|			
ANR	1067307	Identifier	WORD_DATA		1066985	0					
ANR	1067308	Identifier	WRITE_BACK		1066985	1					
ANR	1067309	Argument	dst		1066985	3					
ANR	1067310	Identifier	dst		1066985	0					
ANR	1067311	Argument	dstw		1066985	4					
ANR	1067312	Identifier	dstw		1066985	0					
ANR	1067313	Argument	TMP_REG1		1066985	5					
ANR	1067314	Identifier	TMP_REG1		1066985	0					
ANR	1067315	Argument	0		1066985	6					
ANR	1067316	PrimaryExpression	0		1066985	0					
ANR	1067317	Argument	src		1066985	7					
ANR	1067318	Identifier	src		1066985	0					
ANR	1067319	Argument	srcw		1066985	8					
ANR	1067320	Identifier	srcw		1066985	0					
ANR	1067321	Label	case SLJIT_MOVU_UI :	1140:1:37776:37794	1066985	18	True				
ANR	1067322	Identifier	SLJIT_MOVU_UI		1066985	0					
ANR	1067323	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UI , INT_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	1142:2:37857:37953	1066985	19	True				
ANR	1067324	CallExpression	"emit_op ( compiler , SLJIT_MOV_UI , INT_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1066985	0					
ANR	1067325	Callee	emit_op		1066985	0					
ANR	1067326	Identifier	emit_op		1066985	0					
ANR	1067327	ArgumentList	compiler		1066985	1					
ANR	1067328	Argument	compiler		1066985	0					
ANR	1067329	Identifier	compiler		1066985	0					
ANR	1067330	Argument	SLJIT_MOV_UI		1066985	1					
ANR	1067331	Identifier	SLJIT_MOV_UI		1066985	0					
ANR	1067332	Argument	INT_DATA | WRITE_BACK		1066985	2					
ANR	1067333	InclusiveOrExpression	INT_DATA | WRITE_BACK		1066985	0		|			
ANR	1067334	Identifier	INT_DATA		1066985	0					
ANR	1067335	Identifier	WRITE_BACK		1066985	1					
ANR	1067336	Argument	dst		1066985	3					
ANR	1067337	Identifier	dst		1066985	0					
ANR	1067338	Argument	dstw		1066985	4					
ANR	1067339	Identifier	dstw		1066985	0					
ANR	1067340	Argument	TMP_REG1		1066985	5					
ANR	1067341	Identifier	TMP_REG1		1066985	0					
ANR	1067342	Argument	0		1066985	6					
ANR	1067343	PrimaryExpression	0		1066985	0					
ANR	1067344	Argument	src		1066985	7					
ANR	1067345	Identifier	src		1066985	0					
ANR	1067346	Argument	srcw		1066985	8					
ANR	1067347	Identifier	srcw		1066985	0					
ANR	1067348	Label	case SLJIT_MOVU_SI :	1147:1:38107:38125	1066985	20	True				
ANR	1067349	Identifier	SLJIT_MOVU_SI		1066985	0					
ANR	1067350	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SI , INT_DATA | SIGNED_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	1149:2:38188:38298	1066985	21	True				
ANR	1067351	CallExpression	"emit_op ( compiler , SLJIT_MOV_SI , INT_DATA | SIGNED_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1066985	0					
ANR	1067352	Callee	emit_op		1066985	0					
ANR	1067353	Identifier	emit_op		1066985	0					
ANR	1067354	ArgumentList	compiler		1066985	1					
ANR	1067355	Argument	compiler		1066985	0					
ANR	1067356	Identifier	compiler		1066985	0					
ANR	1067357	Argument	SLJIT_MOV_SI		1066985	1					
ANR	1067358	Identifier	SLJIT_MOV_SI		1066985	0					
ANR	1067359	Argument	INT_DATA | SIGNED_DATA | WRITE_BACK		1066985	2					
ANR	1067360	InclusiveOrExpression	INT_DATA | SIGNED_DATA | WRITE_BACK		1066985	0		|			
ANR	1067361	Identifier	INT_DATA		1066985	0					
ANR	1067362	InclusiveOrExpression	SIGNED_DATA | WRITE_BACK		1066985	1		|			
ANR	1067363	Identifier	SIGNED_DATA		1066985	0					
ANR	1067364	Identifier	WRITE_BACK		1066985	1					
ANR	1067365	Argument	dst		1066985	3					
ANR	1067366	Identifier	dst		1066985	0					
ANR	1067367	Argument	dstw		1066985	4					
ANR	1067368	Identifier	dstw		1066985	0					
ANR	1067369	Argument	TMP_REG1		1066985	5					
ANR	1067370	Identifier	TMP_REG1		1066985	0					
ANR	1067371	Argument	0		1066985	6					
ANR	1067372	PrimaryExpression	0		1066985	0					
ANR	1067373	Argument	src		1066985	7					
ANR	1067374	Identifier	src		1066985	0					
ANR	1067375	Argument	srcw		1066985	8					
ANR	1067376	Identifier	srcw		1066985	0					
ANR	1067377	Label	case SLJIT_MOVU_UB :	1154:1:38466:38484	1066985	22	True				
ANR	1067378	Identifier	SLJIT_MOVU_UB		1066985	0					
ANR	1067379	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UB , BYTE_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw ) ;"	1155:2:38488:38622	1066985	23	True				
ANR	1067380	CallExpression	"emit_op ( compiler , SLJIT_MOV_UB , BYTE_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw )"		1066985	0					
ANR	1067381	Callee	emit_op		1066985	0					
ANR	1067382	Identifier	emit_op		1066985	0					
ANR	1067383	ArgumentList	compiler		1066985	1					
ANR	1067384	Argument	compiler		1066985	0					
ANR	1067385	Identifier	compiler		1066985	0					
ANR	1067386	Argument	SLJIT_MOV_UB		1066985	1					
ANR	1067387	Identifier	SLJIT_MOV_UB		1066985	0					
ANR	1067388	Argument	BYTE_DATA | WRITE_BACK		1066985	2					
ANR	1067389	InclusiveOrExpression	BYTE_DATA | WRITE_BACK		1066985	0		|			
ANR	1067390	Identifier	BYTE_DATA		1066985	0					
ANR	1067391	Identifier	WRITE_BACK		1066985	1					
ANR	1067392	Argument	dst		1066985	3					
ANR	1067393	Identifier	dst		1066985	0					
ANR	1067394	Argument	dstw		1066985	4					
ANR	1067395	Identifier	dstw		1066985	0					
ANR	1067396	Argument	TMP_REG1		1066985	5					
ANR	1067397	Identifier	TMP_REG1		1066985	0					
ANR	1067398	Argument	0		1066985	6					
ANR	1067399	PrimaryExpression	0		1066985	0					
ANR	1067400	Argument	src		1066985	7					
ANR	1067401	Identifier	src		1066985	0					
ANR	1067402	Argument	( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw		1066985	8					
ANR	1067403	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw		1066985	0					
ANR	1067404	Condition	src & SLJIT_IMM		1066985	0					
ANR	1067405	BitAndExpression	src & SLJIT_IMM		1066985	0		&			
ANR	1067406	Identifier	src		1066985	0					
ANR	1067407	Identifier	SLJIT_IMM		1066985	1					
ANR	1067408	CastExpression	( sljit_ub ) srcw		1066985	1					
ANR	1067409	CastTarget	sljit_ub		1066985	0					
ANR	1067410	Identifier	srcw		1066985	1					
ANR	1067411	Identifier	srcw		1066985	2					
ANR	1067412	Label	case SLJIT_MOVU_SB :	1157:1:38626:38644	1066985	24	True				
ANR	1067413	Identifier	SLJIT_MOVU_SB		1066985	0					
ANR	1067414	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SB , BYTE_DATA | SIGNED_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw ) ;"	1158:2:38648:38796	1066985	25	True				
ANR	1067415	CallExpression	"emit_op ( compiler , SLJIT_MOV_SB , BYTE_DATA | SIGNED_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw )"		1066985	0					
ANR	1067416	Callee	emit_op		1066985	0					
ANR	1067417	Identifier	emit_op		1066985	0					
ANR	1067418	ArgumentList	compiler		1066985	1					
ANR	1067419	Argument	compiler		1066985	0					
ANR	1067420	Identifier	compiler		1066985	0					
ANR	1067421	Argument	SLJIT_MOV_SB		1066985	1					
ANR	1067422	Identifier	SLJIT_MOV_SB		1066985	0					
ANR	1067423	Argument	BYTE_DATA | SIGNED_DATA | WRITE_BACK		1066985	2					
ANR	1067424	InclusiveOrExpression	BYTE_DATA | SIGNED_DATA | WRITE_BACK		1066985	0		|			
ANR	1067425	Identifier	BYTE_DATA		1066985	0					
ANR	1067426	InclusiveOrExpression	SIGNED_DATA | WRITE_BACK		1066985	1		|			
ANR	1067427	Identifier	SIGNED_DATA		1066985	0					
ANR	1067428	Identifier	WRITE_BACK		1066985	1					
ANR	1067429	Argument	dst		1066985	3					
ANR	1067430	Identifier	dst		1066985	0					
ANR	1067431	Argument	dstw		1066985	4					
ANR	1067432	Identifier	dstw		1066985	0					
ANR	1067433	Argument	TMP_REG1		1066985	5					
ANR	1067434	Identifier	TMP_REG1		1066985	0					
ANR	1067435	Argument	0		1066985	6					
ANR	1067436	PrimaryExpression	0		1066985	0					
ANR	1067437	Argument	src		1066985	7					
ANR	1067438	Identifier	src		1066985	0					
ANR	1067439	Argument	( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw		1066985	8					
ANR	1067440	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw		1066985	0					
ANR	1067441	Condition	src & SLJIT_IMM		1066985	0					
ANR	1067442	BitAndExpression	src & SLJIT_IMM		1066985	0		&			
ANR	1067443	Identifier	src		1066985	0					
ANR	1067444	Identifier	SLJIT_IMM		1066985	1					
ANR	1067445	CastExpression	( sljit_sb ) srcw		1066985	1					
ANR	1067446	CastTarget	sljit_sb		1066985	0					
ANR	1067447	Identifier	srcw		1066985	1					
ANR	1067448	Identifier	srcw		1066985	2					
ANR	1067449	Label	case SLJIT_MOVU_UH :	1160:1:38800:38818	1066985	26	True				
ANR	1067450	Identifier	SLJIT_MOVU_UH		1066985	0					
ANR	1067451	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UH , HALF_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw ) ;"	1161:2:38822:38956	1066985	27	True				
ANR	1067452	CallExpression	"emit_op ( compiler , SLJIT_MOV_UH , HALF_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw )"		1066985	0					
ANR	1067453	Callee	emit_op		1066985	0					
ANR	1067454	Identifier	emit_op		1066985	0					
ANR	1067455	ArgumentList	compiler		1066985	1					
ANR	1067456	Argument	compiler		1066985	0					
ANR	1067457	Identifier	compiler		1066985	0					
ANR	1067458	Argument	SLJIT_MOV_UH		1066985	1					
ANR	1067459	Identifier	SLJIT_MOV_UH		1066985	0					
ANR	1067460	Argument	HALF_DATA | WRITE_BACK		1066985	2					
ANR	1067461	InclusiveOrExpression	HALF_DATA | WRITE_BACK		1066985	0		|			
ANR	1067462	Identifier	HALF_DATA		1066985	0					
ANR	1067463	Identifier	WRITE_BACK		1066985	1					
ANR	1067464	Argument	dst		1066985	3					
ANR	1067465	Identifier	dst		1066985	0					
ANR	1067466	Argument	dstw		1066985	4					
ANR	1067467	Identifier	dstw		1066985	0					
ANR	1067468	Argument	TMP_REG1		1066985	5					
ANR	1067469	Identifier	TMP_REG1		1066985	0					
ANR	1067470	Argument	0		1066985	6					
ANR	1067471	PrimaryExpression	0		1066985	0					
ANR	1067472	Argument	src		1066985	7					
ANR	1067473	Identifier	src		1066985	0					
ANR	1067474	Argument	( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw		1066985	8					
ANR	1067475	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw		1066985	0					
ANR	1067476	Condition	src & SLJIT_IMM		1066985	0					
ANR	1067477	BitAndExpression	src & SLJIT_IMM		1066985	0		&			
ANR	1067478	Identifier	src		1066985	0					
ANR	1067479	Identifier	SLJIT_IMM		1066985	1					
ANR	1067480	CastExpression	( sljit_uh ) srcw		1066985	1					
ANR	1067481	CastTarget	sljit_uh		1066985	0					
ANR	1067482	Identifier	srcw		1066985	1					
ANR	1067483	Identifier	srcw		1066985	2					
ANR	1067484	Label	case SLJIT_MOVU_SH :	1163:1:38960:38978	1066985	28	True				
ANR	1067485	Identifier	SLJIT_MOVU_SH		1066985	0					
ANR	1067486	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SH , HALF_DATA | SIGNED_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw ) ;"	1164:2:38982:39130	1066985	29	True				
ANR	1067487	CallExpression	"emit_op ( compiler , SLJIT_MOV_SH , HALF_DATA | SIGNED_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw )"		1066985	0					
ANR	1067488	Callee	emit_op		1066985	0					
ANR	1067489	Identifier	emit_op		1066985	0					
ANR	1067490	ArgumentList	compiler		1066985	1					
ANR	1067491	Argument	compiler		1066985	0					
ANR	1067492	Identifier	compiler		1066985	0					
ANR	1067493	Argument	SLJIT_MOV_SH		1066985	1					
ANR	1067494	Identifier	SLJIT_MOV_SH		1066985	0					
ANR	1067495	Argument	HALF_DATA | SIGNED_DATA | WRITE_BACK		1066985	2					
ANR	1067496	InclusiveOrExpression	HALF_DATA | SIGNED_DATA | WRITE_BACK		1066985	0		|			
ANR	1067497	Identifier	HALF_DATA		1066985	0					
ANR	1067498	InclusiveOrExpression	SIGNED_DATA | WRITE_BACK		1066985	1		|			
ANR	1067499	Identifier	SIGNED_DATA		1066985	0					
ANR	1067500	Identifier	WRITE_BACK		1066985	1					
ANR	1067501	Argument	dst		1066985	3					
ANR	1067502	Identifier	dst		1066985	0					
ANR	1067503	Argument	dstw		1066985	4					
ANR	1067504	Identifier	dstw		1066985	0					
ANR	1067505	Argument	TMP_REG1		1066985	5					
ANR	1067506	Identifier	TMP_REG1		1066985	0					
ANR	1067507	Argument	0		1066985	6					
ANR	1067508	PrimaryExpression	0		1066985	0					
ANR	1067509	Argument	src		1066985	7					
ANR	1067510	Identifier	src		1066985	0					
ANR	1067511	Argument	( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw		1066985	8					
ANR	1067512	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw		1066985	0					
ANR	1067513	Condition	src & SLJIT_IMM		1066985	0					
ANR	1067514	BitAndExpression	src & SLJIT_IMM		1066985	0		&			
ANR	1067515	Identifier	src		1066985	0					
ANR	1067516	Identifier	SLJIT_IMM		1066985	1					
ANR	1067517	CastExpression	( sljit_sh ) srcw		1066985	1					
ANR	1067518	CastTarget	sljit_sh		1066985	0					
ANR	1067519	Identifier	srcw		1066985	1					
ANR	1067520	Identifier	srcw		1066985	2					
ANR	1067521	Label	case SLJIT_NOT :	1166:1:39134:39148	1066985	30	True				
ANR	1067522	Identifier	SLJIT_NOT		1066985	0					
ANR	1067523	ReturnStatement	"return emit_op ( compiler , op , flags , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	1167:2:39152:39222	1066985	31	True				
ANR	1067524	CallExpression	"emit_op ( compiler , op , flags , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1066985	0					
ANR	1067525	Callee	emit_op		1066985	0					
ANR	1067526	Identifier	emit_op		1066985	0					
ANR	1067527	ArgumentList	compiler		1066985	1					
ANR	1067528	Argument	compiler		1066985	0					
ANR	1067529	Identifier	compiler		1066985	0					
ANR	1067530	Argument	op		1066985	1					
ANR	1067531	Identifier	op		1066985	0					
ANR	1067532	Argument	flags		1066985	2					
ANR	1067533	Identifier	flags		1066985	0					
ANR	1067534	Argument	dst		1066985	3					
ANR	1067535	Identifier	dst		1066985	0					
ANR	1067536	Argument	dstw		1066985	4					
ANR	1067537	Identifier	dstw		1066985	0					
ANR	1067538	Argument	TMP_REG1		1066985	5					
ANR	1067539	Identifier	TMP_REG1		1066985	0					
ANR	1067540	Argument	0		1066985	6					
ANR	1067541	PrimaryExpression	0		1066985	0					
ANR	1067542	Argument	src		1066985	7					
ANR	1067543	Identifier	src		1066985	0					
ANR	1067544	Argument	srcw		1066985	8					
ANR	1067545	Identifier	srcw		1066985	0					
ANR	1067546	Label	case SLJIT_NEG :	1169:1:39226:39240	1066985	32	True				
ANR	1067547	Identifier	SLJIT_NEG		1066985	0					
ANR	1067548	ReturnStatement	"return emit_op ( compiler , SLJIT_SUB | GET_ALL_FLAGS ( op ) , flags | IMM_OP , dst , dstw , SLJIT_IMM , 0 , src , srcw ) ;"	1170:2:39244:39351	1066985	33	True				
ANR	1067549	CallExpression	"emit_op ( compiler , SLJIT_SUB | GET_ALL_FLAGS ( op ) , flags | IMM_OP , dst , dstw , SLJIT_IMM , 0 , src , srcw )"		1066985	0					
ANR	1067550	Callee	emit_op		1066985	0					
ANR	1067551	Identifier	emit_op		1066985	0					
ANR	1067552	ArgumentList	compiler		1066985	1					
ANR	1067553	Argument	compiler		1066985	0					
ANR	1067554	Identifier	compiler		1066985	0					
ANR	1067555	Argument	SLJIT_SUB | GET_ALL_FLAGS ( op )		1066985	1					
ANR	1067556	InclusiveOrExpression	SLJIT_SUB | GET_ALL_FLAGS ( op )		1066985	0		|			
ANR	1067557	Identifier	SLJIT_SUB		1066985	0					
ANR	1067558	CallExpression	GET_ALL_FLAGS ( op )		1066985	1					
ANR	1067559	Callee	GET_ALL_FLAGS		1066985	0					
ANR	1067560	Identifier	GET_ALL_FLAGS		1066985	0					
ANR	1067561	ArgumentList	op		1066985	1					
ANR	1067562	Argument	op		1066985	0					
ANR	1067563	Identifier	op		1066985	0					
ANR	1067564	Argument	flags | IMM_OP		1066985	2					
ANR	1067565	InclusiveOrExpression	flags | IMM_OP		1066985	0		|			
ANR	1067566	Identifier	flags		1066985	0					
ANR	1067567	Identifier	IMM_OP		1066985	1					
ANR	1067568	Argument	dst		1066985	3					
ANR	1067569	Identifier	dst		1066985	0					
ANR	1067570	Argument	dstw		1066985	4					
ANR	1067571	Identifier	dstw		1066985	0					
ANR	1067572	Argument	SLJIT_IMM		1066985	5					
ANR	1067573	Identifier	SLJIT_IMM		1066985	0					
ANR	1067574	Argument	0		1066985	6					
ANR	1067575	PrimaryExpression	0		1066985	0					
ANR	1067576	Argument	src		1066985	7					
ANR	1067577	Identifier	src		1066985	0					
ANR	1067578	Argument	srcw		1066985	8					
ANR	1067579	Identifier	srcw		1066985	0					
ANR	1067580	Label	case SLJIT_CLZ :	1172:1:39355:39369	1066985	34	True				
ANR	1067581	Identifier	SLJIT_CLZ		1066985	0					
ANR	1067582	ReturnStatement	"return emit_op ( compiler , op , flags , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	1173:2:39373:39443	1066985	35	True				
ANR	1067583	CallExpression	"emit_op ( compiler , op , flags , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1066985	0					
ANR	1067584	Callee	emit_op		1066985	0					
ANR	1067585	Identifier	emit_op		1066985	0					
ANR	1067586	ArgumentList	compiler		1066985	1					
ANR	1067587	Argument	compiler		1066985	0					
ANR	1067588	Identifier	compiler		1066985	0					
ANR	1067589	Argument	op		1066985	1					
ANR	1067590	Identifier	op		1066985	0					
ANR	1067591	Argument	flags		1066985	2					
ANR	1067592	Identifier	flags		1066985	0					
ANR	1067593	Argument	dst		1066985	3					
ANR	1067594	Identifier	dst		1066985	0					
ANR	1067595	Argument	dstw		1066985	4					
ANR	1067596	Identifier	dstw		1066985	0					
ANR	1067597	Argument	TMP_REG1		1066985	5					
ANR	1067598	Identifier	TMP_REG1		1066985	0					
ANR	1067599	Argument	0		1066985	6					
ANR	1067600	PrimaryExpression	0		1066985	0					
ANR	1067601	Argument	src		1066985	7					
ANR	1067602	Identifier	src		1066985	0					
ANR	1067603	Argument	srcw		1066985	8					
ANR	1067604	Identifier	srcw		1066985	0					
ANR	1067605	ReturnStatement	return SLJIT_SUCCESS ;	1176:1:39450:39470	1066985	9	True				
ANR	1067606	Identifier	SLJIT_SUCCESS		1066985	0					
ANR	1067607	Statement	undef	1179:2:39534:39538	1066985	10	True				
ANR	1067608	Statement	flags	1179:8:39540:39544	1066985	11	True				
ANR	1067609	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1066985	1					
ANR	1067610	Identifier	sljit_emit_op1		1066985	2					
ANR	1067611	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1066985	3					
ANR	1067612	Parameter	struct sljit_compiler * compiler	1082:49:35660:35690	1066985	0	True				
ANR	1067613	ParameterType	struct sljit_compiler *		1066985	0					
ANR	1067614	Identifier	compiler		1066985	1					
ANR	1067615	Parameter	sljit_si op	1082:82:35693:35703	1066985	1	True				
ANR	1067616	ParameterType	sljit_si		1066985	0					
ANR	1067617	Identifier	op		1066985	1					
ANR	1067618	Parameter	sljit_si dst	1083:1:35707:35718	1066985	2	True				
ANR	1067619	ParameterType	sljit_si		1066985	0					
ANR	1067620	Identifier	dst		1066985	1					
ANR	1067621	Parameter	sljit_sw dstw	1083:15:35721:35733	1066985	3	True				
ANR	1067622	ParameterType	sljit_sw		1066985	0					
ANR	1067623	Identifier	dstw		1066985	1					
ANR	1067624	Parameter	sljit_si src	1084:1:35737:35748	1066985	4	True				
ANR	1067625	ParameterType	sljit_si		1066985	0					
ANR	1067626	Identifier	src		1066985	1					
ANR	1067627	Parameter	sljit_sw srcw	1084:15:35751:35763	1066985	5	True				
ANR	1067628	ParameterType	sljit_sw		1066985	0					
ANR	1067629	Identifier	srcw		1066985	1					
ANR	1067630	CFGEntryNode	ENTRY		1066985		True				
ANR	1067631	CFGExitNode	EXIT		1066985		True				
ANR	1067632	Symbol	TMP_REG1		1066985						
ANR	1067633	Symbol	dst		1066985						
ANR	1067634	Symbol	SLJIT_NOT		1066985						
ANR	1067635	Symbol	IMM_OP		1066985						
ANR	1067636	Symbol	SLJIT_MOV		1066985						
ANR	1067637	Symbol	flags		1066985						
ANR	1067638	Symbol	GET_OPCODE		1066985						
ANR	1067639	Symbol	BYTE_DATA		1066985						
ANR	1067640	Symbol	SLJIT_MOV_SI		1066985						
ANR	1067641	Symbol	GET_ALL_FLAGS		1066985						
ANR	1067642	Symbol	SLJIT_IMM		1066985						
ANR	1067643	Symbol	SLJIT_MOV_UH		1066985						
ANR	1067644	Symbol	SLJIT_MOV_SH		1066985						
ANR	1067645	Symbol	INT_DATA		1066985						
ANR	1067646	Symbol	SLJIT_MOV_UI		1066985						
ANR	1067647	Symbol	compiler		1066985						
ANR	1067648	Symbol	WRITE_BACK		1066985						
ANR	1067649	Symbol	emit_op		1066985						
ANR	1067650	Symbol	WORD_DATA		1066985						
ANR	1067651	Symbol	op		1066985						
ANR	1067652	Symbol	src		1066985						
ANR	1067653	Symbol	check_sljit_emit_op1		1066985						
ANR	1067654	Symbol	HALF_DATA		1066985						
ANR	1067655	Symbol	srcw		1066985						
ANR	1067656	Symbol	SLJIT_INT_OP		1066985						
ANR	1067657	Symbol	SLJIT_MOV_SB		1066985						
ANR	1067658	Symbol	SLJIT_SUB		1066985						
ANR	1067659	Symbol	SLJIT_SUCCESS		1066985						
ANR	1067660	Symbol	SLJIT_MOV_UB		1066985						
ANR	1067661	Symbol	SIGNED_DATA		1066985						
ANR	1067662	Symbol	dstw		1066985						
ANR	1067663	Function	sljit_emit_op2	1183:0:39556:41316							
ANR	1067664	FunctionDef	"sljit_emit_op2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1067663	0					
ANR	1067665	CompoundStatement		1187:0:39745:41316	1067663	0					
ANR	1067666	Statement	define	1189:2:39808:39813	1067663	0	True				
ANR	1067667	Statement	flags	1189:9:39815:39819	1067663	1	True				
ANR	1067668	Statement	0	1189:15:39821:39821	1067663	2	True				
ANR	1067669	ExpressionStatement	CHECK_ERROR ( )	1194:1:39859:39872	1067663	3	True				
ANR	1067670	CallExpression	CHECK_ERROR ( )		1067663	0					
ANR	1067671	Callee	CHECK_ERROR		1067663	0					
ANR	1067672	Identifier	CHECK_ERROR		1067663	0					
ANR	1067673	ArgumentList			1067663	1					
ANR	1067674	ExpressionStatement	"CHECK ( check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"	1195:1:39875:39953	1067663	4	True				
ANR	1067675	CallExpression	"CHECK ( check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"		1067663	0					
ANR	1067676	Callee	CHECK		1067663	0					
ANR	1067677	Identifier	CHECK		1067663	0					
ANR	1067678	ArgumentList	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1067663	1					
ANR	1067679	Argument	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1067663	0					
ANR	1067680	CallExpression	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1067663	0					
ANR	1067681	Callee	check_sljit_emit_op2		1067663	0					
ANR	1067682	Identifier	check_sljit_emit_op2		1067663	0					
ANR	1067683	ArgumentList	compiler		1067663	1					
ANR	1067684	Argument	compiler		1067663	0					
ANR	1067685	Identifier	compiler		1067663	0					
ANR	1067686	Argument	op		1067663	1					
ANR	1067687	Identifier	op		1067663	0					
ANR	1067688	Argument	dst		1067663	2					
ANR	1067689	Identifier	dst		1067663	0					
ANR	1067690	Argument	dstw		1067663	3					
ANR	1067691	Identifier	dstw		1067663	0					
ANR	1067692	Argument	src1		1067663	4					
ANR	1067693	Identifier	src1		1067663	0					
ANR	1067694	Argument	src1w		1067663	5					
ANR	1067695	Identifier	src1w		1067663	0					
ANR	1067696	Argument	src2		1067663	6					
ANR	1067697	Identifier	src2		1067663	0					
ANR	1067698	Argument	src2w		1067663	7					
ANR	1067699	Identifier	src2w		1067663	0					
ANR	1067700	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1196:1:39956:39986	1067663	5	True				
ANR	1067701	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1067663	0					
ANR	1067702	Callee	ADJUST_LOCAL_OFFSET		1067663	0					
ANR	1067703	Identifier	ADJUST_LOCAL_OFFSET		1067663	0					
ANR	1067704	ArgumentList	dst		1067663	1					
ANR	1067705	Argument	dst		1067663	0					
ANR	1067706	Identifier	dst		1067663	0					
ANR	1067707	Argument	dstw		1067663	1					
ANR	1067708	Identifier	dstw		1067663	0					
ANR	1067709	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"	1197:1:39989:40021	1067663	6	True				
ANR	1067710	CallExpression	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"		1067663	0					
ANR	1067711	Callee	ADJUST_LOCAL_OFFSET		1067663	0					
ANR	1067712	Identifier	ADJUST_LOCAL_OFFSET		1067663	0					
ANR	1067713	ArgumentList	src1		1067663	1					
ANR	1067714	Argument	src1		1067663	0					
ANR	1067715	Identifier	src1		1067663	0					
ANR	1067716	Argument	src1w		1067663	1					
ANR	1067717	Identifier	src1w		1067663	0					
ANR	1067718	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"	1198:1:40024:40056	1067663	7	True				
ANR	1067719	CallExpression	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"		1067663	0					
ANR	1067720	Callee	ADJUST_LOCAL_OFFSET		1067663	0					
ANR	1067721	Identifier	ADJUST_LOCAL_OFFSET		1067663	0					
ANR	1067722	ArgumentList	src2		1067663	1					
ANR	1067723	Argument	src2		1067663	0					
ANR	1067724	Identifier	src2		1067663	0					
ANR	1067725	Argument	src2w		1067663	1					
ANR	1067726	Identifier	src2w		1067663	0					
ANR	1067727	IfStatement	if ( op & SLJIT_INT_OP )		1067663	8					
ANR	1067728	Condition	op & SLJIT_INT_OP	1201:5:40123:40139	1067663	0	True				
ANR	1067729	BitAndExpression	op & SLJIT_INT_OP		1067663	0		&			
ANR	1067730	Identifier	op		1067663	0					
ANR	1067731	Identifier	SLJIT_INT_OP		1067663	1					
ANR	1067732	CompoundStatement		15:24:396:396	1067663	1					
ANR	1067733	ExpressionStatement	flags |= INT_DATA | SIGNED_DATA	1202:2:40146:40177	1067663	0	True				
ANR	1067734	AssignmentExpression	flags |= INT_DATA | SIGNED_DATA		1067663	0		|=			
ANR	1067735	Identifier	flags		1067663	0					
ANR	1067736	InclusiveOrExpression	INT_DATA | SIGNED_DATA		1067663	1		|			
ANR	1067737	Identifier	INT_DATA		1067663	0					
ANR	1067738	Identifier	SIGNED_DATA		1067663	1					
ANR	1067739	IfStatement	if ( src1 & SLJIT_IMM )		1067663	1					
ANR	1067740	Condition	src1 & SLJIT_IMM	1203:6:40185:40200	1067663	0	True				
ANR	1067741	BitAndExpression	src1 & SLJIT_IMM		1067663	0		&			
ANR	1067742	Identifier	src1		1067663	0					
ANR	1067743	Identifier	SLJIT_IMM		1067663	1					
ANR	1067744	ExpressionStatement	src1w = ( sljit_si ) src1w	1204:3:40206:40229	1067663	1	True				
ANR	1067745	AssignmentExpression	src1w = ( sljit_si ) src1w		1067663	0		=			
ANR	1067746	Identifier	src1w		1067663	0					
ANR	1067747	CastExpression	( sljit_si ) src1w		1067663	1					
ANR	1067748	CastTarget	sljit_si		1067663	0					
ANR	1067749	Identifier	src1w		1067663	1					
ANR	1067750	IfStatement	if ( src2 & SLJIT_IMM )		1067663	2					
ANR	1067751	Condition	src2 & SLJIT_IMM	1205:6:40237:40252	1067663	0	True				
ANR	1067752	BitAndExpression	src2 & SLJIT_IMM		1067663	0		&			
ANR	1067753	Identifier	src2		1067663	0					
ANR	1067754	Identifier	SLJIT_IMM		1067663	1					
ANR	1067755	ExpressionStatement	src2w = ( sljit_si ) src2w	1206:3:40258:40281	1067663	1	True				
ANR	1067756	AssignmentExpression	src2w = ( sljit_si ) src2w		1067663	0		=			
ANR	1067757	Identifier	src2w		1067663	0					
ANR	1067758	CastExpression	( sljit_si ) src2w		1067663	1					
ANR	1067759	CastTarget	sljit_si		1067663	0					
ANR	1067760	Identifier	src2w		1067663	1					
ANR	1067761	SwitchStatement	switch ( GET_OPCODE ( op ) )		1067663	9					
ANR	1067762	Condition	GET_OPCODE ( op )	1210:9:40303:40316	1067663	0	True				
ANR	1067763	CallExpression	GET_OPCODE ( op )		1067663	0					
ANR	1067764	Callee	GET_OPCODE		1067663	0					
ANR	1067765	Identifier	GET_OPCODE		1067663	0					
ANR	1067766	ArgumentList	op		1067663	1					
ANR	1067767	Argument	op		1067663	0					
ANR	1067768	Identifier	op		1067663	0					
ANR	1067769	CompoundStatement		24:25:573:573	1067663	1					
ANR	1067770	Label	case SLJIT_ADD :	1211:1:40322:40336	1067663	0	True				
ANR	1067771	Identifier	SLJIT_ADD		1067663	0					
ANR	1067772	Label	case SLJIT_ADDC :	1212:1:40339:40354	1067663	1	True				
ANR	1067773	Identifier	SLJIT_ADDC		1067663	0					
ANR	1067774	ReturnStatement	"return emit_op ( compiler , op , flags | CUMULATIVE_OP | IMM_OP , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1213:2:40358:40455	1067663	2	True				
ANR	1067775	CallExpression	"emit_op ( compiler , op , flags | CUMULATIVE_OP | IMM_OP , dst , dstw , src1 , src1w , src2 , src2w )"		1067663	0					
ANR	1067776	Callee	emit_op		1067663	0					
ANR	1067777	Identifier	emit_op		1067663	0					
ANR	1067778	ArgumentList	compiler		1067663	1					
ANR	1067779	Argument	compiler		1067663	0					
ANR	1067780	Identifier	compiler		1067663	0					
ANR	1067781	Argument	op		1067663	1					
ANR	1067782	Identifier	op		1067663	0					
ANR	1067783	Argument	flags | CUMULATIVE_OP | IMM_OP		1067663	2					
ANR	1067784	InclusiveOrExpression	flags | CUMULATIVE_OP | IMM_OP		1067663	0		|			
ANR	1067785	Identifier	flags		1067663	0					
ANR	1067786	InclusiveOrExpression	CUMULATIVE_OP | IMM_OP		1067663	1		|			
ANR	1067787	Identifier	CUMULATIVE_OP		1067663	0					
ANR	1067788	Identifier	IMM_OP		1067663	1					
ANR	1067789	Argument	dst		1067663	3					
ANR	1067790	Identifier	dst		1067663	0					
ANR	1067791	Argument	dstw		1067663	4					
ANR	1067792	Identifier	dstw		1067663	0					
ANR	1067793	Argument	src1		1067663	5					
ANR	1067794	Identifier	src1		1067663	0					
ANR	1067795	Argument	src1w		1067663	6					
ANR	1067796	Identifier	src1w		1067663	0					
ANR	1067797	Argument	src2		1067663	7					
ANR	1067798	Identifier	src2		1067663	0					
ANR	1067799	Argument	src2w		1067663	8					
ANR	1067800	Identifier	src2w		1067663	0					
ANR	1067801	Label	case SLJIT_SUB :	1215:1:40459:40473	1067663	3	True				
ANR	1067802	Identifier	SLJIT_SUB		1067663	0					
ANR	1067803	Label	case SLJIT_SUBC :	1216:1:40476:40491	1067663	4	True				
ANR	1067804	Identifier	SLJIT_SUBC		1067663	0					
ANR	1067805	ReturnStatement	"return emit_op ( compiler , op , flags | IMM_OP , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1217:2:40495:40576	1067663	5	True				
ANR	1067806	CallExpression	"emit_op ( compiler , op , flags | IMM_OP , dst , dstw , src1 , src1w , src2 , src2w )"		1067663	0					
ANR	1067807	Callee	emit_op		1067663	0					
ANR	1067808	Identifier	emit_op		1067663	0					
ANR	1067809	ArgumentList	compiler		1067663	1					
ANR	1067810	Argument	compiler		1067663	0					
ANR	1067811	Identifier	compiler		1067663	0					
ANR	1067812	Argument	op		1067663	1					
ANR	1067813	Identifier	op		1067663	0					
ANR	1067814	Argument	flags | IMM_OP		1067663	2					
ANR	1067815	InclusiveOrExpression	flags | IMM_OP		1067663	0		|			
ANR	1067816	Identifier	flags		1067663	0					
ANR	1067817	Identifier	IMM_OP		1067663	1					
ANR	1067818	Argument	dst		1067663	3					
ANR	1067819	Identifier	dst		1067663	0					
ANR	1067820	Argument	dstw		1067663	4					
ANR	1067821	Identifier	dstw		1067663	0					
ANR	1067822	Argument	src1		1067663	5					
ANR	1067823	Identifier	src1		1067663	0					
ANR	1067824	Argument	src1w		1067663	6					
ANR	1067825	Identifier	src1w		1067663	0					
ANR	1067826	Argument	src2		1067663	7					
ANR	1067827	Identifier	src2		1067663	0					
ANR	1067828	Argument	src2w		1067663	8					
ANR	1067829	Identifier	src2w		1067663	0					
ANR	1067830	Label	case SLJIT_MUL :	1219:1:40580:40594	1067663	6	True				
ANR	1067831	Identifier	SLJIT_MUL		1067663	0					
ANR	1067832	ReturnStatement	"return emit_op ( compiler , op , flags | CUMULATIVE_OP , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1220:2:40598:40686	1067663	7	True				
ANR	1067833	CallExpression	"emit_op ( compiler , op , flags | CUMULATIVE_OP , dst , dstw , src1 , src1w , src2 , src2w )"		1067663	0					
ANR	1067834	Callee	emit_op		1067663	0					
ANR	1067835	Identifier	emit_op		1067663	0					
ANR	1067836	ArgumentList	compiler		1067663	1					
ANR	1067837	Argument	compiler		1067663	0					
ANR	1067838	Identifier	compiler		1067663	0					
ANR	1067839	Argument	op		1067663	1					
ANR	1067840	Identifier	op		1067663	0					
ANR	1067841	Argument	flags | CUMULATIVE_OP		1067663	2					
ANR	1067842	InclusiveOrExpression	flags | CUMULATIVE_OP		1067663	0		|			
ANR	1067843	Identifier	flags		1067663	0					
ANR	1067844	Identifier	CUMULATIVE_OP		1067663	1					
ANR	1067845	Argument	dst		1067663	3					
ANR	1067846	Identifier	dst		1067663	0					
ANR	1067847	Argument	dstw		1067663	4					
ANR	1067848	Identifier	dstw		1067663	0					
ANR	1067849	Argument	src1		1067663	5					
ANR	1067850	Identifier	src1		1067663	0					
ANR	1067851	Argument	src1w		1067663	6					
ANR	1067852	Identifier	src1w		1067663	0					
ANR	1067853	Argument	src2		1067663	7					
ANR	1067854	Identifier	src2		1067663	0					
ANR	1067855	Argument	src2w		1067663	8					
ANR	1067856	Identifier	src2w		1067663	0					
ANR	1067857	Label	case SLJIT_AND :	1222:1:40690:40704	1067663	8	True				
ANR	1067858	Identifier	SLJIT_AND		1067663	0					
ANR	1067859	Label	case SLJIT_OR :	1223:1:40707:40720	1067663	9	True				
ANR	1067860	Identifier	SLJIT_OR		1067663	0					
ANR	1067861	Label	case SLJIT_XOR :	1224:1:40723:40737	1067663	10	True				
ANR	1067862	Identifier	SLJIT_XOR		1067663	0					
ANR	1067863	ReturnStatement	"return emit_op ( compiler , op , flags | CUMULATIVE_OP | LOGICAL_OP | IMM_OP , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1225:2:40741:40851	1067663	11	True				
ANR	1067864	CallExpression	"emit_op ( compiler , op , flags | CUMULATIVE_OP | LOGICAL_OP | IMM_OP , dst , dstw , src1 , src1w , src2 , src2w )"		1067663	0					
ANR	1067865	Callee	emit_op		1067663	0					
ANR	1067866	Identifier	emit_op		1067663	0					
ANR	1067867	ArgumentList	compiler		1067663	1					
ANR	1067868	Argument	compiler		1067663	0					
ANR	1067869	Identifier	compiler		1067663	0					
ANR	1067870	Argument	op		1067663	1					
ANR	1067871	Identifier	op		1067663	0					
ANR	1067872	Argument	flags | CUMULATIVE_OP | LOGICAL_OP | IMM_OP		1067663	2					
ANR	1067873	InclusiveOrExpression	flags | CUMULATIVE_OP | LOGICAL_OP | IMM_OP		1067663	0		|			
ANR	1067874	Identifier	flags		1067663	0					
ANR	1067875	InclusiveOrExpression	CUMULATIVE_OP | LOGICAL_OP | IMM_OP		1067663	1		|			
ANR	1067876	Identifier	CUMULATIVE_OP		1067663	0					
ANR	1067877	InclusiveOrExpression	LOGICAL_OP | IMM_OP		1067663	1		|			
ANR	1067878	Identifier	LOGICAL_OP		1067663	0					
ANR	1067879	Identifier	IMM_OP		1067663	1					
ANR	1067880	Argument	dst		1067663	3					
ANR	1067881	Identifier	dst		1067663	0					
ANR	1067882	Argument	dstw		1067663	4					
ANR	1067883	Identifier	dstw		1067663	0					
ANR	1067884	Argument	src1		1067663	5					
ANR	1067885	Identifier	src1		1067663	0					
ANR	1067886	Argument	src1w		1067663	6					
ANR	1067887	Identifier	src1w		1067663	0					
ANR	1067888	Argument	src2		1067663	7					
ANR	1067889	Identifier	src2		1067663	0					
ANR	1067890	Argument	src2w		1067663	8					
ANR	1067891	Identifier	src2w		1067663	0					
ANR	1067892	Label	case SLJIT_SHL :	1227:1:40855:40869	1067663	12	True				
ANR	1067893	Identifier	SLJIT_SHL		1067663	0					
ANR	1067894	Label	case SLJIT_LSHR :	1228:1:40872:40887	1067663	13	True				
ANR	1067895	Identifier	SLJIT_LSHR		1067663	0					
ANR	1067896	Label	case SLJIT_ASHR :	1229:1:40890:40905	1067663	14	True				
ANR	1067897	Identifier	SLJIT_ASHR		1067663	0					
ANR	1067898	IfStatement	if ( src2 & SLJIT_IMM )		1067663	15					
ANR	1067899	Condition	src2 & SLJIT_IMM	1231:6:40972:40987	1067663	0	True				
ANR	1067900	BitAndExpression	src2 & SLJIT_IMM		1067663	0		&			
ANR	1067901	Identifier	src2		1067663	0					
ANR	1067902	Identifier	SLJIT_IMM		1067663	1					
ANR	1067903	ExpressionStatement	src2w &= 0x1f	1232:3:40993:41006	1067663	1	True				
ANR	1067904	AssignmentExpression	src2w &= 0x1f		1067663	0		&=			
ANR	1067905	Identifier	src2w		1067663	0					
ANR	1067906	PrimaryExpression	0x1f		1067663	1					
ANR	1067907	ReturnStatement	"return emit_op ( compiler , op , flags | IMM_OP , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1241:2:41125:41206	1067663	16	True				
ANR	1067908	CallExpression	"emit_op ( compiler , op , flags | IMM_OP , dst , dstw , src1 , src1w , src2 , src2w )"		1067663	0					
ANR	1067909	Callee	emit_op		1067663	0					
ANR	1067910	Identifier	emit_op		1067663	0					
ANR	1067911	ArgumentList	compiler		1067663	1					
ANR	1067912	Argument	compiler		1067663	0					
ANR	1067913	Identifier	compiler		1067663	0					
ANR	1067914	Argument	op		1067663	1					
ANR	1067915	Identifier	op		1067663	0					
ANR	1067916	Argument	flags | IMM_OP		1067663	2					
ANR	1067917	InclusiveOrExpression	flags | IMM_OP		1067663	0		|			
ANR	1067918	Identifier	flags		1067663	0					
ANR	1067919	Identifier	IMM_OP		1067663	1					
ANR	1067920	Argument	dst		1067663	3					
ANR	1067921	Identifier	dst		1067663	0					
ANR	1067922	Argument	dstw		1067663	4					
ANR	1067923	Identifier	dstw		1067663	0					
ANR	1067924	Argument	src1		1067663	5					
ANR	1067925	Identifier	src1		1067663	0					
ANR	1067926	Argument	src1w		1067663	6					
ANR	1067927	Identifier	src1w		1067663	0					
ANR	1067928	Argument	src2		1067663	7					
ANR	1067929	Identifier	src2		1067663	0					
ANR	1067930	Argument	src2w		1067663	8					
ANR	1067931	Identifier	src2w		1067663	0					
ANR	1067932	ReturnStatement	return SLJIT_SUCCESS ;	1244:1:41213:41233	1067663	10	True				
ANR	1067933	Identifier	SLJIT_SUCCESS		1067663	0					
ANR	1067934	Statement	undef	1247:2:41297:41301	1067663	11	True				
ANR	1067935	Statement	flags	1247:8:41303:41307	1067663	12	True				
ANR	1067936	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1067663	1					
ANR	1067937	Identifier	sljit_emit_op2		1067663	2					
ANR	1067938	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1067663	3					
ANR	1067939	Parameter	struct sljit_compiler * compiler	1183:49:39605:39635	1067663	0	True				
ANR	1067940	ParameterType	struct sljit_compiler *		1067663	0					
ANR	1067941	Identifier	compiler		1067663	1					
ANR	1067942	Parameter	sljit_si op	1183:82:39638:39648	1067663	1	True				
ANR	1067943	ParameterType	sljit_si		1067663	0					
ANR	1067944	Identifier	op		1067663	1					
ANR	1067945	Parameter	sljit_si dst	1184:1:39652:39663	1067663	2	True				
ANR	1067946	ParameterType	sljit_si		1067663	0					
ANR	1067947	Identifier	dst		1067663	1					
ANR	1067948	Parameter	sljit_sw dstw	1184:15:39666:39678	1067663	3	True				
ANR	1067949	ParameterType	sljit_sw		1067663	0					
ANR	1067950	Identifier	dstw		1067663	1					
ANR	1067951	Parameter	sljit_si src1	1185:1:39682:39694	1067663	4	True				
ANR	1067952	ParameterType	sljit_si		1067663	0					
ANR	1067953	Identifier	src1		1067663	1					
ANR	1067954	Parameter	sljit_sw src1w	1185:16:39697:39710	1067663	5	True				
ANR	1067955	ParameterType	sljit_sw		1067663	0					
ANR	1067956	Identifier	src1w		1067663	1					
ANR	1067957	Parameter	sljit_si src2	1186:1:39714:39726	1067663	6	True				
ANR	1067958	ParameterType	sljit_si		1067663	0					
ANR	1067959	Identifier	src2		1067663	1					
ANR	1067960	Parameter	sljit_sw src2w	1186:16:39729:39742	1067663	7	True				
ANR	1067961	ParameterType	sljit_sw		1067663	0					
ANR	1067962	Identifier	src2w		1067663	1					
ANR	1067963	CFGEntryNode	ENTRY		1067663		True				
ANR	1067964	CFGExitNode	EXIT		1067663		True				
ANR	1067965	Symbol	src2w		1067663						
ANR	1067966	Symbol	op		1067663						
ANR	1067967	Symbol	src1w		1067663						
ANR	1067968	Symbol	dst		1067663						
ANR	1067969	Symbol	check_sljit_emit_op2		1067663						
ANR	1067970	Symbol	IMM_OP		1067663						
ANR	1067971	Symbol	LOGICAL_OP		1067663						
ANR	1067972	Symbol	SLJIT_INT_OP		1067663						
ANR	1067973	Symbol	CUMULATIVE_OP		1067663						
ANR	1067974	Symbol	flags		1067663						
ANR	1067975	Symbol	SLJIT_SUCCESS		1067663						
ANR	1067976	Symbol	GET_OPCODE		1067663						
ANR	1067977	Symbol	SIGNED_DATA		1067663						
ANR	1067978	Symbol	SLJIT_IMM		1067663						
ANR	1067979	Symbol	INT_DATA		1067663						
ANR	1067980	Symbol	src1		1067663						
ANR	1067981	Symbol	src2		1067663						
ANR	1067982	Symbol	compiler		1067663						
ANR	1067983	Symbol	dstw		1067663						
ANR	1067984	Symbol	emit_op		1067663						
ANR	1067985	Function	sljit_get_register_index	1251:0:41319:41471							
ANR	1067986	FunctionDef	sljit_get_register_index (sljit_si reg)		1067985	0					
ANR	1067987	CompoundStatement		1252:0:41392:41471	1067985	0					
ANR	1067988	ExpressionStatement	CHECK_REG_INDEX ( check_sljit_get_register_index ( reg ) )	1253:1:41395:41447	1067985	0	True				
ANR	1067989	CallExpression	CHECK_REG_INDEX ( check_sljit_get_register_index ( reg ) )		1067985	0					
ANR	1067990	Callee	CHECK_REG_INDEX		1067985	0					
ANR	1067991	Identifier	CHECK_REG_INDEX		1067985	0					
ANR	1067992	ArgumentList	check_sljit_get_register_index ( reg )		1067985	1					
ANR	1067993	Argument	check_sljit_get_register_index ( reg )		1067985	0					
ANR	1067994	CallExpression	check_sljit_get_register_index ( reg )		1067985	0					
ANR	1067995	Callee	check_sljit_get_register_index		1067985	0					
ANR	1067996	Identifier	check_sljit_get_register_index		1067985	0					
ANR	1067997	ArgumentList	reg		1067985	1					
ANR	1067998	Argument	reg		1067985	0					
ANR	1067999	Identifier	reg		1067985	0					
ANR	1068000	ReturnStatement	return reg_map [ reg ] ;	1254:1:41450:41469	1067985	1	True				
ANR	1068001	ArrayIndexing	reg_map [ reg ]		1067985	0					
ANR	1068002	Identifier	reg_map		1067985	0					
ANR	1068003	Identifier	reg		1067985	1					
ANR	1068004	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1067985	1					
ANR	1068005	Identifier	sljit_get_register_index		1067985	2					
ANR	1068006	ParameterList	sljit_si reg		1067985	3					
ANR	1068007	Parameter	sljit_si reg	1251:59:41378:41389	1067985	0	True				
ANR	1068008	ParameterType	sljit_si		1067985	0					
ANR	1068009	Identifier	reg		1067985	1					
ANR	1068010	CFGEntryNode	ENTRY		1067985		True				
ANR	1068011	CFGExitNode	EXIT		1067985		True				
ANR	1068012	Symbol	reg		1067985						
ANR	1068013	Symbol	reg_map		1067985						
ANR	1068014	Symbol	* reg_map		1067985						
ANR	1068015	Symbol	* reg		1067985						
ANR	1068016	Symbol	check_sljit_get_register_index		1067985						
ANR	1068017	Function	sljit_get_float_register_index	1257:0:41474:41634							
ANR	1068018	FunctionDef	sljit_get_float_register_index (sljit_si reg)		1068017	0					
ANR	1068019	CompoundStatement		1258:0:41553:41634	1068017	0					
ANR	1068020	ExpressionStatement	CHECK_REG_INDEX ( check_sljit_get_float_register_index ( reg ) )	1259:1:41556:41614	1068017	0	True				
ANR	1068021	CallExpression	CHECK_REG_INDEX ( check_sljit_get_float_register_index ( reg ) )		1068017	0					
ANR	1068022	Callee	CHECK_REG_INDEX		1068017	0					
ANR	1068023	Identifier	CHECK_REG_INDEX		1068017	0					
ANR	1068024	ArgumentList	check_sljit_get_float_register_index ( reg )		1068017	1					
ANR	1068025	Argument	check_sljit_get_float_register_index ( reg )		1068017	0					
ANR	1068026	CallExpression	check_sljit_get_float_register_index ( reg )		1068017	0					
ANR	1068027	Callee	check_sljit_get_float_register_index		1068017	0					
ANR	1068028	Identifier	check_sljit_get_float_register_index		1068017	0					
ANR	1068029	ArgumentList	reg		1068017	1					
ANR	1068030	Argument	reg		1068017	0					
ANR	1068031	Identifier	reg		1068017	0					
ANR	1068032	ReturnStatement	return reg << 1 ;	1260:1:41617:41632	1068017	1	True				
ANR	1068033	ShiftExpression	reg << 1		1068017	0		<<			
ANR	1068034	Identifier	reg		1068017	0					
ANR	1068035	PrimaryExpression	1		1068017	1					
ANR	1068036	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1068017	1					
ANR	1068037	Identifier	sljit_get_float_register_index		1068017	2					
ANR	1068038	ParameterList	sljit_si reg		1068017	3					
ANR	1068039	Parameter	sljit_si reg	1257:65:41539:41550	1068017	0	True				
ANR	1068040	ParameterType	sljit_si		1068017	0					
ANR	1068041	Identifier	reg		1068017	1					
ANR	1068042	CFGEntryNode	ENTRY		1068017		True				
ANR	1068043	CFGExitNode	EXIT		1068017		True				
ANR	1068044	Symbol	reg		1068017						
ANR	1068045	Symbol	check_sljit_get_float_register_index		1068017						
ANR	1068046	Function	sljit_emit_op_custom	1263:0:41637:41914							
ANR	1068047	FunctionDef	"sljit_emit_op_custom (struct sljit_compiler * compiler , void * instruction , sljit_si size)"		1068046	0					
ANR	1068048	CompoundStatement		1265:0:41760:41914	1068046	0					
ANR	1068049	ExpressionStatement	CHECK_ERROR ( )	1266:1:41763:41776	1068046	0	True				
ANR	1068050	CallExpression	CHECK_ERROR ( )		1068046	0					
ANR	1068051	Callee	CHECK_ERROR		1068046	0					
ANR	1068052	Identifier	CHECK_ERROR		1068046	0					
ANR	1068053	ArgumentList			1068046	1					
ANR	1068054	ExpressionStatement	"CHECK ( check_sljit_emit_op_custom ( compiler , instruction , size ) )"	1267:1:41779:41841	1068046	1	True				
ANR	1068055	CallExpression	"CHECK ( check_sljit_emit_op_custom ( compiler , instruction , size ) )"		1068046	0					
ANR	1068056	Callee	CHECK		1068046	0					
ANR	1068057	Identifier	CHECK		1068046	0					
ANR	1068058	ArgumentList	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1068046	1					
ANR	1068059	Argument	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1068046	0					
ANR	1068060	CallExpression	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1068046	0					
ANR	1068061	Callee	check_sljit_emit_op_custom		1068046	0					
ANR	1068062	Identifier	check_sljit_emit_op_custom		1068046	0					
ANR	1068063	ArgumentList	compiler		1068046	1					
ANR	1068064	Argument	compiler		1068046	0					
ANR	1068065	Identifier	compiler		1068046	0					
ANR	1068066	Argument	instruction		1068046	1					
ANR	1068067	Identifier	instruction		1068046	0					
ANR	1068068	Argument	size		1068046	2					
ANR	1068069	Identifier	size		1068046	0					
ANR	1068070	ReturnStatement	"return push_inst ( compiler , * ( sljit_ins * ) instruction , UNMOVABLE_INS ) ;"	1269:1:41845:41912	1068046	2	True				
ANR	1068071	CallExpression	"push_inst ( compiler , * ( sljit_ins * ) instruction , UNMOVABLE_INS )"		1068046	0					
ANR	1068072	Callee	push_inst		1068046	0					
ANR	1068073	Identifier	push_inst		1068046	0					
ANR	1068074	ArgumentList	compiler		1068046	1					
ANR	1068075	Argument	compiler		1068046	0					
ANR	1068076	Identifier	compiler		1068046	0					
ANR	1068077	Argument	* ( sljit_ins * ) instruction		1068046	1					
ANR	1068078	UnaryOperationExpression	* ( sljit_ins * ) instruction		1068046	0					
ANR	1068079	UnaryOperator	*		1068046	0					
ANR	1068080	CastExpression	( sljit_ins * ) instruction		1068046	1					
ANR	1068081	CastTarget	sljit_ins *		1068046	0					
ANR	1068082	Identifier	instruction		1068046	1					
ANR	1068083	Argument	UNMOVABLE_INS		1068046	2					
ANR	1068084	Identifier	UNMOVABLE_INS		1068046	0					
ANR	1068085	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1068046	1					
ANR	1068086	Identifier	sljit_emit_op_custom		1068046	2					
ANR	1068087	ParameterList	"struct sljit_compiler * compiler , void * instruction , sljit_si size"		1068046	3					
ANR	1068088	Parameter	struct sljit_compiler * compiler	1263:55:41692:41722	1068046	0	True				
ANR	1068089	ParameterType	struct sljit_compiler *		1068046	0					
ANR	1068090	Identifier	compiler		1068046	1					
ANR	1068091	Parameter	void * instruction	1264:1:41726:41742	1068046	1	True				
ANR	1068092	ParameterType	void *		1068046	0					
ANR	1068093	Identifier	instruction		1068046	1					
ANR	1068094	Parameter	sljit_si size	1264:20:41745:41757	1068046	2	True				
ANR	1068095	ParameterType	sljit_si		1068046	0					
ANR	1068096	Identifier	size		1068046	1					
ANR	1068097	CFGEntryNode	ENTRY		1068046		True				
ANR	1068098	CFGExitNode	EXIT		1068046		True				
ANR	1068099	Symbol	push_inst		1068046						
ANR	1068100	Symbol	size		1068046						
ANR	1068101	Symbol	* instruction		1068046						
ANR	1068102	Symbol	* ( sljit_ins * ) instruction		1068046						
ANR	1068103	Symbol	instruction		1068046						
ANR	1068104	Symbol	check_sljit_emit_op_custom		1068046						
ANR	1068105	Symbol	UNMOVABLE_INS		1068046						
ANR	1068106	Symbol	compiler		1068046						
ANR	1068107	Function	sljit_is_fpu_available	1276:0:42146:42446							
ANR	1068108	FunctionDef	sljit_is_fpu_available ()		1068107	0					
ANR	1068109	CompoundStatement		1277:0:42209:42446	1068107	0					
ANR	1068110	ReturnStatement	return SLJIT_IS_FPU_AVAILABLE ;	1279:1:42242:42271	1068107	0	True				
ANR	1068111	Identifier	SLJIT_IS_FPU_AVAILABLE		1068107	0					
ANR	1068112	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1068107	1					
ANR	1068113	Identifier	sljit_is_fpu_available		1068107	2					
ANR	1068114	ParameterList			1068107	3					
ANR	1068115	CFGEntryNode	ENTRY		1068107		True				
ANR	1068116	CFGExitNode	EXIT		1068107		True				
ANR	1068117	Symbol	SLJIT_IS_FPU_AVAILABLE		1068107						
ANR	1068118	Function	sljit_emit_fop1_convw_fromd	1292:0:42592:43569							
ANR	1068119	FunctionDef	"sljit_emit_fop1_convw_fromd (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1068118	0					
ANR	1068120	CompoundStatement		1295:0:42755:43569	1068118	0					
ANR	1068121	Statement	define	1297:2:42818:42823	1068118	0	True				
ANR	1068122	Statement	flags	1297:9:42825:42829	1068118	1	True				
ANR	1068123	Statement	0	1297:15:42831:42831	1068118	2	True				
ANR	1068124	IfStatement	if ( src & SLJIT_MEM )		1068118	3					
ANR	1068125	Condition	src & SLJIT_MEM	1302:5:42915:42929	1068118	0	True				
ANR	1068126	BitAndExpression	src & SLJIT_MEM		1068118	0		&			
ANR	1068127	Identifier	src		1068118	0					
ANR	1068128	Identifier	SLJIT_MEM		1068118	1					
ANR	1068129	CompoundStatement		8:22:176:176	1068118	1					
ANR	1068130	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw ) )"	1303:2:42936:43028	1068118	0	True				
ANR	1068131	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw ) )"		1068118	0					
ANR	1068132	Callee	FAIL_IF		1068118	0					
ANR	1068133	Identifier	FAIL_IF		1068118	0					
ANR	1068134	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw )"		1068118	1					
ANR	1068135	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw )"		1068118	0					
ANR	1068136	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw )"		1068118	0					
ANR	1068137	Callee	emit_op_mem2		1068118	0					
ANR	1068138	Identifier	emit_op_mem2		1068118	0					
ANR	1068139	ArgumentList	compiler		1068118	1					
ANR	1068140	Argument	compiler		1068118	0					
ANR	1068141	Identifier	compiler		1068118	0					
ANR	1068142	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1068118	1					
ANR	1068143	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1068118	0		|			
ANR	1068144	CallExpression	FLOAT_DATA ( op )		1068118	0					
ANR	1068145	Callee	FLOAT_DATA		1068118	0					
ANR	1068146	Identifier	FLOAT_DATA		1068118	0					
ANR	1068147	ArgumentList	op		1068118	1					
ANR	1068148	Argument	op		1068118	0					
ANR	1068149	Identifier	op		1068118	0					
ANR	1068150	Identifier	LOAD_DATA		1068118	1					
ANR	1068151	Argument	TMP_FREG1		1068118	2					
ANR	1068152	Identifier	TMP_FREG1		1068118	0					
ANR	1068153	Argument	src		1068118	3					
ANR	1068154	Identifier	src		1068118	0					
ANR	1068155	Argument	srcw		1068118	4					
ANR	1068156	Identifier	srcw		1068118	0					
ANR	1068157	Argument	dst		1068118	5					
ANR	1068158	Identifier	dst		1068118	0					
ANR	1068159	Argument	dstw		1068118	6					
ANR	1068160	Identifier	dstw		1068118	0					
ANR	1068161	ExpressionStatement	src = TMP_FREG1	1304:2:43032:43047	1068118	1	True				
ANR	1068162	AssignmentExpression	src = TMP_FREG1		1068118	0		=			
ANR	1068163	Identifier	src		1068118	0					
ANR	1068164	Identifier	TMP_FREG1		1068118	1					
ANR	1068165	ElseStatement	else		1068118	0					
ANR	1068166	ExpressionStatement	src <<= 1	1307:2:43060:43069	1068118	0	True				
ANR	1068167	AssignmentExpression	src <<= 1		1068118	0		<<=			
ANR	1068168	Identifier	src		1068118	0					
ANR	1068169	PrimaryExpression	1		1068118	1					
ANR	1068170	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( TRUNC_W_S ^ ( flags >> 19 ) ) | FMT ( op ) | FS ( src ) | FD ( TMP_FREG1 ) , MOVABLE_INS ) )"	1309:1:43073:43179	1068118	4	True				
ANR	1068171	CallExpression	"FAIL_IF ( push_inst ( compiler , ( TRUNC_W_S ^ ( flags >> 19 ) ) | FMT ( op ) | FS ( src ) | FD ( TMP_FREG1 ) , MOVABLE_INS ) )"		1068118	0					
ANR	1068172	Callee	FAIL_IF		1068118	0					
ANR	1068173	Identifier	FAIL_IF		1068118	0					
ANR	1068174	ArgumentList	"push_inst ( compiler , ( TRUNC_W_S ^ ( flags >> 19 ) ) | FMT ( op ) | FS ( src ) | FD ( TMP_FREG1 ) , MOVABLE_INS )"		1068118	1					
ANR	1068175	Argument	"push_inst ( compiler , ( TRUNC_W_S ^ ( flags >> 19 ) ) | FMT ( op ) | FS ( src ) | FD ( TMP_FREG1 ) , MOVABLE_INS )"		1068118	0					
ANR	1068176	CallExpression	"push_inst ( compiler , ( TRUNC_W_S ^ ( flags >> 19 ) ) | FMT ( op ) | FS ( src ) | FD ( TMP_FREG1 ) , MOVABLE_INS )"		1068118	0					
ANR	1068177	Callee	push_inst		1068118	0					
ANR	1068178	Identifier	push_inst		1068118	0					
ANR	1068179	ArgumentList	compiler		1068118	1					
ANR	1068180	Argument	compiler		1068118	0					
ANR	1068181	Identifier	compiler		1068118	0					
ANR	1068182	Argument	( TRUNC_W_S ^ ( flags >> 19 ) ) | FMT ( op ) | FS ( src ) | FD ( TMP_FREG1 )		1068118	1					
ANR	1068183	InclusiveOrExpression	( TRUNC_W_S ^ ( flags >> 19 ) ) | FMT ( op ) | FS ( src ) | FD ( TMP_FREG1 )		1068118	0		|			
ANR	1068184	ExclusiveOrExpression	TRUNC_W_S ^ ( flags >> 19 )		1068118	0		^			
ANR	1068185	Identifier	TRUNC_W_S		1068118	0					
ANR	1068186	ShiftExpression	flags >> 19		1068118	1		>>			
ANR	1068187	Identifier	flags		1068118	0					
ANR	1068188	PrimaryExpression	19		1068118	1					
ANR	1068189	InclusiveOrExpression	FMT ( op ) | FS ( src ) | FD ( TMP_FREG1 )		1068118	1		|			
ANR	1068190	CallExpression	FMT ( op )		1068118	0					
ANR	1068191	Callee	FMT		1068118	0					
ANR	1068192	Identifier	FMT		1068118	0					
ANR	1068193	ArgumentList	op		1068118	1					
ANR	1068194	Argument	op		1068118	0					
ANR	1068195	Identifier	op		1068118	0					
ANR	1068196	InclusiveOrExpression	FS ( src ) | FD ( TMP_FREG1 )		1068118	1		|			
ANR	1068197	CallExpression	FS ( src )		1068118	0					
ANR	1068198	Callee	FS		1068118	0					
ANR	1068199	Identifier	FS		1068118	0					
ANR	1068200	ArgumentList	src		1068118	1					
ANR	1068201	Argument	src		1068118	0					
ANR	1068202	Identifier	src		1068118	0					
ANR	1068203	CallExpression	FD ( TMP_FREG1 )		1068118	1					
ANR	1068204	Callee	FD		1068118	0					
ANR	1068205	Identifier	FD		1068118	0					
ANR	1068206	ArgumentList	TMP_FREG1		1068118	1					
ANR	1068207	Argument	TMP_FREG1		1068118	0					
ANR	1068208	Identifier	TMP_FREG1		1068118	0					
ANR	1068209	Argument	MOVABLE_INS		1068118	2					
ANR	1068210	Identifier	MOVABLE_INS		1068118	0					
ANR	1068211	IfStatement	if ( dst == SLJIT_UNUSED )		1068118	5					
ANR	1068212	Condition	dst == SLJIT_UNUSED	1311:5:43187:43205	1068118	0	True				
ANR	1068213	EqualityExpression	dst == SLJIT_UNUSED		1068118	0		==			
ANR	1068214	Identifier	dst		1068118	0					
ANR	1068215	Identifier	SLJIT_UNUSED		1068118	1					
ANR	1068216	ReturnStatement	return SLJIT_SUCCESS ;	1312:2:43210:43230	1068118	1	True				
ANR	1068217	Identifier	SLJIT_SUCCESS		1068118	0					
ANR	1068218	IfStatement	if ( FAST_IS_REG ( dst ) )		1068118	6					
ANR	1068219	Condition	FAST_IS_REG ( dst )	1314:5:43238:43253	1068118	0	True				
ANR	1068220	CallExpression	FAST_IS_REG ( dst )		1068118	0					
ANR	1068221	Callee	FAST_IS_REG		1068118	0					
ANR	1068222	Identifier	FAST_IS_REG		1068118	0					
ANR	1068223	ArgumentList	dst		1068118	1					
ANR	1068224	Argument	dst		1068118	0					
ANR	1068225	Identifier	dst		1068118	0					
ANR	1068226	ReturnStatement	"return push_inst ( compiler , MFC1 | flags | T ( dst ) | FS ( TMP_FREG1 ) , MOVABLE_INS ) ;"	1315:2:43258:43336	1068118	1	True				
ANR	1068227	CallExpression	"push_inst ( compiler , MFC1 | flags | T ( dst ) | FS ( TMP_FREG1 ) , MOVABLE_INS )"		1068118	0					
ANR	1068228	Callee	push_inst		1068118	0					
ANR	1068229	Identifier	push_inst		1068118	0					
ANR	1068230	ArgumentList	compiler		1068118	1					
ANR	1068231	Argument	compiler		1068118	0					
ANR	1068232	Identifier	compiler		1068118	0					
ANR	1068233	Argument	MFC1 | flags | T ( dst ) | FS ( TMP_FREG1 )		1068118	1					
ANR	1068234	InclusiveOrExpression	MFC1 | flags | T ( dst ) | FS ( TMP_FREG1 )		1068118	0		|			
ANR	1068235	Identifier	MFC1		1068118	0					
ANR	1068236	InclusiveOrExpression	flags | T ( dst ) | FS ( TMP_FREG1 )		1068118	1		|			
ANR	1068237	Identifier	flags		1068118	0					
ANR	1068238	InclusiveOrExpression	T ( dst ) | FS ( TMP_FREG1 )		1068118	1		|			
ANR	1068239	CallExpression	T ( dst )		1068118	0					
ANR	1068240	Callee	T		1068118	0					
ANR	1068241	Identifier	T		1068118	0					
ANR	1068242	ArgumentList	dst		1068118	1					
ANR	1068243	Argument	dst		1068118	0					
ANR	1068244	Identifier	dst		1068118	0					
ANR	1068245	CallExpression	FS ( TMP_FREG1 )		1068118	1					
ANR	1068246	Callee	FS		1068118	0					
ANR	1068247	Identifier	FS		1068118	0					
ANR	1068248	ArgumentList	TMP_FREG1		1068118	1					
ANR	1068249	Argument	TMP_FREG1		1068118	0					
ANR	1068250	Identifier	TMP_FREG1		1068118	0					
ANR	1068251	Argument	MOVABLE_INS		1068118	2					
ANR	1068252	Identifier	MOVABLE_INS		1068118	0					
ANR	1068253	ReturnStatement	"return emit_op_mem2 ( compiler , flags ? DOUBLE_DATA : SINGLE_DATA , TMP_FREG1 , dst , dstw , 0 , 0 ) ;"	1318:1:43392:43484	1068118	7	True				
ANR	1068254	CallExpression	"emit_op_mem2 ( compiler , flags ? DOUBLE_DATA : SINGLE_DATA , TMP_FREG1 , dst , dstw , 0 , 0 )"		1068118	0					
ANR	1068255	Callee	emit_op_mem2		1068118	0					
ANR	1068256	Identifier	emit_op_mem2		1068118	0					
ANR	1068257	ArgumentList	compiler		1068118	1					
ANR	1068258	Argument	compiler		1068118	0					
ANR	1068259	Identifier	compiler		1068118	0					
ANR	1068260	Argument	flags ? DOUBLE_DATA : SINGLE_DATA		1068118	1					
ANR	1068261	ConditionalExpression	flags ? DOUBLE_DATA : SINGLE_DATA		1068118	0					
ANR	1068262	Condition	flags		1068118	0					
ANR	1068263	Identifier	flags		1068118	0					
ANR	1068264	Identifier	DOUBLE_DATA		1068118	1					
ANR	1068265	Identifier	SINGLE_DATA		1068118	2					
ANR	1068266	Argument	TMP_FREG1		1068118	2					
ANR	1068267	Identifier	TMP_FREG1		1068118	0					
ANR	1068268	Argument	dst		1068118	3					
ANR	1068269	Identifier	dst		1068118	0					
ANR	1068270	Argument	dstw		1068118	4					
ANR	1068271	Identifier	dstw		1068118	0					
ANR	1068272	Argument	0		1068118	5					
ANR	1068273	PrimaryExpression	0		1068118	0					
ANR	1068274	Argument	0		1068118	6					
ANR	1068275	PrimaryExpression	0		1068118	0					
ANR	1068276	Statement	undef	1321:2:43548:43552	1068118	8	True				
ANR	1068277	Statement	is_long	1321:8:43554:43560	1068118	9	True				
ANR	1068278	ReturnType	static SLJIT_INLINE sljit_si		1068118	1					
ANR	1068279	Identifier	sljit_emit_fop1_convw_fromd		1068118	2					
ANR	1068280	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1068118	3					
ANR	1068281	Parameter	struct sljit_compiler * compiler	1292:57:42649:42679	1068118	0	True				
ANR	1068282	ParameterType	struct sljit_compiler *		1068118	0					
ANR	1068283	Identifier	compiler		1068118	1					
ANR	1068284	Parameter	sljit_si op	1292:90:42682:42692	1068118	1	True				
ANR	1068285	ParameterType	sljit_si		1068118	0					
ANR	1068286	Identifier	op		1068118	1					
ANR	1068287	Parameter	sljit_si dst	1293:1:42696:42707	1068118	2	True				
ANR	1068288	ParameterType	sljit_si		1068118	0					
ANR	1068289	Identifier	dst		1068118	1					
ANR	1068290	Parameter	sljit_sw dstw	1293:15:42710:42722	1068118	3	True				
ANR	1068291	ParameterType	sljit_sw		1068118	0					
ANR	1068292	Identifier	dstw		1068118	1					
ANR	1068293	Parameter	sljit_si src	1294:1:42726:42737	1068118	4	True				
ANR	1068294	ParameterType	sljit_si		1068118	0					
ANR	1068295	Identifier	src		1068118	1					
ANR	1068296	Parameter	sljit_sw srcw	1294:15:42740:42752	1068118	5	True				
ANR	1068297	ParameterType	sljit_sw		1068118	0					
ANR	1068298	Identifier	srcw		1068118	1					
ANR	1068299	CFGEntryNode	ENTRY		1068118		True				
ANR	1068300	CFGExitNode	EXIT		1068118		True				
ANR	1068301	Symbol	MFC1		1068118						
ANR	1068302	Symbol	dst		1068118						
ANR	1068303	Symbol	FLOAT_DATA		1068118						
ANR	1068304	Symbol	LOAD_DATA		1068118						
ANR	1068305	Symbol	TMP_FREG1		1068118						
ANR	1068306	Symbol	TRUNC_W_S		1068118						
ANR	1068307	Symbol	SLJIT_MEM		1068118						
ANR	1068308	Symbol	flags		1068118						
ANR	1068309	Symbol	FS		1068118						
ANR	1068310	Symbol	T		1068118						
ANR	1068311	Symbol	SINGLE_DATA		1068118						
ANR	1068312	Symbol	compiler		1068118						
ANR	1068313	Symbol	op		1068118						
ANR	1068314	Symbol	push_inst		1068118						
ANR	1068315	Symbol	FAST_IS_REG		1068118						
ANR	1068316	Symbol	src		1068118						
ANR	1068317	Symbol	srcw		1068118						
ANR	1068318	Symbol	emit_op_mem2		1068118						
ANR	1068319	Symbol	SLJIT_SUCCESS		1068118						
ANR	1068320	Symbol	FMT		1068118						
ANR	1068321	Symbol	SLJIT_UNUSED		1068118						
ANR	1068322	Symbol	DOUBLE_DATA		1068118						
ANR	1068323	Symbol	MOVABLE_INS		1068118						
ANR	1068324	Symbol	dstw		1068118						
ANR	1068325	Symbol	FD		1068118						
ANR	1068326	Function	sljit_emit_fop1_convd_fromw	1325:0:43572:44910							
ANR	1068327	FunctionDef	"sljit_emit_fop1_convd_fromw (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1068326	0					
ANR	1068328	CompoundStatement		1328:0:43735:44910	1068326	0					
ANR	1068329	Statement	define	1330:2:43798:43803	1068326	0	True				
ANR	1068330	Statement	flags	1330:9:43805:43809	1068326	1	True				
ANR	1068331	Statement	0	1330:15:43811:43811	1068326	2	True				
ANR	1068332	IdentifierDeclStatement	sljit_si dst_r = FAST_IS_REG ( dst ) ? ( dst << 1 ) : TMP_FREG1 ;	1335:1:43891:43949	1068326	3	True				
ANR	1068333	IdentifierDecl	dst_r = FAST_IS_REG ( dst ) ? ( dst << 1 ) : TMP_FREG1		1068326	0					
ANR	1068334	IdentifierDeclType	sljit_si		1068326	0					
ANR	1068335	Identifier	dst_r		1068326	1					
ANR	1068336	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? ( dst << 1 ) : TMP_FREG1		1068326	2		=			
ANR	1068337	Identifier	dst_r		1068326	0					
ANR	1068338	ConditionalExpression	FAST_IS_REG ( dst ) ? ( dst << 1 ) : TMP_FREG1		1068326	1					
ANR	1068339	Condition	FAST_IS_REG ( dst )		1068326	0					
ANR	1068340	CallExpression	FAST_IS_REG ( dst )		1068326	0					
ANR	1068341	Callee	FAST_IS_REG		1068326	0					
ANR	1068342	Identifier	FAST_IS_REG		1068326	0					
ANR	1068343	ArgumentList	dst		1068326	1					
ANR	1068344	Argument	dst		1068326	0					
ANR	1068345	Identifier	dst		1068326	0					
ANR	1068346	ShiftExpression	dst << 1		1068326	1		<<			
ANR	1068347	Identifier	dst		1068326	0					
ANR	1068348	PrimaryExpression	1		1068326	1					
ANR	1068349	Identifier	TMP_FREG1		1068326	2					
ANR	1068350	IfStatement	if ( FAST_IS_REG ( src ) )		1068326	4					
ANR	1068351	Condition	FAST_IS_REG ( src )	1337:5:43957:43972	1068326	0	True				
ANR	1068352	CallExpression	FAST_IS_REG ( src )		1068326	0					
ANR	1068353	Callee	FAST_IS_REG		1068326	0					
ANR	1068354	Identifier	FAST_IS_REG		1068326	0					
ANR	1068355	ArgumentList	src		1068326	1					
ANR	1068356	Argument	src		1068326	0					
ANR	1068357	Identifier	src		1068326	0					
ANR	1068358	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MTC1 | flags | T ( src ) | FS ( TMP_FREG1 ) , MOVABLE_INS ) )"	1338:2:43977:44057	1068326	1	True				
ANR	1068359	CallExpression	"FAIL_IF ( push_inst ( compiler , MTC1 | flags | T ( src ) | FS ( TMP_FREG1 ) , MOVABLE_INS ) )"		1068326	0					
ANR	1068360	Callee	FAIL_IF		1068326	0					
ANR	1068361	Identifier	FAIL_IF		1068326	0					
ANR	1068362	ArgumentList	"push_inst ( compiler , MTC1 | flags | T ( src ) | FS ( TMP_FREG1 ) , MOVABLE_INS )"		1068326	1					
ANR	1068363	Argument	"push_inst ( compiler , MTC1 | flags | T ( src ) | FS ( TMP_FREG1 ) , MOVABLE_INS )"		1068326	0					
ANR	1068364	CallExpression	"push_inst ( compiler , MTC1 | flags | T ( src ) | FS ( TMP_FREG1 ) , MOVABLE_INS )"		1068326	0					
ANR	1068365	Callee	push_inst		1068326	0					
ANR	1068366	Identifier	push_inst		1068326	0					
ANR	1068367	ArgumentList	compiler		1068326	1					
ANR	1068368	Argument	compiler		1068326	0					
ANR	1068369	Identifier	compiler		1068326	0					
ANR	1068370	Argument	MTC1 | flags | T ( src ) | FS ( TMP_FREG1 )		1068326	1					
ANR	1068371	InclusiveOrExpression	MTC1 | flags | T ( src ) | FS ( TMP_FREG1 )		1068326	0		|			
ANR	1068372	Identifier	MTC1		1068326	0					
ANR	1068373	InclusiveOrExpression	flags | T ( src ) | FS ( TMP_FREG1 )		1068326	1		|			
ANR	1068374	Identifier	flags		1068326	0					
ANR	1068375	InclusiveOrExpression	T ( src ) | FS ( TMP_FREG1 )		1068326	1		|			
ANR	1068376	CallExpression	T ( src )		1068326	0					
ANR	1068377	Callee	T		1068326	0					
ANR	1068378	Identifier	T		1068326	0					
ANR	1068379	ArgumentList	src		1068326	1					
ANR	1068380	Argument	src		1068326	0					
ANR	1068381	Identifier	src		1068326	0					
ANR	1068382	CallExpression	FS ( TMP_FREG1 )		1068326	1					
ANR	1068383	Callee	FS		1068326	0					
ANR	1068384	Identifier	FS		1068326	0					
ANR	1068385	ArgumentList	TMP_FREG1		1068326	1					
ANR	1068386	Argument	TMP_FREG1		1068326	0					
ANR	1068387	Identifier	TMP_FREG1		1068326	0					
ANR	1068388	Argument	MOVABLE_INS		1068326	2					
ANR	1068389	Identifier	MOVABLE_INS		1068326	0					
ANR	1068390	ElseStatement	else		1068326	0					
ANR	1068391	IfStatement	if ( src & SLJIT_MEM )		1068326	0					
ANR	1068392	Condition	src & SLJIT_MEM	1339:10:44069:44083	1068326	0	True				
ANR	1068393	BitAndExpression	src & SLJIT_MEM		1068326	0		&			
ANR	1068394	Identifier	src		1068326	0					
ANR	1068395	Identifier	SLJIT_MEM		1068326	1					
ANR	1068396	CompoundStatement		12:27:350:350	1068326	1					
ANR	1068397	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , ( ( flags ) ? DOUBLE_DATA : SINGLE_DATA ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw ) )"	1341:2:44142:44257	1068326	0	True				
ANR	1068398	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , ( ( flags ) ? DOUBLE_DATA : SINGLE_DATA ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw ) )"		1068326	0					
ANR	1068399	Callee	FAIL_IF		1068326	0					
ANR	1068400	Identifier	FAIL_IF		1068326	0					
ANR	1068401	ArgumentList	"emit_op_mem2 ( compiler , ( ( flags ) ? DOUBLE_DATA : SINGLE_DATA ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw )"		1068326	1					
ANR	1068402	Argument	"emit_op_mem2 ( compiler , ( ( flags ) ? DOUBLE_DATA : SINGLE_DATA ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw )"		1068326	0					
ANR	1068403	CallExpression	"emit_op_mem2 ( compiler , ( ( flags ) ? DOUBLE_DATA : SINGLE_DATA ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw )"		1068326	0					
ANR	1068404	Callee	emit_op_mem2		1068326	0					
ANR	1068405	Identifier	emit_op_mem2		1068326	0					
ANR	1068406	ArgumentList	compiler		1068326	1					
ANR	1068407	Argument	compiler		1068326	0					
ANR	1068408	Identifier	compiler		1068326	0					
ANR	1068409	Argument	( ( flags ) ? DOUBLE_DATA : SINGLE_DATA ) | LOAD_DATA		1068326	1					
ANR	1068410	InclusiveOrExpression	( ( flags ) ? DOUBLE_DATA : SINGLE_DATA ) | LOAD_DATA		1068326	0		|			
ANR	1068411	ConditionalExpression	( flags ) ? DOUBLE_DATA : SINGLE_DATA		1068326	0					
ANR	1068412	Condition	flags		1068326	0					
ANR	1068413	Identifier	flags		1068326	0					
ANR	1068414	Identifier	DOUBLE_DATA		1068326	1					
ANR	1068415	Identifier	SINGLE_DATA		1068326	2					
ANR	1068416	Identifier	LOAD_DATA		1068326	1					
ANR	1068417	Argument	TMP_FREG1		1068326	2					
ANR	1068418	Identifier	TMP_FREG1		1068326	0					
ANR	1068419	Argument	src		1068326	3					
ANR	1068420	Identifier	src		1068326	0					
ANR	1068421	Argument	srcw		1068326	4					
ANR	1068422	Identifier	srcw		1068326	0					
ANR	1068423	Argument	dst		1068326	5					
ANR	1068424	Identifier	dst		1068326	0					
ANR	1068425	Argument	dstw		1068326	6					
ANR	1068426	Identifier	dstw		1068326	0					
ANR	1068427	ElseStatement	else		1068326	0					
ANR	1068428	CompoundStatement		16:6:532:532	1068326	0					
ANR	1068429	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMI )		1068326	0					
ANR	1068430	Condition	GET_OPCODE ( op ) == SLJIT_CONVD_FROMI	1345:6:44333:44367	1068326	0	True				
ANR	1068431	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVD_FROMI		1068326	0		==			
ANR	1068432	CallExpression	GET_OPCODE ( op )		1068326	0					
ANR	1068433	Callee	GET_OPCODE		1068326	0					
ANR	1068434	Identifier	GET_OPCODE		1068326	0					
ANR	1068435	ArgumentList	op		1068326	1					
ANR	1068436	Argument	op		1068326	0					
ANR	1068437	Identifier	op		1068326	0					
ANR	1068438	Identifier	SLJIT_CONVD_FROMI		1068326	1					
ANR	1068439	ExpressionStatement	srcw = ( sljit_si ) srcw	1346:3:44373:44394	1068326	1	True				
ANR	1068440	AssignmentExpression	srcw = ( sljit_si ) srcw		1068326	0		=			
ANR	1068441	Identifier	srcw		1068326	0					
ANR	1068442	CastExpression	( sljit_si ) srcw		1068326	1					
ANR	1068443	CastTarget	sljit_si		1068326	0					
ANR	1068444	Identifier	srcw		1068326	1					
ANR	1068445	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , DR ( TMP_REG1 ) , srcw ) )"	1348:2:44405:44458	1068326	1	True				
ANR	1068446	CallExpression	"FAIL_IF ( load_immediate ( compiler , DR ( TMP_REG1 ) , srcw ) )"		1068326	0					
ANR	1068447	Callee	FAIL_IF		1068326	0					
ANR	1068448	Identifier	FAIL_IF		1068326	0					
ANR	1068449	ArgumentList	"load_immediate ( compiler , DR ( TMP_REG1 ) , srcw )"		1068326	1					
ANR	1068450	Argument	"load_immediate ( compiler , DR ( TMP_REG1 ) , srcw )"		1068326	0					
ANR	1068451	CallExpression	"load_immediate ( compiler , DR ( TMP_REG1 ) , srcw )"		1068326	0					
ANR	1068452	Callee	load_immediate		1068326	0					
ANR	1068453	Identifier	load_immediate		1068326	0					
ANR	1068454	ArgumentList	compiler		1068326	1					
ANR	1068455	Argument	compiler		1068326	0					
ANR	1068456	Identifier	compiler		1068326	0					
ANR	1068457	Argument	DR ( TMP_REG1 )		1068326	1					
ANR	1068458	CallExpression	DR ( TMP_REG1 )		1068326	0					
ANR	1068459	Callee	DR		1068326	0					
ANR	1068460	Identifier	DR		1068326	0					
ANR	1068461	ArgumentList	TMP_REG1		1068326	1					
ANR	1068462	Argument	TMP_REG1		1068326	0					
ANR	1068463	Identifier	TMP_REG1		1068326	0					
ANR	1068464	Argument	srcw		1068326	2					
ANR	1068465	Identifier	srcw		1068326	0					
ANR	1068466	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MTC1 | flags | T ( TMP_REG1 ) | FS ( TMP_FREG1 ) , MOVABLE_INS ) )"	1349:2:44462:44547	1068326	2	True				
ANR	1068467	CallExpression	"FAIL_IF ( push_inst ( compiler , MTC1 | flags | T ( TMP_REG1 ) | FS ( TMP_FREG1 ) , MOVABLE_INS ) )"		1068326	0					
ANR	1068468	Callee	FAIL_IF		1068326	0					
ANR	1068469	Identifier	FAIL_IF		1068326	0					
ANR	1068470	ArgumentList	"push_inst ( compiler , MTC1 | flags | T ( TMP_REG1 ) | FS ( TMP_FREG1 ) , MOVABLE_INS )"		1068326	1					
ANR	1068471	Argument	"push_inst ( compiler , MTC1 | flags | T ( TMP_REG1 ) | FS ( TMP_FREG1 ) , MOVABLE_INS )"		1068326	0					
ANR	1068472	CallExpression	"push_inst ( compiler , MTC1 | flags | T ( TMP_REG1 ) | FS ( TMP_FREG1 ) , MOVABLE_INS )"		1068326	0					
ANR	1068473	Callee	push_inst		1068326	0					
ANR	1068474	Identifier	push_inst		1068326	0					
ANR	1068475	ArgumentList	compiler		1068326	1					
ANR	1068476	Argument	compiler		1068326	0					
ANR	1068477	Identifier	compiler		1068326	0					
ANR	1068478	Argument	MTC1 | flags | T ( TMP_REG1 ) | FS ( TMP_FREG1 )		1068326	1					
ANR	1068479	InclusiveOrExpression	MTC1 | flags | T ( TMP_REG1 ) | FS ( TMP_FREG1 )		1068326	0		|			
ANR	1068480	Identifier	MTC1		1068326	0					
ANR	1068481	InclusiveOrExpression	flags | T ( TMP_REG1 ) | FS ( TMP_FREG1 )		1068326	1		|			
ANR	1068482	Identifier	flags		1068326	0					
ANR	1068483	InclusiveOrExpression	T ( TMP_REG1 ) | FS ( TMP_FREG1 )		1068326	1		|			
ANR	1068484	CallExpression	T ( TMP_REG1 )		1068326	0					
ANR	1068485	Callee	T		1068326	0					
ANR	1068486	Identifier	T		1068326	0					
ANR	1068487	ArgumentList	TMP_REG1		1068326	1					
ANR	1068488	Argument	TMP_REG1		1068326	0					
ANR	1068489	Identifier	TMP_REG1		1068326	0					
ANR	1068490	CallExpression	FS ( TMP_FREG1 )		1068326	1					
ANR	1068491	Callee	FS		1068326	0					
ANR	1068492	Identifier	FS		1068326	0					
ANR	1068493	ArgumentList	TMP_FREG1		1068326	1					
ANR	1068494	Argument	TMP_FREG1		1068326	0					
ANR	1068495	Identifier	TMP_FREG1		1068326	0					
ANR	1068496	Argument	MOVABLE_INS		1068326	2					
ANR	1068497	Identifier	MOVABLE_INS		1068326	0					
ANR	1068498	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , CVT_S_S | flags | ( 4 << 21 ) | ( ( ( op & SLJIT_SINGLE_OP ) ^ SLJIT_SINGLE_OP ) >> 8 ) | FS ( TMP_FREG1 ) | FD ( dst_r ) , MOVABLE_INS ) )"	1352:1:44554:44704	1068326	5	True				
ANR	1068499	CallExpression	"FAIL_IF ( push_inst ( compiler , CVT_S_S | flags | ( 4 << 21 ) | ( ( ( op & SLJIT_SINGLE_OP ) ^ SLJIT_SINGLE_OP ) >> 8 ) | FS ( TMP_FREG1 ) | FD ( dst_r ) , MOVABLE_INS ) )"		1068326	0					
ANR	1068500	Callee	FAIL_IF		1068326	0					
ANR	1068501	Identifier	FAIL_IF		1068326	0					
ANR	1068502	ArgumentList	"push_inst ( compiler , CVT_S_S | flags | ( 4 << 21 ) | ( ( ( op & SLJIT_SINGLE_OP ) ^ SLJIT_SINGLE_OP ) >> 8 ) | FS ( TMP_FREG1 ) | FD ( dst_r ) , MOVABLE_INS )"		1068326	1					
ANR	1068503	Argument	"push_inst ( compiler , CVT_S_S | flags | ( 4 << 21 ) | ( ( ( op & SLJIT_SINGLE_OP ) ^ SLJIT_SINGLE_OP ) >> 8 ) | FS ( TMP_FREG1 ) | FD ( dst_r ) , MOVABLE_INS )"		1068326	0					
ANR	1068504	CallExpression	"push_inst ( compiler , CVT_S_S | flags | ( 4 << 21 ) | ( ( ( op & SLJIT_SINGLE_OP ) ^ SLJIT_SINGLE_OP ) >> 8 ) | FS ( TMP_FREG1 ) | FD ( dst_r ) , MOVABLE_INS )"		1068326	0					
ANR	1068505	Callee	push_inst		1068326	0					
ANR	1068506	Identifier	push_inst		1068326	0					
ANR	1068507	ArgumentList	compiler		1068326	1					
ANR	1068508	Argument	compiler		1068326	0					
ANR	1068509	Identifier	compiler		1068326	0					
ANR	1068510	Argument	CVT_S_S | flags | ( 4 << 21 ) | ( ( ( op & SLJIT_SINGLE_OP ) ^ SLJIT_SINGLE_OP ) >> 8 ) | FS ( TMP_FREG1 ) | FD ( dst_r )		1068326	1					
ANR	1068511	InclusiveOrExpression	CVT_S_S | flags | ( 4 << 21 ) | ( ( ( op & SLJIT_SINGLE_OP ) ^ SLJIT_SINGLE_OP ) >> 8 ) | FS ( TMP_FREG1 ) | FD ( dst_r )		1068326	0		|			
ANR	1068512	Identifier	CVT_S_S		1068326	0					
ANR	1068513	InclusiveOrExpression	flags | ( 4 << 21 ) | ( ( ( op & SLJIT_SINGLE_OP ) ^ SLJIT_SINGLE_OP ) >> 8 ) | FS ( TMP_FREG1 ) | FD ( dst_r )		1068326	1		|			
ANR	1068514	Identifier	flags		1068326	0					
ANR	1068515	InclusiveOrExpression	( 4 << 21 ) | ( ( ( op & SLJIT_SINGLE_OP ) ^ SLJIT_SINGLE_OP ) >> 8 ) | FS ( TMP_FREG1 ) | FD ( dst_r )		1068326	1		|			
ANR	1068516	ShiftExpression	4 << 21		1068326	0		<<			
ANR	1068517	PrimaryExpression	4		1068326	0					
ANR	1068518	PrimaryExpression	21		1068326	1					
ANR	1068519	InclusiveOrExpression	( ( ( op & SLJIT_SINGLE_OP ) ^ SLJIT_SINGLE_OP ) >> 8 ) | FS ( TMP_FREG1 ) | FD ( dst_r )		1068326	1		|			
ANR	1068520	ShiftExpression	( ( op & SLJIT_SINGLE_OP ) ^ SLJIT_SINGLE_OP ) >> 8		1068326	0		>>			
ANR	1068521	ExclusiveOrExpression	( op & SLJIT_SINGLE_OP ) ^ SLJIT_SINGLE_OP		1068326	0		^			
ANR	1068522	BitAndExpression	op & SLJIT_SINGLE_OP		1068326	0		&			
ANR	1068523	Identifier	op		1068326	0					
ANR	1068524	Identifier	SLJIT_SINGLE_OP		1068326	1					
ANR	1068525	Identifier	SLJIT_SINGLE_OP		1068326	1					
ANR	1068526	PrimaryExpression	8		1068326	1					
ANR	1068527	InclusiveOrExpression	FS ( TMP_FREG1 ) | FD ( dst_r )		1068326	1		|			
ANR	1068528	CallExpression	FS ( TMP_FREG1 )		1068326	0					
ANR	1068529	Callee	FS		1068326	0					
ANR	1068530	Identifier	FS		1068326	0					
ANR	1068531	ArgumentList	TMP_FREG1		1068326	1					
ANR	1068532	Argument	TMP_FREG1		1068326	0					
ANR	1068533	Identifier	TMP_FREG1		1068326	0					
ANR	1068534	CallExpression	FD ( dst_r )		1068326	1					
ANR	1068535	Callee	FD		1068326	0					
ANR	1068536	Identifier	FD		1068326	0					
ANR	1068537	ArgumentList	dst_r		1068326	1					
ANR	1068538	Argument	dst_r		1068326	0					
ANR	1068539	Identifier	dst_r		1068326	0					
ANR	1068540	Argument	MOVABLE_INS		1068326	2					
ANR	1068541	Identifier	MOVABLE_INS		1068326	0					
ANR	1068542	IfStatement	if ( dst & SLJIT_MEM )		1068326	6					
ANR	1068543	Condition	dst & SLJIT_MEM	1354:5:44712:44726	1068326	0	True				
ANR	1068544	BitAndExpression	dst & SLJIT_MEM		1068326	0		&			
ANR	1068545	Identifier	dst		1068326	0					
ANR	1068546	Identifier	SLJIT_MEM		1068326	1					
ANR	1068547	ReturnStatement	"return emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG1 , dst , dstw , 0 , 0 ) ;"	1355:2:44731:44804	1068326	1	True				
ANR	1068548	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG1 , dst , dstw , 0 , 0 )"		1068326	0					
ANR	1068549	Callee	emit_op_mem2		1068326	0					
ANR	1068550	Identifier	emit_op_mem2		1068326	0					
ANR	1068551	ArgumentList	compiler		1068326	1					
ANR	1068552	Argument	compiler		1068326	0					
ANR	1068553	Identifier	compiler		1068326	0					
ANR	1068554	Argument	FLOAT_DATA ( op )		1068326	1					
ANR	1068555	CallExpression	FLOAT_DATA ( op )		1068326	0					
ANR	1068556	Callee	FLOAT_DATA		1068326	0					
ANR	1068557	Identifier	FLOAT_DATA		1068326	0					
ANR	1068558	ArgumentList	op		1068326	1					
ANR	1068559	Argument	op		1068326	0					
ANR	1068560	Identifier	op		1068326	0					
ANR	1068561	Argument	TMP_FREG1		1068326	2					
ANR	1068562	Identifier	TMP_FREG1		1068326	0					
ANR	1068563	Argument	dst		1068326	3					
ANR	1068564	Identifier	dst		1068326	0					
ANR	1068565	Argument	dstw		1068326	4					
ANR	1068566	Identifier	dstw		1068326	0					
ANR	1068567	Argument	0		1068326	5					
ANR	1068568	PrimaryExpression	0		1068326	0					
ANR	1068569	Argument	0		1068326	6					
ANR	1068570	PrimaryExpression	0		1068326	0					
ANR	1068571	ReturnStatement	return SLJIT_SUCCESS ;	1356:1:44807:44827	1068326	7	True				
ANR	1068572	Identifier	SLJIT_SUCCESS		1068326	0					
ANR	1068573	Statement	undef	1359:2:44891:44895	1068326	8	True				
ANR	1068574	Statement	flags	1359:8:44897:44901	1068326	9	True				
ANR	1068575	ReturnType	static SLJIT_INLINE sljit_si		1068326	1					
ANR	1068576	Identifier	sljit_emit_fop1_convd_fromw		1068326	2					
ANR	1068577	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1068326	3					
ANR	1068578	Parameter	struct sljit_compiler * compiler	1325:57:43629:43659	1068326	0	True				
ANR	1068579	ParameterType	struct sljit_compiler *		1068326	0					
ANR	1068580	Identifier	compiler		1068326	1					
ANR	1068581	Parameter	sljit_si op	1325:90:43662:43672	1068326	1	True				
ANR	1068582	ParameterType	sljit_si		1068326	0					
ANR	1068583	Identifier	op		1068326	1					
ANR	1068584	Parameter	sljit_si dst	1326:1:43676:43687	1068326	2	True				
ANR	1068585	ParameterType	sljit_si		1068326	0					
ANR	1068586	Identifier	dst		1068326	1					
ANR	1068587	Parameter	sljit_sw dstw	1326:15:43690:43702	1068326	3	True				
ANR	1068588	ParameterType	sljit_sw		1068326	0					
ANR	1068589	Identifier	dstw		1068326	1					
ANR	1068590	Parameter	sljit_si src	1327:1:43706:43717	1068326	4	True				
ANR	1068591	ParameterType	sljit_si		1068326	0					
ANR	1068592	Identifier	src		1068326	1					
ANR	1068593	Parameter	sljit_sw srcw	1327:15:43720:43732	1068326	5	True				
ANR	1068594	ParameterType	sljit_sw		1068326	0					
ANR	1068595	Identifier	srcw		1068326	1					
ANR	1068596	CFGEntryNode	ENTRY		1068326		True				
ANR	1068597	CFGExitNode	EXIT		1068326		True				
ANR	1068598	Symbol	TMP_REG1		1068326						
ANR	1068599	Symbol	dst		1068326						
ANR	1068600	Symbol	LOAD_DATA		1068326						
ANR	1068601	Symbol	FLOAT_DATA		1068326						
ANR	1068602	Symbol	TMP_FREG1		1068326						
ANR	1068603	Symbol	SLJIT_MEM		1068326						
ANR	1068604	Symbol	flags		1068326						
ANR	1068605	Symbol	FS		1068326						
ANR	1068606	Symbol	DR		1068326						
ANR	1068607	Symbol	dst_r		1068326						
ANR	1068608	Symbol	GET_OPCODE		1068326						
ANR	1068609	Symbol	MTC1		1068326						
ANR	1068610	Symbol	SLJIT_CONVD_FROMI		1068326						
ANR	1068611	Symbol	T		1068326						
ANR	1068612	Symbol	load_immediate		1068326						
ANR	1068613	Symbol	SINGLE_DATA		1068326						
ANR	1068614	Symbol	compiler		1068326						
ANR	1068615	Symbol	op		1068326						
ANR	1068616	Symbol	push_inst		1068326						
ANR	1068617	Symbol	FAST_IS_REG		1068326						
ANR	1068618	Symbol	src		1068326						
ANR	1068619	Symbol	srcw		1068326						
ANR	1068620	Symbol	CVT_S_S		1068326						
ANR	1068621	Symbol	SLJIT_SINGLE_OP		1068326						
ANR	1068622	Symbol	emit_op_mem2		1068326						
ANR	1068623	Symbol	SLJIT_SUCCESS		1068326						
ANR	1068624	Symbol	DOUBLE_DATA		1068326						
ANR	1068625	Symbol	MOVABLE_INS		1068326						
ANR	1068626	Symbol	dstw		1068326						
ANR	1068627	Symbol	FD		1068326						
ANR	1068628	Function	sljit_emit_fop1_cmp	1363:0:44913:46727							
ANR	1068629	FunctionDef	"sljit_emit_fop1_cmp (struct sljit_compiler * compiler , sljit_si op , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1068628	0					
ANR	1068630	CompoundStatement		1366:0:45072:46727	1068628	0					
ANR	1068631	IfStatement	if ( src1 & SLJIT_MEM )		1068628	0					
ANR	1068632	Condition	src1 & SLJIT_MEM	1367:5:45079:45094	1068628	0	True				
ANR	1068633	BitAndExpression	src1 & SLJIT_MEM		1068628	0		&			
ANR	1068634	Identifier	src1		1068628	0					
ANR	1068635	Identifier	SLJIT_MEM		1068628	1					
ANR	1068636	CompoundStatement		2:23:24:24	1068628	1					
ANR	1068637	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w ) )"	1368:2:45101:45197	1068628	0	True				
ANR	1068638	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w ) )"		1068628	0					
ANR	1068639	Callee	FAIL_IF		1068628	0					
ANR	1068640	Identifier	FAIL_IF		1068628	0					
ANR	1068641	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1068628	1					
ANR	1068642	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1068628	0					
ANR	1068643	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1068628	0					
ANR	1068644	Callee	emit_op_mem2		1068628	0					
ANR	1068645	Identifier	emit_op_mem2		1068628	0					
ANR	1068646	ArgumentList	compiler		1068628	1					
ANR	1068647	Argument	compiler		1068628	0					
ANR	1068648	Identifier	compiler		1068628	0					
ANR	1068649	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1068628	1					
ANR	1068650	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1068628	0		|			
ANR	1068651	CallExpression	FLOAT_DATA ( op )		1068628	0					
ANR	1068652	Callee	FLOAT_DATA		1068628	0					
ANR	1068653	Identifier	FLOAT_DATA		1068628	0					
ANR	1068654	ArgumentList	op		1068628	1					
ANR	1068655	Argument	op		1068628	0					
ANR	1068656	Identifier	op		1068628	0					
ANR	1068657	Identifier	LOAD_DATA		1068628	1					
ANR	1068658	Argument	TMP_FREG1		1068628	2					
ANR	1068659	Identifier	TMP_FREG1		1068628	0					
ANR	1068660	Argument	src1		1068628	3					
ANR	1068661	Identifier	src1		1068628	0					
ANR	1068662	Argument	src1w		1068628	4					
ANR	1068663	Identifier	src1w		1068628	0					
ANR	1068664	Argument	src2		1068628	5					
ANR	1068665	Identifier	src2		1068628	0					
ANR	1068666	Argument	src2w		1068628	6					
ANR	1068667	Identifier	src2w		1068628	0					
ANR	1068668	ExpressionStatement	src1 = TMP_FREG1	1369:2:45201:45217	1068628	1	True				
ANR	1068669	AssignmentExpression	src1 = TMP_FREG1		1068628	0		=			
ANR	1068670	Identifier	src1		1068628	0					
ANR	1068671	Identifier	TMP_FREG1		1068628	1					
ANR	1068672	ElseStatement	else		1068628	0					
ANR	1068673	ExpressionStatement	src1 <<= 1	1372:2:45230:45240	1068628	0	True				
ANR	1068674	AssignmentExpression	src1 <<= 1		1068628	0		<<=			
ANR	1068675	Identifier	src1		1068628	0					
ANR	1068676	PrimaryExpression	1		1068628	1					
ANR	1068677	IfStatement	if ( src2 & SLJIT_MEM )		1068628	1					
ANR	1068678	Condition	src2 & SLJIT_MEM	1374:5:45248:45263	1068628	0	True				
ANR	1068679	BitAndExpression	src2 & SLJIT_MEM		1068628	0		&			
ANR	1068680	Identifier	src2		1068628	0					
ANR	1068681	Identifier	SLJIT_MEM		1068628	1					
ANR	1068682	CompoundStatement		9:23:193:193	1068628	1					
ANR	1068683	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 ) )"	1375:2:45270:45359	1068628	0	True				
ANR	1068684	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 ) )"		1068628	0					
ANR	1068685	Callee	FAIL_IF		1068628	0					
ANR	1068686	Identifier	FAIL_IF		1068628	0					
ANR	1068687	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 )"		1068628	1					
ANR	1068688	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 )"		1068628	0					
ANR	1068689	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 )"		1068628	0					
ANR	1068690	Callee	emit_op_mem2		1068628	0					
ANR	1068691	Identifier	emit_op_mem2		1068628	0					
ANR	1068692	ArgumentList	compiler		1068628	1					
ANR	1068693	Argument	compiler		1068628	0					
ANR	1068694	Identifier	compiler		1068628	0					
ANR	1068695	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1068628	1					
ANR	1068696	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1068628	0		|			
ANR	1068697	CallExpression	FLOAT_DATA ( op )		1068628	0					
ANR	1068698	Callee	FLOAT_DATA		1068628	0					
ANR	1068699	Identifier	FLOAT_DATA		1068628	0					
ANR	1068700	ArgumentList	op		1068628	1					
ANR	1068701	Argument	op		1068628	0					
ANR	1068702	Identifier	op		1068628	0					
ANR	1068703	Identifier	LOAD_DATA		1068628	1					
ANR	1068704	Argument	TMP_FREG2		1068628	2					
ANR	1068705	Identifier	TMP_FREG2		1068628	0					
ANR	1068706	Argument	src2		1068628	3					
ANR	1068707	Identifier	src2		1068628	0					
ANR	1068708	Argument	src2w		1068628	4					
ANR	1068709	Identifier	src2w		1068628	0					
ANR	1068710	Argument	0		1068628	5					
ANR	1068711	PrimaryExpression	0		1068628	0					
ANR	1068712	Argument	0		1068628	6					
ANR	1068713	PrimaryExpression	0		1068628	0					
ANR	1068714	ExpressionStatement	src2 = TMP_FREG2	1376:2:45363:45379	1068628	1	True				
ANR	1068715	AssignmentExpression	src2 = TMP_FREG2		1068628	0		=			
ANR	1068716	Identifier	src2		1068628	0					
ANR	1068717	Identifier	TMP_FREG2		1068628	1					
ANR	1068718	ElseStatement	else		1068628	0					
ANR	1068719	ExpressionStatement	src2 <<= 1	1379:2:45392:45402	1068628	0	True				
ANR	1068720	AssignmentExpression	src2 <<= 1		1068628	0		<<=			
ANR	1068721	Identifier	src2		1068628	0					
ANR	1068722	PrimaryExpression	1		1068628	1					
ANR	1068723	IfStatement	if ( op & SLJIT_SET_E )		1068628	2					
ANR	1068724	Condition	op & SLJIT_SET_E	1382:5:45444:45459	1068628	0	True				
ANR	1068725	BitAndExpression	op & SLJIT_SET_E		1068628	0		&			
ANR	1068726	Identifier	op		1068628	0					
ANR	1068727	Identifier	SLJIT_SET_E		1068628	1					
ANR	1068728	CompoundStatement		17:23:389:389	1068628	1					
ANR	1068729	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , C_UEQ_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) , UNMOVABLE_INS ) )"	1383:2:45466:45550	1068628	0	True				
ANR	1068730	CallExpression	"FAIL_IF ( push_inst ( compiler , C_UEQ_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) , UNMOVABLE_INS ) )"		1068628	0					
ANR	1068731	Callee	FAIL_IF		1068628	0					
ANR	1068732	Identifier	FAIL_IF		1068628	0					
ANR	1068733	ArgumentList	"push_inst ( compiler , C_UEQ_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) , UNMOVABLE_INS )"		1068628	1					
ANR	1068734	Argument	"push_inst ( compiler , C_UEQ_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) , UNMOVABLE_INS )"		1068628	0					
ANR	1068735	CallExpression	"push_inst ( compiler , C_UEQ_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) , UNMOVABLE_INS )"		1068628	0					
ANR	1068736	Callee	push_inst		1068628	0					
ANR	1068737	Identifier	push_inst		1068628	0					
ANR	1068738	ArgumentList	compiler		1068628	1					
ANR	1068739	Argument	compiler		1068628	0					
ANR	1068740	Identifier	compiler		1068628	0					
ANR	1068741	Argument	C_UEQ_S | FMT ( op ) | FT ( src2 ) | FS ( src1 )		1068628	1					
ANR	1068742	InclusiveOrExpression	C_UEQ_S | FMT ( op ) | FT ( src2 ) | FS ( src1 )		1068628	0		|			
ANR	1068743	Identifier	C_UEQ_S		1068628	0					
ANR	1068744	InclusiveOrExpression	FMT ( op ) | FT ( src2 ) | FS ( src1 )		1068628	1		|			
ANR	1068745	CallExpression	FMT ( op )		1068628	0					
ANR	1068746	Callee	FMT		1068628	0					
ANR	1068747	Identifier	FMT		1068628	0					
ANR	1068748	ArgumentList	op		1068628	1					
ANR	1068749	Argument	op		1068628	0					
ANR	1068750	Identifier	op		1068628	0					
ANR	1068751	InclusiveOrExpression	FT ( src2 ) | FS ( src1 )		1068628	1		|			
ANR	1068752	CallExpression	FT ( src2 )		1068628	0					
ANR	1068753	Callee	FT		1068628	0					
ANR	1068754	Identifier	FT		1068628	0					
ANR	1068755	ArgumentList	src2		1068628	1					
ANR	1068756	Argument	src2		1068628	0					
ANR	1068757	Identifier	src2		1068628	0					
ANR	1068758	CallExpression	FS ( src1 )		1068628	1					
ANR	1068759	Callee	FS		1068628	0					
ANR	1068760	Identifier	FS		1068628	0					
ANR	1068761	ArgumentList	src1		1068628	1					
ANR	1068762	Argument	src1		1068628	0					
ANR	1068763	Identifier	src1		1068628	0					
ANR	1068764	Argument	UNMOVABLE_INS		1068628	2					
ANR	1068765	Identifier	UNMOVABLE_INS		1068628	0					
ANR	1068766	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , CFC1 | TA ( EQUAL_FLAG ) | DA ( FCSR_REG ) , EQUAL_FLAG ) )"	1384:2:45554:45632	1068628	1	True				
ANR	1068767	CallExpression	"FAIL_IF ( push_inst ( compiler , CFC1 | TA ( EQUAL_FLAG ) | DA ( FCSR_REG ) , EQUAL_FLAG ) )"		1068628	0					
ANR	1068768	Callee	FAIL_IF		1068628	0					
ANR	1068769	Identifier	FAIL_IF		1068628	0					
ANR	1068770	ArgumentList	"push_inst ( compiler , CFC1 | TA ( EQUAL_FLAG ) | DA ( FCSR_REG ) , EQUAL_FLAG )"		1068628	1					
ANR	1068771	Argument	"push_inst ( compiler , CFC1 | TA ( EQUAL_FLAG ) | DA ( FCSR_REG ) , EQUAL_FLAG )"		1068628	0					
ANR	1068772	CallExpression	"push_inst ( compiler , CFC1 | TA ( EQUAL_FLAG ) | DA ( FCSR_REG ) , EQUAL_FLAG )"		1068628	0					
ANR	1068773	Callee	push_inst		1068628	0					
ANR	1068774	Identifier	push_inst		1068628	0					
ANR	1068775	ArgumentList	compiler		1068628	1					
ANR	1068776	Argument	compiler		1068628	0					
ANR	1068777	Identifier	compiler		1068628	0					
ANR	1068778	Argument	CFC1 | TA ( EQUAL_FLAG ) | DA ( FCSR_REG )		1068628	1					
ANR	1068779	InclusiveOrExpression	CFC1 | TA ( EQUAL_FLAG ) | DA ( FCSR_REG )		1068628	0		|			
ANR	1068780	Identifier	CFC1		1068628	0					
ANR	1068781	InclusiveOrExpression	TA ( EQUAL_FLAG ) | DA ( FCSR_REG )		1068628	1		|			
ANR	1068782	CallExpression	TA ( EQUAL_FLAG )		1068628	0					
ANR	1068783	Callee	TA		1068628	0					
ANR	1068784	Identifier	TA		1068628	0					
ANR	1068785	ArgumentList	EQUAL_FLAG		1068628	1					
ANR	1068786	Argument	EQUAL_FLAG		1068628	0					
ANR	1068787	Identifier	EQUAL_FLAG		1068628	0					
ANR	1068788	CallExpression	DA ( FCSR_REG )		1068628	1					
ANR	1068789	Callee	DA		1068628	0					
ANR	1068790	Identifier	DA		1068628	0					
ANR	1068791	ArgumentList	FCSR_REG		1068628	1					
ANR	1068792	Argument	FCSR_REG		1068628	0					
ANR	1068793	Identifier	FCSR_REG		1068628	0					
ANR	1068794	Argument	EQUAL_FLAG		1068628	2					
ANR	1068795	Identifier	EQUAL_FLAG		1068628	0					
ANR	1068796	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SRL | TA ( EQUAL_FLAG ) | DA ( EQUAL_FLAG ) | SH_IMM ( 23 ) , EQUAL_FLAG ) )"	1385:2:45636:45728	1068628	2	True				
ANR	1068797	CallExpression	"FAIL_IF ( push_inst ( compiler , SRL | TA ( EQUAL_FLAG ) | DA ( EQUAL_FLAG ) | SH_IMM ( 23 ) , EQUAL_FLAG ) )"		1068628	0					
ANR	1068798	Callee	FAIL_IF		1068628	0					
ANR	1068799	Identifier	FAIL_IF		1068628	0					
ANR	1068800	ArgumentList	"push_inst ( compiler , SRL | TA ( EQUAL_FLAG ) | DA ( EQUAL_FLAG ) | SH_IMM ( 23 ) , EQUAL_FLAG )"		1068628	1					
ANR	1068801	Argument	"push_inst ( compiler , SRL | TA ( EQUAL_FLAG ) | DA ( EQUAL_FLAG ) | SH_IMM ( 23 ) , EQUAL_FLAG )"		1068628	0					
ANR	1068802	CallExpression	"push_inst ( compiler , SRL | TA ( EQUAL_FLAG ) | DA ( EQUAL_FLAG ) | SH_IMM ( 23 ) , EQUAL_FLAG )"		1068628	0					
ANR	1068803	Callee	push_inst		1068628	0					
ANR	1068804	Identifier	push_inst		1068628	0					
ANR	1068805	ArgumentList	compiler		1068628	1					
ANR	1068806	Argument	compiler		1068628	0					
ANR	1068807	Identifier	compiler		1068628	0					
ANR	1068808	Argument	SRL | TA ( EQUAL_FLAG ) | DA ( EQUAL_FLAG ) | SH_IMM ( 23 )		1068628	1					
ANR	1068809	InclusiveOrExpression	SRL | TA ( EQUAL_FLAG ) | DA ( EQUAL_FLAG ) | SH_IMM ( 23 )		1068628	0		|			
ANR	1068810	Identifier	SRL		1068628	0					
ANR	1068811	InclusiveOrExpression	TA ( EQUAL_FLAG ) | DA ( EQUAL_FLAG ) | SH_IMM ( 23 )		1068628	1		|			
ANR	1068812	CallExpression	TA ( EQUAL_FLAG )		1068628	0					
ANR	1068813	Callee	TA		1068628	0					
ANR	1068814	Identifier	TA		1068628	0					
ANR	1068815	ArgumentList	EQUAL_FLAG		1068628	1					
ANR	1068816	Argument	EQUAL_FLAG		1068628	0					
ANR	1068817	Identifier	EQUAL_FLAG		1068628	0					
ANR	1068818	InclusiveOrExpression	DA ( EQUAL_FLAG ) | SH_IMM ( 23 )		1068628	1		|			
ANR	1068819	CallExpression	DA ( EQUAL_FLAG )		1068628	0					
ANR	1068820	Callee	DA		1068628	0					
ANR	1068821	Identifier	DA		1068628	0					
ANR	1068822	ArgumentList	EQUAL_FLAG		1068628	1					
ANR	1068823	Argument	EQUAL_FLAG		1068628	0					
ANR	1068824	Identifier	EQUAL_FLAG		1068628	0					
ANR	1068825	CallExpression	SH_IMM ( 23 )		1068628	1					
ANR	1068826	Callee	SH_IMM		1068628	0					
ANR	1068827	Identifier	SH_IMM		1068628	0					
ANR	1068828	ArgumentList	23		1068628	1					
ANR	1068829	Argument	23		1068628	0					
ANR	1068830	PrimaryExpression	23		1068628	0					
ANR	1068831	Argument	EQUAL_FLAG		1068628	2					
ANR	1068832	Identifier	EQUAL_FLAG		1068628	0					
ANR	1068833	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ANDI | SA ( EQUAL_FLAG ) | TA ( EQUAL_FLAG ) | IMM ( 1 ) , EQUAL_FLAG ) )"	1386:2:45732:45821	1068628	3	True				
ANR	1068834	CallExpression	"FAIL_IF ( push_inst ( compiler , ANDI | SA ( EQUAL_FLAG ) | TA ( EQUAL_FLAG ) | IMM ( 1 ) , EQUAL_FLAG ) )"		1068628	0					
ANR	1068835	Callee	FAIL_IF		1068628	0					
ANR	1068836	Identifier	FAIL_IF		1068628	0					
ANR	1068837	ArgumentList	"push_inst ( compiler , ANDI | SA ( EQUAL_FLAG ) | TA ( EQUAL_FLAG ) | IMM ( 1 ) , EQUAL_FLAG )"		1068628	1					
ANR	1068838	Argument	"push_inst ( compiler , ANDI | SA ( EQUAL_FLAG ) | TA ( EQUAL_FLAG ) | IMM ( 1 ) , EQUAL_FLAG )"		1068628	0					
ANR	1068839	CallExpression	"push_inst ( compiler , ANDI | SA ( EQUAL_FLAG ) | TA ( EQUAL_FLAG ) | IMM ( 1 ) , EQUAL_FLAG )"		1068628	0					
ANR	1068840	Callee	push_inst		1068628	0					
ANR	1068841	Identifier	push_inst		1068628	0					
ANR	1068842	ArgumentList	compiler		1068628	1					
ANR	1068843	Argument	compiler		1068628	0					
ANR	1068844	Identifier	compiler		1068628	0					
ANR	1068845	Argument	ANDI | SA ( EQUAL_FLAG ) | TA ( EQUAL_FLAG ) | IMM ( 1 )		1068628	1					
ANR	1068846	InclusiveOrExpression	ANDI | SA ( EQUAL_FLAG ) | TA ( EQUAL_FLAG ) | IMM ( 1 )		1068628	0		|			
ANR	1068847	Identifier	ANDI		1068628	0					
ANR	1068848	InclusiveOrExpression	SA ( EQUAL_FLAG ) | TA ( EQUAL_FLAG ) | IMM ( 1 )		1068628	1		|			
ANR	1068849	CallExpression	SA ( EQUAL_FLAG )		1068628	0					
ANR	1068850	Callee	SA		1068628	0					
ANR	1068851	Identifier	SA		1068628	0					
ANR	1068852	ArgumentList	EQUAL_FLAG		1068628	1					
ANR	1068853	Argument	EQUAL_FLAG		1068628	0					
ANR	1068854	Identifier	EQUAL_FLAG		1068628	0					
ANR	1068855	InclusiveOrExpression	TA ( EQUAL_FLAG ) | IMM ( 1 )		1068628	1		|			
ANR	1068856	CallExpression	TA ( EQUAL_FLAG )		1068628	0					
ANR	1068857	Callee	TA		1068628	0					
ANR	1068858	Identifier	TA		1068628	0					
ANR	1068859	ArgumentList	EQUAL_FLAG		1068628	1					
ANR	1068860	Argument	EQUAL_FLAG		1068628	0					
ANR	1068861	Identifier	EQUAL_FLAG		1068628	0					
ANR	1068862	CallExpression	IMM ( 1 )		1068628	1					
ANR	1068863	Callee	IMM		1068628	0					
ANR	1068864	Identifier	IMM		1068628	0					
ANR	1068865	ArgumentList	1		1068628	1					
ANR	1068866	Argument	1		1068628	0					
ANR	1068867	PrimaryExpression	1		1068628	0					
ANR	1068868	Argument	EQUAL_FLAG		1068628	2					
ANR	1068869	Identifier	EQUAL_FLAG		1068628	0					
ANR	1068870	IfStatement	if ( op & SLJIT_SET_S )		1068628	3					
ANR	1068871	Condition	op & SLJIT_SET_S	1388:5:45831:45846	1068628	0	True				
ANR	1068872	BitAndExpression	op & SLJIT_SET_S		1068628	0		&			
ANR	1068873	Identifier	op		1068628	0					
ANR	1068874	Identifier	SLJIT_SET_S		1068628	1					
ANR	1068875	CompoundStatement		23:23:776:776	1068628	1					
ANR	1068876	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , C_ULT_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) , UNMOVABLE_INS ) )"	1390:2:45905:45989	1068628	0	True				
ANR	1068877	CallExpression	"FAIL_IF ( push_inst ( compiler , C_ULT_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) , UNMOVABLE_INS ) )"		1068628	0					
ANR	1068878	Callee	FAIL_IF		1068628	0					
ANR	1068879	Identifier	FAIL_IF		1068628	0					
ANR	1068880	ArgumentList	"push_inst ( compiler , C_ULT_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) , UNMOVABLE_INS )"		1068628	1					
ANR	1068881	Argument	"push_inst ( compiler , C_ULT_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) , UNMOVABLE_INS )"		1068628	0					
ANR	1068882	CallExpression	"push_inst ( compiler , C_ULT_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) , UNMOVABLE_INS )"		1068628	0					
ANR	1068883	Callee	push_inst		1068628	0					
ANR	1068884	Identifier	push_inst		1068628	0					
ANR	1068885	ArgumentList	compiler		1068628	1					
ANR	1068886	Argument	compiler		1068628	0					
ANR	1068887	Identifier	compiler		1068628	0					
ANR	1068888	Argument	C_ULT_S | FMT ( op ) | FT ( src2 ) | FS ( src1 )		1068628	1					
ANR	1068889	InclusiveOrExpression	C_ULT_S | FMT ( op ) | FT ( src2 ) | FS ( src1 )		1068628	0		|			
ANR	1068890	Identifier	C_ULT_S		1068628	0					
ANR	1068891	InclusiveOrExpression	FMT ( op ) | FT ( src2 ) | FS ( src1 )		1068628	1		|			
ANR	1068892	CallExpression	FMT ( op )		1068628	0					
ANR	1068893	Callee	FMT		1068628	0					
ANR	1068894	Identifier	FMT		1068628	0					
ANR	1068895	ArgumentList	op		1068628	1					
ANR	1068896	Argument	op		1068628	0					
ANR	1068897	Identifier	op		1068628	0					
ANR	1068898	InclusiveOrExpression	FT ( src2 ) | FS ( src1 )		1068628	1		|			
ANR	1068899	CallExpression	FT ( src2 )		1068628	0					
ANR	1068900	Callee	FT		1068628	0					
ANR	1068901	Identifier	FT		1068628	0					
ANR	1068902	ArgumentList	src2		1068628	1					
ANR	1068903	Argument	src2		1068628	0					
ANR	1068904	Identifier	src2		1068628	0					
ANR	1068905	CallExpression	FS ( src1 )		1068628	1					
ANR	1068906	Callee	FS		1068628	0					
ANR	1068907	Identifier	FS		1068628	0					
ANR	1068908	ArgumentList	src1		1068628	1					
ANR	1068909	Argument	src1		1068628	0					
ANR	1068910	Identifier	src1		1068628	0					
ANR	1068911	Argument	UNMOVABLE_INS		1068628	2					
ANR	1068912	Identifier	UNMOVABLE_INS		1068628	0					
ANR	1068913	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , CFC1 | TA ( ULESS_FLAG ) | DA ( FCSR_REG ) , ULESS_FLAG ) )"	1391:2:45993:46071	1068628	1	True				
ANR	1068914	CallExpression	"FAIL_IF ( push_inst ( compiler , CFC1 | TA ( ULESS_FLAG ) | DA ( FCSR_REG ) , ULESS_FLAG ) )"		1068628	0					
ANR	1068915	Callee	FAIL_IF		1068628	0					
ANR	1068916	Identifier	FAIL_IF		1068628	0					
ANR	1068917	ArgumentList	"push_inst ( compiler , CFC1 | TA ( ULESS_FLAG ) | DA ( FCSR_REG ) , ULESS_FLAG )"		1068628	1					
ANR	1068918	Argument	"push_inst ( compiler , CFC1 | TA ( ULESS_FLAG ) | DA ( FCSR_REG ) , ULESS_FLAG )"		1068628	0					
ANR	1068919	CallExpression	"push_inst ( compiler , CFC1 | TA ( ULESS_FLAG ) | DA ( FCSR_REG ) , ULESS_FLAG )"		1068628	0					
ANR	1068920	Callee	push_inst		1068628	0					
ANR	1068921	Identifier	push_inst		1068628	0					
ANR	1068922	ArgumentList	compiler		1068628	1					
ANR	1068923	Argument	compiler		1068628	0					
ANR	1068924	Identifier	compiler		1068628	0					
ANR	1068925	Argument	CFC1 | TA ( ULESS_FLAG ) | DA ( FCSR_REG )		1068628	1					
ANR	1068926	InclusiveOrExpression	CFC1 | TA ( ULESS_FLAG ) | DA ( FCSR_REG )		1068628	0		|			
ANR	1068927	Identifier	CFC1		1068628	0					
ANR	1068928	InclusiveOrExpression	TA ( ULESS_FLAG ) | DA ( FCSR_REG )		1068628	1		|			
ANR	1068929	CallExpression	TA ( ULESS_FLAG )		1068628	0					
ANR	1068930	Callee	TA		1068628	0					
ANR	1068931	Identifier	TA		1068628	0					
ANR	1068932	ArgumentList	ULESS_FLAG		1068628	1					
ANR	1068933	Argument	ULESS_FLAG		1068628	0					
ANR	1068934	Identifier	ULESS_FLAG		1068628	0					
ANR	1068935	CallExpression	DA ( FCSR_REG )		1068628	1					
ANR	1068936	Callee	DA		1068628	0					
ANR	1068937	Identifier	DA		1068628	0					
ANR	1068938	ArgumentList	FCSR_REG		1068628	1					
ANR	1068939	Argument	FCSR_REG		1068628	0					
ANR	1068940	Identifier	FCSR_REG		1068628	0					
ANR	1068941	Argument	ULESS_FLAG		1068628	2					
ANR	1068942	Identifier	ULESS_FLAG		1068628	0					
ANR	1068943	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , C_ULT_S | FMT ( op ) | FT ( src1 ) | FS ( src2 ) , UNMOVABLE_INS ) )"	1392:2:46075:46159	1068628	2	True				
ANR	1068944	CallExpression	"FAIL_IF ( push_inst ( compiler , C_ULT_S | FMT ( op ) | FT ( src1 ) | FS ( src2 ) , UNMOVABLE_INS ) )"		1068628	0					
ANR	1068945	Callee	FAIL_IF		1068628	0					
ANR	1068946	Identifier	FAIL_IF		1068628	0					
ANR	1068947	ArgumentList	"push_inst ( compiler , C_ULT_S | FMT ( op ) | FT ( src1 ) | FS ( src2 ) , UNMOVABLE_INS )"		1068628	1					
ANR	1068948	Argument	"push_inst ( compiler , C_ULT_S | FMT ( op ) | FT ( src1 ) | FS ( src2 ) , UNMOVABLE_INS )"		1068628	0					
ANR	1068949	CallExpression	"push_inst ( compiler , C_ULT_S | FMT ( op ) | FT ( src1 ) | FS ( src2 ) , UNMOVABLE_INS )"		1068628	0					
ANR	1068950	Callee	push_inst		1068628	0					
ANR	1068951	Identifier	push_inst		1068628	0					
ANR	1068952	ArgumentList	compiler		1068628	1					
ANR	1068953	Argument	compiler		1068628	0					
ANR	1068954	Identifier	compiler		1068628	0					
ANR	1068955	Argument	C_ULT_S | FMT ( op ) | FT ( src1 ) | FS ( src2 )		1068628	1					
ANR	1068956	InclusiveOrExpression	C_ULT_S | FMT ( op ) | FT ( src1 ) | FS ( src2 )		1068628	0		|			
ANR	1068957	Identifier	C_ULT_S		1068628	0					
ANR	1068958	InclusiveOrExpression	FMT ( op ) | FT ( src1 ) | FS ( src2 )		1068628	1		|			
ANR	1068959	CallExpression	FMT ( op )		1068628	0					
ANR	1068960	Callee	FMT		1068628	0					
ANR	1068961	Identifier	FMT		1068628	0					
ANR	1068962	ArgumentList	op		1068628	1					
ANR	1068963	Argument	op		1068628	0					
ANR	1068964	Identifier	op		1068628	0					
ANR	1068965	InclusiveOrExpression	FT ( src1 ) | FS ( src2 )		1068628	1		|			
ANR	1068966	CallExpression	FT ( src1 )		1068628	0					
ANR	1068967	Callee	FT		1068628	0					
ANR	1068968	Identifier	FT		1068628	0					
ANR	1068969	ArgumentList	src1		1068628	1					
ANR	1068970	Argument	src1		1068628	0					
ANR	1068971	Identifier	src1		1068628	0					
ANR	1068972	CallExpression	FS ( src2 )		1068628	1					
ANR	1068973	Callee	FS		1068628	0					
ANR	1068974	Identifier	FS		1068628	0					
ANR	1068975	ArgumentList	src2		1068628	1					
ANR	1068976	Argument	src2		1068628	0					
ANR	1068977	Identifier	src2		1068628	0					
ANR	1068978	Argument	UNMOVABLE_INS		1068628	2					
ANR	1068979	Identifier	UNMOVABLE_INS		1068628	0					
ANR	1068980	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SRL | TA ( ULESS_FLAG ) | DA ( ULESS_FLAG ) | SH_IMM ( 23 ) , ULESS_FLAG ) )"	1393:2:46163:46255	1068628	3	True				
ANR	1068981	CallExpression	"FAIL_IF ( push_inst ( compiler , SRL | TA ( ULESS_FLAG ) | DA ( ULESS_FLAG ) | SH_IMM ( 23 ) , ULESS_FLAG ) )"		1068628	0					
ANR	1068982	Callee	FAIL_IF		1068628	0					
ANR	1068983	Identifier	FAIL_IF		1068628	0					
ANR	1068984	ArgumentList	"push_inst ( compiler , SRL | TA ( ULESS_FLAG ) | DA ( ULESS_FLAG ) | SH_IMM ( 23 ) , ULESS_FLAG )"		1068628	1					
ANR	1068985	Argument	"push_inst ( compiler , SRL | TA ( ULESS_FLAG ) | DA ( ULESS_FLAG ) | SH_IMM ( 23 ) , ULESS_FLAG )"		1068628	0					
ANR	1068986	CallExpression	"push_inst ( compiler , SRL | TA ( ULESS_FLAG ) | DA ( ULESS_FLAG ) | SH_IMM ( 23 ) , ULESS_FLAG )"		1068628	0					
ANR	1068987	Callee	push_inst		1068628	0					
ANR	1068988	Identifier	push_inst		1068628	0					
ANR	1068989	ArgumentList	compiler		1068628	1					
ANR	1068990	Argument	compiler		1068628	0					
ANR	1068991	Identifier	compiler		1068628	0					
ANR	1068992	Argument	SRL | TA ( ULESS_FLAG ) | DA ( ULESS_FLAG ) | SH_IMM ( 23 )		1068628	1					
ANR	1068993	InclusiveOrExpression	SRL | TA ( ULESS_FLAG ) | DA ( ULESS_FLAG ) | SH_IMM ( 23 )		1068628	0		|			
ANR	1068994	Identifier	SRL		1068628	0					
ANR	1068995	InclusiveOrExpression	TA ( ULESS_FLAG ) | DA ( ULESS_FLAG ) | SH_IMM ( 23 )		1068628	1		|			
ANR	1068996	CallExpression	TA ( ULESS_FLAG )		1068628	0					
ANR	1068997	Callee	TA		1068628	0					
ANR	1068998	Identifier	TA		1068628	0					
ANR	1068999	ArgumentList	ULESS_FLAG		1068628	1					
ANR	1069000	Argument	ULESS_FLAG		1068628	0					
ANR	1069001	Identifier	ULESS_FLAG		1068628	0					
ANR	1069002	InclusiveOrExpression	DA ( ULESS_FLAG ) | SH_IMM ( 23 )		1068628	1		|			
ANR	1069003	CallExpression	DA ( ULESS_FLAG )		1068628	0					
ANR	1069004	Callee	DA		1068628	0					
ANR	1069005	Identifier	DA		1068628	0					
ANR	1069006	ArgumentList	ULESS_FLAG		1068628	1					
ANR	1069007	Argument	ULESS_FLAG		1068628	0					
ANR	1069008	Identifier	ULESS_FLAG		1068628	0					
ANR	1069009	CallExpression	SH_IMM ( 23 )		1068628	1					
ANR	1069010	Callee	SH_IMM		1068628	0					
ANR	1069011	Identifier	SH_IMM		1068628	0					
ANR	1069012	ArgumentList	23		1068628	1					
ANR	1069013	Argument	23		1068628	0					
ANR	1069014	PrimaryExpression	23		1068628	0					
ANR	1069015	Argument	ULESS_FLAG		1068628	2					
ANR	1069016	Identifier	ULESS_FLAG		1068628	0					
ANR	1069017	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ANDI | SA ( ULESS_FLAG ) | TA ( ULESS_FLAG ) | IMM ( 1 ) , ULESS_FLAG ) )"	1394:2:46259:46348	1068628	4	True				
ANR	1069018	CallExpression	"FAIL_IF ( push_inst ( compiler , ANDI | SA ( ULESS_FLAG ) | TA ( ULESS_FLAG ) | IMM ( 1 ) , ULESS_FLAG ) )"		1068628	0					
ANR	1069019	Callee	FAIL_IF		1068628	0					
ANR	1069020	Identifier	FAIL_IF		1068628	0					
ANR	1069021	ArgumentList	"push_inst ( compiler , ANDI | SA ( ULESS_FLAG ) | TA ( ULESS_FLAG ) | IMM ( 1 ) , ULESS_FLAG )"		1068628	1					
ANR	1069022	Argument	"push_inst ( compiler , ANDI | SA ( ULESS_FLAG ) | TA ( ULESS_FLAG ) | IMM ( 1 ) , ULESS_FLAG )"		1068628	0					
ANR	1069023	CallExpression	"push_inst ( compiler , ANDI | SA ( ULESS_FLAG ) | TA ( ULESS_FLAG ) | IMM ( 1 ) , ULESS_FLAG )"		1068628	0					
ANR	1069024	Callee	push_inst		1068628	0					
ANR	1069025	Identifier	push_inst		1068628	0					
ANR	1069026	ArgumentList	compiler		1068628	1					
ANR	1069027	Argument	compiler		1068628	0					
ANR	1069028	Identifier	compiler		1068628	0					
ANR	1069029	Argument	ANDI | SA ( ULESS_FLAG ) | TA ( ULESS_FLAG ) | IMM ( 1 )		1068628	1					
ANR	1069030	InclusiveOrExpression	ANDI | SA ( ULESS_FLAG ) | TA ( ULESS_FLAG ) | IMM ( 1 )		1068628	0		|			
ANR	1069031	Identifier	ANDI		1068628	0					
ANR	1069032	InclusiveOrExpression	SA ( ULESS_FLAG ) | TA ( ULESS_FLAG ) | IMM ( 1 )		1068628	1		|			
ANR	1069033	CallExpression	SA ( ULESS_FLAG )		1068628	0					
ANR	1069034	Callee	SA		1068628	0					
ANR	1069035	Identifier	SA		1068628	0					
ANR	1069036	ArgumentList	ULESS_FLAG		1068628	1					
ANR	1069037	Argument	ULESS_FLAG		1068628	0					
ANR	1069038	Identifier	ULESS_FLAG		1068628	0					
ANR	1069039	InclusiveOrExpression	TA ( ULESS_FLAG ) | IMM ( 1 )		1068628	1		|			
ANR	1069040	CallExpression	TA ( ULESS_FLAG )		1068628	0					
ANR	1069041	Callee	TA		1068628	0					
ANR	1069042	Identifier	TA		1068628	0					
ANR	1069043	ArgumentList	ULESS_FLAG		1068628	1					
ANR	1069044	Argument	ULESS_FLAG		1068628	0					
ANR	1069045	Identifier	ULESS_FLAG		1068628	0					
ANR	1069046	CallExpression	IMM ( 1 )		1068628	1					
ANR	1069047	Callee	IMM		1068628	0					
ANR	1069048	Identifier	IMM		1068628	0					
ANR	1069049	ArgumentList	1		1068628	1					
ANR	1069050	Argument	1		1068628	0					
ANR	1069051	PrimaryExpression	1		1068628	0					
ANR	1069052	Argument	ULESS_FLAG		1068628	2					
ANR	1069053	Identifier	ULESS_FLAG		1068628	0					
ANR	1069054	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , CFC1 | TA ( UGREATER_FLAG ) | DA ( FCSR_REG ) , UGREATER_FLAG ) )"	1395:2:46352:46436	1068628	5	True				
ANR	1069055	CallExpression	"FAIL_IF ( push_inst ( compiler , CFC1 | TA ( UGREATER_FLAG ) | DA ( FCSR_REG ) , UGREATER_FLAG ) )"		1068628	0					
ANR	1069056	Callee	FAIL_IF		1068628	0					
ANR	1069057	Identifier	FAIL_IF		1068628	0					
ANR	1069058	ArgumentList	"push_inst ( compiler , CFC1 | TA ( UGREATER_FLAG ) | DA ( FCSR_REG ) , UGREATER_FLAG )"		1068628	1					
ANR	1069059	Argument	"push_inst ( compiler , CFC1 | TA ( UGREATER_FLAG ) | DA ( FCSR_REG ) , UGREATER_FLAG )"		1068628	0					
ANR	1069060	CallExpression	"push_inst ( compiler , CFC1 | TA ( UGREATER_FLAG ) | DA ( FCSR_REG ) , UGREATER_FLAG )"		1068628	0					
ANR	1069061	Callee	push_inst		1068628	0					
ANR	1069062	Identifier	push_inst		1068628	0					
ANR	1069063	ArgumentList	compiler		1068628	1					
ANR	1069064	Argument	compiler		1068628	0					
ANR	1069065	Identifier	compiler		1068628	0					
ANR	1069066	Argument	CFC1 | TA ( UGREATER_FLAG ) | DA ( FCSR_REG )		1068628	1					
ANR	1069067	InclusiveOrExpression	CFC1 | TA ( UGREATER_FLAG ) | DA ( FCSR_REG )		1068628	0		|			
ANR	1069068	Identifier	CFC1		1068628	0					
ANR	1069069	InclusiveOrExpression	TA ( UGREATER_FLAG ) | DA ( FCSR_REG )		1068628	1		|			
ANR	1069070	CallExpression	TA ( UGREATER_FLAG )		1068628	0					
ANR	1069071	Callee	TA		1068628	0					
ANR	1069072	Identifier	TA		1068628	0					
ANR	1069073	ArgumentList	UGREATER_FLAG		1068628	1					
ANR	1069074	Argument	UGREATER_FLAG		1068628	0					
ANR	1069075	Identifier	UGREATER_FLAG		1068628	0					
ANR	1069076	CallExpression	DA ( FCSR_REG )		1068628	1					
ANR	1069077	Callee	DA		1068628	0					
ANR	1069078	Identifier	DA		1068628	0					
ANR	1069079	ArgumentList	FCSR_REG		1068628	1					
ANR	1069080	Argument	FCSR_REG		1068628	0					
ANR	1069081	Identifier	FCSR_REG		1068628	0					
ANR	1069082	Argument	UGREATER_FLAG		1068628	2					
ANR	1069083	Identifier	UGREATER_FLAG		1068628	0					
ANR	1069084	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SRL | TA ( UGREATER_FLAG ) | DA ( UGREATER_FLAG ) | SH_IMM ( 23 ) , UGREATER_FLAG ) )"	1396:2:46440:46541	1068628	6	True				
ANR	1069085	CallExpression	"FAIL_IF ( push_inst ( compiler , SRL | TA ( UGREATER_FLAG ) | DA ( UGREATER_FLAG ) | SH_IMM ( 23 ) , UGREATER_FLAG ) )"		1068628	0					
ANR	1069086	Callee	FAIL_IF		1068628	0					
ANR	1069087	Identifier	FAIL_IF		1068628	0					
ANR	1069088	ArgumentList	"push_inst ( compiler , SRL | TA ( UGREATER_FLAG ) | DA ( UGREATER_FLAG ) | SH_IMM ( 23 ) , UGREATER_FLAG )"		1068628	1					
ANR	1069089	Argument	"push_inst ( compiler , SRL | TA ( UGREATER_FLAG ) | DA ( UGREATER_FLAG ) | SH_IMM ( 23 ) , UGREATER_FLAG )"		1068628	0					
ANR	1069090	CallExpression	"push_inst ( compiler , SRL | TA ( UGREATER_FLAG ) | DA ( UGREATER_FLAG ) | SH_IMM ( 23 ) , UGREATER_FLAG )"		1068628	0					
ANR	1069091	Callee	push_inst		1068628	0					
ANR	1069092	Identifier	push_inst		1068628	0					
ANR	1069093	ArgumentList	compiler		1068628	1					
ANR	1069094	Argument	compiler		1068628	0					
ANR	1069095	Identifier	compiler		1068628	0					
ANR	1069096	Argument	SRL | TA ( UGREATER_FLAG ) | DA ( UGREATER_FLAG ) | SH_IMM ( 23 )		1068628	1					
ANR	1069097	InclusiveOrExpression	SRL | TA ( UGREATER_FLAG ) | DA ( UGREATER_FLAG ) | SH_IMM ( 23 )		1068628	0		|			
ANR	1069098	Identifier	SRL		1068628	0					
ANR	1069099	InclusiveOrExpression	TA ( UGREATER_FLAG ) | DA ( UGREATER_FLAG ) | SH_IMM ( 23 )		1068628	1		|			
ANR	1069100	CallExpression	TA ( UGREATER_FLAG )		1068628	0					
ANR	1069101	Callee	TA		1068628	0					
ANR	1069102	Identifier	TA		1068628	0					
ANR	1069103	ArgumentList	UGREATER_FLAG		1068628	1					
ANR	1069104	Argument	UGREATER_FLAG		1068628	0					
ANR	1069105	Identifier	UGREATER_FLAG		1068628	0					
ANR	1069106	InclusiveOrExpression	DA ( UGREATER_FLAG ) | SH_IMM ( 23 )		1068628	1		|			
ANR	1069107	CallExpression	DA ( UGREATER_FLAG )		1068628	0					
ANR	1069108	Callee	DA		1068628	0					
ANR	1069109	Identifier	DA		1068628	0					
ANR	1069110	ArgumentList	UGREATER_FLAG		1068628	1					
ANR	1069111	Argument	UGREATER_FLAG		1068628	0					
ANR	1069112	Identifier	UGREATER_FLAG		1068628	0					
ANR	1069113	CallExpression	SH_IMM ( 23 )		1068628	1					
ANR	1069114	Callee	SH_IMM		1068628	0					
ANR	1069115	Identifier	SH_IMM		1068628	0					
ANR	1069116	ArgumentList	23		1068628	1					
ANR	1069117	Argument	23		1068628	0					
ANR	1069118	PrimaryExpression	23		1068628	0					
ANR	1069119	Argument	UGREATER_FLAG		1068628	2					
ANR	1069120	Identifier	UGREATER_FLAG		1068628	0					
ANR	1069121	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ANDI | SA ( UGREATER_FLAG ) | TA ( UGREATER_FLAG ) | IMM ( 1 ) , UGREATER_FLAG ) )"	1397:2:46545:46643	1068628	7	True				
ANR	1069122	CallExpression	"FAIL_IF ( push_inst ( compiler , ANDI | SA ( UGREATER_FLAG ) | TA ( UGREATER_FLAG ) | IMM ( 1 ) , UGREATER_FLAG ) )"		1068628	0					
ANR	1069123	Callee	FAIL_IF		1068628	0					
ANR	1069124	Identifier	FAIL_IF		1068628	0					
ANR	1069125	ArgumentList	"push_inst ( compiler , ANDI | SA ( UGREATER_FLAG ) | TA ( UGREATER_FLAG ) | IMM ( 1 ) , UGREATER_FLAG )"		1068628	1					
ANR	1069126	Argument	"push_inst ( compiler , ANDI | SA ( UGREATER_FLAG ) | TA ( UGREATER_FLAG ) | IMM ( 1 ) , UGREATER_FLAG )"		1068628	0					
ANR	1069127	CallExpression	"push_inst ( compiler , ANDI | SA ( UGREATER_FLAG ) | TA ( UGREATER_FLAG ) | IMM ( 1 ) , UGREATER_FLAG )"		1068628	0					
ANR	1069128	Callee	push_inst		1068628	0					
ANR	1069129	Identifier	push_inst		1068628	0					
ANR	1069130	ArgumentList	compiler		1068628	1					
ANR	1069131	Argument	compiler		1068628	0					
ANR	1069132	Identifier	compiler		1068628	0					
ANR	1069133	Argument	ANDI | SA ( UGREATER_FLAG ) | TA ( UGREATER_FLAG ) | IMM ( 1 )		1068628	1					
ANR	1069134	InclusiveOrExpression	ANDI | SA ( UGREATER_FLAG ) | TA ( UGREATER_FLAG ) | IMM ( 1 )		1068628	0		|			
ANR	1069135	Identifier	ANDI		1068628	0					
ANR	1069136	InclusiveOrExpression	SA ( UGREATER_FLAG ) | TA ( UGREATER_FLAG ) | IMM ( 1 )		1068628	1		|			
ANR	1069137	CallExpression	SA ( UGREATER_FLAG )		1068628	0					
ANR	1069138	Callee	SA		1068628	0					
ANR	1069139	Identifier	SA		1068628	0					
ANR	1069140	ArgumentList	UGREATER_FLAG		1068628	1					
ANR	1069141	Argument	UGREATER_FLAG		1068628	0					
ANR	1069142	Identifier	UGREATER_FLAG		1068628	0					
ANR	1069143	InclusiveOrExpression	TA ( UGREATER_FLAG ) | IMM ( 1 )		1068628	1		|			
ANR	1069144	CallExpression	TA ( UGREATER_FLAG )		1068628	0					
ANR	1069145	Callee	TA		1068628	0					
ANR	1069146	Identifier	TA		1068628	0					
ANR	1069147	ArgumentList	UGREATER_FLAG		1068628	1					
ANR	1069148	Argument	UGREATER_FLAG		1068628	0					
ANR	1069149	Identifier	UGREATER_FLAG		1068628	0					
ANR	1069150	CallExpression	IMM ( 1 )		1068628	1					
ANR	1069151	Callee	IMM		1068628	0					
ANR	1069152	Identifier	IMM		1068628	0					
ANR	1069153	ArgumentList	1		1068628	1					
ANR	1069154	Argument	1		1068628	0					
ANR	1069155	PrimaryExpression	1		1068628	0					
ANR	1069156	Argument	UGREATER_FLAG		1068628	2					
ANR	1069157	Identifier	UGREATER_FLAG		1068628	0					
ANR	1069158	ReturnStatement	"return push_inst ( compiler , C_UN_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) , FCSR_FCC ) ;"	1399:1:46649:46725	1068628	4	True				
ANR	1069159	CallExpression	"push_inst ( compiler , C_UN_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) , FCSR_FCC )"		1068628	0					
ANR	1069160	Callee	push_inst		1068628	0					
ANR	1069161	Identifier	push_inst		1068628	0					
ANR	1069162	ArgumentList	compiler		1068628	1					
ANR	1069163	Argument	compiler		1068628	0					
ANR	1069164	Identifier	compiler		1068628	0					
ANR	1069165	Argument	C_UN_S | FMT ( op ) | FT ( src2 ) | FS ( src1 )		1068628	1					
ANR	1069166	InclusiveOrExpression	C_UN_S | FMT ( op ) | FT ( src2 ) | FS ( src1 )		1068628	0		|			
ANR	1069167	Identifier	C_UN_S		1068628	0					
ANR	1069168	InclusiveOrExpression	FMT ( op ) | FT ( src2 ) | FS ( src1 )		1068628	1		|			
ANR	1069169	CallExpression	FMT ( op )		1068628	0					
ANR	1069170	Callee	FMT		1068628	0					
ANR	1069171	Identifier	FMT		1068628	0					
ANR	1069172	ArgumentList	op		1068628	1					
ANR	1069173	Argument	op		1068628	0					
ANR	1069174	Identifier	op		1068628	0					
ANR	1069175	InclusiveOrExpression	FT ( src2 ) | FS ( src1 )		1068628	1		|			
ANR	1069176	CallExpression	FT ( src2 )		1068628	0					
ANR	1069177	Callee	FT		1068628	0					
ANR	1069178	Identifier	FT		1068628	0					
ANR	1069179	ArgumentList	src2		1068628	1					
ANR	1069180	Argument	src2		1068628	0					
ANR	1069181	Identifier	src2		1068628	0					
ANR	1069182	CallExpression	FS ( src1 )		1068628	1					
ANR	1069183	Callee	FS		1068628	0					
ANR	1069184	Identifier	FS		1068628	0					
ANR	1069185	ArgumentList	src1		1068628	1					
ANR	1069186	Argument	src1		1068628	0					
ANR	1069187	Identifier	src1		1068628	0					
ANR	1069188	Argument	FCSR_FCC		1068628	2					
ANR	1069189	Identifier	FCSR_FCC		1068628	0					
ANR	1069190	ReturnType	static SLJIT_INLINE sljit_si		1068628	1					
ANR	1069191	Identifier	sljit_emit_fop1_cmp		1068628	2					
ANR	1069192	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1068628	3					
ANR	1069193	Parameter	struct sljit_compiler * compiler	1363:49:44962:44992	1068628	0	True				
ANR	1069194	ParameterType	struct sljit_compiler *		1068628	0					
ANR	1069195	Identifier	compiler		1068628	1					
ANR	1069196	Parameter	sljit_si op	1363:82:44995:45005	1068628	1	True				
ANR	1069197	ParameterType	sljit_si		1068628	0					
ANR	1069198	Identifier	op		1068628	1					
ANR	1069199	Parameter	sljit_si src1	1364:1:45009:45021	1068628	2	True				
ANR	1069200	ParameterType	sljit_si		1068628	0					
ANR	1069201	Identifier	src1		1068628	1					
ANR	1069202	Parameter	sljit_sw src1w	1364:16:45024:45037	1068628	3	True				
ANR	1069203	ParameterType	sljit_sw		1068628	0					
ANR	1069204	Identifier	src1w		1068628	1					
ANR	1069205	Parameter	sljit_si src2	1365:1:45041:45053	1068628	4	True				
ANR	1069206	ParameterType	sljit_si		1068628	0					
ANR	1069207	Identifier	src2		1068628	1					
ANR	1069208	Parameter	sljit_sw src2w	1365:16:45056:45069	1068628	5	True				
ANR	1069209	ParameterType	sljit_sw		1068628	0					
ANR	1069210	Identifier	src2w		1068628	1					
ANR	1069211	CFGEntryNode	ENTRY		1068628		True				
ANR	1069212	CFGExitNode	EXIT		1068628		True				
ANR	1069213	Symbol	EQUAL_FLAG		1068628						
ANR	1069214	Symbol	TMP_FREG2		1068628						
ANR	1069215	Symbol	src1w		1068628						
ANR	1069216	Symbol	FLOAT_DATA		1068628						
ANR	1069217	Symbol	LOAD_DATA		1068628						
ANR	1069218	Symbol	TMP_FREG1		1068628						
ANR	1069219	Symbol	SLJIT_MEM		1068628						
ANR	1069220	Symbol	SRL		1068628						
ANR	1069221	Symbol	FS		1068628						
ANR	1069222	Symbol	SLJIT_SET_E		1068628						
ANR	1069223	Symbol	FT		1068628						
ANR	1069224	Symbol	SA		1068628						
ANR	1069225	Symbol	SLJIT_SET_S		1068628						
ANR	1069226	Symbol	C_ULT_S		1068628						
ANR	1069227	Symbol	ULESS_FLAG		1068628						
ANR	1069228	Symbol	compiler		1068628						
ANR	1069229	Symbol	C_UN_S		1068628						
ANR	1069230	Symbol	src2w		1068628						
ANR	1069231	Symbol	op		1068628						
ANR	1069232	Symbol	push_inst		1068628						
ANR	1069233	Symbol	FCSR_FCC		1068628						
ANR	1069234	Symbol	UNMOVABLE_INS		1068628						
ANR	1069235	Symbol	emit_op_mem2		1068628						
ANR	1069236	Symbol	IMM		1068628						
ANR	1069237	Symbol	UGREATER_FLAG		1068628						
ANR	1069238	Symbol	FMT		1068628						
ANR	1069239	Symbol	ANDI		1068628						
ANR	1069240	Symbol	TA		1068628						
ANR	1069241	Symbol	CFC1		1068628						
ANR	1069242	Symbol	FCSR_REG		1068628						
ANR	1069243	Symbol	C_UEQ_S		1068628						
ANR	1069244	Symbol	src1		1068628						
ANR	1069245	Symbol	SH_IMM		1068628						
ANR	1069246	Symbol	src2		1068628						
ANR	1069247	Symbol	DA		1068628						
ANR	1069248	Function	sljit_emit_fop1	1402:0:46730:48165							
ANR	1069249	FunctionDef	"sljit_emit_fop1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1069248	0					
ANR	1069250	CompoundStatement		1405:0:46886:48165	1069248	0					
ANR	1069251	IdentifierDeclStatement	sljit_si dst_r ;	1406:1:46889:46903	1069248	0	True				
ANR	1069252	IdentifierDecl	dst_r		1069248	0					
ANR	1069253	IdentifierDeclType	sljit_si		1069248	0					
ANR	1069254	Identifier	dst_r		1069248	1					
ANR	1069255	ExpressionStatement	CHECK_ERROR ( )	1408:1:46907:46920	1069248	1	True				
ANR	1069256	CallExpression	CHECK_ERROR ( )		1069248	0					
ANR	1069257	Callee	CHECK_ERROR		1069248	0					
ANR	1069258	Identifier	CHECK_ERROR		1069248	0					
ANR	1069259	ArgumentList			1069248	1					
ANR	1069260	ExpressionStatement	compiler -> cache_arg = 0	1409:1:46923:46946	1069248	2	True				
ANR	1069261	AssignmentExpression	compiler -> cache_arg = 0		1069248	0		=			
ANR	1069262	PtrMemberAccess	compiler -> cache_arg		1069248	0					
ANR	1069263	Identifier	compiler		1069248	0					
ANR	1069264	Identifier	cache_arg		1069248	1					
ANR	1069265	PrimaryExpression	0		1069248	1					
ANR	1069266	ExpressionStatement	compiler -> cache_argw = 0	1410:1:46949:46973	1069248	3	True				
ANR	1069267	AssignmentExpression	compiler -> cache_argw = 0		1069248	0		=			
ANR	1069268	PtrMemberAccess	compiler -> cache_argw		1069248	0					
ANR	1069269	Identifier	compiler		1069248	0					
ANR	1069270	Identifier	cache_argw		1069248	1					
ANR	1069271	PrimaryExpression	0		1069248	1					
ANR	1069272	ExpressionStatement	"SLJIT_COMPILE_ASSERT ( ( SLJIT_SINGLE_OP == 0x100 ) && ! ( DOUBLE_DATA & 0x2 ) , float_transfer_bit_error )"	1412:1:46977:47075	1069248	4	True				
ANR	1069273	CallExpression	"SLJIT_COMPILE_ASSERT ( ( SLJIT_SINGLE_OP == 0x100 ) && ! ( DOUBLE_DATA & 0x2 ) , float_transfer_bit_error )"		1069248	0					
ANR	1069274	Callee	SLJIT_COMPILE_ASSERT		1069248	0					
ANR	1069275	Identifier	SLJIT_COMPILE_ASSERT		1069248	0					
ANR	1069276	ArgumentList	( SLJIT_SINGLE_OP == 0x100 ) && ! ( DOUBLE_DATA & 0x2 )		1069248	1					
ANR	1069277	Argument	( SLJIT_SINGLE_OP == 0x100 ) && ! ( DOUBLE_DATA & 0x2 )		1069248	0					
ANR	1069278	AndExpression	( SLJIT_SINGLE_OP == 0x100 ) && ! ( DOUBLE_DATA & 0x2 )		1069248	0		&&			
ANR	1069279	EqualityExpression	SLJIT_SINGLE_OP == 0x100		1069248	0		==			
ANR	1069280	Identifier	SLJIT_SINGLE_OP		1069248	0					
ANR	1069281	PrimaryExpression	0x100		1069248	1					
ANR	1069282	UnaryOperationExpression	! ( DOUBLE_DATA & 0x2 )		1069248	1					
ANR	1069283	UnaryOperator	!		1069248	0					
ANR	1069284	BitAndExpression	DOUBLE_DATA & 0x2		1069248	1		&			
ANR	1069285	Identifier	DOUBLE_DATA		1069248	0					
ANR	1069286	PrimaryExpression	0x2		1069248	1					
ANR	1069287	Argument	float_transfer_bit_error		1069248	1					
ANR	1069288	Identifier	float_transfer_bit_error		1069248	0					
ANR	1069289	ExpressionStatement	"SELECT_FOP1_OPERATION_WITH_CHECKS ( compiler , op , dst , dstw , src , srcw )"	1413:1:47078:47147	1069248	5	True				
ANR	1069290	CallExpression	"SELECT_FOP1_OPERATION_WITH_CHECKS ( compiler , op , dst , dstw , src , srcw )"		1069248	0					
ANR	1069291	Callee	SELECT_FOP1_OPERATION_WITH_CHECKS		1069248	0					
ANR	1069292	Identifier	SELECT_FOP1_OPERATION_WITH_CHECKS		1069248	0					
ANR	1069293	ArgumentList	compiler		1069248	1					
ANR	1069294	Argument	compiler		1069248	0					
ANR	1069295	Identifier	compiler		1069248	0					
ANR	1069296	Argument	op		1069248	1					
ANR	1069297	Identifier	op		1069248	0					
ANR	1069298	Argument	dst		1069248	2					
ANR	1069299	Identifier	dst		1069248	0					
ANR	1069300	Argument	dstw		1069248	3					
ANR	1069301	Identifier	dstw		1069248	0					
ANR	1069302	Argument	src		1069248	4					
ANR	1069303	Identifier	src		1069248	0					
ANR	1069304	Argument	srcw		1069248	5					
ANR	1069305	Identifier	srcw		1069248	0					
ANR	1069306	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMS )		1069248	6					
ANR	1069307	Condition	GET_OPCODE ( op ) == SLJIT_CONVD_FROMS	1415:5:47155:47189	1069248	0	True				
ANR	1069308	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVD_FROMS		1069248	0		==			
ANR	1069309	CallExpression	GET_OPCODE ( op )		1069248	0					
ANR	1069310	Callee	GET_OPCODE		1069248	0					
ANR	1069311	Identifier	GET_OPCODE		1069248	0					
ANR	1069312	ArgumentList	op		1069248	1					
ANR	1069313	Argument	op		1069248	0					
ANR	1069314	Identifier	op		1069248	0					
ANR	1069315	Identifier	SLJIT_CONVD_FROMS		1069248	1					
ANR	1069316	ExpressionStatement	op ^= SLJIT_SINGLE_OP	1416:2:47194:47215	1069248	1	True				
ANR	1069317	AssignmentExpression	op ^= SLJIT_SINGLE_OP		1069248	0		^=			
ANR	1069318	Identifier	op		1069248	0					
ANR	1069319	Identifier	SLJIT_SINGLE_OP		1069248	1					
ANR	1069320	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? ( dst << 1 ) : TMP_FREG1	1418:1:47219:47268	1069248	7	True				
ANR	1069321	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? ( dst << 1 ) : TMP_FREG1		1069248	0		=			
ANR	1069322	Identifier	dst_r		1069248	0					
ANR	1069323	ConditionalExpression	FAST_IS_REG ( dst ) ? ( dst << 1 ) : TMP_FREG1		1069248	1					
ANR	1069324	Condition	FAST_IS_REG ( dst )		1069248	0					
ANR	1069325	CallExpression	FAST_IS_REG ( dst )		1069248	0					
ANR	1069326	Callee	FAST_IS_REG		1069248	0					
ANR	1069327	Identifier	FAST_IS_REG		1069248	0					
ANR	1069328	ArgumentList	dst		1069248	1					
ANR	1069329	Argument	dst		1069248	0					
ANR	1069330	Identifier	dst		1069248	0					
ANR	1069331	ShiftExpression	dst << 1		1069248	1		<<			
ANR	1069332	Identifier	dst		1069248	0					
ANR	1069333	PrimaryExpression	1		1069248	1					
ANR	1069334	Identifier	TMP_FREG1		1069248	2					
ANR	1069335	IfStatement	if ( src & SLJIT_MEM )		1069248	8					
ANR	1069336	Condition	src & SLJIT_MEM	1420:5:47276:47290	1069248	0	True				
ANR	1069337	BitAndExpression	src & SLJIT_MEM		1069248	0		&			
ANR	1069338	Identifier	src		1069248	0					
ANR	1069339	Identifier	SLJIT_MEM		1069248	1					
ANR	1069340	CompoundStatement		16:22:406:406	1069248	1					
ANR	1069341	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , dst_r , src , srcw , dst , dstw ) )"	1421:2:47297:47385	1069248	0	True				
ANR	1069342	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , dst_r , src , srcw , dst , dstw ) )"		1069248	0					
ANR	1069343	Callee	FAIL_IF		1069248	0					
ANR	1069344	Identifier	FAIL_IF		1069248	0					
ANR	1069345	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , dst_r , src , srcw , dst , dstw )"		1069248	1					
ANR	1069346	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , dst_r , src , srcw , dst , dstw )"		1069248	0					
ANR	1069347	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , dst_r , src , srcw , dst , dstw )"		1069248	0					
ANR	1069348	Callee	emit_op_mem2		1069248	0					
ANR	1069349	Identifier	emit_op_mem2		1069248	0					
ANR	1069350	ArgumentList	compiler		1069248	1					
ANR	1069351	Argument	compiler		1069248	0					
ANR	1069352	Identifier	compiler		1069248	0					
ANR	1069353	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1069248	1					
ANR	1069354	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1069248	0		|			
ANR	1069355	CallExpression	FLOAT_DATA ( op )		1069248	0					
ANR	1069356	Callee	FLOAT_DATA		1069248	0					
ANR	1069357	Identifier	FLOAT_DATA		1069248	0					
ANR	1069358	ArgumentList	op		1069248	1					
ANR	1069359	Argument	op		1069248	0					
ANR	1069360	Identifier	op		1069248	0					
ANR	1069361	Identifier	LOAD_DATA		1069248	1					
ANR	1069362	Argument	dst_r		1069248	2					
ANR	1069363	Identifier	dst_r		1069248	0					
ANR	1069364	Argument	src		1069248	3					
ANR	1069365	Identifier	src		1069248	0					
ANR	1069366	Argument	srcw		1069248	4					
ANR	1069367	Identifier	srcw		1069248	0					
ANR	1069368	Argument	dst		1069248	5					
ANR	1069369	Identifier	dst		1069248	0					
ANR	1069370	Argument	dstw		1069248	6					
ANR	1069371	Identifier	dstw		1069248	0					
ANR	1069372	ExpressionStatement	src = dst_r	1422:2:47389:47400	1069248	1	True				
ANR	1069373	AssignmentExpression	src = dst_r		1069248	0		=			
ANR	1069374	Identifier	src		1069248	0					
ANR	1069375	Identifier	dst_r		1069248	1					
ANR	1069376	ElseStatement	else		1069248	0					
ANR	1069377	ExpressionStatement	src <<= 1	1425:2:47413:47422	1069248	0	True				
ANR	1069378	AssignmentExpression	src <<= 1		1069248	0		<<=			
ANR	1069379	Identifier	src		1069248	0					
ANR	1069380	PrimaryExpression	1		1069248	1					
ANR	1069381	SwitchStatement	switch ( GET_OPCODE ( op ) )		1069248	9					
ANR	1069382	Condition	GET_OPCODE ( op )	1427:9:47434:47447	1069248	0	True				
ANR	1069383	CallExpression	GET_OPCODE ( op )		1069248	0					
ANR	1069384	Callee	GET_OPCODE		1069248	0					
ANR	1069385	Identifier	GET_OPCODE		1069248	0					
ANR	1069386	ArgumentList	op		1069248	1					
ANR	1069387	Argument	op		1069248	0					
ANR	1069388	Identifier	op		1069248	0					
ANR	1069389	CompoundStatement		23:25:563:563	1069248	1					
ANR	1069390	Label	case SLJIT_DMOV :	1428:1:47453:47468	1069248	0	True				
ANR	1069391	Identifier	SLJIT_DMOV		1069248	0					
ANR	1069392	IfStatement	if ( src != dst_r )		1069248	1					
ANR	1069393	Condition	src != dst_r	1429:6:47476:47487	1069248	0	True				
ANR	1069394	EqualityExpression	src != dst_r		1069248	0		!=			
ANR	1069395	Identifier	src		1069248	0					
ANR	1069396	Identifier	dst_r		1069248	1					
ANR	1069397	CompoundStatement		25:20:603:603	1069248	1					
ANR	1069398	IfStatement	if ( dst_r != TMP_FREG1 )		1069248	0					
ANR	1069399	Condition	dst_r != TMP_FREG1	1430:7:47499:47516	1069248	0	True				
ANR	1069400	EqualityExpression	dst_r != TMP_FREG1		1069248	0		!=			
ANR	1069401	Identifier	dst_r		1069248	0					
ANR	1069402	Identifier	TMP_FREG1		1069248	1					
ANR	1069403	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MOV_S | FMT ( op ) | FS ( src ) | FD ( dst_r ) , MOVABLE_INS ) )"	1431:4:47523:47603	1069248	1	True				
ANR	1069404	CallExpression	"FAIL_IF ( push_inst ( compiler , MOV_S | FMT ( op ) | FS ( src ) | FD ( dst_r ) , MOVABLE_INS ) )"		1069248	0					
ANR	1069405	Callee	FAIL_IF		1069248	0					
ANR	1069406	Identifier	FAIL_IF		1069248	0					
ANR	1069407	ArgumentList	"push_inst ( compiler , MOV_S | FMT ( op ) | FS ( src ) | FD ( dst_r ) , MOVABLE_INS )"		1069248	1					
ANR	1069408	Argument	"push_inst ( compiler , MOV_S | FMT ( op ) | FS ( src ) | FD ( dst_r ) , MOVABLE_INS )"		1069248	0					
ANR	1069409	CallExpression	"push_inst ( compiler , MOV_S | FMT ( op ) | FS ( src ) | FD ( dst_r ) , MOVABLE_INS )"		1069248	0					
ANR	1069410	Callee	push_inst		1069248	0					
ANR	1069411	Identifier	push_inst		1069248	0					
ANR	1069412	ArgumentList	compiler		1069248	1					
ANR	1069413	Argument	compiler		1069248	0					
ANR	1069414	Identifier	compiler		1069248	0					
ANR	1069415	Argument	MOV_S | FMT ( op ) | FS ( src ) | FD ( dst_r )		1069248	1					
ANR	1069416	InclusiveOrExpression	MOV_S | FMT ( op ) | FS ( src ) | FD ( dst_r )		1069248	0		|			
ANR	1069417	Identifier	MOV_S		1069248	0					
ANR	1069418	InclusiveOrExpression	FMT ( op ) | FS ( src ) | FD ( dst_r )		1069248	1		|			
ANR	1069419	CallExpression	FMT ( op )		1069248	0					
ANR	1069420	Callee	FMT		1069248	0					
ANR	1069421	Identifier	FMT		1069248	0					
ANR	1069422	ArgumentList	op		1069248	1					
ANR	1069423	Argument	op		1069248	0					
ANR	1069424	Identifier	op		1069248	0					
ANR	1069425	InclusiveOrExpression	FS ( src ) | FD ( dst_r )		1069248	1		|			
ANR	1069426	CallExpression	FS ( src )		1069248	0					
ANR	1069427	Callee	FS		1069248	0					
ANR	1069428	Identifier	FS		1069248	0					
ANR	1069429	ArgumentList	src		1069248	1					
ANR	1069430	Argument	src		1069248	0					
ANR	1069431	Identifier	src		1069248	0					
ANR	1069432	CallExpression	FD ( dst_r )		1069248	1					
ANR	1069433	Callee	FD		1069248	0					
ANR	1069434	Identifier	FD		1069248	0					
ANR	1069435	ArgumentList	dst_r		1069248	1					
ANR	1069436	Argument	dst_r		1069248	0					
ANR	1069437	Identifier	dst_r		1069248	0					
ANR	1069438	Argument	MOVABLE_INS		1069248	2					
ANR	1069439	Identifier	MOVABLE_INS		1069248	0					
ANR	1069440	ElseStatement	else		1069248	0					
ANR	1069441	ExpressionStatement	dst_r = src	1433:4:47617:47628	1069248	0	True				
ANR	1069442	AssignmentExpression	dst_r = src		1069248	0		=			
ANR	1069443	Identifier	dst_r		1069248	0					
ANR	1069444	Identifier	src		1069248	1					
ANR	1069445	BreakStatement	break ;	1435:2:47636:47641	1069248	2	True				
ANR	1069446	Label	case SLJIT_DNEG :	1436:1:47644:47659	1069248	3	True				
ANR	1069447	Identifier	SLJIT_DNEG		1069248	0					
ANR	1069448	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , NEG_S | FMT ( op ) | FS ( src ) | FD ( dst_r ) , MOVABLE_INS ) )"	1437:2:47663:47743	1069248	4	True				
ANR	1069449	CallExpression	"FAIL_IF ( push_inst ( compiler , NEG_S | FMT ( op ) | FS ( src ) | FD ( dst_r ) , MOVABLE_INS ) )"		1069248	0					
ANR	1069450	Callee	FAIL_IF		1069248	0					
ANR	1069451	Identifier	FAIL_IF		1069248	0					
ANR	1069452	ArgumentList	"push_inst ( compiler , NEG_S | FMT ( op ) | FS ( src ) | FD ( dst_r ) , MOVABLE_INS )"		1069248	1					
ANR	1069453	Argument	"push_inst ( compiler , NEG_S | FMT ( op ) | FS ( src ) | FD ( dst_r ) , MOVABLE_INS )"		1069248	0					
ANR	1069454	CallExpression	"push_inst ( compiler , NEG_S | FMT ( op ) | FS ( src ) | FD ( dst_r ) , MOVABLE_INS )"		1069248	0					
ANR	1069455	Callee	push_inst		1069248	0					
ANR	1069456	Identifier	push_inst		1069248	0					
ANR	1069457	ArgumentList	compiler		1069248	1					
ANR	1069458	Argument	compiler		1069248	0					
ANR	1069459	Identifier	compiler		1069248	0					
ANR	1069460	Argument	NEG_S | FMT ( op ) | FS ( src ) | FD ( dst_r )		1069248	1					
ANR	1069461	InclusiveOrExpression	NEG_S | FMT ( op ) | FS ( src ) | FD ( dst_r )		1069248	0		|			
ANR	1069462	Identifier	NEG_S		1069248	0					
ANR	1069463	InclusiveOrExpression	FMT ( op ) | FS ( src ) | FD ( dst_r )		1069248	1		|			
ANR	1069464	CallExpression	FMT ( op )		1069248	0					
ANR	1069465	Callee	FMT		1069248	0					
ANR	1069466	Identifier	FMT		1069248	0					
ANR	1069467	ArgumentList	op		1069248	1					
ANR	1069468	Argument	op		1069248	0					
ANR	1069469	Identifier	op		1069248	0					
ANR	1069470	InclusiveOrExpression	FS ( src ) | FD ( dst_r )		1069248	1		|			
ANR	1069471	CallExpression	FS ( src )		1069248	0					
ANR	1069472	Callee	FS		1069248	0					
ANR	1069473	Identifier	FS		1069248	0					
ANR	1069474	ArgumentList	src		1069248	1					
ANR	1069475	Argument	src		1069248	0					
ANR	1069476	Identifier	src		1069248	0					
ANR	1069477	CallExpression	FD ( dst_r )		1069248	1					
ANR	1069478	Callee	FD		1069248	0					
ANR	1069479	Identifier	FD		1069248	0					
ANR	1069480	ArgumentList	dst_r		1069248	1					
ANR	1069481	Argument	dst_r		1069248	0					
ANR	1069482	Identifier	dst_r		1069248	0					
ANR	1069483	Argument	MOVABLE_INS		1069248	2					
ANR	1069484	Identifier	MOVABLE_INS		1069248	0					
ANR	1069485	BreakStatement	break ;	1438:2:47747:47752	1069248	5	True				
ANR	1069486	Label	case SLJIT_DABS :	1439:1:47755:47770	1069248	6	True				
ANR	1069487	Identifier	SLJIT_DABS		1069248	0					
ANR	1069488	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ABS_S | FMT ( op ) | FS ( src ) | FD ( dst_r ) , MOVABLE_INS ) )"	1440:2:47774:47854	1069248	7	True				
ANR	1069489	CallExpression	"FAIL_IF ( push_inst ( compiler , ABS_S | FMT ( op ) | FS ( src ) | FD ( dst_r ) , MOVABLE_INS ) )"		1069248	0					
ANR	1069490	Callee	FAIL_IF		1069248	0					
ANR	1069491	Identifier	FAIL_IF		1069248	0					
ANR	1069492	ArgumentList	"push_inst ( compiler , ABS_S | FMT ( op ) | FS ( src ) | FD ( dst_r ) , MOVABLE_INS )"		1069248	1					
ANR	1069493	Argument	"push_inst ( compiler , ABS_S | FMT ( op ) | FS ( src ) | FD ( dst_r ) , MOVABLE_INS )"		1069248	0					
ANR	1069494	CallExpression	"push_inst ( compiler , ABS_S | FMT ( op ) | FS ( src ) | FD ( dst_r ) , MOVABLE_INS )"		1069248	0					
ANR	1069495	Callee	push_inst		1069248	0					
ANR	1069496	Identifier	push_inst		1069248	0					
ANR	1069497	ArgumentList	compiler		1069248	1					
ANR	1069498	Argument	compiler		1069248	0					
ANR	1069499	Identifier	compiler		1069248	0					
ANR	1069500	Argument	ABS_S | FMT ( op ) | FS ( src ) | FD ( dst_r )		1069248	1					
ANR	1069501	InclusiveOrExpression	ABS_S | FMT ( op ) | FS ( src ) | FD ( dst_r )		1069248	0		|			
ANR	1069502	Identifier	ABS_S		1069248	0					
ANR	1069503	InclusiveOrExpression	FMT ( op ) | FS ( src ) | FD ( dst_r )		1069248	1		|			
ANR	1069504	CallExpression	FMT ( op )		1069248	0					
ANR	1069505	Callee	FMT		1069248	0					
ANR	1069506	Identifier	FMT		1069248	0					
ANR	1069507	ArgumentList	op		1069248	1					
ANR	1069508	Argument	op		1069248	0					
ANR	1069509	Identifier	op		1069248	0					
ANR	1069510	InclusiveOrExpression	FS ( src ) | FD ( dst_r )		1069248	1		|			
ANR	1069511	CallExpression	FS ( src )		1069248	0					
ANR	1069512	Callee	FS		1069248	0					
ANR	1069513	Identifier	FS		1069248	0					
ANR	1069514	ArgumentList	src		1069248	1					
ANR	1069515	Argument	src		1069248	0					
ANR	1069516	Identifier	src		1069248	0					
ANR	1069517	CallExpression	FD ( dst_r )		1069248	1					
ANR	1069518	Callee	FD		1069248	0					
ANR	1069519	Identifier	FD		1069248	0					
ANR	1069520	ArgumentList	dst_r		1069248	1					
ANR	1069521	Argument	dst_r		1069248	0					
ANR	1069522	Identifier	dst_r		1069248	0					
ANR	1069523	Argument	MOVABLE_INS		1069248	2					
ANR	1069524	Identifier	MOVABLE_INS		1069248	0					
ANR	1069525	BreakStatement	break ;	1441:2:47858:47863	1069248	8	True				
ANR	1069526	Label	case SLJIT_CONVD_FROMS :	1442:1:47866:47888	1069248	9	True				
ANR	1069527	Identifier	SLJIT_CONVD_FROMS		1069248	0					
ANR	1069528	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , CVT_S_S | ( ( op & SLJIT_SINGLE_OP ) ? 1 : ( 1 << 21 ) ) | FS ( src ) | FD ( dst_r ) , MOVABLE_INS ) )"	1443:2:47892:48007	1069248	10	True				
ANR	1069529	CallExpression	"FAIL_IF ( push_inst ( compiler , CVT_S_S | ( ( op & SLJIT_SINGLE_OP ) ? 1 : ( 1 << 21 ) ) | FS ( src ) | FD ( dst_r ) , MOVABLE_INS ) )"		1069248	0					
ANR	1069530	Callee	FAIL_IF		1069248	0					
ANR	1069531	Identifier	FAIL_IF		1069248	0					
ANR	1069532	ArgumentList	"push_inst ( compiler , CVT_S_S | ( ( op & SLJIT_SINGLE_OP ) ? 1 : ( 1 << 21 ) ) | FS ( src ) | FD ( dst_r ) , MOVABLE_INS )"		1069248	1					
ANR	1069533	Argument	"push_inst ( compiler , CVT_S_S | ( ( op & SLJIT_SINGLE_OP ) ? 1 : ( 1 << 21 ) ) | FS ( src ) | FD ( dst_r ) , MOVABLE_INS )"		1069248	0					
ANR	1069534	CallExpression	"push_inst ( compiler , CVT_S_S | ( ( op & SLJIT_SINGLE_OP ) ? 1 : ( 1 << 21 ) ) | FS ( src ) | FD ( dst_r ) , MOVABLE_INS )"		1069248	0					
ANR	1069535	Callee	push_inst		1069248	0					
ANR	1069536	Identifier	push_inst		1069248	0					
ANR	1069537	ArgumentList	compiler		1069248	1					
ANR	1069538	Argument	compiler		1069248	0					
ANR	1069539	Identifier	compiler		1069248	0					
ANR	1069540	Argument	CVT_S_S | ( ( op & SLJIT_SINGLE_OP ) ? 1 : ( 1 << 21 ) ) | FS ( src ) | FD ( dst_r )		1069248	1					
ANR	1069541	InclusiveOrExpression	CVT_S_S | ( ( op & SLJIT_SINGLE_OP ) ? 1 : ( 1 << 21 ) ) | FS ( src ) | FD ( dst_r )		1069248	0		|			
ANR	1069542	Identifier	CVT_S_S		1069248	0					
ANR	1069543	InclusiveOrExpression	( ( op & SLJIT_SINGLE_OP ) ? 1 : ( 1 << 21 ) ) | FS ( src ) | FD ( dst_r )		1069248	1		|			
ANR	1069544	ConditionalExpression	( op & SLJIT_SINGLE_OP ) ? 1 : ( 1 << 21 )		1069248	0					
ANR	1069545	Condition	op & SLJIT_SINGLE_OP		1069248	0					
ANR	1069546	BitAndExpression	op & SLJIT_SINGLE_OP		1069248	0		&			
ANR	1069547	Identifier	op		1069248	0					
ANR	1069548	Identifier	SLJIT_SINGLE_OP		1069248	1					
ANR	1069549	PrimaryExpression	1		1069248	1					
ANR	1069550	ShiftExpression	1 << 21		1069248	2		<<			
ANR	1069551	PrimaryExpression	1		1069248	0					
ANR	1069552	PrimaryExpression	21		1069248	1					
ANR	1069553	InclusiveOrExpression	FS ( src ) | FD ( dst_r )		1069248	1		|			
ANR	1069554	CallExpression	FS ( src )		1069248	0					
ANR	1069555	Callee	FS		1069248	0					
ANR	1069556	Identifier	FS		1069248	0					
ANR	1069557	ArgumentList	src		1069248	1					
ANR	1069558	Argument	src		1069248	0					
ANR	1069559	Identifier	src		1069248	0					
ANR	1069560	CallExpression	FD ( dst_r )		1069248	1					
ANR	1069561	Callee	FD		1069248	0					
ANR	1069562	Identifier	FD		1069248	0					
ANR	1069563	ArgumentList	dst_r		1069248	1					
ANR	1069564	Argument	dst_r		1069248	0					
ANR	1069565	Identifier	dst_r		1069248	0					
ANR	1069566	Argument	MOVABLE_INS		1069248	2					
ANR	1069567	Identifier	MOVABLE_INS		1069248	0					
ANR	1069568	ExpressionStatement	op ^= SLJIT_SINGLE_OP	1444:2:48011:48032	1069248	11	True				
ANR	1069569	AssignmentExpression	op ^= SLJIT_SINGLE_OP		1069248	0		^=			
ANR	1069570	Identifier	op		1069248	0					
ANR	1069571	Identifier	SLJIT_SINGLE_OP		1069248	1					
ANR	1069572	BreakStatement	break ;	1445:2:48036:48041	1069248	12	True				
ANR	1069573	IfStatement	if ( dst & SLJIT_MEM )		1069248	10					
ANR	1069574	Condition	dst & SLJIT_MEM	1448:5:48052:48066	1069248	0	True				
ANR	1069575	BitAndExpression	dst & SLJIT_MEM		1069248	0		&			
ANR	1069576	Identifier	dst		1069248	0					
ANR	1069577	Identifier	SLJIT_MEM		1069248	1					
ANR	1069578	ReturnStatement	"return emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , dst_r , dst , dstw , 0 , 0 ) ;"	1449:2:48071:48140	1069248	1	True				
ANR	1069579	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , dst_r , dst , dstw , 0 , 0 )"		1069248	0					
ANR	1069580	Callee	emit_op_mem2		1069248	0					
ANR	1069581	Identifier	emit_op_mem2		1069248	0					
ANR	1069582	ArgumentList	compiler		1069248	1					
ANR	1069583	Argument	compiler		1069248	0					
ANR	1069584	Identifier	compiler		1069248	0					
ANR	1069585	Argument	FLOAT_DATA ( op )		1069248	1					
ANR	1069586	CallExpression	FLOAT_DATA ( op )		1069248	0					
ANR	1069587	Callee	FLOAT_DATA		1069248	0					
ANR	1069588	Identifier	FLOAT_DATA		1069248	0					
ANR	1069589	ArgumentList	op		1069248	1					
ANR	1069590	Argument	op		1069248	0					
ANR	1069591	Identifier	op		1069248	0					
ANR	1069592	Argument	dst_r		1069248	2					
ANR	1069593	Identifier	dst_r		1069248	0					
ANR	1069594	Argument	dst		1069248	3					
ANR	1069595	Identifier	dst		1069248	0					
ANR	1069596	Argument	dstw		1069248	4					
ANR	1069597	Identifier	dstw		1069248	0					
ANR	1069598	Argument	0		1069248	5					
ANR	1069599	PrimaryExpression	0		1069248	0					
ANR	1069600	Argument	0		1069248	6					
ANR	1069601	PrimaryExpression	0		1069248	0					
ANR	1069602	ReturnStatement	return SLJIT_SUCCESS ;	1450:1:48143:48163	1069248	11	True				
ANR	1069603	Identifier	SLJIT_SUCCESS		1069248	0					
ANR	1069604	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1069248	1					
ANR	1069605	Identifier	sljit_emit_fop1		1069248	2					
ANR	1069606	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1069248	3					
ANR	1069607	Parameter	struct sljit_compiler * compiler	1402:50:46780:46810	1069248	0	True				
ANR	1069608	ParameterType	struct sljit_compiler *		1069248	0					
ANR	1069609	Identifier	compiler		1069248	1					
ANR	1069610	Parameter	sljit_si op	1402:83:46813:46823	1069248	1	True				
ANR	1069611	ParameterType	sljit_si		1069248	0					
ANR	1069612	Identifier	op		1069248	1					
ANR	1069613	Parameter	sljit_si dst	1403:1:46827:46838	1069248	2	True				
ANR	1069614	ParameterType	sljit_si		1069248	0					
ANR	1069615	Identifier	dst		1069248	1					
ANR	1069616	Parameter	sljit_sw dstw	1403:15:46841:46853	1069248	3	True				
ANR	1069617	ParameterType	sljit_sw		1069248	0					
ANR	1069618	Identifier	dstw		1069248	1					
ANR	1069619	Parameter	sljit_si src	1404:1:46857:46868	1069248	4	True				
ANR	1069620	ParameterType	sljit_si		1069248	0					
ANR	1069621	Identifier	src		1069248	1					
ANR	1069622	Parameter	sljit_sw srcw	1404:15:46871:46883	1069248	5	True				
ANR	1069623	ParameterType	sljit_sw		1069248	0					
ANR	1069624	Identifier	srcw		1069248	1					
ANR	1069625	CFGEntryNode	ENTRY		1069248		True				
ANR	1069626	CFGExitNode	EXIT		1069248		True				
ANR	1069627	Symbol	compiler -> cache_argw		1069248						
ANR	1069628	Symbol	dst		1069248						
ANR	1069629	Symbol	LOAD_DATA		1069248						
ANR	1069630	Symbol	FLOAT_DATA		1069248						
ANR	1069631	Symbol	TMP_FREG1		1069248						
ANR	1069632	Symbol	SLJIT_MEM		1069248						
ANR	1069633	Symbol	SLJIT_CONVD_FROMS		1069248						
ANR	1069634	Symbol	* compiler		1069248						
ANR	1069635	Symbol	FS		1069248						
ANR	1069636	Symbol	dst_r		1069248						
ANR	1069637	Symbol	GET_OPCODE		1069248						
ANR	1069638	Symbol	ABS_S		1069248						
ANR	1069639	Symbol	float_transfer_bit_error		1069248						
ANR	1069640	Symbol	compiler		1069248						
ANR	1069641	Symbol	op		1069248						
ANR	1069642	Symbol	push_inst		1069248						
ANR	1069643	Symbol	FAST_IS_REG		1069248						
ANR	1069644	Symbol	src		1069248						
ANR	1069645	Symbol	srcw		1069248						
ANR	1069646	Symbol	compiler -> cache_arg		1069248						
ANR	1069647	Symbol	SLJIT_SINGLE_OP		1069248						
ANR	1069648	Symbol	CVT_S_S		1069248						
ANR	1069649	Symbol	emit_op_mem2		1069248						
ANR	1069650	Symbol	MOV_S		1069248						
ANR	1069651	Symbol	SLJIT_SUCCESS		1069248						
ANR	1069652	Symbol	FMT		1069248						
ANR	1069653	Symbol	NEG_S		1069248						
ANR	1069654	Symbol	DOUBLE_DATA		1069248						
ANR	1069655	Symbol	MOVABLE_INS		1069248						
ANR	1069656	Symbol	dstw		1069248						
ANR	1069657	Symbol	FD		1069248						
ANR	1069658	Function	sljit_emit_fop2	1453:0:48168:50692							
ANR	1069659	FunctionDef	"sljit_emit_fop2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1069658	0					
ANR	1069660	CompoundStatement		1457:0:48358:50692	1069658	0					
ANR	1069661	IdentifierDeclStatement	"sljit_si dst_r , flags = 0 ;"	1458:1:48361:48386	1069658	0	True				
ANR	1069662	IdentifierDecl	dst_r		1069658	0					
ANR	1069663	IdentifierDeclType	sljit_si		1069658	0					
ANR	1069664	Identifier	dst_r		1069658	1					
ANR	1069665	IdentifierDecl	flags = 0		1069658	1					
ANR	1069666	IdentifierDeclType	sljit_si		1069658	0					
ANR	1069667	Identifier	flags		1069658	1					
ANR	1069668	AssignmentExpression	flags = 0		1069658	2		=			
ANR	1069669	Identifier	flags		1069658	0					
ANR	1069670	PrimaryExpression	0		1069658	1					
ANR	1069671	ExpressionStatement	CHECK_ERROR ( )	1460:1:48390:48403	1069658	1	True				
ANR	1069672	CallExpression	CHECK_ERROR ( )		1069658	0					
ANR	1069673	Callee	CHECK_ERROR		1069658	0					
ANR	1069674	Identifier	CHECK_ERROR		1069658	0					
ANR	1069675	ArgumentList			1069658	1					
ANR	1069676	ExpressionStatement	"CHECK ( check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"	1461:1:48406:48485	1069658	2	True				
ANR	1069677	CallExpression	"CHECK ( check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"		1069658	0					
ANR	1069678	Callee	CHECK		1069658	0					
ANR	1069679	Identifier	CHECK		1069658	0					
ANR	1069680	ArgumentList	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1069658	1					
ANR	1069681	Argument	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1069658	0					
ANR	1069682	CallExpression	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1069658	0					
ANR	1069683	Callee	check_sljit_emit_fop2		1069658	0					
ANR	1069684	Identifier	check_sljit_emit_fop2		1069658	0					
ANR	1069685	ArgumentList	compiler		1069658	1					
ANR	1069686	Argument	compiler		1069658	0					
ANR	1069687	Identifier	compiler		1069658	0					
ANR	1069688	Argument	op		1069658	1					
ANR	1069689	Identifier	op		1069658	0					
ANR	1069690	Argument	dst		1069658	2					
ANR	1069691	Identifier	dst		1069658	0					
ANR	1069692	Argument	dstw		1069658	3					
ANR	1069693	Identifier	dstw		1069658	0					
ANR	1069694	Argument	src1		1069658	4					
ANR	1069695	Identifier	src1		1069658	0					
ANR	1069696	Argument	src1w		1069658	5					
ANR	1069697	Identifier	src1w		1069658	0					
ANR	1069698	Argument	src2		1069658	6					
ANR	1069699	Identifier	src2		1069658	0					
ANR	1069700	Argument	src2w		1069658	7					
ANR	1069701	Identifier	src2w		1069658	0					
ANR	1069702	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1462:1:48488:48518	1069658	3	True				
ANR	1069703	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1069658	0					
ANR	1069704	Callee	ADJUST_LOCAL_OFFSET		1069658	0					
ANR	1069705	Identifier	ADJUST_LOCAL_OFFSET		1069658	0					
ANR	1069706	ArgumentList	dst		1069658	1					
ANR	1069707	Argument	dst		1069658	0					
ANR	1069708	Identifier	dst		1069658	0					
ANR	1069709	Argument	dstw		1069658	1					
ANR	1069710	Identifier	dstw		1069658	0					
ANR	1069711	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"	1463:1:48521:48553	1069658	4	True				
ANR	1069712	CallExpression	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"		1069658	0					
ANR	1069713	Callee	ADJUST_LOCAL_OFFSET		1069658	0					
ANR	1069714	Identifier	ADJUST_LOCAL_OFFSET		1069658	0					
ANR	1069715	ArgumentList	src1		1069658	1					
ANR	1069716	Argument	src1		1069658	0					
ANR	1069717	Identifier	src1		1069658	0					
ANR	1069718	Argument	src1w		1069658	1					
ANR	1069719	Identifier	src1w		1069658	0					
ANR	1069720	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"	1464:1:48556:48588	1069658	5	True				
ANR	1069721	CallExpression	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"		1069658	0					
ANR	1069722	Callee	ADJUST_LOCAL_OFFSET		1069658	0					
ANR	1069723	Identifier	ADJUST_LOCAL_OFFSET		1069658	0					
ANR	1069724	ArgumentList	src2		1069658	1					
ANR	1069725	Argument	src2		1069658	0					
ANR	1069726	Identifier	src2		1069658	0					
ANR	1069727	Argument	src2w		1069658	1					
ANR	1069728	Identifier	src2w		1069658	0					
ANR	1069729	ExpressionStatement	compiler -> cache_arg = 0	1466:1:48592:48615	1069658	6	True				
ANR	1069730	AssignmentExpression	compiler -> cache_arg = 0		1069658	0		=			
ANR	1069731	PtrMemberAccess	compiler -> cache_arg		1069658	0					
ANR	1069732	Identifier	compiler		1069658	0					
ANR	1069733	Identifier	cache_arg		1069658	1					
ANR	1069734	PrimaryExpression	0		1069658	1					
ANR	1069735	ExpressionStatement	compiler -> cache_argw = 0	1467:1:48618:48642	1069658	7	True				
ANR	1069736	AssignmentExpression	compiler -> cache_argw = 0		1069658	0		=			
ANR	1069737	PtrMemberAccess	compiler -> cache_argw		1069658	0					
ANR	1069738	Identifier	compiler		1069658	0					
ANR	1069739	Identifier	cache_argw		1069658	1					
ANR	1069740	PrimaryExpression	0		1069658	1					
ANR	1069741	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? ( dst << 1 ) : TMP_FREG2	1469:1:48646:48695	1069658	8	True				
ANR	1069742	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? ( dst << 1 ) : TMP_FREG2		1069658	0		=			
ANR	1069743	Identifier	dst_r		1069658	0					
ANR	1069744	ConditionalExpression	FAST_IS_REG ( dst ) ? ( dst << 1 ) : TMP_FREG2		1069658	1					
ANR	1069745	Condition	FAST_IS_REG ( dst )		1069658	0					
ANR	1069746	CallExpression	FAST_IS_REG ( dst )		1069658	0					
ANR	1069747	Callee	FAST_IS_REG		1069658	0					
ANR	1069748	Identifier	FAST_IS_REG		1069658	0					
ANR	1069749	ArgumentList	dst		1069658	1					
ANR	1069750	Argument	dst		1069658	0					
ANR	1069751	Identifier	dst		1069658	0					
ANR	1069752	ShiftExpression	dst << 1		1069658	1		<<			
ANR	1069753	Identifier	dst		1069658	0					
ANR	1069754	PrimaryExpression	1		1069658	1					
ANR	1069755	Identifier	TMP_FREG2		1069658	2					
ANR	1069756	IfStatement	if ( src1 & SLJIT_MEM )		1069658	9					
ANR	1069757	Condition	src1 & SLJIT_MEM	1471:5:48703:48718	1069658	0	True				
ANR	1069758	BitAndExpression	src1 & SLJIT_MEM		1069658	0		&			
ANR	1069759	Identifier	src1		1069658	0					
ANR	1069760	Identifier	SLJIT_MEM		1069658	1					
ANR	1069761	CompoundStatement		15:23:362:362	1069658	1					
ANR	1069762	IfStatement	"if ( getput_arg_fast ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w ) )"		1069658	0					
ANR	1069763	Condition	"getput_arg_fast ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w )"	1472:6:48729:48805	1069658	0	True				
ANR	1069764	CallExpression	"getput_arg_fast ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w )"		1069658	0					
ANR	1069765	Callee	getput_arg_fast		1069658	0					
ANR	1069766	Identifier	getput_arg_fast		1069658	0					
ANR	1069767	ArgumentList	compiler		1069658	1					
ANR	1069768	Argument	compiler		1069658	0					
ANR	1069769	Identifier	compiler		1069658	0					
ANR	1069770	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1069658	1					
ANR	1069771	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1069658	0		|			
ANR	1069772	CallExpression	FLOAT_DATA ( op )		1069658	0					
ANR	1069773	Callee	FLOAT_DATA		1069658	0					
ANR	1069774	Identifier	FLOAT_DATA		1069658	0					
ANR	1069775	ArgumentList	op		1069658	1					
ANR	1069776	Argument	op		1069658	0					
ANR	1069777	Identifier	op		1069658	0					
ANR	1069778	Identifier	LOAD_DATA		1069658	1					
ANR	1069779	Argument	TMP_FREG1		1069658	2					
ANR	1069780	Identifier	TMP_FREG1		1069658	0					
ANR	1069781	Argument	src1		1069658	3					
ANR	1069782	Identifier	src1		1069658	0					
ANR	1069783	Argument	src1w		1069658	4					
ANR	1069784	Identifier	src1w		1069658	0					
ANR	1069785	CompoundStatement		16:85:449:449	1069658	1					
ANR	1069786	ExpressionStatement	FAIL_IF ( compiler -> error )	1473:3:48813:48837	1069658	0	True				
ANR	1069787	CallExpression	FAIL_IF ( compiler -> error )		1069658	0					
ANR	1069788	Callee	FAIL_IF		1069658	0					
ANR	1069789	Identifier	FAIL_IF		1069658	0					
ANR	1069790	ArgumentList	compiler -> error		1069658	1					
ANR	1069791	Argument	compiler -> error		1069658	0					
ANR	1069792	PtrMemberAccess	compiler -> error		1069658	0					
ANR	1069793	Identifier	compiler		1069658	0					
ANR	1069794	Identifier	error		1069658	1					
ANR	1069795	ExpressionStatement	src1 = TMP_FREG1	1474:3:48842:48858	1069658	1	True				
ANR	1069796	AssignmentExpression	src1 = TMP_FREG1		1069658	0		=			
ANR	1069797	Identifier	src1		1069658	0					
ANR	1069798	Identifier	TMP_FREG1		1069658	1					
ANR	1069799	ElseStatement	else		1069658	0					
ANR	1069800	ExpressionStatement	flags |= SLOW_SRC1	1476:3:48872:48890	1069658	0	True				
ANR	1069801	AssignmentExpression	flags |= SLOW_SRC1		1069658	0		|=			
ANR	1069802	Identifier	flags		1069658	0					
ANR	1069803	Identifier	SLOW_SRC1		1069658	1					
ANR	1069804	ElseStatement	else		1069658	0					
ANR	1069805	ExpressionStatement	src1 <<= 1	1479:2:48903:48913	1069658	0	True				
ANR	1069806	AssignmentExpression	src1 <<= 1		1069658	0		<<=			
ANR	1069807	Identifier	src1		1069658	0					
ANR	1069808	PrimaryExpression	1		1069658	1					
ANR	1069809	IfStatement	if ( src2 & SLJIT_MEM )		1069658	10					
ANR	1069810	Condition	src2 & SLJIT_MEM	1481:5:48921:48936	1069658	0	True				
ANR	1069811	BitAndExpression	src2 & SLJIT_MEM		1069658	0		&			
ANR	1069812	Identifier	src2		1069658	0					
ANR	1069813	Identifier	SLJIT_MEM		1069658	1					
ANR	1069814	CompoundStatement		25:23:580:580	1069658	1					
ANR	1069815	IfStatement	"if ( getput_arg_fast ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w ) )"		1069658	0					
ANR	1069816	Condition	"getput_arg_fast ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w )"	1482:6:48947:49023	1069658	0	True				
ANR	1069817	CallExpression	"getput_arg_fast ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w )"		1069658	0					
ANR	1069818	Callee	getput_arg_fast		1069658	0					
ANR	1069819	Identifier	getput_arg_fast		1069658	0					
ANR	1069820	ArgumentList	compiler		1069658	1					
ANR	1069821	Argument	compiler		1069658	0					
ANR	1069822	Identifier	compiler		1069658	0					
ANR	1069823	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1069658	1					
ANR	1069824	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1069658	0		|			
ANR	1069825	CallExpression	FLOAT_DATA ( op )		1069658	0					
ANR	1069826	Callee	FLOAT_DATA		1069658	0					
ANR	1069827	Identifier	FLOAT_DATA		1069658	0					
ANR	1069828	ArgumentList	op		1069658	1					
ANR	1069829	Argument	op		1069658	0					
ANR	1069830	Identifier	op		1069658	0					
ANR	1069831	Identifier	LOAD_DATA		1069658	1					
ANR	1069832	Argument	TMP_FREG2		1069658	2					
ANR	1069833	Identifier	TMP_FREG2		1069658	0					
ANR	1069834	Argument	src2		1069658	3					
ANR	1069835	Identifier	src2		1069658	0					
ANR	1069836	Argument	src2w		1069658	4					
ANR	1069837	Identifier	src2w		1069658	0					
ANR	1069838	CompoundStatement		26:85:667:667	1069658	1					
ANR	1069839	ExpressionStatement	FAIL_IF ( compiler -> error )	1483:3:49031:49055	1069658	0	True				
ANR	1069840	CallExpression	FAIL_IF ( compiler -> error )		1069658	0					
ANR	1069841	Callee	FAIL_IF		1069658	0					
ANR	1069842	Identifier	FAIL_IF		1069658	0					
ANR	1069843	ArgumentList	compiler -> error		1069658	1					
ANR	1069844	Argument	compiler -> error		1069658	0					
ANR	1069845	PtrMemberAccess	compiler -> error		1069658	0					
ANR	1069846	Identifier	compiler		1069658	0					
ANR	1069847	Identifier	error		1069658	1					
ANR	1069848	ExpressionStatement	src2 = TMP_FREG2	1484:3:49060:49076	1069658	1	True				
ANR	1069849	AssignmentExpression	src2 = TMP_FREG2		1069658	0		=			
ANR	1069850	Identifier	src2		1069658	0					
ANR	1069851	Identifier	TMP_FREG2		1069658	1					
ANR	1069852	ElseStatement	else		1069658	0					
ANR	1069853	ExpressionStatement	flags |= SLOW_SRC2	1486:3:49090:49108	1069658	0	True				
ANR	1069854	AssignmentExpression	flags |= SLOW_SRC2		1069658	0		|=			
ANR	1069855	Identifier	flags		1069658	0					
ANR	1069856	Identifier	SLOW_SRC2		1069658	1					
ANR	1069857	ElseStatement	else		1069658	0					
ANR	1069858	ExpressionStatement	src2 <<= 1	1489:2:49121:49131	1069658	0	True				
ANR	1069859	AssignmentExpression	src2 <<= 1		1069658	0		<<=			
ANR	1069860	Identifier	src2		1069658	0					
ANR	1069861	PrimaryExpression	1		1069658	1					
ANR	1069862	IfStatement	if ( ( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 ) )		1069658	11					
ANR	1069863	Condition	( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 )	1491:5:49139:49198	1069658	0	True				
ANR	1069864	EqualityExpression	( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 )		1069658	0		==			
ANR	1069865	BitAndExpression	flags & ( SLOW_SRC1 | SLOW_SRC2 )		1069658	0		&			
ANR	1069866	Identifier	flags		1069658	0					
ANR	1069867	InclusiveOrExpression	SLOW_SRC1 | SLOW_SRC2		1069658	1		|			
ANR	1069868	Identifier	SLOW_SRC1		1069658	0					
ANR	1069869	Identifier	SLOW_SRC2		1069658	1					
ANR	1069870	InclusiveOrExpression	SLOW_SRC1 | SLOW_SRC2		1069658	1		|			
ANR	1069871	Identifier	SLOW_SRC1		1069658	0					
ANR	1069872	Identifier	SLOW_SRC2		1069658	1					
ANR	1069873	CompoundStatement		35:67:842:842	1069658	1					
ANR	1069874	IfStatement	"if ( ! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw ) )"		1069658	0					
ANR	1069875	Condition	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"	1492:6:49209:49281	1069658	0	True				
ANR	1069876	AndExpression	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"		1069658	0		&&			
ANR	1069877	UnaryOperationExpression	"! can_cache ( src1 , src1w , src2 , src2w )"		1069658	0					
ANR	1069878	UnaryOperator	!		1069658	0					
ANR	1069879	CallExpression	"can_cache ( src1 , src1w , src2 , src2w )"		1069658	1					
ANR	1069880	Callee	can_cache		1069658	0					
ANR	1069881	Identifier	can_cache		1069658	0					
ANR	1069882	ArgumentList	src1		1069658	1					
ANR	1069883	Argument	src1		1069658	0					
ANR	1069884	Identifier	src1		1069658	0					
ANR	1069885	Argument	src1w		1069658	1					
ANR	1069886	Identifier	src1w		1069658	0					
ANR	1069887	Argument	src2		1069658	2					
ANR	1069888	Identifier	src2		1069658	0					
ANR	1069889	Argument	src2w		1069658	3					
ANR	1069890	Identifier	src2w		1069658	0					
ANR	1069891	CallExpression	"can_cache ( src1 , src1w , dst , dstw )"		1069658	1					
ANR	1069892	Callee	can_cache		1069658	0					
ANR	1069893	Identifier	can_cache		1069658	0					
ANR	1069894	ArgumentList	src1		1069658	1					
ANR	1069895	Argument	src1		1069658	0					
ANR	1069896	Identifier	src1		1069658	0					
ANR	1069897	Argument	src1w		1069658	1					
ANR	1069898	Identifier	src1w		1069658	0					
ANR	1069899	Argument	dst		1069658	2					
ANR	1069900	Identifier	dst		1069658	0					
ANR	1069901	Argument	dstw		1069658	3					
ANR	1069902	Identifier	dstw		1069658	0					
ANR	1069903	CompoundStatement		36:81:925:925	1069658	1					
ANR	1069904	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , src1 , src1w ) )"	1493:3:49289:49383	1069658	0	True				
ANR	1069905	CallExpression	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , src1 , src1w ) )"		1069658	0					
ANR	1069906	Callee	FAIL_IF		1069658	0					
ANR	1069907	Identifier	FAIL_IF		1069658	0					
ANR	1069908	ArgumentList	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , src1 , src1w )"		1069658	1					
ANR	1069909	Argument	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , src1 , src1w )"		1069658	0					
ANR	1069910	CallExpression	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , src1 , src1w )"		1069658	0					
ANR	1069911	Callee	getput_arg		1069658	0					
ANR	1069912	Identifier	getput_arg		1069658	0					
ANR	1069913	ArgumentList	compiler		1069658	1					
ANR	1069914	Argument	compiler		1069658	0					
ANR	1069915	Identifier	compiler		1069658	0					
ANR	1069916	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1069658	1					
ANR	1069917	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1069658	0		|			
ANR	1069918	CallExpression	FLOAT_DATA ( op )		1069658	0					
ANR	1069919	Callee	FLOAT_DATA		1069658	0					
ANR	1069920	Identifier	FLOAT_DATA		1069658	0					
ANR	1069921	ArgumentList	op		1069658	1					
ANR	1069922	Argument	op		1069658	0					
ANR	1069923	Identifier	op		1069658	0					
ANR	1069924	Identifier	LOAD_DATA		1069658	1					
ANR	1069925	Argument	TMP_FREG2		1069658	2					
ANR	1069926	Identifier	TMP_FREG2		1069658	0					
ANR	1069927	Argument	src2		1069658	3					
ANR	1069928	Identifier	src2		1069658	0					
ANR	1069929	Argument	src2w		1069658	4					
ANR	1069930	Identifier	src2w		1069658	0					
ANR	1069931	Argument	src1		1069658	5					
ANR	1069932	Identifier	src1		1069658	0					
ANR	1069933	Argument	src1w		1069658	6					
ANR	1069934	Identifier	src1w		1069658	0					
ANR	1069935	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw ) )"	1494:3:49388:49480	1069658	1	True				
ANR	1069936	CallExpression	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw ) )"		1069658	0					
ANR	1069937	Callee	FAIL_IF		1069658	0					
ANR	1069938	Identifier	FAIL_IF		1069658	0					
ANR	1069939	ArgumentList	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw )"		1069658	1					
ANR	1069940	Argument	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw )"		1069658	0					
ANR	1069941	CallExpression	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw )"		1069658	0					
ANR	1069942	Callee	getput_arg		1069658	0					
ANR	1069943	Identifier	getput_arg		1069658	0					
ANR	1069944	ArgumentList	compiler		1069658	1					
ANR	1069945	Argument	compiler		1069658	0					
ANR	1069946	Identifier	compiler		1069658	0					
ANR	1069947	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1069658	1					
ANR	1069948	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1069658	0		|			
ANR	1069949	CallExpression	FLOAT_DATA ( op )		1069658	0					
ANR	1069950	Callee	FLOAT_DATA		1069658	0					
ANR	1069951	Identifier	FLOAT_DATA		1069658	0					
ANR	1069952	ArgumentList	op		1069658	1					
ANR	1069953	Argument	op		1069658	0					
ANR	1069954	Identifier	op		1069658	0					
ANR	1069955	Identifier	LOAD_DATA		1069658	1					
ANR	1069956	Argument	TMP_FREG1		1069658	2					
ANR	1069957	Identifier	TMP_FREG1		1069658	0					
ANR	1069958	Argument	src1		1069658	3					
ANR	1069959	Identifier	src1		1069658	0					
ANR	1069960	Argument	src1w		1069658	4					
ANR	1069961	Identifier	src1w		1069658	0					
ANR	1069962	Argument	dst		1069658	5					
ANR	1069963	Identifier	dst		1069658	0					
ANR	1069964	Argument	dstw		1069658	6					
ANR	1069965	Identifier	dstw		1069658	0					
ANR	1069966	ElseStatement	else		1069658	0					
ANR	1069967	CompoundStatement		40:7:1134:1134	1069658	0					
ANR	1069968	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w ) )"	1497:3:49498:49592	1069658	0	True				
ANR	1069969	CallExpression	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w ) )"		1069658	0					
ANR	1069970	Callee	FAIL_IF		1069658	0					
ANR	1069971	Identifier	FAIL_IF		1069658	0					
ANR	1069972	ArgumentList	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1069658	1					
ANR	1069973	Argument	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1069658	0					
ANR	1069974	CallExpression	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1069658	0					
ANR	1069975	Callee	getput_arg		1069658	0					
ANR	1069976	Identifier	getput_arg		1069658	0					
ANR	1069977	ArgumentList	compiler		1069658	1					
ANR	1069978	Argument	compiler		1069658	0					
ANR	1069979	Identifier	compiler		1069658	0					
ANR	1069980	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1069658	1					
ANR	1069981	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1069658	0		|			
ANR	1069982	CallExpression	FLOAT_DATA ( op )		1069658	0					
ANR	1069983	Callee	FLOAT_DATA		1069658	0					
ANR	1069984	Identifier	FLOAT_DATA		1069658	0					
ANR	1069985	ArgumentList	op		1069658	1					
ANR	1069986	Argument	op		1069658	0					
ANR	1069987	Identifier	op		1069658	0					
ANR	1069988	Identifier	LOAD_DATA		1069658	1					
ANR	1069989	Argument	TMP_FREG1		1069658	2					
ANR	1069990	Identifier	TMP_FREG1		1069658	0					
ANR	1069991	Argument	src1		1069658	3					
ANR	1069992	Identifier	src1		1069658	0					
ANR	1069993	Argument	src1w		1069658	4					
ANR	1069994	Identifier	src1w		1069658	0					
ANR	1069995	Argument	src2		1069658	5					
ANR	1069996	Identifier	src2		1069658	0					
ANR	1069997	Argument	src2w		1069658	6					
ANR	1069998	Identifier	src2w		1069658	0					
ANR	1069999	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw ) )"	1498:3:49597:49689	1069658	1	True				
ANR	1070000	CallExpression	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw ) )"		1069658	0					
ANR	1070001	Callee	FAIL_IF		1069658	0					
ANR	1070002	Identifier	FAIL_IF		1069658	0					
ANR	1070003	ArgumentList	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw )"		1069658	1					
ANR	1070004	Argument	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw )"		1069658	0					
ANR	1070005	CallExpression	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw )"		1069658	0					
ANR	1070006	Callee	getput_arg		1069658	0					
ANR	1070007	Identifier	getput_arg		1069658	0					
ANR	1070008	ArgumentList	compiler		1069658	1					
ANR	1070009	Argument	compiler		1069658	0					
ANR	1070010	Identifier	compiler		1069658	0					
ANR	1070011	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1069658	1					
ANR	1070012	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1069658	0		|			
ANR	1070013	CallExpression	FLOAT_DATA ( op )		1069658	0					
ANR	1070014	Callee	FLOAT_DATA		1069658	0					
ANR	1070015	Identifier	FLOAT_DATA		1069658	0					
ANR	1070016	ArgumentList	op		1069658	1					
ANR	1070017	Argument	op		1069658	0					
ANR	1070018	Identifier	op		1069658	0					
ANR	1070019	Identifier	LOAD_DATA		1069658	1					
ANR	1070020	Argument	TMP_FREG2		1069658	2					
ANR	1070021	Identifier	TMP_FREG2		1069658	0					
ANR	1070022	Argument	src2		1069658	3					
ANR	1070023	Identifier	src2		1069658	0					
ANR	1070024	Argument	src2w		1069658	4					
ANR	1070025	Identifier	src2w		1069658	0					
ANR	1070026	Argument	dst		1069658	5					
ANR	1070027	Identifier	dst		1069658	0					
ANR	1070028	Argument	dstw		1069658	6					
ANR	1070029	Identifier	dstw		1069658	0					
ANR	1070030	ElseStatement	else		1069658	0					
ANR	1070031	IfStatement	if ( flags & SLOW_SRC1 )		1069658	0					
ANR	1070032	Condition	flags & SLOW_SRC1	1501:10:49708:49724	1069658	0	True				
ANR	1070033	BitAndExpression	flags & SLOW_SRC1		1069658	0		&			
ANR	1070034	Identifier	flags		1069658	0					
ANR	1070035	Identifier	SLOW_SRC1		1069658	1					
ANR	1070036	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw ) )"	1502:2:49729:49821	1069658	1	True				
ANR	1070037	CallExpression	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw ) )"		1069658	0					
ANR	1070038	Callee	FAIL_IF		1069658	0					
ANR	1070039	Identifier	FAIL_IF		1069658	0					
ANR	1070040	ArgumentList	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw )"		1069658	1					
ANR	1070041	Argument	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw )"		1069658	0					
ANR	1070042	CallExpression	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw )"		1069658	0					
ANR	1070043	Callee	getput_arg		1069658	0					
ANR	1070044	Identifier	getput_arg		1069658	0					
ANR	1070045	ArgumentList	compiler		1069658	1					
ANR	1070046	Argument	compiler		1069658	0					
ANR	1070047	Identifier	compiler		1069658	0					
ANR	1070048	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1069658	1					
ANR	1070049	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1069658	0		|			
ANR	1070050	CallExpression	FLOAT_DATA ( op )		1069658	0					
ANR	1070051	Callee	FLOAT_DATA		1069658	0					
ANR	1070052	Identifier	FLOAT_DATA		1069658	0					
ANR	1070053	ArgumentList	op		1069658	1					
ANR	1070054	Argument	op		1069658	0					
ANR	1070055	Identifier	op		1069658	0					
ANR	1070056	Identifier	LOAD_DATA		1069658	1					
ANR	1070057	Argument	TMP_FREG1		1069658	2					
ANR	1070058	Identifier	TMP_FREG1		1069658	0					
ANR	1070059	Argument	src1		1069658	3					
ANR	1070060	Identifier	src1		1069658	0					
ANR	1070061	Argument	src1w		1069658	4					
ANR	1070062	Identifier	src1w		1069658	0					
ANR	1070063	Argument	dst		1069658	5					
ANR	1070064	Identifier	dst		1069658	0					
ANR	1070065	Argument	dstw		1069658	6					
ANR	1070066	Identifier	dstw		1069658	0					
ANR	1070067	ElseStatement	else		1069658	0					
ANR	1070068	IfStatement	if ( flags & SLOW_SRC2 )		1069658	0					
ANR	1070069	Condition	flags & SLOW_SRC2	1503:10:49833:49849	1069658	0	True				
ANR	1070070	BitAndExpression	flags & SLOW_SRC2		1069658	0		&			
ANR	1070071	Identifier	flags		1069658	0					
ANR	1070072	Identifier	SLOW_SRC2		1069658	1					
ANR	1070073	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw ) )"	1504:2:49854:49946	1069658	1	True				
ANR	1070074	CallExpression	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw ) )"		1069658	0					
ANR	1070075	Callee	FAIL_IF		1069658	0					
ANR	1070076	Identifier	FAIL_IF		1069658	0					
ANR	1070077	ArgumentList	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw )"		1069658	1					
ANR	1070078	Argument	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw )"		1069658	0					
ANR	1070079	CallExpression	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw )"		1069658	0					
ANR	1070080	Callee	getput_arg		1069658	0					
ANR	1070081	Identifier	getput_arg		1069658	0					
ANR	1070082	ArgumentList	compiler		1069658	1					
ANR	1070083	Argument	compiler		1069658	0					
ANR	1070084	Identifier	compiler		1069658	0					
ANR	1070085	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1069658	1					
ANR	1070086	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1069658	0		|			
ANR	1070087	CallExpression	FLOAT_DATA ( op )		1069658	0					
ANR	1070088	Callee	FLOAT_DATA		1069658	0					
ANR	1070089	Identifier	FLOAT_DATA		1069658	0					
ANR	1070090	ArgumentList	op		1069658	1					
ANR	1070091	Argument	op		1069658	0					
ANR	1070092	Identifier	op		1069658	0					
ANR	1070093	Identifier	LOAD_DATA		1069658	1					
ANR	1070094	Argument	TMP_FREG2		1069658	2					
ANR	1070095	Identifier	TMP_FREG2		1069658	0					
ANR	1070096	Argument	src2		1069658	3					
ANR	1070097	Identifier	src2		1069658	0					
ANR	1070098	Argument	src2w		1069658	4					
ANR	1070099	Identifier	src2w		1069658	0					
ANR	1070100	Argument	dst		1069658	5					
ANR	1070101	Identifier	dst		1069658	0					
ANR	1070102	Argument	dstw		1069658	6					
ANR	1070103	Identifier	dstw		1069658	0					
ANR	1070104	IfStatement	if ( flags & SLOW_SRC1 )		1069658	12					
ANR	1070105	Condition	flags & SLOW_SRC1	1506:5:49954:49970	1069658	0	True				
ANR	1070106	BitAndExpression	flags & SLOW_SRC1		1069658	0		&			
ANR	1070107	Identifier	flags		1069658	0					
ANR	1070108	Identifier	SLOW_SRC1		1069658	1					
ANR	1070109	ExpressionStatement	src1 = TMP_FREG1	1507:2:49975:49991	1069658	1	True				
ANR	1070110	AssignmentExpression	src1 = TMP_FREG1		1069658	0		=			
ANR	1070111	Identifier	src1		1069658	0					
ANR	1070112	Identifier	TMP_FREG1		1069658	1					
ANR	1070113	IfStatement	if ( flags & SLOW_SRC2 )		1069658	13					
ANR	1070114	Condition	flags & SLOW_SRC2	1508:5:49998:50014	1069658	0	True				
ANR	1070115	BitAndExpression	flags & SLOW_SRC2		1069658	0		&			
ANR	1070116	Identifier	flags		1069658	0					
ANR	1070117	Identifier	SLOW_SRC2		1069658	1					
ANR	1070118	ExpressionStatement	src2 = TMP_FREG2	1509:2:50019:50035	1069658	1	True				
ANR	1070119	AssignmentExpression	src2 = TMP_FREG2		1069658	0		=			
ANR	1070120	Identifier	src2		1069658	0					
ANR	1070121	Identifier	TMP_FREG2		1069658	1					
ANR	1070122	SwitchStatement	switch ( GET_OPCODE ( op ) )		1069658	14					
ANR	1070123	Condition	GET_OPCODE ( op )	1511:9:50047:50060	1069658	0	True				
ANR	1070124	CallExpression	GET_OPCODE ( op )		1069658	0					
ANR	1070125	Callee	GET_OPCODE		1069658	0					
ANR	1070126	Identifier	GET_OPCODE		1069658	0					
ANR	1070127	ArgumentList	op		1069658	1					
ANR	1070128	Argument	op		1069658	0					
ANR	1070129	Identifier	op		1069658	0					
ANR	1070130	CompoundStatement		55:25:1704:1704	1069658	1					
ANR	1070131	Label	case SLJIT_DADD :	1512:1:50066:50081	1069658	0	True				
ANR	1070132	Identifier	SLJIT_DADD		1069658	0					
ANR	1070133	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADD_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r ) , MOVABLE_INS ) )"	1513:2:50085:50177	1069658	1	True				
ANR	1070134	CallExpression	"FAIL_IF ( push_inst ( compiler , ADD_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r ) , MOVABLE_INS ) )"		1069658	0					
ANR	1070135	Callee	FAIL_IF		1069658	0					
ANR	1070136	Identifier	FAIL_IF		1069658	0					
ANR	1070137	ArgumentList	"push_inst ( compiler , ADD_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r ) , MOVABLE_INS )"		1069658	1					
ANR	1070138	Argument	"push_inst ( compiler , ADD_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r ) , MOVABLE_INS )"		1069658	0					
ANR	1070139	CallExpression	"push_inst ( compiler , ADD_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r ) , MOVABLE_INS )"		1069658	0					
ANR	1070140	Callee	push_inst		1069658	0					
ANR	1070141	Identifier	push_inst		1069658	0					
ANR	1070142	ArgumentList	compiler		1069658	1					
ANR	1070143	Argument	compiler		1069658	0					
ANR	1070144	Identifier	compiler		1069658	0					
ANR	1070145	Argument	ADD_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r )		1069658	1					
ANR	1070146	InclusiveOrExpression	ADD_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r )		1069658	0		|			
ANR	1070147	Identifier	ADD_S		1069658	0					
ANR	1070148	InclusiveOrExpression	FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r )		1069658	1		|			
ANR	1070149	CallExpression	FMT ( op )		1069658	0					
ANR	1070150	Callee	FMT		1069658	0					
ANR	1070151	Identifier	FMT		1069658	0					
ANR	1070152	ArgumentList	op		1069658	1					
ANR	1070153	Argument	op		1069658	0					
ANR	1070154	Identifier	op		1069658	0					
ANR	1070155	InclusiveOrExpression	FT ( src2 ) | FS ( src1 ) | FD ( dst_r )		1069658	1		|			
ANR	1070156	CallExpression	FT ( src2 )		1069658	0					
ANR	1070157	Callee	FT		1069658	0					
ANR	1070158	Identifier	FT		1069658	0					
ANR	1070159	ArgumentList	src2		1069658	1					
ANR	1070160	Argument	src2		1069658	0					
ANR	1070161	Identifier	src2		1069658	0					
ANR	1070162	InclusiveOrExpression	FS ( src1 ) | FD ( dst_r )		1069658	1		|			
ANR	1070163	CallExpression	FS ( src1 )		1069658	0					
ANR	1070164	Callee	FS		1069658	0					
ANR	1070165	Identifier	FS		1069658	0					
ANR	1070166	ArgumentList	src1		1069658	1					
ANR	1070167	Argument	src1		1069658	0					
ANR	1070168	Identifier	src1		1069658	0					
ANR	1070169	CallExpression	FD ( dst_r )		1069658	1					
ANR	1070170	Callee	FD		1069658	0					
ANR	1070171	Identifier	FD		1069658	0					
ANR	1070172	ArgumentList	dst_r		1069658	1					
ANR	1070173	Argument	dst_r		1069658	0					
ANR	1070174	Identifier	dst_r		1069658	0					
ANR	1070175	Argument	MOVABLE_INS		1069658	2					
ANR	1070176	Identifier	MOVABLE_INS		1069658	0					
ANR	1070177	BreakStatement	break ;	1514:2:50181:50186	1069658	2	True				
ANR	1070178	Label	case SLJIT_DSUB :	1516:1:50190:50205	1069658	3	True				
ANR	1070179	Identifier	SLJIT_DSUB		1069658	0					
ANR	1070180	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SUB_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r ) , MOVABLE_INS ) )"	1517:2:50209:50301	1069658	4	True				
ANR	1070181	CallExpression	"FAIL_IF ( push_inst ( compiler , SUB_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r ) , MOVABLE_INS ) )"		1069658	0					
ANR	1070182	Callee	FAIL_IF		1069658	0					
ANR	1070183	Identifier	FAIL_IF		1069658	0					
ANR	1070184	ArgumentList	"push_inst ( compiler , SUB_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r ) , MOVABLE_INS )"		1069658	1					
ANR	1070185	Argument	"push_inst ( compiler , SUB_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r ) , MOVABLE_INS )"		1069658	0					
ANR	1070186	CallExpression	"push_inst ( compiler , SUB_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r ) , MOVABLE_INS )"		1069658	0					
ANR	1070187	Callee	push_inst		1069658	0					
ANR	1070188	Identifier	push_inst		1069658	0					
ANR	1070189	ArgumentList	compiler		1069658	1					
ANR	1070190	Argument	compiler		1069658	0					
ANR	1070191	Identifier	compiler		1069658	0					
ANR	1070192	Argument	SUB_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r )		1069658	1					
ANR	1070193	InclusiveOrExpression	SUB_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r )		1069658	0		|			
ANR	1070194	Identifier	SUB_S		1069658	0					
ANR	1070195	InclusiveOrExpression	FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r )		1069658	1		|			
ANR	1070196	CallExpression	FMT ( op )		1069658	0					
ANR	1070197	Callee	FMT		1069658	0					
ANR	1070198	Identifier	FMT		1069658	0					
ANR	1070199	ArgumentList	op		1069658	1					
ANR	1070200	Argument	op		1069658	0					
ANR	1070201	Identifier	op		1069658	0					
ANR	1070202	InclusiveOrExpression	FT ( src2 ) | FS ( src1 ) | FD ( dst_r )		1069658	1		|			
ANR	1070203	CallExpression	FT ( src2 )		1069658	0					
ANR	1070204	Callee	FT		1069658	0					
ANR	1070205	Identifier	FT		1069658	0					
ANR	1070206	ArgumentList	src2		1069658	1					
ANR	1070207	Argument	src2		1069658	0					
ANR	1070208	Identifier	src2		1069658	0					
ANR	1070209	InclusiveOrExpression	FS ( src1 ) | FD ( dst_r )		1069658	1		|			
ANR	1070210	CallExpression	FS ( src1 )		1069658	0					
ANR	1070211	Callee	FS		1069658	0					
ANR	1070212	Identifier	FS		1069658	0					
ANR	1070213	ArgumentList	src1		1069658	1					
ANR	1070214	Argument	src1		1069658	0					
ANR	1070215	Identifier	src1		1069658	0					
ANR	1070216	CallExpression	FD ( dst_r )		1069658	1					
ANR	1070217	Callee	FD		1069658	0					
ANR	1070218	Identifier	FD		1069658	0					
ANR	1070219	ArgumentList	dst_r		1069658	1					
ANR	1070220	Argument	dst_r		1069658	0					
ANR	1070221	Identifier	dst_r		1069658	0					
ANR	1070222	Argument	MOVABLE_INS		1069658	2					
ANR	1070223	Identifier	MOVABLE_INS		1069658	0					
ANR	1070224	BreakStatement	break ;	1518:2:50305:50310	1069658	5	True				
ANR	1070225	Label	case SLJIT_DMUL :	1520:1:50314:50329	1069658	6	True				
ANR	1070226	Identifier	SLJIT_DMUL		1069658	0					
ANR	1070227	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MUL_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r ) , MOVABLE_INS ) )"	1521:2:50333:50425	1069658	7	True				
ANR	1070228	CallExpression	"FAIL_IF ( push_inst ( compiler , MUL_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r ) , MOVABLE_INS ) )"		1069658	0					
ANR	1070229	Callee	FAIL_IF		1069658	0					
ANR	1070230	Identifier	FAIL_IF		1069658	0					
ANR	1070231	ArgumentList	"push_inst ( compiler , MUL_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r ) , MOVABLE_INS )"		1069658	1					
ANR	1070232	Argument	"push_inst ( compiler , MUL_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r ) , MOVABLE_INS )"		1069658	0					
ANR	1070233	CallExpression	"push_inst ( compiler , MUL_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r ) , MOVABLE_INS )"		1069658	0					
ANR	1070234	Callee	push_inst		1069658	0					
ANR	1070235	Identifier	push_inst		1069658	0					
ANR	1070236	ArgumentList	compiler		1069658	1					
ANR	1070237	Argument	compiler		1069658	0					
ANR	1070238	Identifier	compiler		1069658	0					
ANR	1070239	Argument	MUL_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r )		1069658	1					
ANR	1070240	InclusiveOrExpression	MUL_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r )		1069658	0		|			
ANR	1070241	Identifier	MUL_S		1069658	0					
ANR	1070242	InclusiveOrExpression	FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r )		1069658	1		|			
ANR	1070243	CallExpression	FMT ( op )		1069658	0					
ANR	1070244	Callee	FMT		1069658	0					
ANR	1070245	Identifier	FMT		1069658	0					
ANR	1070246	ArgumentList	op		1069658	1					
ANR	1070247	Argument	op		1069658	0					
ANR	1070248	Identifier	op		1069658	0					
ANR	1070249	InclusiveOrExpression	FT ( src2 ) | FS ( src1 ) | FD ( dst_r )		1069658	1		|			
ANR	1070250	CallExpression	FT ( src2 )		1069658	0					
ANR	1070251	Callee	FT		1069658	0					
ANR	1070252	Identifier	FT		1069658	0					
ANR	1070253	ArgumentList	src2		1069658	1					
ANR	1070254	Argument	src2		1069658	0					
ANR	1070255	Identifier	src2		1069658	0					
ANR	1070256	InclusiveOrExpression	FS ( src1 ) | FD ( dst_r )		1069658	1		|			
ANR	1070257	CallExpression	FS ( src1 )		1069658	0					
ANR	1070258	Callee	FS		1069658	0					
ANR	1070259	Identifier	FS		1069658	0					
ANR	1070260	ArgumentList	src1		1069658	1					
ANR	1070261	Argument	src1		1069658	0					
ANR	1070262	Identifier	src1		1069658	0					
ANR	1070263	CallExpression	FD ( dst_r )		1069658	1					
ANR	1070264	Callee	FD		1069658	0					
ANR	1070265	Identifier	FD		1069658	0					
ANR	1070266	ArgumentList	dst_r		1069658	1					
ANR	1070267	Argument	dst_r		1069658	0					
ANR	1070268	Identifier	dst_r		1069658	0					
ANR	1070269	Argument	MOVABLE_INS		1069658	2					
ANR	1070270	Identifier	MOVABLE_INS		1069658	0					
ANR	1070271	BreakStatement	break ;	1522:2:50429:50434	1069658	8	True				
ANR	1070272	Label	case SLJIT_DDIV :	1524:1:50438:50453	1069658	9	True				
ANR	1070273	Identifier	SLJIT_DDIV		1069658	0					
ANR	1070274	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , DIV_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r ) , MOVABLE_INS ) )"	1525:2:50457:50549	1069658	10	True				
ANR	1070275	CallExpression	"FAIL_IF ( push_inst ( compiler , DIV_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r ) , MOVABLE_INS ) )"		1069658	0					
ANR	1070276	Callee	FAIL_IF		1069658	0					
ANR	1070277	Identifier	FAIL_IF		1069658	0					
ANR	1070278	ArgumentList	"push_inst ( compiler , DIV_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r ) , MOVABLE_INS )"		1069658	1					
ANR	1070279	Argument	"push_inst ( compiler , DIV_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r ) , MOVABLE_INS )"		1069658	0					
ANR	1070280	CallExpression	"push_inst ( compiler , DIV_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r ) , MOVABLE_INS )"		1069658	0					
ANR	1070281	Callee	push_inst		1069658	0					
ANR	1070282	Identifier	push_inst		1069658	0					
ANR	1070283	ArgumentList	compiler		1069658	1					
ANR	1070284	Argument	compiler		1069658	0					
ANR	1070285	Identifier	compiler		1069658	0					
ANR	1070286	Argument	DIV_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r )		1069658	1					
ANR	1070287	InclusiveOrExpression	DIV_S | FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r )		1069658	0		|			
ANR	1070288	Identifier	DIV_S		1069658	0					
ANR	1070289	InclusiveOrExpression	FMT ( op ) | FT ( src2 ) | FS ( src1 ) | FD ( dst_r )		1069658	1		|			
ANR	1070290	CallExpression	FMT ( op )		1069658	0					
ANR	1070291	Callee	FMT		1069658	0					
ANR	1070292	Identifier	FMT		1069658	0					
ANR	1070293	ArgumentList	op		1069658	1					
ANR	1070294	Argument	op		1069658	0					
ANR	1070295	Identifier	op		1069658	0					
ANR	1070296	InclusiveOrExpression	FT ( src2 ) | FS ( src1 ) | FD ( dst_r )		1069658	1		|			
ANR	1070297	CallExpression	FT ( src2 )		1069658	0					
ANR	1070298	Callee	FT		1069658	0					
ANR	1070299	Identifier	FT		1069658	0					
ANR	1070300	ArgumentList	src2		1069658	1					
ANR	1070301	Argument	src2		1069658	0					
ANR	1070302	Identifier	src2		1069658	0					
ANR	1070303	InclusiveOrExpression	FS ( src1 ) | FD ( dst_r )		1069658	1		|			
ANR	1070304	CallExpression	FS ( src1 )		1069658	0					
ANR	1070305	Callee	FS		1069658	0					
ANR	1070306	Identifier	FS		1069658	0					
ANR	1070307	ArgumentList	src1		1069658	1					
ANR	1070308	Argument	src1		1069658	0					
ANR	1070309	Identifier	src1		1069658	0					
ANR	1070310	CallExpression	FD ( dst_r )		1069658	1					
ANR	1070311	Callee	FD		1069658	0					
ANR	1070312	Identifier	FD		1069658	0					
ANR	1070313	ArgumentList	dst_r		1069658	1					
ANR	1070314	Argument	dst_r		1069658	0					
ANR	1070315	Identifier	dst_r		1069658	0					
ANR	1070316	Argument	MOVABLE_INS		1069658	2					
ANR	1070317	Identifier	MOVABLE_INS		1069658	0					
ANR	1070318	BreakStatement	break ;	1526:2:50553:50558	1069658	11	True				
ANR	1070319	IfStatement	if ( dst_r == TMP_FREG2 )		1069658	15					
ANR	1070320	Condition	dst_r == TMP_FREG2	1529:5:50569:50586	1069658	0	True				
ANR	1070321	EqualityExpression	dst_r == TMP_FREG2		1069658	0		==			
ANR	1070322	Identifier	dst_r		1069658	0					
ANR	1070323	Identifier	TMP_FREG2		1069658	1					
ANR	1070324	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG2 , dst , dstw , 0 , 0 ) )"	1530:2:50591:50666	1069658	1	True				
ANR	1070325	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG2 , dst , dstw , 0 , 0 ) )"		1069658	0					
ANR	1070326	Callee	FAIL_IF		1069658	0					
ANR	1070327	Identifier	FAIL_IF		1069658	0					
ANR	1070328	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG2 , dst , dstw , 0 , 0 )"		1069658	1					
ANR	1070329	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG2 , dst , dstw , 0 , 0 )"		1069658	0					
ANR	1070330	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG2 , dst , dstw , 0 , 0 )"		1069658	0					
ANR	1070331	Callee	emit_op_mem2		1069658	0					
ANR	1070332	Identifier	emit_op_mem2		1069658	0					
ANR	1070333	ArgumentList	compiler		1069658	1					
ANR	1070334	Argument	compiler		1069658	0					
ANR	1070335	Identifier	compiler		1069658	0					
ANR	1070336	Argument	FLOAT_DATA ( op )		1069658	1					
ANR	1070337	CallExpression	FLOAT_DATA ( op )		1069658	0					
ANR	1070338	Callee	FLOAT_DATA		1069658	0					
ANR	1070339	Identifier	FLOAT_DATA		1069658	0					
ANR	1070340	ArgumentList	op		1069658	1					
ANR	1070341	Argument	op		1069658	0					
ANR	1070342	Identifier	op		1069658	0					
ANR	1070343	Argument	TMP_FREG2		1069658	2					
ANR	1070344	Identifier	TMP_FREG2		1069658	0					
ANR	1070345	Argument	dst		1069658	3					
ANR	1070346	Identifier	dst		1069658	0					
ANR	1070347	Argument	dstw		1069658	4					
ANR	1070348	Identifier	dstw		1069658	0					
ANR	1070349	Argument	0		1069658	5					
ANR	1070350	PrimaryExpression	0		1069658	0					
ANR	1070351	Argument	0		1069658	6					
ANR	1070352	PrimaryExpression	0		1069658	0					
ANR	1070353	ReturnStatement	return SLJIT_SUCCESS ;	1532:1:50670:50690	1069658	16	True				
ANR	1070354	Identifier	SLJIT_SUCCESS		1069658	0					
ANR	1070355	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1069658	1					
ANR	1070356	Identifier	sljit_emit_fop2		1069658	2					
ANR	1070357	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1069658	3					
ANR	1070358	Parameter	struct sljit_compiler * compiler	1453:50:48218:48248	1069658	0	True				
ANR	1070359	ParameterType	struct sljit_compiler *		1069658	0					
ANR	1070360	Identifier	compiler		1069658	1					
ANR	1070361	Parameter	sljit_si op	1453:83:48251:48261	1069658	1	True				
ANR	1070362	ParameterType	sljit_si		1069658	0					
ANR	1070363	Identifier	op		1069658	1					
ANR	1070364	Parameter	sljit_si dst	1454:1:48265:48276	1069658	2	True				
ANR	1070365	ParameterType	sljit_si		1069658	0					
ANR	1070366	Identifier	dst		1069658	1					
ANR	1070367	Parameter	sljit_sw dstw	1454:15:48279:48291	1069658	3	True				
ANR	1070368	ParameterType	sljit_sw		1069658	0					
ANR	1070369	Identifier	dstw		1069658	1					
ANR	1070370	Parameter	sljit_si src1	1455:1:48295:48307	1069658	4	True				
ANR	1070371	ParameterType	sljit_si		1069658	0					
ANR	1070372	Identifier	src1		1069658	1					
ANR	1070373	Parameter	sljit_sw src1w	1455:16:48310:48323	1069658	5	True				
ANR	1070374	ParameterType	sljit_sw		1069658	0					
ANR	1070375	Identifier	src1w		1069658	1					
ANR	1070376	Parameter	sljit_si src2	1456:1:48327:48339	1069658	6	True				
ANR	1070377	ParameterType	sljit_si		1069658	0					
ANR	1070378	Identifier	src2		1069658	1					
ANR	1070379	Parameter	sljit_sw src2w	1456:16:48342:48355	1069658	7	True				
ANR	1070380	ParameterType	sljit_sw		1069658	0					
ANR	1070381	Identifier	src2w		1069658	1					
ANR	1070382	CFGEntryNode	ENTRY		1069658		True				
ANR	1070383	CFGExitNode	EXIT		1069658		True				
ANR	1070384	Symbol	SLOW_SRC2		1069658						
ANR	1070385	Symbol	compiler -> cache_argw		1069658						
ANR	1070386	Symbol	TMP_FREG2		1069658						
ANR	1070387	Symbol	src1w		1069658						
ANR	1070388	Symbol	dst		1069658						
ANR	1070389	Symbol	LOAD_DATA		1069658						
ANR	1070390	Symbol	FLOAT_DATA		1069658						
ANR	1070391	Symbol	TMP_FREG1		1069658						
ANR	1070392	Symbol	SLJIT_MEM		1069658						
ANR	1070393	Symbol	SLOW_SRC1		1069658						
ANR	1070394	Symbol	flags		1069658						
ANR	1070395	Symbol	* compiler		1069658						
ANR	1070396	Symbol	FS		1069658						
ANR	1070397	Symbol	SUB_S		1069658						
ANR	1070398	Symbol	FT		1069658						
ANR	1070399	Symbol	dst_r		1069658						
ANR	1070400	Symbol	GET_OPCODE		1069658						
ANR	1070401	Symbol	getput_arg		1069658						
ANR	1070402	Symbol	compiler		1069658						
ANR	1070403	Symbol	MUL_S		1069658						
ANR	1070404	Symbol	src2w		1069658						
ANR	1070405	Symbol	can_cache		1069658						
ANR	1070406	Symbol	op		1069658						
ANR	1070407	Symbol	push_inst		1069658						
ANR	1070408	Symbol	FAST_IS_REG		1069658						
ANR	1070409	Symbol	DIV_S		1069658						
ANR	1070410	Symbol	compiler -> cache_arg		1069658						
ANR	1070411	Symbol	ADD_S		1069658						
ANR	1070412	Symbol	emit_op_mem2		1069658						
ANR	1070413	Symbol	SLJIT_SUCCESS		1069658						
ANR	1070414	Symbol	check_sljit_emit_fop2		1069658						
ANR	1070415	Symbol	FMT		1069658						
ANR	1070416	Symbol	src1		1069658						
ANR	1070417	Symbol	src2		1069658						
ANR	1070418	Symbol	getput_arg_fast		1069658						
ANR	1070419	Symbol	MOVABLE_INS		1069658						
ANR	1070420	Symbol	dstw		1069658						
ANR	1070421	Symbol	compiler -> error		1069658						
ANR	1070422	Symbol	FD		1069658						
ANR	1070423	Function	sljit_emit_fast_enter	1539:0:50924:51445							
ANR	1070424	FunctionDef	"sljit_emit_fast_enter (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw)"		1070423	0					
ANR	1070425	CompoundStatement		1540:0:51042:51445	1070423	0					
ANR	1070426	ExpressionStatement	CHECK_ERROR ( )	1541:1:51045:51058	1070423	0	True				
ANR	1070427	CallExpression	CHECK_ERROR ( )		1070423	0					
ANR	1070428	Callee	CHECK_ERROR		1070423	0					
ANR	1070429	Identifier	CHECK_ERROR		1070423	0					
ANR	1070430	ArgumentList			1070423	1					
ANR	1070431	ExpressionStatement	"CHECK ( check_sljit_emit_fast_enter ( compiler , dst , dstw ) )"	1542:1:51061:51116	1070423	1	True				
ANR	1070432	CallExpression	"CHECK ( check_sljit_emit_fast_enter ( compiler , dst , dstw ) )"		1070423	0					
ANR	1070433	Callee	CHECK		1070423	0					
ANR	1070434	Identifier	CHECK		1070423	0					
ANR	1070435	ArgumentList	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1070423	1					
ANR	1070436	Argument	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1070423	0					
ANR	1070437	CallExpression	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1070423	0					
ANR	1070438	Callee	check_sljit_emit_fast_enter		1070423	0					
ANR	1070439	Identifier	check_sljit_emit_fast_enter		1070423	0					
ANR	1070440	ArgumentList	compiler		1070423	1					
ANR	1070441	Argument	compiler		1070423	0					
ANR	1070442	Identifier	compiler		1070423	0					
ANR	1070443	Argument	dst		1070423	1					
ANR	1070444	Identifier	dst		1070423	0					
ANR	1070445	Argument	dstw		1070423	2					
ANR	1070446	Identifier	dstw		1070423	0					
ANR	1070447	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1543:1:51119:51149	1070423	2	True				
ANR	1070448	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1070423	0					
ANR	1070449	Callee	ADJUST_LOCAL_OFFSET		1070423	0					
ANR	1070450	Identifier	ADJUST_LOCAL_OFFSET		1070423	0					
ANR	1070451	ArgumentList	dst		1070423	1					
ANR	1070452	Argument	dst		1070423	0					
ANR	1070453	Identifier	dst		1070423	0					
ANR	1070454	Argument	dstw		1070423	1					
ANR	1070455	Identifier	dstw		1070423	0					
ANR	1070456	IfStatement	if ( dst == SLJIT_UNUSED )		1070423	3					
ANR	1070457	Condition	dst == SLJIT_UNUSED	1546:5:51204:51222	1070423	0	True				
ANR	1070458	EqualityExpression	dst == SLJIT_UNUSED		1070423	0		==			
ANR	1070459	Identifier	dst		1070423	0					
ANR	1070460	Identifier	SLJIT_UNUSED		1070423	1					
ANR	1070461	ReturnStatement	return SLJIT_SUCCESS ;	1547:2:51227:51247	1070423	1	True				
ANR	1070462	Identifier	SLJIT_SUCCESS		1070423	0					
ANR	1070463	IfStatement	if ( FAST_IS_REG ( dst ) )		1070423	4					
ANR	1070464	Condition	FAST_IS_REG ( dst )	1549:5:51255:51270	1070423	0	True				
ANR	1070465	CallExpression	FAST_IS_REG ( dst )		1070423	0					
ANR	1070466	Callee	FAST_IS_REG		1070423	0					
ANR	1070467	Identifier	FAST_IS_REG		1070423	0					
ANR	1070468	ArgumentList	dst		1070423	1					
ANR	1070469	Argument	dst		1070423	0					
ANR	1070470	Identifier	dst		1070423	0					
ANR	1070471	ReturnStatement	"return push_inst ( compiler , ADDU_W | SA ( RETURN_ADDR_REG ) | TA ( 0 ) | D ( dst ) , DR ( dst ) ) ;"	1550:2:51275:51357	1070423	1	True				
ANR	1070472	CallExpression	"push_inst ( compiler , ADDU_W | SA ( RETURN_ADDR_REG ) | TA ( 0 ) | D ( dst ) , DR ( dst ) )"		1070423	0					
ANR	1070473	Callee	push_inst		1070423	0					
ANR	1070474	Identifier	push_inst		1070423	0					
ANR	1070475	ArgumentList	compiler		1070423	1					
ANR	1070476	Argument	compiler		1070423	0					
ANR	1070477	Identifier	compiler		1070423	0					
ANR	1070478	Argument	ADDU_W | SA ( RETURN_ADDR_REG ) | TA ( 0 ) | D ( dst )		1070423	1					
ANR	1070479	InclusiveOrExpression	ADDU_W | SA ( RETURN_ADDR_REG ) | TA ( 0 ) | D ( dst )		1070423	0		|			
ANR	1070480	Identifier	ADDU_W		1070423	0					
ANR	1070481	InclusiveOrExpression	SA ( RETURN_ADDR_REG ) | TA ( 0 ) | D ( dst )		1070423	1		|			
ANR	1070482	CallExpression	SA ( RETURN_ADDR_REG )		1070423	0					
ANR	1070483	Callee	SA		1070423	0					
ANR	1070484	Identifier	SA		1070423	0					
ANR	1070485	ArgumentList	RETURN_ADDR_REG		1070423	1					
ANR	1070486	Argument	RETURN_ADDR_REG		1070423	0					
ANR	1070487	Identifier	RETURN_ADDR_REG		1070423	0					
ANR	1070488	InclusiveOrExpression	TA ( 0 ) | D ( dst )		1070423	1		|			
ANR	1070489	CallExpression	TA ( 0 )		1070423	0					
ANR	1070490	Callee	TA		1070423	0					
ANR	1070491	Identifier	TA		1070423	0					
ANR	1070492	ArgumentList	0		1070423	1					
ANR	1070493	Argument	0		1070423	0					
ANR	1070494	PrimaryExpression	0		1070423	0					
ANR	1070495	CallExpression	D ( dst )		1070423	1					
ANR	1070496	Callee	D		1070423	0					
ANR	1070497	Identifier	D		1070423	0					
ANR	1070498	ArgumentList	dst		1070423	1					
ANR	1070499	Argument	dst		1070423	0					
ANR	1070500	Identifier	dst		1070423	0					
ANR	1070501	Argument	DR ( dst )		1070423	2					
ANR	1070502	CallExpression	DR ( dst )		1070423	0					
ANR	1070503	Callee	DR		1070423	0					
ANR	1070504	Identifier	DR		1070423	0					
ANR	1070505	ArgumentList	dst		1070423	1					
ANR	1070506	Argument	dst		1070423	0					
ANR	1070507	Identifier	dst		1070423	0					
ANR	1070508	ReturnStatement	"return emit_op_mem ( compiler , WORD_DATA , RETURN_ADDR_REG , dst , dstw ) ;"	1553:1:51376:51443	1070423	5	True				
ANR	1070509	CallExpression	"emit_op_mem ( compiler , WORD_DATA , RETURN_ADDR_REG , dst , dstw )"		1070423	0					
ANR	1070510	Callee	emit_op_mem		1070423	0					
ANR	1070511	Identifier	emit_op_mem		1070423	0					
ANR	1070512	ArgumentList	compiler		1070423	1					
ANR	1070513	Argument	compiler		1070423	0					
ANR	1070514	Identifier	compiler		1070423	0					
ANR	1070515	Argument	WORD_DATA		1070423	1					
ANR	1070516	Identifier	WORD_DATA		1070423	0					
ANR	1070517	Argument	RETURN_ADDR_REG		1070423	2					
ANR	1070518	Identifier	RETURN_ADDR_REG		1070423	0					
ANR	1070519	Argument	dst		1070423	3					
ANR	1070520	Identifier	dst		1070423	0					
ANR	1070521	Argument	dstw		1070423	4					
ANR	1070522	Identifier	dstw		1070423	0					
ANR	1070523	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1070423	1					
ANR	1070524	Identifier	sljit_emit_fast_enter		1070423	2					
ANR	1070525	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw"		1070423	3					
ANR	1070526	Parameter	struct sljit_compiler * compiler	1539:56:50980:51010	1070423	0	True				
ANR	1070527	ParameterType	struct sljit_compiler *		1070423	0					
ANR	1070528	Identifier	compiler		1070423	1					
ANR	1070529	Parameter	sljit_si dst	1539:89:51013:51024	1070423	1	True				
ANR	1070530	ParameterType	sljit_si		1070423	0					
ANR	1070531	Identifier	dst		1070423	1					
ANR	1070532	Parameter	sljit_sw dstw	1539:103:51027:51039	1070423	2	True				
ANR	1070533	ParameterType	sljit_sw		1070423	0					
ANR	1070534	Identifier	dstw		1070423	1					
ANR	1070535	CFGEntryNode	ENTRY		1070423		True				
ANR	1070536	CFGExitNode	EXIT		1070423		True				
ANR	1070537	Symbol	push_inst		1070423						
ANR	1070538	Symbol	check_sljit_emit_fast_enter		1070423						
ANR	1070539	Symbol	FAST_IS_REG		1070423						
ANR	1070540	Symbol	dst		1070423						
ANR	1070541	Symbol	D		1070423						
ANR	1070542	Symbol	ADDU_W		1070423						
ANR	1070543	Symbol	RETURN_ADDR_REG		1070423						
ANR	1070544	Symbol	emit_op_mem		1070423						
ANR	1070545	Symbol	SLJIT_SUCCESS		1070423						
ANR	1070546	Symbol	TA		1070423						
ANR	1070547	Symbol	DR		1070423						
ANR	1070548	Symbol	SA		1070423						
ANR	1070549	Symbol	SLJIT_UNUSED		1070423						
ANR	1070550	Symbol	compiler		1070423						
ANR	1070551	Symbol	dstw		1070423						
ANR	1070552	Symbol	WORD_DATA		1070423						
ANR	1070553	Function	sljit_emit_fast_return	1556:0:51448:52118							
ANR	1070554	FunctionDef	"sljit_emit_fast_return (struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw)"		1070553	0					
ANR	1070555	CompoundStatement		1557:0:51567:52118	1070553	0					
ANR	1070556	ExpressionStatement	CHECK_ERROR ( )	1558:1:51570:51583	1070553	0	True				
ANR	1070557	CallExpression	CHECK_ERROR ( )		1070553	0					
ANR	1070558	Callee	CHECK_ERROR		1070553	0					
ANR	1070559	Identifier	CHECK_ERROR		1070553	0					
ANR	1070560	ArgumentList			1070553	1					
ANR	1070561	ExpressionStatement	"CHECK ( check_sljit_emit_fast_return ( compiler , src , srcw ) )"	1559:1:51586:51642	1070553	1	True				
ANR	1070562	CallExpression	"CHECK ( check_sljit_emit_fast_return ( compiler , src , srcw ) )"		1070553	0					
ANR	1070563	Callee	CHECK		1070553	0					
ANR	1070564	Identifier	CHECK		1070553	0					
ANR	1070565	ArgumentList	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1070553	1					
ANR	1070566	Argument	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1070553	0					
ANR	1070567	CallExpression	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1070553	0					
ANR	1070568	Callee	check_sljit_emit_fast_return		1070553	0					
ANR	1070569	Identifier	check_sljit_emit_fast_return		1070553	0					
ANR	1070570	ArgumentList	compiler		1070553	1					
ANR	1070571	Argument	compiler		1070553	0					
ANR	1070572	Identifier	compiler		1070553	0					
ANR	1070573	Argument	src		1070553	1					
ANR	1070574	Identifier	src		1070553	0					
ANR	1070575	Argument	srcw		1070553	2					
ANR	1070576	Identifier	srcw		1070553	0					
ANR	1070577	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1560:1:51645:51675	1070553	2	True				
ANR	1070578	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1070553	0					
ANR	1070579	Callee	ADJUST_LOCAL_OFFSET		1070553	0					
ANR	1070580	Identifier	ADJUST_LOCAL_OFFSET		1070553	0					
ANR	1070581	ArgumentList	src		1070553	1					
ANR	1070582	Argument	src		1070553	0					
ANR	1070583	Identifier	src		1070553	0					
ANR	1070584	Argument	srcw		1070553	1					
ANR	1070585	Identifier	srcw		1070553	0					
ANR	1070586	IfStatement	if ( FAST_IS_REG ( src ) )		1070553	3					
ANR	1070587	Condition	FAST_IS_REG ( src )	1562:5:51683:51698	1070553	0	True				
ANR	1070588	CallExpression	FAST_IS_REG ( src )		1070553	0					
ANR	1070589	Callee	FAST_IS_REG		1070553	0					
ANR	1070590	Identifier	FAST_IS_REG		1070553	0					
ANR	1070591	ArgumentList	src		1070553	1					
ANR	1070592	Argument	src		1070553	0					
ANR	1070593	Identifier	src		1070553	0					
ANR	1070594	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( src ) | TA ( 0 ) | DA ( RETURN_ADDR_REG ) , RETURN_ADDR_REG ) )"	1563:2:51703:51795	1070553	1	True				
ANR	1070595	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( src ) | TA ( 0 ) | DA ( RETURN_ADDR_REG ) , RETURN_ADDR_REG ) )"		1070553	0					
ANR	1070596	Callee	FAIL_IF		1070553	0					
ANR	1070597	Identifier	FAIL_IF		1070553	0					
ANR	1070598	ArgumentList	"push_inst ( compiler , ADDU_W | S ( src ) | TA ( 0 ) | DA ( RETURN_ADDR_REG ) , RETURN_ADDR_REG )"		1070553	1					
ANR	1070599	Argument	"push_inst ( compiler , ADDU_W | S ( src ) | TA ( 0 ) | DA ( RETURN_ADDR_REG ) , RETURN_ADDR_REG )"		1070553	0					
ANR	1070600	CallExpression	"push_inst ( compiler , ADDU_W | S ( src ) | TA ( 0 ) | DA ( RETURN_ADDR_REG ) , RETURN_ADDR_REG )"		1070553	0					
ANR	1070601	Callee	push_inst		1070553	0					
ANR	1070602	Identifier	push_inst		1070553	0					
ANR	1070603	ArgumentList	compiler		1070553	1					
ANR	1070604	Argument	compiler		1070553	0					
ANR	1070605	Identifier	compiler		1070553	0					
ANR	1070606	Argument	ADDU_W | S ( src ) | TA ( 0 ) | DA ( RETURN_ADDR_REG )		1070553	1					
ANR	1070607	InclusiveOrExpression	ADDU_W | S ( src ) | TA ( 0 ) | DA ( RETURN_ADDR_REG )		1070553	0		|			
ANR	1070608	Identifier	ADDU_W		1070553	0					
ANR	1070609	InclusiveOrExpression	S ( src ) | TA ( 0 ) | DA ( RETURN_ADDR_REG )		1070553	1		|			
ANR	1070610	CallExpression	S ( src )		1070553	0					
ANR	1070611	Callee	S		1070553	0					
ANR	1070612	Identifier	S		1070553	0					
ANR	1070613	ArgumentList	src		1070553	1					
ANR	1070614	Argument	src		1070553	0					
ANR	1070615	Identifier	src		1070553	0					
ANR	1070616	InclusiveOrExpression	TA ( 0 ) | DA ( RETURN_ADDR_REG )		1070553	1		|			
ANR	1070617	CallExpression	TA ( 0 )		1070553	0					
ANR	1070618	Callee	TA		1070553	0					
ANR	1070619	Identifier	TA		1070553	0					
ANR	1070620	ArgumentList	0		1070553	1					
ANR	1070621	Argument	0		1070553	0					
ANR	1070622	PrimaryExpression	0		1070553	0					
ANR	1070623	CallExpression	DA ( RETURN_ADDR_REG )		1070553	1					
ANR	1070624	Callee	DA		1070553	0					
ANR	1070625	Identifier	DA		1070553	0					
ANR	1070626	ArgumentList	RETURN_ADDR_REG		1070553	1					
ANR	1070627	Argument	RETURN_ADDR_REG		1070553	0					
ANR	1070628	Identifier	RETURN_ADDR_REG		1070553	0					
ANR	1070629	Argument	RETURN_ADDR_REG		1070553	2					
ANR	1070630	Identifier	RETURN_ADDR_REG		1070553	0					
ANR	1070631	ElseStatement	else		1070553	0					
ANR	1070632	IfStatement	if ( src & SLJIT_MEM )		1070553	0					
ANR	1070633	Condition	src & SLJIT_MEM	1564:10:51807:51821	1070553	0	True				
ANR	1070634	BitAndExpression	src & SLJIT_MEM		1070553	0		&			
ANR	1070635	Identifier	src		1070553	0					
ANR	1070636	Identifier	SLJIT_MEM		1070553	1					
ANR	1070637	ExpressionStatement	"FAIL_IF ( emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , RETURN_ADDR_REG , src , srcw ) )"	1565:2:51826:51907	1070553	1	True				
ANR	1070638	CallExpression	"FAIL_IF ( emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , RETURN_ADDR_REG , src , srcw ) )"		1070553	0					
ANR	1070639	Callee	FAIL_IF		1070553	0					
ANR	1070640	Identifier	FAIL_IF		1070553	0					
ANR	1070641	ArgumentList	"emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , RETURN_ADDR_REG , src , srcw )"		1070553	1					
ANR	1070642	Argument	"emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , RETURN_ADDR_REG , src , srcw )"		1070553	0					
ANR	1070643	CallExpression	"emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , RETURN_ADDR_REG , src , srcw )"		1070553	0					
ANR	1070644	Callee	emit_op_mem		1070553	0					
ANR	1070645	Identifier	emit_op_mem		1070553	0					
ANR	1070646	ArgumentList	compiler		1070553	1					
ANR	1070647	Argument	compiler		1070553	0					
ANR	1070648	Identifier	compiler		1070553	0					
ANR	1070649	Argument	WORD_DATA | LOAD_DATA		1070553	1					
ANR	1070650	InclusiveOrExpression	WORD_DATA | LOAD_DATA		1070553	0		|			
ANR	1070651	Identifier	WORD_DATA		1070553	0					
ANR	1070652	Identifier	LOAD_DATA		1070553	1					
ANR	1070653	Argument	RETURN_ADDR_REG		1070553	2					
ANR	1070654	Identifier	RETURN_ADDR_REG		1070553	0					
ANR	1070655	Argument	src		1070553	3					
ANR	1070656	Identifier	src		1070553	0					
ANR	1070657	Argument	srcw		1070553	4					
ANR	1070658	Identifier	srcw		1070553	0					
ANR	1070659	ElseStatement	else		1070553	0					
ANR	1070660	IfStatement	if ( src & SLJIT_IMM )		1070553	0					
ANR	1070661	Condition	src & SLJIT_IMM	1566:10:51919:51933	1070553	0	True				
ANR	1070662	BitAndExpression	src & SLJIT_IMM		1070553	0		&			
ANR	1070663	Identifier	src		1070553	0					
ANR	1070664	Identifier	SLJIT_IMM		1070553	1					
ANR	1070665	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , RETURN_ADDR_REG , srcw ) )"	1567:2:51938:51994	1070553	1	True				
ANR	1070666	CallExpression	"FAIL_IF ( load_immediate ( compiler , RETURN_ADDR_REG , srcw ) )"		1070553	0					
ANR	1070667	Callee	FAIL_IF		1070553	0					
ANR	1070668	Identifier	FAIL_IF		1070553	0					
ANR	1070669	ArgumentList	"load_immediate ( compiler , RETURN_ADDR_REG , srcw )"		1070553	1					
ANR	1070670	Argument	"load_immediate ( compiler , RETURN_ADDR_REG , srcw )"		1070553	0					
ANR	1070671	CallExpression	"load_immediate ( compiler , RETURN_ADDR_REG , srcw )"		1070553	0					
ANR	1070672	Callee	load_immediate		1070553	0					
ANR	1070673	Identifier	load_immediate		1070553	0					
ANR	1070674	ArgumentList	compiler		1070553	1					
ANR	1070675	Argument	compiler		1070553	0					
ANR	1070676	Identifier	compiler		1070553	0					
ANR	1070677	Argument	RETURN_ADDR_REG		1070553	1					
ANR	1070678	Identifier	RETURN_ADDR_REG		1070553	0					
ANR	1070679	Argument	srcw		1070553	2					
ANR	1070680	Identifier	srcw		1070553	0					
ANR	1070681	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , JR | SA ( RETURN_ADDR_REG ) , UNMOVABLE_INS ) )"	1569:1:51998:52067	1070553	4	True				
ANR	1070682	CallExpression	"FAIL_IF ( push_inst ( compiler , JR | SA ( RETURN_ADDR_REG ) , UNMOVABLE_INS ) )"		1070553	0					
ANR	1070683	Callee	FAIL_IF		1070553	0					
ANR	1070684	Identifier	FAIL_IF		1070553	0					
ANR	1070685	ArgumentList	"push_inst ( compiler , JR | SA ( RETURN_ADDR_REG ) , UNMOVABLE_INS )"		1070553	1					
ANR	1070686	Argument	"push_inst ( compiler , JR | SA ( RETURN_ADDR_REG ) , UNMOVABLE_INS )"		1070553	0					
ANR	1070687	CallExpression	"push_inst ( compiler , JR | SA ( RETURN_ADDR_REG ) , UNMOVABLE_INS )"		1070553	0					
ANR	1070688	Callee	push_inst		1070553	0					
ANR	1070689	Identifier	push_inst		1070553	0					
ANR	1070690	ArgumentList	compiler		1070553	1					
ANR	1070691	Argument	compiler		1070553	0					
ANR	1070692	Identifier	compiler		1070553	0					
ANR	1070693	Argument	JR | SA ( RETURN_ADDR_REG )		1070553	1					
ANR	1070694	InclusiveOrExpression	JR | SA ( RETURN_ADDR_REG )		1070553	0		|			
ANR	1070695	Identifier	JR		1070553	0					
ANR	1070696	CallExpression	SA ( RETURN_ADDR_REG )		1070553	1					
ANR	1070697	Callee	SA		1070553	0					
ANR	1070698	Identifier	SA		1070553	0					
ANR	1070699	ArgumentList	RETURN_ADDR_REG		1070553	1					
ANR	1070700	Argument	RETURN_ADDR_REG		1070553	0					
ANR	1070701	Identifier	RETURN_ADDR_REG		1070553	0					
ANR	1070702	Argument	UNMOVABLE_INS		1070553	2					
ANR	1070703	Identifier	UNMOVABLE_INS		1070553	0					
ANR	1070704	ReturnStatement	"return push_inst ( compiler , NOP , UNMOVABLE_INS ) ;"	1570:1:52070:52116	1070553	5	True				
ANR	1070705	CallExpression	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1070553	0					
ANR	1070706	Callee	push_inst		1070553	0					
ANR	1070707	Identifier	push_inst		1070553	0					
ANR	1070708	ArgumentList	compiler		1070553	1					
ANR	1070709	Argument	compiler		1070553	0					
ANR	1070710	Identifier	compiler		1070553	0					
ANR	1070711	Argument	NOP		1070553	1					
ANR	1070712	Identifier	NOP		1070553	0					
ANR	1070713	Argument	UNMOVABLE_INS		1070553	2					
ANR	1070714	Identifier	UNMOVABLE_INS		1070553	0					
ANR	1070715	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1070553	1					
ANR	1070716	Identifier	sljit_emit_fast_return		1070553	2					
ANR	1070717	ParameterList	"struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw"		1070553	3					
ANR	1070718	Parameter	struct sljit_compiler * compiler	1556:57:51505:51535	1070553	0	True				
ANR	1070719	ParameterType	struct sljit_compiler *		1070553	0					
ANR	1070720	Identifier	compiler		1070553	1					
ANR	1070721	Parameter	sljit_si src	1556:90:51538:51549	1070553	1	True				
ANR	1070722	ParameterType	sljit_si		1070553	0					
ANR	1070723	Identifier	src		1070553	1					
ANR	1070724	Parameter	sljit_sw srcw	1556:104:51552:51564	1070553	2	True				
ANR	1070725	ParameterType	sljit_sw		1070553	0					
ANR	1070726	Identifier	srcw		1070553	1					
ANR	1070727	CFGEntryNode	ENTRY		1070553		True				
ANR	1070728	CFGExitNode	EXIT		1070553		True				
ANR	1070729	Symbol	push_inst		1070553						
ANR	1070730	Symbol	FAST_IS_REG		1070553						
ANR	1070731	Symbol	LOAD_DATA		1070553						
ANR	1070732	Symbol	src		1070553						
ANR	1070733	Symbol	ADDU_W		1070553						
ANR	1070734	Symbol	srcw		1070553						
ANR	1070735	Symbol	SLJIT_MEM		1070553						
ANR	1070736	Symbol	UNMOVABLE_INS		1070553						
ANR	1070737	Symbol	RETURN_ADDR_REG		1070553						
ANR	1070738	Symbol	JR		1070553						
ANR	1070739	Symbol	emit_op_mem		1070553						
ANR	1070740	Symbol	TA		1070553						
ANR	1070741	Symbol	SA		1070553						
ANR	1070742	Symbol	NOP		1070553						
ANR	1070743	Symbol	SLJIT_IMM		1070553						
ANR	1070744	Symbol	S		1070553						
ANR	1070745	Symbol	check_sljit_emit_fast_return		1070553						
ANR	1070746	Symbol	load_immediate		1070553						
ANR	1070747	Symbol	compiler		1070553						
ANR	1070748	Symbol	DA		1070553						
ANR	1070749	Symbol	WORD_DATA		1070553						
ANR	1070750	Function	sljit_emit_label	1577:25:52375:52836							
ANR	1070751	FunctionDef	sljit_emit_label (struct sljit_compiler * compiler)		1070750	0					
ANR	1070752	CompoundStatement		1578:0:52445:52836	1070750	0					
ANR	1070753	IdentifierDeclStatement	struct sljit_label * label ;	1579:1:52448:52473	1070750	0	True				
ANR	1070754	IdentifierDecl	* label		1070750	0					
ANR	1070755	IdentifierDeclType	struct sljit_label *		1070750	0					
ANR	1070756	Identifier	label		1070750	1					
ANR	1070757	ExpressionStatement	CHECK_ERROR_PTR ( )	1581:1:52477:52494	1070750	1	True				
ANR	1070758	CallExpression	CHECK_ERROR_PTR ( )		1070750	0					
ANR	1070759	Callee	CHECK_ERROR_PTR		1070750	0					
ANR	1070760	Identifier	CHECK_ERROR_PTR		1070750	0					
ANR	1070761	ArgumentList			1070750	1					
ANR	1070762	ExpressionStatement	CHECK_PTR ( check_sljit_emit_label ( compiler ) )	1582:1:52497:52540	1070750	2	True				
ANR	1070763	CallExpression	CHECK_PTR ( check_sljit_emit_label ( compiler ) )		1070750	0					
ANR	1070764	Callee	CHECK_PTR		1070750	0					
ANR	1070765	Identifier	CHECK_PTR		1070750	0					
ANR	1070766	ArgumentList	check_sljit_emit_label ( compiler )		1070750	1					
ANR	1070767	Argument	check_sljit_emit_label ( compiler )		1070750	0					
ANR	1070768	CallExpression	check_sljit_emit_label ( compiler )		1070750	0					
ANR	1070769	Callee	check_sljit_emit_label		1070750	0					
ANR	1070770	Identifier	check_sljit_emit_label		1070750	0					
ANR	1070771	ArgumentList	compiler		1070750	1					
ANR	1070772	Argument	compiler		1070750	0					
ANR	1070773	Identifier	compiler		1070750	0					
ANR	1070774	IfStatement	if ( compiler -> last_label && compiler -> last_label -> size == compiler -> size )		1070750	3					
ANR	1070775	Condition	compiler -> last_label && compiler -> last_label -> size == compiler -> size	1584:5:52548:52615	1070750	0	True				
ANR	1070776	AndExpression	compiler -> last_label && compiler -> last_label -> size == compiler -> size		1070750	0		&&			
ANR	1070777	PtrMemberAccess	compiler -> last_label		1070750	0					
ANR	1070778	Identifier	compiler		1070750	0					
ANR	1070779	Identifier	last_label		1070750	1					
ANR	1070780	EqualityExpression	compiler -> last_label -> size == compiler -> size		1070750	1		==			
ANR	1070781	PtrMemberAccess	compiler -> last_label -> size		1070750	0					
ANR	1070782	PtrMemberAccess	compiler -> last_label		1070750	0					
ANR	1070783	Identifier	compiler		1070750	0					
ANR	1070784	Identifier	last_label		1070750	1					
ANR	1070785	Identifier	size		1070750	1					
ANR	1070786	PtrMemberAccess	compiler -> size		1070750	1					
ANR	1070787	Identifier	compiler		1070750	0					
ANR	1070788	Identifier	size		1070750	1					
ANR	1070789	ReturnStatement	return compiler -> last_label ;	1585:2:52620:52647	1070750	1	True				
ANR	1070790	PtrMemberAccess	compiler -> last_label		1070750	0					
ANR	1070791	Identifier	compiler		1070750	0					
ANR	1070792	Identifier	last_label		1070750	1					
ANR	1070793	ExpressionStatement	"label = ( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"	1587:1:52651:52729	1070750	4	True				
ANR	1070794	AssignmentExpression	"label = ( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1070750	0		=			
ANR	1070795	Identifier	label		1070750	0					
ANR	1070796	CastExpression	"( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1070750	1					
ANR	1070797	CastTarget	struct sljit_label *		1070750	0					
ANR	1070798	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1070750	1					
ANR	1070799	Callee	ensure_abuf		1070750	0					
ANR	1070800	Identifier	ensure_abuf		1070750	0					
ANR	1070801	ArgumentList	compiler		1070750	1					
ANR	1070802	Argument	compiler		1070750	0					
ANR	1070803	Identifier	compiler		1070750	0					
ANR	1070804	Argument	sizeof ( struct sljit_label )		1070750	1					
ANR	1070805	SizeofExpression	sizeof ( struct sljit_label )		1070750	0					
ANR	1070806	Sizeof	sizeof		1070750	0					
ANR	1070807	SizeofOperand	struct sljit_label		1070750	1					
ANR	1070808	ExpressionStatement	PTR_FAIL_IF ( ! label )	1588:1:52732:52751	1070750	5	True				
ANR	1070809	CallExpression	PTR_FAIL_IF ( ! label )		1070750	0					
ANR	1070810	Callee	PTR_FAIL_IF		1070750	0					
ANR	1070811	Identifier	PTR_FAIL_IF		1070750	0					
ANR	1070812	ArgumentList	! label		1070750	1					
ANR	1070813	Argument	! label		1070750	0					
ANR	1070814	UnaryOperationExpression	! label		1070750	0					
ANR	1070815	UnaryOperator	!		1070750	0					
ANR	1070816	Identifier	label		1070750	1					
ANR	1070817	ExpressionStatement	"set_label ( label , compiler )"	1589:1:52754:52780	1070750	6	True				
ANR	1070818	CallExpression	"set_label ( label , compiler )"		1070750	0					
ANR	1070819	Callee	set_label		1070750	0					
ANR	1070820	Identifier	set_label		1070750	0					
ANR	1070821	ArgumentList	label		1070750	1					
ANR	1070822	Argument	label		1070750	0					
ANR	1070823	Identifier	label		1070750	0					
ANR	1070824	Argument	compiler		1070750	1					
ANR	1070825	Identifier	compiler		1070750	0					
ANR	1070826	ExpressionStatement	compiler -> delay_slot = UNMOVABLE_INS	1590:1:52783:52819	1070750	7	True				
ANR	1070827	AssignmentExpression	compiler -> delay_slot = UNMOVABLE_INS		1070750	0		=			
ANR	1070828	PtrMemberAccess	compiler -> delay_slot		1070750	0					
ANR	1070829	Identifier	compiler		1070750	0					
ANR	1070830	Identifier	delay_slot		1070750	1					
ANR	1070831	Identifier	UNMOVABLE_INS		1070750	1					
ANR	1070832	ReturnStatement	return label ;	1591:1:52822:52834	1070750	8	True				
ANR	1070833	Identifier	label		1070750	0					
ANR	1070834	ReturnType	struct sljit_label *		1070750	1					
ANR	1070835	Identifier	sljit_emit_label		1070750	2					
ANR	1070836	ParameterList	struct sljit_compiler * compiler		1070750	3					
ANR	1070837	Parameter	struct sljit_compiler * compiler	1577:62:52412:52442	1070750	0	True				
ANR	1070838	ParameterType	struct sljit_compiler *		1070750	0					
ANR	1070839	Identifier	compiler		1070750	1					
ANR	1070840	CFGEntryNode	ENTRY		1070750		True				
ANR	1070841	CFGExitNode	EXIT		1070750		True				
ANR	1070842	Symbol	compiler -> last_label -> size		1070750						
ANR	1070843	Symbol	* compiler -> last_label		1070750						
ANR	1070844	Symbol	compiler -> last_label		1070750						
ANR	1070845	Symbol	* * compiler		1070750						
ANR	1070846	Symbol	compiler -> size		1070750						
ANR	1070847	Symbol	UNMOVABLE_INS		1070750						
ANR	1070848	Symbol	check_sljit_emit_label		1070750						
ANR	1070849	Symbol	compiler -> delay_slot		1070750						
ANR	1070850	Symbol	label		1070750						
ANR	1070851	Symbol	* compiler		1070750						
ANR	1070852	Symbol	ensure_abuf		1070750						
ANR	1070853	Symbol	compiler		1070750						
ANR	1070854	Function	sljit_emit_jump	1620:25:53408:55798							
ANR	1070855	FunctionDef	"sljit_emit_jump (struct sljit_compiler * compiler , sljit_si type)"		1070854	0					
ANR	1070856	CompoundStatement		1621:0:53491:55798	1070854	0					
ANR	1070857	IdentifierDeclStatement	struct sljit_jump * jump ;	1622:1:53494:53517	1070854	0	True				
ANR	1070858	IdentifierDecl	* jump		1070854	0					
ANR	1070859	IdentifierDeclType	struct sljit_jump *		1070854	0					
ANR	1070860	Identifier	jump		1070854	1					
ANR	1070861	IdentifierDeclStatement	sljit_ins inst ;	1623:1:53520:53534	1070854	1	True				
ANR	1070862	IdentifierDecl	inst		1070854	0					
ANR	1070863	IdentifierDeclType	sljit_ins		1070854	0					
ANR	1070864	Identifier	inst		1070854	1					
ANR	1070865	IdentifierDeclStatement	sljit_si flags = 0 ;	1624:1:53537:53555	1070854	2	True				
ANR	1070866	IdentifierDecl	flags = 0		1070854	0					
ANR	1070867	IdentifierDeclType	sljit_si		1070854	0					
ANR	1070868	Identifier	flags		1070854	1					
ANR	1070869	AssignmentExpression	flags = 0		1070854	2		=			
ANR	1070870	Identifier	flags		1070854	0					
ANR	1070871	PrimaryExpression	0		1070854	1					
ANR	1070872	IdentifierDeclStatement	sljit_si delay_check = UNMOVABLE_INS ;	1625:1:53558:53594	1070854	3	True				
ANR	1070873	IdentifierDecl	delay_check = UNMOVABLE_INS		1070854	0					
ANR	1070874	IdentifierDeclType	sljit_si		1070854	0					
ANR	1070875	Identifier	delay_check		1070854	1					
ANR	1070876	AssignmentExpression	delay_check = UNMOVABLE_INS		1070854	2		=			
ANR	1070877	Identifier	UNMOVABLE_INS		1070854	0					
ANR	1070878	Identifier	UNMOVABLE_INS		1070854	1					
ANR	1070879	ExpressionStatement	CHECK_ERROR_PTR ( )	1627:1:53598:53615	1070854	4	True				
ANR	1070880	CallExpression	CHECK_ERROR_PTR ( )		1070854	0					
ANR	1070881	Callee	CHECK_ERROR_PTR		1070854	0					
ANR	1070882	Identifier	CHECK_ERROR_PTR		1070854	0					
ANR	1070883	ArgumentList			1070854	1					
ANR	1070884	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_jump ( compiler , type ) )"	1628:1:53618:53666	1070854	5	True				
ANR	1070885	CallExpression	"CHECK_PTR ( check_sljit_emit_jump ( compiler , type ) )"		1070854	0					
ANR	1070886	Callee	CHECK_PTR		1070854	0					
ANR	1070887	Identifier	CHECK_PTR		1070854	0					
ANR	1070888	ArgumentList	"check_sljit_emit_jump ( compiler , type )"		1070854	1					
ANR	1070889	Argument	"check_sljit_emit_jump ( compiler , type )"		1070854	0					
ANR	1070890	CallExpression	"check_sljit_emit_jump ( compiler , type )"		1070854	0					
ANR	1070891	Callee	check_sljit_emit_jump		1070854	0					
ANR	1070892	Identifier	check_sljit_emit_jump		1070854	0					
ANR	1070893	ArgumentList	compiler		1070854	1					
ANR	1070894	Argument	compiler		1070854	0					
ANR	1070895	Identifier	compiler		1070854	0					
ANR	1070896	Argument	type		1070854	1					
ANR	1070897	Identifier	type		1070854	0					
ANR	1070898	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	1630:1:53670:53745	1070854	6	True				
ANR	1070899	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1070854	0		=			
ANR	1070900	Identifier	jump		1070854	0					
ANR	1070901	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1070854	1					
ANR	1070902	CastTarget	struct sljit_jump *		1070854	0					
ANR	1070903	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1070854	1					
ANR	1070904	Callee	ensure_abuf		1070854	0					
ANR	1070905	Identifier	ensure_abuf		1070854	0					
ANR	1070906	ArgumentList	compiler		1070854	1					
ANR	1070907	Argument	compiler		1070854	0					
ANR	1070908	Identifier	compiler		1070854	0					
ANR	1070909	Argument	sizeof ( struct sljit_jump )		1070854	1					
ANR	1070910	SizeofExpression	sizeof ( struct sljit_jump )		1070854	0					
ANR	1070911	Sizeof	sizeof		1070854	0					
ANR	1070912	SizeofOperand	struct sljit_jump		1070854	1					
ANR	1070913	ExpressionStatement	PTR_FAIL_IF ( ! jump )	1631:1:53748:53766	1070854	7	True				
ANR	1070914	CallExpression	PTR_FAIL_IF ( ! jump )		1070854	0					
ANR	1070915	Callee	PTR_FAIL_IF		1070854	0					
ANR	1070916	Identifier	PTR_FAIL_IF		1070854	0					
ANR	1070917	ArgumentList	! jump		1070854	1					
ANR	1070918	Argument	! jump		1070854	0					
ANR	1070919	UnaryOperationExpression	! jump		1070854	0					
ANR	1070920	UnaryOperator	!		1070854	0					
ANR	1070921	Identifier	jump		1070854	1					
ANR	1070922	ExpressionStatement	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"	1632:1:53769:53823	1070854	8	True				
ANR	1070923	CallExpression	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"		1070854	0					
ANR	1070924	Callee	set_jump		1070854	0					
ANR	1070925	Identifier	set_jump		1070854	0					
ANR	1070926	ArgumentList	jump		1070854	1					
ANR	1070927	Argument	jump		1070854	0					
ANR	1070928	Identifier	jump		1070854	0					
ANR	1070929	Argument	compiler		1070854	1					
ANR	1070930	Identifier	compiler		1070854	0					
ANR	1070931	Argument	type & SLJIT_REWRITABLE_JUMP		1070854	2					
ANR	1070932	BitAndExpression	type & SLJIT_REWRITABLE_JUMP		1070854	0		&			
ANR	1070933	Identifier	type		1070854	0					
ANR	1070934	Identifier	SLJIT_REWRITABLE_JUMP		1070854	1					
ANR	1070935	ExpressionStatement	type &= 0xff	1633:1:53826:53838	1070854	9	True				
ANR	1070936	AssignmentExpression	type &= 0xff		1070854	0		&=			
ANR	1070937	Identifier	type		1070854	0					
ANR	1070938	PrimaryExpression	0xff		1070854	1					
ANR	1070939	SwitchStatement	switch ( type )		1070854	10					
ANR	1070940	Condition	type	1635:9:53850:53853	1070854	0	True				
ANR	1070941	Identifier	type		1070854	0					
ANR	1070942	CompoundStatement		15:15:364:364	1070854	1					
ANR	1070943	Label	case SLJIT_EQUAL :	1636:1:53859:53875	1070854	0	True				
ANR	1070944	Identifier	SLJIT_EQUAL		1070854	0					
ANR	1070945	Label	case SLJIT_D_NOT_EQUAL :	1637:1:53878:53900	1070854	1	True				
ANR	1070946	Identifier	SLJIT_D_NOT_EQUAL		1070854	0					
ANR	1070947	ExpressionStatement	BR_NZ ( EQUAL_FLAG )	1638:2:53904:53921	1070854	2	True				
ANR	1070948	CallExpression	BR_NZ ( EQUAL_FLAG )		1070854	0					
ANR	1070949	Callee	BR_NZ		1070854	0					
ANR	1070950	Identifier	BR_NZ		1070854	0					
ANR	1070951	ArgumentList	EQUAL_FLAG		1070854	1					
ANR	1070952	Argument	EQUAL_FLAG		1070854	0					
ANR	1070953	Identifier	EQUAL_FLAG		1070854	0					
ANR	1070954	BreakStatement	break ;	1639:2:53925:53930	1070854	3	True				
ANR	1070955	Label	case SLJIT_NOT_EQUAL :	1640:1:53933:53953	1070854	4	True				
ANR	1070956	Identifier	SLJIT_NOT_EQUAL		1070854	0					
ANR	1070957	Label	case SLJIT_D_EQUAL :	1641:1:53956:53974	1070854	5	True				
ANR	1070958	Identifier	SLJIT_D_EQUAL		1070854	0					
ANR	1070959	ExpressionStatement	BR_Z ( EQUAL_FLAG )	1642:2:53978:53994	1070854	6	True				
ANR	1070960	CallExpression	BR_Z ( EQUAL_FLAG )		1070854	0					
ANR	1070961	Callee	BR_Z		1070854	0					
ANR	1070962	Identifier	BR_Z		1070854	0					
ANR	1070963	ArgumentList	EQUAL_FLAG		1070854	1					
ANR	1070964	Argument	EQUAL_FLAG		1070854	0					
ANR	1070965	Identifier	EQUAL_FLAG		1070854	0					
ANR	1070966	BreakStatement	break ;	1643:2:53998:54003	1070854	7	True				
ANR	1070967	Label	case SLJIT_LESS :	1644:1:54006:54021	1070854	8	True				
ANR	1070968	Identifier	SLJIT_LESS		1070854	0					
ANR	1070969	Label	case SLJIT_D_LESS :	1645:1:54024:54041	1070854	9	True				
ANR	1070970	Identifier	SLJIT_D_LESS		1070854	0					
ANR	1070971	ExpressionStatement	BR_Z ( ULESS_FLAG )	1646:2:54045:54061	1070854	10	True				
ANR	1070972	CallExpression	BR_Z ( ULESS_FLAG )		1070854	0					
ANR	1070973	Callee	BR_Z		1070854	0					
ANR	1070974	Identifier	BR_Z		1070854	0					
ANR	1070975	ArgumentList	ULESS_FLAG		1070854	1					
ANR	1070976	Argument	ULESS_FLAG		1070854	0					
ANR	1070977	Identifier	ULESS_FLAG		1070854	0					
ANR	1070978	BreakStatement	break ;	1647:2:54065:54070	1070854	11	True				
ANR	1070979	Label	case SLJIT_GREATER_EQUAL :	1648:1:54073:54097	1070854	12	True				
ANR	1070980	Identifier	SLJIT_GREATER_EQUAL		1070854	0					
ANR	1070981	Label	case SLJIT_D_GREATER_EQUAL :	1649:1:54100:54126	1070854	13	True				
ANR	1070982	Identifier	SLJIT_D_GREATER_EQUAL		1070854	0					
ANR	1070983	ExpressionStatement	BR_NZ ( ULESS_FLAG )	1650:2:54130:54147	1070854	14	True				
ANR	1070984	CallExpression	BR_NZ ( ULESS_FLAG )		1070854	0					
ANR	1070985	Callee	BR_NZ		1070854	0					
ANR	1070986	Identifier	BR_NZ		1070854	0					
ANR	1070987	ArgumentList	ULESS_FLAG		1070854	1					
ANR	1070988	Argument	ULESS_FLAG		1070854	0					
ANR	1070989	Identifier	ULESS_FLAG		1070854	0					
ANR	1070990	BreakStatement	break ;	1651:2:54151:54156	1070854	15	True				
ANR	1070991	Label	case SLJIT_GREATER :	1652:1:54159:54177	1070854	16	True				
ANR	1070992	Identifier	SLJIT_GREATER		1070854	0					
ANR	1070993	Label	case SLJIT_D_GREATER :	1653:1:54180:54200	1070854	17	True				
ANR	1070994	Identifier	SLJIT_D_GREATER		1070854	0					
ANR	1070995	ExpressionStatement	BR_Z ( UGREATER_FLAG )	1654:2:54204:54223	1070854	18	True				
ANR	1070996	CallExpression	BR_Z ( UGREATER_FLAG )		1070854	0					
ANR	1070997	Callee	BR_Z		1070854	0					
ANR	1070998	Identifier	BR_Z		1070854	0					
ANR	1070999	ArgumentList	UGREATER_FLAG		1070854	1					
ANR	1071000	Argument	UGREATER_FLAG		1070854	0					
ANR	1071001	Identifier	UGREATER_FLAG		1070854	0					
ANR	1071002	BreakStatement	break ;	1655:2:54227:54232	1070854	19	True				
ANR	1071003	Label	case SLJIT_LESS_EQUAL :	1656:1:54235:54256	1070854	20	True				
ANR	1071004	Identifier	SLJIT_LESS_EQUAL		1070854	0					
ANR	1071005	Label	case SLJIT_D_LESS_EQUAL :	1657:1:54259:54282	1070854	21	True				
ANR	1071006	Identifier	SLJIT_D_LESS_EQUAL		1070854	0					
ANR	1071007	ExpressionStatement	BR_NZ ( UGREATER_FLAG )	1658:2:54286:54306	1070854	22	True				
ANR	1071008	CallExpression	BR_NZ ( UGREATER_FLAG )		1070854	0					
ANR	1071009	Callee	BR_NZ		1070854	0					
ANR	1071010	Identifier	BR_NZ		1070854	0					
ANR	1071011	ArgumentList	UGREATER_FLAG		1070854	1					
ANR	1071012	Argument	UGREATER_FLAG		1070854	0					
ANR	1071013	Identifier	UGREATER_FLAG		1070854	0					
ANR	1071014	BreakStatement	break ;	1659:2:54310:54315	1070854	23	True				
ANR	1071015	Label	case SLJIT_SIG_LESS :	1660:1:54318:54337	1070854	24	True				
ANR	1071016	Identifier	SLJIT_SIG_LESS		1070854	0					
ANR	1071017	ExpressionStatement	BR_Z ( LESS_FLAG )	1661:2:54341:54356	1070854	25	True				
ANR	1071018	CallExpression	BR_Z ( LESS_FLAG )		1070854	0					
ANR	1071019	Callee	BR_Z		1070854	0					
ANR	1071020	Identifier	BR_Z		1070854	0					
ANR	1071021	ArgumentList	LESS_FLAG		1070854	1					
ANR	1071022	Argument	LESS_FLAG		1070854	0					
ANR	1071023	Identifier	LESS_FLAG		1070854	0					
ANR	1071024	BreakStatement	break ;	1662:2:54360:54365	1070854	26	True				
ANR	1071025	Label	case SLJIT_SIG_GREATER_EQUAL :	1663:1:54368:54396	1070854	27	True				
ANR	1071026	Identifier	SLJIT_SIG_GREATER_EQUAL		1070854	0					
ANR	1071027	ExpressionStatement	BR_NZ ( LESS_FLAG )	1664:2:54400:54416	1070854	28	True				
ANR	1071028	CallExpression	BR_NZ ( LESS_FLAG )		1070854	0					
ANR	1071029	Callee	BR_NZ		1070854	0					
ANR	1071030	Identifier	BR_NZ		1070854	0					
ANR	1071031	ArgumentList	LESS_FLAG		1070854	1					
ANR	1071032	Argument	LESS_FLAG		1070854	0					
ANR	1071033	Identifier	LESS_FLAG		1070854	0					
ANR	1071034	BreakStatement	break ;	1665:2:54420:54425	1070854	29	True				
ANR	1071035	Label	case SLJIT_SIG_GREATER :	1666:1:54428:54450	1070854	30	True				
ANR	1071036	Identifier	SLJIT_SIG_GREATER		1070854	0					
ANR	1071037	ExpressionStatement	BR_Z ( GREATER_FLAG )	1667:2:54454:54472	1070854	31	True				
ANR	1071038	CallExpression	BR_Z ( GREATER_FLAG )		1070854	0					
ANR	1071039	Callee	BR_Z		1070854	0					
ANR	1071040	Identifier	BR_Z		1070854	0					
ANR	1071041	ArgumentList	GREATER_FLAG		1070854	1					
ANR	1071042	Argument	GREATER_FLAG		1070854	0					
ANR	1071043	Identifier	GREATER_FLAG		1070854	0					
ANR	1071044	BreakStatement	break ;	1668:2:54476:54481	1070854	32	True				
ANR	1071045	Label	case SLJIT_SIG_LESS_EQUAL :	1669:1:54484:54509	1070854	33	True				
ANR	1071046	Identifier	SLJIT_SIG_LESS_EQUAL		1070854	0					
ANR	1071047	ExpressionStatement	BR_NZ ( GREATER_FLAG )	1670:2:54513:54532	1070854	34	True				
ANR	1071048	CallExpression	BR_NZ ( GREATER_FLAG )		1070854	0					
ANR	1071049	Callee	BR_NZ		1070854	0					
ANR	1071050	Identifier	BR_NZ		1070854	0					
ANR	1071051	ArgumentList	GREATER_FLAG		1070854	1					
ANR	1071052	Argument	GREATER_FLAG		1070854	0					
ANR	1071053	Identifier	GREATER_FLAG		1070854	0					
ANR	1071054	BreakStatement	break ;	1671:2:54536:54541	1070854	35	True				
ANR	1071055	Label	case SLJIT_OVERFLOW :	1672:1:54544:54563	1070854	36	True				
ANR	1071056	Identifier	SLJIT_OVERFLOW		1070854	0					
ANR	1071057	Label	case SLJIT_MUL_OVERFLOW :	1673:1:54566:54589	1070854	37	True				
ANR	1071058	Identifier	SLJIT_MUL_OVERFLOW		1070854	0					
ANR	1071059	ExpressionStatement	BR_Z ( OVERFLOW_FLAG )	1674:2:54593:54612	1070854	38	True				
ANR	1071060	CallExpression	BR_Z ( OVERFLOW_FLAG )		1070854	0					
ANR	1071061	Callee	BR_Z		1070854	0					
ANR	1071062	Identifier	BR_Z		1070854	0					
ANR	1071063	ArgumentList	OVERFLOW_FLAG		1070854	1					
ANR	1071064	Argument	OVERFLOW_FLAG		1070854	0					
ANR	1071065	Identifier	OVERFLOW_FLAG		1070854	0					
ANR	1071066	BreakStatement	break ;	1675:2:54616:54621	1070854	39	True				
ANR	1071067	Label	case SLJIT_NOT_OVERFLOW :	1676:1:54624:54647	1070854	40	True				
ANR	1071068	Identifier	SLJIT_NOT_OVERFLOW		1070854	0					
ANR	1071069	Label	case SLJIT_MUL_NOT_OVERFLOW :	1677:1:54650:54677	1070854	41	True				
ANR	1071070	Identifier	SLJIT_MUL_NOT_OVERFLOW		1070854	0					
ANR	1071071	ExpressionStatement	BR_NZ ( OVERFLOW_FLAG )	1678:2:54681:54701	1070854	42	True				
ANR	1071072	CallExpression	BR_NZ ( OVERFLOW_FLAG )		1070854	0					
ANR	1071073	Callee	BR_NZ		1070854	0					
ANR	1071074	Identifier	BR_NZ		1070854	0					
ANR	1071075	ArgumentList	OVERFLOW_FLAG		1070854	1					
ANR	1071076	Argument	OVERFLOW_FLAG		1070854	0					
ANR	1071077	Identifier	OVERFLOW_FLAG		1070854	0					
ANR	1071078	BreakStatement	break ;	1679:2:54705:54710	1070854	43	True				
ANR	1071079	Label	case SLJIT_D_UNORDERED :	1680:1:54713:54735	1070854	44	True				
ANR	1071080	Identifier	SLJIT_D_UNORDERED		1070854	0					
ANR	1071081	ExpressionStatement	BR_F ( )	1681:2:54739:54745	1070854	45	True				
ANR	1071082	CallExpression	BR_F ( )		1070854	0					
ANR	1071083	Callee	BR_F		1070854	0					
ANR	1071084	Identifier	BR_F		1070854	0					
ANR	1071085	ArgumentList			1070854	1					
ANR	1071086	BreakStatement	break ;	1682:2:54749:54754	1070854	46	True				
ANR	1071087	Label	case SLJIT_D_ORDERED :	1683:1:54757:54777	1070854	47	True				
ANR	1071088	Identifier	SLJIT_D_ORDERED		1070854	0					
ANR	1071089	ExpressionStatement	BR_T ( )	1684:2:54781:54787	1070854	48	True				
ANR	1071090	CallExpression	BR_T ( )		1070854	0					
ANR	1071091	Callee	BR_T		1070854	0					
ANR	1071092	Identifier	BR_T		1070854	0					
ANR	1071093	ArgumentList			1070854	1					
ANR	1071094	BreakStatement	break ;	1685:2:54791:54796	1070854	49	True				
ANR	1071095	Label	default :	1686:1:54799:54806	1070854	50	True				
ANR	1071096	Identifier	default		1070854	0					
ANR	1071097	ExpressionStatement	inst = 0	1688:2:54842:54850	1070854	51	True				
ANR	1071098	AssignmentExpression	inst = 0		1070854	0		=			
ANR	1071099	Identifier	inst		1070854	0					
ANR	1071100	PrimaryExpression	0		1070854	1					
ANR	1071101	BreakStatement	break ;	1689:2:54854:54859	1070854	52	True				
ANR	1071102	ExpressionStatement	jump -> flags |= flags	1692:1:54866:54886	1070854	11	True				
ANR	1071103	AssignmentExpression	jump -> flags |= flags		1070854	0		|=			
ANR	1071104	PtrMemberAccess	jump -> flags		1070854	0					
ANR	1071105	Identifier	jump		1070854	0					
ANR	1071106	Identifier	flags		1070854	1					
ANR	1071107	Identifier	flags		1070854	1					
ANR	1071108	IfStatement	if ( compiler -> delay_slot == MOVABLE_INS || ( compiler -> delay_slot != UNMOVABLE_INS && compiler -> delay_slot != delay_check ) )		1070854	12					
ANR	1071109	Condition	compiler -> delay_slot == MOVABLE_INS || ( compiler -> delay_slot != UNMOVABLE_INS && compiler -> delay_slot != delay_check )	1693:5:54893:55009	1070854	0	True				
ANR	1071110	OrExpression	compiler -> delay_slot == MOVABLE_INS || ( compiler -> delay_slot != UNMOVABLE_INS && compiler -> delay_slot != delay_check )		1070854	0		||			
ANR	1071111	EqualityExpression	compiler -> delay_slot == MOVABLE_INS		1070854	0		==			
ANR	1071112	PtrMemberAccess	compiler -> delay_slot		1070854	0					
ANR	1071113	Identifier	compiler		1070854	0					
ANR	1071114	Identifier	delay_slot		1070854	1					
ANR	1071115	Identifier	MOVABLE_INS		1070854	1					
ANR	1071116	AndExpression	compiler -> delay_slot != UNMOVABLE_INS && compiler -> delay_slot != delay_check		1070854	1		&&			
ANR	1071117	EqualityExpression	compiler -> delay_slot != UNMOVABLE_INS		1070854	0		!=			
ANR	1071118	PtrMemberAccess	compiler -> delay_slot		1070854	0					
ANR	1071119	Identifier	compiler		1070854	0					
ANR	1071120	Identifier	delay_slot		1070854	1					
ANR	1071121	Identifier	UNMOVABLE_INS		1070854	1					
ANR	1071122	EqualityExpression	compiler -> delay_slot != delay_check		1070854	1		!=			
ANR	1071123	PtrMemberAccess	compiler -> delay_slot		1070854	0					
ANR	1071124	Identifier	compiler		1070854	0					
ANR	1071125	Identifier	delay_slot		1070854	1					
ANR	1071126	Identifier	delay_check		1070854	1					
ANR	1071127	ExpressionStatement	jump -> flags |= IS_MOVABLE	1694:2:55014:55039	1070854	1	True				
ANR	1071128	AssignmentExpression	jump -> flags |= IS_MOVABLE		1070854	0		|=			
ANR	1071129	PtrMemberAccess	jump -> flags		1070854	0					
ANR	1071130	Identifier	jump		1070854	0					
ANR	1071131	Identifier	flags		1070854	1					
ANR	1071132	Identifier	IS_MOVABLE		1070854	1					
ANR	1071133	IfStatement	if ( inst )		1070854	13					
ANR	1071134	Condition	inst	1696:5:55047:55050	1070854	0	True				
ANR	1071135	Identifier	inst		1070854	0					
ANR	1071136	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , inst , UNMOVABLE_INS ) )"	1697:2:55055:55108	1070854	1	True				
ANR	1071137	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , inst , UNMOVABLE_INS ) )"		1070854	0					
ANR	1071138	Callee	PTR_FAIL_IF		1070854	0					
ANR	1071139	Identifier	PTR_FAIL_IF		1070854	0					
ANR	1071140	ArgumentList	"push_inst ( compiler , inst , UNMOVABLE_INS )"		1070854	1					
ANR	1071141	Argument	"push_inst ( compiler , inst , UNMOVABLE_INS )"		1070854	0					
ANR	1071142	CallExpression	"push_inst ( compiler , inst , UNMOVABLE_INS )"		1070854	0					
ANR	1071143	Callee	push_inst		1070854	0					
ANR	1071144	Identifier	push_inst		1070854	0					
ANR	1071145	ArgumentList	compiler		1070854	1					
ANR	1071146	Argument	compiler		1070854	0					
ANR	1071147	Identifier	compiler		1070854	0					
ANR	1071148	Argument	inst		1070854	1					
ANR	1071149	Identifier	inst		1070854	0					
ANR	1071150	Argument	UNMOVABLE_INS		1070854	2					
ANR	1071151	Identifier	UNMOVABLE_INS		1070854	0					
ANR	1071152	ExpressionStatement	"PTR_FAIL_IF ( emit_const ( compiler , TMP_REG2 , 0 ) )"	1699:1:55112:55158	1070854	14	True				
ANR	1071153	CallExpression	"PTR_FAIL_IF ( emit_const ( compiler , TMP_REG2 , 0 ) )"		1070854	0					
ANR	1071154	Callee	PTR_FAIL_IF		1070854	0					
ANR	1071155	Identifier	PTR_FAIL_IF		1070854	0					
ANR	1071156	ArgumentList	"emit_const ( compiler , TMP_REG2 , 0 )"		1070854	1					
ANR	1071157	Argument	"emit_const ( compiler , TMP_REG2 , 0 )"		1070854	0					
ANR	1071158	CallExpression	"emit_const ( compiler , TMP_REG2 , 0 )"		1070854	0					
ANR	1071159	Callee	emit_const		1070854	0					
ANR	1071160	Identifier	emit_const		1070854	0					
ANR	1071161	ArgumentList	compiler		1070854	1					
ANR	1071162	Argument	compiler		1070854	0					
ANR	1071163	Identifier	compiler		1070854	0					
ANR	1071164	Argument	TMP_REG2		1070854	1					
ANR	1071165	Identifier	TMP_REG2		1070854	0					
ANR	1071166	Argument	0		1070854	2					
ANR	1071167	PrimaryExpression	0		1070854	0					
ANR	1071168	IfStatement	if ( type <= SLJIT_JUMP )		1070854	15					
ANR	1071169	Condition	type <= SLJIT_JUMP	1700:5:55165:55182	1070854	0	True				
ANR	1071170	RelationalExpression	type <= SLJIT_JUMP		1070854	0		<=			
ANR	1071171	Identifier	type		1070854	0					
ANR	1071172	Identifier	SLJIT_JUMP		1070854	1					
ANR	1071173	CompoundStatement		80:25:1693:1693	1070854	1					
ANR	1071174	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , JR | S ( TMP_REG2 ) , UNMOVABLE_INS ) )"	1701:2:55189:55254	1070854	0	True				
ANR	1071175	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , JR | S ( TMP_REG2 ) , UNMOVABLE_INS ) )"		1070854	0					
ANR	1071176	Callee	PTR_FAIL_IF		1070854	0					
ANR	1071177	Identifier	PTR_FAIL_IF		1070854	0					
ANR	1071178	ArgumentList	"push_inst ( compiler , JR | S ( TMP_REG2 ) , UNMOVABLE_INS )"		1070854	1					
ANR	1071179	Argument	"push_inst ( compiler , JR | S ( TMP_REG2 ) , UNMOVABLE_INS )"		1070854	0					
ANR	1071180	CallExpression	"push_inst ( compiler , JR | S ( TMP_REG2 ) , UNMOVABLE_INS )"		1070854	0					
ANR	1071181	Callee	push_inst		1070854	0					
ANR	1071182	Identifier	push_inst		1070854	0					
ANR	1071183	ArgumentList	compiler		1070854	1					
ANR	1071184	Argument	compiler		1070854	0					
ANR	1071185	Identifier	compiler		1070854	0					
ANR	1071186	Argument	JR | S ( TMP_REG2 )		1070854	1					
ANR	1071187	InclusiveOrExpression	JR | S ( TMP_REG2 )		1070854	0		|			
ANR	1071188	Identifier	JR		1070854	0					
ANR	1071189	CallExpression	S ( TMP_REG2 )		1070854	1					
ANR	1071190	Callee	S		1070854	0					
ANR	1071191	Identifier	S		1070854	0					
ANR	1071192	ArgumentList	TMP_REG2		1070854	1					
ANR	1071193	Argument	TMP_REG2		1070854	0					
ANR	1071194	Identifier	TMP_REG2		1070854	0					
ANR	1071195	Argument	UNMOVABLE_INS		1070854	2					
ANR	1071196	Identifier	UNMOVABLE_INS		1070854	0					
ANR	1071197	ExpressionStatement	jump -> addr = compiler -> size	1702:2:55258:55285	1070854	1	True				
ANR	1071198	AssignmentExpression	jump -> addr = compiler -> size		1070854	0		=			
ANR	1071199	PtrMemberAccess	jump -> addr		1070854	0					
ANR	1071200	Identifier	jump		1070854	0					
ANR	1071201	Identifier	addr		1070854	1					
ANR	1071202	PtrMemberAccess	compiler -> size		1070854	1					
ANR	1071203	Identifier	compiler		1070854	0					
ANR	1071204	Identifier	size		1070854	1					
ANR	1071205	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , NOP , UNMOVABLE_INS ) )"	1703:2:55289:55341	1070854	2	True				
ANR	1071206	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , NOP , UNMOVABLE_INS ) )"		1070854	0					
ANR	1071207	Callee	PTR_FAIL_IF		1070854	0					
ANR	1071208	Identifier	PTR_FAIL_IF		1070854	0					
ANR	1071209	ArgumentList	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1070854	1					
ANR	1071210	Argument	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1070854	0					
ANR	1071211	CallExpression	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1070854	0					
ANR	1071212	Callee	push_inst		1070854	0					
ANR	1071213	Identifier	push_inst		1070854	0					
ANR	1071214	ArgumentList	compiler		1070854	1					
ANR	1071215	Argument	compiler		1070854	0					
ANR	1071216	Identifier	compiler		1070854	0					
ANR	1071217	Argument	NOP		1070854	1					
ANR	1071218	Identifier	NOP		1070854	0					
ANR	1071219	Argument	UNMOVABLE_INS		1070854	2					
ANR	1071220	Identifier	UNMOVABLE_INS		1070854	0					
ANR	1071221	ElseStatement	else		1070854	0					
ANR	1071222	CompoundStatement		84:8:1859:1859	1070854	0					
ANR	1071223	ExpressionStatement	SLJIT_ASSERT ( DR ( PIC_ADDR_REG ) == 25 && PIC_ADDR_REG == TMP_REG2 )	1705:2:55355:55419	1070854	0	True				
ANR	1071224	CallExpression	SLJIT_ASSERT ( DR ( PIC_ADDR_REG ) == 25 && PIC_ADDR_REG == TMP_REG2 )		1070854	0					
ANR	1071225	Callee	SLJIT_ASSERT		1070854	0					
ANR	1071226	Identifier	SLJIT_ASSERT		1070854	0					
ANR	1071227	ArgumentList	DR ( PIC_ADDR_REG ) == 25 && PIC_ADDR_REG == TMP_REG2		1070854	1					
ANR	1071228	Argument	DR ( PIC_ADDR_REG ) == 25 && PIC_ADDR_REG == TMP_REG2		1070854	0					
ANR	1071229	AndExpression	DR ( PIC_ADDR_REG ) == 25 && PIC_ADDR_REG == TMP_REG2		1070854	0		&&			
ANR	1071230	EqualityExpression	DR ( PIC_ADDR_REG ) == 25		1070854	0		==			
ANR	1071231	CallExpression	DR ( PIC_ADDR_REG )		1070854	0					
ANR	1071232	Callee	DR		1070854	0					
ANR	1071233	Identifier	DR		1070854	0					
ANR	1071234	ArgumentList	PIC_ADDR_REG		1070854	1					
ANR	1071235	Argument	PIC_ADDR_REG		1070854	0					
ANR	1071236	Identifier	PIC_ADDR_REG		1070854	0					
ANR	1071237	PrimaryExpression	25		1070854	1					
ANR	1071238	EqualityExpression	PIC_ADDR_REG == TMP_REG2		1070854	1		==			
ANR	1071239	Identifier	PIC_ADDR_REG		1070854	0					
ANR	1071240	Identifier	TMP_REG2		1070854	1					
ANR	1071241	ExpressionStatement	jump -> flags |= IS_JAL | ( type >= SLJIT_CALL0 ? IS_CALL : 0 )	1707:2:55476:55535	1070854	1	True				
ANR	1071242	AssignmentExpression	jump -> flags |= IS_JAL | ( type >= SLJIT_CALL0 ? IS_CALL : 0 )		1070854	0		|=			
ANR	1071243	PtrMemberAccess	jump -> flags		1070854	0					
ANR	1071244	Identifier	jump		1070854	0					
ANR	1071245	Identifier	flags		1070854	1					
ANR	1071246	InclusiveOrExpression	IS_JAL | ( type >= SLJIT_CALL0 ? IS_CALL : 0 )		1070854	1		|			
ANR	1071247	Identifier	IS_JAL		1070854	0					
ANR	1071248	ConditionalExpression	type >= SLJIT_CALL0 ? IS_CALL : 0		1070854	1					
ANR	1071249	Condition	type >= SLJIT_CALL0		1070854	0					
ANR	1071250	RelationalExpression	type >= SLJIT_CALL0		1070854	0		>=			
ANR	1071251	Identifier	type		1070854	0					
ANR	1071252	Identifier	SLJIT_CALL0		1070854	1					
ANR	1071253	Identifier	IS_CALL		1070854	1					
ANR	1071254	PrimaryExpression	0		1070854	2					
ANR	1071255	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , JALR | S ( TMP_REG2 ) | DA ( RETURN_ADDR_REG ) , UNMOVABLE_INS ) )"	1708:2:55539:55628	1070854	2	True				
ANR	1071256	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , JALR | S ( TMP_REG2 ) | DA ( RETURN_ADDR_REG ) , UNMOVABLE_INS ) )"		1070854	0					
ANR	1071257	Callee	PTR_FAIL_IF		1070854	0					
ANR	1071258	Identifier	PTR_FAIL_IF		1070854	0					
ANR	1071259	ArgumentList	"push_inst ( compiler , JALR | S ( TMP_REG2 ) | DA ( RETURN_ADDR_REG ) , UNMOVABLE_INS )"		1070854	1					
ANR	1071260	Argument	"push_inst ( compiler , JALR | S ( TMP_REG2 ) | DA ( RETURN_ADDR_REG ) , UNMOVABLE_INS )"		1070854	0					
ANR	1071261	CallExpression	"push_inst ( compiler , JALR | S ( TMP_REG2 ) | DA ( RETURN_ADDR_REG ) , UNMOVABLE_INS )"		1070854	0					
ANR	1071262	Callee	push_inst		1070854	0					
ANR	1071263	Identifier	push_inst		1070854	0					
ANR	1071264	ArgumentList	compiler		1070854	1					
ANR	1071265	Argument	compiler		1070854	0					
ANR	1071266	Identifier	compiler		1070854	0					
ANR	1071267	Argument	JALR | S ( TMP_REG2 ) | DA ( RETURN_ADDR_REG )		1070854	1					
ANR	1071268	InclusiveOrExpression	JALR | S ( TMP_REG2 ) | DA ( RETURN_ADDR_REG )		1070854	0		|			
ANR	1071269	Identifier	JALR		1070854	0					
ANR	1071270	InclusiveOrExpression	S ( TMP_REG2 ) | DA ( RETURN_ADDR_REG )		1070854	1		|			
ANR	1071271	CallExpression	S ( TMP_REG2 )		1070854	0					
ANR	1071272	Callee	S		1070854	0					
ANR	1071273	Identifier	S		1070854	0					
ANR	1071274	ArgumentList	TMP_REG2		1070854	1					
ANR	1071275	Argument	TMP_REG2		1070854	0					
ANR	1071276	Identifier	TMP_REG2		1070854	0					
ANR	1071277	CallExpression	DA ( RETURN_ADDR_REG )		1070854	1					
ANR	1071278	Callee	DA		1070854	0					
ANR	1071279	Identifier	DA		1070854	0					
ANR	1071280	ArgumentList	RETURN_ADDR_REG		1070854	1					
ANR	1071281	Argument	RETURN_ADDR_REG		1070854	0					
ANR	1071282	Identifier	RETURN_ADDR_REG		1070854	0					
ANR	1071283	Argument	UNMOVABLE_INS		1070854	2					
ANR	1071284	Identifier	UNMOVABLE_INS		1070854	0					
ANR	1071285	ExpressionStatement	jump -> addr = compiler -> size	1709:2:55632:55659	1070854	3	True				
ANR	1071286	AssignmentExpression	jump -> addr = compiler -> size		1070854	0		=			
ANR	1071287	PtrMemberAccess	jump -> addr		1070854	0					
ANR	1071288	Identifier	jump		1070854	0					
ANR	1071289	Identifier	addr		1070854	1					
ANR	1071290	PtrMemberAccess	compiler -> size		1070854	1					
ANR	1071291	Identifier	compiler		1070854	0					
ANR	1071292	Identifier	size		1070854	1					
ANR	1071293	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , ADDU_W | S ( SLJIT_R0 ) | TA ( 0 ) | DA ( 4 ) , UNMOVABLE_INS ) )"	1711:2:55694:55779	1070854	4	True				
ANR	1071294	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , ADDU_W | S ( SLJIT_R0 ) | TA ( 0 ) | DA ( 4 ) , UNMOVABLE_INS ) )"		1070854	0					
ANR	1071295	Callee	PTR_FAIL_IF		1070854	0					
ANR	1071296	Identifier	PTR_FAIL_IF		1070854	0					
ANR	1071297	ArgumentList	"push_inst ( compiler , ADDU_W | S ( SLJIT_R0 ) | TA ( 0 ) | DA ( 4 ) , UNMOVABLE_INS )"		1070854	1					
ANR	1071298	Argument	"push_inst ( compiler , ADDU_W | S ( SLJIT_R0 ) | TA ( 0 ) | DA ( 4 ) , UNMOVABLE_INS )"		1070854	0					
ANR	1071299	CallExpression	"push_inst ( compiler , ADDU_W | S ( SLJIT_R0 ) | TA ( 0 ) | DA ( 4 ) , UNMOVABLE_INS )"		1070854	0					
ANR	1071300	Callee	push_inst		1070854	0					
ANR	1071301	Identifier	push_inst		1070854	0					
ANR	1071302	ArgumentList	compiler		1070854	1					
ANR	1071303	Argument	compiler		1070854	0					
ANR	1071304	Identifier	compiler		1070854	0					
ANR	1071305	Argument	ADDU_W | S ( SLJIT_R0 ) | TA ( 0 ) | DA ( 4 )		1070854	1					
ANR	1071306	InclusiveOrExpression	ADDU_W | S ( SLJIT_R0 ) | TA ( 0 ) | DA ( 4 )		1070854	0		|			
ANR	1071307	Identifier	ADDU_W		1070854	0					
ANR	1071308	InclusiveOrExpression	S ( SLJIT_R0 ) | TA ( 0 ) | DA ( 4 )		1070854	1		|			
ANR	1071309	CallExpression	S ( SLJIT_R0 )		1070854	0					
ANR	1071310	Callee	S		1070854	0					
ANR	1071311	Identifier	S		1070854	0					
ANR	1071312	ArgumentList	SLJIT_R0		1070854	1					
ANR	1071313	Argument	SLJIT_R0		1070854	0					
ANR	1071314	Identifier	SLJIT_R0		1070854	0					
ANR	1071315	InclusiveOrExpression	TA ( 0 ) | DA ( 4 )		1070854	1		|			
ANR	1071316	CallExpression	TA ( 0 )		1070854	0					
ANR	1071317	Callee	TA		1070854	0					
ANR	1071318	Identifier	TA		1070854	0					
ANR	1071319	ArgumentList	0		1070854	1					
ANR	1071320	Argument	0		1070854	0					
ANR	1071321	PrimaryExpression	0		1070854	0					
ANR	1071322	CallExpression	DA ( 4 )		1070854	1					
ANR	1071323	Callee	DA		1070854	0					
ANR	1071324	Identifier	DA		1070854	0					
ANR	1071325	ArgumentList	4		1070854	1					
ANR	1071326	Argument	4		1070854	0					
ANR	1071327	PrimaryExpression	4		1070854	0					
ANR	1071328	Argument	UNMOVABLE_INS		1070854	2					
ANR	1071329	Identifier	UNMOVABLE_INS		1070854	0					
ANR	1071330	ReturnStatement	return jump ;	1713:1:55785:55796	1070854	16	True				
ANR	1071331	Identifier	jump		1070854	0					
ANR	1071332	ReturnType	struct sljit_jump *		1070854	1					
ANR	1071333	Identifier	sljit_emit_jump		1070854	2					
ANR	1071334	ParameterList	"struct sljit_compiler * compiler , sljit_si type"		1070854	3					
ANR	1071335	Parameter	struct sljit_compiler * compiler	1620:60:53443:53473	1070854	0	True				
ANR	1071336	ParameterType	struct sljit_compiler *		1070854	0					
ANR	1071337	Identifier	compiler		1070854	1					
ANR	1071338	Parameter	sljit_si type	1620:93:53476:53488	1070854	1	True				
ANR	1071339	ParameterType	sljit_si		1070854	0					
ANR	1071340	Identifier	type		1070854	1					
ANR	1071341	CFGEntryNode	ENTRY		1070854		True				
ANR	1071342	CFGExitNode	EXIT		1070854		True				
ANR	1071343	Symbol	EQUAL_FLAG		1070854						
ANR	1071344	Symbol	TMP_REG2		1070854						
ANR	1071345	Symbol	SLJIT_JUMP		1070854						
ANR	1071346	Symbol	* jump		1070854						
ANR	1071347	Symbol	ADDU_W		1070854						
ANR	1071348	Symbol	flags		1070854						
ANR	1071349	Symbol	jump -> flags		1070854						
ANR	1071350	Symbol	JR		1070854						
ANR	1071351	Symbol	RETURN_ADDR_REG		1070854						
ANR	1071352	Symbol	* compiler		1070854						
ANR	1071353	Symbol	type		1070854						
ANR	1071354	Symbol	DR		1070854						
ANR	1071355	Symbol	SLJIT_R0		1070854						
ANR	1071356	Symbol	S		1070854						
ANR	1071357	Symbol	ULESS_FLAG		1070854						
ANR	1071358	Symbol	GREATER_FLAG		1070854						
ANR	1071359	Symbol	SLJIT_REWRITABLE_JUMP		1070854						
ANR	1071360	Symbol	compiler		1070854						
ANR	1071361	Symbol	delay_check		1070854						
ANR	1071362	Symbol	jump		1070854						
ANR	1071363	Symbol	JALR		1070854						
ANR	1071364	Symbol	push_inst		1070854						
ANR	1071365	Symbol	IS_MOVABLE		1070854						
ANR	1071366	Symbol	UNMOVABLE_INS		1070854						
ANR	1071367	Symbol	SLJIT_CALL0		1070854						
ANR	1071368	Symbol	UGREATER_FLAG		1070854						
ANR	1071369	Symbol	jump -> addr		1070854						
ANR	1071370	Symbol	ensure_abuf		1070854						
ANR	1071371	Symbol	TA		1070854						
ANR	1071372	Symbol	NOP		1070854						
ANR	1071373	Symbol	IS_JAL		1070854						
ANR	1071374	Symbol	IS_CALL		1070854						
ANR	1071375	Symbol	compiler -> size		1070854						
ANR	1071376	Symbol	inst		1070854						
ANR	1071377	Symbol	LESS_FLAG		1070854						
ANR	1071378	Symbol	check_sljit_emit_jump		1070854						
ANR	1071379	Symbol	emit_const		1070854						
ANR	1071380	Symbol	compiler -> delay_slot		1070854						
ANR	1071381	Symbol	MOVABLE_INS		1070854						
ANR	1071382	Symbol	OVERFLOW_FLAG		1070854						
ANR	1071383	Symbol	PIC_ADDR_REG		1070854						
ANR	1071384	Symbol	DA		1070854						
ANR	1071385	Function	sljit_emit_cmp	1736:25:56206:60120							
ANR	1071386	FunctionDef	"sljit_emit_cmp (struct sljit_compiler * compiler , sljit_si type , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1071385	0					
ANR	1071387	CompoundStatement		1739:0:56352:60120	1071385	0					
ANR	1071388	IdentifierDeclStatement	struct sljit_jump * jump ;	1740:1:56355:56378	1071385	0	True				
ANR	1071389	IdentifierDecl	* jump		1071385	0					
ANR	1071390	IdentifierDeclType	struct sljit_jump *		1071385	0					
ANR	1071391	Identifier	jump		1071385	1					
ANR	1071392	IdentifierDeclStatement	sljit_si flags ;	1741:1:56381:56395	1071385	1	True				
ANR	1071393	IdentifierDecl	flags		1071385	0					
ANR	1071394	IdentifierDeclType	sljit_si		1071385	0					
ANR	1071395	Identifier	flags		1071385	1					
ANR	1071396	IdentifierDeclStatement	sljit_ins inst ;	1742:1:56398:56412	1071385	2	True				
ANR	1071397	IdentifierDecl	inst		1071385	0					
ANR	1071398	IdentifierDeclType	sljit_ins		1071385	0					
ANR	1071399	Identifier	inst		1071385	1					
ANR	1071400	ExpressionStatement	CHECK_ERROR_PTR ( )	1744:1:56416:56433	1071385	3	True				
ANR	1071401	CallExpression	CHECK_ERROR_PTR ( )		1071385	0					
ANR	1071402	Callee	CHECK_ERROR_PTR		1071385	0					
ANR	1071403	Identifier	CHECK_ERROR_PTR		1071385	0					
ANR	1071404	ArgumentList			1071385	1					
ANR	1071405	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_cmp ( compiler , type , src1 , src1w , src2 , src2w ) )"	1745:1:56436:56509	1071385	4	True				
ANR	1071406	CallExpression	"CHECK_PTR ( check_sljit_emit_cmp ( compiler , type , src1 , src1w , src2 , src2w ) )"		1071385	0					
ANR	1071407	Callee	CHECK_PTR		1071385	0					
ANR	1071408	Identifier	CHECK_PTR		1071385	0					
ANR	1071409	ArgumentList	"check_sljit_emit_cmp ( compiler , type , src1 , src1w , src2 , src2w )"		1071385	1					
ANR	1071410	Argument	"check_sljit_emit_cmp ( compiler , type , src1 , src1w , src2 , src2w )"		1071385	0					
ANR	1071411	CallExpression	"check_sljit_emit_cmp ( compiler , type , src1 , src1w , src2 , src2w )"		1071385	0					
ANR	1071412	Callee	check_sljit_emit_cmp		1071385	0					
ANR	1071413	Identifier	check_sljit_emit_cmp		1071385	0					
ANR	1071414	ArgumentList	compiler		1071385	1					
ANR	1071415	Argument	compiler		1071385	0					
ANR	1071416	Identifier	compiler		1071385	0					
ANR	1071417	Argument	type		1071385	1					
ANR	1071418	Identifier	type		1071385	0					
ANR	1071419	Argument	src1		1071385	2					
ANR	1071420	Identifier	src1		1071385	0					
ANR	1071421	Argument	src1w		1071385	3					
ANR	1071422	Identifier	src1w		1071385	0					
ANR	1071423	Argument	src2		1071385	4					
ANR	1071424	Identifier	src2		1071385	0					
ANR	1071425	Argument	src2w		1071385	5					
ANR	1071426	Identifier	src2w		1071385	0					
ANR	1071427	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"	1746:1:56512:56544	1071385	5	True				
ANR	1071428	CallExpression	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"		1071385	0					
ANR	1071429	Callee	ADJUST_LOCAL_OFFSET		1071385	0					
ANR	1071430	Identifier	ADJUST_LOCAL_OFFSET		1071385	0					
ANR	1071431	ArgumentList	src1		1071385	1					
ANR	1071432	Argument	src1		1071385	0					
ANR	1071433	Identifier	src1		1071385	0					
ANR	1071434	Argument	src1w		1071385	1					
ANR	1071435	Identifier	src1w		1071385	0					
ANR	1071436	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"	1747:1:56547:56579	1071385	6	True				
ANR	1071437	CallExpression	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"		1071385	0					
ANR	1071438	Callee	ADJUST_LOCAL_OFFSET		1071385	0					
ANR	1071439	Identifier	ADJUST_LOCAL_OFFSET		1071385	0					
ANR	1071440	ArgumentList	src2		1071385	1					
ANR	1071441	Argument	src2		1071385	0					
ANR	1071442	Identifier	src2		1071385	0					
ANR	1071443	Argument	src2w		1071385	1					
ANR	1071444	Identifier	src2w		1071385	0					
ANR	1071445	ExpressionStatement	compiler -> cache_arg = 0	1749:1:56583:56606	1071385	7	True				
ANR	1071446	AssignmentExpression	compiler -> cache_arg = 0		1071385	0		=			
ANR	1071447	PtrMemberAccess	compiler -> cache_arg		1071385	0					
ANR	1071448	Identifier	compiler		1071385	0					
ANR	1071449	Identifier	cache_arg		1071385	1					
ANR	1071450	PrimaryExpression	0		1071385	1					
ANR	1071451	ExpressionStatement	compiler -> cache_argw = 0	1750:1:56609:56633	1071385	8	True				
ANR	1071452	AssignmentExpression	compiler -> cache_argw = 0		1071385	0		=			
ANR	1071453	PtrMemberAccess	compiler -> cache_argw		1071385	0					
ANR	1071454	Identifier	compiler		1071385	0					
ANR	1071455	Identifier	cache_argw		1071385	1					
ANR	1071456	PrimaryExpression	0		1071385	1					
ANR	1071457	ExpressionStatement	flags = ( ( type & SLJIT_INT_OP ) ? INT_DATA : WORD_DATA ) | LOAD_DATA	1751:1:56636:56702	1071385	9	True				
ANR	1071458	AssignmentExpression	flags = ( ( type & SLJIT_INT_OP ) ? INT_DATA : WORD_DATA ) | LOAD_DATA		1071385	0		=			
ANR	1071459	Identifier	flags		1071385	0					
ANR	1071460	InclusiveOrExpression	( ( type & SLJIT_INT_OP ) ? INT_DATA : WORD_DATA ) | LOAD_DATA		1071385	1		|			
ANR	1071461	ConditionalExpression	( type & SLJIT_INT_OP ) ? INT_DATA : WORD_DATA		1071385	0					
ANR	1071462	Condition	type & SLJIT_INT_OP		1071385	0					
ANR	1071463	BitAndExpression	type & SLJIT_INT_OP		1071385	0		&			
ANR	1071464	Identifier	type		1071385	0					
ANR	1071465	Identifier	SLJIT_INT_OP		1071385	1					
ANR	1071466	Identifier	INT_DATA		1071385	1					
ANR	1071467	Identifier	WORD_DATA		1071385	2					
ANR	1071468	Identifier	LOAD_DATA		1071385	1					
ANR	1071469	IfStatement	if ( src1 & SLJIT_MEM )		1071385	10					
ANR	1071470	Condition	src1 & SLJIT_MEM	1752:5:56709:56724	1071385	0	True				
ANR	1071471	BitAndExpression	src1 & SLJIT_MEM		1071385	0		&			
ANR	1071472	Identifier	src1		1071385	0					
ANR	1071473	Identifier	SLJIT_MEM		1071385	1					
ANR	1071474	CompoundStatement		14:23:374:374	1071385	1					
ANR	1071475	ExpressionStatement	"PTR_FAIL_IF ( emit_op_mem2 ( compiler , flags , DR ( TMP_REG1 ) , src1 , src1w , src2 , src2w ) )"	1753:2:56731:56813	1071385	0	True				
ANR	1071476	CallExpression	"PTR_FAIL_IF ( emit_op_mem2 ( compiler , flags , DR ( TMP_REG1 ) , src1 , src1w , src2 , src2w ) )"		1071385	0					
ANR	1071477	Callee	PTR_FAIL_IF		1071385	0					
ANR	1071478	Identifier	PTR_FAIL_IF		1071385	0					
ANR	1071479	ArgumentList	"emit_op_mem2 ( compiler , flags , DR ( TMP_REG1 ) , src1 , src1w , src2 , src2w )"		1071385	1					
ANR	1071480	Argument	"emit_op_mem2 ( compiler , flags , DR ( TMP_REG1 ) , src1 , src1w , src2 , src2w )"		1071385	0					
ANR	1071481	CallExpression	"emit_op_mem2 ( compiler , flags , DR ( TMP_REG1 ) , src1 , src1w , src2 , src2w )"		1071385	0					
ANR	1071482	Callee	emit_op_mem2		1071385	0					
ANR	1071483	Identifier	emit_op_mem2		1071385	0					
ANR	1071484	ArgumentList	compiler		1071385	1					
ANR	1071485	Argument	compiler		1071385	0					
ANR	1071486	Identifier	compiler		1071385	0					
ANR	1071487	Argument	flags		1071385	1					
ANR	1071488	Identifier	flags		1071385	0					
ANR	1071489	Argument	DR ( TMP_REG1 )		1071385	2					
ANR	1071490	CallExpression	DR ( TMP_REG1 )		1071385	0					
ANR	1071491	Callee	DR		1071385	0					
ANR	1071492	Identifier	DR		1071385	0					
ANR	1071493	ArgumentList	TMP_REG1		1071385	1					
ANR	1071494	Argument	TMP_REG1		1071385	0					
ANR	1071495	Identifier	TMP_REG1		1071385	0					
ANR	1071496	Argument	src1		1071385	3					
ANR	1071497	Identifier	src1		1071385	0					
ANR	1071498	Argument	src1w		1071385	4					
ANR	1071499	Identifier	src1w		1071385	0					
ANR	1071500	Argument	src2		1071385	5					
ANR	1071501	Identifier	src2		1071385	0					
ANR	1071502	Argument	src2w		1071385	6					
ANR	1071503	Identifier	src2w		1071385	0					
ANR	1071504	ExpressionStatement	src1 = TMP_REG1	1754:2:56817:56832	1071385	1	True				
ANR	1071505	AssignmentExpression	src1 = TMP_REG1		1071385	0		=			
ANR	1071506	Identifier	src1		1071385	0					
ANR	1071507	Identifier	TMP_REG1		1071385	1					
ANR	1071508	IfStatement	if ( src2 & SLJIT_MEM )		1071385	11					
ANR	1071509	Condition	src2 & SLJIT_MEM	1756:5:56842:56857	1071385	0	True				
ANR	1071510	BitAndExpression	src2 & SLJIT_MEM		1071385	0		&			
ANR	1071511	Identifier	src2		1071385	0					
ANR	1071512	Identifier	SLJIT_MEM		1071385	1					
ANR	1071513	CompoundStatement		18:23:507:507	1071385	1					
ANR	1071514	ExpressionStatement	"PTR_FAIL_IF ( emit_op_mem2 ( compiler , flags , DR ( TMP_REG2 ) , src2 , src2w , 0 , 0 ) )"	1757:2:56864:56939	1071385	0	True				
ANR	1071515	CallExpression	"PTR_FAIL_IF ( emit_op_mem2 ( compiler , flags , DR ( TMP_REG2 ) , src2 , src2w , 0 , 0 ) )"		1071385	0					
ANR	1071516	Callee	PTR_FAIL_IF		1071385	0					
ANR	1071517	Identifier	PTR_FAIL_IF		1071385	0					
ANR	1071518	ArgumentList	"emit_op_mem2 ( compiler , flags , DR ( TMP_REG2 ) , src2 , src2w , 0 , 0 )"		1071385	1					
ANR	1071519	Argument	"emit_op_mem2 ( compiler , flags , DR ( TMP_REG2 ) , src2 , src2w , 0 , 0 )"		1071385	0					
ANR	1071520	CallExpression	"emit_op_mem2 ( compiler , flags , DR ( TMP_REG2 ) , src2 , src2w , 0 , 0 )"		1071385	0					
ANR	1071521	Callee	emit_op_mem2		1071385	0					
ANR	1071522	Identifier	emit_op_mem2		1071385	0					
ANR	1071523	ArgumentList	compiler		1071385	1					
ANR	1071524	Argument	compiler		1071385	0					
ANR	1071525	Identifier	compiler		1071385	0					
ANR	1071526	Argument	flags		1071385	1					
ANR	1071527	Identifier	flags		1071385	0					
ANR	1071528	Argument	DR ( TMP_REG2 )		1071385	2					
ANR	1071529	CallExpression	DR ( TMP_REG2 )		1071385	0					
ANR	1071530	Callee	DR		1071385	0					
ANR	1071531	Identifier	DR		1071385	0					
ANR	1071532	ArgumentList	TMP_REG2		1071385	1					
ANR	1071533	Argument	TMP_REG2		1071385	0					
ANR	1071534	Identifier	TMP_REG2		1071385	0					
ANR	1071535	Argument	src2		1071385	3					
ANR	1071536	Identifier	src2		1071385	0					
ANR	1071537	Argument	src2w		1071385	4					
ANR	1071538	Identifier	src2w		1071385	0					
ANR	1071539	Argument	0		1071385	5					
ANR	1071540	PrimaryExpression	0		1071385	0					
ANR	1071541	Argument	0		1071385	6					
ANR	1071542	PrimaryExpression	0		1071385	0					
ANR	1071543	ExpressionStatement	src2 = TMP_REG2	1758:2:56943:56958	1071385	1	True				
ANR	1071544	AssignmentExpression	src2 = TMP_REG2		1071385	0		=			
ANR	1071545	Identifier	src2		1071385	0					
ANR	1071546	Identifier	TMP_REG2		1071385	1					
ANR	1071547	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	1761:1:56965:57040	1071385	12	True				
ANR	1071548	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1071385	0		=			
ANR	1071549	Identifier	jump		1071385	0					
ANR	1071550	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1071385	1					
ANR	1071551	CastTarget	struct sljit_jump *		1071385	0					
ANR	1071552	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1071385	1					
ANR	1071553	Callee	ensure_abuf		1071385	0					
ANR	1071554	Identifier	ensure_abuf		1071385	0					
ANR	1071555	ArgumentList	compiler		1071385	1					
ANR	1071556	Argument	compiler		1071385	0					
ANR	1071557	Identifier	compiler		1071385	0					
ANR	1071558	Argument	sizeof ( struct sljit_jump )		1071385	1					
ANR	1071559	SizeofExpression	sizeof ( struct sljit_jump )		1071385	0					
ANR	1071560	Sizeof	sizeof		1071385	0					
ANR	1071561	SizeofOperand	struct sljit_jump		1071385	1					
ANR	1071562	ExpressionStatement	PTR_FAIL_IF ( ! jump )	1762:1:57043:57061	1071385	13	True				
ANR	1071563	CallExpression	PTR_FAIL_IF ( ! jump )		1071385	0					
ANR	1071564	Callee	PTR_FAIL_IF		1071385	0					
ANR	1071565	Identifier	PTR_FAIL_IF		1071385	0					
ANR	1071566	ArgumentList	! jump		1071385	1					
ANR	1071567	Argument	! jump		1071385	0					
ANR	1071568	UnaryOperationExpression	! jump		1071385	0					
ANR	1071569	UnaryOperator	!		1071385	0					
ANR	1071570	Identifier	jump		1071385	1					
ANR	1071571	ExpressionStatement	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"	1763:1:57064:57118	1071385	14	True				
ANR	1071572	CallExpression	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"		1071385	0					
ANR	1071573	Callee	set_jump		1071385	0					
ANR	1071574	Identifier	set_jump		1071385	0					
ANR	1071575	ArgumentList	jump		1071385	1					
ANR	1071576	Argument	jump		1071385	0					
ANR	1071577	Identifier	jump		1071385	0					
ANR	1071578	Argument	compiler		1071385	1					
ANR	1071579	Identifier	compiler		1071385	0					
ANR	1071580	Argument	type & SLJIT_REWRITABLE_JUMP		1071385	2					
ANR	1071581	BitAndExpression	type & SLJIT_REWRITABLE_JUMP		1071385	0		&			
ANR	1071582	Identifier	type		1071385	0					
ANR	1071583	Identifier	SLJIT_REWRITABLE_JUMP		1071385	1					
ANR	1071584	ExpressionStatement	type &= 0xff	1764:1:57121:57133	1071385	15	True				
ANR	1071585	AssignmentExpression	type &= 0xff		1071385	0		&=			
ANR	1071586	Identifier	type		1071385	0					
ANR	1071587	PrimaryExpression	0xff		1071385	1					
ANR	1071588	IfStatement	if ( type <= SLJIT_NOT_EQUAL )		1071385	16					
ANR	1071589	Condition	type <= SLJIT_NOT_EQUAL	1766:5:57141:57163	1071385	0	True				
ANR	1071590	RelationalExpression	type <= SLJIT_NOT_EQUAL		1071385	0		<=			
ANR	1071591	Identifier	type		1071385	0					
ANR	1071592	Identifier	SLJIT_NOT_EQUAL		1071385	1					
ANR	1071593	CompoundStatement		28:30:813:813	1071385	1					
ANR	1071594	ExpressionStatement	RESOLVE_IMM1 ( )	1767:2:57170:57184	1071385	0	True				
ANR	1071595	CallExpression	RESOLVE_IMM1 ( )		1071385	0					
ANR	1071596	Callee	RESOLVE_IMM1		1071385	0					
ANR	1071597	Identifier	RESOLVE_IMM1		1071385	0					
ANR	1071598	ArgumentList			1071385	1					
ANR	1071599	ExpressionStatement	RESOLVE_IMM2 ( )	1768:2:57188:57202	1071385	1	True				
ANR	1071600	CallExpression	RESOLVE_IMM2 ( )		1071385	0					
ANR	1071601	Callee	RESOLVE_IMM2		1071385	0					
ANR	1071602	Identifier	RESOLVE_IMM2		1071385	0					
ANR	1071603	ArgumentList			1071385	1					
ANR	1071604	ExpressionStatement	jump -> flags |= IS_BIT26_COND	1769:2:57206:57234	1071385	2	True				
ANR	1071605	AssignmentExpression	jump -> flags |= IS_BIT26_COND		1071385	0		|=			
ANR	1071606	PtrMemberAccess	jump -> flags		1071385	0					
ANR	1071607	Identifier	jump		1071385	0					
ANR	1071608	Identifier	flags		1071385	1					
ANR	1071609	Identifier	IS_BIT26_COND		1071385	1					
ANR	1071610	IfStatement	if ( compiler -> delay_slot == MOVABLE_INS || ( compiler -> delay_slot != UNMOVABLE_INS && compiler -> delay_slot != DR ( src1 ) && compiler -> delay_slot != DR ( src2 ) ) )		1071385	3					
ANR	1071611	Condition	compiler -> delay_slot == MOVABLE_INS || ( compiler -> delay_slot != UNMOVABLE_INS && compiler -> delay_slot != DR ( src1 ) && compiler -> delay_slot != DR ( src2 ) )	1770:6:57242:57391	1071385	0	True				
ANR	1071612	OrExpression	compiler -> delay_slot == MOVABLE_INS || ( compiler -> delay_slot != UNMOVABLE_INS && compiler -> delay_slot != DR ( src1 ) && compiler -> delay_slot != DR ( src2 ) )		1071385	0		||			
ANR	1071613	EqualityExpression	compiler -> delay_slot == MOVABLE_INS		1071385	0		==			
ANR	1071614	PtrMemberAccess	compiler -> delay_slot		1071385	0					
ANR	1071615	Identifier	compiler		1071385	0					
ANR	1071616	Identifier	delay_slot		1071385	1					
ANR	1071617	Identifier	MOVABLE_INS		1071385	1					
ANR	1071618	AndExpression	compiler -> delay_slot != UNMOVABLE_INS && compiler -> delay_slot != DR ( src1 ) && compiler -> delay_slot != DR ( src2 )		1071385	1		&&			
ANR	1071619	EqualityExpression	compiler -> delay_slot != UNMOVABLE_INS		1071385	0		!=			
ANR	1071620	PtrMemberAccess	compiler -> delay_slot		1071385	0					
ANR	1071621	Identifier	compiler		1071385	0					
ANR	1071622	Identifier	delay_slot		1071385	1					
ANR	1071623	Identifier	UNMOVABLE_INS		1071385	1					
ANR	1071624	AndExpression	compiler -> delay_slot != DR ( src1 ) && compiler -> delay_slot != DR ( src2 )		1071385	1		&&			
ANR	1071625	EqualityExpression	compiler -> delay_slot != DR ( src1 )		1071385	0		!=			
ANR	1071626	PtrMemberAccess	compiler -> delay_slot		1071385	0					
ANR	1071627	Identifier	compiler		1071385	0					
ANR	1071628	Identifier	delay_slot		1071385	1					
ANR	1071629	CallExpression	DR ( src1 )		1071385	1					
ANR	1071630	Callee	DR		1071385	0					
ANR	1071631	Identifier	DR		1071385	0					
ANR	1071632	ArgumentList	src1		1071385	1					
ANR	1071633	Argument	src1		1071385	0					
ANR	1071634	Identifier	src1		1071385	0					
ANR	1071635	EqualityExpression	compiler -> delay_slot != DR ( src2 )		1071385	1		!=			
ANR	1071636	PtrMemberAccess	compiler -> delay_slot		1071385	0					
ANR	1071637	Identifier	compiler		1071385	0					
ANR	1071638	Identifier	delay_slot		1071385	1					
ANR	1071639	CallExpression	DR ( src2 )		1071385	1					
ANR	1071640	Callee	DR		1071385	0					
ANR	1071641	Identifier	DR		1071385	0					
ANR	1071642	ArgumentList	src2		1071385	1					
ANR	1071643	Argument	src2		1071385	0					
ANR	1071644	Identifier	src2		1071385	0					
ANR	1071645	ExpressionStatement	jump -> flags |= IS_MOVABLE	1771:3:57397:57422	1071385	1	True				
ANR	1071646	AssignmentExpression	jump -> flags |= IS_MOVABLE		1071385	0		|=			
ANR	1071647	PtrMemberAccess	jump -> flags		1071385	0					
ANR	1071648	Identifier	jump		1071385	0					
ANR	1071649	Identifier	flags		1071385	1					
ANR	1071650	Identifier	IS_MOVABLE		1071385	1					
ANR	1071651	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , ( type == SLJIT_EQUAL ? BNE : BEQ ) | S ( src1 ) | T ( src2 ) | JUMP_LENGTH , UNMOVABLE_INS ) )"	1772:2:57426:57542	1071385	4	True				
ANR	1071652	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , ( type == SLJIT_EQUAL ? BNE : BEQ ) | S ( src1 ) | T ( src2 ) | JUMP_LENGTH , UNMOVABLE_INS ) )"		1071385	0					
ANR	1071653	Callee	PTR_FAIL_IF		1071385	0					
ANR	1071654	Identifier	PTR_FAIL_IF		1071385	0					
ANR	1071655	ArgumentList	"push_inst ( compiler , ( type == SLJIT_EQUAL ? BNE : BEQ ) | S ( src1 ) | T ( src2 ) | JUMP_LENGTH , UNMOVABLE_INS )"		1071385	1					
ANR	1071656	Argument	"push_inst ( compiler , ( type == SLJIT_EQUAL ? BNE : BEQ ) | S ( src1 ) | T ( src2 ) | JUMP_LENGTH , UNMOVABLE_INS )"		1071385	0					
ANR	1071657	CallExpression	"push_inst ( compiler , ( type == SLJIT_EQUAL ? BNE : BEQ ) | S ( src1 ) | T ( src2 ) | JUMP_LENGTH , UNMOVABLE_INS )"		1071385	0					
ANR	1071658	Callee	push_inst		1071385	0					
ANR	1071659	Identifier	push_inst		1071385	0					
ANR	1071660	ArgumentList	compiler		1071385	1					
ANR	1071661	Argument	compiler		1071385	0					
ANR	1071662	Identifier	compiler		1071385	0					
ANR	1071663	Argument	( type == SLJIT_EQUAL ? BNE : BEQ ) | S ( src1 ) | T ( src2 ) | JUMP_LENGTH		1071385	1					
ANR	1071664	InclusiveOrExpression	( type == SLJIT_EQUAL ? BNE : BEQ ) | S ( src1 ) | T ( src2 ) | JUMP_LENGTH		1071385	0		|			
ANR	1071665	ConditionalExpression	type == SLJIT_EQUAL ? BNE : BEQ		1071385	0					
ANR	1071666	Condition	type == SLJIT_EQUAL		1071385	0					
ANR	1071667	EqualityExpression	type == SLJIT_EQUAL		1071385	0		==			
ANR	1071668	Identifier	type		1071385	0					
ANR	1071669	Identifier	SLJIT_EQUAL		1071385	1					
ANR	1071670	Identifier	BNE		1071385	1					
ANR	1071671	Identifier	BEQ		1071385	2					
ANR	1071672	InclusiveOrExpression	S ( src1 ) | T ( src2 ) | JUMP_LENGTH		1071385	1		|			
ANR	1071673	CallExpression	S ( src1 )		1071385	0					
ANR	1071674	Callee	S		1071385	0					
ANR	1071675	Identifier	S		1071385	0					
ANR	1071676	ArgumentList	src1		1071385	1					
ANR	1071677	Argument	src1		1071385	0					
ANR	1071678	Identifier	src1		1071385	0					
ANR	1071679	InclusiveOrExpression	T ( src2 ) | JUMP_LENGTH		1071385	1		|			
ANR	1071680	CallExpression	T ( src2 )		1071385	0					
ANR	1071681	Callee	T		1071385	0					
ANR	1071682	Identifier	T		1071385	0					
ANR	1071683	ArgumentList	src2		1071385	1					
ANR	1071684	Argument	src2		1071385	0					
ANR	1071685	Identifier	src2		1071385	0					
ANR	1071686	Identifier	JUMP_LENGTH		1071385	1					
ANR	1071687	Argument	UNMOVABLE_INS		1071385	2					
ANR	1071688	Identifier	UNMOVABLE_INS		1071385	0					
ANR	1071689	ElseStatement	else		1071385	0					
ANR	1071690	IfStatement	if ( type >= SLJIT_SIG_LESS && ( ( ( src1 & SLJIT_IMM ) && ( src1w == 0 ) ) || ( ( src2 & SLJIT_IMM ) && ( src2w == 0 ) ) ) )		1071385	0					
ANR	1071691	Condition	type >= SLJIT_SIG_LESS && ( ( ( src1 & SLJIT_IMM ) && ( src1w == 0 ) ) || ( ( src2 & SLJIT_IMM ) && ( src2w == 0 ) ) )	1774:10:57557:57660	1071385	0	True				
ANR	1071692	AndExpression	type >= SLJIT_SIG_LESS && ( ( ( src1 & SLJIT_IMM ) && ( src1w == 0 ) ) || ( ( src2 & SLJIT_IMM ) && ( src2w == 0 ) ) )		1071385	0		&&			
ANR	1071693	RelationalExpression	type >= SLJIT_SIG_LESS		1071385	0		>=			
ANR	1071694	Identifier	type		1071385	0					
ANR	1071695	Identifier	SLJIT_SIG_LESS		1071385	1					
ANR	1071696	OrExpression	( ( src1 & SLJIT_IMM ) && ( src1w == 0 ) ) || ( ( src2 & SLJIT_IMM ) && ( src2w == 0 ) )		1071385	1		||			
ANR	1071697	AndExpression	( src1 & SLJIT_IMM ) && ( src1w == 0 )		1071385	0		&&			
ANR	1071698	BitAndExpression	src1 & SLJIT_IMM		1071385	0		&			
ANR	1071699	Identifier	src1		1071385	0					
ANR	1071700	Identifier	SLJIT_IMM		1071385	1					
ANR	1071701	EqualityExpression	src1w == 0		1071385	1		==			
ANR	1071702	Identifier	src1w		1071385	0					
ANR	1071703	PrimaryExpression	0		1071385	1					
ANR	1071704	AndExpression	( src2 & SLJIT_IMM ) && ( src2w == 0 )		1071385	1		&&			
ANR	1071705	BitAndExpression	src2 & SLJIT_IMM		1071385	0		&			
ANR	1071706	Identifier	src2		1071385	0					
ANR	1071707	Identifier	SLJIT_IMM		1071385	1					
ANR	1071708	EqualityExpression	src2w == 0		1071385	1		==			
ANR	1071709	Identifier	src2w		1071385	0					
ANR	1071710	PrimaryExpression	0		1071385	1					
ANR	1071711	CompoundStatement		36:116:1310:1310	1071385	1					
ANR	1071712	ExpressionStatement	inst = NOP	1775:2:57667:57677	1071385	0	True				
ANR	1071713	AssignmentExpression	inst = NOP		1071385	0		=			
ANR	1071714	Identifier	inst		1071385	0					
ANR	1071715	Identifier	NOP		1071385	1					
ANR	1071716	IfStatement	if ( ( src1 & SLJIT_IMM ) && ( src1w == 0 ) )		1071385	1					
ANR	1071717	Condition	( src1 & SLJIT_IMM ) && ( src1w == 0 )	1776:6:57685:57718	1071385	0	True				
ANR	1071718	AndExpression	( src1 & SLJIT_IMM ) && ( src1w == 0 )		1071385	0		&&			
ANR	1071719	BitAndExpression	src1 & SLJIT_IMM		1071385	0		&			
ANR	1071720	Identifier	src1		1071385	0					
ANR	1071721	Identifier	SLJIT_IMM		1071385	1					
ANR	1071722	EqualityExpression	src1w == 0		1071385	1		==			
ANR	1071723	Identifier	src1w		1071385	0					
ANR	1071724	PrimaryExpression	0		1071385	1					
ANR	1071725	CompoundStatement		38:42:1368:1368	1071385	1					
ANR	1071726	ExpressionStatement	RESOLVE_IMM2 ( )	1777:3:57726:57740	1071385	0	True				
ANR	1071727	CallExpression	RESOLVE_IMM2 ( )		1071385	0					
ANR	1071728	Callee	RESOLVE_IMM2		1071385	0					
ANR	1071729	Identifier	RESOLVE_IMM2		1071385	0					
ANR	1071730	ArgumentList			1071385	1					
ANR	1071731	SwitchStatement	switch ( type )		1071385	1					
ANR	1071732	Condition	type	1778:11:57753:57756	1071385	0	True				
ANR	1071733	Identifier	type		1071385	0					
ANR	1071734	CompoundStatement		40:17:1406:1406	1071385	1					
ANR	1071735	Label	case SLJIT_SIG_LESS :	1779:3:57764:57783	1071385	0	True				
ANR	1071736	Identifier	SLJIT_SIG_LESS		1071385	0					
ANR	1071737	ExpressionStatement	inst = BLEZ	1780:4:57789:57800	1071385	1	True				
ANR	1071738	AssignmentExpression	inst = BLEZ		1071385	0		=			
ANR	1071739	Identifier	inst		1071385	0					
ANR	1071740	Identifier	BLEZ		1071385	1					
ANR	1071741	ExpressionStatement	jump -> flags |= IS_BIT26_COND	1781:4:57806:57834	1071385	2	True				
ANR	1071742	AssignmentExpression	jump -> flags |= IS_BIT26_COND		1071385	0		|=			
ANR	1071743	PtrMemberAccess	jump -> flags		1071385	0					
ANR	1071744	Identifier	jump		1071385	0					
ANR	1071745	Identifier	flags		1071385	1					
ANR	1071746	Identifier	IS_BIT26_COND		1071385	1					
ANR	1071747	BreakStatement	break ;	1782:4:57840:57845	1071385	3	True				
ANR	1071748	Label	case SLJIT_SIG_GREATER_EQUAL :	1783:3:57850:57878	1071385	4	True				
ANR	1071749	Identifier	SLJIT_SIG_GREATER_EQUAL		1071385	0					
ANR	1071750	ExpressionStatement	inst = BGTZ	1784:4:57884:57895	1071385	5	True				
ANR	1071751	AssignmentExpression	inst = BGTZ		1071385	0		=			
ANR	1071752	Identifier	inst		1071385	0					
ANR	1071753	Identifier	BGTZ		1071385	1					
ANR	1071754	ExpressionStatement	jump -> flags |= IS_BIT26_COND	1785:4:57901:57929	1071385	6	True				
ANR	1071755	AssignmentExpression	jump -> flags |= IS_BIT26_COND		1071385	0		|=			
ANR	1071756	PtrMemberAccess	jump -> flags		1071385	0					
ANR	1071757	Identifier	jump		1071385	0					
ANR	1071758	Identifier	flags		1071385	1					
ANR	1071759	Identifier	IS_BIT26_COND		1071385	1					
ANR	1071760	BreakStatement	break ;	1786:4:57935:57940	1071385	7	True				
ANR	1071761	Label	case SLJIT_SIG_GREATER :	1787:3:57945:57967	1071385	8	True				
ANR	1071762	Identifier	SLJIT_SIG_GREATER		1071385	0					
ANR	1071763	ExpressionStatement	inst = BGEZ	1788:4:57973:57984	1071385	9	True				
ANR	1071764	AssignmentExpression	inst = BGEZ		1071385	0		=			
ANR	1071765	Identifier	inst		1071385	0					
ANR	1071766	Identifier	BGEZ		1071385	1					
ANR	1071767	ExpressionStatement	jump -> flags |= IS_BIT16_COND	1789:4:57990:58018	1071385	10	True				
ANR	1071768	AssignmentExpression	jump -> flags |= IS_BIT16_COND		1071385	0		|=			
ANR	1071769	PtrMemberAccess	jump -> flags		1071385	0					
ANR	1071770	Identifier	jump		1071385	0					
ANR	1071771	Identifier	flags		1071385	1					
ANR	1071772	Identifier	IS_BIT16_COND		1071385	1					
ANR	1071773	BreakStatement	break ;	1790:4:58024:58029	1071385	11	True				
ANR	1071774	Label	case SLJIT_SIG_LESS_EQUAL :	1791:3:58034:58059	1071385	12	True				
ANR	1071775	Identifier	SLJIT_SIG_LESS_EQUAL		1071385	0					
ANR	1071776	ExpressionStatement	inst = BLTZ	1792:4:58065:58076	1071385	13	True				
ANR	1071777	AssignmentExpression	inst = BLTZ		1071385	0		=			
ANR	1071778	Identifier	inst		1071385	0					
ANR	1071779	Identifier	BLTZ		1071385	1					
ANR	1071780	ExpressionStatement	jump -> flags |= IS_BIT16_COND	1793:4:58082:58110	1071385	14	True				
ANR	1071781	AssignmentExpression	jump -> flags |= IS_BIT16_COND		1071385	0		|=			
ANR	1071782	PtrMemberAccess	jump -> flags		1071385	0					
ANR	1071783	Identifier	jump		1071385	0					
ANR	1071784	Identifier	flags		1071385	1					
ANR	1071785	Identifier	IS_BIT16_COND		1071385	1					
ANR	1071786	BreakStatement	break ;	1794:4:58116:58121	1071385	15	True				
ANR	1071787	ExpressionStatement	src1 = src2	1796:3:58131:58142	1071385	2	True				
ANR	1071788	AssignmentExpression	src1 = src2		1071385	0		=			
ANR	1071789	Identifier	src1		1071385	0					
ANR	1071790	Identifier	src2		1071385	1					
ANR	1071791	ElseStatement	else		1071385	0					
ANR	1071792	CompoundStatement		60:7:1802:1802	1071385	0					
ANR	1071793	ExpressionStatement	RESOLVE_IMM1 ( )	1799:3:58160:58174	1071385	0	True				
ANR	1071794	CallExpression	RESOLVE_IMM1 ( )		1071385	0					
ANR	1071795	Callee	RESOLVE_IMM1		1071385	0					
ANR	1071796	Identifier	RESOLVE_IMM1		1071385	0					
ANR	1071797	ArgumentList			1071385	1					
ANR	1071798	SwitchStatement	switch ( type )		1071385	1					
ANR	1071799	Condition	type	1800:11:58187:58190	1071385	0	True				
ANR	1071800	Identifier	type		1071385	0					
ANR	1071801	CompoundStatement		62:17:1840:1840	1071385	1					
ANR	1071802	Label	case SLJIT_SIG_LESS :	1801:3:58198:58217	1071385	0	True				
ANR	1071803	Identifier	SLJIT_SIG_LESS		1071385	0					
ANR	1071804	ExpressionStatement	inst = BGEZ	1802:4:58223:58234	1071385	1	True				
ANR	1071805	AssignmentExpression	inst = BGEZ		1071385	0		=			
ANR	1071806	Identifier	inst		1071385	0					
ANR	1071807	Identifier	BGEZ		1071385	1					
ANR	1071808	ExpressionStatement	jump -> flags |= IS_BIT16_COND	1803:4:58240:58268	1071385	2	True				
ANR	1071809	AssignmentExpression	jump -> flags |= IS_BIT16_COND		1071385	0		|=			
ANR	1071810	PtrMemberAccess	jump -> flags		1071385	0					
ANR	1071811	Identifier	jump		1071385	0					
ANR	1071812	Identifier	flags		1071385	1					
ANR	1071813	Identifier	IS_BIT16_COND		1071385	1					
ANR	1071814	BreakStatement	break ;	1804:4:58274:58279	1071385	3	True				
ANR	1071815	Label	case SLJIT_SIG_GREATER_EQUAL :	1805:3:58284:58312	1071385	4	True				
ANR	1071816	Identifier	SLJIT_SIG_GREATER_EQUAL		1071385	0					
ANR	1071817	ExpressionStatement	inst = BLTZ	1806:4:58318:58329	1071385	5	True				
ANR	1071818	AssignmentExpression	inst = BLTZ		1071385	0		=			
ANR	1071819	Identifier	inst		1071385	0					
ANR	1071820	Identifier	BLTZ		1071385	1					
ANR	1071821	ExpressionStatement	jump -> flags |= IS_BIT16_COND	1807:4:58335:58363	1071385	6	True				
ANR	1071822	AssignmentExpression	jump -> flags |= IS_BIT16_COND		1071385	0		|=			
ANR	1071823	PtrMemberAccess	jump -> flags		1071385	0					
ANR	1071824	Identifier	jump		1071385	0					
ANR	1071825	Identifier	flags		1071385	1					
ANR	1071826	Identifier	IS_BIT16_COND		1071385	1					
ANR	1071827	BreakStatement	break ;	1808:4:58369:58374	1071385	7	True				
ANR	1071828	Label	case SLJIT_SIG_GREATER :	1809:3:58379:58401	1071385	8	True				
ANR	1071829	Identifier	SLJIT_SIG_GREATER		1071385	0					
ANR	1071830	ExpressionStatement	inst = BLEZ	1810:4:58407:58418	1071385	9	True				
ANR	1071831	AssignmentExpression	inst = BLEZ		1071385	0		=			
ANR	1071832	Identifier	inst		1071385	0					
ANR	1071833	Identifier	BLEZ		1071385	1					
ANR	1071834	ExpressionStatement	jump -> flags |= IS_BIT26_COND	1811:4:58424:58452	1071385	10	True				
ANR	1071835	AssignmentExpression	jump -> flags |= IS_BIT26_COND		1071385	0		|=			
ANR	1071836	PtrMemberAccess	jump -> flags		1071385	0					
ANR	1071837	Identifier	jump		1071385	0					
ANR	1071838	Identifier	flags		1071385	1					
ANR	1071839	Identifier	IS_BIT26_COND		1071385	1					
ANR	1071840	BreakStatement	break ;	1812:4:58458:58463	1071385	11	True				
ANR	1071841	Label	case SLJIT_SIG_LESS_EQUAL :	1813:3:58468:58493	1071385	12	True				
ANR	1071842	Identifier	SLJIT_SIG_LESS_EQUAL		1071385	0					
ANR	1071843	ExpressionStatement	inst = BGTZ	1814:4:58499:58510	1071385	13	True				
ANR	1071844	AssignmentExpression	inst = BGTZ		1071385	0		=			
ANR	1071845	Identifier	inst		1071385	0					
ANR	1071846	Identifier	BGTZ		1071385	1					
ANR	1071847	ExpressionStatement	jump -> flags |= IS_BIT26_COND	1815:4:58516:58544	1071385	14	True				
ANR	1071848	AssignmentExpression	jump -> flags |= IS_BIT26_COND		1071385	0		|=			
ANR	1071849	PtrMemberAccess	jump -> flags		1071385	0					
ANR	1071850	Identifier	jump		1071385	0					
ANR	1071851	Identifier	flags		1071385	1					
ANR	1071852	Identifier	IS_BIT26_COND		1071385	1					
ANR	1071853	BreakStatement	break ;	1816:4:58550:58555	1071385	15	True				
ANR	1071854	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , inst | S ( src1 ) | JUMP_LENGTH , UNMOVABLE_INS ) )"	1819:2:58568:58645	1071385	2	True				
ANR	1071855	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , inst | S ( src1 ) | JUMP_LENGTH , UNMOVABLE_INS ) )"		1071385	0					
ANR	1071856	Callee	PTR_FAIL_IF		1071385	0					
ANR	1071857	Identifier	PTR_FAIL_IF		1071385	0					
ANR	1071858	ArgumentList	"push_inst ( compiler , inst | S ( src1 ) | JUMP_LENGTH , UNMOVABLE_INS )"		1071385	1					
ANR	1071859	Argument	"push_inst ( compiler , inst | S ( src1 ) | JUMP_LENGTH , UNMOVABLE_INS )"		1071385	0					
ANR	1071860	CallExpression	"push_inst ( compiler , inst | S ( src1 ) | JUMP_LENGTH , UNMOVABLE_INS )"		1071385	0					
ANR	1071861	Callee	push_inst		1071385	0					
ANR	1071862	Identifier	push_inst		1071385	0					
ANR	1071863	ArgumentList	compiler		1071385	1					
ANR	1071864	Argument	compiler		1071385	0					
ANR	1071865	Identifier	compiler		1071385	0					
ANR	1071866	Argument	inst | S ( src1 ) | JUMP_LENGTH		1071385	1					
ANR	1071867	InclusiveOrExpression	inst | S ( src1 ) | JUMP_LENGTH		1071385	0		|			
ANR	1071868	Identifier	inst		1071385	0					
ANR	1071869	InclusiveOrExpression	S ( src1 ) | JUMP_LENGTH		1071385	1		|			
ANR	1071870	CallExpression	S ( src1 )		1071385	0					
ANR	1071871	Callee	S		1071385	0					
ANR	1071872	Identifier	S		1071385	0					
ANR	1071873	ArgumentList	src1		1071385	1					
ANR	1071874	Argument	src1		1071385	0					
ANR	1071875	Identifier	src1		1071385	0					
ANR	1071876	Identifier	JUMP_LENGTH		1071385	1					
ANR	1071877	Argument	UNMOVABLE_INS		1071385	2					
ANR	1071878	Identifier	UNMOVABLE_INS		1071385	0					
ANR	1071879	ElseStatement	else		1071385	0					
ANR	1071880	CompoundStatement		83:6:2303:2303	1071385	0					
ANR	1071881	IfStatement	if ( type == SLJIT_LESS || type == SLJIT_GREATER_EQUAL || type == SLJIT_SIG_LESS || type == SLJIT_SIG_GREATER_EQUAL )		1071385	0					
ANR	1071882	Condition	type == SLJIT_LESS || type == SLJIT_GREATER_EQUAL || type == SLJIT_SIG_LESS || type == SLJIT_SIG_GREATER_EQUAL	1822:6:58664:58773	1071385	0	True				
ANR	1071883	OrExpression	type == SLJIT_LESS || type == SLJIT_GREATER_EQUAL || type == SLJIT_SIG_LESS || type == SLJIT_SIG_GREATER_EQUAL		1071385	0		||			
ANR	1071884	EqualityExpression	type == SLJIT_LESS		1071385	0		==			
ANR	1071885	Identifier	type		1071385	0					
ANR	1071886	Identifier	SLJIT_LESS		1071385	1					
ANR	1071887	OrExpression	type == SLJIT_GREATER_EQUAL || type == SLJIT_SIG_LESS || type == SLJIT_SIG_GREATER_EQUAL		1071385	1		||			
ANR	1071888	EqualityExpression	type == SLJIT_GREATER_EQUAL		1071385	0		==			
ANR	1071889	Identifier	type		1071385	0					
ANR	1071890	Identifier	SLJIT_GREATER_EQUAL		1071385	1					
ANR	1071891	OrExpression	type == SLJIT_SIG_LESS || type == SLJIT_SIG_GREATER_EQUAL		1071385	1		||			
ANR	1071892	EqualityExpression	type == SLJIT_SIG_LESS		1071385	0		==			
ANR	1071893	Identifier	type		1071385	0					
ANR	1071894	Identifier	SLJIT_SIG_LESS		1071385	1					
ANR	1071895	EqualityExpression	type == SLJIT_SIG_GREATER_EQUAL		1071385	1		==			
ANR	1071896	Identifier	type		1071385	0					
ANR	1071897	Identifier	SLJIT_SIG_GREATER_EQUAL		1071385	1					
ANR	1071898	CompoundStatement		84:118:2423:2423	1071385	1					
ANR	1071899	ExpressionStatement	RESOLVE_IMM1 ( )	1823:3:58781:58795	1071385	0	True				
ANR	1071900	CallExpression	RESOLVE_IMM1 ( )		1071385	0					
ANR	1071901	Callee	RESOLVE_IMM1		1071385	0					
ANR	1071902	Identifier	RESOLVE_IMM1		1071385	0					
ANR	1071903	ArgumentList			1071385	1					
ANR	1071904	IfStatement	if ( ( src2 & SLJIT_IMM ) && src2w <= SIMM_MAX && src2w >= SIMM_MIN )		1071385	1					
ANR	1071905	Condition	( src2 & SLJIT_IMM ) && src2w <= SIMM_MAX && src2w >= SIMM_MIN	1824:7:58804:58863	1071385	0	True				
ANR	1071906	AndExpression	( src2 & SLJIT_IMM ) && src2w <= SIMM_MAX && src2w >= SIMM_MIN		1071385	0		&&			
ANR	1071907	BitAndExpression	src2 & SLJIT_IMM		1071385	0		&			
ANR	1071908	Identifier	src2		1071385	0					
ANR	1071909	Identifier	SLJIT_IMM		1071385	1					
ANR	1071910	AndExpression	src2w <= SIMM_MAX && src2w >= SIMM_MIN		1071385	1		&&			
ANR	1071911	RelationalExpression	src2w <= SIMM_MAX		1071385	0		<=			
ANR	1071912	Identifier	src2w		1071385	0					
ANR	1071913	Identifier	SIMM_MAX		1071385	1					
ANR	1071914	RelationalExpression	src2w >= SIMM_MIN		1071385	1		>=			
ANR	1071915	Identifier	src2w		1071385	0					
ANR	1071916	Identifier	SIMM_MIN		1071385	1					
ANR	1071917	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , ( type <= SLJIT_LESS_EQUAL ? SLTIU : SLTI ) | S ( src1 ) | T ( TMP_REG1 ) | IMM ( src2w ) , DR ( TMP_REG1 ) ) )"	1825:4:58870:58996	1071385	1	True				
ANR	1071918	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , ( type <= SLJIT_LESS_EQUAL ? SLTIU : SLTI ) | S ( src1 ) | T ( TMP_REG1 ) | IMM ( src2w ) , DR ( TMP_REG1 ) ) )"		1071385	0					
ANR	1071919	Callee	PTR_FAIL_IF		1071385	0					
ANR	1071920	Identifier	PTR_FAIL_IF		1071385	0					
ANR	1071921	ArgumentList	"push_inst ( compiler , ( type <= SLJIT_LESS_EQUAL ? SLTIU : SLTI ) | S ( src1 ) | T ( TMP_REG1 ) | IMM ( src2w ) , DR ( TMP_REG1 ) )"		1071385	1					
ANR	1071922	Argument	"push_inst ( compiler , ( type <= SLJIT_LESS_EQUAL ? SLTIU : SLTI ) | S ( src1 ) | T ( TMP_REG1 ) | IMM ( src2w ) , DR ( TMP_REG1 ) )"		1071385	0					
ANR	1071923	CallExpression	"push_inst ( compiler , ( type <= SLJIT_LESS_EQUAL ? SLTIU : SLTI ) | S ( src1 ) | T ( TMP_REG1 ) | IMM ( src2w ) , DR ( TMP_REG1 ) )"		1071385	0					
ANR	1071924	Callee	push_inst		1071385	0					
ANR	1071925	Identifier	push_inst		1071385	0					
ANR	1071926	ArgumentList	compiler		1071385	1					
ANR	1071927	Argument	compiler		1071385	0					
ANR	1071928	Identifier	compiler		1071385	0					
ANR	1071929	Argument	( type <= SLJIT_LESS_EQUAL ? SLTIU : SLTI ) | S ( src1 ) | T ( TMP_REG1 ) | IMM ( src2w )		1071385	1					
ANR	1071930	InclusiveOrExpression	( type <= SLJIT_LESS_EQUAL ? SLTIU : SLTI ) | S ( src1 ) | T ( TMP_REG1 ) | IMM ( src2w )		1071385	0		|			
ANR	1071931	ConditionalExpression	type <= SLJIT_LESS_EQUAL ? SLTIU : SLTI		1071385	0					
ANR	1071932	Condition	type <= SLJIT_LESS_EQUAL		1071385	0					
ANR	1071933	RelationalExpression	type <= SLJIT_LESS_EQUAL		1071385	0		<=			
ANR	1071934	Identifier	type		1071385	0					
ANR	1071935	Identifier	SLJIT_LESS_EQUAL		1071385	1					
ANR	1071936	Identifier	SLTIU		1071385	1					
ANR	1071937	Identifier	SLTI		1071385	2					
ANR	1071938	InclusiveOrExpression	S ( src1 ) | T ( TMP_REG1 ) | IMM ( src2w )		1071385	1		|			
ANR	1071939	CallExpression	S ( src1 )		1071385	0					
ANR	1071940	Callee	S		1071385	0					
ANR	1071941	Identifier	S		1071385	0					
ANR	1071942	ArgumentList	src1		1071385	1					
ANR	1071943	Argument	src1		1071385	0					
ANR	1071944	Identifier	src1		1071385	0					
ANR	1071945	InclusiveOrExpression	T ( TMP_REG1 ) | IMM ( src2w )		1071385	1		|			
ANR	1071946	CallExpression	T ( TMP_REG1 )		1071385	0					
ANR	1071947	Callee	T		1071385	0					
ANR	1071948	Identifier	T		1071385	0					
ANR	1071949	ArgumentList	TMP_REG1		1071385	1					
ANR	1071950	Argument	TMP_REG1		1071385	0					
ANR	1071951	Identifier	TMP_REG1		1071385	0					
ANR	1071952	CallExpression	IMM ( src2w )		1071385	1					
ANR	1071953	Callee	IMM		1071385	0					
ANR	1071954	Identifier	IMM		1071385	0					
ANR	1071955	ArgumentList	src2w		1071385	1					
ANR	1071956	Argument	src2w		1071385	0					
ANR	1071957	Identifier	src2w		1071385	0					
ANR	1071958	Argument	DR ( TMP_REG1 )		1071385	2					
ANR	1071959	CallExpression	DR ( TMP_REG1 )		1071385	0					
ANR	1071960	Callee	DR		1071385	0					
ANR	1071961	Identifier	DR		1071385	0					
ANR	1071962	ArgumentList	TMP_REG1		1071385	1					
ANR	1071963	Argument	TMP_REG1		1071385	0					
ANR	1071964	Identifier	TMP_REG1		1071385	0					
ANR	1071965	ElseStatement	else		1071385	0					
ANR	1071966	CompoundStatement		88:8:2653:2653	1071385	0					
ANR	1071967	ExpressionStatement	RESOLVE_IMM2 ( )	1827:4:59012:59026	1071385	0	True				
ANR	1071968	CallExpression	RESOLVE_IMM2 ( )		1071385	0					
ANR	1071969	Callee	RESOLVE_IMM2		1071385	0					
ANR	1071970	Identifier	RESOLVE_IMM2		1071385	0					
ANR	1071971	ArgumentList			1071385	1					
ANR	1071972	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , ( type <= SLJIT_LESS_EQUAL ? SLTU : SLT ) | S ( src1 ) | T ( src2 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) ) )"	1828:4:59032:59153	1071385	1	True				
ANR	1071973	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , ( type <= SLJIT_LESS_EQUAL ? SLTU : SLT ) | S ( src1 ) | T ( src2 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) ) )"		1071385	0					
ANR	1071974	Callee	PTR_FAIL_IF		1071385	0					
ANR	1071975	Identifier	PTR_FAIL_IF		1071385	0					
ANR	1071976	ArgumentList	"push_inst ( compiler , ( type <= SLJIT_LESS_EQUAL ? SLTU : SLT ) | S ( src1 ) | T ( src2 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) )"		1071385	1					
ANR	1071977	Argument	"push_inst ( compiler , ( type <= SLJIT_LESS_EQUAL ? SLTU : SLT ) | S ( src1 ) | T ( src2 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) )"		1071385	0					
ANR	1071978	CallExpression	"push_inst ( compiler , ( type <= SLJIT_LESS_EQUAL ? SLTU : SLT ) | S ( src1 ) | T ( src2 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) )"		1071385	0					
ANR	1071979	Callee	push_inst		1071385	0					
ANR	1071980	Identifier	push_inst		1071385	0					
ANR	1071981	ArgumentList	compiler		1071385	1					
ANR	1071982	Argument	compiler		1071385	0					
ANR	1071983	Identifier	compiler		1071385	0					
ANR	1071984	Argument	( type <= SLJIT_LESS_EQUAL ? SLTU : SLT ) | S ( src1 ) | T ( src2 ) | D ( TMP_REG1 )		1071385	1					
ANR	1071985	InclusiveOrExpression	( type <= SLJIT_LESS_EQUAL ? SLTU : SLT ) | S ( src1 ) | T ( src2 ) | D ( TMP_REG1 )		1071385	0		|			
ANR	1071986	ConditionalExpression	type <= SLJIT_LESS_EQUAL ? SLTU : SLT		1071385	0					
ANR	1071987	Condition	type <= SLJIT_LESS_EQUAL		1071385	0					
ANR	1071988	RelationalExpression	type <= SLJIT_LESS_EQUAL		1071385	0		<=			
ANR	1071989	Identifier	type		1071385	0					
ANR	1071990	Identifier	SLJIT_LESS_EQUAL		1071385	1					
ANR	1071991	Identifier	SLTU		1071385	1					
ANR	1071992	Identifier	SLT		1071385	2					
ANR	1071993	InclusiveOrExpression	S ( src1 ) | T ( src2 ) | D ( TMP_REG1 )		1071385	1		|			
ANR	1071994	CallExpression	S ( src1 )		1071385	0					
ANR	1071995	Callee	S		1071385	0					
ANR	1071996	Identifier	S		1071385	0					
ANR	1071997	ArgumentList	src1		1071385	1					
ANR	1071998	Argument	src1		1071385	0					
ANR	1071999	Identifier	src1		1071385	0					
ANR	1072000	InclusiveOrExpression	T ( src2 ) | D ( TMP_REG1 )		1071385	1		|			
ANR	1072001	CallExpression	T ( src2 )		1071385	0					
ANR	1072002	Callee	T		1071385	0					
ANR	1072003	Identifier	T		1071385	0					
ANR	1072004	ArgumentList	src2		1071385	1					
ANR	1072005	Argument	src2		1071385	0					
ANR	1072006	Identifier	src2		1071385	0					
ANR	1072007	CallExpression	D ( TMP_REG1 )		1071385	1					
ANR	1072008	Callee	D		1071385	0					
ANR	1072009	Identifier	D		1071385	0					
ANR	1072010	ArgumentList	TMP_REG1		1071385	1					
ANR	1072011	Argument	TMP_REG1		1071385	0					
ANR	1072012	Identifier	TMP_REG1		1071385	0					
ANR	1072013	Argument	DR ( TMP_REG1 )		1071385	2					
ANR	1072014	CallExpression	DR ( TMP_REG1 )		1071385	0					
ANR	1072015	Callee	DR		1071385	0					
ANR	1072016	Identifier	DR		1071385	0					
ANR	1072017	ArgumentList	TMP_REG1		1071385	1					
ANR	1072018	Argument	TMP_REG1		1071385	0					
ANR	1072019	Identifier	TMP_REG1		1071385	0					
ANR	1072020	ExpressionStatement	type = ( type == SLJIT_LESS || type == SLJIT_SIG_LESS ) ? SLJIT_NOT_EQUAL : SLJIT_EQUAL	1830:3:59163:59248	1071385	2	True				
ANR	1072021	AssignmentExpression	type = ( type == SLJIT_LESS || type == SLJIT_SIG_LESS ) ? SLJIT_NOT_EQUAL : SLJIT_EQUAL		1071385	0		=			
ANR	1072022	Identifier	type		1071385	0					
ANR	1072023	ConditionalExpression	( type == SLJIT_LESS || type == SLJIT_SIG_LESS ) ? SLJIT_NOT_EQUAL : SLJIT_EQUAL		1071385	1					
ANR	1072024	Condition	type == SLJIT_LESS || type == SLJIT_SIG_LESS		1071385	0					
ANR	1072025	OrExpression	type == SLJIT_LESS || type == SLJIT_SIG_LESS		1071385	0		||			
ANR	1072026	EqualityExpression	type == SLJIT_LESS		1071385	0		==			
ANR	1072027	Identifier	type		1071385	0					
ANR	1072028	Identifier	SLJIT_LESS		1071385	1					
ANR	1072029	EqualityExpression	type == SLJIT_SIG_LESS		1071385	1		==			
ANR	1072030	Identifier	type		1071385	0					
ANR	1072031	Identifier	SLJIT_SIG_LESS		1071385	1					
ANR	1072032	Identifier	SLJIT_NOT_EQUAL		1071385	1					
ANR	1072033	Identifier	SLJIT_EQUAL		1071385	2					
ANR	1072034	ElseStatement	else		1071385	0					
ANR	1072035	CompoundStatement		94:7:2908:2908	1071385	0					
ANR	1072036	ExpressionStatement	RESOLVE_IMM2 ( )	1833:3:59266:59280	1071385	0	True				
ANR	1072037	CallExpression	RESOLVE_IMM2 ( )		1071385	0					
ANR	1072038	Callee	RESOLVE_IMM2		1071385	0					
ANR	1072039	Identifier	RESOLVE_IMM2		1071385	0					
ANR	1072040	ArgumentList			1071385	1					
ANR	1072041	IfStatement	if ( ( src1 & SLJIT_IMM ) && src1w <= SIMM_MAX && src1w >= SIMM_MIN )		1071385	1					
ANR	1072042	Condition	( src1 & SLJIT_IMM ) && src1w <= SIMM_MAX && src1w >= SIMM_MIN	1834:7:59289:59348	1071385	0	True				
ANR	1072043	AndExpression	( src1 & SLJIT_IMM ) && src1w <= SIMM_MAX && src1w >= SIMM_MIN		1071385	0		&&			
ANR	1072044	BitAndExpression	src1 & SLJIT_IMM		1071385	0		&			
ANR	1072045	Identifier	src1		1071385	0					
ANR	1072046	Identifier	SLJIT_IMM		1071385	1					
ANR	1072047	AndExpression	src1w <= SIMM_MAX && src1w >= SIMM_MIN		1071385	1		&&			
ANR	1072048	RelationalExpression	src1w <= SIMM_MAX		1071385	0		<=			
ANR	1072049	Identifier	src1w		1071385	0					
ANR	1072050	Identifier	SIMM_MAX		1071385	1					
ANR	1072051	RelationalExpression	src1w >= SIMM_MIN		1071385	1		>=			
ANR	1072052	Identifier	src1w		1071385	0					
ANR	1072053	Identifier	SIMM_MIN		1071385	1					
ANR	1072054	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , ( type <= SLJIT_LESS_EQUAL ? SLTIU : SLTI ) | S ( src2 ) | T ( TMP_REG1 ) | IMM ( src1w ) , DR ( TMP_REG1 ) ) )"	1835:4:59355:59481	1071385	1	True				
ANR	1072055	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , ( type <= SLJIT_LESS_EQUAL ? SLTIU : SLTI ) | S ( src2 ) | T ( TMP_REG1 ) | IMM ( src1w ) , DR ( TMP_REG1 ) ) )"		1071385	0					
ANR	1072056	Callee	PTR_FAIL_IF		1071385	0					
ANR	1072057	Identifier	PTR_FAIL_IF		1071385	0					
ANR	1072058	ArgumentList	"push_inst ( compiler , ( type <= SLJIT_LESS_EQUAL ? SLTIU : SLTI ) | S ( src2 ) | T ( TMP_REG1 ) | IMM ( src1w ) , DR ( TMP_REG1 ) )"		1071385	1					
ANR	1072059	Argument	"push_inst ( compiler , ( type <= SLJIT_LESS_EQUAL ? SLTIU : SLTI ) | S ( src2 ) | T ( TMP_REG1 ) | IMM ( src1w ) , DR ( TMP_REG1 ) )"		1071385	0					
ANR	1072060	CallExpression	"push_inst ( compiler , ( type <= SLJIT_LESS_EQUAL ? SLTIU : SLTI ) | S ( src2 ) | T ( TMP_REG1 ) | IMM ( src1w ) , DR ( TMP_REG1 ) )"		1071385	0					
ANR	1072061	Callee	push_inst		1071385	0					
ANR	1072062	Identifier	push_inst		1071385	0					
ANR	1072063	ArgumentList	compiler		1071385	1					
ANR	1072064	Argument	compiler		1071385	0					
ANR	1072065	Identifier	compiler		1071385	0					
ANR	1072066	Argument	( type <= SLJIT_LESS_EQUAL ? SLTIU : SLTI ) | S ( src2 ) | T ( TMP_REG1 ) | IMM ( src1w )		1071385	1					
ANR	1072067	InclusiveOrExpression	( type <= SLJIT_LESS_EQUAL ? SLTIU : SLTI ) | S ( src2 ) | T ( TMP_REG1 ) | IMM ( src1w )		1071385	0		|			
ANR	1072068	ConditionalExpression	type <= SLJIT_LESS_EQUAL ? SLTIU : SLTI		1071385	0					
ANR	1072069	Condition	type <= SLJIT_LESS_EQUAL		1071385	0					
ANR	1072070	RelationalExpression	type <= SLJIT_LESS_EQUAL		1071385	0		<=			
ANR	1072071	Identifier	type		1071385	0					
ANR	1072072	Identifier	SLJIT_LESS_EQUAL		1071385	1					
ANR	1072073	Identifier	SLTIU		1071385	1					
ANR	1072074	Identifier	SLTI		1071385	2					
ANR	1072075	InclusiveOrExpression	S ( src2 ) | T ( TMP_REG1 ) | IMM ( src1w )		1071385	1		|			
ANR	1072076	CallExpression	S ( src2 )		1071385	0					
ANR	1072077	Callee	S		1071385	0					
ANR	1072078	Identifier	S		1071385	0					
ANR	1072079	ArgumentList	src2		1071385	1					
ANR	1072080	Argument	src2		1071385	0					
ANR	1072081	Identifier	src2		1071385	0					
ANR	1072082	InclusiveOrExpression	T ( TMP_REG1 ) | IMM ( src1w )		1071385	1		|			
ANR	1072083	CallExpression	T ( TMP_REG1 )		1071385	0					
ANR	1072084	Callee	T		1071385	0					
ANR	1072085	Identifier	T		1071385	0					
ANR	1072086	ArgumentList	TMP_REG1		1071385	1					
ANR	1072087	Argument	TMP_REG1		1071385	0					
ANR	1072088	Identifier	TMP_REG1		1071385	0					
ANR	1072089	CallExpression	IMM ( src1w )		1071385	1					
ANR	1072090	Callee	IMM		1071385	0					
ANR	1072091	Identifier	IMM		1071385	0					
ANR	1072092	ArgumentList	src1w		1071385	1					
ANR	1072093	Argument	src1w		1071385	0					
ANR	1072094	Identifier	src1w		1071385	0					
ANR	1072095	Argument	DR ( TMP_REG1 )		1071385	2					
ANR	1072096	CallExpression	DR ( TMP_REG1 )		1071385	0					
ANR	1072097	Callee	DR		1071385	0					
ANR	1072098	Identifier	DR		1071385	0					
ANR	1072099	ArgumentList	TMP_REG1		1071385	1					
ANR	1072100	Argument	TMP_REG1		1071385	0					
ANR	1072101	Identifier	TMP_REG1		1071385	0					
ANR	1072102	ElseStatement	else		1071385	0					
ANR	1072103	CompoundStatement		98:8:3138:3138	1071385	0					
ANR	1072104	ExpressionStatement	RESOLVE_IMM1 ( )	1837:4:59497:59511	1071385	0	True				
ANR	1072105	CallExpression	RESOLVE_IMM1 ( )		1071385	0					
ANR	1072106	Callee	RESOLVE_IMM1		1071385	0					
ANR	1072107	Identifier	RESOLVE_IMM1		1071385	0					
ANR	1072108	ArgumentList			1071385	1					
ANR	1072109	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , ( type <= SLJIT_LESS_EQUAL ? SLTU : SLT ) | S ( src2 ) | T ( src1 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) ) )"	1838:4:59517:59638	1071385	1	True				
ANR	1072110	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , ( type <= SLJIT_LESS_EQUAL ? SLTU : SLT ) | S ( src2 ) | T ( src1 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) ) )"		1071385	0					
ANR	1072111	Callee	PTR_FAIL_IF		1071385	0					
ANR	1072112	Identifier	PTR_FAIL_IF		1071385	0					
ANR	1072113	ArgumentList	"push_inst ( compiler , ( type <= SLJIT_LESS_EQUAL ? SLTU : SLT ) | S ( src2 ) | T ( src1 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) )"		1071385	1					
ANR	1072114	Argument	"push_inst ( compiler , ( type <= SLJIT_LESS_EQUAL ? SLTU : SLT ) | S ( src2 ) | T ( src1 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) )"		1071385	0					
ANR	1072115	CallExpression	"push_inst ( compiler , ( type <= SLJIT_LESS_EQUAL ? SLTU : SLT ) | S ( src2 ) | T ( src1 ) | D ( TMP_REG1 ) , DR ( TMP_REG1 ) )"		1071385	0					
ANR	1072116	Callee	push_inst		1071385	0					
ANR	1072117	Identifier	push_inst		1071385	0					
ANR	1072118	ArgumentList	compiler		1071385	1					
ANR	1072119	Argument	compiler		1071385	0					
ANR	1072120	Identifier	compiler		1071385	0					
ANR	1072121	Argument	( type <= SLJIT_LESS_EQUAL ? SLTU : SLT ) | S ( src2 ) | T ( src1 ) | D ( TMP_REG1 )		1071385	1					
ANR	1072122	InclusiveOrExpression	( type <= SLJIT_LESS_EQUAL ? SLTU : SLT ) | S ( src2 ) | T ( src1 ) | D ( TMP_REG1 )		1071385	0		|			
ANR	1072123	ConditionalExpression	type <= SLJIT_LESS_EQUAL ? SLTU : SLT		1071385	0					
ANR	1072124	Condition	type <= SLJIT_LESS_EQUAL		1071385	0					
ANR	1072125	RelationalExpression	type <= SLJIT_LESS_EQUAL		1071385	0		<=			
ANR	1072126	Identifier	type		1071385	0					
ANR	1072127	Identifier	SLJIT_LESS_EQUAL		1071385	1					
ANR	1072128	Identifier	SLTU		1071385	1					
ANR	1072129	Identifier	SLT		1071385	2					
ANR	1072130	InclusiveOrExpression	S ( src2 ) | T ( src1 ) | D ( TMP_REG1 )		1071385	1		|			
ANR	1072131	CallExpression	S ( src2 )		1071385	0					
ANR	1072132	Callee	S		1071385	0					
ANR	1072133	Identifier	S		1071385	0					
ANR	1072134	ArgumentList	src2		1071385	1					
ANR	1072135	Argument	src2		1071385	0					
ANR	1072136	Identifier	src2		1071385	0					
ANR	1072137	InclusiveOrExpression	T ( src1 ) | D ( TMP_REG1 )		1071385	1		|			
ANR	1072138	CallExpression	T ( src1 )		1071385	0					
ANR	1072139	Callee	T		1071385	0					
ANR	1072140	Identifier	T		1071385	0					
ANR	1072141	ArgumentList	src1		1071385	1					
ANR	1072142	Argument	src1		1071385	0					
ANR	1072143	Identifier	src1		1071385	0					
ANR	1072144	CallExpression	D ( TMP_REG1 )		1071385	1					
ANR	1072145	Callee	D		1071385	0					
ANR	1072146	Identifier	D		1071385	0					
ANR	1072147	ArgumentList	TMP_REG1		1071385	1					
ANR	1072148	Argument	TMP_REG1		1071385	0					
ANR	1072149	Identifier	TMP_REG1		1071385	0					
ANR	1072150	Argument	DR ( TMP_REG1 )		1071385	2					
ANR	1072151	CallExpression	DR ( TMP_REG1 )		1071385	0					
ANR	1072152	Callee	DR		1071385	0					
ANR	1072153	Identifier	DR		1071385	0					
ANR	1072154	ArgumentList	TMP_REG1		1071385	1					
ANR	1072155	Argument	TMP_REG1		1071385	0					
ANR	1072156	Identifier	TMP_REG1		1071385	0					
ANR	1072157	ExpressionStatement	type = ( type == SLJIT_GREATER || type == SLJIT_SIG_GREATER ) ? SLJIT_NOT_EQUAL : SLJIT_EQUAL	1840:3:59648:59739	1071385	2	True				
ANR	1072158	AssignmentExpression	type = ( type == SLJIT_GREATER || type == SLJIT_SIG_GREATER ) ? SLJIT_NOT_EQUAL : SLJIT_EQUAL		1071385	0		=			
ANR	1072159	Identifier	type		1071385	0					
ANR	1072160	ConditionalExpression	( type == SLJIT_GREATER || type == SLJIT_SIG_GREATER ) ? SLJIT_NOT_EQUAL : SLJIT_EQUAL		1071385	1					
ANR	1072161	Condition	type == SLJIT_GREATER || type == SLJIT_SIG_GREATER		1071385	0					
ANR	1072162	OrExpression	type == SLJIT_GREATER || type == SLJIT_SIG_GREATER		1071385	0		||			
ANR	1072163	EqualityExpression	type == SLJIT_GREATER		1071385	0		==			
ANR	1072164	Identifier	type		1071385	0					
ANR	1072165	Identifier	SLJIT_GREATER		1071385	1					
ANR	1072166	EqualityExpression	type == SLJIT_SIG_GREATER		1071385	1		==			
ANR	1072167	Identifier	type		1071385	0					
ANR	1072168	Identifier	SLJIT_SIG_GREATER		1071385	1					
ANR	1072169	Identifier	SLJIT_NOT_EQUAL		1071385	1					
ANR	1072170	Identifier	SLJIT_EQUAL		1071385	2					
ANR	1072171	ExpressionStatement	jump -> flags |= IS_BIT26_COND	1843:2:59748:59776	1071385	1	True				
ANR	1072172	AssignmentExpression	jump -> flags |= IS_BIT26_COND		1071385	0		|=			
ANR	1072173	PtrMemberAccess	jump -> flags		1071385	0					
ANR	1072174	Identifier	jump		1071385	0					
ANR	1072175	Identifier	flags		1071385	1					
ANR	1072176	Identifier	IS_BIT26_COND		1071385	1					
ANR	1072177	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , ( type == SLJIT_EQUAL ? BNE : BEQ ) | S ( TMP_REG1 ) | TA ( 0 ) | JUMP_LENGTH , UNMOVABLE_INS ) )"	1844:2:59780:59898	1071385	2	True				
ANR	1072178	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , ( type == SLJIT_EQUAL ? BNE : BEQ ) | S ( TMP_REG1 ) | TA ( 0 ) | JUMP_LENGTH , UNMOVABLE_INS ) )"		1071385	0					
ANR	1072179	Callee	PTR_FAIL_IF		1071385	0					
ANR	1072180	Identifier	PTR_FAIL_IF		1071385	0					
ANR	1072181	ArgumentList	"push_inst ( compiler , ( type == SLJIT_EQUAL ? BNE : BEQ ) | S ( TMP_REG1 ) | TA ( 0 ) | JUMP_LENGTH , UNMOVABLE_INS )"		1071385	1					
ANR	1072182	Argument	"push_inst ( compiler , ( type == SLJIT_EQUAL ? BNE : BEQ ) | S ( TMP_REG1 ) | TA ( 0 ) | JUMP_LENGTH , UNMOVABLE_INS )"		1071385	0					
ANR	1072183	CallExpression	"push_inst ( compiler , ( type == SLJIT_EQUAL ? BNE : BEQ ) | S ( TMP_REG1 ) | TA ( 0 ) | JUMP_LENGTH , UNMOVABLE_INS )"		1071385	0					
ANR	1072184	Callee	push_inst		1071385	0					
ANR	1072185	Identifier	push_inst		1071385	0					
ANR	1072186	ArgumentList	compiler		1071385	1					
ANR	1072187	Argument	compiler		1071385	0					
ANR	1072188	Identifier	compiler		1071385	0					
ANR	1072189	Argument	( type == SLJIT_EQUAL ? BNE : BEQ ) | S ( TMP_REG1 ) | TA ( 0 ) | JUMP_LENGTH		1071385	1					
ANR	1072190	InclusiveOrExpression	( type == SLJIT_EQUAL ? BNE : BEQ ) | S ( TMP_REG1 ) | TA ( 0 ) | JUMP_LENGTH		1071385	0		|			
ANR	1072191	ConditionalExpression	type == SLJIT_EQUAL ? BNE : BEQ		1071385	0					
ANR	1072192	Condition	type == SLJIT_EQUAL		1071385	0					
ANR	1072193	EqualityExpression	type == SLJIT_EQUAL		1071385	0		==			
ANR	1072194	Identifier	type		1071385	0					
ANR	1072195	Identifier	SLJIT_EQUAL		1071385	1					
ANR	1072196	Identifier	BNE		1071385	1					
ANR	1072197	Identifier	BEQ		1071385	2					
ANR	1072198	InclusiveOrExpression	S ( TMP_REG1 ) | TA ( 0 ) | JUMP_LENGTH		1071385	1		|			
ANR	1072199	CallExpression	S ( TMP_REG1 )		1071385	0					
ANR	1072200	Callee	S		1071385	0					
ANR	1072201	Identifier	S		1071385	0					
ANR	1072202	ArgumentList	TMP_REG1		1071385	1					
ANR	1072203	Argument	TMP_REG1		1071385	0					
ANR	1072204	Identifier	TMP_REG1		1071385	0					
ANR	1072205	InclusiveOrExpression	TA ( 0 ) | JUMP_LENGTH		1071385	1		|			
ANR	1072206	CallExpression	TA ( 0 )		1071385	0					
ANR	1072207	Callee	TA		1071385	0					
ANR	1072208	Identifier	TA		1071385	0					
ANR	1072209	ArgumentList	0		1071385	1					
ANR	1072210	Argument	0		1071385	0					
ANR	1072211	PrimaryExpression	0		1071385	0					
ANR	1072212	Identifier	JUMP_LENGTH		1071385	1					
ANR	1072213	Argument	UNMOVABLE_INS		1071385	2					
ANR	1072214	Identifier	UNMOVABLE_INS		1071385	0					
ANR	1072215	ExpressionStatement	"PTR_FAIL_IF ( emit_const ( compiler , TMP_REG2 , 0 ) )"	1847:1:59905:59951	1071385	17	True				
ANR	1072216	CallExpression	"PTR_FAIL_IF ( emit_const ( compiler , TMP_REG2 , 0 ) )"		1071385	0					
ANR	1072217	Callee	PTR_FAIL_IF		1071385	0					
ANR	1072218	Identifier	PTR_FAIL_IF		1071385	0					
ANR	1072219	ArgumentList	"emit_const ( compiler , TMP_REG2 , 0 )"		1071385	1					
ANR	1072220	Argument	"emit_const ( compiler , TMP_REG2 , 0 )"		1071385	0					
ANR	1072221	CallExpression	"emit_const ( compiler , TMP_REG2 , 0 )"		1071385	0					
ANR	1072222	Callee	emit_const		1071385	0					
ANR	1072223	Identifier	emit_const		1071385	0					
ANR	1072224	ArgumentList	compiler		1071385	1					
ANR	1072225	Argument	compiler		1071385	0					
ANR	1072226	Identifier	compiler		1071385	0					
ANR	1072227	Argument	TMP_REG2		1071385	1					
ANR	1072228	Identifier	TMP_REG2		1071385	0					
ANR	1072229	Argument	0		1071385	2					
ANR	1072230	PrimaryExpression	0		1071385	0					
ANR	1072231	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , JR | S ( TMP_REG2 ) , UNMOVABLE_INS ) )"	1848:1:59954:60019	1071385	18	True				
ANR	1072232	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , JR | S ( TMP_REG2 ) , UNMOVABLE_INS ) )"		1071385	0					
ANR	1072233	Callee	PTR_FAIL_IF		1071385	0					
ANR	1072234	Identifier	PTR_FAIL_IF		1071385	0					
ANR	1072235	ArgumentList	"push_inst ( compiler , JR | S ( TMP_REG2 ) , UNMOVABLE_INS )"		1071385	1					
ANR	1072236	Argument	"push_inst ( compiler , JR | S ( TMP_REG2 ) , UNMOVABLE_INS )"		1071385	0					
ANR	1072237	CallExpression	"push_inst ( compiler , JR | S ( TMP_REG2 ) , UNMOVABLE_INS )"		1071385	0					
ANR	1072238	Callee	push_inst		1071385	0					
ANR	1072239	Identifier	push_inst		1071385	0					
ANR	1072240	ArgumentList	compiler		1071385	1					
ANR	1072241	Argument	compiler		1071385	0					
ANR	1072242	Identifier	compiler		1071385	0					
ANR	1072243	Argument	JR | S ( TMP_REG2 )		1071385	1					
ANR	1072244	InclusiveOrExpression	JR | S ( TMP_REG2 )		1071385	0		|			
ANR	1072245	Identifier	JR		1071385	0					
ANR	1072246	CallExpression	S ( TMP_REG2 )		1071385	1					
ANR	1072247	Callee	S		1071385	0					
ANR	1072248	Identifier	S		1071385	0					
ANR	1072249	ArgumentList	TMP_REG2		1071385	1					
ANR	1072250	Argument	TMP_REG2		1071385	0					
ANR	1072251	Identifier	TMP_REG2		1071385	0					
ANR	1072252	Argument	UNMOVABLE_INS		1071385	2					
ANR	1072253	Identifier	UNMOVABLE_INS		1071385	0					
ANR	1072254	ExpressionStatement	jump -> addr = compiler -> size	1849:1:60022:60049	1071385	19	True				
ANR	1072255	AssignmentExpression	jump -> addr = compiler -> size		1071385	0		=			
ANR	1072256	PtrMemberAccess	jump -> addr		1071385	0					
ANR	1072257	Identifier	jump		1071385	0					
ANR	1072258	Identifier	addr		1071385	1					
ANR	1072259	PtrMemberAccess	compiler -> size		1071385	1					
ANR	1072260	Identifier	compiler		1071385	0					
ANR	1072261	Identifier	size		1071385	1					
ANR	1072262	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , NOP , UNMOVABLE_INS ) )"	1850:1:60052:60104	1071385	20	True				
ANR	1072263	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , NOP , UNMOVABLE_INS ) )"		1071385	0					
ANR	1072264	Callee	PTR_FAIL_IF		1071385	0					
ANR	1072265	Identifier	PTR_FAIL_IF		1071385	0					
ANR	1072266	ArgumentList	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1071385	1					
ANR	1072267	Argument	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1071385	0					
ANR	1072268	CallExpression	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1071385	0					
ANR	1072269	Callee	push_inst		1071385	0					
ANR	1072270	Identifier	push_inst		1071385	0					
ANR	1072271	ArgumentList	compiler		1071385	1					
ANR	1072272	Argument	compiler		1071385	0					
ANR	1072273	Identifier	compiler		1071385	0					
ANR	1072274	Argument	NOP		1071385	1					
ANR	1072275	Identifier	NOP		1071385	0					
ANR	1072276	Argument	UNMOVABLE_INS		1071385	2					
ANR	1072277	Identifier	UNMOVABLE_INS		1071385	0					
ANR	1072278	ReturnStatement	return jump ;	1851:1:60107:60118	1071385	21	True				
ANR	1072279	Identifier	jump		1071385	0					
ANR	1072280	ReturnType	struct sljit_jump *		1071385	1					
ANR	1072281	Identifier	sljit_emit_cmp		1071385	2					
ANR	1072282	ParameterList	"struct sljit_compiler * compiler , sljit_si type , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1071385	3					
ANR	1072283	Parameter	struct sljit_compiler * compiler	1736:59:56240:56270	1071385	0	True				
ANR	1072284	ParameterType	struct sljit_compiler *		1071385	0					
ANR	1072285	Identifier	compiler		1071385	1					
ANR	1072286	Parameter	sljit_si type	1736:92:56273:56285	1071385	1	True				
ANR	1072287	ParameterType	sljit_si		1071385	0					
ANR	1072288	Identifier	type		1071385	1					
ANR	1072289	Parameter	sljit_si src1	1737:1:56289:56301	1071385	2	True				
ANR	1072290	ParameterType	sljit_si		1071385	0					
ANR	1072291	Identifier	src1		1071385	1					
ANR	1072292	Parameter	sljit_sw src1w	1737:16:56304:56317	1071385	3	True				
ANR	1072293	ParameterType	sljit_sw		1071385	0					
ANR	1072294	Identifier	src1w		1071385	1					
ANR	1072295	Parameter	sljit_si src2	1738:1:56321:56333	1071385	4	True				
ANR	1072296	ParameterType	sljit_si		1071385	0					
ANR	1072297	Identifier	src2		1071385	1					
ANR	1072298	Parameter	sljit_sw src2w	1738:16:56336:56349	1071385	5	True				
ANR	1072299	ParameterType	sljit_sw		1071385	0					
ANR	1072300	Identifier	src2w		1071385	1					
ANR	1072301	CFGEntryNode	ENTRY		1071385		True				
ANR	1072302	CFGExitNode	EXIT		1071385		True				
ANR	1072303	Symbol	TMP_REG2		1071385						
ANR	1072304	Symbol	TMP_REG1		1071385						
ANR	1072305	Symbol	SLJIT_MEM		1071385						
ANR	1072306	Symbol	* compiler		1071385						
ANR	1072307	Symbol	type		1071385						
ANR	1072308	Symbol	SIMM_MAX		1071385						
ANR	1072309	Symbol	DR		1071385						
ANR	1072310	Symbol	SLJIT_IMM		1071385						
ANR	1072311	Symbol	BGTZ		1071385						
ANR	1072312	Symbol	SLJIT_LESS_EQUAL		1071385						
ANR	1072313	Symbol	JUMP_LENGTH		1071385						
ANR	1072314	Symbol	INT_DATA		1071385						
ANR	1072315	Symbol	SLJIT_EQUAL		1071385						
ANR	1072316	Symbol	SLT		1071385						
ANR	1072317	Symbol	IS_BIT16_COND		1071385						
ANR	1072318	Symbol	SIMM_MIN		1071385						
ANR	1072319	Symbol	jump		1071385						
ANR	1072320	Symbol	SLJIT_SIG_GREATER_EQUAL		1071385						
ANR	1072321	Symbol	IS_MOVABLE		1071385						
ANR	1072322	Symbol	BGEZ		1071385						
ANR	1072323	Symbol	compiler -> cache_arg		1071385						
ANR	1072324	Symbol	emit_op_mem2		1071385						
ANR	1072325	Symbol	SLTI		1071385						
ANR	1072326	Symbol	IMM		1071385						
ANR	1072327	Symbol	jump -> addr		1071385						
ANR	1072328	Symbol	NOP		1071385						
ANR	1072329	Symbol	SLTIU		1071385						
ANR	1072330	Symbol	SLJIT_NOT_EQUAL		1071385						
ANR	1072331	Symbol	compiler -> delay_slot		1071385						
ANR	1072332	Symbol	SLTU		1071385						
ANR	1072333	Symbol	compiler -> cache_argw		1071385						
ANR	1072334	Symbol	SLJIT_SIG_GREATER		1071385						
ANR	1072335	Symbol	src1w		1071385						
ANR	1072336	Symbol	LOAD_DATA		1071385						
ANR	1072337	Symbol	* jump		1071385						
ANR	1072338	Symbol	D		1071385						
ANR	1072339	Symbol	IS_BIT26_COND		1071385						
ANR	1072340	Symbol	SLJIT_SIG_LESS		1071385						
ANR	1072341	Symbol	flags		1071385						
ANR	1072342	Symbol	jump -> flags		1071385						
ANR	1072343	Symbol	JR		1071385						
ANR	1072344	Symbol	check_sljit_emit_cmp		1071385						
ANR	1072345	Symbol	BLTZ		1071385						
ANR	1072346	Symbol	S		1071385						
ANR	1072347	Symbol	T		1071385						
ANR	1072348	Symbol	SLJIT_REWRITABLE_JUMP		1071385						
ANR	1072349	Symbol	compiler		1071385						
ANR	1072350	Symbol	WORD_DATA		1071385						
ANR	1072351	Symbol	src2w		1071385						
ANR	1072352	Symbol	BLEZ		1071385						
ANR	1072353	Symbol	push_inst		1071385						
ANR	1072354	Symbol	SLJIT_INT_OP		1071385						
ANR	1072355	Symbol	UNMOVABLE_INS		1071385						
ANR	1072356	Symbol	SLJIT_GREATER_EQUAL		1071385						
ANR	1072357	Symbol	ensure_abuf		1071385						
ANR	1072358	Symbol	SLJIT_GREATER		1071385						
ANR	1072359	Symbol	TA		1071385						
ANR	1072360	Symbol	BEQ		1071385						
ANR	1072361	Symbol	SLJIT_LESS		1071385						
ANR	1072362	Symbol	compiler -> size		1071385						
ANR	1072363	Symbol	inst		1071385						
ANR	1072364	Symbol	src1		1071385						
ANR	1072365	Symbol	BNE		1071385						
ANR	1072366	Symbol	emit_const		1071385						
ANR	1072367	Symbol	src2		1071385						
ANR	1072368	Symbol	MOVABLE_INS		1071385						
ANR	1072369	Function	sljit_emit_fcmp	1857:25:60189:62133							
ANR	1072370	FunctionDef	"sljit_emit_fcmp (struct sljit_compiler * compiler , sljit_si type , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1072369	0					
ANR	1072371	CompoundStatement		1860:0:60336:62133	1072369	0					
ANR	1072372	IdentifierDeclStatement	struct sljit_jump * jump ;	1861:1:60339:60362	1072369	0	True				
ANR	1072373	IdentifierDecl	* jump		1072369	0					
ANR	1072374	IdentifierDeclType	struct sljit_jump *		1072369	0					
ANR	1072375	Identifier	jump		1072369	1					
ANR	1072376	IdentifierDeclStatement	sljit_ins inst ;	1862:1:60365:60379	1072369	1	True				
ANR	1072377	IdentifierDecl	inst		1072369	0					
ANR	1072378	IdentifierDeclType	sljit_ins		1072369	0					
ANR	1072379	Identifier	inst		1072369	1					
ANR	1072380	IdentifierDeclStatement	sljit_si if_true ;	1863:1:60382:60398	1072369	2	True				
ANR	1072381	IdentifierDecl	if_true		1072369	0					
ANR	1072382	IdentifierDeclType	sljit_si		1072369	0					
ANR	1072383	Identifier	if_true		1072369	1					
ANR	1072384	ExpressionStatement	CHECK_ERROR_PTR ( )	1865:1:60402:60419	1072369	3	True				
ANR	1072385	CallExpression	CHECK_ERROR_PTR ( )		1072369	0					
ANR	1072386	Callee	CHECK_ERROR_PTR		1072369	0					
ANR	1072387	Identifier	CHECK_ERROR_PTR		1072369	0					
ANR	1072388	ArgumentList			1072369	1					
ANR	1072389	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_fcmp ( compiler , type , src1 , src1w , src2 , src2w ) )"	1866:1:60422:60496	1072369	4	True				
ANR	1072390	CallExpression	"CHECK_PTR ( check_sljit_emit_fcmp ( compiler , type , src1 , src1w , src2 , src2w ) )"		1072369	0					
ANR	1072391	Callee	CHECK_PTR		1072369	0					
ANR	1072392	Identifier	CHECK_PTR		1072369	0					
ANR	1072393	ArgumentList	"check_sljit_emit_fcmp ( compiler , type , src1 , src1w , src2 , src2w )"		1072369	1					
ANR	1072394	Argument	"check_sljit_emit_fcmp ( compiler , type , src1 , src1w , src2 , src2w )"		1072369	0					
ANR	1072395	CallExpression	"check_sljit_emit_fcmp ( compiler , type , src1 , src1w , src2 , src2w )"		1072369	0					
ANR	1072396	Callee	check_sljit_emit_fcmp		1072369	0					
ANR	1072397	Identifier	check_sljit_emit_fcmp		1072369	0					
ANR	1072398	ArgumentList	compiler		1072369	1					
ANR	1072399	Argument	compiler		1072369	0					
ANR	1072400	Identifier	compiler		1072369	0					
ANR	1072401	Argument	type		1072369	1					
ANR	1072402	Identifier	type		1072369	0					
ANR	1072403	Argument	src1		1072369	2					
ANR	1072404	Identifier	src1		1072369	0					
ANR	1072405	Argument	src1w		1072369	3					
ANR	1072406	Identifier	src1w		1072369	0					
ANR	1072407	Argument	src2		1072369	4					
ANR	1072408	Identifier	src2		1072369	0					
ANR	1072409	Argument	src2w		1072369	5					
ANR	1072410	Identifier	src2w		1072369	0					
ANR	1072411	ExpressionStatement	compiler -> cache_arg = 0	1868:1:60500:60523	1072369	5	True				
ANR	1072412	AssignmentExpression	compiler -> cache_arg = 0		1072369	0		=			
ANR	1072413	PtrMemberAccess	compiler -> cache_arg		1072369	0					
ANR	1072414	Identifier	compiler		1072369	0					
ANR	1072415	Identifier	cache_arg		1072369	1					
ANR	1072416	PrimaryExpression	0		1072369	1					
ANR	1072417	ExpressionStatement	compiler -> cache_argw = 0	1869:1:60526:60550	1072369	6	True				
ANR	1072418	AssignmentExpression	compiler -> cache_argw = 0		1072369	0		=			
ANR	1072419	PtrMemberAccess	compiler -> cache_argw		1072369	0					
ANR	1072420	Identifier	compiler		1072369	0					
ANR	1072421	Identifier	cache_argw		1072369	1					
ANR	1072422	PrimaryExpression	0		1072369	1					
ANR	1072423	IfStatement	if ( src1 & SLJIT_MEM )		1072369	7					
ANR	1072424	Condition	src1 & SLJIT_MEM	1871:5:60558:60573	1072369	0	True				
ANR	1072425	BitAndExpression	src1 & SLJIT_MEM		1072369	0		&			
ANR	1072426	Identifier	src1		1072369	0					
ANR	1072427	Identifier	SLJIT_MEM		1072369	1					
ANR	1072428	CompoundStatement		12:23:239:239	1072369	1					
ANR	1072429	ExpressionStatement	"PTR_FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( type ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w ) )"	1872:2:60580:60682	1072369	0	True				
ANR	1072430	CallExpression	"PTR_FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( type ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w ) )"		1072369	0					
ANR	1072431	Callee	PTR_FAIL_IF		1072369	0					
ANR	1072432	Identifier	PTR_FAIL_IF		1072369	0					
ANR	1072433	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( type ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1072369	1					
ANR	1072434	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( type ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1072369	0					
ANR	1072435	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( type ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1072369	0					
ANR	1072436	Callee	emit_op_mem2		1072369	0					
ANR	1072437	Identifier	emit_op_mem2		1072369	0					
ANR	1072438	ArgumentList	compiler		1072369	1					
ANR	1072439	Argument	compiler		1072369	0					
ANR	1072440	Identifier	compiler		1072369	0					
ANR	1072441	Argument	FLOAT_DATA ( type ) | LOAD_DATA		1072369	1					
ANR	1072442	InclusiveOrExpression	FLOAT_DATA ( type ) | LOAD_DATA		1072369	0		|			
ANR	1072443	CallExpression	FLOAT_DATA ( type )		1072369	0					
ANR	1072444	Callee	FLOAT_DATA		1072369	0					
ANR	1072445	Identifier	FLOAT_DATA		1072369	0					
ANR	1072446	ArgumentList	type		1072369	1					
ANR	1072447	Argument	type		1072369	0					
ANR	1072448	Identifier	type		1072369	0					
ANR	1072449	Identifier	LOAD_DATA		1072369	1					
ANR	1072450	Argument	TMP_FREG1		1072369	2					
ANR	1072451	Identifier	TMP_FREG1		1072369	0					
ANR	1072452	Argument	src1		1072369	3					
ANR	1072453	Identifier	src1		1072369	0					
ANR	1072454	Argument	src1w		1072369	4					
ANR	1072455	Identifier	src1w		1072369	0					
ANR	1072456	Argument	src2		1072369	5					
ANR	1072457	Identifier	src2		1072369	0					
ANR	1072458	Argument	src2w		1072369	6					
ANR	1072459	Identifier	src2w		1072369	0					
ANR	1072460	ExpressionStatement	src1 = TMP_FREG1	1873:2:60686:60702	1072369	1	True				
ANR	1072461	AssignmentExpression	src1 = TMP_FREG1		1072369	0		=			
ANR	1072462	Identifier	src1		1072369	0					
ANR	1072463	Identifier	TMP_FREG1		1072369	1					
ANR	1072464	ElseStatement	else		1072369	0					
ANR	1072465	ExpressionStatement	src1 <<= 1	1876:2:60715:60725	1072369	0	True				
ANR	1072466	AssignmentExpression	src1 <<= 1		1072369	0		<<=			
ANR	1072467	Identifier	src1		1072369	0					
ANR	1072468	PrimaryExpression	1		1072369	1					
ANR	1072469	IfStatement	if ( src2 & SLJIT_MEM )		1072369	8					
ANR	1072470	Condition	src2 & SLJIT_MEM	1878:5:60733:60748	1072369	0	True				
ANR	1072471	BitAndExpression	src2 & SLJIT_MEM		1072369	0		&			
ANR	1072472	Identifier	src2		1072369	0					
ANR	1072473	Identifier	SLJIT_MEM		1072369	1					
ANR	1072474	CompoundStatement		19:23:414:414	1072369	1					
ANR	1072475	ExpressionStatement	"PTR_FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( type ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 ) )"	1879:2:60755:60850	1072369	0	True				
ANR	1072476	CallExpression	"PTR_FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( type ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 ) )"		1072369	0					
ANR	1072477	Callee	PTR_FAIL_IF		1072369	0					
ANR	1072478	Identifier	PTR_FAIL_IF		1072369	0					
ANR	1072479	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( type ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 )"		1072369	1					
ANR	1072480	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( type ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 )"		1072369	0					
ANR	1072481	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( type ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 )"		1072369	0					
ANR	1072482	Callee	emit_op_mem2		1072369	0					
ANR	1072483	Identifier	emit_op_mem2		1072369	0					
ANR	1072484	ArgumentList	compiler		1072369	1					
ANR	1072485	Argument	compiler		1072369	0					
ANR	1072486	Identifier	compiler		1072369	0					
ANR	1072487	Argument	FLOAT_DATA ( type ) | LOAD_DATA		1072369	1					
ANR	1072488	InclusiveOrExpression	FLOAT_DATA ( type ) | LOAD_DATA		1072369	0		|			
ANR	1072489	CallExpression	FLOAT_DATA ( type )		1072369	0					
ANR	1072490	Callee	FLOAT_DATA		1072369	0					
ANR	1072491	Identifier	FLOAT_DATA		1072369	0					
ANR	1072492	ArgumentList	type		1072369	1					
ANR	1072493	Argument	type		1072369	0					
ANR	1072494	Identifier	type		1072369	0					
ANR	1072495	Identifier	LOAD_DATA		1072369	1					
ANR	1072496	Argument	TMP_FREG2		1072369	2					
ANR	1072497	Identifier	TMP_FREG2		1072369	0					
ANR	1072498	Argument	src2		1072369	3					
ANR	1072499	Identifier	src2		1072369	0					
ANR	1072500	Argument	src2w		1072369	4					
ANR	1072501	Identifier	src2w		1072369	0					
ANR	1072502	Argument	0		1072369	5					
ANR	1072503	PrimaryExpression	0		1072369	0					
ANR	1072504	Argument	0		1072369	6					
ANR	1072505	PrimaryExpression	0		1072369	0					
ANR	1072506	ExpressionStatement	src2 = TMP_FREG2	1880:2:60854:60870	1072369	1	True				
ANR	1072507	AssignmentExpression	src2 = TMP_FREG2		1072369	0		=			
ANR	1072508	Identifier	src2		1072369	0					
ANR	1072509	Identifier	TMP_FREG2		1072369	1					
ANR	1072510	ElseStatement	else		1072369	0					
ANR	1072511	ExpressionStatement	src2 <<= 1	1883:2:60883:60893	1072369	0	True				
ANR	1072512	AssignmentExpression	src2 <<= 1		1072369	0		<<=			
ANR	1072513	Identifier	src2		1072369	0					
ANR	1072514	PrimaryExpression	1		1072369	1					
ANR	1072515	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	1885:1:60897:60972	1072369	9	True				
ANR	1072516	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1072369	0		=			
ANR	1072517	Identifier	jump		1072369	0					
ANR	1072518	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1072369	1					
ANR	1072519	CastTarget	struct sljit_jump *		1072369	0					
ANR	1072520	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1072369	1					
ANR	1072521	Callee	ensure_abuf		1072369	0					
ANR	1072522	Identifier	ensure_abuf		1072369	0					
ANR	1072523	ArgumentList	compiler		1072369	1					
ANR	1072524	Argument	compiler		1072369	0					
ANR	1072525	Identifier	compiler		1072369	0					
ANR	1072526	Argument	sizeof ( struct sljit_jump )		1072369	1					
ANR	1072527	SizeofExpression	sizeof ( struct sljit_jump )		1072369	0					
ANR	1072528	Sizeof	sizeof		1072369	0					
ANR	1072529	SizeofOperand	struct sljit_jump		1072369	1					
ANR	1072530	ExpressionStatement	PTR_FAIL_IF ( ! jump )	1886:1:60975:60993	1072369	10	True				
ANR	1072531	CallExpression	PTR_FAIL_IF ( ! jump )		1072369	0					
ANR	1072532	Callee	PTR_FAIL_IF		1072369	0					
ANR	1072533	Identifier	PTR_FAIL_IF		1072369	0					
ANR	1072534	ArgumentList	! jump		1072369	1					
ANR	1072535	Argument	! jump		1072369	0					
ANR	1072536	UnaryOperationExpression	! jump		1072369	0					
ANR	1072537	UnaryOperator	!		1072369	0					
ANR	1072538	Identifier	jump		1072369	1					
ANR	1072539	ExpressionStatement	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"	1887:1:60996:61050	1072369	11	True				
ANR	1072540	CallExpression	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"		1072369	0					
ANR	1072541	Callee	set_jump		1072369	0					
ANR	1072542	Identifier	set_jump		1072369	0					
ANR	1072543	ArgumentList	jump		1072369	1					
ANR	1072544	Argument	jump		1072369	0					
ANR	1072545	Identifier	jump		1072369	0					
ANR	1072546	Argument	compiler		1072369	1					
ANR	1072547	Identifier	compiler		1072369	0					
ANR	1072548	Argument	type & SLJIT_REWRITABLE_JUMP		1072369	2					
ANR	1072549	BitAndExpression	type & SLJIT_REWRITABLE_JUMP		1072369	0		&			
ANR	1072550	Identifier	type		1072369	0					
ANR	1072551	Identifier	SLJIT_REWRITABLE_JUMP		1072369	1					
ANR	1072552	ExpressionStatement	jump -> flags |= IS_BIT16_COND	1888:1:61053:61081	1072369	12	True				
ANR	1072553	AssignmentExpression	jump -> flags |= IS_BIT16_COND		1072369	0		|=			
ANR	1072554	PtrMemberAccess	jump -> flags		1072369	0					
ANR	1072555	Identifier	jump		1072369	0					
ANR	1072556	Identifier	flags		1072369	1					
ANR	1072557	Identifier	IS_BIT16_COND		1072369	1					
ANR	1072558	SwitchStatement	switch ( type & 0xff )		1072369	13					
ANR	1072559	Condition	type & 0xff	1890:9:61093:61103	1072369	0	True				
ANR	1072560	BitAndExpression	type & 0xff		1072369	0		&			
ANR	1072561	Identifier	type		1072369	0					
ANR	1072562	PrimaryExpression	0xff		1072369	1					
ANR	1072563	CompoundStatement		31:22:769:769	1072369	1					
ANR	1072564	Label	case SLJIT_D_EQUAL :	1891:1:61109:61127	1072369	0	True				
ANR	1072565	Identifier	SLJIT_D_EQUAL		1072369	0					
ANR	1072566	ExpressionStatement	inst = C_UEQ_S	1892:2:61131:61145	1072369	1	True				
ANR	1072567	AssignmentExpression	inst = C_UEQ_S		1072369	0		=			
ANR	1072568	Identifier	inst		1072369	0					
ANR	1072569	Identifier	C_UEQ_S		1072369	1					
ANR	1072570	ExpressionStatement	if_true = 1	1893:2:61149:61160	1072369	2	True				
ANR	1072571	AssignmentExpression	if_true = 1		1072369	0		=			
ANR	1072572	Identifier	if_true		1072369	0					
ANR	1072573	PrimaryExpression	1		1072369	1					
ANR	1072574	BreakStatement	break ;	1894:2:61164:61169	1072369	3	True				
ANR	1072575	Label	case SLJIT_D_NOT_EQUAL :	1895:1:61172:61194	1072369	4	True				
ANR	1072576	Identifier	SLJIT_D_NOT_EQUAL		1072369	0					
ANR	1072577	ExpressionStatement	inst = C_UEQ_S	1896:2:61198:61212	1072369	5	True				
ANR	1072578	AssignmentExpression	inst = C_UEQ_S		1072369	0		=			
ANR	1072579	Identifier	inst		1072369	0					
ANR	1072580	Identifier	C_UEQ_S		1072369	1					
ANR	1072581	ExpressionStatement	if_true = 0	1897:2:61216:61227	1072369	6	True				
ANR	1072582	AssignmentExpression	if_true = 0		1072369	0		=			
ANR	1072583	Identifier	if_true		1072369	0					
ANR	1072584	PrimaryExpression	0		1072369	1					
ANR	1072585	BreakStatement	break ;	1898:2:61231:61236	1072369	7	True				
ANR	1072586	Label	case SLJIT_D_LESS :	1899:1:61239:61256	1072369	8	True				
ANR	1072587	Identifier	SLJIT_D_LESS		1072369	0					
ANR	1072588	ExpressionStatement	inst = C_ULT_S	1900:2:61260:61274	1072369	9	True				
ANR	1072589	AssignmentExpression	inst = C_ULT_S		1072369	0		=			
ANR	1072590	Identifier	inst		1072369	0					
ANR	1072591	Identifier	C_ULT_S		1072369	1					
ANR	1072592	ExpressionStatement	if_true = 1	1901:2:61278:61289	1072369	10	True				
ANR	1072593	AssignmentExpression	if_true = 1		1072369	0		=			
ANR	1072594	Identifier	if_true		1072369	0					
ANR	1072595	PrimaryExpression	1		1072369	1					
ANR	1072596	BreakStatement	break ;	1902:2:61293:61298	1072369	11	True				
ANR	1072597	Label	case SLJIT_D_GREATER_EQUAL :	1903:1:61301:61327	1072369	12	True				
ANR	1072598	Identifier	SLJIT_D_GREATER_EQUAL		1072369	0					
ANR	1072599	ExpressionStatement	inst = C_ULT_S	1904:2:61331:61345	1072369	13	True				
ANR	1072600	AssignmentExpression	inst = C_ULT_S		1072369	0		=			
ANR	1072601	Identifier	inst		1072369	0					
ANR	1072602	Identifier	C_ULT_S		1072369	1					
ANR	1072603	ExpressionStatement	if_true = 0	1905:2:61349:61360	1072369	14	True				
ANR	1072604	AssignmentExpression	if_true = 0		1072369	0		=			
ANR	1072605	Identifier	if_true		1072369	0					
ANR	1072606	PrimaryExpression	0		1072369	1					
ANR	1072607	BreakStatement	break ;	1906:2:61364:61369	1072369	15	True				
ANR	1072608	Label	case SLJIT_D_GREATER :	1907:1:61372:61392	1072369	16	True				
ANR	1072609	Identifier	SLJIT_D_GREATER		1072369	0					
ANR	1072610	ExpressionStatement	inst = C_ULE_S	1908:2:61396:61410	1072369	17	True				
ANR	1072611	AssignmentExpression	inst = C_ULE_S		1072369	0		=			
ANR	1072612	Identifier	inst		1072369	0					
ANR	1072613	Identifier	C_ULE_S		1072369	1					
ANR	1072614	ExpressionStatement	if_true = 0	1909:2:61414:61425	1072369	18	True				
ANR	1072615	AssignmentExpression	if_true = 0		1072369	0		=			
ANR	1072616	Identifier	if_true		1072369	0					
ANR	1072617	PrimaryExpression	0		1072369	1					
ANR	1072618	BreakStatement	break ;	1910:2:61429:61434	1072369	19	True				
ANR	1072619	Label	case SLJIT_D_LESS_EQUAL :	1911:1:61437:61460	1072369	20	True				
ANR	1072620	Identifier	SLJIT_D_LESS_EQUAL		1072369	0					
ANR	1072621	ExpressionStatement	inst = C_ULE_S	1912:2:61464:61478	1072369	21	True				
ANR	1072622	AssignmentExpression	inst = C_ULE_S		1072369	0		=			
ANR	1072623	Identifier	inst		1072369	0					
ANR	1072624	Identifier	C_ULE_S		1072369	1					
ANR	1072625	ExpressionStatement	if_true = 1	1913:2:61482:61493	1072369	22	True				
ANR	1072626	AssignmentExpression	if_true = 1		1072369	0		=			
ANR	1072627	Identifier	if_true		1072369	0					
ANR	1072628	PrimaryExpression	1		1072369	1					
ANR	1072629	BreakStatement	break ;	1914:2:61497:61502	1072369	23	True				
ANR	1072630	Label	case SLJIT_D_UNORDERED :	1915:1:61505:61527	1072369	24	True				
ANR	1072631	Identifier	SLJIT_D_UNORDERED		1072369	0					
ANR	1072632	ExpressionStatement	inst = C_UN_S	1916:2:61531:61544	1072369	25	True				
ANR	1072633	AssignmentExpression	inst = C_UN_S		1072369	0		=			
ANR	1072634	Identifier	inst		1072369	0					
ANR	1072635	Identifier	C_UN_S		1072369	1					
ANR	1072636	ExpressionStatement	if_true = 1	1917:2:61548:61559	1072369	26	True				
ANR	1072637	AssignmentExpression	if_true = 1		1072369	0		=			
ANR	1072638	Identifier	if_true		1072369	0					
ANR	1072639	PrimaryExpression	1		1072369	1					
ANR	1072640	BreakStatement	break ;	1918:2:61563:61568	1072369	27	True				
ANR	1072641	Label	default :	1919:1:61571:61578	1072369	28	True				
ANR	1072642	Identifier	default		1072369	0					
ANR	1072643	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1920:2:61610:61629	1072369	29	True				
ANR	1072644	CallExpression	SLJIT_ASSERT_STOP ( )		1072369	0					
ANR	1072645	Callee	SLJIT_ASSERT_STOP		1072369	0					
ANR	1072646	Identifier	SLJIT_ASSERT_STOP		1072369	0					
ANR	1072647	ArgumentList			1072369	1					
ANR	1072648	Label	case SLJIT_D_ORDERED :	1921:1:61632:61652	1072369	30	True				
ANR	1072649	Identifier	SLJIT_D_ORDERED		1072369	0					
ANR	1072650	ExpressionStatement	inst = C_UN_S	1922:2:61656:61669	1072369	31	True				
ANR	1072651	AssignmentExpression	inst = C_UN_S		1072369	0		=			
ANR	1072652	Identifier	inst		1072369	0					
ANR	1072653	Identifier	C_UN_S		1072369	1					
ANR	1072654	ExpressionStatement	if_true = 0	1923:2:61673:61684	1072369	32	True				
ANR	1072655	AssignmentExpression	if_true = 0		1072369	0		=			
ANR	1072656	Identifier	if_true		1072369	0					
ANR	1072657	PrimaryExpression	0		1072369	1					
ANR	1072658	BreakStatement	break ;	1924:2:61688:61693	1072369	33	True				
ANR	1072659	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , inst | FMT ( type ) | FT ( src2 ) | FS ( src1 ) , UNMOVABLE_INS ) )"	1927:1:61700:61787	1072369	14	True				
ANR	1072660	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , inst | FMT ( type ) | FT ( src2 ) | FS ( src1 ) , UNMOVABLE_INS ) )"		1072369	0					
ANR	1072661	Callee	PTR_FAIL_IF		1072369	0					
ANR	1072662	Identifier	PTR_FAIL_IF		1072369	0					
ANR	1072663	ArgumentList	"push_inst ( compiler , inst | FMT ( type ) | FT ( src2 ) | FS ( src1 ) , UNMOVABLE_INS )"		1072369	1					
ANR	1072664	Argument	"push_inst ( compiler , inst | FMT ( type ) | FT ( src2 ) | FS ( src1 ) , UNMOVABLE_INS )"		1072369	0					
ANR	1072665	CallExpression	"push_inst ( compiler , inst | FMT ( type ) | FT ( src2 ) | FS ( src1 ) , UNMOVABLE_INS )"		1072369	0					
ANR	1072666	Callee	push_inst		1072369	0					
ANR	1072667	Identifier	push_inst		1072369	0					
ANR	1072668	ArgumentList	compiler		1072369	1					
ANR	1072669	Argument	compiler		1072369	0					
ANR	1072670	Identifier	compiler		1072369	0					
ANR	1072671	Argument	inst | FMT ( type ) | FT ( src2 ) | FS ( src1 )		1072369	1					
ANR	1072672	InclusiveOrExpression	inst | FMT ( type ) | FT ( src2 ) | FS ( src1 )		1072369	0		|			
ANR	1072673	Identifier	inst		1072369	0					
ANR	1072674	InclusiveOrExpression	FMT ( type ) | FT ( src2 ) | FS ( src1 )		1072369	1		|			
ANR	1072675	CallExpression	FMT ( type )		1072369	0					
ANR	1072676	Callee	FMT		1072369	0					
ANR	1072677	Identifier	FMT		1072369	0					
ANR	1072678	ArgumentList	type		1072369	1					
ANR	1072679	Argument	type		1072369	0					
ANR	1072680	Identifier	type		1072369	0					
ANR	1072681	InclusiveOrExpression	FT ( src2 ) | FS ( src1 )		1072369	1		|			
ANR	1072682	CallExpression	FT ( src2 )		1072369	0					
ANR	1072683	Callee	FT		1072369	0					
ANR	1072684	Identifier	FT		1072369	0					
ANR	1072685	ArgumentList	src2		1072369	1					
ANR	1072686	Argument	src2		1072369	0					
ANR	1072687	Identifier	src2		1072369	0					
ANR	1072688	CallExpression	FS ( src1 )		1072369	1					
ANR	1072689	Callee	FS		1072369	0					
ANR	1072690	Identifier	FS		1072369	0					
ANR	1072691	ArgumentList	src1		1072369	1					
ANR	1072692	Argument	src1		1072369	0					
ANR	1072693	Identifier	src1		1072369	0					
ANR	1072694	Argument	UNMOVABLE_INS		1072369	2					
ANR	1072695	Identifier	UNMOVABLE_INS		1072369	0					
ANR	1072696	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , ( if_true ? BC1F : BC1T ) | JUMP_LENGTH , UNMOVABLE_INS ) )"	1929:1:61829:61915	1072369	15	True				
ANR	1072697	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , ( if_true ? BC1F : BC1T ) | JUMP_LENGTH , UNMOVABLE_INS ) )"		1072369	0					
ANR	1072698	Callee	PTR_FAIL_IF		1072369	0					
ANR	1072699	Identifier	PTR_FAIL_IF		1072369	0					
ANR	1072700	ArgumentList	"push_inst ( compiler , ( if_true ? BC1F : BC1T ) | JUMP_LENGTH , UNMOVABLE_INS )"		1072369	1					
ANR	1072701	Argument	"push_inst ( compiler , ( if_true ? BC1F : BC1T ) | JUMP_LENGTH , UNMOVABLE_INS )"		1072369	0					
ANR	1072702	CallExpression	"push_inst ( compiler , ( if_true ? BC1F : BC1T ) | JUMP_LENGTH , UNMOVABLE_INS )"		1072369	0					
ANR	1072703	Callee	push_inst		1072369	0					
ANR	1072704	Identifier	push_inst		1072369	0					
ANR	1072705	ArgumentList	compiler		1072369	1					
ANR	1072706	Argument	compiler		1072369	0					
ANR	1072707	Identifier	compiler		1072369	0					
ANR	1072708	Argument	( if_true ? BC1F : BC1T ) | JUMP_LENGTH		1072369	1					
ANR	1072709	InclusiveOrExpression	( if_true ? BC1F : BC1T ) | JUMP_LENGTH		1072369	0		|			
ANR	1072710	ConditionalExpression	if_true ? BC1F : BC1T		1072369	0					
ANR	1072711	Condition	if_true		1072369	0					
ANR	1072712	Identifier	if_true		1072369	0					
ANR	1072713	Identifier	BC1F		1072369	1					
ANR	1072714	Identifier	BC1T		1072369	2					
ANR	1072715	Identifier	JUMP_LENGTH		1072369	1					
ANR	1072716	Argument	UNMOVABLE_INS		1072369	2					
ANR	1072717	Identifier	UNMOVABLE_INS		1072369	0					
ANR	1072718	ExpressionStatement	"PTR_FAIL_IF ( emit_const ( compiler , TMP_REG2 , 0 ) )"	1930:1:61918:61964	1072369	16	True				
ANR	1072719	CallExpression	"PTR_FAIL_IF ( emit_const ( compiler , TMP_REG2 , 0 ) )"		1072369	0					
ANR	1072720	Callee	PTR_FAIL_IF		1072369	0					
ANR	1072721	Identifier	PTR_FAIL_IF		1072369	0					
ANR	1072722	ArgumentList	"emit_const ( compiler , TMP_REG2 , 0 )"		1072369	1					
ANR	1072723	Argument	"emit_const ( compiler , TMP_REG2 , 0 )"		1072369	0					
ANR	1072724	CallExpression	"emit_const ( compiler , TMP_REG2 , 0 )"		1072369	0					
ANR	1072725	Callee	emit_const		1072369	0					
ANR	1072726	Identifier	emit_const		1072369	0					
ANR	1072727	ArgumentList	compiler		1072369	1					
ANR	1072728	Argument	compiler		1072369	0					
ANR	1072729	Identifier	compiler		1072369	0					
ANR	1072730	Argument	TMP_REG2		1072369	1					
ANR	1072731	Identifier	TMP_REG2		1072369	0					
ANR	1072732	Argument	0		1072369	2					
ANR	1072733	PrimaryExpression	0		1072369	0					
ANR	1072734	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , JR | S ( TMP_REG2 ) , UNMOVABLE_INS ) )"	1931:1:61967:62032	1072369	17	True				
ANR	1072735	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , JR | S ( TMP_REG2 ) , UNMOVABLE_INS ) )"		1072369	0					
ANR	1072736	Callee	PTR_FAIL_IF		1072369	0					
ANR	1072737	Identifier	PTR_FAIL_IF		1072369	0					
ANR	1072738	ArgumentList	"push_inst ( compiler , JR | S ( TMP_REG2 ) , UNMOVABLE_INS )"		1072369	1					
ANR	1072739	Argument	"push_inst ( compiler , JR | S ( TMP_REG2 ) , UNMOVABLE_INS )"		1072369	0					
ANR	1072740	CallExpression	"push_inst ( compiler , JR | S ( TMP_REG2 ) , UNMOVABLE_INS )"		1072369	0					
ANR	1072741	Callee	push_inst		1072369	0					
ANR	1072742	Identifier	push_inst		1072369	0					
ANR	1072743	ArgumentList	compiler		1072369	1					
ANR	1072744	Argument	compiler		1072369	0					
ANR	1072745	Identifier	compiler		1072369	0					
ANR	1072746	Argument	JR | S ( TMP_REG2 )		1072369	1					
ANR	1072747	InclusiveOrExpression	JR | S ( TMP_REG2 )		1072369	0		|			
ANR	1072748	Identifier	JR		1072369	0					
ANR	1072749	CallExpression	S ( TMP_REG2 )		1072369	1					
ANR	1072750	Callee	S		1072369	0					
ANR	1072751	Identifier	S		1072369	0					
ANR	1072752	ArgumentList	TMP_REG2		1072369	1					
ANR	1072753	Argument	TMP_REG2		1072369	0					
ANR	1072754	Identifier	TMP_REG2		1072369	0					
ANR	1072755	Argument	UNMOVABLE_INS		1072369	2					
ANR	1072756	Identifier	UNMOVABLE_INS		1072369	0					
ANR	1072757	ExpressionStatement	jump -> addr = compiler -> size	1932:1:62035:62062	1072369	18	True				
ANR	1072758	AssignmentExpression	jump -> addr = compiler -> size		1072369	0		=			
ANR	1072759	PtrMemberAccess	jump -> addr		1072369	0					
ANR	1072760	Identifier	jump		1072369	0					
ANR	1072761	Identifier	addr		1072369	1					
ANR	1072762	PtrMemberAccess	compiler -> size		1072369	1					
ANR	1072763	Identifier	compiler		1072369	0					
ANR	1072764	Identifier	size		1072369	1					
ANR	1072765	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , NOP , UNMOVABLE_INS ) )"	1933:1:62065:62117	1072369	19	True				
ANR	1072766	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , NOP , UNMOVABLE_INS ) )"		1072369	0					
ANR	1072767	Callee	PTR_FAIL_IF		1072369	0					
ANR	1072768	Identifier	PTR_FAIL_IF		1072369	0					
ANR	1072769	ArgumentList	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1072369	1					
ANR	1072770	Argument	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1072369	0					
ANR	1072771	CallExpression	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1072369	0					
ANR	1072772	Callee	push_inst		1072369	0					
ANR	1072773	Identifier	push_inst		1072369	0					
ANR	1072774	ArgumentList	compiler		1072369	1					
ANR	1072775	Argument	compiler		1072369	0					
ANR	1072776	Identifier	compiler		1072369	0					
ANR	1072777	Argument	NOP		1072369	1					
ANR	1072778	Identifier	NOP		1072369	0					
ANR	1072779	Argument	UNMOVABLE_INS		1072369	2					
ANR	1072780	Identifier	UNMOVABLE_INS		1072369	0					
ANR	1072781	ReturnStatement	return jump ;	1934:1:62120:62131	1072369	20	True				
ANR	1072782	Identifier	jump		1072369	0					
ANR	1072783	ReturnType	struct sljit_jump *		1072369	1					
ANR	1072784	Identifier	sljit_emit_fcmp		1072369	2					
ANR	1072785	ParameterList	"struct sljit_compiler * compiler , sljit_si type , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1072369	3					
ANR	1072786	Parameter	struct sljit_compiler * compiler	1857:60:60224:60254	1072369	0	True				
ANR	1072787	ParameterType	struct sljit_compiler *		1072369	0					
ANR	1072788	Identifier	compiler		1072369	1					
ANR	1072789	Parameter	sljit_si type	1857:93:60257:60269	1072369	1	True				
ANR	1072790	ParameterType	sljit_si		1072369	0					
ANR	1072791	Identifier	type		1072369	1					
ANR	1072792	Parameter	sljit_si src1	1858:1:60273:60285	1072369	2	True				
ANR	1072793	ParameterType	sljit_si		1072369	0					
ANR	1072794	Identifier	src1		1072369	1					
ANR	1072795	Parameter	sljit_sw src1w	1858:16:60288:60301	1072369	3	True				
ANR	1072796	ParameterType	sljit_sw		1072369	0					
ANR	1072797	Identifier	src1w		1072369	1					
ANR	1072798	Parameter	sljit_si src2	1859:1:60305:60317	1072369	4	True				
ANR	1072799	ParameterType	sljit_si		1072369	0					
ANR	1072800	Identifier	src2		1072369	1					
ANR	1072801	Parameter	sljit_sw src2w	1859:16:60320:60333	1072369	5	True				
ANR	1072802	ParameterType	sljit_sw		1072369	0					
ANR	1072803	Identifier	src2w		1072369	1					
ANR	1072804	CFGEntryNode	ENTRY		1072369		True				
ANR	1072805	CFGExitNode	EXIT		1072369		True				
ANR	1072806	Symbol	TMP_REG2		1072369						
ANR	1072807	Symbol	compiler -> cache_argw		1072369						
ANR	1072808	Symbol	TMP_FREG2		1072369						
ANR	1072809	Symbol	src1w		1072369						
ANR	1072810	Symbol	check_sljit_emit_fcmp		1072369						
ANR	1072811	Symbol	FLOAT_DATA		1072369						
ANR	1072812	Symbol	LOAD_DATA		1072369						
ANR	1072813	Symbol	* jump		1072369						
ANR	1072814	Symbol	TMP_FREG1		1072369						
ANR	1072815	Symbol	SLJIT_MEM		1072369						
ANR	1072816	Symbol	jump -> flags		1072369						
ANR	1072817	Symbol	JR		1072369						
ANR	1072818	Symbol	C_ULE_S		1072369						
ANR	1072819	Symbol	* compiler		1072369						
ANR	1072820	Symbol	type		1072369						
ANR	1072821	Symbol	FS		1072369						
ANR	1072822	Symbol	FT		1072369						
ANR	1072823	Symbol	S		1072369						
ANR	1072824	Symbol	JUMP_LENGTH		1072369						
ANR	1072825	Symbol	C_ULT_S		1072369						
ANR	1072826	Symbol	SLJIT_REWRITABLE_JUMP		1072369						
ANR	1072827	Symbol	BC1T		1072369						
ANR	1072828	Symbol	compiler		1072369						
ANR	1072829	Symbol	if_true		1072369						
ANR	1072830	Symbol	IS_BIT16_COND		1072369						
ANR	1072831	Symbol	C_UN_S		1072369						
ANR	1072832	Symbol	jump		1072369						
ANR	1072833	Symbol	src2w		1072369						
ANR	1072834	Symbol	push_inst		1072369						
ANR	1072835	Symbol	compiler -> cache_arg		1072369						
ANR	1072836	Symbol	UNMOVABLE_INS		1072369						
ANR	1072837	Symbol	emit_op_mem2		1072369						
ANR	1072838	Symbol	BC1F		1072369						
ANR	1072839	Symbol	jump -> addr		1072369						
ANR	1072840	Symbol	ensure_abuf		1072369						
ANR	1072841	Symbol	FMT		1072369						
ANR	1072842	Symbol	NOP		1072369						
ANR	1072843	Symbol	compiler -> size		1072369						
ANR	1072844	Symbol	C_UEQ_S		1072369						
ANR	1072845	Symbol	inst		1072369						
ANR	1072846	Symbol	src1		1072369						
ANR	1072847	Symbol	emit_const		1072369						
ANR	1072848	Symbol	src2		1072369						
ANR	1072849	Function	sljit_emit_ijump	1937:1:62137:64267							
ANR	1072850	FunctionDef	"sljit_emit_ijump (struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw)"		1072849	0					
ANR	1072851	CompoundStatement		1947:0:62363:64267	1072849	0					
ANR	1072852	IdentifierDeclStatement	sljit_si src_r = TMP_REG2 ;	1948:1:62366:62391	1072849	0	True				
ANR	1072853	IdentifierDecl	src_r = TMP_REG2		1072849	0					
ANR	1072854	IdentifierDeclType	sljit_si		1072849	0					
ANR	1072855	Identifier	src_r		1072849	1					
ANR	1072856	AssignmentExpression	src_r = TMP_REG2		1072849	2		=			
ANR	1072857	Identifier	TMP_REG2		1072849	0					
ANR	1072858	Identifier	TMP_REG2		1072849	1					
ANR	1072859	IdentifierDeclStatement	struct sljit_jump * jump = NULL ;	1949:1:62394:62424	1072849	1	True				
ANR	1072860	IdentifierDecl	* jump = NULL		1072849	0					
ANR	1072861	IdentifierDeclType	struct sljit_jump *		1072849	0					
ANR	1072862	Identifier	jump		1072849	1					
ANR	1072863	AssignmentExpression	* jump = NULL		1072849	2		=			
ANR	1072864	Identifier	NULL		1072849	0					
ANR	1072865	Identifier	NULL		1072849	1					
ANR	1072866	ExpressionStatement	CHECK_ERROR ( )	1951:1:62428:62441	1072849	2	True				
ANR	1072867	CallExpression	CHECK_ERROR ( )		1072849	0					
ANR	1072868	Callee	CHECK_ERROR		1072849	0					
ANR	1072869	Identifier	CHECK_ERROR		1072849	0					
ANR	1072870	ArgumentList			1072849	1					
ANR	1072871	ExpressionStatement	"CHECK ( check_sljit_emit_ijump ( compiler , type , src , srcw ) )"	1952:1:62444:62500	1072849	3	True				
ANR	1072872	CallExpression	"CHECK ( check_sljit_emit_ijump ( compiler , type , src , srcw ) )"		1072849	0					
ANR	1072873	Callee	CHECK		1072849	0					
ANR	1072874	Identifier	CHECK		1072849	0					
ANR	1072875	ArgumentList	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1072849	1					
ANR	1072876	Argument	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1072849	0					
ANR	1072877	CallExpression	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1072849	0					
ANR	1072878	Callee	check_sljit_emit_ijump		1072849	0					
ANR	1072879	Identifier	check_sljit_emit_ijump		1072849	0					
ANR	1072880	ArgumentList	compiler		1072849	1					
ANR	1072881	Argument	compiler		1072849	0					
ANR	1072882	Identifier	compiler		1072849	0					
ANR	1072883	Argument	type		1072849	1					
ANR	1072884	Identifier	type		1072849	0					
ANR	1072885	Argument	src		1072849	2					
ANR	1072886	Identifier	src		1072849	0					
ANR	1072887	Argument	srcw		1072849	3					
ANR	1072888	Identifier	srcw		1072849	0					
ANR	1072889	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1953:1:62503:62533	1072849	4	True				
ANR	1072890	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1072849	0					
ANR	1072891	Callee	ADJUST_LOCAL_OFFSET		1072849	0					
ANR	1072892	Identifier	ADJUST_LOCAL_OFFSET		1072849	0					
ANR	1072893	ArgumentList	src		1072849	1					
ANR	1072894	Argument	src		1072849	0					
ANR	1072895	Identifier	src		1072849	0					
ANR	1072896	Argument	srcw		1072849	1					
ANR	1072897	Identifier	srcw		1072849	0					
ANR	1072898	IfStatement	if ( FAST_IS_REG ( src ) )		1072849	5					
ANR	1072899	Condition	FAST_IS_REG ( src )	1955:5:62541:62556	1072849	0	True				
ANR	1072900	CallExpression	FAST_IS_REG ( src )		1072849	0					
ANR	1072901	Callee	FAST_IS_REG		1072849	0					
ANR	1072902	Identifier	FAST_IS_REG		1072849	0					
ANR	1072903	ArgumentList	src		1072849	1					
ANR	1072904	Argument	src		1072849	0					
ANR	1072905	Identifier	src		1072849	0					
ANR	1072906	CompoundStatement		9:23:195:195	1072849	1					
ANR	1072907	IfStatement	if ( DR ( src ) != 4 )		1072849	0					
ANR	1072908	Condition	DR ( src ) != 4	1956:6:62567:62578	1072849	0	True				
ANR	1072909	EqualityExpression	DR ( src ) != 4		1072849	0		!=			
ANR	1072910	CallExpression	DR ( src )		1072849	0					
ANR	1072911	Callee	DR		1072849	0					
ANR	1072912	Identifier	DR		1072849	0					
ANR	1072913	ArgumentList	src		1072849	1					
ANR	1072914	Argument	src		1072849	0					
ANR	1072915	Identifier	src		1072849	0					
ANR	1072916	PrimaryExpression	4		1072849	1					
ANR	1072917	ExpressionStatement	src_r = src	1957:3:62584:62595	1072849	1	True				
ANR	1072918	AssignmentExpression	src_r = src		1072849	0		=			
ANR	1072919	Identifier	src_r		1072849	0					
ANR	1072920	Identifier	src		1072849	1					
ANR	1072921	ElseStatement	else		1072849	0					
ANR	1072922	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( src ) | TA ( 0 ) | D ( TMP_REG2 ) , DR ( TMP_REG2 ) ) )"	1959:3:62607:62688	1072849	0	True				
ANR	1072923	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( src ) | TA ( 0 ) | D ( TMP_REG2 ) , DR ( TMP_REG2 ) ) )"		1072849	0					
ANR	1072924	Callee	FAIL_IF		1072849	0					
ANR	1072925	Identifier	FAIL_IF		1072849	0					
ANR	1072926	ArgumentList	"push_inst ( compiler , ADDU_W | S ( src ) | TA ( 0 ) | D ( TMP_REG2 ) , DR ( TMP_REG2 ) )"		1072849	1					
ANR	1072927	Argument	"push_inst ( compiler , ADDU_W | S ( src ) | TA ( 0 ) | D ( TMP_REG2 ) , DR ( TMP_REG2 ) )"		1072849	0					
ANR	1072928	CallExpression	"push_inst ( compiler , ADDU_W | S ( src ) | TA ( 0 ) | D ( TMP_REG2 ) , DR ( TMP_REG2 ) )"		1072849	0					
ANR	1072929	Callee	push_inst		1072849	0					
ANR	1072930	Identifier	push_inst		1072849	0					
ANR	1072931	ArgumentList	compiler		1072849	1					
ANR	1072932	Argument	compiler		1072849	0					
ANR	1072933	Identifier	compiler		1072849	0					
ANR	1072934	Argument	ADDU_W | S ( src ) | TA ( 0 ) | D ( TMP_REG2 )		1072849	1					
ANR	1072935	InclusiveOrExpression	ADDU_W | S ( src ) | TA ( 0 ) | D ( TMP_REG2 )		1072849	0		|			
ANR	1072936	Identifier	ADDU_W		1072849	0					
ANR	1072937	InclusiveOrExpression	S ( src ) | TA ( 0 ) | D ( TMP_REG2 )		1072849	1		|			
ANR	1072938	CallExpression	S ( src )		1072849	0					
ANR	1072939	Callee	S		1072849	0					
ANR	1072940	Identifier	S		1072849	0					
ANR	1072941	ArgumentList	src		1072849	1					
ANR	1072942	Argument	src		1072849	0					
ANR	1072943	Identifier	src		1072849	0					
ANR	1072944	InclusiveOrExpression	TA ( 0 ) | D ( TMP_REG2 )		1072849	1		|			
ANR	1072945	CallExpression	TA ( 0 )		1072849	0					
ANR	1072946	Callee	TA		1072849	0					
ANR	1072947	Identifier	TA		1072849	0					
ANR	1072948	ArgumentList	0		1072849	1					
ANR	1072949	Argument	0		1072849	0					
ANR	1072950	PrimaryExpression	0		1072849	0					
ANR	1072951	CallExpression	D ( TMP_REG2 )		1072849	1					
ANR	1072952	Callee	D		1072849	0					
ANR	1072953	Identifier	D		1072849	0					
ANR	1072954	ArgumentList	TMP_REG2		1072849	1					
ANR	1072955	Argument	TMP_REG2		1072849	0					
ANR	1072956	Identifier	TMP_REG2		1072849	0					
ANR	1072957	Argument	DR ( TMP_REG2 )		1072849	2					
ANR	1072958	CallExpression	DR ( TMP_REG2 )		1072849	0					
ANR	1072959	Callee	DR		1072849	0					
ANR	1072960	Identifier	DR		1072849	0					
ANR	1072961	ArgumentList	TMP_REG2		1072849	1					
ANR	1072962	Argument	TMP_REG2		1072849	0					
ANR	1072963	Identifier	TMP_REG2		1072849	0					
ANR	1072964	IfStatement	if ( type >= SLJIT_CALL0 )		1072849	6					
ANR	1072965	Condition	type >= SLJIT_CALL0	1962:5:62699:62717	1072849	0	True				
ANR	1072966	RelationalExpression	type >= SLJIT_CALL0		1072849	0		>=			
ANR	1072967	Identifier	type		1072849	0					
ANR	1072968	Identifier	SLJIT_CALL0		1072849	1					
ANR	1072969	CompoundStatement		16:26:356:356	1072849	1					
ANR	1072970	ExpressionStatement	SLJIT_ASSERT ( DR ( PIC_ADDR_REG ) == 25 && PIC_ADDR_REG == TMP_REG2 )	1963:2:62724:62788	1072849	0	True				
ANR	1072971	CallExpression	SLJIT_ASSERT ( DR ( PIC_ADDR_REG ) == 25 && PIC_ADDR_REG == TMP_REG2 )		1072849	0					
ANR	1072972	Callee	SLJIT_ASSERT		1072849	0					
ANR	1072973	Identifier	SLJIT_ASSERT		1072849	0					
ANR	1072974	ArgumentList	DR ( PIC_ADDR_REG ) == 25 && PIC_ADDR_REG == TMP_REG2		1072849	1					
ANR	1072975	Argument	DR ( PIC_ADDR_REG ) == 25 && PIC_ADDR_REG == TMP_REG2		1072849	0					
ANR	1072976	AndExpression	DR ( PIC_ADDR_REG ) == 25 && PIC_ADDR_REG == TMP_REG2		1072849	0		&&			
ANR	1072977	EqualityExpression	DR ( PIC_ADDR_REG ) == 25		1072849	0		==			
ANR	1072978	CallExpression	DR ( PIC_ADDR_REG )		1072849	0					
ANR	1072979	Callee	DR		1072849	0					
ANR	1072980	Identifier	DR		1072849	0					
ANR	1072981	ArgumentList	PIC_ADDR_REG		1072849	1					
ANR	1072982	Argument	PIC_ADDR_REG		1072849	0					
ANR	1072983	Identifier	PIC_ADDR_REG		1072849	0					
ANR	1072984	PrimaryExpression	25		1072849	1					
ANR	1072985	EqualityExpression	PIC_ADDR_REG == TMP_REG2		1072849	1		==			
ANR	1072986	Identifier	PIC_ADDR_REG		1072849	0					
ANR	1072987	Identifier	TMP_REG2		1072849	1					
ANR	1072988	IfStatement	if ( src & ( SLJIT_IMM | SLJIT_MEM ) )		1072849	1					
ANR	1072989	Condition	src & ( SLJIT_IMM | SLJIT_MEM )	1964:6:62796:62824	1072849	0	True				
ANR	1072990	BitAndExpression	src & ( SLJIT_IMM | SLJIT_MEM )		1072849	0		&			
ANR	1072991	Identifier	src		1072849	0					
ANR	1072992	InclusiveOrExpression	SLJIT_IMM | SLJIT_MEM		1072849	1		|			
ANR	1072993	Identifier	SLJIT_IMM		1072849	0					
ANR	1072994	Identifier	SLJIT_MEM		1072849	1					
ANR	1072995	CompoundStatement		18:37:463:463	1072849	1					
ANR	1072996	IfStatement	if ( src & SLJIT_IMM )		1072849	0					
ANR	1072997	Condition	src & SLJIT_IMM	1965:7:62836:62850	1072849	0	True				
ANR	1072998	BitAndExpression	src & SLJIT_IMM		1072849	0		&			
ANR	1072999	Identifier	src		1072849	0					
ANR	1073000	Identifier	SLJIT_IMM		1072849	1					
ANR	1073001	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , DR ( PIC_ADDR_REG ) , srcw ) )"	1966:4:62857:62914	1072849	1	True				
ANR	1073002	CallExpression	"FAIL_IF ( load_immediate ( compiler , DR ( PIC_ADDR_REG ) , srcw ) )"		1072849	0					
ANR	1073003	Callee	FAIL_IF		1072849	0					
ANR	1073004	Identifier	FAIL_IF		1072849	0					
ANR	1073005	ArgumentList	"load_immediate ( compiler , DR ( PIC_ADDR_REG ) , srcw )"		1072849	1					
ANR	1073006	Argument	"load_immediate ( compiler , DR ( PIC_ADDR_REG ) , srcw )"		1072849	0					
ANR	1073007	CallExpression	"load_immediate ( compiler , DR ( PIC_ADDR_REG ) , srcw )"		1072849	0					
ANR	1073008	Callee	load_immediate		1072849	0					
ANR	1073009	Identifier	load_immediate		1072849	0					
ANR	1073010	ArgumentList	compiler		1072849	1					
ANR	1073011	Argument	compiler		1072849	0					
ANR	1073012	Identifier	compiler		1072849	0					
ANR	1073013	Argument	DR ( PIC_ADDR_REG )		1072849	1					
ANR	1073014	CallExpression	DR ( PIC_ADDR_REG )		1072849	0					
ANR	1073015	Callee	DR		1072849	0					
ANR	1073016	Identifier	DR		1072849	0					
ANR	1073017	ArgumentList	PIC_ADDR_REG		1072849	1					
ANR	1073018	Argument	PIC_ADDR_REG		1072849	0					
ANR	1073019	Identifier	PIC_ADDR_REG		1072849	0					
ANR	1073020	Argument	srcw		1072849	2					
ANR	1073021	Identifier	srcw		1072849	0					
ANR	1073022	ElseStatement	else		1072849	0					
ANR	1073023	CompoundStatement		21:8:560:560	1072849	0					
ANR	1073024	ExpressionStatement	SLJIT_ASSERT ( src_r == TMP_REG2 && ( src & SLJIT_MEM ) )	1968:4:62930:62982	1072849	0	True				
ANR	1073025	CallExpression	SLJIT_ASSERT ( src_r == TMP_REG2 && ( src & SLJIT_MEM ) )		1072849	0					
ANR	1073026	Callee	SLJIT_ASSERT		1072849	0					
ANR	1073027	Identifier	SLJIT_ASSERT		1072849	0					
ANR	1073028	ArgumentList	src_r == TMP_REG2 && ( src & SLJIT_MEM )		1072849	1					
ANR	1073029	Argument	src_r == TMP_REG2 && ( src & SLJIT_MEM )		1072849	0					
ANR	1073030	AndExpression	src_r == TMP_REG2 && ( src & SLJIT_MEM )		1072849	0		&&			
ANR	1073031	EqualityExpression	src_r == TMP_REG2		1072849	0		==			
ANR	1073032	Identifier	src_r		1072849	0					
ANR	1073033	Identifier	TMP_REG2		1072849	1					
ANR	1073034	BitAndExpression	src & SLJIT_MEM		1072849	1		&			
ANR	1073035	Identifier	src		1072849	0					
ANR	1073036	Identifier	SLJIT_MEM		1072849	1					
ANR	1073037	ExpressionStatement	"FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw ) )"	1969:4:62988:63073	1072849	1	True				
ANR	1073038	CallExpression	"FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw ) )"		1072849	0					
ANR	1073039	Callee	FAIL_IF		1072849	0					
ANR	1073040	Identifier	FAIL_IF		1072849	0					
ANR	1073041	ArgumentList	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw )"		1072849	1					
ANR	1073042	Argument	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw )"		1072849	0					
ANR	1073043	CallExpression	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw )"		1072849	0					
ANR	1073044	Callee	emit_op		1072849	0					
ANR	1073045	Identifier	emit_op		1072849	0					
ANR	1073046	ArgumentList	compiler		1072849	1					
ANR	1073047	Argument	compiler		1072849	0					
ANR	1073048	Identifier	compiler		1072849	0					
ANR	1073049	Argument	SLJIT_MOV		1072849	1					
ANR	1073050	Identifier	SLJIT_MOV		1072849	0					
ANR	1073051	Argument	WORD_DATA		1072849	2					
ANR	1073052	Identifier	WORD_DATA		1072849	0					
ANR	1073053	Argument	TMP_REG2		1072849	3					
ANR	1073054	Identifier	TMP_REG2		1072849	0					
ANR	1073055	Argument	0		1072849	4					
ANR	1073056	PrimaryExpression	0		1072849	0					
ANR	1073057	Argument	TMP_REG1		1072849	5					
ANR	1073058	Identifier	TMP_REG1		1072849	0					
ANR	1073059	Argument	0		1072849	6					
ANR	1073060	PrimaryExpression	0		1072849	0					
ANR	1073061	Argument	src		1072849	7					
ANR	1073062	Identifier	src		1072849	0					
ANR	1073063	Argument	srcw		1072849	8					
ANR	1073064	Identifier	srcw		1072849	0					
ANR	1073065	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , JALR | S ( PIC_ADDR_REG ) | DA ( RETURN_ADDR_REG ) , UNMOVABLE_INS ) )"	1971:3:63083:63172	1072849	1	True				
ANR	1073066	CallExpression	"FAIL_IF ( push_inst ( compiler , JALR | S ( PIC_ADDR_REG ) | DA ( RETURN_ADDR_REG ) , UNMOVABLE_INS ) )"		1072849	0					
ANR	1073067	Callee	FAIL_IF		1072849	0					
ANR	1073068	Identifier	FAIL_IF		1072849	0					
ANR	1073069	ArgumentList	"push_inst ( compiler , JALR | S ( PIC_ADDR_REG ) | DA ( RETURN_ADDR_REG ) , UNMOVABLE_INS )"		1072849	1					
ANR	1073070	Argument	"push_inst ( compiler , JALR | S ( PIC_ADDR_REG ) | DA ( RETURN_ADDR_REG ) , UNMOVABLE_INS )"		1072849	0					
ANR	1073071	CallExpression	"push_inst ( compiler , JALR | S ( PIC_ADDR_REG ) | DA ( RETURN_ADDR_REG ) , UNMOVABLE_INS )"		1072849	0					
ANR	1073072	Callee	push_inst		1072849	0					
ANR	1073073	Identifier	push_inst		1072849	0					
ANR	1073074	ArgumentList	compiler		1072849	1					
ANR	1073075	Argument	compiler		1072849	0					
ANR	1073076	Identifier	compiler		1072849	0					
ANR	1073077	Argument	JALR | S ( PIC_ADDR_REG ) | DA ( RETURN_ADDR_REG )		1072849	1					
ANR	1073078	InclusiveOrExpression	JALR | S ( PIC_ADDR_REG ) | DA ( RETURN_ADDR_REG )		1072849	0		|			
ANR	1073079	Identifier	JALR		1072849	0					
ANR	1073080	InclusiveOrExpression	S ( PIC_ADDR_REG ) | DA ( RETURN_ADDR_REG )		1072849	1		|			
ANR	1073081	CallExpression	S ( PIC_ADDR_REG )		1072849	0					
ANR	1073082	Callee	S		1072849	0					
ANR	1073083	Identifier	S		1072849	0					
ANR	1073084	ArgumentList	PIC_ADDR_REG		1072849	1					
ANR	1073085	Argument	PIC_ADDR_REG		1072849	0					
ANR	1073086	Identifier	PIC_ADDR_REG		1072849	0					
ANR	1073087	CallExpression	DA ( RETURN_ADDR_REG )		1072849	1					
ANR	1073088	Callee	DA		1072849	0					
ANR	1073089	Identifier	DA		1072849	0					
ANR	1073090	ArgumentList	RETURN_ADDR_REG		1072849	1					
ANR	1073091	Argument	RETURN_ADDR_REG		1072849	0					
ANR	1073092	Identifier	RETURN_ADDR_REG		1072849	0					
ANR	1073093	Argument	UNMOVABLE_INS		1072849	2					
ANR	1073094	Identifier	UNMOVABLE_INS		1072849	0					
ANR	1073095	ReturnStatement	"return push_inst ( compiler , ADDU_W | S ( SLJIT_R0 ) | TA ( 0 ) | DA ( 4 ) , UNMOVABLE_INS ) ;"	1973:3:63228:63307	1072849	2	True				
ANR	1073096	CallExpression	"push_inst ( compiler , ADDU_W | S ( SLJIT_R0 ) | TA ( 0 ) | DA ( 4 ) , UNMOVABLE_INS )"		1072849	0					
ANR	1073097	Callee	push_inst		1072849	0					
ANR	1073098	Identifier	push_inst		1072849	0					
ANR	1073099	ArgumentList	compiler		1072849	1					
ANR	1073100	Argument	compiler		1072849	0					
ANR	1073101	Identifier	compiler		1072849	0					
ANR	1073102	Argument	ADDU_W | S ( SLJIT_R0 ) | TA ( 0 ) | DA ( 4 )		1072849	1					
ANR	1073103	InclusiveOrExpression	ADDU_W | S ( SLJIT_R0 ) | TA ( 0 ) | DA ( 4 )		1072849	0		|			
ANR	1073104	Identifier	ADDU_W		1072849	0					
ANR	1073105	InclusiveOrExpression	S ( SLJIT_R0 ) | TA ( 0 ) | DA ( 4 )		1072849	1		|			
ANR	1073106	CallExpression	S ( SLJIT_R0 )		1072849	0					
ANR	1073107	Callee	S		1072849	0					
ANR	1073108	Identifier	S		1072849	0					
ANR	1073109	ArgumentList	SLJIT_R0		1072849	1					
ANR	1073110	Argument	SLJIT_R0		1072849	0					
ANR	1073111	Identifier	SLJIT_R0		1072849	0					
ANR	1073112	InclusiveOrExpression	TA ( 0 ) | DA ( 4 )		1072849	1		|			
ANR	1073113	CallExpression	TA ( 0 )		1072849	0					
ANR	1073114	Callee	TA		1072849	0					
ANR	1073115	Identifier	TA		1072849	0					
ANR	1073116	ArgumentList	0		1072849	1					
ANR	1073117	Argument	0		1072849	0					
ANR	1073118	PrimaryExpression	0		1072849	0					
ANR	1073119	CallExpression	DA ( 4 )		1072849	1					
ANR	1073120	Callee	DA		1072849	0					
ANR	1073121	Identifier	DA		1072849	0					
ANR	1073122	ArgumentList	4		1072849	1					
ANR	1073123	Argument	4		1072849	0					
ANR	1073124	PrimaryExpression	4		1072849	0					
ANR	1073125	Argument	UNMOVABLE_INS		1072849	2					
ANR	1073126	Identifier	UNMOVABLE_INS		1072849	0					
ANR	1073127	IfStatement	if ( type >= SLJIT_CALL1 )		1072849	2					
ANR	1073128	Condition	type >= SLJIT_CALL1	1977:6:63344:63362	1072849	0	True				
ANR	1073129	RelationalExpression	type >= SLJIT_CALL1		1072849	0		>=			
ANR	1073130	Identifier	type		1072849	0					
ANR	1073131	Identifier	SLJIT_CALL1		1072849	1					
ANR	1073132	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( SLJIT_R0 ) | TA ( 0 ) | DA ( 4 ) , 4 ) )"	1978:3:63368:63437	1072849	1	True				
ANR	1073133	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDU_W | S ( SLJIT_R0 ) | TA ( 0 ) | DA ( 4 ) , 4 ) )"		1072849	0					
ANR	1073134	Callee	FAIL_IF		1072849	0					
ANR	1073135	Identifier	FAIL_IF		1072849	0					
ANR	1073136	ArgumentList	"push_inst ( compiler , ADDU_W | S ( SLJIT_R0 ) | TA ( 0 ) | DA ( 4 ) , 4 )"		1072849	1					
ANR	1073137	Argument	"push_inst ( compiler , ADDU_W | S ( SLJIT_R0 ) | TA ( 0 ) | DA ( 4 ) , 4 )"		1072849	0					
ANR	1073138	CallExpression	"push_inst ( compiler , ADDU_W | S ( SLJIT_R0 ) | TA ( 0 ) | DA ( 4 ) , 4 )"		1072849	0					
ANR	1073139	Callee	push_inst		1072849	0					
ANR	1073140	Identifier	push_inst		1072849	0					
ANR	1073141	ArgumentList	compiler		1072849	1					
ANR	1073142	Argument	compiler		1072849	0					
ANR	1073143	Identifier	compiler		1072849	0					
ANR	1073144	Argument	ADDU_W | S ( SLJIT_R0 ) | TA ( 0 ) | DA ( 4 )		1072849	1					
ANR	1073145	InclusiveOrExpression	ADDU_W | S ( SLJIT_R0 ) | TA ( 0 ) | DA ( 4 )		1072849	0		|			
ANR	1073146	Identifier	ADDU_W		1072849	0					
ANR	1073147	InclusiveOrExpression	S ( SLJIT_R0 ) | TA ( 0 ) | DA ( 4 )		1072849	1		|			
ANR	1073148	CallExpression	S ( SLJIT_R0 )		1072849	0					
ANR	1073149	Callee	S		1072849	0					
ANR	1073150	Identifier	S		1072849	0					
ANR	1073151	ArgumentList	SLJIT_R0		1072849	1					
ANR	1073152	Argument	SLJIT_R0		1072849	0					
ANR	1073153	Identifier	SLJIT_R0		1072849	0					
ANR	1073154	InclusiveOrExpression	TA ( 0 ) | DA ( 4 )		1072849	1		|			
ANR	1073155	CallExpression	TA ( 0 )		1072849	0					
ANR	1073156	Callee	TA		1072849	0					
ANR	1073157	Identifier	TA		1072849	0					
ANR	1073158	ArgumentList	0		1072849	1					
ANR	1073159	Argument	0		1072849	0					
ANR	1073160	PrimaryExpression	0		1072849	0					
ANR	1073161	CallExpression	DA ( 4 )		1072849	1					
ANR	1073162	Callee	DA		1072849	0					
ANR	1073163	Identifier	DA		1072849	0					
ANR	1073164	ArgumentList	4		1072849	1					
ANR	1073165	Argument	4		1072849	0					
ANR	1073166	PrimaryExpression	4		1072849	0					
ANR	1073167	Argument	4		1072849	2					
ANR	1073168	PrimaryExpression	4		1072849	0					
ANR	1073169	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , JALR | S ( src_r ) | DA ( RETURN_ADDR_REG ) , UNMOVABLE_INS ) )"	1979:2:63441:63523	1072849	3	True				
ANR	1073170	CallExpression	"FAIL_IF ( push_inst ( compiler , JALR | S ( src_r ) | DA ( RETURN_ADDR_REG ) , UNMOVABLE_INS ) )"		1072849	0					
ANR	1073171	Callee	FAIL_IF		1072849	0					
ANR	1073172	Identifier	FAIL_IF		1072849	0					
ANR	1073173	ArgumentList	"push_inst ( compiler , JALR | S ( src_r ) | DA ( RETURN_ADDR_REG ) , UNMOVABLE_INS )"		1072849	1					
ANR	1073174	Argument	"push_inst ( compiler , JALR | S ( src_r ) | DA ( RETURN_ADDR_REG ) , UNMOVABLE_INS )"		1072849	0					
ANR	1073175	CallExpression	"push_inst ( compiler , JALR | S ( src_r ) | DA ( RETURN_ADDR_REG ) , UNMOVABLE_INS )"		1072849	0					
ANR	1073176	Callee	push_inst		1072849	0					
ANR	1073177	Identifier	push_inst		1072849	0					
ANR	1073178	ArgumentList	compiler		1072849	1					
ANR	1073179	Argument	compiler		1072849	0					
ANR	1073180	Identifier	compiler		1072849	0					
ANR	1073181	Argument	JALR | S ( src_r ) | DA ( RETURN_ADDR_REG )		1072849	1					
ANR	1073182	InclusiveOrExpression	JALR | S ( src_r ) | DA ( RETURN_ADDR_REG )		1072849	0		|			
ANR	1073183	Identifier	JALR		1072849	0					
ANR	1073184	InclusiveOrExpression	S ( src_r ) | DA ( RETURN_ADDR_REG )		1072849	1		|			
ANR	1073185	CallExpression	S ( src_r )		1072849	0					
ANR	1073186	Callee	S		1072849	0					
ANR	1073187	Identifier	S		1072849	0					
ANR	1073188	ArgumentList	src_r		1072849	1					
ANR	1073189	Argument	src_r		1072849	0					
ANR	1073190	Identifier	src_r		1072849	0					
ANR	1073191	CallExpression	DA ( RETURN_ADDR_REG )		1072849	1					
ANR	1073192	Callee	DA		1072849	0					
ANR	1073193	Identifier	DA		1072849	0					
ANR	1073194	ArgumentList	RETURN_ADDR_REG		1072849	1					
ANR	1073195	Argument	RETURN_ADDR_REG		1072849	0					
ANR	1073196	Identifier	RETURN_ADDR_REG		1072849	0					
ANR	1073197	Argument	UNMOVABLE_INS		1072849	2					
ANR	1073198	Identifier	UNMOVABLE_INS		1072849	0					
ANR	1073199	ReturnStatement	"return push_inst ( compiler , ADDU_W | S ( src_r ) | TA ( 0 ) | D ( PIC_ADDR_REG ) , UNMOVABLE_INS ) ;"	1980:2:63527:63613	1072849	4	True				
ANR	1073200	CallExpression	"push_inst ( compiler , ADDU_W | S ( src_r ) | TA ( 0 ) | D ( PIC_ADDR_REG ) , UNMOVABLE_INS )"		1072849	0					
ANR	1073201	Callee	push_inst		1072849	0					
ANR	1073202	Identifier	push_inst		1072849	0					
ANR	1073203	ArgumentList	compiler		1072849	1					
ANR	1073204	Argument	compiler		1072849	0					
ANR	1073205	Identifier	compiler		1072849	0					
ANR	1073206	Argument	ADDU_W | S ( src_r ) | TA ( 0 ) | D ( PIC_ADDR_REG )		1072849	1					
ANR	1073207	InclusiveOrExpression	ADDU_W | S ( src_r ) | TA ( 0 ) | D ( PIC_ADDR_REG )		1072849	0		|			
ANR	1073208	Identifier	ADDU_W		1072849	0					
ANR	1073209	InclusiveOrExpression	S ( src_r ) | TA ( 0 ) | D ( PIC_ADDR_REG )		1072849	1		|			
ANR	1073210	CallExpression	S ( src_r )		1072849	0					
ANR	1073211	Callee	S		1072849	0					
ANR	1073212	Identifier	S		1072849	0					
ANR	1073213	ArgumentList	src_r		1072849	1					
ANR	1073214	Argument	src_r		1072849	0					
ANR	1073215	Identifier	src_r		1072849	0					
ANR	1073216	InclusiveOrExpression	TA ( 0 ) | D ( PIC_ADDR_REG )		1072849	1		|			
ANR	1073217	CallExpression	TA ( 0 )		1072849	0					
ANR	1073218	Callee	TA		1072849	0					
ANR	1073219	Identifier	TA		1072849	0					
ANR	1073220	ArgumentList	0		1072849	1					
ANR	1073221	Argument	0		1072849	0					
ANR	1073222	PrimaryExpression	0		1072849	0					
ANR	1073223	CallExpression	D ( PIC_ADDR_REG )		1072849	1					
ANR	1073224	Callee	D		1072849	0					
ANR	1073225	Identifier	D		1072849	0					
ANR	1073226	ArgumentList	PIC_ADDR_REG		1072849	1					
ANR	1073227	Argument	PIC_ADDR_REG		1072849	0					
ANR	1073228	Identifier	PIC_ADDR_REG		1072849	0					
ANR	1073229	Argument	UNMOVABLE_INS		1072849	2					
ANR	1073230	Identifier	UNMOVABLE_INS		1072849	0					
ANR	1073231	IfStatement	if ( src & SLJIT_IMM )		1072849	7					
ANR	1073232	Condition	src & SLJIT_IMM	1983:5:63624:63638	1072849	0	True				
ANR	1073233	BitAndExpression	src & SLJIT_IMM		1072849	0		&			
ANR	1073234	Identifier	src		1072849	0					
ANR	1073235	Identifier	SLJIT_IMM		1072849	1					
ANR	1073236	CompoundStatement		37:22:1277:1277	1072849	1					
ANR	1073237	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	1984:2:63645:63720	1072849	0	True				
ANR	1073238	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1072849	0		=			
ANR	1073239	Identifier	jump		1072849	0					
ANR	1073240	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1072849	1					
ANR	1073241	CastTarget	struct sljit_jump *		1072849	0					
ANR	1073242	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1072849	1					
ANR	1073243	Callee	ensure_abuf		1072849	0					
ANR	1073244	Identifier	ensure_abuf		1072849	0					
ANR	1073245	ArgumentList	compiler		1072849	1					
ANR	1073246	Argument	compiler		1072849	0					
ANR	1073247	Identifier	compiler		1072849	0					
ANR	1073248	Argument	sizeof ( struct sljit_jump )		1072849	1					
ANR	1073249	SizeofExpression	sizeof ( struct sljit_jump )		1072849	0					
ANR	1073250	Sizeof	sizeof		1072849	0					
ANR	1073251	SizeofOperand	struct sljit_jump		1072849	1					
ANR	1073252	ExpressionStatement	FAIL_IF ( ! jump )	1985:2:63724:63738	1072849	1	True				
ANR	1073253	CallExpression	FAIL_IF ( ! jump )		1072849	0					
ANR	1073254	Callee	FAIL_IF		1072849	0					
ANR	1073255	Identifier	FAIL_IF		1072849	0					
ANR	1073256	ArgumentList	! jump		1072849	1					
ANR	1073257	Argument	! jump		1072849	0					
ANR	1073258	UnaryOperationExpression	! jump		1072849	0					
ANR	1073259	UnaryOperator	!		1072849	0					
ANR	1073260	Identifier	jump		1072849	1					
ANR	1073261	ExpressionStatement	"set_jump ( jump , compiler , JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_JAL : 0 ) )"	1986:2:63742:63820	1072849	2	True				
ANR	1073262	CallExpression	"set_jump ( jump , compiler , JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_JAL : 0 ) )"		1072849	0					
ANR	1073263	Callee	set_jump		1072849	0					
ANR	1073264	Identifier	set_jump		1072849	0					
ANR	1073265	ArgumentList	jump		1072849	1					
ANR	1073266	Argument	jump		1072849	0					
ANR	1073267	Identifier	jump		1072849	0					
ANR	1073268	Argument	compiler		1072849	1					
ANR	1073269	Identifier	compiler		1072849	0					
ANR	1073270	Argument	JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_JAL : 0 )		1072849	2					
ANR	1073271	InclusiveOrExpression	JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_JAL : 0 )		1072849	0		|			
ANR	1073272	Identifier	JUMP_ADDR		1072849	0					
ANR	1073273	ConditionalExpression	( type >= SLJIT_FAST_CALL ) ? IS_JAL : 0		1072849	1					
ANR	1073274	Condition	type >= SLJIT_FAST_CALL		1072849	0					
ANR	1073275	RelationalExpression	type >= SLJIT_FAST_CALL		1072849	0		>=			
ANR	1073276	Identifier	type		1072849	0					
ANR	1073277	Identifier	SLJIT_FAST_CALL		1072849	1					
ANR	1073278	Identifier	IS_JAL		1072849	1					
ANR	1073279	PrimaryExpression	0		1072849	2					
ANR	1073280	ExpressionStatement	jump -> u . target = srcw	1987:2:63824:63845	1072849	3	True				
ANR	1073281	AssignmentExpression	jump -> u . target = srcw		1072849	0		=			
ANR	1073282	MemberAccess	jump -> u . target		1072849	0					
ANR	1073283	PtrMemberAccess	jump -> u		1072849	0					
ANR	1073284	Identifier	jump		1072849	0					
ANR	1073285	Identifier	u		1072849	1					
ANR	1073286	Identifier	target		1072849	1					
ANR	1073287	Identifier	srcw		1072849	1					
ANR	1073288	IfStatement	if ( compiler -> delay_slot != UNMOVABLE_INS )		1072849	4					
ANR	1073289	Condition	compiler -> delay_slot != UNMOVABLE_INS	1989:6:63854:63890	1072849	0	True				
ANR	1073290	EqualityExpression	compiler -> delay_slot != UNMOVABLE_INS		1072849	0		!=			
ANR	1073291	PtrMemberAccess	compiler -> delay_slot		1072849	0					
ANR	1073292	Identifier	compiler		1072849	0					
ANR	1073293	Identifier	delay_slot		1072849	1					
ANR	1073294	Identifier	UNMOVABLE_INS		1072849	1					
ANR	1073295	ExpressionStatement	jump -> flags |= IS_MOVABLE	1990:3:63896:63921	1072849	1	True				
ANR	1073296	AssignmentExpression	jump -> flags |= IS_MOVABLE		1072849	0		|=			
ANR	1073297	PtrMemberAccess	jump -> flags		1072849	0					
ANR	1073298	Identifier	jump		1072849	0					
ANR	1073299	Identifier	flags		1072849	1					
ANR	1073300	Identifier	IS_MOVABLE		1072849	1					
ANR	1073301	ExpressionStatement	"FAIL_IF ( emit_const ( compiler , TMP_REG2 , 0 ) )"	1992:2:63926:63968	1072849	5	True				
ANR	1073302	CallExpression	"FAIL_IF ( emit_const ( compiler , TMP_REG2 , 0 ) )"		1072849	0					
ANR	1073303	Callee	FAIL_IF		1072849	0					
ANR	1073304	Identifier	FAIL_IF		1072849	0					
ANR	1073305	ArgumentList	"emit_const ( compiler , TMP_REG2 , 0 )"		1072849	1					
ANR	1073306	Argument	"emit_const ( compiler , TMP_REG2 , 0 )"		1072849	0					
ANR	1073307	CallExpression	"emit_const ( compiler , TMP_REG2 , 0 )"		1072849	0					
ANR	1073308	Callee	emit_const		1072849	0					
ANR	1073309	Identifier	emit_const		1072849	0					
ANR	1073310	ArgumentList	compiler		1072849	1					
ANR	1073311	Argument	compiler		1072849	0					
ANR	1073312	Identifier	compiler		1072849	0					
ANR	1073313	Argument	TMP_REG2		1072849	1					
ANR	1073314	Identifier	TMP_REG2		1072849	0					
ANR	1073315	Argument	0		1072849	2					
ANR	1073316	PrimaryExpression	0		1072849	0					
ANR	1073317	ElseStatement	else		1072849	0					
ANR	1073318	IfStatement	if ( src & SLJIT_MEM )		1072849	0					
ANR	1073319	Condition	src & SLJIT_MEM	1994:10:63983:63997	1072849	0	True				
ANR	1073320	BitAndExpression	src & SLJIT_MEM		1072849	0		&			
ANR	1073321	Identifier	src		1072849	0					
ANR	1073322	Identifier	SLJIT_MEM		1072849	1					
ANR	1073323	ExpressionStatement	"FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw ) )"	1995:2:64002:64087	1072849	1	True				
ANR	1073324	CallExpression	"FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw ) )"		1072849	0					
ANR	1073325	Callee	FAIL_IF		1072849	0					
ANR	1073326	Identifier	FAIL_IF		1072849	0					
ANR	1073327	ArgumentList	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw )"		1072849	1					
ANR	1073328	Argument	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw )"		1072849	0					
ANR	1073329	CallExpression	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw )"		1072849	0					
ANR	1073330	Callee	emit_op		1072849	0					
ANR	1073331	Identifier	emit_op		1072849	0					
ANR	1073332	ArgumentList	compiler		1072849	1					
ANR	1073333	Argument	compiler		1072849	0					
ANR	1073334	Identifier	compiler		1072849	0					
ANR	1073335	Argument	SLJIT_MOV		1072849	1					
ANR	1073336	Identifier	SLJIT_MOV		1072849	0					
ANR	1073337	Argument	WORD_DATA		1072849	2					
ANR	1073338	Identifier	WORD_DATA		1072849	0					
ANR	1073339	Argument	TMP_REG2		1072849	3					
ANR	1073340	Identifier	TMP_REG2		1072849	0					
ANR	1073341	Argument	0		1072849	4					
ANR	1073342	PrimaryExpression	0		1072849	0					
ANR	1073343	Argument	TMP_REG1		1072849	5					
ANR	1073344	Identifier	TMP_REG1		1072849	0					
ANR	1073345	Argument	0		1072849	6					
ANR	1073346	PrimaryExpression	0		1072849	0					
ANR	1073347	Argument	src		1072849	7					
ANR	1073348	Identifier	src		1072849	0					
ANR	1073349	Argument	srcw		1072849	8					
ANR	1073350	Identifier	srcw		1072849	0					
ANR	1073351	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , JR | S ( src_r ) , UNMOVABLE_INS ) )"	1997:1:64091:64149	1072849	8	True				
ANR	1073352	CallExpression	"FAIL_IF ( push_inst ( compiler , JR | S ( src_r ) , UNMOVABLE_INS ) )"		1072849	0					
ANR	1073353	Callee	FAIL_IF		1072849	0					
ANR	1073354	Identifier	FAIL_IF		1072849	0					
ANR	1073355	ArgumentList	"push_inst ( compiler , JR | S ( src_r ) , UNMOVABLE_INS )"		1072849	1					
ANR	1073356	Argument	"push_inst ( compiler , JR | S ( src_r ) , UNMOVABLE_INS )"		1072849	0					
ANR	1073357	CallExpression	"push_inst ( compiler , JR | S ( src_r ) , UNMOVABLE_INS )"		1072849	0					
ANR	1073358	Callee	push_inst		1072849	0					
ANR	1073359	Identifier	push_inst		1072849	0					
ANR	1073360	ArgumentList	compiler		1072849	1					
ANR	1073361	Argument	compiler		1072849	0					
ANR	1073362	Identifier	compiler		1072849	0					
ANR	1073363	Argument	JR | S ( src_r )		1072849	1					
ANR	1073364	InclusiveOrExpression	JR | S ( src_r )		1072849	0		|			
ANR	1073365	Identifier	JR		1072849	0					
ANR	1073366	CallExpression	S ( src_r )		1072849	1					
ANR	1073367	Callee	S		1072849	0					
ANR	1073368	Identifier	S		1072849	0					
ANR	1073369	ArgumentList	src_r		1072849	1					
ANR	1073370	Argument	src_r		1072849	0					
ANR	1073371	Identifier	src_r		1072849	0					
ANR	1073372	Argument	UNMOVABLE_INS		1072849	2					
ANR	1073373	Identifier	UNMOVABLE_INS		1072849	0					
ANR	1073374	IfStatement	if ( jump )		1072849	9					
ANR	1073375	Condition	jump	1998:5:64156:64159	1072849	0	True				
ANR	1073376	Identifier	jump		1072849	0					
ANR	1073377	ExpressionStatement	jump -> addr = compiler -> size	1999:2:64164:64191	1072849	1	True				
ANR	1073378	AssignmentExpression	jump -> addr = compiler -> size		1072849	0		=			
ANR	1073379	PtrMemberAccess	jump -> addr		1072849	0					
ANR	1073380	Identifier	jump		1072849	0					
ANR	1073381	Identifier	addr		1072849	1					
ANR	1073382	PtrMemberAccess	compiler -> size		1072849	1					
ANR	1073383	Identifier	compiler		1072849	0					
ANR	1073384	Identifier	size		1072849	1					
ANR	1073385	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , NOP , UNMOVABLE_INS ) )"	2000:1:64194:64242	1072849	10	True				
ANR	1073386	CallExpression	"FAIL_IF ( push_inst ( compiler , NOP , UNMOVABLE_INS ) )"		1072849	0					
ANR	1073387	Callee	FAIL_IF		1072849	0					
ANR	1073388	Identifier	FAIL_IF		1072849	0					
ANR	1073389	ArgumentList	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1072849	1					
ANR	1073390	Argument	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1072849	0					
ANR	1073391	CallExpression	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1072849	0					
ANR	1073392	Callee	push_inst		1072849	0					
ANR	1073393	Identifier	push_inst		1072849	0					
ANR	1073394	ArgumentList	compiler		1072849	1					
ANR	1073395	Argument	compiler		1072849	0					
ANR	1073396	Identifier	compiler		1072849	0					
ANR	1073397	Argument	NOP		1072849	1					
ANR	1073398	Identifier	NOP		1072849	0					
ANR	1073399	Argument	UNMOVABLE_INS		1072849	2					
ANR	1073400	Identifier	UNMOVABLE_INS		1072849	0					
ANR	1073401	ReturnStatement	return SLJIT_SUCCESS ;	2001:1:64245:64265	1072849	11	True				
ANR	1073402	Identifier	SLJIT_SUCCESS		1072849	0					
ANR	1073403	ReturnType	undef JUMP_LENGTH undef BR_Z undef BR_NZ undef BR_T undef BR_F undef FLOAT_DATA undef FMT SLJIT_API_FUNC_ATTRIBUTE sljit_si		1072849	1					
ANR	1073404	Identifier	sljit_emit_ijump		1072849	2					
ANR	1073405	ParameterList	"struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw"		1072849	3					
ANR	1073406	Parameter	struct sljit_compiler * compiler	1946:51:62286:62316	1072849	0	True				
ANR	1073407	ParameterType	struct sljit_compiler *		1072849	0					
ANR	1073408	Identifier	compiler		1072849	1					
ANR	1073409	Parameter	sljit_si type	1946:84:62319:62331	1072849	1	True				
ANR	1073410	ParameterType	sljit_si		1072849	0					
ANR	1073411	Identifier	type		1072849	1					
ANR	1073412	Parameter	sljit_si src	1946:99:62334:62345	1072849	2	True				
ANR	1073413	ParameterType	sljit_si		1072849	0					
ANR	1073414	Identifier	src		1072849	1					
ANR	1073415	Parameter	sljit_sw srcw	1946:113:62348:62360	1072849	3	True				
ANR	1073416	ParameterType	sljit_sw		1072849	0					
ANR	1073417	Identifier	srcw		1072849	1					
ANR	1073418	CFGEntryNode	ENTRY		1072849		True				
ANR	1073419	CFGExitNode	EXIT		1072849		True				
ANR	1073420	Symbol	TMP_REG2		1072849						
ANR	1073421	Symbol	check_sljit_emit_ijump		1072849						
ANR	1073422	Symbol	TMP_REG1		1072849						
ANR	1073423	Symbol	D		1072849						
ANR	1073424	Symbol	* jump		1072849						
ANR	1073425	Symbol	ADDU_W		1072849						
ANR	1073426	Symbol	SLJIT_MOV		1072849						
ANR	1073427	Symbol	jump -> u		1072849						
ANR	1073428	Symbol	SLJIT_MEM		1072849						
ANR	1073429	Symbol	RETURN_ADDR_REG		1072849						
ANR	1073430	Symbol	jump -> flags		1072849						
ANR	1073431	Symbol	JR		1072849						
ANR	1073432	Symbol	JUMP_ADDR		1072849						
ANR	1073433	Symbol	* compiler		1072849						
ANR	1073434	Symbol	type		1072849						
ANR	1073435	Symbol	DR		1072849						
ANR	1073436	Symbol	SLJIT_R0		1072849						
ANR	1073437	Symbol	SLJIT_IMM		1072849						
ANR	1073438	Symbol	S		1072849						
ANR	1073439	Symbol	load_immediate		1072849						
ANR	1073440	Symbol	SLJIT_FAST_CALL		1072849						
ANR	1073441	Symbol	compiler		1072849						
ANR	1073442	Symbol	src_r		1072849						
ANR	1073443	Symbol	WORD_DATA		1072849						
ANR	1073444	Symbol	emit_op		1072849						
ANR	1073445	Symbol	jump		1072849						
ANR	1073446	Symbol	JALR		1072849						
ANR	1073447	Symbol	push_inst		1072849						
ANR	1073448	Symbol	NULL		1072849						
ANR	1073449	Symbol	FAST_IS_REG		1072849						
ANR	1073450	Symbol	IS_MOVABLE		1072849						
ANR	1073451	Symbol	src		1072849						
ANR	1073452	Symbol	srcw		1072849						
ANR	1073453	Symbol	SLJIT_CALL0		1072849						
ANR	1073454	Symbol	UNMOVABLE_INS		1072849						
ANR	1073455	Symbol	jump -> addr		1072849						
ANR	1073456	Symbol	SLJIT_SUCCESS		1072849						
ANR	1073457	Symbol	ensure_abuf		1072849						
ANR	1073458	Symbol	TA		1072849						
ANR	1073459	Symbol	NOP		1072849						
ANR	1073460	Symbol	IS_JAL		1072849						
ANR	1073461	Symbol	compiler -> size		1072849						
ANR	1073462	Symbol	jump -> u . target		1072849						
ANR	1073463	Symbol	SLJIT_CALL1		1072849						
ANR	1073464	Symbol	emit_const		1072849						
ANR	1073465	Symbol	compiler -> delay_slot		1072849						
ANR	1073466	Symbol	PIC_ADDR_REG		1072849						
ANR	1073467	Symbol	DA		1072849						
ANR	1073468	Function	sljit_emit_op_flags	2004:0:64270:67574							
ANR	1073469	FunctionDef	"sljit_emit_op_flags (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type)"		1073468	0					
ANR	1073470	CompoundStatement		2008:0:64446:67574	1073468	0					
ANR	1073471	IdentifierDeclStatement	"sljit_si sugg_dst_ar , dst_ar ;"	2009:1:64449:64477	1073468	0	True				
ANR	1073472	IdentifierDecl	sugg_dst_ar		1073468	0					
ANR	1073473	IdentifierDeclType	sljit_si		1073468	0					
ANR	1073474	Identifier	sugg_dst_ar		1073468	1					
ANR	1073475	IdentifierDecl	dst_ar		1073468	1					
ANR	1073476	IdentifierDeclType	sljit_si		1073468	0					
ANR	1073477	Identifier	dst_ar		1073468	1					
ANR	1073478	IdentifierDeclStatement	sljit_si flags = GET_ALL_FLAGS ( op ) ;	2010:1:64480:64514	1073468	1	True				
ANR	1073479	IdentifierDecl	flags = GET_ALL_FLAGS ( op )		1073468	0					
ANR	1073480	IdentifierDeclType	sljit_si		1073468	0					
ANR	1073481	Identifier	flags		1073468	1					
ANR	1073482	AssignmentExpression	flags = GET_ALL_FLAGS ( op )		1073468	2		=			
ANR	1073483	Identifier	flags		1073468	0					
ANR	1073484	CallExpression	GET_ALL_FLAGS ( op )		1073468	1					
ANR	1073485	Callee	GET_ALL_FLAGS		1073468	0					
ANR	1073486	Identifier	GET_ALL_FLAGS		1073468	0					
ANR	1073487	ArgumentList	op		1073468	1					
ANR	1073488	Argument	op		1073468	0					
ANR	1073489	Identifier	op		1073468	0					
ANR	1073490	Statement	define	2012:2:64577:64582	1073468	2	True				
ANR	1073491	Statement	mem_type	2012:9:64584:64591	1073468	3	True				
ANR	1073492	Statement	WORD_DATA	2012:18:64593:64601	1073468	4	True				
ANR	1073493	ExpressionStatement	CHECK_ERROR ( )	2017:1:64699:64712	1073468	5	True				
ANR	1073494	CallExpression	CHECK_ERROR ( )		1073468	0					
ANR	1073495	Callee	CHECK_ERROR		1073468	0					
ANR	1073496	Identifier	CHECK_ERROR		1073468	0					
ANR	1073497	ArgumentList			1073468	1					
ANR	1073498	ExpressionStatement	"CHECK ( check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type ) )"	2018:1:64715:64789	1073468	6	True				
ANR	1073499	CallExpression	"CHECK ( check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type ) )"		1073468	0					
ANR	1073500	Callee	CHECK		1073468	0					
ANR	1073501	Identifier	CHECK		1073468	0					
ANR	1073502	ArgumentList	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1073468	1					
ANR	1073503	Argument	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1073468	0					
ANR	1073504	CallExpression	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1073468	0					
ANR	1073505	Callee	check_sljit_emit_op_flags		1073468	0					
ANR	1073506	Identifier	check_sljit_emit_op_flags		1073468	0					
ANR	1073507	ArgumentList	compiler		1073468	1					
ANR	1073508	Argument	compiler		1073468	0					
ANR	1073509	Identifier	compiler		1073468	0					
ANR	1073510	Argument	op		1073468	1					
ANR	1073511	Identifier	op		1073468	0					
ANR	1073512	Argument	dst		1073468	2					
ANR	1073513	Identifier	dst		1073468	0					
ANR	1073514	Argument	dstw		1073468	3					
ANR	1073515	Identifier	dstw		1073468	0					
ANR	1073516	Argument	src		1073468	4					
ANR	1073517	Identifier	src		1073468	0					
ANR	1073518	Argument	srcw		1073468	5					
ANR	1073519	Identifier	srcw		1073468	0					
ANR	1073520	Argument	type		1073468	6					
ANR	1073521	Identifier	type		1073468	0					
ANR	1073522	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2019:1:64792:64822	1073468	7	True				
ANR	1073523	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1073468	0					
ANR	1073524	Callee	ADJUST_LOCAL_OFFSET		1073468	0					
ANR	1073525	Identifier	ADJUST_LOCAL_OFFSET		1073468	0					
ANR	1073526	ArgumentList	dst		1073468	1					
ANR	1073527	Argument	dst		1073468	0					
ANR	1073528	Identifier	dst		1073468	0					
ANR	1073529	Argument	dstw		1073468	1					
ANR	1073530	Identifier	dstw		1073468	0					
ANR	1073531	IfStatement	if ( dst == SLJIT_UNUSED )		1073468	8					
ANR	1073532	Condition	dst == SLJIT_UNUSED	2021:5:64830:64848	1073468	0	True				
ANR	1073533	EqualityExpression	dst == SLJIT_UNUSED		1073468	0		==			
ANR	1073534	Identifier	dst		1073468	0					
ANR	1073535	Identifier	SLJIT_UNUSED		1073468	1					
ANR	1073536	ReturnStatement	return SLJIT_SUCCESS ;	2022:2:64853:64873	1073468	1	True				
ANR	1073537	Identifier	SLJIT_SUCCESS		1073468	0					
ANR	1073538	ExpressionStatement	op = GET_OPCODE ( op )	2024:1:64877:64896	1073468	9	True				
ANR	1073539	AssignmentExpression	op = GET_OPCODE ( op )		1073468	0		=			
ANR	1073540	Identifier	op		1073468	0					
ANR	1073541	CallExpression	GET_OPCODE ( op )		1073468	1					
ANR	1073542	Callee	GET_OPCODE		1073468	0					
ANR	1073543	Identifier	GET_OPCODE		1073468	0					
ANR	1073544	ArgumentList	op		1073468	1					
ANR	1073545	Argument	op		1073468	0					
ANR	1073546	Identifier	op		1073468	0					
ANR	1073547	IfStatement	if ( op == SLJIT_MOV_SI || op == SLJIT_MOV_UI )		1073468	10					
ANR	1073548	Condition	op == SLJIT_MOV_SI || op == SLJIT_MOV_UI	2026:5:64962:65001	1073468	0	True				
ANR	1073549	OrExpression	op == SLJIT_MOV_SI || op == SLJIT_MOV_UI		1073468	0		||			
ANR	1073550	EqualityExpression	op == SLJIT_MOV_SI		1073468	0		==			
ANR	1073551	Identifier	op		1073468	0					
ANR	1073552	Identifier	SLJIT_MOV_SI		1073468	1					
ANR	1073553	EqualityExpression	op == SLJIT_MOV_UI		1073468	1		==			
ANR	1073554	Identifier	op		1073468	0					
ANR	1073555	Identifier	SLJIT_MOV_UI		1073468	1					
ANR	1073556	ExpressionStatement	mem_type = INT_DATA | SIGNED_DATA	2027:2:65006:65039	1073468	1	True				
ANR	1073557	AssignmentExpression	mem_type = INT_DATA | SIGNED_DATA		1073468	0		=			
ANR	1073558	Identifier	mem_type		1073468	0					
ANR	1073559	InclusiveOrExpression	INT_DATA | SIGNED_DATA		1073468	1		|			
ANR	1073560	Identifier	INT_DATA		1073468	0					
ANR	1073561	Identifier	SIGNED_DATA		1073468	1					
ANR	1073562	ExpressionStatement	sugg_dst_ar = DR ( ( op < SLJIT_ADD && FAST_IS_REG ( dst ) ) ? dst : TMP_REG2 )	2029:1:65049:65120	1073468	11	True				
ANR	1073563	AssignmentExpression	sugg_dst_ar = DR ( ( op < SLJIT_ADD && FAST_IS_REG ( dst ) ) ? dst : TMP_REG2 )		1073468	0		=			
ANR	1073564	Identifier	sugg_dst_ar		1073468	0					
ANR	1073565	CallExpression	DR ( ( op < SLJIT_ADD && FAST_IS_REG ( dst ) ) ? dst : TMP_REG2 )		1073468	1					
ANR	1073566	Callee	DR		1073468	0					
ANR	1073567	Identifier	DR		1073468	0					
ANR	1073568	ArgumentList	( op < SLJIT_ADD && FAST_IS_REG ( dst ) ) ? dst : TMP_REG2		1073468	1					
ANR	1073569	Argument	( op < SLJIT_ADD && FAST_IS_REG ( dst ) ) ? dst : TMP_REG2		1073468	0					
ANR	1073570	ConditionalExpression	( op < SLJIT_ADD && FAST_IS_REG ( dst ) ) ? dst : TMP_REG2		1073468	0					
ANR	1073571	Condition	op < SLJIT_ADD && FAST_IS_REG ( dst )		1073468	0					
ANR	1073572	AndExpression	op < SLJIT_ADD && FAST_IS_REG ( dst )		1073468	0		&&			
ANR	1073573	RelationalExpression	op < SLJIT_ADD		1073468	0		<			
ANR	1073574	Identifier	op		1073468	0					
ANR	1073575	Identifier	SLJIT_ADD		1073468	1					
ANR	1073576	CallExpression	FAST_IS_REG ( dst )		1073468	1					
ANR	1073577	Callee	FAST_IS_REG		1073468	0					
ANR	1073578	Identifier	FAST_IS_REG		1073468	0					
ANR	1073579	ArgumentList	dst		1073468	1					
ANR	1073580	Argument	dst		1073468	0					
ANR	1073581	Identifier	dst		1073468	0					
ANR	1073582	Identifier	dst		1073468	1					
ANR	1073583	Identifier	TMP_REG2		1073468	2					
ANR	1073584	ExpressionStatement	compiler -> cache_arg = 0	2031:1:65124:65147	1073468	12	True				
ANR	1073585	AssignmentExpression	compiler -> cache_arg = 0		1073468	0		=			
ANR	1073586	PtrMemberAccess	compiler -> cache_arg		1073468	0					
ANR	1073587	Identifier	compiler		1073468	0					
ANR	1073588	Identifier	cache_arg		1073468	1					
ANR	1073589	PrimaryExpression	0		1073468	1					
ANR	1073590	ExpressionStatement	compiler -> cache_argw = 0	2032:1:65150:65174	1073468	13	True				
ANR	1073591	AssignmentExpression	compiler -> cache_argw = 0		1073468	0		=			
ANR	1073592	PtrMemberAccess	compiler -> cache_argw		1073468	0					
ANR	1073593	Identifier	compiler		1073468	0					
ANR	1073594	Identifier	cache_argw		1073468	1					
ANR	1073595	PrimaryExpression	0		1073468	1					
ANR	1073596	IfStatement	if ( op >= SLJIT_ADD && ( src & SLJIT_MEM ) )		1073468	14					
ANR	1073597	Condition	op >= SLJIT_ADD && ( src & SLJIT_MEM )	2033:5:65181:65216	1073468	0	True				
ANR	1073598	AndExpression	op >= SLJIT_ADD && ( src & SLJIT_MEM )		1073468	0		&&			
ANR	1073599	RelationalExpression	op >= SLJIT_ADD		1073468	0		>=			
ANR	1073600	Identifier	op		1073468	0					
ANR	1073601	Identifier	SLJIT_ADD		1073468	1					
ANR	1073602	BitAndExpression	src & SLJIT_MEM		1073468	1		&			
ANR	1073603	Identifier	src		1073468	0					
ANR	1073604	Identifier	SLJIT_MEM		1073468	1					
ANR	1073605	CompoundStatement		26:43:772:772	1073468	1					
ANR	1073606	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	2034:2:65223:65253	1073468	0	True				
ANR	1073607	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1073468	0					
ANR	1073608	Callee	ADJUST_LOCAL_OFFSET		1073468	0					
ANR	1073609	Identifier	ADJUST_LOCAL_OFFSET		1073468	0					
ANR	1073610	ArgumentList	src		1073468	1					
ANR	1073611	Argument	src		1073468	0					
ANR	1073612	Identifier	src		1073468	0					
ANR	1073613	Argument	srcw		1073468	1					
ANR	1073614	Identifier	srcw		1073468	0					
ANR	1073615	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , mem_type | LOAD_DATA , DR ( TMP_REG1 ) , src , srcw , dst , dstw ) )"	2035:2:65257:65346	1073468	1	True				
ANR	1073616	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , mem_type | LOAD_DATA , DR ( TMP_REG1 ) , src , srcw , dst , dstw ) )"		1073468	0					
ANR	1073617	Callee	FAIL_IF		1073468	0					
ANR	1073618	Identifier	FAIL_IF		1073468	0					
ANR	1073619	ArgumentList	"emit_op_mem2 ( compiler , mem_type | LOAD_DATA , DR ( TMP_REG1 ) , src , srcw , dst , dstw )"		1073468	1					
ANR	1073620	Argument	"emit_op_mem2 ( compiler , mem_type | LOAD_DATA , DR ( TMP_REG1 ) , src , srcw , dst , dstw )"		1073468	0					
ANR	1073621	CallExpression	"emit_op_mem2 ( compiler , mem_type | LOAD_DATA , DR ( TMP_REG1 ) , src , srcw , dst , dstw )"		1073468	0					
ANR	1073622	Callee	emit_op_mem2		1073468	0					
ANR	1073623	Identifier	emit_op_mem2		1073468	0					
ANR	1073624	ArgumentList	compiler		1073468	1					
ANR	1073625	Argument	compiler		1073468	0					
ANR	1073626	Identifier	compiler		1073468	0					
ANR	1073627	Argument	mem_type | LOAD_DATA		1073468	1					
ANR	1073628	InclusiveOrExpression	mem_type | LOAD_DATA		1073468	0		|			
ANR	1073629	Identifier	mem_type		1073468	0					
ANR	1073630	Identifier	LOAD_DATA		1073468	1					
ANR	1073631	Argument	DR ( TMP_REG1 )		1073468	2					
ANR	1073632	CallExpression	DR ( TMP_REG1 )		1073468	0					
ANR	1073633	Callee	DR		1073468	0					
ANR	1073634	Identifier	DR		1073468	0					
ANR	1073635	ArgumentList	TMP_REG1		1073468	1					
ANR	1073636	Argument	TMP_REG1		1073468	0					
ANR	1073637	Identifier	TMP_REG1		1073468	0					
ANR	1073638	Argument	src		1073468	3					
ANR	1073639	Identifier	src		1073468	0					
ANR	1073640	Argument	srcw		1073468	4					
ANR	1073641	Identifier	srcw		1073468	0					
ANR	1073642	Argument	dst		1073468	5					
ANR	1073643	Identifier	dst		1073468	0					
ANR	1073644	Argument	dstw		1073468	6					
ANR	1073645	Identifier	dstw		1073468	0					
ANR	1073646	ExpressionStatement	src = TMP_REG1	2036:2:65350:65364	1073468	2	True				
ANR	1073647	AssignmentExpression	src = TMP_REG1		1073468	0		=			
ANR	1073648	Identifier	src		1073468	0					
ANR	1073649	Identifier	TMP_REG1		1073468	1					
ANR	1073650	ExpressionStatement	srcw = 0	2037:2:65368:65376	1073468	3	True				
ANR	1073651	AssignmentExpression	srcw = 0		1073468	0		=			
ANR	1073652	Identifier	srcw		1073468	0					
ANR	1073653	PrimaryExpression	0		1073468	1					
ANR	1073654	SwitchStatement	switch ( type & 0xff )		1073468	15					
ANR	1073655	Condition	type & 0xff	2040:9:65391:65401	1073468	0	True				
ANR	1073656	BitAndExpression	type & 0xff		1073468	0		&			
ANR	1073657	Identifier	type		1073468	0					
ANR	1073658	PrimaryExpression	0xff		1073468	1					
ANR	1073659	CompoundStatement		33:22:957:957	1073468	1					
ANR	1073660	Label	case SLJIT_EQUAL :	2041:1:65407:65423	1073468	0	True				
ANR	1073661	Identifier	SLJIT_EQUAL		1073468	0					
ANR	1073662	Label	case SLJIT_NOT_EQUAL :	2042:1:65426:65446	1073468	1	True				
ANR	1073663	Identifier	SLJIT_NOT_EQUAL		1073468	0					
ANR	1073664	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SLTIU | SA ( EQUAL_FLAG ) | TA ( sugg_dst_ar ) | IMM ( 1 ) , sugg_dst_ar ) )"	2043:2:65450:65542	1073468	2	True				
ANR	1073665	CallExpression	"FAIL_IF ( push_inst ( compiler , SLTIU | SA ( EQUAL_FLAG ) | TA ( sugg_dst_ar ) | IMM ( 1 ) , sugg_dst_ar ) )"		1073468	0					
ANR	1073666	Callee	FAIL_IF		1073468	0					
ANR	1073667	Identifier	FAIL_IF		1073468	0					
ANR	1073668	ArgumentList	"push_inst ( compiler , SLTIU | SA ( EQUAL_FLAG ) | TA ( sugg_dst_ar ) | IMM ( 1 ) , sugg_dst_ar )"		1073468	1					
ANR	1073669	Argument	"push_inst ( compiler , SLTIU | SA ( EQUAL_FLAG ) | TA ( sugg_dst_ar ) | IMM ( 1 ) , sugg_dst_ar )"		1073468	0					
ANR	1073670	CallExpression	"push_inst ( compiler , SLTIU | SA ( EQUAL_FLAG ) | TA ( sugg_dst_ar ) | IMM ( 1 ) , sugg_dst_ar )"		1073468	0					
ANR	1073671	Callee	push_inst		1073468	0					
ANR	1073672	Identifier	push_inst		1073468	0					
ANR	1073673	ArgumentList	compiler		1073468	1					
ANR	1073674	Argument	compiler		1073468	0					
ANR	1073675	Identifier	compiler		1073468	0					
ANR	1073676	Argument	SLTIU | SA ( EQUAL_FLAG ) | TA ( sugg_dst_ar ) | IMM ( 1 )		1073468	1					
ANR	1073677	InclusiveOrExpression	SLTIU | SA ( EQUAL_FLAG ) | TA ( sugg_dst_ar ) | IMM ( 1 )		1073468	0		|			
ANR	1073678	Identifier	SLTIU		1073468	0					
ANR	1073679	InclusiveOrExpression	SA ( EQUAL_FLAG ) | TA ( sugg_dst_ar ) | IMM ( 1 )		1073468	1		|			
ANR	1073680	CallExpression	SA ( EQUAL_FLAG )		1073468	0					
ANR	1073681	Callee	SA		1073468	0					
ANR	1073682	Identifier	SA		1073468	0					
ANR	1073683	ArgumentList	EQUAL_FLAG		1073468	1					
ANR	1073684	Argument	EQUAL_FLAG		1073468	0					
ANR	1073685	Identifier	EQUAL_FLAG		1073468	0					
ANR	1073686	InclusiveOrExpression	TA ( sugg_dst_ar ) | IMM ( 1 )		1073468	1		|			
ANR	1073687	CallExpression	TA ( sugg_dst_ar )		1073468	0					
ANR	1073688	Callee	TA		1073468	0					
ANR	1073689	Identifier	TA		1073468	0					
ANR	1073690	ArgumentList	sugg_dst_ar		1073468	1					
ANR	1073691	Argument	sugg_dst_ar		1073468	0					
ANR	1073692	Identifier	sugg_dst_ar		1073468	0					
ANR	1073693	CallExpression	IMM ( 1 )		1073468	1					
ANR	1073694	Callee	IMM		1073468	0					
ANR	1073695	Identifier	IMM		1073468	0					
ANR	1073696	ArgumentList	1		1073468	1					
ANR	1073697	Argument	1		1073468	0					
ANR	1073698	PrimaryExpression	1		1073468	0					
ANR	1073699	Argument	sugg_dst_ar		1073468	2					
ANR	1073700	Identifier	sugg_dst_ar		1073468	0					
ANR	1073701	ExpressionStatement	dst_ar = sugg_dst_ar	2044:2:65546:65566	1073468	3	True				
ANR	1073702	AssignmentExpression	dst_ar = sugg_dst_ar		1073468	0		=			
ANR	1073703	Identifier	dst_ar		1073468	0					
ANR	1073704	Identifier	sugg_dst_ar		1073468	1					
ANR	1073705	BreakStatement	break ;	2045:2:65570:65575	1073468	4	True				
ANR	1073706	Label	case SLJIT_LESS :	2046:1:65578:65593	1073468	5	True				
ANR	1073707	Identifier	SLJIT_LESS		1073468	0					
ANR	1073708	Label	case SLJIT_GREATER_EQUAL :	2047:1:65596:65620	1073468	6	True				
ANR	1073709	Identifier	SLJIT_GREATER_EQUAL		1073468	0					
ANR	1073710	Label	case SLJIT_D_LESS :	2048:1:65623:65640	1073468	7	True				
ANR	1073711	Identifier	SLJIT_D_LESS		1073468	0					
ANR	1073712	Label	case SLJIT_D_GREATER_EQUAL :	2049:1:65643:65669	1073468	8	True				
ANR	1073713	Identifier	SLJIT_D_GREATER_EQUAL		1073468	0					
ANR	1073714	ExpressionStatement	dst_ar = ULESS_FLAG	2050:2:65673:65692	1073468	9	True				
ANR	1073715	AssignmentExpression	dst_ar = ULESS_FLAG		1073468	0		=			
ANR	1073716	Identifier	dst_ar		1073468	0					
ANR	1073717	Identifier	ULESS_FLAG		1073468	1					
ANR	1073718	BreakStatement	break ;	2051:2:65696:65701	1073468	10	True				
ANR	1073719	Label	case SLJIT_GREATER :	2052:1:65704:65722	1073468	11	True				
ANR	1073720	Identifier	SLJIT_GREATER		1073468	0					
ANR	1073721	Label	case SLJIT_LESS_EQUAL :	2053:1:65725:65746	1073468	12	True				
ANR	1073722	Identifier	SLJIT_LESS_EQUAL		1073468	0					
ANR	1073723	Label	case SLJIT_D_GREATER :	2054:1:65749:65769	1073468	13	True				
ANR	1073724	Identifier	SLJIT_D_GREATER		1073468	0					
ANR	1073725	Label	case SLJIT_D_LESS_EQUAL :	2055:1:65772:65795	1073468	14	True				
ANR	1073726	Identifier	SLJIT_D_LESS_EQUAL		1073468	0					
ANR	1073727	ExpressionStatement	dst_ar = UGREATER_FLAG	2056:2:65799:65821	1073468	15	True				
ANR	1073728	AssignmentExpression	dst_ar = UGREATER_FLAG		1073468	0		=			
ANR	1073729	Identifier	dst_ar		1073468	0					
ANR	1073730	Identifier	UGREATER_FLAG		1073468	1					
ANR	1073731	BreakStatement	break ;	2057:2:65825:65830	1073468	16	True				
ANR	1073732	Label	case SLJIT_SIG_LESS :	2058:1:65833:65852	1073468	17	True				
ANR	1073733	Identifier	SLJIT_SIG_LESS		1073468	0					
ANR	1073734	Label	case SLJIT_SIG_GREATER_EQUAL :	2059:1:65855:65883	1073468	18	True				
ANR	1073735	Identifier	SLJIT_SIG_GREATER_EQUAL		1073468	0					
ANR	1073736	ExpressionStatement	dst_ar = LESS_FLAG	2060:2:65887:65905	1073468	19	True				
ANR	1073737	AssignmentExpression	dst_ar = LESS_FLAG		1073468	0		=			
ANR	1073738	Identifier	dst_ar		1073468	0					
ANR	1073739	Identifier	LESS_FLAG		1073468	1					
ANR	1073740	BreakStatement	break ;	2061:2:65909:65914	1073468	20	True				
ANR	1073741	Label	case SLJIT_SIG_GREATER :	2062:1:65917:65939	1073468	21	True				
ANR	1073742	Identifier	SLJIT_SIG_GREATER		1073468	0					
ANR	1073743	Label	case SLJIT_SIG_LESS_EQUAL :	2063:1:65942:65967	1073468	22	True				
ANR	1073744	Identifier	SLJIT_SIG_LESS_EQUAL		1073468	0					
ANR	1073745	ExpressionStatement	dst_ar = GREATER_FLAG	2064:2:65971:65992	1073468	23	True				
ANR	1073746	AssignmentExpression	dst_ar = GREATER_FLAG		1073468	0		=			
ANR	1073747	Identifier	dst_ar		1073468	0					
ANR	1073748	Identifier	GREATER_FLAG		1073468	1					
ANR	1073749	BreakStatement	break ;	2065:2:65996:66001	1073468	24	True				
ANR	1073750	Label	case SLJIT_OVERFLOW :	2066:1:66004:66023	1073468	25	True				
ANR	1073751	Identifier	SLJIT_OVERFLOW		1073468	0					
ANR	1073752	Label	case SLJIT_NOT_OVERFLOW :	2067:1:66026:66049	1073468	26	True				
ANR	1073753	Identifier	SLJIT_NOT_OVERFLOW		1073468	0					
ANR	1073754	ExpressionStatement	dst_ar = OVERFLOW_FLAG	2068:2:66053:66075	1073468	27	True				
ANR	1073755	AssignmentExpression	dst_ar = OVERFLOW_FLAG		1073468	0		=			
ANR	1073756	Identifier	dst_ar		1073468	0					
ANR	1073757	Identifier	OVERFLOW_FLAG		1073468	1					
ANR	1073758	BreakStatement	break ;	2069:2:66079:66084	1073468	28	True				
ANR	1073759	Label	case SLJIT_MUL_OVERFLOW :	2070:1:66087:66110	1073468	29	True				
ANR	1073760	Identifier	SLJIT_MUL_OVERFLOW		1073468	0					
ANR	1073761	Label	case SLJIT_MUL_NOT_OVERFLOW :	2071:1:66113:66140	1073468	30	True				
ANR	1073762	Identifier	SLJIT_MUL_NOT_OVERFLOW		1073468	0					
ANR	1073763	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SLTIU | SA ( OVERFLOW_FLAG ) | TA ( sugg_dst_ar ) | IMM ( 1 ) , sugg_dst_ar ) )"	2072:2:66144:66239	1073468	31	True				
ANR	1073764	CallExpression	"FAIL_IF ( push_inst ( compiler , SLTIU | SA ( OVERFLOW_FLAG ) | TA ( sugg_dst_ar ) | IMM ( 1 ) , sugg_dst_ar ) )"		1073468	0					
ANR	1073765	Callee	FAIL_IF		1073468	0					
ANR	1073766	Identifier	FAIL_IF		1073468	0					
ANR	1073767	ArgumentList	"push_inst ( compiler , SLTIU | SA ( OVERFLOW_FLAG ) | TA ( sugg_dst_ar ) | IMM ( 1 ) , sugg_dst_ar )"		1073468	1					
ANR	1073768	Argument	"push_inst ( compiler , SLTIU | SA ( OVERFLOW_FLAG ) | TA ( sugg_dst_ar ) | IMM ( 1 ) , sugg_dst_ar )"		1073468	0					
ANR	1073769	CallExpression	"push_inst ( compiler , SLTIU | SA ( OVERFLOW_FLAG ) | TA ( sugg_dst_ar ) | IMM ( 1 ) , sugg_dst_ar )"		1073468	0					
ANR	1073770	Callee	push_inst		1073468	0					
ANR	1073771	Identifier	push_inst		1073468	0					
ANR	1073772	ArgumentList	compiler		1073468	1					
ANR	1073773	Argument	compiler		1073468	0					
ANR	1073774	Identifier	compiler		1073468	0					
ANR	1073775	Argument	SLTIU | SA ( OVERFLOW_FLAG ) | TA ( sugg_dst_ar ) | IMM ( 1 )		1073468	1					
ANR	1073776	InclusiveOrExpression	SLTIU | SA ( OVERFLOW_FLAG ) | TA ( sugg_dst_ar ) | IMM ( 1 )		1073468	0		|			
ANR	1073777	Identifier	SLTIU		1073468	0					
ANR	1073778	InclusiveOrExpression	SA ( OVERFLOW_FLAG ) | TA ( sugg_dst_ar ) | IMM ( 1 )		1073468	1		|			
ANR	1073779	CallExpression	SA ( OVERFLOW_FLAG )		1073468	0					
ANR	1073780	Callee	SA		1073468	0					
ANR	1073781	Identifier	SA		1073468	0					
ANR	1073782	ArgumentList	OVERFLOW_FLAG		1073468	1					
ANR	1073783	Argument	OVERFLOW_FLAG		1073468	0					
ANR	1073784	Identifier	OVERFLOW_FLAG		1073468	0					
ANR	1073785	InclusiveOrExpression	TA ( sugg_dst_ar ) | IMM ( 1 )		1073468	1		|			
ANR	1073786	CallExpression	TA ( sugg_dst_ar )		1073468	0					
ANR	1073787	Callee	TA		1073468	0					
ANR	1073788	Identifier	TA		1073468	0					
ANR	1073789	ArgumentList	sugg_dst_ar		1073468	1					
ANR	1073790	Argument	sugg_dst_ar		1073468	0					
ANR	1073791	Identifier	sugg_dst_ar		1073468	0					
ANR	1073792	CallExpression	IMM ( 1 )		1073468	1					
ANR	1073793	Callee	IMM		1073468	0					
ANR	1073794	Identifier	IMM		1073468	0					
ANR	1073795	ArgumentList	1		1073468	1					
ANR	1073796	Argument	1		1073468	0					
ANR	1073797	PrimaryExpression	1		1073468	0					
ANR	1073798	Argument	sugg_dst_ar		1073468	2					
ANR	1073799	Identifier	sugg_dst_ar		1073468	0					
ANR	1073800	ExpressionStatement	dst_ar = sugg_dst_ar	2073:2:66243:66263	1073468	32	True				
ANR	1073801	AssignmentExpression	dst_ar = sugg_dst_ar		1073468	0		=			
ANR	1073802	Identifier	dst_ar		1073468	0					
ANR	1073803	Identifier	sugg_dst_ar		1073468	1					
ANR	1073804	ExpressionStatement	type ^= 0x1	2074:2:66267:66278	1073468	33	True				
ANR	1073805	AssignmentExpression	type ^= 0x1		1073468	0		^=			
ANR	1073806	Identifier	type		1073468	0					
ANR	1073807	PrimaryExpression	0x1		1073468	1					
ANR	1073808	BreakStatement	break ;	2075:2:66322:66327	1073468	34	True				
ANR	1073809	Label	case SLJIT_D_EQUAL :	2076:1:66330:66348	1073468	35	True				
ANR	1073810	Identifier	SLJIT_D_EQUAL		1073468	0					
ANR	1073811	Label	case SLJIT_D_NOT_EQUAL :	2077:1:66351:66373	1073468	36	True				
ANR	1073812	Identifier	SLJIT_D_NOT_EQUAL		1073468	0					
ANR	1073813	ExpressionStatement	dst_ar = EQUAL_FLAG	2078:2:66377:66396	1073468	37	True				
ANR	1073814	AssignmentExpression	dst_ar = EQUAL_FLAG		1073468	0		=			
ANR	1073815	Identifier	dst_ar		1073468	0					
ANR	1073816	Identifier	EQUAL_FLAG		1073468	1					
ANR	1073817	BreakStatement	break ;	2079:2:66400:66405	1073468	38	True				
ANR	1073818	Label	case SLJIT_D_UNORDERED :	2081:1:66409:66431	1073468	39	True				
ANR	1073819	Identifier	SLJIT_D_UNORDERED		1073468	0					
ANR	1073820	Label	case SLJIT_D_ORDERED :	2082:1:66434:66454	1073468	40	True				
ANR	1073821	Identifier	SLJIT_D_ORDERED		1073468	0					
ANR	1073822	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , CFC1 | TA ( sugg_dst_ar ) | DA ( FCSR_REG ) , sugg_dst_ar ) )"	2083:2:66458:66538	1073468	41	True				
ANR	1073823	CallExpression	"FAIL_IF ( push_inst ( compiler , CFC1 | TA ( sugg_dst_ar ) | DA ( FCSR_REG ) , sugg_dst_ar ) )"		1073468	0					
ANR	1073824	Callee	FAIL_IF		1073468	0					
ANR	1073825	Identifier	FAIL_IF		1073468	0					
ANR	1073826	ArgumentList	"push_inst ( compiler , CFC1 | TA ( sugg_dst_ar ) | DA ( FCSR_REG ) , sugg_dst_ar )"		1073468	1					
ANR	1073827	Argument	"push_inst ( compiler , CFC1 | TA ( sugg_dst_ar ) | DA ( FCSR_REG ) , sugg_dst_ar )"		1073468	0					
ANR	1073828	CallExpression	"push_inst ( compiler , CFC1 | TA ( sugg_dst_ar ) | DA ( FCSR_REG ) , sugg_dst_ar )"		1073468	0					
ANR	1073829	Callee	push_inst		1073468	0					
ANR	1073830	Identifier	push_inst		1073468	0					
ANR	1073831	ArgumentList	compiler		1073468	1					
ANR	1073832	Argument	compiler		1073468	0					
ANR	1073833	Identifier	compiler		1073468	0					
ANR	1073834	Argument	CFC1 | TA ( sugg_dst_ar ) | DA ( FCSR_REG )		1073468	1					
ANR	1073835	InclusiveOrExpression	CFC1 | TA ( sugg_dst_ar ) | DA ( FCSR_REG )		1073468	0		|			
ANR	1073836	Identifier	CFC1		1073468	0					
ANR	1073837	InclusiveOrExpression	TA ( sugg_dst_ar ) | DA ( FCSR_REG )		1073468	1		|			
ANR	1073838	CallExpression	TA ( sugg_dst_ar )		1073468	0					
ANR	1073839	Callee	TA		1073468	0					
ANR	1073840	Identifier	TA		1073468	0					
ANR	1073841	ArgumentList	sugg_dst_ar		1073468	1					
ANR	1073842	Argument	sugg_dst_ar		1073468	0					
ANR	1073843	Identifier	sugg_dst_ar		1073468	0					
ANR	1073844	CallExpression	DA ( FCSR_REG )		1073468	1					
ANR	1073845	Callee	DA		1073468	0					
ANR	1073846	Identifier	DA		1073468	0					
ANR	1073847	ArgumentList	FCSR_REG		1073468	1					
ANR	1073848	Argument	FCSR_REG		1073468	0					
ANR	1073849	Identifier	FCSR_REG		1073468	0					
ANR	1073850	Argument	sugg_dst_ar		1073468	2					
ANR	1073851	Identifier	sugg_dst_ar		1073468	0					
ANR	1073852	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SRL | TA ( sugg_dst_ar ) | DA ( sugg_dst_ar ) | SH_IMM ( 23 ) , sugg_dst_ar ) )"	2084:2:66542:66637	1073468	42	True				
ANR	1073853	CallExpression	"FAIL_IF ( push_inst ( compiler , SRL | TA ( sugg_dst_ar ) | DA ( sugg_dst_ar ) | SH_IMM ( 23 ) , sugg_dst_ar ) )"		1073468	0					
ANR	1073854	Callee	FAIL_IF		1073468	0					
ANR	1073855	Identifier	FAIL_IF		1073468	0					
ANR	1073856	ArgumentList	"push_inst ( compiler , SRL | TA ( sugg_dst_ar ) | DA ( sugg_dst_ar ) | SH_IMM ( 23 ) , sugg_dst_ar )"		1073468	1					
ANR	1073857	Argument	"push_inst ( compiler , SRL | TA ( sugg_dst_ar ) | DA ( sugg_dst_ar ) | SH_IMM ( 23 ) , sugg_dst_ar )"		1073468	0					
ANR	1073858	CallExpression	"push_inst ( compiler , SRL | TA ( sugg_dst_ar ) | DA ( sugg_dst_ar ) | SH_IMM ( 23 ) , sugg_dst_ar )"		1073468	0					
ANR	1073859	Callee	push_inst		1073468	0					
ANR	1073860	Identifier	push_inst		1073468	0					
ANR	1073861	ArgumentList	compiler		1073468	1					
ANR	1073862	Argument	compiler		1073468	0					
ANR	1073863	Identifier	compiler		1073468	0					
ANR	1073864	Argument	SRL | TA ( sugg_dst_ar ) | DA ( sugg_dst_ar ) | SH_IMM ( 23 )		1073468	1					
ANR	1073865	InclusiveOrExpression	SRL | TA ( sugg_dst_ar ) | DA ( sugg_dst_ar ) | SH_IMM ( 23 )		1073468	0		|			
ANR	1073866	Identifier	SRL		1073468	0					
ANR	1073867	InclusiveOrExpression	TA ( sugg_dst_ar ) | DA ( sugg_dst_ar ) | SH_IMM ( 23 )		1073468	1		|			
ANR	1073868	CallExpression	TA ( sugg_dst_ar )		1073468	0					
ANR	1073869	Callee	TA		1073468	0					
ANR	1073870	Identifier	TA		1073468	0					
ANR	1073871	ArgumentList	sugg_dst_ar		1073468	1					
ANR	1073872	Argument	sugg_dst_ar		1073468	0					
ANR	1073873	Identifier	sugg_dst_ar		1073468	0					
ANR	1073874	InclusiveOrExpression	DA ( sugg_dst_ar ) | SH_IMM ( 23 )		1073468	1		|			
ANR	1073875	CallExpression	DA ( sugg_dst_ar )		1073468	0					
ANR	1073876	Callee	DA		1073468	0					
ANR	1073877	Identifier	DA		1073468	0					
ANR	1073878	ArgumentList	sugg_dst_ar		1073468	1					
ANR	1073879	Argument	sugg_dst_ar		1073468	0					
ANR	1073880	Identifier	sugg_dst_ar		1073468	0					
ANR	1073881	CallExpression	SH_IMM ( 23 )		1073468	1					
ANR	1073882	Callee	SH_IMM		1073468	0					
ANR	1073883	Identifier	SH_IMM		1073468	0					
ANR	1073884	ArgumentList	23		1073468	1					
ANR	1073885	Argument	23		1073468	0					
ANR	1073886	PrimaryExpression	23		1073468	0					
ANR	1073887	Argument	sugg_dst_ar		1073468	2					
ANR	1073888	Identifier	sugg_dst_ar		1073468	0					
ANR	1073889	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ANDI | SA ( sugg_dst_ar ) | TA ( sugg_dst_ar ) | IMM ( 1 ) , sugg_dst_ar ) )"	2085:2:66641:66733	1073468	43	True				
ANR	1073890	CallExpression	"FAIL_IF ( push_inst ( compiler , ANDI | SA ( sugg_dst_ar ) | TA ( sugg_dst_ar ) | IMM ( 1 ) , sugg_dst_ar ) )"		1073468	0					
ANR	1073891	Callee	FAIL_IF		1073468	0					
ANR	1073892	Identifier	FAIL_IF		1073468	0					
ANR	1073893	ArgumentList	"push_inst ( compiler , ANDI | SA ( sugg_dst_ar ) | TA ( sugg_dst_ar ) | IMM ( 1 ) , sugg_dst_ar )"		1073468	1					
ANR	1073894	Argument	"push_inst ( compiler , ANDI | SA ( sugg_dst_ar ) | TA ( sugg_dst_ar ) | IMM ( 1 ) , sugg_dst_ar )"		1073468	0					
ANR	1073895	CallExpression	"push_inst ( compiler , ANDI | SA ( sugg_dst_ar ) | TA ( sugg_dst_ar ) | IMM ( 1 ) , sugg_dst_ar )"		1073468	0					
ANR	1073896	Callee	push_inst		1073468	0					
ANR	1073897	Identifier	push_inst		1073468	0					
ANR	1073898	ArgumentList	compiler		1073468	1					
ANR	1073899	Argument	compiler		1073468	0					
ANR	1073900	Identifier	compiler		1073468	0					
ANR	1073901	Argument	ANDI | SA ( sugg_dst_ar ) | TA ( sugg_dst_ar ) | IMM ( 1 )		1073468	1					
ANR	1073902	InclusiveOrExpression	ANDI | SA ( sugg_dst_ar ) | TA ( sugg_dst_ar ) | IMM ( 1 )		1073468	0		|			
ANR	1073903	Identifier	ANDI		1073468	0					
ANR	1073904	InclusiveOrExpression	SA ( sugg_dst_ar ) | TA ( sugg_dst_ar ) | IMM ( 1 )		1073468	1		|			
ANR	1073905	CallExpression	SA ( sugg_dst_ar )		1073468	0					
ANR	1073906	Callee	SA		1073468	0					
ANR	1073907	Identifier	SA		1073468	0					
ANR	1073908	ArgumentList	sugg_dst_ar		1073468	1					
ANR	1073909	Argument	sugg_dst_ar		1073468	0					
ANR	1073910	Identifier	sugg_dst_ar		1073468	0					
ANR	1073911	InclusiveOrExpression	TA ( sugg_dst_ar ) | IMM ( 1 )		1073468	1		|			
ANR	1073912	CallExpression	TA ( sugg_dst_ar )		1073468	0					
ANR	1073913	Callee	TA		1073468	0					
ANR	1073914	Identifier	TA		1073468	0					
ANR	1073915	ArgumentList	sugg_dst_ar		1073468	1					
ANR	1073916	Argument	sugg_dst_ar		1073468	0					
ANR	1073917	Identifier	sugg_dst_ar		1073468	0					
ANR	1073918	CallExpression	IMM ( 1 )		1073468	1					
ANR	1073919	Callee	IMM		1073468	0					
ANR	1073920	Identifier	IMM		1073468	0					
ANR	1073921	ArgumentList	1		1073468	1					
ANR	1073922	Argument	1		1073468	0					
ANR	1073923	PrimaryExpression	1		1073468	0					
ANR	1073924	Argument	sugg_dst_ar		1073468	2					
ANR	1073925	Identifier	sugg_dst_ar		1073468	0					
ANR	1073926	ExpressionStatement	dst_ar = sugg_dst_ar	2086:2:66737:66757	1073468	44	True				
ANR	1073927	AssignmentExpression	dst_ar = sugg_dst_ar		1073468	0		=			
ANR	1073928	Identifier	dst_ar		1073468	0					
ANR	1073929	Identifier	sugg_dst_ar		1073468	1					
ANR	1073930	BreakStatement	break ;	2087:2:66761:66766	1073468	45	True				
ANR	1073931	Label	default :	2089:1:66770:66777	1073468	46	True				
ANR	1073932	Identifier	default		1073468	0					
ANR	1073933	ExpressionStatement	SLJIT_ASSERT_STOP ( )	2090:2:66781:66800	1073468	47	True				
ANR	1073934	CallExpression	SLJIT_ASSERT_STOP ( )		1073468	0					
ANR	1073935	Callee	SLJIT_ASSERT_STOP		1073468	0					
ANR	1073936	Identifier	SLJIT_ASSERT_STOP		1073468	0					
ANR	1073937	ArgumentList			1073468	1					
ANR	1073938	ExpressionStatement	dst_ar = sugg_dst_ar	2091:2:66804:66824	1073468	48	True				
ANR	1073939	AssignmentExpression	dst_ar = sugg_dst_ar		1073468	0		=			
ANR	1073940	Identifier	dst_ar		1073468	0					
ANR	1073941	Identifier	sugg_dst_ar		1073468	1					
ANR	1073942	BreakStatement	break ;	2092:2:66828:66833	1073468	49	True				
ANR	1073943	IfStatement	if ( type & 0x1 )		1073468	16					
ANR	1073944	Condition	type & 0x1	2095:5:66844:66853	1073468	0	True				
ANR	1073945	BitAndExpression	type & 0x1		1073468	0		&			
ANR	1073946	Identifier	type		1073468	0					
ANR	1073947	PrimaryExpression	0x1		1073468	1					
ANR	1073948	CompoundStatement		88:17:2409:2409	1073468	1					
ANR	1073949	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , XORI | SA ( dst_ar ) | TA ( sugg_dst_ar ) | IMM ( 1 ) , sugg_dst_ar ) )"	2096:2:66860:66947	1073468	0	True				
ANR	1073950	CallExpression	"FAIL_IF ( push_inst ( compiler , XORI | SA ( dst_ar ) | TA ( sugg_dst_ar ) | IMM ( 1 ) , sugg_dst_ar ) )"		1073468	0					
ANR	1073951	Callee	FAIL_IF		1073468	0					
ANR	1073952	Identifier	FAIL_IF		1073468	0					
ANR	1073953	ArgumentList	"push_inst ( compiler , XORI | SA ( dst_ar ) | TA ( sugg_dst_ar ) | IMM ( 1 ) , sugg_dst_ar )"		1073468	1					
ANR	1073954	Argument	"push_inst ( compiler , XORI | SA ( dst_ar ) | TA ( sugg_dst_ar ) | IMM ( 1 ) , sugg_dst_ar )"		1073468	0					
ANR	1073955	CallExpression	"push_inst ( compiler , XORI | SA ( dst_ar ) | TA ( sugg_dst_ar ) | IMM ( 1 ) , sugg_dst_ar )"		1073468	0					
ANR	1073956	Callee	push_inst		1073468	0					
ANR	1073957	Identifier	push_inst		1073468	0					
ANR	1073958	ArgumentList	compiler		1073468	1					
ANR	1073959	Argument	compiler		1073468	0					
ANR	1073960	Identifier	compiler		1073468	0					
ANR	1073961	Argument	XORI | SA ( dst_ar ) | TA ( sugg_dst_ar ) | IMM ( 1 )		1073468	1					
ANR	1073962	InclusiveOrExpression	XORI | SA ( dst_ar ) | TA ( sugg_dst_ar ) | IMM ( 1 )		1073468	0		|			
ANR	1073963	Identifier	XORI		1073468	0					
ANR	1073964	InclusiveOrExpression	SA ( dst_ar ) | TA ( sugg_dst_ar ) | IMM ( 1 )		1073468	1		|			
ANR	1073965	CallExpression	SA ( dst_ar )		1073468	0					
ANR	1073966	Callee	SA		1073468	0					
ANR	1073967	Identifier	SA		1073468	0					
ANR	1073968	ArgumentList	dst_ar		1073468	1					
ANR	1073969	Argument	dst_ar		1073468	0					
ANR	1073970	Identifier	dst_ar		1073468	0					
ANR	1073971	InclusiveOrExpression	TA ( sugg_dst_ar ) | IMM ( 1 )		1073468	1		|			
ANR	1073972	CallExpression	TA ( sugg_dst_ar )		1073468	0					
ANR	1073973	Callee	TA		1073468	0					
ANR	1073974	Identifier	TA		1073468	0					
ANR	1073975	ArgumentList	sugg_dst_ar		1073468	1					
ANR	1073976	Argument	sugg_dst_ar		1073468	0					
ANR	1073977	Identifier	sugg_dst_ar		1073468	0					
ANR	1073978	CallExpression	IMM ( 1 )		1073468	1					
ANR	1073979	Callee	IMM		1073468	0					
ANR	1073980	Identifier	IMM		1073468	0					
ANR	1073981	ArgumentList	1		1073468	1					
ANR	1073982	Argument	1		1073468	0					
ANR	1073983	PrimaryExpression	1		1073468	0					
ANR	1073984	Argument	sugg_dst_ar		1073468	2					
ANR	1073985	Identifier	sugg_dst_ar		1073468	0					
ANR	1073986	ExpressionStatement	dst_ar = sugg_dst_ar	2097:2:66951:66971	1073468	1	True				
ANR	1073987	AssignmentExpression	dst_ar = sugg_dst_ar		1073468	0		=			
ANR	1073988	Identifier	dst_ar		1073468	0					
ANR	1073989	Identifier	sugg_dst_ar		1073468	1					
ANR	1073990	IfStatement	if ( op >= SLJIT_ADD )		1073468	17					
ANR	1073991	Condition	op >= SLJIT_ADD	2100:5:66982:66996	1073468	0	True				
ANR	1073992	RelationalExpression	op >= SLJIT_ADD		1073468	0		>=			
ANR	1073993	Identifier	op		1073468	0					
ANR	1073994	Identifier	SLJIT_ADD		1073468	1					
ANR	1073995	CompoundStatement		93:22:2552:2552	1073468	1					
ANR	1073996	IfStatement	if ( DR ( TMP_REG2 ) != dst_ar )		1073468	0					
ANR	1073997	Condition	DR ( TMP_REG2 ) != dst_ar	2101:6:67007:67028	1073468	0	True				
ANR	1073998	EqualityExpression	DR ( TMP_REG2 ) != dst_ar		1073468	0		!=			
ANR	1073999	CallExpression	DR ( TMP_REG2 )		1073468	0					
ANR	1074000	Callee	DR		1073468	0					
ANR	1074001	Identifier	DR		1073468	0					
ANR	1074002	ArgumentList	TMP_REG2		1073468	1					
ANR	1074003	Argument	TMP_REG2		1073468	0					
ANR	1074004	Identifier	TMP_REG2		1073468	0					
ANR	1074005	Identifier	dst_ar		1073468	1					
ANR	1074006	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDU_W | SA ( dst_ar ) | TA ( 0 ) | D ( TMP_REG2 ) , DR ( TMP_REG2 ) ) )"	2102:3:67034:67119	1073468	1	True				
ANR	1074007	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDU_W | SA ( dst_ar ) | TA ( 0 ) | D ( TMP_REG2 ) , DR ( TMP_REG2 ) ) )"		1073468	0					
ANR	1074008	Callee	FAIL_IF		1073468	0					
ANR	1074009	Identifier	FAIL_IF		1073468	0					
ANR	1074010	ArgumentList	"push_inst ( compiler , ADDU_W | SA ( dst_ar ) | TA ( 0 ) | D ( TMP_REG2 ) , DR ( TMP_REG2 ) )"		1073468	1					
ANR	1074011	Argument	"push_inst ( compiler , ADDU_W | SA ( dst_ar ) | TA ( 0 ) | D ( TMP_REG2 ) , DR ( TMP_REG2 ) )"		1073468	0					
ANR	1074012	CallExpression	"push_inst ( compiler , ADDU_W | SA ( dst_ar ) | TA ( 0 ) | D ( TMP_REG2 ) , DR ( TMP_REG2 ) )"		1073468	0					
ANR	1074013	Callee	push_inst		1073468	0					
ANR	1074014	Identifier	push_inst		1073468	0					
ANR	1074015	ArgumentList	compiler		1073468	1					
ANR	1074016	Argument	compiler		1073468	0					
ANR	1074017	Identifier	compiler		1073468	0					
ANR	1074018	Argument	ADDU_W | SA ( dst_ar ) | TA ( 0 ) | D ( TMP_REG2 )		1073468	1					
ANR	1074019	InclusiveOrExpression	ADDU_W | SA ( dst_ar ) | TA ( 0 ) | D ( TMP_REG2 )		1073468	0		|			
ANR	1074020	Identifier	ADDU_W		1073468	0					
ANR	1074021	InclusiveOrExpression	SA ( dst_ar ) | TA ( 0 ) | D ( TMP_REG2 )		1073468	1		|			
ANR	1074022	CallExpression	SA ( dst_ar )		1073468	0					
ANR	1074023	Callee	SA		1073468	0					
ANR	1074024	Identifier	SA		1073468	0					
ANR	1074025	ArgumentList	dst_ar		1073468	1					
ANR	1074026	Argument	dst_ar		1073468	0					
ANR	1074027	Identifier	dst_ar		1073468	0					
ANR	1074028	InclusiveOrExpression	TA ( 0 ) | D ( TMP_REG2 )		1073468	1		|			
ANR	1074029	CallExpression	TA ( 0 )		1073468	0					
ANR	1074030	Callee	TA		1073468	0					
ANR	1074031	Identifier	TA		1073468	0					
ANR	1074032	ArgumentList	0		1073468	1					
ANR	1074033	Argument	0		1073468	0					
ANR	1074034	PrimaryExpression	0		1073468	0					
ANR	1074035	CallExpression	D ( TMP_REG2 )		1073468	1					
ANR	1074036	Callee	D		1073468	0					
ANR	1074037	Identifier	D		1073468	0					
ANR	1074038	ArgumentList	TMP_REG2		1073468	1					
ANR	1074039	Argument	TMP_REG2		1073468	0					
ANR	1074040	Identifier	TMP_REG2		1073468	0					
ANR	1074041	Argument	DR ( TMP_REG2 )		1073468	2					
ANR	1074042	CallExpression	DR ( TMP_REG2 )		1073468	0					
ANR	1074043	Callee	DR		1073468	0					
ANR	1074044	Identifier	DR		1073468	0					
ANR	1074045	ArgumentList	TMP_REG2		1073468	1					
ANR	1074046	Argument	TMP_REG2		1073468	0					
ANR	1074047	Identifier	TMP_REG2		1073468	0					
ANR	1074048	ReturnStatement	"return emit_op ( compiler , op | flags , mem_type | CUMULATIVE_OP | LOGICAL_OP | IMM_OP | ALT_KEEP_CACHE , dst , dstw , src , srcw , TMP_REG2 , 0 ) ;"	2103:2:67123:67259	1073468	1	True				
ANR	1074049	CallExpression	"emit_op ( compiler , op | flags , mem_type | CUMULATIVE_OP | LOGICAL_OP | IMM_OP | ALT_KEEP_CACHE , dst , dstw , src , srcw , TMP_REG2 , 0 )"		1073468	0					
ANR	1074050	Callee	emit_op		1073468	0					
ANR	1074051	Identifier	emit_op		1073468	0					
ANR	1074052	ArgumentList	compiler		1073468	1					
ANR	1074053	Argument	compiler		1073468	0					
ANR	1074054	Identifier	compiler		1073468	0					
ANR	1074055	Argument	op | flags		1073468	1					
ANR	1074056	InclusiveOrExpression	op | flags		1073468	0		|			
ANR	1074057	Identifier	op		1073468	0					
ANR	1074058	Identifier	flags		1073468	1					
ANR	1074059	Argument	mem_type | CUMULATIVE_OP | LOGICAL_OP | IMM_OP | ALT_KEEP_CACHE		1073468	2					
ANR	1074060	InclusiveOrExpression	mem_type | CUMULATIVE_OP | LOGICAL_OP | IMM_OP | ALT_KEEP_CACHE		1073468	0		|			
ANR	1074061	Identifier	mem_type		1073468	0					
ANR	1074062	InclusiveOrExpression	CUMULATIVE_OP | LOGICAL_OP | IMM_OP | ALT_KEEP_CACHE		1073468	1		|			
ANR	1074063	Identifier	CUMULATIVE_OP		1073468	0					
ANR	1074064	InclusiveOrExpression	LOGICAL_OP | IMM_OP | ALT_KEEP_CACHE		1073468	1		|			
ANR	1074065	Identifier	LOGICAL_OP		1073468	0					
ANR	1074066	InclusiveOrExpression	IMM_OP | ALT_KEEP_CACHE		1073468	1		|			
ANR	1074067	Identifier	IMM_OP		1073468	0					
ANR	1074068	Identifier	ALT_KEEP_CACHE		1073468	1					
ANR	1074069	Argument	dst		1073468	3					
ANR	1074070	Identifier	dst		1073468	0					
ANR	1074071	Argument	dstw		1073468	4					
ANR	1074072	Identifier	dstw		1073468	0					
ANR	1074073	Argument	src		1073468	5					
ANR	1074074	Identifier	src		1073468	0					
ANR	1074075	Argument	srcw		1073468	6					
ANR	1074076	Identifier	srcw		1073468	0					
ANR	1074077	Argument	TMP_REG2		1073468	7					
ANR	1074078	Identifier	TMP_REG2		1073468	0					
ANR	1074079	Argument	0		1073468	8					
ANR	1074080	PrimaryExpression	0		1073468	0					
ANR	1074081	IfStatement	if ( dst & SLJIT_MEM )		1073468	18					
ANR	1074082	Condition	dst & SLJIT_MEM	2106:5:67270:67284	1073468	0	True				
ANR	1074083	BitAndExpression	dst & SLJIT_MEM		1073468	0		&			
ANR	1074084	Identifier	dst		1073468	0					
ANR	1074085	Identifier	SLJIT_MEM		1073468	1					
ANR	1074086	ReturnStatement	"return emit_op_mem ( compiler , mem_type , dst_ar , dst , dstw ) ;"	2107:2:67289:67346	1073468	1	True				
ANR	1074087	CallExpression	"emit_op_mem ( compiler , mem_type , dst_ar , dst , dstw )"		1073468	0					
ANR	1074088	Callee	emit_op_mem		1073468	0					
ANR	1074089	Identifier	emit_op_mem		1073468	0					
ANR	1074090	ArgumentList	compiler		1073468	1					
ANR	1074091	Argument	compiler		1073468	0					
ANR	1074092	Identifier	compiler		1073468	0					
ANR	1074093	Argument	mem_type		1073468	1					
ANR	1074094	Identifier	mem_type		1073468	0					
ANR	1074095	Argument	dst_ar		1073468	2					
ANR	1074096	Identifier	dst_ar		1073468	0					
ANR	1074097	Argument	dst		1073468	3					
ANR	1074098	Identifier	dst		1073468	0					
ANR	1074099	Argument	dstw		1073468	4					
ANR	1074100	Identifier	dstw		1073468	0					
ANR	1074101	IfStatement	if ( sugg_dst_ar != dst_ar )		1073468	19					
ANR	1074102	Condition	sugg_dst_ar != dst_ar	2109:5:67354:67374	1073468	0	True				
ANR	1074103	EqualityExpression	sugg_dst_ar != dst_ar		1073468	0		!=			
ANR	1074104	Identifier	sugg_dst_ar		1073468	0					
ANR	1074105	Identifier	dst_ar		1073468	1					
ANR	1074106	ReturnStatement	"return push_inst ( compiler , ADDU_W | SA ( dst_ar ) | TA ( 0 ) | DA ( sugg_dst_ar ) , sugg_dst_ar ) ;"	2110:2:67379:67465	1073468	1	True				
ANR	1074107	CallExpression	"push_inst ( compiler , ADDU_W | SA ( dst_ar ) | TA ( 0 ) | DA ( sugg_dst_ar ) , sugg_dst_ar )"		1073468	0					
ANR	1074108	Callee	push_inst		1073468	0					
ANR	1074109	Identifier	push_inst		1073468	0					
ANR	1074110	ArgumentList	compiler		1073468	1					
ANR	1074111	Argument	compiler		1073468	0					
ANR	1074112	Identifier	compiler		1073468	0					
ANR	1074113	Argument	ADDU_W | SA ( dst_ar ) | TA ( 0 ) | DA ( sugg_dst_ar )		1073468	1					
ANR	1074114	InclusiveOrExpression	ADDU_W | SA ( dst_ar ) | TA ( 0 ) | DA ( sugg_dst_ar )		1073468	0		|			
ANR	1074115	Identifier	ADDU_W		1073468	0					
ANR	1074116	InclusiveOrExpression	SA ( dst_ar ) | TA ( 0 ) | DA ( sugg_dst_ar )		1073468	1		|			
ANR	1074117	CallExpression	SA ( dst_ar )		1073468	0					
ANR	1074118	Callee	SA		1073468	0					
ANR	1074119	Identifier	SA		1073468	0					
ANR	1074120	ArgumentList	dst_ar		1073468	1					
ANR	1074121	Argument	dst_ar		1073468	0					
ANR	1074122	Identifier	dst_ar		1073468	0					
ANR	1074123	InclusiveOrExpression	TA ( 0 ) | DA ( sugg_dst_ar )		1073468	1		|			
ANR	1074124	CallExpression	TA ( 0 )		1073468	0					
ANR	1074125	Callee	TA		1073468	0					
ANR	1074126	Identifier	TA		1073468	0					
ANR	1074127	ArgumentList	0		1073468	1					
ANR	1074128	Argument	0		1073468	0					
ANR	1074129	PrimaryExpression	0		1073468	0					
ANR	1074130	CallExpression	DA ( sugg_dst_ar )		1073468	1					
ANR	1074131	Callee	DA		1073468	0					
ANR	1074132	Identifier	DA		1073468	0					
ANR	1074133	ArgumentList	sugg_dst_ar		1073468	1					
ANR	1074134	Argument	sugg_dst_ar		1073468	0					
ANR	1074135	Identifier	sugg_dst_ar		1073468	0					
ANR	1074136	Argument	sugg_dst_ar		1073468	2					
ANR	1074137	Identifier	sugg_dst_ar		1073468	0					
ANR	1074138	ReturnStatement	return SLJIT_SUCCESS ;	2111:1:67468:67488	1073468	20	True				
ANR	1074139	Identifier	SLJIT_SUCCESS		1073468	0					
ANR	1074140	Statement	undef	2114:2:67552:67556	1073468	21	True				
ANR	1074141	Statement	mem_type	2114:8:67558:67565	1073468	22	True				
ANR	1074142	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1073468	1					
ANR	1074143	Identifier	sljit_emit_op_flags		1073468	2					
ANR	1074144	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type"		1073468	3					
ANR	1074145	Parameter	struct sljit_compiler * compiler	2004:54:64324:64354	1073468	0	True				
ANR	1074146	ParameterType	struct sljit_compiler *		1073468	0					
ANR	1074147	Identifier	compiler		1073468	1					
ANR	1074148	Parameter	sljit_si op	2004:87:64357:64367	1073468	1	True				
ANR	1074149	ParameterType	sljit_si		1073468	0					
ANR	1074150	Identifier	op		1073468	1					
ANR	1074151	Parameter	sljit_si dst	2005:1:64371:64382	1073468	2	True				
ANR	1074152	ParameterType	sljit_si		1073468	0					
ANR	1074153	Identifier	dst		1073468	1					
ANR	1074154	Parameter	sljit_sw dstw	2005:15:64385:64397	1073468	3	True				
ANR	1074155	ParameterType	sljit_sw		1073468	0					
ANR	1074156	Identifier	dstw		1073468	1					
ANR	1074157	Parameter	sljit_si src	2006:1:64401:64412	1073468	4	True				
ANR	1074158	ParameterType	sljit_si		1073468	0					
ANR	1074159	Identifier	src		1073468	1					
ANR	1074160	Parameter	sljit_sw srcw	2006:15:64415:64427	1073468	5	True				
ANR	1074161	ParameterType	sljit_sw		1073468	0					
ANR	1074162	Identifier	srcw		1073468	1					
ANR	1074163	Parameter	sljit_si type	2007:1:64431:64443	1073468	6	True				
ANR	1074164	ParameterType	sljit_si		1073468	0					
ANR	1074165	Identifier	type		1073468	1					
ANR	1074166	CFGEntryNode	ENTRY		1073468		True				
ANR	1074167	CFGExitNode	EXIT		1073468		True				
ANR	1074168	Symbol	EQUAL_FLAG		1073468						
ANR	1074169	Symbol	TMP_REG2		1073468						
ANR	1074170	Symbol	TMP_REG1		1073468						
ANR	1074171	Symbol	ADDU_W		1073468						
ANR	1074172	Symbol	sugg_dst_ar		1073468						
ANR	1074173	Symbol	SLJIT_MEM		1073468						
ANR	1074174	Symbol	* compiler		1073468						
ANR	1074175	Symbol	type		1073468						
ANR	1074176	Symbol	DR		1073468						
ANR	1074177	Symbol	GET_OPCODE		1073468						
ANR	1074178	Symbol	SLJIT_MOV_UI		1073468						
ANR	1074179	Symbol	INT_DATA		1073468						
ANR	1074180	Symbol	ULESS_FLAG		1073468						
ANR	1074181	Symbol	emit_op		1073468						
ANR	1074182	Symbol	FAST_IS_REG		1073468						
ANR	1074183	Symbol	srcw		1073468						
ANR	1074184	Symbol	compiler -> cache_arg		1073468						
ANR	1074185	Symbol	emit_op_mem2		1073468						
ANR	1074186	Symbol	IMM		1073468						
ANR	1074187	Symbol	emit_op_mem		1073468						
ANR	1074188	Symbol	SLTIU		1073468						
ANR	1074189	Symbol	FCSR_REG		1073468						
ANR	1074190	Symbol	OVERFLOW_FLAG		1073468						
ANR	1074191	Symbol	mem_type		1073468						
ANR	1074192	Symbol	compiler -> cache_argw		1073468						
ANR	1074193	Symbol	dst		1073468						
ANR	1074194	Symbol	dst_ar		1073468						
ANR	1074195	Symbol	LOAD_DATA		1073468						
ANR	1074196	Symbol	D		1073468						
ANR	1074197	Symbol	IMM_OP		1073468						
ANR	1074198	Symbol	XORI		1073468						
ANR	1074199	Symbol	CUMULATIVE_OP		1073468						
ANR	1074200	Symbol	flags		1073468						
ANR	1074201	Symbol	SLJIT_ADD		1073468						
ANR	1074202	Symbol	SRL		1073468						
ANR	1074203	Symbol	SA		1073468						
ANR	1074204	Symbol	GET_ALL_FLAGS		1073468						
ANR	1074205	Symbol	SLJIT_MOV_SI		1073468						
ANR	1074206	Symbol	GREATER_FLAG		1073468						
ANR	1074207	Symbol	compiler		1073468						
ANR	1074208	Symbol	check_sljit_emit_op_flags		1073468						
ANR	1074209	Symbol	op		1073468						
ANR	1074210	Symbol	push_inst		1073468						
ANR	1074211	Symbol	src		1073468						
ANR	1074212	Symbol	LOGICAL_OP		1073468						
ANR	1074213	Symbol	SLJIT_SUCCESS		1073468						
ANR	1074214	Symbol	UGREATER_FLAG		1073468						
ANR	1074215	Symbol	ANDI		1073468						
ANR	1074216	Symbol	TA		1073468						
ANR	1074217	Symbol	CFC1		1073468						
ANR	1074218	Symbol	SIGNED_DATA		1073468						
ANR	1074219	Symbol	SLJIT_UNUSED		1073468						
ANR	1074220	Symbol	LESS_FLAG		1073468						
ANR	1074221	Symbol	SH_IMM		1073468						
ANR	1074222	Symbol	dstw		1073468						
ANR	1074223	Symbol	DA		1073468						
ANR	1074224	Symbol	ALT_KEEP_CACHE		1073468						
ANR	1074225	Function	sljit_emit_const	2118:25:67602:68256							
ANR	1074226	FunctionDef	"sljit_emit_const (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value)"		1074225	0					
ANR	1074227	CompoundStatement		2119:0:67722:68256	1074225	0					
ANR	1074228	IdentifierDeclStatement	struct sljit_const * const_ ;	2120:1:67725:67751	1074225	0	True				
ANR	1074229	IdentifierDecl	* const_		1074225	0					
ANR	1074230	IdentifierDeclType	struct sljit_const *		1074225	0					
ANR	1074231	Identifier	const_		1074225	1					
ANR	1074232	IdentifierDeclStatement	sljit_si reg ;	2121:1:67754:67766	1074225	1	True				
ANR	1074233	IdentifierDecl	reg		1074225	0					
ANR	1074234	IdentifierDeclType	sljit_si		1074225	0					
ANR	1074235	Identifier	reg		1074225	1					
ANR	1074236	ExpressionStatement	CHECK_ERROR_PTR ( )	2123:1:67770:67787	1074225	2	True				
ANR	1074237	CallExpression	CHECK_ERROR_PTR ( )		1074225	0					
ANR	1074238	Callee	CHECK_ERROR_PTR		1074225	0					
ANR	1074239	Identifier	CHECK_ERROR_PTR		1074225	0					
ANR	1074240	ArgumentList			1074225	1					
ANR	1074241	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_const ( compiler , dst , dstw , init_value ) )"	2124:1:67790:67856	1074225	3	True				
ANR	1074242	CallExpression	"CHECK_PTR ( check_sljit_emit_const ( compiler , dst , dstw , init_value ) )"		1074225	0					
ANR	1074243	Callee	CHECK_PTR		1074225	0					
ANR	1074244	Identifier	CHECK_PTR		1074225	0					
ANR	1074245	ArgumentList	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1074225	1					
ANR	1074246	Argument	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1074225	0					
ANR	1074247	CallExpression	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1074225	0					
ANR	1074248	Callee	check_sljit_emit_const		1074225	0					
ANR	1074249	Identifier	check_sljit_emit_const		1074225	0					
ANR	1074250	ArgumentList	compiler		1074225	1					
ANR	1074251	Argument	compiler		1074225	0					
ANR	1074252	Identifier	compiler		1074225	0					
ANR	1074253	Argument	dst		1074225	1					
ANR	1074254	Identifier	dst		1074225	0					
ANR	1074255	Argument	dstw		1074225	2					
ANR	1074256	Identifier	dstw		1074225	0					
ANR	1074257	Argument	init_value		1074225	3					
ANR	1074258	Identifier	init_value		1074225	0					
ANR	1074259	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2125:1:67859:67889	1074225	4	True				
ANR	1074260	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1074225	0					
ANR	1074261	Callee	ADJUST_LOCAL_OFFSET		1074225	0					
ANR	1074262	Identifier	ADJUST_LOCAL_OFFSET		1074225	0					
ANR	1074263	ArgumentList	dst		1074225	1					
ANR	1074264	Argument	dst		1074225	0					
ANR	1074265	Identifier	dst		1074225	0					
ANR	1074266	Argument	dstw		1074225	1					
ANR	1074267	Identifier	dstw		1074225	0					
ANR	1074268	ExpressionStatement	"const_ = ( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"	2127:1:67893:67972	1074225	5	True				
ANR	1074269	AssignmentExpression	"const_ = ( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1074225	0		=			
ANR	1074270	Identifier	const_		1074225	0					
ANR	1074271	CastExpression	"( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1074225	1					
ANR	1074272	CastTarget	struct sljit_const *		1074225	0					
ANR	1074273	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1074225	1					
ANR	1074274	Callee	ensure_abuf		1074225	0					
ANR	1074275	Identifier	ensure_abuf		1074225	0					
ANR	1074276	ArgumentList	compiler		1074225	1					
ANR	1074277	Argument	compiler		1074225	0					
ANR	1074278	Identifier	compiler		1074225	0					
ANR	1074279	Argument	sizeof ( struct sljit_const )		1074225	1					
ANR	1074280	SizeofExpression	sizeof ( struct sljit_const )		1074225	0					
ANR	1074281	Sizeof	sizeof		1074225	0					
ANR	1074282	SizeofOperand	struct sljit_const		1074225	1					
ANR	1074283	ExpressionStatement	PTR_FAIL_IF ( ! const_ )	2128:1:67975:67995	1074225	6	True				
ANR	1074284	CallExpression	PTR_FAIL_IF ( ! const_ )		1074225	0					
ANR	1074285	Callee	PTR_FAIL_IF		1074225	0					
ANR	1074286	Identifier	PTR_FAIL_IF		1074225	0					
ANR	1074287	ArgumentList	! const_		1074225	1					
ANR	1074288	Argument	! const_		1074225	0					
ANR	1074289	UnaryOperationExpression	! const_		1074225	0					
ANR	1074290	UnaryOperator	!		1074225	0					
ANR	1074291	Identifier	const_		1074225	1					
ANR	1074292	ExpressionStatement	"set_const ( const_ , compiler )"	2129:1:67998:68025	1074225	7	True				
ANR	1074293	CallExpression	"set_const ( const_ , compiler )"		1074225	0					
ANR	1074294	Callee	set_const		1074225	0					
ANR	1074295	Identifier	set_const		1074225	0					
ANR	1074296	ArgumentList	const_		1074225	1					
ANR	1074297	Argument	const_		1074225	0					
ANR	1074298	Identifier	const_		1074225	0					
ANR	1074299	Argument	compiler		1074225	1					
ANR	1074300	Identifier	compiler		1074225	0					
ANR	1074301	ExpressionStatement	reg = SLOW_IS_REG ( dst ) ? dst : TMP_REG2	2131:1:68029:68068	1074225	8	True				
ANR	1074302	AssignmentExpression	reg = SLOW_IS_REG ( dst ) ? dst : TMP_REG2		1074225	0		=			
ANR	1074303	Identifier	reg		1074225	0					
ANR	1074304	ConditionalExpression	SLOW_IS_REG ( dst ) ? dst : TMP_REG2		1074225	1					
ANR	1074305	Condition	SLOW_IS_REG ( dst )		1074225	0					
ANR	1074306	CallExpression	SLOW_IS_REG ( dst )		1074225	0					
ANR	1074307	Callee	SLOW_IS_REG		1074225	0					
ANR	1074308	Identifier	SLOW_IS_REG		1074225	0					
ANR	1074309	ArgumentList	dst		1074225	1					
ANR	1074310	Argument	dst		1074225	0					
ANR	1074311	Identifier	dst		1074225	0					
ANR	1074312	Identifier	dst		1074225	1					
ANR	1074313	Identifier	TMP_REG2		1074225	2					
ANR	1074314	ExpressionStatement	"PTR_FAIL_IF ( emit_const ( compiler , reg , init_value ) )"	2133:1:68072:68122	1074225	9	True				
ANR	1074315	CallExpression	"PTR_FAIL_IF ( emit_const ( compiler , reg , init_value ) )"		1074225	0					
ANR	1074316	Callee	PTR_FAIL_IF		1074225	0					
ANR	1074317	Identifier	PTR_FAIL_IF		1074225	0					
ANR	1074318	ArgumentList	"emit_const ( compiler , reg , init_value )"		1074225	1					
ANR	1074319	Argument	"emit_const ( compiler , reg , init_value )"		1074225	0					
ANR	1074320	CallExpression	"emit_const ( compiler , reg , init_value )"		1074225	0					
ANR	1074321	Callee	emit_const		1074225	0					
ANR	1074322	Identifier	emit_const		1074225	0					
ANR	1074323	ArgumentList	compiler		1074225	1					
ANR	1074324	Argument	compiler		1074225	0					
ANR	1074325	Identifier	compiler		1074225	0					
ANR	1074326	Argument	reg		1074225	1					
ANR	1074327	Identifier	reg		1074225	0					
ANR	1074328	Argument	init_value		1074225	2					
ANR	1074329	Identifier	init_value		1074225	0					
ANR	1074330	IfStatement	if ( dst & SLJIT_MEM )		1074225	10					
ANR	1074331	Condition	dst & SLJIT_MEM	2135:5:68130:68144	1074225	0	True				
ANR	1074332	BitAndExpression	dst & SLJIT_MEM		1074225	0		&			
ANR	1074333	Identifier	dst		1074225	0					
ANR	1074334	Identifier	SLJIT_MEM		1074225	1					
ANR	1074335	ExpressionStatement	"PTR_FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 ) )"	2136:2:68149:68238	1074225	1	True				
ANR	1074336	CallExpression	"PTR_FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 ) )"		1074225	0					
ANR	1074337	Callee	PTR_FAIL_IF		1074225	0					
ANR	1074338	Identifier	PTR_FAIL_IF		1074225	0					
ANR	1074339	ArgumentList	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 )"		1074225	1					
ANR	1074340	Argument	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 )"		1074225	0					
ANR	1074341	CallExpression	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 )"		1074225	0					
ANR	1074342	Callee	emit_op		1074225	0					
ANR	1074343	Identifier	emit_op		1074225	0					
ANR	1074344	ArgumentList	compiler		1074225	1					
ANR	1074345	Argument	compiler		1074225	0					
ANR	1074346	Identifier	compiler		1074225	0					
ANR	1074347	Argument	SLJIT_MOV		1074225	1					
ANR	1074348	Identifier	SLJIT_MOV		1074225	0					
ANR	1074349	Argument	WORD_DATA		1074225	2					
ANR	1074350	Identifier	WORD_DATA		1074225	0					
ANR	1074351	Argument	dst		1074225	3					
ANR	1074352	Identifier	dst		1074225	0					
ANR	1074353	Argument	dstw		1074225	4					
ANR	1074354	Identifier	dstw		1074225	0					
ANR	1074355	Argument	TMP_REG1		1074225	5					
ANR	1074356	Identifier	TMP_REG1		1074225	0					
ANR	1074357	Argument	0		1074225	6					
ANR	1074358	PrimaryExpression	0		1074225	0					
ANR	1074359	Argument	TMP_REG2		1074225	7					
ANR	1074360	Identifier	TMP_REG2		1074225	0					
ANR	1074361	Argument	0		1074225	8					
ANR	1074362	PrimaryExpression	0		1074225	0					
ANR	1074363	ReturnStatement	return const_ ;	2137:1:68241:68254	1074225	11	True				
ANR	1074364	Identifier	const_		1074225	0					
ANR	1074365	ReturnType	struct sljit_const *		1074225	1					
ANR	1074366	Identifier	sljit_emit_const		1074225	2					
ANR	1074367	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value"		1074225	3					
ANR	1074368	Parameter	struct sljit_compiler * compiler	2118:62:67639:67669	1074225	0	True				
ANR	1074369	ParameterType	struct sljit_compiler *		1074225	0					
ANR	1074370	Identifier	compiler		1074225	1					
ANR	1074371	Parameter	sljit_si dst	2118:95:67672:67683	1074225	1	True				
ANR	1074372	ParameterType	sljit_si		1074225	0					
ANR	1074373	Identifier	dst		1074225	1					
ANR	1074374	Parameter	sljit_sw dstw	2118:109:67686:67698	1074225	2	True				
ANR	1074375	ParameterType	sljit_sw		1074225	0					
ANR	1074376	Identifier	dstw		1074225	1					
ANR	1074377	Parameter	sljit_sw init_value	2118:124:67701:67719	1074225	3	True				
ANR	1074378	ParameterType	sljit_sw		1074225	0					
ANR	1074379	Identifier	init_value		1074225	1					
ANR	1074380	CFGEntryNode	ENTRY		1074225		True				
ANR	1074381	CFGExitNode	EXIT		1074225		True				
ANR	1074382	Symbol	check_sljit_emit_const		1074225						
ANR	1074383	Symbol	TMP_REG2		1074225						
ANR	1074384	Symbol	TMP_REG1		1074225						
ANR	1074385	Symbol	const_		1074225						
ANR	1074386	Symbol	dst		1074225						
ANR	1074387	Symbol	SLJIT_MOV		1074225						
ANR	1074388	Symbol	SLJIT_MEM		1074225						
ANR	1074389	Symbol	SLOW_IS_REG		1074225						
ANR	1074390	Symbol	ensure_abuf		1074225						
ANR	1074391	Symbol	reg		1074225						
ANR	1074392	Symbol	emit_const		1074225						
ANR	1074393	Symbol	compiler		1074225						
ANR	1074394	Symbol	init_value		1074225						
ANR	1074395	Symbol	dstw		1074225						
ANR	1074396	Symbol	emit_op		1074225						
ANR	1074397	Symbol	WORD_DATA		1074225						
