command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1999318	File	data/converged/CVE-2017-11142_php-src/ext_standard_math.c								
ANR	1999319	Function	php_intlog10abs	36:0:1629:2489							
ANR	1999320	FunctionDef	php_intlog10abs (double value)		1999319	0					
ANR	1999321	CompoundStatement		36:48:1677:2489	1999319	0					
ANR	1999322	IdentifierDeclStatement	int result ;	37:1:1680:1690	1999319	0	True				
ANR	1999323	IdentifierDecl	result		1999319	0					
ANR	1999324	IdentifierDeclType	int		1999319	0					
ANR	1999325	Identifier	result		1999319	1					
ANR	1999326	ExpressionStatement	value = fabs ( value )	38:1:1693:1712	1999319	1	True				
ANR	1999327	AssignmentExpression	value = fabs ( value )		1999319	0		=			
ANR	1999328	Identifier	value		1999319	0					
ANR	1999329	CallExpression	fabs ( value )		1999319	1					
ANR	1999330	Callee	fabs		1999319	0					
ANR	1999331	Identifier	fabs		1999319	0					
ANR	1999332	ArgumentList	value		1999319	1					
ANR	1999333	Argument	value		1999319	0					
ANR	1999334	Identifier	value		1999319	0					
ANR	1999335	IfStatement	if ( value < 1e-8 || value > 1e22 )		1999319	2					
ANR	1999336	Condition	value < 1e-8 || value > 1e22	40:5:1720:1747	1999319	0	True				
ANR	1999337	OrExpression	value < 1e-8 || value > 1e22		1999319	0		||			
ANR	1999338	RelationalExpression	value < 1e-8		1999319	0		<			
ANR	1999339	Identifier	value		1999319	0					
ANR	1999340	PrimaryExpression	1e-8		1999319	1					
ANR	1999341	RelationalExpression	value > 1e22		1999319	1		>			
ANR	1999342	Identifier	value		1999319	0					
ANR	1999343	PrimaryExpression	1e22		1999319	1					
ANR	1999344	CompoundStatement		5:35:72:72	1999319	1					
ANR	1999345	ExpressionStatement	result = ( int ) floor ( log10 ( value ) )	41:2:1754:1787	1999319	0	True				
ANR	1999346	AssignmentExpression	result = ( int ) floor ( log10 ( value ) )		1999319	0		=			
ANR	1999347	Identifier	result		1999319	0					
ANR	1999348	CastExpression	( int ) floor ( log10 ( value ) )		1999319	1					
ANR	1999349	CastTarget	int		1999319	0					
ANR	1999350	CallExpression	floor ( log10 ( value ) )		1999319	1					
ANR	1999351	Callee	floor		1999319	0					
ANR	1999352	Identifier	floor		1999319	0					
ANR	1999353	ArgumentList	log10 ( value )		1999319	1					
ANR	1999354	Argument	log10 ( value )		1999319	0					
ANR	1999355	CallExpression	log10 ( value )		1999319	0					
ANR	1999356	Callee	log10		1999319	0					
ANR	1999357	Identifier	log10		1999319	0					
ANR	1999358	ArgumentList	value		1999319	1					
ANR	1999359	Argument	value		1999319	0					
ANR	1999360	Identifier	value		1999319	0					
ANR	1999361	ElseStatement	else		1999319	0					
ANR	1999362	CompoundStatement		8:9:130:352	1999319	0					
ANR	1999363	Statement	static	43:2:1801:1806	1999319	0	True				
ANR	1999364	IdentifierDeclStatement	"const double values [ ] = { 1e-8 , 1e-7 , 1e-6 , 1e-5 , 1e-4 , 1e-3 , 1e-2 , 1e-1 , 1e0 , 1e1 , 1e2 , 1e3 , 1e4 , 1e5 , 1e6 , 1e7 , 1e8 , 1e9 , 1e10 , 1e11 , 1e12 , 1e13 , 1e14 , 1e15 , 1e16 , 1e17 , 1e18 , 1e19 , 1e20 , 1e21 , 1e22 } ;"	43:9:1808:2030	1999319	1	True				
ANR	1999365	IdentifierDecl	"values [ ] = { 1e-8 , 1e-7 , 1e-6 , 1e-5 , 1e-4 , 1e-3 , 1e-2 , 1e-1 , 1e0 , 1e1 , 1e2 , 1e3 , 1e4 , 1e5 , 1e6 , 1e7 , 1e8 , 1e9 , 1e10 , 1e11 , 1e12 , 1e13 , 1e14 , 1e15 , 1e16 , 1e17 , 1e18 , 1e19 , 1e20 , 1e21 , 1e22 }"		1999319	0					
ANR	1999366	IdentifierDeclType	const double [ ]		1999319	0					
ANR	1999367	Identifier	values		1999319	1					
ANR	1999368	AssignmentExpression	"values [ ] = { 1e-8 , 1e-7 , 1e-6 , 1e-5 , 1e-4 , 1e-3 , 1e-2 , 1e-1 , 1e0 , 1e1 , 1e2 , 1e3 , 1e4 , 1e5 , 1e6 , 1e7 , 1e8 , 1e9 , 1e10 , 1e11 , 1e12 , 1e13 , 1e14 , 1e15 , 1e16 , 1e17 , 1e18 , 1e19 , 1e20 , 1e21 , 1e22 }"		1999319	2		=			
ANR	1999369	Identifier	values		1999319	0					
ANR	1999370	InitializerList	1e-8		1999319	1					
ANR	1999371	PrimaryExpression	1e-8		1999319	0					
ANR	1999372	PrimaryExpression	1e-7		1999319	1					
ANR	1999373	PrimaryExpression	1e-6		1999319	2					
ANR	1999374	PrimaryExpression	1e-5		1999319	3					
ANR	1999375	PrimaryExpression	1e-4		1999319	4					
ANR	1999376	PrimaryExpression	1e-3		1999319	5					
ANR	1999377	PrimaryExpression	1e-2		1999319	6					
ANR	1999378	PrimaryExpression	1e-1		1999319	7					
ANR	1999379	PrimaryExpression	1e0		1999319	8					
ANR	1999380	PrimaryExpression	1e1		1999319	9					
ANR	1999381	PrimaryExpression	1e2		1999319	10					
ANR	1999382	PrimaryExpression	1e3		1999319	11					
ANR	1999383	PrimaryExpression	1e4		1999319	12					
ANR	1999384	PrimaryExpression	1e5		1999319	13					
ANR	1999385	PrimaryExpression	1e6		1999319	14					
ANR	1999386	PrimaryExpression	1e7		1999319	15					
ANR	1999387	PrimaryExpression	1e8		1999319	16					
ANR	1999388	PrimaryExpression	1e9		1999319	17					
ANR	1999389	PrimaryExpression	1e10		1999319	18					
ANR	1999390	PrimaryExpression	1e11		1999319	19					
ANR	1999391	PrimaryExpression	1e12		1999319	20					
ANR	1999392	PrimaryExpression	1e13		1999319	21					
ANR	1999393	PrimaryExpression	1e14		1999319	22					
ANR	1999394	PrimaryExpression	1e15		1999319	23					
ANR	1999395	PrimaryExpression	1e16		1999319	24					
ANR	1999396	PrimaryExpression	1e17		1999319	25					
ANR	1999397	PrimaryExpression	1e18		1999319	26					
ANR	1999398	PrimaryExpression	1e19		1999319	27					
ANR	1999399	PrimaryExpression	1e20		1999319	28					
ANR	1999400	PrimaryExpression	1e21		1999319	29					
ANR	1999401	PrimaryExpression	1e22		1999319	30					
ANR	1999402	ExpressionStatement	result = 15	49:2:2074:2085	1999319	2	True				
ANR	1999403	AssignmentExpression	result = 15		1999319	0		=			
ANR	1999404	Identifier	result		1999319	0					
ANR	1999405	PrimaryExpression	15		1999319	1					
ANR	1999406	IfStatement	if ( value < values [ result ] )		1999319	3					
ANR	1999407	Condition	value < values [ result ]	50:6:2093:2114	1999319	0	True				
ANR	1999408	RelationalExpression	value < values [ result ]		1999319	0		<			
ANR	1999409	Identifier	value		1999319	0					
ANR	1999410	ArrayIndexing	values [ result ]		1999319	1					
ANR	1999411	Identifier	values		1999319	0					
ANR	1999412	Identifier	result		1999319	1					
ANR	1999413	CompoundStatement		15:30:439:439	1999319	1					
ANR	1999414	ExpressionStatement	result -= 8	51:3:2122:2133	1999319	0	True				
ANR	1999415	AssignmentExpression	result -= 8		1999319	0		-=			
ANR	1999416	Identifier	result		1999319	0					
ANR	1999417	PrimaryExpression	8		1999319	1					
ANR	1999418	ElseStatement	else		1999319	0					
ANR	1999419	CompoundStatement		17:9:466:466	1999319	0					
ANR	1999420	ExpressionStatement	result += 8	53:3:2149:2160	1999319	0	True				
ANR	1999421	AssignmentExpression	result += 8		1999319	0		+=			
ANR	1999422	Identifier	result		1999319	0					
ANR	1999423	PrimaryExpression	8		1999319	1					
ANR	1999424	IfStatement	if ( value < values [ result ] )		1999319	4					
ANR	1999425	Condition	value < values [ result ]	55:6:2172:2193	1999319	0	True				
ANR	1999426	RelationalExpression	value < values [ result ]		1999319	0		<			
ANR	1999427	Identifier	value		1999319	0					
ANR	1999428	ArrayIndexing	values [ result ]		1999319	1					
ANR	1999429	Identifier	values		1999319	0					
ANR	1999430	Identifier	result		1999319	1					
ANR	1999431	CompoundStatement		20:30:518:518	1999319	1					
ANR	1999432	ExpressionStatement	result -= 4	56:3:2201:2212	1999319	0	True				
ANR	1999433	AssignmentExpression	result -= 4		1999319	0		-=			
ANR	1999434	Identifier	result		1999319	0					
ANR	1999435	PrimaryExpression	4		1999319	1					
ANR	1999436	ElseStatement	else		1999319	0					
ANR	1999437	CompoundStatement		22:9:545:545	1999319	0					
ANR	1999438	ExpressionStatement	result += 4	58:3:2228:2239	1999319	0	True				
ANR	1999439	AssignmentExpression	result += 4		1999319	0		+=			
ANR	1999440	Identifier	result		1999319	0					
ANR	1999441	PrimaryExpression	4		1999319	1					
ANR	1999442	IfStatement	if ( value < values [ result ] )		1999319	5					
ANR	1999443	Condition	value < values [ result ]	60:6:2251:2272	1999319	0	True				
ANR	1999444	RelationalExpression	value < values [ result ]		1999319	0		<			
ANR	1999445	Identifier	value		1999319	0					
ANR	1999446	ArrayIndexing	values [ result ]		1999319	1					
ANR	1999447	Identifier	values		1999319	0					
ANR	1999448	Identifier	result		1999319	1					
ANR	1999449	CompoundStatement		25:30:597:597	1999319	1					
ANR	1999450	ExpressionStatement	result -= 2	61:3:2280:2291	1999319	0	True				
ANR	1999451	AssignmentExpression	result -= 2		1999319	0		-=			
ANR	1999452	Identifier	result		1999319	0					
ANR	1999453	PrimaryExpression	2		1999319	1					
ANR	1999454	ElseStatement	else		1999319	0					
ANR	1999455	CompoundStatement		27:9:624:624	1999319	0					
ANR	1999456	ExpressionStatement	result += 2	63:3:2307:2318	1999319	0	True				
ANR	1999457	AssignmentExpression	result += 2		1999319	0		+=			
ANR	1999458	Identifier	result		1999319	0					
ANR	1999459	PrimaryExpression	2		1999319	1					
ANR	1999460	IfStatement	if ( value < values [ result ] )		1999319	6					
ANR	1999461	Condition	value < values [ result ]	65:6:2330:2351	1999319	0	True				
ANR	1999462	RelationalExpression	value < values [ result ]		1999319	0		<			
ANR	1999463	Identifier	value		1999319	0					
ANR	1999464	ArrayIndexing	values [ result ]		1999319	1					
ANR	1999465	Identifier	values		1999319	0					
ANR	1999466	Identifier	result		1999319	1					
ANR	1999467	CompoundStatement		30:30:676:676	1999319	1					
ANR	1999468	ExpressionStatement	result -= 1	66:3:2359:2370	1999319	0	True				
ANR	1999469	AssignmentExpression	result -= 1		1999319	0		-=			
ANR	1999470	Identifier	result		1999319	0					
ANR	1999471	PrimaryExpression	1		1999319	1					
ANR	1999472	ElseStatement	else		1999319	0					
ANR	1999473	CompoundStatement		32:9:703:703	1999319	0					
ANR	1999474	ExpressionStatement	result += 1	68:3:2386:2397	1999319	0	True				
ANR	1999475	AssignmentExpression	result += 1		1999319	0		+=			
ANR	1999476	Identifier	result		1999319	0					
ANR	1999477	PrimaryExpression	1		1999319	1					
ANR	1999478	IfStatement	if ( value < values [ result ] )		1999319	7					
ANR	1999479	Condition	value < values [ result ]	70:6:2409:2430	1999319	0	True				
ANR	1999480	RelationalExpression	value < values [ result ]		1999319	0		<			
ANR	1999481	Identifier	value		1999319	0					
ANR	1999482	ArrayIndexing	values [ result ]		1999319	1					
ANR	1999483	Identifier	values		1999319	0					
ANR	1999484	Identifier	result		1999319	1					
ANR	1999485	CompoundStatement		35:30:755:755	1999319	1					
ANR	1999486	ExpressionStatement	result -= 1	71:3:2438:2449	1999319	0	True				
ANR	1999487	AssignmentExpression	result -= 1		1999319	0		-=			
ANR	1999488	Identifier	result		1999319	0					
ANR	1999489	PrimaryExpression	1		1999319	1					
ANR	1999490	ExpressionStatement	result -= 8	73:2:2457:2468	1999319	8	True				
ANR	1999491	AssignmentExpression	result -= 8		1999319	0		-=			
ANR	1999492	Identifier	result		1999319	0					
ANR	1999493	PrimaryExpression	8		1999319	1					
ANR	1999494	ReturnStatement	return result ;	75:1:2474:2487	1999319	3	True				
ANR	1999495	Identifier	result		1999319	0					
ANR	1999496	ReturnType	static inline int		1999319	1					
ANR	1999497	Identifier	php_intlog10abs		1999319	2					
ANR	1999498	ParameterList	double value		1999319	3					
ANR	1999499	Parameter	double value	36:34:1663:1674	1999319	0	True				
ANR	1999500	ParameterType	double		1999319	0					
ANR	1999501	Identifier	value		1999319	1					
ANR	1999502	CFGEntryNode	ENTRY		1999319		True				
ANR	1999503	CFGExitNode	EXIT		1999319		True				
ANR	1999504	Symbol	result		1999319						
ANR	1999505	Symbol	fabs		1999319						
ANR	1999506	Symbol	* result		1999319						
ANR	1999507	Symbol	log10		1999319						
ANR	1999508	Symbol	* values		1999319						
ANR	1999509	Symbol	values		1999319						
ANR	1999510	Symbol	floor		1999319						
ANR	1999511	Symbol	value		1999319						
ANR	1999512	Function	php_intpow10	81:0:2606:2952							
ANR	1999513	FunctionDef	php_intpow10 (int power)		1999512	0					
ANR	1999514	CompoundStatement		81:45:2651:2952	1999512	0					
ANR	1999515	Statement	static	82:1:2654:2659	1999512	0	True				
ANR	1999516	IdentifierDeclStatement	"const double powers [ ] = { 1e0 , 1e1 , 1e2 , 1e3 , 1e4 , 1e5 , 1e6 , 1e7 , 1e8 , 1e9 , 1e10 , 1e11 , 1e12 , 1e13 , 1e14 , 1e15 , 1e16 , 1e17 , 1e18 , 1e19 , 1e20 , 1e21 , 1e22 } ;"	82:8:2661:2829	1999512	1	True				
ANR	1999517	IdentifierDecl	"powers [ ] = { 1e0 , 1e1 , 1e2 , 1e3 , 1e4 , 1e5 , 1e6 , 1e7 , 1e8 , 1e9 , 1e10 , 1e11 , 1e12 , 1e13 , 1e14 , 1e15 , 1e16 , 1e17 , 1e18 , 1e19 , 1e20 , 1e21 , 1e22 }"		1999512	0					
ANR	1999518	IdentifierDeclType	const double [ ]		1999512	0					
ANR	1999519	Identifier	powers		1999512	1					
ANR	1999520	AssignmentExpression	"powers [ ] = { 1e0 , 1e1 , 1e2 , 1e3 , 1e4 , 1e5 , 1e6 , 1e7 , 1e8 , 1e9 , 1e10 , 1e11 , 1e12 , 1e13 , 1e14 , 1e15 , 1e16 , 1e17 , 1e18 , 1e19 , 1e20 , 1e21 , 1e22 }"		1999512	2		=			
ANR	1999521	Identifier	powers		1999512	0					
ANR	1999522	InitializerList	1e0		1999512	1					
ANR	1999523	PrimaryExpression	1e0		1999512	0					
ANR	1999524	PrimaryExpression	1e1		1999512	1					
ANR	1999525	PrimaryExpression	1e2		1999512	2					
ANR	1999526	PrimaryExpression	1e3		1999512	3					
ANR	1999527	PrimaryExpression	1e4		1999512	4					
ANR	1999528	PrimaryExpression	1e5		1999512	5					
ANR	1999529	PrimaryExpression	1e6		1999512	6					
ANR	1999530	PrimaryExpression	1e7		1999512	7					
ANR	1999531	PrimaryExpression	1e8		1999512	8					
ANR	1999532	PrimaryExpression	1e9		1999512	9					
ANR	1999533	PrimaryExpression	1e10		1999512	10					
ANR	1999534	PrimaryExpression	1e11		1999512	11					
ANR	1999535	PrimaryExpression	1e12		1999512	12					
ANR	1999536	PrimaryExpression	1e13		1999512	13					
ANR	1999537	PrimaryExpression	1e14		1999512	14					
ANR	1999538	PrimaryExpression	1e15		1999512	15					
ANR	1999539	PrimaryExpression	1e16		1999512	16					
ANR	1999540	PrimaryExpression	1e17		1999512	17					
ANR	1999541	PrimaryExpression	1e18		1999512	18					
ANR	1999542	PrimaryExpression	1e19		1999512	19					
ANR	1999543	PrimaryExpression	1e20		1999512	20					
ANR	1999544	PrimaryExpression	1e21		1999512	21					
ANR	1999545	PrimaryExpression	1e22		1999512	22					
ANR	1999546	IfStatement	if ( power < 0 || power > 22 )		1999512	2					
ANR	1999547	Condition	power < 0 || power > 22	88:5:2864:2886	1999512	0	True				
ANR	1999548	OrExpression	power < 0 || power > 22		1999512	0		||			
ANR	1999549	RelationalExpression	power < 0		1999512	0		<			
ANR	1999550	Identifier	power		1999512	0					
ANR	1999551	PrimaryExpression	0		1999512	1					
ANR	1999552	RelationalExpression	power > 22		1999512	1		>			
ANR	1999553	Identifier	power		1999512	0					
ANR	1999554	PrimaryExpression	22		1999512	1					
ANR	1999555	CompoundStatement		8:30:237:237	1999512	1					
ANR	1999556	ReturnStatement	"return pow ( 10.0 , ( double ) power ) ;"	89:2:2893:2924	1999512	0	True				
ANR	1999557	CallExpression	"pow ( 10.0 , ( double ) power )"		1999512	0					
ANR	1999558	Callee	pow		1999512	0					
ANR	1999559	Identifier	pow		1999512	0					
ANR	1999560	ArgumentList	10.0		1999512	1					
ANR	1999561	Argument	10.0		1999512	0					
ANR	1999562	PrimaryExpression	10.0		1999512	0					
ANR	1999563	Argument	( double ) power		1999512	1					
ANR	1999564	CastExpression	( double ) power		1999512	0					
ANR	1999565	CastTarget	double		1999512	0					
ANR	1999566	Identifier	power		1999512	1					
ANR	1999567	ReturnStatement	return powers [ power ] ;	91:1:2930:2950	1999512	3	True				
ANR	1999568	ArrayIndexing	powers [ power ]		1999512	0					
ANR	1999569	Identifier	powers		1999512	0					
ANR	1999570	Identifier	power		1999512	1					
ANR	1999571	ReturnType	static inline double		1999512	1					
ANR	1999572	Identifier	php_intpow10		1999512	2					
ANR	1999573	ParameterList	int power		1999512	3					
ANR	1999574	Parameter	int power	81:34:2640:2648	1999512	0	True				
ANR	1999575	ParameterType	int		1999512	0					
ANR	1999576	Identifier	power		1999512	1					
ANR	1999577	CFGEntryNode	ENTRY		1999512		True				
ANR	1999578	CFGExitNode	EXIT		1999512		True				
ANR	1999579	Symbol	* power		1999512						
ANR	1999580	Symbol	pow		1999512						
ANR	1999581	Symbol	power		1999512						
ANR	1999582	Symbol	powers		1999512						
ANR	1999583	Symbol	* powers		1999512						
ANR	1999584	Function	php_math_is_finite	96:0:2994:3220							
ANR	1999585	FunctionDef	php_math_is_finite (double value)		1999584	0					
ANR	1999586	CompoundStatement		96:51:3045:3220	1999584	0					
ANR	1999587	ReturnStatement	return _finite ( value ) ;	98:1:3071:3092	1999584	0	True				
ANR	1999588	CallExpression	_finite ( value )		1999584	0					
ANR	1999589	Callee	_finite		1999584	0					
ANR	1999590	Identifier	_finite		1999584	0					
ANR	1999591	ArgumentList	value		1999584	1					
ANR	1999592	Argument	value		1999584	0					
ANR	1999593	Identifier	value		1999584	0					
ANR	1999594	ReturnType	static inline int		1999584	1					
ANR	1999595	Identifier	php_math_is_finite		1999584	2					
ANR	1999596	ParameterList	double value		1999584	3					
ANR	1999597	Parameter	double value	96:37:3031:3042	1999584	0	True				
ANR	1999598	ParameterType	double		1999584	0					
ANR	1999599	Identifier	value		1999584	1					
ANR	1999600	CFGEntryNode	ENTRY		1999584		True				
ANR	1999601	CFGExitNode	EXIT		1999584		True				
ANR	1999602	Symbol	_finite		1999584						
ANR	1999603	Symbol	value		1999584						
ANR	1999604	Function	php_round_helper	109:0:3338:4094							
ANR	1999605	FunctionDef	"php_round_helper (double value , int mode)"		1999604	0					
ANR	1999606	CompoundStatement		109:62:3400:4094	1999604	0					
ANR	1999607	IdentifierDeclStatement	double tmp_value ;	110:1:3403:3419	1999604	0	True				
ANR	1999608	IdentifierDecl	tmp_value		1999604	0					
ANR	1999609	IdentifierDeclType	double		1999604	0					
ANR	1999610	Identifier	tmp_value		1999604	1					
ANR	1999611	IfStatement	if ( value >= 0.0 )		1999604	1					
ANR	1999612	Condition	value >= 0.0	112:5:3427:3438	1999604	0	True				
ANR	1999613	RelationalExpression	value >= 0.0		1999604	0		>=			
ANR	1999614	Identifier	value		1999604	0					
ANR	1999615	PrimaryExpression	0.0		1999604	1					
ANR	1999616	CompoundStatement		4:19:40:40	1999604	1					
ANR	1999617	ExpressionStatement	tmp_value = floor ( value + 0.5 )	113:2:3445:3475	1999604	0	True				
ANR	1999618	AssignmentExpression	tmp_value = floor ( value + 0.5 )		1999604	0		=			
ANR	1999619	Identifier	tmp_value		1999604	0					
ANR	1999620	CallExpression	floor ( value + 0.5 )		1999604	1					
ANR	1999621	Callee	floor		1999604	0					
ANR	1999622	Identifier	floor		1999604	0					
ANR	1999623	ArgumentList	value + 0.5		1999604	1					
ANR	1999624	Argument	value + 0.5		1999604	0					
ANR	1999625	AdditiveExpression	value + 0.5		1999604	0		+			
ANR	1999626	Identifier	value		1999604	0					
ANR	1999627	PrimaryExpression	0.5		1999604	1					
ANR	1999628	IfStatement	if ( ( mode == PHP_ROUND_HALF_DOWN && value == ( - 0.5 + tmp_value ) ) || ( mode == PHP_ROUND_HALF_EVEN && value == ( 0.5 + 2 * floor ( tmp_value / 2.0 ) ) ) || ( mode == PHP_ROUND_HALF_ODD && value == ( 0.5 + 2 * floor ( tmp_value / 2.0 ) - 1.0 ) ) )		1999604	1					
ANR	1999629	Condition	( mode == PHP_ROUND_HALF_DOWN && value == ( - 0.5 + tmp_value ) ) || ( mode == PHP_ROUND_HALF_EVEN && value == ( 0.5 + 2 * floor ( tmp_value / 2.0 ) ) ) || ( mode == PHP_ROUND_HALF_ODD && value == ( 0.5 + 2 * floor ( tmp_value / 2.0 ) - 1.0 ) )	114:6:3483:3710	1999604	0	True				
ANR	1999630	OrExpression	( mode == PHP_ROUND_HALF_DOWN && value == ( - 0.5 + tmp_value ) ) || ( mode == PHP_ROUND_HALF_EVEN && value == ( 0.5 + 2 * floor ( tmp_value / 2.0 ) ) ) || ( mode == PHP_ROUND_HALF_ODD && value == ( 0.5 + 2 * floor ( tmp_value / 2.0 ) - 1.0 ) )		1999604	0		||			
ANR	1999631	AndExpression	mode == PHP_ROUND_HALF_DOWN && value == ( - 0.5 + tmp_value )		1999604	0		&&			
ANR	1999632	EqualityExpression	mode == PHP_ROUND_HALF_DOWN		1999604	0		==			
ANR	1999633	Identifier	mode		1999604	0					
ANR	1999634	Identifier	PHP_ROUND_HALF_DOWN		1999604	1					
ANR	1999635	EqualityExpression	value == ( - 0.5 + tmp_value )		1999604	1		==			
ANR	1999636	Identifier	value		1999604	0					
ANR	1999637	AdditiveExpression	- 0.5 + tmp_value		1999604	1		+			
ANR	1999638	UnaryOperationExpression	- 0.5		1999604	0					
ANR	1999639	UnaryOperator	-		1999604	0					
ANR	1999640	PrimaryExpression	0.5		1999604	1					
ANR	1999641	Identifier	tmp_value		1999604	1					
ANR	1999642	OrExpression	( mode == PHP_ROUND_HALF_EVEN && value == ( 0.5 + 2 * floor ( tmp_value / 2.0 ) ) ) || ( mode == PHP_ROUND_HALF_ODD && value == ( 0.5 + 2 * floor ( tmp_value / 2.0 ) - 1.0 ) )		1999604	1		||			
ANR	1999643	AndExpression	mode == PHP_ROUND_HALF_EVEN && value == ( 0.5 + 2 * floor ( tmp_value / 2.0 ) )		1999604	0		&&			
ANR	1999644	EqualityExpression	mode == PHP_ROUND_HALF_EVEN		1999604	0		==			
ANR	1999645	Identifier	mode		1999604	0					
ANR	1999646	Identifier	PHP_ROUND_HALF_EVEN		1999604	1					
ANR	1999647	EqualityExpression	value == ( 0.5 + 2 * floor ( tmp_value / 2.0 ) )		1999604	1		==			
ANR	1999648	Identifier	value		1999604	0					
ANR	1999649	AdditiveExpression	0.5 + 2 * floor ( tmp_value / 2.0 )		1999604	1		+			
ANR	1999650	PrimaryExpression	0.5		1999604	0					
ANR	1999651	MultiplicativeExpression	2 * floor ( tmp_value / 2.0 )		1999604	1		*			
ANR	1999652	PrimaryExpression	2		1999604	0					
ANR	1999653	CallExpression	floor ( tmp_value / 2.0 )		1999604	1					
ANR	1999654	Callee	floor		1999604	0					
ANR	1999655	Identifier	floor		1999604	0					
ANR	1999656	ArgumentList	tmp_value / 2.0		1999604	1					
ANR	1999657	Argument	tmp_value / 2.0		1999604	0					
ANR	1999658	MultiplicativeExpression	tmp_value / 2.0		1999604	0		/			
ANR	1999659	Identifier	tmp_value		1999604	0					
ANR	1999660	PrimaryExpression	2.0		1999604	1					
ANR	1999661	AndExpression	mode == PHP_ROUND_HALF_ODD && value == ( 0.5 + 2 * floor ( tmp_value / 2.0 ) - 1.0 )		1999604	1		&&			
ANR	1999662	EqualityExpression	mode == PHP_ROUND_HALF_ODD		1999604	0		==			
ANR	1999663	Identifier	mode		1999604	0					
ANR	1999664	Identifier	PHP_ROUND_HALF_ODD		1999604	1					
ANR	1999665	EqualityExpression	value == ( 0.5 + 2 * floor ( tmp_value / 2.0 ) - 1.0 )		1999604	1		==			
ANR	1999666	Identifier	value		1999604	0					
ANR	1999667	AdditiveExpression	0.5 + 2 * floor ( tmp_value / 2.0 ) - 1.0		1999604	1		+			
ANR	1999668	PrimaryExpression	0.5		1999604	0					
ANR	1999669	AdditiveExpression	2 * floor ( tmp_value / 2.0 ) - 1.0		1999604	1		-			
ANR	1999670	MultiplicativeExpression	2 * floor ( tmp_value / 2.0 )		1999604	0		*			
ANR	1999671	PrimaryExpression	2		1999604	0					
ANR	1999672	CallExpression	floor ( tmp_value / 2.0 )		1999604	1					
ANR	1999673	Callee	floor		1999604	0					
ANR	1999674	Identifier	floor		1999604	0					
ANR	1999675	ArgumentList	tmp_value / 2.0		1999604	1					
ANR	1999676	Argument	tmp_value / 2.0		1999604	0					
ANR	1999677	MultiplicativeExpression	tmp_value / 2.0		1999604	0		/			
ANR	1999678	Identifier	tmp_value		1999604	0					
ANR	1999679	PrimaryExpression	2.0		1999604	1					
ANR	1999680	PrimaryExpression	1.0		1999604	1					
ANR	1999681	CompoundStatement		9:2:314:314	1999604	1					
ANR	1999682	ExpressionStatement	tmp_value = tmp_value - 1.0	118:3:3720:3747	1999604	0	True				
ANR	1999683	AssignmentExpression	tmp_value = tmp_value - 1.0		1999604	0		=			
ANR	1999684	Identifier	tmp_value		1999604	0					
ANR	1999685	AdditiveExpression	tmp_value - 1.0		1999604	1		-			
ANR	1999686	Identifier	tmp_value		1999604	0					
ANR	1999687	PrimaryExpression	1.0		1999604	1					
ANR	1999688	ElseStatement	else		1999604	0					
ANR	1999689	CompoundStatement		12:8:360:360	1999604	0					
ANR	1999690	ExpressionStatement	tmp_value = ceil ( value - 0.5 )	121:2:3765:3794	1999604	0	True				
ANR	1999691	AssignmentExpression	tmp_value = ceil ( value - 0.5 )		1999604	0		=			
ANR	1999692	Identifier	tmp_value		1999604	0					
ANR	1999693	CallExpression	ceil ( value - 0.5 )		1999604	1					
ANR	1999694	Callee	ceil		1999604	0					
ANR	1999695	Identifier	ceil		1999604	0					
ANR	1999696	ArgumentList	value - 0.5		1999604	1					
ANR	1999697	Argument	value - 0.5		1999604	0					
ANR	1999698	AdditiveExpression	value - 0.5		1999604	0		-			
ANR	1999699	Identifier	value		1999604	0					
ANR	1999700	PrimaryExpression	0.5		1999604	1					
ANR	1999701	IfStatement	if ( ( mode == PHP_ROUND_HALF_DOWN && value == ( 0.5 + tmp_value ) ) || ( mode == PHP_ROUND_HALF_EVEN && value == ( - 0.5 + 2 * ceil ( tmp_value / 2.0 ) ) ) || ( mode == PHP_ROUND_HALF_ODD && value == ( - 0.5 + 2 * ceil ( tmp_value / 2.0 ) + 1.0 ) ) )		1999604	1					
ANR	1999702	Condition	( mode == PHP_ROUND_HALF_DOWN && value == ( 0.5 + tmp_value ) ) || ( mode == PHP_ROUND_HALF_EVEN && value == ( - 0.5 + 2 * ceil ( tmp_value / 2.0 ) ) ) || ( mode == PHP_ROUND_HALF_ODD && value == ( - 0.5 + 2 * ceil ( tmp_value / 2.0 ) + 1.0 ) )	122:6:3802:4028	1999604	0	True				
ANR	1999703	OrExpression	( mode == PHP_ROUND_HALF_DOWN && value == ( 0.5 + tmp_value ) ) || ( mode == PHP_ROUND_HALF_EVEN && value == ( - 0.5 + 2 * ceil ( tmp_value / 2.0 ) ) ) || ( mode == PHP_ROUND_HALF_ODD && value == ( - 0.5 + 2 * ceil ( tmp_value / 2.0 ) + 1.0 ) )		1999604	0		||			
ANR	1999704	AndExpression	mode == PHP_ROUND_HALF_DOWN && value == ( 0.5 + tmp_value )		1999604	0		&&			
ANR	1999705	EqualityExpression	mode == PHP_ROUND_HALF_DOWN		1999604	0		==			
ANR	1999706	Identifier	mode		1999604	0					
ANR	1999707	Identifier	PHP_ROUND_HALF_DOWN		1999604	1					
ANR	1999708	EqualityExpression	value == ( 0.5 + tmp_value )		1999604	1		==			
ANR	1999709	Identifier	value		1999604	0					
ANR	1999710	AdditiveExpression	0.5 + tmp_value		1999604	1		+			
ANR	1999711	PrimaryExpression	0.5		1999604	0					
ANR	1999712	Identifier	tmp_value		1999604	1					
ANR	1999713	OrExpression	( mode == PHP_ROUND_HALF_EVEN && value == ( - 0.5 + 2 * ceil ( tmp_value / 2.0 ) ) ) || ( mode == PHP_ROUND_HALF_ODD && value == ( - 0.5 + 2 * ceil ( tmp_value / 2.0 ) + 1.0 ) )		1999604	1		||			
ANR	1999714	AndExpression	mode == PHP_ROUND_HALF_EVEN && value == ( - 0.5 + 2 * ceil ( tmp_value / 2.0 ) )		1999604	0		&&			
ANR	1999715	EqualityExpression	mode == PHP_ROUND_HALF_EVEN		1999604	0		==			
ANR	1999716	Identifier	mode		1999604	0					
ANR	1999717	Identifier	PHP_ROUND_HALF_EVEN		1999604	1					
ANR	1999718	EqualityExpression	value == ( - 0.5 + 2 * ceil ( tmp_value / 2.0 ) )		1999604	1		==			
ANR	1999719	Identifier	value		1999604	0					
ANR	1999720	AdditiveExpression	- 0.5 + 2 * ceil ( tmp_value / 2.0 )		1999604	1		+			
ANR	1999721	UnaryOperationExpression	- 0.5		1999604	0					
ANR	1999722	UnaryOperator	-		1999604	0					
ANR	1999723	PrimaryExpression	0.5		1999604	1					
ANR	1999724	MultiplicativeExpression	2 * ceil ( tmp_value / 2.0 )		1999604	1		*			
ANR	1999725	PrimaryExpression	2		1999604	0					
ANR	1999726	CallExpression	ceil ( tmp_value / 2.0 )		1999604	1					
ANR	1999727	Callee	ceil		1999604	0					
ANR	1999728	Identifier	ceil		1999604	0					
ANR	1999729	ArgumentList	tmp_value / 2.0		1999604	1					
ANR	1999730	Argument	tmp_value / 2.0		1999604	0					
ANR	1999731	MultiplicativeExpression	tmp_value / 2.0		1999604	0		/			
ANR	1999732	Identifier	tmp_value		1999604	0					
ANR	1999733	PrimaryExpression	2.0		1999604	1					
ANR	1999734	AndExpression	mode == PHP_ROUND_HALF_ODD && value == ( - 0.5 + 2 * ceil ( tmp_value / 2.0 ) + 1.0 )		1999604	1		&&			
ANR	1999735	EqualityExpression	mode == PHP_ROUND_HALF_ODD		1999604	0		==			
ANR	1999736	Identifier	mode		1999604	0					
ANR	1999737	Identifier	PHP_ROUND_HALF_ODD		1999604	1					
ANR	1999738	EqualityExpression	value == ( - 0.5 + 2 * ceil ( tmp_value / 2.0 ) + 1.0 )		1999604	1		==			
ANR	1999739	Identifier	value		1999604	0					
ANR	1999740	AdditiveExpression	- 0.5 + 2 * ceil ( tmp_value / 2.0 ) + 1.0		1999604	1		+			
ANR	1999741	UnaryOperationExpression	- 0.5		1999604	0					
ANR	1999742	UnaryOperator	-		1999604	0					
ANR	1999743	PrimaryExpression	0.5		1999604	1					
ANR	1999744	AdditiveExpression	2 * ceil ( tmp_value / 2.0 ) + 1.0		1999604	1		+			
ANR	1999745	MultiplicativeExpression	2 * ceil ( tmp_value / 2.0 )		1999604	0		*			
ANR	1999746	PrimaryExpression	2		1999604	0					
ANR	1999747	CallExpression	ceil ( tmp_value / 2.0 )		1999604	1					
ANR	1999748	Callee	ceil		1999604	0					
ANR	1999749	Identifier	ceil		1999604	0					
ANR	1999750	ArgumentList	tmp_value / 2.0		1999604	1					
ANR	1999751	Argument	tmp_value / 2.0		1999604	0					
ANR	1999752	MultiplicativeExpression	tmp_value / 2.0		1999604	0		/			
ANR	1999753	Identifier	tmp_value		1999604	0					
ANR	1999754	PrimaryExpression	2.0		1999604	1					
ANR	1999755	PrimaryExpression	1.0		1999604	1					
ANR	1999756	CompoundStatement		17:2:632:632	1999604	1					
ANR	1999757	ExpressionStatement	tmp_value = tmp_value + 1.0	126:3:4038:4065	1999604	0	True				
ANR	1999758	AssignmentExpression	tmp_value = tmp_value + 1.0		1999604	0		=			
ANR	1999759	Identifier	tmp_value		1999604	0					
ANR	1999760	AdditiveExpression	tmp_value + 1.0		1999604	1		+			
ANR	1999761	Identifier	tmp_value		1999604	0					
ANR	1999762	PrimaryExpression	1.0		1999604	1					
ANR	1999763	ReturnStatement	return tmp_value ;	130:1:4076:4092	1999604	2	True				
ANR	1999764	Identifier	tmp_value		1999604	0					
ANR	1999765	ReturnType	static inline double		1999604	1					
ANR	1999766	Identifier	php_round_helper		1999604	2					
ANR	1999767	ParameterList	"double value , int mode"		1999604	3					
ANR	1999768	Parameter	double value	109:38:3376:3387	1999604	0	True				
ANR	1999769	ParameterType	double		1999604	0					
ANR	1999770	Identifier	value		1999604	1					
ANR	1999771	Parameter	int mode	109:52:3390:3397	1999604	1	True				
ANR	1999772	ParameterType	int		1999604	0					
ANR	1999773	Identifier	mode		1999604	1					
ANR	1999774	CFGEntryNode	ENTRY		1999604		True				
ANR	1999775	CFGExitNode	EXIT		1999604		True				
ANR	1999776	Symbol	mode		1999604						
ANR	1999777	Symbol	PHP_ROUND_HALF_ODD		1999604						
ANR	1999778	Symbol	PHP_ROUND_HALF_EVEN		1999604						
ANR	1999779	Symbol	ceil		1999604						
ANR	1999780	Symbol	tmp_value		1999604						
ANR	1999781	Symbol	floor		1999604						
ANR	1999782	Symbol	value		1999604						
ANR	1999783	Symbol	PHP_ROUND_HALF_DOWN		1999604						
ANR	1999784	Function	_php_math_round	139:0:4301:6808							
ANR	1999785	FunctionDef	"_php_math_round (double value , int places , int mode)"		1999784	0					
ANR	1999786	CompoundStatement		139:66:4367:6808	1999784	0					
ANR	1999787	IdentifierDeclStatement	"double f1 , f2 ;"	140:1:4370:4383	1999784	0	True				
ANR	1999788	IdentifierDecl	f1		1999784	0					
ANR	1999789	IdentifierDeclType	double		1999784	0					
ANR	1999790	Identifier	f1		1999784	1					
ANR	1999791	IdentifierDecl	f2		1999784	1					
ANR	1999792	IdentifierDeclType	double		1999784	0					
ANR	1999793	Identifier	f2		1999784	1					
ANR	1999794	IdentifierDeclStatement	double tmp_value ;	141:1:4386:4402	1999784	1	True				
ANR	1999795	IdentifierDecl	tmp_value		1999784	0					
ANR	1999796	IdentifierDeclType	double		1999784	0					
ANR	1999797	Identifier	tmp_value		1999784	1					
ANR	1999798	IdentifierDeclStatement	int precision_places ;	142:1:4405:4425	1999784	2	True				
ANR	1999799	IdentifierDecl	precision_places		1999784	0					
ANR	1999800	IdentifierDeclType	int		1999784	0					
ANR	1999801	Identifier	precision_places		1999784	1					
ANR	1999802	IfStatement	if ( ! php_math_is_finite ( value ) )		1999784	3					
ANR	1999803	Condition	! php_math_is_finite ( value )	144:5:4433:4458	1999784	0	True				
ANR	1999804	UnaryOperationExpression	! php_math_is_finite ( value )		1999784	0					
ANR	1999805	UnaryOperator	!		1999784	0					
ANR	1999806	CallExpression	php_math_is_finite ( value )		1999784	1					
ANR	1999807	Callee	php_math_is_finite		1999784	0					
ANR	1999808	Identifier	php_math_is_finite		1999784	0					
ANR	1999809	ArgumentList	value		1999784	1					
ANR	1999810	Argument	value		1999784	0					
ANR	1999811	Identifier	value		1999784	0					
ANR	1999812	CompoundStatement		6:33:93:93	1999784	1					
ANR	1999813	ReturnStatement	return value ;	145:2:4465:4477	1999784	0	True				
ANR	1999814	Identifier	value		1999784	0					
ANR	1999815	ExpressionStatement	places = places < INT_MIN + 1 ? INT_MIN + 1 : places	148:1:4484:4532	1999784	4	True				
ANR	1999816	AssignmentExpression	places = places < INT_MIN + 1 ? INT_MIN + 1 : places		1999784	0		=			
ANR	1999817	Identifier	places		1999784	0					
ANR	1999818	ConditionalExpression	places < INT_MIN + 1 ? INT_MIN + 1 : places		1999784	1					
ANR	1999819	Condition	places < INT_MIN + 1		1999784	0					
ANR	1999820	RelationalExpression	places < INT_MIN + 1		1999784	0		<			
ANR	1999821	Identifier	places		1999784	0					
ANR	1999822	AdditiveExpression	INT_MIN + 1		1999784	1		+			
ANR	1999823	Identifier	INT_MIN		1999784	0					
ANR	1999824	PrimaryExpression	1		1999784	1					
ANR	1999825	AdditiveExpression	INT_MIN + 1		1999784	1		+			
ANR	1999826	Identifier	INT_MIN		1999784	0					
ANR	1999827	PrimaryExpression	1		1999784	1					
ANR	1999828	Identifier	places		1999784	2					
ANR	1999829	ExpressionStatement	precision_places = 14 - php_intlog10abs ( value )	149:1:4535:4581	1999784	5	True				
ANR	1999830	AssignmentExpression	precision_places = 14 - php_intlog10abs ( value )		1999784	0		=			
ANR	1999831	Identifier	precision_places		1999784	0					
ANR	1999832	AdditiveExpression	14 - php_intlog10abs ( value )		1999784	1		-			
ANR	1999833	PrimaryExpression	14		1999784	0					
ANR	1999834	CallExpression	php_intlog10abs ( value )		1999784	1					
ANR	1999835	Callee	php_intlog10abs		1999784	0					
ANR	1999836	Identifier	php_intlog10abs		1999784	0					
ANR	1999837	ArgumentList	value		1999784	1					
ANR	1999838	Argument	value		1999784	0					
ANR	1999839	Identifier	value		1999784	0					
ANR	1999840	ExpressionStatement	f1 = php_intpow10 ( abs ( places ) )	151:1:4585:4615	1999784	6	True				
ANR	1999841	AssignmentExpression	f1 = php_intpow10 ( abs ( places ) )		1999784	0		=			
ANR	1999842	Identifier	f1		1999784	0					
ANR	1999843	CallExpression	php_intpow10 ( abs ( places ) )		1999784	1					
ANR	1999844	Callee	php_intpow10		1999784	0					
ANR	1999845	Identifier	php_intpow10		1999784	0					
ANR	1999846	ArgumentList	abs ( places )		1999784	1					
ANR	1999847	Argument	abs ( places )		1999784	0					
ANR	1999848	CallExpression	abs ( places )		1999784	0					
ANR	1999849	Callee	abs		1999784	0					
ANR	1999850	Identifier	abs		1999784	0					
ANR	1999851	ArgumentList	places		1999784	1					
ANR	1999852	Argument	places		1999784	0					
ANR	1999853	Identifier	places		1999784	0					
ANR	1999854	IfStatement	if ( precision_places > places && precision_places - places < 15 )		1999784	7					
ANR	1999855	Condition	precision_places > places && precision_places - places < 15	156:5:4828:4886	1999784	0	True				
ANR	1999856	AndExpression	precision_places > places && precision_places - places < 15		1999784	0		&&			
ANR	1999857	RelationalExpression	precision_places > places		1999784	0		>			
ANR	1999858	Identifier	precision_places		1999784	0					
ANR	1999859	Identifier	places		1999784	1					
ANR	1999860	RelationalExpression	precision_places - places < 15		1999784	1		<			
ANR	1999861	AdditiveExpression	precision_places - places		1999784	0		-			
ANR	1999862	Identifier	precision_places		1999784	0					
ANR	1999863	Identifier	places		1999784	1					
ANR	1999864	PrimaryExpression	15		1999784	1					
ANR	1999865	CompoundStatement		19:2:525:608	1999784	1					
ANR	1999866	IdentifierDeclStatement	int64_t use_precision = precision_places < INT_MIN + 1 ? INT_MIN + 1 : precision_places ;	157:2:4893:4976	1999784	0	True				
ANR	1999867	IdentifierDecl	use_precision = precision_places < INT_MIN + 1 ? INT_MIN + 1 : precision_places		1999784	0					
ANR	1999868	IdentifierDeclType	int64_t		1999784	0					
ANR	1999869	Identifier	use_precision		1999784	1					
ANR	1999870	AssignmentExpression	use_precision = precision_places < INT_MIN + 1 ? INT_MIN + 1 : precision_places		1999784	2		=			
ANR	1999871	Identifier	use_precision		1999784	0					
ANR	1999872	ConditionalExpression	precision_places < INT_MIN + 1 ? INT_MIN + 1 : precision_places		1999784	1					
ANR	1999873	Condition	precision_places < INT_MIN + 1		1999784	0					
ANR	1999874	RelationalExpression	precision_places < INT_MIN + 1		1999784	0		<			
ANR	1999875	Identifier	precision_places		1999784	0					
ANR	1999876	AdditiveExpression	INT_MIN + 1		1999784	1		+			
ANR	1999877	Identifier	INT_MIN		1999784	0					
ANR	1999878	PrimaryExpression	1		1999784	1					
ANR	1999879	AdditiveExpression	INT_MIN + 1		1999784	1		+			
ANR	1999880	Identifier	INT_MIN		1999784	0					
ANR	1999881	PrimaryExpression	1		1999784	1					
ANR	1999882	Identifier	precision_places		1999784	2					
ANR	1999883	ExpressionStatement	f2 = php_intpow10 ( abs ( ( int ) use_precision ) )	159:2:4981:5023	1999784	1	True				
ANR	1999884	AssignmentExpression	f2 = php_intpow10 ( abs ( ( int ) use_precision ) )		1999784	0		=			
ANR	1999885	Identifier	f2		1999784	0					
ANR	1999886	CallExpression	php_intpow10 ( abs ( ( int ) use_precision ) )		1999784	1					
ANR	1999887	Callee	php_intpow10		1999784	0					
ANR	1999888	Identifier	php_intpow10		1999784	0					
ANR	1999889	ArgumentList	abs ( ( int ) use_precision )		1999784	1					
ANR	1999890	Argument	abs ( ( int ) use_precision )		1999784	0					
ANR	1999891	CallExpression	abs ( ( int ) use_precision )		1999784	0					
ANR	1999892	Callee	abs		1999784	0					
ANR	1999893	Identifier	abs		1999784	0					
ANR	1999894	ArgumentList	( int ) use_precision		1999784	1					
ANR	1999895	Argument	( int ) use_precision		1999784	0					
ANR	1999896	CastExpression	( int ) use_precision		1999784	0					
ANR	1999897	CastTarget	int		1999784	0					
ANR	1999898	Identifier	use_precision		1999784	1					
ANR	1999899	IfStatement	if ( use_precision >= 0 )		1999784	2					
ANR	1999900	Condition	use_precision >= 0	160:6:5031:5048	1999784	0	True				
ANR	1999901	RelationalExpression	use_precision >= 0		1999784	0		>=			
ANR	1999902	Identifier	use_precision		1999784	0					
ANR	1999903	PrimaryExpression	0		1999784	1					
ANR	1999904	CompoundStatement		22:26:683:683	1999784	1					
ANR	1999905	ExpressionStatement	tmp_value = value * f2	161:3:5056:5078	1999784	0	True				
ANR	1999906	AssignmentExpression	tmp_value = value * f2		1999784	0		=			
ANR	1999907	Identifier	tmp_value		1999784	0					
ANR	1999908	MultiplicativeExpression	value * f2		1999784	1		*			
ANR	1999909	Identifier	value		1999784	0					
ANR	1999910	Identifier	f2		1999784	1					
ANR	1999911	ElseStatement	else		1999784	0					
ANR	1999912	CompoundStatement		24:9:721:721	1999784	0					
ANR	1999913	ExpressionStatement	tmp_value = value / f2	163:3:5094:5116	1999784	0	True				
ANR	1999914	AssignmentExpression	tmp_value = value / f2		1999784	0		=			
ANR	1999915	Identifier	tmp_value		1999784	0					
ANR	1999916	MultiplicativeExpression	value / f2		1999784	1		/			
ANR	1999917	Identifier	value		1999784	0					
ANR	1999918	Identifier	f2		1999784	1					
ANR	1999919	ExpressionStatement	"tmp_value = php_round_helper ( tmp_value , mode )"	167:2:5235:5280	1999784	3	True				
ANR	1999920	AssignmentExpression	"tmp_value = php_round_helper ( tmp_value , mode )"		1999784	0		=			
ANR	1999921	Identifier	tmp_value		1999784	0					
ANR	1999922	CallExpression	"php_round_helper ( tmp_value , mode )"		1999784	1					
ANR	1999923	Callee	php_round_helper		1999784	0					
ANR	1999924	Identifier	php_round_helper		1999784	0					
ANR	1999925	ArgumentList	tmp_value		1999784	1					
ANR	1999926	Argument	tmp_value		1999784	0					
ANR	1999927	Identifier	tmp_value		1999784	0					
ANR	1999928	Argument	mode		1999784	1					
ANR	1999929	Identifier	mode		1999784	0					
ANR	1999930	ExpressionStatement	use_precision = places - precision_places	169:2:5285:5326	1999784	4	True				
ANR	1999931	AssignmentExpression	use_precision = places - precision_places		1999784	0		=			
ANR	1999932	Identifier	use_precision		1999784	0					
ANR	1999933	AdditiveExpression	places - precision_places		1999784	1		-			
ANR	1999934	Identifier	places		1999784	0					
ANR	1999935	Identifier	precision_places		1999784	1					
ANR	1999936	ExpressionStatement	use_precision = use_precision < INT_MIN + 1 ? INT_MIN + 1 : use_precision	170:2:5330:5399	1999784	5	True				
ANR	1999937	AssignmentExpression	use_precision = use_precision < INT_MIN + 1 ? INT_MIN + 1 : use_precision		1999784	0		=			
ANR	1999938	Identifier	use_precision		1999784	0					
ANR	1999939	ConditionalExpression	use_precision < INT_MIN + 1 ? INT_MIN + 1 : use_precision		1999784	1					
ANR	1999940	Condition	use_precision < INT_MIN + 1		1999784	0					
ANR	1999941	RelationalExpression	use_precision < INT_MIN + 1		1999784	0		<			
ANR	1999942	Identifier	use_precision		1999784	0					
ANR	1999943	AdditiveExpression	INT_MIN + 1		1999784	1		+			
ANR	1999944	Identifier	INT_MIN		1999784	0					
ANR	1999945	PrimaryExpression	1		1999784	1					
ANR	1999946	AdditiveExpression	INT_MIN + 1		1999784	1		+			
ANR	1999947	Identifier	INT_MIN		1999784	0					
ANR	1999948	PrimaryExpression	1		1999784	1					
ANR	1999949	Identifier	use_precision		1999784	2					
ANR	1999950	ExpressionStatement	f2 = php_intpow10 ( abs ( ( int ) use_precision ) )	172:2:5448:5490	1999784	6	True				
ANR	1999951	AssignmentExpression	f2 = php_intpow10 ( abs ( ( int ) use_precision ) )		1999784	0		=			
ANR	1999952	Identifier	f2		1999784	0					
ANR	1999953	CallExpression	php_intpow10 ( abs ( ( int ) use_precision ) )		1999784	1					
ANR	1999954	Callee	php_intpow10		1999784	0					
ANR	1999955	Identifier	php_intpow10		1999784	0					
ANR	1999956	ArgumentList	abs ( ( int ) use_precision )		1999784	1					
ANR	1999957	Argument	abs ( ( int ) use_precision )		1999784	0					
ANR	1999958	CallExpression	abs ( ( int ) use_precision )		1999784	0					
ANR	1999959	Callee	abs		1999784	0					
ANR	1999960	Identifier	abs		1999784	0					
ANR	1999961	ArgumentList	( int ) use_precision		1999784	1					
ANR	1999962	Argument	( int ) use_precision		1999784	0					
ANR	1999963	CastExpression	( int ) use_precision		1999784	0					
ANR	1999964	CastTarget	int		1999784	0					
ANR	1999965	Identifier	use_precision		1999784	1					
ANR	1999966	ExpressionStatement	tmp_value = tmp_value / f2	174:2:5536:5562	1999784	7	True				
ANR	1999967	AssignmentExpression	tmp_value = tmp_value / f2		1999784	0		=			
ANR	1999968	Identifier	tmp_value		1999784	0					
ANR	1999969	MultiplicativeExpression	tmp_value / f2		1999784	1		/			
ANR	1999970	Identifier	tmp_value		1999784	0					
ANR	1999971	Identifier	f2		1999784	1					
ANR	1999972	ElseStatement	else		1999784	0					
ANR	1999973	CompoundStatement		37:8:1204:1204	1999784	0					
ANR	1999974	IfStatement	if ( places >= 0 )		1999784	0					
ANR	1999975	Condition	places >= 0	177:6:5605:5615	1999784	0	True				
ANR	1999976	RelationalExpression	places >= 0		1999784	0		>=			
ANR	1999977	Identifier	places		1999784	0					
ANR	1999978	PrimaryExpression	0		1999784	1					
ANR	1999979	CompoundStatement		39:19:1250:1250	1999784	1					
ANR	1999980	ExpressionStatement	tmp_value = value * f1	178:3:5623:5645	1999784	0	True				
ANR	1999981	AssignmentExpression	tmp_value = value * f1		1999784	0		=			
ANR	1999982	Identifier	tmp_value		1999784	0					
ANR	1999983	MultiplicativeExpression	value * f1		1999784	1		*			
ANR	1999984	Identifier	value		1999784	0					
ANR	1999985	Identifier	f1		1999784	1					
ANR	1999986	ElseStatement	else		1999784	0					
ANR	1999987	CompoundStatement		41:9:1288:1288	1999784	0					
ANR	1999988	ExpressionStatement	tmp_value = value / f1	180:3:5661:5683	1999784	0	True				
ANR	1999989	AssignmentExpression	tmp_value = value / f1		1999784	0		=			
ANR	1999990	Identifier	tmp_value		1999784	0					
ANR	1999991	MultiplicativeExpression	value / f1		1999784	1		/			
ANR	1999992	Identifier	value		1999784	0					
ANR	1999993	Identifier	f1		1999784	1					
ANR	1999994	IfStatement	if ( fabs ( tmp_value ) >= 1e15 )		1999784	1					
ANR	1999995	Condition	fabs ( tmp_value ) >= 1e15	183:6:5767:5789	1999784	0	True				
ANR	1999996	RelationalExpression	fabs ( tmp_value ) >= 1e15		1999784	0		>=			
ANR	1999997	CallExpression	fabs ( tmp_value )		1999784	0					
ANR	1999998	Callee	fabs		1999784	0					
ANR	1999999	Identifier	fabs		1999784	0					
ANR	2000000	ArgumentList	tmp_value		1999784	1					
ANR	2000001	Argument	tmp_value		1999784	0					
ANR	2000002	Identifier	tmp_value		1999784	0					
ANR	2000003	PrimaryExpression	1e15		1999784	1					
ANR	2000004	CompoundStatement		45:31:1424:1424	1999784	1					
ANR	2000005	ReturnStatement	return value ;	184:3:5797:5809	1999784	0	True				
ANR	2000006	Identifier	value		1999784	0					
ANR	2000007	ExpressionStatement	"tmp_value = php_round_helper ( tmp_value , mode )"	189:1:5848:5893	1999784	8	True				
ANR	2000008	AssignmentExpression	"tmp_value = php_round_helper ( tmp_value , mode )"		1999784	0		=			
ANR	2000009	Identifier	tmp_value		1999784	0					
ANR	2000010	CallExpression	"php_round_helper ( tmp_value , mode )"		1999784	1					
ANR	2000011	Callee	php_round_helper		1999784	0					
ANR	2000012	Identifier	php_round_helper		1999784	0					
ANR	2000013	ArgumentList	tmp_value		1999784	1					
ANR	2000014	Argument	tmp_value		1999784	0					
ANR	2000015	Identifier	tmp_value		1999784	0					
ANR	2000016	Argument	mode		1999784	1					
ANR	2000017	Identifier	mode		1999784	0					
ANR	2000018	IfStatement	if ( abs ( places ) < 23 )		1999784	9					
ANR	2000019	Condition	abs ( places ) < 23	192:5:5972:5987	1999784	0	True				
ANR	2000020	RelationalExpression	abs ( places ) < 23		1999784	0		<			
ANR	2000021	CallExpression	abs ( places )		1999784	0					
ANR	2000022	Callee	abs		1999784	0					
ANR	2000023	Identifier	abs		1999784	0					
ANR	2000024	ArgumentList	places		1999784	1					
ANR	2000025	Argument	places		1999784	0					
ANR	2000026	Identifier	places		1999784	0					
ANR	2000027	PrimaryExpression	23		1999784	1					
ANR	2000028	CompoundStatement		54:23:1622:1622	1999784	1					
ANR	2000029	IfStatement	if ( places > 0 )		1999784	0					
ANR	2000030	Condition	places > 0	193:6:5998:6007	1999784	0	True				
ANR	2000031	RelationalExpression	places > 0		1999784	0		>			
ANR	2000032	Identifier	places		1999784	0					
ANR	2000033	PrimaryExpression	0		1999784	1					
ANR	2000034	CompoundStatement		55:18:1642:1642	1999784	1					
ANR	2000035	ExpressionStatement	tmp_value = tmp_value / f1	194:3:6015:6041	1999784	0	True				
ANR	2000036	AssignmentExpression	tmp_value = tmp_value / f1		1999784	0		=			
ANR	2000037	Identifier	tmp_value		1999784	0					
ANR	2000038	MultiplicativeExpression	tmp_value / f1		1999784	1		/			
ANR	2000039	Identifier	tmp_value		1999784	0					
ANR	2000040	Identifier	f1		1999784	1					
ANR	2000041	ElseStatement	else		1999784	0					
ANR	2000042	CompoundStatement		57:9:1684:1684	1999784	0					
ANR	2000043	ExpressionStatement	tmp_value = tmp_value * f1	196:3:6057:6083	1999784	0	True				
ANR	2000044	AssignmentExpression	tmp_value = tmp_value * f1		1999784	0		=			
ANR	2000045	Identifier	tmp_value		1999784	0					
ANR	2000046	MultiplicativeExpression	tmp_value * f1		1999784	1		*			
ANR	2000047	Identifier	tmp_value		1999784	0					
ANR	2000048	Identifier	f1		1999784	1					
ANR	2000049	ElseStatement	else		1999784	0					
ANR	2000050	CompoundStatement		69:2:2167:2179	1999784	0					
ANR	2000051	IdentifierDeclStatement	char buf [ 40 ] ;	207:2:6535:6547	1999784	0	True				
ANR	2000052	IdentifierDecl	buf [ 40 ]		1999784	0					
ANR	2000053	IdentifierDeclType	char [ 40 ]		1999784	0					
ANR	2000054	Identifier	buf		1999784	1					
ANR	2000055	PrimaryExpression	40		1999784	2					
ANR	2000056	ExpressionStatement	"snprintf ( buf , 39 , ""%15fe%d"" , tmp_value , - places )"	208:2:6551:6599	1999784	1	True				
ANR	2000057	CallExpression	"snprintf ( buf , 39 , ""%15fe%d"" , tmp_value , - places )"		1999784	0					
ANR	2000058	Callee	snprintf		1999784	0					
ANR	2000059	Identifier	snprintf		1999784	0					
ANR	2000060	ArgumentList	buf		1999784	1					
ANR	2000061	Argument	buf		1999784	0					
ANR	2000062	Identifier	buf		1999784	0					
ANR	2000063	Argument	39		1999784	1					
ANR	2000064	PrimaryExpression	39		1999784	0					
ANR	2000065	Argument	"""%15fe%d"""		1999784	2					
ANR	2000066	PrimaryExpression	"""%15fe%d"""		1999784	0					
ANR	2000067	Argument	tmp_value		1999784	3					
ANR	2000068	Identifier	tmp_value		1999784	0					
ANR	2000069	Argument	- places		1999784	4					
ANR	2000070	UnaryOperationExpression	- places		1999784	0					
ANR	2000071	UnaryOperator	-		1999784	0					
ANR	2000072	Identifier	places		1999784	1					
ANR	2000073	ExpressionStatement	buf [ 39 ] = '\\0'	209:2:6603:6617	1999784	2	True				
ANR	2000074	AssignmentExpression	buf [ 39 ] = '\\0'		1999784	0		=			
ANR	2000075	ArrayIndexing	buf [ 39 ]		1999784	0					
ANR	2000076	Identifier	buf		1999784	0					
ANR	2000077	PrimaryExpression	39		1999784	1					
ANR	2000078	PrimaryExpression	'\\0'		1999784	1					
ANR	2000079	ExpressionStatement	"tmp_value = zend_strtod ( buf , NULL )"	210:2:6621:6655	1999784	3	True				
ANR	2000080	AssignmentExpression	"tmp_value = zend_strtod ( buf , NULL )"		1999784	0		=			
ANR	2000081	Identifier	tmp_value		1999784	0					
ANR	2000082	CallExpression	"zend_strtod ( buf , NULL )"		1999784	1					
ANR	2000083	Callee	zend_strtod		1999784	0					
ANR	2000084	Identifier	zend_strtod		1999784	0					
ANR	2000085	ArgumentList	buf		1999784	1					
ANR	2000086	Argument	buf		1999784	0					
ANR	2000087	Identifier	buf		1999784	0					
ANR	2000088	Argument	NULL		1999784	1					
ANR	2000089	Identifier	NULL		1999784	0					
ANR	2000090	IfStatement	if ( ! zend_finite ( tmp_value ) || zend_isnan ( tmp_value ) )		1999784	4					
ANR	2000091	Condition	! zend_finite ( tmp_value ) || zend_isnan ( tmp_value )	212:6:6707:6754	1999784	0	True				
ANR	2000092	OrExpression	! zend_finite ( tmp_value ) || zend_isnan ( tmp_value )		1999784	0		||			
ANR	2000093	UnaryOperationExpression	! zend_finite ( tmp_value )		1999784	0					
ANR	2000094	UnaryOperator	!		1999784	0					
ANR	2000095	CallExpression	zend_finite ( tmp_value )		1999784	1					
ANR	2000096	Callee	zend_finite		1999784	0					
ANR	2000097	Identifier	zend_finite		1999784	0					
ANR	2000098	ArgumentList	tmp_value		1999784	1					
ANR	2000099	Argument	tmp_value		1999784	0					
ANR	2000100	Identifier	tmp_value		1999784	0					
ANR	2000101	CallExpression	zend_isnan ( tmp_value )		1999784	1					
ANR	2000102	Callee	zend_isnan		1999784	0					
ANR	2000103	Identifier	zend_isnan		1999784	0					
ANR	2000104	ArgumentList	tmp_value		1999784	1					
ANR	2000105	Argument	tmp_value		1999784	0					
ANR	2000106	Identifier	tmp_value		1999784	0					
ANR	2000107	CompoundStatement		74:56:2389:2389	1999784	1					
ANR	2000108	ExpressionStatement	tmp_value = value	213:3:6762:6779	1999784	0	True				
ANR	2000109	AssignmentExpression	tmp_value = value		1999784	0		=			
ANR	2000110	Identifier	tmp_value		1999784	0					
ANR	2000111	Identifier	value		1999784	1					
ANR	2000112	ReturnStatement	return tmp_value ;	217:1:6790:6806	1999784	10	True				
ANR	2000113	Identifier	tmp_value		1999784	0					
ANR	2000114	ReturnType	PHPAPI double		1999784	1					
ANR	2000115	Identifier	_php_math_round		1999784	2					
ANR	2000116	ParameterList	"double value , int places , int mode"		1999784	3					
ANR	2000117	Parameter	double value	139:30:4331:4342	1999784	0	True				
ANR	2000118	ParameterType	double		1999784	0					
ANR	2000119	Identifier	value		1999784	1					
ANR	2000120	Parameter	int places	139:44:4345:4354	1999784	1	True				
ANR	2000121	ParameterType	int		1999784	0					
ANR	2000122	Identifier	places		1999784	1					
ANR	2000123	Parameter	int mode	139:56:4357:4364	1999784	2	True				
ANR	2000124	ParameterType	int		1999784	0					
ANR	2000125	Identifier	mode		1999784	1					
ANR	2000126	CFGEntryNode	ENTRY		1999784		True				
ANR	2000127	CFGExitNode	EXIT		1999784		True				
ANR	2000128	Symbol	zend_finite		1999784						
ANR	2000129	Symbol	php_intlog10abs		1999784						
ANR	2000130	Symbol	* buf		1999784						
ANR	2000131	Symbol	fabs		1999784						
ANR	2000132	Symbol	NULL		1999784						
ANR	2000133	Symbol	use_precision		1999784						
ANR	2000134	Symbol	f1		1999784						
ANR	2000135	Symbol	precision_places		1999784						
ANR	2000136	Symbol	f2		1999784						
ANR	2000137	Symbol	tmp_value		1999784						
ANR	2000138	Symbol	INT_MIN		1999784						
ANR	2000139	Symbol	php_intpow10		1999784						
ANR	2000140	Symbol	zend_strtod		1999784						
ANR	2000141	Symbol	mode		1999784						
ANR	2000142	Symbol	places		1999784						
ANR	2000143	Symbol	buf		1999784						
ANR	2000144	Symbol	abs		1999784						
ANR	2000145	Symbol	php_math_is_finite		1999784						
ANR	2000146	Symbol	zend_isnan		1999784						
ANR	2000147	Symbol	value		1999784						
ANR	2000148	Symbol	php_round_helper		1999784						
ANR	2000149	Function	php_asinh	223:0:6841:6977							
ANR	2000150	FunctionDef	php_asinh (double z)		2000149	0					
ANR	2000151	CompoundStatement		224:0:6875:6977	2000149	0					
ANR	2000152	ReturnStatement	return ( asinh ( z ) ) ;	226:1:6896:6912	2000149	0	True				
ANR	2000153	CallExpression	asinh ( z )		2000149	0					
ANR	2000154	Callee	asinh		2000149	0					
ANR	2000155	Identifier	asinh		2000149	0					
ANR	2000156	ArgumentList	z		2000149	1					
ANR	2000157	Argument	z		2000149	0					
ANR	2000158	Identifier	z		2000149	0					
ANR	2000159	ReturnType	static double		2000149	1					
ANR	2000160	Identifier	php_asinh		2000149	2					
ANR	2000161	ParameterList	double z		2000149	3					
ANR	2000162	Parameter	double z	223:24:6865:6872	2000149	0	True				
ANR	2000163	ParameterType	double		2000149	0					
ANR	2000164	Identifier	z		2000149	1					
ANR	2000165	CFGEntryNode	ENTRY		2000149		True				
ANR	2000166	CFGExitNode	EXIT		2000149		True				
ANR	2000167	Symbol	z		2000149						
ANR	2000168	Symbol	asinh		2000149						
ANR	2000169	Function	php_acosh	235:0:7010:7131							
ANR	2000170	FunctionDef	php_acosh (double x)		2000169	0					
ANR	2000171	CompoundStatement		236:0:7044:7131	2000169	0					
ANR	2000172	ReturnStatement	return ( acosh ( x ) ) ;	238:1:7065:7081	2000169	0	True				
ANR	2000173	CallExpression	acosh ( x )		2000169	0					
ANR	2000174	Callee	acosh		2000169	0					
ANR	2000175	Identifier	acosh		2000169	0					
ANR	2000176	ArgumentList	x		2000169	1					
ANR	2000177	Argument	x		2000169	0					
ANR	2000178	Identifier	x		2000169	0					
ANR	2000179	ReturnType	static double		2000169	1					
ANR	2000180	Identifier	php_acosh		2000169	2					
ANR	2000181	ParameterList	double x		2000169	3					
ANR	2000182	Parameter	double x	235:24:7034:7041	2000169	0	True				
ANR	2000183	ParameterType	double		2000169	0					
ANR	2000184	Identifier	x		2000169	1					
ANR	2000185	CFGEntryNode	ENTRY		2000169		True				
ANR	2000186	CFGExitNode	EXIT		2000169		True				
ANR	2000187	Symbol	acosh		2000169						
ANR	2000188	Symbol	x		2000169						
ANR	2000189	Function	php_atanh	247:0:7164:7289							
ANR	2000190	FunctionDef	php_atanh (double z)		2000189	0					
ANR	2000191	CompoundStatement		248:0:7198:7289	2000189	0					
ANR	2000192	ReturnStatement	return ( atanh ( z ) ) ;	250:1:7219:7235	2000189	0	True				
ANR	2000193	CallExpression	atanh ( z )		2000189	0					
ANR	2000194	Callee	atanh		2000189	0					
ANR	2000195	Identifier	atanh		2000189	0					
ANR	2000196	ArgumentList	z		2000189	1					
ANR	2000197	Argument	z		2000189	0					
ANR	2000198	Identifier	z		2000189	0					
ANR	2000199	ReturnType	static double		2000189	1					
ANR	2000200	Identifier	php_atanh		2000189	2					
ANR	2000201	ParameterList	double z		2000189	3					
ANR	2000202	Parameter	double z	247:24:7188:7195	2000189	0	True				
ANR	2000203	ParameterType	double		2000189	0					
ANR	2000204	Identifier	z		2000189	1					
ANR	2000205	CFGEntryNode	ENTRY		2000189		True				
ANR	2000206	CFGExitNode	EXIT		2000189		True				
ANR	2000207	Symbol	atanh		2000189						
ANR	2000208	Symbol	z		2000189						
ANR	2000209	Function	php_log1p	259:0:7322:7429							
ANR	2000210	FunctionDef	php_log1p (double x)		2000209	0					
ANR	2000211	CompoundStatement		260:0:7356:7429	2000209	0					
ANR	2000212	ReturnStatement	return ( log1p ( x ) ) ;	262:1:7377:7393	2000209	0	True				
ANR	2000213	CallExpression	log1p ( x )		2000209	0					
ANR	2000214	Callee	log1p		2000209	0					
ANR	2000215	Identifier	log1p		2000209	0					
ANR	2000216	ArgumentList	x		2000209	1					
ANR	2000217	Argument	x		2000209	0					
ANR	2000218	Identifier	x		2000209	0					
ANR	2000219	ReturnType	static double		2000209	1					
ANR	2000220	Identifier	php_log1p		2000209	2					
ANR	2000221	ParameterList	double x		2000209	3					
ANR	2000222	Parameter	double x	259:24:7346:7353	2000209	0	True				
ANR	2000223	ParameterType	double		2000209	0					
ANR	2000224	Identifier	x		2000209	1					
ANR	2000225	CFGEntryNode	ENTRY		2000209		True				
ANR	2000226	CFGExitNode	EXIT		2000209		True				
ANR	2000227	Symbol	log1p		2000209						
ANR	2000228	Symbol	x		2000209						
ANR	2000229	Function	php_expm1	271:0:7462:7596							
ANR	2000230	FunctionDef	php_expm1 (double x)		2000229	0					
ANR	2000231	CompoundStatement		272:0:7496:7596	2000229	0					
ANR	2000232	ReturnStatement	return ( expm1 ( x ) ) ;	274:1:7544:7560	2000229	0	True				
ANR	2000233	CallExpression	expm1 ( x )		2000229	0					
ANR	2000234	Callee	expm1		2000229	0					
ANR	2000235	Identifier	expm1		2000229	0					
ANR	2000236	ArgumentList	x		2000229	1					
ANR	2000237	Argument	x		2000229	0					
ANR	2000238	Identifier	x		2000229	0					
ANR	2000239	ReturnType	static double		2000229	1					
ANR	2000240	Identifier	php_expm1		2000229	2					
ANR	2000241	ParameterList	double x		2000229	3					
ANR	2000242	Parameter	double x	271:24:7486:7493	2000229	0	True				
ANR	2000243	ParameterType	double		2000229	0					
ANR	2000244	Identifier	x		2000229	1					
ANR	2000245	CFGEntryNode	ENTRY		2000229		True				
ANR	2000246	CFGExitNode	EXIT		2000229		True				
ANR	2000247	Symbol	expm1		2000229						
ANR	2000248	Symbol	x		2000229						
ANR	2000249	DeclStmt									
ANR	2000250	Decl							zval	zval * *	value
ANR	2000251	DeclStmt									
ANR	2000252	Decl							zval	zval * *	value
ANR	2000253	DeclStmt									
ANR	2000254	Decl							zval	zval * *	value
ANR	2000255	DeclStmt									
ANR	2000256	Decl							zval	zval * *	value
ANR	2000257	DeclStmt									
ANR	2000258	Decl							int	int	places
ANR	2000259	DeclStmt									
ANR	2000260	Decl							long	long	precision
ANR	2000261	DeclStmt									
ANR	2000262	Decl							long	long	mode
ANR	2000263	DeclStmt									
ANR	2000264	Decl							double	double	return_val
ANR	2000265	DeclStmt									
ANR	2000266	Decl							double	double	num
ANR	2000267	DeclStmt									
ANR	2000268	Decl							double	double	num
ANR	2000269	DeclStmt									
ANR	2000270	Decl							double	double	num
ANR	2000271	DeclStmt									
ANR	2000272	Decl							double	double	num
ANR	2000273	DeclStmt									
ANR	2000274	Decl							double	double	num
ANR	2000275	DeclStmt									
ANR	2000276	Decl							double	double	num
ANR	2000277	DeclStmt									
ANR	2000278	Decl							double	double	num1
ANR	2000279	Decl							double	double	num2
ANR	2000280	DeclStmt									
ANR	2000281	Decl							double	double	num
ANR	2000282	DeclStmt									
ANR	2000283	Decl							double	double	num
ANR	2000284	DeclStmt									
ANR	2000285	Decl							double	double	num
ANR	2000286	DeclStmt									
ANR	2000287	Decl							double	double	num
ANR	2000288	DeclStmt									
ANR	2000289	Decl							double	double	num
ANR	2000290	DeclStmt									
ANR	2000291	Decl							double	double	num
ANR	2000292	DeclStmt									
ANR	2000293	Decl							double	double	dval
ANR	2000294	DeclStmt									
ANR	2000295	Decl							double	double	dval
ANR	2000296	DeclStmt									
ANR	2000297	Decl							double	double	dval
ANR	2000298	DeclStmt									
ANR	2000299	Decl							zval	zval *	zbase
ANR	2000300	Decl							zval	zval *	zexp
ANR	2000301	DeclStmt									
ANR	2000302	Decl							double	double	num
ANR	2000303	DeclStmt									
ANR	2000304	Decl							double	double	num
ANR	2000305	DeclStmt									
ANR	2000306	Decl							double	double	num
ANR	2000307	DeclStmt									
ANR	2000308	Decl							double	double	num
ANR	2000309	Decl							double	double	base
ANR	2000310	DeclStmt									
ANR	2000311	Decl							double	double	num
ANR	2000312	DeclStmt									
ANR	2000313	Decl							double	double	num
ANR	2000314	DeclStmt									
ANR	2000315	Decl							double	double	num1
ANR	2000316	Decl							double	double	num2
ANR	2000317	DeclStmt									
ANR	2000318	Decl							double	double	deg
ANR	2000319	DeclStmt									
ANR	2000320	Decl							double	double	rad
ANR	2000321	Function	_php_math_basetolong	772:0:18585:19257							
ANR	2000322	FunctionDef	"_php_math_basetolong (zval * arg , int base)"		2000321	0					
ANR	2000323	CompoundStatement		773:0:18639:19257	2000321	0					
ANR	2000324	IdentifierDeclStatement	"long num = 0 , digit , onum ;"	774:1:18642:18667	2000321	0	True				
ANR	2000325	IdentifierDecl	num = 0		2000321	0					
ANR	2000326	IdentifierDeclType	long		2000321	0					
ANR	2000327	Identifier	num		2000321	1					
ANR	2000328	AssignmentExpression	num = 0		2000321	2		=			
ANR	2000329	Identifier	num		2000321	0					
ANR	2000330	PrimaryExpression	0		2000321	1					
ANR	2000331	IdentifierDecl	digit		2000321	1					
ANR	2000332	IdentifierDeclType	long		2000321	0					
ANR	2000333	Identifier	digit		2000321	1					
ANR	2000334	IdentifierDecl	onum		2000321	2					
ANR	2000335	IdentifierDeclType	long		2000321	0					
ANR	2000336	Identifier	onum		2000321	1					
ANR	2000337	IdentifierDeclStatement	int i ;	775:1:18670:18675	2000321	1	True				
ANR	2000338	IdentifierDecl	i		2000321	0					
ANR	2000339	IdentifierDeclType	int		2000321	0					
ANR	2000340	Identifier	i		2000321	1					
ANR	2000341	IdentifierDeclStatement	"char c , * s ;"	776:1:18678:18688	2000321	2	True				
ANR	2000342	IdentifierDecl	c		2000321	0					
ANR	2000343	IdentifierDeclType	char		2000321	0					
ANR	2000344	Identifier	c		2000321	1					
ANR	2000345	IdentifierDecl	* s		2000321	1					
ANR	2000346	IdentifierDeclType	char *		2000321	0					
ANR	2000347	Identifier	s		2000321	1					
ANR	2000348	IfStatement	if ( Z_TYPE_P ( arg ) != IS_STRING || base < 2 || base > 36 )		2000321	3					
ANR	2000349	Condition	Z_TYPE_P ( arg ) != IS_STRING || base < 2 || base > 36	778:5:18696:18746	2000321	0	True				
ANR	2000350	OrExpression	Z_TYPE_P ( arg ) != IS_STRING || base < 2 || base > 36		2000321	0		||			
ANR	2000351	EqualityExpression	Z_TYPE_P ( arg ) != IS_STRING		2000321	0		!=			
ANR	2000352	CallExpression	Z_TYPE_P ( arg )		2000321	0					
ANR	2000353	Callee	Z_TYPE_P		2000321	0					
ANR	2000354	Identifier	Z_TYPE_P		2000321	0					
ANR	2000355	ArgumentList	arg		2000321	1					
ANR	2000356	Argument	arg		2000321	0					
ANR	2000357	Identifier	arg		2000321	0					
ANR	2000358	Identifier	IS_STRING		2000321	1					
ANR	2000359	OrExpression	base < 2 || base > 36		2000321	1		||			
ANR	2000360	RelationalExpression	base < 2		2000321	0		<			
ANR	2000361	Identifier	base		2000321	0					
ANR	2000362	PrimaryExpression	2		2000321	1					
ANR	2000363	RelationalExpression	base > 36		2000321	1		>			
ANR	2000364	Identifier	base		2000321	0					
ANR	2000365	PrimaryExpression	36		2000321	1					
ANR	2000366	CompoundStatement		6:58:109:109	2000321	1					
ANR	2000367	ReturnStatement	return 0 ;	779:2:18753:18761	2000321	0	True				
ANR	2000368	PrimaryExpression	0		2000321	0					
ANR	2000369	ExpressionStatement	s = Z_STRVAL_P ( arg )	782:1:18768:18787	2000321	4	True				
ANR	2000370	AssignmentExpression	s = Z_STRVAL_P ( arg )		2000321	0		=			
ANR	2000371	Identifier	s		2000321	0					
ANR	2000372	CallExpression	Z_STRVAL_P ( arg )		2000321	1					
ANR	2000373	Callee	Z_STRVAL_P		2000321	0					
ANR	2000374	Identifier	Z_STRVAL_P		2000321	0					
ANR	2000375	ArgumentList	arg		2000321	1					
ANR	2000376	Argument	arg		2000321	0					
ANR	2000377	Identifier	arg		2000321	0					
ANR	2000378	ForStatement	for ( i = Z_STRLEN_P ( arg ) ; i > 0 ; i -- )		2000321	5					
ANR	2000379	ForInit	i = Z_STRLEN_P ( arg ) ;	784:6:18796:18815	2000321	0	True				
ANR	2000380	AssignmentExpression	i = Z_STRLEN_P ( arg )		2000321	0		=			
ANR	2000381	Identifier	i		2000321	0					
ANR	2000382	CallExpression	Z_STRLEN_P ( arg )		2000321	1					
ANR	2000383	Callee	Z_STRLEN_P		2000321	0					
ANR	2000384	Identifier	Z_STRLEN_P		2000321	0					
ANR	2000385	ArgumentList	arg		2000321	1					
ANR	2000386	Argument	arg		2000321	0					
ANR	2000387	Identifier	arg		2000321	0					
ANR	2000388	Condition	i > 0	784:27:18817:18821	2000321	1	True				
ANR	2000389	RelationalExpression	i > 0		2000321	0		>			
ANR	2000390	Identifier	i		2000321	0					
ANR	2000391	PrimaryExpression	0		2000321	1					
ANR	2000392	PostIncDecOperationExpression	i --	784:34:18824:18826	2000321	2	True				
ANR	2000393	Identifier	i		2000321	0					
ANR	2000394	IncDec	--		2000321	1					
ANR	2000395	CompoundStatement		12:39:189:189	2000321	3					
ANR	2000396	ExpressionStatement	c = * s ++	785:2:18833:18841	2000321	0	True				
ANR	2000397	AssignmentExpression	c = * s ++		2000321	0		=			
ANR	2000398	Identifier	c		2000321	0					
ANR	2000399	UnaryOperationExpression	* s ++		2000321	1					
ANR	2000400	UnaryOperator	*		2000321	0					
ANR	2000401	PostIncDecOperationExpression	s ++		2000321	1					
ANR	2000402	Identifier	s		2000321	0					
ANR	2000403	IncDec	++		2000321	1					
ANR	2000404	ExpressionStatement	digit = ( c >= '0' && c <= '9' ) ? c - '0' : ( c >= 'A' && c <= 'Z' ) ? c - 'A' + 10 : ( c >= 'a' && c <= 'z' ) ? c - 'a' + 10 : base	787:2:18846:18982	2000321	1	True				
ANR	2000405	AssignmentExpression	digit = ( c >= '0' && c <= '9' ) ? c - '0' : ( c >= 'A' && c <= 'Z' ) ? c - 'A' + 10 : ( c >= 'a' && c <= 'z' ) ? c - 'a' + 10 : base		2000321	0		=			
ANR	2000406	Identifier	digit		2000321	0					
ANR	2000407	ConditionalExpression	( c >= '0' && c <= '9' ) ? c - '0' : ( c >= 'A' && c <= 'Z' ) ? c - 'A' + 10 : ( c >= 'a' && c <= 'z' ) ? c - 'a' + 10 : base		2000321	1					
ANR	2000408	Condition	c >= '0' && c <= '9'		2000321	0					
ANR	2000409	AndExpression	c >= '0' && c <= '9'		2000321	0		&&			
ANR	2000410	RelationalExpression	c >= '0'		2000321	0		>=			
ANR	2000411	Identifier	c		2000321	0					
ANR	2000412	PrimaryExpression	'0'		2000321	1					
ANR	2000413	RelationalExpression	c <= '9'		2000321	1		<=			
ANR	2000414	Identifier	c		2000321	0					
ANR	2000415	PrimaryExpression	'9'		2000321	1					
ANR	2000416	AdditiveExpression	c - '0'		2000321	1		-			
ANR	2000417	Identifier	c		2000321	0					
ANR	2000418	PrimaryExpression	'0'		2000321	1					
ANR	2000419	ConditionalExpression	( c >= 'A' && c <= 'Z' ) ? c - 'A' + 10 : ( c >= 'a' && c <= 'z' ) ? c - 'a' + 10 : base		2000321	2					
ANR	2000420	Condition	c >= 'A' && c <= 'Z'		2000321	0					
ANR	2000421	AndExpression	c >= 'A' && c <= 'Z'		2000321	0		&&			
ANR	2000422	RelationalExpression	c >= 'A'		2000321	0		>=			
ANR	2000423	Identifier	c		2000321	0					
ANR	2000424	PrimaryExpression	'A'		2000321	1					
ANR	2000425	RelationalExpression	c <= 'Z'		2000321	1		<=			
ANR	2000426	Identifier	c		2000321	0					
ANR	2000427	PrimaryExpression	'Z'		2000321	1					
ANR	2000428	AdditiveExpression	c - 'A' + 10		2000321	1		-			
ANR	2000429	Identifier	c		2000321	0					
ANR	2000430	AdditiveExpression	'A' + 10		2000321	1		+			
ANR	2000431	PrimaryExpression	'A'		2000321	0					
ANR	2000432	PrimaryExpression	10		2000321	1					
ANR	2000433	ConditionalExpression	( c >= 'a' && c <= 'z' ) ? c - 'a' + 10 : base		2000321	2					
ANR	2000434	Condition	c >= 'a' && c <= 'z'		2000321	0					
ANR	2000435	AndExpression	c >= 'a' && c <= 'z'		2000321	0		&&			
ANR	2000436	RelationalExpression	c >= 'a'		2000321	0		>=			
ANR	2000437	Identifier	c		2000321	0					
ANR	2000438	PrimaryExpression	'a'		2000321	1					
ANR	2000439	RelationalExpression	c <= 'z'		2000321	1		<=			
ANR	2000440	Identifier	c		2000321	0					
ANR	2000441	PrimaryExpression	'z'		2000321	1					
ANR	2000442	AdditiveExpression	c - 'a' + 10		2000321	1		-			
ANR	2000443	Identifier	c		2000321	0					
ANR	2000444	AdditiveExpression	'a' + 10		2000321	1		+			
ANR	2000445	PrimaryExpression	'a'		2000321	0					
ANR	2000446	PrimaryExpression	10		2000321	1					
ANR	2000447	Identifier	base		2000321	2					
ANR	2000448	IfStatement	if ( digit >= base )		2000321	2					
ANR	2000449	Condition	digit >= base	792:6:18991:19003	2000321	0	True				
ANR	2000450	RelationalExpression	digit >= base		2000321	0		>=			
ANR	2000451	Identifier	digit		2000321	0					
ANR	2000452	Identifier	base		2000321	1					
ANR	2000453	CompoundStatement		20:21:366:366	2000321	1					
ANR	2000454	ContinueStatement	continue ;	793:3:19011:19019	2000321	0	True				
ANR	2000455	ExpressionStatement	onum = num	796:2:19028:19038	2000321	3	True				
ANR	2000456	AssignmentExpression	onum = num		2000321	0		=			
ANR	2000457	Identifier	onum		2000321	0					
ANR	2000458	Identifier	num		2000321	1					
ANR	2000459	ExpressionStatement	num = num * base + digit	797:2:19042:19066	2000321	4	True				
ANR	2000460	AssignmentExpression	num = num * base + digit		2000321	0		=			
ANR	2000461	Identifier	num		2000321	0					
ANR	2000462	AdditiveExpression	num * base + digit		2000321	1		+			
ANR	2000463	MultiplicativeExpression	num * base		2000321	0		*			
ANR	2000464	Identifier	num		2000321	0					
ANR	2000465	Identifier	base		2000321	1					
ANR	2000466	Identifier	digit		2000321	1					
ANR	2000467	IfStatement	if ( num > onum )		2000321	5					
ANR	2000468	Condition	num > onum	798:6:19074:19083	2000321	0	True				
ANR	2000469	RelationalExpression	num > onum		2000321	0		>			
ANR	2000470	Identifier	num		2000321	0					
ANR	2000471	Identifier	onum		2000321	1					
ANR	2000472	ContinueStatement	continue ;	799:3:19089:19097	2000321	1	True				
ANR	2000473	CompoundStatement		29:2:462:462	2000321	6					
ANR	2000474	ExpressionStatement	TSRMLS_FETCH ( )	802:3:19107:19121	2000321	0	True				
ANR	2000475	CallExpression	TSRMLS_FETCH ( )		2000321	0					
ANR	2000476	Callee	TSRMLS_FETCH		2000321	0					
ANR	2000477	Identifier	TSRMLS_FETCH		2000321	0					
ANR	2000478	ArgumentList			2000321	1					
ANR	2000479	Statement	php_error_docref	804:3:19127:19142	2000321	1	True				
ANR	2000480	Statement	(	804:19:19143:19143	2000321	2	True				
ANR	2000481	Statement	NULL	804:20:19144:19147	2000321	3	True				
ANR	2000482	Statement	TSRMLS_CC	804:25:19149:19157	2000321	4	True				
ANR	2000483	Statement	","	804:34:19158:19158	2000321	5	True				
ANR	2000484	Statement	E_WARNING	804:36:19160:19168	2000321	6	True				
ANR	2000485	Statement	","	804:45:19169:19169	2000321	7	True				
ANR	2000486	Statement	"""Number '%s' is too big to fit in long"""	804:47:19171:19209	2000321	8	True				
ANR	2000487	Statement	","	804:86:19210:19210	2000321	9	True				
ANR	2000488	Statement	s	804:88:19212:19212	2000321	10	True				
ANR	2000489	Statement	)	804:89:19213:19213	2000321	11	True				
ANR	2000490	ExpressionStatement		804:90:19214:19214	2000321	12	True				
ANR	2000491	ReturnStatement	return LONG_MAX ;	805:3:19219:19234	2000321	13	True				
ANR	2000492	Identifier	LONG_MAX		2000321	0					
ANR	2000493	ReturnStatement	return num ;	809:1:19245:19255	2000321	6	True				
ANR	2000494	Identifier	num		2000321	0					
ANR	2000495	ReturnType	PHPAPI long		2000321	1					
ANR	2000496	Identifier	_php_math_basetolong		2000321	2					
ANR	2000497	ParameterList	"zval * arg , int base"		2000321	3					
ANR	2000498	Parameter	zval * arg	772:33:18618:18626	2000321	0	True				
ANR	2000499	ParameterType	zval *		2000321	0					
ANR	2000500	Identifier	arg		2000321	1					
ANR	2000501	Parameter	int base	772:44:18629:18636	2000321	1	True				
ANR	2000502	ParameterType	int		2000321	0					
ANR	2000503	Identifier	base		2000321	1					
ANR	2000504	CFGEntryNode	ENTRY		2000321		True				
ANR	2000505	CFGExitNode	EXIT		2000321		True				
ANR	2000506	Symbol	* s ++		2000321						
ANR	2000507	Symbol	onum		2000321						
ANR	2000508	Symbol	c		2000321						
ANR	2000509	Symbol	num		2000321						
ANR	2000510	Symbol	i		2000321						
ANR	2000511	Symbol	Z_TYPE_P		2000321						
ANR	2000512	Symbol	Z_STRVAL_P		2000321						
ANR	2000513	Symbol	s		2000321						
ANR	2000514	Symbol	LONG_MAX		2000321						
ANR	2000515	Symbol	arg		2000321						
ANR	2000516	Symbol	Z_STRLEN_P		2000321						
ANR	2000517	Symbol	IS_STRING		2000321						
ANR	2000518	Symbol	base		2000321						
ANR	2000519	Symbol	digit		2000321						
ANR	2000520	Function	_php_math_basetozval	817:0:19377:20342							
ANR	2000521	FunctionDef	"_php_math_basetozval (zval * arg , int base , zval * ret)"		2000520	0					
ANR	2000522	CompoundStatement		818:0:19441:20342	2000520	0					
ANR	2000523	IdentifierDeclStatement	long num = 0 ;	819:1:19444:19456	2000520	0	True				
ANR	2000524	IdentifierDecl	num = 0		2000520	0					
ANR	2000525	IdentifierDeclType	long		2000520	0					
ANR	2000526	Identifier	num		2000520	1					
ANR	2000527	AssignmentExpression	num = 0		2000520	2		=			
ANR	2000528	Identifier	num		2000520	0					
ANR	2000529	PrimaryExpression	0		2000520	1					
ANR	2000530	IdentifierDeclStatement	double fnum = 0 ;	820:1:19459:19474	2000520	1	True				
ANR	2000531	IdentifierDecl	fnum = 0		2000520	0					
ANR	2000532	IdentifierDeclType	double		2000520	0					
ANR	2000533	Identifier	fnum		2000520	1					
ANR	2000534	AssignmentExpression	fnum = 0		2000520	2		=			
ANR	2000535	Identifier	fnum		2000520	0					
ANR	2000536	PrimaryExpression	0		2000520	1					
ANR	2000537	IdentifierDeclStatement	int i ;	821:1:19477:19482	2000520	2	True				
ANR	2000538	IdentifierDecl	i		2000520	0					
ANR	2000539	IdentifierDeclType	int		2000520	0					
ANR	2000540	Identifier	i		2000520	1					
ANR	2000541	IdentifierDeclStatement	int mode = 0 ;	822:1:19485:19497	2000520	3	True				
ANR	2000542	IdentifierDecl	mode = 0		2000520	0					
ANR	2000543	IdentifierDeclType	int		2000520	0					
ANR	2000544	Identifier	mode		2000520	1					
ANR	2000545	AssignmentExpression	mode = 0		2000520	2		=			
ANR	2000546	Identifier	mode		2000520	0					
ANR	2000547	PrimaryExpression	0		2000520	1					
ANR	2000548	IdentifierDeclStatement	"char c , * s ;"	823:1:19500:19510	2000520	4	True				
ANR	2000549	IdentifierDecl	c		2000520	0					
ANR	2000550	IdentifierDeclType	char		2000520	0					
ANR	2000551	Identifier	c		2000520	1					
ANR	2000552	IdentifierDecl	* s		2000520	1					
ANR	2000553	IdentifierDeclType	char *		2000520	0					
ANR	2000554	Identifier	s		2000520	1					
ANR	2000555	IdentifierDeclStatement	long cutoff ;	824:1:19513:19524	2000520	5	True				
ANR	2000556	IdentifierDecl	cutoff		2000520	0					
ANR	2000557	IdentifierDeclType	long		2000520	0					
ANR	2000558	Identifier	cutoff		2000520	1					
ANR	2000559	IdentifierDeclStatement	int cutlim ;	825:1:19527:19537	2000520	6	True				
ANR	2000560	IdentifierDecl	cutlim		2000520	0					
ANR	2000561	IdentifierDeclType	int		2000520	0					
ANR	2000562	Identifier	cutlim		2000520	1					
ANR	2000563	IfStatement	if ( Z_TYPE_P ( arg ) != IS_STRING || base < 2 || base > 36 )		2000520	7					
ANR	2000564	Condition	Z_TYPE_P ( arg ) != IS_STRING || base < 2 || base > 36	827:5:19545:19595	2000520	0	True				
ANR	2000565	OrExpression	Z_TYPE_P ( arg ) != IS_STRING || base < 2 || base > 36		2000520	0		||			
ANR	2000566	EqualityExpression	Z_TYPE_P ( arg ) != IS_STRING		2000520	0		!=			
ANR	2000567	CallExpression	Z_TYPE_P ( arg )		2000520	0					
ANR	2000568	Callee	Z_TYPE_P		2000520	0					
ANR	2000569	Identifier	Z_TYPE_P		2000520	0					
ANR	2000570	ArgumentList	arg		2000520	1					
ANR	2000571	Argument	arg		2000520	0					
ANR	2000572	Identifier	arg		2000520	0					
ANR	2000573	Identifier	IS_STRING		2000520	1					
ANR	2000574	OrExpression	base < 2 || base > 36		2000520	1		||			
ANR	2000575	RelationalExpression	base < 2		2000520	0		<			
ANR	2000576	Identifier	base		2000520	0					
ANR	2000577	PrimaryExpression	2		2000520	1					
ANR	2000578	RelationalExpression	base > 36		2000520	1		>			
ANR	2000579	Identifier	base		2000520	0					
ANR	2000580	PrimaryExpression	36		2000520	1					
ANR	2000581	CompoundStatement		10:58:156:156	2000520	1					
ANR	2000582	ReturnStatement	return FAILURE ;	828:2:19602:19616	2000520	0	True				
ANR	2000583	Identifier	FAILURE		2000520	0					
ANR	2000584	ExpressionStatement	s = Z_STRVAL_P ( arg )	831:1:19623:19642	2000520	8	True				
ANR	2000585	AssignmentExpression	s = Z_STRVAL_P ( arg )		2000520	0		=			
ANR	2000586	Identifier	s		2000520	0					
ANR	2000587	CallExpression	Z_STRVAL_P ( arg )		2000520	1					
ANR	2000588	Callee	Z_STRVAL_P		2000520	0					
ANR	2000589	Identifier	Z_STRVAL_P		2000520	0					
ANR	2000590	ArgumentList	arg		2000520	1					
ANR	2000591	Argument	arg		2000520	0					
ANR	2000592	Identifier	arg		2000520	0					
ANR	2000593	ExpressionStatement	cutoff = LONG_MAX / base	833:1:19646:19670	2000520	9	True				
ANR	2000594	AssignmentExpression	cutoff = LONG_MAX / base		2000520	0		=			
ANR	2000595	Identifier	cutoff		2000520	0					
ANR	2000596	MultiplicativeExpression	LONG_MAX / base		2000520	1		/			
ANR	2000597	Identifier	LONG_MAX		2000520	0					
ANR	2000598	Identifier	base		2000520	1					
ANR	2000599	ExpressionStatement	cutlim = LONG_MAX % base	834:1:19673:19697	2000520	10	True				
ANR	2000600	AssignmentExpression	cutlim = LONG_MAX % base		2000520	0		=			
ANR	2000601	Identifier	cutlim		2000520	0					
ANR	2000602	MultiplicativeExpression	LONG_MAX % base		2000520	1		%			
ANR	2000603	Identifier	LONG_MAX		2000520	0					
ANR	2000604	Identifier	base		2000520	1					
ANR	2000605	ForStatement	for ( i = Z_STRLEN_P ( arg ) ; i > 0 ; i -- )		2000520	11					
ANR	2000606	ForInit	i = Z_STRLEN_P ( arg ) ;	836:6:19706:19725	2000520	0	True				
ANR	2000607	AssignmentExpression	i = Z_STRLEN_P ( arg )		2000520	0		=			
ANR	2000608	Identifier	i		2000520	0					
ANR	2000609	CallExpression	Z_STRLEN_P ( arg )		2000520	1					
ANR	2000610	Callee	Z_STRLEN_P		2000520	0					
ANR	2000611	Identifier	Z_STRLEN_P		2000520	0					
ANR	2000612	ArgumentList	arg		2000520	1					
ANR	2000613	Argument	arg		2000520	0					
ANR	2000614	Identifier	arg		2000520	0					
ANR	2000615	Condition	i > 0	836:27:19727:19731	2000520	1	True				
ANR	2000616	RelationalExpression	i > 0		2000520	0		>			
ANR	2000617	Identifier	i		2000520	0					
ANR	2000618	PrimaryExpression	0		2000520	1					
ANR	2000619	PostIncDecOperationExpression	i --	836:34:19734:19736	2000520	2	True				
ANR	2000620	Identifier	i		2000520	0					
ANR	2000621	IncDec	--		2000520	1					
ANR	2000622	CompoundStatement		19:39:297:297	2000520	3					
ANR	2000623	ExpressionStatement	c = * s ++	837:2:19743:19751	2000520	0	True				
ANR	2000624	AssignmentExpression	c = * s ++		2000520	0		=			
ANR	2000625	Identifier	c		2000520	0					
ANR	2000626	UnaryOperationExpression	* s ++		2000520	1					
ANR	2000627	UnaryOperator	*		2000520	0					
ANR	2000628	PostIncDecOperationExpression	s ++		2000520	1					
ANR	2000629	Identifier	s		2000520	0					
ANR	2000630	IncDec	++		2000520	1					
ANR	2000631	IfStatement	if ( c >= '0' && c <= '9' )		2000520	1					
ANR	2000632	Condition	c >= '0' && c <= '9'	840:6:19794:19813	2000520	0	True				
ANR	2000633	AndExpression	c >= '0' && c <= '9'		2000520	0		&&			
ANR	2000634	RelationalExpression	c >= '0'		2000520	0		>=			
ANR	2000635	Identifier	c		2000520	0					
ANR	2000636	PrimaryExpression	'0'		2000520	1					
ANR	2000637	RelationalExpression	c <= '9'		2000520	1		<=			
ANR	2000638	Identifier	c		2000520	0					
ANR	2000639	PrimaryExpression	'9'		2000520	1					
ANR	2000640	ExpressionStatement	c -= '0'	841:3:19819:19827	2000520	1	True				
ANR	2000641	AssignmentExpression	c -= '0'		2000520	0		-=			
ANR	2000642	Identifier	c		2000520	0					
ANR	2000643	PrimaryExpression	'0'		2000520	1					
ANR	2000644	ElseStatement	else		2000520	0					
ANR	2000645	IfStatement	if ( c >= 'A' && c <= 'Z' )		2000520	0					
ANR	2000646	Condition	c >= 'A' && c <= 'Z'	842:11:19840:19859	2000520	0	True				
ANR	2000647	AndExpression	c >= 'A' && c <= 'Z'		2000520	0		&&			
ANR	2000648	RelationalExpression	c >= 'A'		2000520	0		>=			
ANR	2000649	Identifier	c		2000520	0					
ANR	2000650	PrimaryExpression	'A'		2000520	1					
ANR	2000651	RelationalExpression	c <= 'Z'		2000520	1		<=			
ANR	2000652	Identifier	c		2000520	0					
ANR	2000653	PrimaryExpression	'Z'		2000520	1					
ANR	2000654	ExpressionStatement	c -= 'A' - 10	843:3:19865:19878	2000520	1	True				
ANR	2000655	AssignmentExpression	c -= 'A' - 10		2000520	0		-=			
ANR	2000656	Identifier	c		2000520	0					
ANR	2000657	AdditiveExpression	'A' - 10		2000520	1		-			
ANR	2000658	PrimaryExpression	'A'		2000520	0					
ANR	2000659	PrimaryExpression	10		2000520	1					
ANR	2000660	ElseStatement	else		2000520	0					
ANR	2000661	IfStatement	if ( c >= 'a' && c <= 'z' )		2000520	0					
ANR	2000662	Condition	c >= 'a' && c <= 'z'	844:11:19891:19910	2000520	0	True				
ANR	2000663	AndExpression	c >= 'a' && c <= 'z'		2000520	0		&&			
ANR	2000664	RelationalExpression	c >= 'a'		2000520	0		>=			
ANR	2000665	Identifier	c		2000520	0					
ANR	2000666	PrimaryExpression	'a'		2000520	1					
ANR	2000667	RelationalExpression	c <= 'z'		2000520	1		<=			
ANR	2000668	Identifier	c		2000520	0					
ANR	2000669	PrimaryExpression	'z'		2000520	1					
ANR	2000670	ExpressionStatement	c -= 'a' - 10	845:3:19916:19929	2000520	1	True				
ANR	2000671	AssignmentExpression	c -= 'a' - 10		2000520	0		-=			
ANR	2000672	Identifier	c		2000520	0					
ANR	2000673	AdditiveExpression	'a' - 10		2000520	1		-			
ANR	2000674	PrimaryExpression	'a'		2000520	0					
ANR	2000675	PrimaryExpression	10		2000520	1					
ANR	2000676	ElseStatement	else		2000520	0					
ANR	2000677	ContinueStatement	continue ;	847:3:19941:19949	2000520	0	True				
ANR	2000678	IfStatement	if ( c >= base )		2000520	2					
ANR	2000679	Condition	c >= base	849:6:19958:19966	2000520	0	True				
ANR	2000680	RelationalExpression	c >= base		2000520	0		>=			
ANR	2000681	Identifier	c		2000520	0					
ANR	2000682	Identifier	base		2000520	1					
ANR	2000683	ContinueStatement	continue ;	850:3:19972:19980	2000520	1	True				
ANR	2000684	SwitchStatement	switch ( mode )		2000520	3					
ANR	2000685	Condition	mode	852:10:19993:19996	2000520	0	True				
ANR	2000686	Identifier	mode		2000520	0					
ANR	2000687	CompoundStatement		35:16:557:557	2000520	1					
ANR	2000688	Label	case 0 :	853:2:20003:20009	2000520	0	True				
ANR	2000689	IfStatement	if ( num < cutoff || ( num == cutoff && c <= cutlim ) )		2000520	1					
ANR	2000690	Condition	num < cutoff || ( num == cutoff && c <= cutlim )	854:7:20032:20077	2000520	0	True				
ANR	2000691	OrExpression	num < cutoff || ( num == cutoff && c <= cutlim )		2000520	0		||			
ANR	2000692	RelationalExpression	num < cutoff		2000520	0		<			
ANR	2000693	Identifier	num		2000520	0					
ANR	2000694	Identifier	cutoff		2000520	1					
ANR	2000695	AndExpression	num == cutoff && c <= cutlim		2000520	1		&&			
ANR	2000696	EqualityExpression	num == cutoff		2000520	0		==			
ANR	2000697	Identifier	num		2000520	0					
ANR	2000698	Identifier	cutoff		2000520	1					
ANR	2000699	RelationalExpression	c <= cutlim		2000520	1		<=			
ANR	2000700	Identifier	c		2000520	0					
ANR	2000701	Identifier	cutlim		2000520	1					
ANR	2000702	CompoundStatement		37:55:638:638	2000520	1					
ANR	2000703	ExpressionStatement	num = num * base + c	855:4:20086:20106	2000520	0	True				
ANR	2000704	AssignmentExpression	num = num * base + c		2000520	0		=			
ANR	2000705	Identifier	num		2000520	0					
ANR	2000706	AdditiveExpression	num * base + c		2000520	1		+			
ANR	2000707	MultiplicativeExpression	num * base		2000520	0		*			
ANR	2000708	Identifier	num		2000520	0					
ANR	2000709	Identifier	base		2000520	1					
ANR	2000710	Identifier	c		2000520	1					
ANR	2000711	BreakStatement	break ;	856:4:20112:20117	2000520	1	True				
ANR	2000712	ElseStatement	else		2000520	0					
ANR	2000713	CompoundStatement		40:10:687:687	2000520	0					
ANR	2000714	ExpressionStatement	fnum = num	858:4:20135:20145	2000520	0	True				
ANR	2000715	AssignmentExpression	fnum = num		2000520	0		=			
ANR	2000716	Identifier	fnum		2000520	0					
ANR	2000717	Identifier	num		2000520	1					
ANR	2000718	ExpressionStatement	mode = 1	859:4:20151:20159	2000520	1	True				
ANR	2000719	AssignmentExpression	mode = 1		2000520	0		=			
ANR	2000720	Identifier	mode		2000520	0					
ANR	2000721	PrimaryExpression	1		2000520	1					
ANR	2000722	Label	case 1 :	862:2:20190:20196	2000520	2	True				
ANR	2000723	ExpressionStatement	fnum = fnum * base + c	863:3:20213:20235	2000520	3	True				
ANR	2000724	AssignmentExpression	fnum = fnum * base + c		2000520	0		=			
ANR	2000725	Identifier	fnum		2000520	0					
ANR	2000726	AdditiveExpression	fnum * base + c		2000520	1		+			
ANR	2000727	MultiplicativeExpression	fnum * base		2000520	0		*			
ANR	2000728	Identifier	fnum		2000520	0					
ANR	2000729	Identifier	base		2000520	1					
ANR	2000730	Identifier	c		2000520	1					
ANR	2000731	IfStatement	if ( mode == 1 )		2000520	12					
ANR	2000732	Condition	mode == 1	867:5:20250:20258	2000520	0	True				
ANR	2000733	EqualityExpression	mode == 1		2000520	0		==			
ANR	2000734	Identifier	mode		2000520	0					
ANR	2000735	PrimaryExpression	1		2000520	1					
ANR	2000736	CompoundStatement		50:16:819:819	2000520	1					
ANR	2000737	ExpressionStatement	"ZVAL_DOUBLE ( ret , fnum )"	868:2:20265:20287	2000520	0	True				
ANR	2000738	CallExpression	"ZVAL_DOUBLE ( ret , fnum )"		2000520	0					
ANR	2000739	Callee	ZVAL_DOUBLE		2000520	0					
ANR	2000740	Identifier	ZVAL_DOUBLE		2000520	0					
ANR	2000741	ArgumentList	ret		2000520	1					
ANR	2000742	Argument	ret		2000520	0					
ANR	2000743	Identifier	ret		2000520	0					
ANR	2000744	Argument	fnum		2000520	1					
ANR	2000745	Identifier	fnum		2000520	0					
ANR	2000746	ElseStatement	else		2000520	0					
ANR	2000747	CompoundStatement		52:8:855:855	2000520	0					
ANR	2000748	ExpressionStatement	"ZVAL_LONG ( ret , num )"	870:2:20301:20320	2000520	0	True				
ANR	2000749	CallExpression	"ZVAL_LONG ( ret , num )"		2000520	0					
ANR	2000750	Callee	ZVAL_LONG		2000520	0					
ANR	2000751	Identifier	ZVAL_LONG		2000520	0					
ANR	2000752	ArgumentList	ret		2000520	1					
ANR	2000753	Argument	ret		2000520	0					
ANR	2000754	Identifier	ret		2000520	0					
ANR	2000755	Argument	num		2000520	1					
ANR	2000756	Identifier	num		2000520	0					
ANR	2000757	ReturnStatement	return SUCCESS ;	872:1:20326:20340	2000520	13	True				
ANR	2000758	Identifier	SUCCESS		2000520	0					
ANR	2000759	ReturnType	PHPAPI int		2000520	1					
ANR	2000760	Identifier	_php_math_basetozval		2000520	2					
ANR	2000761	ParameterList	"zval * arg , int base , zval * ret"		2000520	3					
ANR	2000762	Parameter	zval * arg	817:32:19409:19417	2000520	0	True				
ANR	2000763	ParameterType	zval *		2000520	0					
ANR	2000764	Identifier	arg		2000520	1					
ANR	2000765	Parameter	int base	817:43:19420:19427	2000520	1	True				
ANR	2000766	ParameterType	int		2000520	0					
ANR	2000767	Identifier	base		2000520	1					
ANR	2000768	Parameter	zval * ret	817:53:19430:19438	2000520	2	True				
ANR	2000769	ParameterType	zval *		2000520	0					
ANR	2000770	Identifier	ret		2000520	1					
ANR	2000771	CFGEntryNode	ENTRY		2000520		True				
ANR	2000772	CFGExitNode	EXIT		2000520		True				
ANR	2000773	Symbol	ret		2000520						
ANR	2000774	Symbol	* s ++		2000520						
ANR	2000775	Symbol	c		2000520						
ANR	2000776	Symbol	SUCCESS		2000520						
ANR	2000777	Symbol	num		2000520						
ANR	2000778	Symbol	i		2000520						
ANR	2000779	Symbol	Z_TYPE_P		2000520						
ANR	2000780	Symbol	FAILURE		2000520						
ANR	2000781	Symbol	Z_STRVAL_P		2000520						
ANR	2000782	Symbol	fnum		2000520						
ANR	2000783	Symbol	mode		2000520						
ANR	2000784	Symbol	s		2000520						
ANR	2000785	Symbol	LONG_MAX		2000520						
ANR	2000786	Symbol	arg		2000520						
ANR	2000787	Symbol	cutlim		2000520						
ANR	2000788	Symbol	Z_STRLEN_P		2000520						
ANR	2000789	Symbol	cutoff		2000520						
ANR	2000790	Symbol	IS_STRING		2000520						
ANR	2000791	Symbol	base		2000520						
ANR	2000792	Function	_php_math_longtobase	881:0:20480:20976							
ANR	2000793	FunctionDef	"_php_math_longtobase (zval * arg , int base)"		2000792	0					
ANR	2000794	CompoundStatement		882:0:20536:20976	2000792	0					
ANR	2000795	Statement	static	883:1:20539:20544	2000792	0	True				
ANR	2000796	IdentifierDeclStatement	"char digits [ ] = ""0123456789abcdefghijklmnopqrstuvwxyz"" ;"	883:8:20546:20600	2000792	1	True				
ANR	2000797	IdentifierDecl	"digits [ ] = ""0123456789abcdefghijklmnopqrstuvwxyz"""		2000792	0					
ANR	2000798	IdentifierDeclType	char [ ]		2000792	0					
ANR	2000799	Identifier	digits		2000792	1					
ANR	2000800	AssignmentExpression	"digits [ ] = ""0123456789abcdefghijklmnopqrstuvwxyz"""		2000792	2		=			
ANR	2000801	Identifier	digits		2000792	0					
ANR	2000802	PrimaryExpression	"""0123456789abcdefghijklmnopqrstuvwxyz"""		2000792	1					
ANR	2000803	IdentifierDeclStatement	char buf [ ( sizeof ( unsigned long ) << 3 ) + 1 ] ;	884:1:20603:20645	2000792	2	True				
ANR	2000804	IdentifierDecl	buf [ ( sizeof ( unsigned long ) << 3 ) + 1 ]		2000792	0					
ANR	2000805	IdentifierDeclType	char [ ( sizeof ( unsigned long ) << 3 ) + 1 ]		2000792	0					
ANR	2000806	Identifier	buf		2000792	1					
ANR	2000807	AdditiveExpression	( sizeof ( unsigned long ) << 3 ) + 1		2000792	2		+			
ANR	2000808	ShiftExpression	sizeof ( unsigned long ) << 3		2000792	0		<<			
ANR	2000809	SizeofExpression	sizeof ( unsigned long )		2000792	0					
ANR	2000810	Sizeof	sizeof		2000792	0					
ANR	2000811	SizeofOperand	unsigned long		2000792	1					
ANR	2000812	PrimaryExpression	3		2000792	1					
ANR	2000813	PrimaryExpression	1		2000792	1					
ANR	2000814	IdentifierDeclStatement	"char * ptr , * end ;"	885:1:20648:20663	2000792	3	True				
ANR	2000815	IdentifierDecl	* ptr		2000792	0					
ANR	2000816	IdentifierDeclType	char *		2000792	0					
ANR	2000817	Identifier	ptr		2000792	1					
ANR	2000818	IdentifierDecl	* end		2000792	1					
ANR	2000819	IdentifierDeclType	char *		2000792	0					
ANR	2000820	Identifier	end		2000792	1					
ANR	2000821	IdentifierDeclStatement	unsigned long value ;	886:1:20666:20685	2000792	4	True				
ANR	2000822	IdentifierDecl	value		2000792	0					
ANR	2000823	IdentifierDeclType	unsigned long		2000792	0					
ANR	2000824	Identifier	value		2000792	1					
ANR	2000825	IfStatement	if ( Z_TYPE_P ( arg ) != IS_LONG || base < 2 || base > 36 )		2000792	5					
ANR	2000826	Condition	Z_TYPE_P ( arg ) != IS_LONG || base < 2 || base > 36	888:5:20693:20741	2000792	0	True				
ANR	2000827	OrExpression	Z_TYPE_P ( arg ) != IS_LONG || base < 2 || base > 36		2000792	0		||			
ANR	2000828	EqualityExpression	Z_TYPE_P ( arg ) != IS_LONG		2000792	0		!=			
ANR	2000829	CallExpression	Z_TYPE_P ( arg )		2000792	0					
ANR	2000830	Callee	Z_TYPE_P		2000792	0					
ANR	2000831	Identifier	Z_TYPE_P		2000792	0					
ANR	2000832	ArgumentList	arg		2000792	1					
ANR	2000833	Argument	arg		2000792	0					
ANR	2000834	Identifier	arg		2000792	0					
ANR	2000835	Identifier	IS_LONG		2000792	1					
ANR	2000836	OrExpression	base < 2 || base > 36		2000792	1		||			
ANR	2000837	RelationalExpression	base < 2		2000792	0		<			
ANR	2000838	Identifier	base		2000792	0					
ANR	2000839	PrimaryExpression	2		2000792	1					
ANR	2000840	RelationalExpression	base > 36		2000792	1		>			
ANR	2000841	Identifier	base		2000792	0					
ANR	2000842	PrimaryExpression	36		2000792	1					
ANR	2000843	CompoundStatement		7:56:207:207	2000792	1					
ANR	2000844	ReturnStatement	return STR_EMPTY_ALLOC ( ) ;	889:2:20748:20772	2000792	0	True				
ANR	2000845	CallExpression	STR_EMPTY_ALLOC ( )		2000792	0					
ANR	2000846	Callee	STR_EMPTY_ALLOC		2000792	0					
ANR	2000847	Identifier	STR_EMPTY_ALLOC		2000792	0					
ANR	2000848	ArgumentList			2000792	1					
ANR	2000849	ExpressionStatement	value = Z_LVAL_P ( arg )	892:1:20779:20800	2000792	6	True				
ANR	2000850	AssignmentExpression	value = Z_LVAL_P ( arg )		2000792	0		=			
ANR	2000851	Identifier	value		2000792	0					
ANR	2000852	CallExpression	Z_LVAL_P ( arg )		2000792	1					
ANR	2000853	Callee	Z_LVAL_P		2000792	0					
ANR	2000854	Identifier	Z_LVAL_P		2000792	0					
ANR	2000855	ArgumentList	arg		2000792	1					
ANR	2000856	Argument	arg		2000792	0					
ANR	2000857	Identifier	arg		2000792	0					
ANR	2000858	ExpressionStatement	end = ptr = buf + sizeof ( buf ) - 1	894:1:20804:20837	2000792	7	True				
ANR	2000859	AssignmentExpression	end = ptr = buf + sizeof ( buf ) - 1		2000792	0		=			
ANR	2000860	Identifier	end		2000792	0					
ANR	2000861	AssignmentExpression	ptr = buf + sizeof ( buf ) - 1		2000792	1		=			
ANR	2000862	Identifier	ptr		2000792	0					
ANR	2000863	AdditiveExpression	buf + sizeof ( buf ) - 1		2000792	1		+			
ANR	2000864	Identifier	buf		2000792	0					
ANR	2000865	AdditiveExpression	sizeof ( buf ) - 1		2000792	1		-			
ANR	2000866	SizeofExpression	sizeof ( buf )		2000792	0					
ANR	2000867	Sizeof	sizeof		2000792	0					
ANR	2000868	SizeofOperand	buf		2000792	1					
ANR	2000869	PrimaryExpression	1		2000792	1					
ANR	2000870	ExpressionStatement	* ptr = '\\0'	895:1:20840:20851	2000792	8	True				
ANR	2000871	AssignmentExpression	* ptr = '\\0'		2000792	0		=			
ANR	2000872	UnaryOperationExpression	* ptr		2000792	0					
ANR	2000873	UnaryOperator	*		2000792	0					
ANR	2000874	Identifier	ptr		2000792	1					
ANR	2000875	PrimaryExpression	'\\0'		2000792	1					
ANR	2000876	DoStatement	do		2000792	9					
ANR	2000877	CompoundStatement		16:4:321:321	2000792	0					
ANR	2000878	ExpressionStatement	* -- ptr = digits [ value % base ]	898:2:20862:20891	2000792	0	True				
ANR	2000879	AssignmentExpression	* -- ptr = digits [ value % base ]		2000792	0		=			
ANR	2000880	UnaryOperationExpression	* -- ptr		2000792	0					
ANR	2000881	UnaryOperator	*		2000792	0					
ANR	2000882	UnaryExpression	-- ptr		2000792	1					
ANR	2000883	IncDec	--		2000792	0					
ANR	2000884	Identifier	ptr		2000792	1					
ANR	2000885	ArrayIndexing	digits [ value % base ]		2000792	1					
ANR	2000886	Identifier	digits		2000792	0					
ANR	2000887	MultiplicativeExpression	value % base		2000792	1		%			
ANR	2000888	Identifier	value		2000792	0					
ANR	2000889	Identifier	base		2000792	1					
ANR	2000890	ExpressionStatement	value /= base	899:2:20895:20908	2000792	1	True				
ANR	2000891	AssignmentExpression	value /= base		2000792	0		/=			
ANR	2000892	Identifier	value		2000792	0					
ANR	2000893	Identifier	base		2000792	1					
ANR	2000894	Condition	ptr > buf && value	900:10:20920:20937	2000792	1	True				
ANR	2000895	AndExpression	ptr > buf && value		2000792	0		&&			
ANR	2000896	RelationalExpression	ptr > buf		2000792	0		>			
ANR	2000897	Identifier	ptr		2000792	0					
ANR	2000898	Identifier	buf		2000792	1					
ANR	2000899	Identifier	value		2000792	1					
ANR	2000900	ReturnStatement	"return estrndup ( ptr , end - ptr ) ;"	902:1:20943:20974	2000792	10	True				
ANR	2000901	CallExpression	"estrndup ( ptr , end - ptr )"		2000792	0					
ANR	2000902	Callee	estrndup		2000792	0					
ANR	2000903	Identifier	estrndup		2000792	0					
ANR	2000904	ArgumentList	ptr		2000792	1					
ANR	2000905	Argument	ptr		2000792	0					
ANR	2000906	Identifier	ptr		2000792	0					
ANR	2000907	Argument	end - ptr		2000792	1					
ANR	2000908	AdditiveExpression	end - ptr		2000792	0		-			
ANR	2000909	Identifier	end		2000792	0					
ANR	2000910	Identifier	ptr		2000792	1					
ANR	2000911	ReturnType	PHPAPI char *		2000792	1					
ANR	2000912	Identifier	_php_math_longtobase		2000792	2					
ANR	2000913	ParameterList	"zval * arg , int base"		2000792	3					
ANR	2000914	Parameter	zval * arg	881:35:20515:20523	2000792	0	True				
ANR	2000915	ParameterType	zval *		2000792	0					
ANR	2000916	Identifier	arg		2000792	1					
ANR	2000917	Parameter	int base	881:46:20526:20533	2000792	1	True				
ANR	2000918	ParameterType	int		2000792	0					
ANR	2000919	Identifier	base		2000792	1					
ANR	2000920	CFGEntryNode	ENTRY		2000792		True				
ANR	2000921	CFGExitNode	EXIT		2000792		True				
ANR	2000922	Symbol	* -- ptr		2000792						
ANR	2000923	Symbol	* digits		2000792						
ANR	2000924	Symbol	Z_TYPE_P		2000792						
ANR	2000925	Symbol	ptr		2000792						
ANR	2000926	Symbol	Z_LVAL_P		2000792						
ANR	2000927	Symbol	buf		2000792						
ANR	2000928	Symbol	estrndup		2000792						
ANR	2000929	Symbol	IS_LONG		2000792						
ANR	2000930	Symbol	* value		2000792						
ANR	2000931	Symbol	arg		2000792						
ANR	2000932	Symbol	STR_EMPTY_ALLOC		2000792						
ANR	2000933	Symbol	* ptr		2000792						
ANR	2000934	Symbol	digits		2000792						
ANR	2000935	Symbol	end		2000792						
ANR	2000936	Symbol	* base		2000792						
ANR	2000937	Symbol	value		2000792						
ANR	2000938	Symbol	base		2000792						
ANR	2000939	Function	_php_math_zvaltobase	911:0:21114:21976							
ANR	2000940	FunctionDef	"_php_math_zvaltobase (zval * arg , int base TSRMLS_DC)"		2000939	0					
ANR	2000941	CompoundStatement		912:0:21180:21976	2000939	0					
ANR	2000942	Statement	static	913:1:21183:21188	2000939	0	True				
ANR	2000943	IdentifierDeclStatement	"char digits [ ] = ""0123456789abcdefghijklmnopqrstuvwxyz"" ;"	913:8:21190:21244	2000939	1	True				
ANR	2000944	IdentifierDecl	"digits [ ] = ""0123456789abcdefghijklmnopqrstuvwxyz"""		2000939	0					
ANR	2000945	IdentifierDeclType	char [ ]		2000939	0					
ANR	2000946	Identifier	digits		2000939	1					
ANR	2000947	AssignmentExpression	"digits [ ] = ""0123456789abcdefghijklmnopqrstuvwxyz"""		2000939	2		=			
ANR	2000948	Identifier	digits		2000939	0					
ANR	2000949	PrimaryExpression	"""0123456789abcdefghijklmnopqrstuvwxyz"""		2000939	1					
ANR	2000950	IfStatement	if ( ( Z_TYPE_P ( arg ) != IS_LONG && Z_TYPE_P ( arg ) != IS_DOUBLE ) || base < 2 || base > 36 )		2000939	2					
ANR	2000951	Condition	( Z_TYPE_P ( arg ) != IS_LONG && Z_TYPE_P ( arg ) != IS_DOUBLE ) || base < 2 || base > 36	915:5:21252:21332	2000939	0	True				
ANR	2000952	OrExpression	( Z_TYPE_P ( arg ) != IS_LONG && Z_TYPE_P ( arg ) != IS_DOUBLE ) || base < 2 || base > 36		2000939	0		||			
ANR	2000953	AndExpression	Z_TYPE_P ( arg ) != IS_LONG && Z_TYPE_P ( arg ) != IS_DOUBLE		2000939	0		&&			
ANR	2000954	EqualityExpression	Z_TYPE_P ( arg ) != IS_LONG		2000939	0		!=			
ANR	2000955	CallExpression	Z_TYPE_P ( arg )		2000939	0					
ANR	2000956	Callee	Z_TYPE_P		2000939	0					
ANR	2000957	Identifier	Z_TYPE_P		2000939	0					
ANR	2000958	ArgumentList	arg		2000939	1					
ANR	2000959	Argument	arg		2000939	0					
ANR	2000960	Identifier	arg		2000939	0					
ANR	2000961	Identifier	IS_LONG		2000939	1					
ANR	2000962	EqualityExpression	Z_TYPE_P ( arg ) != IS_DOUBLE		2000939	1		!=			
ANR	2000963	CallExpression	Z_TYPE_P ( arg )		2000939	0					
ANR	2000964	Callee	Z_TYPE_P		2000939	0					
ANR	2000965	Identifier	Z_TYPE_P		2000939	0					
ANR	2000966	ArgumentList	arg		2000939	1					
ANR	2000967	Argument	arg		2000939	0					
ANR	2000968	Identifier	arg		2000939	0					
ANR	2000969	Identifier	IS_DOUBLE		2000939	1					
ANR	2000970	OrExpression	base < 2 || base > 36		2000939	1		||			
ANR	2000971	RelationalExpression	base < 2		2000939	0		<			
ANR	2000972	Identifier	base		2000939	0					
ANR	2000973	PrimaryExpression	2		2000939	1					
ANR	2000974	RelationalExpression	base > 36		2000939	1		>			
ANR	2000975	Identifier	base		2000939	0					
ANR	2000976	PrimaryExpression	36		2000939	1					
ANR	2000977	CompoundStatement		4:88:154:154	2000939	1					
ANR	2000978	ReturnStatement	return STR_EMPTY_ALLOC ( ) ;	916:2:21339:21363	2000939	0	True				
ANR	2000979	CallExpression	STR_EMPTY_ALLOC ( )		2000939	0					
ANR	2000980	Callee	STR_EMPTY_ALLOC		2000939	0					
ANR	2000981	Identifier	STR_EMPTY_ALLOC		2000939	0					
ANR	2000982	ArgumentList			2000939	1					
ANR	2000983	IfStatement	if ( Z_TYPE_P ( arg ) == IS_DOUBLE )		2000939	3					
ANR	2000984	Condition	Z_TYPE_P ( arg ) == IS_DOUBLE	919:5:21374:21399	2000939	0	True				
ANR	2000985	EqualityExpression	Z_TYPE_P ( arg ) == IS_DOUBLE		2000939	0		==			
ANR	2000986	CallExpression	Z_TYPE_P ( arg )		2000939	0					
ANR	2000987	Callee	Z_TYPE_P		2000939	0					
ANR	2000988	Identifier	Z_TYPE_P		2000939	0					
ANR	2000989	ArgumentList	arg		2000939	1					
ANR	2000990	Argument	arg		2000939	0					
ANR	2000991	Identifier	arg		2000939	0					
ANR	2000992	Identifier	IS_DOUBLE		2000939	1					
ANR	2000993	CompoundStatement		11:2:312:347	2000939	1					
ANR	2000994	IdentifierDeclStatement	double fvalue = floor ( Z_DVAL_P ( arg ) ) ;	920:2:21406:21442	2000939	0	True				
ANR	2000995	IdentifierDecl	fvalue = floor ( Z_DVAL_P ( arg ) )		2000939	0					
ANR	2000996	IdentifierDeclType	double		2000939	0					
ANR	2000997	Identifier	fvalue		2000939	1					
ANR	2000998	AssignmentExpression	fvalue = floor ( Z_DVAL_P ( arg ) )		2000939	2		=			
ANR	2000999	Identifier	fvalue		2000939	0					
ANR	2001000	CallExpression	floor ( Z_DVAL_P ( arg ) )		2000939	1					
ANR	2001001	Callee	floor		2000939	0					
ANR	2001002	Identifier	floor		2000939	0					
ANR	2001003	ArgumentList	Z_DVAL_P ( arg )		2000939	1					
ANR	2001004	Argument	Z_DVAL_P ( arg )		2000939	0					
ANR	2001005	CallExpression	Z_DVAL_P ( arg )		2000939	0					
ANR	2001006	Callee	Z_DVAL_P		2000939	0					
ANR	2001007	Identifier	Z_DVAL_P		2000939	0					
ANR	2001008	ArgumentList	arg		2000939	1					
ANR	2001009	Argument	arg		2000939	0					
ANR	2001010	Identifier	arg		2000939	0					
ANR	2001011	IdentifierDeclStatement	"char * ptr , * end ;"	921:2:21474:21489	2000939	1	True				
ANR	2001012	IdentifierDecl	* ptr		2000939	0					
ANR	2001013	IdentifierDeclType	char *		2000939	0					
ANR	2001014	Identifier	ptr		2000939	1					
ANR	2001015	IdentifierDecl	* end		2000939	1					
ANR	2001016	IdentifierDeclType	char *		2000939	0					
ANR	2001017	Identifier	end		2000939	1					
ANR	2001018	IdentifierDeclStatement	char buf [ ( sizeof ( double ) << 3 ) + 1 ] ;	922:2:21493:21528	2000939	2	True				
ANR	2001019	IdentifierDecl	buf [ ( sizeof ( double ) << 3 ) + 1 ]		2000939	0					
ANR	2001020	IdentifierDeclType	char [ ( sizeof ( double ) << 3 ) + 1 ]		2000939	0					
ANR	2001021	Identifier	buf		2000939	1					
ANR	2001022	AdditiveExpression	( sizeof ( double ) << 3 ) + 1		2000939	2		+			
ANR	2001023	ShiftExpression	sizeof ( double ) << 3		2000939	0		<<			
ANR	2001024	SizeofExpression	sizeof ( double )		2000939	0					
ANR	2001025	Sizeof	sizeof		2000939	0					
ANR	2001026	SizeofOperand	double		2000939	1					
ANR	2001027	PrimaryExpression	3		2000939	1					
ANR	2001028	PrimaryExpression	1		2000939	1					
ANR	2001029	IfStatement	if ( fvalue == HUGE_VAL || fvalue == - HUGE_VAL )		2000939	3					
ANR	2001030	Condition	fvalue == HUGE_VAL || fvalue == - HUGE_VAL	925:6:21579:21619	2000939	0	True				
ANR	2001031	OrExpression	fvalue == HUGE_VAL || fvalue == - HUGE_VAL		2000939	0		||			
ANR	2001032	EqualityExpression	fvalue == HUGE_VAL		2000939	0		==			
ANR	2001033	Identifier	fvalue		2000939	0					
ANR	2001034	Identifier	HUGE_VAL		2000939	1					
ANR	2001035	EqualityExpression	fvalue == - HUGE_VAL		2000939	1		==			
ANR	2001036	Identifier	fvalue		2000939	0					
ANR	2001037	UnaryOperationExpression	- HUGE_VAL		2000939	1					
ANR	2001038	UnaryOperator	-		2000939	0					
ANR	2001039	Identifier	HUGE_VAL		2000939	1					
ANR	2001040	CompoundStatement		14:49:441:441	2000939	1					
ANR	2001041	Statement	php_error_docref	926:3:21627:21642	2000939	0	True				
ANR	2001042	Statement	(	926:19:21643:21643	2000939	1	True				
ANR	2001043	Statement	NULL	926:20:21644:21647	2000939	2	True				
ANR	2001044	Statement	TSRMLS_CC	926:25:21649:21657	2000939	3	True				
ANR	2001045	Statement	","	926:34:21658:21658	2000939	4	True				
ANR	2001046	Statement	E_WARNING	926:36:21660:21668	2000939	5	True				
ANR	2001047	Statement	","	926:45:21669:21669	2000939	6	True				
ANR	2001048	Statement	"""Number too large"""	926:47:21671:21688	2000939	7	True				
ANR	2001049	Statement	)	926:65:21689:21689	2000939	8	True				
ANR	2001050	ExpressionStatement		926:66:21690:21690	2000939	9	True				
ANR	2001051	ReturnStatement	return STR_EMPTY_ALLOC ( ) ;	927:3:21695:21719	2000939	10	True				
ANR	2001052	CallExpression	STR_EMPTY_ALLOC ( )		2000939	0					
ANR	2001053	Callee	STR_EMPTY_ALLOC		2000939	0					
ANR	2001054	Identifier	STR_EMPTY_ALLOC		2000939	0					
ANR	2001055	ArgumentList			2000939	1					
ANR	2001056	ExpressionStatement	end = ptr = buf + sizeof ( buf ) - 1	930:2:21728:21761	2000939	4	True				
ANR	2001057	AssignmentExpression	end = ptr = buf + sizeof ( buf ) - 1		2000939	0		=			
ANR	2001058	Identifier	end		2000939	0					
ANR	2001059	AssignmentExpression	ptr = buf + sizeof ( buf ) - 1		2000939	1		=			
ANR	2001060	Identifier	ptr		2000939	0					
ANR	2001061	AdditiveExpression	buf + sizeof ( buf ) - 1		2000939	1		+			
ANR	2001062	Identifier	buf		2000939	0					
ANR	2001063	AdditiveExpression	sizeof ( buf ) - 1		2000939	1		-			
ANR	2001064	SizeofExpression	sizeof ( buf )		2000939	0					
ANR	2001065	Sizeof	sizeof		2000939	0					
ANR	2001066	SizeofOperand	buf		2000939	1					
ANR	2001067	PrimaryExpression	1		2000939	1					
ANR	2001068	ExpressionStatement	* ptr = '\\0'	931:2:21765:21776	2000939	5	True				
ANR	2001069	AssignmentExpression	* ptr = '\\0'		2000939	0		=			
ANR	2001070	UnaryOperationExpression	* ptr		2000939	0					
ANR	2001071	UnaryOperator	*		2000939	0					
ANR	2001072	Identifier	ptr		2000939	1					
ANR	2001073	PrimaryExpression	'\\0'		2000939	1					
ANR	2001074	DoStatement	do		2000939	6					
ANR	2001075	CompoundStatement		22:5:603:603	2000939	0					
ANR	2001076	ExpressionStatement	"* -- ptr = digits [ ( int ) fmod ( fvalue , base ) ]"	934:3:21789:21830	2000939	0	True				
ANR	2001077	AssignmentExpression	"* -- ptr = digits [ ( int ) fmod ( fvalue , base ) ]"		2000939	0		=			
ANR	2001078	UnaryOperationExpression	* -- ptr		2000939	0					
ANR	2001079	UnaryOperator	*		2000939	0					
ANR	2001080	UnaryExpression	-- ptr		2000939	1					
ANR	2001081	IncDec	--		2000939	0					
ANR	2001082	Identifier	ptr		2000939	1					
ANR	2001083	ArrayIndexing	"digits [ ( int ) fmod ( fvalue , base ) ]"		2000939	1					
ANR	2001084	Identifier	digits		2000939	0					
ANR	2001085	CastExpression	"( int ) fmod ( fvalue , base )"		2000939	1					
ANR	2001086	CastTarget	int		2000939	0					
ANR	2001087	CallExpression	"fmod ( fvalue , base )"		2000939	1					
ANR	2001088	Callee	fmod		2000939	0					
ANR	2001089	Identifier	fmod		2000939	0					
ANR	2001090	ArgumentList	fvalue		2000939	1					
ANR	2001091	Argument	fvalue		2000939	0					
ANR	2001092	Identifier	fvalue		2000939	0					
ANR	2001093	Argument	base		2000939	1					
ANR	2001094	Identifier	base		2000939	0					
ANR	2001095	ExpressionStatement	fvalue /= base	935:3:21835:21849	2000939	1	True				
ANR	2001096	AssignmentExpression	fvalue /= base		2000939	0		/=			
ANR	2001097	Identifier	fvalue		2000939	0					
ANR	2001098	Identifier	base		2000939	1					
ANR	2001099	Condition	ptr > buf && fabs ( fvalue ) >= 1	936:11:21862:21891	2000939	1	True				
ANR	2001100	AndExpression	ptr > buf && fabs ( fvalue ) >= 1		2000939	0		&&			
ANR	2001101	RelationalExpression	ptr > buf		2000939	0		>			
ANR	2001102	Identifier	ptr		2000939	0					
ANR	2001103	Identifier	buf		2000939	1					
ANR	2001104	RelationalExpression	fabs ( fvalue ) >= 1		2000939	1		>=			
ANR	2001105	CallExpression	fabs ( fvalue )		2000939	0					
ANR	2001106	Callee	fabs		2000939	0					
ANR	2001107	Identifier	fabs		2000939	0					
ANR	2001108	ArgumentList	fvalue		2000939	1					
ANR	2001109	Argument	fvalue		2000939	0					
ANR	2001110	Identifier	fvalue		2000939	0					
ANR	2001111	PrimaryExpression	1		2000939	1					
ANR	2001112	ReturnStatement	"return estrndup ( ptr , end - ptr ) ;"	938:2:21898:21929	2000939	7	True				
ANR	2001113	CallExpression	"estrndup ( ptr , end - ptr )"		2000939	0					
ANR	2001114	Callee	estrndup		2000939	0					
ANR	2001115	Identifier	estrndup		2000939	0					
ANR	2001116	ArgumentList	ptr		2000939	1					
ANR	2001117	Argument	ptr		2000939	0					
ANR	2001118	Identifier	ptr		2000939	0					
ANR	2001119	Argument	end - ptr		2000939	1					
ANR	2001120	AdditiveExpression	end - ptr		2000939	0		-			
ANR	2001121	Identifier	end		2000939	0					
ANR	2001122	Identifier	ptr		2000939	1					
ANR	2001123	ReturnStatement	"return _php_math_longtobase ( arg , base ) ;"	941:1:21936:21974	2000939	4	True				
ANR	2001124	CallExpression	"_php_math_longtobase ( arg , base )"		2000939	0					
ANR	2001125	Callee	_php_math_longtobase		2000939	0					
ANR	2001126	Identifier	_php_math_longtobase		2000939	0					
ANR	2001127	ArgumentList	arg		2000939	1					
ANR	2001128	Argument	arg		2000939	0					
ANR	2001129	Identifier	arg		2000939	0					
ANR	2001130	Argument	base		2000939	1					
ANR	2001131	Identifier	base		2000939	0					
ANR	2001132	ReturnType	PHPAPI char *		2000939	1					
ANR	2001133	Identifier	_php_math_zvaltobase		2000939	2					
ANR	2001134	ParameterList	"zval * arg , int base TSRMLS_DC"		2000939	3					
ANR	2001135	Parameter	zval * arg	911:35:21149:21157	2000939	0	True				
ANR	2001136	ParameterType	zval *		2000939	0					
ANR	2001137	Identifier	arg		2000939	1					
ANR	2001138	Parameter	int base TSRMLS_DC	911:46:21160:21177	2000939	1	True				
ANR	2001139	ParameterType	int base		2000939	0					
ANR	2001140	Identifier	TSRMLS_DC		2000939	1					
ANR	2001141	CFGEntryNode	ENTRY		2000939		True				
ANR	2001142	CFGExitNode	EXIT		2000939		True				
ANR	2001143	Symbol	fabs		2000939						
ANR	2001144	Symbol	* digits		2000939						
ANR	2001145	Symbol	* -- ptr		2000939						
ANR	2001146	Symbol	HUGE_VAL		2000939						
ANR	2001147	Symbol	Z_TYPE_P		2000939						
ANR	2001148	Symbol	fmod		2000939						
ANR	2001149	Symbol	* fmod		2000939						
ANR	2001150	Symbol	_php_math_longtobase		2000939						
ANR	2001151	Symbol	TSRMLS_DC		2000939						
ANR	2001152	Symbol	Z_DVAL_P		2000939						
ANR	2001153	Symbol	ptr		2000939						
ANR	2001154	Symbol	fvalue		2000939						
ANR	2001155	Symbol	buf		2000939						
ANR	2001156	Symbol	estrndup		2000939						
ANR	2001157	Symbol	IS_LONG		2000939						
ANR	2001158	Symbol	arg		2000939						
ANR	2001159	Symbol	STR_EMPTY_ALLOC		2000939						
ANR	2001160	Symbol	* ptr		2000939						
ANR	2001161	Symbol	IS_DOUBLE		2000939						
ANR	2001162	Symbol	digits		2000939						
ANR	2001163	Symbol	end		2000939						
ANR	2001164	Symbol	floor		2000939						
ANR	2001165	Symbol	base		2000939						
ANR	2001166	DeclStmt									
ANR	2001167	Decl							zval	zval * *	arg
ANR	2001168	DeclStmt									
ANR	2001169	Decl							zval	zval * *	arg
ANR	2001170	DeclStmt									
ANR	2001171	Decl							zval	zval * *	arg
ANR	2001172	DeclStmt									
ANR	2001173	Decl							zval	zval * *	arg
ANR	2001174	DeclStmt									
ANR	2001175	Decl							char	char *	result
ANR	2001176	DeclStmt									
ANR	2001177	Decl							zval	zval * *	arg
ANR	2001178	DeclStmt									
ANR	2001179	Decl							char	char *	result
ANR	2001180	DeclStmt									
ANR	2001181	Decl							zval	zval * *	arg
ANR	2001182	DeclStmt									
ANR	2001183	Decl							char	char *	result
ANR	2001184	DeclStmt									
ANR	2001185	Decl							zval	zval * *	number
ANR	2001186	Decl							zval	zval	temp
ANR	2001187	DeclStmt									
ANR	2001188	Decl							long	long	frombase
ANR	2001189	Decl							long	long	tobase
ANR	2001190	DeclStmt									
ANR	2001191	Decl							char	char *	result
ANR	2001192	Function	_php_math_number_format	1073:0:25075:25245							
ANR	2001193	FunctionDef	"_php_math_number_format (double d , int dec , char dec_point , char thousand_sep)"		2001192	0					
ANR	2001194	CompoundStatement		1074:0:25166:25245	2001192	0					
ANR	2001195	ReturnStatement	"return _php_math_number_format_ex ( d , dec , & dec_point , 1 , & thousand_sep , 1 ) ;"	1075:1:25169:25243	2001192	0	True				
ANR	2001196	CallExpression	"_php_math_number_format_ex ( d , dec , & dec_point , 1 , & thousand_sep , 1 )"		2001192	0					
ANR	2001197	Callee	_php_math_number_format_ex		2001192	0					
ANR	2001198	Identifier	_php_math_number_format_ex		2001192	0					
ANR	2001199	ArgumentList	d		2001192	1					
ANR	2001200	Argument	d		2001192	0					
ANR	2001201	Identifier	d		2001192	0					
ANR	2001202	Argument	dec		2001192	1					
ANR	2001203	Identifier	dec		2001192	0					
ANR	2001204	Argument	& dec_point		2001192	2					
ANR	2001205	UnaryOperationExpression	& dec_point		2001192	0					
ANR	2001206	UnaryOperator	&		2001192	0					
ANR	2001207	Identifier	dec_point		2001192	1					
ANR	2001208	Argument	1		2001192	3					
ANR	2001209	PrimaryExpression	1		2001192	0					
ANR	2001210	Argument	& thousand_sep		2001192	4					
ANR	2001211	UnaryOperationExpression	& thousand_sep		2001192	0					
ANR	2001212	UnaryOperator	&		2001192	0					
ANR	2001213	Identifier	thousand_sep		2001192	1					
ANR	2001214	Argument	1		2001192	5					
ANR	2001215	PrimaryExpression	1		2001192	0					
ANR	2001216	ReturnType	PHPAPI char *		2001192	1					
ANR	2001217	Identifier	_php_math_number_format		2001192	2					
ANR	2001218	ParameterList	"double d , int dec , char dec_point , char thousand_sep"		2001192	3					
ANR	2001219	Parameter	double d	1073:37:25112:25119	2001192	0	True				
ANR	2001220	ParameterType	double		2001192	0					
ANR	2001221	Identifier	d		2001192	1					
ANR	2001222	Parameter	int dec	1073:47:25122:25128	2001192	1	True				
ANR	2001223	ParameterType	int		2001192	0					
ANR	2001224	Identifier	dec		2001192	1					
ANR	2001225	Parameter	char dec_point	1073:56:25131:25144	2001192	2	True				
ANR	2001226	ParameterType	char		2001192	0					
ANR	2001227	Identifier	dec_point		2001192	1					
ANR	2001228	Parameter	char thousand_sep	1073:72:25147:25163	2001192	3	True				
ANR	2001229	ParameterType	char		2001192	0					
ANR	2001230	Identifier	thousand_sep		2001192	1					
ANR	2001231	CFGEntryNode	ENTRY		2001192		True				
ANR	2001232	CFGExitNode	EXIT		2001192		True				
ANR	2001233	Symbol	thousand_sep		2001192						
ANR	2001234	Symbol	_php_math_number_format_ex		2001192						
ANR	2001235	Symbol	dec		2001192						
ANR	2001236	Symbol	d		2001192						
ANR	2001237	Symbol	dec_point		2001192						
ANR	2001238	Symbol	& thousand_sep		2001192						
ANR	2001239	Symbol	& dec_point		2001192						
ANR	2001240	Function	_php_math_number_format_ex_len	1078:0:25248:27802							
ANR	2001241	FunctionDef	"_php_math_number_format_ex_len (double d , int dec , char * dec_point , size_t dec_point_len , char * thousand_sep , size_t thousand_sep_len , size_t * result_len)"		2001240	0					
ANR	2001242	CompoundStatement		1081:0:25419:27802	2001240	0					
ANR	2001243	IdentifierDeclStatement	"char * tmpbuf = NULL , * resbuf ;"	1082:1:25422:25450	2001240	0	True				
ANR	2001244	IdentifierDecl	* tmpbuf = NULL		2001240	0					
ANR	2001245	IdentifierDeclType	char *		2001240	0					
ANR	2001246	Identifier	tmpbuf		2001240	1					
ANR	2001247	AssignmentExpression	* tmpbuf = NULL		2001240	2		=			
ANR	2001248	Identifier	NULL		2001240	0					
ANR	2001249	Identifier	NULL		2001240	1					
ANR	2001250	IdentifierDecl	* resbuf		2001240	1					
ANR	2001251	IdentifierDeclType	char *		2001240	0					
ANR	2001252	Identifier	resbuf		2001240	1					
ANR	2001253	IdentifierDeclStatement	"char * s , * t ;"	1083:1:25453:25464	2001240	1	True				
ANR	2001254	IdentifierDecl	* s		2001240	0					
ANR	2001255	IdentifierDeclType	char *		2001240	0					
ANR	2001256	Identifier	s		2001240	1					
ANR	2001257	IdentifierDecl	* t		2001240	1					
ANR	2001258	IdentifierDeclType	char *		2001240	0					
ANR	2001259	Identifier	t		2001240	1					
ANR	2001260	IdentifierDeclStatement	char * dp ;	1084:1:25489:25497	2001240	2	True				
ANR	2001261	IdentifierDecl	* dp		2001240	0					
ANR	2001262	IdentifierDeclType	char *		2001240	0					
ANR	2001263	Identifier	dp		2001240	1					
ANR	2001264	IdentifierDeclStatement	size_t integral ;	1085:1:25500:25515	2001240	3	True				
ANR	2001265	IdentifierDecl	integral		2001240	0					
ANR	2001266	IdentifierDeclType	size_t		2001240	0					
ANR	2001267	Identifier	integral		2001240	1					
ANR	2001268	IdentifierDeclStatement	"size_t tmplen , reslen = 0 ;"	1086:1:25518:25541	2001240	4	True				
ANR	2001269	IdentifierDecl	tmplen		2001240	0					
ANR	2001270	IdentifierDeclType	size_t		2001240	0					
ANR	2001271	Identifier	tmplen		2001240	1					
ANR	2001272	IdentifierDecl	reslen = 0		2001240	1					
ANR	2001273	IdentifierDeclType	size_t		2001240	0					
ANR	2001274	Identifier	reslen		2001240	1					
ANR	2001275	AssignmentExpression	reslen = 0		2001240	2		=			
ANR	2001276	Identifier	reslen		2001240	0					
ANR	2001277	PrimaryExpression	0		2001240	1					
ANR	2001278	IdentifierDeclStatement	int count = 0 ;	1087:1:25544:25555	2001240	5	True				
ANR	2001279	IdentifierDecl	count = 0		2001240	0					
ANR	2001280	IdentifierDeclType	int		2001240	0					
ANR	2001281	Identifier	count		2001240	1					
ANR	2001282	AssignmentExpression	count = 0		2001240	2		=			
ANR	2001283	Identifier	count		2001240	0					
ANR	2001284	PrimaryExpression	0		2001240	1					
ANR	2001285	IdentifierDeclStatement	int is_negative = 0 ;	1088:1:25558:25575	2001240	6	True				
ANR	2001286	IdentifierDecl	is_negative = 0		2001240	0					
ANR	2001287	IdentifierDeclType	int		2001240	0					
ANR	2001288	Identifier	is_negative		2001240	1					
ANR	2001289	AssignmentExpression	is_negative = 0		2001240	2		=			
ANR	2001290	Identifier	is_negative		2001240	0					
ANR	2001291	PrimaryExpression	0		2001240	1					
ANR	2001292	IfStatement	if ( d < 0 )		2001240	7					
ANR	2001293	Condition	d < 0	1090:5:25583:25587	2001240	0	True				
ANR	2001294	RelationalExpression	d < 0		2001240	0		<			
ANR	2001295	Identifier	d		2001240	0					
ANR	2001296	PrimaryExpression	0		2001240	1					
ANR	2001297	CompoundStatement		10:12:170:170	2001240	1					
ANR	2001298	ExpressionStatement	is_negative = 1	1091:2:25594:25609	2001240	0	True				
ANR	2001299	AssignmentExpression	is_negative = 1		2001240	0		=			
ANR	2001300	Identifier	is_negative		2001240	0					
ANR	2001301	PrimaryExpression	1		2001240	1					
ANR	2001302	ExpressionStatement	d = - d	1092:2:25613:25619	2001240	1	True				
ANR	2001303	AssignmentExpression	d = - d		2001240	0		=			
ANR	2001304	Identifier	d		2001240	0					
ANR	2001305	UnaryOperationExpression	- d		2001240	1					
ANR	2001306	UnaryOperator	-		2001240	0					
ANR	2001307	Identifier	d		2001240	1					
ANR	2001308	ExpressionStatement	"dec = MAX ( 0 , dec )"	1095:1:25626:25643	2001240	8	True				
ANR	2001309	AssignmentExpression	"dec = MAX ( 0 , dec )"		2001240	0		=			
ANR	2001310	Identifier	dec		2001240	0					
ANR	2001311	CallExpression	"MAX ( 0 , dec )"		2001240	1					
ANR	2001312	Callee	MAX		2001240	0					
ANR	2001313	Identifier	MAX		2001240	0					
ANR	2001314	ArgumentList	0		2001240	1					
ANR	2001315	Argument	0		2001240	0					
ANR	2001316	PrimaryExpression	0		2001240	0					
ANR	2001317	Argument	dec		2001240	1					
ANR	2001318	Identifier	dec		2001240	0					
ANR	2001319	ExpressionStatement	"d = _php_math_round ( d , dec , PHP_ROUND_HALF_UP )"	1096:1:25646:25692	2001240	9	True				
ANR	2001320	AssignmentExpression	"d = _php_math_round ( d , dec , PHP_ROUND_HALF_UP )"		2001240	0		=			
ANR	2001321	Identifier	d		2001240	0					
ANR	2001322	CallExpression	"_php_math_round ( d , dec , PHP_ROUND_HALF_UP )"		2001240	1					
ANR	2001323	Callee	_php_math_round		2001240	0					
ANR	2001324	Identifier	_php_math_round		2001240	0					
ANR	2001325	ArgumentList	d		2001240	1					
ANR	2001326	Argument	d		2001240	0					
ANR	2001327	Identifier	d		2001240	0					
ANR	2001328	Argument	dec		2001240	1					
ANR	2001329	Identifier	dec		2001240	0					
ANR	2001330	Argument	PHP_ROUND_HALF_UP		2001240	2					
ANR	2001331	Identifier	PHP_ROUND_HALF_UP		2001240	0					
ANR	2001332	ExpressionStatement	"tmplen = spprintf ( & tmpbuf , 0 , ""%.*F"" , dec , d )"	1098:1:25696:25741	2001240	10	True				
ANR	2001333	AssignmentExpression	"tmplen = spprintf ( & tmpbuf , 0 , ""%.*F"" , dec , d )"		2001240	0		=			
ANR	2001334	Identifier	tmplen		2001240	0					
ANR	2001335	CallExpression	"spprintf ( & tmpbuf , 0 , ""%.*F"" , dec , d )"		2001240	1					
ANR	2001336	Callee	spprintf		2001240	0					
ANR	2001337	Identifier	spprintf		2001240	0					
ANR	2001338	ArgumentList	& tmpbuf		2001240	1					
ANR	2001339	Argument	& tmpbuf		2001240	0					
ANR	2001340	UnaryOperationExpression	& tmpbuf		2001240	0					
ANR	2001341	UnaryOperator	&		2001240	0					
ANR	2001342	Identifier	tmpbuf		2001240	1					
ANR	2001343	Argument	0		2001240	1					
ANR	2001344	PrimaryExpression	0		2001240	0					
ANR	2001345	Argument	"""%.*F"""		2001240	2					
ANR	2001346	PrimaryExpression	"""%.*F"""		2001240	0					
ANR	2001347	Argument	dec		2001240	3					
ANR	2001348	Identifier	dec		2001240	0					
ANR	2001349	Argument	d		2001240	4					
ANR	2001350	Identifier	d		2001240	0					
ANR	2001351	IfStatement	if ( tmpbuf == NULL || ! isdigit ( ( int ) tmpbuf [ 0 ] ) )		2001240	11					
ANR	2001352	Condition	tmpbuf == NULL || ! isdigit ( ( int ) tmpbuf [ 0 ] )	1100:5:25749:25790	2001240	0	True				
ANR	2001353	OrExpression	tmpbuf == NULL || ! isdigit ( ( int ) tmpbuf [ 0 ] )		2001240	0		||			
ANR	2001354	EqualityExpression	tmpbuf == NULL		2001240	0		==			
ANR	2001355	Identifier	tmpbuf		2001240	0					
ANR	2001356	Identifier	NULL		2001240	1					
ANR	2001357	UnaryOperationExpression	! isdigit ( ( int ) tmpbuf [ 0 ] )		2001240	1					
ANR	2001358	UnaryOperator	!		2001240	0					
ANR	2001359	CallExpression	isdigit ( ( int ) tmpbuf [ 0 ] )		2001240	1					
ANR	2001360	Callee	isdigit		2001240	0					
ANR	2001361	Identifier	isdigit		2001240	0					
ANR	2001362	ArgumentList	( int ) tmpbuf [ 0 ]		2001240	1					
ANR	2001363	Argument	( int ) tmpbuf [ 0 ]		2001240	0					
ANR	2001364	CastExpression	( int ) tmpbuf [ 0 ]		2001240	0					
ANR	2001365	CastTarget	int		2001240	0					
ANR	2001366	ArrayIndexing	tmpbuf [ 0 ]		2001240	1					
ANR	2001367	Identifier	tmpbuf		2001240	0					
ANR	2001368	PrimaryExpression	0		2001240	1					
ANR	2001369	CompoundStatement		20:49:373:373	2001240	1					
ANR	2001370	IfStatement	if ( result_len )		2001240	0					
ANR	2001371	Condition	result_len	1101:6:25801:25810	2001240	0	True				
ANR	2001372	Identifier	result_len		2001240	0					
ANR	2001373	CompoundStatement		21:18:393:393	2001240	1					
ANR	2001374	ExpressionStatement	* result_len = tmplen	1102:3:25818:25838	2001240	0	True				
ANR	2001375	AssignmentExpression	* result_len = tmplen		2001240	0		=			
ANR	2001376	UnaryOperationExpression	* result_len		2001240	0					
ANR	2001377	UnaryOperator	*		2001240	0					
ANR	2001378	Identifier	result_len		2001240	1					
ANR	2001379	Identifier	tmplen		2001240	1					
ANR	2001380	ReturnStatement	return tmpbuf ;	1105:2:25847:25860	2001240	1	True				
ANR	2001381	Identifier	tmpbuf		2001240	0					
ANR	2001382	IfStatement	if ( dec )		2001240	12					
ANR	2001383	Condition	dec	1109:5:25910:25912	2001240	0	True				
ANR	2001384	Identifier	dec		2001240	0					
ANR	2001385	CompoundStatement		29:10:495:495	2001240	1					
ANR	2001386	ExpressionStatement	"dp = strpbrk ( tmpbuf , "".,"" )"	1110:2:25919:25945	2001240	0	True				
ANR	2001387	AssignmentExpression	"dp = strpbrk ( tmpbuf , "".,"" )"		2001240	0		=			
ANR	2001388	Identifier	dp		2001240	0					
ANR	2001389	CallExpression	"strpbrk ( tmpbuf , "".,"" )"		2001240	1					
ANR	2001390	Callee	strpbrk		2001240	0					
ANR	2001391	Identifier	strpbrk		2001240	0					
ANR	2001392	ArgumentList	tmpbuf		2001240	1					
ANR	2001393	Argument	tmpbuf		2001240	0					
ANR	2001394	Identifier	tmpbuf		2001240	0					
ANR	2001395	Argument	""".,"""		2001240	1					
ANR	2001396	PrimaryExpression	""".,"""		2001240	0					
ANR	2001397	ElseStatement	else		2001240	0					
ANR	2001398	CompoundStatement		31:8:535:535	2001240	0					
ANR	2001399	ExpressionStatement	dp = NULL	1112:2:25959:25968	2001240	0	True				
ANR	2001400	AssignmentExpression	dp = NULL		2001240	0		=			
ANR	2001401	Identifier	dp		2001240	0					
ANR	2001402	Identifier	NULL		2001240	1					
ANR	2001403	IfStatement	if ( dp )		2001240	13					
ANR	2001404	Condition	dp	1116:5:26028:26029	2001240	0	True				
ANR	2001405	Identifier	dp		2001240	0					
ANR	2001406	CompoundStatement		36:9:612:612	2001240	1					
ANR	2001407	ExpressionStatement	integral = dp - tmpbuf	1117:2:26036:26058	2001240	0	True				
ANR	2001408	AssignmentExpression	integral = dp - tmpbuf		2001240	0		=			
ANR	2001409	Identifier	integral		2001240	0					
ANR	2001410	AdditiveExpression	dp - tmpbuf		2001240	1		-			
ANR	2001411	Identifier	dp		2001240	0					
ANR	2001412	Identifier	tmpbuf		2001240	1					
ANR	2001413	ElseStatement	else		2001240	0					
ANR	2001414	CompoundStatement		38:8:648:648	2001240	0					
ANR	2001415	ExpressionStatement	integral = tmplen	1120:2:26107:26124	2001240	0	True				
ANR	2001416	AssignmentExpression	integral = tmplen		2001240	0		=			
ANR	2001417	Identifier	integral		2001240	0					
ANR	2001418	Identifier	tmplen		2001240	1					
ANR	2001419	IfStatement	if ( thousand_sep )		2001240	14					
ANR	2001420	Condition	thousand_sep	1124:5:26172:26183	2001240	0	True				
ANR	2001421	Identifier	thousand_sep		2001240	0					
ANR	2001422	CompoundStatement		44:19:766:766	2001240	1					
ANR	2001423	IfStatement	if ( integral + thousand_sep_len * ( ( integral - 1 ) / 3 ) < integral )		2001240	0					
ANR	2001424	Condition	integral + thousand_sep_len * ( ( integral - 1 ) / 3 ) < integral	1125:6:26194:26252	2001240	0	True				
ANR	2001425	RelationalExpression	integral + thousand_sep_len * ( ( integral - 1 ) / 3 ) < integral		2001240	0		<			
ANR	2001426	AdditiveExpression	integral + thousand_sep_len * ( ( integral - 1 ) / 3 )		2001240	0		+			
ANR	2001427	Identifier	integral		2001240	0					
ANR	2001428	MultiplicativeExpression	thousand_sep_len * ( ( integral - 1 ) / 3 )		2001240	1		*			
ANR	2001429	Identifier	thousand_sep_len		2001240	0					
ANR	2001430	MultiplicativeExpression	( integral - 1 ) / 3		2001240	1		/			
ANR	2001431	AdditiveExpression	integral - 1		2001240	0		-			
ANR	2001432	Identifier	integral		2001240	0					
ANR	2001433	PrimaryExpression	1		2001240	1					
ANR	2001434	PrimaryExpression	3		2001240	1					
ANR	2001435	Identifier	integral		2001240	1					
ANR	2001436	CompoundStatement		45:67:835:835	2001240	1					
ANR	2001437	ExpressionStatement	"zend_error ( E_ERROR , ""String overflow"" )"	1127:3:26278:26316	2001240	0	True				
ANR	2001438	CallExpression	"zend_error ( E_ERROR , ""String overflow"" )"		2001240	0					
ANR	2001439	Callee	zend_error		2001240	0					
ANR	2001440	Identifier	zend_error		2001240	0					
ANR	2001441	ArgumentList	E_ERROR		2001240	1					
ANR	2001442	Argument	E_ERROR		2001240	0					
ANR	2001443	Identifier	E_ERROR		2001240	0					
ANR	2001444	Argument	"""String overflow"""		2001240	1					
ANR	2001445	PrimaryExpression	"""String overflow"""		2001240	0					
ANR	2001446	ExpressionStatement	integral += thousand_sep_len * ( ( integral - 1 ) / 3 )	1129:2:26324:26373	2001240	1	True				
ANR	2001447	AssignmentExpression	integral += thousand_sep_len * ( ( integral - 1 ) / 3 )		2001240	0		+=			
ANR	2001448	Identifier	integral		2001240	0					
ANR	2001449	MultiplicativeExpression	thousand_sep_len * ( ( integral - 1 ) / 3 )		2001240	1		*			
ANR	2001450	Identifier	thousand_sep_len		2001240	0					
ANR	2001451	MultiplicativeExpression	( integral - 1 ) / 3		2001240	1		/			
ANR	2001452	AdditiveExpression	integral - 1		2001240	0		-			
ANR	2001453	Identifier	integral		2001240	0					
ANR	2001454	PrimaryExpression	1		2001240	1					
ANR	2001455	PrimaryExpression	3		2001240	1					
ANR	2001456	ExpressionStatement	reslen = integral	1132:1:26380:26397	2001240	15	True				
ANR	2001457	AssignmentExpression	reslen = integral		2001240	0		=			
ANR	2001458	Identifier	reslen		2001240	0					
ANR	2001459	Identifier	integral		2001240	1					
ANR	2001460	IfStatement	if ( dec )		2001240	16					
ANR	2001461	Condition	dec	1134:5:26405:26407	2001240	0	True				
ANR	2001462	Identifier	dec		2001240	0					
ANR	2001463	CompoundStatement		54:10:990:990	2001240	1					
ANR	2001464	ExpressionStatement	reslen += dec	1135:2:26414:26427	2001240	0	True				
ANR	2001465	AssignmentExpression	reslen += dec		2001240	0		+=			
ANR	2001466	Identifier	reslen		2001240	0					
ANR	2001467	Identifier	dec		2001240	1					
ANR	2001468	IfStatement	if ( dec_point )		2001240	1					
ANR	2001469	Condition	dec_point	1137:6:26436:26444	2001240	0	True				
ANR	2001470	Identifier	dec_point		2001240	0					
ANR	2001471	CompoundStatement		57:17:1027:1027	2001240	1					
ANR	2001472	IfStatement	if ( reslen + dec_point < dec_point )		2001240	0					
ANR	2001473	Condition	reslen + dec_point < dec_point	1138:7:26456:26485	2001240	0	True				
ANR	2001474	RelationalExpression	reslen + dec_point < dec_point		2001240	0		<			
ANR	2001475	AdditiveExpression	reslen + dec_point		2001240	0		+			
ANR	2001476	Identifier	reslen		2001240	0					
ANR	2001477	Identifier	dec_point		2001240	1					
ANR	2001478	Identifier	dec_point		2001240	1					
ANR	2001479	CompoundStatement		58:39:1068:1068	2001240	1					
ANR	2001480	ExpressionStatement	"zend_error ( E_ERROR , ""String overflow"" )"	1140:4:26513:26551	2001240	0	True				
ANR	2001481	CallExpression	"zend_error ( E_ERROR , ""String overflow"" )"		2001240	0					
ANR	2001482	Callee	zend_error		2001240	0					
ANR	2001483	Identifier	zend_error		2001240	0					
ANR	2001484	ArgumentList	E_ERROR		2001240	1					
ANR	2001485	Argument	E_ERROR		2001240	0					
ANR	2001486	Identifier	E_ERROR		2001240	0					
ANR	2001487	Argument	"""String overflow"""		2001240	1					
ANR	2001488	PrimaryExpression	"""String overflow"""		2001240	0					
ANR	2001489	ExpressionStatement	reslen += dec_point_len	1142:3:26561:26584	2001240	1	True				
ANR	2001490	AssignmentExpression	reslen += dec_point_len		2001240	0		+=			
ANR	2001491	Identifier	reslen		2001240	0					
ANR	2001492	Identifier	dec_point_len		2001240	1					
ANR	2001493	IfStatement	if ( is_negative )		2001240	17					
ANR	2001494	Condition	is_negative	1147:5:26632:26642	2001240	0	True				
ANR	2001495	Identifier	is_negative		2001240	0					
ANR	2001496	CompoundStatement		67:18:1225:1225	2001240	1					
ANR	2001497	ExpressionStatement	reslen ++	1148:2:26649:26657	2001240	0	True				
ANR	2001498	PostIncDecOperationExpression	reslen ++		2001240	0					
ANR	2001499	Identifier	reslen		2001240	0					
ANR	2001500	IncDec	++		2001240	1					
ANR	2001501	ExpressionStatement	resbuf = ( char * ) emalloc ( reslen + 1 )	1150:1:26663:26698	2001240	18	True				
ANR	2001502	AssignmentExpression	resbuf = ( char * ) emalloc ( reslen + 1 )		2001240	0		=			
ANR	2001503	Identifier	resbuf		2001240	0					
ANR	2001504	CastExpression	( char * ) emalloc ( reslen + 1 )		2001240	1					
ANR	2001505	CastTarget	char *		2001240	0					
ANR	2001506	CallExpression	emalloc ( reslen + 1 )		2001240	1					
ANR	2001507	Callee	emalloc		2001240	0					
ANR	2001508	Identifier	emalloc		2001240	0					
ANR	2001509	ArgumentList	reslen + 1		2001240	1					
ANR	2001510	Argument	reslen + 1		2001240	0					
ANR	2001511	AdditiveExpression	reslen + 1		2001240	0		+			
ANR	2001512	Identifier	reslen		2001240	0					
ANR	2001513	PrimaryExpression	1		2001240	1					
ANR	2001514	ExpressionStatement	s = tmpbuf + tmplen - 1	1152:1:26730:26749	2001240	19	True				
ANR	2001515	AssignmentExpression	s = tmpbuf + tmplen - 1		2001240	0		=			
ANR	2001516	Identifier	s		2001240	0					
ANR	2001517	AdditiveExpression	tmpbuf + tmplen - 1		2001240	1		+			
ANR	2001518	Identifier	tmpbuf		2001240	0					
ANR	2001519	AdditiveExpression	tmplen - 1		2001240	1		-			
ANR	2001520	Identifier	tmplen		2001240	0					
ANR	2001521	PrimaryExpression	1		2001240	1					
ANR	2001522	ExpressionStatement	t = resbuf + reslen	1153:1:26752:26769	2001240	20	True				
ANR	2001523	AssignmentExpression	t = resbuf + reslen		2001240	0		=			
ANR	2001524	Identifier	t		2001240	0					
ANR	2001525	AdditiveExpression	resbuf + reslen		2001240	1		+			
ANR	2001526	Identifier	resbuf		2001240	0					
ANR	2001527	Identifier	reslen		2001240	1					
ANR	2001528	ExpressionStatement	* t -- = '\\0'	1154:1:26772:26783	2001240	21	True				
ANR	2001529	AssignmentExpression	* t -- = '\\0'		2001240	0		=			
ANR	2001530	UnaryOperationExpression	* t --		2001240	0					
ANR	2001531	UnaryOperator	*		2001240	0					
ANR	2001532	PostIncDecOperationExpression	t --		2001240	1					
ANR	2001533	Identifier	t		2001240	0					
ANR	2001534	IncDec	--		2001240	1					
ANR	2001535	PrimaryExpression	'\\0'		2001240	1					
ANR	2001536	IfStatement	if ( dec )		2001240	22					
ANR	2001537	Condition	dec	1159:5:26948:26950	2001240	0	True				
ANR	2001538	Identifier	dec		2001240	0					
ANR	2001539	CompoundStatement		81:2:1569:1612	2001240	1					
ANR	2001540	IdentifierDeclStatement	int declen = dp ? s - dp : 0 ;	1160:2:26957:26985	2001240	0	True				
ANR	2001541	IdentifierDecl	declen = dp ? s - dp : 0		2001240	0					
ANR	2001542	IdentifierDeclType	int		2001240	0					
ANR	2001543	Identifier	declen		2001240	1					
ANR	2001544	AssignmentExpression	declen = dp ? s - dp : 0		2001240	2		=			
ANR	2001545	Identifier	declen		2001240	0					
ANR	2001546	ConditionalExpression	dp ? s - dp : 0		2001240	1					
ANR	2001547	Condition	dp		2001240	0					
ANR	2001548	Identifier	dp		2001240	0					
ANR	2001549	AdditiveExpression	s - dp		2001240	1		-			
ANR	2001550	Identifier	s		2001240	0					
ANR	2001551	Identifier	dp		2001240	1					
ANR	2001552	PrimaryExpression	0		2001240	2					
ANR	2001553	IdentifierDeclStatement	int topad = dec > declen ? dec - declen : 0 ;	1161:2:26989:27032	2001240	1	True				
ANR	2001554	IdentifierDecl	topad = dec > declen ? dec - declen : 0		2001240	0					
ANR	2001555	IdentifierDeclType	int		2001240	0					
ANR	2001556	Identifier	topad		2001240	1					
ANR	2001557	AssignmentExpression	topad = dec > declen ? dec - declen : 0		2001240	2		=			
ANR	2001558	Identifier	topad		2001240	0					
ANR	2001559	ConditionalExpression	dec > declen ? dec - declen : 0		2001240	1					
ANR	2001560	Condition	dec > declen		2001240	0					
ANR	2001561	RelationalExpression	dec > declen		2001240	0		>			
ANR	2001562	Identifier	dec		2001240	0					
ANR	2001563	Identifier	declen		2001240	1					
ANR	2001564	AdditiveExpression	dec - declen		2001240	1		-			
ANR	2001565	Identifier	dec		2001240	0					
ANR	2001566	Identifier	declen		2001240	1					
ANR	2001567	PrimaryExpression	0		2001240	2					
ANR	2001568	WhileStatement	while ( topad -- )		2001240	2					
ANR	2001569	Condition	topad --	1164:9:27066:27072	2001240	0	True				
ANR	2001570	PostIncDecOperationExpression	topad --		2001240	0					
ANR	2001571	Identifier	topad		2001240	0					
ANR	2001572	IncDec	--		2001240	1					
ANR	2001573	CompoundStatement		84:18:1655:1655	2001240	1					
ANR	2001574	ExpressionStatement	* t -- = '0'	1165:3:27080:27090	2001240	0	True				
ANR	2001575	AssignmentExpression	* t -- = '0'		2001240	0		=			
ANR	2001576	UnaryOperationExpression	* t --		2001240	0					
ANR	2001577	UnaryOperator	*		2001240	0					
ANR	2001578	PostIncDecOperationExpression	t --		2001240	1					
ANR	2001579	Identifier	t		2001240	0					
ANR	2001580	IncDec	--		2001240	1					
ANR	2001581	PrimaryExpression	'0'		2001240	1					
ANR	2001582	IfStatement	if ( dp )		2001240	3					
ANR	2001583	Condition	dp	1168:6:27103:27104	2001240	0	True				
ANR	2001584	Identifier	dp		2001240	0					
ANR	2001585	CompoundStatement		88:10:1687:1687	2001240	1					
ANR	2001586	ExpressionStatement	s -= declen + 1	1169:3:27112:27127	2001240	0	True				
ANR	2001587	AssignmentExpression	s -= declen + 1		2001240	0		-=			
ANR	2001588	Identifier	s		2001240	0					
ANR	2001589	AdditiveExpression	declen + 1		2001240	1		+			
ANR	2001590	Identifier	declen		2001240	0					
ANR	2001591	PrimaryExpression	1		2001240	1					
ANR	2001592	ExpressionStatement	t -= declen	1170:3:27159:27170	2001240	1	True				
ANR	2001593	AssignmentExpression	t -= declen		2001240	0		-=			
ANR	2001594	Identifier	t		2001240	0					
ANR	2001595	Identifier	declen		2001240	1					
ANR	2001596	ExpressionStatement	"memcpy ( t + 1 , dp + 1 , declen )"	1173:3:27220:27249	2001240	2	True				
ANR	2001597	CallExpression	"memcpy ( t + 1 , dp + 1 , declen )"		2001240	0					
ANR	2001598	Callee	memcpy		2001240	0					
ANR	2001599	Identifier	memcpy		2001240	0					
ANR	2001600	ArgumentList	t + 1		2001240	1					
ANR	2001601	Argument	t + 1		2001240	0					
ANR	2001602	AdditiveExpression	t + 1		2001240	0		+			
ANR	2001603	Identifier	t		2001240	0					
ANR	2001604	PrimaryExpression	1		2001240	1					
ANR	2001605	Argument	dp + 1		2001240	1					
ANR	2001606	AdditiveExpression	dp + 1		2001240	0		+			
ANR	2001607	Identifier	dp		2001240	0					
ANR	2001608	PrimaryExpression	1		2001240	1					
ANR	2001609	Argument	declen		2001240	2					
ANR	2001610	Identifier	declen		2001240	0					
ANR	2001611	IfStatement	if ( dec_point )		2001240	4					
ANR	2001612	Condition	dec_point	1177:6:27288:27296	2001240	0	True				
ANR	2001613	Identifier	dec_point		2001240	0					
ANR	2001614	CompoundStatement		97:17:1879:1879	2001240	1					
ANR	2001615	ExpressionStatement	t -= dec_point_len	1178:3:27304:27322	2001240	0	True				
ANR	2001616	AssignmentExpression	t -= dec_point_len		2001240	0		-=			
ANR	2001617	Identifier	t		2001240	0					
ANR	2001618	Identifier	dec_point_len		2001240	1					
ANR	2001619	ExpressionStatement	"memcpy ( t + 1 , dec_point , dec_point_len )"	1179:3:27327:27366	2001240	1	True				
ANR	2001620	CallExpression	"memcpy ( t + 1 , dec_point , dec_point_len )"		2001240	0					
ANR	2001621	Callee	memcpy		2001240	0					
ANR	2001622	Identifier	memcpy		2001240	0					
ANR	2001623	ArgumentList	t + 1		2001240	1					
ANR	2001624	Argument	t + 1		2001240	0					
ANR	2001625	AdditiveExpression	t + 1		2001240	0		+			
ANR	2001626	Identifier	t		2001240	0					
ANR	2001627	PrimaryExpression	1		2001240	1					
ANR	2001628	Argument	dec_point		2001240	1					
ANR	2001629	Identifier	dec_point		2001240	0					
ANR	2001630	Argument	dec_point_len		2001240	2					
ANR	2001631	Identifier	dec_point_len		2001240	0					
ANR	2001632	WhileStatement	while ( s >= tmpbuf )		2001240	23					
ANR	2001633	Condition	s >= tmpbuf	1185:7:27482:27492	2001240	0	True				
ANR	2001634	RelationalExpression	s >= tmpbuf		2001240	0		>=			
ANR	2001635	Identifier	s		2001240	0					
ANR	2001636	Identifier	tmpbuf		2001240	1					
ANR	2001637	CompoundStatement		105:20:2075:2075	2001240	1					
ANR	2001638	ExpressionStatement	* t -- = * s --	1186:2:27499:27510	2001240	0	True				
ANR	2001639	AssignmentExpression	* t -- = * s --		2001240	0		=			
ANR	2001640	UnaryOperationExpression	* t --		2001240	0					
ANR	2001641	UnaryOperator	*		2001240	0					
ANR	2001642	PostIncDecOperationExpression	t --		2001240	1					
ANR	2001643	Identifier	t		2001240	0					
ANR	2001644	IncDec	--		2001240	1					
ANR	2001645	UnaryOperationExpression	* s --		2001240	1					
ANR	2001646	UnaryOperator	*		2001240	0					
ANR	2001647	PostIncDecOperationExpression	s --		2001240	1					
ANR	2001648	Identifier	s		2001240	0					
ANR	2001649	IncDec	--		2001240	1					
ANR	2001650	IfStatement	if ( thousand_sep && ( ++ count % 3 ) == 0 && s >= tmpbuf )		2001240	1					
ANR	2001651	Condition	thousand_sep && ( ++ count % 3 ) == 0 && s >= tmpbuf	1187:6:27518:27560	2001240	0	True				
ANR	2001652	AndExpression	thousand_sep && ( ++ count % 3 ) == 0 && s >= tmpbuf		2001240	0		&&			
ANR	2001653	Identifier	thousand_sep		2001240	0					
ANR	2001654	AndExpression	( ++ count % 3 ) == 0 && s >= tmpbuf		2001240	1		&&			
ANR	2001655	EqualityExpression	( ++ count % 3 ) == 0		2001240	0		==			
ANR	2001656	MultiplicativeExpression	++ count % 3		2001240	0		%			
ANR	2001657	UnaryExpression	++ count		2001240	0					
ANR	2001658	IncDec	++		2001240	0					
ANR	2001659	Identifier	count		2001240	1					
ANR	2001660	PrimaryExpression	3		2001240	1					
ANR	2001661	PrimaryExpression	0		2001240	1					
ANR	2001662	RelationalExpression	s >= tmpbuf		2001240	1		>=			
ANR	2001663	Identifier	s		2001240	0					
ANR	2001664	Identifier	tmpbuf		2001240	1					
ANR	2001665	CompoundStatement		107:51:2143:2143	2001240	1					
ANR	2001666	ExpressionStatement	t -= thousand_sep_len	1188:3:27568:27589	2001240	0	True				
ANR	2001667	AssignmentExpression	t -= thousand_sep_len		2001240	0		-=			
ANR	2001668	Identifier	t		2001240	0					
ANR	2001669	Identifier	thousand_sep_len		2001240	1					
ANR	2001670	ExpressionStatement	"memcpy ( t + 1 , thousand_sep , thousand_sep_len )"	1189:3:27594:27639	2001240	1	True				
ANR	2001671	CallExpression	"memcpy ( t + 1 , thousand_sep , thousand_sep_len )"		2001240	0					
ANR	2001672	Callee	memcpy		2001240	0					
ANR	2001673	Identifier	memcpy		2001240	0					
ANR	2001674	ArgumentList	t + 1		2001240	1					
ANR	2001675	Argument	t + 1		2001240	0					
ANR	2001676	AdditiveExpression	t + 1		2001240	0		+			
ANR	2001677	Identifier	t		2001240	0					
ANR	2001678	PrimaryExpression	1		2001240	1					
ANR	2001679	Argument	thousand_sep		2001240	1					
ANR	2001680	Identifier	thousand_sep		2001240	0					
ANR	2001681	Argument	thousand_sep_len		2001240	2					
ANR	2001682	Identifier	thousand_sep_len		2001240	0					
ANR	2001683	IfStatement	if ( is_negative )		2001240	24					
ANR	2001684	Condition	is_negative	1194:5:27689:27699	2001240	0	True				
ANR	2001685	Identifier	is_negative		2001240	0					
ANR	2001686	CompoundStatement		114:18:2282:2282	2001240	1					
ANR	2001687	ExpressionStatement	* t -- = '-'	1195:2:27706:27716	2001240	0	True				
ANR	2001688	AssignmentExpression	* t -- = '-'		2001240	0		=			
ANR	2001689	UnaryOperationExpression	* t --		2001240	0					
ANR	2001690	UnaryOperator	*		2001240	0					
ANR	2001691	PostIncDecOperationExpression	t --		2001240	1					
ANR	2001692	Identifier	t		2001240	0					
ANR	2001693	IncDec	--		2001240	1					
ANR	2001694	PrimaryExpression	'-'		2001240	1					
ANR	2001695	ExpressionStatement	efree ( tmpbuf )	1198:1:27723:27736	2001240	25	True				
ANR	2001696	CallExpression	efree ( tmpbuf )		2001240	0					
ANR	2001697	Callee	efree		2001240	0					
ANR	2001698	Identifier	efree		2001240	0					
ANR	2001699	ArgumentList	tmpbuf		2001240	1					
ANR	2001700	Argument	tmpbuf		2001240	0					
ANR	2001701	Identifier	tmpbuf		2001240	0					
ANR	2001702	IfStatement	if ( result_len )		2001240	26					
ANR	2001703	Condition	result_len	1200:5:27744:27753	2001240	0	True				
ANR	2001704	Identifier	result_len		2001240	0					
ANR	2001705	CompoundStatement		120:17:2336:2336	2001240	1					
ANR	2001706	ExpressionStatement	* result_len = reslen	1201:2:27760:27780	2001240	0	True				
ANR	2001707	AssignmentExpression	* result_len = reslen		2001240	0		=			
ANR	2001708	UnaryOperationExpression	* result_len		2001240	0					
ANR	2001709	UnaryOperator	*		2001240	0					
ANR	2001710	Identifier	result_len		2001240	1					
ANR	2001711	Identifier	reslen		2001240	1					
ANR	2001712	ReturnStatement	return resbuf ;	1204:1:27787:27800	2001240	27	True				
ANR	2001713	Identifier	resbuf		2001240	0					
ANR	2001714	ReturnType	static char *		2001240	1					
ANR	2001715	Identifier	_php_math_number_format_ex_len		2001240	2					
ANR	2001716	ParameterList	"double d , int dec , char * dec_point , size_t dec_point_len , char * thousand_sep , size_t thousand_sep_len , size_t * result_len"		2001240	3					
ANR	2001717	Parameter	double d	1078:44:25292:25299	2001240	0	True				
ANR	2001718	ParameterType	double		2001240	0					
ANR	2001719	Identifier	d		2001240	1					
ANR	2001720	Parameter	int dec	1078:54:25302:25308	2001240	1	True				
ANR	2001721	ParameterType	int		2001240	0					
ANR	2001722	Identifier	dec		2001240	1					
ANR	2001723	Parameter	char * dec_point	1078:63:25311:25325	2001240	2	True				
ANR	2001724	ParameterType	char *		2001240	0					
ANR	2001725	Identifier	dec_point		2001240	1					
ANR	2001726	Parameter	size_t dec_point_len	1079:2:25330:25349	2001240	3	True				
ANR	2001727	ParameterType	size_t		2001240	0					
ANR	2001728	Identifier	dec_point_len		2001240	1					
ANR	2001729	Parameter	char * thousand_sep	1079:24:25352:25369	2001240	4	True				
ANR	2001730	ParameterType	char *		2001240	0					
ANR	2001731	Identifier	thousand_sep		2001240	1					
ANR	2001732	Parameter	size_t thousand_sep_len	1079:44:25372:25394	2001240	5	True				
ANR	2001733	ParameterType	size_t		2001240	0					
ANR	2001734	Identifier	thousand_sep_len		2001240	1					
ANR	2001735	Parameter	size_t * result_len	1080:2:25399:25416	2001240	6	True				
ANR	2001736	ParameterType	size_t *		2001240	0					
ANR	2001737	Identifier	result_len		2001240	1					
ANR	2001738	CFGEntryNode	ENTRY		2001240		True				
ANR	2001739	CFGExitNode	EXIT		2001240		True				
ANR	2001740	Symbol	* s --		2001240						
ANR	2001741	Symbol	spprintf		2001240						
ANR	2001742	Symbol	dec		2001240						
ANR	2001743	Symbol	* result_len		2001240						
ANR	2001744	Symbol	MAX		2001240						
ANR	2001745	Symbol	strpbrk		2001240						
ANR	2001746	Symbol	dec_point		2001240						
ANR	2001747	Symbol	dp		2001240						
ANR	2001748	Symbol	emalloc		2001240						
ANR	2001749	Symbol	dec_point_len		2001240						
ANR	2001750	Symbol	integral		2001240						
ANR	2001751	Symbol	tmpbuf		2001240						
ANR	2001752	Symbol	result_len		2001240						
ANR	2001753	Symbol	isdigit		2001240						
ANR	2001754	Symbol	resbuf		2001240						
ANR	2001755	Symbol	thousand_sep_len		2001240						
ANR	2001756	Symbol	* t --		2001240						
ANR	2001757	Symbol	PHP_ROUND_HALF_UP		2001240						
ANR	2001758	Symbol	NULL		2001240						
ANR	2001759	Symbol	d		2001240						
ANR	2001760	Symbol	count		2001240						
ANR	2001761	Symbol	& tmpbuf		2001240						
ANR	2001762	Symbol	* tmpbuf		2001240						
ANR	2001763	Symbol	topad		2001240						
ANR	2001764	Symbol	thousand_sep		2001240						
ANR	2001765	Symbol	declen		2001240						
ANR	2001766	Symbol	s		2001240						
ANR	2001767	Symbol	E_ERROR		2001240						
ANR	2001768	Symbol	t		2001240						
ANR	2001769	Symbol	tmplen		2001240						
ANR	2001770	Symbol	reslen		2001240						
ANR	2001771	Symbol	is_negative		2001240						
ANR	2001772	Symbol	_php_math_round		2001240						
ANR	2001773	Function	_php_math_number_format_ex	1207:0:27805:28067							
ANR	2001774	FunctionDef	"_php_math_number_format_ex (double d , int dec , char * dec_point , size_t dec_point_len , char * thousand_sep , size_t thousand_sep_len)"		2001773	0					
ANR	2001775	CompoundStatement		1209:0:27950:28067	2001773	0					
ANR	2001776	ReturnStatement	"return _php_math_number_format_ex_len ( d , dec , dec_point , dec_point_len , thousand_sep , thousand_sep_len , NULL ) ;"	1210:1:27953:28065	2001773	0	True				
ANR	2001777	CallExpression	"_php_math_number_format_ex_len ( d , dec , dec_point , dec_point_len , thousand_sep , thousand_sep_len , NULL )"		2001773	0					
ANR	2001778	Callee	_php_math_number_format_ex_len		2001773	0					
ANR	2001779	Identifier	_php_math_number_format_ex_len		2001773	0					
ANR	2001780	ArgumentList	d		2001773	1					
ANR	2001781	Argument	d		2001773	0					
ANR	2001782	Identifier	d		2001773	0					
ANR	2001783	Argument	dec		2001773	1					
ANR	2001784	Identifier	dec		2001773	0					
ANR	2001785	Argument	dec_point		2001773	2					
ANR	2001786	Identifier	dec_point		2001773	0					
ANR	2001787	Argument	dec_point_len		2001773	3					
ANR	2001788	Identifier	dec_point_len		2001773	0					
ANR	2001789	Argument	thousand_sep		2001773	4					
ANR	2001790	Identifier	thousand_sep		2001773	0					
ANR	2001791	Argument	thousand_sep_len		2001773	5					
ANR	2001792	Identifier	thousand_sep_len		2001773	0					
ANR	2001793	Argument	NULL		2001773	6					
ANR	2001794	Identifier	NULL		2001773	0					
ANR	2001795	ReturnType	PHPAPI char *		2001773	1					
ANR	2001796	Identifier	_php_math_number_format_ex		2001773	2					
ANR	2001797	ParameterList	"double d , int dec , char * dec_point , size_t dec_point_len , char * thousand_sep , size_t thousand_sep_len"		2001773	3					
ANR	2001798	Parameter	double d	1207:40:27845:27852	2001773	0	True				
ANR	2001799	ParameterType	double		2001773	0					
ANR	2001800	Identifier	d		2001773	1					
ANR	2001801	Parameter	int dec	1207:50:27855:27861	2001773	1	True				
ANR	2001802	ParameterType	int		2001773	0					
ANR	2001803	Identifier	dec		2001773	1					
ANR	2001804	Parameter	char * dec_point	1207:59:27864:27878	2001773	2	True				
ANR	2001805	ParameterType	char *		2001773	0					
ANR	2001806	Identifier	dec_point		2001773	1					
ANR	2001807	Parameter	size_t dec_point_len	1208:2:27883:27902	2001773	3	True				
ANR	2001808	ParameterType	size_t		2001773	0					
ANR	2001809	Identifier	dec_point_len		2001773	1					
ANR	2001810	Parameter	char * thousand_sep	1208:24:27905:27922	2001773	4	True				
ANR	2001811	ParameterType	char *		2001773	0					
ANR	2001812	Identifier	thousand_sep		2001773	1					
ANR	2001813	Parameter	size_t thousand_sep_len	1208:44:27925:27947	2001773	5	True				
ANR	2001814	ParameterType	size_t		2001773	0					
ANR	2001815	Identifier	thousand_sep_len		2001773	1					
ANR	2001816	CFGEntryNode	ENTRY		2001773		True				
ANR	2001817	CFGExitNode	EXIT		2001773		True				
ANR	2001818	Symbol	thousand_sep		2001773						
ANR	2001819	Symbol	thousand_sep_len		2001773						
ANR	2001820	Symbol	dec		2001773						
ANR	2001821	Symbol	NULL		2001773						
ANR	2001822	Symbol	d		2001773						
ANR	2001823	Symbol	dec_point_len		2001773						
ANR	2001824	Symbol	dec_point		2001773						
ANR	2001825	Symbol	_php_math_number_format_ex_len		2001773						
ANR	2001826	DeclStmt									
ANR	2001827	Decl							double	double	num
ANR	2001828	DeclStmt									
ANR	2001829	Decl							long	long	dec
ANR	2001830	DeclStmt									
ANR	2001831	Decl							char	char *	thousand_sep
ANR	2001832	Decl							char	char *	dec_point
ANR	2001833	DeclStmt									
ANR	2001834	Decl							char	char	thousand_sep_chr
ANR	2001835	Decl							char	char	dec_point_chr
ANR	2001836	DeclStmt									
ANR	2001837	Decl							int	int	thousand_sep_len
ANR	2001838	Decl							int	int	dec_point_len
ANR	2001839	DeclStmt									
ANR	2001840	Decl							char	char *	formatted
ANR	2001841	DeclStmt									
ANR	2001842	Decl							size_t	size_t	formatted_len
ANR	2001843	DeclStmt									
ANR	2001844	Decl							double	double	num1
ANR	2001845	Decl							double	double	num2
