command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	91434	File	data/converged/CVE-2017-11142_php-src/Zend_zend_object_handlers.c								
ANR	91435	Function	rebuild_object_properties	66:0:2678:4441							
ANR	91436	FunctionDef	rebuild_object_properties (zend_object * zobj)		91435	0					
ANR	91437	CompoundStatement		67:0:2747:4441	91435	0					
ANR	91438	IfStatement	if ( ! zobj -> properties )		91435	0					
ANR	91439	Condition	! zobj -> properties	68:5:2754:2770	91435	0	True				
ANR	91440	UnaryOperationExpression	! zobj -> properties		91435	0					
ANR	91441	UnaryOperator	!		91435	0					
ANR	91442	PtrMemberAccess	zobj -> properties		91435	1					
ANR	91443	Identifier	zobj		91435	0					
ANR	91444	Identifier	properties		91435	1					
ANR	91445	CompoundStatement		5:2:82:113	91435	1					
ANR	91446	IdentifierDeclStatement	HashPosition pos ;	69:2:2777:2793	91435	0	True				
ANR	91447	IdentifierDecl	pos		91435	0					
ANR	91448	IdentifierDeclType	HashPosition		91435	0					
ANR	91449	Identifier	pos		91435	1					
ANR	91450	IdentifierDeclStatement	zend_property_info * prop_info ;	70:2:2797:2826	91435	1	True				
ANR	91451	IdentifierDecl	* prop_info		91435	0					
ANR	91452	IdentifierDeclType	zend_property_info *		91435	0					
ANR	91453	Identifier	prop_info		91435	1					
ANR	91454	IdentifierDeclStatement	zend_class_entry * ce = zobj -> ce ;	71:2:2830:2861	91435	2	True				
ANR	91455	IdentifierDecl	* ce = zobj -> ce		91435	0					
ANR	91456	IdentifierDeclType	zend_class_entry *		91435	0					
ANR	91457	Identifier	ce		91435	1					
ANR	91458	AssignmentExpression	* ce = zobj -> ce		91435	2		=			
ANR	91459	Identifier	ce		91435	0					
ANR	91460	PtrMemberAccess	zobj -> ce		91435	1					
ANR	91461	Identifier	zobj		91435	0					
ANR	91462	Identifier	ce		91435	1					
ANR	91463	ExpressionStatement	ALLOC_HASHTABLE ( zobj -> properties )	73:2:2866:2899	91435	3	True				
ANR	91464	CallExpression	ALLOC_HASHTABLE ( zobj -> properties )		91435	0					
ANR	91465	Callee	ALLOC_HASHTABLE		91435	0					
ANR	91466	Identifier	ALLOC_HASHTABLE		91435	0					
ANR	91467	ArgumentList	zobj -> properties		91435	1					
ANR	91468	Argument	zobj -> properties		91435	0					
ANR	91469	PtrMemberAccess	zobj -> properties		91435	0					
ANR	91470	Identifier	zobj		91435	0					
ANR	91471	Identifier	properties		91435	1					
ANR	91472	ExpressionStatement	"zend_hash_init ( zobj -> properties , 0 , NULL , ZVAL_PTR_DTOR , 0 )"	74:2:2903:2962	91435	4	True				
ANR	91473	CallExpression	"zend_hash_init ( zobj -> properties , 0 , NULL , ZVAL_PTR_DTOR , 0 )"		91435	0					
ANR	91474	Callee	zend_hash_init		91435	0					
ANR	91475	Identifier	zend_hash_init		91435	0					
ANR	91476	ArgumentList	zobj -> properties		91435	1					
ANR	91477	Argument	zobj -> properties		91435	0					
ANR	91478	PtrMemberAccess	zobj -> properties		91435	0					
ANR	91479	Identifier	zobj		91435	0					
ANR	91480	Identifier	properties		91435	1					
ANR	91481	Argument	0		91435	1					
ANR	91482	PrimaryExpression	0		91435	0					
ANR	91483	Argument	NULL		91435	2					
ANR	91484	Identifier	NULL		91435	0					
ANR	91485	Argument	ZVAL_PTR_DTOR		91435	3					
ANR	91486	Identifier	ZVAL_PTR_DTOR		91435	0					
ANR	91487	Argument	0		91435	4					
ANR	91488	PrimaryExpression	0		91435	0					
ANR	91489	IfStatement	if ( ce -> default_properties_count )		91435	5					
ANR	91490	Condition	ce -> default_properties_count	75:6:2970:2997	91435	0	True				
ANR	91491	PtrMemberAccess	ce -> default_properties_count		91435	0					
ANR	91492	Identifier	ce		91435	0					
ANR	91493	Identifier	default_properties_count		91435	1					
ANR	91494	CompoundStatement		9:36:252:252	91435	1					
ANR	91495	ForStatement	"for ( zend_hash_internal_pointer_reset_ex ( & ce -> properties_info , & pos ) ; zend_hash_get_current_data_ex ( & ce -> properties_info , ( void * * ) & prop_info , & pos ) == SUCCESS ; zend_hash_move_forward_ex ( & ce -> properties_info , & pos ) )"		91435	0					
ANR	91496	ForInit	"zend_hash_internal_pointer_reset_ex ( & ce -> properties_info , & pos ) ;"	76:8:3010:3073	91435	0	True				
ANR	91497	CallExpression	"zend_hash_internal_pointer_reset_ex ( & ce -> properties_info , & pos )"		91435	0					
ANR	91498	Callee	zend_hash_internal_pointer_reset_ex		91435	0					
ANR	91499	Identifier	zend_hash_internal_pointer_reset_ex		91435	0					
ANR	91500	ArgumentList	& ce -> properties_info		91435	1					
ANR	91501	Argument	& ce -> properties_info		91435	0					
ANR	91502	UnaryOperationExpression	& ce -> properties_info		91435	0					
ANR	91503	UnaryOperator	&		91435	0					
ANR	91504	PtrMemberAccess	ce -> properties_info		91435	1					
ANR	91505	Identifier	ce		91435	0					
ANR	91506	Identifier	properties_info		91435	1					
ANR	91507	Argument	& pos		91435	1					
ANR	91508	UnaryOperationExpression	& pos		91435	0					
ANR	91509	UnaryOperator	&		91435	0					
ANR	91510	Identifier	pos		91435	1					
ANR	91511	Condition	"zend_hash_get_current_data_ex ( & ce -> properties_info , ( void * * ) & prop_info , & pos ) == SUCCESS"	77:8:3083:3170	91435	1	True				
ANR	91512	EqualityExpression	"zend_hash_get_current_data_ex ( & ce -> properties_info , ( void * * ) & prop_info , & pos ) == SUCCESS"		91435	0		==			
ANR	91513	CallExpression	"zend_hash_get_current_data_ex ( & ce -> properties_info , ( void * * ) & prop_info , & pos )"		91435	0					
ANR	91514	Callee	zend_hash_get_current_data_ex		91435	0					
ANR	91515	Identifier	zend_hash_get_current_data_ex		91435	0					
ANR	91516	ArgumentList	& ce -> properties_info		91435	1					
ANR	91517	Argument	& ce -> properties_info		91435	0					
ANR	91518	UnaryOperationExpression	& ce -> properties_info		91435	0					
ANR	91519	UnaryOperator	&		91435	0					
ANR	91520	PtrMemberAccess	ce -> properties_info		91435	1					
ANR	91521	Identifier	ce		91435	0					
ANR	91522	Identifier	properties_info		91435	1					
ANR	91523	Argument	( void * * ) & prop_info		91435	1					
ANR	91524	CastExpression	( void * * ) & prop_info		91435	0					
ANR	91525	CastTarget	void * *		91435	0					
ANR	91526	UnaryOperationExpression	& prop_info		91435	1					
ANR	91527	UnaryOperator	&		91435	0					
ANR	91528	Identifier	prop_info		91435	1					
ANR	91529	Argument	& pos		91435	2					
ANR	91530	UnaryOperationExpression	& pos		91435	0					
ANR	91531	UnaryOperator	&		91435	0					
ANR	91532	Identifier	pos		91435	1					
ANR	91533	Identifier	SUCCESS		91435	1					
ANR	91534	CallExpression	"zend_hash_move_forward_ex ( & ce -> properties_info , & pos )"	78:8:3181:3233	91435	2	True				
ANR	91535	Callee	zend_hash_move_forward_ex		91435	0					
ANR	91536	Identifier	zend_hash_move_forward_ex		91435	0					
ANR	91537	ArgumentList	& ce -> properties_info		91435	1					
ANR	91538	Argument	& ce -> properties_info		91435	0					
ANR	91539	UnaryOperationExpression	& ce -> properties_info		91435	0					
ANR	91540	UnaryOperator	&		91435	0					
ANR	91541	PtrMemberAccess	ce -> properties_info		91435	1					
ANR	91542	Identifier	ce		91435	0					
ANR	91543	Identifier	properties_info		91435	1					
ANR	91544	Argument	& pos		91435	1					
ANR	91545	UnaryOperationExpression	& pos		91435	0					
ANR	91546	UnaryOperator	&		91435	0					
ANR	91547	Identifier	pos		91435	1					
ANR	91548	CompoundStatement		12:63:488:488	91435	3					
ANR	91549	IfStatement	if ( ( prop_info -> flags & ZEND_ACC_STATIC ) == 0 && prop_info -> offset >= 0 && zobj -> properties_table [ prop_info -> offset ] )		91435	0					
ANR	91550	Condition	( prop_info -> flags & ZEND_ACC_STATIC ) == 0 && prop_info -> offset >= 0 && zobj -> properties_table [ prop_info -> offset ]	80:8:3281:3408	91435	0	True				
ANR	91551	AndExpression	( prop_info -> flags & ZEND_ACC_STATIC ) == 0 && prop_info -> offset >= 0 && zobj -> properties_table [ prop_info -> offset ]		91435	0		&&			
ANR	91552	EqualityExpression	( prop_info -> flags & ZEND_ACC_STATIC ) == 0		91435	0		==			
ANR	91553	BitAndExpression	prop_info -> flags & ZEND_ACC_STATIC		91435	0		&			
ANR	91554	PtrMemberAccess	prop_info -> flags		91435	0					
ANR	91555	Identifier	prop_info		91435	0					
ANR	91556	Identifier	flags		91435	1					
ANR	91557	Identifier	ZEND_ACC_STATIC		91435	1					
ANR	91558	PrimaryExpression	0		91435	1					
ANR	91559	AndExpression	prop_info -> offset >= 0 && zobj -> properties_table [ prop_info -> offset ]		91435	1		&&			
ANR	91560	RelationalExpression	prop_info -> offset >= 0		91435	0		>=			
ANR	91561	PtrMemberAccess	prop_info -> offset		91435	0					
ANR	91562	Identifier	prop_info		91435	0					
ANR	91563	Identifier	offset		91435	1					
ANR	91564	PrimaryExpression	0		91435	1					
ANR	91565	ArrayIndexing	zobj -> properties_table [ prop_info -> offset ]		91435	1					
ANR	91566	PtrMemberAccess	zobj -> properties_table		91435	0					
ANR	91567	Identifier	zobj		91435	0					
ANR	91568	Identifier	properties_table		91435	1					
ANR	91569	PtrMemberAccess	prop_info -> offset		91435	1					
ANR	91570	Identifier	prop_info		91435	0					
ANR	91571	Identifier	offset		91435	1					
ANR	91572	CompoundStatement		16:51:663:663	91435	1					
ANR	91573	ExpressionStatement	"zend_hash_quick_add ( zobj -> properties , prop_info -> name , prop_info -> name_length + 1 , prop_info -> h , ( void * * ) & zobj -> properties_table [ prop_info -> offset ] , sizeof ( zval * ) , ( void * * ) & zobj -> properties_table [ prop_info -> offset ] )"	83:5:3418:3631	91435	0	True				
ANR	91574	CallExpression	"zend_hash_quick_add ( zobj -> properties , prop_info -> name , prop_info -> name_length + 1 , prop_info -> h , ( void * * ) & zobj -> properties_table [ prop_info -> offset ] , sizeof ( zval * ) , ( void * * ) & zobj -> properties_table [ prop_info -> offset ] )"		91435	0					
ANR	91575	Callee	zend_hash_quick_add		91435	0					
ANR	91576	Identifier	zend_hash_quick_add		91435	0					
ANR	91577	ArgumentList	zobj -> properties		91435	1					
ANR	91578	Argument	zobj -> properties		91435	0					
ANR	91579	PtrMemberAccess	zobj -> properties		91435	0					
ANR	91580	Identifier	zobj		91435	0					
ANR	91581	Identifier	properties		91435	1					
ANR	91582	Argument	prop_info -> name		91435	1					
ANR	91583	PtrMemberAccess	prop_info -> name		91435	0					
ANR	91584	Identifier	prop_info		91435	0					
ANR	91585	Identifier	name		91435	1					
ANR	91586	Argument	prop_info -> name_length + 1		91435	2					
ANR	91587	AdditiveExpression	prop_info -> name_length + 1		91435	0		+			
ANR	91588	PtrMemberAccess	prop_info -> name_length		91435	0					
ANR	91589	Identifier	prop_info		91435	0					
ANR	91590	Identifier	name_length		91435	1					
ANR	91591	PrimaryExpression	1		91435	1					
ANR	91592	Argument	prop_info -> h		91435	3					
ANR	91593	PtrMemberAccess	prop_info -> h		91435	0					
ANR	91594	Identifier	prop_info		91435	0					
ANR	91595	Identifier	h		91435	1					
ANR	91596	Argument	( void * * ) & zobj -> properties_table [ prop_info -> offset ]		91435	4					
ANR	91597	CastExpression	( void * * ) & zobj -> properties_table [ prop_info -> offset ]		91435	0					
ANR	91598	CastTarget	void * *		91435	0					
ANR	91599	UnaryOperationExpression	& zobj -> properties_table [ prop_info -> offset ]		91435	1					
ANR	91600	UnaryOperator	&		91435	0					
ANR	91601	ArrayIndexing	zobj -> properties_table [ prop_info -> offset ]		91435	1					
ANR	91602	PtrMemberAccess	zobj -> properties_table		91435	0					
ANR	91603	Identifier	zobj		91435	0					
ANR	91604	Identifier	properties_table		91435	1					
ANR	91605	PtrMemberAccess	prop_info -> offset		91435	1					
ANR	91606	Identifier	prop_info		91435	0					
ANR	91607	Identifier	offset		91435	1					
ANR	91608	Argument	sizeof ( zval * )		91435	5					
ANR	91609	SizeofExpression	sizeof ( zval * )		91435	0					
ANR	91610	Sizeof	sizeof		91435	0					
ANR	91611	SizeofOperand	zval *		91435	1					
ANR	91612	Argument	( void * * ) & zobj -> properties_table [ prop_info -> offset ]		91435	6					
ANR	91613	CastExpression	( void * * ) & zobj -> properties_table [ prop_info -> offset ]		91435	0					
ANR	91614	CastTarget	void * *		91435	0					
ANR	91615	UnaryOperationExpression	& zobj -> properties_table [ prop_info -> offset ]		91435	1					
ANR	91616	UnaryOperator	&		91435	0					
ANR	91617	ArrayIndexing	zobj -> properties_table [ prop_info -> offset ]		91435	1					
ANR	91618	PtrMemberAccess	zobj -> properties_table		91435	0					
ANR	91619	Identifier	zobj		91435	0					
ANR	91620	Identifier	properties_table		91435	1					
ANR	91621	PtrMemberAccess	prop_info -> offset		91435	1					
ANR	91622	Identifier	prop_info		91435	0					
ANR	91623	Identifier	offset		91435	1					
ANR	91624	WhileStatement	while ( ce -> parent && ce -> parent -> default_properties_count )		91435	1					
ANR	91625	Condition	ce -> parent && ce -> parent -> default_properties_count	86:10:3654:3703	91435	0	True				
ANR	91626	AndExpression	ce -> parent && ce -> parent -> default_properties_count		91435	0		&&			
ANR	91627	PtrMemberAccess	ce -> parent		91435	0					
ANR	91628	Identifier	ce		91435	0					
ANR	91629	Identifier	parent		91435	1					
ANR	91630	PtrMemberAccess	ce -> parent -> default_properties_count		91435	1					
ANR	91631	PtrMemberAccess	ce -> parent		91435	0					
ANR	91632	Identifier	ce		91435	0					
ANR	91633	Identifier	parent		91435	1					
ANR	91634	Identifier	default_properties_count		91435	1					
ANR	91635	CompoundStatement		20:62:958:958	91435	1					
ANR	91636	ExpressionStatement	ce = ce -> parent	87:4:3712:3727	91435	0	True				
ANR	91637	AssignmentExpression	ce = ce -> parent		91435	0		=			
ANR	91638	Identifier	ce		91435	0					
ANR	91639	PtrMemberAccess	ce -> parent		91435	1					
ANR	91640	Identifier	ce		91435	0					
ANR	91641	Identifier	parent		91435	1					
ANR	91642	ForStatement	"for ( zend_hash_internal_pointer_reset_ex ( & ce -> properties_info , & pos ) ; zend_hash_get_current_data_ex ( & ce -> properties_info , ( void * * ) & prop_info , & pos ) == SUCCESS ; zend_hash_move_forward_ex ( & ce -> properties_info , & pos ) )"		91435	1					
ANR	91643	ForInit	"zend_hash_internal_pointer_reset_ex ( & ce -> properties_info , & pos ) ;"	88:9:3738:3801	91435	0	True				
ANR	91644	CallExpression	"zend_hash_internal_pointer_reset_ex ( & ce -> properties_info , & pos )"		91435	0					
ANR	91645	Callee	zend_hash_internal_pointer_reset_ex		91435	0					
ANR	91646	Identifier	zend_hash_internal_pointer_reset_ex		91435	0					
ANR	91647	ArgumentList	& ce -> properties_info		91435	1					
ANR	91648	Argument	& ce -> properties_info		91435	0					
ANR	91649	UnaryOperationExpression	& ce -> properties_info		91435	0					
ANR	91650	UnaryOperator	&		91435	0					
ANR	91651	PtrMemberAccess	ce -> properties_info		91435	1					
ANR	91652	Identifier	ce		91435	0					
ANR	91653	Identifier	properties_info		91435	1					
ANR	91654	Argument	& pos		91435	1					
ANR	91655	UnaryOperationExpression	& pos		91435	0					
ANR	91656	UnaryOperator	&		91435	0					
ANR	91657	Identifier	pos		91435	1					
ANR	91658	Condition	"zend_hash_get_current_data_ex ( & ce -> properties_info , ( void * * ) & prop_info , & pos ) == SUCCESS"	89:9:3812:3899	91435	1	True				
ANR	91659	EqualityExpression	"zend_hash_get_current_data_ex ( & ce -> properties_info , ( void * * ) & prop_info , & pos ) == SUCCESS"		91435	0		==			
ANR	91660	CallExpression	"zend_hash_get_current_data_ex ( & ce -> properties_info , ( void * * ) & prop_info , & pos )"		91435	0					
ANR	91661	Callee	zend_hash_get_current_data_ex		91435	0					
ANR	91662	Identifier	zend_hash_get_current_data_ex		91435	0					
ANR	91663	ArgumentList	& ce -> properties_info		91435	1					
ANR	91664	Argument	& ce -> properties_info		91435	0					
ANR	91665	UnaryOperationExpression	& ce -> properties_info		91435	0					
ANR	91666	UnaryOperator	&		91435	0					
ANR	91667	PtrMemberAccess	ce -> properties_info		91435	1					
ANR	91668	Identifier	ce		91435	0					
ANR	91669	Identifier	properties_info		91435	1					
ANR	91670	Argument	( void * * ) & prop_info		91435	1					
ANR	91671	CastExpression	( void * * ) & prop_info		91435	0					
ANR	91672	CastTarget	void * *		91435	0					
ANR	91673	UnaryOperationExpression	& prop_info		91435	1					
ANR	91674	UnaryOperator	&		91435	0					
ANR	91675	Identifier	prop_info		91435	1					
ANR	91676	Argument	& pos		91435	2					
ANR	91677	UnaryOperationExpression	& pos		91435	0					
ANR	91678	UnaryOperator	&		91435	0					
ANR	91679	Identifier	pos		91435	1					
ANR	91680	Identifier	SUCCESS		91435	1					
ANR	91681	CallExpression	"zend_hash_move_forward_ex ( & ce -> properties_info , & pos )"	90:9:3911:3963	91435	2	True				
ANR	91682	Callee	zend_hash_move_forward_ex		91435	0					
ANR	91683	Identifier	zend_hash_move_forward_ex		91435	0					
ANR	91684	ArgumentList	& ce -> properties_info		91435	1					
ANR	91685	Argument	& ce -> properties_info		91435	0					
ANR	91686	UnaryOperationExpression	& ce -> properties_info		91435	0					
ANR	91687	UnaryOperator	&		91435	0					
ANR	91688	PtrMemberAccess	ce -> properties_info		91435	1					
ANR	91689	Identifier	ce		91435	0					
ANR	91690	Identifier	properties_info		91435	1					
ANR	91691	Argument	& pos		91435	1					
ANR	91692	UnaryOperationExpression	& pos		91435	0					
ANR	91693	UnaryOperator	&		91435	0					
ANR	91694	Identifier	pos		91435	1					
ANR	91695	CompoundStatement		24:64:1218:1218	91435	3					
ANR	91696	IfStatement	if ( prop_info -> ce == ce && ( prop_info -> flags & ZEND_ACC_STATIC ) == 0 && ( prop_info -> flags & ZEND_ACC_PRIVATE ) != 0 && prop_info -> offset >= 0 && zobj -> properties_table [ prop_info -> offset ] )		91435	0					
ANR	91697	Condition	prop_info -> ce == ce && ( prop_info -> flags & ZEND_ACC_STATIC ) == 0 && ( prop_info -> flags & ZEND_ACC_PRIVATE ) != 0 && prop_info -> offset >= 0 && zobj -> properties_table [ prop_info -> offset ]	91:9:3977:4190	91435	0	True				
ANR	91698	AndExpression	prop_info -> ce == ce && ( prop_info -> flags & ZEND_ACC_STATIC ) == 0 && ( prop_info -> flags & ZEND_ACC_PRIVATE ) != 0 && prop_info -> offset >= 0 && zobj -> properties_table [ prop_info -> offset ]		91435	0		&&			
ANR	91699	EqualityExpression	prop_info -> ce == ce		91435	0		==			
ANR	91700	PtrMemberAccess	prop_info -> ce		91435	0					
ANR	91701	Identifier	prop_info		91435	0					
ANR	91702	Identifier	ce		91435	1					
ANR	91703	Identifier	ce		91435	1					
ANR	91704	AndExpression	( prop_info -> flags & ZEND_ACC_STATIC ) == 0 && ( prop_info -> flags & ZEND_ACC_PRIVATE ) != 0 && prop_info -> offset >= 0 && zobj -> properties_table [ prop_info -> offset ]		91435	1		&&			
ANR	91705	EqualityExpression	( prop_info -> flags & ZEND_ACC_STATIC ) == 0		91435	0		==			
ANR	91706	BitAndExpression	prop_info -> flags & ZEND_ACC_STATIC		91435	0		&			
ANR	91707	PtrMemberAccess	prop_info -> flags		91435	0					
ANR	91708	Identifier	prop_info		91435	0					
ANR	91709	Identifier	flags		91435	1					
ANR	91710	Identifier	ZEND_ACC_STATIC		91435	1					
ANR	91711	PrimaryExpression	0		91435	1					
ANR	91712	AndExpression	( prop_info -> flags & ZEND_ACC_PRIVATE ) != 0 && prop_info -> offset >= 0 && zobj -> properties_table [ prop_info -> offset ]		91435	1		&&			
ANR	91713	EqualityExpression	( prop_info -> flags & ZEND_ACC_PRIVATE ) != 0		91435	0		!=			
ANR	91714	BitAndExpression	prop_info -> flags & ZEND_ACC_PRIVATE		91435	0		&			
ANR	91715	PtrMemberAccess	prop_info -> flags		91435	0					
ANR	91716	Identifier	prop_info		91435	0					
ANR	91717	Identifier	flags		91435	1					
ANR	91718	Identifier	ZEND_ACC_PRIVATE		91435	1					
ANR	91719	PrimaryExpression	0		91435	1					
ANR	91720	AndExpression	prop_info -> offset >= 0 && zobj -> properties_table [ prop_info -> offset ]		91435	1		&&			
ANR	91721	RelationalExpression	prop_info -> offset >= 0		91435	0		>=			
ANR	91722	PtrMemberAccess	prop_info -> offset		91435	0					
ANR	91723	Identifier	prop_info		91435	0					
ANR	91724	Identifier	offset		91435	1					
ANR	91725	PrimaryExpression	0		91435	1					
ANR	91726	ArrayIndexing	zobj -> properties_table [ prop_info -> offset ]		91435	1					
ANR	91727	PtrMemberAccess	zobj -> properties_table		91435	0					
ANR	91728	Identifier	zobj		91435	0					
ANR	91729	Identifier	properties_table		91435	1					
ANR	91730	PtrMemberAccess	prop_info -> offset		91435	1					
ANR	91731	Identifier	prop_info		91435	0					
ANR	91732	Identifier	offset		91435	1					
ANR	91733	CompoundStatement		29:49:1445:1445	91435	1					
ANR	91734	ExpressionStatement	"zend_hash_quick_add ( zobj -> properties , prop_info -> name , prop_info -> name_length + 1 , prop_info -> h , ( void * * ) & zobj -> properties_table [ prop_info -> offset ] , sizeof ( zval * ) , ( void * * ) & zobj -> properties_table [ prop_info -> offset ] )"	96:6:4201:4414	91435	0	True				
ANR	91735	CallExpression	"zend_hash_quick_add ( zobj -> properties , prop_info -> name , prop_info -> name_length + 1 , prop_info -> h , ( void * * ) & zobj -> properties_table [ prop_info -> offset ] , sizeof ( zval * ) , ( void * * ) & zobj -> properties_table [ prop_info -> offset ] )"		91435	0					
ANR	91736	Callee	zend_hash_quick_add		91435	0					
ANR	91737	Identifier	zend_hash_quick_add		91435	0					
ANR	91738	ArgumentList	zobj -> properties		91435	1					
ANR	91739	Argument	zobj -> properties		91435	0					
ANR	91740	PtrMemberAccess	zobj -> properties		91435	0					
ANR	91741	Identifier	zobj		91435	0					
ANR	91742	Identifier	properties		91435	1					
ANR	91743	Argument	prop_info -> name		91435	1					
ANR	91744	PtrMemberAccess	prop_info -> name		91435	0					
ANR	91745	Identifier	prop_info		91435	0					
ANR	91746	Identifier	name		91435	1					
ANR	91747	Argument	prop_info -> name_length + 1		91435	2					
ANR	91748	AdditiveExpression	prop_info -> name_length + 1		91435	0		+			
ANR	91749	PtrMemberAccess	prop_info -> name_length		91435	0					
ANR	91750	Identifier	prop_info		91435	0					
ANR	91751	Identifier	name_length		91435	1					
ANR	91752	PrimaryExpression	1		91435	1					
ANR	91753	Argument	prop_info -> h		91435	3					
ANR	91754	PtrMemberAccess	prop_info -> h		91435	0					
ANR	91755	Identifier	prop_info		91435	0					
ANR	91756	Identifier	h		91435	1					
ANR	91757	Argument	( void * * ) & zobj -> properties_table [ prop_info -> offset ]		91435	4					
ANR	91758	CastExpression	( void * * ) & zobj -> properties_table [ prop_info -> offset ]		91435	0					
ANR	91759	CastTarget	void * *		91435	0					
ANR	91760	UnaryOperationExpression	& zobj -> properties_table [ prop_info -> offset ]		91435	1					
ANR	91761	UnaryOperator	&		91435	0					
ANR	91762	ArrayIndexing	zobj -> properties_table [ prop_info -> offset ]		91435	1					
ANR	91763	PtrMemberAccess	zobj -> properties_table		91435	0					
ANR	91764	Identifier	zobj		91435	0					
ANR	91765	Identifier	properties_table		91435	1					
ANR	91766	PtrMemberAccess	prop_info -> offset		91435	1					
ANR	91767	Identifier	prop_info		91435	0					
ANR	91768	Identifier	offset		91435	1					
ANR	91769	Argument	sizeof ( zval * )		91435	5					
ANR	91770	SizeofExpression	sizeof ( zval * )		91435	0					
ANR	91771	Sizeof	sizeof		91435	0					
ANR	91772	SizeofOperand	zval *		91435	1					
ANR	91773	Argument	( void * * ) & zobj -> properties_table [ prop_info -> offset ]		91435	6					
ANR	91774	CastExpression	( void * * ) & zobj -> properties_table [ prop_info -> offset ]		91435	0					
ANR	91775	CastTarget	void * *		91435	0					
ANR	91776	UnaryOperationExpression	& zobj -> properties_table [ prop_info -> offset ]		91435	1					
ANR	91777	UnaryOperator	&		91435	0					
ANR	91778	ArrayIndexing	zobj -> properties_table [ prop_info -> offset ]		91435	1					
ANR	91779	PtrMemberAccess	zobj -> properties_table		91435	0					
ANR	91780	Identifier	zobj		91435	0					
ANR	91781	Identifier	properties_table		91435	1					
ANR	91782	PtrMemberAccess	prop_info -> offset		91435	1					
ANR	91783	Identifier	prop_info		91435	0					
ANR	91784	Identifier	offset		91435	1					
ANR	91785	ReturnType	ZEND_API void		91435	1					
ANR	91786	Identifier	rebuild_object_properties		91435	2					
ANR	91787	ParameterList	zend_object * zobj		91435	3					
ANR	91788	Parameter	zend_object * zobj	66:40:2718:2734	91435	0	True				
ANR	91789	ParameterType	zend_object *		91435	0					
ANR	91790	Identifier	zobj		91435	1					
ANR	91791	CFGEntryNode	ENTRY		91435		True				
ANR	91792	CFGExitNode	EXIT		91435		True				
ANR	91793	Symbol	ce -> default_properties_count		91435						
ANR	91794	Symbol	zend_hash_get_current_data_ex		91435						
ANR	91795	Symbol	zobj		91435						
ANR	91796	Symbol	prop_info -> name		91435						
ANR	91797	Symbol	prop_info -> h		91435						
ANR	91798	Symbol	* * zobj		91435						
ANR	91799	Symbol	* ce		91435						
ANR	91800	Symbol	* * ce		91435						
ANR	91801	Symbol	zobj -> properties_table		91435						
ANR	91802	Symbol	* ce -> parent		91435						
ANR	91803	Symbol	* zobj		91435						
ANR	91804	Symbol	* zobj -> properties_table		91435						
ANR	91805	Symbol	pos		91435						
ANR	91806	Symbol	prop_info -> offset		91435						
ANR	91807	Symbol	zobj -> properties		91435						
ANR	91808	Symbol	ZEND_ACC_STATIC		91435						
ANR	91809	Symbol	* prop_info		91435						
ANR	91810	Symbol	prop_info		91435						
ANR	91811	Symbol	ce		91435						
ANR	91812	Symbol	* * prop_info		91435						
ANR	91813	Symbol	NULL		91435						
ANR	91814	Symbol	SUCCESS		91435						
ANR	91815	Symbol	& prop_info		91435						
ANR	91816	Symbol	prop_info -> name_length		91435						
ANR	91817	Symbol	ce -> parent		91435						
ANR	91818	Symbol	zobj -> ce		91435						
ANR	91819	Symbol	ZVAL_PTR_DTOR		91435						
ANR	91820	Symbol	ZEND_ACC_PRIVATE		91435						
ANR	91821	Symbol	prop_info -> flags		91435						
ANR	91822	Symbol	& ce -> properties_info		91435						
ANR	91823	Symbol	prop_info -> ce		91435						
ANR	91824	Symbol	ce -> parent -> default_properties_count		91435						
ANR	91825	Symbol	* prop_info -> offset		91435						
ANR	91826	Symbol	& pos		91435						
ANR	91827	DeclStmt									
ANR	91828	Decl							zend_object	zend_object *	zobj
ANR	91829	DeclStmt									
ANR	91830	Decl							zend_object	zend_object *	zobj
ANR	91831	DeclStmt									
ANR	91832	Decl							zend_class_entry	zend_class_entry *	ce
ANR	91833	DeclStmt									
ANR	91834	Decl							zval	zval *	retval
ANR	91835	DeclStmt									
ANR	91836	Decl							HashTable	HashTable *	ht
ANR	91837	DeclStmt									
ANR	91838	Decl							zval	zval	ret
ANR	91839	DeclStmt									
ANR	91840	Decl							zval	zval *	retval
ANR	91841	DeclStmt									
ANR	91842	Decl							zend_class_entry	zend_class_entry *	ce
ANR	91843	DeclStmt									
ANR	91844	Decl							zval	zval *	retval
ANR	91845	DeclStmt									
ANR	91846	Decl							int	int	result
ANR	91847	DeclStmt									
ANR	91848	Decl							zend_class_entry	zend_class_entry *	ce
ANR	91849	DeclStmt									
ANR	91850	Decl							zend_class_entry	zend_class_entry *	ce
ANR	91851	DeclStmt									
ANR	91852	Decl							zval	zval *	retval
ANR	91853	DeclStmt									
ANR	91854	Decl							zend_class_entry	zend_class_entry *	ce
ANR	91855	Function	is_derived_class	288:0:8788:9081							
ANR	91856	FunctionDef	"is_derived_class (zend_class_entry * child_class , zend_class_entry * parent_class)"		91855	0					
ANR	91857	CompoundStatement		289:0:8914:9081	91855	0					
ANR	91858	ExpressionStatement	child_class = child_class -> parent	290:1:8917:8950	91855	0	True				
ANR	91859	AssignmentExpression	child_class = child_class -> parent		91855	0		=			
ANR	91860	Identifier	child_class		91855	0					
ANR	91861	PtrMemberAccess	child_class -> parent		91855	1					
ANR	91862	Identifier	child_class		91855	0					
ANR	91863	Identifier	parent		91855	1					
ANR	91864	WhileStatement	while ( child_class )		91855	1					
ANR	91865	Condition	child_class	291:8:8960:8970	91855	0	True				
ANR	91866	Identifier	child_class		91855	0					
ANR	91867	CompoundStatement		3:21:58:58	91855	1					
ANR	91868	IfStatement	if ( child_class == parent_class )		91855	0					
ANR	91869	Condition	child_class == parent_class	292:6:8981:9007	91855	0	True				
ANR	91870	EqualityExpression	child_class == parent_class		91855	0		==			
ANR	91871	Identifier	child_class		91855	0					
ANR	91872	Identifier	parent_class		91855	1					
ANR	91873	CompoundStatement		4:35:95:95	91855	1					
ANR	91874	ReturnStatement	return 1 ;	293:3:9015:9023	91855	0	True				
ANR	91875	PrimaryExpression	1		91855	0					
ANR	91876	ExpressionStatement	child_class = child_class -> parent	295:2:9031:9064	91855	1	True				
ANR	91877	AssignmentExpression	child_class = child_class -> parent		91855	0		=			
ANR	91878	Identifier	child_class		91855	0					
ANR	91879	PtrMemberAccess	child_class -> parent		91855	1					
ANR	91880	Identifier	child_class		91855	0					
ANR	91881	Identifier	parent		91855	1					
ANR	91882	ReturnStatement	return 0 ;	298:1:9071:9079	91855	2	True				
ANR	91883	PrimaryExpression	0		91855	0					
ANR	91884	ReturnType	static zend_always_inline zend_bool		91855	1					
ANR	91885	Identifier	is_derived_class		91855	2					
ANR	91886	ParameterList	"zend_class_entry * child_class , zend_class_entry * parent_class"		91855	3					
ANR	91887	Parameter	zend_class_entry * child_class	288:53:8841:8869	91855	0	True				
ANR	91888	ParameterType	zend_class_entry *		91855	0					
ANR	91889	Identifier	child_class		91855	1					
ANR	91890	Parameter	zend_class_entry * parent_class	288:84:8872:8901	91855	1	True				
ANR	91891	ParameterType	zend_class_entry *		91855	0					
ANR	91892	Identifier	parent_class		91855	1					
ANR	91893	CFGEntryNode	ENTRY		91855		True				
ANR	91894	CFGExitNode	EXIT		91855		True				
ANR	91895	Symbol	* child_class		91855						
ANR	91896	Symbol	child_class -> parent		91855						
ANR	91897	Symbol	parent_class		91855						
ANR	91898	Symbol	child_class		91855						
ANR	91899	DeclStmt									
ANR	91900	Decl							zend_property_info	zend_property_info *	property_info
ANR	91901	DeclStmt									
ANR	91902	Decl							zend_property_info	zend_property_info *	scope_property_info
ANR	91903	DeclStmt									
ANR	91904	Decl							zend_bool	zend_bool	denied_access
ANR	91905	DeclStmt									
ANR	91906	Decl							ulong	ulong	h
ANR	91907	Function	zend_get_property_info	387:9:12225:12420							
ANR	91908	FunctionDef	"zend_get_property_info (zend_class_entry * ce , zval * member , int silent TSRMLS_DC)"		91907	0					
ANR	91909	CompoundStatement		388:0:12344:12420	91907	0					
ANR	91910	Statement	return	389:1:12347:12352	91907	0	True				
ANR	91911	Statement	zend_get_property_info_quick	389:8:12354:12381	91907	1	True				
ANR	91912	Statement	(	389:36:12382:12382	91907	2	True				
ANR	91913	Statement	ce	389:37:12383:12384	91907	3	True				
ANR	91914	Statement	","	389:39:12385:12385	91907	4	True				
ANR	91915	Statement	member	389:41:12387:12392	91907	5	True				
ANR	91916	Statement	","	389:47:12393:12393	91907	6	True				
ANR	91917	Statement	silent	389:49:12395:12400	91907	7	True				
ANR	91918	Statement	","	389:55:12401:12401	91907	8	True				
ANR	91919	Statement	NULL	389:57:12403:12406	91907	9	True				
ANR	91920	Statement	TSRMLS_CC	389:62:12408:12416	91907	10	True				
ANR	91921	Statement	)	389:71:12417:12417	91907	11	True				
ANR	91922	ExpressionStatement		389:72:12418:12418	91907	12	True				
ANR	91923	ReturnType	struct _zend_property_info *		91907	1					
ANR	91924	Identifier	zend_get_property_info		91907	2					
ANR	91925	ParameterList	"zend_class_entry * ce , zval * member , int silent TSRMLS_DC"		91907	3					
ANR	91926	Parameter	zend_class_entry * ce	387:60:12276:12295	91907	0	True				
ANR	91927	ParameterType	zend_class_entry *		91907	0					
ANR	91928	Identifier	ce		91907	1					
ANR	91929	Parameter	zval * member	387:82:12298:12309	91907	1	True				
ANR	91930	ParameterType	zval *		91907	0					
ANR	91931	Identifier	member		91907	1					
ANR	91932	Parameter	int silent TSRMLS_DC	387:96:12312:12331	91907	2	True				
ANR	91933	ParameterType	int silent		91907	0					
ANR	91934	Identifier	TSRMLS_DC		91907	1					
ANR	91935	CFGEntryNode	ENTRY		91907		True				
ANR	91936	CFGExitNode	EXIT		91907		True				
ANR	91937	Symbol	ce		91907						
ANR	91938	Symbol	member		91907						
ANR	91939	Symbol	TSRMLS_DC		91907						
ANR	91940	Function	zend_check_property_access	393:0:12433:13456							
ANR	91941	FunctionDef	"zend_check_property_access (zend_object * zobj , const char * prop_info_name , int prop_info_name_len TSRMLS_DC)"		91940	0					
ANR	91942	CompoundStatement		394:0:12564:13456	91940	0					
ANR	91943	IdentifierDeclStatement	zend_property_info * property_info ;	395:1:12567:12600	91940	0	True				
ANR	91944	IdentifierDecl	* property_info		91940	0					
ANR	91945	IdentifierDeclType	zend_property_info *		91940	0					
ANR	91946	Identifier	property_info		91940	1					
ANR	91947	IdentifierDeclStatement	"const char * class_name , * prop_name ;"	396:1:12603:12637	91940	1	True				
ANR	91948	IdentifierDecl	* class_name		91940	0					
ANR	91949	IdentifierDeclType	const char *		91940	0					
ANR	91950	Identifier	class_name		91940	1					
ANR	91951	IdentifierDecl	* prop_name		91940	1					
ANR	91952	IdentifierDeclType	const char *		91940	0					
ANR	91953	Identifier	prop_name		91940	1					
ANR	91954	IdentifierDeclStatement	zval member ;	397:1:12640:12651	91940	2	True				
ANR	91955	IdentifierDecl	member		91940	0					
ANR	91956	IdentifierDeclType	zval		91940	0					
ANR	91957	Identifier	member		91940	1					
ANR	91958	IdentifierDeclStatement	int prop_name_len ;	398:1:12654:12671	91940	3	True				
ANR	91959	IdentifierDecl	prop_name_len		91940	0					
ANR	91960	IdentifierDeclType	int		91940	0					
ANR	91961	Identifier	prop_name_len		91940	1					
ANR	91962	ExpressionStatement	"zend_unmangle_property_name_ex ( prop_info_name , prop_info_name_len , & class_name , & prop_name , & prop_name_len )"	400:1:12675:12782	91940	4	True				
ANR	91963	CallExpression	"zend_unmangle_property_name_ex ( prop_info_name , prop_info_name_len , & class_name , & prop_name , & prop_name_len )"		91940	0					
ANR	91964	Callee	zend_unmangle_property_name_ex		91940	0					
ANR	91965	Identifier	zend_unmangle_property_name_ex		91940	0					
ANR	91966	ArgumentList	prop_info_name		91940	1					
ANR	91967	Argument	prop_info_name		91940	0					
ANR	91968	Identifier	prop_info_name		91940	0					
ANR	91969	Argument	prop_info_name_len		91940	1					
ANR	91970	Identifier	prop_info_name_len		91940	0					
ANR	91971	Argument	& class_name		91940	2					
ANR	91972	UnaryOperationExpression	& class_name		91940	0					
ANR	91973	UnaryOperator	&		91940	0					
ANR	91974	Identifier	class_name		91940	1					
ANR	91975	Argument	& prop_name		91940	3					
ANR	91976	UnaryOperationExpression	& prop_name		91940	0					
ANR	91977	UnaryOperator	&		91940	0					
ANR	91978	Identifier	prop_name		91940	1					
ANR	91979	Argument	& prop_name_len		91940	4					
ANR	91980	UnaryOperationExpression	& prop_name_len		91940	0					
ANR	91981	UnaryOperator	&		91940	0					
ANR	91982	Identifier	prop_name_len		91940	1					
ANR	91983	ExpressionStatement	"ZVAL_STRINGL ( & member , prop_name , prop_name_len , 0 )"	401:1:12785:12835	91940	5	True				
ANR	91984	CallExpression	"ZVAL_STRINGL ( & member , prop_name , prop_name_len , 0 )"		91940	0					
ANR	91985	Callee	ZVAL_STRINGL		91940	0					
ANR	91986	Identifier	ZVAL_STRINGL		91940	0					
ANR	91987	ArgumentList	& member		91940	1					
ANR	91988	Argument	& member		91940	0					
ANR	91989	UnaryOperationExpression	& member		91940	0					
ANR	91990	UnaryOperator	&		91940	0					
ANR	91991	Identifier	member		91940	1					
ANR	91992	Argument	prop_name		91940	1					
ANR	91993	Identifier	prop_name		91940	0					
ANR	91994	Argument	prop_name_len		91940	2					
ANR	91995	Identifier	prop_name_len		91940	0					
ANR	91996	Argument	0		91940	3					
ANR	91997	PrimaryExpression	0		91940	0					
ANR	91998	Statement	property_info	402:1:12838:12850	91940	6	True				
ANR	91999	Statement	=	402:15:12852:12852	91940	7	True				
ANR	92000	Statement	zend_get_property_info_quick	402:17:12854:12881	91940	8	True				
ANR	92001	Statement	(	402:45:12882:12882	91940	9	True				
ANR	92002	Statement	zobj	402:46:12883:12886	91940	10	True				
ANR	92003	Statement	->	402:50:12887:12888	91940	11	True				
ANR	92004	Statement	ce	402:52:12889:12890	91940	12	True				
ANR	92005	Statement	","	402:54:12891:12891	91940	13	True				
ANR	92006	Statement	&	402:56:12893:12893	91940	14	True				
ANR	92007	Statement	member	402:57:12894:12899	91940	15	True				
ANR	92008	Statement	","	402:63:12900:12900	91940	16	True				
ANR	92009	Statement	1	402:65:12902:12902	91940	17	True				
ANR	92010	Statement	","	402:66:12903:12903	91940	18	True				
ANR	92011	Statement	NULL	402:68:12905:12908	91940	19	True				
ANR	92012	Statement	TSRMLS_CC	402:73:12910:12918	91940	20	True				
ANR	92013	Statement	)	402:82:12919:12919	91940	21	True				
ANR	92014	ExpressionStatement		402:83:12920:12920	91940	22	True				
ANR	92015	IfStatement	if ( ! property_info )		91940	23					
ANR	92016	Condition	! property_info	403:5:12927:12940	91940	0	True				
ANR	92017	UnaryOperationExpression	! property_info		91940	0					
ANR	92018	UnaryOperator	!		91940	0					
ANR	92019	Identifier	property_info		91940	1					
ANR	92020	CompoundStatement		10:21:378:378	91940	1					
ANR	92021	ReturnStatement	return FAILURE ;	404:2:12947:12961	91940	0	True				
ANR	92022	Identifier	FAILURE		91940	0					
ANR	92023	IfStatement	if ( class_name && class_name [ 0 ] != '*' )		91940	24					
ANR	92024	Condition	class_name && class_name [ 0 ] != '*'	406:5:12971:13004	91940	0	True				
ANR	92025	AndExpression	class_name && class_name [ 0 ] != '*'		91940	0		&&			
ANR	92026	Identifier	class_name		91940	0					
ANR	92027	EqualityExpression	class_name [ 0 ] != '*'		91940	1		!=			
ANR	92028	ArrayIndexing	class_name [ 0 ]		91940	0					
ANR	92029	Identifier	class_name		91940	0					
ANR	92030	PrimaryExpression	0		91940	1					
ANR	92031	PrimaryExpression	'*'		91940	1					
ANR	92032	CompoundStatement		13:41:442:442	91940	1					
ANR	92033	IfStatement	if ( ! ( property_info -> flags & ZEND_ACC_PRIVATE ) )		91940	0					
ANR	92034	Condition	! ( property_info -> flags & ZEND_ACC_PRIVATE )	407:6:13015:13056	91940	0	True				
ANR	92035	UnaryOperationExpression	! ( property_info -> flags & ZEND_ACC_PRIVATE )		91940	0					
ANR	92036	UnaryOperator	!		91940	0					
ANR	92037	BitAndExpression	property_info -> flags & ZEND_ACC_PRIVATE		91940	1		&			
ANR	92038	PtrMemberAccess	property_info -> flags		91940	0					
ANR	92039	Identifier	property_info		91940	0					
ANR	92040	Identifier	flags		91940	1					
ANR	92041	Identifier	ZEND_ACC_PRIVATE		91940	1					
ANR	92042	CompoundStatement		14:50:494:494	91940	1					
ANR	92043	ReturnStatement	return FAILURE ;	409:3:13154:13168	91940	0	True				
ANR	92044	Identifier	FAILURE		91940	0					
ANR	92045	ElseStatement	else		91940	0					
ANR	92046	IfStatement	"if ( strcmp ( prop_info_name + 1 , property_info -> name + 1 ) )"		91940	0					
ANR	92047	Condition	"strcmp ( prop_info_name + 1 , property_info -> name + 1 )"	410:13:13183:13229	91940	0	True				
ANR	92048	CallExpression	"strcmp ( prop_info_name + 1 , property_info -> name + 1 )"		91940	0					
ANR	92049	Callee	strcmp		91940	0					
ANR	92050	Identifier	strcmp		91940	0					
ANR	92051	ArgumentList	prop_info_name + 1		91940	1					
ANR	92052	Argument	prop_info_name + 1		91940	0					
ANR	92053	AdditiveExpression	prop_info_name + 1		91940	0		+			
ANR	92054	Identifier	prop_info_name		91940	0					
ANR	92055	PrimaryExpression	1		91940	1					
ANR	92056	Argument	property_info -> name + 1		91940	1					
ANR	92057	AdditiveExpression	property_info -> name + 1		91940	0		+			
ANR	92058	PtrMemberAccess	property_info -> name		91940	0					
ANR	92059	Identifier	property_info		91940	0					
ANR	92060	Identifier	name		91940	1					
ANR	92061	PrimaryExpression	1		91940	1					
ANR	92062	CompoundStatement		17:62:667:667	91940	1					
ANR	92063	ReturnStatement	return FAILURE ;	412:3:13341:13355	91940	0	True				
ANR	92064	Identifier	FAILURE		91940	0					
ANR	92065	Statement	return	415:1:13365:13370	91940	25	True				
ANR	92066	Statement	zend_verify_property_access	415:8:13372:13398	91940	26	True				
ANR	92067	Statement	(	415:35:13399:13399	91940	27	True				
ANR	92068	Statement	property_info	415:36:13400:13412	91940	28	True				
ANR	92069	Statement	","	415:49:13413:13413	91940	29	True				
ANR	92070	Statement	zobj	415:51:13415:13418	91940	30	True				
ANR	92071	Statement	->	415:55:13419:13420	91940	31	True				
ANR	92072	Statement	ce	415:57:13421:13422	91940	32	True				
ANR	92073	Statement	TSRMLS_CC	415:60:13424:13432	91940	33	True				
ANR	92074	Statement	)	415:69:13433:13433	91940	34	True				
ANR	92075	Statement	?	415:71:13435:13435	91940	35	True				
ANR	92076	Label	SUCCESS :	415:73:13437:13445	91940	36	True				
ANR	92077	Identifier	SUCCESS		91940	0					
ANR	92078	ExpressionStatement	FAILURE	415:83:13447:13454	91940	37	True				
ANR	92079	Identifier	FAILURE		91940	0					
ANR	92080	ReturnType	ZEND_API int		91940	1					
ANR	92081	Identifier	zend_check_property_access		91940	2					
ANR	92082	ParameterList	"zend_object * zobj , const char * prop_info_name , int prop_info_name_len TSRMLS_DC"		91940	3					
ANR	92083	Parameter	zend_object * zobj	393:40:12473:12489	91940	0	True				
ANR	92084	ParameterType	zend_object *		91940	0					
ANR	92085	Identifier	zobj		91940	1					
ANR	92086	Parameter	const char * prop_info_name	393:59:12492:12517	91940	1	True				
ANR	92087	ParameterType	const char *		91940	0					
ANR	92088	Identifier	prop_info_name		91940	1					
ANR	92089	Parameter	int prop_info_name_len TSRMLS_DC	393:87:12520:12551	91940	2	True				
ANR	92090	ParameterType	int prop_info_name_len		91940	0					
ANR	92091	Identifier	TSRMLS_DC		91940	1					
ANR	92092	CFGEntryNode	ENTRY		91940		True				
ANR	92093	CFGExitNode	EXIT		91940		True				
ANR	92094	Symbol	property_info		91940						
ANR	92095	Symbol	& prop_name_len		91940						
ANR	92096	Symbol	strcmp		91940						
ANR	92097	Symbol	& member		91940						
ANR	92098	Symbol	* class_name		91940						
ANR	92099	Symbol	zobj		91940						
ANR	92100	Symbol	prop_name_len		91940						
ANR	92101	Symbol	& class_name		91940						
ANR	92102	Symbol	property_info -> name		91940						
ANR	92103	Symbol	TSRMLS_DC		91940						
ANR	92104	Symbol	FAILURE		91940						
ANR	92105	Symbol	ZEND_ACC_PRIVATE		91940						
ANR	92106	Symbol	prop_name		91940						
ANR	92107	Symbol	* property_info		91940						
ANR	92108	Symbol	member		91940						
ANR	92109	Symbol	prop_info_name_len		91940						
ANR	92110	Symbol	& prop_name		91940						
ANR	92111	Symbol	prop_info_name		91940						
ANR	92112	Symbol	class_name		91940						
ANR	92113	Symbol	property_info -> flags		91940						
ANR	92114	Function	zend_get_property_guard	419:0:13469:14794							
ANR	92115	FunctionDef	"zend_get_property_guard (zend_object * zobj , zend_property_info * property_info , zval * member , zend_guard * * pguard)"		92114	0					
ANR	92116	CompoundStatement		420:0:13603:14794	92114	0					
ANR	92117	IdentifierDeclStatement	zend_property_info info ;	421:1:13606:13629	92114	0	True				
ANR	92118	IdentifierDecl	info		92114	0					
ANR	92119	IdentifierDeclType	zend_property_info		92114	0					
ANR	92120	Identifier	info		92114	1					
ANR	92121	IdentifierDeclStatement	zend_guard stub ;	422:1:13632:13647	92114	1	True				
ANR	92122	IdentifierDecl	stub		92114	0					
ANR	92123	IdentifierDeclType	zend_guard		92114	0					
ANR	92124	Identifier	stub		92114	1					
ANR	92125	IfStatement	if ( ! property_info )		92114	2					
ANR	92126	Condition	! property_info	424:5:13655:13668	92114	0	True				
ANR	92127	UnaryOperationExpression	! property_info		92114	0					
ANR	92128	UnaryOperator	!		92114	0					
ANR	92129	Identifier	property_info		92114	1					
ANR	92130	CompoundStatement		5:21:67:67	92114	1					
ANR	92131	ExpressionStatement	property_info = & info	425:2:13675:13696	92114	0	True				
ANR	92132	AssignmentExpression	property_info = & info		92114	0		=			
ANR	92133	Identifier	property_info		92114	0					
ANR	92134	UnaryOperationExpression	& info		92114	1					
ANR	92135	UnaryOperator	&		92114	0					
ANR	92136	Identifier	info		92114	1					
ANR	92137	ExpressionStatement	info . name = Z_STRVAL_P ( member )	426:2:13700:13730	92114	1	True				
ANR	92138	AssignmentExpression	info . name = Z_STRVAL_P ( member )		92114	0		=			
ANR	92139	MemberAccess	info . name		92114	0					
ANR	92140	Identifier	info		92114	0					
ANR	92141	Identifier	name		92114	1					
ANR	92142	CallExpression	Z_STRVAL_P ( member )		92114	1					
ANR	92143	Callee	Z_STRVAL_P		92114	0					
ANR	92144	Identifier	Z_STRVAL_P		92114	0					
ANR	92145	ArgumentList	member		92114	1					
ANR	92146	Argument	member		92114	0					
ANR	92147	Identifier	member		92114	0					
ANR	92148	ExpressionStatement	info . name_length = Z_STRLEN_P ( member )	427:2:13734:13771	92114	2	True				
ANR	92149	AssignmentExpression	info . name_length = Z_STRLEN_P ( member )		92114	0		=			
ANR	92150	MemberAccess	info . name_length		92114	0					
ANR	92151	Identifier	info		92114	0					
ANR	92152	Identifier	name_length		92114	1					
ANR	92153	CallExpression	Z_STRLEN_P ( member )		92114	1					
ANR	92154	Callee	Z_STRLEN_P		92114	0					
ANR	92155	Identifier	Z_STRLEN_P		92114	0					
ANR	92156	ArgumentList	member		92114	1					
ANR	92157	Argument	member		92114	0					
ANR	92158	Identifier	member		92114	0					
ANR	92159	ExpressionStatement	"info . h = zend_get_hash_value ( Z_STRVAL_P ( member ) , Z_STRLEN_P ( member ) + 1 )"	428:2:13775:13847	92114	3	True				
ANR	92160	AssignmentExpression	"info . h = zend_get_hash_value ( Z_STRVAL_P ( member ) , Z_STRLEN_P ( member ) + 1 )"		92114	0		=			
ANR	92161	MemberAccess	info . h		92114	0					
ANR	92162	Identifier	info		92114	0					
ANR	92163	Identifier	h		92114	1					
ANR	92164	CallExpression	"zend_get_hash_value ( Z_STRVAL_P ( member ) , Z_STRLEN_P ( member ) + 1 )"		92114	1					
ANR	92165	Callee	zend_get_hash_value		92114	0					
ANR	92166	Identifier	zend_get_hash_value		92114	0					
ANR	92167	ArgumentList	Z_STRVAL_P ( member )		92114	1					
ANR	92168	Argument	Z_STRVAL_P ( member )		92114	0					
ANR	92169	CallExpression	Z_STRVAL_P ( member )		92114	0					
ANR	92170	Callee	Z_STRVAL_P		92114	0					
ANR	92171	Identifier	Z_STRVAL_P		92114	0					
ANR	92172	ArgumentList	member		92114	1					
ANR	92173	Argument	member		92114	0					
ANR	92174	Identifier	member		92114	0					
ANR	92175	Argument	Z_STRLEN_P ( member ) + 1		92114	1					
ANR	92176	AdditiveExpression	Z_STRLEN_P ( member ) + 1		92114	0		+			
ANR	92177	CallExpression	Z_STRLEN_P ( member )		92114	0					
ANR	92178	Callee	Z_STRLEN_P		92114	0					
ANR	92179	Identifier	Z_STRLEN_P		92114	0					
ANR	92180	ArgumentList	member		92114	1					
ANR	92181	Argument	member		92114	0					
ANR	92182	Identifier	member		92114	0					
ANR	92183	PrimaryExpression	1		92114	1					
ANR	92184	ElseStatement	else		92114	0					
ANR	92185	IfStatement	if ( property_info -> name [ 0 ] == '\\0' )		92114	0					
ANR	92186	Condition	property_info -> name [ 0 ] == '\\0'	429:11:13860:13889	92114	0	True				
ANR	92187	EqualityExpression	property_info -> name [ 0 ] == '\\0'		92114	0		==			
ANR	92188	ArrayIndexing	property_info -> name [ 0 ]		92114	0					
ANR	92189	PtrMemberAccess	property_info -> name		92114	0					
ANR	92190	Identifier	property_info		92114	0					
ANR	92191	Identifier	name		92114	1					
ANR	92192	PrimaryExpression	0		92114	1					
ANR	92193	PrimaryExpression	'\\0'		92114	1					
ANR	92194	CompoundStatement		11:2:291:339	92114	1					
ANR	92195	IdentifierDeclStatement	"const char * class_name = NULL , * prop_name = NULL ;"	430:2:13895:13943	92114	0	True				
ANR	92196	IdentifierDecl	* class_name = NULL		92114	0					
ANR	92197	IdentifierDeclType	const char *		92114	0					
ANR	92198	Identifier	class_name		92114	1					
ANR	92199	AssignmentExpression	* class_name = NULL		92114	2		=			
ANR	92200	Identifier	NULL		92114	0					
ANR	92201	Identifier	NULL		92114	1					
ANR	92202	IdentifierDecl	* prop_name = NULL		92114	1					
ANR	92203	IdentifierDeclType	const char *		92114	0					
ANR	92204	Identifier	prop_name		92114	1					
ANR	92205	AssignmentExpression	* prop_name = NULL		92114	2		=			
ANR	92206	Identifier	NULL		92114	0					
ANR	92207	Identifier	NULL		92114	1					
ANR	92208	ExpressionStatement	"zend_unmangle_property_name ( property_info -> name , property_info -> name_length , & class_name , & prop_name )"	431:2:13947:14048	92114	1	True				
ANR	92209	CallExpression	"zend_unmangle_property_name ( property_info -> name , property_info -> name_length , & class_name , & prop_name )"		92114	0					
ANR	92210	Callee	zend_unmangle_property_name		92114	0					
ANR	92211	Identifier	zend_unmangle_property_name		92114	0					
ANR	92212	ArgumentList	property_info -> name		92114	1					
ANR	92213	Argument	property_info -> name		92114	0					
ANR	92214	PtrMemberAccess	property_info -> name		92114	0					
ANR	92215	Identifier	property_info		92114	0					
ANR	92216	Identifier	name		92114	1					
ANR	92217	Argument	property_info -> name_length		92114	1					
ANR	92218	PtrMemberAccess	property_info -> name_length		92114	0					
ANR	92219	Identifier	property_info		92114	0					
ANR	92220	Identifier	name_length		92114	1					
ANR	92221	Argument	& class_name		92114	2					
ANR	92222	UnaryOperationExpression	& class_name		92114	0					
ANR	92223	UnaryOperator	&		92114	0					
ANR	92224	Identifier	class_name		92114	1					
ANR	92225	Argument	& prop_name		92114	3					
ANR	92226	UnaryOperationExpression	& prop_name		92114	0					
ANR	92227	UnaryOperator	&		92114	0					
ANR	92228	Identifier	prop_name		92114	1					
ANR	92229	IfStatement	if ( class_name )		92114	2					
ANR	92230	Condition	class_name	432:5:14055:14064	92114	0	True				
ANR	92231	Identifier	class_name		92114	0					
ANR	92232	CompoundStatement		13:17:463:463	92114	1					
ANR	92233	ExpressionStatement	info . name = prop_name	434:3:14125:14146	92114	0	True				
ANR	92234	AssignmentExpression	info . name = prop_name		92114	0		=			
ANR	92235	MemberAccess	info . name		92114	0					
ANR	92236	Identifier	info		92114	0					
ANR	92237	Identifier	name		92114	1					
ANR	92238	Identifier	prop_name		92114	1					
ANR	92239	ExpressionStatement	info . name_length = strlen ( prop_name )	435:3:14151:14187	92114	1	True				
ANR	92240	AssignmentExpression	info . name_length = strlen ( prop_name )		92114	0		=			
ANR	92241	MemberAccess	info . name_length		92114	0					
ANR	92242	Identifier	info		92114	0					
ANR	92243	Identifier	name_length		92114	1					
ANR	92244	CallExpression	strlen ( prop_name )		92114	1					
ANR	92245	Callee	strlen		92114	0					
ANR	92246	Identifier	strlen		92114	0					
ANR	92247	ArgumentList	prop_name		92114	1					
ANR	92248	Argument	prop_name		92114	0					
ANR	92249	Identifier	prop_name		92114	0					
ANR	92250	ExpressionStatement	"info . h = zend_get_hash_value ( info . name , info . name_length + 1 )"	436:3:14192:14251	92114	2	True				
ANR	92251	AssignmentExpression	"info . h = zend_get_hash_value ( info . name , info . name_length + 1 )"		92114	0		=			
ANR	92252	MemberAccess	info . h		92114	0					
ANR	92253	Identifier	info		92114	0					
ANR	92254	Identifier	h		92114	1					
ANR	92255	CallExpression	"zend_get_hash_value ( info . name , info . name_length + 1 )"		92114	1					
ANR	92256	Callee	zend_get_hash_value		92114	0					
ANR	92257	Identifier	zend_get_hash_value		92114	0					
ANR	92258	ArgumentList	info . name		92114	1					
ANR	92259	Argument	info . name		92114	0					
ANR	92260	MemberAccess	info . name		92114	0					
ANR	92261	Identifier	info		92114	0					
ANR	92262	Identifier	name		92114	1					
ANR	92263	Argument	info . name_length + 1		92114	1					
ANR	92264	AdditiveExpression	info . name_length + 1		92114	0		+			
ANR	92265	MemberAccess	info . name_length		92114	0					
ANR	92266	Identifier	info		92114	0					
ANR	92267	Identifier	name_length		92114	1					
ANR	92268	PrimaryExpression	1		92114	1					
ANR	92269	ExpressionStatement	property_info = & info	437:3:14256:14277	92114	3	True				
ANR	92270	AssignmentExpression	property_info = & info		92114	0		=			
ANR	92271	Identifier	property_info		92114	0					
ANR	92272	UnaryOperationExpression	& info		92114	1					
ANR	92273	UnaryOperator	&		92114	0					
ANR	92274	Identifier	info		92114	1					
ANR	92275	IfStatement	if ( ! zobj -> guards )		92114	3					
ANR	92276	Condition	! zobj -> guards	440:5:14291:14303	92114	0	True				
ANR	92277	UnaryOperationExpression	! zobj -> guards		92114	0					
ANR	92278	UnaryOperator	!		92114	0					
ANR	92279	PtrMemberAccess	zobj -> guards		92114	1					
ANR	92280	Identifier	zobj		92114	0					
ANR	92281	Identifier	guards		92114	1					
ANR	92282	CompoundStatement		21:20:702:702	92114	1					
ANR	92283	ExpressionStatement	ALLOC_HASHTABLE ( zobj -> guards )	441:2:14310:14339	92114	0	True				
ANR	92284	CallExpression	ALLOC_HASHTABLE ( zobj -> guards )		92114	0					
ANR	92285	Callee	ALLOC_HASHTABLE		92114	0					
ANR	92286	Identifier	ALLOC_HASHTABLE		92114	0					
ANR	92287	ArgumentList	zobj -> guards		92114	1					
ANR	92288	Argument	zobj -> guards		92114	0					
ANR	92289	PtrMemberAccess	zobj -> guards		92114	0					
ANR	92290	Identifier	zobj		92114	0					
ANR	92291	Identifier	guards		92114	1					
ANR	92292	ExpressionStatement	"zend_hash_init ( zobj -> guards , 0 , NULL , NULL , 0 )"	442:2:14343:14389	92114	1	True				
ANR	92293	CallExpression	"zend_hash_init ( zobj -> guards , 0 , NULL , NULL , 0 )"		92114	0					
ANR	92294	Callee	zend_hash_init		92114	0					
ANR	92295	Identifier	zend_hash_init		92114	0					
ANR	92296	ArgumentList	zobj -> guards		92114	1					
ANR	92297	Argument	zobj -> guards		92114	0					
ANR	92298	PtrMemberAccess	zobj -> guards		92114	0					
ANR	92299	Identifier	zobj		92114	0					
ANR	92300	Identifier	guards		92114	1					
ANR	92301	Argument	0		92114	1					
ANR	92302	PrimaryExpression	0		92114	0					
ANR	92303	Argument	NULL		92114	2					
ANR	92304	Identifier	NULL		92114	0					
ANR	92305	Argument	NULL		92114	3					
ANR	92306	Identifier	NULL		92114	0					
ANR	92307	Argument	0		92114	4					
ANR	92308	PrimaryExpression	0		92114	0					
ANR	92309	ElseStatement	else		92114	0					
ANR	92310	IfStatement	"if ( zend_hash_quick_find ( zobj -> guards , property_info -> name , property_info -> name_length + 1 , property_info -> h , ( void * * ) pguard ) == SUCCESS )"		92114	0					
ANR	92311	Condition	"zend_hash_quick_find ( zobj -> guards , property_info -> name , property_info -> name_length + 1 , property_info -> h , ( void * * ) pguard ) == SUCCESS"	443:12:14403:14534	92114	0	True				
ANR	92312	EqualityExpression	"zend_hash_quick_find ( zobj -> guards , property_info -> name , property_info -> name_length + 1 , property_info -> h , ( void * * ) pguard ) == SUCCESS"		92114	0		==			
ANR	92313	CallExpression	"zend_hash_quick_find ( zobj -> guards , property_info -> name , property_info -> name_length + 1 , property_info -> h , ( void * * ) pguard )"		92114	0					
ANR	92314	Callee	zend_hash_quick_find		92114	0					
ANR	92315	Identifier	zend_hash_quick_find		92114	0					
ANR	92316	ArgumentList	zobj -> guards		92114	1					
ANR	92317	Argument	zobj -> guards		92114	0					
ANR	92318	PtrMemberAccess	zobj -> guards		92114	0					
ANR	92319	Identifier	zobj		92114	0					
ANR	92320	Identifier	guards		92114	1					
ANR	92321	Argument	property_info -> name		92114	1					
ANR	92322	PtrMemberAccess	property_info -> name		92114	0					
ANR	92323	Identifier	property_info		92114	0					
ANR	92324	Identifier	name		92114	1					
ANR	92325	Argument	property_info -> name_length + 1		92114	2					
ANR	92326	AdditiveExpression	property_info -> name_length + 1		92114	0		+			
ANR	92327	PtrMemberAccess	property_info -> name_length		92114	0					
ANR	92328	Identifier	property_info		92114	0					
ANR	92329	Identifier	name_length		92114	1					
ANR	92330	PrimaryExpression	1		92114	1					
ANR	92331	Argument	property_info -> h		92114	3					
ANR	92332	PtrMemberAccess	property_info -> h		92114	0					
ANR	92333	Identifier	property_info		92114	0					
ANR	92334	Identifier	h		92114	1					
ANR	92335	Argument	( void * * ) pguard		92114	4					
ANR	92336	CastExpression	( void * * ) pguard		92114	0					
ANR	92337	CastTarget	void * *		92114	0					
ANR	92338	Identifier	pguard		92114	1					
ANR	92339	Identifier	SUCCESS		92114	1					
ANR	92340	CompoundStatement		24:146:933:933	92114	1					
ANR	92341	ReturnStatement	return SUCCESS ;	444:2:14541:14555	92114	0	True				
ANR	92342	Identifier	SUCCESS		92114	0					
ANR	92343	ExpressionStatement	stub . in_get = 0	446:1:14561:14576	92114	4	True				
ANR	92344	AssignmentExpression	stub . in_get = 0		92114	0		=			
ANR	92345	MemberAccess	stub . in_get		92114	0					
ANR	92346	Identifier	stub		92114	0					
ANR	92347	Identifier	in_get		92114	1					
ANR	92348	PrimaryExpression	0		92114	1					
ANR	92349	ExpressionStatement	stub . in_set = 0	447:1:14579:14594	92114	5	True				
ANR	92350	AssignmentExpression	stub . in_set = 0		92114	0		=			
ANR	92351	MemberAccess	stub . in_set		92114	0					
ANR	92352	Identifier	stub		92114	0					
ANR	92353	Identifier	in_set		92114	1					
ANR	92354	PrimaryExpression	0		92114	1					
ANR	92355	ExpressionStatement	stub . in_unset = 0	448:1:14597:14614	92114	6	True				
ANR	92356	AssignmentExpression	stub . in_unset = 0		92114	0		=			
ANR	92357	MemberAccess	stub . in_unset		92114	0					
ANR	92358	Identifier	stub		92114	0					
ANR	92359	Identifier	in_unset		92114	1					
ANR	92360	PrimaryExpression	0		92114	1					
ANR	92361	ExpressionStatement	stub . in_isset = 0	449:1:14617:14634	92114	7	True				
ANR	92362	AssignmentExpression	stub . in_isset = 0		92114	0		=			
ANR	92363	MemberAccess	stub . in_isset		92114	0					
ANR	92364	Identifier	stub		92114	0					
ANR	92365	Identifier	in_isset		92114	1					
ANR	92366	PrimaryExpression	0		92114	1					
ANR	92367	ReturnStatement	"return zend_hash_quick_add ( zobj -> guards , property_info -> name , property_info -> name_length + 1 , property_info -> h , ( void * * ) & stub , sizeof ( stub ) , ( void * * ) pguard ) ;"	450:1:14637:14792	92114	8	True				
ANR	92368	CallExpression	"zend_hash_quick_add ( zobj -> guards , property_info -> name , property_info -> name_length + 1 , property_info -> h , ( void * * ) & stub , sizeof ( stub ) , ( void * * ) pguard )"		92114	0					
ANR	92369	Callee	zend_hash_quick_add		92114	0					
ANR	92370	Identifier	zend_hash_quick_add		92114	0					
ANR	92371	ArgumentList	zobj -> guards		92114	1					
ANR	92372	Argument	zobj -> guards		92114	0					
ANR	92373	PtrMemberAccess	zobj -> guards		92114	0					
ANR	92374	Identifier	zobj		92114	0					
ANR	92375	Identifier	guards		92114	1					
ANR	92376	Argument	property_info -> name		92114	1					
ANR	92377	PtrMemberAccess	property_info -> name		92114	0					
ANR	92378	Identifier	property_info		92114	0					
ANR	92379	Identifier	name		92114	1					
ANR	92380	Argument	property_info -> name_length + 1		92114	2					
ANR	92381	AdditiveExpression	property_info -> name_length + 1		92114	0		+			
ANR	92382	PtrMemberAccess	property_info -> name_length		92114	0					
ANR	92383	Identifier	property_info		92114	0					
ANR	92384	Identifier	name_length		92114	1					
ANR	92385	PrimaryExpression	1		92114	1					
ANR	92386	Argument	property_info -> h		92114	3					
ANR	92387	PtrMemberAccess	property_info -> h		92114	0					
ANR	92388	Identifier	property_info		92114	0					
ANR	92389	Identifier	h		92114	1					
ANR	92390	Argument	( void * * ) & stub		92114	4					
ANR	92391	CastExpression	( void * * ) & stub		92114	0					
ANR	92392	CastTarget	void * *		92114	0					
ANR	92393	UnaryOperationExpression	& stub		92114	1					
ANR	92394	UnaryOperator	&		92114	0					
ANR	92395	Identifier	stub		92114	1					
ANR	92396	Argument	sizeof ( stub )		92114	5					
ANR	92397	SizeofExpression	sizeof ( stub )		92114	0					
ANR	92398	Sizeof	sizeof		92114	0					
ANR	92399	SizeofOperand	stub		92114	1					
ANR	92400	Argument	( void * * ) pguard		92114	6					
ANR	92401	CastExpression	( void * * ) pguard		92114	0					
ANR	92402	CastTarget	void * *		92114	0					
ANR	92403	Identifier	pguard		92114	1					
ANR	92404	ReturnType	static int		92114	1					
ANR	92405	Identifier	zend_get_property_guard		92114	2					
ANR	92406	ParameterList	"zend_object * zobj , zend_property_info * property_info , zval * member , zend_guard * * pguard"		92114	3					
ANR	92407	Parameter	zend_object * zobj	419:35:13504:13520	92114	0	True				
ANR	92408	ParameterType	zend_object *		92114	0					
ANR	92409	Identifier	zobj		92114	1					
ANR	92410	Parameter	zend_property_info * property_info	419:54:13523:13555	92114	1	True				
ANR	92411	ParameterType	zend_property_info *		92114	0					
ANR	92412	Identifier	property_info		92114	1					
ANR	92413	Parameter	zval * member	419:89:13558:13569	92114	2	True				
ANR	92414	ParameterType	zval *		92114	0					
ANR	92415	Identifier	member		92114	1					
ANR	92416	Parameter	zend_guard * * pguard	419:103:13572:13590	92114	3	True				
ANR	92417	ParameterType	zend_guard * *		92114	0					
ANR	92418	Identifier	pguard		92114	1					
ANR	92419	CFGEntryNode	ENTRY		92114		True				
ANR	92420	CFGExitNode	EXIT		92114		True				
ANR	92421	Symbol	zobj		92114						
ANR	92422	Symbol	info . h		92114						
ANR	92423	Symbol	zobj -> guards		92114						
ANR	92424	Symbol	& class_name		92114						
ANR	92425	Symbol	* property_info -> name		92114						
ANR	92426	Symbol	property_info -> name_length		92114						
ANR	92427	Symbol	zend_get_hash_value		92114						
ANR	92428	Symbol	info . name		92114						
ANR	92429	Symbol	stub . in_get		92114						
ANR	92430	Symbol	strlen		92114						
ANR	92431	Symbol	* property_info		92114						
ANR	92432	Symbol	zend_hash_quick_find		92114						
ANR	92433	Symbol	* zobj		92114						
ANR	92434	Symbol	zend_hash_quick_add		92114						
ANR	92435	Symbol	member		92114						
ANR	92436	Symbol	stub		92114						
ANR	92437	Symbol	Z_STRLEN_P		92114						
ANR	92438	Symbol	& prop_name		92114						
ANR	92439	Symbol	class_name		92114						
ANR	92440	Symbol	stub . in_set		92114						
ANR	92441	Symbol	info		92114						
ANR	92442	Symbol	property_info		92114						
ANR	92443	Symbol	stub . in_unset		92114						
ANR	92444	Symbol	NULL		92114						
ANR	92445	Symbol	SUCCESS		92114						
ANR	92446	Symbol	& info		92114						
ANR	92447	Symbol	* * property_info		92114						
ANR	92448	Symbol	info . name_length		92114						
ANR	92449	Symbol	property_info -> name		92114						
ANR	92450	Symbol	Z_STRVAL_P		92114						
ANR	92451	Symbol	stub . in_isset		92114						
ANR	92452	Symbol	prop_name		92114						
ANR	92453	Symbol	pguard		92114						
ANR	92454	Symbol	property_info -> h		92114						
ANR	92455	Symbol	& stub		92114						
ANR	92456	DeclStmt									
ANR	92457	Decl							zend_object	zend_object *	zobj
ANR	92458	DeclStmt									
ANR	92459	Decl							zval	zval *	tmp_member
ANR	92460	DeclStmt									
ANR	92461	Decl							zval	zval * *	retval
ANR	92462	DeclStmt									
ANR	92463	Decl							zval	zval *	rv
ANR	92464	DeclStmt									
ANR	92465	Decl							zend_property_info	zend_property_info *	property_info
ANR	92466	DeclStmt									
ANR	92467	Decl							int	int	silent
ANR	92468	DeclStmt									
ANR	92469	Decl							zend_guard	zend_guard *	guard
ANR	92470	DeclStmt									
ANR	92471	Decl							zval	zval *	tmp
ANR	92472	DeclStmt									
ANR	92473	Decl							zend_object	zend_object *	zobj
ANR	92474	DeclStmt									
ANR	92475	Decl							zval	zval *	tmp_member
ANR	92476	DeclStmt									
ANR	92477	Decl							zval	zval * *	variable_ptr
ANR	92478	DeclStmt									
ANR	92479	Decl							zend_property_info	zend_property_info *	property_info
ANR	92480	DeclStmt									
ANR	92481	Decl							zval	zval	garbage
ANR	92482	DeclStmt									
ANR	92483	Decl							zval	zval *	garbage
ANR	92484	DeclStmt									
ANR	92485	Decl							zend_guard	zend_guard *	guard
ANR	92486	Function	zend_std_read_dimension	666:0:21919:22746							
ANR	92487	FunctionDef	"zend_std_read_dimension (zval * object , zval * offset , int type TSRMLS_DC)"		92486	0					
ANR	92488	CompoundStatement		667:0:22007:22746	92486	0					
ANR	92489	IdentifierDeclStatement	zend_class_entry * ce = Z_OBJCE_P ( object ) ;	668:1:22010:22050	92486	0	True				
ANR	92490	IdentifierDecl	* ce = Z_OBJCE_P ( object )		92486	0					
ANR	92491	IdentifierDeclType	zend_class_entry *		92486	0					
ANR	92492	Identifier	ce		92486	1					
ANR	92493	AssignmentExpression	* ce = Z_OBJCE_P ( object )		92486	2		=			
ANR	92494	Identifier	ce		92486	0					
ANR	92495	CallExpression	Z_OBJCE_P ( object )		92486	1					
ANR	92496	Callee	Z_OBJCE_P		92486	0					
ANR	92497	Identifier	Z_OBJCE_P		92486	0					
ANR	92498	ArgumentList	object		92486	1					
ANR	92499	Argument	object		92486	0					
ANR	92500	Identifier	object		92486	0					
ANR	92501	IdentifierDeclStatement	zval * retval ;	669:1:22053:22065	92486	1	True				
ANR	92502	IdentifierDecl	* retval		92486	0					
ANR	92503	IdentifierDeclType	zval *		92486	0					
ANR	92504	Identifier	retval		92486	1					
ANR	92505	Statement	if	671:1:22069:22070	92486	2	True				
ANR	92506	Statement	(	671:4:22072:22072	92486	3	True				
ANR	92507	Statement	EXPECTED	671:5:22073:22080	92486	4	True				
ANR	92508	Statement	(	671:13:22081:22081	92486	5	True				
ANR	92509	Statement	instanceof_function_ex	671:14:22082:22103	92486	6	True				
ANR	92510	Statement	(	671:36:22104:22104	92486	7	True				
ANR	92511	Statement	ce	671:37:22105:22106	92486	8	True				
ANR	92512	Statement	","	671:39:22107:22107	92486	9	True				
ANR	92513	Statement	zend_ce_arrayaccess	671:41:22109:22127	92486	10	True				
ANR	92514	Statement	","	671:60:22128:22128	92486	11	True				
ANR	92515	Statement	1	671:62:22130:22130	92486	12	True				
ANR	92516	Statement	TSRMLS_CC	671:64:22132:22140	92486	13	True				
ANR	92517	Statement	)	671:73:22141:22141	92486	14	True				
ANR	92518	Statement	!=	671:75:22143:22144	92486	15	True				
ANR	92519	Statement	0	671:78:22146:22146	92486	16	True				
ANR	92520	Statement	)	671:79:22147:22147	92486	17	True				
ANR	92521	Statement	)	671:80:22148:22148	92486	18	True				
ANR	92522	CompoundStatement		5:82:142:142	92486	19					
ANR	92523	IfStatement	if ( offset == NULL )		92486	0					
ANR	92524	Condition	offset == NULL	672:5:22157:22170	92486	0	True				
ANR	92525	EqualityExpression	offset == NULL		92486	0		==			
ANR	92526	Identifier	offset		92486	0					
ANR	92527	Identifier	NULL		92486	1					
ANR	92528	CompoundStatement		6:21:165:165	92486	1					
ANR	92529	ExpressionStatement	ALLOC_INIT_ZVAL ( offset )	674:3:22200:22223	92486	0	True				
ANR	92530	CallExpression	ALLOC_INIT_ZVAL ( offset )		92486	0					
ANR	92531	Callee	ALLOC_INIT_ZVAL		92486	0					
ANR	92532	Identifier	ALLOC_INIT_ZVAL		92486	0					
ANR	92533	ArgumentList	offset		92486	1					
ANR	92534	Argument	offset		92486	0					
ANR	92535	Identifier	offset		92486	0					
ANR	92536	ElseStatement	else		92486	0					
ANR	92537	CompoundStatement		9:9:226:226	92486	0					
ANR	92538	ExpressionStatement	SEPARATE_ARG_IF_REF ( offset )	676:3:22239:22266	92486	0	True				
ANR	92539	CallExpression	SEPARATE_ARG_IF_REF ( offset )		92486	0					
ANR	92540	Callee	SEPARATE_ARG_IF_REF		92486	0					
ANR	92541	Identifier	SEPARATE_ARG_IF_REF		92486	0					
ANR	92542	ArgumentList	offset		92486	1					
ANR	92543	Argument	offset		92486	0					
ANR	92544	Identifier	offset		92486	0					
ANR	92545	ExpressionStatement	"zend_call_method_with_1_params ( & object , ce , NULL , ""offsetget"" , & retval , offset )"	678:2:22274:22353	92486	1	True				
ANR	92546	CallExpression	"zend_call_method_with_1_params ( & object , ce , NULL , ""offsetget"" , & retval , offset )"		92486	0					
ANR	92547	Callee	zend_call_method_with_1_params		92486	0					
ANR	92548	Identifier	zend_call_method_with_1_params		92486	0					
ANR	92549	ArgumentList	& object		92486	1					
ANR	92550	Argument	& object		92486	0					
ANR	92551	UnaryOperationExpression	& object		92486	0					
ANR	92552	UnaryOperator	&		92486	0					
ANR	92553	Identifier	object		92486	1					
ANR	92554	Argument	ce		92486	1					
ANR	92555	Identifier	ce		92486	0					
ANR	92556	Argument	NULL		92486	2					
ANR	92557	Identifier	NULL		92486	0					
ANR	92558	Argument	"""offsetget"""		92486	3					
ANR	92559	PrimaryExpression	"""offsetget"""		92486	0					
ANR	92560	Argument	& retval		92486	4					
ANR	92561	UnaryOperationExpression	& retval		92486	0					
ANR	92562	UnaryOperator	&		92486	0					
ANR	92563	Identifier	retval		92486	1					
ANR	92564	Argument	offset		92486	5					
ANR	92565	Identifier	offset		92486	0					
ANR	92566	ExpressionStatement	zval_ptr_dtor ( & offset )	680:2:22358:22380	92486	2	True				
ANR	92567	CallExpression	zval_ptr_dtor ( & offset )		92486	0					
ANR	92568	Callee	zval_ptr_dtor		92486	0					
ANR	92569	Identifier	zval_ptr_dtor		92486	0					
ANR	92570	ArgumentList	& offset		92486	1					
ANR	92571	Argument	& offset		92486	0					
ANR	92572	UnaryOperationExpression	& offset		92486	0					
ANR	92573	UnaryOperator	&		92486	0					
ANR	92574	Identifier	offset		92486	1					
ANR	92575	IfStatement	if ( UNEXPECTED ( ! retval ) )		92486	3					
ANR	92576	Condition	UNEXPECTED ( ! retval )	682:6:22389:22407	92486	0	True				
ANR	92577	CallExpression	UNEXPECTED ( ! retval )		92486	0					
ANR	92578	Callee	UNEXPECTED		92486	0					
ANR	92579	Identifier	UNEXPECTED		92486	0					
ANR	92580	ArgumentList	! retval		92486	1					
ANR	92581	Argument	! retval		92486	0					
ANR	92582	UnaryOperationExpression	! retval		92486	0					
ANR	92583	UnaryOperator	!		92486	0					
ANR	92584	Identifier	retval		92486	1					
ANR	92585	CompoundStatement		16:27:402:402	92486	1					
ANR	92586	IfStatement	if ( UNEXPECTED ( ! EG ( exception ) ) )		92486	0					
ANR	92587	Condition	UNEXPECTED ( ! EG ( exception ) )	683:7:22419:22444	92486	0	True				
ANR	92588	CallExpression	UNEXPECTED ( ! EG ( exception ) )		92486	0					
ANR	92589	Callee	UNEXPECTED		92486	0					
ANR	92590	Identifier	UNEXPECTED		92486	0					
ANR	92591	ArgumentList	! EG ( exception )		92486	1					
ANR	92592	Argument	! EG ( exception )		92486	0					
ANR	92593	UnaryOperationExpression	! EG ( exception )		92486	0					
ANR	92594	UnaryOperator	!		92486	0					
ANR	92595	CallExpression	EG ( exception )		92486	1					
ANR	92596	Callee	EG		92486	0					
ANR	92597	Identifier	EG		92486	0					
ANR	92598	ArgumentList	exception		92486	1					
ANR	92599	Argument	exception		92486	0					
ANR	92600	Identifier	exception		92486	0					
ANR	92601	CompoundStatement		17:35:439:439	92486	1					
ANR	92602	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Undefined offset for object of type %s used as array"" , ce -> name )"	684:4:22453:22547	92486	0	True				
ANR	92603	CallExpression	"zend_error_noreturn ( E_ERROR , ""Undefined offset for object of type %s used as array"" , ce -> name )"		92486	0					
ANR	92604	Callee	zend_error_noreturn		92486	0					
ANR	92605	Identifier	zend_error_noreturn		92486	0					
ANR	92606	ArgumentList	E_ERROR		92486	1					
ANR	92607	Argument	E_ERROR		92486	0					
ANR	92608	Identifier	E_ERROR		92486	0					
ANR	92609	Argument	"""Undefined offset for object of type %s used as array"""		92486	1					
ANR	92610	PrimaryExpression	"""Undefined offset for object of type %s used as array"""		92486	0					
ANR	92611	Argument	ce -> name		92486	2					
ANR	92612	PtrMemberAccess	ce -> name		92486	0					
ANR	92613	Identifier	ce		92486	0					
ANR	92614	Identifier	name		92486	1					
ANR	92615	ReturnStatement	return 0 ;	686:3:22557:22565	92486	1	True				
ANR	92616	PrimaryExpression	0		92486	0					
ANR	92617	ExpressionStatement	Z_DELREF_P ( retval )	690:2:22600:22618	92486	4	True				
ANR	92618	CallExpression	Z_DELREF_P ( retval )		92486	0					
ANR	92619	Callee	Z_DELREF_P		92486	0					
ANR	92620	Identifier	Z_DELREF_P		92486	0					
ANR	92621	ArgumentList	retval		92486	1					
ANR	92622	Argument	retval		92486	0					
ANR	92623	Identifier	retval		92486	0					
ANR	92624	ReturnStatement	return retval ;	692:2:22623:22636	92486	5	True				
ANR	92625	Identifier	retval		92486	0					
ANR	92626	ReturnType	zval *		92486	1					
ANR	92627	Identifier	zend_std_read_dimension		92486	2					
ANR	92628	ParameterList	"zval * object , zval * offset , int type TSRMLS_DC"		92486	3					
ANR	92629	Parameter	zval * object	666:30:21949:21960	92486	0	True				
ANR	92630	ParameterType	zval *		92486	0					
ANR	92631	Identifier	object		92486	1					
ANR	92632	Parameter	zval * offset	666:44:21963:21974	92486	1	True				
ANR	92633	ParameterType	zval *		92486	0					
ANR	92634	Identifier	offset		92486	1					
ANR	92635	Parameter	int type TSRMLS_DC	666:58:21977:21994	92486	2	True				
ANR	92636	ParameterType	int type		92486	0					
ANR	92637	Identifier	TSRMLS_DC		92486	1					
ANR	92638	CFGEntryNode	ENTRY		92486		True				
ANR	92639	CFGExitNode	EXIT		92486		True				
ANR	92640	Symbol	exception		92486						
ANR	92641	Symbol	ce		92486						
ANR	92642	Symbol	EG		92486						
ANR	92643	Symbol	NULL		92486						
ANR	92644	Symbol	offset		92486						
ANR	92645	Symbol	& offset		92486						
ANR	92646	Symbol	* ce		92486						
ANR	92647	Symbol	TSRMLS_DC		92486						
ANR	92648	Symbol	& object		92486						
ANR	92649	Symbol	retval		92486						
ANR	92650	Symbol	UNEXPECTED		92486						
ANR	92651	Symbol	E_ERROR		92486						
ANR	92652	Symbol	Z_OBJCE_P		92486						
ANR	92653	Symbol	& retval		92486						
ANR	92654	Symbol	ce -> name		92486						
ANR	92655	Symbol	object		92486						
ANR	92656	DeclStmt									
ANR	92657	Decl							zend_class_entry	zend_class_entry *	ce
ANR	92658	Function	zend_std_has_dimension	718:0:23301:24193							
ANR	92659	FunctionDef	"zend_std_has_dimension (zval * object , zval * offset , int check_empty TSRMLS_DC)"		92658	0					
ANR	92660	CompoundStatement		719:0:23400:24193	92658	0					
ANR	92661	IdentifierDeclStatement	zend_class_entry * ce = Z_OBJCE_P ( object ) ;	720:1:23403:23443	92658	0	True				
ANR	92662	IdentifierDecl	* ce = Z_OBJCE_P ( object )		92658	0					
ANR	92663	IdentifierDeclType	zend_class_entry *		92658	0					
ANR	92664	Identifier	ce		92658	1					
ANR	92665	AssignmentExpression	* ce = Z_OBJCE_P ( object )		92658	2		=			
ANR	92666	Identifier	ce		92658	0					
ANR	92667	CallExpression	Z_OBJCE_P ( object )		92658	1					
ANR	92668	Callee	Z_OBJCE_P		92658	0					
ANR	92669	Identifier	Z_OBJCE_P		92658	0					
ANR	92670	ArgumentList	object		92658	1					
ANR	92671	Argument	object		92658	0					
ANR	92672	Identifier	object		92658	0					
ANR	92673	IdentifierDeclStatement	zval * retval ;	721:1:23446:23458	92658	1	True				
ANR	92674	IdentifierDecl	* retval		92658	0					
ANR	92675	IdentifierDeclType	zval *		92658	0					
ANR	92676	Identifier	retval		92658	1					
ANR	92677	IdentifierDeclStatement	int result ;	722:1:23461:23471	92658	2	True				
ANR	92678	IdentifierDecl	result		92658	0					
ANR	92679	IdentifierDeclType	int		92658	0					
ANR	92680	Identifier	result		92658	1					
ANR	92681	Statement	if	724:1:23475:23476	92658	3	True				
ANR	92682	Statement	(	724:4:23478:23478	92658	4	True				
ANR	92683	Statement	EXPECTED	724:5:23479:23486	92658	5	True				
ANR	92684	Statement	(	724:13:23487:23487	92658	6	True				
ANR	92685	Statement	instanceof_function_ex	724:14:23488:23509	92658	7	True				
ANR	92686	Statement	(	724:36:23510:23510	92658	8	True				
ANR	92687	Statement	ce	724:37:23511:23512	92658	9	True				
ANR	92688	Statement	","	724:39:23513:23513	92658	10	True				
ANR	92689	Statement	zend_ce_arrayaccess	724:41:23515:23533	92658	11	True				
ANR	92690	Statement	","	724:60:23534:23534	92658	12	True				
ANR	92691	Statement	1	724:62:23536:23536	92658	13	True				
ANR	92692	Statement	TSRMLS_CC	724:64:23538:23546	92658	14	True				
ANR	92693	Statement	)	724:73:23547:23547	92658	15	True				
ANR	92694	Statement	!=	724:75:23549:23550	92658	16	True				
ANR	92695	Statement	0	724:78:23552:23552	92658	17	True				
ANR	92696	Statement	)	724:79:23553:23553	92658	18	True				
ANR	92697	Statement	)	724:80:23554:23554	92658	19	True				
ANR	92698	CompoundStatement		6:82:155:155	92658	20					
ANR	92699	ExpressionStatement	SEPARATE_ARG_IF_REF ( offset )	725:2:23560:23587	92658	0	True				
ANR	92700	CallExpression	SEPARATE_ARG_IF_REF ( offset )		92658	0					
ANR	92701	Callee	SEPARATE_ARG_IF_REF		92658	0					
ANR	92702	Identifier	SEPARATE_ARG_IF_REF		92658	0					
ANR	92703	ArgumentList	offset		92658	1					
ANR	92704	Argument	offset		92658	0					
ANR	92705	Identifier	offset		92658	0					
ANR	92706	ExpressionStatement	"zend_call_method_with_1_params ( & object , ce , NULL , ""offsetexists"" , & retval , offset )"	726:2:23591:23673	92658	1	True				
ANR	92707	CallExpression	"zend_call_method_with_1_params ( & object , ce , NULL , ""offsetexists"" , & retval , offset )"		92658	0					
ANR	92708	Callee	zend_call_method_with_1_params		92658	0					
ANR	92709	Identifier	zend_call_method_with_1_params		92658	0					
ANR	92710	ArgumentList	& object		92658	1					
ANR	92711	Argument	& object		92658	0					
ANR	92712	UnaryOperationExpression	& object		92658	0					
ANR	92713	UnaryOperator	&		92658	0					
ANR	92714	Identifier	object		92658	1					
ANR	92715	Argument	ce		92658	1					
ANR	92716	Identifier	ce		92658	0					
ANR	92717	Argument	NULL		92658	2					
ANR	92718	Identifier	NULL		92658	0					
ANR	92719	Argument	"""offsetexists"""		92658	3					
ANR	92720	PrimaryExpression	"""offsetexists"""		92658	0					
ANR	92721	Argument	& retval		92658	4					
ANR	92722	UnaryOperationExpression	& retval		92658	0					
ANR	92723	UnaryOperator	&		92658	0					
ANR	92724	Identifier	retval		92658	1					
ANR	92725	Argument	offset		92658	5					
ANR	92726	Identifier	offset		92658	0					
ANR	92727	IfStatement	if ( EXPECTED ( retval != NULL ) )		92658	2					
ANR	92728	Condition	EXPECTED ( retval != NULL )	727:6:23681:23704	92658	0	True				
ANR	92729	CallExpression	EXPECTED ( retval != NULL )		92658	0					
ANR	92730	Callee	EXPECTED		92658	0					
ANR	92731	Identifier	EXPECTED		92658	0					
ANR	92732	ArgumentList	retval != NULL		92658	1					
ANR	92733	Argument	retval != NULL		92658	0					
ANR	92734	EqualityExpression	retval != NULL		92658	0		!=			
ANR	92735	Identifier	retval		92658	0					
ANR	92736	Identifier	NULL		92658	1					
ANR	92737	CompoundStatement		9:32:306:306	92658	1					
ANR	92738	ExpressionStatement	result = i_zend_is_true ( retval )	728:3:23712:23743	92658	0	True				
ANR	92739	AssignmentExpression	result = i_zend_is_true ( retval )		92658	0		=			
ANR	92740	Identifier	result		92658	0					
ANR	92741	CallExpression	i_zend_is_true ( retval )		92658	1					
ANR	92742	Callee	i_zend_is_true		92658	0					
ANR	92743	Identifier	i_zend_is_true		92658	0					
ANR	92744	ArgumentList	retval		92658	1					
ANR	92745	Argument	retval		92658	0					
ANR	92746	Identifier	retval		92658	0					
ANR	92747	ExpressionStatement	zval_ptr_dtor ( & retval )	729:3:23748:23770	92658	1	True				
ANR	92748	CallExpression	zval_ptr_dtor ( & retval )		92658	0					
ANR	92749	Callee	zval_ptr_dtor		92658	0					
ANR	92750	Identifier	zval_ptr_dtor		92658	0					
ANR	92751	ArgumentList	& retval		92658	1					
ANR	92752	Argument	& retval		92658	0					
ANR	92753	UnaryOperationExpression	& retval		92658	0					
ANR	92754	UnaryOperator	&		92658	0					
ANR	92755	Identifier	retval		92658	1					
ANR	92756	IfStatement	if ( check_empty && result && EXPECTED ( ! EG ( exception ) ) )		92658	2					
ANR	92757	Condition	check_empty && result && EXPECTED ( ! EG ( exception ) )	730:7:23779:23827	92658	0	True				
ANR	92758	AndExpression	check_empty && result && EXPECTED ( ! EG ( exception ) )		92658	0		&&			
ANR	92759	Identifier	check_empty		92658	0					
ANR	92760	AndExpression	result && EXPECTED ( ! EG ( exception ) )		92658	1		&&			
ANR	92761	Identifier	result		92658	0					
ANR	92762	CallExpression	EXPECTED ( ! EG ( exception ) )		92658	1					
ANR	92763	Callee	EXPECTED		92658	0					
ANR	92764	Identifier	EXPECTED		92658	0					
ANR	92765	ArgumentList	! EG ( exception )		92658	1					
ANR	92766	Argument	! EG ( exception )		92658	0					
ANR	92767	UnaryOperationExpression	! EG ( exception )		92658	0					
ANR	92768	UnaryOperator	!		92658	0					
ANR	92769	CallExpression	EG ( exception )		92658	1					
ANR	92770	Callee	EG		92658	0					
ANR	92771	Identifier	EG		92658	0					
ANR	92772	ArgumentList	exception		92658	1					
ANR	92773	Argument	exception		92658	0					
ANR	92774	Identifier	exception		92658	0					
ANR	92775	CompoundStatement		12:58:429:429	92658	1					
ANR	92776	ExpressionStatement	"zend_call_method_with_1_params ( & object , ce , NULL , ""offsetget"" , & retval , offset )"	731:4:23836:23915	92658	0	True				
ANR	92777	CallExpression	"zend_call_method_with_1_params ( & object , ce , NULL , ""offsetget"" , & retval , offset )"		92658	0					
ANR	92778	Callee	zend_call_method_with_1_params		92658	0					
ANR	92779	Identifier	zend_call_method_with_1_params		92658	0					
ANR	92780	ArgumentList	& object		92658	1					
ANR	92781	Argument	& object		92658	0					
ANR	92782	UnaryOperationExpression	& object		92658	0					
ANR	92783	UnaryOperator	&		92658	0					
ANR	92784	Identifier	object		92658	1					
ANR	92785	Argument	ce		92658	1					
ANR	92786	Identifier	ce		92658	0					
ANR	92787	Argument	NULL		92658	2					
ANR	92788	Identifier	NULL		92658	0					
ANR	92789	Argument	"""offsetget"""		92658	3					
ANR	92790	PrimaryExpression	"""offsetget"""		92658	0					
ANR	92791	Argument	& retval		92658	4					
ANR	92792	UnaryOperationExpression	& retval		92658	0					
ANR	92793	UnaryOperator	&		92658	0					
ANR	92794	Identifier	retval		92658	1					
ANR	92795	Argument	offset		92658	5					
ANR	92796	Identifier	offset		92658	0					
ANR	92797	IfStatement	if ( retval )		92658	1					
ANR	92798	Condition	retval	732:8:23925:23930	92658	0	True				
ANR	92799	Identifier	retval		92658	0					
ANR	92800	CompoundStatement		14:16:532:532	92658	1					
ANR	92801	ExpressionStatement	result = i_zend_is_true ( retval )	733:5:23940:23971	92658	0	True				
ANR	92802	AssignmentExpression	result = i_zend_is_true ( retval )		92658	0		=			
ANR	92803	Identifier	result		92658	0					
ANR	92804	CallExpression	i_zend_is_true ( retval )		92658	1					
ANR	92805	Callee	i_zend_is_true		92658	0					
ANR	92806	Identifier	i_zend_is_true		92658	0					
ANR	92807	ArgumentList	retval		92658	1					
ANR	92808	Argument	retval		92658	0					
ANR	92809	Identifier	retval		92658	0					
ANR	92810	ExpressionStatement	zval_ptr_dtor ( & retval )	734:5:23978:24000	92658	1	True				
ANR	92811	CallExpression	zval_ptr_dtor ( & retval )		92658	0					
ANR	92812	Callee	zval_ptr_dtor		92658	0					
ANR	92813	Identifier	zval_ptr_dtor		92658	0					
ANR	92814	ArgumentList	& retval		92658	1					
ANR	92815	Argument	& retval		92658	0					
ANR	92816	UnaryOperationExpression	& retval		92658	0					
ANR	92817	UnaryOperator	&		92658	0					
ANR	92818	Identifier	retval		92658	1					
ANR	92819	ElseStatement	else		92658	0					
ANR	92820	CompoundStatement		19:9:621:621	92658	0					
ANR	92821	ExpressionStatement	result = 0	738:3:24027:24037	92658	0	True				
ANR	92822	AssignmentExpression	result = 0		92658	0		=			
ANR	92823	Identifier	result		92658	0					
ANR	92824	PrimaryExpression	0		92658	1					
ANR	92825	ExpressionStatement	zval_ptr_dtor ( & offset )	740:2:24045:24067	92658	3	True				
ANR	92826	CallExpression	zval_ptr_dtor ( & offset )		92658	0					
ANR	92827	Callee	zval_ptr_dtor		92658	0					
ANR	92828	Identifier	zval_ptr_dtor		92658	0					
ANR	92829	ArgumentList	& offset		92658	1					
ANR	92830	Argument	& offset		92658	0					
ANR	92831	UnaryOperationExpression	& offset		92658	0					
ANR	92832	UnaryOperator	&		92658	0					
ANR	92833	Identifier	offset		92658	1					
ANR	92834	ReturnType	static int		92658	1					
ANR	92835	Identifier	zend_std_has_dimension		92658	2					
ANR	92836	ParameterList	"zval * object , zval * offset , int check_empty TSRMLS_DC"		92658	3					
ANR	92837	Parameter	zval * object	718:34:23335:23346	92658	0	True				
ANR	92838	ParameterType	zval *		92658	0					
ANR	92839	Identifier	object		92658	1					
ANR	92840	Parameter	zval * offset	718:48:23349:23360	92658	1	True				
ANR	92841	ParameterType	zval *		92658	0					
ANR	92842	Identifier	offset		92658	1					
ANR	92843	Parameter	int check_empty TSRMLS_DC	718:62:23363:23387	92658	2	True				
ANR	92844	ParameterType	int check_empty		92658	0					
ANR	92845	Identifier	TSRMLS_DC		92658	1					
ANR	92846	CFGEntryNode	ENTRY		92658		True				
ANR	92847	CFGExitNode	EXIT		92658		True				
ANR	92848	Symbol	exception		92658						
ANR	92849	Symbol	ce		92658						
ANR	92850	Symbol	check_empty		92658						
ANR	92851	Symbol	EG		92658						
ANR	92852	Symbol	NULL		92658						
ANR	92853	Symbol	offset		92658						
ANR	92854	Symbol	& offset		92658						
ANR	92855	Symbol	i_zend_is_true		92658						
ANR	92856	Symbol	TSRMLS_DC		92658						
ANR	92857	Symbol	& object		92658						
ANR	92858	Symbol	retval		92658						
ANR	92859	Symbol	result		92658						
ANR	92860	Symbol	Z_OBJCE_P		92658						
ANR	92861	Symbol	& retval		92658						
ANR	92862	Symbol	EXPECTED		92658						
ANR	92863	Symbol	object		92658						
ANR	92864	DeclStmt									
ANR	92865	Decl							zend_object	zend_object *	zobj
ANR	92866	DeclStmt									
ANR	92867	Decl							zval	zval	tmp_member
ANR	92868	DeclStmt									
ANR	92869	Decl							zval	zval * *	retval
ANR	92870	DeclStmt									
ANR	92871	Decl							zend_property_info	zend_property_info *	property_info
ANR	92872	DeclStmt									
ANR	92873	Decl							zval	zval *	new_zval
ANR	92874	DeclStmt									
ANR	92875	Decl							zend_guard	zend_guard *	guard
ANR	92876	DeclStmt									
ANR	92877	Decl							zend_object	zend_object *	zobj
ANR	92878	DeclStmt									
ANR	92879	Decl							zval	zval *	tmp_member
ANR	92880	DeclStmt									
ANR	92881	Decl							zend_property_info	zend_property_info *	property_info
ANR	92882	DeclStmt									
ANR	92883	Decl							zend_guard	zend_guard *	guard
ANR	92884	DeclStmt									
ANR	92885	Decl							zend_class_entry	zend_class_entry *	ce
ANR	92886	DeclStmt									
ANR	92887	Decl							zend_internal_function	zend_internal_function *	func
ANR	92888	DeclStmt									
ANR	92889	Decl							zval	zval *	method_name_ptr
ANR	92890	Decl							zval	zval *	method_args_ptr
ANR	92891	DeclStmt									
ANR	92892	Decl							zval	zval *	method_result_ptr
ANR	92893	DeclStmt									
ANR	92894	Decl							zend_class_entry	zend_class_entry *	ce
ANR	92895	Function	zend_check_private_int	951:0:31358:32383							
ANR	92896	FunctionDef	"zend_check_private_int (zend_function * fbc , zend_class_entry * ce , char * function_name_strval , int function_name_strlen , ulong hash_value TSRMLS_DC)"		92895	0					
ANR	92897	CompoundStatement		952:0:31544:32383	92895	0					
ANR	92898	IfStatement	if ( ! ce )		92895	0					
ANR	92899	Condition	! ce	953:5:31551:31553	92895	0	True				
ANR	92900	UnaryOperationExpression	! ce		92895	0					
ANR	92901	UnaryOperator	!		92895	0					
ANR	92902	Identifier	ce		92895	1					
ANR	92903	CompoundStatement		2:10:11:11	92895	1					
ANR	92904	ReturnStatement	return 0 ;	954:2:31560:31568	92895	0	True				
ANR	92905	PrimaryExpression	0		92895	0					
ANR	92906	IfStatement	if ( fbc -> common . scope == ce && EG ( scope ) == ce )		92895	1					
ANR	92907	Condition	fbc -> common . scope == ce && EG ( scope ) == ce	963:5:31892:31933	92895	0	True				
ANR	92908	AndExpression	fbc -> common . scope == ce && EG ( scope ) == ce		92895	0		&&			
ANR	92909	EqualityExpression	fbc -> common . scope == ce		92895	0		==			
ANR	92910	MemberAccess	fbc -> common . scope		92895	0					
ANR	92911	PtrMemberAccess	fbc -> common		92895	0					
ANR	92912	Identifier	fbc		92895	0					
ANR	92913	Identifier	common		92895	1					
ANR	92914	Identifier	scope		92895	1					
ANR	92915	Identifier	ce		92895	1					
ANR	92916	EqualityExpression	EG ( scope ) == ce		92895	1		==			
ANR	92917	CallExpression	EG ( scope )		92895	0					
ANR	92918	Callee	EG		92895	0					
ANR	92919	Identifier	EG		92895	0					
ANR	92920	ArgumentList	scope		92895	1					
ANR	92921	Argument	scope		92895	0					
ANR	92922	Identifier	scope		92895	0					
ANR	92923	Identifier	ce		92895	1					
ANR	92924	CompoundStatement		12:49:391:391	92895	1					
ANR	92925	ReturnStatement	return fbc ;	965:2:31995:32005	92895	0	True				
ANR	92926	Identifier	fbc		92895	0					
ANR	92927	ExpressionStatement	ce = ce -> parent	970:1:32034:32049	92895	2	True				
ANR	92928	AssignmentExpression	ce = ce -> parent		92895	0		=			
ANR	92929	Identifier	ce		92895	0					
ANR	92930	PtrMemberAccess	ce -> parent		92895	1					
ANR	92931	Identifier	ce		92895	0					
ANR	92932	Identifier	parent		92895	1					
ANR	92933	WhileStatement	while ( ce )		92895	3					
ANR	92934	Condition	ce	971:8:32059:32060	92895	0	True				
ANR	92935	Identifier	ce		92895	0					
ANR	92936	CompoundStatement		20:12:518:518	92895	1					
ANR	92937	IfStatement	if ( ce == EG ( scope ) )		92895	0					
ANR	92938	Condition	ce == EG ( scope )	972:6:32071:32085	92895	0	True				
ANR	92939	EqualityExpression	ce == EG ( scope )		92895	0		==			
ANR	92940	Identifier	ce		92895	0					
ANR	92941	CallExpression	EG ( scope )		92895	1					
ANR	92942	Callee	EG		92895	0					
ANR	92943	Identifier	EG		92895	0					
ANR	92944	ArgumentList	scope		92895	1					
ANR	92945	Argument	scope		92895	0					
ANR	92946	Identifier	scope		92895	0					
ANR	92947	CompoundStatement		21:23:543:543	92895	1					
ANR	92948	IfStatement	"if ( zend_hash_quick_find ( & ce -> function_table , function_name_strval , function_name_strlen + 1 , hash_value , ( void * * ) & fbc ) == SUCCESS && fbc -> op_array . fn_flags & ZEND_ACC_PRIVATE && fbc -> common . scope == EG ( scope ) )"		92895	0					
ANR	92949	Condition	"zend_hash_quick_find ( & ce -> function_table , function_name_strval , function_name_strlen + 1 , hash_value , ( void * * ) & fbc ) == SUCCESS && fbc -> op_array . fn_flags & ZEND_ACC_PRIVATE && fbc -> common . scope == EG ( scope )"	973:7:32097:32307	92895	0	True				
ANR	92950	AndExpression	"zend_hash_quick_find ( & ce -> function_table , function_name_strval , function_name_strlen + 1 , hash_value , ( void * * ) & fbc ) == SUCCESS && fbc -> op_array . fn_flags & ZEND_ACC_PRIVATE && fbc -> common . scope == EG ( scope )"		92895	0		&&			
ANR	92951	EqualityExpression	"zend_hash_quick_find ( & ce -> function_table , function_name_strval , function_name_strlen + 1 , hash_value , ( void * * ) & fbc ) == SUCCESS"		92895	0		==			
ANR	92952	CallExpression	"zend_hash_quick_find ( & ce -> function_table , function_name_strval , function_name_strlen + 1 , hash_value , ( void * * ) & fbc )"		92895	0					
ANR	92953	Callee	zend_hash_quick_find		92895	0					
ANR	92954	Identifier	zend_hash_quick_find		92895	0					
ANR	92955	ArgumentList	& ce -> function_table		92895	1					
ANR	92956	Argument	& ce -> function_table		92895	0					
ANR	92957	UnaryOperationExpression	& ce -> function_table		92895	0					
ANR	92958	UnaryOperator	&		92895	0					
ANR	92959	PtrMemberAccess	ce -> function_table		92895	1					
ANR	92960	Identifier	ce		92895	0					
ANR	92961	Identifier	function_table		92895	1					
ANR	92962	Argument	function_name_strval		92895	1					
ANR	92963	Identifier	function_name_strval		92895	0					
ANR	92964	Argument	function_name_strlen + 1		92895	2					
ANR	92965	AdditiveExpression	function_name_strlen + 1		92895	0		+			
ANR	92966	Identifier	function_name_strlen		92895	0					
ANR	92967	PrimaryExpression	1		92895	1					
ANR	92968	Argument	hash_value		92895	3					
ANR	92969	Identifier	hash_value		92895	0					
ANR	92970	Argument	( void * * ) & fbc		92895	4					
ANR	92971	CastExpression	( void * * ) & fbc		92895	0					
ANR	92972	CastTarget	void * *		92895	0					
ANR	92973	UnaryOperationExpression	& fbc		92895	1					
ANR	92974	UnaryOperator	&		92895	0					
ANR	92975	Identifier	fbc		92895	1					
ANR	92976	Identifier	SUCCESS		92895	1					
ANR	92977	AndExpression	fbc -> op_array . fn_flags & ZEND_ACC_PRIVATE && fbc -> common . scope == EG ( scope )		92895	1		&&			
ANR	92978	BitAndExpression	fbc -> op_array . fn_flags & ZEND_ACC_PRIVATE		92895	0		&			
ANR	92979	MemberAccess	fbc -> op_array . fn_flags		92895	0					
ANR	92980	PtrMemberAccess	fbc -> op_array		92895	0					
ANR	92981	Identifier	fbc		92895	0					
ANR	92982	Identifier	op_array		92895	1					
ANR	92983	Identifier	fn_flags		92895	1					
ANR	92984	Identifier	ZEND_ACC_PRIVATE		92895	1					
ANR	92985	EqualityExpression	fbc -> common . scope == EG ( scope )		92895	1		==			
ANR	92986	MemberAccess	fbc -> common . scope		92895	0					
ANR	92987	PtrMemberAccess	fbc -> common		92895	0					
ANR	92988	Identifier	fbc		92895	0					
ANR	92989	Identifier	common		92895	1					
ANR	92990	Identifier	scope		92895	1					
ANR	92991	CallExpression	EG ( scope )		92895	1					
ANR	92992	Callee	EG		92895	0					
ANR	92993	Identifier	EG		92895	0					
ANR	92994	ArgumentList	scope		92895	1					
ANR	92995	Argument	scope		92895	0					
ANR	92996	Identifier	scope		92895	0					
ANR	92997	CompoundStatement		24:39:765:765	92895	1					
ANR	92998	ReturnStatement	return fbc ;	976:4:32316:32326	92895	0	True				
ANR	92999	Identifier	fbc		92895	0					
ANR	93000	BreakStatement	break ;	978:3:32336:32341	92895	1	True				
ANR	93001	ExpressionStatement	ce = ce -> parent	980:2:32349:32364	92895	1	True				
ANR	93002	AssignmentExpression	ce = ce -> parent		92895	0		=			
ANR	93003	Identifier	ce		92895	0					
ANR	93004	PtrMemberAccess	ce -> parent		92895	1					
ANR	93005	Identifier	ce		92895	0					
ANR	93006	Identifier	parent		92895	1					
ANR	93007	ReturnStatement	return NULL ;	982:1:32370:32381	92895	4	True				
ANR	93008	Identifier	NULL		92895	0					
ANR	93009	ReturnType	static inline zend_function *		92895	1					
ANR	93010	Identifier	zend_check_private_int		92895	2					
ANR	93011	ParameterList	"zend_function * fbc , zend_class_entry * ce , char * function_name_strval , int function_name_strlen , ulong hash_value TSRMLS_DC"		92895	3					
ANR	93012	Parameter	zend_function * fbc	951:52:31410:31427	92895	0	True				
ANR	93013	ParameterType	zend_function *		92895	0					
ANR	93014	Identifier	fbc		92895	1					
ANR	93015	Parameter	zend_class_entry * ce	951:72:31430:31449	92895	1	True				
ANR	93016	ParameterType	zend_class_entry *		92895	0					
ANR	93017	Identifier	ce		92895	1					
ANR	93018	Parameter	char * function_name_strval	951:94:31452:31477	92895	2	True				
ANR	93019	ParameterType	char *		92895	0					
ANR	93020	Identifier	function_name_strval		92895	1					
ANR	93021	Parameter	int function_name_strlen	951:122:31480:31503	92895	3	True				
ANR	93022	ParameterType	int		92895	0					
ANR	93023	Identifier	function_name_strlen		92895	1					
ANR	93024	Parameter	ulong hash_value TSRMLS_DC	951:148:31506:31531	92895	4	True				
ANR	93025	ParameterType	ulong hash_value		92895	0					
ANR	93026	Identifier	TSRMLS_DC		92895	1					
ANR	93027	CFGEntryNode	ENTRY		92895		True				
ANR	93028	CFGExitNode	EXIT		92895		True				
ANR	93029	Symbol	ce		92895						
ANR	93030	Symbol	EG		92895						
ANR	93031	Symbol	SUCCESS		92895						
ANR	93032	Symbol	NULL		92895						
ANR	93033	Symbol	ce -> parent		92895						
ANR	93034	Symbol	fbc		92895						
ANR	93035	Symbol	& ce -> function_table		92895						
ANR	93036	Symbol	& fbc		92895						
ANR	93037	Symbol	* ce		92895						
ANR	93038	Symbol	TSRMLS_DC		92895						
ANR	93039	Symbol	fbc -> common		92895						
ANR	93040	Symbol	* fbc		92895						
ANR	93041	Symbol	ZEND_ACC_PRIVATE		92895						
ANR	93042	Symbol	function_name_strval		92895						
ANR	93043	Symbol	fbc -> op_array		92895						
ANR	93044	Symbol	zend_hash_quick_find		92895						
ANR	93045	Symbol	scope		92895						
ANR	93046	Symbol	fbc -> op_array . fn_flags		92895						
ANR	93047	Symbol	hash_value		92895						
ANR	93048	Symbol	function_name_strlen		92895						
ANR	93049	Symbol	fbc -> common . scope		92895						
ANR	93050	Function	zend_check_private	986:0:32396:32711							
ANR	93051	FunctionDef	"zend_check_private (zend_function * fbc , zend_class_entry * ce , char * function_name_strval , int function_name_strlen TSRMLS_DC)"		93050	0					
ANR	93052	CompoundStatement		987:0:32544:32711	93050	0					
ANR	93053	Statement	return	988:1:32547:32552	93050	0	True				
ANR	93054	Statement	zend_check_private_int	988:8:32554:32575	93050	1	True				
ANR	93055	Statement	(	988:30:32576:32576	93050	2	True				
ANR	93056	Statement	fbc	988:31:32577:32579	93050	3	True				
ANR	93057	Statement	","	988:34:32580:32580	93050	4	True				
ANR	93058	Statement	ce	988:36:32582:32583	93050	5	True				
ANR	93059	Statement	","	988:38:32584:32584	93050	6	True				
ANR	93060	Statement	function_name_strval	988:40:32586:32605	93050	7	True				
ANR	93061	Statement	","	988:60:32606:32606	93050	8	True				
ANR	93062	Statement	function_name_strlen	988:62:32608:32627	93050	9	True				
ANR	93063	Statement	","	988:82:32628:32628	93050	10	True				
ANR	93064	Statement	zend_hash_func	988:84:32630:32643	93050	11	True				
ANR	93065	Statement	(	988:98:32644:32644	93050	12	True				
ANR	93066	Statement	function_name_strval	988:99:32645:32664	93050	13	True				
ANR	93067	Statement	","	988:119:32665:32665	93050	14	True				
ANR	93068	Statement	function_name_strlen	988:121:32667:32686	93050	15	True				
ANR	93069	Statement	+	988:141:32687:32687	93050	16	True				
ANR	93070	Statement	1	988:142:32688:32688	93050	17	True				
ANR	93071	Statement	)	988:143:32689:32689	93050	18	True				
ANR	93072	Statement	TSRMLS_CC	988:145:32691:32699	93050	19	True				
ANR	93073	Statement	)	988:154:32700:32700	93050	20	True				
ANR	93074	Statement	!=	988:156:32702:32703	93050	21	True				
ANR	93075	ExpressionStatement	NULL	988:159:32705:32709	93050	22	True				
ANR	93076	Identifier	NULL		93050	0					
ANR	93077	ReturnType	ZEND_API int		93050	1					
ANR	93078	Identifier	zend_check_private		93050	2					
ANR	93079	ParameterList	"zend_function * fbc , zend_class_entry * ce , char * function_name_strval , int function_name_strlen TSRMLS_DC"		93050	3					
ANR	93080	Parameter	zend_function * fbc	986:32:32428:32445	93050	0	True				
ANR	93081	ParameterType	zend_function *		93050	0					
ANR	93082	Identifier	fbc		93050	1					
ANR	93083	Parameter	zend_class_entry * ce	986:52:32448:32467	93050	1	True				
ANR	93084	ParameterType	zend_class_entry *		93050	0					
ANR	93085	Identifier	ce		93050	1					
ANR	93086	Parameter	char * function_name_strval	986:74:32470:32495	93050	2	True				
ANR	93087	ParameterType	char *		93050	0					
ANR	93088	Identifier	function_name_strval		93050	1					
ANR	93089	Parameter	int function_name_strlen TSRMLS_DC	986:102:32498:32531	93050	3	True				
ANR	93090	ParameterType	int function_name_strlen		93050	0					
ANR	93091	Identifier	TSRMLS_DC		93050	1					
ANR	93092	CFGEntryNode	ENTRY		93050		True				
ANR	93093	CFGExitNode	EXIT		93050		True				
ANR	93094	Symbol	function_name_strval		93050						
ANR	93095	Symbol	ce		93050						
ANR	93096	Symbol	fbc		93050						
ANR	93097	Symbol	TSRMLS_DC		93050						
ANR	93098	Function	zend_check_protected	994:0:32786:33323							
ANR	93099	FunctionDef	"zend_check_protected (zend_class_entry * ce , zend_class_entry * scope)"		93098	0					
ANR	93100	CompoundStatement		995:0:32877:33323	93098	0					
ANR	93101	IdentifierDeclStatement	zend_class_entry * fbc_scope = ce ;	996:1:32880:32912	93098	0	True				
ANR	93102	IdentifierDecl	* fbc_scope = ce		93098	0					
ANR	93103	IdentifierDeclType	zend_class_entry *		93098	0					
ANR	93104	Identifier	fbc_scope		93098	1					
ANR	93105	AssignmentExpression	* fbc_scope = ce		93098	2		=			
ANR	93106	Identifier	ce		93098	0					
ANR	93107	Identifier	ce		93098	1					
ANR	93108	WhileStatement	while ( fbc_scope )		93098	1					
ANR	93109	Condition	fbc_scope	1001:8:33023:33031	93098	0	True				
ANR	93110	Identifier	fbc_scope		93098	0					
ANR	93111	CompoundStatement		7:19:156:156	93098	1					
ANR	93112	IfStatement	if ( fbc_scope == scope )		93098	0					
ANR	93113	Condition	fbc_scope == scope	1002:6:33042:33057	93098	0	True				
ANR	93114	EqualityExpression	fbc_scope == scope		93098	0		==			
ANR	93115	Identifier	fbc_scope		93098	0					
ANR	93116	Identifier	scope		93098	1					
ANR	93117	CompoundStatement		8:24:182:182	93098	1					
ANR	93118	ReturnStatement	return 1 ;	1003:3:33065:33073	93098	0	True				
ANR	93119	PrimaryExpression	1		93098	0					
ANR	93120	ExpressionStatement	fbc_scope = fbc_scope -> parent	1005:2:33081:33110	93098	1	True				
ANR	93121	AssignmentExpression	fbc_scope = fbc_scope -> parent		93098	0		=			
ANR	93122	Identifier	fbc_scope		93098	0					
ANR	93123	PtrMemberAccess	fbc_scope -> parent		93098	1					
ANR	93124	Identifier	fbc_scope		93098	0					
ANR	93125	Identifier	parent		93098	1					
ANR	93126	WhileStatement	while ( scope )		93098	2					
ANR	93127	Condition	scope	1011:8:33239:33243	93098	0	True				
ANR	93128	Identifier	scope		93098	0					
ANR	93129	CompoundStatement		17:15:368:368	93098	1					
ANR	93130	IfStatement	if ( scope == ce )		93098	0					
ANR	93131	Condition	scope == ce	1012:6:33254:33262	93098	0	True				
ANR	93132	EqualityExpression	scope == ce		93098	0		==			
ANR	93133	Identifier	scope		93098	0					
ANR	93134	Identifier	ce		93098	1					
ANR	93135	CompoundStatement		18:17:387:387	93098	1					
ANR	93136	ReturnStatement	return 1 ;	1013:3:33270:33278	93098	0	True				
ANR	93137	PrimaryExpression	1		93098	0					
ANR	93138	ExpressionStatement	scope = scope -> parent	1015:2:33286:33307	93098	1	True				
ANR	93139	AssignmentExpression	scope = scope -> parent		93098	0		=			
ANR	93140	Identifier	scope		93098	0					
ANR	93141	PtrMemberAccess	scope -> parent		93098	1					
ANR	93142	Identifier	scope		93098	0					
ANR	93143	Identifier	parent		93098	1					
ANR	93144	ReturnStatement	return 0 ;	1017:1:33313:33321	93098	3	True				
ANR	93145	PrimaryExpression	0		93098	0					
ANR	93146	ReturnType	ZEND_API int		93098	1					
ANR	93147	Identifier	zend_check_protected		93098	2					
ANR	93148	ParameterList	"zend_class_entry * ce , zend_class_entry * scope"		93098	3					
ANR	93149	Parameter	zend_class_entry * ce	994:34:32820:32839	93098	0	True				
ANR	93150	ParameterType	zend_class_entry *		93098	0					
ANR	93151	Identifier	ce		93098	1					
ANR	93152	Parameter	zend_class_entry * scope	994:56:32842:32864	93098	1	True				
ANR	93153	ParameterType	zend_class_entry *		93098	0					
ANR	93154	Identifier	scope		93098	1					
ANR	93155	CFGEntryNode	ENTRY		93098		True				
ANR	93156	CFGExitNode	EXIT		93098		True				
ANR	93157	Symbol	ce		93098						
ANR	93158	Symbol	fbc_scope -> parent		93098						
ANR	93159	Symbol	fbc_scope		93098						
ANR	93160	Symbol	scope -> parent		93098						
ANR	93161	Symbol	* fbc_scope		93098						
ANR	93162	Symbol	scope		93098						
ANR	93163	Symbol	* scope		93098						
ANR	93164	Function	zend_get_user_call_function	1021:0:33336:34019							
ANR	93165	FunctionDef	"zend_get_user_call_function (zend_class_entry * ce , const char * method_name , int method_len)"		93164	0					
ANR	93166	CompoundStatement		1022:0:33473:34019	93164	0					
ANR	93167	IdentifierDeclStatement	zend_internal_function * call_user_call = emalloc ( sizeof ( zend_internal_function ) ) ;	1023:1:33476:33556	93164	0	True				
ANR	93168	IdentifierDecl	* call_user_call = emalloc ( sizeof ( zend_internal_function ) )		93164	0					
ANR	93169	IdentifierDeclType	zend_internal_function *		93164	0					
ANR	93170	Identifier	call_user_call		93164	1					
ANR	93171	AssignmentExpression	* call_user_call = emalloc ( sizeof ( zend_internal_function ) )		93164	2		=			
ANR	93172	Identifier	call_user_call		93164	0					
ANR	93173	CallExpression	emalloc ( sizeof ( zend_internal_function ) )		93164	1					
ANR	93174	Callee	emalloc		93164	0					
ANR	93175	Identifier	emalloc		93164	0					
ANR	93176	ArgumentList	sizeof ( zend_internal_function )		93164	1					
ANR	93177	Argument	sizeof ( zend_internal_function )		93164	0					
ANR	93178	SizeofExpression	sizeof ( zend_internal_function )		93164	0					
ANR	93179	Sizeof	sizeof		93164	0					
ANR	93180	SizeofOperand	zend_internal_function		93164	1					
ANR	93181	ExpressionStatement	call_user_call -> type = ZEND_INTERNAL_FUNCTION	1024:1:33559:33604	93164	1	True				
ANR	93182	AssignmentExpression	call_user_call -> type = ZEND_INTERNAL_FUNCTION		93164	0		=			
ANR	93183	PtrMemberAccess	call_user_call -> type		93164	0					
ANR	93184	Identifier	call_user_call		93164	0					
ANR	93185	Identifier	type		93164	1					
ANR	93186	Identifier	ZEND_INTERNAL_FUNCTION		93164	1					
ANR	93187	ExpressionStatement	call_user_call -> module = ( ce -> type == ZEND_INTERNAL_CLASS ) ? ce -> info . internal . module : NULL	1025:1:33607:33699	93164	2	True				
ANR	93188	AssignmentExpression	call_user_call -> module = ( ce -> type == ZEND_INTERNAL_CLASS ) ? ce -> info . internal . module : NULL		93164	0		=			
ANR	93189	PtrMemberAccess	call_user_call -> module		93164	0					
ANR	93190	Identifier	call_user_call		93164	0					
ANR	93191	Identifier	module		93164	1					
ANR	93192	ConditionalExpression	( ce -> type == ZEND_INTERNAL_CLASS ) ? ce -> info . internal . module : NULL		93164	1					
ANR	93193	Condition	ce -> type == ZEND_INTERNAL_CLASS		93164	0					
ANR	93194	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		93164	0		==			
ANR	93195	PtrMemberAccess	ce -> type		93164	0					
ANR	93196	Identifier	ce		93164	0					
ANR	93197	Identifier	type		93164	1					
ANR	93198	Identifier	ZEND_INTERNAL_CLASS		93164	1					
ANR	93199	MemberAccess	ce -> info . internal . module		93164	1					
ANR	93200	MemberAccess	ce -> info . internal		93164	0					
ANR	93201	PtrMemberAccess	ce -> info		93164	0					
ANR	93202	Identifier	ce		93164	0					
ANR	93203	Identifier	info		93164	1					
ANR	93204	Identifier	internal		93164	1					
ANR	93205	Identifier	module		93164	1					
ANR	93206	Identifier	NULL		93164	2					
ANR	93207	ExpressionStatement	call_user_call -> handler = zend_std_call_user_call	1026:1:33702:33751	93164	3	True				
ANR	93208	AssignmentExpression	call_user_call -> handler = zend_std_call_user_call		93164	0		=			
ANR	93209	PtrMemberAccess	call_user_call -> handler		93164	0					
ANR	93210	Identifier	call_user_call		93164	0					
ANR	93211	Identifier	handler		93164	1					
ANR	93212	Identifier	zend_std_call_user_call		93164	1					
ANR	93213	ExpressionStatement	call_user_call -> arg_info = NULL	1027:1:33754:33785	93164	4	True				
ANR	93214	AssignmentExpression	call_user_call -> arg_info = NULL		93164	0		=			
ANR	93215	PtrMemberAccess	call_user_call -> arg_info		93164	0					
ANR	93216	Identifier	call_user_call		93164	0					
ANR	93217	Identifier	arg_info		93164	1					
ANR	93218	Identifier	NULL		93164	1					
ANR	93219	ExpressionStatement	call_user_call -> num_args = 0	1028:1:33788:33816	93164	5	True				
ANR	93220	AssignmentExpression	call_user_call -> num_args = 0		93164	0		=			
ANR	93221	PtrMemberAccess	call_user_call -> num_args		93164	0					
ANR	93222	Identifier	call_user_call		93164	0					
ANR	93223	Identifier	num_args		93164	1					
ANR	93224	PrimaryExpression	0		93164	1					
ANR	93225	ExpressionStatement	call_user_call -> scope = ce	1029:1:33819:33845	93164	6	True				
ANR	93226	AssignmentExpression	call_user_call -> scope = ce		93164	0		=			
ANR	93227	PtrMemberAccess	call_user_call -> scope		93164	0					
ANR	93228	Identifier	call_user_call		93164	0					
ANR	93229	Identifier	scope		93164	1					
ANR	93230	Identifier	ce		93164	1					
ANR	93231	ExpressionStatement	call_user_call -> fn_flags = ZEND_ACC_CALL_VIA_HANDLER	1030:1:33848:33900	93164	7	True				
ANR	93232	AssignmentExpression	call_user_call -> fn_flags = ZEND_ACC_CALL_VIA_HANDLER		93164	0		=			
ANR	93233	PtrMemberAccess	call_user_call -> fn_flags		93164	0					
ANR	93234	Identifier	call_user_call		93164	0					
ANR	93235	Identifier	fn_flags		93164	1					
ANR	93236	Identifier	ZEND_ACC_CALL_VIA_HANDLER		93164	1					
ANR	93237	ExpressionStatement	"call_user_call -> function_name = estrndup ( method_name , method_len )"	1031:1:33903:33968	93164	8	True				
ANR	93238	AssignmentExpression	"call_user_call -> function_name = estrndup ( method_name , method_len )"		93164	0		=			
ANR	93239	PtrMemberAccess	call_user_call -> function_name		93164	0					
ANR	93240	Identifier	call_user_call		93164	0					
ANR	93241	Identifier	function_name		93164	1					
ANR	93242	CallExpression	"estrndup ( method_name , method_len )"		93164	1					
ANR	93243	Callee	estrndup		93164	0					
ANR	93244	Identifier	estrndup		93164	0					
ANR	93245	ArgumentList	method_name		93164	1					
ANR	93246	Argument	method_name		93164	0					
ANR	93247	Identifier	method_name		93164	0					
ANR	93248	Argument	method_len		93164	1					
ANR	93249	Identifier	method_len		93164	0					
ANR	93250	ReturnStatement	return ( union _zend_function * ) call_user_call ;	1033:1:33972:34017	93164	9	True				
ANR	93251	CastExpression	( union _zend_function * ) call_user_call		93164	0					
ANR	93252	CastTarget	union _zend_function *		93164	0					
ANR	93253	Identifier	call_user_call		93164	1					
ANR	93254	ReturnType	static inline union _zend_function *		93164	1					
ANR	93255	Identifier	zend_get_user_call_function		93164	2					
ANR	93256	ParameterList	"zend_class_entry * ce , const char * method_name , int method_len"		93164	3					
ANR	93257	Parameter	zend_class_entry * ce	1021:64:33400:33419	93164	0	True				
ANR	93258	ParameterType	zend_class_entry *		93164	0					
ANR	93259	Identifier	ce		93164	1					
ANR	93260	Parameter	const char * method_name	1021:86:33422:33444	93164	1	True				
ANR	93261	ParameterType	const char *		93164	0					
ANR	93262	Identifier	method_name		93164	1					
ANR	93263	Parameter	int method_len	1021:111:33447:33460	93164	2	True				
ANR	93264	ParameterType	int		93164	0					
ANR	93265	Identifier	method_len		93164	1					
ANR	93266	CFGEntryNode	ENTRY		93164		True				
ANR	93267	CFGExitNode	EXIT		93164		True				
ANR	93268	Symbol	ce -> type		93164						
ANR	93269	Symbol	* ce		93164						
ANR	93270	Symbol	* call_user_call		93164						
ANR	93271	Symbol	ZEND_INTERNAL_FUNCTION		93164						
ANR	93272	Symbol	call_user_call -> module		93164						
ANR	93273	Symbol	emalloc		93164						
ANR	93274	Symbol	estrndup		93164						
ANR	93275	Symbol	method_name		93164						
ANR	93276	Symbol	call_user_call -> scope		93164						
ANR	93277	Symbol	method_len		93164						
ANR	93278	Symbol	call_user_call -> arg_info		93164						
ANR	93279	Symbol	ce -> info . internal		93164						
ANR	93280	Symbol	ZEND_INTERNAL_CLASS		93164						
ANR	93281	Symbol	ce		93164						
ANR	93282	Symbol	NULL		93164						
ANR	93283	Symbol	call_user_call -> fn_flags		93164						
ANR	93284	Symbol	ce -> info . internal . module		93164						
ANR	93285	Symbol	zend_std_call_user_call		93164						
ANR	93286	Symbol	call_user_call -> type		93164						
ANR	93287	Symbol	call_user_call -> handler		93164						
ANR	93288	Symbol	ce -> info		93164						
ANR	93289	Symbol	call_user_call		93164						
ANR	93290	Symbol	call_user_call -> num_args		93164						
ANR	93291	Symbol	call_user_call -> function_name		93164						
ANR	93292	Symbol	ZEND_ACC_CALL_VIA_HANDLER		93164						
ANR	93293	DeclStmt									
ANR	93294	Decl							zend_function	zend_function *	fbc
ANR	93295	DeclStmt									
ANR	93296	Decl							zval	zval *	object
ANR	93297	DeclStmt									
ANR	93298	Decl							zend_object	zend_object *	zobj
ANR	93299	DeclStmt									
ANR	93300	Decl							ulong	ulong	hash_value
ANR	93301	DeclStmt									
ANR	93302	Decl							char	char *	lc_method_name
ANR	93303	DeclStmt									
ANR	93304	Decl							zend_function	zend_function *	updated_fbc
ANR	93305	DeclStmt									
ANR	93306	Decl							zend_function	zend_function *	priv_fbc
ANR	93307	DeclStmt									
ANR	93308	Decl							zend_internal_function	zend_internal_function *	func
ANR	93309	DeclStmt									
ANR	93310	Decl							zval	zval *	method_name_ptr
ANR	93311	Decl							zval	zval *	method_args_ptr
ANR	93312	DeclStmt									
ANR	93313	Decl							zval	zval *	method_result_ptr
ANR	93314	DeclStmt									
ANR	93315	Decl							zend_class_entry	zend_class_entry *	ce
ANR	93316	Function	zend_get_user_callstatic_function	1161:0:38512:39306							
ANR	93317	FunctionDef	"zend_get_user_callstatic_function (zend_class_entry * ce , const char * method_name , int method_len)"		93316	0					
ANR	93318	CompoundStatement		1162:0:38655:39306	93316	0					
ANR	93319	IdentifierDeclStatement	zend_internal_function * callstatic_user_call = emalloc ( sizeof ( zend_internal_function ) ) ;	1163:1:38658:38744	93316	0	True				
ANR	93320	IdentifierDecl	* callstatic_user_call = emalloc ( sizeof ( zend_internal_function ) )		93316	0					
ANR	93321	IdentifierDeclType	zend_internal_function *		93316	0					
ANR	93322	Identifier	callstatic_user_call		93316	1					
ANR	93323	AssignmentExpression	* callstatic_user_call = emalloc ( sizeof ( zend_internal_function ) )		93316	2		=			
ANR	93324	Identifier	callstatic_user_call		93316	0					
ANR	93325	CallExpression	emalloc ( sizeof ( zend_internal_function ) )		93316	1					
ANR	93326	Callee	emalloc		93316	0					
ANR	93327	Identifier	emalloc		93316	0					
ANR	93328	ArgumentList	sizeof ( zend_internal_function )		93316	1					
ANR	93329	Argument	sizeof ( zend_internal_function )		93316	0					
ANR	93330	SizeofExpression	sizeof ( zend_internal_function )		93316	0					
ANR	93331	Sizeof	sizeof		93316	0					
ANR	93332	SizeofOperand	zend_internal_function		93316	1					
ANR	93333	ExpressionStatement	callstatic_user_call -> type = ZEND_INTERNAL_FUNCTION	1164:1:38747:38802	93316	1	True				
ANR	93334	AssignmentExpression	callstatic_user_call -> type = ZEND_INTERNAL_FUNCTION		93316	0		=			
ANR	93335	PtrMemberAccess	callstatic_user_call -> type		93316	0					
ANR	93336	Identifier	callstatic_user_call		93316	0					
ANR	93337	Identifier	type		93316	1					
ANR	93338	Identifier	ZEND_INTERNAL_FUNCTION		93316	1					
ANR	93339	ExpressionStatement	callstatic_user_call -> module = ( ce -> type == ZEND_INTERNAL_CLASS ) ? ce -> info . internal . module : NULL	1165:1:38805:38905	93316	2	True				
ANR	93340	AssignmentExpression	callstatic_user_call -> module = ( ce -> type == ZEND_INTERNAL_CLASS ) ? ce -> info . internal . module : NULL		93316	0		=			
ANR	93341	PtrMemberAccess	callstatic_user_call -> module		93316	0					
ANR	93342	Identifier	callstatic_user_call		93316	0					
ANR	93343	Identifier	module		93316	1					
ANR	93344	ConditionalExpression	( ce -> type == ZEND_INTERNAL_CLASS ) ? ce -> info . internal . module : NULL		93316	1					
ANR	93345	Condition	ce -> type == ZEND_INTERNAL_CLASS		93316	0					
ANR	93346	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		93316	0		==			
ANR	93347	PtrMemberAccess	ce -> type		93316	0					
ANR	93348	Identifier	ce		93316	0					
ANR	93349	Identifier	type		93316	1					
ANR	93350	Identifier	ZEND_INTERNAL_CLASS		93316	1					
ANR	93351	MemberAccess	ce -> info . internal . module		93316	1					
ANR	93352	MemberAccess	ce -> info . internal		93316	0					
ANR	93353	PtrMemberAccess	ce -> info		93316	0					
ANR	93354	Identifier	ce		93316	0					
ANR	93355	Identifier	info		93316	1					
ANR	93356	Identifier	internal		93316	1					
ANR	93357	Identifier	module		93316	1					
ANR	93358	Identifier	NULL		93316	2					
ANR	93359	ExpressionStatement	callstatic_user_call -> handler = zend_std_callstatic_user_call	1166:1:38908:38970	93316	3	True				
ANR	93360	AssignmentExpression	callstatic_user_call -> handler = zend_std_callstatic_user_call		93316	0		=			
ANR	93361	PtrMemberAccess	callstatic_user_call -> handler		93316	0					
ANR	93362	Identifier	callstatic_user_call		93316	0					
ANR	93363	Identifier	handler		93316	1					
ANR	93364	Identifier	zend_std_callstatic_user_call		93316	1					
ANR	93365	ExpressionStatement	callstatic_user_call -> arg_info = NULL	1167:1:38973:39010	93316	4	True				
ANR	93366	AssignmentExpression	callstatic_user_call -> arg_info = NULL		93316	0		=			
ANR	93367	PtrMemberAccess	callstatic_user_call -> arg_info		93316	0					
ANR	93368	Identifier	callstatic_user_call		93316	0					
ANR	93369	Identifier	arg_info		93316	1					
ANR	93370	Identifier	NULL		93316	1					
ANR	93371	ExpressionStatement	callstatic_user_call -> num_args = 0	1168:1:39013:39047	93316	5	True				
ANR	93372	AssignmentExpression	callstatic_user_call -> num_args = 0		93316	0		=			
ANR	93373	PtrMemberAccess	callstatic_user_call -> num_args		93316	0					
ANR	93374	Identifier	callstatic_user_call		93316	0					
ANR	93375	Identifier	num_args		93316	1					
ANR	93376	PrimaryExpression	0		93316	1					
ANR	93377	ExpressionStatement	callstatic_user_call -> scope = ce	1169:1:39050:39085	93316	6	True				
ANR	93378	AssignmentExpression	callstatic_user_call -> scope = ce		93316	0		=			
ANR	93379	PtrMemberAccess	callstatic_user_call -> scope		93316	0					
ANR	93380	Identifier	callstatic_user_call		93316	0					
ANR	93381	Identifier	scope		93316	1					
ANR	93382	Identifier	ce		93316	1					
ANR	93383	ExpressionStatement	callstatic_user_call -> fn_flags = ZEND_ACC_STATIC | ZEND_ACC_PUBLIC | ZEND_ACC_CALL_VIA_HANDLER	1170:1:39088:39182	93316	7	True				
ANR	93384	AssignmentExpression	callstatic_user_call -> fn_flags = ZEND_ACC_STATIC | ZEND_ACC_PUBLIC | ZEND_ACC_CALL_VIA_HANDLER		93316	0		=			
ANR	93385	PtrMemberAccess	callstatic_user_call -> fn_flags		93316	0					
ANR	93386	Identifier	callstatic_user_call		93316	0					
ANR	93387	Identifier	fn_flags		93316	1					
ANR	93388	InclusiveOrExpression	ZEND_ACC_STATIC | ZEND_ACC_PUBLIC | ZEND_ACC_CALL_VIA_HANDLER		93316	1		|			
ANR	93389	Identifier	ZEND_ACC_STATIC		93316	0					
ANR	93390	InclusiveOrExpression	ZEND_ACC_PUBLIC | ZEND_ACC_CALL_VIA_HANDLER		93316	1		|			
ANR	93391	Identifier	ZEND_ACC_PUBLIC		93316	0					
ANR	93392	Identifier	ZEND_ACC_CALL_VIA_HANDLER		93316	1					
ANR	93393	ExpressionStatement	"callstatic_user_call -> function_name = estrndup ( method_name , method_len )"	1171:1:39185:39256	93316	8	True				
ANR	93394	AssignmentExpression	"callstatic_user_call -> function_name = estrndup ( method_name , method_len )"		93316	0		=			
ANR	93395	PtrMemberAccess	callstatic_user_call -> function_name		93316	0					
ANR	93396	Identifier	callstatic_user_call		93316	0					
ANR	93397	Identifier	function_name		93316	1					
ANR	93398	CallExpression	"estrndup ( method_name , method_len )"		93316	1					
ANR	93399	Callee	estrndup		93316	0					
ANR	93400	Identifier	estrndup		93316	0					
ANR	93401	ArgumentList	method_name		93316	1					
ANR	93402	Argument	method_name		93316	0					
ANR	93403	Identifier	method_name		93316	0					
ANR	93404	Argument	method_len		93316	1					
ANR	93405	Identifier	method_len		93316	0					
ANR	93406	ReturnStatement	return ( zend_function * ) callstatic_user_call ;	1173:1:39260:39304	93316	9	True				
ANR	93407	CastExpression	( zend_function * ) callstatic_user_call		93316	0					
ANR	93408	CastTarget	zend_function *		93316	0					
ANR	93409	Identifier	callstatic_user_call		93316	1					
ANR	93410	ReturnType	static inline union _zend_function *		93316	1					
ANR	93411	Identifier	zend_get_user_callstatic_function		93316	2					
ANR	93412	ParameterList	"zend_class_entry * ce , const char * method_name , int method_len"		93316	3					
ANR	93413	Parameter	zend_class_entry * ce	1161:70:38582:38601	93316	0	True				
ANR	93414	ParameterType	zend_class_entry *		93316	0					
ANR	93415	Identifier	ce		93316	1					
ANR	93416	Parameter	const char * method_name	1161:92:38604:38626	93316	1	True				
ANR	93417	ParameterType	const char *		93316	0					
ANR	93418	Identifier	method_name		93316	1					
ANR	93419	Parameter	int method_len	1161:117:38629:38642	93316	2	True				
ANR	93420	ParameterType	int		93316	0					
ANR	93421	Identifier	method_len		93316	1					
ANR	93422	CFGEntryNode	ENTRY		93316		True				
ANR	93423	CFGExitNode	EXIT		93316		True				
ANR	93424	Symbol	ce -> type		93316						
ANR	93425	Symbol	ZEND_ACC_PUBLIC		93316						
ANR	93426	Symbol	* ce		93316						
ANR	93427	Symbol	zend_std_callstatic_user_call		93316						
ANR	93428	Symbol	ZEND_INTERNAL_FUNCTION		93316						
ANR	93429	Symbol	emalloc		93316						
ANR	93430	Symbol	estrndup		93316						
ANR	93431	Symbol	method_name		93316						
ANR	93432	Symbol	callstatic_user_call -> scope		93316						
ANR	93433	Symbol	callstatic_user_call -> num_args		93316						
ANR	93434	Symbol	ZEND_ACC_STATIC		93316						
ANR	93435	Symbol	method_len		93316						
ANR	93436	Symbol	* callstatic_user_call		93316						
ANR	93437	Symbol	ce -> info . internal		93316						
ANR	93438	Symbol	callstatic_user_call -> fn_flags		93316						
ANR	93439	Symbol	ZEND_INTERNAL_CLASS		93316						
ANR	93440	Symbol	ce		93316						
ANR	93441	Symbol	NULL		93316						
ANR	93442	Symbol	callstatic_user_call		93316						
ANR	93443	Symbol	ce -> info . internal . module		93316						
ANR	93444	Symbol	callstatic_user_call -> type		93316						
ANR	93445	Symbol	callstatic_user_call -> arg_info		93316						
ANR	93446	Symbol	ce -> info		93316						
ANR	93447	Symbol	callstatic_user_call -> module		93316						
ANR	93448	Symbol	callstatic_user_call -> handler		93316						
ANR	93449	Symbol	ZEND_ACC_CALL_VIA_HANDLER		93316						
ANR	93450	Symbol	callstatic_user_call -> function_name		93316						
ANR	93451	DeclStmt									
ANR	93452	Decl							zend_function	zend_function *	fbc
ANR	93453	DeclStmt									
ANR	93454	Decl							char	char *	lc_class_name
ANR	93455	Decl							char	char *	lc_function_name
ANR	93456	DeclStmt									
ANR	93457	Decl							ulong	ulong	hash_value
ANR	93458	DeclStmt									
ANR	93459	Decl							zend_function	zend_function *	updated_fbc
ANR	93460	DeclStmt									
ANR	93461	Decl							zend_property_info	zend_property_info *	property_info
ANR	93462	DeclStmt									
ANR	93463	Decl							ulong	ulong	hash_value
ANR	93464	DeclStmt									
ANR	93465	Decl							zend_object	zend_object *	zobj
ANR	93466	DeclStmt									
ANR	93467	Decl							zend_function	zend_function *	constructor
ANR	93468	DeclStmt									
ANR	93469	Decl							zend_object	zend_object *	zobj1
ANR	93470	Decl							zend_object	zend_object *	zobj2
ANR	93471	DeclStmt									
ANR	93472	Decl							int	int	i
ANR	93473	DeclStmt									
ANR	93474	Decl							zval	zval	result
ANR	93475	DeclStmt									
ANR	93476	Decl							zend_object	zend_object *	zobj
ANR	93477	DeclStmt									
ANR	93478	Decl							int	int	result
ANR	93479	DeclStmt									
ANR	93480	Decl							zval	zval * *	value
ANR	93481	DeclStmt									
ANR	93482	Decl							zval	zval *	tmp_member
ANR	93483	DeclStmt									
ANR	93484	Decl							zend_property_info	zend_property_info *	property_info
ANR	93485	DeclStmt									
ANR	93486	Decl							zend_guard	zend_guard *	guard
ANR	93487	DeclStmt									
ANR	93488	Decl							zval	zval *	rv
ANR	93489	DeclStmt									
ANR	93490	Decl							zend_object	zend_object *	zobj
ANR	93491	Function	zend_std_object_get_class_name	1536:0:51440:51876							
ANR	93492	FunctionDef	"zend_std_object_get_class_name (const zval * object , const char * * class_name , zend_uint * class_name_len , int parent TSRMLS_DC)"		93491	0					
ANR	93493	CompoundStatement		1537:0:51579:51876	93491	0					
ANR	93494	IdentifierDeclStatement	zend_object * zobj ;	1538:1:51582:51599	93491	0	True				
ANR	93495	IdentifierDecl	* zobj		93491	0					
ANR	93496	IdentifierDeclType	zend_object *		93491	0					
ANR	93497	Identifier	zobj		93491	1					
ANR	93498	IdentifierDeclStatement	zend_class_entry * ce ;	1539:1:51602:51622	93491	1	True				
ANR	93499	IdentifierDecl	* ce		93491	0					
ANR	93500	IdentifierDeclType	zend_class_entry *		93491	0					
ANR	93501	Identifier	ce		93491	1					
ANR	93502	ExpressionStatement	zobj = Z_OBJ_P ( object )	1540:1:51625:51647	93491	2	True				
ANR	93503	AssignmentExpression	zobj = Z_OBJ_P ( object )		93491	0		=			
ANR	93504	Identifier	zobj		93491	0					
ANR	93505	CallExpression	Z_OBJ_P ( object )		93491	1					
ANR	93506	Callee	Z_OBJ_P		93491	0					
ANR	93507	Identifier	Z_OBJ_P		93491	0					
ANR	93508	ArgumentList	object		93491	1					
ANR	93509	Argument	object		93491	0					
ANR	93510	Identifier	object		93491	0					
ANR	93511	IfStatement	if ( parent )		93491	3					
ANR	93512	Condition	parent	1542:5:51655:51660	93491	0	True				
ANR	93513	Identifier	parent		93491	0					
ANR	93514	CompoundStatement		6:13:83:83	93491	1					
ANR	93515	IfStatement	if ( ! zobj -> ce -> parent )		93491	0					
ANR	93516	Condition	! zobj -> ce -> parent	1543:6:51671:51687	93491	0	True				
ANR	93517	UnaryOperationExpression	! zobj -> ce -> parent		93491	0					
ANR	93518	UnaryOperator	!		93491	0					
ANR	93519	PtrMemberAccess	zobj -> ce -> parent		93491	1					
ANR	93520	PtrMemberAccess	zobj -> ce		93491	0					
ANR	93521	Identifier	zobj		93491	0					
ANR	93522	Identifier	ce		93491	1					
ANR	93523	Identifier	parent		93491	1					
ANR	93524	CompoundStatement		7:25:110:110	93491	1					
ANR	93525	ReturnStatement	return FAILURE ;	1544:3:51695:51709	93491	0	True				
ANR	93526	Identifier	FAILURE		93491	0					
ANR	93527	ExpressionStatement	ce = zobj -> ce -> parent	1546:2:51717:51738	93491	1	True				
ANR	93528	AssignmentExpression	ce = zobj -> ce -> parent		93491	0		=			
ANR	93529	Identifier	ce		93491	0					
ANR	93530	PtrMemberAccess	zobj -> ce -> parent		93491	1					
ANR	93531	PtrMemberAccess	zobj -> ce		93491	0					
ANR	93532	Identifier	zobj		93491	0					
ANR	93533	Identifier	ce		93491	1					
ANR	93534	Identifier	parent		93491	1					
ANR	93535	ElseStatement	else		93491	0					
ANR	93536	CompoundStatement		11:8:168:168	93491	0					
ANR	93537	ExpressionStatement	ce = zobj -> ce	1548:2:51752:51765	93491	0	True				
ANR	93538	AssignmentExpression	ce = zobj -> ce		93491	0		=			
ANR	93539	Identifier	ce		93491	0					
ANR	93540	PtrMemberAccess	zobj -> ce		93491	1					
ANR	93541	Identifier	zobj		93491	0					
ANR	93542	Identifier	ce		93491	1					
ANR	93543	ExpressionStatement	* class_name_len = ce -> name_length	1551:1:51772:51805	93491	4	True				
ANR	93544	AssignmentExpression	* class_name_len = ce -> name_length		93491	0		=			
ANR	93545	UnaryOperationExpression	* class_name_len		93491	0					
ANR	93546	UnaryOperator	*		93491	0					
ANR	93547	Identifier	class_name_len		93491	1					
ANR	93548	PtrMemberAccess	ce -> name_length		93491	1					
ANR	93549	Identifier	ce		93491	0					
ANR	93550	Identifier	name_length		93491	1					
ANR	93551	ExpressionStatement	"* class_name = estrndup ( ce -> name , ce -> name_length )"	1552:1:51808:51857	93491	5	True				
ANR	93552	AssignmentExpression	"* class_name = estrndup ( ce -> name , ce -> name_length )"		93491	0		=			
ANR	93553	UnaryOperationExpression	* class_name		93491	0					
ANR	93554	UnaryOperator	*		93491	0					
ANR	93555	Identifier	class_name		93491	1					
ANR	93556	CallExpression	"estrndup ( ce -> name , ce -> name_length )"		93491	1					
ANR	93557	Callee	estrndup		93491	0					
ANR	93558	Identifier	estrndup		93491	0					
ANR	93559	ArgumentList	ce -> name		93491	1					
ANR	93560	Argument	ce -> name		93491	0					
ANR	93561	PtrMemberAccess	ce -> name		93491	0					
ANR	93562	Identifier	ce		93491	0					
ANR	93563	Identifier	name		93491	1					
ANR	93564	Argument	ce -> name_length		93491	1					
ANR	93565	PtrMemberAccess	ce -> name_length		93491	0					
ANR	93566	Identifier	ce		93491	0					
ANR	93567	Identifier	name_length		93491	1					
ANR	93568	ReturnStatement	return SUCCESS ;	1553:1:51860:51874	93491	6	True				
ANR	93569	Identifier	SUCCESS		93491	0					
ANR	93570	ReturnType	int		93491	1					
ANR	93571	Identifier	zend_std_object_get_class_name		93491	2					
ANR	93572	ParameterList	"const zval * object , const char * * class_name , zend_uint * class_name_len , int parent TSRMLS_DC"		93491	3					
ANR	93573	Parameter	const zval * object	1536:35:51475:51492	93491	0	True				
ANR	93574	ParameterType	const zval *		93491	0					
ANR	93575	Identifier	object		93491	1					
ANR	93576	Parameter	const char * * class_name	1536:55:51495:51517	93491	1	True				
ANR	93577	ParameterType	const char * *		93491	0					
ANR	93578	Identifier	class_name		93491	1					
ANR	93579	Parameter	zend_uint * class_name_len	1536:80:51520:51544	93491	2	True				
ANR	93580	ParameterType	zend_uint *		93491	0					
ANR	93581	Identifier	class_name_len		93491	1					
ANR	93582	Parameter	int parent TSRMLS_DC	1536:107:51547:51566	93491	3	True				
ANR	93583	ParameterType	int parent		93491	0					
ANR	93584	Identifier	TSRMLS_DC		93491	1					
ANR	93585	CFGEntryNode	ENTRY		93491		True				
ANR	93586	CFGExitNode	EXIT		93491		True				
ANR	93587	Symbol	parent		93491						
ANR	93588	Symbol	ce -> name_length		93491						
ANR	93589	Symbol	ce		93491						
ANR	93590	Symbol	* class_name		93491						
ANR	93591	Symbol	SUCCESS		93491						
ANR	93592	Symbol	zobj		93491						
ANR	93593	Symbol	* zobj -> ce		93491						
ANR	93594	Symbol	Z_OBJ_P		93491						
ANR	93595	Symbol	* * zobj		93491						
ANR	93596	Symbol	zobj -> ce		93491						
ANR	93597	Symbol	* ce		93491						
ANR	93598	Symbol	TSRMLS_DC		93491						
ANR	93599	Symbol	FAILURE		93491						
ANR	93600	Symbol	* class_name_len		93491						
ANR	93601	Symbol	estrndup		93491						
ANR	93602	Symbol	* zobj		93491						
ANR	93603	Symbol	zobj -> ce -> parent		93491						
ANR	93604	Symbol	ce -> name		93491						
ANR	93605	Symbol	class_name_len		93491						
ANR	93606	Symbol	class_name		93491						
ANR	93607	Symbol	object		93491						
ANR	93608	Function	zend_std_cast_object_tostring	1557:0:51889:53822							
ANR	93609	FunctionDef	"zend_std_cast_object_tostring (zval * readobj , zval * writeobj , int type TSRMLS_DC)"		93608	0					
ANR	93610	CompoundStatement		1558:0:51993:53822	93608	0					
ANR	93611	IdentifierDeclStatement	zval * retval ;	1559:1:51996:52008	93608	0	True				
ANR	93612	IdentifierDecl	* retval		93608	0					
ANR	93613	IdentifierDeclType	zval *		93608	0					
ANR	93614	Identifier	retval		93608	1					
ANR	93615	IdentifierDeclStatement	zend_class_entry * ce ;	1560:1:52011:52031	93608	1	True				
ANR	93616	IdentifierDecl	* ce		93608	0					
ANR	93617	IdentifierDeclType	zend_class_entry *		93608	0					
ANR	93618	Identifier	ce		93608	1					
ANR	93619	SwitchStatement	switch ( type )		93608	2					
ANR	93620	Condition	type	1562:9:52043:52046	93608	0	True				
ANR	93621	Identifier	type		93608	0					
ANR	93622	CompoundStatement		5:15:55:55	93608	1					
ANR	93623	Label	case IS_STRING :	1563:2:52053:52067	93608	0	True				
ANR	93624	Identifier	IS_STRING		93608	0					
ANR	93625	ExpressionStatement	ce = Z_OBJCE_P ( readobj )	1564:3:52072:52095	93608	1	True				
ANR	93626	AssignmentExpression	ce = Z_OBJCE_P ( readobj )		93608	0		=			
ANR	93627	Identifier	ce		93608	0					
ANR	93628	CallExpression	Z_OBJCE_P ( readobj )		93608	1					
ANR	93629	Callee	Z_OBJCE_P		93608	0					
ANR	93630	Identifier	Z_OBJCE_P		93608	0					
ANR	93631	ArgumentList	readobj		93608	1					
ANR	93632	Argument	readobj		93608	0					
ANR	93633	Identifier	readobj		93608	0					
ANR	93634	IfStatement	"if ( ce -> __tostring && ( zend_call_method_with_0_params ( & readobj , ce , & ce -> __tostring , ""__tostring"" , & retval ) || EG ( exception ) ) )"		93608	2					
ANR	93635	Condition	"ce -> __tostring && ( zend_call_method_with_0_params ( & readobj , ce , & ce -> __tostring , ""__tostring"" , & retval ) || EG ( exception ) )"	1565:7:52104:52228	93608	0	True				
ANR	93636	AndExpression	"ce -> __tostring && ( zend_call_method_with_0_params ( & readobj , ce , & ce -> __tostring , ""__tostring"" , & retval ) || EG ( exception ) )"		93608	0		&&			
ANR	93637	PtrMemberAccess	ce -> __tostring		93608	0					
ANR	93638	Identifier	ce		93608	0					
ANR	93639	Identifier	__tostring		93608	1					
ANR	93640	OrExpression	"zend_call_method_with_0_params ( & readobj , ce , & ce -> __tostring , ""__tostring"" , & retval ) || EG ( exception )"		93608	1		||			
ANR	93641	CallExpression	"zend_call_method_with_0_params ( & readobj , ce , & ce -> __tostring , ""__tostring"" , & retval )"		93608	0					
ANR	93642	Callee	zend_call_method_with_0_params		93608	0					
ANR	93643	Identifier	zend_call_method_with_0_params		93608	0					
ANR	93644	ArgumentList	& readobj		93608	1					
ANR	93645	Argument	& readobj		93608	0					
ANR	93646	UnaryOperationExpression	& readobj		93608	0					
ANR	93647	UnaryOperator	&		93608	0					
ANR	93648	Identifier	readobj		93608	1					
ANR	93649	Argument	ce		93608	1					
ANR	93650	Identifier	ce		93608	0					
ANR	93651	Argument	& ce -> __tostring		93608	2					
ANR	93652	UnaryOperationExpression	& ce -> __tostring		93608	0					
ANR	93653	UnaryOperator	&		93608	0					
ANR	93654	PtrMemberAccess	ce -> __tostring		93608	1					
ANR	93655	Identifier	ce		93608	0					
ANR	93656	Identifier	__tostring		93608	1					
ANR	93657	Argument	"""__tostring"""		93608	3					
ANR	93658	PrimaryExpression	"""__tostring"""		93608	0					
ANR	93659	Argument	& retval		93608	4					
ANR	93660	UnaryOperationExpression	& retval		93608	0					
ANR	93661	UnaryOperator	&		93608	0					
ANR	93662	Identifier	retval		93608	1					
ANR	93663	CallExpression	EG ( exception )		93608	1					
ANR	93664	Callee	EG		93608	0					
ANR	93665	Identifier	EG		93608	0					
ANR	93666	ArgumentList	exception		93608	1					
ANR	93667	Argument	exception		93608	0					
ANR	93668	Identifier	exception		93608	0					
ANR	93669	CompoundStatement		9:109:237:237	93608	1					
ANR	93670	IfStatement	if ( UNEXPECTED ( EG ( exception ) != NULL ) )		93608	0					
ANR	93671	Condition	UNEXPECTED ( EG ( exception ) != NULL )	1567:8:52241:52273	93608	0	True				
ANR	93672	CallExpression	UNEXPECTED ( EG ( exception ) != NULL )		93608	0					
ANR	93673	Callee	UNEXPECTED		93608	0					
ANR	93674	Identifier	UNEXPECTED		93608	0					
ANR	93675	ArgumentList	EG ( exception ) != NULL		93608	1					
ANR	93676	Argument	EG ( exception ) != NULL		93608	0					
ANR	93677	EqualityExpression	EG ( exception ) != NULL		93608	0		!=			
ANR	93678	CallExpression	EG ( exception )		93608	0					
ANR	93679	Callee	EG		93608	0					
ANR	93680	Identifier	EG		93608	0					
ANR	93681	ArgumentList	exception		93608	1					
ANR	93682	Argument	exception		93608	0					
ANR	93683	Identifier	exception		93608	0					
ANR	93684	Identifier	NULL		93608	1					
ANR	93685	CompoundStatement		10:43:282:282	93608	1					
ANR	93686	IfStatement	if ( retval )		93608	0					
ANR	93687	Condition	retval	1568:9:52287:52292	93608	0	True				
ANR	93688	Identifier	retval		93608	0					
ANR	93689	CompoundStatement		11:17:301:301	93608	1					
ANR	93690	ExpressionStatement	zval_ptr_dtor ( & retval )	1569:6:52303:52325	93608	0	True				
ANR	93691	CallExpression	zval_ptr_dtor ( & retval )		93608	0					
ANR	93692	Callee	zval_ptr_dtor		93608	0					
ANR	93693	Identifier	zval_ptr_dtor		93608	0					
ANR	93694	ArgumentList	& retval		93608	1					
ANR	93695	Argument	& retval		93608	0					
ANR	93696	UnaryOperationExpression	& retval		93608	0					
ANR	93697	UnaryOperator	&		93608	0					
ANR	93698	Identifier	retval		93608	1					
ANR	93699	ExpressionStatement	EG ( exception ) = NULL	1571:5:52339:52359	93608	1	True				
ANR	93700	AssignmentExpression	EG ( exception ) = NULL		93608	0		=			
ANR	93701	CallExpression	EG ( exception )		93608	0					
ANR	93702	Callee	EG		93608	0					
ANR	93703	Identifier	EG		93608	0					
ANR	93704	ArgumentList	exception		93608	1					
ANR	93705	Argument	exception		93608	0					
ANR	93706	Identifier	exception		93608	0					
ANR	93707	Identifier	NULL		93608	1					
ANR	93708	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Method %s::__toString() must not throw an exception"" , ce -> name )"	1572:5:52366:52459	93608	2	True				
ANR	93709	CallExpression	"zend_error_noreturn ( E_ERROR , ""Method %s::__toString() must not throw an exception"" , ce -> name )"		93608	0					
ANR	93710	Callee	zend_error_noreturn		93608	0					
ANR	93711	Identifier	zend_error_noreturn		93608	0					
ANR	93712	ArgumentList	E_ERROR		93608	1					
ANR	93713	Argument	E_ERROR		93608	0					
ANR	93714	Identifier	E_ERROR		93608	0					
ANR	93715	Argument	"""Method %s::__toString() must not throw an exception"""		93608	1					
ANR	93716	PrimaryExpression	"""Method %s::__toString() must not throw an exception"""		93608	0					
ANR	93717	Argument	ce -> name		93608	2					
ANR	93718	PtrMemberAccess	ce -> name		93608	0					
ANR	93719	Identifier	ce		93608	0					
ANR	93720	Identifier	name		93608	1					
ANR	93721	ReturnStatement	return FAILURE ;	1573:5:52466:52480	93608	3	True				
ANR	93722	Identifier	FAILURE		93608	0					
ANR	93723	IfStatement	if ( EXPECTED ( Z_TYPE_P ( retval ) == IS_STRING ) )		93608	1					
ANR	93724	Condition	EXPECTED ( Z_TYPE_P ( retval ) == IS_STRING )	1575:8:52496:52534	93608	0	True				
ANR	93725	CallExpression	EXPECTED ( Z_TYPE_P ( retval ) == IS_STRING )		93608	0					
ANR	93726	Callee	EXPECTED		93608	0					
ANR	93727	Identifier	EXPECTED		93608	0					
ANR	93728	ArgumentList	Z_TYPE_P ( retval ) == IS_STRING		93608	1					
ANR	93729	Argument	Z_TYPE_P ( retval ) == IS_STRING		93608	0					
ANR	93730	EqualityExpression	Z_TYPE_P ( retval ) == IS_STRING		93608	0		==			
ANR	93731	CallExpression	Z_TYPE_P ( retval )		93608	0					
ANR	93732	Callee	Z_TYPE_P		93608	0					
ANR	93733	Identifier	Z_TYPE_P		93608	0					
ANR	93734	ArgumentList	retval		93608	1					
ANR	93735	Argument	retval		93608	0					
ANR	93736	Identifier	retval		93608	0					
ANR	93737	Identifier	IS_STRING		93608	1					
ANR	93738	CompoundStatement		18:49:543:543	93608	1					
ANR	93739	ExpressionStatement	INIT_PZVAL ( writeobj )	1576:5:52544:52564	93608	0	True				
ANR	93740	CallExpression	INIT_PZVAL ( writeobj )		93608	0					
ANR	93741	Callee	INIT_PZVAL		93608	0					
ANR	93742	Identifier	INIT_PZVAL		93608	0					
ANR	93743	ArgumentList	writeobj		93608	1					
ANR	93744	Argument	writeobj		93608	0					
ANR	93745	Identifier	writeobj		93608	0					
ANR	93746	IfStatement	if ( readobj == writeobj )		93608	1					
ANR	93747	Condition	readobj == writeobj	1577:9:52575:52593	93608	0	True				
ANR	93748	EqualityExpression	readobj == writeobj		93608	0		==			
ANR	93749	Identifier	readobj		93608	0					
ANR	93750	Identifier	writeobj		93608	1					
ANR	93751	CompoundStatement		20:30:602:602	93608	1					
ANR	93752	ExpressionStatement	zval_dtor ( readobj )	1578:6:52604:52622	93608	0	True				
ANR	93753	CallExpression	zval_dtor ( readobj )		93608	0					
ANR	93754	Callee	zval_dtor		93608	0					
ANR	93755	Identifier	zval_dtor		93608	0					
ANR	93756	ArgumentList	readobj		93608	1					
ANR	93757	Argument	readobj		93608	0					
ANR	93758	Identifier	readobj		93608	0					
ANR	93759	ExpressionStatement	"ZVAL_ZVAL ( writeobj , retval , 1 , 1 )"	1580:5:52636:52669	93608	2	True				
ANR	93760	CallExpression	"ZVAL_ZVAL ( writeobj , retval , 1 , 1 )"		93608	0					
ANR	93761	Callee	ZVAL_ZVAL		93608	0					
ANR	93762	Identifier	ZVAL_ZVAL		93608	0					
ANR	93763	ArgumentList	writeobj		93608	1					
ANR	93764	Argument	writeobj		93608	0					
ANR	93765	Identifier	writeobj		93608	0					
ANR	93766	Argument	retval		93608	1					
ANR	93767	Identifier	retval		93608	0					
ANR	93768	Argument	1		93608	2					
ANR	93769	PrimaryExpression	1		93608	0					
ANR	93770	Argument	1		93608	3					
ANR	93771	PrimaryExpression	1		93608	0					
ANR	93772	IfStatement	if ( Z_TYPE_P ( writeobj ) != type )		93608	3					
ANR	93773	Condition	Z_TYPE_P ( writeobj ) != type	1581:9:52680:52705	93608	0	True				
ANR	93774	EqualityExpression	Z_TYPE_P ( writeobj ) != type		93608	0		!=			
ANR	93775	CallExpression	Z_TYPE_P ( writeobj )		93608	0					
ANR	93776	Callee	Z_TYPE_P		93608	0					
ANR	93777	Identifier	Z_TYPE_P		93608	0					
ANR	93778	ArgumentList	writeobj		93608	1					
ANR	93779	Argument	writeobj		93608	0					
ANR	93780	Identifier	writeobj		93608	0					
ANR	93781	Identifier	type		93608	1					
ANR	93782	CompoundStatement		24:37:714:714	93608	1					
ANR	93783	ExpressionStatement	"convert_to_explicit_type ( writeobj , type )"	1582:6:52716:52756	93608	0	True				
ANR	93784	CallExpression	"convert_to_explicit_type ( writeobj , type )"		93608	0					
ANR	93785	Callee	convert_to_explicit_type		93608	0					
ANR	93786	Identifier	convert_to_explicit_type		93608	0					
ANR	93787	ArgumentList	writeobj		93608	1					
ANR	93788	Argument	writeobj		93608	0					
ANR	93789	Identifier	writeobj		93608	0					
ANR	93790	Argument	type		93608	1					
ANR	93791	Identifier	type		93608	0					
ANR	93792	ReturnStatement	return SUCCESS ;	1584:5:52770:52784	93608	4	True				
ANR	93793	Identifier	SUCCESS		93608	0					
ANR	93794	ElseStatement	else		93608	0					
ANR	93795	CompoundStatement		28:11:803:803	93608	0					
ANR	93796	ExpressionStatement	zval_ptr_dtor ( & retval )	1586:5:52804:52826	93608	0	True				
ANR	93797	CallExpression	zval_ptr_dtor ( & retval )		93608	0					
ANR	93798	Callee	zval_ptr_dtor		93608	0					
ANR	93799	Identifier	zval_ptr_dtor		93608	0					
ANR	93800	ArgumentList	& retval		93608	1					
ANR	93801	Argument	& retval		93608	0					
ANR	93802	UnaryOperationExpression	& retval		93608	0					
ANR	93803	UnaryOperator	&		93608	0					
ANR	93804	Identifier	retval		93608	1					
ANR	93805	ExpressionStatement	INIT_PZVAL ( writeobj )	1587:5:52833:52853	93608	1	True				
ANR	93806	CallExpression	INIT_PZVAL ( writeobj )		93608	0					
ANR	93807	Callee	INIT_PZVAL		93608	0					
ANR	93808	Identifier	INIT_PZVAL		93608	0					
ANR	93809	ArgumentList	writeobj		93608	1					
ANR	93810	Argument	writeobj		93608	0					
ANR	93811	Identifier	writeobj		93608	0					
ANR	93812	IfStatement	if ( readobj == writeobj )		93608	2					
ANR	93813	Condition	readobj == writeobj	1588:9:52864:52882	93608	0	True				
ANR	93814	EqualityExpression	readobj == writeobj		93608	0		==			
ANR	93815	Identifier	readobj		93608	0					
ANR	93816	Identifier	writeobj		93608	1					
ANR	93817	CompoundStatement		31:30:891:891	93608	1					
ANR	93818	ExpressionStatement	zval_dtor ( readobj )	1589:6:52893:52911	93608	0	True				
ANR	93819	CallExpression	zval_dtor ( readobj )		93608	0					
ANR	93820	Callee	zval_dtor		93608	0					
ANR	93821	Identifier	zval_dtor		93608	0					
ANR	93822	ArgumentList	readobj		93608	1					
ANR	93823	Argument	readobj		93608	0					
ANR	93824	Identifier	readobj		93608	0					
ANR	93825	ExpressionStatement	ZVAL_EMPTY_STRING ( writeobj )	1591:5:52925:52952	93608	3	True				
ANR	93826	CallExpression	ZVAL_EMPTY_STRING ( writeobj )		93608	0					
ANR	93827	Callee	ZVAL_EMPTY_STRING		93608	0					
ANR	93828	Identifier	ZVAL_EMPTY_STRING		93608	0					
ANR	93829	ArgumentList	writeobj		93608	1					
ANR	93830	Argument	writeobj		93608	0					
ANR	93831	Identifier	writeobj		93608	0					
ANR	93832	ExpressionStatement	"zend_error ( E_RECOVERABLE_ERROR , ""Method %s::__toString() must return a string value"" , ce -> name )"	1592:5:52959:53054	93608	4	True				
ANR	93833	CallExpression	"zend_error ( E_RECOVERABLE_ERROR , ""Method %s::__toString() must return a string value"" , ce -> name )"		93608	0					
ANR	93834	Callee	zend_error		93608	0					
ANR	93835	Identifier	zend_error		93608	0					
ANR	93836	ArgumentList	E_RECOVERABLE_ERROR		93608	1					
ANR	93837	Argument	E_RECOVERABLE_ERROR		93608	0					
ANR	93838	Identifier	E_RECOVERABLE_ERROR		93608	0					
ANR	93839	Argument	"""Method %s::__toString() must return a string value"""		93608	1					
ANR	93840	PrimaryExpression	"""Method %s::__toString() must return a string value"""		93608	0					
ANR	93841	Argument	ce -> name		93608	2					
ANR	93842	PtrMemberAccess	ce -> name		93608	0					
ANR	93843	Identifier	ce		93608	0					
ANR	93844	Identifier	name		93608	1					
ANR	93845	ReturnStatement	return SUCCESS ;	1593:5:53061:53075	93608	5	True				
ANR	93846	Identifier	SUCCESS		93608	0					
ANR	93847	ReturnStatement	return FAILURE ;	1596:3:53091:53105	93608	3	True				
ANR	93848	Identifier	FAILURE		93608	0					
ANR	93849	Label	case IS_BOOL :	1597:2:53109:53121	93608	4	True				
ANR	93850	Identifier	IS_BOOL		93608	0					
ANR	93851	ExpressionStatement	INIT_PZVAL ( writeobj )	1598:3:53126:53146	93608	5	True				
ANR	93852	CallExpression	INIT_PZVAL ( writeobj )		93608	0					
ANR	93853	Callee	INIT_PZVAL		93608	0					
ANR	93854	Identifier	INIT_PZVAL		93608	0					
ANR	93855	ArgumentList	writeobj		93608	1					
ANR	93856	Argument	writeobj		93608	0					
ANR	93857	Identifier	writeobj		93608	0					
ANR	93858	ExpressionStatement	"ZVAL_BOOL ( writeobj , 1 )"	1599:3:53151:53173	93608	6	True				
ANR	93859	CallExpression	"ZVAL_BOOL ( writeobj , 1 )"		93608	0					
ANR	93860	Callee	ZVAL_BOOL		93608	0					
ANR	93861	Identifier	ZVAL_BOOL		93608	0					
ANR	93862	ArgumentList	writeobj		93608	1					
ANR	93863	Argument	writeobj		93608	0					
ANR	93864	Identifier	writeobj		93608	0					
ANR	93865	Argument	1		93608	1					
ANR	93866	PrimaryExpression	1		93608	0					
ANR	93867	ReturnStatement	return SUCCESS ;	1600:3:53178:53192	93608	7	True				
ANR	93868	Identifier	SUCCESS		93608	0					
ANR	93869	Label	case IS_LONG :	1601:2:53196:53208	93608	8	True				
ANR	93870	Identifier	IS_LONG		93608	0					
ANR	93871	ExpressionStatement	ce = Z_OBJCE_P ( readobj )	1602:3:53213:53236	93608	9	True				
ANR	93872	AssignmentExpression	ce = Z_OBJCE_P ( readobj )		93608	0		=			
ANR	93873	Identifier	ce		93608	0					
ANR	93874	CallExpression	Z_OBJCE_P ( readobj )		93608	1					
ANR	93875	Callee	Z_OBJCE_P		93608	0					
ANR	93876	Identifier	Z_OBJCE_P		93608	0					
ANR	93877	ArgumentList	readobj		93608	1					
ANR	93878	Argument	readobj		93608	0					
ANR	93879	Identifier	readobj		93608	0					
ANR	93880	ExpressionStatement	"zend_error ( E_NOTICE , ""Object of class %s could not be converted to int"" , ce -> name )"	1603:3:53241:53323	93608	10	True				
ANR	93881	CallExpression	"zend_error ( E_NOTICE , ""Object of class %s could not be converted to int"" , ce -> name )"		93608	0					
ANR	93882	Callee	zend_error		93608	0					
ANR	93883	Identifier	zend_error		93608	0					
ANR	93884	ArgumentList	E_NOTICE		93608	1					
ANR	93885	Argument	E_NOTICE		93608	0					
ANR	93886	Identifier	E_NOTICE		93608	0					
ANR	93887	Argument	"""Object of class %s could not be converted to int"""		93608	1					
ANR	93888	PrimaryExpression	"""Object of class %s could not be converted to int"""		93608	0					
ANR	93889	Argument	ce -> name		93608	2					
ANR	93890	PtrMemberAccess	ce -> name		93608	0					
ANR	93891	Identifier	ce		93608	0					
ANR	93892	Identifier	name		93608	1					
ANR	93893	ExpressionStatement	INIT_PZVAL ( writeobj )	1604:3:53328:53348	93608	11	True				
ANR	93894	CallExpression	INIT_PZVAL ( writeobj )		93608	0					
ANR	93895	Callee	INIT_PZVAL		93608	0					
ANR	93896	Identifier	INIT_PZVAL		93608	0					
ANR	93897	ArgumentList	writeobj		93608	1					
ANR	93898	Argument	writeobj		93608	0					
ANR	93899	Identifier	writeobj		93608	0					
ANR	93900	IfStatement	if ( readobj == writeobj )		93608	12					
ANR	93901	Condition	readobj == writeobj	1605:7:53357:53375	93608	0	True				
ANR	93902	EqualityExpression	readobj == writeobj		93608	0		==			
ANR	93903	Identifier	readobj		93608	0					
ANR	93904	Identifier	writeobj		93608	1					
ANR	93905	CompoundStatement		48:28:1384:1384	93608	1					
ANR	93906	ExpressionStatement	zval_dtor ( readobj )	1606:4:53384:53402	93608	0	True				
ANR	93907	CallExpression	zval_dtor ( readobj )		93608	0					
ANR	93908	Callee	zval_dtor		93608	0					
ANR	93909	Identifier	zval_dtor		93608	0					
ANR	93910	ArgumentList	readobj		93608	1					
ANR	93911	Argument	readobj		93608	0					
ANR	93912	Identifier	readobj		93608	0					
ANR	93913	ExpressionStatement	"ZVAL_LONG ( writeobj , 1 )"	1608:3:53412:53434	93608	13	True				
ANR	93914	CallExpression	"ZVAL_LONG ( writeobj , 1 )"		93608	0					
ANR	93915	Callee	ZVAL_LONG		93608	0					
ANR	93916	Identifier	ZVAL_LONG		93608	0					
ANR	93917	ArgumentList	writeobj		93608	1					
ANR	93918	Argument	writeobj		93608	0					
ANR	93919	Identifier	writeobj		93608	0					
ANR	93920	Argument	1		93608	1					
ANR	93921	PrimaryExpression	1		93608	0					
ANR	93922	ReturnStatement	return SUCCESS ;	1609:3:53439:53453	93608	14	True				
ANR	93923	Identifier	SUCCESS		93608	0					
ANR	93924	Label	case IS_DOUBLE :	1610:2:53457:53471	93608	15	True				
ANR	93925	Identifier	IS_DOUBLE		93608	0					
ANR	93926	ExpressionStatement	ce = Z_OBJCE_P ( readobj )	1611:3:53476:53499	93608	16	True				
ANR	93927	AssignmentExpression	ce = Z_OBJCE_P ( readobj )		93608	0		=			
ANR	93928	Identifier	ce		93608	0					
ANR	93929	CallExpression	Z_OBJCE_P ( readobj )		93608	1					
ANR	93930	Callee	Z_OBJCE_P		93608	0					
ANR	93931	Identifier	Z_OBJCE_P		93608	0					
ANR	93932	ArgumentList	readobj		93608	1					
ANR	93933	Argument	readobj		93608	0					
ANR	93934	Identifier	readobj		93608	0					
ANR	93935	ExpressionStatement	"zend_error ( E_NOTICE , ""Object of class %s could not be converted to double"" , ce -> name )"	1612:3:53504:53589	93608	17	True				
ANR	93936	CallExpression	"zend_error ( E_NOTICE , ""Object of class %s could not be converted to double"" , ce -> name )"		93608	0					
ANR	93937	Callee	zend_error		93608	0					
ANR	93938	Identifier	zend_error		93608	0					
ANR	93939	ArgumentList	E_NOTICE		93608	1					
ANR	93940	Argument	E_NOTICE		93608	0					
ANR	93941	Identifier	E_NOTICE		93608	0					
ANR	93942	Argument	"""Object of class %s could not be converted to double"""		93608	1					
ANR	93943	PrimaryExpression	"""Object of class %s could not be converted to double"""		93608	0					
ANR	93944	Argument	ce -> name		93608	2					
ANR	93945	PtrMemberAccess	ce -> name		93608	0					
ANR	93946	Identifier	ce		93608	0					
ANR	93947	Identifier	name		93608	1					
ANR	93948	ExpressionStatement	INIT_PZVAL ( writeobj )	1613:3:53594:53614	93608	18	True				
ANR	93949	CallExpression	INIT_PZVAL ( writeobj )		93608	0					
ANR	93950	Callee	INIT_PZVAL		93608	0					
ANR	93951	Identifier	INIT_PZVAL		93608	0					
ANR	93952	ArgumentList	writeobj		93608	1					
ANR	93953	Argument	writeobj		93608	0					
ANR	93954	Identifier	writeobj		93608	0					
ANR	93955	IfStatement	if ( readobj == writeobj )		93608	19					
ANR	93956	Condition	readobj == writeobj	1614:7:53623:53641	93608	0	True				
ANR	93957	EqualityExpression	readobj == writeobj		93608	0		==			
ANR	93958	Identifier	readobj		93608	0					
ANR	93959	Identifier	writeobj		93608	1					
ANR	93960	CompoundStatement		57:28:1650:1650	93608	1					
ANR	93961	ExpressionStatement	zval_dtor ( readobj )	1615:4:53650:53668	93608	0	True				
ANR	93962	CallExpression	zval_dtor ( readobj )		93608	0					
ANR	93963	Callee	zval_dtor		93608	0					
ANR	93964	Identifier	zval_dtor		93608	0					
ANR	93965	ArgumentList	readobj		93608	1					
ANR	93966	Argument	readobj		93608	0					
ANR	93967	Identifier	readobj		93608	0					
ANR	93968	ExpressionStatement	"ZVAL_DOUBLE ( writeobj , 1 )"	1617:3:53678:53702	93608	20	True				
ANR	93969	CallExpression	"ZVAL_DOUBLE ( writeobj , 1 )"		93608	0					
ANR	93970	Callee	ZVAL_DOUBLE		93608	0					
ANR	93971	Identifier	ZVAL_DOUBLE		93608	0					
ANR	93972	ArgumentList	writeobj		93608	1					
ANR	93973	Argument	writeobj		93608	0					
ANR	93974	Identifier	writeobj		93608	0					
ANR	93975	Argument	1		93608	1					
ANR	93976	PrimaryExpression	1		93608	0					
ANR	93977	ReturnStatement	return SUCCESS ;	1618:3:53707:53721	93608	21	True				
ANR	93978	Identifier	SUCCESS		93608	0					
ANR	93979	Label	default :	1619:2:53725:53732	93608	22	True				
ANR	93980	Identifier	default		93608	0					
ANR	93981	ExpressionStatement	INIT_PZVAL ( writeobj )	1620:3:53737:53757	93608	23	True				
ANR	93982	CallExpression	INIT_PZVAL ( writeobj )		93608	0					
ANR	93983	Callee	INIT_PZVAL		93608	0					
ANR	93984	Identifier	INIT_PZVAL		93608	0					
ANR	93985	ArgumentList	writeobj		93608	1					
ANR	93986	Argument	writeobj		93608	0					
ANR	93987	Identifier	writeobj		93608	0					
ANR	93988	ExpressionStatement	Z_TYPE_P ( writeobj ) = IS_NULL	1621:3:53762:53790	93608	24	True				
ANR	93989	AssignmentExpression	Z_TYPE_P ( writeobj ) = IS_NULL		93608	0		=			
ANR	93990	CallExpression	Z_TYPE_P ( writeobj )		93608	0					
ANR	93991	Callee	Z_TYPE_P		93608	0					
ANR	93992	Identifier	Z_TYPE_P		93608	0					
ANR	93993	ArgumentList	writeobj		93608	1					
ANR	93994	Argument	writeobj		93608	0					
ANR	93995	Identifier	writeobj		93608	0					
ANR	93996	Identifier	IS_NULL		93608	1					
ANR	93997	BreakStatement	break ;	1622:3:53795:53800	93608	25	True				
ANR	93998	ReturnStatement	return FAILURE ;	1624:1:53806:53820	93608	3	True				
ANR	93999	Identifier	FAILURE		93608	0					
ANR	94000	ReturnType	ZEND_API int		93608	1					
ANR	94001	Identifier	zend_std_cast_object_tostring		93608	2					
ANR	94002	ParameterList	"zval * readobj , zval * writeobj , int type TSRMLS_DC"		93608	3					
ANR	94003	Parameter	zval * readobj	1557:43:51932:51944	93608	0	True				
ANR	94004	ParameterType	zval *		93608	0					
ANR	94005	Identifier	readobj		93608	1					
ANR	94006	Parameter	zval * writeobj	1557:58:51947:51960	93608	1	True				
ANR	94007	ParameterType	zval *		93608	0					
ANR	94008	Identifier	writeobj		93608	1					
ANR	94009	Parameter	int type TSRMLS_DC	1557:74:51963:51980	93608	2	True				
ANR	94010	ParameterType	int type		93608	0					
ANR	94011	Identifier	TSRMLS_DC		93608	1					
ANR	94012	CFGEntryNode	ENTRY		93608		True				
ANR	94013	CFGExitNode	EXIT		93608		True				
ANR	94014	Symbol	exception		93608						
ANR	94015	Symbol	E_RECOVERABLE_ERROR		93608						
ANR	94016	Symbol	readobj		93608						
ANR	94017	Symbol	writeobj		93608						
ANR	94018	Symbol	* ce		93608						
ANR	94019	Symbol	type		93608						
ANR	94020	Symbol	TSRMLS_DC		93608						
ANR	94021	Symbol	UNEXPECTED		93608						
ANR	94022	Symbol	ce -> __tostring		93608						
ANR	94023	Symbol	& readobj		93608						
ANR	94024	Symbol	IS_NULL		93608						
ANR	94025	Symbol	zend_call_method_with_0_params		93608						
ANR	94026	Symbol	Z_OBJCE_P		93608						
ANR	94027	Symbol	& retval		93608						
ANR	94028	Symbol	ce -> name		93608						
ANR	94029	Symbol	IS_STRING		93608						
ANR	94030	Symbol	ce		93608						
ANR	94031	Symbol	EG		93608						
ANR	94032	Symbol	NULL		93608						
ANR	94033	Symbol	SUCCESS		93608						
ANR	94034	Symbol	& ce -> __tostring		93608						
ANR	94035	Symbol	E_NOTICE		93608						
ANR	94036	Symbol	Z_TYPE_P		93608						
ANR	94037	Symbol	FAILURE		93608						
ANR	94038	Symbol	retval		93608						
ANR	94039	Symbol	E_ERROR		93608						
ANR	94040	Symbol	EXPECTED		93608						
ANR	94041	DeclStmt									
ANR	94042	Decl							zend_class_entry	zend_class_entry *	ce
ANR	94043	DeclStmt									
ANR	94044	Decl							ZEND_API zend_object_handlers	ZEND_API zend_object_handlers	std_object_handlers
