command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1946870	File	data/converged/CVE-2017-11142_php-src/ext_standard_crypt_sha256.c								
ANR	1946871	ClassDef	<unnamed>	17:38:419:448							
ANR	1946872	DeclStmt									
ANR	1946873	Decl							char	char	c
ANR	1946874	DeclStmt									
ANR	1946875	Decl							type	type	member
ANR	1946876	Function	__php_stpncpy	41:0:822:976							
ANR	1946877	FunctionDef	"__php_stpncpy (char * dst , const char * src , size_t len)"		1946876	0					
ANR	1946878	CompoundStatement		42:0:883:976	1946876	0					
ANR	1946879	IdentifierDeclStatement	size_t n = strlen ( src ) ;	43:1:886:908	1946876	0	True				
ANR	1946880	IdentifierDecl	n = strlen ( src )		1946876	0					
ANR	1946881	IdentifierDeclType	size_t		1946876	0					
ANR	1946882	Identifier	n		1946876	1					
ANR	1946883	AssignmentExpression	n = strlen ( src )		1946876	2		=			
ANR	1946884	Identifier	n		1946876	0					
ANR	1946885	CallExpression	strlen ( src )		1946876	1					
ANR	1946886	Callee	strlen		1946876	0					
ANR	1946887	Identifier	strlen		1946876	0					
ANR	1946888	ArgumentList	src		1946876	1					
ANR	1946889	Argument	src		1946876	0					
ANR	1946890	Identifier	src		1946876	0					
ANR	1946891	IfStatement	if ( n > len )		1946876	1					
ANR	1946892	Condition	n > len	44:5:915:921	1946876	0	True				
ANR	1946893	RelationalExpression	n > len		1946876	0		>			
ANR	1946894	Identifier	n		1946876	0					
ANR	1946895	Identifier	len		1946876	1					
ANR	1946896	CompoundStatement		3:14:40:40	1946876	1					
ANR	1946897	ExpressionStatement	n = len	45:2:928:935	1946876	0	True				
ANR	1946898	AssignmentExpression	n = len		1946876	0		=			
ANR	1946899	Identifier	n		1946876	0					
ANR	1946900	Identifier	len		1946876	1					
ANR	1946901	ReturnStatement	"return strncpy ( dst , src , len ) + n ;"	47:1:941:974	1946876	2	True				
ANR	1946902	AdditiveExpression	"strncpy ( dst , src , len ) + n"		1946876	0		+			
ANR	1946903	CallExpression	"strncpy ( dst , src , len )"		1946876	0					
ANR	1946904	Callee	strncpy		1946876	0					
ANR	1946905	Identifier	strncpy		1946876	0					
ANR	1946906	ArgumentList	dst		1946876	1					
ANR	1946907	Argument	dst		1946876	0					
ANR	1946908	Identifier	dst		1946876	0					
ANR	1946909	Argument	src		1946876	1					
ANR	1946910	Identifier	src		1946876	0					
ANR	1946911	Argument	len		1946876	2					
ANR	1946912	Identifier	len		1946876	0					
ANR	1946913	Identifier	n		1946876	1					
ANR	1946914	ReturnType	char *		1946876	1					
ANR	1946915	Identifier	__php_stpncpy		1946876	2					
ANR	1946916	ParameterList	"char * dst , const char * src , size_t len"		1946876	3					
ANR	1946917	Parameter	char * dst	41:21:843:851	1946876	0	True				
ANR	1946918	ParameterType	char *		1946876	0					
ANR	1946919	Identifier	dst		1946876	1					
ANR	1946920	Parameter	const char * src	41:32:854:868	1946876	1	True				
ANR	1946921	ParameterType	const char *		1946876	0					
ANR	1946922	Identifier	src		1946876	1					
ANR	1946923	Parameter	size_t len	41:49:871:880	1946876	2	True				
ANR	1946924	ParameterType	size_t		1946876	0					
ANR	1946925	Identifier	len		1946876	1					
ANR	1946926	CFGEntryNode	ENTRY		1946876		True				
ANR	1946927	CFGExitNode	EXIT		1946876		True				
ANR	1946928	Symbol	strlen		1946876						
ANR	1946929	Symbol	dst		1946876						
ANR	1946930	Symbol	len		1946876						
ANR	1946931	Symbol	src		1946876						
ANR	1946932	Symbol	strncpy		1946876						
ANR	1946933	Symbol	n		1946876						
ANR	1946934	Function	__php_mempcpy	50:0:979:1093							
ANR	1946935	FunctionDef	"__php_mempcpy (void * dst , const void * src , size_t len)"		1946934	0					
ANR	1946936	CompoundStatement		51:0:1042:1093	1946934	0					
ANR	1946937	ReturnStatement	"return ( ( ( char * ) memcpy ( dst , src , len ) ) + len ) ;"	52:1:1045:1091	1946934	0	True				
ANR	1946938	AdditiveExpression	"( ( char * ) memcpy ( dst , src , len ) ) + len"		1946934	0		+			
ANR	1946939	CastExpression	"( char * ) memcpy ( dst , src , len )"		1946934	0					
ANR	1946940	CastTarget	char *		1946934	0					
ANR	1946941	CallExpression	"memcpy ( dst , src , len )"		1946934	1					
ANR	1946942	Callee	memcpy		1946934	0					
ANR	1946943	Identifier	memcpy		1946934	0					
ANR	1946944	ArgumentList	dst		1946934	1					
ANR	1946945	Argument	dst		1946934	0					
ANR	1946946	Identifier	dst		1946934	0					
ANR	1946947	Argument	src		1946934	1					
ANR	1946948	Identifier	src		1946934	0					
ANR	1946949	Argument	len		1946934	2					
ANR	1946950	Identifier	len		1946934	0					
ANR	1946951	Identifier	len		1946934	1					
ANR	1946952	ReturnType	void *		1946934	1					
ANR	1946953	Identifier	__php_mempcpy		1946934	2					
ANR	1946954	ParameterList	"void * dst , const void * src , size_t len"		1946934	3					
ANR	1946955	Parameter	void * dst	50:21:1000:1009	1946934	0	True				
ANR	1946956	ParameterType	void *		1946934	0					
ANR	1946957	Identifier	dst		1946934	1					
ANR	1946958	Parameter	const void * src	50:33:1012:1027	1946934	1	True				
ANR	1946959	ParameterType	const void *		1946934	0					
ANR	1946960	Identifier	src		1946934	1					
ANR	1946961	Parameter	size_t len	50:51:1030:1039	1946934	2	True				
ANR	1946962	ParameterType	size_t		1946934	0					
ANR	1946963	Identifier	len		1946934	1					
ANR	1946964	CFGEntryNode	ENTRY		1946934		True				
ANR	1946965	CFGExitNode	EXIT		1946934		True				
ANR	1946966	Symbol	dst		1946934						
ANR	1946967	Symbol	len		1946934						
ANR	1946968	Symbol	src		1946934						
ANR	1946969	Symbol	memcpy		1946934						
ANR	1946970	ClassDef	sha256_ctx	63:0:1297:1441							
ANR	1946971	DeclStmt									
ANR	1946972	Decl							uint32_t	uint32_t [ 8 ]	H
ANR	1946973	DeclStmt									
ANR	1946974	Decl							uint32_t	uint32_t [ 2 ]	total
ANR	1946975	DeclStmt									
ANR	1946976	Decl							uint32_t	uint32_t	buflen
ANR	1946977	DeclStmt									
ANR	1946978	Decl							char	char [ 128 ]	buffer
ANR	1946979	DeclStmt									
ANR	1946980	Decl							const unsigned char	const unsigned char [ 64 ]	fillbuf
ANR	1946981	DeclStmt									
ANR	1946982	Decl							const uint32_t	const uint32_t [ 64 ]	K
ANR	1946983	Function	sha256_process_block	106:0:2787:5280							
ANR	1946984	FunctionDef	"sha256_process_block (const void * buffer , size_t len , struct sha256_ctx * ctx)"		1946983	0					
ANR	1946985	CompoundStatement		106:90:2877:5280	1946983	0					
ANR	1946986	IdentifierDeclStatement	const uint32_t * words = buffer ;	107:1:2880:2910	1946983	0	True				
ANR	1946987	IdentifierDecl	* words = buffer		1946983	0					
ANR	1946988	IdentifierDeclType	const uint32_t *		1946983	0					
ANR	1946989	Identifier	words		1946983	1					
ANR	1946990	AssignmentExpression	* words = buffer		1946983	2		=			
ANR	1946991	Identifier	buffer		1946983	0					
ANR	1946992	Identifier	buffer		1946983	1					
ANR	1946993	IdentifierDeclStatement	size_t nwords = len / sizeof ( uint32_t ) ;	108:1:2913:2952	1946983	1	True				
ANR	1946994	IdentifierDecl	nwords = len / sizeof ( uint32_t )		1946983	0					
ANR	1946995	IdentifierDeclType	size_t		1946983	0					
ANR	1946996	Identifier	nwords		1946983	1					
ANR	1946997	AssignmentExpression	nwords = len / sizeof ( uint32_t )		1946983	2		=			
ANR	1946998	Identifier	nwords		1946983	0					
ANR	1946999	MultiplicativeExpression	len / sizeof ( uint32_t )		1946983	1		/			
ANR	1947000	Identifier	len		1946983	0					
ANR	1947001	SizeofExpression	sizeof ( uint32_t )		1946983	1					
ANR	1947002	Sizeof	sizeof		1946983	0					
ANR	1947003	SizeofOperand	uint32_t		1946983	1					
ANR	1947004	IdentifierDeclStatement	unsigned int t ;	109:1:2955:2969	1946983	2	True				
ANR	1947005	IdentifierDecl	t		1946983	0					
ANR	1947006	IdentifierDeclType	unsigned int		1946983	0					
ANR	1947007	Identifier	t		1946983	1					
ANR	1947008	IdentifierDeclStatement	uint32_t a = ctx -> H [ 0 ] ;	111:1:2973:2995	1946983	3	True				
ANR	1947009	IdentifierDecl	a = ctx -> H [ 0 ]		1946983	0					
ANR	1947010	IdentifierDeclType	uint32_t		1946983	0					
ANR	1947011	Identifier	a		1946983	1					
ANR	1947012	AssignmentExpression	a = ctx -> H [ 0 ]		1946983	2		=			
ANR	1947013	Identifier	a		1946983	0					
ANR	1947014	ArrayIndexing	ctx -> H [ 0 ]		1946983	1					
ANR	1947015	PtrMemberAccess	ctx -> H		1946983	0					
ANR	1947016	Identifier	ctx		1946983	0					
ANR	1947017	Identifier	H		1946983	1					
ANR	1947018	PrimaryExpression	0		1946983	1					
ANR	1947019	IdentifierDeclStatement	uint32_t b = ctx -> H [ 1 ] ;	112:1:2998:3020	1946983	4	True				
ANR	1947020	IdentifierDecl	b = ctx -> H [ 1 ]		1946983	0					
ANR	1947021	IdentifierDeclType	uint32_t		1946983	0					
ANR	1947022	Identifier	b		1946983	1					
ANR	1947023	AssignmentExpression	b = ctx -> H [ 1 ]		1946983	2		=			
ANR	1947024	Identifier	b		1946983	0					
ANR	1947025	ArrayIndexing	ctx -> H [ 1 ]		1946983	1					
ANR	1947026	PtrMemberAccess	ctx -> H		1946983	0					
ANR	1947027	Identifier	ctx		1946983	0					
ANR	1947028	Identifier	H		1946983	1					
ANR	1947029	PrimaryExpression	1		1946983	1					
ANR	1947030	IdentifierDeclStatement	uint32_t c = ctx -> H [ 2 ] ;	113:1:3023:3045	1946983	5	True				
ANR	1947031	IdentifierDecl	c = ctx -> H [ 2 ]		1946983	0					
ANR	1947032	IdentifierDeclType	uint32_t		1946983	0					
ANR	1947033	Identifier	c		1946983	1					
ANR	1947034	AssignmentExpression	c = ctx -> H [ 2 ]		1946983	2		=			
ANR	1947035	Identifier	c		1946983	0					
ANR	1947036	ArrayIndexing	ctx -> H [ 2 ]		1946983	1					
ANR	1947037	PtrMemberAccess	ctx -> H		1946983	0					
ANR	1947038	Identifier	ctx		1946983	0					
ANR	1947039	Identifier	H		1946983	1					
ANR	1947040	PrimaryExpression	2		1946983	1					
ANR	1947041	IdentifierDeclStatement	uint32_t d = ctx -> H [ 3 ] ;	114:1:3048:3070	1946983	6	True				
ANR	1947042	IdentifierDecl	d = ctx -> H [ 3 ]		1946983	0					
ANR	1947043	IdentifierDeclType	uint32_t		1946983	0					
ANR	1947044	Identifier	d		1946983	1					
ANR	1947045	AssignmentExpression	d = ctx -> H [ 3 ]		1946983	2		=			
ANR	1947046	Identifier	d		1946983	0					
ANR	1947047	ArrayIndexing	ctx -> H [ 3 ]		1946983	1					
ANR	1947048	PtrMemberAccess	ctx -> H		1946983	0					
ANR	1947049	Identifier	ctx		1946983	0					
ANR	1947050	Identifier	H		1946983	1					
ANR	1947051	PrimaryExpression	3		1946983	1					
ANR	1947052	IdentifierDeclStatement	uint32_t e = ctx -> H [ 4 ] ;	115:1:3073:3095	1946983	7	True				
ANR	1947053	IdentifierDecl	e = ctx -> H [ 4 ]		1946983	0					
ANR	1947054	IdentifierDeclType	uint32_t		1946983	0					
ANR	1947055	Identifier	e		1946983	1					
ANR	1947056	AssignmentExpression	e = ctx -> H [ 4 ]		1946983	2		=			
ANR	1947057	Identifier	e		1946983	0					
ANR	1947058	ArrayIndexing	ctx -> H [ 4 ]		1946983	1					
ANR	1947059	PtrMemberAccess	ctx -> H		1946983	0					
ANR	1947060	Identifier	ctx		1946983	0					
ANR	1947061	Identifier	H		1946983	1					
ANR	1947062	PrimaryExpression	4		1946983	1					
ANR	1947063	IdentifierDeclStatement	uint32_t f = ctx -> H [ 5 ] ;	116:1:3098:3120	1946983	8	True				
ANR	1947064	IdentifierDecl	f = ctx -> H [ 5 ]		1946983	0					
ANR	1947065	IdentifierDeclType	uint32_t		1946983	0					
ANR	1947066	Identifier	f		1946983	1					
ANR	1947067	AssignmentExpression	f = ctx -> H [ 5 ]		1946983	2		=			
ANR	1947068	Identifier	f		1946983	0					
ANR	1947069	ArrayIndexing	ctx -> H [ 5 ]		1946983	1					
ANR	1947070	PtrMemberAccess	ctx -> H		1946983	0					
ANR	1947071	Identifier	ctx		1946983	0					
ANR	1947072	Identifier	H		1946983	1					
ANR	1947073	PrimaryExpression	5		1946983	1					
ANR	1947074	IdentifierDeclStatement	uint32_t g = ctx -> H [ 6 ] ;	117:1:3123:3145	1946983	9	True				
ANR	1947075	IdentifierDecl	g = ctx -> H [ 6 ]		1946983	0					
ANR	1947076	IdentifierDeclType	uint32_t		1946983	0					
ANR	1947077	Identifier	g		1946983	1					
ANR	1947078	AssignmentExpression	g = ctx -> H [ 6 ]		1946983	2		=			
ANR	1947079	Identifier	g		1946983	0					
ANR	1947080	ArrayIndexing	ctx -> H [ 6 ]		1946983	1					
ANR	1947081	PtrMemberAccess	ctx -> H		1946983	0					
ANR	1947082	Identifier	ctx		1946983	0					
ANR	1947083	Identifier	H		1946983	1					
ANR	1947084	PrimaryExpression	6		1946983	1					
ANR	1947085	IdentifierDeclStatement	uint32_t h = ctx -> H [ 7 ] ;	118:1:3148:3170	1946983	10	True				
ANR	1947086	IdentifierDecl	h = ctx -> H [ 7 ]		1946983	0					
ANR	1947087	IdentifierDeclType	uint32_t		1946983	0					
ANR	1947088	Identifier	h		1946983	1					
ANR	1947089	AssignmentExpression	h = ctx -> H [ 7 ]		1946983	2		=			
ANR	1947090	Identifier	h		1946983	0					
ANR	1947091	ArrayIndexing	ctx -> H [ 7 ]		1946983	1					
ANR	1947092	PtrMemberAccess	ctx -> H		1946983	0					
ANR	1947093	Identifier	ctx		1946983	0					
ANR	1947094	Identifier	H		1946983	1					
ANR	1947095	PrimaryExpression	7		1946983	1					
ANR	1947096	ExpressionStatement	ctx -> total [ 0 ] += len	123:1:3361:3381	1946983	11	True				
ANR	1947097	AssignmentExpression	ctx -> total [ 0 ] += len		1946983	0		+=			
ANR	1947098	ArrayIndexing	ctx -> total [ 0 ]		1946983	0					
ANR	1947099	PtrMemberAccess	ctx -> total		1946983	0					
ANR	1947100	Identifier	ctx		1946983	0					
ANR	1947101	Identifier	total		1946983	1					
ANR	1947102	PrimaryExpression	0		1946983	1					
ANR	1947103	Identifier	len		1946983	1					
ANR	1947104	IfStatement	if ( ctx -> total [ 0 ] < len )		1946983	12					
ANR	1947105	Condition	ctx -> total [ 0 ] < len	124:5:3388:3406	1946983	0	True				
ANR	1947106	RelationalExpression	ctx -> total [ 0 ] < len		1946983	0		<			
ANR	1947107	ArrayIndexing	ctx -> total [ 0 ]		1946983	0					
ANR	1947108	PtrMemberAccess	ctx -> total		1946983	0					
ANR	1947109	Identifier	ctx		1946983	0					
ANR	1947110	Identifier	total		1946983	1					
ANR	1947111	PrimaryExpression	0		1946983	1					
ANR	1947112	Identifier	len		1946983	1					
ANR	1947113	CompoundStatement		19:26:531:531	1946983	1					
ANR	1947114	ExpressionStatement	++ ctx -> total [ 1 ]	125:2:3413:3428	1946983	0	True				
ANR	1947115	UnaryExpression	++ ctx -> total [ 1 ]		1946983	0					
ANR	1947116	IncDec	++		1946983	0					
ANR	1947117	ArrayIndexing	ctx -> total [ 1 ]		1946983	1					
ANR	1947118	PtrMemberAccess	ctx -> total		1946983	0					
ANR	1947119	Identifier	ctx		1946983	0					
ANR	1947120	Identifier	total		1946983	1					
ANR	1947121	PrimaryExpression	1		1946983	1					
ANR	1947122	WhileStatement	while ( nwords > 0 )		1946983	13					
ANR	1947123	Condition	nwords > 0	130:8:3525:3534	1946983	0	True				
ANR	1947124	RelationalExpression	nwords > 0		1946983	0		>			
ANR	1947125	Identifier	nwords		1946983	0					
ANR	1947126	PrimaryExpression	0		1946983	1					
ANR	1947127	CompoundStatement		34:2:842:861	1946983	1					
ANR	1947128	IdentifierDeclStatement	uint32_t W [ 64 ] ;	131:2:3541:3555	1946983	0	True				
ANR	1947129	IdentifierDecl	W [ 64 ]		1946983	0					
ANR	1947130	IdentifierDeclType	uint32_t [ 64 ]		1946983	0					
ANR	1947131	Identifier	W		1946983	1					
ANR	1947132	PrimaryExpression	64		1946983	2					
ANR	1947133	IdentifierDeclStatement	uint32_t a_save = a ;	132:2:3559:3578	1946983	1	True				
ANR	1947134	IdentifierDecl	a_save = a		1946983	0					
ANR	1947135	IdentifierDeclType	uint32_t		1946983	0					
ANR	1947136	Identifier	a_save		1946983	1					
ANR	1947137	AssignmentExpression	a_save = a		1946983	2		=			
ANR	1947138	Identifier	a		1946983	0					
ANR	1947139	Identifier	a		1946983	1					
ANR	1947140	IdentifierDeclStatement	uint32_t b_save = b ;	133:2:3582:3601	1946983	2	True				
ANR	1947141	IdentifierDecl	b_save = b		1946983	0					
ANR	1947142	IdentifierDeclType	uint32_t		1946983	0					
ANR	1947143	Identifier	b_save		1946983	1					
ANR	1947144	AssignmentExpression	b_save = b		1946983	2		=			
ANR	1947145	Identifier	b		1946983	0					
ANR	1947146	Identifier	b		1946983	1					
ANR	1947147	IdentifierDeclStatement	uint32_t c_save = c ;	134:2:3605:3624	1946983	3	True				
ANR	1947148	IdentifierDecl	c_save = c		1946983	0					
ANR	1947149	IdentifierDeclType	uint32_t		1946983	0					
ANR	1947150	Identifier	c_save		1946983	1					
ANR	1947151	AssignmentExpression	c_save = c		1946983	2		=			
ANR	1947152	Identifier	c		1946983	0					
ANR	1947153	Identifier	c		1946983	1					
ANR	1947154	IdentifierDeclStatement	uint32_t d_save = d ;	135:2:3628:3647	1946983	4	True				
ANR	1947155	IdentifierDecl	d_save = d		1946983	0					
ANR	1947156	IdentifierDeclType	uint32_t		1946983	0					
ANR	1947157	Identifier	d_save		1946983	1					
ANR	1947158	AssignmentExpression	d_save = d		1946983	2		=			
ANR	1947159	Identifier	d		1946983	0					
ANR	1947160	Identifier	d		1946983	1					
ANR	1947161	IdentifierDeclStatement	uint32_t e_save = e ;	136:2:3651:3670	1946983	5	True				
ANR	1947162	IdentifierDecl	e_save = e		1946983	0					
ANR	1947163	IdentifierDeclType	uint32_t		1946983	0					
ANR	1947164	Identifier	e_save		1946983	1					
ANR	1947165	AssignmentExpression	e_save = e		1946983	2		=			
ANR	1947166	Identifier	e		1946983	0					
ANR	1947167	Identifier	e		1946983	1					
ANR	1947168	IdentifierDeclStatement	uint32_t f_save = f ;	137:2:3674:3693	1946983	6	True				
ANR	1947169	IdentifierDecl	f_save = f		1946983	0					
ANR	1947170	IdentifierDeclType	uint32_t		1946983	0					
ANR	1947171	Identifier	f_save		1946983	1					
ANR	1947172	AssignmentExpression	f_save = f		1946983	2		=			
ANR	1947173	Identifier	f		1946983	0					
ANR	1947174	Identifier	f		1946983	1					
ANR	1947175	IdentifierDeclStatement	uint32_t g_save = g ;	138:2:3697:3716	1946983	7	True				
ANR	1947176	IdentifierDecl	g_save = g		1946983	0					
ANR	1947177	IdentifierDeclType	uint32_t		1946983	0					
ANR	1947178	Identifier	g_save		1946983	1					
ANR	1947179	AssignmentExpression	g_save = g		1946983	2		=			
ANR	1947180	Identifier	g		1946983	0					
ANR	1947181	Identifier	g		1946983	1					
ANR	1947182	IdentifierDeclStatement	uint32_t h_save = h ;	139:2:3720:3739	1946983	8	True				
ANR	1947183	IdentifierDecl	h_save = h		1946983	0					
ANR	1947184	IdentifierDeclType	uint32_t		1946983	0					
ANR	1947185	Identifier	h_save		1946983	1					
ANR	1947186	AssignmentExpression	h_save = h		1946983	2		=			
ANR	1947187	Identifier	h		1946983	0					
ANR	1947188	Identifier	h		1946983	1					
ANR	1947189	Statement	define	142:1:3790:3795	1946983	9	True				
ANR	1947190	Statement	Ch	142:8:3797:3798	1946983	10	True				
ANR	1947191	Statement	(	142:10:3799:3799	1946983	11	True				
ANR	1947192	Statement	x	142:11:3800:3800	1946983	12	True				
ANR	1947193	Statement	","	142:12:3801:3801	1946983	13	True				
ANR	1947194	Statement	y	142:14:3803:3803	1946983	14	True				
ANR	1947195	Statement	","	142:15:3804:3804	1946983	15	True				
ANR	1947196	Statement	z	142:17:3806:3806	1946983	16	True				
ANR	1947197	Statement	)	142:18:3807:3807	1946983	17	True				
ANR	1947198	Statement	(	142:20:3809:3809	1946983	18	True				
ANR	1947199	Statement	(	142:21:3810:3810	1946983	19	True				
ANR	1947200	Statement	x	142:22:3811:3811	1946983	20	True				
ANR	1947201	Statement	&	142:24:3813:3813	1946983	21	True				
ANR	1947202	Statement	y	142:26:3815:3815	1946983	22	True				
ANR	1947203	Statement	)	142:27:3816:3816	1946983	23	True				
ANR	1947204	Statement	^	142:29:3818:3818	1946983	24	True				
ANR	1947205	Statement	(	142:31:3820:3820	1946983	25	True				
ANR	1947206	Statement	~x	142:32:3821:3822	1946983	26	True				
ANR	1947207	Statement	&	142:35:3824:3824	1946983	27	True				
ANR	1947208	Statement	z	142:37:3826:3826	1946983	28	True				
ANR	1947209	Statement	)	142:38:3827:3827	1946983	29	True				
ANR	1947210	Statement	)	142:39:3828:3828	1946983	30	True				
ANR	1947211	Statement	define	143:1:3831:3836	1946983	31	True				
ANR	1947212	Statement	Maj	143:8:3838:3840	1946983	32	True				
ANR	1947213	Statement	(	143:11:3841:3841	1946983	33	True				
ANR	1947214	Statement	x	143:12:3842:3842	1946983	34	True				
ANR	1947215	Statement	","	143:13:3843:3843	1946983	35	True				
ANR	1947216	Statement	y	143:15:3845:3845	1946983	36	True				
ANR	1947217	Statement	","	143:16:3846:3846	1946983	37	True				
ANR	1947218	Statement	z	143:18:3848:3848	1946983	38	True				
ANR	1947219	Statement	)	143:19:3849:3849	1946983	39	True				
ANR	1947220	Statement	(	143:21:3851:3851	1946983	40	True				
ANR	1947221	Statement	(	143:22:3852:3852	1946983	41	True				
ANR	1947222	Statement	x	143:23:3853:3853	1946983	42	True				
ANR	1947223	Statement	&	143:25:3855:3855	1946983	43	True				
ANR	1947224	Statement	y	143:27:3857:3857	1946983	44	True				
ANR	1947225	Statement	)	143:28:3858:3858	1946983	45	True				
ANR	1947226	Statement	^	143:30:3860:3860	1946983	46	True				
ANR	1947227	Statement	(	143:32:3862:3862	1946983	47	True				
ANR	1947228	Statement	x	143:33:3863:3863	1946983	48	True				
ANR	1947229	Statement	&	143:35:3865:3865	1946983	49	True				
ANR	1947230	Statement	z	143:37:3867:3867	1946983	50	True				
ANR	1947231	Statement	)	143:38:3868:3868	1946983	51	True				
ANR	1947232	Statement	^	143:40:3870:3870	1946983	52	True				
ANR	1947233	Statement	(	143:42:3872:3872	1946983	53	True				
ANR	1947234	Statement	y	143:43:3873:3873	1946983	54	True				
ANR	1947235	Statement	&	143:45:3875:3875	1946983	55	True				
ANR	1947236	Statement	z	143:47:3877:3877	1946983	56	True				
ANR	1947237	Statement	)	143:48:3878:3878	1946983	57	True				
ANR	1947238	Statement	)	143:49:3879:3879	1946983	58	True				
ANR	1947239	Statement	define	144:1:3882:3887	1946983	59	True				
ANR	1947240	Statement	S0	144:8:3889:3890	1946983	60	True				
ANR	1947241	Statement	(	144:10:3891:3891	1946983	61	True				
ANR	1947242	Statement	x	144:11:3892:3892	1946983	62	True				
ANR	1947243	Statement	)	144:12:3893:3893	1946983	63	True				
ANR	1947244	Statement	(	144:14:3895:3895	1946983	64	True				
ANR	1947245	Statement	CYCLIC	144:15:3896:3901	1946983	65	True				
ANR	1947246	Statement	(	144:22:3903:3903	1946983	66	True				
ANR	1947247	Statement	x	144:23:3904:3904	1946983	67	True				
ANR	1947248	Statement	","	144:24:3905:3905	1946983	68	True				
ANR	1947249	Statement	2	144:26:3907:3907	1946983	69	True				
ANR	1947250	Statement	)	144:27:3908:3908	1946983	70	True				
ANR	1947251	Statement	^	144:29:3910:3910	1946983	71	True				
ANR	1947252	Statement	CYCLIC	144:31:3912:3917	1946983	72	True				
ANR	1947253	Statement	(	144:38:3919:3919	1946983	73	True				
ANR	1947254	Statement	x	144:39:3920:3920	1946983	74	True				
ANR	1947255	Statement	","	144:40:3921:3921	1946983	75	True				
ANR	1947256	Statement	13	144:42:3923:3924	1946983	76	True				
ANR	1947257	Statement	)	144:44:3925:3925	1946983	77	True				
ANR	1947258	Statement	^	144:46:3927:3927	1946983	78	True				
ANR	1947259	Statement	CYCLIC	144:48:3929:3934	1946983	79	True				
ANR	1947260	Statement	(	144:55:3936:3936	1946983	80	True				
ANR	1947261	Statement	x	144:56:3937:3937	1946983	81	True				
ANR	1947262	Statement	","	144:57:3938:3938	1946983	82	True				
ANR	1947263	Statement	22	144:59:3940:3941	1946983	83	True				
ANR	1947264	Statement	)	144:61:3942:3942	1946983	84	True				
ANR	1947265	Statement	)	144:62:3943:3943	1946983	85	True				
ANR	1947266	Statement	define	145:1:3946:3951	1946983	86	True				
ANR	1947267	Statement	S1	145:8:3953:3954	1946983	87	True				
ANR	1947268	Statement	(	145:10:3955:3955	1946983	88	True				
ANR	1947269	Statement	x	145:11:3956:3956	1946983	89	True				
ANR	1947270	Statement	)	145:12:3957:3957	1946983	90	True				
ANR	1947271	Statement	(	145:14:3959:3959	1946983	91	True				
ANR	1947272	Statement	CYCLIC	145:15:3960:3965	1946983	92	True				
ANR	1947273	Statement	(	145:22:3967:3967	1946983	93	True				
ANR	1947274	Statement	x	145:23:3968:3968	1946983	94	True				
ANR	1947275	Statement	","	145:24:3969:3969	1946983	95	True				
ANR	1947276	Statement	6	145:26:3971:3971	1946983	96	True				
ANR	1947277	Statement	)	145:27:3972:3972	1946983	97	True				
ANR	1947278	Statement	^	145:29:3974:3974	1946983	98	True				
ANR	1947279	Statement	CYCLIC	145:31:3976:3981	1946983	99	True				
ANR	1947280	Statement	(	145:38:3983:3983	1946983	100	True				
ANR	1947281	Statement	x	145:39:3984:3984	1946983	101	True				
ANR	1947282	Statement	","	145:40:3985:3985	1946983	102	True				
ANR	1947283	Statement	11	145:42:3987:3988	1946983	103	True				
ANR	1947284	Statement	)	145:44:3989:3989	1946983	104	True				
ANR	1947285	Statement	^	145:46:3991:3991	1946983	105	True				
ANR	1947286	Statement	CYCLIC	145:48:3993:3998	1946983	106	True				
ANR	1947287	Statement	(	145:55:4000:4000	1946983	107	True				
ANR	1947288	Statement	x	145:56:4001:4001	1946983	108	True				
ANR	1947289	Statement	","	145:57:4002:4002	1946983	109	True				
ANR	1947290	Statement	25	145:59:4004:4005	1946983	110	True				
ANR	1947291	Statement	)	145:61:4006:4006	1946983	111	True				
ANR	1947292	Statement	)	145:62:4007:4007	1946983	112	True				
ANR	1947293	Statement	define	146:1:4010:4015	1946983	113	True				
ANR	1947294	Statement	R0	146:8:4017:4018	1946983	114	True				
ANR	1947295	Statement	(	146:10:4019:4019	1946983	115	True				
ANR	1947296	Statement	x	146:11:4020:4020	1946983	116	True				
ANR	1947297	Statement	)	146:12:4021:4021	1946983	117	True				
ANR	1947298	Statement	(	146:14:4023:4023	1946983	118	True				
ANR	1947299	Statement	CYCLIC	146:15:4024:4029	1946983	119	True				
ANR	1947300	Statement	(	146:22:4031:4031	1946983	120	True				
ANR	1947301	Statement	x	146:23:4032:4032	1946983	121	True				
ANR	1947302	Statement	","	146:24:4033:4033	1946983	122	True				
ANR	1947303	Statement	7	146:26:4035:4035	1946983	123	True				
ANR	1947304	Statement	)	146:27:4036:4036	1946983	124	True				
ANR	1947305	Statement	^	146:29:4038:4038	1946983	125	True				
ANR	1947306	Statement	CYCLIC	146:31:4040:4045	1946983	126	True				
ANR	1947307	Statement	(	146:38:4047:4047	1946983	127	True				
ANR	1947308	Statement	x	146:39:4048:4048	1946983	128	True				
ANR	1947309	Statement	","	146:40:4049:4049	1946983	129	True				
ANR	1947310	Statement	18	146:42:4051:4052	1946983	130	True				
ANR	1947311	Statement	)	146:44:4053:4053	1946983	131	True				
ANR	1947312	Statement	^	146:46:4055:4055	1946983	132	True				
ANR	1947313	Statement	(	146:48:4057:4057	1946983	133	True				
ANR	1947314	Statement	x	146:49:4058:4058	1946983	134	True				
ANR	1947315	Statement	>>	146:51:4060:4061	1946983	135	True				
ANR	1947316	Statement	3	146:54:4063:4063	1946983	136	True				
ANR	1947317	Statement	)	146:55:4064:4064	1946983	137	True				
ANR	1947318	Statement	)	146:56:4065:4065	1946983	138	True				
ANR	1947319	Statement	define	147:1:4068:4073	1946983	139	True				
ANR	1947320	Statement	R1	147:8:4075:4076	1946983	140	True				
ANR	1947321	Statement	(	147:10:4077:4077	1946983	141	True				
ANR	1947322	Statement	x	147:11:4078:4078	1946983	142	True				
ANR	1947323	Statement	)	147:12:4079:4079	1946983	143	True				
ANR	1947324	Statement	(	147:14:4081:4081	1946983	144	True				
ANR	1947325	Statement	CYCLIC	147:15:4082:4087	1946983	145	True				
ANR	1947326	Statement	(	147:22:4089:4089	1946983	146	True				
ANR	1947327	Statement	x	147:23:4090:4090	1946983	147	True				
ANR	1947328	Statement	","	147:24:4091:4091	1946983	148	True				
ANR	1947329	Statement	17	147:26:4093:4094	1946983	149	True				
ANR	1947330	Statement	)	147:28:4095:4095	1946983	150	True				
ANR	1947331	Statement	^	147:30:4097:4097	1946983	151	True				
ANR	1947332	Statement	CYCLIC	147:32:4099:4104	1946983	152	True				
ANR	1947333	Statement	(	147:39:4106:4106	1946983	153	True				
ANR	1947334	Statement	x	147:40:4107:4107	1946983	154	True				
ANR	1947335	Statement	","	147:41:4108:4108	1946983	155	True				
ANR	1947336	Statement	19	147:43:4110:4111	1946983	156	True				
ANR	1947337	Statement	)	147:45:4112:4112	1946983	157	True				
ANR	1947338	Statement	^	147:47:4114:4114	1946983	158	True				
ANR	1947339	Statement	(	147:49:4116:4116	1946983	159	True				
ANR	1947340	Statement	x	147:50:4117:4117	1946983	160	True				
ANR	1947341	Statement	>>	147:52:4119:4120	1946983	161	True				
ANR	1947342	Statement	10	147:55:4122:4123	1946983	162	True				
ANR	1947343	Statement	)	147:57:4124:4124	1946983	163	True				
ANR	1947344	Statement	)	147:58:4125:4125	1946983	164	True				
ANR	1947345	Statement	define	151:1:4251:4256	1946983	165	True				
ANR	1947346	Statement	CYCLIC	151:8:4258:4263	1946983	166	True				
ANR	1947347	Statement	(	151:14:4264:4264	1946983	167	True				
ANR	1947348	Statement	w	151:15:4265:4265	1946983	168	True				
ANR	1947349	Statement	","	151:16:4266:4266	1946983	169	True				
ANR	1947350	Statement	s	151:18:4268:4268	1946983	170	True				
ANR	1947351	Statement	)	151:19:4269:4269	1946983	171	True				
ANR	1947352	Statement	(	151:21:4271:4271	1946983	172	True				
ANR	1947353	Statement	(	151:22:4272:4272	1946983	173	True				
ANR	1947354	Statement	w	151:23:4273:4273	1946983	174	True				
ANR	1947355	Statement	>>	151:25:4275:4276	1946983	175	True				
ANR	1947356	Statement	s	151:28:4278:4278	1946983	176	True				
ANR	1947357	Statement	)	151:29:4279:4279	1946983	177	True				
ANR	1947358	Statement	|	151:31:4281:4281	1946983	178	True				
ANR	1947359	Statement	(	151:33:4283:4283	1946983	179	True				
ANR	1947360	Statement	w	151:34:4284:4284	1946983	180	True				
ANR	1947361	Statement	<<	151:36:4286:4287	1946983	181	True				
ANR	1947362	Statement	(	151:39:4289:4289	1946983	182	True				
ANR	1947363	Statement	32	151:40:4290:4291	1946983	183	True				
ANR	1947364	Statement	-	151:43:4293:4293	1946983	184	True				
ANR	1947365	Statement	s	151:45:4295:4295	1946983	185	True				
ANR	1947366	Statement	)	151:46:4296:4296	1946983	186	True				
ANR	1947367	Statement	)	151:47:4297:4297	1946983	187	True				
ANR	1947368	Statement	)	151:48:4298:4298	1946983	188	True				
ANR	1947369	ForStatement	for ( t = 0 ; t < 16 ; ++ t )		1946983	189					
ANR	1947370	ForInit	t = 0 ;	154:7:4384:4389	1946983	0	True				
ANR	1947371	AssignmentExpression	t = 0		1946983	0		=			
ANR	1947372	Identifier	t		1946983	0					
ANR	1947373	PrimaryExpression	0		1946983	1					
ANR	1947374	Condition	t < 16	154:14:4391:4396	1946983	1	True				
ANR	1947375	RelationalExpression	t < 16		1946983	0		<			
ANR	1947376	Identifier	t		1946983	0					
ANR	1947377	PrimaryExpression	16		1946983	1					
ANR	1947378	UnaryExpression	++ t	154:22:4399:4401	1946983	2	True				
ANR	1947379	IncDec	++		1946983	0					
ANR	1947380	Identifier	t		1946983	1					
ANR	1947381	CompoundStatement		49:27:1526:1526	1946983	3					
ANR	1947382	ExpressionStatement	W [ t ] = SWAP ( * words )	155:3:4409:4429	1946983	0	True				
ANR	1947383	AssignmentExpression	W [ t ] = SWAP ( * words )		1946983	0		=			
ANR	1947384	ArrayIndexing	W [ t ]		1946983	0					
ANR	1947385	Identifier	W		1946983	0					
ANR	1947386	Identifier	t		1946983	1					
ANR	1947387	CallExpression	SWAP ( * words )		1946983	1					
ANR	1947388	Callee	SWAP		1946983	0					
ANR	1947389	Identifier	SWAP		1946983	0					
ANR	1947390	ArgumentList	* words		1946983	1					
ANR	1947391	Argument	* words		1946983	0					
ANR	1947392	UnaryOperationExpression	* words		1946983	0					
ANR	1947393	UnaryOperator	*		1946983	0					
ANR	1947394	Identifier	words		1946983	1					
ANR	1947395	ExpressionStatement	++ words	156:3:4434:4441	1946983	1	True				
ANR	1947396	UnaryExpression	++ words		1946983	0					
ANR	1947397	IncDec	++		1946983	0					
ANR	1947398	Identifier	words		1946983	1					
ANR	1947399	ForStatement	for ( t = 16 ; t < 64 ; ++ t )		1946983	190					
ANR	1947400	ForInit	t = 16 ;	158:7:4454:4460	1946983	0	True				
ANR	1947401	AssignmentExpression	t = 16		1946983	0		=			
ANR	1947402	Identifier	t		1946983	0					
ANR	1947403	PrimaryExpression	16		1946983	1					
ANR	1947404	Condition	t < 64	158:15:4462:4467	1946983	1	True				
ANR	1947405	RelationalExpression	t < 64		1946983	0		<			
ANR	1947406	Identifier	t		1946983	0					
ANR	1947407	PrimaryExpression	64		1946983	1					
ANR	1947408	UnaryExpression	++ t	158:23:4470:4472	1946983	2	True				
ANR	1947409	IncDec	++		1946983	0					
ANR	1947410	Identifier	t		1946983	1					
ANR	1947411	ExpressionStatement	W [ t ] = R1 ( W [ t - 2 ] ) + W [ t - 7 ] + R0 ( W [ t - 15 ] ) + W [ t - 16 ]	159:3:4478:4538	1946983	3	True				
ANR	1947412	AssignmentExpression	W [ t ] = R1 ( W [ t - 2 ] ) + W [ t - 7 ] + R0 ( W [ t - 15 ] ) + W [ t - 16 ]		1946983	0		=			
ANR	1947413	ArrayIndexing	W [ t ]		1946983	0					
ANR	1947414	Identifier	W		1946983	0					
ANR	1947415	Identifier	t		1946983	1					
ANR	1947416	AdditiveExpression	R1 ( W [ t - 2 ] ) + W [ t - 7 ] + R0 ( W [ t - 15 ] ) + W [ t - 16 ]		1946983	1		+			
ANR	1947417	CallExpression	R1 ( W [ t - 2 ] )		1946983	0					
ANR	1947418	Callee	R1		1946983	0					
ANR	1947419	Identifier	R1		1946983	0					
ANR	1947420	ArgumentList	W [ t - 2 ]		1946983	1					
ANR	1947421	Argument	W [ t - 2 ]		1946983	0					
ANR	1947422	ArrayIndexing	W [ t - 2 ]		1946983	0					
ANR	1947423	Identifier	W		1946983	0					
ANR	1947424	AdditiveExpression	t - 2		1946983	1		-			
ANR	1947425	Identifier	t		1946983	0					
ANR	1947426	PrimaryExpression	2		1946983	1					
ANR	1947427	AdditiveExpression	W [ t - 7 ] + R0 ( W [ t - 15 ] ) + W [ t - 16 ]		1946983	1		+			
ANR	1947428	ArrayIndexing	W [ t - 7 ]		1946983	0					
ANR	1947429	Identifier	W		1946983	0					
ANR	1947430	AdditiveExpression	t - 7		1946983	1		-			
ANR	1947431	Identifier	t		1946983	0					
ANR	1947432	PrimaryExpression	7		1946983	1					
ANR	1947433	AdditiveExpression	R0 ( W [ t - 15 ] ) + W [ t - 16 ]		1946983	1		+			
ANR	1947434	CallExpression	R0 ( W [ t - 15 ] )		1946983	0					
ANR	1947435	Callee	R0		1946983	0					
ANR	1947436	Identifier	R0		1946983	0					
ANR	1947437	ArgumentList	W [ t - 15 ]		1946983	1					
ANR	1947438	Argument	W [ t - 15 ]		1946983	0					
ANR	1947439	ArrayIndexing	W [ t - 15 ]		1946983	0					
ANR	1947440	Identifier	W		1946983	0					
ANR	1947441	AdditiveExpression	t - 15		1946983	1		-			
ANR	1947442	Identifier	t		1946983	0					
ANR	1947443	PrimaryExpression	15		1946983	1					
ANR	1947444	ArrayIndexing	W [ t - 16 ]		1946983	1					
ANR	1947445	Identifier	W		1946983	0					
ANR	1947446	AdditiveExpression	t - 16		1946983	1		-			
ANR	1947447	Identifier	t		1946983	0					
ANR	1947448	PrimaryExpression	16		1946983	1					
ANR	1947449	ForStatement	for ( t = 0 ; t < 64 ; ++ t )		1946983	191					
ANR	1947450	ForInit	t = 0 ;	162:7:4618:4623	1946983	0	True				
ANR	1947451	AssignmentExpression	t = 0		1946983	0		=			
ANR	1947452	Identifier	t		1946983	0					
ANR	1947453	PrimaryExpression	0		1946983	1					
ANR	1947454	Condition	t < 64	162:14:4625:4630	1946983	1	True				
ANR	1947455	RelationalExpression	t < 64		1946983	0		<			
ANR	1947456	Identifier	t		1946983	0					
ANR	1947457	PrimaryExpression	64		1946983	1					
ANR	1947458	UnaryExpression	++ t	162:22:4633:4635	1946983	2	True				
ANR	1947459	IncDec	++		1946983	0					
ANR	1947460	Identifier	t		1946983	1					
ANR	1947461	CompoundStatement		59:3:1823:1859	1946983	3					
ANR	1947462	IdentifierDeclStatement	"uint32_t T1 = h + S1 ( e ) + Ch ( e , f , g ) + K [ t ] + W [ t ] ;"	163:3:4643:4696	1946983	0	True				
ANR	1947463	IdentifierDecl	"T1 = h + S1 ( e ) + Ch ( e , f , g ) + K [ t ] + W [ t ]"		1946983	0					
ANR	1947464	IdentifierDeclType	uint32_t		1946983	0					
ANR	1947465	Identifier	T1		1946983	1					
ANR	1947466	AssignmentExpression	"T1 = h + S1 ( e ) + Ch ( e , f , g ) + K [ t ] + W [ t ]"		1946983	2		=			
ANR	1947467	Identifier	T1		1946983	0					
ANR	1947468	AdditiveExpression	"h + S1 ( e ) + Ch ( e , f , g ) + K [ t ] + W [ t ]"		1946983	1		+			
ANR	1947469	Identifier	h		1946983	0					
ANR	1947470	AdditiveExpression	"S1 ( e ) + Ch ( e , f , g ) + K [ t ] + W [ t ]"		1946983	1		+			
ANR	1947471	CallExpression	S1 ( e )		1946983	0					
ANR	1947472	Callee	S1		1946983	0					
ANR	1947473	Identifier	S1		1946983	0					
ANR	1947474	ArgumentList	e		1946983	1					
ANR	1947475	Argument	e		1946983	0					
ANR	1947476	Identifier	e		1946983	0					
ANR	1947477	AdditiveExpression	"Ch ( e , f , g ) + K [ t ] + W [ t ]"		1946983	1		+			
ANR	1947478	CallExpression	"Ch ( e , f , g )"		1946983	0					
ANR	1947479	Callee	Ch		1946983	0					
ANR	1947480	Identifier	Ch		1946983	0					
ANR	1947481	ArgumentList	e		1946983	1					
ANR	1947482	Argument	e		1946983	0					
ANR	1947483	Identifier	e		1946983	0					
ANR	1947484	Argument	f		1946983	1					
ANR	1947485	Identifier	f		1946983	0					
ANR	1947486	Argument	g		1946983	2					
ANR	1947487	Identifier	g		1946983	0					
ANR	1947488	AdditiveExpression	K [ t ] + W [ t ]		1946983	1		+			
ANR	1947489	ArrayIndexing	K [ t ]		1946983	0					
ANR	1947490	Identifier	K		1946983	0					
ANR	1947491	Identifier	t		1946983	1					
ANR	1947492	ArrayIndexing	W [ t ]		1946983	1					
ANR	1947493	Identifier	W		1946983	0					
ANR	1947494	Identifier	t		1946983	1					
ANR	1947495	IdentifierDeclStatement	"uint32_t T2 = S0 ( a ) + Maj ( a , b , c ) ;"	164:3:4701:4737	1946983	1	True				
ANR	1947496	IdentifierDecl	"T2 = S0 ( a ) + Maj ( a , b , c )"		1946983	0					
ANR	1947497	IdentifierDeclType	uint32_t		1946983	0					
ANR	1947498	Identifier	T2		1946983	1					
ANR	1947499	AssignmentExpression	"T2 = S0 ( a ) + Maj ( a , b , c )"		1946983	2		=			
ANR	1947500	Identifier	T2		1946983	0					
ANR	1947501	AdditiveExpression	"S0 ( a ) + Maj ( a , b , c )"		1946983	1		+			
ANR	1947502	CallExpression	S0 ( a )		1946983	0					
ANR	1947503	Callee	S0		1946983	0					
ANR	1947504	Identifier	S0		1946983	0					
ANR	1947505	ArgumentList	a		1946983	1					
ANR	1947506	Argument	a		1946983	0					
ANR	1947507	Identifier	a		1946983	0					
ANR	1947508	CallExpression	"Maj ( a , b , c )"		1946983	1					
ANR	1947509	Callee	Maj		1946983	0					
ANR	1947510	Identifier	Maj		1946983	0					
ANR	1947511	ArgumentList	a		1946983	1					
ANR	1947512	Argument	a		1946983	0					
ANR	1947513	Identifier	a		1946983	0					
ANR	1947514	Argument	b		1946983	1					
ANR	1947515	Identifier	b		1946983	0					
ANR	1947516	Argument	c		1946983	2					
ANR	1947517	Identifier	c		1946983	0					
ANR	1947518	ExpressionStatement	h = g	165:3:4742:4747	1946983	2	True				
ANR	1947519	AssignmentExpression	h = g		1946983	0		=			
ANR	1947520	Identifier	h		1946983	0					
ANR	1947521	Identifier	g		1946983	1					
ANR	1947522	ExpressionStatement	g = f	166:3:4752:4757	1946983	3	True				
ANR	1947523	AssignmentExpression	g = f		1946983	0		=			
ANR	1947524	Identifier	g		1946983	0					
ANR	1947525	Identifier	f		1946983	1					
ANR	1947526	ExpressionStatement	f = e	167:3:4762:4767	1946983	4	True				
ANR	1947527	AssignmentExpression	f = e		1946983	0		=			
ANR	1947528	Identifier	f		1946983	0					
ANR	1947529	Identifier	e		1946983	1					
ANR	1947530	ExpressionStatement	e = d + T1	168:3:4772:4782	1946983	5	True				
ANR	1947531	AssignmentExpression	e = d + T1		1946983	0		=			
ANR	1947532	Identifier	e		1946983	0					
ANR	1947533	AdditiveExpression	d + T1		1946983	1		+			
ANR	1947534	Identifier	d		1946983	0					
ANR	1947535	Identifier	T1		1946983	1					
ANR	1947536	ExpressionStatement	d = c	169:3:4787:4792	1946983	6	True				
ANR	1947537	AssignmentExpression	d = c		1946983	0		=			
ANR	1947538	Identifier	d		1946983	0					
ANR	1947539	Identifier	c		1946983	1					
ANR	1947540	ExpressionStatement	c = b	170:3:4797:4802	1946983	7	True				
ANR	1947541	AssignmentExpression	c = b		1946983	0		=			
ANR	1947542	Identifier	c		1946983	0					
ANR	1947543	Identifier	b		1946983	1					
ANR	1947544	ExpressionStatement	b = a	171:3:4807:4812	1946983	8	True				
ANR	1947545	AssignmentExpression	b = a		1946983	0		=			
ANR	1947546	Identifier	b		1946983	0					
ANR	1947547	Identifier	a		1946983	1					
ANR	1947548	ExpressionStatement	a = T1 + T2	172:3:4817:4828	1946983	9	True				
ANR	1947549	AssignmentExpression	a = T1 + T2		1946983	0		=			
ANR	1947550	Identifier	a		1946983	0					
ANR	1947551	AdditiveExpression	T1 + T2		1946983	1		+			
ANR	1947552	Identifier	T1		1946983	0					
ANR	1947553	Identifier	T2		1946983	1					
ANR	1947554	ExpressionStatement	a += a_save	177:2:4925:4936	1946983	192	True				
ANR	1947555	AssignmentExpression	a += a_save		1946983	0		+=			
ANR	1947556	Identifier	a		1946983	0					
ANR	1947557	Identifier	a_save		1946983	1					
ANR	1947558	ExpressionStatement	b += b_save	178:2:4940:4951	1946983	193	True				
ANR	1947559	AssignmentExpression	b += b_save		1946983	0		+=			
ANR	1947560	Identifier	b		1946983	0					
ANR	1947561	Identifier	b_save		1946983	1					
ANR	1947562	ExpressionStatement	c += c_save	179:2:4955:4966	1946983	194	True				
ANR	1947563	AssignmentExpression	c += c_save		1946983	0		+=			
ANR	1947564	Identifier	c		1946983	0					
ANR	1947565	Identifier	c_save		1946983	1					
ANR	1947566	ExpressionStatement	d += d_save	180:2:4970:4981	1946983	195	True				
ANR	1947567	AssignmentExpression	d += d_save		1946983	0		+=			
ANR	1947568	Identifier	d		1946983	0					
ANR	1947569	Identifier	d_save		1946983	1					
ANR	1947570	ExpressionStatement	e += e_save	181:2:4985:4996	1946983	196	True				
ANR	1947571	AssignmentExpression	e += e_save		1946983	0		+=			
ANR	1947572	Identifier	e		1946983	0					
ANR	1947573	Identifier	e_save		1946983	1					
ANR	1947574	ExpressionStatement	f += f_save	182:2:5000:5011	1946983	197	True				
ANR	1947575	AssignmentExpression	f += f_save		1946983	0		+=			
ANR	1947576	Identifier	f		1946983	0					
ANR	1947577	Identifier	f_save		1946983	1					
ANR	1947578	ExpressionStatement	g += g_save	183:2:5015:5026	1946983	198	True				
ANR	1947579	AssignmentExpression	g += g_save		1946983	0		+=			
ANR	1947580	Identifier	g		1946983	0					
ANR	1947581	Identifier	g_save		1946983	1					
ANR	1947582	ExpressionStatement	h += h_save	184:2:5030:5041	1946983	199	True				
ANR	1947583	AssignmentExpression	h += h_save		1946983	0		+=			
ANR	1947584	Identifier	h		1946983	0					
ANR	1947585	Identifier	h_save		1946983	1					
ANR	1947586	ExpressionStatement	nwords -= 16	187:2:5083:5095	1946983	200	True				
ANR	1947587	AssignmentExpression	nwords -= 16		1946983	0		-=			
ANR	1947588	Identifier	nwords		1946983	0					
ANR	1947589	PrimaryExpression	16		1946983	1					
ANR	1947590	ExpressionStatement	ctx -> H [ 0 ] = a	191:1:5153:5166	1946983	14	True				
ANR	1947591	AssignmentExpression	ctx -> H [ 0 ] = a		1946983	0		=			
ANR	1947592	ArrayIndexing	ctx -> H [ 0 ]		1946983	0					
ANR	1947593	PtrMemberAccess	ctx -> H		1946983	0					
ANR	1947594	Identifier	ctx		1946983	0					
ANR	1947595	Identifier	H		1946983	1					
ANR	1947596	PrimaryExpression	0		1946983	1					
ANR	1947597	Identifier	a		1946983	1					
ANR	1947598	ExpressionStatement	ctx -> H [ 1 ] = b	192:1:5169:5182	1946983	15	True				
ANR	1947599	AssignmentExpression	ctx -> H [ 1 ] = b		1946983	0		=			
ANR	1947600	ArrayIndexing	ctx -> H [ 1 ]		1946983	0					
ANR	1947601	PtrMemberAccess	ctx -> H		1946983	0					
ANR	1947602	Identifier	ctx		1946983	0					
ANR	1947603	Identifier	H		1946983	1					
ANR	1947604	PrimaryExpression	1		1946983	1					
ANR	1947605	Identifier	b		1946983	1					
ANR	1947606	ExpressionStatement	ctx -> H [ 2 ] = c	193:1:5185:5198	1946983	16	True				
ANR	1947607	AssignmentExpression	ctx -> H [ 2 ] = c		1946983	0		=			
ANR	1947608	ArrayIndexing	ctx -> H [ 2 ]		1946983	0					
ANR	1947609	PtrMemberAccess	ctx -> H		1946983	0					
ANR	1947610	Identifier	ctx		1946983	0					
ANR	1947611	Identifier	H		1946983	1					
ANR	1947612	PrimaryExpression	2		1946983	1					
ANR	1947613	Identifier	c		1946983	1					
ANR	1947614	ExpressionStatement	ctx -> H [ 3 ] = d	194:1:5201:5214	1946983	17	True				
ANR	1947615	AssignmentExpression	ctx -> H [ 3 ] = d		1946983	0		=			
ANR	1947616	ArrayIndexing	ctx -> H [ 3 ]		1946983	0					
ANR	1947617	PtrMemberAccess	ctx -> H		1946983	0					
ANR	1947618	Identifier	ctx		1946983	0					
ANR	1947619	Identifier	H		1946983	1					
ANR	1947620	PrimaryExpression	3		1946983	1					
ANR	1947621	Identifier	d		1946983	1					
ANR	1947622	ExpressionStatement	ctx -> H [ 4 ] = e	195:1:5217:5230	1946983	18	True				
ANR	1947623	AssignmentExpression	ctx -> H [ 4 ] = e		1946983	0		=			
ANR	1947624	ArrayIndexing	ctx -> H [ 4 ]		1946983	0					
ANR	1947625	PtrMemberAccess	ctx -> H		1946983	0					
ANR	1947626	Identifier	ctx		1946983	0					
ANR	1947627	Identifier	H		1946983	1					
ANR	1947628	PrimaryExpression	4		1946983	1					
ANR	1947629	Identifier	e		1946983	1					
ANR	1947630	ExpressionStatement	ctx -> H [ 5 ] = f	196:1:5233:5246	1946983	19	True				
ANR	1947631	AssignmentExpression	ctx -> H [ 5 ] = f		1946983	0		=			
ANR	1947632	ArrayIndexing	ctx -> H [ 5 ]		1946983	0					
ANR	1947633	PtrMemberAccess	ctx -> H		1946983	0					
ANR	1947634	Identifier	ctx		1946983	0					
ANR	1947635	Identifier	H		1946983	1					
ANR	1947636	PrimaryExpression	5		1946983	1					
ANR	1947637	Identifier	f		1946983	1					
ANR	1947638	ExpressionStatement	ctx -> H [ 6 ] = g	197:1:5249:5262	1946983	20	True				
ANR	1947639	AssignmentExpression	ctx -> H [ 6 ] = g		1946983	0		=			
ANR	1947640	ArrayIndexing	ctx -> H [ 6 ]		1946983	0					
ANR	1947641	PtrMemberAccess	ctx -> H		1946983	0					
ANR	1947642	Identifier	ctx		1946983	0					
ANR	1947643	Identifier	H		1946983	1					
ANR	1947644	PrimaryExpression	6		1946983	1					
ANR	1947645	Identifier	g		1946983	1					
ANR	1947646	ExpressionStatement	ctx -> H [ 7 ] = h	198:1:5265:5278	1946983	21	True				
ANR	1947647	AssignmentExpression	ctx -> H [ 7 ] = h		1946983	0		=			
ANR	1947648	ArrayIndexing	ctx -> H [ 7 ]		1946983	0					
ANR	1947649	PtrMemberAccess	ctx -> H		1946983	0					
ANR	1947650	Identifier	ctx		1946983	0					
ANR	1947651	Identifier	H		1946983	1					
ANR	1947652	PrimaryExpression	7		1946983	1					
ANR	1947653	Identifier	h		1946983	1					
ANR	1947654	ReturnType	static void		1946983	1					
ANR	1947655	Identifier	sha256_process_block		1946983	2					
ANR	1947656	ParameterList	"const void * buffer , size_t len , struct sha256_ctx * ctx"		1946983	3					
ANR	1947657	Parameter	const void * buffer	106:34:2821:2838	1946983	0	True				
ANR	1947658	ParameterType	const void *		1946983	0					
ANR	1947659	Identifier	buffer		1946983	1					
ANR	1947660	Parameter	size_t len	106:54:2841:2850	1946983	1	True				
ANR	1947661	ParameterType	size_t		1946983	0					
ANR	1947662	Identifier	len		1946983	1					
ANR	1947663	Parameter	struct sha256_ctx * ctx	106:66:2853:2874	1946983	2	True				
ANR	1947664	ParameterType	struct sha256_ctx *		1946983	0					
ANR	1947665	Identifier	ctx		1946983	1					
ANR	1947666	CFGEntryNode	ENTRY		1946983		True				
ANR	1947667	CFGExitNode	EXIT		1946983		True				
ANR	1947668	Symbol	Ch		1946983						
ANR	1947669	Symbol	f_save		1946983						
ANR	1947670	Symbol	K		1946983						
ANR	1947671	Symbol	nwords		1946983						
ANR	1947672	Symbol	b_save		1946983						
ANR	1947673	Symbol	* words		1946983						
ANR	1947674	Symbol	len		1946983						
ANR	1947675	Symbol	* K		1946983						
ANR	1947676	Symbol	W		1946983						
ANR	1947677	Symbol	buffer		1946983						
ANR	1947678	Symbol	h_save		1946983						
ANR	1947679	Symbol	T1		1946983						
ANR	1947680	Symbol	e_save		1946983						
ANR	1947681	Symbol	R0		1946983						
ANR	1947682	Symbol	T2		1946983						
ANR	1947683	Symbol	R1		1946983						
ANR	1947684	Symbol	a		1946983						
ANR	1947685	Symbol	* W		1946983						
ANR	1947686	Symbol	b		1946983						
ANR	1947687	Symbol	c		1946983						
ANR	1947688	Symbol	d		1946983						
ANR	1947689	Symbol	e		1946983						
ANR	1947690	Symbol	ctx		1946983						
ANR	1947691	Symbol	f		1946983						
ANR	1947692	Symbol	g_save		1946983						
ANR	1947693	Symbol	g		1946983						
ANR	1947694	Symbol	words		1946983						
ANR	1947695	Symbol	h		1946983						
ANR	1947696	Symbol	a_save		1946983						
ANR	1947697	Symbol	d_save		1946983						
ANR	1947698	Symbol	* ctx		1946983						
ANR	1947699	Symbol	t		1946983						
ANR	1947700	Symbol	SWAP		1946983						
ANR	1947701	Symbol	ctx -> total		1946983						
ANR	1947702	Symbol	* ctx -> H		1946983						
ANR	1947703	Symbol	ctx -> H		1946983						
ANR	1947704	Symbol	Maj		1946983						
ANR	1947705	Symbol	c_save		1946983						
ANR	1947706	Symbol	* * ctx		1946983						
ANR	1947707	Symbol	S0		1946983						
ANR	1947708	Symbol	* t		1946983						
ANR	1947709	Symbol	S1		1946983						
ANR	1947710	Symbol	* ctx -> total		1946983						
ANR	1947711	Function	sha256_init_ctx	204:0:5367:5676							
ANR	1947712	FunctionDef	sha256_init_ctx (struct sha256_ctx * ctx)		1947711	0					
ANR	1947713	CompoundStatement		204:52:5419:5676	1947711	0					
ANR	1947714	ExpressionStatement	ctx -> H [ 0 ] = 0x6a09e667	205:1:5422:5444	1947711	0	True				
ANR	1947715	AssignmentExpression	ctx -> H [ 0 ] = 0x6a09e667		1947711	0		=			
ANR	1947716	ArrayIndexing	ctx -> H [ 0 ]		1947711	0					
ANR	1947717	PtrMemberAccess	ctx -> H		1947711	0					
ANR	1947718	Identifier	ctx		1947711	0					
ANR	1947719	Identifier	H		1947711	1					
ANR	1947720	PrimaryExpression	0		1947711	1					
ANR	1947721	PrimaryExpression	0x6a09e667		1947711	1					
ANR	1947722	ExpressionStatement	ctx -> H [ 1 ] = 0xbb67ae85	206:1:5447:5469	1947711	1	True				
ANR	1947723	AssignmentExpression	ctx -> H [ 1 ] = 0xbb67ae85		1947711	0		=			
ANR	1947724	ArrayIndexing	ctx -> H [ 1 ]		1947711	0					
ANR	1947725	PtrMemberAccess	ctx -> H		1947711	0					
ANR	1947726	Identifier	ctx		1947711	0					
ANR	1947727	Identifier	H		1947711	1					
ANR	1947728	PrimaryExpression	1		1947711	1					
ANR	1947729	PrimaryExpression	0xbb67ae85		1947711	1					
ANR	1947730	ExpressionStatement	ctx -> H [ 2 ] = 0x3c6ef372	207:1:5472:5494	1947711	2	True				
ANR	1947731	AssignmentExpression	ctx -> H [ 2 ] = 0x3c6ef372		1947711	0		=			
ANR	1947732	ArrayIndexing	ctx -> H [ 2 ]		1947711	0					
ANR	1947733	PtrMemberAccess	ctx -> H		1947711	0					
ANR	1947734	Identifier	ctx		1947711	0					
ANR	1947735	Identifier	H		1947711	1					
ANR	1947736	PrimaryExpression	2		1947711	1					
ANR	1947737	PrimaryExpression	0x3c6ef372		1947711	1					
ANR	1947738	ExpressionStatement	ctx -> H [ 3 ] = 0xa54ff53a	208:1:5497:5519	1947711	3	True				
ANR	1947739	AssignmentExpression	ctx -> H [ 3 ] = 0xa54ff53a		1947711	0		=			
ANR	1947740	ArrayIndexing	ctx -> H [ 3 ]		1947711	0					
ANR	1947741	PtrMemberAccess	ctx -> H		1947711	0					
ANR	1947742	Identifier	ctx		1947711	0					
ANR	1947743	Identifier	H		1947711	1					
ANR	1947744	PrimaryExpression	3		1947711	1					
ANR	1947745	PrimaryExpression	0xa54ff53a		1947711	1					
ANR	1947746	ExpressionStatement	ctx -> H [ 4 ] = 0x510e527f	209:1:5522:5544	1947711	4	True				
ANR	1947747	AssignmentExpression	ctx -> H [ 4 ] = 0x510e527f		1947711	0		=			
ANR	1947748	ArrayIndexing	ctx -> H [ 4 ]		1947711	0					
ANR	1947749	PtrMemberAccess	ctx -> H		1947711	0					
ANR	1947750	Identifier	ctx		1947711	0					
ANR	1947751	Identifier	H		1947711	1					
ANR	1947752	PrimaryExpression	4		1947711	1					
ANR	1947753	PrimaryExpression	0x510e527f		1947711	1					
ANR	1947754	ExpressionStatement	ctx -> H [ 5 ] = 0x9b05688c	210:1:5547:5569	1947711	5	True				
ANR	1947755	AssignmentExpression	ctx -> H [ 5 ] = 0x9b05688c		1947711	0		=			
ANR	1947756	ArrayIndexing	ctx -> H [ 5 ]		1947711	0					
ANR	1947757	PtrMemberAccess	ctx -> H		1947711	0					
ANR	1947758	Identifier	ctx		1947711	0					
ANR	1947759	Identifier	H		1947711	1					
ANR	1947760	PrimaryExpression	5		1947711	1					
ANR	1947761	PrimaryExpression	0x9b05688c		1947711	1					
ANR	1947762	ExpressionStatement	ctx -> H [ 6 ] = 0x1f83d9ab	211:1:5572:5594	1947711	6	True				
ANR	1947763	AssignmentExpression	ctx -> H [ 6 ] = 0x1f83d9ab		1947711	0		=			
ANR	1947764	ArrayIndexing	ctx -> H [ 6 ]		1947711	0					
ANR	1947765	PtrMemberAccess	ctx -> H		1947711	0					
ANR	1947766	Identifier	ctx		1947711	0					
ANR	1947767	Identifier	H		1947711	1					
ANR	1947768	PrimaryExpression	6		1947711	1					
ANR	1947769	PrimaryExpression	0x1f83d9ab		1947711	1					
ANR	1947770	ExpressionStatement	ctx -> H [ 7 ] = 0x5be0cd19	212:1:5597:5619	1947711	7	True				
ANR	1947771	AssignmentExpression	ctx -> H [ 7 ] = 0x5be0cd19		1947711	0		=			
ANR	1947772	ArrayIndexing	ctx -> H [ 7 ]		1947711	0					
ANR	1947773	PtrMemberAccess	ctx -> H		1947711	0					
ANR	1947774	Identifier	ctx		1947711	0					
ANR	1947775	Identifier	H		1947711	1					
ANR	1947776	PrimaryExpression	7		1947711	1					
ANR	1947777	PrimaryExpression	0x5be0cd19		1947711	1					
ANR	1947778	ExpressionStatement	ctx -> total [ 0 ] = ctx -> total [ 1 ] = 0	214:1:5623:5656	1947711	8	True				
ANR	1947779	AssignmentExpression	ctx -> total [ 0 ] = ctx -> total [ 1 ] = 0		1947711	0		=			
ANR	1947780	ArrayIndexing	ctx -> total [ 0 ]		1947711	0					
ANR	1947781	PtrMemberAccess	ctx -> total		1947711	0					
ANR	1947782	Identifier	ctx		1947711	0					
ANR	1947783	Identifier	total		1947711	1					
ANR	1947784	PrimaryExpression	0		1947711	1					
ANR	1947785	AssignmentExpression	ctx -> total [ 1 ] = 0		1947711	1		=			
ANR	1947786	ArrayIndexing	ctx -> total [ 1 ]		1947711	0					
ANR	1947787	PtrMemberAccess	ctx -> total		1947711	0					
ANR	1947788	Identifier	ctx		1947711	0					
ANR	1947789	Identifier	total		1947711	1					
ANR	1947790	PrimaryExpression	1		1947711	1					
ANR	1947791	PrimaryExpression	0		1947711	1					
ANR	1947792	ExpressionStatement	ctx -> buflen = 0	215:1:5659:5674	1947711	9	True				
ANR	1947793	AssignmentExpression	ctx -> buflen = 0		1947711	0		=			
ANR	1947794	PtrMemberAccess	ctx -> buflen		1947711	0					
ANR	1947795	Identifier	ctx		1947711	0					
ANR	1947796	Identifier	buflen		1947711	1					
ANR	1947797	PrimaryExpression	0		1947711	1					
ANR	1947798	ReturnType	static void		1947711	1					
ANR	1947799	Identifier	sha256_init_ctx		1947711	2					
ANR	1947800	ParameterList	struct sha256_ctx * ctx		1947711	3					
ANR	1947801	Parameter	struct sha256_ctx * ctx	204:28:5395:5416	1947711	0	True				
ANR	1947802	ParameterType	struct sha256_ctx *		1947711	0					
ANR	1947803	Identifier	ctx		1947711	1					
ANR	1947804	CFGEntryNode	ENTRY		1947711		True				
ANR	1947805	CFGExitNode	EXIT		1947711		True				
ANR	1947806	Symbol	ctx		1947711						
ANR	1947807	Symbol	ctx -> total		1947711						
ANR	1947808	Symbol	ctx -> H		1947711						
ANR	1947809	Symbol	* ctx -> H		1947711						
ANR	1947810	Symbol	ctx -> buflen		1947711						
ANR	1947811	Symbol	* * ctx		1947711						
ANR	1947812	Symbol	* ctx		1947711						
ANR	1947813	Symbol	* ctx -> total		1947711						
ANR	1947814	Function	sha256_finish_ctx	224:0:5923:6809							
ANR	1947815	FunctionDef	"sha256_finish_ctx (struct sha256_ctx * ctx , void * resbuf)"		1947814	0					
ANR	1947816	CompoundStatement		224:70:5993:6809	1947814	0					
ANR	1947817	IdentifierDeclStatement	uint32_t bytes = ctx -> buflen ;	226:1:6045:6073	1947814	0	True				
ANR	1947818	IdentifierDecl	bytes = ctx -> buflen		1947814	0					
ANR	1947819	IdentifierDeclType	uint32_t		1947814	0					
ANR	1947820	Identifier	bytes		1947814	1					
ANR	1947821	AssignmentExpression	bytes = ctx -> buflen		1947814	2		=			
ANR	1947822	Identifier	bytes		1947814	0					
ANR	1947823	PtrMemberAccess	ctx -> buflen		1947814	1					
ANR	1947824	Identifier	ctx		1947814	0					
ANR	1947825	Identifier	buflen		1947814	1					
ANR	1947826	IdentifierDeclStatement	size_t pad ;	227:1:6076:6086	1947814	1	True				
ANR	1947827	IdentifierDecl	pad		1947814	0					
ANR	1947828	IdentifierDeclType	size_t		1947814	0					
ANR	1947829	Identifier	pad		1947814	1					
ANR	1947830	IdentifierDeclStatement	unsigned int i ;	228:1:6089:6103	1947814	2	True				
ANR	1947831	IdentifierDecl	i		1947814	0					
ANR	1947832	IdentifierDeclType	unsigned int		1947814	0					
ANR	1947833	Identifier	i		1947814	1					
ANR	1947834	ExpressionStatement	ctx -> total [ 0 ] += bytes	231:1:6142:6164	1947814	3	True				
ANR	1947835	AssignmentExpression	ctx -> total [ 0 ] += bytes		1947814	0		+=			
ANR	1947836	ArrayIndexing	ctx -> total [ 0 ]		1947814	0					
ANR	1947837	PtrMemberAccess	ctx -> total		1947814	0					
ANR	1947838	Identifier	ctx		1947814	0					
ANR	1947839	Identifier	total		1947814	1					
ANR	1947840	PrimaryExpression	0		1947814	1					
ANR	1947841	Identifier	bytes		1947814	1					
ANR	1947842	IfStatement	if ( ctx -> total [ 0 ] < bytes )		1947814	4					
ANR	1947843	Condition	ctx -> total [ 0 ] < bytes	232:5:6171:6191	1947814	0	True				
ANR	1947844	RelationalExpression	ctx -> total [ 0 ] < bytes		1947814	0		<			
ANR	1947845	ArrayIndexing	ctx -> total [ 0 ]		1947814	0					
ANR	1947846	PtrMemberAccess	ctx -> total		1947814	0					
ANR	1947847	Identifier	ctx		1947814	0					
ANR	1947848	Identifier	total		1947814	1					
ANR	1947849	PrimaryExpression	0		1947814	1					
ANR	1947850	Identifier	bytes		1947814	1					
ANR	1947851	CompoundStatement		9:28:200:200	1947814	1					
ANR	1947852	ExpressionStatement	++ ctx -> total [ 1 ]	233:2:6198:6213	1947814	0	True				
ANR	1947853	UnaryExpression	++ ctx -> total [ 1 ]		1947814	0					
ANR	1947854	IncDec	++		1947814	0					
ANR	1947855	ArrayIndexing	ctx -> total [ 1 ]		1947814	1					
ANR	1947856	PtrMemberAccess	ctx -> total		1947814	0					
ANR	1947857	Identifier	ctx		1947814	0					
ANR	1947858	Identifier	total		1947814	1					
ANR	1947859	PrimaryExpression	1		1947814	1					
ANR	1947860	ExpressionStatement	pad = bytes >= 56 ? 64 + 56 - bytes : 56 - bytes	236:1:6220:6268	1947814	5	True				
ANR	1947861	AssignmentExpression	pad = bytes >= 56 ? 64 + 56 - bytes : 56 - bytes		1947814	0		=			
ANR	1947862	Identifier	pad		1947814	0					
ANR	1947863	ConditionalExpression	bytes >= 56 ? 64 + 56 - bytes : 56 - bytes		1947814	1					
ANR	1947864	Condition	bytes >= 56		1947814	0					
ANR	1947865	RelationalExpression	bytes >= 56		1947814	0		>=			
ANR	1947866	Identifier	bytes		1947814	0					
ANR	1947867	PrimaryExpression	56		1947814	1					
ANR	1947868	AdditiveExpression	64 + 56 - bytes		1947814	1		+			
ANR	1947869	PrimaryExpression	64		1947814	0					
ANR	1947870	AdditiveExpression	56 - bytes		1947814	1		-			
ANR	1947871	PrimaryExpression	56		1947814	0					
ANR	1947872	Identifier	bytes		1947814	1					
ANR	1947873	AdditiveExpression	56 - bytes		1947814	2		-			
ANR	1947874	PrimaryExpression	56		1947814	0					
ANR	1947875	Identifier	bytes		1947814	1					
ANR	1947876	ExpressionStatement	"memcpy ( & ctx -> buffer [ bytes ] , fillbuf , pad )"	237:1:6271:6312	1947814	6	True				
ANR	1947877	CallExpression	"memcpy ( & ctx -> buffer [ bytes ] , fillbuf , pad )"		1947814	0					
ANR	1947878	Callee	memcpy		1947814	0					
ANR	1947879	Identifier	memcpy		1947814	0					
ANR	1947880	ArgumentList	& ctx -> buffer [ bytes ]		1947814	1					
ANR	1947881	Argument	& ctx -> buffer [ bytes ]		1947814	0					
ANR	1947882	UnaryOperationExpression	& ctx -> buffer [ bytes ]		1947814	0					
ANR	1947883	UnaryOperator	&		1947814	0					
ANR	1947884	ArrayIndexing	ctx -> buffer [ bytes ]		1947814	1					
ANR	1947885	PtrMemberAccess	ctx -> buffer		1947814	0					
ANR	1947886	Identifier	ctx		1947814	0					
ANR	1947887	Identifier	buffer		1947814	1					
ANR	1947888	Identifier	bytes		1947814	1					
ANR	1947889	Argument	fillbuf		1947814	1					
ANR	1947890	Identifier	fillbuf		1947814	0					
ANR	1947891	Argument	pad		1947814	2					
ANR	1947892	Identifier	pad		1947814	0					
ANR	1947893	ExpressionStatement	* ( uint32_t * ) & ctx -> buffer [ bytes + pad + 4 ] = SWAP ( ctx -> total [ 0 ] << 3 )	240:1:6387:6458	1947814	7	True				
ANR	1947894	AssignmentExpression	* ( uint32_t * ) & ctx -> buffer [ bytes + pad + 4 ] = SWAP ( ctx -> total [ 0 ] << 3 )		1947814	0		=			
ANR	1947895	UnaryOperationExpression	* ( uint32_t * ) & ctx -> buffer [ bytes + pad + 4 ]		1947814	0					
ANR	1947896	UnaryOperator	*		1947814	0					
ANR	1947897	CastExpression	( uint32_t * ) & ctx -> buffer [ bytes + pad + 4 ]		1947814	1					
ANR	1947898	CastTarget	uint32_t *		1947814	0					
ANR	1947899	UnaryOperationExpression	& ctx -> buffer [ bytes + pad + 4 ]		1947814	1					
ANR	1947900	UnaryOperator	&		1947814	0					
ANR	1947901	ArrayIndexing	ctx -> buffer [ bytes + pad + 4 ]		1947814	1					
ANR	1947902	PtrMemberAccess	ctx -> buffer		1947814	0					
ANR	1947903	Identifier	ctx		1947814	0					
ANR	1947904	Identifier	buffer		1947814	1					
ANR	1947905	AdditiveExpression	bytes + pad + 4		1947814	1		+			
ANR	1947906	Identifier	bytes		1947814	0					
ANR	1947907	AdditiveExpression	pad + 4		1947814	1		+			
ANR	1947908	Identifier	pad		1947814	0					
ANR	1947909	PrimaryExpression	4		1947814	1					
ANR	1947910	CallExpression	SWAP ( ctx -> total [ 0 ] << 3 )		1947814	1					
ANR	1947911	Callee	SWAP		1947814	0					
ANR	1947912	Identifier	SWAP		1947814	0					
ANR	1947913	ArgumentList	ctx -> total [ 0 ] << 3		1947814	1					
ANR	1947914	Argument	ctx -> total [ 0 ] << 3		1947814	0					
ANR	1947915	ShiftExpression	ctx -> total [ 0 ] << 3		1947814	0		<<			
ANR	1947916	ArrayIndexing	ctx -> total [ 0 ]		1947814	0					
ANR	1947917	PtrMemberAccess	ctx -> total		1947814	0					
ANR	1947918	Identifier	ctx		1947814	0					
ANR	1947919	Identifier	total		1947814	1					
ANR	1947920	PrimaryExpression	0		1947814	1					
ANR	1947921	PrimaryExpression	3		1947814	1					
ANR	1947922	ExpressionStatement	* ( uint32_t * ) & ctx -> buffer [ bytes + pad ] = SWAP ( ( ctx -> total [ 1 ] << 3 ) | ( ctx -> total [ 0 ] >> 29 ) )	241:1:6461:6562	1947814	8	True				
ANR	1947923	AssignmentExpression	* ( uint32_t * ) & ctx -> buffer [ bytes + pad ] = SWAP ( ( ctx -> total [ 1 ] << 3 ) | ( ctx -> total [ 0 ] >> 29 ) )		1947814	0		=			
ANR	1947924	UnaryOperationExpression	* ( uint32_t * ) & ctx -> buffer [ bytes + pad ]		1947814	0					
ANR	1947925	UnaryOperator	*		1947814	0					
ANR	1947926	CastExpression	( uint32_t * ) & ctx -> buffer [ bytes + pad ]		1947814	1					
ANR	1947927	CastTarget	uint32_t *		1947814	0					
ANR	1947928	UnaryOperationExpression	& ctx -> buffer [ bytes + pad ]		1947814	1					
ANR	1947929	UnaryOperator	&		1947814	0					
ANR	1947930	ArrayIndexing	ctx -> buffer [ bytes + pad ]		1947814	1					
ANR	1947931	PtrMemberAccess	ctx -> buffer		1947814	0					
ANR	1947932	Identifier	ctx		1947814	0					
ANR	1947933	Identifier	buffer		1947814	1					
ANR	1947934	AdditiveExpression	bytes + pad		1947814	1		+			
ANR	1947935	Identifier	bytes		1947814	0					
ANR	1947936	Identifier	pad		1947814	1					
ANR	1947937	CallExpression	SWAP ( ( ctx -> total [ 1 ] << 3 ) | ( ctx -> total [ 0 ] >> 29 ) )		1947814	1					
ANR	1947938	Callee	SWAP		1947814	0					
ANR	1947939	Identifier	SWAP		1947814	0					
ANR	1947940	ArgumentList	( ctx -> total [ 1 ] << 3 ) | ( ctx -> total [ 0 ] >> 29 )		1947814	1					
ANR	1947941	Argument	( ctx -> total [ 1 ] << 3 ) | ( ctx -> total [ 0 ] >> 29 )		1947814	0					
ANR	1947942	InclusiveOrExpression	( ctx -> total [ 1 ] << 3 ) | ( ctx -> total [ 0 ] >> 29 )		1947814	0		|			
ANR	1947943	ShiftExpression	ctx -> total [ 1 ] << 3		1947814	0		<<			
ANR	1947944	ArrayIndexing	ctx -> total [ 1 ]		1947814	0					
ANR	1947945	PtrMemberAccess	ctx -> total		1947814	0					
ANR	1947946	Identifier	ctx		1947814	0					
ANR	1947947	Identifier	total		1947814	1					
ANR	1947948	PrimaryExpression	1		1947814	1					
ANR	1947949	PrimaryExpression	3		1947814	1					
ANR	1947950	ShiftExpression	ctx -> total [ 0 ] >> 29		1947814	1		>>			
ANR	1947951	ArrayIndexing	ctx -> total [ 0 ]		1947814	0					
ANR	1947952	PtrMemberAccess	ctx -> total		1947814	0					
ANR	1947953	Identifier	ctx		1947814	0					
ANR	1947954	Identifier	total		1947814	1					
ANR	1947955	PrimaryExpression	0		1947814	1					
ANR	1947956	PrimaryExpression	29		1947814	1					
ANR	1947957	ExpressionStatement	"sha256_process_block ( ctx -> buffer , bytes + pad + 8 , ctx )"	245:1:6594:6649	1947814	9	True				
ANR	1947958	CallExpression	"sha256_process_block ( ctx -> buffer , bytes + pad + 8 , ctx )"		1947814	0					
ANR	1947959	Callee	sha256_process_block		1947814	0					
ANR	1947960	Identifier	sha256_process_block		1947814	0					
ANR	1947961	ArgumentList	ctx -> buffer		1947814	1					
ANR	1947962	Argument	ctx -> buffer		1947814	0					
ANR	1947963	PtrMemberAccess	ctx -> buffer		1947814	0					
ANR	1947964	Identifier	ctx		1947814	0					
ANR	1947965	Identifier	buffer		1947814	1					
ANR	1947966	Argument	bytes + pad + 8		1947814	1					
ANR	1947967	AdditiveExpression	bytes + pad + 8		1947814	0		+			
ANR	1947968	Identifier	bytes		1947814	0					
ANR	1947969	AdditiveExpression	pad + 8		1947814	1		+			
ANR	1947970	Identifier	pad		1947814	0					
ANR	1947971	PrimaryExpression	8		1947814	1					
ANR	1947972	Argument	ctx		1947814	2					
ANR	1947973	Identifier	ctx		1947814	0					
ANR	1947974	ForStatement	for ( i = 0 ; i < 8 ; ++ i )		1947814	10					
ANR	1947975	ForInit	i = 0 ;	248:6:6722:6727	1947814	0	True				
ANR	1947976	AssignmentExpression	i = 0		1947814	0		=			
ANR	1947977	Identifier	i		1947814	0					
ANR	1947978	PrimaryExpression	0		1947814	1					
ANR	1947979	Condition	i < 8	248:13:6729:6733	1947814	1	True				
ANR	1947980	RelationalExpression	i < 8		1947814	0		<			
ANR	1947981	Identifier	i		1947814	0					
ANR	1947982	PrimaryExpression	8		1947814	1					
ANR	1947983	UnaryExpression	++ i	248:20:6736:6738	1947814	2	True				
ANR	1947984	IncDec	++		1947814	0					
ANR	1947985	Identifier	i		1947814	1					
ANR	1947986	CompoundStatement		25:25:747:747	1947814	3					
ANR	1947987	ExpressionStatement	( ( uint32_t * ) resbuf ) [ i ] = SWAP ( ctx -> H [ i ] )	249:2:6745:6787	1947814	0	True				
ANR	1947988	AssignmentExpression	( ( uint32_t * ) resbuf ) [ i ] = SWAP ( ctx -> H [ i ] )		1947814	0		=			
ANR	1947989	ArrayIndexing	( ( uint32_t * ) resbuf ) [ i ]		1947814	0					
ANR	1947990	CastExpression	( uint32_t * ) resbuf		1947814	0					
ANR	1947991	CastTarget	uint32_t *		1947814	0					
ANR	1947992	Identifier	resbuf		1947814	1					
ANR	1947993	Identifier	i		1947814	1					
ANR	1947994	CallExpression	SWAP ( ctx -> H [ i ] )		1947814	1					
ANR	1947995	Callee	SWAP		1947814	0					
ANR	1947996	Identifier	SWAP		1947814	0					
ANR	1947997	ArgumentList	ctx -> H [ i ]		1947814	1					
ANR	1947998	Argument	ctx -> H [ i ]		1947814	0					
ANR	1947999	ArrayIndexing	ctx -> H [ i ]		1947814	0					
ANR	1948000	PtrMemberAccess	ctx -> H		1947814	0					
ANR	1948001	Identifier	ctx		1947814	0					
ANR	1948002	Identifier	H		1947814	1					
ANR	1948003	Identifier	i		1947814	1					
ANR	1948004	ReturnStatement	return resbuf ;	252:1:6794:6807	1947814	11	True				
ANR	1948005	Identifier	resbuf		1947814	0					
ANR	1948006	ReturnType	static void *		1947814	1					
ANR	1948007	Identifier	sha256_finish_ctx		1947814	2					
ANR	1948008	ParameterList	"struct sha256_ctx * ctx , void * resbuf"		1947814	3					
ANR	1948009	Parameter	struct sha256_ctx * ctx	224:32:5955:5976	1947814	0	True				
ANR	1948010	ParameterType	struct sha256_ctx *		1947814	0					
ANR	1948011	Identifier	ctx		1947814	1					
ANR	1948012	Parameter	void * resbuf	224:56:5979:5990	1947814	1	True				
ANR	1948013	ParameterType	void *		1947814	0					
ANR	1948014	Identifier	resbuf		1947814	1					
ANR	1948015	CFGEntryNode	ENTRY		1947814		True				
ANR	1948016	CFGExitNode	EXIT		1947814		True				
ANR	1948017	Symbol	ctx		1947814						
ANR	1948018	Symbol	ctx -> buflen		1947814						
ANR	1948019	Symbol	i		1947814						
ANR	1948020	Symbol	ctx -> buffer		1947814						
ANR	1948021	Symbol	* bytes		1947814						
ANR	1948022	Symbol	* ctx		1947814						
ANR	1948023	Symbol	* resbuf		1947814						
ANR	1948024	Symbol	* ( uint32_t * ) & ctx -> buffer [ bytes + pad + 4 ]		1947814						
ANR	1948025	Symbol	pad		1947814						
ANR	1948026	Symbol	* i		1947814						
ANR	1948027	Symbol	SWAP		1947814						
ANR	1948028	Symbol	bytes		1947814						
ANR	1948029	Symbol	ctx -> total		1947814						
ANR	1948030	Symbol	ctx -> H		1947814						
ANR	1948031	Symbol	* ctx -> H		1947814						
ANR	1948032	Symbol	* ctx -> buffer		1947814						
ANR	1948033	Symbol	* * ctx		1947814						
ANR	1948034	Symbol	fillbuf		1947814						
ANR	1948035	Symbol	* pad		1947814						
ANR	1948036	Symbol	resbuf		1947814						
ANR	1948037	Symbol	* ( uint32_t * ) & ctx -> buffer [ bytes + pad ]		1947814						
ANR	1948038	Symbol	* ctx -> total		1947814						
ANR	1948039	Function	sha256_process_bytes	256:0:6813:8488							
ANR	1948040	FunctionDef	"sha256_process_bytes (const void * buffer , size_t len , struct sha256_ctx * ctx)"		1948039	0					
ANR	1948041	CompoundStatement		256:89:6902:8488	1948039	0					
ANR	1948042	IfStatement	if ( ctx -> buflen != 0 )		1948039	0					
ANR	1948043	Condition	ctx -> buflen != 0	259:5:7004:7019	1948039	0	True				
ANR	1948044	EqualityExpression	ctx -> buflen != 0		1948039	0		!=			
ANR	1948045	PtrMemberAccess	ctx -> buflen		1948039	0					
ANR	1948046	Identifier	ctx		1948039	0					
ANR	1948047	Identifier	buflen		1948039	1					
ANR	1948048	PrimaryExpression	0		1948039	1					
ANR	1948049	CompoundStatement		6:2:157:215	1948039	1					
ANR	1948050	IdentifierDeclStatement	size_t left_over = ctx -> buflen ;	260:2:7026:7056	1948039	0	True				
ANR	1948051	IdentifierDecl	left_over = ctx -> buflen		1948039	0					
ANR	1948052	IdentifierDeclType	size_t		1948039	0					
ANR	1948053	Identifier	left_over		1948039	1					
ANR	1948054	AssignmentExpression	left_over = ctx -> buflen		1948039	2		=			
ANR	1948055	Identifier	left_over		1948039	0					
ANR	1948056	PtrMemberAccess	ctx -> buflen		1948039	1					
ANR	1948057	Identifier	ctx		1948039	0					
ANR	1948058	Identifier	buflen		1948039	1					
ANR	1948059	IdentifierDeclStatement	size_t add = 128 - left_over > len ? len : 128 - left_over ;	261:2:7060:7118	1948039	1	True				
ANR	1948060	IdentifierDecl	add = 128 - left_over > len ? len : 128 - left_over		1948039	0					
ANR	1948061	IdentifierDeclType	size_t		1948039	0					
ANR	1948062	Identifier	add		1948039	1					
ANR	1948063	AssignmentExpression	add = 128 - left_over > len ? len : 128 - left_over		1948039	2		=			
ANR	1948064	Identifier	add		1948039	0					
ANR	1948065	ConditionalExpression	128 - left_over > len ? len : 128 - left_over		1948039	1					
ANR	1948066	Condition	128 - left_over > len		1948039	0					
ANR	1948067	RelationalExpression	128 - left_over > len		1948039	0		>			
ANR	1948068	AdditiveExpression	128 - left_over		1948039	0		-			
ANR	1948069	PrimaryExpression	128		1948039	0					
ANR	1948070	Identifier	left_over		1948039	1					
ANR	1948071	Identifier	len		1948039	1					
ANR	1948072	Identifier	len		1948039	1					
ANR	1948073	AdditiveExpression	128 - left_over		1948039	2		-			
ANR	1948074	PrimaryExpression	128		1948039	0					
ANR	1948075	Identifier	left_over		1948039	1					
ANR	1948076	ExpressionStatement	"memcpy ( & ctx -> buffer [ left_over ] , buffer , add )"	263:4:7125:7169	1948039	2	True				
ANR	1948077	CallExpression	"memcpy ( & ctx -> buffer [ left_over ] , buffer , add )"		1948039	0					
ANR	1948078	Callee	memcpy		1948039	0					
ANR	1948079	Identifier	memcpy		1948039	0					
ANR	1948080	ArgumentList	& ctx -> buffer [ left_over ]		1948039	1					
ANR	1948081	Argument	& ctx -> buffer [ left_over ]		1948039	0					
ANR	1948082	UnaryOperationExpression	& ctx -> buffer [ left_over ]		1948039	0					
ANR	1948083	UnaryOperator	&		1948039	0					
ANR	1948084	ArrayIndexing	ctx -> buffer [ left_over ]		1948039	1					
ANR	1948085	PtrMemberAccess	ctx -> buffer		1948039	0					
ANR	1948086	Identifier	ctx		1948039	0					
ANR	1948087	Identifier	buffer		1948039	1					
ANR	1948088	Identifier	left_over		1948039	1					
ANR	1948089	Argument	buffer		1948039	1					
ANR	1948090	Identifier	buffer		1948039	0					
ANR	1948091	Argument	add		1948039	2					
ANR	1948092	Identifier	add		1948039	0					
ANR	1948093	ExpressionStatement	ctx -> buflen += add	264:4:7175:7193	1948039	3	True				
ANR	1948094	AssignmentExpression	ctx -> buflen += add		1948039	0		+=			
ANR	1948095	PtrMemberAccess	ctx -> buflen		1948039	0					
ANR	1948096	Identifier	ctx		1948039	0					
ANR	1948097	Identifier	buflen		1948039	1					
ANR	1948098	Identifier	add		1948039	1					
ANR	1948099	IfStatement	if ( ctx -> buflen > 64 )		1948039	4					
ANR	1948100	Condition	ctx -> buflen > 64	266:6:7202:7217	1948039	0	True				
ANR	1948101	RelationalExpression	ctx -> buflen > 64		1948039	0		>			
ANR	1948102	PtrMemberAccess	ctx -> buflen		1948039	0					
ANR	1948103	Identifier	ctx		1948039	0					
ANR	1948104	Identifier	buflen		1948039	1					
ANR	1948105	PrimaryExpression	64		1948039	1					
ANR	1948106	CompoundStatement		11:24:317:317	1948039	1					
ANR	1948107	ExpressionStatement	"sha256_process_block ( ctx -> buffer , ctx -> buflen & ~63 , ctx )"	267:3:7225:7282	1948039	0	True				
ANR	1948108	CallExpression	"sha256_process_block ( ctx -> buffer , ctx -> buflen & ~63 , ctx )"		1948039	0					
ANR	1948109	Callee	sha256_process_block		1948039	0					
ANR	1948110	Identifier	sha256_process_block		1948039	0					
ANR	1948111	ArgumentList	ctx -> buffer		1948039	1					
ANR	1948112	Argument	ctx -> buffer		1948039	0					
ANR	1948113	PtrMemberAccess	ctx -> buffer		1948039	0					
ANR	1948114	Identifier	ctx		1948039	0					
ANR	1948115	Identifier	buffer		1948039	1					
ANR	1948116	Argument	ctx -> buflen & ~63		1948039	1					
ANR	1948117	BitAndExpression	ctx -> buflen & ~63		1948039	0		&			
ANR	1948118	PtrMemberAccess	ctx -> buflen		1948039	0					
ANR	1948119	Identifier	ctx		1948039	0					
ANR	1948120	Identifier	buflen		1948039	1					
ANR	1948121	Identifier	~63		1948039	1					
ANR	1948122	Argument	ctx		1948039	2					
ANR	1948123	Identifier	ctx		1948039	0					
ANR	1948124	ExpressionStatement	ctx -> buflen &= 63	268:3:7287:7304	1948039	1	True				
ANR	1948125	AssignmentExpression	ctx -> buflen &= 63		1948039	0		&=			
ANR	1948126	PtrMemberAccess	ctx -> buflen		1948039	0					
ANR	1948127	Identifier	ctx		1948039	0					
ANR	1948128	Identifier	buflen		1948039	1					
ANR	1948129	PrimaryExpression	63		1948039	1					
ANR	1948130	ExpressionStatement	"memcpy ( ctx -> buffer , & ctx -> buffer [ ( left_over + add ) & ~63 ] , ctx -> buflen )"	270:3:7379:7450	1948039	2	True				
ANR	1948131	CallExpression	"memcpy ( ctx -> buffer , & ctx -> buffer [ ( left_over + add ) & ~63 ] , ctx -> buflen )"		1948039	0					
ANR	1948132	Callee	memcpy		1948039	0					
ANR	1948133	Identifier	memcpy		1948039	0					
ANR	1948134	ArgumentList	ctx -> buffer		1948039	1					
ANR	1948135	Argument	ctx -> buffer		1948039	0					
ANR	1948136	PtrMemberAccess	ctx -> buffer		1948039	0					
ANR	1948137	Identifier	ctx		1948039	0					
ANR	1948138	Identifier	buffer		1948039	1					
ANR	1948139	Argument	& ctx -> buffer [ ( left_over + add ) & ~63 ]		1948039	1					
ANR	1948140	UnaryOperationExpression	& ctx -> buffer [ ( left_over + add ) & ~63 ]		1948039	0					
ANR	1948141	UnaryOperator	&		1948039	0					
ANR	1948142	ArrayIndexing	ctx -> buffer [ ( left_over + add ) & ~63 ]		1948039	1					
ANR	1948143	PtrMemberAccess	ctx -> buffer		1948039	0					
ANR	1948144	Identifier	ctx		1948039	0					
ANR	1948145	Identifier	buffer		1948039	1					
ANR	1948146	BitAndExpression	( left_over + add ) & ~63		1948039	1		&			
ANR	1948147	AdditiveExpression	left_over + add		1948039	0		+			
ANR	1948148	Identifier	left_over		1948039	0					
ANR	1948149	Identifier	add		1948039	1					
ANR	1948150	Identifier	~63		1948039	1					
ANR	1948151	Argument	ctx -> buflen		1948039	2					
ANR	1948152	PtrMemberAccess	ctx -> buflen		1948039	0					
ANR	1948153	Identifier	ctx		1948039	0					
ANR	1948154	Identifier	buflen		1948039	1					
ANR	1948155	ExpressionStatement	buffer = ( const char * ) buffer + add	273:2:7459:7495	1948039	5	True				
ANR	1948156	AssignmentExpression	buffer = ( const char * ) buffer + add		1948039	0		=			
ANR	1948157	Identifier	buffer		1948039	0					
ANR	1948158	AdditiveExpression	( const char * ) buffer + add		1948039	1		+			
ANR	1948159	CastExpression	( const char * ) buffer		1948039	0					
ANR	1948160	CastTarget	const char *		1948039	0					
ANR	1948161	Identifier	buffer		1948039	1					
ANR	1948162	Identifier	add		1948039	1					
ANR	1948163	ExpressionStatement	len -= add	274:2:7499:7509	1948039	6	True				
ANR	1948164	AssignmentExpression	len -= add		1948039	0		-=			
ANR	1948165	Identifier	len		1948039	0					
ANR	1948166	Identifier	add		1948039	1					
ANR	1948167	IfStatement	if ( len >= 64 )		1948039	1					
ANR	1948168	Condition	len >= 64	278:5:7563:7571	1948039	0	True				
ANR	1948169	RelationalExpression	len >= 64		1948039	0		>=			
ANR	1948170	Identifier	len		1948039	0					
ANR	1948171	PrimaryExpression	64		1948039	1					
ANR	1948172	CompoundStatement		23:16:671:671	1948039	1					
ANR	1948173	Statement	define	282:2:7679:7684	1948039	0	True				
ANR	1948174	Statement	UNALIGNED_P	282:9:7686:7696	1948039	1	True				
ANR	1948175	Statement	(	282:20:7697:7697	1948039	2	True				
ANR	1948176	Statement	p	282:21:7698:7698	1948039	3	True				
ANR	1948177	Statement	)	282:22:7699:7699	1948039	4	True				
ANR	1948178	Statement	(	282:24:7701:7701	1948039	5	True				
ANR	1948179	Statement	(	282:25:7702:7702	1948039	6	True				
ANR	1948180	Statement	(	282:26:7703:7703	1948039	7	True				
ANR	1948181	Statement	uintptr_t	282:27:7704:7712	1948039	8	True				
ANR	1948182	Statement	)	282:36:7713:7713	1948039	9	True				
ANR	1948183	Statement	p	282:38:7715:7715	1948039	10	True				
ANR	1948184	Statement	)	282:39:7716:7716	1948039	11	True				
ANR	1948185	Statement	%	282:41:7718:7718	1948039	12	True				
ANR	1948186	Statement	__alignof__	282:43:7720:7730	1948039	13	True				
ANR	1948187	Statement	(	282:55:7732:7732	1948039	14	True				
ANR	1948188	Statement	uint32_t	282:56:7733:7740	1948039	15	True				
ANR	1948189	Statement	)	282:64:7741:7741	1948039	16	True				
ANR	1948190	Statement	!=	282:66:7743:7744	1948039	17	True				
ANR	1948191	Statement	0	282:69:7746:7746	1948039	18	True				
ANR	1948192	Statement	)	282:70:7747:7747	1948039	19	True				
ANR	1948193	IfStatement	if ( UNALIGNED_P ( buffer ) )		1948039	20					
ANR	1948194	Condition	UNALIGNED_P ( buffer )	286:6:7835:7854	1948039	0	True				
ANR	1948195	CallExpression	UNALIGNED_P ( buffer )		1948039	0					
ANR	1948196	Callee	UNALIGNED_P		1948039	0					
ANR	1948197	Identifier	UNALIGNED_P		1948039	0					
ANR	1948198	ArgumentList	buffer		1948039	1					
ANR	1948199	Argument	buffer		1948039	0					
ANR	1948200	Identifier	buffer		1948039	0					
ANR	1948201	WhileStatement	while ( len > 64 )		1948039	1					
ANR	1948202	Condition	len > 64	287:10:7867:7874	1948039	0	True				
ANR	1948203	RelationalExpression	len > 64		1948039	0		>			
ANR	1948204	Identifier	len		1948039	0					
ANR	1948205	PrimaryExpression	64		1948039	1					
ANR	1948206	CompoundStatement		32:20:974:974	1948039	1					
ANR	1948207	ExpressionStatement	"sha256_process_block ( memcpy ( ctx -> buffer , buffer , 64 ) , 64 , ctx )"	288:4:7883:7945	1948039	0	True				
ANR	1948208	CallExpression	"sha256_process_block ( memcpy ( ctx -> buffer , buffer , 64 ) , 64 , ctx )"		1948039	0					
ANR	1948209	Callee	sha256_process_block		1948039	0					
ANR	1948210	Identifier	sha256_process_block		1948039	0					
ANR	1948211	ArgumentList	"memcpy ( ctx -> buffer , buffer , 64 )"		1948039	1					
ANR	1948212	Argument	"memcpy ( ctx -> buffer , buffer , 64 )"		1948039	0					
ANR	1948213	CallExpression	"memcpy ( ctx -> buffer , buffer , 64 )"		1948039	0					
ANR	1948214	Callee	memcpy		1948039	0					
ANR	1948215	Identifier	memcpy		1948039	0					
ANR	1948216	ArgumentList	ctx -> buffer		1948039	1					
ANR	1948217	Argument	ctx -> buffer		1948039	0					
ANR	1948218	PtrMemberAccess	ctx -> buffer		1948039	0					
ANR	1948219	Identifier	ctx		1948039	0					
ANR	1948220	Identifier	buffer		1948039	1					
ANR	1948221	Argument	buffer		1948039	1					
ANR	1948222	Identifier	buffer		1948039	0					
ANR	1948223	Argument	64		1948039	2					
ANR	1948224	PrimaryExpression	64		1948039	0					
ANR	1948225	Argument	64		1948039	1					
ANR	1948226	PrimaryExpression	64		1948039	0					
ANR	1948227	Argument	ctx		1948039	2					
ANR	1948228	Identifier	ctx		1948039	0					
ANR	1948229	ExpressionStatement	buffer = ( const char * ) buffer + 64	289:4:7951:7986	1948039	1	True				
ANR	1948230	AssignmentExpression	buffer = ( const char * ) buffer + 64		1948039	0		=			
ANR	1948231	Identifier	buffer		1948039	0					
ANR	1948232	AdditiveExpression	( const char * ) buffer + 64		1948039	1		+			
ANR	1948233	CastExpression	( const char * ) buffer		1948039	0					
ANR	1948234	CastTarget	const char *		1948039	0					
ANR	1948235	Identifier	buffer		1948039	1					
ANR	1948236	PrimaryExpression	64		1948039	1					
ANR	1948237	ExpressionStatement	len -= 64	290:4:7992:8001	1948039	2	True				
ANR	1948238	AssignmentExpression	len -= 64		1948039	0		-=			
ANR	1948239	Identifier	len		1948039	0					
ANR	1948240	PrimaryExpression	64		1948039	1					
ANR	1948241	ElseStatement	else		1948039	0					
ANR	1948242	CompoundStatement		36:10:1110:1110	1948039	0					
ANR	1948243	ExpressionStatement	"sha256_process_block ( buffer , len & ~63 , ctx )"	292:4:8019:8063	1948039	0	True				
ANR	1948244	CallExpression	"sha256_process_block ( buffer , len & ~63 , ctx )"		1948039	0					
ANR	1948245	Callee	sha256_process_block		1948039	0					
ANR	1948246	Identifier	sha256_process_block		1948039	0					
ANR	1948247	ArgumentList	buffer		1948039	1					
ANR	1948248	Argument	buffer		1948039	0					
ANR	1948249	Identifier	buffer		1948039	0					
ANR	1948250	Argument	len & ~63		1948039	1					
ANR	1948251	BitAndExpression	len & ~63		1948039	0		&			
ANR	1948252	Identifier	len		1948039	0					
ANR	1948253	Identifier	~63		1948039	1					
ANR	1948254	Argument	ctx		1948039	2					
ANR	1948255	Identifier	ctx		1948039	0					
ANR	1948256	ExpressionStatement	buffer = ( const char * ) buffer + ( len & ~63 )	293:4:8069:8113	1948039	1	True				
ANR	1948257	AssignmentExpression	buffer = ( const char * ) buffer + ( len & ~63 )		1948039	0		=			
ANR	1948258	Identifier	buffer		1948039	0					
ANR	1948259	AdditiveExpression	( const char * ) buffer + ( len & ~63 )		1948039	1		+			
ANR	1948260	CastExpression	( const char * ) buffer		1948039	0					
ANR	1948261	CastTarget	const char *		1948039	0					
ANR	1948262	Identifier	buffer		1948039	1					
ANR	1948263	BitAndExpression	len & ~63		1948039	1		&			
ANR	1948264	Identifier	len		1948039	0					
ANR	1948265	Identifier	~63		1948039	1					
ANR	1948266	ExpressionStatement	len &= 63	294:4:8119:8128	1948039	2	True				
ANR	1948267	AssignmentExpression	len &= 63		1948039	0		&=			
ANR	1948268	Identifier	len		1948039	0					
ANR	1948269	PrimaryExpression	63		1948039	1					
ANR	1948270	IfStatement	if ( len > 0 )		1948039	2					
ANR	1948271	Condition	len > 0	299:5:8195:8201	1948039	0	True				
ANR	1948272	RelationalExpression	len > 0		1948039	0		>			
ANR	1948273	Identifier	len		1948039	0					
ANR	1948274	PrimaryExpression	0		1948039	1					
ANR	1948275	CompoundStatement		45:2:1305:1335	1948039	1					
ANR	1948276	IdentifierDeclStatement	size_t left_over = ctx -> buflen ;	300:2:8208:8238	1948039	0	True				
ANR	1948277	IdentifierDecl	left_over = ctx -> buflen		1948039	0					
ANR	1948278	IdentifierDeclType	size_t		1948039	0					
ANR	1948279	Identifier	left_over		1948039	1					
ANR	1948280	AssignmentExpression	left_over = ctx -> buflen		1948039	2		=			
ANR	1948281	Identifier	left_over		1948039	0					
ANR	1948282	PtrMemberAccess	ctx -> buflen		1948039	1					
ANR	1948283	Identifier	ctx		1948039	0					
ANR	1948284	Identifier	buflen		1948039	1					
ANR	1948285	ExpressionStatement	"memcpy ( & ctx -> buffer [ left_over ] , buffer , len )"	302:2:8243:8287	1948039	1	True				
ANR	1948286	CallExpression	"memcpy ( & ctx -> buffer [ left_over ] , buffer , len )"		1948039	0					
ANR	1948287	Callee	memcpy		1948039	0					
ANR	1948288	Identifier	memcpy		1948039	0					
ANR	1948289	ArgumentList	& ctx -> buffer [ left_over ]		1948039	1					
ANR	1948290	Argument	& ctx -> buffer [ left_over ]		1948039	0					
ANR	1948291	UnaryOperationExpression	& ctx -> buffer [ left_over ]		1948039	0					
ANR	1948292	UnaryOperator	&		1948039	0					
ANR	1948293	ArrayIndexing	ctx -> buffer [ left_over ]		1948039	1					
ANR	1948294	PtrMemberAccess	ctx -> buffer		1948039	0					
ANR	1948295	Identifier	ctx		1948039	0					
ANR	1948296	Identifier	buffer		1948039	1					
ANR	1948297	Identifier	left_over		1948039	1					
ANR	1948298	Argument	buffer		1948039	1					
ANR	1948299	Identifier	buffer		1948039	0					
ANR	1948300	Argument	len		1948039	2					
ANR	1948301	Identifier	len		1948039	0					
ANR	1948302	ExpressionStatement	left_over += len	303:2:8291:8307	1948039	2	True				
ANR	1948303	AssignmentExpression	left_over += len		1948039	0		+=			
ANR	1948304	Identifier	left_over		1948039	0					
ANR	1948305	Identifier	len		1948039	1					
ANR	1948306	IfStatement	if ( left_over >= 64 )		1948039	3					
ANR	1948307	Condition	left_over >= 64	304:6:8315:8329	1948039	0	True				
ANR	1948308	RelationalExpression	left_over >= 64		1948039	0		>=			
ANR	1948309	Identifier	left_over		1948039	0					
ANR	1948310	PrimaryExpression	64		1948039	1					
ANR	1948311	CompoundStatement		49:23:1429:1429	1948039	1					
ANR	1948312	ExpressionStatement	"sha256_process_block ( ctx -> buffer , 64 , ctx )"	305:3:8337:8379	1948039	0	True				
ANR	1948313	CallExpression	"sha256_process_block ( ctx -> buffer , 64 , ctx )"		1948039	0					
ANR	1948314	Callee	sha256_process_block		1948039	0					
ANR	1948315	Identifier	sha256_process_block		1948039	0					
ANR	1948316	ArgumentList	ctx -> buffer		1948039	1					
ANR	1948317	Argument	ctx -> buffer		1948039	0					
ANR	1948318	PtrMemberAccess	ctx -> buffer		1948039	0					
ANR	1948319	Identifier	ctx		1948039	0					
ANR	1948320	Identifier	buffer		1948039	1					
ANR	1948321	Argument	64		1948039	1					
ANR	1948322	PrimaryExpression	64		1948039	0					
ANR	1948323	Argument	ctx		1948039	2					
ANR	1948324	Identifier	ctx		1948039	0					
ANR	1948325	ExpressionStatement	left_over -= 64	306:3:8384:8399	1948039	1	True				
ANR	1948326	AssignmentExpression	left_over -= 64		1948039	0		-=			
ANR	1948327	Identifier	left_over		1948039	0					
ANR	1948328	PrimaryExpression	64		1948039	1					
ANR	1948329	ExpressionStatement	"memcpy ( ctx -> buffer , & ctx -> buffer [ 64 ] , left_over )"	307:3:8404:8452	1948039	2	True				
ANR	1948330	CallExpression	"memcpy ( ctx -> buffer , & ctx -> buffer [ 64 ] , left_over )"		1948039	0					
ANR	1948331	Callee	memcpy		1948039	0					
ANR	1948332	Identifier	memcpy		1948039	0					
ANR	1948333	ArgumentList	ctx -> buffer		1948039	1					
ANR	1948334	Argument	ctx -> buffer		1948039	0					
ANR	1948335	PtrMemberAccess	ctx -> buffer		1948039	0					
ANR	1948336	Identifier	ctx		1948039	0					
ANR	1948337	Identifier	buffer		1948039	1					
ANR	1948338	Argument	& ctx -> buffer [ 64 ]		1948039	1					
ANR	1948339	UnaryOperationExpression	& ctx -> buffer [ 64 ]		1948039	0					
ANR	1948340	UnaryOperator	&		1948039	0					
ANR	1948341	ArrayIndexing	ctx -> buffer [ 64 ]		1948039	1					
ANR	1948342	PtrMemberAccess	ctx -> buffer		1948039	0					
ANR	1948343	Identifier	ctx		1948039	0					
ANR	1948344	Identifier	buffer		1948039	1					
ANR	1948345	PrimaryExpression	64		1948039	1					
ANR	1948346	Argument	left_over		1948039	2					
ANR	1948347	Identifier	left_over		1948039	0					
ANR	1948348	ExpressionStatement	ctx -> buflen = left_over	309:2:8460:8483	1948039	4	True				
ANR	1948349	AssignmentExpression	ctx -> buflen = left_over		1948039	0		=			
ANR	1948350	PtrMemberAccess	ctx -> buflen		1948039	0					
ANR	1948351	Identifier	ctx		1948039	0					
ANR	1948352	Identifier	buflen		1948039	1					
ANR	1948353	Identifier	left_over		1948039	1					
ANR	1948354	ReturnType	static void		1948039	1					
ANR	1948355	Identifier	sha256_process_bytes		1948039	2					
ANR	1948356	ParameterList	"const void * buffer , size_t len , struct sha256_ctx * ctx"		1948039	3					
ANR	1948357	Parameter	const void * buffer	256:33:6846:6863	1948039	0	True				
ANR	1948358	ParameterType	const void *		1948039	0					
ANR	1948359	Identifier	buffer		1948039	1					
ANR	1948360	Parameter	size_t len	256:53:6866:6875	1948039	1	True				
ANR	1948361	ParameterType	size_t		1948039	0					
ANR	1948362	Identifier	len		1948039	1					
ANR	1948363	Parameter	struct sha256_ctx * ctx	256:65:6878:6899	1948039	2	True				
ANR	1948364	ParameterType	struct sha256_ctx *		1948039	0					
ANR	1948365	Identifier	ctx		1948039	1					
ANR	1948366	CFGEntryNode	ENTRY		1948039		True				
ANR	1948367	CFGExitNode	EXIT		1948039		True				
ANR	1948368	Symbol	add		1948039						
ANR	1948369	Symbol	len		1948039						
ANR	1948370	Symbol	memcpy		1948039						
ANR	1948371	Symbol	ctx		1948039						
ANR	1948372	Symbol	ctx -> buflen		1948039						
ANR	1948373	Symbol	ctx -> buffer		1948039						
ANR	1948374	Symbol	~63		1948039						
ANR	1948375	Symbol	buffer		1948039						
ANR	1948376	Symbol	* ctx		1948039						
ANR	1948377	Symbol	left_over		1948039						
ANR	1948378	Symbol	UNALIGNED_P		1948039						
ANR	1948379	DeclStmt									
ANR	1948380	Decl							const char	const char [ ]	sha256_salt_prefix
ANR	1948381	DeclStmt									
ANR	1948382	Decl							const char	const char [ ]	sha256_rounds_prefix
ANR	1948383	DeclStmt									
ANR	1948384	Decl							const char	const char [ 64 ]	b64t
ANR	1948385	Function	php_sha256_crypt_r	334:0:9151:16898							
ANR	1948386	FunctionDef	"php_sha256_crypt_r (const char * key , const char * salt , char * buffer , int buflen)"		1948385	0					
ANR	1948387	CompoundStatement		335:0:9238:16898	1948385	0					
ANR	1948388	Statement	if	337:2:9259:9260	1948385	0	True				
ANR	1948389	Statement	_MSC	337:5:9262:9265	1948385	1	True				
ANR	1948390	Statement	<=	337:10:9267:9268	1948385	2	True				
ANR	1948391	Statement	1300	337:13:9270:9273	1948385	3	True				
ANR	1948392	Statement	pragma	338:3:9278:9283	1948385	4	True				
ANR	1948393	Statement	pack	338:10:9285:9288	1948385	5	True				
ANR	1948394	Statement	(	338:14:9289:9289	1948385	6	True				
ANR	1948395	Statement	push	338:15:9290:9293	1948385	7	True				
ANR	1948396	Statement	","	338:19:9294:9294	1948385	8	True				
ANR	1948397	Statement	16	338:21:9296:9297	1948385	9	True				
ANR	1948398	Statement	)	338:23:9298:9298	1948385	10	True				
ANR	1948399	IdentifierDeclStatement	unsigned char alt_result [ 32 ] ;	339:1:9301:9329	1948385	11	True				
ANR	1948400	IdentifierDecl	alt_result [ 32 ]		1948385	0					
ANR	1948401	IdentifierDeclType	unsigned char [ 32 ]		1948385	0					
ANR	1948402	Identifier	alt_result		1948385	1					
ANR	1948403	PrimaryExpression	32		1948385	2					
ANR	1948404	IdentifierDeclStatement	unsigned char temp_result [ 32 ] ;	340:1:9332:9361	1948385	12	True				
ANR	1948405	IdentifierDecl	temp_result [ 32 ]		1948385	0					
ANR	1948406	IdentifierDeclType	unsigned char [ 32 ]		1948385	0					
ANR	1948407	Identifier	temp_result		1948385	1					
ANR	1948408	PrimaryExpression	32		1948385	2					
ANR	1948409	Statement	pragma	341:3:9366:9371	1948385	13	True				
ANR	1948410	Statement	pack	341:10:9373:9376	1948385	14	True				
ANR	1948411	Statement	(	341:14:9377:9377	1948385	15	True				
ANR	1948412	Statement	pop	341:15:9378:9380	1948385	16	True				
ANR	1948413	Statement	)	341:18:9381:9381	1948385	17	True				
ANR	1948414	ReturnType	char *		1948385	1					
ANR	1948415	Identifier	php_sha256_crypt_r		1948385	2					
ANR	1948416	ParameterList	"const char * key , const char * salt , char * buffer , int buflen"		1948385	3					
ANR	1948417	Parameter	const char * key	334:26:9177:9191	1948385	0	True				
ANR	1948418	ParameterType	const char *		1948385	0					
ANR	1948419	Identifier	key		1948385	1					
ANR	1948420	Parameter	const char * salt	334:43:9194:9209	1948385	1	True				
ANR	1948421	ParameterType	const char *		1948385	0					
ANR	1948422	Identifier	salt		1948385	1					
ANR	1948423	Parameter	char * buffer	334:61:9212:9223	1948385	2	True				
ANR	1948424	ParameterType	char *		1948385	0					
ANR	1948425	Identifier	buffer		1948385	1					
ANR	1948426	Parameter	int buflen	334:75:9226:9235	1948385	3	True				
ANR	1948427	ParameterType	int		1948385	0					
ANR	1948428	Identifier	buflen		1948385	1					
ANR	1948429	CFGEntryNode	ENTRY		1948385		True				
ANR	1948430	CFGExitNode	EXIT		1948385		True				
ANR	1948431	Symbol	salt		1948385						
ANR	1948432	Symbol	temp_result		1948385						
ANR	1948433	Symbol	buflen		1948385						
ANR	1948434	Symbol	buffer		1948385						
ANR	1948435	Symbol	alt_result		1948385						
ANR	1948436	Symbol	key		1948385						
ANR	1948437	Function	php_sha256_crypt	594:0:16982:17648							
ANR	1948438	FunctionDef	"php_sha256_crypt (const char * key , const char * salt)"		1948437	0					
ANR	1948439	CompoundStatement		595:0:17041:17648	1948437	0					
ANR	1948440	Statement	static	600:1:17256:17261	1948437	0	True				
ANR	1948441	IdentifierDeclStatement	char * buffer ;	600:8:17263:17275	1948437	1	True				
ANR	1948442	IdentifierDecl	* buffer		1948437	0					
ANR	1948443	IdentifierDeclType	char *		1948437	0					
ANR	1948444	Identifier	buffer		1948437	1					
ANR	1948445	Statement	static	601:1:17278:17283	1948437	2	True				
ANR	1948446	IdentifierDeclStatement	int buflen ;	601:8:17285:17295	1948437	3	True				
ANR	1948447	IdentifierDecl	buflen		1948437	0					
ANR	1948448	IdentifierDeclType	int		1948437	0					
ANR	1948449	Identifier	buflen		1948437	1					
ANR	1948450	IdentifierDeclStatement	int needed = ( sizeof ( sha256_salt_prefix ) - 1 + sizeof ( sha256_rounds_prefix ) + 9 + 1 + strlen ( salt ) + 1 + 43 + 1 ) ;	602:1:17298:17416	1948437	4	True				
ANR	1948451	IdentifierDecl	needed = ( sizeof ( sha256_salt_prefix ) - 1 + sizeof ( sha256_rounds_prefix ) + 9 + 1 + strlen ( salt ) + 1 + 43 + 1 )		1948437	0					
ANR	1948452	IdentifierDeclType	int		1948437	0					
ANR	1948453	Identifier	needed		1948437	1					
ANR	1948454	AssignmentExpression	needed = ( sizeof ( sha256_salt_prefix ) - 1 + sizeof ( sha256_rounds_prefix ) + 9 + 1 + strlen ( salt ) + 1 + 43 + 1 )		1948437	2		=			
ANR	1948455	Identifier	needed		1948437	0					
ANR	1948456	AdditiveExpression	sizeof ( sha256_salt_prefix ) - 1 + sizeof ( sha256_rounds_prefix ) + 9 + 1 + strlen ( salt ) + 1 + 43 + 1		1948437	1		-			
ANR	1948457	SizeofExpression	sizeof ( sha256_salt_prefix )		1948437	0					
ANR	1948458	Sizeof	sizeof		1948437	0					
ANR	1948459	SizeofOperand	sha256_salt_prefix		1948437	1					
ANR	1948460	AdditiveExpression	1 + sizeof ( sha256_rounds_prefix ) + 9 + 1 + strlen ( salt ) + 1 + 43 + 1		1948437	1		+			
ANR	1948461	PrimaryExpression	1		1948437	0					
ANR	1948462	AdditiveExpression	sizeof ( sha256_rounds_prefix ) + 9 + 1 + strlen ( salt ) + 1 + 43 + 1		1948437	1		+			
ANR	1948463	SizeofExpression	sizeof ( sha256_rounds_prefix )		1948437	0					
ANR	1948464	Sizeof	sizeof		1948437	0					
ANR	1948465	SizeofOperand	sha256_rounds_prefix		1948437	1					
ANR	1948466	AdditiveExpression	9 + 1 + strlen ( salt ) + 1 + 43 + 1		1948437	1		+			
ANR	1948467	PrimaryExpression	9		1948437	0					
ANR	1948468	AdditiveExpression	1 + strlen ( salt ) + 1 + 43 + 1		1948437	1		+			
ANR	1948469	PrimaryExpression	1		1948437	0					
ANR	1948470	AdditiveExpression	strlen ( salt ) + 1 + 43 + 1		1948437	1		+			
ANR	1948471	CallExpression	strlen ( salt )		1948437	0					
ANR	1948472	Callee	strlen		1948437	0					
ANR	1948473	Identifier	strlen		1948437	0					
ANR	1948474	ArgumentList	salt		1948437	1					
ANR	1948475	Argument	salt		1948437	0					
ANR	1948476	Identifier	salt		1948437	0					
ANR	1948477	AdditiveExpression	1 + 43 + 1		1948437	1		+			
ANR	1948478	PrimaryExpression	1		1948437	0					
ANR	1948479	AdditiveExpression	43 + 1		1948437	1		+			
ANR	1948480	PrimaryExpression	43		1948437	0					
ANR	1948481	PrimaryExpression	1		1948437	1					
ANR	1948482	IfStatement	if ( buflen < needed )		1948437	5					
ANR	1948483	Condition	buflen < needed	606:5:17424:17438	1948437	0	True				
ANR	1948484	RelationalExpression	buflen < needed		1948437	0		<			
ANR	1948485	Identifier	buflen		1948437	0					
ANR	1948486	Identifier	needed		1948437	1					
ANR	1948487	CompoundStatement		13:2:403:454	1948437	1					
ANR	1948488	IdentifierDeclStatement	"char * new_buffer = ( char * ) realloc ( buffer , needed ) ;"	607:2:17445:17496	1948437	0	True				
ANR	1948489	IdentifierDecl	"* new_buffer = ( char * ) realloc ( buffer , needed )"		1948437	0					
ANR	1948490	IdentifierDeclType	char *		1948437	0					
ANR	1948491	Identifier	new_buffer		1948437	1					
ANR	1948492	AssignmentExpression	"* new_buffer = ( char * ) realloc ( buffer , needed )"		1948437	2		=			
ANR	1948493	Identifier	new_buffer		1948437	0					
ANR	1948494	CastExpression	"( char * ) realloc ( buffer , needed )"		1948437	1					
ANR	1948495	CastTarget	char *		1948437	0					
ANR	1948496	CallExpression	"realloc ( buffer , needed )"		1948437	1					
ANR	1948497	Callee	realloc		1948437	0					
ANR	1948498	Identifier	realloc		1948437	0					
ANR	1948499	ArgumentList	buffer		1948437	1					
ANR	1948500	Argument	buffer		1948437	0					
ANR	1948501	Identifier	buffer		1948437	0					
ANR	1948502	Argument	needed		1948437	1					
ANR	1948503	Identifier	needed		1948437	0					
ANR	1948504	IfStatement	if ( new_buffer == NULL )		1948437	1					
ANR	1948505	Condition	new_buffer == NULL	608:6:17504:17521	1948437	0	True				
ANR	1948506	EqualityExpression	new_buffer == NULL		1948437	0		==			
ANR	1948507	Identifier	new_buffer		1948437	0					
ANR	1948508	Identifier	NULL		1948437	1					
ANR	1948509	CompoundStatement		14:26:482:482	1948437	1					
ANR	1948510	ReturnStatement	return NULL ;	609:3:17529:17540	1948437	0	True				
ANR	1948511	Identifier	NULL		1948437	0					
ANR	1948512	ExpressionStatement	buffer = new_buffer	612:2:17549:17568	1948437	2	True				
ANR	1948513	AssignmentExpression	buffer = new_buffer		1948437	0		=			
ANR	1948514	Identifier	buffer		1948437	0					
ANR	1948515	Identifier	new_buffer		1948437	1					
ANR	1948516	ExpressionStatement	buflen = needed	613:2:17572:17587	1948437	3	True				
ANR	1948517	AssignmentExpression	buflen = needed		1948437	0		=			
ANR	1948518	Identifier	buflen		1948437	0					
ANR	1948519	Identifier	needed		1948437	1					
ANR	1948520	ReturnStatement	"return php_sha256_crypt_r ( key , salt , buffer , buflen ) ;"	616:1:17594:17646	1948437	6	True				
ANR	1948521	CallExpression	"php_sha256_crypt_r ( key , salt , buffer , buflen )"		1948437	0					
ANR	1948522	Callee	php_sha256_crypt_r		1948437	0					
ANR	1948523	Identifier	php_sha256_crypt_r		1948437	0					
ANR	1948524	ArgumentList	key		1948437	1					
ANR	1948525	Argument	key		1948437	0					
ANR	1948526	Identifier	key		1948437	0					
ANR	1948527	Argument	salt		1948437	1					
ANR	1948528	Identifier	salt		1948437	0					
ANR	1948529	Argument	buffer		1948437	2					
ANR	1948530	Identifier	buffer		1948437	0					
ANR	1948531	Argument	buflen		1948437	3					
ANR	1948532	Identifier	buflen		1948437	0					
ANR	1948533	ReturnType	char *		1948437	1					
ANR	1948534	Identifier	php_sha256_crypt		1948437	2					
ANR	1948535	ParameterList	"const char * key , const char * salt"		1948437	3					
ANR	1948536	Parameter	const char * key	594:24:17006:17020	1948437	0	True				
ANR	1948537	ParameterType	const char *		1948437	0					
ANR	1948538	Identifier	key		1948437	1					
ANR	1948539	Parameter	const char * salt	594:41:17023:17038	1948437	1	True				
ANR	1948540	ParameterType	const char *		1948437	0					
ANR	1948541	Identifier	salt		1948437	1					
ANR	1948542	CFGEntryNode	ENTRY		1948437		True				
ANR	1948543	CFGExitNode	EXIT		1948437		True				
ANR	1948544	Symbol	strlen		1948437						
ANR	1948545	Symbol	salt		1948437						
ANR	1948546	Symbol	NULL		1948437						
ANR	1948547	Symbol	needed		1948437						
ANR	1948548	Symbol	buflen		1948437						
ANR	1948549	Symbol	new_buffer		1948437						
ANR	1948550	Symbol	buffer		1948437						
ANR	1948551	Symbol	realloc		1948437						
ANR	1948552	Symbol	php_sha256_crypt_r		1948437						
ANR	1948553	Symbol	key		1948437						
ANR	1948554	ClassDef	<unnamed>	621:13:17677:19513							
ANR	1948555	DeclStmt									
ANR	1948556	Decl							const char	const char *	input
ANR	1948557	DeclStmt									
ANR	1948558	Decl							const char	const char [ 32 ]	result
ANR	1948559	DeclStmt									
ANR	1948560	Decl								 [ ]	tests
ANR	1948561	ClassDef	<unnamed>	662:13:19582:20742							
ANR	1948562	DeclStmt									
ANR	1948563	Decl							const char	const char *	salt
ANR	1948564	DeclStmt									
ANR	1948565	Decl							const char	const char *	input
ANR	1948566	DeclStmt									
ANR	1948567	Decl							const char	const char *	expected
ANR	1948568	DeclStmt									
ANR	1948569	Decl								 [ ]	tests2
ANR	1948570	Function	main	695:0:20801:22286							
ANR	1948571	FunctionDef	main ()		1948570	0					
ANR	1948572	CompoundStatement		695:15:20816:22286	1948570	0					
ANR	1948573	IdentifierDeclStatement	struct sha256_ctx ctx ;	696:1:20819:20840	1948570	0	True				
ANR	1948574	IdentifierDecl	ctx		1948570	0					
ANR	1948575	IdentifierDeclType	struct sha256_ctx		1948570	0					
ANR	1948576	Identifier	ctx		1948570	1					
ANR	1948577	IdentifierDeclStatement	char sum [ 32 ] ;	697:1:20843:20855	1948570	1	True				
ANR	1948578	IdentifierDecl	sum [ 32 ]		1948570	0					
ANR	1948579	IdentifierDeclType	char [ 32 ]		1948570	0					
ANR	1948580	Identifier	sum		1948570	1					
ANR	1948581	PrimaryExpression	32		1948570	2					
ANR	1948582	IdentifierDeclStatement	int result = 0 ;	698:1:20858:20872	1948570	2	True				
ANR	1948583	IdentifierDecl	result = 0		1948570	0					
ANR	1948584	IdentifierDeclType	int		1948570	0					
ANR	1948585	Identifier	result		1948570	1					
ANR	1948586	AssignmentExpression	result = 0		1948570	2		=			
ANR	1948587	Identifier	result		1948570	0					
ANR	1948588	PrimaryExpression	0		1948570	1					
ANR	1948589	IdentifierDeclStatement	"int cnt , i ;"	699:1:20875:20885	1948570	3	True				
ANR	1948590	IdentifierDecl	cnt		1948570	0					
ANR	1948591	IdentifierDeclType	int		1948570	0					
ANR	1948592	Identifier	cnt		1948570	1					
ANR	1948593	IdentifierDecl	i		1948570	1					
ANR	1948594	IdentifierDeclType	int		1948570	0					
ANR	1948595	Identifier	i		1948570	1					
ANR	1948596	IdentifierDeclStatement	char buf [ 1000 ] ;	700:1:20888:20902	1948570	4	True				
ANR	1948597	IdentifierDecl	buf [ 1000 ]		1948570	0					
ANR	1948598	IdentifierDeclType	char [ 1000 ]		1948570	0					
ANR	1948599	Identifier	buf		1948570	1					
ANR	1948600	PrimaryExpression	1000		1948570	2					
ANR	1948601	Statement	static	701:1:20905:20910	1948570	5	True				
ANR	1948602	Statement	const	701:8:20912:20916	1948570	6	True				
ANR	1948603	Statement	char	701:14:20918:20921	1948570	7	True				
ANR	1948604	Statement	expected	701:19:20923:20930	1948570	8	True				
ANR	1948605	Statement	[	701:27:20931:20931	1948570	9	True				
ANR	1948606	Statement	32	701:28:20932:20933	1948570	10	True				
ANR	1948607	Statement	]	701:30:20934:20934	1948570	11	True				
ANR	1948608	Statement	=	701:32:20936:20936	1948570	12	True				
ANR	1948609	Statement	"""\\xcd\\xc7\\x6e\\x5c\\x99\\x14\\xfb\\x92\\x81\\xa1\\xc7\\xe2\\x84\\xd7\\x3e\\x67"""	702:1:20939:21004	1948570	13	True				
ANR	1948610	ExpressionStatement	"""\\xf1\\x80\\x9a\\x48\\xa4\\x97\\x20\\x0e\\x04\\x6d\\x39\\xcc\\xc7\\x11\\x2c\\xd0"""	703:1:21007:21073	1948570	14	True				
ANR	1948611	PrimaryExpression	"""\\xf1\\x80\\x9a\\x48\\xa4\\x97\\x20\\x0e\\x04\\x6d\\x39\\xcc\\xc7\\x11\\x2c\\xd0"""		1948570	0					
ANR	1948612	ForStatement	for ( cnt = 0 ; cnt < ( int ) ntests ; ++ cnt )		1948570	15					
ANR	1948613	ForInit	cnt = 0 ;	705:6:21082:21089	1948570	0	True				
ANR	1948614	AssignmentExpression	cnt = 0		1948570	0		=			
ANR	1948615	Identifier	cnt		1948570	0					
ANR	1948616	PrimaryExpression	0		1948570	1					
ANR	1948617	Condition	cnt < ( int ) ntests	705:15:21091:21108	1948570	1	True				
ANR	1948618	RelationalExpression	cnt < ( int ) ntests		1948570	0		<			
ANR	1948619	Identifier	cnt		1948570	0					
ANR	1948620	CastExpression	( int ) ntests		1948570	1					
ANR	1948621	CastTarget	int		1948570	0					
ANR	1948622	Identifier	ntests		1948570	1					
ANR	1948623	UnaryExpression	++ cnt	705:35:21111:21115	1948570	2	True				
ANR	1948624	IncDec	++		1948570	0					
ANR	1948625	Identifier	cnt		1948570	1					
ANR	1948626	CompoundStatement		11:42:301:301	1948570	3					
ANR	1948627	ExpressionStatement	sha256_init_ctx ( & ctx )	706:2:21122:21143	1948570	0	True				
ANR	1948628	CallExpression	sha256_init_ctx ( & ctx )		1948570	0					
ANR	1948629	Callee	sha256_init_ctx		1948570	0					
ANR	1948630	Identifier	sha256_init_ctx		1948570	0					
ANR	1948631	ArgumentList	& ctx		1948570	1					
ANR	1948632	Argument	& ctx		1948570	0					
ANR	1948633	UnaryOperationExpression	& ctx		1948570	0					
ANR	1948634	UnaryOperator	&		1948570	0					
ANR	1948635	Identifier	ctx		1948570	1					
ANR	1948636	ExpressionStatement	"sha256_process_bytes ( tests [ cnt ] . input , strlen ( tests [ cnt ] . input ) , & ctx )"	707:2:21147:21217	1948570	1	True				
ANR	1948637	CallExpression	"sha256_process_bytes ( tests [ cnt ] . input , strlen ( tests [ cnt ] . input ) , & ctx )"		1948570	0					
ANR	1948638	Callee	sha256_process_bytes		1948570	0					
ANR	1948639	Identifier	sha256_process_bytes		1948570	0					
ANR	1948640	ArgumentList	tests [ cnt ] . input		1948570	1					
ANR	1948641	Argument	tests [ cnt ] . input		1948570	0					
ANR	1948642	MemberAccess	tests [ cnt ] . input		1948570	0					
ANR	1948643	ArrayIndexing	tests [ cnt ]		1948570	0					
ANR	1948644	Identifier	tests		1948570	0					
ANR	1948645	Identifier	cnt		1948570	1					
ANR	1948646	Identifier	input		1948570	1					
ANR	1948647	Argument	strlen ( tests [ cnt ] . input )		1948570	1					
ANR	1948648	CallExpression	strlen ( tests [ cnt ] . input )		1948570	0					
ANR	1948649	Callee	strlen		1948570	0					
ANR	1948650	Identifier	strlen		1948570	0					
ANR	1948651	ArgumentList	tests [ cnt ] . input		1948570	1					
ANR	1948652	Argument	tests [ cnt ] . input		1948570	0					
ANR	1948653	MemberAccess	tests [ cnt ] . input		1948570	0					
ANR	1948654	ArrayIndexing	tests [ cnt ]		1948570	0					
ANR	1948655	Identifier	tests		1948570	0					
ANR	1948656	Identifier	cnt		1948570	1					
ANR	1948657	Identifier	input		1948570	1					
ANR	1948658	Argument	& ctx		1948570	2					
ANR	1948659	UnaryOperationExpression	& ctx		1948570	0					
ANR	1948660	UnaryOperator	&		1948570	0					
ANR	1948661	Identifier	ctx		1948570	1					
ANR	1948662	ExpressionStatement	"sha256_finish_ctx ( & ctx , sum )"	708:2:21221:21249	1948570	2	True				
ANR	1948663	CallExpression	"sha256_finish_ctx ( & ctx , sum )"		1948570	0					
ANR	1948664	Callee	sha256_finish_ctx		1948570	0					
ANR	1948665	Identifier	sha256_finish_ctx		1948570	0					
ANR	1948666	ArgumentList	& ctx		1948570	1					
ANR	1948667	Argument	& ctx		1948570	0					
ANR	1948668	UnaryOperationExpression	& ctx		1948570	0					
ANR	1948669	UnaryOperator	&		1948570	0					
ANR	1948670	Identifier	ctx		1948570	1					
ANR	1948671	Argument	sum		1948570	1					
ANR	1948672	Identifier	sum		1948570	0					
ANR	1948673	IfStatement	"if ( memcmp ( tests [ cnt ] . result , sum , 32 ) != 0 )"		1948570	3					
ANR	1948674	Condition	"memcmp ( tests [ cnt ] . result , sum , 32 ) != 0"	709:6:21257:21295	1948570	0	True				
ANR	1948675	EqualityExpression	"memcmp ( tests [ cnt ] . result , sum , 32 ) != 0"		1948570	0		!=			
ANR	1948676	CallExpression	"memcmp ( tests [ cnt ] . result , sum , 32 )"		1948570	0					
ANR	1948677	Callee	memcmp		1948570	0					
ANR	1948678	Identifier	memcmp		1948570	0					
ANR	1948679	ArgumentList	tests [ cnt ] . result		1948570	1					
ANR	1948680	Argument	tests [ cnt ] . result		1948570	0					
ANR	1948681	MemberAccess	tests [ cnt ] . result		1948570	0					
ANR	1948682	ArrayIndexing	tests [ cnt ]		1948570	0					
ANR	1948683	Identifier	tests		1948570	0					
ANR	1948684	Identifier	cnt		1948570	1					
ANR	1948685	Identifier	result		1948570	1					
ANR	1948686	Argument	sum		1948570	1					
ANR	1948687	Identifier	sum		1948570	0					
ANR	1948688	Argument	32		1948570	2					
ANR	1948689	PrimaryExpression	32		1948570	0					
ANR	1948690	PrimaryExpression	0		1948570	1					
ANR	1948691	CompoundStatement		15:47:481:481	1948570	1					
ANR	1948692	ExpressionStatement	"printf ( ""test %d run %d failed\\n"" , cnt , 1 )"	710:3:21303:21344	1948570	0	True				
ANR	1948693	CallExpression	"printf ( ""test %d run %d failed\\n"" , cnt , 1 )"		1948570	0					
ANR	1948694	Callee	printf		1948570	0					
ANR	1948695	Identifier	printf		1948570	0					
ANR	1948696	ArgumentList	"""test %d run %d failed\\n"""		1948570	1					
ANR	1948697	Argument	"""test %d run %d failed\\n"""		1948570	0					
ANR	1948698	PrimaryExpression	"""test %d run %d failed\\n"""		1948570	0					
ANR	1948699	Argument	cnt		1948570	1					
ANR	1948700	Identifier	cnt		1948570	0					
ANR	1948701	Argument	1		1948570	2					
ANR	1948702	PrimaryExpression	1		1948570	0					
ANR	1948703	ExpressionStatement	result = 1	711:3:21349:21359	1948570	1	True				
ANR	1948704	AssignmentExpression	result = 1		1948570	0		=			
ANR	1948705	Identifier	result		1948570	0					
ANR	1948706	PrimaryExpression	1		1948570	1					
ANR	1948707	ExpressionStatement	sha256_init_ctx ( & ctx )	714:2:21368:21389	1948570	4	True				
ANR	1948708	CallExpression	sha256_init_ctx ( & ctx )		1948570	0					
ANR	1948709	Callee	sha256_init_ctx		1948570	0					
ANR	1948710	Identifier	sha256_init_ctx		1948570	0					
ANR	1948711	ArgumentList	& ctx		1948570	1					
ANR	1948712	Argument	& ctx		1948570	0					
ANR	1948713	UnaryOperationExpression	& ctx		1948570	0					
ANR	1948714	UnaryOperator	&		1948570	0					
ANR	1948715	Identifier	ctx		1948570	1					
ANR	1948716	ForStatement	for ( i = 0 ; tests [ cnt ] . input [ i ] != '\\0' ; ++ i )		1948570	5					
ANR	1948717	ForInit	i = 0 ;	715:7:21398:21403	1948570	0	True				
ANR	1948718	AssignmentExpression	i = 0		1948570	0		=			
ANR	1948719	Identifier	i		1948570	0					
ANR	1948720	PrimaryExpression	0		1948570	1					
ANR	1948721	Condition	tests [ cnt ] . input [ i ] != '\\0'	715:14:21405:21431	1948570	1	True				
ANR	1948722	EqualityExpression	tests [ cnt ] . input [ i ] != '\\0'		1948570	0		!=			
ANR	1948723	ArrayIndexing	tests [ cnt ] . input [ i ]		1948570	0					
ANR	1948724	MemberAccess	tests [ cnt ] . input		1948570	0					
ANR	1948725	ArrayIndexing	tests [ cnt ]		1948570	0					
ANR	1948726	Identifier	tests		1948570	0					
ANR	1948727	Identifier	cnt		1948570	1					
ANR	1948728	Identifier	input		1948570	1					
ANR	1948729	Identifier	i		1948570	1					
ANR	1948730	PrimaryExpression	'\\0'		1948570	1					
ANR	1948731	UnaryExpression	++ i	715:43:21434:21436	1948570	2	True				
ANR	1948732	IncDec	++		1948570	0					
ANR	1948733	Identifier	i		1948570	1					
ANR	1948734	CompoundStatement		21:48:622:622	1948570	3					
ANR	1948735	ExpressionStatement	"sha256_process_bytes ( & tests [ cnt ] . input [ i ] , 1 , & ctx )"	716:3:21444:21495	1948570	0	True				
ANR	1948736	CallExpression	"sha256_process_bytes ( & tests [ cnt ] . input [ i ] , 1 , & ctx )"		1948570	0					
ANR	1948737	Callee	sha256_process_bytes		1948570	0					
ANR	1948738	Identifier	sha256_process_bytes		1948570	0					
ANR	1948739	ArgumentList	& tests [ cnt ] . input [ i ]		1948570	1					
ANR	1948740	Argument	& tests [ cnt ] . input [ i ]		1948570	0					
ANR	1948741	UnaryOperationExpression	& tests [ cnt ] . input [ i ]		1948570	0					
ANR	1948742	UnaryOperator	&		1948570	0					
ANR	1948743	ArrayIndexing	tests [ cnt ] . input [ i ]		1948570	1					
ANR	1948744	MemberAccess	tests [ cnt ] . input		1948570	0					
ANR	1948745	ArrayIndexing	tests [ cnt ]		1948570	0					
ANR	1948746	Identifier	tests		1948570	0					
ANR	1948747	Identifier	cnt		1948570	1					
ANR	1948748	Identifier	input		1948570	1					
ANR	1948749	Identifier	i		1948570	1					
ANR	1948750	Argument	1		1948570	1					
ANR	1948751	PrimaryExpression	1		1948570	0					
ANR	1948752	Argument	& ctx		1948570	2					
ANR	1948753	UnaryOperationExpression	& ctx		1948570	0					
ANR	1948754	UnaryOperator	&		1948570	0					
ANR	1948755	Identifier	ctx		1948570	1					
ANR	1948756	ExpressionStatement	"sha256_finish_ctx ( & ctx , sum )"	718:2:21503:21531	1948570	6	True				
ANR	1948757	CallExpression	"sha256_finish_ctx ( & ctx , sum )"		1948570	0					
ANR	1948758	Callee	sha256_finish_ctx		1948570	0					
ANR	1948759	Identifier	sha256_finish_ctx		1948570	0					
ANR	1948760	ArgumentList	& ctx		1948570	1					
ANR	1948761	Argument	& ctx		1948570	0					
ANR	1948762	UnaryOperationExpression	& ctx		1948570	0					
ANR	1948763	UnaryOperator	&		1948570	0					
ANR	1948764	Identifier	ctx		1948570	1					
ANR	1948765	Argument	sum		1948570	1					
ANR	1948766	Identifier	sum		1948570	0					
ANR	1948767	IfStatement	"if ( memcmp ( tests [ cnt ] . result , sum , 32 ) != 0 )"		1948570	7					
ANR	1948768	Condition	"memcmp ( tests [ cnt ] . result , sum , 32 ) != 0"	719:6:21539:21577	1948570	0	True				
ANR	1948769	EqualityExpression	"memcmp ( tests [ cnt ] . result , sum , 32 ) != 0"		1948570	0		!=			
ANR	1948770	CallExpression	"memcmp ( tests [ cnt ] . result , sum , 32 )"		1948570	0					
ANR	1948771	Callee	memcmp		1948570	0					
ANR	1948772	Identifier	memcmp		1948570	0					
ANR	1948773	ArgumentList	tests [ cnt ] . result		1948570	1					
ANR	1948774	Argument	tests [ cnt ] . result		1948570	0					
ANR	1948775	MemberAccess	tests [ cnt ] . result		1948570	0					
ANR	1948776	ArrayIndexing	tests [ cnt ]		1948570	0					
ANR	1948777	Identifier	tests		1948570	0					
ANR	1948778	Identifier	cnt		1948570	1					
ANR	1948779	Identifier	result		1948570	1					
ANR	1948780	Argument	sum		1948570	1					
ANR	1948781	Identifier	sum		1948570	0					
ANR	1948782	Argument	32		1948570	2					
ANR	1948783	PrimaryExpression	32		1948570	0					
ANR	1948784	PrimaryExpression	0		1948570	1					
ANR	1948785	CompoundStatement		25:47:763:763	1948570	1					
ANR	1948786	ExpressionStatement	"printf ( ""test %d run %d failed\\n"" , cnt , 2 )"	720:3:21585:21626	1948570	0	True				
ANR	1948787	CallExpression	"printf ( ""test %d run %d failed\\n"" , cnt , 2 )"		1948570	0					
ANR	1948788	Callee	printf		1948570	0					
ANR	1948789	Identifier	printf		1948570	0					
ANR	1948790	ArgumentList	"""test %d run %d failed\\n"""		1948570	1					
ANR	1948791	Argument	"""test %d run %d failed\\n"""		1948570	0					
ANR	1948792	PrimaryExpression	"""test %d run %d failed\\n"""		1948570	0					
ANR	1948793	Argument	cnt		1948570	1					
ANR	1948794	Identifier	cnt		1948570	0					
ANR	1948795	Argument	2		1948570	2					
ANR	1948796	PrimaryExpression	2		1948570	0					
ANR	1948797	ExpressionStatement	result = 1	721:3:21631:21641	1948570	1	True				
ANR	1948798	AssignmentExpression	result = 1		1948570	0		=			
ANR	1948799	Identifier	result		1948570	0					
ANR	1948800	PrimaryExpression	1		1948570	1					
ANR	1948801	ExpressionStatement	"memset ( buf , 'a' , sizeof ( buf ) )"	727:1:21704:21733	1948570	16	True				
ANR	1948802	CallExpression	"memset ( buf , 'a' , sizeof ( buf ) )"		1948570	0					
ANR	1948803	Callee	memset		1948570	0					
ANR	1948804	Identifier	memset		1948570	0					
ANR	1948805	ArgumentList	buf		1948570	1					
ANR	1948806	Argument	buf		1948570	0					
ANR	1948807	Identifier	buf		1948570	0					
ANR	1948808	Argument	'a'		1948570	1					
ANR	1948809	PrimaryExpression	'a'		1948570	0					
ANR	1948810	Argument	sizeof ( buf )		1948570	2					
ANR	1948811	SizeofExpression	sizeof ( buf )		1948570	0					
ANR	1948812	Sizeof	sizeof		1948570	0					
ANR	1948813	SizeofOperand	buf		1948570	1					
ANR	1948814	ExpressionStatement	sha256_init_ctx ( & ctx )	728:1:21736:21757	1948570	17	True				
ANR	1948815	CallExpression	sha256_init_ctx ( & ctx )		1948570	0					
ANR	1948816	Callee	sha256_init_ctx		1948570	0					
ANR	1948817	Identifier	sha256_init_ctx		1948570	0					
ANR	1948818	ArgumentList	& ctx		1948570	1					
ANR	1948819	Argument	& ctx		1948570	0					
ANR	1948820	UnaryOperationExpression	& ctx		1948570	0					
ANR	1948821	UnaryOperator	&		1948570	0					
ANR	1948822	Identifier	ctx		1948570	1					
ANR	1948823	ForStatement	for ( i = 0 ; i < 1000 ; ++ i )		1948570	18					
ANR	1948824	ForInit	i = 0 ;	729:6:21765:21770	1948570	0	True				
ANR	1948825	AssignmentExpression	i = 0		1948570	0		=			
ANR	1948826	Identifier	i		1948570	0					
ANR	1948827	PrimaryExpression	0		1948570	1					
ANR	1948828	Condition	i < 1000	729:13:21772:21779	1948570	1	True				
ANR	1948829	RelationalExpression	i < 1000		1948570	0		<			
ANR	1948830	Identifier	i		1948570	0					
ANR	1948831	PrimaryExpression	1000		1948570	1					
ANR	1948832	UnaryExpression	++ i	729:23:21782:21784	1948570	2	True				
ANR	1948833	IncDec	++		1948570	0					
ANR	1948834	Identifier	i		1948570	1					
ANR	1948835	CompoundStatement		35:28:970:970	1948570	3					
ANR	1948836	ExpressionStatement	"sha256_process_bytes ( buf , sizeof ( buf ) , & ctx )"	730:2:21791:21837	1948570	0	True				
ANR	1948837	CallExpression	"sha256_process_bytes ( buf , sizeof ( buf ) , & ctx )"		1948570	0					
ANR	1948838	Callee	sha256_process_bytes		1948570	0					
ANR	1948839	Identifier	sha256_process_bytes		1948570	0					
ANR	1948840	ArgumentList	buf		1948570	1					
ANR	1948841	Argument	buf		1948570	0					
ANR	1948842	Identifier	buf		1948570	0					
ANR	1948843	Argument	sizeof ( buf )		1948570	1					
ANR	1948844	SizeofExpression	sizeof ( buf )		1948570	0					
ANR	1948845	Sizeof	sizeof		1948570	0					
ANR	1948846	SizeofOperand	buf		1948570	1					
ANR	1948847	Argument	& ctx		1948570	2					
ANR	1948848	UnaryOperationExpression	& ctx		1948570	0					
ANR	1948849	UnaryOperator	&		1948570	0					
ANR	1948850	Identifier	ctx		1948570	1					
ANR	1948851	ExpressionStatement	"sha256_finish_ctx ( & ctx , sum )"	733:1:21844:21872	1948570	19	True				
ANR	1948852	CallExpression	"sha256_finish_ctx ( & ctx , sum )"		1948570	0					
ANR	1948853	Callee	sha256_finish_ctx		1948570	0					
ANR	1948854	Identifier	sha256_finish_ctx		1948570	0					
ANR	1948855	ArgumentList	& ctx		1948570	1					
ANR	1948856	Argument	& ctx		1948570	0					
ANR	1948857	UnaryOperationExpression	& ctx		1948570	0					
ANR	1948858	UnaryOperator	&		1948570	0					
ANR	1948859	Identifier	ctx		1948570	1					
ANR	1948860	Argument	sum		1948570	1					
ANR	1948861	Identifier	sum		1948570	0					
ANR	1948862	IfStatement	"if ( memcmp ( expected , sum , 32 ) != 0 )"		1948570	20					
ANR	1948863	Condition	"memcmp ( expected , sum , 32 ) != 0"	735:5:21880:21909	1948570	0	True				
ANR	1948864	EqualityExpression	"memcmp ( expected , sum , 32 ) != 0"		1948570	0		!=			
ANR	1948865	CallExpression	"memcmp ( expected , sum , 32 )"		1948570	0					
ANR	1948866	Callee	memcmp		1948570	0					
ANR	1948867	Identifier	memcmp		1948570	0					
ANR	1948868	ArgumentList	expected		1948570	1					
ANR	1948869	Argument	expected		1948570	0					
ANR	1948870	Identifier	expected		1948570	0					
ANR	1948871	Argument	sum		1948570	1					
ANR	1948872	Identifier	sum		1948570	0					
ANR	1948873	Argument	32		1948570	2					
ANR	1948874	PrimaryExpression	32		1948570	0					
ANR	1948875	PrimaryExpression	0		1948570	1					
ANR	1948876	CompoundStatement		41:37:1095:1095	1948570	1					
ANR	1948877	ExpressionStatement	"printf ( ""test %d failed\\n"" , cnt )"	736:2:21916:21947	1948570	0	True				
ANR	1948878	CallExpression	"printf ( ""test %d failed\\n"" , cnt )"		1948570	0					
ANR	1948879	Callee	printf		1948570	0					
ANR	1948880	Identifier	printf		1948570	0					
ANR	1948881	ArgumentList	"""test %d failed\\n"""		1948570	1					
ANR	1948882	Argument	"""test %d failed\\n"""		1948570	0					
ANR	1948883	PrimaryExpression	"""test %d failed\\n"""		1948570	0					
ANR	1948884	Argument	cnt		1948570	1					
ANR	1948885	Identifier	cnt		1948570	0					
ANR	1948886	ExpressionStatement	result = 1	737:2:21951:21961	1948570	1	True				
ANR	1948887	AssignmentExpression	result = 1		1948570	0		=			
ANR	1948888	Identifier	result		1948570	0					
ANR	1948889	PrimaryExpression	1		1948570	1					
ANR	1948890	ForStatement	for ( cnt = 0 ; cnt < ntests2 ; ++ cnt )		1948570	21					
ANR	1948891	ForInit	cnt = 0 ;	740:6:21973:21980	1948570	0	True				
ANR	1948892	AssignmentExpression	cnt = 0		1948570	0		=			
ANR	1948893	Identifier	cnt		1948570	0					
ANR	1948894	PrimaryExpression	0		1948570	1					
ANR	1948895	Condition	cnt < ntests2	740:15:21982:21994	1948570	1	True				
ANR	1948896	RelationalExpression	cnt < ntests2		1948570	0		<			
ANR	1948897	Identifier	cnt		1948570	0					
ANR	1948898	Identifier	ntests2		1948570	1					
ANR	1948899	UnaryExpression	++ cnt	740:30:21997:22001	1948570	2	True				
ANR	1948900	IncDec	++		1948570	0					
ANR	1948901	Identifier	cnt		1948570	1					
ANR	1948902	CompoundStatement		47:2:1191:1255	1948570	3					
ANR	1948903	IdentifierDeclStatement	"char * cp = php_sha256_crypt ( tests2 [ cnt ] . input , tests2 [ cnt ] . salt ) ;"	741:2:22008:22072	1948570	0	True				
ANR	1948904	IdentifierDecl	"* cp = php_sha256_crypt ( tests2 [ cnt ] . input , tests2 [ cnt ] . salt )"		1948570	0					
ANR	1948905	IdentifierDeclType	char *		1948570	0					
ANR	1948906	Identifier	cp		1948570	1					
ANR	1948907	AssignmentExpression	"* cp = php_sha256_crypt ( tests2 [ cnt ] . input , tests2 [ cnt ] . salt )"		1948570	2		=			
ANR	1948908	Identifier	cp		1948570	0					
ANR	1948909	CallExpression	"php_sha256_crypt ( tests2 [ cnt ] . input , tests2 [ cnt ] . salt )"		1948570	1					
ANR	1948910	Callee	php_sha256_crypt		1948570	0					
ANR	1948911	Identifier	php_sha256_crypt		1948570	0					
ANR	1948912	ArgumentList	tests2 [ cnt ] . input		1948570	1					
ANR	1948913	Argument	tests2 [ cnt ] . input		1948570	0					
ANR	1948914	MemberAccess	tests2 [ cnt ] . input		1948570	0					
ANR	1948915	ArrayIndexing	tests2 [ cnt ]		1948570	0					
ANR	1948916	Identifier	tests2		1948570	0					
ANR	1948917	Identifier	cnt		1948570	1					
ANR	1948918	Identifier	input		1948570	1					
ANR	1948919	Argument	tests2 [ cnt ] . salt		1948570	1					
ANR	1948920	MemberAccess	tests2 [ cnt ] . salt		1948570	0					
ANR	1948921	ArrayIndexing	tests2 [ cnt ]		1948570	0					
ANR	1948922	Identifier	tests2		1948570	0					
ANR	1948923	Identifier	cnt		1948570	1					
ANR	1948924	Identifier	salt		1948570	1					
ANR	1948925	IfStatement	"if ( strcmp ( cp , tests2 [ cnt ] . expected ) != 0 )"		1948570	1					
ANR	1948926	Condition	"strcmp ( cp , tests2 [ cnt ] . expected ) != 0"	742:6:22080:22116	1948570	0	True				
ANR	1948927	EqualityExpression	"strcmp ( cp , tests2 [ cnt ] . expected ) != 0"		1948570	0		!=			
ANR	1948928	CallExpression	"strcmp ( cp , tests2 [ cnt ] . expected )"		1948570	0					
ANR	1948929	Callee	strcmp		1948570	0					
ANR	1948930	Identifier	strcmp		1948570	0					
ANR	1948931	ArgumentList	cp		1948570	1					
ANR	1948932	Argument	cp		1948570	0					
ANR	1948933	Identifier	cp		1948570	0					
ANR	1948934	Argument	tests2 [ cnt ] . expected		1948570	1					
ANR	1948935	MemberAccess	tests2 [ cnt ] . expected		1948570	0					
ANR	1948936	ArrayIndexing	tests2 [ cnt ]		1948570	0					
ANR	1948937	Identifier	tests2		1948570	0					
ANR	1948938	Identifier	cnt		1948570	1					
ANR	1948939	Identifier	expected		1948570	1					
ANR	1948940	PrimaryExpression	0		1948570	1					
ANR	1948941	CompoundStatement		48:45:1302:1302	1948570	1					
ANR	1948942	ExpressionStatement	"printf ( ""test %d: expected \\""%s\\"", got \\""%s\\""\\n"" , cnt , tests2 [ cnt ] . expected , cp )"	743:3:22124:22203	1948570	0	True				
ANR	1948943	CallExpression	"printf ( ""test %d: expected \\""%s\\"", got \\""%s\\""\\n"" , cnt , tests2 [ cnt ] . expected , cp )"		1948570	0					
ANR	1948944	Callee	printf		1948570	0					
ANR	1948945	Identifier	printf		1948570	0					
ANR	1948946	ArgumentList	"""test %d: expected \\""%s\\"", got \\""%s\\""\\n"""		1948570	1					
ANR	1948947	Argument	"""test %d: expected \\""%s\\"", got \\""%s\\""\\n"""		1948570	0					
ANR	1948948	PrimaryExpression	"""test %d: expected \\""%s\\"", got \\""%s\\""\\n"""		1948570	0					
ANR	1948949	Argument	cnt		1948570	1					
ANR	1948950	Identifier	cnt		1948570	0					
ANR	1948951	Argument	tests2 [ cnt ] . expected		1948570	2					
ANR	1948952	MemberAccess	tests2 [ cnt ] . expected		1948570	0					
ANR	1948953	ArrayIndexing	tests2 [ cnt ]		1948570	0					
ANR	1948954	Identifier	tests2		1948570	0					
ANR	1948955	Identifier	cnt		1948570	1					
ANR	1948956	Identifier	expected		1948570	1					
ANR	1948957	Argument	cp		1948570	3					
ANR	1948958	Identifier	cp		1948570	0					
ANR	1948959	ExpressionStatement	result = 1	744:3:22208:22218	1948570	1	True				
ANR	1948960	AssignmentExpression	result = 1		1948570	0		=			
ANR	1948961	Identifier	result		1948570	0					
ANR	1948962	PrimaryExpression	1		1948570	1					
ANR	1948963	IfStatement	if ( result == 0 )		1948570	22					
ANR	1948964	Condition	result == 0	748:5:22233:22243	1948570	0	True				
ANR	1948965	EqualityExpression	result == 0		1948570	0		==			
ANR	1948966	Identifier	result		1948570	0					
ANR	1948967	PrimaryExpression	0		1948570	1					
ANR	1948968	ExpressionStatement	"puts ( ""all tests OK"" )"	749:1:22247:22267	1948570	1	True				
ANR	1948969	CallExpression	"puts ( ""all tests OK"" )"		1948570	0					
ANR	1948970	Callee	puts		1948570	0					
ANR	1948971	Identifier	puts		1948570	0					
ANR	1948972	ArgumentList	"""all tests OK"""		1948570	1					
ANR	1948973	Argument	"""all tests OK"""		1948570	0					
ANR	1948974	PrimaryExpression	"""all tests OK"""		1948570	0					
ANR	1948975	ReturnStatement	return result ;	751:1:22271:22284	1948570	23	True				
ANR	1948976	Identifier	result		1948570	0					
ANR	1948977	ReturnType	int		1948570	1					
ANR	1948978	Identifier	main		1948570	2					
ANR	1948979	ParameterList			1948570	3					
ANR	1948980	CFGEntryNode	ENTRY		1948570		True				
ANR	1948981	CFGExitNode	EXIT		1948570		True				
ANR	1948982	Symbol	tests2		1948570						
ANR	1948983	Symbol	sum		1948570						
ANR	1948984	Symbol	& ctx		1948570						
ANR	1948985	Symbol	php_sha256_crypt		1948570						
ANR	1948986	Symbol	tests [ cnt ] . input		1948570						
ANR	1948987	Symbol	result		1948570						
ANR	1948988	Symbol	strlen		1948570						
ANR	1948989	Symbol	memcmp		1948570						
ANR	1948990	Symbol	* tests [ cnt ] . input		1948570						
ANR	1948991	Symbol	* tests2		1948570						
ANR	1948992	Symbol	* tests		1948570						
ANR	1948993	Symbol	tests [ cnt ] . result		1948570						
ANR	1948994	Symbol	strcmp		1948570						
ANR	1948995	Symbol	tests2 [ cnt ] . salt		1948570						
ANR	1948996	Symbol	tests2 [ cnt ] . input		1948570						
ANR	1948997	Symbol	ctx		1948570						
ANR	1948998	Symbol	* * tests		1948570						
ANR	1948999	Symbol	expected		1948570						
ANR	1949000	Symbol	cnt		1948570						
ANR	1949001	Symbol	i		1948570						
ANR	1949002	Symbol	* cnt		1948570						
ANR	1949003	Symbol	cp		1948570						
ANR	1949004	Symbol	buf		1948570						
ANR	1949005	Symbol	tests		1948570						
ANR	1949006	Symbol	* i		1948570						
ANR	1949007	Symbol	ntests		1948570						
ANR	1949008	Symbol	ntests2		1948570						
ANR	1949009	Symbol	* * cnt		1948570						
ANR	1949010	Symbol	tests2 [ cnt ] . expected		1948570						
