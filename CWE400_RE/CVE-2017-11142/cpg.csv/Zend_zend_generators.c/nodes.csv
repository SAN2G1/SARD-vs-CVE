command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	73326	File	data/converged/CVE-2017-11142_php-src/Zend_zend_generators.c								
ANR	73327	DeclStmt									
ANR	73328	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry *	zend_ce_generator
ANR	73329	DeclStmt									
ANR	73330	Decl							zend_object_handlers	zend_object_handlers	zend_generator_handlers
ANR	73331	DeclStmt									
ANR	73332	Decl							zend_execute_data	zend_execute_data *	execute_data
ANR	73333	DeclStmt									
ANR	73334	Decl							zend_op_array	zend_op_array *	op_array
ANR	73335	DeclStmt									
ANR	73336	Decl							zend_uint	zend_uint	op_num
ANR	73337	DeclStmt									
ANR	73338	Decl							int	int	i
ANR	73339	DeclStmt									
ANR	73340	Decl							zend_brk_cont_element	zend_brk_cont_element *	brk_cont
ANR	73341	DeclStmt									
ANR	73342	Decl							zend_op	zend_op *	brk_opline
ANR	73343	DeclStmt									
ANR	73344	Decl							temp_variable	temp_variable *	var
ANR	73345	DeclStmt									
ANR	73346	Decl							temp_variable	temp_variable *	var
ANR	73347	DeclStmt									
ANR	73348	Decl							void	void * *	ptr
ANR	73349	DeclStmt									
ANR	73350	Decl							void	void * *	end
ANR	73351	Function	zend_generator_close	99:0:3286:5280							
ANR	73352	FunctionDef	"zend_generator_close (zend_generator * generator , zend_bool finished_execution TSRMLS_DC)"		73351	0					
ANR	73353	CompoundStatement		100:0:3398:5280	73351	0					
ANR	73354	IfStatement	if ( generator -> value )		73351	0					
ANR	73355	Condition	generator -> value	101:5:3405:3420	73351	0	True				
ANR	73356	PtrMemberAccess	generator -> value		73351	0					
ANR	73357	Identifier	generator		73351	0					
ANR	73358	Identifier	value		73351	1					
ANR	73359	CompoundStatement		2:23:24:24	73351	1					
ANR	73360	ExpressionStatement	zval_ptr_dtor ( & generator -> value )	102:2:3427:3459	73351	0	True				
ANR	73361	CallExpression	zval_ptr_dtor ( & generator -> value )		73351	0					
ANR	73362	Callee	zval_ptr_dtor		73351	0					
ANR	73363	Identifier	zval_ptr_dtor		73351	0					
ANR	73364	ArgumentList	& generator -> value		73351	1					
ANR	73365	Argument	& generator -> value		73351	0					
ANR	73366	UnaryOperationExpression	& generator -> value		73351	0					
ANR	73367	UnaryOperator	&		73351	0					
ANR	73368	PtrMemberAccess	generator -> value		73351	1					
ANR	73369	Identifier	generator		73351	0					
ANR	73370	Identifier	value		73351	1					
ANR	73371	ExpressionStatement	generator -> value = NULL	103:2:3463:3486	73351	1	True				
ANR	73372	AssignmentExpression	generator -> value = NULL		73351	0		=			
ANR	73373	PtrMemberAccess	generator -> value		73351	0					
ANR	73374	Identifier	generator		73351	0					
ANR	73375	Identifier	value		73351	1					
ANR	73376	Identifier	NULL		73351	1					
ANR	73377	IfStatement	if ( generator -> key )		73351	1					
ANR	73378	Condition	generator -> key	106:5:3497:3510	73351	0	True				
ANR	73379	PtrMemberAccess	generator -> key		73351	0					
ANR	73380	Identifier	generator		73351	0					
ANR	73381	Identifier	key		73351	1					
ANR	73382	CompoundStatement		7:21:114:114	73351	1					
ANR	73383	ExpressionStatement	zval_ptr_dtor ( & generator -> key )	107:2:3517:3547	73351	0	True				
ANR	73384	CallExpression	zval_ptr_dtor ( & generator -> key )		73351	0					
ANR	73385	Callee	zval_ptr_dtor		73351	0					
ANR	73386	Identifier	zval_ptr_dtor		73351	0					
ANR	73387	ArgumentList	& generator -> key		73351	1					
ANR	73388	Argument	& generator -> key		73351	0					
ANR	73389	UnaryOperationExpression	& generator -> key		73351	0					
ANR	73390	UnaryOperator	&		73351	0					
ANR	73391	PtrMemberAccess	generator -> key		73351	1					
ANR	73392	Identifier	generator		73351	0					
ANR	73393	Identifier	key		73351	1					
ANR	73394	ExpressionStatement	generator -> key = NULL	108:2:3551:3572	73351	1	True				
ANR	73395	AssignmentExpression	generator -> key = NULL		73351	0		=			
ANR	73396	PtrMemberAccess	generator -> key		73351	0					
ANR	73397	Identifier	generator		73351	0					
ANR	73398	Identifier	key		73351	1					
ANR	73399	Identifier	NULL		73351	1					
ANR	73400	IfStatement	if ( generator -> execute_data )		73351	2					
ANR	73401	Condition	generator -> execute_data	111:5:3583:3605	73351	0	True				
ANR	73402	PtrMemberAccess	generator -> execute_data		73351	0					
ANR	73403	Identifier	generator		73351	0					
ANR	73404	Identifier	execute_data		73351	1					
ANR	73405	CompoundStatement		14:2:274:322	73351	1					
ANR	73406	IdentifierDeclStatement	zend_execute_data * execute_data = generator -> execute_data ;	112:2:3612:3669	73351	0	True				
ANR	73407	IdentifierDecl	* execute_data = generator -> execute_data		73351	0					
ANR	73408	IdentifierDeclType	zend_execute_data *		73351	0					
ANR	73409	Identifier	execute_data		73351	1					
ANR	73410	AssignmentExpression	* execute_data = generator -> execute_data		73351	2		=			
ANR	73411	Identifier	execute_data		73351	0					
ANR	73412	PtrMemberAccess	generator -> execute_data		73351	1					
ANR	73413	Identifier	generator		73351	0					
ANR	73414	Identifier	execute_data		73351	1					
ANR	73415	IdentifierDeclStatement	zend_op_array * op_array = execute_data -> op_array ;	113:2:3673:3721	73351	1	True				
ANR	73416	IdentifierDecl	* op_array = execute_data -> op_array		73351	0					
ANR	73417	IdentifierDeclType	zend_op_array *		73351	0					
ANR	73418	Identifier	op_array		73351	1					
ANR	73419	AssignmentExpression	* op_array = execute_data -> op_array		73351	2		=			
ANR	73420	Identifier	op_array		73351	0					
ANR	73421	PtrMemberAccess	execute_data -> op_array		73351	1					
ANR	73422	Identifier	execute_data		73351	0					
ANR	73423	Identifier	op_array		73351	1					
ANR	73424	IfStatement	if ( ! execute_data -> symbol_table )		73351	2					
ANR	73425	Condition	! execute_data -> symbol_table	115:6:3730:3756	73351	0	True				
ANR	73426	UnaryOperationExpression	! execute_data -> symbol_table		73351	0					
ANR	73427	UnaryOperator	!		73351	0					
ANR	73428	PtrMemberAccess	execute_data -> symbol_table		73351	1					
ANR	73429	Identifier	execute_data		73351	0					
ANR	73430	Identifier	symbol_table		73351	1					
ANR	73431	CompoundStatement		16:35:360:360	73351	1					
ANR	73432	Statement	zend_free_compiled_variables	116:3:3764:3791	73351	0	True				
ANR	73433	Statement	(	116:31:3792:3792	73351	1	True				
ANR	73434	Statement	execute_data	116:32:3793:3804	73351	2	True				
ANR	73435	Statement	TSRMLS_CC	116:45:3806:3814	73351	3	True				
ANR	73436	Statement	)	116:54:3815:3815	73351	4	True				
ANR	73437	ExpressionStatement		116:55:3816:3816	73351	5	True				
ANR	73438	ElseStatement	else		73351	0					
ANR	73439	CompoundStatement		18:9:428:428	73351	0					
ANR	73440	Statement	zend_clean_and_cache_symbol_table	118:3:3832:3864	73351	0	True				
ANR	73441	Statement	(	118:36:3865:3865	73351	1	True				
ANR	73442	Statement	execute_data	118:37:3866:3877	73351	2	True				
ANR	73443	Statement	->	118:49:3878:3879	73351	3	True				
ANR	73444	Statement	symbol_table	118:51:3880:3891	73351	4	True				
ANR	73445	Statement	TSRMLS_CC	118:64:3893:3901	73351	5	True				
ANR	73446	Statement	)	118:73:3902:3902	73351	6	True				
ANR	73447	ExpressionStatement		118:74:3903:3903	73351	7	True				
ANR	73448	IfStatement	if ( execute_data -> current_this )		73351	3					
ANR	73449	Condition	execute_data -> current_this	121:6:3916:3941	73351	0	True				
ANR	73450	PtrMemberAccess	execute_data -> current_this		73351	0					
ANR	73451	Identifier	execute_data		73351	0					
ANR	73452	Identifier	current_this		73351	1					
ANR	73453	CompoundStatement		22:34:545:545	73351	1					
ANR	73454	ExpressionStatement	zval_ptr_dtor ( & execute_data -> current_this )	122:3:3949:3991	73351	0	True				
ANR	73455	CallExpression	zval_ptr_dtor ( & execute_data -> current_this )		73351	0					
ANR	73456	Callee	zval_ptr_dtor		73351	0					
ANR	73457	Identifier	zval_ptr_dtor		73351	0					
ANR	73458	ArgumentList	& execute_data -> current_this		73351	1					
ANR	73459	Argument	& execute_data -> current_this		73351	0					
ANR	73460	UnaryOperationExpression	& execute_data -> current_this		73351	0					
ANR	73461	UnaryOperator	&		73351	0					
ANR	73462	PtrMemberAccess	execute_data -> current_this		73351	1					
ANR	73463	Identifier	execute_data		73351	0					
ANR	73464	Identifier	current_this		73351	1					
ANR	73465	IfStatement	if ( CG ( unclean_shutdown ) )		73351	4					
ANR	73466	Condition	CG ( unclean_shutdown )	127:6:4137:4156	73351	0	True				
ANR	73467	CallExpression	CG ( unclean_shutdown )		73351	0					
ANR	73468	Callee	CG		73351	0					
ANR	73469	Identifier	CG		73351	0					
ANR	73470	ArgumentList	unclean_shutdown		73351	1					
ANR	73471	Argument	unclean_shutdown		73351	0					
ANR	73472	Identifier	unclean_shutdown		73351	0					
ANR	73473	CompoundStatement		28:28:760:760	73351	1					
ANR	73474	ExpressionStatement	generator -> execute_data = NULL	128:3:4164:4194	73351	0	True				
ANR	73475	AssignmentExpression	generator -> execute_data = NULL		73351	0		=			
ANR	73476	PtrMemberAccess	generator -> execute_data		73351	0					
ANR	73477	Identifier	generator		73351	0					
ANR	73478	Identifier	execute_data		73351	1					
ANR	73479	Identifier	NULL		73351	1					
ANR	73480	ReturnStatement	return ;	129:3:4199:4205	73351	1	True				
ANR	73481	CompoundStatement		38:3:1104:1166	73351	5					
ANR	73482	IdentifierDeclStatement	zend_execute_data * prev_execute_data = execute_data -> prev_execute_data ;	136:3:4428:4498	73351	0	True				
ANR	73483	IdentifierDecl	* prev_execute_data = execute_data -> prev_execute_data		73351	0					
ANR	73484	IdentifierDeclType	zend_execute_data *		73351	0					
ANR	73485	Identifier	prev_execute_data		73351	1					
ANR	73486	AssignmentExpression	* prev_execute_data = execute_data -> prev_execute_data		73351	2		=			
ANR	73487	Identifier	prev_execute_data		73351	0					
ANR	73488	PtrMemberAccess	execute_data -> prev_execute_data		73351	1					
ANR	73489	Identifier	execute_data		73351	0					
ANR	73490	Identifier	prev_execute_data		73351	1					
ANR	73491	IdentifierDeclStatement	void * * arguments = prev_execute_data -> function_state . arguments ;	137:3:4503:4565	73351	1	True				
ANR	73492	IdentifierDecl	* * arguments = prev_execute_data -> function_state . arguments		73351	0					
ANR	73493	IdentifierDeclType	void * *		73351	0					
ANR	73494	Identifier	arguments		73351	1					
ANR	73495	AssignmentExpression	* * arguments = prev_execute_data -> function_state . arguments		73351	2		=			
ANR	73496	Identifier	arguments		73351	0					
ANR	73497	MemberAccess	prev_execute_data -> function_state . arguments		73351	1					
ANR	73498	PtrMemberAccess	prev_execute_data -> function_state		73351	0					
ANR	73499	Identifier	prev_execute_data		73351	0					
ANR	73500	Identifier	function_state		73351	1					
ANR	73501	Identifier	arguments		73351	1					
ANR	73502	IfStatement	if ( arguments )		73351	2					
ANR	73503	Condition	arguments	139:7:4575:4583	73351	0	True				
ANR	73504	Identifier	arguments		73351	0					
ANR	73505	CompoundStatement		43:4:1324:1329	73351	1					
ANR	73506	IdentifierDeclStatement	int arguments_count = ( int ) ( zend_uintptr_t ) * arguments ;	140:4:4592:4647	73351	0	True				
ANR	73507	IdentifierDecl	arguments_count = ( int ) ( zend_uintptr_t ) * arguments		73351	0					
ANR	73508	IdentifierDeclType	int		73351	0					
ANR	73509	Identifier	arguments_count		73351	1					
ANR	73510	AssignmentExpression	arguments_count = ( int ) ( zend_uintptr_t ) * arguments		73351	2		=			
ANR	73511	Identifier	arguments_count		73351	0					
ANR	73512	CastExpression	( int ) ( zend_uintptr_t ) * arguments		73351	1					
ANR	73513	CastTarget	int		73351	0					
ANR	73514	CastExpression	( zend_uintptr_t ) * arguments		73351	1					
ANR	73515	CastTarget	zend_uintptr_t		73351	0					
ANR	73516	UnaryOperationExpression	* arguments		73351	1					
ANR	73517	UnaryOperator	*		73351	0					
ANR	73518	Identifier	arguments		73351	1					
ANR	73519	IdentifierDeclStatement	zval * * arguments_start = ( zval * * ) ( arguments - arguments_count ) ;	141:4:4653:4717	73351	1	True				
ANR	73520	IdentifierDecl	* * arguments_start = ( zval * * ) ( arguments - arguments_count )		73351	0					
ANR	73521	IdentifierDeclType	zval * *		73351	0					
ANR	73522	Identifier	arguments_start		73351	1					
ANR	73523	AssignmentExpression	* * arguments_start = ( zval * * ) ( arguments - arguments_count )		73351	2		=			
ANR	73524	Identifier	arguments_start		73351	0					
ANR	73525	CastExpression	( zval * * ) ( arguments - arguments_count )		73351	1					
ANR	73526	CastTarget	zval * *		73351	0					
ANR	73527	AdditiveExpression	arguments - arguments_count		73351	1		-			
ANR	73528	Identifier	arguments		73351	0					
ANR	73529	Identifier	arguments_count		73351	1					
ANR	73530	IdentifierDeclStatement	int i ;	142:4:4723:4728	73351	2	True				
ANR	73531	IdentifierDecl	i		73351	0					
ANR	73532	IdentifierDeclType	int		73351	0					
ANR	73533	Identifier	i		73351	1					
ANR	73534	ForStatement	for ( i = 0 ; i < arguments_count ; ++ i )		73351	3					
ANR	73535	ForInit	i = 0 ;	144:9:4740:4745	73351	0	True				
ANR	73536	AssignmentExpression	i = 0		73351	0		=			
ANR	73537	Identifier	i		73351	0					
ANR	73538	PrimaryExpression	0		73351	1					
ANR	73539	Condition	i < arguments_count	144:16:4747:4765	73351	1	True				
ANR	73540	RelationalExpression	i < arguments_count		73351	0		<			
ANR	73541	Identifier	i		73351	0					
ANR	73542	Identifier	arguments_count		73351	1					
ANR	73543	UnaryExpression	++ i	144:37:4768:4770	73351	2	True				
ANR	73544	IncDec	++		73351	0					
ANR	73545	Identifier	i		73351	1					
ANR	73546	CompoundStatement		45:42:1374:1374	73351	3					
ANR	73547	ExpressionStatement	zval_ptr_dtor ( arguments_start + i )	145:5:4780:4814	73351	0	True				
ANR	73548	CallExpression	zval_ptr_dtor ( arguments_start + i )		73351	0					
ANR	73549	Callee	zval_ptr_dtor		73351	0					
ANR	73550	Identifier	zval_ptr_dtor		73351	0					
ANR	73551	ArgumentList	arguments_start + i		73351	1					
ANR	73552	Argument	arguments_start + i		73351	0					
ANR	73553	AdditiveExpression	arguments_start + i		73351	0		+			
ANR	73554	Identifier	arguments_start		73351	0					
ANR	73555	Identifier	i		73351	1					
ANR	73556	IfStatement	if ( ! finished_execution )		73351	6					
ANR	73557	Condition	! finished_execution	152:6:4974:4992	73351	0	True				
ANR	73558	UnaryOperationExpression	! finished_execution		73351	0					
ANR	73559	UnaryOperator	!		73351	0					
ANR	73560	Identifier	finished_execution		73351	1					
ANR	73561	CompoundStatement		53:27:1596:1596	73351	1					
ANR	73562	Statement	zend_generator_cleanup_unfinished_execution	153:3:5000:5042	73351	0	True				
ANR	73563	Statement	(	153:46:5043:5043	73351	1	True				
ANR	73564	Statement	generator	153:47:5044:5052	73351	2	True				
ANR	73565	Statement	TSRMLS_CC	153:57:5054:5062	73351	3	True				
ANR	73566	Statement	)	153:66:5063:5063	73351	4	True				
ANR	73567	ExpressionStatement		153:67:5064:5064	73351	5	True				
ANR	73568	IfStatement	if ( op_array -> fn_flags & ZEND_ACC_CLOSURE )		73351	7					
ANR	73569	Condition	op_array -> fn_flags & ZEND_ACC_CLOSURE	157:6:5109:5145	73351	0	True				
ANR	73570	BitAndExpression	op_array -> fn_flags & ZEND_ACC_CLOSURE		73351	0		&			
ANR	73571	PtrMemberAccess	op_array -> fn_flags		73351	0					
ANR	73572	Identifier	op_array		73351	0					
ANR	73573	Identifier	fn_flags		73351	1					
ANR	73574	Identifier	ZEND_ACC_CLOSURE		73351	1					
ANR	73575	CompoundStatement		58:45:1749:1749	73351	1					
ANR	73576	Statement	destroy_op_array	158:3:5153:5168	73351	0	True				
ANR	73577	Statement	(	158:19:5169:5169	73351	1	True				
ANR	73578	Statement	op_array	158:20:5170:5177	73351	2	True				
ANR	73579	Statement	TSRMLS_CC	158:29:5179:5187	73351	3	True				
ANR	73580	Statement	)	158:38:5188:5188	73351	4	True				
ANR	73581	ExpressionStatement		158:39:5189:5189	73351	5	True				
ANR	73582	ExpressionStatement	efree ( op_array )	159:3:5194:5209	73351	6	True				
ANR	73583	CallExpression	efree ( op_array )		73351	0					
ANR	73584	Callee	efree		73351	0					
ANR	73585	Identifier	efree		73351	0					
ANR	73586	ArgumentList	op_array		73351	1					
ANR	73587	Argument	op_array		73351	0					
ANR	73588	Identifier	op_array		73351	0					
ANR	73589	ExpressionStatement	efree ( generator -> stack )	162:2:5218:5241	73351	8	True				
ANR	73590	CallExpression	efree ( generator -> stack )		73351	0					
ANR	73591	Callee	efree		73351	0					
ANR	73592	Identifier	efree		73351	0					
ANR	73593	ArgumentList	generator -> stack		73351	1					
ANR	73594	Argument	generator -> stack		73351	0					
ANR	73595	PtrMemberAccess	generator -> stack		73351	0					
ANR	73596	Identifier	generator		73351	0					
ANR	73597	Identifier	stack		73351	1					
ANR	73598	ExpressionStatement	generator -> execute_data = NULL	163:2:5245:5275	73351	9	True				
ANR	73599	AssignmentExpression	generator -> execute_data = NULL		73351	0		=			
ANR	73600	PtrMemberAccess	generator -> execute_data		73351	0					
ANR	73601	Identifier	generator		73351	0					
ANR	73602	Identifier	execute_data		73351	1					
ANR	73603	Identifier	NULL		73351	1					
ANR	73604	ReturnType	ZEND_API void		73351	1					
ANR	73605	Identifier	zend_generator_close		73351	2					
ANR	73606	ParameterList	"zend_generator * generator , zend_bool finished_execution TSRMLS_DC"		73351	3					
ANR	73607	Parameter	zend_generator * generator	99:35:3321:3345	73351	0	True				
ANR	73608	ParameterType	zend_generator *		73351	0					
ANR	73609	Identifier	generator		73351	1					
ANR	73610	Parameter	zend_bool finished_execution TSRMLS_DC	99:62:3348:3385	73351	1	True				
ANR	73611	ParameterType	zend_bool finished_execution		73351	0					
ANR	73612	Identifier	TSRMLS_DC		73351	1					
ANR	73613	CFGEntryNode	ENTRY		73351		True				
ANR	73614	CFGExitNode	EXIT		73351		True				
ANR	73615	Symbol	prev_execute_data -> function_state		73351						
ANR	73616	Symbol	execute_data -> symbol_table		73351						
ANR	73617	Symbol	generator -> stack		73351						
ANR	73618	Symbol	generator -> value		73351						
ANR	73619	Symbol	prev_execute_data -> function_state . arguments		73351						
ANR	73620	Symbol	generator		73351						
ANR	73621	Symbol	TSRMLS_DC		73351						
ANR	73622	Symbol	execute_data -> current_this		73351						
ANR	73623	Symbol	execute_data		73351						
ANR	73624	Symbol	execute_data -> op_array		73351						
ANR	73625	Symbol	& generator -> value		73351						
ANR	73626	Symbol	* prev_execute_data		73351						
ANR	73627	Symbol	* generator		73351						
ANR	73628	Symbol	op_array -> fn_flags		73351						
ANR	73629	Symbol	arguments_start		73351						
ANR	73630	Symbol	* execute_data		73351						
ANR	73631	Symbol	generator -> key		73351						
ANR	73632	Symbol	NULL		73351						
ANR	73633	Symbol	CG		73351						
ANR	73634	Symbol	& execute_data -> current_this		73351						
ANR	73635	Symbol	i		73351						
ANR	73636	Symbol	prev_execute_data		73351						
ANR	73637	Symbol	* op_array		73351						
ANR	73638	Symbol	arguments_count		73351						
ANR	73639	Symbol	generator -> execute_data		73351						
ANR	73640	Symbol	finished_execution		73351						
ANR	73641	Symbol	unclean_shutdown		73351						
ANR	73642	Symbol	ZEND_ACC_CLOSURE		73351						
ANR	73643	Symbol	execute_data -> prev_execute_data		73351						
ANR	73644	Symbol	arguments		73351						
ANR	73645	Symbol	& generator -> key		73351						
ANR	73646	Symbol	op_array		73351						
ANR	73647	Symbol	* arguments		73351						
ANR	73648	Function	zend_generator_dtor_storage	168:0:5293:6382							
ANR	73649	FunctionDef	"zend_generator_dtor_storage (zend_generator * generator , zend_object_handle handle TSRMLS_DC)"		73648	0					
ANR	73650	CompoundStatement		169:0:5407:6382	73648	0					
ANR	73651	IdentifierDeclStatement	zend_execute_data * ex = generator -> execute_data ;	170:1:5410:5457	73648	0	True				
ANR	73652	IdentifierDecl	* ex = generator -> execute_data		73648	0					
ANR	73653	IdentifierDeclType	zend_execute_data *		73648	0					
ANR	73654	Identifier	ex		73648	1					
ANR	73655	AssignmentExpression	* ex = generator -> execute_data		73648	2		=			
ANR	73656	Identifier	ex		73648	0					
ANR	73657	PtrMemberAccess	generator -> execute_data		73648	1					
ANR	73658	Identifier	generator		73648	0					
ANR	73659	Identifier	execute_data		73648	1					
ANR	73660	IdentifierDeclStatement	"zend_uint op_num , finally_op_num ;"	171:1:5460:5492	73648	1	True				
ANR	73661	IdentifierDecl	op_num		73648	0					
ANR	73662	IdentifierDeclType	zend_uint		73648	0					
ANR	73663	Identifier	op_num		73648	1					
ANR	73664	IdentifierDecl	finally_op_num		73648	1					
ANR	73665	IdentifierDeclType	zend_uint		73648	0					
ANR	73666	Identifier	finally_op_num		73648	1					
ANR	73667	IdentifierDeclStatement	int i ;	172:1:5495:5500	73648	2	True				
ANR	73668	IdentifierDecl	i		73648	0					
ANR	73669	IdentifierDeclType	int		73648	0					
ANR	73670	Identifier	i		73648	1					
ANR	73671	IfStatement	if ( ! ex || ! ex -> op_array -> has_finally_block )		73648	3					
ANR	73672	Condition	! ex || ! ex -> op_array -> has_finally_block	174:5:5508:5546	73648	0	True				
ANR	73673	OrExpression	! ex || ! ex -> op_array -> has_finally_block		73648	0		||			
ANR	73674	UnaryOperationExpression	! ex		73648	0					
ANR	73675	UnaryOperator	!		73648	0					
ANR	73676	Identifier	ex		73648	1					
ANR	73677	UnaryOperationExpression	! ex -> op_array -> has_finally_block		73648	1					
ANR	73678	UnaryOperator	!		73648	0					
ANR	73679	PtrMemberAccess	ex -> op_array -> has_finally_block		73648	1					
ANR	73680	PtrMemberAccess	ex -> op_array		73648	0					
ANR	73681	Identifier	ex		73648	0					
ANR	73682	Identifier	op_array		73648	1					
ANR	73683	Identifier	has_finally_block		73648	1					
ANR	73684	CompoundStatement		6:46:141:141	73648	1					
ANR	73685	ReturnStatement	return ;	175:2:5553:5559	73648	0	True				
ANR	73686	ExpressionStatement	op_num = ex -> opline - ex -> op_array -> opcodes - 1	180:1:5654:5701	73648	4	True				
ANR	73687	AssignmentExpression	op_num = ex -> opline - ex -> op_array -> opcodes - 1		73648	0		=			
ANR	73688	Identifier	op_num		73648	0					
ANR	73689	AdditiveExpression	ex -> opline - ex -> op_array -> opcodes - 1		73648	1		-			
ANR	73690	PtrMemberAccess	ex -> opline		73648	0					
ANR	73691	Identifier	ex		73648	0					
ANR	73692	Identifier	opline		73648	1					
ANR	73693	AdditiveExpression	ex -> op_array -> opcodes - 1		73648	1		-			
ANR	73694	PtrMemberAccess	ex -> op_array -> opcodes		73648	0					
ANR	73695	PtrMemberAccess	ex -> op_array		73648	0					
ANR	73696	Identifier	ex		73648	0					
ANR	73697	Identifier	op_array		73648	1					
ANR	73698	Identifier	opcodes		73648	1					
ANR	73699	PrimaryExpression	1		73648	1					
ANR	73700	ExpressionStatement	finally_op_num = 0	183:1:5736:5754	73648	5	True				
ANR	73701	AssignmentExpression	finally_op_num = 0		73648	0		=			
ANR	73702	Identifier	finally_op_num		73648	0					
ANR	73703	PrimaryExpression	0		73648	1					
ANR	73704	ForStatement	for ( i = 0 ; i < ex -> op_array -> last_try_catch ; i ++ )		73648	6					
ANR	73705	ForInit	i = 0 ;	184:6:5762:5767	73648	0	True				
ANR	73706	AssignmentExpression	i = 0		73648	0		=			
ANR	73707	Identifier	i		73648	0					
ANR	73708	PrimaryExpression	0		73648	1					
ANR	73709	Condition	i < ex -> op_array -> last_try_catch	184:13:5769:5800	73648	1	True				
ANR	73710	RelationalExpression	i < ex -> op_array -> last_try_catch		73648	0		<			
ANR	73711	Identifier	i		73648	0					
ANR	73712	PtrMemberAccess	ex -> op_array -> last_try_catch		73648	1					
ANR	73713	PtrMemberAccess	ex -> op_array		73648	0					
ANR	73714	Identifier	ex		73648	0					
ANR	73715	Identifier	op_array		73648	1					
ANR	73716	Identifier	last_try_catch		73648	1					
ANR	73717	PostIncDecOperationExpression	i ++	184:47:5803:5805	73648	2	True				
ANR	73718	Identifier	i		73648	0					
ANR	73719	IncDec	++		73648	1					
ANR	73720	CompoundStatement		17:2:404:473	73648	3					
ANR	73721	IdentifierDeclStatement	zend_try_catch_element * try_catch = & ex -> op_array -> try_catch_array [ i ] ;	185:2:5812:5881	73648	0	True				
ANR	73722	IdentifierDecl	* try_catch = & ex -> op_array -> try_catch_array [ i ]		73648	0					
ANR	73723	IdentifierDeclType	zend_try_catch_element *		73648	0					
ANR	73724	Identifier	try_catch		73648	1					
ANR	73725	AssignmentExpression	* try_catch = & ex -> op_array -> try_catch_array [ i ]		73648	2		=			
ANR	73726	Identifier	try_catch		73648	0					
ANR	73727	UnaryOperationExpression	& ex -> op_array -> try_catch_array [ i ]		73648	1					
ANR	73728	UnaryOperator	&		73648	0					
ANR	73729	ArrayIndexing	ex -> op_array -> try_catch_array [ i ]		73648	1					
ANR	73730	PtrMemberAccess	ex -> op_array -> try_catch_array		73648	0					
ANR	73731	PtrMemberAccess	ex -> op_array		73648	0					
ANR	73732	Identifier	ex		73648	0					
ANR	73733	Identifier	op_array		73648	1					
ANR	73734	Identifier	try_catch_array		73648	1					
ANR	73735	Identifier	i		73648	1					
ANR	73736	IfStatement	if ( op_num < try_catch -> try_op )		73648	1					
ANR	73737	Condition	op_num < try_catch -> try_op	187:6:5890:5915	73648	0	True				
ANR	73738	RelationalExpression	op_num < try_catch -> try_op		73648	0		<			
ANR	73739	Identifier	op_num		73648	0					
ANR	73740	PtrMemberAccess	try_catch -> try_op		73648	1					
ANR	73741	Identifier	try_catch		73648	0					
ANR	73742	Identifier	try_op		73648	1					
ANR	73743	CompoundStatement		19:34:510:510	73648	1					
ANR	73744	BreakStatement	break ;	188:3:5923:5928	73648	0	True				
ANR	73745	IfStatement	if ( op_num < try_catch -> finally_op )		73648	2					
ANR	73746	Condition	op_num < try_catch -> finally_op	191:6:5941:5970	73648	0	True				
ANR	73747	RelationalExpression	op_num < try_catch -> finally_op		73648	0		<			
ANR	73748	Identifier	op_num		73648	0					
ANR	73749	PtrMemberAccess	try_catch -> finally_op		73648	1					
ANR	73750	Identifier	try_catch		73648	0					
ANR	73751	Identifier	finally_op		73648	1					
ANR	73752	CompoundStatement		23:38:565:565	73648	1					
ANR	73753	ExpressionStatement	finally_op_num = try_catch -> finally_op	192:3:5978:6016	73648	0	True				
ANR	73754	AssignmentExpression	finally_op_num = try_catch -> finally_op		73648	0		=			
ANR	73755	Identifier	finally_op_num		73648	0					
ANR	73756	PtrMemberAccess	try_catch -> finally_op		73648	1					
ANR	73757	Identifier	try_catch		73648	0					
ANR	73758	Identifier	finally_op		73648	1					
ANR	73759	IfStatement	if ( finally_op_num )		73648	7					
ANR	73760	Condition	finally_op_num	198:5:6120:6133	73648	0	True				
ANR	73761	Identifier	finally_op_num		73648	0					
ANR	73762	CompoundStatement		30:21:728:728	73648	1					
ANR	73763	ExpressionStatement	ex -> opline = & ex -> op_array -> opcodes [ finally_op_num ]	199:2:6140:6191	73648	0	True				
ANR	73764	AssignmentExpression	ex -> opline = & ex -> op_array -> opcodes [ finally_op_num ]		73648	0		=			
ANR	73765	PtrMemberAccess	ex -> opline		73648	0					
ANR	73766	Identifier	ex		73648	0					
ANR	73767	Identifier	opline		73648	1					
ANR	73768	UnaryOperationExpression	& ex -> op_array -> opcodes [ finally_op_num ]		73648	1					
ANR	73769	UnaryOperator	&		73648	0					
ANR	73770	ArrayIndexing	ex -> op_array -> opcodes [ finally_op_num ]		73648	1					
ANR	73771	PtrMemberAccess	ex -> op_array -> opcodes		73648	0					
ANR	73772	PtrMemberAccess	ex -> op_array		73648	0					
ANR	73773	Identifier	ex		73648	0					
ANR	73774	Identifier	op_array		73648	1					
ANR	73775	Identifier	opcodes		73648	1					
ANR	73776	Identifier	finally_op_num		73648	1					
ANR	73777	ExpressionStatement	ex -> fast_ret = NULL	200:2:6195:6214	73648	1	True				
ANR	73778	AssignmentExpression	ex -> fast_ret = NULL		73648	0		=			
ANR	73779	PtrMemberAccess	ex -> fast_ret		73648	0					
ANR	73780	Identifier	ex		73648	0					
ANR	73781	Identifier	fast_ret		73648	1					
ANR	73782	Identifier	NULL		73648	1					
ANR	73783	ExpressionStatement	ex -> delayed_exception = EG ( exception )	201:2:6218:6255	73648	2	True				
ANR	73784	AssignmentExpression	ex -> delayed_exception = EG ( exception )		73648	0		=			
ANR	73785	PtrMemberAccess	ex -> delayed_exception		73648	0					
ANR	73786	Identifier	ex		73648	0					
ANR	73787	Identifier	delayed_exception		73648	1					
ANR	73788	CallExpression	EG ( exception )		73648	1					
ANR	73789	Callee	EG		73648	0					
ANR	73790	Identifier	EG		73648	0					
ANR	73791	ArgumentList	exception		73648	1					
ANR	73792	Argument	exception		73648	0					
ANR	73793	Identifier	exception		73648	0					
ANR	73794	ExpressionStatement	EG ( exception ) = NULL	202:2:6259:6279	73648	3	True				
ANR	73795	AssignmentExpression	EG ( exception ) = NULL		73648	0		=			
ANR	73796	CallExpression	EG ( exception )		73648	0					
ANR	73797	Callee	EG		73648	0					
ANR	73798	Identifier	EG		73648	0					
ANR	73799	ArgumentList	exception		73648	1					
ANR	73800	Argument	exception		73648	0					
ANR	73801	Identifier	exception		73648	0					
ANR	73802	Identifier	NULL		73648	1					
ANR	73803	ExpressionStatement	generator -> flags |= ZEND_GENERATOR_FORCED_CLOSE	204:2:6284:6331	73648	4	True				
ANR	73804	AssignmentExpression	generator -> flags |= ZEND_GENERATOR_FORCED_CLOSE		73648	0		|=			
ANR	73805	PtrMemberAccess	generator -> flags		73648	0					
ANR	73806	Identifier	generator		73648	0					
ANR	73807	Identifier	flags		73648	1					
ANR	73808	Identifier	ZEND_GENERATOR_FORCED_CLOSE		73648	1					
ANR	73809	Statement	zend_generator_resume	205:2:6335:6355	73648	5	True				
ANR	73810	Statement	(	205:23:6356:6356	73648	6	True				
ANR	73811	Statement	generator	205:24:6357:6365	73648	7	True				
ANR	73812	Statement	TSRMLS_CC	205:34:6367:6375	73648	8	True				
ANR	73813	Statement	)	205:43:6376:6376	73648	9	True				
ANR	73814	ExpressionStatement		205:44:6377:6377	73648	10	True				
ANR	73815	ReturnType	static void		73648	1					
ANR	73816	Identifier	zend_generator_dtor_storage		73648	2					
ANR	73817	ParameterList	"zend_generator * generator , zend_object_handle handle TSRMLS_DC"		73648	3					
ANR	73818	Parameter	zend_generator * generator	168:40:5333:5357	73648	0	True				
ANR	73819	ParameterType	zend_generator *		73648	0					
ANR	73820	Identifier	generator		73648	1					
ANR	73821	Parameter	zend_object_handle handle TSRMLS_DC	168:67:5360:5394	73648	1	True				
ANR	73822	ParameterType	zend_object_handle handle		73648	0					
ANR	73823	Identifier	TSRMLS_DC		73648	1					
ANR	73824	CFGEntryNode	ENTRY		73648		True				
ANR	73825	CFGExitNode	EXIT		73648		True				
ANR	73826	Symbol	exception		73648						
ANR	73827	Symbol	generator		73648						
ANR	73828	Symbol	* try_catch		73648						
ANR	73829	Symbol	ex -> fast_ret		73648						
ANR	73830	Symbol	TSRMLS_DC		73648						
ANR	73831	Symbol	generator -> flags		73648						
ANR	73832	Symbol	* generator		73648						
ANR	73833	Symbol	* ex -> op_array		73648						
ANR	73834	Symbol	* * ex		73648						
ANR	73835	Symbol	try_catch		73648						
ANR	73836	Symbol	try_catch -> try_op		73648						
ANR	73837	Symbol	ex -> opline		73648						
ANR	73838	Symbol	ex -> op_array -> try_catch_array		73648						
ANR	73839	Symbol	EG		73648						
ANR	73840	Symbol	NULL		73648						
ANR	73841	Symbol	op_num		73648						
ANR	73842	Symbol	i		73648						
ANR	73843	Symbol	ex -> op_array		73648						
ANR	73844	Symbol	ex -> op_array -> has_finally_block		73648						
ANR	73845	Symbol	ex -> delayed_exception		73648						
ANR	73846	Symbol	generator -> execute_data		73648						
ANR	73847	Symbol	ex		73648						
ANR	73848	Symbol	ex -> op_array -> opcodes		73648						
ANR	73849	Symbol	try_catch -> finally_op		73648						
ANR	73850	Symbol	finally_op_num		73648						
ANR	73851	Symbol	* ex		73648						
ANR	73852	Symbol	ex -> op_array -> last_try_catch		73648						
ANR	73853	Symbol	ZEND_GENERATOR_FORCED_CLOSE		73648						
ANR	73854	DeclStmt									
ANR	73855	Decl							zend_generator	zend_generator *	generator
ANR	73856	DeclStmt									
ANR	73857	Decl							zend_object_value	zend_object_value	object
ANR	73858	DeclStmt									
ANR	73859	Decl							HashTable	HashTable *	target
ANR	73860	DeclStmt									
ANR	73861	Decl							zval	zval *	return_value
ANR	73862	DeclStmt									
ANR	73863	Decl							zend_generator	zend_generator *	generator
ANR	73864	DeclStmt									
ANR	73865	Decl							zend_execute_data	zend_execute_data *	current_execute_data
ANR	73866	DeclStmt									
ANR	73867	Decl							zend_op	zend_op * *	opline_ptr
ANR	73868	DeclStmt									
ANR	73869	Decl							HashTable	HashTable *	current_symbol_table
ANR	73870	DeclStmt									
ANR	73871	Decl							zend_execute_data	zend_execute_data *	execute_data
ANR	73872	DeclStmt									
ANR	73873	Decl							zend_vm_stack	zend_vm_stack	current_stack
ANR	73874	DeclStmt									
ANR	73875	Decl							zend_op_array	zend_op_array *	op_array_copy
ANR	73876	DeclStmt									
ANR	73877	Decl							zval	zval * *	original_return_value_ptr_ptr
ANR	73878	DeclStmt									
ANR	73879	Decl							zend_execute_data	zend_execute_data *	original_execute_data
ANR	73880	DeclStmt									
ANR	73881	Decl							zend_op	zend_op * *	original_opline_ptr
ANR	73882	DeclStmt									
ANR	73883	Decl							zend_op_array	zend_op_array *	original_active_op_array
ANR	73884	DeclStmt									
ANR	73885	Decl							HashTable	HashTable *	original_active_symbol_table
ANR	73886	DeclStmt									
ANR	73887	Decl							zval	zval *	original_This
ANR	73888	DeclStmt									
ANR	73889	Decl							zend_class_entry	zend_class_entry *	original_scope
ANR	73890	DeclStmt									
ANR	73891	Decl							zend_class_entry	zend_class_entry *	original_called_scope
ANR	73892	DeclStmt									
ANR	73893	Decl							zend_vm_stack	zend_vm_stack	original_stack
ANR	73894	DeclStmt									
ANR	73895	Decl							zend_generator	zend_generator *	generator
ANR	73896	DeclStmt									
ANR	73897	Decl							zend_generator	zend_generator *	generator
ANR	73898	DeclStmt									
ANR	73899	Decl							zend_generator	zend_generator *	generator
ANR	73900	DeclStmt									
ANR	73901	Decl							zend_generator	zend_generator *	generator
ANR	73902	DeclStmt									
ANR	73903	Decl							zend_generator	zend_generator *	generator
ANR	73904	DeclStmt									
ANR	73905	Decl							zval	zval *	value
ANR	73906	DeclStmt									
ANR	73907	Decl							zend_generator	zend_generator *	generator
ANR	73908	DeclStmt									
ANR	73909	Decl							zval	zval *	exception
ANR	73910	Decl							zval	zval *	exception_copy
ANR	73911	DeclStmt									
ANR	73912	Decl							zend_generator	zend_generator *	generator
ANR	73913	DeclStmt									
ANR	73914	Decl							zend_execute_data	zend_execute_data *	current_execute_data
ANR	73915	DeclStmt									
ANR	73916	Decl							zend_generator_iterator	zend_generator_iterator *	iter
ANR	73917	DeclStmt									
ANR	73918	Decl							zend_generator	zend_generator *	generator
ANR	73919	DeclStmt									
ANR	73920	Decl							zend_generator	zend_generator *	generator
ANR	73921	DeclStmt									
ANR	73922	Decl							zend_generator	zend_generator *	generator
ANR	73923	DeclStmt									
ANR	73924	Decl							zend_generator	zend_generator *	generator
ANR	73925	DeclStmt									
ANR	73926	Decl							zend_generator	zend_generator *	generator
ANR	73927	DeclStmt									
ANR	73928	Decl							zend_object_iterator_funcs	zend_object_iterator_funcs	zend_generator_iterator_functions
ANR	73929	Function	zend_generator_get_iterator	682:0:20233:21320							
ANR	73930	FunctionDef	"zend_generator_get_iterator (zend_class_entry * ce , zval * object , int by_ref TSRMLS_DC)"		73929	0					
ANR	73931	CompoundStatement		683:0:20351:21320	73929	0					
ANR	73932	IdentifierDeclStatement	zend_generator_iterator * iterator ;	684:1:20354:20387	73929	0	True				
ANR	73933	IdentifierDecl	* iterator		73929	0					
ANR	73934	IdentifierDeclType	zend_generator_iterator *		73929	0					
ANR	73935	Identifier	iterator		73929	1					
ANR	73936	IdentifierDeclStatement	zend_generator * generator ;	685:1:20390:20415	73929	1	True				
ANR	73937	IdentifierDecl	* generator		73929	0					
ANR	73938	IdentifierDeclType	zend_generator *		73929	0					
ANR	73939	Identifier	generator		73929	1					
ANR	73940	Statement	generator	687:1:20419:20427	73929	2	True				
ANR	73941	Statement	=	687:11:20429:20429	73929	3	True				
ANR	73942	Statement	(	687:13:20431:20431	73929	4	True				
ANR	73943	Statement	zend_generator	687:14:20432:20445	73929	5	True				
ANR	73944	Statement	*	687:29:20447:20447	73929	6	True				
ANR	73945	Statement	)	687:30:20448:20448	73929	7	True				
ANR	73946	Statement	zend_object_store_get_object	687:32:20450:20477	73929	8	True				
ANR	73947	Statement	(	687:60:20478:20478	73929	9	True				
ANR	73948	Statement	object	687:61:20479:20484	73929	10	True				
ANR	73949	Statement	TSRMLS_CC	687:68:20486:20494	73929	11	True				
ANR	73950	Statement	)	687:77:20495:20495	73929	12	True				
ANR	73951	ExpressionStatement		687:78:20496:20496	73929	13	True				
ANR	73952	IfStatement	if ( ! generator -> execute_data )		73929	14					
ANR	73953	Condition	! generator -> execute_data	689:5:20504:20527	73929	0	True				
ANR	73954	UnaryOperationExpression	! generator -> execute_data		73929	0					
ANR	73955	UnaryOperator	!		73929	0					
ANR	73956	PtrMemberAccess	generator -> execute_data		73929	1					
ANR	73957	Identifier	generator		73929	0					
ANR	73958	Identifier	execute_data		73929	1					
ANR	73959	CompoundStatement		7:31:178:178	73929	1					
ANR	73960	Statement	zend_throw_exception	690:2:20534:20553	73929	0	True				
ANR	73961	Statement	(	690:22:20554:20554	73929	1	True				
ANR	73962	Statement	NULL	690:23:20555:20558	73929	2	True				
ANR	73963	Statement	","	690:27:20559:20559	73929	3	True				
ANR	73964	Statement	"""Cannot traverse an already closed generator"""	690:29:20561:20605	73929	4	True				
ANR	73965	Statement	","	690:74:20606:20606	73929	5	True				
ANR	73966	Statement	0	690:76:20608:20608	73929	6	True				
ANR	73967	Statement	TSRMLS_CC	690:78:20610:20618	73929	7	True				
ANR	73968	Statement	)	690:87:20619:20619	73929	8	True				
ANR	73969	ExpressionStatement		690:88:20620:20620	73929	9	True				
ANR	73970	ReturnStatement	return NULL ;	691:2:20624:20635	73929	10	True				
ANR	73971	Identifier	NULL		73929	0					
ANR	73972	IfStatement	if ( by_ref && ! ( generator -> execute_data -> op_array -> fn_flags & ZEND_ACC_RETURN_REFERENCE ) )		73929	15					
ANR	73973	Condition	by_ref && ! ( generator -> execute_data -> op_array -> fn_flags & ZEND_ACC_RETURN_REFERENCE )	694:5:20646:20729	73929	0	True				
ANR	73974	AndExpression	by_ref && ! ( generator -> execute_data -> op_array -> fn_flags & ZEND_ACC_RETURN_REFERENCE )		73929	0		&&			
ANR	73975	Identifier	by_ref		73929	0					
ANR	73976	UnaryOperationExpression	! ( generator -> execute_data -> op_array -> fn_flags & ZEND_ACC_RETURN_REFERENCE )		73929	1					
ANR	73977	UnaryOperator	!		73929	0					
ANR	73978	BitAndExpression	generator -> execute_data -> op_array -> fn_flags & ZEND_ACC_RETURN_REFERENCE		73929	1		&			
ANR	73979	PtrMemberAccess	generator -> execute_data -> op_array -> fn_flags		73929	0					
ANR	73980	PtrMemberAccess	generator -> execute_data -> op_array		73929	0					
ANR	73981	PtrMemberAccess	generator -> execute_data		73929	0					
ANR	73982	Identifier	generator		73929	0					
ANR	73983	Identifier	execute_data		73929	1					
ANR	73984	Identifier	op_array		73929	1					
ANR	73985	Identifier	fn_flags		73929	1					
ANR	73986	Identifier	ZEND_ACC_RETURN_REFERENCE		73929	1					
ANR	73987	CompoundStatement		12:91:380:380	73929	1					
ANR	73988	Statement	zend_throw_exception	695:2:20736:20755	73929	0	True				
ANR	73989	Statement	(	695:22:20756:20756	73929	1	True				
ANR	73990	Statement	NULL	695:23:20757:20760	73929	2	True				
ANR	73991	Statement	","	695:27:20761:20761	73929	3	True				
ANR	73992	Statement	"""You can only iterate a generator by-reference if it declared that it yields by-reference"""	695:29:20763:20852	73929	4	True				
ANR	73993	Statement	","	695:119:20853:20853	73929	5	True				
ANR	73994	Statement	0	695:121:20855:20855	73929	6	True				
ANR	73995	Statement	TSRMLS_CC	695:123:20857:20865	73929	7	True				
ANR	73996	Statement	)	695:132:20866:20866	73929	8	True				
ANR	73997	ExpressionStatement		695:133:20867:20867	73929	9	True				
ANR	73998	ReturnStatement	return NULL ;	696:2:20871:20882	73929	10	True				
ANR	73999	Identifier	NULL		73929	0					
ANR	74000	ExpressionStatement	iterator = & generator -> iterator	699:1:20889:20920	73929	16	True				
ANR	74001	AssignmentExpression	iterator = & generator -> iterator		73929	0		=			
ANR	74002	Identifier	iterator		73929	0					
ANR	74003	UnaryOperationExpression	& generator -> iterator		73929	1					
ANR	74004	UnaryOperator	&		73929	0					
ANR	74005	PtrMemberAccess	generator -> iterator		73929	1					
ANR	74006	Identifier	generator		73929	0					
ANR	74007	Identifier	iterator		73929	1					
ANR	74008	ExpressionStatement	iterator -> intern . funcs = & zend_generator_iterator_functions	700:1:20923:20982	73929	17	True				
ANR	74009	AssignmentExpression	iterator -> intern . funcs = & zend_generator_iterator_functions		73929	0		=			
ANR	74010	MemberAccess	iterator -> intern . funcs		73929	0					
ANR	74011	PtrMemberAccess	iterator -> intern		73929	0					
ANR	74012	Identifier	iterator		73929	0					
ANR	74013	Identifier	intern		73929	1					
ANR	74014	Identifier	funcs		73929	1					
ANR	74015	UnaryOperationExpression	& zend_generator_iterator_functions		73929	1					
ANR	74016	UnaryOperator	&		73929	0					
ANR	74017	Identifier	zend_generator_iterator_functions		73929	1					
ANR	74018	ExpressionStatement	iterator -> intern . data = ( void * ) generator	701:1:20985:21027	73929	18	True				
ANR	74019	AssignmentExpression	iterator -> intern . data = ( void * ) generator		73929	0		=			
ANR	74020	MemberAccess	iterator -> intern . data		73929	0					
ANR	74021	PtrMemberAccess	iterator -> intern		73929	0					
ANR	74022	Identifier	iterator		73929	0					
ANR	74023	Identifier	intern		73929	1					
ANR	74024	Identifier	data		73929	1					
ANR	74025	CastExpression	( void * ) generator		73929	1					
ANR	74026	CastTarget	void *		73929	0					
ANR	74027	Identifier	generator		73929	1					
ANR	74028	ExpressionStatement	iterator -> handle = Z_OBJ_HANDLE_P ( object )	705:1:21166:21207	73929	19	True				
ANR	74029	AssignmentExpression	iterator -> handle = Z_OBJ_HANDLE_P ( object )		73929	0		=			
ANR	74030	PtrMemberAccess	iterator -> handle		73929	0					
ANR	74031	Identifier	iterator		73929	0					
ANR	74032	Identifier	handle		73929	1					
ANR	74033	CallExpression	Z_OBJ_HANDLE_P ( object )		73929	1					
ANR	74034	Callee	Z_OBJ_HANDLE_P		73929	0					
ANR	74035	Identifier	Z_OBJ_HANDLE_P		73929	0					
ANR	74036	ArgumentList	object		73929	1					
ANR	74037	Argument	object		73929	0					
ANR	74038	Identifier	object		73929	0					
ANR	74039	Statement	zend_objects_store_add_ref_by_handle	706:1:21210:21245	73929	20	True				
ANR	74040	Statement	(	706:37:21246:21246	73929	21	True				
ANR	74041	Statement	iterator	706:38:21247:21254	73929	22	True				
ANR	74042	Statement	->	706:46:21255:21256	73929	23	True				
ANR	74043	Statement	handle	706:48:21257:21262	73929	24	True				
ANR	74044	Statement	TSRMLS_CC	706:55:21264:21272	73929	25	True				
ANR	74045	Statement	)	706:64:21273:21273	73929	26	True				
ANR	74046	ExpressionStatement		706:65:21274:21274	73929	27	True				
ANR	74047	ReturnStatement	return ( zend_object_iterator * ) iterator ;	708:1:21278:21318	73929	28	True				
ANR	74048	CastExpression	( zend_object_iterator * ) iterator		73929	0					
ANR	74049	CastTarget	zend_object_iterator *		73929	0					
ANR	74050	Identifier	iterator		73929	1					
ANR	74051	ReturnType	zend_object_iterator *		73929	1					
ANR	74052	Identifier	zend_generator_get_iterator		73929	2					
ANR	74053	ParameterList	"zend_class_entry * ce , zval * object , int by_ref TSRMLS_DC"		73929	3					
ANR	74054	Parameter	zend_class_entry * ce	682:50:20283:20302	73929	0	True				
ANR	74055	ParameterType	zend_class_entry *		73929	0					
ANR	74056	Identifier	ce		73929	1					
ANR	74057	Parameter	zval * object	682:72:20305:20316	73929	1	True				
ANR	74058	ParameterType	zval *		73929	0					
ANR	74059	Identifier	object		73929	1					
ANR	74060	Parameter	int by_ref TSRMLS_DC	682:86:20319:20338	73929	2	True				
ANR	74061	ParameterType	int by_ref		73929	0					
ANR	74062	Identifier	TSRMLS_DC		73929	1					
ANR	74063	CFGEntryNode	ENTRY		73929		True				
ANR	74064	CFGExitNode	EXIT		73929		True				
ANR	74065	Symbol	generator		73929						
ANR	74066	Symbol	* * * generator		73929						
ANR	74067	Symbol	iterator -> intern . data		73929						
ANR	74068	Symbol	TSRMLS_DC		73929						
ANR	74069	Symbol	iterator		73929						
ANR	74070	Symbol	* generator		73929						
ANR	74071	Symbol	& zend_generator_iterator_functions		73929						
ANR	74072	Symbol	iterator -> handle		73929						
ANR	74073	Symbol	ce		73929						
ANR	74074	Symbol	iterator -> intern		73929						
ANR	74075	Symbol	NULL		73929						
ANR	74076	Symbol	Z_OBJ_HANDLE_P		73929						
ANR	74077	Symbol	generator -> execute_data -> op_array		73929						
ANR	74078	Symbol	* * generator		73929						
ANR	74079	Symbol	& generator -> iterator		73929						
ANR	74080	Symbol	* generator -> execute_data -> op_array		73929						
ANR	74081	Symbol	iterator -> intern . funcs		73929						
ANR	74082	Symbol	generator -> execute_data		73929						
ANR	74083	Symbol	* * generator -> execute_data		73929						
ANR	74084	Symbol	* iterator		73929						
ANR	74085	Symbol	generator -> execute_data -> op_array -> fn_flags		73929						
ANR	74086	Symbol	ZEND_ACC_RETURN_REFERENCE		73929						
ANR	74087	Symbol	by_ref		73929						
ANR	74088	Symbol	* generator -> execute_data		73929						
ANR	74089	Symbol	object		73929						
ANR	74090	DeclStmt									
ANR	74091	Decl							const zend_function_entry	const zend_function_entry [ ]	generator_functions
ANR	74092	DeclStmt									
ANR	74093	Decl							zend_class_entry	zend_class_entry	ce
