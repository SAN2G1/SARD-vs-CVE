command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	327148	File	data/converged/CVE-2017-11142_php-src/ext_fileinfo_libmagic_apprentice.c								
ANR	327149	ClassDef	magic_entry	91:0:2741:2825							
ANR	327150	DeclStmt									
ANR	327151	Decl							struct magic	struct magic *	mp
ANR	327152	DeclStmt									
ANR	327153	Decl							uint32_t	uint32_t	cont_count
ANR	327154	DeclStmt									
ANR	327155	Decl							uint32_t	uint32_t	max_count
ANR	327156	ClassDef	magic_entry_set	97:0:2829:2911							
ANR	327157	DeclStmt									
ANR	327158	Decl							struct magic_entry	struct magic_entry *	me
ANR	327159	DeclStmt									
ANR	327160	Decl							uint32_t	uint32_t	count
ANR	327161	DeclStmt									
ANR	327162	Decl							uint32_t	uint32_t	max
ANR	327163	ClassDef	magic_map	103:0:2915:3021							
ANR	327164	DeclStmt									
ANR	327165	Decl							void	void *	p
ANR	327166	DeclStmt									
ANR	327167	Decl							size_t	size_t	len
ANR	327168	DeclStmt									
ANR	327169	Decl							struct magic	struct magic * [ MAGIC_SETS ]	magic
ANR	327170	DeclStmt									
ANR	327171	Decl							uint32_t	uint32_t [ MAGIC_SETS ]	nmagic
ANR	327172	DeclStmt									
ANR	327173	Decl							int	int [ FILE_NAMES_SIZE ]	file_formats
ANR	327174	DeclStmt									
ANR	327175	Decl							const size_t	const size_t	file_nformats
ANR	327176	DeclStmt									
ANR	327177	Decl							const char	const char * [ FILE_NAMES_SIZE ]	file_names
ANR	327178	DeclStmt									
ANR	327179	Decl							const size_t	const size_t	file_nnames
ANR	327180	DeclStmt									
ANR	327181	Decl							int	"int ( struct magic_set * ms , struct magic * , const char * * , int )"	getvalue
ANR	327182	DeclStmt									
ANR	327183	Decl							int	int ( int )	hextoint
ANR	327184	DeclStmt									
ANR	327185	Decl							const char	"const char * ( struct magic_set * , struct magic * , const char * , int )"	getstr
ANR	327186	DeclStmt									
ANR	327187	Decl							int	"int ( struct magic_set * , struct magic_entry * , const char * , size_t , int )"	parse
ANR	327188	DeclStmt									
ANR	327189	Decl							void	void ( const char * * )	eatsize
ANR	327190	DeclStmt									
ANR	327191	Decl							int	"int ( struct magic_set * , const char * , int )"	apprentice_1
ANR	327192	DeclStmt									
ANR	327193	Decl							size_t	size_t ( const struct magic * )	apprentice_magic_strength
ANR	327194	DeclStmt									
ANR	327195	Decl							int	"int ( const void * , const void * )"	apprentice_sort
ANR	327196	DeclStmt									
ANR	327197	Decl							void	"void ( struct mlist * , int )"	apprentice_list
ANR	327198	DeclStmt									
ANR	327199	Decl							struct magic_map	"struct magic_map * ( struct magic_set * , const char * , int )"	apprentice_load
ANR	327200	DeclStmt									
ANR	327201	Decl							struct mlist	struct mlist * ( void )	mlist_alloc
ANR	327202	DeclStmt									
ANR	327203	Decl							void	void ( struct mlist * )	mlist_free
ANR	327204	DeclStmt									
ANR	327205	Decl							void	"void ( struct magic * , uint32_t )"	byteswap
ANR	327206	DeclStmt									
ANR	327207	Decl							void	void ( struct magic * )	bs1
ANR	327208	DeclStmt									
ANR	327209	Decl							uint16_t	uint16_t ( uint16_t )	swap2
ANR	327210	DeclStmt									
ANR	327211	Decl							uint32_t	uint32_t ( uint32_t )	swap4
ANR	327212	DeclStmt									
ANR	327213	Decl							uint64_t	uint64_t ( uint64_t )	swap8
ANR	327214	DeclStmt									
ANR	327215	Decl							char	"char * ( struct magic_set * , const char * , int )"	mkdbname
ANR	327216	DeclStmt									
ANR	327217	Decl							struct magic_map	"struct magic_map * ( struct magic_set * , const char * )"	apprentice_map
ANR	327218	DeclStmt									
ANR	327219	Decl							void	void ( struct magic_map * )	apprentice_unmap
ANR	327220	DeclStmt									
ANR	327221	Decl							int	"int ( struct magic_set * , struct magic_map * , const char * )"	apprentice_compile
ANR	327222	DeclStmt									
ANR	327223	Decl							int	"int ( const char * , int )"	check_format_type
ANR	327224	DeclStmt									
ANR	327225	Decl							int	"int ( struct magic_set * , struct magic * )"	check_format
ANR	327226	DeclStmt									
ANR	327227	Decl							int	int ( char )	get_op
ANR	327228	DeclStmt									
ANR	327229	Decl							int	"int ( struct magic_set * , struct magic_entry * , const char * )"	parse_mime
ANR	327230	DeclStmt									
ANR	327231	Decl							int	"int ( struct magic_set * , struct magic_entry * , const char * )"	parse_strength
ANR	327232	DeclStmt									
ANR	327233	Decl							int	"int ( struct magic_set * , struct magic_entry * , const char * )"	parse_apple
ANR	327234	DeclStmt									
ANR	327235	Decl							size_t	size_t	magicsize
ANR	327236	DeclStmt									
ANR	327237	Decl							const char	const char [ ]	usg_hdr
ANR	327238	ClassDef	<unnamed>	152:8:4911:5221							
ANR	327239	DeclStmt									
ANR	327240	Decl							const char	const char *	name
ANR	327241	DeclStmt									
ANR	327242	Decl							size_t	size_t	len
ANR	327243	DeclStmt									
ANR	327244	Decl							"int ( * ) ( struct magic_set * , struct magic_entry * , const char * )"	"int ( * ) ( struct magic_set * , struct magic_entry * , const char * )"	fun
ANR	327245	DeclStmt									
ANR	327246	Decl								 [ ]	bang
ANR	327247	ClassDef	type_tbl_s	167:0:5251:5348							
ANR	327248	DeclStmt									
ANR	327249	Decl							const char	const char [ 16 ]	name
ANR	327250	DeclStmt									
ANR	327251	Decl							const size_t	const size_t	len
ANR	327252	DeclStmt									
ANR	327253	Decl							const int	const int	type
ANR	327254	DeclStmt									
ANR	327255	Decl							const int	const int	format
ANR	327256	DeclStmt									
ANR	327257	Decl							const struct type_tbl_s	const struct type_tbl_s [ ]	type_tbl
ANR	327258	DeclStmt									
ANR	327259	Decl							const struct type_tbl_s	const struct type_tbl_s [ ]	special_tbl
ANR	327260	Function	get_type	251:8:8553:8796							
ANR	327261	FunctionDef	"get_type (const struct type_tbl_s * tbl , const char * l , const char * * t)"		327260	0					
ANR	327262	CompoundStatement		253:0:8627:8796	327260	0					
ANR	327263	IdentifierDeclStatement	const struct type_tbl_s * p ;	254:1:8630:8656	327260	0	True				
ANR	327264	IdentifierDecl	* p		327260	0					
ANR	327265	IdentifierDeclType	const struct type_tbl_s *		327260	0					
ANR	327266	Identifier	p		327260	1					
ANR	327267	ForStatement	for ( p = tbl ; p -> len ; p ++ )		327260	1					
ANR	327268	ForInit	p = tbl ;	256:6:8665:8672	327260	0	True				
ANR	327269	AssignmentExpression	p = tbl		327260	0		=			
ANR	327270	Identifier	p		327260	0					
ANR	327271	Identifier	tbl		327260	1					
ANR	327272	Condition	p -> len	256:15:8674:8679	327260	1	True				
ANR	327273	PtrMemberAccess	p -> len		327260	0					
ANR	327274	Identifier	p		327260	0					
ANR	327275	Identifier	len		327260	1					
ANR	327276	PostIncDecOperationExpression	p ++	256:23:8682:8684	327260	2	True				
ANR	327277	Identifier	p		327260	0					
ANR	327278	IncDec	++		327260	1					
ANR	327279	CompoundStatement		4:28:59:59	327260	3					
ANR	327280	IfStatement	"if ( strncmp ( l , p -> name , p -> len ) == 0 )"		327260	0					
ANR	327281	Condition	"strncmp ( l , p -> name , p -> len ) == 0"	257:6:8695:8726	327260	0	True				
ANR	327282	EqualityExpression	"strncmp ( l , p -> name , p -> len ) == 0"		327260	0		==			
ANR	327283	CallExpression	"strncmp ( l , p -> name , p -> len )"		327260	0					
ANR	327284	Callee	strncmp		327260	0					
ANR	327285	Identifier	strncmp		327260	0					
ANR	327286	ArgumentList	l		327260	1					
ANR	327287	Argument	l		327260	0					
ANR	327288	Identifier	l		327260	0					
ANR	327289	Argument	p -> name		327260	1					
ANR	327290	PtrMemberAccess	p -> name		327260	0					
ANR	327291	Identifier	p		327260	0					
ANR	327292	Identifier	name		327260	1					
ANR	327293	Argument	p -> len		327260	2					
ANR	327294	PtrMemberAccess	p -> len		327260	0					
ANR	327295	Identifier	p		327260	0					
ANR	327296	Identifier	len		327260	1					
ANR	327297	PrimaryExpression	0		327260	1					
ANR	327298	CompoundStatement		5:40:101:101	327260	1					
ANR	327299	IfStatement	if ( t )		327260	0					
ANR	327300	Condition	t	258:7:8738:8738	327260	0	True				
ANR	327301	Identifier	t		327260	0					
ANR	327302	ExpressionStatement	* t = l + p -> len	259:4:8745:8760	327260	1	True				
ANR	327303	AssignmentExpression	* t = l + p -> len		327260	0		=			
ANR	327304	UnaryOperationExpression	* t		327260	0					
ANR	327305	UnaryOperator	*		327260	0					
ANR	327306	Identifier	t		327260	1					
ANR	327307	AdditiveExpression	l + p -> len		327260	1		+			
ANR	327308	Identifier	l		327260	0					
ANR	327309	PtrMemberAccess	p -> len		327260	1					
ANR	327310	Identifier	p		327260	0					
ANR	327311	Identifier	len		327260	1					
ANR	327312	BreakStatement	break ;	260:3:8765:8770	327260	1	True				
ANR	327313	ReturnStatement	return p -> type ;	263:1:8780:8794	327260	2	True				
ANR	327314	PtrMemberAccess	p -> type		327260	0					
ANR	327315	Identifier	p		327260	0					
ANR	327316	Identifier	type		327260	1					
ANR	327317	ReturnType	int		327260	1					
ANR	327318	Identifier	get_type		327260	2					
ANR	327319	ParameterList	"const struct type_tbl_s * tbl , const char * l , const char * * t"		327260	3					
ANR	327320	Parameter	const struct type_tbl_s * tbl	252:9:8566:8593	327260	0	True				
ANR	327321	ParameterType	const struct type_tbl_s *		327260	0					
ANR	327322	Identifier	tbl		327260	1					
ANR	327323	Parameter	const char * l	252:39:8596:8608	327260	1	True				
ANR	327324	ParameterType	const char *		327260	0					
ANR	327325	Identifier	l		327260	1					
ANR	327326	Parameter	const char * * t	252:54:8611:8624	327260	2	True				
ANR	327327	ParameterType	const char * *		327260	0					
ANR	327328	Identifier	t		327260	1					
ANR	327329	CFGEntryNode	ENTRY		327260		True				
ANR	327330	CFGExitNode	EXIT		327260		True				
ANR	327331	Symbol	p		327260						
ANR	327332	Symbol	strncmp		327260						
ANR	327333	Symbol	t		327260						
ANR	327334	Symbol	p -> len		327260						
ANR	327335	Symbol	* p		327260						
ANR	327336	Symbol	p -> name		327260						
ANR	327337	Symbol	l		327260						
ANR	327338	Symbol	p -> type		327260						
ANR	327339	Symbol	* t		327260						
ANR	327340	Symbol	tbl		327260						
ANR	327341	Function	get_standard_integer_type	266:8:8807:10674							
ANR	327342	FunctionDef	"get_standard_integer_type (const char * l , const char * * t)"		327341	0					
ANR	327343	CompoundStatement		268:0:8868:10674	327341	0					
ANR	327344	IdentifierDeclStatement	int type ;	269:1:8871:8879	327341	0	True				
ANR	327345	IdentifierDecl	type		327341	0					
ANR	327346	IdentifierDeclType	int		327341	0					
ANR	327347	Identifier	type		327341	1					
ANR	327348	IfStatement	if ( isalpha ( ( unsigned char ) l [ 1 ] ) )		327341	1					
ANR	327349	Condition	isalpha ( ( unsigned char ) l [ 1 ] )	271:5:8887:8914	327341	0	True				
ANR	327350	CallExpression	isalpha ( ( unsigned char ) l [ 1 ] )		327341	0					
ANR	327351	Callee	isalpha		327341	0					
ANR	327352	Identifier	isalpha		327341	0					
ANR	327353	ArgumentList	( unsigned char ) l [ 1 ]		327341	1					
ANR	327354	Argument	( unsigned char ) l [ 1 ]		327341	0					
ANR	327355	CastExpression	( unsigned char ) l [ 1 ]		327341	0					
ANR	327356	CastTarget	unsigned char		327341	0					
ANR	327357	ArrayIndexing	l [ 1 ]		327341	1					
ANR	327358	Identifier	l		327341	0					
ANR	327359	PrimaryExpression	1		327341	1					
ANR	327360	CompoundStatement		4:35:48:48	327341	1					
ANR	327361	SwitchStatement	switch ( l [ 1 ] )		327341	0					
ANR	327362	Condition	l [ 1 ]	272:10:8929:8932	327341	0	True				
ANR	327363	ArrayIndexing	l [ 1 ]		327341	0					
ANR	327364	Identifier	l		327341	0					
ANR	327365	PrimaryExpression	1		327341	1					
ANR	327366	CompoundStatement		5:16:66:66	327341	1					
ANR	327367	Label	case 'C' :	273:2:8939:8947	327341	0	True				
ANR	327368	ExpressionStatement	type = FILE_BYTE	275:3:8975:8991	327341	1	True				
ANR	327369	AssignmentExpression	type = FILE_BYTE		327341	0		=			
ANR	327370	Identifier	type		327341	0					
ANR	327371	Identifier	FILE_BYTE		327341	1					
ANR	327372	BreakStatement	break ;	276:3:8996:9001	327341	2	True				
ANR	327373	Label	case 'S' :	277:2:9005:9013	327341	3	True				
ANR	327374	ExpressionStatement	type = FILE_SHORT	279:3:9041:9058	327341	4	True				
ANR	327375	AssignmentExpression	type = FILE_SHORT		327341	0		=			
ANR	327376	Identifier	type		327341	0					
ANR	327377	Identifier	FILE_SHORT		327341	1					
ANR	327378	BreakStatement	break ;	280:3:9063:9068	327341	5	True				
ANR	327379	Label	case 'I' :	281:2:9072:9080	327341	6	True				
ANR	327380	Label	case 'L' :	282:2:9084:9092	327341	7	True				
ANR	327381	ExpressionStatement	type = FILE_LONG	295:3:9533:9549	327341	8	True				
ANR	327382	AssignmentExpression	type = FILE_LONG		327341	0		=			
ANR	327383	Identifier	type		327341	0					
ANR	327384	Identifier	FILE_LONG		327341	1					
ANR	327385	BreakStatement	break ;	296:3:9554:9559	327341	9	True				
ANR	327386	Label	case 'Q' :	297:2:9563:9571	327341	10	True				
ANR	327387	ExpressionStatement	type = FILE_QUAD	299:3:9599:9615	327341	11	True				
ANR	327388	AssignmentExpression	type = FILE_QUAD		327341	0		=			
ANR	327389	Identifier	type		327341	0					
ANR	327390	Identifier	FILE_QUAD		327341	1					
ANR	327391	BreakStatement	break ;	300:3:9620:9625	327341	12	True				
ANR	327392	Label	default :	301:2:9629:9636	327341	13	True				
ANR	327393	Identifier	default		327341	0					
ANR	327394	ReturnStatement	return FILE_INVALID ;	303:3:9689:9708	327341	14	True				
ANR	327395	Identifier	FILE_INVALID		327341	0					
ANR	327396	ExpressionStatement	l += 2	305:2:9716:9722	327341	1	True				
ANR	327397	AssignmentExpression	l += 2		327341	0		+=			
ANR	327398	Identifier	l		327341	0					
ANR	327399	PrimaryExpression	2		327341	1					
ANR	327400	ElseStatement	else		327341	0					
ANR	327401	IfStatement	if ( isdigit ( ( unsigned char ) l [ 1 ] ) )		327341	0					
ANR	327402	Condition	isdigit ( ( unsigned char ) l [ 1 ] )	306:12:9736:9763	327341	0	True				
ANR	327403	CallExpression	isdigit ( ( unsigned char ) l [ 1 ] )		327341	0					
ANR	327404	Callee	isdigit		327341	0					
ANR	327405	Identifier	isdigit		327341	0					
ANR	327406	ArgumentList	( unsigned char ) l [ 1 ]		327341	1					
ANR	327407	Argument	( unsigned char ) l [ 1 ]		327341	0					
ANR	327408	CastExpression	( unsigned char ) l [ 1 ]		327341	0					
ANR	327409	CastTarget	unsigned char		327341	0					
ANR	327410	ArrayIndexing	l [ 1 ]		327341	1					
ANR	327411	Identifier	l		327341	0					
ANR	327412	PrimaryExpression	1		327341	1					
ANR	327413	CompoundStatement		39:42:897:897	327341	1					
ANR	327414	IfStatement	if ( isdigit ( ( unsigned char ) l [ 2 ] ) )		327341	0					
ANR	327415	Condition	isdigit ( ( unsigned char ) l [ 2 ] )	317:6:10194:10221	327341	0	True				
ANR	327416	CallExpression	isdigit ( ( unsigned char ) l [ 2 ] )		327341	0					
ANR	327417	Callee	isdigit		327341	0					
ANR	327418	Identifier	isdigit		327341	0					
ANR	327419	ArgumentList	( unsigned char ) l [ 2 ]		327341	1					
ANR	327420	Argument	( unsigned char ) l [ 2 ]		327341	0					
ANR	327421	CastExpression	( unsigned char ) l [ 2 ]		327341	0					
ANR	327422	CastTarget	unsigned char		327341	0					
ANR	327423	ArrayIndexing	l [ 2 ]		327341	1					
ANR	327424	Identifier	l		327341	0					
ANR	327425	PrimaryExpression	2		327341	1					
ANR	327426	CompoundStatement		50:36:1355:1355	327341	1					
ANR	327427	ReturnStatement	return FILE_INVALID ;	319:3:10258:10277	327341	0	True				
ANR	327428	Identifier	FILE_INVALID		327341	0					
ANR	327429	SwitchStatement	switch ( l [ 1 ] )		327341	1					
ANR	327430	Condition	l [ 1 ]	321:10:10293:10296	327341	0	True				
ANR	327431	ArrayIndexing	l [ 1 ]		327341	0					
ANR	327432	Identifier	l		327341	0					
ANR	327433	PrimaryExpression	1		327341	1					
ANR	327434	CompoundStatement		54:16:1430:1430	327341	1					
ANR	327435	Label	case '1' :	322:2:10303:10311	327341	0	True				
ANR	327436	ExpressionStatement	type = FILE_BYTE	323:3:10316:10332	327341	1	True				
ANR	327437	AssignmentExpression	type = FILE_BYTE		327341	0		=			
ANR	327438	Identifier	type		327341	0					
ANR	327439	Identifier	FILE_BYTE		327341	1					
ANR	327440	BreakStatement	break ;	324:3:10337:10342	327341	2	True				
ANR	327441	Label	case '2' :	325:2:10346:10354	327341	3	True				
ANR	327442	ExpressionStatement	type = FILE_SHORT	326:3:10359:10376	327341	4	True				
ANR	327443	AssignmentExpression	type = FILE_SHORT		327341	0		=			
ANR	327444	Identifier	type		327341	0					
ANR	327445	Identifier	FILE_SHORT		327341	1					
ANR	327446	BreakStatement	break ;	327:3:10381:10386	327341	5	True				
ANR	327447	Label	case '4' :	328:2:10390:10398	327341	6	True				
ANR	327448	ExpressionStatement	type = FILE_LONG	329:3:10403:10419	327341	7	True				
ANR	327449	AssignmentExpression	type = FILE_LONG		327341	0		=			
ANR	327450	Identifier	type		327341	0					
ANR	327451	Identifier	FILE_LONG		327341	1					
ANR	327452	BreakStatement	break ;	330:3:10424:10429	327341	8	True				
ANR	327453	Label	case '8' :	331:2:10433:10441	327341	9	True				
ANR	327454	ExpressionStatement	type = FILE_QUAD	332:3:10446:10462	327341	10	True				
ANR	327455	AssignmentExpression	type = FILE_QUAD		327341	0		=			
ANR	327456	Identifier	type		327341	0					
ANR	327457	Identifier	FILE_QUAD		327341	1					
ANR	327458	BreakStatement	break ;	333:3:10467:10472	327341	11	True				
ANR	327459	Label	default :	334:2:10476:10483	327341	12	True				
ANR	327460	Identifier	default		327341	0					
ANR	327461	ReturnStatement	return FILE_INVALID ;	336:3:10529:10548	327341	13	True				
ANR	327462	Identifier	FILE_INVALID		327341	0					
ANR	327463	ExpressionStatement	l += 2	338:2:10556:10562	327341	2	True				
ANR	327464	AssignmentExpression	l += 2		327341	0		+=			
ANR	327465	Identifier	l		327341	0					
ANR	327466	PrimaryExpression	2		327341	1					
ANR	327467	ElseStatement	else		327341	0					
ANR	327468	CompoundStatement		72:8:1703:1703	327341	0					
ANR	327469	ExpressionStatement	type = FILE_LONG	343:2:10614:10630	327341	0	True				
ANR	327470	AssignmentExpression	type = FILE_LONG		327341	0		=			
ANR	327471	Identifier	type		327341	0					
ANR	327472	Identifier	FILE_LONG		327341	1					
ANR	327473	ExpressionStatement	++ l	344:2:10634:10637	327341	1	True				
ANR	327474	UnaryExpression	++ l		327341	0					
ANR	327475	IncDec	++		327341	0					
ANR	327476	Identifier	l		327341	1					
ANR	327477	IfStatement	if ( t )		327341	2					
ANR	327478	Condition	t	346:5:10647:10647	327341	0	True				
ANR	327479	Identifier	t		327341	0					
ANR	327480	ExpressionStatement	* t = l	347:2:10652:10658	327341	1	True				
ANR	327481	AssignmentExpression	* t = l		327341	0		=			
ANR	327482	UnaryOperationExpression	* t		327341	0					
ANR	327483	UnaryOperator	*		327341	0					
ANR	327484	Identifier	t		327341	1					
ANR	327485	Identifier	l		327341	1					
ANR	327486	ReturnStatement	return type ;	348:1:10661:10672	327341	3	True				
ANR	327487	Identifier	type		327341	0					
ANR	327488	ReturnType	int		327341	1					
ANR	327489	Identifier	get_standard_integer_type		327341	2					
ANR	327490	ParameterList	"const char * l , const char * * t"		327341	3					
ANR	327491	Parameter	const char * l	267:26:8837:8849	327341	0	True				
ANR	327492	ParameterType	const char *		327341	0					
ANR	327493	Identifier	l		327341	1					
ANR	327494	Parameter	const char * * t	267:41:8852:8865	327341	1	True				
ANR	327495	ParameterType	const char * *		327341	0					
ANR	327496	Identifier	t		327341	1					
ANR	327497	CFGEntryNode	ENTRY		327341		True				
ANR	327498	CFGExitNode	EXIT		327341		True				
ANR	327499	Symbol	FILE_INVALID		327341						
ANR	327500	Symbol	isalpha		327341						
ANR	327501	Symbol	t		327341						
ANR	327502	Symbol	FILE_BYTE		327341						
ANR	327503	Symbol	* l		327341						
ANR	327504	Symbol	FILE_SHORT		327341						
ANR	327505	Symbol	l		327341						
ANR	327506	Symbol	type		327341						
ANR	327507	Symbol	FILE_LONG		327341						
ANR	327508	Symbol	isdigit		327341						
ANR	327509	Symbol	FILE_QUAD		327341						
ANR	327510	Symbol	* t		327341						
ANR	327511	Function	init_file_tables	351:8:10685:10985							
ANR	327512	FunctionDef	init_file_tables ()		327511	0					
ANR	327513	CompoundStatement		353:0:10713:10985	327511	0					
ANR	327514	Statement	static	354:1:10716:10721	327511	0	True				
ANR	327515	IdentifierDeclStatement	int done = 0 ;	354:8:10723:10735	327511	1	True				
ANR	327516	IdentifierDecl	done = 0		327511	0					
ANR	327517	IdentifierDeclType	int		327511	0					
ANR	327518	Identifier	done		327511	1					
ANR	327519	AssignmentExpression	done = 0		327511	2		=			
ANR	327520	Identifier	done		327511	0					
ANR	327521	PrimaryExpression	0		327511	1					
ANR	327522	IdentifierDeclStatement	const struct type_tbl_s * p ;	355:1:10738:10764	327511	2	True				
ANR	327523	IdentifierDecl	* p		327511	0					
ANR	327524	IdentifierDeclType	const struct type_tbl_s *		327511	0					
ANR	327525	Identifier	p		327511	1					
ANR	327526	IfStatement	if ( done )		327511	3					
ANR	327527	Condition	done	357:5:10772:10775	327511	0	True				
ANR	327528	Identifier	done		327511	0					
ANR	327529	ReturnStatement	return ;	358:2:10780:10786	327511	1	True				
ANR	327530	ExpressionStatement	done ++	359:1:10789:10795	327511	4	True				
ANR	327531	PostIncDecOperationExpression	done ++		327511	0					
ANR	327532	Identifier	done		327511	0					
ANR	327533	IncDec	++		327511	1					
ANR	327534	ForStatement	for ( p = type_tbl ; p -> len ; p ++ )		327511	5					
ANR	327535	ForInit	p = type_tbl ;	361:6:10804:10816	327511	0	True				
ANR	327536	AssignmentExpression	p = type_tbl		327511	0		=			
ANR	327537	Identifier	p		327511	0					
ANR	327538	Identifier	type_tbl		327511	1					
ANR	327539	Condition	p -> len	361:20:10818:10823	327511	1	True				
ANR	327540	PtrMemberAccess	p -> len		327511	0					
ANR	327541	Identifier	p		327511	0					
ANR	327542	Identifier	len		327511	1					
ANR	327543	PostIncDecOperationExpression	p ++	361:28:10826:10828	327511	2	True				
ANR	327544	Identifier	p		327511	0					
ANR	327545	IncDec	++		327511	1					
ANR	327546	CompoundStatement		9:33:117:117	327511	3					
ANR	327547	ExpressionStatement	assert ( p -> type < FILE_NAMES_SIZE )	362:2:10835:10868	327511	0	True				
ANR	327548	CallExpression	assert ( p -> type < FILE_NAMES_SIZE )		327511	0					
ANR	327549	Callee	assert		327511	0					
ANR	327550	Identifier	assert		327511	0					
ANR	327551	ArgumentList	p -> type < FILE_NAMES_SIZE		327511	1					
ANR	327552	Argument	p -> type < FILE_NAMES_SIZE		327511	0					
ANR	327553	RelationalExpression	p -> type < FILE_NAMES_SIZE		327511	0		<			
ANR	327554	PtrMemberAccess	p -> type		327511	0					
ANR	327555	Identifier	p		327511	0					
ANR	327556	Identifier	type		327511	1					
ANR	327557	Identifier	FILE_NAMES_SIZE		327511	1					
ANR	327558	ExpressionStatement	file_names [ p -> type ] = p -> name	363:2:10872:10901	327511	1	True				
ANR	327559	AssignmentExpression	file_names [ p -> type ] = p -> name		327511	0		=			
ANR	327560	ArrayIndexing	file_names [ p -> type ]		327511	0					
ANR	327561	Identifier	file_names		327511	0					
ANR	327562	PtrMemberAccess	p -> type		327511	1					
ANR	327563	Identifier	p		327511	0					
ANR	327564	Identifier	type		327511	1					
ANR	327565	PtrMemberAccess	p -> name		327511	1					
ANR	327566	Identifier	p		327511	0					
ANR	327567	Identifier	name		327511	1					
ANR	327568	ExpressionStatement	file_formats [ p -> type ] = p -> format	364:2:10905:10938	327511	2	True				
ANR	327569	AssignmentExpression	file_formats [ p -> type ] = p -> format		327511	0		=			
ANR	327570	ArrayIndexing	file_formats [ p -> type ]		327511	0					
ANR	327571	Identifier	file_formats		327511	0					
ANR	327572	PtrMemberAccess	p -> type		327511	1					
ANR	327573	Identifier	p		327511	0					
ANR	327574	Identifier	type		327511	1					
ANR	327575	PtrMemberAccess	p -> format		327511	1					
ANR	327576	Identifier	p		327511	0					
ANR	327577	Identifier	format		327511	1					
ANR	327578	ExpressionStatement	assert ( p - type_tbl == FILE_NAMES_SIZE )	366:1:10944:10983	327511	6	True				
ANR	327579	CallExpression	assert ( p - type_tbl == FILE_NAMES_SIZE )		327511	0					
ANR	327580	Callee	assert		327511	0					
ANR	327581	Identifier	assert		327511	0					
ANR	327582	ArgumentList	p - type_tbl == FILE_NAMES_SIZE		327511	1					
ANR	327583	Argument	p - type_tbl == FILE_NAMES_SIZE		327511	0					
ANR	327584	EqualityExpression	p - type_tbl == FILE_NAMES_SIZE		327511	0		==			
ANR	327585	AdditiveExpression	p - type_tbl		327511	0		-			
ANR	327586	Identifier	p		327511	0					
ANR	327587	Identifier	type_tbl		327511	1					
ANR	327588	Identifier	FILE_NAMES_SIZE		327511	1					
ANR	327589	ReturnType	void		327511	1					
ANR	327590	Identifier	init_file_tables		327511	2					
ANR	327591	ParameterList			327511	3					
ANR	327592	CFGEntryNode	ENTRY		327511		True				
ANR	327593	CFGExitNode	EXIT		327511		True				
ANR	327594	Symbol	p -> format		327511						
ANR	327595	Symbol	file_names		327511						
ANR	327596	Symbol	file_formats		327511						
ANR	327597	Symbol	* file_names		327511						
ANR	327598	Symbol	FILE_NAMES_SIZE		327511						
ANR	327599	Symbol	* p -> type		327511						
ANR	327600	Symbol	type_tbl		327511						
ANR	327601	Symbol	* file_formats		327511						
ANR	327602	Symbol	done		327511						
ANR	327603	Symbol	p -> type		327511						
ANR	327604	Symbol	p		327511						
ANR	327605	Symbol	p -> len		327511						
ANR	327606	Symbol	* p		327511						
ANR	327607	Symbol	p -> name		327511						
ANR	327608	Symbol	* * p		327511						
ANR	327609	Function	add_mlist	369:8:10996:11352							
ANR	327610	FunctionDef	"add_mlist (struct mlist * mlp , struct magic_map * map , size_t idx)"		327609	0					
ANR	327611	CompoundStatement		371:0:11064:11352	327609	0					
ANR	327612	IdentifierDeclStatement	struct mlist * ml ;	372:1:11067:11083	327609	0	True				
ANR	327613	IdentifierDecl	* ml		327609	0					
ANR	327614	IdentifierDeclType	struct mlist *		327609	0					
ANR	327615	Identifier	ml		327609	1					
ANR	327616	Statement	if	374:1:11087:11088	327609	1	True				
ANR	327617	Statement	(	374:4:11090:11090	327609	2	True				
ANR	327618	Statement	(	374:5:11091:11091	327609	3	True				
ANR	327619	Statement	ml	374:6:11092:11093	327609	4	True				
ANR	327620	Statement	=	374:9:11095:11095	327609	5	True				
ANR	327621	Statement	CAST	374:11:11097:11100	327609	6	True				
ANR	327622	Statement	(	374:15:11101:11101	327609	7	True				
ANR	327623	Statement	struct	374:16:11102:11107	327609	8	True				
ANR	327624	Statement	mlist	374:23:11109:11113	327609	9	True				
ANR	327625	Statement	*	374:29:11115:11115	327609	10	True				
ANR	327626	Statement	","	374:30:11116:11116	327609	11	True				
ANR	327627	Statement	emalloc	374:32:11118:11124	327609	12	True				
ANR	327628	Statement	(	374:39:11125:11125	327609	13	True				
ANR	327629	Statement	sizeof	374:40:11126:11131	327609	14	True				
ANR	327630	Statement	(	374:46:11132:11132	327609	15	True				
ANR	327631	Statement	*	374:47:11133:11133	327609	16	True				
ANR	327632	Statement	ml	374:48:11134:11135	327609	17	True				
ANR	327633	Statement	)	374:50:11136:11136	327609	18	True				
ANR	327634	Statement	)	374:51:11137:11137	327609	19	True				
ANR	327635	Statement	)	374:52:11138:11138	327609	20	True				
ANR	327636	Statement	)	374:53:11139:11139	327609	21	True				
ANR	327637	Statement	==	374:55:11141:11142	327609	22	True				
ANR	327638	Statement	NULL	374:58:11144:11147	327609	23	True				
ANR	327639	Statement	)	374:62:11148:11148	327609	24	True				
ANR	327640	ReturnStatement	return - 1 ;	375:2:11152:11161	327609	25	True				
ANR	327641	UnaryOperationExpression	- 1		327609	0					
ANR	327642	UnaryOperator	-		327609	0					
ANR	327643	PrimaryExpression	1		327609	1					
ANR	327644	ExpressionStatement	ml -> map = idx == 0 ? map : NULL	377:1:11165:11196	327609	26	True				
ANR	327645	AssignmentExpression	ml -> map = idx == 0 ? map : NULL		327609	0		=			
ANR	327646	PtrMemberAccess	ml -> map		327609	0					
ANR	327647	Identifier	ml		327609	0					
ANR	327648	Identifier	map		327609	1					
ANR	327649	ConditionalExpression	idx == 0 ? map : NULL		327609	1					
ANR	327650	Condition	idx == 0		327609	0					
ANR	327651	EqualityExpression	idx == 0		327609	0		==			
ANR	327652	Identifier	idx		327609	0					
ANR	327653	PrimaryExpression	0		327609	1					
ANR	327654	Identifier	map		327609	1					
ANR	327655	Identifier	NULL		327609	2					
ANR	327656	ExpressionStatement	ml -> magic = map -> magic [ idx ]	378:1:11199:11226	327609	27	True				
ANR	327657	AssignmentExpression	ml -> magic = map -> magic [ idx ]		327609	0		=			
ANR	327658	PtrMemberAccess	ml -> magic		327609	0					
ANR	327659	Identifier	ml		327609	0					
ANR	327660	Identifier	magic		327609	1					
ANR	327661	ArrayIndexing	map -> magic [ idx ]		327609	1					
ANR	327662	PtrMemberAccess	map -> magic		327609	0					
ANR	327663	Identifier	map		327609	0					
ANR	327664	Identifier	magic		327609	1					
ANR	327665	Identifier	idx		327609	1					
ANR	327666	ExpressionStatement	ml -> nmagic = map -> nmagic [ idx ]	379:1:11229:11258	327609	28	True				
ANR	327667	AssignmentExpression	ml -> nmagic = map -> nmagic [ idx ]		327609	0		=			
ANR	327668	PtrMemberAccess	ml -> nmagic		327609	0					
ANR	327669	Identifier	ml		327609	0					
ANR	327670	Identifier	nmagic		327609	1					
ANR	327671	ArrayIndexing	map -> nmagic [ idx ]		327609	1					
ANR	327672	PtrMemberAccess	map -> nmagic		327609	0					
ANR	327673	Identifier	map		327609	0					
ANR	327674	Identifier	nmagic		327609	1					
ANR	327675	Identifier	idx		327609	1					
ANR	327676	ExpressionStatement	mlp -> prev -> next = ml	381:1:11262:11282	327609	29	True				
ANR	327677	AssignmentExpression	mlp -> prev -> next = ml		327609	0		=			
ANR	327678	PtrMemberAccess	mlp -> prev -> next		327609	0					
ANR	327679	PtrMemberAccess	mlp -> prev		327609	0					
ANR	327680	Identifier	mlp		327609	0					
ANR	327681	Identifier	prev		327609	1					
ANR	327682	Identifier	next		327609	1					
ANR	327683	Identifier	ml		327609	1					
ANR	327684	ExpressionStatement	ml -> prev = mlp -> prev	382:1:11285:11305	327609	30	True				
ANR	327685	AssignmentExpression	ml -> prev = mlp -> prev		327609	0		=			
ANR	327686	PtrMemberAccess	ml -> prev		327609	0					
ANR	327687	Identifier	ml		327609	0					
ANR	327688	Identifier	prev		327609	1					
ANR	327689	PtrMemberAccess	mlp -> prev		327609	1					
ANR	327690	Identifier	mlp		327609	0					
ANR	327691	Identifier	prev		327609	1					
ANR	327692	ExpressionStatement	ml -> next = mlp	383:1:11308:11322	327609	31	True				
ANR	327693	AssignmentExpression	ml -> next = mlp		327609	0		=			
ANR	327694	PtrMemberAccess	ml -> next		327609	0					
ANR	327695	Identifier	ml		327609	0					
ANR	327696	Identifier	next		327609	1					
ANR	327697	Identifier	mlp		327609	1					
ANR	327698	ExpressionStatement	mlp -> prev = ml	384:1:11325:11339	327609	32	True				
ANR	327699	AssignmentExpression	mlp -> prev = ml		327609	0		=			
ANR	327700	PtrMemberAccess	mlp -> prev		327609	0					
ANR	327701	Identifier	mlp		327609	0					
ANR	327702	Identifier	prev		327609	1					
ANR	327703	Identifier	ml		327609	1					
ANR	327704	ReturnStatement	return 0 ;	385:1:11342:11350	327609	33	True				
ANR	327705	PrimaryExpression	0		327609	0					
ANR	327706	ReturnType	int		327609	1					
ANR	327707	Identifier	add_mlist		327609	2					
ANR	327708	ParameterList	"struct mlist * mlp , struct magic_map * map , size_t idx"		327609	3					
ANR	327709	Parameter	struct mlist * mlp	370:10:11010:11026	327609	0	True				
ANR	327710	ParameterType	struct mlist *		327609	0					
ANR	327711	Identifier	mlp		327609	1					
ANR	327712	Parameter	struct magic_map * map	370:29:11029:11049	327609	1	True				
ANR	327713	ParameterType	struct magic_map *		327609	0					
ANR	327714	Identifier	map		327609	1					
ANR	327715	Parameter	size_t idx	370:52:11052:11061	327609	2	True				
ANR	327716	ParameterType	size_t		327609	0					
ANR	327717	Identifier	idx		327609	1					
ANR	327718	CFGEntryNode	ENTRY		327609		True				
ANR	327719	CFGExitNode	EXIT		327609		True				
ANR	327720	Symbol	NULL		327609						
ANR	327721	Symbol	ml -> map		327609						
ANR	327722	Symbol	* * mlp		327609						
ANR	327723	Symbol	ml -> next		327609						
ANR	327724	Symbol	* ml		327609						
ANR	327725	Symbol	* map -> magic		327609						
ANR	327726	Symbol	* map		327609						
ANR	327727	Symbol	ml -> prev		327609						
ANR	327728	Symbol	ml -> nmagic		327609						
ANR	327729	Symbol	mlp		327609						
ANR	327730	Symbol	* * map		327609						
ANR	327731	Symbol	ml -> magic		327609						
ANR	327732	Symbol	mlp -> prev -> next		327609						
ANR	327733	Symbol	map -> magic		327609						
ANR	327734	Symbol	* idx		327609						
ANR	327735	Symbol	map -> nmagic		327609						
ANR	327736	Symbol	* mlp		327609						
ANR	327737	Symbol	idx		327609						
ANR	327738	Symbol	* map -> nmagic		327609						
ANR	327739	Symbol	map		327609						
ANR	327740	Symbol	mlp -> prev		327609						
ANR	327741	Symbol	ml		327609						
ANR	327742	Symbol	* mlp -> prev		327609						
ANR	327743	Function	apprentice_1	391:8:11403:12516							
ANR	327744	FunctionDef	"apprentice_1 (struct magic_set * ms , const char * fn , int action)"		327743	0					
ANR	327745	CompoundStatement		393:0:11470:12516	327743	0					
ANR	327746	IdentifierDeclStatement	struct mlist * ml ;	394:1:11473:11489	327743	0	True				
ANR	327747	IdentifierDecl	* ml		327743	0					
ANR	327748	IdentifierDeclType	struct mlist *		327743	0					
ANR	327749	Identifier	ml		327743	1					
ANR	327750	IdentifierDeclStatement	struct magic_map * map ;	395:1:11492:11513	327743	1	True				
ANR	327751	IdentifierDecl	* map		327743	0					
ANR	327752	IdentifierDeclType	struct magic_map *		327743	0					
ANR	327753	Identifier	map		327743	1					
ANR	327754	IdentifierDeclStatement	size_t i ;	396:1:11516:11524	327743	2	True				
ANR	327755	IdentifierDecl	i		327743	0					
ANR	327756	IdentifierDeclType	size_t		327743	0					
ANR	327757	Identifier	i		327743	1					
ANR	327758	IfStatement	if ( magicsize != FILE_MAGICSIZE )		327743	3					
ANR	327759	Condition	magicsize != FILE_MAGICSIZE	398:5:11532:11558	327743	0	True				
ANR	327760	EqualityExpression	magicsize != FILE_MAGICSIZE		327743	0		!=			
ANR	327761	Identifier	magicsize		327743	0					
ANR	327762	Identifier	FILE_MAGICSIZE		327743	1					
ANR	327763	CompoundStatement		6:34:90:90	327743	1					
ANR	327764	ExpressionStatement	"file_error ( ms , 0 , ""magic element size %lu != %lu"" , ( unsigned long ) sizeof ( * map -> magic [ 0 ] ) , ( unsigned long ) FILE_MAGICSIZE )"	399:2:11565:11697	327743	0	True				
ANR	327765	CallExpression	"file_error ( ms , 0 , ""magic element size %lu != %lu"" , ( unsigned long ) sizeof ( * map -> magic [ 0 ] ) , ( unsigned long ) FILE_MAGICSIZE )"		327743	0					
ANR	327766	Callee	file_error		327743	0					
ANR	327767	Identifier	file_error		327743	0					
ANR	327768	ArgumentList	ms		327743	1					
ANR	327769	Argument	ms		327743	0					
ANR	327770	Identifier	ms		327743	0					
ANR	327771	Argument	0		327743	1					
ANR	327772	PrimaryExpression	0		327743	0					
ANR	327773	Argument	"""magic element size %lu != %lu"""		327743	2					
ANR	327774	PrimaryExpression	"""magic element size %lu != %lu"""		327743	0					
ANR	327775	Argument	( unsigned long ) sizeof ( * map -> magic [ 0 ] )		327743	3					
ANR	327776	CastExpression	( unsigned long ) sizeof ( * map -> magic [ 0 ] )		327743	0					
ANR	327777	CastTarget	unsigned long		327743	0					
ANR	327778	SizeofExpression	sizeof ( * map -> magic [ 0 ] )		327743	1					
ANR	327779	Sizeof	sizeof		327743	0					
ANR	327780	UnaryOperationExpression	* map -> magic [ 0 ]		327743	1					
ANR	327781	UnaryOperator	*		327743	0					
ANR	327782	ArrayIndexing	map -> magic [ 0 ]		327743	1					
ANR	327783	PtrMemberAccess	map -> magic		327743	0					
ANR	327784	Identifier	map		327743	0					
ANR	327785	Identifier	magic		327743	1					
ANR	327786	PrimaryExpression	0		327743	1					
ANR	327787	Argument	( unsigned long ) FILE_MAGICSIZE		327743	4					
ANR	327788	CastExpression	( unsigned long ) FILE_MAGICSIZE		327743	0					
ANR	327789	CastTarget	unsigned long		327743	0					
ANR	327790	Identifier	FILE_MAGICSIZE		327743	1					
ANR	327791	ReturnStatement	return - 1 ;	402:2:11701:11710	327743	1	True				
ANR	327792	UnaryOperationExpression	- 1		327743	0					
ANR	327793	UnaryOperator	-		327743	0					
ANR	327794	PrimaryExpression	1		327743	1					
ANR	327795	IfStatement	if ( action == FILE_COMPILE )		327743	4					
ANR	327796	Condition	action == FILE_COMPILE	405:5:11721:11742	327743	0	True				
ANR	327797	EqualityExpression	action == FILE_COMPILE		327743	0		==			
ANR	327798	Identifier	action		327743	0					
ANR	327799	Identifier	FILE_COMPILE		327743	1					
ANR	327800	CompoundStatement		13:29:274:274	327743	1					
ANR	327801	ExpressionStatement	"map = apprentice_load ( ms , fn , action )"	406:2:11749:11786	327743	0	True				
ANR	327802	AssignmentExpression	"map = apprentice_load ( ms , fn , action )"		327743	0		=			
ANR	327803	Identifier	map		327743	0					
ANR	327804	CallExpression	"apprentice_load ( ms , fn , action )"		327743	1					
ANR	327805	Callee	apprentice_load		327743	0					
ANR	327806	Identifier	apprentice_load		327743	0					
ANR	327807	ArgumentList	ms		327743	1					
ANR	327808	Argument	ms		327743	0					
ANR	327809	Identifier	ms		327743	0					
ANR	327810	Argument	fn		327743	1					
ANR	327811	Identifier	fn		327743	0					
ANR	327812	Argument	action		327743	2					
ANR	327813	Identifier	action		327743	0					
ANR	327814	IfStatement	if ( map == NULL )		327743	1					
ANR	327815	Condition	map == NULL	407:6:11794:11804	327743	0	True				
ANR	327816	EqualityExpression	map == NULL		327743	0		==			
ANR	327817	Identifier	map		327743	0					
ANR	327818	Identifier	NULL		327743	1					
ANR	327819	ReturnStatement	return - 1 ;	408:3:11810:11819	327743	1	True				
ANR	327820	UnaryOperationExpression	- 1		327743	0					
ANR	327821	UnaryOperator	-		327743	0					
ANR	327822	PrimaryExpression	1		327743	1					
ANR	327823	ReturnStatement	"return apprentice_compile ( ms , map , fn ) ;"	409:2:11823:11861	327743	2	True				
ANR	327824	CallExpression	"apprentice_compile ( ms , map , fn )"		327743	0					
ANR	327825	Callee	apprentice_compile		327743	0					
ANR	327826	Identifier	apprentice_compile		327743	0					
ANR	327827	ArgumentList	ms		327743	1					
ANR	327828	Argument	ms		327743	0					
ANR	327829	Identifier	ms		327743	0					
ANR	327830	Argument	map		327743	1					
ANR	327831	Identifier	map		327743	0					
ANR	327832	Argument	fn		327743	2					
ANR	327833	Identifier	fn		327743	0					
ANR	327834	ExpressionStatement	"map = apprentice_map ( ms , fn )"	412:1:11868:11896	327743	5	True				
ANR	327835	AssignmentExpression	"map = apprentice_map ( ms , fn )"		327743	0		=			
ANR	327836	Identifier	map		327743	0					
ANR	327837	CallExpression	"apprentice_map ( ms , fn )"		327743	1					
ANR	327838	Callee	apprentice_map		327743	0					
ANR	327839	Identifier	apprentice_map		327743	0					
ANR	327840	ArgumentList	ms		327743	1					
ANR	327841	Argument	ms		327743	0					
ANR	327842	Identifier	ms		327743	0					
ANR	327843	Argument	fn		327743	1					
ANR	327844	Identifier	fn		327743	0					
ANR	327845	IfStatement	if ( map == NULL )		327743	6					
ANR	327846	Condition	map == NULL	413:5:11903:11913	327743	0	True				
ANR	327847	EqualityExpression	map == NULL		327743	0		==			
ANR	327848	Identifier	map		327743	0					
ANR	327849	Identifier	NULL		327743	1					
ANR	327850	CompoundStatement		21:18:445:445	327743	1					
ANR	327851	IfStatement	if ( fn )		327743	0					
ANR	327852	Condition	fn	414:6:11924:11925	327743	0	True				
ANR	327853	Identifier	fn		327743	0					
ANR	327854	CompoundStatement		22:10:457:457	327743	1					
ANR	327855	IfStatement	if ( ms -> flags & MAGIC_CHECK )		327743	0					
ANR	327856	Condition	ms -> flags & MAGIC_CHECK	415:7:11937:11959	327743	0	True				
ANR	327857	BitAndExpression	ms -> flags & MAGIC_CHECK		327743	0		&			
ANR	327858	PtrMemberAccess	ms -> flags		327743	0					
ANR	327859	Identifier	ms		327743	0					
ANR	327860	Identifier	flags		327743	1					
ANR	327861	Identifier	MAGIC_CHECK		327743	1					
ANR	327862	ExpressionStatement	"file_magwarn ( ms , ""using regular magic file `%s'"" , fn )"	416:4:11966:12019	327743	1	True				
ANR	327863	CallExpression	"file_magwarn ( ms , ""using regular magic file `%s'"" , fn )"		327743	0					
ANR	327864	Callee	file_magwarn		327743	0					
ANR	327865	Identifier	file_magwarn		327743	0					
ANR	327866	ArgumentList	ms		327743	1					
ANR	327867	Argument	ms		327743	0					
ANR	327868	Identifier	ms		327743	0					
ANR	327869	Argument	"""using regular magic file `%s'"""		327743	1					
ANR	327870	PrimaryExpression	"""using regular magic file `%s'"""		327743	0					
ANR	327871	Argument	fn		327743	2					
ANR	327872	Identifier	fn		327743	0					
ANR	327873	ExpressionStatement	"map = apprentice_load ( ms , fn , action )"	417:3:12024:12061	327743	1	True				
ANR	327874	AssignmentExpression	"map = apprentice_load ( ms , fn , action )"		327743	0		=			
ANR	327875	Identifier	map		327743	0					
ANR	327876	CallExpression	"apprentice_load ( ms , fn , action )"		327743	1					
ANR	327877	Callee	apprentice_load		327743	0					
ANR	327878	Identifier	apprentice_load		327743	0					
ANR	327879	ArgumentList	ms		327743	1					
ANR	327880	Argument	ms		327743	0					
ANR	327881	Identifier	ms		327743	0					
ANR	327882	Argument	fn		327743	1					
ANR	327883	Identifier	fn		327743	0					
ANR	327884	Argument	action		327743	2					
ANR	327885	Identifier	action		327743	0					
ANR	327886	IfStatement	if ( map == NULL )		327743	1					
ANR	327887	Condition	map == NULL	419:6:12073:12083	327743	0	True				
ANR	327888	EqualityExpression	map == NULL		327743	0		==			
ANR	327889	Identifier	map		327743	0					
ANR	327890	Identifier	NULL		327743	1					
ANR	327891	ReturnStatement	return - 1 ;	420:3:12089:12098	327743	1	True				
ANR	327892	UnaryOperationExpression	- 1		327743	0					
ANR	327893	UnaryOperator	-		327743	0					
ANR	327894	PrimaryExpression	1		327743	1					
ANR	327895	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		327743	7					
ANR	327896	ForInit	i = 0 ;	423:6:12110:12115	327743	0	True				
ANR	327897	AssignmentExpression	i = 0		327743	0		=			
ANR	327898	Identifier	i		327743	0					
ANR	327899	PrimaryExpression	0		327743	1					
ANR	327900	Condition	i < MAGIC_SETS	423:13:12117:12130	327743	1	True				
ANR	327901	RelationalExpression	i < MAGIC_SETS		327743	0		<			
ANR	327902	Identifier	i		327743	0					
ANR	327903	Identifier	MAGIC_SETS		327743	1					
ANR	327904	PostIncDecOperationExpression	i ++	423:29:12133:12135	327743	2	True				
ANR	327905	Identifier	i		327743	0					
ANR	327906	IncDec	++		327743	1					
ANR	327907	CompoundStatement		31:34:667:667	327743	3					
ANR	327908	IfStatement	"if ( add_mlist ( ms -> mlist [ i ] , map , i ) == - 1 )"		327743	0					
ANR	327909	Condition	"add_mlist ( ms -> mlist [ i ] , map , i ) == - 1"	424:6:12146:12182	327743	0	True				
ANR	327910	EqualityExpression	"add_mlist ( ms -> mlist [ i ] , map , i ) == - 1"		327743	0		==			
ANR	327911	CallExpression	"add_mlist ( ms -> mlist [ i ] , map , i )"		327743	0					
ANR	327912	Callee	add_mlist		327743	0					
ANR	327913	Identifier	add_mlist		327743	0					
ANR	327914	ArgumentList	ms -> mlist [ i ]		327743	1					
ANR	327915	Argument	ms -> mlist [ i ]		327743	0					
ANR	327916	ArrayIndexing	ms -> mlist [ i ]		327743	0					
ANR	327917	PtrMemberAccess	ms -> mlist		327743	0					
ANR	327918	Identifier	ms		327743	0					
ANR	327919	Identifier	mlist		327743	1					
ANR	327920	Identifier	i		327743	1					
ANR	327921	Argument	map		327743	1					
ANR	327922	Identifier	map		327743	0					
ANR	327923	Argument	i		327743	2					
ANR	327924	Identifier	i		327743	0					
ANR	327925	UnaryOperationExpression	- 1		327743	1					
ANR	327926	UnaryOperator	-		327743	0					
ANR	327927	PrimaryExpression	1		327743	1					
ANR	327928	CompoundStatement		32:45:714:714	327743	1					
ANR	327929	ExpressionStatement	"file_oomem ( ms , sizeof ( * ml ) )"	425:3:12190:12217	327743	0	True				
ANR	327930	CallExpression	"file_oomem ( ms , sizeof ( * ml ) )"		327743	0					
ANR	327931	Callee	file_oomem		327743	0					
ANR	327932	Identifier	file_oomem		327743	0					
ANR	327933	ArgumentList	ms		327743	1					
ANR	327934	Argument	ms		327743	0					
ANR	327935	Identifier	ms		327743	0					
ANR	327936	Argument	sizeof ( * ml )		327743	1					
ANR	327937	SizeofExpression	sizeof ( * ml )		327743	0					
ANR	327938	Sizeof	sizeof		327743	0					
ANR	327939	UnaryOperationExpression	* ml		327743	1					
ANR	327940	UnaryOperator	*		327743	0					
ANR	327941	Identifier	ml		327743	1					
ANR	327942	ExpressionStatement	apprentice_unmap ( map )	426:3:12222:12243	327743	1	True				
ANR	327943	CallExpression	apprentice_unmap ( map )		327743	0					
ANR	327944	Callee	apprentice_unmap		327743	0					
ANR	327945	Identifier	apprentice_unmap		327743	0					
ANR	327946	ArgumentList	map		327743	1					
ANR	327947	Argument	map		327743	0					
ANR	327948	Identifier	map		327743	0					
ANR	327949	ReturnStatement	return - 1 ;	427:3:12248:12257	327743	2	True				
ANR	327950	UnaryOperationExpression	- 1		327743	0					
ANR	327951	UnaryOperator	-		327743	0					
ANR	327952	PrimaryExpression	1		327743	1					
ANR	327953	IfStatement	if ( action == FILE_LIST )		327743	8					
ANR	327954	Condition	action == FILE_LIST	431:5:12272:12290	327743	0	True				
ANR	327955	EqualityExpression	action == FILE_LIST		327743	0		==			
ANR	327956	Identifier	action		327743	0					
ANR	327957	Identifier	FILE_LIST		327743	1					
ANR	327958	CompoundStatement		39:26:822:822	327743	1					
ANR	327959	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		327743	0					
ANR	327960	ForInit	i = 0 ;	432:7:12302:12307	327743	0	True				
ANR	327961	AssignmentExpression	i = 0		327743	0		=			
ANR	327962	Identifier	i		327743	0					
ANR	327963	PrimaryExpression	0		327743	1					
ANR	327964	Condition	i < MAGIC_SETS	432:14:12309:12322	327743	1	True				
ANR	327965	RelationalExpression	i < MAGIC_SETS		327743	0		<			
ANR	327966	Identifier	i		327743	0					
ANR	327967	Identifier	MAGIC_SETS		327743	1					
ANR	327968	PostIncDecOperationExpression	i ++	432:30:12325:12327	327743	2	True				
ANR	327969	Identifier	i		327743	0					
ANR	327970	IncDec	++		327743	1					
ANR	327971	CompoundStatement		40:35:859:859	327743	3					
ANR	327972	ExpressionStatement	"printf ( ""Set %zu:\\nBinary patterns:\\n"" , i )"	433:3:12335:12376	327743	0	True				
ANR	327973	CallExpression	"printf ( ""Set %zu:\\nBinary patterns:\\n"" , i )"		327743	0					
ANR	327974	Callee	printf		327743	0					
ANR	327975	Identifier	printf		327743	0					
ANR	327976	ArgumentList	"""Set %zu:\\nBinary patterns:\\n"""		327743	1					
ANR	327977	Argument	"""Set %zu:\\nBinary patterns:\\n"""		327743	0					
ANR	327978	PrimaryExpression	"""Set %zu:\\nBinary patterns:\\n"""		327743	0					
ANR	327979	Argument	i		327743	1					
ANR	327980	Identifier	i		327743	0					
ANR	327981	ExpressionStatement	"apprentice_list ( ms -> mlist [ i ] , BINTEST )"	434:3:12381:12419	327743	1	True				
ANR	327982	CallExpression	"apprentice_list ( ms -> mlist [ i ] , BINTEST )"		327743	0					
ANR	327983	Callee	apprentice_list		327743	0					
ANR	327984	Identifier	apprentice_list		327743	0					
ANR	327985	ArgumentList	ms -> mlist [ i ]		327743	1					
ANR	327986	Argument	ms -> mlist [ i ]		327743	0					
ANR	327987	ArrayIndexing	ms -> mlist [ i ]		327743	0					
ANR	327988	PtrMemberAccess	ms -> mlist		327743	0					
ANR	327989	Identifier	ms		327743	0					
ANR	327990	Identifier	mlist		327743	1					
ANR	327991	Identifier	i		327743	1					
ANR	327992	Argument	BINTEST		327743	1					
ANR	327993	Identifier	BINTEST		327743	0					
ANR	327994	ExpressionStatement	"printf ( ""Text patterns:\\n"" )"	435:3:12424:12450	327743	2	True				
ANR	327995	CallExpression	"printf ( ""Text patterns:\\n"" )"		327743	0					
ANR	327996	Callee	printf		327743	0					
ANR	327997	Identifier	printf		327743	0					
ANR	327998	ArgumentList	"""Text patterns:\\n"""		327743	1					
ANR	327999	Argument	"""Text patterns:\\n"""		327743	0					
ANR	328000	PrimaryExpression	"""Text patterns:\\n"""		327743	0					
ANR	328001	ExpressionStatement	"apprentice_list ( ms -> mlist [ i ] , TEXTTEST )"	436:3:12455:12494	327743	3	True				
ANR	328002	CallExpression	"apprentice_list ( ms -> mlist [ i ] , TEXTTEST )"		327743	0					
ANR	328003	Callee	apprentice_list		327743	0					
ANR	328004	Identifier	apprentice_list		327743	0					
ANR	328005	ArgumentList	ms -> mlist [ i ]		327743	1					
ANR	328006	Argument	ms -> mlist [ i ]		327743	0					
ANR	328007	ArrayIndexing	ms -> mlist [ i ]		327743	0					
ANR	328008	PtrMemberAccess	ms -> mlist		327743	0					
ANR	328009	Identifier	ms		327743	0					
ANR	328010	Identifier	mlist		327743	1					
ANR	328011	Identifier	i		327743	1					
ANR	328012	Argument	TEXTTEST		327743	1					
ANR	328013	Identifier	TEXTTEST		327743	0					
ANR	328014	ReturnStatement	return 0 ;	440:1:12506:12514	327743	9	True				
ANR	328015	PrimaryExpression	0		327743	0					
ANR	328016	ReturnType	int		327743	1					
ANR	328017	Identifier	apprentice_1		327743	2					
ANR	328018	ParameterList	"struct magic_set * ms , const char * fn , int action"		327743	3					
ANR	328019	Parameter	struct magic_set * ms	392:13:11420:11439	327743	0	True				
ANR	328020	ParameterType	struct magic_set *		327743	0					
ANR	328021	Identifier	ms		327743	1					
ANR	328022	Parameter	const char * fn	392:35:11442:11455	327743	1	True				
ANR	328023	ParameterType	const char *		327743	0					
ANR	328024	Identifier	fn		327743	1					
ANR	328025	Parameter	int action	392:51:11458:11467	327743	2	True				
ANR	328026	ParameterType	int		327743	0					
ANR	328027	Identifier	action		327743	1					
ANR	328028	CFGEntryNode	ENTRY		327743		True				
ANR	328029	CFGExitNode	EXIT		327743		True				
ANR	328030	Symbol	magicsize		327743						
ANR	328031	Symbol	MAGIC_SETS		327743						
ANR	328032	Symbol	* map		327743						
ANR	328033	Symbol	ms -> mlist		327743						
ANR	328034	Symbol	* ml		327743						
ANR	328035	Symbol	fn		327743						
ANR	328036	Symbol	* map -> magic [ 0 ]		327743						
ANR	328037	Symbol	add_mlist		327743						
ANR	328038	Symbol	* ms		327743						
ANR	328039	Symbol	* * ms		327743						
ANR	328040	Symbol	* * map -> magic		327743						
ANR	328041	Symbol	map -> magic		327743						
ANR	328042	Symbol	action		327743						
ANR	328043	Symbol	* * * map		327743						
ANR	328044	Symbol	FILE_COMPILE		327743						
ANR	328045	Symbol	map		327743						
ANR	328046	Symbol	TEXTTEST		327743						
ANR	328047	Symbol	ml		327743						
ANR	328048	Symbol	FILE_MAGICSIZE		327743						
ANR	328049	Symbol	NULL		327743						
ANR	328050	Symbol	FILE_LIST		327743						
ANR	328051	Symbol	apprentice_load		327743						
ANR	328052	Symbol	* ms -> mlist		327743						
ANR	328053	Symbol	ms		327743						
ANR	328054	Symbol	* map -> magic		327743						
ANR	328055	Symbol	BINTEST		327743						
ANR	328056	Symbol	i		327743						
ANR	328057	Symbol	* * map		327743						
ANR	328058	Symbol	apprentice_compile		327743						
ANR	328059	Symbol	* i		327743						
ANR	328060	Symbol	MAGIC_CHECK		327743						
ANR	328061	Symbol	ms -> flags		327743						
ANR	328062	Symbol	apprentice_map		327743						
ANR	328063	Function	file_ms_free	443:10:12529:12806							
ANR	328064	FunctionDef	file_ms_free (struct magic_set * ms)		328063	0					
ANR	328065	CompoundStatement		445:0:12569:12806	328063	0					
ANR	328066	IdentifierDeclStatement	size_t i ;	446:1:12572:12580	328063	0	True				
ANR	328067	IdentifierDecl	i		328063	0					
ANR	328068	IdentifierDeclType	size_t		328063	0					
ANR	328069	Identifier	i		328063	1					
ANR	328070	IfStatement	if ( ms == NULL )		328063	1					
ANR	328071	Condition	ms == NULL	447:5:12587:12596	328063	0	True				
ANR	328072	EqualityExpression	ms == NULL		328063	0		==			
ANR	328073	Identifier	ms		328063	0					
ANR	328074	Identifier	NULL		328063	1					
ANR	328075	ReturnStatement	return ;	448:2:12601:12607	328063	1	True				
ANR	328076	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		328063	2					
ANR	328077	ForInit	i = 0 ;	449:6:12615:12620	328063	0	True				
ANR	328078	AssignmentExpression	i = 0		328063	0		=			
ANR	328079	Identifier	i		328063	0					
ANR	328080	PrimaryExpression	0		328063	1					
ANR	328081	Condition	i < MAGIC_SETS	449:13:12622:12635	328063	1	True				
ANR	328082	RelationalExpression	i < MAGIC_SETS		328063	0		<			
ANR	328083	Identifier	i		328063	0					
ANR	328084	Identifier	MAGIC_SETS		328063	1					
ANR	328085	PostIncDecOperationExpression	i ++	449:29:12638:12640	328063	2	True				
ANR	328086	Identifier	i		328063	0					
ANR	328087	IncDec	++		328063	1					
ANR	328088	ExpressionStatement	mlist_free ( ms -> mlist [ i ] )	450:2:12645:12669	328063	3	True				
ANR	328089	CallExpression	mlist_free ( ms -> mlist [ i ] )		328063	0					
ANR	328090	Callee	mlist_free		328063	0					
ANR	328091	Identifier	mlist_free		328063	0					
ANR	328092	ArgumentList	ms -> mlist [ i ]		328063	1					
ANR	328093	Argument	ms -> mlist [ i ]		328063	0					
ANR	328094	ArrayIndexing	ms -> mlist [ i ]		328063	0					
ANR	328095	PtrMemberAccess	ms -> mlist		328063	0					
ANR	328096	Identifier	ms		328063	0					
ANR	328097	Identifier	mlist		328063	1					
ANR	328098	Identifier	i		328063	1					
ANR	328099	IfStatement	if ( ms -> o . pbuf )		328063	3					
ANR	328100	Condition	ms -> o . pbuf	451:5:12676:12685	328063	0	True				
ANR	328101	MemberAccess	ms -> o . pbuf		328063	0					
ANR	328102	PtrMemberAccess	ms -> o		328063	0					
ANR	328103	Identifier	ms		328063	0					
ANR	328104	Identifier	o		328063	1					
ANR	328105	Identifier	pbuf		328063	1					
ANR	328106	CompoundStatement		7:17:118:118	328063	1					
ANR	328107	ExpressionStatement	efree ( ms -> o . pbuf )	452:2:12692:12709	328063	0	True				
ANR	328108	CallExpression	efree ( ms -> o . pbuf )		328063	0					
ANR	328109	Callee	efree		328063	0					
ANR	328110	Identifier	efree		328063	0					
ANR	328111	ArgumentList	ms -> o . pbuf		328063	1					
ANR	328112	Argument	ms -> o . pbuf		328063	0					
ANR	328113	MemberAccess	ms -> o . pbuf		328063	0					
ANR	328114	PtrMemberAccess	ms -> o		328063	0					
ANR	328115	Identifier	ms		328063	0					
ANR	328116	Identifier	o		328063	1					
ANR	328117	Identifier	pbuf		328063	1					
ANR	328118	IfStatement	if ( ms -> o . buf )		328063	4					
ANR	328119	Condition	ms -> o . buf	454:5:12719:12727	328063	0	True				
ANR	328120	MemberAccess	ms -> o . buf		328063	0					
ANR	328121	PtrMemberAccess	ms -> o		328063	0					
ANR	328122	Identifier	ms		328063	0					
ANR	328123	Identifier	o		328063	1					
ANR	328124	Identifier	buf		328063	1					
ANR	328125	CompoundStatement		10:16:160:160	328063	1					
ANR	328126	ExpressionStatement	efree ( ms -> o . buf )	455:2:12734:12750	328063	0	True				
ANR	328127	CallExpression	efree ( ms -> o . buf )		328063	0					
ANR	328128	Callee	efree		328063	0					
ANR	328129	Identifier	efree		328063	0					
ANR	328130	ArgumentList	ms -> o . buf		328063	1					
ANR	328131	Argument	ms -> o . buf		328063	0					
ANR	328132	MemberAccess	ms -> o . buf		328063	0					
ANR	328133	PtrMemberAccess	ms -> o		328063	0					
ANR	328134	Identifier	ms		328063	0					
ANR	328135	Identifier	o		328063	1					
ANR	328136	Identifier	buf		328063	1					
ANR	328137	IfStatement	if ( ms -> c . li )		328063	5					
ANR	328138	Condition	ms -> c . li	457:5:12760:12767	328063	0	True				
ANR	328139	MemberAccess	ms -> c . li		328063	0					
ANR	328140	PtrMemberAccess	ms -> c		328063	0					
ANR	328141	Identifier	ms		328063	0					
ANR	328142	Identifier	c		328063	1					
ANR	328143	Identifier	li		328063	1					
ANR	328144	CompoundStatement		13:15:200:200	328063	1					
ANR	328145	ExpressionStatement	efree ( ms -> c . li )	458:2:12774:12789	328063	0	True				
ANR	328146	CallExpression	efree ( ms -> c . li )		328063	0					
ANR	328147	Callee	efree		328063	0					
ANR	328148	Identifier	efree		328063	0					
ANR	328149	ArgumentList	ms -> c . li		328063	1					
ANR	328150	Argument	ms -> c . li		328063	0					
ANR	328151	MemberAccess	ms -> c . li		328063	0					
ANR	328152	PtrMemberAccess	ms -> c		328063	0					
ANR	328153	Identifier	ms		328063	0					
ANR	328154	Identifier	c		328063	1					
ANR	328155	Identifier	li		328063	1					
ANR	328156	ExpressionStatement	efree ( ms )	460:1:12795:12804	328063	6	True				
ANR	328157	CallExpression	efree ( ms )		328063	0					
ANR	328158	Callee	efree		328063	0					
ANR	328159	Identifier	efree		328063	0					
ANR	328160	ArgumentList	ms		328063	1					
ANR	328161	Argument	ms		328063	0					
ANR	328162	Identifier	ms		328063	0					
ANR	328163	ReturnType	void		328063	1					
ANR	328164	Identifier	file_ms_free		328063	2					
ANR	328165	ParameterList	struct magic_set * ms		328063	3					
ANR	328166	Parameter	struct magic_set * ms	444:13:12547:12566	328063	0	True				
ANR	328167	ParameterType	struct magic_set *		328063	0					
ANR	328168	Identifier	ms		328063	1					
ANR	328169	CFGEntryNode	ENTRY		328063		True				
ANR	328170	CFGExitNode	EXIT		328063		True				
ANR	328171	Symbol	NULL		328063						
ANR	328172	Symbol	MAGIC_SETS		328063						
ANR	328173	Symbol	* ms -> mlist		328063						
ANR	328174	Symbol	ms		328063						
ANR	328175	Symbol	ms -> mlist		328063						
ANR	328176	Symbol	ms -> o		328063						
ANR	328177	Symbol	i		328063						
ANR	328178	Symbol	ms -> c . li		328063						
ANR	328179	Symbol	ms -> o . buf		328063						
ANR	328180	Symbol	* ms		328063						
ANR	328181	Symbol	* * ms		328063						
ANR	328182	Symbol	ms -> o . pbuf		328063						
ANR	328183	Symbol	ms -> c		328063						
ANR	328184	Symbol	* i		328063						
ANR	328185	Function	file_ms_alloc	463:10:12819:13430							
ANR	328186	FunctionDef	file_ms_alloc (int flags)		328185	0					
ANR	328187	CompoundStatement		465:0:12863:13430	328185	0					
ANR	328188	IdentifierDeclStatement	struct magic_set * ms ;	466:1:12866:12886	328185	0	True				
ANR	328189	IdentifierDecl	* ms		328185	0					
ANR	328190	IdentifierDeclType	struct magic_set *		328185	0					
ANR	328191	Identifier	ms		328185	1					
ANR	328192	IdentifierDeclStatement	"size_t i , len ;"	467:1:12889:12902	328185	1	True				
ANR	328193	IdentifierDecl	i		328185	0					
ANR	328194	IdentifierDeclType	size_t		328185	0					
ANR	328195	Identifier	i		328185	1					
ANR	328196	IdentifierDecl	len		328185	1					
ANR	328197	IdentifierDeclType	size_t		328185	0					
ANR	328198	Identifier	len		328185	1					
ANR	328199	Statement	if	469:1:12906:12907	328185	2	True				
ANR	328200	Statement	(	469:4:12909:12909	328185	3	True				
ANR	328201	Statement	(	469:5:12910:12910	328185	4	True				
ANR	328202	Statement	ms	469:6:12911:12912	328185	5	True				
ANR	328203	Statement	=	469:9:12914:12914	328185	6	True				
ANR	328204	Statement	CAST	469:11:12916:12919	328185	7	True				
ANR	328205	Statement	(	469:15:12920:12920	328185	8	True				
ANR	328206	Statement	struct	469:16:12921:12926	328185	9	True				
ANR	328207	Statement	magic_set	469:23:12928:12936	328185	10	True				
ANR	328208	Statement	*	469:33:12938:12938	328185	11	True				
ANR	328209	Statement	","	469:34:12939:12939	328185	12	True				
ANR	328210	Statement	ecalloc	469:36:12941:12947	328185	13	True				
ANR	328211	Statement	(	469:43:12948:12948	328185	14	True				
ANR	328212	Statement	(	469:44:12949:12949	328185	15	True				
ANR	328213	Statement	size_t	469:45:12950:12955	328185	16	True				
ANR	328214	Statement	)	469:51:12956:12956	328185	17	True				
ANR	328215	Statement	1	469:52:12957:12957	328185	18	True				
ANR	328216	Statement	","	469:53:12958:12958	328185	19	True				
ANR	328217	Statement	sizeof	470:5:12965:12970	328185	20	True				
ANR	328218	Statement	(	470:11:12971:12971	328185	21	True				
ANR	328219	Statement	struct	470:12:12972:12977	328185	22	True				
ANR	328220	Statement	magic_set	470:19:12979:12987	328185	23	True				
ANR	328221	Statement	)	470:28:12988:12988	328185	24	True				
ANR	328222	Statement	)	470:29:12989:12989	328185	25	True				
ANR	328223	Statement	)	470:30:12990:12990	328185	26	True				
ANR	328224	Statement	)	470:31:12991:12991	328185	27	True				
ANR	328225	Statement	==	470:33:12993:12994	328185	28	True				
ANR	328226	Statement	NULL	470:36:12996:12999	328185	29	True				
ANR	328227	Statement	)	470:40:13000:13000	328185	30	True				
ANR	328228	ReturnStatement	return NULL ;	471:2:13004:13015	328185	31	True				
ANR	328229	Identifier	NULL		328185	0					
ANR	328230	IfStatement	"if ( magic_setflags ( ms , flags ) == - 1 )"		328185	32					
ANR	328231	Condition	"magic_setflags ( ms , flags ) == - 1"	473:5:13023:13053	328185	0	True				
ANR	328232	EqualityExpression	"magic_setflags ( ms , flags ) == - 1"		328185	0		==			
ANR	328233	CallExpression	"magic_setflags ( ms , flags )"		328185	0					
ANR	328234	Callee	magic_setflags		328185	0					
ANR	328235	Identifier	magic_setflags		328185	0					
ANR	328236	ArgumentList	ms		328185	1					
ANR	328237	Argument	ms		328185	0					
ANR	328238	Identifier	ms		328185	0					
ANR	328239	Argument	flags		328185	1					
ANR	328240	Identifier	flags		328185	0					
ANR	328241	UnaryOperationExpression	- 1		328185	1					
ANR	328242	UnaryOperator	-		328185	0					
ANR	328243	PrimaryExpression	1		328185	1					
ANR	328244	CompoundStatement		9:38:192:192	328185	1					
ANR	328245	ExpressionStatement	errno = EINVAL	474:2:13060:13074	328185	0	True				
ANR	328246	AssignmentExpression	errno = EINVAL		328185	0		=			
ANR	328247	Identifier	errno		328185	0					
ANR	328248	Identifier	EINVAL		328185	1					
ANR	328249	GotoStatement	goto free ;	475:2:13078:13087	328185	1	True				
ANR	328250	Identifier	free		328185	0					
ANR	328251	ExpressionStatement	ms -> o . buf = ms -> o . pbuf = NULL	478:1:13094:13123	328185	33	True				
ANR	328252	AssignmentExpression	ms -> o . buf = ms -> o . pbuf = NULL		328185	0		=			
ANR	328253	MemberAccess	ms -> o . buf		328185	0					
ANR	328254	PtrMemberAccess	ms -> o		328185	0					
ANR	328255	Identifier	ms		328185	0					
ANR	328256	Identifier	o		328185	1					
ANR	328257	Identifier	buf		328185	1					
ANR	328258	AssignmentExpression	ms -> o . pbuf = NULL		328185	1		=			
ANR	328259	MemberAccess	ms -> o . pbuf		328185	0					
ANR	328260	PtrMemberAccess	ms -> o		328185	0					
ANR	328261	Identifier	ms		328185	0					
ANR	328262	Identifier	o		328185	1					
ANR	328263	Identifier	pbuf		328185	1					
ANR	328264	Identifier	NULL		328185	1					
ANR	328265	ExpressionStatement	len = ( ms -> c . len = 10 ) * sizeof ( * ms -> c . li )	479:1:13126:13168	328185	34	True				
ANR	328266	AssignmentExpression	len = ( ms -> c . len = 10 ) * sizeof ( * ms -> c . li )		328185	0		=			
ANR	328267	Identifier	len		328185	0					
ANR	328268	MultiplicativeExpression	( ms -> c . len = 10 ) * sizeof ( * ms -> c . li )		328185	1		*			
ANR	328269	AssignmentExpression	ms -> c . len = 10		328185	0		=			
ANR	328270	MemberAccess	ms -> c . len		328185	0					
ANR	328271	PtrMemberAccess	ms -> c		328185	0					
ANR	328272	Identifier	ms		328185	0					
ANR	328273	Identifier	c		328185	1					
ANR	328274	Identifier	len		328185	1					
ANR	328275	PrimaryExpression	10		328185	1					
ANR	328276	SizeofExpression	sizeof ( * ms -> c . li )		328185	1					
ANR	328277	Sizeof	sizeof		328185	0					
ANR	328278	UnaryOperationExpression	* ms -> c . li		328185	1					
ANR	328279	UnaryOperator	*		328185	0					
ANR	328280	MemberAccess	ms -> c . li		328185	1					
ANR	328281	PtrMemberAccess	ms -> c		328185	0					
ANR	328282	Identifier	ms		328185	0					
ANR	328283	Identifier	c		328185	1					
ANR	328284	Identifier	li		328185	1					
ANR	328285	Statement	if	481:1:13172:13173	328185	35	True				
ANR	328286	Statement	(	481:4:13175:13175	328185	36	True				
ANR	328287	Statement	(	481:5:13176:13176	328185	37	True				
ANR	328288	Statement	ms	481:6:13177:13178	328185	38	True				
ANR	328289	Statement	->	481:8:13179:13180	328185	39	True				
ANR	328290	Statement	c	481:10:13181:13181	328185	40	True				
ANR	328291	Statement	.	481:11:13182:13182	328185	41	True				
ANR	328292	Statement	li	481:12:13183:13184	328185	42	True				
ANR	328293	Statement	=	481:15:13186:13186	328185	43	True				
ANR	328294	Statement	CAST	481:17:13188:13191	328185	44	True				
ANR	328295	Statement	(	481:21:13192:13192	328185	45	True				
ANR	328296	Statement	struct	481:22:13193:13198	328185	46	True				
ANR	328297	Statement	level_info	481:29:13200:13209	328185	47	True				
ANR	328298	Statement	*	481:40:13211:13211	328185	48	True				
ANR	328299	Statement	","	481:41:13212:13212	328185	49	True				
ANR	328300	Statement	emalloc	481:43:13214:13220	328185	50	True				
ANR	328301	Statement	(	481:50:13221:13221	328185	51	True				
ANR	328302	Statement	len	481:51:13222:13224	328185	52	True				
ANR	328303	Statement	)	481:54:13225:13225	328185	53	True				
ANR	328304	Statement	)	481:55:13226:13226	328185	54	True				
ANR	328305	Statement	)	481:56:13227:13227	328185	55	True				
ANR	328306	Statement	==	481:58:13229:13230	328185	56	True				
ANR	328307	Statement	NULL	481:61:13232:13235	328185	57	True				
ANR	328308	Statement	)	481:65:13236:13236	328185	58	True				
ANR	328309	GotoStatement	goto free ;	482:2:13240:13249	328185	59	True				
ANR	328310	Identifier	free		328185	0					
ANR	328311	ExpressionStatement	ms -> event_flags = 0	484:1:13253:13272	328185	60	True				
ANR	328312	AssignmentExpression	ms -> event_flags = 0		328185	0		=			
ANR	328313	PtrMemberAccess	ms -> event_flags		328185	0					
ANR	328314	Identifier	ms		328185	0					
ANR	328315	Identifier	event_flags		328185	1					
ANR	328316	PrimaryExpression	0		328185	1					
ANR	328317	ExpressionStatement	ms -> error = - 1	485:1:13275:13289	328185	61	True				
ANR	328318	AssignmentExpression	ms -> error = - 1		328185	0		=			
ANR	328319	PtrMemberAccess	ms -> error		328185	0					
ANR	328320	Identifier	ms		328185	0					
ANR	328321	Identifier	error		328185	1					
ANR	328322	UnaryOperationExpression	- 1		328185	1					
ANR	328323	UnaryOperator	-		328185	0					
ANR	328324	PrimaryExpression	1		328185	1					
ANR	328325	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		328185	62					
ANR	328326	ForInit	i = 0 ;	486:6:13297:13302	328185	0	True				
ANR	328327	AssignmentExpression	i = 0		328185	0		=			
ANR	328328	Identifier	i		328185	0					
ANR	328329	PrimaryExpression	0		328185	1					
ANR	328330	Condition	i < MAGIC_SETS	486:13:13304:13317	328185	1	True				
ANR	328331	RelationalExpression	i < MAGIC_SETS		328185	0		<			
ANR	328332	Identifier	i		328185	0					
ANR	328333	Identifier	MAGIC_SETS		328185	1					
ANR	328334	PostIncDecOperationExpression	i ++	486:29:13320:13322	328185	2	True				
ANR	328335	Identifier	i		328185	0					
ANR	328336	IncDec	++		328185	1					
ANR	328337	ExpressionStatement	ms -> mlist [ i ] = NULL	487:2:13327:13346	328185	3	True				
ANR	328338	AssignmentExpression	ms -> mlist [ i ] = NULL		328185	0		=			
ANR	328339	ArrayIndexing	ms -> mlist [ i ]		328185	0					
ANR	328340	PtrMemberAccess	ms -> mlist		328185	0					
ANR	328341	Identifier	ms		328185	0					
ANR	328342	Identifier	mlist		328185	1					
ANR	328343	Identifier	i		328185	1					
ANR	328344	Identifier	NULL		328185	1					
ANR	328345	ExpressionStatement	"ms -> file = ""unknown"""	488:1:13349:13369	328185	63	True				
ANR	328346	AssignmentExpression	"ms -> file = ""unknown"""		328185	0		=			
ANR	328347	PtrMemberAccess	ms -> file		328185	0					
ANR	328348	Identifier	ms		328185	0					
ANR	328349	Identifier	file		328185	1					
ANR	328350	PrimaryExpression	"""unknown"""		328185	1					
ANR	328351	ExpressionStatement	ms -> line = 0	489:1:13372:13384	328185	64	True				
ANR	328352	AssignmentExpression	ms -> line = 0		328185	0		=			
ANR	328353	PtrMemberAccess	ms -> line		328185	0					
ANR	328354	Identifier	ms		328185	0					
ANR	328355	Identifier	line		328185	1					
ANR	328356	PrimaryExpression	0		328185	1					
ANR	328357	ReturnStatement	return ms ;	490:1:13387:13396	328185	65	True				
ANR	328358	Identifier	ms		328185	0					
ANR	328359	Label	free :	491:0:13398:13402	328185	66	True				
ANR	328360	Identifier	free		328185	0					
ANR	328361	ExpressionStatement	efree ( ms )	492:1:13405:13414	328185	67	True				
ANR	328362	CallExpression	efree ( ms )		328185	0					
ANR	328363	Callee	efree		328185	0					
ANR	328364	Identifier	efree		328185	0					
ANR	328365	ArgumentList	ms		328185	1					
ANR	328366	Argument	ms		328185	0					
ANR	328367	Identifier	ms		328185	0					
ANR	328368	ReturnStatement	return NULL ;	493:1:13417:13428	328185	68	True				
ANR	328369	Identifier	NULL		328185	0					
ANR	328370	ReturnType	struct magic_set *		328185	1					
ANR	328371	Identifier	file_ms_alloc		328185	2					
ANR	328372	ParameterList	int flags		328185	3					
ANR	328373	Parameter	int flags	464:14:12852:12860	328185	0	True				
ANR	328374	ParameterType	int		328185	0					
ANR	328375	Identifier	flags		328185	1					
ANR	328376	CFGEntryNode	ENTRY		328185		True				
ANR	328377	CFGExitNode	EXIT		328185		True				
ANR	328378	Symbol	* ms -> c		328185						
ANR	328379	Symbol	MAGIC_SETS		328185						
ANR	328380	Symbol	ms -> mlist		328185						
ANR	328381	Symbol	flags		328185						
ANR	328382	Symbol	ms -> c . li		328185						
ANR	328383	Symbol	ms -> o . buf		328185						
ANR	328384	Symbol	* ms		328185						
ANR	328385	Symbol	* * ms		328185						
ANR	328386	Symbol	magic_setflags		328185						
ANR	328387	Symbol	len		328185						
ANR	328388	Symbol	errno		328185						
ANR	328389	Symbol	NULL		328185						
ANR	328390	Symbol	ms -> event_flags		328185						
ANR	328391	Symbol	* ms -> mlist		328185						
ANR	328392	Symbol	ms		328185						
ANR	328393	Symbol	ms -> o		328185						
ANR	328394	Symbol	* ms -> c . li		328185						
ANR	328395	Symbol	i		328185						
ANR	328396	Symbol	ms -> line		328185						
ANR	328397	Symbol	EINVAL		328185						
ANR	328398	Symbol	ms -> o . pbuf		328185						
ANR	328399	Symbol	ms -> error		328185						
ANR	328400	Symbol	ms -> file		328185						
ANR	328401	Symbol	ms -> c		328185						
ANR	328402	Symbol	* i		328185						
ANR	328403	Symbol	ms -> c . len		328185						
ANR	328404	Function	apprentice_unmap	496:8:13441:13737							
ANR	328405	FunctionDef	apprentice_unmap (struct magic_map * map)		328404	0					
ANR	328406	CompoundStatement		498:0:13486:13737	328404	0					
ANR	328407	IfStatement	if ( map == NULL )		328404	0					
ANR	328408	Condition	map == NULL	499:5:13493:13503	328404	0	True				
ANR	328409	EqualityExpression	map == NULL		328404	0		==			
ANR	328410	Identifier	map		328404	0					
ANR	328411	Identifier	NULL		328404	1					
ANR	328412	ReturnStatement	return ;	500:2:13508:13514	328404	1	True				
ANR	328413	IfStatement	if ( map -> p != php_magic_database )		328404	1					
ANR	328414	Condition	map -> p != php_magic_database	501:5:13521:13548	328404	0	True				
ANR	328415	EqualityExpression	map -> p != php_magic_database		328404	0		!=			
ANR	328416	PtrMemberAccess	map -> p		328404	0					
ANR	328417	Identifier	map		328404	0					
ANR	328418	Identifier	p		328404	1					
ANR	328419	Identifier	php_magic_database		328404	1					
ANR	328420	CompoundStatement		4:35:64:64	328404	1					
ANR	328421	IfStatement	if ( map -> p == NULL )		328404	0					
ANR	328422	Condition	map -> p == NULL	502:6:13559:13572	328404	0	True				
ANR	328423	EqualityExpression	map -> p == NULL		328404	0		==			
ANR	328424	PtrMemberAccess	map -> p		328404	0					
ANR	328425	Identifier	map		328404	0					
ANR	328426	Identifier	p		328404	1					
ANR	328427	Identifier	NULL		328404	1					
ANR	328428	CompoundStatement		6:3:93:98	328404	1					
ANR	328429	IdentifierDeclStatement	int j ;	503:3:13580:13585	328404	0	True				
ANR	328430	IdentifierDecl	j		328404	0					
ANR	328431	IdentifierDeclType	int		328404	0					
ANR	328432	Identifier	j		328404	1					
ANR	328433	ForStatement	for ( j = 0 ; j < MAGIC_SETS ; j ++ )		328404	1					
ANR	328434	ForInit	j = 0 ;	504:8:13595:13600	328404	0	True				
ANR	328435	AssignmentExpression	j = 0		328404	0		=			
ANR	328436	Identifier	j		328404	0					
ANR	328437	PrimaryExpression	0		328404	1					
ANR	328438	Condition	j < MAGIC_SETS	504:15:13602:13615	328404	1	True				
ANR	328439	RelationalExpression	j < MAGIC_SETS		328404	0		<			
ANR	328440	Identifier	j		328404	0					
ANR	328441	Identifier	MAGIC_SETS		328404	1					
ANR	328442	PostIncDecOperationExpression	j ++	504:31:13618:13620	328404	2	True				
ANR	328443	Identifier	j		328404	0					
ANR	328444	IncDec	++		328404	1					
ANR	328445	CompoundStatement		7:36:136:136	328404	3					
ANR	328446	IfStatement	if ( map -> magic [ j ] )		328404	0					
ANR	328447	Condition	map -> magic [ j ]	505:8:13633:13645	328404	0	True				
ANR	328448	ArrayIndexing	map -> magic [ j ]		328404	0					
ANR	328449	PtrMemberAccess	map -> magic		328404	0					
ANR	328450	Identifier	map		328404	0					
ANR	328451	Identifier	magic		328404	1					
ANR	328452	Identifier	j		328404	1					
ANR	328453	CompoundStatement		8:23:161:161	328404	1					
ANR	328454	ExpressionStatement	efree ( map -> magic [ j ] )	506:5:13655:13675	328404	0	True				
ANR	328455	CallExpression	efree ( map -> magic [ j ] )		328404	0					
ANR	328456	Callee	efree		328404	0					
ANR	328457	Identifier	efree		328404	0					
ANR	328458	ArgumentList	map -> magic [ j ]		328404	1					
ANR	328459	Argument	map -> magic [ j ]		328404	0					
ANR	328460	ArrayIndexing	map -> magic [ j ]		328404	0					
ANR	328461	PtrMemberAccess	map -> magic		328404	0					
ANR	328462	Identifier	map		328404	0					
ANR	328463	Identifier	magic		328404	1					
ANR	328464	Identifier	j		328404	1					
ANR	328465	ElseStatement	else		328404	0					
ANR	328466	CompoundStatement		12:9:210:210	328404	0					
ANR	328467	ExpressionStatement	efree ( map -> p )	510:3:13702:13715	328404	0	True				
ANR	328468	CallExpression	efree ( map -> p )		328404	0					
ANR	328469	Callee	efree		328404	0					
ANR	328470	Identifier	efree		328404	0					
ANR	328471	ArgumentList	map -> p		328404	1					
ANR	328472	Argument	map -> p		328404	0					
ANR	328473	PtrMemberAccess	map -> p		328404	0					
ANR	328474	Identifier	map		328404	0					
ANR	328475	Identifier	p		328404	1					
ANR	328476	ExpressionStatement	efree ( map )	513:1:13725:13735	328404	2	True				
ANR	328477	CallExpression	efree ( map )		328404	0					
ANR	328478	Callee	efree		328404	0					
ANR	328479	Identifier	efree		328404	0					
ANR	328480	ArgumentList	map		328404	1					
ANR	328481	Argument	map		328404	0					
ANR	328482	Identifier	map		328404	0					
ANR	328483	ReturnType	void		328404	1					
ANR	328484	Identifier	apprentice_unmap		328404	2					
ANR	328485	ParameterList	struct magic_map * map		328404	3					
ANR	328486	Parameter	struct magic_map * map	497:17:13463:13483	328404	0	True				
ANR	328487	ParameterType	struct magic_map *		328404	0					
ANR	328488	Identifier	map		328404	1					
ANR	328489	CFGEntryNode	ENTRY		328404		True				
ANR	328490	CFGExitNode	EXIT		328404		True				
ANR	328491	Symbol	* * map		328404						
ANR	328492	Symbol	NULL		328404						
ANR	328493	Symbol	MAGIC_SETS		328404						
ANR	328494	Symbol	* j		328404						
ANR	328495	Symbol	* map		328404						
ANR	328496	Symbol	php_magic_database		328404						
ANR	328497	Symbol	map -> p		328404						
ANR	328498	Symbol	* map -> magic		328404						
ANR	328499	Symbol	map -> magic		328404						
ANR	328500	Symbol	j		328404						
ANR	328501	Symbol	map		328404						
ANR	328502	Function	mlist_alloc	516:8:13748:13949							
ANR	328503	FunctionDef	mlist_alloc ()		328502	0					
ANR	328504	CompoundStatement		518:0:13781:13949	328502	0					
ANR	328505	IdentifierDeclStatement	struct mlist * mlist ;	519:1:13784:13803	328502	0	True				
ANR	328506	IdentifierDecl	* mlist		328502	0					
ANR	328507	IdentifierDeclType	struct mlist *		328502	0					
ANR	328508	Identifier	mlist		328502	1					
ANR	328509	Statement	if	520:1:13806:13807	328502	1	True				
ANR	328510	Statement	(	520:4:13809:13809	328502	2	True				
ANR	328511	Statement	(	520:5:13810:13810	328502	3	True				
ANR	328512	Statement	mlist	520:6:13811:13815	328502	4	True				
ANR	328513	Statement	=	520:12:13817:13817	328502	5	True				
ANR	328514	Statement	CAST	520:14:13819:13822	328502	6	True				
ANR	328515	Statement	(	520:18:13823:13823	328502	7	True				
ANR	328516	Statement	struct	520:19:13824:13829	328502	8	True				
ANR	328517	Statement	mlist	520:26:13831:13835	328502	9	True				
ANR	328518	Statement	*	520:32:13837:13837	328502	10	True				
ANR	328519	Statement	","	520:33:13838:13838	328502	11	True				
ANR	328520	Statement	ecalloc	520:35:13840:13846	328502	12	True				
ANR	328521	Statement	(	520:42:13847:13847	328502	13	True				
ANR	328522	Statement	1	520:43:13848:13848	328502	14	True				
ANR	328523	Statement	","	520:44:13849:13849	328502	15	True				
ANR	328524	Statement	sizeof	520:46:13851:13856	328502	16	True				
ANR	328525	Statement	(	520:52:13857:13857	328502	17	True				
ANR	328526	Statement	*	520:53:13858:13858	328502	18	True				
ANR	328527	Statement	mlist	520:54:13859:13863	328502	19	True				
ANR	328528	Statement	)	520:59:13864:13864	328502	20	True				
ANR	328529	Statement	)	520:60:13865:13865	328502	21	True				
ANR	328530	Statement	)	520:61:13866:13866	328502	22	True				
ANR	328531	Statement	)	520:62:13867:13867	328502	23	True				
ANR	328532	Statement	==	520:64:13869:13870	328502	24	True				
ANR	328533	Statement	NULL	520:67:13872:13875	328502	25	True				
ANR	328534	Statement	)	520:71:13876:13876	328502	26	True				
ANR	328535	CompoundStatement		3:73:96:96	328502	27					
ANR	328536	ReturnStatement	return NULL ;	521:2:13882:13893	328502	0	True				
ANR	328537	Identifier	NULL		328502	0					
ANR	328538	ExpressionStatement	mlist -> next = mlist -> prev = mlist	523:1:13899:13932	328502	28	True				
ANR	328539	AssignmentExpression	mlist -> next = mlist -> prev = mlist		328502	0		=			
ANR	328540	PtrMemberAccess	mlist -> next		328502	0					
ANR	328541	Identifier	mlist		328502	0					
ANR	328542	Identifier	next		328502	1					
ANR	328543	AssignmentExpression	mlist -> prev = mlist		328502	1		=			
ANR	328544	PtrMemberAccess	mlist -> prev		328502	0					
ANR	328545	Identifier	mlist		328502	0					
ANR	328546	Identifier	prev		328502	1					
ANR	328547	Identifier	mlist		328502	1					
ANR	328548	ReturnStatement	return mlist ;	524:1:13935:13947	328502	29	True				
ANR	328549	Identifier	mlist		328502	0					
ANR	328550	ReturnType	struct mlist *		328502	1					
ANR	328551	Identifier	mlist_alloc		328502	2					
ANR	328552	ParameterList			328502	3					
ANR	328553	CFGEntryNode	ENTRY		328502		True				
ANR	328554	CFGExitNode	EXIT		328502		True				
ANR	328555	Symbol	NULL		328502						
ANR	328556	Symbol	mlist -> next		328502						
ANR	328557	Symbol	* mlist		328502						
ANR	328558	Symbol	mlist -> prev		328502						
ANR	328559	Symbol	mlist		328502						
ANR	328560	Function	mlist_free	527:8:13960:14209							
ANR	328561	FunctionDef	mlist_free (struct mlist * mlist)		328560	0					
ANR	328562	CompoundStatement		529:0:13997:14209	328560	0					
ANR	328563	IdentifierDeclStatement	struct mlist * ml ;	530:1:14000:14016	328560	0	True				
ANR	328564	IdentifierDecl	* ml		328560	0					
ANR	328565	IdentifierDeclType	struct mlist *		328560	0					
ANR	328566	Identifier	ml		328560	1					
ANR	328567	IfStatement	if ( mlist == NULL )		328560	1					
ANR	328568	Condition	mlist == NULL	532:5:14024:14036	328560	0	True				
ANR	328569	EqualityExpression	mlist == NULL		328560	0		==			
ANR	328570	Identifier	mlist		328560	0					
ANR	328571	Identifier	NULL		328560	1					
ANR	328572	ReturnStatement	return ;	533:2:14041:14047	328560	1	True				
ANR	328573	ForStatement	for ( ml = mlist -> next ; ml != mlist ; )		328560	2					
ANR	328574	ForInit	ml = mlist -> next ;	535:6:14056:14072	328560	0	True				
ANR	328575	AssignmentExpression	ml = mlist -> next		328560	0		=			
ANR	328576	Identifier	ml		328560	0					
ANR	328577	PtrMemberAccess	mlist -> next		328560	1					
ANR	328578	Identifier	mlist		328560	0					
ANR	328579	Identifier	next		328560	1					
ANR	328580	Condition	ml != mlist	535:24:14074:14084	328560	1	True				
ANR	328581	EqualityExpression	ml != mlist		328560	0		!=			
ANR	328582	Identifier	ml		328560	0					
ANR	328583	Identifier	mlist		328560	1					
ANR	328584	CompoundStatement		8:2:94:123	328560	2					
ANR	328585	IdentifierDeclStatement	struct mlist * next = ml -> next ;	536:2:14092:14121	328560	0	True				
ANR	328586	IdentifierDecl	* next = ml -> next		328560	0					
ANR	328587	IdentifierDeclType	struct mlist *		328560	0					
ANR	328588	Identifier	next		328560	1					
ANR	328589	AssignmentExpression	* next = ml -> next		328560	2		=			
ANR	328590	Identifier	next		328560	0					
ANR	328591	PtrMemberAccess	ml -> next		328560	1					
ANR	328592	Identifier	ml		328560	0					
ANR	328593	Identifier	next		328560	1					
ANR	328594	IfStatement	if ( ml -> map )		328560	1					
ANR	328595	Condition	ml -> map	537:6:14129:14135	328560	0	True				
ANR	328596	PtrMemberAccess	ml -> map		328560	0					
ANR	328597	Identifier	ml		328560	0					
ANR	328598	Identifier	map		328560	1					
ANR	328599	ExpressionStatement	apprentice_unmap ( ml -> map )	538:3:14141:14166	328560	1	True				
ANR	328600	CallExpression	apprentice_unmap ( ml -> map )		328560	0					
ANR	328601	Callee	apprentice_unmap		328560	0					
ANR	328602	Identifier	apprentice_unmap		328560	0					
ANR	328603	ArgumentList	ml -> map		328560	1					
ANR	328604	Argument	ml -> map		328560	0					
ANR	328605	PtrMemberAccess	ml -> map		328560	0					
ANR	328606	Identifier	ml		328560	0					
ANR	328607	Identifier	map		328560	1					
ANR	328608	ExpressionStatement	efree ( ml )	539:2:14170:14179	328560	2	True				
ANR	328609	CallExpression	efree ( ml )		328560	0					
ANR	328610	Callee	efree		328560	0					
ANR	328611	Identifier	efree		328560	0					
ANR	328612	ArgumentList	ml		328560	1					
ANR	328613	Argument	ml		328560	0					
ANR	328614	Identifier	ml		328560	0					
ANR	328615	ExpressionStatement	ml = next	540:2:14183:14192	328560	3	True				
ANR	328616	AssignmentExpression	ml = next		328560	0		=			
ANR	328617	Identifier	ml		328560	0					
ANR	328618	Identifier	next		328560	1					
ANR	328619	ExpressionStatement	efree ( ml )	542:1:14198:14207	328560	3	True				
ANR	328620	CallExpression	efree ( ml )		328560	0					
ANR	328621	Callee	efree		328560	0					
ANR	328622	Identifier	efree		328560	0					
ANR	328623	ArgumentList	ml		328560	1					
ANR	328624	Argument	ml		328560	0					
ANR	328625	Identifier	ml		328560	0					
ANR	328626	ReturnType	void		328560	1					
ANR	328627	Identifier	mlist_free		328560	2					
ANR	328628	ParameterList	struct mlist * mlist		328560	3					
ANR	328629	Parameter	struct mlist * mlist	528:11:13976:13994	328560	0	True				
ANR	328630	ParameterType	struct mlist *		328560	0					
ANR	328631	Identifier	mlist		328560	1					
ANR	328632	CFGEntryNode	ENTRY		328560		True				
ANR	328633	CFGExitNode	EXIT		328560		True				
ANR	328634	Symbol	next		328560						
ANR	328635	Symbol	NULL		328560						
ANR	328636	Symbol	ml -> map		328560						
ANR	328637	Symbol	mlist -> next		328560						
ANR	328638	Symbol	ml -> next		328560						
ANR	328639	Symbol	* mlist		328560						
ANR	328640	Symbol	* ml		328560						
ANR	328641	Symbol	mlist		328560						
ANR	328642	Symbol	ml		328560						
ANR	328643	Function	file_apprentice	546:10:14280:16009							
ANR	328644	FunctionDef	"file_apprentice (struct magic_set * ms , const char * fn , int action)"		328643	0					
ANR	328645	CompoundStatement		548:0:14350:16009	328643	0					
ANR	328646	IdentifierDeclStatement	"char * p , * mfn ;"	549:1:14353:14366	328643	0	True				
ANR	328647	IdentifierDecl	* p		328643	0					
ANR	328648	IdentifierDeclType	char *		328643	0					
ANR	328649	Identifier	p		328643	1					
ANR	328650	IdentifierDecl	* mfn		328643	1					
ANR	328651	IdentifierDeclType	char *		328643	0					
ANR	328652	Identifier	mfn		328643	1					
ANR	328653	IdentifierDeclStatement	"int file_err , errs = - 1 ;"	550:1:14369:14392	328643	1	True				
ANR	328654	IdentifierDecl	file_err		328643	0					
ANR	328655	IdentifierDeclType	int		328643	0					
ANR	328656	Identifier	file_err		328643	1					
ANR	328657	IdentifierDecl	errs = - 1		328643	1					
ANR	328658	IdentifierDeclType	int		328643	0					
ANR	328659	Identifier	errs		328643	1					
ANR	328660	AssignmentExpression	errs = - 1		328643	2		=			
ANR	328661	Identifier	errs		328643	0					
ANR	328662	UnaryOperationExpression	- 1		328643	1					
ANR	328663	UnaryOperator	-		328643	0					
ANR	328664	PrimaryExpression	1		328643	1					
ANR	328665	IdentifierDeclStatement	size_t i ;	551:1:14395:14403	328643	2	True				
ANR	328666	IdentifierDecl	i		328643	0					
ANR	328667	IdentifierDeclType	size_t		328643	0					
ANR	328668	Identifier	i		328643	1					
ANR	328669	ExpressionStatement	file_reset ( ms )	553:1:14407:14421	328643	3	True				
ANR	328670	CallExpression	file_reset ( ms )		328643	0					
ANR	328671	Callee	file_reset		328643	0					
ANR	328672	Identifier	file_reset		328643	0					
ANR	328673	ArgumentList	ms		328643	1					
ANR	328674	Argument	ms		328643	0					
ANR	328675	Identifier	ms		328643	0					
ANR	328676	IfStatement	"if ( ( fn = magic_getpath ( fn , action ) ) == NULL )"		328643	4					
ANR	328677	Condition	"( fn = magic_getpath ( fn , action ) ) == NULL"	557:5:14509:14548	328643	0	True				
ANR	328678	EqualityExpression	"( fn = magic_getpath ( fn , action ) ) == NULL"		328643	0		==			
ANR	328679	AssignmentExpression	"fn = magic_getpath ( fn , action )"		328643	0		=			
ANR	328680	Identifier	fn		328643	0					
ANR	328681	CallExpression	"magic_getpath ( fn , action )"		328643	1					
ANR	328682	Callee	magic_getpath		328643	0					
ANR	328683	Identifier	magic_getpath		328643	0					
ANR	328684	ArgumentList	fn		328643	1					
ANR	328685	Argument	fn		328643	0					
ANR	328686	Identifier	fn		328643	0					
ANR	328687	Argument	action		328643	1					
ANR	328688	Identifier	action		328643	0					
ANR	328689	Identifier	NULL		328643	1					
ANR	328690	ReturnStatement	return - 1 ;	558:2:14553:14562	328643	1	True				
ANR	328691	UnaryOperationExpression	- 1		328643	0					
ANR	328692	UnaryOperator	-		328643	0					
ANR	328693	PrimaryExpression	1		328643	1					
ANR	328694	ExpressionStatement	init_file_tables ( )	561:1:14573:14591	328643	5	True				
ANR	328695	CallExpression	init_file_tables ( )		328643	0					
ANR	328696	Callee	init_file_tables		328643	0					
ANR	328697	Identifier	init_file_tables		328643	0					
ANR	328698	ArgumentList			328643	1					
ANR	328699	IfStatement	if ( fn == NULL )		328643	6					
ANR	328700	Condition	fn == NULL	563:5:14599:14608	328643	0	True				
ANR	328701	EqualityExpression	fn == NULL		328643	0		==			
ANR	328702	Identifier	fn		328643	0					
ANR	328703	Identifier	NULL		328643	1					
ANR	328704	ExpressionStatement	"fn = getenv ( ""MAGIC"" )"	564:2:14613:14633	328643	1	True				
ANR	328705	AssignmentExpression	"fn = getenv ( ""MAGIC"" )"		328643	0		=			
ANR	328706	Identifier	fn		328643	0					
ANR	328707	CallExpression	"getenv ( ""MAGIC"" )"		328643	1					
ANR	328708	Callee	getenv		328643	0					
ANR	328709	Identifier	getenv		328643	0					
ANR	328710	ArgumentList	"""MAGIC"""		328643	1					
ANR	328711	Argument	"""MAGIC"""		328643	0					
ANR	328712	PrimaryExpression	"""MAGIC"""		328643	0					
ANR	328713	IfStatement	if ( fn == NULL )		328643	7					
ANR	328714	Condition	fn == NULL	565:5:14640:14649	328643	0	True				
ANR	328715	EqualityExpression	fn == NULL		328643	0		==			
ANR	328716	Identifier	fn		328643	0					
ANR	328717	Identifier	NULL		328643	1					
ANR	328718	CompoundStatement		18:17:301:301	328643	1					
ANR	328719	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		328643	0					
ANR	328720	ForInit	i = 0 ;	566:7:14661:14666	328643	0	True				
ANR	328721	AssignmentExpression	i = 0		328643	0		=			
ANR	328722	Identifier	i		328643	0					
ANR	328723	PrimaryExpression	0		328643	1					
ANR	328724	Condition	i < MAGIC_SETS	566:14:14668:14681	328643	1	True				
ANR	328725	RelationalExpression	i < MAGIC_SETS		328643	0		<			
ANR	328726	Identifier	i		328643	0					
ANR	328727	Identifier	MAGIC_SETS		328643	1					
ANR	328728	PostIncDecOperationExpression	i ++	566:30:14684:14686	328643	2	True				
ANR	328729	Identifier	i		328643	0					
ANR	328730	IncDec	++		328643	1					
ANR	328731	CompoundStatement		19:35:338:338	328643	3					
ANR	328732	ExpressionStatement	mlist_free ( ms -> mlist [ i ] )	567:3:14694:14718	328643	0	True				
ANR	328733	CallExpression	mlist_free ( ms -> mlist [ i ] )		328643	0					
ANR	328734	Callee	mlist_free		328643	0					
ANR	328735	Identifier	mlist_free		328643	0					
ANR	328736	ArgumentList	ms -> mlist [ i ]		328643	1					
ANR	328737	Argument	ms -> mlist [ i ]		328643	0					
ANR	328738	ArrayIndexing	ms -> mlist [ i ]		328643	0					
ANR	328739	PtrMemberAccess	ms -> mlist		328643	0					
ANR	328740	Identifier	ms		328643	0					
ANR	328741	Identifier	mlist		328643	1					
ANR	328742	Identifier	i		328643	1					
ANR	328743	IfStatement	if ( ( ms -> mlist [ i ] = mlist_alloc ( ) ) == NULL )		328643	1					
ANR	328744	Condition	( ms -> mlist [ i ] = mlist_alloc ( ) ) == NULL	568:7:14727:14764	328643	0	True				
ANR	328745	EqualityExpression	( ms -> mlist [ i ] = mlist_alloc ( ) ) == NULL		328643	0		==			
ANR	328746	AssignmentExpression	ms -> mlist [ i ] = mlist_alloc ( )		328643	0		=			
ANR	328747	ArrayIndexing	ms -> mlist [ i ]		328643	0					
ANR	328748	PtrMemberAccess	ms -> mlist		328643	0					
ANR	328749	Identifier	ms		328643	0					
ANR	328750	Identifier	mlist		328643	1					
ANR	328751	Identifier	i		328643	1					
ANR	328752	CallExpression	mlist_alloc ( )		328643	1					
ANR	328753	Callee	mlist_alloc		328643	0					
ANR	328754	Identifier	mlist_alloc		328643	0					
ANR	328755	ArgumentList			328643	1					
ANR	328756	Identifier	NULL		328643	1					
ANR	328757	CompoundStatement		21:47:416:416	328643	1					
ANR	328758	ExpressionStatement	"file_oomem ( ms , sizeof ( * ms -> mlist [ i ] ) )"	569:4:14773:14810	328643	0	True				
ANR	328759	CallExpression	"file_oomem ( ms , sizeof ( * ms -> mlist [ i ] ) )"		328643	0					
ANR	328760	Callee	file_oomem		328643	0					
ANR	328761	Identifier	file_oomem		328643	0					
ANR	328762	ArgumentList	ms		328643	1					
ANR	328763	Argument	ms		328643	0					
ANR	328764	Identifier	ms		328643	0					
ANR	328765	Argument	sizeof ( * ms -> mlist [ i ] )		328643	1					
ANR	328766	SizeofExpression	sizeof ( * ms -> mlist [ i ] )		328643	0					
ANR	328767	Sizeof	sizeof		328643	0					
ANR	328768	UnaryOperationExpression	* ms -> mlist [ i ]		328643	1					
ANR	328769	UnaryOperator	*		328643	0					
ANR	328770	ArrayIndexing	ms -> mlist [ i ]		328643	1					
ANR	328771	PtrMemberAccess	ms -> mlist		328643	0					
ANR	328772	Identifier	ms		328643	0					
ANR	328773	Identifier	mlist		328643	1					
ANR	328774	Identifier	i		328643	1					
ANR	328775	ReturnStatement	return - 1 ;	570:4:14816:14825	328643	1	True				
ANR	328776	UnaryOperationExpression	- 1		328643	0					
ANR	328777	UnaryOperator	-		328643	0					
ANR	328778	PrimaryExpression	1		328643	1					
ANR	328779	ReturnStatement	"return apprentice_1 ( ms , fn , action ) ;"	573:2:14838:14873	328643	1	True				
ANR	328780	CallExpression	"apprentice_1 ( ms , fn , action )"		328643	0					
ANR	328781	Callee	apprentice_1		328643	0					
ANR	328782	Identifier	apprentice_1		328643	0					
ANR	328783	ArgumentList	ms		328643	1					
ANR	328784	Argument	ms		328643	0					
ANR	328785	Identifier	ms		328643	0					
ANR	328786	Argument	fn		328643	1					
ANR	328787	Identifier	fn		328643	0					
ANR	328788	Argument	action		328643	2					
ANR	328789	Identifier	action		328643	0					
ANR	328790	IfStatement	if ( ( mfn = estrdup ( fn ) ) == NULL )		328643	8					
ANR	328791	Condition	( mfn = estrdup ( fn ) ) == NULL	576:5:14884:14910	328643	0	True				
ANR	328792	EqualityExpression	( mfn = estrdup ( fn ) ) == NULL		328643	0		==			
ANR	328793	AssignmentExpression	mfn = estrdup ( fn )		328643	0		=			
ANR	328794	Identifier	mfn		328643	0					
ANR	328795	CallExpression	estrdup ( fn )		328643	1					
ANR	328796	Callee	estrdup		328643	0					
ANR	328797	Identifier	estrdup		328643	0					
ANR	328798	ArgumentList	fn		328643	1					
ANR	328799	Argument	fn		328643	0					
ANR	328800	Identifier	fn		328643	0					
ANR	328801	Identifier	NULL		328643	1					
ANR	328802	CompoundStatement		29:34:562:562	328643	1					
ANR	328803	ExpressionStatement	"file_oomem ( ms , strlen ( fn ) )"	577:2:14917:14943	328643	0	True				
ANR	328804	CallExpression	"file_oomem ( ms , strlen ( fn ) )"		328643	0					
ANR	328805	Callee	file_oomem		328643	0					
ANR	328806	Identifier	file_oomem		328643	0					
ANR	328807	ArgumentList	ms		328643	1					
ANR	328808	Argument	ms		328643	0					
ANR	328809	Identifier	ms		328643	0					
ANR	328810	Argument	strlen ( fn )		328643	1					
ANR	328811	CallExpression	strlen ( fn )		328643	0					
ANR	328812	Callee	strlen		328643	0					
ANR	328813	Identifier	strlen		328643	0					
ANR	328814	ArgumentList	fn		328643	1					
ANR	328815	Argument	fn		328643	0					
ANR	328816	Identifier	fn		328643	0					
ANR	328817	ReturnStatement	return - 1 ;	578:2:14947:14956	328643	1	True				
ANR	328818	UnaryOperationExpression	- 1		328643	0					
ANR	328819	UnaryOperator	-		328643	0					
ANR	328820	PrimaryExpression	1		328643	1					
ANR	328821	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		328643	9					
ANR	328822	ForInit	i = 0 ;	581:6:14968:14973	328643	0	True				
ANR	328823	AssignmentExpression	i = 0		328643	0		=			
ANR	328824	Identifier	i		328643	0					
ANR	328825	PrimaryExpression	0		328643	1					
ANR	328826	Condition	i < MAGIC_SETS	581:13:14975:14988	328643	1	True				
ANR	328827	RelationalExpression	i < MAGIC_SETS		328643	0		<			
ANR	328828	Identifier	i		328643	0					
ANR	328829	Identifier	MAGIC_SETS		328643	1					
ANR	328830	PostIncDecOperationExpression	i ++	581:29:14991:14993	328643	2	True				
ANR	328831	Identifier	i		328643	0					
ANR	328832	IncDec	++		328643	1					
ANR	328833	CompoundStatement		34:34:645:645	328643	3					
ANR	328834	ExpressionStatement	mlist_free ( ms -> mlist [ i ] )	582:2:15000:15024	328643	0	True				
ANR	328835	CallExpression	mlist_free ( ms -> mlist [ i ] )		328643	0					
ANR	328836	Callee	mlist_free		328643	0					
ANR	328837	Identifier	mlist_free		328643	0					
ANR	328838	ArgumentList	ms -> mlist [ i ]		328643	1					
ANR	328839	Argument	ms -> mlist [ i ]		328643	0					
ANR	328840	ArrayIndexing	ms -> mlist [ i ]		328643	0					
ANR	328841	PtrMemberAccess	ms -> mlist		328643	0					
ANR	328842	Identifier	ms		328643	0					
ANR	328843	Identifier	mlist		328643	1					
ANR	328844	Identifier	i		328643	1					
ANR	328845	IfStatement	if ( ( ms -> mlist [ i ] = mlist_alloc ( ) ) == NULL )		328643	1					
ANR	328846	Condition	( ms -> mlist [ i ] = mlist_alloc ( ) ) == NULL	583:6:15032:15069	328643	0	True				
ANR	328847	EqualityExpression	( ms -> mlist [ i ] = mlist_alloc ( ) ) == NULL		328643	0		==			
ANR	328848	AssignmentExpression	ms -> mlist [ i ] = mlist_alloc ( )		328643	0		=			
ANR	328849	ArrayIndexing	ms -> mlist [ i ]		328643	0					
ANR	328850	PtrMemberAccess	ms -> mlist		328643	0					
ANR	328851	Identifier	ms		328643	0					
ANR	328852	Identifier	mlist		328643	1					
ANR	328853	Identifier	i		328643	1					
ANR	328854	CallExpression	mlist_alloc ( )		328643	1					
ANR	328855	Callee	mlist_alloc		328643	0					
ANR	328856	Identifier	mlist_alloc		328643	0					
ANR	328857	ArgumentList			328643	1					
ANR	328858	Identifier	NULL		328643	1					
ANR	328859	CompoundStatement		36:46:721:721	328643	1					
ANR	328860	ExpressionStatement	"file_oomem ( ms , sizeof ( * ms -> mlist [ i ] ) )"	584:3:15077:15114	328643	0	True				
ANR	328861	CallExpression	"file_oomem ( ms , sizeof ( * ms -> mlist [ i ] ) )"		328643	0					
ANR	328862	Callee	file_oomem		328643	0					
ANR	328863	Identifier	file_oomem		328643	0					
ANR	328864	ArgumentList	ms		328643	1					
ANR	328865	Argument	ms		328643	0					
ANR	328866	Identifier	ms		328643	0					
ANR	328867	Argument	sizeof ( * ms -> mlist [ i ] )		328643	1					
ANR	328868	SizeofExpression	sizeof ( * ms -> mlist [ i ] )		328643	0					
ANR	328869	Sizeof	sizeof		328643	0					
ANR	328870	UnaryOperationExpression	* ms -> mlist [ i ]		328643	1					
ANR	328871	UnaryOperator	*		328643	0					
ANR	328872	ArrayIndexing	ms -> mlist [ i ]		328643	1					
ANR	328873	PtrMemberAccess	ms -> mlist		328643	0					
ANR	328874	Identifier	ms		328643	0					
ANR	328875	Identifier	mlist		328643	1					
ANR	328876	Identifier	i		328643	1					
ANR	328877	IfStatement	if ( i != 0 )		328643	1					
ANR	328878	Condition	i != 0	585:7:15123:15128	328643	0	True				
ANR	328879	EqualityExpression	i != 0		328643	0		!=			
ANR	328880	Identifier	i		328643	0					
ANR	328881	PrimaryExpression	0		328643	1					
ANR	328882	CompoundStatement		38:15:780:780	328643	1					
ANR	328883	ExpressionStatement	-- i	586:4:15137:15140	328643	0	True				
ANR	328884	UnaryExpression	-- i		328643	0					
ANR	328885	IncDec	--		328643	0					
ANR	328886	Identifier	i		328643	1					
ANR	328887	DoStatement	do		328643	1					
ANR	328888	ExpressionStatement	mlist_free ( ms -> mlist [ i ] )	588:5:15154:15178	328643	0	True				
ANR	328889	CallExpression	mlist_free ( ms -> mlist [ i ] )		328643	0					
ANR	328890	Callee	mlist_free		328643	0					
ANR	328891	Identifier	mlist_free		328643	0					
ANR	328892	ArgumentList	ms -> mlist [ i ]		328643	1					
ANR	328893	Argument	ms -> mlist [ i ]		328643	0					
ANR	328894	ArrayIndexing	ms -> mlist [ i ]		328643	0					
ANR	328895	PtrMemberAccess	ms -> mlist		328643	0					
ANR	328896	Identifier	ms		328643	0					
ANR	328897	Identifier	mlist		328643	1					
ANR	328898	Identifier	i		328643	1					
ANR	328899	Condition	i != 0	589:11:15191:15196	328643	1	True				
ANR	328900	EqualityExpression	i != 0		328643	0		!=			
ANR	328901	Identifier	i		328643	0					
ANR	328902	PrimaryExpression	0		328643	1					
ANR	328903	ExpressionStatement	efree ( mfn )	591:3:15208:15218	328643	2	True				
ANR	328904	CallExpression	efree ( mfn )		328643	0					
ANR	328905	Callee	efree		328643	0					
ANR	328906	Identifier	efree		328643	0					
ANR	328907	ArgumentList	mfn		328643	1					
ANR	328908	Argument	mfn		328643	0					
ANR	328909	Identifier	mfn		328643	0					
ANR	328910	ReturnStatement	return - 1 ;	592:3:15223:15232	328643	3	True				
ANR	328911	UnaryOperationExpression	- 1		328643	0					
ANR	328912	UnaryOperator	-		328643	0					
ANR	328913	PrimaryExpression	1		328643	1					
ANR	328914	ExpressionStatement	fn = mfn	595:1:15242:15250	328643	10	True				
ANR	328915	AssignmentExpression	fn = mfn		328643	0		=			
ANR	328916	Identifier	fn		328643	0					
ANR	328917	Identifier	mfn		328643	1					
ANR	328918	WhileStatement	while ( fn )		328643	11					
ANR	328919	Condition	fn	597:8:15261:15262	328643	0	True				
ANR	328920	Identifier	fn		328643	0					
ANR	328921	CompoundStatement		50:12:914:914	328643	1					
ANR	328922	ExpressionStatement	"p = strchr ( fn , PATHSEP )"	598:2:15269:15292	328643	0	True				
ANR	328923	AssignmentExpression	"p = strchr ( fn , PATHSEP )"		328643	0		=			
ANR	328924	Identifier	p		328643	0					
ANR	328925	CallExpression	"strchr ( fn , PATHSEP )"		328643	1					
ANR	328926	Callee	strchr		328643	0					
ANR	328927	Identifier	strchr		328643	0					
ANR	328928	ArgumentList	fn		328643	1					
ANR	328929	Argument	fn		328643	0					
ANR	328930	Identifier	fn		328643	0					
ANR	328931	Argument	PATHSEP		328643	1					
ANR	328932	Identifier	PATHSEP		328643	0					
ANR	328933	IfStatement	if ( p )		328643	1					
ANR	328934	Condition	p	599:6:15300:15300	328643	0	True				
ANR	328935	Identifier	p		328643	0					
ANR	328936	ExpressionStatement	* p ++ = '\\0'	600:3:15306:15317	328643	1	True				
ANR	328937	AssignmentExpression	* p ++ = '\\0'		328643	0		=			
ANR	328938	UnaryOperationExpression	* p ++		328643	0					
ANR	328939	UnaryOperator	*		328643	0					
ANR	328940	PostIncDecOperationExpression	p ++		328643	1					
ANR	328941	Identifier	p		328643	0					
ANR	328942	IncDec	++		328643	1					
ANR	328943	PrimaryExpression	'\\0'		328643	1					
ANR	328944	IfStatement	if ( * fn == '\\0' )		328643	2					
ANR	328945	Condition	* fn == '\\0'	601:6:15325:15335	328643	0	True				
ANR	328946	EqualityExpression	* fn == '\\0'		328643	0		==			
ANR	328947	UnaryOperationExpression	* fn		328643	0					
ANR	328948	UnaryOperator	*		328643	0					
ANR	328949	Identifier	fn		328643	1					
ANR	328950	PrimaryExpression	'\\0'		328643	1					
ANR	328951	BreakStatement	break ;	602:3:15341:15346	328643	1	True				
ANR	328952	ExpressionStatement	"file_err = apprentice_1 ( ms , fn , action )"	603:2:15350:15389	328643	3	True				
ANR	328953	AssignmentExpression	"file_err = apprentice_1 ( ms , fn , action )"		328643	0		=			
ANR	328954	Identifier	file_err		328643	0					
ANR	328955	CallExpression	"apprentice_1 ( ms , fn , action )"		328643	1					
ANR	328956	Callee	apprentice_1		328643	0					
ANR	328957	Identifier	apprentice_1		328643	0					
ANR	328958	ArgumentList	ms		328643	1					
ANR	328959	Argument	ms		328643	0					
ANR	328960	Identifier	ms		328643	0					
ANR	328961	Argument	fn		328643	1					
ANR	328962	Identifier	fn		328643	0					
ANR	328963	Argument	action		328643	2					
ANR	328964	Identifier	action		328643	0					
ANR	328965	ExpressionStatement	"errs = MAX ( errs , file_err )"	604:2:15393:15419	328643	4	True				
ANR	328966	AssignmentExpression	"errs = MAX ( errs , file_err )"		328643	0		=			
ANR	328967	Identifier	errs		328643	0					
ANR	328968	CallExpression	"MAX ( errs , file_err )"		328643	1					
ANR	328969	Callee	MAX		328643	0					
ANR	328970	Identifier	MAX		328643	0					
ANR	328971	ArgumentList	errs		328643	1					
ANR	328972	Argument	errs		328643	0					
ANR	328973	Identifier	errs		328643	0					
ANR	328974	Argument	file_err		328643	1					
ANR	328975	Identifier	file_err		328643	0					
ANR	328976	ExpressionStatement	fn = p	605:2:15423:15429	328643	5	True				
ANR	328977	AssignmentExpression	fn = p		328643	0		=			
ANR	328978	Identifier	fn		328643	0					
ANR	328979	Identifier	p		328643	1					
ANR	328980	ExpressionStatement	efree ( mfn )	608:1:15436:15446	328643	12	True				
ANR	328981	CallExpression	efree ( mfn )		328643	0					
ANR	328982	Callee	efree		328643	0					
ANR	328983	Identifier	efree		328643	0					
ANR	328984	ArgumentList	mfn		328643	1					
ANR	328985	Argument	mfn		328643	0					
ANR	328986	Identifier	mfn		328643	0					
ANR	328987	IfStatement	if ( errs == - 1 )		328643	13					
ANR	328988	Condition	errs == - 1	610:5:15454:15463	328643	0	True				
ANR	328989	EqualityExpression	errs == - 1		328643	0		==			
ANR	328990	Identifier	errs		328643	0					
ANR	328991	UnaryOperationExpression	- 1		328643	1					
ANR	328992	UnaryOperator	-		328643	0					
ANR	328993	PrimaryExpression	1		328643	1					
ANR	328994	CompoundStatement		63:17:1115:1115	328643	1					
ANR	328995	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		328643	0					
ANR	328996	ForInit	i = 0 ;	611:7:15475:15480	328643	0	True				
ANR	328997	AssignmentExpression	i = 0		328643	0		=			
ANR	328998	Identifier	i		328643	0					
ANR	328999	PrimaryExpression	0		328643	1					
ANR	329000	Condition	i < MAGIC_SETS	611:14:15482:15495	328643	1	True				
ANR	329001	RelationalExpression	i < MAGIC_SETS		328643	0		<			
ANR	329002	Identifier	i		328643	0					
ANR	329003	Identifier	MAGIC_SETS		328643	1					
ANR	329004	PostIncDecOperationExpression	i ++	611:30:15498:15500	328643	2	True				
ANR	329005	Identifier	i		328643	0					
ANR	329006	IncDec	++		328643	1					
ANR	329007	CompoundStatement		64:35:1152:1152	328643	3					
ANR	329008	ExpressionStatement	mlist_free ( ms -> mlist [ i ] )	612:3:15508:15532	328643	0	True				
ANR	329009	CallExpression	mlist_free ( ms -> mlist [ i ] )		328643	0					
ANR	329010	Callee	mlist_free		328643	0					
ANR	329011	Identifier	mlist_free		328643	0					
ANR	329012	ArgumentList	ms -> mlist [ i ]		328643	1					
ANR	329013	Argument	ms -> mlist [ i ]		328643	0					
ANR	329014	ArrayIndexing	ms -> mlist [ i ]		328643	0					
ANR	329015	PtrMemberAccess	ms -> mlist		328643	0					
ANR	329016	Identifier	ms		328643	0					
ANR	329017	Identifier	mlist		328643	1					
ANR	329018	Identifier	i		328643	1					
ANR	329019	ExpressionStatement	ms -> mlist [ i ] = NULL	613:3:15537:15556	328643	1	True				
ANR	329020	AssignmentExpression	ms -> mlist [ i ] = NULL		328643	0		=			
ANR	329021	ArrayIndexing	ms -> mlist [ i ]		328643	0					
ANR	329022	PtrMemberAccess	ms -> mlist		328643	0					
ANR	329023	Identifier	ms		328643	0					
ANR	329024	Identifier	mlist		328643	1					
ANR	329025	Identifier	i		328643	1					
ANR	329026	Identifier	NULL		328643	1					
ANR	329027	ExpressionStatement	"file_error ( ms , 0 , ""could not find any valid magic files!"" )"	615:2:15564:15622	328643	1	True				
ANR	329028	CallExpression	"file_error ( ms , 0 , ""could not find any valid magic files!"" )"		328643	0					
ANR	329029	Callee	file_error		328643	0					
ANR	329030	Identifier	file_error		328643	0					
ANR	329031	ArgumentList	ms		328643	1					
ANR	329032	Argument	ms		328643	0					
ANR	329033	Identifier	ms		328643	0					
ANR	329034	Argument	0		328643	1					
ANR	329035	PrimaryExpression	0		328643	0					
ANR	329036	Argument	"""could not find any valid magic files!"""		328643	2					
ANR	329037	PrimaryExpression	"""could not find any valid magic files!"""		328643	0					
ANR	329038	ReturnStatement	return - 1 ;	616:2:15626:15635	328643	2	True				
ANR	329039	UnaryOperationExpression	- 1		328643	0					
ANR	329040	UnaryOperator	-		328643	0					
ANR	329041	PrimaryExpression	1		328643	1					
ANR	329042	IfStatement	if ( action == FILE_LOAD )		328643	14					
ANR	329043	Condition	action == FILE_LOAD	623:5:15698:15716	328643	0	True				
ANR	329044	EqualityExpression	action == FILE_LOAD		328643	0		==			
ANR	329045	Identifier	action		328643	0					
ANR	329046	Identifier	FILE_LOAD		328643	1					
ANR	329047	ReturnStatement	return 0 ;	624:2:15721:15729	328643	1	True				
ANR	329048	PrimaryExpression	0		328643	0					
ANR	329049	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		328643	15					
ANR	329050	ForInit	i = 0 ;	626:6:15738:15743	328643	0	True				
ANR	329051	AssignmentExpression	i = 0		328643	0		=			
ANR	329052	Identifier	i		328643	0					
ANR	329053	PrimaryExpression	0		328643	1					
ANR	329054	Condition	i < MAGIC_SETS	626:13:15745:15758	328643	1	True				
ANR	329055	RelationalExpression	i < MAGIC_SETS		328643	0		<			
ANR	329056	Identifier	i		328643	0					
ANR	329057	Identifier	MAGIC_SETS		328643	1					
ANR	329058	PostIncDecOperationExpression	i ++	626:29:15761:15763	328643	2	True				
ANR	329059	Identifier	i		328643	0					
ANR	329060	IncDec	++		328643	1					
ANR	329061	CompoundStatement		79:34:1415:1415	328643	3					
ANR	329062	ExpressionStatement	mlist_free ( ms -> mlist [ i ] )	627:2:15770:15794	328643	0	True				
ANR	329063	CallExpression	mlist_free ( ms -> mlist [ i ] )		328643	0					
ANR	329064	Callee	mlist_free		328643	0					
ANR	329065	Identifier	mlist_free		328643	0					
ANR	329066	ArgumentList	ms -> mlist [ i ]		328643	1					
ANR	329067	Argument	ms -> mlist [ i ]		328643	0					
ANR	329068	ArrayIndexing	ms -> mlist [ i ]		328643	0					
ANR	329069	PtrMemberAccess	ms -> mlist		328643	0					
ANR	329070	Identifier	ms		328643	0					
ANR	329071	Identifier	mlist		328643	1					
ANR	329072	Identifier	i		328643	1					
ANR	329073	ExpressionStatement	ms -> mlist [ i ] = NULL	628:2:15798:15817	328643	1	True				
ANR	329074	AssignmentExpression	ms -> mlist [ i ] = NULL		328643	0		=			
ANR	329075	ArrayIndexing	ms -> mlist [ i ]		328643	0					
ANR	329076	PtrMemberAccess	ms -> mlist		328643	0					
ANR	329077	Identifier	ms		328643	0					
ANR	329078	Identifier	mlist		328643	1					
ANR	329079	Identifier	i		328643	1					
ANR	329080	Identifier	NULL		328643	1					
ANR	329081	SwitchStatement	switch ( action )		328643	16					
ANR	329082	Condition	action	632:9:15839:15844	328643	0	True				
ANR	329083	Identifier	action		328643	0					
ANR	329084	CompoundStatement		85:17:1496:1496	328643	1					
ANR	329085	Label	case FILE_LOAD :	633:1:15850:15864	328643	0	True				
ANR	329086	Identifier	FILE_LOAD		328643	0					
ANR	329087	Label	case FILE_COMPILE :	634:1:15867:15884	328643	1	True				
ANR	329088	Identifier	FILE_COMPILE		328643	0					
ANR	329089	Label	case FILE_CHECK :	635:1:15887:15902	328643	2	True				
ANR	329090	Identifier	FILE_CHECK		328643	0					
ANR	329091	Label	case FILE_LIST :	636:1:15905:15919	328643	3	True				
ANR	329092	Identifier	FILE_LIST		328643	0					
ANR	329093	ReturnStatement	return 0 ;	637:2:15923:15931	328643	4	True				
ANR	329094	PrimaryExpression	0		328643	0					
ANR	329095	Label	default :	638:1:15934:15941	328643	5	True				
ANR	329096	Identifier	default		328643	0					
ANR	329097	ExpressionStatement	"file_error ( ms , 0 , ""Invalid action %d"" , action )"	639:2:15945:15991	328643	6	True				
ANR	329098	CallExpression	"file_error ( ms , 0 , ""Invalid action %d"" , action )"		328643	0					
ANR	329099	Callee	file_error		328643	0					
ANR	329100	Identifier	file_error		328643	0					
ANR	329101	ArgumentList	ms		328643	1					
ANR	329102	Argument	ms		328643	0					
ANR	329103	Identifier	ms		328643	0					
ANR	329104	Argument	0		328643	1					
ANR	329105	PrimaryExpression	0		328643	0					
ANR	329106	Argument	"""Invalid action %d"""		328643	2					
ANR	329107	PrimaryExpression	"""Invalid action %d"""		328643	0					
ANR	329108	Argument	action		328643	3					
ANR	329109	Identifier	action		328643	0					
ANR	329110	ReturnStatement	return - 1 ;	640:2:15995:16004	328643	7	True				
ANR	329111	UnaryOperationExpression	- 1		328643	0					
ANR	329112	UnaryOperator	-		328643	0					
ANR	329113	PrimaryExpression	1		328643	1					
ANR	329114	ReturnType	int		328643	1					
ANR	329115	Identifier	file_apprentice		328643	2					
ANR	329116	ParameterList	"struct magic_set * ms , const char * fn , int action"		328643	3					
ANR	329117	Parameter	struct magic_set * ms	547:16:14300:14319	328643	0	True				
ANR	329118	ParameterType	struct magic_set *		328643	0					
ANR	329119	Identifier	ms		328643	1					
ANR	329120	Parameter	const char * fn	547:38:14322:14335	328643	1	True				
ANR	329121	ParameterType	const char *		328643	0					
ANR	329122	Identifier	fn		328643	1					
ANR	329123	Parameter	int action	547:54:14338:14347	328643	2	True				
ANR	329124	ParameterType	int		328643	0					
ANR	329125	Identifier	action		328643	1					
ANR	329126	CFGEntryNode	ENTRY		328643		True				
ANR	329127	CFGExitNode	EXIT		328643		True				
ANR	329128	Symbol	errs		328643						
ANR	329129	Symbol	MAGIC_SETS		328643						
ANR	329130	Symbol	MAX		328643						
ANR	329131	Symbol	ms -> mlist		328643						
ANR	329132	Symbol	apprentice_1		328643						
ANR	329133	Symbol	fn		328643						
ANR	329134	Symbol	strchr		328643						
ANR	329135	Symbol	mlist_alloc		328643						
ANR	329136	Symbol	file_err		328643						
ANR	329137	Symbol	* ms		328643						
ANR	329138	Symbol	* * ms		328643						
ANR	329139	Symbol	strlen		328643						
ANR	329140	Symbol	* * ms -> mlist		328643						
ANR	329141	Symbol	* ms -> mlist [ i ]		328643						
ANR	329142	Symbol	action		328643						
ANR	329143	Symbol	getenv		328643						
ANR	329144	Symbol	* * i		328643						
ANR	329145	Symbol	NULL		328643						
ANR	329146	Symbol	* ms -> mlist		328643						
ANR	329147	Symbol	ms		328643						
ANR	329148	Symbol	PATHSEP		328643						
ANR	329149	Symbol	* p ++		328643						
ANR	329150	Symbol	i		328643						
ANR	329151	Symbol	FILE_LOAD		328643						
ANR	329152	Symbol	* fn		328643						
ANR	329153	Symbol	p		328643						
ANR	329154	Symbol	* * * ms		328643						
ANR	329155	Symbol	* i		328643						
ANR	329156	Symbol	mfn		328643						
ANR	329157	Symbol	estrdup		328643						
ANR	329158	Symbol	magic_getpath		328643						
ANR	329159	Function	apprentice_magic_strength	647:8:16084:18581							
ANR	329160	FunctionDef	apprentice_magic_strength (const struct magic * m)		329159	0					
ANR	329161	CompoundStatement		649:0:16140:18581	329159	0					
ANR	329162	Statement	define	650:1:16143:16148	329159	0	True				
ANR	329163	Statement	MULT	650:8:16150:16153	329159	1	True				
ANR	329164	Statement	10	650:13:16155:16156	329159	2	True				
ANR	329165	IdentifierDeclStatement	size_t val = 2 * MULT ;	651:1:16159:16180	329159	3	True				
ANR	329166	IdentifierDecl	val = 2 * MULT		329159	0					
ANR	329167	IdentifierDeclType	size_t		329159	0					
ANR	329168	Identifier	val		329159	1					
ANR	329169	AssignmentExpression	val = 2 * MULT		329159	2		=			
ANR	329170	Identifier	val		329159	0					
ANR	329171	MultiplicativeExpression	2 * MULT		329159	1		*			
ANR	329172	PrimaryExpression	2		329159	0					
ANR	329173	Identifier	MULT		329159	1					
ANR	329174	SwitchStatement	switch ( m -> type )		329159	4					
ANR	329175	Condition	m -> type	653:9:16216:16222	329159	0	True				
ANR	329176	PtrMemberAccess	m -> type		329159	0					
ANR	329177	Identifier	m		329159	0					
ANR	329178	Identifier	type		329159	1					
ANR	329179	CompoundStatement		5:18:84:84	329159	1					
ANR	329180	Label	case FILE_DEFAULT :	654:1:16228:16245	329159	0	True				
ANR	329181	Identifier	FILE_DEFAULT		329159	0					
ANR	329182	IfStatement	if ( m -> factor_op != FILE_FACTOR_OP_NONE )		329159	1					
ANR	329183	Condition	m -> factor_op != FILE_FACTOR_OP_NONE	655:6:16285:16319	329159	0	True				
ANR	329184	EqualityExpression	m -> factor_op != FILE_FACTOR_OP_NONE		329159	0		!=			
ANR	329185	PtrMemberAccess	m -> factor_op		329159	0					
ANR	329186	Identifier	m		329159	0					
ANR	329187	Identifier	factor_op		329159	1					
ANR	329188	Identifier	FILE_FACTOR_OP_NONE		329159	1					
ANR	329189	ExpressionStatement	abort ( )	656:3:16325:16332	329159	1	True				
ANR	329190	CallExpression	abort ( )		329159	0					
ANR	329191	Callee	abort		329159	0					
ANR	329192	Identifier	abort		329159	0					
ANR	329193	ArgumentList			329159	1					
ANR	329194	ReturnStatement	return 0 ;	657:2:16336:16344	329159	2	True				
ANR	329195	PrimaryExpression	0		329159	0					
ANR	329196	Label	case FILE_BYTE :	659:1:16348:16362	329159	3	True				
ANR	329197	Identifier	FILE_BYTE		329159	0					
ANR	329198	ExpressionStatement	val += 1 * MULT	660:2:16366:16381	329159	4	True				
ANR	329199	AssignmentExpression	val += 1 * MULT		329159	0		+=			
ANR	329200	Identifier	val		329159	0					
ANR	329201	MultiplicativeExpression	1 * MULT		329159	1		*			
ANR	329202	PrimaryExpression	1		329159	0					
ANR	329203	Identifier	MULT		329159	1					
ANR	329204	BreakStatement	break ;	661:2:16385:16390	329159	5	True				
ANR	329205	Label	case FILE_SHORT :	663:1:16394:16409	329159	6	True				
ANR	329206	Identifier	FILE_SHORT		329159	0					
ANR	329207	Label	case FILE_LESHORT :	664:1:16412:16429	329159	7	True				
ANR	329208	Identifier	FILE_LESHORT		329159	0					
ANR	329209	Label	case FILE_BESHORT :	665:1:16432:16449	329159	8	True				
ANR	329210	Identifier	FILE_BESHORT		329159	0					
ANR	329211	ExpressionStatement	val += 2 * MULT	666:2:16453:16468	329159	9	True				
ANR	329212	AssignmentExpression	val += 2 * MULT		329159	0		+=			
ANR	329213	Identifier	val		329159	0					
ANR	329214	MultiplicativeExpression	2 * MULT		329159	1		*			
ANR	329215	PrimaryExpression	2		329159	0					
ANR	329216	Identifier	MULT		329159	1					
ANR	329217	BreakStatement	break ;	667:2:16472:16477	329159	10	True				
ANR	329218	Label	case FILE_LONG :	669:1:16481:16495	329159	11	True				
ANR	329219	Identifier	FILE_LONG		329159	0					
ANR	329220	Label	case FILE_LELONG :	670:1:16498:16514	329159	12	True				
ANR	329221	Identifier	FILE_LELONG		329159	0					
ANR	329222	Label	case FILE_BELONG :	671:1:16517:16533	329159	13	True				
ANR	329223	Identifier	FILE_BELONG		329159	0					
ANR	329224	Label	case FILE_MELONG :	672:1:16536:16552	329159	14	True				
ANR	329225	Identifier	FILE_MELONG		329159	0					
ANR	329226	ExpressionStatement	val += 4 * MULT	673:2:16556:16571	329159	15	True				
ANR	329227	AssignmentExpression	val += 4 * MULT		329159	0		+=			
ANR	329228	Identifier	val		329159	0					
ANR	329229	MultiplicativeExpression	4 * MULT		329159	1		*			
ANR	329230	PrimaryExpression	4		329159	0					
ANR	329231	Identifier	MULT		329159	1					
ANR	329232	BreakStatement	break ;	674:2:16575:16580	329159	16	True				
ANR	329233	Label	case FILE_PSTRING :	676:1:16584:16601	329159	17	True				
ANR	329234	Identifier	FILE_PSTRING		329159	0					
ANR	329235	Label	case FILE_STRING :	677:1:16604:16620	329159	18	True				
ANR	329236	Identifier	FILE_STRING		329159	0					
ANR	329237	ExpressionStatement	val += m -> vallen * MULT	678:2:16624:16647	329159	19	True				
ANR	329238	AssignmentExpression	val += m -> vallen * MULT		329159	0		+=			
ANR	329239	Identifier	val		329159	0					
ANR	329240	MultiplicativeExpression	m -> vallen * MULT		329159	1		*			
ANR	329241	PtrMemberAccess	m -> vallen		329159	0					
ANR	329242	Identifier	m		329159	0					
ANR	329243	Identifier	vallen		329159	1					
ANR	329244	Identifier	MULT		329159	1					
ANR	329245	BreakStatement	break ;	679:2:16651:16656	329159	20	True				
ANR	329246	Label	case FILE_BESTRING16 :	681:1:16660:16680	329159	21	True				
ANR	329247	Identifier	FILE_BESTRING16		329159	0					
ANR	329248	Label	case FILE_LESTRING16 :	682:1:16683:16703	329159	22	True				
ANR	329249	Identifier	FILE_LESTRING16		329159	0					
ANR	329250	ExpressionStatement	val += m -> vallen * MULT / 2	683:2:16707:16734	329159	23	True				
ANR	329251	AssignmentExpression	val += m -> vallen * MULT / 2		329159	0		+=			
ANR	329252	Identifier	val		329159	0					
ANR	329253	MultiplicativeExpression	m -> vallen * MULT / 2		329159	1		*			
ANR	329254	PtrMemberAccess	m -> vallen		329159	0					
ANR	329255	Identifier	m		329159	0					
ANR	329256	Identifier	vallen		329159	1					
ANR	329257	MultiplicativeExpression	MULT / 2		329159	1		/			
ANR	329258	Identifier	MULT		329159	0					
ANR	329259	PrimaryExpression	2		329159	1					
ANR	329260	BreakStatement	break ;	684:2:16738:16743	329159	24	True				
ANR	329261	Label	case FILE_SEARCH :	686:1:16747:16763	329159	25	True				
ANR	329262	Identifier	FILE_SEARCH		329159	0					
ANR	329263	Label	case FILE_REGEX :	687:1:16766:16781	329159	26	True				
ANR	329264	Identifier	FILE_REGEX		329159	0					
ANR	329265	ExpressionStatement	"val += m -> vallen * MAX ( MULT / m -> vallen , 1 )"	688:2:16785:16828	329159	27	True				
ANR	329266	AssignmentExpression	"val += m -> vallen * MAX ( MULT / m -> vallen , 1 )"		329159	0		+=			
ANR	329267	Identifier	val		329159	0					
ANR	329268	MultiplicativeExpression	"m -> vallen * MAX ( MULT / m -> vallen , 1 )"		329159	1		*			
ANR	329269	PtrMemberAccess	m -> vallen		329159	0					
ANR	329270	Identifier	m		329159	0					
ANR	329271	Identifier	vallen		329159	1					
ANR	329272	CallExpression	"MAX ( MULT / m -> vallen , 1 )"		329159	1					
ANR	329273	Callee	MAX		329159	0					
ANR	329274	Identifier	MAX		329159	0					
ANR	329275	ArgumentList	MULT / m -> vallen		329159	1					
ANR	329276	Argument	MULT / m -> vallen		329159	0					
ANR	329277	MultiplicativeExpression	MULT / m -> vallen		329159	0		/			
ANR	329278	Identifier	MULT		329159	0					
ANR	329279	PtrMemberAccess	m -> vallen		329159	1					
ANR	329280	Identifier	m		329159	0					
ANR	329281	Identifier	vallen		329159	1					
ANR	329282	Argument	1		329159	1					
ANR	329283	PrimaryExpression	1		329159	0					
ANR	329284	BreakStatement	break ;	689:2:16832:16837	329159	28	True				
ANR	329285	Label	case FILE_DATE :	691:1:16841:16855	329159	29	True				
ANR	329286	Identifier	FILE_DATE		329159	0					
ANR	329287	Label	case FILE_LEDATE :	692:1:16858:16874	329159	30	True				
ANR	329288	Identifier	FILE_LEDATE		329159	0					
ANR	329289	Label	case FILE_BEDATE :	693:1:16877:16893	329159	31	True				
ANR	329290	Identifier	FILE_BEDATE		329159	0					
ANR	329291	Label	case FILE_MEDATE :	694:1:16896:16912	329159	32	True				
ANR	329292	Identifier	FILE_MEDATE		329159	0					
ANR	329293	Label	case FILE_LDATE :	695:1:16915:16930	329159	33	True				
ANR	329294	Identifier	FILE_LDATE		329159	0					
ANR	329295	Label	case FILE_LELDATE :	696:1:16933:16950	329159	34	True				
ANR	329296	Identifier	FILE_LELDATE		329159	0					
ANR	329297	Label	case FILE_BELDATE :	697:1:16953:16970	329159	35	True				
ANR	329298	Identifier	FILE_BELDATE		329159	0					
ANR	329299	Label	case FILE_MELDATE :	698:1:16973:16990	329159	36	True				
ANR	329300	Identifier	FILE_MELDATE		329159	0					
ANR	329301	Label	case FILE_FLOAT :	699:1:16993:17008	329159	37	True				
ANR	329302	Identifier	FILE_FLOAT		329159	0					
ANR	329303	Label	case FILE_BEFLOAT :	700:1:17011:17028	329159	38	True				
ANR	329304	Identifier	FILE_BEFLOAT		329159	0					
ANR	329305	Label	case FILE_LEFLOAT :	701:1:17031:17048	329159	39	True				
ANR	329306	Identifier	FILE_LEFLOAT		329159	0					
ANR	329307	ExpressionStatement	val += 4 * MULT	702:2:17052:17067	329159	40	True				
ANR	329308	AssignmentExpression	val += 4 * MULT		329159	0		+=			
ANR	329309	Identifier	val		329159	0					
ANR	329310	MultiplicativeExpression	4 * MULT		329159	1		*			
ANR	329311	PrimaryExpression	4		329159	0					
ANR	329312	Identifier	MULT		329159	1					
ANR	329313	BreakStatement	break ;	703:2:17071:17076	329159	41	True				
ANR	329314	Label	case FILE_QUAD :	705:1:17080:17094	329159	42	True				
ANR	329315	Identifier	FILE_QUAD		329159	0					
ANR	329316	Label	case FILE_BEQUAD :	706:1:17097:17113	329159	43	True				
ANR	329317	Identifier	FILE_BEQUAD		329159	0					
ANR	329318	Label	case FILE_LEQUAD :	707:1:17116:17132	329159	44	True				
ANR	329319	Identifier	FILE_LEQUAD		329159	0					
ANR	329320	Label	case FILE_QDATE :	708:1:17135:17150	329159	45	True				
ANR	329321	Identifier	FILE_QDATE		329159	0					
ANR	329322	Label	case FILE_LEQDATE :	709:1:17153:17170	329159	46	True				
ANR	329323	Identifier	FILE_LEQDATE		329159	0					
ANR	329324	Label	case FILE_BEQDATE :	710:1:17173:17190	329159	47	True				
ANR	329325	Identifier	FILE_BEQDATE		329159	0					
ANR	329326	Label	case FILE_QLDATE :	711:1:17193:17209	329159	48	True				
ANR	329327	Identifier	FILE_QLDATE		329159	0					
ANR	329328	Label	case FILE_LEQLDATE :	712:1:17212:17230	329159	49	True				
ANR	329329	Identifier	FILE_LEQLDATE		329159	0					
ANR	329330	Label	case FILE_BEQLDATE :	713:1:17233:17251	329159	50	True				
ANR	329331	Identifier	FILE_BEQLDATE		329159	0					
ANR	329332	Label	case FILE_QWDATE :	714:1:17254:17270	329159	51	True				
ANR	329333	Identifier	FILE_QWDATE		329159	0					
ANR	329334	Label	case FILE_LEQWDATE :	715:1:17273:17291	329159	52	True				
ANR	329335	Identifier	FILE_LEQWDATE		329159	0					
ANR	329336	Label	case FILE_BEQWDATE :	716:1:17294:17312	329159	53	True				
ANR	329337	Identifier	FILE_BEQWDATE		329159	0					
ANR	329338	Label	case FILE_DOUBLE :	717:1:17315:17331	329159	54	True				
ANR	329339	Identifier	FILE_DOUBLE		329159	0					
ANR	329340	Label	case FILE_BEDOUBLE :	718:1:17334:17352	329159	55	True				
ANR	329341	Identifier	FILE_BEDOUBLE		329159	0					
ANR	329342	Label	case FILE_LEDOUBLE :	719:1:17355:17373	329159	56	True				
ANR	329343	Identifier	FILE_LEDOUBLE		329159	0					
ANR	329344	ExpressionStatement	val += 8 * MULT	720:2:17377:17392	329159	57	True				
ANR	329345	AssignmentExpression	val += 8 * MULT		329159	0		+=			
ANR	329346	Identifier	val		329159	0					
ANR	329347	MultiplicativeExpression	8 * MULT		329159	1		*			
ANR	329348	PrimaryExpression	8		329159	0					
ANR	329349	Identifier	MULT		329159	1					
ANR	329350	BreakStatement	break ;	721:2:17396:17401	329159	58	True				
ANR	329351	Label	case FILE_INDIRECT :	723:1:17405:17423	329159	59	True				
ANR	329352	Identifier	FILE_INDIRECT		329159	0					
ANR	329353	Label	case FILE_NAME :	724:1:17426:17440	329159	60	True				
ANR	329354	Identifier	FILE_NAME		329159	0					
ANR	329355	Label	case FILE_USE :	725:1:17443:17456	329159	61	True				
ANR	329356	Identifier	FILE_USE		329159	0					
ANR	329357	BreakStatement	break ;	726:2:17460:17465	329159	62	True				
ANR	329358	Label	default :	728:1:17469:17476	329159	63	True				
ANR	329359	Identifier	default		329159	0					
ANR	329360	ExpressionStatement	val = 0	729:2:17480:17487	329159	64	True				
ANR	329361	AssignmentExpression	val = 0		329159	0		=			
ANR	329362	Identifier	val		329159	0					
ANR	329363	PrimaryExpression	0		329159	1					
ANR	329364	ExpressionStatement	"( void ) fprintf ( stderr , ""Bad type %d\\n"" , m -> type )"	730:2:17491:17538	329159	65	True				
ANR	329365	CastExpression	"( void ) fprintf ( stderr , ""Bad type %d\\n"" , m -> type )"		329159	0					
ANR	329366	CastTarget	void		329159	0					
ANR	329367	CallExpression	"fprintf ( stderr , ""Bad type %d\\n"" , m -> type )"		329159	1					
ANR	329368	Callee	fprintf		329159	0					
ANR	329369	Identifier	fprintf		329159	0					
ANR	329370	ArgumentList	stderr		329159	1					
ANR	329371	Argument	stderr		329159	0					
ANR	329372	Identifier	stderr		329159	0					
ANR	329373	Argument	"""Bad type %d\\n"""		329159	1					
ANR	329374	PrimaryExpression	"""Bad type %d\\n"""		329159	0					
ANR	329375	Argument	m -> type		329159	2					
ANR	329376	PtrMemberAccess	m -> type		329159	0					
ANR	329377	Identifier	m		329159	0					
ANR	329378	Identifier	type		329159	1					
ANR	329379	ExpressionStatement	abort ( )	731:2:17542:17549	329159	66	True				
ANR	329380	CallExpression	abort ( )		329159	0					
ANR	329381	Callee	abort		329159	0					
ANR	329382	Identifier	abort		329159	0					
ANR	329383	ArgumentList			329159	1					
ANR	329384	SwitchStatement	switch ( m -> reln )		329159	5					
ANR	329385	Condition	m -> reln	734:9:17564:17570	329159	0	True				
ANR	329386	PtrMemberAccess	m -> reln		329159	0					
ANR	329387	Identifier	m		329159	0					
ANR	329388	Identifier	reln		329159	1					
ANR	329389	CompoundStatement		86:18:1432:1432	329159	1					
ANR	329390	Label	case 'x' :	735:1:17576:17584	329159	0	True				
ANR	329391	Label	case '!' :	736:1:17619:17627	329159	1	True				
ANR	329392	ExpressionStatement	val = 0	737:2:17676:17683	329159	2	True				
ANR	329393	AssignmentExpression	val = 0		329159	0		=			
ANR	329394	Identifier	val		329159	0					
ANR	329395	PrimaryExpression	0		329159	1					
ANR	329396	BreakStatement	break ;	738:2:17687:17692	329159	3	True				
ANR	329397	Label	case '=' :	740:1:17696:17704	329159	4	True				
ANR	329398	ExpressionStatement	val += MULT	741:2:17734:17745	329159	5	True				
ANR	329399	AssignmentExpression	val += MULT		329159	0		+=			
ANR	329400	Identifier	val		329159	0					
ANR	329401	Identifier	MULT		329159	1					
ANR	329402	BreakStatement	break ;	742:2:17749:17754	329159	6	True				
ANR	329403	Label	case '>' :	744:1:17758:17766	329159	7	True				
ANR	329404	Label	case '<' :	745:1:17769:17777	329159	8	True				
ANR	329405	ExpressionStatement	val -= 2 * MULT	746:2:17820:17835	329159	9	True				
ANR	329406	AssignmentExpression	val -= 2 * MULT		329159	0		-=			
ANR	329407	Identifier	val		329159	0					
ANR	329408	MultiplicativeExpression	2 * MULT		329159	1		*			
ANR	329409	PrimaryExpression	2		329159	0					
ANR	329410	Identifier	MULT		329159	1					
ANR	329411	BreakStatement	break ;	747:2:17839:17844	329159	10	True				
ANR	329412	Label	case '^' :	749:1:17848:17856	329159	11	True				
ANR	329413	Label	case '&' :	750:1:17859:17867	329159	12	True				
ANR	329414	ExpressionStatement	val -= MULT	751:2:17915:17926	329159	13	True				
ANR	329415	AssignmentExpression	val -= MULT		329159	0		-=			
ANR	329416	Identifier	val		329159	0					
ANR	329417	Identifier	MULT		329159	1					
ANR	329418	BreakStatement	break ;	752:2:17930:17935	329159	14	True				
ANR	329419	Label	default :	754:1:17939:17946	329159	15	True				
ANR	329420	Identifier	default		329159	0					
ANR	329421	ExpressionStatement	"( void ) fprintf ( stderr , ""Bad relation %c\\n"" , m -> reln )"	755:2:17950:18001	329159	16	True				
ANR	329422	CastExpression	"( void ) fprintf ( stderr , ""Bad relation %c\\n"" , m -> reln )"		329159	0					
ANR	329423	CastTarget	void		329159	0					
ANR	329424	CallExpression	"fprintf ( stderr , ""Bad relation %c\\n"" , m -> reln )"		329159	1					
ANR	329425	Callee	fprintf		329159	0					
ANR	329426	Identifier	fprintf		329159	0					
ANR	329427	ArgumentList	stderr		329159	1					
ANR	329428	Argument	stderr		329159	0					
ANR	329429	Identifier	stderr		329159	0					
ANR	329430	Argument	"""Bad relation %c\\n"""		329159	1					
ANR	329431	PrimaryExpression	"""Bad relation %c\\n"""		329159	0					
ANR	329432	Argument	m -> reln		329159	2					
ANR	329433	PtrMemberAccess	m -> reln		329159	0					
ANR	329434	Identifier	m		329159	0					
ANR	329435	Identifier	reln		329159	1					
ANR	329436	ExpressionStatement	abort ( )	756:2:18005:18012	329159	17	True				
ANR	329437	CallExpression	abort ( )		329159	0					
ANR	329438	Callee	abort		329159	0					
ANR	329439	Identifier	abort		329159	0					
ANR	329440	ArgumentList			329159	1					
ANR	329441	IfStatement	if ( val == 0 )		329159	6					
ANR	329442	Condition	val == 0	759:5:18023:18030	329159	0	True				
ANR	329443	EqualityExpression	val == 0		329159	0		==			
ANR	329444	Identifier	val		329159	0					
ANR	329445	PrimaryExpression	0		329159	1					
ANR	329446	ExpressionStatement	val = 1	760:2:18082:18089	329159	1	True				
ANR	329447	AssignmentExpression	val = 1		329159	0		=			
ANR	329448	Identifier	val		329159	0					
ANR	329449	PrimaryExpression	1		329159	1					
ANR	329450	SwitchStatement	switch ( m -> factor_op )		329159	7					
ANR	329451	Condition	m -> factor_op	762:9:18101:18112	329159	0	True				
ANR	329452	PtrMemberAccess	m -> factor_op		329159	0					
ANR	329453	Identifier	m		329159	0					
ANR	329454	Identifier	factor_op		329159	1					
ANR	329455	CompoundStatement		114:23:1974:1974	329159	1					
ANR	329456	Label	case FILE_FACTOR_OP_NONE :	763:1:18118:18142	329159	0	True				
ANR	329457	Identifier	FILE_FACTOR_OP_NONE		329159	0					
ANR	329458	BreakStatement	break ;	764:2:18146:18151	329159	1	True				
ANR	329459	Label	case FILE_FACTOR_OP_PLUS :	765:1:18154:18178	329159	2	True				
ANR	329460	Identifier	FILE_FACTOR_OP_PLUS		329159	0					
ANR	329461	ExpressionStatement	val += m -> factor	766:2:18182:18198	329159	3	True				
ANR	329462	AssignmentExpression	val += m -> factor		329159	0		+=			
ANR	329463	Identifier	val		329159	0					
ANR	329464	PtrMemberAccess	m -> factor		329159	1					
ANR	329465	Identifier	m		329159	0					
ANR	329466	Identifier	factor		329159	1					
ANR	329467	BreakStatement	break ;	767:2:18202:18207	329159	4	True				
ANR	329468	Label	case FILE_FACTOR_OP_MINUS :	768:1:18210:18235	329159	5	True				
ANR	329469	Identifier	FILE_FACTOR_OP_MINUS		329159	0					
ANR	329470	ExpressionStatement	val -= m -> factor	769:2:18239:18255	329159	6	True				
ANR	329471	AssignmentExpression	val -= m -> factor		329159	0		-=			
ANR	329472	Identifier	val		329159	0					
ANR	329473	PtrMemberAccess	m -> factor		329159	1					
ANR	329474	Identifier	m		329159	0					
ANR	329475	Identifier	factor		329159	1					
ANR	329476	BreakStatement	break ;	770:2:18259:18264	329159	7	True				
ANR	329477	Label	case FILE_FACTOR_OP_TIMES :	771:1:18267:18292	329159	8	True				
ANR	329478	Identifier	FILE_FACTOR_OP_TIMES		329159	0					
ANR	329479	ExpressionStatement	val *= m -> factor	772:2:18296:18312	329159	9	True				
ANR	329480	AssignmentExpression	val *= m -> factor		329159	0		*=			
ANR	329481	Identifier	val		329159	0					
ANR	329482	PtrMemberAccess	m -> factor		329159	1					
ANR	329483	Identifier	m		329159	0					
ANR	329484	Identifier	factor		329159	1					
ANR	329485	BreakStatement	break ;	773:2:18316:18321	329159	10	True				
ANR	329486	Label	case FILE_FACTOR_OP_DIV :	774:1:18324:18347	329159	11	True				
ANR	329487	Identifier	FILE_FACTOR_OP_DIV		329159	0					
ANR	329488	ExpressionStatement	val /= m -> factor	775:2:18351:18367	329159	12	True				
ANR	329489	AssignmentExpression	val /= m -> factor		329159	0		/=			
ANR	329490	Identifier	val		329159	0					
ANR	329491	PtrMemberAccess	m -> factor		329159	1					
ANR	329492	Identifier	m		329159	0					
ANR	329493	Identifier	factor		329159	1					
ANR	329494	BreakStatement	break ;	776:2:18371:18376	329159	13	True				
ANR	329495	Label	default :	777:1:18379:18386	329159	14	True				
ANR	329496	Identifier	default		329159	0					
ANR	329497	ExpressionStatement	abort ( )	778:2:18390:18397	329159	15	True				
ANR	329498	CallExpression	abort ( )		329159	0					
ANR	329499	Callee	abort		329159	0					
ANR	329500	Identifier	abort		329159	0					
ANR	329501	ArgumentList			329159	1					
ANR	329502	IfStatement	if ( m -> desc [ 0 ] == '\\0' )		329159	8					
ANR	329503	Condition	m -> desc [ 0 ] == '\\0'	785:5:18539:18556	329159	0	True				
ANR	329504	EqualityExpression	m -> desc [ 0 ] == '\\0'		329159	0		==			
ANR	329505	ArrayIndexing	m -> desc [ 0 ]		329159	0					
ANR	329506	PtrMemberAccess	m -> desc		329159	0					
ANR	329507	Identifier	m		329159	0					
ANR	329508	Identifier	desc		329159	1					
ANR	329509	PrimaryExpression	0		329159	1					
ANR	329510	PrimaryExpression	'\\0'		329159	1					
ANR	329511	ExpressionStatement	val ++	786:2:18561:18566	329159	1	True				
ANR	329512	PostIncDecOperationExpression	val ++		329159	0					
ANR	329513	Identifier	val		329159	0					
ANR	329514	IncDec	++		329159	1					
ANR	329515	ReturnStatement	return val ;	787:1:18569:18579	329159	9	True				
ANR	329516	Identifier	val		329159	0					
ANR	329517	ReturnType	size_t		329159	1					
ANR	329518	Identifier	apprentice_magic_strength		329159	2					
ANR	329519	ParameterList	const struct magic * m		329159	3					
ANR	329520	Parameter	const struct magic * m	648:26:16117:16137	329159	0	True				
ANR	329521	ParameterType	const struct magic *		329159	0					
ANR	329522	Identifier	m		329159	1					
ANR	329523	CFGEntryNode	ENTRY		329159		True				
ANR	329524	CFGExitNode	EXIT		329159		True				
ANR	329525	Symbol	val		329159						
ANR	329526	Symbol	* m -> desc		329159						
ANR	329527	Symbol	MAX		329159						
ANR	329528	Symbol	m -> factor_op		329159						
ANR	329529	Symbol	FILE_FACTOR_OP_NONE		329159						
ANR	329530	Symbol	stderr		329159						
ANR	329531	Symbol	m		329159						
ANR	329532	Symbol	m -> type		329159						
ANR	329533	Symbol	m -> factor		329159						
ANR	329534	Symbol	m -> desc		329159						
ANR	329535	Symbol	MULT		329159						
ANR	329536	Symbol	* m		329159						
ANR	329537	Symbol	m -> reln		329159						
ANR	329538	Symbol	m -> vallen		329159						
ANR	329539	Symbol	* * m		329159						
ANR	329540	Function	apprentice_sort	793:8:18671:19034							
ANR	329541	FunctionDef	"apprentice_sort (const void * a , const void * b)"		329540	0					
ANR	329542	CompoundStatement		795:0:18721:19034	329540	0					
ANR	329543	Statement	const	796:1:18724:18728	329540	0	True				
ANR	329544	Statement	struct	796:7:18730:18735	329540	1	True				
ANR	329545	Statement	magic_entry	796:14:18737:18747	329540	2	True				
ANR	329546	Statement	*	796:26:18749:18749	329540	3	True				
ANR	329547	Statement	ma	796:27:18750:18751	329540	4	True				
ANR	329548	Statement	=	796:30:18753:18753	329540	5	True				
ANR	329549	Statement	CAST	796:32:18755:18758	329540	6	True				
ANR	329550	Statement	(	796:36:18759:18759	329540	7	True				
ANR	329551	Statement	const	796:37:18760:18764	329540	8	True				
ANR	329552	Statement	struct	796:43:18766:18771	329540	9	True				
ANR	329553	Statement	magic_entry	796:50:18773:18783	329540	10	True				
ANR	329554	Statement	*	796:62:18785:18785	329540	11	True				
ANR	329555	Statement	","	796:63:18786:18786	329540	12	True				
ANR	329556	Statement	a	796:65:18788:18788	329540	13	True				
ANR	329557	Statement	)	796:66:18789:18789	329540	14	True				
ANR	329558	ExpressionStatement		796:67:18790:18790	329540	15	True				
ANR	329559	Statement	const	797:1:18793:18797	329540	16	True				
ANR	329560	Statement	struct	797:7:18799:18804	329540	17	True				
ANR	329561	Statement	magic_entry	797:14:18806:18816	329540	18	True				
ANR	329562	Statement	*	797:26:18818:18818	329540	19	True				
ANR	329563	Statement	mb	797:27:18819:18820	329540	20	True				
ANR	329564	Statement	=	797:30:18822:18822	329540	21	True				
ANR	329565	Statement	CAST	797:32:18824:18827	329540	22	True				
ANR	329566	Statement	(	797:36:18828:18828	329540	23	True				
ANR	329567	Statement	const	797:37:18829:18833	329540	24	True				
ANR	329568	Statement	struct	797:43:18835:18840	329540	25	True				
ANR	329569	Statement	magic_entry	797:50:18842:18852	329540	26	True				
ANR	329570	Statement	*	797:62:18854:18854	329540	27	True				
ANR	329571	Statement	","	797:63:18855:18855	329540	28	True				
ANR	329572	Statement	b	797:65:18857:18857	329540	29	True				
ANR	329573	Statement	)	797:66:18858:18858	329540	30	True				
ANR	329574	ExpressionStatement		797:67:18859:18859	329540	31	True				
ANR	329575	IdentifierDeclStatement	size_t sa = apprentice_magic_strength ( ma -> mp ) ;	798:1:18862:18907	329540	32	True				
ANR	329576	IdentifierDecl	sa = apprentice_magic_strength ( ma -> mp )		329540	0					
ANR	329577	IdentifierDeclType	size_t		329540	0					
ANR	329578	Identifier	sa		329540	1					
ANR	329579	AssignmentExpression	sa = apprentice_magic_strength ( ma -> mp )		329540	2		=			
ANR	329580	Identifier	sa		329540	0					
ANR	329581	CallExpression	apprentice_magic_strength ( ma -> mp )		329540	1					
ANR	329582	Callee	apprentice_magic_strength		329540	0					
ANR	329583	Identifier	apprentice_magic_strength		329540	0					
ANR	329584	ArgumentList	ma -> mp		329540	1					
ANR	329585	Argument	ma -> mp		329540	0					
ANR	329586	PtrMemberAccess	ma -> mp		329540	0					
ANR	329587	Identifier	ma		329540	0					
ANR	329588	Identifier	mp		329540	1					
ANR	329589	IdentifierDeclStatement	size_t sb = apprentice_magic_strength ( mb -> mp ) ;	799:1:18910:18955	329540	33	True				
ANR	329590	IdentifierDecl	sb = apprentice_magic_strength ( mb -> mp )		329540	0					
ANR	329591	IdentifierDeclType	size_t		329540	0					
ANR	329592	Identifier	sb		329540	1					
ANR	329593	AssignmentExpression	sb = apprentice_magic_strength ( mb -> mp )		329540	2		=			
ANR	329594	Identifier	sb		329540	0					
ANR	329595	CallExpression	apprentice_magic_strength ( mb -> mp )		329540	1					
ANR	329596	Callee	apprentice_magic_strength		329540	0					
ANR	329597	Identifier	apprentice_magic_strength		329540	0					
ANR	329598	ArgumentList	mb -> mp		329540	1					
ANR	329599	Argument	mb -> mp		329540	0					
ANR	329600	PtrMemberAccess	mb -> mp		329540	0					
ANR	329601	Identifier	mb		329540	0					
ANR	329602	Identifier	mp		329540	1					
ANR	329603	IfStatement	if ( sa == sb )		329540	34					
ANR	329604	Condition	sa == sb	800:5:18962:18969	329540	0	True				
ANR	329605	EqualityExpression	sa == sb		329540	0		==			
ANR	329606	Identifier	sa		329540	0					
ANR	329607	Identifier	sb		329540	1					
ANR	329608	ReturnStatement	return 0 ;	801:2:18974:18982	329540	1	True				
ANR	329609	PrimaryExpression	0		329540	0					
ANR	329610	ElseStatement	else		329540	0					
ANR	329611	IfStatement	if ( sa > sb )		329540	0					
ANR	329612	Condition	sa > sb	802:10:18994:19000	329540	0	True				
ANR	329613	RelationalExpression	sa > sb		329540	0		>			
ANR	329614	Identifier	sa		329540	0					
ANR	329615	Identifier	sb		329540	1					
ANR	329616	ReturnStatement	return - 1 ;	803:2:19005:19014	329540	1	True				
ANR	329617	UnaryOperationExpression	- 1		329540	0					
ANR	329618	UnaryOperator	-		329540	0					
ANR	329619	PrimaryExpression	1		329540	1					
ANR	329620	ElseStatement	else		329540	0					
ANR	329621	ReturnStatement	return 1 ;	805:2:19024:19032	329540	0	True				
ANR	329622	PrimaryExpression	1		329540	0					
ANR	329623	ReturnType	int		329540	1					
ANR	329624	Identifier	apprentice_sort		329540	2					
ANR	329625	ParameterList	"const void * a , const void * b"		329540	3					
ANR	329626	Parameter	const void * a	794:16:18691:18703	329540	0	True				
ANR	329627	ParameterType	const void *		329540	0					
ANR	329628	Identifier	a		329540	1					
ANR	329629	Parameter	const void * b	794:31:18706:18718	329540	1	True				
ANR	329630	ParameterType	const void *		329540	0					
ANR	329631	Identifier	b		329540	1					
ANR	329632	CFGEntryNode	ENTRY		329540		True				
ANR	329633	CFGExitNode	EXIT		329540		True				
ANR	329634	Symbol	a		329540						
ANR	329635	Symbol	b		329540						
ANR	329636	Symbol	mb -> mp		329540						
ANR	329637	Symbol	ma		329540						
ANR	329638	Symbol	mb		329540						
ANR	329639	Symbol	ma -> mp		329540						
ANR	329640	Symbol	* mb		329540						
ANR	329641	Symbol	* ma		329540						
ANR	329642	Symbol	sa		329540						
ANR	329643	Symbol	apprentice_magic_strength		329540						
ANR	329644	Symbol	sb		329540						
ANR	329645	Function	apprentice_list	811:8:19128:20079							
ANR	329646	FunctionDef	"apprentice_list (struct mlist * mlist , int mode)"		329645	0					
ANR	329647	CompoundStatement		813:0:19180:20079	329645	0					
ANR	329648	IdentifierDeclStatement	uint32_t magindex = 0 ;	814:1:19183:19204	329645	0	True				
ANR	329649	IdentifierDecl	magindex = 0		329645	0					
ANR	329650	IdentifierDeclType	uint32_t		329645	0					
ANR	329651	Identifier	magindex		329645	1					
ANR	329652	AssignmentExpression	magindex = 0		329645	2		=			
ANR	329653	Identifier	magindex		329645	0					
ANR	329654	PrimaryExpression	0		329645	1					
ANR	329655	IdentifierDeclStatement	struct mlist * ml ;	815:1:19207:19223	329645	1	True				
ANR	329656	IdentifierDecl	* ml		329645	0					
ANR	329657	IdentifierDeclType	struct mlist *		329645	0					
ANR	329658	Identifier	ml		329645	1					
ANR	329659	ForStatement	for ( ml = mlist -> next ; ml != mlist ; ml = ml -> next )		329645	2					
ANR	329660	ForInit	ml = mlist -> next ;	816:6:19231:19247	329645	0	True				
ANR	329661	AssignmentExpression	ml = mlist -> next		329645	0		=			
ANR	329662	Identifier	ml		329645	0					
ANR	329663	PtrMemberAccess	mlist -> next		329645	1					
ANR	329664	Identifier	mlist		329645	0					
ANR	329665	Identifier	next		329645	1					
ANR	329666	Condition	ml != mlist	816:24:19249:19259	329645	1	True				
ANR	329667	EqualityExpression	ml != mlist		329645	0		!=			
ANR	329668	Identifier	ml		329645	0					
ANR	329669	Identifier	mlist		329645	1					
ANR	329670	AssignmentExpression	ml = ml -> next	816:37:19262:19274	329645	2	True	=			
ANR	329671	Identifier	ml		329645	0					
ANR	329672	PtrMemberAccess	ml -> next		329645	1					
ANR	329673	Identifier	ml		329645	0					
ANR	329674	Identifier	next		329645	1					
ANR	329675	CompoundStatement		4:52:96:96	329645	3					
ANR	329676	ForStatement	for ( magindex = 0 ; magindex < ml -> nmagic ; magindex ++ )		329645	0					
ANR	329677	ForInit	magindex = 0 ;	817:7:19286:19298	329645	0	True				
ANR	329678	AssignmentExpression	magindex = 0		329645	0		=			
ANR	329679	Identifier	magindex		329645	0					
ANR	329680	PrimaryExpression	0		329645	1					
ANR	329681	Condition	magindex < ml -> nmagic	817:21:19300:19320	329645	1	True				
ANR	329682	RelationalExpression	magindex < ml -> nmagic		329645	0		<			
ANR	329683	Identifier	magindex		329645	0					
ANR	329684	PtrMemberAccess	ml -> nmagic		329645	1					
ANR	329685	Identifier	ml		329645	0					
ANR	329686	Identifier	nmagic		329645	1					
ANR	329687	PostIncDecOperationExpression	magindex ++	817:44:19323:19332	329645	2	True				
ANR	329688	Identifier	magindex		329645	0					
ANR	329689	IncDec	++		329645	1					
ANR	329690	CompoundStatement		6:3:159:197	329645	3					
ANR	329691	IdentifierDeclStatement	struct magic * m = & ml -> magic [ magindex ] ;	818:3:19340:19378	329645	0	True				
ANR	329692	IdentifierDecl	* m = & ml -> magic [ magindex ]		329645	0					
ANR	329693	IdentifierDeclType	struct magic *		329645	0					
ANR	329694	Identifier	m		329645	1					
ANR	329695	AssignmentExpression	* m = & ml -> magic [ magindex ]		329645	2		=			
ANR	329696	Identifier	m		329645	0					
ANR	329697	UnaryOperationExpression	& ml -> magic [ magindex ]		329645	1					
ANR	329698	UnaryOperator	&		329645	0					
ANR	329699	ArrayIndexing	ml -> magic [ magindex ]		329645	1					
ANR	329700	PtrMemberAccess	ml -> magic		329645	0					
ANR	329701	Identifier	ml		329645	0					
ANR	329702	Identifier	magic		329645	1					
ANR	329703	Identifier	magindex		329645	1					
ANR	329704	IfStatement	if ( ( m -> flag & mode ) != mode )		329645	1					
ANR	329705	Condition	( m -> flag & mode ) != mode	819:7:19387:19410	329645	0	True				
ANR	329706	EqualityExpression	( m -> flag & mode ) != mode		329645	0		!=			
ANR	329707	BitAndExpression	m -> flag & mode		329645	0		&			
ANR	329708	PtrMemberAccess	m -> flag		329645	0					
ANR	329709	Identifier	m		329645	0					
ANR	329710	Identifier	flag		329645	1					
ANR	329711	Identifier	mode		329645	1					
ANR	329712	Identifier	mode		329645	1					
ANR	329713	CompoundStatement		7:33:232:232	329645	1					
ANR	329714	WhileStatement	while ( magindex + 1 < ml -> nmagic && ml -> magic [ magindex + 1 ] . cont_level != 0 )		329645	0					
ANR	329715	Condition	magindex + 1 < ml -> nmagic && ml -> magic [ magindex + 1 ] . cont_level != 0	821:11:19451:19529	329645	0	True				
ANR	329716	AndExpression	magindex + 1 < ml -> nmagic && ml -> magic [ magindex + 1 ] . cont_level != 0		329645	0		&&			
ANR	329717	RelationalExpression	magindex + 1 < ml -> nmagic		329645	0		<			
ANR	329718	AdditiveExpression	magindex + 1		329645	0		+			
ANR	329719	Identifier	magindex		329645	0					
ANR	329720	PrimaryExpression	1		329645	1					
ANR	329721	PtrMemberAccess	ml -> nmagic		329645	1					
ANR	329722	Identifier	ml		329645	0					
ANR	329723	Identifier	nmagic		329645	1					
ANR	329724	EqualityExpression	ml -> magic [ magindex + 1 ] . cont_level != 0		329645	1		!=			
ANR	329725	MemberAccess	ml -> magic [ magindex + 1 ] . cont_level		329645	0					
ANR	329726	ArrayIndexing	ml -> magic [ magindex + 1 ]		329645	0					
ANR	329727	PtrMemberAccess	ml -> magic		329645	0					
ANR	329728	Identifier	ml		329645	0					
ANR	329729	Identifier	magic		329645	1					
ANR	329730	AdditiveExpression	magindex + 1		329645	1		+			
ANR	329731	Identifier	magindex		329645	0					
ANR	329732	PrimaryExpression	1		329645	1					
ANR	329733	Identifier	cont_level		329645	1					
ANR	329734	PrimaryExpression	0		329645	1					
ANR	329735	ExpressionStatement	++ magindex	823:5:19537:19547	329645	1	True				
ANR	329736	UnaryExpression	++ magindex		329645	0					
ANR	329737	IncDec	++		329645	0					
ANR	329738	Identifier	magindex		329645	1					
ANR	329739	ContinueStatement	continue ;	824:4:19553:19561	329645	1	True				
ANR	329740	WhileStatement	while ( magindex + 1 < ml -> nmagic && ml -> magic [ magindex + 1 ] . cont_level != 0 && * ml -> magic [ magindex ] . desc == '\\0' && * ml -> magic [ magindex ] . mimetype == '\\0' )		329645	2					
ANR	329741	Condition	magindex + 1 < ml -> nmagic && ml -> magic [ magindex + 1 ] . cont_level != 0 && * ml -> magic [ magindex ] . desc == '\\0' && * ml -> magic [ magindex ] . mimetype == '\\0'	831:10:19712:19887	329645	0	True				
ANR	329742	AndExpression	magindex + 1 < ml -> nmagic && ml -> magic [ magindex + 1 ] . cont_level != 0 && * ml -> magic [ magindex ] . desc == '\\0' && * ml -> magic [ magindex ] . mimetype == '\\0'		329645	0		&&			
ANR	329743	RelationalExpression	magindex + 1 < ml -> nmagic		329645	0		<			
ANR	329744	AdditiveExpression	magindex + 1		329645	0		+			
ANR	329745	Identifier	magindex		329645	0					
ANR	329746	PrimaryExpression	1		329645	1					
ANR	329747	PtrMemberAccess	ml -> nmagic		329645	1					
ANR	329748	Identifier	ml		329645	0					
ANR	329749	Identifier	nmagic		329645	1					
ANR	329750	AndExpression	ml -> magic [ magindex + 1 ] . cont_level != 0 && * ml -> magic [ magindex ] . desc == '\\0' && * ml -> magic [ magindex ] . mimetype == '\\0'		329645	1		&&			
ANR	329751	EqualityExpression	ml -> magic [ magindex + 1 ] . cont_level != 0		329645	0		!=			
ANR	329752	MemberAccess	ml -> magic [ magindex + 1 ] . cont_level		329645	0					
ANR	329753	ArrayIndexing	ml -> magic [ magindex + 1 ]		329645	0					
ANR	329754	PtrMemberAccess	ml -> magic		329645	0					
ANR	329755	Identifier	ml		329645	0					
ANR	329756	Identifier	magic		329645	1					
ANR	329757	AdditiveExpression	magindex + 1		329645	1		+			
ANR	329758	Identifier	magindex		329645	0					
ANR	329759	PrimaryExpression	1		329645	1					
ANR	329760	Identifier	cont_level		329645	1					
ANR	329761	PrimaryExpression	0		329645	1					
ANR	329762	AndExpression	* ml -> magic [ magindex ] . desc == '\\0' && * ml -> magic [ magindex ] . mimetype == '\\0'		329645	1		&&			
ANR	329763	EqualityExpression	* ml -> magic [ magindex ] . desc == '\\0'		329645	0		==			
ANR	329764	UnaryOperationExpression	* ml -> magic [ magindex ] . desc		329645	0					
ANR	329765	UnaryOperator	*		329645	0					
ANR	329766	MemberAccess	ml -> magic [ magindex ] . desc		329645	1					
ANR	329767	ArrayIndexing	ml -> magic [ magindex ]		329645	0					
ANR	329768	PtrMemberAccess	ml -> magic		329645	0					
ANR	329769	Identifier	ml		329645	0					
ANR	329770	Identifier	magic		329645	1					
ANR	329771	Identifier	magindex		329645	1					
ANR	329772	Identifier	desc		329645	1					
ANR	329773	PrimaryExpression	'\\0'		329645	1					
ANR	329774	EqualityExpression	* ml -> magic [ magindex ] . mimetype == '\\0'		329645	1		==			
ANR	329775	UnaryOperationExpression	* ml -> magic [ magindex ] . mimetype		329645	0					
ANR	329776	UnaryOperator	*		329645	0					
ANR	329777	MemberAccess	ml -> magic [ magindex ] . mimetype		329645	1					
ANR	329778	ArrayIndexing	ml -> magic [ magindex ]		329645	0					
ANR	329779	PtrMemberAccess	ml -> magic		329645	0					
ANR	329780	Identifier	ml		329645	0					
ANR	329781	Identifier	magic		329645	1					
ANR	329782	Identifier	magindex		329645	1					
ANR	329783	Identifier	mimetype		329645	1					
ANR	329784	PrimaryExpression	'\\0'		329645	1					
ANR	329785	ExpressionStatement	magindex ++	835:4:19894:19904	329645	1	True				
ANR	329786	PostIncDecOperationExpression	magindex ++		329645	0					
ANR	329787	Identifier	magindex		329645	0					
ANR	329788	IncDec	++		329645	1					
ANR	329789	Statement	printf	837:3:19910:19915	329645	3	True				
ANR	329790	Statement	(	837:9:19916:19916	329645	4	True				
ANR	329791	Statement	"""Strength = %3"""	837:10:19917:19931	329645	5	True				
ANR	329792	Statement	SIZE_T_FORMAT	837:26:19933:19945	329645	6	True				
ANR	329793	Statement	"""u : %s [%s]\\n"""	837:40:19947:19961	329645	7	True				
ANR	329794	Statement	","	837:55:19962:19962	329645	8	True				
ANR	329795	Statement	apprentice_magic_strength	838:7:19971:19995	329645	9	True				
ANR	329796	Statement	(	838:32:19996:19996	329645	10	True				
ANR	329797	Statement	m	838:33:19997:19997	329645	11	True				
ANR	329798	Statement	)	838:34:19998:19998	329645	12	True				
ANR	329799	Statement	","	838:35:19999:19999	329645	13	True				
ANR	329800	Statement	ml	839:7:20008:20009	329645	14	True				
ANR	329801	Statement	->	839:9:20010:20011	329645	15	True				
ANR	329802	Statement	magic	839:11:20012:20016	329645	16	True				
ANR	329803	Statement	[	839:16:20017:20017	329645	17	True				
ANR	329804	Statement	magindex	839:17:20018:20025	329645	18	True				
ANR	329805	Statement	]	839:25:20026:20026	329645	19	True				
ANR	329806	Statement	.	839:26:20027:20027	329645	20	True				
ANR	329807	Statement	desc	839:27:20028:20031	329645	21	True				
ANR	329808	Statement	","	839:31:20032:20032	329645	22	True				
ANR	329809	Statement	ml	840:7:20041:20042	329645	23	True				
ANR	329810	Statement	->	840:9:20043:20044	329645	24	True				
ANR	329811	Statement	magic	840:11:20045:20049	329645	25	True				
ANR	329812	Statement	[	840:16:20050:20050	329645	26	True				
ANR	329813	Statement	magindex	840:17:20051:20058	329645	27	True				
ANR	329814	Statement	]	840:25:20059:20059	329645	28	True				
ANR	329815	Statement	.	840:26:20060:20060	329645	29	True				
ANR	329816	Statement	mimetype	840:27:20061:20068	329645	30	True				
ANR	329817	Statement	)	840:35:20069:20069	329645	31	True				
ANR	329818	ExpressionStatement		840:36:20070:20070	329645	32	True				
ANR	329819	ReturnType	void		329645	1					
ANR	329820	Identifier	apprentice_list		329645	2					
ANR	329821	ParameterList	"struct mlist * mlist , int mode"		329645	3					
ANR	329822	Parameter	struct mlist * mlist	812:16:19149:19167	329645	0	True				
ANR	329823	ParameterType	struct mlist *		329645	0					
ANR	329824	Identifier	mlist		329645	1					
ANR	329825	Parameter	int mode	812:37:19170:19177	329645	1	True				
ANR	329826	ParameterType	int		329645	0					
ANR	329827	Identifier	mode		329645	1					
ANR	329828	CFGEntryNode	ENTRY		329645		True				
ANR	329829	CFGExitNode	EXIT		329645		True				
ANR	329830	Symbol	* magindex		329645						
ANR	329831	Symbol	mlist -> next		329645						
ANR	329832	Symbol	magindex		329645						
ANR	329833	Symbol	ml -> next		329645						
ANR	329834	Symbol	* * ml -> magic		329645						
ANR	329835	Symbol	* mlist		329645						
ANR	329836	Symbol	* ml		329645						
ANR	329837	Symbol	ml -> magic [ magindex ] . desc		329645						
ANR	329838	Symbol	m -> flag		329645						
ANR	329839	Symbol	* * ml		329645						
ANR	329840	Symbol	ml -> nmagic		329645						
ANR	329841	Symbol	ml -> magic [ magindex ] . mimetype		329645						
ANR	329842	Symbol	* ml -> magic [ magindex ] . mimetype		329645						
ANR	329843	Symbol	m		329645						
ANR	329844	Symbol	mode		329645						
ANR	329845	Symbol	* ml -> magic		329645						
ANR	329846	Symbol	ml -> magic		329645						
ANR	329847	Symbol	ml -> magic [ magindex + 1 ] . cont_level		329645						
ANR	329848	Symbol	* m		329645						
ANR	329849	Symbol	* ml -> magic [ magindex ] . desc		329645						
ANR	329850	Symbol	mlist		329645						
ANR	329851	Symbol	* * * ml		329645						
ANR	329852	Symbol	* * magindex		329645						
ANR	329853	Symbol	ml		329645						
ANR	329854	Function	set_test_type	845:8:20090:21761							
ANR	329855	FunctionDef	"set_test_type (struct magic * mstart , struct magic * m)"		329854	0					
ANR	329856	CompoundStatement		847:0:20148:21761	329854	0					
ANR	329857	SwitchStatement	switch ( m -> type )		329854	0					
ANR	329858	Condition	m -> type	848:9:20159:20165	329854	0	True				
ANR	329859	PtrMemberAccess	m -> type		329854	0					
ANR	329860	Identifier	m		329854	0					
ANR	329861	Identifier	type		329854	1					
ANR	329862	CompoundStatement		2:18:19:19	329854	1					
ANR	329863	Label	case FILE_BYTE :	849:1:20171:20185	329854	0	True				
ANR	329864	Identifier	FILE_BYTE		329854	0					
ANR	329865	Label	case FILE_SHORT :	850:1:20188:20203	329854	1	True				
ANR	329866	Identifier	FILE_SHORT		329854	0					
ANR	329867	Label	case FILE_LONG :	851:1:20206:20220	329854	2	True				
ANR	329868	Identifier	FILE_LONG		329854	0					
ANR	329869	Label	case FILE_DATE :	852:1:20223:20237	329854	3	True				
ANR	329870	Identifier	FILE_DATE		329854	0					
ANR	329871	Label	case FILE_BESHORT :	853:1:20240:20257	329854	4	True				
ANR	329872	Identifier	FILE_BESHORT		329854	0					
ANR	329873	Label	case FILE_BELONG :	854:1:20260:20276	329854	5	True				
ANR	329874	Identifier	FILE_BELONG		329854	0					
ANR	329875	Label	case FILE_BEDATE :	855:1:20279:20295	329854	6	True				
ANR	329876	Identifier	FILE_BEDATE		329854	0					
ANR	329877	Label	case FILE_LESHORT :	856:1:20298:20315	329854	7	True				
ANR	329878	Identifier	FILE_LESHORT		329854	0					
ANR	329879	Label	case FILE_LELONG :	857:1:20318:20334	329854	8	True				
ANR	329880	Identifier	FILE_LELONG		329854	0					
ANR	329881	Label	case FILE_LEDATE :	858:1:20337:20353	329854	9	True				
ANR	329882	Identifier	FILE_LEDATE		329854	0					
ANR	329883	Label	case FILE_LDATE :	859:1:20356:20371	329854	10	True				
ANR	329884	Identifier	FILE_LDATE		329854	0					
ANR	329885	Label	case FILE_BELDATE :	860:1:20374:20391	329854	11	True				
ANR	329886	Identifier	FILE_BELDATE		329854	0					
ANR	329887	Label	case FILE_LELDATE :	861:1:20394:20411	329854	12	True				
ANR	329888	Identifier	FILE_LELDATE		329854	0					
ANR	329889	Label	case FILE_MEDATE :	862:1:20414:20430	329854	13	True				
ANR	329890	Identifier	FILE_MEDATE		329854	0					
ANR	329891	Label	case FILE_MELDATE :	863:1:20433:20450	329854	14	True				
ANR	329892	Identifier	FILE_MELDATE		329854	0					
ANR	329893	Label	case FILE_MELONG :	864:1:20453:20469	329854	15	True				
ANR	329894	Identifier	FILE_MELONG		329854	0					
ANR	329895	Label	case FILE_QUAD :	865:1:20472:20486	329854	16	True				
ANR	329896	Identifier	FILE_QUAD		329854	0					
ANR	329897	Label	case FILE_LEQUAD :	866:1:20489:20505	329854	17	True				
ANR	329898	Identifier	FILE_LEQUAD		329854	0					
ANR	329899	Label	case FILE_BEQUAD :	867:1:20508:20524	329854	18	True				
ANR	329900	Identifier	FILE_BEQUAD		329854	0					
ANR	329901	Label	case FILE_QDATE :	868:1:20527:20542	329854	19	True				
ANR	329902	Identifier	FILE_QDATE		329854	0					
ANR	329903	Label	case FILE_LEQDATE :	869:1:20545:20562	329854	20	True				
ANR	329904	Identifier	FILE_LEQDATE		329854	0					
ANR	329905	Label	case FILE_BEQDATE :	870:1:20565:20582	329854	21	True				
ANR	329906	Identifier	FILE_BEQDATE		329854	0					
ANR	329907	Label	case FILE_QLDATE :	871:1:20585:20601	329854	22	True				
ANR	329908	Identifier	FILE_QLDATE		329854	0					
ANR	329909	Label	case FILE_LEQLDATE :	872:1:20604:20622	329854	23	True				
ANR	329910	Identifier	FILE_LEQLDATE		329854	0					
ANR	329911	Label	case FILE_BEQLDATE :	873:1:20625:20643	329854	24	True				
ANR	329912	Identifier	FILE_BEQLDATE		329854	0					
ANR	329913	Label	case FILE_QWDATE :	874:1:20646:20662	329854	25	True				
ANR	329914	Identifier	FILE_QWDATE		329854	0					
ANR	329915	Label	case FILE_LEQWDATE :	875:1:20665:20683	329854	26	True				
ANR	329916	Identifier	FILE_LEQWDATE		329854	0					
ANR	329917	Label	case FILE_BEQWDATE :	876:1:20686:20704	329854	27	True				
ANR	329918	Identifier	FILE_BEQWDATE		329854	0					
ANR	329919	Label	case FILE_FLOAT :	877:1:20707:20722	329854	28	True				
ANR	329920	Identifier	FILE_FLOAT		329854	0					
ANR	329921	Label	case FILE_BEFLOAT :	878:1:20725:20742	329854	29	True				
ANR	329922	Identifier	FILE_BEFLOAT		329854	0					
ANR	329923	Label	case FILE_LEFLOAT :	879:1:20745:20762	329854	30	True				
ANR	329924	Identifier	FILE_LEFLOAT		329854	0					
ANR	329925	Label	case FILE_DOUBLE :	880:1:20765:20781	329854	31	True				
ANR	329926	Identifier	FILE_DOUBLE		329854	0					
ANR	329927	Label	case FILE_BEDOUBLE :	881:1:20784:20802	329854	32	True				
ANR	329928	Identifier	FILE_BEDOUBLE		329854	0					
ANR	329929	Label	case FILE_LEDOUBLE :	882:1:20805:20823	329854	33	True				
ANR	329930	Identifier	FILE_LEDOUBLE		329854	0					
ANR	329931	ExpressionStatement	mstart -> flag |= BINTEST	883:2:20827:20850	329854	34	True				
ANR	329932	AssignmentExpression	mstart -> flag |= BINTEST		329854	0		|=			
ANR	329933	PtrMemberAccess	mstart -> flag		329854	0					
ANR	329934	Identifier	mstart		329854	0					
ANR	329935	Identifier	flag		329854	1					
ANR	329936	Identifier	BINTEST		329854	1					
ANR	329937	BreakStatement	break ;	884:2:20854:20859	329854	35	True				
ANR	329938	Label	case FILE_STRING :	885:1:20862:20878	329854	36	True				
ANR	329939	Identifier	FILE_STRING		329854	0					
ANR	329940	Label	case FILE_PSTRING :	886:1:20881:20898	329854	37	True				
ANR	329941	Identifier	FILE_PSTRING		329854	0					
ANR	329942	Label	case FILE_BESTRING16 :	887:1:20901:20921	329854	38	True				
ANR	329943	Identifier	FILE_BESTRING16		329854	0					
ANR	329944	Label	case FILE_LESTRING16 :	888:1:20924:20944	329854	39	True				
ANR	329945	Identifier	FILE_LESTRING16		329854	0					
ANR	329946	IfStatement	if ( mstart -> str_flags & STRING_TEXTTEST )		329854	40					
ANR	329947	Condition	mstart -> str_flags & STRING_TEXTTEST	890:6:20981:21015	329854	0	True				
ANR	329948	BitAndExpression	mstart -> str_flags & STRING_TEXTTEST		329854	0		&			
ANR	329949	PtrMemberAccess	mstart -> str_flags		329854	0					
ANR	329950	Identifier	mstart		329854	0					
ANR	329951	Identifier	str_flags		329854	1					
ANR	329952	Identifier	STRING_TEXTTEST		329854	1					
ANR	329953	ExpressionStatement	mstart -> flag |= TEXTTEST	891:3:21021:21045	329854	1	True				
ANR	329954	AssignmentExpression	mstart -> flag |= TEXTTEST		329854	0		|=			
ANR	329955	PtrMemberAccess	mstart -> flag		329854	0					
ANR	329956	Identifier	mstart		329854	0					
ANR	329957	Identifier	flag		329854	1					
ANR	329958	Identifier	TEXTTEST		329854	1					
ANR	329959	ElseStatement	else		329854	0					
ANR	329960	ExpressionStatement	mstart -> flag |= BINTEST	893:3:21057:21080	329854	0	True				
ANR	329961	AssignmentExpression	mstart -> flag |= BINTEST		329854	0		|=			
ANR	329962	PtrMemberAccess	mstart -> flag		329854	0					
ANR	329963	Identifier	mstart		329854	0					
ANR	329964	Identifier	flag		329854	1					
ANR	329965	Identifier	BINTEST		329854	1					
ANR	329966	BreakStatement	break ;	894:2:21084:21089	329854	41	True				
ANR	329967	Label	case FILE_REGEX :	895:1:21092:21107	329854	42	True				
ANR	329968	Identifier	FILE_REGEX		329854	0					
ANR	329969	Label	case FILE_SEARCH :	896:1:21110:21126	329854	43	True				
ANR	329970	Identifier	FILE_SEARCH		329854	0					
ANR	329971	IfStatement	if ( mstart -> str_flags & STRING_BINTEST )		329854	44					
ANR	329972	Condition	mstart -> str_flags & STRING_BINTEST	898:6:21161:21194	329854	0	True				
ANR	329973	BitAndExpression	mstart -> str_flags & STRING_BINTEST		329854	0		&			
ANR	329974	PtrMemberAccess	mstart -> str_flags		329854	0					
ANR	329975	Identifier	mstart		329854	0					
ANR	329976	Identifier	str_flags		329854	1					
ANR	329977	Identifier	STRING_BINTEST		329854	1					
ANR	329978	ExpressionStatement	mstart -> flag |= BINTEST	899:3:21200:21223	329854	1	True				
ANR	329979	AssignmentExpression	mstart -> flag |= BINTEST		329854	0		|=			
ANR	329980	PtrMemberAccess	mstart -> flag		329854	0					
ANR	329981	Identifier	mstart		329854	0					
ANR	329982	Identifier	flag		329854	1					
ANR	329983	Identifier	BINTEST		329854	1					
ANR	329984	IfStatement	if ( mstart -> str_flags & STRING_TEXTTEST )		329854	45					
ANR	329985	Condition	mstart -> str_flags & STRING_TEXTTEST	900:6:21231:21265	329854	0	True				
ANR	329986	BitAndExpression	mstart -> str_flags & STRING_TEXTTEST		329854	0		&			
ANR	329987	PtrMemberAccess	mstart -> str_flags		329854	0					
ANR	329988	Identifier	mstart		329854	0					
ANR	329989	Identifier	str_flags		329854	1					
ANR	329990	Identifier	STRING_TEXTTEST		329854	1					
ANR	329991	ExpressionStatement	mstart -> flag |= TEXTTEST	901:3:21271:21295	329854	1	True				
ANR	329992	AssignmentExpression	mstart -> flag |= TEXTTEST		329854	0		|=			
ANR	329993	PtrMemberAccess	mstart -> flag		329854	0					
ANR	329994	Identifier	mstart		329854	0					
ANR	329995	Identifier	flag		329854	1					
ANR	329996	Identifier	TEXTTEST		329854	1					
ANR	329997	IfStatement	if ( mstart -> flag & ( TEXTTEST | BINTEST ) )		329854	46					
ANR	329998	Condition	mstart -> flag & ( TEXTTEST | BINTEST )	903:6:21310:21342	329854	0	True				
ANR	329999	BitAndExpression	mstart -> flag & ( TEXTTEST | BINTEST )		329854	0		&			
ANR	330000	PtrMemberAccess	mstart -> flag		329854	0					
ANR	330001	Identifier	mstart		329854	0					
ANR	330002	Identifier	flag		329854	1					
ANR	330003	InclusiveOrExpression	TEXTTEST | BINTEST		329854	1		|			
ANR	330004	Identifier	TEXTTEST		329854	0					
ANR	330005	Identifier	BINTEST		329854	1					
ANR	330006	BreakStatement	break ;	904:3:21348:21353	329854	1	True				
ANR	330007	IfStatement	"if ( file_looks_utf8 ( m -> value . us , ( size_t ) m -> vallen , NULL , NULL ) <= 0 )"		329854	47					
ANR	330008	Condition	"file_looks_utf8 ( m -> value . us , ( size_t ) m -> vallen , NULL , NULL ) <= 0"	907:6:21405:21474	329854	0	True				
ANR	330009	RelationalExpression	"file_looks_utf8 ( m -> value . us , ( size_t ) m -> vallen , NULL , NULL ) <= 0"		329854	0		<=			
ANR	330010	CallExpression	"file_looks_utf8 ( m -> value . us , ( size_t ) m -> vallen , NULL , NULL )"		329854	0					
ANR	330011	Callee	file_looks_utf8		329854	0					
ANR	330012	Identifier	file_looks_utf8		329854	0					
ANR	330013	ArgumentList	m -> value . us		329854	1					
ANR	330014	Argument	m -> value . us		329854	0					
ANR	330015	MemberAccess	m -> value . us		329854	0					
ANR	330016	PtrMemberAccess	m -> value		329854	0					
ANR	330017	Identifier	m		329854	0					
ANR	330018	Identifier	value		329854	1					
ANR	330019	Identifier	us		329854	1					
ANR	330020	Argument	( size_t ) m -> vallen		329854	1					
ANR	330021	CastExpression	( size_t ) m -> vallen		329854	0					
ANR	330022	CastTarget	size_t		329854	0					
ANR	330023	PtrMemberAccess	m -> vallen		329854	1					
ANR	330024	Identifier	m		329854	0					
ANR	330025	Identifier	vallen		329854	1					
ANR	330026	Argument	NULL		329854	2					
ANR	330027	Identifier	NULL		329854	0					
ANR	330028	Argument	NULL		329854	3					
ANR	330029	Identifier	NULL		329854	0					
ANR	330030	PrimaryExpression	0		329854	1					
ANR	330031	ExpressionStatement	mstart -> flag |= BINTEST	909:3:21480:21503	329854	1	True				
ANR	330032	AssignmentExpression	mstart -> flag |= BINTEST		329854	0		|=			
ANR	330033	PtrMemberAccess	mstart -> flag		329854	0					
ANR	330034	Identifier	mstart		329854	0					
ANR	330035	Identifier	flag		329854	1					
ANR	330036	Identifier	BINTEST		329854	1					
ANR	330037	ElseStatement	else		329854	0					
ANR	330038	ExpressionStatement	mstart -> flag |= TEXTTEST	911:3:21515:21539	329854	0	True				
ANR	330039	AssignmentExpression	mstart -> flag |= TEXTTEST		329854	0		|=			
ANR	330040	PtrMemberAccess	mstart -> flag		329854	0					
ANR	330041	Identifier	mstart		329854	0					
ANR	330042	Identifier	flag		329854	1					
ANR	330043	Identifier	TEXTTEST		329854	1					
ANR	330044	BreakStatement	break ;	912:2:21543:21548	329854	48	True				
ANR	330045	Label	case FILE_DEFAULT :	913:1:21551:21568	329854	49	True				
ANR	330046	Identifier	FILE_DEFAULT		329854	0					
ANR	330047	BreakStatement	break ;	916:2:21654:21659	329854	50	True				
ANR	330048	Label	case FILE_INVALID :	917:1:21662:21679	329854	51	True				
ANR	330049	Identifier	FILE_INVALID		329854	0					
ANR	330050	Label	default :	918:1:21682:21689	329854	52	True				
ANR	330051	Identifier	default		329854	0					
ANR	330052	BreakStatement	break ;	920:2:21751:21756	329854	53	True				
ANR	330053	ReturnType	void		329854	1					
ANR	330054	Identifier	set_test_type		329854	2					
ANR	330055	ParameterList	"struct magic * mstart , struct magic * m"		329854	3					
ANR	330056	Parameter	struct magic * mstart	846:14:20109:20128	329854	0	True				
ANR	330057	ParameterType	struct magic *		329854	0					
ANR	330058	Identifier	mstart		329854	1					
ANR	330059	Parameter	struct magic * m	846:36:20131:20145	329854	1	True				
ANR	330060	ParameterType	struct magic *		329854	0					
ANR	330061	Identifier	m		329854	1					
ANR	330062	CFGEntryNode	ENTRY		329854		True				
ANR	330063	CFGExitNode	EXIT		329854		True				
ANR	330064	Symbol	NULL		329854						
ANR	330065	Symbol	m -> value		329854						
ANR	330066	Symbol	STRING_BINTEST		329854						
ANR	330067	Symbol	BINTEST		329854						
ANR	330068	Symbol	m -> value . us		329854						
ANR	330069	Symbol	* mstart		329854						
ANR	330070	Symbol	file_looks_utf8		329854						
ANR	330071	Symbol	m		329854						
ANR	330072	Symbol	STRING_TEXTTEST		329854						
ANR	330073	Symbol	m -> type		329854						
ANR	330074	Symbol	mstart -> flag		329854						
ANR	330075	Symbol	* m		329854						
ANR	330076	Symbol	m -> vallen		329854						
ANR	330077	Symbol	TEXTTEST		329854						
ANR	330078	Symbol	mstart		329854						
ANR	330079	Symbol	mstart -> str_flags		329854						
ANR	330080	Function	addentry	924:8:21772:22351							
ANR	330081	FunctionDef	"addentry (struct magic_set * ms , struct magic_entry * me , struct magic_entry_set * mset)"		330080	0					
ANR	330082	CompoundStatement		927:0:21864:22351	330080	0					
ANR	330083	IdentifierDeclStatement	size_t i = me -> mp -> type == FILE_NAME ? 1 : 0 ;	928:1:21867:21911	330080	0	True				
ANR	330084	IdentifierDecl	i = me -> mp -> type == FILE_NAME ? 1 : 0		330080	0					
ANR	330085	IdentifierDeclType	size_t		330080	0					
ANR	330086	Identifier	i		330080	1					
ANR	330087	AssignmentExpression	i = me -> mp -> type == FILE_NAME ? 1 : 0		330080	2		=			
ANR	330088	Identifier	i		330080	0					
ANR	330089	ConditionalExpression	me -> mp -> type == FILE_NAME ? 1 : 0		330080	1					
ANR	330090	Condition	me -> mp -> type == FILE_NAME		330080	0					
ANR	330091	EqualityExpression	me -> mp -> type == FILE_NAME		330080	0		==			
ANR	330092	PtrMemberAccess	me -> mp -> type		330080	0					
ANR	330093	PtrMemberAccess	me -> mp		330080	0					
ANR	330094	Identifier	me		330080	0					
ANR	330095	Identifier	mp		330080	1					
ANR	330096	Identifier	type		330080	1					
ANR	330097	Identifier	FILE_NAME		330080	1					
ANR	330098	PrimaryExpression	1		330080	1					
ANR	330099	PrimaryExpression	0		330080	2					
ANR	330100	IfStatement	if ( mset [ i ] . count == mset [ i ] . max )		330080	1					
ANR	330101	Condition	mset [ i ] . count == mset [ i ] . max	929:5:21918:21945	330080	0	True				
ANR	330102	EqualityExpression	mset [ i ] . count == mset [ i ] . max		330080	0		==			
ANR	330103	MemberAccess	mset [ i ] . count		330080	0					
ANR	330104	ArrayIndexing	mset [ i ]		330080	0					
ANR	330105	Identifier	mset		330080	0					
ANR	330106	Identifier	i		330080	1					
ANR	330107	Identifier	count		330080	1					
ANR	330108	MemberAccess	mset [ i ] . max		330080	1					
ANR	330109	ArrayIndexing	mset [ i ]		330080	0					
ANR	330110	Identifier	mset		330080	0					
ANR	330111	Identifier	i		330080	1					
ANR	330112	Identifier	max		330080	1					
ANR	330113	CompoundStatement		4:2:87:109	330080	1					
ANR	330114	IdentifierDeclStatement	struct magic_entry * mp ;	930:2:21952:21974	330080	0	True				
ANR	330115	IdentifierDecl	* mp		330080	0					
ANR	330116	IdentifierDeclType	struct magic_entry *		330080	0					
ANR	330117	Identifier	mp		330080	1					
ANR	330118	ExpressionStatement	mset [ i ] . max += ALLOC_INCR	932:2:21979:22004	330080	1	True				
ANR	330119	AssignmentExpression	mset [ i ] . max += ALLOC_INCR		330080	0		+=			
ANR	330120	MemberAccess	mset [ i ] . max		330080	0					
ANR	330121	ArrayIndexing	mset [ i ]		330080	0					
ANR	330122	Identifier	mset		330080	0					
ANR	330123	Identifier	i		330080	1					
ANR	330124	Identifier	max		330080	1					
ANR	330125	Identifier	ALLOC_INCR		330080	1					
ANR	330126	Statement	if	933:2:22008:22009	330080	2	True				
ANR	330127	Statement	(	933:5:22011:22011	330080	3	True				
ANR	330128	Statement	(	933:6:22012:22012	330080	4	True				
ANR	330129	Statement	mp	933:7:22013:22014	330080	5	True				
ANR	330130	Statement	=	933:10:22016:22016	330080	6	True				
ANR	330131	Statement	CAST	933:12:22018:22021	330080	7	True				
ANR	330132	Statement	(	933:16:22022:22022	330080	8	True				
ANR	330133	Statement	struct	933:17:22023:22028	330080	9	True				
ANR	330134	Statement	magic_entry	933:24:22030:22040	330080	10	True				
ANR	330135	Statement	*	933:36:22042:22042	330080	11	True				
ANR	330136	Statement	","	933:37:22043:22043	330080	12	True				
ANR	330137	Statement	erealloc	934:6:22051:22058	330080	13	True				
ANR	330138	Statement	(	934:14:22059:22059	330080	14	True				
ANR	330139	Statement	mset	934:15:22060:22063	330080	15	True				
ANR	330140	Statement	[	934:19:22064:22064	330080	16	True				
ANR	330141	Statement	i	934:20:22065:22065	330080	17	True				
ANR	330142	Statement	]	934:21:22066:22066	330080	18	True				
ANR	330143	Statement	.	934:22:22067:22067	330080	19	True				
ANR	330144	Statement	me	934:23:22068:22069	330080	20	True				
ANR	330145	Statement	","	934:25:22070:22070	330080	21	True				
ANR	330146	Statement	sizeof	934:27:22072:22077	330080	22	True				
ANR	330147	Statement	(	934:33:22078:22078	330080	23	True				
ANR	330148	Statement	*	934:34:22079:22079	330080	24	True				
ANR	330149	Statement	mp	934:35:22080:22081	330080	25	True				
ANR	330150	Statement	)	934:37:22082:22082	330080	26	True				
ANR	330151	Statement	*	934:39:22084:22084	330080	27	True				
ANR	330152	Statement	mset	934:41:22086:22089	330080	28	True				
ANR	330153	Statement	[	934:45:22090:22090	330080	29	True				
ANR	330154	Statement	i	934:46:22091:22091	330080	30	True				
ANR	330155	Statement	]	934:47:22092:22092	330080	31	True				
ANR	330156	Statement	.	934:48:22093:22093	330080	32	True				
ANR	330157	Statement	max	934:49:22094:22096	330080	33	True				
ANR	330158	Statement	)	934:52:22097:22097	330080	34	True				
ANR	330159	Statement	)	934:53:22098:22098	330080	35	True				
ANR	330160	Statement	)	934:54:22099:22099	330080	36	True				
ANR	330161	Statement	==	934:56:22101:22102	330080	37	True				
ANR	330162	Statement	NULL	935:6:22110:22113	330080	38	True				
ANR	330163	Statement	)	935:10:22114:22114	330080	39	True				
ANR	330164	CompoundStatement		9:12:251:251	330080	40					
ANR	330165	ExpressionStatement	"file_oomem ( ms , sizeof ( * mp ) * mset [ i ] . max )"	936:3:22121:22162	330080	0	True				
ANR	330166	CallExpression	"file_oomem ( ms , sizeof ( * mp ) * mset [ i ] . max )"		330080	0					
ANR	330167	Callee	file_oomem		330080	0					
ANR	330168	Identifier	file_oomem		330080	0					
ANR	330169	ArgumentList	ms		330080	1					
ANR	330170	Argument	ms		330080	0					
ANR	330171	Identifier	ms		330080	0					
ANR	330172	Argument	sizeof ( * mp ) * mset [ i ] . max		330080	1					
ANR	330173	MultiplicativeExpression	sizeof ( * mp ) * mset [ i ] . max		330080	0		*			
ANR	330174	SizeofExpression	sizeof ( * mp )		330080	0					
ANR	330175	Sizeof	sizeof		330080	0					
ANR	330176	UnaryOperationExpression	* mp		330080	1					
ANR	330177	UnaryOperator	*		330080	0					
ANR	330178	Identifier	mp		330080	1					
ANR	330179	MemberAccess	mset [ i ] . max		330080	1					
ANR	330180	ArrayIndexing	mset [ i ]		330080	0					
ANR	330181	Identifier	mset		330080	0					
ANR	330182	Identifier	i		330080	1					
ANR	330183	Identifier	max		330080	1					
ANR	330184	ReturnStatement	return - 1 ;	937:3:22167:22176	330080	1	True				
ANR	330185	UnaryOperationExpression	- 1		330080	0					
ANR	330186	UnaryOperator	-		330080	0					
ANR	330187	PrimaryExpression	1		330080	1					
ANR	330188	ExpressionStatement	"( void ) memset ( & mp [ mset [ i ] . count ] , 0 , sizeof ( * mp ) * ALLOC_INCR )"	939:2:22184:22251	330080	41	True				
ANR	330189	CastExpression	"( void ) memset ( & mp [ mset [ i ] . count ] , 0 , sizeof ( * mp ) * ALLOC_INCR )"		330080	0					
ANR	330190	CastTarget	void		330080	0					
ANR	330191	CallExpression	"memset ( & mp [ mset [ i ] . count ] , 0 , sizeof ( * mp ) * ALLOC_INCR )"		330080	1					
ANR	330192	Callee	memset		330080	0					
ANR	330193	Identifier	memset		330080	0					
ANR	330194	ArgumentList	& mp [ mset [ i ] . count ]		330080	1					
ANR	330195	Argument	& mp [ mset [ i ] . count ]		330080	0					
ANR	330196	UnaryOperationExpression	& mp [ mset [ i ] . count ]		330080	0					
ANR	330197	UnaryOperator	&		330080	0					
ANR	330198	ArrayIndexing	mp [ mset [ i ] . count ]		330080	1					
ANR	330199	Identifier	mp		330080	0					
ANR	330200	MemberAccess	mset [ i ] . count		330080	1					
ANR	330201	ArrayIndexing	mset [ i ]		330080	0					
ANR	330202	Identifier	mset		330080	0					
ANR	330203	Identifier	i		330080	1					
ANR	330204	Identifier	count		330080	1					
ANR	330205	Argument	0		330080	1					
ANR	330206	PrimaryExpression	0		330080	0					
ANR	330207	Argument	sizeof ( * mp ) * ALLOC_INCR		330080	2					
ANR	330208	MultiplicativeExpression	sizeof ( * mp ) * ALLOC_INCR		330080	0		*			
ANR	330209	SizeofExpression	sizeof ( * mp )		330080	0					
ANR	330210	Sizeof	sizeof		330080	0					
ANR	330211	UnaryOperationExpression	* mp		330080	1					
ANR	330212	UnaryOperator	*		330080	0					
ANR	330213	Identifier	mp		330080	1					
ANR	330214	Identifier	ALLOC_INCR		330080	1					
ANR	330215	ExpressionStatement	mset [ i ] . me = mp	941:2:22255:22270	330080	42	True				
ANR	330216	AssignmentExpression	mset [ i ] . me = mp		330080	0		=			
ANR	330217	MemberAccess	mset [ i ] . me		330080	0					
ANR	330218	ArrayIndexing	mset [ i ]		330080	0					
ANR	330219	Identifier	mset		330080	0					
ANR	330220	Identifier	i		330080	1					
ANR	330221	Identifier	me		330080	1					
ANR	330222	Identifier	mp		330080	1					
ANR	330223	ExpressionStatement	mset [ i ] . me [ mset [ i ] . count ++ ] = * me	943:1:22276:22309	330080	2	True				
ANR	330224	AssignmentExpression	mset [ i ] . me [ mset [ i ] . count ++ ] = * me		330080	0		=			
ANR	330225	ArrayIndexing	mset [ i ] . me [ mset [ i ] . count ++ ]		330080	0					
ANR	330226	MemberAccess	mset [ i ] . me		330080	0					
ANR	330227	ArrayIndexing	mset [ i ]		330080	0					
ANR	330228	Identifier	mset		330080	0					
ANR	330229	Identifier	i		330080	1					
ANR	330230	Identifier	me		330080	1					
ANR	330231	PostIncDecOperationExpression	mset [ i ] . count ++		330080	1					
ANR	330232	MemberAccess	mset [ i ] . count		330080	0					
ANR	330233	ArrayIndexing	mset [ i ]		330080	0					
ANR	330234	Identifier	mset		330080	0					
ANR	330235	Identifier	i		330080	1					
ANR	330236	Identifier	count		330080	1					
ANR	330237	IncDec	++		330080	1					
ANR	330238	UnaryOperationExpression	* me		330080	1					
ANR	330239	UnaryOperator	*		330080	0					
ANR	330240	Identifier	me		330080	1					
ANR	330241	ExpressionStatement	"memset ( me , 0 , sizeof ( * me ) )"	944:1:22312:22338	330080	3	True				
ANR	330242	CallExpression	"memset ( me , 0 , sizeof ( * me ) )"		330080	0					
ANR	330243	Callee	memset		330080	0					
ANR	330244	Identifier	memset		330080	0					
ANR	330245	ArgumentList	me		330080	1					
ANR	330246	Argument	me		330080	0					
ANR	330247	Identifier	me		330080	0					
ANR	330248	Argument	0		330080	1					
ANR	330249	PrimaryExpression	0		330080	0					
ANR	330250	Argument	sizeof ( * me )		330080	2					
ANR	330251	SizeofExpression	sizeof ( * me )		330080	0					
ANR	330252	Sizeof	sizeof		330080	0					
ANR	330253	UnaryOperationExpression	* me		330080	1					
ANR	330254	UnaryOperator	*		330080	0					
ANR	330255	Identifier	me		330080	1					
ANR	330256	ReturnStatement	return 0 ;	945:1:22341:22349	330080	4	True				
ANR	330257	PrimaryExpression	0		330080	0					
ANR	330258	ReturnType	int		330080	1					
ANR	330259	Identifier	addentry		330080	2					
ANR	330260	ParameterList	"struct magic_set * ms , struct magic_entry * me , struct magic_entry_set * mset"		330080	3					
ANR	330261	Parameter	struct magic_set * ms	925:9:21785:21804	330080	0	True				
ANR	330262	ParameterType	struct magic_set *		330080	0					
ANR	330263	Identifier	ms		330080	1					
ANR	330264	Parameter	struct magic_entry * me	925:31:21807:21828	330080	1	True				
ANR	330265	ParameterType	struct magic_entry *		330080	0					
ANR	330266	Identifier	me		330080	1					
ANR	330267	Parameter	struct magic_entry_set * mset	926:3:21834:21861	330080	2	True				
ANR	330268	ParameterType	struct magic_entry_set *		330080	0					
ANR	330269	Identifier	mset		330080	1					
ANR	330270	CFGEntryNode	ENTRY		330080		True				
ANR	330271	CFGExitNode	EXIT		330080		True				
ANR	330272	Symbol	mset [ i ] . max		330080						
ANR	330273	Symbol	* me -> mp		330080						
ANR	330274	Symbol	* * i		330080						
ANR	330275	Symbol	mp		330080						
ANR	330276	Symbol	ms		330080						
ANR	330277	Symbol	mset		330080						
ANR	330278	Symbol	* * me		330080						
ANR	330279	Symbol	i		330080						
ANR	330280	Symbol	* mset		330080						
ANR	330281	Symbol	* mp		330080						
ANR	330282	Symbol	me -> mp		330080						
ANR	330283	Symbol	FILE_NAME		330080						
ANR	330284	Symbol	me -> mp -> type		330080						
ANR	330285	Symbol	ALLOC_INCR		330080						
ANR	330286	Symbol	* i		330080						
ANR	330287	Symbol	mset [ i ] . count		330080						
ANR	330288	Symbol	me		330080						
ANR	330289	Symbol	* * mset		330080						
ANR	330290	Symbol	* mset [ i ] . me		330080						
ANR	330291	Symbol	* me		330080						
ANR	330292	Symbol	mset [ i ] . me		330080						
ANR	330293	Function	load_1	951:8:22397:24248							
ANR	330294	FunctionDef	"load_1 (struct magic_set * ms , int action , const char * fn , int * errs , struct magic_entry_set * mset)"		330293	0					
ANR	330295	CompoundStatement		954:0:22503:24248	330293	0					
ANR	330296	IdentifierDeclStatement	char buffer [ BUFSIZ + 1 ] ;	955:1:22506:22529	330293	0	True				
ANR	330297	IdentifierDecl	buffer [ BUFSIZ + 1 ]		330293	0					
ANR	330298	IdentifierDeclType	char [ BUFSIZ + 1 ]		330293	0					
ANR	330299	Identifier	buffer		330293	1					
ANR	330300	AdditiveExpression	BUFSIZ + 1		330293	2		+			
ANR	330301	Identifier	BUFSIZ		330293	0					
ANR	330302	PrimaryExpression	1		330293	1					
ANR	330303	IdentifierDeclStatement	char * line = NULL ;	956:1:22532:22549	330293	1	True				
ANR	330304	IdentifierDecl	* line = NULL		330293	0					
ANR	330305	IdentifierDeclType	char *		330293	0					
ANR	330306	Identifier	line		330293	1					
ANR	330307	AssignmentExpression	* line = NULL		330293	2		=			
ANR	330308	Identifier	NULL		330293	0					
ANR	330309	Identifier	NULL		330293	1					
ANR	330310	IdentifierDeclStatement	size_t len ;	957:1:22552:22562	330293	2	True				
ANR	330311	IdentifierDecl	len		330293	0					
ANR	330312	IdentifierDeclType	size_t		330293	0					
ANR	330313	Identifier	len		330293	1					
ANR	330314	IdentifierDeclStatement	size_t lineno = 0 ;	958:1:22565:22582	330293	3	True				
ANR	330315	IdentifierDecl	lineno = 0		330293	0					
ANR	330316	IdentifierDeclType	size_t		330293	0					
ANR	330317	Identifier	lineno		330293	1					
ANR	330318	AssignmentExpression	lineno = 0		330293	2		=			
ANR	330319	Identifier	lineno		330293	0					
ANR	330320	PrimaryExpression	0		330293	1					
ANR	330321	IdentifierDeclStatement	struct magic_entry me ;	959:1:22585:22606	330293	4	True				
ANR	330322	IdentifierDecl	me		330293	0					
ANR	330323	IdentifierDeclType	struct magic_entry		330293	0					
ANR	330324	Identifier	me		330293	1					
ANR	330325	IdentifierDeclStatement	php_stream * stream ;	961:1:22610:22628	330293	5	True				
ANR	330326	IdentifierDecl	* stream		330293	0					
ANR	330327	IdentifierDeclType	php_stream *		330293	0					
ANR	330328	Identifier	stream		330293	1					
ANR	330329	ExpressionStatement	TSRMLS_FETCH ( )	963:1:22632:22646	330293	6	True				
ANR	330330	CallExpression	TSRMLS_FETCH ( )		330293	0					
ANR	330331	Callee	TSRMLS_FETCH		330293	0					
ANR	330332	Identifier	TSRMLS_FETCH		330293	0					
ANR	330333	ArgumentList			330293	1					
ANR	330334	ExpressionStatement	ms -> file = fn	965:1:22650:22663	330293	7	True				
ANR	330335	AssignmentExpression	ms -> file = fn		330293	0		=			
ANR	330336	PtrMemberAccess	ms -> file		330293	0					
ANR	330337	Identifier	ms		330293	0					
ANR	330338	Identifier	file		330293	1					
ANR	330339	Identifier	fn		330293	1					
ANR	330340	ExpressionStatement	"stream = php_stream_open_wrapper ( ( char * ) fn , ""rb"" , REPORT_ERRORS , NULL )"	966:1:22666:22737	330293	8	True				
ANR	330341	AssignmentExpression	"stream = php_stream_open_wrapper ( ( char * ) fn , ""rb"" , REPORT_ERRORS , NULL )"		330293	0		=			
ANR	330342	Identifier	stream		330293	0					
ANR	330343	CallExpression	"php_stream_open_wrapper ( ( char * ) fn , ""rb"" , REPORT_ERRORS , NULL )"		330293	1					
ANR	330344	Callee	php_stream_open_wrapper		330293	0					
ANR	330345	Identifier	php_stream_open_wrapper		330293	0					
ANR	330346	ArgumentList	( char * ) fn		330293	1					
ANR	330347	Argument	( char * ) fn		330293	0					
ANR	330348	CastExpression	( char * ) fn		330293	0					
ANR	330349	CastTarget	char *		330293	0					
ANR	330350	Identifier	fn		330293	1					
ANR	330351	Argument	"""rb"""		330293	1					
ANR	330352	PrimaryExpression	"""rb"""		330293	0					
ANR	330353	Argument	REPORT_ERRORS		330293	2					
ANR	330354	Identifier	REPORT_ERRORS		330293	0					
ANR	330355	Argument	NULL		330293	3					
ANR	330356	Identifier	NULL		330293	0					
ANR	330357	IfStatement	if ( stream == NULL )		330293	9					
ANR	330358	Condition	stream == NULL	968:5:22745:22758	330293	0	True				
ANR	330359	EqualityExpression	stream == NULL		330293	0		==			
ANR	330360	Identifier	stream		330293	0					
ANR	330361	Identifier	NULL		330293	1					
ANR	330362	CompoundStatement		15:21:257:257	330293	1					
ANR	330363	IfStatement	if ( errno != ENOENT )		330293	0					
ANR	330364	Condition	errno != ENOENT	969:6:22769:22783	330293	0	True				
ANR	330365	EqualityExpression	errno != ENOENT		330293	0		!=			
ANR	330366	Identifier	errno		330293	0					
ANR	330367	Identifier	ENOENT		330293	1					
ANR	330368	ExpressionStatement	"file_error ( ms , errno , ""cannot read magic file `%s'"" , fn )"	970:3:22789:22852	330293	1	True				
ANR	330369	CallExpression	"file_error ( ms , errno , ""cannot read magic file `%s'"" , fn )"		330293	0					
ANR	330370	Callee	file_error		330293	0					
ANR	330371	Identifier	file_error		330293	0					
ANR	330372	ArgumentList	ms		330293	1					
ANR	330373	Argument	ms		330293	0					
ANR	330374	Identifier	ms		330293	0					
ANR	330375	Argument	errno		330293	1					
ANR	330376	Identifier	errno		330293	0					
ANR	330377	Argument	"""cannot read magic file `%s'"""		330293	2					
ANR	330378	PrimaryExpression	"""cannot read magic file `%s'"""		330293	0					
ANR	330379	Argument	fn		330293	3					
ANR	330380	Identifier	fn		330293	0					
ANR	330381	ExpressionStatement	( * errs ) ++	972:2:22856:22865	330293	1	True				
ANR	330382	PostIncDecOperationExpression	( * errs ) ++		330293	0					
ANR	330383	UnaryOperationExpression	* errs		330293	0					
ANR	330384	UnaryOperator	*		330293	0					
ANR	330385	Identifier	errs		330293	1					
ANR	330386	IncDec	++		330293	1					
ANR	330387	ReturnStatement	return ;	973:2:22869:22875	330293	2	True				
ANR	330388	ExpressionStatement	"memset ( & me , 0 , sizeof ( me ) )"	976:1:22882:22908	330293	10	True				
ANR	330389	CallExpression	"memset ( & me , 0 , sizeof ( me ) )"		330293	0					
ANR	330390	Callee	memset		330293	0					
ANR	330391	Identifier	memset		330293	0					
ANR	330392	ArgumentList	& me		330293	1					
ANR	330393	Argument	& me		330293	0					
ANR	330394	UnaryOperationExpression	& me		330293	0					
ANR	330395	UnaryOperator	&		330293	0					
ANR	330396	Identifier	me		330293	1					
ANR	330397	Argument	0		330293	1					
ANR	330398	PrimaryExpression	0		330293	0					
ANR	330399	Argument	sizeof ( me )		330293	2					
ANR	330400	SizeofExpression	sizeof ( me )		330293	0					
ANR	330401	Sizeof	sizeof		330293	0					
ANR	330402	SizeofOperand	me		330293	1					
ANR	330403	ForStatement	"for ( ms -> line = 1 ; ( line = php_stream_get_line ( stream , buffer , BUFSIZ , & len ) ) != NULL ; ms -> line ++ )"		330293	11					
ANR	330404	ForInit	ms -> line = 1 ;	978:6:22948:22960	330293	0	True				
ANR	330405	AssignmentExpression	ms -> line = 1		330293	0		=			
ANR	330406	PtrMemberAccess	ms -> line		330293	0					
ANR	330407	Identifier	ms		330293	0					
ANR	330408	Identifier	line		330293	1					
ANR	330409	PrimaryExpression	1		330293	1					
ANR	330410	Condition	"( line = php_stream_get_line ( stream , buffer , BUFSIZ , & len ) ) != NULL"	978:20:22962:23028	330293	1	True				
ANR	330411	EqualityExpression	"( line = php_stream_get_line ( stream , buffer , BUFSIZ , & len ) ) != NULL"		330293	0		!=			
ANR	330412	AssignmentExpression	"line = php_stream_get_line ( stream , buffer , BUFSIZ , & len )"		330293	0		=			
ANR	330413	Identifier	line		330293	0					
ANR	330414	CallExpression	"php_stream_get_line ( stream , buffer , BUFSIZ , & len )"		330293	1					
ANR	330415	Callee	php_stream_get_line		330293	0					
ANR	330416	Identifier	php_stream_get_line		330293	0					
ANR	330417	ArgumentList	stream		330293	1					
ANR	330418	Argument	stream		330293	0					
ANR	330419	Identifier	stream		330293	0					
ANR	330420	Argument	buffer		330293	1					
ANR	330421	Identifier	buffer		330293	0					
ANR	330422	Argument	BUFSIZ		330293	2					
ANR	330423	Identifier	BUFSIZ		330293	0					
ANR	330424	Argument	& len		330293	3					
ANR	330425	UnaryOperationExpression	& len		330293	0					
ANR	330426	UnaryOperator	&		330293	0					
ANR	330427	Identifier	len		330293	1					
ANR	330428	Identifier	NULL		330293	1					
ANR	330429	PostIncDecOperationExpression	ms -> line ++	978:89:23031:23040	330293	2	True				
ANR	330430	PtrMemberAccess	ms -> line		330293	0					
ANR	330431	Identifier	ms		330293	0					
ANR	330432	Identifier	line		330293	1					
ANR	330433	IncDec	++		330293	1					
ANR	330434	CompoundStatement		25:101:539:539	330293	3					
ANR	330435	IfStatement	if ( len == 0 )		330293	0					
ANR	330436	Condition	len == 0	979:6:23051:23058	330293	0	True				
ANR	330437	EqualityExpression	len == 0		330293	0		==			
ANR	330438	Identifier	len		330293	0					
ANR	330439	PrimaryExpression	0		330293	1					
ANR	330440	ContinueStatement	continue ;	980:3:23094:23102	330293	1	True				
ANR	330441	IfStatement	if ( line [ len - 1 ] == '\\n' )		330293	1					
ANR	330442	Condition	line [ len - 1 ] == '\\n'	981:6:23110:23130	330293	0	True				
ANR	330443	EqualityExpression	line [ len - 1 ] == '\\n'		330293	0		==			
ANR	330444	ArrayIndexing	line [ len - 1 ]		330293	0					
ANR	330445	Identifier	line		330293	0					
ANR	330446	AdditiveExpression	len - 1		330293	1		-			
ANR	330447	Identifier	len		330293	0					
ANR	330448	PrimaryExpression	1		330293	1					
ANR	330449	PrimaryExpression	'\\n'		330293	1					
ANR	330450	CompoundStatement		28:29:629:629	330293	1					
ANR	330451	ExpressionStatement	lineno ++	982:3:23138:23146	330293	0	True				
ANR	330452	PostIncDecOperationExpression	lineno ++		330293	0					
ANR	330453	Identifier	lineno		330293	0					
ANR	330454	IncDec	++		330293	1					
ANR	330455	ExpressionStatement	line [ len - 1 ] = '\\0'	983:3:23151:23171	330293	1	True				
ANR	330456	AssignmentExpression	line [ len - 1 ] = '\\0'		330293	0		=			
ANR	330457	ArrayIndexing	line [ len - 1 ]		330293	0					
ANR	330458	Identifier	line		330293	0					
ANR	330459	AdditiveExpression	len - 1		330293	1		-			
ANR	330460	Identifier	len		330293	0					
ANR	330461	PrimaryExpression	1		330293	1					
ANR	330462	PrimaryExpression	'\\0'		330293	1					
ANR	330463	SwitchStatement	switch ( line [ 0 ] )		330293	2					
ANR	330464	Condition	line [ 0 ]	985:10:23208:23214	330293	0	True				
ANR	330465	ArrayIndexing	line [ 0 ]		330293	0					
ANR	330466	Identifier	line		330293	0					
ANR	330467	PrimaryExpression	0		330293	1					
ANR	330468	CompoundStatement		32:19:713:713	330293	1					
ANR	330469	Label	case '\\0' :	986:2:23221:23230	330293	0	True				
ANR	330470	Label	case '#' :	987:2:23260:23268	330293	1	True				
ANR	330471	ContinueStatement	continue ;	988:3:23301:23309	330293	2	True				
ANR	330472	Label	case '!' :	989:2:23313:23321	330293	3	True				
ANR	330473	IfStatement	if ( line [ 1 ] == ':' )		330293	4					
ANR	330474	Condition	line [ 1 ] == ':'	990:7:23330:23343	330293	0	True				
ANR	330475	EqualityExpression	line [ 1 ] == ':'		330293	0		==			
ANR	330476	ArrayIndexing	line [ 1 ]		330293	0					
ANR	330477	Identifier	line		330293	0					
ANR	330478	PrimaryExpression	1		330293	1					
ANR	330479	PrimaryExpression	':'		330293	1					
ANR	330480	CompoundStatement		38:4:848:856	330293	1					
ANR	330481	IdentifierDeclStatement	size_t i ;	991:4:23352:23360	330293	0	True				
ANR	330482	IdentifierDecl	i		330293	0					
ANR	330483	IdentifierDeclType	size_t		330293	0					
ANR	330484	Identifier	i		330293	1					
ANR	330485	ForStatement	for ( i = 0 ; bang [ i ] . name != NULL ; i ++ )		330293	1					
ANR	330486	ForInit	i = 0 ;	993:9:23372:23377	330293	0	True				
ANR	330487	AssignmentExpression	i = 0		330293	0		=			
ANR	330488	Identifier	i		330293	0					
ANR	330489	PrimaryExpression	0		330293	1					
ANR	330490	Condition	bang [ i ] . name != NULL	993:16:23379:23398	330293	1	True				
ANR	330491	EqualityExpression	bang [ i ] . name != NULL		330293	0		!=			
ANR	330492	MemberAccess	bang [ i ] . name		330293	0					
ANR	330493	ArrayIndexing	bang [ i ]		330293	0					
ANR	330494	Identifier	bang		330293	0					
ANR	330495	Identifier	i		330293	1					
ANR	330496	Identifier	name		330293	1					
ANR	330497	Identifier	NULL		330293	1					
ANR	330498	PostIncDecOperationExpression	i ++	993:38:23401:23403	330293	2	True				
ANR	330499	Identifier	i		330293	0					
ANR	330500	IncDec	++		330293	1					
ANR	330501	CompoundStatement		40:43:902:902	330293	3					
ANR	330502	IfStatement	"if ( ( size_t ) ( len - 2 ) > bang [ i ] . len && memcmp ( bang [ i ] . name , line + 2 , bang [ i ] . len ) == 0 )"		330293	0					
ANR	330503	Condition	"( size_t ) ( len - 2 ) > bang [ i ] . len && memcmp ( bang [ i ] . name , line + 2 , bang [ i ] . len ) == 0"	994:9:23417:23517	330293	0	True				
ANR	330504	AndExpression	"( size_t ) ( len - 2 ) > bang [ i ] . len && memcmp ( bang [ i ] . name , line + 2 , bang [ i ] . len ) == 0"		330293	0		&&			
ANR	330505	RelationalExpression	( size_t ) ( len - 2 ) > bang [ i ] . len		330293	0		>			
ANR	330506	CastExpression	( size_t ) ( len - 2 )		330293	0					
ANR	330507	CastTarget	size_t		330293	0					
ANR	330508	AdditiveExpression	len - 2		330293	1		-			
ANR	330509	Identifier	len		330293	0					
ANR	330510	PrimaryExpression	2		330293	1					
ANR	330511	MemberAccess	bang [ i ] . len		330293	1					
ANR	330512	ArrayIndexing	bang [ i ]		330293	0					
ANR	330513	Identifier	bang		330293	0					
ANR	330514	Identifier	i		330293	1					
ANR	330515	Identifier	len		330293	1					
ANR	330516	EqualityExpression	"memcmp ( bang [ i ] . name , line + 2 , bang [ i ] . len ) == 0"		330293	1		==			
ANR	330517	CallExpression	"memcmp ( bang [ i ] . name , line + 2 , bang [ i ] . len )"		330293	0					
ANR	330518	Callee	memcmp		330293	0					
ANR	330519	Identifier	memcmp		330293	0					
ANR	330520	ArgumentList	bang [ i ] . name		330293	1					
ANR	330521	Argument	bang [ i ] . name		330293	0					
ANR	330522	MemberAccess	bang [ i ] . name		330293	0					
ANR	330523	ArrayIndexing	bang [ i ]		330293	0					
ANR	330524	Identifier	bang		330293	0					
ANR	330525	Identifier	i		330293	1					
ANR	330526	Identifier	name		330293	1					
ANR	330527	Argument	line + 2		330293	1					
ANR	330528	AdditiveExpression	line + 2		330293	0		+			
ANR	330529	Identifier	line		330293	0					
ANR	330530	PrimaryExpression	2		330293	1					
ANR	330531	Argument	bang [ i ] . len		330293	2					
ANR	330532	MemberAccess	bang [ i ] . len		330293	0					
ANR	330533	ArrayIndexing	bang [ i ]		330293	0					
ANR	330534	Identifier	bang		330293	0					
ANR	330535	Identifier	i		330293	1					
ANR	330536	Identifier	len		330293	1					
ANR	330537	PrimaryExpression	0		330293	1					
ANR	330538	BreakStatement	break ;	997:6:23526:23531	330293	1	True				
ANR	330539	IfStatement	if ( bang [ i ] . name == NULL )		330293	2					
ANR	330540	Condition	bang [ i ] . name == NULL	999:8:23547:23566	330293	0	True				
ANR	330541	EqualityExpression	bang [ i ] . name == NULL		330293	0		==			
ANR	330542	MemberAccess	bang [ i ] . name		330293	0					
ANR	330543	ArrayIndexing	bang [ i ]		330293	0					
ANR	330544	Identifier	bang		330293	0					
ANR	330545	Identifier	i		330293	1					
ANR	330546	Identifier	name		330293	1					
ANR	330547	Identifier	NULL		330293	1					
ANR	330548	CompoundStatement		46:30:1065:1065	330293	1					
ANR	330549	ExpressionStatement	"file_error ( ms , 0 , ""Unknown !: entry `%s'"" , line )"	1000:5:23576:23633	330293	0	True				
ANR	330550	CallExpression	"file_error ( ms , 0 , ""Unknown !: entry `%s'"" , line )"		330293	0					
ANR	330551	Callee	file_error		330293	0					
ANR	330552	Identifier	file_error		330293	0					
ANR	330553	ArgumentList	ms		330293	1					
ANR	330554	Argument	ms		330293	0					
ANR	330555	Identifier	ms		330293	0					
ANR	330556	Argument	0		330293	1					
ANR	330557	PrimaryExpression	0		330293	0					
ANR	330558	Argument	"""Unknown !: entry `%s'"""		330293	2					
ANR	330559	PrimaryExpression	"""Unknown !: entry `%s'"""		330293	0					
ANR	330560	Argument	line		330293	3					
ANR	330561	Identifier	line		330293	0					
ANR	330562	ExpressionStatement	( * errs ) ++	1002:5:23640:23649	330293	1	True				
ANR	330563	PostIncDecOperationExpression	( * errs ) ++		330293	0					
ANR	330564	UnaryOperationExpression	* errs		330293	0					
ANR	330565	UnaryOperator	*		330293	0					
ANR	330566	Identifier	errs		330293	1					
ANR	330567	IncDec	++		330293	1					
ANR	330568	ContinueStatement	continue ;	1003:5:23656:23664	330293	2	True				
ANR	330569	IfStatement	if ( me . mp == NULL )		330293	3					
ANR	330570	Condition	me . mp == NULL	1005:8:23680:23692	330293	0	True				
ANR	330571	EqualityExpression	me . mp == NULL		330293	0		==			
ANR	330572	MemberAccess	me . mp		330293	0					
ANR	330573	Identifier	me		330293	0					
ANR	330574	Identifier	mp		330293	1					
ANR	330575	Identifier	NULL		330293	1					
ANR	330576	CompoundStatement		52:23:1191:1191	330293	1					
ANR	330577	ExpressionStatement	"file_error ( ms , 0 , ""No current entry for :!%s type"" , bang [ i ] . name )"	1006:5:23702:23782	330293	0	True				
ANR	330578	CallExpression	"file_error ( ms , 0 , ""No current entry for :!%s type"" , bang [ i ] . name )"		330293	0					
ANR	330579	Callee	file_error		330293	0					
ANR	330580	Identifier	file_error		330293	0					
ANR	330581	ArgumentList	ms		330293	1					
ANR	330582	Argument	ms		330293	0					
ANR	330583	Identifier	ms		330293	0					
ANR	330584	Argument	0		330293	1					
ANR	330585	PrimaryExpression	0		330293	0					
ANR	330586	Argument	"""No current entry for :!%s type"""		330293	2					
ANR	330587	PrimaryExpression	"""No current entry for :!%s type"""		330293	0					
ANR	330588	Argument	bang [ i ] . name		330293	3					
ANR	330589	MemberAccess	bang [ i ] . name		330293	0					
ANR	330590	ArrayIndexing	bang [ i ]		330293	0					
ANR	330591	Identifier	bang		330293	0					
ANR	330592	Identifier	i		330293	1					
ANR	330593	Identifier	name		330293	1					
ANR	330594	ExpressionStatement	( * errs ) ++	1009:5:23789:23798	330293	1	True				
ANR	330595	PostIncDecOperationExpression	( * errs ) ++		330293	0					
ANR	330596	UnaryOperationExpression	* errs		330293	0					
ANR	330597	UnaryOperator	*		330293	0					
ANR	330598	Identifier	errs		330293	1					
ANR	330599	IncDec	++		330293	1					
ANR	330600	ContinueStatement	continue ;	1010:5:23805:23813	330293	2	True				
ANR	330601	IfStatement	"if ( ( * bang [ i ] . fun ) ( ms , & me , line + bang [ i ] . len + 2 ) != 0 )"		330293	4					
ANR	330602	Condition	"( * bang [ i ] . fun ) ( ms , & me , line + bang [ i ] . len + 2 ) != 0"	1012:8:23829:23888	330293	0	True				
ANR	330603	EqualityExpression	"( * bang [ i ] . fun ) ( ms , & me , line + bang [ i ] . len + 2 ) != 0"		330293	0		!=			
ANR	330604	CallExpression	"( * bang [ i ] . fun ) ( ms , & me , line + bang [ i ] . len + 2 )"		330293	0					
ANR	330605	Callee	* bang [ i ] . fun		330293	0					
ANR	330606	UnaryOperationExpression	* bang [ i ] . fun		330293	0					
ANR	330607	UnaryOperator	*		330293	0					
ANR	330608	MemberAccess	bang [ i ] . fun		330293	1					
ANR	330609	ArrayIndexing	bang [ i ]		330293	0					
ANR	330610	Identifier	bang		330293	0					
ANR	330611	Identifier	i		330293	1					
ANR	330612	Identifier	fun		330293	1					
ANR	330613	ArgumentList	ms		330293	1					
ANR	330614	Argument	ms		330293	0					
ANR	330615	Identifier	ms		330293	0					
ANR	330616	Argument	& me		330293	1					
ANR	330617	UnaryOperationExpression	& me		330293	0					
ANR	330618	UnaryOperator	&		330293	0					
ANR	330619	Identifier	me		330293	1					
ANR	330620	Argument	line + bang [ i ] . len + 2		330293	2					
ANR	330621	AdditiveExpression	line + bang [ i ] . len + 2		330293	0		+			
ANR	330622	Identifier	line		330293	0					
ANR	330623	AdditiveExpression	bang [ i ] . len + 2		330293	1		+			
ANR	330624	MemberAccess	bang [ i ] . len		330293	0					
ANR	330625	ArrayIndexing	bang [ i ]		330293	0					
ANR	330626	Identifier	bang		330293	0					
ANR	330627	Identifier	i		330293	1					
ANR	330628	Identifier	len		330293	1					
ANR	330629	PrimaryExpression	2		330293	1					
ANR	330630	PrimaryExpression	0		330293	1					
ANR	330631	CompoundStatement		60:38:1387:1387	330293	1					
ANR	330632	ExpressionStatement	( * errs ) ++	1014:5:23898:23907	330293	0	True				
ANR	330633	PostIncDecOperationExpression	( * errs ) ++		330293	0					
ANR	330634	UnaryOperationExpression	* errs		330293	0					
ANR	330635	UnaryOperator	*		330293	0					
ANR	330636	Identifier	errs		330293	1					
ANR	330637	IncDec	++		330293	1					
ANR	330638	ContinueStatement	continue ;	1015:5:23914:23922	330293	1	True				
ANR	330639	ContinueStatement	continue ;	1017:4:23934:23942	330293	5	True				
ANR	330640	Label	default :	1020:2:23970:23977	330293	5	True				
ANR	330641	Identifier	default		330293	0					
ANR	330642	Label	again :	1021:2:23981:23986	330293	6	True				
ANR	330643	Identifier	again		330293	0					
ANR	330644	SwitchStatement	"switch ( parse ( ms , & me , line , lineno , action ) )"		330293	7					
ANR	330645	Condition	"parse ( ms , & me , line , lineno , action )"	1022:11:23999:24034	330293	0	True				
ANR	330646	CallExpression	"parse ( ms , & me , line , lineno , action )"		330293	0					
ANR	330647	Callee	parse		330293	0					
ANR	330648	Identifier	parse		330293	0					
ANR	330649	ArgumentList	ms		330293	1					
ANR	330650	Argument	ms		330293	0					
ANR	330651	Identifier	ms		330293	0					
ANR	330652	Argument	& me		330293	1					
ANR	330653	UnaryOperationExpression	& me		330293	0					
ANR	330654	UnaryOperator	&		330293	0					
ANR	330655	Identifier	me		330293	1					
ANR	330656	Argument	line		330293	2					
ANR	330657	Identifier	line		330293	0					
ANR	330658	Argument	lineno		330293	3					
ANR	330659	Identifier	lineno		330293	0					
ANR	330660	Argument	action		330293	4					
ANR	330661	Identifier	action		330293	0					
ANR	330662	CompoundStatement		69:49:1533:1533	330293	1					
ANR	330663	Label	case 0 :	1023:3:24042:24048	330293	0	True				
ANR	330664	ContinueStatement	continue ;	1024:4:24054:24062	330293	1	True				
ANR	330665	Label	case 1 :	1025:3:24067:24073	330293	2	True				
ANR	330666	ExpressionStatement	"( void ) addentry ( ms , & me , mset )"	1026:4:24079:24108	330293	3	True				
ANR	330667	CastExpression	"( void ) addentry ( ms , & me , mset )"		330293	0					
ANR	330668	CastTarget	void		330293	0					
ANR	330669	CallExpression	"addentry ( ms , & me , mset )"		330293	1					
ANR	330670	Callee	addentry		330293	0					
ANR	330671	Identifier	addentry		330293	0					
ANR	330672	ArgumentList	ms		330293	1					
ANR	330673	Argument	ms		330293	0					
ANR	330674	Identifier	ms		330293	0					
ANR	330675	Argument	& me		330293	1					
ANR	330676	UnaryOperationExpression	& me		330293	0					
ANR	330677	UnaryOperator	&		330293	0					
ANR	330678	Identifier	me		330293	1					
ANR	330679	Argument	mset		330293	2					
ANR	330680	Identifier	mset		330293	0					
ANR	330681	GotoStatement	goto again ;	1027:4:24114:24124	330293	4	True				
ANR	330682	Identifier	again		330293	0					
ANR	330683	Label	default :	1028:3:24129:24136	330293	5	True				
ANR	330684	Identifier	default		330293	0					
ANR	330685	ExpressionStatement	( * errs ) ++	1029:4:24142:24151	330293	6	True				
ANR	330686	PostIncDecOperationExpression	( * errs ) ++		330293	0					
ANR	330687	UnaryOperationExpression	* errs		330293	0					
ANR	330688	UnaryOperator	*		330293	0					
ANR	330689	Identifier	errs		330293	1					
ANR	330690	IncDec	++		330293	1					
ANR	330691	BreakStatement	break ;	1030:4:24157:24162	330293	7	True				
ANR	330692	IfStatement	if ( me . mp )		330293	12					
ANR	330693	Condition	me . mp	1034:5:24181:24185	330293	0	True				
ANR	330694	MemberAccess	me . mp		330293	0					
ANR	330695	Identifier	me		330293	0					
ANR	330696	Identifier	mp		330293	1					
ANR	330697	ExpressionStatement	"( void ) addentry ( ms , & me , mset )"	1035:2:24190:24219	330293	1	True				
ANR	330698	CastExpression	"( void ) addentry ( ms , & me , mset )"		330293	0					
ANR	330699	CastTarget	void		330293	0					
ANR	330700	CallExpression	"addentry ( ms , & me , mset )"		330293	1					
ANR	330701	Callee	addentry		330293	0					
ANR	330702	Identifier	addentry		330293	0					
ANR	330703	ArgumentList	ms		330293	1					
ANR	330704	Argument	ms		330293	0					
ANR	330705	Identifier	ms		330293	0					
ANR	330706	Argument	& me		330293	1					
ANR	330707	UnaryOperationExpression	& me		330293	0					
ANR	330708	UnaryOperator	&		330293	0					
ANR	330709	Identifier	me		330293	1					
ANR	330710	Argument	mset		330293	2					
ANR	330711	Identifier	mset		330293	0					
ANR	330712	ExpressionStatement	php_stream_close ( stream )	1036:1:24222:24246	330293	13	True				
ANR	330713	CallExpression	php_stream_close ( stream )		330293	0					
ANR	330714	Callee	php_stream_close		330293	0					
ANR	330715	Identifier	php_stream_close		330293	0					
ANR	330716	ArgumentList	stream		330293	1					
ANR	330717	Argument	stream		330293	0					
ANR	330718	Identifier	stream		330293	0					
ANR	330719	ReturnType	void		330293	1					
ANR	330720	Identifier	load_1		330293	2					
ANR	330721	ParameterList	"struct magic_set * ms , int action , const char * fn , int * errs , struct magic_entry_set * mset"		330293	3					
ANR	330722	Parameter	struct magic_set * ms	952:7:22409:22428	330293	0	True				
ANR	330723	ParameterType	struct magic_set *		330293	0					
ANR	330724	Identifier	ms		330293	1					
ANR	330725	Parameter	int action	952:29:22431:22440	330293	1	True				
ANR	330726	ParameterType	int		330293	0					
ANR	330727	Identifier	action		330293	1					
ANR	330728	Parameter	const char * fn	952:41:22443:22456	330293	2	True				
ANR	330729	ParameterType	const char *		330293	0					
ANR	330730	Identifier	fn		330293	1					
ANR	330731	Parameter	int * errs	952:57:22459:22467	330293	3	True				
ANR	330732	ParameterType	int *		330293	0					
ANR	330733	Identifier	errs		330293	1					
ANR	330734	Parameter	struct magic_entry_set * mset	953:3:22473:22500	330293	4	True				
ANR	330735	ParameterType	struct magic_entry_set *		330293	0					
ANR	330736	Identifier	mset		330293	1					
ANR	330737	CFGEntryNode	ENTRY		330293		True				
ANR	330738	CFGExitNode	EXIT		330293		True				
ANR	330739	Symbol	errs		330293						
ANR	330740	Symbol	& me		330293						
ANR	330741	Symbol	line		330293						
ANR	330742	Symbol	bang [ i ] . len		330293						
ANR	330743	Symbol	fn		330293						
ANR	330744	Symbol	* line		330293						
ANR	330745	Symbol	* ms		330293						
ANR	330746	Symbol	php_stream_open_wrapper		330293						
ANR	330747	Symbol	memcmp		330293						
ANR	330748	Symbol	len		330293						
ANR	330749	Symbol	stream		330293						
ANR	330750	Symbol	bang		330293						
ANR	330751	Symbol	me		330293						
ANR	330752	Symbol	action		330293						
ANR	330753	Symbol	buffer		330293						
ANR	330754	Symbol	bang [ i ] . fun		330293						
ANR	330755	Symbol	bang [ i ] . name		330293						
ANR	330756	Symbol	errno		330293						
ANR	330757	Symbol	* * i		330293						
ANR	330758	Symbol	NULL		330293						
ANR	330759	Symbol	me . mp		330293						
ANR	330760	Symbol	ms		330293						
ANR	330761	Symbol	mset		330293						
ANR	330762	Symbol	i		330293						
ANR	330763	Symbol	ms -> line		330293						
ANR	330764	Symbol	ENOENT		330293						
ANR	330765	Symbol	parse		330293						
ANR	330766	Symbol	ms -> file		330293						
ANR	330767	Symbol	* * bang		330293						
ANR	330768	Symbol	* bang		330293						
ANR	330769	Symbol	lineno		330293						
ANR	330770	Symbol	* i		330293						
ANR	330771	Symbol	REPORT_ERRORS		330293						
ANR	330772	Symbol	php_stream_get_line		330293						
ANR	330773	Symbol	* bang [ i ] . fun		330293						
ANR	330774	Symbol	* errs		330293						
ANR	330775	Symbol	& len		330293						
ANR	330776	Symbol	BUFSIZ		330293						
ANR	330777	Symbol	* len		330293						
ANR	330778	Function	cmpstrp	1043:8:24355:24464							
ANR	330779	FunctionDef	"cmpstrp (const void * p1 , const void * p2)"		330778	0					
ANR	330780	CompoundStatement		1045:0:24399:24464	330778	0					
ANR	330781	Statement	return	1046:8:24409:24414	330778	0	True				
ANR	330782	Statement	strcmp	1046:15:24416:24421	330778	1	True				
ANR	330783	Statement	(	1046:21:24422:24422	330778	2	True				
ANR	330784	Statement	*	1046:22:24423:24423	330778	3	True				
ANR	330785	Statement	(	1046:23:24424:24424	330778	4	True				
ANR	330786	Statement	char	1046:24:24425:24428	330778	5	True				
ANR	330787	Statement	*	1046:29:24430:24430	330778	6	True				
ANR	330788	Statement	const	1046:30:24431:24435	330778	7	True				
ANR	330789	Statement	*	1046:36:24437:24437	330778	8	True				
ANR	330790	Statement	)	1046:37:24438:24438	330778	9	True				
ANR	330791	Statement	p1	1046:38:24439:24440	330778	10	True				
ANR	330792	Statement	","	1046:40:24441:24441	330778	11	True				
ANR	330793	Statement	*	1046:42:24443:24443	330778	12	True				
ANR	330794	Statement	(	1046:43:24444:24444	330778	13	True				
ANR	330795	Statement	char	1046:44:24445:24448	330778	14	True				
ANR	330796	Statement	*	1046:49:24450:24450	330778	15	True				
ANR	330797	Statement	const	1046:50:24451:24455	330778	16	True				
ANR	330798	Statement	*	1046:56:24457:24457	330778	17	True				
ANR	330799	Statement	)	1046:57:24458:24458	330778	18	True				
ANR	330800	Statement	p2	1046:58:24459:24460	330778	19	True				
ANR	330801	Statement	)	1046:60:24461:24461	330778	20	True				
ANR	330802	ExpressionStatement		1046:61:24462:24462	330778	21	True				
ANR	330803	ReturnType	int		330778	1					
ANR	330804	Identifier	cmpstrp		330778	2					
ANR	330805	ParameterList	"const void * p1 , const void * p2"		330778	3					
ANR	330806	Parameter	const void * p1	1044:8:24367:24380	330778	0	True				
ANR	330807	ParameterType	const void *		330778	0					
ANR	330808	Identifier	p1		330778	1					
ANR	330809	Parameter	const void * p2	1044:24:24383:24396	330778	1	True				
ANR	330810	ParameterType	const void *		330778	0					
ANR	330811	Identifier	p2		330778	1					
ANR	330812	CFGEntryNode	ENTRY		330778		True				
ANR	330813	CFGExitNode	EXIT		330778		True				
ANR	330814	Symbol	p1		330778						
ANR	330815	Symbol	p2		330778						
ANR	330816	Function	set_text_binary	1050:8:24476:25478							
ANR	330817	FunctionDef	"set_text_binary (struct magic_set * ms , struct magic_entry * me , uint32_t nme , uint32_t starttest)"		330816	0					
ANR	330818	CompoundStatement		1053:0:24585:25478	330816	0					
ANR	330819	Statement	static	1054:1:24588:24593	330816	0	True				
ANR	330820	IdentifierDeclStatement	"const char text [ ] = ""text"" ;"	1054:8:24595:24621	330816	1	True				
ANR	330821	IdentifierDecl	"text [ ] = ""text"""		330816	0					
ANR	330822	IdentifierDeclType	const char [ ]		330816	0					
ANR	330823	Identifier	text		330816	1					
ANR	330824	AssignmentExpression	"text [ ] = ""text"""		330816	2		=			
ANR	330825	Identifier	text		330816	0					
ANR	330826	PrimaryExpression	"""text"""		330816	1					
ANR	330827	Statement	static	1055:1:24624:24629	330816	2	True				
ANR	330828	IdentifierDeclStatement	"const char binary [ ] = ""binary"" ;"	1055:8:24631:24661	330816	3	True				
ANR	330829	IdentifierDecl	"binary [ ] = ""binary"""		330816	0					
ANR	330830	IdentifierDeclType	const char [ ]		330816	0					
ANR	330831	Identifier	binary		330816	1					
ANR	330832	AssignmentExpression	"binary [ ] = ""binary"""		330816	2		=			
ANR	330833	Identifier	binary		330816	0					
ANR	330834	PrimaryExpression	"""binary"""		330816	1					
ANR	330835	Statement	static	1056:1:24664:24669	330816	4	True				
ANR	330836	IdentifierDeclStatement	const size_t len = sizeof ( text ) ;	1056:8:24671:24702	330816	5	True				
ANR	330837	IdentifierDecl	len = sizeof ( text )		330816	0					
ANR	330838	IdentifierDeclType	const size_t		330816	0					
ANR	330839	Identifier	len		330816	1					
ANR	330840	AssignmentExpression	len = sizeof ( text )		330816	2		=			
ANR	330841	Identifier	len		330816	0					
ANR	330842	SizeofExpression	sizeof ( text )		330816	1					
ANR	330843	Sizeof	sizeof		330816	0					
ANR	330844	SizeofOperand	text		330816	1					
ANR	330845	IdentifierDeclStatement	uint32_t i = starttest ;	1058:1:24706:24728	330816	6	True				
ANR	330846	IdentifierDecl	i = starttest		330816	0					
ANR	330847	IdentifierDeclType	uint32_t		330816	0					
ANR	330848	Identifier	i		330816	1					
ANR	330849	AssignmentExpression	i = starttest		330816	2		=			
ANR	330850	Identifier	starttest		330816	0					
ANR	330851	Identifier	starttest		330816	1					
ANR	330852	DoStatement	do		330816	7					
ANR	330853	CompoundStatement		8:4:149:149	330816	0					
ANR	330854	ExpressionStatement	"set_test_type ( me [ starttest ] . mp , me [ i ] . mp )"	1061:2:24739:24780	330816	0	True				
ANR	330855	CallExpression	"set_test_type ( me [ starttest ] . mp , me [ i ] . mp )"		330816	0					
ANR	330856	Callee	set_test_type		330816	0					
ANR	330857	Identifier	set_test_type		330816	0					
ANR	330858	ArgumentList	me [ starttest ] . mp		330816	1					
ANR	330859	Argument	me [ starttest ] . mp		330816	0					
ANR	330860	MemberAccess	me [ starttest ] . mp		330816	0					
ANR	330861	ArrayIndexing	me [ starttest ]		330816	0					
ANR	330862	Identifier	me		330816	0					
ANR	330863	Identifier	starttest		330816	1					
ANR	330864	Identifier	mp		330816	1					
ANR	330865	Argument	me [ i ] . mp		330816	1					
ANR	330866	MemberAccess	me [ i ] . mp		330816	0					
ANR	330867	ArrayIndexing	me [ i ]		330816	0					
ANR	330868	Identifier	me		330816	0					
ANR	330869	Identifier	i		330816	1					
ANR	330870	Identifier	mp		330816	1					
ANR	330871	IfStatement	if ( ( ms -> flags & MAGIC_DEBUG ) == 0 )		330816	1					
ANR	330872	Condition	( ms -> flags & MAGIC_DEBUG ) == 0	1062:6:24788:24817	330816	0	True				
ANR	330873	EqualityExpression	( ms -> flags & MAGIC_DEBUG ) == 0		330816	0		==			
ANR	330874	BitAndExpression	ms -> flags & MAGIC_DEBUG		330816	0		&			
ANR	330875	PtrMemberAccess	ms -> flags		330816	0					
ANR	330876	Identifier	ms		330816	0					
ANR	330877	Identifier	flags		330816	1					
ANR	330878	Identifier	MAGIC_DEBUG		330816	1					
ANR	330879	PrimaryExpression	0		330816	1					
ANR	330880	ContinueStatement	continue ;	1063:3:24823:24831	330816	1	True				
ANR	330881	ExpressionStatement	"( void ) fprintf ( stderr , ""%s%s%s: %s\\n"" , me [ i ] . mp -> mimetype , me [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; "" , me [ i ] . mp -> desc [ 0 ] ? me [ i ] . mp -> desc : ""(no description)"" , me [ i ] . mp -> flag & BINTEST ? binary : text )"	1064:2:24835:25058	330816	2	True				
ANR	330882	CastExpression	"( void ) fprintf ( stderr , ""%s%s%s: %s\\n"" , me [ i ] . mp -> mimetype , me [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; "" , me [ i ] . mp -> desc [ 0 ] ? me [ i ] . mp -> desc : ""(no description)"" , me [ i ] . mp -> flag & BINTEST ? binary : text )"		330816	0					
ANR	330883	CastTarget	void		330816	0					
ANR	330884	CallExpression	"fprintf ( stderr , ""%s%s%s: %s\\n"" , me [ i ] . mp -> mimetype , me [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; "" , me [ i ] . mp -> desc [ 0 ] ? me [ i ] . mp -> desc : ""(no description)"" , me [ i ] . mp -> flag & BINTEST ? binary : text )"		330816	1					
ANR	330885	Callee	fprintf		330816	0					
ANR	330886	Identifier	fprintf		330816	0					
ANR	330887	ArgumentList	stderr		330816	1					
ANR	330888	Argument	stderr		330816	0					
ANR	330889	Identifier	stderr		330816	0					
ANR	330890	Argument	"""%s%s%s: %s\\n"""		330816	1					
ANR	330891	PrimaryExpression	"""%s%s%s: %s\\n"""		330816	0					
ANR	330892	Argument	me [ i ] . mp -> mimetype		330816	2					
ANR	330893	PtrMemberAccess	me [ i ] . mp -> mimetype		330816	0					
ANR	330894	MemberAccess	me [ i ] . mp		330816	0					
ANR	330895	ArrayIndexing	me [ i ]		330816	0					
ANR	330896	Identifier	me		330816	0					
ANR	330897	Identifier	i		330816	1					
ANR	330898	Identifier	mp		330816	1					
ANR	330899	Identifier	mimetype		330816	1					
ANR	330900	Argument	"me [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; """		330816	3					
ANR	330901	ConditionalExpression	"me [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; """		330816	0					
ANR	330902	Condition	me [ i ] . mp -> mimetype [ 0 ] == '\\0'		330816	0					
ANR	330903	EqualityExpression	me [ i ] . mp -> mimetype [ 0 ] == '\\0'		330816	0		==			
ANR	330904	ArrayIndexing	me [ i ] . mp -> mimetype [ 0 ]		330816	0					
ANR	330905	PtrMemberAccess	me [ i ] . mp -> mimetype		330816	0					
ANR	330906	MemberAccess	me [ i ] . mp		330816	0					
ANR	330907	ArrayIndexing	me [ i ]		330816	0					
ANR	330908	Identifier	me		330816	0					
ANR	330909	Identifier	i		330816	1					
ANR	330910	Identifier	mp		330816	1					
ANR	330911	Identifier	mimetype		330816	1					
ANR	330912	PrimaryExpression	0		330816	1					
ANR	330913	PrimaryExpression	'\\0'		330816	1					
ANR	330914	PrimaryExpression	""""""		330816	1					
ANR	330915	PrimaryExpression	"""; """		330816	2					
ANR	330916	Argument	"me [ i ] . mp -> desc [ 0 ] ? me [ i ] . mp -> desc : ""(no description)"""		330816	4					
ANR	330917	ConditionalExpression	"me [ i ] . mp -> desc [ 0 ] ? me [ i ] . mp -> desc : ""(no description)"""		330816	0					
ANR	330918	Condition	me [ i ] . mp -> desc [ 0 ]		330816	0					
ANR	330919	ArrayIndexing	me [ i ] . mp -> desc [ 0 ]		330816	0					
ANR	330920	PtrMemberAccess	me [ i ] . mp -> desc		330816	0					
ANR	330921	MemberAccess	me [ i ] . mp		330816	0					
ANR	330922	ArrayIndexing	me [ i ]		330816	0					
ANR	330923	Identifier	me		330816	0					
ANR	330924	Identifier	i		330816	1					
ANR	330925	Identifier	mp		330816	1					
ANR	330926	Identifier	desc		330816	1					
ANR	330927	PrimaryExpression	0		330816	1					
ANR	330928	PtrMemberAccess	me [ i ] . mp -> desc		330816	1					
ANR	330929	MemberAccess	me [ i ] . mp		330816	0					
ANR	330930	ArrayIndexing	me [ i ]		330816	0					
ANR	330931	Identifier	me		330816	0					
ANR	330932	Identifier	i		330816	1					
ANR	330933	Identifier	mp		330816	1					
ANR	330934	Identifier	desc		330816	1					
ANR	330935	PrimaryExpression	"""(no description)"""		330816	2					
ANR	330936	Argument	me [ i ] . mp -> flag & BINTEST ? binary : text		330816	5					
ANR	330937	ConditionalExpression	me [ i ] . mp -> flag & BINTEST ? binary : text		330816	0					
ANR	330938	Condition	me [ i ] . mp -> flag & BINTEST		330816	0					
ANR	330939	BitAndExpression	me [ i ] . mp -> flag & BINTEST		330816	0		&			
ANR	330940	PtrMemberAccess	me [ i ] . mp -> flag		330816	0					
ANR	330941	MemberAccess	me [ i ] . mp		330816	0					
ANR	330942	ArrayIndexing	me [ i ]		330816	0					
ANR	330943	Identifier	me		330816	0					
ANR	330944	Identifier	i		330816	1					
ANR	330945	Identifier	mp		330816	1					
ANR	330946	Identifier	flag		330816	1					
ANR	330947	Identifier	BINTEST		330816	1					
ANR	330948	Identifier	binary		330816	1					
ANR	330949	Identifier	text		330816	2					
ANR	330950	IfStatement	if ( me [ i ] . mp -> flag & BINTEST )		330816	3					
ANR	330951	Condition	me [ i ] . mp -> flag & BINTEST	1069:6:25066:25089	330816	0	True				
ANR	330952	BitAndExpression	me [ i ] . mp -> flag & BINTEST		330816	0		&			
ANR	330953	PtrMemberAccess	me [ i ] . mp -> flag		330816	0					
ANR	330954	MemberAccess	me [ i ] . mp		330816	0					
ANR	330955	ArrayIndexing	me [ i ]		330816	0					
ANR	330956	Identifier	me		330816	0					
ANR	330957	Identifier	i		330816	1					
ANR	330958	Identifier	mp		330816	1					
ANR	330959	Identifier	flag		330816	1					
ANR	330960	Identifier	BINTEST		330816	1					
ANR	330961	CompoundStatement		18:3:511:549	330816	1					
ANR	330962	IdentifierDeclStatement	"char * p = strstr ( me [ i ] . mp -> desc , text ) ;"	1070:3:25097:25135	330816	0	True				
ANR	330963	IdentifierDecl	"* p = strstr ( me [ i ] . mp -> desc , text )"		330816	0					
ANR	330964	IdentifierDeclType	char *		330816	0					
ANR	330965	Identifier	p		330816	1					
ANR	330966	AssignmentExpression	"* p = strstr ( me [ i ] . mp -> desc , text )"		330816	2		=			
ANR	330967	Identifier	p		330816	0					
ANR	330968	CallExpression	"strstr ( me [ i ] . mp -> desc , text )"		330816	1					
ANR	330969	Callee	strstr		330816	0					
ANR	330970	Identifier	strstr		330816	0					
ANR	330971	ArgumentList	me [ i ] . mp -> desc		330816	1					
ANR	330972	Argument	me [ i ] . mp -> desc		330816	0					
ANR	330973	PtrMemberAccess	me [ i ] . mp -> desc		330816	0					
ANR	330974	MemberAccess	me [ i ] . mp		330816	0					
ANR	330975	ArrayIndexing	me [ i ]		330816	0					
ANR	330976	Identifier	me		330816	0					
ANR	330977	Identifier	i		330816	1					
ANR	330978	Identifier	mp		330816	1					
ANR	330979	Identifier	desc		330816	1					
ANR	330980	Argument	text		330816	1					
ANR	330981	Identifier	text		330816	0					
ANR	330982	IfStatement	if ( p && ( p == me [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] ) ) && ( p + len - me [ i ] . mp -> desc == MAXstring || ( p [ len ] == '\\0' || isspace ( ( unsigned char ) p [ len ] ) ) ) )		330816	1					
ANR	330983	Condition	p && ( p == me [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] ) ) && ( p + len - me [ i ] . mp -> desc == MAXstring || ( p [ len ] == '\\0' || isspace ( ( unsigned char ) p [ len ] ) ) )	1071:7:25144:25327	330816	0	True				
ANR	330984	AndExpression	p && ( p == me [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] ) ) && ( p + len - me [ i ] . mp -> desc == MAXstring || ( p [ len ] == '\\0' || isspace ( ( unsigned char ) p [ len ] ) ) )		330816	0		&&			
ANR	330985	Identifier	p		330816	0					
ANR	330986	AndExpression	( p == me [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] ) ) && ( p + len - me [ i ] . mp -> desc == MAXstring || ( p [ len ] == '\\0' || isspace ( ( unsigned char ) p [ len ] ) ) )		330816	1		&&			
ANR	330987	OrExpression	p == me [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] )		330816	0		||			
ANR	330988	EqualityExpression	p == me [ i ] . mp -> desc		330816	0		==			
ANR	330989	Identifier	p		330816	0					
ANR	330990	PtrMemberAccess	me [ i ] . mp -> desc		330816	1					
ANR	330991	MemberAccess	me [ i ] . mp		330816	0					
ANR	330992	ArrayIndexing	me [ i ]		330816	0					
ANR	330993	Identifier	me		330816	0					
ANR	330994	Identifier	i		330816	1					
ANR	330995	Identifier	mp		330816	1					
ANR	330996	Identifier	desc		330816	1					
ANR	330997	CallExpression	isspace ( ( unsigned char ) p [ - 1 ] )		330816	1					
ANR	330998	Callee	isspace		330816	0					
ANR	330999	Identifier	isspace		330816	0					
ANR	331000	ArgumentList	( unsigned char ) p [ - 1 ]		330816	1					
ANR	331001	Argument	( unsigned char ) p [ - 1 ]		330816	0					
ANR	331002	CastExpression	( unsigned char ) p [ - 1 ]		330816	0					
ANR	331003	CastTarget	unsigned char		330816	0					
ANR	331004	ArrayIndexing	p [ - 1 ]		330816	1					
ANR	331005	Identifier	p		330816	0					
ANR	331006	UnaryOperationExpression	- 1		330816	1					
ANR	331007	UnaryOperator	-		330816	0					
ANR	331008	PrimaryExpression	1		330816	1					
ANR	331009	OrExpression	p + len - me [ i ] . mp -> desc == MAXstring || ( p [ len ] == '\\0' || isspace ( ( unsigned char ) p [ len ] ) )		330816	1		||			
ANR	331010	EqualityExpression	p + len - me [ i ] . mp -> desc == MAXstring		330816	0		==			
ANR	331011	AdditiveExpression	p + len - me [ i ] . mp -> desc		330816	0		+			
ANR	331012	Identifier	p		330816	0					
ANR	331013	AdditiveExpression	len - me [ i ] . mp -> desc		330816	1		-			
ANR	331014	Identifier	len		330816	0					
ANR	331015	PtrMemberAccess	me [ i ] . mp -> desc		330816	1					
ANR	331016	MemberAccess	me [ i ] . mp		330816	0					
ANR	331017	ArrayIndexing	me [ i ]		330816	0					
ANR	331018	Identifier	me		330816	0					
ANR	331019	Identifier	i		330816	1					
ANR	331020	Identifier	mp		330816	1					
ANR	331021	Identifier	desc		330816	1					
ANR	331022	Identifier	MAXstring		330816	1					
ANR	331023	OrExpression	p [ len ] == '\\0' || isspace ( ( unsigned char ) p [ len ] )		330816	1		||			
ANR	331024	EqualityExpression	p [ len ] == '\\0'		330816	0		==			
ANR	331025	ArrayIndexing	p [ len ]		330816	0					
ANR	331026	Identifier	p		330816	0					
ANR	331027	Identifier	len		330816	1					
ANR	331028	PrimaryExpression	'\\0'		330816	1					
ANR	331029	CallExpression	isspace ( ( unsigned char ) p [ len ] )		330816	1					
ANR	331030	Callee	isspace		330816	0					
ANR	331031	Identifier	isspace		330816	0					
ANR	331032	ArgumentList	( unsigned char ) p [ len ]		330816	1					
ANR	331033	Argument	( unsigned char ) p [ len ]		330816	0					
ANR	331034	CastExpression	( unsigned char ) p [ len ]		330816	0					
ANR	331035	CastTarget	unsigned char		330816	0					
ANR	331036	ArrayIndexing	p [ len ]		330816	1					
ANR	331037	Identifier	p		330816	0					
ANR	331038	Identifier	len		330816	1					
ANR	331039	Statement	(	1076:4:25334:25334	330816	1	True				
ANR	331040	Statement	void	1076:5:25335:25338	330816	2	True				
ANR	331041	Statement	)	1076:9:25339:25339	330816	3	True				
ANR	331042	Statement	fprintf	1076:10:25340:25346	330816	4	True				
ANR	331043	Statement	(	1076:17:25347:25347	330816	5	True				
ANR	331044	Statement	stderr	1076:18:25348:25353	330816	6	True				
ANR	331045	Statement	","	1076:24:25354:25354	330816	7	True				
ANR	331046	Statement	"""*** Possible """	1076:26:25356:25370	330816	8	True				
ANR	331047	Statement	"""binary test for text type\\n"""	1077:8:25380:25408	330816	9	True				
ANR	331048	Statement	)	1077:37:25409:25409	330816	10	True				
ANR	331049	ExpressionStatement		1077:38:25410:25410	330816	11	True				
ANR	331050	Condition	++ i < nme && me [ i ] . mp -> cont_level != 0	1079:10:25426:25463	330816	1	True				
ANR	331051	AndExpression	++ i < nme && me [ i ] . mp -> cont_level != 0		330816	0		&&			
ANR	331052	RelationalExpression	++ i < nme		330816	0		<			
ANR	331053	UnaryExpression	++ i		330816	0					
ANR	331054	IncDec	++		330816	0					
ANR	331055	Identifier	i		330816	1					
ANR	331056	Identifier	nme		330816	1					
ANR	331057	EqualityExpression	me [ i ] . mp -> cont_level != 0		330816	1		!=			
ANR	331058	PtrMemberAccess	me [ i ] . mp -> cont_level		330816	0					
ANR	331059	MemberAccess	me [ i ] . mp		330816	0					
ANR	331060	ArrayIndexing	me [ i ]		330816	0					
ANR	331061	Identifier	me		330816	0					
ANR	331062	Identifier	i		330816	1					
ANR	331063	Identifier	mp		330816	1					
ANR	331064	Identifier	cont_level		330816	1					
ANR	331065	PrimaryExpression	0		330816	1					
ANR	331066	ReturnStatement	return i ;	1080:1:25468:25476	330816	8	True				
ANR	331067	Identifier	i		330816	0					
ANR	331068	ReturnType	uint32_t		330816	1					
ANR	331069	Identifier	set_text_binary		330816	2					
ANR	331070	ParameterList	"struct magic_set * ms , struct magic_entry * me , uint32_t nme , uint32_t starttest"		330816	3					
ANR	331071	Parameter	struct magic_set * ms	1051:16:24501:24520	330816	0	True				
ANR	331072	ParameterType	struct magic_set *		330816	0					
ANR	331073	Identifier	ms		330816	1					
ANR	331074	Parameter	struct magic_entry * me	1051:38:24523:24544	330816	1	True				
ANR	331075	ParameterType	struct magic_entry *		330816	0					
ANR	331076	Identifier	me		330816	1					
ANR	331077	Parameter	uint32_t nme	1051:62:24547:24558	330816	2	True				
ANR	331078	ParameterType	uint32_t		330816	0					
ANR	331079	Identifier	nme		330816	1					
ANR	331080	Parameter	uint32_t starttest	1052:4:24565:24582	330816	3	True				
ANR	331081	ParameterType	uint32_t		330816	0					
ANR	331082	Identifier	starttest		330816	1					
ANR	331083	CFGEntryNode	ENTRY		330816		True				
ANR	331084	CFGExitNode	EXIT		330816		True				
ANR	331085	Symbol	* * * me		330816						
ANR	331086	Symbol	* me [ i ] . mp -> mimetype		330816						
ANR	331087	Symbol	* me [ i ] . mp		330816						
ANR	331088	Symbol	* * me		330816						
ANR	331089	Symbol	* me [ i ] . mp -> desc		330816						
ANR	331090	Symbol	nme		330816						
ANR	331091	Symbol	me [ i ] . mp -> cont_level		330816						
ANR	331092	Symbol	* ms		330816						
ANR	331093	Symbol	starttest		330816						
ANR	331094	Symbol	len		330816						
ANR	331095	Symbol	me		330816						
ANR	331096	Symbol	me [ i ] . mp -> desc		330816						
ANR	331097	Symbol	text		330816						
ANR	331098	Symbol	* me		330816						
ANR	331099	Symbol	MAGIC_DEBUG		330816						
ANR	331100	Symbol	* * i		330816						
ANR	331101	Symbol	ms		330816						
ANR	331102	Symbol	BINTEST		330816						
ANR	331103	Symbol	isspace		330816						
ANR	331104	Symbol	i		330816						
ANR	331105	Symbol	* starttest		330816						
ANR	331106	Symbol	stderr		330816						
ANR	331107	Symbol	MAXstring		330816						
ANR	331108	Symbol	* * me [ i ] . mp		330816						
ANR	331109	Symbol	me [ i ] . mp -> flag		330816						
ANR	331110	Symbol	p		330816						
ANR	331111	Symbol	me [ i ] . mp		330816						
ANR	331112	Symbol	* i		330816						
ANR	331113	Symbol	me [ i ] . mp -> mimetype		330816						
ANR	331114	Symbol	me [ starttest ] . mp		330816						
ANR	331115	Symbol	strstr		330816						
ANR	331116	Symbol	binary		330816						
ANR	331117	Symbol	* * * i		330816						
ANR	331118	Symbol	* p		330816						
ANR	331119	Symbol	ms -> flags		330816						
ANR	331120	Symbol	* len		330816						
ANR	331121	Function	set_last_default	1083:8:25489:25934							
ANR	331122	FunctionDef	"set_last_default (struct magic_set * ms , struct magic_entry * me , uint32_t nme)"		331121	0					
ANR	331123	CompoundStatement		1085:0:25571:25934	331121	0					
ANR	331124	IdentifierDeclStatement	uint32_t i ;	1086:1:25574:25584	331121	0	True				
ANR	331125	IdentifierDecl	i		331121	0					
ANR	331126	IdentifierDeclType	uint32_t		331121	0					
ANR	331127	Identifier	i		331121	1					
ANR	331128	ForStatement	for ( i = 0 ; i < nme ; i ++ )		331121	1					
ANR	331129	ForInit	i = 0 ;	1087:6:25592:25597	331121	0	True				
ANR	331130	AssignmentExpression	i = 0		331121	0		=			
ANR	331131	Identifier	i		331121	0					
ANR	331132	PrimaryExpression	0		331121	1					
ANR	331133	Condition	i < nme	1087:13:25599:25605	331121	1	True				
ANR	331134	RelationalExpression	i < nme		331121	0		<			
ANR	331135	Identifier	i		331121	0					
ANR	331136	Identifier	nme		331121	1					
ANR	331137	PostIncDecOperationExpression	i ++	1087:22:25608:25610	331121	2	True				
ANR	331138	Identifier	i		331121	0					
ANR	331139	IncDec	++		331121	1					
ANR	331140	CompoundStatement		3:27:41:41	331121	3					
ANR	331141	IfStatement	if ( me [ i ] . mp -> cont_level == 0 && me [ i ] . mp -> type == FILE_DEFAULT )		331121	0					
ANR	331142	Condition	me [ i ] . mp -> cont_level == 0 && me [ i ] . mp -> type == FILE_DEFAULT	1088:6:25621:25685	331121	0	True				
ANR	331143	AndExpression	me [ i ] . mp -> cont_level == 0 && me [ i ] . mp -> type == FILE_DEFAULT		331121	0		&&			
ANR	331144	EqualityExpression	me [ i ] . mp -> cont_level == 0		331121	0		==			
ANR	331145	PtrMemberAccess	me [ i ] . mp -> cont_level		331121	0					
ANR	331146	MemberAccess	me [ i ] . mp		331121	0					
ANR	331147	ArrayIndexing	me [ i ]		331121	0					
ANR	331148	Identifier	me		331121	0					
ANR	331149	Identifier	i		331121	1					
ANR	331150	Identifier	mp		331121	1					
ANR	331151	Identifier	cont_level		331121	1					
ANR	331152	PrimaryExpression	0		331121	1					
ANR	331153	EqualityExpression	me [ i ] . mp -> type == FILE_DEFAULT		331121	1		==			
ANR	331154	PtrMemberAccess	me [ i ] . mp -> type		331121	0					
ANR	331155	MemberAccess	me [ i ] . mp		331121	0					
ANR	331156	ArrayIndexing	me [ i ]		331121	0					
ANR	331157	Identifier	me		331121	0					
ANR	331158	Identifier	i		331121	1					
ANR	331159	Identifier	mp		331121	1					
ANR	331160	Identifier	type		331121	1					
ANR	331161	Identifier	FILE_DEFAULT		331121	1					
ANR	331162	CompoundStatement		5:38:116:116	331121	1					
ANR	331163	WhileStatement	while ( ++ i < nme )		331121	0					
ANR	331164	Condition	++ i < nme	1090:10:25700:25708	331121	0	True				
ANR	331165	RelationalExpression	++ i < nme		331121	0		<			
ANR	331166	UnaryExpression	++ i		331121	0					
ANR	331167	IncDec	++		331121	0					
ANR	331168	Identifier	i		331121	1					
ANR	331169	Identifier	nme		331121	1					
ANR	331170	IfStatement	if ( me [ i ] . mp -> cont_level == 0 )		331121	1					
ANR	331171	Condition	me [ i ] . mp -> cont_level == 0	1091:8:25719:25743	331121	0	True				
ANR	331172	EqualityExpression	me [ i ] . mp -> cont_level == 0		331121	0		==			
ANR	331173	PtrMemberAccess	me [ i ] . mp -> cont_level		331121	0					
ANR	331174	MemberAccess	me [ i ] . mp		331121	0					
ANR	331175	ArrayIndexing	me [ i ]		331121	0					
ANR	331176	Identifier	me		331121	0					
ANR	331177	Identifier	i		331121	1					
ANR	331178	Identifier	mp		331121	1					
ANR	331179	Identifier	cont_level		331121	1					
ANR	331180	PrimaryExpression	0		331121	1					
ANR	331181	BreakStatement	break ;	1092:5:25751:25756	331121	1	True				
ANR	331182	IfStatement	if ( i != nme )		331121	1					
ANR	331183	Condition	i != nme	1093:7:25765:25772	331121	0	True				
ANR	331184	EqualityExpression	i != nme		331121	0		!=			
ANR	331185	Identifier	i		331121	0					
ANR	331186	Identifier	nme		331121	1					
ANR	331187	CompoundStatement		9:17:203:203	331121	1					
ANR	331188	ExpressionStatement	ms -> line = me [ i ] . mp -> lineno	1095:4:25802:25829	331121	0	True				
ANR	331189	AssignmentExpression	ms -> line = me [ i ] . mp -> lineno		331121	0		=			
ANR	331190	PtrMemberAccess	ms -> line		331121	0					
ANR	331191	Identifier	ms		331121	0					
ANR	331192	Identifier	line		331121	1					
ANR	331193	PtrMemberAccess	me [ i ] . mp -> lineno		331121	1					
ANR	331194	MemberAccess	me [ i ] . mp		331121	0					
ANR	331195	ArrayIndexing	me [ i ]		331121	0					
ANR	331196	Identifier	me		331121	0					
ANR	331197	Identifier	i		331121	1					
ANR	331198	Identifier	mp		331121	1					
ANR	331199	Identifier	lineno		331121	1					
ANR	331200	ExpressionStatement	"file_magwarn ( ms , ""level 0 \\""default\\"" did not sort last"" )"	1096:4:25835:25900	331121	1	True				
ANR	331201	CallExpression	"file_magwarn ( ms , ""level 0 \\""default\\"" did not sort last"" )"		331121	0					
ANR	331202	Callee	file_magwarn		331121	0					
ANR	331203	Identifier	file_magwarn		331121	0					
ANR	331204	ArgumentList	ms		331121	1					
ANR	331205	Argument	ms		331121	0					
ANR	331206	Identifier	ms		331121	0					
ANR	331207	Argument	"""level 0 \\""default\\"" did not sort last"""		331121	1					
ANR	331208	PrimaryExpression	"""level 0 \\""default\\"" did not sort last"""		331121	0					
ANR	331209	ReturnStatement	return ;	1099:3:25910:25916	331121	2	True				
ANR	331210	ReturnType	void		331121	1					
ANR	331211	Identifier	set_last_default		331121	2					
ANR	331212	ParameterList	"struct magic_set * ms , struct magic_entry * me , uint32_t nme"		331121	3					
ANR	331213	Parameter	struct magic_set * ms	1084:17:25511:25530	331121	0	True				
ANR	331214	ParameterType	struct magic_set *		331121	0					
ANR	331215	Identifier	ms		331121	1					
ANR	331216	Parameter	struct magic_entry * me	1084:39:25533:25554	331121	1	True				
ANR	331217	ParameterType	struct magic_entry *		331121	0					
ANR	331218	Identifier	me		331121	1					
ANR	331219	Parameter	uint32_t nme	1084:63:25557:25568	331121	2	True				
ANR	331220	ParameterType	uint32_t		331121	0					
ANR	331221	Identifier	nme		331121	1					
ANR	331222	CFGEntryNode	ENTRY		331121		True				
ANR	331223	CFGExitNode	EXIT		331121		True				
ANR	331224	Symbol	* * i		331121						
ANR	331225	Symbol	* me [ i ] . mp		331121						
ANR	331226	Symbol	ms		331121						
ANR	331227	Symbol	* * me		331121						
ANR	331228	Symbol	FILE_DEFAULT		331121						
ANR	331229	Symbol	nme		331121						
ANR	331230	Symbol	me [ i ] . mp -> type		331121						
ANR	331231	Symbol	me [ i ] . mp -> cont_level		331121						
ANR	331232	Symbol	me [ i ] . mp -> lineno		331121						
ANR	331233	Symbol	i		331121						
ANR	331234	Symbol	ms -> line		331121						
ANR	331235	Symbol	* ms		331121						
ANR	331236	Symbol	me [ i ] . mp		331121						
ANR	331237	Symbol	* i		331121						
ANR	331238	Symbol	me		331121						
ANR	331239	Symbol	* me		331121						
ANR	331240	Function	coalesce_entries	1104:8:25945:26512							
ANR	331241	FunctionDef	"coalesce_entries (struct magic_set * ms , struct magic_entry * me , uint32_t nme , struct magic * * ma , uint32_t * nma)"		331240	0					
ANR	331242	CompoundStatement		1107:0:26064:26512	331240	0					
ANR	331243	IdentifierDeclStatement	"uint32_t i , mentrycount = 0 ;"	1108:1:26067:26094	331240	0	True				
ANR	331244	IdentifierDecl	i		331240	0					
ANR	331245	IdentifierDeclType	uint32_t		331240	0					
ANR	331246	Identifier	i		331240	1					
ANR	331247	IdentifierDecl	mentrycount = 0		331240	1					
ANR	331248	IdentifierDeclType	uint32_t		331240	0					
ANR	331249	Identifier	mentrycount		331240	1					
ANR	331250	AssignmentExpression	mentrycount = 0		331240	2		=			
ANR	331251	Identifier	mentrycount		331240	0					
ANR	331252	PrimaryExpression	0		331240	1					
ANR	331253	IdentifierDeclStatement	size_t slen ;	1109:1:26097:26108	331240	1	True				
ANR	331254	IdentifierDecl	slen		331240	0					
ANR	331255	IdentifierDeclType	size_t		331240	0					
ANR	331256	Identifier	slen		331240	1					
ANR	331257	ForStatement	for ( i = 0 ; i < nme ; i ++ )		331240	2					
ANR	331258	ForInit	i = 0 ;	1111:6:26117:26122	331240	0	True				
ANR	331259	AssignmentExpression	i = 0		331240	0		=			
ANR	331260	Identifier	i		331240	0					
ANR	331261	PrimaryExpression	0		331240	1					
ANR	331262	Condition	i < nme	1111:13:26124:26130	331240	1	True				
ANR	331263	RelationalExpression	i < nme		331240	0		<			
ANR	331264	Identifier	i		331240	0					
ANR	331265	Identifier	nme		331240	1					
ANR	331266	PostIncDecOperationExpression	i ++	1111:22:26133:26135	331240	2	True				
ANR	331267	Identifier	i		331240	0					
ANR	331268	IncDec	++		331240	1					
ANR	331269	ExpressionStatement	mentrycount += me [ i ] . cont_count	1112:2:26140:26171	331240	3	True				
ANR	331270	AssignmentExpression	mentrycount += me [ i ] . cont_count		331240	0		+=			
ANR	331271	Identifier	mentrycount		331240	0					
ANR	331272	MemberAccess	me [ i ] . cont_count		331240	1					
ANR	331273	ArrayIndexing	me [ i ]		331240	0					
ANR	331274	Identifier	me		331240	0					
ANR	331275	Identifier	i		331240	1					
ANR	331276	Identifier	cont_count		331240	1					
ANR	331277	ExpressionStatement	slen = sizeof ( * * ma ) * mentrycount	1114:1:26175:26208	331240	3	True				
ANR	331278	AssignmentExpression	slen = sizeof ( * * ma ) * mentrycount		331240	0		=			
ANR	331279	Identifier	slen		331240	0					
ANR	331280	MultiplicativeExpression	sizeof ( * * ma ) * mentrycount		331240	1		*			
ANR	331281	SizeofExpression	sizeof ( * * ma )		331240	0					
ANR	331282	Sizeof	sizeof		331240	0					
ANR	331283	UnaryOperationExpression	* * ma		331240	1					
ANR	331284	UnaryOperator	*		331240	0					
ANR	331285	UnaryOperationExpression	* ma		331240	1					
ANR	331286	UnaryOperator	*		331240	0					
ANR	331287	Identifier	ma		331240	1					
ANR	331288	Identifier	mentrycount		331240	1					
ANR	331289	Statement	if	1115:1:26211:26212	331240	4	True				
ANR	331290	Statement	(	1115:4:26214:26214	331240	5	True				
ANR	331291	Statement	(	1115:5:26215:26215	331240	6	True				
ANR	331292	Statement	*	1115:6:26216:26216	331240	7	True				
ANR	331293	Statement	ma	1115:7:26217:26218	331240	8	True				
ANR	331294	Statement	=	1115:10:26220:26220	331240	9	True				
ANR	331295	Statement	CAST	1115:12:26222:26225	331240	10	True				
ANR	331296	Statement	(	1115:16:26226:26226	331240	11	True				
ANR	331297	Statement	struct	1115:17:26227:26232	331240	12	True				
ANR	331298	Statement	magic	1115:24:26234:26238	331240	13	True				
ANR	331299	Statement	*	1115:30:26240:26240	331240	14	True				
ANR	331300	Statement	","	1115:31:26241:26241	331240	15	True				
ANR	331301	Statement	emalloc	1115:33:26243:26249	331240	16	True				
ANR	331302	Statement	(	1115:40:26250:26250	331240	17	True				
ANR	331303	Statement	slen	1115:41:26251:26254	331240	18	True				
ANR	331304	Statement	)	1115:45:26255:26255	331240	19	True				
ANR	331305	Statement	)	1115:46:26256:26256	331240	20	True				
ANR	331306	Statement	)	1115:47:26257:26257	331240	21	True				
ANR	331307	Statement	==	1115:49:26259:26260	331240	22	True				
ANR	331308	Statement	NULL	1115:52:26262:26265	331240	23	True				
ANR	331309	Statement	)	1115:56:26266:26266	331240	24	True				
ANR	331310	CompoundStatement		9:58:203:203	331240	25					
ANR	331311	ExpressionStatement	"file_oomem ( ms , slen )"	1116:2:26272:26292	331240	0	True				
ANR	331312	CallExpression	"file_oomem ( ms , slen )"		331240	0					
ANR	331313	Callee	file_oomem		331240	0					
ANR	331314	Identifier	file_oomem		331240	0					
ANR	331315	ArgumentList	ms		331240	1					
ANR	331316	Argument	ms		331240	0					
ANR	331317	Identifier	ms		331240	0					
ANR	331318	Argument	slen		331240	1					
ANR	331319	Identifier	slen		331240	0					
ANR	331320	ReturnStatement	return - 1 ;	1117:2:26296:26305	331240	1	True				
ANR	331321	UnaryOperationExpression	- 1		331240	0					
ANR	331322	UnaryOperator	-		331240	0					
ANR	331323	PrimaryExpression	1		331240	1					
ANR	331324	ExpressionStatement	mentrycount = 0	1120:1:26312:26327	331240	26	True				
ANR	331325	AssignmentExpression	mentrycount = 0		331240	0		=			
ANR	331326	Identifier	mentrycount		331240	0					
ANR	331327	PrimaryExpression	0		331240	1					
ANR	331328	ForStatement	for ( i = 0 ; i < nme ; i ++ )		331240	27					
ANR	331329	ForInit	i = 0 ;	1121:6:26335:26340	331240	0	True				
ANR	331330	AssignmentExpression	i = 0		331240	0		=			
ANR	331331	Identifier	i		331240	0					
ANR	331332	PrimaryExpression	0		331240	1					
ANR	331333	Condition	i < nme	1121:13:26342:26348	331240	1	True				
ANR	331334	RelationalExpression	i < nme		331240	0		<			
ANR	331335	Identifier	i		331240	0					
ANR	331336	Identifier	nme		331240	1					
ANR	331337	PostIncDecOperationExpression	i ++	1121:22:26351:26353	331240	2	True				
ANR	331338	Identifier	i		331240	0					
ANR	331339	IncDec	++		331240	1					
ANR	331340	CompoundStatement		15:27:291:291	331240	3					
ANR	331341	ExpressionStatement	"( void ) memcpy ( * ma + mentrycount , me [ i ] . mp , me [ i ] . cont_count * sizeof ( * * ma ) )"	1122:2:26360:26440	331240	0	True				
ANR	331342	CastExpression	"( void ) memcpy ( * ma + mentrycount , me [ i ] . mp , me [ i ] . cont_count * sizeof ( * * ma ) )"		331240	0					
ANR	331343	CastTarget	void		331240	0					
ANR	331344	CallExpression	"memcpy ( * ma + mentrycount , me [ i ] . mp , me [ i ] . cont_count * sizeof ( * * ma ) )"		331240	1					
ANR	331345	Callee	memcpy		331240	0					
ANR	331346	Identifier	memcpy		331240	0					
ANR	331347	ArgumentList	* ma + mentrycount		331240	1					
ANR	331348	Argument	* ma + mentrycount		331240	0					
ANR	331349	AdditiveExpression	* ma + mentrycount		331240	0		+			
ANR	331350	UnaryOperationExpression	* ma		331240	0					
ANR	331351	UnaryOperator	*		331240	0					
ANR	331352	Identifier	ma		331240	1					
ANR	331353	Identifier	mentrycount		331240	1					
ANR	331354	Argument	me [ i ] . mp		331240	1					
ANR	331355	MemberAccess	me [ i ] . mp		331240	0					
ANR	331356	ArrayIndexing	me [ i ]		331240	0					
ANR	331357	Identifier	me		331240	0					
ANR	331358	Identifier	i		331240	1					
ANR	331359	Identifier	mp		331240	1					
ANR	331360	Argument	me [ i ] . cont_count * sizeof ( * * ma )		331240	2					
ANR	331361	MultiplicativeExpression	me [ i ] . cont_count * sizeof ( * * ma )		331240	0		*			
ANR	331362	MemberAccess	me [ i ] . cont_count		331240	0					
ANR	331363	ArrayIndexing	me [ i ]		331240	0					
ANR	331364	Identifier	me		331240	0					
ANR	331365	Identifier	i		331240	1					
ANR	331366	Identifier	cont_count		331240	1					
ANR	331367	SizeofExpression	sizeof ( * * ma )		331240	1					
ANR	331368	Sizeof	sizeof		331240	0					
ANR	331369	UnaryOperationExpression	* * ma		331240	1					
ANR	331370	UnaryOperator	*		331240	0					
ANR	331371	UnaryOperationExpression	* ma		331240	1					
ANR	331372	UnaryOperator	*		331240	0					
ANR	331373	Identifier	ma		331240	1					
ANR	331374	ExpressionStatement	mentrycount += me [ i ] . cont_count	1124:2:26444:26475	331240	1	True				
ANR	331375	AssignmentExpression	mentrycount += me [ i ] . cont_count		331240	0		+=			
ANR	331376	Identifier	mentrycount		331240	0					
ANR	331377	MemberAccess	me [ i ] . cont_count		331240	1					
ANR	331378	ArrayIndexing	me [ i ]		331240	0					
ANR	331379	Identifier	me		331240	0					
ANR	331380	Identifier	i		331240	1					
ANR	331381	Identifier	cont_count		331240	1					
ANR	331382	ExpressionStatement	* nma = mentrycount	1126:1:26481:26499	331240	28	True				
ANR	331383	AssignmentExpression	* nma = mentrycount		331240	0		=			
ANR	331384	UnaryOperationExpression	* nma		331240	0					
ANR	331385	UnaryOperator	*		331240	0					
ANR	331386	Identifier	nma		331240	1					
ANR	331387	Identifier	mentrycount		331240	1					
ANR	331388	ReturnStatement	return 0 ;	1127:1:26502:26510	331240	29	True				
ANR	331389	PrimaryExpression	0		331240	0					
ANR	331390	ReturnType	int		331240	1					
ANR	331391	Identifier	coalesce_entries		331240	2					
ANR	331392	ParameterList	"struct magic_set * ms , struct magic_entry * me , uint32_t nme , struct magic * * ma , uint32_t * nma"		331240	3					
ANR	331393	Parameter	struct magic_set * ms	1105:17:25966:25985	331240	0	True				
ANR	331394	ParameterType	struct magic_set *		331240	0					
ANR	331395	Identifier	ms		331240	1					
ANR	331396	Parameter	struct magic_entry * me	1105:39:25988:26009	331240	1	True				
ANR	331397	ParameterType	struct magic_entry *		331240	0					
ANR	331398	Identifier	me		331240	1					
ANR	331399	Parameter	uint32_t nme	1105:63:26012:26023	331240	2	True				
ANR	331400	ParameterType	uint32_t		331240	0					
ANR	331401	Identifier	nme		331240	1					
ANR	331402	Parameter	struct magic * * ma	1106:4:26030:26046	331240	3	True				
ANR	331403	ParameterType	struct magic * *		331240	0					
ANR	331404	Identifier	ma		331240	1					
ANR	331405	Parameter	uint32_t * nma	1106:23:26049:26061	331240	4	True				
ANR	331406	ParameterType	uint32_t *		331240	0					
ANR	331407	Identifier	nma		331240	1					
ANR	331408	CFGEntryNode	ENTRY		331240		True				
ANR	331409	CFGExitNode	EXIT		331240		True				
ANR	331410	Symbol	* * ma		331240						
ANR	331411	Symbol	nma		331240						
ANR	331412	Symbol	me [ i ] . cont_count		331240						
ANR	331413	Symbol	ms		331240						
ANR	331414	Symbol	nme		331240						
ANR	331415	Symbol	i		331240						
ANR	331416	Symbol	* nma		331240						
ANR	331417	Symbol	me [ i ] . mp		331240						
ANR	331418	Symbol	* i		331240						
ANR	331419	Symbol	ma		331240						
ANR	331420	Symbol	slen		331240						
ANR	331421	Symbol	me		331240						
ANR	331422	Symbol	* ma		331240						
ANR	331423	Symbol	mentrycount		331240						
ANR	331424	Symbol	* me		331240						
ANR	331425	Function	magic_entry_free	1130:8:26523:26683							
ANR	331426	FunctionDef	"magic_entry_free (struct magic_entry * me , uint32_t nme)"		331425	0					
ANR	331427	CompoundStatement		1132:0:26583:26683	331425	0					
ANR	331428	IdentifierDeclStatement	uint32_t i ;	1133:1:26586:26596	331425	0	True				
ANR	331429	IdentifierDecl	i		331425	0					
ANR	331430	IdentifierDeclType	uint32_t		331425	0					
ANR	331431	Identifier	i		331425	1					
ANR	331432	IfStatement	if ( me == NULL )		331425	1					
ANR	331433	Condition	me == NULL	1134:5:26603:26612	331425	0	True				
ANR	331434	EqualityExpression	me == NULL		331425	0		==			
ANR	331435	Identifier	me		331425	0					
ANR	331436	Identifier	NULL		331425	1					
ANR	331437	ReturnStatement	return ;	1135:2:26617:26623	331425	1	True				
ANR	331438	ForStatement	for ( i = 0 ; i < nme ; i ++ )		331425	2					
ANR	331439	ForInit	i = 0 ;	1136:6:26631:26636	331425	0	True				
ANR	331440	AssignmentExpression	i = 0		331425	0		=			
ANR	331441	Identifier	i		331425	0					
ANR	331442	PrimaryExpression	0		331425	1					
ANR	331443	Condition	i < nme	1136:13:26638:26644	331425	1	True				
ANR	331444	RelationalExpression	i < nme		331425	0		<			
ANR	331445	Identifier	i		331425	0					
ANR	331446	Identifier	nme		331425	1					
ANR	331447	PostIncDecOperationExpression	i ++	1136:22:26647:26649	331425	2	True				
ANR	331448	Identifier	i		331425	0					
ANR	331449	IncDec	++		331425	1					
ANR	331450	ExpressionStatement	efree ( me [ i ] . mp )	1137:2:26654:26669	331425	3	True				
ANR	331451	CallExpression	efree ( me [ i ] . mp )		331425	0					
ANR	331452	Callee	efree		331425	0					
ANR	331453	Identifier	efree		331425	0					
ANR	331454	ArgumentList	me [ i ] . mp		331425	1					
ANR	331455	Argument	me [ i ] . mp		331425	0					
ANR	331456	MemberAccess	me [ i ] . mp		331425	0					
ANR	331457	ArrayIndexing	me [ i ]		331425	0					
ANR	331458	Identifier	me		331425	0					
ANR	331459	Identifier	i		331425	1					
ANR	331460	Identifier	mp		331425	1					
ANR	331461	ExpressionStatement	efree ( me )	1138:1:26672:26681	331425	3	True				
ANR	331462	CallExpression	efree ( me )		331425	0					
ANR	331463	Callee	efree		331425	0					
ANR	331464	Identifier	efree		331425	0					
ANR	331465	ArgumentList	me		331425	1					
ANR	331466	Argument	me		331425	0					
ANR	331467	Identifier	me		331425	0					
ANR	331468	ReturnType	void		331425	1					
ANR	331469	Identifier	magic_entry_free		331425	2					
ANR	331470	ParameterList	"struct magic_entry * me , uint32_t nme"		331425	3					
ANR	331471	Parameter	struct magic_entry * me	1131:17:26545:26566	331425	0	True				
ANR	331472	ParameterType	struct magic_entry *		331425	0					
ANR	331473	Identifier	me		331425	1					
ANR	331474	Parameter	uint32_t nme	1131:41:26569:26580	331425	1	True				
ANR	331475	ParameterType	uint32_t		331425	0					
ANR	331476	Identifier	nme		331425	1					
ANR	331477	CFGEntryNode	ENTRY		331425		True				
ANR	331478	CFGExitNode	EXIT		331425		True				
ANR	331479	Symbol	me [ i ] . mp		331425						
ANR	331480	Symbol	NULL		331425						
ANR	331481	Symbol	* i		331425						
ANR	331482	Symbol	nme		331425						
ANR	331483	Symbol	me		331425						
ANR	331484	Symbol	i		331425						
ANR	331485	Symbol	* me		331425						
ANR	331486	Function	apprentice_load	1141:8:26694:29530							
ANR	331487	FunctionDef	"apprentice_load (struct magic_set * ms , const char * fn , int action)"		331486	0					
ANR	331488	CompoundStatement		1143:0:26779:29530	331486	0					
ANR	331489	IdentifierDeclStatement	int errs = 0 ;	1144:1:26782:26794	331486	0	True				
ANR	331490	IdentifierDecl	errs = 0		331486	0					
ANR	331491	IdentifierDeclType	int		331486	0					
ANR	331492	Identifier	errs		331486	1					
ANR	331493	AssignmentExpression	errs = 0		331486	2		=			
ANR	331494	Identifier	errs		331486	0					
ANR	331495	PrimaryExpression	0		331486	1					
ANR	331496	IdentifierDeclStatement	"uint32_t i , j ;"	1145:1:26797:26810	331486	1	True				
ANR	331497	IdentifierDecl	i		331486	0					
ANR	331498	IdentifierDeclType	uint32_t		331486	0					
ANR	331499	Identifier	i		331486	1					
ANR	331500	IdentifierDecl	j		331486	1					
ANR	331501	IdentifierDeclType	uint32_t		331486	0					
ANR	331502	Identifier	j		331486	1					
ANR	331503	IdentifierDeclStatement	"size_t files = 0 , maxfiles = 0 ;"	1146:1:26813:26843	331486	2	True				
ANR	331504	IdentifierDecl	files = 0		331486	0					
ANR	331505	IdentifierDeclType	size_t		331486	0					
ANR	331506	Identifier	files		331486	1					
ANR	331507	AssignmentExpression	files = 0		331486	2		=			
ANR	331508	Identifier	files		331486	0					
ANR	331509	PrimaryExpression	0		331486	1					
ANR	331510	IdentifierDecl	maxfiles = 0		331486	1					
ANR	331511	IdentifierDeclType	size_t		331486	0					
ANR	331512	Identifier	maxfiles		331486	1					
ANR	331513	AssignmentExpression	maxfiles = 0		331486	2		=			
ANR	331514	Identifier	maxfiles		331486	0					
ANR	331515	PrimaryExpression	0		331486	1					
ANR	331516	IdentifierDeclStatement	char * * filearr = NULL ;	1147:1:26846:26867	331486	3	True				
ANR	331517	IdentifierDecl	* * filearr = NULL		331486	0					
ANR	331518	IdentifierDeclType	char * *		331486	0					
ANR	331519	Identifier	filearr		331486	1					
ANR	331520	AssignmentExpression	* * filearr = NULL		331486	2		=			
ANR	331521	Identifier	NULL		331486	0					
ANR	331522	Identifier	NULL		331486	1					
ANR	331523	IdentifierDeclStatement	struct stat st ;	1148:1:26870:26884	331486	4	True				
ANR	331524	IdentifierDecl	st		331486	0					
ANR	331525	IdentifierDeclType	struct stat		331486	0					
ANR	331526	Identifier	st		331486	1					
ANR	331527	IdentifierDeclStatement	struct magic_map * map ;	1149:1:26887:26908	331486	5	True				
ANR	331528	IdentifierDecl	* map		331486	0					
ANR	331529	IdentifierDeclType	struct magic_map *		331486	0					
ANR	331530	Identifier	map		331486	1					
ANR	331531	IdentifierDeclStatement	struct magic_entry_set mset [ MAGIC_SETS ] ;	1150:1:26911:26950	331486	6	True				
ANR	331532	IdentifierDecl	mset [ MAGIC_SETS ]		331486	0					
ANR	331533	IdentifierDeclType	struct magic_entry_set [ MAGIC_SETS ]		331486	0					
ANR	331534	Identifier	mset		331486	1					
ANR	331535	Identifier	MAGIC_SETS		331486	2					
ANR	331536	IdentifierDeclStatement	php_stream * dir ;	1151:1:26953:26968	331486	7	True				
ANR	331537	IdentifierDecl	* dir		331486	0					
ANR	331538	IdentifierDeclType	php_stream *		331486	0					
ANR	331539	Identifier	dir		331486	1					
ANR	331540	IdentifierDeclStatement	php_stream_dirent d ;	1152:1:26971:26990	331486	8	True				
ANR	331541	IdentifierDecl	d		331486	0					
ANR	331542	IdentifierDeclType	php_stream_dirent		331486	0					
ANR	331543	Identifier	d		331486	1					
ANR	331544	ExpressionStatement	TSRMLS_FETCH ( )	1154:1:26995:27009	331486	9	True				
ANR	331545	CallExpression	TSRMLS_FETCH ( )		331486	0					
ANR	331546	Callee	TSRMLS_FETCH		331486	0					
ANR	331547	Identifier	TSRMLS_FETCH		331486	0					
ANR	331548	ArgumentList			331486	1					
ANR	331549	ExpressionStatement	"memset ( mset , 0 , sizeof ( mset ) )"	1156:1:27013:27042	331486	10	True				
ANR	331550	CallExpression	"memset ( mset , 0 , sizeof ( mset ) )"		331486	0					
ANR	331551	Callee	memset		331486	0					
ANR	331552	Identifier	memset		331486	0					
ANR	331553	ArgumentList	mset		331486	1					
ANR	331554	Argument	mset		331486	0					
ANR	331555	Identifier	mset		331486	0					
ANR	331556	Argument	0		331486	1					
ANR	331557	PrimaryExpression	0		331486	0					
ANR	331558	Argument	sizeof ( mset )		331486	2					
ANR	331559	SizeofExpression	sizeof ( mset )		331486	0					
ANR	331560	Sizeof	sizeof		331486	0					
ANR	331561	SizeofOperand	mset		331486	1					
ANR	331562	ExpressionStatement	ms -> flags |= MAGIC_CHECK	1157:1:27045:27069	331486	11	True				
ANR	331563	AssignmentExpression	ms -> flags |= MAGIC_CHECK		331486	0		|=			
ANR	331564	PtrMemberAccess	ms -> flags		331486	0					
ANR	331565	Identifier	ms		331486	0					
ANR	331566	Identifier	flags		331486	1					
ANR	331567	Identifier	MAGIC_CHECK		331486	1					
ANR	331568	Statement	if	1160:1:27111:27112	331486	12	True				
ANR	331569	Statement	(	1160:4:27114:27114	331486	13	True				
ANR	331570	Statement	(	1160:5:27115:27115	331486	14	True				
ANR	331571	Statement	map	1160:6:27116:27118	331486	15	True				
ANR	331572	Statement	=	1160:10:27120:27120	331486	16	True				
ANR	331573	Statement	CAST	1160:12:27122:27125	331486	17	True				
ANR	331574	Statement	(	1160:16:27126:27126	331486	18	True				
ANR	331575	Statement	struct	1160:17:27127:27132	331486	19	True				
ANR	331576	Statement	magic_map	1160:24:27134:27142	331486	20	True				
ANR	331577	Statement	*	1160:34:27144:27144	331486	21	True				
ANR	331578	Statement	","	1160:35:27145:27145	331486	22	True				
ANR	331579	Statement	ecalloc	1160:37:27147:27153	331486	23	True				
ANR	331580	Statement	(	1160:44:27154:27154	331486	24	True				
ANR	331581	Statement	1	1160:45:27155:27155	331486	25	True				
ANR	331582	Statement	","	1160:46:27156:27156	331486	26	True				
ANR	331583	Statement	sizeof	1160:48:27158:27163	331486	27	True				
ANR	331584	Statement	(	1160:54:27164:27164	331486	28	True				
ANR	331585	Statement	*	1160:55:27165:27165	331486	29	True				
ANR	331586	Statement	map	1160:56:27166:27168	331486	30	True				
ANR	331587	Statement	)	1160:59:27169:27169	331486	31	True				
ANR	331588	Statement	)	1160:60:27170:27170	331486	32	True				
ANR	331589	Statement	)	1160:61:27171:27171	331486	33	True				
ANR	331590	Statement	)	1160:62:27172:27172	331486	34	True				
ANR	331591	Statement	==	1160:64:27174:27175	331486	35	True				
ANR	331592	Statement	NULL	1160:67:27177:27180	331486	36	True				
ANR	331593	Statement	)	1160:71:27181:27181	331486	37	True				
ANR	331594	CompoundStatement		19:1:404:404	331486	38					
ANR	331595	ExpressionStatement	"file_oomem ( ms , sizeof ( * map ) )"	1162:2:27188:27216	331486	0	True				
ANR	331596	CallExpression	"file_oomem ( ms , sizeof ( * map ) )"		331486	0					
ANR	331597	Callee	file_oomem		331486	0					
ANR	331598	Identifier	file_oomem		331486	0					
ANR	331599	ArgumentList	ms		331486	1					
ANR	331600	Argument	ms		331486	0					
ANR	331601	Identifier	ms		331486	0					
ANR	331602	Argument	sizeof ( * map )		331486	1					
ANR	331603	SizeofExpression	sizeof ( * map )		331486	0					
ANR	331604	Sizeof	sizeof		331486	0					
ANR	331605	UnaryOperationExpression	* map		331486	1					
ANR	331606	UnaryOperator	*		331486	0					
ANR	331607	Identifier	map		331486	1					
ANR	331608	ReturnStatement	return NULL ;	1163:2:27220:27231	331486	1	True				
ANR	331609	Identifier	NULL		331486	0					
ANR	331610	IfStatement	if ( action == FILE_CHECK )		331486	39					
ANR	331611	Condition	action == FILE_CHECK	1167:5:27292:27311	331486	0	True				
ANR	331612	EqualityExpression	action == FILE_CHECK		331486	0		==			
ANR	331613	Identifier	action		331486	0					
ANR	331614	Identifier	FILE_CHECK		331486	1					
ANR	331615	ExpressionStatement	"( void ) fprintf ( stderr , ""%s\\n"" , usg_hdr )"	1168:2:27316:27354	331486	1	True				
ANR	331616	CastExpression	"( void ) fprintf ( stderr , ""%s\\n"" , usg_hdr )"		331486	0					
ANR	331617	CastTarget	void		331486	0					
ANR	331618	CallExpression	"fprintf ( stderr , ""%s\\n"" , usg_hdr )"		331486	1					
ANR	331619	Callee	fprintf		331486	0					
ANR	331620	Identifier	fprintf		331486	0					
ANR	331621	ArgumentList	stderr		331486	1					
ANR	331622	Argument	stderr		331486	0					
ANR	331623	Identifier	stderr		331486	0					
ANR	331624	Argument	"""%s\\n"""		331486	1					
ANR	331625	PrimaryExpression	"""%s\\n"""		331486	0					
ANR	331626	Argument	usg_hdr		331486	2					
ANR	331627	Identifier	usg_hdr		331486	0					
ANR	331628	IfStatement	"if ( php_sys_stat ( fn , & st ) == 0 && S_ISDIR ( st . st_mode ) )"		331486	40					
ANR	331629	Condition	"php_sys_stat ( fn , & st ) == 0 && S_ISDIR ( st . st_mode )"	1173:5:27492:27540	331486	0	True				
ANR	331630	AndExpression	"php_sys_stat ( fn , & st ) == 0 && S_ISDIR ( st . st_mode )"		331486	0		&&			
ANR	331631	EqualityExpression	"php_sys_stat ( fn , & st ) == 0"		331486	0		==			
ANR	331632	CallExpression	"php_sys_stat ( fn , & st )"		331486	0					
ANR	331633	Callee	php_sys_stat		331486	0					
ANR	331634	Identifier	php_sys_stat		331486	0					
ANR	331635	ArgumentList	fn		331486	1					
ANR	331636	Argument	fn		331486	0					
ANR	331637	Identifier	fn		331486	0					
ANR	331638	Argument	& st		331486	1					
ANR	331639	UnaryOperationExpression	& st		331486	0					
ANR	331640	UnaryOperator	&		331486	0					
ANR	331641	Identifier	st		331486	1					
ANR	331642	PrimaryExpression	0		331486	1					
ANR	331643	CallExpression	S_ISDIR ( st . st_mode )		331486	1					
ANR	331644	Callee	S_ISDIR		331486	0					
ANR	331645	Identifier	S_ISDIR		331486	0					
ANR	331646	ArgumentList	st . st_mode		331486	1					
ANR	331647	Argument	st . st_mode		331486	0					
ANR	331648	MemberAccess	st . st_mode		331486	0					
ANR	331649	Identifier	st		331486	0					
ANR	331650	Identifier	st_mode		331486	1					
ANR	331651	CompoundStatement		33:2:780:800	331486	1					
ANR	331652	IdentifierDeclStatement	int mflen ;	1174:2:27547:27556	331486	0	True				
ANR	331653	IdentifierDecl	mflen		331486	0					
ANR	331654	IdentifierDeclType	int		331486	0					
ANR	331655	Identifier	mflen		331486	1					
ANR	331656	IdentifierDeclStatement	char mfn [ MAXPATHLEN ] ;	1175:2:27560:27580	331486	1	True				
ANR	331657	IdentifierDecl	mfn [ MAXPATHLEN ]		331486	0					
ANR	331658	IdentifierDeclType	char [ MAXPATHLEN ]		331486	0					
ANR	331659	Identifier	mfn		331486	1					
ANR	331660	Identifier	MAXPATHLEN		331486	2					
ANR	331661	ExpressionStatement	"dir = php_stream_opendir ( ( char * ) fn , REPORT_ERRORS , NULL )"	1177:2:27585:27642	331486	2	True				
ANR	331662	AssignmentExpression	"dir = php_stream_opendir ( ( char * ) fn , REPORT_ERRORS , NULL )"		331486	0		=			
ANR	331663	Identifier	dir		331486	0					
ANR	331664	CallExpression	"php_stream_opendir ( ( char * ) fn , REPORT_ERRORS , NULL )"		331486	1					
ANR	331665	Callee	php_stream_opendir		331486	0					
ANR	331666	Identifier	php_stream_opendir		331486	0					
ANR	331667	ArgumentList	( char * ) fn		331486	1					
ANR	331668	Argument	( char * ) fn		331486	0					
ANR	331669	CastExpression	( char * ) fn		331486	0					
ANR	331670	CastTarget	char *		331486	0					
ANR	331671	Identifier	fn		331486	1					
ANR	331672	Argument	REPORT_ERRORS		331486	1					
ANR	331673	Identifier	REPORT_ERRORS		331486	0					
ANR	331674	Argument	NULL		331486	2					
ANR	331675	Identifier	NULL		331486	0					
ANR	331676	IfStatement	if ( ! dir )		331486	3					
ANR	331677	Condition	! dir	1178:6:27650:27653	331486	0	True				
ANR	331678	UnaryOperationExpression	! dir		331486	0					
ANR	331679	UnaryOperator	!		331486	0					
ANR	331680	Identifier	dir		331486	1					
ANR	331681	CompoundStatement		36:12:876:876	331486	1					
ANR	331682	ExpressionStatement	errs ++	1179:3:27661:27667	331486	0	True				
ANR	331683	PostIncDecOperationExpression	errs ++		331486	0					
ANR	331684	Identifier	errs		331486	0					
ANR	331685	IncDec	++		331486	1					
ANR	331686	GotoStatement	goto out ;	1180:3:27672:27680	331486	1	True				
ANR	331687	Identifier	out		331486	0					
ANR	331688	WhileStatement	"while ( php_stream_readdir ( dir , & d ) )"		331486	4					
ANR	331689	Condition	"php_stream_readdir ( dir , & d )"	1182:9:27695:27721	331486	0	True				
ANR	331690	CallExpression	"php_stream_readdir ( dir , & d )"		331486	0					
ANR	331691	Callee	php_stream_readdir		331486	0					
ANR	331692	Identifier	php_stream_readdir		331486	0					
ANR	331693	ArgumentList	dir		331486	1					
ANR	331694	Argument	dir		331486	0					
ANR	331695	Identifier	dir		331486	0					
ANR	331696	Argument	& d		331486	1					
ANR	331697	UnaryOperationExpression	& d		331486	0					
ANR	331698	UnaryOperator	&		331486	0					
ANR	331699	Identifier	d		331486	1					
ANR	331700	CompoundStatement		40:38:944:944	331486	1					
ANR	331701	IfStatement	"if ( ( mflen = snprintf ( mfn , sizeof ( mfn ) , ""%s/%s"" , fn , d . d_name ) ) < 0 )"		331486	0					
ANR	331702	Condition	"( mflen = snprintf ( mfn , sizeof ( mfn ) , ""%s/%s"" , fn , d . d_name ) ) < 0"	1183:7:27733:27795	331486	0	True				
ANR	331703	RelationalExpression	"( mflen = snprintf ( mfn , sizeof ( mfn ) , ""%s/%s"" , fn , d . d_name ) ) < 0"		331486	0		<			
ANR	331704	AssignmentExpression	"mflen = snprintf ( mfn , sizeof ( mfn ) , ""%s/%s"" , fn , d . d_name )"		331486	0		=			
ANR	331705	Identifier	mflen		331486	0					
ANR	331706	CallExpression	"snprintf ( mfn , sizeof ( mfn ) , ""%s/%s"" , fn , d . d_name )"		331486	1					
ANR	331707	Callee	snprintf		331486	0					
ANR	331708	Identifier	snprintf		331486	0					
ANR	331709	ArgumentList	mfn		331486	1					
ANR	331710	Argument	mfn		331486	0					
ANR	331711	Identifier	mfn		331486	0					
ANR	331712	Argument	sizeof ( mfn )		331486	1					
ANR	331713	SizeofExpression	sizeof ( mfn )		331486	0					
ANR	331714	Sizeof	sizeof		331486	0					
ANR	331715	SizeofOperand	mfn		331486	1					
ANR	331716	Argument	"""%s/%s"""		331486	2					
ANR	331717	PrimaryExpression	"""%s/%s"""		331486	0					
ANR	331718	Argument	fn		331486	3					
ANR	331719	Identifier	fn		331486	0					
ANR	331720	Argument	d . d_name		331486	4					
ANR	331721	MemberAccess	d . d_name		331486	0					
ANR	331722	Identifier	d		331486	0					
ANR	331723	Identifier	d_name		331486	1					
ANR	331724	PrimaryExpression	0		331486	1					
ANR	331725	CompoundStatement		41:72:1018:1018	331486	1					
ANR	331726	ExpressionStatement	"file_oomem ( ms , strlen ( fn ) + strlen ( d . d_name ) + 2 )"	1184:4:27804:27857	331486	0	True				
ANR	331727	CallExpression	"file_oomem ( ms , strlen ( fn ) + strlen ( d . d_name ) + 2 )"		331486	0					
ANR	331728	Callee	file_oomem		331486	0					
ANR	331729	Identifier	file_oomem		331486	0					
ANR	331730	ArgumentList	ms		331486	1					
ANR	331731	Argument	ms		331486	0					
ANR	331732	Identifier	ms		331486	0					
ANR	331733	Argument	strlen ( fn ) + strlen ( d . d_name ) + 2		331486	1					
ANR	331734	AdditiveExpression	strlen ( fn ) + strlen ( d . d_name ) + 2		331486	0		+			
ANR	331735	CallExpression	strlen ( fn )		331486	0					
ANR	331736	Callee	strlen		331486	0					
ANR	331737	Identifier	strlen		331486	0					
ANR	331738	ArgumentList	fn		331486	1					
ANR	331739	Argument	fn		331486	0					
ANR	331740	Identifier	fn		331486	0					
ANR	331741	AdditiveExpression	strlen ( d . d_name ) + 2		331486	1		+			
ANR	331742	CallExpression	strlen ( d . d_name )		331486	0					
ANR	331743	Callee	strlen		331486	0					
ANR	331744	Identifier	strlen		331486	0					
ANR	331745	ArgumentList	d . d_name		331486	1					
ANR	331746	Argument	d . d_name		331486	0					
ANR	331747	MemberAccess	d . d_name		331486	0					
ANR	331748	Identifier	d		331486	0					
ANR	331749	Identifier	d_name		331486	1					
ANR	331750	PrimaryExpression	2		331486	1					
ANR	331751	ExpressionStatement	errs ++	1186:4:27863:27869	331486	1	True				
ANR	331752	PostIncDecOperationExpression	errs ++		331486	0					
ANR	331753	Identifier	errs		331486	0					
ANR	331754	IncDec	++		331486	1					
ANR	331755	ExpressionStatement	php_stream_closedir ( dir )	1187:4:27875:27899	331486	2	True				
ANR	331756	CallExpression	php_stream_closedir ( dir )		331486	0					
ANR	331757	Callee	php_stream_closedir		331486	0					
ANR	331758	Identifier	php_stream_closedir		331486	0					
ANR	331759	ArgumentList	dir		331486	1					
ANR	331760	Argument	dir		331486	0					
ANR	331761	Identifier	dir		331486	0					
ANR	331762	GotoStatement	goto out ;	1188:4:27905:27913	331486	3	True				
ANR	331763	Identifier	out		331486	0					
ANR	331764	IfStatement	"if ( stat ( mfn , & st ) == - 1 || ! S_ISREG ( st . st_mode ) )"		331486	1					
ANR	331765	Condition	"stat ( mfn , & st ) == - 1 || ! S_ISREG ( st . st_mode )"	1190:7:27927:27970	331486	0	True				
ANR	331766	OrExpression	"stat ( mfn , & st ) == - 1 || ! S_ISREG ( st . st_mode )"		331486	0		||			
ANR	331767	EqualityExpression	"stat ( mfn , & st ) == - 1"		331486	0		==			
ANR	331768	CallExpression	"stat ( mfn , & st )"		331486	0					
ANR	331769	Callee	stat		331486	0					
ANR	331770	Identifier	stat		331486	0					
ANR	331771	ArgumentList	mfn		331486	1					
ANR	331772	Argument	mfn		331486	0					
ANR	331773	Identifier	mfn		331486	0					
ANR	331774	Argument	& st		331486	1					
ANR	331775	UnaryOperationExpression	& st		331486	0					
ANR	331776	UnaryOperator	&		331486	0					
ANR	331777	Identifier	st		331486	1					
ANR	331778	UnaryOperationExpression	- 1		331486	1					
ANR	331779	UnaryOperator	-		331486	0					
ANR	331780	PrimaryExpression	1		331486	1					
ANR	331781	UnaryOperationExpression	! S_ISREG ( st . st_mode )		331486	1					
ANR	331782	UnaryOperator	!		331486	0					
ANR	331783	CallExpression	S_ISREG ( st . st_mode )		331486	1					
ANR	331784	Callee	S_ISREG		331486	0					
ANR	331785	Identifier	S_ISREG		331486	0					
ANR	331786	ArgumentList	st . st_mode		331486	1					
ANR	331787	Argument	st . st_mode		331486	0					
ANR	331788	MemberAccess	st . st_mode		331486	0					
ANR	331789	Identifier	st		331486	0					
ANR	331790	Identifier	st_mode		331486	1					
ANR	331791	CompoundStatement		48:53:1193:1193	331486	1					
ANR	331792	ContinueStatement	continue ;	1191:4:27979:27987	331486	0	True				
ANR	331793	IfStatement	if ( files >= maxfiles )		331486	2					
ANR	331794	Condition	files >= maxfiles	1193:7:28001:28017	331486	0	True				
ANR	331795	RelationalExpression	files >= maxfiles		331486	0		>=			
ANR	331796	Identifier	files		331486	0					
ANR	331797	Identifier	maxfiles		331486	1					
ANR	331798	CompoundStatement		52:4:1246:1257	331486	1					
ANR	331799	IdentifierDeclStatement	size_t mlen ;	1194:4:28026:28037	331486	0	True				
ANR	331800	IdentifierDecl	mlen		331486	0					
ANR	331801	IdentifierDeclType	size_t		331486	0					
ANR	331802	Identifier	mlen		331486	1					
ANR	331803	ExpressionStatement	maxfiles = ( maxfiles + 1 ) * 2	1195:4:28043:28072	331486	1	True				
ANR	331804	AssignmentExpression	maxfiles = ( maxfiles + 1 ) * 2		331486	0		=			
ANR	331805	Identifier	maxfiles		331486	0					
ANR	331806	MultiplicativeExpression	( maxfiles + 1 ) * 2		331486	1		*			
ANR	331807	AdditiveExpression	maxfiles + 1		331486	0		+			
ANR	331808	Identifier	maxfiles		331486	0					
ANR	331809	PrimaryExpression	1		331486	1					
ANR	331810	PrimaryExpression	2		331486	1					
ANR	331811	ExpressionStatement	mlen = maxfiles * sizeof ( * filearr )	1196:4:28078:28112	331486	2	True				
ANR	331812	AssignmentExpression	mlen = maxfiles * sizeof ( * filearr )		331486	0		=			
ANR	331813	Identifier	mlen		331486	0					
ANR	331814	MultiplicativeExpression	maxfiles * sizeof ( * filearr )		331486	1		*			
ANR	331815	Identifier	maxfiles		331486	0					
ANR	331816	SizeofExpression	sizeof ( * filearr )		331486	1					
ANR	331817	Sizeof	sizeof		331486	0					
ANR	331818	UnaryOperationExpression	* filearr		331486	1					
ANR	331819	UnaryOperator	*		331486	0					
ANR	331820	Identifier	filearr		331486	1					
ANR	331821	Statement	if	1197:4:28118:28119	331486	3	True				
ANR	331822	Statement	(	1197:7:28121:28121	331486	4	True				
ANR	331823	Statement	(	1197:8:28122:28122	331486	5	True				
ANR	331824	Statement	filearr	1197:9:28123:28129	331486	6	True				
ANR	331825	Statement	=	1197:17:28131:28131	331486	7	True				
ANR	331826	Statement	CAST	1197:19:28133:28136	331486	8	True				
ANR	331827	Statement	(	1197:23:28137:28137	331486	9	True				
ANR	331828	Statement	char	1197:24:28138:28141	331486	10	True				
ANR	331829	Statement	*	1197:29:28143:28143	331486	11	True				
ANR	331830	Statement	*	1197:30:28144:28144	331486	12	True				
ANR	331831	Statement	","	1197:31:28145:28145	331486	13	True				
ANR	331832	Statement	erealloc	1198:8:28155:28162	331486	14	True				
ANR	331833	Statement	(	1198:16:28163:28163	331486	15	True				
ANR	331834	Statement	filearr	1198:17:28164:28170	331486	16	True				
ANR	331835	Statement	","	1198:24:28171:28171	331486	17	True				
ANR	331836	Statement	mlen	1198:26:28173:28176	331486	18	True				
ANR	331837	Statement	)	1198:30:28177:28177	331486	19	True				
ANR	331838	Statement	)	1198:31:28178:28178	331486	20	True				
ANR	331839	Statement	)	1198:32:28179:28179	331486	21	True				
ANR	331840	Statement	==	1198:34:28181:28182	331486	22	True				
ANR	331841	Statement	NULL	1198:37:28184:28187	331486	23	True				
ANR	331842	Statement	)	1198:41:28188:28188	331486	24	True				
ANR	331843	CompoundStatement		56:43:1410:1410	331486	25					
ANR	331844	ExpressionStatement	"file_oomem ( ms , mlen )"	1199:5:28197:28217	331486	0	True				
ANR	331845	CallExpression	"file_oomem ( ms , mlen )"		331486	0					
ANR	331846	Callee	file_oomem		331486	0					
ANR	331847	Identifier	file_oomem		331486	0					
ANR	331848	ArgumentList	ms		331486	1					
ANR	331849	Argument	ms		331486	0					
ANR	331850	Identifier	ms		331486	0					
ANR	331851	Argument	mlen		331486	1					
ANR	331852	Identifier	mlen		331486	0					
ANR	331853	ExpressionStatement	php_stream_closedir ( dir )	1200:5:28224:28248	331486	1	True				
ANR	331854	CallExpression	php_stream_closedir ( dir )		331486	0					
ANR	331855	Callee	php_stream_closedir		331486	0					
ANR	331856	Identifier	php_stream_closedir		331486	0					
ANR	331857	ArgumentList	dir		331486	1					
ANR	331858	Argument	dir		331486	0					
ANR	331859	Identifier	dir		331486	0					
ANR	331860	ExpressionStatement	errs ++	1201:5:28255:28261	331486	2	True				
ANR	331861	PostIncDecOperationExpression	errs ++		331486	0					
ANR	331862	Identifier	errs		331486	0					
ANR	331863	IncDec	++		331486	1					
ANR	331864	GotoStatement	goto out ;	1202:5:28268:28276	331486	3	True				
ANR	331865	Identifier	out		331486	0					
ANR	331866	ExpressionStatement	"filearr [ files ++ ] = estrndup ( mfn , ( mflen > sizeof ( mfn ) - 1 ) ? sizeof ( mfn ) - 1 : mflen )"	1205:3:28292:28375	331486	3	True				
ANR	331867	AssignmentExpression	"filearr [ files ++ ] = estrndup ( mfn , ( mflen > sizeof ( mfn ) - 1 ) ? sizeof ( mfn ) - 1 : mflen )"		331486	0		=			
ANR	331868	ArrayIndexing	filearr [ files ++ ]		331486	0					
ANR	331869	Identifier	filearr		331486	0					
ANR	331870	PostIncDecOperationExpression	files ++		331486	1					
ANR	331871	Identifier	files		331486	0					
ANR	331872	IncDec	++		331486	1					
ANR	331873	CallExpression	"estrndup ( mfn , ( mflen > sizeof ( mfn ) - 1 ) ? sizeof ( mfn ) - 1 : mflen )"		331486	1					
ANR	331874	Callee	estrndup		331486	0					
ANR	331875	Identifier	estrndup		331486	0					
ANR	331876	ArgumentList	mfn		331486	1					
ANR	331877	Argument	mfn		331486	0					
ANR	331878	Identifier	mfn		331486	0					
ANR	331879	Argument	( mflen > sizeof ( mfn ) - 1 ) ? sizeof ( mfn ) - 1 : mflen		331486	1					
ANR	331880	ConditionalExpression	( mflen > sizeof ( mfn ) - 1 ) ? sizeof ( mfn ) - 1 : mflen		331486	0					
ANR	331881	Condition	mflen > sizeof ( mfn ) - 1		331486	0					
ANR	331882	RelationalExpression	mflen > sizeof ( mfn ) - 1		331486	0		>			
ANR	331883	Identifier	mflen		331486	0					
ANR	331884	AdditiveExpression	sizeof ( mfn ) - 1		331486	1		-			
ANR	331885	SizeofExpression	sizeof ( mfn )		331486	0					
ANR	331886	Sizeof	sizeof		331486	0					
ANR	331887	SizeofOperand	mfn		331486	1					
ANR	331888	PrimaryExpression	1		331486	1					
ANR	331889	AdditiveExpression	sizeof ( mfn ) - 1		331486	1		-			
ANR	331890	SizeofExpression	sizeof ( mfn )		331486	0					
ANR	331891	Sizeof	sizeof		331486	0					
ANR	331892	SizeofOperand	mfn		331486	1					
ANR	331893	PrimaryExpression	1		331486	1					
ANR	331894	Identifier	mflen		331486	2					
ANR	331895	ExpressionStatement	php_stream_closedir ( dir )	1207:2:28383:28407	331486	5	True				
ANR	331896	CallExpression	php_stream_closedir ( dir )		331486	0					
ANR	331897	Callee	php_stream_closedir		331486	0					
ANR	331898	Identifier	php_stream_closedir		331486	0					
ANR	331899	ArgumentList	dir		331486	1					
ANR	331900	Argument	dir		331486	0					
ANR	331901	Identifier	dir		331486	0					
ANR	331902	ExpressionStatement	"qsort ( filearr , files , sizeof ( * filearr ) , cmpstrp )"	1208:2:28411:28459	331486	6	True				
ANR	331903	CallExpression	"qsort ( filearr , files , sizeof ( * filearr ) , cmpstrp )"		331486	0					
ANR	331904	Callee	qsort		331486	0					
ANR	331905	Identifier	qsort		331486	0					
ANR	331906	ArgumentList	filearr		331486	1					
ANR	331907	Argument	filearr		331486	0					
ANR	331908	Identifier	filearr		331486	0					
ANR	331909	Argument	files		331486	1					
ANR	331910	Identifier	files		331486	0					
ANR	331911	Argument	sizeof ( * filearr )		331486	2					
ANR	331912	SizeofExpression	sizeof ( * filearr )		331486	0					
ANR	331913	Sizeof	sizeof		331486	0					
ANR	331914	UnaryOperationExpression	* filearr		331486	1					
ANR	331915	UnaryOperator	*		331486	0					
ANR	331916	Identifier	filearr		331486	1					
ANR	331917	Argument	cmpstrp		331486	3					
ANR	331918	Identifier	cmpstrp		331486	0					
ANR	331919	ForStatement	for ( i = 0 ; i < files ; i ++ )		331486	7					
ANR	331920	ForInit	i = 0 ;	1209:7:28468:28473	331486	0	True				
ANR	331921	AssignmentExpression	i = 0		331486	0		=			
ANR	331922	Identifier	i		331486	0					
ANR	331923	PrimaryExpression	0		331486	1					
ANR	331924	Condition	i < files	1209:14:28475:28483	331486	1	True				
ANR	331925	RelationalExpression	i < files		331486	0		<			
ANR	331926	Identifier	i		331486	0					
ANR	331927	Identifier	files		331486	1					
ANR	331928	PostIncDecOperationExpression	i ++	1209:25:28486:28488	331486	2	True				
ANR	331929	Identifier	i		331486	0					
ANR	331930	IncDec	++		331486	1					
ANR	331931	CompoundStatement		67:30:1711:1711	331486	3					
ANR	331932	ExpressionStatement	"load_1 ( ms , action , filearr [ i ] , & errs , mset )"	1210:3:28496:28539	331486	0	True				
ANR	331933	CallExpression	"load_1 ( ms , action , filearr [ i ] , & errs , mset )"		331486	0					
ANR	331934	Callee	load_1		331486	0					
ANR	331935	Identifier	load_1		331486	0					
ANR	331936	ArgumentList	ms		331486	1					
ANR	331937	Argument	ms		331486	0					
ANR	331938	Identifier	ms		331486	0					
ANR	331939	Argument	action		331486	1					
ANR	331940	Identifier	action		331486	0					
ANR	331941	Argument	filearr [ i ]		331486	2					
ANR	331942	ArrayIndexing	filearr [ i ]		331486	0					
ANR	331943	Identifier	filearr		331486	0					
ANR	331944	Identifier	i		331486	1					
ANR	331945	Argument	& errs		331486	3					
ANR	331946	UnaryOperationExpression	& errs		331486	0					
ANR	331947	UnaryOperator	&		331486	0					
ANR	331948	Identifier	errs		331486	1					
ANR	331949	Argument	mset		331486	4					
ANR	331950	Identifier	mset		331486	0					
ANR	331951	ExpressionStatement	efree ( filearr [ i ] )	1211:3:28544:28561	331486	1	True				
ANR	331952	CallExpression	efree ( filearr [ i ] )		331486	0					
ANR	331953	Callee	efree		331486	0					
ANR	331954	Identifier	efree		331486	0					
ANR	331955	ArgumentList	filearr [ i ]		331486	1					
ANR	331956	Argument	filearr [ i ]		331486	0					
ANR	331957	ArrayIndexing	filearr [ i ]		331486	0					
ANR	331958	Identifier	filearr		331486	0					
ANR	331959	Identifier	i		331486	1					
ANR	331960	ExpressionStatement	efree ( filearr )	1213:2:28569:28583	331486	8	True				
ANR	331961	CallExpression	efree ( filearr )		331486	0					
ANR	331962	Callee	efree		331486	0					
ANR	331963	Identifier	efree		331486	0					
ANR	331964	ArgumentList	filearr		331486	1					
ANR	331965	Argument	filearr		331486	0					
ANR	331966	Identifier	filearr		331486	0					
ANR	331967	ElseStatement	else		331486	0					
ANR	331968	ExpressionStatement	"load_1 ( ms , action , fn , & errs , mset )"	1215:2:28595:28630	331486	0	True				
ANR	331969	CallExpression	"load_1 ( ms , action , fn , & errs , mset )"		331486	0					
ANR	331970	Callee	load_1		331486	0					
ANR	331971	Identifier	load_1		331486	0					
ANR	331972	ArgumentList	ms		331486	1					
ANR	331973	Argument	ms		331486	0					
ANR	331974	Identifier	ms		331486	0					
ANR	331975	Argument	action		331486	1					
ANR	331976	Identifier	action		331486	0					
ANR	331977	Argument	fn		331486	2					
ANR	331978	Identifier	fn		331486	0					
ANR	331979	Argument	& errs		331486	3					
ANR	331980	UnaryOperationExpression	& errs		331486	0					
ANR	331981	UnaryOperator	&		331486	0					
ANR	331982	Identifier	errs		331486	1					
ANR	331983	Argument	mset		331486	4					
ANR	331984	Identifier	mset		331486	0					
ANR	331985	IfStatement	if ( errs )		331486	41					
ANR	331986	Condition	errs	1216:5:28637:28640	331486	0	True				
ANR	331987	Identifier	errs		331486	0					
ANR	331988	GotoStatement	goto out ;	1217:2:28645:28653	331486	1	True				
ANR	331989	Identifier	out		331486	0					
ANR	331990	ForStatement	for ( j = 0 ; j < MAGIC_SETS ; j ++ )		331486	42					
ANR	331991	ForInit	j = 0 ;	1219:6:28662:28667	331486	0	True				
ANR	331992	AssignmentExpression	j = 0		331486	0		=			
ANR	331993	Identifier	j		331486	0					
ANR	331994	PrimaryExpression	0		331486	1					
ANR	331995	Condition	j < MAGIC_SETS	1219:13:28669:28682	331486	1	True				
ANR	331996	RelationalExpression	j < MAGIC_SETS		331486	0		<			
ANR	331997	Identifier	j		331486	0					
ANR	331998	Identifier	MAGIC_SETS		331486	1					
ANR	331999	PostIncDecOperationExpression	j ++	1219:29:28685:28687	331486	2	True				
ANR	332000	Identifier	j		331486	0					
ANR	332001	IncDec	++		331486	1					
ANR	332002	CompoundStatement		77:34:1910:1910	331486	3					
ANR	332003	ForStatement	for ( i = 0 ; i < mset [ j ] . count ; )		331486	0					
ANR	332004	ForInit	i = 0 ;	1221:7:28726:28731	331486	0	True				
ANR	332005	AssignmentExpression	i = 0		331486	0		=			
ANR	332006	Identifier	i		331486	0					
ANR	332007	PrimaryExpression	0		331486	1					
ANR	332008	Condition	i < mset [ j ] . count	1221:14:28733:28749	331486	1	True				
ANR	332009	RelationalExpression	i < mset [ j ] . count		331486	0		<			
ANR	332010	Identifier	i		331486	0					
ANR	332011	MemberAccess	mset [ j ] . count		331486	1					
ANR	332012	ArrayIndexing	mset [ j ]		331486	0					
ANR	332013	Identifier	mset		331486	0					
ANR	332014	Identifier	j		331486	1					
ANR	332015	Identifier	count		331486	1					
ANR	332016	CompoundStatement		79:35:1974:1974	331486	2					
ANR	332017	IfStatement	if ( mset [ j ] . me [ i ] . mp -> cont_level != 0 )		331486	0					
ANR	332018	Condition	mset [ j ] . me [ i ] . mp -> cont_level != 0	1222:7:28763:28795	331486	0	True				
ANR	332019	EqualityExpression	mset [ j ] . me [ i ] . mp -> cont_level != 0		331486	0		!=			
ANR	332020	PtrMemberAccess	mset [ j ] . me [ i ] . mp -> cont_level		331486	0					
ANR	332021	MemberAccess	mset [ j ] . me [ i ] . mp		331486	0					
ANR	332022	ArrayIndexing	mset [ j ] . me [ i ]		331486	0					
ANR	332023	MemberAccess	mset [ j ] . me		331486	0					
ANR	332024	ArrayIndexing	mset [ j ]		331486	0					
ANR	332025	Identifier	mset		331486	0					
ANR	332026	Identifier	j		331486	1					
ANR	332027	Identifier	me		331486	1					
ANR	332028	Identifier	i		331486	1					
ANR	332029	Identifier	mp		331486	1					
ANR	332030	Identifier	cont_level		331486	1					
ANR	332031	PrimaryExpression	0		331486	1					
ANR	332032	CompoundStatement		80:42:2018:2018	331486	1					
ANR	332033	ExpressionStatement	i ++	1223:4:28804:28807	331486	0	True				
ANR	332034	PostIncDecOperationExpression	i ++		331486	0					
ANR	332035	Identifier	i		331486	0					
ANR	332036	IncDec	++		331486	1					
ANR	332037	ContinueStatement	continue ;	1224:4:28813:28821	331486	1	True				
ANR	332038	ExpressionStatement	"i = set_text_binary ( ms , mset [ j ] . me , mset [ j ] . count , i )"	1226:3:28831:28884	331486	1	True				
ANR	332039	AssignmentExpression	"i = set_text_binary ( ms , mset [ j ] . me , mset [ j ] . count , i )"		331486	0		=			
ANR	332040	Identifier	i		331486	0					
ANR	332041	CallExpression	"set_text_binary ( ms , mset [ j ] . me , mset [ j ] . count , i )"		331486	1					
ANR	332042	Callee	set_text_binary		331486	0					
ANR	332043	Identifier	set_text_binary		331486	0					
ANR	332044	ArgumentList	ms		331486	1					
ANR	332045	Argument	ms		331486	0					
ANR	332046	Identifier	ms		331486	0					
ANR	332047	Argument	mset [ j ] . me		331486	1					
ANR	332048	MemberAccess	mset [ j ] . me		331486	0					
ANR	332049	ArrayIndexing	mset [ j ]		331486	0					
ANR	332050	Identifier	mset		331486	0					
ANR	332051	Identifier	j		331486	1					
ANR	332052	Identifier	me		331486	1					
ANR	332053	Argument	mset [ j ] . count		331486	2					
ANR	332054	MemberAccess	mset [ j ] . count		331486	0					
ANR	332055	ArrayIndexing	mset [ j ]		331486	0					
ANR	332056	Identifier	mset		331486	0					
ANR	332057	Identifier	j		331486	1					
ANR	332058	Identifier	count		331486	1					
ANR	332059	Argument	i		331486	3					
ANR	332060	Identifier	i		331486	0					
ANR	332061	ExpressionStatement	"qsort ( mset [ j ] . me , mset [ j ] . count , sizeof ( * mset [ j ] . me ) , apprentice_sort )"	1228:2:28892:28968	331486	1	True				
ANR	332062	CallExpression	"qsort ( mset [ j ] . me , mset [ j ] . count , sizeof ( * mset [ j ] . me ) , apprentice_sort )"		331486	0					
ANR	332063	Callee	qsort		331486	0					
ANR	332064	Identifier	qsort		331486	0					
ANR	332065	ArgumentList	mset [ j ] . me		331486	1					
ANR	332066	Argument	mset [ j ] . me		331486	0					
ANR	332067	MemberAccess	mset [ j ] . me		331486	0					
ANR	332068	ArrayIndexing	mset [ j ]		331486	0					
ANR	332069	Identifier	mset		331486	0					
ANR	332070	Identifier	j		331486	1					
ANR	332071	Identifier	me		331486	1					
ANR	332072	Argument	mset [ j ] . count		331486	1					
ANR	332073	MemberAccess	mset [ j ] . count		331486	0					
ANR	332074	ArrayIndexing	mset [ j ]		331486	0					
ANR	332075	Identifier	mset		331486	0					
ANR	332076	Identifier	j		331486	1					
ANR	332077	Identifier	count		331486	1					
ANR	332078	Argument	sizeof ( * mset [ j ] . me )		331486	2					
ANR	332079	SizeofExpression	sizeof ( * mset [ j ] . me )		331486	0					
ANR	332080	Sizeof	sizeof		331486	0					
ANR	332081	UnaryOperationExpression	* mset [ j ] . me		331486	1					
ANR	332082	UnaryOperator	*		331486	0					
ANR	332083	MemberAccess	mset [ j ] . me		331486	1					
ANR	332084	ArrayIndexing	mset [ j ]		331486	0					
ANR	332085	Identifier	mset		331486	0					
ANR	332086	Identifier	j		331486	1					
ANR	332087	Identifier	me		331486	1					
ANR	332088	Argument	apprentice_sort		331486	3					
ANR	332089	Identifier	apprentice_sort		331486	0					
ANR	332090	ExpressionStatement	"set_last_default ( ms , mset [ j ] . me , mset [ j ] . count )"	1235:2:29061:29108	331486	2	True				
ANR	332091	CallExpression	"set_last_default ( ms , mset [ j ] . me , mset [ j ] . count )"		331486	0					
ANR	332092	Callee	set_last_default		331486	0					
ANR	332093	Identifier	set_last_default		331486	0					
ANR	332094	ArgumentList	ms		331486	1					
ANR	332095	Argument	ms		331486	0					
ANR	332096	Identifier	ms		331486	0					
ANR	332097	Argument	mset [ j ] . me		331486	1					
ANR	332098	MemberAccess	mset [ j ] . me		331486	0					
ANR	332099	ArrayIndexing	mset [ j ]		331486	0					
ANR	332100	Identifier	mset		331486	0					
ANR	332101	Identifier	j		331486	1					
ANR	332102	Identifier	me		331486	1					
ANR	332103	Argument	mset [ j ] . count		331486	2					
ANR	332104	MemberAccess	mset [ j ] . count		331486	0					
ANR	332105	ArrayIndexing	mset [ j ]		331486	0					
ANR	332106	Identifier	mset		331486	0					
ANR	332107	Identifier	j		331486	1					
ANR	332108	Identifier	count		331486	1					
ANR	332109	IfStatement	"if ( coalesce_entries ( ms , mset [ j ] . me , mset [ j ] . count , & map -> magic [ j ] , & map -> nmagic [ j ] ) == - 1 )"		331486	3					
ANR	332110	Condition	"coalesce_entries ( ms , mset [ j ] . me , mset [ j ] . count , & map -> magic [ j ] , & map -> nmagic [ j ] ) == - 1"	1238:6:29168:29259	331486	0	True				
ANR	332111	EqualityExpression	"coalesce_entries ( ms , mset [ j ] . me , mset [ j ] . count , & map -> magic [ j ] , & map -> nmagic [ j ] ) == - 1"		331486	0		==			
ANR	332112	CallExpression	"coalesce_entries ( ms , mset [ j ] . me , mset [ j ] . count , & map -> magic [ j ] , & map -> nmagic [ j ] )"		331486	0					
ANR	332113	Callee	coalesce_entries		331486	0					
ANR	332114	Identifier	coalesce_entries		331486	0					
ANR	332115	ArgumentList	ms		331486	1					
ANR	332116	Argument	ms		331486	0					
ANR	332117	Identifier	ms		331486	0					
ANR	332118	Argument	mset [ j ] . me		331486	1					
ANR	332119	MemberAccess	mset [ j ] . me		331486	0					
ANR	332120	ArrayIndexing	mset [ j ]		331486	0					
ANR	332121	Identifier	mset		331486	0					
ANR	332122	Identifier	j		331486	1					
ANR	332123	Identifier	me		331486	1					
ANR	332124	Argument	mset [ j ] . count		331486	2					
ANR	332125	MemberAccess	mset [ j ] . count		331486	0					
ANR	332126	ArrayIndexing	mset [ j ]		331486	0					
ANR	332127	Identifier	mset		331486	0					
ANR	332128	Identifier	j		331486	1					
ANR	332129	Identifier	count		331486	1					
ANR	332130	Argument	& map -> magic [ j ]		331486	3					
ANR	332131	UnaryOperationExpression	& map -> magic [ j ]		331486	0					
ANR	332132	UnaryOperator	&		331486	0					
ANR	332133	ArrayIndexing	map -> magic [ j ]		331486	1					
ANR	332134	PtrMemberAccess	map -> magic		331486	0					
ANR	332135	Identifier	map		331486	0					
ANR	332136	Identifier	magic		331486	1					
ANR	332137	Identifier	j		331486	1					
ANR	332138	Argument	& map -> nmagic [ j ]		331486	4					
ANR	332139	UnaryOperationExpression	& map -> nmagic [ j ]		331486	0					
ANR	332140	UnaryOperator	&		331486	0					
ANR	332141	ArrayIndexing	map -> nmagic [ j ]		331486	1					
ANR	332142	PtrMemberAccess	map -> nmagic		331486	0					
ANR	332143	Identifier	map		331486	0					
ANR	332144	Identifier	nmagic		331486	1					
ANR	332145	Identifier	j		331486	1					
ANR	332146	UnaryOperationExpression	- 1		331486	1					
ANR	332147	UnaryOperator	-		331486	0					
ANR	332148	PrimaryExpression	1		331486	1					
ANR	332149	CompoundStatement		97:46:2482:2482	331486	1					
ANR	332150	ExpressionStatement	errs ++	1240:3:29267:29273	331486	0	True				
ANR	332151	PostIncDecOperationExpression	errs ++		331486	0					
ANR	332152	Identifier	errs		331486	0					
ANR	332153	IncDec	++		331486	1					
ANR	332154	GotoStatement	goto out ;	1241:3:29278:29286	331486	1	True				
ANR	332155	Identifier	out		331486	0					
ANR	332156	Label	out :	1245:0:29296:29299	331486	43	True				
ANR	332157	Identifier	out		331486	0					
ANR	332158	ForStatement	for ( j = 0 ; j < MAGIC_SETS ; j ++ )		331486	44					
ANR	332159	ForInit	j = 0 ;	1246:6:29307:29312	331486	0	True				
ANR	332160	AssignmentExpression	j = 0		331486	0		=			
ANR	332161	Identifier	j		331486	0					
ANR	332162	PrimaryExpression	0		331486	1					
ANR	332163	Condition	j < MAGIC_SETS	1246:13:29314:29327	331486	1	True				
ANR	332164	RelationalExpression	j < MAGIC_SETS		331486	0		<			
ANR	332165	Identifier	j		331486	0					
ANR	332166	Identifier	MAGIC_SETS		331486	1					
ANR	332167	PostIncDecOperationExpression	j ++	1246:29:29330:29332	331486	2	True				
ANR	332168	Identifier	j		331486	0					
ANR	332169	IncDec	++		331486	1					
ANR	332170	ExpressionStatement	"magic_entry_free ( mset [ j ] . me , mset [ j ] . count )"	1247:2:29337:29380	331486	3	True				
ANR	332171	CallExpression	"magic_entry_free ( mset [ j ] . me , mset [ j ] . count )"		331486	0					
ANR	332172	Callee	magic_entry_free		331486	0					
ANR	332173	Identifier	magic_entry_free		331486	0					
ANR	332174	ArgumentList	mset [ j ] . me		331486	1					
ANR	332175	Argument	mset [ j ] . me		331486	0					
ANR	332176	MemberAccess	mset [ j ] . me		331486	0					
ANR	332177	ArrayIndexing	mset [ j ]		331486	0					
ANR	332178	Identifier	mset		331486	0					
ANR	332179	Identifier	j		331486	1					
ANR	332180	Identifier	me		331486	1					
ANR	332181	Argument	mset [ j ] . count		331486	1					
ANR	332182	MemberAccess	mset [ j ] . count		331486	0					
ANR	332183	ArrayIndexing	mset [ j ]		331486	0					
ANR	332184	Identifier	mset		331486	0					
ANR	332185	Identifier	j		331486	1					
ANR	332186	Identifier	count		331486	1					
ANR	332187	IfStatement	if ( errs )		331486	45					
ANR	332188	Condition	errs	1249:5:29388:29391	331486	0	True				
ANR	332189	Identifier	errs		331486	0					
ANR	332190	CompoundStatement		107:11:2614:2614	331486	1					
ANR	332191	ForStatement	for ( j = 0 ; j < MAGIC_SETS ; j ++ )		331486	0					
ANR	332192	ForInit	j = 0 ;	1250:7:29403:29408	331486	0	True				
ANR	332193	AssignmentExpression	j = 0		331486	0		=			
ANR	332194	Identifier	j		331486	0					
ANR	332195	PrimaryExpression	0		331486	1					
ANR	332196	Condition	j < MAGIC_SETS	1250:14:29410:29423	331486	1	True				
ANR	332197	RelationalExpression	j < MAGIC_SETS		331486	0		<			
ANR	332198	Identifier	j		331486	0					
ANR	332199	Identifier	MAGIC_SETS		331486	1					
ANR	332200	PostIncDecOperationExpression	j ++	1250:30:29426:29428	331486	2	True				
ANR	332201	Identifier	j		331486	0					
ANR	332202	IncDec	++		331486	1					
ANR	332203	CompoundStatement		108:35:2651:2651	331486	3					
ANR	332204	IfStatement	if ( map -> magic [ j ] )		331486	0					
ANR	332205	Condition	map -> magic [ j ]	1251:7:29440:29452	331486	0	True				
ANR	332206	ArrayIndexing	map -> magic [ j ]		331486	0					
ANR	332207	PtrMemberAccess	map -> magic		331486	0					
ANR	332208	Identifier	map		331486	0					
ANR	332209	Identifier	magic		331486	1					
ANR	332210	Identifier	j		331486	1					
ANR	332211	ExpressionStatement	efree ( map -> magic [ j ] )	1252:4:29459:29479	331486	1	True				
ANR	332212	CallExpression	efree ( map -> magic [ j ] )		331486	0					
ANR	332213	Callee	efree		331486	0					
ANR	332214	Identifier	efree		331486	0					
ANR	332215	ArgumentList	map -> magic [ j ]		331486	1					
ANR	332216	Argument	map -> magic [ j ]		331486	0					
ANR	332217	ArrayIndexing	map -> magic [ j ]		331486	0					
ANR	332218	PtrMemberAccess	map -> magic		331486	0					
ANR	332219	Identifier	map		331486	0					
ANR	332220	Identifier	magic		331486	1					
ANR	332221	Identifier	j		331486	1					
ANR	332222	ExpressionStatement	efree ( map )	1254:2:29487:29497	331486	1	True				
ANR	332223	CallExpression	efree ( map )		331486	0					
ANR	332224	Callee	efree		331486	0					
ANR	332225	Identifier	efree		331486	0					
ANR	332226	ArgumentList	map		331486	1					
ANR	332227	Argument	map		331486	0					
ANR	332228	Identifier	map		331486	0					
ANR	332229	ReturnStatement	return NULL ;	1255:2:29501:29512	331486	2	True				
ANR	332230	Identifier	NULL		331486	0					
ANR	332231	ReturnStatement	return map ;	1257:1:29518:29528	331486	46	True				
ANR	332232	Identifier	map		331486	0					
ANR	332233	ReturnType	struct magic_map *		331486	1					
ANR	332234	Identifier	apprentice_load		331486	2					
ANR	332235	ParameterList	"struct magic_set * ms , const char * fn , int action"		331486	3					
ANR	332236	Parameter	struct magic_set * ms	1142:16:26729:26748	331486	0	True				
ANR	332237	ParameterType	struct magic_set *		331486	0					
ANR	332238	Identifier	ms		331486	1					
ANR	332239	Parameter	const char * fn	1142:38:26751:26764	331486	1	True				
ANR	332240	ParameterType	const char *		331486	0					
ANR	332241	Identifier	fn		331486	1					
ANR	332242	Parameter	int action	1142:54:26767:26776	331486	2	True				
ANR	332243	ParameterType	int		331486	0					
ANR	332244	Identifier	action		331486	1					
ANR	332245	CFGEntryNode	ENTRY		331486		True				
ANR	332246	CFGExitNode	EXIT		331486		True				
ANR	332247	Symbol	errs		331486						
ANR	332248	Symbol	* * * mset		331486						
ANR	332249	Symbol	MAGIC_SETS		331486						
ANR	332250	Symbol	* map		331486						
ANR	332251	Symbol	* filearr		331486						
ANR	332252	Symbol	& st		331486						
ANR	332253	Symbol	st . st_mode		331486						
ANR	332254	Symbol	FILE_CHECK		331486						
ANR	332255	Symbol	dir		331486						
ANR	332256	Symbol	usg_hdr		331486						
ANR	332257	Symbol	strlen		331486						
ANR	332258	Symbol	mset [ j ] . me [ i ] . mp		331486						
ANR	332259	Symbol	action		331486						
ANR	332260	Symbol	map -> nmagic		331486						
ANR	332261	Symbol	* * mset		331486						
ANR	332262	Symbol	* * j		331486						
ANR	332263	Symbol	& errs		331486						
ANR	332264	Symbol	* * i		331486						
ANR	332265	Symbol	maxfiles		331486						
ANR	332266	Symbol	NULL		331486						
ANR	332267	Symbol	php_sys_stat		331486						
ANR	332268	Symbol	ms		331486						
ANR	332269	Symbol	* map -> magic		331486						
ANR	332270	Symbol	* mset		331486						
ANR	332271	Symbol	stderr		331486						
ANR	332272	Symbol	* * map		331486						
ANR	332273	Symbol	* * * j		331486						
ANR	332274	Symbol	files		331486						
ANR	332275	Symbol	mlen		331486						
ANR	332276	Symbol	ms -> flags		331486						
ANR	332277	Symbol	mset [ j ] . count		331486						
ANR	332278	Symbol	apprentice_sort		331486						
ANR	332279	Symbol	coalesce_entries		331486						
ANR	332280	Symbol	mset [ j ] . me [ i ] . mp -> cont_level		331486						
ANR	332281	Symbol	fn		331486						
ANR	332282	Symbol	* mset [ j ] . me [ i ] . mp		331486						
ANR	332283	Symbol	php_stream_readdir		331486						
ANR	332284	Symbol	cmpstrp		331486						
ANR	332285	Symbol	php_stream_opendir		331486						
ANR	332286	Symbol	* ms		331486						
ANR	332287	Symbol	set_text_binary		331486						
ANR	332288	Symbol	* * mset [ j ] . me		331486						
ANR	332289	Symbol	estrndup		331486						
ANR	332290	Symbol	map -> magic		331486						
ANR	332291	Symbol	* mset [ j ] . me		331486						
ANR	332292	Symbol	map		331486						
ANR	332293	Symbol	snprintf		331486						
ANR	332294	Symbol	st		331486						
ANR	332295	Symbol	stat		331486						
ANR	332296	Symbol	d		331486						
ANR	332297	Symbol	mset		331486						
ANR	332298	Symbol	i		331486						
ANR	332299	Symbol	j		331486						
ANR	332300	Symbol	& d		331486						
ANR	332301	Symbol	filearr		331486						
ANR	332302	Symbol	mflen		331486						
ANR	332303	Symbol	S_ISREG		331486						
ANR	332304	Symbol	* i		331486						
ANR	332305	Symbol	mfn		331486						
ANR	332306	Symbol	REPORT_ERRORS		331486						
ANR	332307	Symbol	* j		331486						
ANR	332308	Symbol	MAGIC_CHECK		331486						
ANR	332309	Symbol	S_ISDIR		331486						
ANR	332310	Symbol	d . d_name		331486						
ANR	332311	Symbol	mset [ j ] . me		331486						
ANR	332312	Function	file_signextend	1263:10:29607:31079							
ANR	332313	FunctionDef	"file_signextend (struct magic_set * ms , struct magic * m , uint64_t v)"		332312	0					
ANR	332314	CompoundStatement		1265:0:29683:31079	332312	0					
ANR	332315	IfStatement	if ( ! ( m -> flag & UNSIGNED ) )		332312	0					
ANR	332316	Condition	! ( m -> flag & UNSIGNED )	1266:5:29690:29710	332312	0	True				
ANR	332317	UnaryOperationExpression	! ( m -> flag & UNSIGNED )		332312	0					
ANR	332318	UnaryOperator	!		332312	0					
ANR	332319	BitAndExpression	m -> flag & UNSIGNED		332312	1		&			
ANR	332320	PtrMemberAccess	m -> flag		332312	0					
ANR	332321	Identifier	m		332312	0					
ANR	332322	Identifier	flag		332312	1					
ANR	332323	Identifier	UNSIGNED		332312	1					
ANR	332324	CompoundStatement		2:28:29:29	332312	1					
ANR	332325	SwitchStatement	switch ( m -> type )		332312	0					
ANR	332326	Condition	m -> type	1267:9:29724:29730	332312	0	True				
ANR	332327	PtrMemberAccess	m -> type		332312	0					
ANR	332328	Identifier	m		332312	0					
ANR	332329	Identifier	type		332312	1					
ANR	332330	CompoundStatement		3:18:49:49	332312	1					
ANR	332331	Label	case FILE_BYTE :	1273:2:29886:29900	332312	0	True				
ANR	332332	Identifier	FILE_BYTE		332312	0					
ANR	332333	ExpressionStatement	v = ( signed char ) v	1274:3:29905:29924	332312	1	True				
ANR	332334	AssignmentExpression	v = ( signed char ) v		332312	0		=			
ANR	332335	Identifier	v		332312	0					
ANR	332336	CastExpression	( signed char ) v		332312	1					
ANR	332337	CastTarget	signed char		332312	0					
ANR	332338	Identifier	v		332312	1					
ANR	332339	BreakStatement	break ;	1275:3:29929:29934	332312	2	True				
ANR	332340	Label	case FILE_SHORT :	1276:2:29938:29953	332312	3	True				
ANR	332341	Identifier	FILE_SHORT		332312	0					
ANR	332342	Label	case FILE_BESHORT :	1277:2:29957:29974	332312	4	True				
ANR	332343	Identifier	FILE_BESHORT		332312	0					
ANR	332344	Label	case FILE_LESHORT :	1278:2:29978:29995	332312	5	True				
ANR	332345	Identifier	FILE_LESHORT		332312	0					
ANR	332346	ExpressionStatement	v = ( short ) v	1279:3:30000:30013	332312	6	True				
ANR	332347	AssignmentExpression	v = ( short ) v		332312	0		=			
ANR	332348	Identifier	v		332312	0					
ANR	332349	CastExpression	( short ) v		332312	1					
ANR	332350	CastTarget	short		332312	0					
ANR	332351	Identifier	v		332312	1					
ANR	332352	BreakStatement	break ;	1280:3:30018:30023	332312	7	True				
ANR	332353	Label	case FILE_DATE :	1281:2:30027:30041	332312	8	True				
ANR	332354	Identifier	FILE_DATE		332312	0					
ANR	332355	Label	case FILE_BEDATE :	1282:2:30045:30061	332312	9	True				
ANR	332356	Identifier	FILE_BEDATE		332312	0					
ANR	332357	Label	case FILE_LEDATE :	1283:2:30065:30081	332312	10	True				
ANR	332358	Identifier	FILE_LEDATE		332312	0					
ANR	332359	Label	case FILE_MEDATE :	1284:2:30085:30101	332312	11	True				
ANR	332360	Identifier	FILE_MEDATE		332312	0					
ANR	332361	Label	case FILE_LDATE :	1285:2:30105:30120	332312	12	True				
ANR	332362	Identifier	FILE_LDATE		332312	0					
ANR	332363	Label	case FILE_BELDATE :	1286:2:30124:30141	332312	13	True				
ANR	332364	Identifier	FILE_BELDATE		332312	0					
ANR	332365	Label	case FILE_LELDATE :	1287:2:30145:30162	332312	14	True				
ANR	332366	Identifier	FILE_LELDATE		332312	0					
ANR	332367	Label	case FILE_MELDATE :	1288:2:30166:30183	332312	15	True				
ANR	332368	Identifier	FILE_MELDATE		332312	0					
ANR	332369	Label	case FILE_LONG :	1289:2:30187:30201	332312	16	True				
ANR	332370	Identifier	FILE_LONG		332312	0					
ANR	332371	Label	case FILE_BELONG :	1290:2:30205:30221	332312	17	True				
ANR	332372	Identifier	FILE_BELONG		332312	0					
ANR	332373	Label	case FILE_LELONG :	1291:2:30225:30241	332312	18	True				
ANR	332374	Identifier	FILE_LELONG		332312	0					
ANR	332375	Label	case FILE_MELONG :	1292:2:30245:30261	332312	19	True				
ANR	332376	Identifier	FILE_MELONG		332312	0					
ANR	332377	Label	case FILE_FLOAT :	1293:2:30265:30280	332312	20	True				
ANR	332378	Identifier	FILE_FLOAT		332312	0					
ANR	332379	Label	case FILE_BEFLOAT :	1294:2:30284:30301	332312	21	True				
ANR	332380	Identifier	FILE_BEFLOAT		332312	0					
ANR	332381	Label	case FILE_LEFLOAT :	1295:2:30305:30322	332312	22	True				
ANR	332382	Identifier	FILE_LEFLOAT		332312	0					
ANR	332383	ExpressionStatement	v = ( int32_t ) v	1296:3:30327:30342	332312	23	True				
ANR	332384	AssignmentExpression	v = ( int32_t ) v		332312	0		=			
ANR	332385	Identifier	v		332312	0					
ANR	332386	CastExpression	( int32_t ) v		332312	1					
ANR	332387	CastTarget	int32_t		332312	0					
ANR	332388	Identifier	v		332312	1					
ANR	332389	BreakStatement	break ;	1297:3:30347:30352	332312	24	True				
ANR	332390	Label	case FILE_QUAD :	1298:2:30356:30370	332312	25	True				
ANR	332391	Identifier	FILE_QUAD		332312	0					
ANR	332392	Label	case FILE_BEQUAD :	1299:2:30374:30390	332312	26	True				
ANR	332393	Identifier	FILE_BEQUAD		332312	0					
ANR	332394	Label	case FILE_LEQUAD :	1300:2:30394:30410	332312	27	True				
ANR	332395	Identifier	FILE_LEQUAD		332312	0					
ANR	332396	Label	case FILE_QDATE :	1301:2:30414:30429	332312	28	True				
ANR	332397	Identifier	FILE_QDATE		332312	0					
ANR	332398	Label	case FILE_QLDATE :	1302:2:30433:30449	332312	29	True				
ANR	332399	Identifier	FILE_QLDATE		332312	0					
ANR	332400	Label	case FILE_QWDATE :	1303:2:30453:30469	332312	30	True				
ANR	332401	Identifier	FILE_QWDATE		332312	0					
ANR	332402	Label	case FILE_BEQDATE :	1304:2:30473:30490	332312	31	True				
ANR	332403	Identifier	FILE_BEQDATE		332312	0					
ANR	332404	Label	case FILE_BEQLDATE :	1305:2:30494:30512	332312	32	True				
ANR	332405	Identifier	FILE_BEQLDATE		332312	0					
ANR	332406	Label	case FILE_BEQWDATE :	1306:2:30516:30534	332312	33	True				
ANR	332407	Identifier	FILE_BEQWDATE		332312	0					
ANR	332408	Label	case FILE_LEQDATE :	1307:2:30538:30555	332312	34	True				
ANR	332409	Identifier	FILE_LEQDATE		332312	0					
ANR	332410	Label	case FILE_LEQLDATE :	1308:2:30559:30577	332312	35	True				
ANR	332411	Identifier	FILE_LEQLDATE		332312	0					
ANR	332412	Label	case FILE_LEQWDATE :	1309:2:30581:30599	332312	36	True				
ANR	332413	Identifier	FILE_LEQWDATE		332312	0					
ANR	332414	Label	case FILE_DOUBLE :	1310:2:30603:30619	332312	37	True				
ANR	332415	Identifier	FILE_DOUBLE		332312	0					
ANR	332416	Label	case FILE_BEDOUBLE :	1311:2:30623:30641	332312	38	True				
ANR	332417	Identifier	FILE_BEDOUBLE		332312	0					
ANR	332418	Label	case FILE_LEDOUBLE :	1312:2:30645:30663	332312	39	True				
ANR	332419	Identifier	FILE_LEDOUBLE		332312	0					
ANR	332420	ExpressionStatement	v = ( int64_t ) v	1313:3:30668:30683	332312	40	True				
ANR	332421	AssignmentExpression	v = ( int64_t ) v		332312	0		=			
ANR	332422	Identifier	v		332312	0					
ANR	332423	CastExpression	( int64_t ) v		332312	1					
ANR	332424	CastTarget	int64_t		332312	0					
ANR	332425	Identifier	v		332312	1					
ANR	332426	BreakStatement	break ;	1314:3:30688:30693	332312	41	True				
ANR	332427	Label	case FILE_STRING :	1315:2:30697:30713	332312	42	True				
ANR	332428	Identifier	FILE_STRING		332312	0					
ANR	332429	Label	case FILE_PSTRING :	1316:2:30717:30734	332312	43	True				
ANR	332430	Identifier	FILE_PSTRING		332312	0					
ANR	332431	Label	case FILE_BESTRING16 :	1317:2:30738:30758	332312	44	True				
ANR	332432	Identifier	FILE_BESTRING16		332312	0					
ANR	332433	Label	case FILE_LESTRING16 :	1318:2:30762:30782	332312	45	True				
ANR	332434	Identifier	FILE_LESTRING16		332312	0					
ANR	332435	Label	case FILE_REGEX :	1319:2:30786:30801	332312	46	True				
ANR	332436	Identifier	FILE_REGEX		332312	0					
ANR	332437	Label	case FILE_SEARCH :	1320:2:30805:30821	332312	47	True				
ANR	332438	Identifier	FILE_SEARCH		332312	0					
ANR	332439	Label	case FILE_DEFAULT :	1321:2:30825:30842	332312	48	True				
ANR	332440	Identifier	FILE_DEFAULT		332312	0					
ANR	332441	Label	case FILE_INDIRECT :	1322:2:30846:30864	332312	49	True				
ANR	332442	Identifier	FILE_INDIRECT		332312	0					
ANR	332443	Label	case FILE_NAME :	1323:2:30868:30882	332312	50	True				
ANR	332444	Identifier	FILE_NAME		332312	0					
ANR	332445	Label	case FILE_USE :	1324:2:30886:30899	332312	51	True				
ANR	332446	Identifier	FILE_USE		332312	0					
ANR	332447	Label	case FILE_CLEAR :	1325:2:30903:30918	332312	52	True				
ANR	332448	Identifier	FILE_CLEAR		332312	0					
ANR	332449	BreakStatement	break ;	1326:3:30923:30928	332312	53	True				
ANR	332450	Label	default :	1327:2:30932:30939	332312	54	True				
ANR	332451	Identifier	default		332312	0					
ANR	332452	IfStatement	if ( ms -> flags & MAGIC_CHECK )		332312	55					
ANR	332453	Condition	ms -> flags & MAGIC_CHECK	1328:7:30948:30970	332312	0	True				
ANR	332454	BitAndExpression	ms -> flags & MAGIC_CHECK		332312	0		&			
ANR	332455	PtrMemberAccess	ms -> flags		332312	0					
ANR	332456	Identifier	ms		332312	0					
ANR	332457	Identifier	flags		332312	1					
ANR	332458	Identifier	MAGIC_CHECK		332312	1					
ANR	332459	ExpressionStatement	"file_magwarn ( ms , ""cannot happen: m->type=%d\\n"" , m -> type )"	1329:7:30980:31044	332312	1	True				
ANR	332460	CallExpression	"file_magwarn ( ms , ""cannot happen: m->type=%d\\n"" , m -> type )"		332312	0					
ANR	332461	Callee	file_magwarn		332312	0					
ANR	332462	Identifier	file_magwarn		332312	0					
ANR	332463	ArgumentList	ms		332312	1					
ANR	332464	Argument	ms		332312	0					
ANR	332465	Identifier	ms		332312	0					
ANR	332466	Argument	"""cannot happen: m->type=%d\\n"""		332312	1					
ANR	332467	PrimaryExpression	"""cannot happen: m->type=%d\\n"""		332312	0					
ANR	332468	Argument	m -> type		332312	2					
ANR	332469	PtrMemberAccess	m -> type		332312	0					
ANR	332470	Identifier	m		332312	0					
ANR	332471	Identifier	type		332312	1					
ANR	332472	ReturnStatement	return ~0U ;	1331:3:31049:31059	332312	56	True				
ANR	332473	Identifier	~0U		332312	0					
ANR	332474	ReturnStatement	return v ;	1334:1:31069:31077	332312	1	True				
ANR	332475	Identifier	v		332312	0					
ANR	332476	ReturnType	uint64_t		332312	1					
ANR	332477	Identifier	file_signextend		332312	2					
ANR	332478	ParameterList	"struct magic_set * ms , struct magic * m , uint64_t v"		332312	3					
ANR	332479	Parameter	struct magic_set * ms	1264:16:29632:29651	332312	0	True				
ANR	332480	ParameterType	struct magic_set *		332312	0					
ANR	332481	Identifier	ms		332312	1					
ANR	332482	Parameter	struct magic * m	1264:38:29654:29668	332312	1	True				
ANR	332483	ParameterType	struct magic *		332312	0					
ANR	332484	Identifier	m		332312	1					
ANR	332485	Parameter	uint64_t v	1264:55:29671:29680	332312	2	True				
ANR	332486	ParameterType	uint64_t		332312	0					
ANR	332487	Identifier	v		332312	1					
ANR	332488	CFGEntryNode	ENTRY		332312		True				
ANR	332489	CFGExitNode	EXIT		332312		True				
ANR	332490	Symbol	m -> type		332312						
ANR	332491	Symbol	~0U		332312						
ANR	332492	Symbol	ms		332312						
ANR	332493	Symbol	v		332312						
ANR	332494	Symbol	UNSIGNED		332312						
ANR	332495	Symbol	* m		332312						
ANR	332496	Symbol	m -> flag		332312						
ANR	332497	Symbol	MAGIC_CHECK		332312						
ANR	332498	Symbol	ms -> flags		332312						
ANR	332499	Symbol	m		332312						
ANR	332500	Symbol	* ms		332312						
ANR	332501	Function	string_modifier_check	1337:8:31090:32486							
ANR	332502	FunctionDef	"string_modifier_check (struct magic_set * ms , struct magic * m)"		332501	0					
ANR	332503	CompoundStatement		1339:0:31155:32486	332501	0					
ANR	332504	IfStatement	if ( ( ms -> flags & MAGIC_CHECK ) == 0 )		332501	0					
ANR	332505	Condition	( ms -> flags & MAGIC_CHECK ) == 0	1340:5:31162:31191	332501	0	True				
ANR	332506	EqualityExpression	( ms -> flags & MAGIC_CHECK ) == 0		332501	0		==			
ANR	332507	BitAndExpression	ms -> flags & MAGIC_CHECK		332501	0		&			
ANR	332508	PtrMemberAccess	ms -> flags		332501	0					
ANR	332509	Identifier	ms		332501	0					
ANR	332510	Identifier	flags		332501	1					
ANR	332511	Identifier	MAGIC_CHECK		332501	1					
ANR	332512	PrimaryExpression	0		332501	1					
ANR	332513	ReturnStatement	return 0 ;	1341:2:31196:31204	332501	1	True				
ANR	332514	PrimaryExpression	0		332501	0					
ANR	332515	IfStatement	if ( m -> type != FILE_PSTRING && ( m -> str_flags & PSTRING_LEN ) != 0 )		332501	1					
ANR	332516	Condition	m -> type != FILE_PSTRING && ( m -> str_flags & PSTRING_LEN ) != 0	1343:5:31212:31271	332501	0	True				
ANR	332517	AndExpression	m -> type != FILE_PSTRING && ( m -> str_flags & PSTRING_LEN ) != 0		332501	0		&&			
ANR	332518	EqualityExpression	m -> type != FILE_PSTRING		332501	0		!=			
ANR	332519	PtrMemberAccess	m -> type		332501	0					
ANR	332520	Identifier	m		332501	0					
ANR	332521	Identifier	type		332501	1					
ANR	332522	Identifier	FILE_PSTRING		332501	1					
ANR	332523	EqualityExpression	( m -> str_flags & PSTRING_LEN ) != 0		332501	1		!=			
ANR	332524	BitAndExpression	m -> str_flags & PSTRING_LEN		332501	0		&			
ANR	332525	PtrMemberAccess	m -> str_flags		332501	0					
ANR	332526	Identifier	m		332501	0					
ANR	332527	Identifier	str_flags		332501	1					
ANR	332528	Identifier	PSTRING_LEN		332501	1					
ANR	332529	PrimaryExpression	0		332501	1					
ANR	332530	CompoundStatement		5:67:118:118	332501	1					
ANR	332531	ExpressionStatement	"file_magwarn ( ms , ""'/BHhLl' modifiers are only allowed for pascal strings\\n"" )"	1344:2:31278:31360	332501	0	True				
ANR	332532	CallExpression	"file_magwarn ( ms , ""'/BHhLl' modifiers are only allowed for pascal strings\\n"" )"		332501	0					
ANR	332533	Callee	file_magwarn		332501	0					
ANR	332534	Identifier	file_magwarn		332501	0					
ANR	332535	ArgumentList	ms		332501	1					
ANR	332536	Argument	ms		332501	0					
ANR	332537	Identifier	ms		332501	0					
ANR	332538	Argument	"""'/BHhLl' modifiers are only allowed for pascal strings\\n"""		332501	1					
ANR	332539	PrimaryExpression	"""'/BHhLl' modifiers are only allowed for pascal strings\\n"""		332501	0					
ANR	332540	ReturnStatement	return - 1 ;	1346:2:31364:31373	332501	1	True				
ANR	332541	UnaryOperationExpression	- 1		332501	0					
ANR	332542	UnaryOperator	-		332501	0					
ANR	332543	PrimaryExpression	1		332501	1					
ANR	332544	SwitchStatement	switch ( m -> type )		332501	2					
ANR	332545	Condition	m -> type	1348:9:31387:31393	332501	0	True				
ANR	332546	PtrMemberAccess	m -> type		332501	0					
ANR	332547	Identifier	m		332501	0					
ANR	332548	Identifier	type		332501	1					
ANR	332549	CompoundStatement		10:18:240:240	332501	1					
ANR	332550	Label	case FILE_BESTRING16 :	1349:1:31399:31419	332501	0	True				
ANR	332551	Identifier	FILE_BESTRING16		332501	0					
ANR	332552	Label	case FILE_LESTRING16 :	1350:1:31422:31442	332501	1	True				
ANR	332553	Identifier	FILE_LESTRING16		332501	0					
ANR	332554	IfStatement	if ( m -> str_flags != 0 )		332501	2					
ANR	332555	Condition	m -> str_flags != 0	1351:6:31450:31466	332501	0	True				
ANR	332556	EqualityExpression	m -> str_flags != 0		332501	0		!=			
ANR	332557	PtrMemberAccess	m -> str_flags		332501	0					
ANR	332558	Identifier	m		332501	0					
ANR	332559	Identifier	str_flags		332501	1					
ANR	332560	PrimaryExpression	0		332501	1					
ANR	332561	CompoundStatement		13:25:313:313	332501	1					
ANR	332562	ExpressionStatement	"file_magwarn ( ms , ""no modifiers allowed for 16-bit strings\\n"" )"	1352:3:31474:31542	332501	0	True				
ANR	332563	CallExpression	"file_magwarn ( ms , ""no modifiers allowed for 16-bit strings\\n"" )"		332501	0					
ANR	332564	Callee	file_magwarn		332501	0					
ANR	332565	Identifier	file_magwarn		332501	0					
ANR	332566	ArgumentList	ms		332501	1					
ANR	332567	Argument	ms		332501	0					
ANR	332568	Identifier	ms		332501	0					
ANR	332569	Argument	"""no modifiers allowed for 16-bit strings\\n"""		332501	1					
ANR	332570	PrimaryExpression	"""no modifiers allowed for 16-bit strings\\n"""		332501	0					
ANR	332571	ReturnStatement	return - 1 ;	1354:3:31547:31556	332501	1	True				
ANR	332572	UnaryOperationExpression	- 1		332501	0					
ANR	332573	UnaryOperator	-		332501	0					
ANR	332574	PrimaryExpression	1		332501	1					
ANR	332575	BreakStatement	break ;	1356:2:31564:31569	332501	3	True				
ANR	332576	Label	case FILE_STRING :	1357:1:31572:31588	332501	4	True				
ANR	332577	Identifier	FILE_STRING		332501	0					
ANR	332578	Label	case FILE_PSTRING :	1358:1:31591:31608	332501	5	True				
ANR	332579	Identifier	FILE_PSTRING		332501	0					
ANR	332580	IfStatement	if ( ( m -> str_flags & REGEX_OFFSET_START ) != 0 )		332501	6					
ANR	332581	Condition	( m -> str_flags & REGEX_OFFSET_START ) != 0	1359:6:31616:31655	332501	0	True				
ANR	332582	EqualityExpression	( m -> str_flags & REGEX_OFFSET_START ) != 0		332501	0		!=			
ANR	332583	BitAndExpression	m -> str_flags & REGEX_OFFSET_START		332501	0		&			
ANR	332584	PtrMemberAccess	m -> str_flags		332501	0					
ANR	332585	Identifier	m		332501	0					
ANR	332586	Identifier	str_flags		332501	1					
ANR	332587	Identifier	REGEX_OFFSET_START		332501	1					
ANR	332588	PrimaryExpression	0		332501	1					
ANR	332589	CompoundStatement		21:48:502:502	332501	1					
ANR	332590	ExpressionStatement	"file_magwarn ( ms , ""'/%c' only allowed on regex and search\\n"" , CHAR_REGEX_OFFSET_START )"	1360:3:31663:31762	332501	0	True				
ANR	332591	CallExpression	"file_magwarn ( ms , ""'/%c' only allowed on regex and search\\n"" , CHAR_REGEX_OFFSET_START )"		332501	0					
ANR	332592	Callee	file_magwarn		332501	0					
ANR	332593	Identifier	file_magwarn		332501	0					
ANR	332594	ArgumentList	ms		332501	1					
ANR	332595	Argument	ms		332501	0					
ANR	332596	Identifier	ms		332501	0					
ANR	332597	Argument	"""'/%c' only allowed on regex and search\\n"""		332501	1					
ANR	332598	PrimaryExpression	"""'/%c' only allowed on regex and search\\n"""		332501	0					
ANR	332599	Argument	CHAR_REGEX_OFFSET_START		332501	2					
ANR	332600	Identifier	CHAR_REGEX_OFFSET_START		332501	0					
ANR	332601	ReturnStatement	return - 1 ;	1363:3:31767:31776	332501	1	True				
ANR	332602	UnaryOperationExpression	- 1		332501	0					
ANR	332603	UnaryOperator	-		332501	0					
ANR	332604	PrimaryExpression	1		332501	1					
ANR	332605	BreakStatement	break ;	1365:2:31784:31789	332501	7	True				
ANR	332606	Label	case FILE_SEARCH :	1366:1:31792:31808	332501	8	True				
ANR	332607	Identifier	FILE_SEARCH		332501	0					
ANR	332608	IfStatement	if ( m -> str_range == 0 )		332501	9					
ANR	332609	Condition	m -> str_range == 0	1367:6:31816:31832	332501	0	True				
ANR	332610	EqualityExpression	m -> str_range == 0		332501	0		==			
ANR	332611	PtrMemberAccess	m -> str_range		332501	0					
ANR	332612	Identifier	m		332501	0					
ANR	332613	Identifier	str_range		332501	1					
ANR	332614	PrimaryExpression	0		332501	1					
ANR	332615	CompoundStatement		29:25:679:679	332501	1					
ANR	332616	ExpressionStatement	"file_magwarn ( ms , ""missing range; defaulting to %d\\n"" , STRING_DEFAULT_RANGE )"	1368:3:31840:31950	332501	0	True				
ANR	332617	CallExpression	"file_magwarn ( ms , ""missing range; defaulting to %d\\n"" , STRING_DEFAULT_RANGE )"		332501	0					
ANR	332618	Callee	file_magwarn		332501	0					
ANR	332619	Identifier	file_magwarn		332501	0					
ANR	332620	ArgumentList	ms		332501	1					
ANR	332621	Argument	ms		332501	0					
ANR	332622	Identifier	ms		332501	0					
ANR	332623	Argument	"""missing range; defaulting to %d\\n"""		332501	1					
ANR	332624	PrimaryExpression	"""missing range; defaulting to %d\\n"""		332501	0					
ANR	332625	Argument	STRING_DEFAULT_RANGE		332501	2					
ANR	332626	Identifier	STRING_DEFAULT_RANGE		332501	0					
ANR	332627	ExpressionStatement	m -> str_range = STRING_DEFAULT_RANGE	1371:3:31955:31990	332501	1	True				
ANR	332628	AssignmentExpression	m -> str_range = STRING_DEFAULT_RANGE		332501	0		=			
ANR	332629	PtrMemberAccess	m -> str_range		332501	0					
ANR	332630	Identifier	m		332501	0					
ANR	332631	Identifier	str_range		332501	1					
ANR	332632	Identifier	STRING_DEFAULT_RANGE		332501	1					
ANR	332633	ReturnStatement	return - 1 ;	1372:3:31995:32004	332501	2	True				
ANR	332634	UnaryOperationExpression	- 1		332501	0					
ANR	332635	UnaryOperator	-		332501	0					
ANR	332636	PrimaryExpression	1		332501	1					
ANR	332637	BreakStatement	break ;	1374:2:32012:32017	332501	10	True				
ANR	332638	Label	case FILE_REGEX :	1375:1:32020:32035	332501	11	True				
ANR	332639	Identifier	FILE_REGEX		332501	0					
ANR	332640	IfStatement	if ( ( m -> str_flags & STRING_COMPACT_WHITESPACE ) != 0 )		332501	12					
ANR	332641	Condition	( m -> str_flags & STRING_COMPACT_WHITESPACE ) != 0	1376:6:32043:32089	332501	0	True				
ANR	332642	EqualityExpression	( m -> str_flags & STRING_COMPACT_WHITESPACE ) != 0		332501	0		!=			
ANR	332643	BitAndExpression	m -> str_flags & STRING_COMPACT_WHITESPACE		332501	0		&			
ANR	332644	PtrMemberAccess	m -> str_flags		332501	0					
ANR	332645	Identifier	m		332501	0					
ANR	332646	Identifier	str_flags		332501	1					
ANR	332647	Identifier	STRING_COMPACT_WHITESPACE		332501	1					
ANR	332648	PrimaryExpression	0		332501	1					
ANR	332649	CompoundStatement		38:55:936:936	332501	1					
ANR	332650	ExpressionStatement	"file_magwarn ( ms , ""'/%c' not allowed on regex\\n"" , CHAR_COMPACT_WHITESPACE )"	1377:3:32097:32177	332501	0	True				
ANR	332651	CallExpression	"file_magwarn ( ms , ""'/%c' not allowed on regex\\n"" , CHAR_COMPACT_WHITESPACE )"		332501	0					
ANR	332652	Callee	file_magwarn		332501	0					
ANR	332653	Identifier	file_magwarn		332501	0					
ANR	332654	ArgumentList	ms		332501	1					
ANR	332655	Argument	ms		332501	0					
ANR	332656	Identifier	ms		332501	0					
ANR	332657	Argument	"""'/%c' not allowed on regex\\n"""		332501	1					
ANR	332658	PrimaryExpression	"""'/%c' not allowed on regex\\n"""		332501	0					
ANR	332659	Argument	CHAR_COMPACT_WHITESPACE		332501	2					
ANR	332660	Identifier	CHAR_COMPACT_WHITESPACE		332501	0					
ANR	332661	ReturnStatement	return - 1 ;	1379:3:32182:32191	332501	1	True				
ANR	332662	UnaryOperationExpression	- 1		332501	0					
ANR	332663	UnaryOperator	-		332501	0					
ANR	332664	PrimaryExpression	1		332501	1					
ANR	332665	IfStatement	if ( ( m -> str_flags & STRING_COMPACT_OPTIONAL_WHITESPACE ) != 0 )		332501	13					
ANR	332666	Condition	( m -> str_flags & STRING_COMPACT_OPTIONAL_WHITESPACE ) != 0	1381:6:32203:32258	332501	0	True				
ANR	332667	EqualityExpression	( m -> str_flags & STRING_COMPACT_OPTIONAL_WHITESPACE ) != 0		332501	0		!=			
ANR	332668	BitAndExpression	m -> str_flags & STRING_COMPACT_OPTIONAL_WHITESPACE		332501	0		&			
ANR	332669	PtrMemberAccess	m -> str_flags		332501	0					
ANR	332670	Identifier	m		332501	0					
ANR	332671	Identifier	str_flags		332501	1					
ANR	332672	Identifier	STRING_COMPACT_OPTIONAL_WHITESPACE		332501	1					
ANR	332673	PrimaryExpression	0		332501	1					
ANR	332674	CompoundStatement		43:64:1105:1105	332501	1					
ANR	332675	ExpressionStatement	"file_magwarn ( ms , ""'/%c' not allowed on regex\\n"" , CHAR_COMPACT_OPTIONAL_WHITESPACE )"	1382:3:32266:32355	332501	0	True				
ANR	332676	CallExpression	"file_magwarn ( ms , ""'/%c' not allowed on regex\\n"" , CHAR_COMPACT_OPTIONAL_WHITESPACE )"		332501	0					
ANR	332677	Callee	file_magwarn		332501	0					
ANR	332678	Identifier	file_magwarn		332501	0					
ANR	332679	ArgumentList	ms		332501	1					
ANR	332680	Argument	ms		332501	0					
ANR	332681	Identifier	ms		332501	0					
ANR	332682	Argument	"""'/%c' not allowed on regex\\n"""		332501	1					
ANR	332683	PrimaryExpression	"""'/%c' not allowed on regex\\n"""		332501	0					
ANR	332684	Argument	CHAR_COMPACT_OPTIONAL_WHITESPACE		332501	2					
ANR	332685	Identifier	CHAR_COMPACT_OPTIONAL_WHITESPACE		332501	0					
ANR	332686	ReturnStatement	return - 1 ;	1384:3:32360:32369	332501	1	True				
ANR	332687	UnaryOperationExpression	- 1		332501	0					
ANR	332688	UnaryOperator	-		332501	0					
ANR	332689	PrimaryExpression	1		332501	1					
ANR	332690	BreakStatement	break ;	1386:2:32377:32382	332501	14	True				
ANR	332691	Label	default :	1387:1:32385:32392	332501	15	True				
ANR	332692	Identifier	default		332501	0					
ANR	332693	ExpressionStatement	"file_magwarn ( ms , ""coding error: m->type=%d\\n"" , m -> type )"	1388:2:32396:32457	332501	16	True				
ANR	332694	CallExpression	"file_magwarn ( ms , ""coding error: m->type=%d\\n"" , m -> type )"		332501	0					
ANR	332695	Callee	file_magwarn		332501	0					
ANR	332696	Identifier	file_magwarn		332501	0					
ANR	332697	ArgumentList	ms		332501	1					
ANR	332698	Argument	ms		332501	0					
ANR	332699	Identifier	ms		332501	0					
ANR	332700	Argument	"""coding error: m->type=%d\\n"""		332501	1					
ANR	332701	PrimaryExpression	"""coding error: m->type=%d\\n"""		332501	0					
ANR	332702	Argument	m -> type		332501	2					
ANR	332703	PtrMemberAccess	m -> type		332501	0					
ANR	332704	Identifier	m		332501	0					
ANR	332705	Identifier	type		332501	1					
ANR	332706	ReturnStatement	return - 1 ;	1390:2:32461:32470	332501	17	True				
ANR	332707	UnaryOperationExpression	- 1		332501	0					
ANR	332708	UnaryOperator	-		332501	0					
ANR	332709	PrimaryExpression	1		332501	1					
ANR	332710	ReturnStatement	return 0 ;	1392:1:32476:32484	332501	3	True				
ANR	332711	PrimaryExpression	0		332501	0					
ANR	332712	ReturnType	int		332501	1					
ANR	332713	Identifier	string_modifier_check		332501	2					
ANR	332714	ParameterList	"struct magic_set * ms , struct magic * m"		332501	3					
ANR	332715	Parameter	struct magic_set * ms	1338:22:31116:31135	332501	0	True				
ANR	332716	ParameterType	struct magic_set *		332501	0					
ANR	332717	Identifier	ms		332501	1					
ANR	332718	Parameter	struct magic * m	1338:44:31138:31152	332501	1	True				
ANR	332719	ParameterType	struct magic *		332501	0					
ANR	332720	Identifier	m		332501	1					
ANR	332721	CFGEntryNode	ENTRY		332501		True				
ANR	332722	CFGExitNode	EXIT		332501		True				
ANR	332723	Symbol	PSTRING_LEN		332501						
ANR	332724	Symbol	STRING_COMPACT_WHITESPACE		332501						
ANR	332725	Symbol	ms		332501						
ANR	332726	Symbol	REGEX_OFFSET_START		332501						
ANR	332727	Symbol	CHAR_COMPACT_OPTIONAL_WHITESPACE		332501						
ANR	332728	Symbol	m -> str_flags		332501						
ANR	332729	Symbol	FILE_PSTRING		332501						
ANR	332730	Symbol	m -> str_range		332501						
ANR	332731	Symbol	STRING_COMPACT_OPTIONAL_WHITESPACE		332501						
ANR	332732	Symbol	m		332501						
ANR	332733	Symbol	STRING_DEFAULT_RANGE		332501						
ANR	332734	Symbol	* ms		332501						
ANR	332735	Symbol	m -> type		332501						
ANR	332736	Symbol	* m		332501						
ANR	332737	Symbol	MAGIC_CHECK		332501						
ANR	332738	Symbol	CHAR_COMPACT_WHITESPACE		332501						
ANR	332739	Symbol	ms -> flags		332501						
ANR	332740	Symbol	CHAR_REGEX_OFFSET_START		332501						
ANR	332741	Function	get_op	1395:8:32497:32826							
ANR	332742	FunctionDef	get_op (char c)		332741	0					
ANR	332743	CompoundStatement		1397:0:32516:32826	332741	0					
ANR	332744	SwitchStatement	switch ( c )		332741	0					
ANR	332745	Condition	c	1398:9:32527:32527	332741	0	True				
ANR	332746	Identifier	c		332741	0					
ANR	332747	CompoundStatement		2:12:13:13	332741	1					
ANR	332748	Label	case '&' :	1399:1:32533:32541	332741	0	True				
ANR	332749	ReturnStatement	return FILE_OPAND ;	1400:2:32545:32562	332741	1	True				
ANR	332750	Identifier	FILE_OPAND		332741	0					
ANR	332751	Label	case '|' :	1401:1:32565:32573	332741	2	True				
ANR	332752	ReturnStatement	return FILE_OPOR ;	1402:2:32577:32593	332741	3	True				
ANR	332753	Identifier	FILE_OPOR		332741	0					
ANR	332754	Label	case '^' :	1403:1:32596:32604	332741	4	True				
ANR	332755	ReturnStatement	return FILE_OPXOR ;	1404:2:32608:32625	332741	5	True				
ANR	332756	Identifier	FILE_OPXOR		332741	0					
ANR	332757	Label	case '+' :	1405:1:32628:32636	332741	6	True				
ANR	332758	ReturnStatement	return FILE_OPADD ;	1406:2:32640:32657	332741	7	True				
ANR	332759	Identifier	FILE_OPADD		332741	0					
ANR	332760	Label	case '-' :	1407:1:32660:32668	332741	8	True				
ANR	332761	ReturnStatement	return FILE_OPMINUS ;	1408:2:32672:32691	332741	9	True				
ANR	332762	Identifier	FILE_OPMINUS		332741	0					
ANR	332763	Label	case '*' :	1409:1:32694:32702	332741	10	True				
ANR	332764	ReturnStatement	return FILE_OPMULTIPLY ;	1410:2:32706:32728	332741	11	True				
ANR	332765	Identifier	FILE_OPMULTIPLY		332741	0					
ANR	332766	Label	case '/' :	1411:1:32731:32739	332741	12	True				
ANR	332767	ReturnStatement	return FILE_OPDIVIDE ;	1412:2:32743:32763	332741	13	True				
ANR	332768	Identifier	FILE_OPDIVIDE		332741	0					
ANR	332769	Label	case '%' :	1413:1:32766:32774	332741	14	True				
ANR	332770	ReturnStatement	return FILE_OPMODULO ;	1414:2:32778:32798	332741	15	True				
ANR	332771	Identifier	FILE_OPMODULO		332741	0					
ANR	332772	Label	default :	1415:1:32801:32808	332741	16	True				
ANR	332773	Identifier	default		332741	0					
ANR	332774	ReturnStatement	return - 1 ;	1416:2:32812:32821	332741	17	True				
ANR	332775	UnaryOperationExpression	- 1		332741	0					
ANR	332776	UnaryOperator	-		332741	0					
ANR	332777	PrimaryExpression	1		332741	1					
ANR	332778	ReturnType	int		332741	1					
ANR	332779	Identifier	get_op		332741	2					
ANR	332780	ParameterList	char c		332741	3					
ANR	332781	Parameter	char c	1396:7:32508:32513	332741	0	True				
ANR	332782	ParameterType	char		332741	0					
ANR	332783	Identifier	c		332741	1					
ANR	332784	CFGEntryNode	ENTRY		332741		True				
ANR	332785	CFGExitNode	EXIT		332741		True				
ANR	332786	Symbol	c		332741						
ANR	332787	Symbol	FILE_OPOR		332741						
ANR	332788	Symbol	FILE_OPMINUS		332741						
ANR	332789	Symbol	FILE_OPMODULO		332741						
ANR	332790	Symbol	FILE_OPMULTIPLY		332741						
ANR	332791	Symbol	FILE_OPADD		332741						
ANR	332792	Symbol	FILE_OPAND		332741						
ANR	332793	Symbol	FILE_OPDIVIDE		332741						
ANR	332794	Symbol	FILE_OPXOR		332741						
ANR	332795	Function	get_cond	1421:8:32864:33329							
ANR	332796	FunctionDef	"get_cond (const char * l , const char * * t)"		332795	0					
ANR	332797	CompoundStatement		1423:0:32908:33329	332795	0					
ANR	332798	Statement	static	1424:1:32911:32916	332795	0	True				
ANR	332799	Statement	const	1424:8:32918:32922	332795	1	True				
ANR	332800	ClassDefStatement	struct cond_tbl_s { char name [ 8 ] ; size_t len ; int cond ; }	1424:14:32924:32987	332795	2	True				
ANR	332801	Identifier	cond_tbl_s		332795	0					
ANR	332802	Statement	cond_tbl	1428:3:32989:32996	332795	3	True				
ANR	332803	Statement	[	1428:11:32997:32997	332795	4	True				
ANR	332804	Statement	]	1428:12:32998:32998	332795	5	True				
ANR	332805	Statement	=	1428:14:33000:33000	332795	6	True				
ANR	332806	CompoundStatement		6:16:93:93	332795	7					
ANR	332807	CompoundStatement		7:2:97:97	332795	0					
ANR	332808	Statement	"""if"""	1429:4:33008:33011	332795	0	True				
ANR	332809	Statement	","	1429:8:33012:33012	332795	1	True				
ANR	332810	Statement	2	1429:11:33015:33015	332795	2	True				
ANR	332811	Statement	","	1429:12:33016:33016	332795	3	True				
ANR	332812	Statement	COND_IF	1429:14:33018:33024	332795	4	True				
ANR	332813	Statement	","	1429:23:33027:33027	332795	1	True				
ANR	332814	CompoundStatement		8:2:122:122	332795	2					
ANR	332815	Statement	"""elif"""	1430:4:33033:33038	332795	0	True				
ANR	332816	Statement	","	1430:10:33039:33039	332795	1	True				
ANR	332817	Statement	4	1430:12:33041:33041	332795	2	True				
ANR	332818	Statement	","	1430:13:33042:33042	332795	3	True				
ANR	332819	Statement	COND_ELIF	1430:15:33044:33052	332795	4	True				
ANR	332820	Statement	","	1430:26:33055:33055	332795	3	True				
ANR	332821	CompoundStatement		9:2:150:150	332795	4					
ANR	332822	Statement	"""else"""	1431:4:33061:33066	332795	0	True				
ANR	332823	Statement	","	1431:10:33067:33067	332795	1	True				
ANR	332824	Statement	4	1431:12:33069:33069	332795	2	True				
ANR	332825	Statement	","	1431:13:33070:33070	332795	3	True				
ANR	332826	Statement	COND_ELSE	1431:15:33072:33080	332795	4	True				
ANR	332827	Statement	","	1431:26:33083:33083	332795	5	True				
ANR	332828	CompoundStatement		10:2:178:178	332795	6					
ANR	332829	Statement	""""""	1432:4:33089:33090	332795	0	True				
ANR	332830	Statement	","	1432:6:33091:33091	332795	1	True				
ANR	332831	Statement	0	1432:9:33094:33094	332795	2	True				
ANR	332832	Statement	","	1432:10:33095:33095	332795	3	True				
ANR	332833	Statement	COND_NONE	1432:12:33097:33105	332795	4	True				
ANR	332834	Statement	","	1432:23:33108:33108	332795	7	True				
ANR	332835	ExpressionStatement		1433:2:33112:33112	332795	8	True				
ANR	332836	IdentifierDeclStatement	const struct cond_tbl_s * p ;	1434:1:33115:33141	332795	9	True				
ANR	332837	IdentifierDecl	* p		332795	0					
ANR	332838	IdentifierDeclType	const struct cond_tbl_s *		332795	0					
ANR	332839	Identifier	p		332795	1					
ANR	332840	ForStatement	for ( p = cond_tbl ; p -> len ; p ++ )		332795	10					
ANR	332841	ForInit	p = cond_tbl ;	1436:6:33150:33162	332795	0	True				
ANR	332842	AssignmentExpression	p = cond_tbl		332795	0		=			
ANR	332843	Identifier	p		332795	0					
ANR	332844	Identifier	cond_tbl		332795	1					
ANR	332845	Condition	p -> len	1436:20:33164:33169	332795	1	True				
ANR	332846	PtrMemberAccess	p -> len		332795	0					
ANR	332847	Identifier	p		332795	0					
ANR	332848	Identifier	len		332795	1					
ANR	332849	PostIncDecOperationExpression	p ++	1436:28:33172:33174	332795	2	True				
ANR	332850	Identifier	p		332795	0					
ANR	332851	IncDec	++		332795	1					
ANR	332852	CompoundStatement		14:33:268:268	332795	3					
ANR	332853	IfStatement	"if ( strncmp ( l , p -> name , p -> len ) == 0 && isspace ( ( unsigned char ) l [ p -> len ] ) )"		332795	0					
ANR	332854	Condition	"strncmp ( l , p -> name , p -> len ) == 0 && isspace ( ( unsigned char ) l [ p -> len ] )"	1437:6:33185:33259	332795	0	True				
ANR	332855	AndExpression	"strncmp ( l , p -> name , p -> len ) == 0 && isspace ( ( unsigned char ) l [ p -> len ] )"		332795	0		&&			
ANR	332856	EqualityExpression	"strncmp ( l , p -> name , p -> len ) == 0"		332795	0		==			
ANR	332857	CallExpression	"strncmp ( l , p -> name , p -> len )"		332795	0					
ANR	332858	Callee	strncmp		332795	0					
ANR	332859	Identifier	strncmp		332795	0					
ANR	332860	ArgumentList	l		332795	1					
ANR	332861	Argument	l		332795	0					
ANR	332862	Identifier	l		332795	0					
ANR	332863	Argument	p -> name		332795	1					
ANR	332864	PtrMemberAccess	p -> name		332795	0					
ANR	332865	Identifier	p		332795	0					
ANR	332866	Identifier	name		332795	1					
ANR	332867	Argument	p -> len		332795	2					
ANR	332868	PtrMemberAccess	p -> len		332795	0					
ANR	332869	Identifier	p		332795	0					
ANR	332870	Identifier	len		332795	1					
ANR	332871	PrimaryExpression	0		332795	1					
ANR	332872	CallExpression	isspace ( ( unsigned char ) l [ p -> len ] )		332795	1					
ANR	332873	Callee	isspace		332795	0					
ANR	332874	Identifier	isspace		332795	0					
ANR	332875	ArgumentList	( unsigned char ) l [ p -> len ]		332795	1					
ANR	332876	Argument	( unsigned char ) l [ p -> len ]		332795	0					
ANR	332877	CastExpression	( unsigned char ) l [ p -> len ]		332795	0					
ANR	332878	CastTarget	unsigned char		332795	0					
ANR	332879	ArrayIndexing	l [ p -> len ]		332795	1					
ANR	332880	Identifier	l		332795	0					
ANR	332881	PtrMemberAccess	p -> len		332795	1					
ANR	332882	Identifier	p		332795	0					
ANR	332883	Identifier	len		332795	1					
ANR	332884	CompoundStatement		16:41:353:353	332795	1					
ANR	332885	IfStatement	if ( t )		332795	0					
ANR	332886	Condition	t	1439:7:33271:33271	332795	0	True				
ANR	332887	Identifier	t		332795	0					
ANR	332888	ExpressionStatement	* t = l + p -> len	1440:4:33278:33293	332795	1	True				
ANR	332889	AssignmentExpression	* t = l + p -> len		332795	0		=			
ANR	332890	UnaryOperationExpression	* t		332795	0					
ANR	332891	UnaryOperator	*		332795	0					
ANR	332892	Identifier	t		332795	1					
ANR	332893	AdditiveExpression	l + p -> len		332795	1		+			
ANR	332894	Identifier	l		332795	0					
ANR	332895	PtrMemberAccess	p -> len		332795	1					
ANR	332896	Identifier	p		332795	0					
ANR	332897	Identifier	len		332795	1					
ANR	332898	BreakStatement	break ;	1441:3:33298:33303	332795	1	True				
ANR	332899	ReturnStatement	return p -> cond ;	1444:1:33313:33327	332795	11	True				
ANR	332900	PtrMemberAccess	p -> cond		332795	0					
ANR	332901	Identifier	p		332795	0					
ANR	332902	Identifier	cond		332795	1					
ANR	332903	ReturnType	int		332795	1					
ANR	332904	Identifier	get_cond		332795	2					
ANR	332905	ParameterList	"const char * l , const char * * t"		332795	3					
ANR	332906	Parameter	const char * l	1422:9:32877:32889	332795	0	True				
ANR	332907	ParameterType	const char *		332795	0					
ANR	332908	Identifier	l		332795	1					
ANR	332909	Parameter	const char * * t	1422:24:32892:32905	332795	1	True				
ANR	332910	ParameterType	const char * *		332795	0					
ANR	332911	Identifier	t		332795	1					
ANR	332912	CFGEntryNode	ENTRY		332795		True				
ANR	332913	CFGExitNode	EXIT		332795		True				
ANR	332914	Symbol	* p -> len		332795						
ANR	332915	Symbol	isspace		332795						
ANR	332916	Symbol	cond_tbl		332795						
ANR	332917	Symbol	l		332795						
ANR	332918	Symbol	p -> cond		332795						
ANR	332919	Symbol	p		332795						
ANR	332920	Symbol	strncmp		332795						
ANR	332921	Symbol	t		332795						
ANR	332922	Symbol	* l		332795						
ANR	332923	Symbol	p -> len		332795						
ANR	332924	Symbol	* p		332795						
ANR	332925	Symbol	* * p		332795						
ANR	332926	Symbol	p -> name		332795						
ANR	332927	Symbol	* t		332795						
ANR	332928	Function	check_cond	1447:8:33340:34208							
ANR	332929	FunctionDef	"check_cond (struct magic_set * ms , int cond , uint32_t cont_level)"		332928	0					
ANR	332930	CompoundStatement		1449:0:33408:34208	332928	0					
ANR	332931	IdentifierDeclStatement	int last_cond ;	1450:1:33411:33424	332928	0	True				
ANR	332932	IdentifierDecl	last_cond		332928	0					
ANR	332933	IdentifierDeclType	int		332928	0					
ANR	332934	Identifier	last_cond		332928	1					
ANR	332935	ExpressionStatement	last_cond = ms -> c . li [ cont_level ] . last_cond	1451:1:33427:33469	332928	1	True				
ANR	332936	AssignmentExpression	last_cond = ms -> c . li [ cont_level ] . last_cond		332928	0		=			
ANR	332937	Identifier	last_cond		332928	0					
ANR	332938	MemberAccess	ms -> c . li [ cont_level ] . last_cond		332928	1					
ANR	332939	ArrayIndexing	ms -> c . li [ cont_level ]		332928	0					
ANR	332940	MemberAccess	ms -> c . li		332928	0					
ANR	332941	PtrMemberAccess	ms -> c		332928	0					
ANR	332942	Identifier	ms		332928	0					
ANR	332943	Identifier	c		332928	1					
ANR	332944	Identifier	li		332928	1					
ANR	332945	Identifier	cont_level		332928	1					
ANR	332946	Identifier	last_cond		332928	1					
ANR	332947	SwitchStatement	switch ( cond )		332928	2					
ANR	332948	Condition	cond	1453:9:33481:33484	332928	0	True				
ANR	332949	Identifier	cond		332928	0					
ANR	332950	CompoundStatement		5:15:78:78	332928	1					
ANR	332951	Label	case COND_IF :	1454:1:33490:33502	332928	0	True				
ANR	332952	Identifier	COND_IF		332928	0					
ANR	332953	IfStatement	if ( last_cond != COND_NONE && last_cond != COND_ELIF )		332928	1					
ANR	332954	Condition	last_cond != COND_NONE && last_cond != COND_ELIF	1455:6:33510:33557	332928	0	True				
ANR	332955	AndExpression	last_cond != COND_NONE && last_cond != COND_ELIF		332928	0		&&			
ANR	332956	EqualityExpression	last_cond != COND_NONE		332928	0		!=			
ANR	332957	Identifier	last_cond		332928	0					
ANR	332958	Identifier	COND_NONE		332928	1					
ANR	332959	EqualityExpression	last_cond != COND_ELIF		332928	1		!=			
ANR	332960	Identifier	last_cond		332928	0					
ANR	332961	Identifier	COND_ELIF		332928	1					
ANR	332962	CompoundStatement		7:56:151:151	332928	1					
ANR	332963	IfStatement	if ( ms -> flags & MAGIC_CHECK )		332928	0					
ANR	332964	Condition	ms -> flags & MAGIC_CHECK	1456:7:33569:33591	332928	0	True				
ANR	332965	BitAndExpression	ms -> flags & MAGIC_CHECK		332928	0		&			
ANR	332966	PtrMemberAccess	ms -> flags		332928	0					
ANR	332967	Identifier	ms		332928	0					
ANR	332968	Identifier	flags		332928	1					
ANR	332969	Identifier	MAGIC_CHECK		332928	1					
ANR	332970	ExpressionStatement	"file_magwarn ( ms , ""syntax error: `if'"" )"	1457:4:33598:33636	332928	1	True				
ANR	332971	CallExpression	"file_magwarn ( ms , ""syntax error: `if'"" )"		332928	0					
ANR	332972	Callee	file_magwarn		332928	0					
ANR	332973	Identifier	file_magwarn		332928	0					
ANR	332974	ArgumentList	ms		332928	1					
ANR	332975	Argument	ms		332928	0					
ANR	332976	Identifier	ms		332928	0					
ANR	332977	Argument	"""syntax error: `if'"""		332928	1					
ANR	332978	PrimaryExpression	"""syntax error: `if'"""		332928	0					
ANR	332979	ReturnStatement	return - 1 ;	1458:3:33641:33650	332928	1	True				
ANR	332980	UnaryOperationExpression	- 1		332928	0					
ANR	332981	UnaryOperator	-		332928	0					
ANR	332982	PrimaryExpression	1		332928	1					
ANR	332983	ExpressionStatement	last_cond = COND_IF	1460:2:33658:33677	332928	2	True				
ANR	332984	AssignmentExpression	last_cond = COND_IF		332928	0		=			
ANR	332985	Identifier	last_cond		332928	0					
ANR	332986	Identifier	COND_IF		332928	1					
ANR	332987	BreakStatement	break ;	1461:2:33681:33686	332928	3	True				
ANR	332988	Label	case COND_ELIF :	1463:1:33690:33704	332928	4	True				
ANR	332989	Identifier	COND_ELIF		332928	0					
ANR	332990	IfStatement	if ( last_cond != COND_IF && last_cond != COND_ELIF )		332928	5					
ANR	332991	Condition	last_cond != COND_IF && last_cond != COND_ELIF	1464:6:33712:33757	332928	0	True				
ANR	332992	AndExpression	last_cond != COND_IF && last_cond != COND_ELIF		332928	0		&&			
ANR	332993	EqualityExpression	last_cond != COND_IF		332928	0		!=			
ANR	332994	Identifier	last_cond		332928	0					
ANR	332995	Identifier	COND_IF		332928	1					
ANR	332996	EqualityExpression	last_cond != COND_ELIF		332928	1		!=			
ANR	332997	Identifier	last_cond		332928	0					
ANR	332998	Identifier	COND_ELIF		332928	1					
ANR	332999	CompoundStatement		16:54:351:351	332928	1					
ANR	333000	IfStatement	if ( ms -> flags & MAGIC_CHECK )		332928	0					
ANR	333001	Condition	ms -> flags & MAGIC_CHECK	1465:7:33769:33791	332928	0	True				
ANR	333002	BitAndExpression	ms -> flags & MAGIC_CHECK		332928	0		&			
ANR	333003	PtrMemberAccess	ms -> flags		332928	0					
ANR	333004	Identifier	ms		332928	0					
ANR	333005	Identifier	flags		332928	1					
ANR	333006	Identifier	MAGIC_CHECK		332928	1					
ANR	333007	ExpressionStatement	"file_magwarn ( ms , ""syntax error: `elif'"" )"	1466:4:33798:33838	332928	1	True				
ANR	333008	CallExpression	"file_magwarn ( ms , ""syntax error: `elif'"" )"		332928	0					
ANR	333009	Callee	file_magwarn		332928	0					
ANR	333010	Identifier	file_magwarn		332928	0					
ANR	333011	ArgumentList	ms		332928	1					
ANR	333012	Argument	ms		332928	0					
ANR	333013	Identifier	ms		332928	0					
ANR	333014	Argument	"""syntax error: `elif'"""		332928	1					
ANR	333015	PrimaryExpression	"""syntax error: `elif'"""		332928	0					
ANR	333016	ReturnStatement	return - 1 ;	1467:3:33843:33852	332928	1	True				
ANR	333017	UnaryOperationExpression	- 1		332928	0					
ANR	333018	UnaryOperator	-		332928	0					
ANR	333019	PrimaryExpression	1		332928	1					
ANR	333020	ExpressionStatement	last_cond = COND_ELIF	1469:2:33860:33881	332928	6	True				
ANR	333021	AssignmentExpression	last_cond = COND_ELIF		332928	0		=			
ANR	333022	Identifier	last_cond		332928	0					
ANR	333023	Identifier	COND_ELIF		332928	1					
ANR	333024	BreakStatement	break ;	1470:2:33885:33890	332928	7	True				
ANR	333025	Label	case COND_ELSE :	1472:1:33894:33908	332928	8	True				
ANR	333026	Identifier	COND_ELSE		332928	0					
ANR	333027	IfStatement	if ( last_cond != COND_IF && last_cond != COND_ELIF )		332928	9					
ANR	333028	Condition	last_cond != COND_IF && last_cond != COND_ELIF	1473:6:33916:33961	332928	0	True				
ANR	333029	AndExpression	last_cond != COND_IF && last_cond != COND_ELIF		332928	0		&&			
ANR	333030	EqualityExpression	last_cond != COND_IF		332928	0		!=			
ANR	333031	Identifier	last_cond		332928	0					
ANR	333032	Identifier	COND_IF		332928	1					
ANR	333033	EqualityExpression	last_cond != COND_ELIF		332928	1		!=			
ANR	333034	Identifier	last_cond		332928	0					
ANR	333035	Identifier	COND_ELIF		332928	1					
ANR	333036	CompoundStatement		25:54:555:555	332928	1					
ANR	333037	IfStatement	if ( ms -> flags & MAGIC_CHECK )		332928	0					
ANR	333038	Condition	ms -> flags & MAGIC_CHECK	1474:7:33973:33995	332928	0	True				
ANR	333039	BitAndExpression	ms -> flags & MAGIC_CHECK		332928	0		&			
ANR	333040	PtrMemberAccess	ms -> flags		332928	0					
ANR	333041	Identifier	ms		332928	0					
ANR	333042	Identifier	flags		332928	1					
ANR	333043	Identifier	MAGIC_CHECK		332928	1					
ANR	333044	ExpressionStatement	"file_magwarn ( ms , ""syntax error: `else'"" )"	1475:4:34002:34042	332928	1	True				
ANR	333045	CallExpression	"file_magwarn ( ms , ""syntax error: `else'"" )"		332928	0					
ANR	333046	Callee	file_magwarn		332928	0					
ANR	333047	Identifier	file_magwarn		332928	0					
ANR	333048	ArgumentList	ms		332928	1					
ANR	333049	Argument	ms		332928	0					
ANR	333050	Identifier	ms		332928	0					
ANR	333051	Argument	"""syntax error: `else'"""		332928	1					
ANR	333052	PrimaryExpression	"""syntax error: `else'"""		332928	0					
ANR	333053	ReturnStatement	return - 1 ;	1476:3:34047:34056	332928	1	True				
ANR	333054	UnaryOperationExpression	- 1		332928	0					
ANR	333055	UnaryOperator	-		332928	0					
ANR	333056	PrimaryExpression	1		332928	1					
ANR	333057	ExpressionStatement	last_cond = COND_NONE	1478:2:34064:34085	332928	10	True				
ANR	333058	AssignmentExpression	last_cond = COND_NONE		332928	0		=			
ANR	333059	Identifier	last_cond		332928	0					
ANR	333060	Identifier	COND_NONE		332928	1					
ANR	333061	BreakStatement	break ;	1479:2:34089:34094	332928	11	True				
ANR	333062	Label	case COND_NONE :	1481:1:34098:34112	332928	12	True				
ANR	333063	Identifier	COND_NONE		332928	0					
ANR	333064	ExpressionStatement	last_cond = COND_NONE	1482:2:34116:34137	332928	13	True				
ANR	333065	AssignmentExpression	last_cond = COND_NONE		332928	0		=			
ANR	333066	Identifier	last_cond		332928	0					
ANR	333067	Identifier	COND_NONE		332928	1					
ANR	333068	BreakStatement	break ;	1483:2:34141:34146	332928	14	True				
ANR	333069	ExpressionStatement	ms -> c . li [ cont_level ] . last_cond = last_cond	1486:1:34153:34195	332928	3	True				
ANR	333070	AssignmentExpression	ms -> c . li [ cont_level ] . last_cond = last_cond		332928	0		=			
ANR	333071	MemberAccess	ms -> c . li [ cont_level ] . last_cond		332928	0					
ANR	333072	ArrayIndexing	ms -> c . li [ cont_level ]		332928	0					
ANR	333073	MemberAccess	ms -> c . li		332928	0					
ANR	333074	PtrMemberAccess	ms -> c		332928	0					
ANR	333075	Identifier	ms		332928	0					
ANR	333076	Identifier	c		332928	1					
ANR	333077	Identifier	li		332928	1					
ANR	333078	Identifier	cont_level		332928	1					
ANR	333079	Identifier	last_cond		332928	1					
ANR	333080	Identifier	last_cond		332928	1					
ANR	333081	ReturnStatement	return 0 ;	1487:1:34198:34206	332928	4	True				
ANR	333082	PrimaryExpression	0		332928	0					
ANR	333083	ReturnType	int		332928	1					
ANR	333084	Identifier	check_cond		332928	2					
ANR	333085	ParameterList	"struct magic_set * ms , int cond , uint32_t cont_level"		332928	3					
ANR	333086	Parameter	struct magic_set * ms	1448:11:33355:33374	332928	0	True				
ANR	333087	ParameterType	struct magic_set *		332928	0					
ANR	333088	Identifier	ms		332928	1					
ANR	333089	Parameter	int cond	1448:33:33377:33384	332928	1	True				
ANR	333090	ParameterType	int		332928	0					
ANR	333091	Identifier	cond		332928	1					
ANR	333092	Parameter	uint32_t cont_level	1448:43:33387:33405	332928	2	True				
ANR	333093	ParameterType	uint32_t		332928	0					
ANR	333094	Identifier	cont_level		332928	1					
ANR	333095	CFGEntryNode	ENTRY		332928		True				
ANR	333096	CFGExitNode	EXIT		332928		True				
ANR	333097	Symbol	COND_NONE		332928						
ANR	333098	Symbol	COND_IF		332928						
ANR	333099	Symbol	* ms -> c		332928						
ANR	333100	Symbol	ms		332928						
ANR	333101	Symbol	* ms -> c . li		332928						
ANR	333102	Symbol	cond		332928						
ANR	333103	Symbol	ms -> c . li		332928						
ANR	333104	Symbol	* cont_level		332928						
ANR	333105	Symbol	ms -> c . li [ cont_level ] . last_cond		332928						
ANR	333106	Symbol	* ms		332928						
ANR	333107	Symbol	* * ms		332928						
ANR	333108	Symbol	COND_ELIF		332928						
ANR	333109	Symbol	cont_level		332928						
ANR	333110	Symbol	last_cond		332928						
ANR	333111	Symbol	ms -> c		332928						
ANR	333112	Symbol	MAGIC_CHECK		332928						
ANR	333113	Symbol	ms -> flags		332928						
ANR	333114	Function	parse	1494:8:34327:45198							
ANR	333115	FunctionDef	"parse (struct magic_set * ms , struct magic_entry * me , const char * line , size_t lineno , int action)"		333114	0					
ANR	333116	CompoundStatement		1497:0:34432:45198	333114	0					
ANR	333117	Statement	static	1499:1:34462:34467	333114	0	True				
ANR	333118	IdentifierDeclStatement	uint32_t last_cont_level = 0 ;	1499:8:34469:34497	333114	1	True				
ANR	333119	IdentifierDecl	last_cont_level = 0		333114	0					
ANR	333120	IdentifierDeclType	uint32_t		333114	0					
ANR	333121	Identifier	last_cont_level		333114	1					
ANR	333122	AssignmentExpression	last_cont_level = 0		333114	2		=			
ANR	333123	Identifier	last_cont_level		333114	0					
ANR	333124	PrimaryExpression	0		333114	1					
ANR	333125	IdentifierDeclStatement	size_t i ;	1501:1:34507:34515	333114	2	True				
ANR	333126	IdentifierDecl	i		333114	0					
ANR	333127	IdentifierDeclType	size_t		333114	0					
ANR	333128	Identifier	i		333114	1					
ANR	333129	IdentifierDeclStatement	struct magic * m ;	1502:1:34518:34533	333114	3	True				
ANR	333130	IdentifierDecl	* m		333114	0					
ANR	333131	IdentifierDeclType	struct magic *		333114	0					
ANR	333132	Identifier	m		333114	1					
ANR	333133	IdentifierDeclStatement	const char * l = line ;	1503:1:34536:34556	333114	4	True				
ANR	333134	IdentifierDecl	* l = line		333114	0					
ANR	333135	IdentifierDeclType	const char *		333114	0					
ANR	333136	Identifier	l		333114	1					
ANR	333137	AssignmentExpression	* l = line		333114	2		=			
ANR	333138	Identifier	line		333114	0					
ANR	333139	Identifier	line		333114	1					
ANR	333140	IdentifierDeclStatement	char * t ;	1504:1:34559:34566	333114	5	True				
ANR	333141	IdentifierDecl	* t		333114	0					
ANR	333142	IdentifierDeclType	char *		333114	0					
ANR	333143	Identifier	t		333114	1					
ANR	333144	IdentifierDeclStatement	int op ;	1505:1:34569:34575	333114	6	True				
ANR	333145	IdentifierDecl	op		333114	0					
ANR	333146	IdentifierDeclType	int		333114	0					
ANR	333147	Identifier	op		333114	1					
ANR	333148	IdentifierDeclStatement	uint32_t cont_level ;	1506:1:34578:34597	333114	7	True				
ANR	333149	IdentifierDecl	cont_level		333114	0					
ANR	333150	IdentifierDeclType	uint32_t		333114	0					
ANR	333151	Identifier	cont_level		333114	1					
ANR	333152	IdentifierDeclStatement	int32_t diff ;	1507:1:34600:34612	333114	8	True				
ANR	333153	IdentifierDecl	diff		333114	0					
ANR	333154	IdentifierDeclType	int32_t		333114	0					
ANR	333155	Identifier	diff		333114	1					
ANR	333156	ExpressionStatement	cont_level = 0	1509:1:34616:34630	333114	9	True				
ANR	333157	AssignmentExpression	cont_level = 0		333114	0		=			
ANR	333158	Identifier	cont_level		333114	0					
ANR	333159	PrimaryExpression	0		333114	1					
ANR	333160	WhileStatement	while ( * l == '>' )		333114	10					
ANR	333161	Condition	* l == '>'	1514:8:34672:34680	333114	0	True				
ANR	333162	EqualityExpression	* l == '>'		333114	0		==			
ANR	333163	UnaryOperationExpression	* l		333114	0					
ANR	333164	UnaryOperator	*		333114	0					
ANR	333165	Identifier	l		333114	1					
ANR	333166	PrimaryExpression	'>'		333114	1					
ANR	333167	CompoundStatement		18:19:250:250	333114	1					
ANR	333168	ExpressionStatement	++ l	1515:2:34687:34690	333114	0	True				
ANR	333169	UnaryExpression	++ l		333114	0					
ANR	333170	IncDec	++		333114	0					
ANR	333171	Identifier	l		333114	1					
ANR	333172	ExpressionStatement	cont_level ++	1516:2:34711:34723	333114	1	True				
ANR	333173	PostIncDecOperationExpression	cont_level ++		333114	0					
ANR	333174	Identifier	cont_level		333114	0					
ANR	333175	IncDec	++		333114	1					
ANR	333176	IfStatement	if ( cont_level == 0 || cont_level > last_cont_level )		333114	11					
ANR	333177	Condition	cont_level == 0 || cont_level > last_cont_level	1519:5:34761:34807	333114	0	True				
ANR	333178	OrExpression	cont_level == 0 || cont_level > last_cont_level		333114	0		||			
ANR	333179	EqualityExpression	cont_level == 0		333114	0		==			
ANR	333180	Identifier	cont_level		333114	0					
ANR	333181	PrimaryExpression	0		333114	1					
ANR	333182	RelationalExpression	cont_level > last_cont_level		333114	1		>			
ANR	333183	Identifier	cont_level		333114	0					
ANR	333184	Identifier	last_cont_level		333114	1					
ANR	333185	IfStatement	"if ( file_check_mem ( ms , cont_level ) == - 1 )"		333114	1					
ANR	333186	Condition	"file_check_mem ( ms , cont_level ) == - 1"	1520:6:34816:34851	333114	0	True				
ANR	333187	EqualityExpression	"file_check_mem ( ms , cont_level ) == - 1"		333114	0		==			
ANR	333188	CallExpression	"file_check_mem ( ms , cont_level )"		333114	0					
ANR	333189	Callee	file_check_mem		333114	0					
ANR	333190	Identifier	file_check_mem		333114	0					
ANR	333191	ArgumentList	ms		333114	1					
ANR	333192	Argument	ms		333114	0					
ANR	333193	Identifier	ms		333114	0					
ANR	333194	Argument	cont_level		333114	1					
ANR	333195	Identifier	cont_level		333114	0					
ANR	333196	UnaryOperationExpression	- 1		333114	1					
ANR	333197	UnaryOperator	-		333114	0					
ANR	333198	PrimaryExpression	1		333114	1					
ANR	333199	ReturnStatement	return - 1 ;	1521:3:34857:34866	333114	1	True				
ANR	333200	UnaryOperationExpression	- 1		333114	0					
ANR	333201	UnaryOperator	-		333114	0					
ANR	333202	PrimaryExpression	1		333114	1					
ANR	333203	ExpressionStatement	last_cont_level = cont_level	1522:1:34869:34897	333114	12	True				
ANR	333204	AssignmentExpression	last_cont_level = cont_level		333114	0		=			
ANR	333205	Identifier	last_cont_level		333114	0					
ANR	333206	Identifier	cont_level		333114	1					
ANR	333207	IfStatement	if ( cont_level != 0 )		333114	13					
ANR	333208	Condition	cont_level != 0	1524:5:34911:34925	333114	0	True				
ANR	333209	EqualityExpression	cont_level != 0		333114	0		!=			
ANR	333210	Identifier	cont_level		333114	0					
ANR	333211	PrimaryExpression	0		333114	1					
ANR	333212	CompoundStatement		28:22:495:495	333114	1					
ANR	333213	IfStatement	if ( me -> mp == NULL )		333114	0					
ANR	333214	Condition	me -> mp == NULL	1525:6:34936:34949	333114	0	True				
ANR	333215	EqualityExpression	me -> mp == NULL		333114	0		==			
ANR	333216	PtrMemberAccess	me -> mp		333114	0					
ANR	333217	Identifier	me		333114	0					
ANR	333218	Identifier	mp		333114	1					
ANR	333219	Identifier	NULL		333114	1					
ANR	333220	CompoundStatement		29:22:519:519	333114	1					
ANR	333221	ExpressionStatement	"file_magerror ( ms , ""No current entry for continuation"" )"	1526:3:34957:35011	333114	0	True				
ANR	333222	CallExpression	"file_magerror ( ms , ""No current entry for continuation"" )"		333114	0					
ANR	333223	Callee	file_magerror		333114	0					
ANR	333224	Identifier	file_magerror		333114	0					
ANR	333225	ArgumentList	ms		333114	1					
ANR	333226	Argument	ms		333114	0					
ANR	333227	Identifier	ms		333114	0					
ANR	333228	Argument	"""No current entry for continuation"""		333114	1					
ANR	333229	PrimaryExpression	"""No current entry for continuation"""		333114	0					
ANR	333230	ReturnStatement	return - 1 ;	1527:3:35016:35025	333114	1	True				
ANR	333231	UnaryOperationExpression	- 1		333114	0					
ANR	333232	UnaryOperator	-		333114	0					
ANR	333233	PrimaryExpression	1		333114	1					
ANR	333234	IfStatement	if ( me -> cont_count == 0 )		333114	1					
ANR	333235	Condition	me -> cont_count == 0	1529:6:35037:35055	333114	0	True				
ANR	333236	EqualityExpression	me -> cont_count == 0		333114	0		==			
ANR	333237	PtrMemberAccess	me -> cont_count		333114	0					
ANR	333238	Identifier	me		333114	0					
ANR	333239	Identifier	cont_count		333114	1					
ANR	333240	PrimaryExpression	0		333114	1					
ANR	333241	CompoundStatement		33:27:625:625	333114	1					
ANR	333242	ExpressionStatement	"file_magerror ( ms , ""Continuations present with 0 count"" )"	1530:3:35063:35118	333114	0	True				
ANR	333243	CallExpression	"file_magerror ( ms , ""Continuations present with 0 count"" )"		333114	0					
ANR	333244	Callee	file_magerror		333114	0					
ANR	333245	Identifier	file_magerror		333114	0					
ANR	333246	ArgumentList	ms		333114	1					
ANR	333247	Argument	ms		333114	0					
ANR	333248	Identifier	ms		333114	0					
ANR	333249	Argument	"""Continuations present with 0 count"""		333114	1					
ANR	333250	PrimaryExpression	"""Continuations present with 0 count"""		333114	0					
ANR	333251	ReturnStatement	return - 1 ;	1531:3:35123:35132	333114	1	True				
ANR	333252	UnaryOperationExpression	- 1		333114	0					
ANR	333253	UnaryOperator	-		333114	0					
ANR	333254	PrimaryExpression	1		333114	1					
ANR	333255	ExpressionStatement	m = & me -> mp [ me -> cont_count - 1 ]	1533:2:35140:35171	333114	2	True				
ANR	333256	AssignmentExpression	m = & me -> mp [ me -> cont_count - 1 ]		333114	0		=			
ANR	333257	Identifier	m		333114	0					
ANR	333258	UnaryOperationExpression	& me -> mp [ me -> cont_count - 1 ]		333114	1					
ANR	333259	UnaryOperator	&		333114	0					
ANR	333260	ArrayIndexing	me -> mp [ me -> cont_count - 1 ]		333114	1					
ANR	333261	PtrMemberAccess	me -> mp		333114	0					
ANR	333262	Identifier	me		333114	0					
ANR	333263	Identifier	mp		333114	1					
ANR	333264	AdditiveExpression	me -> cont_count - 1		333114	1		-			
ANR	333265	PtrMemberAccess	me -> cont_count		333114	0					
ANR	333266	Identifier	me		333114	0					
ANR	333267	Identifier	cont_count		333114	1					
ANR	333268	PrimaryExpression	1		333114	1					
ANR	333269	ExpressionStatement	diff = ( int32_t ) cont_level - ( int32_t ) m -> cont_level	1534:2:35175:35226	333114	3	True				
ANR	333270	AssignmentExpression	diff = ( int32_t ) cont_level - ( int32_t ) m -> cont_level		333114	0		=			
ANR	333271	Identifier	diff		333114	0					
ANR	333272	AdditiveExpression	( int32_t ) cont_level - ( int32_t ) m -> cont_level		333114	1		-			
ANR	333273	CastExpression	( int32_t ) cont_level		333114	0					
ANR	333274	CastTarget	int32_t		333114	0					
ANR	333275	Identifier	cont_level		333114	1					
ANR	333276	CastExpression	( int32_t ) m -> cont_level		333114	1					
ANR	333277	CastTarget	int32_t		333114	0					
ANR	333278	PtrMemberAccess	m -> cont_level		333114	1					
ANR	333279	Identifier	m		333114	0					
ANR	333280	Identifier	cont_level		333114	1					
ANR	333281	IfStatement	if ( diff > 1 )		333114	4					
ANR	333282	Condition	diff > 1	1535:6:35234:35241	333114	0	True				
ANR	333283	RelationalExpression	diff > 1		333114	0		>			
ANR	333284	Identifier	diff		333114	0					
ANR	333285	PrimaryExpression	1		333114	1					
ANR	333286	Statement	file_magwarn	1536:3:35247:35258	333114	1	True				
ANR	333287	Statement	(	1536:15:35259:35259	333114	5	True				
ANR	333288	Statement	ms	1536:16:35260:35261	333114	6	True				
ANR	333289	Statement	","	1536:18:35262:35262	333114	7	True				
ANR	333290	Statement	"""New continuation level %u is more """	1536:20:35264:35299	333114	8	True				
ANR	333291	Statement	"""than one larger than current level %u"""	1537:7:35308:35346	333114	9	True				
ANR	333292	Statement	","	1537:46:35347:35347	333114	10	True				
ANR	333293	Statement	cont_level	1537:48:35349:35358	333114	11	True				
ANR	333294	Statement	","	1537:58:35359:35359	333114	12	True				
ANR	333295	Statement	m	1538:7:35368:35368	333114	13	True				
ANR	333296	Statement	->	1538:8:35369:35370	333114	14	True				
ANR	333297	Statement	cont_level	1538:10:35371:35380	333114	15	True				
ANR	333298	Statement	)	1538:20:35381:35381	333114	16	True				
ANR	333299	ExpressionStatement		1538:21:35382:35382	333114	17	True				
ANR	333300	IfStatement	if ( me -> cont_count == me -> max_count )		333114	18					
ANR	333301	Condition	me -> cont_count == me -> max_count	1539:6:35390:35420	333114	0	True				
ANR	333302	EqualityExpression	me -> cont_count == me -> max_count		333114	0		==			
ANR	333303	PtrMemberAccess	me -> cont_count		333114	0					
ANR	333304	Identifier	me		333114	0					
ANR	333305	Identifier	cont_count		333114	1					
ANR	333306	PtrMemberAccess	me -> max_count		333114	1					
ANR	333307	Identifier	me		333114	0					
ANR	333308	Identifier	max_count		333114	1					
ANR	333309	CompoundStatement		45:3:1016:1056	333114	1					
ANR	333310	IdentifierDeclStatement	struct magic * nm ;	1540:3:35428:35444	333114	0	True				
ANR	333311	IdentifierDecl	* nm		333114	0					
ANR	333312	IdentifierDeclType	struct magic *		333114	0					
ANR	333313	Identifier	nm		333114	1					
ANR	333314	IdentifierDeclStatement	size_t cnt = me -> max_count + ALLOC_CHUNK ;	1541:3:35449:35489	333114	1	True				
ANR	333315	IdentifierDecl	cnt = me -> max_count + ALLOC_CHUNK		333114	0					
ANR	333316	IdentifierDeclType	size_t		333114	0					
ANR	333317	Identifier	cnt		333114	1					
ANR	333318	AssignmentExpression	cnt = me -> max_count + ALLOC_CHUNK		333114	2		=			
ANR	333319	Identifier	cnt		333114	0					
ANR	333320	AdditiveExpression	me -> max_count + ALLOC_CHUNK		333114	1		+			
ANR	333321	PtrMemberAccess	me -> max_count		333114	0					
ANR	333322	Identifier	me		333114	0					
ANR	333323	Identifier	max_count		333114	1					
ANR	333324	Identifier	ALLOC_CHUNK		333114	1					
ANR	333325	Statement	if	1542:3:35494:35495	333114	2	True				
ANR	333326	Statement	(	1542:6:35497:35497	333114	3	True				
ANR	333327	Statement	(	1542:7:35498:35498	333114	4	True				
ANR	333328	Statement	nm	1542:8:35499:35500	333114	5	True				
ANR	333329	Statement	=	1542:11:35502:35502	333114	6	True				
ANR	333330	Statement	CAST	1542:13:35504:35507	333114	7	True				
ANR	333331	Statement	(	1542:17:35508:35508	333114	8	True				
ANR	333332	Statement	struct	1542:18:35509:35514	333114	9	True				
ANR	333333	Statement	magic	1542:25:35516:35520	333114	10	True				
ANR	333334	Statement	*	1542:31:35522:35522	333114	11	True				
ANR	333335	Statement	","	1542:32:35523:35523	333114	12	True				
ANR	333336	Statement	erealloc	1542:34:35525:35532	333114	13	True				
ANR	333337	Statement	(	1542:42:35533:35533	333114	14	True				
ANR	333338	Statement	me	1542:43:35534:35535	333114	15	True				
ANR	333339	Statement	->	1542:45:35536:35537	333114	16	True				
ANR	333340	Statement	mp	1542:47:35538:35539	333114	17	True				
ANR	333341	Statement	","	1542:49:35540:35540	333114	18	True				
ANR	333342	Statement	sizeof	1543:7:35549:35554	333114	19	True				
ANR	333343	Statement	(	1543:13:35555:35555	333114	20	True				
ANR	333344	Statement	*	1543:14:35556:35556	333114	21	True				
ANR	333345	Statement	nm	1543:15:35557:35558	333114	22	True				
ANR	333346	Statement	)	1543:17:35559:35559	333114	23	True				
ANR	333347	Statement	*	1543:19:35561:35561	333114	24	True				
ANR	333348	Statement	cnt	1543:21:35563:35565	333114	25	True				
ANR	333349	Statement	)	1543:24:35566:35566	333114	26	True				
ANR	333350	Statement	)	1543:25:35567:35567	333114	27	True				
ANR	333351	Statement	)	1543:26:35568:35568	333114	28	True				
ANR	333352	Statement	==	1543:28:35570:35571	333114	29	True				
ANR	333353	Statement	NULL	1543:31:35573:35576	333114	30	True				
ANR	333354	Statement	)	1543:35:35577:35577	333114	31	True				
ANR	333355	CompoundStatement		47:37:1146:1146	333114	32					
ANR	333356	ExpressionStatement	"file_oomem ( ms , sizeof ( * nm ) * cnt )"	1544:4:35585:35618	333114	0	True				
ANR	333357	CallExpression	"file_oomem ( ms , sizeof ( * nm ) * cnt )"		333114	0					
ANR	333358	Callee	file_oomem		333114	0					
ANR	333359	Identifier	file_oomem		333114	0					
ANR	333360	ArgumentList	ms		333114	1					
ANR	333361	Argument	ms		333114	0					
ANR	333362	Identifier	ms		333114	0					
ANR	333363	Argument	sizeof ( * nm ) * cnt		333114	1					
ANR	333364	MultiplicativeExpression	sizeof ( * nm ) * cnt		333114	0		*			
ANR	333365	SizeofExpression	sizeof ( * nm )		333114	0					
ANR	333366	Sizeof	sizeof		333114	0					
ANR	333367	UnaryOperationExpression	* nm		333114	1					
ANR	333368	UnaryOperator	*		333114	0					
ANR	333369	Identifier	nm		333114	1					
ANR	333370	Identifier	cnt		333114	1					
ANR	333371	ReturnStatement	return - 1 ;	1545:4:35624:35633	333114	1	True				
ANR	333372	UnaryOperationExpression	- 1		333114	0					
ANR	333373	UnaryOperator	-		333114	0					
ANR	333374	PrimaryExpression	1		333114	1					
ANR	333375	ExpressionStatement	me -> mp = m = nm	1547:3:35643:35658	333114	33	True				
ANR	333376	AssignmentExpression	me -> mp = m = nm		333114	0		=			
ANR	333377	PtrMemberAccess	me -> mp		333114	0					
ANR	333378	Identifier	me		333114	0					
ANR	333379	Identifier	mp		333114	1					
ANR	333380	AssignmentExpression	m = nm		333114	1		=			
ANR	333381	Identifier	m		333114	0					
ANR	333382	Identifier	nm		333114	1					
ANR	333383	ExpressionStatement	"me -> max_count = CAST ( uint32_t , cnt )"	1548:3:35663:35698	333114	34	True				
ANR	333384	AssignmentExpression	"me -> max_count = CAST ( uint32_t , cnt )"		333114	0		=			
ANR	333385	PtrMemberAccess	me -> max_count		333114	0					
ANR	333386	Identifier	me		333114	0					
ANR	333387	Identifier	max_count		333114	1					
ANR	333388	CallExpression	"CAST ( uint32_t , cnt )"		333114	1					
ANR	333389	Callee	CAST		333114	0					
ANR	333390	Identifier	CAST		333114	0					
ANR	333391	ArgumentList	uint32_t		333114	1					
ANR	333392	Argument	uint32_t		333114	0					
ANR	333393	Identifier	uint32_t		333114	0					
ANR	333394	Argument	cnt		333114	1					
ANR	333395	Identifier	cnt		333114	0					
ANR	333396	ExpressionStatement	m = & me -> mp [ me -> cont_count ++ ]	1550:2:35706:35735	333114	19	True				
ANR	333397	AssignmentExpression	m = & me -> mp [ me -> cont_count ++ ]		333114	0		=			
ANR	333398	Identifier	m		333114	0					
ANR	333399	UnaryOperationExpression	& me -> mp [ me -> cont_count ++ ]		333114	1					
ANR	333400	UnaryOperator	&		333114	0					
ANR	333401	ArrayIndexing	me -> mp [ me -> cont_count ++ ]		333114	1					
ANR	333402	PtrMemberAccess	me -> mp		333114	0					
ANR	333403	Identifier	me		333114	0					
ANR	333404	Identifier	mp		333114	1					
ANR	333405	PostIncDecOperationExpression	me -> cont_count ++		333114	1					
ANR	333406	PtrMemberAccess	me -> cont_count		333114	0					
ANR	333407	Identifier	me		333114	0					
ANR	333408	Identifier	cont_count		333114	1					
ANR	333409	IncDec	++		333114	1					
ANR	333410	ExpressionStatement	"( void ) memset ( m , 0 , sizeof ( * m ) )"	1551:2:35739:35769	333114	20	True				
ANR	333411	CastExpression	"( void ) memset ( m , 0 , sizeof ( * m ) )"		333114	0					
ANR	333412	CastTarget	void		333114	0					
ANR	333413	CallExpression	"memset ( m , 0 , sizeof ( * m ) )"		333114	1					
ANR	333414	Callee	memset		333114	0					
ANR	333415	Identifier	memset		333114	0					
ANR	333416	ArgumentList	m		333114	1					
ANR	333417	Argument	m		333114	0					
ANR	333418	Identifier	m		333114	0					
ANR	333419	Argument	0		333114	1					
ANR	333420	PrimaryExpression	0		333114	0					
ANR	333421	Argument	sizeof ( * m )		333114	2					
ANR	333422	SizeofExpression	sizeof ( * m )		333114	0					
ANR	333423	Sizeof	sizeof		333114	0					
ANR	333424	UnaryOperationExpression	* m		333114	1					
ANR	333425	UnaryOperator	*		333114	0					
ANR	333426	Identifier	m		333114	1					
ANR	333427	ExpressionStatement	m -> cont_level = cont_level	1552:2:35773:35799	333114	21	True				
ANR	333428	AssignmentExpression	m -> cont_level = cont_level		333114	0		=			
ANR	333429	PtrMemberAccess	m -> cont_level		333114	0					
ANR	333430	Identifier	m		333114	0					
ANR	333431	Identifier	cont_level		333114	1					
ANR	333432	Identifier	cont_level		333114	1					
ANR	333433	ElseStatement	else		333114	0					
ANR	333434	CompoundStatement		58:9:1387:1430	333114	0					
ANR	333435	Statement	static	1554:2:35813:35818	333114	0	True				
ANR	333436	IdentifierDeclStatement	const size_t len = sizeof ( * m ) * ALLOC_CHUNK ;	1554:9:35820:35863	333114	1	True				
ANR	333437	IdentifierDecl	len = sizeof ( * m ) * ALLOC_CHUNK		333114	0					
ANR	333438	IdentifierDeclType	const size_t		333114	0					
ANR	333439	Identifier	len		333114	1					
ANR	333440	AssignmentExpression	len = sizeof ( * m ) * ALLOC_CHUNK		333114	2		=			
ANR	333441	Identifier	len		333114	0					
ANR	333442	MultiplicativeExpression	sizeof ( * m ) * ALLOC_CHUNK		333114	1		*			
ANR	333443	SizeofExpression	sizeof ( * m )		333114	0					
ANR	333444	Sizeof	sizeof		333114	0					
ANR	333445	UnaryOperationExpression	* m		333114	1					
ANR	333446	UnaryOperator	*		333114	0					
ANR	333447	Identifier	m		333114	1					
ANR	333448	Identifier	ALLOC_CHUNK		333114	1					
ANR	333449	IfStatement	if ( me -> mp != NULL )		333114	2					
ANR	333450	Condition	me -> mp != NULL	1555:6:35871:35884	333114	0	True				
ANR	333451	EqualityExpression	me -> mp != NULL		333114	0		!=			
ANR	333452	PtrMemberAccess	me -> mp		333114	0					
ANR	333453	Identifier	me		333114	0					
ANR	333454	Identifier	mp		333114	1					
ANR	333455	Identifier	NULL		333114	1					
ANR	333456	ReturnStatement	return 1 ;	1556:3:35890:35898	333114	1	True				
ANR	333457	PrimaryExpression	1		333114	0					
ANR	333458	Statement	if	1557:2:35902:35903	333114	3	True				
ANR	333459	Statement	(	1557:5:35905:35905	333114	4	True				
ANR	333460	Statement	(	1557:6:35906:35906	333114	5	True				
ANR	333461	Statement	m	1557:7:35907:35907	333114	6	True				
ANR	333462	Statement	=	1557:9:35909:35909	333114	7	True				
ANR	333463	Statement	CAST	1557:11:35911:35914	333114	8	True				
ANR	333464	Statement	(	1557:15:35915:35915	333114	9	True				
ANR	333465	Statement	struct	1557:16:35916:35921	333114	10	True				
ANR	333466	Statement	magic	1557:23:35923:35927	333114	11	True				
ANR	333467	Statement	*	1557:29:35929:35929	333114	12	True				
ANR	333468	Statement	","	1557:30:35930:35930	333114	13	True				
ANR	333469	Statement	emalloc	1557:32:35932:35938	333114	14	True				
ANR	333470	Statement	(	1557:39:35939:35939	333114	15	True				
ANR	333471	Statement	len	1557:40:35940:35942	333114	16	True				
ANR	333472	Statement	)	1557:43:35943:35943	333114	17	True				
ANR	333473	Statement	)	1557:44:35944:35944	333114	18	True				
ANR	333474	Statement	)	1557:45:35945:35945	333114	19	True				
ANR	333475	Statement	==	1557:47:35947:35948	333114	20	True				
ANR	333476	Statement	NULL	1557:50:35950:35953	333114	21	True				
ANR	333477	Statement	)	1557:54:35954:35954	333114	22	True				
ANR	333478	CompoundStatement		61:56:1523:1523	333114	23					
ANR	333479	ExpressionStatement	"file_oomem ( ms , len )"	1558:3:35961:35980	333114	0	True				
ANR	333480	CallExpression	"file_oomem ( ms , len )"		333114	0					
ANR	333481	Callee	file_oomem		333114	0					
ANR	333482	Identifier	file_oomem		333114	0					
ANR	333483	ArgumentList	ms		333114	1					
ANR	333484	Argument	ms		333114	0					
ANR	333485	Identifier	ms		333114	0					
ANR	333486	Argument	len		333114	1					
ANR	333487	Identifier	len		333114	0					
ANR	333488	ReturnStatement	return - 1 ;	1559:3:35985:35994	333114	1	True				
ANR	333489	UnaryOperationExpression	- 1		333114	0					
ANR	333490	UnaryOperator	-		333114	0					
ANR	333491	PrimaryExpression	1		333114	1					
ANR	333492	ExpressionStatement	me -> mp = m	1561:2:36002:36012	333114	24	True				
ANR	333493	AssignmentExpression	me -> mp = m		333114	0		=			
ANR	333494	PtrMemberAccess	me -> mp		333114	0					
ANR	333495	Identifier	me		333114	0					
ANR	333496	Identifier	mp		333114	1					
ANR	333497	Identifier	m		333114	1					
ANR	333498	ExpressionStatement	me -> max_count = ALLOC_CHUNK	1562:2:36016:36043	333114	25	True				
ANR	333499	AssignmentExpression	me -> max_count = ALLOC_CHUNK		333114	0		=			
ANR	333500	PtrMemberAccess	me -> max_count		333114	0					
ANR	333501	Identifier	me		333114	0					
ANR	333502	Identifier	max_count		333114	1					
ANR	333503	Identifier	ALLOC_CHUNK		333114	1					
ANR	333504	ExpressionStatement	"( void ) memset ( m , 0 , sizeof ( * m ) )"	1563:2:36047:36077	333114	26	True				
ANR	333505	CastExpression	"( void ) memset ( m , 0 , sizeof ( * m ) )"		333114	0					
ANR	333506	CastTarget	void		333114	0					
ANR	333507	CallExpression	"memset ( m , 0 , sizeof ( * m ) )"		333114	1					
ANR	333508	Callee	memset		333114	0					
ANR	333509	Identifier	memset		333114	0					
ANR	333510	ArgumentList	m		333114	1					
ANR	333511	Argument	m		333114	0					
ANR	333512	Identifier	m		333114	0					
ANR	333513	Argument	0		333114	1					
ANR	333514	PrimaryExpression	0		333114	0					
ANR	333515	Argument	sizeof ( * m )		333114	2					
ANR	333516	SizeofExpression	sizeof ( * m )		333114	0					
ANR	333517	Sizeof	sizeof		333114	0					
ANR	333518	UnaryOperationExpression	* m		333114	1					
ANR	333519	UnaryOperator	*		333114	0					
ANR	333520	Identifier	m		333114	1					
ANR	333521	ExpressionStatement	m -> factor_op = FILE_FACTOR_OP_NONE	1564:2:36081:36115	333114	27	True				
ANR	333522	AssignmentExpression	m -> factor_op = FILE_FACTOR_OP_NONE		333114	0		=			
ANR	333523	PtrMemberAccess	m -> factor_op		333114	0					
ANR	333524	Identifier	m		333114	0					
ANR	333525	Identifier	factor_op		333114	1					
ANR	333526	Identifier	FILE_FACTOR_OP_NONE		333114	1					
ANR	333527	ExpressionStatement	m -> cont_level = 0	1565:2:36119:36136	333114	28	True				
ANR	333528	AssignmentExpression	m -> cont_level = 0		333114	0		=			
ANR	333529	PtrMemberAccess	m -> cont_level		333114	0					
ANR	333530	Identifier	m		333114	0					
ANR	333531	Identifier	cont_level		333114	1					
ANR	333532	PrimaryExpression	0		333114	1					
ANR	333533	ExpressionStatement	me -> cont_count = 1	1566:2:36140:36158	333114	29	True				
ANR	333534	AssignmentExpression	me -> cont_count = 1		333114	0		=			
ANR	333535	PtrMemberAccess	me -> cont_count		333114	0					
ANR	333536	Identifier	me		333114	0					
ANR	333537	Identifier	cont_count		333114	1					
ANR	333538	PrimaryExpression	1		333114	1					
ANR	333539	ExpressionStatement	"m -> lineno = CAST ( uint32_t , lineno )"	1568:1:36164:36198	333114	14	True				
ANR	333540	AssignmentExpression	"m -> lineno = CAST ( uint32_t , lineno )"		333114	0		=			
ANR	333541	PtrMemberAccess	m -> lineno		333114	0					
ANR	333542	Identifier	m		333114	0					
ANR	333543	Identifier	lineno		333114	1					
ANR	333544	CallExpression	"CAST ( uint32_t , lineno )"		333114	1					
ANR	333545	Callee	CAST		333114	0					
ANR	333546	Identifier	CAST		333114	0					
ANR	333547	ArgumentList	uint32_t		333114	1					
ANR	333548	Argument	uint32_t		333114	0					
ANR	333549	Identifier	uint32_t		333114	0					
ANR	333550	Argument	lineno		333114	1					
ANR	333551	Identifier	lineno		333114	0					
ANR	333552	IfStatement	if ( * l == '&' )		333114	15					
ANR	333553	Condition	* l == '&'	1570:5:36206:36214	333114	0	True				
ANR	333554	EqualityExpression	* l == '&'		333114	0		==			
ANR	333555	UnaryOperationExpression	* l		333114	0					
ANR	333556	UnaryOperator	*		333114	0					
ANR	333557	Identifier	l		333114	1					
ANR	333558	PrimaryExpression	'&'		333114	1					
ANR	333559	CompoundStatement		74:16:1784:1784	333114	1					
ANR	333560	ExpressionStatement	++ l	1571:16:36276:36279	333114	0	True				
ANR	333561	UnaryExpression	++ l		333114	0					
ANR	333562	IncDec	++		333114	0					
ANR	333563	Identifier	l		333114	1					
ANR	333564	ExpressionStatement	m -> flag |= OFFADD	1572:16:36324:36341	333114	1	True				
ANR	333565	AssignmentExpression	m -> flag |= OFFADD		333114	0		|=			
ANR	333566	PtrMemberAccess	m -> flag		333114	0					
ANR	333567	Identifier	m		333114	0					
ANR	333568	Identifier	flag		333114	1					
ANR	333569	Identifier	OFFADD		333114	1					
ANR	333570	IfStatement	if ( * l == '(' )		333114	16					
ANR	333571	Condition	* l == '('	1574:5:36358:36366	333114	0	True				
ANR	333572	EqualityExpression	* l == '('		333114	0		==			
ANR	333573	UnaryOperationExpression	* l		333114	0					
ANR	333574	UnaryOperator	*		333114	0					
ANR	333575	Identifier	l		333114	1					
ANR	333576	PrimaryExpression	'('		333114	1					
ANR	333577	CompoundStatement		78:16:1936:1936	333114	1					
ANR	333578	ExpressionStatement	++ l	1575:2:36373:36376	333114	0	True				
ANR	333579	UnaryExpression	++ l		333114	0					
ANR	333580	IncDec	++		333114	0					
ANR	333581	Identifier	l		333114	1					
ANR	333582	ExpressionStatement	m -> flag |= INDIR	1576:2:36397:36413	333114	1	True				
ANR	333583	AssignmentExpression	m -> flag |= INDIR		333114	0		|=			
ANR	333584	PtrMemberAccess	m -> flag		333114	0					
ANR	333585	Identifier	m		333114	0					
ANR	333586	Identifier	flag		333114	1					
ANR	333587	Identifier	INDIR		333114	1					
ANR	333588	IfStatement	if ( m -> flag & OFFADD )		333114	2					
ANR	333589	Condition	m -> flag & OFFADD	1577:6:36421:36436	333114	0	True				
ANR	333590	BitAndExpression	m -> flag & OFFADD		333114	0		&			
ANR	333591	PtrMemberAccess	m -> flag		333114	0					
ANR	333592	Identifier	m		333114	0					
ANR	333593	Identifier	flag		333114	1					
ANR	333594	Identifier	OFFADD		333114	1					
ANR	333595	ExpressionStatement	m -> flag = ( m -> flag & ~OFFADD ) | INDIROFFADD	1578:3:36442:36485	333114	1	True				
ANR	333596	AssignmentExpression	m -> flag = ( m -> flag & ~OFFADD ) | INDIROFFADD		333114	0		=			
ANR	333597	PtrMemberAccess	m -> flag		333114	0					
ANR	333598	Identifier	m		333114	0					
ANR	333599	Identifier	flag		333114	1					
ANR	333600	InclusiveOrExpression	( m -> flag & ~OFFADD ) | INDIROFFADD		333114	1		|			
ANR	333601	BitAndExpression	m -> flag & ~OFFADD		333114	0		&			
ANR	333602	PtrMemberAccess	m -> flag		333114	0					
ANR	333603	Identifier	m		333114	0					
ANR	333604	Identifier	flag		333114	1					
ANR	333605	Identifier	~OFFADD		333114	1					
ANR	333606	Identifier	INDIROFFADD		333114	1					
ANR	333607	IfStatement	if ( * l == '&' )		333114	3					
ANR	333608	Condition	* l == '&'	1580:6:36494:36502	333114	0	True				
ANR	333609	EqualityExpression	* l == '&'		333114	0		==			
ANR	333610	UnaryOperationExpression	* l		333114	0					
ANR	333611	UnaryOperator	*		333114	0					
ANR	333612	Identifier	l		333114	1					
ANR	333613	PrimaryExpression	'&'		333114	1					
ANR	333614	CompoundStatement		84:17:2072:2072	333114	1					
ANR	333615	ExpressionStatement	++ l	1581:3:36550:36553	333114	0	True				
ANR	333616	UnaryExpression	++ l		333114	0					
ANR	333617	IncDec	++		333114	0					
ANR	333618	Identifier	l		333114	1					
ANR	333619	ExpressionStatement	m -> flag |= OFFADD	1582:3:36585:36602	333114	1	True				
ANR	333620	AssignmentExpression	m -> flag |= OFFADD		333114	0		|=			
ANR	333621	PtrMemberAccess	m -> flag		333114	0					
ANR	333622	Identifier	m		333114	0					
ANR	333623	Identifier	flag		333114	1					
ANR	333624	Identifier	OFFADD		333114	1					
ANR	333625	IfStatement	if ( m -> cont_level == 0 && ( m -> flag & ( OFFADD | INDIROFFADD ) ) )		333114	17					
ANR	333626	Condition	m -> cont_level == 0 && ( m -> flag & ( OFFADD | INDIROFFADD ) )	1586:5:36666:36721	333114	0	True				
ANR	333627	AndExpression	m -> cont_level == 0 && ( m -> flag & ( OFFADD | INDIROFFADD ) )		333114	0		&&			
ANR	333628	EqualityExpression	m -> cont_level == 0		333114	0		==			
ANR	333629	PtrMemberAccess	m -> cont_level		333114	0					
ANR	333630	Identifier	m		333114	0					
ANR	333631	Identifier	cont_level		333114	1					
ANR	333632	PrimaryExpression	0		333114	1					
ANR	333633	BitAndExpression	m -> flag & ( OFFADD | INDIROFFADD )		333114	1		&			
ANR	333634	PtrMemberAccess	m -> flag		333114	0					
ANR	333635	Identifier	m		333114	0					
ANR	333636	Identifier	flag		333114	1					
ANR	333637	InclusiveOrExpression	OFFADD | INDIROFFADD		333114	1		|			
ANR	333638	Identifier	OFFADD		333114	0					
ANR	333639	Identifier	INDIROFFADD		333114	1					
ANR	333640	IfStatement	if ( ms -> flags & MAGIC_CHECK )		333114	1					
ANR	333641	Condition	ms -> flags & MAGIC_CHECK	1587:6:36730:36752	333114	0	True				
ANR	333642	BitAndExpression	ms -> flags & MAGIC_CHECK		333114	0		&			
ANR	333643	PtrMemberAccess	ms -> flags		333114	0					
ANR	333644	Identifier	ms		333114	0					
ANR	333645	Identifier	flags		333114	1					
ANR	333646	Identifier	MAGIC_CHECK		333114	1					
ANR	333647	ExpressionStatement	"file_magwarn ( ms , ""relative offset at level 0"" )"	1588:3:36758:36804	333114	1	True				
ANR	333648	CallExpression	"file_magwarn ( ms , ""relative offset at level 0"" )"		333114	0					
ANR	333649	Callee	file_magwarn		333114	0					
ANR	333650	Identifier	file_magwarn		333114	0					
ANR	333651	ArgumentList	ms		333114	1					
ANR	333652	Argument	ms		333114	0					
ANR	333653	Identifier	ms		333114	0					
ANR	333654	Argument	"""relative offset at level 0"""		333114	1					
ANR	333655	PrimaryExpression	"""relative offset at level 0"""		333114	0					
ANR	333656	ExpressionStatement	"m -> offset = ( uint32_t ) strtoul ( l , & t , 0 )"	1591:1:36845:36884	333114	18	True				
ANR	333657	AssignmentExpression	"m -> offset = ( uint32_t ) strtoul ( l , & t , 0 )"		333114	0		=			
ANR	333658	PtrMemberAccess	m -> offset		333114	0					
ANR	333659	Identifier	m		333114	0					
ANR	333660	Identifier	offset		333114	1					
ANR	333661	CastExpression	"( uint32_t ) strtoul ( l , & t , 0 )"		333114	1					
ANR	333662	CastTarget	uint32_t		333114	0					
ANR	333663	CallExpression	"strtoul ( l , & t , 0 )"		333114	1					
ANR	333664	Callee	strtoul		333114	0					
ANR	333665	Identifier	strtoul		333114	0					
ANR	333666	ArgumentList	l		333114	1					
ANR	333667	Argument	l		333114	0					
ANR	333668	Identifier	l		333114	0					
ANR	333669	Argument	& t		333114	1					
ANR	333670	UnaryOperationExpression	& t		333114	0					
ANR	333671	UnaryOperator	&		333114	0					
ANR	333672	Identifier	t		333114	1					
ANR	333673	Argument	0		333114	2					
ANR	333674	PrimaryExpression	0		333114	0					
ANR	333675	IfStatement	if ( l == t )		333114	19					
ANR	333676	Condition	l == t	1592:12:36898:36903	333114	0	True				
ANR	333677	EqualityExpression	l == t		333114	0		==			
ANR	333678	Identifier	l		333114	0					
ANR	333679	Identifier	t		333114	1					
ANR	333680	IfStatement	if ( ms -> flags & MAGIC_CHECK )		333114	1					
ANR	333681	Condition	ms -> flags & MAGIC_CHECK	1593:6:36912:36934	333114	0	True				
ANR	333682	BitAndExpression	ms -> flags & MAGIC_CHECK		333114	0		&			
ANR	333683	PtrMemberAccess	ms -> flags		333114	0					
ANR	333684	Identifier	ms		333114	0					
ANR	333685	Identifier	flags		333114	1					
ANR	333686	Identifier	MAGIC_CHECK		333114	1					
ANR	333687	ExpressionStatement	"file_magwarn ( ms , ""offset `%s' invalid"" , l )"	1594:3:36940:36982	333114	1	True				
ANR	333688	CallExpression	"file_magwarn ( ms , ""offset `%s' invalid"" , l )"		333114	0					
ANR	333689	Callee	file_magwarn		333114	0					
ANR	333690	Identifier	file_magwarn		333114	0					
ANR	333691	ArgumentList	ms		333114	1					
ANR	333692	Argument	ms		333114	0					
ANR	333693	Identifier	ms		333114	0					
ANR	333694	Argument	"""offset `%s' invalid"""		333114	1					
ANR	333695	PrimaryExpression	"""offset `%s' invalid"""		333114	0					
ANR	333696	Argument	l		333114	2					
ANR	333697	Identifier	l		333114	0					
ANR	333698	ExpressionStatement	l = t	1595:8:36992:36997	333114	20	True				
ANR	333699	AssignmentExpression	l = t		333114	0		=			
ANR	333700	Identifier	l		333114	0					
ANR	333701	Identifier	t		333114	1					
ANR	333702	IfStatement	if ( m -> flag & INDIR )		333114	21					
ANR	333703	Condition	m -> flag & INDIR	1597:5:37005:37019	333114	0	True				
ANR	333704	BitAndExpression	m -> flag & INDIR		333114	0		&			
ANR	333705	PtrMemberAccess	m -> flag		333114	0					
ANR	333706	Identifier	m		333114	0					
ANR	333707	Identifier	flag		333114	1					
ANR	333708	Identifier	INDIR		333114	1					
ANR	333709	CompoundStatement		101:22:2589:2589	333114	1					
ANR	333710	ExpressionStatement	m -> in_type = FILE_LONG	1598:2:37026:37048	333114	0	True				
ANR	333711	AssignmentExpression	m -> in_type = FILE_LONG		333114	0		=			
ANR	333712	PtrMemberAccess	m -> in_type		333114	0					
ANR	333713	Identifier	m		333114	0					
ANR	333714	Identifier	in_type		333114	1					
ANR	333715	Identifier	FILE_LONG		333114	1					
ANR	333716	ExpressionStatement	m -> in_offset = 0	1599:2:37052:37068	333114	1	True				
ANR	333717	AssignmentExpression	m -> in_offset = 0		333114	0		=			
ANR	333718	PtrMemberAccess	m -> in_offset		333114	0					
ANR	333719	Identifier	m		333114	0					
ANR	333720	Identifier	in_offset		333114	1					
ANR	333721	PrimaryExpression	0		333114	1					
ANR	333722	IfStatement	if ( * l == '.' )		333114	2					
ANR	333723	Condition	* l == '.'	1603:6:37114:37122	333114	0	True				
ANR	333724	EqualityExpression	* l == '.'		333114	0		==			
ANR	333725	UnaryOperationExpression	* l		333114	0					
ANR	333726	UnaryOperator	*		333114	0					
ANR	333727	Identifier	l		333114	1					
ANR	333728	PrimaryExpression	'.'		333114	1					
ANR	333729	CompoundStatement		107:17:2692:2692	333114	1					
ANR	333730	ExpressionStatement	l ++	1604:3:37130:37133	333114	0	True				
ANR	333731	PostIncDecOperationExpression	l ++		333114	0					
ANR	333732	Identifier	l		333114	0					
ANR	333733	IncDec	++		333114	1					
ANR	333734	SwitchStatement	switch ( * l )		333114	1					
ANR	333735	Condition	* l	1605:11:37146:37147	333114	0	True				
ANR	333736	UnaryOperationExpression	* l		333114	0					
ANR	333737	UnaryOperator	*		333114	0					
ANR	333738	Identifier	l		333114	1					
ANR	333739	CompoundStatement		109:15:2717:2717	333114	1					
ANR	333740	Label	case 'l' :	1606:3:37155:37163	333114	0	True				
ANR	333741	ExpressionStatement	m -> in_type = FILE_LELONG	1607:4:37169:37193	333114	1	True				
ANR	333742	AssignmentExpression	m -> in_type = FILE_LELONG		333114	0		=			
ANR	333743	PtrMemberAccess	m -> in_type		333114	0					
ANR	333744	Identifier	m		333114	0					
ANR	333745	Identifier	in_type		333114	1					
ANR	333746	Identifier	FILE_LELONG		333114	1					
ANR	333747	BreakStatement	break ;	1608:4:37199:37204	333114	2	True				
ANR	333748	Label	case 'L' :	1609:3:37209:37217	333114	3	True				
ANR	333749	ExpressionStatement	m -> in_type = FILE_BELONG	1610:4:37223:37247	333114	4	True				
ANR	333750	AssignmentExpression	m -> in_type = FILE_BELONG		333114	0		=			
ANR	333751	PtrMemberAccess	m -> in_type		333114	0					
ANR	333752	Identifier	m		333114	0					
ANR	333753	Identifier	in_type		333114	1					
ANR	333754	Identifier	FILE_BELONG		333114	1					
ANR	333755	BreakStatement	break ;	1611:4:37253:37258	333114	5	True				
ANR	333756	Label	case 'm' :	1612:3:37263:37271	333114	6	True				
ANR	333757	ExpressionStatement	m -> in_type = FILE_MELONG	1613:4:37277:37301	333114	7	True				
ANR	333758	AssignmentExpression	m -> in_type = FILE_MELONG		333114	0		=			
ANR	333759	PtrMemberAccess	m -> in_type		333114	0					
ANR	333760	Identifier	m		333114	0					
ANR	333761	Identifier	in_type		333114	1					
ANR	333762	Identifier	FILE_MELONG		333114	1					
ANR	333763	BreakStatement	break ;	1614:4:37307:37312	333114	8	True				
ANR	333764	Label	case 'h' :	1615:3:37317:37325	333114	9	True				
ANR	333765	Label	case 's' :	1616:3:37330:37338	333114	10	True				
ANR	333766	ExpressionStatement	m -> in_type = FILE_LESHORT	1617:4:37344:37369	333114	11	True				
ANR	333767	AssignmentExpression	m -> in_type = FILE_LESHORT		333114	0		=			
ANR	333768	PtrMemberAccess	m -> in_type		333114	0					
ANR	333769	Identifier	m		333114	0					
ANR	333770	Identifier	in_type		333114	1					
ANR	333771	Identifier	FILE_LESHORT		333114	1					
ANR	333772	BreakStatement	break ;	1618:4:37375:37380	333114	12	True				
ANR	333773	Label	case 'H' :	1619:3:37385:37393	333114	13	True				
ANR	333774	Label	case 'S' :	1620:3:37398:37406	333114	14	True				
ANR	333775	ExpressionStatement	m -> in_type = FILE_BESHORT	1621:4:37412:37437	333114	15	True				
ANR	333776	AssignmentExpression	m -> in_type = FILE_BESHORT		333114	0		=			
ANR	333777	PtrMemberAccess	m -> in_type		333114	0					
ANR	333778	Identifier	m		333114	0					
ANR	333779	Identifier	in_type		333114	1					
ANR	333780	Identifier	FILE_BESHORT		333114	1					
ANR	333781	BreakStatement	break ;	1622:4:37443:37448	333114	16	True				
ANR	333782	Label	case 'c' :	1623:3:37453:37461	333114	17	True				
ANR	333783	Label	case 'b' :	1624:3:37466:37474	333114	18	True				
ANR	333784	Label	case 'C' :	1625:3:37479:37487	333114	19	True				
ANR	333785	Label	case 'B' :	1626:3:37492:37500	333114	20	True				
ANR	333786	ExpressionStatement	m -> in_type = FILE_BYTE	1627:4:37506:37528	333114	21	True				
ANR	333787	AssignmentExpression	m -> in_type = FILE_BYTE		333114	0		=			
ANR	333788	PtrMemberAccess	m -> in_type		333114	0					
ANR	333789	Identifier	m		333114	0					
ANR	333790	Identifier	in_type		333114	1					
ANR	333791	Identifier	FILE_BYTE		333114	1					
ANR	333792	BreakStatement	break ;	1628:4:37534:37539	333114	22	True				
ANR	333793	Label	case 'e' :	1629:3:37544:37552	333114	23	True				
ANR	333794	Label	case 'f' :	1630:3:37557:37565	333114	24	True				
ANR	333795	Label	case 'g' :	1631:3:37570:37578	333114	25	True				
ANR	333796	ExpressionStatement	m -> in_type = FILE_LEDOUBLE	1632:4:37584:37610	333114	26	True				
ANR	333797	AssignmentExpression	m -> in_type = FILE_LEDOUBLE		333114	0		=			
ANR	333798	PtrMemberAccess	m -> in_type		333114	0					
ANR	333799	Identifier	m		333114	0					
ANR	333800	Identifier	in_type		333114	1					
ANR	333801	Identifier	FILE_LEDOUBLE		333114	1					
ANR	333802	BreakStatement	break ;	1633:4:37616:37621	333114	27	True				
ANR	333803	Label	case 'E' :	1634:3:37626:37634	333114	28	True				
ANR	333804	Label	case 'F' :	1635:3:37639:37647	333114	29	True				
ANR	333805	Label	case 'G' :	1636:3:37652:37660	333114	30	True				
ANR	333806	ExpressionStatement	m -> in_type = FILE_BEDOUBLE	1637:4:37666:37692	333114	31	True				
ANR	333807	AssignmentExpression	m -> in_type = FILE_BEDOUBLE		333114	0		=			
ANR	333808	PtrMemberAccess	m -> in_type		333114	0					
ANR	333809	Identifier	m		333114	0					
ANR	333810	Identifier	in_type		333114	1					
ANR	333811	Identifier	FILE_BEDOUBLE		333114	1					
ANR	333812	BreakStatement	break ;	1638:4:37698:37703	333114	32	True				
ANR	333813	Label	case 'i' :	1639:3:37708:37716	333114	33	True				
ANR	333814	ExpressionStatement	m -> in_type = FILE_LEID3	1640:4:37722:37745	333114	34	True				
ANR	333815	AssignmentExpression	m -> in_type = FILE_LEID3		333114	0		=			
ANR	333816	PtrMemberAccess	m -> in_type		333114	0					
ANR	333817	Identifier	m		333114	0					
ANR	333818	Identifier	in_type		333114	1					
ANR	333819	Identifier	FILE_LEID3		333114	1					
ANR	333820	BreakStatement	break ;	1641:4:37751:37756	333114	35	True				
ANR	333821	Label	case 'I' :	1642:3:37761:37769	333114	36	True				
ANR	333822	ExpressionStatement	m -> in_type = FILE_BEID3	1643:4:37775:37798	333114	37	True				
ANR	333823	AssignmentExpression	m -> in_type = FILE_BEID3		333114	0		=			
ANR	333824	PtrMemberAccess	m -> in_type		333114	0					
ANR	333825	Identifier	m		333114	0					
ANR	333826	Identifier	in_type		333114	1					
ANR	333827	Identifier	FILE_BEID3		333114	1					
ANR	333828	BreakStatement	break ;	1644:4:37804:37809	333114	38	True				
ANR	333829	Label	default :	1645:3:37814:37821	333114	39	True				
ANR	333830	Identifier	default		333114	0					
ANR	333831	IfStatement	if ( ms -> flags & MAGIC_CHECK )		333114	40					
ANR	333832	Condition	ms -> flags & MAGIC_CHECK	1646:8:37831:37853	333114	0	True				
ANR	333833	BitAndExpression	ms -> flags & MAGIC_CHECK		333114	0		&			
ANR	333834	PtrMemberAccess	ms -> flags		333114	0					
ANR	333835	Identifier	ms		333114	0					
ANR	333836	Identifier	flags		333114	1					
ANR	333837	Identifier	MAGIC_CHECK		333114	1					
ANR	333838	ExpressionStatement	"file_magwarn ( ms , ""indirect offset type `%c' invalid"" , * l )"	1647:5:37861:37936	333114	1	True				
ANR	333839	CallExpression	"file_magwarn ( ms , ""indirect offset type `%c' invalid"" , * l )"		333114	0					
ANR	333840	Callee	file_magwarn		333114	0					
ANR	333841	Identifier	file_magwarn		333114	0					
ANR	333842	ArgumentList	ms		333114	1					
ANR	333843	Argument	ms		333114	0					
ANR	333844	Identifier	ms		333114	0					
ANR	333845	Argument	"""indirect offset type `%c' invalid"""		333114	1					
ANR	333846	PrimaryExpression	"""indirect offset type `%c' invalid"""		333114	0					
ANR	333847	Argument	* l		333114	2					
ANR	333848	UnaryOperationExpression	* l		333114	0					
ANR	333849	UnaryOperator	*		333114	0					
ANR	333850	Identifier	l		333114	1					
ANR	333851	BreakStatement	break ;	1650:4:37942:37947	333114	41	True				
ANR	333852	ExpressionStatement	l ++	1652:3:37957:37960	333114	2	True				
ANR	333853	PostIncDecOperationExpression	l ++		333114	0					
ANR	333854	Identifier	l		333114	0					
ANR	333855	IncDec	++		333114	1					
ANR	333856	ExpressionStatement	m -> in_op = 0	1655:2:37969:37981	333114	3	True				
ANR	333857	AssignmentExpression	m -> in_op = 0		333114	0		=			
ANR	333858	PtrMemberAccess	m -> in_op		333114	0					
ANR	333859	Identifier	m		333114	0					
ANR	333860	Identifier	in_op		333114	1					
ANR	333861	PrimaryExpression	0		333114	1					
ANR	333862	IfStatement	if ( * l == '~' )		333114	4					
ANR	333863	Condition	* l == '~'	1656:6:37989:37997	333114	0	True				
ANR	333864	EqualityExpression	* l == '~'		333114	0		==			
ANR	333865	UnaryOperationExpression	* l		333114	0					
ANR	333866	UnaryOperator	*		333114	0					
ANR	333867	Identifier	l		333114	1					
ANR	333868	PrimaryExpression	'~'		333114	1					
ANR	333869	CompoundStatement		160:17:3567:3567	333114	1					
ANR	333870	ExpressionStatement	m -> in_op |= FILE_OPINVERSE	1657:3:38005:38031	333114	0	True				
ANR	333871	AssignmentExpression	m -> in_op |= FILE_OPINVERSE		333114	0		|=			
ANR	333872	PtrMemberAccess	m -> in_op		333114	0					
ANR	333873	Identifier	m		333114	0					
ANR	333874	Identifier	in_op		333114	1					
ANR	333875	Identifier	FILE_OPINVERSE		333114	1					
ANR	333876	ExpressionStatement	l ++	1658:3:38036:38039	333114	1	True				
ANR	333877	PostIncDecOperationExpression	l ++		333114	0					
ANR	333878	Identifier	l		333114	0					
ANR	333879	IncDec	++		333114	1					
ANR	333880	IfStatement	if ( ( op = get_op ( * l ) ) != - 1 )		333114	5					
ANR	333881	Condition	( op = get_op ( * l ) ) != - 1	1660:6:38051:38073	333114	0	True				
ANR	333882	EqualityExpression	( op = get_op ( * l ) ) != - 1		333114	0		!=			
ANR	333883	AssignmentExpression	op = get_op ( * l )		333114	0		=			
ANR	333884	Identifier	op		333114	0					
ANR	333885	CallExpression	get_op ( * l )		333114	1					
ANR	333886	Callee	get_op		333114	0					
ANR	333887	Identifier	get_op		333114	0					
ANR	333888	ArgumentList	* l		333114	1					
ANR	333889	Argument	* l		333114	0					
ANR	333890	UnaryOperationExpression	* l		333114	0					
ANR	333891	UnaryOperator	*		333114	0					
ANR	333892	Identifier	l		333114	1					
ANR	333893	UnaryOperationExpression	- 1		333114	1					
ANR	333894	UnaryOperator	-		333114	0					
ANR	333895	PrimaryExpression	1		333114	1					
ANR	333896	CompoundStatement		164:31:3643:3643	333114	1					
ANR	333897	ExpressionStatement	m -> in_op |= op	1661:3:38081:38095	333114	0	True				
ANR	333898	AssignmentExpression	m -> in_op |= op		333114	0		|=			
ANR	333899	PtrMemberAccess	m -> in_op		333114	0					
ANR	333900	Identifier	m		333114	0					
ANR	333901	Identifier	in_op		333114	1					
ANR	333902	Identifier	op		333114	1					
ANR	333903	ExpressionStatement	l ++	1662:3:38100:38103	333114	1	True				
ANR	333904	PostIncDecOperationExpression	l ++		333114	0					
ANR	333905	Identifier	l		333114	0					
ANR	333906	IncDec	++		333114	1					
ANR	333907	IfStatement	if ( * l == '(' )		333114	6					
ANR	333908	Condition	* l == '('	1664:6:38115:38123	333114	0	True				
ANR	333909	EqualityExpression	* l == '('		333114	0		==			
ANR	333910	UnaryOperationExpression	* l		333114	0					
ANR	333911	UnaryOperator	*		333114	0					
ANR	333912	Identifier	l		333114	1					
ANR	333913	PrimaryExpression	'('		333114	1					
ANR	333914	CompoundStatement		168:17:3693:3693	333114	1					
ANR	333915	ExpressionStatement	m -> in_op |= FILE_OPINDIRECT	1665:3:38131:38158	333114	0	True				
ANR	333916	AssignmentExpression	m -> in_op |= FILE_OPINDIRECT		333114	0		|=			
ANR	333917	PtrMemberAccess	m -> in_op		333114	0					
ANR	333918	Identifier	m		333114	0					
ANR	333919	Identifier	in_op		333114	1					
ANR	333920	Identifier	FILE_OPINDIRECT		333114	1					
ANR	333921	ExpressionStatement	l ++	1666:3:38163:38166	333114	1	True				
ANR	333922	PostIncDecOperationExpression	l ++		333114	0					
ANR	333923	Identifier	l		333114	0					
ANR	333924	IncDec	++		333114	1					
ANR	333925	IfStatement	if ( isdigit ( ( unsigned char ) * l ) || * l == '-' )		333114	7					
ANR	333926	Condition	isdigit ( ( unsigned char ) * l ) || * l == '-'	1668:6:38178:38216	333114	0	True				
ANR	333927	OrExpression	isdigit ( ( unsigned char ) * l ) || * l == '-'		333114	0		||			
ANR	333928	CallExpression	isdigit ( ( unsigned char ) * l )		333114	0					
ANR	333929	Callee	isdigit		333114	0					
ANR	333930	Identifier	isdigit		333114	0					
ANR	333931	ArgumentList	( unsigned char ) * l		333114	1					
ANR	333932	Argument	( unsigned char ) * l		333114	0					
ANR	333933	CastExpression	( unsigned char ) * l		333114	0					
ANR	333934	CastTarget	unsigned char		333114	0					
ANR	333935	UnaryOperationExpression	* l		333114	1					
ANR	333936	UnaryOperator	*		333114	0					
ANR	333937	Identifier	l		333114	1					
ANR	333938	EqualityExpression	* l == '-'		333114	1		==			
ANR	333939	UnaryOperationExpression	* l		333114	0					
ANR	333940	UnaryOperator	*		333114	0					
ANR	333941	Identifier	l		333114	1					
ANR	333942	PrimaryExpression	'-'		333114	1					
ANR	333943	CompoundStatement		172:47:3786:3786	333114	1					
ANR	333944	ExpressionStatement	"m -> in_offset = ( int32_t ) strtol ( l , & t , 0 )"	1669:3:38224:38264	333114	0	True				
ANR	333945	AssignmentExpression	"m -> in_offset = ( int32_t ) strtol ( l , & t , 0 )"		333114	0		=			
ANR	333946	PtrMemberAccess	m -> in_offset		333114	0					
ANR	333947	Identifier	m		333114	0					
ANR	333948	Identifier	in_offset		333114	1					
ANR	333949	CastExpression	"( int32_t ) strtol ( l , & t , 0 )"		333114	1					
ANR	333950	CastTarget	int32_t		333114	0					
ANR	333951	CallExpression	"strtol ( l , & t , 0 )"		333114	1					
ANR	333952	Callee	strtol		333114	0					
ANR	333953	Identifier	strtol		333114	0					
ANR	333954	ArgumentList	l		333114	1					
ANR	333955	Argument	l		333114	0					
ANR	333956	Identifier	l		333114	0					
ANR	333957	Argument	& t		333114	1					
ANR	333958	UnaryOperationExpression	& t		333114	0					
ANR	333959	UnaryOperator	&		333114	0					
ANR	333960	Identifier	t		333114	1					
ANR	333961	Argument	0		333114	2					
ANR	333962	PrimaryExpression	0		333114	0					
ANR	333963	IfStatement	if ( l == t )		333114	1					
ANR	333964	Condition	l == t	1670:7:38273:38278	333114	0	True				
ANR	333965	EqualityExpression	l == t		333114	0		==			
ANR	333966	Identifier	l		333114	0					
ANR	333967	Identifier	t		333114	1					
ANR	333968	IfStatement	if ( ms -> flags & MAGIC_CHECK )		333114	1					
ANR	333969	Condition	ms -> flags & MAGIC_CHECK	1671:8:38289:38311	333114	0	True				
ANR	333970	BitAndExpression	ms -> flags & MAGIC_CHECK		333114	0		&			
ANR	333971	PtrMemberAccess	ms -> flags		333114	0					
ANR	333972	Identifier	ms		333114	0					
ANR	333973	Identifier	flags		333114	1					
ANR	333974	Identifier	MAGIC_CHECK		333114	1					
ANR	333975	ExpressionStatement	"file_magwarn ( ms , ""in_offset `%s' invalid"" , l )"	1672:5:38319:38373	333114	1	True				
ANR	333976	CallExpression	"file_magwarn ( ms , ""in_offset `%s' invalid"" , l )"		333114	0					
ANR	333977	Callee	file_magwarn		333114	0					
ANR	333978	Identifier	file_magwarn		333114	0					
ANR	333979	ArgumentList	ms		333114	1					
ANR	333980	Argument	ms		333114	0					
ANR	333981	Identifier	ms		333114	0					
ANR	333982	Argument	"""in_offset `%s' invalid"""		333114	1					
ANR	333983	PrimaryExpression	"""in_offset `%s' invalid"""		333114	0					
ANR	333984	Argument	l		333114	2					
ANR	333985	Identifier	l		333114	0					
ANR	333986	ExpressionStatement	l = t	1674:3:38378:38383	333114	2	True				
ANR	333987	AssignmentExpression	l = t		333114	0		=			
ANR	333988	Identifier	l		333114	0					
ANR	333989	Identifier	t		333114	1					
ANR	333990	IfStatement	if ( * l ++ != ')' || ( ( m -> in_op & FILE_OPINDIRECT ) && * l ++ != ')' ) )		333114	8					
ANR	333991	Condition	* l ++ != ')' || ( ( m -> in_op & FILE_OPINDIRECT ) && * l ++ != ')' )	1676:6:38395:38461	333114	0	True				
ANR	333992	OrExpression	* l ++ != ')' || ( ( m -> in_op & FILE_OPINDIRECT ) && * l ++ != ')' )		333114	0		||			
ANR	333993	EqualityExpression	* l ++ != ')'		333114	0		!=			
ANR	333994	UnaryOperationExpression	* l ++		333114	0					
ANR	333995	UnaryOperator	*		333114	0					
ANR	333996	PostIncDecOperationExpression	l ++		333114	1					
ANR	333997	Identifier	l		333114	0					
ANR	333998	IncDec	++		333114	1					
ANR	333999	PrimaryExpression	')'		333114	1					
ANR	334000	AndExpression	( m -> in_op & FILE_OPINDIRECT ) && * l ++ != ')'		333114	1		&&			
ANR	334001	BitAndExpression	m -> in_op & FILE_OPINDIRECT		333114	0		&			
ANR	334002	PtrMemberAccess	m -> in_op		333114	0					
ANR	334003	Identifier	m		333114	0					
ANR	334004	Identifier	in_op		333114	1					
ANR	334005	Identifier	FILE_OPINDIRECT		333114	1					
ANR	334006	EqualityExpression	* l ++ != ')'		333114	1		!=			
ANR	334007	UnaryOperationExpression	* l ++		333114	0					
ANR	334008	UnaryOperator	*		333114	0					
ANR	334009	PostIncDecOperationExpression	l ++		333114	1					
ANR	334010	Identifier	l		333114	0					
ANR	334011	IncDec	++		333114	1					
ANR	334012	PrimaryExpression	')'		333114	1					
ANR	334013	IfStatement	if ( ms -> flags & MAGIC_CHECK )		333114	1					
ANR	334014	Condition	ms -> flags & MAGIC_CHECK	1678:7:38471:38493	333114	0	True				
ANR	334015	BitAndExpression	ms -> flags & MAGIC_CHECK		333114	0		&			
ANR	334016	PtrMemberAccess	ms -> flags		333114	0					
ANR	334017	Identifier	ms		333114	0					
ANR	334018	Identifier	flags		333114	1					
ANR	334019	Identifier	MAGIC_CHECK		333114	1					
ANR	334020	ExpressionStatement	"file_magwarn ( ms , ""missing ')' in indirect offset"" )"	1679:4:38500:38558	333114	1	True				
ANR	334021	CallExpression	"file_magwarn ( ms , ""missing ')' in indirect offset"" )"		333114	0					
ANR	334022	Callee	file_magwarn		333114	0					
ANR	334023	Identifier	file_magwarn		333114	0					
ANR	334024	ArgumentList	ms		333114	1					
ANR	334025	Argument	ms		333114	0					
ANR	334026	Identifier	ms		333114	0					
ANR	334027	Argument	"""missing ')' in indirect offset"""		333114	1					
ANR	334028	PrimaryExpression	"""missing ')' in indirect offset"""		333114	0					
ANR	334029	ExpressionStatement	EATAB	1682:1:38564:38569	333114	22	True				
ANR	334030	Identifier	EATAB		333114	0					
ANR	334031	ExpressionStatement	"m -> cond = get_cond ( l , & l )"	1685:1:38600:38625	333114	23	True				
ANR	334032	AssignmentExpression	"m -> cond = get_cond ( l , & l )"		333114	0		=			
ANR	334033	PtrMemberAccess	m -> cond		333114	0					
ANR	334034	Identifier	m		333114	0					
ANR	334035	Identifier	cond		333114	1					
ANR	334036	CallExpression	"get_cond ( l , & l )"		333114	1					
ANR	334037	Callee	get_cond		333114	0					
ANR	334038	Identifier	get_cond		333114	0					
ANR	334039	ArgumentList	l		333114	1					
ANR	334040	Argument	l		333114	0					
ANR	334041	Identifier	l		333114	0					
ANR	334042	Argument	& l		333114	1					
ANR	334043	UnaryOperationExpression	& l		333114	0					
ANR	334044	UnaryOperator	&		333114	0					
ANR	334045	Identifier	l		333114	1					
ANR	334046	IfStatement	"if ( check_cond ( ms , m -> cond , cont_level ) == - 1 )"		333114	24					
ANR	334047	Condition	"check_cond ( ms , m -> cond , cont_level ) == - 1"	1686:5:38632:38672	333114	0	True				
ANR	334048	EqualityExpression	"check_cond ( ms , m -> cond , cont_level ) == - 1"		333114	0		==			
ANR	334049	CallExpression	"check_cond ( ms , m -> cond , cont_level )"		333114	0					
ANR	334050	Callee	check_cond		333114	0					
ANR	334051	Identifier	check_cond		333114	0					
ANR	334052	ArgumentList	ms		333114	1					
ANR	334053	Argument	ms		333114	0					
ANR	334054	Identifier	ms		333114	0					
ANR	334055	Argument	m -> cond		333114	1					
ANR	334056	PtrMemberAccess	m -> cond		333114	0					
ANR	334057	Identifier	m		333114	0					
ANR	334058	Identifier	cond		333114	1					
ANR	334059	Argument	cont_level		333114	2					
ANR	334060	Identifier	cont_level		333114	0					
ANR	334061	UnaryOperationExpression	- 1		333114	1					
ANR	334062	UnaryOperator	-		333114	0					
ANR	334063	PrimaryExpression	1		333114	1					
ANR	334064	ReturnStatement	return - 1 ;	1687:2:38677:38686	333114	1	True				
ANR	334065	UnaryOperationExpression	- 1		333114	0					
ANR	334066	UnaryOperator	-		333114	0					
ANR	334067	PrimaryExpression	1		333114	1					
ANR	334068	ExpressionStatement	EATAB	1689:1:38690:38695	333114	25	True				
ANR	334069	Identifier	EATAB		333114	0					
ANR	334070	IfStatement	if ( * l == 'u' )		333114	26					
ANR	334071	Condition	* l == 'u'	1695:5:38739:38747	333114	0	True				
ANR	334072	EqualityExpression	* l == 'u'		333114	0		==			
ANR	334073	UnaryOperationExpression	* l		333114	0					
ANR	334074	UnaryOperator	*		333114	0					
ANR	334075	Identifier	l		333114	1					
ANR	334076	PrimaryExpression	'u'		333114	1					
ANR	334077	CompoundStatement		199:16:4317:4317	333114	1					
ANR	334078	ExpressionStatement	"m -> type = get_type ( type_tbl , l + 1 , & l )"	1701:2:38898:38937	333114	0	True				
ANR	334079	AssignmentExpression	"m -> type = get_type ( type_tbl , l + 1 , & l )"		333114	0		=			
ANR	334080	PtrMemberAccess	m -> type		333114	0					
ANR	334081	Identifier	m		333114	0					
ANR	334082	Identifier	type		333114	1					
ANR	334083	CallExpression	"get_type ( type_tbl , l + 1 , & l )"		333114	1					
ANR	334084	Callee	get_type		333114	0					
ANR	334085	Identifier	get_type		333114	0					
ANR	334086	ArgumentList	type_tbl		333114	1					
ANR	334087	Argument	type_tbl		333114	0					
ANR	334088	Identifier	type_tbl		333114	0					
ANR	334089	Argument	l + 1		333114	1					
ANR	334090	AdditiveExpression	l + 1		333114	0		+			
ANR	334091	Identifier	l		333114	0					
ANR	334092	PrimaryExpression	1		333114	1					
ANR	334093	Argument	& l		333114	2					
ANR	334094	UnaryOperationExpression	& l		333114	0					
ANR	334095	UnaryOperator	&		333114	0					
ANR	334096	Identifier	l		333114	1					
ANR	334097	IfStatement	if ( m -> type == FILE_INVALID )		333114	1					
ANR	334098	Condition	m -> type == FILE_INVALID	1702:6:38945:38967	333114	0	True				
ANR	334099	EqualityExpression	m -> type == FILE_INVALID		333114	0		==			
ANR	334100	PtrMemberAccess	m -> type		333114	0					
ANR	334101	Identifier	m		333114	0					
ANR	334102	Identifier	type		333114	1					
ANR	334103	Identifier	FILE_INVALID		333114	1					
ANR	334104	CompoundStatement		206:31:4537:4537	333114	1					
ANR	334105	ExpressionStatement	"m -> type = get_standard_integer_type ( l , & l )"	1707:3:39089:39131	333114	0	True				
ANR	334106	AssignmentExpression	"m -> type = get_standard_integer_type ( l , & l )"		333114	0		=			
ANR	334107	PtrMemberAccess	m -> type		333114	0					
ANR	334108	Identifier	m		333114	0					
ANR	334109	Identifier	type		333114	1					
ANR	334110	CallExpression	"get_standard_integer_type ( l , & l )"		333114	1					
ANR	334111	Callee	get_standard_integer_type		333114	0					
ANR	334112	Identifier	get_standard_integer_type		333114	0					
ANR	334113	ArgumentList	l		333114	1					
ANR	334114	Argument	l		333114	0					
ANR	334115	Identifier	l		333114	0					
ANR	334116	Argument	& l		333114	1					
ANR	334117	UnaryOperationExpression	& l		333114	0					
ANR	334118	UnaryOperator	&		333114	0					
ANR	334119	Identifier	l		333114	1					
ANR	334120	IfStatement	if ( m -> type != FILE_INVALID )		333114	2					
ANR	334121	Condition	m -> type != FILE_INVALID	1710:6:39163:39185	333114	0	True				
ANR	334122	EqualityExpression	m -> type != FILE_INVALID		333114	0		!=			
ANR	334123	PtrMemberAccess	m -> type		333114	0					
ANR	334124	Identifier	m		333114	0					
ANR	334125	Identifier	type		333114	1					
ANR	334126	Identifier	FILE_INVALID		333114	1					
ANR	334127	ExpressionStatement	m -> flag |= UNSIGNED	1711:3:39191:39210	333114	1	True				
ANR	334128	AssignmentExpression	m -> flag |= UNSIGNED		333114	0		|=			
ANR	334129	PtrMemberAccess	m -> flag		333114	0					
ANR	334130	Identifier	m		333114	0					
ANR	334131	Identifier	flag		333114	1					
ANR	334132	Identifier	UNSIGNED		333114	1					
ANR	334133	ElseStatement	else		333114	0					
ANR	334134	CompoundStatement		216:8:4787:4787	333114	0					
ANR	334135	ExpressionStatement	"m -> type = get_type ( type_tbl , l , & l )"	1719:2:39430:39465	333114	0	True				
ANR	334136	AssignmentExpression	"m -> type = get_type ( type_tbl , l , & l )"		333114	0		=			
ANR	334137	PtrMemberAccess	m -> type		333114	0					
ANR	334138	Identifier	m		333114	0					
ANR	334139	Identifier	type		333114	1					
ANR	334140	CallExpression	"get_type ( type_tbl , l , & l )"		333114	1					
ANR	334141	Callee	get_type		333114	0					
ANR	334142	Identifier	get_type		333114	0					
ANR	334143	ArgumentList	type_tbl		333114	1					
ANR	334144	Argument	type_tbl		333114	0					
ANR	334145	Identifier	type_tbl		333114	0					
ANR	334146	Argument	l		333114	1					
ANR	334147	Identifier	l		333114	0					
ANR	334148	Argument	& l		333114	2					
ANR	334149	UnaryOperationExpression	& l		333114	0					
ANR	334150	UnaryOperator	&		333114	0					
ANR	334151	Identifier	l		333114	1					
ANR	334152	IfStatement	if ( m -> type == FILE_INVALID )		333114	1					
ANR	334153	Condition	m -> type == FILE_INVALID	1720:6:39473:39495	333114	0	True				
ANR	334154	EqualityExpression	m -> type == FILE_INVALID		333114	0		==			
ANR	334155	PtrMemberAccess	m -> type		333114	0					
ANR	334156	Identifier	m		333114	0					
ANR	334157	Identifier	type		333114	1					
ANR	334158	Identifier	FILE_INVALID		333114	1					
ANR	334159	CompoundStatement		224:31:5065:5065	333114	1					
ANR	334160	IfStatement	if ( * l == 'd' )		333114	0					
ANR	334161	Condition	* l == 'd'	1726:7:39647:39655	333114	0	True				
ANR	334162	EqualityExpression	* l == 'd'		333114	0		==			
ANR	334163	UnaryOperationExpression	* l		333114	0					
ANR	334164	UnaryOperator	*		333114	0					
ANR	334165	Identifier	l		333114	1					
ANR	334166	PrimaryExpression	'd'		333114	1					
ANR	334167	ExpressionStatement	"m -> type = get_standard_integer_type ( l , & l )"	1727:4:39662:39704	333114	1	True				
ANR	334168	AssignmentExpression	"m -> type = get_standard_integer_type ( l , & l )"		333114	0		=			
ANR	334169	PtrMemberAccess	m -> type		333114	0					
ANR	334170	Identifier	m		333114	0					
ANR	334171	Identifier	type		333114	1					
ANR	334172	CallExpression	"get_standard_integer_type ( l , & l )"		333114	1					
ANR	334173	Callee	get_standard_integer_type		333114	0					
ANR	334174	Identifier	get_standard_integer_type		333114	0					
ANR	334175	ArgumentList	l		333114	1					
ANR	334176	Argument	l		333114	0					
ANR	334177	Identifier	l		333114	0					
ANR	334178	Argument	& l		333114	1					
ANR	334179	UnaryOperationExpression	& l		333114	0					
ANR	334180	UnaryOperator	&		333114	0					
ANR	334181	Identifier	l		333114	1					
ANR	334182	ElseStatement	else		333114	0					
ANR	334183	IfStatement	if ( * l == 's' && ! isalpha ( ( unsigned char ) l [ 1 ] ) )		333114	0					
ANR	334184	Condition	* l == 's' && ! isalpha ( ( unsigned char ) l [ 1 ] )	1728:12:39718:39759	333114	0	True				
ANR	334185	AndExpression	* l == 's' && ! isalpha ( ( unsigned char ) l [ 1 ] )		333114	0		&&			
ANR	334186	EqualityExpression	* l == 's'		333114	0		==			
ANR	334187	UnaryOperationExpression	* l		333114	0					
ANR	334188	UnaryOperator	*		333114	0					
ANR	334189	Identifier	l		333114	1					
ANR	334190	PrimaryExpression	's'		333114	1					
ANR	334191	UnaryOperationExpression	! isalpha ( ( unsigned char ) l [ 1 ] )		333114	1					
ANR	334192	UnaryOperator	!		333114	0					
ANR	334193	CallExpression	isalpha ( ( unsigned char ) l [ 1 ] )		333114	1					
ANR	334194	Callee	isalpha		333114	0					
ANR	334195	Identifier	isalpha		333114	0					
ANR	334196	ArgumentList	( unsigned char ) l [ 1 ]		333114	1					
ANR	334197	Argument	( unsigned char ) l [ 1 ]		333114	0					
ANR	334198	CastExpression	( unsigned char ) l [ 1 ]		333114	0					
ANR	334199	CastTarget	unsigned char		333114	0					
ANR	334200	ArrayIndexing	l [ 1 ]		333114	1					
ANR	334201	Identifier	l		333114	0					
ANR	334202	PrimaryExpression	1		333114	1					
ANR	334203	CompoundStatement		232:56:5329:5329	333114	1					
ANR	334204	ExpressionStatement	m -> type = FILE_STRING	1729:4:39768:39789	333114	0	True				
ANR	334205	AssignmentExpression	m -> type = FILE_STRING		333114	0		=			
ANR	334206	PtrMemberAccess	m -> type		333114	0					
ANR	334207	Identifier	m		333114	0					
ANR	334208	Identifier	type		333114	1					
ANR	334209	Identifier	FILE_STRING		333114	1					
ANR	334210	ExpressionStatement	++ l	1730:2:39793:39796	333114	1	True				
ANR	334211	UnaryExpression	++ l		333114	0					
ANR	334212	IncDec	++		333114	0					
ANR	334213	Identifier	l		333114	1					
ANR	334214	IfStatement	if ( m -> type == FILE_INVALID )		333114	27					
ANR	334215	Condition	m -> type == FILE_INVALID	1735:5:39816:39838	333114	0	True				
ANR	334216	EqualityExpression	m -> type == FILE_INVALID		333114	0		==			
ANR	334217	PtrMemberAccess	m -> type		333114	0					
ANR	334218	Identifier	m		333114	0					
ANR	334219	Identifier	type		333114	1					
ANR	334220	Identifier	FILE_INVALID		333114	1					
ANR	334221	CompoundStatement		239:30:5408:5408	333114	1					
ANR	334222	ExpressionStatement	"m -> type = get_type ( special_tbl , l , & l )"	1737:2:39894:39932	333114	0	True				
ANR	334223	AssignmentExpression	"m -> type = get_type ( special_tbl , l , & l )"		333114	0		=			
ANR	334224	PtrMemberAccess	m -> type		333114	0					
ANR	334225	Identifier	m		333114	0					
ANR	334226	Identifier	type		333114	1					
ANR	334227	CallExpression	"get_type ( special_tbl , l , & l )"		333114	1					
ANR	334228	Callee	get_type		333114	0					
ANR	334229	Identifier	get_type		333114	0					
ANR	334230	ArgumentList	special_tbl		333114	1					
ANR	334231	Argument	special_tbl		333114	0					
ANR	334232	Identifier	special_tbl		333114	0					
ANR	334233	Argument	l		333114	1					
ANR	334234	Identifier	l		333114	0					
ANR	334235	Argument	& l		333114	2					
ANR	334236	UnaryOperationExpression	& l		333114	0					
ANR	334237	UnaryOperator	&		333114	0					
ANR	334238	Identifier	l		333114	1					
ANR	334239	IfStatement	if ( m -> type == FILE_INVALID )		333114	28					
ANR	334240	Condition	m -> type == FILE_INVALID	1740:5:39946:39968	333114	0	True				
ANR	334241	EqualityExpression	m -> type == FILE_INVALID		333114	0		==			
ANR	334242	PtrMemberAccess	m -> type		333114	0					
ANR	334243	Identifier	m		333114	0					
ANR	334244	Identifier	type		333114	1					
ANR	334245	Identifier	FILE_INVALID		333114	1					
ANR	334246	CompoundStatement		244:30:5538:5538	333114	1					
ANR	334247	IfStatement	if ( ms -> flags & MAGIC_CHECK )		333114	0					
ANR	334248	Condition	ms -> flags & MAGIC_CHECK	1741:6:39979:40001	333114	0	True				
ANR	334249	BitAndExpression	ms -> flags & MAGIC_CHECK		333114	0		&			
ANR	334250	PtrMemberAccess	ms -> flags		333114	0					
ANR	334251	Identifier	ms		333114	0					
ANR	334252	Identifier	flags		333114	1					
ANR	334253	Identifier	MAGIC_CHECK		333114	1					
ANR	334254	ExpressionStatement	"file_magwarn ( ms , ""type `%s' invalid"" , l )"	1742:3:40007:40047	333114	1	True				
ANR	334255	CallExpression	"file_magwarn ( ms , ""type `%s' invalid"" , l )"		333114	0					
ANR	334256	Callee	file_magwarn		333114	0					
ANR	334257	Identifier	file_magwarn		333114	0					
ANR	334258	ArgumentList	ms		333114	1					
ANR	334259	Argument	ms		333114	0					
ANR	334260	Identifier	ms		333114	0					
ANR	334261	Argument	"""type `%s' invalid"""		333114	1					
ANR	334262	PrimaryExpression	"""type `%s' invalid"""		333114	0					
ANR	334263	Argument	l		333114	2					
ANR	334264	Identifier	l		333114	0					
ANR	334265	ReturnStatement	return - 1 ;	1747:2:40111:40120	333114	1	True				
ANR	334266	UnaryOperationExpression	- 1		333114	0					
ANR	334267	UnaryOperator	-		333114	0					
ANR	334268	PrimaryExpression	1		333114	1					
ANR	334269	ExpressionStatement	m -> mask_op = 0	1753:1:40258:40272	333114	29	True				
ANR	334270	AssignmentExpression	m -> mask_op = 0		333114	0		=			
ANR	334271	PtrMemberAccess	m -> mask_op		333114	0					
ANR	334272	Identifier	m		333114	0					
ANR	334273	Identifier	mask_op		333114	1					
ANR	334274	PrimaryExpression	0		333114	1					
ANR	334275	IfStatement	if ( * l == '~' )		333114	30					
ANR	334276	Condition	* l == '~'	1754:5:40279:40287	333114	0	True				
ANR	334277	EqualityExpression	* l == '~'		333114	0		==			
ANR	334278	UnaryOperationExpression	* l		333114	0					
ANR	334279	UnaryOperator	*		333114	0					
ANR	334280	Identifier	l		333114	1					
ANR	334281	PrimaryExpression	'~'		333114	1					
ANR	334282	CompoundStatement		258:16:5857:5857	333114	1					
ANR	334283	IfStatement	if ( ! IS_LIBMAGIC_STRING ( m -> type ) )		333114	0					
ANR	334284	Condition	! IS_LIBMAGIC_STRING ( m -> type )	1755:6:40298:40325	333114	0	True				
ANR	334285	UnaryOperationExpression	! IS_LIBMAGIC_STRING ( m -> type )		333114	0					
ANR	334286	UnaryOperator	!		333114	0					
ANR	334287	CallExpression	IS_LIBMAGIC_STRING ( m -> type )		333114	1					
ANR	334288	Callee	IS_LIBMAGIC_STRING		333114	0					
ANR	334289	Identifier	IS_LIBMAGIC_STRING		333114	0					
ANR	334290	ArgumentList	m -> type		333114	1					
ANR	334291	Argument	m -> type		333114	0					
ANR	334292	PtrMemberAccess	m -> type		333114	0					
ANR	334293	Identifier	m		333114	0					
ANR	334294	Identifier	type		333114	1					
ANR	334295	ExpressionStatement	m -> mask_op |= FILE_OPINVERSE	1756:3:40331:40359	333114	1	True				
ANR	334296	AssignmentExpression	m -> mask_op |= FILE_OPINVERSE		333114	0		|=			
ANR	334297	PtrMemberAccess	m -> mask_op		333114	0					
ANR	334298	Identifier	m		333114	0					
ANR	334299	Identifier	mask_op		333114	1					
ANR	334300	Identifier	FILE_OPINVERSE		333114	1					
ANR	334301	ElseStatement	else		333114	0					
ANR	334302	IfStatement	if ( ms -> flags & MAGIC_CHECK )		333114	0					
ANR	334303	Condition	ms -> flags & MAGIC_CHECK	1757:11:40372:40394	333114	0	True				
ANR	334304	BitAndExpression	ms -> flags & MAGIC_CHECK		333114	0		&			
ANR	334305	PtrMemberAccess	ms -> flags		333114	0					
ANR	334306	Identifier	ms		333114	0					
ANR	334307	Identifier	flags		333114	1					
ANR	334308	Identifier	MAGIC_CHECK		333114	1					
ANR	334309	ExpressionStatement	"file_magwarn ( ms , ""'~' invalid for string types"" )"	1758:3:40400:40448	333114	1	True				
ANR	334310	CallExpression	"file_magwarn ( ms , ""'~' invalid for string types"" )"		333114	0					
ANR	334311	Callee	file_magwarn		333114	0					
ANR	334312	Identifier	file_magwarn		333114	0					
ANR	334313	ArgumentList	ms		333114	1					
ANR	334314	Argument	ms		333114	0					
ANR	334315	Identifier	ms		333114	0					
ANR	334316	Argument	"""'~' invalid for string types"""		333114	1					
ANR	334317	PrimaryExpression	"""'~' invalid for string types"""		333114	0					
ANR	334318	ExpressionStatement	++ l	1759:2:40452:40455	333114	1	True				
ANR	334319	UnaryExpression	++ l		333114	0					
ANR	334320	IncDec	++		333114	0					
ANR	334321	Identifier	l		333114	1					
ANR	334322	ExpressionStatement	m -> str_range = 0	1761:1:40461:40477	333114	31	True				
ANR	334323	AssignmentExpression	m -> str_range = 0		333114	0		=			
ANR	334324	PtrMemberAccess	m -> str_range		333114	0					
ANR	334325	Identifier	m		333114	0					
ANR	334326	Identifier	str_range		333114	1					
ANR	334327	PrimaryExpression	0		333114	1					
ANR	334328	ExpressionStatement	m -> str_flags = m -> type == FILE_PSTRING ? PSTRING_1_LE : 0	1762:1:40480:40537	333114	32	True				
ANR	334329	AssignmentExpression	m -> str_flags = m -> type == FILE_PSTRING ? PSTRING_1_LE : 0		333114	0		=			
ANR	334330	PtrMemberAccess	m -> str_flags		333114	0					
ANR	334331	Identifier	m		333114	0					
ANR	334332	Identifier	str_flags		333114	1					
ANR	334333	ConditionalExpression	m -> type == FILE_PSTRING ? PSTRING_1_LE : 0		333114	1					
ANR	334334	Condition	m -> type == FILE_PSTRING		333114	0					
ANR	334335	EqualityExpression	m -> type == FILE_PSTRING		333114	0		==			
ANR	334336	PtrMemberAccess	m -> type		333114	0					
ANR	334337	Identifier	m		333114	0					
ANR	334338	Identifier	type		333114	1					
ANR	334339	Identifier	FILE_PSTRING		333114	1					
ANR	334340	Identifier	PSTRING_1_LE		333114	1					
ANR	334341	PrimaryExpression	0		333114	2					
ANR	334342	IfStatement	if ( ( op = get_op ( * l ) ) != - 1 )		333114	33					
ANR	334343	Condition	( op = get_op ( * l ) ) != - 1	1763:5:40544:40566	333114	0	True				
ANR	334344	EqualityExpression	( op = get_op ( * l ) ) != - 1		333114	0		!=			
ANR	334345	AssignmentExpression	op = get_op ( * l )		333114	0		=			
ANR	334346	Identifier	op		333114	0					
ANR	334347	CallExpression	get_op ( * l )		333114	1					
ANR	334348	Callee	get_op		333114	0					
ANR	334349	Identifier	get_op		333114	0					
ANR	334350	ArgumentList	* l		333114	1					
ANR	334351	Argument	* l		333114	0					
ANR	334352	UnaryOperationExpression	* l		333114	0					
ANR	334353	UnaryOperator	*		333114	0					
ANR	334354	Identifier	l		333114	1					
ANR	334355	UnaryOperationExpression	- 1		333114	1					
ANR	334356	UnaryOperator	-		333114	0					
ANR	334357	PrimaryExpression	1		333114	1					
ANR	334358	CompoundStatement		267:30:6136:6136	333114	1					
ANR	334359	IfStatement	if ( ! IS_LIBMAGIC_STRING ( m -> type ) )		333114	0					
ANR	334360	Condition	! IS_LIBMAGIC_STRING ( m -> type )	1764:6:40577:40604	333114	0	True				
ANR	334361	UnaryOperationExpression	! IS_LIBMAGIC_STRING ( m -> type )		333114	0					
ANR	334362	UnaryOperator	!		333114	0					
ANR	334363	CallExpression	IS_LIBMAGIC_STRING ( m -> type )		333114	1					
ANR	334364	Callee	IS_LIBMAGIC_STRING		333114	0					
ANR	334365	Identifier	IS_LIBMAGIC_STRING		333114	0					
ANR	334366	ArgumentList	m -> type		333114	1					
ANR	334367	Argument	m -> type		333114	0					
ANR	334368	PtrMemberAccess	m -> type		333114	0					
ANR	334369	Identifier	m		333114	0					
ANR	334370	Identifier	type		333114	1					
ANR	334371	CompoundStatement		269:3:6179:6191	333114	1					
ANR	334372	IdentifierDeclStatement	uint64_t val ;	1765:3:40612:40624	333114	0	True				
ANR	334373	IdentifierDecl	val		333114	0					
ANR	334374	IdentifierDeclType	uint64_t		333114	0					
ANR	334375	Identifier	val		333114	1					
ANR	334376	ExpressionStatement	++ l	1766:3:40629:40632	333114	1	True				
ANR	334377	UnaryExpression	++ l		333114	0					
ANR	334378	IncDec	++		333114	0					
ANR	334379	Identifier	l		333114	1					
ANR	334380	ExpressionStatement	m -> mask_op |= op	1767:3:40637:40653	333114	2	True				
ANR	334381	AssignmentExpression	m -> mask_op |= op		333114	0		|=			
ANR	334382	PtrMemberAccess	m -> mask_op		333114	0					
ANR	334383	Identifier	m		333114	0					
ANR	334384	Identifier	mask_op		333114	1					
ANR	334385	Identifier	op		333114	1					
ANR	334386	ExpressionStatement	"val = ( uint64_t ) strtoull ( l , & t , 0 )"	1768:3:40658:40692	333114	3	True				
ANR	334387	AssignmentExpression	"val = ( uint64_t ) strtoull ( l , & t , 0 )"		333114	0		=			
ANR	334388	Identifier	val		333114	0					
ANR	334389	CastExpression	"( uint64_t ) strtoull ( l , & t , 0 )"		333114	1					
ANR	334390	CastTarget	uint64_t		333114	0					
ANR	334391	CallExpression	"strtoull ( l , & t , 0 )"		333114	1					
ANR	334392	Callee	strtoull		333114	0					
ANR	334393	Identifier	strtoull		333114	0					
ANR	334394	ArgumentList	l		333114	1					
ANR	334395	Argument	l		333114	0					
ANR	334396	Identifier	l		333114	0					
ANR	334397	Argument	& t		333114	1					
ANR	334398	UnaryOperationExpression	& t		333114	0					
ANR	334399	UnaryOperator	&		333114	0					
ANR	334400	Identifier	t		333114	1					
ANR	334401	Argument	0		333114	2					
ANR	334402	PrimaryExpression	0		333114	0					
ANR	334403	ExpressionStatement	l = t	1769:3:40697:40702	333114	4	True				
ANR	334404	AssignmentExpression	l = t		333114	0		=			
ANR	334405	Identifier	l		333114	0					
ANR	334406	Identifier	t		333114	1					
ANR	334407	ExpressionStatement	"m -> num_mask = file_signextend ( ms , m , val )"	1770:3:40707:40748	333114	5	True				
ANR	334408	AssignmentExpression	"m -> num_mask = file_signextend ( ms , m , val )"		333114	0		=			
ANR	334409	PtrMemberAccess	m -> num_mask		333114	0					
ANR	334410	Identifier	m		333114	0					
ANR	334411	Identifier	num_mask		333114	1					
ANR	334412	CallExpression	"file_signextend ( ms , m , val )"		333114	1					
ANR	334413	Callee	file_signextend		333114	0					
ANR	334414	Identifier	file_signextend		333114	0					
ANR	334415	ArgumentList	ms		333114	1					
ANR	334416	Argument	ms		333114	0					
ANR	334417	Identifier	ms		333114	0					
ANR	334418	Argument	m		333114	1					
ANR	334419	Identifier	m		333114	0					
ANR	334420	Argument	val		333114	2					
ANR	334421	Identifier	val		333114	0					
ANR	334422	ExpressionStatement	eatsize ( & l )	1771:3:40753:40764	333114	6	True				
ANR	334423	CallExpression	eatsize ( & l )		333114	0					
ANR	334424	Callee	eatsize		333114	0					
ANR	334425	Identifier	eatsize		333114	0					
ANR	334426	ArgumentList	& l		333114	1					
ANR	334427	Argument	& l		333114	0					
ANR	334428	UnaryOperationExpression	& l		333114	0					
ANR	334429	UnaryOperator	&		333114	0					
ANR	334430	Identifier	l		333114	1					
ANR	334431	ElseStatement	else		333114	0					
ANR	334432	IfStatement	if ( op == FILE_OPDIVIDE )		333114	0					
ANR	334433	Condition	op == FILE_OPDIVIDE	1773:11:40781:40799	333114	0	True				
ANR	334434	EqualityExpression	op == FILE_OPDIVIDE		333114	0		==			
ANR	334435	Identifier	op		333114	0					
ANR	334436	Identifier	FILE_OPDIVIDE		333114	1					
ANR	334437	CompoundStatement		278:3:6374:6392	333114	1					
ANR	334438	IdentifierDeclStatement	int have_range = 0 ;	1774:3:40807:40825	333114	0	True				
ANR	334439	IdentifierDecl	have_range = 0		333114	0					
ANR	334440	IdentifierDeclType	int		333114	0					
ANR	334441	Identifier	have_range		333114	1					
ANR	334442	AssignmentExpression	have_range = 0		333114	2		=			
ANR	334443	Identifier	have_range		333114	0					
ANR	334444	PrimaryExpression	0		333114	1					
ANR	334445	WhileStatement	while ( ! isspace ( ( unsigned char ) * ++ l ) )		333114	1					
ANR	334446	Condition	! isspace ( ( unsigned char ) * ++ l )	1775:10:40837:40865	333114	0	True				
ANR	334447	UnaryOperationExpression	! isspace ( ( unsigned char ) * ++ l )		333114	0					
ANR	334448	UnaryOperator	!		333114	0					
ANR	334449	CallExpression	isspace ( ( unsigned char ) * ++ l )		333114	1					
ANR	334450	Callee	isspace		333114	0					
ANR	334451	Identifier	isspace		333114	0					
ANR	334452	ArgumentList	( unsigned char ) * ++ l		333114	1					
ANR	334453	Argument	( unsigned char ) * ++ l		333114	0					
ANR	334454	CastExpression	( unsigned char ) * ++ l		333114	0					
ANR	334455	CastTarget	unsigned char		333114	0					
ANR	334456	UnaryOperationExpression	* ++ l		333114	1					
ANR	334457	UnaryOperator	*		333114	0					
ANR	334458	UnaryExpression	++ l		333114	1					
ANR	334459	IncDec	++		333114	0					
ANR	334460	Identifier	l		333114	1					
ANR	334461	CompoundStatement		279:41:6435:6435	333114	1					
ANR	334462	SwitchStatement	switch ( * l )		333114	0					
ANR	334463	Condition	* l	1776:12:40882:40883	333114	0	True				
ANR	334464	UnaryOperationExpression	* l		333114	0					
ANR	334465	UnaryOperator	*		333114	0					
ANR	334466	Identifier	l		333114	1					
ANR	334467	CompoundStatement		280:16:6453:6453	333114	1					
ANR	334468	Label	case '0' :	1777:4:40892:40900	333114	0	True				
ANR	334469	Label	case '1' :	1777:15:40903:40911	333114	1	True				
ANR	334470	Label	case '2' :	1777:26:40914:40922	333114	2	True				
ANR	334471	Label	case '3' :	1778:4:40928:40936	333114	3	True				
ANR	334472	Label	case '4' :	1778:15:40939:40947	333114	4	True				
ANR	334473	Label	case '5' :	1778:26:40950:40958	333114	5	True				
ANR	334474	Label	case '6' :	1779:4:40964:40972	333114	6	True				
ANR	334475	Label	case '7' :	1779:15:40975:40983	333114	7	True				
ANR	334476	Label	case '8' :	1779:26:40986:40994	333114	8	True				
ANR	334477	Label	case '9' :	1780:4:41000:41008	333114	9	True				
ANR	334478	IfStatement	if ( have_range && ( ms -> flags & MAGIC_CHECK ) )		333114	10					
ANR	334479	Condition	have_range && ( ms -> flags & MAGIC_CHECK )	1781:9:41019:41066	333114	0	True				
ANR	334480	AndExpression	have_range && ( ms -> flags & MAGIC_CHECK )		333114	0		&&			
ANR	334481	Identifier	have_range		333114	0					
ANR	334482	BitAndExpression	ms -> flags & MAGIC_CHECK		333114	1		&			
ANR	334483	PtrMemberAccess	ms -> flags		333114	0					
ANR	334484	Identifier	ms		333114	0					
ANR	334485	Identifier	flags		333114	1					
ANR	334486	Identifier	MAGIC_CHECK		333114	1					
ANR	334487	ExpressionStatement	"file_magwarn ( ms , ""multiple ranges"" )"	1783:6:41075:41120	333114	1	True				
ANR	334488	CallExpression	"file_magwarn ( ms , ""multiple ranges"" )"		333114	0					
ANR	334489	Callee	file_magwarn		333114	0					
ANR	334490	Identifier	file_magwarn		333114	0					
ANR	334491	ArgumentList	ms		333114	1					
ANR	334492	Argument	ms		333114	0					
ANR	334493	Identifier	ms		333114	0					
ANR	334494	Argument	"""multiple ranges"""		333114	1					
ANR	334495	PrimaryExpression	"""multiple ranges"""		333114	0					
ANR	334496	ExpressionStatement	have_range = 1	1785:5:41127:41141	333114	11	True				
ANR	334497	AssignmentExpression	have_range = 1		333114	0		=			
ANR	334498	Identifier	have_range		333114	0					
ANR	334499	PrimaryExpression	1		333114	1					
ANR	334500	ExpressionStatement	"m -> str_range = CAST ( uint32_t , strtoul ( l , & t , 0 ) )"	1786:5:41148:41205	333114	12	True				
ANR	334501	AssignmentExpression	"m -> str_range = CAST ( uint32_t , strtoul ( l , & t , 0 ) )"		333114	0		=			
ANR	334502	PtrMemberAccess	m -> str_range		333114	0					
ANR	334503	Identifier	m		333114	0					
ANR	334504	Identifier	str_range		333114	1					
ANR	334505	CallExpression	"CAST ( uint32_t , strtoul ( l , & t , 0 ) )"		333114	1					
ANR	334506	Callee	CAST		333114	0					
ANR	334507	Identifier	CAST		333114	0					
ANR	334508	ArgumentList	uint32_t		333114	1					
ANR	334509	Argument	uint32_t		333114	0					
ANR	334510	Identifier	uint32_t		333114	0					
ANR	334511	Argument	"strtoul ( l , & t , 0 )"		333114	1					
ANR	334512	CallExpression	"strtoul ( l , & t , 0 )"		333114	0					
ANR	334513	Callee	strtoul		333114	0					
ANR	334514	Identifier	strtoul		333114	0					
ANR	334515	ArgumentList	l		333114	1					
ANR	334516	Argument	l		333114	0					
ANR	334517	Identifier	l		333114	0					
ANR	334518	Argument	& t		333114	1					
ANR	334519	UnaryOperationExpression	& t		333114	0					
ANR	334520	UnaryOperator	&		333114	0					
ANR	334521	Identifier	t		333114	1					
ANR	334522	Argument	0		333114	2					
ANR	334523	PrimaryExpression	0		333114	0					
ANR	334524	IfStatement	if ( m -> str_range == 0 )		333114	13					
ANR	334525	Condition	m -> str_range == 0	1788:9:41216:41232	333114	0	True				
ANR	334526	EqualityExpression	m -> str_range == 0		333114	0		==			
ANR	334527	PtrMemberAccess	m -> str_range		333114	0					
ANR	334528	Identifier	m		333114	0					
ANR	334529	Identifier	str_range		333114	1					
ANR	334530	PrimaryExpression	0		333114	1					
ANR	334531	ExpressionStatement	"file_magwarn ( ms , ""zero range"" )"	1789:6:41241:41281	333114	1	True				
ANR	334532	CallExpression	"file_magwarn ( ms , ""zero range"" )"		333114	0					
ANR	334533	Callee	file_magwarn		333114	0					
ANR	334534	Identifier	file_magwarn		333114	0					
ANR	334535	ArgumentList	ms		333114	1					
ANR	334536	Argument	ms		333114	0					
ANR	334537	Identifier	ms		333114	0					
ANR	334538	Argument	"""zero range"""		333114	1					
ANR	334539	PrimaryExpression	"""zero range"""		333114	0					
ANR	334540	ExpressionStatement	l = t - 1	1791:5:41288:41297	333114	14	True				
ANR	334541	AssignmentExpression	l = t - 1		333114	0		=			
ANR	334542	Identifier	l		333114	0					
ANR	334543	AdditiveExpression	t - 1		333114	1		-			
ANR	334544	Identifier	t		333114	0					
ANR	334545	PrimaryExpression	1		333114	1					
ANR	334546	BreakStatement	break ;	1792:5:41304:41309	333114	15	True				
ANR	334547	Label	case CHAR_COMPACT_WHITESPACE :	1793:4:41315:41343	333114	16	True				
ANR	334548	Identifier	CHAR_COMPACT_WHITESPACE		333114	0					
ANR	334549	ExpressionStatement	m -> str_flags |= STRING_COMPACT_WHITESPACE	1794:5:41350:41400	333114	17	True				
ANR	334550	AssignmentExpression	m -> str_flags |= STRING_COMPACT_WHITESPACE		333114	0		|=			
ANR	334551	PtrMemberAccess	m -> str_flags		333114	0					
ANR	334552	Identifier	m		333114	0					
ANR	334553	Identifier	str_flags		333114	1					
ANR	334554	Identifier	STRING_COMPACT_WHITESPACE		333114	1					
ANR	334555	BreakStatement	break ;	1796:5:41407:41412	333114	18	True				
ANR	334556	Label	case CHAR_COMPACT_OPTIONAL_WHITESPACE :	1797:4:41418:41455	333114	19	True				
ANR	334557	Identifier	CHAR_COMPACT_OPTIONAL_WHITESPACE		333114	0					
ANR	334558	ExpressionStatement	m -> str_flags |= STRING_COMPACT_OPTIONAL_WHITESPACE	1798:5:41462:41521	333114	20	True				
ANR	334559	AssignmentExpression	m -> str_flags |= STRING_COMPACT_OPTIONAL_WHITESPACE		333114	0		|=			
ANR	334560	PtrMemberAccess	m -> str_flags		333114	0					
ANR	334561	Identifier	m		333114	0					
ANR	334562	Identifier	str_flags		333114	1					
ANR	334563	Identifier	STRING_COMPACT_OPTIONAL_WHITESPACE		333114	1					
ANR	334564	BreakStatement	break ;	1800:5:41528:41533	333114	21	True				
ANR	334565	Label	case CHAR_IGNORE_LOWERCASE :	1801:4:41539:41565	333114	22	True				
ANR	334566	Identifier	CHAR_IGNORE_LOWERCASE		333114	0					
ANR	334567	ExpressionStatement	m -> str_flags |= STRING_IGNORE_LOWERCASE	1802:5:41572:41611	333114	23	True				
ANR	334568	AssignmentExpression	m -> str_flags |= STRING_IGNORE_LOWERCASE		333114	0		|=			
ANR	334569	PtrMemberAccess	m -> str_flags		333114	0					
ANR	334570	Identifier	m		333114	0					
ANR	334571	Identifier	str_flags		333114	1					
ANR	334572	Identifier	STRING_IGNORE_LOWERCASE		333114	1					
ANR	334573	BreakStatement	break ;	1803:5:41618:41623	333114	24	True				
ANR	334574	Label	case CHAR_IGNORE_UPPERCASE :	1804:4:41629:41655	333114	25	True				
ANR	334575	Identifier	CHAR_IGNORE_UPPERCASE		333114	0					
ANR	334576	ExpressionStatement	m -> str_flags |= STRING_IGNORE_UPPERCASE	1805:5:41662:41701	333114	26	True				
ANR	334577	AssignmentExpression	m -> str_flags |= STRING_IGNORE_UPPERCASE		333114	0		|=			
ANR	334578	PtrMemberAccess	m -> str_flags		333114	0					
ANR	334579	Identifier	m		333114	0					
ANR	334580	Identifier	str_flags		333114	1					
ANR	334581	Identifier	STRING_IGNORE_UPPERCASE		333114	1					
ANR	334582	BreakStatement	break ;	1806:5:41708:41713	333114	27	True				
ANR	334583	Label	case CHAR_REGEX_OFFSET_START :	1807:4:41719:41747	333114	28	True				
ANR	334584	Identifier	CHAR_REGEX_OFFSET_START		333114	0					
ANR	334585	ExpressionStatement	m -> str_flags |= REGEX_OFFSET_START	1808:5:41754:41788	333114	29	True				
ANR	334586	AssignmentExpression	m -> str_flags |= REGEX_OFFSET_START		333114	0		|=			
ANR	334587	PtrMemberAccess	m -> str_flags		333114	0					
ANR	334588	Identifier	m		333114	0					
ANR	334589	Identifier	str_flags		333114	1					
ANR	334590	Identifier	REGEX_OFFSET_START		333114	1					
ANR	334591	BreakStatement	break ;	1809:5:41795:41800	333114	30	True				
ANR	334592	Label	case CHAR_BINTEST :	1810:4:41806:41823	333114	31	True				
ANR	334593	Identifier	CHAR_BINTEST		333114	0					
ANR	334594	ExpressionStatement	m -> str_flags |= STRING_BINTEST	1811:5:41830:41860	333114	32	True				
ANR	334595	AssignmentExpression	m -> str_flags |= STRING_BINTEST		333114	0		|=			
ANR	334596	PtrMemberAccess	m -> str_flags		333114	0					
ANR	334597	Identifier	m		333114	0					
ANR	334598	Identifier	str_flags		333114	1					
ANR	334599	Identifier	STRING_BINTEST		333114	1					
ANR	334600	BreakStatement	break ;	1812:5:41867:41872	333114	33	True				
ANR	334601	Label	case CHAR_TEXTTEST :	1813:4:41878:41896	333114	34	True				
ANR	334602	Identifier	CHAR_TEXTTEST		333114	0					
ANR	334603	ExpressionStatement	m -> str_flags |= STRING_TEXTTEST	1814:5:41903:41934	333114	35	True				
ANR	334604	AssignmentExpression	m -> str_flags |= STRING_TEXTTEST		333114	0		|=			
ANR	334605	PtrMemberAccess	m -> str_flags		333114	0					
ANR	334606	Identifier	m		333114	0					
ANR	334607	Identifier	str_flags		333114	1					
ANR	334608	Identifier	STRING_TEXTTEST		333114	1					
ANR	334609	BreakStatement	break ;	1815:5:41941:41946	333114	36	True				
ANR	334610	Label	case CHAR_TRIM :	1816:4:41952:41966	333114	37	True				
ANR	334611	Identifier	CHAR_TRIM		333114	0					
ANR	334612	ExpressionStatement	m -> str_flags |= STRING_TRIM	1817:5:41973:42000	333114	38	True				
ANR	334613	AssignmentExpression	m -> str_flags |= STRING_TRIM		333114	0		|=			
ANR	334614	PtrMemberAccess	m -> str_flags		333114	0					
ANR	334615	Identifier	m		333114	0					
ANR	334616	Identifier	str_flags		333114	1					
ANR	334617	Identifier	STRING_TRIM		333114	1					
ANR	334618	BreakStatement	break ;	1818:5:42007:42012	333114	39	True				
ANR	334619	Label	case CHAR_PSTRING_1_LE :	1819:4:42018:42040	333114	40	True				
ANR	334620	Identifier	CHAR_PSTRING_1_LE		333114	0					
ANR	334621	IfStatement	if ( m -> type != FILE_PSTRING )		333114	41					
ANR	334622	Condition	m -> type != FILE_PSTRING	1820:9:42051:42073	333114	0	True				
ANR	334623	EqualityExpression	m -> type != FILE_PSTRING		333114	0		!=			
ANR	334624	PtrMemberAccess	m -> type		333114	0					
ANR	334625	Identifier	m		333114	0					
ANR	334626	Identifier	type		333114	1					
ANR	334627	Identifier	FILE_PSTRING		333114	1					
ANR	334628	GotoStatement	goto bad ;	1821:6:42082:42090	333114	1	True				
ANR	334629	Identifier	bad		333114	0					
ANR	334630	ExpressionStatement	m -> str_flags = ( m -> str_flags & ~PSTRING_LEN ) | PSTRING_1_LE	1822:5:42097:42156	333114	42	True				
ANR	334631	AssignmentExpression	m -> str_flags = ( m -> str_flags & ~PSTRING_LEN ) | PSTRING_1_LE		333114	0		=			
ANR	334632	PtrMemberAccess	m -> str_flags		333114	0					
ANR	334633	Identifier	m		333114	0					
ANR	334634	Identifier	str_flags		333114	1					
ANR	334635	InclusiveOrExpression	( m -> str_flags & ~PSTRING_LEN ) | PSTRING_1_LE		333114	1		|			
ANR	334636	BitAndExpression	m -> str_flags & ~PSTRING_LEN		333114	0		&			
ANR	334637	PtrMemberAccess	m -> str_flags		333114	0					
ANR	334638	Identifier	m		333114	0					
ANR	334639	Identifier	str_flags		333114	1					
ANR	334640	Identifier	~PSTRING_LEN		333114	1					
ANR	334641	Identifier	PSTRING_1_LE		333114	1					
ANR	334642	BreakStatement	break ;	1823:5:42163:42168	333114	43	True				
ANR	334643	Label	case CHAR_PSTRING_2_BE :	1824:4:42174:42196	333114	44	True				
ANR	334644	Identifier	CHAR_PSTRING_2_BE		333114	0					
ANR	334645	IfStatement	if ( m -> type != FILE_PSTRING )		333114	45					
ANR	334646	Condition	m -> type != FILE_PSTRING	1825:9:42207:42229	333114	0	True				
ANR	334647	EqualityExpression	m -> type != FILE_PSTRING		333114	0		!=			
ANR	334648	PtrMemberAccess	m -> type		333114	0					
ANR	334649	Identifier	m		333114	0					
ANR	334650	Identifier	type		333114	1					
ANR	334651	Identifier	FILE_PSTRING		333114	1					
ANR	334652	GotoStatement	goto bad ;	1826:6:42238:42246	333114	1	True				
ANR	334653	Identifier	bad		333114	0					
ANR	334654	ExpressionStatement	m -> str_flags = ( m -> str_flags & ~PSTRING_LEN ) | PSTRING_2_BE	1827:5:42253:42312	333114	46	True				
ANR	334655	AssignmentExpression	m -> str_flags = ( m -> str_flags & ~PSTRING_LEN ) | PSTRING_2_BE		333114	0		=			
ANR	334656	PtrMemberAccess	m -> str_flags		333114	0					
ANR	334657	Identifier	m		333114	0					
ANR	334658	Identifier	str_flags		333114	1					
ANR	334659	InclusiveOrExpression	( m -> str_flags & ~PSTRING_LEN ) | PSTRING_2_BE		333114	1		|			
ANR	334660	BitAndExpression	m -> str_flags & ~PSTRING_LEN		333114	0		&			
ANR	334661	PtrMemberAccess	m -> str_flags		333114	0					
ANR	334662	Identifier	m		333114	0					
ANR	334663	Identifier	str_flags		333114	1					
ANR	334664	Identifier	~PSTRING_LEN		333114	1					
ANR	334665	Identifier	PSTRING_2_BE		333114	1					
ANR	334666	BreakStatement	break ;	1828:5:42319:42324	333114	47	True				
ANR	334667	Label	case CHAR_PSTRING_2_LE :	1829:4:42330:42352	333114	48	True				
ANR	334668	Identifier	CHAR_PSTRING_2_LE		333114	0					
ANR	334669	IfStatement	if ( m -> type != FILE_PSTRING )		333114	49					
ANR	334670	Condition	m -> type != FILE_PSTRING	1830:9:42363:42385	333114	0	True				
ANR	334671	EqualityExpression	m -> type != FILE_PSTRING		333114	0		!=			
ANR	334672	PtrMemberAccess	m -> type		333114	0					
ANR	334673	Identifier	m		333114	0					
ANR	334674	Identifier	type		333114	1					
ANR	334675	Identifier	FILE_PSTRING		333114	1					
ANR	334676	GotoStatement	goto bad ;	1831:6:42394:42402	333114	1	True				
ANR	334677	Identifier	bad		333114	0					
ANR	334678	ExpressionStatement	m -> str_flags = ( m -> str_flags & ~PSTRING_LEN ) | PSTRING_2_LE	1832:5:42409:42468	333114	50	True				
ANR	334679	AssignmentExpression	m -> str_flags = ( m -> str_flags & ~PSTRING_LEN ) | PSTRING_2_LE		333114	0		=			
ANR	334680	PtrMemberAccess	m -> str_flags		333114	0					
ANR	334681	Identifier	m		333114	0					
ANR	334682	Identifier	str_flags		333114	1					
ANR	334683	InclusiveOrExpression	( m -> str_flags & ~PSTRING_LEN ) | PSTRING_2_LE		333114	1		|			
ANR	334684	BitAndExpression	m -> str_flags & ~PSTRING_LEN		333114	0		&			
ANR	334685	PtrMemberAccess	m -> str_flags		333114	0					
ANR	334686	Identifier	m		333114	0					
ANR	334687	Identifier	str_flags		333114	1					
ANR	334688	Identifier	~PSTRING_LEN		333114	1					
ANR	334689	Identifier	PSTRING_2_LE		333114	1					
ANR	334690	BreakStatement	break ;	1833:5:42475:42480	333114	51	True				
ANR	334691	Label	case CHAR_PSTRING_4_BE :	1834:4:42486:42508	333114	52	True				
ANR	334692	Identifier	CHAR_PSTRING_4_BE		333114	0					
ANR	334693	IfStatement	if ( m -> type != FILE_PSTRING )		333114	53					
ANR	334694	Condition	m -> type != FILE_PSTRING	1835:9:42519:42541	333114	0	True				
ANR	334695	EqualityExpression	m -> type != FILE_PSTRING		333114	0		!=			
ANR	334696	PtrMemberAccess	m -> type		333114	0					
ANR	334697	Identifier	m		333114	0					
ANR	334698	Identifier	type		333114	1					
ANR	334699	Identifier	FILE_PSTRING		333114	1					
ANR	334700	GotoStatement	goto bad ;	1836:6:42550:42558	333114	1	True				
ANR	334701	Identifier	bad		333114	0					
ANR	334702	ExpressionStatement	m -> str_flags = ( m -> str_flags & ~PSTRING_LEN ) | PSTRING_4_BE	1837:5:42565:42624	333114	54	True				
ANR	334703	AssignmentExpression	m -> str_flags = ( m -> str_flags & ~PSTRING_LEN ) | PSTRING_4_BE		333114	0		=			
ANR	334704	PtrMemberAccess	m -> str_flags		333114	0					
ANR	334705	Identifier	m		333114	0					
ANR	334706	Identifier	str_flags		333114	1					
ANR	334707	InclusiveOrExpression	( m -> str_flags & ~PSTRING_LEN ) | PSTRING_4_BE		333114	1		|			
ANR	334708	BitAndExpression	m -> str_flags & ~PSTRING_LEN		333114	0		&			
ANR	334709	PtrMemberAccess	m -> str_flags		333114	0					
ANR	334710	Identifier	m		333114	0					
ANR	334711	Identifier	str_flags		333114	1					
ANR	334712	Identifier	~PSTRING_LEN		333114	1					
ANR	334713	Identifier	PSTRING_4_BE		333114	1					
ANR	334714	BreakStatement	break ;	1838:5:42631:42636	333114	55	True				
ANR	334715	Label	case CHAR_PSTRING_4_LE :	1839:4:42642:42664	333114	56	True				
ANR	334716	Identifier	CHAR_PSTRING_4_LE		333114	0					
ANR	334717	IfStatement	if ( m -> type != FILE_PSTRING )		333114	57					
ANR	334718	Condition	m -> type != FILE_PSTRING	1840:9:42675:42697	333114	0	True				
ANR	334719	EqualityExpression	m -> type != FILE_PSTRING		333114	0		!=			
ANR	334720	PtrMemberAccess	m -> type		333114	0					
ANR	334721	Identifier	m		333114	0					
ANR	334722	Identifier	type		333114	1					
ANR	334723	Identifier	FILE_PSTRING		333114	1					
ANR	334724	GotoStatement	goto bad ;	1841:6:42706:42714	333114	1	True				
ANR	334725	Identifier	bad		333114	0					
ANR	334726	ExpressionStatement	m -> str_flags = ( m -> str_flags & ~PSTRING_LEN ) | PSTRING_4_LE	1842:5:42721:42780	333114	58	True				
ANR	334727	AssignmentExpression	m -> str_flags = ( m -> str_flags & ~PSTRING_LEN ) | PSTRING_4_LE		333114	0		=			
ANR	334728	PtrMemberAccess	m -> str_flags		333114	0					
ANR	334729	Identifier	m		333114	0					
ANR	334730	Identifier	str_flags		333114	1					
ANR	334731	InclusiveOrExpression	( m -> str_flags & ~PSTRING_LEN ) | PSTRING_4_LE		333114	1		|			
ANR	334732	BitAndExpression	m -> str_flags & ~PSTRING_LEN		333114	0		&			
ANR	334733	PtrMemberAccess	m -> str_flags		333114	0					
ANR	334734	Identifier	m		333114	0					
ANR	334735	Identifier	str_flags		333114	1					
ANR	334736	Identifier	~PSTRING_LEN		333114	1					
ANR	334737	Identifier	PSTRING_4_LE		333114	1					
ANR	334738	BreakStatement	break ;	1843:5:42787:42792	333114	59	True				
ANR	334739	Label	case CHAR_PSTRING_LENGTH_INCLUDES_ITSELF :	1844:4:42798:42838	333114	60	True				
ANR	334740	Identifier	CHAR_PSTRING_LENGTH_INCLUDES_ITSELF		333114	0					
ANR	334741	IfStatement	if ( m -> type != FILE_PSTRING )		333114	61					
ANR	334742	Condition	m -> type != FILE_PSTRING	1845:9:42849:42871	333114	0	True				
ANR	334743	EqualityExpression	m -> type != FILE_PSTRING		333114	0		!=			
ANR	334744	PtrMemberAccess	m -> type		333114	0					
ANR	334745	Identifier	m		333114	0					
ANR	334746	Identifier	type		333114	1					
ANR	334747	Identifier	FILE_PSTRING		333114	1					
ANR	334748	GotoStatement	goto bad ;	1846:6:42880:42888	333114	1	True				
ANR	334749	Identifier	bad		333114	0					
ANR	334750	ExpressionStatement	m -> str_flags |= PSTRING_LENGTH_INCLUDES_ITSELF	1847:5:42895:42941	333114	62	True				
ANR	334751	AssignmentExpression	m -> str_flags |= PSTRING_LENGTH_INCLUDES_ITSELF		333114	0		|=			
ANR	334752	PtrMemberAccess	m -> str_flags		333114	0					
ANR	334753	Identifier	m		333114	0					
ANR	334754	Identifier	str_flags		333114	1					
ANR	334755	Identifier	PSTRING_LENGTH_INCLUDES_ITSELF		333114	1					
ANR	334756	BreakStatement	break ;	1848:5:42948:42953	333114	63	True				
ANR	334757	Label	default :	1849:4:42959:42966	333114	64	True				
ANR	334758	Identifier	default		333114	0					
ANR	334759	Label	bad :	1850:4:42972:42975	333114	65	True				
ANR	334760	Identifier	bad		333114	0					
ANR	334761	IfStatement	if ( ms -> flags & MAGIC_CHECK )		333114	66					
ANR	334762	Condition	ms -> flags & MAGIC_CHECK	1851:9:42986:43008	333114	0	True				
ANR	334763	BitAndExpression	ms -> flags & MAGIC_CHECK		333114	0		&			
ANR	334764	PtrMemberAccess	ms -> flags		333114	0					
ANR	334765	Identifier	ms		333114	0					
ANR	334766	Identifier	flags		333114	1					
ANR	334767	Identifier	MAGIC_CHECK		333114	1					
ANR	334768	Statement	file_magwarn	1852:6:43017:43028	333114	1	True				
ANR	334769	Statement	(	1852:18:43029:43029	333114	67	True				
ANR	334770	Statement	ms	1852:19:43030:43031	333114	68	True				
ANR	334771	Statement	","	1852:21:43032:43032	333114	69	True				
ANR	334772	Statement	"""string extension `%c' """	1853:10:43044:43067	333114	70	True				
ANR	334773	Statement	"""invalid"""	1854:10:43079:43087	333114	71	True				
ANR	334774	Statement	","	1854:19:43088:43088	333114	72	True				
ANR	334775	Statement	*	1854:21:43090:43090	333114	73	True				
ANR	334776	Statement	l	1854:22:43091:43091	333114	74	True				
ANR	334777	Statement	)	1854:23:43092:43092	333114	75	True				
ANR	334778	ExpressionStatement		1854:24:43093:43093	333114	76	True				
ANR	334779	ReturnStatement	return - 1 ;	1855:5:43100:43109	333114	77	True				
ANR	334780	UnaryOperationExpression	- 1		333114	0					
ANR	334781	UnaryOperator	-		333114	0					
ANR	334782	PrimaryExpression	1		333114	1					
ANR	334783	IfStatement	if ( l [ 1 ] == '/' && ! isspace ( ( unsigned char ) l [ 2 ] ) )		333114	1					
ANR	334784	Condition	l [ 1 ] == '/' && ! isspace ( ( unsigned char ) l [ 2 ] )	1858:8:43170:43221	333114	0	True				
ANR	334785	AndExpression	l [ 1 ] == '/' && ! isspace ( ( unsigned char ) l [ 2 ] )		333114	0		&&			
ANR	334786	EqualityExpression	l [ 1 ] == '/'		333114	0		==			
ANR	334787	ArrayIndexing	l [ 1 ]		333114	0					
ANR	334788	Identifier	l		333114	0					
ANR	334789	PrimaryExpression	1		333114	1					
ANR	334790	PrimaryExpression	'/'		333114	1					
ANR	334791	UnaryOperationExpression	! isspace ( ( unsigned char ) l [ 2 ] )		333114	1					
ANR	334792	UnaryOperator	!		333114	0					
ANR	334793	CallExpression	isspace ( ( unsigned char ) l [ 2 ] )		333114	1					
ANR	334794	Callee	isspace		333114	0					
ANR	334795	Identifier	isspace		333114	0					
ANR	334796	ArgumentList	( unsigned char ) l [ 2 ]		333114	1					
ANR	334797	Argument	( unsigned char ) l [ 2 ]		333114	0					
ANR	334798	CastExpression	( unsigned char ) l [ 2 ]		333114	0					
ANR	334799	CastTarget	unsigned char		333114	0					
ANR	334800	ArrayIndexing	l [ 2 ]		333114	1					
ANR	334801	Identifier	l		333114	0					
ANR	334802	PrimaryExpression	2		333114	1					
ANR	334803	ExpressionStatement	l ++	1860:5:43229:43232	333114	1	True				
ANR	334804	PostIncDecOperationExpression	l ++		333114	0					
ANR	334805	Identifier	l		333114	0					
ANR	334806	IncDec	++		333114	1					
ANR	334807	IfStatement	"if ( string_modifier_check ( ms , m ) == - 1 )"		333114	2					
ANR	334808	Condition	"string_modifier_check ( ms , m ) == - 1"	1862:7:43246:43279	333114	0	True				
ANR	334809	EqualityExpression	"string_modifier_check ( ms , m ) == - 1"		333114	0		==			
ANR	334810	CallExpression	"string_modifier_check ( ms , m )"		333114	0					
ANR	334811	Callee	string_modifier_check		333114	0					
ANR	334812	Identifier	string_modifier_check		333114	0					
ANR	334813	ArgumentList	ms		333114	1					
ANR	334814	Argument	ms		333114	0					
ANR	334815	Identifier	ms		333114	0					
ANR	334816	Argument	m		333114	1					
ANR	334817	Identifier	m		333114	0					
ANR	334818	UnaryOperationExpression	- 1		333114	1					
ANR	334819	UnaryOperator	-		333114	0					
ANR	334820	PrimaryExpression	1		333114	1					
ANR	334821	ReturnStatement	return - 1 ;	1863:4:43286:43295	333114	1	True				
ANR	334822	UnaryOperationExpression	- 1		333114	0					
ANR	334823	UnaryOperator	-		333114	0					
ANR	334824	PrimaryExpression	1		333114	1					
ANR	334825	ElseStatement	else		333114	0					
ANR	334826	CompoundStatement		369:7:8875:8875	333114	0					
ANR	334827	IfStatement	if ( ms -> flags & MAGIC_CHECK )		333114	0					
ANR	334828	Condition	ms -> flags & MAGIC_CHECK	1866:7:43317:43339	333114	0	True				
ANR	334829	BitAndExpression	ms -> flags & MAGIC_CHECK		333114	0		&			
ANR	334830	PtrMemberAccess	ms -> flags		333114	0					
ANR	334831	Identifier	ms		333114	0					
ANR	334832	Identifier	flags		333114	1					
ANR	334833	Identifier	MAGIC_CHECK		333114	1					
ANR	334834	ExpressionStatement	"file_magwarn ( ms , ""invalid string op: %c"" , * t )"	1867:4:43346:43391	333114	1	True				
ANR	334835	CallExpression	"file_magwarn ( ms , ""invalid string op: %c"" , * t )"		333114	0					
ANR	334836	Callee	file_magwarn		333114	0					
ANR	334837	Identifier	file_magwarn		333114	0					
ANR	334838	ArgumentList	ms		333114	1					
ANR	334839	Argument	ms		333114	0					
ANR	334840	Identifier	ms		333114	0					
ANR	334841	Argument	"""invalid string op: %c"""		333114	1					
ANR	334842	PrimaryExpression	"""invalid string op: %c"""		333114	0					
ANR	334843	Argument	* t		333114	2					
ANR	334844	UnaryOperationExpression	* t		333114	0					
ANR	334845	UnaryOperator	*		333114	0					
ANR	334846	Identifier	t		333114	1					
ANR	334847	ReturnStatement	return - 1 ;	1868:3:43396:43405	333114	1	True				
ANR	334848	UnaryOperationExpression	- 1		333114	0					
ANR	334849	UnaryOperator	-		333114	0					
ANR	334850	PrimaryExpression	1		333114	1					
ANR	334851	ExpressionStatement	EATAB	1875:1:43548:43553	333114	34	True				
ANR	334852	Identifier	EATAB		333114	0					
ANR	334853	SwitchStatement	switch ( * l )		333114	35					
ANR	334854	Condition	* l	1877:9:43567:43568	333114	0	True				
ANR	334855	UnaryOperationExpression	* l		333114	0					
ANR	334856	UnaryOperator	*		333114	0					
ANR	334857	Identifier	l		333114	1					
ANR	334858	CompoundStatement		381:13:9138:9138	333114	1					
ANR	334859	Label	case '>' :	1878:1:43574:43582	333114	0	True				
ANR	334860	Label	case '<' :	1879:1:43585:43593	333114	1	True				
ANR	334861	ExpressionStatement	m -> reln = * l	1880:4:43599:43611	333114	2	True				
ANR	334862	AssignmentExpression	m -> reln = * l		333114	0		=			
ANR	334863	PtrMemberAccess	m -> reln		333114	0					
ANR	334864	Identifier	m		333114	0					
ANR	334865	Identifier	reln		333114	1					
ANR	334866	UnaryOperationExpression	* l		333114	1					
ANR	334867	UnaryOperator	*		333114	0					
ANR	334868	Identifier	l		333114	1					
ANR	334869	ExpressionStatement	++ l	1881:4:43617:43620	333114	3	True				
ANR	334870	UnaryExpression	++ l		333114	0					
ANR	334871	IncDec	++		333114	0					
ANR	334872	Identifier	l		333114	1					
ANR	334873	IfStatement	if ( * l == '=' )		333114	4					
ANR	334874	Condition	* l == '='	1882:6:43628:43636	333114	0	True				
ANR	334875	EqualityExpression	* l == '='		333114	0		==			
ANR	334876	UnaryOperationExpression	* l		333114	0					
ANR	334877	UnaryOperator	*		333114	0					
ANR	334878	Identifier	l		333114	1					
ANR	334879	PrimaryExpression	'='		333114	1					
ANR	334880	CompoundStatement		386:17:9206:9206	333114	1					
ANR	334881	IfStatement	if ( ms -> flags & MAGIC_CHECK )		333114	0					
ANR	334882	Condition	ms -> flags & MAGIC_CHECK	1883:7:43648:43670	333114	0	True				
ANR	334883	BitAndExpression	ms -> flags & MAGIC_CHECK		333114	0		&			
ANR	334884	PtrMemberAccess	ms -> flags		333114	0					
ANR	334885	Identifier	ms		333114	0					
ANR	334886	Identifier	flags		333114	1					
ANR	334887	Identifier	MAGIC_CHECK		333114	1					
ANR	334888	CompoundStatement		387:32:9240:9240	333114	1					
ANR	334889	ExpressionStatement	"file_magwarn ( ms , ""%c= not supported"" , m -> reln )"	1884:4:43679:43733	333114	0	True				
ANR	334890	CallExpression	"file_magwarn ( ms , ""%c= not supported"" , m -> reln )"		333114	0					
ANR	334891	Callee	file_magwarn		333114	0					
ANR	334892	Identifier	file_magwarn		333114	0					
ANR	334893	ArgumentList	ms		333114	1					
ANR	334894	Argument	ms		333114	0					
ANR	334895	Identifier	ms		333114	0					
ANR	334896	Argument	"""%c= not supported"""		333114	1					
ANR	334897	PrimaryExpression	"""%c= not supported"""		333114	0					
ANR	334898	Argument	m -> reln		333114	2					
ANR	334899	PtrMemberAccess	m -> reln		333114	0					
ANR	334900	Identifier	m		333114	0					
ANR	334901	Identifier	reln		333114	1					
ANR	334902	ReturnStatement	return - 1 ;	1886:4:43739:43748	333114	1	True				
ANR	334903	UnaryOperationExpression	- 1		333114	0					
ANR	334904	UnaryOperator	-		333114	0					
ANR	334905	PrimaryExpression	1		333114	1					
ANR	334906	ExpressionStatement	++ l	1888:5:43760:43763	333114	1	True				
ANR	334907	UnaryExpression	++ l		333114	0					
ANR	334908	IncDec	++		333114	0					
ANR	334909	Identifier	l		333114	1					
ANR	334910	BreakStatement	break ;	1890:2:43771:43776	333114	5	True				
ANR	334911	Label	case '&' :	1892:1:43838:43846	333114	6	True				
ANR	334912	Label	case '^' :	1893:1:43849:43857	333114	7	True				
ANR	334913	Label	case '=' :	1894:1:43860:43868	333114	8	True				
ANR	334914	ExpressionStatement	m -> reln = * l	1895:4:43874:43886	333114	9	True				
ANR	334915	AssignmentExpression	m -> reln = * l		333114	0		=			
ANR	334916	PtrMemberAccess	m -> reln		333114	0					
ANR	334917	Identifier	m		333114	0					
ANR	334918	Identifier	reln		333114	1					
ANR	334919	UnaryOperationExpression	* l		333114	1					
ANR	334920	UnaryOperator	*		333114	0					
ANR	334921	Identifier	l		333114	1					
ANR	334922	ExpressionStatement	++ l	1896:4:43892:43895	333114	10	True				
ANR	334923	UnaryExpression	++ l		333114	0					
ANR	334924	IncDec	++		333114	0					
ANR	334925	Identifier	l		333114	1					
ANR	334926	IfStatement	if ( * l == '=' )		333114	11					
ANR	334927	Condition	* l == '='	1897:6:43903:43911	333114	0	True				
ANR	334928	EqualityExpression	* l == '='		333114	0		==			
ANR	334929	UnaryOperationExpression	* l		333114	0					
ANR	334930	UnaryOperator	*		333114	0					
ANR	334931	Identifier	l		333114	1					
ANR	334932	PrimaryExpression	'='		333114	1					
ANR	334933	CompoundStatement		401:17:9481:9481	333114	1					
ANR	334934	ExpressionStatement	++ l	1899:5:43958:43961	333114	0	True				
ANR	334935	UnaryExpression	++ l		333114	0					
ANR	334936	IncDec	++		333114	0					
ANR	334937	Identifier	l		333114	1					
ANR	334938	BreakStatement	break ;	1901:2:43969:43974	333114	12	True				
ANR	334939	Label	case '!' :	1902:1:43977:43985	333114	13	True				
ANR	334940	ExpressionStatement	m -> reln = * l	1903:2:43989:44001	333114	14	True				
ANR	334941	AssignmentExpression	m -> reln = * l		333114	0		=			
ANR	334942	PtrMemberAccess	m -> reln		333114	0					
ANR	334943	Identifier	m		333114	0					
ANR	334944	Identifier	reln		333114	1					
ANR	334945	UnaryOperationExpression	* l		333114	1					
ANR	334946	UnaryOperator	*		333114	0					
ANR	334947	Identifier	l		333114	1					
ANR	334948	ExpressionStatement	++ l	1904:2:44005:44008	333114	15	True				
ANR	334949	UnaryExpression	++ l		333114	0					
ANR	334950	IncDec	++		333114	0					
ANR	334951	Identifier	l		333114	1					
ANR	334952	BreakStatement	break ;	1905:2:44012:44017	333114	16	True				
ANR	334953	Label	default :	1906:1:44020:44027	333114	17	True				
ANR	334954	Identifier	default		333114	0					
ANR	334955	ExpressionStatement	m -> reln = '='	1907:4:44033:44046	333114	18	True				
ANR	334956	AssignmentExpression	m -> reln = '='		333114	0		=			
ANR	334957	PtrMemberAccess	m -> reln		333114	0					
ANR	334958	Identifier	m		333114	0					
ANR	334959	Identifier	reln		333114	1					
ANR	334960	PrimaryExpression	'='		333114	1					
ANR	334961	IfStatement	if ( * l == 'x' && ( ( isascii ( ( unsigned char ) l [ 1 ] ) && isspace ( ( unsigned char ) l [ 1 ] ) ) || ! l [ 1 ] ) )		333114	19					
ANR	334962	Condition	* l == 'x' && ( ( isascii ( ( unsigned char ) l [ 1 ] ) && isspace ( ( unsigned char ) l [ 1 ] ) ) || ! l [ 1 ] )	1908:6:44081:44173	333114	0	True				
ANR	334963	AndExpression	* l == 'x' && ( ( isascii ( ( unsigned char ) l [ 1 ] ) && isspace ( ( unsigned char ) l [ 1 ] ) ) || ! l [ 1 ] )		333114	0		&&			
ANR	334964	EqualityExpression	* l == 'x'		333114	0		==			
ANR	334965	UnaryOperationExpression	* l		333114	0					
ANR	334966	UnaryOperator	*		333114	0					
ANR	334967	Identifier	l		333114	1					
ANR	334968	PrimaryExpression	'x'		333114	1					
ANR	334969	OrExpression	( isascii ( ( unsigned char ) l [ 1 ] ) && isspace ( ( unsigned char ) l [ 1 ] ) ) || ! l [ 1 ]		333114	1		||			
ANR	334970	AndExpression	isascii ( ( unsigned char ) l [ 1 ] ) && isspace ( ( unsigned char ) l [ 1 ] )		333114	0		&&			
ANR	334971	CallExpression	isascii ( ( unsigned char ) l [ 1 ] )		333114	0					
ANR	334972	Callee	isascii		333114	0					
ANR	334973	Identifier	isascii		333114	0					
ANR	334974	ArgumentList	( unsigned char ) l [ 1 ]		333114	1					
ANR	334975	Argument	( unsigned char ) l [ 1 ]		333114	0					
ANR	334976	CastExpression	( unsigned char ) l [ 1 ]		333114	0					
ANR	334977	CastTarget	unsigned char		333114	0					
ANR	334978	ArrayIndexing	l [ 1 ]		333114	1					
ANR	334979	Identifier	l		333114	0					
ANR	334980	PrimaryExpression	1		333114	1					
ANR	334981	CallExpression	isspace ( ( unsigned char ) l [ 1 ] )		333114	1					
ANR	334982	Callee	isspace		333114	0					
ANR	334983	Identifier	isspace		333114	0					
ANR	334984	ArgumentList	( unsigned char ) l [ 1 ]		333114	1					
ANR	334985	Argument	( unsigned char ) l [ 1 ]		333114	0					
ANR	334986	CastExpression	( unsigned char ) l [ 1 ]		333114	0					
ANR	334987	CastTarget	unsigned char		333114	0					
ANR	334988	ArrayIndexing	l [ 1 ]		333114	1					
ANR	334989	Identifier	l		333114	0					
ANR	334990	PrimaryExpression	1		333114	1					
ANR	334991	UnaryOperationExpression	! l [ 1 ]		333114	1					
ANR	334992	UnaryOperator	!		333114	0					
ANR	334993	ArrayIndexing	l [ 1 ]		333114	1					
ANR	334994	Identifier	l		333114	0					
ANR	334995	PrimaryExpression	1		333114	1					
ANR	334996	CompoundStatement		413:47:9743:9743	333114	1					
ANR	334997	ExpressionStatement	m -> reln = * l	1910:3:44181:44193	333114	0	True				
ANR	334998	AssignmentExpression	m -> reln = * l		333114	0		=			
ANR	334999	PtrMemberAccess	m -> reln		333114	0					
ANR	335000	Identifier	m		333114	0					
ANR	335001	Identifier	reln		333114	1					
ANR	335002	UnaryOperationExpression	* l		333114	1					
ANR	335003	UnaryOperator	*		333114	0					
ANR	335004	Identifier	l		333114	1					
ANR	335005	ExpressionStatement	++ l	1911:3:44198:44201	333114	1	True				
ANR	335006	UnaryExpression	++ l		333114	0					
ANR	335007	IncDec	++		333114	0					
ANR	335008	Identifier	l		333114	1					
ANR	335009	BreakStatement	break ;	1913:2:44209:44214	333114	20	True				
ANR	335010	IfStatement	"if ( m -> reln != 'x' && getvalue ( ms , m , & l , action ) )"		333114	36					
ANR	335011	Condition	"m -> reln != 'x' && getvalue ( ms , m , & l , action )"	1918:5:44282:44326	333114	0	True				
ANR	335012	AndExpression	"m -> reln != 'x' && getvalue ( ms , m , & l , action )"		333114	0		&&			
ANR	335013	EqualityExpression	m -> reln != 'x'		333114	0		!=			
ANR	335014	PtrMemberAccess	m -> reln		333114	0					
ANR	335015	Identifier	m		333114	0					
ANR	335016	Identifier	reln		333114	1					
ANR	335017	PrimaryExpression	'x'		333114	1					
ANR	335018	CallExpression	"getvalue ( ms , m , & l , action )"		333114	1					
ANR	335019	Callee	getvalue		333114	0					
ANR	335020	Identifier	getvalue		333114	0					
ANR	335021	ArgumentList	ms		333114	1					
ANR	335022	Argument	ms		333114	0					
ANR	335023	Identifier	ms		333114	0					
ANR	335024	Argument	m		333114	1					
ANR	335025	Identifier	m		333114	0					
ANR	335026	Argument	& l		333114	2					
ANR	335027	UnaryOperationExpression	& l		333114	0					
ANR	335028	UnaryOperator	&		333114	0					
ANR	335029	Identifier	l		333114	1					
ANR	335030	Argument	action		333114	3					
ANR	335031	Identifier	action		333114	0					
ANR	335032	ReturnStatement	return - 1 ;	1919:2:44331:44340	333114	1	True				
ANR	335033	UnaryOperationExpression	- 1		333114	0					
ANR	335034	UnaryOperator	-		333114	0					
ANR	335035	PrimaryExpression	1		333114	1					
ANR	335036	ExpressionStatement	EATAB	1930:1:44533:44538	333114	37	True				
ANR	335037	Identifier	EATAB		333114	0					
ANR	335038	IfStatement	if ( l [ 0 ] == '\\b' )		333114	38					
ANR	335039	Condition	l [ 0 ] == '\\b'	1931:5:44545:44556	333114	0	True				
ANR	335040	EqualityExpression	l [ 0 ] == '\\b'		333114	0		==			
ANR	335041	ArrayIndexing	l [ 0 ]		333114	0					
ANR	335042	Identifier	l		333114	0					
ANR	335043	PrimaryExpression	0		333114	1					
ANR	335044	PrimaryExpression	'\\b'		333114	1					
ANR	335045	CompoundStatement		435:19:10126:10126	333114	1					
ANR	335046	ExpressionStatement	++ l	1932:2:44563:44566	333114	0	True				
ANR	335047	UnaryExpression	++ l		333114	0					
ANR	335048	IncDec	++		333114	0					
ANR	335049	Identifier	l		333114	1					
ANR	335050	ExpressionStatement	m -> flag |= NOSPACE	1933:2:44570:44588	333114	1	True				
ANR	335051	AssignmentExpression	m -> flag |= NOSPACE		333114	0		|=			
ANR	335052	PtrMemberAccess	m -> flag		333114	0					
ANR	335053	Identifier	m		333114	0					
ANR	335054	Identifier	flag		333114	1					
ANR	335055	Identifier	NOSPACE		333114	1					
ANR	335056	ElseStatement	else		333114	0					
ANR	335057	IfStatement	if ( ( l [ 0 ] == '\\\\' ) && ( l [ 1 ] == 'b' ) )		333114	0					
ANR	335058	Condition	( l [ 0 ] == '\\\\' ) && ( l [ 1 ] == 'b' )	1934:12:44602:44632	333114	0	True				
ANR	335059	AndExpression	( l [ 0 ] == '\\\\' ) && ( l [ 1 ] == 'b' )		333114	0		&&			
ANR	335060	EqualityExpression	l [ 0 ] == '\\\\'		333114	0		==			
ANR	335061	ArrayIndexing	l [ 0 ]		333114	0					
ANR	335062	Identifier	l		333114	0					
ANR	335063	PrimaryExpression	0		333114	1					
ANR	335064	PrimaryExpression	'\\\\'		333114	1					
ANR	335065	EqualityExpression	l [ 1 ] == 'b'		333114	1		==			
ANR	335066	ArrayIndexing	l [ 1 ]		333114	0					
ANR	335067	Identifier	l		333114	0					
ANR	335068	PrimaryExpression	1		333114	1					
ANR	335069	PrimaryExpression	'b'		333114	1					
ANR	335070	CompoundStatement		438:45:10202:10202	333114	1					
ANR	335071	ExpressionStatement	++ l	1935:2:44639:44642	333114	0	True				
ANR	335072	UnaryExpression	++ l		333114	0					
ANR	335073	IncDec	++		333114	0					
ANR	335074	Identifier	l		333114	1					
ANR	335075	ExpressionStatement	++ l	1936:2:44646:44649	333114	1	True				
ANR	335076	UnaryExpression	++ l		333114	0					
ANR	335077	IncDec	++		333114	0					
ANR	335078	Identifier	l		333114	1					
ANR	335079	ExpressionStatement	m -> flag |= NOSPACE	1937:2:44653:44671	333114	2	True				
ANR	335080	AssignmentExpression	m -> flag |= NOSPACE		333114	0		|=			
ANR	335081	PtrMemberAccess	m -> flag		333114	0					
ANR	335082	Identifier	m		333114	0					
ANR	335083	Identifier	flag		333114	1					
ANR	335084	Identifier	NOSPACE		333114	1					
ANR	335085	ForStatement	for ( i = 0 ; ( m -> desc [ i ++ ] = * l ++ ) != '\\0' && i < sizeof ( m -> desc ) ; )		333114	39					
ANR	335086	ForInit	i = 0 ;	1939:6:44682:44687	333114	0	True				
ANR	335087	AssignmentExpression	i = 0		333114	0		=			
ANR	335088	Identifier	i		333114	0					
ANR	335089	PrimaryExpression	0		333114	1					
ANR	335090	Condition	( m -> desc [ i ++ ] = * l ++ ) != '\\0' && i < sizeof ( m -> desc )	1939:13:44689:44740	333114	1	True				
ANR	335091	AndExpression	( m -> desc [ i ++ ] = * l ++ ) != '\\0' && i < sizeof ( m -> desc )		333114	0		&&			
ANR	335092	EqualityExpression	( m -> desc [ i ++ ] = * l ++ ) != '\\0'		333114	0		!=			
ANR	335093	AssignmentExpression	m -> desc [ i ++ ] = * l ++		333114	0		=			
ANR	335094	ArrayIndexing	m -> desc [ i ++ ]		333114	0					
ANR	335095	PtrMemberAccess	m -> desc		333114	0					
ANR	335096	Identifier	m		333114	0					
ANR	335097	Identifier	desc		333114	1					
ANR	335098	PostIncDecOperationExpression	i ++		333114	1					
ANR	335099	Identifier	i		333114	0					
ANR	335100	IncDec	++		333114	1					
ANR	335101	UnaryOperationExpression	* l ++		333114	1					
ANR	335102	UnaryOperator	*		333114	0					
ANR	335103	PostIncDecOperationExpression	l ++		333114	1					
ANR	335104	Identifier	l		333114	0					
ANR	335105	IncDec	++		333114	1					
ANR	335106	PrimaryExpression	'\\0'		333114	1					
ANR	335107	RelationalExpression	i < sizeof ( m -> desc )		333114	1		<			
ANR	335108	Identifier	i		333114	0					
ANR	335109	SizeofExpression	sizeof ( m -> desc )		333114	1					
ANR	335110	Sizeof	sizeof		333114	0					
ANR	335111	PtrMemberAccess	m -> desc		333114	1					
ANR	335112	Identifier	m		333114	0					
ANR	335113	Identifier	desc		333114	1					
ANR	335114	ContinueStatement	continue ;	1940:2:44747:44755	333114	2	True				
ANR	335115	IfStatement	if ( i == sizeof ( m -> desc ) )		333114	40					
ANR	335116	Condition	i == sizeof ( m -> desc )	1941:5:44762:44781	333114	0	True				
ANR	335117	EqualityExpression	i == sizeof ( m -> desc )		333114	0		==			
ANR	335118	Identifier	i		333114	0					
ANR	335119	SizeofExpression	sizeof ( m -> desc )		333114	1					
ANR	335120	Sizeof	sizeof		333114	0					
ANR	335121	PtrMemberAccess	m -> desc		333114	1					
ANR	335122	Identifier	m		333114	0					
ANR	335123	Identifier	desc		333114	1					
ANR	335124	CompoundStatement		445:27:10351:10351	333114	1					
ANR	335125	ExpressionStatement	m -> desc [ sizeof ( m -> desc ) - 1 ] = '\\0'	1942:2:44788:44823	333114	0	True				
ANR	335126	AssignmentExpression	m -> desc [ sizeof ( m -> desc ) - 1 ] = '\\0'		333114	0		=			
ANR	335127	ArrayIndexing	m -> desc [ sizeof ( m -> desc ) - 1 ]		333114	0					
ANR	335128	PtrMemberAccess	m -> desc		333114	0					
ANR	335129	Identifier	m		333114	0					
ANR	335130	Identifier	desc		333114	1					
ANR	335131	AdditiveExpression	sizeof ( m -> desc ) - 1		333114	1		-			
ANR	335132	SizeofExpression	sizeof ( m -> desc )		333114	0					
ANR	335133	Sizeof	sizeof		333114	0					
ANR	335134	PtrMemberAccess	m -> desc		333114	1					
ANR	335135	Identifier	m		333114	0					
ANR	335136	Identifier	desc		333114	1					
ANR	335137	PrimaryExpression	1		333114	1					
ANR	335138	PrimaryExpression	'\\0'		333114	1					
ANR	335139	IfStatement	if ( ms -> flags & MAGIC_CHECK )		333114	1					
ANR	335140	Condition	ms -> flags & MAGIC_CHECK	1943:6:44831:44853	333114	0	True				
ANR	335141	BitAndExpression	ms -> flags & MAGIC_CHECK		333114	0		&			
ANR	335142	PtrMemberAccess	ms -> flags		333114	0					
ANR	335143	Identifier	ms		333114	0					
ANR	335144	Identifier	flags		333114	1					
ANR	335145	Identifier	MAGIC_CHECK		333114	1					
ANR	335146	ExpressionStatement	"file_magwarn ( ms , ""description `%s' truncated"" , m -> desc )"	1944:3:44859:44914	333114	1	True				
ANR	335147	CallExpression	"file_magwarn ( ms , ""description `%s' truncated"" , m -> desc )"		333114	0					
ANR	335148	Callee	file_magwarn		333114	0					
ANR	335149	Identifier	file_magwarn		333114	0					
ANR	335150	ArgumentList	ms		333114	1					
ANR	335151	Argument	ms		333114	0					
ANR	335152	Identifier	ms		333114	0					
ANR	335153	Argument	"""description `%s' truncated"""		333114	1					
ANR	335154	PrimaryExpression	"""description `%s' truncated"""		333114	0					
ANR	335155	Argument	m -> desc		333114	2					
ANR	335156	PtrMemberAccess	m -> desc		333114	0					
ANR	335157	Identifier	m		333114	0					
ANR	335158	Identifier	desc		333114	1					
ANR	335159	IfStatement	if ( ms -> flags & MAGIC_CHECK )		333114	41					
ANR	335160	Condition	ms -> flags & MAGIC_CHECK	1951:12:45050:45072	333114	0	True				
ANR	335161	BitAndExpression	ms -> flags & MAGIC_CHECK		333114	0		&			
ANR	335162	PtrMemberAccess	ms -> flags		333114	0					
ANR	335163	Identifier	ms		333114	0					
ANR	335164	Identifier	flags		333114	1					
ANR	335165	Identifier	MAGIC_CHECK		333114	1					
ANR	335166	CompoundStatement		455:37:10642:10642	333114	1					
ANR	335167	IfStatement	"if ( check_format ( ms , m ) == - 1 )"		333114	0					
ANR	335168	Condition	"check_format ( ms , m ) == - 1"	1952:6:45083:45107	333114	0	True				
ANR	335169	EqualityExpression	"check_format ( ms , m ) == - 1"		333114	0		==			
ANR	335170	CallExpression	"check_format ( ms , m )"		333114	0					
ANR	335171	Callee	check_format		333114	0					
ANR	335172	Identifier	check_format		333114	0					
ANR	335173	ArgumentList	ms		333114	1					
ANR	335174	Argument	ms		333114	0					
ANR	335175	Identifier	ms		333114	0					
ANR	335176	Argument	m		333114	1					
ANR	335177	Identifier	m		333114	0					
ANR	335178	UnaryOperationExpression	- 1		333114	1					
ANR	335179	UnaryOperator	-		333114	0					
ANR	335180	PrimaryExpression	1		333114	1					
ANR	335181	ReturnStatement	return - 1 ;	1953:3:45113:45122	333114	1	True				
ANR	335182	UnaryOperationExpression	- 1		333114	0					
ANR	335183	UnaryOperator	-		333114	0					
ANR	335184	PrimaryExpression	1		333114	1					
ANR	335185	ExpressionStatement	m -> mimetype [ 0 ] = '\\0'	1955:1:45128:45149	333114	42	True				
ANR	335186	AssignmentExpression	m -> mimetype [ 0 ] = '\\0'		333114	0		=			
ANR	335187	ArrayIndexing	m -> mimetype [ 0 ]		333114	0					
ANR	335188	PtrMemberAccess	m -> mimetype		333114	0					
ANR	335189	Identifier	m		333114	0					
ANR	335190	Identifier	mimetype		333114	1					
ANR	335191	PrimaryExpression	0		333114	1					
ANR	335192	PrimaryExpression	'\\0'		333114	1					
ANR	335193	ReturnStatement	return 0 ;	1956:1:45188:45196	333114	43	True				
ANR	335194	PrimaryExpression	0		333114	0					
ANR	335195	ReturnType	int		333114	1					
ANR	335196	Identifier	parse		333114	2					
ANR	335197	ParameterList	"struct magic_set * ms , struct magic_entry * me , const char * line , size_t lineno , int action"		333114	3					
ANR	335198	Parameter	struct magic_set * ms	1495:6:34337:34356	333114	0	True				
ANR	335199	ParameterType	struct magic_set *		333114	0					
ANR	335200	Identifier	ms		333114	1					
ANR	335201	Parameter	struct magic_entry * me	1495:28:34359:34380	333114	1	True				
ANR	335202	ParameterType	struct magic_entry *		333114	0					
ANR	335203	Identifier	me		333114	1					
ANR	335204	Parameter	const char * line	1495:52:34383:34398	333114	2	True				
ANR	335205	ParameterType	const char *		333114	0					
ANR	335206	Identifier	line		333114	1					
ANR	335207	Parameter	size_t lineno	1496:4:34405:34417	333114	3	True				
ANR	335208	ParameterType	size_t		333114	0					
ANR	335209	Identifier	lineno		333114	1					
ANR	335210	Parameter	int action	1496:19:34420:34429	333114	4	True				
ANR	335211	ParameterType	int		333114	0					
ANR	335212	Identifier	action		333114	1					
ANR	335213	CFGEntryNode	ENTRY		333114		True				
ANR	335214	CFGExitNode	EXIT		333114		True				
ANR	335215	Symbol	FILE_BEDOUBLE		333114						
ANR	335216	Symbol	INDIR		333114						
ANR	335217	Symbol	m -> cond		333114						
ANR	335218	Symbol	* m -> mimetype		333114						
ANR	335219	Symbol	m -> in_offset		333114						
ANR	335220	Symbol	PSTRING_4_LE		333114						
ANR	335221	Symbol	STRING_COMPACT_WHITESPACE		333114						
ANR	335222	Symbol	REGEX_OFFSET_START		333114						
ANR	335223	Symbol	PSTRING_2_BE		333114						
ANR	335224	Symbol	me -> mp		333114						
ANR	335225	Symbol	m -> type		333114						
ANR	335226	Symbol	len		333114						
ANR	335227	Symbol	FILE_LELONG		333114						
ANR	335228	Symbol	OFFADD		333114						
ANR	335229	Symbol	action		333114						
ANR	335230	Symbol	isdigit		333114						
ANR	335231	Symbol	FILE_BELONG		333114						
ANR	335232	Symbol	CAST		333114						
ANR	335233	Symbol	FILE_INVALID		333114						
ANR	335234	Symbol	val		333114						
ANR	335235	Symbol	isspace		333114						
ANR	335236	Symbol	diff		333114						
ANR	335237	Symbol	STRING_COMPACT_OPTIONAL_WHITESPACE		333114						
ANR	335238	Symbol	string_modifier_check		333114						
ANR	335239	Symbol	FILE_LEID3		333114						
ANR	335240	Symbol	ms -> flags		333114						
ANR	335241	Symbol	m -> lineno		333114						
ANR	335242	Symbol	FILE_LONG		333114						
ANR	335243	Symbol	special_tbl		333114						
ANR	335244	Symbol	PSTRING_LENGTH_INCLUDES_ITSELF		333114						
ANR	335245	Symbol	isalpha		333114						
ANR	335246	Symbol	PSTRING_2_LE		333114						
ANR	335247	Symbol	* m -> desc		333114						
ANR	335248	Symbol	UNSIGNED		333114						
ANR	335249	Symbol	m -> flag		333114						
ANR	335250	Symbol	file_check_mem		333114						
ANR	335251	Symbol	* ms		333114						
ANR	335252	Symbol	FILE_BESHORT		333114						
ANR	335253	Symbol	strtoull		333114						
ANR	335254	Symbol	cont_level		333114						
ANR	335255	Symbol	FILE_OPINDIRECT		333114						
ANR	335256	Symbol	get_type		333114						
ANR	335257	Symbol	have_range		333114						
ANR	335258	Symbol	strtol		333114						
ANR	335259	Symbol	m -> in_type		333114						
ANR	335260	Symbol	m -> mimetype		333114						
ANR	335261	Symbol	* me		333114						
ANR	335262	Symbol	* * m		333114						
ANR	335263	Symbol	isascii		333114						
ANR	335264	Symbol	FILE_STRING		333114						
ANR	335265	Symbol	* ++ l		333114						
ANR	335266	Symbol	get_standard_integer_type		333114						
ANR	335267	Symbol	* nm		333114						
ANR	335268	Symbol	cnt		333114						
ANR	335269	Symbol	i		333114						
ANR	335270	Symbol	uint32_t		333114						
ANR	335271	Symbol	* l ++		333114						
ANR	335272	Symbol	FILE_PSTRING		333114						
ANR	335273	Symbol	l		333114						
ANR	335274	Symbol	m		333114						
ANR	335275	Symbol	NOSPACE		333114						
ANR	335276	Symbol	me -> max_count		333114						
ANR	335277	Symbol	STRING_TEXTTEST		333114						
ANR	335278	Symbol	t		333114						
ANR	335279	Symbol	FILE_MELONG		333114						
ANR	335280	Symbol	INDIROFFADD		333114						
ANR	335281	Symbol	MAGIC_CHECK		333114						
ANR	335282	Symbol	ALLOC_CHUNK		333114						
ANR	335283	Symbol	STRING_TRIM		333114						
ANR	335284	Symbol	STRING_BINTEST		333114						
ANR	335285	Symbol	m -> factor_op		333114						
ANR	335286	Symbol	FILE_BEID3		333114						
ANR	335287	Symbol	type_tbl		333114						
ANR	335288	Symbol	m -> num_mask		333114						
ANR	335289	Symbol	m -> desc		333114						
ANR	335290	Symbol	me		333114						
ANR	335291	Symbol	m -> in_op		333114						
ANR	335292	Symbol	get_cond		333114						
ANR	335293	Symbol	NULL		333114						
ANR	335294	Symbol	FILE_LESHORT		333114						
ANR	335295	Symbol	ms		333114						
ANR	335296	Symbol	m -> str_range		333114						
ANR	335297	Symbol	FILE_OPINVERSE		333114						
ANR	335298	Symbol	FILE_BYTE		333114						
ANR	335299	Symbol	last_cont_level		333114						
ANR	335300	Symbol	m -> cont_level		333114						
ANR	335301	Symbol	nm		333114						
ANR	335302	Symbol	line		333114						
ANR	335303	Symbol	m -> str_flags		333114						
ANR	335304	Symbol	FILE_OPDIVIDE		333114						
ANR	335305	Symbol	PSTRING_4_BE		333114						
ANR	335306	Symbol	~OFFADD		333114						
ANR	335307	Symbol	getvalue		333114						
ANR	335308	Symbol	m -> mask_op		333114						
ANR	335309	Symbol	m -> reln		333114						
ANR	335310	Symbol	strtoul		333114						
ANR	335311	Symbol	STRING_IGNORE_UPPERCASE		333114						
ANR	335312	Symbol	STRING_IGNORE_LOWERCASE		333114						
ANR	335313	Symbol	op		333114						
ANR	335314	Symbol	PSTRING_1_LE		333114						
ANR	335315	Symbol	get_op		333114						
ANR	335316	Symbol	file_signextend		333114						
ANR	335317	Symbol	check_cond		333114						
ANR	335318	Symbol	FILE_FACTOR_OP_NONE		333114						
ANR	335319	Symbol	FILE_LEDOUBLE		333114						
ANR	335320	Symbol	m -> offset		333114						
ANR	335321	Symbol	& l		333114						
ANR	335322	Symbol	lineno		333114						
ANR	335323	Symbol	IS_LIBMAGIC_STRING		333114						
ANR	335324	Symbol	* l		333114						
ANR	335325	Symbol	* m		333114						
ANR	335326	Symbol	check_format		333114						
ANR	335327	Symbol	~PSTRING_LEN		333114						
ANR	335328	Symbol	& t		333114						
ANR	335329	Symbol	me -> cont_count		333114						
ANR	335330	Symbol	* t		333114						
ANR	335331	Function	parse_strength	1963:8:45307:46581							
ANR	335332	FunctionDef	"parse_strength (struct magic_set * ms , struct magic_entry * me , const char * line)"		335331	0					
ANR	335333	CompoundStatement		1965:0:45390:46581	335331	0					
ANR	335334	IdentifierDeclStatement	const char * l = line ;	1966:1:45393:45413	335331	0	True				
ANR	335335	IdentifierDecl	* l = line		335331	0					
ANR	335336	IdentifierDeclType	const char *		335331	0					
ANR	335337	Identifier	l		335331	1					
ANR	335338	AssignmentExpression	* l = line		335331	2		=			
ANR	335339	Identifier	line		335331	0					
ANR	335340	Identifier	line		335331	1					
ANR	335341	IdentifierDeclStatement	char * el ;	1967:1:45416:45424	335331	1	True				
ANR	335342	IdentifierDecl	* el		335331	0					
ANR	335343	IdentifierDeclType	char *		335331	0					
ANR	335344	Identifier	el		335331	1					
ANR	335345	IdentifierDeclStatement	unsigned long factor ;	1968:1:45427:45447	335331	2	True				
ANR	335346	IdentifierDecl	factor		335331	0					
ANR	335347	IdentifierDeclType	unsigned long		335331	0					
ANR	335348	Identifier	factor		335331	1					
ANR	335349	IdentifierDeclStatement	struct magic * m = & me -> mp [ 0 ] ;	1969:1:45450:45478	335331	3	True				
ANR	335350	IdentifierDecl	* m = & me -> mp [ 0 ]		335331	0					
ANR	335351	IdentifierDeclType	struct magic *		335331	0					
ANR	335352	Identifier	m		335331	1					
ANR	335353	AssignmentExpression	* m = & me -> mp [ 0 ]		335331	2		=			
ANR	335354	Identifier	m		335331	0					
ANR	335355	UnaryOperationExpression	& me -> mp [ 0 ]		335331	1					
ANR	335356	UnaryOperator	&		335331	0					
ANR	335357	ArrayIndexing	me -> mp [ 0 ]		335331	1					
ANR	335358	PtrMemberAccess	me -> mp		335331	0					
ANR	335359	Identifier	me		335331	0					
ANR	335360	Identifier	mp		335331	1					
ANR	335361	PrimaryExpression	0		335331	1					
ANR	335362	IfStatement	if ( m -> factor_op != FILE_FACTOR_OP_NONE )		335331	4					
ANR	335363	Condition	m -> factor_op != FILE_FACTOR_OP_NONE	1971:5:45486:45520	335331	0	True				
ANR	335364	EqualityExpression	m -> factor_op != FILE_FACTOR_OP_NONE		335331	0		!=			
ANR	335365	PtrMemberAccess	m -> factor_op		335331	0					
ANR	335366	Identifier	m		335331	0					
ANR	335367	Identifier	factor_op		335331	1					
ANR	335368	Identifier	FILE_FACTOR_OP_NONE		335331	1					
ANR	335369	CompoundStatement		7:42:132:132	335331	1					
ANR	335370	ExpressionStatement	"file_magwarn ( ms , ""Current entry already has a strength type: %c %d"" , m -> factor_op , m -> factor )"	1972:2:45527:45632	335331	0	True				
ANR	335371	CallExpression	"file_magwarn ( ms , ""Current entry already has a strength type: %c %d"" , m -> factor_op , m -> factor )"		335331	0					
ANR	335372	Callee	file_magwarn		335331	0					
ANR	335373	Identifier	file_magwarn		335331	0					
ANR	335374	ArgumentList	ms		335331	1					
ANR	335375	Argument	ms		335331	0					
ANR	335376	Identifier	ms		335331	0					
ANR	335377	Argument	"""Current entry already has a strength type: %c %d"""		335331	1					
ANR	335378	PrimaryExpression	"""Current entry already has a strength type: %c %d"""		335331	0					
ANR	335379	Argument	m -> factor_op		335331	2					
ANR	335380	PtrMemberAccess	m -> factor_op		335331	0					
ANR	335381	Identifier	m		335331	0					
ANR	335382	Identifier	factor_op		335331	1					
ANR	335383	Argument	m -> factor		335331	3					
ANR	335384	PtrMemberAccess	m -> factor		335331	0					
ANR	335385	Identifier	m		335331	0					
ANR	335386	Identifier	factor		335331	1					
ANR	335387	ReturnStatement	return - 1 ;	1975:2:45636:45645	335331	1	True				
ANR	335388	UnaryOperationExpression	- 1		335331	0					
ANR	335389	UnaryOperator	-		335331	0					
ANR	335390	PrimaryExpression	1		335331	1					
ANR	335391	IfStatement	if ( m -> type == FILE_NAME )		335331	5					
ANR	335392	Condition	m -> type == FILE_NAME	1977:5:45655:45674	335331	0	True				
ANR	335393	EqualityExpression	m -> type == FILE_NAME		335331	0		==			
ANR	335394	PtrMemberAccess	m -> type		335331	0					
ANR	335395	Identifier	m		335331	0					
ANR	335396	Identifier	type		335331	1					
ANR	335397	Identifier	FILE_NAME		335331	1					
ANR	335398	CompoundStatement		13:27:286:286	335331	1					
ANR	335399	Statement	file_magwarn	1978:2:45681:45692	335331	0	True				
ANR	335400	Statement	(	1978:14:45693:45693	335331	1	True				
ANR	335401	Statement	ms	1978:15:45694:45695	335331	2	True				
ANR	335402	Statement	","	1978:17:45696:45696	335331	3	True				
ANR	335403	Statement	"""%s: Strength setting is not supported in """	1978:19:45698:45740	335331	4	True				
ANR	335404	Statement	"""\\""name\\"" magic entries"""	1979:6:45748:45771	335331	5	True				
ANR	335405	Statement	","	1979:30:45772:45772	335331	6	True				
ANR	335406	Statement	m	1979:32:45774:45774	335331	7	True				
ANR	335407	Statement	->	1979:33:45775:45776	335331	8	True				
ANR	335408	Statement	value	1979:35:45777:45781	335331	9	True				
ANR	335409	Statement	.	1979:40:45782:45782	335331	10	True				
ANR	335410	Statement	s	1979:41:45783:45783	335331	11	True				
ANR	335411	Statement	)	1979:42:45784:45784	335331	12	True				
ANR	335412	ExpressionStatement		1979:43:45785:45785	335331	13	True				
ANR	335413	ReturnStatement	return - 1 ;	1980:2:45789:45798	335331	14	True				
ANR	335414	UnaryOperationExpression	- 1		335331	0					
ANR	335415	UnaryOperator	-		335331	0					
ANR	335416	PrimaryExpression	1		335331	1					
ANR	335417	ExpressionStatement	EATAB	1982:1:45804:45809	335331	6	True				
ANR	335418	Identifier	EATAB		335331	0					
ANR	335419	SwitchStatement	switch ( * l )		335331	7					
ANR	335420	Condition	* l	1983:9:45820:45821	335331	0	True				
ANR	335421	UnaryOperationExpression	* l		335331	0					
ANR	335422	UnaryOperator	*		335331	0					
ANR	335423	Identifier	l		335331	1					
ANR	335424	CompoundStatement		19:13:433:433	335331	1					
ANR	335425	Label	case FILE_FACTOR_OP_NONE :	1984:1:45827:45851	335331	0	True				
ANR	335426	Identifier	FILE_FACTOR_OP_NONE		335331	0					
ANR	335427	Label	case FILE_FACTOR_OP_PLUS :	1985:1:45854:45878	335331	1	True				
ANR	335428	Identifier	FILE_FACTOR_OP_PLUS		335331	0					
ANR	335429	Label	case FILE_FACTOR_OP_MINUS :	1986:1:45881:45906	335331	2	True				
ANR	335430	Identifier	FILE_FACTOR_OP_MINUS		335331	0					
ANR	335431	Label	case FILE_FACTOR_OP_TIMES :	1987:1:45909:45934	335331	3	True				
ANR	335432	Identifier	FILE_FACTOR_OP_TIMES		335331	0					
ANR	335433	Label	case FILE_FACTOR_OP_DIV :	1988:1:45937:45960	335331	4	True				
ANR	335434	Identifier	FILE_FACTOR_OP_DIV		335331	0					
ANR	335435	ExpressionStatement	m -> factor_op = * l ++	1989:2:45964:45983	335331	5	True				
ANR	335436	AssignmentExpression	m -> factor_op = * l ++		335331	0		=			
ANR	335437	PtrMemberAccess	m -> factor_op		335331	0					
ANR	335438	Identifier	m		335331	0					
ANR	335439	Identifier	factor_op		335331	1					
ANR	335440	UnaryOperationExpression	* l ++		335331	1					
ANR	335441	UnaryOperator	*		335331	0					
ANR	335442	PostIncDecOperationExpression	l ++		335331	1					
ANR	335443	Identifier	l		335331	0					
ANR	335444	IncDec	++		335331	1					
ANR	335445	BreakStatement	break ;	1990:2:45987:45992	335331	6	True				
ANR	335446	Label	default :	1991:1:45995:46002	335331	7	True				
ANR	335447	Identifier	default		335331	0					
ANR	335448	ExpressionStatement	"file_magwarn ( ms , ""Unknown factor op `%c'"" , * l )"	1992:2:46006:46052	335331	8	True				
ANR	335449	CallExpression	"file_magwarn ( ms , ""Unknown factor op `%c'"" , * l )"		335331	0					
ANR	335450	Callee	file_magwarn		335331	0					
ANR	335451	Identifier	file_magwarn		335331	0					
ANR	335452	ArgumentList	ms		335331	1					
ANR	335453	Argument	ms		335331	0					
ANR	335454	Identifier	ms		335331	0					
ANR	335455	Argument	"""Unknown factor op `%c'"""		335331	1					
ANR	335456	PrimaryExpression	"""Unknown factor op `%c'"""		335331	0					
ANR	335457	Argument	* l		335331	2					
ANR	335458	UnaryOperationExpression	* l		335331	0					
ANR	335459	UnaryOperator	*		335331	0					
ANR	335460	Identifier	l		335331	1					
ANR	335461	ReturnStatement	return - 1 ;	1993:2:46056:46065	335331	9	True				
ANR	335462	UnaryOperationExpression	- 1		335331	0					
ANR	335463	UnaryOperator	-		335331	0					
ANR	335464	PrimaryExpression	1		335331	1					
ANR	335465	ExpressionStatement	EATAB	1995:1:46071:46076	335331	8	True				
ANR	335466	Identifier	EATAB		335331	0					
ANR	335467	ExpressionStatement	"factor = strtoul ( l , & el , 0 )"	1996:1:46079:46106	335331	9	True				
ANR	335468	AssignmentExpression	"factor = strtoul ( l , & el , 0 )"		335331	0		=			
ANR	335469	Identifier	factor		335331	0					
ANR	335470	CallExpression	"strtoul ( l , & el , 0 )"		335331	1					
ANR	335471	Callee	strtoul		335331	0					
ANR	335472	Identifier	strtoul		335331	0					
ANR	335473	ArgumentList	l		335331	1					
ANR	335474	Argument	l		335331	0					
ANR	335475	Identifier	l		335331	0					
ANR	335476	Argument	& el		335331	1					
ANR	335477	UnaryOperationExpression	& el		335331	0					
ANR	335478	UnaryOperator	&		335331	0					
ANR	335479	Identifier	el		335331	1					
ANR	335480	Argument	0		335331	2					
ANR	335481	PrimaryExpression	0		335331	0					
ANR	335482	IfStatement	if ( factor > 255 )		335331	10					
ANR	335483	Condition	factor > 255	1997:5:46113:46124	335331	0	True				
ANR	335484	RelationalExpression	factor > 255		335331	0		>			
ANR	335485	Identifier	factor		335331	0					
ANR	335486	PrimaryExpression	255		335331	1					
ANR	335487	CompoundStatement		33:19:736:736	335331	1					
ANR	335488	ExpressionStatement	"file_magwarn ( ms , ""Too large factor `%lu'"" , factor )"	1998:2:46131:46181	335331	0	True				
ANR	335489	CallExpression	"file_magwarn ( ms , ""Too large factor `%lu'"" , factor )"		335331	0					
ANR	335490	Callee	file_magwarn		335331	0					
ANR	335491	Identifier	file_magwarn		335331	0					
ANR	335492	ArgumentList	ms		335331	1					
ANR	335493	Argument	ms		335331	0					
ANR	335494	Identifier	ms		335331	0					
ANR	335495	Argument	"""Too large factor `%lu'"""		335331	1					
ANR	335496	PrimaryExpression	"""Too large factor `%lu'"""		335331	0					
ANR	335497	Argument	factor		335331	2					
ANR	335498	Identifier	factor		335331	0					
ANR	335499	GotoStatement	goto out ;	1999:2:46185:46193	335331	1	True				
ANR	335500	Identifier	out		335331	0					
ANR	335501	IfStatement	if ( * el && ! isspace ( ( unsigned char ) * el ) )		335331	11					
ANR	335502	Condition	* el && ! isspace ( ( unsigned char ) * el )	2001:5:46203:46237	335331	0	True				
ANR	335503	AndExpression	* el && ! isspace ( ( unsigned char ) * el )		335331	0		&&			
ANR	335504	UnaryOperationExpression	* el		335331	0					
ANR	335505	UnaryOperator	*		335331	0					
ANR	335506	Identifier	el		335331	1					
ANR	335507	UnaryOperationExpression	! isspace ( ( unsigned char ) * el )		335331	1					
ANR	335508	UnaryOperator	!		335331	0					
ANR	335509	CallExpression	isspace ( ( unsigned char ) * el )		335331	1					
ANR	335510	Callee	isspace		335331	0					
ANR	335511	Identifier	isspace		335331	0					
ANR	335512	ArgumentList	( unsigned char ) * el		335331	1					
ANR	335513	Argument	( unsigned char ) * el		335331	0					
ANR	335514	CastExpression	( unsigned char ) * el		335331	0					
ANR	335515	CastTarget	unsigned char		335331	0					
ANR	335516	UnaryOperationExpression	* el		335331	1					
ANR	335517	UnaryOperator	*		335331	0					
ANR	335518	Identifier	el		335331	1					
ANR	335519	CompoundStatement		37:42:849:849	335331	1					
ANR	335520	ExpressionStatement	"file_magwarn ( ms , ""Bad factor `%s'"" , l )"	2002:2:46244:46282	335331	0	True				
ANR	335521	CallExpression	"file_magwarn ( ms , ""Bad factor `%s'"" , l )"		335331	0					
ANR	335522	Callee	file_magwarn		335331	0					
ANR	335523	Identifier	file_magwarn		335331	0					
ANR	335524	ArgumentList	ms		335331	1					
ANR	335525	Argument	ms		335331	0					
ANR	335526	Identifier	ms		335331	0					
ANR	335527	Argument	"""Bad factor `%s'"""		335331	1					
ANR	335528	PrimaryExpression	"""Bad factor `%s'"""		335331	0					
ANR	335529	Argument	l		335331	2					
ANR	335530	Identifier	l		335331	0					
ANR	335531	GotoStatement	goto out ;	2003:2:46286:46294	335331	1	True				
ANR	335532	Identifier	out		335331	0					
ANR	335533	ExpressionStatement	m -> factor = ( uint8_t ) factor	2005:1:46300:46327	335331	12	True				
ANR	335534	AssignmentExpression	m -> factor = ( uint8_t ) factor		335331	0		=			
ANR	335535	PtrMemberAccess	m -> factor		335331	0					
ANR	335536	Identifier	m		335331	0					
ANR	335537	Identifier	factor		335331	1					
ANR	335538	CastExpression	( uint8_t ) factor		335331	1					
ANR	335539	CastTarget	uint8_t		335331	0					
ANR	335540	Identifier	factor		335331	1					
ANR	335541	IfStatement	if ( m -> factor == 0 && m -> factor_op == FILE_FACTOR_OP_DIV )		335331	13					
ANR	335542	Condition	m -> factor == 0 && m -> factor_op == FILE_FACTOR_OP_DIV	2006:5:46334:46385	335331	0	True				
ANR	335543	AndExpression	m -> factor == 0 && m -> factor_op == FILE_FACTOR_OP_DIV		335331	0		&&			
ANR	335544	EqualityExpression	m -> factor == 0		335331	0		==			
ANR	335545	PtrMemberAccess	m -> factor		335331	0					
ANR	335546	Identifier	m		335331	0					
ANR	335547	Identifier	factor		335331	1					
ANR	335548	PrimaryExpression	0		335331	1					
ANR	335549	EqualityExpression	m -> factor_op == FILE_FACTOR_OP_DIV		335331	1		==			
ANR	335550	PtrMemberAccess	m -> factor_op		335331	0					
ANR	335551	Identifier	m		335331	0					
ANR	335552	Identifier	factor_op		335331	1					
ANR	335553	Identifier	FILE_FACTOR_OP_DIV		335331	1					
ANR	335554	CompoundStatement		42:59:997:997	335331	1					
ANR	335555	ExpressionStatement	"file_magwarn ( ms , ""Cannot have factor op `%c' and factor %u"" , m -> factor_op , m -> factor )"	2007:2:46392:46483	335331	0	True				
ANR	335556	CallExpression	"file_magwarn ( ms , ""Cannot have factor op `%c' and factor %u"" , m -> factor_op , m -> factor )"		335331	0					
ANR	335557	Callee	file_magwarn		335331	0					
ANR	335558	Identifier	file_magwarn		335331	0					
ANR	335559	ArgumentList	ms		335331	1					
ANR	335560	Argument	ms		335331	0					
ANR	335561	Identifier	ms		335331	0					
ANR	335562	Argument	"""Cannot have factor op `%c' and factor %u"""		335331	1					
ANR	335563	PrimaryExpression	"""Cannot have factor op `%c' and factor %u"""		335331	0					
ANR	335564	Argument	m -> factor_op		335331	2					
ANR	335565	PtrMemberAccess	m -> factor_op		335331	0					
ANR	335566	Identifier	m		335331	0					
ANR	335567	Identifier	factor_op		335331	1					
ANR	335568	Argument	m -> factor		335331	3					
ANR	335569	PtrMemberAccess	m -> factor		335331	0					
ANR	335570	Identifier	m		335331	0					
ANR	335571	Identifier	factor		335331	1					
ANR	335572	GotoStatement	goto out ;	2009:2:46487:46495	335331	1	True				
ANR	335573	Identifier	out		335331	0					
ANR	335574	ReturnStatement	return 0 ;	2011:1:46501:46509	335331	14	True				
ANR	335575	PrimaryExpression	0		335331	0					
ANR	335576	Label	out :	2012:0:46511:46514	335331	15	True				
ANR	335577	Identifier	out		335331	0					
ANR	335578	ExpressionStatement	m -> factor_op = FILE_FACTOR_OP_NONE	2013:1:46517:46551	335331	16	True				
ANR	335579	AssignmentExpression	m -> factor_op = FILE_FACTOR_OP_NONE		335331	0		=			
ANR	335580	PtrMemberAccess	m -> factor_op		335331	0					
ANR	335581	Identifier	m		335331	0					
ANR	335582	Identifier	factor_op		335331	1					
ANR	335583	Identifier	FILE_FACTOR_OP_NONE		335331	1					
ANR	335584	ExpressionStatement	m -> factor = 0	2014:1:46554:46567	335331	17	True				
ANR	335585	AssignmentExpression	m -> factor = 0		335331	0		=			
ANR	335586	PtrMemberAccess	m -> factor		335331	0					
ANR	335587	Identifier	m		335331	0					
ANR	335588	Identifier	factor		335331	1					
ANR	335589	PrimaryExpression	0		335331	1					
ANR	335590	ReturnStatement	return - 1 ;	2015:1:46570:46579	335331	18	True				
ANR	335591	UnaryOperationExpression	- 1		335331	0					
ANR	335592	UnaryOperator	-		335331	0					
ANR	335593	PrimaryExpression	1		335331	1					
ANR	335594	ReturnType	int		335331	1					
ANR	335595	Identifier	parse_strength		335331	2					
ANR	335596	ParameterList	"struct magic_set * ms , struct magic_entry * me , const char * line"		335331	3					
ANR	335597	Parameter	struct magic_set * ms	1964:15:45326:45345	335331	0	True				
ANR	335598	ParameterType	struct magic_set *		335331	0					
ANR	335599	Identifier	ms		335331	1					
ANR	335600	Parameter	struct magic_entry * me	1964:37:45348:45369	335331	1	True				
ANR	335601	ParameterType	struct magic_entry *		335331	0					
ANR	335602	Identifier	me		335331	1					
ANR	335603	Parameter	const char * line	1964:61:45372:45387	335331	2	True				
ANR	335604	ParameterType	const char *		335331	0					
ANR	335605	Identifier	line		335331	1					
ANR	335606	CFGEntryNode	ENTRY		335331		True				
ANR	335607	CFGExitNode	EXIT		335331		True				
ANR	335608	Symbol	ms		335331						
ANR	335609	Symbol	line		335331						
ANR	335610	Symbol	el		335331						
ANR	335611	Symbol	FILE_FACTOR_OP_DIV		335331						
ANR	335612	Symbol	m -> factor_op		335331						
ANR	335613	Symbol	isspace		335331						
ANR	335614	Symbol	* l ++		335331						
ANR	335615	Symbol	FILE_FACTOR_OP_NONE		335331						
ANR	335616	Symbol	l		335331						
ANR	335617	Symbol	m		335331						
ANR	335618	Symbol	me -> mp		335331						
ANR	335619	Symbol	FILE_NAME		335331						
ANR	335620	Symbol	* el		335331						
ANR	335621	Symbol	& el		335331						
ANR	335622	Symbol	m -> factor		335331						
ANR	335623	Symbol	m -> type		335331						
ANR	335624	Symbol	* l		335331						
ANR	335625	Symbol	* m		335331						
ANR	335626	Symbol	me		335331						
ANR	335627	Symbol	strtoul		335331						
ANR	335628	Symbol	factor		335331						
ANR	335629	Symbol	* me		335331						
ANR	335630	Function	parse_apple	2022:8:46693:47483							
ANR	335631	FunctionDef	"parse_apple (struct magic_set * ms , struct magic_entry * me , const char * line)"		335630	0					
ANR	335632	CompoundStatement		2024:0:46773:47483	335630	0					
ANR	335633	IdentifierDeclStatement	size_t i ;	2025:1:46776:46784	335630	0	True				
ANR	335634	IdentifierDecl	i		335630	0					
ANR	335635	IdentifierDeclType	size_t		335630	0					
ANR	335636	Identifier	i		335630	1					
ANR	335637	IdentifierDeclStatement	const char * l = line ;	2026:1:46787:46807	335630	1	True				
ANR	335638	IdentifierDecl	* l = line		335630	0					
ANR	335639	IdentifierDeclType	const char *		335630	0					
ANR	335640	Identifier	l		335630	1					
ANR	335641	AssignmentExpression	* l = line		335630	2		=			
ANR	335642	Identifier	line		335630	0					
ANR	335643	Identifier	line		335630	1					
ANR	335644	IdentifierDeclStatement	struct magic * m = & me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ] ;	2027:1:46810:46881	335630	2	True				
ANR	335645	IdentifierDecl	* m = & me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ]		335630	0					
ANR	335646	IdentifierDeclType	struct magic *		335630	0					
ANR	335647	Identifier	m		335630	1					
ANR	335648	AssignmentExpression	* m = & me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ]		335630	2		=			
ANR	335649	Identifier	m		335630	0					
ANR	335650	UnaryOperationExpression	& me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ]		335630	1					
ANR	335651	UnaryOperator	&		335630	0					
ANR	335652	ArrayIndexing	me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ]		335630	1					
ANR	335653	PtrMemberAccess	me -> mp		335630	0					
ANR	335654	Identifier	me		335630	0					
ANR	335655	Identifier	mp		335630	1					
ANR	335656	ConditionalExpression	me -> cont_count == 0 ? 0 : me -> cont_count - 1		335630	1					
ANR	335657	Condition	me -> cont_count == 0		335630	0					
ANR	335658	EqualityExpression	me -> cont_count == 0		335630	0		==			
ANR	335659	PtrMemberAccess	me -> cont_count		335630	0					
ANR	335660	Identifier	me		335630	0					
ANR	335661	Identifier	cont_count		335630	1					
ANR	335662	PrimaryExpression	0		335630	1					
ANR	335663	PrimaryExpression	0		335630	1					
ANR	335664	AdditiveExpression	me -> cont_count - 1		335630	2		-			
ANR	335665	PtrMemberAccess	me -> cont_count		335630	0					
ANR	335666	Identifier	me		335630	0					
ANR	335667	Identifier	cont_count		335630	1					
ANR	335668	PrimaryExpression	1		335630	1					
ANR	335669	IfStatement	if ( m -> apple [ 0 ] != '\\0' )		335630	3					
ANR	335670	Condition	m -> apple [ 0 ] != '\\0'	2029:5:46889:46907	335630	0	True				
ANR	335671	EqualityExpression	m -> apple [ 0 ] != '\\0'		335630	0		!=			
ANR	335672	ArrayIndexing	m -> apple [ 0 ]		335630	0					
ANR	335673	PtrMemberAccess	m -> apple		335630	0					
ANR	335674	Identifier	m		335630	0					
ANR	335675	Identifier	apple		335630	1					
ANR	335676	PrimaryExpression	0		335630	1					
ANR	335677	PrimaryExpression	'\\0'		335630	1					
ANR	335678	CompoundStatement		6:26:136:136	335630	1					
ANR	335679	Statement	file_magwarn	2030:2:46914:46925	335630	0	True				
ANR	335680	Statement	(	2030:14:46926:46926	335630	1	True				
ANR	335681	Statement	ms	2030:15:46927:46928	335630	2	True				
ANR	335682	Statement	","	2030:17:46929:46929	335630	3	True				
ANR	335683	Statement	"""Current entry already has a APPLE type """	2030:19:46931:46971	335630	4	True				
ANR	335684	Statement	"""`%.8s', new type `%s'"""	2031:6:46979:47001	335630	5	True				
ANR	335685	Statement	","	2031:29:47002:47002	335630	6	True				
ANR	335686	Statement	m	2031:31:47004:47004	335630	7	True				
ANR	335687	Statement	->	2031:32:47005:47006	335630	8	True				
ANR	335688	Statement	mimetype	2031:34:47007:47014	335630	9	True				
ANR	335689	Statement	","	2031:42:47015:47015	335630	10	True				
ANR	335690	Statement	l	2031:44:47017:47017	335630	11	True				
ANR	335691	Statement	)	2031:45:47018:47018	335630	12	True				
ANR	335692	ExpressionStatement		2031:46:47019:47019	335630	13	True				
ANR	335693	ReturnStatement	return - 1 ;	2032:2:47023:47032	335630	14	True				
ANR	335694	UnaryOperationExpression	- 1		335630	0					
ANR	335695	UnaryOperator	-		335630	0					
ANR	335696	PrimaryExpression	1		335630	1					
ANR	335697	ExpressionStatement	EATAB	2035:1:47040:47045	335630	4	True				
ANR	335698	Identifier	EATAB		335630	0					
ANR	335699	ForStatement	"for ( i = 0 ; * l && ( ( isascii ( ( unsigned char ) * l ) && isalnum ( ( unsigned char ) * l ) ) || strchr ( ""-+/."" , * l ) ) && i < sizeof ( m -> apple ) ; m -> apple [ i ++ ] = * l ++ )"		335630	5					
ANR	335700	ForInit	i = 0 ;	2036:6:47053:47058	335630	0	True				
ANR	335701	AssignmentExpression	i = 0		335630	0		=			
ANR	335702	Identifier	i		335630	0					
ANR	335703	PrimaryExpression	0		335630	1					
ANR	335704	Condition	"* l && ( ( isascii ( ( unsigned char ) * l ) && isalnum ( ( unsigned char ) * l ) ) || strchr ( ""-+/."" , * l ) ) && i < sizeof ( m -> apple )"	2036:13:47060:47181	335630	1	True				
ANR	335705	AndExpression	"* l && ( ( isascii ( ( unsigned char ) * l ) && isalnum ( ( unsigned char ) * l ) ) || strchr ( ""-+/."" , * l ) ) && i < sizeof ( m -> apple )"		335630	0		&&			
ANR	335706	UnaryOperationExpression	* l		335630	0					
ANR	335707	UnaryOperator	*		335630	0					
ANR	335708	Identifier	l		335630	1					
ANR	335709	AndExpression	"( ( isascii ( ( unsigned char ) * l ) && isalnum ( ( unsigned char ) * l ) ) || strchr ( ""-+/."" , * l ) ) && i < sizeof ( m -> apple )"		335630	1		&&			
ANR	335710	OrExpression	"( isascii ( ( unsigned char ) * l ) && isalnum ( ( unsigned char ) * l ) ) || strchr ( ""-+/."" , * l )"		335630	0		||			
ANR	335711	AndExpression	isascii ( ( unsigned char ) * l ) && isalnum ( ( unsigned char ) * l )		335630	0		&&			
ANR	335712	CallExpression	isascii ( ( unsigned char ) * l )		335630	0					
ANR	335713	Callee	isascii		335630	0					
ANR	335714	Identifier	isascii		335630	0					
ANR	335715	ArgumentList	( unsigned char ) * l		335630	1					
ANR	335716	Argument	( unsigned char ) * l		335630	0					
ANR	335717	CastExpression	( unsigned char ) * l		335630	0					
ANR	335718	CastTarget	unsigned char		335630	0					
ANR	335719	UnaryOperationExpression	* l		335630	1					
ANR	335720	UnaryOperator	*		335630	0					
ANR	335721	Identifier	l		335630	1					
ANR	335722	CallExpression	isalnum ( ( unsigned char ) * l )		335630	1					
ANR	335723	Callee	isalnum		335630	0					
ANR	335724	Identifier	isalnum		335630	0					
ANR	335725	ArgumentList	( unsigned char ) * l		335630	1					
ANR	335726	Argument	( unsigned char ) * l		335630	0					
ANR	335727	CastExpression	( unsigned char ) * l		335630	0					
ANR	335728	CastTarget	unsigned char		335630	0					
ANR	335729	UnaryOperationExpression	* l		335630	1					
ANR	335730	UnaryOperator	*		335630	0					
ANR	335731	Identifier	l		335630	1					
ANR	335732	CallExpression	"strchr ( ""-+/."" , * l )"		335630	1					
ANR	335733	Callee	strchr		335630	0					
ANR	335734	Identifier	strchr		335630	0					
ANR	335735	ArgumentList	"""-+/."""		335630	1					
ANR	335736	Argument	"""-+/."""		335630	0					
ANR	335737	PrimaryExpression	"""-+/."""		335630	0					
ANR	335738	Argument	* l		335630	1					
ANR	335739	UnaryOperationExpression	* l		335630	0					
ANR	335740	UnaryOperator	*		335630	0					
ANR	335741	Identifier	l		335630	1					
ANR	335742	RelationalExpression	i < sizeof ( m -> apple )		335630	1		<			
ANR	335743	Identifier	i		335630	0					
ANR	335744	SizeofExpression	sizeof ( m -> apple )		335630	1					
ANR	335745	Sizeof	sizeof		335630	0					
ANR	335746	PtrMemberAccess	m -> apple		335630	1					
ANR	335747	Identifier	m		335630	0					
ANR	335748	Identifier	apple		335630	1					
ANR	335749	AssignmentExpression	m -> apple [ i ++ ] = * l ++	2038:27:47184:47203	335630	2	True	=			
ANR	335750	ArrayIndexing	m -> apple [ i ++ ]		335630	0					
ANR	335751	PtrMemberAccess	m -> apple		335630	0					
ANR	335752	Identifier	m		335630	0					
ANR	335753	Identifier	apple		335630	1					
ANR	335754	PostIncDecOperationExpression	i ++		335630	1					
ANR	335755	Identifier	i		335630	0					
ANR	335756	IncDec	++		335630	1					
ANR	335757	UnaryOperationExpression	* l ++		335630	1					
ANR	335758	UnaryOperator	*		335630	0					
ANR	335759	PostIncDecOperationExpression	l ++		335630	1					
ANR	335760	Identifier	l		335630	0					
ANR	335761	IncDec	++		335630	1					
ANR	335762	ContinueStatement	continue ;	2039:2:47208:47216	335630	3	True				
ANR	335763	IfStatement	if ( i == sizeof ( m -> apple ) && * l )		335630	6					
ANR	335764	Condition	i == sizeof ( m -> apple ) && * l	2040:5:47223:47249	335630	0	True				
ANR	335765	AndExpression	i == sizeof ( m -> apple ) && * l		335630	0		&&			
ANR	335766	EqualityExpression	i == sizeof ( m -> apple )		335630	0		==			
ANR	335767	Identifier	i		335630	0					
ANR	335768	SizeofExpression	sizeof ( m -> apple )		335630	1					
ANR	335769	Sizeof	sizeof		335630	0					
ANR	335770	PtrMemberAccess	m -> apple		335630	1					
ANR	335771	Identifier	m		335630	0					
ANR	335772	Identifier	apple		335630	1					
ANR	335773	UnaryOperationExpression	* l		335630	1					
ANR	335774	UnaryOperator	*		335630	0					
ANR	335775	Identifier	l		335630	1					
ANR	335776	CompoundStatement		17:34:478:478	335630	1					
ANR	335777	IfStatement	if ( ms -> flags & MAGIC_CHECK )		335630	0					
ANR	335778	Condition	ms -> flags & MAGIC_CHECK	2042:6:47325:47347	335630	0	True				
ANR	335779	BitAndExpression	ms -> flags & MAGIC_CHECK		335630	0		&			
ANR	335780	PtrMemberAccess	ms -> flags		335630	0					
ANR	335781	Identifier	ms		335630	0					
ANR	335782	Identifier	flags		335630	1					
ANR	335783	Identifier	MAGIC_CHECK		335630	1					
ANR	335784	Statement	file_magwarn	2043:3:47353:47364	335630	1	True				
ANR	335785	Statement	(	2043:15:47365:47365	335630	1	True				
ANR	335786	Statement	ms	2043:16:47366:47367	335630	2	True				
ANR	335787	Statement	","	2043:18:47368:47368	335630	3	True				
ANR	335788	Statement	"""APPLE type `%s' truncated %"""	2043:20:47370:47398	335630	4	True				
ANR	335789	Statement	SIZE_T_FORMAT	2044:7:47407:47419	335630	5	True				
ANR	335790	Statement	"""u"""	2044:21:47421:47423	335630	6	True				
ANR	335791	Statement	","	2044:24:47424:47424	335630	7	True				
ANR	335792	Statement	line	2044:26:47426:47429	335630	8	True				
ANR	335793	Statement	","	2044:30:47430:47430	335630	9	True				
ANR	335794	Statement	i	2044:32:47432:47432	335630	10	True				
ANR	335795	Statement	)	2044:33:47433:47433	335630	11	True				
ANR	335796	ExpressionStatement		2044:34:47434:47434	335630	12	True				
ANR	335797	IfStatement	if ( i > 0 )		335630	7					
ANR	335798	Condition	i > 0	2047:5:47445:47449	335630	0	True				
ANR	335799	RelationalExpression	i > 0		335630	0		>			
ANR	335800	Identifier	i		335630	0					
ANR	335801	PrimaryExpression	0		335630	1					
ANR	335802	ReturnStatement	return 0 ;	2048:2:47454:47462	335630	1	True				
ANR	335803	PrimaryExpression	0		335630	0					
ANR	335804	ElseStatement	else		335630	0					
ANR	335805	ReturnStatement	return - 1 ;	2050:2:47472:47481	335630	0	True				
ANR	335806	UnaryOperationExpression	- 1		335630	0					
ANR	335807	UnaryOperator	-		335630	0					
ANR	335808	PrimaryExpression	1		335630	1					
ANR	335809	ReturnType	int		335630	1					
ANR	335810	Identifier	parse_apple		335630	2					
ANR	335811	ParameterList	"struct magic_set * ms , struct magic_entry * me , const char * line"		335630	3					
ANR	335812	Parameter	struct magic_set * ms	2023:12:46709:46728	335630	0	True				
ANR	335813	ParameterType	struct magic_set *		335630	0					
ANR	335814	Identifier	ms		335630	1					
ANR	335815	Parameter	struct magic_entry * me	2023:34:46731:46752	335630	1	True				
ANR	335816	ParameterType	struct magic_entry *		335630	0					
ANR	335817	Identifier	me		335630	1					
ANR	335818	Parameter	const char * line	2023:58:46755:46770	335630	2	True				
ANR	335819	ParameterType	const char *		335630	0					
ANR	335820	Identifier	line		335630	1					
ANR	335821	CFGEntryNode	ENTRY		335630		True				
ANR	335822	CFGExitNode	EXIT		335630		True				
ANR	335823	Symbol	isalnum		335630						
ANR	335824	Symbol	ms		335630						
ANR	335825	Symbol	line		335630						
ANR	335826	Symbol	i		335630						
ANR	335827	Symbol	strchr		335630						
ANR	335828	Symbol	* l ++		335630						
ANR	335829	Symbol	l		335630						
ANR	335830	Symbol	m		335630						
ANR	335831	Symbol	me -> mp		335630						
ANR	335832	Symbol	m -> apple		335630						
ANR	335833	Symbol	* ms		335630						
ANR	335834	Symbol	* l		335630						
ANR	335835	Symbol	* m		335630						
ANR	335836	Symbol	me		335630						
ANR	335837	Symbol	* m -> apple		335630						
ANR	335838	Symbol	MAGIC_CHECK		335630						
ANR	335839	Symbol	ms -> flags		335630						
ANR	335840	Symbol	me -> cont_count		335630						
ANR	335841	Symbol	* me		335630						
ANR	335842	Symbol	* * m		335630						
ANR	335843	Symbol	isascii		335630						
ANR	335844	Function	parse_mime	2057:8:47588:48398							
ANR	335845	FunctionDef	"parse_mime (struct magic_set * ms , struct magic_entry * me , const char * line)"		335844	0					
ANR	335846	CompoundStatement		2059:0:47667:48398	335844	0					
ANR	335847	IdentifierDeclStatement	size_t i ;	2060:1:47670:47678	335844	0	True				
ANR	335848	IdentifierDecl	i		335844	0					
ANR	335849	IdentifierDeclType	size_t		335844	0					
ANR	335850	Identifier	i		335844	1					
ANR	335851	IdentifierDeclStatement	const char * l = line ;	2061:1:47681:47701	335844	1	True				
ANR	335852	IdentifierDecl	* l = line		335844	0					
ANR	335853	IdentifierDeclType	const char *		335844	0					
ANR	335854	Identifier	l		335844	1					
ANR	335855	AssignmentExpression	* l = line		335844	2		=			
ANR	335856	Identifier	line		335844	0					
ANR	335857	Identifier	line		335844	1					
ANR	335858	IdentifierDeclStatement	struct magic * m = & me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ] ;	2062:1:47704:47775	335844	2	True				
ANR	335859	IdentifierDecl	* m = & me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ]		335844	0					
ANR	335860	IdentifierDeclType	struct magic *		335844	0					
ANR	335861	Identifier	m		335844	1					
ANR	335862	AssignmentExpression	* m = & me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ]		335844	2		=			
ANR	335863	Identifier	m		335844	0					
ANR	335864	UnaryOperationExpression	& me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ]		335844	1					
ANR	335865	UnaryOperator	&		335844	0					
ANR	335866	ArrayIndexing	me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ]		335844	1					
ANR	335867	PtrMemberAccess	me -> mp		335844	0					
ANR	335868	Identifier	me		335844	0					
ANR	335869	Identifier	mp		335844	1					
ANR	335870	ConditionalExpression	me -> cont_count == 0 ? 0 : me -> cont_count - 1		335844	1					
ANR	335871	Condition	me -> cont_count == 0		335844	0					
ANR	335872	EqualityExpression	me -> cont_count == 0		335844	0		==			
ANR	335873	PtrMemberAccess	me -> cont_count		335844	0					
ANR	335874	Identifier	me		335844	0					
ANR	335875	Identifier	cont_count		335844	1					
ANR	335876	PrimaryExpression	0		335844	1					
ANR	335877	PrimaryExpression	0		335844	1					
ANR	335878	AdditiveExpression	me -> cont_count - 1		335844	2		-			
ANR	335879	PtrMemberAccess	me -> cont_count		335844	0					
ANR	335880	Identifier	me		335844	0					
ANR	335881	Identifier	cont_count		335844	1					
ANR	335882	PrimaryExpression	1		335844	1					
ANR	335883	IfStatement	if ( m -> mimetype [ 0 ] != '\\0' )		335844	3					
ANR	335884	Condition	m -> mimetype [ 0 ] != '\\0'	2064:5:47783:47804	335844	0	True				
ANR	335885	EqualityExpression	m -> mimetype [ 0 ] != '\\0'		335844	0		!=			
ANR	335886	ArrayIndexing	m -> mimetype [ 0 ]		335844	0					
ANR	335887	PtrMemberAccess	m -> mimetype		335844	0					
ANR	335888	Identifier	m		335844	0					
ANR	335889	Identifier	mimetype		335844	1					
ANR	335890	PrimaryExpression	0		335844	1					
ANR	335891	PrimaryExpression	'\\0'		335844	1					
ANR	335892	CompoundStatement		6:29:139:139	335844	1					
ANR	335893	Statement	file_magwarn	2065:2:47811:47822	335844	0	True				
ANR	335894	Statement	(	2065:14:47823:47823	335844	1	True				
ANR	335895	Statement	ms	2065:15:47824:47825	335844	2	True				
ANR	335896	Statement	","	2065:17:47826:47826	335844	3	True				
ANR	335897	Statement	"""Current entry already has a MIME type `%s',"""	2065:19:47828:47872	335844	4	True				
ANR	335898	Statement	""" new type `%s'"""	2066:6:47880:47895	335844	5	True				
ANR	335899	Statement	","	2066:22:47896:47896	335844	6	True				
ANR	335900	Statement	m	2066:24:47898:47898	335844	7	True				
ANR	335901	Statement	->	2066:25:47899:47900	335844	8	True				
ANR	335902	Statement	mimetype	2066:27:47901:47908	335844	9	True				
ANR	335903	Statement	","	2066:35:47909:47909	335844	10	True				
ANR	335904	Statement	l	2066:37:47911:47911	335844	11	True				
ANR	335905	Statement	)	2066:38:47912:47912	335844	12	True				
ANR	335906	ExpressionStatement		2066:39:47913:47913	335844	13	True				
ANR	335907	ReturnStatement	return - 1 ;	2067:2:47917:47926	335844	14	True				
ANR	335908	UnaryOperationExpression	- 1		335844	0					
ANR	335909	UnaryOperator	-		335844	0					
ANR	335910	PrimaryExpression	1		335844	1					
ANR	335911	ExpressionStatement	EATAB	2070:1:47934:47939	335844	4	True				
ANR	335912	Identifier	EATAB		335844	0					
ANR	335913	ForStatement	"for ( i = 0 ; * l && ( ( isascii ( ( unsigned char ) * l ) && isalnum ( ( unsigned char ) * l ) ) || strchr ( ""-+/."" , * l ) ) && i < sizeof ( m -> mimetype ) ; m -> mimetype [ i ++ ] = * l ++ )"		335844	5					
ANR	335914	ForInit	i = 0 ;	2071:6:47947:47952	335844	0	True				
ANR	335915	AssignmentExpression	i = 0		335844	0		=			
ANR	335916	Identifier	i		335844	0					
ANR	335917	PrimaryExpression	0		335844	1					
ANR	335918	Condition	"* l && ( ( isascii ( ( unsigned char ) * l ) && isalnum ( ( unsigned char ) * l ) ) || strchr ( ""-+/."" , * l ) ) && i < sizeof ( m -> mimetype )"	2071:13:47954:48078	335844	1	True				
ANR	335919	AndExpression	"* l && ( ( isascii ( ( unsigned char ) * l ) && isalnum ( ( unsigned char ) * l ) ) || strchr ( ""-+/."" , * l ) ) && i < sizeof ( m -> mimetype )"		335844	0		&&			
ANR	335920	UnaryOperationExpression	* l		335844	0					
ANR	335921	UnaryOperator	*		335844	0					
ANR	335922	Identifier	l		335844	1					
ANR	335923	AndExpression	"( ( isascii ( ( unsigned char ) * l ) && isalnum ( ( unsigned char ) * l ) ) || strchr ( ""-+/."" , * l ) ) && i < sizeof ( m -> mimetype )"		335844	1		&&			
ANR	335924	OrExpression	"( isascii ( ( unsigned char ) * l ) && isalnum ( ( unsigned char ) * l ) ) || strchr ( ""-+/."" , * l )"		335844	0		||			
ANR	335925	AndExpression	isascii ( ( unsigned char ) * l ) && isalnum ( ( unsigned char ) * l )		335844	0		&&			
ANR	335926	CallExpression	isascii ( ( unsigned char ) * l )		335844	0					
ANR	335927	Callee	isascii		335844	0					
ANR	335928	Identifier	isascii		335844	0					
ANR	335929	ArgumentList	( unsigned char ) * l		335844	1					
ANR	335930	Argument	( unsigned char ) * l		335844	0					
ANR	335931	CastExpression	( unsigned char ) * l		335844	0					
ANR	335932	CastTarget	unsigned char		335844	0					
ANR	335933	UnaryOperationExpression	* l		335844	1					
ANR	335934	UnaryOperator	*		335844	0					
ANR	335935	Identifier	l		335844	1					
ANR	335936	CallExpression	isalnum ( ( unsigned char ) * l )		335844	1					
ANR	335937	Callee	isalnum		335844	0					
ANR	335938	Identifier	isalnum		335844	0					
ANR	335939	ArgumentList	( unsigned char ) * l		335844	1					
ANR	335940	Argument	( unsigned char ) * l		335844	0					
ANR	335941	CastExpression	( unsigned char ) * l		335844	0					
ANR	335942	CastTarget	unsigned char		335844	0					
ANR	335943	UnaryOperationExpression	* l		335844	1					
ANR	335944	UnaryOperator	*		335844	0					
ANR	335945	Identifier	l		335844	1					
ANR	335946	CallExpression	"strchr ( ""-+/."" , * l )"		335844	1					
ANR	335947	Callee	strchr		335844	0					
ANR	335948	Identifier	strchr		335844	0					
ANR	335949	ArgumentList	"""-+/."""		335844	1					
ANR	335950	Argument	"""-+/."""		335844	0					
ANR	335951	PrimaryExpression	"""-+/."""		335844	0					
ANR	335952	Argument	* l		335844	1					
ANR	335953	UnaryOperationExpression	* l		335844	0					
ANR	335954	UnaryOperator	*		335844	0					
ANR	335955	Identifier	l		335844	1					
ANR	335956	RelationalExpression	i < sizeof ( m -> mimetype )		335844	1		<			
ANR	335957	Identifier	i		335844	0					
ANR	335958	SizeofExpression	sizeof ( m -> mimetype )		335844	1					
ANR	335959	Sizeof	sizeof		335844	0					
ANR	335960	PtrMemberAccess	m -> mimetype		335844	1					
ANR	335961	Identifier	m		335844	0					
ANR	335962	Identifier	mimetype		335844	1					
ANR	335963	AssignmentExpression	m -> mimetype [ i ++ ] = * l ++	2073:30:48081:48103	335844	2	True	=			
ANR	335964	ArrayIndexing	m -> mimetype [ i ++ ]		335844	0					
ANR	335965	PtrMemberAccess	m -> mimetype		335844	0					
ANR	335966	Identifier	m		335844	0					
ANR	335967	Identifier	mimetype		335844	1					
ANR	335968	PostIncDecOperationExpression	i ++		335844	1					
ANR	335969	Identifier	i		335844	0					
ANR	335970	IncDec	++		335844	1					
ANR	335971	UnaryOperationExpression	* l ++		335844	1					
ANR	335972	UnaryOperator	*		335844	0					
ANR	335973	PostIncDecOperationExpression	l ++		335844	1					
ANR	335974	Identifier	l		335844	0					
ANR	335975	IncDec	++		335844	1					
ANR	335976	ContinueStatement	continue ;	2074:2:48108:48116	335844	3	True				
ANR	335977	IfStatement	if ( i == sizeof ( m -> mimetype ) )		335844	6					
ANR	335978	Condition	i == sizeof ( m -> mimetype )	2075:5:48123:48146	335844	0	True				
ANR	335979	EqualityExpression	i == sizeof ( m -> mimetype )		335844	0		==			
ANR	335980	Identifier	i		335844	0					
ANR	335981	SizeofExpression	sizeof ( m -> mimetype )		335844	1					
ANR	335982	Sizeof	sizeof		335844	0					
ANR	335983	PtrMemberAccess	m -> mimetype		335844	1					
ANR	335984	Identifier	m		335844	0					
ANR	335985	Identifier	mimetype		335844	1					
ANR	335986	CompoundStatement		17:31:481:481	335844	1					
ANR	335987	ExpressionStatement	m -> mimetype [ sizeof ( m -> mimetype ) - 1 ] = '\\0'	2076:2:48153:48196	335844	0	True				
ANR	335988	AssignmentExpression	m -> mimetype [ sizeof ( m -> mimetype ) - 1 ] = '\\0'		335844	0		=			
ANR	335989	ArrayIndexing	m -> mimetype [ sizeof ( m -> mimetype ) - 1 ]		335844	0					
ANR	335990	PtrMemberAccess	m -> mimetype		335844	0					
ANR	335991	Identifier	m		335844	0					
ANR	335992	Identifier	mimetype		335844	1					
ANR	335993	AdditiveExpression	sizeof ( m -> mimetype ) - 1		335844	1		-			
ANR	335994	SizeofExpression	sizeof ( m -> mimetype )		335844	0					
ANR	335995	Sizeof	sizeof		335844	0					
ANR	335996	PtrMemberAccess	m -> mimetype		335844	1					
ANR	335997	Identifier	m		335844	0					
ANR	335998	Identifier	mimetype		335844	1					
ANR	335999	PrimaryExpression	1		335844	1					
ANR	336000	PrimaryExpression	'\\0'		335844	1					
ANR	336001	IfStatement	if ( ms -> flags & MAGIC_CHECK )		335844	1					
ANR	336002	Condition	ms -> flags & MAGIC_CHECK	2077:6:48204:48226	335844	0	True				
ANR	336003	BitAndExpression	ms -> flags & MAGIC_CHECK		335844	0		&			
ANR	336004	PtrMemberAccess	ms -> flags		335844	0					
ANR	336005	Identifier	ms		335844	0					
ANR	336006	Identifier	flags		335844	1					
ANR	336007	Identifier	MAGIC_CHECK		335844	1					
ANR	336008	Statement	file_magwarn	2078:3:48232:48243	335844	1	True				
ANR	336009	Statement	(	2078:15:48244:48244	335844	2	True				
ANR	336010	Statement	ms	2078:16:48245:48246	335844	3	True				
ANR	336011	Statement	","	2078:18:48247:48247	335844	4	True				
ANR	336012	Statement	"""MIME type `%s' truncated %"""	2078:20:48249:48276	335844	5	True				
ANR	336013	Statement	SIZE_T_FORMAT	2079:7:48285:48297	335844	6	True				
ANR	336014	Statement	"""u"""	2079:21:48299:48301	335844	7	True				
ANR	336015	Statement	","	2079:24:48302:48302	335844	8	True				
ANR	336016	Statement	m	2079:26:48304:48304	335844	9	True				
ANR	336017	Statement	->	2079:27:48305:48306	335844	10	True				
ANR	336018	Statement	mimetype	2079:29:48307:48314	335844	11	True				
ANR	336019	Statement	","	2079:37:48315:48315	335844	12	True				
ANR	336020	Statement	i	2079:39:48317:48317	335844	13	True				
ANR	336021	Statement	)	2079:40:48318:48318	335844	14	True				
ANR	336022	ExpressionStatement		2079:41:48319:48319	335844	15	True				
ANR	336023	ElseStatement	else		335844	0					
ANR	336024	ExpressionStatement	m -> mimetype [ i ] = '\\0'	2081:2:48331:48352	335844	0	True				
ANR	336025	AssignmentExpression	m -> mimetype [ i ] = '\\0'		335844	0		=			
ANR	336026	ArrayIndexing	m -> mimetype [ i ]		335844	0					
ANR	336027	PtrMemberAccess	m -> mimetype		335844	0					
ANR	336028	Identifier	m		335844	0					
ANR	336029	Identifier	mimetype		335844	1					
ANR	336030	Identifier	i		335844	1					
ANR	336031	PrimaryExpression	'\\0'		335844	1					
ANR	336032	IfStatement	if ( i > 0 )		335844	7					
ANR	336033	Condition	i > 0	2083:5:48360:48364	335844	0	True				
ANR	336034	RelationalExpression	i > 0		335844	0		>			
ANR	336035	Identifier	i		335844	0					
ANR	336036	PrimaryExpression	0		335844	1					
ANR	336037	ReturnStatement	return 0 ;	2084:2:48369:48377	335844	1	True				
ANR	336038	PrimaryExpression	0		335844	0					
ANR	336039	ElseStatement	else		335844	0					
ANR	336040	ReturnStatement	return - 1 ;	2086:2:48387:48396	335844	0	True				
ANR	336041	UnaryOperationExpression	- 1		335844	0					
ANR	336042	UnaryOperator	-		335844	0					
ANR	336043	PrimaryExpression	1		335844	1					
ANR	336044	ReturnType	int		335844	1					
ANR	336045	Identifier	parse_mime		335844	2					
ANR	336046	ParameterList	"struct magic_set * ms , struct magic_entry * me , const char * line"		335844	3					
ANR	336047	Parameter	struct magic_set * ms	2058:11:47603:47622	335844	0	True				
ANR	336048	ParameterType	struct magic_set *		335844	0					
ANR	336049	Identifier	ms		335844	1					
ANR	336050	Parameter	struct magic_entry * me	2058:33:47625:47646	335844	1	True				
ANR	336051	ParameterType	struct magic_entry *		335844	0					
ANR	336052	Identifier	me		335844	1					
ANR	336053	Parameter	const char * line	2058:57:47649:47664	335844	2	True				
ANR	336054	ParameterType	const char *		335844	0					
ANR	336055	Identifier	line		335844	1					
ANR	336056	CFGEntryNode	ENTRY		335844		True				
ANR	336057	CFGExitNode	EXIT		335844		True				
ANR	336058	Symbol	* m -> mimetype		335844						
ANR	336059	Symbol	isalnum		335844						
ANR	336060	Symbol	ms		335844						
ANR	336061	Symbol	line		335844						
ANR	336062	Symbol	i		335844						
ANR	336063	Symbol	strchr		335844						
ANR	336064	Symbol	* l ++		335844						
ANR	336065	Symbol	l		335844						
ANR	336066	Symbol	m		335844						
ANR	336067	Symbol	me -> mp		335844						
ANR	336068	Symbol	* ms		335844						
ANR	336069	Symbol	* i		335844						
ANR	336070	Symbol	* l		335844						
ANR	336071	Symbol	m -> mimetype		335844						
ANR	336072	Symbol	* m		335844						
ANR	336073	Symbol	me		335844						
ANR	336074	Symbol	MAGIC_CHECK		335844						
ANR	336075	Symbol	ms -> flags		335844						
ANR	336076	Symbol	me -> cont_count		335844						
ANR	336077	Symbol	* me		335844						
ANR	336078	Symbol	* * m		335844						
ANR	336079	Symbol	isascii		335844						
ANR	336080	Function	check_format_type	2089:8:48409:50193							
ANR	336081	FunctionDef	"check_format_type (const char * ptr , int type)"		336080	0					
ANR	336082	CompoundStatement		2091:0:48458:50193	336080	0					
ANR	336083	IdentifierDeclStatement	int quad = 0 ;	2092:1:48461:48473	336080	0	True				
ANR	336084	IdentifierDecl	quad = 0		336080	0					
ANR	336085	IdentifierDeclType	int		336080	0					
ANR	336086	Identifier	quad		336080	1					
ANR	336087	AssignmentExpression	quad = 0		336080	2		=			
ANR	336088	Identifier	quad		336080	0					
ANR	336089	PrimaryExpression	0		336080	1					
ANR	336090	IfStatement	if ( * ptr == '\\0' )		336080	1					
ANR	336091	Condition	* ptr == '\\0'	2093:5:48480:48491	336080	0	True				
ANR	336092	EqualityExpression	* ptr == '\\0'		336080	0		==			
ANR	336093	UnaryOperationExpression	* ptr		336080	0					
ANR	336094	UnaryOperator	*		336080	0					
ANR	336095	Identifier	ptr		336080	1					
ANR	336096	PrimaryExpression	'\\0'		336080	1					
ANR	336097	CompoundStatement		3:19:35:35	336080	1					
ANR	336098	ReturnStatement	return - 1 ;	2095:2:48533:48542	336080	0	True				
ANR	336099	UnaryOperationExpression	- 1		336080	0					
ANR	336100	UnaryOperator	-		336080	0					
ANR	336101	PrimaryExpression	1		336080	1					
ANR	336102	SwitchStatement	switch ( type )		336080	2					
ANR	336103	Condition	type	2098:9:48557:48560	336080	0	True				
ANR	336104	Identifier	type		336080	0					
ANR	336105	CompoundStatement		8:15:104:104	336080	1					
ANR	336106	Label	case FILE_FMT_QUAD :	2099:1:48566:48584	336080	0	True				
ANR	336107	Identifier	FILE_FMT_QUAD		336080	0					
ANR	336108	ExpressionStatement	quad = 1	2100:2:48588:48596	336080	1	True				
ANR	336109	AssignmentExpression	quad = 1		336080	0		=			
ANR	336110	Identifier	quad		336080	0					
ANR	336111	PrimaryExpression	1		336080	1					
ANR	336112	Label	case FILE_FMT_NUM :	2102:1:48617:48634	336080	2	True				
ANR	336113	Identifier	FILE_FMT_NUM		336080	0					
ANR	336114	IfStatement	if ( * ptr == '-' )		336080	3					
ANR	336115	Condition	* ptr == '-'	2103:6:48642:48652	336080	0	True				
ANR	336116	EqualityExpression	* ptr == '-'		336080	0		==			
ANR	336117	UnaryOperationExpression	* ptr		336080	0					
ANR	336118	UnaryOperator	*		336080	0					
ANR	336119	Identifier	ptr		336080	1					
ANR	336120	PrimaryExpression	'-'		336080	1					
ANR	336121	ExpressionStatement	ptr ++	2104:3:48658:48663	336080	1	True				
ANR	336122	PostIncDecOperationExpression	ptr ++		336080	0					
ANR	336123	Identifier	ptr		336080	0					
ANR	336124	IncDec	++		336080	1					
ANR	336125	IfStatement	if ( * ptr == '.' )		336080	4					
ANR	336126	Condition	* ptr == '.'	2105:6:48671:48681	336080	0	True				
ANR	336127	EqualityExpression	* ptr == '.'		336080	0		==			
ANR	336128	UnaryOperationExpression	* ptr		336080	0					
ANR	336129	UnaryOperator	*		336080	0					
ANR	336130	Identifier	ptr		336080	1					
ANR	336131	PrimaryExpression	'.'		336080	1					
ANR	336132	ExpressionStatement	ptr ++	2106:3:48687:48692	336080	1	True				
ANR	336133	PostIncDecOperationExpression	ptr ++		336080	0					
ANR	336134	Identifier	ptr		336080	0					
ANR	336135	IncDec	++		336080	1					
ANR	336136	WhileStatement	while ( isdigit ( ( unsigned char ) * ptr ) )		336080	5					
ANR	336137	Condition	isdigit ( ( unsigned char ) * ptr )	2107:9:48703:48730	336080	0	True				
ANR	336138	CallExpression	isdigit ( ( unsigned char ) * ptr )		336080	0					
ANR	336139	Callee	isdigit		336080	0					
ANR	336140	Identifier	isdigit		336080	0					
ANR	336141	ArgumentList	( unsigned char ) * ptr		336080	1					
ANR	336142	Argument	( unsigned char ) * ptr		336080	0					
ANR	336143	CastExpression	( unsigned char ) * ptr		336080	0					
ANR	336144	CastTarget	unsigned char		336080	0					
ANR	336145	UnaryOperationExpression	* ptr		336080	1					
ANR	336146	UnaryOperator	*		336080	0					
ANR	336147	Identifier	ptr		336080	1					
ANR	336148	ExpressionStatement	ptr ++	2107:39:48733:48738	336080	1	True				
ANR	336149	PostIncDecOperationExpression	ptr ++		336080	0					
ANR	336150	Identifier	ptr		336080	0					
ANR	336151	IncDec	++		336080	1					
ANR	336152	IfStatement	if ( * ptr == '.' )		336080	6					
ANR	336153	Condition	* ptr == '.'	2108:6:48746:48756	336080	0	True				
ANR	336154	EqualityExpression	* ptr == '.'		336080	0		==			
ANR	336155	UnaryOperationExpression	* ptr		336080	0					
ANR	336156	UnaryOperator	*		336080	0					
ANR	336157	Identifier	ptr		336080	1					
ANR	336158	PrimaryExpression	'.'		336080	1					
ANR	336159	ExpressionStatement	ptr ++	2109:3:48762:48767	336080	1	True				
ANR	336160	PostIncDecOperationExpression	ptr ++		336080	0					
ANR	336161	Identifier	ptr		336080	0					
ANR	336162	IncDec	++		336080	1					
ANR	336163	WhileStatement	while ( isdigit ( ( unsigned char ) * ptr ) )		336080	7					
ANR	336164	Condition	isdigit ( ( unsigned char ) * ptr )	2110:9:48778:48805	336080	0	True				
ANR	336165	CallExpression	isdigit ( ( unsigned char ) * ptr )		336080	0					
ANR	336166	Callee	isdigit		336080	0					
ANR	336167	Identifier	isdigit		336080	0					
ANR	336168	ArgumentList	( unsigned char ) * ptr		336080	1					
ANR	336169	Argument	( unsigned char ) * ptr		336080	0					
ANR	336170	CastExpression	( unsigned char ) * ptr		336080	0					
ANR	336171	CastTarget	unsigned char		336080	0					
ANR	336172	UnaryOperationExpression	* ptr		336080	1					
ANR	336173	UnaryOperator	*		336080	0					
ANR	336174	Identifier	ptr		336080	1					
ANR	336175	ExpressionStatement	ptr ++	2110:39:48808:48813	336080	1	True				
ANR	336176	PostIncDecOperationExpression	ptr ++		336080	0					
ANR	336177	Identifier	ptr		336080	0					
ANR	336178	IncDec	++		336080	1					
ANR	336179	IfStatement	if ( quad )		336080	8					
ANR	336180	Condition	quad	2111:6:48821:48824	336080	0	True				
ANR	336181	Identifier	quad		336080	0					
ANR	336182	CompoundStatement		21:12:368:368	336080	1					
ANR	336183	IfStatement	if ( * ptr ++ != 'l' )		336080	0					
ANR	336184	Condition	* ptr ++ != 'l'	2112:7:48836:48848	336080	0	True				
ANR	336185	EqualityExpression	* ptr ++ != 'l'		336080	0		!=			
ANR	336186	UnaryOperationExpression	* ptr ++		336080	0					
ANR	336187	UnaryOperator	*		336080	0					
ANR	336188	PostIncDecOperationExpression	ptr ++		336080	1					
ANR	336189	Identifier	ptr		336080	0					
ANR	336190	IncDec	++		336080	1					
ANR	336191	PrimaryExpression	'l'		336080	1					
ANR	336192	ReturnStatement	return - 1 ;	2113:4:48855:48864	336080	1	True				
ANR	336193	UnaryOperationExpression	- 1		336080	0					
ANR	336194	UnaryOperator	-		336080	0					
ANR	336195	PrimaryExpression	1		336080	1					
ANR	336196	IfStatement	if ( * ptr ++ != 'l' )		336080	1					
ANR	336197	Condition	* ptr ++ != 'l'	2114:7:48873:48885	336080	0	True				
ANR	336198	EqualityExpression	* ptr ++ != 'l'		336080	0		!=			
ANR	336199	UnaryOperationExpression	* ptr ++		336080	0					
ANR	336200	UnaryOperator	*		336080	0					
ANR	336201	PostIncDecOperationExpression	ptr ++		336080	1					
ANR	336202	Identifier	ptr		336080	0					
ANR	336203	IncDec	++		336080	1					
ANR	336204	PrimaryExpression	'l'		336080	1					
ANR	336205	ReturnStatement	return - 1 ;	2115:4:48892:48901	336080	1	True				
ANR	336206	UnaryOperationExpression	- 1		336080	0					
ANR	336207	UnaryOperator	-		336080	0					
ANR	336208	PrimaryExpression	1		336080	1					
ANR	336209	SwitchStatement	switch ( * ptr ++ )		336080	9					
ANR	336210	Condition	* ptr ++	2118:10:48919:48924	336080	0	True				
ANR	336211	UnaryOperationExpression	* ptr ++		336080	0					
ANR	336212	UnaryOperator	*		336080	0					
ANR	336213	PostIncDecOperationExpression	ptr ++		336080	1					
ANR	336214	Identifier	ptr		336080	0					
ANR	336215	IncDec	++		336080	1					
ANR	336216	CompoundStatement		28:18:468:468	336080	1					
ANR	336217	Label	case 'l' :	2119:2:48931:48939	336080	0	True				
ANR	336218	SwitchStatement	switch ( * ptr ++ )		336080	1					
ANR	336219	Condition	* ptr ++	2120:11:48952:48957	336080	0	True				
ANR	336220	UnaryOperationExpression	* ptr ++		336080	0					
ANR	336221	UnaryOperator	*		336080	0					
ANR	336222	PostIncDecOperationExpression	ptr ++		336080	1					
ANR	336223	Identifier	ptr		336080	0					
ANR	336224	IncDec	++		336080	1					
ANR	336225	CompoundStatement		30:19:501:501	336080	1					
ANR	336226	Label	case 'i' :	2121:3:48965:48973	336080	0	True				
ANR	336227	Label	case 'd' :	2122:3:48978:48986	336080	1	True				
ANR	336228	Label	case 'u' :	2123:3:48991:48999	336080	2	True				
ANR	336229	Label	case 'o' :	2124:3:49004:49012	336080	3	True				
ANR	336230	Label	case 'x' :	2125:3:49017:49025	336080	4	True				
ANR	336231	Label	case 'X' :	2126:3:49030:49038	336080	5	True				
ANR	336232	ReturnStatement	return 0 ;	2127:4:49044:49052	336080	6	True				
ANR	336233	PrimaryExpression	0		336080	0					
ANR	336234	Label	default :	2128:3:49057:49064	336080	7	True				
ANR	336235	Identifier	default		336080	0					
ANR	336236	ReturnStatement	return - 1 ;	2129:4:49070:49079	336080	8	True				
ANR	336237	UnaryOperationExpression	- 1		336080	0					
ANR	336238	UnaryOperator	-		336080	0					
ANR	336239	PrimaryExpression	1		336080	1					
ANR	336240	Label	case 'h' :	2132:2:49091:49099	336080	2	True				
ANR	336241	SwitchStatement	switch ( * ptr ++ )		336080	3					
ANR	336242	Condition	* ptr ++	2133:11:49112:49117	336080	0	True				
ANR	336243	UnaryOperationExpression	* ptr ++		336080	0					
ANR	336244	UnaryOperator	*		336080	0					
ANR	336245	PostIncDecOperationExpression	ptr ++		336080	1					
ANR	336246	Identifier	ptr		336080	0					
ANR	336247	IncDec	++		336080	1					
ANR	336248	CompoundStatement		43:19:661:661	336080	1					
ANR	336249	Label	case 'h' :	2134:3:49125:49133	336080	0	True				
ANR	336250	SwitchStatement	switch ( * ptr ++ )		336080	1					
ANR	336251	Condition	* ptr ++	2135:12:49147:49152	336080	0	True				
ANR	336252	UnaryOperationExpression	* ptr ++		336080	0					
ANR	336253	UnaryOperator	*		336080	0					
ANR	336254	PostIncDecOperationExpression	ptr ++		336080	1					
ANR	336255	Identifier	ptr		336080	0					
ANR	336256	IncDec	++		336080	1					
ANR	336257	CompoundStatement		45:20:696:696	336080	1					
ANR	336258	Label	case 'i' :	2136:4:49161:49169	336080	0	True				
ANR	336259	Label	case 'd' :	2137:4:49175:49183	336080	1	True				
ANR	336260	Label	case 'u' :	2138:4:49189:49197	336080	2	True				
ANR	336261	Label	case 'o' :	2139:4:49203:49211	336080	3	True				
ANR	336262	Label	case 'x' :	2140:4:49217:49225	336080	4	True				
ANR	336263	Label	case 'X' :	2141:4:49231:49239	336080	5	True				
ANR	336264	ReturnStatement	return 0 ;	2142:5:49246:49254	336080	6	True				
ANR	336265	PrimaryExpression	0		336080	0					
ANR	336266	Label	default :	2143:4:49260:49267	336080	7	True				
ANR	336267	Identifier	default		336080	0					
ANR	336268	ReturnStatement	return - 1 ;	2144:5:49274:49283	336080	8	True				
ANR	336269	UnaryOperationExpression	- 1		336080	0					
ANR	336270	UnaryOperator	-		336080	0					
ANR	336271	PrimaryExpression	1		336080	1					
ANR	336272	Label	case 'd' :	2146:3:49294:49302	336080	2	True				
ANR	336273	ReturnStatement	return 0 ;	2147:4:49308:49316	336080	3	True				
ANR	336274	PrimaryExpression	0		336080	0					
ANR	336275	Label	default :	2148:3:49321:49328	336080	4	True				
ANR	336276	Identifier	default		336080	0					
ANR	336277	ReturnStatement	return - 1 ;	2149:4:49334:49343	336080	5	True				
ANR	336278	UnaryOperationExpression	- 1		336080	0					
ANR	336279	UnaryOperator	-		336080	0					
ANR	336280	PrimaryExpression	1		336080	1					
ANR	336281	Label	case 'i' :	2152:2:49353:49361	336080	4	True				
ANR	336282	Label	case 'c' :	2153:2:49365:49373	336080	5	True				
ANR	336283	Label	case 'd' :	2154:2:49377:49385	336080	6	True				
ANR	336284	Label	case 'u' :	2155:2:49389:49397	336080	7	True				
ANR	336285	Label	case 'o' :	2156:2:49401:49409	336080	8	True				
ANR	336286	Label	case 'x' :	2157:2:49413:49421	336080	9	True				
ANR	336287	Label	case 'X' :	2158:2:49425:49433	336080	10	True				
ANR	336288	ReturnStatement	return 0 ;	2159:3:49438:49446	336080	11	True				
ANR	336289	PrimaryExpression	0		336080	0					
ANR	336290	Label	default :	2161:2:49454:49461	336080	12	True				
ANR	336291	Identifier	default		336080	0					
ANR	336292	ReturnStatement	return - 1 ;	2162:3:49466:49475	336080	13	True				
ANR	336293	UnaryOperationExpression	- 1		336080	0					
ANR	336294	UnaryOperator	-		336080	0					
ANR	336295	PrimaryExpression	1		336080	1					
ANR	336296	Label	case FILE_FMT_FLOAT :	2165:1:49485:49504	336080	10	True				
ANR	336297	Identifier	FILE_FMT_FLOAT		336080	0					
ANR	336298	Label	case FILE_FMT_DOUBLE :	2166:1:49507:49527	336080	11	True				
ANR	336299	Identifier	FILE_FMT_DOUBLE		336080	0					
ANR	336300	IfStatement	if ( * ptr == '-' )		336080	12					
ANR	336301	Condition	* ptr == '-'	2167:6:49535:49545	336080	0	True				
ANR	336302	EqualityExpression	* ptr == '-'		336080	0		==			
ANR	336303	UnaryOperationExpression	* ptr		336080	0					
ANR	336304	UnaryOperator	*		336080	0					
ANR	336305	Identifier	ptr		336080	1					
ANR	336306	PrimaryExpression	'-'		336080	1					
ANR	336307	ExpressionStatement	ptr ++	2168:3:49551:49556	336080	1	True				
ANR	336308	PostIncDecOperationExpression	ptr ++		336080	0					
ANR	336309	Identifier	ptr		336080	0					
ANR	336310	IncDec	++		336080	1					
ANR	336311	IfStatement	if ( * ptr == '.' )		336080	13					
ANR	336312	Condition	* ptr == '.'	2169:6:49564:49574	336080	0	True				
ANR	336313	EqualityExpression	* ptr == '.'		336080	0		==			
ANR	336314	UnaryOperationExpression	* ptr		336080	0					
ANR	336315	UnaryOperator	*		336080	0					
ANR	336316	Identifier	ptr		336080	1					
ANR	336317	PrimaryExpression	'.'		336080	1					
ANR	336318	ExpressionStatement	ptr ++	2170:3:49580:49585	336080	1	True				
ANR	336319	PostIncDecOperationExpression	ptr ++		336080	0					
ANR	336320	Identifier	ptr		336080	0					
ANR	336321	IncDec	++		336080	1					
ANR	336322	WhileStatement	while ( isdigit ( ( unsigned char ) * ptr ) )		336080	14					
ANR	336323	Condition	isdigit ( ( unsigned char ) * ptr )	2171:9:49596:49623	336080	0	True				
ANR	336324	CallExpression	isdigit ( ( unsigned char ) * ptr )		336080	0					
ANR	336325	Callee	isdigit		336080	0					
ANR	336326	Identifier	isdigit		336080	0					
ANR	336327	ArgumentList	( unsigned char ) * ptr		336080	1					
ANR	336328	Argument	( unsigned char ) * ptr		336080	0					
ANR	336329	CastExpression	( unsigned char ) * ptr		336080	0					
ANR	336330	CastTarget	unsigned char		336080	0					
ANR	336331	UnaryOperationExpression	* ptr		336080	1					
ANR	336332	UnaryOperator	*		336080	0					
ANR	336333	Identifier	ptr		336080	1					
ANR	336334	ExpressionStatement	ptr ++	2171:39:49626:49631	336080	1	True				
ANR	336335	PostIncDecOperationExpression	ptr ++		336080	0					
ANR	336336	Identifier	ptr		336080	0					
ANR	336337	IncDec	++		336080	1					
ANR	336338	IfStatement	if ( * ptr == '.' )		336080	15					
ANR	336339	Condition	* ptr == '.'	2172:6:49639:49649	336080	0	True				
ANR	336340	EqualityExpression	* ptr == '.'		336080	0		==			
ANR	336341	UnaryOperationExpression	* ptr		336080	0					
ANR	336342	UnaryOperator	*		336080	0					
ANR	336343	Identifier	ptr		336080	1					
ANR	336344	PrimaryExpression	'.'		336080	1					
ANR	336345	ExpressionStatement	ptr ++	2173:3:49655:49660	336080	1	True				
ANR	336346	PostIncDecOperationExpression	ptr ++		336080	0					
ANR	336347	Identifier	ptr		336080	0					
ANR	336348	IncDec	++		336080	1					
ANR	336349	WhileStatement	while ( isdigit ( ( unsigned char ) * ptr ) )		336080	16					
ANR	336350	Condition	isdigit ( ( unsigned char ) * ptr )	2174:9:49671:49698	336080	0	True				
ANR	336351	CallExpression	isdigit ( ( unsigned char ) * ptr )		336080	0					
ANR	336352	Callee	isdigit		336080	0					
ANR	336353	Identifier	isdigit		336080	0					
ANR	336354	ArgumentList	( unsigned char ) * ptr		336080	1					
ANR	336355	Argument	( unsigned char ) * ptr		336080	0					
ANR	336356	CastExpression	( unsigned char ) * ptr		336080	0					
ANR	336357	CastTarget	unsigned char		336080	0					
ANR	336358	UnaryOperationExpression	* ptr		336080	1					
ANR	336359	UnaryOperator	*		336080	0					
ANR	336360	Identifier	ptr		336080	1					
ANR	336361	ExpressionStatement	ptr ++	2174:39:49701:49706	336080	1	True				
ANR	336362	PostIncDecOperationExpression	ptr ++		336080	0					
ANR	336363	Identifier	ptr		336080	0					
ANR	336364	IncDec	++		336080	1					
ANR	336365	SwitchStatement	switch ( * ptr ++ )		336080	17					
ANR	336366	Condition	* ptr ++	2176:10:49720:49725	336080	0	True				
ANR	336367	UnaryOperationExpression	* ptr ++		336080	0					
ANR	336368	UnaryOperator	*		336080	0					
ANR	336369	PostIncDecOperationExpression	ptr ++		336080	1					
ANR	336370	Identifier	ptr		336080	0					
ANR	336371	IncDec	++		336080	1					
ANR	336372	CompoundStatement		86:18:1269:1269	336080	1					
ANR	336373	Label	case 'e' :	2177:2:49732:49740	336080	0	True				
ANR	336374	Label	case 'E' :	2178:2:49744:49752	336080	1	True				
ANR	336375	Label	case 'f' :	2179:2:49756:49764	336080	2	True				
ANR	336376	Label	case 'F' :	2180:2:49768:49776	336080	3	True				
ANR	336377	Label	case 'g' :	2181:2:49780:49788	336080	4	True				
ANR	336378	Label	case 'G' :	2182:2:49792:49800	336080	5	True				
ANR	336379	ReturnStatement	return 0 ;	2183:3:49805:49813	336080	6	True				
ANR	336380	PrimaryExpression	0		336080	0					
ANR	336381	Label	default :	2185:2:49821:49828	336080	7	True				
ANR	336382	Identifier	default		336080	0					
ANR	336383	ReturnStatement	return - 1 ;	2186:3:49833:49842	336080	8	True				
ANR	336384	UnaryOperationExpression	- 1		336080	0					
ANR	336385	UnaryOperator	-		336080	0					
ANR	336386	PrimaryExpression	1		336080	1					
ANR	336387	Label	case FILE_FMT_STR :	2190:1:49853:49870	336080	18	True				
ANR	336388	Identifier	FILE_FMT_STR		336080	0					
ANR	336389	IfStatement	if ( * ptr == '-' )		336080	19					
ANR	336390	Condition	* ptr == '-'	2191:6:49878:49888	336080	0	True				
ANR	336391	EqualityExpression	* ptr == '-'		336080	0		==			
ANR	336392	UnaryOperationExpression	* ptr		336080	0					
ANR	336393	UnaryOperator	*		336080	0					
ANR	336394	Identifier	ptr		336080	1					
ANR	336395	PrimaryExpression	'-'		336080	1					
ANR	336396	ExpressionStatement	ptr ++	2192:3:49894:49899	336080	1	True				
ANR	336397	PostIncDecOperationExpression	ptr ++		336080	0					
ANR	336398	Identifier	ptr		336080	0					
ANR	336399	IncDec	++		336080	1					
ANR	336400	WhileStatement	while ( isdigit ( ( unsigned char ) * ptr ) )		336080	20					
ANR	336401	Condition	isdigit ( ( unsigned char ) * ptr )	2193:9:49910:49938	336080	0	True				
ANR	336402	CallExpression	isdigit ( ( unsigned char ) * ptr )		336080	0					
ANR	336403	Callee	isdigit		336080	0					
ANR	336404	Identifier	isdigit		336080	0					
ANR	336405	ArgumentList	( unsigned char ) * ptr		336080	1					
ANR	336406	Argument	( unsigned char ) * ptr		336080	0					
ANR	336407	CastExpression	( unsigned char ) * ptr		336080	0					
ANR	336408	CastTarget	unsigned char		336080	0					
ANR	336409	UnaryOperationExpression	* ptr		336080	1					
ANR	336410	UnaryOperator	*		336080	0					
ANR	336411	Identifier	ptr		336080	1					
ANR	336412	ExpressionStatement	ptr ++	2194:3:49944:49949	336080	1	True				
ANR	336413	PostIncDecOperationExpression	ptr ++		336080	0					
ANR	336414	Identifier	ptr		336080	0					
ANR	336415	IncDec	++		336080	1					
ANR	336416	IfStatement	if ( * ptr == '.' )		336080	21					
ANR	336417	Condition	* ptr == '.'	2195:6:49957:49967	336080	0	True				
ANR	336418	EqualityExpression	* ptr == '.'		336080	0		==			
ANR	336419	UnaryOperationExpression	* ptr		336080	0					
ANR	336420	UnaryOperator	*		336080	0					
ANR	336421	Identifier	ptr		336080	1					
ANR	336422	PrimaryExpression	'.'		336080	1					
ANR	336423	CompoundStatement		105:19:1511:1511	336080	1					
ANR	336424	ExpressionStatement	ptr ++	2196:3:49975:49980	336080	0	True				
ANR	336425	PostIncDecOperationExpression	ptr ++		336080	0					
ANR	336426	Identifier	ptr		336080	0					
ANR	336427	IncDec	++		336080	1					
ANR	336428	WhileStatement	while ( isdigit ( ( unsigned char ) * ptr ) )		336080	1					
ANR	336429	Condition	isdigit ( ( unsigned char ) * ptr )	2197:10:49992:50020	336080	0	True				
ANR	336430	CallExpression	isdigit ( ( unsigned char ) * ptr )		336080	0					
ANR	336431	Callee	isdigit		336080	0					
ANR	336432	Identifier	isdigit		336080	0					
ANR	336433	ArgumentList	( unsigned char ) * ptr		336080	1					
ANR	336434	Argument	( unsigned char ) * ptr		336080	0					
ANR	336435	CastExpression	( unsigned char ) * ptr		336080	0					
ANR	336436	CastTarget	unsigned char		336080	0					
ANR	336437	UnaryOperationExpression	* ptr		336080	1					
ANR	336438	UnaryOperator	*		336080	0					
ANR	336439	Identifier	ptr		336080	1					
ANR	336440	ExpressionStatement	ptr ++	2198:4:50027:50032	336080	1	True				
ANR	336441	PostIncDecOperationExpression	ptr ++		336080	0					
ANR	336442	Identifier	ptr		336080	0					
ANR	336443	IncDec	++		336080	1					
ANR	336444	SwitchStatement	switch ( * ptr ++ )		336080	22					
ANR	336445	Condition	* ptr ++	2201:10:50051:50056	336080	0	True				
ANR	336446	UnaryOperationExpression	* ptr ++		336080	0					
ANR	336447	UnaryOperator	*		336080	0					
ANR	336448	PostIncDecOperationExpression	ptr ++		336080	1					
ANR	336449	Identifier	ptr		336080	0					
ANR	336450	IncDec	++		336080	1					
ANR	336451	CompoundStatement		111:18:1600:1600	336080	1					
ANR	336452	Label	case 's' :	2202:2:50063:50071	336080	0	True				
ANR	336453	ReturnStatement	return 0 ;	2203:3:50076:50084	336080	1	True				
ANR	336454	PrimaryExpression	0		336080	0					
ANR	336455	Label	default :	2204:2:50088:50095	336080	2	True				
ANR	336456	Identifier	default		336080	0					
ANR	336457	ReturnStatement	return - 1 ;	2205:3:50100:50109	336080	3	True				
ANR	336458	UnaryOperationExpression	- 1		336080	0					
ANR	336459	UnaryOperator	-		336080	0					
ANR	336460	PrimaryExpression	1		336080	1					
ANR	336461	Label	default :	2208:1:50119:50126	336080	23	True				
ANR	336462	Identifier	default		336080	0					
ANR	336463	ExpressionStatement	abort ( )	2210:2:50153:50160	336080	24	True				
ANR	336464	CallExpression	abort ( )		336080	0					
ANR	336465	Callee	abort		336080	0					
ANR	336466	Identifier	abort		336080	0					
ANR	336467	ArgumentList			336080	1					
ANR	336468	ReturnStatement	return - 1 ;	2213:1:50182:50191	336080	3	True				
ANR	336469	UnaryOperationExpression	- 1		336080	0					
ANR	336470	UnaryOperator	-		336080	0					
ANR	336471	PrimaryExpression	1		336080	1					
ANR	336472	ReturnType	int		336080	1					
ANR	336473	Identifier	check_format_type		336080	2					
ANR	336474	ParameterList	"const char * ptr , int type"		336080	3					
ANR	336475	Parameter	const char * ptr	2090:18:48431:48445	336080	0	True				
ANR	336476	ParameterType	const char *		336080	0					
ANR	336477	Identifier	ptr		336080	1					
ANR	336478	Parameter	int type	2090:35:48448:48455	336080	1	True				
ANR	336479	ParameterType	int		336080	0					
ANR	336480	Identifier	type		336080	1					
ANR	336481	CFGEntryNode	ENTRY		336080		True				
ANR	336482	CFGExitNode	EXIT		336080		True				
ANR	336483	Symbol	quad		336080						
ANR	336484	Symbol	* ptr ++		336080						
ANR	336485	Symbol	* ptr		336080						
ANR	336486	Symbol	type		336080						
ANR	336487	Symbol	isdigit		336080						
ANR	336488	Symbol	ptr		336080						
ANR	336489	Function	check_format	2220:8:50302:51443							
ANR	336490	FunctionDef	"check_format (struct magic_set * ms , struct magic * m)"		336489	0					
ANR	336491	CompoundStatement		2222:0:50358:51443	336489	0					
ANR	336492	IdentifierDeclStatement	char * ptr ;	2223:1:50361:50370	336489	0	True				
ANR	336493	IdentifierDecl	* ptr		336489	0					
ANR	336494	IdentifierDeclType	char *		336489	0					
ANR	336495	Identifier	ptr		336489	1					
ANR	336496	ForStatement	for ( ptr = m -> desc ; * ptr ; ptr ++ )		336489	1					
ANR	336497	ForInit	ptr = m -> desc ;	2225:6:50379:50392	336489	0	True				
ANR	336498	AssignmentExpression	ptr = m -> desc		336489	0		=			
ANR	336499	Identifier	ptr		336489	0					
ANR	336500	PtrMemberAccess	m -> desc		336489	1					
ANR	336501	Identifier	m		336489	0					
ANR	336502	Identifier	desc		336489	1					
ANR	336503	Condition	* ptr	2225:21:50394:50397	336489	1	True				
ANR	336504	UnaryOperationExpression	* ptr		336489	0					
ANR	336505	UnaryOperator	*		336489	0					
ANR	336506	Identifier	ptr		336489	1					
ANR	336507	PostIncDecOperationExpression	ptr ++	2225:27:50400:50404	336489	2	True				
ANR	336508	Identifier	ptr		336489	0					
ANR	336509	IncDec	++		336489	1					
ANR	336510	IfStatement	if ( * ptr == '%' )		336489	3					
ANR	336511	Condition	* ptr == '%'	2226:6:50413:50423	336489	0	True				
ANR	336512	EqualityExpression	* ptr == '%'		336489	0		==			
ANR	336513	UnaryOperationExpression	* ptr		336489	0					
ANR	336514	UnaryOperator	*		336489	0					
ANR	336515	Identifier	ptr		336489	1					
ANR	336516	PrimaryExpression	'%'		336489	1					
ANR	336517	BreakStatement	break ;	2227:3:50429:50434	336489	1	True				
ANR	336518	IfStatement	if ( * ptr == '\\0' )		336489	2					
ANR	336519	Condition	* ptr == '\\0'	2228:5:50441:50452	336489	0	True				
ANR	336520	EqualityExpression	* ptr == '\\0'		336489	0		==			
ANR	336521	UnaryOperationExpression	* ptr		336489	0					
ANR	336522	UnaryOperator	*		336489	0					
ANR	336523	Identifier	ptr		336489	1					
ANR	336524	PrimaryExpression	'\\0'		336489	1					
ANR	336525	CompoundStatement		7:19:96:96	336489	1					
ANR	336526	ReturnStatement	return 1 ;	2230:2:50488:50496	336489	0	True				
ANR	336527	PrimaryExpression	1		336489	0					
ANR	336528	ExpressionStatement	assert ( file_nformats == file_nnames )	2233:1:50503:50539	336489	3	True				
ANR	336529	CallExpression	assert ( file_nformats == file_nnames )		336489	0					
ANR	336530	Callee	assert		336489	0					
ANR	336531	Identifier	assert		336489	0					
ANR	336532	ArgumentList	file_nformats == file_nnames		336489	1					
ANR	336533	Argument	file_nformats == file_nnames		336489	0					
ANR	336534	EqualityExpression	file_nformats == file_nnames		336489	0		==			
ANR	336535	Identifier	file_nformats		336489	0					
ANR	336536	Identifier	file_nnames		336489	1					
ANR	336537	IfStatement	if ( m -> type >= file_nformats )		336489	4					
ANR	336538	Condition	m -> type >= file_nformats	2235:5:50547:50570	336489	0	True				
ANR	336539	RelationalExpression	m -> type >= file_nformats		336489	0		>=			
ANR	336540	PtrMemberAccess	m -> type		336489	0					
ANR	336541	Identifier	m		336489	0					
ANR	336542	Identifier	type		336489	1					
ANR	336543	Identifier	file_nformats		336489	1					
ANR	336544	CompoundStatement		14:31:214:214	336489	1					
ANR	336545	Statement	file_magwarn	2236:2:50577:50588	336489	0	True				
ANR	336546	Statement	(	2236:14:50589:50589	336489	1	True				
ANR	336547	Statement	ms	2236:15:50590:50591	336489	2	True				
ANR	336548	Statement	","	2236:17:50592:50592	336489	3	True				
ANR	336549	Statement	"""Internal error inconsistency between """	2236:19:50594:50632	336489	4	True				
ANR	336550	Statement	"""m->type and format strings"""	2237:6:50640:50667	336489	5	True				
ANR	336551	Statement	)	2237:34:50668:50668	336489	6	True				
ANR	336552	ExpressionStatement		2237:35:50669:50669	336489	7	True				
ANR	336553	ReturnStatement	return - 1 ;	2238:2:50675:50684	336489	8	True				
ANR	336554	UnaryOperationExpression	- 1		336489	0					
ANR	336555	UnaryOperator	-		336489	0					
ANR	336556	PrimaryExpression	1		336489	1					
ANR	336557	IfStatement	if ( file_formats [ m -> type ] == FILE_FMT_NONE )		336489	5					
ANR	336558	Condition	file_formats [ m -> type ] == FILE_FMT_NONE	2240:5:50694:50731	336489	0	True				
ANR	336559	EqualityExpression	file_formats [ m -> type ] == FILE_FMT_NONE		336489	0		==			
ANR	336560	ArrayIndexing	file_formats [ m -> type ]		336489	0					
ANR	336561	Identifier	file_formats		336489	0					
ANR	336562	PtrMemberAccess	m -> type		336489	1					
ANR	336563	Identifier	m		336489	0					
ANR	336564	Identifier	type		336489	1					
ANR	336565	Identifier	FILE_FMT_NONE		336489	1					
ANR	336566	CompoundStatement		19:45:375:375	336489	1					
ANR	336567	Statement	file_magwarn	2241:2:50738:50749	336489	0	True				
ANR	336568	Statement	(	2241:14:50750:50750	336489	1	True				
ANR	336569	Statement	ms	2241:15:50751:50752	336489	2	True				
ANR	336570	Statement	","	2241:17:50753:50753	336489	3	True				
ANR	336571	Statement	"""No format string for `%s' with description """	2241:19:50755:50799	336489	4	True				
ANR	336572	Statement	"""`%s'"""	2242:6:50807:50812	336489	5	True				
ANR	336573	Statement	","	2242:12:50813:50813	336489	6	True				
ANR	336574	Statement	m	2242:14:50815:50815	336489	7	True				
ANR	336575	Statement	->	2242:15:50816:50817	336489	8	True				
ANR	336576	Statement	desc	2242:17:50818:50821	336489	9	True				
ANR	336577	Statement	","	2242:21:50822:50822	336489	10	True				
ANR	336578	Statement	file_names	2242:23:50824:50833	336489	11	True				
ANR	336579	Statement	[	2242:33:50834:50834	336489	12	True				
ANR	336580	Statement	m	2242:34:50835:50835	336489	13	True				
ANR	336581	Statement	->	2242:35:50836:50837	336489	14	True				
ANR	336582	Statement	type	2242:37:50838:50841	336489	15	True				
ANR	336583	Statement	]	2242:41:50842:50842	336489	16	True				
ANR	336584	Statement	)	2242:42:50843:50843	336489	17	True				
ANR	336585	ExpressionStatement		2242:43:50844:50844	336489	18	True				
ANR	336586	ReturnStatement	return - 1 ;	2243:2:50848:50857	336489	19	True				
ANR	336587	UnaryOperationExpression	- 1		336489	0					
ANR	336588	UnaryOperator	-		336489	0					
ANR	336589	PrimaryExpression	1		336489	1					
ANR	336590	ExpressionStatement	ptr ++	2246:1:50864:50869	336489	6	True				
ANR	336591	PostIncDecOperationExpression	ptr ++		336489	0					
ANR	336592	Identifier	ptr		336489	0					
ANR	336593	IncDec	++		336489	1					
ANR	336594	IfStatement	"if ( check_format_type ( ptr , file_formats [ m -> type ] ) == - 1 )"		336489	7					
ANR	336595	Condition	"check_format_type ( ptr , file_formats [ m -> type ] ) == - 1"	2247:5:50876:50926	336489	0	True				
ANR	336596	EqualityExpression	"check_format_type ( ptr , file_formats [ m -> type ] ) == - 1"		336489	0		==			
ANR	336597	CallExpression	"check_format_type ( ptr , file_formats [ m -> type ] )"		336489	0					
ANR	336598	Callee	check_format_type		336489	0					
ANR	336599	Identifier	check_format_type		336489	0					
ANR	336600	ArgumentList	ptr		336489	1					
ANR	336601	Argument	ptr		336489	0					
ANR	336602	Identifier	ptr		336489	0					
ANR	336603	Argument	file_formats [ m -> type ]		336489	1					
ANR	336604	ArrayIndexing	file_formats [ m -> type ]		336489	0					
ANR	336605	Identifier	file_formats		336489	0					
ANR	336606	PtrMemberAccess	m -> type		336489	1					
ANR	336607	Identifier	m		336489	0					
ANR	336608	Identifier	type		336489	1					
ANR	336609	UnaryOperationExpression	- 1		336489	1					
ANR	336610	UnaryOperator	-		336489	0					
ANR	336611	PrimaryExpression	1		336489	1					
ANR	336612	CompoundStatement		26:58:570:570	336489	1					
ANR	336613	Statement	file_magwarn	2252:2:51039:51050	336489	0	True				
ANR	336614	Statement	(	2252:14:51051:51051	336489	1	True				
ANR	336615	Statement	ms	2252:15:51052:51053	336489	2	True				
ANR	336616	Statement	","	2252:17:51054:51054	336489	3	True				
ANR	336617	Statement	"""Printf format `%c' is not valid for type """	2252:19:51056:51098	336489	4	True				
ANR	336618	Statement	"""`%s' in description `%s'"""	2253:6:51106:51131	336489	5	True				
ANR	336619	Statement	","	2253:32:51132:51132	336489	6	True				
ANR	336620	Statement	*	2253:34:51134:51134	336489	7	True				
ANR	336621	Statement	ptr	2253:35:51135:51137	336489	8	True				
ANR	336622	Statement	?	2253:39:51139:51139	336489	9	True				
ANR	336623	Statement	*	2253:41:51141:51141	336489	10	True				
ANR	336624	Label	ptr :	2253:42:51142:51146	336489	11	True				
ANR	336625	Identifier	ptr		336489	0					
ANR	336626	Statement	'?'	2253:48:51148:51150	336489	12	True				
ANR	336627	Statement	","	2253:51:51151:51151	336489	13	True				
ANR	336628	Statement	file_names	2254:6:51159:51168	336489	14	True				
ANR	336629	Statement	[	2254:16:51169:51169	336489	15	True				
ANR	336630	Statement	m	2254:17:51170:51170	336489	16	True				
ANR	336631	Statement	->	2254:18:51171:51172	336489	17	True				
ANR	336632	Statement	type	2254:20:51173:51176	336489	18	True				
ANR	336633	Statement	]	2254:24:51177:51177	336489	19	True				
ANR	336634	Statement	","	2254:25:51178:51178	336489	20	True				
ANR	336635	Statement	m	2254:27:51180:51180	336489	21	True				
ANR	336636	Statement	->	2254:28:51181:51182	336489	22	True				
ANR	336637	Statement	desc	2254:30:51183:51186	336489	23	True				
ANR	336638	Statement	)	2254:34:51187:51187	336489	24	True				
ANR	336639	ExpressionStatement		2254:35:51188:51188	336489	25	True				
ANR	336640	ReturnStatement	return - 1 ;	2255:2:51192:51201	336489	26	True				
ANR	336641	UnaryOperationExpression	- 1		336489	0					
ANR	336642	UnaryOperator	-		336489	0					
ANR	336643	PrimaryExpression	1		336489	1					
ANR	336644	ForStatement	for ( ; * ptr ; ptr ++ )		336489	8					
ANR	336645	Condition	* ptr	2258:8:51216:51219	336489	0	True				
ANR	336646	UnaryOperationExpression	* ptr		336489	0					
ANR	336647	UnaryOperator	*		336489	0					
ANR	336648	Identifier	ptr		336489	1					
ANR	336649	PostIncDecOperationExpression	ptr ++	2258:14:51222:51226	336489	1	True				
ANR	336650	Identifier	ptr		336489	0					
ANR	336651	IncDec	++		336489	1					
ANR	336652	CompoundStatement		37:21:870:870	336489	2					
ANR	336653	IfStatement	if ( * ptr == '%' )		336489	0					
ANR	336654	Condition	* ptr == '%'	2259:6:51237:51247	336489	0	True				
ANR	336655	EqualityExpression	* ptr == '%'		336489	0		==			
ANR	336656	UnaryOperationExpression	* ptr		336489	0					
ANR	336657	UnaryOperator	*		336489	0					
ANR	336658	Identifier	ptr		336489	1					
ANR	336659	PrimaryExpression	'%'		336489	1					
ANR	336660	CompoundStatement		38:19:891:891	336489	1					
ANR	336661	Statement	file_magwarn	2260:3:51255:51266	336489	0	True				
ANR	336662	Statement	(	2260:15:51267:51267	336489	1	True				
ANR	336663	Statement	ms	2260:16:51268:51269	336489	2	True				
ANR	336664	Statement	","	2260:18:51270:51270	336489	3	True				
ANR	336665	Statement	"""Too many format strings (should have at most one) """	2261:7:51279:51330	336489	4	True				
ANR	336666	Statement	"""for `%s' with description `%s'"""	2262:7:51339:51370	336489	5	True				
ANR	336667	Statement	","	2262:39:51371:51371	336489	6	True				
ANR	336668	Statement	file_names	2263:7:51380:51389	336489	7	True				
ANR	336669	Statement	[	2263:17:51390:51390	336489	8	True				
ANR	336670	Statement	m	2263:18:51391:51391	336489	9	True				
ANR	336671	Statement	->	2263:19:51392:51393	336489	10	True				
ANR	336672	Statement	type	2263:21:51394:51397	336489	11	True				
ANR	336673	Statement	]	2263:25:51398:51398	336489	12	True				
ANR	336674	Statement	","	2263:26:51399:51399	336489	13	True				
ANR	336675	Statement	m	2263:28:51401:51401	336489	14	True				
ANR	336676	Statement	->	2263:29:51402:51403	336489	15	True				
ANR	336677	Statement	desc	2263:31:51404:51407	336489	16	True				
ANR	336678	Statement	)	2263:35:51408:51408	336489	17	True				
ANR	336679	ExpressionStatement		2263:36:51409:51409	336489	18	True				
ANR	336680	ReturnStatement	return - 1 ;	2264:3:51414:51423	336489	19	True				
ANR	336681	UnaryOperationExpression	- 1		336489	0					
ANR	336682	UnaryOperator	-		336489	0					
ANR	336683	PrimaryExpression	1		336489	1					
ANR	336684	ReturnStatement	return 0 ;	2267:1:51433:51441	336489	9	True				
ANR	336685	PrimaryExpression	0		336489	0					
ANR	336686	ReturnType	int		336489	1					
ANR	336687	Identifier	check_format		336489	2					
ANR	336688	ParameterList	"struct magic_set * ms , struct magic * m"		336489	3					
ANR	336689	Parameter	struct magic_set * ms	2221:13:50319:50338	336489	0	True				
ANR	336690	ParameterType	struct magic_set *		336489	0					
ANR	336691	Identifier	ms		336489	1					
ANR	336692	Parameter	struct magic * m	2221:35:50341:50355	336489	1	True				
ANR	336693	ParameterType	struct magic *		336489	0					
ANR	336694	Identifier	m		336489	1					
ANR	336695	CFGEntryNode	ENTRY		336489		True				
ANR	336696	CFGExitNode	EXIT		336489		True				
ANR	336697	Symbol	check_format_type		336489						
ANR	336698	Symbol	ms		336489						
ANR	336699	Symbol	file_formats		336489						
ANR	336700	Symbol	file_nnames		336489						
ANR	336701	Symbol	* file_formats		336489						
ANR	336702	Symbol	m		336489						
ANR	336703	Symbol	ptr		336489						
ANR	336704	Symbol	m -> type		336489						
ANR	336705	Symbol	m -> desc		336489						
ANR	336706	Symbol	* m		336489						
ANR	336707	Symbol	FILE_FMT_NONE		336489						
ANR	336708	Symbol	* ptr		336489						
ANR	336709	Symbol	file_nformats		336489						
ANR	336710	Symbol	* m -> type		336489						
ANR	336711	Symbol	* * m		336489						
ANR	336712	Function	getvalue	2275:8:51689:52710							
ANR	336713	FunctionDef	"getvalue (struct magic_set * ms , struct magic * m , const char * * p , int action)"		336712	0					
ANR	336714	CompoundStatement		2277:0:51769:52710	336712	0					
ANR	336715	SwitchStatement	switch ( m -> type )		336712	0					
ANR	336716	Condition	m -> type	2278:9:51780:51786	336712	0	True				
ANR	336717	PtrMemberAccess	m -> type		336712	0					
ANR	336718	Identifier	m		336712	0					
ANR	336719	Identifier	type		336712	1					
ANR	336720	CompoundStatement		2:18:19:19	336712	1					
ANR	336721	Label	case FILE_BESTRING16 :	2279:1:51792:51812	336712	0	True				
ANR	336722	Identifier	FILE_BESTRING16		336712	0					
ANR	336723	Label	case FILE_LESTRING16 :	2280:1:51815:51835	336712	1	True				
ANR	336724	Identifier	FILE_LESTRING16		336712	0					
ANR	336725	Label	case FILE_STRING :	2281:1:51838:51854	336712	2	True				
ANR	336726	Identifier	FILE_STRING		336712	0					
ANR	336727	Label	case FILE_PSTRING :	2282:1:51857:51874	336712	3	True				
ANR	336728	Identifier	FILE_PSTRING		336712	0					
ANR	336729	Label	case FILE_REGEX :	2283:1:51877:51892	336712	4	True				
ANR	336730	Identifier	FILE_REGEX		336712	0					
ANR	336731	Label	case FILE_SEARCH :	2284:1:51895:51911	336712	5	True				
ANR	336732	Identifier	FILE_SEARCH		336712	0					
ANR	336733	Label	case FILE_NAME :	2285:1:51914:51928	336712	6	True				
ANR	336734	Identifier	FILE_NAME		336712	0					
ANR	336735	Label	case FILE_USE :	2286:1:51931:51944	336712	7	True				
ANR	336736	Identifier	FILE_USE		336712	0					
ANR	336737	ExpressionStatement	"* p = getstr ( ms , m , * p , action == FILE_COMPILE )"	2287:2:51948:51994	336712	8	True				
ANR	336738	AssignmentExpression	"* p = getstr ( ms , m , * p , action == FILE_COMPILE )"		336712	0		=			
ANR	336739	UnaryOperationExpression	* p		336712	0					
ANR	336740	UnaryOperator	*		336712	0					
ANR	336741	Identifier	p		336712	1					
ANR	336742	CallExpression	"getstr ( ms , m , * p , action == FILE_COMPILE )"		336712	1					
ANR	336743	Callee	getstr		336712	0					
ANR	336744	Identifier	getstr		336712	0					
ANR	336745	ArgumentList	ms		336712	1					
ANR	336746	Argument	ms		336712	0					
ANR	336747	Identifier	ms		336712	0					
ANR	336748	Argument	m		336712	1					
ANR	336749	Identifier	m		336712	0					
ANR	336750	Argument	* p		336712	2					
ANR	336751	UnaryOperationExpression	* p		336712	0					
ANR	336752	UnaryOperator	*		336712	0					
ANR	336753	Identifier	p		336712	1					
ANR	336754	Argument	action == FILE_COMPILE		336712	3					
ANR	336755	EqualityExpression	action == FILE_COMPILE		336712	0		==			
ANR	336756	Identifier	action		336712	0					
ANR	336757	Identifier	FILE_COMPILE		336712	1					
ANR	336758	IfStatement	if ( * p == NULL )		336712	9					
ANR	336759	Condition	* p == NULL	2288:6:52002:52011	336712	0	True				
ANR	336760	EqualityExpression	* p == NULL		336712	0		==			
ANR	336761	UnaryOperationExpression	* p		336712	0					
ANR	336762	UnaryOperator	*		336712	0					
ANR	336763	Identifier	p		336712	1					
ANR	336764	Identifier	NULL		336712	1					
ANR	336765	CompoundStatement		12:18:244:244	336712	1					
ANR	336766	IfStatement	if ( ms -> flags & MAGIC_CHECK )		336712	0					
ANR	336767	Condition	ms -> flags & MAGIC_CHECK	2289:7:52023:52045	336712	0	True				
ANR	336768	BitAndExpression	ms -> flags & MAGIC_CHECK		336712	0		&			
ANR	336769	PtrMemberAccess	ms -> flags		336712	0					
ANR	336770	Identifier	ms		336712	0					
ANR	336771	Identifier	flags		336712	1					
ANR	336772	Identifier	MAGIC_CHECK		336712	1					
ANR	336773	ExpressionStatement	"file_magwarn ( ms , ""cannot get string from `%s'"" , m -> value . s )"	2290:4:52052:52119	336712	1	True				
ANR	336774	CallExpression	"file_magwarn ( ms , ""cannot get string from `%s'"" , m -> value . s )"		336712	0					
ANR	336775	Callee	file_magwarn		336712	0					
ANR	336776	Identifier	file_magwarn		336712	0					
ANR	336777	ArgumentList	ms		336712	1					
ANR	336778	Argument	ms		336712	0					
ANR	336779	Identifier	ms		336712	0					
ANR	336780	Argument	"""cannot get string from `%s'"""		336712	1					
ANR	336781	PrimaryExpression	"""cannot get string from `%s'"""		336712	0					
ANR	336782	Argument	m -> value . s		336712	2					
ANR	336783	MemberAccess	m -> value . s		336712	0					
ANR	336784	PtrMemberAccess	m -> value		336712	0					
ANR	336785	Identifier	m		336712	0					
ANR	336786	Identifier	value		336712	1					
ANR	336787	Identifier	s		336712	1					
ANR	336788	ReturnStatement	return - 1 ;	2292:3:52124:52133	336712	1	True				
ANR	336789	UnaryOperationExpression	- 1		336712	0					
ANR	336790	UnaryOperator	-		336712	0					
ANR	336791	PrimaryExpression	1		336712	1					
ANR	336792	ReturnStatement	return 0 ;	2294:2:52141:52149	336712	10	True				
ANR	336793	PrimaryExpression	0		336712	0					
ANR	336794	Label	case FILE_FLOAT :	2295:1:52152:52167	336712	11	True				
ANR	336795	Identifier	FILE_FLOAT		336712	0					
ANR	336796	Label	case FILE_BEFLOAT :	2296:1:52170:52187	336712	12	True				
ANR	336797	Identifier	FILE_BEFLOAT		336712	0					
ANR	336798	Label	case FILE_LEFLOAT :	2297:1:52190:52207	336712	13	True				
ANR	336799	Identifier	FILE_LEFLOAT		336712	0					
ANR	336800	IfStatement	if ( m -> reln != 'x' )		336712	14					
ANR	336801	Condition	m -> reln != 'x'	2298:6:52215:52228	336712	0	True				
ANR	336802	EqualityExpression	m -> reln != 'x'		336712	0		!=			
ANR	336803	PtrMemberAccess	m -> reln		336712	0					
ANR	336804	Identifier	m		336712	0					
ANR	336805	Identifier	reln		336712	1					
ANR	336806	PrimaryExpression	'x'		336712	1					
ANR	336807	CompoundStatement		23:3:466:474	336712	1					
ANR	336808	IdentifierDeclStatement	char * ep ;	2299:3:52236:52244	336712	0	True				
ANR	336809	IdentifierDecl	* ep		336712	0					
ANR	336810	IdentifierDeclType	char *		336712	0					
ANR	336811	Identifier	ep		336712	1					
ANR	336812	ExpressionStatement	"m -> value . f = strtof ( * p , & ep )"	2301:3:52268:52296	336712	1	True				
ANR	336813	AssignmentExpression	"m -> value . f = strtof ( * p , & ep )"		336712	0		=			
ANR	336814	MemberAccess	m -> value . f		336712	0					
ANR	336815	PtrMemberAccess	m -> value		336712	0					
ANR	336816	Identifier	m		336712	0					
ANR	336817	Identifier	value		336712	1					
ANR	336818	Identifier	f		336712	1					
ANR	336819	CallExpression	"strtof ( * p , & ep )"		336712	1					
ANR	336820	Callee	strtof		336712	0					
ANR	336821	Identifier	strtof		336712	0					
ANR	336822	ArgumentList	* p		336712	1					
ANR	336823	Argument	* p		336712	0					
ANR	336824	UnaryOperationExpression	* p		336712	0					
ANR	336825	UnaryOperator	*		336712	0					
ANR	336826	Identifier	p		336712	1					
ANR	336827	Argument	& ep		336712	1					
ANR	336828	UnaryOperationExpression	& ep		336712	0					
ANR	336829	UnaryOperator	&		336712	0					
ANR	336830	Identifier	ep		336712	1					
ANR	336831	ExpressionStatement	* p = ep	2305:3:52354:52361	336712	2	True				
ANR	336832	AssignmentExpression	* p = ep		336712	0		=			
ANR	336833	UnaryOperationExpression	* p		336712	0					
ANR	336834	UnaryOperator	*		336712	0					
ANR	336835	Identifier	p		336712	1					
ANR	336836	Identifier	ep		336712	1					
ANR	336837	ReturnStatement	return 0 ;	2307:2:52369:52377	336712	15	True				
ANR	336838	PrimaryExpression	0		336712	0					
ANR	336839	Label	case FILE_DOUBLE :	2308:1:52380:52396	336712	16	True				
ANR	336840	Identifier	FILE_DOUBLE		336712	0					
ANR	336841	Label	case FILE_BEDOUBLE :	2309:1:52399:52417	336712	17	True				
ANR	336842	Identifier	FILE_BEDOUBLE		336712	0					
ANR	336843	Label	case FILE_LEDOUBLE :	2310:1:52420:52438	336712	18	True				
ANR	336844	Identifier	FILE_LEDOUBLE		336712	0					
ANR	336845	IfStatement	if ( m -> reln != 'x' )		336712	19					
ANR	336846	Condition	m -> reln != 'x'	2311:6:52446:52459	336712	0	True				
ANR	336847	EqualityExpression	m -> reln != 'x'		336712	0		!=			
ANR	336848	PtrMemberAccess	m -> reln		336712	0					
ANR	336849	Identifier	m		336712	0					
ANR	336850	Identifier	reln		336712	1					
ANR	336851	PrimaryExpression	'x'		336712	1					
ANR	336852	CompoundStatement		36:3:697:705	336712	1					
ANR	336853	IdentifierDeclStatement	char * ep ;	2312:3:52467:52475	336712	0	True				
ANR	336854	IdentifierDecl	* ep		336712	0					
ANR	336855	IdentifierDeclType	char *		336712	0					
ANR	336856	Identifier	ep		336712	1					
ANR	336857	ExpressionStatement	"m -> value . d = strtod ( * p , & ep )"	2313:3:52480:52508	336712	1	True				
ANR	336858	AssignmentExpression	"m -> value . d = strtod ( * p , & ep )"		336712	0		=			
ANR	336859	MemberAccess	m -> value . d		336712	0					
ANR	336860	PtrMemberAccess	m -> value		336712	0					
ANR	336861	Identifier	m		336712	0					
ANR	336862	Identifier	value		336712	1					
ANR	336863	Identifier	d		336712	1					
ANR	336864	CallExpression	"strtod ( * p , & ep )"		336712	1					
ANR	336865	Callee	strtod		336712	0					
ANR	336866	Identifier	strtod		336712	0					
ANR	336867	ArgumentList	* p		336712	1					
ANR	336868	Argument	* p		336712	0					
ANR	336869	UnaryOperationExpression	* p		336712	0					
ANR	336870	UnaryOperator	*		336712	0					
ANR	336871	Identifier	p		336712	1					
ANR	336872	Argument	& ep		336712	1					
ANR	336873	UnaryOperationExpression	& ep		336712	0					
ANR	336874	UnaryOperator	&		336712	0					
ANR	336875	Identifier	ep		336712	1					
ANR	336876	ExpressionStatement	* p = ep	2314:3:52513:52520	336712	2	True				
ANR	336877	AssignmentExpression	* p = ep		336712	0		=			
ANR	336878	UnaryOperationExpression	* p		336712	0					
ANR	336879	UnaryOperator	*		336712	0					
ANR	336880	Identifier	p		336712	1					
ANR	336881	Identifier	ep		336712	1					
ANR	336882	ReturnStatement	return 0 ;	2316:2:52528:52536	336712	20	True				
ANR	336883	PrimaryExpression	0		336712	0					
ANR	336884	Label	default :	2317:1:52539:52546	336712	21	True				
ANR	336885	Identifier	default		336712	0					
ANR	336886	IfStatement	if ( m -> reln != 'x' )		336712	22					
ANR	336887	Condition	m -> reln != 'x'	2318:6:52554:52567	336712	0	True				
ANR	336888	EqualityExpression	m -> reln != 'x'		336712	0		!=			
ANR	336889	PtrMemberAccess	m -> reln		336712	0					
ANR	336890	Identifier	m		336712	0					
ANR	336891	Identifier	reln		336712	1					
ANR	336892	PrimaryExpression	'x'		336712	1					
ANR	336893	CompoundStatement		43:3:805:813	336712	1					
ANR	336894	IdentifierDeclStatement	char * ep ;	2319:3:52575:52583	336712	0	True				
ANR	336895	IdentifierDecl	* ep		336712	0					
ANR	336896	IdentifierDeclType	char *		336712	0					
ANR	336897	Identifier	ep		336712	1					
ANR	336898	ExpressionStatement	"m -> value . q = file_signextend ( ms , m , ( uint64_t ) strtoull ( * p , & ep , 0 ) )"	2320:3:52588:52662	336712	1	True				
ANR	336899	AssignmentExpression	"m -> value . q = file_signextend ( ms , m , ( uint64_t ) strtoull ( * p , & ep , 0 ) )"		336712	0		=			
ANR	336900	MemberAccess	m -> value . q		336712	0					
ANR	336901	PtrMemberAccess	m -> value		336712	0					
ANR	336902	Identifier	m		336712	0					
ANR	336903	Identifier	value		336712	1					
ANR	336904	Identifier	q		336712	1					
ANR	336905	CallExpression	"file_signextend ( ms , m , ( uint64_t ) strtoull ( * p , & ep , 0 ) )"		336712	1					
ANR	336906	Callee	file_signextend		336712	0					
ANR	336907	Identifier	file_signextend		336712	0					
ANR	336908	ArgumentList	ms		336712	1					
ANR	336909	Argument	ms		336712	0					
ANR	336910	Identifier	ms		336712	0					
ANR	336911	Argument	m		336712	1					
ANR	336912	Identifier	m		336712	0					
ANR	336913	Argument	"( uint64_t ) strtoull ( * p , & ep , 0 )"		336712	2					
ANR	336914	CastExpression	"( uint64_t ) strtoull ( * p , & ep , 0 )"		336712	0					
ANR	336915	CastTarget	uint64_t		336712	0					
ANR	336916	CallExpression	"strtoull ( * p , & ep , 0 )"		336712	1					
ANR	336917	Callee	strtoull		336712	0					
ANR	336918	Identifier	strtoull		336712	0					
ANR	336919	ArgumentList	* p		336712	1					
ANR	336920	Argument	* p		336712	0					
ANR	336921	UnaryOperationExpression	* p		336712	0					
ANR	336922	UnaryOperator	*		336712	0					
ANR	336923	Identifier	p		336712	1					
ANR	336924	Argument	& ep		336712	1					
ANR	336925	UnaryOperationExpression	& ep		336712	0					
ANR	336926	UnaryOperator	&		336712	0					
ANR	336927	Identifier	ep		336712	1					
ANR	336928	Argument	0		336712	2					
ANR	336929	PrimaryExpression	0		336712	0					
ANR	336930	ExpressionStatement	* p = ep	2322:3:52667:52674	336712	2	True				
ANR	336931	AssignmentExpression	* p = ep		336712	0		=			
ANR	336932	UnaryOperationExpression	* p		336712	0					
ANR	336933	UnaryOperator	*		336712	0					
ANR	336934	Identifier	p		336712	1					
ANR	336935	Identifier	ep		336712	1					
ANR	336936	ExpressionStatement	eatsize ( p )	2323:3:52679:52689	336712	3	True				
ANR	336937	CallExpression	eatsize ( p )		336712	0					
ANR	336938	Callee	eatsize		336712	0					
ANR	336939	Identifier	eatsize		336712	0					
ANR	336940	ArgumentList	p		336712	1					
ANR	336941	Argument	p		336712	0					
ANR	336942	Identifier	p		336712	0					
ANR	336943	ReturnStatement	return 0 ;	2325:2:52697:52705	336712	23	True				
ANR	336944	PrimaryExpression	0		336712	0					
ANR	336945	ReturnType	int		336712	1					
ANR	336946	Identifier	getvalue		336712	2					
ANR	336947	ParameterList	"struct magic_set * ms , struct magic * m , const char * * p , int action"		336712	3					
ANR	336948	Parameter	struct magic_set * ms	2276:9:51702:51721	336712	0	True				
ANR	336949	ParameterType	struct magic_set *		336712	0					
ANR	336950	Identifier	ms		336712	1					
ANR	336951	Parameter	struct magic * m	2276:31:51724:51738	336712	1	True				
ANR	336952	ParameterType	struct magic *		336712	0					
ANR	336953	Identifier	m		336712	1					
ANR	336954	Parameter	const char * * p	2276:48:51741:51754	336712	2	True				
ANR	336955	ParameterType	const char * *		336712	0					
ANR	336956	Identifier	p		336712	1					
ANR	336957	Parameter	int action	2276:64:51757:51766	336712	3	True				
ANR	336958	ParameterType	int		336712	0					
ANR	336959	Identifier	action		336712	1					
ANR	336960	CFGEntryNode	ENTRY		336712		True				
ANR	336961	CFGExitNode	EXIT		336712		True				
ANR	336962	Symbol	* ms		336712						
ANR	336963	Symbol	strtoull		336712						
ANR	336964	Symbol	m -> type		336712						
ANR	336965	Symbol	getstr		336712						
ANR	336966	Symbol	m -> reln		336712						
ANR	336967	Symbol	action		336712						
ANR	336968	Symbol	FILE_COMPILE		336712						
ANR	336969	Symbol	NULL		336712						
ANR	336970	Symbol	m -> value		336712						
ANR	336971	Symbol	file_signextend		336712						
ANR	336972	Symbol	ms		336712						
ANR	336973	Symbol	m -> value . s		336712						
ANR	336974	Symbol	m -> value . q		336712						
ANR	336975	Symbol	ep		336712						
ANR	336976	Symbol	m		336712						
ANR	336977	Symbol	strtod		336712						
ANR	336978	Symbol	strtof		336712						
ANR	336979	Symbol	p		336712						
ANR	336980	Symbol	& ep		336712						
ANR	336981	Symbol	* m		336712						
ANR	336982	Symbol	m -> value . f		336712						
ANR	336983	Symbol	MAGIC_CHECK		336712						
ANR	336984	Symbol	m -> value . d		336712						
ANR	336985	Symbol	* p		336712						
ANR	336986	Symbol	ms -> flags		336712						
ANR	336987	Function	getstr	2335:8:52959:55751							
ANR	336988	FunctionDef	"getstr (struct magic_set * ms , struct magic * m , const char * s , int warn)"		336987	0					
ANR	336989	CompoundStatement		2337:0:53043:55751	336987	0					
ANR	336990	IdentifierDeclStatement	const char * origs = s ;	2338:1:53046:53067	336987	0	True				
ANR	336991	IdentifierDecl	* origs = s		336987	0					
ANR	336992	IdentifierDeclType	const char *		336987	0					
ANR	336993	Identifier	origs		336987	1					
ANR	336994	AssignmentExpression	* origs = s		336987	2		=			
ANR	336995	Identifier	s		336987	0					
ANR	336996	Identifier	s		336987	1					
ANR	336997	IdentifierDeclStatement	char * p = m -> value . s ;	2339:1:53070:53090	336987	1	True				
ANR	336998	IdentifierDecl	* p = m -> value . s		336987	0					
ANR	336999	IdentifierDeclType	char *		336987	0					
ANR	337000	Identifier	p		336987	1					
ANR	337001	AssignmentExpression	* p = m -> value . s		336987	2		=			
ANR	337002	Identifier	p		336987	0					
ANR	337003	MemberAccess	m -> value . s		336987	1					
ANR	337004	PtrMemberAccess	m -> value		336987	0					
ANR	337005	Identifier	m		336987	0					
ANR	337006	Identifier	value		336987	1					
ANR	337007	Identifier	s		336987	1					
ANR	337008	IdentifierDeclStatement	size_t plen = sizeof ( m -> value . s ) ;	2340:1:53093:53126	336987	2	True				
ANR	337009	IdentifierDecl	plen = sizeof ( m -> value . s )		336987	0					
ANR	337010	IdentifierDeclType	size_t		336987	0					
ANR	337011	Identifier	plen		336987	1					
ANR	337012	AssignmentExpression	plen = sizeof ( m -> value . s )		336987	2		=			
ANR	337013	Identifier	plen		336987	0					
ANR	337014	SizeofExpression	sizeof ( m -> value . s )		336987	1					
ANR	337015	Sizeof	sizeof		336987	0					
ANR	337016	MemberAccess	m -> value . s		336987	1					
ANR	337017	PtrMemberAccess	m -> value		336987	0					
ANR	337018	Identifier	m		336987	0					
ANR	337019	Identifier	value		336987	1					
ANR	337020	Identifier	s		336987	1					
ANR	337021	IdentifierDeclStatement	char * origp = p ;	2341:1:53129:53145	336987	3	True				
ANR	337022	IdentifierDecl	* origp = p		336987	0					
ANR	337023	IdentifierDeclType	char *		336987	0					
ANR	337024	Identifier	origp		336987	1					
ANR	337025	AssignmentExpression	* origp = p		336987	2		=			
ANR	337026	Identifier	p		336987	0					
ANR	337027	Identifier	p		336987	1					
ANR	337028	IdentifierDeclStatement	char * pmax = p + plen - 1 ;	2342:1:53148:53173	336987	4	True				
ANR	337029	IdentifierDecl	* pmax = p + plen - 1		336987	0					
ANR	337030	IdentifierDeclType	char *		336987	0					
ANR	337031	Identifier	pmax		336987	1					
ANR	337032	AssignmentExpression	* pmax = p + plen - 1		336987	2		=			
ANR	337033	Identifier	pmax		336987	0					
ANR	337034	AdditiveExpression	p + plen - 1		336987	1		+			
ANR	337035	Identifier	p		336987	0					
ANR	337036	AdditiveExpression	plen - 1		336987	1		-			
ANR	337037	Identifier	plen		336987	0					
ANR	337038	PrimaryExpression	1		336987	1					
ANR	337039	IdentifierDeclStatement	int c ;	2343:1:53176:53181	336987	5	True				
ANR	337040	IdentifierDecl	c		336987	0					
ANR	337041	IdentifierDeclType	int		336987	0					
ANR	337042	Identifier	c		336987	1					
ANR	337043	IdentifierDeclStatement	int val ;	2344:1:53184:53191	336987	6	True				
ANR	337044	IdentifierDecl	val		336987	0					
ANR	337045	IdentifierDeclType	int		336987	0					
ANR	337046	Identifier	val		336987	1					
ANR	337047	WhileStatement	while ( ( c = * s ++ ) != '\\0' )		336987	7					
ANR	337048	Condition	( c = * s ++ ) != '\\0'	2346:8:53202:53219	336987	0	True				
ANR	337049	EqualityExpression	( c = * s ++ ) != '\\0'		336987	0		!=			
ANR	337050	AssignmentExpression	c = * s ++		336987	0		=			
ANR	337051	Identifier	c		336987	0					
ANR	337052	UnaryOperationExpression	* s ++		336987	1					
ANR	337053	UnaryOperator	*		336987	0					
ANR	337054	PostIncDecOperationExpression	s ++		336987	1					
ANR	337055	Identifier	s		336987	0					
ANR	337056	IncDec	++		336987	1					
ANR	337057	PrimaryExpression	'\\0'		336987	1					
ANR	337058	CompoundStatement		10:28:178:178	336987	1					
ANR	337059	IfStatement	if ( isspace ( ( unsigned char ) c ) )		336987	0					
ANR	337060	Condition	isspace ( ( unsigned char ) c )	2347:6:53230:53255	336987	0	True				
ANR	337061	CallExpression	isspace ( ( unsigned char ) c )		336987	0					
ANR	337062	Callee	isspace		336987	0					
ANR	337063	Identifier	isspace		336987	0					
ANR	337064	ArgumentList	( unsigned char ) c		336987	1					
ANR	337065	Argument	( unsigned char ) c		336987	0					
ANR	337066	CastExpression	( unsigned char ) c		336987	0					
ANR	337067	CastTarget	unsigned char		336987	0					
ANR	337068	Identifier	c		336987	1					
ANR	337069	BreakStatement	break ;	2348:3:53261:53266	336987	1	True				
ANR	337070	IfStatement	if ( p >= pmax )		336987	1					
ANR	337071	Condition	p >= pmax	2349:6:53274:53282	336987	0	True				
ANR	337072	RelationalExpression	p >= pmax		336987	0		>=			
ANR	337073	Identifier	p		336987	0					
ANR	337074	Identifier	pmax		336987	1					
ANR	337075	CompoundStatement		13:17:241:241	336987	1					
ANR	337076	ExpressionStatement	"file_error ( ms , 0 , ""string too long: `%s'"" , origs )"	2350:3:53290:53339	336987	0	True				
ANR	337077	CallExpression	"file_error ( ms , 0 , ""string too long: `%s'"" , origs )"		336987	0					
ANR	337078	Callee	file_error		336987	0					
ANR	337079	Identifier	file_error		336987	0					
ANR	337080	ArgumentList	ms		336987	1					
ANR	337081	Argument	ms		336987	0					
ANR	337082	Identifier	ms		336987	0					
ANR	337083	Argument	0		336987	1					
ANR	337084	PrimaryExpression	0		336987	0					
ANR	337085	Argument	"""string too long: `%s'"""		336987	2					
ANR	337086	PrimaryExpression	"""string too long: `%s'"""		336987	0					
ANR	337087	Argument	origs		336987	3					
ANR	337088	Identifier	origs		336987	0					
ANR	337089	ReturnStatement	return NULL ;	2351:3:53344:53355	336987	1	True				
ANR	337090	Identifier	NULL		336987	0					
ANR	337091	IfStatement	if ( c == '\\\\' )		336987	2					
ANR	337092	Condition	c == '\\\\'	2353:6:53367:53375	336987	0	True				
ANR	337093	EqualityExpression	c == '\\\\'		336987	0		==			
ANR	337094	Identifier	c		336987	0					
ANR	337095	PrimaryExpression	'\\\\'		336987	1					
ANR	337096	CompoundStatement		17:17:334:334	336987	1					
ANR	337097	SwitchStatement	switch ( c = * s ++ )		336987	0					
ANR	337098	Condition	c = * s ++	2354:10:53390:53397	336987	0	True				
ANR	337099	AssignmentExpression	c = * s ++		336987	0		=			
ANR	337100	Identifier	c		336987	0					
ANR	337101	UnaryOperationExpression	* s ++		336987	1					
ANR	337102	UnaryOperator	*		336987	0					
ANR	337103	PostIncDecOperationExpression	s ++		336987	1					
ANR	337104	Identifier	s		336987	0					
ANR	337105	IncDec	++		336987	1					
ANR	337106	CompoundStatement		18:20:356:356	336987	1					
ANR	337107	Label	case '\\0' :	2356:3:53406:53415	336987	0	True				
ANR	337108	IfStatement	if ( warn )		336987	1					
ANR	337109	Condition	warn	2357:8:53425:53428	336987	0	True				
ANR	337110	Identifier	warn		336987	0					
ANR	337111	ExpressionStatement	"file_magwarn ( ms , ""incomplete escape"" )"	2358:5:53436:53473	336987	1	True				
ANR	337112	CallExpression	"file_magwarn ( ms , ""incomplete escape"" )"		336987	0					
ANR	337113	Callee	file_magwarn		336987	0					
ANR	337114	Identifier	file_magwarn		336987	0					
ANR	337115	ArgumentList	ms		336987	1					
ANR	337116	Argument	ms		336987	0					
ANR	337117	Identifier	ms		336987	0					
ANR	337118	Argument	"""incomplete escape"""		336987	1					
ANR	337119	PrimaryExpression	"""incomplete escape"""		336987	0					
ANR	337120	GotoStatement	goto out ;	2359:4:53479:53487	336987	2	True				
ANR	337121	Identifier	out		336987	0					
ANR	337122	Label	case '\\t' :	2361:3:53493:53502	336987	3	True				
ANR	337123	IfStatement	if ( warn )		336987	4					
ANR	337124	Condition	warn	2362:8:53512:53515	336987	0	True				
ANR	337125	Identifier	warn		336987	0					
ANR	337126	CompoundStatement		26:14:474:474	336987	1					
ANR	337127	ExpressionStatement	"file_magwarn ( ms , ""escaped tab found, use \\\\t instead"" )"	2363:5:53525:53588	336987	0	True				
ANR	337128	CallExpression	"file_magwarn ( ms , ""escaped tab found, use \\\\t instead"" )"		336987	0					
ANR	337129	Callee	file_magwarn		336987	0					
ANR	337130	Identifier	file_magwarn		336987	0					
ANR	337131	ArgumentList	ms		336987	1					
ANR	337132	Argument	ms		336987	0					
ANR	337133	Identifier	ms		336987	0					
ANR	337134	Argument	"""escaped tab found, use \\\\t instead"""		336987	1					
ANR	337135	PrimaryExpression	"""escaped tab found, use \\\\t instead"""		336987	0					
ANR	337136	ExpressionStatement	warn = 0	2365:5:53595:53603	336987	1	True				
ANR	337137	AssignmentExpression	warn = 0		336987	0		=			
ANR	337138	Identifier	warn		336987	0					
ANR	337139	PrimaryExpression	0		336987	1					
ANR	337140	Label	default :	2368:3:53652:53659	336987	5	True				
ANR	337141	Identifier	default		336987	0					
ANR	337142	IfStatement	if ( warn )		336987	6					
ANR	337143	Condition	warn	2369:8:53669:53672	336987	0	True				
ANR	337144	Identifier	warn		336987	0					
ANR	337145	CompoundStatement		33:14:631:631	336987	1					
ANR	337146	IfStatement	if ( isprint ( ( unsigned char ) c ) )		336987	0					
ANR	337147	Condition	isprint ( ( unsigned char ) c )	2370:9:53686:53710	336987	0	True				
ANR	337148	CallExpression	isprint ( ( unsigned char ) c )		336987	0					
ANR	337149	Callee	isprint		336987	0					
ANR	337150	Identifier	isprint		336987	0					
ANR	337151	ArgumentList	( unsigned char ) c		336987	1					
ANR	337152	Argument	( unsigned char ) c		336987	0					
ANR	337153	CastExpression	( unsigned char ) c		336987	0					
ANR	337154	CastTarget	unsigned char		336987	0					
ANR	337155	Identifier	c		336987	1					
ANR	337156	CompoundStatement		34:36:669:669	336987	1					
ANR	337157	IfStatement	"if ( strchr ( ""<>&^=!"" , c ) == NULL && ( m -> type != FILE_REGEX || strchr ( ""[]().*?^$|{}"" , c ) == NULL ) )"		336987	0					
ANR	337158	Condition	"strchr ( ""<>&^=!"" , c ) == NULL && ( m -> type != FILE_REGEX || strchr ( ""[]().*?^$|{}"" , c ) == NULL )"	2373:10:53779:53899	336987	0	True				
ANR	337159	AndExpression	"strchr ( ""<>&^=!"" , c ) == NULL && ( m -> type != FILE_REGEX || strchr ( ""[]().*?^$|{}"" , c ) == NULL )"		336987	0		&&			
ANR	337160	EqualityExpression	"strchr ( ""<>&^=!"" , c ) == NULL"		336987	0		==			
ANR	337161	CallExpression	"strchr ( ""<>&^=!"" , c )"		336987	0					
ANR	337162	Callee	strchr		336987	0					
ANR	337163	Identifier	strchr		336987	0					
ANR	337164	ArgumentList	"""<>&^=!"""		336987	1					
ANR	337165	Argument	"""<>&^=!"""		336987	0					
ANR	337166	PrimaryExpression	"""<>&^=!"""		336987	0					
ANR	337167	Argument	c		336987	1					
ANR	337168	Identifier	c		336987	0					
ANR	337169	Identifier	NULL		336987	1					
ANR	337170	OrExpression	"m -> type != FILE_REGEX || strchr ( ""[]().*?^$|{}"" , c ) == NULL"		336987	1		||			
ANR	337171	EqualityExpression	m -> type != FILE_REGEX		336987	0		!=			
ANR	337172	PtrMemberAccess	m -> type		336987	0					
ANR	337173	Identifier	m		336987	0					
ANR	337174	Identifier	type		336987	1					
ANR	337175	Identifier	FILE_REGEX		336987	1					
ANR	337176	EqualityExpression	"strchr ( ""[]().*?^$|{}"" , c ) == NULL"		336987	1		==			
ANR	337177	CallExpression	"strchr ( ""[]().*?^$|{}"" , c )"		336987	0					
ANR	337178	Callee	strchr		336987	0					
ANR	337179	Identifier	strchr		336987	0					
ANR	337180	ArgumentList	"""[]().*?^$|{}"""		336987	1					
ANR	337181	Argument	"""[]().*?^$|{}"""		336987	0					
ANR	337182	PrimaryExpression	"""[]().*?^$|{}"""		336987	0					
ANR	337183	Argument	c		336987	1					
ANR	337184	Identifier	c		336987	0					
ANR	337185	Identifier	NULL		336987	1					
ANR	337186	CompoundStatement		40:20:858:858	336987	1					
ANR	337187	Statement	file_magwarn	2377:7:53911:53922	336987	0	True				
ANR	337188	Statement	(	2377:19:53923:53923	336987	1	True				
ANR	337189	Statement	ms	2377:20:53924:53925	336987	2	True				
ANR	337190	Statement	","	2377:22:53926:53926	336987	3	True				
ANR	337191	Statement	"""no """	2377:24:53928:53932	336987	4	True				
ANR	337192	Statement	"""need to escape """	2378:11:53945:53961	336987	5	True				
ANR	337193	Statement	"""`%c'"""	2379:11:53974:53979	336987	6	True				
ANR	337194	Statement	","	2379:17:53980:53980	336987	7	True				
ANR	337195	Statement	c	2379:19:53982:53982	336987	8	True				
ANR	337196	Statement	)	2379:20:53983:53983	336987	9	True				
ANR	337197	ExpressionStatement		2379:21:53984:53984	336987	10	True				
ANR	337198	ElseStatement	else		336987	0					
ANR	337199	CompoundStatement		45:12:962:962	336987	0					
ANR	337200	Statement	file_magwarn	2382:6:54014:54025	336987	0	True				
ANR	337201	Statement	(	2382:18:54026:54026	336987	1	True				
ANR	337202	Statement	ms	2382:19:54027:54028	336987	2	True				
ANR	337203	Statement	","	2382:21:54029:54029	336987	3	True				
ANR	337204	Statement	"""unknown escape sequence: """	2383:10:54041:54067	336987	4	True				
ANR	337205	Statement	"""\\\\%03o"""	2384:10:54079:54086	336987	5	True				
ANR	337206	Statement	","	2384:18:54087:54087	336987	6	True				
ANR	337207	Statement	c	2384:20:54089:54089	336987	7	True				
ANR	337208	Statement	)	2384:21:54090:54090	336987	8	True				
ANR	337209	ExpressionStatement		2384:22:54091:54091	336987	9	True				
ANR	337210	Label	case ' ' :	2389:3:54179:54187	336987	7	True				
ANR	337211	Label	case '\\'' :	2395:3:54294:54303	336987	8	True				
ANR	337212	Label	"case '""' :"	2396:3:54308:54316	336987	9	True				
ANR	337213	Label	case '?' :	2397:3:54321:54329	336987	10	True				
ANR	337214	Label	case '>' :	2400:3:54360:54368	336987	11	True				
ANR	337215	Label	case '<' :	2401:3:54373:54381	336987	12	True				
ANR	337216	Label	case '&' :	2402:3:54386:54394	336987	13	True				
ANR	337217	Label	case '^' :	2403:3:54399:54407	336987	14	True				
ANR	337218	Label	case '=' :	2404:3:54412:54420	336987	15	True				
ANR	337219	Label	case '!' :	2405:3:54425:54433	336987	16	True				
ANR	337220	Label	case '\\\\' :	2407:3:54468:54477	336987	17	True				
ANR	337221	ExpressionStatement	* p ++ = ( char ) c	2408:4:54483:54498	336987	18	True				
ANR	337222	AssignmentExpression	* p ++ = ( char ) c		336987	0		=			
ANR	337223	UnaryOperationExpression	* p ++		336987	0					
ANR	337224	UnaryOperator	*		336987	0					
ANR	337225	PostIncDecOperationExpression	p ++		336987	1					
ANR	337226	Identifier	p		336987	0					
ANR	337227	IncDec	++		336987	1					
ANR	337228	CastExpression	( char ) c		336987	1					
ANR	337229	CastTarget	char		336987	0					
ANR	337230	Identifier	c		336987	1					
ANR	337231	BreakStatement	break ;	2409:4:54504:54509	336987	19	True				
ANR	337232	Label	case 'a' :	2411:3:54515:54523	336987	20	True				
ANR	337233	ExpressionStatement	* p ++ = '\\a'	2412:4:54529:54540	336987	21	True				
ANR	337234	AssignmentExpression	* p ++ = '\\a'		336987	0		=			
ANR	337235	UnaryOperationExpression	* p ++		336987	0					
ANR	337236	UnaryOperator	*		336987	0					
ANR	337237	PostIncDecOperationExpression	p ++		336987	1					
ANR	337238	Identifier	p		336987	0					
ANR	337239	IncDec	++		336987	1					
ANR	337240	PrimaryExpression	'\\a'		336987	1					
ANR	337241	BreakStatement	break ;	2413:4:54546:54551	336987	22	True				
ANR	337242	Label	case 'b' :	2415:3:54557:54565	336987	23	True				
ANR	337243	ExpressionStatement	* p ++ = '\\b'	2416:4:54571:54582	336987	24	True				
ANR	337244	AssignmentExpression	* p ++ = '\\b'		336987	0		=			
ANR	337245	UnaryOperationExpression	* p ++		336987	0					
ANR	337246	UnaryOperator	*		336987	0					
ANR	337247	PostIncDecOperationExpression	p ++		336987	1					
ANR	337248	Identifier	p		336987	0					
ANR	337249	IncDec	++		336987	1					
ANR	337250	PrimaryExpression	'\\b'		336987	1					
ANR	337251	BreakStatement	break ;	2417:4:54588:54593	336987	25	True				
ANR	337252	Label	case 'f' :	2419:3:54599:54607	336987	26	True				
ANR	337253	ExpressionStatement	* p ++ = '\\f'	2420:4:54613:54624	336987	27	True				
ANR	337254	AssignmentExpression	* p ++ = '\\f'		336987	0		=			
ANR	337255	UnaryOperationExpression	* p ++		336987	0					
ANR	337256	UnaryOperator	*		336987	0					
ANR	337257	PostIncDecOperationExpression	p ++		336987	1					
ANR	337258	Identifier	p		336987	0					
ANR	337259	IncDec	++		336987	1					
ANR	337260	PrimaryExpression	'\\f'		336987	1					
ANR	337261	BreakStatement	break ;	2421:4:54630:54635	336987	28	True				
ANR	337262	Label	case 'n' :	2423:3:54641:54649	336987	29	True				
ANR	337263	ExpressionStatement	* p ++ = '\\n'	2424:4:54655:54666	336987	30	True				
ANR	337264	AssignmentExpression	* p ++ = '\\n'		336987	0		=			
ANR	337265	UnaryOperationExpression	* p ++		336987	0					
ANR	337266	UnaryOperator	*		336987	0					
ANR	337267	PostIncDecOperationExpression	p ++		336987	1					
ANR	337268	Identifier	p		336987	0					
ANR	337269	IncDec	++		336987	1					
ANR	337270	PrimaryExpression	'\\n'		336987	1					
ANR	337271	BreakStatement	break ;	2425:4:54672:54677	336987	31	True				
ANR	337272	Label	case 'r' :	2427:3:54683:54691	336987	32	True				
ANR	337273	ExpressionStatement	* p ++ = '\\r'	2428:4:54697:54708	336987	33	True				
ANR	337274	AssignmentExpression	* p ++ = '\\r'		336987	0		=			
ANR	337275	UnaryOperationExpression	* p ++		336987	0					
ANR	337276	UnaryOperator	*		336987	0					
ANR	337277	PostIncDecOperationExpression	p ++		336987	1					
ANR	337278	Identifier	p		336987	0					
ANR	337279	IncDec	++		336987	1					
ANR	337280	PrimaryExpression	'\\r'		336987	1					
ANR	337281	BreakStatement	break ;	2429:4:54714:54719	336987	34	True				
ANR	337282	Label	case 't' :	2431:3:54725:54733	336987	35	True				
ANR	337283	ExpressionStatement	* p ++ = '\\t'	2432:4:54739:54750	336987	36	True				
ANR	337284	AssignmentExpression	* p ++ = '\\t'		336987	0		=			
ANR	337285	UnaryOperationExpression	* p ++		336987	0					
ANR	337286	UnaryOperator	*		336987	0					
ANR	337287	PostIncDecOperationExpression	p ++		336987	1					
ANR	337288	Identifier	p		336987	0					
ANR	337289	IncDec	++		336987	1					
ANR	337290	PrimaryExpression	'\\t'		336987	1					
ANR	337291	BreakStatement	break ;	2433:4:54756:54761	336987	37	True				
ANR	337292	Label	case 'v' :	2435:3:54767:54775	336987	38	True				
ANR	337293	ExpressionStatement	* p ++ = '\\v'	2436:4:54781:54792	336987	39	True				
ANR	337294	AssignmentExpression	* p ++ = '\\v'		336987	0		=			
ANR	337295	UnaryOperationExpression	* p ++		336987	0					
ANR	337296	UnaryOperator	*		336987	0					
ANR	337297	PostIncDecOperationExpression	p ++		336987	1					
ANR	337298	Identifier	p		336987	0					
ANR	337299	IncDec	++		336987	1					
ANR	337300	PrimaryExpression	'\\v'		336987	1					
ANR	337301	BreakStatement	break ;	2437:4:54798:54803	336987	40	True				
ANR	337302	Label	case '0' :	2440:3:54845:54853	336987	41	True				
ANR	337303	Label	case '1' :	2441:3:54858:54866	336987	42	True				
ANR	337304	Label	case '2' :	2442:3:54871:54879	336987	43	True				
ANR	337305	Label	case '3' :	2443:3:54884:54892	336987	44	True				
ANR	337306	Label	case '4' :	2444:3:54897:54905	336987	45	True				
ANR	337307	Label	case '5' :	2445:3:54910:54918	336987	46	True				
ANR	337308	Label	case '6' :	2446:3:54923:54931	336987	47	True				
ANR	337309	Label	case '7' :	2447:3:54936:54944	336987	48	True				
ANR	337310	ExpressionStatement	val = c - '0'	2448:4:54950:54963	336987	49	True				
ANR	337311	AssignmentExpression	val = c - '0'		336987	0		=			
ANR	337312	Identifier	val		336987	0					
ANR	337313	AdditiveExpression	c - '0'		336987	1		-			
ANR	337314	Identifier	c		336987	0					
ANR	337315	PrimaryExpression	'0'		336987	1					
ANR	337316	ExpressionStatement	c = * s ++	2449:4:54969:54977	336987	50	True				
ANR	337317	AssignmentExpression	c = * s ++		336987	0		=			
ANR	337318	Identifier	c		336987	0					
ANR	337319	UnaryOperationExpression	* s ++		336987	1					
ANR	337320	UnaryOperator	*		336987	0					
ANR	337321	PostIncDecOperationExpression	s ++		336987	1					
ANR	337322	Identifier	s		336987	0					
ANR	337323	IncDec	++		336987	1					
ANR	337324	IfStatement	if ( c >= '0' && c <= '7' )		336987	51					
ANR	337325	Condition	c >= '0' && c <= '7'	2450:8:55004:55023	336987	0	True				
ANR	337326	AndExpression	c >= '0' && c <= '7'		336987	0		&&			
ANR	337327	RelationalExpression	c >= '0'		336987	0		>=			
ANR	337328	Identifier	c		336987	0					
ANR	337329	PrimaryExpression	'0'		336987	1					
ANR	337330	RelationalExpression	c <= '7'		336987	1		<=			
ANR	337331	Identifier	c		336987	0					
ANR	337332	PrimaryExpression	'7'		336987	1					
ANR	337333	CompoundStatement		114:30:1982:1982	336987	1					
ANR	337334	ExpressionStatement	val = ( val << 3 ) | ( c - '0' )	2451:5:55033:55061	336987	0	True				
ANR	337335	AssignmentExpression	val = ( val << 3 ) | ( c - '0' )		336987	0		=			
ANR	337336	Identifier	val		336987	0					
ANR	337337	InclusiveOrExpression	( val << 3 ) | ( c - '0' )		336987	1		|			
ANR	337338	ShiftExpression	val << 3		336987	0		<<			
ANR	337339	Identifier	val		336987	0					
ANR	337340	PrimaryExpression	3		336987	1					
ANR	337341	AdditiveExpression	c - '0'		336987	1		-			
ANR	337342	Identifier	c		336987	0					
ANR	337343	PrimaryExpression	'0'		336987	1					
ANR	337344	ExpressionStatement	c = * s ++	2452:5:55068:55076	336987	1	True				
ANR	337345	AssignmentExpression	c = * s ++		336987	0		=			
ANR	337346	Identifier	c		336987	0					
ANR	337347	UnaryOperationExpression	* s ++		336987	1					
ANR	337348	UnaryOperator	*		336987	0					
ANR	337349	PostIncDecOperationExpression	s ++		336987	1					
ANR	337350	Identifier	s		336987	0					
ANR	337351	IncDec	++		336987	1					
ANR	337352	IfStatement	if ( c >= '0' && c <= '7' )		336987	2					
ANR	337353	Condition	c >= '0' && c <= '7'	2453:9:55104:55123	336987	0	True				
ANR	337354	AndExpression	c >= '0' && c <= '7'		336987	0		&&			
ANR	337355	RelationalExpression	c >= '0'		336987	0		>=			
ANR	337356	Identifier	c		336987	0					
ANR	337357	PrimaryExpression	'0'		336987	1					
ANR	337358	RelationalExpression	c <= '7'		336987	1		<=			
ANR	337359	Identifier	c		336987	0					
ANR	337360	PrimaryExpression	'7'		336987	1					
ANR	337361	ExpressionStatement	val = ( val << 3 ) | ( c - '0' )	2454:6:55132:55158	336987	1	True				
ANR	337362	AssignmentExpression	val = ( val << 3 ) | ( c - '0' )		336987	0		=			
ANR	337363	Identifier	val		336987	0					
ANR	337364	InclusiveOrExpression	( val << 3 ) | ( c - '0' )		336987	1		|			
ANR	337365	ShiftExpression	val << 3		336987	0		<<			
ANR	337366	Identifier	val		336987	0					
ANR	337367	PrimaryExpression	3		336987	1					
ANR	337368	AdditiveExpression	c - '0'		336987	1		-			
ANR	337369	Identifier	c		336987	0					
ANR	337370	PrimaryExpression	'0'		336987	1					
ANR	337371	ElseStatement	else		336987	0					
ANR	337372	ExpressionStatement	-- s	2456:6:55176:55179	336987	0	True				
ANR	337373	UnaryExpression	-- s		336987	0					
ANR	337374	IncDec	--		336987	0					
ANR	337375	Identifier	s		336987	1					
ANR	337376	ElseStatement	else		336987	0					
ANR	337377	ExpressionStatement	-- s	2459:5:55201:55204	336987	0	True				
ANR	337378	UnaryExpression	-- s		336987	0					
ANR	337379	IncDec	--		336987	0					
ANR	337380	Identifier	s		336987	1					
ANR	337381	ExpressionStatement	* p ++ = ( char ) val	2460:4:55210:55226	336987	52	True				
ANR	337382	AssignmentExpression	* p ++ = ( char ) val		336987	0		=			
ANR	337383	UnaryOperationExpression	* p ++		336987	0					
ANR	337384	UnaryOperator	*		336987	0					
ANR	337385	PostIncDecOperationExpression	p ++		336987	1					
ANR	337386	Identifier	p		336987	0					
ANR	337387	IncDec	++		336987	1					
ANR	337388	CastExpression	( char ) val		336987	1					
ANR	337389	CastTarget	char		336987	0					
ANR	337390	Identifier	val		336987	1					
ANR	337391	BreakStatement	break ;	2461:4:55232:55237	336987	53	True				
ANR	337392	Label	case 'x' :	2464:3:55278:55286	336987	54	True				
ANR	337393	ExpressionStatement	val = 'x'	2465:4:55292:55301	336987	55	True				
ANR	337394	AssignmentExpression	val = 'x'		336987	0		=			
ANR	337395	Identifier	val		336987	0					
ANR	337396	PrimaryExpression	'x'		336987	1					
ANR	337397	ExpressionStatement	c = hextoint ( * s ++ )	2466:4:55334:55352	336987	56	True				
ANR	337398	AssignmentExpression	c = hextoint ( * s ++ )		336987	0		=			
ANR	337399	Identifier	c		336987	0					
ANR	337400	CallExpression	hextoint ( * s ++ )		336987	1					
ANR	337401	Callee	hextoint		336987	0					
ANR	337402	Identifier	hextoint		336987	0					
ANR	337403	ArgumentList	* s ++		336987	1					
ANR	337404	Argument	* s ++		336987	0					
ANR	337405	UnaryOperationExpression	* s ++		336987	0					
ANR	337406	UnaryOperator	*		336987	0					
ANR	337407	PostIncDecOperationExpression	s ++		336987	1					
ANR	337408	Identifier	s		336987	0					
ANR	337409	IncDec	++		336987	1					
ANR	337410	IfStatement	if ( c >= 0 )		336987	57					
ANR	337411	Condition	c >= 0	2467:8:55382:55387	336987	0	True				
ANR	337412	RelationalExpression	c >= 0		336987	0		>=			
ANR	337413	Identifier	c		336987	0					
ANR	337414	PrimaryExpression	0		336987	1					
ANR	337415	CompoundStatement		131:16:2346:2346	336987	1					
ANR	337416	ExpressionStatement	val = c	2468:5:55397:55404	336987	0	True				
ANR	337417	AssignmentExpression	val = c		336987	0		=			
ANR	337418	Identifier	val		336987	0					
ANR	337419	Identifier	c		336987	1					
ANR	337420	ExpressionStatement	c = hextoint ( * s ++ )	2469:5:55411:55429	336987	1	True				
ANR	337421	AssignmentExpression	c = hextoint ( * s ++ )		336987	0		=			
ANR	337422	Identifier	c		336987	0					
ANR	337423	CallExpression	hextoint ( * s ++ )		336987	1					
ANR	337424	Callee	hextoint		336987	0					
ANR	337425	Identifier	hextoint		336987	0					
ANR	337426	ArgumentList	* s ++		336987	1					
ANR	337427	Argument	* s ++		336987	0					
ANR	337428	UnaryOperationExpression	* s ++		336987	0					
ANR	337429	UnaryOperator	*		336987	0					
ANR	337430	PostIncDecOperationExpression	s ++		336987	1					
ANR	337431	Identifier	s		336987	0					
ANR	337432	IncDec	++		336987	1					
ANR	337433	IfStatement	if ( c >= 0 )		336987	2					
ANR	337434	Condition	c >= 0	2470:9:55440:55445	336987	0	True				
ANR	337435	RelationalExpression	c >= 0		336987	0		>=			
ANR	337436	Identifier	c		336987	0					
ANR	337437	PrimaryExpression	0		336987	1					
ANR	337438	ExpressionStatement	val = ( val << 4 ) + c	2471:6:55454:55474	336987	1	True				
ANR	337439	AssignmentExpression	val = ( val << 4 ) + c		336987	0		=			
ANR	337440	Identifier	val		336987	0					
ANR	337441	AdditiveExpression	( val << 4 ) + c		336987	1		+			
ANR	337442	ShiftExpression	val << 4		336987	0		<<			
ANR	337443	Identifier	val		336987	0					
ANR	337444	PrimaryExpression	4		336987	1					
ANR	337445	Identifier	c		336987	1					
ANR	337446	ElseStatement	else		336987	0					
ANR	337447	ExpressionStatement	-- s	2473:6:55492:55495	336987	0	True				
ANR	337448	UnaryExpression	-- s		336987	0					
ANR	337449	IncDec	--		336987	0					
ANR	337450	Identifier	s		336987	1					
ANR	337451	ElseStatement	else		336987	0					
ANR	337452	ExpressionStatement	-- s	2475:5:55513:55516	336987	0	True				
ANR	337453	UnaryExpression	-- s		336987	0					
ANR	337454	IncDec	--		336987	0					
ANR	337455	Identifier	s		336987	1					
ANR	337456	ExpressionStatement	* p ++ = ( char ) val	2476:4:55522:55538	336987	58	True				
ANR	337457	AssignmentExpression	* p ++ = ( char ) val		336987	0		=			
ANR	337458	UnaryOperationExpression	* p ++		336987	0					
ANR	337459	UnaryOperator	*		336987	0					
ANR	337460	PostIncDecOperationExpression	p ++		336987	1					
ANR	337461	Identifier	p		336987	0					
ANR	337462	IncDec	++		336987	1					
ANR	337463	CastExpression	( char ) val		336987	1					
ANR	337464	CastTarget	char		336987	0					
ANR	337465	Identifier	val		336987	1					
ANR	337466	BreakStatement	break ;	2477:4:55544:55549	336987	59	True				
ANR	337467	ElseStatement	else		336987	0					
ANR	337468	ExpressionStatement	* p ++ = ( char ) c	2480:3:55568:55582	336987	0	True				
ANR	337469	AssignmentExpression	* p ++ = ( char ) c		336987	0		=			
ANR	337470	UnaryOperationExpression	* p ++		336987	0					
ANR	337471	UnaryOperator	*		336987	0					
ANR	337472	PostIncDecOperationExpression	p ++		336987	1					
ANR	337473	Identifier	p		336987	0					
ANR	337474	IncDec	++		336987	1					
ANR	337475	CastExpression	( char ) c		336987	1					
ANR	337476	CastTarget	char		336987	0					
ANR	337477	Identifier	c		336987	1					
ANR	337478	Label	out :	2482:0:55587:55590	336987	8	True				
ANR	337479	Identifier	out		336987	0					
ANR	337480	ExpressionStatement	* p = '\\0'	2483:1:55593:55602	336987	9	True				
ANR	337481	AssignmentExpression	* p = '\\0'		336987	0		=			
ANR	337482	UnaryOperationExpression	* p		336987	0					
ANR	337483	UnaryOperator	*		336987	0					
ANR	337484	Identifier	p		336987	1					
ANR	337485	PrimaryExpression	'\\0'		336987	1					
ANR	337486	Statement	m	2484:1:55605:55605	336987	10	True				
ANR	337487	Statement	->	2484:2:55606:55607	336987	11	True				
ANR	337488	Statement	vallen	2484:4:55608:55613	336987	12	True				
ANR	337489	Statement	=	2484:11:55615:55615	336987	13	True				
ANR	337490	Statement	CAST	2484:13:55617:55620	336987	14	True				
ANR	337491	Statement	(	2484:17:55621:55621	336987	15	True				
ANR	337492	Statement	unsigned	2484:18:55622:55629	336987	16	True				
ANR	337493	Statement	char	2484:27:55631:55634	336987	17	True				
ANR	337494	Statement	","	2484:31:55635:55635	336987	18	True				
ANR	337495	Statement	(	2484:33:55637:55637	336987	19	True				
ANR	337496	Statement	p	2484:34:55638:55638	336987	20	True				
ANR	337497	Statement	-	2484:36:55640:55640	336987	21	True				
ANR	337498	Statement	origp	2484:38:55642:55646	336987	22	True				
ANR	337499	Statement	)	2484:43:55647:55647	336987	23	True				
ANR	337500	Statement	)	2484:44:55648:55648	336987	24	True				
ANR	337501	ExpressionStatement		2484:45:55649:55649	336987	25	True				
ANR	337502	IfStatement	if ( m -> type == FILE_PSTRING )		336987	26					
ANR	337503	Condition	m -> type == FILE_PSTRING	2485:5:55656:55678	336987	0	True				
ANR	337504	EqualityExpression	m -> type == FILE_PSTRING		336987	0		==			
ANR	337505	PtrMemberAccess	m -> type		336987	0					
ANR	337506	Identifier	m		336987	0					
ANR	337507	Identifier	type		336987	1					
ANR	337508	Identifier	FILE_PSTRING		336987	1					
ANR	337509	ExpressionStatement	m -> vallen += ( unsigned char ) file_pstring_length_size ( m )	2486:2:55683:55738	336987	1	True				
ANR	337510	AssignmentExpression	m -> vallen += ( unsigned char ) file_pstring_length_size ( m )		336987	0		+=			
ANR	337511	PtrMemberAccess	m -> vallen		336987	0					
ANR	337512	Identifier	m		336987	0					
ANR	337513	Identifier	vallen		336987	1					
ANR	337514	CastExpression	( unsigned char ) file_pstring_length_size ( m )		336987	1					
ANR	337515	CastTarget	unsigned char		336987	0					
ANR	337516	CallExpression	file_pstring_length_size ( m )		336987	1					
ANR	337517	Callee	file_pstring_length_size		336987	0					
ANR	337518	Identifier	file_pstring_length_size		336987	0					
ANR	337519	ArgumentList	m		336987	1					
ANR	337520	Argument	m		336987	0					
ANR	337521	Identifier	m		336987	0					
ANR	337522	ReturnStatement	return s ;	2487:1:55741:55749	336987	27	True				
ANR	337523	Identifier	s		336987	0					
ANR	337524	ReturnType	const char *		336987	1					
ANR	337525	Identifier	getstr		336987	2					
ANR	337526	ParameterList	"struct magic_set * ms , struct magic * m , const char * s , int warn"		336987	3					
ANR	337527	Parameter	struct magic_set * ms	2336:7:52979:52998	336987	0	True				
ANR	337528	ParameterType	struct magic_set *		336987	0					
ANR	337529	Identifier	ms		336987	1					
ANR	337530	Parameter	struct magic * m	2336:29:53001:53015	336987	1	True				
ANR	337531	ParameterType	struct magic *		336987	0					
ANR	337532	Identifier	m		336987	1					
ANR	337533	Parameter	const char * s	2336:46:53018:53030	336987	2	True				
ANR	337534	ParameterType	const char *		336987	0					
ANR	337535	Identifier	s		336987	1					
ANR	337536	Parameter	int warn	2336:61:53033:53040	336987	3	True				
ANR	337537	ParameterType	int		336987	0					
ANR	337538	Identifier	warn		336987	1					
ANR	337539	CFGEntryNode	ENTRY		336987		True				
ANR	337540	CFGExitNode	EXIT		336987		True				
ANR	337541	Symbol	pmax		336987						
ANR	337542	Symbol	* s ++		336987						
ANR	337543	Symbol	origs		336987						
ANR	337544	Symbol	isprint		336987						
ANR	337545	Symbol	strchr		336987						
ANR	337546	Symbol	plen		336987						
ANR	337547	Symbol	m -> type		336987						
ANR	337548	Symbol	file_pstring_length_size		336987						
ANR	337549	Symbol	origp		336987						
ANR	337550	Symbol	val		336987						
ANR	337551	Symbol	c		336987						
ANR	337552	Symbol	NULL		336987						
ANR	337553	Symbol	m -> value		336987						
ANR	337554	Symbol	FILE_REGEX		336987						
ANR	337555	Symbol	ms		336987						
ANR	337556	Symbol	* p ++		336987						
ANR	337557	Symbol	m -> value . s		336987						
ANR	337558	Symbol	isspace		336987						
ANR	337559	Symbol	FILE_PSTRING		336987						
ANR	337560	Symbol	m		336987						
ANR	337561	Symbol	p		336987						
ANR	337562	Symbol	warn		336987						
ANR	337563	Symbol	hextoint		336987						
ANR	337564	Symbol	s		336987						
ANR	337565	Symbol	* m		336987						
ANR	337566	Symbol	* p		336987						
ANR	337567	Symbol	m -> vallen		336987						
ANR	337568	Function	hextoint	2492:8:55815:56055							
ANR	337569	FunctionDef	hextoint (int c)		337568	0					
ANR	337570	CompoundStatement		2494:0:55835:56055	337568	0					
ANR	337571	IfStatement	if ( ! isascii ( ( unsigned char ) c ) )		337568	0					
ANR	337572	Condition	! isascii ( ( unsigned char ) c )	2495:5:55842:55868	337568	0	True				
ANR	337573	UnaryOperationExpression	! isascii ( ( unsigned char ) c )		337568	0					
ANR	337574	UnaryOperator	!		337568	0					
ANR	337575	CallExpression	isascii ( ( unsigned char ) c )		337568	1					
ANR	337576	Callee	isascii		337568	0					
ANR	337577	Identifier	isascii		337568	0					
ANR	337578	ArgumentList	( unsigned char ) c		337568	1					
ANR	337579	Argument	( unsigned char ) c		337568	0					
ANR	337580	CastExpression	( unsigned char ) c		337568	0					
ANR	337581	CastTarget	unsigned char		337568	0					
ANR	337582	Identifier	c		337568	1					
ANR	337583	ReturnStatement	return - 1 ;	2496:2:55873:55882	337568	1	True				
ANR	337584	UnaryOperationExpression	- 1		337568	0					
ANR	337585	UnaryOperator	-		337568	0					
ANR	337586	PrimaryExpression	1		337568	1					
ANR	337587	IfStatement	if ( isdigit ( ( unsigned char ) c ) )		337568	1					
ANR	337588	Condition	isdigit ( ( unsigned char ) c )	2497:5:55889:55914	337568	0	True				
ANR	337589	CallExpression	isdigit ( ( unsigned char ) c )		337568	0					
ANR	337590	Callee	isdigit		337568	0					
ANR	337591	Identifier	isdigit		337568	0					
ANR	337592	ArgumentList	( unsigned char ) c		337568	1					
ANR	337593	Argument	( unsigned char ) c		337568	0					
ANR	337594	CastExpression	( unsigned char ) c		337568	0					
ANR	337595	CastTarget	unsigned char		337568	0					
ANR	337596	Identifier	c		337568	1					
ANR	337597	ReturnStatement	return c - '0' ;	2498:2:55919:55933	337568	1	True				
ANR	337598	AdditiveExpression	c - '0'		337568	0		-			
ANR	337599	Identifier	c		337568	0					
ANR	337600	PrimaryExpression	'0'		337568	1					
ANR	337601	IfStatement	if ( ( c >= 'a' ) && ( c <= 'f' ) )		337568	2					
ANR	337602	Condition	( c >= 'a' ) && ( c <= 'f' )	2499:5:55940:55963	337568	0	True				
ANR	337603	AndExpression	( c >= 'a' ) && ( c <= 'f' )		337568	0		&&			
ANR	337604	RelationalExpression	c >= 'a'		337568	0		>=			
ANR	337605	Identifier	c		337568	0					
ANR	337606	PrimaryExpression	'a'		337568	1					
ANR	337607	RelationalExpression	c <= 'f'		337568	1		<=			
ANR	337608	Identifier	c		337568	0					
ANR	337609	PrimaryExpression	'f'		337568	1					
ANR	337610	ReturnStatement	return c + 10 - 'a' ;	2500:2:55968:55987	337568	1	True				
ANR	337611	AdditiveExpression	c + 10 - 'a'		337568	0		+			
ANR	337612	Identifier	c		337568	0					
ANR	337613	AdditiveExpression	10 - 'a'		337568	1		-			
ANR	337614	PrimaryExpression	10		337568	0					
ANR	337615	PrimaryExpression	'a'		337568	1					
ANR	337616	IfStatement	if ( ( c >= 'A' ) && ( c <= 'F' ) )		337568	3					
ANR	337617	Condition	( c >= 'A' ) && ( c <= 'F' )	2501:5:55994:56017	337568	0	True				
ANR	337618	AndExpression	( c >= 'A' ) && ( c <= 'F' )		337568	0		&&			
ANR	337619	RelationalExpression	c >= 'A'		337568	0		>=			
ANR	337620	Identifier	c		337568	0					
ANR	337621	PrimaryExpression	'A'		337568	1					
ANR	337622	RelationalExpression	c <= 'F'		337568	1		<=			
ANR	337623	Identifier	c		337568	0					
ANR	337624	PrimaryExpression	'F'		337568	1					
ANR	337625	ReturnStatement	return c + 10 - 'A' ;	2502:2:56022:56041	337568	1	True				
ANR	337626	AdditiveExpression	c + 10 - 'A'		337568	0		+			
ANR	337627	Identifier	c		337568	0					
ANR	337628	AdditiveExpression	10 - 'A'		337568	1		-			
ANR	337629	PrimaryExpression	10		337568	0					
ANR	337630	PrimaryExpression	'A'		337568	1					
ANR	337631	ReturnStatement	return - 1 ;	2503:1:56044:56053	337568	4	True				
ANR	337632	UnaryOperationExpression	- 1		337568	0					
ANR	337633	UnaryOperator	-		337568	0					
ANR	337634	PrimaryExpression	1		337568	1					
ANR	337635	ReturnType	int		337568	1					
ANR	337636	Identifier	hextoint		337568	2					
ANR	337637	ParameterList	int c		337568	3					
ANR	337638	Parameter	int c	2493:9:55828:55832	337568	0	True				
ANR	337639	ParameterType	int		337568	0					
ANR	337640	Identifier	c		337568	1					
ANR	337641	CFGEntryNode	ENTRY		337568		True				
ANR	337642	CFGExitNode	EXIT		337568		True				
ANR	337643	Symbol	c		337568						
ANR	337644	Symbol	isdigit		337568						
ANR	337645	Symbol	isascii		337568						
ANR	337646	Function	file_showstr	2510:10:56126:56912							
ANR	337647	FunctionDef	"file_showstr (FILE * fp , const char * s , size_t len)"		337646	0					
ANR	337648	CompoundStatement		2512:0:56181:56912	337646	0					
ANR	337649	IdentifierDeclStatement	char c ;	2513:1:56184:56190	337646	0	True				
ANR	337650	IdentifierDecl	c		337646	0					
ANR	337651	IdentifierDeclType	char		337646	0					
ANR	337652	Identifier	c		337646	1					
ANR	337653	ForStatement	for ( ; ; )		337646	1					
ANR	337654	CompoundStatement		4:10:21:21	337646	0					
ANR	337655	IfStatement	if ( len == ~0U )		337646	0					
ANR	337656	Condition	len == ~0U	2516:6:56211:56220	337646	0	True				
ANR	337657	EqualityExpression	len == ~0U		337646	0		==			
ANR	337658	Identifier	len		337646	0					
ANR	337659	Identifier	~0U		337646	1					
ANR	337660	CompoundStatement		5:18:41:41	337646	1					
ANR	337661	ExpressionStatement	c = * s ++	2517:3:56228:56236	337646	0	True				
ANR	337662	AssignmentExpression	c = * s ++		337646	0		=			
ANR	337663	Identifier	c		337646	0					
ANR	337664	UnaryOperationExpression	* s ++		337646	1					
ANR	337665	UnaryOperator	*		337646	0					
ANR	337666	PostIncDecOperationExpression	s ++		337646	1					
ANR	337667	Identifier	s		337646	0					
ANR	337668	IncDec	++		337646	1					
ANR	337669	IfStatement	if ( c == '\\0' )		337646	1					
ANR	337670	Condition	c == '\\0'	2518:7:56245:56253	337646	0	True				
ANR	337671	EqualityExpression	c == '\\0'		337646	0		==			
ANR	337672	Identifier	c		337646	0					
ANR	337673	PrimaryExpression	'\\0'		337646	1					
ANR	337674	BreakStatement	break ;	2519:4:56260:56265	337646	1	True				
ANR	337675	ElseStatement	else		337646	0					
ANR	337676	CompoundStatement		10:8:97:97	337646	0					
ANR	337677	IfStatement	if ( len -- == 0 )		337646	0					
ANR	337678	Condition	len -- == 0	2522:7:56288:56297	337646	0	True				
ANR	337679	EqualityExpression	len -- == 0		337646	0		==			
ANR	337680	PostIncDecOperationExpression	len --		337646	0					
ANR	337681	Identifier	len		337646	0					
ANR	337682	IncDec	--		337646	1					
ANR	337683	PrimaryExpression	0		337646	1					
ANR	337684	BreakStatement	break ;	2523:4:56304:56309	337646	1	True				
ANR	337685	ExpressionStatement	c = * s ++	2524:3:56314:56322	337646	1	True				
ANR	337686	AssignmentExpression	c = * s ++		337646	0		=			
ANR	337687	Identifier	c		337646	0					
ANR	337688	UnaryOperationExpression	* s ++		337646	1					
ANR	337689	UnaryOperator	*		337646	0					
ANR	337690	PostIncDecOperationExpression	s ++		337646	1					
ANR	337691	Identifier	s		337646	0					
ANR	337692	IncDec	++		337646	1					
ANR	337693	IfStatement	if ( c >= 040 && c <= 0176 )		337646	1					
ANR	337694	Condition	c >= 040 && c <= 0176	2526:6:56334:56354	337646	0	True				
ANR	337695	AndExpression	c >= 040 && c <= 0176		337646	0		&&			
ANR	337696	RelationalExpression	c >= 040		337646	0		>=			
ANR	337697	Identifier	c		337646	0					
ANR	337698	PrimaryExpression	040		337646	1					
ANR	337699	RelationalExpression	c <= 0176		337646	1		<=			
ANR	337700	Identifier	c		337646	0					
ANR	337701	PrimaryExpression	0176		337646	1					
ANR	337702	ExpressionStatement	"( void ) fputc ( c , fp )"	2527:3:56391:56410	337646	1	True				
ANR	337703	CastExpression	"( void ) fputc ( c , fp )"		337646	0					
ANR	337704	CastTarget	void		337646	0					
ANR	337705	CallExpression	"fputc ( c , fp )"		337646	1					
ANR	337706	Callee	fputc		337646	0					
ANR	337707	Identifier	fputc		337646	0					
ANR	337708	ArgumentList	c		337646	1					
ANR	337709	Argument	c		337646	0					
ANR	337710	Identifier	c		337646	0					
ANR	337711	Argument	fp		337646	1					
ANR	337712	Identifier	fp		337646	0					
ANR	337713	ElseStatement	else		337646	0					
ANR	337714	CompoundStatement		17:7:237:237	337646	0					
ANR	337715	ExpressionStatement	"( void ) fputc ( '\\\\' , fp )"	2529:3:56424:56446	337646	0	True				
ANR	337716	CastExpression	"( void ) fputc ( '\\\\' , fp )"		337646	0					
ANR	337717	CastTarget	void		337646	0					
ANR	337718	CallExpression	"fputc ( '\\\\' , fp )"		337646	1					
ANR	337719	Callee	fputc		337646	0					
ANR	337720	Identifier	fputc		337646	0					
ANR	337721	ArgumentList	'\\\\'		337646	1					
ANR	337722	Argument	'\\\\'		337646	0					
ANR	337723	PrimaryExpression	'\\\\'		337646	0					
ANR	337724	Argument	fp		337646	1					
ANR	337725	Identifier	fp		337646	0					
ANR	337726	SwitchStatement	switch ( c )		337646	1					
ANR	337727	Condition	c	2530:11:56459:56459	337646	0	True				
ANR	337728	Identifier	c		337646	0					
ANR	337729	CompoundStatement		19:14:280:280	337646	1					
ANR	337730	Label	case '\\a' :	2531:3:56467:56476	337646	0	True				
ANR	337731	ExpressionStatement	"( void ) fputc ( 'a' , fp )"	2532:4:56482:56503	337646	1	True				
ANR	337732	CastExpression	"( void ) fputc ( 'a' , fp )"		337646	0					
ANR	337733	CastTarget	void		337646	0					
ANR	337734	CallExpression	"fputc ( 'a' , fp )"		337646	1					
ANR	337735	Callee	fputc		337646	0					
ANR	337736	Identifier	fputc		337646	0					
ANR	337737	ArgumentList	'a'		337646	1					
ANR	337738	Argument	'a'		337646	0					
ANR	337739	PrimaryExpression	'a'		337646	0					
ANR	337740	Argument	fp		337646	1					
ANR	337741	Identifier	fp		337646	0					
ANR	337742	BreakStatement	break ;	2533:4:56509:56514	337646	2	True				
ANR	337743	Label	case '\\b' :	2535:3:56520:56529	337646	3	True				
ANR	337744	ExpressionStatement	"( void ) fputc ( 'b' , fp )"	2536:4:56535:56556	337646	4	True				
ANR	337745	CastExpression	"( void ) fputc ( 'b' , fp )"		337646	0					
ANR	337746	CastTarget	void		337646	0					
ANR	337747	CallExpression	"fputc ( 'b' , fp )"		337646	1					
ANR	337748	Callee	fputc		337646	0					
ANR	337749	Identifier	fputc		337646	0					
ANR	337750	ArgumentList	'b'		337646	1					
ANR	337751	Argument	'b'		337646	0					
ANR	337752	PrimaryExpression	'b'		337646	0					
ANR	337753	Argument	fp		337646	1					
ANR	337754	Identifier	fp		337646	0					
ANR	337755	BreakStatement	break ;	2537:4:56562:56567	337646	5	True				
ANR	337756	Label	case '\\f' :	2539:3:56573:56582	337646	6	True				
ANR	337757	ExpressionStatement	"( void ) fputc ( 'f' , fp )"	2540:4:56588:56609	337646	7	True				
ANR	337758	CastExpression	"( void ) fputc ( 'f' , fp )"		337646	0					
ANR	337759	CastTarget	void		337646	0					
ANR	337760	CallExpression	"fputc ( 'f' , fp )"		337646	1					
ANR	337761	Callee	fputc		337646	0					
ANR	337762	Identifier	fputc		337646	0					
ANR	337763	ArgumentList	'f'		337646	1					
ANR	337764	Argument	'f'		337646	0					
ANR	337765	PrimaryExpression	'f'		337646	0					
ANR	337766	Argument	fp		337646	1					
ANR	337767	Identifier	fp		337646	0					
ANR	337768	BreakStatement	break ;	2541:4:56615:56620	337646	8	True				
ANR	337769	Label	case '\\n' :	2543:3:56626:56635	337646	9	True				
ANR	337770	ExpressionStatement	"( void ) fputc ( 'n' , fp )"	2544:4:56641:56662	337646	10	True				
ANR	337771	CastExpression	"( void ) fputc ( 'n' , fp )"		337646	0					
ANR	337772	CastTarget	void		337646	0					
ANR	337773	CallExpression	"fputc ( 'n' , fp )"		337646	1					
ANR	337774	Callee	fputc		337646	0					
ANR	337775	Identifier	fputc		337646	0					
ANR	337776	ArgumentList	'n'		337646	1					
ANR	337777	Argument	'n'		337646	0					
ANR	337778	PrimaryExpression	'n'		337646	0					
ANR	337779	Argument	fp		337646	1					
ANR	337780	Identifier	fp		337646	0					
ANR	337781	BreakStatement	break ;	2545:4:56668:56673	337646	11	True				
ANR	337782	Label	case '\\r' :	2547:3:56679:56688	337646	12	True				
ANR	337783	ExpressionStatement	"( void ) fputc ( 'r' , fp )"	2548:4:56694:56715	337646	13	True				
ANR	337784	CastExpression	"( void ) fputc ( 'r' , fp )"		337646	0					
ANR	337785	CastTarget	void		337646	0					
ANR	337786	CallExpression	"fputc ( 'r' , fp )"		337646	1					
ANR	337787	Callee	fputc		337646	0					
ANR	337788	Identifier	fputc		337646	0					
ANR	337789	ArgumentList	'r'		337646	1					
ANR	337790	Argument	'r'		337646	0					
ANR	337791	PrimaryExpression	'r'		337646	0					
ANR	337792	Argument	fp		337646	1					
ANR	337793	Identifier	fp		337646	0					
ANR	337794	BreakStatement	break ;	2549:4:56721:56726	337646	14	True				
ANR	337795	Label	case '\\t' :	2551:3:56732:56741	337646	15	True				
ANR	337796	ExpressionStatement	"( void ) fputc ( 't' , fp )"	2552:4:56747:56768	337646	16	True				
ANR	337797	CastExpression	"( void ) fputc ( 't' , fp )"		337646	0					
ANR	337798	CastTarget	void		337646	0					
ANR	337799	CallExpression	"fputc ( 't' , fp )"		337646	1					
ANR	337800	Callee	fputc		337646	0					
ANR	337801	Identifier	fputc		337646	0					
ANR	337802	ArgumentList	't'		337646	1					
ANR	337803	Argument	't'		337646	0					
ANR	337804	PrimaryExpression	't'		337646	0					
ANR	337805	Argument	fp		337646	1					
ANR	337806	Identifier	fp		337646	0					
ANR	337807	BreakStatement	break ;	2553:4:56774:56779	337646	17	True				
ANR	337808	Label	case '\\v' :	2555:3:56785:56794	337646	18	True				
ANR	337809	ExpressionStatement	"( void ) fputc ( 'v' , fp )"	2556:4:56800:56821	337646	19	True				
ANR	337810	CastExpression	"( void ) fputc ( 'v' , fp )"		337646	0					
ANR	337811	CastTarget	void		337646	0					
ANR	337812	CallExpression	"fputc ( 'v' , fp )"		337646	1					
ANR	337813	Callee	fputc		337646	0					
ANR	337814	Identifier	fputc		337646	0					
ANR	337815	ArgumentList	'v'		337646	1					
ANR	337816	Argument	'v'		337646	0					
ANR	337817	PrimaryExpression	'v'		337646	0					
ANR	337818	Argument	fp		337646	1					
ANR	337819	Identifier	fp		337646	0					
ANR	337820	BreakStatement	break ;	2557:4:56827:56832	337646	20	True				
ANR	337821	Label	default :	2559:3:56838:56845	337646	21	True				
ANR	337822	Identifier	default		337646	0					
ANR	337823	ExpressionStatement	"( void ) fprintf ( fp , ""%.3o"" , c & 0377 )"	2560:4:56851:56887	337646	22	True				
ANR	337824	CastExpression	"( void ) fprintf ( fp , ""%.3o"" , c & 0377 )"		337646	0					
ANR	337825	CastTarget	void		337646	0					
ANR	337826	CallExpression	"fprintf ( fp , ""%.3o"" , c & 0377 )"		337646	1					
ANR	337827	Callee	fprintf		337646	0					
ANR	337828	Identifier	fprintf		337646	0					
ANR	337829	ArgumentList	fp		337646	1					
ANR	337830	Argument	fp		337646	0					
ANR	337831	Identifier	fp		337646	0					
ANR	337832	Argument	"""%.3o"""		337646	1					
ANR	337833	PrimaryExpression	"""%.3o"""		337646	0					
ANR	337834	Argument	c & 0377		337646	2					
ANR	337835	BitAndExpression	c & 0377		337646	0		&			
ANR	337836	Identifier	c		337646	0					
ANR	337837	PrimaryExpression	0377		337646	1					
ANR	337838	BreakStatement	break ;	2561:4:56893:56898	337646	23	True				
ANR	337839	ReturnType	void		337646	1					
ANR	337840	Identifier	file_showstr		337646	2					
ANR	337841	ParameterList	"FILE * fp , const char * s , size_t len"		337646	3					
ANR	337842	Parameter	FILE * fp	2511:13:56144:56151	337646	0	True				
ANR	337843	ParameterType	FILE *		337646	0					
ANR	337844	Identifier	fp		337646	1					
ANR	337845	Parameter	const char * s	2511:23:56154:56166	337646	1	True				
ANR	337846	ParameterType	const char *		337646	0					
ANR	337847	Identifier	s		337646	1					
ANR	337848	Parameter	size_t len	2511:38:56169:56178	337646	2	True				
ANR	337849	ParameterType	size_t		337646	0					
ANR	337850	Identifier	len		337646	1					
ANR	337851	CFGEntryNode	ENTRY		337646		True				
ANR	337852	CFGExitNode	EXIT		337646		True				
ANR	337853	InfiniteForNode	true		337646		True				
ANR	337854	Symbol	* s ++		337646						
ANR	337855	Symbol	~0U		337646						
ANR	337856	Symbol	s		337646						
ANR	337857	Symbol	c		337646						
ANR	337858	Symbol	len		337646						
ANR	337859	Symbol	fp		337646						
ANR	337860	Function	eatsize	2570:8:56987:57292							
ANR	337861	FunctionDef	eatsize (const char * * p)		337860	0					
ANR	337862	CompoundStatement		2572:0:57016:57292	337860	0					
ANR	337863	IdentifierDeclStatement	const char * l = * p ;	2573:1:57019:57037	337860	0	True				
ANR	337864	IdentifierDecl	* l = * p		337860	0					
ANR	337865	IdentifierDeclType	const char *		337860	0					
ANR	337866	Identifier	l		337860	1					
ANR	337867	AssignmentExpression	* l = * p		337860	2		=			
ANR	337868	Identifier	l		337860	0					
ANR	337869	UnaryOperationExpression	* p		337860	1					
ANR	337870	UnaryOperator	*		337860	0					
ANR	337871	Identifier	p		337860	1					
ANR	337872	IfStatement	if ( LOWCASE ( * l ) == 'u' )		337860	1					
ANR	337873	Condition	LOWCASE ( * l ) == 'u'	2575:5:57045:57062	337860	0	True				
ANR	337874	EqualityExpression	LOWCASE ( * l ) == 'u'		337860	0		==			
ANR	337875	CallExpression	LOWCASE ( * l )		337860	0					
ANR	337876	Callee	LOWCASE		337860	0					
ANR	337877	Identifier	LOWCASE		337860	0					
ANR	337878	ArgumentList	* l		337860	1					
ANR	337879	Argument	* l		337860	0					
ANR	337880	UnaryOperationExpression	* l		337860	0					
ANR	337881	UnaryOperator	*		337860	0					
ANR	337882	Identifier	l		337860	1					
ANR	337883	PrimaryExpression	'u'		337860	1					
ANR	337884	ExpressionStatement	l ++	2576:2:57068:57071	337860	1	True				
ANR	337885	PostIncDecOperationExpression	l ++		337860	0					
ANR	337886	Identifier	l		337860	0					
ANR	337887	IncDec	++		337860	1					
ANR	337888	SwitchStatement	switch ( LOWCASE ( * l ) )		337860	2					
ANR	337889	Condition	LOWCASE ( * l )	2578:9:57083:57093	337860	0	True				
ANR	337890	CallExpression	LOWCASE ( * l )		337860	0					
ANR	337891	Callee	LOWCASE		337860	0					
ANR	337892	Identifier	LOWCASE		337860	0					
ANR	337893	ArgumentList	* l		337860	1					
ANR	337894	Argument	* l		337860	0					
ANR	337895	UnaryOperationExpression	* l		337860	0					
ANR	337896	UnaryOperator	*		337860	0					
ANR	337897	Identifier	l		337860	1					
ANR	337898	CompoundStatement		7:22:79:79	337860	1					
ANR	337899	Label	case 'l' :	2579:1:57099:57107	337860	0	True				
ANR	337900	Label	case 's' :	2580:1:57124:57132	337860	1	True				
ANR	337901	Label	case 'h' :	2581:1:57150:57158	337860	2	True				
ANR	337902	Label	case 'b' :	2582:1:57176:57184	337860	3	True				
ANR	337903	Label	case 'c' :	2583:1:57206:57214	337860	4	True				
ANR	337904	ExpressionStatement	l ++	2584:2:57237:57240	337860	5	True				
ANR	337905	PostIncDecOperationExpression	l ++		337860	0					
ANR	337906	Identifier	l		337860	0					
ANR	337907	IncDec	++		337860	1					
ANR	337908	Label	default :	2586:1:57261:57268	337860	6	True				
ANR	337909	Identifier	default		337860	0					
ANR	337910	BreakStatement	break ;	2587:2:57272:57277	337860	7	True				
ANR	337911	ExpressionStatement	* p = l	2590:1:57284:57290	337860	3	True				
ANR	337912	AssignmentExpression	* p = l		337860	0		=			
ANR	337913	UnaryOperationExpression	* p		337860	0					
ANR	337914	UnaryOperator	*		337860	0					
ANR	337915	Identifier	p		337860	1					
ANR	337916	Identifier	l		337860	1					
ANR	337917	ReturnType	void		337860	1					
ANR	337918	Identifier	eatsize		337860	2					
ANR	337919	ParameterList	const char * * p		337860	3					
ANR	337920	Parameter	const char * * p	2571:8:57000:57013	337860	0	True				
ANR	337921	ParameterType	const char * *		337860	0					
ANR	337922	Identifier	p		337860	1					
ANR	337923	CFGEntryNode	ENTRY		337860		True				
ANR	337924	CFGExitNode	EXIT		337860		True				
ANR	337925	Symbol	p		337860						
ANR	337926	Symbol	LOWCASE		337860						
ANR	337927	Symbol	* l		337860						
ANR	337928	Symbol	* p		337860						
ANR	337929	Symbol	l		337860						
ANR	337930	Function	apprentice_map	2597:8:57338:60850							
ANR	337931	FunctionDef	"apprentice_map (struct magic_set * ms , const char * fn)"		337930	0					
ANR	337932	CompoundStatement		2599:0:57410:60850	337930	0					
ANR	337933	IdentifierDeclStatement	uint32_t * ptr ;	2600:1:57413:57426	337930	0	True				
ANR	337934	IdentifierDecl	* ptr		337930	0					
ANR	337935	IdentifierDeclType	uint32_t *		337930	0					
ANR	337936	Identifier	ptr		337930	1					
ANR	337937	IdentifierDeclStatement	"uint32_t version , entries , nentries ;"	2601:1:57429:57464	337930	1	True				
ANR	337938	IdentifierDecl	version		337930	0					
ANR	337939	IdentifierDeclType	uint32_t		337930	0					
ANR	337940	Identifier	version		337930	1					
ANR	337941	IdentifierDecl	entries		337930	1					
ANR	337942	IdentifierDeclType	uint32_t		337930	0					
ANR	337943	Identifier	entries		337930	1					
ANR	337944	IdentifierDecl	nentries		337930	2					
ANR	337945	IdentifierDeclType	uint32_t		337930	0					
ANR	337946	Identifier	nentries		337930	1					
ANR	337947	IdentifierDeclStatement	int needsbyteswap ;	2602:1:57467:57484	337930	2	True				
ANR	337948	IdentifierDecl	needsbyteswap		337930	0					
ANR	337949	IdentifierDeclType	int		337930	0					
ANR	337950	Identifier	needsbyteswap		337930	1					
ANR	337951	IdentifierDeclStatement	char * dbname = NULL ;	2603:1:57487:57506	337930	3	True				
ANR	337952	IdentifierDecl	* dbname = NULL		337930	0					
ANR	337953	IdentifierDeclType	char *		337930	0					
ANR	337954	Identifier	dbname		337930	1					
ANR	337955	AssignmentExpression	* dbname = NULL		337930	2		=			
ANR	337956	Identifier	NULL		337930	0					
ANR	337957	Identifier	NULL		337930	1					
ANR	337958	IdentifierDeclStatement	struct magic_map * map ;	2604:1:57509:57530	337930	4	True				
ANR	337959	IdentifierDecl	* map		337930	0					
ANR	337960	IdentifierDeclType	struct magic_map *		337930	0					
ANR	337961	Identifier	map		337930	1					
ANR	337962	IdentifierDeclStatement	size_t i ;	2605:1:57533:57541	337930	5	True				
ANR	337963	IdentifierDecl	i		337930	0					
ANR	337964	IdentifierDeclType	size_t		337930	0					
ANR	337965	Identifier	i		337930	1					
ANR	337966	IdentifierDeclStatement	php_stream * stream = NULL ;	2606:1:57544:57569	337930	6	True				
ANR	337967	IdentifierDecl	* stream = NULL		337930	0					
ANR	337968	IdentifierDeclType	php_stream *		337930	0					
ANR	337969	Identifier	stream		337930	1					
ANR	337970	AssignmentExpression	* stream = NULL		337930	2		=			
ANR	337971	Identifier	NULL		337930	0					
ANR	337972	Identifier	NULL		337930	1					
ANR	337973	IdentifierDeclStatement	php_stream_statbuf st ;	2607:1:57572:57593	337930	7	True				
ANR	337974	IdentifierDecl	st		337930	0					
ANR	337975	IdentifierDeclType	php_stream_statbuf		337930	0					
ANR	337976	Identifier	st		337930	1					
ANR	337977	ExpressionStatement	TSRMLS_FETCH ( )	2610:1:57598:57612	337930	8	True				
ANR	337978	CallExpression	TSRMLS_FETCH ( )		337930	0					
ANR	337979	Callee	TSRMLS_FETCH		337930	0					
ANR	337980	Identifier	TSRMLS_FETCH		337930	0					
ANR	337981	ArgumentList			337930	1					
ANR	337982	Statement	if	2612:1:57616:57617	337930	9	True				
ANR	337983	Statement	(	2612:4:57619:57619	337930	10	True				
ANR	337984	Statement	(	2612:5:57620:57620	337930	11	True				
ANR	337985	Statement	map	2612:6:57621:57623	337930	12	True				
ANR	337986	Statement	=	2612:10:57625:57625	337930	13	True				
ANR	337987	Statement	CAST	2612:12:57627:57630	337930	14	True				
ANR	337988	Statement	(	2612:16:57631:57631	337930	15	True				
ANR	337989	Statement	struct	2612:17:57632:57637	337930	16	True				
ANR	337990	Statement	magic_map	2612:24:57639:57647	337930	17	True				
ANR	337991	Statement	*	2612:34:57649:57649	337930	18	True				
ANR	337992	Statement	","	2612:35:57650:57650	337930	19	True				
ANR	337993	Statement	ecalloc	2612:37:57652:57658	337930	20	True				
ANR	337994	Statement	(	2612:44:57659:57659	337930	21	True				
ANR	337995	Statement	1	2612:45:57660:57660	337930	22	True				
ANR	337996	Statement	","	2612:46:57661:57661	337930	23	True				
ANR	337997	Statement	sizeof	2612:48:57663:57668	337930	24	True				
ANR	337998	Statement	(	2612:54:57669:57669	337930	25	True				
ANR	337999	Statement	*	2612:55:57670:57670	337930	26	True				
ANR	338000	Statement	map	2612:56:57671:57673	337930	27	True				
ANR	338001	Statement	)	2612:59:57674:57674	337930	28	True				
ANR	338002	Statement	)	2612:60:57675:57675	337930	29	True				
ANR	338003	Statement	)	2612:61:57676:57676	337930	30	True				
ANR	338004	Statement	)	2612:62:57677:57677	337930	31	True				
ANR	338005	Statement	==	2612:64:57679:57680	337930	32	True				
ANR	338006	Statement	NULL	2612:67:57682:57685	337930	33	True				
ANR	338007	Statement	)	2612:71:57686:57686	337930	34	True				
ANR	338008	CompoundStatement		14:73:277:277	337930	35					
ANR	338009	ExpressionStatement	"file_oomem ( ms , sizeof ( * map ) )"	2613:2:57692:57720	337930	0	True				
ANR	338010	CallExpression	"file_oomem ( ms , sizeof ( * map ) )"		337930	0					
ANR	338011	Callee	file_oomem		337930	0					
ANR	338012	Identifier	file_oomem		337930	0					
ANR	338013	ArgumentList	ms		337930	1					
ANR	338014	Argument	ms		337930	0					
ANR	338015	Identifier	ms		337930	0					
ANR	338016	Argument	sizeof ( * map )		337930	1					
ANR	338017	SizeofExpression	sizeof ( * map )		337930	0					
ANR	338018	Sizeof	sizeof		337930	0					
ANR	338019	UnaryOperationExpression	* map		337930	1					
ANR	338020	UnaryOperator	*		337930	0					
ANR	338021	Identifier	map		337930	1					
ANR	338022	ReturnStatement	return NULL ;	2614:2:57724:57735	337930	1	True				
ANR	338023	Identifier	NULL		337930	0					
ANR	338024	IfStatement	if ( fn == NULL )		337930	36					
ANR	338025	Condition	fn == NULL	2617:5:57746:57755	337930	0	True				
ANR	338026	EqualityExpression	fn == NULL		337930	0		==			
ANR	338027	Identifier	fn		337930	0					
ANR	338028	Identifier	NULL		337930	1					
ANR	338029	CompoundStatement		19:17:347:347	337930	1					
ANR	338030	ExpressionStatement	map -> p = ( void * ) & php_magic_database	2618:2:57762:57798	337930	0	True				
ANR	338031	AssignmentExpression	map -> p = ( void * ) & php_magic_database		337930	0		=			
ANR	338032	PtrMemberAccess	map -> p		337930	0					
ANR	338033	Identifier	map		337930	0					
ANR	338034	Identifier	p		337930	1					
ANR	338035	CastExpression	( void * ) & php_magic_database		337930	1					
ANR	338036	CastTarget	void *		337930	0					
ANR	338037	UnaryOperationExpression	& php_magic_database		337930	1					
ANR	338038	UnaryOperator	&		337930	0					
ANR	338039	Identifier	php_magic_database		337930	1					
ANR	338040	GotoStatement	goto internal_loaded ;	2619:2:57802:57822	337930	1	True				
ANR	338041	Identifier	internal_loaded		337930	0					
ANR	338042	IfStatement	"if ( php_stream_stat_path_ex ( ( char * ) fn , 0 , & st , NULL ) == SUCCESS )"		337930	37					
ANR	338043	Condition	"php_stream_stat_path_ex ( ( char * ) fn , 0 , & st , NULL ) == SUCCESS"	2625:5:57955:58014	337930	0	True				
ANR	338044	EqualityExpression	"php_stream_stat_path_ex ( ( char * ) fn , 0 , & st , NULL ) == SUCCESS"		337930	0		==			
ANR	338045	CallExpression	"php_stream_stat_path_ex ( ( char * ) fn , 0 , & st , NULL )"		337930	0					
ANR	338046	Callee	php_stream_stat_path_ex		337930	0					
ANR	338047	Identifier	php_stream_stat_path_ex		337930	0					
ANR	338048	ArgumentList	( char * ) fn		337930	1					
ANR	338049	Argument	( char * ) fn		337930	0					
ANR	338050	CastExpression	( char * ) fn		337930	0					
ANR	338051	CastTarget	char *		337930	0					
ANR	338052	Identifier	fn		337930	1					
ANR	338053	Argument	0		337930	1					
ANR	338054	PrimaryExpression	0		337930	0					
ANR	338055	Argument	& st		337930	2					
ANR	338056	UnaryOperationExpression	& st		337930	0					
ANR	338057	UnaryOperator	&		337930	0					
ANR	338058	Identifier	st		337930	1					
ANR	338059	Argument	NULL		337930	3					
ANR	338060	Identifier	NULL		337930	0					
ANR	338061	Identifier	SUCCESS		337930	1					
ANR	338062	CompoundStatement		27:67:606:606	337930	1					
ANR	338063	IfStatement	if ( st . sb . st_mode & S_IFDIR )		337930	0					
ANR	338064	Condition	st . sb . st_mode & S_IFDIR	2626:19:58038:58060	337930	0	True				
ANR	338065	BitAndExpression	st . sb . st_mode & S_IFDIR		337930	0		&			
ANR	338066	MemberAccess	st . sb . st_mode		337930	0					
ANR	338067	MemberAccess	st . sb		337930	0					
ANR	338068	Identifier	st		337930	0					
ANR	338069	Identifier	sb		337930	1					
ANR	338070	Identifier	st_mode		337930	1					
ANR	338071	Identifier	S_IFDIR		337930	1					
ANR	338072	CompoundStatement		28:44:652:652	337930	1					
ANR	338073	ReturnStatement	return NULL ;	2627:23:58088:58099	337930	0	True				
ANR	338074	Identifier	NULL		337930	0					
ANR	338075	ExpressionStatement	"dbname = mkdbname ( ms , fn , 0 )"	2632:1:58136:58164	337930	38	True				
ANR	338076	AssignmentExpression	"dbname = mkdbname ( ms , fn , 0 )"		337930	0		=			
ANR	338077	Identifier	dbname		337930	0					
ANR	338078	CallExpression	"mkdbname ( ms , fn , 0 )"		337930	1					
ANR	338079	Callee	mkdbname		337930	0					
ANR	338080	Identifier	mkdbname		337930	0					
ANR	338081	ArgumentList	ms		337930	1					
ANR	338082	Argument	ms		337930	0					
ANR	338083	Identifier	ms		337930	0					
ANR	338084	Argument	fn		337930	1					
ANR	338085	Identifier	fn		337930	0					
ANR	338086	Argument	0		337930	2					
ANR	338087	PrimaryExpression	0		337930	0					
ANR	338088	IfStatement	if ( dbname == NULL )		337930	39					
ANR	338089	Condition	dbname == NULL	2633:5:58171:58184	337930	0	True				
ANR	338090	EqualityExpression	dbname == NULL		337930	0		==			
ANR	338091	Identifier	dbname		337930	0					
ANR	338092	Identifier	NULL		337930	1					
ANR	338093	GotoStatement	goto error ;	2634:2:58189:58199	337930	1	True				
ANR	338094	Identifier	error		337930	0					
ANR	338095	ExpressionStatement	"stream = php_stream_open_wrapper ( ( char * ) fn , ""rb"" , REPORT_ERRORS , NULL )"	2636:2:58204:58275	337930	40	True				
ANR	338096	AssignmentExpression	"stream = php_stream_open_wrapper ( ( char * ) fn , ""rb"" , REPORT_ERRORS , NULL )"		337930	0		=			
ANR	338097	Identifier	stream		337930	0					
ANR	338098	CallExpression	"php_stream_open_wrapper ( ( char * ) fn , ""rb"" , REPORT_ERRORS , NULL )"		337930	1					
ANR	338099	Callee	php_stream_open_wrapper		337930	0					
ANR	338100	Identifier	php_stream_open_wrapper		337930	0					
ANR	338101	ArgumentList	( char * ) fn		337930	1					
ANR	338102	Argument	( char * ) fn		337930	0					
ANR	338103	CastExpression	( char * ) fn		337930	0					
ANR	338104	CastTarget	char *		337930	0					
ANR	338105	Identifier	fn		337930	1					
ANR	338106	Argument	"""rb"""		337930	1					
ANR	338107	PrimaryExpression	"""rb"""		337930	0					
ANR	338108	Argument	REPORT_ERRORS		337930	2					
ANR	338109	Identifier	REPORT_ERRORS		337930	0					
ANR	338110	Argument	NULL		337930	3					
ANR	338111	Identifier	NULL		337930	0					
ANR	338112	IfStatement	if ( ! stream )		337930	41					
ANR	338113	Condition	! stream	2638:5:58283:58289	337930	0	True				
ANR	338114	UnaryOperationExpression	! stream		337930	0					
ANR	338115	UnaryOperator	!		337930	0					
ANR	338116	Identifier	stream		337930	1					
ANR	338117	CompoundStatement		40:14:881:881	337930	1					
ANR	338118	GotoStatement	goto error ;	2639:2:58296:58306	337930	0	True				
ANR	338119	Identifier	error		337930	0					
ANR	338120	IfStatement	"if ( php_stream_stat ( stream , & st ) < 0 )"		337930	42					
ANR	338121	Condition	"php_stream_stat ( stream , & st ) < 0"	2642:5:58317:58348	337930	0	True				
ANR	338122	RelationalExpression	"php_stream_stat ( stream , & st ) < 0"		337930	0		<			
ANR	338123	CallExpression	"php_stream_stat ( stream , & st )"		337930	0					
ANR	338124	Callee	php_stream_stat		337930	0					
ANR	338125	Identifier	php_stream_stat		337930	0					
ANR	338126	ArgumentList	stream		337930	1					
ANR	338127	Argument	stream		337930	0					
ANR	338128	Identifier	stream		337930	0					
ANR	338129	Argument	& st		337930	1					
ANR	338130	UnaryOperationExpression	& st		337930	0					
ANR	338131	UnaryOperator	&		337930	0					
ANR	338132	Identifier	st		337930	1					
ANR	338133	PrimaryExpression	0		337930	1					
ANR	338134	CompoundStatement		44:39:940:940	337930	1					
ANR	338135	ExpressionStatement	"file_error ( ms , errno , ""cannot stat `%s'"" , dbname )"	2643:2:58355:58404	337930	0	True				
ANR	338136	CallExpression	"file_error ( ms , errno , ""cannot stat `%s'"" , dbname )"		337930	0					
ANR	338137	Callee	file_error		337930	0					
ANR	338138	Identifier	file_error		337930	0					
ANR	338139	ArgumentList	ms		337930	1					
ANR	338140	Argument	ms		337930	0					
ANR	338141	Identifier	ms		337930	0					
ANR	338142	Argument	errno		337930	1					
ANR	338143	Identifier	errno		337930	0					
ANR	338144	Argument	"""cannot stat `%s'"""		337930	2					
ANR	338145	PrimaryExpression	"""cannot stat `%s'"""		337930	0					
ANR	338146	Argument	dbname		337930	3					
ANR	338147	Identifier	dbname		337930	0					
ANR	338148	GotoStatement	goto error ;	2644:2:58408:58418	337930	1	True				
ANR	338149	Identifier	error		337930	0					
ANR	338150	IfStatement	if ( st . sb . st_size < 8 )		337930	43					
ANR	338151	Condition	st . sb . st_size < 8	2647:5:58429:58445	337930	0	True				
ANR	338152	RelationalExpression	st . sb . st_size < 8		337930	0		<			
ANR	338153	MemberAccess	st . sb . st_size		337930	0					
ANR	338154	MemberAccess	st . sb		337930	0					
ANR	338155	Identifier	st		337930	0					
ANR	338156	Identifier	sb		337930	1					
ANR	338157	Identifier	st_size		337930	1					
ANR	338158	PrimaryExpression	8		337930	1					
ANR	338159	CompoundStatement		49:24:1037:1037	337930	1					
ANR	338160	ExpressionStatement	"file_error ( ms , 0 , ""file `%s' is too small"" , dbname )"	2648:2:58452:58503	337930	0	True				
ANR	338161	CallExpression	"file_error ( ms , 0 , ""file `%s' is too small"" , dbname )"		337930	0					
ANR	338162	Callee	file_error		337930	0					
ANR	338163	Identifier	file_error		337930	0					
ANR	338164	ArgumentList	ms		337930	1					
ANR	338165	Argument	ms		337930	0					
ANR	338166	Identifier	ms		337930	0					
ANR	338167	Argument	0		337930	1					
ANR	338168	PrimaryExpression	0		337930	0					
ANR	338169	Argument	"""file `%s' is too small"""		337930	2					
ANR	338170	PrimaryExpression	"""file `%s' is too small"""		337930	0					
ANR	338171	Argument	dbname		337930	3					
ANR	338172	Identifier	dbname		337930	0					
ANR	338173	GotoStatement	goto error ;	2649:2:58507:58517	337930	1	True				
ANR	338174	Identifier	error		337930	0					
ANR	338175	ExpressionStatement	map -> len = ( size_t ) st . sb . st_size	2652:1:58524:58556	337930	44	True				
ANR	338176	AssignmentExpression	map -> len = ( size_t ) st . sb . st_size		337930	0		=			
ANR	338177	PtrMemberAccess	map -> len		337930	0					
ANR	338178	Identifier	map		337930	0					
ANR	338179	Identifier	len		337930	1					
ANR	338180	CastExpression	( size_t ) st . sb . st_size		337930	1					
ANR	338181	CastTarget	size_t		337930	0					
ANR	338182	MemberAccess	st . sb . st_size		337930	1					
ANR	338183	MemberAccess	st . sb		337930	0					
ANR	338184	Identifier	st		337930	0					
ANR	338185	Identifier	sb		337930	1					
ANR	338186	Identifier	st_size		337930	1					
ANR	338187	Statement	if	2653:1:58559:58560	337930	45	True				
ANR	338188	Statement	(	2653:4:58562:58562	337930	46	True				
ANR	338189	Statement	(	2653:5:58563:58563	337930	47	True				
ANR	338190	Statement	map	2653:6:58564:58566	337930	48	True				
ANR	338191	Statement	->	2653:9:58567:58568	337930	49	True				
ANR	338192	Statement	p	2653:11:58569:58569	337930	50	True				
ANR	338193	Statement	=	2653:13:58571:58571	337930	51	True				
ANR	338194	Statement	CAST	2653:15:58573:58576	337930	52	True				
ANR	338195	Statement	(	2653:19:58577:58577	337930	53	True				
ANR	338196	Statement	void	2653:20:58578:58581	337930	54	True				
ANR	338197	Statement	*	2653:25:58583:58583	337930	55	True				
ANR	338198	Statement	","	2653:26:58584:58584	337930	56	True				
ANR	338199	Statement	emalloc	2653:28:58586:58592	337930	57	True				
ANR	338200	Statement	(	2653:35:58593:58593	337930	58	True				
ANR	338201	Statement	map	2653:36:58594:58596	337930	59	True				
ANR	338202	Statement	->	2653:39:58597:58598	337930	60	True				
ANR	338203	Statement	len	2653:41:58599:58601	337930	61	True				
ANR	338204	Statement	)	2653:44:58602:58602	337930	62	True				
ANR	338205	Statement	)	2653:45:58603:58603	337930	63	True				
ANR	338206	Statement	)	2653:46:58604:58604	337930	64	True				
ANR	338207	Statement	==	2653:48:58606:58607	337930	65	True				
ANR	338208	Statement	NULL	2653:51:58609:58612	337930	66	True				
ANR	338209	Statement	)	2653:55:58613:58613	337930	67	True				
ANR	338210	CompoundStatement		55:57:1204:1204	337930	68					
ANR	338211	ExpressionStatement	"file_oomem ( ms , map -> len )"	2654:2:58619:58643	337930	0	True				
ANR	338212	CallExpression	"file_oomem ( ms , map -> len )"		337930	0					
ANR	338213	Callee	file_oomem		337930	0					
ANR	338214	Identifier	file_oomem		337930	0					
ANR	338215	ArgumentList	ms		337930	1					
ANR	338216	Argument	ms		337930	0					
ANR	338217	Identifier	ms		337930	0					
ANR	338218	Argument	map -> len		337930	1					
ANR	338219	PtrMemberAccess	map -> len		337930	0					
ANR	338220	Identifier	map		337930	0					
ANR	338221	Identifier	len		337930	1					
ANR	338222	GotoStatement	goto error ;	2655:2:58647:58657	337930	1	True				
ANR	338223	Identifier	error		337930	0					
ANR	338224	IfStatement	"if ( php_stream_read ( stream , map -> p , ( size_t ) st . sb . st_size ) != ( size_t ) st . sb . st_size )"		337930	69					
ANR	338225	Condition	"php_stream_read ( stream , map -> p , ( size_t ) st . sb . st_size ) != ( size_t ) st . sb . st_size"	2657:5:58667:58745	337930	0	True				
ANR	338226	EqualityExpression	"php_stream_read ( stream , map -> p , ( size_t ) st . sb . st_size ) != ( size_t ) st . sb . st_size"		337930	0		!=			
ANR	338227	CallExpression	"php_stream_read ( stream , map -> p , ( size_t ) st . sb . st_size )"		337930	0					
ANR	338228	Callee	php_stream_read		337930	0					
ANR	338229	Identifier	php_stream_read		337930	0					
ANR	338230	ArgumentList	stream		337930	1					
ANR	338231	Argument	stream		337930	0					
ANR	338232	Identifier	stream		337930	0					
ANR	338233	Argument	map -> p		337930	1					
ANR	338234	PtrMemberAccess	map -> p		337930	0					
ANR	338235	Identifier	map		337930	0					
ANR	338236	Identifier	p		337930	1					
ANR	338237	Argument	( size_t ) st . sb . st_size		337930	2					
ANR	338238	CastExpression	( size_t ) st . sb . st_size		337930	0					
ANR	338239	CastTarget	size_t		337930	0					
ANR	338240	MemberAccess	st . sb . st_size		337930	1					
ANR	338241	MemberAccess	st . sb		337930	0					
ANR	338242	Identifier	st		337930	0					
ANR	338243	Identifier	sb		337930	1					
ANR	338244	Identifier	st_size		337930	1					
ANR	338245	CastExpression	( size_t ) st . sb . st_size		337930	1					
ANR	338246	CastTarget	size_t		337930	0					
ANR	338247	MemberAccess	st . sb . st_size		337930	1					
ANR	338248	MemberAccess	st . sb		337930	0					
ANR	338249	Identifier	st		337930	0					
ANR	338250	Identifier	sb		337930	1					
ANR	338251	Identifier	st_size		337930	1					
ANR	338252	CompoundStatement		59:86:1337:1337	337930	1					
ANR	338253	ExpressionStatement	file_badread ( ms )	2658:2:58752:58768	337930	0	True				
ANR	338254	CallExpression	file_badread ( ms )		337930	0					
ANR	338255	Callee	file_badread		337930	0					
ANR	338256	Identifier	file_badread		337930	0					
ANR	338257	ArgumentList	ms		337930	1					
ANR	338258	Argument	ms		337930	0					
ANR	338259	Identifier	ms		337930	0					
ANR	338260	GotoStatement	goto error ;	2659:2:58772:58782	337930	1	True				
ANR	338261	Identifier	error		337930	0					
ANR	338262	ExpressionStatement	map -> len = 0	2661:1:58788:58800	337930	70	True				
ANR	338263	AssignmentExpression	map -> len = 0		337930	0		=			
ANR	338264	PtrMemberAccess	map -> len		337930	0					
ANR	338265	Identifier	map		337930	0					
ANR	338266	Identifier	len		337930	1					
ANR	338267	PrimaryExpression	0		337930	1					
ANR	338268	Statement	define	2662:1:58803:58808	337930	71	True				
ANR	338269	Statement	RET	2662:8:58810:58812	337930	72	True				
ANR	338270	Statement	1	2662:12:58814:58814	337930	73	True				
ANR	338271	ExpressionStatement	php_stream_close ( stream )	2664:1:58818:58842	337930	74	True				
ANR	338272	CallExpression	php_stream_close ( stream )		337930	0					
ANR	338273	Callee	php_stream_close		337930	0					
ANR	338274	Identifier	php_stream_close		337930	0					
ANR	338275	ArgumentList	stream		337930	1					
ANR	338276	Argument	stream		337930	0					
ANR	338277	Identifier	stream		337930	0					
ANR	338278	ExpressionStatement	stream = NULL	2665:1:58845:58858	337930	75	True				
ANR	338279	AssignmentExpression	stream = NULL		337930	0		=			
ANR	338280	Identifier	stream		337930	0					
ANR	338281	Identifier	NULL		337930	1					
ANR	338282	Label	internal_loaded :	2667:0:58861:58876	337930	76	True				
ANR	338283	Identifier	internal_loaded		337930	0					
ANR	338284	ExpressionStatement	ptr = ( uint32_t * ) ( void * ) map -> p	2668:1:58879:58911	337930	77	True				
ANR	338285	AssignmentExpression	ptr = ( uint32_t * ) ( void * ) map -> p		337930	0		=			
ANR	338286	Identifier	ptr		337930	0					
ANR	338287	CastExpression	( uint32_t * ) ( void * ) map -> p		337930	1					
ANR	338288	CastTarget	uint32_t *		337930	0					
ANR	338289	CastExpression	( void * ) map -> p		337930	1					
ANR	338290	CastTarget	void *		337930	0					
ANR	338291	PtrMemberAccess	map -> p		337930	1					
ANR	338292	Identifier	map		337930	0					
ANR	338293	Identifier	p		337930	1					
ANR	338294	IfStatement	if ( * ptr != MAGICNO )		337930	78					
ANR	338295	Condition	* ptr != MAGICNO	2669:5:58918:58932	337930	0	True				
ANR	338296	EqualityExpression	* ptr != MAGICNO		337930	0		!=			
ANR	338297	UnaryOperationExpression	* ptr		337930	0					
ANR	338298	UnaryOperator	*		337930	0					
ANR	338299	Identifier	ptr		337930	1					
ANR	338300	Identifier	MAGICNO		337930	1					
ANR	338301	CompoundStatement		71:22:1524:1524	337930	1					
ANR	338302	IfStatement	if ( swap4 ( * ptr ) != MAGICNO )		337930	0					
ANR	338303	Condition	swap4 ( * ptr ) != MAGICNO	2670:6:58943:58964	337930	0	True				
ANR	338304	EqualityExpression	swap4 ( * ptr ) != MAGICNO		337930	0		!=			
ANR	338305	CallExpression	swap4 ( * ptr )		337930	0					
ANR	338306	Callee	swap4		337930	0					
ANR	338307	Identifier	swap4		337930	0					
ANR	338308	ArgumentList	* ptr		337930	1					
ANR	338309	Argument	* ptr		337930	0					
ANR	338310	UnaryOperationExpression	* ptr		337930	0					
ANR	338311	UnaryOperator	*		337930	0					
ANR	338312	Identifier	ptr		337930	1					
ANR	338313	Identifier	MAGICNO		337930	1					
ANR	338314	CompoundStatement		72:30:1556:1556	337930	1					
ANR	338315	ExpressionStatement	"file_error ( ms , 0 , ""bad magic in `%s'"" , dbname )"	2671:3:58972:59018	337930	0	True				
ANR	338316	CallExpression	"file_error ( ms , 0 , ""bad magic in `%s'"" , dbname )"		337930	0					
ANR	338317	Callee	file_error		337930	0					
ANR	338318	Identifier	file_error		337930	0					
ANR	338319	ArgumentList	ms		337930	1					
ANR	338320	Argument	ms		337930	0					
ANR	338321	Identifier	ms		337930	0					
ANR	338322	Argument	0		337930	1					
ANR	338323	PrimaryExpression	0		337930	0					
ANR	338324	Argument	"""bad magic in `%s'"""		337930	2					
ANR	338325	PrimaryExpression	"""bad magic in `%s'"""		337930	0					
ANR	338326	Argument	dbname		337930	3					
ANR	338327	Identifier	dbname		337930	0					
ANR	338328	GotoStatement	goto error ;	2672:3:59023:59033	337930	1	True				
ANR	338329	Identifier	error		337930	0					
ANR	338330	ExpressionStatement	needsbyteswap = 1	2674:2:59041:59058	337930	1	True				
ANR	338331	AssignmentExpression	needsbyteswap = 1		337930	0		=			
ANR	338332	Identifier	needsbyteswap		337930	0					
ANR	338333	PrimaryExpression	1		337930	1					
ANR	338334	ElseStatement	else		337930	0					
ANR	338335	ExpressionStatement	needsbyteswap = 0	2676:2:59070:59087	337930	0	True				
ANR	338336	AssignmentExpression	needsbyteswap = 0		337930	0		=			
ANR	338337	Identifier	needsbyteswap		337930	0					
ANR	338338	PrimaryExpression	0		337930	1					
ANR	338339	IfStatement	if ( needsbyteswap )		337930	79					
ANR	338340	Condition	needsbyteswap	2677:5:59094:59106	337930	0	True				
ANR	338341	Identifier	needsbyteswap		337930	0					
ANR	338342	ExpressionStatement	version = swap4 ( ptr [ 1 ] )	2678:2:59111:59134	337930	1	True				
ANR	338343	AssignmentExpression	version = swap4 ( ptr [ 1 ] )		337930	0		=			
ANR	338344	Identifier	version		337930	0					
ANR	338345	CallExpression	swap4 ( ptr [ 1 ] )		337930	1					
ANR	338346	Callee	swap4		337930	0					
ANR	338347	Identifier	swap4		337930	0					
ANR	338348	ArgumentList	ptr [ 1 ]		337930	1					
ANR	338349	Argument	ptr [ 1 ]		337930	0					
ANR	338350	ArrayIndexing	ptr [ 1 ]		337930	0					
ANR	338351	Identifier	ptr		337930	0					
ANR	338352	PrimaryExpression	1		337930	1					
ANR	338353	ElseStatement	else		337930	0					
ANR	338354	ExpressionStatement	version = ptr [ 1 ]	2680:2:59144:59160	337930	0	True				
ANR	338355	AssignmentExpression	version = ptr [ 1 ]		337930	0		=			
ANR	338356	Identifier	version		337930	0					
ANR	338357	ArrayIndexing	ptr [ 1 ]		337930	1					
ANR	338358	Identifier	ptr		337930	0					
ANR	338359	PrimaryExpression	1		337930	1					
ANR	338360	IfStatement	if ( version != VERSIONNO )		337930	80					
ANR	338361	Condition	version != VERSIONNO	2681:5:59167:59186	337930	0	True				
ANR	338362	EqualityExpression	version != VERSIONNO		337930	0		!=			
ANR	338363	Identifier	version		337930	0					
ANR	338364	Identifier	VERSIONNO		337930	1					
ANR	338365	CompoundStatement		83:27:1778:1778	337930	1					
ANR	338366	Statement	file_error	2682:2:59193:59202	337930	0	True				
ANR	338367	Statement	(	2682:12:59203:59203	337930	1	True				
ANR	338368	Statement	ms	2682:13:59204:59205	337930	2	True				
ANR	338369	Statement	","	2682:15:59206:59206	337930	3	True				
ANR	338370	Statement	0	2682:17:59208:59208	337930	4	True				
ANR	338371	Statement	","	2682:18:59209:59209	337930	5	True				
ANR	338372	Statement	"""File %d.%d supports only version %d magic """	2682:20:59211:59254	337930	6	True				
ANR	338373	Statement	"""files. `%s' is version %d"""	2683:6:59262:59288	337930	7	True				
ANR	338374	Statement	","	2683:33:59289:59289	337930	8	True				
ANR	338375	Statement	FILE_VERSION_MAJOR	2683:35:59291:59308	337930	9	True				
ANR	338376	Statement	","	2683:53:59309:59309	337930	10	True				
ANR	338377	Statement	patchlevel	2683:55:59311:59320	337930	11	True				
ANR	338378	Statement	","	2683:65:59321:59321	337930	12	True				
ANR	338379	Statement	VERSIONNO	2684:6:59329:59337	337930	13	True				
ANR	338380	Statement	","	2684:15:59338:59338	337930	14	True				
ANR	338381	Statement	dbname	2684:17:59340:59345	337930	15	True				
ANR	338382	Statement	","	2684:23:59346:59346	337930	16	True				
ANR	338383	Statement	version	2684:25:59348:59354	337930	17	True				
ANR	338384	Statement	)	2684:32:59355:59355	337930	18	True				
ANR	338385	ExpressionStatement		2684:33:59356:59356	337930	19	True				
ANR	338386	GotoStatement	goto error ;	2685:2:59360:59370	337930	20	True				
ANR	338387	Identifier	error		337930	0					
ANR	338388	IfStatement	if ( needsbyteswap && fn == NULL )		337930	81					
ANR	338389	Condition	needsbyteswap && fn == NULL	2691:5:59565:59591	337930	0	True				
ANR	338390	AndExpression	needsbyteswap && fn == NULL		337930	0		&&			
ANR	338391	Identifier	needsbyteswap		337930	0					
ANR	338392	EqualityExpression	fn == NULL		337930	1		==			
ANR	338393	Identifier	fn		337930	0					
ANR	338394	Identifier	NULL		337930	1					
ANR	338395	CompoundStatement		93:34:2183:2183	337930	1					
ANR	338396	ExpressionStatement	map -> p = emalloc ( sizeof ( php_magic_database ) )	2692:2:59598:59642	337930	0	True				
ANR	338397	AssignmentExpression	map -> p = emalloc ( sizeof ( php_magic_database ) )		337930	0		=			
ANR	338398	PtrMemberAccess	map -> p		337930	0					
ANR	338399	Identifier	map		337930	0					
ANR	338400	Identifier	p		337930	1					
ANR	338401	CallExpression	emalloc ( sizeof ( php_magic_database ) )		337930	1					
ANR	338402	Callee	emalloc		337930	0					
ANR	338403	Identifier	emalloc		337930	0					
ANR	338404	ArgumentList	sizeof ( php_magic_database )		337930	1					
ANR	338405	Argument	sizeof ( php_magic_database )		337930	0					
ANR	338406	SizeofExpression	sizeof ( php_magic_database )		337930	0					
ANR	338407	Sizeof	sizeof		337930	0					
ANR	338408	SizeofOperand	php_magic_database		337930	1					
ANR	338409	ExpressionStatement	"map -> p = memcpy ( map -> p , php_magic_database , sizeof ( php_magic_database ) )"	2693:2:59646:59717	337930	1	True				
ANR	338410	AssignmentExpression	"map -> p = memcpy ( map -> p , php_magic_database , sizeof ( php_magic_database ) )"		337930	0		=			
ANR	338411	PtrMemberAccess	map -> p		337930	0					
ANR	338412	Identifier	map		337930	0					
ANR	338413	Identifier	p		337930	1					
ANR	338414	CallExpression	"memcpy ( map -> p , php_magic_database , sizeof ( php_magic_database ) )"		337930	1					
ANR	338415	Callee	memcpy		337930	0					
ANR	338416	Identifier	memcpy		337930	0					
ANR	338417	ArgumentList	map -> p		337930	1					
ANR	338418	Argument	map -> p		337930	0					
ANR	338419	PtrMemberAccess	map -> p		337930	0					
ANR	338420	Identifier	map		337930	0					
ANR	338421	Identifier	p		337930	1					
ANR	338422	Argument	php_magic_database		337930	1					
ANR	338423	Identifier	php_magic_database		337930	0					
ANR	338424	Argument	sizeof ( php_magic_database )		337930	2					
ANR	338425	SizeofExpression	sizeof ( php_magic_database )		337930	0					
ANR	338426	Sizeof	sizeof		337930	0					
ANR	338427	SizeofOperand	php_magic_database		337930	1					
ANR	338428	IfStatement	if ( NULL != fn )		337930	82					
ANR	338429	Condition	NULL != fn	2696:5:59728:59737	337930	0	True				
ANR	338430	EqualityExpression	NULL != fn		337930	0		!=			
ANR	338431	Identifier	NULL		337930	0					
ANR	338432	Identifier	fn		337930	1					
ANR	338433	CompoundStatement		98:17:2329:2329	337930	1					
ANR	338434	ExpressionStatement	nentries = ( uint32_t ) ( st . sb . st_size / sizeof ( struct magic ) )	2697:2:59744:59803	337930	0	True				
ANR	338435	AssignmentExpression	nentries = ( uint32_t ) ( st . sb . st_size / sizeof ( struct magic ) )		337930	0		=			
ANR	338436	Identifier	nentries		337930	0					
ANR	338437	CastExpression	( uint32_t ) ( st . sb . st_size / sizeof ( struct magic ) )		337930	1					
ANR	338438	CastTarget	uint32_t		337930	0					
ANR	338439	MultiplicativeExpression	st . sb . st_size / sizeof ( struct magic )		337930	1		/			
ANR	338440	MemberAccess	st . sb . st_size		337930	0					
ANR	338441	MemberAccess	st . sb		337930	0					
ANR	338442	Identifier	st		337930	0					
ANR	338443	Identifier	sb		337930	1					
ANR	338444	Identifier	st_size		337930	1					
ANR	338445	SizeofExpression	sizeof ( struct magic )		337930	1					
ANR	338446	Sizeof	sizeof		337930	0					
ANR	338447	SizeofOperand	struct magic		337930	1					
ANR	338448	ExpressionStatement	entries = ( uint32_t ) ( st . sb . st_size / sizeof ( struct magic ) )	2698:2:59807:59865	337930	1	True				
ANR	338449	AssignmentExpression	entries = ( uint32_t ) ( st . sb . st_size / sizeof ( struct magic ) )		337930	0		=			
ANR	338450	Identifier	entries		337930	0					
ANR	338451	CastExpression	( uint32_t ) ( st . sb . st_size / sizeof ( struct magic ) )		337930	1					
ANR	338452	CastTarget	uint32_t		337930	0					
ANR	338453	MultiplicativeExpression	st . sb . st_size / sizeof ( struct magic )		337930	1		/			
ANR	338454	MemberAccess	st . sb . st_size		337930	0					
ANR	338455	MemberAccess	st . sb		337930	0					
ANR	338456	Identifier	st		337930	0					
ANR	338457	Identifier	sb		337930	1					
ANR	338458	Identifier	st_size		337930	1					
ANR	338459	SizeofExpression	sizeof ( struct magic )		337930	1					
ANR	338460	Sizeof	sizeof		337930	0					
ANR	338461	SizeofOperand	struct magic		337930	1					
ANR	338462	IfStatement	if ( ( off_t ) ( entries * sizeof ( struct magic ) ) != st . sb . st_size )		337930	2					
ANR	338463	Condition	( off_t ) ( entries * sizeof ( struct magic ) ) != st . sb . st_size	2699:6:59873:59928	337930	0	True				
ANR	338464	EqualityExpression	( off_t ) ( entries * sizeof ( struct magic ) ) != st . sb . st_size		337930	0		!=			
ANR	338465	CastExpression	( off_t ) ( entries * sizeof ( struct magic ) )		337930	0					
ANR	338466	CastTarget	off_t		337930	0					
ANR	338467	MultiplicativeExpression	entries * sizeof ( struct magic )		337930	1		*			
ANR	338468	Identifier	entries		337930	0					
ANR	338469	SizeofExpression	sizeof ( struct magic )		337930	1					
ANR	338470	Sizeof	sizeof		337930	0					
ANR	338471	SizeofOperand	struct magic		337930	1					
ANR	338472	MemberAccess	st . sb . st_size		337930	1					
ANR	338473	MemberAccess	st . sb		337930	0					
ANR	338474	Identifier	st		337930	0					
ANR	338475	Identifier	sb		337930	1					
ANR	338476	Identifier	st_size		337930	1					
ANR	338477	CompoundStatement		101:64:2520:2520	337930	1					
ANR	338478	ExpressionStatement	"file_error ( ms , 0 , ""Size of `%s' %llu is not a multiple of %zu"" , dbname , ( unsigned long long ) st . sb . st_size , sizeof ( struct magic ) )"	2700:3:59936:60072	337930	0	True				
ANR	338479	CallExpression	"file_error ( ms , 0 , ""Size of `%s' %llu is not a multiple of %zu"" , dbname , ( unsigned long long ) st . sb . st_size , sizeof ( struct magic ) )"		337930	0					
ANR	338480	Callee	file_error		337930	0					
ANR	338481	Identifier	file_error		337930	0					
ANR	338482	ArgumentList	ms		337930	1					
ANR	338483	Argument	ms		337930	0					
ANR	338484	Identifier	ms		337930	0					
ANR	338485	Argument	0		337930	1					
ANR	338486	PrimaryExpression	0		337930	0					
ANR	338487	Argument	"""Size of `%s' %llu is not a multiple of %zu"""		337930	2					
ANR	338488	PrimaryExpression	"""Size of `%s' %llu is not a multiple of %zu"""		337930	0					
ANR	338489	Argument	dbname		337930	3					
ANR	338490	Identifier	dbname		337930	0					
ANR	338491	Argument	( unsigned long long ) st . sb . st_size		337930	4					
ANR	338492	CastExpression	( unsigned long long ) st . sb . st_size		337930	0					
ANR	338493	CastTarget	unsigned long long		337930	0					
ANR	338494	MemberAccess	st . sb . st_size		337930	1					
ANR	338495	MemberAccess	st . sb		337930	0					
ANR	338496	Identifier	st		337930	0					
ANR	338497	Identifier	sb		337930	1					
ANR	338498	Identifier	st_size		337930	1					
ANR	338499	Argument	sizeof ( struct magic )		337930	5					
ANR	338500	SizeofExpression	sizeof ( struct magic )		337930	0					
ANR	338501	Sizeof	sizeof		337930	0					
ANR	338502	SizeofOperand	struct magic		337930	1					
ANR	338503	GotoStatement	goto error ;	2703:3:60077:60087	337930	1	True				
ANR	338504	Identifier	error		337930	0					
ANR	338505	Statement	map	2706:1:60097:60099	337930	83	True				
ANR	338506	Statement	->	2706:4:60100:60101	337930	84	True				
ANR	338507	Statement	magic	2706:6:60102:60106	337930	85	True				
ANR	338508	Statement	[	2706:11:60107:60107	337930	86	True				
ANR	338509	Statement	0	2706:12:60108:60108	337930	87	True				
ANR	338510	Statement	]	2706:13:60109:60109	337930	88	True				
ANR	338511	Statement	=	2706:15:60111:60111	337930	89	True				
ANR	338512	Statement	CAST	2706:17:60113:60116	337930	90	True				
ANR	338513	Statement	(	2706:21:60117:60117	337930	91	True				
ANR	338514	Statement	struct	2706:22:60118:60123	337930	92	True				
ANR	338515	Statement	magic	2706:29:60125:60129	337930	93	True				
ANR	338516	Statement	*	2706:35:60131:60131	337930	94	True				
ANR	338517	Statement	","	2706:36:60132:60132	337930	95	True				
ANR	338518	Statement	map	2706:38:60134:60136	337930	96	True				
ANR	338519	Statement	->	2706:41:60137:60138	337930	97	True				
ANR	338520	Statement	p	2706:43:60139:60139	337930	98	True				
ANR	338521	Statement	)	2706:44:60140:60140	337930	99	True				
ANR	338522	ExpressionStatement	+ 1	2706:46:60142:60145	337930	100	True				
ANR	338523	UnaryOperationExpression	+ 1		337930	0					
ANR	338524	UnaryOperator	+		337930	0					
ANR	338525	PrimaryExpression	1		337930	1					
ANR	338526	ExpressionStatement	nentries = 0	2707:1:60148:60160	337930	101	True				
ANR	338527	AssignmentExpression	nentries = 0		337930	0		=			
ANR	338528	Identifier	nentries		337930	0					
ANR	338529	PrimaryExpression	0		337930	1					
ANR	338530	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		337930	102					
ANR	338531	ForInit	i = 0 ;	2708:6:60168:60173	337930	0	True				
ANR	338532	AssignmentExpression	i = 0		337930	0		=			
ANR	338533	Identifier	i		337930	0					
ANR	338534	PrimaryExpression	0		337930	1					
ANR	338535	Condition	i < MAGIC_SETS	2708:13:60175:60188	337930	1	True				
ANR	338536	RelationalExpression	i < MAGIC_SETS		337930	0		<			
ANR	338537	Identifier	i		337930	0					
ANR	338538	Identifier	MAGIC_SETS		337930	1					
ANR	338539	PostIncDecOperationExpression	i ++	2708:29:60191:60193	337930	2	True				
ANR	338540	Identifier	i		337930	0					
ANR	338541	IncDec	++		337930	1					
ANR	338542	CompoundStatement		110:34:2785:2785	337930	3					
ANR	338543	IfStatement	if ( needsbyteswap )		337930	0					
ANR	338544	Condition	needsbyteswap	2709:6:60204:60216	337930	0	True				
ANR	338545	Identifier	needsbyteswap		337930	0					
ANR	338546	ExpressionStatement	map -> nmagic [ i ] = swap4 ( ptr [ i + 2 ] )	2710:3:60222:60256	337930	1	True				
ANR	338547	AssignmentExpression	map -> nmagic [ i ] = swap4 ( ptr [ i + 2 ] )		337930	0		=			
ANR	338548	ArrayIndexing	map -> nmagic [ i ]		337930	0					
ANR	338549	PtrMemberAccess	map -> nmagic		337930	0					
ANR	338550	Identifier	map		337930	0					
ANR	338551	Identifier	nmagic		337930	1					
ANR	338552	Identifier	i		337930	1					
ANR	338553	CallExpression	swap4 ( ptr [ i + 2 ] )		337930	1					
ANR	338554	Callee	swap4		337930	0					
ANR	338555	Identifier	swap4		337930	0					
ANR	338556	ArgumentList	ptr [ i + 2 ]		337930	1					
ANR	338557	Argument	ptr [ i + 2 ]		337930	0					
ANR	338558	ArrayIndexing	ptr [ i + 2 ]		337930	0					
ANR	338559	Identifier	ptr		337930	0					
ANR	338560	AdditiveExpression	i + 2		337930	1		+			
ANR	338561	Identifier	i		337930	0					
ANR	338562	PrimaryExpression	2		337930	1					
ANR	338563	ElseStatement	else		337930	0					
ANR	338564	ExpressionStatement	map -> nmagic [ i ] = ptr [ i + 2 ]	2712:3:60268:60295	337930	0	True				
ANR	338565	AssignmentExpression	map -> nmagic [ i ] = ptr [ i + 2 ]		337930	0		=			
ANR	338566	ArrayIndexing	map -> nmagic [ i ]		337930	0					
ANR	338567	PtrMemberAccess	map -> nmagic		337930	0					
ANR	338568	Identifier	map		337930	0					
ANR	338569	Identifier	nmagic		337930	1					
ANR	338570	Identifier	i		337930	1					
ANR	338571	ArrayIndexing	ptr [ i + 2 ]		337930	1					
ANR	338572	Identifier	ptr		337930	0					
ANR	338573	AdditiveExpression	i + 2		337930	1		+			
ANR	338574	Identifier	i		337930	0					
ANR	338575	PrimaryExpression	2		337930	1					
ANR	338576	IfStatement	if ( i != MAGIC_SETS - 1 )		337930	1					
ANR	338577	Condition	i != MAGIC_SETS - 1	2713:6:60303:60321	337930	0	True				
ANR	338578	EqualityExpression	i != MAGIC_SETS - 1		337930	0		!=			
ANR	338579	Identifier	i		337930	0					
ANR	338580	AdditiveExpression	MAGIC_SETS - 1		337930	1		-			
ANR	338581	Identifier	MAGIC_SETS		337930	0					
ANR	338582	PrimaryExpression	1		337930	1					
ANR	338583	ExpressionStatement	map -> magic [ i + 1 ] = map -> magic [ i ] + map -> nmagic [ i ]	2714:3:60327:60377	337930	1	True				
ANR	338584	AssignmentExpression	map -> magic [ i + 1 ] = map -> magic [ i ] + map -> nmagic [ i ]		337930	0		=			
ANR	338585	ArrayIndexing	map -> magic [ i + 1 ]		337930	0					
ANR	338586	PtrMemberAccess	map -> magic		337930	0					
ANR	338587	Identifier	map		337930	0					
ANR	338588	Identifier	magic		337930	1					
ANR	338589	AdditiveExpression	i + 1		337930	1		+			
ANR	338590	Identifier	i		337930	0					
ANR	338591	PrimaryExpression	1		337930	1					
ANR	338592	AdditiveExpression	map -> magic [ i ] + map -> nmagic [ i ]		337930	1		+			
ANR	338593	ArrayIndexing	map -> magic [ i ]		337930	0					
ANR	338594	PtrMemberAccess	map -> magic		337930	0					
ANR	338595	Identifier	map		337930	0					
ANR	338596	Identifier	magic		337930	1					
ANR	338597	Identifier	i		337930	1					
ANR	338598	ArrayIndexing	map -> nmagic [ i ]		337930	1					
ANR	338599	PtrMemberAccess	map -> nmagic		337930	0					
ANR	338600	Identifier	map		337930	0					
ANR	338601	Identifier	nmagic		337930	1					
ANR	338602	Identifier	i		337930	1					
ANR	338603	ExpressionStatement	nentries += map -> nmagic [ i ]	2715:2:60381:60407	337930	2	True				
ANR	338604	AssignmentExpression	nentries += map -> nmagic [ i ]		337930	0		+=			
ANR	338605	Identifier	nentries		337930	0					
ANR	338606	ArrayIndexing	map -> nmagic [ i ]		337930	1					
ANR	338607	PtrMemberAccess	map -> nmagic		337930	0					
ANR	338608	Identifier	map		337930	0					
ANR	338609	Identifier	nmagic		337930	1					
ANR	338610	Identifier	i		337930	1					
ANR	338611	IfStatement	if ( NULL != fn && entries != nentries + 1 )		337930	103					
ANR	338612	Condition	NULL != fn && entries != nentries + 1	2717:5:60417:60453	337930	0	True				
ANR	338613	AndExpression	NULL != fn && entries != nentries + 1		337930	0		&&			
ANR	338614	EqualityExpression	NULL != fn		337930	0		!=			
ANR	338615	Identifier	NULL		337930	0					
ANR	338616	Identifier	fn		337930	1					
ANR	338617	EqualityExpression	entries != nentries + 1		337930	1		!=			
ANR	338618	Identifier	entries		337930	0					
ANR	338619	AdditiveExpression	nentries + 1		337930	1		+			
ANR	338620	Identifier	nentries		337930	0					
ANR	338621	PrimaryExpression	1		337930	1					
ANR	338622	CompoundStatement		119:44:3045:3045	337930	1					
ANR	338623	ExpressionStatement	"file_error ( ms , 0 , ""Inconsistent entries in `%s' %u != %u"" , dbname , entries , nentries + 1 )"	2718:2:60460:60555	337930	0	True				
ANR	338624	CallExpression	"file_error ( ms , 0 , ""Inconsistent entries in `%s' %u != %u"" , dbname , entries , nentries + 1 )"		337930	0					
ANR	338625	Callee	file_error		337930	0					
ANR	338626	Identifier	file_error		337930	0					
ANR	338627	ArgumentList	ms		337930	1					
ANR	338628	Argument	ms		337930	0					
ANR	338629	Identifier	ms		337930	0					
ANR	338630	Argument	0		337930	1					
ANR	338631	PrimaryExpression	0		337930	0					
ANR	338632	Argument	"""Inconsistent entries in `%s' %u != %u"""		337930	2					
ANR	338633	PrimaryExpression	"""Inconsistent entries in `%s' %u != %u"""		337930	0					
ANR	338634	Argument	dbname		337930	3					
ANR	338635	Identifier	dbname		337930	0					
ANR	338636	Argument	entries		337930	4					
ANR	338637	Identifier	entries		337930	0					
ANR	338638	Argument	nentries + 1		337930	5					
ANR	338639	AdditiveExpression	nentries + 1		337930	0		+			
ANR	338640	Identifier	nentries		337930	0					
ANR	338641	PrimaryExpression	1		337930	1					
ANR	338642	GotoStatement	goto error ;	2720:2:60559:60569	337930	1	True				
ANR	338643	Identifier	error		337930	0					
ANR	338644	IfStatement	if ( needsbyteswap )		337930	104					
ANR	338645	Condition	needsbyteswap	2723:5:60580:60592	337930	0	True				
ANR	338646	Identifier	needsbyteswap		337930	0					
ANR	338647	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		337930	1					
ANR	338648	ForInit	i = 0 ;	2724:7:60602:60607	337930	0	True				
ANR	338649	AssignmentExpression	i = 0		337930	0		=			
ANR	338650	Identifier	i		337930	0					
ANR	338651	PrimaryExpression	0		337930	1					
ANR	338652	Condition	i < MAGIC_SETS	2724:14:60609:60622	337930	1	True				
ANR	338653	RelationalExpression	i < MAGIC_SETS		337930	0		<			
ANR	338654	Identifier	i		337930	0					
ANR	338655	Identifier	MAGIC_SETS		337930	1					
ANR	338656	PostIncDecOperationExpression	i ++	2724:30:60625:60627	337930	2	True				
ANR	338657	Identifier	i		337930	0					
ANR	338658	IncDec	++		337930	1					
ANR	338659	ExpressionStatement	"byteswap ( map -> magic [ i ] , map -> nmagic [ i ] )"	2725:3:60633:60672	337930	3	True				
ANR	338660	CallExpression	"byteswap ( map -> magic [ i ] , map -> nmagic [ i ] )"		337930	0					
ANR	338661	Callee	byteswap		337930	0					
ANR	338662	Identifier	byteswap		337930	0					
ANR	338663	ArgumentList	map -> magic [ i ]		337930	1					
ANR	338664	Argument	map -> magic [ i ]		337930	0					
ANR	338665	ArrayIndexing	map -> magic [ i ]		337930	0					
ANR	338666	PtrMemberAccess	map -> magic		337930	0					
ANR	338667	Identifier	map		337930	0					
ANR	338668	Identifier	magic		337930	1					
ANR	338669	Identifier	i		337930	1					
ANR	338670	Argument	map -> nmagic [ i ]		337930	1					
ANR	338671	ArrayIndexing	map -> nmagic [ i ]		337930	0					
ANR	338672	PtrMemberAccess	map -> nmagic		337930	0					
ANR	338673	Identifier	map		337930	0					
ANR	338674	Identifier	nmagic		337930	1					
ANR	338675	Identifier	i		337930	1					
ANR	338676	IfStatement	if ( dbname )		337930	105					
ANR	338677	Condition	dbname	2727:5:60680:60685	337930	0	True				
ANR	338678	Identifier	dbname		337930	0					
ANR	338679	CompoundStatement		129:13:3277:3277	337930	1					
ANR	338680	ExpressionStatement	efree ( dbname )	2728:2:60692:60705	337930	0	True				
ANR	338681	CallExpression	efree ( dbname )		337930	0					
ANR	338682	Callee	efree		337930	0					
ANR	338683	Identifier	efree		337930	0					
ANR	338684	ArgumentList	dbname		337930	1					
ANR	338685	Argument	dbname		337930	0					
ANR	338686	Identifier	dbname		337930	0					
ANR	338687	ReturnStatement	return map ;	2730:1:60711:60721	337930	106	True				
ANR	338688	Identifier	map		337930	0					
ANR	338689	Label	error :	2732:0:60724:60729	337930	107	True				
ANR	338690	Identifier	error		337930	0					
ANR	338691	IfStatement	if ( stream )		337930	108					
ANR	338692	Condition	stream	2733:5:60736:60741	337930	0	True				
ANR	338693	Identifier	stream		337930	0					
ANR	338694	CompoundStatement		135:13:3333:3333	337930	1					
ANR	338695	ExpressionStatement	php_stream_close ( stream )	2734:2:60748:60772	337930	0	True				
ANR	338696	CallExpression	php_stream_close ( stream )		337930	0					
ANR	338697	Callee	php_stream_close		337930	0					
ANR	338698	Identifier	php_stream_close		337930	0					
ANR	338699	ArgumentList	stream		337930	1					
ANR	338700	Argument	stream		337930	0					
ANR	338701	Identifier	stream		337930	0					
ANR	338702	ExpressionStatement	apprentice_unmap ( map )	2736:1:60778:60799	337930	109	True				
ANR	338703	CallExpression	apprentice_unmap ( map )		337930	0					
ANR	338704	Callee	apprentice_unmap		337930	0					
ANR	338705	Identifier	apprentice_unmap		337930	0					
ANR	338706	ArgumentList	map		337930	1					
ANR	338707	Argument	map		337930	0					
ANR	338708	Identifier	map		337930	0					
ANR	338709	IfStatement	if ( dbname )		337930	110					
ANR	338710	Condition	dbname	2737:5:60806:60811	337930	0	True				
ANR	338711	Identifier	dbname		337930	0					
ANR	338712	CompoundStatement		139:13:3403:3403	337930	1					
ANR	338713	ExpressionStatement	efree ( dbname )	2738:2:60818:60831	337930	0	True				
ANR	338714	CallExpression	efree ( dbname )		337930	0					
ANR	338715	Callee	efree		337930	0					
ANR	338716	Identifier	efree		337930	0					
ANR	338717	ArgumentList	dbname		337930	1					
ANR	338718	Argument	dbname		337930	0					
ANR	338719	Identifier	dbname		337930	0					
ANR	338720	ReturnStatement	return NULL ;	2740:1:60837:60848	337930	111	True				
ANR	338721	Identifier	NULL		337930	0					
ANR	338722	ReturnType	struct magic_map *		337930	1					
ANR	338723	Identifier	apprentice_map		337930	2					
ANR	338724	ParameterList	"struct magic_set * ms , const char * fn"		337930	3					
ANR	338725	Parameter	struct magic_set * ms	2598:15:57372:57391	337930	0	True				
ANR	338726	ParameterType	struct magic_set *		337930	0					
ANR	338727	Identifier	ms		337930	1					
ANR	338728	Parameter	const char * fn	2598:37:57394:57407	337930	1	True				
ANR	338729	ParameterType	const char *		337930	0					
ANR	338730	Identifier	fn		337930	1					
ANR	338731	CFGEntryNode	ENTRY		337930		True				
ANR	338732	CFGExitNode	EXIT		337930		True				
ANR	338733	Symbol	VERSIONNO		337930						
ANR	338734	Symbol	nentries		337930						
ANR	338735	Symbol	MAGIC_SETS		337930						
ANR	338736	Symbol	* map		337930						
ANR	338737	Symbol	fn		337930						
ANR	338738	Symbol	& st		337930						
ANR	338739	Symbol	swap4		337930						
ANR	338740	Symbol	php_stream_open_wrapper		337930						
ANR	338741	Symbol	emalloc		337930						
ANR	338742	Symbol	stream		337930						
ANR	338743	Symbol	php_stream_stat_path_ex		337930						
ANR	338744	Symbol	map -> p		337930						
ANR	338745	Symbol	php_magic_database		337930						
ANR	338746	Symbol	st . sb		337930						
ANR	338747	Symbol	* ptr		337930						
ANR	338748	Symbol	map -> magic		337930						
ANR	338749	Symbol	& php_magic_database		337930						
ANR	338750	Symbol	st . sb . st_mode		337930						
ANR	338751	Symbol	map -> nmagic		337930						
ANR	338752	Symbol	* map -> nmagic		337930						
ANR	338753	Symbol	map		337930						
ANR	338754	Symbol	st		337930						
ANR	338755	Symbol	errno		337930						
ANR	338756	Symbol	NULL		337930						
ANR	338757	Symbol	SUCCESS		337930						
ANR	338758	Symbol	S_IFDIR		337930						
ANR	338759	Symbol	ms		337930						
ANR	338760	Symbol	* map -> magic		337930						
ANR	338761	Symbol	map -> len		337930						
ANR	338762	Symbol	i		337930						
ANR	338763	Symbol	version		337930						
ANR	338764	Symbol	ptr		337930						
ANR	338765	Symbol	needsbyteswap		337930						
ANR	338766	Symbol	mkdbname		337930						
ANR	338767	Symbol	* * map		337930						
ANR	338768	Symbol	entries		337930						
ANR	338769	Symbol	* i		337930						
ANR	338770	Symbol	dbname		337930						
ANR	338771	Symbol	REPORT_ERRORS		337930						
ANR	338772	Symbol	php_stream_stat		337930						
ANR	338773	Symbol	st . sb . st_size		337930						
ANR	338774	Symbol	memcpy		337930						
ANR	338775	Symbol	php_stream_read		337930						
ANR	338776	Symbol	MAGICNO		337930						
ANR	338777	DeclStmt									
ANR	338778	Decl							const uint32_t	const uint32_t [ ]	ar
ANR	338779	Function	apprentice_compile	2750:8:60953:62320							
ANR	338780	FunctionDef	"apprentice_compile (struct magic_set * ms , struct magic_map * map , const char * fn)"		338779	0					
ANR	338781	CompoundStatement		2752:0:61037:62320	338779	0					
ANR	338782	Statement	static	2753:1:61040:61045	338779	0	True				
ANR	338783	IdentifierDeclStatement	const size_t nm = sizeof ( * map -> nmagic ) * MAGIC_SETS ;	2753:8:61047:61098	338779	1	True				
ANR	338784	IdentifierDecl	nm = sizeof ( * map -> nmagic ) * MAGIC_SETS		338779	0					
ANR	338785	IdentifierDeclType	const size_t		338779	0					
ANR	338786	Identifier	nm		338779	1					
ANR	338787	AssignmentExpression	nm = sizeof ( * map -> nmagic ) * MAGIC_SETS		338779	2		=			
ANR	338788	Identifier	nm		338779	0					
ANR	338789	MultiplicativeExpression	sizeof ( * map -> nmagic ) * MAGIC_SETS		338779	1		*			
ANR	338790	SizeofExpression	sizeof ( * map -> nmagic )		338779	0					
ANR	338791	Sizeof	sizeof		338779	0					
ANR	338792	UnaryOperationExpression	* map -> nmagic		338779	1					
ANR	338793	UnaryOperator	*		338779	0					
ANR	338794	PtrMemberAccess	map -> nmagic		338779	1					
ANR	338795	Identifier	map		338779	0					
ANR	338796	Identifier	nmagic		338779	1					
ANR	338797	Identifier	MAGIC_SETS		338779	1					
ANR	338798	Statement	static	2754:1:61101:61106	338779	2	True				
ANR	338799	IdentifierDeclStatement	const size_t m = sizeof ( * * map -> magic ) ;	2754:8:61108:61145	338779	3	True				
ANR	338800	IdentifierDecl	m = sizeof ( * * map -> magic )		338779	0					
ANR	338801	IdentifierDeclType	const size_t		338779	0					
ANR	338802	Identifier	m		338779	1					
ANR	338803	AssignmentExpression	m = sizeof ( * * map -> magic )		338779	2		=			
ANR	338804	Identifier	m		338779	0					
ANR	338805	SizeofExpression	sizeof ( * * map -> magic )		338779	1					
ANR	338806	Sizeof	sizeof		338779	0					
ANR	338807	UnaryOperationExpression	* * map -> magic		338779	1					
ANR	338808	UnaryOperator	*		338779	0					
ANR	338809	UnaryOperationExpression	* map -> magic		338779	1					
ANR	338810	UnaryOperator	*		338779	0					
ANR	338811	PtrMemberAccess	map -> magic		338779	1					
ANR	338812	Identifier	map		338779	0					
ANR	338813	Identifier	magic		338779	1					
ANR	338814	IdentifierDeclStatement	int fd = - 1 ;	2755:1:61148:61159	338779	4	True				
ANR	338815	IdentifierDecl	fd = - 1		338779	0					
ANR	338816	IdentifierDeclType	int		338779	0					
ANR	338817	Identifier	fd		338779	1					
ANR	338818	AssignmentExpression	fd = - 1		338779	2		=			
ANR	338819	Identifier	fd		338779	0					
ANR	338820	UnaryOperationExpression	- 1		338779	1					
ANR	338821	UnaryOperator	-		338779	0					
ANR	338822	PrimaryExpression	1		338779	1					
ANR	338823	IdentifierDeclStatement	size_t len ;	2756:1:61162:61172	338779	5	True				
ANR	338824	IdentifierDecl	len		338779	0					
ANR	338825	IdentifierDeclType	size_t		338779	0					
ANR	338826	Identifier	len		338779	1					
ANR	338827	IdentifierDeclStatement	char * dbname ;	2757:1:61175:61187	338779	6	True				
ANR	338828	IdentifierDecl	* dbname		338779	0					
ANR	338829	IdentifierDeclType	char *		338779	0					
ANR	338830	Identifier	dbname		338779	1					
ANR	338831	IdentifierDeclStatement	int rv = - 1 ;	2758:1:61190:61201	338779	7	True				
ANR	338832	IdentifierDecl	rv = - 1		338779	0					
ANR	338833	IdentifierDeclType	int		338779	0					
ANR	338834	Identifier	rv		338779	1					
ANR	338835	AssignmentExpression	rv = - 1		338779	2		=			
ANR	338836	Identifier	rv		338779	0					
ANR	338837	UnaryOperationExpression	- 1		338779	1					
ANR	338838	UnaryOperator	-		338779	0					
ANR	338839	PrimaryExpression	1		338779	1					
ANR	338840	IdentifierDeclStatement	uint32_t i ;	2759:1:61204:61214	338779	8	True				
ANR	338841	IdentifierDecl	i		338779	0					
ANR	338842	IdentifierDeclType	uint32_t		338779	0					
ANR	338843	Identifier	i		338779	1					
ANR	338844	IdentifierDeclStatement	php_stream * stream ;	2760:1:61217:61235	338779	9	True				
ANR	338845	IdentifierDecl	* stream		338779	0					
ANR	338846	IdentifierDeclType	php_stream *		338779	0					
ANR	338847	Identifier	stream		338779	1					
ANR	338848	ExpressionStatement	TSRMLS_FETCH ( )	2762:1:61239:61253	338779	10	True				
ANR	338849	CallExpression	TSRMLS_FETCH ( )		338779	0					
ANR	338850	Callee	TSRMLS_FETCH		338779	0					
ANR	338851	Identifier	TSRMLS_FETCH		338779	0					
ANR	338852	ArgumentList			338779	1					
ANR	338853	ExpressionStatement	"dbname = mkdbname ( ms , fn , 0 )"	2764:1:61257:61285	338779	11	True				
ANR	338854	AssignmentExpression	"dbname = mkdbname ( ms , fn , 0 )"		338779	0		=			
ANR	338855	Identifier	dbname		338779	0					
ANR	338856	CallExpression	"mkdbname ( ms , fn , 0 )"		338779	1					
ANR	338857	Callee	mkdbname		338779	0					
ANR	338858	Identifier	mkdbname		338779	0					
ANR	338859	ArgumentList	ms		338779	1					
ANR	338860	Argument	ms		338779	0					
ANR	338861	Identifier	ms		338779	0					
ANR	338862	Argument	fn		338779	1					
ANR	338863	Identifier	fn		338779	0					
ANR	338864	Argument	0		338779	2					
ANR	338865	PrimaryExpression	0		338779	0					
ANR	338866	IfStatement	if ( dbname == NULL )		338779	12					
ANR	338867	Condition	dbname == NULL	2766:5:61293:61306	338779	0	True				
ANR	338868	EqualityExpression	dbname == NULL		338779	0		==			
ANR	338869	Identifier	dbname		338779	0					
ANR	338870	Identifier	NULL		338779	1					
ANR	338871	GotoStatement	goto out ;	2767:2:61312:61320	338779	1	True				
ANR	338872	Identifier	out		338779	0					
ANR	338873	ExpressionStatement	"stream = php_stream_open_wrapper ( ( char * ) fn , ""wb+"" , REPORT_ERRORS , NULL )"	2770:1:61372:61444	338779	13	True				
ANR	338874	AssignmentExpression	"stream = php_stream_open_wrapper ( ( char * ) fn , ""wb+"" , REPORT_ERRORS , NULL )"		338779	0		=			
ANR	338875	Identifier	stream		338779	0					
ANR	338876	CallExpression	"php_stream_open_wrapper ( ( char * ) fn , ""wb+"" , REPORT_ERRORS , NULL )"		338779	1					
ANR	338877	Callee	php_stream_open_wrapper		338779	0					
ANR	338878	Identifier	php_stream_open_wrapper		338779	0					
ANR	338879	ArgumentList	( char * ) fn		338779	1					
ANR	338880	Argument	( char * ) fn		338779	0					
ANR	338881	CastExpression	( char * ) fn		338779	0					
ANR	338882	CastTarget	char *		338779	0					
ANR	338883	Identifier	fn		338779	1					
ANR	338884	Argument	"""wb+"""		338779	1					
ANR	338885	PrimaryExpression	"""wb+"""		338779	0					
ANR	338886	Argument	REPORT_ERRORS		338779	2					
ANR	338887	Identifier	REPORT_ERRORS		338779	0					
ANR	338888	Argument	NULL		338779	3					
ANR	338889	Identifier	NULL		338779	0					
ANR	338890	IfStatement	if ( ! stream )		338779	14					
ANR	338891	Condition	! stream	2772:5:61452:61458	338779	0	True				
ANR	338892	UnaryOperationExpression	! stream		338779	0					
ANR	338893	UnaryOperator	!		338779	0					
ANR	338894	Identifier	stream		338779	1					
ANR	338895	CompoundStatement		21:14:423:423	338779	1					
ANR	338896	ExpressionStatement	"file_error ( ms , errno , ""cannot open `%s'"" , dbname )"	2773:2:61465:61514	338779	0	True				
ANR	338897	CallExpression	"file_error ( ms , errno , ""cannot open `%s'"" , dbname )"		338779	0					
ANR	338898	Callee	file_error		338779	0					
ANR	338899	Identifier	file_error		338779	0					
ANR	338900	ArgumentList	ms		338779	1					
ANR	338901	Argument	ms		338779	0					
ANR	338902	Identifier	ms		338779	0					
ANR	338903	Argument	errno		338779	1					
ANR	338904	Identifier	errno		338779	0					
ANR	338905	Argument	"""cannot open `%s'"""		338779	2					
ANR	338906	PrimaryExpression	"""cannot open `%s'"""		338779	0					
ANR	338907	Argument	dbname		338779	3					
ANR	338908	Identifier	dbname		338779	0					
ANR	338909	GotoStatement	goto out ;	2774:2:61518:61526	338779	1	True				
ANR	338910	Identifier	out		338779	0					
ANR	338911	IfStatement	"if ( write ( fd , ar , sizeof ( ar ) ) != ( ssize_t ) sizeof ( ar ) )"		338779	15					
ANR	338912	Condition	"write ( fd , ar , sizeof ( ar ) ) != ( ssize_t ) sizeof ( ar )"	2777:5:61537:61584	338779	0	True				
ANR	338913	EqualityExpression	"write ( fd , ar , sizeof ( ar ) ) != ( ssize_t ) sizeof ( ar )"		338779	0		!=			
ANR	338914	CallExpression	"write ( fd , ar , sizeof ( ar ) )"		338779	0					
ANR	338915	Callee	write		338779	0					
ANR	338916	Identifier	write		338779	0					
ANR	338917	ArgumentList	fd		338779	1					
ANR	338918	Argument	fd		338779	0					
ANR	338919	Identifier	fd		338779	0					
ANR	338920	Argument	ar		338779	1					
ANR	338921	Identifier	ar		338779	0					
ANR	338922	Argument	sizeof ( ar )		338779	2					
ANR	338923	SizeofExpression	sizeof ( ar )		338779	0					
ANR	338924	Sizeof	sizeof		338779	0					
ANR	338925	SizeofOperand	ar		338779	1					
ANR	338926	CastExpression	( ssize_t ) sizeof ( ar )		338779	1					
ANR	338927	CastTarget	ssize_t		338779	0					
ANR	338928	SizeofExpression	sizeof ( ar )		338779	1					
ANR	338929	Sizeof	sizeof		338779	0					
ANR	338930	SizeofOperand	ar		338779	1					
ANR	338931	CompoundStatement		26:55:549:549	338779	1					
ANR	338932	ExpressionStatement	"file_error ( ms , errno , ""error writing `%s'"" , dbname )"	2778:2:61591:61642	338779	0	True				
ANR	338933	CallExpression	"file_error ( ms , errno , ""error writing `%s'"" , dbname )"		338779	0					
ANR	338934	Callee	file_error		338779	0					
ANR	338935	Identifier	file_error		338779	0					
ANR	338936	ArgumentList	ms		338779	1					
ANR	338937	Argument	ms		338779	0					
ANR	338938	Identifier	ms		338779	0					
ANR	338939	Argument	errno		338779	1					
ANR	338940	Identifier	errno		338779	0					
ANR	338941	Argument	"""error writing `%s'"""		338779	2					
ANR	338942	PrimaryExpression	"""error writing `%s'"""		338779	0					
ANR	338943	Argument	dbname		338779	3					
ANR	338944	Identifier	dbname		338779	0					
ANR	338945	GotoStatement	goto out ;	2779:2:61646:61654	338779	1	True				
ANR	338946	Identifier	out		338779	0					
ANR	338947	IfStatement	"if ( php_stream_write ( stream , ( const char * ) map -> nmagic , nm ) != ( ssize_t ) nm )"		338779	16					
ANR	338948	Condition	"php_stream_write ( stream , ( const char * ) map -> nmagic , nm ) != ( ssize_t ) nm"	2782:5:61665:61734	338779	0	True				
ANR	338949	EqualityExpression	"php_stream_write ( stream , ( const char * ) map -> nmagic , nm ) != ( ssize_t ) nm"		338779	0		!=			
ANR	338950	CallExpression	"php_stream_write ( stream , ( const char * ) map -> nmagic , nm )"		338779	0					
ANR	338951	Callee	php_stream_write		338779	0					
ANR	338952	Identifier	php_stream_write		338779	0					
ANR	338953	ArgumentList	stream		338779	1					
ANR	338954	Argument	stream		338779	0					
ANR	338955	Identifier	stream		338779	0					
ANR	338956	Argument	( const char * ) map -> nmagic		338779	1					
ANR	338957	CastExpression	( const char * ) map -> nmagic		338779	0					
ANR	338958	CastTarget	const char *		338779	0					
ANR	338959	PtrMemberAccess	map -> nmagic		338779	1					
ANR	338960	Identifier	map		338779	0					
ANR	338961	Identifier	nmagic		338779	1					
ANR	338962	Argument	nm		338779	2					
ANR	338963	Identifier	nm		338779	0					
ANR	338964	CastExpression	( ssize_t ) nm		338779	1					
ANR	338965	CastTarget	ssize_t		338779	0					
ANR	338966	Identifier	nm		338779	1					
ANR	338967	CompoundStatement		31:77:699:699	338779	1					
ANR	338968	ExpressionStatement	"file_error ( ms , errno , ""error writing `%s'"" , dbname )"	2783:2:61741:61792	338779	0	True				
ANR	338969	CallExpression	"file_error ( ms , errno , ""error writing `%s'"" , dbname )"		338779	0					
ANR	338970	Callee	file_error		338779	0					
ANR	338971	Identifier	file_error		338779	0					
ANR	338972	ArgumentList	ms		338779	1					
ANR	338973	Argument	ms		338779	0					
ANR	338974	Identifier	ms		338779	0					
ANR	338975	Argument	errno		338779	1					
ANR	338976	Identifier	errno		338779	0					
ANR	338977	Argument	"""error writing `%s'"""		338779	2					
ANR	338978	PrimaryExpression	"""error writing `%s'"""		338779	0					
ANR	338979	Argument	dbname		338779	3					
ANR	338980	Identifier	dbname		338779	0					
ANR	338981	GotoStatement	goto out ;	2784:2:61796:61804	338779	1	True				
ANR	338982	Identifier	out		338779	0					
ANR	338983	ExpressionStatement	assert ( nm + sizeof ( ar ) < m )	2787:1:61811:61838	338779	17	True				
ANR	338984	CallExpression	assert ( nm + sizeof ( ar ) < m )		338779	0					
ANR	338985	Callee	assert		338779	0					
ANR	338986	Identifier	assert		338779	0					
ANR	338987	ArgumentList	nm + sizeof ( ar ) < m		338779	1					
ANR	338988	Argument	nm + sizeof ( ar ) < m		338779	0					
ANR	338989	RelationalExpression	nm + sizeof ( ar ) < m		338779	0		<			
ANR	338990	AdditiveExpression	nm + sizeof ( ar )		338779	0		+			
ANR	338991	Identifier	nm		338779	0					
ANR	338992	SizeofExpression	sizeof ( ar )		338779	1					
ANR	338993	Sizeof	sizeof		338779	0					
ANR	338994	SizeofOperand	ar		338779	1					
ANR	338995	Identifier	m		338779	1					
ANR	338996	IfStatement	"if ( php_stream_seek ( stream , ( off_t ) sizeof ( struct magic ) , SEEK_SET ) != sizeof ( struct magic ) )"		338779	18					
ANR	338997	Condition	"php_stream_seek ( stream , ( off_t ) sizeof ( struct magic ) , SEEK_SET ) != sizeof ( struct magic )"	2789:5:61846:61930	338779	0	True				
ANR	338998	EqualityExpression	"php_stream_seek ( stream , ( off_t ) sizeof ( struct magic ) , SEEK_SET ) != sizeof ( struct magic )"		338779	0		!=			
ANR	338999	CallExpression	"php_stream_seek ( stream , ( off_t ) sizeof ( struct magic ) , SEEK_SET )"		338779	0					
ANR	339000	Callee	php_stream_seek		338779	0					
ANR	339001	Identifier	php_stream_seek		338779	0					
ANR	339002	ArgumentList	stream		338779	1					
ANR	339003	Argument	stream		338779	0					
ANR	339004	Identifier	stream		338779	0					
ANR	339005	Argument	( off_t ) sizeof ( struct magic )		338779	1					
ANR	339006	CastExpression	( off_t ) sizeof ( struct magic )		338779	0					
ANR	339007	CastTarget	off_t		338779	0					
ANR	339008	SizeofExpression	sizeof ( struct magic )		338779	1					
ANR	339009	Sizeof	sizeof		338779	0					
ANR	339010	SizeofOperand	struct magic		338779	1					
ANR	339011	Argument	SEEK_SET		338779	2					
ANR	339012	Identifier	SEEK_SET		338779	0					
ANR	339013	SizeofExpression	sizeof ( struct magic )		338779	1					
ANR	339014	Sizeof	sizeof		338779	0					
ANR	339015	SizeofOperand	struct magic		338779	1					
ANR	339016	CompoundStatement		38:92:895:895	338779	1					
ANR	339017	ExpressionStatement	"file_error ( ms , errno , ""error seeking `%s'"" , dbname )"	2790:2:61937:61988	338779	0	True				
ANR	339018	CallExpression	"file_error ( ms , errno , ""error seeking `%s'"" , dbname )"		338779	0					
ANR	339019	Callee	file_error		338779	0					
ANR	339020	Identifier	file_error		338779	0					
ANR	339021	ArgumentList	ms		338779	1					
ANR	339022	Argument	ms		338779	0					
ANR	339023	Identifier	ms		338779	0					
ANR	339024	Argument	errno		338779	1					
ANR	339025	Identifier	errno		338779	0					
ANR	339026	Argument	"""error seeking `%s'"""		338779	2					
ANR	339027	PrimaryExpression	"""error seeking `%s'"""		338779	0					
ANR	339028	Argument	dbname		338779	3					
ANR	339029	Identifier	dbname		338779	0					
ANR	339030	GotoStatement	goto out ;	2791:2:61992:62000	338779	1	True				
ANR	339031	Identifier	out		338779	0					
ANR	339032	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		338779	19					
ANR	339033	ForInit	i = 0 ;	2794:6:62012:62017	338779	0	True				
ANR	339034	AssignmentExpression	i = 0		338779	0		=			
ANR	339035	Identifier	i		338779	0					
ANR	339036	PrimaryExpression	0		338779	1					
ANR	339037	Condition	i < MAGIC_SETS	2794:13:62019:62032	338779	1	True				
ANR	339038	RelationalExpression	i < MAGIC_SETS		338779	0		<			
ANR	339039	Identifier	i		338779	0					
ANR	339040	Identifier	MAGIC_SETS		338779	1					
ANR	339041	PostIncDecOperationExpression	i ++	2794:29:62035:62037	338779	2	True				
ANR	339042	Identifier	i		338779	0					
ANR	339043	IncDec	++		338779	1					
ANR	339044	CompoundStatement		43:34:1002:1002	338779	3					
ANR	339045	ExpressionStatement	len = m * map -> nmagic [ i ]	2795:2:62044:62068	338779	0	True				
ANR	339046	AssignmentExpression	len = m * map -> nmagic [ i ]		338779	0		=			
ANR	339047	Identifier	len		338779	0					
ANR	339048	MultiplicativeExpression	m * map -> nmagic [ i ]		338779	1		*			
ANR	339049	Identifier	m		338779	0					
ANR	339050	ArrayIndexing	map -> nmagic [ i ]		338779	1					
ANR	339051	PtrMemberAccess	map -> nmagic		338779	0					
ANR	339052	Identifier	map		338779	0					
ANR	339053	Identifier	nmagic		338779	1					
ANR	339054	Identifier	i		338779	1					
ANR	339055	IfStatement	"if ( php_stream_write ( stream , ( const char * ) map -> magic [ i ] , len ) != ( ssize_t ) len )"		338779	1					
ANR	339056	Condition	"php_stream_write ( stream , ( const char * ) map -> magic [ i ] , len ) != ( ssize_t ) len"	2796:6:62076:62149	338779	0	True				
ANR	339057	EqualityExpression	"php_stream_write ( stream , ( const char * ) map -> magic [ i ] , len ) != ( ssize_t ) len"		338779	0		!=			
ANR	339058	CallExpression	"php_stream_write ( stream , ( const char * ) map -> magic [ i ] , len )"		338779	0					
ANR	339059	Callee	php_stream_write		338779	0					
ANR	339060	Identifier	php_stream_write		338779	0					
ANR	339061	ArgumentList	stream		338779	1					
ANR	339062	Argument	stream		338779	0					
ANR	339063	Identifier	stream		338779	0					
ANR	339064	Argument	( const char * ) map -> magic [ i ]		338779	1					
ANR	339065	CastExpression	( const char * ) map -> magic [ i ]		338779	0					
ANR	339066	CastTarget	const char *		338779	0					
ANR	339067	ArrayIndexing	map -> magic [ i ]		338779	1					
ANR	339068	PtrMemberAccess	map -> magic		338779	0					
ANR	339069	Identifier	map		338779	0					
ANR	339070	Identifier	magic		338779	1					
ANR	339071	Identifier	i		338779	1					
ANR	339072	Argument	len		338779	2					
ANR	339073	Identifier	len		338779	0					
ANR	339074	CastExpression	( ssize_t ) len		338779	1					
ANR	339075	CastTarget	ssize_t		338779	0					
ANR	339076	Identifier	len		338779	1					
ANR	339077	CompoundStatement		45:82:1114:1114	338779	1					
ANR	339078	ExpressionStatement	"file_error ( ms , errno , ""error writing `%s'"" , dbname )"	2797:3:62157:62208	338779	0	True				
ANR	339079	CallExpression	"file_error ( ms , errno , ""error writing `%s'"" , dbname )"		338779	0					
ANR	339080	Callee	file_error		338779	0					
ANR	339081	Identifier	file_error		338779	0					
ANR	339082	ArgumentList	ms		338779	1					
ANR	339083	Argument	ms		338779	0					
ANR	339084	Identifier	ms		338779	0					
ANR	339085	Argument	errno		338779	1					
ANR	339086	Identifier	errno		338779	0					
ANR	339087	Argument	"""error writing `%s'"""		338779	2					
ANR	339088	PrimaryExpression	"""error writing `%s'"""		338779	0					
ANR	339089	Argument	dbname		338779	3					
ANR	339090	Identifier	dbname		338779	0					
ANR	339091	GotoStatement	goto out ;	2798:3:62213:62221	338779	1	True				
ANR	339092	Identifier	out		338779	0					
ANR	339093	IfStatement	if ( stream )		338779	20					
ANR	339094	Condition	stream	2802:5:62236:62241	338779	0	True				
ANR	339095	Identifier	stream		338779	0					
ANR	339096	CompoundStatement		51:13:1206:1206	338779	1					
ANR	339097	ExpressionStatement	php_stream_close ( stream )	2803:2:62248:62272	338779	0	True				
ANR	339098	CallExpression	php_stream_close ( stream )		338779	0					
ANR	339099	Callee	php_stream_close		338779	0					
ANR	339100	Identifier	php_stream_close		338779	0					
ANR	339101	ArgumentList	stream		338779	1					
ANR	339102	Argument	stream		338779	0					
ANR	339103	Identifier	stream		338779	0					
ANR	339104	ExpressionStatement	rv = 0	2806:1:62279:62285	338779	21	True				
ANR	339105	AssignmentExpression	rv = 0		338779	0		=			
ANR	339106	Identifier	rv		338779	0					
ANR	339107	PrimaryExpression	0		338779	1					
ANR	339108	Label	out :	2807:0:62287:62290	338779	22	True				
ANR	339109	Identifier	out		338779	0					
ANR	339110	ExpressionStatement	efree ( dbname )	2808:1:62293:62306	338779	23	True				
ANR	339111	CallExpression	efree ( dbname )		338779	0					
ANR	339112	Callee	efree		338779	0					
ANR	339113	Identifier	efree		338779	0					
ANR	339114	ArgumentList	dbname		338779	1					
ANR	339115	Argument	dbname		338779	0					
ANR	339116	Identifier	dbname		338779	0					
ANR	339117	ReturnStatement	return rv ;	2809:1:62309:62318	338779	24	True				
ANR	339118	Identifier	rv		338779	0					
ANR	339119	ReturnType	int		338779	1					
ANR	339120	Identifier	apprentice_compile		338779	2					
ANR	339121	ParameterList	"struct magic_set * ms , struct magic_map * map , const char * fn"		338779	3					
ANR	339122	Parameter	struct magic_set * ms	2751:19:60976:60995	338779	0	True				
ANR	339123	ParameterType	struct magic_set *		338779	0					
ANR	339124	Identifier	ms		338779	1					
ANR	339125	Parameter	struct magic_map * map	2751:41:60998:61018	338779	1	True				
ANR	339126	ParameterType	struct magic_map *		338779	0					
ANR	339127	Identifier	map		338779	1					
ANR	339128	Parameter	const char * fn	2751:64:61021:61034	338779	2	True				
ANR	339129	ParameterType	const char *		338779	0					
ANR	339130	Identifier	fn		338779	1					
ANR	339131	CFGEntryNode	ENTRY		338779		True				
ANR	339132	CFGExitNode	EXIT		338779		True				
ANR	339133	Symbol	MAGIC_SETS		338779						
ANR	339134	Symbol	rv		338779						
ANR	339135	Symbol	* map		338779						
ANR	339136	Symbol	fn		338779						
ANR	339137	Symbol	php_stream_seek		338779						
ANR	339138	Symbol	php_stream_open_wrapper		338779						
ANR	339139	Symbol	* * map -> magic		338779						
ANR	339140	Symbol	len		338779						
ANR	339141	Symbol	stream		338779						
ANR	339142	Symbol	map -> magic		338779						
ANR	339143	Symbol	map -> nmagic		338779						
ANR	339144	Symbol	* * * map		338779						
ANR	339145	Symbol	* map -> nmagic		338779						
ANR	339146	Symbol	map		338779						
ANR	339147	Symbol	write		338779						
ANR	339148	Symbol	SEEK_SET		338779						
ANR	339149	Symbol	errno		338779						
ANR	339150	Symbol	NULL		338779						
ANR	339151	Symbol	ms		338779						
ANR	339152	Symbol	* map -> magic		338779						
ANR	339153	Symbol	i		338779						
ANR	339154	Symbol	m		338779						
ANR	339155	Symbol	* * map		338779						
ANR	339156	Symbol	mkdbname		338779						
ANR	339157	Symbol	ar		338779						
ANR	339158	Symbol	php_stream_write		338779						
ANR	339159	Symbol	* i		338779						
ANR	339160	Symbol	dbname		338779						
ANR	339161	Symbol	REPORT_ERRORS		338779						
ANR	339162	Symbol	fd		338779						
ANR	339163	Symbol	nm		338779						
ANR	339164	DeclStmt									
ANR	339165	Decl							const char	const char [ ]	ext
ANR	339166	Function	mkdbname	2816:8:62390:63330							
ANR	339167	FunctionDef	"mkdbname (struct magic_set * ms , const char * fn , int strip)"		339166	0					
ANR	339168	CompoundStatement		2818:0:62455:63330	339166	0					
ANR	339169	IdentifierDeclStatement	"const char * p , * q ;"	2819:1:62458:62475	339166	0	True				
ANR	339170	IdentifierDecl	* p		339166	0					
ANR	339171	IdentifierDeclType	const char *		339166	0					
ANR	339172	Identifier	p		339166	1					
ANR	339173	IdentifierDecl	* q		339166	1					
ANR	339174	IdentifierDeclType	const char *		339166	0					
ANR	339175	Identifier	q		339166	1					
ANR	339176	IdentifierDeclStatement	char * buf ;	2820:1:62478:62487	339166	1	True				
ANR	339177	IdentifierDecl	* buf		339166	0					
ANR	339178	IdentifierDeclType	char *		339166	0					
ANR	339179	Identifier	buf		339166	1					
ANR	339180	ExpressionStatement	TSRMLS_FETCH ( )	2821:1:62490:62504	339166	2	True				
ANR	339181	CallExpression	TSRMLS_FETCH ( )		339166	0					
ANR	339182	Callee	TSRMLS_FETCH		339166	0					
ANR	339183	Identifier	TSRMLS_FETCH		339166	0					
ANR	339184	ArgumentList			339166	1					
ANR	339185	IfStatement	if ( strip )		339166	3					
ANR	339186	Condition	strip	2823:5:62512:62516	339166	0	True				
ANR	339187	Identifier	strip		339166	0					
ANR	339188	CompoundStatement		6:12:63:63	339166	1					
ANR	339189	IfStatement	"if ( ( p = strrchr ( fn , '/' ) ) != NULL )"		339166	0					
ANR	339190	Condition	"( p = strrchr ( fn , '/' ) ) != NULL"	2824:6:62527:62556	339166	0	True				
ANR	339191	EqualityExpression	"( p = strrchr ( fn , '/' ) ) != NULL"		339166	0		!=			
ANR	339192	AssignmentExpression	"p = strrchr ( fn , '/' )"		339166	0		=			
ANR	339193	Identifier	p		339166	0					
ANR	339194	CallExpression	"strrchr ( fn , '/' )"		339166	1					
ANR	339195	Callee	strrchr		339166	0					
ANR	339196	Identifier	strrchr		339166	0					
ANR	339197	ArgumentList	fn		339166	1					
ANR	339198	Argument	fn		339166	0					
ANR	339199	Identifier	fn		339166	0					
ANR	339200	Argument	'/'		339166	1					
ANR	339201	PrimaryExpression	'/'		339166	0					
ANR	339202	Identifier	NULL		339166	1					
ANR	339203	ExpressionStatement	fn = ++ p	2825:3:62562:62570	339166	1	True				
ANR	339204	AssignmentExpression	fn = ++ p		339166	0		=			
ANR	339205	Identifier	fn		339166	0					
ANR	339206	UnaryExpression	++ p		339166	1					
ANR	339207	IncDec	++		339166	0					
ANR	339208	Identifier	p		339166	1					
ANR	339209	ForStatement	for ( q = fn ; * q ; q ++ )		339166	4					
ANR	339210	ForInit	q = fn ;	2828:6:62582:62588	339166	0	True				
ANR	339211	AssignmentExpression	q = fn		339166	0		=			
ANR	339212	Identifier	q		339166	0					
ANR	339213	Identifier	fn		339166	1					
ANR	339214	Condition	* q	2828:14:62590:62591	339166	1	True				
ANR	339215	UnaryOperationExpression	* q		339166	0					
ANR	339216	UnaryOperator	*		339166	0					
ANR	339217	Identifier	q		339166	1					
ANR	339218	PostIncDecOperationExpression	q ++	2828:18:62594:62596	339166	2	True				
ANR	339219	Identifier	q		339166	0					
ANR	339220	IncDec	++		339166	1					
ANR	339221	ContinueStatement	continue ;	2829:2:62601:62609	339166	3	True				
ANR	339222	ForStatement	"for ( p = ext + sizeof ( ext ) - 1 ; p >= ext && q >= fn ; p -- , q -- )"		339166	5					
ANR	339223	ForInit	p = ext + sizeof ( ext ) - 1 ;	2831:6:62638:62663	339166	0	True				
ANR	339224	AssignmentExpression	p = ext + sizeof ( ext ) - 1		339166	0		=			
ANR	339225	Identifier	p		339166	0					
ANR	339226	AdditiveExpression	ext + sizeof ( ext ) - 1		339166	1		+			
ANR	339227	Identifier	ext		339166	0					
ANR	339228	AdditiveExpression	sizeof ( ext ) - 1		339166	1		-			
ANR	339229	SizeofExpression	sizeof ( ext )		339166	0					
ANR	339230	Sizeof	sizeof		339166	0					
ANR	339231	SizeofOperand	ext		339166	1					
ANR	339232	PrimaryExpression	1		339166	1					
ANR	339233	Condition	p >= ext && q >= fn	2831:33:62665:62683	339166	1	True				
ANR	339234	AndExpression	p >= ext && q >= fn		339166	0		&&			
ANR	339235	RelationalExpression	p >= ext		339166	0		>=			
ANR	339236	Identifier	p		339166	0					
ANR	339237	Identifier	ext		339166	1					
ANR	339238	RelationalExpression	q >= fn		339166	1		>=			
ANR	339239	Identifier	q		339166	0					
ANR	339240	Identifier	fn		339166	1					
ANR	339241	Expression	"p -- , q --"	2831:54:62686:62693	339166	2	True				
ANR	339242	PostIncDecOperationExpression	p --		339166	0					
ANR	339243	Identifier	p		339166	0					
ANR	339244	IncDec	--		339166	1					
ANR	339245	PostIncDecOperationExpression	q --		339166	1					
ANR	339246	Identifier	q		339166	0					
ANR	339247	IncDec	--		339166	1					
ANR	339248	IfStatement	if ( * p != * q )		339166	3					
ANR	339249	Condition	* p != * q	2832:6:62702:62709	339166	0	True				
ANR	339250	EqualityExpression	* p != * q		339166	0		!=			
ANR	339251	UnaryOperationExpression	* p		339166	0					
ANR	339252	UnaryOperator	*		339166	0					
ANR	339253	Identifier	p		339166	1					
ANR	339254	UnaryOperationExpression	* q		339166	1					
ANR	339255	UnaryOperator	*		339166	0					
ANR	339256	Identifier	q		339166	1					
ANR	339257	BreakStatement	break ;	2833:3:62715:62720	339166	1	True				
ANR	339258	IfStatement	if ( p >= ext )		339166	6					
ANR	339259	Condition	p >= ext	2836:5:62764:62771	339166	0	True				
ANR	339260	RelationalExpression	p >= ext		339166	0		>=			
ANR	339261	Identifier	p		339166	0					
ANR	339262	Identifier	ext		339166	1					
ANR	339263	WhileStatement	while ( * q )		339166	1					
ANR	339264	Condition	* q	2837:9:62783:62784	339166	0	True				
ANR	339265	UnaryOperationExpression	* q		339166	0					
ANR	339266	UnaryOperator	*		339166	0					
ANR	339267	Identifier	q		339166	1					
ANR	339268	ExpressionStatement	q ++	2838:3:62790:62793	339166	1	True				
ANR	339269	PostIncDecOperationExpression	q ++		339166	0					
ANR	339270	Identifier	q		339166	0					
ANR	339271	IncDec	++		339166	1					
ANR	339272	ExpressionStatement	q ++	2840:1:62797:62800	339166	7	True				
ANR	339273	PostIncDecOperationExpression	q ++		339166	0					
ANR	339274	Identifier	q		339166	0					
ANR	339275	IncDec	++		339166	1					
ANR	339276	IfStatement	if ( ms -> flags & MAGIC_MIME )		339166	8					
ANR	339277	Condition	ms -> flags & MAGIC_MIME	2842:5:62863:62884	339166	0	True				
ANR	339278	BitAndExpression	ms -> flags & MAGIC_MIME		339166	0		&			
ANR	339279	PtrMemberAccess	ms -> flags		339166	0					
ANR	339280	Identifier	ms		339166	0					
ANR	339281	Identifier	flags		339166	1					
ANR	339282	Identifier	MAGIC_MIME		339166	1					
ANR	339283	CompoundStatement		25:29:431:431	339166	1					
ANR	339284	ExpressionStatement	"spprintf ( & buf , MAXPATHLEN , ""%.*s.mime%s"" , ( int ) ( q - fn ) , fn , ext )"	2843:2:62891:62956	339166	0	True				
ANR	339285	CallExpression	"spprintf ( & buf , MAXPATHLEN , ""%.*s.mime%s"" , ( int ) ( q - fn ) , fn , ext )"		339166	0					
ANR	339286	Callee	spprintf		339166	0					
ANR	339287	Identifier	spprintf		339166	0					
ANR	339288	ArgumentList	& buf		339166	1					
ANR	339289	Argument	& buf		339166	0					
ANR	339290	UnaryOperationExpression	& buf		339166	0					
ANR	339291	UnaryOperator	&		339166	0					
ANR	339292	Identifier	buf		339166	1					
ANR	339293	Argument	MAXPATHLEN		339166	1					
ANR	339294	Identifier	MAXPATHLEN		339166	0					
ANR	339295	Argument	"""%.*s.mime%s"""		339166	2					
ANR	339296	PrimaryExpression	"""%.*s.mime%s"""		339166	0					
ANR	339297	Argument	( int ) ( q - fn )		339166	3					
ANR	339298	CastExpression	( int ) ( q - fn )		339166	0					
ANR	339299	CastTarget	int		339166	0					
ANR	339300	AdditiveExpression	q - fn		339166	1		-			
ANR	339301	Identifier	q		339166	0					
ANR	339302	Identifier	fn		339166	1					
ANR	339303	Argument	fn		339166	4					
ANR	339304	Identifier	fn		339166	0					
ANR	339305	Argument	ext		339166	5					
ANR	339306	Identifier	ext		339166	0					
ANR	339307	IfStatement	"if ( VCWD_ACCESS ( buf , R_OK ) == 0 )"		339166	1					
ANR	339308	Condition	"VCWD_ACCESS ( buf , R_OK ) == 0"	2845:6:62981:63007	339166	0	True				
ANR	339309	EqualityExpression	"VCWD_ACCESS ( buf , R_OK ) == 0"		339166	0		==			
ANR	339310	CallExpression	"VCWD_ACCESS ( buf , R_OK )"		339166	0					
ANR	339311	Callee	VCWD_ACCESS		339166	0					
ANR	339312	Identifier	VCWD_ACCESS		339166	0					
ANR	339313	ArgumentList	buf		339166	1					
ANR	339314	Argument	buf		339166	0					
ANR	339315	Identifier	buf		339166	0					
ANR	339316	Argument	R_OK		339166	1					
ANR	339317	Identifier	R_OK		339166	0					
ANR	339318	PrimaryExpression	0		339166	1					
ANR	339319	CompoundStatement		28:35:554:554	339166	1					
ANR	339320	ExpressionStatement	ms -> flags &= MAGIC_MIME_TYPE	2849:3:63066:63094	339166	0	True				
ANR	339321	AssignmentExpression	ms -> flags &= MAGIC_MIME_TYPE		339166	0		&=			
ANR	339322	PtrMemberAccess	ms -> flags		339166	0					
ANR	339323	Identifier	ms		339166	0					
ANR	339324	Identifier	flags		339166	1					
ANR	339325	Identifier	MAGIC_MIME_TYPE		339166	1					
ANR	339326	ReturnStatement	return buf ;	2850:3:63099:63109	339166	1	True				
ANR	339327	Identifier	buf		339166	0					
ANR	339328	ExpressionStatement	efree ( buf )	2852:2:63117:63127	339166	2	True				
ANR	339329	CallExpression	efree ( buf )		339166	0					
ANR	339330	Callee	efree		339166	0					
ANR	339331	Identifier	efree		339166	0					
ANR	339332	ArgumentList	buf		339166	1					
ANR	339333	Argument	buf		339166	0					
ANR	339334	Identifier	buf		339166	0					
ANR	339335	ExpressionStatement	"spprintf ( & buf , MAXPATHLEN , ""%.*s%s"" , ( int ) ( q - fn ) , fn , ext )"	2854:1:63133:63193	339166	9	True				
ANR	339336	CallExpression	"spprintf ( & buf , MAXPATHLEN , ""%.*s%s"" , ( int ) ( q - fn ) , fn , ext )"		339166	0					
ANR	339337	Callee	spprintf		339166	0					
ANR	339338	Identifier	spprintf		339166	0					
ANR	339339	ArgumentList	& buf		339166	1					
ANR	339340	Argument	& buf		339166	0					
ANR	339341	UnaryOperationExpression	& buf		339166	0					
ANR	339342	UnaryOperator	&		339166	0					
ANR	339343	Identifier	buf		339166	1					
ANR	339344	Argument	MAXPATHLEN		339166	1					
ANR	339345	Identifier	MAXPATHLEN		339166	0					
ANR	339346	Argument	"""%.*s%s"""		339166	2					
ANR	339347	PrimaryExpression	"""%.*s%s"""		339166	0					
ANR	339348	Argument	( int ) ( q - fn )		339166	3					
ANR	339349	CastExpression	( int ) ( q - fn )		339166	0					
ANR	339350	CastTarget	int		339166	0					
ANR	339351	AdditiveExpression	q - fn		339166	1		-			
ANR	339352	Identifier	q		339166	0					
ANR	339353	Identifier	fn		339166	1					
ANR	339354	Argument	fn		339166	4					
ANR	339355	Identifier	fn		339166	0					
ANR	339356	Argument	ext		339166	5					
ANR	339357	Identifier	ext		339166	0					
ANR	339358	IfStatement	"if ( strstr ( p , "".mime"" ) != NULL )"		339166	10					
ANR	339359	Condition	"strstr ( p , "".mime"" ) != NULL"	2857:5:63257:63282	339166	0	True				
ANR	339360	EqualityExpression	"strstr ( p , "".mime"" ) != NULL"		339166	0		!=			
ANR	339361	CallExpression	"strstr ( p , "".mime"" )"		339166	0					
ANR	339362	Callee	strstr		339166	0					
ANR	339363	Identifier	strstr		339166	0					
ANR	339364	ArgumentList	p		339166	1					
ANR	339365	Argument	p		339166	0					
ANR	339366	Identifier	p		339166	0					
ANR	339367	Argument	""".mime"""		339166	1					
ANR	339368	PrimaryExpression	""".mime"""		339166	0					
ANR	339369	Identifier	NULL		339166	1					
ANR	339370	ExpressionStatement	ms -> flags &= MAGIC_MIME_TYPE	2858:2:63287:63315	339166	1	True				
ANR	339371	AssignmentExpression	ms -> flags &= MAGIC_MIME_TYPE		339166	0		&=			
ANR	339372	PtrMemberAccess	ms -> flags		339166	0					
ANR	339373	Identifier	ms		339166	0					
ANR	339374	Identifier	flags		339166	1					
ANR	339375	Identifier	MAGIC_MIME_TYPE		339166	1					
ANR	339376	ReturnStatement	return buf ;	2859:1:63318:63328	339166	11	True				
ANR	339377	Identifier	buf		339166	0					
ANR	339378	ReturnType	char *		339166	1					
ANR	339379	Identifier	mkdbname		339166	2					
ANR	339380	ParameterList	"struct magic_set * ms , const char * fn , int strip"		339166	3					
ANR	339381	Parameter	struct magic_set * ms	2817:9:62406:62425	339166	0	True				
ANR	339382	ParameterType	struct magic_set *		339166	0					
ANR	339383	Identifier	ms		339166	1					
ANR	339384	Parameter	const char * fn	2817:31:62428:62441	339166	1	True				
ANR	339385	ParameterType	const char *		339166	0					
ANR	339386	Identifier	fn		339166	1					
ANR	339387	Parameter	int strip	2817:47:62444:62452	339166	2	True				
ANR	339388	ParameterType	int		339166	0					
ANR	339389	Identifier	strip		339166	1					
ANR	339390	CFGEntryNode	ENTRY		339166		True				
ANR	339391	CFGExitNode	EXIT		339166		True				
ANR	339392	Symbol	ext		339166						
ANR	339393	Symbol	VCWD_ACCESS		339166						
ANR	339394	Symbol	NULL		339166						
ANR	339395	Symbol	MAGIC_MIME		339166						
ANR	339396	Symbol	ms		339166						
ANR	339397	Symbol	MAGIC_MIME_TYPE		339166						
ANR	339398	Symbol	fn		339166						
ANR	339399	Symbol	* ms		339166						
ANR	339400	Symbol	R_OK		339166						
ANR	339401	Symbol	p		339166						
ANR	339402	Symbol	q		339166						
ANR	339403	Symbol	MAXPATHLEN		339166						
ANR	339404	Symbol	buf		339166						
ANR	339405	Symbol	strip		339166						
ANR	339406	Symbol	strstr		339166						
ANR	339407	Symbol	strrchr		339166						
ANR	339408	Symbol	* p		339166						
ANR	339409	Symbol	* q		339166						
ANR	339410	Symbol	ms -> flags		339166						
ANR	339411	Symbol	& buf		339166						
ANR	339412	Function	byteswap	2865:8:63386:63501							
ANR	339413	FunctionDef	"byteswap (struct magic * magic , uint32_t nmagic)"		339412	0					
ANR	339414	CompoundStatement		2867:0:63438:63501	339412	0					
ANR	339415	IdentifierDeclStatement	uint32_t i ;	2868:1:63441:63451	339412	0	True				
ANR	339416	IdentifierDecl	i		339412	0					
ANR	339417	IdentifierDeclType	uint32_t		339412	0					
ANR	339418	Identifier	i		339412	1					
ANR	339419	ForStatement	for ( i = 0 ; i < nmagic ; i ++ )		339412	1					
ANR	339420	ForInit	i = 0 ;	2869:6:63459:63464	339412	0	True				
ANR	339421	AssignmentExpression	i = 0		339412	0		=			
ANR	339422	Identifier	i		339412	0					
ANR	339423	PrimaryExpression	0		339412	1					
ANR	339424	Condition	i < nmagic	2869:13:63466:63475	339412	1	True				
ANR	339425	RelationalExpression	i < nmagic		339412	0		<			
ANR	339426	Identifier	i		339412	0					
ANR	339427	Identifier	nmagic		339412	1					
ANR	339428	PostIncDecOperationExpression	i ++	2869:25:63478:63480	339412	2	True				
ANR	339429	Identifier	i		339412	0					
ANR	339430	IncDec	++		339412	1					
ANR	339431	ExpressionStatement	bs1 ( & magic [ i ] )	2870:2:63485:63499	339412	3	True				
ANR	339432	CallExpression	bs1 ( & magic [ i ] )		339412	0					
ANR	339433	Callee	bs1		339412	0					
ANR	339434	Identifier	bs1		339412	0					
ANR	339435	ArgumentList	& magic [ i ]		339412	1					
ANR	339436	Argument	& magic [ i ]		339412	0					
ANR	339437	UnaryOperationExpression	& magic [ i ]		339412	0					
ANR	339438	UnaryOperator	&		339412	0					
ANR	339439	ArrayIndexing	magic [ i ]		339412	1					
ANR	339440	Identifier	magic		339412	0					
ANR	339441	Identifier	i		339412	1					
ANR	339442	ReturnType	void		339412	1					
ANR	339443	Identifier	byteswap		339412	2					
ANR	339444	ParameterList	"struct magic * magic , uint32_t nmagic"		339412	3					
ANR	339445	Parameter	struct magic * magic	2866:9:63400:63418	339412	0	True				
ANR	339446	ParameterType	struct magic *		339412	0					
ANR	339447	Identifier	magic		339412	1					
ANR	339448	Parameter	uint32_t nmagic	2866:30:63421:63435	339412	1	True				
ANR	339449	ParameterType	uint32_t		339412	0					
ANR	339450	Identifier	nmagic		339412	1					
ANR	339451	CFGEntryNode	ENTRY		339412		True				
ANR	339452	CFGExitNode	EXIT		339412		True				
ANR	339453	Symbol	magic		339412						
ANR	339454	Symbol	i		339412						
ANR	339455	Symbol	nmagic		339412						
ANR	339456	Function	swap2	2876:8:63535:63697							
ANR	339457	FunctionDef	swap2 (uint16_t sv)		339456	0					
ANR	339458	CompoundStatement		2878:0:63563:63697	339456	0					
ANR	339459	IdentifierDeclStatement	uint16_t rv ;	2879:1:63566:63577	339456	0	True				
ANR	339460	IdentifierDecl	rv		339456	0					
ANR	339461	IdentifierDeclType	uint16_t		339456	0					
ANR	339462	Identifier	rv		339456	1					
ANR	339463	IdentifierDeclStatement	uint8_t * s = ( uint8_t * ) ( void * ) & sv ;	2880:1:63580:63615	339456	1	True				
ANR	339464	IdentifierDecl	* s = ( uint8_t * ) ( void * ) & sv		339456	0					
ANR	339465	IdentifierDeclType	uint8_t *		339456	0					
ANR	339466	Identifier	s		339456	1					
ANR	339467	AssignmentExpression	* s = ( uint8_t * ) ( void * ) & sv		339456	2		=			
ANR	339468	Identifier	s		339456	0					
ANR	339469	CastExpression	( uint8_t * ) ( void * ) & sv		339456	1					
ANR	339470	CastTarget	uint8_t *		339456	0					
ANR	339471	CastExpression	( void * ) & sv		339456	1					
ANR	339472	CastTarget	void *		339456	0					
ANR	339473	UnaryOperationExpression	& sv		339456	1					
ANR	339474	UnaryOperator	&		339456	0					
ANR	339475	Identifier	sv		339456	1					
ANR	339476	IdentifierDeclStatement	uint8_t * d = ( uint8_t * ) ( void * ) & rv ;	2881:1:63619:63654	339456	2	True				
ANR	339477	IdentifierDecl	* d = ( uint8_t * ) ( void * ) & rv		339456	0					
ANR	339478	IdentifierDeclType	uint8_t *		339456	0					
ANR	339479	Identifier	d		339456	1					
ANR	339480	AssignmentExpression	* d = ( uint8_t * ) ( void * ) & rv		339456	2		=			
ANR	339481	Identifier	d		339456	0					
ANR	339482	CastExpression	( uint8_t * ) ( void * ) & rv		339456	1					
ANR	339483	CastTarget	uint8_t *		339456	0					
ANR	339484	CastExpression	( void * ) & rv		339456	1					
ANR	339485	CastTarget	void *		339456	0					
ANR	339486	UnaryOperationExpression	& rv		339456	1					
ANR	339487	UnaryOperator	&		339456	0					
ANR	339488	Identifier	rv		339456	1					
ANR	339489	ExpressionStatement	d [ 0 ] = s [ 1 ]	2882:1:63658:63669	339456	3	True				
ANR	339490	AssignmentExpression	d [ 0 ] = s [ 1 ]		339456	0		=			
ANR	339491	ArrayIndexing	d [ 0 ]		339456	0					
ANR	339492	Identifier	d		339456	0					
ANR	339493	PrimaryExpression	0		339456	1					
ANR	339494	ArrayIndexing	s [ 1 ]		339456	1					
ANR	339495	Identifier	s		339456	0					
ANR	339496	PrimaryExpression	1		339456	1					
ANR	339497	ExpressionStatement	d [ 1 ] = s [ 0 ]	2883:1:63672:63683	339456	4	True				
ANR	339498	AssignmentExpression	d [ 1 ] = s [ 0 ]		339456	0		=			
ANR	339499	ArrayIndexing	d [ 1 ]		339456	0					
ANR	339500	Identifier	d		339456	0					
ANR	339501	PrimaryExpression	1		339456	1					
ANR	339502	ArrayIndexing	s [ 0 ]		339456	1					
ANR	339503	Identifier	s		339456	0					
ANR	339504	PrimaryExpression	0		339456	1					
ANR	339505	ReturnStatement	return rv ;	2884:1:63686:63695	339456	5	True				
ANR	339506	Identifier	rv		339456	0					
ANR	339507	ReturnType	uint16_t		339456	1					
ANR	339508	Identifier	swap2		339456	2					
ANR	339509	ParameterList	uint16_t sv		339456	3					
ANR	339510	Parameter	uint16_t sv	2877:6:63550:63560	339456	0	True				
ANR	339511	ParameterType	uint16_t		339456	0					
ANR	339512	Identifier	sv		339456	1					
ANR	339513	CFGEntryNode	ENTRY		339456		True				
ANR	339514	CFGExitNode	EXIT		339456		True				
ANR	339515	Symbol	sv		339456						
ANR	339516	Symbol	s		339456						
ANR	339517	Symbol	rv		339456						
ANR	339518	Symbol	d		339456						
ANR	339519	Symbol	& sv		339456						
ANR	339520	Symbol	* s		339456						
ANR	339521	Symbol	* d		339456						
ANR	339522	Symbol	& rv		339456						
ANR	339523	Function	swap4	2890:8:63730:63920							
ANR	339524	FunctionDef	swap4 (uint32_t sv)		339523	0					
ANR	339525	CompoundStatement		2892:0:63758:63920	339523	0					
ANR	339526	IdentifierDeclStatement	uint32_t rv ;	2893:1:63761:63772	339523	0	True				
ANR	339527	IdentifierDecl	rv		339523	0					
ANR	339528	IdentifierDeclType	uint32_t		339523	0					
ANR	339529	Identifier	rv		339523	1					
ANR	339530	IdentifierDeclStatement	uint8_t * s = ( uint8_t * ) ( void * ) & sv ;	2894:1:63775:63810	339523	1	True				
ANR	339531	IdentifierDecl	* s = ( uint8_t * ) ( void * ) & sv		339523	0					
ANR	339532	IdentifierDeclType	uint8_t *		339523	0					
ANR	339533	Identifier	s		339523	1					
ANR	339534	AssignmentExpression	* s = ( uint8_t * ) ( void * ) & sv		339523	2		=			
ANR	339535	Identifier	s		339523	0					
ANR	339536	CastExpression	( uint8_t * ) ( void * ) & sv		339523	1					
ANR	339537	CastTarget	uint8_t *		339523	0					
ANR	339538	CastExpression	( void * ) & sv		339523	1					
ANR	339539	CastTarget	void *		339523	0					
ANR	339540	UnaryOperationExpression	& sv		339523	1					
ANR	339541	UnaryOperator	&		339523	0					
ANR	339542	Identifier	sv		339523	1					
ANR	339543	IdentifierDeclStatement	uint8_t * d = ( uint8_t * ) ( void * ) & rv ;	2895:1:63814:63849	339523	2	True				
ANR	339544	IdentifierDecl	* d = ( uint8_t * ) ( void * ) & rv		339523	0					
ANR	339545	IdentifierDeclType	uint8_t *		339523	0					
ANR	339546	Identifier	d		339523	1					
ANR	339547	AssignmentExpression	* d = ( uint8_t * ) ( void * ) & rv		339523	2		=			
ANR	339548	Identifier	d		339523	0					
ANR	339549	CastExpression	( uint8_t * ) ( void * ) & rv		339523	1					
ANR	339550	CastTarget	uint8_t *		339523	0					
ANR	339551	CastExpression	( void * ) & rv		339523	1					
ANR	339552	CastTarget	void *		339523	0					
ANR	339553	UnaryOperationExpression	& rv		339523	1					
ANR	339554	UnaryOperator	&		339523	0					
ANR	339555	Identifier	rv		339523	1					
ANR	339556	ExpressionStatement	d [ 0 ] = s [ 3 ]	2896:1:63853:63864	339523	3	True				
ANR	339557	AssignmentExpression	d [ 0 ] = s [ 3 ]		339523	0		=			
ANR	339558	ArrayIndexing	d [ 0 ]		339523	0					
ANR	339559	Identifier	d		339523	0					
ANR	339560	PrimaryExpression	0		339523	1					
ANR	339561	ArrayIndexing	s [ 3 ]		339523	1					
ANR	339562	Identifier	s		339523	0					
ANR	339563	PrimaryExpression	3		339523	1					
ANR	339564	ExpressionStatement	d [ 1 ] = s [ 2 ]	2897:1:63867:63878	339523	4	True				
ANR	339565	AssignmentExpression	d [ 1 ] = s [ 2 ]		339523	0		=			
ANR	339566	ArrayIndexing	d [ 1 ]		339523	0					
ANR	339567	Identifier	d		339523	0					
ANR	339568	PrimaryExpression	1		339523	1					
ANR	339569	ArrayIndexing	s [ 2 ]		339523	1					
ANR	339570	Identifier	s		339523	0					
ANR	339571	PrimaryExpression	2		339523	1					
ANR	339572	ExpressionStatement	d [ 2 ] = s [ 1 ]	2898:1:63881:63892	339523	5	True				
ANR	339573	AssignmentExpression	d [ 2 ] = s [ 1 ]		339523	0		=			
ANR	339574	ArrayIndexing	d [ 2 ]		339523	0					
ANR	339575	Identifier	d		339523	0					
ANR	339576	PrimaryExpression	2		339523	1					
ANR	339577	ArrayIndexing	s [ 1 ]		339523	1					
ANR	339578	Identifier	s		339523	0					
ANR	339579	PrimaryExpression	1		339523	1					
ANR	339580	ExpressionStatement	d [ 3 ] = s [ 0 ]	2899:1:63895:63906	339523	6	True				
ANR	339581	AssignmentExpression	d [ 3 ] = s [ 0 ]		339523	0		=			
ANR	339582	ArrayIndexing	d [ 3 ]		339523	0					
ANR	339583	Identifier	d		339523	0					
ANR	339584	PrimaryExpression	3		339523	1					
ANR	339585	ArrayIndexing	s [ 0 ]		339523	1					
ANR	339586	Identifier	s		339523	0					
ANR	339587	PrimaryExpression	0		339523	1					
ANR	339588	ReturnStatement	return rv ;	2900:1:63909:63918	339523	7	True				
ANR	339589	Identifier	rv		339523	0					
ANR	339590	ReturnType	uint32_t		339523	1					
ANR	339591	Identifier	swap4		339523	2					
ANR	339592	ParameterList	uint32_t sv		339523	3					
ANR	339593	Parameter	uint32_t sv	2891:6:63745:63755	339523	0	True				
ANR	339594	ParameterType	uint32_t		339523	0					
ANR	339595	Identifier	sv		339523	1					
ANR	339596	CFGEntryNode	ENTRY		339523		True				
ANR	339597	CFGExitNode	EXIT		339523		True				
ANR	339598	Symbol	sv		339523						
ANR	339599	Symbol	s		339523						
ANR	339600	Symbol	rv		339523						
ANR	339601	Symbol	d		339523						
ANR	339602	Symbol	& sv		339523						
ANR	339603	Symbol	* s		339523						
ANR	339604	Symbol	* d		339523						
ANR	339605	Symbol	& rv		339523						
ANR	339606	Function	swap8	2906:8:63953:64330							
ANR	339607	FunctionDef	swap8 (uint64_t sv)		339606	0					
ANR	339608	CompoundStatement		2908:0:63981:64330	339606	0					
ANR	339609	IdentifierDeclStatement	uint64_t rv ;	2909:1:63984:63995	339606	0	True				
ANR	339610	IdentifierDecl	rv		339606	0					
ANR	339611	IdentifierDeclType	uint64_t		339606	0					
ANR	339612	Identifier	rv		339606	1					
ANR	339613	IdentifierDeclStatement	uint8_t * s = ( uint8_t * ) ( void * ) & sv ;	2910:1:63998:64033	339606	1	True				
ANR	339614	IdentifierDecl	* s = ( uint8_t * ) ( void * ) & sv		339606	0					
ANR	339615	IdentifierDeclType	uint8_t *		339606	0					
ANR	339616	Identifier	s		339606	1					
ANR	339617	AssignmentExpression	* s = ( uint8_t * ) ( void * ) & sv		339606	2		=			
ANR	339618	Identifier	s		339606	0					
ANR	339619	CastExpression	( uint8_t * ) ( void * ) & sv		339606	1					
ANR	339620	CastTarget	uint8_t *		339606	0					
ANR	339621	CastExpression	( void * ) & sv		339606	1					
ANR	339622	CastTarget	void *		339606	0					
ANR	339623	UnaryOperationExpression	& sv		339606	1					
ANR	339624	UnaryOperator	&		339606	0					
ANR	339625	Identifier	sv		339606	1					
ANR	339626	IdentifierDeclStatement	uint8_t * d = ( uint8_t * ) ( void * ) & rv ;	2911:1:64037:64072	339606	2	True				
ANR	339627	IdentifierDecl	* d = ( uint8_t * ) ( void * ) & rv		339606	0					
ANR	339628	IdentifierDeclType	uint8_t *		339606	0					
ANR	339629	Identifier	d		339606	1					
ANR	339630	AssignmentExpression	* d = ( uint8_t * ) ( void * ) & rv		339606	2		=			
ANR	339631	Identifier	d		339606	0					
ANR	339632	CastExpression	( uint8_t * ) ( void * ) & rv		339606	1					
ANR	339633	CastTarget	uint8_t *		339606	0					
ANR	339634	CastExpression	( void * ) & rv		339606	1					
ANR	339635	CastTarget	void *		339606	0					
ANR	339636	UnaryOperationExpression	& rv		339606	1					
ANR	339637	UnaryOperator	&		339606	0					
ANR	339638	Identifier	rv		339606	1					
ANR	339639	ExpressionStatement	d [ 0 ] = s [ 3 ]	2913:1:64082:64093	339606	3	True				
ANR	339640	AssignmentExpression	d [ 0 ] = s [ 3 ]		339606	0		=			
ANR	339641	ArrayIndexing	d [ 0 ]		339606	0					
ANR	339642	Identifier	d		339606	0					
ANR	339643	PrimaryExpression	0		339606	1					
ANR	339644	ArrayIndexing	s [ 3 ]		339606	1					
ANR	339645	Identifier	s		339606	0					
ANR	339646	PrimaryExpression	3		339606	1					
ANR	339647	ExpressionStatement	d [ 1 ] = s [ 2 ]	2914:1:64096:64107	339606	4	True				
ANR	339648	AssignmentExpression	d [ 1 ] = s [ 2 ]		339606	0		=			
ANR	339649	ArrayIndexing	d [ 1 ]		339606	0					
ANR	339650	Identifier	d		339606	0					
ANR	339651	PrimaryExpression	1		339606	1					
ANR	339652	ArrayIndexing	s [ 2 ]		339606	1					
ANR	339653	Identifier	s		339606	0					
ANR	339654	PrimaryExpression	2		339606	1					
ANR	339655	ExpressionStatement	d [ 2 ] = s [ 1 ]	2915:1:64110:64121	339606	5	True				
ANR	339656	AssignmentExpression	d [ 2 ] = s [ 1 ]		339606	0		=			
ANR	339657	ArrayIndexing	d [ 2 ]		339606	0					
ANR	339658	Identifier	d		339606	0					
ANR	339659	PrimaryExpression	2		339606	1					
ANR	339660	ArrayIndexing	s [ 1 ]		339606	1					
ANR	339661	Identifier	s		339606	0					
ANR	339662	PrimaryExpression	1		339606	1					
ANR	339663	ExpressionStatement	d [ 3 ] = s [ 0 ]	2916:1:64124:64135	339606	6	True				
ANR	339664	AssignmentExpression	d [ 3 ] = s [ 0 ]		339606	0		=			
ANR	339665	ArrayIndexing	d [ 3 ]		339606	0					
ANR	339666	Identifier	d		339606	0					
ANR	339667	PrimaryExpression	3		339606	1					
ANR	339668	ArrayIndexing	s [ 0 ]		339606	1					
ANR	339669	Identifier	s		339606	0					
ANR	339670	PrimaryExpression	0		339606	1					
ANR	339671	ExpressionStatement	d [ 4 ] = s [ 7 ]	2917:1:64138:64149	339606	7	True				
ANR	339672	AssignmentExpression	d [ 4 ] = s [ 7 ]		339606	0		=			
ANR	339673	ArrayIndexing	d [ 4 ]		339606	0					
ANR	339674	Identifier	d		339606	0					
ANR	339675	PrimaryExpression	4		339606	1					
ANR	339676	ArrayIndexing	s [ 7 ]		339606	1					
ANR	339677	Identifier	s		339606	0					
ANR	339678	PrimaryExpression	7		339606	1					
ANR	339679	ExpressionStatement	d [ 5 ] = s [ 6 ]	2918:1:64152:64163	339606	8	True				
ANR	339680	AssignmentExpression	d [ 5 ] = s [ 6 ]		339606	0		=			
ANR	339681	ArrayIndexing	d [ 5 ]		339606	0					
ANR	339682	Identifier	d		339606	0					
ANR	339683	PrimaryExpression	5		339606	1					
ANR	339684	ArrayIndexing	s [ 6 ]		339606	1					
ANR	339685	Identifier	s		339606	0					
ANR	339686	PrimaryExpression	6		339606	1					
ANR	339687	ExpressionStatement	d [ 6 ] = s [ 5 ]	2919:1:64166:64177	339606	9	True				
ANR	339688	AssignmentExpression	d [ 6 ] = s [ 5 ]		339606	0		=			
ANR	339689	ArrayIndexing	d [ 6 ]		339606	0					
ANR	339690	Identifier	d		339606	0					
ANR	339691	PrimaryExpression	6		339606	1					
ANR	339692	ArrayIndexing	s [ 5 ]		339606	1					
ANR	339693	Identifier	s		339606	0					
ANR	339694	PrimaryExpression	5		339606	1					
ANR	339695	ExpressionStatement	d [ 7 ] = s [ 4 ]	2920:1:64180:64191	339606	10	True				
ANR	339696	AssignmentExpression	d [ 7 ] = s [ 4 ]		339606	0		=			
ANR	339697	ArrayIndexing	d [ 7 ]		339606	0					
ANR	339698	Identifier	d		339606	0					
ANR	339699	PrimaryExpression	7		339606	1					
ANR	339700	ArrayIndexing	s [ 4 ]		339606	1					
ANR	339701	Identifier	s		339606	0					
ANR	339702	PrimaryExpression	4		339606	1					
ANR	339703	ReturnStatement	return rv ;	2931:1:64319:64328	339606	11	True				
ANR	339704	Identifier	rv		339606	0					
ANR	339705	ReturnType	uint64_t		339606	1					
ANR	339706	Identifier	swap8		339606	2					
ANR	339707	ParameterList	uint64_t sv		339606	3					
ANR	339708	Parameter	uint64_t sv	2907:6:63968:63978	339606	0	True				
ANR	339709	ParameterType	uint64_t		339606	0					
ANR	339710	Identifier	sv		339606	1					
ANR	339711	CFGEntryNode	ENTRY		339606		True				
ANR	339712	CFGExitNode	EXIT		339606		True				
ANR	339713	Symbol	sv		339606						
ANR	339714	Symbol	s		339606						
ANR	339715	Symbol	rv		339606						
ANR	339716	Symbol	d		339606						
ANR	339717	Symbol	& sv		339606						
ANR	339718	Symbol	* s		339606						
ANR	339719	Symbol	* d		339606						
ANR	339720	Symbol	& rv		339606						
ANR	339721	Function	bs1	2937:8:64381:64773							
ANR	339722	FunctionDef	bs1 (struct magic * m)		339721	0					
ANR	339723	CompoundStatement		2939:0:64407:64773	339721	0					
ANR	339724	ExpressionStatement	m -> cont_level = swap2 ( m -> cont_level )	2940:1:64410:64446	339721	0	True				
ANR	339725	AssignmentExpression	m -> cont_level = swap2 ( m -> cont_level )		339721	0		=			
ANR	339726	PtrMemberAccess	m -> cont_level		339721	0					
ANR	339727	Identifier	m		339721	0					
ANR	339728	Identifier	cont_level		339721	1					
ANR	339729	CallExpression	swap2 ( m -> cont_level )		339721	1					
ANR	339730	Callee	swap2		339721	0					
ANR	339731	Identifier	swap2		339721	0					
ANR	339732	ArgumentList	m -> cont_level		339721	1					
ANR	339733	Argument	m -> cont_level		339721	0					
ANR	339734	PtrMemberAccess	m -> cont_level		339721	0					
ANR	339735	Identifier	m		339721	0					
ANR	339736	Identifier	cont_level		339721	1					
ANR	339737	ExpressionStatement	m -> offset = swap4 ( ( uint32_t ) m -> offset )	2941:1:64449:64487	339721	1	True				
ANR	339738	AssignmentExpression	m -> offset = swap4 ( ( uint32_t ) m -> offset )		339721	0		=			
ANR	339739	PtrMemberAccess	m -> offset		339721	0					
ANR	339740	Identifier	m		339721	0					
ANR	339741	Identifier	offset		339721	1					
ANR	339742	CallExpression	swap4 ( ( uint32_t ) m -> offset )		339721	1					
ANR	339743	Callee	swap4		339721	0					
ANR	339744	Identifier	swap4		339721	0					
ANR	339745	ArgumentList	( uint32_t ) m -> offset		339721	1					
ANR	339746	Argument	( uint32_t ) m -> offset		339721	0					
ANR	339747	CastExpression	( uint32_t ) m -> offset		339721	0					
ANR	339748	CastTarget	uint32_t		339721	0					
ANR	339749	PtrMemberAccess	m -> offset		339721	1					
ANR	339750	Identifier	m		339721	0					
ANR	339751	Identifier	offset		339721	1					
ANR	339752	ExpressionStatement	m -> in_offset = swap4 ( ( uint32_t ) m -> in_offset )	2942:1:64490:64534	339721	2	True				
ANR	339753	AssignmentExpression	m -> in_offset = swap4 ( ( uint32_t ) m -> in_offset )		339721	0		=			
ANR	339754	PtrMemberAccess	m -> in_offset		339721	0					
ANR	339755	Identifier	m		339721	0					
ANR	339756	Identifier	in_offset		339721	1					
ANR	339757	CallExpression	swap4 ( ( uint32_t ) m -> in_offset )		339721	1					
ANR	339758	Callee	swap4		339721	0					
ANR	339759	Identifier	swap4		339721	0					
ANR	339760	ArgumentList	( uint32_t ) m -> in_offset		339721	1					
ANR	339761	Argument	( uint32_t ) m -> in_offset		339721	0					
ANR	339762	CastExpression	( uint32_t ) m -> in_offset		339721	0					
ANR	339763	CastTarget	uint32_t		339721	0					
ANR	339764	PtrMemberAccess	m -> in_offset		339721	1					
ANR	339765	Identifier	m		339721	0					
ANR	339766	Identifier	in_offset		339721	1					
ANR	339767	ExpressionStatement	m -> lineno = swap4 ( ( uint32_t ) m -> lineno )	2943:1:64537:64575	339721	3	True				
ANR	339768	AssignmentExpression	m -> lineno = swap4 ( ( uint32_t ) m -> lineno )		339721	0		=			
ANR	339769	PtrMemberAccess	m -> lineno		339721	0					
ANR	339770	Identifier	m		339721	0					
ANR	339771	Identifier	lineno		339721	1					
ANR	339772	CallExpression	swap4 ( ( uint32_t ) m -> lineno )		339721	1					
ANR	339773	Callee	swap4		339721	0					
ANR	339774	Identifier	swap4		339721	0					
ANR	339775	ArgumentList	( uint32_t ) m -> lineno		339721	1					
ANR	339776	Argument	( uint32_t ) m -> lineno		339721	0					
ANR	339777	CastExpression	( uint32_t ) m -> lineno		339721	0					
ANR	339778	CastTarget	uint32_t		339721	0					
ANR	339779	PtrMemberAccess	m -> lineno		339721	1					
ANR	339780	Identifier	m		339721	0					
ANR	339781	Identifier	lineno		339721	1					
ANR	339782	IfStatement	if ( IS_LIBMAGIC_STRING ( m -> type ) )		339721	4					
ANR	339783	Condition	IS_LIBMAGIC_STRING ( m -> type )	2944:5:64582:64608	339721	0	True				
ANR	339784	CallExpression	IS_LIBMAGIC_STRING ( m -> type )		339721	0					
ANR	339785	Callee	IS_LIBMAGIC_STRING		339721	0					
ANR	339786	Identifier	IS_LIBMAGIC_STRING		339721	0					
ANR	339787	ArgumentList	m -> type		339721	1					
ANR	339788	Argument	m -> type		339721	0					
ANR	339789	PtrMemberAccess	m -> type		339721	0					
ANR	339790	Identifier	m		339721	0					
ANR	339791	Identifier	type		339721	1					
ANR	339792	CompoundStatement		6:34:203:203	339721	1					
ANR	339793	ExpressionStatement	m -> str_range = swap4 ( m -> str_range )	2945:2:64615:64649	339721	0	True				
ANR	339794	AssignmentExpression	m -> str_range = swap4 ( m -> str_range )		339721	0		=			
ANR	339795	PtrMemberAccess	m -> str_range		339721	0					
ANR	339796	Identifier	m		339721	0					
ANR	339797	Identifier	str_range		339721	1					
ANR	339798	CallExpression	swap4 ( m -> str_range )		339721	1					
ANR	339799	Callee	swap4		339721	0					
ANR	339800	Identifier	swap4		339721	0					
ANR	339801	ArgumentList	m -> str_range		339721	1					
ANR	339802	Argument	m -> str_range		339721	0					
ANR	339803	PtrMemberAccess	m -> str_range		339721	0					
ANR	339804	Identifier	m		339721	0					
ANR	339805	Identifier	str_range		339721	1					
ANR	339806	ExpressionStatement	m -> str_flags = swap4 ( m -> str_flags )	2946:2:64653:64687	339721	1	True				
ANR	339807	AssignmentExpression	m -> str_flags = swap4 ( m -> str_flags )		339721	0		=			
ANR	339808	PtrMemberAccess	m -> str_flags		339721	0					
ANR	339809	Identifier	m		339721	0					
ANR	339810	Identifier	str_flags		339721	1					
ANR	339811	CallExpression	swap4 ( m -> str_flags )		339721	1					
ANR	339812	Callee	swap4		339721	0					
ANR	339813	Identifier	swap4		339721	0					
ANR	339814	ArgumentList	m -> str_flags		339721	1					
ANR	339815	Argument	m -> str_flags		339721	0					
ANR	339816	PtrMemberAccess	m -> str_flags		339721	0					
ANR	339817	Identifier	m		339721	0					
ANR	339818	Identifier	str_flags		339721	1					
ANR	339819	ElseStatement	else		339721	0					
ANR	339820	CompoundStatement		10:6:290:290	339721	0					
ANR	339821	ExpressionStatement	m -> value . q = swap8 ( m -> value . q )	2949:2:64702:64732	339721	0	True				
ANR	339822	AssignmentExpression	m -> value . q = swap8 ( m -> value . q )		339721	0		=			
ANR	339823	MemberAccess	m -> value . q		339721	0					
ANR	339824	PtrMemberAccess	m -> value		339721	0					
ANR	339825	Identifier	m		339721	0					
ANR	339826	Identifier	value		339721	1					
ANR	339827	Identifier	q		339721	1					
ANR	339828	CallExpression	swap8 ( m -> value . q )		339721	1					
ANR	339829	Callee	swap8		339721	0					
ANR	339830	Identifier	swap8		339721	0					
ANR	339831	ArgumentList	m -> value . q		339721	1					
ANR	339832	Argument	m -> value . q		339721	0					
ANR	339833	MemberAccess	m -> value . q		339721	0					
ANR	339834	PtrMemberAccess	m -> value		339721	0					
ANR	339835	Identifier	m		339721	0					
ANR	339836	Identifier	value		339721	1					
ANR	339837	Identifier	q		339721	1					
ANR	339838	ExpressionStatement	m -> num_mask = swap8 ( m -> num_mask )	2950:2:64736:64768	339721	1	True				
ANR	339839	AssignmentExpression	m -> num_mask = swap8 ( m -> num_mask )		339721	0		=			
ANR	339840	PtrMemberAccess	m -> num_mask		339721	0					
ANR	339841	Identifier	m		339721	0					
ANR	339842	Identifier	num_mask		339721	1					
ANR	339843	CallExpression	swap8 ( m -> num_mask )		339721	1					
ANR	339844	Callee	swap8		339721	0					
ANR	339845	Identifier	swap8		339721	0					
ANR	339846	ArgumentList	m -> num_mask		339721	1					
ANR	339847	Argument	m -> num_mask		339721	0					
ANR	339848	PtrMemberAccess	m -> num_mask		339721	0					
ANR	339849	Identifier	m		339721	0					
ANR	339850	Identifier	num_mask		339721	1					
ANR	339851	ReturnType	void		339721	1					
ANR	339852	Identifier	bs1		339721	2					
ANR	339853	ParameterList	struct magic * m		339721	3					
ANR	339854	Parameter	struct magic * m	2938:4:64390:64404	339721	0	True				
ANR	339855	ParameterType	struct magic *		339721	0					
ANR	339856	Identifier	m		339721	1					
ANR	339857	CFGEntryNode	ENTRY		339721		True				
ANR	339858	CFGExitNode	EXIT		339721		True				
ANR	339859	Symbol	m -> in_offset		339721						
ANR	339860	Symbol	m -> value		339721						
ANR	339861	Symbol	m -> str_flags		339721						
ANR	339862	Symbol	swap8		339721						
ANR	339863	Symbol	m -> value . q		339721						
ANR	339864	Symbol	m -> str_range		339721						
ANR	339865	Symbol	m		339721						
ANR	339866	Symbol	swap4		339721						
ANR	339867	Symbol	m -> num_mask		339721						
ANR	339868	Symbol	m -> type		339721						
ANR	339869	Symbol	m -> offset		339721						
ANR	339870	Symbol	swap2		339721						
ANR	339871	Symbol	IS_LIBMAGIC_STRING		339721						
ANR	339872	Symbol	* m		339721						
ANR	339873	Symbol	m -> cont_level		339721						
ANR	339874	Symbol	m -> lineno		339721						
ANR	339875	Function	file_pstring_length_size	2954:10:64786:65072							
ANR	339876	FunctionDef	file_pstring_length_size (const struct magic * m)		339875	0					
ANR	339877	CompoundStatement		2956:0:64842:65072	339875	0					
ANR	339878	SwitchStatement	switch ( m -> str_flags & PSTRING_LEN )		339875	0					
ANR	339879	Condition	m -> str_flags & PSTRING_LEN	2957:9:64853:64878	339875	0	True				
ANR	339880	BitAndExpression	m -> str_flags & PSTRING_LEN		339875	0		&			
ANR	339881	PtrMemberAccess	m -> str_flags		339875	0					
ANR	339882	Identifier	m		339875	0					
ANR	339883	Identifier	str_flags		339875	1					
ANR	339884	Identifier	PSTRING_LEN		339875	1					
ANR	339885	CompoundStatement		2:37:38:38	339875	1					
ANR	339886	Label	case PSTRING_1_LE :	2958:1:64884:64901	339875	0	True				
ANR	339887	Identifier	PSTRING_1_LE		339875	0					
ANR	339888	ReturnStatement	return 1 ;	2959:2:64905:64913	339875	1	True				
ANR	339889	PrimaryExpression	1		339875	0					
ANR	339890	Label	case PSTRING_2_LE :	2960:1:64916:64933	339875	2	True				
ANR	339891	Identifier	PSTRING_2_LE		339875	0					
ANR	339892	Label	case PSTRING_2_BE :	2961:1:64936:64953	339875	3	True				
ANR	339893	Identifier	PSTRING_2_BE		339875	0					
ANR	339894	ReturnStatement	return 2 ;	2962:2:64957:64965	339875	4	True				
ANR	339895	PrimaryExpression	2		339875	0					
ANR	339896	Label	case PSTRING_4_LE :	2963:1:64968:64985	339875	5	True				
ANR	339897	Identifier	PSTRING_4_LE		339875	0					
ANR	339898	Label	case PSTRING_4_BE :	2964:1:64988:65005	339875	6	True				
ANR	339899	Identifier	PSTRING_4_BE		339875	0					
ANR	339900	ReturnStatement	return 4 ;	2965:2:65009:65017	339875	7	True				
ANR	339901	PrimaryExpression	4		339875	0					
ANR	339902	Label	default :	2966:1:65020:65027	339875	8	True				
ANR	339903	Identifier	default		339875	0					
ANR	339904	ExpressionStatement	abort ( )	2967:2:65031:65038	339875	9	True				
ANR	339905	CallExpression	abort ( )		339875	0					
ANR	339906	Callee	abort		339875	0					
ANR	339907	Identifier	abort		339875	0					
ANR	339908	ArgumentList			339875	1					
ANR	339909	ReturnStatement	return 1 ;	2968:2:65059:65067	339875	10	True				
ANR	339910	PrimaryExpression	1		339875	0					
ANR	339911	ReturnType	size_t		339875	1					
ANR	339912	Identifier	file_pstring_length_size		339875	2					
ANR	339913	ParameterList	const struct magic * m		339875	3					
ANR	339914	Parameter	const struct magic * m	2955:25:64819:64839	339875	0	True				
ANR	339915	ParameterType	const struct magic *		339875	0					
ANR	339916	Identifier	m		339875	1					
ANR	339917	CFGEntryNode	ENTRY		339875		True				
ANR	339918	CFGExitNode	EXIT		339875		True				
ANR	339919	Symbol	PSTRING_LEN		339875						
ANR	339920	Symbol	* m		339875						
ANR	339921	Symbol	m -> str_flags		339875						
ANR	339922	Symbol	m		339875						
ANR	339923	Function	file_pstring_get_length	2971:10:65084:65687							
ANR	339924	FunctionDef	"file_pstring_get_length (const struct magic * m , const char * s)"		339923	0					
ANR	339925	CompoundStatement		2973:0:65153:65687	339923	0					
ANR	339926	IdentifierDeclStatement	size_t len = 0 ;	2974:1:65156:65170	339923	0	True				
ANR	339927	IdentifierDecl	len = 0		339923	0					
ANR	339928	IdentifierDeclType	size_t		339923	0					
ANR	339929	Identifier	len		339923	1					
ANR	339930	AssignmentExpression	len = 0		339923	2		=			
ANR	339931	Identifier	len		339923	0					
ANR	339932	PrimaryExpression	0		339923	1					
ANR	339933	SwitchStatement	switch ( m -> str_flags & PSTRING_LEN )		339923	1					
ANR	339934	Condition	m -> str_flags & PSTRING_LEN	2976:9:65182:65207	339923	0	True				
ANR	339935	BitAndExpression	m -> str_flags & PSTRING_LEN		339923	0		&			
ANR	339936	PtrMemberAccess	m -> str_flags		339923	0					
ANR	339937	Identifier	m		339923	0					
ANR	339938	Identifier	str_flags		339923	1					
ANR	339939	Identifier	PSTRING_LEN		339923	1					
ANR	339940	CompoundStatement		4:37:56:56	339923	1					
ANR	339941	Label	case PSTRING_1_LE :	2977:1:65213:65230	339923	0	True				
ANR	339942	Identifier	PSTRING_1_LE		339923	0					
ANR	339943	ExpressionStatement	len = * s	2978:2:65234:65242	339923	1	True				
ANR	339944	AssignmentExpression	len = * s		339923	0		=			
ANR	339945	Identifier	len		339923	0					
ANR	339946	UnaryOperationExpression	* s		339923	1					
ANR	339947	UnaryOperator	*		339923	0					
ANR	339948	Identifier	s		339923	1					
ANR	339949	BreakStatement	break ;	2979:2:65246:65251	339923	2	True				
ANR	339950	Label	case PSTRING_2_LE :	2980:1:65254:65271	339923	3	True				
ANR	339951	Identifier	PSTRING_2_LE		339923	0					
ANR	339952	ExpressionStatement	len = ( s [ 1 ] << 8 ) | s [ 0 ]	2981:2:65275:65299	339923	4	True				
ANR	339953	AssignmentExpression	len = ( s [ 1 ] << 8 ) | s [ 0 ]		339923	0		=			
ANR	339954	Identifier	len		339923	0					
ANR	339955	InclusiveOrExpression	( s [ 1 ] << 8 ) | s [ 0 ]		339923	1		|			
ANR	339956	ShiftExpression	s [ 1 ] << 8		339923	0		<<			
ANR	339957	ArrayIndexing	s [ 1 ]		339923	0					
ANR	339958	Identifier	s		339923	0					
ANR	339959	PrimaryExpression	1		339923	1					
ANR	339960	PrimaryExpression	8		339923	1					
ANR	339961	ArrayIndexing	s [ 0 ]		339923	1					
ANR	339962	Identifier	s		339923	0					
ANR	339963	PrimaryExpression	0		339923	1					
ANR	339964	BreakStatement	break ;	2982:2:65303:65308	339923	5	True				
ANR	339965	Label	case PSTRING_2_BE :	2983:1:65311:65328	339923	6	True				
ANR	339966	Identifier	PSTRING_2_BE		339923	0					
ANR	339967	ExpressionStatement	len = ( s [ 0 ] << 8 ) | s [ 1 ]	2984:2:65332:65356	339923	7	True				
ANR	339968	AssignmentExpression	len = ( s [ 0 ] << 8 ) | s [ 1 ]		339923	0		=			
ANR	339969	Identifier	len		339923	0					
ANR	339970	InclusiveOrExpression	( s [ 0 ] << 8 ) | s [ 1 ]		339923	1		|			
ANR	339971	ShiftExpression	s [ 0 ] << 8		339923	0		<<			
ANR	339972	ArrayIndexing	s [ 0 ]		339923	0					
ANR	339973	Identifier	s		339923	0					
ANR	339974	PrimaryExpression	0		339923	1					
ANR	339975	PrimaryExpression	8		339923	1					
ANR	339976	ArrayIndexing	s [ 1 ]		339923	1					
ANR	339977	Identifier	s		339923	0					
ANR	339978	PrimaryExpression	1		339923	1					
ANR	339979	BreakStatement	break ;	2985:2:65360:65365	339923	8	True				
ANR	339980	Label	case PSTRING_4_LE :	2986:1:65368:65385	339923	9	True				
ANR	339981	Identifier	PSTRING_4_LE		339923	0					
ANR	339982	ExpressionStatement	len = ( s [ 3 ] << 24 ) | ( s [ 2 ] << 16 ) | ( s [ 1 ] << 8 ) | s [ 0 ]	2987:2:65389:65443	339923	10	True				
ANR	339983	AssignmentExpression	len = ( s [ 3 ] << 24 ) | ( s [ 2 ] << 16 ) | ( s [ 1 ] << 8 ) | s [ 0 ]		339923	0		=			
ANR	339984	Identifier	len		339923	0					
ANR	339985	InclusiveOrExpression	( s [ 3 ] << 24 ) | ( s [ 2 ] << 16 ) | ( s [ 1 ] << 8 ) | s [ 0 ]		339923	1		|			
ANR	339986	ShiftExpression	s [ 3 ] << 24		339923	0		<<			
ANR	339987	ArrayIndexing	s [ 3 ]		339923	0					
ANR	339988	Identifier	s		339923	0					
ANR	339989	PrimaryExpression	3		339923	1					
ANR	339990	PrimaryExpression	24		339923	1					
ANR	339991	InclusiveOrExpression	( s [ 2 ] << 16 ) | ( s [ 1 ] << 8 ) | s [ 0 ]		339923	1		|			
ANR	339992	ShiftExpression	s [ 2 ] << 16		339923	0		<<			
ANR	339993	ArrayIndexing	s [ 2 ]		339923	0					
ANR	339994	Identifier	s		339923	0					
ANR	339995	PrimaryExpression	2		339923	1					
ANR	339996	PrimaryExpression	16		339923	1					
ANR	339997	InclusiveOrExpression	( s [ 1 ] << 8 ) | s [ 0 ]		339923	1		|			
ANR	339998	ShiftExpression	s [ 1 ] << 8		339923	0		<<			
ANR	339999	ArrayIndexing	s [ 1 ]		339923	0					
ANR	340000	Identifier	s		339923	0					
ANR	340001	PrimaryExpression	1		339923	1					
ANR	340002	PrimaryExpression	8		339923	1					
ANR	340003	ArrayIndexing	s [ 0 ]		339923	1					
ANR	340004	Identifier	s		339923	0					
ANR	340005	PrimaryExpression	0		339923	1					
ANR	340006	BreakStatement	break ;	2988:2:65447:65452	339923	11	True				
ANR	340007	Label	case PSTRING_4_BE :	2989:1:65455:65472	339923	12	True				
ANR	340008	Identifier	PSTRING_4_BE		339923	0					
ANR	340009	ExpressionStatement	len = ( s [ 0 ] << 24 ) | ( s [ 1 ] << 16 ) | ( s [ 2 ] << 8 ) | s [ 3 ]	2990:2:65476:65530	339923	13	True				
ANR	340010	AssignmentExpression	len = ( s [ 0 ] << 24 ) | ( s [ 1 ] << 16 ) | ( s [ 2 ] << 8 ) | s [ 3 ]		339923	0		=			
ANR	340011	Identifier	len		339923	0					
ANR	340012	InclusiveOrExpression	( s [ 0 ] << 24 ) | ( s [ 1 ] << 16 ) | ( s [ 2 ] << 8 ) | s [ 3 ]		339923	1		|			
ANR	340013	ShiftExpression	s [ 0 ] << 24		339923	0		<<			
ANR	340014	ArrayIndexing	s [ 0 ]		339923	0					
ANR	340015	Identifier	s		339923	0					
ANR	340016	PrimaryExpression	0		339923	1					
ANR	340017	PrimaryExpression	24		339923	1					
ANR	340018	InclusiveOrExpression	( s [ 1 ] << 16 ) | ( s [ 2 ] << 8 ) | s [ 3 ]		339923	1		|			
ANR	340019	ShiftExpression	s [ 1 ] << 16		339923	0		<<			
ANR	340020	ArrayIndexing	s [ 1 ]		339923	0					
ANR	340021	Identifier	s		339923	0					
ANR	340022	PrimaryExpression	1		339923	1					
ANR	340023	PrimaryExpression	16		339923	1					
ANR	340024	InclusiveOrExpression	( s [ 2 ] << 8 ) | s [ 3 ]		339923	1		|			
ANR	340025	ShiftExpression	s [ 2 ] << 8		339923	0		<<			
ANR	340026	ArrayIndexing	s [ 2 ]		339923	0					
ANR	340027	Identifier	s		339923	0					
ANR	340028	PrimaryExpression	2		339923	1					
ANR	340029	PrimaryExpression	8		339923	1					
ANR	340030	ArrayIndexing	s [ 3 ]		339923	1					
ANR	340031	Identifier	s		339923	0					
ANR	340032	PrimaryExpression	3		339923	1					
ANR	340033	BreakStatement	break ;	2991:2:65534:65539	339923	14	True				
ANR	340034	Label	default :	2992:1:65542:65549	339923	15	True				
ANR	340035	Identifier	default		339923	0					
ANR	340036	ExpressionStatement	abort ( )	2993:2:65553:65560	339923	16	True				
ANR	340037	CallExpression	abort ( )		339923	0					
ANR	340038	Callee	abort		339923	0					
ANR	340039	Identifier	abort		339923	0					
ANR	340040	ArgumentList			339923	1					
ANR	340041	IfStatement	if ( m -> str_flags & PSTRING_LENGTH_INCLUDES_ITSELF )		339923	2					
ANR	340042	Condition	m -> str_flags & PSTRING_LENGTH_INCLUDES_ITSELF	2996:5:65588:65632	339923	0	True				
ANR	340043	BitAndExpression	m -> str_flags & PSTRING_LENGTH_INCLUDES_ITSELF		339923	0		&			
ANR	340044	PtrMemberAccess	m -> str_flags		339923	0					
ANR	340045	Identifier	m		339923	0					
ANR	340046	Identifier	str_flags		339923	1					
ANR	340047	Identifier	PSTRING_LENGTH_INCLUDES_ITSELF		339923	1					
ANR	340048	ExpressionStatement	len -= file_pstring_length_size ( m )	2997:2:65637:65671	339923	1	True				
ANR	340049	AssignmentExpression	len -= file_pstring_length_size ( m )		339923	0		-=			
ANR	340050	Identifier	len		339923	0					
ANR	340051	CallExpression	file_pstring_length_size ( m )		339923	1					
ANR	340052	Callee	file_pstring_length_size		339923	0					
ANR	340053	Identifier	file_pstring_length_size		339923	0					
ANR	340054	ArgumentList	m		339923	1					
ANR	340055	Argument	m		339923	0					
ANR	340056	Identifier	m		339923	0					
ANR	340057	ReturnStatement	return len ;	2999:1:65675:65685	339923	3	True				
ANR	340058	Identifier	len		339923	0					
ANR	340059	ReturnType	size_t		339923	1					
ANR	340060	Identifier	file_pstring_get_length		339923	2					
ANR	340061	ParameterList	"const struct magic * m , const char * s"		339923	3					
ANR	340062	Parameter	const struct magic * m	2972:24:65115:65135	339923	0	True				
ANR	340063	ParameterType	const struct magic *		339923	0					
ANR	340064	Identifier	m		339923	1					
ANR	340065	Parameter	const char * s	2972:47:65138:65150	339923	1	True				
ANR	340066	ParameterType	const char *		339923	0					
ANR	340067	Identifier	s		339923	1					
ANR	340068	CFGEntryNode	ENTRY		339923		True				
ANR	340069	CFGExitNode	EXIT		339923		True				
ANR	340070	Symbol	s		339923						
ANR	340071	Symbol	file_pstring_length_size		339923						
ANR	340072	Symbol	len		339923						
ANR	340073	Symbol	PSTRING_LEN		339923						
ANR	340074	Symbol	* m		339923						
ANR	340075	Symbol	m -> str_flags		339923						
ANR	340076	Symbol	m		339923						
ANR	340077	Symbol	* s		339923						
ANR	340078	Symbol	PSTRING_LENGTH_INCLUDES_ITSELF		339923						
ANR	340079	Function	file_magicfind	3002:10:65700:66249							
ANR	340080	FunctionDef	"file_magicfind (struct magic_set * ms , const char * name , struct mlist * v)"		340079	0					
ANR	340081	CompoundStatement		3004:0:65776:66249	340079	0					
ANR	340082	IdentifierDeclStatement	"uint32_t i , j ;"	3005:1:65779:65792	340079	0	True				
ANR	340083	IdentifierDecl	i		340079	0					
ANR	340084	IdentifierDeclType	uint32_t		340079	0					
ANR	340085	Identifier	i		340079	1					
ANR	340086	IdentifierDecl	j		340079	1					
ANR	340087	IdentifierDeclType	uint32_t		340079	0					
ANR	340088	Identifier	j		340079	1					
ANR	340089	IdentifierDeclStatement	"struct mlist * mlist , * ml ;"	3006:1:65795:65819	340079	1	True				
ANR	340090	IdentifierDecl	* mlist		340079	0					
ANR	340091	IdentifierDeclType	struct mlist *		340079	0					
ANR	340092	Identifier	mlist		340079	1					
ANR	340093	IdentifierDecl	* ml		340079	1					
ANR	340094	IdentifierDeclType	struct mlist *		340079	0					
ANR	340095	Identifier	ml		340079	1					
ANR	340096	ExpressionStatement	mlist = ms -> mlist [ 1 ]	3008:1:65823:65843	340079	2	True				
ANR	340097	AssignmentExpression	mlist = ms -> mlist [ 1 ]		340079	0		=			
ANR	340098	Identifier	mlist		340079	0					
ANR	340099	ArrayIndexing	ms -> mlist [ 1 ]		340079	1					
ANR	340100	PtrMemberAccess	ms -> mlist		340079	0					
ANR	340101	Identifier	ms		340079	0					
ANR	340102	Identifier	mlist		340079	1					
ANR	340103	PrimaryExpression	1		340079	1					
ANR	340104	ForStatement	for ( ml = mlist -> next ; ml != mlist ; ml = ml -> next )		340079	3					
ANR	340105	ForInit	ml = mlist -> next ;	3010:6:65852:65868	340079	0	True				
ANR	340106	AssignmentExpression	ml = mlist -> next		340079	0		=			
ANR	340107	Identifier	ml		340079	0					
ANR	340108	PtrMemberAccess	mlist -> next		340079	1					
ANR	340109	Identifier	mlist		340079	0					
ANR	340110	Identifier	next		340079	1					
ANR	340111	Condition	ml != mlist	3010:24:65870:65880	340079	1	True				
ANR	340112	EqualityExpression	ml != mlist		340079	0		!=			
ANR	340113	Identifier	ml		340079	0					
ANR	340114	Identifier	mlist		340079	1					
ANR	340115	AssignmentExpression	ml = ml -> next	3010:37:65883:65895	340079	2	True	=			
ANR	340116	Identifier	ml		340079	0					
ANR	340117	PtrMemberAccess	ml -> next		340079	1					
ANR	340118	Identifier	ml		340079	0					
ANR	340119	Identifier	next		340079	1					
ANR	340120	CompoundStatement		9:2:157:182	340079	3					
ANR	340121	IdentifierDeclStatement	struct magic * ma = ml -> magic ;	3011:2:65902:65930	340079	0	True				
ANR	340122	IdentifierDecl	* ma = ml -> magic		340079	0					
ANR	340123	IdentifierDeclType	struct magic *		340079	0					
ANR	340124	Identifier	ma		340079	1					
ANR	340125	AssignmentExpression	* ma = ml -> magic		340079	2		=			
ANR	340126	Identifier	ma		340079	0					
ANR	340127	PtrMemberAccess	ml -> magic		340079	1					
ANR	340128	Identifier	ml		340079	0					
ANR	340129	Identifier	magic		340079	1					
ANR	340130	IdentifierDeclStatement	uint32_t nma = ml -> nmagic ;	3012:2:65934:65959	340079	1	True				
ANR	340131	IdentifierDecl	nma = ml -> nmagic		340079	0					
ANR	340132	IdentifierDeclType	uint32_t		340079	0					
ANR	340133	Identifier	nma		340079	1					
ANR	340134	AssignmentExpression	nma = ml -> nmagic		340079	2		=			
ANR	340135	Identifier	nma		340079	0					
ANR	340136	PtrMemberAccess	ml -> nmagic		340079	1					
ANR	340137	Identifier	ml		340079	0					
ANR	340138	Identifier	nmagic		340079	1					
ANR	340139	ForStatement	for ( i = 0 ; i < nma ; i ++ )		340079	2					
ANR	340140	ForInit	i = 0 ;	3013:7:65968:65973	340079	0	True				
ANR	340141	AssignmentExpression	i = 0		340079	0		=			
ANR	340142	Identifier	i		340079	0					
ANR	340143	PrimaryExpression	0		340079	1					
ANR	340144	Condition	i < nma	3013:14:65975:65981	340079	1	True				
ANR	340145	RelationalExpression	i < nma		340079	0		<			
ANR	340146	Identifier	i		340079	0					
ANR	340147	Identifier	nma		340079	1					
ANR	340148	PostIncDecOperationExpression	i ++	3013:23:65984:65986	340079	2	True				
ANR	340149	Identifier	i		340079	0					
ANR	340150	IncDec	++		340079	1					
ANR	340151	CompoundStatement		10:28:212:212	340079	3					
ANR	340152	IfStatement	if ( ma [ i ] . type != FILE_NAME )		340079	0					
ANR	340153	Condition	ma [ i ] . type != FILE_NAME	3014:7:65998:66020	340079	0	True				
ANR	340154	EqualityExpression	ma [ i ] . type != FILE_NAME		340079	0		!=			
ANR	340155	MemberAccess	ma [ i ] . type		340079	0					
ANR	340156	ArrayIndexing	ma [ i ]		340079	0					
ANR	340157	Identifier	ma		340079	0					
ANR	340158	Identifier	i		340079	1					
ANR	340159	Identifier	type		340079	1					
ANR	340160	Identifier	FILE_NAME		340079	1					
ANR	340161	ContinueStatement	continue ;	3015:4:66027:66035	340079	1	True				
ANR	340162	IfStatement	"if ( strcmp ( ma [ i ] . value . s , name ) == 0 )"		340079	1					
ANR	340163	Condition	"strcmp ( ma [ i ] . value . s , name ) == 0"	3016:7:66044:66075	340079	0	True				
ANR	340164	EqualityExpression	"strcmp ( ma [ i ] . value . s , name ) == 0"		340079	0		==			
ANR	340165	CallExpression	"strcmp ( ma [ i ] . value . s , name )"		340079	0					
ANR	340166	Callee	strcmp		340079	0					
ANR	340167	Identifier	strcmp		340079	0					
ANR	340168	ArgumentList	ma [ i ] . value . s		340079	1					
ANR	340169	Argument	ma [ i ] . value . s		340079	0					
ANR	340170	MemberAccess	ma [ i ] . value . s		340079	0					
ANR	340171	MemberAccess	ma [ i ] . value		340079	0					
ANR	340172	ArrayIndexing	ma [ i ]		340079	0					
ANR	340173	Identifier	ma		340079	0					
ANR	340174	Identifier	i		340079	1					
ANR	340175	Identifier	value		340079	1					
ANR	340176	Identifier	s		340079	1					
ANR	340177	Argument	name		340079	1					
ANR	340178	Identifier	name		340079	0					
ANR	340179	PrimaryExpression	0		340079	1					
ANR	340180	CompoundStatement		13:41:301:301	340079	1					
ANR	340181	ExpressionStatement	v -> magic = & ma [ i ]	3017:4:66084:66101	340079	0	True				
ANR	340182	AssignmentExpression	v -> magic = & ma [ i ]		340079	0		=			
ANR	340183	PtrMemberAccess	v -> magic		340079	0					
ANR	340184	Identifier	v		340079	0					
ANR	340185	Identifier	magic		340079	1					
ANR	340186	UnaryOperationExpression	& ma [ i ]		340079	1					
ANR	340187	UnaryOperator	&		340079	0					
ANR	340188	ArrayIndexing	ma [ i ]		340079	1					
ANR	340189	Identifier	ma		340079	0					
ANR	340190	Identifier	i		340079	1					
ANR	340191	ForStatement	for ( j = i + 1 ; j < nma ; j ++ )		340079	1					
ANR	340192	ForInit	j = i + 1 ;	3018:9:66112:66121	340079	0	True				
ANR	340193	AssignmentExpression	j = i + 1		340079	0		=			
ANR	340194	Identifier	j		340079	0					
ANR	340195	AdditiveExpression	i + 1		340079	1		+			
ANR	340196	Identifier	i		340079	0					
ANR	340197	PrimaryExpression	1		340079	1					
ANR	340198	Condition	j < nma	3018:20:66123:66129	340079	1	True				
ANR	340199	RelationalExpression	j < nma		340079	0		<			
ANR	340200	Identifier	j		340079	0					
ANR	340201	Identifier	nma		340079	1					
ANR	340202	PostIncDecOperationExpression	j ++	3018:29:66132:66134	340079	2	True				
ANR	340203	Identifier	j		340079	0					
ANR	340204	IncDec	++		340079	1					
ANR	340205	IfStatement	if ( ma [ j ] . cont_level == 0 )		340079	3					
ANR	340206	Condition	ma [ j ] . cont_level == 0	3019:12:66149:66169	340079	0	True				
ANR	340207	EqualityExpression	ma [ j ] . cont_level == 0		340079	0		==			
ANR	340208	MemberAccess	ma [ j ] . cont_level		340079	0					
ANR	340209	ArrayIndexing	ma [ j ]		340079	0					
ANR	340210	Identifier	ma		340079	0					
ANR	340211	Identifier	j		340079	1					
ANR	340212	Identifier	cont_level		340079	1					
ANR	340213	PrimaryExpression	0		340079	1					
ANR	340214	BreakStatement	break ;	3020:9:66181:66186	340079	1	True				
ANR	340215	ExpressionStatement	v -> nmagic = j - i	3021:4:66192:66209	340079	2	True				
ANR	340216	AssignmentExpression	v -> nmagic = j - i		340079	0		=			
ANR	340217	PtrMemberAccess	v -> nmagic		340079	0					
ANR	340218	Identifier	v		340079	0					
ANR	340219	Identifier	nmagic		340079	1					
ANR	340220	AdditiveExpression	j - i		340079	1		-			
ANR	340221	Identifier	j		340079	0					
ANR	340222	Identifier	i		340079	1					
ANR	340223	ReturnStatement	return 0 ;	3022:4:66215:66223	340079	3	True				
ANR	340224	PrimaryExpression	0		340079	0					
ANR	340225	ReturnStatement	return - 1 ;	3026:1:66238:66247	340079	4	True				
ANR	340226	UnaryOperationExpression	- 1		340079	0					
ANR	340227	UnaryOperator	-		340079	0					
ANR	340228	PrimaryExpression	1		340079	1					
ANR	340229	ReturnType	int		340079	1					
ANR	340230	Identifier	file_magicfind		340079	2					
ANR	340231	ParameterList	"struct magic_set * ms , const char * name , struct mlist * v"		340079	3					
ANR	340232	Parameter	struct magic_set * ms	3003:15:65719:65738	340079	0	True				
ANR	340233	ParameterType	struct magic_set *		340079	0					
ANR	340234	Identifier	ms		340079	1					
ANR	340235	Parameter	const char * name	3003:37:65741:65756	340079	1	True				
ANR	340236	ParameterType	const char *		340079	0					
ANR	340237	Identifier	name		340079	1					
ANR	340238	Parameter	struct mlist * v	3003:55:65759:65773	340079	2	True				
ANR	340239	ParameterType	struct mlist *		340079	0					
ANR	340240	Identifier	v		340079	1					
ANR	340241	CFGEntryNode	ENTRY		340079		True				
ANR	340242	CFGExitNode	EXIT		340079		True				
ANR	340243	Symbol	* v		340079						
ANR	340244	Symbol	nma		340079						
ANR	340245	Symbol	mlist -> next		340079						
ANR	340246	Symbol	ml -> next		340079						
ANR	340247	Symbol	ms -> mlist		340079						
ANR	340248	Symbol	* mlist		340079						
ANR	340249	Symbol	* ml		340079						
ANR	340250	Symbol	ml -> nmagic		340079						
ANR	340251	Symbol	FILE_NAME		340079						
ANR	340252	Symbol	* ms		340079						
ANR	340253	Symbol	* * ms		340079						
ANR	340254	Symbol	ma		340079						
ANR	340255	Symbol	ml -> magic		340079						
ANR	340256	Symbol	ma [ i ] . value		340079						
ANR	340257	Symbol	* ma		340079						
ANR	340258	Symbol	ma [ i ] . type		340079						
ANR	340259	Symbol	ml		340079						
ANR	340260	Symbol	strcmp		340079						
ANR	340261	Symbol	* ms -> mlist		340079						
ANR	340262	Symbol	ms		340079						
ANR	340263	Symbol	i		340079						
ANR	340264	Symbol	j		340079						
ANR	340265	Symbol	v -> magic		340079						
ANR	340266	Symbol	ma [ j ] . cont_level		340079						
ANR	340267	Symbol	* i		340079						
ANR	340268	Symbol	* j		340079						
ANR	340269	Symbol	ma [ i ] . value . s		340079						
ANR	340270	Symbol	v		340079						
ANR	340271	Symbol	v -> nmagic		340079						
ANR	340272	Symbol	name		340079						
ANR	340273	Symbol	mlist		340079						
